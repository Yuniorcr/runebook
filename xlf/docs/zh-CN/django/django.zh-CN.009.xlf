<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="d9363c35de0c24ed2e535f99e48aad5e18fa6e74" translate="yes" xml:space="preserve">
          <source>If you want to restrict the search to a particular template engine, pass the engine&amp;rsquo;s &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;using&lt;/code&gt; argument.</source>
          <target state="translated">如果要将搜索限制为特定的模板引擎，请在 &lt;code&gt;using&lt;/code&gt; 参数中传递引擎的&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1a073b38a0044d193c0986f27e9a3dc2f7954430" translate="yes" xml:space="preserve">
          <source>If you want to return a formset that doesn&amp;rsquo;t include &lt;em&gt;any&lt;/em&gt; pre-existing instances of the model, you can specify an empty QuerySet:</source>
          <target state="translated">如果要返回不包含模型的&lt;em&gt;任何&lt;/em&gt;现有实例的表单集，则可以指定一个空的QuerySet：</target>
        </trans-unit>
        <trans-unit id="453b29d39fc22b0b231d1dc0e97ae3ca82e29dc7" translate="yes" xml:space="preserve">
          <source>If you want to reverse all migrations applied for an app, use the name &lt;code&gt;zero&lt;/code&gt;:</source>
          <target state="translated">如果要撤消所有应用程序迁移，请使用 &lt;code&gt;zero&lt;/code&gt; 名称：</target>
        </trans-unit>
        <trans-unit id="ae90359159ce2a046afee5fe8740de7f9eb423ea" translate="yes" xml:space="preserve">
          <source>If you want to revert all migrations applied for an app, use the name &lt;code&gt;zero&lt;/code&gt;:</source>
          <target state="translated">如果要还原应用程序应用的所有迁移，请使用名称 &lt;code&gt;zero&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="458328755ac20bf1935dfcb1e46e0973d7fa75b0" translate="yes" xml:space="preserve">
          <source>If you want to select a language within a template, you can use the &lt;code&gt;language&lt;/code&gt; template tag:</source>
          <target state="translated">如果要在模板中选择一种语言，则可以使用 &lt;code&gt;language&lt;/code&gt; template标签：</target>
        </trans-unit>
        <trans-unit id="ea255638cee3103be21ce078c6c8eb0e0a82aafb" translate="yes" xml:space="preserve">
          <source>If you want to serve your project in a subdirectory (&lt;code&gt;https://example.com/mysite&lt;/code&gt; in this example), you can add &lt;code&gt;WSGIScriptAlias&lt;/code&gt; to the configuration above:</source>
          <target state="translated">如果要在子目录（此示例中为 &lt;code&gt;https://example.com/mysite&lt;/code&gt; )中提供项目，则可以将 &lt;code&gt;WSGIScriptAlias&lt;/code&gt; 添加到上述配置中：</target>
        </trans-unit>
        <trans-unit id="470d59534ec7120ebb7f43a0559ad898e0a6a691" translate="yes" xml:space="preserve">
          <source>If you want to serve your static files from the same server that&amp;rsquo;s already serving your site, the process may look something like:</source>
          <target state="translated">如果要从已经为您的站点提供服务的同一台服务器提供静态文件，则该过程可能类似于：</target>
        </trans-unit>
        <trans-unit id="d1f072200b67438fce5826bd23e1652372b64f96" translate="yes" xml:space="preserve">
          <source>If you want to specify a field&amp;rsquo;s validators, you can do so by defining the field declaratively and setting its &lt;code&gt;validators&lt;/code&gt; parameter:</source>
          <target state="translated">如果要指定字段的验证器，则可以通过声明性地定义该字段并设置其 &lt;code&gt;validators&lt;/code&gt; 参数来实现：</target>
        </trans-unit>
        <trans-unit id="2045cb8a545994f5940fdb8bb609edfefe504ffd" translate="yes" xml:space="preserve">
          <source>If you want to submit a form or access a session cookie within a frame or iframe, you may need to modify the &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_SAMESITE&quot;&gt;&lt;code&gt;CSRF_COOKIE_SAMESITE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;settings#std:setting-SESSION_COOKIE_SAMESITE&quot;&gt;&lt;code&gt;SESSION_COOKIE_SAMESITE&lt;/code&gt;&lt;/a&gt; settings.</source>
          <target state="translated">如果要在框架或iframe中提交表单或访问会话cookie，则可能需要修改&lt;a href=&quot;settings#std:setting-CSRF_COOKIE_SAMESITE&quot;&gt; &lt;code&gt;CSRF_COOKIE_SAMESITE&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;settings#std:setting-SESSION_COOKIE_SAMESITE&quot;&gt; &lt;code&gt;SESSION_COOKIE_SAMESITE&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="f156652923d4a2867402c1c5d313ea25450f71ae" translate="yes" xml:space="preserve">
          <source>If you want to upload multiple files using one form field, set the &lt;code&gt;multiple&lt;/code&gt; HTML attribute of field&amp;rsquo;s widget:</source>
          <target state="translated">如果要使用一个表单字段上载多个文件，请设置该字段的小部件的 &lt;code&gt;multiple&lt;/code&gt; HTML属性：</target>
        </trans-unit>
        <trans-unit id="45963581a6022c16346e1c2ec6732c8d86176fe6" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;a href=&quot;https://docs.python.org/3/library/pdb.html#module-pdb&quot;&gt;&lt;code&gt;pdb&lt;/code&gt;&lt;/a&gt; while debugging tests, you must disable parallel execution (&lt;code&gt;--parallel=1&lt;/code&gt;). You&amp;rsquo;ll see something like &lt;code&gt;bdb.BdbQuit&lt;/code&gt; if you don&amp;rsquo;t.</source>
          <target state="translated">如果要在调试测试时使用&lt;a href=&quot;https://docs.python.org/3/library/pdb.html#module-pdb&quot;&gt; &lt;code&gt;pdb&lt;/code&gt; ,&lt;/a&gt;则必须禁用并行执行（ &lt;code&gt;--parallel=1&lt;/code&gt; ）。如果没有，您会看到类似 &lt;code&gt;bdb.BdbQuit&lt;/code&gt; 的信息。</target>
        </trans-unit>
        <trans-unit id="09bf01b3a96c96f5b899be6fd6691dca94d0251d" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;code&gt;raise_exception&lt;/code&gt; but also give your users a chance to login first, you can add the &lt;a href=&quot;#django.contrib.auth.decorators.login_required&quot;&gt;&lt;code&gt;login_required()&lt;/code&gt;&lt;/a&gt; decorator:</source>
          <target state="translated">如果要使用 &lt;code&gt;raise_exception&lt;/code&gt; ,但同时又给用户提供了一次登录的机会，则可以添加&lt;a href=&quot;#django.contrib.auth.decorators.login_required&quot;&gt; &lt;code&gt;login_required()&lt;/code&gt; &lt;/a&gt;装饰器：</target>
        </trans-unit>
        <trans-unit id="5dc0b597e5d02af669c0e6dc95f1cbd74aafb742" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;code&gt;{{ MEDIA_URL }}&lt;/code&gt; in your templates, add &lt;code&gt;'django.template.context_processors.media'&lt;/code&gt; in the &lt;code&gt;'context_processors'&lt;/code&gt; option of &lt;a href=&quot;#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果要在模板中使用 &lt;code&gt;{{ MEDIA_URL }}&lt;/code&gt; ，请在&lt;a href=&quot;#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;'context_processors'&lt;/code&gt; 选项中添加 &lt;code&gt;'django.template.context_processors.media'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0c3dd032579f4df0a564516ab9f6887bed67602d" translate="yes" xml:space="preserve">
          <source>If you want to use Django on a production site, use &lt;a href=&quot;https://httpd.apache.org/&quot;&gt;Apache&lt;/a&gt; with &lt;a href=&quot;https://modwsgi.readthedocs.io/en/develop/&quot;&gt;mod_wsgi&lt;/a&gt;. mod_wsgi operates in one of two modes: embedded mode or daemon mode. In embedded mode, mod_wsgi is similar to mod_perl &amp;ndash; it embeds Python within Apache and loads Python code into memory when the server starts. Code stays in memory throughout the life of an Apache process, which leads to significant performance gains over other server arrangements. In daemon mode, mod_wsgi spawns an independent daemon process that handles requests. The daemon process can run as a different user than the Web server, possibly leading to improved security. The daemon process can be restarted without restarting the entire Apache Web server, possibly making refreshing your codebase more seamless. Consult the mod_wsgi documentation to determine which mode is right for your setup. Make sure you have Apache installed with the mod_wsgi module activated. Django will work with any version of Apache that supports mod_wsgi.</source>
          <target state="translated">如果要在生产站点上使用Django，请将&lt;a href=&quot;https://httpd.apache.org/&quot;&gt;Apache&lt;/a&gt;与&lt;a href=&quot;https://modwsgi.readthedocs.io/en/develop/&quot;&gt;mod_wsgi一起使用&lt;/a&gt;。 mod_wsgi在以下两种模式之一中运行：嵌入式模式或守护程序模式。在嵌入式模式下，mod_wsgi与mod_perl相似&amp;ndash;将Python嵌入Apache并在服务器启动时将Python代码加载到内存中。代码在Apache进程的整个生命周期中都保留在内存中，与其他服务器相比，它可以显着提高性能。在守护程序模式下，mod_wsgi产生一个独立的守护进程来处理请求。守护进程可以与Web服务器不同的用户身份运行，这可能会提高安全性。可以在不重新启动整个Apache Web服务器的情况下重新启动守护进程，这可能使刷新代码库更加无缝。请查阅mod_wsgi文档，确定哪种模式适合您的设置。确保已安装了已激活mod_wsgi模块的Apache。Django可以与任何支持mod_wsgi的Apache版本一起使用。</target>
        </trans-unit>
        <trans-unit id="7c92963f8c898d1ccffd90cfaac208f60b5e5b47" translate="yes" xml:space="preserve">
          <source>If you want to use a custom &lt;a href=&quot;../forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt; (for instance to add extra validation), set &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.FormMixin.form_class&quot;&gt;&lt;code&gt;form_class&lt;/code&gt;&lt;/a&gt; on your view.</source>
          <target state="translated">如果要使用自定义&lt;a href=&quot;../forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt;（例如，添加额外的验证），&lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.FormMixin.form_class&quot;&gt; &lt;code&gt;form_class&lt;/code&gt; &lt;/a&gt;在视图上设置form_class。</target>
        </trans-unit>
        <trans-unit id="316d41ea216f94382282cfe3b25a5c07e352a193" translate="yes" xml:space="preserve">
          <source>If you want to use a custom widget with a relation field (i.e. &lt;a href=&quot;../../models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;), make sure you haven&amp;rsquo;t included that field&amp;rsquo;s name in &lt;code&gt;raw_id_fields&lt;/code&gt;, &lt;code&gt;radio_fields&lt;/code&gt;, or &lt;code&gt;autocomplete_fields&lt;/code&gt;.</source>
          <target state="translated">如果要使用带有关系字段的自定义窗口小部件（即&lt;a href=&quot;../../models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;），请确保未在 &lt;code&gt;raw_id_fields&lt;/code&gt; ， &lt;code&gt;radio_fields&lt;/code&gt; 或 &lt;code&gt;autocomplete_fields&lt;/code&gt; 中包含该字段的名称。</target>
        </trans-unit>
        <trans-unit id="72ff3767011b9eb84f053fc485cd959d42700e5b" translate="yes" xml:space="preserve">
          <source>If you want to use a database-backed session, you need to add &lt;code&gt;'django.contrib.sessions'&lt;/code&gt; to your &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">如果要使用数据库支持的会话，则需要在&lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置中添加 &lt;code&gt;'django.contrib.sessions'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c485b12671856cb3f97a146712ef453cc167eaf1" translate="yes" xml:space="preserve">
          <source>If you want to use a different &lt;code&gt;Client&lt;/code&gt; class (for example, a subclass with customized behavior), use the &lt;a href=&quot;#django.test.SimpleTestCase.client_class&quot;&gt;&lt;code&gt;client_class&lt;/code&gt;&lt;/a&gt; class attribute:</source>
          <target state="translated">如果要使用其他 &lt;code&gt;Client&lt;/code&gt; 类（例如，具有自定义行为的子类），请使用&lt;a href=&quot;#django.test.SimpleTestCase.client_class&quot;&gt; &lt;code&gt;client_class&lt;/code&gt; &lt;/a&gt;类属性：</target>
        </trans-unit>
        <trans-unit id="5db65e04d45386782928afe748f9d80b1e108065" translate="yes" xml:space="preserve">
          <source>If you want to use headers to disable caching altogether, &lt;a href=&quot;http/decorators#django.views.decorators.cache.never_cache&quot;&gt;&lt;code&gt;never_cache()&lt;/code&gt;&lt;/a&gt; is a view decorator that adds headers to ensure the response won&amp;rsquo;t be cached by browsers or other caches. Example:</source>
          <target state="translated">如果要使用标&lt;a href=&quot;http/decorators#django.views.decorators.cache.never_cache&quot;&gt; &lt;code&gt;never_cache()&lt;/code&gt; &lt;/a&gt;完全禁用缓存，never_cache（）是一个视图装饰器，它添加标头以确保响应不会被浏览器或其他缓存所缓存。例：</target>
        </trans-unit>
        <trans-unit id="8361c5fa5bdf1c6b873a3e941b8993711b228a02" translate="yes" xml:space="preserve">
          <source>If you want to use the admin layout, extend from &lt;code&gt;admin/base_site.html&lt;/code&gt;:</source>
          <target state="translated">如果要使用管理员布局，请从 &lt;code&gt;admin/base_site.html&lt;/code&gt; 扩展：</target>
        </trans-unit>
        <trans-unit id="186071bb932b421ca839f6a4ddf35ff070f60d16" translate="yes" xml:space="preserve">
          <source>If you want to use these, you will need to deploy Django using &lt;a href=&quot;../howto/deployment/asgi/index&quot;&gt;ASGI&lt;/a&gt; instead.</source>
          <target state="translated">如果要使用它们，则需要使用&lt;a href=&quot;../howto/deployment/asgi/index&quot;&gt;ASGI&lt;/a&gt;部署Django 。</target>
        </trans-unit>
        <trans-unit id="7a82fb0e4828be0c9686fdb58d8239454489f85b" translate="yes" xml:space="preserve">
          <source>If you want to work with model classes or model instances from the &lt;code&gt;from_state&lt;/code&gt; argument in &lt;code&gt;database_forwards()&lt;/code&gt; or &lt;code&gt;database_backwards()&lt;/code&gt;, you must render model states using the &lt;code&gt;clear_delayed_apps_cache()&lt;/code&gt; method to make related models available:</source>
          <target state="translated">如果要通过 &lt;code&gt;database_forwards()&lt;/code&gt; 或 &lt;code&gt;database_backwards()&lt;/code&gt; 中的 &lt;code&gt;from_state&lt;/code&gt; 参数使用模型类或模型实例，则必须使用 &lt;code&gt;clear_delayed_apps_cache()&lt;/code&gt; 方法呈现模型状态，以使相关模型可用：</target>
        </trans-unit>
        <trans-unit id="ddefbc21db307ddde4dcfed071042c3b03fd65a6" translate="yes" xml:space="preserve">
          <source>If you want your custom user model to also work with the admin, your user model must define some additional attributes and methods. These methods allow the admin to control access of the user to admin content:</source>
          <target state="translated">如果你希望你的自定义用户模型也能与管理员一起工作,你的用户模型必须定义一些额外的属性和方法。这些方法允许管理员控制用户对管理员内容的访问。</target>
        </trans-unit>
        <trans-unit id="281b29199ee15df8030aeddb22d5e3ee5ba23b2d" translate="yes" xml:space="preserve">
          <source>If you wanted to add a new manager to the Proxy, without replacing the existing default, you can use the techniques described in the &lt;a href=&quot;managers#custom-managers-and-inheritance&quot;&gt;custom manager&lt;/a&gt; documentation: create a base class containing the new managers and inherit that after the primary base class:</source>
          <target state="translated">如果要向代理添加新的管理器而不替换现有的默认管理器，则可以使用&lt;a href=&quot;managers#custom-managers-and-inheritance&quot;&gt;定制管理器&lt;/a&gt;文档中描述的技术：创建包含新管理器的基类，并在主基类之后继承该基类：</target>
        </trans-unit>
        <trans-unit id="ce151f538ddf72bffbb0e10083ffad1aba038cda" translate="yes" xml:space="preserve">
          <source>If you wanted to add checks to a model manager, you would take the same approach on your subclass of &lt;a href=&quot;db/managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果要向模型管理器添加检查，则可以对&lt;a href=&quot;db/managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt;的子类采用相同的方法。</target>
        </trans-unit>
        <trans-unit id="c6cd0e76c2fef52fb36e48a577f2af1ba781eba5" translate="yes" xml:space="preserve">
          <source>If you wanted to display an inline on the &lt;code&gt;Person&lt;/code&gt; admin add/change pages you need to explicitly define the foreign key since it is unable to do so automatically:</source>
          <target state="translated">如果要在&amp;ldquo; &lt;code&gt;Person&lt;/code&gt; 管理员添加/更改页面上显示内联，则需要显式定义外键，因为它无法自动进行以下操作：</target>
        </trans-unit>
        <trans-unit id="07539613b20b80f84b619ddd76722bd149b459aa" translate="yes" xml:space="preserve">
          <source>If you wanted to retrieve the uploaded file&amp;rsquo;s on-disk filename, or the file&amp;rsquo;s size, you could use the &lt;a href=&quot;../files/file#django.core.files.File.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../files/file#django.core.files.File.size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt; attributes respectively; for more information on the available attributes and methods, see the &lt;a href=&quot;../files/file#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; class reference and the &lt;a href=&quot;../../topics/files&quot;&gt;Managing files&lt;/a&gt; topic guide.</source>
          <target state="translated">如果要检索上载文件的磁盘上文件名或文件大小，则可以分别使用&lt;a href=&quot;../files/file#django.core.files.File.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../files/file#django.core.files.File.size&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt;属性。有关可用属性和方法的更多信息，请参见&amp;ldquo; &lt;a href=&quot;../files/file#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;类参考&amp;rdquo;和&amp;ldquo; &lt;a href=&quot;../../topics/files&quot;&gt;管理文件&amp;rdquo;&lt;/a&gt;主题指南。</target>
        </trans-unit>
        <trans-unit id="b0b81a58992bc81d6e10a12990d5032b8172bb7a" translate="yes" xml:space="preserve">
          <source>If you wish to call a function with a &lt;code&gt;using&lt;/code&gt; parameter you can do it by wrapping the call with a &lt;code&gt;lambda&lt;/code&gt; to add an extra parameter:</source>
          <target state="translated">如果您希望 &lt;code&gt;using&lt;/code&gt; 参数来调用函数，则可以通过用 &lt;code&gt;lambda&lt;/code&gt; 包裹调用来添加额外的参数来实现：</target>
        </trans-unit>
        <trans-unit id="f26de0b1fb03d0b7c3a7b0c5f5e0aa437ee3f542" translate="yes" xml:space="preserve">
          <source>If you wish to change the index, login or logout templates, you are better off creating your own &lt;code&gt;AdminSite&lt;/code&gt; instance (see below), and changing the &lt;a href=&quot;#django.contrib.admin.AdminSite.index_template&quot;&gt;&lt;code&gt;AdminSite.index_template&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;#django.contrib.admin.AdminSite.login_template&quot;&gt;&lt;code&gt;AdminSite.login_template&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.contrib.admin.AdminSite.logout_template&quot;&gt;&lt;code&gt;AdminSite.logout_template&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="translated">如果要更改索引，登录或注销模板，最好创建自己的 &lt;code&gt;AdminSite&lt;/code&gt; 实例（请参见下文），并更改&lt;a href=&quot;#django.contrib.admin.AdminSite.index_template&quot;&gt; &lt;code&gt;AdminSite.index_template&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#django.contrib.admin.AdminSite.login_template&quot;&gt; &lt;code&gt;AdminSite.login_template&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#django.contrib.admin.AdminSite.logout_template&quot;&gt; &lt;code&gt;AdminSite.logout_template&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="fd89bde5afb1b4ac48d534864f59e0b25319f574" translate="yes" xml:space="preserve">
          <source>If you wish to have separate templates for &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#CreateView&quot;&gt;&lt;code&gt;CreateView&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#UpdateView&quot;&gt;&lt;code&gt;UpdateView&lt;/code&gt;&lt;/a&gt;, you can set either &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt;&lt;code&gt;template_name&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin.template_name_suffix&quot;&gt;&lt;code&gt;template_name_suffix&lt;/code&gt;&lt;/a&gt; on your view class.</source>
          <target state="translated">如果希望为&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#CreateView&quot;&gt; &lt;code&gt;CreateView&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#UpdateView&quot;&gt; &lt;code&gt;UpdateView&lt;/code&gt; &lt;/a&gt;使用单独的模板，则可以在视图类上设置&lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt; &lt;code&gt;template_name&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin.template_name_suffix&quot;&gt; &lt;code&gt;template_name_suffix&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bae671e1d4f3ce5d8ed5acdcbf7abf7fadef645d" translate="yes" xml:space="preserve">
          <source>If you wish to have separate templates for &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#CreateView&quot;&gt;&lt;code&gt;CreateView&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#UpdateView&quot;&gt;&lt;code&gt;UpdateView&lt;/code&gt;&lt;/a&gt;, you can set either &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt;&lt;code&gt;template_name&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin.template_name_suffix&quot;&gt;&lt;code&gt;template_name_suffix&lt;/code&gt;&lt;/a&gt; on your view class.</source>
          <target state="translated">如果希望为&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#CreateView&quot;&gt; &lt;code&gt;CreateView&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#UpdateView&quot;&gt; &lt;code&gt;UpdateView&lt;/code&gt; &lt;/a&gt;使用单独的模板，则可以在视图类上设置&lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt; &lt;code&gt;template_name&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin.template_name_suffix&quot;&gt; &lt;code&gt;template_name_suffix&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c63c598798c3a61a008e5d7569767325195fe300" translate="yes" xml:space="preserve">
          <source>If you wish to override this behavior, you can override &lt;a href=&quot;index#django.contrib.admin.ModelAdmin.delete_queryset&quot;&gt;&lt;code&gt;ModelAdmin.delete_queryset()&lt;/code&gt;&lt;/a&gt; or write a custom action which does deletion in your preferred manner &amp;ndash; for example, by calling &lt;code&gt;Model.delete()&lt;/code&gt; for each of the selected items.</source>
          <target state="translated">如果您希望覆盖此行为，则可以覆盖&lt;a href=&quot;index#django.contrib.admin.ModelAdmin.delete_queryset&quot;&gt; &lt;code&gt;ModelAdmin.delete_queryset()&lt;/code&gt; &lt;/a&gt;或编写一个自定义操作，该操作会以您喜欢的方式进行删除-例如，通过为每个选定项调用 &lt;code&gt;Model.delete()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c81732d3ee4b9133691a67e4efeae93d3348110c" translate="yes" xml:space="preserve">
          <source>If you wish to perform arbitrary distance queries using non-point geometries in WGS84 in PostGIS and you want decent performance, enable the &lt;a href=&quot;#django.contrib.gis.db.models.GeometryField.geography&quot;&gt;&lt;code&gt;GeometryField.geography&lt;/code&gt;&lt;/a&gt; keyword so that &lt;a href=&quot;#geography-type&quot;&gt;geography database type&lt;/a&gt; is used instead.</source>
          <target state="translated">如果希望在PostGIS的WGS84中使用非点几何来执行任意距离查询，并且想要获得不错的性能，请启用&lt;a href=&quot;#django.contrib.gis.db.models.GeometryField.geography&quot;&gt; &lt;code&gt;GeometryField.geography&lt;/code&gt; &lt;/a&gt;关键字，以便改用&lt;a href=&quot;#geography-type&quot;&gt;地理数据库类型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d149fe0ba9386b629de5325bd32fff38e705d495" translate="yes" xml:space="preserve">
          <source>If you wish to protect a list, tuple or dictionary you can do so using the signing module&amp;rsquo;s &lt;code&gt;dumps&lt;/code&gt; and &lt;code&gt;loads&lt;/code&gt; functions. These imitate Python&amp;rsquo;s pickle module, but use JSON serialization under the hood. JSON ensures that even if your &lt;a href=&quot;../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt; is stolen an attacker will not be able to execute arbitrary commands by exploiting the pickle format:</source>
          <target state="translated">如果您希望保护列表，元组或字典，则可以使用签名模块的 &lt;code&gt;dumps&lt;/code&gt; 和 &lt;code&gt;loads&lt;/code&gt; 功能来实现。它们模仿Python的pickle模块，但在后台使用JSON序列化。JSON确保即使您的&lt;a href=&quot;../ref/settings#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; &lt;/a&gt;被盗，攻击者也无法通过利用pickle格式执行任意命令：</target>
        </trans-unit>
        <trans-unit id="1a7ff6c29d67b18f351c6ef695f42316c70e46f0" translate="yes" xml:space="preserve">
          <source>If you wish to store information related to &lt;code&gt;User&lt;/code&gt;, you can use a &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; to a model containing the fields for additional information. This one-to-one model is often called a profile model, as it might store non-auth related information about a site user. For example you might create an Employee model:</source>
          <target state="translated">如果您希望存储与 &lt;code&gt;User&lt;/code&gt; 相关的信息，则可以对包含其他信息字段的模型使用&lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt;。这种一对一模型通常称为配置文件模型，因为它可能存储有关站点用户的与身份验证无关的信息。例如，您可以创建一个Employee模型：</target>
        </trans-unit>
        <trans-unit id="e3163de4f64d0e6226c0693d4c28e0ff7be844ba" translate="yes" xml:space="preserve">
          <source>If you wish to store the CSRF token in the user&amp;rsquo;s session, use the &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt;&lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">如果希望将CSRF令牌存储在用户的会话中，请使用&lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt; &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="95ab3f31deb5e5844d6cefd4f6792b2923cdc1d0" translate="yes" xml:space="preserve">
          <source>If you wish to submit your site to the &lt;a href=&quot;https://hstspreload.org/&quot;&gt;browser preload list&lt;/a&gt;, set the &lt;a href=&quot;settings#std:setting-SECURE_HSTS_PRELOAD&quot;&gt;&lt;code&gt;SECURE_HSTS_PRELOAD&lt;/code&gt;&lt;/a&gt; setting to &lt;code&gt;True&lt;/code&gt;. That appends the &lt;code&gt;preload&lt;/code&gt; directive to the &lt;code&gt;Strict-Transport-Security&lt;/code&gt; header.</source>
          <target state="translated">如果希望将站点提交到&lt;a href=&quot;https://hstspreload.org/&quot;&gt;浏览器预加载列表&lt;/a&gt;，请将&lt;a href=&quot;settings#std:setting-SECURE_HSTS_PRELOAD&quot;&gt; &lt;code&gt;SECURE_HSTS_PRELOAD&lt;/code&gt; &lt;/a&gt;设置设置为 &lt;code&gt;True&lt;/code&gt; 。这会将 &lt;code&gt;preload&lt;/code&gt; 指令附加到 &lt;code&gt;Strict-Transport-Security&lt;/code&gt; 标头。</target>
        </trans-unit>
        <trans-unit id="530ae0cc38e2e42a905344acaf5f960f73fc3715" translate="yes" xml:space="preserve">
          <source>If you wish to use a different template for each sitemap or sitemap index available on your site, you may specify it by passing a &lt;code&gt;template_name&lt;/code&gt; parameter to the &lt;code&gt;sitemap&lt;/code&gt; and &lt;code&gt;index&lt;/code&gt; views via the URLconf:</source>
          <target state="translated">如果您希望对网站上可用的每个站点地图或站点地图索引使用不同的模板，则可以通过URLconf 将 &lt;code&gt;template_name&lt;/code&gt; 参数传递给 &lt;code&gt;sitemap&lt;/code&gt; 和 &lt;code&gt;index&lt;/code&gt; 视图来指定模板：</target>
        </trans-unit>
        <trans-unit id="6909e16e21302fa3cec3921ce60357ae9b5838a2" translate="yes" xml:space="preserve">
          <source>If you wish to use another database, install the appropriate &lt;a href=&quot;../topics/install#database-installation&quot;&gt;database bindings&lt;/a&gt; and change the following keys in the &lt;a href=&quot;../ref/settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt;&lt;code&gt;'default'&lt;/code&gt; item to match your database connection settings:</source>
          <target state="translated">如果您希望使用另一个数据库，请安装适当的&lt;a href=&quot;../topics/install#database-installation&quot;&gt;数据库绑定&lt;/a&gt;并在&lt;a href=&quot;../ref/settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt; &lt;code&gt;'default'&lt;/code&gt; 项中更改以下键以匹配您的数据库连接设置：</target>
        </trans-unit>
        <trans-unit id="b6e2765329d13f9a756817f8148fc06ebd15e20d" translate="yes" xml:space="preserve">
          <source>If you would like to give translators hints about a translatable string, you can add a comment prefixed with the &lt;code&gt;Translators&lt;/code&gt; keyword on the line preceding the string, e.g.:</source>
          <target state="translated">如果您想为翻译人员提供有关可翻译字符串的提示，则可以在该字符串之前的行上添加以 &lt;code&gt;Translators&lt;/code&gt; 关键字为前缀的注释，例如：</target>
        </trans-unit>
        <trans-unit id="ec10a212c4274c393a2dd780fbf91de455cc5cb9" translate="yes" xml:space="preserve">
          <source>If you would like to override the &lt;code&gt;clean()&lt;/code&gt; method and maintain this validation, you must call the parent class&amp;rsquo;s &lt;code&gt;clean()&lt;/code&gt; method.</source>
          <target state="translated">如果要覆盖 &lt;code&gt;clean()&lt;/code&gt; 方法并保持此验证，则必须调用父类的 &lt;code&gt;clean()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="3f28065cea9d31fe5a0cfcc2e982ee60d5116348" translate="yes" xml:space="preserve">
          <source>If you would rather start from an empty database and re-run all migrations, you should drop and recreate the database and then run &lt;a href=&quot;#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">如果您希望从一个空的数据库开始并重新运行所有迁移，则应删除并重新创建数据库，然后运行&lt;a href=&quot;#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="787d4b4a6adbad5e56e698fbb47e2f7227b1967b" translate="yes" xml:space="preserve">
          <source>If you write a custom filter that operates on &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; objects, you&amp;rsquo;ll usually register it with the &lt;code&gt;expects_localtime&lt;/code&gt; flag set to &lt;code&gt;True&lt;/code&gt;:</source>
          <target state="translated">如果编写对&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;对象进行操作的自定义过滤器，则通常会在将 &lt;code&gt;expects_localtime&lt;/code&gt; 标志设置为 &lt;code&gt;True&lt;/code&gt; 的情况下进行注册：</target>
        </trans-unit>
        <trans-unit id="41a73fd1c496ecfedcbd96f35862caf467d2aa9d" translate="yes" xml:space="preserve">
          <source>If you write your own password hasher that contains a work factor such as a number of iterations, you should implement a &lt;code&gt;harden_runtime(self, password, encoded)&lt;/code&gt; method to bridge the runtime gap between the work factor supplied in the &lt;code&gt;encoded&lt;/code&gt; password and the default work factor of the hasher. This prevents a user enumeration timing attack due to difference between a login request for a user with a password encoded in an older number of iterations and a nonexistent user (which runs the default hasher&amp;rsquo;s default number of iterations).</source>
          <target state="translated">如果您编写自己的密码哈希器，其中包含工作因子（例如多次迭代），则应实现 &lt;code&gt;harden_runtime(self, password, encoded)&lt;/code&gt; 方法，以弥合 &lt;code&gt;encoded&lt;/code&gt; 密码中提供的工作因子与默认工作之间的运行时差距哈希的因素。这样可以防止由于对用户的登录请求（使用密码以较旧的迭代次数进行编码）和不存在的用户（运行默认哈希器的默认迭代次数）之间的差异而导致的用户枚举计时攻击。</target>
        </trans-unit>
        <trans-unit id="0874fbd3ce49447e25c47a3eeb9385b0739ec7b9" translate="yes" xml:space="preserve">
          <source>If you write your own similar functions and deal with translations, you&amp;rsquo;ll face the problem of what to do when the first argument is a lazy translation object. You don&amp;rsquo;t want to convert it to a string immediately, because you might be using this function outside of a view (and hence the current thread&amp;rsquo;s locale setting will not be correct).</source>
          <target state="translated">如果您编写自己的类似函数并处理翻译，则当第一个参数是惰性翻译对象时，您将面临如何处理的问题。您不希望立即将其转换为字符串，因为您可能在视图外使用此函数（因此当前线程的语言环境设置将不正确）。</target>
        </trans-unit>
        <trans-unit id="7404aaf8b678e2be0f5abe5634bc5b715f5e8c11" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like default values to come from somewhere other than &lt;code&gt;django.conf.global_settings&lt;/code&gt;, you can pass in a module or class that provides the default settings as the &lt;code&gt;default_settings&lt;/code&gt; argument (or as the first positional argument) in the call to &lt;code&gt;configure()&lt;/code&gt;.</source>
          <target state="translated">如果您希望默认值来自 &lt;code&gt;django.conf.global_settings&lt;/code&gt; 以外的其他地方，则可以传入提供默认设置的模块或类作为 &lt;code&gt;default_settings&lt;/code&gt; 参数（或作为第一个位置参数），以调用 &lt;code&gt;configure()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="87fbb560a0a7d5bfb6385760a929b01781e9247b" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to be able to update your Django code occasionally with the latest bug fixes and improvements, follow these instructions:</source>
          <target state="translated">如果您希望能够偶尔通过最新的错误修复和改进来更新Django代码，请按照以下说明进行操作：</target>
        </trans-unit>
        <trans-unit id="2e426d25005a653ab3104419888711627e40acb9" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to customize the behavior of &lt;a href=&quot;../ref/middleware#django.middleware.common.BrokenLinkEmailsMiddleware&quot;&gt;&lt;code&gt;django.middleware.common.BrokenLinkEmailsMiddleware&lt;/code&gt;&lt;/a&gt; further (for example to ignore requests coming from web crawlers), you should subclass it and override its methods.</source>
          <target state="translated">如果您想进一步自定义&lt;a href=&quot;../ref/middleware#django.middleware.common.BrokenLinkEmailsMiddleware&quot;&gt; &lt;code&gt;django.middleware.common.BrokenLinkEmailsMiddleware&lt;/code&gt; &lt;/a&gt;的行为（例如，忽略来自Web爬网程序的请求），则应将其子类化并覆盖其方法。</target>
        </trans-unit>
        <trans-unit id="40a45578a28fb495c1954bbd188030f39d58e346" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to manually authenticate a user by comparing a plain-text password to the hashed password in the database, use the convenience function &lt;a href=&quot;#django.contrib.auth.hashers.check_password&quot;&gt;&lt;code&gt;check_password()&lt;/code&gt;&lt;/a&gt;. It takes two arguments: the plain-text password to check, and the full value of a user&amp;rsquo;s &lt;code&gt;password&lt;/code&gt; field in the database to check against, and returns &lt;code&gt;True&lt;/code&gt; if they match, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果您想通过将纯文本密码与数据库中的哈希密码进行比较来手动验证用户身份，请使用便捷功能&lt;a href=&quot;#django.contrib.auth.hashers.check_password&quot;&gt; &lt;code&gt;check_password()&lt;/code&gt; &lt;/a&gt;。它有两个参数：要检查的纯文本密码，以及要检查的用户 &lt;code&gt;password&lt;/code&gt; 字段在数据库中的完整值，如果匹配则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7032cf12cbd255835e52ce652c41252d70b15172" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to retrieve a URL without displaying it, you can use a slightly different call:</source>
          <target state="translated">如果您想检索一个URL但不显示它，则可以使用一个稍微不同的调用：</target>
        </trans-unit>
        <trans-unit id="3e6e1935ff1f8bbe3d9a10a3392b2aed18e77332" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to retrieve a namespaced URL, specify the fully qualified name:</source>
          <target state="translated">如果要检索命名空间的URL，请指定全限定名：</target>
        </trans-unit>
        <trans-unit id="42574c0524ed457c65a64125a0ee03cde3ec0664" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to retrieve a static URL without displaying it, you can use a slightly different call:</source>
          <target state="translated">如果您想在不显示静态网址的情况下对其进行检索，则可以使用稍微不同的调用：</target>
        </trans-unit>
        <trans-unit id="782329d0998e5379bd00452f104bcc26d52e8259" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to retrieve a translated string without displaying it, you can use the following syntax:</source>
          <target state="translated">如果您想在不显示转换后的字符串的情况下不显示该字符串，则可以使用以下语法：</target>
        </trans-unit>
        <trans-unit id="a678c4aabe8ea3a89184137c4d4eb0cd0f145382" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to set up your own admin site with custom behavior, you&amp;rsquo;re free to subclass &lt;code&gt;AdminSite&lt;/code&gt; and override or add anything you like. Then, create an instance of your &lt;code&gt;AdminSite&lt;/code&gt; subclass (the same way you&amp;rsquo;d instantiate any other Python class) and register your models and &lt;code&gt;ModelAdmin&lt;/code&gt; subclasses with it instead of with the default site. Finally, update &lt;code&gt;myproject/urls.py&lt;/code&gt; to reference your &lt;a href=&quot;#django.contrib.admin.AdminSite&quot;&gt;&lt;code&gt;AdminSite&lt;/code&gt;&lt;/a&gt; subclass.</source>
          <target state="translated">如果您想使用自定义行为来设置自己的管理网站，则可以随意 &lt;code&gt;AdminSite&lt;/code&gt; 子类，并覆盖或添加所需的任何内容。然后，创建 &lt;code&gt;AdminSite&lt;/code&gt; 子类的实例（与实例化任何其他Python类的方式相同），并用它（而不是默认站点）注册模型和 &lt;code&gt;ModelAdmin&lt;/code&gt; 子类。最后，更新 &lt;code&gt;myproject/urls.py&lt;/code&gt; 以引用您的&lt;a href=&quot;#django.contrib.admin.AdminSite&quot;&gt; &lt;code&gt;AdminSite&lt;/code&gt; &lt;/a&gt;子类。</target>
        </trans-unit>
        <trans-unit id="817d51330fc9dd66b1c2b0e80b8eed9e206bc902" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to specify a custom primary key, specify &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt;&lt;code&gt;primary_key=True&lt;/code&gt;&lt;/a&gt; on one of your fields. If Django sees you&amp;rsquo;ve explicitly set &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt;&lt;code&gt;Field.primary_key&lt;/code&gt;&lt;/a&gt;, it won&amp;rsquo;t add the automatic &lt;code&gt;id&lt;/code&gt; column.</source>
          <target state="translated">如果您想指定自定义主键，请在您的其中一个字段上指定&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt; &lt;code&gt;primary_key=True&lt;/code&gt; &lt;/a&gt;。如果Django看到您已显式设置&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt; &lt;code&gt;Field.primary_key&lt;/code&gt; &lt;/a&gt;，则不会添加自动 &lt;code&gt;id&lt;/code&gt; 列。</target>
        </trans-unit>
        <trans-unit id="59523cacb99089a63ab1f97cf8f948701988f18d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d prefer Django not to create a backwards relation, set &lt;code&gt;related_name&lt;/code&gt; to &lt;code&gt;'+'&lt;/code&gt; or end it with &lt;code&gt;'+'&lt;/code&gt;. For example, this will ensure that the &lt;code&gt;User&lt;/code&gt; model won&amp;rsquo;t have a backwards relation to this model:</source>
          <target state="translated">如果你喜欢的Django不创建向后关系，集 &lt;code&gt;related_name&lt;/code&gt; 到 &lt;code&gt;'+'&lt;/code&gt; 或结束它 &lt;code&gt;'+'&lt;/code&gt; 。例如，这将确保 &lt;code&gt;User&lt;/code&gt; 模型不会与此模型具有向后关系：</target>
        </trans-unit>
        <trans-unit id="1b20aacdd666251729295967fecf137a2c2099d5" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d prefer not to call the template &lt;code&gt;registration/login.html&lt;/code&gt;, you can pass the &lt;code&gt;template_name&lt;/code&gt; parameter via the extra arguments to the &lt;code&gt;as_view&lt;/code&gt; method in your URLconf. For example, this URLconf line would use &lt;code&gt;myapp/login.html&lt;/code&gt; instead:</source>
          <target state="translated">如果您不想调用模板 &lt;code&gt;registration/login.html&lt;/code&gt; ，则可以通过额外的参数将 &lt;code&gt;template_name&lt;/code&gt; 参数传递给URLconf中的 &lt;code&gt;as_view&lt;/code&gt; 方法。例如，此URLconf行将改用 &lt;code&gt;myapp/login.html&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="48c682ae2cbd0afba4b4eae5274158bf92b45a13" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re after even more control, you can also cache template fragments using the &lt;code&gt;cache&lt;/code&gt; template tag. To give your template access to this tag, put &lt;code&gt;{% load cache %}&lt;/code&gt; near the top of your template.</source>
          <target state="translated">如果您想获得更多控制权，还可以使用 &lt;code&gt;cache&lt;/code&gt; template标签来缓存模板片段。要使您的模板可以访问此标签，请在模板顶部附近放置 &lt;code&gt;{% load cache %}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="767eed5b450bd819bca83e5738282f4f7be2808f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re building a database-driven app, chances are you&amp;rsquo;ll have forms that map closely to Django models. For instance, you might have a &lt;code&gt;BlogComment&lt;/code&gt; model, and you want to create a form that lets people submit comments. In this case, it would be redundant to define the field types in your form, because you&amp;rsquo;ve already defined the fields in your model.</source>
          <target state="translated">如果您要构建数据库驱动的应用程序，那么您的表格很可能会与Django模型紧密映射。例如，您可能有一个 &lt;code&gt;BlogComment&lt;/code&gt; 模型，并且您想要创建一个允许人们提交评论的表单。在这种情况下，在表单中定义字段类型将是多余的，因为您已经在模型中定义了字段。</target>
        </trans-unit>
        <trans-unit id="abfc88abce0b83f7179182a6de094082846b855c" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re building your own backend, you can use the standard cache backends as reference implementations. You&amp;rsquo;ll find the code in the &lt;code&gt;django/core/cache/backends/&lt;/code&gt; directory of the Django source.</source>
          <target state="translated">如果要构建自己的后端，则可以将标准缓存后端用作参考实现。您将在Django源代码的 &lt;code&gt;django/core/cache/backends/&lt;/code&gt; 目录中找到代码。</target>
        </trans-unit>
        <trans-unit id="b88de13d833c918273b8729f7bad182ac6ca7c85" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re connecting to a third-party database that stores datetimes in a local time rather than UTC, then you must set this option to the appropriate time zone. Likewise, if Django manages the database but third-party systems connect to the same database and expect to find datetimes in local time, then you must set this option.</source>
          <target state="translated">如果要连接到将日期时间存储在本地时间而不是UTC的第三方数据库，则必须将此选项设置为适当的时区。同样，如果Django管理数据库，但第三方系统连接到同一数据库，并希望在本地时间查找日期时间，则必须设置此选项。</target>
        </trans-unit>
        <trans-unit id="cdde1ef1672874bcb82d804c53395d8d7aa1ed21" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re constructing SQL like &lt;code&gt;strftime('%W', 'date')&lt;/code&gt; and need a literal &lt;code&gt;%&lt;/code&gt; character in the query, quadruple it (&lt;code&gt;%%%%&lt;/code&gt;) in the &lt;code&gt;template&lt;/code&gt; attribute because the string is interpolated twice: once during the template interpolation in &lt;code&gt;as_sql()&lt;/code&gt; and once in the SQL interpolation with the query parameters in the database cursor.</source>
          <target state="translated">如果您要构造类似于 &lt;code&gt;strftime('%W', 'date')&lt;/code&gt; SQL ，并且在查询中需要一个文字 &lt;code&gt;%&lt;/code&gt; 字符，请在 &lt;code&gt;template&lt;/code&gt; 属性中将它加倍（ &lt;code&gt;%%%%&lt;/code&gt; ），因为该字符串会被内插两次：在 &lt;code&gt;as_sql()&lt;/code&gt; 中使用模板插值，在SQL插值中一次使用数据库游标中的查询参数进行模板插值。</target>
        </trans-unit>
        <trans-unit id="ab456d418794c4d43bbff01956e9a7a76d213a8a" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re constructing a URL manually (i.e., &lt;em&gt;not&lt;/em&gt; using the &lt;code&gt;reverse()&lt;/code&gt; function), you&amp;rsquo;ll need to take care of the encoding yourself. In this case, use the &lt;code&gt;iri_to_uri()&lt;/code&gt; and &lt;code&gt;quote()&lt;/code&gt; functions that were documented &lt;a href=&quot;#id1&quot;&gt;above&lt;/a&gt;. For example:</source>
          <target state="translated">如果要手动构造URL（即，&lt;em&gt;不&lt;/em&gt;使用 &lt;code&gt;reverse()&lt;/code&gt; 函数），则需要自己进行编码。在这种情况下，使用 &lt;code&gt;iri_to_uri()&lt;/code&gt; 和 &lt;code&gt;quote()&lt;/code&gt; 被记录在案，其功能&lt;a href=&quot;#id1&quot;&gt;之上&lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="6d1f283bcbf28eac94ae688e9ec728c932159a38" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re creating a pluggable app called &amp;ldquo;Rock &amp;rsquo;n&amp;rsquo; roll&amp;rdquo;, here&amp;rsquo;s how you would provide a proper name for the admin:</source>
          <target state="translated">如果您要创建一个名为&amp;ldquo; Rock'n'roll&amp;rdquo;的可插拔应用，请按照以下步骤为管理员提供适当的名称：</target>
        </trans-unit>
        <trans-unit id="48483c8c5c77a7b69d1a11700c288faaa0c7a213" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re creating a template that might be used in situations where you&amp;rsquo;re not sure whether auto-escaping is enabled, then add an &lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt;&lt;code&gt;escape&lt;/code&gt;&lt;/a&gt; filter to any variable that needs escaping. When auto-escaping is on, there&amp;rsquo;s no danger of the &lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt;&lt;code&gt;escape&lt;/code&gt;&lt;/a&gt; filter &lt;em&gt;double-escaping&lt;/em&gt; data &amp;ndash; the &lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt;&lt;code&gt;escape&lt;/code&gt;&lt;/a&gt; filter does not affect auto-escaped variables.</source>
          <target state="translated">如果要创建的模板可能在不确定是否启用自动转义的情况下使用，请向需要转义的任何变量添加&lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt; &lt;code&gt;escape&lt;/code&gt; &lt;/a&gt;过滤器。启用自动转义后，&lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt; &lt;code&gt;escape&lt;/code&gt; &lt;/a&gt;过滤器不会对数据进行&lt;em&gt;两次转义&lt;/em&gt;，也没有危险&amp;ndash; &lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt; &lt;code&gt;escape&lt;/code&gt; &lt;/a&gt;过滤器不会影响自动转义的变量。</target>
        </trans-unit>
        <trans-unit id="bb584f8f7f077e584c39783ffdb002ff86b811fe" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re creating an Atom feed, rather than an RSS feed, set the &lt;code&gt;subtitle&lt;/code&gt; attribute instead of the &lt;code&gt;description&lt;/code&gt; attribute. See &lt;a href=&quot;#publishing-atom-and-rss-feeds-in-tandem&quot;&gt;Publishing Atom and RSS feeds in tandem&lt;/a&gt;, later, for an example.</source>
          <target state="translated">如果要创建Atom提要而不是RSS提要，请设置 &lt;code&gt;subtitle&lt;/code&gt; 属性而不是 &lt;code&gt;description&lt;/code&gt; 属性。有关示例，请参阅稍后&lt;a href=&quot;#publishing-atom-and-rss-feeds-in-tandem&quot;&gt;以串联方式发布Atom和RSS feed&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4cb96d8c5caf914260b393b1dfd4c0e8a90b35c9" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re entirely happy with Django&amp;rsquo;s &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; model, but you want to add some additional profile information, you could subclass &lt;a href=&quot;#django.contrib.auth.models.AbstractUser&quot;&gt;&lt;code&gt;django.contrib.auth.models.AbstractUser&lt;/code&gt;&lt;/a&gt; and add your custom profile fields, although we&amp;rsquo;d recommend a separate model as described in the &amp;ldquo;Model design considerations&amp;rdquo; note of &lt;a href=&quot;#specifying-custom-user-model&quot;&gt;Specifying a custom user model&lt;/a&gt;. &lt;code&gt;AbstractUser&lt;/code&gt; provides the full implementation of the default &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; as an &lt;a href=&quot;../db/models#abstract-base-classes&quot;&gt;abstract model&lt;/a&gt;.</source>
          <target state="translated">如果您对Django的&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;模型完全满意，但又想添加一些其他配置文件信息，则可以将&lt;a href=&quot;#django.contrib.auth.models.AbstractUser&quot;&gt; &lt;code&gt;django.contrib.auth.models.AbstractUser&lt;/code&gt; &lt;/a&gt;子类化，并添加自定义配置文件字段，尽管我们建议按照以下说明使用其他模型在&lt;a href=&quot;#specifying-custom-user-model&quot;&gt;指定自定义用户模型&lt;/a&gt;的&amp;ldquo;模型设计注意事项&amp;rdquo;注释中。 &lt;code&gt;AbstractUser&lt;/code&gt; 作为默认&lt;a href=&quot;../db/models#abstract-base-classes&quot;&gt;模型&lt;/a&gt;提供了默认&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;的完整实现。</target>
        </trans-unit>
        <trans-unit id="cf98ea5e8ac10c40300863d754cd455a34023fde" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re getting this error, you can solve it by:</source>
          <target state="translated">如果遇到此错误，可以通过以下方法解决：</target>
        </trans-unit>
        <trans-unit id="4ff638989d7f1c32d1bc77a814ea175afb1ded83" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re having trouble going through this tutorial, please head over to the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/faq/help/&quot;&gt;Getting Help&lt;/a&gt; section of the FAQ.</source>
          <target state="translated">如果您在阅读本教程时遇到麻烦，请转到FAQ 的&amp;ldquo; &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/faq/help/&quot;&gt;获得帮助&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="ceb0491d3bf47c78b35f0501020327f9bb81577e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re having trouble going through this tutorial, please head over to the &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/help/&quot;&gt;Getting Help&lt;/a&gt; section of the FAQ.</source>
          <target state="translated">如果您在阅读本教程时遇到麻烦，请转到FAQ的&amp;ldquo;&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/help/&quot;&gt;获得帮助&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="6d2ac7f0ad5bbe9c9e5d4d66af481149008f986f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re having trouble going through this tutorial, please post a message to &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/mailing-lists/#django-developers-mailing-list&quot;&gt;django-developers&lt;/a&gt; or drop by &lt;a href=&quot;irc://irc.freenode.net/django-dev&quot;&gt;#django-dev on irc.freenode.net&lt;/a&gt; to chat with other Django users who might be able to help.</source>
          <target state="translated">如果您在阅读本教程时遇到麻烦，请向&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/mailing-lists/#django-developers-mailing-list&quot;&gt;django开发人员&lt;/a&gt;发布消息，或&lt;a href=&quot;irc://irc.freenode.net/django-dev&quot;&gt;在irc.freenode.net上&lt;/a&gt;通过＃django-dev来与其他可能会提供帮助的Django用户聊天。</target>
        </trans-unit>
        <trans-unit id="2fbd5232b3c9f7f1aeca7f1f9b129639569a986d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re having trouble going through this tutorial, please post a message to &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/mailing-lists/#django-developers-mailing-list&quot;&gt;django-developers&lt;/a&gt; or drop by &lt;a href=&quot;https://webchat.freenode.net/#django-dev&quot;&gt;#django-dev on irc.freenode.net&lt;/a&gt; to chat with other Django users who might be able to help.</source>
          <target state="translated">如果您在阅读本教程时遇到困难，请向&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/mailing-lists/#django-developers-mailing-list&quot;&gt;django开发人员&lt;/a&gt;发布消息，或&lt;a href=&quot;https://webchat.freenode.net/#django-dev&quot;&gt;在irc.freenode.net上&lt;/a&gt;通过＃django-dev来与其他可能会提供帮助的Django用户聊天。</target>
        </trans-unit>
        <trans-unit id="7d98d87b390e8d3b15eb2355fe5039a0d87c9028" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re in a multi-database setup, you might have fixture data that you want to load onto one database, but not onto another. In this situation, you can add a database identifier into the names of your fixtures.</source>
          <target state="translated">如果您在多数据库设置中，则可能需要将夹具数据加载到一个数据库中，而不要加载到另一个数据库中。在这种情况下，您可以将数据库标识符添加到灯具的名称中。</target>
        </trans-unit>
        <trans-unit id="36c3a9be516105bc13cecddbe3c1b10fd6b1043c" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested in changing the Python-level behavior of a model class, you &lt;em&gt;could&lt;/em&gt; use &lt;code&gt;managed=False&lt;/code&gt; and create a copy of an existing model. However, there&amp;rsquo;s a better approach for that situation: &lt;a href=&quot;../../topics/db/models#proxy-models&quot;&gt;Proxy models&lt;/a&gt;.</source>
          <target state="translated">如果您对更改模型类的Python级别的行为感兴趣，则&lt;em&gt;可以&lt;/em&gt;使用 &lt;code&gt;managed=False&lt;/code&gt; 并创建现有模型的副本。但是，对于这种情况，有一种更好的方法：&lt;a href=&quot;../../topics/db/models#proxy-models&quot;&gt;代理模型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="99f458dbd1df038441eb2681e7428cb82105b3e7" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested in the more advanced migration operations, or want to be able to write your own, see the &lt;a href=&quot;../ref/migration-operations&quot;&gt;migration operations reference&lt;/a&gt; and the &amp;ldquo;how-to&amp;rdquo; on &lt;a href=&quot;../howto/writing-migrations&quot;&gt;writing migrations&lt;/a&gt;.</source>
          <target state="translated">如果您对更高级的迁移操作感兴趣，或者希望能够编写自己的&lt;a href=&quot;../ref/migration-operations&quot;&gt;迁移操作&lt;/a&gt;，请参阅迁移操作参考和&lt;a href=&quot;../howto/writing-migrations&quot;&gt;编写迁移&lt;/a&gt;的&amp;ldquo;方法&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="90b9a4c5a91dd19aabaed1109072ba30aa990297" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested, you can also run &lt;a href=&quot;../ref/django-admin#django-admin-check&quot;&gt;&lt;code&gt;python manage.py check&lt;/code&gt;&lt;/a&gt;; this checks for any problems in your project without making migrations or touching the database.</source>
          <target state="translated">如果您有兴趣，也可以运行&lt;a href=&quot;../ref/django-admin#django-admin-check&quot;&gt; &lt;code&gt;python manage.py check&lt;/code&gt; &lt;/a&gt; ; 这将检查项目中是否存在任何问题，而无需进行迁移或接触数据库。</target>
        </trans-unit>
        <trans-unit id="254c1791d376774d686299aebfc8b6db7e292b89" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re just updating a record and don&amp;rsquo;t need to do anything with the model object, the most efficient approach is to call &lt;code&gt;update()&lt;/code&gt;, rather than loading the model object into memory. For example, instead of doing this:</source>
          <target state="translated">如果您只是更新记录，而无需对模型对象执行任何操作，则最有效的方法是调用 &lt;code&gt;update()&lt;/code&gt; ，而不是将模型对象加载到内存中。例如，不要这样做：</target>
        </trans-unit>
        <trans-unit id="6535bf89936e50d74084e2cbe76650a8f1162a35" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re manually laying out a form in a template, as opposed to relying on Django&amp;rsquo;s default form layout, you might want to treat &lt;code&gt;&amp;lt;input type=&quot;hidden&quot;&amp;gt;&lt;/code&gt; fields differently from non-hidden fields. For example, because hidden fields don&amp;rsquo;t display anything, putting error messages &amp;ldquo;next to&amp;rdquo; the field could cause confusion for your users &amp;ndash; so errors for those fields should be handled differently.</source>
          <target state="translated">如果您要手动在模板中布局表单，而不是依赖Django的默认表单布局，则可能需要将 &lt;code&gt;&amp;lt;input type=&quot;hidden&quot;&amp;gt;&lt;/code&gt; 字段与非隐藏字段区别对待。例如，由于隐藏字段不显示任何内容，因此将错误消息放在该字段旁边可能会给您的用户造成混乱-因此，应对这些字段的错误进行不同的处理。</target>
        </trans-unit>
        <trans-unit id="255a115dbc0b712cc68471c5b0157f7a05af4797" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re new to &lt;a href=&quot;https://python.org/&quot;&gt;Python&lt;/a&gt;, you might want to start by getting an idea of what the language is like. Django is 100% Python, so if you&amp;rsquo;ve got minimal comfort with Python you&amp;rsquo;ll probably get a lot more out of Django.</source>
          <target state="translated">如果您是&lt;a href=&quot;https://python.org/&quot;&gt;Python的&lt;/a&gt;新手，则可能首先要了解一下语言的样子。Django是100％Python，因此，如果您对Python的使用感到最不舒服，则可能会从Django中获得更多收益。</target>
        </trans-unit>
        <trans-unit id="57db89d44ba94f90db102a29f1cf186e18b0cf37" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re new to programming entirely, you might want to start with this &lt;a href=&quot;https://wiki.python.org/moin/BeginnersGuide/NonProgrammers&quot;&gt;list of Python resources for non-programmers&lt;/a&gt;</source>
          <target state="translated">如果您是完全不熟悉编程的人，则可能想从此&lt;a href=&quot;https://wiki.python.org/moin/BeginnersGuide/NonProgrammers&quot;&gt;面向非程序员的Python资源列表&lt;/a&gt;开始</target>
        </trans-unit>
        <trans-unit id="bba0861efae0244d879fc8e8ed733fd3d426220f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not familiar with file modes, please note that the &lt;code&gt;0o&lt;/code&gt; prefix is very important: it indicates an octal number, which is the way that modes must be specified. If you try to use &lt;code&gt;644&lt;/code&gt;, you&amp;rsquo;ll get totally incorrect behavior.</source>
          <target state="translated">如果您不熟悉文件模式，请注意 &lt;code&gt;0o&lt;/code&gt; 前缀非常重要：它表示一个八进制数，这是必须指定模式的方式。如果尝试使用 &lt;code&gt;644&lt;/code&gt; ，则会出现完全错误的行为。</target>
        </trans-unit>
        <trans-unit id="a1b95c0b433ee48fc48a97069bddf9e2b101dfc4" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not familiar with file modes, please note that the leading &lt;code&gt;0&lt;/code&gt; is very important: it indicates an octal number, which is the way that modes must be specified. If you try to use &lt;code&gt;644&lt;/code&gt;, you&amp;rsquo;ll get totally incorrect behavior.</source>
          <target state="translated">如果您不熟悉文件模式，请注意前导 &lt;code&gt;0&lt;/code&gt; 非常重要：它表示一个八进制数，这是必须指定模式的方式。如果尝试使用 &lt;code&gt;644&lt;/code&gt; ，则会出现完全错误的行为。</target>
        </trans-unit>
        <trans-unit id="fca79f66a708a64746ced9500efdfaadfc0da5f9" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not familiar with the Python DB-API, note that the SQL statement in &lt;code&gt;cursor.execute()&lt;/code&gt; uses placeholders, &lt;code&gt;&quot;%s&quot;&lt;/code&gt;, rather than adding parameters directly within the SQL. If you use this technique, the underlying database library will automatically escape your parameters as necessary.</source>
          <target state="translated">如果您不熟悉Python DB-API，请注意， &lt;code&gt;cursor.execute()&lt;/code&gt; 中的SQL语句使用占位符 &lt;code&gt;&quot;%s&quot;&lt;/code&gt; ，而不是直接在SQL中添加参数。如果使用此技术，则基础数据库库将根据需要自动转义参数。</target>
        </trans-unit>
        <trans-unit id="5ac7649dee96e11a0e7f2a105899bc5b139a0a35" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not setting the &lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-5&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt; environment variable, you &lt;em&gt;must&lt;/em&gt; call &lt;code&gt;configure()&lt;/code&gt; at some point before using any code that reads settings.</source>
          <target state="translated">如果未设置&lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-5&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt;环境变量，则&lt;em&gt;必须&lt;/em&gt;在使用任何读取设置的代码之前的某个时刻调用 &lt;code&gt;configure()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="69337c6de60600bc5976cb6685657eebda60402c" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not setting the &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; environment variable, you &lt;em&gt;must&lt;/em&gt; call &lt;code&gt;configure()&lt;/code&gt; at some point before using any code that reads settings.</source>
          <target state="translated">如果未设置 &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; 环境变量，则&lt;em&gt;必须&lt;/em&gt;在使用任何读取设置的代码之前的某个时刻调用 &lt;code&gt;configure()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4fdba98bf4c4fe90941820a9cac473eb87b6acfa" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not that familiar with Git, you can always find out more about its commands (once it&amp;rsquo;s installed) by typing &lt;code&gt;git help&lt;/code&gt; into the command line.</source>
          <target state="translated">如果您不太熟悉Git，则始终可以通过在命令行中输入 &lt;code&gt;git help&lt;/code&gt; 来了解有关它的命令的更多信息（一旦安装）。</target>
        </trans-unit>
        <trans-unit id="8f2ea50eab7b004cc616e97a7e545f78a1430a05" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not using the Django test runner, you may need to also ensure that any console output is not captured which would hide deprecation warnings. For example, if you use &lt;a href=&quot;https://pytest.org/&quot;&gt;pytest&lt;/a&gt;:</source>
          <target state="translated">如果您不使用Django测试运行程序，则可能还需要确保未捕获任何控制台输出，这会隐藏弃用警告。例如，如果您使用&lt;a href=&quot;https://pytest.org/&quot;&gt;pytest&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="336e08309a7a860fad0714de0146cb1df14fc063" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not using the default project template, here are the requirements:</source>
          <target state="translated">如果您没有使用默认的项目模板，则要求如下：</target>
        </trans-unit>
        <trans-unit id="65ea4d648599b2fb37f6f7e76db2905fce405c7f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not using the vanilla sitemap view &amp;ndash; for example, if it&amp;rsquo;s wrapped with a caching decorator &amp;ndash; you must name your sitemap view and pass &lt;code&gt;sitemap_url_name&lt;/code&gt; to the index view:</source>
          <target state="translated">如果您不使用原始站点地图视图（例如，如果它被缓存装饰器包裹），则必须命名站点地图视图，并将 &lt;code&gt;sitemap_url_name&lt;/code&gt; 传递给索引视图：</target>
        </trans-unit>
        <trans-unit id="a8c1d92ca93227fb6dd5eeedd2d2fb7fc729ef48" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re on Windows, put the drive letter at the beginning of the path, like this:</source>
          <target state="translated">如果您使用的是Windows，请将驱动器号放在路径的开头，如下所示：</target>
        </trans-unit>
        <trans-unit id="4fae52cace337e4f280328a49b626c77ab0c7b45" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re overriding &lt;code&gt;get_queryset()&lt;/code&gt; on your manager, be sure to either call the method on the parent (using &lt;code&gt;super()&lt;/code&gt;) or do the appropriate handling of the &lt;code&gt;_db&lt;/code&gt; attribute on the manager (a string containing the name of the database to use).</source>
          <target state="translated">如果要在管理器上覆盖 &lt;code&gt;get_queryset()&lt;/code&gt; ，请确保在父级上调用方法（使用 &lt;code&gt;super()&lt;/code&gt; ）或对管理器上的 &lt;code&gt;_db&lt;/code&gt; 属性进行适当的处理（包含数据库名称的字符串，用）。</target>
        </trans-unit>
        <trans-unit id="f1a843504a97e80d5cb600f4100e8e00a5e36193" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re registering &lt;a href=&quot;signals#module-django.db.models.signals&quot;&gt;&lt;code&gt;model signals&lt;/code&gt;&lt;/a&gt;, you can refer to the sender by its string label instead of using the model class itself.</source>
          <target state="translated">如果要注册&lt;a href=&quot;signals#module-django.db.models.signals&quot;&gt; &lt;code&gt;model signals&lt;/code&gt; &lt;/a&gt;，则可以通过其字符串标签引用发送者，而不是使用模型类本身。</target>
        </trans-unit>
        <trans-unit id="7ad1460f336e480b534127419cefa394fd978f41" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re saving a file on a &lt;a href=&quot;../../ref/models/instances#django.db.models.Model&quot;&gt;&lt;code&gt;Model&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;../../ref/models/fields#django.db.models.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt;, using a &lt;a href=&quot;../forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt; makes this process much easier. The file object will be saved to the location specified by the &lt;a href=&quot;../../ref/models/fields#django.db.models.FileField.upload_to&quot;&gt;&lt;code&gt;upload_to&lt;/code&gt;&lt;/a&gt; argument of the corresponding &lt;a href=&quot;../../ref/models/fields#django.db.models.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt; when calling &lt;code&gt;form.save()&lt;/code&gt;:</source>
          <target state="translated">如果您要保存在一个文件&lt;a href=&quot;../../ref/models/instances#django.db.models.Model&quot;&gt; &lt;code&gt;Model&lt;/code&gt; &lt;/a&gt;与&lt;a href=&quot;../../ref/models/fields#django.db.models.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; 字段&lt;/a&gt;，使用&lt;a href=&quot;../forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt;使得这一过程变得更加容易。文件对象将被保存到由指定的位置&lt;a href=&quot;../../ref/models/fields#django.db.models.FileField.upload_to&quot;&gt; &lt;code&gt;upload_to&lt;/code&gt; &lt;/a&gt;相应的参数&lt;a href=&quot;../../ref/models/fields#django.db.models.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; &lt;/a&gt;调用时 &lt;code&gt;form.save()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="bedad35c511cec1744a3555151947dfea12f66f1" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re serializing data (for example, when generating &lt;a href=&quot;../../topics/testing/tools#django.test.TransactionTestCase.fixtures&quot;&gt;&lt;code&gt;fixtures&lt;/code&gt;&lt;/a&gt;) from a model that implements generic relations, you should probably be using a natural key to uniquely identify related &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; objects. See &lt;a href=&quot;../../topics/serialization#topics-serialization-natural-keys&quot;&gt;natural keys&lt;/a&gt; and &lt;a href=&quot;../django-admin#cmdoption-dumpdata-natural-foreign&quot;&gt;&lt;code&gt;dumpdata --natural-foreign&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">如果您要从实现通用关系的模型中序列化数据（例如，生成&lt;a href=&quot;../../topics/testing/tools#django.test.TransactionTestCase.fixtures&quot;&gt; &lt;code&gt;fixtures&lt;/code&gt; &lt;/a&gt;），则可能应该使用自然键来唯一地标识相关的&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;对象。有关更多信息，请参见&lt;a href=&quot;../../topics/serialization#topics-serialization-natural-keys&quot;&gt;自然键&lt;/a&gt;和&lt;a href=&quot;../django-admin#cmdoption-dumpdata-natural-foreign&quot;&gt; &lt;code&gt;dumpdata --natural-foreign&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="11eb2a40cd729d4d12c805c9535dc58c68ec956d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re starting a new project, it&amp;rsquo;s highly recommended to set up a custom user model, even if the default &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; model is sufficient for you. This model behaves identically to the default user model, but you&amp;rsquo;ll be able to customize it in the future if the need arises:</source>
          <target state="translated">如果您要开始一个新项目，强烈建议您设置一个自定义用户模型，即使默认的&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;模型就足够了。该模型的行为与默认用户模型相同，但是如果需要，您将来可以自定义它：</target>
        </trans-unit>
        <trans-unit id="48a25be3e80caa082a172422daae21775a104668" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re subclassing an existing model (perhaps something from another application entirely) and want each model to have its own database table, &lt;a href=&quot;#multi-table-inheritance&quot;&gt;Multi-table inheritance&lt;/a&gt; is the way to go.</source>
          <target state="translated">如果您要&lt;a href=&quot;#multi-table-inheritance&quot;&gt;继承&lt;/a&gt;现有模型（也许是完全来自另一个应用程序的某种东西）的子类，并且希望每个模型都有自己的数据库表，那么多表继承就是解决之道。</target>
        </trans-unit>
        <trans-unit id="749f5754bf6064aeadce7af0aa572b7f5cd04a43" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re synchronizing content types to more than one database, be aware that their primary keys may not match across databases. This may result in data corruption or data loss.</source>
          <target state="translated">如果要将内容类型同步到多个数据库，请注意它们的主键可能在数据库之间不匹配。这可能会导致数据损坏或数据丢失。</target>
        </trans-unit>
        <trans-unit id="f6fc2fe716bde4fb5cf0628226301f83349d64f4" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re testing a multiple database configuration with primary/replica (referred to as master/slave by some databases) replication, this strategy of creating test databases poses a problem. When the test databases are created, there won&amp;rsquo;t be any replication, and as a result, data created on the primary won&amp;rsquo;t be seen on the replica.</source>
          <target state="translated">如果您要使用主/副本（在某些数据库中称为主数据库/从数据库）复制来测试多数据库配置，则这种创建测试数据库的策略会带来问题。创建测试数据库后，将不会进行任何复制，因此，在主数据库上创建的数据将不会在副本上看到。</target>
        </trans-unit>
        <trans-unit id="7a5e6b4700226ab4c476a2e5c6dee860df741084" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re upgrading from South, this is basically the South pattern as an operation - one or two methods for forwards and backwards, with an ORM and schema operations available. Most of the time, you should be able to translate the &lt;code&gt;orm.Model&lt;/code&gt; or &lt;code&gt;orm[&quot;appname&quot;, &quot;Model&quot;]&lt;/code&gt; references from South directly into &lt;code&gt;apps.get_model(&quot;appname&quot;, &quot;Model&quot;)&lt;/code&gt; references here and leave most of the rest of the code unchanged for data migrations. However, &lt;code&gt;apps&lt;/code&gt; will only have references to models in the current app unless migrations in other apps are added to the migration&amp;rsquo;s dependencies.</source>
          <target state="translated">如果您是从南方升级的，那么这基本上就是一种南方模式，一种操作-一种或两种向前和向后的方法，并提供ORM和架构操作。大多数时候，您应该能够将来自南方的 &lt;code&gt;orm.Model&lt;/code&gt; 或 &lt;code&gt;orm[&quot;appname&quot;, &quot;Model&quot;]&lt;/code&gt; 引用直接转换为 &lt;code&gt;apps.get_model(&quot;appname&quot;, &quot;Model&quot;)&lt;/code&gt; 引用，并保留大部分其余代码保持不变，无法进行数据迁移。但是，除非将其他应用程序中的迁移添加到迁移的依赖项中，否则这些 &lt;code&gt;apps&lt;/code&gt; 将仅引用当前应用程序中的模型。</target>
        </trans-unit>
        <trans-unit id="dd100d30c9413b8bcf0a641346e7fe8e8d78916b" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re upgrading through more than one feature version (e.g. 2.0 to 2.2), it&amp;rsquo;s usually easier to upgrade through each feature release incrementally (2.0 to 2.1 to 2.2) rather than to make all the changes for each feature release at once. For each feature release, use the latest patch release (e.g. for 2.1, use 2.1.15).</source>
          <target state="translated">如果要通过多个功能版本（例如2.0到2.2）进行升级，则通常比通过一次对每个功能版本进行所有更改更容易地通过每个功能版本（从2.0到2.1到2.2）进行升级。对于每个功能版本，请使用最新的修补程序版本（例如，对于2.1，请使用2.1.15）。</target>
        </trans-unit>
        <trans-unit id="c0a30d48cf1c939c8e9ed571529055414a3d67b6" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using &amp;ldquo;Rock &amp;rsquo;n&amp;rsquo; roll&amp;rdquo; in a project called &lt;code&gt;anthology&lt;/code&gt;, but you want it to show up as &amp;ldquo;Jazz Manouche&amp;rdquo; instead, you can provide your own configuration:</source>
          <target state="translated">如果您在名为 &lt;code&gt;anthology&lt;/code&gt; 的项目中使用&amp;ldquo;摇滚乐&amp;rdquo; ，但希望将其显示为&amp;ldquo; Jazz Manouche&amp;rdquo;，则可以提供自己的配置：</target>
        </trans-unit>
        <trans-unit id="481f4f1b70a903de3297e01b947b9f2c4871b7fa" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using &lt;a href=&quot;../topics/http/sessions#cached-sessions-backend&quot;&gt;cache-based session storage&lt;/a&gt;, this selects the cache to use.</source>
          <target state="translated">如果您使用&lt;a href=&quot;../topics/http/sessions#cached-sessions-backend&quot;&gt;的是基于缓存的会话存储&lt;/a&gt;，则会选择要使用的缓存。</target>
        </trans-unit>
        <trans-unit id="aeeb2f9285f5f42da4ca38d644da7b9668702942" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using AngularJS 1.1.3 and newer, it&amp;rsquo;s sufficient to configure the &lt;code&gt;$http&lt;/code&gt; provider with the cookie and header names:</source>
          <target state="translated">如果您使用的是AngularJS 1.1.3及更高版本，则使用cookie和标头名称配置 &lt;code&gt;$http&lt;/code&gt; 提供程序就足够了：</target>
        </trans-unit>
        <trans-unit id="b71dafc0a9ca6cc7e9afc06dfb5f48ffeac44f3e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Django&amp;rsquo;s &lt;a href=&quot;testing/index&quot;&gt;testing framework&lt;/a&gt; to test database queries, Django will need permission to create a test database.</source>
          <target state="translated">如果您使用Django的&lt;a href=&quot;testing/index&quot;&gt;测试框架&lt;/a&gt;来测试数据库查询，则Django将需要权限来创建测试数据库。</target>
        </trans-unit>
        <trans-unit id="9944ee7dd34baf50152dd56fcdc484819ead5962" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Linux or MacOS and install both &lt;a href=&quot;https://pypi.org/project/pywatchman/&quot;&gt;pywatchman&lt;/a&gt; and the &lt;a href=&quot;https://facebook.github.io/watchman/&quot;&gt;Watchman&lt;/a&gt; service, kernel signals will be used to autoreload the server (rather than polling file modification timestamps each second). This offers better performance on large projects, reduced response time after code changes, more robust change detection, and a reduction in power usage. Django supports &lt;code&gt;pywatchman&lt;/code&gt; 1.2.0 and higher.</source>
          <target state="translated">如果您使用的是Linux或MacOS，并且同时安装了&lt;a href=&quot;https://pypi.org/project/pywatchman/&quot;&gt;pywatchman&lt;/a&gt;和&lt;a href=&quot;https://facebook.github.io/watchman/&quot;&gt;Watchman&lt;/a&gt;服务，则内核信号将用于自动重新加载服务器（而不是每秒轮询文件修改时间戳）。这样可以在大型项目中提供更好的性能，减少代码更改后的响应时间，更强大的更改检测功能，并减少功耗。Django支持 &lt;code&gt;pywatchman&lt;/code&gt; 1.2.0及更高版本。</target>
        </trans-unit>
        <trans-unit id="4e53baf0d0f56b77511625581c99cc7d9191b439" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Memcached, consider using &lt;a href=&quot;../../topics/http/sessions#cached-sessions-backend&quot;&gt;cached sessions&lt;/a&gt; to improve performance.</source>
          <target state="translated">如果您使用的是Memcached，请考虑使用&lt;a href=&quot;../../topics/http/sessions#cached-sessions-backend&quot;&gt;缓存的会话&lt;/a&gt;来提高性能。</target>
        </trans-unit>
        <trans-unit id="5123ae3f1eac47dcb57f53aa5e34a747a949d8e9" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using MySQL and this value &lt;em&gt;doesn&amp;rsquo;t&lt;/em&gt; start with a forward slash, then this value is assumed to be the host.</source>
          <target state="translated">如果您使用的是MySQL，并且此值&lt;em&gt;不是&lt;/em&gt;以正斜杠开头，则假定该值为主机。</target>
        </trans-unit>
        <trans-unit id="eaed7a6a6ad7f54113143af5fee4474f0a7b717f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using MySQL or MariaDB, the following checks will be performed:</source>
          <target state="translated">如果您使用的是MySQL或MariaDB，将执行以下检查：</target>
        </trans-unit>
        <trans-unit id="5c1359456437f291b8b48eb0bceaeca46fd2af3d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using MySQL or MariaDB, you&amp;rsquo;ll need a &lt;a href=&quot;../ref/databases#mysql-db-api-drivers&quot;&gt;DB API driver&lt;/a&gt; like &lt;code&gt;mysqlclient&lt;/code&gt;. See &lt;a href=&quot;../ref/databases#mysql-notes&quot;&gt;notes for the MySQL backend&lt;/a&gt; for details.</source>
          <target state="translated">如果您使用的是MySQL或MariaDB，则需要一个&lt;a href=&quot;../ref/databases#mysql-db-api-drivers&quot;&gt;数据库API驱动程序，&lt;/a&gt;例如 &lt;code&gt;mysqlclient&lt;/code&gt; 。有关详细信息，请参见&lt;a href=&quot;../ref/databases#mysql-notes&quot;&gt;MySQL后端的注释&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bf9bdf3f5fa10aff2cab1f17aaffdcca0b623596" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using MySQL, the following checks will be performed:</source>
          <target state="translated">如果您使用的是MySQL，将执行以下检查：</target>
        </trans-unit>
        <trans-unit id="228adccc2a150114c8cffe4456bca9a36f683fa7" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using MySQL, your tables may or may not support transactions; it depends on your MySQL version and the table types you&amp;rsquo;re using. (By &amp;ldquo;table types,&amp;rdquo; we mean something like &amp;ldquo;InnoDB&amp;rdquo; or &amp;ldquo;MyISAM&amp;rdquo;.) MySQL transaction peculiarities are outside the scope of this article, but the MySQL site has &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/sql-syntax-transactions.html&quot;&gt;information on MySQL transactions&lt;/a&gt;.</source>
          <target state="translated">如果您使用的是MySQL，则您的表可能支持也可能不支持事务。这取决于您的MySQL版本和所使用的表类型。（对于&amp;ldquo;表类型&amp;rdquo;，我们的意思是&amp;ldquo; InnoDB&amp;rdquo;或&amp;ldquo; MyISAM&amp;rdquo;。）MySQL事务的特殊性不在本文讨论范围之内，但是MySQL站点提供了&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/sql-syntax-transactions.html&quot;&gt;有关MySQL事务的信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a9a0fd540cf9eba9010f1a43a66ed09c582deee1" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Oracle, you&amp;rsquo;ll need a copy of &lt;a href=&quot;https://oracle.github.io/python-cx_Oracle/&quot;&gt;cx_Oracle&lt;/a&gt;, but please read the &lt;a href=&quot;../ref/databases#oracle-notes&quot;&gt;notes for the Oracle backend&lt;/a&gt; for details regarding supported versions of both Oracle and &lt;code&gt;cx_Oracle&lt;/code&gt;.</source>
          <target state="translated">如果您使用的是Oracle，则需要一份&lt;a href=&quot;https://oracle.github.io/python-cx_Oracle/&quot;&gt;cx_Oracle&lt;/a&gt;的副本，但是请阅读&lt;a href=&quot;../ref/databases#oracle-notes&quot;&gt;Oracle后端说明，以&lt;/a&gt;获取有关Oracle和 &lt;code&gt;cx_Oracle&lt;/code&gt; 的受支持版本的详细信息。</target>
        </trans-unit>
        <trans-unit id="92d54d481c5d03a9b0ca88a5f50b8ed2498b6ef7" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using PostgreSQL, Django provides &lt;a href=&quot;../../ref/contrib/postgres/search&quot;&gt;a selection of database specific tools&lt;/a&gt; to allow you to leverage more complex querying options. Other databases have different selections of tools, possibly via plugins or user-defined functions. Django doesn&amp;rsquo;t include any support for them at this time. We&amp;rsquo;ll use some examples from PostgreSQL to demonstrate the kind of functionality databases may have.</source>
          <target state="translated">如果您使用的是PostgreSQL，则Django提供&lt;a href=&quot;../../ref/contrib/postgres/search&quot;&gt;了一些特定&lt;/a&gt;于数据库的工具，以允许您利用更复杂的查询选项。其他数据库可能通过插件或用户定义的函数来选择不同的工具。Django目前不支持它们。我们将使用PostgreSQL中的一些示例来演示数据库可能具有的功能。</target>
        </trans-unit>
        <trans-unit id="2740b6405cd59234c5607e21afdcdaccce94c79c" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using PostgreSQL, by default (empty &lt;a href=&quot;#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt;), the connection to the database is done through UNIX domain sockets (&amp;lsquo;local&amp;rsquo; lines in &lt;code&gt;pg_hba.conf&lt;/code&gt;). If your UNIX domain socket is not in the standard location, use the same value of &lt;code&gt;unix_socket_directory&lt;/code&gt; from &lt;code&gt;postgresql.conf&lt;/code&gt;. If you want to connect through TCP sockets, set &lt;a href=&quot;#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt; to &amp;lsquo;localhost&amp;rsquo; or &amp;lsquo;127.0.0.1&amp;rsquo; (&amp;lsquo;host&amp;rsquo; lines in &lt;code&gt;pg_hba.conf&lt;/code&gt;). On Windows, you should always define &lt;a href=&quot;#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt;, as UNIX domain sockets are not available.</source>
          <target state="translated">如果您使用的是PostgreSQL，默认情况下（空&lt;a href=&quot;#std:setting-HOST&quot;&gt; &lt;code&gt;HOST&lt;/code&gt; &lt;/a&gt;），通过UNIX域套接字（ &lt;code&gt;pg_hba.conf&lt;/code&gt; 中的 &amp;ldquo; local&amp;rdquo;行）来完成与数据库的连接。如果您的UNIX域套接字不在标准位置，请使用来自 &lt;code&gt;postgresql.conf&lt;/code&gt; 的 &lt;code&gt;unix_socket_directory&lt;/code&gt; 相同的值。如果要通过TCP套接字连接，请将&lt;a href=&quot;#std:setting-HOST&quot;&gt; &lt;code&gt;HOST&lt;/code&gt; &lt;/a&gt;设置为'localhost'或'127.0.0.1'（ &lt;code&gt;pg_hba.conf&lt;/code&gt; 中的 &amp;ldquo; host&amp;rdquo;行）。在Windows上，应始终定义&lt;a href=&quot;#std:setting-HOST&quot;&gt; &lt;code&gt;HOST&lt;/code&gt; &lt;/a&gt;，因为UNIX域套接字不可用。</target>
        </trans-unit>
        <trans-unit id="dd5ae27cbc04f18050df1d431f5fb25a9fbe2c53" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using PostgreSQL, the sequence associated with the primary key might need to be updated; see &lt;a href=&quot;../databases#manually-specified-autoincrement-pk&quot;&gt;Manually-specifying values of auto-incrementing primary keys&lt;/a&gt;.</source>
          <target state="translated">如果您使用的是PostgreSQL，则可能需要更新与主键关联的序列。请参见&lt;a href=&quot;../databases#manually-specified-autoincrement-pk&quot;&gt;手动指定自动递增主键的值&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="17609ee45cfd691775da7000d116f264e7657fcb" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using PostgreSQL, you&amp;rsquo;ll need the &lt;a href=&quot;https://www.psycopg.org/&quot;&gt;psycopg2&lt;/a&gt; package. Refer to the &lt;a href=&quot;../ref/databases#postgresql-notes&quot;&gt;PostgreSQL notes&lt;/a&gt; for further details.</source>
          <target state="translated">如果使用的是PostgreSQL，则需要&lt;a href=&quot;https://www.psycopg.org/&quot;&gt;psycopg2&lt;/a&gt;软件包。有关更多详细信息，请参见&lt;a href=&quot;../ref/databases#postgresql-notes&quot;&gt;PostgreSQL注释&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="81dfb5f0dc2391f3e82b1355d3ca6abc305f8d47" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Postgres, Oracle, or MySQL with InnoDB, this is enforced at the database integrity level &amp;ndash; database level key constraints prevent the creation of relations that can&amp;rsquo;t be validated.</source>
          <target state="translated">如果您在InnoDB上使用Postgres，Oracle或MySQL，则这是在数据库完整性级别上执行的-数据库级别的键约束会阻止创建无法验证的关系。</target>
        </trans-unit>
        <trans-unit id="65a65316c0bd24040960220c94a678789b0f6a2a" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using SQLite you might want to read the &lt;a href=&quot;../ref/databases#sqlite-notes&quot;&gt;SQLite backend notes&lt;/a&gt;.</source>
          <target state="translated">如果您使用的是SQLite，则可能需要阅读&lt;a href=&quot;../ref/databases#sqlite-notes&quot;&gt;SQLite后端说明&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="334c33a340c62565a0dda48701d8cc481ae24464" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using SQLite, you don&amp;rsquo;t need to create anything beforehand - the database file will be created automatically when it is needed.</source>
          <target state="translated">如果您使用的是SQLite，则无需事先创建任何内容-数据库文件将在需要时自动创建。</target>
        </trans-unit>
        <trans-unit id="dd02ebc4205a2c5d09b790615c39301f2afffdb4" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Windows and need to install the GNU gettext utilities so &lt;a href=&quot;../../ref/django-admin#django-admin-compilemessages&quot;&gt;&lt;code&gt;django-admin compilemessages&lt;/code&gt;&lt;/a&gt; works see &lt;a href=&quot;#gettext-on-windows&quot;&gt;gettext on Windows&lt;/a&gt; for more information.</source>
          <target state="translated">如果您使用的是Windows，并且需要安装GNU gettext实用程序，则&lt;a href=&quot;../../ref/django-admin#django-admin-compilemessages&quot;&gt; &lt;code&gt;django-admin compilemessages&lt;/code&gt; &lt;/a&gt;可以正常运行，请参见&lt;a href=&quot;#gettext-on-windows&quot;&gt;Windows上的gettext以&lt;/a&gt;获取更多信息。</target>
        </trans-unit>
        <trans-unit id="7c2566945d2ca024ddf78f5b4ec709f5e3b7bae3" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Windows and need to install the GNU gettext utilities so &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;makemessages&lt;/code&gt;&lt;/a&gt; works, see &lt;a href=&quot;#gettext-on-windows&quot;&gt;gettext on Windows&lt;/a&gt; for more information.</source>
          <target state="translated">如果您使用的是Windows，并且需要安装GNU gettext实用程序以便使&lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt; &lt;code&gt;makemessages&lt;/code&gt; &lt;/a&gt;起作用，请参阅&lt;a href=&quot;#gettext-on-windows&quot;&gt;Windows上的gettext以&lt;/a&gt;获取更多信息。</target>
        </trans-unit>
        <trans-unit id="46eb70b42871e7bacf59440c3bae92eb1b4ae4ef" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a &lt;code&gt;QuerySet&lt;/code&gt; with a very large number of items, requesting high page numbers might be slow on some databases, because the resulting &lt;code&gt;LIMIT&lt;/code&gt;/&lt;code&gt;OFFSET&lt;/code&gt; query needs to count the number of &lt;code&gt;OFFSET&lt;/code&gt; records which takes longer as the page number gets higher.</source>
          <target state="translated">如果您使用的是 &lt;code&gt;QuerySet&lt;/code&gt; 有一个非常大量的项目，要求高的页码可能会慢一些数据库，因为由此产生的 &lt;code&gt;LIMIT&lt;/code&gt; / &lt;code&gt;OFFSET&lt;/code&gt; 查询需求来算的数目 &lt;code&gt;OFFSET&lt;/code&gt; 这需要较长的页面数变高记录。</target>
        </trans-unit>
        <trans-unit id="70b3d5d4568f4fd39cfd395329f1734d8e532b16" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a cache, connection parameters may be different in development and in production. Django defaults to per-process &lt;a href=&quot;../../topics/cache#local-memory-caching&quot;&gt;local-memory caching&lt;/a&gt; which may not be desirable.</source>
          <target state="translated">如果使用缓存，则连接参数在开发和生产中可能会有所不同。Django默认对每个进程进行&lt;a href=&quot;../../topics/cache#local-memory-caching&quot;&gt;本地内存缓存&lt;/a&gt;，这可能是不希望的。</target>
        </trans-unit>
        <trans-unit id="fc3ed93f28f451dc5be072e0a09e76c785745981" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a database backend that uses a different SQL syntax for a certain function, you can add support for it by monkey patching a new method onto the function&amp;rsquo;s class.</source>
          <target state="translated">如果您使用的数据库后端对某个函数使用不同的SQL语法，则可以通过将新方法修补到函数的类上来添加对它的支持。</target>
        </trans-unit>
        <trans-unit id="42525c03b5426673012c5e443de921b7d2a48312" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a database besides SQLite, make sure you&amp;rsquo;ve created a database by this point. Do that with &amp;ldquo;&lt;code&gt;CREATE DATABASE database_name;&lt;/code&gt;&amp;rdquo; within your database&amp;rsquo;s interactive prompt.</source>
          <target state="translated">如果您使用的是SQLite以外的数据库，请确保此时已创建数据库。使用&amp;ldquo; &lt;code&gt;CREATE DATABASE database_name;&lt;/code&gt; 在数据库的交互式提示中。</target>
        </trans-unit>
        <trans-unit id="3bfd941888efa436ecc6ede3006e996113f463ad" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a different authentication backend, this method may require different credentials. It requires whichever credentials are required by your backend&amp;rsquo;s &lt;code&gt;authenticate()&lt;/code&gt; method.</source>
          <target state="translated">如果您使用其他身份验证后端，则此方法可能需要不同的凭据。它需要后端的 &lt;code&gt;authenticate()&lt;/code&gt; 方法所需的任何凭据。</target>
        </trans-unit>
        <trans-unit id="05764d13eeb945fede1a5e8927e7f8a5ab301058" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a hosting service and can&amp;rsquo;t change your server&amp;rsquo;s default storage engine, you have a couple of options.</source>
          <target state="translated">如果您使用的是托管服务，但无法更改服务器的默认存储引擎，则有两种选择。</target>
        </trans-unit>
        <trans-unit id="5a353593d2d8e5b736818eb171577ee093269dde" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using an &lt;a href=&quot;#django.contrib.postgres.fields.ArrayField&quot;&gt;&lt;code&gt;ArrayField&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;CIText&lt;/code&gt; fields, you must add &lt;code&gt;'django.contrib.postgres'&lt;/code&gt; in your &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;, otherwise field values will appear as strings like &lt;code&gt;'{thoughts,django}'&lt;/code&gt;.</source>
          <target state="translated">如果您使用的是&lt;a href=&quot;#django.contrib.postgres.fields.ArrayField&quot;&gt; &lt;code&gt;ArrayField&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;CIText&lt;/code&gt; 领域，你必须添加 &lt;code&gt;'django.contrib.postgres'&lt;/code&gt; 在你&lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;，否则字段值会出现像琴弦 &lt;code&gt;'{thoughts,django}'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61e7c53b9fd063f957398fb1f4320dfd4e2a9584" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using an unofficial 3rd party backend, please consult the documentation provided for any additional requirements.</source>
          <target state="translated">如果您使用的是非官方的第三方后端，请参阅提供的文档以了解任何其他要求。</target>
        </trans-unit>
        <trans-unit id="fb1e7f7e52bbcd15afd7dc412eee86df9c3f70b8" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using components of Django &amp;ldquo;standalone&amp;rdquo; &amp;ndash; for example, writing a Python script which loads some Django templates and renders them, or uses the ORM to fetch some data &amp;ndash; there&amp;rsquo;s one more step you&amp;rsquo;ll need in addition to configuring settings.</source>
          <target state="translated">如果您使用的是Django&amp;ldquo;独立&amp;rdquo;组件，例如，编写一个Python脚本来加载一些Django模板并进行渲染，或者使用ORM来获取一些数据，那么除了配置设置外，还需要执行另外一个步骤。</target>
        </trans-unit>
        <trans-unit id="6c2160405a6776b9843f65c896f4c6a76b70b42b" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using file-based session storage, this sets the directory in which Django will store session data. When the default value (&lt;code&gt;None&lt;/code&gt;) is used, Django will use the standard temporary directory for the system.</source>
          <target state="translated">如果您使用的是基于文件的会话存储，则会设置Django将在其中存储会话数据的目录。使用默认值（ &lt;code&gt;None&lt;/code&gt; ）时，Django将为系统使用标准的临时目录。</target>
        </trans-unit>
        <trans-unit id="bdf2864962c6854deb565415dc128e418e85409e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using middleware, you can do that. Middleware provides multiple opportunities to process a response on exit from a view. If you put behavior in the response middleware, it&amp;rsquo;s guaranteed to execute after template rendering has taken place.</source>
          <target state="translated">如果您使用的是中间件，则可以这样做。中间件为处理视图退出时的响应提供了多种机会。如果将行为放在响应中间件中，则可以确保在模板渲染完成后执行。</target>
        </trans-unit>
        <trans-unit id="176b3e53bd5619ca954a6de51573ff4145217e13" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using pagination, you can adapt the &lt;a href=&quot;../../topics/pagination#using-paginator-in-view&quot;&gt;example template from the pagination docs&lt;/a&gt;. Change instances of &lt;code&gt;contacts&lt;/code&gt; in that example template to &lt;code&gt;page_obj&lt;/code&gt;.</source>
          <target state="translated">如果您使用的是分页，则可以改用&lt;a href=&quot;../../topics/pagination#using-paginator-in-view&quot;&gt;分页文档中&lt;/a&gt;的示例模板。将该示例模板中的 &lt;code&gt;contacts&lt;/code&gt; 实例更改为 &lt;code&gt;page_obj&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="38126e95e0083d43b4efeedfd50bff85a4f91dfd" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using the &lt;code&gt;django.contrib.sessions.backends.db&lt;/code&gt; backend, each session is a normal Django model. The &lt;code&gt;Session&lt;/code&gt; model is defined in &lt;code&gt;django/contrib/sessions/models.py&lt;/code&gt;. Because it&amp;rsquo;s a normal model, you can access sessions using the normal Django database API:</source>
          <target state="translated">如果您使用的是 &lt;code&gt;django.contrib.sessions.backends.db&lt;/code&gt; 后端，则每个会话都是普通的Django模型。该 &lt;code&gt;Session&lt;/code&gt; 模型中定义 &lt;code&gt;django/contrib/sessions/models.py&lt;/code&gt; 。因为它是普通模型，所以您可以使用普通Django数据库API访问会话：</target>
        </trans-unit>
        <trans-unit id="50d514d3dd0b830cdb2e92c3b229482ff305cf07" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using the context processor, your template should be rendered with a &lt;code&gt;RequestContext&lt;/code&gt;. Otherwise, ensure &lt;code&gt;messages&lt;/code&gt; is available to the template context.</source>
          <target state="translated">如果使用上下文处理器，则应使用 &lt;code&gt;RequestContext&lt;/code&gt; 呈现模板。否则，请确保 &lt;code&gt;messages&lt;/code&gt; 可用于模板上下文。</target>
        </trans-unit>
        <trans-unit id="526e48b58228f65bfc33a8bdc8a0463e6592108c" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using the same HTML for each of your form fields, you can reduce duplicate code by looping through each field in turn using a &lt;code&gt;{% for %}&lt;/code&gt; loop:</source>
          <target state="translated">如果您为每个表单字段使用相同的HTML，则可以通过使用 &lt;code&gt;{% for %}&lt;/code&gt; 循环依次遍历每个字段来减少重复代码：</target>
        </trans-unit>
        <trans-unit id="71b2f6560e3b81f86c2f6fbf8c0b3fd58fd8164f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re wrestling with a particular problem, start with the &lt;a href=&quot;#time-zones-faq&quot;&gt;time zone FAQ&lt;/a&gt;.</source>
          <target state="translated">如果您在解决特定问题，请从&lt;a href=&quot;#time-zones-faq&quot;&gt;时区FAQ开始&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="033bd6d75929d6d7705838d0e26ce74b89b3cf6f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re writing a pluggable application that&amp;rsquo;s expected to work independently of the value of &lt;a href=&quot;../../ref/settings#std:setting-USE_TZ&quot;&gt;&lt;code&gt;USE_TZ&lt;/code&gt;&lt;/a&gt;, you may find &lt;a href=&quot;../../ref/utils#django.utils.timezone.now&quot;&gt;&lt;code&gt;django.utils.timezone.now()&lt;/code&gt;&lt;/a&gt; useful. This function returns the current date and time as a naive datetime when &lt;code&gt;USE_TZ = False&lt;/code&gt; and as an aware datetime when &lt;code&gt;USE_TZ = True&lt;/code&gt;. You can add or subtract &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt;&lt;code&gt;datetime.timedelta&lt;/code&gt;&lt;/a&gt; as needed.</source>
          <target state="translated">如果编写的可插拔应用程序独立于&lt;a href=&quot;../../ref/settings#std:setting-USE_TZ&quot;&gt; &lt;code&gt;USE_TZ&lt;/code&gt; &lt;/a&gt;的值运行，则可能会发现&lt;a href=&quot;../../ref/utils#django.utils.timezone.now&quot;&gt; &lt;code&gt;django.utils.timezone.now()&lt;/code&gt; &lt;/a&gt;有用。当 &lt;code&gt;USE_TZ = False&lt;/code&gt; 时，此函数返回当前日期和时间，作为原始日期时间；当 &lt;code&gt;USE_TZ = True&lt;/code&gt; 时，返回已知的日期时间。您可以根据需要添加或减去&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt; &lt;code&gt;datetime.timedelta&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b9ad3f8840feee3141c8778e1865bfb234bef75" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re writing a reusable app (or other piece of code) and want to include messaging functionality, but don&amp;rsquo;t want to require your users to enable it if they don&amp;rsquo;t want to, you may pass an additional keyword argument &lt;code&gt;fail_silently=True&lt;/code&gt; to any of the &lt;code&gt;add_message&lt;/code&gt; family of methods. For example:</source>
          <target state="translated">如果您正在编写可重用的应用程序（或其他代码），并希望包含消息传递功能，但又不想要求用户启用该功能，则可以传递额外的关键字参数 &lt;code&gt;fail_silently=True&lt;/code&gt; 于 &lt;code&gt;add_message&lt;/code&gt; 系列方法中的任何一个。例如：</target>
        </trans-unit>
        <trans-unit id="84e127f1322ee32bfece7dc5d4283b6cce1c3d07" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re writing a template filter that only expects a string as the first argument, you should use the decorator &lt;code&gt;stringfilter&lt;/code&gt;. This will convert an object to its string value before being passed to your function:</source>
          <target state="translated">如果要编写仅将字符串作为第一个参数的模板过滤器，则应使用装饰器 &lt;code&gt;stringfilter&lt;/code&gt; 。这将在将对象传递给函数之前将其转换为字符串值：</target>
        </trans-unit>
        <trans-unit id="62e93f9276c7d2bf03dab03afbe7a0d01da88a4a" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re writing reusable views or templates, you may not know ahead of time whether your form is a multipart form or not. The &lt;code&gt;is_multipart()&lt;/code&gt; method tells you whether the form requires multipart encoding for submission:</source>
          <target state="translated">如果要编写可重用的视图或模板，则可能无法提前知道表单是否为多部分表单。该 &lt;code&gt;is_multipart()&lt;/code&gt; 方法告诉你的表单是否需要提交多编码：</target>
        </trans-unit>
        <trans-unit id="0b3ccbce78a9deb2e8380cbbbf0c3e8d425150d4" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re writing some code that must handle an unknown model, for example, in a third-party app that implements a generic view, use this manager (or &lt;a href=&quot;#django.db.models.Model._base_manager&quot;&gt;&lt;code&gt;_base_manager&lt;/code&gt;&lt;/a&gt;) rather than assuming the model has an &lt;code&gt;objects&lt;/code&gt; manager.</source>
          <target state="translated">如果您正在编写一些必须处理未知模型的代码，例如，在实现通用视图的第三方应用程序中，请使用此管理器（或&lt;a href=&quot;#django.db.models.Model._base_manager&quot;&gt; &lt;code&gt;_base_manager&lt;/code&gt; &lt;/a&gt;），而不要假设模型具有 &lt;code&gt;objects&lt;/code&gt; 管理器。</target>
        </trans-unit>
        <trans-unit id="ffa49a02c217a153d3911b777d92a70dad025527" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve activated the automatic Django admin interface, you should see a &amp;ldquo;Flatpages&amp;rdquo; section on the admin index page. Edit flatpages as you edit any other object in the system.</source>
          <target state="translated">如果您已经激活了自动Django管理界面，则应该在管理索引页面上看到&amp;ldquo;平台&amp;rdquo;部分。在编辑系统中的任何其他对象时编辑平面。</target>
        </trans-unit>
        <trans-unit id="8c91814cc038e9087397b1c9d79e06cb53c2998e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve activated the automatic Django admin interface, you should see a &amp;ldquo;Redirects&amp;rdquo; section on the admin index page. Edit redirects as you edit any other object in the system.</source>
          <target state="translated">如果您已经激活了自动Django管理界面，则应该在管理索引页面上看到&amp;ldquo;重定向&amp;rdquo;部分。当您编辑系统中的任何其他对象时，编辑重定向。</target>
        </trans-unit>
        <trans-unit id="746003a32ff1823f7c12c2c3009e4bcdbdada474" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve always used naive datetimes, you probably believe that you can convert a datetime to a date by calling its &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime.date&quot;&gt;&lt;code&gt;date()&lt;/code&gt;&lt;/a&gt; method. You also consider that a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; is a lot like a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;, except that it&amp;rsquo;s less accurate.</source>
          <target state="translated">如果您一直使用朴素的日期时间，则可能会相信可以通过调用其&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime.date&quot;&gt; &lt;code&gt;date()&lt;/code&gt; &lt;/a&gt;方法将日期时间转换为日期。您还认为&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;很像&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;，只是日期不那么准确。</target>
        </trans-unit>
        <trans-unit id="510f1ae50ede1300d4b2693ad8c71631f7d7fb86" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve customized the &lt;a href=&quot;../../settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting, &lt;a href=&quot;../../middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt;&lt;code&gt;django.contrib.auth.middleware.AuthenticationMiddleware&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../middleware#django.contrib.messages.middleware.MessageMiddleware&quot;&gt;&lt;code&gt;django.contrib.messages.middleware.MessageMiddleware&lt;/code&gt;&lt;/a&gt; must be included.</source>
          <target state="translated">如果您已自定义&lt;a href=&quot;../../settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt;设置，则必须包括&lt;a href=&quot;../../middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt; &lt;code&gt;django.contrib.auth.middleware.AuthenticationMiddleware&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../middleware#django.contrib.messages.middleware.MessageMiddleware&quot;&gt; &lt;code&gt;django.contrib.messages.middleware.MessageMiddleware&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="46537cc51b7d74f1917135d14f86f7f048e20457" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve never had to deal with tests before, they can look a little hard to write at first glance. Fortunately, testing is a &lt;em&gt;very&lt;/em&gt; big subject in computer programming, so there&amp;rsquo;s lots of information out there:</source>
          <target state="translated">如果您以前从未处理过测试，那么乍一看它们可能很难编写。幸运的是，测试是计算机编程中&lt;em&gt;非常&lt;/em&gt;大的主题，因此有很多信息：</target>
        </trans-unit>
        <trans-unit id="b1fcac0f08f188a490cc866525da1cb739eb8667" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve saved an instance to one database, it might be tempting to use &lt;code&gt;save(using=...)&lt;/code&gt; as a way to migrate the instance to a new database. However, if you don&amp;rsquo;t take appropriate steps, this could have some unexpected consequences.</source>
          <target state="translated">如果您已将实例保存到一个数据库，则可能会想使用 &lt;code&gt;save(using=...)&lt;/code&gt; 作为将实例迁移到新数据库的一种方式。但是，如果您没有采取适当的步骤，则可能会产生一些意想不到的后果。</target>
        </trans-unit>
        <trans-unit id="e02d2ccf5c1a7f35c124bfd1c3140db6fcf906af" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve used the &lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; command you&amp;rsquo;ve probably already seen &lt;code&gt;dependencies&lt;/code&gt; in action because auto-created migrations have this defined as part of their creation process.</source>
          <target state="translated">如果使用了&lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt;命令，则可能已经在使用 &lt;code&gt;dependencies&lt;/code&gt; ，因为自动创建的迁移将其定义为创建过程的一部分。</target>
        </trans-unit>
        <trans-unit id="57c4c61903f21939d1b79448096a5c411639cc93" translate="yes" xml:space="preserve">
          <source>If your &lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt;&lt;code&gt;AUTH_USER_MODEL&lt;/code&gt;&lt;/a&gt; inherits from &lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser&quot;&gt;&lt;code&gt;AbstractBaseUser&lt;/code&gt;&lt;/a&gt; or implements its own &lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash&quot;&gt;&lt;code&gt;get_session_auth_hash()&lt;/code&gt;&lt;/a&gt; method, authenticated sessions will include the hash returned by this function. In the &lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser&quot;&gt;&lt;code&gt;AbstractBaseUser&lt;/code&gt;&lt;/a&gt; case, this is an HMAC of the password field. Django verifies that the hash in the session for each request matches the one that&amp;rsquo;s computed during the request. This allows a user to log out all of their sessions by changing their password.</source>
          <target state="translated">如果您的&lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt; &lt;code&gt;AUTH_USER_MODEL&lt;/code&gt; &lt;/a&gt;继承自&lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser&quot;&gt; &lt;code&gt;AbstractBaseUser&lt;/code&gt; &lt;/a&gt;或实现自己的&lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash&quot;&gt; &lt;code&gt;get_session_auth_hash()&lt;/code&gt; &lt;/a&gt;方法，则经过身份验证的会话将包含此函数返回的哈希。在&lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser&quot;&gt; &lt;code&gt;AbstractBaseUser&lt;/code&gt; &lt;/a&gt;情况下，这是密码字段的HMAC。Django会验证会话中每个请求的哈希是否与请求期间计算的哈希匹配。这使用户可以通过更改密码注销所有会话。</target>
        </trans-unit>
        <trans-unit id="ff6fb60a475d1cd1de37b15f96dc6b92a8c3143c" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;ModelForm&lt;/code&gt; and &lt;code&gt;ModelAdmin&lt;/code&gt; both define an &lt;code&gt;exclude&lt;/code&gt; option then &lt;code&gt;ModelAdmin&lt;/code&gt; takes precedence:</source>
          <target state="translated">如果您的 &lt;code&gt;ModelForm&lt;/code&gt; 和 &lt;code&gt;ModelAdmin&lt;/code&gt; 都定义了 &lt;code&gt;exclude&lt;/code&gt; 选项，则 &lt;code&gt;ModelAdmin&lt;/code&gt; 优先：</target>
        </trans-unit>
        <trans-unit id="eaae8d7419df5dae5e0d1df980784410834abbbb" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;RunPython&lt;/code&gt; or &lt;code&gt;RunSQL&lt;/code&gt; operation only affects one model, it&amp;rsquo;s good practice to pass &lt;code&gt;model_name&lt;/code&gt; as a hint to make it as transparent as possible to the router. This is especially important for reusable and third-party apps.</source>
          <target state="translated">如果您的 &lt;code&gt;RunPython&lt;/code&gt; 或 &lt;code&gt;RunSQL&lt;/code&gt; 操作仅影响一个模型，则最好传递 &lt;code&gt;model_name&lt;/code&gt; 作为提示，以使其对路由器尽可能透明。这对于可重用和第三方应用程序尤其重要。</target>
        </trans-unit>
        <trans-unit id="17d97886edb51352b4b876638aac3d9f4f3ca528" translate="yes" xml:space="preserve">
          <source>If your Django app is behind a proxy, though, the proxy may be &amp;ldquo;swallowing&amp;rdquo; whether the original request uses HTTPS or not. If there is a non-HTTPS connection between the proxy and Django then &lt;code&gt;is_secure()&lt;/code&gt; would always return &lt;code&gt;False&lt;/code&gt; &amp;ndash; even for requests that were made via HTTPS by the end user. In contrast, if there is an HTTPS connection between the proxy and Django then &lt;code&gt;is_secure()&lt;/code&gt; would always return &lt;code&gt;True&lt;/code&gt; &amp;ndash; even for requests that were made originally via HTTP.</source>
          <target state="translated">但是，如果您的Django应用位于代理之后，则该代理可能会&amp;ldquo;吞咽&amp;rdquo;原始请求是否使用HTTPS。如果在代理和Django的之间的非HTTPS连接，然后 &lt;code&gt;is_secure()&lt;/code&gt; 总是返回 &lt;code&gt;False&lt;/code&gt; -即使是通过HTTPS终端用户所做的请求。相反，如果有代理和Django的之间的HTTPS连接，然后 &lt;code&gt;is_secure()&lt;/code&gt; 总是返回 &lt;code&gt;True&lt;/code&gt; -即使是通过HTTP最初提出的请求。</target>
        </trans-unit>
        <trans-unit id="5497b62e97032ff943fb4f10c5f320b8f45dac4e" translate="yes" xml:space="preserve">
          <source>If your GDAL library is in a non-standard location, or you don&amp;rsquo;t want to modify the system&amp;rsquo;s library path then the &lt;a href=&quot;../gdal#std:setting-GDAL_LIBRARY_PATH&quot;&gt;&lt;code&gt;GDAL_LIBRARY_PATH&lt;/code&gt;&lt;/a&gt; setting may be added to your Django settings file with the full path to the GDAL library. For example:</source>
          <target state="translated">如果您的GDAL库位于非标准位置，或者您不想修改系统的库路径，则&lt;a href=&quot;../gdal#std:setting-GDAL_LIBRARY_PATH&quot;&gt; &lt;code&gt;GDAL_LIBRARY_PATH&lt;/code&gt; &lt;/a&gt;设置可能会添加到Django设置文件中，并带有GDAL库的完整路径。例如：</target>
        </trans-unit>
        <trans-unit id="6656b0bbfc9f0cf5bcaba4af9e2783f344122be3" translate="yes" xml:space="preserve">
          <source>If your GEOS library is in a non-standard location, or you don&amp;rsquo;t want to modify the system&amp;rsquo;s library path then the &lt;a href=&quot;../geos#std:setting-GEOS_LIBRARY_PATH&quot;&gt;&lt;code&gt;GEOS_LIBRARY_PATH&lt;/code&gt;&lt;/a&gt; setting may be added to your Django settings file with the full path to the GEOS C library. For example:</source>
          <target state="translated">如果您的GEOS库位于非标准位置，或者您不想修改系统的库路径，则可以将&lt;a href=&quot;../geos#std:setting-GEOS_LIBRARY_PATH&quot;&gt; &lt;code&gt;GEOS_LIBRARY_PATH&lt;/code&gt; &lt;/a&gt;设置添加到Django设置文件中，并带有GEOS C库的完整路径。例如：</target>
        </trans-unit>
        <trans-unit id="9503b6ac9885ede72752befeddae5b57e6923b42" translate="yes" xml:space="preserve">
          <source>If your MySQL setup does &lt;em&gt;not&lt;/em&gt; support transactions, then Django will always function in autocommit mode: statements will be executed and committed as soon as they&amp;rsquo;re called. If your MySQL setup &lt;em&gt;does&lt;/em&gt; support transactions, Django will handle transactions as explained in this document.</source>
          <target state="translated">如果你的MySQL安装程序&lt;em&gt;不&lt;/em&gt;支持事务，那么Django的功能将始终在自动提交模式：语句将被执行，一旦他们是所谓的承诺。如果您的MySQL设置&lt;em&gt;确实&lt;/em&gt;支持事务，则Django将按照本文档中的说明处理事务。</target>
        </trans-unit>
        <trans-unit id="7357f3c6b27ecc3b358d99481fc74b66e7e2445c" translate="yes" xml:space="preserve">
          <source>If your app already has models and database tables, and doesn&amp;rsquo;t have migrations yet (for example, you created it against a previous Django version), you&amp;rsquo;ll need to convert it to use migrations by running:</source>
          <target state="translated">如果您的应用程序已经具有模型和数据库表，并且还没有迁移（例如，您是根据以前的Django版本创建的），则需要通过运行以下命令将其转换为使用迁移：</target>
        </trans-unit>
        <trans-unit id="a6f0ecf7e5650fbc70efecf351f9f0234f1b8a8a" translate="yes" xml:space="preserve">
          <source>If your app is tested with multiple user models, using &lt;code&gt;@override_settings(AUTH_USER_MODEL=...)&lt;/code&gt; for example, and you cache the result of &lt;code&gt;get_user_model()&lt;/code&gt; in a module-level variable, you may need to listen to the &lt;a href=&quot;../../ref/signals#django.test.signals.setting_changed&quot;&gt;&lt;code&gt;setting_changed&lt;/code&gt;&lt;/a&gt; signal to clear the cache. For example:</source>
          <target state="translated">如果您的应用已通过多种用户模型进行了测试，例如使用 &lt;code&gt;@override_settings(AUTH_USER_MODEL=...)&lt;/code&gt; ，并且将 &lt;code&gt;get_user_model()&lt;/code&gt; 的结果缓存在模块级变量中，则可能需要侦听&lt;a href=&quot;../../ref/signals#django.test.signals.setting_changed&quot;&gt; &lt;code&gt;setting_changed&lt;/code&gt; &lt;/a&gt;信号以进行清除缓存。例如：</target>
        </trans-unit>
        <trans-unit id="19dcfebcbdd415cf375a630be2b6e427341d0dea" translate="yes" xml:space="preserve">
          <source>If your application connects to other systems &amp;ndash; for instance, if it queries a Web service &amp;ndash; make sure datetimes are properly specified. To transmit datetimes safely, their representation should include the UTC offset, or their values should be in UTC (or both!).</source>
          <target state="translated">如果您的应用程序连接到其他系统（例如，如果它查询Web服务），请确保正确指定了日期时间。为了安全地传输日期时间，它们的表示应包括UTC偏移量，或它们的值都应采用UTC（或两者都用！）。</target>
        </trans-unit>
        <trans-unit id="68eb798bc7d826d0f87acddbc39d34694074284b" translate="yes" xml:space="preserve">
          <source>If your application provides views, you may want to include tests that use the test client to exercise those views. However, an end user is free to deploy the views in your application at any URL of their choosing. This means that your tests can&amp;rsquo;t rely upon the fact that your views will be available at a particular URL. Decorate your test class or test method with &lt;code&gt;@override_settings(ROOT_URLCONF=...)&lt;/code&gt; for URLconf configuration.</source>
          <target state="translated">如果您的应用程序提供了视图，则可能要包括使用测试客户端执行这些视图的测试。但是，最终用户可以自由选择将其视图部署到您的应用程序中的任何URL。这意味着您的测试不能依赖您的视图将在特定URL可用的事实。使用 &lt;code&gt;@override_settings(ROOT_URLCONF=...)&lt;/code&gt; 装饰测试类或测试方法以进行URLconf配置。</target>
        </trans-unit>
        <trans-unit id="35485f3524af2f43a59e170657765450ecc8c6f8" translate="yes" xml:space="preserve">
          <source>If your authentication mechanism uses a custom HTTP header and not &lt;code&gt;REMOTE_USER&lt;/code&gt;, you can subclass &lt;code&gt;RemoteUserMiddleware&lt;/code&gt; and set the &lt;code&gt;header&lt;/code&gt; attribute to the desired &lt;code&gt;request.META&lt;/code&gt; key. For example:</source>
          <target state="translated">如果您的身份验证机制使用的是自定义HTTP标头而不是 &lt;code&gt;REMOTE_USER&lt;/code&gt; ，则可以子类 &lt;code&gt;RemoteUserMiddleware&lt;/code&gt; 并将 &lt;code&gt;header&lt;/code&gt; 属性设置为所需的 &lt;code&gt;request.META&lt;/code&gt; 密钥。例如：</target>
        </trans-unit>
        <trans-unit id="9779f7ac3b7339bf4ea6d174741695fcb45580da" translate="yes" xml:space="preserve">
          <source>If your background is in plain old PHP (with no use of modern frameworks), you&amp;rsquo;re probably used to putting code under the Web server&amp;rsquo;s document root (in a place such as &lt;code&gt;/var/www&lt;/code&gt;). With Django, you don&amp;rsquo;t do that. It&amp;rsquo;s not a good idea to put any of this Python code within your Web server&amp;rsquo;s document root, because it risks the possibility that people may be able to view your code over the Web. That&amp;rsquo;s not good for security.</source>
          <target state="translated">如果您的背景是使用简单的旧PHP（不使用现代框架），则可能习惯于将代码放在Web服务器的文档根目录下（在 &lt;code&gt;/var/www&lt;/code&gt; 等位置）。使用Django，您无需这么做。将任何这些Python代码放在​​Web服务器的文档根目录中不是一个好主意，因为这冒着人们可能通过Web查看您的代码的风险。这对安全性不利。</target>
        </trans-unit>
        <trans-unit id="ca388b1fedcaa5043ea95b9f8107592768d9f5dc" translate="yes" xml:space="preserve">
          <source>If your code attempts to access the database when its modules are compiled, this will occur &lt;em&gt;before&lt;/em&gt; the test database is set up, with potentially unexpected results. For example, if you have a database query in module-level code and a real database exists, production data could pollute your tests. &lt;em&gt;It is a bad idea to have such import-time database queries in your code&lt;/em&gt; anyway - rewrite your code so that it doesn&amp;rsquo;t do this.</source>
          <target state="translated">如果您的代码在编译模块时尝试访问数据库，则这将&lt;em&gt;在&lt;/em&gt;建立测试数据库&lt;em&gt;之前&lt;/em&gt;发生，并可能导致意外结果。例如，如果您在模块级代码中进行数据库查询，并且存在真实数据库，则生产数据可能会污染您的测试。无论如何&lt;em&gt;，在代码中都包含这样的导入时数据库查询是一个坏主意&lt;/em&gt; -重写代码，使其不会执行此操作。</target>
        </trans-unit>
        <trans-unit id="8b9eb50ad139972e07c5927be25959ddc8c43a98" translate="yes" xml:space="preserve">
          <source>If your code imports the application registry in an application&amp;rsquo;s &lt;code&gt;__init__.py&lt;/code&gt;, the name &lt;code&gt;apps&lt;/code&gt; will clash with the &lt;code&gt;apps&lt;/code&gt; submodule. The best practice is to move that code to a submodule and import it. A workaround is to import the registry under a different name:</source>
          <target state="translated">如果您的代码将应用程序注册表导入到应用程序的 &lt;code&gt;__init__.py&lt;/code&gt; 中，则名称 &lt;code&gt;apps&lt;/code&gt; 将与 &lt;code&gt;apps&lt;/code&gt; 子模块冲突。最佳实践是将代码移至子模块并导入。解决方法是使用其他名称导入注册表：</target>
        </trans-unit>
        <trans-unit id="037c62c31dab165af710e06e5131c4b392f063c1" translate="yes" xml:space="preserve">
          <source>If your code only uses ASCII data, it&amp;rsquo;s safe to use your normal strings, passing them around at will, because ASCII is a subset of UTF-8.</source>
          <target state="translated">如果您的代码仅使用ASCII数据，则可以安全地使用常规字符串，并随意传递它们，因为ASCII是UTF-8的子集。</target>
        </trans-unit>
        <trans-unit id="e54e295adfb62bcb63529d5938619c752337731c" translate="yes" xml:space="preserve">
          <source>If your command defines mandatory positional arguments, you can customize the message error returned in the case of missing arguments. The default is output by &lt;a href=&quot;https://docs.python.org/3/library/argparse.html#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; (&amp;ldquo;too few arguments&amp;rdquo;).</source>
          <target state="translated">如果您的命令定义了必需的位置参数，则可以自定义在缺少参数的情况下返回的消息错误。缺省值由&lt;a href=&quot;https://docs.python.org/3/library/argparse.html#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;输出（&amp;ldquo;参数过多&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="8b66d0e6b2d3c34277e5351352f9e2d49c89f40f" translate="yes" xml:space="preserve">
          <source>If your custom &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; class deals with data structures that are more complex than strings, dates, integers, or floats, then you may need to override &lt;a href=&quot;../ref/models/fields#django.db.models.Field.from_db_value&quot;&gt;&lt;code&gt;from_db_value()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/models/fields#django.db.models.Field.to_python&quot;&gt;&lt;code&gt;to_python()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您的自定义&lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;类处理的数据结构比字符串，日期，整数或浮点数复杂，那么您可能需要覆盖&lt;a href=&quot;../ref/models/fields#django.db.models.Field.from_db_value&quot;&gt; &lt;code&gt;from_db_value()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/models/fields#django.db.models.Field.to_python&quot;&gt; &lt;code&gt;to_python()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="42459a545a83bcbb2b1a6c5d0c989d612ebefbcf" translate="yes" xml:space="preserve">
          <source>If your custom field uses the &lt;code&gt;CHAR&lt;/code&gt;, &lt;code&gt;VARCHAR&lt;/code&gt; or &lt;code&gt;TEXT&lt;/code&gt; types for MySQL, you must make sure that &lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_prep_value&quot;&gt;&lt;code&gt;get_prep_value()&lt;/code&gt;&lt;/a&gt; always returns a string type. MySQL performs flexible and unexpected matching when a query is performed on these types and the provided value is an integer, which can cause queries to include unexpected objects in their results. This problem cannot occur if you always return a string type from &lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_prep_value&quot;&gt;&lt;code&gt;get_prep_value()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您的自定义字段使用MySQL 的 &lt;code&gt;CHAR&lt;/code&gt; ， &lt;code&gt;VARCHAR&lt;/code&gt; 或 &lt;code&gt;TEXT&lt;/code&gt; 类型，则必须确保&lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_prep_value&quot;&gt; &lt;code&gt;get_prep_value()&lt;/code&gt; &lt;/a&gt;始终返回字符串类型。当对这些类型执行查询并且提供的值是整数时，MySQL执行灵活且意外的匹配，这可能导致查询的结果中包含意外的对象。如果您始终从&lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_prep_value&quot;&gt; &lt;code&gt;get_prep_value()&lt;/code&gt; &lt;/a&gt;返回一个字符串类型，则不会发生此问题。</target>
        </trans-unit>
        <trans-unit id="5f134f8d6891d13bafe02ccedf40254834ce3b1c" translate="yes" xml:space="preserve">
          <source>If your custom user model is a subclass of &lt;code&gt;AbstractUser&lt;/code&gt;, then you can extend these forms in this manner:</source>
          <target state="translated">如果您的自定义用户模型是 &lt;code&gt;AbstractUser&lt;/code&gt; 的子类，则可以通过以下方式扩展这些形式：</target>
        </trans-unit>
        <trans-unit id="7489ac299b65b30e1fabb441ed4d0427d3e20fa3" translate="yes" xml:space="preserve">
          <source>If your data does &lt;em&gt;not&lt;/em&gt; validate, the &lt;code&gt;cleaned_data&lt;/code&gt; dictionary contains only the valid fields:</source>
          <target state="translated">如果您的数据&lt;em&gt;未&lt;/em&gt;通过验证，则 &lt;code&gt;cleaned_data&lt;/code&gt; 词典仅包含有效字段：</target>
        </trans-unit>
        <trans-unit id="66fee195a0e25a7f977bf0cd9ad9e712b37631fd" translate="yes" xml:space="preserve">
          <source>If your database column name is an SQL reserved word, or contains characters that aren&amp;rsquo;t allowed in Python variable names &amp;ndash; notably, the hyphen &amp;ndash; that&amp;rsquo;s OK. Django quotes column and table names behind the scenes.</source>
          <target state="translated">如果您的数据库列名称是SQL保留字，或者包含Python变量名称中不允许使用的字符（尤其是连字符），则可以。Django在幕后引用列名和表名。</target>
        </trans-unit>
        <trans-unit id="83b77d8f63e76cf58cc37344473b9afbbd464eed" translate="yes" xml:space="preserve">
          <source>If your database configuration requires a specific creation order, you can specify the dependencies that exist using the &lt;a href=&quot;../../ref/settings#std:setting-TEST_DEPENDENCIES&quot;&gt;&lt;code&gt;DEPENDENCIES&lt;/code&gt;&lt;/a&gt; test setting. Consider the following (simplified) example database configuration:</source>
          <target state="translated">如果您的数据库配置需要特定的创建顺序，则可以使用&lt;a href=&quot;../../ref/settings#std:setting-TEST_DEPENDENCIES&quot;&gt; &lt;code&gt;DEPENDENCIES&lt;/code&gt; &lt;/a&gt;测试设置指定存在的依赖项。考虑以下（简化的）示例数据库配置：</target>
        </trans-unit>
        <trans-unit id="7805750627528231fb20224a0ae84ae501c12e42" translate="yes" xml:space="preserve">
          <source>If your database table name is an SQL reserved word, or contains characters that aren&amp;rsquo;t allowed in Python variable names &amp;ndash; notably, the hyphen &amp;ndash; that&amp;rsquo;s OK. Django quotes column and table names behind the scenes.</source>
          <target state="translated">如果您的数据库表名称是SQL保留字，或者包含Python变量名称中不允许使用的字符（尤其是连字符），则可以。Django在幕后引用列名和表名。</target>
        </trans-unit>
        <trans-unit id="b9f5f90e03e19a8bb4a87f8c1e61359a54e098f8" translate="yes" xml:space="preserve">
          <source>If your deployment situation allows, it&amp;rsquo;s usually a good idea to have your front-end Web server perform the functionality provided by the &lt;code&gt;SecurityMiddleware&lt;/code&gt;. That way, if there are requests that aren&amp;rsquo;t served by Django (such as static media or user-uploaded files), they will have the same protections as requests to your Django application.</source>
          <target state="translated">如果您的部署情况允许，让前端Web服务器执行 &lt;code&gt;SecurityMiddleware&lt;/code&gt; 提供的功能通常是个好主意。这样，如果存在Django不提供的请求（例如静态媒体或用户上传的文件），则它们将具有与Django应用程序的请求相同的保护。</target>
        </trans-unit>
        <trans-unit id="b1ce081d315c1a0717aefc66e3fbb209ac78a158" translate="yes" xml:space="preserve">
          <source>If your form includes a &lt;a href=&quot;../../ref/forms/fields#django.forms.URLField&quot;&gt;&lt;code&gt;URLField&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;../../ref/forms/fields#django.forms.EmailField&quot;&gt;&lt;code&gt;EmailField&lt;/code&gt;&lt;/a&gt; or any integer field type, Django will use the &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt; and &lt;code&gt;number&lt;/code&gt; HTML5 input types. By default, browsers may apply their own validation on these fields, which may be stricter than Django&amp;rsquo;s validation. If you would like to disable this behavior, set the &lt;code&gt;novalidate&lt;/code&gt; attribute on the &lt;code&gt;form&lt;/code&gt; tag, or specify a different widget on the field, like &lt;a href=&quot;../../ref/forms/widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您的表单包含&lt;a href=&quot;../../ref/forms/fields#django.forms.URLField&quot;&gt; &lt;code&gt;URLField&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../ref/forms/fields#django.forms.EmailField&quot;&gt; &lt;code&gt;EmailField&lt;/code&gt; &lt;/a&gt;或任何整数字段类型，则Django将使用 &lt;code&gt;url&lt;/code&gt; ， &lt;code&gt;email&lt;/code&gt; 和 &lt;code&gt;number&lt;/code&gt; HTML5输入类型。默认情况下，浏览器可以在这些字段上应用自己的验证，这可能比Django的验证更严格。如果要禁用此行为，请在 &lt;code&gt;form&lt;/code&gt; 标记上设置 &lt;code&gt;novalidate&lt;/code&gt; 属性，或在字段上指定其他小部件，例如&lt;a href=&quot;../../ref/forms/widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9e4e143f7d7dfb7b18d9cf7a1c3427090cb8e9a5" translate="yes" xml:space="preserve">
          <source>If your hasher doesn&amp;rsquo;t have a work factor, implement the method as a no-op (&lt;code&gt;pass&lt;/code&gt;).</source>
          <target state="translated">如果您的哈希器没有工作因素，请将该方法实现为no-op（ &lt;code&gt;pass&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b9f54aed909184fec0b6faab802c1ba2803adca8" translate="yes" xml:space="preserve">
          <source>If your middleware has both &lt;code&gt;sync_capable = True&lt;/code&gt; and &lt;code&gt;async_capable = True&lt;/code&gt;, then Django will pass it the request without converting it. In this case, you can work out if your middleware will receive async requests by checking if the &lt;code&gt;get_response&lt;/code&gt; object you are passed is a coroutine function, using &lt;a href=&quot;https://docs.python.org/3/library/asyncio-task.html#asyncio.iscoroutinefunction&quot;&gt;&lt;code&gt;asyncio.iscoroutinefunction()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您的中间件同时具有 &lt;code&gt;sync_capable = True&lt;/code&gt; 和 &lt;code&gt;async_capable = True&lt;/code&gt; ，则Django会将请求传递给它而不进行转换。在这种情况下，您可以使用&lt;a href=&quot;https://docs.python.org/3/library/asyncio-task.html#asyncio.iscoroutinefunction&quot;&gt; &lt;code&gt;asyncio.iscoroutinefunction()&lt;/code&gt; &lt;/a&gt;来检查传递给您的 &lt;code&gt;get_response&lt;/code&gt; 对象是否为协程函数，从而确定中间件是否会接收异步请求。</target>
        </trans-unit>
        <trans-unit id="b352e31157863463daa5a9b2b4a00f05e691f6ce" translate="yes" xml:space="preserve">
          <source>If your model contains more than one foreign key to the same model, you&amp;rsquo;ll need to resolve the ambiguity manually using &lt;code&gt;fk_name&lt;/code&gt;. For example, consider the following model:</source>
          <target state="translated">如果您的模型包含同一模型的多个外键，则需要使用 &lt;code&gt;fk_name&lt;/code&gt; 手动解决歧义。例如，考虑以下模型：</target>
        </trans-unit>
        <trans-unit id="6ca7a43d3ceacd8c83aa87a7c6008e8f5f3287d7" translate="yes" xml:space="preserve">
          <source>If your model has a &lt;a href=&quot;../../models/instances#django.db.models.Model.get_absolute_url&quot;&gt;&lt;code&gt;get_absolute_url()&lt;/code&gt;&lt;/a&gt; method but you don&amp;rsquo;t want the &amp;ldquo;View on site&amp;rdquo; button to appear, you only need to set &lt;code&gt;view_on_site&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt;:</source>
          <target state="translated">如果您的模型具有&lt;a href=&quot;../../models/instances#django.db.models.Model.get_absolute_url&quot;&gt; &lt;code&gt;get_absolute_url()&lt;/code&gt; &lt;/a&gt;方法，但是您不希望显示&amp;ldquo;现场查看&amp;rdquo;按钮，则只需将 &lt;code&gt;view_on_site&lt;/code&gt; 设置为 &lt;code&gt;False&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="55784988b7d647b9df1a836203e5bf6b7c5dabc3" translate="yes" xml:space="preserve">
          <source>If your model has more than one &lt;a href=&quot;../models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; to the &lt;code&gt;parent_model&lt;/code&gt;, you must specify a &lt;code&gt;fk_name&lt;/code&gt;.</source>
          <target state="translated">如果您的模型对 &lt;code&gt;parent_model&lt;/code&gt; 有多个&lt;a href=&quot;../models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;，则必须指定一个 &lt;code&gt;fk_name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e6dc5086c9587c9e487ae0b9fdc36e7f3231fe93" translate="yes" xml:space="preserve">
          <source>If your model&amp;rsquo;s &lt;a href=&quot;../../topics/db/models#meta-options&quot;&gt;Meta&lt;/a&gt; specifies &lt;a href=&quot;options#django.db.models.Options.get_latest_by&quot;&gt;&lt;code&gt;get_latest_by&lt;/code&gt;&lt;/a&gt;, you can omit any arguments to &lt;code&gt;earliest()&lt;/code&gt; or &lt;code&gt;latest()&lt;/code&gt;. The fields specified in &lt;a href=&quot;options#django.db.models.Options.get_latest_by&quot;&gt;&lt;code&gt;get_latest_by&lt;/code&gt;&lt;/a&gt; will be used by default.</source>
          <target state="translated">如果您模型的&lt;a href=&quot;../../topics/db/models#meta-options&quot;&gt;Meta&lt;/a&gt;指定了&lt;a href=&quot;options#django.db.models.Options.get_latest_by&quot;&gt; &lt;code&gt;get_latest_by&lt;/code&gt; &lt;/a&gt;，则可以忽略任何参数earlyest &lt;code&gt;earliest()&lt;/code&gt; 或 &lt;code&gt;latest()&lt;/code&gt; 。默认情况下，将使用在&lt;a href=&quot;options#django.db.models.Options.get_latest_by&quot;&gt; &lt;code&gt;get_latest_by&lt;/code&gt; 中&lt;/a&gt;指定的字段。</target>
        </trans-unit>
        <trans-unit id="151f04ef6d26ef02a6f8f49d9494948ff5996818" translate="yes" xml:space="preserve">
          <source>If your project uses proxy models, you must either modify the proxy to extend the user model that&amp;rsquo;s in use in your project, or merge your proxy&amp;rsquo;s behavior into your &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; subclass.</source>
          <target state="translated">如果项目使用代理模型，则必须修改代理以扩展项目中正在使用的用户模型，或者将代理的行为合并到&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;子类中。</target>
        </trans-unit>
        <trans-unit id="44824388e510837cfa981ebd84a663ae9c830298" translate="yes" xml:space="preserve">
          <source>If your request used the &lt;code&gt;follow&lt;/code&gt; argument, the &lt;code&gt;expected_url&lt;/code&gt; and &lt;code&gt;target_status_code&lt;/code&gt; will be the url and status code for the final point of the redirect chain.</source>
          <target state="translated">如果您的请求中使用的 &lt;code&gt;follow&lt;/code&gt; 参数， &lt;code&gt;expected_url&lt;/code&gt; 和 &lt;code&gt;target_status_code&lt;/code&gt; 将是重定向链的最终点的网址和状态代码。</target>
        </trans-unit>
        <trans-unit id="90e0da33d8c8d3ffe3995050565ede94840b1dd8" translate="yes" xml:space="preserve">
          <source>If your root URLconf uses &lt;a href=&quot;#django.conf.urls.i18n.i18n_patterns&quot;&gt;&lt;code&gt;i18n_patterns()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;JavaScriptCatalog&lt;/code&gt; must also be wrapped by &lt;code&gt;i18n_patterns()&lt;/code&gt; for the catalog to be correctly generated.</source>
          <target state="translated">如果您的根URLconf使用&lt;a href=&quot;#django.conf.urls.i18n.i18n_patterns&quot;&gt; &lt;code&gt;i18n_patterns()&lt;/code&gt; &lt;/a&gt;，则 &lt;code&gt;JavaScriptCatalog&lt;/code&gt; 也必须由 &lt;code&gt;i18n_patterns()&lt;/code&gt; 包装，以便正确生成目录。</target>
        </trans-unit>
        <trans-unit id="6df4fb6245e051b9d36fab3f466fa1d09ca7a5f9" translate="yes" xml:space="preserve">
          <source>If your site accepts file uploads, it is strongly advised that you limit these uploads in your Web server configuration to a reasonable size in order to prevent denial of service (DOS) attacks. In Apache, this can be easily set using the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/mod/core.html#limitrequestbody&quot;&gt;LimitRequestBody&lt;/a&gt; directive.</source>
          <target state="translated">如果您的站点接受文件上载，则强烈建议您将Web服务器配置中的这些上载限制为合理的大小，以防止拒绝服务（DOS）攻击。在Apache中，可以使用&lt;a href=&quot;https://httpd.apache.org/docs/2.4/mod/core.html#limitrequestbody&quot;&gt;LimitRequestBody&lt;/a&gt;指令轻松设置此值。</target>
        </trans-unit>
        <trans-unit id="6f8d605a5c50ad541297eddd5069d8164b968b86" translate="yes" xml:space="preserve">
          <source>If your site offers both HTTP and HTTPS connections, most users will end up with an unsecured connection by default. For best security, you should redirect all HTTP connections to HTTPS.</source>
          <target state="translated">如果你的网站同时提供HTTP和HTTPS连接,大多数用户最终会默认使用不安全的连接。为了达到最佳的安全性,你应该将所有的HTTP连接重定向到HTTPS。</target>
        </trans-unit>
        <trans-unit id="d3c6bc1158a1e98cf03b8d846800ac77b1fa4b8a" translate="yes" xml:space="preserve">
          <source>If your site sends emails, these values need to be set correctly.</source>
          <target state="translated">如果你的网站发送电子邮件,这些值需要正确设置。</target>
        </trans-unit>
        <trans-unit id="9aa8302c804c3a783e15d8c95fda308c718b94b7" translate="yes" xml:space="preserve">
          <source>If your site serves user-uploaded files, a malicious user could upload a specially-crafted file that would be interpreted as HTML or JavaScript by the browser when you expected it to be something harmless.</source>
          <target state="translated">如果您的网站提供用户上传的文件,恶意用户可能会上传一个特制的文件,当您认为它是无害的东西时,该文件会被浏览器解释为HTML或JavaScript。</target>
        </trans-unit>
        <trans-unit id="0ad66de9dea62ec082b44fd754a56be3eb2434f8" translate="yes" xml:space="preserve">
          <source>If your site uses Django&amp;rsquo;s &lt;a href=&quot;../auth/index&quot;&gt;authentication system&lt;/a&gt; and you deal with logging in users, you can use the test client&amp;rsquo;s &lt;code&gt;login()&lt;/code&gt; method to simulate the effect of a user logging into the site.</source>
          <target state="translated">如果您的站点使用Django的&lt;a href=&quot;../auth/index&quot;&gt;身份验证系统&lt;/a&gt;并且您要处理用户登录，则可以使用测试客户端的 &lt;code&gt;login()&lt;/code&gt; 方法来模拟用户登录站点的效果。</target>
        </trans-unit>
        <trans-unit id="d440a3cae88c7b38cb98393225850ee488a3a51c" translate="yes" xml:space="preserve">
          <source>If your site uses Django&amp;rsquo;s &lt;a href=&quot;../auth/index&quot;&gt;authentication system&lt;/a&gt;, the &lt;code&gt;logout()&lt;/code&gt; method can be used to simulate the effect of a user logging out of your site.</source>
          <target state="translated">如果您的站点使用Django的&lt;a href=&quot;../auth/index&quot;&gt;身份验证系统&lt;/a&gt;，则 &lt;code&gt;logout()&lt;/code&gt; 方法可用于模拟用户退出站点的效果。</target>
        </trans-unit>
        <trans-unit id="0ae4efc81923d0d641f95a6dbd07af8563d1a6b5" translate="yes" xml:space="preserve">
          <source>If your site uses Django&amp;rsquo;s &lt;a href=&quot;../auth/index&quot;&gt;authentication system&lt;/a&gt;, you can use the &lt;code&gt;force_login()&lt;/code&gt; method to simulate the effect of a user logging into the site. Use this method instead of &lt;a href=&quot;#django.test.Client.login&quot;&gt;&lt;code&gt;login()&lt;/code&gt;&lt;/a&gt; when a test requires a user be logged in and the details of how a user logged in aren&amp;rsquo;t important.</source>
          <target state="translated">如果您的站点使用Django的&lt;a href=&quot;../auth/index&quot;&gt;身份验证系统&lt;/a&gt;，则可以使用 &lt;code&gt;force_login()&lt;/code&gt; 方法来模拟用户登录该站点的效果。当测试要求用户登录且用户登录方式的详细信息并不重要时，请使用此方法代替&lt;a href=&quot;#django.test.Client.login&quot;&gt; &lt;code&gt;login()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="56c55021691d4a1273096fb3bde5d2de5ed1abf6" translate="yes" xml:space="preserve">
          <source>If your site uses the same rendering logic for forms in multiple places, you can reduce duplication by saving the form&amp;rsquo;s loop in a standalone template and using the &lt;a href=&quot;../../ref/templates/builtins#std:templatetag-include&quot;&gt;&lt;code&gt;include&lt;/code&gt;&lt;/a&gt; tag to reuse it in other templates:</source>
          <target state="translated">如果您的站点在多个位置对表单使用相同的呈现逻辑，则可以通过将表单的循环保存在独立模板中并使用&lt;a href=&quot;../../ref/templates/builtins#std:templatetag-include&quot;&gt; &lt;code&gt;include&lt;/code&gt; &lt;/a&gt;标记在其他模板中重用它来减少重复：</target>
        </trans-unit>
        <trans-unit id="0462de7d96fe5e5014114972e806e852776e60fd" translate="yes" xml:space="preserve">
          <source>If your template tag needs to access the current context, you can use the &lt;code&gt;takes_context&lt;/code&gt; argument when registering your tag:</source>
          <target state="translated">如果您的模板标签需要访问当前上下文，则可以在注册标签时使用 &lt;code&gt;takes_context&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="131d5a32009bb9c3437d883a85b81cbab612c507" translate="yes" xml:space="preserve">
          <source>If your tests make any database queries, use subclasses &lt;a href=&quot;#django.test.TransactionTestCase&quot;&gt;&lt;code&gt;TransactionTestCase&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.test.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您的测试进行任何数据库查询，请使用子类&lt;a href=&quot;#django.test.TransactionTestCase&quot;&gt; &lt;code&gt;TransactionTestCase&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#django.test.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="93b76f5f9b3d3f25cd25b34d9927950756431ed5" translate="yes" xml:space="preserve">
          <source>If your tests rely on database access such as creating or querying models, be sure to create your test classes as subclasses of &lt;a href=&quot;tools#django.test.TestCase&quot;&gt;&lt;code&gt;django.test.TestCase&lt;/code&gt;&lt;/a&gt; rather than &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您的测试依赖于数据库访问（例如创建或查询模型），请确保将测试类创建为&lt;a href=&quot;tools#django.test.TestCase&quot;&gt; &lt;code&gt;django.test.TestCase&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; 的&lt;/a&gt;子类。</target>
        </trans-unit>
        <trans-unit id="7ea04c1e37c45f0d4b469802f36772d32e7b6af6" translate="yes" xml:space="preserve">
          <source>If your view is not rendering a template containing the &lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt;&lt;code&gt;csrf_token&lt;/code&gt;&lt;/a&gt; template tag, Django might not set the CSRF token cookie. This is common in cases where forms are dynamically added to the page. To address this case, Django provides a view decorator which forces setting of the cookie: &lt;a href=&quot;#django.views.decorators.csrf.ensure_csrf_cookie&quot;&gt;&lt;code&gt;ensure_csrf_cookie()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您的视图未呈现包含&lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt; &lt;code&gt;csrf_token&lt;/code&gt; &lt;/a&gt;模板标签的模板，则Django可能未设置CSRF令牌cookie。在将表单动态添加到页面的情况下，这很常见。为了解决这种情况，Django提供了一个视图装饰器来强制设置cookie：&lt;a href=&quot;#django.views.decorators.csrf.ensure_csrf_cookie&quot;&gt; &lt;code&gt;ensure_csrf_cookie()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="100164bf62bbd4acd7334a3ab2e0db0ddfb29848" translate="yes" xml:space="preserve">
          <source>If, as in the second example above, you&amp;rsquo;ve left the &lt;code&gt;default&lt;/code&gt; database empty, you must provide a database name each time you run &lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt;. Omitting the database name would raise an error. For the second example:</source>
          <target state="translated">如果像上面的第二个示例一样，将 &lt;code&gt;default&lt;/code&gt; 数据库留空，则每次运行&lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;时必须提供一个数据库名称。省略数据库名称将引发错误。对于第二个示例：</target>
        </trans-unit>
        <trans-unit id="05a2ca6c2742910df2490054ce0b70ad2788db45" translate="yes" xml:space="preserve">
          <source>If, for some reason, it was decided that the URLs where content for yearly article archives are published at should be changed then you would only need to change the entry in the URLconf.</source>
          <target state="translated">如果出于某种原因,决定改变年度文章存档内容发布的URL,那么你只需要改变URLconf中的条目。</target>
        </trans-unit>
        <trans-unit id="2bdda409711d05757642b136dd218873e3a28bc8" translate="yes" xml:space="preserve">
          <source>If, for some reason, you &lt;em&gt;want&lt;/em&gt; the test client to perform CSRF checks, you can create an instance of the test client that enforces CSRF checks. To do this, pass in the &lt;code&gt;enforce_csrf_checks&lt;/code&gt; argument when you construct your client:</source>
          <target state="translated">如果出于某种原因，您&lt;em&gt;希望&lt;/em&gt;测试客户端执行CSRF检查，则可以创建一个强制执行CSRF检查的测试客户端实例。为此，请在构造客户端时传递 &lt;code&gt;enforce_csrf_checks&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="cd25f650a89f987a8ae9410f69052145579c8043" translate="yes" xml:space="preserve">
          <source>If, for some reason, you &lt;em&gt;want&lt;/em&gt; the test client to perform CSRF checks, you can create an instance of the test client that enforces CSRF checks:</source>
          <target state="translated">如果出于某种原因，您&lt;em&gt;希望&lt;/em&gt;测试客户端执行CSRF检查，则可以创建实施CSRF检查的测试客户端实例：</target>
        </trans-unit>
        <trans-unit id="919bf73ea026018730b49f5cba48431bbbf54fd7" translate="yes" xml:space="preserve">
          <source>If, for some reason, your custom management command must run without an active locale (for example, to prevent translated content from being inserted into the database), deactivate translations using the &lt;code&gt;@no_translations&lt;/code&gt; decorator on your &lt;a href=&quot;#django.core.management.BaseCommand.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">如果由于某种原因您的自定义管理命令必须在没有活动语言环境的情况下运行（例如，防止翻译的内容插入数据库），请使用&lt;a href=&quot;#django.core.management.BaseCommand.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt;方法上的 &lt;code&gt;@no_translations&lt;/code&gt; 装饰器停用翻译：</target>
        </trans-unit>
        <trans-unit id="b07cc84bbd178c74aa2d9ca20dfcde5708a26518" translate="yes" xml:space="preserve">
          <source>If, however, you have no option but to serve media files on the same Apache &lt;code&gt;VirtualHost&lt;/code&gt; as Django, you can set up Apache to serve some URLs as static media, and others using the mod_wsgi interface to Django.</source>
          <target state="translated">但是，如果您别无选择，只能在与Django 相同的Apache &lt;code&gt;VirtualHost&lt;/code&gt; 上提供媒体文件，则可以将Apache设置为将某些URL用作静态媒体，将其他URL用作Django的mod_wsgi接口。</target>
        </trans-unit>
        <trans-unit id="9ce69c54fa4098f27900ed28ca0545fa9c86efee" translate="yes" xml:space="preserve">
          <source>If, however, you need to re-enable a globally-disabled action for one particular model, list it explicitly in your &lt;code&gt;ModelAdmin.actions&lt;/code&gt; list:</source>
          <target state="translated">但是，如果您需要为一个特定模型重新启用全局禁用的操作，请在 &lt;code&gt;ModelAdmin.actions&lt;/code&gt; 列表中明确列出该操作：</target>
        </trans-unit>
        <trans-unit id="4e214bf4c073cee123e8fb348d379cb842d22670" translate="yes" xml:space="preserve">
          <source>Ignore files, directories, or paths matching this glob-style pattern. Use multiple times to ignore more. When specifying a path, always use forward slashes, even on Windows.</source>
          <target state="translated">忽略与此glob样式模式匹配的文件、目录或路径。多次使用可以忽略更多的文件、目录或路径。当指定路径时,始终使用正斜线,即使在Windows上也是如此。</target>
        </trans-unit>
        <trans-unit id="b46ee8e1837971774646e299482d167d080ed7ef" translate="yes" xml:space="preserve">
          <source>Ignore the warning about unapplied database migrations for now; we&amp;rsquo;ll deal with the database shortly.</source>
          <target state="translated">暂时忽略有关未应用数据库迁移的警告；我们将尽快处理数据库。</target>
        </trans-unit>
        <trans-unit id="37586d575c14722fe8807bc994aadfaef7495bc6" translate="yes" xml:space="preserve">
          <source>Ignores directories matching the given &lt;a href=&quot;https://docs.python.org/3/library/glob.html#module-glob&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt;-style pattern. Use multiple times to ignore more.</source>
          <target state="translated">忽略与给定的&lt;a href=&quot;https://docs.python.org/3/library/glob.html#module-glob&quot;&gt; &lt;code&gt;glob&lt;/code&gt; &lt;/a&gt; -style模式匹配的目录。使用多次忽略更多。</target>
        </trans-unit>
        <trans-unit id="26f58245e8a0d7451fc5c47ad810a8c64487bb47" translate="yes" xml:space="preserve">
          <source>Ignores everything between &lt;code&gt;{% comment %}&lt;/code&gt; and &lt;code&gt;{% endcomment %}&lt;/code&gt;. An optional note may be inserted in the first tag. For example, this is useful when commenting out code for documenting why the code was disabled.</source>
          <target state="translated">忽略 &lt;code&gt;{% comment %}&lt;/code&gt; 和 &lt;code&gt;{% endcomment %}&lt;/code&gt; 。可以在第一个标签中插入可选注释。例如，在注释掉代码以记录为什么禁用代码时，这很有用。</target>
        </trans-unit>
        <trans-unit id="9ee48f68c602ee8c804d6234ef660c199f1fbe4a" translate="yes" xml:space="preserve">
          <source>Ignores fields and models that may have been removed since the fixture was originally generated.</source>
          <target state="translated">忽略自夹具最初生成以来可能已经被删除的字段和模型。</target>
        </trans-unit>
        <trans-unit id="e6f657b51973a7ffa6d6443941085cb8d8492fd4" translate="yes" xml:space="preserve">
          <source>Ignores files or directories matching the given &lt;a href=&quot;https://docs.python.org/3/library/glob.html#module-glob&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt;-style pattern. Use multiple times to ignore more.</source>
          <target state="translated">忽略与给定的&lt;a href=&quot;https://docs.python.org/3/library/glob.html#module-glob&quot;&gt; &lt;code&gt;glob&lt;/code&gt; &lt;/a&gt; -style模式匹配的文件或目录。使用多次忽略更多。</target>
        </trans-unit>
        <trans-unit id="323377a570864e3a1b26bdc4a63a300a0a6b5471" translate="yes" xml:space="preserve">
          <source>Ignoring &amp;ldquo;stop words&amp;rdquo; such as &amp;ldquo;a&amp;rdquo;, &amp;ldquo;the&amp;rdquo;, &amp;ldquo;and&amp;rdquo;.</source>
          <target state="translated">忽略&amp;ldquo;停用词&amp;rdquo;，例如&amp;ldquo; a&amp;rdquo;，&amp;ldquo; the&amp;rdquo;，&amp;ldquo; and&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="99b7a0e4a10dba5856b9ea510fa67c9bb35255e5" translate="yes" xml:space="preserve">
          <source>Imagine we had a &lt;code&gt;last_accessed&lt;/code&gt; field on our &lt;code&gt;Author&lt;/code&gt; model that we were using to keep track of the last time anybody looked at that author:</source>
          <target state="translated">想象一下，我们在 &lt;code&gt;Author&lt;/code&gt; 模型上有一个 &lt;code&gt;last_accessed&lt;/code&gt; 字段，用于跟踪任何人上次查看该作者的时间：</target>
        </trans-unit>
        <trans-unit id="7fc15e1eb128d4daccbe8c7ab2a5c5e128767d8e" translate="yes" xml:space="preserve">
          <source>Implement a &lt;code&gt;clean()&lt;/code&gt; method on your &lt;code&gt;Form&lt;/code&gt; when you must add custom validation for fields that are interdependent. See &lt;a href=&quot;validation#validating-fields-with-clean&quot;&gt;Cleaning and validating fields that depend on each other&lt;/a&gt; for example usage.</source>
          <target state="translated">当必须为相互依赖的字段添加自定义验证时，请在 &lt;code&gt;Form&lt;/code&gt; 上实现 &lt;code&gt;clean()&lt;/code&gt; 方法。有关示例用法&lt;a href=&quot;validation#validating-fields-with-clean&quot;&gt;，&lt;/a&gt;请参见清洁和验证彼此依赖的字段。</target>
        </trans-unit>
        <trans-unit id="c6cfa7967295c6a6446e645b10a6097c50a71d8d" translate="yes" xml:space="preserve">
          <source>Implementation concerns</source>
          <target state="translated">执行问题</target>
        </trans-unit>
        <trans-unit id="e0bf2dc952ab6d2617aa9b9ee013534f9eeb5b62" translate="yes" xml:space="preserve">
          <source>Implementation notes</source>
          <target state="translated">实施说明</target>
        </trans-unit>
        <trans-unit id="3e3330bd2a361feb0240b1fddb979752ae17ea93" translate="yes" xml:space="preserve">
          <source>Implementing a constructor in a subclass</source>
          <target state="translated">在子类中实现构造函数</target>
        </trans-unit>
        <trans-unit id="632f01fece5418e29e250528914dbf408f470600" translate="yes" xml:space="preserve">
          <source>Implementing caching should not be regarded as an alternative to improving code that&amp;rsquo;s performing poorly because it has been written badly. It&amp;rsquo;s one of the final steps towards producing well-performing code, not a shortcut.</source>
          <target state="translated">实施缓存不应被视为改善性能较差的代码的替代方法，因为它的编写质量很差。这是生成性能良好的代码的最后一步，而不是捷径。</target>
        </trans-unit>
        <trans-unit id="6c877258699b88d7b5575fdb8ca9aae3d8820bae" translate="yes" xml:space="preserve">
          <source>Implementing this yourself often results in a lot of repeated boilerplate code (see &lt;a href=&quot;../forms/index#using-a-form-in-a-view&quot;&gt;Using a form in a view&lt;/a&gt;). To help avoid this, Django provides a collection of generic class-based views for form processing.</source>
          <target state="translated">自己实现这一点通常会导致很多重复的样板代码（请参阅&lt;a href=&quot;../forms/index#using-a-form-in-a-view&quot;&gt;在视图中使用表单&lt;/a&gt;）。为了避免这种情况，Django提供了一组基于类的通用视图以进行表单处理。</target>
        </trans-unit>
        <trans-unit id="e5d8feee9c32a98e60e7043052deae37efa5b7c8" translate="yes" xml:space="preserve">
          <source>Implements cached database-backed session store.</source>
          <target state="translated">实现缓存的数据库支持的会话存储。</target>
        </trans-unit>
        <trans-unit id="57a7f9ee519c5b8d6227a97eb918c9e03394062f" translate="yes" xml:space="preserve">
          <source>Implements database-backed session store.</source>
          <target state="translated">实现数据库支持的会话存储。</target>
        </trans-unit>
        <trans-unit id="22e27035ac8e154d8d3e3995c4f857cc344cbb23" translate="yes" xml:space="preserve">
          <source>Implies setting &lt;a href=&quot;#django.db.models.Field.db_index&quot;&gt;&lt;code&gt;Field.db_index&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">意味着将&lt;a href=&quot;#django.db.models.Field.db_index&quot;&gt; &lt;code&gt;Field.db_index&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="759987d88bd09dd553f257b758daf18ca5f14887" translate="yes" xml:space="preserve">
          <source>Import spatial reference from EPSG code.</source>
          <target state="translated">从EPSG代码导入空间参考。</target>
        </trans-unit>
        <trans-unit id="f7080a194b706adfdf562e2d80373f6ad81a34c0" translate="yes" xml:space="preserve">
          <source>Import spatial reference from PROJ.4 string.</source>
          <target state="translated">从PROJ.4字符串导入空间参考。</target>
        </trans-unit>
        <trans-unit id="6fef6e94164d6d870390223dd3af1c7cb28c31ac" translate="yes" xml:space="preserve">
          <source>Import spatial reference from WKT.</source>
          <target state="translated">从WKT导入空间参考。</target>
        </trans-unit>
        <trans-unit id="8a4c58086cb4f68917fb1260e33f6c51036c8456" translate="yes" xml:space="preserve">
          <source>Import spatial reference from XML.</source>
          <target state="translated">从XML导入空间参考。</target>
        </trans-unit>
        <trans-unit id="4b6d6a30150a506f9b79caf45da5aecb76b0018e" translate="yes" xml:space="preserve">
          <source>Important</source>
          <target state="translated">Important</target>
        </trans-unit>
        <trans-unit id="6c4b688b2ef86c7056f52a57bea61a8792c3849d" translate="yes" xml:space="preserve">
          <source>Importing &lt;code&gt;AbstractBaseUser&lt;/code&gt;</source>
          <target state="translated">导入 &lt;code&gt;AbstractBaseUser&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7a5f39849f3fe8c1533fc46296d83c2841e8caa" translate="yes" xml:space="preserve">
          <source>Importing Spatial Data</source>
          <target state="translated">导入空间数据</target>
        </trans-unit>
        <trans-unit id="31deeb21a29c47ae89f038bc8341eaaeff7a09c5" translate="yes" xml:space="preserve">
          <source>Imports a dotted module path and returns the attribute/class designated by the last name in the path. Raises &lt;code&gt;ImportError&lt;/code&gt; if the import failed. For example:</source>
          <target state="translated">导入点划线的模块路径，并返回路径中姓氏所指定的属性/类。如果导入失败，则引发 &lt;code&gt;ImportError&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="43d1c07c1e566ca2939141457a3c42159b8e891a" translate="yes" xml:space="preserve">
          <source>Improved speed might be the most obvious aim for a program, but sometimes other performance improvements might be sought, such as lower memory consumption or fewer demands on the database or network.</source>
          <target state="translated">对于一个程序来说,提高速度可能是最明显的目的,但有时可能会寻求其他性能的改进,例如降低内存消耗或减少对数据库或网络的需求。</target>
        </trans-unit>
        <trans-unit id="d8cb9b65545d67676e31319a8591f1bc9ef9938d" translate="yes" xml:space="preserve">
          <source>Improvements in one area will often bring about improved performance in another, but not always; sometimes one can even be at the expense of another. For example, an improvement in a program&amp;rsquo;s speed might cause it to use more memory. Even worse, it can be self-defeating - if the speed improvement is so memory-hungry that the system starts to run out of memory, you&amp;rsquo;ll have done more harm than good.</source>
          <target state="translated">一个方面的改进通常会带来另一个方面的改进，但并非总是如此；有时一个人甚至可以牺牲另一个人。例如，程序速度的提高可能会导致它使用更多的内存。更糟糕的是，这可能是自欺欺人的-如果速度提升如此耗费内存，以致系统开始耗尽内存，那么您的弊大于利。</target>
        </trans-unit>
        <trans-unit id="b5e972a8024aea2ff5834415377894b0b1408dc1" translate="yes" xml:space="preserve">
          <source>Improving our view</source>
          <target state="translated">改善我们的看法</target>
        </trans-unit>
        <trans-unit id="423ee3d502d51a230964dcb05a5037a9723ba101" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt;, each middleware component is represented by a string: the full Python path to the middleware factory&amp;rsquo;s class or function name. For example, here&amp;rsquo;s the default value created by &lt;a href=&quot;../../ref/django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;django-admin
startproject&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">在&lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; 中&lt;/a&gt;，每个中间件组件都由一个字符串表示：中间件工厂的类或函数名称的完整Python路径。例如，这是&lt;a href=&quot;../../ref/django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;django-admin startproject&lt;/code&gt; &lt;/a&gt;创建的默认值：</target>
        </trans-unit>
        <trans-unit id="0f98c9c44256324347c54d4de74bec56956bdb2a" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;tutorial04&quot;&gt;Tutorial 4&lt;/a&gt; we introduced a class-based view, based on &lt;a href=&quot;../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">在&lt;a href=&quot;tutorial04&quot;&gt;教程4中，&lt;/a&gt;我们基于&lt;a href=&quot;../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt;引入了基于类的视图：</target>
        </trans-unit>
        <trans-unit id="061872dabbd882e65fed4448dcd75d033d42e91a" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&quot;nodelist = parser.parse(('endcomment',))&quot;&lt;/code&gt; in the above example, &lt;code&gt;nodelist&lt;/code&gt; is a list of all nodes between the &lt;code&gt;{% comment %}&lt;/code&gt; and &lt;code&gt;{% endcomment %}&lt;/code&gt;, not counting &lt;code&gt;{% comment %}&lt;/code&gt; and &lt;code&gt;{% endcomment %}&lt;/code&gt; themselves.</source>
          <target state="translated">在上例中的 &lt;code&gt;&quot;nodelist = parser.parse(('endcomment',))&quot;&lt;/code&gt; 中， &lt;code&gt;nodelist&lt;/code&gt; 是 &lt;code&gt;{% comment %}&lt;/code&gt; 和 &lt;code&gt;{% endcomment %}&lt;/code&gt; 之间的所有节点的列表，不包括 &lt;code&gt;{% comment %}&lt;/code&gt; 和 &lt;code&gt;{% endcomment %}&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="980baa344e263cc001383a2be32c4e65f245ce93" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;template.html&lt;/code&gt;, the following paths would be valid:</source>
          <target state="translated">在 &lt;code&gt;template.html&lt;/code&gt; 中，以下路径将有效：</target>
        </trans-unit>
        <trans-unit id="6ef78276f8e607837babb1b9074bcf132d9b67ef" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;test_future_question&lt;/code&gt;, we create a question with a &lt;code&gt;pub_date&lt;/code&gt; in the future. The database is reset for each test method, so the first question is no longer there, and so again the index shouldn&amp;rsquo;t have any questions in it.</source>
          <target state="translated">在 &lt;code&gt;test_future_question&lt;/code&gt; 中，我们将来创建一个带有 &lt;code&gt;pub_date&lt;/code&gt; 的问题。每种测试方法都会重置数据库，因此第一个问题不再存在，因此索引中也不应再有任何问题。</target>
        </trans-unit>
        <trans-unit id="5f9cbf79cc52467baff9c100eb8928946f93b121" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;test_past_question&lt;/code&gt;, we create a question and verify that it appears in the list.</source>
          <target state="translated">在 &lt;code&gt;test_past_question&lt;/code&gt; 中，我们创建一个问题并验证它是否出现在列表中。</target>
        </trans-unit>
        <trans-unit id="1ca0c441f71f0c9c390db046d94cf2f81905b41d" translate="yes" xml:space="preserve">
          <source>In Django 1.5 and earlier, Django did a &lt;code&gt;SELECT&lt;/code&gt; when the primary key attribute was set. If the &lt;code&gt;SELECT&lt;/code&gt; found a row, then Django did an &lt;code&gt;UPDATE&lt;/code&gt;, otherwise it did an &lt;code&gt;INSERT&lt;/code&gt;. The old algorithm results in one more query in the &lt;code&gt;UPDATE&lt;/code&gt; case. There are some rare cases where the database doesn&amp;rsquo;t report that a row was updated even if the database contains a row for the object&amp;rsquo;s primary key value. An example is the PostgreSQL &lt;code&gt;ON UPDATE&lt;/code&gt; trigger which returns &lt;code&gt;NULL&lt;/code&gt;. In such cases it is possible to revert to the old algorithm by setting the &lt;a href=&quot;options#django.db.models.Options.select_on_save&quot;&gt;&lt;code&gt;select_on_save&lt;/code&gt;&lt;/a&gt; option to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">在Django 1.5及更早版本中，设置主键属性时Django进行了 &lt;code&gt;SELECT&lt;/code&gt; 。如果 &lt;code&gt;SELECT&lt;/code&gt; 找到一行，则Django执行 &lt;code&gt;UPDATE&lt;/code&gt; ，否则 &lt;code&gt;INSERT&lt;/code&gt; 。在 &lt;code&gt;UPDATE&lt;/code&gt; 情况下，旧算法会导致另外一个查询。在极少数情况下，即使数据库包含对象主键值的行，数据库也不会报告行已更新。一个示例是PostgreSQL &lt;code&gt;ON UPDATE&lt;/code&gt; 触发器，该触发器返回 &lt;code&gt;NULL&lt;/code&gt; 。在这种情况下，可以通过将&lt;a href=&quot;options#django.db.models.Options.select_on_save&quot;&gt; &lt;code&gt;select_on_save&lt;/code&gt; &lt;/a&gt;选项设置为 &lt;code&gt;True&lt;/code&gt; 来恢复到旧算法。</target>
        </trans-unit>
        <trans-unit id="7e54c507b0c09f4f3df149d0a652096ad567f2ff" translate="yes" xml:space="preserve">
          <source>In Django, web pages and other content are delivered by views. Each view is represented by a Python function (or method, in the case of class-based views). Django will choose a view by examining the URL that&amp;rsquo;s requested (to be precise, the part of the URL after the domain name).</source>
          <target state="translated">在Django中，网页和其他内容是通过视图传递的。每个视图均由Python函数（或方法（对于基于类的视图而言））表示。 Django将通过检查所请求的URL（准确地说，是域名之后的URL部分）来选择视图。</target>
        </trans-unit>
        <trans-unit id="71d28781461f30c2ecb2b20559c2484c3f2780b6" translate="yes" xml:space="preserve">
          <source>In English, that means start with any non-&lt;code&gt;'defaults'&lt;/code&gt; keyword argument that doesn&amp;rsquo;t contain a double underscore (which would indicate a non-exact lookup). Then add the contents of &lt;code&gt;defaults&lt;/code&gt;, overriding any keys if necessary, and use the result as the keyword arguments to the model class. If there are any callables in &lt;code&gt;defaults&lt;/code&gt;, evaluate them. As hinted at above, this is a simplification of the algorithm that is used, but it contains all the pertinent details. The internal implementation has some more error-checking than this and handles some extra edge-conditions; if you&amp;rsquo;re interested, read the code.</source>
          <target state="translated">用英语来说，这意味着从任何不包含双下划线（表示未精确查找）的非 &lt;code&gt;'defaults'&lt;/code&gt; 关键字参数开始。然后添加 &lt;code&gt;defaults&lt;/code&gt; 的内容，必要时覆盖所有键，并将结果用作模型类的关键字参数。如果 &lt;code&gt;defaults&lt;/code&gt; 有任何可调用对象，请对其进行评估。正如上面所暗示的，这是所使用算法的简化，但是它包含所有相关细节。内部实现比此实现的错误检查更多，并且可以处理一些额外的边缘条件。如果您有兴趣，请阅读代码。</target>
        </trans-unit>
        <trans-unit id="2325b2ee62df43500f1c00235b487a802857009c" translate="yes" xml:space="preserve">
          <source>In HTML, a form is a collection of elements inside &lt;code&gt;&amp;lt;form&amp;gt;...&amp;lt;/form&amp;gt;&lt;/code&gt; that allow a visitor to do things like enter text, select options, manipulate objects or controls, and so on, and then send that information back to the server.</source>
          <target state="translated">在HTML中，表单是 &lt;code&gt;&amp;lt;form&amp;gt;...&amp;lt;/form&amp;gt;&lt;/code&gt; 中的元素的集合，允许访问者执行诸如输入文本，选择选项，操作对象或控件等操作，然后将信息发送回去。到服务器。</target>
        </trans-unit>
        <trans-unit id="530abed4adee655c3e3355fa9c58c011c506ea41" translate="yes" xml:space="preserve">
          <source>In MySQL, a database table&amp;rsquo;s &amp;ldquo;collation&amp;rdquo; setting determines whether &lt;code&gt;exact&lt;/code&gt; comparisons are case-sensitive. This is a database setting, &lt;em&gt;not&lt;/em&gt; a Django setting. It&amp;rsquo;s possible to configure your MySQL tables to use case-sensitive comparisons, but some trade-offs are involved. For more information about this, see the &lt;a href=&quot;../databases#mysql-collation&quot;&gt;collation section&lt;/a&gt; in the &lt;a href=&quot;../databases&quot;&gt;databases&lt;/a&gt; documentation.</source>
          <target state="translated">在MySQL中，数据库表的&amp;ldquo;排序规则&amp;rdquo;设置确定 &lt;code&gt;exact&lt;/code&gt; 比较是否区分大小写。这是一个数据库设置，&lt;em&gt;而不是&lt;/em&gt; Django设置。可以将MySQL表配置为使用区分大小写的比较，但是需要权衡取舍。有关更多信息，请参阅&lt;a href=&quot;../databases#mysql-collation&quot;&gt;核对部分&lt;/a&gt;中&lt;a href=&quot;../databases&quot;&gt;的数据库&lt;/a&gt;文件。</target>
        </trans-unit>
        <trans-unit id="15bb2b94418927da4ddbebe62ad941621709c6f9" translate="yes" xml:space="preserve">
          <source>In MySQL, a database table&amp;rsquo;s &lt;a href=&quot;../databases#mysql-collation&quot;&gt;collation&lt;/a&gt; determines whether string comparisons (such as the &lt;code&gt;expression&lt;/code&gt; and &lt;code&gt;substring&lt;/code&gt; of this function) are case-sensitive. Comparisons are case-insensitive by default.</source>
          <target state="translated">在MySQL中，数据库表的&lt;a href=&quot;../databases#mysql-collation&quot;&gt;排序规则&lt;/a&gt;确定字符串比较（例如此函数的 &lt;code&gt;expression&lt;/code&gt; 和 &lt;code&gt;substring&lt;/code&gt; ）是否区分大小写。默认情况下，比较不区分大小写。</target>
        </trans-unit>
        <trans-unit id="8421ba54de371dd641a53fee1d33a332c1c91eef" translate="yes" xml:space="preserve">
          <source>In PostGIS, &lt;code&gt;ST_Distance_Sphere&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; limit the geometry types geographic distance queries are performed with. &lt;a href=&quot;#fndistsphere15&quot; id=&quot;id7&quot;&gt;[3]&lt;/a&gt; However, these queries may take a long time, as great-circle distances must be calculated on the fly for &lt;em&gt;every&lt;/em&gt; row in the query. This is because the spatial index on traditional geometry fields cannot be used.</source>
          <target state="translated">在PostGIS的， &lt;code&gt;ST_Distance_Sphere&lt;/code&gt; 并&lt;em&gt;没有&lt;/em&gt;限制的几何形状类型的地理距离的查询与执行。&lt;a href=&quot;#fndistsphere15&quot; id=&quot;id7&quot;&gt;[3]&lt;/a&gt;但是，这些查询可能要花费很长时间，因为必须为查询中的&lt;em&gt;每一&lt;/em&gt;行动态计算大圆距离。这是因为无法使用传统几何字段上的空间索引。</target>
        </trans-unit>
        <trans-unit id="715bef95523b40746c6e2c01e2e5141dd1cef9e3" translate="yes" xml:space="preserve">
          <source>In Python code: Using the &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">在Python代码中：使用&lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="bd51507af923505247bc61c0fb892385469fd543" translate="yes" xml:space="preserve">
          <source>In Python regular expressions, the syntax for named regular expression groups is &lt;code&gt;(?P&amp;lt;name&amp;gt;pattern)&lt;/code&gt;, where &lt;code&gt;name&lt;/code&gt; is the name of the group and &lt;code&gt;pattern&lt;/code&gt; is some pattern to match.</source>
          <target state="translated">在Python正则表达式中，命名正则表达式组的语法为 &lt;code&gt;(?P&amp;lt;name&amp;gt;pattern)&lt;/code&gt; ，其中 &lt;code&gt;name&lt;/code&gt; 是组的名称， &lt;code&gt;pattern&lt;/code&gt; 是要匹配的某种模式。</target>
        </trans-unit>
        <trans-unit id="ea7465a7cc3dd82a2d9fd7afc703bdeb0a931d30" translate="yes" xml:space="preserve">
          <source>In Python, deprecation warnings are silenced by default. You must turn them on using the &lt;code&gt;-Wa&lt;/code&gt; Python command line option or the &lt;a href=&quot;https://docs.python.org/3/using/cmdline.html#envvar-PYTHONWARNINGS&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;PYTHONWARNINGS&lt;/code&gt;&lt;/a&gt; environment variable. For example, to show warnings while running tests:</source>
          <target state="translated">在Python中，默认情况下，弃用警告会静音。您必须使用 &lt;code&gt;-Wa&lt;/code&gt; Python命令行选项或&lt;a href=&quot;https://docs.python.org/3/using/cmdline.html#envvar-PYTHONWARNINGS&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;PYTHONWARNINGS&lt;/code&gt; &lt;/a&gt;环境变量来打开它们。例如，要在运行测试时显示警告：</target>
        </trans-unit>
        <trans-unit id="1b9dd68d5fb0091a5354cd74f43e44ab9d2220be" translate="yes" xml:space="preserve">
          <source>In SQL terms, that evaluates to:</source>
          <target state="translated">用SQL术语来说,它的值是:</target>
        </trans-unit>
        <trans-unit id="b5219e196842cd49964f7f565faa02caa768e6fc" translate="yes" xml:space="preserve">
          <source>In a Django project where the &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting defines a &lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt; engine, it&amp;rsquo;s possible to instantiate a &lt;a href=&quot;#django.template.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; directly. If more than one &lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt; engine is defined, the first one will be used.</source>
          <target state="translated">在&lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;设置定义&lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;DjangoTemplates&lt;/code&gt; &lt;/a&gt;引擎的Django项目中，可以直接实例化&lt;a href=&quot;#django.template.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt;。如果定义了多个&lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;DjangoTemplates&lt;/code&gt; &lt;/a&gt;引擎，则将使用第一个。</target>
        </trans-unit>
        <trans-unit id="78dd68fff46c7f31d6d76f4f0ceba6a02a64543d" translate="yes" xml:space="preserve">
          <source>In a class-based view, this would become:</source>
          <target state="translated">在基于类的观点中,这将成为。</target>
        </trans-unit>
        <trans-unit id="5a9a78ce7cfa61e948398641be09cee26a9431e5" translate="yes" xml:space="preserve">
          <source>In a given iterable; often a list, tuple, or queryset. It&amp;rsquo;s not a common use case, but strings (being iterables) are accepted.</source>
          <target state="translated">在给定的迭代中 通常是列表，元组或查询集。这不是常见的用例，但是可以接受字符串（可迭代）。</target>
        </trans-unit>
        <trans-unit id="936002e8c54e8cd2138c3c4e13a6b879a99a297c" translate="yes" xml:space="preserve">
          <source>In a hurry? Here&amp;rsquo;s how to do common aggregate queries, assuming the models above:</source>
          <target state="translated">匆忙？假设采用上述模型，以下是进行常见聚合查询的方法：</target>
        </trans-unit>
        <trans-unit id="95d5174861e60b5fbde4b2d21a30e9578bd91660" translate="yes" xml:space="preserve">
          <source>In a newly created &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;, the cache is empty. The first time a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; is evaluated &amp;ndash; and, hence, a database query happens &amp;ndash; Django saves the query results in the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s cache and returns the results that have been explicitly requested (e.g., the next element, if the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; is being iterated over). Subsequent evaluations of the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; reuse the cached results.</source>
          <target state="translated">在新创建的&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; 中&lt;/a&gt;，缓存为空。首次评估&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;并因此进行数据库查询时，Django将查询结果保存在&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;的缓存中，并返回已明确请求的结果（例如，下一个元素（如果正在迭代&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;）过度）。&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; 的&lt;/a&gt;后续评估将重用缓存的结果。</target>
        </trans-unit>
        <trans-unit id="66bad3b414c450ecef328dcf5b4fecbf454e6176" translate="yes" xml:space="preserve">
          <source>In a nutshell, you will need to subclass the widget and either &lt;a href=&quot;../../topics/forms/media#assets-as-a-static-definition&quot;&gt;define a &amp;ldquo;Media&amp;rdquo; inner class&lt;/a&gt; or &lt;a href=&quot;../../topics/forms/media#dynamic-property&quot;&gt;create a &amp;ldquo;media&amp;rdquo; property&lt;/a&gt;.</source>
          <target state="translated">简而言之，您将需要对小部件进行子类化，或者&lt;a href=&quot;../../topics/forms/media#assets-as-a-static-definition&quot;&gt;定义&amp;ldquo; Media&amp;rdquo;内部类&lt;/a&gt;或&lt;a href=&quot;../../topics/forms/media#dynamic-property&quot;&gt;创建&amp;ldquo; media&amp;rdquo;属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1142528d124b30027cb2863e674b995be99f903d" translate="yes" xml:space="preserve">
          <source>In a request to &lt;code&gt;https://www.example.com/myapp/?page=3&lt;/code&gt;, the URLconf will look for &lt;code&gt;myapp/&lt;/code&gt;.</source>
          <target state="translated">在对 &lt;code&gt;https://www.example.com/myapp/?page=3&lt;/code&gt; 的请求中，URLconf将寻找 &lt;code&gt;myapp/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c6e077cc1b0e75309e606ecc2180a3df1935d34" translate="yes" xml:space="preserve">
          <source>In a similar way that a model class&amp;rsquo;s fields map to database fields, a form class&amp;rsquo;s fields map to HTML form &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements. (A &lt;a href=&quot;modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt; maps a model class&amp;rsquo;s fields to HTML form &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements via a &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt;; this is what the Django admin is based upon.)</source>
          <target state="translated">以类似于模型类的字段映射到数据库字段的方式，表单类的字段映射到HTML表单 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 元素。（A &lt;a href=&quot;modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt;映射模型类的字段，以HTML形式 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 经由元件&lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt; ;这是什么Django管理是基于）。</target>
        </trans-unit>
        <trans-unit id="9e280d0af372eabe0c94458ef4c152f0bbcae80b" translate="yes" xml:space="preserve">
          <source>In a way similar to &lt;a href=&quot;queries#lookups-that-span-relationships&quot;&gt;Lookups that span relationships&lt;/a&gt;, aggregations and annotations on fields of models or models that are related to the one you are querying can include traversing &amp;ldquo;reverse&amp;rdquo; relationships. The lowercase name of related models and double-underscores are used here too.</source>
          <target state="translated">以类似于&lt;a href=&quot;queries#lookups-that-span-relationships&quot;&gt;跨越关系的查找&lt;/a&gt;的方式，在与要查询的模型或模型相关的模型或模型字段上进行聚合和注释可以包括遍历&amp;ldquo;反向&amp;rdquo;关系。此处也使用相关模型的小写名称和双下划线。</target>
        </trans-unit>
        <trans-unit id="ab27628513f607e825e71ce210049162b75905a1" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.db.models.Model.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt;, a model object might have some of the following methods:</source>
          <target state="translated">除了&lt;a href=&quot;#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#django.db.models.Model.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; 之外&lt;/a&gt;，模型对象还可以具有以下某些方法：</target>
        </trans-unit>
        <trans-unit id="751f7712ef19a124de333a44cc737e7ace3bfe24" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt; style list of tuples, &lt;code&gt;{% get_language_info_list %}&lt;/code&gt; supports lists of language codes. If you do this in your view:</source>
          <target state="translated">除了元组的&lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt; &lt;code&gt;LANGUAGES&lt;/code&gt; &lt;/a&gt;样式列表之外， &lt;code&gt;{% get_language_info_list %}&lt;/code&gt; 支持语言代码列表。如果您认为这样：</target>
        </trans-unit>
        <trans-unit id="acfdeca1bfa2723747c23831e1f6c72abb0244fc" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;push()&lt;/code&gt; and &lt;code&gt;pop()&lt;/code&gt;, the &lt;code&gt;Context&lt;/code&gt; object also defines an &lt;code&gt;update()&lt;/code&gt; method. This works like &lt;code&gt;push()&lt;/code&gt; but takes a dictionary as an argument and pushes that dictionary onto the stack instead of an empty one.</source>
          <target state="translated">除了 &lt;code&gt;push()&lt;/code&gt; 和 &lt;code&gt;pop()&lt;/code&gt; 之外， &lt;code&gt;Context&lt;/code&gt; 对象还定义了 &lt;code&gt;update()&lt;/code&gt; 方法。这类似于 &lt;code&gt;push()&lt;/code&gt; ,但将字典作为参数并将该字典推入堆栈，而不是空字典。</target>
        </trans-unit>
        <trans-unit id="d08bf980f90aa9d354ce9fe22f93944096aa983d" translate="yes" xml:space="preserve">
          <source>In addition to a DB API driver, Django needs an adapter to access the database drivers from its ORM. Django provides an adapter for mysqlclient while MySQL Connector/Python includes &lt;a href=&quot;https://dev.mysql.com/doc/connector-python/en/connector-python-django-backend.html&quot;&gt;its own&lt;/a&gt;.</source>
          <target state="translated">除了DB API驱动程序外，Django还需要一个适配器来从其ORM访问数据库驱动程序。Django为mysqlclient提供了一个适配器，而MySQL Connector / Python包含&lt;a href=&quot;https://dev.mysql.com/doc/connector-python/en/connector-python-django-backend.html&quot;&gt;了自己的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4446e8a7eb646fabe3c820b8fc45118f5b558932" translate="yes" xml:space="preserve">
          <source>In addition to a database backend, you&amp;rsquo;ll need to make sure your Python database bindings are installed.</source>
          <target state="translated">除了数据库后端，您还需要确保已安装Python数据库绑定。</target>
        </trans-unit>
        <trans-unit id="c94ce8da528fb522992156b232a5ab6d1b86573f" translate="yes" xml:space="preserve">
          <source>In addition to being able to add custom command line options, all &lt;a href=&quot;../ref/django-admin&quot;&gt;management commands&lt;/a&gt; can accept some default options such as &lt;a href=&quot;../ref/django-admin#cmdoption-verbosity&quot;&gt;&lt;code&gt;--verbosity&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/django-admin#cmdoption-traceback&quot;&gt;&lt;code&gt;--traceback&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">除了能够添加自定义命令行选项之外，所有&lt;a href=&quot;../ref/django-admin&quot;&gt;管理命令&lt;/a&gt;都可以接受一些默认选项，例如&lt;a href=&quot;../ref/django-admin#cmdoption-verbosity&quot;&gt; &lt;code&gt;--verbosity&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/django-admin#cmdoption-traceback&quot;&gt; &lt;code&gt;--traceback&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="576f5fcbdcf1b7fd7c6b93e9bbe9c209051c087d" translate="yes" xml:space="preserve">
          <source>In addition to creating the new model, the &lt;code&gt;from_db()&lt;/code&gt; method must set the &lt;code&gt;adding&lt;/code&gt; and &lt;code&gt;db&lt;/code&gt; flags in the new instance&amp;rsquo;s &lt;a href=&quot;#django.db.models.Model._state&quot;&gt;&lt;code&gt;_state&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">除了创建新模式， &lt;code&gt;from_db()&lt;/code&gt; 方法必须设置 &lt;code&gt;adding&lt;/code&gt; 和 &lt;code&gt;db&lt;/code&gt; 的新实例的标志&lt;a href=&quot;#django.db.models.Model._state&quot;&gt; &lt;code&gt;_state&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="f180ecdd9c92f470286413ff38ed940f9bbd38e7" translate="yes" xml:space="preserve">
          <source>In addition to creating the new model, the &lt;code&gt;from_db()&lt;/code&gt; method must set the &lt;code&gt;adding&lt;/code&gt; and &lt;code&gt;db&lt;/code&gt; flags in the new instance&amp;rsquo;s &lt;code&gt;_state&lt;/code&gt; attribute.</source>
          <target state="translated">除了创建新模式， &lt;code&gt;from_db()&lt;/code&gt; 方法必须设置 &lt;code&gt;adding&lt;/code&gt; 和 &lt;code&gt;db&lt;/code&gt; 的新实例的标志 &lt;code&gt;_state&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="aa82b6442e717c223b5e675d2e5b3acbf200def3" translate="yes" xml:space="preserve">
          <source>In addition to methods provided by the &lt;a href=&quot;../syndication#django.contrib.syndication.views.Feed&quot;&gt;&lt;code&gt;django.contrib.syndication.views.Feed&lt;/code&gt;&lt;/a&gt; base class, GeoDjango&amp;rsquo;s &lt;code&gt;Feed&lt;/code&gt; class provides the following overrides. Note that these overrides may be done in multiple ways:</source>
          <target state="translated">除了&lt;a href=&quot;../syndication#django.contrib.syndication.views.Feed&quot;&gt; &lt;code&gt;django.contrib.syndication.views.Feed&lt;/code&gt; &lt;/a&gt;基类提供的方法外，GeoDjango的 &lt;code&gt;Feed&lt;/code&gt; 类还提供以下替代。请注意，这些替代可以通过多种方式完成：</target>
        </trans-unit>
        <trans-unit id="e71cd07f4ac2e62e0ecd7170c96df0e8a130dfc7" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; methods defined in &amp;ldquo;Retrieving objects&amp;rdquo; above, the &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; has additional methods used to handle the set of related objects. A synopsis of each is below, and complete details can be found in the &lt;a href=&quot;../../ref/models/relations&quot;&gt;related objects reference&lt;/a&gt;.</source>
          <target state="translated">除了上面&amp;ldquo;检索对象&amp;rdquo;中定义的&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;方法外，&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt;还具有用于处理相关对象集的其他方法。下面是每个内容的摘要，可以在&lt;a href=&quot;../../ref/models/relations&quot;&gt;相关对象参考中&lt;/a&gt;找到完整的详细信息。</target>
        </trans-unit>
        <trans-unit id="a87715969be2e401bffbf721c0b6e38e1c930533" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;'widget'&lt;/code&gt; key described in &lt;a href=&quot;#django.forms.Widget.get_context&quot;&gt;&lt;code&gt;Widget.get_context()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;MultiValueWidget&lt;/code&gt; adds a &lt;code&gt;widget['subwidgets']&lt;/code&gt; key.</source>
          <target state="translated">除了&lt;a href=&quot;#django.forms.Widget.get_context&quot;&gt; &lt;code&gt;Widget.get_context()&lt;/code&gt; 中&lt;/a&gt;描述的 &lt;code&gt;'widget'&lt;/code&gt; 键外， &lt;code&gt;MultiValueWidget&lt;/code&gt; 还添加了一个 &lt;code&gt;widget['subwidgets']&lt;/code&gt; 键。</target>
        </trans-unit>
        <trans-unit id="ff5784549c9c0063d76c5ca8754372f0f0124d65" translate="yes" xml:space="preserve">
          <source>In addition to the API inherited from &lt;a href=&quot;../files/file#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; such as &lt;code&gt;read()&lt;/code&gt; and &lt;code&gt;write()&lt;/code&gt;, &lt;a href=&quot;#django.db.models.fields.files.FieldFile&quot;&gt;&lt;code&gt;FieldFile&lt;/code&gt;&lt;/a&gt; includes several methods that can be used to interact with the underlying file:</source>
          <target state="translated">除了从&lt;a href=&quot;../files/file#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;继承的API &lt;code&gt;read()&lt;/code&gt; 例如read（）和 &lt;code&gt;write()&lt;/code&gt; )之外，&lt;a href=&quot;#django.db.models.fields.files.FieldFile&quot;&gt; &lt;code&gt;FieldFile&lt;/code&gt; &lt;/a&gt;还包括几种可用于与基础文件进行交互的方法：</target>
        </trans-unit>
        <trans-unit id="a10925da11c09a74be0bd8f4c1b6704fc5cb3520" translate="yes" xml:space="preserve">
          <source>In addition to the ability to query by key, there are a number of custom lookups available for &lt;code&gt;HStoreField&lt;/code&gt;.</source>
          <target state="translated">除了可以通过键查询之外，还有一些可用于 &lt;code&gt;HStoreField&lt;/code&gt; 的自定义查找。</target>
        </trans-unit>
        <trans-unit id="d69ed98b07f3efe4289e6ef8ac1e34397081717a" translate="yes" xml:space="preserve">
          <source>In addition to the above details, there are a few guidelines which can greatly improve the efficiency and readability of the field&amp;rsquo;s code.</source>
          <target state="translated">除上述详细信息外，还有一些准则可以极大地提高该字段代码的效率和可读性。</target>
        </trans-unit>
        <trans-unit id="8c64e028bd2cea8a3b5c6e844c13dd01044496cd" translate="yes" xml:space="preserve">
          <source>In addition to the above methods, fields that deal with files have a few other special requirements which must be taken into account. The majority of the mechanics provided by &lt;code&gt;FileField&lt;/code&gt;, such as controlling database storage and retrieval, can remain unchanged, leaving subclasses to deal with the challenge of supporting a particular type of file.</source>
          <target state="translated">除上述方法外，处理文件的字段还有一些其他特殊要求，必须予以考虑。 &lt;code&gt;FileField&lt;/code&gt; 提供的大多数机制（例如控制数据库的存储和检索）可以保持不变，而保留子类来应对支持特定类型文件的挑战。</target>
        </trans-unit>
        <trans-unit id="2e1bc480fcebe4ce8116912b2190e867237ad26c" translate="yes" xml:space="preserve">
          <source>In addition to the context provided by &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin&quot;&gt;&lt;code&gt;MultipleObjectMixin&lt;/code&gt;&lt;/a&gt; (via &lt;a href=&quot;mixins-date-based#django.views.generic.dates.BaseDateListView&quot;&gt;&lt;code&gt;BaseDateListView&lt;/code&gt;&lt;/a&gt;), the template&amp;rsquo;s context will be:</source>
          <target state="translated">除了&lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin&quot;&gt; &lt;code&gt;MultipleObjectMixin&lt;/code&gt; &lt;/a&gt;（通过&lt;a href=&quot;mixins-date-based#django.views.generic.dates.BaseDateListView&quot;&gt; &lt;code&gt;BaseDateListView&lt;/code&gt; &lt;/a&gt;）提供的上下文之外，模板的上下文还将是：</target>
        </trans-unit>
        <trans-unit id="78146a6623f617f370bdbb7922a1a46c904a4d3e" translate="yes" xml:space="preserve">
          <source>In addition to the context provided by &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin&quot;&gt;&lt;code&gt;django.views.generic.list.MultipleObjectMixin&lt;/code&gt;&lt;/a&gt; (via &lt;a href=&quot;mixins-date-based#django.views.generic.dates.BaseDateListView&quot;&gt;&lt;code&gt;django.views.generic.dates.BaseDateListView&lt;/code&gt;&lt;/a&gt;), the template&amp;rsquo;s context will be:</source>
          <target state="translated">除了&lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin&quot;&gt; &lt;code&gt;django.views.generic.list.MultipleObjectMixin&lt;/code&gt; &lt;/a&gt;提供的上下文（通过&lt;a href=&quot;mixins-date-based#django.views.generic.dates.BaseDateListView&quot;&gt; &lt;code&gt;django.views.generic.dates.BaseDateListView&lt;/code&gt; 提供&lt;/a&gt;）之外，模板的上下文还将是：</target>
        </trans-unit>
        <trans-unit id="9f847ce1f109048a1fb1aa3ac7bebe988e89f275" translate="yes" xml:space="preserve">
          <source>In addition to the following, all extracts for &lt;code&gt;DateField&lt;/code&gt; listed above may also be used on &lt;code&gt;DateTimeField&lt;/code&gt;s .</source>
          <target state="translated">除以下内容外，上面列出的 &lt;code&gt;DateField&lt;/code&gt; 的所有摘录也可以在 &lt;code&gt;DateTimeField&lt;/code&gt; 上使用。</target>
        </trans-unit>
        <trans-unit id="cc163a8af460b22769a0a66d0e1689102a23ab92" translate="yes" xml:space="preserve">
          <source>In addition to the listed methods, &lt;a href=&quot;#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; exposes the following attributes and methods of its &lt;code&gt;file&lt;/code&gt; object: &lt;code&gt;encoding&lt;/code&gt;, &lt;code&gt;fileno&lt;/code&gt;, &lt;code&gt;flush&lt;/code&gt;, &lt;code&gt;isatty&lt;/code&gt;, &lt;code&gt;newlines&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;readinto&lt;/code&gt;, &lt;code&gt;readline&lt;/code&gt;, &lt;code&gt;readlines&lt;/code&gt;, &lt;code&gt;seek&lt;/code&gt;, &lt;code&gt;tell&lt;/code&gt;, &lt;code&gt;truncate&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;writelines&lt;/code&gt;, &lt;code&gt;readable()&lt;/code&gt;, &lt;code&gt;writable()&lt;/code&gt;, and &lt;code&gt;seekable()&lt;/code&gt;.</source>
          <target state="translated">除了列出的方法外，&lt;a href=&quot;#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; 还&lt;/a&gt;公开了其 &lt;code&gt;file&lt;/code&gt; 对象的以下属性和方法： &lt;code&gt;encoding&lt;/code&gt; ， &lt;code&gt;fileno&lt;/code&gt; ， &lt;code&gt;flush&lt;/code&gt; ， &lt;code&gt;isatty&lt;/code&gt; ， &lt;code&gt;newlines&lt;/code&gt; ， &lt;code&gt;read&lt;/code&gt; ， &lt;code&gt;readinto&lt;/code&gt; ， &lt;code&gt;readline&lt;/code&gt; ， &lt;code&gt;readlines&lt;/code&gt; ， &lt;code&gt;seek&lt;/code&gt; ， &lt;code&gt;tell&lt;/code&gt; ， &lt;code&gt;truncate&lt;/code&gt; ， &lt;code&gt;write&lt;/code&gt; ， &lt;code&gt;writelines&lt;/code&gt; ，read &lt;code&gt;readable()&lt;/code&gt; ， &lt;code&gt;writable()&lt;/code&gt; 和 &lt;code&gt;seekable()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d138f7de7bbc3af07a0fb71bb0320df5a1bd9111" translate="yes" xml:space="preserve">
          <source>In addition to the officially supported databases, there are &lt;a href=&quot;../ref/databases#third-party-notes&quot;&gt;backends provided by 3rd parties&lt;/a&gt; that allow you to use other databases with Django.</source>
          <target state="translated">除了官方支持的数据库外，还有&lt;a href=&quot;../ref/databases#third-party-notes&quot;&gt;第三方提供的后端&lt;/a&gt;，这些后端使您可以将其他数据库与Django一起使用。</target>
        </trans-unit>
        <trans-unit id="38ffcb3817bbbd2551f77d39d51caba8b51562b9" translate="yes" xml:space="preserve">
          <source>In addition to the officially supported databases, there are backends provided by 3rd parties that allow you to use other databases with Django:</source>
          <target state="translated">除了官方支持的数据库,还有一些第三方提供的后端,允许你在Django中使用其他数据库。</target>
        </trans-unit>
        <trans-unit id="1db79a28d08359b046f49991e77de295d5e703c7" translate="yes" xml:space="preserve">
          <source>In addition to the optional arguments of its parent &lt;a href=&quot;#django.core.validators.RegexValidator&quot;&gt;&lt;code&gt;RegexValidator&lt;/code&gt;&lt;/a&gt; class, &lt;code&gt;URLValidator&lt;/code&gt; accepts an extra optional attribute:</source>
          <target state="translated">除了其父&lt;a href=&quot;#django.core.validators.RegexValidator&quot;&gt; &lt;code&gt;RegexValidator&lt;/code&gt; &lt;/a&gt;类的可选参数之外， &lt;code&gt;URLValidator&lt;/code&gt; 还接受一个额外的可选属性：</target>
        </trans-unit>
        <trans-unit id="0a4a0c3d6f62b599c6443f955946a232e25c4126" translate="yes" xml:space="preserve">
          <source>In addition to the options of the &lt;code&gt;json&lt;/code&gt; serializer, the &lt;code&gt;geojson&lt;/code&gt; serializer accepts the following additional option when it is called by &lt;code&gt;serializers.serialize()&lt;/code&gt;:</source>
          <target state="translated">除了 &lt;code&gt;json&lt;/code&gt; 序列化程序的选项外，当由 &lt;code&gt;serializers.serialize()&lt;/code&gt; 调用时， &lt;code&gt;geojson&lt;/code&gt; 序列化程序还接受以下附加选项：</target>
        </trans-unit>
        <trans-unit id="75907cde4d6071df1af2b10556dffed4d3fefdf2" translate="yes" xml:space="preserve">
          <source>In addition to the regular &lt;a href=&quot;../../forms/fields#core-field-arguments&quot;&gt;form field arguments&lt;/a&gt;, GeoDjango form fields take the following optional arguments.</source>
          <target state="translated">除了常规&lt;a href=&quot;../../forms/fields#core-field-arguments&quot;&gt;表单字段参数外&lt;/a&gt;，GeoDjango表单字段还包含以下可选参数。</target>
        </trans-unit>
        <trans-unit id="fab30d8fa172502cea3f7aebdb228bfeb4d6d2f0" translate="yes" xml:space="preserve">
          <source>In addition to the regular &lt;a href=&quot;../../models/fields#common-model-field-options&quot;&gt;Field options&lt;/a&gt; available for Django model fields, spatial fields have the following additional options. All are optional.</source>
          <target state="translated">除了适用于Django模型字段的常规&amp;ldquo; &lt;a href=&quot;../../models/fields#common-model-field-options&quot;&gt;字段&amp;rdquo;选项外&lt;/a&gt;，空间字段还具有以下其他选项。所有都是可选的。</target>
        </trans-unit>
        <trans-unit id="bcac2853c813ab81bdb91abe9b8fe01ccb15cb5c" translate="yes" xml:space="preserve">
          <source>In addition to the special attributes that are available for &lt;a href=&quot;#django.db.models.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;#django.db.models.ImageField&quot;&gt;&lt;code&gt;ImageField&lt;/code&gt;&lt;/a&gt; also has &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; attributes.</source>
          <target state="translated">除了可用于特殊属性&lt;a href=&quot;#django.db.models.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; &lt;/a&gt;，一个&lt;a href=&quot;#django.db.models.ImageField&quot;&gt; &lt;code&gt;ImageField&lt;/code&gt; 的&lt;/a&gt;也有 &lt;code&gt;height&lt;/code&gt; 和 &lt;code&gt;width&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="14e5e76a34a70eeb072f8cbe5905434d81e71e1b" translate="yes" xml:space="preserve">
          <source>In addition to these configuration steps, you&amp;rsquo;ll also need to actually serve the static files.</source>
          <target state="translated">除了这些配置步骤之外，您还需要实际提供静态文件。</target>
        </trans-unit>
        <trans-unit id="c2c243a6eca738bdaa3a92ec6f2b8a90ad5218f3" translate="yes" xml:space="preserve">
          <source>In addition to these, &lt;a href=&quot;#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt; always enables &lt;code&gt;'django.template.context_processors.csrf'&lt;/code&gt;. This is a security related context processor required by the admin and other contrib apps, and, in case of accidental misconfiguration, it is deliberately hardcoded in and cannot be turned off in the &lt;code&gt;context_processors&lt;/code&gt; option.</source>
          <target state="translated">除此之外，&lt;a href=&quot;#django.template.RequestContext&quot;&gt; &lt;code&gt;RequestContext&lt;/code&gt; &lt;/a&gt;始终启用 &lt;code&gt;'django.template.context_processors.csrf'&lt;/code&gt; 。这是管理员和其他contrib应用程序所需的与安全性相关的上下文处理器，并且在意外配置错误的情况下，会故意对其进行硬编码，并且无法在 &lt;code&gt;context_processors&lt;/code&gt; 选项中将其关闭。</target>
        </trans-unit>
        <trans-unit id="09d1558db313d92c5461aa77b23628bc5f54ef5a" translate="yes" xml:space="preserve">
          <source>In addition to web links, &lt;code&gt;urlize&lt;/code&gt; also converts email addresses into &lt;code&gt;mailto:&lt;/code&gt; links. If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;Send questions to foo@example.com&quot;&lt;/code&gt;, the output will be &lt;code&gt;&quot;Send questions to &amp;lt;a href=&quot;mailto:foo@example.com&quot;&amp;gt;foo@example.com&amp;lt;/a&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">除了Web链接之外， &lt;code&gt;urlize&lt;/code&gt; 还将电子邮件地址转换为 &lt;code&gt;mailto:&lt;/code&gt; 链接。如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;Send questions to foo@example.com&quot;&lt;/code&gt; ，则输出将是 &lt;code&gt;&quot;Send questions to &amp;lt;a href=&quot;mailto:foo@example.com&quot;&amp;gt;foo@example.com&amp;lt;/a&amp;gt;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb3cc5db265feffd76588b55bfe91ebe04db4bd8" translate="yes" xml:space="preserve">
          <source>In addition, &lt;code&gt;LineString&lt;/code&gt; objects may also be created by passing in a single sequence of coordinate or &lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">另外，也可以通过传递单个坐标或&lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt; &lt;code&gt;Point&lt;/code&gt; &lt;/a&gt;对象序列来创建 &lt;code&gt;LineString&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="092a2edd2b26995b6c73e6e9e9e504760cdc3b10" translate="yes" xml:space="preserve">
          <source>In addition, &lt;code&gt;QueryDict&lt;/code&gt; has the following methods:</source>
          <target state="translated">此外， &lt;code&gt;QueryDict&lt;/code&gt; 具有以下方法：</target>
        </trans-unit>
        <trans-unit id="003bc4accc874f1fef4668d4b87997f905b9b76e" translate="yes" xml:space="preserve">
          <source>In addition, &lt;code&gt;manage.py&lt;/code&gt; is automatically created in each Django project. It does the same thing as &lt;code&gt;django-admin&lt;/code&gt; but also sets the &lt;a href=&quot;../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt; environment variable so that it points to your project&amp;rsquo;s &lt;code&gt;settings.py&lt;/code&gt; file.</source>
          <target state="translated">此外， &lt;code&gt;manage.py&lt;/code&gt; 是在每个Django项目中自动创建的。它的作用与 &lt;code&gt;django-admin&lt;/code&gt; 相同，但它还会设置&lt;a href=&quot;../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt;环境变量，使其指向项目的 &lt;code&gt;settings.py&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="42da778e8ed7bdaf3955ad5f72d2ff5536335b45" translate="yes" xml:space="preserve">
          <source>In addition, &lt;code&gt;message/rfc822&lt;/code&gt; attachments will no longer be base64-encoded in violation of &lt;a href=&quot;https://tools.ietf.org/html/rfc2046.html#section-5.2.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2046#section-5.2.1&lt;/strong&gt;&lt;/a&gt;, which can cause issues with displaying the attachments in &lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=651197&quot;&gt;Evolution&lt;/a&gt; and &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=333880&quot;&gt;Thunderbird&lt;/a&gt;.</source>
          <target state="translated">此外，将不再对 &lt;code&gt;message/rfc822&lt;/code&gt; 附件进行base64编码，而违反&lt;a href=&quot;https://tools.ietf.org/html/rfc2046.html#section-5.2.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2046＃section-5.2.1&lt;/strong&gt;&lt;/a&gt;，这可能会导致在&lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=651197&quot;&gt;Evolution&lt;/a&gt;和&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=333880&quot;&gt;Thunderbird中&lt;/a&gt;显示附件的问题。</target>
        </trans-unit>
        <trans-unit id="6af43c6d389d8d50b42845ec056449c2468a39d7" translate="yes" xml:space="preserve">
          <source>In addition, &lt;em&gt;message/rfc822&lt;/em&gt; attachments will no longer be base64-encoded in violation of &lt;a href=&quot;https://tools.ietf.org/html/rfc2046.html#section-5.2.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2046#section-5.2.1&lt;/strong&gt;&lt;/a&gt;, which can cause issues with displaying the attachments in &lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=651197&quot;&gt;Evolution&lt;/a&gt; and &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=333880&quot;&gt;Thunderbird&lt;/a&gt;.</source>
          <target state="translated">此外，将不再对&lt;em&gt;message / rfc822&lt;/em&gt;附件进行base64编码，而违反&lt;a href=&quot;https://tools.ietf.org/html/rfc2046.html#section-5.2.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2046＃section-5.2.1&lt;/strong&gt;&lt;/a&gt;，这可能会导致在&lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=651197&quot;&gt;Evolution&lt;/a&gt;和&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=333880&quot;&gt;Thunderbird中&lt;/a&gt;显示附件的问题。</target>
        </trans-unit>
        <trans-unit id="8e4cb7c7a0731de3ea837edf11710dd02a514d0f" translate="yes" xml:space="preserve">
          <source>In addition, Django applies the following rule: if you set &lt;code&gt;editable=False&lt;/code&gt; on the model field, &lt;em&gt;any&lt;/em&gt; form created from the model via &lt;code&gt;ModelForm&lt;/code&gt; will not include that field.</source>
          <target state="translated">此外，Django应用以下规则：如果在model字段上设置 &lt;code&gt;editable=False&lt;/code&gt; ，则通过 &lt;code&gt;ModelForm&lt;/code&gt; 从模型创建的&lt;em&gt;任何&lt;/em&gt;表单都不会包含该字段。</target>
        </trans-unit>
        <trans-unit id="30a99ac2f20a9d7ce513beb52192fea90a5cd0c6" translate="yes" xml:space="preserve">
          <source>In addition, Django provides enumeration types that you can subclass to define choices in a concise way:</source>
          <target state="translated">此外,Django还提供了枚举类型,你可以通过子类来简洁地定义选择。</target>
        </trans-unit>
        <trans-unit id="c8a09597939bdcb71e0faa18c3b3a20ccef0e692" translate="yes" xml:space="preserve">
          <source>In addition, MySQL will fully rewrite tables for almost every schema operation and generally takes a time proportional to the number of rows in the table to add or remove columns. On slower hardware this can be worse than a minute per million rows - adding a few columns to a table with just a few million rows could lock your site up for over ten minutes.</source>
          <target state="translated">此外,MySQL几乎每一次模式操作都会完全重写表,一般来说,增加或删除列需要的时间与表的行数成正比。在速度较慢的硬件上,这可能比每百万行一分钟还要糟糕--在一个只有几百万行的表中添加几列,可能会让你的网站锁定十几分钟。</target>
        </trans-unit>
        <trans-unit id="80f1a60fae36c3742c0b6b4ed6f4684b7d6979d1" translate="yes" xml:space="preserve">
          <source>In addition, add the &lt;code&gt;DYLD_FALLBACK_LIBRARY_PATH&lt;/code&gt; setting so that the libraries can be found by Python:</source>
          <target state="translated">另外，添加 &lt;code&gt;DYLD_FALLBACK_LIBRARY_PATH&lt;/code&gt; 设置，以便Python可以找到这些库：</target>
        </trans-unit>
        <trans-unit id="0d00c3d27b51ce30fb9025d5d42429ee3fad5033" translate="yes" xml:space="preserve">
          <source>In addition, as JSON supports only string keys, note that using non-string keys in &lt;code&gt;request.session&lt;/code&gt; won&amp;rsquo;t work as expected:</source>
          <target state="translated">另外，由于JSON仅支持字符串键，因此请注意，在 &lt;code&gt;request.session&lt;/code&gt; 中使用非字符串键将无法正常工作：</target>
        </trans-unit>
        <trans-unit id="193e94f351cba3a0360a6e545faac2e59e822fc0" translate="yes" xml:space="preserve">
          <source>In addition, coordinates/components of the geometry may added or modified, just like a Python list:</source>
          <target state="translated">此外,几何体的坐标/组件可以添加或修改,就像Python列表一样。</target>
        </trans-unit>
        <trans-unit id="3ddf753e80872dd11269d2a3533531f2d9a256cc" translate="yes" xml:space="preserve">
          <source>In addition, each generated form field has attributes set as follows:</source>
          <target state="translated">此外,每个生成的表格字段的属性设置如下。</target>
        </trans-unit>
        <trans-unit id="e0d877515ca9c31768db2b55639e4f4d3d64d88a" translate="yes" xml:space="preserve">
          <source>In addition, for HTTPS requests, strict referer checking is done by &lt;code&gt;CsrfViewMiddleware&lt;/code&gt;. This means that even if a subdomain can set or modify cookies on your domain, it can&amp;rsquo;t force a user to post to your application since that request won&amp;rsquo;t come from your own exact domain.</source>
          <target state="translated">此外，对于HTTPS请求，由 &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; 进行严格的引用检查。这意味着，即使子域可以在您的域上设置或修改Cookie，也不能强迫用户将其发布到您的应用程序中，因为该请求不会来自您自己的确切域。</target>
        </trans-unit>
        <trans-unit id="609772e6e1f8a2aa06a07103e8048bef77e6acf0" translate="yes" xml:space="preserve">
          <source>In addition, if you are using the template system to output something other than HTML, there may be entirely separate characters and words which require escaping.</source>
          <target state="translated">此外,如果您使用模板系统来输出HTML以外的其他内容,可能会有完全独立的字符和单词需要转义。</target>
        </trans-unit>
        <trans-unit id="271507652d7f3c6c044a78d1ab9d1f40af16ab01" translate="yes" xml:space="preserve">
          <source>In addition, if your class provides local file storage, it must override the &lt;code&gt;path()&lt;/code&gt; method.</source>
          <target state="translated">另外，如果您的类提供本地文件存储，则它必须重写 &lt;code&gt;path()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="f41a663166406e5affa41f624b0f5ba10f8271ea" translate="yes" xml:space="preserve">
          <source>In addition, modify the &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting to include &lt;a href=&quot;../admin/index#module-django.contrib.admin&quot;&gt;&lt;code&gt;django.contrib.admin&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;index#module-django.contrib.gis&quot;&gt;&lt;code&gt;django.contrib.gis&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;world&lt;/code&gt; (your newly created application):</source>
          <target state="translated">另外，修改&lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置以包括&lt;a href=&quot;../admin/index#module-django.contrib.admin&quot;&gt; &lt;code&gt;django.contrib.admin&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;index#module-django.contrib.gis&quot;&gt; &lt;code&gt;django.contrib.gis&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;world&lt;/code&gt; （您新创建的应用程序）：</target>
        </trans-unit>
        <trans-unit id="e0cf7f24ea8838462019e7f2d8be131526d91e9c" translate="yes" xml:space="preserve">
          <source>In addition, only &lt;code&gt;LIMIT&lt;/code&gt;, &lt;code&gt;OFFSET&lt;/code&gt;, &lt;code&gt;COUNT(*)&lt;/code&gt;, &lt;code&gt;ORDER BY&lt;/code&gt;, and specifying columns (i.e. slicing, &lt;a href=&quot;#django.db.models.query.QuerySet.count&quot;&gt;&lt;code&gt;count()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#django.db.models.query.QuerySet.values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#django.db.models.query.QuerySet.values_list&quot;&gt;&lt;code&gt;values_list()&lt;/code&gt;&lt;/a&gt;) are allowed on the resulting &lt;code&gt;QuerySet&lt;/code&gt;. Further, databases place restrictions on what operations are allowed in the combined queries. For example, most databases don&amp;rsquo;t allow &lt;code&gt;LIMIT&lt;/code&gt; or &lt;code&gt;OFFSET&lt;/code&gt; in the combined queries.</source>
          <target state="translated">另外，在结果 &lt;code&gt;QuerySet&lt;/code&gt; 上仅允许 &lt;code&gt;LIMIT&lt;/code&gt; ， &lt;code&gt;OFFSET&lt;/code&gt; ， &lt;code&gt;COUNT(*)&lt;/code&gt; ， &lt;code&gt;ORDER BY&lt;/code&gt; 和指定列（即切片，&lt;a href=&quot;#django.db.models.query.QuerySet.count&quot;&gt; &lt;code&gt;count()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt; &lt;code&gt;order_by()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.db.models.query.QuerySet.values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;#django.db.models.query.QuerySet.values_list&quot;&gt; &lt;code&gt;values_list()&lt;/code&gt; &lt;/a&gt;）。此外，数据库对组合查询中允许的操作设置了限制。例如，大多数数据库在组合查询中不允许 &lt;code&gt;LIMIT&lt;/code&gt; 或 &lt;code&gt;OFFSET&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="073651aeeb0daff1ea4b8f8b97a8fcd077d19c9e" translate="yes" xml:space="preserve">
          <source>In addition, shapefiles also support attribute fields that may contain additional data. Here are the fields on the World Borders layer:</source>
          <target state="translated">此外,shapefiles还支持可能包含附加数据的属性字段。以下是世界边界图层上的字段。</target>
        </trans-unit>
        <trans-unit id="6182146b091f830549eb231420eb3ef3684d03ab" translate="yes" xml:space="preserve">
          <source>In addition, some objects are automatically created just after &lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; creates a table to hold them in a database:</source>
          <target state="translated">另外，在&lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;创建表以将它们保存在数据库中之后，会自动创建一些对象：</target>
        </trans-unit>
        <trans-unit id="602a62df0ea4d621c4bb672ddce2276a2ba75e0f" translate="yes" xml:space="preserve">
          <source>In addition, the concrete base classes of the model are stored as pointers, so you must always keep base classes around for as long as there is a migration that contains a reference to them. On the plus side, methods and managers from these base classes inherit normally, so if you absolutely need access to these you can opt to move them into a superclass.</source>
          <target state="translated">此外,模型的具体基类是以指针的形式存储的,所以只要有一个包含对它们的引用的迁移,你就必须始终将基类保留在身边。从好的方面来说,这些基类的方法和管理器都是正常继承的,所以如果你绝对需要访问这些,你可以选择将它们迁移到一个超级类中。</target>
        </trans-unit>
        <trans-unit id="ecc2eb2c3ab555cfa8732961afb123db30b159c9" translate="yes" xml:space="preserve">
          <source>In addition, there&amp;rsquo;s a utility function:</source>
          <target state="translated">此外，还有一个实用程序功能：</target>
        </trans-unit>
        <trans-unit id="5cb0790e9c7133e4cc81702a5b48be8ffd4efd86" translate="yes" xml:space="preserve">
          <source>In addition, to allow Python template files that contain Django template language syntax while also preventing packaging systems from trying to byte-compile invalid &lt;code&gt;*.py&lt;/code&gt; files, template files ending with &lt;code&gt;.py-tpl&lt;/code&gt; will be renamed to &lt;code&gt;.py&lt;/code&gt;.</source>
          <target state="translated">另外，为了允许包含Django模板语言语法的Python模板文件，同时还防止打包系统尝试对无效的 &lt;code&gt;*.py&lt;/code&gt; 文件进行字节编译，以 &lt;code&gt;.py-tpl&lt;/code&gt; 结尾的模板文件将重命名为 &lt;code&gt;.py&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f39294b8048c718f8bb8084ffe106424b63a64a2" translate="yes" xml:space="preserve">
          <source>In addition, to cut down on the repetitive nature of loading and rendering templates, Django provides a shortcut function which automates the process.</source>
          <target state="translated">此外,为了减少加载和渲染模板的重复性,Django提供了一个快捷功能,使这个过程自动化。</target>
        </trans-unit>
        <trans-unit id="cb738cfe7b94bcd3750e995720f727d510812fe0" translate="yes" xml:space="preserve">
          <source>In addition, try to avoid returning values as positional arguments; where possible, return values as keyword arguments for maximum future compatibility. If you change the names of things more often than their position in the constructor&amp;rsquo;s argument list, you might prefer positional, but bear in mind that people will be reconstructing your field from the serialized version for quite a while (possibly years), depending how long your migrations live for.</source>
          <target state="translated">另外，尽量避免返回值作为位置参数。在可能的情况下，将值作为关键字参数返回，以实现最大的未来兼容性。如果您更改事物名称的次数多于其在构造函​​数的参数列表中的位置，则您可能更喜欢位置信息，但请记住，人们会花相当长的时间（可能是几年）从序列化版本重建字段，具体取决于您的迁移是为之而活的。</target>
        </trans-unit>
        <trans-unit id="be8f95e23db63b8ed19a44c8deba6d75e37d2dc0" translate="yes" xml:space="preserve">
          <source>In addition, try to avoid returning values as positional arguments; where possible, return values as keyword arguments for maximum future compatibility. Of course, if you change the names of things more often than their position in the constructor&amp;rsquo;s argument list, you might prefer positional, but bear in mind that people will be reconstructing your field from the serialized version for quite a while (possibly years), depending how long your migrations live for.</source>
          <target state="translated">另外，尽量避免返回值作为位置参数。在可能的情况下，返回值作为关键字参数，以实现最大的将来兼容性。当然，如果您更改事物的名称而不是更改其名称在构造函数的参数列表中的位置，则可能更喜欢位置，但请记住，人们将在相当长的一段时间（可能是几年）内从序列化版本重建您的字段，取决于您的迁移寿命。</target>
        </trans-unit>
        <trans-unit id="d3643c4f39cc7b043d095a8d10a730426bd124d2" translate="yes" xml:space="preserve">
          <source>In addition, you may run into a &lt;code&gt;CircularDependencyError&lt;/code&gt; when running your migrations as Django won&amp;rsquo;t be able to automatically break the dependency loop due to the dynamic dependency. If you see this error, you should break the loop by moving the models depended on by your user model into a second migration. (You can try making two normal models that have a &lt;code&gt;ForeignKey&lt;/code&gt; to each other and seeing how &lt;code&gt;makemigrations&lt;/code&gt; resolves that circular dependency if you want to see how it&amp;rsquo;s usually done.)</source>
          <target state="translated">此外，在运行迁移时，由于动态依赖关系，Django无法自动中断依赖关系循环，因此您可能会遇到 &lt;code&gt;CircularDependencyError&lt;/code&gt; 。如果看到此错误，则应通过将用户模型所依赖的模型移至第二个迁移中来中断循环。 （您可以尝试制作两个彼此具有 &lt;code&gt;ForeignKey&lt;/code&gt; 的普通模型，并查看 &lt;code&gt;makemigrations&lt;/code&gt; 如何解决该循环依赖关系（如果您想了解它通常是如何完成的。）</target>
        </trans-unit>
        <trans-unit id="6c07cdf9206331466980546d8b1cf47350f9dec8" translate="yes" xml:space="preserve">
          <source>In all cases the name of the directory containing the translation is expected to be named using &lt;a href=&quot;index#term-locale-name&quot;&gt;locale name&lt;/a&gt; notation. E.g. &lt;code&gt;de&lt;/code&gt;, &lt;code&gt;pt_BR&lt;/code&gt;, &lt;code&gt;es_AR&lt;/code&gt;, etc. Untranslated strings for territorial language variants use the translations of the generic language. For example, untranslated &lt;code&gt;pt_BR&lt;/code&gt; strings use &lt;code&gt;pt&lt;/code&gt; translations.</source>
          <target state="translated">在所有情况下，都应使用&lt;a href=&quot;index#term-locale-name&quot;&gt;区域设置名称&lt;/a&gt;符号来命名包含翻译的目录名称。如 &lt;code&gt;de&lt;/code&gt; ， &lt;code&gt;pt_BR&lt;/code&gt; 表示， &lt;code&gt;es_AR&lt;/code&gt; 等领土语言版本翻译的字符串使用通用语言的翻译。例如，未翻译的 &lt;code&gt;pt_BR&lt;/code&gt; 字符串使用 &lt;code&gt;pt&lt;/code&gt; 翻译。</target>
        </trans-unit>
        <trans-unit id="72cd5697475afea58d2e7c1ba3fcfc8ea3cf3530" translate="yes" xml:space="preserve">
          <source>In all other respects, the &lt;code&gt;InlineModelAdmin&lt;/code&gt; is exactly the same as any other. You can customize the appearance using any of the normal &lt;code&gt;ModelAdmin&lt;/code&gt; properties.</source>
          <target state="translated">在所有其他方面， &lt;code&gt;InlineModelAdmin&lt;/code&gt; 与其他任何方面完全相同。您可以使用任何正常的 &lt;code&gt;ModelAdmin&lt;/code&gt; 属性来自定义外观。</target>
        </trans-unit>
        <trans-unit id="e9d5e238bac9efc00000ed6f69e2747cbb0fb9ac" translate="yes" xml:space="preserve">
          <source>In an &lt;a href=&quot;#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; object, the &lt;a href=&quot;#django.http.HttpRequest.GET&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.http.HttpRequest.POST&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; attributes are instances of &lt;code&gt;django.http.QueryDict&lt;/code&gt;, a dictionary-like class customized to deal with multiple values for the same key. This is necessary because some HTML form elements, notably &lt;code&gt;&amp;lt;select multiple&amp;gt;&lt;/code&gt;, pass multiple values for the same key.</source>
          <target state="translated">在&lt;a href=&quot;#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;对象中，&lt;a href=&quot;#django.http.HttpRequest.GET&quot;&gt; &lt;code&gt;GET&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.http.HttpRequest.POST&quot;&gt; &lt;code&gt;POST&lt;/code&gt; &lt;/a&gt;属性是 &lt;code&gt;django.http.QueryDict&lt;/code&gt; 的实例，django.http.QueryDict是类似字典的类，自定义为可处理同一键的多个值。这是必需的，因为某些HTML表单元素（尤其是 &lt;code&gt;&amp;lt;select multiple&amp;gt;&lt;/code&gt; )会为同一键传递多个值。</target>
        </trans-unit>
        <trans-unit id="125593a33b52de9b2649a843eba4f9a9f643a393" translate="yes" xml:space="preserve">
          <source>In any case, you should always be able to &lt;a href=&quot;#spatialite-source&quot;&gt;install from source&lt;/a&gt;.</source>
          <target state="translated">无论如何，您应该始终能够&lt;a href=&quot;#spatialite-source&quot;&gt;从source安装&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="26372be3d62eb8474ab024118b757738445b8b1e" translate="yes" xml:space="preserve">
          <source>In any directory named in the &lt;a href=&quot;settings#std:setting-FIXTURE_DIRS&quot;&gt;&lt;code&gt;FIXTURE_DIRS&lt;/code&gt;&lt;/a&gt; setting</source>
          <target state="translated">在以&lt;a href=&quot;settings#std:setting-FIXTURE_DIRS&quot;&gt; &lt;code&gt;FIXTURE_DIRS&lt;/code&gt; &lt;/a&gt;设置命名的任何目录中</target>
        </trans-unit>
        <trans-unit id="c617f38771b04f4bc99f2332d1dc8deca3569a57" translate="yes" xml:space="preserve">
          <source>In any template that uses a POST form, use the &lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt;&lt;code&gt;csrf_token&lt;/code&gt;&lt;/a&gt; tag inside the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element if the form is for an internal URL, e.g.:</source>
          <target state="translated">在任何使用POST表单的模板中，如果表单用于内部URL，请在 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 元素内使用&lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt; &lt;code&gt;csrf_token&lt;/code&gt; &lt;/a&gt;标记，例如：</target>
        </trans-unit>
        <trans-unit id="3268f78806231ff9d52336b4daa2ccb81e4bcf58" translate="yes" xml:space="preserve">
          <source>In both ASGI and WSGI mode, you can still safely use asynchronous support to run code concurrently rather than serially. This is especially handy when dealing with external APIs or data stores.</source>
          <target state="translated">在ASGI和WSGI模式下,您仍然可以安全地使用异步支持来并发而不是串行地运行代码。这在处理外部API或数据存储时特别方便。</target>
        </trans-unit>
        <trans-unit id="9584b79fc48ff0575ab4a3e73aa30d63351d2fd1" translate="yes" xml:space="preserve">
          <source>In both cases, &amp;ldquo;absolute path&amp;rdquo; means a URL that doesn&amp;rsquo;t include the protocol or domain. Examples:</source>
          <target state="translated">在这两种情况下，&amp;ldquo;绝对路径&amp;rdquo;是指不包含协议或域的URL。例子：</target>
        </trans-unit>
        <trans-unit id="ad26be7567d5ea62f6cbf975fb69c51dd3b9c5ff" translate="yes" xml:space="preserve">
          <source>In case a template var (&lt;code&gt;myvar&lt;/code&gt; above) is passed to the tag, the tag will first resolve such variable to a string at run-time and then look up that string in the message catalogs.</source>
          <target state="translated">如果将模板var（上面的 &lt;code&gt;myvar&lt;/code&gt; ）传递给标签，标签将首先在运行时将此类变量解析为字符串，然后在消息目录中查找该字符串。</target>
        </trans-unit>
        <trans-unit id="2ac2ff181891a9196cfcb6c36702ae8d31f48781" translate="yes" xml:space="preserve">
          <source>In case it is a callable, it accepts the model instance as a parameter. For example:</source>
          <target state="translated">如果它是一个可调用的,它接受模型实例作为参数。例如:如果它是可调用的,它接受模型实例作为参数。</target>
        </trans-unit>
        <trans-unit id="c754ae6f658d028d73d2c46131b5071580be6e76" translate="yes" xml:space="preserve">
          <source>In case you want to override a setting for a test method, Django provides the &lt;a href=&quot;#django.test.override_settings&quot;&gt;&lt;code&gt;override_settings()&lt;/code&gt;&lt;/a&gt; decorator (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0318&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 318&lt;/strong&gt;&lt;/a&gt;). It&amp;rsquo;s used like this:</source>
          <target state="translated">如果您想覆盖测试方法的设置，则Django提供了&lt;a href=&quot;#django.test.override_settings&quot;&gt; &lt;code&gt;override_settings()&lt;/code&gt; &lt;/a&gt;装饰器（请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0318&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 318&lt;/strong&gt;&lt;/a&gt;）。它的用法如下：</target>
        </trans-unit>
        <trans-unit id="14bf4df5347afc16b3429fb63cb4de3162b6824c" translate="yes" xml:space="preserve">
          <source>In case you want to refer to files in one of the locations with an additional namespace, you can &lt;strong&gt;optionally&lt;/strong&gt; provide a prefix as &lt;code&gt;(prefix, path)&lt;/code&gt; tuples, e.g.:</source>
          <target state="translated">如果要使用附加名称空间引用位置之一中的文件，则可以&lt;strong&gt;选择&lt;/strong&gt;将前缀提供为 &lt;code&gt;(prefix, path)&lt;/code&gt; 元组，例如：</target>
        </trans-unit>
        <trans-unit id="d992ed68ceac74ca140820c822217fa435f7818c" translate="yes" xml:space="preserve">
          <source>In case your custom field needs a special conversion when being saved that is not the same as the conversion used for normal query parameters, you can override &lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_db_prep_save&quot;&gt;&lt;code&gt;get_db_prep_save()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您的自定义字段在保存时需要特殊转换，而该特殊转换与用于普通查询参数的转换不同，则可以重写&lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_db_prep_save&quot;&gt; &lt;code&gt;get_db_prep_save()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e7465849737f4a0d865ae26d03454c4d9bb925c5" translate="yes" xml:space="preserve">
          <source>In case your model defines a range using two fields, instead of the native PostgreSQL range types, you should write an expression that uses the equivalent function (e.g. &lt;code&gt;TsTzRange()&lt;/code&gt;), and use the delimiters for the field. Most often, the delimiters will be &lt;code&gt;'[)'&lt;/code&gt;, meaning that the lower bound is inclusive and the upper bound is exclusive. You may use the &lt;a href=&quot;fields#django.contrib.postgres.fields.RangeBoundary&quot;&gt;&lt;code&gt;RangeBoundary&lt;/code&gt;&lt;/a&gt; that provides an expression mapping for the &lt;a href=&quot;https://www.postgresql.org/docs/current/rangetypes.html#RANGETYPES-INCLUSIVITY&quot;&gt;range boundaries&lt;/a&gt;. For example:</source>
          <target state="translated">如果您的模型使用两个字段而不是本地PostgreSQL范围类型定义范围，则应编写一个使用等效函数的表达式（例如 &lt;code&gt;TsTzRange()&lt;/code&gt; ），并对该字段使用定界符。通常，定界符将为 &lt;code&gt;'[)'&lt;/code&gt; ，这意味着下限是包含在内的，上限是排斥的。您可以使用&lt;a href=&quot;fields#django.contrib.postgres.fields.RangeBoundary&quot;&gt; &lt;code&gt;RangeBoundary&lt;/code&gt; &lt;/a&gt;，它为&lt;a href=&quot;https://www.postgresql.org/docs/current/rangetypes.html#RANGETYPES-INCLUSIVITY&quot;&gt;范围边界&lt;/a&gt;提供表达式映射。例如：</target>
        </trans-unit>
        <trans-unit id="051cd6e750abe4a0440743fc7195e3b28df1345b" translate="yes" xml:space="preserve">
          <source>In cases 1 and 2, the value of the &lt;code&gt;backend&lt;/code&gt; argument or the &lt;code&gt;user.backend&lt;/code&gt; attribute should be a dotted import path string (like that found in &lt;a href=&quot;../../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt;&lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt;&lt;/a&gt;), not the actual backend class.</source>
          <target state="translated">在情况1和2中， &lt;code&gt;backend&lt;/code&gt; 参数或 &lt;code&gt;user.backend&lt;/code&gt; 属性的值应为点分导入路径字符串（例如在&lt;a href=&quot;../../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt; &lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt; &lt;/a&gt;中找到的字符串），而不是实际的后端类。</target>
        </trans-unit>
        <trans-unit id="d8468a1c5eceb7ad498210c570f09ce1a370656f" translate="yes" xml:space="preserve">
          <source>In contrast to &lt;a href=&quot;#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; objects, which are created automatically by Django, &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; objects are your responsibility. Each view you write is responsible for instantiating, populating, and returning an &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">与Django自动创建的&lt;a href=&quot;#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;对象相反，&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;对象是您的责任。您编写的每个视图都负责实例化，填充和返回&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f060f555e740ac3beb8b7312bc9eac7c1f9e16bd" translate="yes" xml:space="preserve">
          <source>In detail, Django automatically opens a connection to the database whenever it needs one and doesn&amp;rsquo;t have one already &amp;mdash; either because this is the first connection, or because the previous connection was closed.</source>
          <target state="translated">详细来说，Django会在需要数据库且尚未建立数据库时自动打开与数据库的连接-要么是因为这是第一个连接，要么是因为上一个连接已关闭。</target>
        </trans-unit>
        <trans-unit id="34d24d63eafec4abb1397d46acb8a0d53758ad7a" translate="yes" xml:space="preserve">
          <source>In each of these places, the language preference is expected to be in the standard &lt;a href=&quot;index#term-language-code&quot;&gt;language format&lt;/a&gt;, as a string. For example, Brazilian Portuguese is &lt;code&gt;pt-br&lt;/code&gt;.</source>
          <target state="translated">在这些地方的每个地方，语言首选项都应采用标准&lt;a href=&quot;index#term-language-code&quot;&gt;语言格式&lt;/a&gt;，即字符串。例如，巴西葡萄牙语是 &lt;code&gt;pt-br&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8cd7c1e1e4252d27a4de97d1e3a8a42f6ba5b40c" translate="yes" xml:space="preserve">
          <source>In either case, using only one style within a given regex is recommended. When both styles are mixed, any unnamed groups are ignored and only named groups are passed to the view function.</source>
          <target state="translated">无论哪种情况,都建议在一个给定的regex中只使用一种样式。当两种样式混合使用时,任何未命名的组都会被忽略,只有命名的组会被传递给视图函数。</target>
        </trans-unit>
        <trans-unit id="eca740cfe82332cf351f75edde40f7eee9f36561" translate="yes" xml:space="preserve">
          <source>In fact if your form is going to be used to directly add or edit a Django model, a &lt;a href=&quot;modelforms&quot;&gt;ModelForm&lt;/a&gt; can save you a great deal of time, effort, and code, because it will build a form, along with the appropriate fields and their attributes, from a &lt;code&gt;Model&lt;/code&gt; class.</source>
          <target state="translated">实际上，如果您的表单将用于直接添加或编辑Django模型，那么&lt;a href=&quot;modelforms&quot;&gt;ModelForm&lt;/a&gt;可以节省大量的时间，精力和代码，因为它可以构建表单以及适当的字段及其属性，来自 &lt;code&gt;Model&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="7d9a9c622b4c3cad5652ef1faa625de607bb2ed0" translate="yes" xml:space="preserve">
          <source>In fact, most lookups with &lt;code&gt;__abs&lt;/code&gt; could be implemented as range queries like this, and on most database backends it is likely to be more sensible to do so as you can make use of the indexes. However with PostgreSQL you may want to add an index on &lt;code&gt;abs(change)&lt;/code&gt; which would allow these queries to be very efficient.</source>
          <target state="translated">实际上，使用 &lt;code&gt;__abs&lt;/code&gt; 进行的大多数查找都可以这样实现为范围查询，并且在大多数数据库后端，这样做可能更明智，因为您可以使用索引。但是，对于PostgreSQL，您可能希望在 &lt;code&gt;abs(change)&lt;/code&gt; 上添加一个索引，这将使这些查询非常有效。</target>
        </trans-unit>
        <trans-unit id="adba40a949f571c0432f75912f911cb4408c8a50" translate="yes" xml:space="preserve">
          <source>In general constraints are &lt;strong&gt;not&lt;/strong&gt; checked during &lt;code&gt;full_clean()&lt;/code&gt;, and do not raise &lt;code&gt;ValidationError&lt;/code&gt;s. Rather you&amp;rsquo;ll get a database integrity error on &lt;code&gt;save()&lt;/code&gt;. &lt;code&gt;UniqueConstraint&lt;/code&gt;s without a &lt;a href=&quot;#django.db.models.UniqueConstraint.condition&quot;&gt;&lt;code&gt;condition&lt;/code&gt;&lt;/a&gt; (i.e. non-partial unique constraints) are different in this regard, in that they leverage the existing &lt;code&gt;validate_unique()&lt;/code&gt; logic, and thus enable two-stage validation. In addition to &lt;code&gt;IntegrityError&lt;/code&gt; on &lt;code&gt;save()&lt;/code&gt;, &lt;code&gt;ValidationError&lt;/code&gt; is also raised during model validation when the &lt;code&gt;UniqueConstraint&lt;/code&gt; is violated.</source>
          <target state="translated">通常，在 &lt;code&gt;full_clean()&lt;/code&gt; 期间&lt;strong&gt;不&lt;/strong&gt;检查约束，并且不引发 &lt;code&gt;ValidationError&lt;/code&gt; 。相反，您将在 &lt;code&gt;save()&lt;/code&gt; 上收到数据库完整性错误。没有&lt;a href=&quot;#django.db.models.UniqueConstraint.condition&quot;&gt; &lt;code&gt;condition&lt;/code&gt; &lt;/a&gt;（即非局部唯一约束）的 &lt;code&gt;UniqueConstraint&lt;/code&gt; 在这方面有所不同，因为它们利用了现有的 &lt;code&gt;validate_unique()&lt;/code&gt; 逻辑，从而启用了两阶段验证。除了 &lt;code&gt;IntegrityError&lt;/code&gt; 上 &lt;code&gt;save()&lt;/code&gt; ， &lt;code&gt;ValidationError&lt;/code&gt; 也模型验证期间，当提出 &lt;code&gt;UniqueConstraint&lt;/code&gt; 被侵犯。</target>
        </trans-unit>
        <trans-unit id="209edf2940165c6cc1a875e5298008997ec85e40" translate="yes" xml:space="preserve">
          <source>In general, &lt;code&gt;Q() objects&lt;/code&gt; make it possible to define and reuse conditions. This permits the &lt;a href=&quot;../../topics/db/queries#complex-lookups-with-q&quot;&gt;construction of complex database queries&lt;/a&gt; using &lt;code&gt;|&lt;/code&gt; (&lt;code&gt;OR&lt;/code&gt;) and &lt;code&gt;&amp;amp;&lt;/code&gt; (&lt;code&gt;AND&lt;/code&gt;) operators; in particular, it is not otherwise possible to use &lt;code&gt;OR&lt;/code&gt; in &lt;code&gt;QuerySets&lt;/code&gt;.</source>
          <target state="translated">通常，使用 &lt;code&gt;Q() objects&lt;/code&gt; 可以定义和重用条件。这允许使用 &lt;code&gt;|&lt;/code&gt; &lt;a href=&quot;../../topics/db/queries#complex-lookups-with-q&quot;&gt;构造复杂的数据库查询&lt;/a&gt;。（ &lt;code&gt;OR&lt;/code&gt; ）和 &lt;code&gt;&amp;amp;&lt;/code&gt; （ &lt;code&gt;AND&lt;/code&gt; ）运算符；特别是，否则不可能在 &lt;code&gt;QuerySets&lt;/code&gt; 中使用 &lt;code&gt;OR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6c3985cf74933843dd741b4b15c88efa849cde0" translate="yes" xml:space="preserve">
          <source>In general, GeoDjango installation requires:</source>
          <target state="translated">一般来说,GeoDjango安装需要。</target>
        </trans-unit>
        <trans-unit id="509d11594c50dfe8712d4434d7a4afdf6b8e5098" translate="yes" xml:space="preserve">
          <source>In general, any cleaning method can raise &lt;code&gt;ValidationError&lt;/code&gt; if there is a problem with the data it is processing, passing the relevant information to the &lt;code&gt;ValidationError&lt;/code&gt; constructor. &lt;a href=&quot;#raising-validation-error&quot;&gt;See below&lt;/a&gt; for the best practice in raising &lt;code&gt;ValidationError&lt;/code&gt;. If no &lt;code&gt;ValidationError&lt;/code&gt; is raised, the method should return the cleaned (normalized) data as a Python object.</source>
          <target state="translated">通常，如果正在处理的数据存在问题，则任何清除方法都可以引发 &lt;code&gt;ValidationError&lt;/code&gt; ，并将相关信息传递给 &lt;code&gt;ValidationError&lt;/code&gt; 构造函数。&lt;a href=&quot;#raising-validation-error&quot;&gt;有关&lt;/a&gt;提高 &lt;code&gt;ValidationError&lt;/code&gt; 的最佳实践，请参见下文。如果没有引发 &lt;code&gt;ValidationError&lt;/code&gt; ，则该方法应将清除（规范化）的数据作为Python对象返回。</target>
        </trans-unit>
        <trans-unit id="aff7eda262832443cdc4cfd621b6e572d84270a0" translate="yes" xml:space="preserve">
          <source>In general, it is enough to define &lt;a href=&quot;#django.template.loaders.base.Loader.get_template_sources&quot;&gt;&lt;code&gt;get_template_sources()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.template.loaders.base.Loader.get_contents&quot;&gt;&lt;code&gt;get_contents()&lt;/code&gt;&lt;/a&gt; for custom template loaders. &lt;code&gt;get_template()&lt;/code&gt; will usually not need to be overridden.</source>
          <target state="translated">通常，为自定义模板加载程序定义&lt;a href=&quot;#django.template.loaders.base.Loader.get_template_sources&quot;&gt; &lt;code&gt;get_template_sources()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.template.loaders.base.Loader.get_contents&quot;&gt; &lt;code&gt;get_contents()&lt;/code&gt; &lt;/a&gt;就足够了。 &lt;code&gt;get_template()&lt;/code&gt; 通常不需要重写。</target>
        </trans-unit>
        <trans-unit id="b162efee794bcad06a96b812cb84dc6a654ea12a" translate="yes" xml:space="preserve">
          <source>In general, the library path may be set on a per-user basis by setting an environment variable, or by configuring the library path for the entire system.</source>
          <target state="translated">一般情况下,库路径可以通过设置环境变量按每个用户来设置,也可以为整个系统配置库路径。</target>
        </trans-unit>
        <trans-unit id="f02826e5404756fbfee9b9f4d13058259e858ef3" translate="yes" xml:space="preserve">
          <source>In higher level code related to handling of URLs of Django model instances: The &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_absolute_url&quot;&gt;&lt;code&gt;get_absolute_url()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">在与Django模型实例的URL处理相关的高级代码中：&lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_absolute_url&quot;&gt; &lt;code&gt;get_absolute_url()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="0325acb3dd5bb25e96712e073ccf8beac6d4f214" translate="yes" xml:space="preserve">
          <source>In its simplest form &lt;code&gt;Prefetch&lt;/code&gt; is equivalent to the traditional string based lookups:</source>
          <target state="translated">&lt;code&gt;Prefetch&lt;/code&gt; 以其最简单的形式等效于基于传统字符串的查找：</target>
        </trans-unit>
        <trans-unit id="74628a3f6d1c7feffe7469a9ab6311bf142ff0b9" translate="yes" xml:space="preserve">
          <source>In larger templates, this technique helps you see which &lt;code&gt;{% block %}&lt;/code&gt; tags are being closed.</source>
          <target state="translated">在较大的模板中，此技术可帮助您查看哪些 &lt;code&gt;{% block %}&lt;/code&gt; 标签正在关闭。</target>
        </trans-unit>
        <trans-unit id="e5e38ef2b3710d00983de8113dd8ab5592914bbb" translate="yes" xml:space="preserve">
          <source>In lieu of the above approach which requires duplicating methods on both the &lt;code&gt;QuerySet&lt;/code&gt; and the &lt;code&gt;Manager&lt;/code&gt;, &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.as_manager&quot;&gt;&lt;code&gt;QuerySet.as_manager()&lt;/code&gt;&lt;/a&gt; can be used to create an instance of &lt;code&gt;Manager&lt;/code&gt; with a copy of a custom &lt;code&gt;QuerySet&lt;/code&gt;&amp;rsquo;s methods:</source>
          <target state="translated">代替上述要求在 &lt;code&gt;QuerySet&lt;/code&gt; 和 &lt;code&gt;Manager&lt;/code&gt; 上都复制方法的方法，可以使用&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.as_manager&quot;&gt; &lt;code&gt;QuerySet.as_manager()&lt;/code&gt; &lt;/a&gt;创建具有自定义 &lt;code&gt;QuerySet&lt;/code&gt; 方法副本的 &lt;code&gt;Manager&lt;/code&gt; 实例：</target>
        </trans-unit>
        <trans-unit id="892885cde16dca9d450a49f5544282693afce6a6" translate="yes" xml:space="preserve">
          <source>In models, a field is instantiated as a class attribute and represents a particular table column, see &lt;a href=&quot;../../topics/db/models&quot;&gt;Models&lt;/a&gt;. It has attributes such as &lt;a href=&quot;#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.Field.unique&quot;&gt;&lt;code&gt;unique&lt;/code&gt;&lt;/a&gt;, and methods that Django uses to map the field value to database-specific values.</source>
          <target state="translated">在模型中，字段被实例化为类属性，并代表特定的表列，请参见&lt;a href=&quot;../../topics/db/models&quot;&gt;Models&lt;/a&gt;。它具有诸如&lt;a href=&quot;#django.db.models.Field.null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.db.models.Field.unique&quot;&gt; &lt;code&gt;unique&lt;/code&gt; 的&lt;/a&gt;属性，以及Django用于将字段值映射到特定于数据库的值的方法。</target>
        </trans-unit>
        <trans-unit id="c049c4f3a733196872767a3d6e8373dbf1a9e8d8" translate="yes" xml:space="preserve">
          <source>In most cases it will be necessary to upgrade to the latest version of your Django-related dependencies as well. If the Django version was recently released or if some of your dependencies are not well-maintained, some of your dependencies may not yet support the new Django version. In these cases you may have to wait until new versions of your dependencies are released.</source>
          <target state="translated">在大多数情况下,你需要将Django相关的依赖关系也升级到最新版本。如果Django的版本最近才发布,或者你的一些依赖关系没有得到很好的维护,那么你的一些依赖关系可能还不支持新的Django版本。在这种情况下,你可能不得不等待新版本的依赖关系发布。</target>
        </trans-unit>
        <trans-unit id="2553c57b09242581a803e6aacbe2b851d277b3d0" translate="yes" xml:space="preserve">
          <source>In most cases overriding or inheriting &lt;code&gt;get_FOO_display()&lt;/code&gt;, &lt;code&gt;get_next_by_FOO()&lt;/code&gt;, and &lt;code&gt;get_previous_by_FOO()&lt;/code&gt; should work as expected. Since they are added by the metaclass however, it is not practical to account for all possible inheritance structures. In more complex cases you should override &lt;code&gt;Field.contribute_to_class()&lt;/code&gt; to set the methods you need.</source>
          <target state="translated">在大多数情况下，覆盖或继承 &lt;code&gt;get_FOO_display()&lt;/code&gt; ， &lt;code&gt;get_next_by_FOO()&lt;/code&gt; 和 &lt;code&gt;get_previous_by_FOO()&lt;/code&gt; 应该可以正常工作。由于它们是由元类添加的，因此考虑所有可能的继承结构是不切实际的。在更复杂的情况下，您应该重写 &lt;code&gt;Field.contribute_to_class()&lt;/code&gt; 来设置所需的方法。</target>
        </trans-unit>
        <trans-unit id="46ee957bac7e253d4620f33ab4a0b3981905456a" translate="yes" xml:space="preserve">
          <source>In most cases when Django is dealing with strings, it will convert them to strings before doing anything else. So, as a general rule, if you pass in a bytestring, be prepared to receive a string back in the result.</source>
          <target state="translated">在大多数情况下,当Django处理字符串时,它会在做其他事情之前将它们转换为字符串。所以,一般来说,如果你传入一个bytestring,要准备好在结果中收到一个字符串。</target>
        </trans-unit>
        <trans-unit id="acee6b59fd13a3ca3fe85dc3b662ea33a0c91494" translate="yes" xml:space="preserve">
          <source>In most cases, Django can automatically detect and set this, but you can also provide an explicit override as a class attribute on your &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; subclass. In a few situations this is required; for instance if the app package is a &lt;a href=&quot;#namespace-package&quot;&gt;namespace package&lt;/a&gt; with multiple paths.</source>
          <target state="translated">在大多数情况下，Django可以自动检测并设置此设置，但您也可以在&lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt;子类上提供显式替代作为类属性。在某些情况下，这是必需的；例如，如果应用程序包是具有多个路径的&lt;a href=&quot;#namespace-package&quot;&gt;名称空间包&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e12dbf6f96ad8979888b66a156e04c3569721e6" translate="yes" xml:space="preserve">
          <source>In most cases, for a patch to be accepted into Django it has to include tests. For bug fix patches, this means writing a regression test to ensure that the bug is never reintroduced into Django later on. A regression test should be written in such a way that it will fail while the bug still exists and pass once the bug has been fixed. For patches containing new features, you&amp;rsquo;ll need to include tests which ensure that the new features are working correctly. They too should fail when the new feature is not present, and then pass once it has been implemented.</source>
          <target state="translated">在大多数情况下，要使补丁被Django接受，必须包含测试。对于错误修复补丁，这意味着编写回归测试以确保以后永远不会将错误重新引入Django。编写回归测试的方式应使其在错误仍然存​​在时将失败并在错误被修复后通过。对于包含新功能的修补程序，您需要包括测试以确保新功能正常运行。当新功能不存在时，它们也应该失败，然后在实现新功能时通过。</target>
        </trans-unit>
        <trans-unit id="d63a9dd51c8abf1805656df5834de22fb54d2d48" translate="yes" xml:space="preserve">
          <source>In most cases, inheriting from this mixin will be sufficient to make an old-style middleware compatible with the new system with sufficient backwards-compatibility. The new short-circuiting semantics will be harmless or even beneficial to the existing middleware. In a few cases, a middleware class may need some changes to adjust to the new semantics.</source>
          <target state="translated">在大多数情况下,从这个mixin继承就足以使旧式的中间件与新系统有足够的向后兼容性。新的短路语义对现有的中间件将是无害的,甚至是有益的。在少数情况下,中间件类可能需要做一些改变来适应新的语义。</target>
        </trans-unit>
        <trans-unit id="d9d0c45a9a5c2988974b76f45606b7b5230c0954" translate="yes" xml:space="preserve">
          <source>In most cases, it&amp;rsquo;s best to use translated URLs only within a language code prefixed block of patterns (using &lt;a href=&quot;#django.conf.urls.i18n.i18n_patterns&quot;&gt;&lt;code&gt;i18n_patterns()&lt;/code&gt;&lt;/a&gt;), to avoid the possibility that a carelessly translated URL causes a collision with a non-translated URL pattern.</source>
          <target state="translated">在大多数情况下，最好仅在以语言代码为前缀的模式块中使用翻译的URL（使用&lt;a href=&quot;#django.conf.urls.i18n.i18n_patterns&quot;&gt; &lt;code&gt;i18n_patterns()&lt;/code&gt; &lt;/a&gt;），以避免粗心翻译的URL与非翻译的URL模式发生冲突的可能性。</target>
        </trans-unit>
        <trans-unit id="53ae97a84b8d45f7667a00362e01147ed1582f6c" translate="yes" xml:space="preserve">
          <source>In most cases, the field will have a sensible default widget. For example, by default, a &lt;a href=&quot;../../ref/forms/fields#django.forms.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; will have a &lt;a href=&quot;../../ref/forms/widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt; widget, that produces an &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt; in the HTML. If you needed &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; instead, you&amp;rsquo;d specify the appropriate widget when defining your form field, as we have done for the &lt;code&gt;message&lt;/code&gt; field.</source>
          <target state="translated">在大多数情况下，该字段将具有明智的默认小部件。例如，默认情况下，&lt;a href=&quot;../../ref/forms/fields#django.forms.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;将具有&lt;a href=&quot;../../ref/forms/widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt;小部件，该小部件将在HTML 中生成 &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt; 。如果您需要 &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; ，则可以在定义表单字段时指定适当的小部件，就像我们对 &lt;code&gt;message&lt;/code&gt; 字段所做的那样。</target>
        </trans-unit>
        <trans-unit id="6eb548d924e6f442368c56b8245c2ffe7a95f69e" translate="yes" xml:space="preserve">
          <source>In most cases, this object will not have been saved to the database yet, so if it uses the default &lt;code&gt;AutoField&lt;/code&gt;, &lt;em&gt;it might not yet have a value for its primary key field&lt;/em&gt;.</source>
          <target state="translated">在大多数情况下，此对象尚未保存到数据库，因此，如果使用默认的 &lt;code&gt;AutoField&lt;/code&gt; ，&lt;em&gt;则它的主键字段可能尚未具有值&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="553a3a820227d2b61d89c93a4f51644a0ad682a2" translate="yes" xml:space="preserve">
          <source>In most cases, you can send email using &lt;code&gt;django.core.mail.send_mail()&lt;/code&gt;.</source>
          <target state="translated">在大多数情况下，您可以使用 &lt;code&gt;django.core.mail.send_mail()&lt;/code&gt; 发送电子邮件。</target>
        </trans-unit>
        <trans-unit id="fb9e461a8cfdfc6e585763268faa61b1594df5ef" translate="yes" xml:space="preserve">
          <source>In non-interactive mode, the &lt;a href=&quot;../topics/auth/customizing#django.contrib.auth.models.CustomUser.USERNAME_FIELD&quot;&gt;&lt;code&gt;USERNAME_FIELD&lt;/code&gt;&lt;/a&gt; and required fields (listed in &lt;a href=&quot;../topics/auth/customizing#django.contrib.auth.models.CustomUser.REQUIRED_FIELDS&quot;&gt;&lt;code&gt;REQUIRED_FIELDS&lt;/code&gt;&lt;/a&gt;) fall back to &lt;code&gt;DJANGO_SUPERUSER_&amp;lt;uppercase_field_name&amp;gt;&lt;/code&gt; environment variables, unless they are overridden by a command line argument. For example, to provide an &lt;code&gt;email&lt;/code&gt; field, you can use &lt;code&gt;DJANGO_SUPERUSER_EMAIL&lt;/code&gt; environment variable.</source>
          <target state="translated">在非交互模式下，除非由命令行参数覆盖，否则&lt;a href=&quot;../topics/auth/customizing#django.contrib.auth.models.CustomUser.USERNAME_FIELD&quot;&gt; &lt;code&gt;USERNAME_FIELD&lt;/code&gt; &lt;/a&gt;和必填字段（列在&lt;a href=&quot;../topics/auth/customizing#django.contrib.auth.models.CustomUser.REQUIRED_FIELDS&quot;&gt; &lt;code&gt;REQUIRED_FIELDS&lt;/code&gt; 中&lt;/a&gt;）将回退至 &lt;code&gt;DJANGO_SUPERUSER_&amp;lt;uppercase_field_name&amp;gt;&lt;/code&gt; 环境变量。例如，要提供 &lt;code&gt;email&lt;/code&gt; 字段，可以使用 &lt;code&gt;DJANGO_SUPERUSER_EMAIL&lt;/code&gt; 环境变量。</target>
        </trans-unit>
        <trans-unit id="e811dedb04c04b0db2eb92ba335a09921c544b79" translate="yes" xml:space="preserve">
          <source>In normal Python class inheritance, it is permissible for a child class to override any attribute from the parent class. In Django, this isn&amp;rsquo;t usually permitted for model fields. If a non-abstract model base class has a field called &lt;code&gt;author&lt;/code&gt;, you can&amp;rsquo;t create another model field or define an attribute called &lt;code&gt;author&lt;/code&gt; in any class that inherits from that base class.</source>
          <target state="translated">在常规的Python类继承中，子类可以覆盖父类的任何属性。在Django中，模型字段通常不允许这样做。如果非抽象模型基类具有一个称为 &lt;code&gt;author&lt;/code&gt; 的字段，则不能在从该基类继承的任何类中创建另一个模型字段或定义一个称为 &lt;code&gt;author&lt;/code&gt; 的属性。</target>
        </trans-unit>
        <trans-unit id="9ba287b42f73a012193a36b795923c8fa6f96a7d" translate="yes" xml:space="preserve">
          <source>In older versions of Django, be careful when reusing Django&amp;rsquo;s built-in filters as &lt;code&gt;autoescape&lt;/code&gt; defaults to &lt;code&gt;None&lt;/code&gt;. You&amp;rsquo;ll need to pass &lt;code&gt;autoescape=True&lt;/code&gt; to get autoescaping.</source>
          <target state="translated">在旧版本的Django中，重新使用Django的内置过滤器时要小心，因为 &lt;code&gt;autoescape&lt;/code&gt; 的默认值为 &lt;code&gt;None&lt;/code&gt; 。您需要传递 &lt;code&gt;autoescape=True&lt;/code&gt; 才能进行自动转义。</target>
        </trans-unit>
        <trans-unit id="48487eecdf3392dca8cdac3e20e02c45e851f71c" translate="yes" xml:space="preserve">
          <source>In older versions, &lt;code&gt;'&lt;/code&gt; is converted to its decimal code &lt;code&gt;&amp;amp;#39;&lt;/code&gt; instead of the equivalent hex code &lt;code&gt;&amp;amp;#x27;&lt;/code&gt;.</source>
          <target state="translated">在较旧的版本中， &lt;code&gt;'&lt;/code&gt; 转换为其十进制代码 &lt;code&gt;&amp;amp;#39;&lt;/code&gt; 。而不是等效的十六进制代码 &lt;code&gt;&amp;amp;#x27;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad59f8bbf153ed815b532a2f6dd98471ff133b44" translate="yes" xml:space="preserve">
          <source>In older versions, &lt;code&gt;True&lt;/code&gt; was returned for &lt;a href=&quot;#django.forms.FileInput&quot;&gt;&lt;code&gt;FileInput&lt;/code&gt;&lt;/a&gt; when &lt;code&gt;initial&lt;/code&gt; was set.</source>
          <target state="translated">在旧版本中， &lt;code&gt;True&lt;/code&gt; 被退回&lt;a href=&quot;#django.forms.FileInput&quot;&gt; &lt;code&gt;FileInput&lt;/code&gt; &lt;/a&gt;时 &lt;code&gt;initial&lt;/code&gt; 设置。</target>
        </trans-unit>
        <trans-unit id="a594579463454aa6c5f1d126c4933adb9501ac81" translate="yes" xml:space="preserve">
          <source>In older versions, &lt;code&gt;s&lt;/code&gt; may be a bytestring.</source>
          <target state="translated">在旧版本中， &lt;code&gt;s&lt;/code&gt; 可能是一个字节串。</target>
        </trans-unit>
        <trans-unit id="06abe09565f7ebaaa5a5a3e66eecce8b6a0e1ba2" translate="yes" xml:space="preserve">
          <source>In older versions, MySQL uses &lt;code&gt;MBRContains&lt;/code&gt; and operates only on bounding boxes.</source>
          <target state="translated">在旧版本中，MySQL使用 &lt;code&gt;MBRContains&lt;/code&gt; 并仅在边界框上运行。</target>
        </trans-unit>
        <trans-unit id="86fdacbc12f0c3ada37ced324655c76230d31333" translate="yes" xml:space="preserve">
          <source>In older versions, MySQL uses &lt;code&gt;MBRDisjoint&lt;/code&gt; and operates only on bounding boxes.</source>
          <target state="translated">在旧版本中，MySQL使用 &lt;code&gt;MBRDisjoint&lt;/code&gt; 且仅在边界框上运行。</target>
        </trans-unit>
        <trans-unit id="a250c6c4d5ddf0ab4e264cb2589304887da56d37" translate="yes" xml:space="preserve">
          <source>In older versions, MySQL uses &lt;code&gt;MBREquals&lt;/code&gt; and operates only on bounding boxes.</source>
          <target state="translated">在旧版本中，MySQL使用 &lt;code&gt;MBREquals&lt;/code&gt; 并仅在边界框上运行。</target>
        </trans-unit>
        <trans-unit id="3d30b1f38b6febfe720406653832214a3cd66396" translate="yes" xml:space="preserve">
          <source>In older versions, MySQL uses &lt;code&gt;MBRIntersects&lt;/code&gt; and operates only on bounding boxes.</source>
          <target state="translated">在旧版本中，MySQL使用 &lt;code&gt;MBRIntersects&lt;/code&gt; 并仅在边界框上运行。</target>
        </trans-unit>
        <trans-unit id="a108605efc0a5748e8093c6df53458e3fc931cff" translate="yes" xml:space="preserve">
          <source>In older versions, MySQL uses &lt;code&gt;MBROverlaps&lt;/code&gt; and operates only on bounding boxes.</source>
          <target state="translated">在旧版本中，MySQL使用 &lt;code&gt;MBROverlaps&lt;/code&gt; 且仅在边界框上运行。</target>
        </trans-unit>
        <trans-unit id="6a423185ebb0542b517af591a286bdfe336b4ccb" translate="yes" xml:space="preserve">
          <source>In older versions, MySQL uses &lt;code&gt;MBRTouches&lt;/code&gt; and operates only on bounding boxes.</source>
          <target state="translated">在旧版本中，MySQL使用 &lt;code&gt;MBRTouches&lt;/code&gt; 且仅在边界框上运行。</target>
        </trans-unit>
        <trans-unit id="e454d7f81ea9b0f64b3dcee0ba1d27440f516a6e" translate="yes" xml:space="preserve">
          <source>In older versions, MySQL uses &lt;code&gt;MBRWithin&lt;/code&gt; and operates only on bounding boxes.</source>
          <target state="translated">在旧版本中，MySQL使用 &lt;code&gt;MBRWithin&lt;/code&gt; 并且仅在边界框上运行。</target>
        </trans-unit>
        <trans-unit id="8fd7673044991a0b322632f8e9ea866e0901e9d1" translate="yes" xml:space="preserve">
          <source>In older versions, a negative zero &lt;code&gt;-0&lt;/code&gt; was returned for negative numbers which round to zero.</source>
          <target state="translated">在旧版本中，对于舍入为零的负数，返回负零 &lt;code&gt;-0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="04c471d6170a640a7f0b0a6b5d86ad526b15aeb8" translate="yes" xml:space="preserve">
          <source>In older versions, it returns a bytestring instead of a string.</source>
          <target state="translated">在旧版本中,它返回一个bytestring而不是一个字符串。</target>
        </trans-unit>
        <trans-unit id="e77f0794cc34eae167668fa46edcdb855f41b6ef" translate="yes" xml:space="preserve">
          <source>In older versions, permissions for proxy models use the content type of the concrete model rather than content type of the proxy model.</source>
          <target state="translated">在旧版本中,代理模型的权限使用具体模型的内容类型而不是代理模型的内容类型。</target>
        </trans-unit>
        <trans-unit id="c3ee96d228df4d2c97001f389d45ba85fe666ff6" translate="yes" xml:space="preserve">
          <source>In older versions, proxy models use the content type of the concrete model.</source>
          <target state="translated">在旧版本中,代理模型使用具体模型的内容类型。</target>
        </trans-unit>
        <trans-unit id="83f79b94fd4d38f0c3bbad3802efe29f7e0d5b34" translate="yes" xml:space="preserve">
          <source>In older versions, the &lt;code&gt;max-age&lt;/code&gt; directive from the &lt;code&gt;Cache-Control&lt;/code&gt; header had precedence over the cache timeout set by &lt;code&gt;cache_page&lt;/code&gt;.</source>
          <target state="translated">在旧版本中，来自 &lt;code&gt;Cache-Control&lt;/code&gt; 标头的 &lt;code&gt;max-age&lt;/code&gt; 指令优先于 &lt;code&gt;cache_page&lt;/code&gt; 设置的缓存超时。</target>
        </trans-unit>
        <trans-unit id="fb39b75e03f33a4e72cf13d13c8cf8133f783eb6" translate="yes" xml:space="preserve">
          <source>In older versions, the &lt;code&gt;tzinfo&lt;/code&gt; attribute is a &lt;a href=&quot;#django.utils.timezone.FixedOffset&quot;&gt;&lt;code&gt;FixedOffset&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">在旧版本中， &lt;code&gt;tzinfo&lt;/code&gt; 属性是&lt;a href=&quot;#django.utils.timezone.FixedOffset&quot;&gt; &lt;code&gt;FixedOffset&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="7fd83cf3fc3c18973ca72e95305a6b3f72906774" translate="yes" xml:space="preserve">
          <source>In older versions, the default is a list containing also date-only formats.</source>
          <target state="translated">在旧版本中,默认的是一个包含仅有日期的格式的列表。</target>
        </trans-unit>
        <trans-unit id="688ca5f2699bc44de7ce8a06a72f66e4061b7b2e" translate="yes" xml:space="preserve">
          <source>In older versions, the default value is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">在旧版本中，默认值为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f4239bf88dcd319d30aa682cbe4d3cde5d9664bc" translate="yes" xml:space="preserve">
          <source>In older versions, the default value is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">在旧版本中，默认值为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce7d5574bd6957ee81720c428d128a45952d2924" translate="yes" xml:space="preserve">
          <source>In older versions, the default value is &lt;code&gt;SAMEORIGIN&lt;/code&gt;.</source>
          <target state="translated">在旧版本中，默认值为 &lt;code&gt;SAMEORIGIN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6cc69bdce16d1e99c5ef8c352ab414ffc039ac15" translate="yes" xml:space="preserve">
          <source>In older versions, the distinction for the fallback is based on whether the &lt;code&gt;X-Requested-With&lt;/code&gt; header is set to the value &lt;code&gt;XMLHttpRequest&lt;/code&gt;. This is set by the jQuery &lt;code&gt;ajax()&lt;/code&gt; method.</source>
          <target state="translated">在旧版本中，后备功能的区别基于 &lt;code&gt;X-Requested-With&lt;/code&gt; 标头是否设置为值 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 。这是由jQuery &lt;code&gt;ajax()&lt;/code&gt; 方法设置的。</target>
        </trans-unit>
        <trans-unit id="d0bfa731b6114bdaa19c99d0b74ff78b5af90d4f" translate="yes" xml:space="preserve">
          <source>In older versions, the first &lt;code&gt;value&lt;/code&gt; element in the choice tuple is the &lt;code&gt;field&lt;/code&gt; value itself, rather than a &lt;code&gt;ModelChoiceIteratorValue&lt;/code&gt; instance. In most cases this proxies transparently but, if you need the &lt;code&gt;field&lt;/code&gt; value itself, use the &lt;a href=&quot;#django.forms.ModelChoiceIteratorValue.value&quot;&gt;&lt;code&gt;ModelChoiceIteratorValue.value&lt;/code&gt;&lt;/a&gt; attribute instead.</source>
          <target state="translated">在旧版本中，选择元组中的第一个 &lt;code&gt;value&lt;/code&gt; 元素是 &lt;code&gt;field&lt;/code&gt; 值本身，而不是 &lt;code&gt;ModelChoiceIteratorValue&lt;/code&gt; 实例。在大多数情况下，这是透明的代理，但是，如果您本身需要 &lt;code&gt;field&lt;/code&gt; 值，请改用&lt;a href=&quot;#django.forms.ModelChoiceIteratorValue.value&quot;&gt; &lt;code&gt;ModelChoiceIteratorValue.value&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="66326a5c500f2e9b8f06b11645d2eb1a463f096a" translate="yes" xml:space="preserve">
          <source>In older versions, the keyword arguments with &lt;code&gt;None&lt;/code&gt; values are made up also for not provided named parts.</source>
          <target state="translated">在旧版本中，具有 &lt;code&gt;None&lt;/code&gt; 值的关键字参数也由未提供的命名部件组成。</target>
        </trans-unit>
        <trans-unit id="be44bea554526db510067415e8c9fcb3f595c8bd" translate="yes" xml:space="preserve">
          <source>In older versions, you could set the language in the current session.</source>
          <target state="translated">在旧版本中,你可以在当前会话中设置语言。</target>
        </trans-unit>
        <trans-unit id="ecde436d8369233ca2f3dcb9ab1ca79254f03cdf" translate="yes" xml:space="preserve">
          <source>In order for the &lt;code&gt;python manage.py migrate&lt;/code&gt; command to work, your Oracle database user must have privileges to run the following commands:</source>
          <target state="translated">为了使 &lt;code&gt;python manage.py migrate&lt;/code&gt; 命令起作用，您的Oracle数据库用户必须具有运行以下命令的特权：</target>
        </trans-unit>
        <trans-unit id="90fe772dd41ff482e0ce23d0eaa3b30a1fdefbce" translate="yes" xml:space="preserve">
          <source>In order for your filter to know the current auto-escaping state, set the &lt;code&gt;needs_autoescape&lt;/code&gt; flag to &lt;code&gt;True&lt;/code&gt; when you register your filter function. (If you don&amp;rsquo;t specify this flag, it defaults to &lt;code&gt;False&lt;/code&gt;). This flag tells Django that your filter function wants to be passed an extra keyword argument, called &lt;code&gt;autoescape&lt;/code&gt;, that is &lt;code&gt;True&lt;/code&gt; if auto-escaping is in effect and &lt;code&gt;False&lt;/code&gt; otherwise. It is recommended to set the default of the &lt;code&gt;autoescape&lt;/code&gt; parameter to &lt;code&gt;True&lt;/code&gt;, so that if you call the function from Python code it will have escaping enabled by default.</source>
          <target state="translated">为了使您的过滤器了解当前的自动转义状态，请在注册过滤器功能时将 &lt;code&gt;needs_autoescape&lt;/code&gt; 标志设置为 &lt;code&gt;True&lt;/code&gt; 。 （如果不指定此标志，则默认为 &lt;code&gt;False&lt;/code&gt; ）。此标志告诉Django您的过滤器函数希望传递一个额外的关键字参数，称为 &lt;code&gt;autoescape&lt;/code&gt; ，如果自动转义有效，则为 &lt;code&gt;True&lt;/code&gt; ，否则为 &lt;code&gt;False&lt;/code&gt; 。建议将 &lt;code&gt;autoescape&lt;/code&gt; 参数的默认值设置为 &lt;code&gt;True&lt;/code&gt; ，这样，如果您从Python代码调用该函数，则默认情况下将启用转义。</target>
        </trans-unit>
        <trans-unit id="11a387c8a9914108b9a7aabd974b6e6881a3bea5" translate="yes" xml:space="preserve">
          <source>In order to build a custom session engine or to customize an existing one, you may create a new class inheriting from &lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase&quot;&gt;&lt;code&gt;SessionBase&lt;/code&gt;&lt;/a&gt; or any other existing &lt;code&gt;SessionStore&lt;/code&gt; class.</source>
          <target state="translated">为了构建自定义会话引擎或自定义现有会话引擎，您可以创建一个继承自&lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase&quot;&gt; &lt;code&gt;SessionBase&lt;/code&gt; &lt;/a&gt;或任何其他现有 &lt;code&gt;SessionStore&lt;/code&gt; 类的新类。</target>
        </trans-unit>
        <trans-unit id="f48a9537ae495f429e0a574bc2641d48124286ad" translate="yes" xml:space="preserve">
          <source>In order to configure logging, you use &lt;a href=&quot;../ref/settings#std:setting-LOGGING&quot;&gt;&lt;code&gt;LOGGING&lt;/code&gt;&lt;/a&gt; to define a dictionary of logging settings. These settings describes the loggers, handlers, filters and formatters that you want in your logging setup, and the log levels and other properties that you want those components to have.</source>
          <target state="translated">为了配置日志记录，您可以使用&lt;a href=&quot;../ref/settings#std:setting-LOGGING&quot;&gt; &lt;code&gt;LOGGING&lt;/code&gt; &lt;/a&gt;定义日志记录设置的字典。这些设置描述了您希望在日志记录设置中使用的日志记录器，处理程序，过滤器和格式化程序，以及希望这些组件具有的日志级别和其他属性。</target>
        </trans-unit>
        <trans-unit id="42b3fc106c92756d794366455faac3a83dc515a5" translate="yes" xml:space="preserve">
          <source>In order to do that you can check the database connection&amp;rsquo;s alias inside a &lt;code&gt;RunPython&lt;/code&gt; operation by looking at the &lt;code&gt;schema_editor.connection.alias&lt;/code&gt; attribute:</source>
          <target state="translated">为此，您可以通过查看 &lt;code&gt;schema_editor.connection.alias&lt;/code&gt; 属性来检查 &lt;code&gt;RunPython&lt;/code&gt; 操作中数据库连接的别名：</target>
        </trans-unit>
        <trans-unit id="61d52591f027c8771ad5ddae66ce22631a8a19bc" translate="yes" xml:space="preserve">
          <source>In order to fully serialize your &lt;code&gt;Restaurant&lt;/code&gt; instances, you will need to serialize the &lt;code&gt;Place&lt;/code&gt; models as well:</source>
          <target state="translated">为了完全序列化您的 &lt;code&gt;Restaurant&lt;/code&gt; 实例，您还需要序列化 &lt;code&gt;Place&lt;/code&gt; 模型：</target>
        </trans-unit>
        <trans-unit id="814bf473789694253cf32579769ab02b74a9eb85" translate="yes" xml:space="preserve">
          <source>In order to guarantee atomicity, &lt;code&gt;atomic&lt;/code&gt; disables some APIs. Attempting to commit, roll back, or change the autocommit state of the database connection within an &lt;code&gt;atomic&lt;/code&gt; block will raise an exception.</source>
          <target state="translated">为了保证原子性， &lt;code&gt;atomic&lt;/code&gt; 禁用了一些API。尝试在 &lt;code&gt;atomic&lt;/code&gt; 块内提交，回滚或更改数据库连接的自动提交状态将引发异常。</target>
        </trans-unit>
        <trans-unit id="2d184cd5980dd60fc335a14a8588be38002eadd0" translate="yes" xml:space="preserve">
          <source>In order to guarantee that all &lt;code&gt;TestCase&lt;/code&gt; code starts with a clean database, the Django test runner reorders tests in the following way:</source>
          <target state="translated">为了确保所有 &lt;code&gt;TestCase&lt;/code&gt; 代码均以干净的数据库开头，Django测试运行器通过以下方式对测试进行重新排序：</target>
        </trans-unit>
        <trans-unit id="ebd5f1b685513a442ce3a791e86443cc357e3454" translate="yes" xml:space="preserve">
          <source>In order to handle this situation, you need to pass &lt;code&gt;handle_forward_references=True&lt;/code&gt; to &lt;code&gt;serializers.deserialize()&lt;/code&gt;. This will set the &lt;code&gt;deferred_fields&lt;/code&gt; attribute on the &lt;code&gt;DeserializedObject&lt;/code&gt; instances. You&amp;rsquo;ll need to keep track of &lt;code&gt;DeserializedObject&lt;/code&gt; instances where this attribute isn&amp;rsquo;t &lt;code&gt;None&lt;/code&gt; and later call &lt;code&gt;save_deferred_fields()&lt;/code&gt; on them.</source>
          <target state="translated">为了处理这种情况，您需要将 &lt;code&gt;handle_forward_references=True&lt;/code&gt; 传递给 &lt;code&gt;serializers.deserialize()&lt;/code&gt; 。这将在 &lt;code&gt;DeserializedObject&lt;/code&gt; 实例上设置 &lt;code&gt;deferred_fields&lt;/code&gt; 属性。您需要跟踪该属性不是 &lt;code&gt;None&lt;/code&gt; 的 &lt;code&gt;DeserializedObject&lt;/code&gt; 实例，然后在它们上调用 &lt;code&gt;save_deferred_fields()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8b2e79b4b6aa18a676e91499097aad9f8d4ed2dc" translate="yes" xml:space="preserve">
          <source>In order to make a Django project translatable, you have to add a minimal number of hooks to your Python code and templates. These hooks are called &lt;a href=&quot;index#term-translation-string&quot;&gt;translation strings&lt;/a&gt;. They tell Django: &amp;ldquo;This text should be translated into the end user&amp;rsquo;s language, if a translation for this text is available in that language.&amp;rdquo; It&amp;rsquo;s your responsibility to mark translatable strings; the system can only translate strings it knows about.</source>
          <target state="translated">为了使Django项目可翻译，您必须在Python代码和模板中添加最少数量的钩子。这些挂钩称为&lt;a href=&quot;index#term-translation-string&quot;&gt;翻译字符串&lt;/a&gt;。他们告诉Django：&amp;ldquo;如果可以使用该语言的翻译版本，则应将其翻译成最终用户的语言。&amp;rdquo; 标记可翻译字符串是您的责任；系统只能翻译它知道的字符串。</target>
        </trans-unit>
        <trans-unit id="fd427f482c454b8a176992fb9016a46f9519bd6a" translate="yes" xml:space="preserve">
          <source>In order to make error messages flexible and easy to override, consider the following guidelines:</source>
          <target state="translated">为了使错误信息灵活且易于覆盖,请考虑以下准则。</target>
        </trans-unit>
        <trans-unit id="4fbde88be4d3a61eb0fa9d81f26e60f25b7c967a" translate="yes" xml:space="preserve">
          <source>In order to meet the 30-char limitation Oracle has on table names, and match the usual conventions for Oracle databases, Django may shorten table names and turn them all-uppercase. To prevent such transformations, use a quoted name as the value for &lt;code&gt;db_table&lt;/code&gt;:</source>
          <target state="translated">为了满足Oracle对表名的30个字符的限制，并与Oracle数据库的常规约定匹配，Django可能会缩短表名并将它们全部大写。为防止此类转换，请使用带引号的名称作为 &lt;code&gt;db_table&lt;/code&gt; 的值：</target>
        </trans-unit>
        <trans-unit id="09f9a7ab0865d01d87a2c3387c4322fa09399408" translate="yes" xml:space="preserve">
          <source>In order to obtain a prepared geometry, access the &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.prepared&quot;&gt;&lt;code&gt;GEOSGeometry.prepared&lt;/code&gt;&lt;/a&gt; property. Once you have a &lt;code&gt;PreparedGeometry&lt;/code&gt; instance its spatial predicate methods, listed below, may be used with other &lt;code&gt;GEOSGeometry&lt;/code&gt; objects. An operation with a prepared geometry can be orders of magnitude faster &amp;ndash; the more complex the geometry that is prepared, the larger the speedup in the operation. For more information, please consult the &lt;a href=&quot;https://trac.osgeo.org/geos/wiki/PreparedGeometry&quot;&gt;GEOS wiki page on prepared geometries&lt;/a&gt;.</source>
          <target state="translated">为了获得准备好的几何图形，请访问&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.prepared&quot;&gt; &lt;code&gt;GEOSGeometry.prepared&lt;/code&gt; &lt;/a&gt;属性。有了 &lt;code&gt;PreparedGeometry&lt;/code&gt; 实例后，下面列出的其空间谓词方法可以与其他 &lt;code&gt;GEOSGeometry&lt;/code&gt; 对象一起使用。具有准备好的几何形状的操作可以快几个数量级&amp;ndash;准备的几何形状越复杂，操作的速度就越大。有关更多信息，请查阅&lt;a href=&quot;https://trac.osgeo.org/geos/wiki/PreparedGeometry&quot;&gt;有关准备好的几何图形&lt;/a&gt;的GEOS Wiki页面。</target>
        </trans-unit>
        <trans-unit id="197304082f996b82afb0836da69efaacaa7a04c7" translate="yes" xml:space="preserve">
          <source>In order to override one or more of them, first create an &lt;code&gt;admin&lt;/code&gt; directory in your project&amp;rsquo;s &lt;code&gt;templates&lt;/code&gt; directory. This can be any of the directories you specified in the &lt;a href=&quot;../../settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt; option of the &lt;code&gt;DjangoTemplates&lt;/code&gt; backend in the &lt;a href=&quot;../../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting. If you have customized the &lt;code&gt;'loaders'&lt;/code&gt; option, be sure &lt;code&gt;'django.template.loaders.filesystem.Loader'&lt;/code&gt; appears before &lt;code&gt;'django.template.loaders.app_directories.Loader'&lt;/code&gt; so that your custom templates will be found by the template loading system before those that are included with &lt;a href=&quot;#module-django.contrib.admin&quot;&gt;&lt;code&gt;django.contrib.admin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为了覆盖其中的一个或多个，首先在项目的 &lt;code&gt;templates&lt;/code&gt; 目录中创建一个 &lt;code&gt;admin&lt;/code&gt; 目录。这可以是任何你指定的目录中&lt;a href=&quot;../../settings#std:setting-TEMPLATES-DIRS&quot;&gt; &lt;code&gt;DIRS&lt;/code&gt; &lt;/a&gt;中的选项 &lt;code&gt;DjangoTemplates&lt;/code&gt; 在后端&lt;a href=&quot;../../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;设置。如果您已自定义 &lt;code&gt;'loaders'&lt;/code&gt; 选项，请确保在 &lt;code&gt;'django.template.loaders.filesystem.Loader'&lt;/code&gt; 之前出现 &lt;code&gt;'django.template.loaders.app_directories.Loader'&lt;/code&gt; 以便模板加载系统可以在此之前找到自定义模板。&lt;a href=&quot;#module-django.contrib.admin&quot;&gt; &lt;code&gt;django.contrib.admin&lt;/code&gt; &lt;/a&gt;附带的那些。</target>
        </trans-unit>
        <trans-unit id="6a3a6dec2c344fd808b8bba54d23e18d9e3ffaeb" translate="yes" xml:space="preserve">
          <source>In order to perform IP-based geolocation, the &lt;a href=&quot;#django.contrib.gis.geoip2.GeoIP2&quot;&gt;&lt;code&gt;GeoIP2&lt;/code&gt;&lt;/a&gt; object requires the &lt;a href=&quot;https://pypi.org/project/geoip2/&quot;&gt;geoip2 Python library&lt;/a&gt; and the GeoIP &lt;code&gt;Country&lt;/code&gt; and/or &lt;code&gt;City&lt;/code&gt;&lt;a href=&quot;https://dev.maxmind.com/geoip/geoip2/geolite2/&quot;&gt;datasets in binary format&lt;/a&gt; (the CSV files will not work!). Grab the &lt;code&gt;GeoLite2-Country.mmdb.gz&lt;/code&gt; and &lt;code&gt;GeoLite2-City.mmdb.gz&lt;/code&gt; files and unzip them in a directory corresponding to the &lt;a href=&quot;#std:setting-GEOIP_PATH&quot;&gt;&lt;code&gt;GEOIP_PATH&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">为了执行基于IP的地理定位，&lt;a href=&quot;#django.contrib.gis.geoip2.GeoIP2&quot;&gt; &lt;code&gt;GeoIP2&lt;/code&gt; &lt;/a&gt;对象需要使用&lt;a href=&quot;https://pypi.org/project/geoip2/&quot;&gt;geoip2 Python库&lt;/a&gt;以及&lt;a href=&quot;https://dev.maxmind.com/geoip/geoip2/geolite2/&quot;&gt;二进制格式&lt;/a&gt;的GeoIP &lt;code&gt;Country&lt;/code&gt; 和/或 &lt;code&gt;City&lt;/code&gt; 数据集（CSV文件将无法使用！）。抓住 &lt;code&gt;GeoLite2-Country.mmdb.gz&lt;/code&gt; 和 &lt;code&gt;GeoLite2-City.mmdb.gz&lt;/code&gt; 文件，并将其解压缩到对应的目录&lt;a href=&quot;#std:setting-GEOIP_PATH&quot;&gt; &lt;code&gt;GEOIP_PATH&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="95a595d960799ba8b0ca87e797be6ea493f08f8d" translate="yes" xml:space="preserve">
          <source>In order to perform URL reversing, you&amp;rsquo;ll need to use &lt;strong&gt;named URL patterns&lt;/strong&gt; as done in the examples above. The string used for the URL name can contain any characters you like. You are not restricted to valid Python names.</source>
          <target state="translated">为了执行URL反向，您需要像上面的示例一样使用&lt;strong&gt;命名的URL模式&lt;/strong&gt;。URL名称使用的字符串可以包含您喜欢的任何字符。您不限于有效的Python名称。</target>
        </trans-unit>
        <trans-unit id="f9fa15e76160b1b71f6b34374f375a88fa1840a3" translate="yes" xml:space="preserve">
          <source>In order to protect against &lt;a href=&quot;http://breachattack.com/&quot;&gt;BREACH&lt;/a&gt; attacks, the token is not simply the secret; a random mask is prepended to the secret and used to scramble it.</source>
          <target state="translated">为了防止&lt;a href=&quot;http://breachattack.com/&quot;&gt;遭到BREACH&lt;/a&gt;攻击，令牌不仅仅是秘密。秘密之前会放一个随机掩码，并用来加扰。</target>
        </trans-unit>
        <trans-unit id="6a68fede8724820357864706cab00502d65622e6" translate="yes" xml:space="preserve">
          <source>In order to protect against &lt;a href=&quot;http://breachattack.com/&quot;&gt;BREACH&lt;/a&gt; attacks, the token is not simply the secret; a random salt is prepended to the secret and used to scramble it.</source>
          <target state="translated">为了防止&lt;a href=&quot;http://breachattack.com/&quot;&gt;遭到BREACH&lt;/a&gt;攻击，令牌不仅仅是秘密。随机盐会添加到该秘密中并用于加扰。</target>
        </trans-unit>
        <trans-unit id="655aa485065fe0aea8855d7ccc45fba32956ce48" translate="yes" xml:space="preserve">
          <source>In order to resolve this ticket, we&amp;rsquo;ll add a &lt;code&gt;make_toast()&lt;/code&gt; function to the top-level &lt;code&gt;django&lt;/code&gt; module. First we are going to write a test that tries to use the function and check that its output looks correct.</source>
          <target state="translated">为了解决这个问题，我们将在顶层 &lt;code&gt;django&lt;/code&gt; 模块中添加一个 &lt;code&gt;make_toast()&lt;/code&gt; 函数。首先，我们将编写一个尝试使用该函数并测试其输出看起来正确的测试。</target>
        </trans-unit>
        <trans-unit id="f0a5f481c3502942e7d16bcd7a3cc304c2eefa6a" translate="yes" xml:space="preserve">
          <source>In order to restore the database state between tests for &lt;code&gt;TransactionTestCase&lt;/code&gt;s and database backends without transactions, Django will &lt;a href=&quot;../topics/testing/overview#test-case-serialized-rollback&quot;&gt;serialize the contents of all apps&lt;/a&gt; when it starts the test run so it can then reload from that copy before running tests that need it.</source>
          <target state="translated">为了在没有事务的情况下恢复 &lt;code&gt;TransactionTestCase&lt;/code&gt; 的测试和数据库后端之间的数据库状态，Django将在开始测试运行时&lt;a href=&quot;../topics/testing/overview#test-case-serialized-rollback&quot;&gt;对所有应用程序的内容进行序列化，&lt;/a&gt;以便在运行需要它的测试之前可以从该副本中重新加载。</target>
        </trans-unit>
        <trans-unit id="f0343766ff0b17d92d018f4427983d376ae25e60" translate="yes" xml:space="preserve">
          <source>In order to send email, Django requires a few settings telling it how to connect to your mail server. At the very least, you&amp;rsquo;ll need to specify &lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST&quot;&gt;&lt;code&gt;EMAIL_HOST&lt;/code&gt;&lt;/a&gt; and possibly &lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST_USER&quot;&gt;&lt;code&gt;EMAIL_HOST_USER&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST_PASSWORD&quot;&gt;&lt;code&gt;EMAIL_HOST_PASSWORD&lt;/code&gt;&lt;/a&gt;, though other settings may be also required depending on your mail server&amp;rsquo;s configuration. Consult &lt;a href=&quot;../ref/settings&quot;&gt;the Django settings documentation&lt;/a&gt; for a full list of email-related settings.</source>
          <target state="translated">为了发送电子邮件，Django需要一些设置来告诉它如何连接到您的邮件服务器。最起码，你需要指定&lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST&quot;&gt; &lt;code&gt;EMAIL_HOST&lt;/code&gt; &lt;/a&gt;并可能&lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST_USER&quot;&gt; &lt;code&gt;EMAIL_HOST_USER&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST_PASSWORD&quot;&gt; &lt;code&gt;EMAIL_HOST_PASSWORD&lt;/code&gt; &lt;/a&gt;，但其他设置可能会根据您的邮件服务器的配置中也是必需的。有关&lt;a href=&quot;../ref/settings&quot;&gt;与&lt;/a&gt;电子邮件相关的设置的完整列表，请参阅Django设置文档。</target>
        </trans-unit>
        <trans-unit id="26a276856b644a8829e847fabc786f7f950cbafe" translate="yes" xml:space="preserve">
          <source>In order to serialize objects other than &lt;code&gt;dict&lt;/code&gt; you must set the &lt;code&gt;safe&lt;/code&gt; parameter to &lt;code&gt;False&lt;/code&gt;:</source>
          <target state="translated">为了序列 &lt;code&gt;dict&lt;/code&gt; 之外的对象，必须将 &lt;code&gt;safe&lt;/code&gt; 参数设置为 &lt;code&gt;False&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="bef01765dc926124667e6f25f418d12592815fda" translate="yes" xml:space="preserve">
          <source>In order to serve different sites in production, you&amp;rsquo;d create a separate settings file with each &lt;code&gt;SITE_ID&lt;/code&gt; (perhaps importing from a common settings file to avoid duplicating shared settings) and then specify the appropriate &lt;a href=&quot;../../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt; for each site.</source>
          <target state="translated">为了在生产中为不同的站点提供服务，您将使用每个 &lt;code&gt;SITE_ID&lt;/code&gt; 创建一个单独的设置文件（也许从一个公共设置文件导入以避免重复的共享设置），然后为每个站点指定适当的&lt;a href=&quot;../../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f1fc64af07066814f008513d76447706a68a9ba2" translate="yes" xml:space="preserve">
          <source>In order to show customized HTML when Django returns a 404, you can create an HTML template named &lt;code&gt;404.html&lt;/code&gt; and place it in the top level of your template tree. This template will then be served when &lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">为了在Django返回404时显示自定义HTML，您可以创建一个名为 &lt;code&gt;404.html&lt;/code&gt; 的HTML模板并将其放在模板树的顶层。当&lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;False&lt;/code&gt; 时，将提供此模板。</target>
        </trans-unit>
        <trans-unit id="3409046afa59c093b23889795e8442232cd66efe" translate="yes" xml:space="preserve">
          <source>In order to test class-based views outside of the request/response cycle you must ensure that they are configured correctly, by calling &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.setup&quot;&gt;&lt;code&gt;setup()&lt;/code&gt;&lt;/a&gt; after instantiation.</source>
          <target state="translated">为了在请求/响应周期之外测试基于类的视图，必须通过在实例化后调用&lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.setup&quot;&gt; &lt;code&gt;setup()&lt;/code&gt; &lt;/a&gt;来确保已正确配置它们。</target>
        </trans-unit>
        <trans-unit id="8c0c7c490993a4b8206ebaa2bae3d78e513a3e92" translate="yes" xml:space="preserve">
          <source>In order to understand what happens in your query, consider inspecting the &lt;code&gt;query&lt;/code&gt; property of your &lt;code&gt;QuerySet&lt;/code&gt;.</source>
          <target state="translated">为了了解查询中会发生什么，请考虑检查 &lt;code&gt;QuerySet&lt;/code&gt; 的 &lt;code&gt;query&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="9facaa9d27d78e8f0b3bd821362b17138f116cfc" translate="yes" xml:space="preserve">
          <source>In order to use GeoDjango, you will need to add your OSGeo4W directories to your Windows system &lt;code&gt;Path&lt;/code&gt;, as well as create &lt;code&gt;GDAL_DATA&lt;/code&gt; and &lt;code&gt;PROJ_LIB&lt;/code&gt; environment variables. The following set of commands, executable with &lt;code&gt;cmd.exe&lt;/code&gt;, will set this up. Restart your device once this is complete for new environment variables to be recognized:</source>
          <target state="translated">为了使用GeoDjango，您需要将OSGeo4W目录添加到Windows系统 &lt;code&gt;Path&lt;/code&gt; ，并创建 &lt;code&gt;GDAL_DATA&lt;/code&gt; 和 &lt;code&gt;PROJ_LIB&lt;/code&gt; 环境变量。下面的命令集（可使用 &lt;code&gt;cmd.exe&lt;/code&gt; 执行）将对其进行设置。完成此操作后，重新启动设备以识别新的环境变量：</target>
        </trans-unit>
        <trans-unit id="c570b617951053ed3053b9d4c9a52cb627915e3e" translate="yes" xml:space="preserve">
          <source>In order to use GeoDjango, you will need to add your Python and OSGeo4W directories to your Windows system &lt;code&gt;Path&lt;/code&gt;, as well as create &lt;code&gt;GDAL_DATA&lt;/code&gt; and &lt;code&gt;PROJ_LIB&lt;/code&gt; environment variables. The following set of commands, executable with &lt;code&gt;cmd.exe&lt;/code&gt;, will set this up:</source>
          <target state="translated">为了使用GeoDjango，您需要将Python和OSGeo4W目录添加到Windows系统 &lt;code&gt;Path&lt;/code&gt; ，并创建 &lt;code&gt;GDAL_DATA&lt;/code&gt; 和 &lt;code&gt;PROJ_LIB&lt;/code&gt; 环境变量。以下命令集（可使用 &lt;code&gt;cmd.exe&lt;/code&gt; 执行）将对此进行设置：</target>
        </trans-unit>
        <trans-unit id="ded6a8537ff07979ac6a5c88d86c82670bed0de7" translate="yes" xml:space="preserve">
          <source>In order to use another client-side library to handle translations, you may want to take advantage of the &lt;code&gt;JSONCatalog&lt;/code&gt; view. It&amp;rsquo;s similar to &lt;a href=&quot;#django.views.i18n.JavaScriptCatalog&quot;&gt;&lt;code&gt;JavaScriptCatalog&lt;/code&gt;&lt;/a&gt; but returns a JSON response.</source>
          <target state="translated">为了使用另一个客户端库来处理翻译，您可能需要利用 &lt;code&gt;JSONCatalog&lt;/code&gt; 视图。它类似于&lt;a href=&quot;#django.views.i18n.JavaScriptCatalog&quot;&gt; &lt;code&gt;JavaScriptCatalog&lt;/code&gt; ,&lt;/a&gt;但返回JSON响应。</target>
        </trans-unit>
        <trans-unit id="68a8c6184d43fa10d946434ba4ead136463b3827" translate="yes" xml:space="preserve">
          <source>In order to use the &lt;code&gt;Hand&lt;/code&gt; class in our models, we &lt;strong&gt;do not&lt;/strong&gt; have to change this class at all. This is ideal, because it means you can easily write model support for existing classes where you cannot change the source code.</source>
          <target state="translated">为了在我们的模型中使用 &lt;code&gt;Hand&lt;/code&gt; 类，我们&lt;strong&gt;根本不必&lt;/strong&gt;更改此类。这是理想的，因为这意味着您可以轻松地为无法更改源代码的现有类编写模型支持。</target>
        </trans-unit>
        <trans-unit id="482b7e02eb0c4ca18c3f11eba075a9c3cbab0ed5" translate="yes" xml:space="preserve">
          <source>In other words, if you set the name of the database in &lt;a href=&quot;settings#std:setting-OPTIONS&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt;, this will take precedence over &lt;a href=&quot;settings#std:setting-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt;, which would override anything in a &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/option-files.html&quot;&gt;MySQL option file&lt;/a&gt;.</source>
          <target state="translated">换句话说，如果您在&lt;a href=&quot;settings#std:setting-OPTIONS&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; 中&lt;/a&gt;设置数据库的名称，它将优先于&lt;a href=&quot;settings#std:setting-NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt;，后者将覆盖&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/option-files.html&quot;&gt;MySQL选项文件中的所有内容&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c32fe5f982b37fbd0b904bf96aa32ce7df76d8e2" translate="yes" xml:space="preserve">
          <source>In other words, the usual use is to examine the deserialized objects to make sure that they are &amp;ldquo;appropriate&amp;rdquo; for saving before doing so. If you trust your data source you can instead save the object directly and move on.</source>
          <target state="translated">换句话说，通常的用途是检查反序列化的对象，以确保它们在保存之前&amp;ldquo;适合&amp;rdquo;保存。如果您信任数据源，则可以直接保存对象然后继续。</target>
        </trans-unit>
        <trans-unit id="348e74db786d501ec367bbeb95b86df85b7e5a62" translate="yes" xml:space="preserve">
          <source>In other words, the usual use is to examine the deserialized objects to make sure that they are &amp;ldquo;appropriate&amp;rdquo; for saving before doing so. Of course, if you trust your data source you can instead save the object directly and move on.</source>
          <target state="translated">换句话说，通常的用途是在进行反序列化的对象之前检查它们，以确保它们&amp;ldquo;适合&amp;rdquo;保存。当然，如果您信任数据源，则可以直接保存对象然后继续。</target>
        </trans-unit>
        <trans-unit id="87a0055fdb9b686309bb27e57a048438c7379179" translate="yes" xml:space="preserve">
          <source>In other words, to override a command, the new command must have the same name and its app must be before the overridden command&amp;rsquo;s app in &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">换句话说，要覆盖命令，新命令必须具有相同的名称，并且其应用必须在&lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 中&lt;/a&gt;被覆盖的命令的应用之前。</target>
        </trans-unit>
        <trans-unit id="b80ed963edad5d68b67324a7f70c9b908485886a" translate="yes" xml:space="preserve">
          <source>In other words, what&amp;rsquo;s needed is a DRY mechanism. Among other advantages it would allow evolution of the URL design without having to go over all the project source code to search and replace outdated URLs.</source>
          <target state="translated">换句话说，需要一种DRY机制。除其他优点外，它还允许URL设计的发展，而不必遍历所有项目源代码来搜索和替换过时的URL。</target>
        </trans-unit>
        <trans-unit id="321459efe8129cd478ea12c0e5f6183e07ff2a01" translate="yes" xml:space="preserve">
          <source>In other words, your applications&amp;rsquo; root packages and the modules that define your application configuration classes shouldn&amp;rsquo;t import any models, even indirectly.</source>
          <target state="translated">换句话说，应用程序的根包和定义应用程序配置类的模块不应导入任何模型，即使是间接导入的模型也不应。</target>
        </trans-unit>
        <trans-unit id="87949143eea93ab9a8d8bacabc4b969b2cd76026" translate="yes" xml:space="preserve">
          <source>In our &lt;code&gt;HandField&lt;/code&gt; class, we&amp;rsquo;re storing the data as a VARCHAR field in the database, so we need to be able to process strings and &lt;code&gt;None&lt;/code&gt; in the &lt;code&gt;from_db_value()&lt;/code&gt;. In &lt;code&gt;to_python()&lt;/code&gt;, we need to also handle &lt;code&gt;Hand&lt;/code&gt; instances:</source>
          <target state="translated">在我们 &lt;code&gt;HandField&lt;/code&gt; 节课，我们将数据存储在数据库中的VARCHAR字段，所以我们需要能够处理字符串，并 &lt;code&gt;None&lt;/code&gt; 在 &lt;code&gt;from_db_value()&lt;/code&gt; 。在 &lt;code&gt;to_python()&lt;/code&gt; 中，我们还需要处理 &lt;code&gt;Hand&lt;/code&gt; 实例：</target>
        </trans-unit>
        <trans-unit id="8ec59e4ab401ce0ece29fca3cb173154f5ebfc03" translate="yes" xml:space="preserve">
          <source>In our example, we&amp;rsquo;ll call our field &lt;code&gt;HandField&lt;/code&gt;. (It&amp;rsquo;s a good idea to call your &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; subclass &lt;code&gt;&amp;lt;Something&amp;gt;Field&lt;/code&gt;, so it&amp;rsquo;s easily identifiable as a &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; subclass.) It doesn&amp;rsquo;t behave like any existing field, so we&amp;rsquo;ll subclass directly from &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">在我们的示例中，我们将其称为字段 &lt;code&gt;HandField&lt;/code&gt; 。（将&lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;子类称为 &lt;code&gt;&amp;lt;Something&amp;gt;Field&lt;/code&gt; 是一个好主意，因此可以很容易地将其标识为&lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;子类。）它的行为不像任何现有字段，因此我们将直接从&lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; 进行&lt;/a&gt;子类化：</target>
        </trans-unit>
        <trans-unit id="200d03f759a98a5f63a0cca6040dab99cbf456aa" translate="yes" xml:space="preserve">
          <source>In our first test, we focused closely on the internal behavior of the code. For this test, we want to check its behavior as it would be experienced by a user through a web browser.</source>
          <target state="translated">在第一个测试中,我们密切关注代码的内部行为。在这个测试中,我们想检查它的行为,就像用户通过网络浏览器所体验到的那样。</target>
        </trans-unit>
        <trans-unit id="be3f232c87c2467fa6a724407cf4bb950c14ef61" translate="yes" xml:space="preserve">
          <source>In our poll app, we&amp;rsquo;ll create two models: &lt;code&gt;Question&lt;/code&gt; and &lt;code&gt;Choice&lt;/code&gt;. A &lt;code&gt;Question&lt;/code&gt; has a question and a publication date. A &lt;code&gt;Choice&lt;/code&gt; has two fields: the text of the choice and a vote tally. Each &lt;code&gt;Choice&lt;/code&gt; is associated with a &lt;code&gt;Question&lt;/code&gt;.</source>
          <target state="translated">在我们的民意调查应用程序中，我们将创建两个模型： &lt;code&gt;Question&lt;/code&gt; 和 &lt;code&gt;Choice&lt;/code&gt; 。一个 &lt;code&gt;Question&lt;/code&gt; 有一个问题和出版日期。&amp;ldquo; &lt;code&gt;Choice&lt;/code&gt; 有两个字段：选择的文本和投票提示。每个 &lt;code&gt;Choice&lt;/code&gt; 都与一个 &lt;code&gt;Question&lt;/code&gt; 相关联。</target>
        </trans-unit>
        <trans-unit id="8c9571e16932b147d1f1c8511a5d04504310d27a" translate="yes" xml:space="preserve">
          <source>In our poll application, we&amp;rsquo;ll have the following four views:</source>
          <target state="translated">在我们的民意调查应用程序中，我们将具有以下四个视图：</target>
        </trans-unit>
        <trans-unit id="bf972e12a966ca6c6eecb8fe6283423f8ce689ac" translate="yes" xml:space="preserve">
          <source>In practice you&amp;rsquo;d probably want to record the interest in a key-value store rather than in a relational database, so we&amp;rsquo;ve left that bit out. The only bit of the view that needs to worry about using &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt; is where we want to look up the author we&amp;rsquo;re interested in, which it does with a call to &lt;code&gt;self.get_object()&lt;/code&gt;. Everything else is taken care of for us by the mixin.</source>
          <target state="translated">实际上，您可能希望将兴趣记录在键值存储中，而不是关系数据库中，因此我们省略了这一点。该视图中唯一需要担心使用&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt; &lt;code&gt;SingleObjectMixin&lt;/code&gt; &lt;/a&gt;的地方是我们要查找感兴趣的作者的地方，它通过调用 &lt;code&gt;self.get_object()&lt;/code&gt; 来完成。mixin会为我们处理其他所有事务。</target>
        </trans-unit>
        <trans-unit id="f5a8cc8880a64d6f073c4d7908bd6dba8d796910" translate="yes" xml:space="preserve">
          <source>In practice you&amp;rsquo;ll use this to get a string you can use in multiple places in a template or so you can use the output as an argument for other template tags or filters.</source>
          <target state="translated">在实践中，您将使用它来获取可在模板中的多个位置使用的字符串，或者将输出用作其他模板标签或过滤器的参数。</target>
        </trans-unit>
        <trans-unit id="b07696c8063df15fbf4c588d34e006df6dbe3901" translate="yes" xml:space="preserve">
          <source>In practice you&amp;rsquo;ll use this to get a string you can use in multiple places in a template or so you can use the output as an argument for other template tags or filters:</source>
          <target state="translated">在实践中，您将使用它来获取可在模板中的多个位置使用的字符串，或将输出用作其他模板标签或过滤器的参数：</target>
        </trans-unit>
        <trans-unit id="d297ccfa88b8ebaa61778e3119442058ee0cb9c0" translate="yes" xml:space="preserve">
          <source>In practice, it&amp;rsquo;s often easiest to use &lt;code&gt;chunks()&lt;/code&gt; all the time. Looping over &lt;code&gt;chunks()&lt;/code&gt; instead of using &lt;code&gt;read()&lt;/code&gt; ensures that large files don&amp;rsquo;t overwhelm your system&amp;rsquo;s memory.</source>
          <target state="translated">在实践中，通常总是最容易使用 &lt;code&gt;chunks()&lt;/code&gt; 。循环使用 &lt;code&gt;chunks()&lt;/code&gt; 而不是使用 &lt;code&gt;read()&lt;/code&gt; 可确保大文件不会淹没您系统的内存。</target>
        </trans-unit>
        <trans-unit id="1b8e788eb6f744c88e1daabbf412406627452a09" translate="yes" xml:space="preserve">
          <source>In practice, signal handlers are usually defined in a &lt;code&gt;signals&lt;/code&gt; submodule of the application they relate to. Signal receivers are connected in the &lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;ready()&lt;/code&gt;&lt;/a&gt; method of your application configuration class. If you&amp;rsquo;re using the &lt;a href=&quot;#django.dispatch.receiver&quot;&gt;&lt;code&gt;receiver()&lt;/code&gt;&lt;/a&gt; decorator, import the &lt;code&gt;signals&lt;/code&gt; submodule inside &lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;ready()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">实际上，信号处理程序通常是在与之相关的应用程序的 &lt;code&gt;signals&lt;/code&gt; 子模块中定义的。信号接收器连接在应用程序配置类的&lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt; &lt;code&gt;ready()&lt;/code&gt; &lt;/a&gt;方法中。如果您使用的是&lt;a href=&quot;#django.dispatch.receiver&quot;&gt; &lt;code&gt;receiver()&lt;/code&gt; &lt;/a&gt;装饰器，则将 &lt;code&gt;signals&lt;/code&gt; 子模块导入&lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt; &lt;code&gt;ready()&lt;/code&gt; 内&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e303b3791ba00ba2f2730c84ffcba41b1b0fece" translate="yes" xml:space="preserve">
          <source>In practice, this feature wraps every view function in the &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; decorator described below.</source>
          <target state="translated">实际上，此功能将每个视图函数包装在下面描述的&lt;a href=&quot;#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt;装饰器中。</target>
        </trans-unit>
        <trans-unit id="807d6a79df3e61ec95aafb0098dd4efac1e3da72" translate="yes" xml:space="preserve">
          <source>In practice, this is rarely an issue. Django gives you aware datetime objects in the models and forms, and most often, new datetime objects are created from existing ones through &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; arithmetic. The only datetime that&amp;rsquo;s often created in application code is the current time, and &lt;a href=&quot;../../ref/utils#django.utils.timezone.now&quot;&gt;&lt;code&gt;timezone.now()&lt;/code&gt;&lt;/a&gt; automatically does the right thing.</source>
          <target state="translated">实际上，这很少是一个问题。Django在模型和表单中为您提供了明显的datetime对象，并且最常见的是，新的datetime对象是通过&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;算法从现有对象中创建的。通常在应用程序代码中创建的唯一日期时间是当前时间，并且&lt;a href=&quot;../../ref/utils#django.utils.timezone.now&quot;&gt; &lt;code&gt;timezone.now()&lt;/code&gt; &lt;/a&gt;自动执行正确的操作。</target>
        </trans-unit>
        <trans-unit id="b637ff00ea296f5217d7753924c94e2a84bd6acf" translate="yes" xml:space="preserve">
          <source>In practice, you probably won&amp;rsquo;t need to use &lt;a href=&quot;#django.contrib.auth.models.AnonymousUser&quot;&gt;&lt;code&gt;AnonymousUser&lt;/code&gt;&lt;/a&gt; objects on your own, but they&amp;rsquo;re used by Web requests, as explained in the next section.</source>
          <target state="translated">实际上，您可能不需要自己使用&lt;a href=&quot;#django.contrib.auth.models.AnonymousUser&quot;&gt; &lt;code&gt;AnonymousUser&lt;/code&gt; &lt;/a&gt;对象，但是Web请求将使用它们，如下一节所述。</target>
        </trans-unit>
        <trans-unit id="05f63b699e28cf435f1bb4b69860a1d658a1a201" translate="yes" xml:space="preserve">
          <source>In practice, you will usually specify &lt;code&gt;request.FILES&lt;/code&gt; as the source of file data (just like you use &lt;code&gt;request.POST&lt;/code&gt; as the source of form data):</source>
          <target state="translated">实际上，通常会指定 &lt;code&gt;request.FILES&lt;/code&gt; 作为文件数据的源（就像您将 &lt;code&gt;request.POST&lt;/code&gt; 作为表单数据的源一样）：</target>
        </trans-unit>
        <trans-unit id="b18791ebd38e85110f995871c6815d3b19ab08ca" translate="yes" xml:space="preserve">
          <source>In previous parts of the tutorial, the templates have been provided with a context that contains the &lt;code&gt;question&lt;/code&gt; and &lt;code&gt;latest_question_list&lt;/code&gt; context variables. For &lt;code&gt;DetailView&lt;/code&gt; the &lt;code&gt;question&lt;/code&gt; variable is provided automatically &amp;ndash; since we&amp;rsquo;re using a Django model (&lt;code&gt;Question&lt;/code&gt;), Django is able to determine an appropriate name for the context variable. However, for ListView, the automatically generated context variable is &lt;code&gt;question_list&lt;/code&gt;. To override this we provide the &lt;code&gt;context_object_name&lt;/code&gt; attribute, specifying that we want to use &lt;code&gt;latest_question_list&lt;/code&gt; instead. As an alternative approach, you could change your templates to match the new default context variables &amp;ndash; but it&amp;rsquo;s a lot easier to tell Django to use the variable you want.</source>
          <target state="translated">在本教程的前面部分中，已为模板提供了一个上下文，该上下文包含 &lt;code&gt;question&lt;/code&gt; 和 &lt;code&gt;latest_question_list&lt;/code&gt; 上下文变量。对于 &lt;code&gt;DetailView&lt;/code&gt; ,将自动提供 &lt;code&gt;question&lt;/code&gt; 变量-由于我们使用的是Django模型（ &lt;code&gt;Question&lt;/code&gt; ），因此Django能够为上下文变量确定适当的名称。但是，对于ListView，自动生成的上下文变量是 &lt;code&gt;question_list&lt;/code&gt; 。要覆盖此内容，我们提供 &lt;code&gt;context_object_name&lt;/code&gt; 属性，指定我们要使用 &lt;code&gt;latest_question_list&lt;/code&gt; 代替。作为一种替代方法，您可以更改模板以匹配新的默认上下文变量，但是告诉Django使用所需的变量要容易得多。</target>
        </trans-unit>
        <trans-unit id="1f6f3aa09d467d54d4f032943cbd599296ba5ef5" translate="yes" xml:space="preserve">
          <source>In previous versions of Django, it was necessary to first annotate and then filter against the annotation. This resulted in the annotated value always being present in the query result, and often resulted in a query that took more time to execute.</source>
          <target state="translated">在以前的Django版本中,需要先进行注释,然后根据注释进行过滤。这导致注解的值总是出现在查询结果中,往往导致查询的执行时间增加。</target>
        </trans-unit>
        <trans-unit id="857c7ad4641da7dfb7c6325f24baaa53cf1e388e" translate="yes" xml:space="preserve">
          <source>In short, when multiple simultaneous requests from the same client are involved, messages are not guaranteed to be delivered to the same window that created them nor, in some cases, at all. Note that this is typically not a problem in most applications and will become a non-issue in HTML5, where each window/tab will have its own browsing context.</source>
          <target state="translated">简而言之,当涉及来自同一客户端的多个同步请求时,不能保证将消息传递到创建这些请求的同一个窗口,在某些情况下,也不能保证将消息传递到所有窗口。请注意,这在大多数应用程序中通常不是问题,在 HTML5 中,这将成为一个非问题,因为在 HTML5 中,每个窗口/标签都有自己的浏览上下文。</target>
        </trans-unit>
        <trans-unit id="c1af56e92f61b1b8ed524de14c455aa50b0aab85" translate="yes" xml:space="preserve">
          <source>In some cases you may wish to dynamically change which &lt;code&gt;Transform&lt;/code&gt; or &lt;code&gt;Lookup&lt;/code&gt; is returned based on the name passed in, rather than fixing it. As an example, you could have a field which stores coordinates or an arbitrary dimension, and wish to allow a syntax like &lt;code&gt;.filter(coords__x7=4)&lt;/code&gt; to return the objects where the 7th coordinate has value 4. In order to do this, you would override &lt;code&gt;get_lookup&lt;/code&gt; with something like:</source>
          <target state="translated">在某些情况下，您可能希望根据传入的名称动态更改返回的&amp;ldquo; &lt;code&gt;Transform&lt;/code&gt; 或&amp;ldquo; &lt;code&gt;Lookup&lt;/code&gt; ，而不是对其进行修复。例如，您可能有一个存储坐标或任意维度的字段，并且希望允许 &lt;code&gt;.filter(coords__x7=4)&lt;/code&gt; 之类的语法返回第7个坐标值为4的对象。为此，您可以将使用类似以下内容覆盖 &lt;code&gt;get_lookup&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5fdef86b13548e606f863fbd8e30806d3a23d8c0" translate="yes" xml:space="preserve">
          <source>In some cases you might want to capture the result of &lt;code&gt;widthratio&lt;/code&gt; in a variable. It can be useful, for instance, in a &lt;a href=&quot;../../topics/i18n/translation#std:templatetag-blocktrans&quot;&gt;&lt;code&gt;blocktrans&lt;/code&gt;&lt;/a&gt; like this:</source>
          <target state="translated">在某些情况下，您可能想在一个变量中捕获 &lt;code&gt;widthratio&lt;/code&gt; 的结果。例如，在如下所示的&lt;a href=&quot;../../topics/i18n/translation#std:templatetag-blocktrans&quot;&gt; &lt;code&gt;blocktrans&lt;/code&gt; 中&lt;/a&gt;它可能是有用的：</target>
        </trans-unit>
        <trans-unit id="a257d0b779896788b6d556ab5da17e01cbe8ff48" translate="yes" xml:space="preserve">
          <source>In some cases you might want to capture the result of &lt;code&gt;widthratio&lt;/code&gt; in a variable. It can be useful, for instance, in a &lt;a href=&quot;../../topics/i18n/translation#std:templatetag-blocktranslate&quot;&gt;&lt;code&gt;blocktranslate&lt;/code&gt;&lt;/a&gt; like this:</source>
          <target state="translated">在某些情况下，您可能想在一个变量中捕获 &lt;code&gt;widthratio&lt;/code&gt; 的结果。例如，在这样的&lt;a href=&quot;../../topics/i18n/translation#std:templatetag-blocktranslate&quot;&gt; &lt;code&gt;blocktranslate&lt;/code&gt; &lt;/a&gt;它可能会很有用：</target>
        </trans-unit>
        <trans-unit id="1b575c3528640df48c24349d84fecc89450e51b0" translate="yes" xml:space="preserve">
          <source>In some cases you might want to refer to the current value of a cycle without advancing to the next value. To do this, give the &lt;code&gt;{% cycle %}&lt;/code&gt; tag a name, using &amp;ldquo;as&amp;rdquo;, like this:</source>
          <target state="translated">在某些情况下，您可能希望引用循环的当前值而不前进到下一个值。为此，请使用 &lt;code&gt;{% cycle %}&lt;/code&gt; as&amp;ldquo; 为{％cycle％}标签命名，如下所示：</target>
        </trans-unit>
        <trans-unit id="29c5cbea71be2c58cfaf5424459023b0c9686745" translate="yes" xml:space="preserve">
          <source>In some cases, such as strings with a percent sign followed by a space and a &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#old-string-formatting&quot;&gt;string conversion type&lt;/a&gt; (e.g. &lt;code&gt;_(&quot;10% interest&quot;)&lt;/code&gt;), &lt;a href=&quot;../../ref/utils#django.utils.translation.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; incorrectly flags strings with &lt;code&gt;python-format&lt;/code&gt;.</source>
          <target state="translated">在某些情况下，例如带百分号，空格和&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#old-string-formatting&quot;&gt;字符串转换类型&lt;/a&gt;的字符串（例如 &lt;code&gt;_(&quot;10% interest&quot;)&lt;/code&gt; ），&lt;a href=&quot;../../ref/utils#django.utils.translation.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;错误地标记了 &lt;code&gt;python-format&lt;/code&gt; 字符串。</target>
        </trans-unit>
        <trans-unit id="99af10ea50e91cf8913d1a5d12cadaa7cb6b9da2" translate="yes" xml:space="preserve">
          <source>In some cases, you might want to bypass the &lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-3&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt; environment variable. For example, if you&amp;rsquo;re using the template system by itself, you likely don&amp;rsquo;t want to have to set up an environment variable pointing to a settings module.</source>
          <target state="translated">在某些情况下，您可能希望绕过&lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-3&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt;环境变量。例如，如果您单独使用模板系统，则可能不需要设置指向设置模块的环境变量。</target>
        </trans-unit>
        <trans-unit id="0daf50f8b596a24cd4a4b70959499e29894a58dc" translate="yes" xml:space="preserve">
          <source>In some cases, you might want to bypass the &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; environment variable. For example, if you&amp;rsquo;re using the template system by itself, you likely don&amp;rsquo;t want to have to set up an environment variable pointing to a settings module.</source>
          <target state="translated">在某些情况下，您可能希望绕过 &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; 环境变量。例如，如果您单独使用模板系统，则可能不需要设置指向设置模块的环境变量。</target>
        </trans-unit>
        <trans-unit id="8dbcdb94c1eff87b6c56ef91c1c4506628f40cf0" translate="yes" xml:space="preserve">
          <source>In some cases, you won&amp;rsquo;t need to register your check function &amp;ndash; you can piggyback on an existing registration.</source>
          <target state="translated">在某些情况下，您不需要注册检查功能-您可以搭载现有的注册。</target>
        </trans-unit>
        <trans-unit id="9070909be04c420a9eba7d62728aece4ca6ac3a2" translate="yes" xml:space="preserve">
          <source>In some circumstances, the code connecting receivers to signals may run multiple times. This can cause your receiver function to be registered more than once, and thus called as many times for a signal event. For example, the &lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;ready()&lt;/code&gt;&lt;/a&gt; method may be executed more than once during testing. More generally, this occurs everywhere your project imports the module where you define the signals, because signal registration runs as many times as it is imported.</source>
          <target state="translated">在某些情况下，将接收器连接到信号的代码可能会运行多次。这可能会导致您的接收器功能被多次注册，因此对于信号事件将被多次调用。例如，&lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt; &lt;code&gt;ready()&lt;/code&gt; &lt;/a&gt;方法可以在测试期间执行多次。更一般而言，这会在您的项目导入定义信号的模块的任何地方发生，因为信号注册运行的次数与导入的次数相同。</target>
        </trans-unit>
        <trans-unit id="8a2f86e668a97029be624ec47a33ad2137608e0e" translate="yes" xml:space="preserve">
          <source>In some circumstances, the code connecting receivers to signals may run multiple times. This can cause your receiver function to be registered more than once, and thus called multiple times for a single signal event.</source>
          <target state="translated">在某些情况下,连接接收器和信号的代码可能会运行多次。这可能会导致你的接收器函数被注册一次以上,从而对一个信号事件进行多次调用。</target>
        </trans-unit>
        <trans-unit id="79d711a83ce7a924bc3594bf29585bfc7129050d" translate="yes" xml:space="preserve">
          <source>In some complex data-modeling situations, your models might contain a lot of fields, some of which could contain a lot of data (for example, text fields), or require expensive processing to convert them to Python objects. If you are using the results of a queryset in some situation where you don&amp;rsquo;t know if you need those particular fields when you initially fetch the data, you can tell Django not to retrieve them from the database.</source>
          <target state="translated">在某些复杂的数据建模情况下，您的模型可能包含很多字段，其中一些字段可能包含很多数据（例如，文本字段），或者需要昂贵的处理才能将它们转换为Python对象。如果您在某些情况下使用查询集的结果，而这些情况在您最初获取数据时不知道是否需要这些特定字段，则可以告诉Django不要从数据库中检索它们。</target>
        </trans-unit>
        <trans-unit id="2774cd9614848bc838324a9f3925846c843cbd6c" translate="yes" xml:space="preserve">
          <source>In some rare cases, you might wish to pass parameters to the SQL fragments in &lt;code&gt;extra(select=...)&lt;/code&gt;. For this purpose, use the &lt;code&gt;select_params&lt;/code&gt; parameter.</source>
          <target state="translated">在极少数情况下，您可能希望将参数传递给 &lt;code&gt;extra(select=...)&lt;/code&gt; 中的SQL片段。为此，请使用 &lt;code&gt;select_params&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="4b48e88bf410f2cba633c2cb412176cbfa3a3eb6" translate="yes" xml:space="preserve">
          <source>In some rare circumstances, it&amp;rsquo;s necessary to be able to force the &lt;a href=&quot;#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; method to perform an SQL &lt;code&gt;INSERT&lt;/code&gt; and not fall back to doing an &lt;code&gt;UPDATE&lt;/code&gt;. Or vice-versa: update, if possible, but not insert a new row. In these cases you can pass the &lt;code&gt;force_insert=True&lt;/code&gt; or &lt;code&gt;force_update=True&lt;/code&gt; parameters to the &lt;a href=&quot;#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; method. Passing both parameters is an error: you cannot both insert &lt;em&gt;and&lt;/em&gt; update at the same time!</source>
          <target state="translated">在极少数情况下，有必要能够强制&lt;a href=&quot;#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;方法执行SQL &lt;code&gt;INSERT&lt;/code&gt; ,而不能退一步来执行 &lt;code&gt;UPDATE&lt;/code&gt; 。反之亦然：如果可能，请更新，但不要插入新行。在这些情况下，您可以将 &lt;code&gt;force_insert=True&lt;/code&gt; 或 &lt;code&gt;force_update=True&lt;/code&gt; 参数传递给&lt;a href=&quot;#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;方法。传递两个参数是一个错误：您不能同时插入&lt;em&gt;和&lt;/em&gt;更新！</target>
        </trans-unit>
        <trans-unit id="ce736764b432a2fae47c89320e8e9fd2392f9dd8" translate="yes" xml:space="preserve">
          <source>In some scenarios where views are of a generic nature, a many-to-one relationship might exist between URLs and views. For these cases the view name isn&amp;rsquo;t a good enough identifier for it when comes the time of reversing URLs. Read the next section to know about the solution Django provides for this.</source>
          <target state="translated">在视图具有一般性质的某些情况下，URL和视图之间可能存在多对一关系。对于这些情况，在反向URL时，视图名称并不是一个足够好的标识符。阅读下一节以了解Django为此提供的解决方案。</target>
        </trans-unit>
        <trans-unit id="b1e5d19e9d9d33f10b0a69c92fa82b62a739e1d4" translate="yes" xml:space="preserve">
          <source>In statement 1, a new &lt;code&gt;Person&lt;/code&gt; object is saved to the &lt;code&gt;first&lt;/code&gt; database. At this time, &lt;code&gt;p&lt;/code&gt; doesn&amp;rsquo;t have a primary key, so Django issues an SQL &lt;code&gt;INSERT&lt;/code&gt; statement. This creates a primary key, and Django assigns that primary key to &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">在语句1中，将新的 &lt;code&gt;Person&lt;/code&gt; 对象保存到第 &lt;code&gt;first&lt;/code&gt; 数据库。目前， &lt;code&gt;p&lt;/code&gt; 没有主键，因此Django发出SQL &lt;code&gt;INSERT&lt;/code&gt; 语句。这将创建一个主键，并且Django将该主键分配给 &lt;code&gt;p&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e064abd9ffdc8b00766db1b2b02b9688bf7b519c" translate="yes" xml:space="preserve">
          <source>In templates: Using the &lt;a href=&quot;../../ref/templates/builtins#std:templatetag-url&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; template tag.</source>
          <target state="translated">在模板中：使用&lt;a href=&quot;../../ref/templates/builtins#std:templatetag-url&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt;模板标记。</target>
        </trans-unit>
        <trans-unit id="cfdab87bc82efd3797239c4ba21d1d79e927c429" translate="yes" xml:space="preserve">
          <source>In that &lt;code&gt;register.inclusion_tag()&lt;/code&gt; line, we specified &lt;code&gt;takes_context=True&lt;/code&gt; and the name of the template. Here&amp;rsquo;s what the template &lt;code&gt;link.html&lt;/code&gt; might look like:</source>
          <target state="translated">在该 &lt;code&gt;register.inclusion_tag()&lt;/code&gt; 行中，我们指定了 &lt;code&gt;takes_context=True&lt;/code&gt; 和模板的名称。模板 &lt;code&gt;link.html&lt;/code&gt; 可能如下所示：</target>
        </trans-unit>
        <trans-unit id="67c01f0adefa1043d3003b730cd2f663f4b756b7" translate="yes" xml:space="preserve">
          <source>In that form, the &amp;ldquo;Question&amp;rdquo; field is a select box containing every question in the database. Django knows that a &lt;a href=&quot;../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; should be represented in the admin as a &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; box. In our case, only one question exists at this point.</source>
          <target state="translated">以这种形式，&amp;ldquo;问题&amp;rdquo;字段是一个选择框，其中包含数据库中的每个问题。Django知道，&lt;a href=&quot;../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;应该在管理员中表示为 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 框。在我们的案例中，此时仅存在一个问题。</target>
        </trans-unit>
        <trans-unit id="e16803d7e5444774cf1847606a924ea98fc0f9ff" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;#built-in-field-classes&quot;&gt;built-in Field classes&lt;/a&gt; section below, each &lt;code&gt;Field&lt;/code&gt; defines the error message keys it uses.</source>
          <target state="translated">在下面的&lt;a href=&quot;#built-in-field-classes&quot;&gt;内置字段类&lt;/a&gt;部分中，每个 &lt;code&gt;Field&lt;/code&gt; 定义其使用的错误消息键。</target>
        </trans-unit>
        <trans-unit id="4b8de39169c018ef000a9984f73650a25eb94d98" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;../../topics/auth/index#module-django.contrib.auth&quot;&gt;&lt;code&gt;authentication framework&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../topics/auth/default#django.contrib.auth.views.LoginView&quot;&gt;&lt;code&gt;django.contrib.auth.views.LoginView&lt;/code&gt;&lt;/a&gt; passes the current &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; name to the template as &lt;code&gt;{{ site_name }}&lt;/code&gt;.</source>
          <target state="translated">在&lt;a href=&quot;../../topics/auth/index#module-django.contrib.auth&quot;&gt; &lt;code&gt;authentication framework&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../topics/auth/default#django.contrib.auth.views.LoginView&quot;&gt; &lt;code&gt;django.contrib.auth.views.LoginView&lt;/code&gt; &lt;/a&gt;将当前&lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt;名称作为 &lt;code&gt;{{ site_name }}&lt;/code&gt; 传递给模板。</target>
        </trans-unit>
        <trans-unit id="f38cdaf92023e3d5b6ad536a62d5ac0850443cb2" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;../ref/contrib/admin/admindocs#module-django.contrib.admindocs&quot;&gt;&lt;code&gt;django.contrib.admindocs&lt;/code&gt;&lt;/a&gt; display, the field description is interpolated with &lt;code&gt;field.__dict__&lt;/code&gt; which allows the description to incorporate arguments of the field. For example, the description for &lt;a href=&quot;../ref/models/fields#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; is:</source>
          <target state="translated">在&lt;a href=&quot;../ref/contrib/admin/admindocs#module-django.contrib.admindocs&quot;&gt; &lt;code&gt;django.contrib.admindocs&lt;/code&gt; &lt;/a&gt;显示中，字段描述用 &lt;code&gt;field.__dict__&lt;/code&gt; 插值，这允许描述包含字段的参数。例如对于&lt;a href=&quot;../ref/models/fields#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;的描述是：</target>
        </trans-unit>
        <trans-unit id="61a99f888da03252e37a49dc94b253027356d243" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;flatpages#module-django.contrib.flatpages&quot;&gt;&lt;code&gt;flatpages framework&lt;/code&gt;&lt;/a&gt;, each flatpage is associated with a particular site. When a flatpage is created, you specify its &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt;, and the &lt;a href=&quot;flatpages#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt;&lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt;&lt;/a&gt; checks the current site in retrieving flatpages to display.</source>
          <target state="translated">在&lt;a href=&quot;flatpages#module-django.contrib.flatpages&quot;&gt; &lt;code&gt;flatpages framework&lt;/code&gt; &lt;/a&gt;，每个flatpage与一个特定站点相关联。创建&lt;a href=&quot;flatpages#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt; &lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt; &lt;/a&gt;页面时，请指定其&lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt;，然后FlatpageFallbackMiddleware会在检索要显示的平面页面时检查当前站点。</target>
        </trans-unit>
        <trans-unit id="ab0e7037c1bb990ccc8f0010f58edfb9050005ab" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;redirects#module-django.contrib.redirects&quot;&gt;&lt;code&gt;redirects framework&lt;/code&gt;&lt;/a&gt;, each redirect object is associated with a particular site. When Django searches for a redirect, it takes into account the current site.</source>
          <target state="translated">在&lt;a href=&quot;redirects#module-django.contrib.redirects&quot;&gt; &lt;code&gt;redirects framework&lt;/code&gt; &lt;/a&gt;，每个重定向对象都与一个特定站点相关联。Django搜索重定向时，它会考虑当前站点。</target>
        </trans-unit>
        <trans-unit id="e00c865684c73ed393c739c654ec70b0bd8e2997" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;syndication#module-django.contrib.syndication&quot;&gt;&lt;code&gt;syndication framework&lt;/code&gt;&lt;/a&gt;, the templates for &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt; automatically have access to a variable &lt;code&gt;{{ site }}&lt;/code&gt;, which is the &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; object representing the current site. Also, the hook for providing item URLs will use the &lt;code&gt;domain&lt;/code&gt; from the current &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; object if you don&amp;rsquo;t specify a fully-qualified domain.</source>
          <target state="translated">在&lt;a href=&quot;syndication#module-django.contrib.syndication&quot;&gt; &lt;code&gt;syndication framework&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;title&lt;/code&gt; 和 &lt;code&gt;description&lt;/code&gt; 模板自动访问变量 &lt;code&gt;{{ site }}&lt;/code&gt; ，变量{{site}}是代表当前站点的&lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt;对象。此外，钩提供项目的URL会使用 &lt;code&gt;domain&lt;/code&gt; 从当前&lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt;的对象，如果你不指定一个完全合格的域名。</target>
        </trans-unit>
        <trans-unit id="3cae9da1a42439d27f7e2fc7772d9140895ca585" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;as_p()&lt;/code&gt;, &lt;code&gt;as_ul()&lt;/code&gt; and &lt;code&gt;as_table()&lt;/code&gt; shortcuts, the fields are displayed in the order in which you define them in your form class. For example, in the &lt;code&gt;ContactForm&lt;/code&gt; example, the fields are defined in the order &lt;code&gt;subject&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt;, &lt;code&gt;sender&lt;/code&gt;, &lt;code&gt;cc_myself&lt;/code&gt;. To reorder the HTML output, change the order in which those fields are listed in the class.</source>
          <target state="translated">在 &lt;code&gt;as_p()&lt;/code&gt; ， &lt;code&gt;as_ul()&lt;/code&gt; 和 &lt;code&gt;as_table()&lt;/code&gt; 快捷方式中，以在表单类中定义字段的顺序显示字段。例如，在 &lt;code&gt;ContactForm&lt;/code&gt; 示例中，按 &lt;code&gt;subject&lt;/code&gt; ， &lt;code&gt;message&lt;/code&gt; ， &lt;code&gt;sender&lt;/code&gt; ， &lt;code&gt;cc_myself&lt;/code&gt; 定义字段。要重新排序HTML输出，请更改类中列出这些字段的顺序。</target>
        </trans-unit>
        <trans-unit id="6ca61b57511e0384cfa193f4c62191a0072117aa" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;fixtures&lt;/code&gt; directory of every installed application</source>
          <target state="translated">在每个已安装应用程序的 &lt;code&gt;fixtures&lt;/code&gt; 目录中</target>
        </trans-unit>
        <trans-unit id="c2e20542720527ab7cf07a8cbe445b23385b59fc" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;polls/urls.py&lt;/code&gt; file include the following code:</source>
          <target state="translated">在 &lt;code&gt;polls/urls.py&lt;/code&gt; 文件中，包含以下代码：</target>
        </trans-unit>
        <trans-unit id="7e79d1c3816db22dfa49e704e2e1e701d76541a2" translate="yes" xml:space="preserve">
          <source>In the GitHub scenario, the session cookie would be allowed when following a regular link from an external website and be blocked in CSRF-prone request methods (e.g. &lt;code&gt;POST&lt;/code&gt;).</source>
          <target state="translated">在GitHub场景中，当遵循来自外部网站的常规链接时，将允许会话cookie，并在倾向于CSRF的请求方法（例如 &lt;code&gt;POST&lt;/code&gt; ）中将其阻止。</target>
        </trans-unit>
        <trans-unit id="a35e39704ca75e16ec151ec02bb8d09c5245b059" translate="yes" xml:space="preserve">
          <source>In the SQL standards, each SQL query starts a transaction, unless one is already active. Such transactions must then be explicitly committed or rolled back.</source>
          <target state="translated">在SQL标准中,每个SQL查询都会启动一个事务,除非一个事务已经处于活动状态。然后,这种事务必须明确地提交或回滚。</target>
        </trans-unit>
        <trans-unit id="d85d9726aad9b5761b698a91a3fa752dcf0b2bef" translate="yes" xml:space="preserve">
          <source>In the above example, &lt;code&gt;{{ section.title }}&lt;/code&gt; will be replaced with the &lt;code&gt;title&lt;/code&gt; attribute of the &lt;code&gt;section&lt;/code&gt; object.</source>
          <target state="translated">在上面的示例中， &lt;code&gt;{{ section.title }}&lt;/code&gt; 将替换为 &lt;code&gt;section&lt;/code&gt; 对象的 &lt;code&gt;title&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="c8e400b0450098c588ff1bf9ef3ced42847e2189" translate="yes" xml:space="preserve">
          <source>In the above example, both URL patterns point to the same view &amp;ndash; &lt;code&gt;views.page&lt;/code&gt; &amp;ndash; but the first pattern doesn&amp;rsquo;t capture anything from the URL. If the first pattern matches, the &lt;code&gt;page()&lt;/code&gt; function will use its default argument for &lt;code&gt;num&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;. If the second pattern matches, &lt;code&gt;page()&lt;/code&gt; will use whatever &lt;code&gt;num&lt;/code&gt; value was captured.</source>
          <target state="translated">在上面的示例中，两个URL模式都指向同一视图（ &lt;code&gt;views.page&lt;/code&gt; )，但是第一个模式未从URL中捕获任何内容。如果第一个模式匹配， &lt;code&gt;page()&lt;/code&gt; 函数将使用其默认参数 &lt;code&gt;num&lt;/code&gt; ， &lt;code&gt;1&lt;/code&gt; 。如果第二个模式匹配，则 &lt;code&gt;page()&lt;/code&gt; 将使用捕获的 &lt;code&gt;num&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="fc33d28f955e8ad2642da30af478dafd323d4ae4" translate="yes" xml:space="preserve">
          <source>In the above example, only the fields &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;content&lt;/code&gt; will be displayed, sequentially, in the form. &lt;code&gt;fields&lt;/code&gt; can contain values defined in &lt;a href=&quot;#django.contrib.admin.ModelAdmin.readonly_fields&quot;&gt;&lt;code&gt;ModelAdmin.readonly_fields&lt;/code&gt;&lt;/a&gt; to be displayed as read-only.</source>
          <target state="translated">在上面的示例中，仅字段 &lt;code&gt;url&lt;/code&gt; ， &lt;code&gt;title&lt;/code&gt; 和 &lt;code&gt;content&lt;/code&gt; 将以表格顺序显示。 &lt;code&gt;fields&lt;/code&gt; 可以包含在&lt;a href=&quot;#django.contrib.admin.ModelAdmin.readonly_fields&quot;&gt; &lt;code&gt;ModelAdmin.readonly_fields&lt;/code&gt; 中&lt;/a&gt;定义的值，以显示为只读。</target>
        </trans-unit>
        <trans-unit id="36256fe1165ee329fa178a898c6d788a746b521c" translate="yes" xml:space="preserve">
          <source>In the above example, the &amp;ldquo;age&amp;rdquo; field will be excluded but the &amp;ldquo;name&amp;rdquo; field will be included in the generated form.</source>
          <target state="translated">在上面的示例中，&amp;ldquo;年龄&amp;rdquo;字段将被排除，但&amp;ldquo;名称&amp;rdquo;字段将包含在生成的表单中。</target>
        </trans-unit>
        <trans-unit id="9b8e730b189037d720518429d06c01e1f5b80497" translate="yes" xml:space="preserve">
          <source>In the above example, the &lt;a href=&quot;../exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; exception raised by &lt;code&gt;Model.clean()&lt;/code&gt; was instantiated with a string, so it will be stored in a special error dictionary key, &lt;a href=&quot;../exceptions#django.core.exceptions.NON_FIELD_ERRORS&quot;&gt;&lt;code&gt;NON_FIELD_ERRORS&lt;/code&gt;&lt;/a&gt;. This key is used for errors that are tied to the entire model instead of to a specific field:</source>
          <target state="translated">在上面的示例中， &lt;code&gt;Model.clean()&lt;/code&gt; 引发的&lt;a href=&quot;../exceptions#django.core.exceptions.ValidationError&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; &lt;/a&gt;异常是使用字符串实例化的，因此它将存储在特殊的错误字典键&lt;a href=&quot;../exceptions#django.core.exceptions.NON_FIELD_ERRORS&quot;&gt; &lt;code&gt;NON_FIELD_ERRORS&lt;/code&gt; 中&lt;/a&gt;。此键用于与整个模型（而不是特定字段）相关的错误：</target>
        </trans-unit>
        <trans-unit id="054e7fb40fa8d67083dfe23cb23e8a33bd7f4a9d" translate="yes" xml:space="preserve">
          <source>In the above example, the captured &lt;code&gt;&quot;username&quot;&lt;/code&gt; variable is passed to the included URLconf, as expected.</source>
          <target state="translated">在上面的示例中，捕获的 &lt;code&gt;&quot;username&quot;&lt;/code&gt; 变量按预期传递给了包含的URLconf。</target>
        </trans-unit>
        <trans-unit id="2e4675b3bb9d4b4002a375360f90bfba0c6f91a3" translate="yes" xml:space="preserve">
          <source>In the above example, the methods below will be available on the manager &lt;code&gt;reporter.article_set&lt;/code&gt;.</source>
          <target state="translated">在上面的示例中，下面的方法将在manager &lt;code&gt;reporter.article_set&lt;/code&gt; 上可用。</target>
        </trans-unit>
        <trans-unit id="65ad72df37c0389d2230e3f4d563d496af4f3eea" translate="yes" xml:space="preserve">
          <source>In the above example, the values for the &lt;code&gt;pass_word&lt;/code&gt; and &lt;code&gt;credit_card_number&lt;/code&gt; POST parameters will be hidden and replaced with stars (&lt;code&gt;**********&lt;/code&gt;) in the request&amp;rsquo;s representation inside the error reports, whereas the value of the &lt;code&gt;name&lt;/code&gt; parameter will be disclosed.</source>
          <target state="translated">在上面的示例中，错误报告内的请求表示中的 &lt;code&gt;pass_word&lt;/code&gt; 和 &lt;code&gt;credit_card_number&lt;/code&gt; POST参数的值将被隐藏并替换为星号（ &lt;code&gt;**********&lt;/code&gt; ），而 &lt;code&gt;name&lt;/code&gt; 参数的值将被披露。</target>
        </trans-unit>
        <trans-unit id="bac0f6907fb81a767b7ad0760c5544c765493d0b" translate="yes" xml:space="preserve">
          <source>In the above example, the values for the &lt;code&gt;user&lt;/code&gt;, &lt;code&gt;pw&lt;/code&gt; and &lt;code&gt;cc&lt;/code&gt; variables will be hidden and replaced with stars (&lt;code&gt;**********&lt;/code&gt;) in the error reports, whereas the value of the &lt;code&gt;name&lt;/code&gt; variable will be disclosed.</source>
          <target state="translated">在上面的示例中，错误报告中的 &lt;code&gt;user&lt;/code&gt; ， &lt;code&gt;pw&lt;/code&gt; 和 &lt;code&gt;cc&lt;/code&gt; 变量的值将被隐藏并替换为星号（ &lt;code&gt;**********&lt;/code&gt; ），而 &lt;code&gt;name&lt;/code&gt; 变量的值将被公开。</target>
        </trans-unit>
        <trans-unit id="5c13e8f2b17b315a25d1911d4b412a00dfeed073" translate="yes" xml:space="preserve">
          <source>In the above example, we determined that a case insensitive lookup would be more useful. When dealing with non-English names, a further improvement is to use &lt;a href=&quot;../../ref/contrib/postgres/lookups#std:fieldlookup-unaccent&quot;&gt;&lt;code&gt;unaccented comparison&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">在上面的示例中，我们确定不区分大小写的查找会更有用。在处理非英文名称时，进一步的改进是使用不&lt;a href=&quot;../../ref/contrib/postgres/lookups#std:fieldlookup-unaccent&quot;&gt; &lt;code&gt;unaccented comparison&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="b96e1eae465a596d094ef282c8dc2860d32edcd6" translate="yes" xml:space="preserve">
          <source>In the above example, we set the Atom feed&amp;rsquo;s &lt;code&gt;subtitle&lt;/code&gt; to the RSS feed&amp;rsquo;s &lt;code&gt;description&lt;/code&gt;, because it&amp;rsquo;s quite short already.</source>
          <target state="translated">在上面的示例中，我们将Atom feed的 &lt;code&gt;subtitle&lt;/code&gt; 设置为RSS feed的 &lt;code&gt;description&lt;/code&gt; ，因为它已经很短了。</target>
        </trans-unit>
        <trans-unit id="b2be673a5dead01b36c94268ca913e0de459fc31" translate="yes" xml:space="preserve">
          <source>In the above, if &lt;code&gt;athlete_list&lt;/code&gt; is not empty, the number of athletes will be displayed by the &lt;code&gt;{{ athlete_list|length }}&lt;/code&gt; variable.</source>
          <target state="translated">在上面，如果 &lt;code&gt;athlete_list&lt;/code&gt; 运动员列表不为空，则将通过 &lt;code&gt;{{ athlete_list|length }}&lt;/code&gt; 田径运动员列表|长度}}变量显示运动员人数。</target>
        </trans-unit>
        <trans-unit id="036bce9d539c951de0462de6ee0b26a612693636" translate="yes" xml:space="preserve">
          <source>In the above, if &lt;code&gt;athlete_list&lt;/code&gt; is not empty, the number of athletes will be displayed by the &lt;code&gt;{{ athlete_list|length }}&lt;/code&gt; variable. Otherwise, if &lt;code&gt;athlete_in_locker_room_list&lt;/code&gt; is not empty, the message &amp;ldquo;Athletes should be out&amp;hellip;&amp;rdquo; will be displayed. If both lists are empty, &amp;ldquo;No athletes.&amp;rdquo; will be displayed.</source>
          <target state="translated">在上面，如果 &lt;code&gt;athlete_list&lt;/code&gt; 运动员列表不为空，则将通过 &lt;code&gt;{{ athlete_list|length }}&lt;/code&gt; 田径运动员列表|长度}}变量显示运动员人数。否则，如果 &lt;code&gt;athlete_in_locker_room_list&lt;/code&gt; 不为空，则将显示消息&amp;ldquo;运动员应离开&amp;hellip;&amp;hellip;&amp;rdquo;。如果两个列表都为空，则为&amp;ldquo;无运动员&amp;rdquo;。将显示。</target>
        </trans-unit>
        <trans-unit id="06c8c3e595ff8b1404a63e6217e0454048fc6f6a" translate="yes" xml:space="preserve">
          <source>In the above, the &lt;a href=&quot;builtins#std:templatetag-load&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; tag loads the &lt;code&gt;humanize&lt;/code&gt; tag library, which then makes the &lt;code&gt;intcomma&lt;/code&gt; filter available for use. If you&amp;rsquo;ve enabled &lt;a href=&quot;../contrib/admin/admindocs#module-django.contrib.admindocs&quot;&gt;&lt;code&gt;django.contrib.admindocs&lt;/code&gt;&lt;/a&gt;, you can consult the documentation area in your admin to find the list of custom libraries in your installation.</source>
          <target state="translated">在上面的代码中，&lt;a href=&quot;builtins#std:templatetag-load&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt;标签加载 &lt;code&gt;humanize&lt;/code&gt; 标签库，然后使 &lt;code&gt;intcomma&lt;/code&gt; 过滤器可用。如果启用了&lt;a href=&quot;../contrib/admin/admindocs#module-django.contrib.admindocs&quot;&gt; &lt;code&gt;django.contrib.admindocs&lt;/code&gt; &lt;/a&gt;，则可以查阅管理员的文档区域以找到安装中的自定义库列表。</target>
        </trans-unit>
        <trans-unit id="67157a0988cf8fa0ce4d5b9aaad093f942a5bcec" translate="yes" xml:space="preserve">
          <source>In the admin framework, the &amp;ldquo;view on site&amp;rdquo; link uses the current &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; to work out the domain for the site that it will redirect to.</source>
          <target state="translated">在管理框架中，&amp;ldquo;在网站上查看&amp;rdquo;链接使用当前&lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt;为要重定向到的网站制定域。</target>
        </trans-unit>
        <trans-unit id="08000b52dbe25a161a365d8c2d097c086b24d380" translate="yes" xml:space="preserve">
          <source>In the beginning there was only the view function contract, Django passed your function an &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; and expected back an &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;. This was the extent of what Django provided.</source>
          <target state="translated">最初，只有视图函数协定，Django将您的函数传递给&lt;a href=&quot;../../ref/request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; ,&lt;/a&gt;并期望返回&lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;。这就是Django提供的功能。</target>
        </trans-unit>
        <trans-unit id="89eb2f3613635899652ec376acd113c2fd5cfaa7" translate="yes" xml:space="preserve">
          <source>In the case of a model instance that contained no data, it would rarely if ever be useful to do anything with it in a template. On the other hand, it makes perfect sense to render an unpopulated form - that&amp;rsquo;s what we do when we want the user to populate it.</source>
          <target state="translated">对于不包含数据的模型实例，在模板中进行任何处理都是非常有用的。另一方面，呈现未填充的表单非常有意义-当我们希望用户填充它时，这就是我们要做的。</target>
        </trans-unit>
        <trans-unit id="c4ab596a52e2082b97972eb72c42ac13c8c2757e" translate="yes" xml:space="preserve">
          <source>In the command prompt, ensure your virtual environment is active, and execute the following command:</source>
          <target state="translated">在命令提示符中,确保虚拟环境处于活动状态,并执行以下命令。</target>
        </trans-unit>
        <trans-unit id="1609a3c27d2c2842f190fe8992b4a57338c73380" translate="yes" xml:space="preserve">
          <source>In the contact form example above, &lt;code&gt;cc_myself&lt;/code&gt; will be a boolean value. Likewise, fields such as &lt;a href=&quot;../../ref/forms/fields#django.forms.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/forms/fields#django.forms.FloatField&quot;&gt;&lt;code&gt;FloatField&lt;/code&gt;&lt;/a&gt; convert values to a Python &lt;code&gt;int&lt;/code&gt; and &lt;code&gt;float&lt;/code&gt; respectively.</source>
          <target state="translated">在上面的联系表单示例中， &lt;code&gt;cc_myself&lt;/code&gt; 将为布尔值。同样，诸如&lt;a href=&quot;../../ref/forms/fields#django.forms.IntegerField&quot;&gt; &lt;code&gt;IntegerField&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ref/forms/fields#django.forms.FloatField&quot;&gt; &lt;code&gt;FloatField&lt;/code&gt; 之类的&lt;/a&gt;字段分别将值转换为Python &lt;code&gt;int&lt;/code&gt; 和 &lt;code&gt;float&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="03eed8e02cbc009e5225da6ccd80e31e4e1d6836" translate="yes" xml:space="preserve">
          <source>In the context of a Web application, &amp;lsquo;form&amp;rsquo; might refer to that HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;, or to the Django &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; that produces it, or to the structured data returned when it is submitted, or to the end-to-end working collection of these parts.</source>
          <target state="translated">在Web应用程序的上下文中，&amp;ldquo;表单&amp;rdquo;可能是指HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 或生成它的Django &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;，或者是提交时返回的结构化数据，或者是端到端工作集合。这些部分。</target>
        </trans-unit>
        <trans-unit id="5a34903ee3fddd98e21618e22c82cf3333e5c987" translate="yes" xml:space="preserve">
          <source>In the corresponding view functions, ensure that &lt;a href=&quot;templates/api#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt; is used to render the response so that &lt;code&gt;{% csrf_token %}&lt;/code&gt; will work properly. If you&amp;rsquo;re using the &lt;a href=&quot;../topics/http/shortcuts#django.shortcuts.render&quot;&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/a&gt; function, generic views, or contrib apps, you are covered already since these all use &lt;code&gt;RequestContext&lt;/code&gt;.</source>
          <target state="translated">在相应视图的功能，确保&lt;a href=&quot;templates/api#django.template.RequestContext&quot;&gt; &lt;code&gt;RequestContext&lt;/code&gt; 的&lt;/a&gt;用于呈现的响应，使得 &lt;code&gt;{% csrf_token %}&lt;/code&gt; 将正常工作。如果您正在使用&lt;a href=&quot;../topics/http/shortcuts#django.shortcuts.render&quot;&gt; &lt;code&gt;render()&lt;/code&gt; &lt;/a&gt;函数，通用视图或contrib应用程序，则已经介绍了这些内容，因为它们都使用 &lt;code&gt;RequestContext&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb1af41ff9f27e5d9ab58cfab85994a63806adce" translate="yes" xml:space="preserve">
          <source>In the event that all the fields you&amp;rsquo;re querying on are contained within one particular model, you can create a functional index which matches the search vector you wish to use. The PostgreSQL documentation has details on &lt;a href=&quot;https://www.postgresql.org/docs/current/textsearch-tables.html#TEXTSEARCH-TABLES-INDEX&quot;&gt;creating indexes for full text search&lt;/a&gt;.</source>
          <target state="translated">如果您要查询的所有字段都包含在一个特定模型中，则可以创建一个功能索引，该索引与您要使用的搜索向量匹配。PostgreSQL文档包含有关&lt;a href=&quot;https://www.postgresql.org/docs/current/textsearch-tables.html#TEXTSEARCH-TABLES-INDEX&quot;&gt;创建全文搜索索引的&lt;/a&gt;详细信息。</target>
        </trans-unit>
        <trans-unit id="d6f92ce395efb837fbb0560e8eb518c73b6ff24f" translate="yes" xml:space="preserve">
          <source>In the example &lt;code&gt;Blog&lt;/code&gt; model, the primary key is the &lt;code&gt;id&lt;/code&gt; field, so these three statements are equivalent:</source>
          <target state="translated">在示例 &lt;code&gt;Blog&lt;/code&gt; 模型中，主键是 &lt;code&gt;id&lt;/code&gt; 字段，因此这三个语句是等效的：</target>
        </trans-unit>
        <trans-unit id="04e4b5bcdcb35cbb0379b289fe1b7eece5458cac" translate="yes" xml:space="preserve">
          <source>In the example above, in the case of a &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; relationship, &lt;a href=&quot;querysets#django.db.models.query.QuerySet.update&quot;&gt;&lt;code&gt;QuerySet.update()&lt;/code&gt;&lt;/a&gt; is used to perform the update. This requires the objects to already be saved.</source>
          <target state="translated">在上面的示例中，在使用&lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;关系的情况下，&lt;a href=&quot;querysets#django.db.models.query.QuerySet.update&quot;&gt; &lt;code&gt;QuerySet.update()&lt;/code&gt; &lt;/a&gt;用于执行更新。这要求对象已被保存。</target>
        </trans-unit>
        <trans-unit id="47ec93e0054e37a606f1e92a3f1d7cada5286c57" translate="yes" xml:space="preserve">
          <source>In the examples given so far, we have constructed filters that compare the value of a model field with a constant. But what if you want to compare the value of a model field with another field on the same model?</source>
          <target state="translated">在目前给出的例子中,我们已经构建了过滤器,将模型字段的值与一个常数进行比较。但如果您想将一个模型字段的值与同一模型上的另一个字段进行比较呢?</target>
        </trans-unit>
        <trans-unit id="982c8f23176116f5070c7936c454b1f26af16ddc" translate="yes" xml:space="preserve">
          <source>In the first empty migration file, add a &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunSQL&quot;&gt;&lt;code&gt;RunSQL&lt;/code&gt;&lt;/a&gt; operation to generate a unique value (UUID in the example) for each existing row. Also add an import of &lt;code&gt;uuid&lt;/code&gt;. For example:</source>
          <target state="translated">在第一个空迁移文件中，添加一个&lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunSQL&quot;&gt; &lt;code&gt;RunSQL&lt;/code&gt; &lt;/a&gt;操作以为每个现有行生成一个唯一值（在示例中为UUID）。还添加一个 &lt;code&gt;uuid&lt;/code&gt; 导入。例如：</target>
        </trans-unit>
        <trans-unit id="e35fd9a39f1807a0c7d83b5f82b050cbd08213f6" translate="yes" xml:space="preserve">
          <source>In the first example, the UTF-8 characters are unquoted. In the second, the percent-encodings remain unchanged because they lie outside the valid UTF-8 range or represent a reserved character.</source>
          <target state="translated">在第一个例子中,UTF-8字符没有被引用。在第二个例子中,百分比编码保持不变,因为它们位于有效的UTF-8范围之外或代表一个保留字符。</target>
        </trans-unit>
        <trans-unit id="8efe90c94b3cf572dcc6da616bffdbfcdf129e44" translate="yes" xml:space="preserve">
          <source>In the first query, the annotation precedes the filter, so the filter has no effect on the annotation. &lt;code&gt;distinct=True&lt;/code&gt; is required to avoid a &lt;a href=&quot;#combining-multiple-aggregations&quot;&gt;query bug&lt;/a&gt;.</source>
          <target state="translated">在第一个查询中，注释在过滤器之前，因此过滤器对注释没有影响。 &lt;code&gt;distinct=True&lt;/code&gt; 是避免&lt;a href=&quot;#combining-multiple-aggregations&quot;&gt;查询bug&lt;/a&gt;所必需的。</target>
        </trans-unit>
        <trans-unit id="0d275b5cb7fc4b1432c362be17f59a41994939ed" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;ChoiceAdmin&lt;/code&gt; has an autocomplete field for the &lt;code&gt;ForeignKey&lt;/code&gt; to the &lt;code&gt;Question&lt;/code&gt;. The results are filtered by the &lt;code&gt;question_text&lt;/code&gt; field and ordered by the &lt;code&gt;date_created&lt;/code&gt; field:</source>
          <target state="translated">在以下示例中， &lt;code&gt;ChoiceAdmin&lt;/code&gt; 具有用于自动填充字段 &lt;code&gt;ForeignKey&lt;/code&gt; 的所述 &lt;code&gt;Question&lt;/code&gt; 。结果由 &lt;code&gt;question_text&lt;/code&gt; 字段过滤，并由 &lt;code&gt;date_created&lt;/code&gt; 字段排序：</target>
        </trans-unit>
        <trans-unit id="d2b60a09350bb67bd6b7fee1bd06d1d2f6e595dc" translate="yes" xml:space="preserve">
          <source>In the following example, the cache is shared over Memcached instances running on the IP addresses 172.19.26.240 (port 11211), 172.19.26.242 (port 11212), and 172.19.26.244 (port 11213):</source>
          <target state="translated">在下面的例子中,缓存是由运行在IP地址172.19.26.240(端口11211)、172.19.26.242(端口11212)和172.19.26.244(端口11213)的Memcached实例共享的。</target>
        </trans-unit>
        <trans-unit id="774a14ff6afa3b15c21e0e0586425ba89b6281a2" translate="yes" xml:space="preserve">
          <source>In the following example, the distance from the city of Hobart to every other &lt;a href=&quot;model-api#django.contrib.gis.db.models.PointField&quot;&gt;&lt;code&gt;PointField&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;AustraliaCity&lt;/code&gt; queryset is calculated:</source>
          <target state="translated">在以下示例中，计算了霍巴特市到 &lt;code&gt;AustraliaCity&lt;/code&gt; &lt;a href=&quot;model-api#django.contrib.gis.db.models.PointField&quot;&gt; &lt;code&gt;PointField&lt;/code&gt; &lt;/a&gt;集中的每个其他PointField的距离：</target>
        </trans-unit>
        <trans-unit id="c32f5b020a99c145d62d9c288e0593a7f2c0d978" translate="yes" xml:space="preserve">
          <source>In the following example, the field &lt;code&gt;identifier&lt;/code&gt; is used as the identifying field:</source>
          <target state="translated">在以下示例中，字段 &lt;code&gt;identifier&lt;/code&gt; 用作标识字段：</target>
        </trans-unit>
        <trans-unit id="0552e596b3c4142a0555d2a338ce81644b342ad7" translate="yes" xml:space="preserve">
          <source>In the following example, we have a migration in &lt;code&gt;app1&lt;/code&gt; which needs to use models in &lt;code&gt;app2&lt;/code&gt;. We aren&amp;rsquo;t concerned with the details of &lt;code&gt;move_m1&lt;/code&gt; other than the fact it will need to access models from both apps. Therefore we&amp;rsquo;ve added a dependency that specifies the last migration of &lt;code&gt;app2&lt;/code&gt;:</source>
          <target state="translated">在以下示例中，我们在 &lt;code&gt;app1&lt;/code&gt; 中进行了迁移，该迁移需要使用 &lt;code&gt;app2&lt;/code&gt; 中的模型。除了实际上需要从两个应用程序访问模型之外，我们并不关心 &lt;code&gt;move_m1&lt;/code&gt; 的详细信息。因此，我们添加了一个依赖性，该依赖性指定了 &lt;code&gt;app2&lt;/code&gt; 的最后一次迁移：</target>
        </trans-unit>
        <trans-unit id="66feb7cf13c927fdd790d1e911432061cb79c0af" translate="yes" xml:space="preserve">
          <source>In the last case of the above example, we can tell the session object explicitly that it has been modified by setting the &lt;code&gt;modified&lt;/code&gt; attribute on the session object:</source>
          <target state="translated">在上述示例的最后一种情况下，我们可以通过在会话对象上设置 &lt;code&gt;modified&lt;/code&gt; 属性来明确告知会话对象已被修改：</target>
        </trans-unit>
        <trans-unit id="e66e10c8d1fea4f262f45d7c5ee1356b55e39416" translate="yes" xml:space="preserve">
          <source>In the literal path named by the fixture</source>
          <target state="translated">在由夹具命名的文字路径中。</target>
        </trans-unit>
        <trans-unit id="9418ed20fe28804d3d729bcecdb7de900f9ed0b8" translate="yes" xml:space="preserve">
          <source>In the meantime, for backwards compatibility, the datetime is considered to be in the default time zone, which is generally what you expect.</source>
          <target state="translated">同时,为了向后兼容,日期时间被认为是在默认时区,这通常是你所期望的。</target>
        </trans-unit>
        <trans-unit id="d4fb536c73b22ca7075047278fc28ffbc607d147" translate="yes" xml:space="preserve">
          <source>In the method of a class-based view:</source>
          <target state="translated">在类观的方法中。</target>
        </trans-unit>
        <trans-unit id="551cd425acfd8cfac753b72db2384c8e4518bc4e" translate="yes" xml:space="preserve">
          <source>In the multi-table inheritance situation, it doesn&amp;rsquo;t make sense for a child class to inherit from its parent&amp;rsquo;s &lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt; class. All the &lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt; options have already been applied to the parent class and applying them again would normally only lead to contradictory behavior (this is in contrast with the abstract base class case, where the base class doesn&amp;rsquo;t exist in its own right).</source>
          <target state="translated">在多表继承的情况下，子类从其父级的&lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt;类继承是没有意义的。所有的&lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt;选项已经被应用到父类，并且再次应用它们通常只会导致矛盾的行为（这与抽象基类情况相反，在抽象基类情况下，基类本身不存在）。</target>
        </trans-unit>
        <trans-unit id="bb58183bc0706efe78380abe5cb2057a726424ab" translate="yes" xml:space="preserve">
          <source>In the preceding example, the &lt;code&gt;ModelAdmin&lt;/code&gt; class doesn&amp;rsquo;t define any custom values (yet). As a result, the default admin interface will be provided. If you are happy with the default admin interface, you don&amp;rsquo;t need to define a &lt;code&gt;ModelAdmin&lt;/code&gt; object at all &amp;ndash; you can register the model class without providing a &lt;code&gt;ModelAdmin&lt;/code&gt; description. The preceding example could be simplified to:</source>
          <target state="translated">在前面的示例中， &lt;code&gt;ModelAdmin&lt;/code&gt; 类尚未定义任何自定义值。结果，将提供默认的管理界面。如果您对默认的管理界面感到满意，则完全不需要定义 &lt;code&gt;ModelAdmin&lt;/code&gt; 对象-您可以在不提供 &lt;code&gt;ModelAdmin&lt;/code&gt; 描述的情况下注册模型类。前面的示例可以简化为：</target>
        </trans-unit>
        <trans-unit id="d4e2b35778a30a864406e14b018f76e39bbabff2" translate="yes" xml:space="preserve">
          <source>In the previous example, &lt;code&gt;do_comment()&lt;/code&gt; discarded everything between &lt;code&gt;{% comment %}&lt;/code&gt; and &lt;code&gt;{% endcomment %}&lt;/code&gt;. Instead of doing that, it&amp;rsquo;s possible to do something with the code between block tags.</source>
          <target state="translated">在前面的示例中， &lt;code&gt;do_comment()&lt;/code&gt; 丢弃了 &lt;code&gt;{% comment %}&lt;/code&gt; 和 &lt;code&gt;{% endcomment %}&lt;/code&gt; 。除了这样做，还可以对块标记之间的代码做一些事情。</target>
        </trans-unit>
        <trans-unit id="16349fd6d21ff8a2e6a4c0856997b30ec2b6e166" translate="yes" xml:space="preserve">
          <source>In the rendered HTML, formsets include a prefix on each field&amp;rsquo;s name. By default, the prefix is &lt;code&gt;'form'&lt;/code&gt;, but it can be customized using the formset&amp;rsquo;s &lt;code&gt;prefix&lt;/code&gt; argument.</source>
          <target state="translated">在呈现的HTML中，表单集在每个字段的名称上都包含一个前缀。默认情况下，前缀为 &lt;code&gt;'form'&lt;/code&gt; ，但可以使用formset的 &lt;code&gt;prefix&lt;/code&gt; 参数自定义。</target>
        </trans-unit>
        <trans-unit id="200e10196ad98eae959477f8c80a67aaf04f93e7" translate="yes" xml:space="preserve">
          <source>In the resulting &lt;code&gt;.po&lt;/code&gt; file, the string will then appear as often as there are different contextual markers for the same string (the context will appear on the &lt;code&gt;msgctxt&lt;/code&gt; line), allowing the translator to give a different translation for each of them.</source>
          <target state="translated">在生成的 &lt;code&gt;.po&lt;/code&gt; 文件中，该字符串将出现的频率与相同字符串的上下文标记不同（上下文将显示在 &lt;code&gt;msgctxt&lt;/code&gt; 行上）的频率相同，从而允许翻译人员为每个字符串提供不同的翻译。</target>
        </trans-unit>
        <trans-unit id="6f86e54811f7e97ae54dd57549dcb8faa44a8dcb" translate="yes" xml:space="preserve">
          <source>In the same vein as the 404 and 500 views, Django has a view to handle 403 Forbidden errors. If a view results in a 403 exception then Django will, by default, call the view &lt;code&gt;django.views.defaults.permission_denied&lt;/code&gt;.</source>
          <target state="translated">与404和500视图相同，Django具有处理403 Forbidden错误的视图。如果视图导致403异常，则Django默认会调用视图 &lt;code&gt;django.views.defaults.permission_denied&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6f25c44dc9756ac574ee333e0116c1d550b05f1" translate="yes" xml:space="preserve">
          <source>In the second example, the first filter restricts the queryset to all those blogs linked to entries with &lt;em&gt;&amp;ldquo;Lennon&amp;rdquo;&lt;/em&gt; in the headline. The second filter restricts the set of blogs &lt;em&gt;further&lt;/em&gt; to those that are also linked to entries that were published in 2008. The entries selected by the second filter may or may not be the same as the entries in the first filter. We are filtering the &lt;code&gt;Blog&lt;/code&gt; items with each filter statement, not the &lt;code&gt;Entry&lt;/code&gt; items.</source>
          <target state="translated">在第二个示例中，第一个过滤器将查询集限制为所有链接到标题中带有&lt;em&gt;&amp;ldquo; Lennon&amp;rdquo;的&lt;/em&gt;条目的博客。第二个过滤器将博客集&lt;em&gt;进一步&lt;/em&gt;限制为也链接到2008年发布的条目的博客。第二个过滤器选择的条目可能与第一个过滤器的条目相同或不同。我们将使用每个过滤器语句而不是 &lt;code&gt;Entry&lt;/code&gt; 项来过滤 &lt;code&gt;Blog&lt;/code&gt; 项。</target>
        </trans-unit>
        <trans-unit id="b14fb50e61cd86af2c3d8c9d512bc73616482c1e" translate="yes" xml:space="preserve">
          <source>In the simplest case, all these sections get lumped together into one &lt;code&gt;sitemap.xml&lt;/code&gt;, but it&amp;rsquo;s also possible to use the framework to generate a sitemap index that references individual sitemap files, one per section. (See &lt;a href=&quot;#creating-a-sitemap-index&quot;&gt;Creating a sitemap index&lt;/a&gt; below.)</source>
          <target state="translated">在最简单的情况下，所有这些部分都集中到一个 &lt;code&gt;sitemap.xml&lt;/code&gt; 中，但是也可以使用该框架来生成引用各个站点地图文件的站点地图索引，每个部分一个。（请参见下面的&lt;a href=&quot;#creating-a-sitemap-index&quot;&gt;创建站点地图索引&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="e1ac5a12917c8c24fac2334237392eba54ee1052" translate="yes" xml:space="preserve">
          <source>In the simplest case, if no custom pluralization is needed, this returns &lt;code&gt;false&lt;/code&gt; for the integer &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;true&lt;/code&gt; for all other numbers.</source>
          <target state="translated">在最简单的情况下，如果不需要定制的多元化，这将返回 &lt;code&gt;false&lt;/code&gt; 的整数 &lt;code&gt;1&lt;/code&gt; 和 &lt;code&gt;true&lt;/code&gt; 对所有其他号码。</target>
        </trans-unit>
        <trans-unit id="8a3de0040189995be2cf2593da6e670d68408010" translate="yes" xml:space="preserve">
          <source>In the template &lt;code&gt;list.html&lt;/code&gt;, you can include navigation between pages in the same way as in the template for the &lt;code&gt;ListView&lt;/code&gt; above.</source>
          <target state="translated">在模板 &lt;code&gt;list.html&lt;/code&gt; 中，您可以以与上述 &lt;code&gt;ListView&lt;/code&gt; 模板相同的方式在页面之间包括导航。</target>
        </trans-unit>
        <trans-unit id="112593952263d8950c97e9372f1328eef1054b9d" translate="yes" xml:space="preserve">
          <source>In the terminal, we can run our test:</source>
          <target state="translated">在终端中,我们可以运行我们的测试。</target>
        </trans-unit>
        <trans-unit id="1349bc91f2f8bcface3eb94b3617ded0896f7cda" translate="yes" xml:space="preserve">
          <source>In the usual initialization process, the &lt;code&gt;ready&lt;/code&gt; method is only called once by Django. But in some corner cases, particularly in tests which are fiddling with installed applications, &lt;code&gt;ready&lt;/code&gt; might be called more than once. In that case, either write idempotent methods, or put a flag on your &lt;code&gt;AppConfig&lt;/code&gt; classes to prevent re-running code which should be executed exactly one time.</source>
          <target state="translated">在通常的初始化过程中，Django只调用一次 &lt;code&gt;ready&lt;/code&gt; 方法。但是在某些特殊情况下，尤其是在摆弄已安装的应用程序的测试中， &lt;code&gt;ready&lt;/code&gt; 可能会被多次调用。在这种情况下，请编写幂等方法，或者在 &lt;code&gt;AppConfig&lt;/code&gt; 类上放置标志以防止重新运行应恰好执行一次的代码。</target>
        </trans-unit>
        <trans-unit id="a6b1551e57f5bae10f916d69e9178bd6c7f54504" translate="yes" xml:space="preserve">
          <source>In the view, ensure that you don&amp;rsquo;t include &lt;code&gt;created_by&lt;/code&gt; in the list of fields to edit, and override &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ModelFormMixin.form_valid&quot;&gt;&lt;code&gt;form_valid()&lt;/code&gt;&lt;/a&gt; to add the user:</source>
          <target state="translated">在视图中，确保您没有在要编辑的字段列表中包括 &lt;code&gt;created_by&lt;/code&gt; ，&lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ModelFormMixin.form_valid&quot;&gt; &lt;code&gt;form_valid()&lt;/code&gt; &lt;/a&gt;重写form_valid（）以添加用户：</target>
        </trans-unit>
        <trans-unit id="369aea273c56bb856861501dbf97173cbd5b7309" translate="yes" xml:space="preserve">
          <source>In these cases, Django&amp;rsquo;s admin lets you write and register &amp;ldquo;actions&amp;rdquo; &amp;ndash; functions that get called with a list of objects selected on the change list page.</source>
          <target state="translated">在这种情况下，Django的管理员可以让您编写和注册&amp;ldquo;动作&amp;rdquo;，这些动作通过在更改列表页面上选择的对象列表进行调用。</target>
        </trans-unit>
        <trans-unit id="ff28e3a2e690b47e59ebb25d9ed8baa34f438420" translate="yes" xml:space="preserve">
          <source>In these cases, you can always access the database directly, routing around the model layer entirely.</source>
          <target state="translated">在这些情况下,你总是可以直接访问数据库,完全绕过模型层的路由。</target>
        </trans-unit>
        <trans-unit id="fbbd19f07f9cef20e603e35db722408992fae9b4" translate="yes" xml:space="preserve">
          <source>In these cases, you can configure Django&amp;rsquo;s settings manually. Do this by calling:</source>
          <target state="translated">在这些情况下，您可以手动配置Django的设置。为此，请致电：</target>
        </trans-unit>
        <trans-unit id="704de23b31a120b2bba2d3638dd6200c1609b04d" translate="yes" xml:space="preserve">
          <source>In these cases, you can register to receive signals sent only by particular senders. In the case of &lt;a href=&quot;../ref/signals#django.db.models.signals.pre_save&quot;&gt;&lt;code&gt;django.db.models.signals.pre_save&lt;/code&gt;&lt;/a&gt;, the sender will be the model class being saved, so you can indicate that you only want signals sent by some model:</source>
          <target state="translated">在这些情况下，您可以注册以接收仅由特定发送者发送的信号。在&lt;a href=&quot;../ref/signals#django.db.models.signals.pre_save&quot;&gt; &lt;code&gt;django.db.models.signals.pre_save&lt;/code&gt; &lt;/a&gt;的情况下，发送者将是要保存的模型类，因此您可以指示只希望某些模型发送的信号：</target>
        </trans-unit>
        <trans-unit id="b7960a550f468b9dc5e94875f3e62a9969b92b99" translate="yes" xml:space="preserve">
          <source>In this above example, the &lt;code&gt;cleaned_data&lt;/code&gt; value for &lt;code&gt;nick_name&lt;/code&gt; is set to an empty string, because &lt;code&gt;nick_name&lt;/code&gt; is &lt;code&gt;CharField&lt;/code&gt;, and &lt;code&gt;CharField&lt;/code&gt;s treat empty values as an empty string. Each field type knows what its &amp;ldquo;blank&amp;rdquo; value is &amp;ndash; e.g., for &lt;code&gt;DateField&lt;/code&gt;, it&amp;rsquo;s &lt;code&gt;None&lt;/code&gt; instead of the empty string. For full details on each field&amp;rsquo;s behavior in this case, see the &amp;ldquo;Empty value&amp;rdquo; note for each field in the &amp;ldquo;Built-in &lt;code&gt;Field&lt;/code&gt; classes&amp;rdquo; section below.</source>
          <target state="translated">在上面的示例中， &lt;code&gt;nick_name&lt;/code&gt; 的 &lt;code&gt;cleaned_data&lt;/code&gt; 值设置为空字符串，因为 &lt;code&gt;nick_name&lt;/code&gt; 是 &lt;code&gt;CharField&lt;/code&gt; ，并且 &lt;code&gt;CharField&lt;/code&gt; 将空值视为空字符串。每个字段类型都知道其&amp;ldquo;空白&amp;rdquo;值是什么-例如，对于 &lt;code&gt;DateField&lt;/code&gt; ，它是 &lt;code&gt;None&lt;/code&gt; 而不是空字符串。有关这种情况下每个字段行为的完整详细信息，请参见下面的&amp;ldquo;内置 &lt;code&gt;Field&lt;/code&gt; 类&amp;rdquo;部分中每个字段的&amp;ldquo;空值&amp;rdquo;注释。</target>
        </trans-unit>
        <trans-unit id="d643c703ff7b79f6479ff9521d4628ae8af455d8" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;poly&lt;/code&gt; is the geographic field, &lt;a href=&quot;geoquerysets#std:fieldlookup-gis-contains&quot;&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; is the spatial lookup type, &lt;code&gt;pnt&lt;/code&gt; is the parameter (which may be a &lt;a href=&quot;geos#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; object or a string of GeoJSON , WKT, or HEXEWKB), and &lt;code&gt;rst&lt;/code&gt; is a &lt;a href=&quot;gdal#django.contrib.gis.gdal.GDALRaster&quot;&gt;&lt;code&gt;GDALRaster&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">在这种情况下， &lt;code&gt;poly&lt;/code&gt; 是地理字段，&lt;a href=&quot;geoquerysets#std:fieldlookup-gis-contains&quot;&gt; &lt;code&gt;contains&lt;/code&gt; &lt;/a&gt;是空间查找类型， &lt;code&gt;pnt&lt;/code&gt; 是参数（可以是&lt;a href=&quot;geos#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt;对象或GeoJSON，WKT或HEXEWKB的字符串），而 &lt;code&gt;rst&lt;/code&gt; 是&lt;a href=&quot;gdal#django.contrib.gis.gdal.GDALRaster&quot;&gt; &lt;code&gt;GDALRaster&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="7445c15f895769d09cc852511696e2bbac4a2530" translate="yes" xml:space="preserve">
          <source>In this case, a caching mechanism (such as Django&amp;rsquo;s own cache middleware) will cache a separate version of the page for each unique user-agent.</source>
          <target state="translated">在这种情况下，缓存机制（例如Django自己的缓存中间件）将为每个唯一的用户代理缓存页面的单独版本。</target>
        </trans-unit>
        <trans-unit id="dce53faed5d5616c30db50952cf57b2835a3fdb3" translate="yes" xml:space="preserve">
          <source>In this case, both the tag and the filter will see the translated string, so they don&amp;rsquo;t need to be aware of translations.</source>
          <target state="translated">在这种情况下，标签和过滤器都将看到翻译后的字符串，因此他们不需要知道翻译。</target>
        </trans-unit>
        <trans-unit id="e088f70ea4095e39b7329f3fd37bb777703e1375" translate="yes" xml:space="preserve">
          <source>In this case, migrations pertaining to the &lt;code&gt;blog&lt;/code&gt; app will be contained in the &lt;code&gt;blog.db_migrations&lt;/code&gt; package.</source>
          <target state="translated">在这种情况下，与 &lt;code&gt;blog&lt;/code&gt; 应用程序有关的迁移将包含在 &lt;code&gt;blog.db_migrations&lt;/code&gt; 包中。</target>
        </trans-unit>
        <trans-unit id="e0019695fe483255859741edb13cf942f6859d9f" translate="yes" xml:space="preserve">
          <source>In this case, the Apache configuration should look like this:</source>
          <target state="translated">在这种情况下,Apache的配置应该是这样的。</target>
        </trans-unit>
        <trans-unit id="08e37f4fa83a842b83cf7349cedf3295bb5c2ac3" translate="yes" xml:space="preserve">
          <source>In this case, the Oracle backend will use a separate &lt;code&gt;SELECT&lt;/code&gt; query to retrieve &lt;code&gt;AutoField&lt;/code&gt; values.</source>
          <target state="translated">在这种情况下，Oracle后端将使用单独的 &lt;code&gt;SELECT&lt;/code&gt; 查询来检索 &lt;code&gt;AutoField&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="2ec5cb6330ac92777b17bc2333657f1300336af6" translate="yes" xml:space="preserve">
          <source>In this case, the lazy translations in &lt;code&gt;result&lt;/code&gt; will only be converted to strings when &lt;code&gt;result&lt;/code&gt; itself is used in a string (usually at template rendering time).</source>
          <target state="translated">在这种情况下，仅当在字符串中使用 &lt;code&gt;result&lt;/code&gt; 本身时（通常在模板渲染时）， &lt;code&gt;result&lt;/code&gt; 中的惰性翻译才会转换为字符串。</target>
        </trans-unit>
        <trans-unit id="f80ae9b1fb32feea2c4dd344be42cee331d89abf" translate="yes" xml:space="preserve">
          <source>In this case, the subquery must only return a single column &lt;em&gt;and&lt;/em&gt; a single row: the email address of the most recently created comment.</source>
          <target state="translated">在这种情况下，子查询必须仅返回单列&lt;em&gt;和&lt;/em&gt;单行：最近创建的注释的电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="bbeb898add7eb688c2d43a04bafad361bbad9894" translate="yes" xml:space="preserve">
          <source>In this case, the subquery must use &lt;a href=&quot;querysets#django.db.models.query.QuerySet.values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; to return only a single column: the primary key of the post.</source>
          <target state="translated">在这种情况下，子查询必须使用&lt;a href=&quot;querysets#django.db.models.query.QuerySet.values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt;仅返回单列：帖子的主键。</target>
        </trans-unit>
        <trans-unit id="fd746e7696a4d17c8dc094df4d9ebfa894053b5d" translate="yes" xml:space="preserve">
          <source>In this case, what&amp;rsquo;s needed is something - and in practice, often a collection of things - to improve the code&amp;rsquo;s performance without, or only minimally, affecting its behavior.</source>
          <target state="translated">在这种情况下，需要的是一些东西-实际上，通常是一系列东西-可以提高代码的性能，而又不会或仅最小程度地影响其行为。</target>
        </trans-unit>
        <trans-unit id="881194f58bb0fde296017190a9bf68cd84e48df2" translate="yes" xml:space="preserve">
          <source>In this case, you could write the &lt;code&gt;post()&lt;/code&gt; method yourself, keeping &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#DetailView&quot;&gt;&lt;code&gt;DetailView&lt;/code&gt;&lt;/a&gt; as the only generic functionality, although writing &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; handling code involves a lot of duplication.</source>
          <target state="translated">在这种情况下，您可以自己编写 &lt;code&gt;post()&lt;/code&gt; 方法，将&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#DetailView&quot;&gt; &lt;code&gt;DetailView&lt;/code&gt; &lt;/a&gt;保留为唯一的通用功能，尽管编写&lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;处理代码涉及很多重复。</target>
        </trans-unit>
        <trans-unit id="2fa3b713cccf7ea4ad5e0fd4a5c02eaa0d614140" translate="yes" xml:space="preserve">
          <source>In this case, you could write the &lt;code&gt;post()&lt;/code&gt; method yourself, keeping &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#DetailView&quot;&gt;&lt;code&gt;DetailView&lt;/code&gt;&lt;/a&gt; as the only generic functionality, although writing &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; handling code involves a lot of duplication.</source>
          <target state="translated">在这种情况下，您可以自己编写 &lt;code&gt;post()&lt;/code&gt; 方法，将&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#DetailView&quot;&gt; &lt;code&gt;DetailView&lt;/code&gt; &lt;/a&gt;保留为唯一的通用功能，尽管编写&lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;处理代码涉及很多重复。</target>
        </trans-unit>
        <trans-unit id="b6756abb4e1060efdbcbb43826dc10b83e3f6800" translate="yes" xml:space="preserve">
          <source>In this case, you should leave both &lt;a href=&quot;settings#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;settings#std:setting-PORT&quot;&gt;&lt;code&gt;PORT&lt;/code&gt;&lt;/a&gt; empty. However, if you don&amp;rsquo;t use a &lt;code&gt;tnsnames.ora&lt;/code&gt; file or a similar naming method and want to connect using the SID (&amp;ldquo;xe&amp;rdquo; in this example), then fill in both &lt;a href=&quot;settings#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;settings#std:setting-PORT&quot;&gt;&lt;code&gt;PORT&lt;/code&gt;&lt;/a&gt; like so:</source>
          <target state="translated">在这种情况下，您应将&lt;a href=&quot;settings#std:setting-HOST&quot;&gt; &lt;code&gt;HOST&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;settings#std:setting-PORT&quot;&gt; &lt;code&gt;PORT&lt;/code&gt; &lt;/a&gt;保留为空。但是，如果您不使用 &lt;code&gt;tnsnames.ora&lt;/code&gt; 文件或类似的命名方法，而是想使用SID（在此示例中为&amp;ldquo; xe&amp;rdquo;）进行连接，则请像下面这样填写&lt;a href=&quot;settings#std:setting-HOST&quot;&gt; &lt;code&gt;HOST&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;settings#std:setting-PORT&quot;&gt; &lt;code&gt;PORT&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f7de94b0d76d606f984d3f9448c8656b1164ffb9" translate="yes" xml:space="preserve">
          <source>In this case, you&amp;rsquo;d have to create &lt;code&gt;subject.txt&lt;/code&gt; and &lt;code&gt;message.txt&lt;/code&gt; template files for both the LJWorld.com and Lawrence.com template directories. That gives you more flexibility, but it&amp;rsquo;s also more complex.</source>
          <target state="translated">在这种情况下，您必须为LJWorld.com和Lawrence.com模板目录都创建 &lt;code&gt;subject.txt&lt;/code&gt; 和 &lt;code&gt;message.txt&lt;/code&gt; 模板文件。这为您提供了更大的灵活性，但同时也更加复杂。</target>
        </trans-unit>
        <trans-unit id="5fde808145c2d08c0cba263811b659a0d1ffcce9" translate="yes" xml:space="preserve">
          <source>In this code, if the validation error is raised, the form will display an error message at the top of the form (normally) describing the problem.</source>
          <target state="translated">在这段代码中,如果验证错误被提出,表单将在表单顶部显示一个错误信息(通常),描述问题。</target>
        </trans-unit>
        <trans-unit id="526cbb8057d25716d73655e57b33c0157d33b6a0" translate="yes" xml:space="preserve">
          <source>In this code, if the validation error is raised, the form will display an error message at the top of the form (normally) describing the problem. Such errors are non-field errors, which are displayed in the template with &lt;code&gt;{{ form.non_field_errors }}&lt;/code&gt;.</source>
          <target state="translated">在此代码中，如果引发验证错误，则表单将在表单顶部显示一条错误消息（通常），以描述问题。此类错误是非字段错误，在模板中显示为 &lt;code&gt;{{ form.non_field_errors }}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffce769628ac27f44d87f42df5862f24acc276dd" translate="yes" xml:space="preserve">
          <source>In this dictionary, the keys are the field names, and the values are lists of strings representing the error messages. The error messages are stored in lists because a field can have multiple error messages.</source>
          <target state="translated">在这个字典中,键是字段名,值是代表错误信息的字符串列表。错误信息存储在列表中,因为一个字段可以有多个错误信息。</target>
        </trans-unit>
        <trans-unit id="a623564b4f28f417a216cea862c50164191f61c6" translate="yes" xml:space="preserve">
          <source>In this dictionary, the keys are the field names, which correspond to the attributes in your &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; class. The values are the data you&amp;rsquo;re trying to validate. These will usually be strings, but there&amp;rsquo;s no requirement that they be strings; the type of data you pass depends on the &lt;a href=&quot;fields#django.forms.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt;, as we&amp;rsquo;ll see in a moment.</source>
          <target state="translated">在此字典中，键是字段名称，该字段名称与&lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;类中的属性相对应。这些值是您要验证的数据。这些通常是字符串，但不要求它们是字符串。您传递的数据类型取决于&lt;a href=&quot;fields#django.forms.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;，稍后我们将看到。</target>
        </trans-unit>
        <trans-unit id="b1587bc0110b474aeaac0785a98f42c3c6c762ba" translate="yes" xml:space="preserve">
          <source>In this document we discuss how to activate, use, and customize Django&amp;rsquo;s admin interface.</source>
          <target state="translated">在本文档中，我们讨论如何激活，使用和自定义Django的管理界面。</target>
        </trans-unit>
        <trans-unit id="b0926719287aa421a1d56b0909a1fc7f781d1d2c" translate="yes" xml:space="preserve">
          <source>In this example the number of objects is passed to the translation languages as the &lt;code&gt;count&lt;/code&gt; variable.</source>
          <target state="translated">在此示例中，对象数作为 &lt;code&gt;count&lt;/code&gt; 变量传递到翻译语言。</target>
        </trans-unit>
        <trans-unit id="656eac437a8a706f5a50f4706d81cd4556322bcc" translate="yes" xml:space="preserve">
          <source>In this example we specify that the &lt;code&gt;auth.Permission&lt;/code&gt; object with the PK 27 has a foreign key to the &lt;code&gt;contenttypes.ContentType&lt;/code&gt; instance with the PK 9.</source>
          <target state="translated">在此示例中，我们指定带有PK 27 的 &lt;code&gt;auth.Permission&lt;/code&gt; 对象具有带有PK 9 的 &lt;code&gt;contenttypes.ContentType&lt;/code&gt; 实例的外键。</target>
        </trans-unit>
        <trans-unit id="bf1663e1b601ad090c33e868ff2147fe08cffda3" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;ContactFormWithPriority&lt;/code&gt; contains all the fields from &lt;code&gt;ContactForm&lt;/code&gt;, plus an additional field, &lt;code&gt;priority&lt;/code&gt;. The &lt;code&gt;ContactForm&lt;/code&gt; fields are ordered first:</source>
          <target state="translated">在这个例子中， &lt;code&gt;ContactFormWithPriority&lt;/code&gt; 包含所有字段 &lt;code&gt;ContactForm&lt;/code&gt; ，外加场， &lt;code&gt;priority&lt;/code&gt; 。该 &lt;code&gt;ContactForm&lt;/code&gt; 的一个领域首先下令：</target>
        </trans-unit>
        <trans-unit id="2209b80ce38841507206cfe8aa0b119a7ec9da3b" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;a.save()&lt;/code&gt; will not be undone in the case where &lt;code&gt;b.save()&lt;/code&gt; raises an exception.</source>
          <target state="translated">在这个例子中， &lt;code&gt;a.save()&lt;/code&gt; 将不会在所述情况下是撤消 &lt;code&gt;b.save()&lt;/code&gt; 引发一个例外。</target>
        </trans-unit>
        <trans-unit id="c1edf53e67d2069bdbedbd1cbf50a2d693ff2e07" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;my_view&lt;/code&gt; will be accessed at &lt;code&gt;/admin/myapp/mymodel/my_view/&lt;/code&gt; (assuming the admin URLs are included at &lt;code&gt;/admin/&lt;/code&gt;.)</source>
          <target state="translated">在这个例子中， &lt;code&gt;my_view&lt;/code&gt; 将在被访问 &lt;code&gt;/admin/myapp/mymodel/my_view/&lt;/code&gt; （假设管理员网址被包括在 &lt;code&gt;/admin/&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="051a23c85ac542ba06c65f27cebe7e4b3a60e68a" translate="yes" xml:space="preserve">
          <source>In this example, Django looks up the URL of the page to which the user will be redirected in the &lt;code&gt;redirect_to&lt;/code&gt; context variable.</source>
          <target state="translated">在此示例中，Django在 &lt;code&gt;redirect_to&lt;/code&gt; 上下文变量中查找将用户重定向到的页面的URL 。</target>
        </trans-unit>
        <trans-unit id="d1d03cde60eb57ef15a12664d31c7a72da6e28c3" translate="yes" xml:space="preserve">
          <source>In this example, Memcached is available through a local Unix socket file &lt;code&gt;/tmp/memcached.sock&lt;/code&gt; using the &lt;code&gt;python-memcached&lt;/code&gt; binding:</source>
          <target state="translated">在此示例中，可以使用 &lt;code&gt;python-memcached&lt;/code&gt; 绑定通过本地Unix套接字文件 &lt;code&gt;/tmp/memcached.sock&lt;/code&gt; 使用Memcached：</target>
        </trans-unit>
        <trans-unit id="433fbee087dcc328bf7db214b22efaf3bd50d02f" translate="yes" xml:space="preserve">
          <source>In this example, Memcached is running on localhost (127.0.0.1) port 11211, using the &lt;code&gt;python-memcached&lt;/code&gt; binding:</source>
          <target state="translated">在此示例中，Memcached使用 &lt;code&gt;python-memcached&lt;/code&gt; 绑定在本地主机（127.0.0.1）端口11211上运行：</target>
        </trans-unit>
        <trans-unit id="84f133ecf9ca09837434e3890d3cef12ca4fed57" translate="yes" xml:space="preserve">
          <source>In this example, a 404 to any URL ending with &lt;code&gt;.php&lt;/code&gt; or &lt;code&gt;.cgi&lt;/code&gt; will &lt;em&gt;not&lt;/em&gt; be reported. Neither will any URL starting with &lt;code&gt;/phpmyadmin/&lt;/code&gt;.</source>
          <target state="translated">在此示例中，将&lt;em&gt;不会&lt;/em&gt;报告到以 &lt;code&gt;.php&lt;/code&gt; 或 &lt;code&gt;.cgi&lt;/code&gt; 结尾的URL的404 。以 &lt;code&gt;/phpmyadmin/&lt;/code&gt; 开头的URL也不会。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="195054f639f8e715f1022ab811617e165c16a511" translate="yes" xml:space="preserve">
          <source>In this example, a &lt;code&gt;Place&lt;/code&gt; optionally can be a &lt;code&gt;Restaurant&lt;/code&gt;:</source>
          <target state="translated">在此示例中， &lt;code&gt;Place&lt;/code&gt; 可以是 &lt;code&gt;Restaurant&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="6756ca7fc7c0d76c6fb4aabb06e2a4158f57b981" translate="yes" xml:space="preserve">
          <source>In this example, a filesystem backend is being configured with a timeout of 60 seconds, and a maximum capacity of 1000 items:</source>
          <target state="translated">在这个例子中,正在配置一个文件系统后台,超时时间为60秒,最大容量为1000项。</target>
        </trans-unit>
        <trans-unit id="03c005782eb9d896545ab46f7dff017dd668f6aa" translate="yes" xml:space="preserve">
          <source>In this example, an &lt;code&gt;Article&lt;/code&gt; can be published in multiple &lt;code&gt;Publication&lt;/code&gt; objects, and a &lt;code&gt;Publication&lt;/code&gt; has multiple &lt;code&gt;Article&lt;/code&gt; objects:</source>
          <target state="translated">在此示例中， &lt;code&gt;Article&lt;/code&gt; 可以在多个 &lt;code&gt;Publication&lt;/code&gt; 对象中发布，并且 &lt;code&gt;Publication&lt;/code&gt; 具有多个 &lt;code&gt;Article&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="b684f5c5a6b44db149a6fc644abf91fa5ab5f261" translate="yes" xml:space="preserve">
          <source>In this example, default settings are taken from &lt;code&gt;myapp_defaults&lt;/code&gt;, and the &lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; setting is set to &lt;code&gt;True&lt;/code&gt;, regardless of its value in &lt;code&gt;myapp_defaults&lt;/code&gt;:</source>
          <target state="translated">在此示例中，默认设置来自 &lt;code&gt;myapp_defaults&lt;/code&gt; ，并且&lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;设置设置为 &lt;code&gt;True&lt;/code&gt; ，无论其在 &lt;code&gt;myapp_defaults&lt;/code&gt; 中的值如何：</target>
        </trans-unit>
        <trans-unit id="b161f5e802b80cd394d6cf5bffa10986e5345e41" translate="yes" xml:space="preserve">
          <source>In this example, even if &lt;code&gt;generate_relationships()&lt;/code&gt; causes a database error by breaking an integrity constraint, you can execute queries in &lt;code&gt;add_children()&lt;/code&gt;, and the changes from &lt;code&gt;create_parent()&lt;/code&gt; are still there and bound to the same transaction. Note that any operations attempted in &lt;code&gt;generate_relationships()&lt;/code&gt; will already have been rolled back safely when &lt;code&gt;handle_exception()&lt;/code&gt; is called, so the exception handler can also operate on the database if necessary.</source>
          <target state="translated">在此示例中，即使 &lt;code&gt;generate_relationships()&lt;/code&gt; 通过破坏完整性约束导致数据库错误，您也可以在 &lt;code&gt;add_children()&lt;/code&gt; 中执行查询，并且 &lt;code&gt;create_parent()&lt;/code&gt; 的更改仍然存在并绑定到同一事务。请注意，在调用 &lt;code&gt;handle_exception()&lt;/code&gt; 时，在 &lt;code&gt;generate_relationships()&lt;/code&gt; 中尝试的任何操作将已经安全地回滚，因此，如果需要，异常处理程序也可以在数据库上进行操作。</target>
        </trans-unit>
        <trans-unit id="f4befaaa872f56a0fce53c6c75f7fb67a6d8c1ea" translate="yes" xml:space="preserve">
          <source>In this example, even if &lt;code&gt;generate_relationships()&lt;/code&gt; causes a database error by breaking an integrity constraint, you can execute queries in &lt;code&gt;add_children()&lt;/code&gt;, and the changes from &lt;code&gt;create_parent()&lt;/code&gt; are still there. Note that any operations attempted in &lt;code&gt;generate_relationships()&lt;/code&gt; will already have been rolled back safely when &lt;code&gt;handle_exception()&lt;/code&gt; is called, so the exception handler can also operate on the database if necessary.</source>
          <target state="translated">在此示例中，即使 &lt;code&gt;generate_relationships()&lt;/code&gt; 通过破坏完整性约束导致数据库错误，您也可以在 &lt;code&gt;add_children()&lt;/code&gt; 中执行查询，并且对 &lt;code&gt;create_parent()&lt;/code&gt; 的更改仍然存在。请注意，在调用 &lt;code&gt;handle_exception()&lt;/code&gt; 时，在 &lt;code&gt;generate_relationships()&lt;/code&gt; 中尝试的任何操作将已经安全地回滚，因此，如果需要，异常处理程序也可以在数据库上进行操作。</target>
        </trans-unit>
        <trans-unit id="df6ab84b235e4d9ea5612f6a9d9413066aa77f02" translate="yes" xml:space="preserve">
          <source>In this example, every instance of &lt;code&gt;ProtectedView&lt;/code&gt; will have login protection. These examples use &lt;code&gt;login_required&lt;/code&gt;, however, the same behavior can be obtained by using &lt;a href=&quot;../auth/default#django.contrib.auth.mixins.LoginRequiredMixin&quot;&gt;&lt;code&gt;LoginRequiredMixin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此示例中，每个 &lt;code&gt;ProtectedView&lt;/code&gt; 实例都将具有登录保护。这些示例使用 &lt;code&gt;login_required&lt;/code&gt; ，但是，可以通过使用&lt;a href=&quot;../auth/default#django.contrib.auth.mixins.LoginRequiredMixin&quot;&gt; &lt;code&gt;LoginRequiredMixin&lt;/code&gt; &lt;/a&gt;获得相同的行为。</target>
        </trans-unit>
        <trans-unit id="2a8d54516eb2ddf93c0730193ef9e5ff2275ee15" translate="yes" xml:space="preserve">
          <source>In this example, for a request to &lt;code&gt;/blog/2005/&lt;/code&gt;, Django will call &lt;code&gt;views.year_archive(request, year=2005, foo='bar')&lt;/code&gt;.</source>
          <target state="translated">在此示例中，对于对 &lt;code&gt;/blog/2005/&lt;/code&gt; 的请求，Django将调用 &lt;code&gt;views.year_archive(request, year=2005, foo='bar')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3417d8eb44afe1e1d939759264bc4ffae54889e" translate="yes" xml:space="preserve">
          <source>In this example, only the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; attributes of each model will be serialized. The primary key is always serialized as the &lt;code&gt;pk&lt;/code&gt; element in the resulting output; it never appears in the &lt;code&gt;fields&lt;/code&gt; part.</source>
          <target state="translated">在此示例中，将仅序列化每个模型的 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;size&lt;/code&gt; 属性。主键始终在结果输出中序列化为 &lt;code&gt;pk&lt;/code&gt; 元素；它永远不会出现在 &lt;code&gt;fields&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="8067d8a8c40ae0f8c2ce14da99d61f4b9966a75a" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;a href=&quot;builtins#std:templatetag-block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; tag defines three blocks that child templates can fill in. All the &lt;a href=&quot;builtins#std:templatetag-block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; tag does is to tell the template engine that a child template may override those portions of the template.</source>
          <target state="translated">在此示例中，&lt;a href=&quot;builtins#std:templatetag-block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;标签定义了三个子模板可以填充的&lt;a href=&quot;builtins#std:templatetag-block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;。所有block标签所做的是告诉模板引擎子模板可以覆盖模板的那些部分。</target>
        </trans-unit>
        <trans-unit id="42619477c811cd44cc02c9355df92668fd6ed4c7" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;/credit/reports/&lt;/code&gt; URL will be handled by the &lt;code&gt;credit_views.report()&lt;/code&gt; Django view.</source>
          <target state="translated">在此示例中， &lt;code&gt;/credit/reports/&lt;/code&gt; URL将由 &lt;code&gt;credit_views.report()&lt;/code&gt; Django视图处理。</target>
        </trans-unit>
        <trans-unit id="ae3edfae11bb8f4437ccac4fa556cfddea017145" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;closepoll&lt;/code&gt; command will be made available to any project that includes the &lt;code&gt;polls&lt;/code&gt; application in &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此示例中， &lt;code&gt;closepoll&lt;/code&gt; 命令将对包含&lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 中&lt;/a&gt;的 &lt;code&gt;polls&lt;/code&gt; 应用程序的任何项目可用。</target>
        </trans-unit>
        <trans-unit id="6be3072a6fd735a0703698b0b6ac3a9cb0c9f9cc" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;first_name&lt;/code&gt; and &lt;code&gt;last_name&lt;/code&gt; fields will be linked on the change list page:</source>
          <target state="translated">在此示例中， &lt;code&gt;first_name&lt;/code&gt; 和 &lt;code&gt;last_name&lt;/code&gt; 字段将在更改列表页面上链接：</target>
        </trans-unit>
        <trans-unit id="1b687cca57779b68234d9c0e07d13e5c941f7615" translate="yes" xml:space="preserve">
          <source>In this example, the RSS feed uses a &lt;code&gt;description&lt;/code&gt; while the Atom feed uses a &lt;code&gt;subtitle&lt;/code&gt;. That&amp;rsquo;s because Atom feeds don&amp;rsquo;t provide for a feed-level &amp;ldquo;description,&amp;rdquo; but they &lt;em&gt;do&lt;/em&gt; provide for a &amp;ldquo;subtitle.&amp;rdquo;</source>
          <target state="translated">在此示例中，RSS提要使用 &lt;code&gt;description&lt;/code&gt; 而Atom提要使用 &lt;code&gt;subtitle&lt;/code&gt; 。这是因为Atom提要没有提供提要级别的&amp;ldquo;描述&amp;rdquo;，但&lt;em&gt;确实&lt;/em&gt;提供了&amp;ldquo;字幕&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="8b326223d286d7752529ad59f11428b49a503034" translate="yes" xml:space="preserve">
          <source>In this example, the URLs &lt;code&gt;/basic-admin/&lt;/code&gt; and &lt;code&gt;/advanced-admin/&lt;/code&gt; feature separate versions of the admin site &amp;ndash; using the &lt;code&gt;AdminSite&lt;/code&gt; instances &lt;code&gt;myproject.admin.basic_site&lt;/code&gt; and &lt;code&gt;myproject.admin.advanced_site&lt;/code&gt;, respectively:</source>
          <target state="translated">在此示例中，URL &lt;code&gt;/basic-admin/&lt;/code&gt; 和 &lt;code&gt;/advanced-admin/&lt;/code&gt; 具有单独的管理站点版本&amp;ndash;分别使用 &lt;code&gt;AdminSite&lt;/code&gt; 实例 &lt;code&gt;myproject.admin.basic_site&lt;/code&gt; 和 &lt;code&gt;myproject.admin.advanced_site&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a1064554cbb5e926b7642f639cedf3b4e19ccfaf" translate="yes" xml:space="preserve">
          <source>In this example, the authors will be grouped by name, so you will only get an annotated result for each &lt;em&gt;unique&lt;/em&gt; author name. This means if you have two authors with the same name, their results will be merged into a single result in the output of the query; the average will be computed as the average over the books written by both authors.</source>
          <target state="translated">在此示例中，作者将按姓名分组，因此您将仅获得每个&lt;em&gt;唯一&lt;/em&gt;作者姓名的带注释的结果。这意味着如果您有两个具有相同名字的作者，那么他们的结果将在查询的输出中合并为一个结果；平均值将计算为两位作者撰写的书籍的平均值。</target>
        </trans-unit>
        <trans-unit id="c26653b4dd28f60f5887d535fdd2c41a9be77e80" translate="yes" xml:space="preserve">
          <source>In this example, the cache is shared over Memcached instances running on IP address 172.19.26.240 and 172.19.26.242, both on port 11211:</source>
          <target state="translated">在这个例子中,缓存是通过运行在IP地址172.19.26.240和172.19.26.242上的Memcached实例共享的,这两个实例的端口都是11211。</target>
        </trans-unit>
        <trans-unit id="24eb635a0f8bca996272df8a1c655a9b31f6b71b" translate="yes" xml:space="preserve">
          <source>In this example, the cache table&amp;rsquo;s name is &lt;code&gt;my_cache_table&lt;/code&gt;:</source>
          <target state="translated">在此示例中，缓存表的名称为 &lt;code&gt;my_cache_table&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c17ed15c449f1b9508d8419ce8642c1281f27a87" translate="yes" xml:space="preserve">
          <source>In this example, the call to &lt;code&gt;send_messages()&lt;/code&gt; opens a connection on the backend, sends the list of messages, and then closes the connection again.</source>
          <target state="translated">在此示例中，对 &lt;code&gt;send_messages()&lt;/code&gt; 的调用将在后端打开一个连接，发送消息列表，然后再次关闭该连接。</target>
        </trans-unit>
        <trans-unit id="2745c5bdedd912f241c4ebd64a703e901229f077" translate="yes" xml:space="preserve">
          <source>In this example, the change list page grid will have no links:</source>
          <target state="translated">在这个例子中,更改列表页网格将没有链接。</target>
        </trans-unit>
        <trans-unit id="c0da41921a43787015fac5f5e1c5d1dfecbbf48b" translate="yes" xml:space="preserve">
          <source>In this example, the current time zone is &lt;code&gt;&quot;Europe/Paris&quot;&lt;/code&gt;.</source>
          <target state="translated">在此示例中，当前时区为 &lt;code&gt;&quot;Europe/Paris&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="441f22ede30f09b22a95399dcf5b6f52537098a8" translate="yes" xml:space="preserve">
          <source>In this example, the methods below will be available both on &lt;code&gt;topping.pizza_set&lt;/code&gt; and on &lt;code&gt;pizza.toppings&lt;/code&gt;.</source>
          <target state="translated">在此示例中，以下方法将同时在 &lt;code&gt;topping.pizza_set&lt;/code&gt; 和 &lt;code&gt;pizza.toppings&lt;/code&gt; 上可用。</target>
        </trans-unit>
        <trans-unit id="8f5a332a5b08e40bbb5f2b850dee9e2b68a4e2cc" translate="yes" xml:space="preserve">
          <source>In this example, the tables generated by the &lt;code&gt;TablespaceExample&lt;/code&gt; model (i.e. the model table and the many-to-many table) would be stored in the &lt;code&gt;tables&lt;/code&gt; tablespace. The index for the name field and the indexes on the many-to-many table would be stored in the &lt;code&gt;indexes&lt;/code&gt; tablespace. The &lt;code&gt;data&lt;/code&gt; field would also generate an index, but no tablespace for it is specified, so it would be stored in the model tablespace &lt;code&gt;tables&lt;/code&gt; by default. The index for the &lt;code&gt;shortcut&lt;/code&gt; field would be stored in the &lt;code&gt;other_indexes&lt;/code&gt; tablespace.</source>
          <target state="translated">在这个例子中，通过将所生成的表 &lt;code&gt;TablespaceExample&lt;/code&gt; 模型（即，模型表和多对许多表）将被存储在 &lt;code&gt;tables&lt;/code&gt; 的表空间。名称字段的索引和多对多表上的 &lt;code&gt;indexes&lt;/code&gt; 将存储在索引表空间中。该 &lt;code&gt;data&lt;/code&gt; 字段也将产生一个索引，但没有表空间它被指定，所以它会被存储在模型表 &lt;code&gt;tables&lt;/code&gt; 默认情况下。 &lt;code&gt;shortcut&lt;/code&gt; 字段的索引将存储在 &lt;code&gt;other_indexes&lt;/code&gt; 表空间中。</target>
        </trans-unit>
        <trans-unit id="4ca22a91ed71c67573ea882082b60373bebf9e7a" translate="yes" xml:space="preserve">
          <source>In this example, the text &lt;code&gt;&quot;Welcome to my site.&quot;&lt;/code&gt; is marked as a translation string:</source>
          <target state="translated">在此示例中，文字 &lt;code&gt;&quot;Welcome to my site.&quot;&lt;/code&gt; 被标记为翻译字符串：</target>
        </trans-unit>
        <trans-unit id="6696a467b231cec398b49a1411c769bd9d20d750" translate="yes" xml:space="preserve">
          <source>In this example, the translation infrastructure will be passed the string &lt;code&gt;&quot;yes,no&quot;&lt;/code&gt;, not the individual strings &lt;code&gt;&quot;yes&quot;&lt;/code&gt; and &lt;code&gt;&quot;no&quot;&lt;/code&gt;. The translated string will need to contain the comma so that the filter parsing code knows how to split up the arguments. For example, a German translator might translate the string &lt;code&gt;&quot;yes,no&quot;&lt;/code&gt; as &lt;code&gt;&quot;ja,nein&quot;&lt;/code&gt; (keeping the comma intact).</source>
          <target state="translated">在此示例中，将向翻译基础结构传递字符串 &lt;code&gt;&quot;yes,no&quot;&lt;/code&gt; ，而不是各个字符串 &lt;code&gt;&quot;yes&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;no&quot;&lt;/code&gt; 。转换后的字符串将需要包含逗号，以便过滤器解析代码知道如何拆分参数。例如，德语翻译人员可能会将字符串 &lt;code&gt;&quot;yes,no&quot;&lt;/code&gt; 为 &lt;code&gt;&quot;ja,nein&quot;&lt;/code&gt; （保持逗号不变）。</target>
        </trans-unit>
        <trans-unit id="5fd9148aa6186298c2ad7e6285404bb429dd6b93" translate="yes" xml:space="preserve">
          <source>In this example, the verbose name is &lt;code&gt;&quot;first name&quot;&lt;/code&gt;:</source>
          <target state="translated">在此示例中，详细名称是 &lt;code&gt;&quot;first name&quot;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7e5ca5faa411e0bbd9bffe6ad8e33eefb0319f3a" translate="yes" xml:space="preserve">
          <source>In this example, the verbose name is &lt;code&gt;&quot;person's first name&quot;&lt;/code&gt;:</source>
          <target state="translated">在此示例中，详细名称是 &lt;code&gt;&quot;person's first name&quot;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="55078180e09b52184446a0c7fd9194404890895d" translate="yes" xml:space="preserve">
          <source>In this example, we have both the alternating odd/even rows and a &amp;ldquo;major&amp;rdquo; row every fifth row. Only the five-row cycle is reset when a category changes.</source>
          <target state="translated">在此示例中，我们既有交替的奇/偶行，又有每五行有一个&amp;ldquo;主要&amp;rdquo;行。类别更改时，仅重置五行循环。</target>
        </trans-unit>
        <trans-unit id="9bd8c087e8aa79ac85b5531899e92178206616f9" translate="yes" xml:space="preserve">
          <source>In this example, we make full use of Python generators to efficiently handle the assembly and transmission of a large CSV file:</source>
          <target state="translated">在这个例子中,我们充分利用Python生成器来有效地处理一个大型CSV文件的组装和传输。</target>
        </trans-unit>
        <trans-unit id="5e94a874a9da7d1610ef213a9b49fa74682f884e" translate="yes" xml:space="preserve">
          <source>In this example, we register the default &lt;code&gt;AdminSite&lt;/code&gt; instance &lt;code&gt;django.contrib.admin.site&lt;/code&gt; at the URL &lt;code&gt;/admin/&lt;/code&gt;</source>
          <target state="translated">在此示例中，我们在URL &lt;code&gt;/admin/&lt;/code&gt; 下注册了默认的 &lt;code&gt;AdminSite&lt;/code&gt; 实例 &lt;code&gt;django.contrib.admin.site&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba30e2bfdb84c3b1443dd255eac4c58fdcd1e451" translate="yes" xml:space="preserve">
          <source>In this example, you are outputting the week number. Keep in mind that week numbers computed by the &lt;a href=&quot;../templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; template filter with the &lt;code&gt;'W'&lt;/code&gt; format character are not always the same as those computed by &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strptime&quot;&gt;&lt;code&gt;strptime()&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;'%W'&lt;/code&gt; format string. For year 2015, for example, week numbers output by &lt;a href=&quot;../templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; are higher by one compared to those output by &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt;. There isn&amp;rsquo;t an equivalent for the &lt;code&gt;'%U'&lt;/code&gt;&lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; format string in &lt;a href=&quot;../templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt;. Therefore, you should avoid using &lt;a href=&quot;../templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; to generate URLs for &lt;code&gt;WeekArchiveView&lt;/code&gt;.</source>
          <target state="translated">在此示例中，您要输出星期数。请记住，&lt;a href=&quot;../templates/builtins#std:templatefilter-date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;模板过滤器使用 &lt;code&gt;'W'&lt;/code&gt; 格式字符计算的星期数与使用 &lt;code&gt;'%W'&lt;/code&gt; 格式字符串的&lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strptime&quot;&gt; &lt;code&gt;strptime()&lt;/code&gt; &lt;/a&gt;计算的数字不一定总是相同的。例如，对于2015年，按&lt;a href=&quot;../templates/builtins#std:templatefilter-date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;输出的周数比按&lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt;输出的周数高1 。&lt;a href=&quot;../templates/builtins#std:templatefilter-date&quot;&gt; &lt;code&gt;date&lt;/code&gt; 中&lt;/a&gt;没有 &lt;code&gt;'%U'&lt;/code&gt; &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt;格式字符串的等效项。因此，应避免使用&lt;a href=&quot;../templates/builtins#std:templatefilter-date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;来为 &lt;code&gt;WeekArchiveView&lt;/code&gt; 生成URL 。</target>
        </trans-unit>
        <trans-unit id="301b4eda5dbc41617be06964e971e23018f19d78" translate="yes" xml:space="preserve">
          <source>In this example:</source>
          <target state="translated">在这个例子中。</target>
        </trans-unit>
        <trans-unit id="2f888816d53389958e26323fa35763774e290599" translate="yes" xml:space="preserve">
          <source>In this particular case, we&amp;rsquo;re exploiting the fact that the query will already contain the &lt;code&gt;blog_blog&lt;/code&gt; table in its &lt;code&gt;FROM&lt;/code&gt; clause.</source>
          <target state="translated">在这种特殊情况下，我们利用了以下事实：查询将已经在其 &lt;code&gt;FROM&lt;/code&gt; 子句中包含 &lt;code&gt;blog_blog&lt;/code&gt; 表。</target>
        </trans-unit>
        <trans-unit id="0c635e25207802e9b8c1131ab72188412bc70493" translate="yes" xml:space="preserve">
          <source>In this respect Python is an excellent language to work with, because solutions that look elegant and feel right usually are the best performing ones. As with most skills, learning what &amp;ldquo;looks right&amp;rdquo; takes practice, but one of the most useful guidelines is:</source>
          <target state="translated">在这方面，Python是一种出色的语言，因为外观优美且感觉正确的解决方案通常是性能最好的解决方案。与大多数技能一样，学习&amp;ldquo;看起来正确&amp;rdquo;的东西需要练习，但是最有用的准则之一是：</target>
        </trans-unit>
        <trans-unit id="53881c3a8d3e6f6e56631aee12040a01b668caef" translate="yes" xml:space="preserve">
          <source>In this setup, we have two database servers: &lt;code&gt;dbprimary&lt;/code&gt;, described by the database alias &lt;code&gt;default&lt;/code&gt;, and &lt;code&gt;dbreplica&lt;/code&gt; described by the alias &lt;code&gt;replica&lt;/code&gt;. As you might expect, &lt;code&gt;dbreplica&lt;/code&gt; has been configured by the database administrator as a read replica of &lt;code&gt;dbprimary&lt;/code&gt;, so in normal activity, any write to &lt;code&gt;default&lt;/code&gt; will appear on &lt;code&gt;replica&lt;/code&gt;.</source>
          <target state="translated">在此设置中，我们有两个数据库服务器： &lt;code&gt;dbprimary&lt;/code&gt; （由数据库别名 &lt;code&gt;default&lt;/code&gt; 描述）和 &lt;code&gt;dbreplica&lt;/code&gt; （由别名 &lt;code&gt;replica&lt;/code&gt; 描述）。如您所料，数据库管理员 &lt;code&gt;dbreplica&lt;/code&gt; 配置为 &lt;code&gt;dbprimary&lt;/code&gt; 的只读副本，因此在正常活动中，任何对 &lt;code&gt;default&lt;/code&gt; 写入都会出现在 &lt;code&gt;replica&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="293973f48ca1c4c53c9792048ba09fe823f806d0" translate="yes" xml:space="preserve">
          <source>In this situation, configure your proxy to set a custom HTTP header that tells Django whether the request came in via HTTPS, and set &lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt; so that Django knows what header to look for.</source>
          <target state="translated">在这种情况下，请配置代理以设置一个自定义HTTP标头，以告诉Django请求是否通过HTTPS &lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt; ，并设置SECURE_PROXY_SSL_HEADER，以便Django知道要查找的标头。</target>
        </trans-unit>
        <trans-unit id="f6f6d2dd48f330dbd09730efe37d7c3c65c3287e" translate="yes" xml:space="preserve">
          <source>In this situation, if you have implemented per-user time zone selection, the same URL may show a different set of objects, depending on the end user&amp;rsquo;s time zone. To avoid this, you should use a &lt;code&gt;DateField&lt;/code&gt; as the &lt;code&gt;date_field&lt;/code&gt; attribute.</source>
          <target state="translated">在这种情况下，如果您已实现了按用户时区选择，则相同的URL可能会显示不同的对象集，具体取决于最终用户的时区。为了避免这种情况，您应该使用 &lt;code&gt;DateField&lt;/code&gt; 作为 &lt;code&gt;date_field&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="ef44d4c601df1f07d7990e5f9437d27dcc4746ed" translate="yes" xml:space="preserve">
          <source>In total, this code does either one or zero database queries. The only deliberate optimization performed is the use of the &lt;a href=&quot;../../ref/templates/builtins#std:templatetag-with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; tag. Using &lt;code&gt;QuerySet.exists()&lt;/code&gt; or &lt;code&gt;QuerySet.count()&lt;/code&gt; at any point would cause additional queries.</source>
          <target state="translated">总共，此代码执行一或零个数据库查询。唯一执行的故意优化是使用&lt;a href=&quot;../../ref/templates/builtins#std:templatetag-with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;标记。在任何时候使用 &lt;code&gt;QuerySet.exists()&lt;/code&gt; 或 &lt;code&gt;QuerySet.count()&lt;/code&gt; 都会导致其他查询。</target>
        </trans-unit>
        <trans-unit id="b2ea06b2718f0bb4f849e86d964c52e70ab6b065" translate="yes" xml:space="preserve">
          <source>In two lines:</source>
          <target state="translated">分两行:</target>
        </trans-unit>
        <trans-unit id="0f07a5a9fed735706d534272971e4af57a8f3b8c" translate="yes" xml:space="preserve">
          <source>In your Django apps, use settings by importing the object &lt;code&gt;django.conf.settings&lt;/code&gt;. Example:</source>
          <target state="translated">在您的Django应用中，通过导入 &lt;code&gt;django.conf.settings&lt;/code&gt; 对象来使用设置。例：</target>
        </trans-unit>
        <trans-unit id="df4de0d6688c36d088f680cbb25430ee62bb48e4" translate="yes" xml:space="preserve">
          <source>In your custom &lt;code&gt;change_form.html&lt;/code&gt; template, extend the &lt;code&gt;admin_change_form_document_ready&lt;/code&gt; block and add the event listener code:</source>
          <target state="translated">在您的自定义 &lt;code&gt;change_form.html&lt;/code&gt; 模板中，扩展 &lt;code&gt;admin_change_form_document_ready&lt;/code&gt; 块并添加事件侦听器代码：</target>
        </trans-unit>
        <trans-unit id="b734d5cfc118650b81e270f434765a1beb09fa63" translate="yes" xml:space="preserve">
          <source>In your development environment, you might need to add a setting to your &lt;code&gt;~.bashrc&lt;/code&gt; analogous to::</source>
          <target state="translated">在您的开发环境中，您可能需要向 &lt;code&gt;~.bashrc&lt;/code&gt; 添加一个设置，类似于：:</target>
        </trans-unit>
        <trans-unit id="8c473b50e514d1dd908d309dc36f50c2ed8dddf5" translate="yes" xml:space="preserve">
          <source>In your live server environment, you&amp;rsquo;ll need to tell your WSGI application what settings file to use. Do that with &lt;code&gt;os.environ&lt;/code&gt;:</source>
          <target state="translated">在实时服务器环境中，您需要告诉WSGI应用程序要使用什么设置文件。使用 &lt;code&gt;os.environ&lt;/code&gt; 来做到这一点：</target>
        </trans-unit>
        <trans-unit id="0ed392362647aff54ee6ac0528ce6f7de8014467" translate="yes" xml:space="preserve">
          <source>In your project, you might want to override a template in another Django application, whether it be a third-party application or a contrib application such as &lt;code&gt;django.contrib.admin&lt;/code&gt;. You can either put template overrides in your project&amp;rsquo;s templates directory or in an application&amp;rsquo;s templates directory.</source>
          <target state="translated">在您的项目中，您可能想覆盖另一个Django应用程序中的模板，无论它是第三方应用程序还是conjanb应用程序（例如 &lt;code&gt;django.contrib.admin&lt;/code&gt; )。您可以将模板替代放置在项目的模板目录中或应用程序的模板目录中。</target>
        </trans-unit>
        <trans-unit id="1a12842b892881bad40426a045c5fad617b1bbe3" translate="yes" xml:space="preserve">
          <source>In your settings file, define &lt;a href=&quot;../../ref/settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt;, for example:</source>
          <target state="translated">在您的设置文件中，定义&lt;a href=&quot;../../ref/settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt;，例如：</target>
        </trans-unit>
        <trans-unit id="c75941c62fda2d7b35a20353a643b95a05c2b9c2" translate="yes" xml:space="preserve">
          <source>In your settings file, you&amp;rsquo;ll need to define &lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt;&lt;/a&gt; as the full path to a directory where you&amp;rsquo;d like Django to store uploaded files. (For performance, these files are not stored in the database.) Define &lt;a href=&quot;../settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt; as the base public URL of that directory. Make sure that this directory is writable by the Web server&amp;rsquo;s user account.</source>
          <target state="translated">在您的设置文件中，您需要将&lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt; &lt;code&gt;MEDIA_ROOT&lt;/code&gt; &lt;/a&gt;定义为您希望Django存储上载文件的目录的完整路径。（为了提高性能，这些文件未存储在数据库中。）将&lt;a href=&quot;../settings#std:setting-MEDIA_URL&quot;&gt; &lt;code&gt;MEDIA_URL&lt;/code&gt; &lt;/a&gt;定义为该目录的基本公共URL。确保该目录可由Web服务器的用户帐户写入。</target>
        </trans-unit>
        <trans-unit id="6cdcd1cc4d55dae56b1d2cfee7ef0cf20408b5e1" translate="yes" xml:space="preserve">
          <source>In your templates, use the &lt;a href=&quot;../../ref/templates/builtins#std:templatetag-static&quot;&gt;&lt;code&gt;static&lt;/code&gt;&lt;/a&gt; template tag to build the URL for the given relative path using the configured &lt;a href=&quot;../../ref/settings#std:setting-STATICFILES_STORAGE&quot;&gt;&lt;code&gt;STATICFILES_STORAGE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在模板中，使用&lt;a href=&quot;../../ref/templates/builtins#std:templatetag-static&quot;&gt; &lt;code&gt;static&lt;/code&gt; &lt;/a&gt;模板标记通过配置的&lt;a href=&quot;../../ref/settings#std:setting-STATICFILES_STORAGE&quot;&gt; &lt;code&gt;STATICFILES_STORAGE&lt;/code&gt; &lt;/a&gt;为给定的相对路径构建URL 。</target>
        </trans-unit>
        <trans-unit id="baa1f28d971ef9c1acfb8d6a41ab17e4a43cce39" translate="yes" xml:space="preserve">
          <source>In-memory backend</source>
          <target state="translated">内存后端</target>
        </trans-unit>
        <trans-unit id="79a0469d56bc9db66aaeb7ea407a1f6066a46182" translate="yes" xml:space="preserve">
          <source>Inches</source>
          <target state="translated">Inches</target>
        </trans-unit>
        <trans-unit id="92ae1c082857bc2359cef4eee3e9adb6e79930a9" translate="yes" xml:space="preserve">
          <source>Include a form in &lt;code&gt;template.html&lt;/code&gt; that will &lt;code&gt;POST&lt;/code&gt; to this view:</source>
          <target state="translated">在 &lt;code&gt;template.html&lt;/code&gt; 中包含一个表单，该表单将过 &lt;code&gt;POST&lt;/code&gt; 到该视图：</target>
        </trans-unit>
        <trans-unit id="b5bcd4f5af4af7b3e7b03ee3a5c43fdeabd48653" translate="yes" xml:space="preserve">
          <source>Include any other hashers that your site uses in this list.</source>
          <target state="translated">包括您的网站在此列表中使用的任何其他散列器。</target>
        </trans-unit>
        <trans-unit id="13a6402e7816c5436da28e068f9dc91e58173dc8" translate="yes" xml:space="preserve">
          <source>Included Bookmarklets</source>
          <target state="translated">包括书签</target>
        </trans-unit>
        <trans-unit id="fce3d5524b93bea9ab2266460800f72716d9f859" translate="yes" xml:space="preserve">
          <source>Included hashers</source>
          <target state="translated">包含的散列器</target>
        </trans-unit>
        <trans-unit id="393381a25f66cacae86f8855d0301ff3d118a3d0" translate="yes" xml:space="preserve">
          <source>Included in this documentation are some additional notes and settings for &lt;a href=&quot;#testing-postgis&quot;&gt;PostGIS&lt;/a&gt; users.</source>
          <target state="translated">本文档中包括一些&lt;a href=&quot;#testing-postgis&quot;&gt;PostGIS&lt;/a&gt;用户的附加说明和设置。</target>
        </trans-unit>
        <trans-unit id="416f36f3b39cfe3286b14fc7265572590f159142" translate="yes" xml:space="preserve">
          <source>Included validators</source>
          <target state="translated">包括验证器</target>
        </trans-unit>
        <trans-unit id="05743cb3d3a2467dca3f8f904dc8d04225fa9b6a" translate="yes" xml:space="preserve">
          <source>Includes &lt;a href=&quot;https://www.gnu.org/software/gettext/manual/html_node/Fuzzy-Entries.html&quot;&gt;fuzzy translations&lt;/a&gt; into compiled files.</source>
          <target state="translated">包括&lt;a href=&quot;https://www.gnu.org/software/gettext/manual/html_node/Fuzzy-Entries.html&quot;&gt;模糊翻译&lt;/a&gt;到编译文件中。</target>
        </trans-unit>
        <trans-unit id="5f73b9d45841efe90325f2d512a7445ae790a051" translate="yes" xml:space="preserve">
          <source>Includes fuzzy translations into compiled files.</source>
          <target state="translated">包括模糊翻译成编译文件。</target>
        </trans-unit>
        <trans-unit id="7aa965cef09d97d1ef5c87655479174fe49cd105" translate="yes" xml:space="preserve">
          <source>Includes the following variables and values by default:</source>
          <target state="translated">默认情况下包括以下变量和值。</target>
        </trans-unit>
        <trans-unit id="db77cfa106b7fade03dd841cb10c3f59fd348141" translate="yes" xml:space="preserve">
          <source>Includes the single object associated with the &lt;code&gt;model&lt;/code&gt; specified in the &lt;code&gt;DateDetailView&lt;/code&gt;.</source>
          <target state="translated">包括与 &lt;code&gt;DateDetailView&lt;/code&gt; 中指定的 &lt;code&gt;model&lt;/code&gt; 关联的单个对象。</target>
        </trans-unit>
        <trans-unit id="f672b003fa062b2ae7f24fd7e6d5b2f1fc8b02a7" translate="yes" xml:space="preserve">
          <source>Including other URLconfs</source>
          <target state="translated">包括其他URLconfs</target>
        </trans-unit>
        <trans-unit id="cef652f3a03486091b244f2e5aba6969067fa768" translate="yes" xml:space="preserve">
          <source>Inclusion tags</source>
          <target state="translated">纳入标签</target>
        </trans-unit>
        <trans-unit id="ab18d470d5980c4f161e3f1dcdc1323336093e7e" translate="yes" xml:space="preserve">
          <source>Increase the default timeout value by setting the &lt;code&gt;timeout&lt;/code&gt; database option:</source>
          <target state="translated">通过设置 &lt;code&gt;timeout&lt;/code&gt; 数据库选项来增加默认超时值：</target>
        </trans-unit>
        <trans-unit id="4da83a55765005fd8539cc415fb563b5f9f3b112" translate="yes" xml:space="preserve">
          <source>Increasing the work factor</source>
          <target state="translated">增加工作因素</target>
        </trans-unit>
        <trans-unit id="07ac801d123e5116aad23e6fa38a3f0dd730faee" translate="yes" xml:space="preserve">
          <source>Independent of the value of &lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">与&lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;的值无关：</target>
        </trans-unit>
        <trans-unit id="c2df9b932637fe9d32a0f16da1c11873398f873d" translate="yes" xml:space="preserve">
          <source>Index</source>
          <target state="translated">Index</target>
        </trans-unit>
        <trans-unit id="a1a7b444d54f66bf3ef208aca5c08ddbf9243ac3" translate="yes" xml:space="preserve">
          <source>Index classes ease creating database indexes. They can be added using the &lt;a href=&quot;options#django.db.models.Options.indexes&quot;&gt;&lt;code&gt;Meta.indexes&lt;/code&gt;&lt;/a&gt; option. This document explains the API references of &lt;a href=&quot;#django.db.models.Index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt; which includes the &lt;a href=&quot;#index-options&quot;&gt;index options&lt;/a&gt;.</source>
          <target state="translated">索引类使创建数据库索引变得容易。可以使用&lt;a href=&quot;options#django.db.models.Options.indexes&quot;&gt; &lt;code&gt;Meta.indexes&lt;/code&gt; &lt;/a&gt;选项添加它们。本文档介绍了&lt;a href=&quot;#django.db.models.Index&quot;&gt; &lt;code&gt;Index&lt;/code&gt; &lt;/a&gt;的API参考，其中包括&lt;a href=&quot;#index-options&quot;&gt;index选项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="630cb288963201f389b4599b06017a143bbdff7d" translate="yes" xml:space="preserve">
          <source>Index concurrent operations</source>
          <target state="translated">索引并发操作</target>
        </trans-unit>
        <trans-unit id="eacf39e95bea2bf4d4bb9c3175a59647c4e609a3" translate="yes" xml:space="preserve">
          <source>Index lookups</source>
          <target state="translated">索引查询</target>
        </trans-unit>
        <trans-unit id="36fe21e39f393b7292e040bfa5eeb5abc353fa3a" translate="yes" xml:space="preserve">
          <source>Index transforms</source>
          <target state="translated">指数变换</target>
        </trans-unit>
        <trans-unit id="c66d20d479f4194c5828779ae5fb5b4e7ca288f0" translate="yes" xml:space="preserve">
          <source>Index transforms index into the array. Any non-negative integer can be used. There are no errors if it exceeds the &lt;a href=&quot;#django.contrib.postgres.fields.ArrayField.size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt; of the array. The lookups available after the transform are those from the &lt;a href=&quot;#django.contrib.postgres.fields.ArrayField.base_field&quot;&gt;&lt;code&gt;base_field&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">索引将索引转换为数组。可以使用任何非负整数。如果超出数组的&lt;a href=&quot;#django.contrib.postgres.fields.ArrayField.size&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt;，则没有错误。转换后可用的查找是来自&lt;a href=&quot;#django.contrib.postgres.fields.ArrayField.base_field&quot;&gt; &lt;code&gt;base_field&lt;/code&gt; 的查找&lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="1c791c51c23a4a229b636e01c1e218aea31fa64e" translate="yes" xml:space="preserve">
          <source>Indexes are defined in &lt;code&gt;django.db.models.indexes&lt;/code&gt;, but for convenience they&amp;rsquo;re imported into &lt;a href=&quot;../../topics/db/models#module-django.db.models&quot;&gt;&lt;code&gt;django.db.models&lt;/code&gt;&lt;/a&gt;. The standard convention is to use &lt;code&gt;from django.db import models&lt;/code&gt; and refer to the indexes as &lt;code&gt;models.&amp;lt;IndexClass&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">索引是在 &lt;code&gt;django.db.models.indexes&lt;/code&gt; 中定义的，但是为了方便起见，它们被导入到&lt;a href=&quot;../../topics/db/models#module-django.db.models&quot;&gt; &lt;code&gt;django.db.models&lt;/code&gt; 中&lt;/a&gt;。标准约定是 &lt;code&gt;from django.db import models&lt;/code&gt; 使用，并将索引称为 &lt;code&gt;models.&amp;lt;IndexClass&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5492137803e97d2ec59c8b75ce29be484b74e635" translate="yes" xml:space="preserve">
          <source>Indexes for &lt;code&gt;varchar&lt;/code&gt; and &lt;code&gt;text&lt;/code&gt; columns</source>
          <target state="translated">&lt;code&gt;varchar&lt;/code&gt; 和 &lt;code&gt;text&lt;/code&gt; 列的索引</target>
        </trans-unit>
        <trans-unit id="9951861c21df18489a5872209655d6f9039b5e2a" translate="yes" xml:space="preserve">
          <source>Indexing</source>
          <target state="translated">Indexing</target>
        </trans-unit>
        <trans-unit id="ef8499031097e84decc8e22d2abe9aa002f4dcf0" translate="yes" xml:space="preserve">
          <source>Indexing these fields</source>
          <target state="translated">对这些领域进行索引</target>
        </trans-unit>
        <trans-unit id="967ce367d89dccc133d71049f1197d29561b3726" translate="yes" xml:space="preserve">
          <source>India</source>
          <target state="translated">India</target>
        </trans-unit>
        <trans-unit id="ba45edb20cfadb09579c8b985c1073d4c123849c" translate="yes" xml:space="preserve">
          <source>Indian yard, Yard (Indian)</source>
          <target state="translated">印度院子,院子(印度)</target>
        </trans-unit>
        <trans-unit id="69785e2efdbe3fd9756a43b21d0ac286d349fbbb" translate="yes" xml:space="preserve">
          <source>Indicates how much information manage.py is printing on screen. See the &lt;a href=&quot;django-admin#cmdoption-verbosity&quot;&gt;&lt;code&gt;--verbosity&lt;/code&gt;&lt;/a&gt; flag for details.</source>
          <target state="translated">指示manage.py在屏幕上打印多少信息。有关详细信息，请参见&lt;a href=&quot;django-admin#cmdoption-verbosity&quot;&gt; &lt;code&gt;--verbosity&lt;/code&gt; &lt;/a&gt;标志。</target>
        </trans-unit>
        <trans-unit id="805970dc362427509e5d3cf95b1051c9914c44de" translate="yes" xml:space="preserve">
          <source>Indicates if the widget supports edition of 3D data (default is &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">指示窗口小部件是否支持3D数据的版本（默认为 &lt;code&gt;False&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="46cbd279a17918dbd83258a502286ca2bd179058" translate="yes" xml:space="preserve">
          <source>Indicates which side of the relation is updated (i.e., if it is the forward or reverse relation that is being modified).</source>
          <target state="translated">表示关系的哪一面被更新(即被修改的是正向关系还是反向关系)。</target>
        </trans-unit>
        <trans-unit id="7dca5d33b20dad0ae7cbe0b7fa53af5a51dfd232" translate="yes" xml:space="preserve">
          <source>Inequality. Example:</source>
          <target state="translated">不平等。例如:</target>
        </trans-unit>
        <trans-unit id="0eb5ed506e4923c28d7f4a8aa69efe99b3ad75d1" translate="yes" xml:space="preserve">
          <source>Information</source>
          <target state="translated">Information</target>
        </trans-unit>
        <trans-unit id="1816bd5301287d48b239d10b6147fb06b838101a" translate="yes" xml:space="preserve">
          <source>Information on handling HTTP requests in Django:</source>
          <target state="translated">关于在Django中处理HTTP请求的信息。</target>
        </trans-unit>
        <trans-unit id="4cea99f6c762632c4e20ad0abdccb5ad2c714eda" translate="yes" xml:space="preserve">
          <source>Information on how to test custom management commands can be found in the &lt;a href=&quot;../topics/testing/tools#topics-testing-management-commands&quot;&gt;testing docs&lt;/a&gt;.</source>
          <target state="translated">有关如何测试自定义管理命令的信息可以在&lt;a href=&quot;../topics/testing/tools#topics-testing-management-commands&quot;&gt;测试文档中&lt;/a&gt;找到。</target>
        </trans-unit>
        <trans-unit id="2115a89831353cf02274f4bd272538f5346d1232" translate="yes" xml:space="preserve">
          <source>Informational messages for the user</source>
          <target state="translated">给用户的信息</target>
        </trans-unit>
        <trans-unit id="46fa48661da126122dd9b3dfb56c3771a9fb032e" translate="yes" xml:space="preserve">
          <source>Informs all validators that the password has been changed. This can be used by validators such as one that prevents password reuse. This should be called once the password has been successfully changed.</source>
          <target state="translated">通知所有验证器密码已被更改。这个功能可以被验证器使用,比如防止密码重复使用的验证器。一旦密码被成功修改,就应该调用这个函数。</target>
        </trans-unit>
        <trans-unit id="263eb8fac3089407415b3cdb49c8a9493a73a913" translate="yes" xml:space="preserve">
          <source>Inheritance and reverse relations</source>
          <target state="translated">继承和反向关系</target>
        </trans-unit>
        <trans-unit id="6878b79ae6a11c71f7d933df7a428440301d2cb7" translate="yes" xml:space="preserve">
          <source>Inherited models</source>
          <target state="translated">继承模式</target>
        </trans-unit>
        <trans-unit id="6b7c24fac5cde31e70194fe1a4a3aa31f2b07c59" translate="yes" xml:space="preserve">
          <source>Inherits all attributes and methods from &lt;a href=&quot;#django.db.models.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt;, but also validates that the uploaded object is a valid image.</source>
          <target state="translated">从&lt;a href=&quot;#django.db.models.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; &lt;/a&gt;继承所有属性和方法，还验证上载的对象是有效的图像。</target>
        </trans-unit>
        <trans-unit id="887fae0cd4b77c5cf1709af4daa6acafe51d7270" translate="yes" xml:space="preserve">
          <source>Initial GET (blank or prepopulated form)</source>
          <target state="translated">初始GET(空白或预先填充的形式)</target>
        </trans-unit>
        <trans-unit id="7721368c6a2dc340b98e95500c63c71237f0442f" translate="yes" xml:space="preserve">
          <source>Initial data is what drives the main usability of a formset. As shown above you can define the number of extra forms. What this means is that you are telling the formset how many additional forms to show in addition to the number of forms it generates from the initial data. Let&amp;rsquo;s take a look at an example:</source>
          <target state="translated">初始数据是驱动表单集主要可用性的因素。如上所示，您可以定义额外表格的数量。这意味着您要告诉表单集，除了要从初始数据生成的表单数量以外，还要显示多少其他表单。让我们看一个例子：</target>
        </trans-unit>
        <trans-unit id="b6c0a04d6df77feaf647ce05a50a0c853571c221" translate="yes" xml:space="preserve">
          <source>Initial migrations</source>
          <target state="translated">初步迁移</target>
        </trans-unit>
        <trans-unit id="4e03af3824bf96934c0a17f4b42352a2647e0dd2" translate="yes" xml:space="preserve">
          <source>Initial migrations are marked with an &lt;code&gt;initial = True&lt;/code&gt; class attribute on the migration class. If an &lt;code&gt;initial&lt;/code&gt; class attribute isn&amp;rsquo;t found, a migration will be considered &amp;ldquo;initial&amp;rdquo; if it is the first migration in the app (i.e. if it has no dependencies on any other migration in the same app).</source>
          <target state="translated">初始迁移在迁移类上标记有 &lt;code&gt;initial = True&lt;/code&gt; 类属性。如果未找到 &lt;code&gt;initial&lt;/code&gt; 类属性，则如果迁移是应用程序中的首次迁移（即，如果它不依赖于同一应用程序中的任何其他迁移，则将被视为&amp;ldquo;初始&amp;rdquo;迁移）。</target>
        </trans-unit>
        <trans-unit id="68fa16ffd48f366e4fa8d57fea78ff03fcab0191" translate="yes" xml:space="preserve">
          <source>Initialization</source>
          <target state="translated">Initialization</target>
        </trans-unit>
        <trans-unit id="92d116105843bf9003a7b0e9c5d9103920d28ee2" translate="yes" xml:space="preserve">
          <source>Initialization process</source>
          <target state="translated">初始化进程</target>
        </trans-unit>
        <trans-unit id="5b82e76b7fa3fb4fd6420171df7d0206986bbce2" translate="yes" xml:space="preserve">
          <source>Initialize the feed with the given dictionary of metadata, which applies to the entire feed.</source>
          <target state="translated">用给定的元数据字典初始化feed,它适用于整个feed。</target>
        </trans-unit>
        <trans-unit id="b9480d541cf0f3d79a2ff605d8ca16ab4f5519d5" translate="yes" xml:space="preserve">
          <source>Initialize the feed with the given dictionary of metadata, which applies to the entire feed. Required keyword arguments are:</source>
          <target state="translated">用给定的元数据字典初始化feed,它适用于整个feed。所需的关键字参数有:</target>
        </trans-unit>
        <trans-unit id="cbe2e11aaa3a8f997f74dd81ca8d4d6be58f2cd0" translate="yes" xml:space="preserve">
          <source>Initializes view instance attributes: &lt;code&gt;self.request&lt;/code&gt;, &lt;code&gt;self.args&lt;/code&gt;, and &lt;code&gt;self.kwargs&lt;/code&gt; prior to &lt;a href=&quot;#django.views.generic.base.View.dispatch&quot;&gt;&lt;code&gt;dispatch()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;#django.views.generic.base.View.dispatch&quot;&gt; &lt;code&gt;dispatch()&lt;/code&gt; &lt;/a&gt;之前初始化视图实例属性： &lt;code&gt;self.request&lt;/code&gt; ， &lt;code&gt;self.args&lt;/code&gt; 和 &lt;code&gt;self.kwargs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="118f0c3c3c959f831d4cc1d8d61816419873fce8" translate="yes" xml:space="preserve">
          <source>Initializing the application registry.</source>
          <target state="translated">初始化申请登记处。</target>
        </trans-unit>
        <trans-unit id="a5071690b6f4d6be0ab39c8e9e4f4eeece380821" translate="yes" xml:space="preserve">
          <source>Initializing your new field is a matter of separating out any arguments that are specific to your case from the common arguments and passing the latter to the &lt;code&gt;__init__()&lt;/code&gt; method of &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; (or your parent class).</source>
          <target state="translated">初始化新字段是要从通用参数中分离出特定于您案例的所有参数，并将后者传递给&lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;（或您的父类）的 &lt;code&gt;__init__()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="d886046c9901e1b4b70275cfb11b733f494e6dcb" translate="yes" xml:space="preserve">
          <source>Initially, &lt;code&gt;token.split_contents()&lt;/code&gt; will return three values:</source>
          <target state="translated">最初， &lt;code&gt;token.split_contents()&lt;/code&gt; 将返回三个值：</target>
        </trans-unit>
        <trans-unit id="529d4aa47626f4c94772e3b1b82467e2ef2eb6cd" translate="yes" xml:space="preserve">
          <source>Inline form events</source>
          <target state="translated">内联表单事件</target>
        </trans-unit>
        <trans-unit id="2bf3973978eed4752c6694e9f74358e333071d2a" translate="yes" xml:space="preserve">
          <source>Inline formsets</source>
          <target state="translated">内联表格集</target>
        </trans-unit>
        <trans-unit id="5f0d302d7df51da277cf03650b8f23cfec69c26b" translate="yes" xml:space="preserve">
          <source>Inline formsets is a small abstraction layer on top of model formsets. These simplify the case of working with related objects via a foreign key. Suppose you have these two models:</source>
          <target state="translated">内联形式集是模型形式集之上的一个小的抽象层。这些简化了通过外键处理相关对象的情况。假设你有这两个模型。</target>
        </trans-unit>
        <trans-unit id="630cbac3ad3755357bd8db01e781e15971700af2" translate="yes" xml:space="preserve">
          <source>Input Type</source>
          <target state="translated">输入类型</target>
        </trans-unit>
        <trans-unit id="3cf3025b06979938acb60abd72189ab0d9a5057f" translate="yes" xml:space="preserve">
          <source>Input provided as &lt;code&gt;bytes&lt;/code&gt; has to be a full binary representation of a file. For instance:</source>
          <target state="translated">作为 &lt;code&gt;bytes&lt;/code&gt; 提供的输入必须是文件的完整二进制表示形式。例如：</target>
        </trans-unit>
        <trans-unit id="82a1ada76fb843bfdb99e1335ae14865d2ac5754" translate="yes" xml:space="preserve">
          <source>Insert in bulk</source>
          <target state="translated">大量插入</target>
        </trans-unit>
        <trans-unit id="fd80c7060b33e0b1f9e0160fda71154e20942302" translate="yes" xml:space="preserve">
          <source>Inside a transaction, when a call to a PostgreSQL cursor raises an exception (typically &lt;code&gt;IntegrityError&lt;/code&gt;), all subsequent SQL in the same transaction will fail with the error &amp;ldquo;current transaction is aborted, queries ignored until end of transaction block&amp;rdquo;. While the basic use of &lt;code&gt;save()&lt;/code&gt; is unlikely to raise an exception in PostgreSQL, there are more advanced usage patterns which might, such as saving objects with unique fields, saving using the force_insert/force_update flag, or invoking custom SQL.</source>
          <target state="translated">在事务内部，当对PostgreSQL游标的调用引发异常（通常为 &lt;code&gt;IntegrityError&lt;/code&gt; ）时，同一事务中的所有后续SQL都会失败，并显示错误&amp;ldquo;当前事务已中止，查询被忽略，直到事务块结束&amp;rdquo;。尽管 &lt;code&gt;save()&lt;/code&gt; 的基本用法不太可能在PostgreSQL中引发异常，但是可能存在更高级的用法模式，例如使用唯一字段保存对象，使用force_insert / force_update标志保存或调用自定义SQL。</target>
        </trans-unit>
        <trans-unit id="3fb0c4a6cb7cb3bb932f294d1a031cf85801a6f6" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt;. The easiest is to use the &lt;a href=&quot;https://pip.pypa.io/en/latest/installing/#installing-with-get-pip-py&quot;&gt;standalone pip installer&lt;/a&gt;. If your distribution already has &lt;code&gt;pip&lt;/code&gt; installed, you might need to update it if it&amp;rsquo;s outdated. If it&amp;rsquo;s outdated, you&amp;rsquo;ll know because installation won&amp;rsquo;t work.</source>
          <target state="translated">安装&lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt;。最简单的方法是使用&lt;a href=&quot;https://pip.pypa.io/en/latest/installing/#installing-with-get-pip-py&quot;&gt;独立的pip安装程序&lt;/a&gt;。如果您的发行版已经安装了 &lt;code&gt;pip&lt;/code&gt; ，则如果过时，则可能需要对其进行更新。如果已过时，您将知道，因为安装将无法进行。</target>
        </trans-unit>
        <trans-unit id="bbc29c34df2441baed48edcc90ffcebae7fe04ea" translate="yes" xml:space="preserve">
          <source>Install &lt;code&gt;binutils&lt;/code&gt;</source>
          <target state="translated">安装 &lt;code&gt;binutils&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eac3c52fd90179ef647d10e226a176c33f103069" translate="yes" xml:space="preserve">
          <source>Install &lt;code&gt;virtualenv&lt;/code&gt; and &lt;code&gt;virtualenvwrapper&lt;/code&gt;</source>
          <target state="translated">安装 &lt;code&gt;virtualenv&lt;/code&gt; 和 &lt;code&gt;virtualenvwrapper&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bfb040b8cf2a6c6983deac2a0f9a6884c824aa78" translate="yes" xml:space="preserve">
          <source>Install Apache and &lt;code&gt;mod_wsgi&lt;/code&gt;</source>
          <target state="translated">安装Apache和 &lt;code&gt;mod_wsgi&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5fc7c028097e404e54baa7df716c866ba3c3490" translate="yes" xml:space="preserve">
          <source>Install Django</source>
          <target state="translated">安装Django</target>
        </trans-unit>
        <trans-unit id="7dde67d172e208f70974e16600e6965108e24dc5" translate="yes" xml:space="preserve">
          <source>Install Django and set up database</source>
          <target state="translated">安装Django并建立数据库</target>
        </trans-unit>
        <trans-unit id="6a036bec2d3c0cc5544c8102734b803705b65558" translate="yes" xml:space="preserve">
          <source>Install Python</source>
          <target state="translated">安装Python</target>
        </trans-unit>
        <trans-unit id="cf77b120c0a9fb034fd4d1bdf0132dbaea450adf" translate="yes" xml:space="preserve">
          <source>Install ReportLab</source>
          <target state="translated">安装ReportLab</target>
        </trans-unit>
        <trans-unit id="8b71e7089fefe4efaea3b41d159cc3d5d4f07857" translate="yes" xml:space="preserve">
          <source>Install a 64 bit version of Python. See &lt;a href=&quot;../../../../howto/windows&quot;&gt;Install Python&lt;/a&gt; for further information.</source>
          <target state="translated">安装Python的64位版本。有关更多信息，请参见&lt;a href=&quot;../../../../howto/windows&quot;&gt;安装Python&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="deb1dca81cfa61308cf3a3e61fdb90b4533b0e8c" translate="yes" xml:space="preserve">
          <source>Install a version of Django &lt;a href=&quot;../topics/install#installing-distribution-package&quot;&gt;provided by your operating system distribution&lt;/a&gt;.</source>
          <target state="translated">安装&lt;a href=&quot;../topics/install#installing-distribution-package&quot;&gt;操作系统发行&lt;/a&gt;版提供的Django版本。</target>
        </trans-unit>
        <trans-unit id="54f0f70c277d5e4aa7ee5a0a8452076bf3a2f640" translate="yes" xml:space="preserve">
          <source>Install gunicorn by running &lt;code&gt;python -m pip install gunicorn&lt;/code&gt;. For more details, see the &lt;a href=&quot;https://docs.gunicorn.org/en/latest/install.html&quot;&gt;gunicorn documentation&lt;/a&gt;.</source>
          <target state="translated">通过运行 &lt;code&gt;python -m pip install gunicorn&lt;/code&gt; 来安装gunicorn。有关更多详细信息，请参见&lt;a href=&quot;https://docs.gunicorn.org/en/latest/install.html&quot;&gt;gunicorn文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5d28aa5c3f5f864624758280797d60a6e8cc60fb" translate="yes" xml:space="preserve">
          <source>Install it</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="e5e59b5b49091f6e3df772b3a0711c44291aac54" translate="yes" xml:space="preserve">
          <source>Install the &lt;a href=&quot;https://pypi.org/project/argon2_cffi/&quot;&gt;argon2-cffi library&lt;/a&gt;. This can be done by running &lt;code&gt;python -m pip install django[argon2]&lt;/code&gt;, which is equivalent to &lt;code&gt;python -m pip install argon2-cffi&lt;/code&gt; (along with any version requirement from Django&amp;rsquo;s &lt;code&gt;setup.cfg&lt;/code&gt;).</source>
          <target state="translated">安装&lt;a href=&quot;https://pypi.org/project/argon2_cffi/&quot;&gt;argon2-cffi库&lt;/a&gt;。这可以通过运行 &lt;code&gt;python -m pip install django[argon2]&lt;/code&gt; ，这等效于 &lt;code&gt;python -m pip install argon2-cffi&lt;/code&gt; （以及Django &lt;code&gt;setup.cfg&lt;/code&gt; 中的任何版本要求）。</target>
        </trans-unit>
        <trans-unit id="bcaca3d75e252ac3de7f251d6d46620471c66363" translate="yes" xml:space="preserve">
          <source>Install the &lt;a href=&quot;https://pypi.org/project/argon2_cffi/&quot;&gt;argon2-cffi library&lt;/a&gt;. This can be done by running &lt;code&gt;python -m pip install django[argon2]&lt;/code&gt;, which is equivalent to &lt;code&gt;python -m pip install argon2-cffi&lt;/code&gt; (along with any version requirement from Django&amp;rsquo;s &lt;code&gt;setup.py&lt;/code&gt;).</source>
          <target state="translated">安装&lt;a href=&quot;https://pypi.org/project/argon2_cffi/&quot;&gt;argon2-cffi库&lt;/a&gt;。这可以通过运行 &lt;code&gt;python -m pip install django[argon2]&lt;/code&gt; ，这等效于 &lt;code&gt;python -m pip install argon2-cffi&lt;/code&gt; （以及Django &lt;code&gt;setup.py&lt;/code&gt; 中的任何版本要求）。</target>
        </trans-unit>
        <trans-unit id="ab66b2f5e38a7cf480e9c023c360905d40bf321b" translate="yes" xml:space="preserve">
          <source>Install the &lt;a href=&quot;https://pypi.org/project/bcrypt/&quot;&gt;bcrypt library&lt;/a&gt;. This can be done by running &lt;code&gt;python -m pip install django[bcrypt]&lt;/code&gt;, which is equivalent to &lt;code&gt;python -m pip install bcrypt&lt;/code&gt; (along with any version requirement from Django&amp;rsquo;s &lt;code&gt;setup.cfg&lt;/code&gt;).</source>
          <target state="translated">安装&lt;a href=&quot;https://pypi.org/project/bcrypt/&quot;&gt;bcrypt库&lt;/a&gt;。这可以通过运行 &lt;code&gt;python -m pip install django[bcrypt]&lt;/code&gt; ，这等效于 &lt;code&gt;python -m pip install bcrypt&lt;/code&gt; （以及Django &lt;code&gt;setup.cfg&lt;/code&gt; 的任何版本要求）。</target>
        </trans-unit>
        <trans-unit id="e210902fd89fea327be285ade2968e15f65d75d5" translate="yes" xml:space="preserve">
          <source>Install the &lt;a href=&quot;https://pypi.org/project/bcrypt/&quot;&gt;bcrypt library&lt;/a&gt;. This can be done by running &lt;code&gt;python -m pip install django[bcrypt]&lt;/code&gt;, which is equivalent to &lt;code&gt;python -m pip install bcrypt&lt;/code&gt; (along with any version requirement from Django&amp;rsquo;s &lt;code&gt;setup.py&lt;/code&gt;).</source>
          <target state="translated">安装&lt;a href=&quot;https://pypi.org/project/bcrypt/&quot;&gt;bcrypt库&lt;/a&gt;。这可以通过运行 &lt;code&gt;python -m pip install django[bcrypt]&lt;/code&gt; ，这等效于 &lt;code&gt;python -m pip install bcrypt&lt;/code&gt; （以及Django的 &lt;code&gt;setup.py&lt;/code&gt; 中的任何版本要求）。</target>
        </trans-unit>
        <trans-unit id="00d2af2e61a464edd9e548eb900abf871a875685" translate="yes" xml:space="preserve">
          <source>Install the &lt;a href=&quot;sites#module-django.contrib.sites&quot;&gt;&lt;code&gt;sites framework&lt;/code&gt;&lt;/a&gt; by adding &lt;code&gt;'django.contrib.sites'&lt;/code&gt; to your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting, if it&amp;rsquo;s not already in there.</source>
          <target state="translated">如果尚未将 &lt;code&gt;'django.contrib.sites'&lt;/code&gt; 添加到您的&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置中，则可以安装&lt;a href=&quot;sites#module-django.contrib.sites&quot;&gt; &lt;code&gt;sites framework&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c4701e78d9d83a7d5493cab49cfea8bcd9ddd76" translate="yes" xml:space="preserve">
          <source>Install the &lt;code&gt;btree_gin&lt;/code&gt; extension.</source>
          <target state="translated">安装 &lt;code&gt;btree_gin&lt;/code&gt; 扩展。</target>
        </trans-unit>
        <trans-unit id="acd182d9015bfd8188202d1ecb60688d2939179f" translate="yes" xml:space="preserve">
          <source>Install the &lt;code&gt;btree_gist&lt;/code&gt; extension.</source>
          <target state="translated">安装 &lt;code&gt;btree_gist&lt;/code&gt; 扩展。</target>
        </trans-unit>
        <trans-unit id="a76f5145a32d184e1c7e9587ba465063c089609e" translate="yes" xml:space="preserve">
          <source>Install the Django code</source>
          <target state="translated">安装Django代码</target>
        </trans-unit>
        <trans-unit id="dc5ac4572b45ea1e5ec997132d5c1eedc83d7af8" translate="yes" xml:space="preserve">
          <source>Install the core Django tables</source>
          <target state="translated">安装Django核心表</target>
        </trans-unit>
        <trans-unit id="b80fff99394b213848b1958268f286bb48e71084" translate="yes" xml:space="preserve">
          <source>Install the docutils Python module (&lt;a href=&quot;https://docutils.sourceforge.io/&quot;&gt;https://docutils.sourceforge.io/&lt;/a&gt;).</source>
          <target state="translated">安装docutils Python模块（&lt;a href=&quot;https://docutils.sourceforge.io/&quot;&gt;https://docutils.sourceforge.io/&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f16648ab97c10387117506d2197c88daefa2c596" translate="yes" xml:space="preserve">
          <source>Install the packages in the order they are listed above, as the GDAL and SQLite packages require the packages listed before them.</source>
          <target state="translated">按照上面列出的顺序安装包,因为GDAL和SQLite包需要前面列出的包。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="ff4f4a940ff19aa2436e69196999c53946b31122" translate="yes" xml:space="preserve">
          <source>Installation instructions are slightly different depending on whether you&amp;rsquo;re installing a distribution-specific package, downloading the latest official release, or fetching the latest development version.</source>
          <target state="translated">安装说明会有所不同，具体取决于您是安装特定于发行版的软件包，下载最新的正式版本还是获取最新的开发版本。</target>
        </trans-unit>
        <trans-unit id="ad3e3dab4a190abbebf78c92247b626a4d65febb" translate="yes" xml:space="preserve">
          <source>Installing Daphne</source>
          <target state="translated">寄宿达芙妮</target>
        </trans-unit>
        <trans-unit id="f2bff20e97a1f081da9b80758818ca87edaadcdc" translate="yes" xml:space="preserve">
          <source>Installing Geospatial libraries</source>
          <target state="translated">安装地理空间库</target>
        </trans-unit>
        <trans-unit id="08184aba9687051924cc110485a309cd3a9c8e10" translate="yes" xml:space="preserve">
          <source>Installing Git</source>
          <target state="translated">安装Git</target>
        </trans-unit>
        <trans-unit id="832f4a5393100d982e65d355980b754d3648ec27" translate="yes" xml:space="preserve">
          <source>Installing Git.</source>
          <target state="translated">安装Git。</target>
        </trans-unit>
        <trans-unit id="9b40ec12cc871a8d0e48f0c35c15978313555dda" translate="yes" xml:space="preserve">
          <source>Installing Gunicorn</source>
          <target state="translated">安装Gunicorn</target>
        </trans-unit>
        <trans-unit id="eaeaa4aae87f13caa5fbef040077a281a1d15b42" translate="yes" xml:space="preserve">
          <source>Installing Hypercorn</source>
          <target state="translated">安装超牛角</target>
        </trans-unit>
        <trans-unit id="4f56c15f76a3602ff2fe3028129cae40805d2891" translate="yes" xml:space="preserve">
          <source>Installing PostGIS</source>
          <target state="translated">安装PostGIS</target>
        </trans-unit>
        <trans-unit id="7261454ff42d55ac3cee9a48a9a7074d622c284f" translate="yes" xml:space="preserve">
          <source>Installing Python packages with a virtual environment</source>
          <target state="translated">用虚拟环境安装Python包</target>
        </trans-unit>
        <trans-unit id="927da6c1c36a09548ee8a0b09892380aaf33ca8a" translate="yes" xml:space="preserve">
          <source>Installing Python packages with virtualenv</source>
          <target state="translated">用virtualenv安装Python包</target>
        </trans-unit>
        <trans-unit id="961035f5074b37f06409829bca2e3c28cae1a5ad" translate="yes" xml:space="preserve">
          <source>Installing SpatiaLite</source>
          <target state="translated">安装SpatiaLite</target>
        </trans-unit>
        <trans-unit id="8d11135f6e798b9505fe0f0f3c04f2d219d5a612" translate="yes" xml:space="preserve">
          <source>Installing Uvicorn</source>
          <target state="translated">安装Uvicorn</target>
        </trans-unit>
        <trans-unit id="f7a34c08b51e2419fa7dc61778c3f2ca278331e1" translate="yes" xml:space="preserve">
          <source>Installing a distribution-specific package</source>
          <target state="translated">安装特定发行版的软件包</target>
        </trans-unit>
        <trans-unit id="42cc33b9e752caf55863c3e0eb6e5deb696214b9" translate="yes" xml:space="preserve">
          <source>Installing a wrapper is done in a context manager &amp;ndash; so the wrappers are temporary and specific to some flow in your code.</source>
          <target state="translated">安装包装器是在上下文管理器中完成的-因此，包装器是临时的，特定于代码中的某些流程。</target>
        </trans-unit>
        <trans-unit id="1cdd21443d12c68fe7d176e7e1d37cacee632f0f" translate="yes" xml:space="preserve">
          <source>Installing an official release with &lt;code&gt;pip&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;pip&lt;/code&gt; 安装正式版本</target>
        </trans-unit>
        <trans-unit id="8628a6e864a9e93f538b94578699641e3f734260" translate="yes" xml:space="preserve">
          <source>Installing as a user library</source>
          <target state="translated">作为用户库安装</target>
        </trans-unit>
        <trans-unit id="25698238529e36c36bbff9a1cf8864afeb7e862b" translate="yes" xml:space="preserve">
          <source>Installing from source</source>
          <target state="translated">从源头安装</target>
        </trans-unit>
        <trans-unit id="22e127126b29a4052ed7dc43993b38a6393e1246" translate="yes" xml:space="preserve">
          <source>Installing some prerequisites</source>
          <target state="translated">安装一些先决条件</target>
        </trans-unit>
        <trans-unit id="a9bda49ca5c84ac0371dfd0aa4aeead7cef32c9d" translate="yes" xml:space="preserve">
          <source>Installing the contenttypes framework</source>
          <target state="translated">安装内容类型框架</target>
        </trans-unit>
        <trans-unit id="c2880c0c7b9f92a492fcc9e1562593a3e93bb68d" translate="yes" xml:space="preserve">
          <source>Installing the development version</source>
          <target state="translated">安装开发版</target>
        </trans-unit>
        <trans-unit id="182550e5b6132a0ff75322e4ed32c21cd0985415" translate="yes" xml:space="preserve">
          <source>Installs the &lt;code&gt;bloom&lt;/code&gt; extension.</source>
          <target state="translated">安装 &lt;code&gt;bloom&lt;/code&gt; 扩展。</target>
        </trans-unit>
        <trans-unit id="2e055356ef136469cf4b9451661e20b8562826ab" translate="yes" xml:space="preserve">
          <source>Installs the &lt;code&gt;btree_gin&lt;/code&gt; extension.</source>
          <target state="translated">安装 &lt;code&gt;btree_gin&lt;/code&gt; 扩展。</target>
        </trans-unit>
        <trans-unit id="c62c03b65b8b64207ce0849b4a7b74e6211dcd27" translate="yes" xml:space="preserve">
          <source>Installs the &lt;code&gt;btree_gist&lt;/code&gt; extension.</source>
          <target state="translated">安装 &lt;code&gt;btree_gist&lt;/code&gt; 扩展。</target>
        </trans-unit>
        <trans-unit id="d3bf6d32afe746a4fa058c7c5dce82e85a778691" translate="yes" xml:space="preserve">
          <source>Installs the &lt;code&gt;citext&lt;/code&gt; extension.</source>
          <target state="translated">安装 &lt;code&gt;citext&lt;/code&gt; 扩展名。</target>
        </trans-unit>
        <trans-unit id="0a5b8eef62a1408d8cc79afa5af9584ec14a4b58" translate="yes" xml:space="preserve">
          <source>Installs the &lt;code&gt;hstore&lt;/code&gt; extension and also sets up the connection to interpret hstore data for possible use in subsequent migrations.</source>
          <target state="translated">安装 &lt;code&gt;hstore&lt;/code&gt; 扩展，还建立连接以解释hstore数据，以备在后续迁移中使用。</target>
        </trans-unit>
        <trans-unit id="7101a42b2163ac751b481d457a5c8369b69d8e9e" translate="yes" xml:space="preserve">
          <source>Installs the &lt;code&gt;pg_trgm&lt;/code&gt; extension.</source>
          <target state="translated">安装 &lt;code&gt;pg_trgm&lt;/code&gt; 扩展。</target>
        </trans-unit>
        <trans-unit id="e31cfb0fb6c711d0656d19a5574b5d7240e78753" translate="yes" xml:space="preserve">
          <source>Installs the &lt;code&gt;pgcrypto&lt;/code&gt; extension.</source>
          <target state="translated">安装 &lt;code&gt;pgcrypto&lt;/code&gt; 扩展。</target>
        </trans-unit>
        <trans-unit id="8de17062b9cc6ceea7cfbe2b8e21f56dd155d43c" translate="yes" xml:space="preserve">
          <source>Installs the &lt;code&gt;unaccent&lt;/code&gt; extension.</source>
          <target state="translated">安装 &lt;code&gt;unaccent&lt;/code&gt; 扩展名。</target>
        </trans-unit>
        <trans-unit id="3ba17ad27b23ed96d07cb286c9f28dee5d248c65" translate="yes" xml:space="preserve">
          <source>Instances can be assigned to the reverse relationship in the same way as you would assign the forward relationship:</source>
          <target state="translated">实例可以像分配正向关系一样分配给反向关系。</target>
        </trans-unit>
        <trans-unit id="33a8466028f50993d00a3e49a884c73a7be30cbf" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; have methods for returning the model classes they represent and for querying objects from those models. &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; also has a &lt;a href=&quot;../../topics/db/managers#custom-managers&quot;&gt;custom manager&lt;/a&gt; that adds methods for working with &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; and for obtaining instances of &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; for a particular model.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;实例具有用于返回其表示的模型类以及从这些模型中查询对象的方法。&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;还具有一个&lt;a href=&quot;../../topics/db/managers#custom-managers&quot;&gt;定制管理器&lt;/a&gt;，该管理器添加了用于使用&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;以及获取特定模型的&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;实例的方法。</target>
        </trans-unit>
        <trans-unit id="3ca2d03ef0213f868473b19d489c0a841c984cea" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt;&lt;code&gt;Feed&lt;/code&gt;&lt;/a&gt; classes are views which can be used in your &lt;a href=&quot;../../topics/http/urls&quot;&gt;URLconf&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt; &lt;code&gt;Feed&lt;/code&gt; &lt;/a&gt;类的实例是可以在&lt;a href=&quot;../../topics/http/urls&quot;&gt;URLconf中&lt;/a&gt;使用的视图。</target>
        </trans-unit>
        <trans-unit id="34051ba4426c5e025165ef265738387f13ceb9b3" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;OuterRef&lt;/code&gt; may be used in conjunction with nested instances of &lt;code&gt;Subquery&lt;/code&gt; to refer to a containing queryset that isn&amp;rsquo;t the immediate parent. For example, this queryset would need to be within a nested pair of &lt;code&gt;Subquery&lt;/code&gt; instances to resolve correctly:</source>
          <target state="translated">可以将 &lt;code&gt;OuterRef&lt;/code&gt; 实例与Subquery的嵌套实例结合使用，以引用不是直接父级的包含 &lt;code&gt;Subquery&lt;/code&gt; 。例如，此 &lt;code&gt;Subquery&lt;/code&gt; 将需要在子查询实例的嵌套对中才能正确解析：</target>
        </trans-unit>
        <trans-unit id="965f5a03cce86b0170feb9ce452f784fa702bfa6" translate="yes" xml:space="preserve">
          <source>Instantiate an instance of &lt;code&gt;form_class&lt;/code&gt; using &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_form_kwargs&quot;&gt;&lt;code&gt;get_form_kwargs()&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;form_class&lt;/code&gt; isn&amp;rsquo;t provided &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_form_class&quot;&gt;&lt;code&gt;get_form_class()&lt;/code&gt;&lt;/a&gt; will be used.</source>
          <target state="translated">使用 &lt;code&gt;form_class&lt;/code&gt; &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_form_kwargs&quot;&gt; &lt;code&gt;get_form_kwargs()&lt;/code&gt; &lt;/a&gt;实例化form_class的实例。如果未提供 &lt;code&gt;form_class&lt;/code&gt; ,则将使用get_form_class &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_form_class&quot;&gt; &lt;code&gt;get_form_class()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bda3a125fe2fe7a55e269e5c944a131e88c730c7" translate="yes" xml:space="preserve">
          <source>Instantiates a &lt;a href=&quot;#django.template.response.SimpleTemplateResponse&quot;&gt;&lt;code&gt;SimpleTemplateResponse&lt;/code&gt;&lt;/a&gt; object with the given template, context, content type, HTTP status, and charset.</source>
          <target state="translated">使用给定的模板，上下文，内容类型，HTTP状态和字符集实例化&lt;a href=&quot;#django.template.response.SimpleTemplateResponse&quot;&gt; &lt;code&gt;SimpleTemplateResponse&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="b812b7e4f2492d34300d293c78fa87ed20e859f6" translate="yes" xml:space="preserve">
          <source>Instantiates a &lt;a href=&quot;#django.template.response.TemplateResponse&quot;&gt;&lt;code&gt;TemplateResponse&lt;/code&gt;&lt;/a&gt; object with the given request, template, context, content type, HTTP status, and charset.</source>
          <target state="translated">使用给定的请求，模板，上下文，内容类型，HTTP状态和字符集实例化&lt;a href=&quot;#django.template.response.TemplateResponse&quot;&gt; &lt;code&gt;TemplateResponse&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="75e1e0c6a3602561b6ddda3e1aca0d8c160c34b0" translate="yes" xml:space="preserve">
          <source>Instantiates a &lt;code&gt;QueryDict&lt;/code&gt; object based on &lt;code&gt;query_string&lt;/code&gt;.</source>
          <target state="translated">实例化 &lt;code&gt;QueryDict&lt;/code&gt; 基于对象 &lt;code&gt;query_string&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83733746f9ce2ff985b0d7b6dd35d2bfeeaab86f" translate="yes" xml:space="preserve">
          <source>Instantiates an &lt;code&gt;HttpResponse&lt;/code&gt; object with the given page content and content type.</source>
          <target state="translated">用给定的页面内容和内容类型实例化 &lt;code&gt;HttpResponse&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="fc3b8f3c6151107514c4bf4eeca907ec5482a39c" translate="yes" xml:space="preserve">
          <source>Instantiating</source>
          <target state="translated">Instantiating</target>
        </trans-unit>
        <trans-unit id="cffabffc243a86e5e4fd4008f1711530d0497620" translate="yes" xml:space="preserve">
          <source>Instantiating, processing, and rendering forms</source>
          <target state="translated">实例化、处理和渲染表单。</target>
        </trans-unit>
        <trans-unit id="22aeabb7dc852022ced533d52ff737b2b3613349" translate="yes" xml:space="preserve">
          <source>Instead of a constant, you can also pass any callable:</source>
          <target state="translated">你也可以通过任何可调用来代替常量。</target>
        </trans-unit>
        <trans-unit id="72257cae811c35080fe1f5b3607be554b2133268" translate="yes" xml:space="preserve">
          <source>Instead of hardcoding the secret key in your settings module, consider loading it from an environment variable:</source>
          <target state="translated">与其在设置模块中硬编码秘钥,不如考虑从环境变量中加载它。</target>
        </trans-unit>
        <trans-unit id="fe3dc3e8adb7c023a6a4d986658465fea88d21ee" translate="yes" xml:space="preserve">
          <source>Instead of referring to &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; directly, you should reference the user model using &lt;code&gt;django.contrib.auth.get_user_model()&lt;/code&gt;. This method will return the currently active user model &amp;ndash; the custom user model if one is specified, or &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">相反，指的是&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;直接，你应该使用引用用户模型 &lt;code&gt;django.contrib.auth.get_user_model()&lt;/code&gt; 。此方法将返回当前活动的用户模型&amp;ndash;如果指定了自定义用户模型，则为&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;否则为User。</target>
        </trans-unit>
        <trans-unit id="bba92e02d2c06f149da74f37d67460e937d8a168" translate="yes" xml:space="preserve">
          <source>Instead of sending out real emails the console backend just writes the emails that would be sent to the standard output. By default, the console backend writes to &lt;code&gt;stdout&lt;/code&gt;. You can use a different stream-like object by providing the &lt;code&gt;stream&lt;/code&gt; keyword argument when constructing the connection.</source>
          <target state="translated">控制台后端不发送实际的电子邮件，而只是编写将发送到标准输出的电子邮件。默认情况下，控制台后端写入 &lt;code&gt;stdout&lt;/code&gt; 。构造连接时，可以通过提供 &lt;code&gt;stream&lt;/code&gt; 关键字参数来使用其他类似流的对象。</target>
        </trans-unit>
        <trans-unit id="8a20d35e04abc263b2085bd01850ef1fa676b80f" translate="yes" xml:space="preserve">
          <source>Instead, Django uses the &lt;code&gt;F()&lt;/code&gt; object to generate an SQL expression that describes the required operation at the database level.</source>
          <target state="translated">取而代之的是，Django使用 &lt;code&gt;F()&lt;/code&gt; 对象生成一个SQL表达式，该表达式描述数据库级别所需的操作。</target>
        </trans-unit>
        <trans-unit id="63739a1702388d926c53a0de1d6e622a2ad61b70" translate="yes" xml:space="preserve">
          <source>Instead, you must create a new custom field class and update your models to reference it:</source>
          <target state="translated">相反,您必须创建一个新的自定义字段类并更新您的模型以引用它。</target>
        </trans-unit>
        <trans-unit id="91490210e1a90ded8db45f1dc59077e81e981701" translate="yes" xml:space="preserve">
          <source>Instructs the browser to always send the full URL as the referrer.</source>
          <target state="translated">指示浏览器始终发送完整的URL作为引用者。</target>
        </trans-unit>
        <trans-unit id="cfd51c30985320dbadc1a598127335712c56106c" translate="yes" xml:space="preserve">
          <source>Instructs the browser to send a full URL as the referrer, but only when no protocol downgrade occurs.</source>
          <target state="translated">指示浏览器发送完整的URL作为引用者,但只有在没有发生协议降级的情况下。</target>
        </trans-unit>
        <trans-unit id="b636598035ca4d6177e3e6c9c903dcc3d8c1ef76" translate="yes" xml:space="preserve">
          <source>Instructs the browser to send a full URL, but only for same-origin links. No referrer will be sent for cross-origin links.</source>
          <target state="translated">指示浏览器发送完整的URL,但只针对同源链接。对于跨源链接,将不发送推荐人。</target>
        </trans-unit>
        <trans-unit id="9c0fb8de2583c8c8bae50209d5c64150e59b7871" translate="yes" xml:space="preserve">
          <source>Instructs the browser to send no referrer for links clicked on this site.</source>
          <target state="translated">指示浏览器对在本网站上点击的链接不发送推荐人。</target>
        </trans-unit>
        <trans-unit id="b7ecd1ffca0fc0e4b0053ac06d1820f83756efd8" translate="yes" xml:space="preserve">
          <source>Instructs the browser to send only the origin, not the full URL, and to send no referrer when a protocol downgrade occurs.</source>
          <target state="translated">指示浏览器只发送原点,而不是完整的URL,并在协议降级时不发送referrer。</target>
        </trans-unit>
        <trans-unit id="637d99a5fb685a12c3c6e4098633e5db47b9ba49" translate="yes" xml:space="preserve">
          <source>Instructs the browser to send only the origin, not the full URL, as the referrer.</source>
          <target state="translated">指示浏览器只发送原点,而不是完整的URL作为引用者。</target>
        </trans-unit>
        <trans-unit id="18be72781eb1ccbaa5b15b5eddd01a77e00e6f66" translate="yes" xml:space="preserve">
          <source>Instructs the browser to send the full URL as the referrer for same-origin links, and only the origin for cross-origin links.</source>
          <target state="translated">指示浏览器发送完整的URL作为同源链接的引用者,而只发送跨源链接的来源。</target>
        </trans-unit>
        <trans-unit id="192e4032c9433119a1b8f523f5783c3815f7a2f6" translate="yes" xml:space="preserve">
          <source>Instructs the browser to send the full URL when the link is same-origin and no protocol downgrade occurs; send only the origin when the link is cross-origin and no protocol downgrade occurs; and no referrer when a protocol downgrade occurs.</source>
          <target state="translated">当链接为同源且不发生协议降级时,指示浏览器发送完整的URL;当链接为跨源且不发生协议降级时,只发送原点;当发生协议降级时,不发送引用者。</target>
        </trans-unit>
        <trans-unit id="7b23bec4f6507d4cca8f5d60ec3bc51bc4831a7a" translate="yes" xml:space="preserve">
          <source>Integer representing the data type for all the bands. Defaults to &lt;code&gt;6&lt;/code&gt; (Float32). All bands of a new raster are required to have the same datatype. The value mapping is:</source>
          <target state="translated">整数，表示所有频段的数据类型。默认为 &lt;code&gt;6&lt;/code&gt; （Float32）。新栅格的所有波段都必须具有相同的数据类型。值映射为：</target>
        </trans-unit>
        <trans-unit id="931c94c24a1258cda59704dd26701d5f538121be" translate="yes" xml:space="preserve">
          <source>Integer representing the number of bands of the raster. A raster can be created without passing band data upon creation. If the number of bands isn&amp;rsquo;t specified, it&amp;rsquo;s automatically calculated from the length of the &lt;code&gt;bands&lt;/code&gt; input. The number of bands can&amp;rsquo;t be changed after creation.</source>
          <target state="translated">整数，表示栅格的波段数。可以创建栅格而无需在创建时传递波段数据。如果未指定频段数，则会根据输入的 &lt;code&gt;bands&lt;/code&gt; 长度自动计算得出。创建后无法更改频段数。</target>
        </trans-unit>
        <trans-unit id="eda8d701f2e10496740d2917dbe2843f2ce3cae9" translate="yes" xml:space="preserve">
          <source>Integrating Django with a legacy database</source>
          <target state="translated">将Django与传统数据库进行整合</target>
        </trans-unit>
        <trans-unit id="0b0ec2fc7e330a3d8a5e7db32ab4c2dc5da8dbb8" translate="yes" xml:space="preserve">
          <source>Integrating validation</source>
          <target state="translated">整合验证</target>
        </trans-unit>
        <trans-unit id="01629819b333385e9c8b6238bf93b852412fec63" translate="yes" xml:space="preserve">
          <source>Integrating with django.contrib.sitemaps</source>
          <target state="translated">与django.contrib.sitemaps集成。</target>
        </trans-unit>
        <trans-unit id="611f4acd53244dba4ed5abdac3bc6b3f444bd766" translate="yes" xml:space="preserve">
          <source>Integration with &lt;code&gt;coverage.py&lt;/code&gt;</source>
          <target state="translated">与 &lt;code&gt;coverage.py&lt;/code&gt; 集成</target>
        </trans-unit>
        <trans-unit id="b71bc9a25badec542735b3baa9e3604b7bc84c68" translate="yes" xml:space="preserve">
          <source>Interaction with default ordering or &lt;code&gt;order_by()&lt;/code&gt;</source>
          <target state="translated">与默认订购或 &lt;code&gt;order_by()&lt;/code&gt; 的交互</target>
        </trans-unit>
        <trans-unit id="bb6cfa8632d39cef2cb4c3ea3a83ee056e07d987" translate="yes" xml:space="preserve">
          <source>Interaction with model validation</source>
          <target state="translated">与模型验证的相互作用</target>
        </trans-unit>
        <trans-unit id="ce3b3216035a4a5417f816e3184e425f57e7634e" translate="yes" xml:space="preserve">
          <source>Interested in giving back to the community a little? Maybe you&amp;rsquo;ve found a bug in Django that you&amp;rsquo;d like to see fixed, or maybe there&amp;rsquo;s a small feature you want added.</source>
          <target state="translated">有兴趣回馈社区吗？也许您已经找到了想要修复的Django错误，或者您想添加一个小功能。</target>
        </trans-unit>
        <trans-unit id="ff69045749030dbdd4e91ddd52a7fa05a707a735" translate="yes" xml:space="preserve">
          <source>Internally, &lt;code&gt;order_with_respect_to&lt;/code&gt; adds an additional field/database column named &lt;code&gt;_order&lt;/code&gt; and sets the model&amp;rsquo;s &lt;a href=&quot;#django.db.models.Options.ordering&quot;&gt;&lt;code&gt;ordering&lt;/code&gt;&lt;/a&gt; option to this field. Consequently, &lt;code&gt;order_with_respect_to&lt;/code&gt; and &lt;code&gt;ordering&lt;/code&gt; cannot be used together, and the ordering added by &lt;code&gt;order_with_respect_to&lt;/code&gt; will apply whenever you obtain a list of objects of this model.</source>
          <target state="translated">在内部， &lt;code&gt;order_with_respect_to&lt;/code&gt; 添加了一个名为 &lt;code&gt;_order&lt;/code&gt; 的附加字段/数据库列，并将模型的&lt;a href=&quot;#django.db.models.Options.ordering&quot;&gt; &lt;code&gt;ordering&lt;/code&gt; &lt;/a&gt;选项设置为该字段。因此， &lt;code&gt;order_with_respect_to&lt;/code&gt; 和 &lt;code&gt;ordering&lt;/code&gt; 不能一起使用，并且只要您获得此模型的对象列表， &lt;code&gt;order_with_respect_to&lt;/code&gt; 添加的排序将适用。</target>
        </trans-unit>
        <trans-unit id="a53f9038dcc32cdab6d7c6e27dab10759972255d" translate="yes" xml:space="preserve">
          <source>Internally, Django uses a &lt;a href=&quot;../ref/files/file#django.core.files.File&quot;&gt;&lt;code&gt;django.core.files.File&lt;/code&gt;&lt;/a&gt; instance any time it needs to represent a file.</source>
          <target state="translated">在内部，Django 在需要表示文件时会使用&lt;a href=&quot;../ref/files/file#django.core.files.File&quot;&gt; &lt;code&gt;django.core.files.File&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="7b010410ca6e72b4d0b168b164c7004c1438d2f5" translate="yes" xml:space="preserve">
          <source>Internally, a &lt;code&gt;QuerySet&lt;/code&gt; can be constructed, filtered, sliced, and generally passed around without actually hitting the database. No database activity actually occurs until you do something to evaluate the queryset.</source>
          <target state="translated">在内部，可以构建，过滤，切片和一般传递 &lt;code&gt;QuerySet&lt;/code&gt; 而不实际访问数据库。除非您执行某些操作来评估查询集，否则实际上不会发生数据库活动。</target>
        </trans-unit>
        <trans-unit id="e6dd13d4fd26757d4a2c67a0952cec4935e89742" translate="yes" xml:space="preserve">
          <source>Internally, inline translations use an &lt;a href=&quot;../../ref/utils#django.utils.translation.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">在内部，内联翻译使用&lt;a href=&quot;../../ref/utils#django.utils.translation.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;调用。</target>
        </trans-unit>
        <trans-unit id="cc66677522f28534dcc0a16a7bab83d78d113263" translate="yes" xml:space="preserve">
          <source>Internally, these strings are of type &lt;a href=&quot;../ref/utils#django.utils.safestring.SafeString&quot;&gt;&lt;code&gt;SafeString&lt;/code&gt;&lt;/a&gt;. You can test for them using code like:</source>
          <target state="translated">在内部，这些字符串的类型为&lt;a href=&quot;../ref/utils#django.utils.safestring.SafeString&quot;&gt; &lt;code&gt;SafeString&lt;/code&gt; &lt;/a&gt;。您可以使用以下代码测试它们：</target>
        </trans-unit>
        <trans-unit id="9840502f92536bda054c5b8b5b3b050903683be4" translate="yes" xml:space="preserve">
          <source>Internationalization and localization</source>
          <target state="translated">国际化和本地化</target>
        </trans-unit>
        <trans-unit id="e609ab9b7fe6379c805dbcbfe129b8b31dec62eb" translate="yes" xml:space="preserve">
          <source>Internationalization tags and filters</source>
          <target state="translated">国际化标签和过滤器</target>
        </trans-unit>
        <trans-unit id="d8fc92b491eced77c0cc45a1a5338ff73ae08d59" translate="yes" xml:space="preserve">
          <source>Internationalization: in JavaScript code</source>
          <target state="translated">国际化:在JavaScript代码中</target>
        </trans-unit>
        <trans-unit id="c75f43d03d9fa742d9fb2c7d7873a7d5bc0ebf9d" translate="yes" xml:space="preserve">
          <source>Internationalization: in Python code</source>
          <target state="translated">国际化:Python代码中</target>
        </trans-unit>
        <trans-unit id="8fc3c49e3bc6b80c15d9568df95ee12b2b4ec66b" translate="yes" xml:space="preserve">
          <source>Internationalization: in URL patterns</source>
          <target state="translated">国际化:在URL模式中</target>
        </trans-unit>
        <trans-unit id="093d237356c453f731e7c6a8c57c6018a7b3c174" translate="yes" xml:space="preserve">
          <source>Internationalization: in template code</source>
          <target state="translated">国际化:模板代码中</target>
        </trans-unit>
        <trans-unit id="23b1a5b17786a57e3a8fb5dfdf8cf77e5bfff51e" translate="yes" xml:space="preserve">
          <source>Internet Explorer 8+</source>
          <target state="translated">Internet Explorer 8+</target>
        </trans-unit>
        <trans-unit id="4d8f4358c79e6f7a5ea439bdcb9825fcc3a2e838" translate="yes" xml:space="preserve">
          <source>Interpolation of &lt;code&gt;'%(app_label)s'&lt;/code&gt; and &lt;code&gt;'%(class)s'&lt;/code&gt; was added.</source>
          <target state="translated">添加了 &lt;code&gt;'%(app_label)s'&lt;/code&gt; 和 &lt;code&gt;'%(class)s'&lt;/code&gt; 的插值。</target>
        </trans-unit>
        <trans-unit id="670d4bcb5c48156aee896dbdd2af0b12b43400b5" translate="yes" xml:space="preserve">
          <source>Interpretation of naive datetime objects</source>
          <target state="translated">天真的日期时间对象的解释</target>
        </trans-unit>
        <trans-unit id="ad5e7d5ae08e5cb2ed9acbf41f656da0c395f4bb" translate="yes" xml:space="preserve">
          <source>Introduce new views based on Django&amp;rsquo;s generic views.</source>
          <target state="translated">根据Django的通用视图介绍新视图。</target>
        </trans-unit>
        <trans-unit id="142d034c2e0110437de3729fc1ce5c2b7c38c50e" translate="yes" xml:space="preserve">
          <source>Introducing automated testing</source>
          <target state="translated">引入自动化测试</target>
        </trans-unit>
        <trans-unit id="de87d094c22de1337720d7b33816998f9929c20c" translate="yes" xml:space="preserve">
          <source>Introducing the Django Admin</source>
          <target state="translated">Django管理员介绍</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="2b73339f8aa842940195a89ffe993ba65c3d9dde" translate="yes" xml:space="preserve">
          <source>Introduction to class-based views</source>
          <target state="translated">介绍基于类的观点</target>
        </trans-unit>
        <trans-unit id="a82d8f28beb37bb1505deaf578ad2cbafb3ae7f0" translate="yes" xml:space="preserve">
          <source>Introductions to all the key parts of Django you&amp;rsquo;ll need to know:</source>
          <target state="translated">您需要了解Django所有关键部分的简介：</target>
        </trans-unit>
        <trans-unit id="c10d2f178e3c219ba32583ff1ed75ce35061d066" translate="yes" xml:space="preserve">
          <source>Introspects the database tables in the database pointed-to by the &lt;a href=&quot;settings#std:setting-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt; setting and outputs a Django model module (a &lt;code&gt;models.py&lt;/code&gt; file) to standard output.</source>
          <target state="translated">内省&lt;a href=&quot;settings#std:setting-NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt;设置所指向的数据库中的数据库表，并将Django模型模块（ &lt;code&gt;models.py&lt;/code&gt; 文件）输出到标准输出。</target>
        </trans-unit>
        <trans-unit id="e558f12b2fea5ada2ae33560ebbbda69b6b36bad" translate="yes" xml:space="preserve">
          <source>Is it a problem that Django&amp;rsquo;s CSRF protection isn&amp;rsquo;t linked to a session by default?</source>
          <target state="translated">Django的CSRF保护默认未链接到会话是否存在问题？</target>
        </trans-unit>
        <trans-unit id="689295ff3cb0af6e5ed4a1994a98fd53a5442ebe" translate="yes" xml:space="preserve">
          <source>Is posting an arbitrary CSRF token pair (cookie and POST data) a vulnerability?</source>
          <target state="translated">发布任意的CSRF令牌对(cookie和POST数据)是漏洞吗?</target>
        </trans-unit>
        <trans-unit id="46c6d6a6205743736d71d9cc8062c3a735fdd329" translate="yes" xml:space="preserve">
          <source>Isolation level</source>
          <target state="translated">隔离等级</target>
        </trans-unit>
        <trans-unit id="9c193045b5c55b9e3ed8d3e3e8a7b0a1f8cfd3eb" translate="yes" xml:space="preserve">
          <source>Isolation when using &lt;code&gt;QuerySet.iterator()&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;QuerySet.iterator()&lt;/code&gt; 时的隔离</target>
        </trans-unit>
        <trans-unit id="7a224f02cd37de1afa21b98fadb23b1f88a19283" translate="yes" xml:space="preserve">
          <source>Issues an SQL &lt;code&gt;DELETE&lt;/code&gt; for the object. This only deletes the object in the database; the Python instance will still exist and will still have data in its fields. This method returns the number of objects deleted and a dictionary with the number of deletions per object type.</source>
          <target state="translated">发出对象的SQL &lt;code&gt;DELETE&lt;/code&gt; 。这只会删除数据库中的对象。Python实例将仍然存在，并且其字段中仍将包含数据。此方法返回删除的对象数和带有每种对象类型的删除数的字典。</target>
        </trans-unit>
        <trans-unit id="7475fe4c0d244b8e0bfd059947833601ade2bebc" translate="yes" xml:space="preserve">
          <source>It accepts two lists of operations, and when asked to apply state will use the state list, and when asked to apply changes to the database will use the database list. Do not use this operation unless you&amp;rsquo;re very sure you know what you&amp;rsquo;re doing.</source>
          <target state="translated">它接受两个操作列表，当要求应用状态时将使用状态列表，而当要求将更改应用于数据库时将使用数据库列表。除非您非常确定自己知道自己在做什么，否则不要使用此操作。</target>
        </trans-unit>
        <trans-unit id="41a4422a0925c7b4416e1d76c7cc32a51af230b3" translate="yes" xml:space="preserve">
          <source>It accepts two lists of operations. When asked to apply state, it will use the &lt;code&gt;state_operations&lt;/code&gt; list (this is a generalized version of &lt;a href=&quot;#django.db.migrations.operations.RunSQL&quot;&gt;&lt;code&gt;RunSQL&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;code&gt;state_operations&lt;/code&gt; argument). When asked to apply changes to the database, it will use the &lt;code&gt;database_operations&lt;/code&gt; list.</source>
          <target state="translated">它接受两个操作列表。当要求应用状态时，它将使用 &lt;code&gt;state_operations&lt;/code&gt; 列表（这是&lt;a href=&quot;#django.db.migrations.operations.RunSQL&quot;&gt; &lt;code&gt;RunSQL&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;state_operations&lt;/code&gt; 参数的通用版本）。当要求将更改应用于数据库时，它将使用 &lt;code&gt;database_operations&lt;/code&gt; 列表。</target>
        </trans-unit>
        <trans-unit id="5d336b8e808b2ce8e6bc0892a95ebcc857261a00" translate="yes" xml:space="preserve">
          <source>It allows developers and template authors to specify which parts of their apps should be translated or formatted for local languages and cultures.</source>
          <target state="translated">它允许开发人员和模板作者指定其应用程序的哪些部分应该被翻译或格式化以适应当地语言和文化。</target>
        </trans-unit>
        <trans-unit id="7dfc09caa336e0bf633e02009b185c91abc12fe9" translate="yes" xml:space="preserve">
          <source>It also handles the default permissions model as defined for &lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../topics/auth/customizing#django.contrib.auth.models.PermissionsMixin&quot;&gt;&lt;code&gt;PermissionsMixin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">它还处理为&lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../topics/auth/customizing#django.contrib.auth.models.PermissionsMixin&quot;&gt; &lt;code&gt;PermissionsMixin&lt;/code&gt; &lt;/a&gt;定义的默认权限模型。</target>
        </trans-unit>
        <trans-unit id="cdc1d84e127c6d08799ea2bc49fa76e2873146cb" translate="yes" xml:space="preserve">
          <source>It also has these methods:</source>
          <target state="translated">它也有这些方法。</target>
        </trans-unit>
        <trans-unit id="511ef7aa375efc4f8ed62f952d298be8e0b4f95c" translate="yes" xml:space="preserve">
          <source>It also lets you create multiple versions of a site, with different base templates, while reusing child templates. Django&amp;rsquo;s creators have used this technique to create strikingly different mobile versions of sites by only creating a new base template.</source>
          <target state="translated">它还允许您在重复使用子模板的同时，使用不同的基本模板创建网站的多个版本。Django的创建者使用此技术通过仅创建一个新的基本模板来创建网站的移动版本。</target>
        </trans-unit>
        <trans-unit id="34f7a089ecd79aa5a1bdbaa5daa9e3f24da1ed07" translate="yes" xml:space="preserve">
          <source>It also provides an additional method:</source>
          <target state="translated">它还提供了一种额外的方法。</target>
        </trans-unit>
        <trans-unit id="1daa4ac3ccf52ec1ffd7ad17d03466c814d3d12f" translate="yes" xml:space="preserve">
          <source>It also supports domain-only links ending in one of the original top level domains (&lt;code&gt;.com&lt;/code&gt;, &lt;code&gt;.edu&lt;/code&gt;, &lt;code&gt;.gov&lt;/code&gt;, &lt;code&gt;.int&lt;/code&gt;, &lt;code&gt;.mil&lt;/code&gt;, &lt;code&gt;.net&lt;/code&gt;, and &lt;code&gt;.org&lt;/code&gt;). For example, &lt;code&gt;djangoproject.com&lt;/code&gt; gets converted.</source>
          <target state="translated">它还支持以原始顶级域名（ &lt;code&gt;.com&lt;/code&gt; ， &lt;code&gt;.edu&lt;/code&gt; ， &lt;code&gt;.gov&lt;/code&gt; ， &lt;code&gt;.int&lt;/code&gt; ， &lt;code&gt;.mil&lt;/code&gt; ， &lt;code&gt;.net&lt;/code&gt; 和 &lt;code&gt;.org&lt;/code&gt; ）之一结尾的仅域链接。例如， &lt;code&gt;djangoproject.com&lt;/code&gt; 被转换。</target>
        </trans-unit>
        <trans-unit id="a096078e43f7fa4f663661c8b0fa7e65fb69edbb" translate="yes" xml:space="preserve">
          <source>It also tells the browser that the form data should be sent to the URL specified in the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&amp;rsquo;s &lt;code&gt;action&lt;/code&gt; attribute - &lt;code&gt;/admin/&lt;/code&gt; - and that it should be sent using the HTTP mechanism specified by the &lt;code&gt;method&lt;/code&gt; attribute - &lt;code&gt;post&lt;/code&gt;.</source>
          <target state="translated">它还告诉浏览器，表单数据应发送到 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 的 &lt;code&gt;action&lt;/code&gt; 属性- &lt;code&gt;/admin/&lt;/code&gt; -中指定的URL ，并且应使用 &lt;code&gt;method&lt;/code&gt; attribute- &lt;code&gt;post&lt;/code&gt; 指定的HTTP机制发送。</target>
        </trans-unit>
        <trans-unit id="2a2a327dddd892e286db3b065802898e942c35e8" translate="yes" xml:space="preserve">
          <source>It assumes an understanding of templates, contexts, variables, tags, and rendering. Start with the &lt;a href=&quot;../../topics/templates#template-language-intro&quot;&gt;introduction to the Django template language&lt;/a&gt; if you aren&amp;rsquo;t familiar with these concepts.</source>
          <target state="translated">它假定您了解模板，上下文，变量，标签和渲染。如果您不熟悉这些概念&lt;a href=&quot;../../topics/templates#template-language-intro&quot;&gt;，请从Django模板语言介绍&lt;/a&gt;开始。</target>
        </trans-unit>
        <trans-unit id="690d1365bfbf3fb0fa4c118b89f89d5b8366bb2e" translate="yes" xml:space="preserve">
          <source>It assumes middleware that&amp;rsquo;s compatible with the old style of Django 1.9 and earlier (having methods like &lt;code&gt;process_request()&lt;/code&gt;, &lt;code&gt;process_exception()&lt;/code&gt;, and &lt;code&gt;process_response()&lt;/code&gt;).</source>
          <target state="translated">它假定中间件与Django 1.9和更早的旧样式兼容（具有诸如 &lt;code&gt;process_request()&lt;/code&gt; ， &lt;code&gt;process_exception()&lt;/code&gt; 和 &lt;code&gt;process_response()&lt;/code&gt; 之类的方法）。</target>
        </trans-unit>
        <trans-unit id="1ad1839af85eeb8a94e119c33ec2f05a3545b5e7" translate="yes" xml:space="preserve">
          <source>It boils down to this: Use exactly one of either &lt;code&gt;configure()&lt;/code&gt; or &lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-8&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt;. Not both, and not neither.</source>
          <target state="translated">归结为这一点：完全使用 &lt;code&gt;configure()&lt;/code&gt; 或&lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-8&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; 之一&lt;/a&gt;。两者都不是，也不是两者都不是。</target>
        </trans-unit>
        <trans-unit id="adb59b85de0de778de68aecefe53c76f0de98f9c" translate="yes" xml:space="preserve">
          <source>It boils down to this: Use exactly one of either &lt;code&gt;configure()&lt;/code&gt; or &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;. Not both, and not neither.</source>
          <target state="translated">归结为这一点：完全使用 &lt;code&gt;configure()&lt;/code&gt; 或 &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; 之一。两者都不是，也不是两者都不是。</target>
        </trans-unit>
        <trans-unit id="56cf6839db62a78b3bd293b603fd6fb8dfbb0eb3" translate="yes" xml:space="preserve">
          <source>It can also be registered as a transform as described in &lt;a href=&quot;#django.db.models.functions.Length&quot;&gt;&lt;code&gt;Length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如&lt;a href=&quot;#django.db.models.functions.Length&quot;&gt; &lt;code&gt;Length&lt;/code&gt; 中&lt;/a&gt;所述，它也可以注册为转换。</target>
        </trans-unit>
        <trans-unit id="eb23c5c9e3231d62a5810bd6a50cdfe7b6a5920f" translate="yes" xml:space="preserve">
          <source>It can also be registered as a transform as described in &lt;a href=&quot;#django.db.models.functions.Length&quot;&gt;&lt;code&gt;Length&lt;/code&gt;&lt;/a&gt;. The default lookup name is &lt;code&gt;ord&lt;/code&gt;.</source>
          <target state="translated">如&lt;a href=&quot;#django.db.models.functions.Length&quot;&gt; &lt;code&gt;Length&lt;/code&gt; 中&lt;/a&gt;所述，它也可以注册为转换。默认查找名称是 &lt;code&gt;ord&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ea67b801d1eaece4d265dba2ce2e38e5910e3a3" translate="yes" xml:space="preserve">
          <source>It can also be registered as a transform as described in &lt;a href=&quot;#django.db.models.functions.Length&quot;&gt;&lt;code&gt;Length&lt;/code&gt;&lt;/a&gt;. The default lookup name is &lt;code&gt;reverse&lt;/code&gt;.</source>
          <target state="translated">如&lt;a href=&quot;#django.db.models.functions.Length&quot;&gt; &lt;code&gt;Length&lt;/code&gt; 中&lt;/a&gt;所述，它也可以注册为转换。默认查找名称为 &lt;code&gt;reverse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b83a041f76ddd9a3ab23ee010a83c03a9e951ed" translate="yes" xml:space="preserve">
          <source>It can also be registered as a transform. For example:</source>
          <target state="translated">也可以注册为变换。例如:</target>
        </trans-unit>
        <trans-unit id="7bd0768970c34a1a29a145ed1522c59cc494bcb5" translate="yes" xml:space="preserve">
          <source>It can also be used as a context manager, which will automatically call &lt;code&gt;open()&lt;/code&gt; and &lt;code&gt;close()&lt;/code&gt; as needed:</source>
          <target state="translated">它也可以用作上下文管理器，它将根据需要自动调用 &lt;code&gt;open()&lt;/code&gt; 和 &lt;code&gt;close()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ed3fc307f28897d761a0063f6cf900a66eaaebe1" translate="yes" xml:space="preserve">
          <source>It can assign settings dynamically using normal Python syntax. For example:</source>
          <target state="translated">它可以使用普通的Python语法动态地分配设置。例如</target>
        </trans-unit>
        <trans-unit id="57a589b7f3ed91b9ee61b7886d257dffc5695c89" translate="yes" xml:space="preserve">
          <source>It can be used as a context manager, e.g. &lt;code&gt;with file.open() as f:&lt;/code&gt;.</source>
          <target state="translated">它可以作为一个上下文管理器，例如， &lt;code&gt;with file.open() as f:&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b2097031fa8fe10d38cffd390f98272e96a466e" translate="yes" xml:space="preserve">
          <source>It can be useful to include multiple versions of the content in an email; the classic example is to send both text and HTML versions of a message. With Django&amp;rsquo;s email library, you can do this using the &lt;code&gt;EmailMultiAlternatives&lt;/code&gt; class. This subclass of &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; has an &lt;code&gt;attach_alternative()&lt;/code&gt; method for including extra versions of the message body in the email. All the other methods (including the class initialization) are inherited directly from &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在电子邮件中包含内容的多个版本可能很有用；经典示例是发送消息的文本版本和HTML版本。使用Django的电子邮件库，您可以使用 &lt;code&gt;EmailMultiAlternatives&lt;/code&gt; 类进行此操作。&lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; 的&lt;/a&gt;此子类具有 &lt;code&gt;attach_alternative()&lt;/code&gt; 方法，用于在电子邮件中包含消息正文的其他版本。所有其他方法（包括类初始化）都直接从&lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;继承。</target>
        </trans-unit>
        <trans-unit id="5c4198fb60ed49893bf1b7b15101a986fc314284" translate="yes" xml:space="preserve">
          <source>It can import values from other settings files.</source>
          <target state="translated">它可以从其他设置文件中导入数值。</target>
        </trans-unit>
        <trans-unit id="d14f9ff60b98c4d0c8826e092f3be2f126af5e32" translate="yes" xml:space="preserve">
          <source>It can prove unwieldy to redefine settings that contain a list of values. In practice, adding or removing values is often sufficient. Django provides the &lt;a href=&quot;#django.test.SimpleTestCase.modify_settings&quot;&gt;&lt;code&gt;modify_settings()&lt;/code&gt;&lt;/a&gt; context manager for easier settings changes:</source>
          <target state="translated">重新定义包含值列表的设置可能很麻烦。实际上，添加或删除值通常就足够了。Django提供了&lt;a href=&quot;#django.test.SimpleTestCase.modify_settings&quot;&gt; &lt;code&gt;modify_settings()&lt;/code&gt; &lt;/a&gt;上下文管理器，可以更轻松地进行设置更改：</target>
        </trans-unit>
        <trans-unit id="097608e43f341dbd5fc60aa8b784590fa3776b10" translate="yes" xml:space="preserve">
          <source>It can sometimes be worth checking whether different and better-performing versions of the software that you&amp;rsquo;re using are available.</source>
          <target state="translated">有时值得检查您所使用软件的不同版本和性能更好的版本。</target>
        </trans-unit>
        <trans-unit id="020494bf079569c48d07f0e339eeaba2144e3978" translate="yes" xml:space="preserve">
          <source>It casts &lt;code&gt;objs&lt;/code&gt; to a list, which fully evaluates &lt;code&gt;objs&lt;/code&gt; if it&amp;rsquo;s a generator. The cast allows inspecting all objects so that any objects with a manually set primary key can be inserted first. If you want to insert objects in batches without evaluating the entire generator at once, you can use this technique as long as the objects don&amp;rsquo;t have any manually set primary keys:</source>
          <target state="translated">它蒙上 &lt;code&gt;objs&lt;/code&gt; 到列表中，这充分评估 &lt;code&gt;objs&lt;/code&gt; ，如果它是一台发电机。强制转换允许检查所有对象，以便可以首先插入具有手动设置的主键的任何对象。如果要批量插入对象而不一次评估整个生成器，则可以使用此技术，只要对象没有任何手动设置的主键即可：</target>
        </trans-unit>
        <trans-unit id="ceb8f9445123da563549e25d61604338816d4379" translate="yes" xml:space="preserve">
          <source>It checks if the authentication backend stored in the session is present in &lt;a href=&quot;../settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt;&lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt;&lt;/a&gt;. If so, it uses the backend&amp;rsquo;s &lt;code&gt;get_user()&lt;/code&gt; method to retrieve the user model instance and then verifies the session by calling the user model&amp;rsquo;s &lt;a href=&quot;../../topics/auth/customizing#django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash&quot;&gt;&lt;code&gt;get_session_auth_hash()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">它检查会话中存储的身份验证后端是否存在于&lt;a href=&quot;../settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt; &lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt; 中&lt;/a&gt;。如果是这样，它将使用后端的 &lt;code&gt;get_user()&lt;/code&gt; 方法检索用户模型实例，然后通过调用用户模型的&lt;a href=&quot;../../topics/auth/customizing#django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash&quot;&gt; &lt;code&gt;get_session_auth_hash()&lt;/code&gt; &lt;/a&gt;方法来验证会话。</target>
        </trans-unit>
        <trans-unit id="3944a69b3b8d5e875b158cbb7605a1481e03f1ee" translate="yes" xml:space="preserve">
          <source>It defaults to &lt;code&gt;'utf-8'&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;'utf-8'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="610e7c05ff132aa7c98f9f01ec8dcc655f337645" translate="yes" xml:space="preserve">
          <source>It defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="623e5cad0209d1a8e190acf6c13089e4a56c233d" translate="yes" xml:space="preserve">
          <source>It defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d209a528a103c486502ebe2e0181e7e90306575" translate="yes" xml:space="preserve">
          <source>It defaults to a list containing:</source>
          <target state="translated">它默认为包含以下内容的列表:</target>
        </trans-unit>
        <trans-unit id="3db0ca2305071d48e523540f02a1e4d4cdd92923" translate="yes" xml:space="preserve">
          <source>It defaults to an empty list.</source>
          <target state="translated">它的默认值是一个空列表。</target>
        </trans-unit>
        <trans-unit id="b54a841d858e6e9a9cdf3df9d4cd720e0e1979b8" translate="yes" xml:space="preserve">
          <source>It defaults to an empty string.</source>
          <target state="translated">它默认为一个空字符串。</target>
        </trans-unit>
        <trans-unit id="4086bf4e205c88779a9aaabba9fb09a7f47c9f8b" translate="yes" xml:space="preserve">
          <source>It defaults to the empty string.</source>
          <target state="translated">它的默认值是空字符串。</target>
        </trans-unit>
        <trans-unit id="28e917985102de2cb163734f6e066baeaa33a044" translate="yes" xml:space="preserve">
          <source>It defaults to the name of the module defining the engine class, i.e. the next to last piece of &lt;a href=&quot;#std:setting-TEMPLATES-BACKEND&quot;&gt;&lt;code&gt;BACKEND&lt;/code&gt;&lt;/a&gt;, when it isn&amp;rsquo;t provided. For example if the backend is &lt;code&gt;'mypackage.whatever.Backend'&lt;/code&gt; then its default name is &lt;code&gt;'whatever'&lt;/code&gt;.</source>
          <target state="translated">它默认为定义引擎类的模块的名称，即未提供的最后一块&lt;a href=&quot;#std:setting-TEMPLATES-BACKEND&quot;&gt; &lt;code&gt;BACKEND&lt;/code&gt; &lt;/a&gt;。例如，如果后端为 &lt;code&gt;'mypackage.whatever.Backend'&lt;/code&gt; ,则其默认名称为 &lt;code&gt;'whatever'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f670820519da37f85de420992b3fd748290e4628" translate="yes" xml:space="preserve">
          <source>It defaults to the value of the &lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">它默认为&lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;设置的值。</target>
        </trans-unit>
        <trans-unit id="d147afb5556d22db8ab3da32b2d02bdec93b0017" translate="yes" xml:space="preserve">
          <source>It deliberately ignores GET requests (and other requests that are defined as &amp;lsquo;safe&amp;rsquo; by &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-4.2.1&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 7231#section-4.2.1&lt;/strong&gt;&lt;/a&gt;). These requests ought never to have any potentially dangerous side effects, and so a CSRF attack with a GET request ought to be harmless. &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-4.2.1&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 7231#section-4.2.1&lt;/strong&gt;&lt;/a&gt; defines POST, PUT, and DELETE as &amp;lsquo;unsafe&amp;rsquo;, and all other methods are also assumed to be unsafe, for maximum protection.</source>
          <target state="translated">它故意忽略GET请求（以及&lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-4.2.1&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 7231＃section-4.2.1&lt;/strong&gt;&lt;/a&gt;定义为&amp;ldquo;安全&amp;rdquo;的其他请求）。这些请求绝不应该有任何潜在的危险副作用，因此带有GET请求的CSRF攻击应该是无害的。&lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-4.2.1&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 7231＃section-4.2.1&lt;/strong&gt;&lt;/a&gt;将POST，PUT和DELETE定义为&amp;ldquo;不安全&amp;rdquo;，并且所有其他方法也被认为是不安全的，以提供最大的保护。</target>
        </trans-unit>
        <trans-unit id="c1df500b3fdcfe2bc743847338a819e8fc0de2b5" translate="yes" xml:space="preserve">
          <source>It does not support middleware. Session and authentication attributes must be supplied by the test itself if required for the view to function properly.</source>
          <target state="translated">它不支持中间件。如果需要视图正常运行,会话和认证属性必须由测试本身提供。</target>
        </trans-unit>
        <trans-unit id="c47f33f421faaf0d62ce5c333284b1b924733727" translate="yes" xml:space="preserve">
          <source>It does not work with child models in a multi-table inheritance scenario.</source>
          <target state="translated">在多表继承的情况下,它不能与子模型一起工作。</target>
        </trans-unit>
        <trans-unit id="8152d5b171a8766f9da5b542812132a92f7bc3a8" translate="yes" xml:space="preserve">
          <source>It does not work with many-to-many relationships.</source>
          <target state="translated">对于多对多的关系,它是行不通的。</target>
        </trans-unit>
        <trans-unit id="8fc51282cf5ef3da5ced5304bc564e431c925d3c" translate="yes" xml:space="preserve">
          <source>It doesn&amp;rsquo;t allow for Python syntax errors.</source>
          <target state="translated">它不允许出现Python语法错误。</target>
        </trans-unit>
        <trans-unit id="067e9c9b65fffdb89e5ef4a000cf2df974c65535" translate="yes" xml:space="preserve">
          <source>It doesn&amp;rsquo;t matter which model has the &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;, but you should only put it in one of the models &amp;ndash; not both.</source>
          <target state="translated">哪个模型具有&lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;都没有关系，但您只应将其放在其中一个模型中，而不要同时放在两个模型中。</target>
        </trans-unit>
        <trans-unit id="36f56311955ef1f67fee06986862dbe095296993" translate="yes" xml:space="preserve">
          <source>It doesn&amp;rsquo;t save you from generating the response, which may be expensive.</source>
          <target state="translated">它不能避免您生成响应，这可能会很昂贵。</target>
        </trans-unit>
        <trans-unit id="87a806c4922f40382d07fc0463c125f83ba7a5bc" translate="yes" xml:space="preserve">
          <source>It exposes all possible operations as methods, that should be called in the order you wish changes to be applied. Some possible operations or types of change are not possible on all databases - for example, MyISAM does not support foreign key constraints.</source>
          <target state="translated">它将所有可能的操作以方法的形式展现出来,这些方法应该按照你希望的变化顺序被调用。有些可能的操作或更改类型并不是在所有的数据库中都能实现--例如,MyISAM不支持外键约束。</target>
        </trans-unit>
        <trans-unit id="0c58c5a4e6116594807b291787a1f7990bcf8231" translate="yes" xml:space="preserve">
          <source>It has access to the following settings:</source>
          <target state="translated">它可以访问以下设置:</target>
        </trans-unit>
        <trans-unit id="e0a3475069a9ec716d0910e37c46be9d681e15d1" translate="yes" xml:space="preserve">
          <source>It has no &lt;code&gt;content&lt;/code&gt; attribute. Instead, it has a &lt;a href=&quot;#django.http.StreamingHttpResponse.streaming_content&quot;&gt;&lt;code&gt;streaming_content&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">它没有 &lt;code&gt;content&lt;/code&gt; 属性。相反，它具有&lt;a href=&quot;#django.http.StreamingHttpResponse.streaming_content&quot;&gt; &lt;code&gt;streaming_content&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="aa0dc2f03765869baa63c35bfcea12543db464d7" translate="yes" xml:space="preserve">
          <source>It has three fields: &lt;code&gt;username&lt;/code&gt; (from the user model), &lt;code&gt;password1&lt;/code&gt;, and &lt;code&gt;password2&lt;/code&gt;. It verifies that &lt;code&gt;password1&lt;/code&gt; and &lt;code&gt;password2&lt;/code&gt; match, validates the password using &lt;a href=&quot;passwords#django.contrib.auth.password_validation.validate_password&quot;&gt;&lt;code&gt;validate_password()&lt;/code&gt;&lt;/a&gt;, and sets the user&amp;rsquo;s password using &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.set_password&quot;&gt;&lt;code&gt;set_password()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">它具有三个字段： &lt;code&gt;username&lt;/code&gt; （来自用户模型）， &lt;code&gt;password1&lt;/code&gt; 和 &lt;code&gt;password2&lt;/code&gt; 。它验证 &lt;code&gt;password1&lt;/code&gt; 和 &lt;code&gt;password2&lt;/code&gt; 匹配，使用&lt;a href=&quot;passwords#django.contrib.auth.password_validation.validate_password&quot;&gt; &lt;code&gt;validate_password()&lt;/code&gt; &lt;/a&gt;验证密码，并使用&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.set_password&quot;&gt; &lt;code&gt;set_password()&lt;/code&gt; &lt;/a&gt;设置用户密码。</target>
        </trans-unit>
        <trans-unit id="7d779021d49b2c90161c17c331456b5b3068c78f" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;possible&lt;/em&gt; to write code that does all of this manually, but Django can take care of it all for you.</source>
          <target state="translated">这是&lt;em&gt;有可能&lt;/em&gt;到手动做这一切写代码，但Django的可以照顾这一切为您服务。</target>
        </trans-unit>
        <trans-unit id="076bb76ff5ce930dc8437ad0f408044a3c975e80" translate="yes" xml:space="preserve">
          <source>It is a good idea to limit the accessibility of your caching system and database using a firewall.</source>
          <target state="translated">使用防火墙来限制缓存系统和数据库的可访问性是个好主意。</target>
        </trans-unit>
        <trans-unit id="e4bd508268912d6165f52fe9e95d58ac3654cc3c" translate="yes" xml:space="preserve">
          <source>It is also able to consume standard context variables, e.g. assuming a &lt;code&gt;user_stylesheet&lt;/code&gt; variable is passed to the template:</source>
          <target state="translated">它还能够使用标准上下文变量，例如，假设将 &lt;code&gt;user_stylesheet&lt;/code&gt; 变量传递给模板：</target>
        </trans-unit>
        <trans-unit id="7275d5f0dbdce35d356cc0217bbaced47935d584" translate="yes" xml:space="preserve">
          <source>It is also important to be particularly careful when using &lt;code&gt;is_safe&lt;/code&gt; with custom template tags, the &lt;a href=&quot;../ref/templates/builtins#std:templatefilter-safe&quot;&gt;&lt;code&gt;safe&lt;/code&gt;&lt;/a&gt; template tag, &lt;a href=&quot;../ref/utils#module-django.utils.safestring&quot;&gt;&lt;code&gt;mark_safe&lt;/code&gt;&lt;/a&gt;, and when autoescape is turned off.</source>
          <target state="translated">同样重要的是使用时要特别小心 &lt;code&gt;is_safe&lt;/code&gt; 与自定义模板标签，在&lt;a href=&quot;../ref/templates/builtins#std:templatefilter-safe&quot;&gt; &lt;code&gt;safe&lt;/code&gt; &lt;/a&gt;模板标签，&lt;a href=&quot;../ref/utils#module-django.utils.safestring&quot;&gt; &lt;code&gt;mark_safe&lt;/code&gt; &lt;/a&gt;，当autoescape被关闭。</target>
        </trans-unit>
        <trans-unit id="d35cd2bb04a3095baf1f0156dad2be668729d17a" translate="yes" xml:space="preserve">
          <source>It is also important to remember that when running with &lt;a href=&quot;#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; turned on, Django will remember every SQL query it executes. This is useful when you&amp;rsquo;re debugging, but it&amp;rsquo;ll rapidly consume memory on a production server.</source>
          <target state="translated">同样重要的是要记住，在启用&lt;a href=&quot;#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; 的&lt;/a&gt;情况下运行时，Django会记住它执行的每个SQL查询。这在调试时很有用，但会迅速消耗生产服务器上的内存。</target>
        </trans-unit>
        <trans-unit id="ee9ff4e3c1dd0783a48894b88febf1b60c5ee412" translate="yes" xml:space="preserve">
          <source>It is also possible to make use of the &lt;a href=&quot;https://docs.python.org/3/library/enum.html#functional-api&quot;&gt;Enum Functional API&lt;/a&gt; with the caveat that labels are automatically generated as highlighted above:</source>
          <target state="translated">还可以使用&lt;a href=&quot;https://docs.python.org/3/library/enum.html#functional-api&quot;&gt;Enum Functional API&lt;/a&gt;，并需要注意的是标签会自动生成，如上面突出显示的那样：</target>
        </trans-unit>
        <trans-unit id="44479df581713f225efd5b192e8fbdd6c0ac4474" translate="yes" xml:space="preserve">
          <source>It is always better for security to deploy your site behind HTTPS. Without this, it is possible for malicious network users to sniff authentication credentials or any other information transferred between client and server, and in some cases &amp;ndash; &lt;strong&gt;active&lt;/strong&gt; network attackers &amp;ndash; to alter data that is sent in either direction.</source>
          <target state="translated">在HTTPS后面部署您的站点对于安全性而言总是更好的选择。否则，恶意网络用户可能会嗅探身份验证凭据或客户端与服务器之间传输的任何其他信息，并且在某些情况下（&lt;strong&gt;活动的&lt;/strong&gt;网络攻击者）可能会更改沿任一方向发送的数据。</target>
        </trans-unit>
        <trans-unit id="1b4af27d7dd9a152a61bf23559d3c0f63300fe1e" translate="yes" xml:space="preserve">
          <source>It is an error to pass both &lt;code&gt;db_constraint&lt;/code&gt; and &lt;code&gt;through&lt;/code&gt;.</source>
          <target state="translated">这是通过两个错误 &lt;code&gt;db_constraint&lt;/code&gt; 和 &lt;code&gt;through&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f706f2f8550bb586d727ba9bab956c8a2837633c" translate="yes" xml:space="preserve">
          <source>It is an error to pass in &lt;code&gt;flat&lt;/code&gt; when there is more than one field.</source>
          <target state="translated">如果有多个字段，则无法通过 &lt;code&gt;flat&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94e37286047bbf178a0b441757a7d81a744c2c81" translate="yes" xml:space="preserve">
          <source>It is best practice to provide a dedicated environment for each Django project you create. There are many options to manage environments and packages within the Python ecosystem, some of which are recommended in the &lt;a href=&quot;https://packaging.python.org/guides/tool-recommendations/&quot;&gt;Python documentation&lt;/a&gt;. Python itself comes with &lt;a href=&quot;https://docs.python.org/3/tutorial/venv.html&quot;&gt;venv&lt;/a&gt; for managing environments which we will use for this guide.</source>
          <target state="translated">最佳实践是为您创建的每个Django项目提供专用的环境。在Python生态系统中，有许多选项可用于管理环境和软件包，&lt;a href=&quot;https://packaging.python.org/guides/tool-recommendations/&quot;&gt;Python文档&lt;/a&gt;中推荐了其中的一些选项。Python本身随附用于管理环境的&lt;a href=&quot;https://docs.python.org/3/tutorial/venv.html&quot;&gt;venv&lt;/a&gt;，我们将在本指南中使用它。</target>
        </trans-unit>
        <trans-unit id="d92635fe6d3362308ab42d3856be4325b2da976c" translate="yes" xml:space="preserve">
          <source>It is considered an error to specify a cache name that is not configured.</source>
          <target state="translated">指定未配置的缓存名称会被视为错误。</target>
        </trans-unit>
        <trans-unit id="db35e4ce1081482f04f069c13884b47498468f3e" translate="yes" xml:space="preserve">
          <source>It is for these reasons that Django provides &lt;em&gt;natural keys&lt;/em&gt;. A natural key is a tuple of values that can be used to uniquely identify an object instance without using the primary key value.</source>
          <target state="translated">出于这些原因，Django提供了&lt;em&gt;自然键&lt;/em&gt;。自然键是值的元组，可用于在不使用主键值的情况下唯一地标识对象实例。</target>
        </trans-unit>
        <trans-unit id="cdaad7896204a4ac78b076176cec9c1cbf93733e" translate="yes" xml:space="preserve">
          <source>It is important to understand that a Django application is a set of code that interacts with various parts of the framework. There&amp;rsquo;s no such thing as an &lt;code&gt;Application&lt;/code&gt; object. However, there&amp;rsquo;s a few places where Django needs to interact with installed applications, mainly for configuration and also for introspection. That&amp;rsquo;s why the application registry maintains metadata in an &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; instance for each installed application.</source>
          <target state="translated">了解Django应用程序是与框架的各个部分进行交互的一组代码，这一点很重要。没有像 &lt;code&gt;Application&lt;/code&gt; 对象这样的东西。但是，在某些地方Django需要与已安装的应用程序进行交互，主要用于配置和自省。这就是应用程序注册表为每个已安装的应用程序在&lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt;实例中维护元数据的原因。</target>
        </trans-unit>
        <trans-unit id="21713b029856dacee13a57247a95a54d57c7a08f" translate="yes" xml:space="preserve">
          <source>It is important you use a &lt;code&gt;ModelForm&lt;/code&gt; here otherwise things can break. See the &lt;a href=&quot;../../forms/index&quot;&gt;forms&lt;/a&gt; documentation on &lt;a href=&quot;../../forms/validation&quot;&gt;custom validation&lt;/a&gt; and, more specifically, the &lt;a href=&quot;../../../topics/forms/modelforms#overriding-modelform-clean-method&quot;&gt;model form validation notes&lt;/a&gt; for more information.</source>
          <target state="translated">在这里使用 &lt;code&gt;ModelForm&lt;/code&gt; 很重要，否则事情可能会中断。有关更多信息，请参阅有关&lt;a href=&quot;../../forms/validation&quot;&gt;自定义验证&lt;/a&gt;的&lt;a href=&quot;../../forms/index&quot;&gt;表单&lt;/a&gt;文档，更具体地说，请参阅&lt;a href=&quot;../../../topics/forms/modelforms#overriding-modelform-clean-method&quot;&gt;模型表单验证注释&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9f47a7255f5d5f42baf7de03967064db62c559d6" translate="yes" xml:space="preserve">
          <source>It is internal to the HTTP handler modules and you are unlikely to see it elsewhere. If you are modifying HTTP handling code, you should raise this when you encounter an aborted request to make sure the socket is closed cleanly.</source>
          <target state="translated">它是HTTP处理模块内部的,你不太可能在其他地方看到它。如果你正在修改HTTP处理代码,你应该在遇到一个中止的请求时提出这个问题,以确保socket被干净地关闭。</target>
        </trans-unit>
        <trans-unit id="3ea3d5784be308197fa0ef8a916ca48b31fde3d2" translate="yes" xml:space="preserve">
          <source>It is necessary to adapt the calling style when calling sync code from an async context, or vice-versa. For this there are two adapter functions, from the &lt;code&gt;asgiref.sync&lt;/code&gt; module: &lt;a href=&quot;#asgiref.sync.async_to_sync&quot;&gt;&lt;code&gt;async_to_sync()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asgiref.sync.sync_to_async&quot;&gt;&lt;code&gt;sync_to_async()&lt;/code&gt;&lt;/a&gt;. They are used to transition between the calling styles while preserving compatibility.</source>
          <target state="translated">从异步上下文中调用同步代码时，有必要调整调用样式，反之亦然。为此，从 &lt;code&gt;asgiref.sync&lt;/code&gt; 模块有两个适配器函数：&lt;a href=&quot;#asgiref.sync.async_to_sync&quot;&gt; &lt;code&gt;async_to_sync()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#asgiref.sync.sync_to_async&quot;&gt; &lt;code&gt;sync_to_async()&lt;/code&gt; &lt;/a&gt;。它们用于在调用样式之间进行转换，同时保留兼容性。</target>
        </trans-unit>
        <trans-unit id="5f34ac9cd66cf8fc8ae4b45ada16f5905bb668c2" translate="yes" xml:space="preserve">
          <source>It is not always necessary to define a custom model form. The &lt;code&gt;modelformset_factory&lt;/code&gt; function has several arguments which are passed through to &lt;code&gt;modelform_factory&lt;/code&gt;, which are described below.</source>
          <target state="translated">不一定总是需要定义自定义模型形式。该 &lt;code&gt;modelformset_factory&lt;/code&gt; 函数有几个参数，它们通过传递给 &lt;code&gt;modelform_factory&lt;/code&gt; ，这在下文描述。</target>
        </trans-unit>
        <trans-unit id="9a8b2584d8949ae3aad5845125aff27c6dea3682" translate="yes" xml:space="preserve">
          <source>It is often useful to automatically prepopulate a SlugField based on the value of some other value. You can do this automatically in the admin using &lt;a href=&quot;../contrib/admin/index#django.contrib.admin.ModelAdmin.prepopulated_fields&quot;&gt;&lt;code&gt;prepopulated_fields&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">根据一些其他值自动预填充SlugField通常很有用。您可以使用&lt;a href=&quot;../contrib/admin/index#django.contrib.admin.ModelAdmin.prepopulated_fields&quot;&gt; &lt;code&gt;prepopulated_fields&lt;/code&gt; &lt;/a&gt;在管理员中自动执行此操作。</target>
        </trans-unit>
        <trans-unit id="6b9f4db131ef38104458cc78f509f9b8e4f82a6f" translate="yes" xml:space="preserve">
          <source>It is optimal because:</source>
          <target state="translated">它是最佳的,因为:</target>
        </trans-unit>
        <trans-unit id="408d4a1ae07d6047f237c8763a2a0fa6bd869c5a" translate="yes" xml:space="preserve">
          <source>It is permissible to specify a multi-valued field to order the results by (for example, a &lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; field, or the reverse relation of a &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; field).</source>
          <target state="translated">允许指定一个多值字段以对结果进行排序（例如，&lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;字段或&lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;字段的反向关系）。</target>
        </trans-unit>
        <trans-unit id="4de64c032c28609f6df579f2dfec13b9e5f4dc55" translate="yes" xml:space="preserve">
          <source>It is possible to also look permissions up by &lt;code&gt;{% if in %}&lt;/code&gt; statements. For example:</source>
          <target state="translated">也可以按 &lt;code&gt;{% if in %}&lt;/code&gt; 语句中查找权限。例如：</target>
        </trans-unit>
        <trans-unit id="621c5a5a4c8691aea320db24c5e909c90b4b8f41" translate="yes" xml:space="preserve">
          <source>It is possible to force the set of fields to be loaded by using the &lt;code&gt;fields&lt;/code&gt; argument.</source>
          <target state="translated">可以通过使用 &lt;code&gt;fields&lt;/code&gt; 参数来强制加载字段集。</target>
        </trans-unit>
        <trans-unit id="174fe92efe02e9e94a8eb86f6a7e7cb926b52c6f" translate="yes" xml:space="preserve">
          <source>It is possible to nest array fields - you can specify an instance of &lt;code&gt;ArrayField&lt;/code&gt; as the &lt;code&gt;base_field&lt;/code&gt;. For example:</source>
          <target state="translated">可以嵌套数组字段-您可以将 &lt;code&gt;ArrayField&lt;/code&gt; 的一个实例指定为 &lt;code&gt;base_field&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="e6bcdc82a033bbb732e04f96956f57d7253284dc" translate="yes" xml:space="preserve">
          <source>It is possible to override the name of the package which contains the migrations on a per-app basis by modifying the &lt;a href=&quot;../ref/settings#std:setting-MIGRATION_MODULES&quot;&gt;&lt;code&gt;MIGRATION_MODULES&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">通过修改&lt;a href=&quot;../ref/settings#std:setting-MIGRATION_MODULES&quot;&gt; &lt;code&gt;MIGRATION_MODULES&lt;/code&gt; &lt;/a&gt;设置，可以按应用覆盖包含迁移的软件包名称。</target>
        </trans-unit>
        <trans-unit id="50d0e398cc2ed04ea79dcc18f3912bf3c9a79141" translate="yes" xml:space="preserve">
          <source>It is possible to specify a custom template for rendering a list filter:</source>
          <target state="translated">可以指定一个自定义模板来渲染列表过滤器。</target>
        </trans-unit>
        <trans-unit id="c4fa9dadf195abd5e2ec6597c4a03e19eae786f6" translate="yes" xml:space="preserve">
          <source>It is possible to use an inline with generically related objects. Let&amp;rsquo;s say you have the following models:</source>
          <target state="translated">可以将内联与一般相关的对象一起使用。假设您有以下模型：</target>
        </trans-unit>
        <trans-unit id="1d37ea5ca9ec311b0a77aeb96bb1d5e82b99086a" translate="yes" xml:space="preserve">
          <source>It is recommended to always provide explicit &lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name&quot;&gt;&lt;code&gt;verbose_name&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name_plural&quot;&gt;&lt;code&gt;verbose_name_plural&lt;/code&gt;&lt;/a&gt; options rather than relying on the fallback English-centric and somewhat na&amp;iuml;ve determination of verbose names Django performs by looking at the model&amp;rsquo;s class name:</source>
          <target state="translated">建议始终提供显式的&lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name&quot;&gt; &lt;code&gt;verbose_name&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name_plural&quot;&gt; &lt;code&gt;verbose_name_plural&lt;/code&gt; &lt;/a&gt;选项，而不要依靠回退的以英语为中心并且天真地确定Django通过查看模型的类名执行的冗长名称：</target>
        </trans-unit>
        <trans-unit id="1506ce35ebb7e326c976d49f03cd54b034d8b5cb" translate="yes" xml:space="preserve">
          <source>It is sometimes possible to have more than one foreign key to the same model. Take this model for instance:</source>
          <target state="translated">有时同一个模型可以有多个外键。以这个模型为例。</target>
        </trans-unit>
        <trans-unit id="6e64ae5d4a907de96c1bace55146b1c430db4ac7" translate="yes" xml:space="preserve">
          <source>It is strongly advised that you use lowercase table names when you override the table name via &lt;code&gt;db_table&lt;/code&gt;, particularly if you are using the MySQL backend. See the &lt;a href=&quot;../databases#mysql-notes&quot;&gt;MySQL notes&lt;/a&gt; for more details.</source>
          <target state="translated">强烈建议您在通过 &lt;code&gt;db_table&lt;/code&gt; 覆盖表名时使用小写的表名，尤其是在使用MySQL后端时。有关更多详细信息，请参见&lt;a href=&quot;../databases#mysql-notes&quot;&gt;MySQL注释&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="61ab72b6279f2c2143e6e86aebc9b5bfd16c3339" translate="yes" xml:space="preserve">
          <source>It is strongly desirable to avoid hard-coding these URLs (a laborious, non-scalable and error-prone strategy). Equally dangerous is devising ad-hoc mechanisms to generate URLs that are parallel to the design described by the URLconf, which can result in the production of URLs that become stale over time.</source>
          <target state="translated">最好是避免对这些URL进行硬编码(一种费力、不可扩展和容易出错的策略)。同样危险的是设计专门的机制来生成与URLconf所描述的设计平行的URL,这会导致生成的URL随着时间的推移变得陈旧。</target>
        </trans-unit>
        <trans-unit id="3496c8823f46f96619f7c7234311315d48654dad" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that you explicitly set all fields that should be edited in the form using the &lt;code&gt;fields&lt;/code&gt; attribute. Failure to do so can easily lead to security problems when a form unexpectedly allows a user to set certain fields, especially when new fields are added to a model. Depending on how the form is rendered, the problem may not even be visible on the web page.</source>
          <target state="translated">强烈建议您使用 &lt;code&gt;fields&lt;/code&gt; 属性明确设置应在表单中编辑的所有字段。如果表单意外地允许用户设置某些字段，特别是在将新字段添加到模型中时，这样做失败很容易导致安全问题。根据表单的呈现方式，问题甚至可能在网页上不可见。</target>
        </trans-unit>
        <trans-unit id="9c6c3e0f0685ccb020fe3695c8557e40f27f6ff9" translate="yes" xml:space="preserve">
          <source>It is used to keep track of how many form instances are being displayed. If you are adding new forms via JavaScript, you should increment the count fields in this form as well. On the other hand, if you are using JavaScript to allow deletion of existing objects, then you need to ensure the ones being removed are properly marked for deletion by including &lt;code&gt;form-#-DELETE&lt;/code&gt; in the &lt;code&gt;POST&lt;/code&gt; data. It is expected that all forms are present in the &lt;code&gt;POST&lt;/code&gt; data regardless.</source>
          <target state="translated">它用于跟踪正在显示多少个表单实例。如果要通过JavaScript添加新表单，则还应增加此表单中的count字段。另一方面，如果使用JavaScript允许删除现有对象，则需要通过在 &lt;code&gt;POST&lt;/code&gt; 数据中包含 &lt;code&gt;form-#-DELETE&lt;/code&gt; 来确保将要删除的对象正确标记为删除。无论如何，期望所有形式都存在于 &lt;code&gt;POST&lt;/code&gt; 数据中。</target>
        </trans-unit>
        <trans-unit id="0e81a6c17c3961960826357ce78ba7cbd1d1c2dc" translate="yes" xml:space="preserve">
          <source>It is useful for when you need to use a URL reversal before your project&amp;rsquo;s URLConf is loaded. Some common cases where this function is necessary are:</source>
          <target state="translated">这对于在加载项目的URLConf之前需要使用URL反向的情况很有用。需要此功能的一些常见情况是：</target>
        </trans-unit>
        <trans-unit id="7edadcc89ba3b1214228e34855c13c67e577d922" translate="yes" xml:space="preserve">
          <source>It is useful when you know you&amp;rsquo;re only going to need values from a small number of the available fields and you won&amp;rsquo;t need the functionality of a model instance object. It&amp;rsquo;s more efficient to select only the fields you need to use.</source>
          <target state="translated">当您知道只需要少量可用字段中的值并且不需要模型实例对象的功能时，此功能很有用。仅选择您需要使用的字段更为有效。</target>
        </trans-unit>
        <trans-unit id="206782144dabd31d72568733a87ec94d13293b68" translate="yes" xml:space="preserve">
          <source>It is worth noting that what your method returns is identical to what you return from a function-based view, namely some form of &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;. This means that &lt;a href=&quot;../http/shortcuts&quot;&gt;http shortcuts&lt;/a&gt; or &lt;a href=&quot;../../ref/template-response#django.template.response.TemplateResponse&quot;&gt;&lt;code&gt;TemplateResponse&lt;/code&gt;&lt;/a&gt; objects are valid to use inside a class-based view.</source>
          <target state="translated">值得注意的是，您的方法返回的内容与从基于函数的视图返回的内容相同，即某种形式的&lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;。这意味着&lt;a href=&quot;../http/shortcuts&quot;&gt;http快捷方式&lt;/a&gt;或&lt;a href=&quot;../../ref/template-response#django.template.response.TemplateResponse&quot;&gt; &lt;code&gt;TemplateResponse&lt;/code&gt; &lt;/a&gt;对象可以在基于类的视图中有效使用。</target>
        </trans-unit>
        <trans-unit id="743aa8323dc10e1f9ece5cfaea879cb37ebc4b43" translate="yes" xml:space="preserve">
          <source>It isn&amp;rsquo;t enough to just put logging calls into your code. You also need to configure the loggers, handlers, filters, and formatters to ensure you can use the logging output.</source>
          <target state="translated">仅将调用记录放入代码中是不够的。您还需要配置记录器，处理程序，过滤器和格式化程序，以确保可以使用记录输出。</target>
        </trans-unit>
        <trans-unit id="39193d731385b7f76adf3109afc18b9fbf1b9c3d" translate="yes" xml:space="preserve">
          <source>It lets the site developers use the same Django view code for both sites. The view code that displays a given story checks to make sure the requested story is on the current site. It looks something like this:</source>
          <target state="translated">它可以让网站开发者在两个网站上使用相同的Django视图代码。显示给定故事的视图代码会检查确认所请求的故事是否在当前站点上。它看起来像这样。</target>
        </trans-unit>
        <trans-unit id="82d7859b62c014f37a7d006ce96504abe35f5a1a" translate="yes" xml:space="preserve">
          <source>It lets the site producers edit all content &amp;ndash; on both sites &amp;ndash; in a single interface (the Django admin).</source>
          <target state="translated">它使站点生产者可以在一个界面（Django admin）中编辑两个站点上的所有内容。</target>
        </trans-unit>
        <trans-unit id="dc346ea890ef3e267f17202b888b385aff5f57a5" translate="yes" xml:space="preserve">
          <source>It may be &lt;code&gt;None&lt;/code&gt; if the application doesn&amp;rsquo;t contain a &lt;code&gt;models&lt;/code&gt; module. Note that the database related signals such as &lt;a href=&quot;signals#django.db.models.signals.pre_migrate&quot;&gt;&lt;code&gt;pre_migrate&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;signals#django.db.models.signals.post_migrate&quot;&gt;&lt;code&gt;post_migrate&lt;/code&gt;&lt;/a&gt; are only emitted for applications that have a &lt;code&gt;models&lt;/code&gt; module.</source>
          <target state="translated">如果应用程序不包含 &lt;code&gt;models&lt;/code&gt; 模块，则可能为 &lt;code&gt;None&lt;/code&gt; 。注意，与数据库相关的信号（例如&lt;a href=&quot;signals#django.db.models.signals.pre_migrate&quot;&gt; &lt;code&gt;pre_migrate&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;signals#django.db.models.signals.post_migrate&quot;&gt; &lt;code&gt;post_migrate&lt;/code&gt; )&lt;/a&gt;仅针对具有 &lt;code&gt;models&lt;/code&gt; 模块的应用程序发出。</target>
        </trans-unit>
        <trans-unit id="891f0948f1f96a7f49d3a00640d02aa7c1ed47f4" translate="yes" xml:space="preserve">
          <source>It may be helpful to test your local changes with a Django project. First you have to create a new virtual environment, &lt;a href=&quot;#intro-contributing-install-local-copy&quot;&gt;install the previously cloned local copy of Django in editable mode&lt;/a&gt;, and create a new Django project outside of your local copy of Django. You will immediately see any changes you make to Django in your new project, which is of great help when writing your first patch.</source>
          <target state="translated">使用Django项目测试本地更改可能会有所帮助。首先，您必须创建一个新的虚拟环境，&lt;a href=&quot;#intro-contributing-install-local-copy&quot;&gt;以可编辑模式安装先前克隆的Django本地副本&lt;/a&gt;，然后在Django本地副本之外创建一个新的Django项目。您将立即在新项目中看到对Django所做的任何更改，这在编写第一个补丁程序时会很有帮助。</target>
        </trans-unit>
        <trans-unit id="e290fe2b47b3268f5612298ab687d2e303b5359a" translate="yes" xml:space="preserve">
          <source>It may be used to specify the number of significant digits for the coordinates in the GeoJSON representation &amp;ndash; the default value is 8.</source>
          <target state="translated">它可以用来指定GeoJSON表示形式中坐标的有效数字位数-默认值为8。</target>
        </trans-unit>
        <trans-unit id="68d22c0b42c12d91abf2d70f844470a5d9a67ccd" translate="yes" xml:space="preserve">
          <source>It may be used to specify the number of significant digits for the coordinates in the GeoJSON representation &amp;ndash; the default value is 8. Ignored on Oracle.</source>
          <target state="translated">它可用于指定GeoJSON表示形式中的坐标的有效位数&amp;ndash;默认值为8。在Oracle上被忽略。</target>
        </trans-unit>
        <trans-unit id="fac47a07e868f886829abcc8990983fdbddac81a" translate="yes" xml:space="preserve">
          <source>It may be worth checking whether Python software you&amp;rsquo;re using has been provided in a different implementation that can execute the same code faster.</source>
          <target state="translated">可能值得检查您所使用的Python软件是否已以不同的实现提供，该实现可以更快地执行相同的代码。</target>
        </trans-unit>
        <trans-unit id="74573669ba6fa17e012f8c9c7aeb042a5383ab68" translate="yes" xml:space="preserve">
          <source>It may return a string which will be printed to &lt;code&gt;stdout&lt;/code&gt; (wrapped by &lt;code&gt;BEGIN;&lt;/code&gt; and &lt;code&gt;COMMIT;&lt;/code&gt; if &lt;a href=&quot;#django.core.management.BaseCommand.output_transaction&quot;&gt;&lt;code&gt;output_transaction&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;).</source>
          <target state="translated">它可能返回一个将打印到 &lt;code&gt;stdout&lt;/code&gt; 的字符串（如果&lt;a href=&quot;#django.core.management.BaseCommand.output_transaction&quot;&gt; &lt;code&gt;output_transaction&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;True&lt;/code&gt; ,则由 &lt;code&gt;BEGIN;&lt;/code&gt; 和 &lt;code&gt;COMMIT;&lt;/code&gt; 包装）。</target>
        </trans-unit>
        <trans-unit id="1c1c7b378d9968c5ceb99a8f842f7e7d0ca6e76c" translate="yes" xml:space="preserve">
          <source>It means the same story doesn&amp;rsquo;t have to be published twice in the database; it only has a single record in the database.</source>
          <target state="translated">这意味着同一故事不必在数据库中发布两次；它在数据库中只有一条记录。</target>
        </trans-unit>
        <trans-unit id="6b46e8bda19fd3f445307b5f666c282a39b36528" translate="yes" xml:space="preserve">
          <source>It might look nicer to some people to try and chain the &lt;code&gt;etag&lt;/code&gt; and &lt;code&gt;last_modified&lt;/code&gt; decorators if you want to test both preconditions. However, this would lead to incorrect behavior.</source>
          <target state="translated">如果您想测试两个前提条件，那么尝试链接 &lt;code&gt;etag&lt;/code&gt; 和 &lt;code&gt;last_modified&lt;/code&gt; 装饰器可能看起来更好一些。但是，这将导致错误的行为。</target>
        </trans-unit>
        <trans-unit id="3f8695114b21a9b553118ffa2c5ddcd51f47b6ef" translate="yes" xml:space="preserve">
          <source>It might seem that our tests are growing out of control. At this rate there will soon be more code in our tests than in our application, and the repetition is unaesthetic, compared to the elegant conciseness of the rest of our code.</source>
          <target state="translated">我们的测试似乎已经失去了控制。按照这样的速度,我们的测试中的代码很快就会比我们的应用程序中的代码多,而且与我们其他代码的优雅简洁相比,这种重复是不美观的。</target>
        </trans-unit>
        <trans-unit id="6c425b5d6b3879127f569ce1f50dd0ba0ba96b36" translate="yes" xml:space="preserve">
          <source>It must be called explicitly in other cases, for instance in plain Python scripts.</source>
          <target state="translated">在其他情况下必须显式调用它,例如在纯Python脚本中。</target>
        </trans-unit>
        <trans-unit id="9e10351df97aa228da6872da0688f6abb34bb0e1" translate="yes" xml:space="preserve">
          <source>It must be unique across a Django project.</source>
          <target state="translated">它必须是整个Django项目中唯一的。</target>
        </trans-unit>
        <trans-unit id="f6495b09178141d4640e90c3472993cdce9587c4" translate="yes" xml:space="preserve">
          <source>It must be used via the context manager as this allows it to manage things like transactions and deferred SQL (like creating &lt;code&gt;ForeignKey&lt;/code&gt; constraints).</source>
          <target state="translated">必须通过上下文管理器使用它，因为它允许它管理事务和延迟SQL（例如创建 &lt;code&gt;ForeignKey&lt;/code&gt; 约束）之类的事情。</target>
        </trans-unit>
        <trans-unit id="56ee041848b140717d20c026aa533d96c5a8fbf4" translate="yes" xml:space="preserve">
          <source>It must end in a slash if set to a non-empty value.</source>
          <target state="translated">如果设置为非空值,必须以斜线结束。</target>
        </trans-unit>
        <trans-unit id="139ea78feed883583a666b45b0b67d233b14e2e3" translate="yes" xml:space="preserve">
          <source>It must return a response object that implements a &lt;code&gt;render&lt;/code&gt; method. It could alter the given &lt;code&gt;response&lt;/code&gt; by changing &lt;code&gt;response.template_name&lt;/code&gt; and &lt;code&gt;response.context_data&lt;/code&gt;, or it could create and return a brand-new &lt;a href=&quot;../../ref/template-response#django.template.response.TemplateResponse&quot;&gt;&lt;code&gt;TemplateResponse&lt;/code&gt;&lt;/a&gt; or equivalent.</source>
          <target state="translated">它必须返回一个实现 &lt;code&gt;render&lt;/code&gt; 方法的响应对象。它可以通过更改 &lt;code&gt;response.template_name&lt;/code&gt; 和 &lt;code&gt;response.context_data&lt;/code&gt; 来更改给定的 &lt;code&gt;response&lt;/code&gt; ，也可以创建并返回全新的&lt;a href=&quot;../../ref/template-response#django.template.response.TemplateResponse&quot;&gt; &lt;code&gt;TemplateResponse&lt;/code&gt; &lt;/a&gt;或等效的模板。</target>
        </trans-unit>
        <trans-unit id="f4b879dd92a89ae8af03090a22e5c88dd2ef0fa1" translate="yes" xml:space="preserve">
          <source>It only has access to the HTTP methods &lt;a href=&quot;tools#django.test.Client.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;tools#django.test.Client.post&quot;&gt;&lt;code&gt;post()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;tools#django.test.Client.put&quot;&gt;&lt;code&gt;put()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;tools#django.test.Client.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;tools#django.test.Client.head&quot;&gt;&lt;code&gt;head()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;tools#django.test.Client.options&quot;&gt;&lt;code&gt;options()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;tools#django.test.Client.trace&quot;&gt;&lt;code&gt;trace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">它只能访问HTTP方法&lt;a href=&quot;tools#django.test.Client.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;tools#django.test.Client.post&quot;&gt; &lt;code&gt;post()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;tools#django.test.Client.put&quot;&gt; &lt;code&gt;put()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;tools#django.test.Client.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;tools#django.test.Client.head&quot;&gt; &lt;code&gt;head()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;tools#django.test.Client.options&quot;&gt; &lt;code&gt;options()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;tools#django.test.Client.trace&quot;&gt; &lt;code&gt;trace()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2fee265c873ca29a4dfdc7e229dbc520d6e70061" translate="yes" xml:space="preserve">
          <source>It only works if it&amp;rsquo;s applied to the view itself.</source>
          <target state="translated">仅将其应用于视图本身时，它才有效。</target>
        </trans-unit>
        <trans-unit id="56c6c1c177ac76f7caf56b39a0f02ef3aeec1cbc" translate="yes" xml:space="preserve">
          <source>It passes that template a single context variable, &lt;code&gt;flatpage&lt;/code&gt;, which is the flatpage object. It uses &lt;a href=&quot;../templates/api#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt; in rendering the template.</source>
          <target state="translated">它向该模板传递单个上下文变量 &lt;code&gt;flatpage&lt;/code&gt; ，它是flatpage对象。它使用&lt;a href=&quot;../templates/api#django.template.RequestContext&quot;&gt; &lt;code&gt;RequestContext&lt;/code&gt; &lt;/a&gt;渲染模板。</target>
        </trans-unit>
        <trans-unit id="74322b670fac7c6c201108ca20a76c63ad2a8948" translate="yes" xml:space="preserve">
          <source>It provides some custom context:</source>
          <target state="translated">它提供了一些自定义的背景。</target>
        </trans-unit>
        <trans-unit id="8c03ba869af0beefc751707d92a55c518bcd4160" translate="yes" xml:space="preserve">
          <source>It requires no arguments at time of construction. However, you can use keywords arguments to specify some default headers. For example, this will send a &lt;code&gt;User-Agent&lt;/code&gt; HTTP header in each request:</source>
          <target state="translated">在构建时不需要任何争论。但是，您可以使用关键字参数指定一些默认标题。例如，这将在每个请求中发送一个 &lt;code&gt;User-Agent&lt;/code&gt; HTTP标头：</target>
        </trans-unit>
        <trans-unit id="8856f825df0ebb6ad43c3696cec72ae86ffd0ad1" translate="yes" xml:space="preserve">
          <source>It returns a dictionary with these contents:</source>
          <target state="translated">它返回一个包含这些内容的字典。</target>
        </trans-unit>
        <trans-unit id="10ed0dd1dad3c3e655c1ffc8d30de6f3770a90fa" translate="yes" xml:space="preserve">
          <source>It serves two purposes:</source>
          <target state="translated">它有两个目的。</target>
        </trans-unit>
        <trans-unit id="daac6ec735d9a03493f1120ae0b8f7b54d8ae574" translate="yes" xml:space="preserve">
          <source>It should be given an iterator that yields bytestrings as content.</source>
          <target state="translated">应该给它一个迭代器,产生bytestrings作为内容。</target>
        </trans-unit>
        <trans-unit id="35f580f8b6a4cd9c3f9c3bf6693e3fc2866c0c68" translate="yes" xml:space="preserve">
          <source>It should be given an iterator that yields strings as content.</source>
          <target state="translated">应该给它一个迭代器,产生字符串作为内容。</target>
        </trans-unit>
        <trans-unit id="72d799dc88c16a6235c11695fa71cc19f535a7cb" translate="yes" xml:space="preserve">
          <source>It should be very rare that you&amp;rsquo;ll need to use these parameters. Django will almost always do the right thing and trying to override that will lead to errors that are difficult to track down. This feature is for advanced use only.</source>
          <target state="translated">您将很少需要使用这些参数。Django几乎总是会做正确的事，尝试覆盖它会导致难以跟踪的错误。此功能仅供高级使用。</target>
        </trans-unit>
        <trans-unit id="32ebf580bfe057469268d0aab1f2ae9a8df7fd29" translate="yes" xml:space="preserve">
          <source>It should come after &lt;code&gt;SessionMiddleware&lt;/code&gt;, because &lt;code&gt;LocaleMiddleware&lt;/code&gt; makes use of session data. And it should come before &lt;code&gt;CommonMiddleware&lt;/code&gt; because &lt;code&gt;CommonMiddleware&lt;/code&gt; needs an activated language in order to resolve the requested URL.</source>
          <target state="translated">它应该在 &lt;code&gt;SessionMiddleware&lt;/code&gt; 之后，因为 &lt;code&gt;LocaleMiddleware&lt;/code&gt; 使用会话数据。并且它应该出现在 &lt;code&gt;CommonMiddleware&lt;/code&gt; 之前，因为 &lt;code&gt;CommonMiddleware&lt;/code&gt; 需要一种激活的语言才能解析请求的URL。</target>
        </trans-unit>
        <trans-unit id="d3417f5f5c578905b93f41a99bf7d9107d492449" translate="yes" xml:space="preserve">
          <source>It should go near the top of the list if you&amp;rsquo;re going to turn on the SSL redirect as that avoids running through a bunch of other unnecessary middleware.</source>
          <target state="translated">如果要打开SSL重定向，它应该在列表的顶部附近，因为这样可以避免运行大量其他不必要的中间件。</target>
        </trans-unit>
        <trans-unit id="20ae97a13ef76334051b1d6adb3f3e630733c512" translate="yes" xml:space="preserve">
          <source>It should return either &lt;code&gt;None&lt;/code&gt; or an &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; object. If it returns &lt;code&gt;None&lt;/code&gt;, Django will continue processing this request, executing any other &lt;code&gt;process_view()&lt;/code&gt; middleware and, then, the appropriate view. If it returns an &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; object, Django won&amp;rsquo;t bother calling the appropriate view; it&amp;rsquo;ll apply response middleware to that &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; and return the result.</source>
          <target state="translated">它应该返回 &lt;code&gt;None&lt;/code&gt; 或&lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;对象。如果返回 &lt;code&gt;None&lt;/code&gt; ，则Django将继续处理此请求，并执行其他任何 &lt;code&gt;process_view()&lt;/code&gt; 中间件，然后执行适当的视图。如果返回&lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;对象，则Django不会费心调用适当的视图；它将响应中间件应用于该&lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;并返回结果。</target>
        </trans-unit>
        <trans-unit id="56a2c669a765e81e1b0b56ce17865b18f7711335" translate="yes" xml:space="preserve">
          <source>It should return the value of the appropriate attribute from &lt;code&gt;model_instance&lt;/code&gt; for this field. The attribute name is in &lt;code&gt;self.attname&lt;/code&gt; (this is set up by &lt;a href=&quot;#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">它应从 &lt;code&gt;model_instance&lt;/code&gt; 返回此字段的适当属性的值。属性名称位于 &lt;code&gt;self.attname&lt;/code&gt; 中（由&lt;a href=&quot;#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;设置）。</target>
        </trans-unit>
        <trans-unit id="1bcce886f189622a63ac65f122c49d0df7f36412" translate="yes" xml:space="preserve">
          <source>It specifies the underlying form field for the array. This is not used to render any HTML, but it is used to process the submitted data and validate it. For example:</source>
          <target state="translated">它指定了数组的底层表单字段。它不用于渲染任何HTML,但它用于处理提交的数据并对其进行验证。例如</target>
        </trans-unit>
        <trans-unit id="f05cce6c98f6e4ace18c44a25c87ec03d8301899" translate="yes" xml:space="preserve">
          <source>It uses &lt;a href=&quot;../validators#django.core.validators.MinValueValidator&quot;&gt;&lt;code&gt;MinValueValidator&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../validators#django.core.validators.MaxValueValidator&quot;&gt;&lt;code&gt;MaxValueValidator&lt;/code&gt;&lt;/a&gt; to validate the input based on the values that the default database supports.</source>
          <target state="translated">它使用&lt;a href=&quot;../validators#django.core.validators.MinValueValidator&quot;&gt; &lt;code&gt;MinValueValidator&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../validators#django.core.validators.MaxValueValidator&quot;&gt; &lt;code&gt;MaxValueValidator&lt;/code&gt; &lt;/a&gt;根据默认数据库支持的值来验证输入。</target>
        </trans-unit>
        <trans-unit id="2e5b12b84e0f758abb110dc6f71e3c4bf5bf680f" translate="yes" xml:space="preserve">
          <source>It uses &lt;a href=&quot;../validators#django.core.validators.validate_slug&quot;&gt;&lt;code&gt;validate_slug&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../validators#django.core.validators.validate_unicode_slug&quot;&gt;&lt;code&gt;validate_unicode_slug&lt;/code&gt;&lt;/a&gt; for validation.</source>
          <target state="translated">它使用&lt;a href=&quot;../validators#django.core.validators.validate_slug&quot;&gt; &lt;code&gt;validate_slug&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../validators#django.core.validators.validate_unicode_slug&quot;&gt; &lt;code&gt;validate_unicode_slug&lt;/code&gt; &lt;/a&gt;进行验证。</target>
        </trans-unit>
        <trans-unit id="69d6064034be012d34362fa98f55318c001776ff" translate="yes" xml:space="preserve">
          <source>It uses these hooks to localize Web apps for particular users according to their preferences.</source>
          <target state="translated">它使用这些钩子根据特定用户的偏好为其本地化Web应用程序。</target>
        </trans-unit>
        <trans-unit id="2c5d75d3ebd51eebd293ed8c3115df3b47816a00" translate="yes" xml:space="preserve">
          <source>It will &lt;em&gt;not&lt;/em&gt; perform any permission checks, so it will be accessible to the general public.</source>
          <target state="translated">它&lt;em&gt;不会&lt;/em&gt;执行任何权限检查，因此公众可以访问。</target>
        </trans-unit>
        <trans-unit id="821786a5e1da87ecbbea2644ca4a4f5bcd23aca5" translate="yes" xml:space="preserve">
          <source>It will &lt;em&gt;not&lt;/em&gt; provide any header details to prevent caching. This means if the page retrieves data from the database, and caching middleware is active, the page could show outdated information.</source>
          <target state="translated">它&lt;em&gt;不会&lt;/em&gt;提供任何标题详细信息以防止缓存。这意味着，如果页面从数据库中检索数据，并且缓存中间件处于活动状态，则该页面可能会显示过时的信息。</target>
        </trans-unit>
        <trans-unit id="644c8f988574018f7fada47bc384adca96d5faf0" translate="yes" xml:space="preserve">
          <source>It will NOT compress content if any of the following are true:</source>
          <target state="translated">如果以下任何一项为真,它将不会压缩内容。</target>
        </trans-unit>
        <trans-unit id="2c053e1a98707a94d9c800f51a24bc57417e353c" translate="yes" xml:space="preserve">
          <source>It works backwards, too. To refer to a &amp;ldquo;reverse&amp;rdquo; relationship, use the lowercase name of the model.</source>
          <target state="translated">它也向后工作。要引用&amp;ldquo;反向&amp;rdquo;关系，请使用模型的小写名称。</target>
        </trans-unit>
        <trans-unit id="1ea2c97c7ae5d91b4cfe32fb4bf2aa453755b44e" translate="yes" xml:space="preserve">
          <source>It works backwards, too. Whilst it &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_query_name&quot;&gt;&lt;code&gt;can be customized&lt;/code&gt;&lt;/a&gt;, by default you refer to a &amp;ldquo;reverse&amp;rdquo; relationship in a lookup using the lowercase name of the model.</source>
          <target state="translated">它也向后工作。尽管&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_query_name&quot;&gt; &lt;code&gt;can be customized&lt;/code&gt; &lt;/a&gt;，但默认情况下，您使用模型的小写名称在查找中引用&amp;ldquo;反向&amp;rdquo;关系。</target>
        </trans-unit>
        <trans-unit id="ba3052615bd21fcc198bfe01f9395aa24f32d1ee" translate="yes" xml:space="preserve">
          <source>It works like this. Before calling a view function, Django starts a transaction. If the response is produced without problems, Django commits the transaction. If the view produces an exception, Django rolls back the transaction.</source>
          <target state="translated">它的工作原理是这样的。在调用视图函数之前,Django会启动一个事务。如果响应产生没有问题,Django就提交事务。如果视图产生了异常,Django就会回滚事务。</target>
        </trans-unit>
        <trans-unit id="314dada6f6b4efbe8278574634203c228e3dfd1b" translate="yes" xml:space="preserve">
          <source>It works like this: There are three slots for related Choices &amp;ndash; as specified by &lt;code&gt;extra&lt;/code&gt; &amp;ndash; and each time you come back to the &amp;ldquo;Change&amp;rdquo; page for an already-created object, you get another three extra slots.</source>
          <target state="translated">它的工作方式如下：相关选择有3个插槽（由 &lt;code&gt;extra&lt;/code&gt; 指定），每当您回到已创建对象的&amp;ldquo;更改&amp;rdquo;页面时，都会获得3个额外的插槽。</target>
        </trans-unit>
        <trans-unit id="fd652d964b8e8cbba1b0b82fa6fa4866bc842b4e" translate="yes" xml:space="preserve">
          <source>It works much like Django&amp;rsquo;s &lt;a href=&quot;syndication&quot;&gt;syndication framework&lt;/a&gt;. To create a sitemap, write a &lt;a href=&quot;#django.contrib.sitemaps.Sitemap&quot;&gt;&lt;code&gt;Sitemap&lt;/code&gt;&lt;/a&gt; class and point to it in your &lt;a href=&quot;../../topics/http/urls&quot;&gt;URLconf&lt;/a&gt;.</source>
          <target state="translated">它的工作原理类似于Django的&lt;a href=&quot;syndication&quot;&gt;联合框架&lt;/a&gt;。要创建站点地图，请编写一个&lt;a href=&quot;#django.contrib.sitemaps.Sitemap&quot;&gt; &lt;code&gt;Sitemap&lt;/code&gt; &lt;/a&gt;类，然后在&lt;a href=&quot;../../topics/http/urls&quot;&gt;URLconf中&lt;/a&gt;指向它。</target>
        </trans-unit>
        <trans-unit id="517efc2501dbd4f205ce9ac4a40724f67d48e4ba" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;d be inefficient and redundant to implement this sign up processing code twice, so the sites use the same code behind the scenes. But the &amp;ldquo;thank you for signing up&amp;rdquo; notice needs to be different for each site. By using &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; objects, we can abstract the &amp;ldquo;thank you&amp;rdquo; notice to use the values of the current site&amp;rsquo;s &lt;a href=&quot;#django.contrib.sites.models.Site.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.sites.models.Site.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">两次实施此签到处理代码将是低效率且多余的，因此站点在幕后使用相同的代码。但是每个站点的&amp;ldquo;谢谢您签名&amp;rdquo;通知都需要有所不同。通过使用&lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt;对象，我们可以抽象出&amp;ldquo;谢谢&amp;rdquo;通知，以使用当前站点&lt;a href=&quot;#django.contrib.sites.models.Site.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.contrib.sites.models.Site.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; 的值&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b07ba6619a8a9814858736f9737871f7ec3ee41" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;ll consist of two parts:</source>
          <target state="translated">它由两部分组成：</target>
        </trans-unit>
        <trans-unit id="a9141677e2734b4ebcd76a1646f3a801a2b773b8" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a good idea to exploit the &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; objects as much as possible, to remove unneeded complexity and redundancy.</source>
          <target state="translated">最好尽可能利用&lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt;对象，以消除不必要的复杂性和冗余。</target>
        </trans-unit>
        <trans-unit id="c820a5c6768751a8444aa072c6c6fa905ba2b39c" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a good idea to keep all your virtual environments in one place, for example in &lt;code&gt;.virtualenvs/&lt;/code&gt; in your home directory.</source>
          <target state="translated">最好将所有虚拟环境放在一个位置，例如， &lt;code&gt;.virtualenvs/&lt;/code&gt; 主目录中的.virtualenvs /中。</target>
        </trans-unit>
        <trans-unit id="e597b7a72c214db394d011a7d980017dfb96bbf0" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a good idea to run your tests with Python warnings enabled: &lt;code&gt;python -Wa manage.py test&lt;/code&gt;. The &lt;code&gt;-Wa&lt;/code&gt; flag tells Python to display deprecation warnings. Django, like many other Python libraries, uses these warnings to flag when features are going away. It also might flag areas in your code that aren&amp;rsquo;t strictly wrong but could benefit from a better implementation.</source>
          <target state="translated">最好在启用Python警告的情况下运行测试： &lt;code&gt;python -Wa manage.py test&lt;/code&gt; 。该 &lt;code&gt;-Wa&lt;/code&gt; 标志告诉Python来显示废弃警告。Django和其他许多Python库一样，使用这些警告来标记功能何时消失。它还可能标记代码中并非严格错误的区域，但可以从更好的实现中受益。</target>
        </trans-unit>
        <trans-unit id="5205bb3db42b1f9e1a07a61d0d189eb75f732f1a" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a lot of work to design, build, test and maintain a web application. Many Python and Django projects share common problems. Wouldn&amp;rsquo;t it be great if we could save some of this repeated work?</source>
          <target state="translated">设计，构建，测试和维护Web应用程序需要大量工作。许多Python和Django项目都有共同的问题。如果我们可以保存一些重复的工作，那不是很好吗？</target>
        </trans-unit>
        <trans-unit id="98892641f79e54717e27729e6b3e830b31327667" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a mistake to think of tests merely as a negative aspect of development.</source>
          <target state="translated">将测试仅视为开发的负面方面是错误的。</target>
        </trans-unit>
        <trans-unit id="f3f1771f69342fc15b09588915f707913ee328d7" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a relatively common task to check whether a user has a particular permission. For that reason, Django provides a shortcut for that case: the &lt;a href=&quot;#django.contrib.auth.decorators.permission_required&quot;&gt;&lt;code&gt;permission_required()&lt;/code&gt;&lt;/a&gt; decorator.:</source>
          <target state="translated">检查用户是否具有特定权限是一项相对常见的任务。因此，Django为这种情况提供了一个快捷方式：&lt;a href=&quot;#django.contrib.auth.decorators.permission_required&quot;&gt; &lt;code&gt;permission_required()&lt;/code&gt; &lt;/a&gt;装饰器。</target>
        </trans-unit>
        <trans-unit id="d95c3e2c34569b1779186f9d0e9e6929e2596b80" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a sufficiently significant and powerful technique that Django includes a comprehensive caching framework, as well as other smaller pieces of caching functionality.</source>
          <target state="translated">Django具有完善的缓存框架以及其他较小的缓存功能，这是一项足够重要且功能强大的技术。</target>
        </trans-unit>
        <trans-unit id="5d10c8c6b8bd3ff3bac051910da1ebe622e9680d" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a very common idiom to load a template, fill a context and return an &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; object with the result of the rendered template. Django provides a shortcut. Here&amp;rsquo;s the full &lt;code&gt;index()&lt;/code&gt; view, rewritten:</source>
          <target state="translated">加载模板，填充上下文并返回呈现的模板结果的&lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;对象是一种非常常见的习惯用法。Django提供了一个快捷方式。这是完整的 &lt;code&gt;index()&lt;/code&gt; 视图，已重写：</target>
        </trans-unit>
        <trans-unit id="be432822d72363028c0959e5520964f3225f08e1" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a very common idiom to use &lt;a href=&quot;../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and raise &lt;a href=&quot;../topics/http/views#django.http.Http404&quot;&gt;&lt;code&gt;Http404&lt;/code&gt;&lt;/a&gt; if the object doesn&amp;rsquo;t exist. Django provides a shortcut. Here&amp;rsquo;s the &lt;code&gt;detail()&lt;/code&gt; view, rewritten:</source>
          <target state="translated">如果对象不存在，使用&lt;a href=&quot;../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;并引发&lt;a href=&quot;../topics/http/views#django.http.Http404&quot;&gt; &lt;code&gt;Http404&lt;/code&gt; &lt;/a&gt;是一个非常常见的习惯用法。Django提供了一个快捷方式。这是改写的 &lt;code&gt;detail()&lt;/code&gt; 视图：</target>
        </trans-unit>
        <trans-unit id="471a415cfc5575d8283f9728454d7c7ddf752a92" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s actually sent twice: when the new value is applied (&amp;ldquo;setup&amp;rdquo;) and when the original value is restored (&amp;ldquo;teardown&amp;rdquo;). Use the &lt;code&gt;enter&lt;/code&gt; argument to distinguish between the two.</source>
          <target state="translated">它实际上已发送两次：应用新值时（&amp;ldquo;设置&amp;rdquo;）和恢复原始值时（&amp;ldquo;拆卸&amp;rdquo;）。使用 &lt;code&gt;enter&lt;/code&gt; 参数来区分两者。</target>
        </trans-unit>
        <trans-unit id="1a89891994672cfaa504284d854c34b4a0ef5768" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also important that you pass through the arguments that can be passed to the model method &amp;ndash; that&amp;rsquo;s what the &lt;code&gt;*args, **kwargs&lt;/code&gt; bit does. Django will, from time to time, extend the capabilities of built-in model methods, adding new arguments. If you use &lt;code&gt;*args,
**kwargs&lt;/code&gt; in your method definitions, you are guaranteed that your code will automatically support those arguments when they are added.</source>
          <target state="translated">传递可传递给模型方法的参数也很重要-这就是 &lt;code&gt;*args, **kwargs&lt;/code&gt; 位的作用。Django会不时扩展内置模型方法的功能，并添加新的参数。如果在方法定义中使用 &lt;code&gt;*args, **kwargs&lt;/code&gt; ，则可以确保代码添加后将自动支持这些参数。</target>
        </trans-unit>
        <trans-unit id="3137205b835e3db1f5f498b9390d3b3493a1a6a3" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also possible to execute parts of the migration inside a transaction using &lt;a href=&quot;db/transactions#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; or by passing &lt;code&gt;atomic=True&lt;/code&gt; to &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;../howto/writing-migrations#non-atomic-migrations&quot;&gt;Non-atomic migrations&lt;/a&gt; for more details.</source>
          <target state="translated">也可以使用&lt;a href=&quot;db/transactions#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt;或通过将 &lt;code&gt;atomic=True&lt;/code&gt; 传递给&lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt;来执行事务内的部分迁移。有关更多详细信息，请参见&lt;a href=&quot;../howto/writing-migrations#non-atomic-migrations&quot;&gt;非原子迁移&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9efc3514c2fdb71e437dd068004f9bbbd27d0bd7" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s applied globally to all views in your project.</source>
          <target state="translated">它已全局应用于项目中的所有视图。</target>
        </trans-unit>
        <trans-unit id="6c8809cf55ca136f973721940052ffe5caef0ffc" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s common to have to call a class instance&amp;rsquo;s method more than once. If that function is expensive, then doing so can be wasteful.</source>
          <target state="translated">通常必须多次调用一个类实例的方法。如果该功能很昂贵，那么这样做会很浪费。</target>
        </trans-unit>
        <trans-unit id="6a8a602e8f5da83ffdb845b5072b20d6cf4d49e9" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s difficult to intuit how the ORM will translate complex querysets into SQL queries so when in doubt, inspect the SQL with &lt;code&gt;str(queryset.query)&lt;/code&gt; and write plenty of tests.</source>
          <target state="translated">很难理解ORM如何将复杂的查询集转换为SQL查询，因此在有疑问时，请使用 &lt;code&gt;str(queryset.query)&lt;/code&gt; 检查SQL 并编写大量测试。</target>
        </trans-unit>
        <trans-unit id="d9c33de3147bcaef08378b87591ea35eac5018b5" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s fairly rare for a new release of well-maintained software to be less efficient, but the maintainers can&amp;rsquo;t anticipate every possible use-case - so while being aware that newer versions are likely to perform better, don&amp;rsquo;t assume that they always will.</source>
          <target state="translated">新发行的维护良好的软件效率较低的情况相当少见，但维护人员无法预期所有可能的用例-因此，尽管意识到较新版本的性能可能会更好，但不要以为它们总是将。</target>
        </trans-unit>
        <trans-unit id="053b90c54269318916dff65e1e856de6e82c3da7" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s fragile to hard-code the site IDs like that, in case they change. The cleaner way of accomplishing the same thing is to check the current site&amp;rsquo;s domain:</source>
          <target state="translated">像这样对站点ID进行硬编码是很脆弱的，以防它们更改。完成同一件事的更干净的方法是检查当前站点的域：</target>
        </trans-unit>
        <trans-unit id="5824351282e0b44b78ffe29119839b3c3bb3ecc7" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s generally a good idea to have the contenttypes framework installed; several of Django&amp;rsquo;s other bundled applications require it:</source>
          <target state="translated">通常，安装contenttypes框架是一个好主意。Django的其他捆绑应用程序中有几个需要它：</target>
        </trans-unit>
        <trans-unit id="014f23d80312be5d973dc29048745c41bfbff6a7" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s given one or more model classes to register with the &lt;code&gt;ModelAdmin&lt;/code&gt;. If you&amp;rsquo;re using a custom &lt;a href=&quot;#django.contrib.admin.AdminSite&quot;&gt;&lt;code&gt;AdminSite&lt;/code&gt;&lt;/a&gt;, pass it using the &lt;code&gt;site&lt;/code&gt; keyword argument:</source>
          <target state="translated">它提供了一个或多个模型类来向 &lt;code&gt;ModelAdmin&lt;/code&gt; 注册。如果您使用的是自定义&lt;a href=&quot;#django.contrib.admin.AdminSite&quot;&gt; &lt;code&gt;AdminSite&lt;/code&gt; &lt;/a&gt;，请使用 &lt;code&gt;site&lt;/code&gt; 关键字参数传递它：</target>
        </trans-unit>
        <trans-unit id="504b56f9c369f081939669c1db1001528d39f792" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s good practice to use &lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase.delete_test_cookie&quot;&gt;&lt;code&gt;delete_test_cookie()&lt;/code&gt;&lt;/a&gt; to clean up after yourself. Do this after you&amp;rsquo;ve verified that the test cookie worked.</source>
          <target state="translated">最好使用&lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase.delete_test_cookie&quot;&gt; &lt;code&gt;delete_test_cookie()&lt;/code&gt; 自行&lt;/a&gt;清理。在确认测试Cookie可以正常工作后，执行此操作。</target>
        </trans-unit>
        <trans-unit id="4304605a4bd63de40eceaad4bc60b970ac46f9b8" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s good practice to use &lt;code&gt;get_absolute_url()&lt;/code&gt; in templates, instead of hard-coding your objects&amp;rsquo; URLs. For example, this template code is bad:</source>
          <target state="translated">最好在模板中使用 &lt;code&gt;get_absolute_url()&lt;/code&gt; ，而不是对对象的URL进行硬编码。例如，此模板代码是错误的：</target>
        </trans-unit>
        <trans-unit id="edd2a229206e4806f892693c442f1827099d489d" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important to add &lt;a href=&quot;../ref/models/instances#django.db.models.Model.__str__&quot;&gt;&lt;code&gt;__str__()&lt;/code&gt;&lt;/a&gt; methods to your models, not only for your own convenience when dealing with the interactive prompt, but also because objects&amp;rsquo; representations are used throughout Django&amp;rsquo;s automatically-generated admin.</source>
          <target state="translated">向模型中添加&lt;a href=&quot;../ref/models/instances#django.db.models.Model.__str__&quot;&gt; &lt;code&gt;__str__()&lt;/code&gt; &lt;/a&gt;方法非常重要，这不仅是为了方便您在处理交互式提示时使用，而且还因为在Django的自动生成的管理过程中都使用了对象的表示形式。</target>
        </trans-unit>
        <trans-unit id="fc15190392d26afa387fe6602061f27607a7f9fc" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important to have a clear idea what you mean by &amp;lsquo;performance&amp;rsquo;. There is not just one metric of it.</source>
          <target state="translated">重要的是要清楚地了解&amp;ldquo;性能&amp;rdquo;的含义。不仅有一个指标。</target>
        </trans-unit>
        <trans-unit id="0be98169dae8591e0cc8439594e2dacf35c8c196" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important to realize that a Django field class is not what is stored in your model attributes. The model attributes contain normal Python objects. The field classes you define in a model are actually stored in the &lt;code&gt;Meta&lt;/code&gt; class when the model class is created (the precise details of how this is done are unimportant here). This is because the field classes aren&amp;rsquo;t necessary when you&amp;rsquo;re just creating and modifying attributes. Instead, they provide the machinery for converting between the attribute value and what is stored in the database or sent to the &lt;a href=&quot;../topics/serialization&quot;&gt;serializer&lt;/a&gt;.</source>
          <target state="translated">重要的是要意识到Django字段类不是存储在模型属性中的类。模型属性包含普通的Python对象。创建模型类时，您在模型中定义的字段类实际上存储在 &lt;code&gt;Meta&lt;/code&gt; 类中（此处的完成方式的详细信息并不重要）。这是因为仅在创建和修改属性时不需要字段类。相反，它们提供了在属性值和存储在数据库中或发送给&lt;a href=&quot;../topics/serialization&quot;&gt;序列化程序&lt;/a&gt;的属性之间进行转换的机制。</target>
        </trans-unit>
        <trans-unit id="e5df77fc8d383ebc768de094e8b3eec9652afccd" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important to remember to call the superclass method &amp;ndash; that&amp;rsquo;s that &lt;code&gt;super().save(*args, **kwargs)&lt;/code&gt; business &amp;ndash; to ensure that the object still gets saved into the database. If you forget to call the superclass method, the default behavior won&amp;rsquo;t happen and the database won&amp;rsquo;t get touched.</source>
          <target state="translated">重要的是要记住要调用超类方法（即 &lt;code&gt;super().save(*args, **kwargs)&lt;/code&gt; 业务），以确保仍将对象保存到数据库中。如果您忘记调用超类方法，则默认行为不会发生，并且数据库也不会受到影响。</target>
        </trans-unit>
        <trans-unit id="fbd5cb2de1d3cc3f6653c84e9c8b8ea45de47b43" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s impossible to use &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; when autocommit is turned off.</source>
          <target state="translated">自动提交关闭时，不可能使用&lt;a href=&quot;#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb38c679f6a6c48fced09d83d829bb8f2faa2c58" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s meaningless to validate a form with no data, but, for the record, here&amp;rsquo;s what happens with unbound forms:</source>
          <target state="translated">验证没有数据的表单是没有意义的，但是，记录下来，未绑定的表单会发生以下情况：</target>
        </trans-unit>
        <trans-unit id="8b0cafee32a148eda36617cd8291bb6e3405dff5" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s no good just guessing or assuming where the inefficiencies lie in your code.</source>
          <target state="translated">仅仅猜测或假设效率低下在代码中是没有用的。</target>
        </trans-unit>
        <trans-unit id="2e0fe6720c1815fea6705c7a7c635a5eef6a5b59" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s not possible to mix a template variable inside a string within &lt;code&gt;{% trans
%}&lt;/code&gt;. If your translations require strings with variables (placeholders), use &lt;a href=&quot;#std:templatetag-blocktrans&quot;&gt;&lt;code&gt;{% blocktrans %}&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">无法在 &lt;code&gt;{% trans %}&lt;/code&gt; 内的字符串内混合模板变量。如果您的翻译需要带变量的字符串（占位符），请改用&lt;a href=&quot;#std:templatetag-blocktrans&quot;&gt; &lt;code&gt;{% blocktrans %}&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f35f42245a120116256a64b95735e6e688d1027e" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s not possible to mix a template variable inside a string within &lt;code&gt;{% translate %}&lt;/code&gt;. If your translations require strings with variables (placeholders), use &lt;a href=&quot;#std:templatetag-blocktranslate&quot;&gt;&lt;code&gt;{% blocktranslate %}&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">无法在 &lt;code&gt;{% translate %}&lt;/code&gt; 内的字符串内混合模板变量。如果您的翻译需要带变量的字符串（占位符），请改用&lt;a href=&quot;#std:templatetag-blocktranslate&quot;&gt; &lt;code&gt;{% blocktranslate %}&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ffb12f4f7c51d654a37e1780fde3e22064747cba" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s not used by the development server (&lt;code&gt;runserver&lt;/code&gt;), but can be used by any ASGI server either in development or in production.</source>
          <target state="translated">开发服务器（ &lt;code&gt;runserver&lt;/code&gt; ）并不使用它，但是任何ASGI服务器都可以在开发或生产中使用它。</target>
        </trans-unit>
        <trans-unit id="8c8f89a8b9a2f1613d09f12b03fc68f4a7741e89" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s often possible to avoid explicitly having to handle forward references by taking care with the ordering of objects within a fixture.</source>
          <target state="translated">通常可以通过注意灯具内对象的顺序来避免显式地处理前向引用。</target>
        </trans-unit>
        <trans-unit id="981625124dca80a0bf6ae3cbc3c96502e0fff8eb" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s only appropriate for HTTP &lt;code&gt;GET&lt;/code&gt; requests.</source>
          <target state="translated">仅适用于HTTP &lt;code&gt;GET&lt;/code&gt; 请求。</target>
        </trans-unit>
        <trans-unit id="656acfbc1ff6a2acf248e9bf74b5e097a84323ae" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s optional, but recommended, to include detailed documentation with your app. Create an empty directory &lt;code&gt;django-polls/docs&lt;/code&gt; for future documentation. Add an additional line to &lt;code&gt;django-polls/MANIFEST.in&lt;/code&gt;:</source>
          <target state="translated">它是可选的，但建议在应用程序中包含详细的文档。创建一个空目录 &lt;code&gt;django-polls/docs&lt;/code&gt; 以供将来使用。在 &lt;code&gt;django-polls/MANIFEST.in&lt;/code&gt; 中添加另一行：</target>
        </trans-unit>
        <trans-unit id="dd909e3a15dcb8cd50eed3fdd5287a154cb90918" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s perfectly OK to relate a model to one from another app. To do this, import the related model at the top of the file where your model is defined. Then, refer to the other model class wherever needed. For example:</source>
          <target state="translated">将模型与另一个应用程序相关联是完全可以的。为此，请在定义模型的文件顶部导入相关模型。然后，在需要时参考其他模型类。例如：</target>
        </trans-unit>
        <trans-unit id="12343c40f18ca7655192d4ea8976d4b128d77726" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible &amp;ndash; and preferable &amp;ndash; to organize templates in subdirectories inside each directory containing templates. The convention is to make a subdirectory for each Django app, with subdirectories within those subdirectories as needed.</source>
          <target state="translated">在每个包含模板的目录内的子目录中组织模板是可能的，也是更好的选择。约定是为每个Django应用程序创建一个子目录，并根据需要在这些子目录内创建子目录。</target>
        </trans-unit>
        <trans-unit id="25cfa1772c80752eed913282aa2ef519cdb812ab" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible that a request can come in via POST with an empty &lt;code&gt;POST&lt;/code&gt; dictionary &amp;ndash; if, say, a form is requested via the POST HTTP method but does not include form data. Therefore, you shouldn&amp;rsquo;t use &lt;code&gt;if request.POST&lt;/code&gt; to check for use of the POST method; instead, use &lt;code&gt;if request.method ==
&quot;POST&quot;&lt;/code&gt; (see &lt;a href=&quot;#django.http.HttpRequest.method&quot;&gt;&lt;code&gt;HttpRequest.method&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">可能有一个空的 &lt;code&gt;POST&lt;/code&gt; 词典通过POST发出请求-例如，如果通过POST HTTP方法请求了表单，但其中不包含表单数据。因此，不应使用 &lt;code&gt;if request.POST&lt;/code&gt; 来检查POST方法的使用。而是使用 &lt;code&gt;if request.method == &quot;POST&quot;&lt;/code&gt; （请参阅&lt;a href=&quot;#django.http.HttpRequest.method&quot;&gt; &lt;code&gt;HttpRequest.method&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="564f1c720851eec7a9b48849d7c849a75a7a8146" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to customize that character, or omit it entirely, using the &lt;code&gt;label_suffix&lt;/code&gt; parameter:</source>
          <target state="translated">可以使用 &lt;code&gt;label_suffix&lt;/code&gt; 参数来自定义该字符或完全省略该字符：</target>
        </trans-unit>
        <trans-unit id="5f802f1d2017858d35732da049be5ea421bca251" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to declaratively remove a &lt;code&gt;Field&lt;/code&gt; inherited from a parent class by setting the name of the field to &lt;code&gt;None&lt;/code&gt; on the subclass. For example:</source>
          <target state="translated">通过将子类的字段名称设置为 &lt;code&gt;None&lt;/code&gt; ，可以声明性地删除从父类继承的 &lt;code&gt;Field&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="f00faa120a59687d5cfacd633db612d462d80f79" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to declaratively remove a &lt;code&gt;Field&lt;/code&gt; inherited from a parent class by setting the name to be &lt;code&gt;None&lt;/code&gt; on the subclass.</source>
          <target state="translated">通过在子类上将名称设置为 &lt;code&gt;None&lt;/code&gt; ，可以声明性地删除从父类继承的 &lt;code&gt;Field&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5ebde0ae552dfd952abe1bc7920a0a46d1d725d" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to have a URL pattern which captures named keyword arguments, and also passes arguments with the same names in its dictionary of extra arguments. When this happens, the arguments in the dictionary will be used instead of the arguments captured in the URL.</source>
          <target state="translated">URL模式可能会捕获命名的关键字参数，并在其额外参数字典中传递具有相同名称的参数。发生这种情况时，将使用字典中的参数代替URL中捕获的参数。</target>
        </trans-unit>
        <trans-unit id="154d81e5f92ae5b0cc201686b8eb92c861bf4cf0" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to inherit from both &lt;code&gt;Form&lt;/code&gt; and &lt;code&gt;ModelForm&lt;/code&gt; simultaneously, however, you must ensure that &lt;code&gt;ModelForm&lt;/code&gt; appears first in the MRO. This is because these classes rely on different metaclasses and a class can only have one metaclass.</source>
          <target state="translated">可以同时从 &lt;code&gt;Form&lt;/code&gt; 和 &lt;code&gt;ModelForm&lt;/code&gt; 继承，但是，必须确保 &lt;code&gt;ModelForm&lt;/code&gt; 首先出现在MRO中。这是因为这些类依赖于不同的元类，而一个类只能具有一个元类。</target>
        </trans-unit>
        <trans-unit id="2d6080acb5e2b0d1d1c50068f3b2d31e59ea47c2" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to load templates from additional sources using custom template loaders. Custom &lt;code&gt;Loader&lt;/code&gt; classes should inherit from &lt;code&gt;django.template.loaders.base.Loader&lt;/code&gt; and define the &lt;code&gt;get_contents()&lt;/code&gt; and &lt;code&gt;get_template_sources()&lt;/code&gt; methods.</source>
          <target state="translated">可以使用自定义模板加载器从其他来源加载模板。自定义 &lt;code&gt;Loader&lt;/code&gt; 类应继承自 &lt;code&gt;django.template.loaders.base.Loader&lt;/code&gt; 并定义 &lt;code&gt;get_contents()&lt;/code&gt; 和 &lt;code&gt;get_template_sources()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="69453e3cfadab898688cde4346b7c3203c55d089" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to store the tag results in a template variable rather than directly outputting it. This is done by using the &lt;code&gt;as&lt;/code&gt; argument followed by the variable name. Doing so enables you to output the content yourself where you see fit:</source>
          <target state="translated">可以将标签结果存储在模板变量中，而不是直接输出它。这是通过使用 &lt;code&gt;as&lt;/code&gt; 参数后跟变量名来完成的。这样做可以使您自己输出适合的内容：</target>
        </trans-unit>
        <trans-unit id="23d178eee9f824ef0def0504a80716cd71afb5a7" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to subclass multiple forms, treating forms as mixins. In this example, &lt;code&gt;BeatleForm&lt;/code&gt; subclasses both &lt;code&gt;PersonForm&lt;/code&gt; and &lt;code&gt;InstrumentForm&lt;/code&gt; (in that order), and its field list includes the fields from the parent classes:</source>
          <target state="translated">可以将多种形式作为子类，将形式视为混合。在此示例中， &lt;code&gt;BeatleForm&lt;/code&gt; 子类化 &lt;code&gt;PersonForm&lt;/code&gt; 和 &lt;code&gt;InstrumentForm&lt;/code&gt; （按该顺序），并且其字段列表包括来自父类的字段：</target>
        </trans-unit>
        <trans-unit id="092b661ba6e72b73027d8e3675fba552c7999588" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s pretty common to style form rows and fields that are required or have errors. For example, you might want to present required form rows in bold and highlight errors in red.</source>
          <target state="translated">对必需的或有错误的表单行和字段设置样式是很常见的。例如，您可能想要以粗体显示所需的表单行，并以红色突出显示错误。</target>
        </trans-unit>
        <trans-unit id="116a53426c08ab9c723625b82855ecdb65d734a3" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s recommended to leave the &lt;a href=&quot;../../ref/settings#std:setting-SESSION_COOKIE_HTTPONLY&quot;&gt;&lt;code&gt;SESSION_COOKIE_HTTPONLY&lt;/code&gt;&lt;/a&gt; setting on &lt;code&gt;True&lt;/code&gt; to prevent access to the stored data from JavaScript.</source>
          <target state="translated">建议将&lt;a href=&quot;../../ref/settings#std:setting-SESSION_COOKIE_HTTPONLY&quot;&gt; &lt;code&gt;SESSION_COOKIE_HTTPONLY&lt;/code&gt; &lt;/a&gt;设置保留为 &lt;code&gt;True&lt;/code&gt; ,以防止从JavaScript访问存储的数据。</target>
        </trans-unit>
        <trans-unit id="2f926096c05f4b08baaf98d68511f1fb871d7cc9" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s required for preserving APIs that rely on a globally available, implicitly configured engine. Any other use is strongly discouraged.</source>
          <target state="translated">保留依赖于全局可用的隐式配置引擎的API时需要使用它。强烈建议不要将其用于其他用途。</target>
        </trans-unit>
        <trans-unit id="9c61e8f05c6a50e700712ba22de1bb672bbabc15" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s safe to use this filter on a string that has already gone through the &lt;a href=&quot;#std:templatefilter-urlencode&quot;&gt;&lt;code&gt;urlencode&lt;/code&gt;&lt;/a&gt; filter.</source>
          <target state="translated">在已通过&lt;a href=&quot;#std:templatefilter-urlencode&quot;&gt; &lt;code&gt;urlencode&lt;/code&gt; &lt;/a&gt;过滤器的字符串上使用此过滤器是安全的。</target>
        </trans-unit>
        <trans-unit id="90004f94d411477597f8fcfc53e05fdd4c25bf29" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s sometimes useful to determine at startup time whether a piece of middleware should be used. In these cases, your middleware&amp;rsquo;s &lt;code&gt;__init__()&lt;/code&gt; method may raise &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.MiddlewareNotUsed&quot;&gt;&lt;code&gt;MiddlewareNotUsed&lt;/code&gt;&lt;/a&gt;. Django will then remove that middleware from the middleware process and log a debug message to the &lt;a href=&quot;../logging#django-request-logger&quot;&gt;django.request&lt;/a&gt; logger when &lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">有时在启动时确定是否应使用中间件非常有用。在这些情况下，中间件的 &lt;code&gt;__init__()&lt;/code&gt; 方法可能会引发&lt;a href=&quot;../../ref/exceptions#django.core.exceptions.MiddlewareNotUsed&quot;&gt; &lt;code&gt;MiddlewareNotUsed&lt;/code&gt; &lt;/a&gt;。然后，当&lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;True&lt;/code&gt; 时，Django将从中间件进程中删除该中间件，并将调试消息记录到&lt;a href=&quot;../logging#django-request-logger&quot;&gt;django.request&lt;/a&gt;记录器中。</target>
        </trans-unit>
        <trans-unit id="80aa528112e9e490aa5ed4ea2d9bc56ea614b01c" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s sometimes useful to pre-populate your database with hard-coded data when you&amp;rsquo;re first setting up an app. You can provide initial data with migrations or fixtures.</source>
          <target state="translated">初次设置应用程序时，用硬编码数据预填充数据库有时会很有用。您可以提供带有迁移或固定装置的初始数据。</target>
        </trans-unit>
        <trans-unit id="b5e2474881890462bed834b91681f711c82b24c9" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s suggested, but not required, that the name of a &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; field (&lt;code&gt;manufacturer&lt;/code&gt; in the example above) be the name of the model, lowercase. You can call the field whatever you want. For example:</source>
          <target state="translated">建议（但不是必需）将&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;字段的名称（在上面的示例中为 &lt;code&gt;manufacturer&lt;/code&gt; ）命名为模型的名称（小写）。您可以根据需要致电该字段。例如：</target>
        </trans-unit>
        <trans-unit id="cabb5fa7a2f760c58a8cc5008d218d9760bd2a65" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s suggested, but not required, that the name of a &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; field (&lt;code&gt;manufacturer&lt;/code&gt; in the example above) be the name of the model, lowercase. You can, of course, call the field whatever you want. For example:</source>
          <target state="translated">建议（但不是必需）将&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;字段的名称（在上面的示例中为 &lt;code&gt;manufacturer&lt;/code&gt; ）命名为模型的名称（小写）。您当然可以随心所欲地致电该字段。例如：</target>
        </trans-unit>
        <trans-unit id="22ccf51d0275c705c1c35c00156af244882b0ae3" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s suggested, but not required, that the name of a &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;toppings&lt;/code&gt; in the example above) be a plural describing the set of related model objects.</source>
          <target state="translated">建议（但不是必需）将&lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;的名称（上面示例中的 &lt;code&gt;toppings&lt;/code&gt; ）描述为一组相关模型对象的复数形式。</target>
        </trans-unit>
        <trans-unit id="81b268cc70a442674129b98fc3845ba70970358f" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s tailored to the database you&amp;rsquo;re using, so database-specific field types such as &lt;code&gt;auto_increment&lt;/code&gt; (MySQL), &lt;code&gt;serial&lt;/code&gt; (PostgreSQL), or &lt;code&gt;integer
primary key autoincrement&lt;/code&gt; (SQLite) are handled for you automatically. Same goes for the quoting of field names &amp;ndash; e.g., using double quotes or single quotes.</source>
          <target state="translated">它是针对您正在使用的数据库量身定制的，因此将自动为您处理特定于数据库的字段类型，例如 &lt;code&gt;auto_increment&lt;/code&gt; （MySQL）， &lt;code&gt;serial&lt;/code&gt; （PostgreSQL）或 &lt;code&gt;integer primary key autoincrement&lt;/code&gt; （SQLite）。字段名称的引用也是如此&amp;ndash;例如，使用双引号或单引号。</target>
        </trans-unit>
        <trans-unit id="36b04562da0b07d14aace68744d0353cd911e6bc" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s tempting to write the above query as:</source>
          <target state="translated">将上面的查询编写为：</target>
        </trans-unit>
        <trans-unit id="cfb033e6a7bb18748df2f3c0678baacc2715f25c" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s unlikely that you will want to interact directly with &lt;code&gt;SchemaEditor&lt;/code&gt; as a normal developer using Django, but if you want to write your own migration system, or have more advanced needs, it&amp;rsquo;s a lot nicer than writing SQL.</source>
          <target state="translated">作为普通的开发人员，使用Django 不太可能直接与 &lt;code&gt;SchemaEditor&lt;/code&gt; 进行交互，但是，如果您要编写自己的迁移系统，或者有更高级的需求，则比编写SQL更好。</target>
        </trans-unit>
        <trans-unit id="6170244348e1c89e69f473c30e48d1cb65ebc165" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s unnecessary to force &lt;code&gt;Exists&lt;/code&gt; to refer to a single column, since the columns are discarded and a boolean result is returned. Similarly, since ordering is unimportant within an SQL &lt;code&gt;EXISTS&lt;/code&gt; subquery and would only degrade performance, it&amp;rsquo;s automatically removed.</source>
          <target state="translated">不必强制 &lt;code&gt;Exists&lt;/code&gt; 引用单个列，因为这些列将被丢弃并返回布尔结果。同样，由于排序在SQL &lt;code&gt;EXISTS&lt;/code&gt; 子查询中并不重要，只会降低性能，因此会自动将其删除。</target>
        </trans-unit>
        <trans-unit id="a28ef85bef282b391b1e7ce9e6a1cd15710ee46c" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s used both by Django&amp;rsquo;s development server and in production WSGI deployments.</source>
          <target state="translated">Django的开发服务器和生产WSGI部署都使用了它。</target>
        </trans-unit>
        <trans-unit id="20a9f7ce4d688ce13e435ce877c2781fa2a5fda9" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s used by the Django admin site, but you&amp;rsquo;re welcome to use it in your own code.</source>
          <target state="translated">它由Django管理站点使用，但是欢迎您在自己的代码中使用它。</target>
        </trans-unit>
        <trans-unit id="453336f7b66590d003cde9e690939c83ac37a292" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s used to optimize Django&amp;rsquo;s own test suite, which contains hundreds of models but no relations between models in different applications.</source>
          <target state="translated">它用于优化Django自己的测试套件，该套件包含数百个模型，但不同应用程序中的模型之间没有关系。</target>
        </trans-unit>
        <trans-unit id="f92418ae3af49ec5210634e2bdaff7e544f90cc5" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s worth repeating: &lt;strong&gt;reaching for alternatives to software you&amp;rsquo;re already using is never the first answer to performance problems&lt;/strong&gt;. When you reach this level of optimization, you need a formal benchmarking solution.</source>
          <target state="translated">值得重复一遍：&lt;strong&gt;寻求已经使用的软件的替代品永远不是解决性能问题的第一个答案&lt;/strong&gt;。当达到此优化级别时，您需要一个正式的基准测试解决方案。</target>
        </trans-unit>
        <trans-unit id="73248e57635e9c9598528380f77d494c9f3a9bef" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s your responsibility to provide the html for the login template , called &lt;code&gt;registration/login.html&lt;/code&gt; by default. This template gets passed four template context variables:</source>
          <target state="translated">您有责任为登录模板提供html ，默认情况下称为 &lt;code&gt;registration/login.html&lt;/code&gt; 。此模板传递了四个模板上下文变量：</target>
        </trans-unit>
        <trans-unit id="6194af17afc43140b30fc03efe1a42a49325f5b3" translate="yes" xml:space="preserve">
          <source>Iterate over the file yielding &amp;ldquo;chunks&amp;rdquo; of a given size. &lt;code&gt;chunk_size&lt;/code&gt; defaults to 64 KB.</source>
          <target state="translated">遍历文件产生给定大小的&amp;ldquo;块&amp;rdquo;。 &lt;code&gt;chunk_size&lt;/code&gt; 默认为64 KB。</target>
        </trans-unit>
        <trans-unit id="0de333b2cbf5d70dfa378153240a6390f38e295c" translate="yes" xml:space="preserve">
          <source>Iterate over the file yielding one line at a time.</source>
          <target state="translated">在文件上迭代,每次只产生一行。</target>
        </trans-unit>
        <trans-unit id="64181e92073030143f46bbc584cc34cdb69c2178" translate="yes" xml:space="preserve">
          <source>Iterates over the points in a &lt;a href=&quot;#django.contrib.gis.gdal.LineString&quot;&gt;&lt;code&gt;LineString&lt;/code&gt;&lt;/a&gt;, the rings in a &lt;a href=&quot;#django.contrib.gis.gdal.Polygon&quot;&gt;&lt;code&gt;Polygon&lt;/code&gt;&lt;/a&gt;, or the geometries in a &lt;a href=&quot;#django.contrib.gis.gdal.GeometryCollection&quot;&gt;&lt;code&gt;GeometryCollection&lt;/code&gt;&lt;/a&gt;. Not applicable to other geometry types.</source>
          <target state="translated">遍历&lt;a href=&quot;#django.contrib.gis.gdal.LineString&quot;&gt; &lt;code&gt;LineString&lt;/code&gt; 中&lt;/a&gt;的点，&lt;a href=&quot;#django.contrib.gis.gdal.Polygon&quot;&gt; &lt;code&gt;Polygon&lt;/code&gt; 中&lt;/a&gt;的环或&lt;a href=&quot;#django.contrib.gis.gdal.GeometryCollection&quot;&gt; &lt;code&gt;GeometryCollection&lt;/code&gt; &lt;/a&gt;中的几何。不适用于其他几何类型。</target>
        </trans-unit>
        <trans-unit id="3128c83b0869b9fd38f7441368e4805f2bc3963b" translate="yes" xml:space="preserve">
          <source>Iterating over a formset will render the forms in the order they were created. You can change this order by providing an alternate implementation for the &lt;code&gt;__iter__()&lt;/code&gt; method.</source>
          <target state="translated">在表单集上进行迭代将按照表单的创建顺序呈现表单。您可以通过为 &lt;code&gt;__iter__()&lt;/code&gt; 方法提供替代实现来更改此顺序。</target>
        </trans-unit>
        <trans-unit id="0f3c1b17abaffb29dddff6f5f30f721f95ee3092" translate="yes" xml:space="preserve">
          <source>Iterating relationship choices</source>
          <target state="translated">迭代关系选择</target>
        </trans-unit>
        <trans-unit id="6f479cac5e7c5d3ad5f478dcb761f931ee9c46cf" translate="yes" xml:space="preserve">
          <source>Its default &lt;code&gt;Content-Type&lt;/code&gt; header is set to &lt;code&gt;application/json&lt;/code&gt;.</source>
          <target state="translated">其默认的 &lt;code&gt;Content-Type&lt;/code&gt; 标头设置为 &lt;code&gt;application/json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ef72203a16f5dd6674a160c8f4b2342a36b91ae" translate="yes" xml:space="preserve">
          <source>Its default &lt;code&gt;Content-Type&lt;/code&gt; header is set to &lt;em&gt;application/json&lt;/em&gt;.</source>
          <target state="translated">其默认的 &lt;code&gt;Content-Type&lt;/code&gt; 标头设置为&lt;em&gt;application / json&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3c9c5647ed1e6b7f5146c076bc141e3b0a23011d" translate="yes" xml:space="preserve">
          <source>Its default implementation returns &lt;a href=&quot;#django.contrib.admin.ModelAdmin.sortable_by&quot;&gt;&lt;code&gt;sortable_by&lt;/code&gt;&lt;/a&gt; if it&amp;rsquo;s set, otherwise it defers to &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_list_display&quot;&gt;&lt;code&gt;get_list_display()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果设置了默认值，则默认实现返回&lt;a href=&quot;#django.contrib.admin.ModelAdmin.sortable_by&quot;&gt; &lt;code&gt;sortable_by&lt;/code&gt; &lt;/a&gt;，否则默认为&lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_list_display&quot;&gt; &lt;code&gt;get_list_display()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="fcf29f6cad3232704b33e962ef5194fad3b6817b" translate="yes" xml:space="preserve">
          <source>Japan</source>
          <target state="translated">Japan</target>
        </trans-unit>
        <trans-unit id="3e794545b69f251b3029e4944b37bdd0893d7ebc" translate="yes" xml:space="preserve">
          <source>JavaScript code doesn&amp;rsquo;t have access to &lt;code&gt;.po&lt;/code&gt; or &lt;code&gt;.mo&lt;/code&gt; files; they need to be delivered by the server.</source>
          <target state="translated">JavaScript代码无权访问 &lt;code&gt;.po&lt;/code&gt; 或 &lt;code&gt;.mo&lt;/code&gt; 文件；它们需要由服务器交付。</target>
        </trans-unit>
        <trans-unit id="16a7b6649b485d9113794ac7d0b0b25e428c33aa" translate="yes" xml:space="preserve">
          <source>JavaScript code doesn&amp;rsquo;t have access to a &lt;code&gt;gettext&lt;/code&gt; implementation.</source>
          <target state="translated">JavaScript代码无权访问 &lt;code&gt;gettext&lt;/code&gt; 实现。</target>
        </trans-unit>
        <trans-unit id="09dc489aa0b5f5532a33d3276d7a485bd5f67e2d" translate="yes" xml:space="preserve">
          <source>JavaScript customizations in the admin</source>
          <target state="translated">管理员的JavaScript自定义</target>
        </trans-unit>
        <trans-unit id="fce39e0711bfdc751337a274c52d094f106ca490" translate="yes" xml:space="preserve">
          <source>Join chains can be as deep as you require. For example, to extract the age of the youngest author of any book available for sale, you could issue the query:</source>
          <target state="translated">加入链的深度可以根据你的要求而定。例如,要提取任何可供销售的书籍的最年轻作者的年龄,你可以发出查询。</target>
        </trans-unit>
        <trans-unit id="369d197d5e95511bed79dd647091cfb1ff0732bf" translate="yes" xml:space="preserve">
          <source>Join the &lt;code&gt;#geodjango&lt;/code&gt; IRC channel on Freenode. Please be patient and polite &amp;ndash; while you may not get an immediate response, someone will attempt to answer your question as soon as they see it.</source>
          <target state="translated">加入Freenode上的 &lt;code&gt;#geodjango&lt;/code&gt; IRC频道。请保持耐心和礼貌-尽管您可能不会立即得到答复，但有人会在看到问题后立即尝试回答您的问题。</target>
        </trans-unit>
        <trans-unit id="09ad30957afcec67d4756a8b85b0dff0032054c3" translate="yes" xml:space="preserve">
          <source>Joins a list with a string, like Python&amp;rsquo;s &lt;code&gt;str.join(list)&lt;/code&gt;</source>
          <target state="translated">用字符串连接列表，例如Python的 &lt;code&gt;str.join(list)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9d2e961ad458e7666b83ecad02e5ba87d5f28bf" translate="yes" xml:space="preserve">
          <source>Joins and aggregates</source>
          <target state="translated">合并和汇总</target>
        </trans-unit>
        <trans-unit id="4414f263334ff3637fe5ef567af2d40056a830d8" translate="yes" xml:space="preserve">
          <source>Jumps you from any page to the documentation for the view that generates that page.</source>
          <target state="translated">从任何页面跳转到生成该页面的视图文档。</target>
        </trans-unit>
        <trans-unit id="ddc4426c8e81f8c006f5531c90d6d6f6c895431d" translate="yes" xml:space="preserve">
          <source>Just as &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt;&lt;code&gt;GenericForeignKey&lt;/code&gt;&lt;/a&gt; accepts the names of the content-type and object-ID fields as arguments, so too does &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt;&lt;code&gt;GenericRelation&lt;/code&gt;&lt;/a&gt;; if the model which has the generic foreign key is using non-default names for those fields, you must pass the names of the fields when setting up a &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt;&lt;code&gt;GenericRelation&lt;/code&gt;&lt;/a&gt; to it. For example, if the &lt;code&gt;TaggedItem&lt;/code&gt; model referred to above used fields named &lt;code&gt;content_type_fk&lt;/code&gt; and &lt;code&gt;object_primary_key&lt;/code&gt; to create its generic foreign key, then a &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt;&lt;code&gt;GenericRelation&lt;/code&gt;&lt;/a&gt; back to it would need to be defined like so:</source>
          <target state="translated">就像&lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt; &lt;code&gt;GenericForeignKey&lt;/code&gt; &lt;/a&gt;接受content-type和object-ID字段的名称作为参数一样，&lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt; &lt;code&gt;GenericRelation&lt;/code&gt; &lt;/a&gt;也是如此；如果具有通用外键的模型为这些字段使用非默认名称，则在为其设置&lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt; &lt;code&gt;GenericRelation&lt;/code&gt; &lt;/a&gt;时必须传递字段的名称。例如，如果上面提到的 &lt;code&gt;TaggedItem&lt;/code&gt; 模型使用名为 &lt;code&gt;content_type_fk&lt;/code&gt; 和 &lt;code&gt;object_primary_key&lt;/code&gt; 的字段来创建其通用外键，则需要像下面这样定义返回到它的&lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt; &lt;code&gt;GenericRelation&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="1e413dffa03320c671fc31e6cb89283fb49b6d92" translate="yes" xml:space="preserve">
          <source>Just as the &lt;code&gt;login_required&lt;/code&gt; decorator, this mixin does NOT check the &lt;code&gt;is_active&lt;/code&gt; flag on a user, but the default &lt;a href=&quot;../../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt;&lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt;&lt;/a&gt; reject inactive users.</source>
          <target state="translated">就像 &lt;code&gt;login_required&lt;/code&gt; 装饰器一样，此mixin不会检查用户的 &lt;code&gt;is_active&lt;/code&gt; 标志，但是默认的&lt;a href=&quot;../../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt; &lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt; 会&lt;/a&gt;拒绝非活动用户。</target>
        </trans-unit>
        <trans-unit id="de70aed3380b12491dedb45769ad91fb49e553be" translate="yes" xml:space="preserve">
          <source>Just as with Python&amp;rsquo;s subclassing, it&amp;rsquo;s possible for a Django model to inherit from multiple parent models. Keep in mind that normal Python name resolution rules apply. The first base class that a particular name (e.g. &lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt;) appears in will be the one that is used; for example, this means that if multiple parents contain a &lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt; class, only the first one is going to be used, and all others will be ignored.</source>
          <target state="translated">就像Python的子类化一样，Django模型可以从多个父模型继承。请记住，适用普通的Python名称解析规则。出现特定名称（例如&lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt;）的第一个基类将是使用的基类。例如，这意味着如果多个父级包含一个&lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt;类，则仅将使用第一个，而所有其他父级将被忽略。</target>
        </trans-unit>
        <trans-unit id="c4940cb973e951c23fc5b25e3c6c874837d4c5a9" translate="yes" xml:space="preserve">
          <source>Just be aware that this logic will disable the signals whenever fixtures are deserialized, not just during &lt;code&gt;loaddata&lt;/code&gt;.</source>
          <target state="translated">请注意，无论何时对灯具进行反序列化，这种逻辑都会禁用信号，而不仅仅是在 &lt;code&gt;loaddata&lt;/code&gt; 期间。</target>
        </trans-unit>
        <trans-unit id="ddab42e3dcb6c903e2f4186535cb27873150c70a" translate="yes" xml:space="preserve">
          <source>Just for completeness, these are the corresponding fragments of the resulting &lt;code&gt;.po&lt;/code&gt; file:</source>
          <target state="translated">仅出于完整性考虑，以下是生成的 &lt;code&gt;.po&lt;/code&gt; 文件的相应片段：</target>
        </trans-unit>
        <trans-unit id="01310d24cc2563fbb23357235b729b519dca1534" translate="yes" xml:space="preserve">
          <source>Just for completeness, this is the corresponding fragment of the resulting &lt;code&gt;.po&lt;/code&gt; file:</source>
          <target state="translated">为了完整 &lt;code&gt;.po&lt;/code&gt; ，这是生成的.po文件的相应片段：</target>
        </trans-unit>
        <trans-unit id="e6cf235d242effb3cde80d1d3c4a76eb03cbc760" translate="yes" xml:space="preserve">
          <source>Just like &lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.contrib.admin.AdminSite&quot;&gt;&lt;code&gt;AdminSite&lt;/code&gt;&lt;/a&gt; provides a &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_urls&quot;&gt;&lt;code&gt;get_urls()&lt;/code&gt;&lt;/a&gt; method that can be overridden to define additional views for the site. To add a new view to your admin site, extend the base &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_urls&quot;&gt;&lt;code&gt;get_urls()&lt;/code&gt;&lt;/a&gt; method to include a pattern for your new view.</source>
          <target state="translated">就像&lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;一样，&lt;a href=&quot;#django.contrib.admin.AdminSite&quot;&gt; &lt;code&gt;AdminSite&lt;/code&gt; &lt;/a&gt;提供了一个&lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_urls&quot;&gt; &lt;code&gt;get_urls()&lt;/code&gt; &lt;/a&gt;方法，可以将其重写以定义该站点的其他视图。要将新视图添加到您的管理站点，请扩展基本的&lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_urls&quot;&gt; &lt;code&gt;get_urls()&lt;/code&gt; &lt;/a&gt;方法以包括新视图的模式。</target>
        </trans-unit>
        <trans-unit id="1958cb9d96b5b5be5f6e75b1b2cd4481da5abfe0" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;remove()&lt;/code&gt;, &lt;code&gt;clear()&lt;/code&gt; is only available on &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;s where &lt;code&gt;null=True&lt;/code&gt; and it also accepts the &lt;code&gt;bulk&lt;/code&gt; keyword argument.</source>
          <target state="translated">就像 &lt;code&gt;remove()&lt;/code&gt; 一样， &lt;code&gt;clear()&lt;/code&gt; 仅在 &lt;code&gt;null=True&lt;/code&gt; 的&lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; 上&lt;/a&gt;可用，它也接受 &lt;code&gt;bulk&lt;/code&gt; 关键字参数。</target>
        </trans-unit>
        <trans-unit id="1e99592c259163ce6dbd69040fb145ee105a4073" translate="yes" xml:space="preserve">
          <source>Just like a &lt;a href=&quot;#django.forms.ChoiceField&quot;&gt;&lt;code&gt;ChoiceField&lt;/code&gt;&lt;/a&gt;, except &lt;a href=&quot;#django.forms.TypedChoiceField&quot;&gt;&lt;code&gt;TypedChoiceField&lt;/code&gt;&lt;/a&gt; takes two extra arguments, &lt;a href=&quot;#django.forms.TypedChoiceField.coerce&quot;&gt;&lt;code&gt;coerce&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.forms.TypedChoiceField.empty_value&quot;&gt;&lt;code&gt;empty_value&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">就像&lt;a href=&quot;#django.forms.ChoiceField&quot;&gt; &lt;code&gt;ChoiceField&lt;/code&gt; 一样&lt;/a&gt;，除了&lt;a href=&quot;#django.forms.TypedChoiceField&quot;&gt; &lt;code&gt;TypedChoiceField&lt;/code&gt; 带有&lt;/a&gt;两个额外的参数，&lt;a href=&quot;#django.forms.TypedChoiceField.coerce&quot;&gt; &lt;code&gt;coerce&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.forms.TypedChoiceField.empty_value&quot;&gt; &lt;code&gt;empty_value&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="22b0b87bee7c21e20da396fc1d6d1687daac3247" translate="yes" xml:space="preserve">
          <source>Just like a &lt;a href=&quot;#django.forms.MultipleChoiceField&quot;&gt;&lt;code&gt;MultipleChoiceField&lt;/code&gt;&lt;/a&gt;, except &lt;a href=&quot;#django.forms.TypedMultipleChoiceField&quot;&gt;&lt;code&gt;TypedMultipleChoiceField&lt;/code&gt;&lt;/a&gt; takes two extra arguments, &lt;code&gt;coerce&lt;/code&gt; and &lt;code&gt;empty_value&lt;/code&gt;.</source>
          <target state="translated">就像&lt;a href=&quot;#django.forms.MultipleChoiceField&quot;&gt; &lt;code&gt;MultipleChoiceField&lt;/code&gt; 一样&lt;/a&gt;，除了&lt;a href=&quot;#django.forms.TypedMultipleChoiceField&quot;&gt; &lt;code&gt;TypedMultipleChoiceField&lt;/code&gt; &lt;/a&gt;需要两个额外的参数，即 &lt;code&gt;coerce&lt;/code&gt; 和 &lt;code&gt;empty_value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4ce399875d14fc7e29388d5d484a88d69f11646e" translate="yes" xml:space="preserve">
          <source>Just like its parent, you can use it to write tests that involve running the code under test and consuming it with testing tools through HTTP (e.g. Selenium, PhantomJS, etc.), because of which it&amp;rsquo;s needed that the static assets are also published.</source>
          <target state="translated">就像其父代一样，您可以使用它来编写测试，这些测试涉及运行被测代码，并通过HTTP（例如Selenium，PhantomJS等）使用测试工具来使用它，因此还需要发布静态资产。</target>
        </trans-unit>
        <trans-unit id="c3f6a81f08cd9496daefb06e9bff0b819aed3764" translate="yes" xml:space="preserve">
          <source>Just like normal form validation, model form validation is triggered implicitly when calling &lt;a href=&quot;../../ref/forms/api#django.forms.Form.is_valid&quot;&gt;&lt;code&gt;is_valid()&lt;/code&gt;&lt;/a&gt; or accessing the &lt;a href=&quot;../../ref/forms/api#django.forms.Form.errors&quot;&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/a&gt; attribute and explicitly when calling &lt;code&gt;full_clean()&lt;/code&gt;, although you will typically not use the latter method in practice.</source>
          <target state="translated">与正常形式验证一样，模型形式验证会在调用&lt;a href=&quot;../../ref/forms/api#django.forms.Form.is_valid&quot;&gt; &lt;code&gt;is_valid()&lt;/code&gt; &lt;/a&gt;或访问&lt;a href=&quot;../../ref/forms/api#django.forms.Form.errors&quot;&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/a&gt;属性时隐式触发，并在调用 &lt;code&gt;full_clean()&lt;/code&gt; 时显式触发，尽管在实践中通常不会使用后者。</target>
        </trans-unit>
        <trans-unit id="c06c66c76254d542b0c24ce243a1c9fe4392a7fb" translate="yes" xml:space="preserve">
          <source>Just like templates, we &lt;em&gt;might&lt;/em&gt; be able to get away with putting our static files directly in &lt;code&gt;polls/static&lt;/code&gt; (rather than creating another &lt;code&gt;polls&lt;/code&gt; subdirectory), but it would actually be a bad idea. Django will choose the first static file it finds whose name matches, and if you had a static file with the same name in a &lt;em&gt;different&lt;/em&gt; application, Django would be unable to distinguish between them. We need to be able to point Django at the right one, and the best way to ensure this is by &lt;em&gt;namespacing&lt;/em&gt; them. That is, by putting those static files inside &lt;em&gt;another&lt;/em&gt; directory named for the application itself.</source>
          <target state="translated">就像模板一样，我们&lt;em&gt;也许&lt;/em&gt;可以避免将静态文件直接放在 &lt;code&gt;polls/static&lt;/code&gt; 中（而不是创建另一个 &lt;code&gt;polls&lt;/code&gt; 子目录），但这实际上不是一个好主意。 Django将选择找到的第一个名称匹配的静态文件，如果您在&lt;em&gt;其他&lt;/em&gt;应用程序中有一个具有相同名称的静态文件，则Django将无法区分它们。我们需要能够将Django指向正确的位置，而确保这一点的最佳方法是对它们进行&lt;em&gt;命名&lt;/em&gt;。也就是说，通过将这些静态文件放在应用程序本身命名的&lt;em&gt;另一个&lt;/em&gt;目录中。</target>
        </trans-unit>
        <trans-unit id="7505f9431a0039955176ba7cfd1b33e5b3abbe7f" translate="yes" xml:space="preserve">
          <source>Just like the &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.has_perm&quot;&gt;&lt;code&gt;has_perm()&lt;/code&gt;&lt;/a&gt; method, permission names take the form &lt;code&gt;&quot;&amp;lt;app label&amp;gt;.&amp;lt;permission codename&amp;gt;&quot;&lt;/code&gt; (i.e. &lt;code&gt;polls.add_choice&lt;/code&gt; for a permission on a model in the &lt;code&gt;polls&lt;/code&gt; application).</source>
          <target state="translated">就像&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.has_perm&quot;&gt; &lt;code&gt;has_perm()&lt;/code&gt; &lt;/a&gt;方法一样，权限名称采用 &lt;code&gt;&quot;&amp;lt;app label&amp;gt;.&amp;lt;permission codename&amp;gt;&quot;&lt;/code&gt; （即 &lt;code&gt;polls.add_choice&lt;/code&gt; 表示 &lt;code&gt;polls&lt;/code&gt; 应用程序中模型的权限）。</target>
        </trans-unit>
        <trans-unit id="9c7289d3c27d2fa895a412e9d11cd8822f7f37b6" translate="yes" xml:space="preserve">
          <source>Just like the &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.has_perm&quot;&gt;&lt;code&gt;has_perm()&lt;/code&gt;&lt;/a&gt; method, permission names take the form &lt;code&gt;&quot;&amp;lt;app label&amp;gt;.&amp;lt;permission codename&amp;gt;&quot;&lt;/code&gt; (i.e. &lt;code&gt;polls.can_vote&lt;/code&gt; for a permission on a model in the &lt;code&gt;polls&lt;/code&gt; application).</source>
          <target state="translated">就像&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.has_perm&quot;&gt; &lt;code&gt;has_perm()&lt;/code&gt; &lt;/a&gt;方法一样，权限名称采用 &lt;code&gt;&quot;&amp;lt;app label&amp;gt;.&amp;lt;permission codename&amp;gt;&quot;&lt;/code&gt; （即 &lt;code&gt;polls.can_vote&lt;/code&gt; 表示 &lt;code&gt;polls&lt;/code&gt; 应用程序中模型的权限）。</target>
        </trans-unit>
        <trans-unit id="83d2469802382e4391a866a9fb73e4fc396b25f5" translate="yes" xml:space="preserve">
          <source>Just like the static files, we &lt;em&gt;could&lt;/em&gt; have all our templates together, in one big templates directory, and it would work perfectly well. However, templates that belong to a particular application should be placed in that application&amp;rsquo;s template directory (e.g. &lt;code&gt;polls/templates&lt;/code&gt;) rather than the project&amp;rsquo;s (&lt;code&gt;templates&lt;/code&gt;). We&amp;rsquo;ll discuss in more detail in the &lt;a href=&quot;reusable-apps&quot;&gt;reusable apps tutorial&lt;/a&gt;&lt;em&gt;why&lt;/em&gt; we do this.</source>
          <target state="translated">就像静态文件一样，我们&lt;em&gt;可以&lt;/em&gt;将所有模板放在一个大的模板目录中，并且可以很好地工作。但是，属于特定应用程序的模板应放置在该应用程序的模板目录（例如 &lt;code&gt;polls/templates&lt;/code&gt; ）中，而不是项目的（ &lt;code&gt;templates&lt;/code&gt; ）中。我们将在&lt;a href=&quot;reusable-apps&quot;&gt;可重用应用程序教程中&lt;/a&gt;详细讨论&lt;em&gt;为什么&lt;/em&gt;要这样做。</target>
        </trans-unit>
        <trans-unit id="d9eb249d0ce5416cf8a379b2da632734988f8a3a" translate="yes" xml:space="preserve">
          <source>Just like when using a normal &lt;code&gt;Form&lt;/code&gt;, each field in a formset&amp;rsquo;s forms may include HTML attributes such as &lt;code&gt;maxlength&lt;/code&gt; for browser validation. However, form fields of formsets won&amp;rsquo;t include the &lt;code&gt;required&lt;/code&gt; attribute as that validation may be incorrect when adding and deleting forms.</source>
          <target state="translated">就像使用普通 &lt;code&gt;Form&lt;/code&gt; 一样，formset 表单中的每个字段都可能包含HTML属性（例如 &lt;code&gt;maxlength&lt;/code&gt; )以用于浏览器验证。但是，表单集的表单字段不会包含 &lt;code&gt;required&lt;/code&gt; 属性，因为在添加和删除表单时验证可能不正确。</target>
        </trans-unit>
        <trans-unit id="d29395b2e5e9f3683720df2e4f68ed2605ac0624" translate="yes" xml:space="preserve">
          <source>Just like with &lt;a href=&quot;#translator-comments&quot;&gt;Python code&lt;/a&gt;, these notes for translators can be specified using comments, either with the &lt;a href=&quot;../../ref/templates/builtins#std:templatetag-comment&quot;&gt;&lt;code&gt;comment&lt;/code&gt;&lt;/a&gt; tag:</source>
          <target state="translated">就像&lt;a href=&quot;#translator-comments&quot;&gt;Python代码一样&lt;/a&gt;，翻译者的这些注释可以使用注释（通过&lt;a href=&quot;../../ref/templates/builtins#std:templatetag-comment&quot;&gt; &lt;code&gt;comment&lt;/code&gt; &lt;/a&gt;标签）指定：</target>
        </trans-unit>
        <trans-unit id="6840dc42a3514ed5409fad17eb45a2dde935b7fb" translate="yes" xml:space="preserve">
          <source>Just like with &lt;code&gt;ModelForms&lt;/code&gt;, by default the &lt;code&gt;clean()&lt;/code&gt; method of a &lt;code&gt;ModelFormSet&lt;/code&gt; will validate that none of the items in the formset violate the unique constraints on your model (either &lt;code&gt;unique&lt;/code&gt;, &lt;code&gt;unique_together&lt;/code&gt; or &lt;code&gt;unique_for_date|month|year&lt;/code&gt;). If you want to override the &lt;code&gt;clean()&lt;/code&gt; method on a &lt;code&gt;ModelFormSet&lt;/code&gt; and maintain this validation, you must call the parent class&amp;rsquo;s &lt;code&gt;clean&lt;/code&gt; method:</source>
          <target state="translated">就像使用 &lt;code&gt;ModelForms&lt;/code&gt; 一样，默认情况下，ModelFormSet的 &lt;code&gt;clean()&lt;/code&gt; 方法将验证 &lt;code&gt;ModelFormSet&lt;/code&gt; 任何项目均不违反模型的唯一约束（ &lt;code&gt;unique&lt;/code&gt; ， &lt;code&gt;unique_together&lt;/code&gt; 或 &lt;code&gt;unique_for_date|month|year&lt;/code&gt; ）。如果要覆盖 &lt;code&gt;ModelFormSet&lt;/code&gt; 上的 &lt;code&gt;clean()&lt;/code&gt; 方法并保持此验证，则必须调用父类的 &lt;code&gt;clean&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="6abd3775005f0aef3b58a9511045767bf75536c1" translate="yes" xml:space="preserve">
          <source>Just like you would do in &lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name&quot;&gt;&lt;code&gt;verbose_name&lt;/code&gt;&lt;/a&gt; you should provide a lowercase verbose name text for the relation as Django will automatically titlecase it when required.</source>
          <target state="translated">就像您在&lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name&quot;&gt; &lt;code&gt;verbose_name&lt;/code&gt; 中&lt;/a&gt;所做的一样，您应该为该关系提供小写的详细名称文本，因为Django会在需要时自动对其进行标题区分。</target>
        </trans-unit>
        <trans-unit id="4552dc59351c35a92143d1798b6cb8566638b9ec" translate="yes" xml:space="preserve">
          <source>KML is an XML language focused on geographic visualization &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. &lt;code&gt;KMLSitemap&lt;/code&gt; and its compressed counterpart &lt;code&gt;KMZSitemap&lt;/code&gt; allow you to present geolocated data in a machine-readable format.</source>
          <target state="translated">KML是一种专注于地理可视化的XML语言&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;。 &lt;code&gt;KMLSitemap&lt;/code&gt; 及其压缩的 &lt;code&gt;KMZSitemap&lt;/code&gt; 允许您以机器可读的格式显示地理位置数据。</target>
        </trans-unit>
        <trans-unit id="b5d3425cd39c677fd086d00da0b180224309c02d" translate="yes" xml:space="preserve">
          <source>Keep and/or add any entries in this list if you need Django to &lt;a href=&quot;#password-upgrades&quot;&gt;upgrade passwords&lt;/a&gt;.</source>
          <target state="translated">如果您需要Django &lt;a href=&quot;#password-upgrades&quot;&gt;升级密码，&lt;/a&gt;请在此列表中保留和/或添加任何条目。</target>
        </trans-unit>
        <trans-unit id="742aa74832a6e4eeffec8dce24ca986cd98d8c09" translate="yes" xml:space="preserve">
          <source>Keep in mind that &lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt; uses any default related model ordering that has been defined. You might have to explicitly order by the relation &lt;code&gt;_id&lt;/code&gt; or referenced field to make sure the &lt;code&gt;DISTINCT ON&lt;/code&gt; expressions match those at the beginning of the &lt;code&gt;ORDER BY&lt;/code&gt; clause. For example, if the &lt;code&gt;Blog&lt;/code&gt; model defined an &lt;a href=&quot;options#django.db.models.Options.ordering&quot;&gt;&lt;code&gt;ordering&lt;/code&gt;&lt;/a&gt; by &lt;code&gt;name&lt;/code&gt;:</source>
          <target state="translated">请记住，&lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt; &lt;code&gt;order_by()&lt;/code&gt; &lt;/a&gt;使用已定义的任何默认的相关模型排序。您可能必须按关系 &lt;code&gt;_id&lt;/code&gt; 或引用的字段进行显式排序，以确保 &lt;code&gt;DISTINCT ON&lt;/code&gt; 表达式与 &lt;code&gt;ORDER BY&lt;/code&gt; 子句开头的表达式匹配。例如，如果 &lt;code&gt;Blog&lt;/code&gt; 模型按 &lt;code&gt;name&lt;/code&gt; 定义了&lt;a href=&quot;options#django.db.models.Options.ordering&quot;&gt; &lt;code&gt;ordering&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="7459a01ee1258dd537399c8de7e686ccdee573bc" translate="yes" xml:space="preserve">
          <source>Keep in mind that each of these values can be an expression.</source>
          <target state="translated">请记住,这些值都可以是一个表达式。</target>
        </trans-unit>
        <trans-unit id="16a533618d8eaf3b030222e4a118ed6bae06ff24" translate="yes" xml:space="preserve">
          <source>Keep in mind that for the dot operator, dictionary key lookup takes precedence over method lookup. Therefore if the &lt;code&gt;data&lt;/code&gt; dictionary contains a key named &lt;code&gt;'items'&lt;/code&gt;, &lt;code&gt;data.items&lt;/code&gt; will return &lt;code&gt;data['items']&lt;/code&gt; instead of &lt;code&gt;data.items()&lt;/code&gt;. Avoid adding keys that are named like dictionary methods if you want to use those methods in a template (&lt;code&gt;items&lt;/code&gt;, &lt;code&gt;values&lt;/code&gt;, &lt;code&gt;keys&lt;/code&gt;, etc.). Read more about the lookup order of the dot operator in the &lt;a href=&quot;language#template-variables&quot;&gt;documentation of template variables&lt;/a&gt;.</source>
          <target state="translated">请记住，对于点运算符，字典键查找优先于方法查找。因此，如果 &lt;code&gt;data&lt;/code&gt; 字典包含名为 &lt;code&gt;'items'&lt;/code&gt; 的键，则 &lt;code&gt;data.items&lt;/code&gt; 将返回 &lt;code&gt;data['items']&lt;/code&gt; 而不是 &lt;code&gt;data.items()&lt;/code&gt; 。如果要在模板中使用这些方法（ &lt;code&gt;items&lt;/code&gt; ， &lt;code&gt;values&lt;/code&gt; ， &lt;code&gt;keys&lt;/code&gt; 等），请避免添加像字典方法那样命名的键。在&lt;a href=&quot;language#template-variables&quot;&gt;模板变量&lt;/a&gt;的文档中详细了解点运算符的查找顺序。</target>
        </trans-unit>
        <trans-unit id="77e9d273542c1bb70193eff1962287317d2800d3" translate="yes" xml:space="preserve">
          <source>Keep in mind that this will, whenever possible, be executed purely in SQL, and so the &lt;code&gt;delete()&lt;/code&gt; methods of individual object instances will not necessarily be called during the process. If you&amp;rsquo;ve provided a custom &lt;code&gt;delete()&lt;/code&gt; method on a model class and want to ensure that it is called, you will need to &amp;ldquo;manually&amp;rdquo; delete instances of that model (e.g., by iterating over a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; and calling &lt;code&gt;delete()&lt;/code&gt; on each object individually) rather than using the bulk &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method of a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请记住，这将尽可能地仅在SQL中执行，因此在处理过程中不一定会调用单个对象实例的 &lt;code&gt;delete()&lt;/code&gt; 方法。如果您在模型类上提供了自定义 &lt;code&gt;delete()&lt;/code&gt; 方法，并希望确保调用了该方法，则需要&amp;ldquo;手动&amp;rdquo;删除该模型的实例（例如，通过遍历&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;并在其上调用 &lt;code&gt;delete()&lt;/code&gt; 每个对象单独），而不是使用&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;的批量&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="83814bcad4f812320613b08460a501a47d3a6c5e" translate="yes" xml:space="preserve">
          <source>Keep this caching behavior in mind, because it may bite you if you don&amp;rsquo;t use your &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;s correctly. For example, the following will create two &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;s, evaluate them, and throw them away:</source>
          <target state="translated">请记住这种缓存行为，因为如果您未正确使用&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;，它可能会咬住您。例如，以下代码将创建两个&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;，对其进行评估，然后将其丢弃：</target>
        </trans-unit>
        <trans-unit id="b24c7b24e7c1e67f6e64f8bbf3e3867d93a0e6c0" translate="yes" xml:space="preserve">
          <source>Keep this in mind when creating your own custom fields. The Django &lt;code&gt;Field&lt;/code&gt; subclass you write provides the machinery for converting between your Python instances and the database/serializer values in various ways (there are differences between storing a value and using a value for lookups, for example). If this sounds a bit tricky, don&amp;rsquo;t worry &amp;ndash; it will become clearer in the examples below. Just remember that you will often end up creating two classes when you want a custom field:</source>
          <target state="translated">创建自己的自定义字段时，请记住这一点。您编写的Django &lt;code&gt;Field&lt;/code&gt; 子类提供了以各种方式在Python实例和数据库/序列化器值之间进行转换的机制（例如，存储值和使用值进行查找之间存在差异）。如果这听起来有些棘手，请不要担心-在下面的示例中它将变得更加清楚。只需记住，当您需要自定义字段时，通常会最终创建两个类：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
