<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="6468bfe1b90d6cd3667c5baf1e3e836324d1e401" translate="yes" xml:space="preserve">
          <source>Keep your &lt;a href=&quot;../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt; a secret.</source>
          <target state="translated">保密您的&lt;a href=&quot;../ref/settings#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="11bf666ca636cb39858bb367c2938c163eee182a" translate="yes" xml:space="preserve">
          <source>Keeping all user related information in one model removes the need for additional or more complex database queries to retrieve related models. On the other hand, it may be more suitable to store app-specific user information in a model that has a relation with your custom user model. That allows each app to specify its own user data requirements without potentially conflicting or breaking assumptions by other apps. It also means that you would keep your user model as simple as possible, focused on authentication, and following the minimum requirements Django expects custom user models to meet.</source>
          <target state="translated">将所有用户相关信息保存在一个模型中,就不需要额外的或更复杂的数据库查询来检索相关模型。另一方面,在一个与您的自定义用户模型有关系的模型中存储特定应用的用户信息可能更合适。这允许每个应用程序指定自己的用户数据需求,而不会有潜在的冲突或破坏其他应用程序的假设。这也意味着,你会让你的用户模型尽可能的简单,专注于认证,并遵循Django期望自定义用户模型满足的最低要求。</target>
        </trans-unit>
        <trans-unit id="c67dd20ee842986086a0a915ddc2a279490130ed" translate="yes" xml:space="preserve">
          <source>Key</source>
          <target state="translated">Key</target>
        </trans-unit>
        <trans-unit id="8b81e1ecde65f43dd86891e55d0a4672b89353ce" translate="yes" xml:space="preserve">
          <source>Key lookups</source>
          <target state="translated">关键查询</target>
        </trans-unit>
        <trans-unit id="3f5fee6e0075615eacd4e89bb50cab8876b4309f" translate="yes" xml:space="preserve">
          <source>Key points to note:</source>
          <target state="translated">需要注意的关键点:</target>
        </trans-unit>
        <trans-unit id="df16181be8da903a9ea0bcf833d332c01485cc71" translate="yes" xml:space="preserve">
          <source>Key, index, and path lookups</source>
          <target state="translated">键、索引和路径查询</target>
        </trans-unit>
        <trans-unit id="48181c52d7a0f041d9edd4bdbc167c8eb8cb171d" translate="yes" xml:space="preserve">
          <source>Key, index, and path transforms</source>
          <target state="translated">键、索引和路径转换</target>
        </trans-unit>
        <trans-unit id="52b5e092dff22a227c99dc4ed720addb67e119e9" translate="yes" xml:space="preserve">
          <source>Keyword Argument</source>
          <target state="translated">关键字论证</target>
        </trans-unit>
        <trans-unit id="db32172db3cd21ae36313d815fba0dd39bd7127a" translate="yes" xml:space="preserve">
          <source>Keyword Arguments</source>
          <target state="translated">關鍵字參數</target>
        </trans-unit>
        <trans-unit id="b6e263b622ac66480a12aa8dc09139beb9f6e104" translate="yes" xml:space="preserve">
          <source>Keyword argument queries &amp;ndash; in &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt;, etc. &amp;ndash; are &amp;ldquo;AND&amp;rdquo;ed together. If you need to execute more complex queries (for example, queries with &lt;code&gt;OR&lt;/code&gt; statements), you can use &lt;a href=&quot;../../ref/models/querysets#django.db.models.Q&quot;&gt;&lt;code&gt;Q objects&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">关键字参数查询（在&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt;等中）一起&amp;ldquo;与&amp;rdquo;在一起。如果您需要执行更复杂的查询（例如，带有 &lt;code&gt;OR&lt;/code&gt; 语句的查询），则可以使用&lt;a href=&quot;../../ref/models/querysets#django.db.models.Q&quot;&gt; &lt;code&gt;Q objects&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a0ec8760b0d3dc8d48fb4e0610ab19607da95cff" translate="yes" xml:space="preserve">
          <source>Keyword arguments allow you to change the message level, add extra CSS tags, or fail silently if the &lt;code&gt;contrib.messages&lt;/code&gt; framework is not installed. These keyword arguments match those for &lt;a href=&quot;../messages#django.contrib.messages.add_message&quot;&gt;&lt;code&gt;django.contrib.messages.add_message()&lt;/code&gt;&lt;/a&gt;, see that function&amp;rsquo;s documentation for more details. One difference is that the level may be passed as a string label in addition to integer/constant.</source>
          <target state="translated">如果未安装 &lt;code&gt;contrib.messages&lt;/code&gt; 框架，则可以使用关键字参数来更改消息级别，添加其他CSS标记或静默失败。这些关键字参数与&lt;a href=&quot;../messages#django.contrib.messages.add_message&quot;&gt; &lt;code&gt;django.contrib.messages.add_message()&lt;/code&gt; 的&lt;/a&gt;参数匹配，有关更多详细信息，请参见该函数的文档。一个区别是，除了整数/常量外，该级别还可以作为字符串标签传递。</target>
        </trans-unit>
        <trans-unit id="e3c047d4fa560655a4c9b137b6ae6b7f96f9bb33" translate="yes" xml:space="preserve">
          <source>Keyword arguments that can provide extra context for the SQL generated by the aggregate.</source>
          <target state="translated">关键字参数,可以为聚合生成的SQL提供额外的上下文。</target>
        </trans-unit>
        <trans-unit id="3fa8b79bb0bea1bbd3b43612463d464bd5a74adc" translate="yes" xml:space="preserve">
          <source>Kilometre, Kilometer</source>
          <target state="translated">公里,千米</target>
        </trans-unit>
        <trans-unit id="4e617bafa47d9a4ed6de9204fc070360a5cc8706" translate="yes" xml:space="preserve">
          <source>KyngChaos</source>
          <target state="translated">KyngChaos</target>
        </trans-unit>
        <trans-unit id="cbc770cf346b5261fa6de79f704a15a53242cf2d" translate="yes" xml:space="preserve">
          <source>KyngChaos packages</source>
          <target state="translated">KyngChaos包</target>
        </trans-unit>
        <trans-unit id="b153eb78e99d2e3e01e42e23731bfe05df63eb8b" translate="yes" xml:space="preserve">
          <source>LJWorld.com and Lawrence.com both have email alert functionality, which lets readers sign up to get notifications when news happens. It&amp;rsquo;s pretty basic: A reader signs up on a Web form and immediately gets an email saying, &amp;ldquo;Thanks for your subscription.&amp;rdquo;</source>
          <target state="translated">LJWorld.com和Lawrence.com都具有电子邮件警报功能，该功能使读者可以注册以获取新闻发生时的通知。这很基本：读者在Web表单上签名，然后立即收到一封电子邮件，其中说：&amp;ldquo;谢谢您的订阅。&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="c87e855f857da475f822ad7e332f47b0210e6b27" translate="yes" xml:space="preserve">
          <source>LOB columns may not be used as primary keys.</source>
          <target state="translated">LOB列不可作为主键使用。</target>
        </trans-unit>
        <trans-unit id="f37a4fdbe1b9352a7f800671735935bf512cbbc1" translate="yes" xml:space="preserve">
          <source>LOB columns may not be used in a &lt;code&gt;SELECT DISTINCT&lt;/code&gt; list. This means that attempting to use the &lt;code&gt;QuerySet.distinct&lt;/code&gt; method on a model that includes &lt;code&gt;TextField&lt;/code&gt; columns will result in an &lt;code&gt;ORA-00932&lt;/code&gt; error when run against Oracle. As a workaround, use the &lt;code&gt;QuerySet.defer&lt;/code&gt; method in conjunction with &lt;code&gt;distinct()&lt;/code&gt; to prevent &lt;code&gt;TextField&lt;/code&gt; columns from being included in the &lt;code&gt;SELECT DISTINCT&lt;/code&gt; list.</source>
          <target state="translated">不能在 &lt;code&gt;SELECT DISTINCT&lt;/code&gt; 列表中使用LOB列。这意味着，在针对Oracle运行时，尝试在包含 &lt;code&gt;TextField&lt;/code&gt; 列的模型上使用 &lt;code&gt;QuerySet.distinct&lt;/code&gt; 方法将导致 &lt;code&gt;ORA-00932&lt;/code&gt; 错误。解决方法是，将 &lt;code&gt;QuerySet.defer&lt;/code&gt; 方法与 &lt;code&gt;distinct()&lt;/code&gt; 结合使用，以防止将 &lt;code&gt;TextField&lt;/code&gt; 列包含在 &lt;code&gt;SELECT DISTINCT&lt;/code&gt; 列表中。</target>
        </trans-unit>
        <trans-unit id="23aa061f34d8daee01c85141530845ac93ba30f7" translate="yes" xml:space="preserve">
          <source>LOB columns may not be used in indexes.</source>
          <target state="translated">LOB列不可用于索引中。</target>
        </trans-unit>
        <trans-unit id="2f0d617fe578d453561df393b035a56559df8484" translate="yes" xml:space="preserve">
          <source>LOCALE_PATHS, LANGUAGE_CODE</source>
          <target state="translated">LOCALE_PATHS,LANGUAGE_CODE。</target>
        </trans-unit>
        <trans-unit id="ba9dfe5041cd205445df5b843e8a9dc628256415" translate="yes" xml:space="preserve">
          <source>Lambdas</source>
          <target state="translated">Lambdas</target>
        </trans-unit>
        <trans-unit id="89b86ab0e66f527166d98df92ddbcf5416ed58f6" translate="yes" xml:space="preserve">
          <source>Language</source>
          <target state="translated">Language</target>
        </trans-unit>
        <trans-unit id="15cf7920bc40aa026228a895b90198998e1c661b" translate="yes" xml:space="preserve">
          <source>Language cookie</source>
          <target state="translated">语言饼干</target>
        </trans-unit>
        <trans-unit id="e2313e70fc3b44edd797d4ee37ae99cf5b536f9e" translate="yes" xml:space="preserve">
          <source>Language prefix in URL patterns</source>
          <target state="translated">URL模式中的语言前缀</target>
        </trans-unit>
        <trans-unit id="d5706fe49707b39d9d0ba70c9ad9195dbfd8428b" translate="yes" xml:space="preserve">
          <source>Large directories with many files may cause performance issues</source>
          <target state="translated">有许多文件的大目录可能会导致性能问题。</target>
        </trans-unit>
        <trans-unit id="66a2147848cda23e4068f8ecbe6f03cd2754422c" translate="yes" xml:space="preserve">
          <source>Lastly, your check function must be registered explicitly with system check registry. Checks should be registered in a file that&amp;rsquo;s loaded when your application is loaded; for example, in the &lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;AppConfig.ready()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">最后，您的检查功能必须在系统检查注册表中明确注册。支票应注册在加载应用程序时加载的文件中；例如，在&lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt; &lt;code&gt;AppConfig.ready()&lt;/code&gt; &lt;/a&gt;方法中。</target>
        </trans-unit>
        <trans-unit id="ccbd0691e5899de74565a225b47115af7e41eb95" translate="yes" xml:space="preserve">
          <source>Later on we use the term &lt;em&gt;packaging&lt;/em&gt; to describe the process of making a Python package easy for others to install. It can be a little confusing, we know.</source>
          <target state="translated">稍后，我们使用术语&lt;em&gt;打包&lt;/em&gt;来描述使Python包易于他人安装的过程。我们知道，这可能会有些混乱。</target>
        </trans-unit>
        <trans-unit id="bf20c881e0dc069882fc7e5d606a7b61cb53816e" translate="yes" xml:space="preserve">
          <source>LayerMapping data import utility</source>
          <target state="translated">LayerMapping数据导入工具</target>
        </trans-unit>
        <trans-unit id="6eb48363145bff612fcd9f60ac338f08d9514585" translate="yes" xml:space="preserve">
          <source>Laziness allows us to refer to things before they are instantiated, or even before it&amp;rsquo;s possible to instantiate them. This has numerous uses.</source>
          <target state="translated">惰性允许我们在实例化它们之前，甚至在可能实例化它们之前都引用它们。这有许多用途。</target>
        </trans-unit>
        <trans-unit id="7306ad109bfe4aa0d559571e47ed10b95c1acd7e" translate="yes" xml:space="preserve">
          <source>Laziness in Django</source>
          <target state="translated">Django中的懒惰</target>
        </trans-unit>
        <trans-unit id="9db8ab131c503038349926561b42c112352a10ec" translate="yes" xml:space="preserve">
          <source>Laziness is also a way to save effort by trying to avoid work in the first place. That is, one aspect of laziness is not doing anything until it has to be done, because it may not turn out to be necessary after all. Laziness can therefore have performance implications, and the more expensive the work concerned, the more there is to gain through laziness.</source>
          <target state="translated">懒惰也是一种省力的方式,首先要尽量避免工作。也就是说,懒惰的一个方面是在必须做之前不做任何事情,因为事实证明它可能根本没有必要。因此,懒惰可能会对业绩产生影响,有关工作的成本越高,通过懒惰获得的好处就越多。</target>
        </trans-unit>
        <trans-unit id="ba6579907e4a7f45362bf94f354f36722b584440" translate="yes" xml:space="preserve">
          <source>Lazy Geometries</source>
          <target state="translated">懒人几何</target>
        </trans-unit>
        <trans-unit id="5da11f4eec7970e01e777c79bbd1f868cda4bd15" translate="yes" xml:space="preserve">
          <source>Lazy translation</source>
          <target state="translated">懒人翻译</target>
        </trans-unit>
        <trans-unit id="3d6bad0f45a94e2a01930bb1020eff0a76e76f44" translate="yes" xml:space="preserve">
          <source>Lazy translations and plural</source>
          <target state="translated">懒惰的翻译和复数</target>
        </trans-unit>
        <trans-unit id="9b1f34a5739405246bd9919b678f713ac631fed7" translate="yes" xml:space="preserve">
          <source>Learn about some other core functionalities of the Django framework:</source>
          <target state="translated">了解Django框架的其他一些核心功能。</target>
        </trans-unit>
        <trans-unit id="ef1ab011ef2c624e2c7031f6c7a9d37cc55f1cf3" translate="yes" xml:space="preserve">
          <source>Learn about the development process for the Django project itself and about how you can contribute:</source>
          <target state="translated">了解Django项目本身的开发过程,以及如何为项目做贡献。</target>
        </trans-unit>
        <trans-unit id="2f3354aecddee7d995b534cf8538581af1f6c203" translate="yes" xml:space="preserve">
          <source>Learn about the various components and tools to help you in the development and testing of Django applications:</source>
          <target state="translated">了解各种组件和工具,帮助你开发和测试Django应用。</target>
        </trans-unit>
        <trans-unit id="824d76b124e6289f372e2ff6bcba91e8939343bd" translate="yes" xml:space="preserve">
          <source>Learn more</source>
          <target state="translated">了解更多</target>
        </trans-unit>
        <trans-unit id="f1ab6cb67a17a1c6e360ed241bd2dda3b974e3d3" translate="yes" xml:space="preserve">
          <source>Learns what headers to take into account for some request path from the response object. It stores those headers in a global path registry so that later access to that path will know what headers to take into account without building the response object itself. The headers are named in the &lt;code&gt;Vary&lt;/code&gt; header of the response, but we want to prevent response generation.</source>
          <target state="translated">了解响应对象中某些请求路径要考虑的标头。它将这些标头存储在全局路径注册表中，以便以后对该路径的访问将知道要考虑哪些标头，而无需构建响应对象本身。标头在响应的 &lt;code&gt;Vary&lt;/code&gt; 标头中命名，但是我们要防止生成响应。</target>
        </trans-unit>
        <trans-unit id="09777de5be0a68a212ac9f63799746f9d808d38b" translate="yes" xml:space="preserve">
          <source>Leaving this setting off isn&amp;rsquo;t a good idea because an attacker could capture an unencrypted session cookie with a packet sniffer and use the cookie to hijack the user&amp;rsquo;s session.</source>
          <target state="translated">取消此设置不是一个好主意，因为攻击者可以使用数据包嗅探器捕获未加密的会话cookie，并使用该cookie劫持用户的会话。</target>
        </trans-unit>
        <trans-unit id="083e90c2b3005bc225a03c2abdf03d369325f963" translate="yes" xml:space="preserve">
          <source>Left-aligns the value in a field of a given width.</source>
          <target state="translated">左对齐给定宽度的字段中的值。</target>
        </trans-unit>
        <trans-unit id="a02227b0f0b9337ad694cb0213155cb14a60b4fc" translate="yes" xml:space="preserve">
          <source>Less than or equal to.</source>
          <target state="translated">小于或等于:</target>
        </trans-unit>
        <trans-unit id="73c669caad45b8802c1bb872ff0703e13b665fba" translate="yes" xml:space="preserve">
          <source>Less than or equal to. Example:</source>
          <target state="translated">小于或等于:例如:</target>
        </trans-unit>
        <trans-unit id="40d2a5fe11e0306023d56f6e8912a222594ed047" translate="yes" xml:space="preserve">
          <source>Less than.</source>
          <target state="translated">小于:</target>
        </trans-unit>
        <trans-unit id="96c4349122b9bb7576d0d61f7a88e8edd3726822" translate="yes" xml:space="preserve">
          <source>Less than. Example:</source>
          <target state="translated">小于:例如:</target>
        </trans-unit>
        <trans-unit id="c841a65c7f1c3eccf8b28668b87263bfc640fcff" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s also add a custom method to this model:</source>
          <target state="translated">我们还向该模型添加一个自定义方法：</target>
        </trans-unit>
        <trans-unit id="8c13e4563c320f96f46850c604f3f010e32fc04d" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s assume you have a blog system, with an &lt;code&gt;Entry&lt;/code&gt; model, and you want your sitemap to include all the links to your individual blog entries. Here&amp;rsquo;s how your sitemap class might look:</source>
          <target state="translated">假设您有一个具有 &lt;code&gt;Entry&lt;/code&gt; 模型的博客系统，并且希望站点地图包括指向各个Blog条目的所有链接。这是您的站点地图类的外观：</target>
        </trans-unit>
        <trans-unit id="1c225b116fcb368350be69537d8c022103cd45ec" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s convert our poll app to use the generic views system, so we can delete a bunch of our own code. We&amp;rsquo;ll have to take a few steps to make the conversion. We will:</source>
          <target state="translated">让我们将民意调查应用程序转换为使用通用视图系统，以便我们删除一堆自己的代码。我们必须采取一些步骤进行转换。我们会：</target>
        </trans-unit>
        <trans-unit id="37107c1b14b06985400cce64f2c0cee8e51e7116" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create a &lt;code&gt;ContactForm&lt;/code&gt; to demonstrate how you&amp;rsquo;d use this field:</source>
          <target state="translated">让我们创建一个 &lt;code&gt;ContactForm&lt;/code&gt; 来演示如何使用此字段：</target>
        </trans-unit>
        <trans-unit id="fc48aeca8eda2b4682b3d6e61de76f5755e853cc" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s dive right in. Create a file called &lt;code&gt;admin.py&lt;/code&gt; inside the &lt;code&gt;world&lt;/code&gt; application with the following code:</source>
          <target state="translated">让我们 &lt;code&gt;admin.py&lt;/code&gt; 研究。使用以下代码在 &lt;code&gt;world&lt;/code&gt; 应用程序中创建一个名为admin.py的文件：</target>
        </trans-unit>
        <trans-unit id="79da13085a3608464e32b76daf1a4b750cb3a395" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s examine case-insensitive transformations here. This transformation isn&amp;rsquo;t very useful in practice as Django already comes with a bunch of built-in case-insensitive lookups, but it will be a nice demonstration of bilateral transformations in a database-agnostic way.</source>
          <target state="translated">让我们在这里检查不区分大小写的转换。由于Django已经附带了许多内置的不区分大小写的查找，因此这种转换在实践中不是很有用，但是它将以与数据库无关的方式很好地演示了双边转换。</target>
        </trans-unit>
        <trans-unit id="00c7bb390f8a74d36b4ee2f29857af8f287892c8" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s first create a custom form field that validates its input is a string containing comma-separated email addresses. The full class looks like this:</source>
          <target state="translated">让我们首先创建一个自定义表单字段，以验证其输入是否为包含逗号分隔的电子邮件地址的字符串。完整的类如下所示：</target>
        </trans-unit>
        <trans-unit id="187a2d21db52b3e5410be8c2a3c86fdac14a40b4" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s learn by example.</source>
          <target state="translated">让我们通过例子学习。</target>
        </trans-unit>
        <trans-unit id="1fb3c9be87e64709bf5f0c1265d580cb8272df73" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at an example to see how this works. If you already have the &lt;a href=&quot;#module-django.contrib.contenttypes&quot;&gt;&lt;code&gt;contenttypes&lt;/code&gt;&lt;/a&gt; application installed, and then add &lt;a href=&quot;sites#module-django.contrib.sites&quot;&gt;&lt;code&gt;the sites application&lt;/code&gt;&lt;/a&gt; to your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting and run &lt;code&gt;manage.py migrate&lt;/code&gt; to install it, the model &lt;a href=&quot;sites#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;django.contrib.sites.models.Site&lt;/code&gt;&lt;/a&gt; will be installed into your database. Along with it a new instance of &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; will be created with the following values:</source>
          <target state="translated">让我们看一个例子，看看它是如何工作的。如果您已经安装了&lt;a href=&quot;#module-django.contrib.contenttypes&quot;&gt; &lt;code&gt;contenttypes&lt;/code&gt; &lt;/a&gt;应用程序，然后将&lt;a href=&quot;sites#module-django.contrib.sites&quot;&gt; &lt;code&gt;the sites application&lt;/code&gt; &lt;/a&gt;添加到&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置中并运行 &lt;code&gt;manage.py migrate&lt;/code&gt; 进行安装，则模型&lt;a href=&quot;sites#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;django.contrib.sites.models.Site&lt;/code&gt; &lt;/a&gt;将安装到数据库中。随之将创建具有以下值的&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;新实例：</target>
        </trans-unit>
        <trans-unit id="b482ca18f2f08a83d3ec431b921de771f9948555" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at how two of Django&amp;rsquo;s generic class-based views are built out of mixins providing discrete functionality. We&amp;rsquo;ll consider &lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt;&lt;code&gt;DetailView&lt;/code&gt;&lt;/a&gt;, which renders a &amp;ldquo;detail&amp;rdquo; view of an object, and &lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt;, which will render a list of objects, typically from a queryset, and optionally paginate them. This will introduce us to four mixins which between them provide useful functionality when working with either a single Django object, or multiple objects.</source>
          <target state="translated">让我们看一下如何使用提供离散功能的mixin构建Django的两个通用的基于类的视图。我们将考虑&lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt; &lt;code&gt;DetailView&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt;，DetailView呈现对象的&amp;ldquo;详细&amp;rdquo;视图，ListView呈现对象的列表（通常来自查询集），并可选地对它们进行分页。这将向我们介绍四个mixin，它们在使用单个Django对象或多个对象时提供有用的功能。</target>
        </trans-unit>
        <trans-unit id="ffefad313aa5954a7172dc72b1d07b889da725a8" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at some of these more closely.</source>
          <target state="translated">让我们更仔细地研究其中一些。</target>
        </trans-unit>
        <trans-unit id="010769fda27e004183327e34d1bc70963b10f512" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at template inheritance by starting with an example:</source>
          <target state="translated">让我们从一个示例开始看一下模板继承：</target>
        </trans-unit>
        <trans-unit id="55d7d95000f7a31233733941186d880e813c5ba9" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at the SQL that will generate the table for the &lt;code&gt;WorldBorder&lt;/code&gt; model:</source>
          <target state="translated">让我们看一下将为 &lt;code&gt;WorldBorder&lt;/code&gt; 模型生成表的SQL ：</target>
        </trans-unit>
        <trans-unit id="a58cc92a0a67b5a9a26020d7c3a1539bddac1b9c" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at what &lt;a href=&quot;../ref/django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;startproject&lt;/code&gt;&lt;/a&gt; created:</source>
          <target state="translated">让我们看一下&lt;a href=&quot;../ref/django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;startproject&lt;/code&gt; &lt;/a&gt;创建了什么：</target>
        </trans-unit>
        <trans-unit id="f0916a74a448227e847bd0ae1c7a1ee8b3a78ac6" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s refactor our &lt;code&gt;CycleNode&lt;/code&gt; implementation to use the &lt;code&gt;render_context&lt;/code&gt;:</source>
          <target state="translated">让我们重构 &lt;code&gt;CycleNode&lt;/code&gt; 实现以使用 &lt;code&gt;render_context&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="61527bb6f9f99fa92fe94f8a54144255e683d9a4" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s reproduce this error by comparing a naive and an aware datetime:</source>
          <target state="translated">让我们通过比较朴素的日期时间和已知的日期时间来重现此错误：</target>
        </trans-unit>
        <trans-unit id="b6172a55db4a398066cf2f300f7a317aae4b91ea" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say the &lt;code&gt;news/year_archive.html&lt;/code&gt; template was found. Here&amp;rsquo;s what that might look like:</source>
          <target state="translated">假设找到了 &lt;code&gt;news/year_archive.html&lt;/code&gt; 模板。可能是这样的：</target>
        </trans-unit>
        <trans-unit id="c8498358e4e316a59220a51bcfc584545251953d" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say we want to change the &lt;code&gt;account_type&lt;/code&gt; for our clients to match their registration dates. We can do this using a conditional expression and the &lt;a href=&quot;querysets#django.db.models.query.QuerySet.update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">假设我们要更改客户的 &lt;code&gt;account_type&lt;/code&gt; 以匹配其注册日期。我们可以使用条件表达式和&lt;a href=&quot;querysets#django.db.models.query.QuerySet.update&quot;&gt; &lt;code&gt;update()&lt;/code&gt; &lt;/a&gt;方法来做到这一点：</target>
        </trans-unit>
        <trans-unit id="674775ae6b8f711b93b934fc943f13569ff5e193" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say we&amp;rsquo;re writing a backend for Microsoft&amp;rsquo;s SQL Server which uses the SQL &lt;code&gt;LEN&lt;/code&gt; instead of &lt;code&gt;LENGTH&lt;/code&gt; for the &lt;a href=&quot;database-functions#django.db.models.functions.Length&quot;&gt;&lt;code&gt;Length&lt;/code&gt;&lt;/a&gt; function. We&amp;rsquo;ll monkey patch a new method called &lt;code&gt;as_sqlserver()&lt;/code&gt; onto the &lt;code&gt;Length&lt;/code&gt; class:</source>
          <target state="translated">假设我们正在为Microsoft的SQL Server编写一个后端，该后端使用SQL &lt;code&gt;LEN&lt;/code&gt; 而不是 &lt;code&gt;LENGTH&lt;/code&gt; 作为&lt;a href=&quot;database-functions#django.db.models.functions.Length&quot;&gt; &lt;code&gt;Length&lt;/code&gt; &lt;/a&gt;函数。我们将把一个名为 &lt;code&gt;as_sqlserver()&lt;/code&gt; 的新方法修补到 &lt;code&gt;Length&lt;/code&gt; 类上：</target>
        </trans-unit>
        <trans-unit id="9fbadd9a8d68743fcc57b910b725e2c6420e8e5f" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say you were starting a new project that needed a polls app like the one we&amp;rsquo;ve been working on. How do you make this app reusable? Luckily, you&amp;rsquo;re well on the way already. In &lt;a href=&quot;tutorial01&quot;&gt;Tutorial 1&lt;/a&gt;, we saw how we could decouple polls from the project-level URLconf using an &lt;code&gt;include&lt;/code&gt;. In this tutorial, we&amp;rsquo;ll take further steps to make the app easy to use in new projects and ready to publish for others to install and use.</source>
          <target state="translated">假设您正在启动一个需要像我们一直在研究的民意测验应用程序的新项目。您如何使该应用程序可重用？幸运的是，您已经很顺利了。在&lt;a href=&quot;tutorial01&quot;&gt;教程1中&lt;/a&gt;，我们看到了如何使用 &lt;code&gt;include&lt;/code&gt; 来将民意测验与项目级URLconf分离。在本教程中，我们将采取进一步的步骤，使该应用易于在新项目中使用，并准备发布供他人安装和使用。</target>
        </trans-unit>
        <trans-unit id="f4547f3c6ed9ab627755ced07c0ef98ea5492c5d" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say you&amp;rsquo;re developing your Django application and have a &amp;ldquo;pristine&amp;rdquo; copy of a database that you&amp;rsquo;d like to interact with. You can dump your database to a fixture (using the &lt;a href=&quot;#django-admin-dumpdata&quot;&gt;&lt;code&gt;dumpdata&lt;/code&gt;&lt;/a&gt; command, explained above), then use &lt;code&gt;testserver&lt;/code&gt; to run your Web application with that data. With this arrangement, you have the flexibility of messing up your data in any way, knowing that whatever data changes you&amp;rsquo;re making are only being made to a test database.</source>
          <target state="translated">假设您正在开发Django应用程序，并拥有要与之交互的数据库的&amp;ldquo;原始&amp;rdquo;副本。您可以将数据库转储到&lt;a href=&quot;#django-admin-dumpdata&quot;&gt; &lt;code&gt;dumpdata&lt;/code&gt; &lt;/a&gt;（使用dumpdata命令，如上所述），然后使用 &lt;code&gt;testserver&lt;/code&gt; 使用该数据运行Web应用程序。通过这种安排，您可以灵活地以任何方式对数据进行混乱，因为您知道所做的任何数据更改都只会对测试数据库进行。</target>
        </trans-unit>
        <trans-unit id="3e592833b5543bdeb8888157baa74642a61fc297" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say you&amp;rsquo;re trying to override the templates for a third-party application called &lt;code&gt;blog&lt;/code&gt;, which provides the templates &lt;code&gt;blog/post.html&lt;/code&gt; and &lt;code&gt;blog/list.html&lt;/code&gt;. The relevant settings for your project would look like:</source>
          <target state="translated">假设您正在尝试覆盖名为 &lt;code&gt;blog&lt;/code&gt; 的第三方应用程序的模板，该应用程序提供了 &lt;code&gt;blog/post.html&lt;/code&gt; 和 &lt;code&gt;blog/list.html&lt;/code&gt; 模板。项目的相关设置如下所示：</target>
        </trans-unit>
        <trans-unit id="4a78da4f0f96ccaa8818c94601b3d212850c1086" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s see how it works:</source>
          <target state="translated">让我们看看它是如何工作的：</target>
        </trans-unit>
        <trans-unit id="e06a71efa03ee78ba69e395440cf513c47c8c2b5" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s see how this works by registering a signal that gets called after each HTTP request is finished. We&amp;rsquo;ll be connecting to the &lt;a href=&quot;../ref/signals#django.core.signals.request_finished&quot;&gt;&lt;code&gt;request_finished&lt;/code&gt;&lt;/a&gt; signal.</source>
          <target state="translated">通过注册在每个HTTP请求完成后调用的信号，让我们看看它是如何工作的。我们将连接到&lt;a href=&quot;../ref/signals#django.core.signals.request_finished&quot;&gt; &lt;code&gt;request_finished&lt;/code&gt; &lt;/a&gt;信号。</target>
        </trans-unit>
        <trans-unit id="febf35219c9a28beaf6a9acbff3a5277afa2d816" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s see how this works by reordering the fields on the edit form. Replace the &lt;code&gt;admin.site.register(Question)&lt;/code&gt; line with:</source>
          <target state="translated">让我们通过重新排列编辑表单中的字段来查看其工作原理。将 &lt;code&gt;admin.site.register(Question)&lt;/code&gt; 行替换为：</target>
        </trans-unit>
        <trans-unit id="6404ea57f576d05b9c8fbca7fa5c5d63fa43f83f" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start by looking at some examples of showing a list of objects or an individual object.</source>
          <target state="translated">让我们先来看一些显示对象列表或单个对象的示例。</target>
        </trans-unit>
        <trans-unit id="1551f600d211b9d0023bac9d0cb4fadb9a4233e4" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start with a small custom lookup. We will write a custom lookup &lt;code&gt;ne&lt;/code&gt; which works opposite to &lt;code&gt;exact&lt;/code&gt;. &lt;code&gt;Author.objects.filter(name__ne='Jack')&lt;/code&gt; will translate to the SQL:</source>
          <target state="translated">让我们从一个小的自定义查找开始。我们将编写一个自定义查找 &lt;code&gt;ne&lt;/code&gt; 其工作相对 &lt;code&gt;exact&lt;/code&gt; 。 &lt;code&gt;Author.objects.filter(name__ne='Jack')&lt;/code&gt; 将转换为SQL：</target>
        </trans-unit>
        <trans-unit id="423531172bf446e55a2e04f7a1a96cecf1db8ece" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start with model fields. If you break it down, a model field provides a way to take a normal Python object &amp;ndash; string, boolean, &lt;code&gt;datetime&lt;/code&gt;, or something more complex like &lt;code&gt;Hand&lt;/code&gt; &amp;ndash; and convert it to and from a format that is useful when dealing with the database. (Such a format is also useful for serialization, but as we&amp;rsquo;ll see later, that is easier once you have the database side under control).</source>
          <target state="translated">让我们从模型字段开始。如果将其分解，则模型字段可提供一种获取普通Python对象（字符串，布尔值， &lt;code&gt;datetime&lt;/code&gt; 或诸如 &lt;code&gt;Hand&lt;/code&gt; 之类的更复杂对象）并将其与在处理数据库时有用的格式进行相互转换的方法。（这种格式对于序列化也很有用，但是正如我们将在后面看到的那样，一旦您控制了数据库端，这将变得更加容易）。</target>
        </trans-unit>
        <trans-unit id="6f46797d9a8d056443aa92c8f4619748862100fb" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s step through this code one line at a time:</source>
          <target state="translated">让我们一次一步地完成这段代码：</target>
        </trans-unit>
        <trans-unit id="94aa51d90972b01afb689b3d1a89d3eb901bb673" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take a look inside a couple of those files:</source>
          <target state="translated">让我们看一下其中的两个文件：</target>
        </trans-unit>
        <trans-unit id="bccd1c870a0a4dcf400d08d947411ab954b771e6" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try this with an example. Normally, one might do something like this:</source>
          <target state="translated">让我们尝试一个例子。通常，可能会执行以下操作：</target>
        </trans-unit>
        <trans-unit id="504babc6e275812ba81c4391fb57ae519e3510d7" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try with some invalid data. In this case, &lt;code&gt;subject&lt;/code&gt; is blank (an error, because all fields are required by default) and &lt;code&gt;sender&lt;/code&gt; is not a valid email address:</source>
          <target state="translated">让我们尝试一些无效的数据。在这种情况下， &lt;code&gt;subject&lt;/code&gt; 为空白（错误，因为默认情况下所有字段都是必需的），并且 &lt;code&gt;sender&lt;/code&gt; 不是有效的电子邮件地址：</target>
        </trans-unit>
        <trans-unit id="c2190c9fc23eb29106134f7ad4a9ace95beaf6b8" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s update our poll detail template (&amp;ldquo;polls/detail.html&amp;rdquo;) from the last tutorial, so that the template contains an HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element:</source>
          <target state="translated">让我们从上一个教程中更新民意调查详细信息模板（&amp;ldquo; polls / detail.html&amp;rdquo;），以便该模板包含HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 元素：</target>
        </trans-unit>
        <trans-unit id="2632c1e8aa342b4a8b2b77fdaa7894b3813e8647" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s verify your Django project works. Change into the outer &lt;code&gt;mysite&lt;/code&gt; directory, if you haven&amp;rsquo;t already, and run the following commands:</source>
          <target state="translated">让我们验证您的Django项目是否有效。如果尚未进入外部 &lt;code&gt;mysite&lt;/code&gt; 目录，请运行以下命令：</target>
        </trans-unit>
        <trans-unit id="7481c3803bbb2daeb5381bc49b0b54a65124b8cb" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s walk through this example. &lt;code&gt;{% regroup %}&lt;/code&gt; takes three arguments: the list you want to regroup, the attribute to group by, and the name of the resulting list. Here, we&amp;rsquo;re regrouping the &lt;code&gt;cities&lt;/code&gt; list by the &lt;code&gt;country&lt;/code&gt; attribute and calling the result &lt;code&gt;country_list&lt;/code&gt;.</source>
          <target state="translated">让我们来看这个例子。 &lt;code&gt;{% regroup %}&lt;/code&gt; 接受三个参数：要重新分组的列表，分组依据的属性以及结果列表的名称。在这里，我们通过 &lt;code&gt;country&lt;/code&gt; 属性将 &lt;code&gt;cities&lt;/code&gt; 列表重新分组，并将结果称为 &lt;code&gt;country_list&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd3cf48e50eddc3fba400217aaf336f782eaf8e5" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s write a migration that populates our new &lt;code&gt;name&lt;/code&gt; field with the combined values of &lt;code&gt;first_name&lt;/code&gt; and &lt;code&gt;last_name&lt;/code&gt; (we&amp;rsquo;ve come to our senses and realized that not everyone has first and last names). All we need to do is use the historical model and iterate over the rows:</source>
          <target state="translated">让我们编写一个迁移，使用 &lt;code&gt;first_name&lt;/code&gt; 和 &lt;code&gt;last_name&lt;/code&gt; 的组合值填充我们的新 &lt;code&gt;name&lt;/code&gt; 字段（我们已经意识到，并不是每个人都有名字和姓氏）。我们需要做的就是使用历史模型并对行进行迭代：</target>
        </trans-unit>
        <trans-unit id="36bb27cf6e20079aabce85127956f8d966f68f12" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s write the first view. Open the file &lt;code&gt;polls/views.py&lt;/code&gt; and put the following Python code in it:</source>
          <target state="translated">让我们来写第一个视图。打开文件 &lt;code&gt;polls/views.py&lt;/code&gt; 并将以下Python代码放入其中：</target>
        </trans-unit>
        <trans-unit id="8f407590b229000b90afe5cd5954958752ddd121" translate="yes" xml:space="preserve">
          <source>Lets you create a formset with the ability to order:</source>
          <target state="translated">让您创建一个具有订购功能的表单集。</target>
        </trans-unit>
        <trans-unit id="c02187affceb445e9305a60658d3c066c7db16fa" translate="yes" xml:space="preserve">
          <source>Lets you create a formset with the ability to select forms for deletion:</source>
          <target state="translated">让你创建一个表格集,并能选择要删除的表格。</target>
        </trans-unit>
        <trans-unit id="f556c30e0a0e7632f1adaf69376f9c9a698f371c" translate="yes" xml:space="preserve">
          <source>Lets you pass a command as a string to execute it as Django, like so:</source>
          <target state="translated">让你把一个命令作为字符串传递给Django执行,就像这样。</target>
        </trans-unit>
        <trans-unit id="df65069d0885fd61cd4c2cc0c08459bf7ec10caa" translate="yes" xml:space="preserve">
          <source>Lets you specify the URL that users who don&amp;rsquo;t pass the test will be redirected to. It may be a login page and defaults to &lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt;&lt;code&gt;settings.LOGIN_URL&lt;/code&gt;&lt;/a&gt; if you don&amp;rsquo;t specify one.</source>
          <target state="translated">让您指定未通过测试的用户将被重定向到的URL。它可能是一个登录页面，默认为&lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt; &lt;code&gt;settings.LOGIN_URL&lt;/code&gt; (&lt;/a&gt;如果未指定）。</target>
        </trans-unit>
        <trans-unit id="ca7f7f5bed464663e88c2d9517ab5e284fa91f09" translate="yes" xml:space="preserve">
          <source>Level Constant</source>
          <target state="translated">水平常数</target>
        </trans-unit>
        <trans-unit id="b954a0887add52752e06674c9d7013c57e040fe0" translate="yes" xml:space="preserve">
          <source>Libraries can be loaded by passing the corresponding dictionary key to the &lt;a href=&quot;../ref/templates/builtins#std:templatetag-load&quot;&gt;&lt;code&gt;{% load %}&lt;/code&gt;&lt;/a&gt; tag.</source>
          <target state="translated">可以通过将相应的字典键传递到&lt;a href=&quot;../ref/templates/builtins#std:templatetag-load&quot;&gt; &lt;code&gt;{% load %}&lt;/code&gt; &lt;/a&gt;标签来加载库。</target>
        </trans-unit>
        <trans-unit id="29808eb5cb44255de14dac59aefcc411b6547528" translate="yes" xml:space="preserve">
          <source>Libraries can be loaded by passing the corresponding dictionary key to the &lt;a href=&quot;builtins#std:templatetag-load&quot;&gt;&lt;code&gt;{% load %}&lt;/code&gt;&lt;/a&gt; tag.</source>
          <target state="translated">可以通过将相应的字典键传递到&lt;a href=&quot;builtins#std:templatetag-load&quot;&gt; &lt;code&gt;{% load %}&lt;/code&gt; &lt;/a&gt;标签来加载库。</target>
        </trans-unit>
        <trans-unit id="0b3f991e900143285adef8fbb526e8ab6f02c275" translate="yes" xml:space="preserve">
          <source>Library Requirements</source>
          <target state="translated">图书馆需求</target>
        </trans-unit>
        <trans-unit id="ac58e4217af56e3a1ba8bec5e4dcc9685aa92add" translate="yes" xml:space="preserve">
          <source>Library environment settings</source>
          <target state="translated">图书馆环境设置</target>
        </trans-unit>
        <trans-unit id="cc5b2a062f05dd148b4ef24c76639416ebcc59f3" translate="yes" xml:space="preserve">
          <source>Licensed under the BSD License.</source>
          <target state="translated">采用BSD授权许可。</target>
        </trans-unit>
        <trans-unit id="6e7607aff826aade5ab90b8d8de0fb82a918a57b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.BooleanField&quot;&gt;&lt;code&gt;BooleanField&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;null=True&lt;/code&gt;.</source>
          <target state="translated">像&lt;a href=&quot;#django.db.models.BooleanField&quot;&gt; &lt;code&gt;BooleanField&lt;/code&gt; &lt;/a&gt;与 &lt;code&gt;null=True&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="58e57aeb5cde6d590a20ba69d32dc0a71347311b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.BooleanField&quot;&gt;&lt;code&gt;BooleanField&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;null=True&lt;/code&gt;. Use that instead of this field as it&amp;rsquo;s likely to be deprecated in a future version of Django.</source>
          <target state="translated">像&lt;a href=&quot;#django.db.models.BooleanField&quot;&gt; &lt;code&gt;BooleanField&lt;/code&gt; &lt;/a&gt;与 &lt;code&gt;null=True&lt;/code&gt; 一样。使用该字段代替该字段，因为在将来的Django版本中可能会不推荐使用该字段。</target>
        </trans-unit>
        <trans-unit id="d863c349005f0af90c7f401e7734ee9139cec79f" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.Field.unique_for_date&quot;&gt;&lt;code&gt;unique_for_date&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.Field.unique_for_month&quot;&gt;&lt;code&gt;unique_for_month&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">像&lt;a href=&quot;#django.db.models.Field.unique_for_date&quot;&gt; &lt;code&gt;unique_for_date&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.db.models.Field.unique_for_month&quot;&gt; &lt;code&gt;unique_for_month&lt;/code&gt; 一样&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2cb204156411d2f4610b450ea6f4198604fc63ca" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.Field.unique_for_date&quot;&gt;&lt;code&gt;unique_for_date&lt;/code&gt;&lt;/a&gt;, but requires the field to be unique with respect to the month.</source>
          <target state="translated">类似于&lt;a href=&quot;#django.db.models.Field.unique_for_date&quot;&gt; &lt;code&gt;unique_for_date&lt;/code&gt; &lt;/a&gt;，但要求该字段相对于月份是唯一的。</target>
        </trans-unit>
        <trans-unit id="911a97afa7975200bcc2321bf08148741b444fe2" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;related_query_name&lt;/code&gt; supports app label and class interpolation via &lt;a href=&quot;../../topics/db/models#abstract-related-name&quot;&gt;some special syntax&lt;/a&gt;.</source>
          <target state="translated">像&lt;a href=&quot;#django.db.models.ForeignKey.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt;一样， &lt;code&gt;related_query_name&lt;/code&gt; 通过&lt;a href=&quot;../../topics/db/models#abstract-related-name&quot;&gt;某些特殊语法&lt;/a&gt;支持应用程序标签和类插值。</target>
        </trans-unit>
        <trans-unit id="7e8ba55cee6b9bc75efd8d7b2d9363b4469563af" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.functions.Length&quot;&gt;&lt;code&gt;Length&lt;/code&gt;&lt;/a&gt;, it can be registered as a transform on &lt;code&gt;IntegerField&lt;/code&gt;. The default lookup name is &lt;code&gt;chr&lt;/code&gt;.</source>
          <target state="translated">与&lt;a href=&quot;#django.db.models.functions.Length&quot;&gt; &lt;code&gt;Length&lt;/code&gt; &lt;/a&gt;一样，可以将其注册为 &lt;code&gt;IntegerField&lt;/code&gt; 上的转换。默认查找名称为 &lt;code&gt;chr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a1e12840ec9b2637f09dc7a3ab639b1aa8cc958b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;earliest()&lt;/code&gt; and &lt;code&gt;latest()&lt;/code&gt; raise &lt;a href=&quot;class#django.db.models.Model.DoesNotExist&quot;&gt;&lt;code&gt;DoesNotExist&lt;/code&gt;&lt;/a&gt; if there is no object with the given parameters.</source>
          <target state="translated">像&lt;a href=&quot;#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;一样，如果没有带有给定参数的对象，则&lt;a href=&quot;class#django.db.models.Model.DoesNotExist&quot;&gt; &lt;code&gt;DoesNotExist&lt;/code&gt; &lt;/a&gt; &lt;code&gt;earliest()&lt;/code&gt; 和 &lt;code&gt;latest()&lt;/code&gt; 会引发DosNotExist。</target>
        </trans-unit>
        <trans-unit id="214c8acc0296f6b6279e2c41f5ce14dda1a45453" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;earliest()&lt;/code&gt; and &lt;code&gt;latest()&lt;/code&gt; raise &lt;a href=&quot;instances#django.db.models.Model.DoesNotExist&quot;&gt;&lt;code&gt;DoesNotExist&lt;/code&gt;&lt;/a&gt; if there is no object with the given parameters.</source>
          <target state="translated">与&lt;a href=&quot;#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;一样，如果没有带有给定参数的对象，则&lt;a href=&quot;instances#django.db.models.Model.DoesNotExist&quot;&gt; &lt;code&gt;DoesNotExist&lt;/code&gt; &lt;/a&gt; &lt;code&gt;earliest()&lt;/code&gt; 和 &lt;code&gt;latest()&lt;/code&gt; 会引发DosNotExist。</target>
        </trans-unit>
        <trans-unit id="239355497d3fbe89204c4a53a6ee6315e778dee6" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.query.QuerySet.get_or_create&quot;&gt;&lt;code&gt;get_or_create()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.query.QuerySet.create&quot;&gt;&lt;code&gt;create()&lt;/code&gt;&lt;/a&gt;, if you&amp;rsquo;re using manually specified primary keys and an object needs to be created but the key already exists in the database, an &lt;a href=&quot;../exceptions#django.db.IntegrityError&quot;&gt;&lt;code&gt;IntegrityError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">像&lt;a href=&quot;#django.db.models.query.QuerySet.get_or_create&quot;&gt; &lt;code&gt;get_or_create()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.db.models.query.QuerySet.create&quot;&gt; &lt;code&gt;create()&lt;/code&gt; 一样&lt;/a&gt;，如果您使用手动指定的主键，并且需要创建一个对象但该键已存在于数据库中，则会引发&lt;a href=&quot;../exceptions#django.db.IntegrityError&quot;&gt; &lt;code&gt;IntegrityError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ba1002c38a02557610283e402687e7baac287229" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.signals.pre_delete&quot;&gt;&lt;code&gt;pre_delete&lt;/code&gt;&lt;/a&gt;, but sent at the end of a model&amp;rsquo;s &lt;a href=&quot;models/instances#django.db.models.Model.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method and a queryset&amp;rsquo;s &lt;a href=&quot;models/querysets#django.db.models.query.QuerySet.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">像&lt;a href=&quot;#django.db.models.signals.pre_delete&quot;&gt; &lt;code&gt;pre_delete&lt;/code&gt; &lt;/a&gt;，但在模型的端发送&lt;a href=&quot;models/instances#django.db.models.Model.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt;方法和查询集的&lt;a href=&quot;models/querysets#django.db.models.query.QuerySet.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; 的&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="92ea644b70e840a836965a7720340cad8a857b9f" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.signals.pre_save&quot;&gt;&lt;code&gt;pre_save&lt;/code&gt;&lt;/a&gt;, but sent at the end of the &lt;a href=&quot;models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">类似于&lt;a href=&quot;#django.db.models.signals.pre_save&quot;&gt; &lt;code&gt;pre_save&lt;/code&gt; &lt;/a&gt;，但在&lt;a href=&quot;models/instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;方法的末尾发送。</target>
        </trans-unit>
        <trans-unit id="346c284a84600b7c02cc33179c217f057c75135f" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.forms.RadioSelect&quot;&gt;&lt;code&gt;RadioSelect&lt;/code&gt;&lt;/a&gt;, you can loop over the individual checkboxes for the widget&amp;rsquo;s choices. Unlike &lt;a href=&quot;#django.forms.RadioSelect&quot;&gt;&lt;code&gt;RadioSelect&lt;/code&gt;&lt;/a&gt;, the checkboxes won&amp;rsquo;t include the &lt;code&gt;required&lt;/code&gt; HTML attribute if the field is required because browser validation would require all checkboxes to be checked instead of at least one.</source>
          <target state="translated">与&lt;a href=&quot;#django.forms.RadioSelect&quot;&gt; &lt;code&gt;RadioSelect&lt;/code&gt; &lt;/a&gt;一样，您可以在各个复选框上循环选择小部件的选择。与&lt;a href=&quot;#django.forms.RadioSelect&quot;&gt; &lt;code&gt;RadioSelect&lt;/code&gt; &lt;/a&gt;不同，如果 &lt;code&gt;required&lt;/code&gt; 该字段，则复选框不会包含必需的 HTML属性，因为浏览器验证将要求选中所有复选框，而不是至少选中一个复选框。</target>
        </trans-unit>
        <trans-unit id="3d780d132abddc411dc49eff10a1e51ef8c50836" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.http.HttpRequest.get_full_path&quot;&gt;&lt;code&gt;get_full_path()&lt;/code&gt;&lt;/a&gt;, but uses &lt;a href=&quot;#django.http.HttpRequest.path_info&quot;&gt;&lt;code&gt;path_info&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#django.http.HttpRequest.path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">与&lt;a href=&quot;#django.http.HttpRequest.get_full_path&quot;&gt; &lt;code&gt;get_full_path()&lt;/code&gt; &lt;/a&gt;类似，但使用&lt;a href=&quot;#django.http.HttpRequest.path_info&quot;&gt; &lt;code&gt;path_info&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;#django.http.HttpRequest.path&quot;&gt; &lt;code&gt;path&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b2a9fd84e842e04d0d7921a646d8d793fe3b3df" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;, but uses a 405 status code. The first argument to the constructor is required: a list of permitted methods (e.g. &lt;code&gt;['GET', 'POST']&lt;/code&gt;).</source>
          <target state="translated">类似于&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;，但是使用405状态代码。构造函数的第一个参数是必需的：允许的方法列表（例如 &lt;code&gt;['GET', 'POST']&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="705089e55a46741f3540639bd76ad967ec33de2b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.http.HttpResponse.set_cookie&quot;&gt;&lt;code&gt;set_cookie()&lt;/code&gt;&lt;/a&gt;, but &lt;a href=&quot;../topics/signing&quot;&gt;cryptographic signing&lt;/a&gt; the cookie before setting it. Use in conjunction with &lt;a href=&quot;#django.http.HttpRequest.get_signed_cookie&quot;&gt;&lt;code&gt;HttpRequest.get_signed_cookie()&lt;/code&gt;&lt;/a&gt;. You can use the optional &lt;code&gt;salt&lt;/code&gt; argument for added key strength, but you will need to remember to pass it to the corresponding &lt;a href=&quot;#django.http.HttpRequest.get_signed_cookie&quot;&gt;&lt;code&gt;HttpRequest.get_signed_cookie()&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">类似于&lt;a href=&quot;#django.http.HttpResponse.set_cookie&quot;&gt; &lt;code&gt;set_cookie()&lt;/code&gt; &lt;/a&gt;，但是在设置cookie之前先对cookie进行&lt;a href=&quot;../topics/signing&quot;&gt;加密签名&lt;/a&gt;。与&lt;a href=&quot;#django.http.HttpRequest.get_signed_cookie&quot;&gt; &lt;code&gt;HttpRequest.get_signed_cookie()&lt;/code&gt; &lt;/a&gt;结合使用。您可以使用可选的 &lt;code&gt;salt&lt;/code&gt; 参数来增加按键强度，但是您需要记住将其传递给相应的&lt;a href=&quot;#django.http.HttpRequest.get_signed_cookie&quot;&gt; &lt;code&gt;HttpRequest.get_signed_cookie()&lt;/code&gt; &lt;/a&gt;调用。</target>
        </trans-unit>
        <trans-unit id="df768b23ac3b315c812da78f870686a8bb4dc2c6" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.http.HttpResponseRedirect&quot;&gt;&lt;code&gt;HttpResponseRedirect&lt;/code&gt;&lt;/a&gt;, but it returns a permanent redirect (HTTP status code 301) instead of a &amp;ldquo;found&amp;rdquo; redirect (status code 302).</source>
          <target state="translated">与&lt;a href=&quot;#django.http.HttpResponseRedirect&quot;&gt; &lt;code&gt;HttpResponseRedirect&lt;/code&gt; &lt;/a&gt;相似，但它返回的是永久重定向（HTTP状态代码301），而不是&amp;ldquo;找到的&amp;rdquo;重定向（状态代码302）。</target>
        </trans-unit>
        <trans-unit id="8563b2bd8ef79b66e64abc13b185806b9bcc5261" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.http.QueryDict.items&quot;&gt;&lt;code&gt;items()&lt;/code&gt;&lt;/a&gt;, except it includes all values, as a list, for each member of the dictionary. For example:</source>
          <target state="translated">类似于&lt;a href=&quot;#django.http.QueryDict.items&quot;&gt; &lt;code&gt;items()&lt;/code&gt; &lt;/a&gt;，除了它包括字典的每个成员的所有值（作为列表）。例如：</target>
        </trans-unit>
        <trans-unit id="8ae206c32c2628442b4554143850ec58ec83ef81" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.http.QueryDict.setdefault&quot;&gt;&lt;code&gt;setdefault()&lt;/code&gt;&lt;/a&gt;, except it takes a list of values instead of a single value.</source>
          <target state="translated">类似于&lt;a href=&quot;#django.http.QueryDict.setdefault&quot;&gt; &lt;code&gt;setdefault()&lt;/code&gt; &lt;/a&gt;，除了它接受值列表而不是单个值。</target>
        </trans-unit>
        <trans-unit id="955afb7b9c578249edff08f0675f1e6007885295" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.template.Engine.get_template&quot;&gt;&lt;code&gt;get_template()&lt;/code&gt;&lt;/a&gt;, except it takes a list of names and returns the first template that was found.</source>
          <target state="translated">类似于&lt;a href=&quot;#django.template.Engine.get_template&quot;&gt; &lt;code&gt;get_template()&lt;/code&gt; &lt;/a&gt;，除了它接受名称列表并返回找到的第一个模板。</target>
        </trans-unit>
        <trans-unit id="39373966de87495533da143e122efa7b8991fcf2" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../../migration-operations#django.db.migrations.operations.AddIndex&quot;&gt;&lt;code&gt;AddIndex&lt;/code&gt;&lt;/a&gt;, but creates an index with the &lt;code&gt;CONCURRENTLY&lt;/code&gt; option. This has a few caveats to be aware of when using this option, see &lt;a href=&quot;https://www.postgresql.org/docs/current/sql-createindex.html#SQL-CREATEINDEX-CONCURRENTLY&quot;&gt;the PostgreSQL documentation of building indexes concurrently&lt;/a&gt;.</source>
          <target state="translated">与&lt;a href=&quot;../../migration-operations#django.db.migrations.operations.AddIndex&quot;&gt; &lt;code&gt;AddIndex&lt;/code&gt; &lt;/a&gt;相似，但是使用 &lt;code&gt;CONCURRENTLY&lt;/code&gt; 选项创建索引。使用此选项时需要注意一些注意事项，请参见&lt;a href=&quot;https://www.postgresql.org/docs/current/sql-createindex.html#SQL-CREATEINDEX-CONCURRENTLY&quot;&gt;PostgreSQL同时建立索引的文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="916b0736c9a97408dd3dd4b442e03c3e1742fbdf" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../../migration-operations#django.db.migrations.operations.RemoveIndex&quot;&gt;&lt;code&gt;RemoveIndex&lt;/code&gt;&lt;/a&gt;, but removes the index with the &lt;code&gt;CONCURRENTLY&lt;/code&gt; option. This has a few caveats to be aware of when using this option, see &lt;a href=&quot;https://www.postgresql.org/docs/current/sql-dropindex.html&quot;&gt;the PostgreSQL documentation&lt;/a&gt;.</source>
          <target state="translated">与&lt;a href=&quot;../../migration-operations#django.db.migrations.operations.RemoveIndex&quot;&gt; &lt;code&gt;RemoveIndex&lt;/code&gt; 类似&lt;/a&gt;，但是使用 &lt;code&gt;CONCURRENTLY&lt;/code&gt; 选项删除索引。使用此选项时需要注意一些注意事项，请参见&lt;a href=&quot;https://www.postgresql.org/docs/current/sql-dropindex.html&quot;&gt;PostgreSQL文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="75f974a90c1064ff9e66af2aa32291764d99ea63" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; can specify &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt;. In the above example, if the &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;Entry&lt;/code&gt; had specified &lt;code&gt;related_name='entries'&lt;/code&gt;, then each &lt;code&gt;Author&lt;/code&gt; instance would have an &lt;code&gt;entries&lt;/code&gt; attribute instead of &lt;code&gt;entry_set&lt;/code&gt;.</source>
          <target state="translated">像&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;一样，&lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;可以指定&lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt;。在上面的例子中，如果&lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;在 &lt;code&gt;Entry&lt;/code&gt; 已经指定 &lt;code&gt;related_name='entries'&lt;/code&gt; ，则每个 &lt;code&gt;Author&lt;/code&gt; 实例将具有 &lt;code&gt;entries&lt;/code&gt; 属性而不是 &lt;code&gt;entry_set&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="152b27754fb68e577d55e104e8ae19972dad7d59" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ref/django-admin#django-admin-createcachetable&quot;&gt;&lt;code&gt;createcachetable&lt;/code&gt;&lt;/a&gt; won&amp;rsquo;t touch an existing table. It will only create missing tables.</source>
          <target state="translated">像&lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../ref/django-admin#django-admin-createcachetable&quot;&gt; &lt;code&gt;createcachetable&lt;/code&gt; &lt;/a&gt;不会触及现有的表。它只会创建丢失的表。</target>
        </trans-unit>
        <trans-unit id="786a89e1a019ca41285aa5568a005c590d86720a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;formsets&quot;&gt;regular formsets&lt;/a&gt;, Django provides a couple of enhanced formset classes to make working with Django models more convenient. Let&amp;rsquo;s reuse the &lt;code&gt;Author&lt;/code&gt; model from above:</source>
          <target state="translated">像&lt;a href=&quot;formsets&quot;&gt;常规表单集&lt;/a&gt;一样，Django提供了几个增强的表单集类，以使使用Django模型更加方便。让我们从上方重用 &lt;code&gt;Author&lt;/code&gt; 模型：</target>
        </trans-unit>
        <trans-unit id="51494adf7a641f08554c36bcc81e8661f20bd02d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.items&quot;&gt;&lt;code&gt;dict.items()&lt;/code&gt;&lt;/a&gt;, except this uses the same last-value logic as &lt;a href=&quot;#django.http.QueryDict.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; and returns an iterator object instead of a view object. For example:</source>
          <target state="translated">像&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.items&quot;&gt; &lt;code&gt;dict.items()&lt;/code&gt; &lt;/a&gt;一样，除了它使用与&lt;a href=&quot;#django.http.QueryDict.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;相同的最后值逻辑，并返回一个迭代器对象而不是视图对象。例如：</target>
        </trans-unit>
        <trans-unit id="c55b5527be4c2db918e610d42ba56ec6ab40c74f" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.setdefault&quot;&gt;&lt;code&gt;dict.setdefault()&lt;/code&gt;&lt;/a&gt;, except it uses &lt;a href=&quot;#django.http.QueryDict.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt; internally.</source>
          <target state="translated">像&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.setdefault&quot;&gt; &lt;code&gt;dict.setdefault()&lt;/code&gt; 一样&lt;/a&gt;，除了它内部使用&lt;a href=&quot;#django.http.QueryDict.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a7a26680c4baddc5bdcca1a3e548134ab91aa8e0" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.values&quot;&gt;&lt;code&gt;dict.values()&lt;/code&gt;&lt;/a&gt;, except this uses the same last-value logic as &lt;a href=&quot;#django.http.QueryDict.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; and returns an iterator instead of a view object. For example:</source>
          <target state="translated">像&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.values&quot;&gt; &lt;code&gt;dict.values()&lt;/code&gt; &lt;/a&gt;一样，除了它使用与&lt;a href=&quot;#django.http.QueryDict.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;相同的最后值逻辑，并返回一个迭代器而不是视图对象。例如：</target>
        </trans-unit>
        <trans-unit id="739f7b0ad74db367e30aab10530f59aa3a7cac4f" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;cache.set()&lt;/code&gt;, &lt;code&gt;set_many()&lt;/code&gt; takes an optional &lt;code&gt;timeout&lt;/code&gt; parameter.</source>
          <target state="translated">与 &lt;code&gt;cache.set()&lt;/code&gt; 一样， &lt;code&gt;set_many()&lt;/code&gt; 也可以使用可选的 &lt;code&gt;timeout&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="bb1cdfba618a7cae4220d4a0f47c6724622f7e74" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;decorator_from_middleware&lt;/code&gt;, but returns a function that accepts the arguments to be passed to the middleware_class. For example, the &lt;a href=&quot;../topics/cache#django.views.decorators.cache.cache_page&quot;&gt;&lt;code&gt;cache_page()&lt;/code&gt;&lt;/a&gt; decorator is created from the &lt;code&gt;CacheMiddleware&lt;/code&gt; like this:</source>
          <target state="translated">类似于 &lt;code&gt;decorator_from_middleware&lt;/code&gt; ，但是返回一个函数，该函数接受要传递给middleware_class的参数。例如，&lt;a href=&quot;../topics/cache#django.views.decorators.cache.cache_page&quot;&gt; &lt;code&gt;cache_page()&lt;/code&gt; &lt;/a&gt;装饰器是通过 &lt;code&gt;CacheMiddleware&lt;/code&gt; 创建的，如下所示：</target>
        </trans-unit>
        <trans-unit id="bdd480f7f0b5f6d4b4fbf2c6f4f3e4f6b1854c5d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;push()&lt;/code&gt;, you can use &lt;code&gt;update()&lt;/code&gt; as a context manager to ensure a matching &lt;code&gt;pop()&lt;/code&gt; is called.</source>
          <target state="translated">像 &lt;code&gt;push()&lt;/code&gt; 一样，您可以将 &lt;code&gt;update()&lt;/code&gt; 用作上下文管理器，以确保调用匹配的 &lt;code&gt;pop()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba602b2e6c355200a165d077ac6e9a0594ee71f9" translate="yes" xml:space="preserve">
          <source>Like PostgreSQL itself, Django defaults to the &lt;code&gt;READ COMMITTED&lt;/code&gt;&lt;a href=&quot;https://www.postgresql.org/docs/current/transaction-iso.html&quot;&gt;isolation level&lt;/a&gt;. If you need a higher isolation level such as &lt;code&gt;REPEATABLE READ&lt;/code&gt; or &lt;code&gt;SERIALIZABLE&lt;/code&gt;, set it in the &lt;a href=&quot;settings#std:setting-OPTIONS&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt; part of your database configuration in &lt;a href=&quot;settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">与PostgreSQL本身一样，Django默认为 &lt;code&gt;READ COMMITTED&lt;/code&gt; &lt;a href=&quot;https://www.postgresql.org/docs/current/transaction-iso.html&quot;&gt;隔离级别&lt;/a&gt;。如果您需要更高的隔离级别，例如 &lt;code&gt;REPEATABLE READ&lt;/code&gt; 或 &lt;code&gt;SERIALIZABLE&lt;/code&gt; ，请在&lt;a href=&quot;settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt;的数据库配置的&lt;a href=&quot;settings#std:setting-OPTIONS&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; &lt;/a&gt;部分中进行设置：</target>
        </trans-unit>
        <trans-unit id="d34fb63c0b51ff06df9550a1593f51e8117c6b72" translate="yes" xml:space="preserve">
          <source>Like WSGI, ASGI has you supply an &lt;code&gt;application&lt;/code&gt; callable which the application server uses to communicate with your code. It&amp;rsquo;s commonly provided as an object named &lt;code&gt;application&lt;/code&gt; in a Python module accessible to the server.</source>
          <target state="translated">与WSGI一样，ASGI也为您提供了一个可调用的应用 &lt;code&gt;application&lt;/code&gt; ，应用程序服务器使用它来与您的代码进行通信。它通常在服务器可访问的Python模块中作为名为 &lt;code&gt;application&lt;/code&gt; 的对象提供。</target>
        </trans-unit>
        <trans-unit id="8b7753e1b85c02959312c8643ca4aadd2afe10bc" translate="yes" xml:space="preserve">
          <source>Like a &lt;a href=&quot;#django.db.models.PositiveIntegerField&quot;&gt;&lt;code&gt;PositiveIntegerField&lt;/code&gt;&lt;/a&gt;, but only allows values under a certain (database-dependent) point. Values from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;32767&lt;/code&gt; are safe in all databases supported by Django.</source>
          <target state="translated">类似于&lt;a href=&quot;#django.db.models.PositiveIntegerField&quot;&gt; &lt;code&gt;PositiveIntegerField&lt;/code&gt; &lt;/a&gt;，但仅允许特定点（与数据库有关）下的值。在Django支持的所有数据库中， &lt;code&gt;0&lt;/code&gt; 到 &lt;code&gt;32767&lt;/code&gt; 的值都是安全的。</target>
        </trans-unit>
        <trans-unit id="3e2dae3f888c279defb88d23e93842df027bb502" translate="yes" xml:space="preserve">
          <source>Like a &lt;a href=&quot;#django.db.models.PositiveIntegerField&quot;&gt;&lt;code&gt;PositiveIntegerField&lt;/code&gt;&lt;/a&gt;, but only allows values under a certain (database-dependent) point. Values from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;9223372036854775807&lt;/code&gt; are safe in all databases supported by Django.</source>
          <target state="translated">类似于&lt;a href=&quot;#django.db.models.PositiveIntegerField&quot;&gt; &lt;code&gt;PositiveIntegerField&lt;/code&gt; &lt;/a&gt;，但仅允许特定点（与数据库有关）下的值。在Django支持的所有数据库中，从 &lt;code&gt;0&lt;/code&gt; 到 &lt;code&gt;9223372036854775807&lt;/code&gt; 的值都是安全的。</target>
        </trans-unit>
        <trans-unit id="00b7111396930922c74543cf53e7858a5613c560" translate="yes" xml:space="preserve">
          <source>Like a CharField, you can specify &lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt;&lt;code&gt;max_length&lt;/code&gt;&lt;/a&gt; (read the note about database portability and &lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt;&lt;code&gt;max_length&lt;/code&gt;&lt;/a&gt; in that section, too). If &lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt;&lt;code&gt;max_length&lt;/code&gt;&lt;/a&gt; is not specified, Django will use a default length of 50.</source>
          <target state="translated">像CharField一样，您可以指定&lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt; &lt;code&gt;max_length&lt;/code&gt; &lt;/a&gt;（也请参阅该部分中有关数据库可移植性和&lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt; &lt;code&gt;max_length&lt;/code&gt; &lt;/a&gt;的注释）。如果未指定&lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt; &lt;code&gt;max_length&lt;/code&gt; &lt;/a&gt;，则Django将使用默认长度50。</target>
        </trans-unit>
        <trans-unit id="5f60adb6d58f4db10d99251a6c1029ea1aeda81c" translate="yes" xml:space="preserve">
          <source>Like a view, the arguments in the URL are passed to the &lt;code&gt;get_object()&lt;/code&gt; method along with the request object.</source>
          <target state="translated">就像视图一样，URL中的参数与请求对象一起传递到 &lt;code&gt;get_object()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="3540955efa9e226e2af7cd4207b9c9d694373a03" translate="yes" xml:space="preserve">
          <source>Like all &lt;a href=&quot;#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; subclasses, &lt;a href=&quot;#django.db.models.URLField&quot;&gt;&lt;code&gt;URLField&lt;/code&gt;&lt;/a&gt; takes the optional &lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt;&lt;code&gt;max_length&lt;/code&gt;&lt;/a&gt; argument. If you don&amp;rsquo;t specify &lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt;&lt;code&gt;max_length&lt;/code&gt;&lt;/a&gt;, a default of 200 is used.</source>
          <target state="translated">与所有&lt;a href=&quot;#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;子类一样，&lt;a href=&quot;#django.db.models.URLField&quot;&gt; &lt;code&gt;URLField&lt;/code&gt; &lt;/a&gt;采用可选的&lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt; &lt;code&gt;max_length&lt;/code&gt; &lt;/a&gt;参数。如果不指定&lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt; &lt;code&gt;max_length&lt;/code&gt; &lt;/a&gt;，则使用默认值200。</target>
        </trans-unit>
        <trans-unit id="5fcac6c11b3e3fe6905fac69819c8a77da3c7226" translate="yes" xml:space="preserve">
          <source>Like all custom template tags, you&amp;rsquo;ll need to &lt;a href=&quot;../templates/language#loading-custom-template-libraries&quot;&gt;load its custom tag library&lt;/a&gt; before you can use it. After loading the library, you can retrieve all current flatpages via the &lt;a href=&quot;#std:templatetag-get_flatpages&quot;&gt;&lt;code&gt;get_flatpages&lt;/code&gt;&lt;/a&gt; tag:</source>
          <target state="translated">像所有自定义模板标签一样，您需要先&lt;a href=&quot;../templates/language#loading-custom-template-libraries&quot;&gt;加载其自定义标签库，&lt;/a&gt;然后才能使用它。加载库之后，您可以通过&lt;a href=&quot;#std:templatetag-get_flatpages&quot;&gt; &lt;code&gt;get_flatpages&lt;/code&gt; &lt;/a&gt;标记检索所有当前的平面：</target>
        </trans-unit>
        <trans-unit id="9951a67920449e4d4b835b90125cd72c36ccfbf5" translate="yes" xml:space="preserve">
          <source>Like an &lt;a href=&quot;#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt;, but only allows values under a certain (database-dependent) limit. Values from &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;32767&lt;/code&gt; are safe in all databases supported by Django.</source>
          <target state="translated">与&lt;a href=&quot;#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; &lt;/a&gt;相似，但仅允许值处于特定（与数据库有关）的限制之下。从 &lt;code&gt;1&lt;/code&gt; 到 &lt;code&gt;32767&lt;/code&gt; 的值在Django支持的所有数据库中都是安全的。</target>
        </trans-unit>
        <trans-unit id="0bb140ee24bb5ffd0e10ed6b33a66a505a5c3dd7" translate="yes" xml:space="preserve">
          <source>Like an &lt;a href=&quot;#django.db.models.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt;, but must be either positive or zero (&lt;code&gt;0&lt;/code&gt;). Values from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;2147483647&lt;/code&gt; are safe in all databases supported by Django. The value &lt;code&gt;0&lt;/code&gt; is accepted for backward compatibility reasons.</source>
          <target state="translated">类似于&lt;a href=&quot;#django.db.models.IntegerField&quot;&gt; &lt;code&gt;IntegerField&lt;/code&gt; &lt;/a&gt;，但必须为正数或零（ &lt;code&gt;0&lt;/code&gt; ）。在Django支持的所有数据库中， &lt;code&gt;0&lt;/code&gt; 到 &lt;code&gt;2147483647&lt;/code&gt; 之间的值都是安全的。出于向后兼容的原因，可接受值 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="95ba58840db2ee448b0fa54dabeda7c3b5fb30f9" translate="yes" xml:space="preserve">
          <source>Like an &lt;a href=&quot;#django.db.models.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt;, but only allows values under a certain (database-dependent) point. Values from &lt;code&gt;-32768&lt;/code&gt; to &lt;code&gt;32767&lt;/code&gt; are safe in all databases supported by Django.</source>
          <target state="translated">类似于&lt;a href=&quot;#django.db.models.IntegerField&quot;&gt; &lt;code&gt;IntegerField&lt;/code&gt; &lt;/a&gt;，但仅允许特定点（与数据库有关）下的值。从 &lt;code&gt;-32768&lt;/code&gt; 到 &lt;code&gt;32767&lt;/code&gt; 的值在Django支持的所有数据库中都是安全的。</target>
        </trans-unit>
        <trans-unit id="d83aed216be35e66a6d332c877c5d35102c04c61" translate="yes" xml:space="preserve">
          <source>Like loggers, handlers also have a log level. If the log level of a log record doesn&amp;rsquo;t meet or exceed the level of the handler, the handler will ignore the message.</source>
          <target state="translated">像记录器一样，处理程序也具有日志级别。如果日志记录的日志级别不满足或超过处理程序的级别，则处理程序将忽略该消息。</target>
        </trans-unit>
        <trans-unit id="b7d833a6751175de456bd982f108a2cc4741389d" translate="yes" xml:space="preserve">
          <source>Like other Django contrib applications, you will &lt;em&gt;only&lt;/em&gt; need to add &lt;a href=&quot;../index#module-django.contrib.gis&quot;&gt;&lt;code&gt;django.contrib.gis&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;../../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; in your settings. This is so that the &lt;code&gt;gis&lt;/code&gt; templates can be located &amp;ndash; if not done, then features such as the geographic admin or KML sitemaps will not function properly.</source>
          <target state="translated">像其他Django contrib应用程序一样，您&lt;em&gt;只需&lt;/em&gt;在设置中将&lt;a href=&quot;../index#module-django.contrib.gis&quot;&gt; &lt;code&gt;django.contrib.gis&lt;/code&gt; &lt;/a&gt;添加到&lt;a href=&quot;../../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;。这样就可以定位 &lt;code&gt;gis&lt;/code&gt; 模板-如果未完成，则地理管理员或KML站点地图等功能将无法正常运行。</target>
        </trans-unit>
        <trans-unit id="9c665315f6d801d5b6f09a247bd1d42caef56cf5" translate="yes" xml:space="preserve">
          <source>Like other methods, the &lt;code&gt;timeout&lt;/code&gt; argument is optional and defaults to the &lt;code&gt;TIMEOUT&lt;/code&gt; option of the appropriate backend in the &lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt;&lt;code&gt;CACHES&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">与其他方法一样， &lt;code&gt;timeout&lt;/code&gt; 参数是可选的，默认为&lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt; &lt;code&gt;CACHES&lt;/code&gt; &lt;/a&gt;设置中相应后端的 &lt;code&gt;TIMEOUT&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="3aed27718d957f62e17035d413aabc537e0029fc" translate="yes" xml:space="preserve">
          <source>Like pre_init, but this one is sent when the &lt;code&gt;__init__()&lt;/code&gt; method finishes.</source>
          <target state="translated">像pre_init一样，但是此方法是在 &lt;code&gt;__init__()&lt;/code&gt; 方法完成时发送的。</target>
        </trans-unit>
        <trans-unit id="1f1c6004ebf3711f7e8bdedde30c5087916707a3" translate="yes" xml:space="preserve">
          <source>Like regular Python files, you can read the file line-by-line by iterating over the uploaded file:</source>
          <target state="translated">像普通的Python文件一样,你可以通过迭代上传的文件来逐行读取文件。</target>
        </trans-unit>
        <trans-unit id="eef7d6244014f8627193d8008d82d067746059ec" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;formfield_for_foreignkey&lt;/code&gt; and &lt;code&gt;formfield_for_manytomany&lt;/code&gt; methods, the &lt;code&gt;formfield_for_choice_field&lt;/code&gt; method can be overridden to change the default formfield for a field that has declared choices. For example, if the choices available to a superuser should be different than those available to regular staff, you could proceed as follows:</source>
          <target state="translated">像 &lt;code&gt;formfield_for_foreignkey&lt;/code&gt; 和 &lt;code&gt;formfield_for_manytomany&lt;/code&gt; 方法一样，可以重写 &lt;code&gt;formfield_for_choice_field&lt;/code&gt; 方法以更改已声明选择的字段的默认formfield。例如，如果超级用户可用的选择与普通员工可用的选择不同，则可以按以下步骤进行：</target>
        </trans-unit>
        <trans-unit id="4b0e54aa6002f6648959e5fde59d83b613a588b1" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;formfield_for_foreignkey&lt;/code&gt; method, the &lt;code&gt;formfield_for_manytomany&lt;/code&gt; method can be overridden to change the default formfield for a many to many field. For example, if an owner can own multiple cars and cars can belong to multiple owners &amp;ndash; a many to many relationship &amp;ndash; you could filter the &lt;code&gt;Car&lt;/code&gt; foreign key field to only display the cars owned by the &lt;code&gt;User&lt;/code&gt;:</source>
          <target state="translated">像 &lt;code&gt;formfield_for_foreignkey&lt;/code&gt; 方法一样，可以重写 &lt;code&gt;formfield_for_manytomany&lt;/code&gt; 方法以将默认formfield更改为多对多字段。例如，如果所有者可以拥有多辆汽车，并且汽车可以属于多个所有者（多对多关系），则可以过滤 &lt;code&gt;Car&lt;/code&gt; 外键字段以仅显示 &lt;code&gt;User&lt;/code&gt; 拥有的汽车：</target>
        </trans-unit>
        <trans-unit id="31f10fbef42ead92801c9234e033fbaaf39c7b22" translate="yes" xml:space="preserve">
          <source>Like the model field&amp;rsquo;s &lt;a href=&quot;../models/fields#django.db.models.Field.help_text&quot;&gt;&lt;code&gt;help_text&lt;/code&gt;&lt;/a&gt;, this value isn&amp;rsquo;t HTML-escaped in automatically-generated forms.</source>
          <target state="translated">就像模型字段的&lt;a href=&quot;../models/fields#django.db.models.Field.help_text&quot;&gt; &lt;code&gt;help_text&lt;/code&gt; 一样&lt;/a&gt;，该值也不会以自动生成的形式转义为HTML。</target>
        </trans-unit>
        <trans-unit id="2ee07a6c8901e20df89791f61993d7c04c839518" translate="yes" xml:space="preserve">
          <source>Like we said above, the default applications are included for the common case, but not everybody needs them. If you don&amp;rsquo;t need any or all of them, feel free to comment-out or delete the appropriate line(s) from &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; before running &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; command will only run migrations for apps in &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">就像我们上面说过的，普通情况下包括默认应用程序，但并不是每个人都需要它们。如果你不需要任何或所有这些，随意注释掉或删除相应的行（或多个）&lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;运行之前&lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;。该&lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;命令将只适用于应用程序运行迁移&lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="66be0fca21e376129e6c827671f94aa60b75b0e6" translate="yes" xml:space="preserve">
          <source>Likewise &lt;code&gt;django.template.backends.django.Template&lt;/code&gt; is a thin wrapper adapting &lt;a href=&quot;../ref/templates/api#django.template.Template&quot;&gt;&lt;code&gt;django.template.Template&lt;/code&gt;&lt;/a&gt; to the common template API.</source>
          <target state="translated">同样， &lt;code&gt;django.template.backends.django.Template&lt;/code&gt; 是使&lt;a href=&quot;../ref/templates/api#django.template.Template&quot;&gt; &lt;code&gt;django.template.Template&lt;/code&gt; &lt;/a&gt;适应通用模板API 的薄包装器。</target>
        </trans-unit>
        <trans-unit id="bd395412545993aaaed91e9a0591200ef0116d19" translate="yes" xml:space="preserve">
          <source>Likewise, &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt;&lt;code&gt;GenericForeignKey&lt;/code&gt;&lt;/a&gt;s does not appear in &lt;a href=&quot;../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">同样，&lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt; &lt;code&gt;GenericForeignKey&lt;/code&gt; &lt;/a&gt; s不出现&lt;a href=&quot;../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt;秒。</target>
        </trans-unit>
        <trans-unit id="65651098030cec17f9add3564fabd28b9a8d889b" translate="yes" xml:space="preserve">
          <source>Likewise, Django provides the &lt;a href=&quot;#django.test.modify_settings&quot;&gt;&lt;code&gt;modify_settings()&lt;/code&gt;&lt;/a&gt; decorator:</source>
          <target state="translated">同样，Django提供了&lt;a href=&quot;#django.test.modify_settings&quot;&gt; &lt;code&gt;modify_settings()&lt;/code&gt; &lt;/a&gt;装饰器：</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="a0475d548a6e1cbd1322fc0c9137a9116d5fd248" translate="yes" xml:space="preserve">
          <source>Limitations of multiple databases</source>
          <target state="translated">多数据库的局限性</target>
        </trans-unit>
        <trans-unit id="81293e5c309d9dfcca7d5d8a02e465126af1192c" translate="yes" xml:space="preserve">
          <source>Limitations of the provided locale formats</source>
          <target state="translated">所提供的区域格式的局限性</target>
        </trans-unit>
        <trans-unit id="8189faab6b029cc653b33f4c4750aed9ad4c8f5a" translate="yes" xml:space="preserve">
          <source>Limitations with string literals</source>
          <target state="translated">字符串的限制</target>
        </trans-unit>
        <trans-unit id="7bcda513dc4ecc2e4b423a51154674ffc93ff9ff" translate="yes" xml:space="preserve">
          <source>Limiting &lt;code&gt;QuerySet&lt;/code&gt;s</source>
          <target state="translated">限制 &lt;code&gt;QuerySet&lt;/code&gt; 小号</target>
        </trans-unit>
        <trans-unit id="2ba12ef865c53db8307ed40e2579ac7177efa133" translate="yes" xml:space="preserve">
          <source>Limiting a subquery to a single column</source>
          <target state="translated">将子查询限制为单列。</target>
        </trans-unit>
        <trans-unit id="971ffbdea2890da7948e9724ae7ef3cf3d664072" translate="yes" xml:space="preserve">
          <source>Limiting access to logged-in users</source>
          <target state="translated">限制对已登录用户的访问</target>
        </trans-unit>
        <trans-unit id="54b02334497290608d1bafc2deca7fc84fc2dfc2" translate="yes" xml:space="preserve">
          <source>Limiting access to logged-in users that pass a test</source>
          <target state="translated">限制对通过测试的登录用户的访问。</target>
        </trans-unit>
        <trans-unit id="bc8f42c384b84979e56038227caf8b777339004f" translate="yes" xml:space="preserve">
          <source>Limiting flatpages by base URL</source>
          <target state="translated">通过基础URL限制扁平页</target>
        </trans-unit>
        <trans-unit id="ace73d3c8d253f1855ef095c01717043cd29aa5f" translate="yes" xml:space="preserve">
          <source>Limiting the maximum number of forms</source>
          <target state="translated">限制表格的最大数量</target>
        </trans-unit>
        <trans-unit id="756e3264bedaf6f3365711aa7e045d72b4f68c7a" translate="yes" xml:space="preserve">
          <source>Limiting the number of editable objects</source>
          <target state="translated">限制可编辑对象的数量</target>
        </trans-unit>
        <trans-unit id="da88c2fe4acaa5b5968c3b02bdc16c00c7b795f2" translate="yes" xml:space="preserve">
          <source>Limiting the subquery to a single row</source>
          <target state="translated">将子查询限制为单行。</target>
        </trans-unit>
        <trans-unit id="041db2b4ee7faeb26164b54ec59eaa80dec142d2" translate="yes" xml:space="preserve">
          <source>Limits valid inputs to the specified protocol. Accepted values are &lt;code&gt;'both'&lt;/code&gt; (default), &lt;code&gt;'IPv4'&lt;/code&gt; or &lt;code&gt;'IPv6'&lt;/code&gt;. Matching is case insensitive.</source>
          <target state="translated">将有效输入限制为指定的协议。可接受的值为 &lt;code&gt;'both'&lt;/code&gt; （默认）， &lt;code&gt;'IPv4'&lt;/code&gt; 或 &lt;code&gt;'IPv6'&lt;/code&gt; 。匹配不区分大小写。</target>
        </trans-unit>
        <trans-unit id="484b44a0117656cdc1e07d33a88d93a8d2f24ea6" translate="yes" xml:space="preserve">
          <source>Limits valid inputs to the specified protocol. Accepted values are &lt;code&gt;both&lt;/code&gt; (default), &lt;code&gt;IPv4&lt;/code&gt; or &lt;code&gt;IPv6&lt;/code&gt;. Matching is case insensitive.</source>
          <target state="translated">将有效输入限制为指定的协议。可接受的值是 &lt;code&gt;both&lt;/code&gt; （默认）， &lt;code&gt;IPv4&lt;/code&gt; 的还是 &lt;code&gt;IPv6&lt;/code&gt; 的。匹配不区分大小写。</target>
        </trans-unit>
        <trans-unit id="4950b61e87b9227686774b179639eaf32577092a" translate="yes" xml:space="preserve">
          <source>Lines are split using &lt;a href=&quot;https://www.python.org/dev/peps/pep-0278&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;universal newlines&lt;/strong&gt;&lt;/a&gt;. The following are recognized as ending a line: the Unix end-of-line convention &lt;code&gt;'\n'&lt;/code&gt;, the Windows convention &lt;code&gt;'\r\n'&lt;/code&gt;, and the old Macintosh convention &lt;code&gt;'\r'&lt;/code&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;https://www.python.org/dev/peps/pep-0278&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;通用换行符对&lt;/strong&gt;&lt;/a&gt;行进行拆分。以下内容被认为是行尾：Unix行尾约定 &lt;code&gt;'\n'&lt;/code&gt; ，Windows约定 &lt;code&gt;'\r\n'&lt;/code&gt; 和旧的Macintosh约定 &lt;code&gt;'\r'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="999cfb6c0645f8beaa03ab5c3c2acaad55655c97" translate="yes" xml:space="preserve">
          <source>Lines are split using &lt;a href=&quot;https://www.python.org/dev/peps/pep-0278&quot;&gt;universal newlines&lt;/a&gt;. The following are recognized as ending a line: the Unix end-of-line convention &lt;code&gt;'\n'&lt;/code&gt;, the Windows convention &lt;code&gt;'\r\n'&lt;/code&gt;, and the old Macintosh convention &lt;code&gt;'\r'&lt;/code&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;https://www.python.org/dev/peps/pep-0278&quot;&gt;通用换行符对&lt;/a&gt;行进行拆分。以下内容被视为行尾：Unix行尾约定 &lt;code&gt;'\n'&lt;/code&gt; ，Windows约定 &lt;code&gt;'\r\n'&lt;/code&gt; 和旧的Macintosh约定 &lt;code&gt;'\r'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0517071aa376e797705058bbad4b658954b9930" translate="yes" xml:space="preserve">
          <source>Link</source>
          <target state="translated">Link</target>
        </trans-unit>
        <trans-unit id="157c974c5568be5651b5bfe24c42d2205c9b6e69" translate="yes" xml:space="preserve">
          <source>Link (Benoit)</source>
          <target state="translated">Link (Benoit)</target>
        </trans-unit>
        <trans-unit id="64590bd60ee31dd14805fcf870b334ba2446be7e" translate="yes" xml:space="preserve">
          <source>Link (Sears)</source>
          <target state="translated">链接(西尔斯)</target>
        </trans-unit>
        <trans-unit id="7cb5f491ca042b503781828280e205f3f1b3e730" translate="yes" xml:space="preserve">
          <source>Link to the URL of the OpenLayers JavaScript. Defaults to &lt;code&gt;'https://cdnjs.cloudflare.com/ajax/libs/openlayers/2.13.1/OpenLayers.js'&lt;/code&gt;.</source>
          <target state="translated">链接到OpenLayers JavaScript的URL。默认为 &lt;code&gt;'https://cdnjs.cloudflare.com/ajax/libs/openlayers/2.13.1/OpenLayers.js'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc86c03eac3b683df07db61068268361cd20abb1" translate="yes" xml:space="preserve">
          <source>Links can have trailing punctuation (periods, commas, close-parens) and leading punctuation (opening parens), and &lt;code&gt;urlize&lt;/code&gt; will still do the right thing.</source>
          <target state="translated">链接可以包含结尾标点符号（句点，逗号，右括号）和前导标点符号（开头括号），并且 &lt;code&gt;urlize&lt;/code&gt; 仍然可以做正确的事情。</target>
        </trans-unit>
        <trans-unit id="e401e8956761640d7577a37f57e96c4dd3ae2c45" translate="yes" xml:space="preserve">
          <source>Links generated by &lt;code&gt;urlize&lt;/code&gt; have a &lt;code&gt;rel=&quot;nofollow&quot;&lt;/code&gt; attribute added to them.</source>
          <target state="translated">&lt;code&gt;urlize&lt;/code&gt; 生成的链接具有 &lt;code&gt;rel=&quot;nofollow&quot;&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="2d28ace15581d25a0bc2e3781306393967a803c6" translate="yes" xml:space="preserve">
          <source>List Views</source>
          <target state="translated">列表视图</target>
        </trans-unit>
        <trans-unit id="81c12cbc34f26f6d72020d3250e5638a719f3b2a" translate="yes" xml:space="preserve">
          <source>List filter&amp;rsquo;s typically appear only if the filter has more than one choice. A filter&amp;rsquo;s &lt;code&gt;has_output()&lt;/code&gt; method controls whether or not it appears.</source>
          <target state="translated">仅当过滤器具有多个选择时，列表过滤器才会出现。过滤器的 &lt;code&gt;has_output()&lt;/code&gt; 方法控制它是否出现。</target>
        </trans-unit>
        <trans-unit id="1ff8b40e6d20a6ad55bbd98426ac2eef042a84ff" translate="yes" xml:space="preserve">
          <source>List of all bands of the source, as &lt;a href=&quot;#django.contrib.gis.gdal.GDALBand&quot;&gt;&lt;code&gt;GDALBand&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">源的所有频段列表，以&lt;a href=&quot;#django.contrib.gis.gdal.GDALBand&quot;&gt; &lt;code&gt;GDALBand&lt;/code&gt; &lt;/a&gt;实例表示。</target>
        </trans-unit>
        <trans-unit id="1d8ec93e18fcf7be286a5711b8624e9d5492b5aa" translate="yes" xml:space="preserve">
          <source>List of compiled regular expression objects describing URLs that should be ignored when reporting HTTP 404 errors via email (see &lt;a href=&quot;../howto/error-reporting&quot;&gt;Error reporting&lt;/a&gt;). Regular expressions are matched against &lt;a href=&quot;request-response#django.http.HttpRequest.get_full_path&quot;&gt;&lt;code&gt;request's full paths&lt;/code&gt;&lt;/a&gt; (including query string, if any). Use this if your site does not provide a commonly requested file such as &lt;code&gt;favicon.ico&lt;/code&gt; or &lt;code&gt;robots.txt&lt;/code&gt;.</source>
          <target state="translated">描述通过电子邮件报告HTTP 404错误时应忽略的URL的已编译正则表达式对象的列表（请参阅&lt;a href=&quot;../howto/error-reporting&quot;&gt;错误报告&lt;/a&gt;）。正则表达式与&lt;a href=&quot;request-response#django.http.HttpRequest.get_full_path&quot;&gt; &lt;code&gt;request's full paths&lt;/code&gt; &lt;/a&gt;（包括查询字符串，如果有）匹配。如果您的站点未提供通常要求的文件（例如 &lt;code&gt;favicon.ico&lt;/code&gt; 或 &lt;code&gt;robots.txt&lt;/code&gt; ),请使用此选项。</target>
        </trans-unit>
        <trans-unit id="71648c8c3058a09ebc7c06c879fc235d24abcec1" translate="yes" xml:space="preserve">
          <source>List of compiled regular expression objects representing User-Agent strings that are not allowed to visit any page, systemwide. Use this for bots/crawlers. This is only used if &lt;code&gt;CommonMiddleware&lt;/code&gt; is installed (see &lt;a href=&quot;../topics/http/middleware&quot;&gt;Middleware&lt;/a&gt;).</source>
          <target state="translated">代表用户代理字符串的已编译正则表达式对象列表，不允许用户在系统范围内访问任何页面。用于机器人/爬虫。仅在安装了 &lt;code&gt;CommonMiddleware&lt;/code&gt; 的情况下才使用它（请参阅&lt;a href=&quot;../topics/http/middleware&quot;&gt;Middleware&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4144455cc383697baac646a1657f81571b944123" translate="yes" xml:space="preserve">
          <source>List of database features that the current connection should have so that the model is considered during the migration phase. For example, if you set this list to &lt;code&gt;['gis_enabled']&lt;/code&gt;, the model will only be synchronized on GIS-enabled databases. It&amp;rsquo;s also useful to skip some models when testing with several database backends. Avoid relations between models that may or may not be created as the ORM doesn&amp;rsquo;t handle this.</source>
          <target state="translated">当前连接应具有的数据库功能列表，以便在迁移阶段考虑模型。例如，如果将此列表设置为 &lt;code&gt;['gis_enabled']&lt;/code&gt; ，则该模型将仅在启用GIS的数据库上同步。在使用多个数据库后端进行测试时，跳过某些模型也很有用。避免由于ORM无法处理而可能会或可能不会创建的模型之间的关系。</target>
        </trans-unit>
        <trans-unit id="5a9854912df2ed5719acad92971c25d37b901483" translate="yes" xml:space="preserve">
          <source>List of directories searched for fixture files, in addition to the &lt;code&gt;fixtures&lt;/code&gt; directory of each application, in search order.</source>
          <target state="translated">除了每个应用程序的 &lt;code&gt;fixtures&lt;/code&gt; 目录外，还按搜索顺序搜索了Fixture文件的目录列表。</target>
        </trans-unit>
        <trans-unit id="ebb3d7aca57a0d0b26fc7bb3082c4d20c9f33257" translate="yes" xml:space="preserve">
          <source>List-index lookup. Example: &lt;code&gt;foo[bar]&lt;/code&gt;</source>
          <target state="translated">列表索引查找。示例： &lt;code&gt;foo[bar]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="005f5ea75301f8060217eadfaf3d96dea8ba5cbd" translate="yes" xml:space="preserve">
          <source>Listening to signals</source>
          <target state="translated">倾听信号</target>
        </trans-unit>
        <trans-unit id="385b28bd6da9bf2d5510b146c5f31381bab45cc6" translate="yes" xml:space="preserve">
          <source>Lists all available tags.</source>
          <target state="translated">列出所有可用的标签。</target>
        </trans-unit>
        <trans-unit id="cc017a8f262082983efe363b211f3361bd8ec506" translate="yes" xml:space="preserve">
          <source>Lists all of the apps Django knows about, the migrations available for each app, and whether or not each migration is applied (marked by an &lt;code&gt;[X]&lt;/code&gt; next to the migration name). For a &lt;code&gt;--verbosity&lt;/code&gt; of 2 and above, the applied datetimes are also shown.</source>
          <target state="translated">列出Django知道的所有应用程序，可用于每个应用程序的迁移以及是否应用每个迁移（在迁移名称旁边以 &lt;code&gt;[X]&lt;/code&gt; 标记）。如果 &lt;code&gt;--verbosity&lt;/code&gt; 为2或更高，则还会显示应用的日期时间。</target>
        </trans-unit>
        <trans-unit id="39d23e0d858c2bba4fcae0826399057a4e302793" translate="yes" xml:space="preserve">
          <source>Lists of objects follow roughly the same pattern: we need a (possibly paginated) list of objects, typically a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;, and then we need to make a &lt;a href=&quot;../../ref/template-response#django.template.response.TemplateResponse&quot;&gt;&lt;code&gt;TemplateResponse&lt;/code&gt;&lt;/a&gt; with a suitable template using that list of objects.</source>
          <target state="translated">对象列表遵循大致相同的模式：我们需要一个（可能是分页的）对象列表，通常是&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;，然后我们需要使用该对象列表使用合适的模板制作&lt;a href=&quot;../../ref/template-response#django.template.response.TemplateResponse&quot;&gt; &lt;code&gt;TemplateResponse&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bba7499a41a5ad998706215911b138ebb07a56d1" translate="yes" xml:space="preserve">
          <source>Lists the contents of the specified path, returning a 2-tuple of lists; the first item being directories, the second item being files. For storage systems that aren&amp;rsquo;t able to provide such a listing, this will raise a &lt;code&gt;NotImplementedError&lt;/code&gt; instead.</source>
          <target state="translated">列出指定路径的内容，返回一个2元组的列表；第一项是目录，第二项是文件。对于无法提供此类列表的存储系统，这将引发 &lt;code&gt;NotImplementedError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e2fb109cdc5372d5cde6e1d6d294486607ffa713" translate="yes" xml:space="preserve">
          <source>Little Endian (e.g., compatible with x86 systems)</source>
          <target state="translated">小恩典</target>
        </trans-unit>
        <trans-unit id="1266aa8b6dce351b2dce9a52e20e361f295ffe02" translate="yes" xml:space="preserve">
          <source>Load settings from &lt;code&gt;global_settings.py&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;global_settings.py&lt;/code&gt; 加载设置。</target>
        </trans-unit>
        <trans-unit id="7d4fc7ccaa44c3bece06261e229b60b0ab1fe883" translate="yes" xml:space="preserve">
          <source>Load settings from the specified settings file, overriding the global settings as necessary.</source>
          <target state="translated">从指定的设置文件加载设置,必要时覆盖全局设置。</target>
        </trans-unit>
        <trans-unit id="4c676aefee9fb2f37fc993a5bfdd721edc6feb06" translate="yes" xml:space="preserve">
          <source>Load the &amp;ldquo;Add question&amp;rdquo; page to see how that looks:</source>
          <target state="translated">加载&amp;ldquo;添加问题&amp;rdquo;页面以查看外观：</target>
        </trans-unit>
        <trans-unit id="c638de2d7ce3a5989cc00da481232df477e68622" translate="yes" xml:space="preserve">
          <source>Load the page by pointing your browser at &amp;ldquo;/polls/&amp;rdquo;, and you should see a bulleted-list containing the &amp;ldquo;What&amp;rsquo;s up&amp;rdquo; question from &lt;a href=&quot;tutorial02&quot;&gt;Tutorial 2&lt;/a&gt;. The link points to the question&amp;rsquo;s detail page.</source>
          <target state="translated">通过将浏览器指向&amp;ldquo; / polls /&amp;rdquo;来加载页面，您应该看到一个项目符号列表，其中包含&lt;a href=&quot;tutorial02&quot;&gt;教程2&lt;/a&gt;中的&amp;ldquo;最新消息&amp;rdquo;问题。该链接指向问题的详细信息页面。</target>
        </trans-unit>
        <trans-unit id="bfd5d347be46f19d5af74555db1435a5932c014a" translate="yes" xml:space="preserve">
          <source>Loader methods</source>
          <target state="translated">装载方法</target>
        </trans-unit>
        <trans-unit id="a1aae8262dfa8b38b15f329fe9d720fa2af5ce60" translate="yes" xml:space="preserve">
          <source>Loader types</source>
          <target state="translated">装载机类型</target>
        </trans-unit>
        <trans-unit id="4f514b04ed6b877534da140af8e12cab5016f713" translate="yes" xml:space="preserve">
          <source>Loaders</source>
          <target state="translated">Loaders</target>
        </trans-unit>
        <trans-unit id="5396847021992af28690eea2559e62fb26911d30" translate="yes" xml:space="preserve">
          <source>Loading a template</source>
          <target state="translated">加载模板</target>
        </trans-unit>
        <trans-unit id="923064241bee3da1b374c1344aae36c3e741a39f" translate="yes" xml:space="preserve">
          <source>Loading fixtures from &lt;code&gt;stdin&lt;/code&gt;</source>
          <target state="translated">从 &lt;code&gt;stdin&lt;/code&gt; 加载夹具</target>
        </trans-unit>
        <trans-unit id="04d6db619863f3d513c0c93969b27a39dcbe2838" translate="yes" xml:space="preserve">
          <source>Loading from &lt;code&gt;stdin&lt;/code&gt; is useful with standard input and output redirections. For example:</source>
          <target state="translated">从 &lt;code&gt;stdin&lt;/code&gt; 加载对于标准输入和输出重定向非常有用。例如：</target>
        </trans-unit>
        <trans-unit id="8fb9f7eb8cbdc0a3f102e2624e3f8c578252dcc2" translate="yes" xml:space="preserve">
          <source>Loading templates</source>
          <target state="translated">加载模板</target>
        </trans-unit>
        <trans-unit id="aa3b47e04fbcdf7a0c349a1f65b42792f0bfc04b" translate="yes" xml:space="preserve">
          <source>Loading the settings.</source>
          <target state="translated">加载设置。</target>
        </trans-unit>
        <trans-unit id="b208b1eada8a869e959c32e9a4f048b2261a0ef9" translate="yes" xml:space="preserve">
          <source>Loads a custom template tag set.</source>
          <target state="translated">加载一个自定义模板标签集。</target>
        </trans-unit>
        <trans-unit id="61d26d6567c1e53323e6feb2451badc41e00b872" translate="yes" xml:space="preserve">
          <source>Loads a template and renders it with the current context. This is a way of &amp;ldquo;including&amp;rdquo; other templates within a template.</source>
          <target state="translated">加载模板并使用当前上下文呈现它。这是在模板中&amp;ldquo;包含&amp;rdquo;其他模板的一种方式。</target>
        </trans-unit>
        <trans-unit id="49622805f34b2cbfb5fecab2184d2c2565f31b9e" translate="yes" xml:space="preserve">
          <source>Loads a template with the given name, compiles it and returns a &lt;a href=&quot;#django.template.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">加载具有给定名称的模板，对其进行编译并返回&lt;a href=&quot;#django.template.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="1d87684e495f6d2a5443bdeacec9acb9e892cab6" translate="yes" xml:space="preserve">
          <source>Loads templates from Django apps on the filesystem. For each app in &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;, the loader looks for a &lt;code&gt;templates&lt;/code&gt; subdirectory. If the directory exists, Django looks for templates in there.</source>
          <target state="translated">从文件系统上的Django应用加载模板。对于&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 中的&lt;/a&gt;每个应用程序，加载程序将查找 &lt;code&gt;templates&lt;/code&gt; 子目录。如果目录存在，则Django在其中查找模板。</target>
        </trans-unit>
        <trans-unit id="9c77b46a82221a37ce360a54ab22eae4cb8567d7" translate="yes" xml:space="preserve">
          <source>Loads templates from a Python dictionary. This is useful for testing.</source>
          <target state="translated">从Python字典中加载模板。这对测试很有用。</target>
        </trans-unit>
        <trans-unit id="5ddb5a6aa66f708e939717a50c081f9b1687855e" translate="yes" xml:space="preserve">
          <source>Loads templates from a given source, such as the filesystem or a database.</source>
          <target state="translated">从给定的源,如文件系统或数据库中加载模板。</target>
        </trans-unit>
        <trans-unit id="830f927cc5a7a2d6808cd9d4fd807494ffe8af90" translate="yes" xml:space="preserve">
          <source>Loads templates from the filesystem, according to &lt;a href=&quot;../settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">根据&lt;a href=&quot;../settings#std:setting-TEMPLATES-DIRS&quot;&gt; &lt;code&gt;DIRS&lt;/code&gt; &lt;/a&gt;从文件系统加载模板。</target>
        </trans-unit>
        <trans-unit id="e63c9f12a633eb8c9f0b4ac3283d021d46f12d08" translate="yes" xml:space="preserve">
          <source>Local-memory caching</source>
          <target state="translated">本地内存缓存</target>
        </trans-unit>
        <trans-unit id="46361934de5303c4bb40033efcb4f3ac07fa41a4" translate="yes" xml:space="preserve">
          <source>Locale aware input in forms</source>
          <target state="translated">表单中的本地化输入</target>
        </trans-unit>
        <trans-unit id="bba391c6c02e5d2f28c6ce4333f7c807d2ee62f0" translate="yes" xml:space="preserve">
          <source>Locale middleware</source>
          <target state="translated">本地化中间件</target>
        </trans-unit>
        <trans-unit id="a17bcca1e911b8aa363c850569b580baafa07f8e" translate="yes" xml:space="preserve">
          <source>Localflavor</source>
          <target state="translated">Localflavor</target>
        </trans-unit>
        <trans-unit id="8760fb7a725faf05acb20618178c43773af945a1" translate="yes" xml:space="preserve">
          <source>Localization: how to create language files</source>
          <target state="translated">本地化:如何创建语言文件</target>
        </trans-unit>
        <trans-unit id="68d96c3fa930173a29f42dabd119f2ec989ef3cb" translate="yes" xml:space="preserve">
          <source>Localized names of languages</source>
          <target state="translated">语文的当地化名称</target>
        </trans-unit>
        <trans-unit id="5bab46afe953180e60cc6486cb0020ee91d03396" translate="yes" xml:space="preserve">
          <source>Lock parents models in &lt;code&gt;select_for_update(of=(...))&lt;/code&gt;</source>
          <target state="translated">将父母模型锁定在 &lt;code&gt;select_for_update(of=(...))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="420dfa7139dd6d5b31fdef28a0943aa84fccd6c5" translate="yes" xml:space="preserve">
          <source>Log messages related to the handling of requests received by the server invoked by the &lt;a href=&quot;../ref/django-admin#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; command. HTTP 5XX responses are logged as &lt;code&gt;ERROR&lt;/code&gt; messages, 4XX responses are logged as &lt;code&gt;WARNING&lt;/code&gt; messages, and everything else is logged as &lt;code&gt;INFO&lt;/code&gt;.</source>
          <target state="translated">与处理由&lt;a href=&quot;../ref/django-admin#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; &lt;/a&gt;命令调用的服务器接收的请求有关的日志消息。HTTP 5XX响应记录为 &lt;code&gt;ERROR&lt;/code&gt; 消息，4XX响应记录为 &lt;code&gt;WARNING&lt;/code&gt; 消息，其他所有记录为 &lt;code&gt;INFO&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0c50346183ec708677d8278192a3de3bbcc2cc20" translate="yes" xml:space="preserve">
          <source>Log messages related to the handling of requests. 5XX responses are raised as &lt;code&gt;ERROR&lt;/code&gt; messages; 4XX responses are raised as &lt;code&gt;WARNING&lt;/code&gt; messages. Requests that are logged to the &lt;code&gt;django.security&lt;/code&gt; logger aren&amp;rsquo;t logged to &lt;code&gt;django.request&lt;/code&gt;.</source>
          <target state="translated">与请求处理有关的日志消息。5XX响应作为 &lt;code&gt;ERROR&lt;/code&gt; 消息引发；4XX响应作为 &lt;code&gt;WARNING&lt;/code&gt; 消息出现。记录到 &lt;code&gt;django.security&lt;/code&gt; 记录器的请求不会记录到 &lt;code&gt;django.request&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb8b376a6ea0f93bedb4b80549e00d705797b62b" translate="yes" xml:space="preserve">
          <source>Log messages related to the rendering of templates.</source>
          <target state="translated">记录与模板渲染相关的消息。</target>
        </trans-unit>
        <trans-unit id="012294fbc07fc652fdbbd3b8b48183b6e7925dda" translate="yes" xml:space="preserve">
          <source>Loggers</source>
          <target state="translated">Loggers</target>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="b6197073d1ec39358a4e3d845faf24f41158555a" translate="yes" xml:space="preserve">
          <source>Logging is configured as part of the general Django &lt;code&gt;setup()&lt;/code&gt; function. Therefore, you can be certain that loggers are always ready for use in your project code.</source>
          <target state="translated">日志配置为常规Django &lt;code&gt;setup()&lt;/code&gt; 函数的一部分。因此，可以确定记录器始终可以在项目代码中使用。</target>
        </trans-unit>
        <trans-unit id="3ea927f6b85c95ca60f956a27e51826d1f034e33" translate="yes" xml:space="preserve">
          <source>Logging of each request and response of the server is sent to the &lt;a href=&quot;../topics/logging#django-server-logger&quot;&gt;django.server&lt;/a&gt; logger.</source>
          <target state="translated">服务器的每个请求和响应的日志记录都发送到&lt;a href=&quot;../topics/logging#django-server-logger&quot;&gt;django.server&lt;/a&gt;记录器。</target>
        </trans-unit>
        <trans-unit id="4e5a2893bdcc7d239c1db72e4c4ffbe4bea73174" translate="yes" xml:space="preserve">
          <source>Login</source>
          <target state="translated">Login</target>
        </trans-unit>
        <trans-unit id="97896e639ea44756e547cd457bf906c408b31625" translate="yes" xml:space="preserve">
          <source>Login and logout signals</source>
          <target state="translated">登录和注销信号</target>
        </trans-unit>
        <trans-unit id="e43d612e11f1568f2373e719d4c4b08dcecdc7cc" translate="yes" xml:space="preserve">
          <source>Logout</source>
          <target state="translated">Logout</target>
        </trans-unit>
        <trans-unit id="0f9949aa8cddbb021036b013be13fcd58f02e95c" translate="yes" xml:space="preserve">
          <source>Logs a user out, then redirects to the login page.</source>
          <target state="translated">将用户注销,然后重定向到登录页面。</target>
        </trans-unit>
        <trans-unit id="66a401f8c8dd428897c6bb4440e0e65596927d52" translate="yes" xml:space="preserve">
          <source>Logs a user out.</source>
          <target state="translated">将用户注销。</target>
        </trans-unit>
        <trans-unit id="87c06f7c9c0dd6c7d57a0b80377942859f9c413d" translate="yes" xml:space="preserve">
          <source>Logs the SQL queries that are executed during schema changes to the database by the &lt;a href=&quot;migrations&quot;&gt;migrations framework&lt;/a&gt;. Note that it won&amp;rsquo;t log the queries executed by &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt;. Messages to this logger have &lt;code&gt;params&lt;/code&gt; and &lt;code&gt;sql&lt;/code&gt; in their extra context (but unlike &lt;code&gt;django.db.backends&lt;/code&gt;, not duration). The values have the same meaning as explained in &lt;a href=&quot;#django-db-logger&quot;&gt;django.db.backends&lt;/a&gt;.</source>
          <target state="translated">将架构更改期间执行的SQL查询记录到&lt;a href=&quot;migrations&quot;&gt;迁移框架中&lt;/a&gt;。请注意，它不会记录&lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt;执行的查询。发送到此记录器的消息在其额外上下文中具有 &lt;code&gt;params&lt;/code&gt; 和 &lt;code&gt;sql&lt;/code&gt; （但与 &lt;code&gt;django.db.backends&lt;/code&gt; 不同，而不是持续时间）。这些值与&lt;a href=&quot;#django-db-logger&quot;&gt;django.db.backends中&lt;/a&gt;说明的含义相同。</target>
        </trans-unit>
        <trans-unit id="cf24eeb1b831855c84e20ffbab85ed0e2e98d15d" translate="yes" xml:space="preserve">
          <source>Long messages are a special case. There, the first string directly after the &lt;code&gt;msgstr&lt;/code&gt; (or &lt;code&gt;msgid&lt;/code&gt;) is an empty string. Then the content itself will be written over the next few lines as one string per line. Those strings are directly concatenated. Don&amp;rsquo;t forget trailing spaces within the strings; otherwise, they&amp;rsquo;ll be tacked together without whitespace!</source>
          <target state="translated">长消息是一种特殊情况。在那里， &lt;code&gt;msgstr&lt;/code&gt; 在msgstr（或 &lt;code&gt;msgid&lt;/code&gt; ）之后的第一个字符串是一个空字符串。然后，内容本身将在接下来的几行中写成每行一个字符串。这些字符串直接连接在一起。不要忘记字符串中的尾部空格；否则，它们将被加在一起而没有空格！</target>
        </trans-unit>
        <trans-unit id="03896792266b6c37fcddf34ea02218f44b413da5" translate="yes" xml:space="preserve">
          <source>Look at the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/deprecation/&quot;&gt;deprecation timeline&lt;/a&gt; for the relevant versions.</source>
          <target state="translated">查看相关版本的&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/deprecation/&quot;&gt;弃用时间表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5af33b9589e0e69caaf074435cb5759b4f613642" translate="yes" xml:space="preserve">
          <source>Look at the &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/deprecation/&quot;&gt;deprecation timeline&lt;/a&gt; for the relevant versions.</source>
          <target state="translated">查看相关版本的&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/deprecation/&quot;&gt;弃用时间表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="18573a3026539551f5ffe80fbc3fab6545f17122" translate="yes" xml:space="preserve">
          <source>Look at the existing Django fields (in &lt;code&gt;django/db/models/fields/__init__.py&lt;/code&gt;) for inspiration. Try to find a field that&amp;rsquo;s similar to what you want and extend it a little bit, instead of creating an entirely new field from scratch.</source>
          <target state="translated">查看现有的Django字段（在 &lt;code&gt;django/db/models/fields/__init__.py&lt;/code&gt; 中）以获取启发。尝试查找与所需字段相似的字段并将其扩展一点，而不是从头开始创建一个全新的字段。</target>
        </trans-unit>
        <trans-unit id="83e1377578dd2108d8423c7213ffe8bd30534cc0" translate="yes" xml:space="preserve">
          <source>Looking for specific information? Try the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/genindex/&quot;&gt;Index&lt;/a&gt;, &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/py-modindex/&quot;&gt;Module Index&lt;/a&gt; or the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/contents/&quot;&gt;detailed table of contents&lt;/a&gt;.</source>
          <target state="translated">寻找特定信息？尝试&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/genindex/&quot;&gt;索引&lt;/a&gt;，&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/py-modindex/&quot;&gt;模块索引&lt;/a&gt;或&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/contents/&quot;&gt;详细目录&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f996a5b4afddf8e02528b8b854ebf578315565a" translate="yes" xml:space="preserve">
          <source>Looking for specific information? Try the &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/genindex/&quot;&gt;Index&lt;/a&gt;, &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/py-modindex/&quot;&gt;Module Index&lt;/a&gt; or the &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/contents/&quot;&gt;detailed table of contents&lt;/a&gt;.</source>
          <target state="translated">寻找特定信息？试试&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/genindex/&quot;&gt;索引&lt;/a&gt;，&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/py-modindex/&quot;&gt;模块索引&lt;/a&gt;或&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/contents/&quot;&gt;详细目录&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a570127f6a268f5a693b78694a0e6f069ee259be" translate="yes" xml:space="preserve">
          <source>Looking for tests in any file below the current directory whose name matches the pattern &lt;code&gt;test*.py&lt;/code&gt;.</source>
          <target state="translated">在名称与模式 &lt;code&gt;test*.py&lt;/code&gt; 相匹配的当前目录下的任何文件中寻找测试。</target>
        </trans-unit>
        <trans-unit id="7015ab4fc4ea24735dbe884238cc1b54bf915eca" translate="yes" xml:space="preserve">
          <source>Lookup</source>
          <target state="translated">Lookup</target>
        </trans-unit>
        <trans-unit id="4f97f5f4ebefacc529850a4ccae9c3992e1498e3" translate="yes" xml:space="preserve">
          <source>Lookup API reference</source>
          <target state="translated">查询API参考</target>
        </trans-unit>
        <trans-unit id="0830ad654338d012cacdd174149c78b55003fa0c" translate="yes" xml:space="preserve">
          <source>Lookup Type</source>
          <target state="translated">查询类型</target>
        </trans-unit>
        <trans-unit id="b1e95b80675fe4de22a35ddb29898c8e5ee137e9" translate="yes" xml:space="preserve">
          <source>Lookup a &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; by ID. Since this method uses the same shared cache as &lt;a href=&quot;#django.contrib.contenttypes.models.ContentTypeManager.get_for_model&quot;&gt;&lt;code&gt;get_for_model()&lt;/code&gt;&lt;/a&gt;, it&amp;rsquo;s preferred to use this method over the usual &lt;code&gt;ContentType.objects.get(pk=id)&lt;/code&gt;</source>
          <target state="translated">通过ID 查找&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;。由于此方法使用与&lt;a href=&quot;#django.contrib.contenttypes.models.ContentTypeManager.get_for_model&quot;&gt; &lt;code&gt;get_for_model()&lt;/code&gt; &lt;/a&gt;相同的共享缓存，因此，与通常的 &lt;code&gt;ContentType.objects.get(pk=id)&lt;/code&gt; 相比，首选使用此方法。</target>
        </trans-unit>
        <trans-unit id="4af7afda67ab90eca349b13f266deab4ec35aa10" translate="yes" xml:space="preserve">
          <source>Lookup functions can mix the use of &lt;code&gt;Q&lt;/code&gt; objects and keyword arguments. All arguments provided to a lookup function (be they keyword arguments or &lt;code&gt;Q&lt;/code&gt; objects) are &amp;ldquo;AND&amp;rdquo;ed together. However, if a &lt;code&gt;Q&lt;/code&gt; object is provided, it must precede the definition of any keyword arguments. For example:</source>
          <target state="translated">查找功能可以混合使用 &lt;code&gt;Q&lt;/code&gt; 对象和关键字参数。提供给查找功能的所有参数（无论是关键字参数还是 &lt;code&gt;Q&lt;/code&gt; 对象）都被&amp;ldquo;与&amp;rdquo;在一起。但是，如果提供了 &lt;code&gt;Q&lt;/code&gt; 对象，则它必须在任何关键字参数的定义之前。例如：</target>
        </trans-unit>
        <trans-unit id="6dbdad9ff3b7e8efdd58c11f1971a5b0ed14de47" translate="yes" xml:space="preserve">
          <source>Lookup parameters, which should be in the format accepted by &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;filter()&lt;/code&gt;.</source>
          <target state="translated">查找参数，其格式应为 &lt;code&gt;get()&lt;/code&gt; 和 &lt;code&gt;filter()&lt;/code&gt; 接受的格式。</target>
        </trans-unit>
        <trans-unit id="ca99d305ed0945b8d9e457a1542829a19f19f1ac" translate="yes" xml:space="preserve">
          <source>Lookup registration can also be done using a decorator pattern:</source>
          <target state="translated">查找注册也可以使用装饰器模式进行。</target>
        </trans-unit>
        <trans-unit id="1c22627487f1bdeac0afcbce546d80cd4f51d447" translate="yes" xml:space="preserve">
          <source>Lookups created with custom &lt;code&gt;to_attr&lt;/code&gt; can still be traversed as usual by other lookups:</source>
          <target state="translated">使用自定义 &lt;code&gt;to_attr&lt;/code&gt; 创建的查询仍然可以像往常一样被其他查询遍历：</target>
        </trans-unit>
        <trans-unit id="4795e11216648d84c91f69381932d7a8fe148e20" translate="yes" xml:space="preserve">
          <source>Lookups implementation is different in &lt;a href=&quot;../../ref/models/fields#django.db.models.JSONField&quot;&gt;&lt;code&gt;JSONField&lt;/code&gt;&lt;/a&gt;, mainly due to the existence of key transformations. To demonstrate, we will use the following example model:</source>
          <target state="translated">&lt;a href=&quot;../../ref/models/fields#django.db.models.JSONField&quot;&gt; &lt;code&gt;JSONField&lt;/code&gt; 中的&lt;/a&gt;Lookups实现有所不同，主要是由于存在密钥转换。为了演示，我们将使用以下示例模型：</target>
        </trans-unit>
        <trans-unit id="bbbc446cd89bbc9f91a61c8d1b7883a4754c0d07" translate="yes" xml:space="preserve">
          <source>Lookups on PostgreSQL</source>
          <target state="translated">在PostgreSQL上进行查询</target>
        </trans-unit>
        <trans-unit id="3a6deca122475cb7b177894a1abc642b3c450ad4" translate="yes" xml:space="preserve">
          <source>Lookups that span relationships</source>
          <target state="translated">跨越关系的查询</target>
        </trans-unit>
        <trans-unit id="17694782d38160dbec7f61575168852ee61ca592" translate="yes" xml:space="preserve">
          <source>Lookups with rasters</source>
          <target state="translated">用光栅查找</target>
        </trans-unit>
        <trans-unit id="2d971984dd21acc2315cc2384dc6c3cc1e2750fe" translate="yes" xml:space="preserve">
          <source>Loop over each item in an array. For example, to display a list of athletes provided in &lt;code&gt;athlete_list&lt;/code&gt;:</source>
          <target state="translated">遍历数组中的每个项目。例如，要显示 &lt;code&gt;athlete_list&lt;/code&gt; 提供的运动员列表：</target>
        </trans-unit>
        <trans-unit id="4985599a33aedbf517ed7d854dc30df88bcd0eb8" translate="yes" xml:space="preserve">
          <source>Loopback addresses and reserved IP spaces are considered valid. Literal IPv6 addresses (&lt;a href=&quot;https://tools.ietf.org/html/rfc3986.html#section-3.2.2&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 3986#section-3.2.2&lt;/strong&gt;&lt;/a&gt;) and Unicode domains are both supported.</source>
          <target state="translated">回送地址和保留的IP空间被视为有效。文字IPv6地址（&lt;a href=&quot;https://tools.ietf.org/html/rfc3986.html#section-3.2.2&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 3986＃section-3.2.2&lt;/strong&gt;&lt;/a&gt;）和Unicode域均受支持。</target>
        </trans-unit>
        <trans-unit id="45543809fe6d79257df2fcb2ced01e5639318229" translate="yes" xml:space="preserve">
          <source>Loopback addresses and reserved IP spaces are considered valid. Literal IPv6 addresses (&lt;a href=&quot;https://tools.ietf.org/html/rfc3986.html#section-3.2.2&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 3986#section-3.2.2&lt;/strong&gt;&lt;/a&gt;) and unicode domains are both supported.</source>
          <target state="translated">回送地址和保留的IP空间被视为有效。均支持文字IPv6地址（&lt;a href=&quot;https://tools.ietf.org/html/rfc3986.html#section-3.2.2&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 3986＃section-3.2.2&lt;/strong&gt;&lt;/a&gt;）和unicode域。</target>
        </trans-unit>
        <trans-unit id="d2e6ddef874e97d78c2e355736d665c5eb63bdd9" translate="yes" xml:space="preserve">
          <source>Looping over &lt;code&gt;UploadedFile.chunks()&lt;/code&gt; instead of using &lt;code&gt;read()&lt;/code&gt; ensures that large files don&amp;rsquo;t overwhelm your system&amp;rsquo;s memory.</source>
          <target state="translated">循环使用 &lt;code&gt;UploadedFile.chunks()&lt;/code&gt; 而不是使用 &lt;code&gt;read()&lt;/code&gt; 可以确保大文件不会淹没您系统的内存。</target>
        </trans-unit>
        <trans-unit id="b87879ecc3324ca1b5b68b1f628f788675da7274" translate="yes" xml:space="preserve">
          <source>Looping over hidden and visible fields</source>
          <target state="translated">在隐藏和可见字段上循环</target>
        </trans-unit>
        <trans-unit id="85f78f8afb120cb4e8208c1f6510826e775fef6c" translate="yes" xml:space="preserve">
          <source>Looping over the form&amp;rsquo;s fields</source>
          <target state="translated">遍历表单的字段</target>
        </trans-unit>
        <trans-unit id="92dfee36a072d60f39ed8b943312cd16aba50fa1" translate="yes" xml:space="preserve">
          <source>Loops over each item in an array, making the item available in a context variable. For example, to display a list of athletes provided in &lt;code&gt;athlete_list&lt;/code&gt;:</source>
          <target state="translated">循环访问数组中的每个项目，使该项目在上下文变量中可用。例如，要显示 &lt;code&gt;athlete_list&lt;/code&gt; 提供的运动员列表：</target>
        </trans-unit>
        <trans-unit id="52be3d0c545bc3018bcc23a2c3ea2eb6d6395ec3" translate="yes" xml:space="preserve">
          <source>Loosely-coupled to GeoDjango. For example, &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; objects may be used outside of a Django project/application. In other words, no need to have &lt;a href=&quot;../../../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt; set or use a database, etc.</source>
          <target state="translated">松散耦合到GeoDjango。例如，&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt;对象可以在Django项目/应用程序外部使用。换句话说，无需设置&lt;a href=&quot;../../../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt;或使用数据库等。</target>
        </trans-unit>
        <trans-unit id="2f5ba0d2ee5986d496178175529d1a820e6c2011" translate="yes" xml:space="preserve">
          <source>Loosely-coupled to GeoDjango. For example, &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; objects may be used outside of a Django project/application. In other words, no need to have &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; set or use a database, etc.</source>
          <target state="translated">松散耦合到GeoDjango。例如，&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt;对象可以在Django项目/应用程序外部使用。换句话说，无需设置 &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; 或使用数据库等。</target>
        </trans-unit>
        <trans-unit id="18995b9d14f4d8a9703ab1e599060a15073564b7" translate="yes" xml:space="preserve">
          <source>Loosely-coupled, high-level Python interfaces for GIS geometry and raster operations and data manipulation in different formats.</source>
          <target state="translated">松散耦合的高级Python接口,用于GIS几何和栅格操作以及不同格式的数据处理。</target>
        </trans-unit>
        <trans-unit id="d14c62a5e247e1d3a0c3e590257851d326591f90" translate="yes" xml:space="preserve">
          <source>Low bandwidth connection?</source>
          <target state="translated">低带宽连接?</target>
        </trans-unit>
        <trans-unit id="b38b638f8a783319921b9ded343024596436ca9a" translate="yes" xml:space="preserve">
          <source>Low-level APIs</source>
          <target state="translated">低级API</target>
        </trans-unit>
        <trans-unit id="bb82d98842b53ea8e4fc0ba928b83950cba983a9" translate="yes" xml:space="preserve">
          <source>MEDIA_ROOT, DEFAULT_FILE_STORAGE</source>
          <target state="translated">MEDIA_ROOT,DEFAULT_FILE_STORAGE。</target>
        </trans-unit>
        <trans-unit id="07a4d61f0acbbb95318a8a2d2e1f3a3b76934273" translate="yes" xml:space="preserve">
          <source>MacPorts</source>
          <target state="translated">MacPorts</target>
        </trans-unit>
        <trans-unit id="a0d3cf49aa9c486cc3245a67064ef6a90e88d567" translate="yes" xml:space="preserve">
          <source>Mail is sent using the SMTP host and port specified in the &lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST&quot;&gt;&lt;code&gt;EMAIL_HOST&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/settings#std:setting-EMAIL_PORT&quot;&gt;&lt;code&gt;EMAIL_PORT&lt;/code&gt;&lt;/a&gt; settings. The &lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST_USER&quot;&gt;&lt;code&gt;EMAIL_HOST_USER&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST_PASSWORD&quot;&gt;&lt;code&gt;EMAIL_HOST_PASSWORD&lt;/code&gt;&lt;/a&gt; settings, if set, are used to authenticate to the SMTP server, and the &lt;a href=&quot;../ref/settings#std:setting-EMAIL_USE_TLS&quot;&gt;&lt;code&gt;EMAIL_USE_TLS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/settings#std:setting-EMAIL_USE_SSL&quot;&gt;&lt;code&gt;EMAIL_USE_SSL&lt;/code&gt;&lt;/a&gt; settings control whether a secure connection is used.</source>
          <target state="translated">使用&lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST&quot;&gt; &lt;code&gt;EMAIL_HOST&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/settings#std:setting-EMAIL_PORT&quot;&gt; &lt;code&gt;EMAIL_PORT&lt;/code&gt; &lt;/a&gt;设置中指定的SMTP主机和端口发送邮件。该&lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST_USER&quot;&gt; &lt;code&gt;EMAIL_HOST_USER&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST_PASSWORD&quot;&gt; &lt;code&gt;EMAIL_HOST_PASSWORD&lt;/code&gt; &lt;/a&gt;设置，如果设置，用来验证到SMTP服务器，&lt;a href=&quot;../ref/settings#std:setting-EMAIL_USE_TLS&quot;&gt; &lt;code&gt;EMAIL_USE_TLS&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/settings#std:setting-EMAIL_USE_SSL&quot;&gt; &lt;code&gt;EMAIL_USE_SSL&lt;/code&gt; &lt;/a&gt;设置控制是否使用安全连接。</target>
        </trans-unit>
        <trans-unit id="2045c2b3b3410d03382b7449be956846f013a676" translate="yes" xml:space="preserve">
          <source>Mails the email addresses specified in &lt;a href=&quot;settings#std:setting-ADMINS&quot;&gt;&lt;code&gt;ADMINS&lt;/code&gt;&lt;/a&gt; using &lt;a href=&quot;../topics/email#django.core.mail.mail_admins&quot;&gt;&lt;code&gt;mail_admins()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;../topics/email#django.core.mail.mail_admins&quot;&gt; &lt;code&gt;mail_admins()&lt;/code&gt; &lt;/a&gt;邮寄&lt;a href=&quot;settings#std:setting-ADMINS&quot;&gt; &lt;code&gt;ADMINS&lt;/code&gt; 中&lt;/a&gt;指定的电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="09447360b87529c4e200002f47e5957ff5712079" translate="yes" xml:space="preserve">
          <source>Mails the email addresses specified in &lt;a href=&quot;settings#std:setting-MANAGERS&quot;&gt;&lt;code&gt;MANAGERS&lt;/code&gt;&lt;/a&gt; using &lt;a href=&quot;../topics/email#django.core.mail.mail_managers&quot;&gt;&lt;code&gt;mail_managers()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;../topics/email#django.core.mail.mail_managers&quot;&gt; &lt;code&gt;mail_managers()&lt;/code&gt; &lt;/a&gt;邮寄在&lt;a href=&quot;settings#std:setting-MANAGERS&quot;&gt; &lt;code&gt;MANAGERS&lt;/code&gt; 中&lt;/a&gt;指定的电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="7b99cc729613bb252546c2ed4313e808dbf5dd8a" translate="yes" xml:space="preserve">
          <source>Make sure ALL of the following are true before setting this (assuming the values from the example above):</source>
          <target state="translated">在设置之前,请确保以下所有内容为真(假设上面例子中的数值)。</target>
        </trans-unit>
        <trans-unit id="aa35ed7a8f70d5ae8a72a8185bfd890e5ab93011" translate="yes" xml:space="preserve">
          <source>Make sure it&amp;rsquo;s one of the first middleware installed.</source>
          <target state="translated">确保它是安装的第一个中间件之一。</target>
        </trans-unit>
        <trans-unit id="45c040a2736ded67e62f5c53ffa1a4ec220de726" translate="yes" xml:space="preserve">
          <source>Make sure that &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; is included in your &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">确保 &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; 包含在&lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e9525d86fc1dd6d513066076e98a6c857591c199" translate="yes" xml:space="preserve">
          <source>Make sure that &lt;code&gt;mod_auth_basic&lt;/code&gt; and &lt;code&gt;mod_authz_user&lt;/code&gt; are loaded.</source>
          <target state="translated">确保已加载 &lt;code&gt;mod_auth_basic&lt;/code&gt; 和 &lt;code&gt;mod_authz_user&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="69445a55691d7850da50947c34014b2fc4c3ae5d" translate="yes" xml:space="preserve">
          <source>Make sure that mod_wsgi is installed and activated and that you have followed the steps to setup &lt;a href=&quot;modwsgi&quot;&gt;Apache with mod_wsgi&lt;/a&gt;.</source>
          <target state="translated">确保已安装并激活了mod_wsgi，并且已按照步骤&lt;a href=&quot;modwsgi&quot;&gt;使用mod_wsgi&lt;/a&gt;设置Apache。</target>
        </trans-unit>
        <trans-unit id="da2abf2d686008baca2b498aeae79af0c709468a" translate="yes" xml:space="preserve">
          <source>Make sure that the Python interpreter can load Django&amp;rsquo;s code. The most convenient way to do this is to use &lt;a href=&quot;https://virtualenv.pypa.io/&quot;&gt;virtualenv&lt;/a&gt;, &lt;a href=&quot;https://virtualenvwrapper.readthedocs.io/en/latest/&quot;&gt;virtualenvwrapper&lt;/a&gt;, and &lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt;. The &lt;a href=&quot;../intro/contributing&quot;&gt;contributing tutorial&lt;/a&gt; walks through how to create a virtualenv.</source>
          <target state="translated">确保Python解释器可以加载Django的代码。最方便的方法是使用&lt;a href=&quot;https://virtualenv.pypa.io/&quot;&gt;virtualenv&lt;/a&gt;，&lt;a href=&quot;https://virtualenvwrapper.readthedocs.io/en/latest/&quot;&gt;virtualenvwrapper&lt;/a&gt;和&lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt;。该&lt;a href=&quot;../intro/contributing&quot;&gt;贡献教程&lt;/a&gt;走过了如何创建的virtualenv。</target>
        </trans-unit>
        <trans-unit id="2552998128fb2470acabb019c65ec215909bcedc" translate="yes" xml:space="preserve">
          <source>Make sure that the Python interpreter can load Django&amp;rsquo;s code. The most convenient way to do this is to use a virtual environment and &lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt;. The &lt;a href=&quot;../intro/contributing&quot;&gt;contributing tutorial&lt;/a&gt; walks through how to create a virtual environment.</source>
          <target state="translated">确保Python解释器可以加载Django的代码。最方便的方法是使用虚拟环境和&lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt;。该&lt;a href=&quot;../intro/contributing&quot;&gt;贡献教程&lt;/a&gt;走过了如何创建一个虚拟的环境。</target>
        </trans-unit>
        <trans-unit id="c90fe8d9c88a24bdf2ff7e779cd0a6887772c684" translate="yes" xml:space="preserve">
          <source>Make sure that the key used in production isn&amp;rsquo;t used anywhere else and avoid committing it to source control. This reduces the number of vectors from which an attacker may acquire the key.</source>
          <target state="translated">确保生产中使用的密钥不在其他任何地方使用，并避免将其提交给源代码管理。这减少了攻击者可以从中获取密钥的向量的数量。</target>
        </trans-unit>
        <trans-unit id="c1065df190cc28bea4577001c230e0ec7e0f5f5c" translate="yes" xml:space="preserve">
          <source>Make sure that you don&amp;rsquo;t include the above URL within &lt;a href=&quot;#django.conf.urls.i18n.i18n_patterns&quot;&gt;&lt;code&gt;i18n_patterns()&lt;/code&gt;&lt;/a&gt; - it needs to be language-independent itself to work correctly.</source>
          <target state="translated">确保您不在&lt;a href=&quot;#django.conf.urls.i18n.i18n_patterns&quot;&gt; &lt;code&gt;i18n_patterns()&lt;/code&gt; 中&lt;/a&gt;包含上述URL-它本身必须与语言无关，才能正常工作。</target>
        </trans-unit>
        <trans-unit id="4d82bc59e1c3d86100d01ee3c8c4d4ac4373a55c" translate="yes" xml:space="preserve">
          <source>Make sure that you have &lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt; installed and that you can run its commands from a shell. (Enter &lt;code&gt;git help&lt;/code&gt; at a shell prompt to test this.)</source>
          <target state="translated">确保已安装&lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt;，并且可以从外壳运行其命令。（在shell提示符下输入 &lt;code&gt;git help&lt;/code&gt; 进行测试。）</target>
        </trans-unit>
        <trans-unit id="4febd23799488138305eb5481ce515953522d418" translate="yes" xml:space="preserve">
          <source>Make sure that your Python code is outside of the Web server&amp;rsquo;s root. This will ensure that your Python code is not accidentally served as plain text (or accidentally executed).</source>
          <target state="translated">确保您的Python代码在Web服务器根目录之外。这将确保您的Python代码不会意外用作纯文本（或意外执行）。</target>
        </trans-unit>
        <trans-unit id="b4d25e9adadc4f10721db1c559ebdebfced81239" translate="yes" xml:space="preserve">
          <source>Make sure the directory pointed-to by this setting either exists and is readable and writable, or that it can be created by the system user under which your Web server runs. Continuing the above example, if your server runs as the user &lt;code&gt;apache&lt;/code&gt;, make sure the directory &lt;code&gt;/var/tmp/django_cache&lt;/code&gt; exists and is readable and writable by the user &lt;code&gt;apache&lt;/code&gt;, or that it can be created by the user &lt;code&gt;apache&lt;/code&gt;.</source>
          <target state="translated">确保此设置指向的目录存在并且可读可写，或者可以由运行Web服务器的系统用户创建。继续上面的示例，如果服务器以用户 &lt;code&gt;apache&lt;/code&gt; 的身份运行，请确保目录 &lt;code&gt;/var/tmp/django_cache&lt;/code&gt; 存在并且可由用户 &lt;code&gt;apache&lt;/code&gt; 读取和写入，或者可以由用户 &lt;code&gt;apache&lt;/code&gt; 创建。</target>
        </trans-unit>
        <trans-unit id="5852dd567ba21a0751232f400af285522c51e4b8" translate="yes" xml:space="preserve">
          <source>Make sure the directory pointed-to by this setting exists and is readable and writable by the system user under which your Web server runs. Continuing the above example, if your server runs as the user &lt;code&gt;apache&lt;/code&gt;, make sure the directory &lt;code&gt;/var/tmp/django_cache&lt;/code&gt; exists and is readable and writable by the user &lt;code&gt;apache&lt;/code&gt;.</source>
          <target state="translated">确保此设置指向的目录存在，并且Web服务器在其下运行的系统用户可以读写。继续上面的示例，如果您的服务器以用户 &lt;code&gt;apache&lt;/code&gt; 的身份运行，请确保目录 &lt;code&gt;/var/tmp/django_cache&lt;/code&gt; 存在并且可由用户 &lt;code&gt;apache&lt;/code&gt; 读取和写入。</target>
        </trans-unit>
        <trans-unit id="6792ed36d70833105e98f7e1536ea01606bbfe30" translate="yes" xml:space="preserve">
          <source>Make sure you list all extensions you&amp;rsquo;re using! Otherwise Babel won&amp;rsquo;t recognize the tags defined by these extensions and will ignore Jinja2 templates containing them entirely.</source>
          <target state="translated">确保列出所有正在使用的扩展名！否则，Babel将无法识别这些扩展定义的标签，并将完全忽略包含它们的Jinja2模板。</target>
        </trans-unit>
        <trans-unit id="8619a1d17175246cf38854aa8293b829b7d1f23b" translate="yes" xml:space="preserve">
          <source>Make sure you&amp;rsquo;ve activated translation for your project (the fastest way is to check if &lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; includes &lt;a href=&quot;../../ref/middleware#django.middleware.locale.LocaleMiddleware&quot;&gt;&lt;code&gt;django.middleware.locale.LocaleMiddleware&lt;/code&gt;&lt;/a&gt;). If you haven&amp;rsquo;t yet, see &lt;a href=&quot;#how-django-discovers-language-preference&quot;&gt;How Django discovers language preference&lt;/a&gt;.</source>
          <target state="translated">确保已为项目激活翻译（最快的方法是检查&lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; 是否&lt;/a&gt;包含&lt;a href=&quot;../../ref/middleware#django.middleware.locale.LocaleMiddleware&quot;&gt; &lt;code&gt;django.middleware.locale.LocaleMiddleware&lt;/code&gt; &lt;/a&gt;）。如果尚未开始，请参阅&lt;a href=&quot;#how-django-discovers-language-preference&quot;&gt;Django如何发现语言偏好&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c3a7262191d27cdf5c32da423a57d2c31d3d081" translate="yes" xml:space="preserve">
          <source>Make sure you&amp;rsquo;ve installed the &lt;a href=&quot;sites#module-django.contrib.sites&quot;&gt;&lt;code&gt;sites framework&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">确保已经安装了&lt;a href=&quot;sites#module-django.contrib.sites&quot;&gt; &lt;code&gt;sites framework&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a9ee1e2048edd25b686838bf844c45d24bc1ae95" translate="yes" xml:space="preserve">
          <source>Make sure your &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting contains a &lt;code&gt;DjangoTemplates&lt;/code&gt; backend whose &lt;code&gt;APP_DIRS&lt;/code&gt; options is set to &lt;code&gt;True&lt;/code&gt;. It&amp;rsquo;s in there by default, so you&amp;rsquo;ll only need to change this if you&amp;rsquo;ve changed that setting.</source>
          <target state="translated">确保您的&lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;设置包含 &lt;code&gt;DjangoTemplates&lt;/code&gt; 后端，其 &lt;code&gt;APP_DIRS&lt;/code&gt; 选项设置为 &lt;code&gt;True&lt;/code&gt; 。默认情况下它在其中，因此，只有在更改了该设置后，您才需要更改它。</target>
        </trans-unit>
        <trans-unit id="ab1c905ed852730023a7a6e5ec3853b4aa30f7c5" translate="yes" xml:space="preserve">
          <source>Make sure your database is configured to be able to store arbitrary string data. Normally, this means giving it an encoding of UTF-8 or UTF-16. If you use a more restrictive encoding &amp;ndash; for example, latin1 (iso8859-1) &amp;ndash; you won&amp;rsquo;t be able to store certain characters in the database, and information will be lost.</source>
          <target state="translated">确保您的数据库配置为能够存储任意字符串数据。通常，这意味着给它提供UTF-8或UTF-16的编码。如果使用限制性更强的编码（例如latin1（iso8859-1）），则将无法在数据库中存储某些字符，并且信息将丢失。</target>
        </trans-unit>
        <trans-unit id="e6d84fe7fe5ec77cf066388c9481b92a6747b344" translate="yes" xml:space="preserve">
          <source>Make the poll app modifiable in the admin</source>
          <target state="translated">使投票程序可以在管理员中进行修改</target>
        </trans-unit>
        <trans-unit id="3288017f14c5479aa28d05689ff3c090be1108e6" translate="yes" xml:space="preserve">
          <source>Makes &lt;code&gt;makemigrations&lt;/code&gt; exit with a non-zero status when model changes without migrations are detected.</source>
          <target state="translated">当检测到模型更改而没有迁移时，使 &lt;code&gt;makemigrations&lt;/code&gt; 以非零状态退出。</target>
        </trans-unit>
        <trans-unit id="e45f4eb2e4ecd287729a2a82141e7631ec4c8e61" translate="yes" xml:space="preserve">
          <source>Makes &lt;code&gt;migrate&lt;/code&gt; exit with a non-zero status when unapplied migrations are detected.</source>
          <target state="translated">当检测到未应用的迁移时，使 &lt;code&gt;migrate&lt;/code&gt; 以非零状态退出。</target>
        </trans-unit>
        <trans-unit id="cd46c57dda19a380dba63b951c50c57d7edd94b1" translate="yes" xml:space="preserve">
          <source>Makes a DELETE request on the provided &lt;code&gt;path&lt;/code&gt; and returns a &lt;code&gt;Response&lt;/code&gt; object. Useful for testing RESTful interfaces.</source>
          <target state="translated">在提供的 &lt;code&gt;path&lt;/code&gt; 上进行DELETE请求并返回 &lt;code&gt;Response&lt;/code&gt; 对象。对于测试RESTful接口很有用。</target>
        </trans-unit>
        <trans-unit id="67b8fdec97a0a90000785f857f6d99d954dfbaaa" translate="yes" xml:space="preserve">
          <source>Makes a GET request on the provided &lt;code&gt;path&lt;/code&gt; and returns a &lt;code&gt;Response&lt;/code&gt; object, which is documented below.</source>
          <target state="translated">在提供的 &lt;code&gt;path&lt;/code&gt; 上进行GET请求，并返回一个 &lt;code&gt;Response&lt;/code&gt; 对象，如下所述。</target>
        </trans-unit>
        <trans-unit id="3ab36adc110fb58469cbb078f97a12c9d401e7de" translate="yes" xml:space="preserve">
          <source>Makes a HEAD request on the provided &lt;code&gt;path&lt;/code&gt; and returns a &lt;code&gt;Response&lt;/code&gt; object. This method works just like &lt;a href=&quot;#django.test.Client.get&quot;&gt;&lt;code&gt;Client.get()&lt;/code&gt;&lt;/a&gt;, including the &lt;code&gt;follow&lt;/code&gt;, &lt;code&gt;secure&lt;/code&gt; and &lt;code&gt;extra&lt;/code&gt; arguments, except it does not return a message body.</source>
          <target state="translated">在提供的 &lt;code&gt;path&lt;/code&gt; 上发出HEAD请求，并返回 &lt;code&gt;Response&lt;/code&gt; 对象。该方法的工作方式与&lt;a href=&quot;#django.test.Client.get&quot;&gt; &lt;code&gt;Client.get()&lt;/code&gt; 一样&lt;/a&gt;，包括 &lt;code&gt;follow&lt;/code&gt; ， &lt;code&gt;secure&lt;/code&gt; 和 &lt;code&gt;extra&lt;/code&gt; 参数，但它不会返回消息正文。</target>
        </trans-unit>
        <trans-unit id="622e768ac61b71b81b98d9e29b486595200ed157" translate="yes" xml:space="preserve">
          <source>Makes a PATCH request on the provided &lt;code&gt;path&lt;/code&gt; and returns a &lt;code&gt;Response&lt;/code&gt; object. Useful for testing RESTful interfaces.</source>
          <target state="translated">在提供的 &lt;code&gt;path&lt;/code&gt; 上发出PATCH请求，并返回 &lt;code&gt;Response&lt;/code&gt; 对象。对于测试RESTful接口很有用。</target>
        </trans-unit>
        <trans-unit id="fd9170b880c457475e4acad7c3125b513d409d1e" translate="yes" xml:space="preserve">
          <source>Makes a POST request on the provided &lt;code&gt;path&lt;/code&gt; and returns a &lt;code&gt;Response&lt;/code&gt; object, which is documented below.</source>
          <target state="translated">在提供的 &lt;code&gt;path&lt;/code&gt; 上发出POST请求，并返回一个 &lt;code&gt;Response&lt;/code&gt; 对象，如下所述。</target>
        </trans-unit>
        <trans-unit id="8a618a092d900f3345d37da0ff87b3e10c65839d" translate="yes" xml:space="preserve">
          <source>Makes a PUT request on the provided &lt;code&gt;path&lt;/code&gt; and returns a &lt;code&gt;Response&lt;/code&gt; object. Useful for testing RESTful interfaces.</source>
          <target state="translated">在提供的 &lt;code&gt;path&lt;/code&gt; 上发出PUT请求，并返回一个 &lt;code&gt;Response&lt;/code&gt; 对象。对于测试RESTful接口很有用。</target>
        </trans-unit>
        <trans-unit id="66196a0bb288c4ef1f8149743502405df89a8fd9" translate="yes" xml:space="preserve">
          <source>Makes a TRACE request on the provided &lt;code&gt;path&lt;/code&gt; and returns a &lt;code&gt;Response&lt;/code&gt; object. Useful for simulating diagnostic probes.</source>
          <target state="translated">在提供的 &lt;code&gt;path&lt;/code&gt; 上发出TRACE请求，并返回一个 &lt;code&gt;Response&lt;/code&gt; 对象。用于模拟诊断探针。</target>
        </trans-unit>
        <trans-unit id="888f82444507e9099b749f8f400d61b51e2436cd" translate="yes" xml:space="preserve">
          <source>Makes all possible efforts to strip all [X]HTML tags.</source>
          <target state="translated">尽一切努力剥离所有[X]HTML标签。</target>
        </trans-unit>
        <trans-unit id="99cf9f3654a5878401b856a77fe4db8a46014e99" translate="yes" xml:space="preserve">
          <source>Makes an OPTIONS request on the provided &lt;code&gt;path&lt;/code&gt; and returns a &lt;code&gt;Response&lt;/code&gt; object. Useful for testing RESTful interfaces.</source>
          <target state="translated">在提供的 &lt;code&gt;path&lt;/code&gt; 上进行OPTIONS请求，并返回 &lt;code&gt;Response&lt;/code&gt; 对象。对于测试RESTful接口很有用。</target>
        </trans-unit>
        <trans-unit id="a2b1ed94dcb4d0abbc485a341862326c80bacbba" translate="yes" xml:space="preserve">
          <source>Makes or deletes the &lt;code&gt;_order&lt;/code&gt; column needed for the &lt;a href=&quot;models/options#django.db.models.Options.order_with_respect_to&quot;&gt;&lt;code&gt;order_with_respect_to&lt;/code&gt;&lt;/a&gt; option on the &lt;code&gt;Meta&lt;/code&gt; subclass.</source>
          <target state="translated">生成或删除 &lt;code&gt;Meta&lt;/code&gt; 子类上&lt;a href=&quot;models/options#django.db.models.Options.order_with_respect_to&quot;&gt; &lt;code&gt;order_with_respect_to&lt;/code&gt; &lt;/a&gt;选项所需的 &lt;code&gt;_order&lt;/code&gt; 列。</target>
        </trans-unit>
        <trans-unit id="7dccc437985ff30cb011b62713b84ead4f737431" translate="yes" xml:space="preserve">
          <source>Makes the active translation object a &lt;code&gt;NullTranslations()&lt;/code&gt; instance. This is useful when we want delayed translations to appear as the original string for some reason.</source>
          <target state="translated">使活动翻译对象成为 &lt;code&gt;NullTranslations()&lt;/code&gt; 实例。当由于某些原因我们希望延迟翻译显示为原始字符串时，这很有用。</target>
        </trans-unit>
        <trans-unit id="3ea1449517b61b6227fc0a09d9c44c6bb5266548" translate="yes" xml:space="preserve">
          <source>Makes this object orderable with respect to the given field, usually a &lt;code&gt;ForeignKey&lt;/code&gt;. This can be used to make related objects orderable with respect to a parent object. For example, if an &lt;code&gt;Answer&lt;/code&gt; relates to a &lt;code&gt;Question&lt;/code&gt; object, and a question has more than one answer, and the order of answers matters, you&amp;rsquo;d do this:</source>
          <target state="translated">使此对象相对于给定字段（通常为 &lt;code&gt;ForeignKey&lt;/code&gt; )可排序。这可用于使相关对象相对于父对象可排序。例如，如果一个 &lt;code&gt;Answer&lt;/code&gt; 与一个 &lt;code&gt;Question&lt;/code&gt; 对象有关，而一个问题有多个答案，并且答案的顺序很重要，则可以这样做：</target>
        </trans-unit>
        <trans-unit id="d54f5b47c954fae0115f4537ba904f310a264de9" translate="yes" xml:space="preserve">
          <source>Making &amp;ldquo;friendly&amp;rdquo; template contexts</source>
          <target state="translated">制作&amp;ldquo;友好&amp;rdquo;模板上下文</target>
        </trans-unit>
        <trans-unit id="c8db8d80fd9fb4fecd9dcd41e45fec83ed98ddd5" translate="yes" xml:space="preserve">
          <source>Making URL patterns themselves translatable via the &lt;a href=&quot;../../ref/utils#django.utils.translation.gettext_lazy&quot;&gt;&lt;code&gt;django.utils.translation.gettext_lazy()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">通过&lt;a href=&quot;../../ref/utils#django.utils.translation.gettext_lazy&quot;&gt; &lt;code&gt;django.utils.translation.gettext_lazy()&lt;/code&gt; &lt;/a&gt;函数使URL模式本身可翻译。</target>
        </trans-unit>
        <trans-unit id="42a63d52676fa037454255c2d52959b81d535bf1" translate="yes" xml:space="preserve">
          <source>Making actions available site-wide</source>
          <target state="translated">在整个网站上提供行动</target>
        </trans-unit>
        <trans-unit id="9eec11322f12a5a830e1ec8f9ac3f17534635686" translate="yes" xml:space="preserve">
          <source>Making an expensive computation that depends on the request.</source>
          <target state="translated">进行昂贵的计算,取决于请求。</target>
        </trans-unit>
        <trans-unit id="11280e40fa12c6ed475a0960415249174d29f82b" translate="yes" xml:space="preserve">
          <source>Making logging calls</source>
          <target state="translated">进行记录调用</target>
        </trans-unit>
        <trans-unit id="7cbc2e6788aa00914bfa34bdeafb0de83e2e8075" translate="yes" xml:space="preserve">
          <source>Making queries</source>
          <target state="translated">查询</target>
        </trans-unit>
        <trans-unit id="f36af64091c8859d03f0c5912aa8c3e10b3dd9b4" translate="yes" xml:space="preserve">
          <source>Making requests</source>
          <target state="translated">提出请求</target>
        </trans-unit>
        <trans-unit id="b880c8b42823e5609b10a452e5205dcb5f7b4996" translate="yes" xml:space="preserve">
          <source>Management Commands</source>
          <target state="translated">管理命令</target>
        </trans-unit>
        <trans-unit id="309988b71dc98cdf2b11d5ce945ef12fe12b7c85" translate="yes" xml:space="preserve">
          <source>Management commands and locales</source>
          <target state="translated">管理命令和区域</target>
        </trans-unit>
        <trans-unit id="fdb992093f99727071e66bbe2c45fcb5e3b93112" translate="yes" xml:space="preserve">
          <source>Management commands can be tested with the &lt;a href=&quot;../../ref/django-admin#django.core.management.call_command&quot;&gt;&lt;code&gt;call_command()&lt;/code&gt;&lt;/a&gt; function. The output can be redirected into a &lt;code&gt;StringIO&lt;/code&gt; instance:</source>
          <target state="translated">可以使用&lt;a href=&quot;../../ref/django-admin#django.core.management.call_command&quot;&gt; &lt;code&gt;call_command()&lt;/code&gt; &lt;/a&gt;函数测试管理命令。可以将输出重定向到 &lt;code&gt;StringIO&lt;/code&gt; 实例：</target>
        </trans-unit>
        <trans-unit id="123ebb6632286d41ac5ad793d26b1e8e2995104f" translate="yes" xml:space="preserve">
          <source>Management commands from third-party apps that have been unintentionally overridden can be made available under a new name by creating a new command in one of your project&amp;rsquo;s apps (ordered before the third-party app in &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;) which imports the &lt;code&gt;Command&lt;/code&gt; of the overridden command.</source>
          <target state="translated">通过在项目的一个应用程序（在&lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 中&lt;/a&gt;的第三方应用程序之前订购）中创建一个新命令，该应用程序可以无意中覆盖了来自第三方应用程序的管理命令，该 &lt;code&gt;Command&lt;/code&gt; 导入了被覆盖命令的命令。</target>
        </trans-unit>
        <trans-unit id="aedb618e7bae6668445752ed581581d51fca7e48" translate="yes" xml:space="preserve">
          <source>Management signals</source>
          <target state="translated">管理信号</target>
        </trans-unit>
        <trans-unit id="bab8c1f3a552b23f9c2fc03d51382bf5a6e5f9e0" translate="yes" xml:space="preserve">
          <source>Manager methods</source>
          <target state="translated">经理人方法</target>
        </trans-unit>
        <trans-unit id="5d37a81c73b96201b2d085091cabd9eeab93ecf1" translate="yes" xml:space="preserve">
          <source>Manager names</source>
          <target state="translated">管理人姓名</target>
        </trans-unit>
        <trans-unit id="4f7b3cfa4fbefb6a7d1086c0a97bc4ea23175a55" translate="yes" xml:space="preserve">
          <source>Managers</source>
          <target state="translated">Managers</target>
        </trans-unit>
        <trans-unit id="9e8450ccf72e480aeae5b3890c911f5578602674" translate="yes" xml:space="preserve">
          <source>Managers from base classes are always inherited by the child class, using Python&amp;rsquo;s normal name resolution order (names on the child class override all others; then come names on the first parent class, and so on).</source>
          <target state="translated">来自基类的管理器始终由子类继承，使用Python的常规名称解析顺序（子类上的名称优先于所有其他名称，然后是第一个父类上的名称，依此类推）。</target>
        </trans-unit>
        <trans-unit id="4f90f7785499fc4cfaa11512554a9d9c8b983450" translate="yes" xml:space="preserve">
          <source>Managing database transactions</source>
          <target state="translated">管理数据库事务</target>
        </trans-unit>
        <trans-unit id="a21bfd78268483f35f3c604df2fe7d8571659141" translate="yes" xml:space="preserve">
          <source>Managing files</source>
          <target state="translated">管理文件</target>
        </trans-unit>
        <trans-unit id="1f4073ab68fce5fa416ebfc1214a39c03aa82bd7" translate="yes" xml:space="preserve">
          <source>Managing static files (e.g. images, JavaScript, CSS)</source>
          <target state="translated">管理静态文件(如图像、JavaScript、CSS)。</target>
        </trans-unit>
        <trans-unit id="cfe3a8d49df863653ebd64aa7a5c9599baeb268f" translate="yes" xml:space="preserve">
          <source>Managing the database</source>
          <target state="translated">管理数据库</target>
        </trans-unit>
        <trans-unit id="821946108f9fcc4278ef8ff2a44740fe9fc0f854" translate="yes" xml:space="preserve">
          <source>Managing users in the admin</source>
          <target state="translated">在管理员中管理用户</target>
        </trans-unit>
        <trans-unit id="b383c49ef5abc4e107f02ad08c8c62501452a9f0" translate="yes" xml:space="preserve">
          <source>Mandatory &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt;&lt;code&gt;SITE_ID&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">必填&lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt; &lt;code&gt;SITE_ID&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49bb3afa6fe6d5f9c1b4819689c8cb64af32574b" translate="yes" xml:space="preserve">
          <source>Manually managing a user&amp;rsquo;s password</source>
          <target state="translated">手动管理用户密码</target>
        </trans-unit>
        <trans-unit id="169b1587f29ae2dd843f597266b7665985a7ec7f" translate="yes" xml:space="preserve">
          <source>Manually rendered &lt;code&gt;can_delete&lt;/code&gt; and &lt;code&gt;can_order&lt;/code&gt;</source>
          <target state="translated">手动渲染 &lt;code&gt;can_delete&lt;/code&gt; 和 &lt;code&gt;can_order&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="578ba80b666e0ccf9a7012331ca7e916469a6aaf" translate="yes" xml:space="preserve">
          <source>Manually selecting a database</source>
          <target state="translated">手动选择数据库</target>
        </trans-unit>
        <trans-unit id="9cab6e985bdaa8e6c7cd3d1f1913684e9f6c62a4" translate="yes" xml:space="preserve">
          <source>Manually selecting a database for a &lt;code&gt;QuerySet&lt;/code&gt;</source>
          <target state="translated">手动为 &lt;code&gt;QuerySet&lt;/code&gt; 选择数据库</target>
        </trans-unit>
        <trans-unit id="6e5d67e28075441efb68505f6ad34b3922452603" translate="yes" xml:space="preserve">
          <source>Manually-specifying values of auto-incrementing primary keys</source>
          <target state="translated">手动指定自动递增主键的值。</target>
        </trans-unit>
        <trans-unit id="3fd4f2fc1f97ee8fb54c37f3123e041f2ad5b7eb" translate="yes" xml:space="preserve">
          <source>Many JavaScript toolkits exist, and many of them include widgets (such as calendar widgets) that can be used to enhance your application. Django has deliberately avoided blessing any one JavaScript toolkit. Each toolkit has its own relative strengths and weaknesses - use whichever toolkit suits your requirements. Django is able to integrate with any JavaScript toolkit.</source>
          <target state="translated">很多JavaScript工具包都存在,其中很多都包含了一些小部件(比如日历小部件),可以用来增强你的应用程序。Django刻意避免对任何一个JavaScript工具包进行祝福。每个工具包都有自己相对的优势和劣势--使用任何一个适合你需求的工具包。Django能够与任何JavaScript工具箱集成。</target>
        </trans-unit>
        <trans-unit id="25451186d18d24fb946ba6ce8889475aef168969" translate="yes" xml:space="preserve">
          <source>Many commands take a list of &amp;ldquo;app names.&amp;rdquo; An &amp;ldquo;app name&amp;rdquo; is the basename of the package containing your models. For example, if your &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; contains the string &lt;code&gt;'mysite.blog'&lt;/code&gt;, the app name is &lt;code&gt;blog&lt;/code&gt;.</source>
          <target state="translated">许多命令采用&amp;ldquo;应用程序名称&amp;rdquo;列表。&amp;ldquo;应用程序名称&amp;rdquo;是包含您的模型的软件包的基本名称。例如，如果您的&lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;包含字符串 &lt;code&gt;'mysite.blog'&lt;/code&gt; ，则应用程序名称为 &lt;code&gt;blog&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a1ab0c728d9adbf5dc95998cbd2e06c0ddcc849d" translate="yes" xml:space="preserve">
          <source>Many of Django&amp;rsquo;s built-in class-based views inherit from other class-based views or various mixins. Because this inheritance chain is very important, the ancestor classes are documented under the section title of &lt;strong&gt;Ancestors (MRO)&lt;/strong&gt;. MRO is an acronym for Method Resolution Order.</source>
          <target state="translated">Django的许多内置的基于类的视图都继承自其他基于类的视图或各种混合。因为此继承链非常重要，所以祖先类记录在&amp;ldquo; &lt;strong&gt;祖先（MRO）&lt;/strong&gt; &amp;rdquo;部分下。MRO是&amp;ldquo;方法解析顺序&amp;rdquo;的首字母缩写。</target>
        </trans-unit>
        <trans-unit id="7ef93725b505fdf5fdda66e9602ccdb48505b2c6" translate="yes" xml:space="preserve">
          <source>Many of Django&amp;rsquo;s model fields accept options that they don&amp;rsquo;t do anything with. For example, you can pass both &lt;a href=&quot;../ref/models/fields#django.db.models.Field.editable&quot;&gt;&lt;code&gt;editable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/models/fields#django.db.models.DateField.auto_now&quot;&gt;&lt;code&gt;auto_now&lt;/code&gt;&lt;/a&gt; to a &lt;a href=&quot;../ref/models/fields#django.db.models.DateField&quot;&gt;&lt;code&gt;django.db.models.DateField&lt;/code&gt;&lt;/a&gt; and it will ignore the &lt;a href=&quot;../ref/models/fields#django.db.models.Field.editable&quot;&gt;&lt;code&gt;editable&lt;/code&gt;&lt;/a&gt; parameter (&lt;a href=&quot;../ref/models/fields#django.db.models.DateField.auto_now&quot;&gt;&lt;code&gt;auto_now&lt;/code&gt;&lt;/a&gt; being set implies &lt;code&gt;editable=False&lt;/code&gt;). No error is raised in this case.</source>
          <target state="translated">Django的许多模型字段都接受不执行任何操作的选项。例如，您可以将&lt;a href=&quot;../ref/models/fields#django.db.models.Field.editable&quot;&gt; &lt;code&gt;editable&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/models/fields#django.db.models.DateField.auto_now&quot;&gt; &lt;code&gt;auto_now&lt;/code&gt; &lt;/a&gt;都传递给&lt;a href=&quot;../ref/models/fields#django.db.models.DateField&quot;&gt; &lt;code&gt;django.db.models.DateField&lt;/code&gt; &lt;/a&gt;，它将忽略&lt;a href=&quot;../ref/models/fields#django.db.models.Field.editable&quot;&gt; &lt;code&gt;editable&lt;/code&gt; &lt;/a&gt;参数（&lt;a href=&quot;../ref/models/fields#django.db.models.DateField.auto_now&quot;&gt; &lt;code&gt;auto_now&lt;/code&gt; &lt;/a&gt;的设置暗含 &lt;code&gt;editable=False&lt;/code&gt; ）。在这种情况下不会引发任何错误。</target>
        </trans-unit>
        <trans-unit id="c7e02cb06b5702dcaa553fe7f77ae3438f401b6a" translate="yes" xml:space="preserve">
          <source>Many of these settings are sensitive and should be treated as confidential. If you&amp;rsquo;re releasing the source code for your project, a common practice is to publish suitable settings for development, and to use a private settings module for production.</source>
          <target state="translated">其中许多设置都是敏感的，应视为机密。如果要发布项目的源代码，通常的做法是发布合适的设置进行开发，并使用私有设置模块进行生产。</target>
        </trans-unit>
        <trans-unit id="75861236e48cb91931859e485f7ff7f5f75eebda" translate="yes" xml:space="preserve">
          <source>Many of these signals are sent by various model methods like &lt;code&gt;__init__()&lt;/code&gt; or &lt;a href=&quot;models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; that you can override in your own code.</source>
          <target state="translated">这些信号中的许多信号是通过各种模型方法（例如 &lt;code&gt;__init__()&lt;/code&gt; 或&lt;a href=&quot;models/instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; )发送的&lt;/a&gt;，您可以在自己的代码中覆盖这些方法。</target>
        </trans-unit>
        <trans-unit id="22d338ef8445afc99ea23ca8b6ff63e24bec60fb" translate="yes" xml:space="preserve">
          <source>Many other things might go wrong with our application in the future, but we can be sure that we won&amp;rsquo;t inadvertently reintroduce this bug, because running the test will warn us immediately. We can consider this little portion of the application pinned down safely forever.</source>
          <target state="translated">将来，我们的应用程序可能会发生许多其他事情，但是我们可以确保不会意外引入此错误，因为运行测试会立即警告我们。我们可以考虑将应用程序的这一小部分永远固定下来。</target>
        </trans-unit>
        <trans-unit id="a06e57ab2b407ee0845b83ecac56cae0cb1c5bb7" translate="yes" xml:space="preserve">
          <source>Many template tags take a number of arguments &amp;ndash; strings or template variables &amp;ndash; and return a result after doing some processing based solely on the input arguments and some external information. For example, a &lt;code&gt;current_time&lt;/code&gt; tag might accept a format string and return the time as a string formatted accordingly.</source>
          <target state="translated">许多模板标签采用许多参数（字符串或模板变量），并仅根据输入参数和一些外部信息进行了一些处理后返回结果。例如， &lt;code&gt;current_time&lt;/code&gt; 标记可以接受格式字符串，然后将时间作为相应格式的字符串返回。</target>
        </trans-unit>
        <trans-unit id="d934fc1527a93c2b43e246ede7cf475542db271a" translate="yes" xml:space="preserve">
          <source>Many templates, including some of Django&amp;rsquo;s, rely upon the silence of the template system when a nonexistent variable is encountered. If you assign a value other than &lt;code&gt;''&lt;/code&gt; to &lt;code&gt;string_if_invalid&lt;/code&gt;, you will experience rendering problems with these templates and sites.</source>
          <target state="translated">当遇到不存在的变量时，许多模板（包括Django的某些模板）都依赖于模板系统的静音。如果您为 &lt;code&gt;string_if_invalid&lt;/code&gt; 分配了除 &lt;code&gt;''&lt;/code&gt; 之外的其他值，您将在这些模板和网站上遇到渲染问题。</target>
        </trans-unit>
        <trans-unit id="67d6af84e82be13a30451c42ca848e947ab607d1" translate="yes" xml:space="preserve">
          <source>Many widgets have optional extra arguments; they can be set when defining the widget on the field. In the following example, the &lt;a href=&quot;#django.forms.SelectDateWidget.years&quot;&gt;&lt;code&gt;years&lt;/code&gt;&lt;/a&gt; attribute is set for a &lt;a href=&quot;#django.forms.SelectDateWidget&quot;&gt;&lt;code&gt;SelectDateWidget&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">许多小部件都有可选的额外参数。在字段上定义窗口小部件时可以设置它们。在以下示例中，为&lt;a href=&quot;#django.forms.SelectDateWidget&quot;&gt; &lt;code&gt;SelectDateWidget&lt;/code&gt; &lt;/a&gt;设置了&lt;a href=&quot;#django.forms.SelectDateWidget.years&quot;&gt; &lt;code&gt;years&lt;/code&gt; &lt;/a&gt;属性：</target>
        </trans-unit>
        <trans-unit id="d58d8917cafabb2c90c45707f57b660d3626c9ee" translate="yes" xml:space="preserve">
          <source>Many-to-many field to &lt;a href=&quot;#django.contrib.auth.models.Permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">多对多字段的&lt;a href=&quot;#django.contrib.auth.models.Permission&quot;&gt; &lt;code&gt;Permission&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f9d8f6ec324fa681af98e9241f31cfa5781051c6" translate="yes" xml:space="preserve">
          <source>Many-to-many relationship to &lt;a href=&quot;#django.contrib.auth.models.Group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">与&lt;a href=&quot;#django.contrib.auth.models.Group&quot;&gt; &lt;code&gt;Group&lt;/code&gt; &lt;/a&gt;的多对多关系</target>
        </trans-unit>
        <trans-unit id="f1c116d2e532fe76c699eb71681c5f325c7f63e0" translate="yes" xml:space="preserve">
          <source>Many-to-many relationship to &lt;a href=&quot;#django.contrib.auth.models.Permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">与&lt;a href=&quot;#django.contrib.auth.models.Permission&quot;&gt; &lt;code&gt;Permission&lt;/code&gt; &lt;/a&gt;的多对多关系</target>
        </trans-unit>
        <trans-unit id="70e5715c4c5ce8ff1bacfa3505a6793b1e2d573f" translate="yes" xml:space="preserve">
          <source>Many-to-many relationships</source>
          <target state="translated">多对多关系</target>
        </trans-unit>
        <trans-unit id="e425f695d48e438c36b7fc9a91b741584873db30" translate="yes" xml:space="preserve">
          <source>Many-to-many relationships can be queried using &lt;a href=&quot;../queries#lookups-that-span-relationships&quot;&gt;lookups across relationships&lt;/a&gt;:</source>
          <target state="translated">可以使用&lt;a href=&quot;../queries#lookups-that-span-relationships&quot;&gt;跨关系的&lt;/a&gt;查询来查询多对多关系：</target>
        </trans-unit>
        <trans-unit id="ba72c44b14ca6638dbe6a05d3bce34a9c08ab179" translate="yes" xml:space="preserve">
          <source>Many-to-one relationships</source>
          <target state="translated">多对一关系</target>
        </trans-unit>
        <trans-unit id="9f6d34f1802b32e0c12aec1e3e5d808e6f66d84a" translate="yes" xml:space="preserve">
          <source>ManyToMany-relations are exported for the model that binds them. For instance, the &lt;code&gt;auth.User&lt;/code&gt; model has such a relation to the &lt;code&gt;auth.Permission&lt;/code&gt; model:</source>
          <target state="translated">会为绑定它们的模型导出ManyToMany-relations。例如， &lt;code&gt;auth.User&lt;/code&gt; 模型有这样一个关系到 &lt;code&gt;auth.Permission&lt;/code&gt; 模型：</target>
        </trans-unit>
        <trans-unit id="5cf3b65a416d6e52bab78d048e87986c34858f91" translate="yes" xml:space="preserve">
          <source>Mapped to the &lt;a href=&quot;#django.contrib.gis.gdal.GDALBand.nodata_value&quot;&gt;&lt;code&gt;nodata_value&lt;/code&gt;&lt;/a&gt; attribute</source>
          <target state="translated">映射到&lt;a href=&quot;#django.contrib.gis.gdal.GDALBand.nodata_value&quot;&gt; &lt;code&gt;nodata_value&lt;/code&gt; &lt;/a&gt;属性</target>
        </trans-unit>
        <trans-unit id="b49cda891b56d96f95a118e0757e9217f5f1c480" translate="yes" xml:space="preserve">
          <source>Mapped to the &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.driver&quot;&gt;&lt;code&gt;driver&lt;/code&gt;&lt;/a&gt; attribute</source>
          <target state="translated">映射到&lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.driver&quot;&gt; &lt;code&gt;driver&lt;/code&gt; &lt;/a&gt;属性</target>
        </trans-unit>
        <trans-unit id="540288375fb7d6fa4ddcf2966b348db71d56849b" translate="yes" xml:space="preserve">
          <source>Mapped to the &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.height&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/a&gt; attribute</source>
          <target state="translated">映射到&lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.height&quot;&gt; &lt;code&gt;height&lt;/code&gt; &lt;/a&gt;属性</target>
        </trans-unit>
        <trans-unit id="3690a5f473e1bd7016481bb98cfe5cabfcaea42d" translate="yes" xml:space="preserve">
          <source>Mapped to the &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.origin&quot;&gt;&lt;code&gt;origin&lt;/code&gt;&lt;/a&gt; attribute</source>
          <target state="translated">映射到&lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.origin&quot;&gt; &lt;code&gt;origin&lt;/code&gt; &lt;/a&gt;属性</target>
        </trans-unit>
        <trans-unit id="7d4ecb0587f3cc23b7f26c6f72881682d026d17e" translate="yes" xml:space="preserve">
          <source>Mapped to the &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.scale&quot;&gt;&lt;code&gt;scale&lt;/code&gt;&lt;/a&gt; attribute</source>
          <target state="translated">映射到&lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.scale&quot;&gt; &lt;code&gt;scale&lt;/code&gt; &lt;/a&gt;属性</target>
        </trans-unit>
        <trans-unit id="ea921e1e0d479e3a85669a075cb1b1c3b19e6693" translate="yes" xml:space="preserve">
          <source>Mapped to the &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.srid&quot;&gt;&lt;code&gt;srid&lt;/code&gt;&lt;/a&gt; attribute</source>
          <target state="translated">映射到&lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.srid&quot;&gt; &lt;code&gt;srid&lt;/code&gt; &lt;/a&gt;属性</target>
        </trans-unit>
        <trans-unit id="aa20fe2b5818bbde36ad87034a1ecbf01e297f82" translate="yes" xml:space="preserve">
          <source>Mapped to the &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; attribute</source>
          <target state="translated">映射到&lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.width&quot;&gt; &lt;code&gt;width&lt;/code&gt; &lt;/a&gt;属性</target>
        </trans-unit>
        <trans-unit id="cb343929f61bef17958fbce9c5add540ed87a54c" translate="yes" xml:space="preserve">
          <source>Mapping URLs to views</source>
          <target state="translated">将URL映射到视图</target>
        </trans-unit>
        <trans-unit id="b59a41665f92ed102c9cc53a15e018811cad6724" translate="yes" xml:space="preserve">
          <source>Mapping query fields to model fields</source>
          <target state="translated">将查询字段映射到模型字段</target>
        </trans-unit>
        <trans-unit id="790cecd9579b54cbb8881de7b21413ab38c2dd3f" translate="yes" xml:space="preserve">
          <source>Maps values for &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;False&lt;/code&gt;, and (optionally) &lt;code&gt;None&lt;/code&gt;, to the strings &amp;ldquo;yes&amp;rdquo;, &amp;ldquo;no&amp;rdquo;, &amp;ldquo;maybe&amp;rdquo;, or a custom mapping passed as a comma-separated list, and returns one of those strings according to the value:</source>
          <target state="translated">将 &lt;code&gt;True&lt;/code&gt; ， &lt;code&gt;False&lt;/code&gt; 和（可选） &lt;code&gt;None&lt;/code&gt; 的值映射到字符串&amp;ldquo; yes&amp;rdquo;，&amp;ldquo; no&amp;rdquo;，&amp;ldquo; maybe&amp;rdquo;或以逗号分隔的列表传递的自定义映射，并根据值返回这些字符串之一：</target>
        </trans-unit>
        <trans-unit id="7f00002bb6ad2eec19a19de8a03c7d6fad15adff" translate="yes" xml:space="preserve">
          <source>MariaDB</source>
          <target state="translated">MariaDB</target>
        </trans-unit>
        <trans-unit id="7d4168bc3f16d6fe180b1ac18cb68592a82d37fc" translate="yes" xml:space="preserve">
          <source>MariaDB &lt;a href=&quot;https://jira.mariadb.org/browse/MDEV-12981&quot;&gt;doesn&amp;rsquo;t support&lt;/a&gt; the &lt;code&gt;default&lt;/code&gt; parameter.</source>
          <target state="translated">MariaDB的&lt;a href=&quot;https://jira.mariadb.org/browse/MDEV-12981&quot;&gt;不支持&lt;/a&gt;的 &lt;code&gt;default&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="4a643fce146444011d7acb230ac298d723eb94e0" translate="yes" xml:space="preserve">
          <source>MariaDB and &lt;code&gt;default&lt;/code&gt;</source>
          <target state="translated">MariaDB和 &lt;code&gt;default&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60c8a756ff78d3971eda0305304654e702c293c5" translate="yes" xml:space="preserve">
          <source>MariaDB and Oracle users</source>
          <target state="translated">MariaDB和Oracle用户</target>
        </trans-unit>
        <trans-unit id="cf8e08dd5e412196ef8d596fa4013be4fa1691fa" translate="yes" xml:space="preserve">
          <source>MariaDB notes</source>
          <target state="translated">MariaDB笔记</target>
        </trans-unit>
        <trans-unit id="f4d445e79364f1438052336aec87ad0818d1254b" translate="yes" xml:space="preserve">
          <source>MariaDB support was added.</source>
          <target state="translated">增加了对MariaDB的支持。</target>
        </trans-unit>
        <trans-unit id="22b9920d6f1372da8351b819c15404ef8d73e846" translate="yes" xml:space="preserve">
          <source>MariaDB, PostGIS, and SpatiaLite</source>
          <target state="translated">MariaDB、PostGIS和SpatiaLite。</target>
        </trans-unit>
        <trans-unit id="aff977f722d98c1105c72000c74384e594446a96" translate="yes" xml:space="preserve">
          <source>Marking a filter &lt;code&gt;is_safe&lt;/code&gt; will coerce the filter&amp;rsquo;s return value to a string. If your filter should return a boolean or other non-string value, marking it &lt;code&gt;is_safe&lt;/code&gt; will probably have unintended consequences (such as converting a boolean False to the string &amp;lsquo;False&amp;rsquo;).</source>
          <target state="translated">将过滤器标记为 &lt;code&gt;is_safe&lt;/code&gt; 会将过滤器的返回值强制为字符串。如果您的过滤器应返回布尔值或其他非字符串值，则将其标记为 &lt;code&gt;is_safe&lt;/code&gt; 可能会产生意想不到的结果（例如将布尔False转换为字符串False）。</target>
        </trans-unit>
        <trans-unit id="8f989987f22e747a6a20e1632167baf49bbb35ce" translate="yes" xml:space="preserve">
          <source>Marking middleware as unused</source>
          <target state="translated">将中间件标记为未使用</target>
        </trans-unit>
        <trans-unit id="311345611b41ef66eb9c30d09d1355a38f149c13" translate="yes" xml:space="preserve">
          <source>Marking strings as no-op</source>
          <target state="translated">将字符串标记为无操作</target>
        </trans-unit>
        <trans-unit id="9ad57bd8a9f8ffb40bd3a39cd567898505d9a1a7" translate="yes" xml:space="preserve">
          <source>Marks a middleware as &lt;a href=&quot;../topics/http/middleware#async-middleware&quot;&gt;asynchronous-only&lt;/a&gt;. Django will wrap it in an asynchronous event loop when it is called from the WSGI request path.</source>
          <target state="translated">将中间件标记为&lt;a href=&quot;../topics/http/middleware#async-middleware&quot;&gt;仅异步&lt;/a&gt;。从WSGI请求路径调用Django时，Django会将其包装在异步事件循环中。</target>
        </trans-unit>
        <trans-unit id="71a236994fd0ea6b37a7806b66f175d552b1f605" translate="yes" xml:space="preserve">
          <source>Marks a middleware as &lt;a href=&quot;../topics/http/middleware#async-middleware&quot;&gt;sync and async compatible&lt;/a&gt;, this allows to avoid converting requests. You must implement detection of the current request type to use this decorator. See &lt;a href=&quot;../topics/http/middleware#async-middleware&quot;&gt;asynchronous middleware documentation&lt;/a&gt; for details.</source>
          <target state="translated">将中间件标记为&lt;a href=&quot;../topics/http/middleware#async-middleware&quot;&gt;同步和异步兼容&lt;/a&gt;，这可以避免转换请求。您必须实现对当前请求类型的检测才能使用此装饰器。有关详细信息，请参见&lt;a href=&quot;../topics/http/middleware#async-middleware&quot;&gt;异步中间件文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5099a30c2ca01220fb6248589e9583ae57c439f0" translate="yes" xml:space="preserve">
          <source>Marks a middleware as &lt;a href=&quot;../topics/http/middleware#async-middleware&quot;&gt;synchronous-only&lt;/a&gt;. (The default in Django, but this allows you to future-proof if the default ever changes in a future release.)</source>
          <target state="translated">将中间件标记为&lt;a href=&quot;../topics/http/middleware#async-middleware&quot;&gt;仅同步&lt;/a&gt;。（Django中的默认值，但是如果默认值在将来的发行版中发生更改，这将使您能够面向未来。）</target>
        </trans-unit>
        <trans-unit id="47ef4478c5a91ad82e0866515b18c5b9ba23b7af" translate="yes" xml:space="preserve">
          <source>Marks a string as not requiring further HTML escaping prior to output. When autoescaping is off, this filter has no effect.</source>
          <target state="translated">标记一个字符串在输出前不需要进一步的HTML转义。当自动转义关闭时,该过滤器没有效果。</target>
        </trans-unit>
        <trans-unit id="223d15dc9b30717101f8c092e0326f6bd5d6b0ed" translate="yes" xml:space="preserve">
          <source>Marks strings for translation but doesn&amp;rsquo;t translate them now. This can be used to store strings in global variables that should stay in the base language (because they might be used externally) and will be translated later.</source>
          <target state="translated">将字符串标记为要翻译，但现在不翻译。这可用于将字符串存储在应保留在基本语言中的全局变量中（因为它们可能在外部使用），并将在以后进行翻译。</target>
        </trans-unit>
        <trans-unit id="c3ea63ecdea5904962549d0b05f6dc32f2807d9a" translate="yes" xml:space="preserve">
          <source>Marks the migrations up to the target one (following the rules above) as applied, but without actually running the SQL to change your database schema.</source>
          <target state="translated">标志着迁移到目标的一个(按照上面的规则)应用,但没有实际运行SQL来改变你的数据库模式。</target>
        </trans-unit>
        <trans-unit id="8d1f153abd2bfa9e625d24e6543581e4741ba55d" translate="yes" xml:space="preserve">
          <source>Marks the user as having no password set. This isn&amp;rsquo;t the same as having a blank string for a password. &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser.check_password&quot;&gt;&lt;code&gt;check_password()&lt;/code&gt;&lt;/a&gt; for this user will never return &lt;code&gt;True&lt;/code&gt;. Doesn&amp;rsquo;t save the &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser&quot;&gt;&lt;code&gt;AbstractBaseUser&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">将用户标记为未设置密码。这与为密码输入空白字符串不同。此用户的&lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser.check_password&quot;&gt; &lt;code&gt;check_password()&lt;/code&gt; &lt;/a&gt;永远不会返回 &lt;code&gt;True&lt;/code&gt; 。不保存&lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser&quot;&gt; &lt;code&gt;AbstractBaseUser&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="5bd4c73c983b5ef20c68616eada1df033fb69691" translate="yes" xml:space="preserve">
          <source>Marks the user as having no password set. This isn&amp;rsquo;t the same as having a blank string for a password. &lt;a href=&quot;#django.contrib.auth.models.User.check_password&quot;&gt;&lt;code&gt;check_password()&lt;/code&gt;&lt;/a&gt; for this user will never return &lt;code&gt;True&lt;/code&gt;. Doesn&amp;rsquo;t save the &lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">将用户标记为未设置密码。这与为密码输入空白字符串不同。此用户的&lt;a href=&quot;#django.contrib.auth.models.User.check_password&quot;&gt; &lt;code&gt;check_password()&lt;/code&gt; &lt;/a&gt;永远不会返回 &lt;code&gt;True&lt;/code&gt; 。不保存&lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="f4d5b558d76aca4dd8323ea862d1817d75c36e4e" translate="yes" xml:space="preserve">
          <source>Matching is done by name. This means that you can use SQL&amp;rsquo;s &lt;code&gt;AS&lt;/code&gt; clauses to map fields in the query to model fields. So if you had some other table that had &lt;code&gt;Person&lt;/code&gt; data in it, you could easily map it into &lt;code&gt;Person&lt;/code&gt; instances:</source>
          <target state="translated">匹配按名称完成。这意味着您可以使用SQL的 &lt;code&gt;AS&lt;/code&gt; 子句将查询中的字段映射到模型字段。因此，如果您还有其他包含 &lt;code&gt;Person&lt;/code&gt; 数据的表，则可以轻松地将其映射到 &lt;code&gt;Person&lt;/code&gt; 实例：</target>
        </trans-unit>
        <trans-unit id="1756bec08ab2e5a4f6f3ea1577c5665ca0e8a418" translate="yes" xml:space="preserve">
          <source>Math Functions</source>
          <target state="translated">数学函数</target>
        </trans-unit>
        <trans-unit id="a9e1ee5cfc81eca21d13684541c3fe5125c8cf23" translate="yes" xml:space="preserve">
          <source>May be &lt;code&gt;'commit_on_success'&lt;/code&gt; (default) or &lt;code&gt;'autocommit'&lt;/code&gt;.</source>
          <target state="translated">可以是 &lt;code&gt;'commit_on_success'&lt;/code&gt; （默认）或 &lt;code&gt;'autocommit'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7d5a77b56557cd02637c33e06076b81641a4ddd" translate="yes" xml:space="preserve">
          <source>May be set with a slice or tuple of (begin, end) feature ID&amp;rsquo;s to map from the data source. In other words, this keyword enables the user to selectively import a subset range of features in the geographic data source.</source>
          <target state="translated">可以使用（起点，终点）要素ID的切片或元组进行设置，以从数据源进行映射。换句话说，该关键字使用户能够有选择地导入地理数据源中要素的子集范围。</target>
        </trans-unit>
        <trans-unit id="49efc4391faa05cc8087791bccf389e65b797277" translate="yes" xml:space="preserve">
          <source>Maybe. You&amp;rsquo;re better protected from DST-related bugs, but you can still shoot yourself in the foot by carelessly turning naive datetimes into aware datetimes, and vice-versa.</source>
          <target state="translated">也许。可以更好地保护与DST相关的错误，但是仍然可以通过不小心将原始日期时间转换为已知日期时间，反之亦然。</target>
        </trans-unit>
        <trans-unit id="de10edfac7e76d9ec68df69f5a5a36c3464c6350" translate="yes" xml:space="preserve">
          <source>Measurement</source>
          <target state="translated">Measurement</target>
        </trans-unit>
        <trans-unit id="3c38753a72f7a69367f3f46f2f3bf8c4fb743041" translate="yes" xml:space="preserve">
          <source>Measurement API</source>
          <target state="translated">测量API</target>
        </trans-unit>
        <trans-unit id="da9d9ce75f58bd008d16b191b24e7db519550a57" translate="yes" xml:space="preserve">
          <source>Measurement Objects</source>
          <target state="translated">测量对象</target>
        </trans-unit>
        <trans-unit id="04a372dab2b1d8a942ab1b2063b60fdcc95c3fb8" translate="yes" xml:space="preserve">
          <source>Media files are uploaded by your users. They&amp;rsquo;re untrusted! Make sure your web server never attempts to interpret them. For instance, if a user uploads a &lt;code&gt;.php&lt;/code&gt; file, the web server shouldn&amp;rsquo;t execute it.</source>
          <target state="translated">媒体文件由您的用户上传。他们是不信任的！确保您的Web服务器从不尝试解释它们。例如，如果用户上传 &lt;code&gt;.php&lt;/code&gt; 文件，则Web服务器不应执行该文件。</target>
        </trans-unit>
        <trans-unit id="edc301f7283a9e45e85a8a8deab4551d236d86a4" translate="yes" xml:space="preserve">
          <source>Memcached</source>
          <target state="translated">Memcached</target>
        </trans-unit>
        <trans-unit id="3e4380f0ac1531148db9193c0aeaa68f7bbaf08d" translate="yes" xml:space="preserve">
          <source>Memcached backends pass the contents of &lt;a href=&quot;../ref/settings#std:setting-CACHES-OPTIONS&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt; as keyword arguments to the client constructors, allowing for more advanced control of client behavior. For example usage, see below.</source>
          <target state="translated">Memcached后端将&lt;a href=&quot;../ref/settings#std:setting-CACHES-OPTIONS&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; &lt;/a&gt;的内容作为关键字参数传递给客户端构造函数，从而可以更高级地控制客户端行为。有关用法示例，请参见下文。</target>
        </trans-unit>
        <trans-unit id="fe2d49e9df412b554e332a39a2726c89c1318ae2" translate="yes" xml:space="preserve">
          <source>Memcached runs as a daemon and is allotted a specified amount of RAM. All it does is provide a fast interface for adding, retrieving and deleting data in the cache. All data is stored directly in memory, so there&amp;rsquo;s no overhead of database or filesystem usage.</source>
          <target state="translated">Memcached作为守护程序运行，并分配了指定数量的RAM。它所做的只是提供一个用于添加，检索和删除缓存中数据的快速接口。所有数据都直接存储在内存中，因此没有数据库或文件系统使用的开销。</target>
        </trans-unit>
        <trans-unit id="8adc1f5324b8d52b9b22d6eba639e747916c344c" translate="yes" xml:space="preserve">
          <source>Memcached, the most commonly-used production cache backend, does not allow cache keys longer than 250 characters or containing whitespace or control characters, and using such keys will cause an exception. To encourage cache-portable code and minimize unpleasant surprises, the other built-in cache backends issue a warning (&lt;code&gt;django.core.cache.backends.base.CacheKeyWarning&lt;/code&gt;) if a key is used that would cause an error on memcached.</source>
          <target state="translated">Memcached是最常用的生产缓存后端，它不允许长度超过250个字符或包含空格或控制字符的缓存键，并且使用此类键会导致异常。为了鼓励缓存可移植的代码并最大程度地减少令人不快的意外，如果使用的键会导致memcached错误，则其他内置的缓存后端会发出警告（ &lt;code&gt;django.core.cache.backends.base.CacheKeyWarning&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7315f949ce30d24b2c84415a3ec8ab22d9946b98" translate="yes" xml:space="preserve">
          <source>Message files</source>
          <target state="translated">信息文件</target>
        </trans-unit>
        <trans-unit id="8a3f4ed084336620d7b21bf9a32d845342f802b8" translate="yes" xml:space="preserve">
          <source>Message levels</source>
          <target state="translated">信息等级</target>
        </trans-unit>
        <trans-unit id="3ab63989bf9a5038b658c5d4c375220ce4a1ad58" translate="yes" xml:space="preserve">
          <source>Message middleware</source>
          <target state="translated">信息中间件</target>
        </trans-unit>
        <trans-unit id="889993ad5e8282135d84fbb43d72e81128bd864a" translate="yes" xml:space="preserve">
          <source>Message tags</source>
          <target state="translated">留言标签</target>
        </trans-unit>
        <trans-unit id="129739eac18a8e97b6afdd53b93d70391d1ea0f8" translate="yes" xml:space="preserve">
          <source>Message tags are a string representation of the message level plus any extra tags that were added directly in the view (see &lt;a href=&quot;#adding-extra-message-tags&quot;&gt;Adding extra message tags&lt;/a&gt; below for more details). Tags are stored in a string and are separated by spaces. Typically, message tags are used as CSS classes to customize message style based on message type. By default, each level has a single tag that&amp;rsquo;s a lowercase version of its own constant:</source>
          <target state="translated">消息标签是消息级别的字符串表示形式，以及直接在视图中添加的所有其他标签（有关更多详细信息，请参见下面的&lt;a href=&quot;#adding-extra-message-tags&quot;&gt;添加其他消息标签&lt;/a&gt;）。标签存储在字符串中，并用空格分隔。通常，消息标记用作CSS类，以根据消息类型自定义消息样式。默认情况下，每个级别都有一个标记，该标记是其自身常量的小写版本：</target>
        </trans-unit>
        <trans-unit id="f1702b4686278becffc88baabe6f4b7a8355532c" translate="yes" xml:space="preserve">
          <source>Messages</source>
          <target state="translated">Messages</target>
        </trans-unit>
        <trans-unit id="624996c17c837f1f6668cb6415dfad8e3d8884e1" translate="yes" xml:space="preserve">
          <source>Messages are comparable. That allows you to easily write tests:</source>
          <target state="translated">消息是可以比较的。这让你可以轻松地编写测试。</target>
        </trans-unit>
        <trans-unit id="a181e64242c1481fec9677caa37392da3000ad86" translate="yes" xml:space="preserve">
          <source>Messages are implemented through a &lt;a href=&quot;../middleware&quot;&gt;middleware&lt;/a&gt; class and corresponding &lt;a href=&quot;../templates/api&quot;&gt;context processor&lt;/a&gt;.</source>
          <target state="translated">消息是通过&lt;a href=&quot;../middleware&quot;&gt;中间件&lt;/a&gt;类和相应的&lt;a href=&quot;../templates/api&quot;&gt;上下文处理器实现的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dd219d05f6a7f3c767dd3fb3a161b3995ee9e9a7" translate="yes" xml:space="preserve">
          <source>Messages framework</source>
          <target state="translated">消息框架</target>
        </trans-unit>
        <trans-unit id="a7f63713d0d8953f6ed46c9ee2e3e3db8b179309" translate="yes" xml:space="preserve">
          <source>Messages levels are nothing more than integers, so you can define your own level constants and use them to create more customized user feedback, e.g.:</source>
          <target state="translated">消息级别不过是整数,所以你可以定义你自己的级别常数,并使用它们来创建更多的自定义用户反馈,例如:。</target>
        </trans-unit>
        <trans-unit id="fac15d4ec7ca50bd18d6e6dc1f5c0d39428a8296" translate="yes" xml:space="preserve">
          <source>Messages relating to the interaction of code with the database. For example, every application-level SQL statement executed by a request is logged at the &lt;code&gt;DEBUG&lt;/code&gt; level to this logger.</source>
          <target state="translated">与代码与数据库的交互有关的消息。例如，请求执行的每个应用程序级SQL语句都在 &lt;code&gt;DEBUG&lt;/code&gt; 级别记录到此记录器。</target>
        </trans-unit>
        <trans-unit id="4fe57b41a0a77a8786566d6da2db51c95d96ec43" translate="yes" xml:space="preserve">
          <source>Messages to this logger have the following extra context:</source>
          <target state="translated">发送给此记录仪的消息有以下额外的上下文。</target>
        </trans-unit>
        <trans-unit id="80427fec440b3b33fe3d42e609fafaf5d7908f0b" translate="yes" xml:space="preserve">
          <source>Meter, Metre</source>
          <target state="translated">米,米</target>
        </trans-unit>
        <trans-unit id="6cc183aef428f6d3047aa1c84a2802cd7e666781" translate="yes" xml:space="preserve">
          <source>Method called prior to &lt;a href=&quot;#django.db.models.Field.get_db_prep_save&quot;&gt;&lt;code&gt;get_db_prep_save()&lt;/code&gt;&lt;/a&gt; to prepare the value before being saved (e.g. for &lt;a href=&quot;#django.db.models.DateField.auto_now&quot;&gt;&lt;code&gt;DateField.auto_now&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">在&lt;a href=&quot;#django.db.models.Field.get_db_prep_save&quot;&gt; &lt;code&gt;get_db_prep_save()&lt;/code&gt; &lt;/a&gt;之前调用的方法，用于在保存之前准备值（例如，对于&lt;a href=&quot;#django.db.models.DateField.auto_now&quot;&gt; &lt;code&gt;DateField.auto_now&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c8237e11e2d1fac8d031550b39dcb305f6b132f9" translate="yes" xml:space="preserve">
          <source>Method-calling happens in the &lt;a href=&quot;../ref/templates/builtins#std:templatetag-for&quot;&gt;&lt;code&gt;{% for %}&lt;/code&gt;&lt;/a&gt; loop: &lt;code&gt;question.choice_set.all&lt;/code&gt; is interpreted as the Python code &lt;code&gt;question.choice_set.all()&lt;/code&gt;, which returns an iterable of &lt;code&gt;Choice&lt;/code&gt; objects and is suitable for use in the &lt;a href=&quot;../ref/templates/builtins#std:templatetag-for&quot;&gt;&lt;code&gt;{% for %}&lt;/code&gt;&lt;/a&gt; tag.</source>
          <target state="translated">方法调用发生在&lt;a href=&quot;../ref/templates/builtins#std:templatetag-for&quot;&gt; &lt;code&gt;{% for %}&lt;/code&gt; &lt;/a&gt;循环中： &lt;code&gt;question.choice_set.all&lt;/code&gt; 被解释为Python代码 &lt;code&gt;question.choice_set.all()&lt;/code&gt; ，该代码返回一个可迭代的 &lt;code&gt;Choice&lt;/code&gt; 对象，适合在&lt;a href=&quot;../ref/templates/builtins#std:templatetag-for&quot;&gt; &lt;code&gt;{% for %}&lt;/code&gt; &lt;/a&gt;标签。</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="5110517bbb0ceecfc811636098d300a818bd2903" translate="yes" xml:space="preserve">
          <source>Methods are copied according to the following rules:</source>
          <target state="translated">方法按以下规则复制。</target>
        </trans-unit>
        <trans-unit id="c29b6a782cb3466448adea0bbc4942ee85bf4b9c" translate="yes" xml:space="preserve">
          <source>Methods implementing a file-like interface for reading from an &lt;code&gt;HttpRequest&lt;/code&gt; instance. This makes it possible to consume an incoming request in a streaming fashion. A common use-case would be to process a big XML payload with an iterative parser without constructing a whole XML tree in memory.</source>
          <target state="translated">实现从 &lt;code&gt;HttpRequest&lt;/code&gt; 实例读取的类文件接口的方法。这使得可以以流方式消耗传入的请求。一个常见的用例是使用迭代解析器处理大型XML有效负载，而无需在内存中构造整个XML树。</target>
        </trans-unit>
        <trans-unit id="7537f0d772e0cefae12a5778f293452376697984" translate="yes" xml:space="preserve">
          <source>Methods of &lt;code&gt;BoundField&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BoundField&lt;/code&gt; 的方法</target>
        </trans-unit>
        <trans-unit id="d7e863f4f1c1be0d2a8f2373d48bcee8d5acaf1b" translate="yes" xml:space="preserve">
          <source>Methods on &lt;code&gt;ContentType&lt;/code&gt; instances</source>
          <target state="translated">&lt;code&gt;ContentType&lt;/code&gt; 实例上的方法</target>
        </trans-unit>
        <trans-unit id="d351ad385bfedf9cba6858a1efa5aa57dc9698a4" translate="yes" xml:space="preserve">
          <source>Methods that do not return &lt;code&gt;QuerySet&lt;/code&gt;s</source>
          <target state="translated">不返回 &lt;code&gt;QuerySet&lt;/code&gt; 的方法</target>
        </trans-unit>
        <trans-unit id="6fd9ae43b3e6c8f254de171e1a039e0f3d4c6292" translate="yes" xml:space="preserve">
          <source>Methods that it provides can be used to:</source>
          <target state="translated">它提供的方法可以用来:</target>
        </trans-unit>
        <trans-unit id="50171e2f44297086d6687ff051c7db91aa0d69c5" translate="yes" xml:space="preserve">
          <source>Methods that return new &lt;code&gt;QuerySet&lt;/code&gt;s</source>
          <target state="translated">返回新 &lt;code&gt;QuerySet&lt;/code&gt; 的方法</target>
        </trans-unit>
        <trans-unit id="34b62d647fb1aa8ee6a32fabd2dd97436495a6e7" translate="yes" xml:space="preserve">
          <source>Methods with a &lt;code&gt;queryset_only&lt;/code&gt; attribute set to &lt;code&gt;False&lt;/code&gt; are always copied.</source>
          <target state="translated">将 &lt;code&gt;queryset_only&lt;/code&gt; 属性设置为 &lt;code&gt;False&lt;/code&gt; 的方法始终复制。</target>
        </trans-unit>
        <trans-unit id="b92a882f4327d805f08dc3ac7925cb366b015a77" translate="yes" xml:space="preserve">
          <source>Methods with a &lt;code&gt;queryset_only&lt;/code&gt; attribute set to &lt;code&gt;True&lt;/code&gt; are never copied.</source>
          <target state="translated">用方法 &lt;code&gt;queryset_only&lt;/code&gt; 属性设置为 &lt;code&gt;True&lt;/code&gt; 永远不会被复制。</target>
        </trans-unit>
        <trans-unit id="415e8975c1cd5ee32623426c5ac3a1fbe4a66920" translate="yes" xml:space="preserve">
          <source>Micrometer, Micrometre</source>
          <target state="translated">千分尺,微米</target>
        </trans-unit>
        <trans-unit id="4ac4affa2d0ba5a96fdb55b5878f3a9560d8453e" translate="yes" xml:space="preserve">
          <source>Microseconds.</source>
          <target state="translated">Microseconds.</target>
        </trans-unit>
        <trans-unit id="8650e63c88329a081961555eda8eb1cef5d7d48c" translate="yes" xml:space="preserve">
          <source>Microsoft SQL Server</source>
          <target state="translated">微软SQL服务器</target>
        </trans-unit>
        <trans-unit id="eb8978ed84b5906ad4191a0b252828be64701bfa" translate="yes" xml:space="preserve">
          <source>Middleware</source>
          <target state="translated">Middleware</target>
        </trans-unit>
        <trans-unit id="013b752afcfb9baaa62063cabcd12f518b56607e" translate="yes" xml:space="preserve">
          <source>Middleware are run in reverse order during the response phase, which includes &lt;code&gt;process_template_response()&lt;/code&gt;.</source>
          <target state="translated">中间件在响应阶段以相反的顺序运行，其中包括 &lt;code&gt;process_template_response()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="28bfdccf26e23c2219c9da6bf7f094e33a3e7c1d" translate="yes" xml:space="preserve">
          <source>Middleware can be built to support &lt;a href=&quot;http/middleware#async-middleware&quot;&gt;both sync and async&lt;/a&gt; contexts. Some of Django&amp;rsquo;s middleware is built like this, but not all. To see what middleware Django has to adapt, you can turn on debug logging for the &lt;code&gt;django.request&lt;/code&gt; logger and look for log messages about &lt;em&gt;&amp;ldquo;Synchronous middleware &amp;hellip; adapted&amp;rdquo;&lt;/em&gt;.</source>
          <target state="translated">可以构建中间件来支持&lt;a href=&quot;http/middleware#async-middleware&quot;&gt;同步和异步&lt;/a&gt;上下文。Django的某些中间件是这样构建的，但不是全部。要查看Django必须适应哪种中间件，您可以打开 &lt;code&gt;django.request&lt;/code&gt; 记录器的调试日志记录，并查找有关&lt;em&gt;&amp;ldquo; Synchronous middleware&amp;hellip; &lt;/em&gt;Adapted &lt;em&gt;&amp;rdquo;的&lt;/em&gt;日志消息。</target>
        </trans-unit>
        <trans-unit id="61de36f228910e5410cf91d320477c17afac3493" translate="yes" xml:space="preserve">
          <source>Middleware can either support only synchronous Python (the default), only asynchronous Python, or both. See &lt;a href=&quot;#async-middleware&quot;&gt;Asynchronous support&lt;/a&gt; for details of how to advertise what you support, and know what kind of request you are getting.</source>
          <target state="translated">中间件只能支持同步Python（默认设置），仅支持异步Python或两者都支持。请参阅&lt;a href=&quot;#async-middleware&quot;&gt;异步支持，&lt;/a&gt;以获取有关如何宣传支持的内容以及如何获得请求的详细信息。</target>
        </trans-unit>
        <trans-unit id="c0fd4a19dba75def9d8c0d763f8181a885326acd" translate="yes" xml:space="preserve">
          <source>Middleware can live anywhere on your Python path.</source>
          <target state="translated">中间件可以存在于Python路径的任何地方。</target>
        </trans-unit>
        <trans-unit id="40a8812d6b3db5cc375256adc59ffac6ac735c17" translate="yes" xml:space="preserve">
          <source>Middleware can support any combination of synchronous and asynchronous requests. Django will adapt requests to fit the middleware&amp;rsquo;s requirements if it cannot support both, but at a performance penalty.</source>
          <target state="translated">中间件可以支持同步和异步请求的任意组合。如果Django无法同时支持两者，则将调整请求以适合中间件的要求。</target>
        </trans-unit>
        <trans-unit id="041ebd3d71ecfcfc34214d0415172c97361cd2c1" translate="yes" xml:space="preserve">
          <source>Middleware factories must accept a &lt;code&gt;get_response&lt;/code&gt; argument. You can also initialize some global state for the middleware. Keep in mind a couple of caveats:</source>
          <target state="translated">中间件工厂必须接受 &lt;code&gt;get_response&lt;/code&gt; 参数。您还可以初始化中间件的某些全局状态。请记住以下几点警告：</target>
        </trans-unit>
        <trans-unit id="becb94e67378bbdc666f92221c00fee5d9c7782a" translate="yes" xml:space="preserve">
          <source>Middleware for utilizing Web server provided authentication when enabled only on the login page. See &lt;a href=&quot;../howto/auth-remote-user#persistent-remote-user-middleware-howto&quot;&gt;Using REMOTE_USER on login pages only&lt;/a&gt; for usage details.</source>
          <target state="translated">仅在登录页面上启用时，用于利用Web服务器的中间件提供了身份验证。有关用法的详细信息，请参阅&lt;a href=&quot;../howto/auth-remote-user#persistent-remote-user-middleware-howto&quot;&gt;仅在登录页面上使用REMOTE_USER&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="273bb01c3c655949e84e50a76a64ca07929efe48" translate="yes" xml:space="preserve">
          <source>Middleware for utilizing Web server provided authentication. See &lt;a href=&quot;../howto/auth-remote-user&quot;&gt;Authentication using REMOTE_USER&lt;/a&gt; for usage details.</source>
          <target state="translated">利用Web服务器的中间件提供了身份验证。有关用法的详细信息，请参见&lt;a href=&quot;../howto/auth-remote-user&quot;&gt;使用REMOTE_USER&lt;/a&gt;进行身份验证。</target>
        </trans-unit>
        <trans-unit id="c162271e592b254696ec9da70c5a639a0962dbfb" translate="yes" xml:space="preserve">
          <source>Middleware is a framework of hooks into Django&amp;rsquo;s request/response processing. It&amp;rsquo;s a light, low-level &amp;ldquo;plugin&amp;rdquo; system for globally altering Django&amp;rsquo;s input or output.</source>
          <target state="translated">中间件是挂钩Django请求/响应处理的框架。这是一个轻量级的&amp;ldquo;插件&amp;rdquo;系统，用于全局更改Django的输入或输出。</target>
        </trans-unit>
        <trans-unit id="5f879bb383b1e685c9b8aed3ac05060d2ce8fdde" translate="yes" xml:space="preserve">
          <source>Middleware order and layering</source>
          <target state="translated">中间件顺序和分层</target>
        </trans-unit>
        <trans-unit id="f978b6bdf37893405edce30440dd6cdeed90da10" translate="yes" xml:space="preserve">
          <source>Middleware ordering</source>
          <target state="translated">中间件订购</target>
        </trans-unit>
        <trans-unit id="7a60d1acaad6e279a7e85ba440a4702e817dfa62" translate="yes" xml:space="preserve">
          <source>Migrating data between third-party apps</source>
          <target state="translated">在第三方应用程序之间迁移数据</target>
        </trans-unit>
        <trans-unit id="6104f9f7c588f7a77e0522afbc5dfe496325f1fa" translate="yes" xml:space="preserve">
          <source>Migration Operations</source>
          <target state="translated">迁移业务</target>
        </trans-unit>
        <trans-unit id="8e03381bda29b3c39bbf1a66cfd648f8b31e67c1" translate="yes" xml:space="preserve">
          <source>Migration files</source>
          <target state="translated">迁移文件</target>
        </trans-unit>
        <trans-unit id="53ff3d249382d25863d2b7fb6623728e99a7bc35" translate="yes" xml:space="preserve">
          <source>Migration files are composed of one or more &lt;code&gt;Operation&lt;/code&gt;s, objects that declaratively record what the migration should do to your database.</source>
          <target state="translated">迁移文件由一个或多个 &lt;code&gt;Operation&lt;/code&gt; 组成，这些对象声明性地记录了迁移应该对数据库执行的操作。</target>
        </trans-unit>
        <trans-unit id="c25bf8db0829f899a4a501088ef01329564b4b8f" translate="yes" xml:space="preserve">
          <source>Migration guide</source>
          <target state="translated">迁移指南</target>
        </trans-unit>
        <trans-unit id="7e2da04ce43cf92a7b18834d64966f83c65ad531" translate="yes" xml:space="preserve">
          <source>Migration operation for adding extensions</source>
          <target state="translated">添加扩展的迁移操作</target>
        </trans-unit>
        <trans-unit id="dca984afd74a0089c1d5a5816e4de2e8d46a60b5" translate="yes" xml:space="preserve">
          <source>Migrations</source>
          <target state="translated">Migrations</target>
        </trans-unit>
        <trans-unit id="f2a9aa05174d5ea271caefdf9a694cb35808cba9" translate="yes" xml:space="preserve">
          <source>Migrations are Django&amp;rsquo;s way of propagating changes you make to your models (adding a field, deleting a model, etc.) into your database schema. They&amp;rsquo;re designed to be mostly automatic, but you&amp;rsquo;ll need to know when to make migrations, when to run them, and the common problems you might run into.</source>
          <target state="translated">迁移是Django将您对模型所做的更改（添加字段，删除模型等）传播到数据库模式的一种方式。它们的设计基本上是自动的，但是您需要知道何时进行迁移，何时运行它们以及可能遇到的常见问题。</target>
        </trans-unit>
        <trans-unit id="5860dbdc436c899604f2a6b5c077a545ec4c3e15" translate="yes" xml:space="preserve">
          <source>Migrations are Python files containing the old definitions of your models - thus, to write them, Django must take the current state of your models and serialize them out into a file.</source>
          <target state="translated">Migrations是Python文件,包含了你的模型的旧定义--因此,要写它们,Django必须把你的模型的当前状态序列化到一个文件中。</target>
        </trans-unit>
        <trans-unit id="4201b97e35b606bb8ab03e0bf508dc53754b71ae" translate="yes" xml:space="preserve">
          <source>Migrations are how Django stores changes to your models (and thus your database schema) - they&amp;rsquo;re files on disk. You can read the migration for your new model if you like; it&amp;rsquo;s the file &lt;code&gt;polls/migrations/0001_initial.py&lt;/code&gt;. Don&amp;rsquo;t worry, you&amp;rsquo;re not expected to read them every time Django makes one, but they&amp;rsquo;re designed to be human-editable in case you want to manually tweak how Django changes things.</source>
          <target state="translated">迁移是Django将更改存储到模型（以及数据库模式）的方式-它们是磁盘上的文件。如果愿意，您可以阅读新模型的迁移信息。这是文件 &lt;code&gt;polls/migrations/0001_initial.py&lt;/code&gt; 。不用担心，不要期望每次Django都读完它们，但是如果您想手动调整Django的更改方式，则可以对它们进行人工编辑。</target>
        </trans-unit>
        <trans-unit id="8520b8c8572a999f56ebaca25b392b1e5a7fd768" translate="yes" xml:space="preserve">
          <source>Migrations are stored as an on-disk format, referred to here as &amp;ldquo;migration files&amp;rdquo;. These files are actually normal Python files with an agreed-upon object layout, written in a declarative style.</source>
          <target state="translated">迁移以磁盘格式存储，在此称为&amp;ldquo;迁移文件&amp;rdquo;。这些文件实际上是普通的Python文件，具有声明性的对象布局，以声明方式编写。</target>
        </trans-unit>
        <trans-unit id="2a332c317bf1d0e60fbc32123e8677f7cc70c2ae" translate="yes" xml:space="preserve">
          <source>Migrations are supported on all backends that Django ships with, as well as any third-party backends if they have programmed in support for schema alteration (done via the &lt;a href=&quot;../ref/schema-editor&quot;&gt;SchemaEditor&lt;/a&gt; class).</source>
          <target state="translated">Django随附的所有后端以及所有第三方后端（如果它们已编程为支持架构更改而编程）都支持&lt;a href=&quot;../ref/schema-editor&quot;&gt;迁移&lt;/a&gt;（通过SchemaEditor类完成）。</target>
        </trans-unit>
        <trans-unit id="d8a210ab1a3d79accd51ed6fcf26ac6e586f421a" translate="yes" xml:space="preserve">
          <source>Migrations are very powerful and let you change your models over time, as you develop your project, without the need to delete your database or tables and make new ones - it specializes in upgrading your database live, without losing data. We&amp;rsquo;ll cover them in more depth in a later part of the tutorial, but for now, remember the three-step guide to making model changes:</source>
          <target state="translated">迁移功能非常强大，可以在开发项目时随时间更改模型，而无需删除数据库或表并创建新模型-它专门用于实时升级数据库而不会丢失数据。我们将在本教程的后面部分对它们进行更深入的介绍，但是现在，请记住进行模型更改的三步指南：</target>
        </trans-unit>
        <trans-unit id="41654abea0665f9a7a61031904f82652ca108fd1" translate="yes" xml:space="preserve">
          <source>Migrations can be reversed with &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; by passing the number of the previous migration. For example, to reverse migration &lt;code&gt;books.0003&lt;/code&gt;:</source>
          <target state="translated">迁移可以逆转&lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;通过将以前迁移的数量。例如，要反向迁移 &lt;code&gt;books.0003&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="287dd3417d62ad864c57a1c97b22ab37b12724d5" translate="yes" xml:space="preserve">
          <source>Migrations that add unique fields</source>
          <target state="translated">增加独特字段的迁移</target>
        </trans-unit>
        <trans-unit id="ee3e9d3540e1e45a2df1c00240d8e8d4a4deb51c" translate="yes" xml:space="preserve">
          <source>Migrations that alter data are usually called &amp;ldquo;data migrations&amp;rdquo;; they&amp;rsquo;re best written as separate migrations, sitting alongside your schema migrations.</source>
          <target state="translated">更改数据的迁移通常称为&amp;ldquo;数据迁移&amp;rdquo;；最好将它们编写为单独的迁移，并与模式迁移并列。</target>
        </trans-unit>
        <trans-unit id="5ec5bf73e34a683f1006273ac17e9ff09e9d9e72" translate="yes" xml:space="preserve">
          <source>Migrations will run the same way on the same dataset and produce consistent results, meaning that what you see in development and staging is, under the same circumstances, exactly what will happen in production.</source>
          <target state="translated">迁移将以相同的方式在相同的数据集上运行,并产生一致的结果,这意味着你在开发和暂存中看到的东西,在相同的情况下,正是生产中会发生的。</target>
        </trans-unit>
        <trans-unit id="2eb4f2a30749a0e17e31104b3bab726aafe81cf3" translate="yes" xml:space="preserve">
          <source>Mile</source>
          <target state="translated">Mile</target>
        </trans-unit>
        <trans-unit id="938df1db624a12e5f3794fda79717eccaea7b65b" translate="yes" xml:space="preserve">
          <source>Millimetre, Millimeter</source>
          <target state="translated">毫米,毫米</target>
        </trans-unit>
        <trans-unit id="294882601354ee55d0273a6e0801814fd33c87c2" translate="yes" xml:space="preserve">
          <source>Mind your charset</source>
          <target state="translated">注意你的字符集</target>
        </trans-unit>
        <trans-unit id="a3fc900f874bc71a36d5a756225bfdc1f04f6842" translate="yes" xml:space="preserve">
          <source>Minutes is the smallest unit used, and &amp;ldquo;0 minutes&amp;rdquo; will be returned for any date that is in the future relative to the comparison point.</source>
          <target state="translated">分钟是所用的最小单位，对于将来相对于比较点的任何日期，将返回&amp;ldquo; 0分钟&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="9f34801db80740b6f10ab3922d189b3912dbf6f0" translate="yes" xml:space="preserve">
          <source>Minutes is the smallest unit used, and &amp;ldquo;0 minutes&amp;rdquo; will be returned for any date that is in the past relative to the comparison point.</source>
          <target state="translated">分钟是使用的最小单位，相对于比较点过去的任何日期都将返回&amp;ldquo; 0分钟&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="8ed20376662d49d565aa06cdaa83fc71ecbc93eb" translate="yes" xml:space="preserve">
          <source>Minutes.</source>
          <target state="translated">Minutes.</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="881da705478e54a3227ce93b7e1330829ae0e155" translate="yes" xml:space="preserve">
          <source>Missing context variables are logged as &lt;code&gt;DEBUG&lt;/code&gt; messages.</source>
          <target state="translated">缺少的上下文变量将记录为 &lt;code&gt;DEBUG&lt;/code&gt; 消息。</target>
        </trans-unit>
        <trans-unit id="6814e874673f049fff670e46ee2d5ebe0602c10a" translate="yes" xml:space="preserve">
          <source>Mitre ratio limit (&lt;code&gt;mitre_limit&lt;/code&gt;) only affects mitered join style.</source>
          <target state="translated">&lt;code&gt;mitre_limit&lt;/code&gt; 比率限制（mitre_limit）仅影响斜接连接样式。</target>
        </trans-unit>
        <trans-unit id="dcb555521dabc0a453c76cc4ab7c56dcedf3418e" translate="yes" xml:space="preserve">
          <source>Mixing HTTP and HTTPS on the same site is discouraged, therefore &lt;a href=&quot;#django.http.HttpRequest.build_absolute_uri&quot;&gt;&lt;code&gt;build_absolute_uri()&lt;/code&gt;&lt;/a&gt; will always generate an absolute URI with the same scheme the current request has. If you need to redirect users to HTTPS, it&amp;rsquo;s best to let your Web server redirect all HTTP traffic to HTTPS.</source>
          <target state="translated">不建议在同一站点上混合使用HTTP和HTTPS，因此&lt;a href=&quot;#django.http.HttpRequest.build_absolute_uri&quot;&gt; &lt;code&gt;build_absolute_uri()&lt;/code&gt; &lt;/a&gt;将始终以与当前请求相同的方案生成绝对URI。如果您需要将用户重定向到HTTPS，最好让您的Web服务器将所有HTTP通信重定向到HTTPS。</target>
        </trans-unit>
        <trans-unit id="6405571c37c55f3908e016d6f0d1bc7dd1ad7b90" translate="yes" xml:space="preserve">
          <source>Mixins are a form of multiple inheritance where behaviors and attributes of multiple parent classes can be combined.</source>
          <target state="translated">Mixins是一种多继承的形式,在这里可以将多个父类的行为和属性结合起来。</target>
        </trans-unit>
        <trans-unit id="7faff22844ff4aa0e265d825accaee88c80b838d" translate="yes" xml:space="preserve">
          <source>Mixins are an excellent way of reusing code across multiple classes, but they come with some cost. The more your code is scattered among mixins, the harder it will be to read a child class and know what exactly it is doing, and the harder it will be to know which methods from which mixins to override if you are subclassing something that has a deep inheritance tree.</source>
          <target state="translated">Mixins是在多个类中重用代码的绝佳方式,但它们也有一定的代价。你的代码越是分散在mixins中,你就越难读懂一个子类并知道它到底在做什么,而且如果你要子类化一些有很深继承树的东西,你就越难知道要覆盖哪些mixins中的哪些方法。</target>
        </trans-unit>
        <trans-unit id="8b491ee73979a719bb1af9d3247e0a61ac5e7319" translate="yes" xml:space="preserve">
          <source>Model &lt;code&gt;Meta&lt;/code&gt; options</source>
          <target state="translated">模型 &lt;code&gt;Meta&lt;/code&gt; 选项</target>
        </trans-unit>
        <trans-unit id="bfdb5bfd735f8228097410fff85a12d88904e922" translate="yes" xml:space="preserve">
          <source>Model &lt;code&gt;_meta&lt;/code&gt; API</source>
          <target state="translated">型号 &lt;code&gt;_meta&lt;/code&gt; API</target>
        </trans-unit>
        <trans-unit id="cec2b6199d9a2dcabb152e3ac5aa91edeb898132" translate="yes" xml:space="preserve">
          <source>Model API reference. For introductory material, see &lt;a href=&quot;../../topics/db/models&quot;&gt;Models&lt;/a&gt;.</source>
          <target state="translated">模型API参考。有关入门资料，请参见&lt;a href=&quot;../../topics/db/models&quot;&gt;模型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9bf86752979128e4676b84c447ce0cf15b2b37d6" translate="yes" xml:space="preserve">
          <source>Model Form API reference. For introductory material about model forms, see the &lt;a href=&quot;../../topics/forms/modelforms&quot;&gt;Creating forms from models&lt;/a&gt; topic guide.</source>
          <target state="translated">模型表格API参考。有关模型表单的入门资料，请参阅&lt;a href=&quot;../../topics/forms/modelforms&quot;&gt;从模型创建表单&lt;/a&gt;主题指南。</target>
        </trans-unit>
        <trans-unit id="3c96d990f2ccf84f92cf27b02cad319aaaf78f8b" translate="yes" xml:space="preserve">
          <source>Model Form Functions</source>
          <target state="translated">模型形式功能</target>
        </trans-unit>
        <trans-unit id="43751733528e91e6a81ee1390944c2f4caa1db81" translate="yes" xml:space="preserve">
          <source>Model Meta options</source>
          <target state="translated">模型元选项</target>
        </trans-unit>
        <trans-unit id="cda29083574ba4f14bce85088566ec29f2d87d35" translate="yes" xml:space="preserve">
          <source>Model _meta API</source>
          <target state="translated">模型_API目标</target>
        </trans-unit>
        <trans-unit id="28ca529d99e4855dd276594af7db79215340645f" translate="yes" xml:space="preserve">
          <source>Model attributes</source>
          <target state="translated">模型属性</target>
        </trans-unit>
        <trans-unit id="15ac726910ce828d6f749b66392ad113e9e02cc8" translate="yes" xml:space="preserve">
          <source>Model class reference</source>
          <target state="translated">模型类参考</target>
        </trans-unit>
        <trans-unit id="37287d65959cefe51226e772fa03bd4238e3e0c1" translate="yes" xml:space="preserve">
          <source>Model field</source>
          <target state="translated">示范场</target>
        </trans-unit>
        <trans-unit id="41719e961e289e645a51ec9bdd2cad757b697d54" translate="yes" xml:space="preserve">
          <source>Model field reference</source>
          <target state="translated">外地参考模型</target>
        </trans-unit>
        <trans-unit id="695921f5cbf66d3a0c35cce9afebbff6926a0687" translate="yes" xml:space="preserve">
          <source>Model fields</source>
          <target state="translated">模型领域</target>
        </trans-unit>
        <trans-unit id="d56e51d2d60a86a3949592b2c8a12b4b1ebf5d14" translate="yes" xml:space="preserve">
          <source>Model fields and relationships &lt;code&gt;verbose_name&lt;/code&gt; and &lt;code&gt;help_text&lt;/code&gt; option values</source>
          <target state="translated">模型字段和关系 &lt;code&gt;verbose_name&lt;/code&gt; 和 &lt;code&gt;help_text&lt;/code&gt; 选项值</target>
        </trans-unit>
        <trans-unit id="1e80f8624b932b0e8e91e5056ff5d83c4a905b6b" translate="yes" xml:space="preserve">
          <source>Model form views provide a &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ModelFormMixin.form_valid&quot;&gt;&lt;code&gt;form_valid()&lt;/code&gt;&lt;/a&gt; implementation that saves the model automatically. You can override this if you have any special requirements; see below for examples.</source>
          <target state="translated">模型表单视图提供了&lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ModelFormMixin.form_valid&quot;&gt; &lt;code&gt;form_valid()&lt;/code&gt; &lt;/a&gt;实现，该实现可自动保存模型。如果有特殊要求，可以覆盖此设置。请参阅下面的示例。</target>
        </trans-unit>
        <trans-unit id="7a1d7da0b3927cb03dafa5eee91a571920018939" translate="yes" xml:space="preserve">
          <source>Model forms</source>
          <target state="translated">示范表格</target>
        </trans-unit>
        <trans-unit id="d66e24ec33a2b3c68df3f08c48b5b1e196b500a3" translate="yes" xml:space="preserve">
          <source>Model formsets</source>
          <target state="translated">模型表格集</target>
        </trans-unit>
        <trans-unit id="8378c1c9f92338fe290a10e3674d26e5ac280291" translate="yes" xml:space="preserve">
          <source>Model formsets are very similar to formsets. Let&amp;rsquo;s say we want to present a formset to edit &lt;code&gt;Author&lt;/code&gt; model instances:</source>
          <target state="translated">模型表单集与表单集非常相似。假设我们要提供一个表单集来编辑 &lt;code&gt;Author&lt;/code&gt; 模型实例：</target>
        </trans-unit>
        <trans-unit id="65c8939e1430f30633a07f17d075ed74776ac5e3" translate="yes" xml:space="preserve">
          <source>Model formsets validate unique fields in a case-sensitive manner. Thus when using a case-insensitive collation, a formset with unique field values that differ only by case will pass validation, but upon calling &lt;code&gt;save()&lt;/code&gt;, an &lt;code&gt;IntegrityError&lt;/code&gt; will be raised.</source>
          <target state="translated">模型表单集以区分大小写的方式验证唯一字段。因此，当使用不区分大小写的排序规则时，具有唯一字段值（仅因大小写而不同）的表单集将通过验证，但是在调用 &lt;code&gt;save()&lt;/code&gt; 时，将引发 &lt;code&gt;IntegrityError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd41371e5246330c123f4f022d722358234894fa" translate="yes" xml:space="preserve">
          <source>Model index reference</source>
          <target state="translated">型号索引参考</target>
        </trans-unit>
        <trans-unit id="6960b6acac76077e50017099fe2ef244227d2a7b" translate="yes" xml:space="preserve">
          <source>Model inheritance</source>
          <target state="translated">模型继承</target>
        </trans-unit>
        <trans-unit id="5b71c0d1a57d50595ab71717a70ae2e080828c49" translate="yes" xml:space="preserve">
          <source>Model inheritance in Django works almost identically to the way normal class inheritance works in Python, but the basics at the beginning of the page should still be followed. That means the base class should subclass &lt;a href=&quot;../../ref/models/instances#django.db.models.Model&quot;&gt;&lt;code&gt;django.db.models.Model&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Django中的模型继承的工作方式与Python中普通类继承的工作方式几乎相同，但仍应遵循页面开头的基础知识。这意味着基类应该是&lt;a href=&quot;../../ref/models/instances#django.db.models.Model&quot;&gt; &lt;code&gt;django.db.models.Model&lt;/code&gt; 的&lt;/a&gt;子类。</target>
        </trans-unit>
        <trans-unit id="5ca38e74d8be1b734a75b8de59f840b8eac71446" translate="yes" xml:space="preserve">
          <source>Model instance reference</source>
          <target state="translated">模型实例参考</target>
        </trans-unit>
        <trans-unit id="5b0f552413c0fc0955ae8f0d43a9dce0382f6758" translate="yes" xml:space="preserve">
          <source>Model managers</source>
          <target state="translated">模范管理人员</target>
        </trans-unit>
        <trans-unit id="ee0c8a95a9f103b378fe4743340f1323f96c496a" translate="yes" xml:space="preserve">
          <source>Model managers are inherited from abstract base classes. Overriding an inherited field which is referenced by an inherited &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; may cause subtle bugs. See &lt;a href=&quot;managers#custom-managers-and-inheritance&quot;&gt;custom managers and model inheritance&lt;/a&gt;.</source>
          <target state="translated">模型管理器是从抽象基类继承的。覆盖继承的&lt;a href=&quot;managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt;引用的继承字段可能会引起一些细微的错误。请参阅&lt;a href=&quot;managers#custom-managers-and-inheritance&quot;&gt;自定义管理器和模型继承&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e7ef284a8b1cde33fda80d5b952f2b5d4500f805" translate="yes" xml:space="preserve">
          <source>Model metadata is &amp;ldquo;anything that&amp;rsquo;s not a field&amp;rdquo;, such as ordering options (&lt;a href=&quot;../../ref/models/options#django.db.models.Options.ordering&quot;&gt;&lt;code&gt;ordering&lt;/code&gt;&lt;/a&gt;), database table name (&lt;a href=&quot;../../ref/models/options#django.db.models.Options.db_table&quot;&gt;&lt;code&gt;db_table&lt;/code&gt;&lt;/a&gt;), or human-readable singular and plural names (&lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name&quot;&gt;&lt;code&gt;verbose_name&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name_plural&quot;&gt;&lt;code&gt;verbose_name_plural&lt;/code&gt;&lt;/a&gt;). None are required, and adding &lt;code&gt;class
Meta&lt;/code&gt; to a model is completely optional.</source>
          <target state="translated">模型元数据是&amp;ldquo;任何不是字段的东西&amp;rdquo;，例如排序选项（&lt;a href=&quot;../../ref/models/options#django.db.models.Options.ordering&quot;&gt; &lt;code&gt;ordering&lt;/code&gt; &lt;/a&gt;），数据库表名称（&lt;a href=&quot;../../ref/models/options#django.db.models.Options.db_table&quot;&gt; &lt;code&gt;db_table&lt;/code&gt; &lt;/a&gt;）或人类可读的单数和复数名称（&lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name&quot;&gt; &lt;code&gt;verbose_name&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name_plural&quot;&gt; &lt;code&gt;verbose_name_plural&lt;/code&gt; &lt;/a&gt;）。不需要任何操作，并且将 &lt;code&gt;class Meta&lt;/code&gt; 添加到模型是完全可选的。</target>
        </trans-unit>
        <trans-unit id="da0c31f079fa44ab9d3bf1cf67f70d075de29d6d" translate="yes" xml:space="preserve">
          <source>Model methods</source>
          <target state="translated">模型方法</target>
        </trans-unit>
        <trans-unit id="e21aa040365d9fd0e90458c9cdf44ab96ac4b61f" translate="yes" xml:space="preserve">
          <source>Model methods &lt;code&gt;short_description&lt;/code&gt; attribute values</source>
          <target state="translated">模型方法 &lt;code&gt;short_description&lt;/code&gt; 属性值</target>
        </trans-unit>
        <trans-unit id="cfc2c1b4808a8c6c174bac6b735cf6d4817b2770" translate="yes" xml:space="preserve">
          <source>Model reference</source>
          <target state="translated">型号参考</target>
        </trans-unit>
        <trans-unit id="e901998535b4b4548a823fe6e8dff9a51d7e087d" translate="yes" xml:space="preserve">
          <source>Model signals</source>
          <target state="translated">模型信号</target>
        </trans-unit>
        <trans-unit id="c8bfdb89301aaa9bc29391e7c013fd0445caa5ab" translate="yes" xml:space="preserve">
          <source>Model signals &lt;code&gt;sender&lt;/code&gt; model can be lazily referenced when connecting a receiver by specifying its full application label. For example, an &lt;code&gt;Question&lt;/code&gt; model defined in the &lt;code&gt;polls&lt;/code&gt; application could be referenced as &lt;code&gt;'polls.Question'&lt;/code&gt;. This sort of reference can be quite handy when dealing with circular import dependencies and swappable models.</source>
          <target state="translated">通过指定接收器的完整应用标签，可以在连接接收器时延迟引用模型信号 &lt;code&gt;sender&lt;/code&gt; 模型。例如，可以将 &lt;code&gt;polls&lt;/code&gt; 应用程序中定义的 &lt;code&gt;Question&lt;/code&gt; 模型称为 &lt;code&gt;'polls.Question'&lt;/code&gt; 。在处理循环导入依赖项和可交换模型时，此类参考非常方便。</target>
        </trans-unit>
        <trans-unit id="165513e8bf709c70b23fa24d2ae33a838ec202dc" translate="yes" xml:space="preserve">
          <source>Model table names</source>
          <target state="translated">示范表名称</target>
        </trans-unit>
        <trans-unit id="54a980d3853518b4411e7a3b2ddb629ed67ce75d" translate="yes" xml:space="preserve">
          <source>Model verbose names values</source>
          <target state="translated">模特化的名称值</target>
        </trans-unit>
        <trans-unit id="3dc8c7b4713b18469124c44661e6c1bc2f64d7e7" translate="yes" xml:space="preserve">
          <source>ModelForm factory function</source>
          <target state="translated">ModelForm工厂功能</target>
        </trans-unit>
        <trans-unit id="f3798f81c7b6fecad2cbfec741314f8a66c0eca3" translate="yes" xml:space="preserve">
          <source>Models</source>
          <target state="translated">Models</target>
        </trans-unit>
        <trans-unit id="1f5b77557908456acc92fa188a7dd4804d6625a9" translate="yes" xml:space="preserve">
          <source>Models across files</source>
          <target state="translated">跨文件的模型</target>
        </trans-unit>
        <trans-unit id="28356323a61c86746a499dd28b297834e5993733" translate="yes" xml:space="preserve">
          <source>Models and &lt;code&gt;request.user&lt;/code&gt;</source>
          <target state="translated">型号和 &lt;code&gt;request.user&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f50e5bec2539d667d25b642e592d0b97dcede69d" translate="yes" xml:space="preserve">
          <source>Models and Forms</source>
          <target state="translated">模型和形式</target>
        </trans-unit>
        <trans-unit id="4a49aecaa0df41bb8d712681740aeb1f36c1fc1b" translate="yes" xml:space="preserve">
          <source>Models and databases</source>
          <target state="translated">模型和数据库</target>
        </trans-unit>
        <trans-unit id="f9d52954ae89d4a9e2174f5b96bd02ccd7c226bb" translate="yes" xml:space="preserve">
          <source>Models are created for foreign tables.</source>
          <target state="translated">模型是为外来表创建的。</target>
        </trans-unit>
        <trans-unit id="005e6f010a367db7b6295c852fb0fac610e1e07a" translate="yes" xml:space="preserve">
          <source>Models are created for materialized views if &lt;a href=&quot;#cmdoption-inspectdb-include-views&quot;&gt;&lt;code&gt;--include-views&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">如果使用&lt;a href=&quot;#cmdoption-inspectdb-include-views&quot;&gt; &lt;code&gt;--include-views&lt;/code&gt; ,&lt;/a&gt;则会为实例化视图创建模型。</target>
        </trans-unit>
        <trans-unit id="71b4110d21468008c8e0a0e33f9599a8d37cfc02" translate="yes" xml:space="preserve">
          <source>Models are created for partition tables if &lt;a href=&quot;#cmdoption-inspectdb-include-partitions&quot;&gt;&lt;code&gt;--include-partitions&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">如果使用&lt;a href=&quot;#cmdoption-inspectdb-include-partitions&quot;&gt; &lt;code&gt;--include-partitions&lt;/code&gt; ,&lt;/a&gt;则会为分区表创建模型。</target>
        </trans-unit>
        <trans-unit id="de1c8f41efbb309a8f500003679e08088e02a2b4" translate="yes" xml:space="preserve">
          <source>Modern browsers don&amp;rsquo;t honor &lt;code&gt;X-XSS-Protection&lt;/code&gt; HTTP header anymore. Although the setting offers little practical benefit, you may still want to set the header if you support older browsers.</source>
          <target state="translated">现代浏览器不再支持 &lt;code&gt;X-XSS-Protection&lt;/code&gt; HTTP标头。尽管该设置几乎没有实际好处，但是如果您支持较旧的浏览器，则可能仍要设置标题。</target>
        </trans-unit>
        <trans-unit id="e3034007e7d3292d4b30af33ea10b4ff6560349a" translate="yes" xml:space="preserve">
          <source>Modern browsers honor the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options&quot;&gt;X-Frame-Options&lt;/a&gt; HTTP header that indicates whether or not a resource is allowed to load within a frame or iframe. If the response contains the header with a value of &lt;code&gt;SAMEORIGIN&lt;/code&gt; then the browser will only load the resource in a frame if the request originated from the same site. If the header is set to &lt;code&gt;DENY&lt;/code&gt; then the browser will block the resource from loading in a frame no matter which site made the request.</source>
          <target state="translated">现代浏览器采用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options&quot;&gt;X-Frame-Options&lt;/a&gt; HTTP标头，该标头指示是否允许在框架或iframe中加载资源。如果响应中包含标头为 &lt;code&gt;SAMEORIGIN&lt;/code&gt; 的标头，则浏览器将仅在请求源自同一站点的情况下才将资源加载到框架中。如果将标头设置为 &lt;code&gt;DENY&lt;/code&gt; ,则无论哪个站点发出请求，浏览器都将阻止资源加载到框架中。</target>
        </trans-unit>
        <trans-unit id="8c3dd67323c825d3247a42c118aeed74da038214" translate="yes" xml:space="preserve">
          <source>Modern browsers provide a more secure default policy for the &lt;code&gt;SameSite&lt;/code&gt; flag and will assume &lt;code&gt;Lax&lt;/code&gt; for cookies without an explicit value set.</source>
          <target state="translated">现代的浏览器为 &lt;code&gt;SameSite&lt;/code&gt; 标志提供了更安全的默认策略，并将为Cookie设置 &lt;code&gt;Lax&lt;/code&gt; 而不设置显式值。</target>
        </trans-unit>
        <trans-unit id="61e67113000137e6e326a81f0fcb1e0dadbbee68" translate="yes" xml:space="preserve">
          <source>Modify &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt;&lt;code&gt;PASSWORD_HASHERS&lt;/code&gt;&lt;/a&gt; to list &lt;code&gt;Argon2PasswordHasher&lt;/code&gt; first. That is, in your settings file, you&amp;rsquo;d put:</source>
          <target state="translated">修改&lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt; &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; &lt;/a&gt;以首先列出 &lt;code&gt;Argon2PasswordHasher&lt;/code&gt; 。也就是说，在您的设置文件中，您将：</target>
        </trans-unit>
        <trans-unit id="7eae86d823b9275ab9b9bba0c0701ec36c9bc076" translate="yes" xml:space="preserve">
          <source>Modify &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt;&lt;code&gt;PASSWORD_HASHERS&lt;/code&gt;&lt;/a&gt; to list &lt;code&gt;BCryptSHA256PasswordHasher&lt;/code&gt; first. That is, in your settings file, you&amp;rsquo;d put:</source>
          <target state="translated">修改&lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt; &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; &lt;/a&gt;以首先列出 &lt;code&gt;BCryptSHA256PasswordHasher&lt;/code&gt; 。也就是说，在您的设置文件中，您将：</target>
        </trans-unit>
        <trans-unit id="8c82d310179969bace38749c982ea817a33948da" translate="yes" xml:space="preserve">
          <source>Modify Windows environment</source>
          <target state="translated">修改Windows环境</target>
        </trans-unit>
        <trans-unit id="101a18a8e247790ce8a0355c2bad81d18bc06a10" translate="yes" xml:space="preserve">
          <source>Modifying a manager&amp;rsquo;s initial &lt;code&gt;QuerySet&lt;/code&gt;</source>
          <target state="translated">修改经理的初始 &lt;code&gt;QuerySet&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3a3cd384e10d2a50b6cfc40c58749ddd9ddb377" translate="yes" xml:space="preserve">
          <source>Modifying the user libraries can affect other Python software on your system.</source>
          <target state="translated">修改用户库会影响系统中的其他Python软件。</target>
        </trans-unit>
        <trans-unit id="6188e9bec1a9bf83d8f692aed7153e3b5e7d1f67" translate="yes" xml:space="preserve">
          <source>Modifying upload handlers on the fly</source>
          <target state="translated">在飞行中修改上传处理程序</target>
        </trans-unit>
        <trans-unit id="79bf8ae756f6957bd6a600e041cf7b0f01e97d7c" translate="yes" xml:space="preserve">
          <source>Module containing the models, e.g. &lt;code&gt;&amp;lt;module 'django.contrib.admin.models'
from 'django/contrib/admin/models.py'&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">包含模型的 &lt;code&gt;&amp;lt;module 'django.contrib.admin.models' from 'django/contrib/admin/models.py'&amp;gt;&lt;/code&gt; ，例如&amp;lt;django / contrib / admin / models.py'中的&amp;lt;module'django.contrib.admin.models'&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="5914d9d522831d2cbcc08992929a1fa0fffd13f4" translate="yes" xml:space="preserve">
          <source>Month abbreviation in Associated Press style. Proprietary extension.</source>
          <target state="translated">美联社风格的月份缩写。专属扩展。</target>
        </trans-unit>
        <trans-unit id="1547c51f374801edb89bd01a886d7df6c59157e7" translate="yes" xml:space="preserve">
          <source>Month without leading zeros.</source>
          <target state="translated">没有前导零的月份。</target>
        </trans-unit>
        <trans-unit id="789db7de9daf4c3dea26155c4de1508cc63c78dc" translate="yes" xml:space="preserve">
          <source>Month, 2 digits with leading zeros.</source>
          <target state="translated">月份,2位数,前面加0。</target>
        </trans-unit>
        <trans-unit id="6268ce268f58c92a8b8c465bb7039eb42da0b88e" translate="yes" xml:space="preserve">
          <source>Month, locale specific alternative representation usually used for long date representation.</source>
          <target state="translated">月,特定地域的替代表示方法,通常用于长日期表示。</target>
        </trans-unit>
        <trans-unit id="68b6759ae7ec52517f6707eab3f49676fded852c" translate="yes" xml:space="preserve">
          <source>Month, textual, 3 letters, lowercase.</source>
          <target state="translated">月,文字,3个字母,小写。</target>
        </trans-unit>
        <trans-unit id="54acf667cda1d25c557e72b3eecaf3a5e654244a" translate="yes" xml:space="preserve">
          <source>Month, textual, 3 letters.</source>
          <target state="translated">月,文字,3个字母。</target>
        </trans-unit>
        <trans-unit id="55f3a466c30a6f138ee4b6107c9f1297f5a1c83b" translate="yes" xml:space="preserve">
          <source>Month, textual, long.</source>
          <target state="translated">月,文,长。</target>
        </trans-unit>
        <trans-unit id="d8582964d85a742a683053ee36dbed4b0d9acc91" translate="yes" xml:space="preserve">
          <source>Month-based archive page &amp;ndash; displays all days with entries in the given month.</source>
          <target state="translated">基于月的存档页面&amp;ndash;显示所有月，其中包含给定月份中的条目。</target>
        </trans-unit>
        <trans-unit id="8e07c73ff2257408bd49d184644b99ce9d8ef611" translate="yes" xml:space="preserve">
          <source>More &lt;a href=&quot;builtins#std:templatetag-block&quot;&gt;&lt;code&gt;{% block %}&lt;/code&gt;&lt;/a&gt; tags in your base templates are better. Remember, child templates don&amp;rsquo;t have to define all parent blocks, so you can fill in reasonable defaults in a number of blocks, then only define the ones you need later. It&amp;rsquo;s better to have more hooks than fewer hooks.</source>
          <target state="translated">更多&lt;a href=&quot;builtins#std:templatetag-block&quot;&gt; &lt;code&gt;{% block %}&lt;/code&gt; &lt;/a&gt;在您的基本模板标签是更好的。请记住，子模板不必定义所有父块，因此您可以在许多块中填写合理的默认值，然后仅在以后定义所需的块。最好有更多的挂钩而不是更少的挂钩。</target>
        </trans-unit>
        <trans-unit id="299848f148ba8e572159f4587392af118a784da7" translate="yes" xml:space="preserve">
          <source>More about Django &lt;code&gt;Form&lt;/code&gt; classes</source>
          <target state="translated">有关Django &lt;code&gt;Form&lt;/code&gt; 类的更多信息</target>
        </trans-unit>
        <trans-unit id="a0d0d1d2ad55a7e08bc82e9ce7118b05835d686b" translate="yes" xml:space="preserve">
          <source>More about Django Form classes</source>
          <target state="translated">更多关于Django Form类</target>
        </trans-unit>
        <trans-unit id="b989fb93fc290d806e1beba975983651f8aa1602" translate="yes" xml:space="preserve">
          <source>More advanced migrations</source>
          <target state="translated">更高级的迁移</target>
        </trans-unit>
        <trans-unit id="b2e3edf8aaff223f7c4bc82400f24d060ba670ce" translate="yes" xml:space="preserve">
          <source>More attractive automatically-generated admin features &amp;ndash; this overview barely scratched the surface.</source>
          <target state="translated">更具吸引力的自动生成的管理功能&amp;ndash;此概述几乎没有涉及表面。</target>
        </trans-unit>
        <trans-unit id="8c923753c18be61c1004c12ca3fade2d08722915" translate="yes" xml:space="preserve">
          <source>More complex examples are beyond the scope of this document, but remember - for any configuration of your Field instance, &lt;code&gt;deconstruct()&lt;/code&gt; must return arguments that you can pass to &lt;code&gt;__init__&lt;/code&gt; to reconstruct that state.</source>
          <target state="translated">更复杂的示例超出了本文档的范围，但是请记住-对于Field实例的任何配置， &lt;code&gt;deconstruct()&lt;/code&gt; 必须返回可传递给 &lt;code&gt;__init__&lt;/code&gt; 的参数，以重建该状态。</target>
        </trans-unit>
        <trans-unit id="db010a93e37a57c66656081acb50090017c4ab0d" translate="yes" xml:space="preserve">
          <source>More comprehensive tests</source>
          <target state="translated">更全面的测试</target>
        </trans-unit>
        <trans-unit id="58c8313dae352f6c86d7bd1fe65b2e1089885088" translate="yes" xml:space="preserve">
          <source>More details are in &lt;a href=&quot;../i18n/translation#explicitly-setting-the-active-language&quot;&gt;Explicitly setting the active language&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;../i18n/translation#explicitly-setting-the-active-language&quot;&gt;显式设置活动语言&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b1a82e1043266d553c6d8ba1b0f6a2fd3e63754" translate="yes" xml:space="preserve">
          <source>More details are in &lt;a href=&quot;../i18n/translation#how-django-discovers-language-preference&quot;&gt;How Django discovers language preference&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;../i18n/translation#how-django-discovers-language-preference&quot;&gt;Django如何发现语言偏好&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0a7b4df20dd480c377a581def56226b3c32ecde3" translate="yes" xml:space="preserve">
          <source>More details can be found in the &lt;a href=&quot;https://www.w3.org/International/questions/qa-i18n&quot;&gt;W3C Web Internationalization FAQ&lt;/a&gt;, the &lt;a href=&quot;https://en.wikipedia.org/wiki/Internationalization_and_localization&quot;&gt;Wikipedia article&lt;/a&gt; or the &lt;a href=&quot;https://www.gnu.org/software/gettext/manual/gettext.html#Concepts&quot;&gt;GNU gettext documentation&lt;/a&gt;.</source>
          <target state="translated">可以在&lt;a href=&quot;https://www.w3.org/International/questions/qa-i18n&quot;&gt;W3C Web国际化常见问题解答&lt;/a&gt;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Internationalization_and_localization&quot;&gt;Wikipedia文章&lt;/a&gt;或&lt;a href=&quot;https://www.gnu.org/software/gettext/manual/gettext.html#Concepts&quot;&gt;GNU gettext文档中&lt;/a&gt;找到更多详细信息。</target>
        </trans-unit>
        <trans-unit id="5ad47279afb909f9e5e8501ff7c41001131170ec" translate="yes" xml:space="preserve">
          <source>More examples of generic views are available in some third party applications, or you could write your own as needed.</source>
          <target state="translated">更多的通用视图的例子可以在一些第三方应用程序中获得,也可以根据需要自己编写。</target>
        </trans-unit>
        <trans-unit id="525622173583779827304cfa800b3d1dfee99b4c" translate="yes" xml:space="preserve">
          <source>More granular output</source>
          <target state="translated">更精细的产出</target>
        </trans-unit>
        <trans-unit id="f063c4c87e9bae1816af9e601f0d358edd44ea7d" translate="yes" xml:space="preserve">
          <source>More information for new contributors</source>
          <target state="translated">更多信息给新投稿人</target>
        </trans-unit>
        <trans-unit id="2d8f6e8eec977860d6662bb5520eba03e159160c" translate="yes" xml:space="preserve">
          <source>More often, a newcomer to testing will create some code and later decide that it should have some tests. Perhaps it would have been better to write some tests earlier, but it&amp;rsquo;s never too late to get started.</source>
          <target state="translated">测试新手通常会创建一些代码，然后决定应该进行一些测试。也许早些编写一些测试会更好，但是上手永远不会太晚。</target>
        </trans-unit>
        <trans-unit id="2618cd8952a806ae4124de24ab64990b2f4af767" translate="yes" xml:space="preserve">
          <source>More on fields</source>
          <target state="translated">更多关于领域</target>
        </trans-unit>
        <trans-unit id="5bc01b6e00a77dc61a0069c6788d0ed249454de6" translate="yes" xml:space="preserve">
          <source>More than just HTML</source>
          <target state="translated">不仅仅是HTML</target>
        </trans-unit>
        <trans-unit id="270b6239e60a5ebd66ab15c63878e1d3222c33cc" translate="yes" xml:space="preserve">
          <source>More than one foreign key to the same model</source>
          <target state="translated">同一模型有多个外键</target>
        </trans-unit>
        <trans-unit id="2586d441d16010e8412e11c6de8265bc1c1e557f" translate="yes" xml:space="preserve">
          <source>Moreover, arithmetic operations may be performed between the distance objects:</source>
          <target state="translated">此外,距离对象之间可以进行算术运算。</target>
        </trans-unit>
        <trans-unit id="8b1fa3471d34f0d234ba4558b474a601a8cc898d" translate="yes" xml:space="preserve">
          <source>Moreover, if the &lt;code&gt;GEOSGeometry&lt;/code&gt; is in a different coordinate system (has a different SRID value) than that of the field, then it will be implicitly transformed into the SRID of the model&amp;rsquo;s field, using the spatial database&amp;rsquo;s transform procedure:</source>
          <target state="translated">此外，如果 &lt;code&gt;GEOSGeometry&lt;/code&gt; 与字段处于不同的坐标系（具有不同的SRID值），则将使用空间数据库的转换过程将其隐式转换为模型字段的SRID：</target>
        </trans-unit>
        <trans-unit id="fee232fed6319afa654e98407d6a84369cdc26ae" translate="yes" xml:space="preserve">
          <source>Morphs this SpatialReference from ESRI&amp;rsquo;s format to EPSG</source>
          <target state="translated">将此SpatialReference从ESRI格式转换为EPSG</target>
        </trans-unit>
        <trans-unit id="2776d1cf12cc121cc6a53ab101839d36c44da49e" translate="yes" xml:space="preserve">
          <source>Morphs this SpatialReference to ESRI&amp;rsquo;s format.</source>
          <target state="translated">将此SpatialReference变形为ESRI的格式。</target>
        </trans-unit>
        <trans-unit id="de802c1632cedcbed1d1269dec4dd87d1626b63d" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;QueryDict&lt;/code&gt;s you encounter, and in particular those at &lt;code&gt;request.POST&lt;/code&gt; and &lt;code&gt;request.GET&lt;/code&gt;, will be immutable. If you are instantiating one yourself, you can make it mutable by passing &lt;code&gt;mutable=True&lt;/code&gt; to its &lt;code&gt;__init__()&lt;/code&gt;.</source>
          <target state="translated">您遇到的大多数 &lt;code&gt;QueryDict&lt;/code&gt; ，尤其是在 &lt;code&gt;request.POST&lt;/code&gt; 和 &lt;code&gt;request.GET&lt;/code&gt; 中遇到的，都是不可变的。如果您要自己实例化一个实例，则可以通过将 &lt;code&gt;mutable=True&lt;/code&gt; 传递给它的 &lt;code&gt;__init__()&lt;/code&gt; 使其可变。</target>
        </trans-unit>
        <trans-unit id="f0099135e74b5675cbf0a4c807d825e1972187f6" translate="yes" xml:space="preserve">
          <source>Most browsers send &lt;code&gt;Accept: */*&lt;/code&gt; by default, so this would return &lt;code&gt;True&lt;/code&gt; for all content types. Setting an explicit &lt;code&gt;Accept&lt;/code&gt; header in API requests can be useful for returning a different content type for those consumers only. See &lt;a href=&quot;../topics/class-based-views/generic-editing#content-negotiation-example&quot;&gt;Content negotiation example&lt;/a&gt; of using &lt;code&gt;accepts()&lt;/code&gt; to return different content to API consumers.</source>
          <target state="translated">大多数浏览器默认情况下会发送&amp;ldquo; &lt;code&gt;Accept: */*&lt;/code&gt; ，因此对于所有内容类型，这都将返回 &lt;code&gt;True&lt;/code&gt; 。在API请求中设置显式的 &lt;code&gt;Accept&lt;/code&gt; 标头对于仅为那些使用者返回不同的内容类型很有用。请参阅使用 &lt;code&gt;accepts()&lt;/code&gt; 将不同的内容返回给API使用者的&lt;a href=&quot;../topics/class-based-views/generic-editing#content-negotiation-example&quot;&gt;内容协商示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fd83b2da2d31a5769324d7579da823d1abff813e" translate="yes" xml:space="preserve">
          <source>Most developers won&amp;rsquo;t need to worry about changing form encoding, but this is a useful feature for applications that talk to legacy systems whose encoding you cannot control.</source>
          <target state="translated">大多数开发人员无需担心更改表单编码，但这对于与无法控制其编码的遗留系统进行通信的应用程序来说是一项有用的功能。</target>
        </trans-unit>
        <trans-unit id="10ade9a2061b05f7b91f4318c4b19e8aa5ca9527" translate="yes" xml:space="preserve">
          <source>Most fields don&amp;rsquo;t require data preparation. Simple data types, such as integers and strings, are &amp;lsquo;ready to write&amp;rsquo; as a Python object. However, more complex data types often require some modification.</source>
          <target state="translated">大多数字段不需要数据准备。简单的数据类型（例如整数和字符串）可以作为Python对象&amp;ldquo;准备写入&amp;rdquo;。但是，更复杂的数据类型通常需要进行一些修改。</target>
        </trans-unit>
        <trans-unit id="d529a24fa241e9065286615d191b753364639d64" translate="yes" xml:space="preserve">
          <source>Most filters don&amp;rsquo;t take arguments. In this case, leave the argument out of your function:</source>
          <target state="translated">大多数过滤器不接受参数。在这种情况下，请将参数保留在函数之外：</target>
        </trans-unit>
        <trans-unit id="6ac8c4baf64570371700af7032fa39a6dc85046f" translate="yes" xml:space="preserve">
          <source>Most generic views require the &lt;code&gt;queryset&lt;/code&gt; key, which is a &lt;code&gt;QuerySet&lt;/code&gt; instance; see &lt;a href=&quot;../../topics/db/queries&quot;&gt;Making queries&lt;/a&gt; for more information about &lt;code&gt;QuerySet&lt;/code&gt; objects.</source>
          <target state="translated">大多数通用视图都需要 &lt;code&gt;queryset&lt;/code&gt; 键，这是一个 &lt;code&gt;QuerySet&lt;/code&gt; 实例。请参阅进行&lt;a href=&quot;../../topics/db/queries&quot;&gt;查询&lt;/a&gt;以获取有关 &lt;code&gt;QuerySet&lt;/code&gt; 对象的更多信息。</target>
        </trans-unit>
        <trans-unit id="283a9ab800c27a0c42452de79dd91ba830b18c75" translate="yes" xml:space="preserve">
          <source>Most larger Django sites use a separate Web server &amp;ndash; i.e., one that&amp;rsquo;s not also running Django &amp;ndash; for serving static files. This server often runs a different type of web server &amp;ndash; faster but less full-featured. Some common choices are:</source>
          <target state="translated">大多数较大的Django站点使用单独的Web服务器（即未同时运行Django的Web服务器）来提供静态文件。该服务器通常运行其他类型的Web服务器-速度更快，但功能较少。一些常见的选择是：</target>
        </trans-unit>
        <trans-unit id="d071dd58c0ea09b5920680c494256897fe6f5f87" translate="yes" xml:space="preserve">
          <source>Most method calls attached to objects are also available from within templates. This means that templates have access to much more than just class attributes (like field names) and variables passed in from views. For example, the Django ORM provides the &lt;a href=&quot;../../topics/db/queries#topics-db-queries-related&quot;&gt;&amp;ldquo;entry_set&amp;rdquo;&lt;/a&gt; syntax for finding a collection of objects related on a foreign key. Therefore, given a model called &amp;ldquo;comment&amp;rdquo; with a foreign key relationship to a model called &amp;ldquo;task&amp;rdquo; you can loop through all comments attached to a given task like this:</source>
          <target state="translated">模板中还提供了大多数附加到对象的方法调用。这意味着模板不仅可以访问类属性（如字段名称），还可以访问从视图传入的变量。例如，Django ORM提供了&lt;a href=&quot;../../topics/db/queries#topics-db-queries-related&quot;&gt;&amp;ldquo; entry_set&amp;rdquo;&lt;/a&gt;语法，用于查找与外键相关的对象的集合。因此，给定一个名为&amp;ldquo;注释&amp;rdquo;的模型与一个名为&amp;ldquo;任务&amp;rdquo;的模型具有外键关系的模型，您可以像这样循环遍历附加到给定任务的所有注释：</target>
        </trans-unit>
        <trans-unit id="145d0f6157ec473a53e372c29d0eb1af87df32d4" translate="yes" xml:space="preserve">
          <source>Most of the time you&amp;rsquo;ll use &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.all&quot;&gt;&lt;code&gt;all()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.exclude&quot;&gt;&lt;code&gt;exclude()&lt;/code&gt;&lt;/a&gt; when you need to look up objects from the database. However, that&amp;rsquo;s far from all there is; see the &lt;a href=&quot;../../ref/models/querysets#queryset-api&quot;&gt;QuerySet API Reference&lt;/a&gt; for a complete list of all the various &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">在大多数情况下，当您需要从数据库中查找对象时，将使用&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.all&quot;&gt; &lt;code&gt;all()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.exclude&quot;&gt; &lt;code&gt;exclude()&lt;/code&gt; &lt;/a&gt;。但是，这还远远不够。有关所有各种&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;方法的完整列表，请参见&lt;a href=&quot;../../ref/models/querysets#queryset-api&quot;&gt;QuerySet API参考&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e5a70a402429d9e0751ab8352b3b6edf4a999b65" translate="yes" xml:space="preserve">
          <source>Most of the time you&amp;rsquo;ll use a &lt;code&gt;File&lt;/code&gt; that Django&amp;rsquo;s given you (i.e. a file attached to a model as above, or perhaps an uploaded file).</source>
          <target state="translated">在大多数情况下，你会使用一个 &lt;code&gt;File&lt;/code&gt; （附加到模型如上即一个文件，或者上传的文件），Django的给你。</target>
        </trans-unit>
        <trans-unit id="ee3f7c7371e94698b53b1354c3bef6e0872c9065" translate="yes" xml:space="preserve">
          <source>Most of the time, you&amp;rsquo;ll instantiate &lt;a href=&quot;#django.template.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; objects by passing in a fully-populated dictionary to &lt;code&gt;Context()&lt;/code&gt;. But you can add and delete items from a &lt;code&gt;Context&lt;/code&gt; object once it&amp;rsquo;s been instantiated, too, using standard dictionary syntax:</source>
          <target state="translated">大多数情况下，您将通过向 &lt;code&gt;Context()&lt;/code&gt; 传递完整填充的字典来实例化&lt;a href=&quot;#django.template.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;对象。但是，一旦实例化了 &lt;code&gt;Context&lt;/code&gt; 对象，您也可以使用标准字典语法对其进行添加和删除：</target>
        </trans-unit>
        <trans-unit id="75df474b5d319622c3cc5760d003faf378b95a8e" translate="yes" xml:space="preserve">
          <source>Most of the time, you&amp;rsquo;ll pass the file data from &lt;code&gt;request&lt;/code&gt; into the form as described in &lt;a href=&quot;../../ref/forms/api#binding-uploaded-files&quot;&gt;Binding uploaded files to a form&lt;/a&gt;. This would look something like:</source>
          <target state="translated">在大多数情况下，您会将 &lt;code&gt;request&lt;/code&gt; 的文件数据传递到表单中，如将&lt;a href=&quot;../../ref/forms/api#binding-uploaded-files&quot;&gt;上传的文件绑定到表单中所述&lt;/a&gt;。这看起来像：</target>
        </trans-unit>
        <trans-unit id="119f2c924a319d37b00a931fb60d52e9b7e587d8" translate="yes" xml:space="preserve">
          <source>Most other &lt;code&gt;django-admin&lt;/code&gt; commands that interact with the database operate in the same way as &lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; &amp;ndash; they only ever operate on one database at a time, using &lt;code&gt;--database&lt;/code&gt; to control the database used.</source>
          <target state="translated">与数据库交互的大多数其他 &lt;code&gt;django-admin&lt;/code&gt; 命令以与&lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;相同的方式运行&amp;ndash;它们一次只能使用 &lt;code&gt;--database&lt;/code&gt; 控制使用的数据库一次在一个数据库上运行。</target>
        </trans-unit>
        <trans-unit id="377bcaf04e9797c6340b2a8bdad4bee17d23a9bf" translate="yes" xml:space="preserve">
          <source>Most people are familiar with using latitude and longitude to reference a location on the earth&amp;rsquo;s surface. However, latitude and longitude are angles, not distances. In other words, while the shortest path between two points on a flat surface is a straight line, the shortest path between two points on a curved surface (such as the earth) is an &lt;em&gt;arc&lt;/em&gt; of a &lt;a href=&quot;https://en.wikipedia.org/wiki/Great_circle&quot;&gt;great circle&lt;/a&gt;. &lt;a href=&quot;#fnthematic&quot; id=&quot;id8&quot;&gt;[4]&lt;/a&gt; Thus, additional computation is required to obtain distances in planar units (e.g., kilometers and miles). Using a geographic coordinate system may introduce complications for the developer later on. For example, SpatiaLite does not have the capability to perform distance calculations between geometries using geographic coordinate systems, e.g. constructing a query to find all points within 5 miles of a county boundary stored as WGS84. &lt;a href=&quot;#fndist&quot; id=&quot;id9&quot;&gt;[5]&lt;/a&gt;</source>
          <target state="translated">大多数人都熟悉使用纬度和经度来参考地球表面上的位置。但是，纬度和经度是角度，而不是距离。换句话说，虽然在平坦表面上的两个点之间的最短路径是一条直线，两点之间的弯曲表面的最短路径（例如地球）是&lt;em&gt;弧&lt;/em&gt; a的&lt;a href=&quot;https://en.wikipedia.org/wiki/Great_circle&quot;&gt;大圆&lt;/a&gt;。&lt;a href=&quot;#fnthematic&quot; id=&quot;id8&quot;&gt;[4]&lt;/a&gt;因此，需要额外的计算以获得平面单位的距离（例如，公里和英里）。使用地理坐标系可能会在以后给开发人员带来麻烦。例如，SpatiaLite不具备使用地理坐标系在几何之间进行距离计算的功能，例如构造查询以查找存储为WGS84的县边界5英里内的所有点。&lt;a href=&quot;#fndist&quot; id=&quot;id9&quot;&gt;[5]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa380c3aed18b055c47fc70106524669e774f0e4" translate="yes" xml:space="preserve">
          <source>Most tags accept arguments:</source>
          <target state="translated">大多数标签都接受参数。</target>
        </trans-unit>
        <trans-unit id="7d98610356545b43a90b40c891fb649c8f9fda3c" translate="yes" xml:space="preserve">
          <source>Most validation can be done using &lt;a href=&quot;#validators&quot;&gt;validators&lt;/a&gt; - helpers that can be reused. Validators are functions (or callables) that take a single argument and raise &lt;code&gt;ValidationError&lt;/code&gt; on invalid input. Validators are run after the field&amp;rsquo;s &lt;code&gt;to_python&lt;/code&gt; and &lt;code&gt;validate&lt;/code&gt; methods have been called.</source>
          <target state="translated">大多数验证都可以使用&lt;a href=&quot;#validators&quot;&gt;验证器&lt;/a&gt;完成，这些验证器可以重复使用。验证器是采用单个参数并在无效输入上引发 &lt;code&gt;ValidationError&lt;/code&gt; 的函数（或可调用函数）。在字段的 &lt;code&gt;to_python&lt;/code&gt; 和 &lt;code&gt;validate&lt;/code&gt; 方法被调用之后运行验证器。</target>
        </trans-unit>
        <trans-unit id="723f4d4f07515e4cb9cdd3456d1f4fe86b2d6da5" translate="yes" xml:space="preserve">
          <source>Most views requires CSRF protection, but a few do not.</source>
          <target state="translated">大多数视图需要CSRF保护,但也有少数视图不需要。</target>
        </trans-unit>
        <trans-unit id="4128c1d8e90ab53d91e5ee014d62fddc81452af8" translate="yes" xml:space="preserve">
          <source>Most websites that care about time zones ask users in which time zone they live and store this information in the user&amp;rsquo;s profile. For anonymous users, they use the time zone of their primary audience or UTC. &lt;a href=&quot;http://pytz.sourceforge.net/&quot;&gt;pytz&lt;/a&gt; provides &lt;a href=&quot;http://pytz.sourceforge.net/#helpers&quot;&gt;helpers&lt;/a&gt;, like a list of time zones per country, that you can use to pre-select the most likely choices.</source>
          <target state="translated">大多数关心时区的网站都会询问用户他们居住在哪个时区并将此信息存储在用户的个人资料中。对于匿名用户，他们使用其主要受众或时区的时区。&lt;a href=&quot;http://pytz.sourceforge.net/&quot;&gt;pytz&lt;/a&gt;提供了一些&lt;a href=&quot;http://pytz.sourceforge.net/#helpers&quot;&gt;帮助程序&lt;/a&gt;，例如每个国家/地区的时区列表，您可以用来预先选择最可能的选择。</target>
        </trans-unit>
        <trans-unit id="6c8d12148748172394b8e79a6d152a32dd323fc1" translate="yes" xml:space="preserve">
          <source>Move the &lt;code&gt;polls&lt;/code&gt; directory into the &lt;code&gt;django-polls&lt;/code&gt; directory.</source>
          <target state="translated">将 &lt;code&gt;polls&lt;/code&gt; 目录移到 &lt;code&gt;django-polls&lt;/code&gt; 目录。</target>
        </trans-unit>
        <trans-unit id="c58c013c30d8701a971a22d72e01d0b764b2b536" translate="yes" xml:space="preserve">
          <source>Moves the model&amp;rsquo;s table from one tablespace to another.</source>
          <target state="translated">将模型的表从一个表空间移动到另一个表空间。</target>
        </trans-unit>
        <trans-unit id="d794a8d047d2027efa4972e195bbc53e5a2bcbce" translate="yes" xml:space="preserve">
          <source>Moving an object from one database to another</source>
          <target state="translated">将一个对象从一个数据库移动到另一个数据库</target>
        </trans-unit>
        <trans-unit id="f0a1c83ee00097339c2b403b2193bd3d9c55c46d" translate="yes" xml:space="preserve">
          <source>Mozilla discusses various topics regarding &lt;a href=&quot;https://infosec.mozilla.org/guidelines/web_security.html&quot;&gt;web security&lt;/a&gt;. Their pages also include security principles that apply to any system.</source>
          <target state="translated">Mozilla讨论有关&lt;a href=&quot;https://infosec.mozilla.org/guidelines/web_security.html&quot;&gt;Web安全的&lt;/a&gt;各种主题。他们的页面还包含适用于任何系统的安全性原则。</target>
        </trans-unit>
        <trans-unit id="64683d853b5d7f50f535fc278d45f921a490d24b" translate="yes" xml:space="preserve">
          <source>Much like &lt;a href=&quot;#django.db.migrations.operations.RunSQL&quot;&gt;&lt;code&gt;RunSQL&lt;/code&gt;&lt;/a&gt;, ensure that if you change schema inside here you&amp;rsquo;re either doing it outside the scope of the Django model system (e.g. triggers) or that you use &lt;a href=&quot;#django.db.migrations.operations.SeparateDatabaseAndState&quot;&gt;&lt;code&gt;SeparateDatabaseAndState&lt;/code&gt;&lt;/a&gt; to add in operations that will reflect your changes to the model state - otherwise, the versioned ORM and the autodetector will stop working correctly.</source>
          <target state="translated">与&lt;a href=&quot;#django.db.migrations.operations.RunSQL&quot;&gt; &lt;code&gt;RunSQL&lt;/code&gt; &lt;/a&gt;相似，请确保如果在此处更改架构，则要么在Django模型系统的范围之外（例如触发器）执行它，要么使用&lt;a href=&quot;#django.db.migrations.operations.SeparateDatabaseAndState&quot;&gt; &lt;code&gt;SeparateDatabaseAndState&lt;/code&gt; &lt;/a&gt;来添加可反映对模型状态所做更改的操作-否则，版本化的ORM和自动检测器将停止正常工作。</target>
        </trans-unit>
        <trans-unit id="41621a064f44e6daabdc27522b33298fa8aa62b1" translate="yes" xml:space="preserve">
          <source>Multi-database support</source>
          <target state="translated">多数据库支持</target>
        </trans-unit>
        <trans-unit id="ddb04e3ae372a17b92e0255fc4b279009db9af90" translate="yes" xml:space="preserve">
          <source>Multi-table inheritance</source>
          <target state="translated">多表继承</target>
        </trans-unit>
        <trans-unit id="85c68fd61341ba3993094799674748ff1b1fad2b" translate="yes" xml:space="preserve">
          <source>Multidimensional arrays with indexes and slices</source>
          <target state="translated">带有索引和切片的多维数组。</target>
        </trans-unit>
        <trans-unit id="6dae03e38262e1d8fbd6001ae280309609de7140" translate="yes" xml:space="preserve">
          <source>Multiple admin sites in the same URLconf</source>
          <target state="translated">同一个URLconf中的多个管理站点</target>
        </trans-unit>
        <trans-unit id="d28c471111be99bb04f22b41815e829ee1145175" translate="yes" xml:space="preserve">
          <source>Multiple databases</source>
          <target state="translated">多个数据库</target>
        </trans-unit>
        <trans-unit id="a9dadd9453a271030d305246c8860a4e63627858" translate="yes" xml:space="preserve">
          <source>Multiple inheritance</source>
          <target state="translated">多重继承</target>
        </trans-unit>
        <trans-unit id="232abe7a48c7c1ee8c0efaa67e739c2a6509d72e" translate="yes" xml:space="preserve">
          <source>Multiple keys can be chained together to form a path lookup:</source>
          <target state="translated">多个键可以连锁在一起,形成一个路径查询。</target>
        </trans-unit>
        <trans-unit id="5112902c4e583bfe7514db7252746db758fd62e2" translate="yes" xml:space="preserve">
          <source>Multiple object mixins</source>
          <target state="translated">多对象混搭</target>
        </trans-unit>
        <trans-unit id="86f9c0e7700126520aeb57e446419f134fb8a6f7" translate="yes" xml:space="preserve">
          <source>Mumbai: 19,000,000</source>
          <target state="translated">孟买:19 000 000人</target>
        </trans-unit>
        <trans-unit id="ce70a430cc3e5cc4fd6f19e52ba7a0369c6c0c5b" translate="yes" xml:space="preserve">
          <source>Must be a subclass of &lt;a href=&quot;widgets#django.forms.MultiWidget&quot;&gt;&lt;code&gt;django.forms.MultiWidget&lt;/code&gt;&lt;/a&gt;. Default value is &lt;a href=&quot;widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt;, which probably is not very useful in this case.</source>
          <target state="translated">必须是&lt;a href=&quot;widgets#django.forms.MultiWidget&quot;&gt; &lt;code&gt;django.forms.MultiWidget&lt;/code&gt; &lt;/a&gt;的子类。默认值为&lt;a href=&quot;widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt;，在这种情况下可能不是很有用。</target>
        </trans-unit>
        <trans-unit id="6f73e164a384f2624b0aa7805fd299ecce41fed8" translate="yes" xml:space="preserve">
          <source>Must return the lookup named &lt;code&gt;lookup_name&lt;/code&gt;. For instance, by returning &lt;code&gt;self.output_field.get_lookup(lookup_name)&lt;/code&gt;.</source>
          <target state="translated">必须返回名为 &lt;code&gt;lookup_name&lt;/code&gt; 的查找。例如，通过返回 &lt;code&gt;self.output_field.get_lookup(lookup_name)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c493b67af068ea997fcbeb95a43f0dc8b18c7ce6" translate="yes" xml:space="preserve">
          <source>Must return the lookup named &lt;code&gt;transform_name&lt;/code&gt;. For instance, by returning &lt;code&gt;self.output_field.get_transform(transform_name)&lt;/code&gt;.</source>
          <target state="translated">必须返回名为 &lt;code&gt;transform_name&lt;/code&gt; 的查找。例如，通过返回 &lt;code&gt;self.output_field.get_transform(transform_name)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a96b7ca96aaabf64fd5a1e1f8c1b203d836deaa9" translate="yes" xml:space="preserve">
          <source>Mutability: &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; objects may be modified.</source>
          <target state="translated">可变性：可以修改&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="4bccb0eee0e8600913c2c28639c66e179e6c916b" translate="yes" xml:space="preserve">
          <source>My logs are filled with GEOS-related errors</source>
          <target state="translated">我的日志中充满了与GEOS相关的错误。</target>
        </trans-unit>
        <trans-unit id="deaa0c393a6613972aaccbf1fecfdad67aa21e88" translate="yes" xml:space="preserve">
          <source>MySQL</source>
          <target state="translated">MySQL</target>
        </trans-unit>
        <trans-unit id="2e0075770347408bd338637c0345bcd2dba7d8f7" translate="yes" xml:space="preserve">
          <source>MySQL 5.6.4 and later can store fractional seconds, provided that the column definition includes a fractional indication (e.g. &lt;code&gt;DATETIME(6)&lt;/code&gt;). Earlier versions do not support them at all.</source>
          <target state="translated">MySQL 5.6.4和更高版本可以存储小数秒，只要列定义包含小数指示（例如 &lt;code&gt;DATETIME(6)&lt;/code&gt; ）。早期版本完全不支持它们。</target>
        </trans-unit>
        <trans-unit id="86a5ac5197e92a3bf370a96a8eed2e3a94e4cb1f" translate="yes" xml:space="preserve">
          <source>MySQL &lt;a href=&quot;#id10&quot; id=&quot;id9&quot;&gt;[5]&lt;/a&gt;</source>
          <target state="translated">MySQL &lt;a href=&quot;#id10&quot; id=&quot;id9&quot;&gt;[5]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="986a60a235cf32f505dc63fb40ec496ad291c705" translate="yes" xml:space="preserve">
          <source>MySQL Connector/Python</source>
          <target state="translated">MySQL连接器/python</target>
        </trans-unit>
        <trans-unit id="667f44d66957f73e91d3746ec1ac71180eba2323" translate="yes" xml:space="preserve">
          <source>MySQL Connector/Python is available from the &lt;a href=&quot;https://dev.mysql.com/downloads/connector/python/&quot;&gt;download page&lt;/a&gt;. The Django adapter is available in versions 1.1.X and later. It may not support the most recent releases of Django.</source>
          <target state="translated">可从&lt;a href=&quot;https://dev.mysql.com/downloads/connector/python/&quot;&gt;下载页面&lt;/a&gt;获得MySQL Connector / Python 。Django适配器在1.1.X及更高版本中可用。它可能不支持Django的最新版本。</target>
        </trans-unit>
        <trans-unit id="9bb341b82bf1c83dd03f7466f030dfb1c4ead4ae" translate="yes" xml:space="preserve">
          <source>MySQL DB API Drivers</source>
          <target state="translated">MySQL数据库API驱动程序</target>
        </trans-unit>
        <trans-unit id="2a32013dda91967e55f3b5f97fbb0212e962e6ad" translate="yes" xml:space="preserve">
          <source>MySQL Spatial Limitations</source>
          <target state="translated">MySQL的空间限制</target>
        </trans-unit>
        <trans-unit id="983d4198c4fe496e039642a0b10a31ff61fb8930" translate="yes" xml:space="preserve">
          <source>MySQL and MariaDB</source>
          <target state="translated">MySQL和MariaDB</target>
        </trans-unit>
        <trans-unit id="1ae647f2055c46f7991330b9effd8766eca9dada" translate="yes" xml:space="preserve">
          <source>MySQL and MariaDB do not support some options to the &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt; statement. If &lt;code&gt;select_for_update()&lt;/code&gt; is used with an unsupported option, then a &lt;a href=&quot;exceptions#django.db.NotSupportedError&quot;&gt;&lt;code&gt;NotSupportedError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">MySQL和MariaDB不支持 &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt; 语句的某些选项。如果 &lt;code&gt;select_for_update()&lt;/code&gt; 与不支持的选项一起使用，则会引发&lt;a href=&quot;exceptions#django.db.NotSupportedError&quot;&gt; &lt;code&gt;NotSupportedError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6f05eb6ba63b7a6cd32e2832c1d889278aa95ffb" translate="yes" xml:space="preserve">
          <source>MySQL and SpatiaLite without LWGEOM don&amp;rsquo;t support area calculations on geographic SRSes.</source>
          <target state="translated">没有LWGEOM的MySQL和SpatiaLite不支持在地理SRS上进行面积计算。</target>
        </trans-unit>
        <trans-unit id="e619fd44bc5f6e15a9f90141b521fe84e6c5c40b" translate="yes" xml:space="preserve">
          <source>MySQL can index only the first N chars of a &lt;code&gt;BLOB&lt;/code&gt; or &lt;code&gt;TEXT&lt;/code&gt; column. Since &lt;code&gt;TextField&lt;/code&gt; doesn&amp;rsquo;t have a defined length, you can&amp;rsquo;t mark it as &lt;code&gt;unique=True&lt;/code&gt;. MySQL will report: &amp;ldquo;BLOB/TEXT column &amp;lsquo;&amp;lt;db_column&amp;gt;&amp;rsquo; used in key specification without a key length&amp;rdquo;.</source>
          <target state="translated">MySQL只能索引 &lt;code&gt;BLOB&lt;/code&gt; 或 &lt;code&gt;TEXT&lt;/code&gt; 列的前N个字符。由于 &lt;code&gt;TextField&lt;/code&gt; 没有定义的长度，因此您不能将其标记为 &lt;code&gt;unique=True&lt;/code&gt; 。MySQL将报告：&amp;ldquo;在密钥规范中使用的BLOB / TEXT列'&amp;lt;db_column&amp;gt;'，没有密钥长度&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="e7f9037fbe1194d4e43f2ae2e2b77cd89ac807a6" translate="yes" xml:space="preserve">
          <source>MySQL comparisons</source>
          <target state="translated">MySQL比较</target>
        </trans-unit>
        <trans-unit id="1b2f25b29e36685e347b0022acef2066f4e227da" translate="yes" xml:space="preserve">
          <source>MySQL doesn&amp;rsquo;t support length calculations on geographic SRSes.</source>
          <target state="translated">MySQL不支持在地理SRS上进行长度计算。</target>
        </trans-unit>
        <trans-unit id="bb747cd75bad69ca691abcfc9dda3c14f82ee26e" translate="yes" xml:space="preserve">
          <source>MySQL doesn&amp;rsquo;t support streaming results, hence the Python database driver loads the entire result set into memory. The result set is then transformed into Python row objects by the database adapter using the &lt;code&gt;fetchmany()&lt;/code&gt; method defined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 249&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">MySQL不支持流式结果，因此Python数据库驱动程序将整个结果集加载到内存中。然后，数据库适配器使用&lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 249中&lt;/strong&gt;&lt;/a&gt;定义的 &lt;code&gt;fetchmany()&lt;/code&gt; 方法将结果集转换为Python行对象。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9699bc8cbc6d21071c531e97cae0a82b4d28855a" translate="yes" xml:space="preserve">
          <source>MySQL has a couple drivers that implement the Python Database API described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 249&lt;/strong&gt;&lt;/a&gt;:</source>
          <target state="translated">MySQL有几个驱动程序，它们实现了&lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 249中&lt;/strong&gt;&lt;/a&gt;描述的Python数据库API ：</target>
        </trans-unit>
        <trans-unit id="dd36a013a62a179e364138cb150dda709e3289ba" translate="yes" xml:space="preserve">
          <source>MySQL has several &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/storage-engines.html&quot;&gt;storage engines&lt;/a&gt;. You can change the default storage engine in the server configuration.</source>
          <target state="translated">MySQL有几个&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/storage-engines.html&quot;&gt;存储引擎&lt;/a&gt;。您可以在服务器配置中更改默认存储引擎。</target>
        </trans-unit>
        <trans-unit id="13c24d5b3db43171b5ef4d816ab11e8214bf90ac" translate="yes" xml:space="preserve">
          <source>MySQL lacks support for transactions around schema alteration operations, meaning that if a migration fails to apply you will have to manually unpick the changes in order to try again (it&amp;rsquo;s impossible to roll back to an earlier point).</source>
          <target state="translated">MySQL缺乏围绕模式变更操作的事务支持，这意味着如果迁移失败，您将必须手动取消选择更改才能重试（无法回滚到较早的时间）。</target>
        </trans-unit>
        <trans-unit id="da7ec2dd90480fe6867f579ccf7b82e69036fc20" translate="yes" xml:space="preserve">
          <source>MySQL notes</source>
          <target state="translated">MySQL注释</target>
        </trans-unit>
        <trans-unit id="c97f25b2cd670ac90747ff6c4670fa29f1bdcc07" translate="yes" xml:space="preserve">
          <source>MySQL option files.</source>
          <target state="translated">MySQL选项文件。</target>
        </trans-unit>
        <trans-unit id="a18101faca156f271f971ff4f81a92f324b38b2f" translate="yes" xml:space="preserve">
          <source>MySQL support was added.</source>
          <target state="translated">增加了对MySQL的支持。</target>
        </trans-unit>
        <trans-unit id="0aca998cada4db772b8e544e84480f89cb51ce1e" translate="yes" xml:space="preserve">
          <source>MySQL users, refer to the &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/charset-database.html&quot;&gt;MySQL manual&lt;/a&gt; for details on how to set or alter the database character set encoding.</source>
          <target state="translated">MySQL用户，请参阅&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/charset-database.html&quot;&gt;MySQL手册&lt;/a&gt;以获取有关如何设置或更改数据库字符集编码的详细信息。</target>
        </trans-unit>
        <trans-unit id="901623a9cc98c4d53a4f346dc9d64f6ee667fc21" translate="yes" xml:space="preserve">
          <source>MySQL with MyISAM and fixtures</source>
          <target state="translated">MySQL与MyISAM和夹具</target>
        </trans-unit>
        <trans-unit id="c8423889e44ab6d190ce5b97f8e3f5999ada3a9e" translate="yes" xml:space="preserve">
          <source>MySQL&amp;rsquo;s default storage engine is &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/innodb-storage-engine.html&quot;&gt;InnoDB&lt;/a&gt;. This engine is fully transactional and supports foreign key references. It&amp;rsquo;s the recommended choice. However, the InnoDB autoincrement counter is lost on a MySQL restart because it does not remember the &lt;code&gt;AUTO_INCREMENT&lt;/code&gt; value, instead recreating it as &amp;ldquo;max(id)+1&amp;rdquo;. This may result in an inadvertent reuse of &lt;a href=&quot;models/fields#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt; values.</source>
          <target state="translated">MySQL的默认存储引擎是&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/innodb-storage-engine.html&quot;&gt;InnoDB&lt;/a&gt;。该引擎是完全事务性的，并支持外键引用。这是推荐的选择。但是，由于MySQL不会记住 &lt;code&gt;AUTO_INCREMENT&lt;/code&gt; 值，而是将其重新创建为&amp;ldquo; max（id）+1&amp;rdquo;，因此在MySQL重新启动时，InnoDB自动增量计数器会丢失。这可能会导致无意中重复使用&lt;a href=&quot;models/fields#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; &lt;/a&gt;值。</target>
        </trans-unit>
        <trans-unit id="822c500ebb7d59b30db3811ebed6b92e7060041a" translate="yes" xml:space="preserve">
          <source>MySQL, MariaDB, and SQLite.</source>
          <target state="translated">MySQL、MariaDB和SQLite。</target>
        </trans-unit>
        <trans-unit id="da894fa611c76d98f190b501119ec407ebf26fcc" translate="yes" xml:space="preserve">
          <source>MySQL, PostGIS, SpatiaLite</source>
          <target state="translated">MySQL、PostGIS、SpatiaLite</target>
        </trans-unit>
        <trans-unit id="e6d7af34f14cc7cd71ad2da3150f20559678178f" translate="yes" xml:space="preserve">
          <source>MySQL: &lt;code&gt;max_allowed_packet&lt;/code&gt; error</source>
          <target state="translated">MySQL： &lt;code&gt;max_allowed_packet&lt;/code&gt; 错误</target>
        </trans-unit>
        <trans-unit id="aa93eb462b33d3480c38c1390b6b9dda484bd422" translate="yes" xml:space="preserve">
          <source>MySQL: load the time zone tables with &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/mysql-tzinfo-to-sql.html&quot;&gt;mysql_tzinfo_to_sql&lt;/a&gt;.</source>
          <target state="translated">MySQL：使用&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/mysql-tzinfo-to-sql.html&quot;&gt;mysql_tzinfo_to_sql&lt;/a&gt;加载时区表。</target>
        </trans-unit>
        <trans-unit id="b51a60734da64be0e618bacbea2865a8a7dcd669" translate="yes" xml:space="preserve">
          <source>N</source>
          <target state="translated">N</target>
        </trans-unit>
        <trans-unit id="87bfcc6203402acde4aabbaf0352d970adff0de9" translate="yes" xml:space="preserve">
          <source>N, B</source>
          <target state="translated">N,B</target>
        </trans-unit>
        <trans-unit id="42279a6f78cd081c721ab2a673715d6e0141307a" translate="yes" xml:space="preserve">
          <source>NULL and empty strings</source>
          <target state="translated">NULL和空字符串</target>
        </trans-unit>
        <trans-unit id="3ec5dc9e67bb01760f1a1602b80350c782cc4a3d" translate="yes" xml:space="preserve">
          <source>Naive and aware datetime objects</source>
          <target state="translated">天真的和有意识的日期时间对象</target>
        </trans-unit>
        <trans-unit id="991cb900a910173a0198132c33364a293aa20dc5" translate="yes" xml:space="preserve">
          <source>Name of a model field which will be auto-populated with the height of the image each time the model instance is saved.</source>
          <target state="translated">模型字段的名称,每次保存模型实例时将自动填充图像的高度。</target>
        </trans-unit>
        <trans-unit id="77b12c2e53e54a360eee73a9a579997d2f334a46" translate="yes" xml:space="preserve">
          <source>Name of a model field which will be auto-populated with the width of the image each time the model instance is saved.</source>
          <target state="translated">模型字段的名称,每次保存模型实例时将自动填充图像的宽度。</target>
        </trans-unit>
        <trans-unit id="e796ff17766e96ff2c6860b2879523670c9a432e" translate="yes" xml:space="preserve">
          <source>Name of a supported database vendor that this model is specific to. Current built-in vendor names are: &lt;code&gt;sqlite&lt;/code&gt;, &lt;code&gt;postgresql&lt;/code&gt;, &lt;code&gt;mysql&lt;/code&gt;, &lt;code&gt;oracle&lt;/code&gt;. If this attribute is not empty and the current connection vendor doesn&amp;rsquo;t match it, the model will not be synchronized.</source>
          <target state="translated">该模型特定于的受支持数据库供应商的名称。当前内置的供应商名称是： &lt;code&gt;sqlite&lt;/code&gt; ， &lt;code&gt;postgresql&lt;/code&gt; ， &lt;code&gt;mysql&lt;/code&gt; ， &lt;code&gt;oracle&lt;/code&gt; 。如果此属性不为空，并且当前连接供应商不匹配该模型，则该模型将不同步。</target>
        </trans-unit>
        <trans-unit id="21e40c06422396c66fc6f011529e9fbb22670cb1" translate="yes" xml:space="preserve">
          <source>Named arguments can be passed by using either one of the following syntaxes:</source>
          <target state="translated">命名的参数可以通过使用以下任何一种语法来传递。</target>
        </trans-unit>
        <trans-unit id="456472e152b75181780a0aa5cf5f649563895b18" translate="yes" xml:space="preserve">
          <source>Named interpolation: This mode is selected by passing the optional boolean &lt;code&gt;named&lt;/code&gt; parameter as &lt;code&gt;true&lt;/code&gt;. &lt;code&gt;obj&lt;/code&gt; contains a JavaScript object or associative array. For example:</source>
          <target state="translated">命名插值：通过将可选的布尔 &lt;code&gt;named&lt;/code&gt; 参数传递为 &lt;code&gt;true&lt;/code&gt; 来选择此模式。 &lt;code&gt;obj&lt;/code&gt; 包含一个JavaScript对象或关联数组。例如：</target>
        </trans-unit>
        <trans-unit id="cddd6003787cffa647cd2f5ab65bee28c43a64f5" translate="yes" xml:space="preserve">
          <source>Namespace packages as apps</source>
          <target state="translated">命名空间包作为应用程序</target>
        </trans-unit>
        <trans-unit id="b401e0e546ac63496e6d96c97a9fc5aeb9b68b6f" translate="yes" xml:space="preserve">
          <source>Namespaced URLs are specified using the &lt;code&gt;':'&lt;/code&gt; operator. For example, the main index page of the admin application is referenced using &lt;code&gt;'admin:index'&lt;/code&gt;. This indicates a namespace of &lt;code&gt;'admin'&lt;/code&gt;, and a named URL of &lt;code&gt;'index'&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;':'&lt;/code&gt; 运算符指定命名空间的URL 。例如，使用 &lt;code&gt;'admin:index'&lt;/code&gt; 引用管理应用程序的主索引页面。这表示名称空间为 &lt;code&gt;'admin'&lt;/code&gt; ，命名URL为 &lt;code&gt;'index'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49121460562c588ebec421e328fc0f9d720e75bf" translate="yes" xml:space="preserve">
          <source>Namespaces can also be nested. The named URL &lt;code&gt;'sports:polls:index'&lt;/code&gt; would look for a pattern named &lt;code&gt;'index'&lt;/code&gt; in the namespace &lt;code&gt;'polls'&lt;/code&gt; that is itself defined within the top-level namespace &lt;code&gt;'sports'&lt;/code&gt;.</source>
          <target state="translated">命名空间也可以嵌套。命名URL'sports &lt;code&gt;'sports:polls:index'&lt;/code&gt; 将在名称空间 &lt;code&gt;'polls'&lt;/code&gt; 中查找名为 &lt;code&gt;'index'&lt;/code&gt; 的模式，该模式本身是在顶级名称空间 &lt;code&gt;'sports'&lt;/code&gt; 中定义的。</target>
        </trans-unit>
        <trans-unit id="7214a30965a0f1415063399b413c8991e0fe715d" translate="yes" xml:space="preserve">
          <source>Namespacing URL names</source>
          <target state="translated">命名间隔URL名称</target>
        </trans-unit>
        <trans-unit id="245bfd6a442d9a4f4c7f5466cc42e94f2e24f6ba" translate="yes" xml:space="preserve">
          <source>Naming URL patterns</source>
          <target state="translated">命名URL模式</target>
        </trans-unit>
        <trans-unit id="3801dd9c44d08b327a9ff306cbbe6bed16008529" translate="yes" xml:space="preserve">
          <source>Naming issues</source>
          <target state="translated">命名问题</target>
        </trans-unit>
        <trans-unit id="7e587f8f91b92c319567d66e4457de8a3eb6d592" translate="yes" xml:space="preserve">
          <source>Naming loggers</source>
          <target state="translated">命名记录仪</target>
        </trans-unit>
        <trans-unit id="6e94241c26e8d79594ba2990ac79ac771826be76" translate="yes" xml:space="preserve">
          <source>Naming your URL lets you refer to it unambiguously from elsewhere in Django, especially from within templates. This powerful feature allows you to make global changes to the URL patterns of your project while only touching a single file.</source>
          <target state="translated">命名你的URL可以让你在Django的其他地方毫不含糊地引用它,特别是在模板中。这个强大的功能允许你在只触及一个文件的情况下,对项目的URL模式进行全局的修改。</target>
        </trans-unit>
        <trans-unit id="b0e5d9ee1e706056e66182c63e2373c6ad455b80" translate="yes" xml:space="preserve">
          <source>Native raster support &lt;code&gt;N&lt;/code&gt;: the operator accepts rasters natively on both sides of the lookup, and raster input can be mixed with geometry inputs.</source>
          <target state="translated">本机栅格支持 &lt;code&gt;N&lt;/code&gt; ：运算符本机可以在查找的两侧接受本机栅格，并且可以将栅格输入与几何输入混合。</target>
        </trans-unit>
        <trans-unit id="71cb039d6cfd99775661211c11211853f3118ab8" translate="yes" xml:space="preserve">
          <source>Natural keys</source>
          <target state="translated">天然钥匙</target>
        </trans-unit>
        <trans-unit id="15de939347cd0f43fbb2c840def2f0483ccf19fc" translate="yes" xml:space="preserve">
          <source>Natural keys and forward references</source>
          <target state="translated">自然键和前向引用</target>
        </trans-unit>
        <trans-unit id="f2670621a6a242a585790697568a8a79acebea97" translate="yes" xml:space="preserve">
          <source>Naturally, the &lt;code&gt;forms&lt;/code&gt; library comes with a set of &lt;code&gt;Field&lt;/code&gt; classes that represent common validation needs. This section documents each built-in field.</source>
          <target state="translated">自然地， &lt;code&gt;forms&lt;/code&gt; 库带有一组代表通用验证需求的 &lt;code&gt;Field&lt;/code&gt; 类。本节记录每个内置字段。</target>
        </trans-unit>
        <trans-unit id="a0fd1dadeac26fc980d64d53a1d51dc00d872199" translate="yes" xml:space="preserve">
          <source>Nautical Mile</source>
          <target state="translated">海里</target>
        </trans-unit>
        <trans-unit id="c1bf29ee2167be4389b40be2ec27bb9ac6854cf5" translate="yes" xml:space="preserve">
          <source>Nautical Mile (UK)</source>
          <target state="translated">海里</target>
        </trans-unit>
        <trans-unit id="5e303aed43f7eea12893a04c1344d77f1422d360" translate="yes" xml:space="preserve">
          <source>Navigate to Django&amp;rsquo;s &lt;code&gt;tests/shortcuts/&lt;/code&gt; folder and create a new file &lt;code&gt;test_make_toast.py&lt;/code&gt;. Add the following code:</source>
          <target state="translated">导航到Django的 &lt;code&gt;tests/shortcuts/&lt;/code&gt; 文件夹，并创建一个新文件 &lt;code&gt;test_make_toast.py&lt;/code&gt; 。添加以下代码：</target>
        </trans-unit>
        <trans-unit id="391931ae9af417747703c930330f904886c481c0" translate="yes" xml:space="preserve">
          <source>Navigate to the &lt;code&gt;django/&lt;/code&gt; folder and open the &lt;code&gt;shortcuts.py&lt;/code&gt; file. At the bottom, add:</source>
          <target state="translated">导航到 &lt;code&gt;django/&lt;/code&gt; 文件夹，然后打开 &lt;code&gt;shortcuts.py&lt;/code&gt; 文件。在底部，添加：</target>
        </trans-unit>
        <trans-unit id="6ff1387ed6d44dceb1969e9b463d291bf6feec8d" translate="yes" xml:space="preserve">
          <source>Needing the result in every template.</source>
          <target state="translated">需要每个模板中的结果。</target>
        </trans-unit>
        <trans-unit id="854d8a7501a391087e8af696c7e80444951d2100" translate="yes" xml:space="preserve">
          <source>Negated object identity. Tests if two values are not the same object. This is the negation of the &lt;code&gt;is&lt;/code&gt; operator. Example:</source>
          <target state="translated">否定的对象标识。测试两个值是否不是同一对象。这是对 &lt;code&gt;is&lt;/code&gt; 运算符的否定。例：</target>
        </trans-unit>
        <trans-unit id="74cddaa347454041893fdb47ba6c8cf1d732490d" translate="yes" xml:space="preserve">
          <source>Negative indexing (i.e. &lt;code&gt;Entry.objects.all()[-1]&lt;/code&gt;) is not supported.</source>
          <target state="translated">不支持负索引（即 &lt;code&gt;Entry.objects.all()[-1]&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="16b2420a502b3deb13acfb660bcc642e826d0622" translate="yes" xml:space="preserve">
          <source>Nested arguments</source>
          <target state="translated">嵌套参数</target>
        </trans-unit>
        <trans-unit id="a51d1007934ad9baaf9054dadf4bd0eaf7048e4f" translate="yes" xml:space="preserve">
          <source>Nested captured arguments create a strong coupling between the view arguments and the URL as illustrated by &lt;code&gt;blog_articles&lt;/code&gt;: the view receives part of the URL (&lt;code&gt;page-2/&lt;/code&gt;) instead of only the value the view is interested in. This coupling is even more pronounced when reversing, since to reverse the view we need to pass the piece of URL instead of the page number.</source>
          <target state="translated">嵌套的捕获参数在视图参数和URL之间建立了牢固的耦合，如 &lt;code&gt;blog_articles&lt;/code&gt; 所示：视图接收URL的一部分（ &lt;code&gt;page-2/&lt;/code&gt; ），而不是仅接收视图感兴趣的值。当出现这种耦合时，这种耦合更加明显。反转，因为要反转视图，我们需要传递URL而不是页码。</target>
        </trans-unit>
        <trans-unit id="65046fcf73f5e6ac3773f70ea1badbd965d975c0" translate="yes" xml:space="preserve">
          <source>Nested classes</source>
          <target state="translated">嵌套类</target>
        </trans-unit>
        <trans-unit id="ffea8bcefbb1127b7c2b6d104e473978a7a5dfd5" translate="yes" xml:space="preserve">
          <source>Never deploy a site into production with &lt;a href=&quot;#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; turned on.</source>
          <target state="translated">切勿在启用&lt;a href=&quot;#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; 的情况下&lt;/a&gt;将站点部署到生产中。</target>
        </trans-unit>
        <trans-unit id="4e08b5505096fc8f458225bbe21af122777de6ec" translate="yes" xml:space="preserve">
          <source>New York: 20,000,000</source>
          <target state="translated">纽约:20 000 000人</target>
        </trans-unit>
        <trans-unit id="bc6939c687d34dccd6c0632aa8427056bf9dd500" translate="yes" xml:space="preserve">
          <source>New applications should avoid &lt;code&gt;default_app_config&lt;/code&gt;. Instead they should require the dotted path to the appropriate &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; subclass to be configured explicitly in &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">新应用程序应避免使用 &lt;code&gt;default_app_config&lt;/code&gt; 。相反，它们应要求在&lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 中&lt;/a&gt;显式配置指向适当的&lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt;子类的虚线路径。</target>
        </trans-unit>
        <trans-unit id="bb77323982627c875ecedea26b1cf8c9800f344b" translate="yes" xml:space="preserve">
          <source>New apps come preconfigured to accept migrations, and so you can add migrations by running &lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; once you&amp;rsquo;ve made some changes.</source>
          <target state="translated">新的应用程序已预先配置为接受迁移，因此您可以&lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt;一些更改后通过运行makemigrations添加迁移。</target>
        </trans-unit>
        <trans-unit id="397e08be4588b3e13fecbfaca297d85d558665ee" translate="yes" xml:space="preserve">
          <source>New features and improvements are added.</source>
          <target state="translated">增加了新的功能和改进。</target>
        </trans-unit>
        <trans-unit id="cdb2b3eaffe8e9fe13d1e76ec6f821570338db67" translate="yes" xml:space="preserve">
          <source>New in Django 2.2.</source>
          <target state="translated">Django 2.2中的新功能。</target>
        </trans-unit>
        <trans-unit id="a8859c9f8e0e148cbb9c7e291b070736ec990c4d" translate="yes" xml:space="preserve">
          <source>New in Django 2.2:</source>
          <target state="translated">Django 2.2中的新功能。</target>
        </trans-unit>
        <trans-unit id="7d4766fe3d85797ad596d99b8671ea4eafbe878d" translate="yes" xml:space="preserve">
          <source>New in Django 3.0.</source>
          <target state="translated">Django 3.0中的新功能。</target>
        </trans-unit>
        <trans-unit id="7802f5226ecb3555d94a9cf2a3159c22a8454a02" translate="yes" xml:space="preserve">
          <source>New in Django 3.0:</source>
          <target state="translated">Django 3.0中的新功能。</target>
        </trans-unit>
        <trans-unit id="0c2953d63622f6f02b8976691c2a6a9e13454aad" translate="yes" xml:space="preserve">
          <source>New in Django 3.1.</source>
          <target state="translated">Django 3.1中的新功能。</target>
        </trans-unit>
        <trans-unit id="53c5fd58379d0dc6dfd1944e576aa7ae4b49831e" translate="yes" xml:space="preserve">
          <source>New in Django 3.1:</source>
          <target state="translated">Django 3.1中的新功能。</target>
        </trans-unit>
        <trans-unit id="3bdd2af04da21e645534a0164ec69a9d2e7eea84" translate="yes" xml:space="preserve">
          <source>New to Django? Or to Web development in general? Well, you came to the right place: read this material to quickly get up and running.</source>
          <target state="translated">你是Django的新手吗?或者对一般的Web开发?好吧,你来对了地方:阅读这本资料,可以快速上手。</target>
        </trans-unit>
        <trans-unit id="42c8c31ac17b91db81378ce6cded2f0b14aad34c" translate="yes" xml:space="preserve">
          <source>Newer is often - but not always - better</source>
          <target state="translated">较新的往往是--但并不总是--更好。</target>
        </trans-unit>
        <trans-unit id="90839b06d66480978bb51446f706afdc2004ad1e" translate="yes" xml:space="preserve">
          <source>Newer versions of Python, and also of Python packages, will often perform better too - but measure, rather than assume.</source>
          <target state="translated">Python 的新版本,以及 Python 包的新版本,通常也会有更好的表现-但要衡量,而不是假设。</target>
        </trans-unit>
        <trans-unit id="0f758a36445ca7a95d9a1d5274601a1eef8619f7" translate="yes" xml:space="preserve">
          <source>Newlines in the HTML content will be preserved.</source>
          <target state="translated">HTML内容中的新行将被保留。</target>
        </trans-unit>
        <trans-unit id="60c9dfae09ab7d11db1bd2a8800128d7b6ebdec0" translate="yes" xml:space="preserve">
          <source>Newlines within the string will be removed.</source>
          <target state="translated">字符串内的新行将被删除。</target>
        </trans-unit>
        <trans-unit id="aca8d1cbfaf7c04f3f791c3ad1ffe332fa7cfcc1" translate="yes" xml:space="preserve">
          <source>Newly instantiated instances have &lt;code&gt;adding=True&lt;/code&gt; and &lt;code&gt;db=None&lt;/code&gt;, since they are yet to be saved. Instances fetched from a &lt;code&gt;QuerySet&lt;/code&gt; will have &lt;code&gt;adding=False&lt;/code&gt; and &lt;code&gt;db&lt;/code&gt; set to the alias of the associated database.</source>
          <target state="translated">新实例化的实例具有 &lt;code&gt;adding=True&lt;/code&gt; 和 &lt;code&gt;db=None&lt;/code&gt; ，因为它们尚未保存。从 &lt;code&gt;QuerySet&lt;/code&gt; 中获取的实例将具有 &lt;code&gt;adding=False&lt;/code&gt; 和 &lt;code&gt;db&lt;/code&gt; 设置为关联数据库的别名。</target>
        </trans-unit>
        <trans-unit id="11fc14203dd0f4441645a9c34d5dd022905f56e4" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="translated">今后的步骤</target>
        </trans-unit>
        <trans-unit id="ac65e32833ef6dab9578aad7abb6397e0ec34f48" translate="yes" xml:space="preserve">
          <source>Next we can add more fine-grained logging. Here&amp;rsquo;s an example of how to make the logging system print more messages from just the &lt;a href=&quot;#django-logger&quot;&gt;django&lt;/a&gt; named logger:</source>
          <target state="translated">接下来，我们可以添加更多细粒度的日志记录。这是一个示例，说明如何使日志记录系统仅从名为logger的&lt;a href=&quot;#django-logger&quot;&gt;Django&lt;/a&gt;打印更多消息：</target>
        </trans-unit>
        <trans-unit id="6d1add59418ea384f8c14da01d32dd82a0c03a15" translate="yes" xml:space="preserve">
          <source>Next we need to import the test client class (later in &lt;code&gt;tests.py&lt;/code&gt; we will use the &lt;a href=&quot;../topics/testing/tools#django.test.TestCase&quot;&gt;&lt;code&gt;django.test.TestCase&lt;/code&gt;&lt;/a&gt; class, which comes with its own client, so this won&amp;rsquo;t be required):</source>
          <target state="translated">接下来，我们需要导入测试客户端类（稍后在 &lt;code&gt;tests.py&lt;/code&gt; 中,我们将使用&lt;a href=&quot;../topics/testing/tools#django.test.TestCase&quot;&gt; &lt;code&gt;django.test.TestCase&lt;/code&gt; &lt;/a&gt;类，该类随其自己的客户端一起提供，因此不需要）：</target>
        </trans-unit>
        <trans-unit id="b111a7c819e1512c7c04b41004b2e237b4657367" translate="yes" xml:space="preserve">
          <source>Next we&amp;rsquo;ll be adding the &lt;code&gt;make_toast()&lt;/code&gt; function.</source>
          <target state="translated">接下来，我们将添加 &lt;code&gt;make_toast()&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="76a45c894c9d7c9724383aea29e1d93ed7e569dd" translate="yes" xml:space="preserve">
          <source>Next we&amp;rsquo;ll create &lt;code&gt;setup.cfg&lt;/code&gt; and &lt;code&gt;setup.py&lt;/code&gt; files which detail how to build and install the app. A full explanation of these files is beyond the scope of this tutorial, but the &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/&quot;&gt;setuptools documentation&lt;/a&gt; has a good explanation. Create the files &lt;code&gt;django-polls/setup.cfg&lt;/code&gt; and &lt;code&gt;django-polls/setup.py&lt;/code&gt; with the following contents:</source>
          <target state="translated">接下来，我们将创建 &lt;code&gt;setup.cfg&lt;/code&gt; 和 &lt;code&gt;setup.py&lt;/code&gt; 文件，它们详细说明了如何构建和安装该应用程序。这些文件的完整说明超出了本教程的范围，但是&lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/&quot;&gt;setuptools文档&lt;/a&gt;提供了很好的说明。使用以下内容创建文件 &lt;code&gt;django-polls/setup.cfg&lt;/code&gt; 和 &lt;code&gt;django-polls/setup.py&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="2428b562258cc645b8a378441e5a8efef21e5410" translate="yes" xml:space="preserve">
          <source>Next we&amp;rsquo;ll need to ensure this &lt;code&gt;wsgi.py&lt;/code&gt; with a WSGI application object exists. As of Django version 1.4, &lt;a href=&quot;../../../ref/django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;startproject&lt;/code&gt;&lt;/a&gt; will have created one for you; otherwise, you&amp;rsquo;ll need to create it. See the &lt;a href=&quot;index&quot;&gt;WSGI overview documentation&lt;/a&gt; for the default contents you should put in this file, and what else you can add to it.</source>
          <target state="translated">接下来，我们需要确保此WSGI应用程序对象的 &lt;code&gt;wsgi.py&lt;/code&gt; 存在。从Django 1.4版开始，&lt;a href=&quot;../../../ref/django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;startproject&lt;/code&gt; &lt;/a&gt;将为您创建一个。否则，您将需要创建它。请参阅&lt;a href=&quot;index&quot;&gt;WSGI概述文档&lt;/a&gt;，以获取应放在此文件中的默认内容以及可以添加的其他内容。</target>
        </trans-unit>
        <trans-unit id="4458b46e2456208cc57f0c3fe8234e81455698af" translate="yes" xml:space="preserve">
          <source>Next, add the following at the top of &lt;code&gt;polls/templates/polls/index.html&lt;/code&gt;:</source>
          <target state="translated">接下来，在 &lt;code&gt;polls/templates/polls/index.html&lt;/code&gt; 顶部添加以下内容：</target>
        </trans-unit>
        <trans-unit id="c7e08d179fd99e5127a4244c23ceecf4befacdb5" translate="yes" xml:space="preserve">
          <source>Next, change into the directory where GEOS was unpacked, run the configure script, compile, and install:</source>
          <target state="translated">接下来,换到解压GEOS的目录下,运行configure脚本,编译,安装。</target>
        </trans-unit>
        <trans-unit id="97c565000f4ddc46a4029869cb4fde12f8283aea" translate="yes" xml:space="preserve">
          <source>Next, create the template used to render the tag&amp;rsquo;s output. This template is a fixed feature of the tag: the tag writer specifies it, not the template designer. Following our example, the template is very short:</source>
          <target state="translated">接下来，创建用于呈现标签输出的模板。该模板是标记的固定功能：标记编写器指定它，而不是模板设计器。按照我们的示例，模板非常简短：</target>
        </trans-unit>
        <trans-unit id="b06e64f44c84b4c936c45d05747ad2632f4f84e0" translate="yes" xml:space="preserve">
          <source>Next, edit your &lt;code&gt;urls.py&lt;/code&gt; in the &lt;code&gt;geodjango&lt;/code&gt; application folder as follows:</source>
          <target state="translated">接下来，按照以下步骤在 &lt;code&gt;geodjango&lt;/code&gt; 应用程序文件夹中编辑 &lt;code&gt;urls.py&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="977397e98ad4a4b3fb6d6c58fd844d5bc9efb0cf" translate="yes" xml:space="preserve">
          <source>Next, edit your Apache configuration to add a location that you want only authenticated users to be able to view:</source>
          <target state="translated">接下来,编辑你的Apache配置,添加一个你希望只有经过认证的用户才能查看的位置。</target>
        </trans-unit>
        <trans-unit id="c378e99152f7b9fca914a5bcc9c3e1b7f8efc41d" translate="yes" xml:space="preserve">
          <source>Next, import the &lt;code&gt;load&lt;/code&gt; module, call the &lt;code&gt;run&lt;/code&gt; routine, and watch &lt;code&gt;LayerMapping&lt;/code&gt; do the work:</source>
          <target state="translated">接下来，导入 &lt;code&gt;load&lt;/code&gt; 模块，调用 &lt;code&gt;run&lt;/code&gt; 例程，并观察 &lt;code&gt;LayerMapping&lt;/code&gt; 完成工作：</target>
        </trans-unit>
        <trans-unit id="0ebf4ba3fa141f4156fed974267f5f3468106b7b" translate="yes" xml:space="preserve">
          <source>Next, let&amp;rsquo;s register it for &lt;code&gt;IntegerField&lt;/code&gt;:</source>
          <target state="translated">接下来，让我们为 &lt;code&gt;IntegerField&lt;/code&gt; 注册它：</target>
        </trans-unit>
        <trans-unit id="70a1521747b230808ef34f3a484673e2d3e2c778" translate="yes" xml:space="preserve">
          <source>Next, let&amp;rsquo;s register it:</source>
          <target state="translated">接下来，让我们注册它：</target>
        </trans-unit>
        <trans-unit id="654260d8e6502409d1293980e5369dedc75a1e08" translate="yes" xml:space="preserve">
          <source>Next, run the &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; command to install any extra needed database records such as admin permissions and content types:</source>
          <target state="translated">接下来，运行&lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;命令以安装任何其他需要的数据库记录，例如管理员权限和内容类型：</target>
        </trans-unit>
        <trans-unit id="7bd185e2faa9b778aa47cb7ad13b219b635277a4" translate="yes" xml:space="preserve">
          <source>Next, run the &lt;code&gt;configure&lt;/code&gt; script &amp;ndash; however the &lt;code&gt;CFLAGS&lt;/code&gt; environment variable needs to be customized so that SQLite knows to build the R*Tree module:</source>
          <target state="translated">接下来，运行 &lt;code&gt;configure&lt;/code&gt; 脚本-但是需要自定义 &lt;code&gt;CFLAGS&lt;/code&gt; 环境变量，以便SQLite知道要构建R * Tree模块：</target>
        </trans-unit>
        <trans-unit id="6725dcdbf417b3ebc4306851939ccba5bb592dda" translate="yes" xml:space="preserve">
          <source>Next, run the Django command-line utilities to create the database tables automatically:</source>
          <target state="translated">接下来,运行Django命令行实用程序来自动创建数据库表。</target>
        </trans-unit>
        <trans-unit id="3d2afbfa24772718392bac2a4e9a06485063aa1a" translate="yes" xml:space="preserve">
          <source>Next, start up the Django development server:</source>
          <target state="translated">接下来,启动Django开发服务器。</target>
        </trans-unit>
        <trans-unit id="71a03345430550cc7e9c59db9c5b7395c24fb91c" translate="yes" xml:space="preserve">
          <source>Next, untar the source code archive, and extract the datum shifting files in the &lt;code&gt;nad&lt;/code&gt; subdirectory. This must be done &lt;em&gt;prior&lt;/em&gt; to configuration:</source>
          <target state="translated">接下来，解压缩源代码存档，并将数据移动文件提取到 &lt;code&gt;nad&lt;/code&gt; 子目录中。必须&lt;em&gt;在&lt;/em&gt;配置&lt;em&gt;之前&lt;/em&gt;完成此操作：</target>
        </trans-unit>
        <trans-unit id="021c776346f3be3e04eaad68d47bfd2f60ac64ea" translate="yes" xml:space="preserve">
          <source>Next, we define a function called &lt;code&gt;current_datetime&lt;/code&gt;. This is the view function. Each view function takes an &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; object as its first parameter, which is typically named &lt;code&gt;request&lt;/code&gt;.</source>
          <target state="translated">接下来，我们定义一个名为 &lt;code&gt;current_datetime&lt;/code&gt; 的函数。这是视图功能。每个视图函数都将&lt;a href=&quot;../../ref/request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;对象作为其第一个参数，通常将其命名为 &lt;code&gt;request&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="285aab5cab4e6d27cc92dd179795c52e99d8e048" translate="yes" xml:space="preserve">
          <source>Next, we write the method responsible for generating the SQL:</source>
          <target state="translated">接下来,我们编写负责生成SQL的方法。</target>
        </trans-unit>
        <trans-unit id="0c7a20054827a1f65c3805460f6867fbf008e055" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll create a subdirectory for images. Create an &lt;code&gt;images&lt;/code&gt; subdirectory in the &lt;code&gt;polls/static/polls/&lt;/code&gt; directory. Inside this directory, put an image called &lt;code&gt;background.gif&lt;/code&gt;. In other words, put your image in &lt;code&gt;polls/static/polls/images/background.gif&lt;/code&gt;.</source>
          <target state="translated">接下来，我们将为图像创建一个子目录。在 &lt;code&gt;polls/static/polls/&lt;/code&gt; 目录中创建一个 &lt;code&gt;images&lt;/code&gt; 子目录。在此目录中，放入一个名为 &lt;code&gt;background.gif&lt;/code&gt; 的图像。换句话说，将您的图片放在 &lt;code&gt;polls/static/polls/images/background.gif&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="2448d8012ce49bb13b445b0d77f557096a6e430b" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll need to inform our &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; of the action. This works just like any other configuration option. So, the complete &lt;code&gt;admin.py&lt;/code&gt; with the action and its registration would look like:</source>
          <target state="translated">接下来，我们需要将该操作通知我们的&lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;。就像其他配置选项一样工作。因此，带有操作及其注册的完整 &lt;code&gt;admin.py&lt;/code&gt; 如下所示：</target>
        </trans-unit>
        <trans-unit id="96a65e04544e3b461117b55fa16483b977d28de6" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll write the &lt;code&gt;PublisherBookList&lt;/code&gt; view itself:</source>
          <target state="translated">接下来，我们将编写 &lt;code&gt;PublisherBookList&lt;/code&gt; 视图本身：</target>
        </trans-unit>
        <trans-unit id="a0e179a073e3c81a9e2691303a73447da0cb82ce" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;re going to remove our old &lt;code&gt;index&lt;/code&gt;, &lt;code&gt;detail&lt;/code&gt;, and &lt;code&gt;results&lt;/code&gt; views and use Django&amp;rsquo;s generic views instead. To do so, open the &lt;code&gt;polls/views.py&lt;/code&gt; file and change it like so:</source>
          <target state="translated">接下来，我们将删除旧的 &lt;code&gt;index&lt;/code&gt; ， &lt;code&gt;detail&lt;/code&gt; 和 &lt;code&gt;results&lt;/code&gt; 视图，并改用Django的通用视图。为此，请打开 &lt;code&gt;polls/views.py&lt;/code&gt; 文件并进行如下更改：</target>
        </trans-unit>
        <trans-unit id="5f86a40e869fcd75bbca46dc9ff1ce17defbb2ec" translate="yes" xml:space="preserve">
          <source>Next, you must replace the &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.backends.ModelBackend&quot;&gt;&lt;code&gt;ModelBackend&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.backends.RemoteUserBackend&quot;&gt;&lt;code&gt;RemoteUserBackend&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&quot;../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt;&lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="translated">接下来，则必须更换&lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.backends.ModelBackend&quot;&gt; &lt;code&gt;ModelBackend&lt;/code&gt; &lt;/a&gt;与&lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.backends.RemoteUserBackend&quot;&gt; &lt;code&gt;RemoteUserBackend&lt;/code&gt; &lt;/a&gt;在&lt;a href=&quot;../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt; &lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt; &lt;/a&gt;设置：</target>
        </trans-unit>
        <trans-unit id="f2560cbce63028d4ce27fdd2ae2588b9ae69ca1e" translate="yes" xml:space="preserve">
          <source>Nginx</source>
          <target state="translated">Nginx</target>
        </trans-unit>
        <trans-unit id="816c52fd2bdd94a63cd0944823a6c0aa9384c103" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>
        </trans-unit>
        <trans-unit id="20edec5d0ae49d85148c06bcee71d165b579befe" translate="yes" xml:space="preserve">
          <source>No arguments: All apps have all of their migrations run.</source>
          <target state="translated">没有争论。所有的应用程序都有所有的迁移运行。</target>
        </trans-unit>
        <trans-unit id="d14d96d5d8b6c42d1f07720884470a5df54ddfae" translate="yes" xml:space="preserve">
          <source>No bulletproof technical solution exists at the framework level to safely validate all user uploaded file content, however, there are some other steps you can take to mitigate these attacks:</source>
          <target state="translated">在框架层面不存在防弹的技术解决方案来安全验证所有用户上传的文件内容,然而,你还可以采取一些其他措施来减轻这些攻击。</target>
        </trans-unit>
        <trans-unit id="3d8384f7fd7da9b2b422f4c883195efb29896bda" translate="yes" xml:space="preserve">
          <source>No checking is done on the SQL statement that is passed in to &lt;code&gt;.raw()&lt;/code&gt;. Django expects that the statement will return a set of rows from the database, but does nothing to enforce that. If the query does not return rows, a (possibly cryptic) error will result.</source>
          <target state="translated">不会检查传递给 &lt;code&gt;.raw()&lt;/code&gt; 的SQL语句。Django希望该语句将从数据库中返回一组行，但是不执行任何操作。如果查询不返回行，则将导致（可能是神秘的）错误。</target>
        </trans-unit>
        <trans-unit id="3b1825829e0d568b54e3f2738dbb38d3f1fe4df1" translate="yes" xml:space="preserve">
          <source>No gettext?</source>
          <target state="translated">没有得到文本?</target>
        </trans-unit>
        <trans-unit id="77e07c3be309fde63eb2e14702370190c908a04a" translate="yes" xml:space="preserve">
          <source>No matter which database backend we are using, this will mean that &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; and other SQL commands create the right column type for storing a string.</source>
          <target state="translated">无论我们使用哪个数据库后端，这都意味着&lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;和其他SQL命令创建正确的列类型来存储字符串。</target>
        </trans-unit>
        <trans-unit id="12930b65de7726f62fe80a0b6083ac02553c2c82" translate="yes" xml:space="preserve">
          <source>No referrer: do not send a &lt;code&gt;Referer&lt;/code&gt; header at all.</source>
          <target state="translated">无引荐网址：不发送 &lt;code&gt;Referer&lt;/code&gt; 的所有头。</target>
        </trans-unit>
        <trans-unit id="4a2f33f43afb49828b5490390f091674882fcb65" translate="yes" xml:space="preserve">
          <source>No safety guarantee</source>
          <target state="translated">无安全保证</target>
        </trans-unit>
        <trans-unit id="5d4134379c894768a5b0b531aeca8ad07511ff4d" translate="yes" xml:space="preserve">
          <source>No, that&amp;rsquo;s not a typo: the &amp;ldquo;update&amp;rdquo; middleware must be first in the list, and the &amp;ldquo;fetch&amp;rdquo; middleware must be last. The details are a bit obscure, but see &lt;a href=&quot;#order-of-middleware&quot;&gt;Order of MIDDLEWARE&lt;/a&gt; below if you&amp;rsquo;d like the full story.</source>
          <target state="translated">不，这不是一个错字：列表中的&amp;ldquo;更新&amp;rdquo;中间件必须位于第一个，&amp;ldquo;获取&amp;rdquo;中间件必须位于最后。细节有些晦涩，但是如果您想了解完整的故事，请参阅下面&lt;a href=&quot;#order-of-middleware&quot;&gt;的MIDDLEWARE顺序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0bae75e75a1d8c0944e2819de3d77ea82e28a278" translate="yes" xml:space="preserve">
          <source>No, this is by design. Not linking CSRF protection to a session allows using the protection on sites such as a &lt;code&gt;pastebin&lt;/code&gt; that allow submissions from anonymous users which don&amp;rsquo;t have a session.</source>
          <target state="translated">不，这是设计使然。不将CSRF保护链接到会话允许在站点上使用保护，例如 &lt;code&gt;pastebin&lt;/code&gt; ，该站点允许来自没有会话的匿名用户的提交。</target>
        </trans-unit>
        <trans-unit id="75ac05ec01bf669ca63b694f09f01bafc803a917" translate="yes" xml:space="preserve">
          <source>No, this is by design. Not linking CSRF protection to a session allows using the protection on sites such as a &lt;em&gt;pastebin&lt;/em&gt; that allow submissions from anonymous users which don&amp;rsquo;t have a session.</source>
          <target state="translated">不，这是设计使然。不将CSRF保护链接到会话允许在站点上使用保护，例如&lt;em&gt;pastebin&lt;/em&gt;，该站点允许来自没有会话的匿名用户的提交。</target>
        </trans-unit>
        <trans-unit id="75a6e20e5d3d2a956555b09b0ceec04066703569" translate="yes" xml:space="preserve">
          <source>No, this is by design. Without a man-in-the-middle attack, there is no way for an attacker to send a CSRF token cookie to a victim&amp;rsquo;s browser, so a successful attack would need to obtain the victim&amp;rsquo;s browser&amp;rsquo;s cookie via XSS or similar, in which case an attacker usually doesn&amp;rsquo;t need CSRF attacks.</source>
          <target state="translated">不，这是设计使然。如果没有中间人攻击，攻击者就无法将CSRF令牌cookie发送到受害者的浏览器，因此，成功的攻击将需要通过XSS或类似方法获取受害者的浏览器的cookie。攻击者通常不需要CSRF攻击。</target>
        </trans-unit>
        <trans-unit id="bd0b455c46e5ca610bef77120da2e5ba9eaebc54" translate="yes" xml:space="preserve">
          <source>Non-atomic migrations</source>
          <target state="translated">非原子迁移</target>
        </trans-unit>
        <trans-unit id="69833b38232d3e89572bdb6759074b9ad006c98c" translate="yes" xml:space="preserve">
          <source>Non-field errors (and/or hidden field errors that are rendered at the top of the form when using helpers like &lt;code&gt;form.as_p()&lt;/code&gt;) will be rendered with an additional class of &lt;code&gt;nonfield&lt;/code&gt; to help distinguish them from field-specific errors. For example, &lt;code&gt;{{ form.non_field_errors }}&lt;/code&gt; would look like:</source>
          <target state="translated">非字段错误（和/或使用诸如 &lt;code&gt;form.as_p()&lt;/code&gt; 之类的助手时在表单顶部显示的隐藏字段错误）将通过附加的 &lt;code&gt;nonfield&lt;/code&gt; 字段类来呈现，以帮助将其与特定于字段的错误区分开。例如， &lt;code&gt;{{ form.non_field_errors }}&lt;/code&gt; 如下所示：</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="c32acd7553559b10b098232e03fd1062116c6e62" translate="yes" xml:space="preserve">
          <source>None of this is true in a time zone aware environment:</source>
          <target state="translated">在时区感知的环境中,这些都不是真的。</target>
        </trans-unit>
        <trans-unit id="6c905dba689783614e7cd8189d7380a8142bf699" translate="yes" xml:space="preserve">
          <source>Normal Python name resolution rules apply. If you have multiple base classes that declare a &lt;code&gt;Meta&lt;/code&gt; inner class, only the first one will be used. This means the child&amp;rsquo;s &lt;code&gt;Meta&lt;/code&gt;, if it exists, otherwise the &lt;code&gt;Meta&lt;/code&gt; of the first parent, etc.</source>
          <target state="translated">正常的Python名称解析规则适用。如果您有多个声明 &lt;code&gt;Meta&lt;/code&gt; 内部类的基类，则仅使用第一个。这意味着孩子的 &lt;code&gt;Meta&lt;/code&gt; （如果存在），否则是第一个父级的 &lt;code&gt;Meta&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="787e251fceb20e20f58285f09344abec1dac3b8e" translate="yes" xml:space="preserve">
          <source>Normal Python unit test classes extend a base class of &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt;. Django provides a few extensions of this base class:</source>
          <target state="translated">普通的Python单元测试类扩展了&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt;的基类。Django提供了一些对该基类的扩展：</target>
        </trans-unit>
        <trans-unit id="1ad536357eed7c72cb7dc875d4df958bc22cdd9b" translate="yes" xml:space="preserve">
          <source>Normalizes email addresses by lowercasing the domain portion of the email address.</source>
          <target state="translated">通过将电子邮件地址的域名部分小写化来规范电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="d2bd9144908a9d20be8073dbbaa165af1378fd10" translate="yes" xml:space="preserve">
          <source>Normalizes the email by calling &lt;a href=&quot;#django.contrib.auth.models.BaseUserManager.normalize_email&quot;&gt;&lt;code&gt;BaseUserManager.normalize_email()&lt;/code&gt;&lt;/a&gt;. If you override this method, be sure to call &lt;code&gt;super()&lt;/code&gt; to retain the normalization.</source>
          <target state="translated">通过调用&lt;a href=&quot;#django.contrib.auth.models.BaseUserManager.normalize_email&quot;&gt; &lt;code&gt;BaseUserManager.normalize_email()&lt;/code&gt; &lt;/a&gt;标准化电子邮件。如果重写此方法，请确保调用 &lt;code&gt;super()&lt;/code&gt; 以保留规范化。</target>
        </trans-unit>
        <trans-unit id="ebca8d3e7cb9434f28975cda931653991094e57c" translate="yes" xml:space="preserve">
          <source>Normalizes the username by calling &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser.normalize_username&quot;&gt;&lt;code&gt;normalize_username()&lt;/code&gt;&lt;/a&gt;. If you override this method, be sure to call &lt;code&gt;super()&lt;/code&gt; to retain the normalization.</source>
          <target state="translated">通过调用&lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser.normalize_username&quot;&gt; &lt;code&gt;normalize_username()&lt;/code&gt; &lt;/a&gt;标准化用户名。如果重写此方法，请确保调用 &lt;code&gt;super()&lt;/code&gt; 以保留规范化。</target>
        </trans-unit>
        <trans-unit id="c716c10654bb0f9670d96ab83c4ff9181bbc894e" translate="yes" xml:space="preserve">
          <source>Normalizes to: A &lt;a href=&quot;https://docs.python.org/3/library/uuid.html#uuid.UUID&quot;&gt;&lt;code&gt;UUID&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">标准化为：一个&lt;a href=&quot;https://docs.python.org/3/library/uuid.html#uuid.UUID&quot;&gt; &lt;code&gt;UUID&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="23571b266e909356ef73bc9292429433256272f7" translate="yes" xml:space="preserve">
          <source>Normalizes to: A &lt;code&gt;QuerySet&lt;/code&gt; of model instances.</source>
          <target state="translated">规范化为：模型实例的 &lt;code&gt;QuerySet&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8db01bd92878bf8c9d9ba50bf01d544d075050e" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">标准化为：Python &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f06883286dbd9b7a7366dcec2b203da4a388e3d8" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; value.</source>
          <target state="translated">规范化为：Python的 &lt;code&gt;True&lt;/code&gt; 或 &lt;code&gt;False&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="d4886d2a0f53043db52f5cde8feddfa0bc26c7b2" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;False&lt;/code&gt; or &lt;code&gt;None&lt;/code&gt; value.</source>
          <target state="translated">标准化为：Python的 &lt;code&gt;True&lt;/code&gt; ， &lt;code&gt;False&lt;/code&gt; 或 &lt;code&gt;None&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="605b63bef291da49b100f180cd452f4da48ba0c9" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python &lt;code&gt;datetime.date&lt;/code&gt; object.</source>
          <target state="translated">规范化为：Python &lt;code&gt;datetime.date&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="9ca92c54da10e1d5c685996a1b8233213ac1d451" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python &lt;code&gt;datetime.datetime&lt;/code&gt; object.</source>
          <target state="translated">规范化为：Python &lt;code&gt;datetime.datetime&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="f27a4c57bf6c2c00615c6bd981ee576ffc7d62f7" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python &lt;code&gt;datetime.time&lt;/code&gt; object.</source>
          <target state="translated">规范化为：Python &lt;code&gt;datetime.time&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="8208bd6963bb476e18fec3f6260c3df00f3671a6" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python &lt;code&gt;decimal&lt;/code&gt;.</source>
          <target state="translated">标准化为：Python &lt;code&gt;decimal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77e22ea42119f399cbae9e4153b4d1808eaee60c" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python float.</source>
          <target state="translated">归一化为。一个Python float。</target>
        </trans-unit>
        <trans-unit id="3a1c8382df016399dc527e0652beec43e30a44b8" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python integer.</source>
          <target state="translated">归一化为。一个Python整数。</target>
        </trans-unit>
        <trans-unit id="3cd0055e6682f053f1055a5133dd78f42a15a194" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python representation of the JSON value (usually as a &lt;code&gt;dict&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt;), depending on &lt;a href=&quot;#django.forms.JSONField.decoder&quot;&gt;&lt;code&gt;JSONField.decoder&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">规范化为：JSON值的Python表示形式（通常为 &lt;code&gt;dict&lt;/code&gt; ， &lt;code&gt;list&lt;/code&gt; 或 &lt;code&gt;None&lt;/code&gt; ），具体取决于&lt;a href=&quot;#django.forms.JSONField.decoder&quot;&gt; &lt;code&gt;JSONField.decoder&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a22741f23a65dd20cd7fdbc9a7d00afdfb0db9cf" translate="yes" xml:space="preserve">
          <source>Normalizes to: A list of strings.</source>
          <target state="translated">归一化为。一个字符串列表。</target>
        </trans-unit>
        <trans-unit id="03edfdc79677e527c568c032a0794b48135d3b8f" translate="yes" xml:space="preserve">
          <source>Normalizes to: A list of values of the type provided by the &lt;code&gt;coerce&lt;/code&gt; argument.</source>
          <target state="translated">标准化为： &lt;code&gt;coerce&lt;/code&gt; 参数提供的类型的值列表。</target>
        </trans-unit>
        <trans-unit id="7a4cda7e66de907da2a21e509ad56f05074178a7" translate="yes" xml:space="preserve">
          <source>Normalizes to: A model instance.</source>
          <target state="translated">归一化为。一个模型实例。</target>
        </trans-unit>
        <trans-unit id="55888b9b4ff1eb1ec8ba6a3bbc52308ac1adbfc2" translate="yes" xml:space="preserve">
          <source>Normalizes to: A string.</source>
          <target state="translated">归一化为。一个字符串。</target>
        </trans-unit>
        <trans-unit id="24a53ad769cff7f9d766b78fc9dcb56af2255d2e" translate="yes" xml:space="preserve">
          <source>Normalizes to: A string. IPv6 addresses are normalized as described below.</source>
          <target state="translated">归一化为。一个字符串。IPv6地址的归一化如下所述。</target>
        </trans-unit>
        <trans-unit id="f17a7f7bab37ec3a1b4b6f3ae02f34271a88be2a" translate="yes" xml:space="preserve">
          <source>Normalizes to: A value of the type provided by the &lt;a href=&quot;#django.forms.TypedChoiceField.coerce&quot;&gt;&lt;code&gt;coerce&lt;/code&gt;&lt;/a&gt; argument.</source>
          <target state="translated">标准化为：&lt;a href=&quot;#django.forms.TypedChoiceField.coerce&quot;&gt; &lt;code&gt;coerce&lt;/code&gt; &lt;/a&gt;参数提供的类型的值。</target>
        </trans-unit>
        <trans-unit id="8e7beb335ed1ad3ce19afe6d6855d444ffea421d" translate="yes" xml:space="preserve">
          <source>Normalizes to: An &lt;code&gt;UploadedFile&lt;/code&gt; object that wraps the file content and file name into a single object.</source>
          <target state="translated">规范化为：一个 &lt;code&gt;UploadedFile&lt;/code&gt; 对象，它将文件内容和文件名包装到一个对象中。</target>
        </trans-unit>
        <trans-unit id="4e7bc8818cf68569ca76c5ed75dcf2518442499f" translate="yes" xml:space="preserve">
          <source>Normalizes to: the type returned by the &lt;code&gt;compress&lt;/code&gt; method of the subclass.</source>
          <target state="translated">标准化为：子类的 &lt;code&gt;compress&lt;/code&gt; 方法返回的类型。</target>
        </trans-unit>
        <trans-unit id="4ed9d7700d72a59a0582b3f18f6a1b3e16b71b15" translate="yes" xml:space="preserve">
          <source>Normally the &lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt;&lt;code&gt;csrf_token&lt;/code&gt;&lt;/a&gt; template tag will not work if &lt;code&gt;CsrfViewMiddleware.process_view&lt;/code&gt; or an equivalent like &lt;code&gt;csrf_protect&lt;/code&gt; has not run. The view decorator &lt;code&gt;requires_csrf_token&lt;/code&gt; can be used to ensure the template tag does work. This decorator works similarly to &lt;code&gt;csrf_protect&lt;/code&gt;, but never rejects an incoming request.</source>
          <target state="translated">通常，如果 &lt;code&gt;CsrfViewMiddleware.process_view&lt;/code&gt; 或诸如 &lt;code&gt;csrf_protect&lt;/code&gt; 之类的等效项未运行，则&lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt; &lt;code&gt;csrf_token&lt;/code&gt; &lt;/a&gt;模板标记将不起作用。视图装饰 &lt;code&gt;requires_csrf_token&lt;/code&gt; 可以用来确保模板标签不工作。该装饰器的工作方式与 &lt;code&gt;csrf_protect&lt;/code&gt; 相似，但是从不拒绝传入的请求。</target>
        </trans-unit>
        <trans-unit id="cdf12ca4e299dccc08f02ece3bea84cff2a538e5" translate="yes" xml:space="preserve">
          <source>Normally the template name is relative to the template loader&amp;rsquo;s root directory. A string argument may also be a relative path starting with &lt;code&gt;./&lt;/code&gt; or &lt;code&gt;../&lt;/code&gt; as described in the &lt;a href=&quot;#std:templatetag-extends&quot;&gt;&lt;code&gt;extends&lt;/code&gt;&lt;/a&gt; tag.</source>
          <target state="translated">通常，模板名称是相对于模板加载器的根目录而言的。字符串自变量也可以是相对路径，以 &lt;code&gt;./&lt;/code&gt; 或 &lt;code&gt;../&lt;/code&gt; 开头，如&lt;a href=&quot;#std:templatetag-extends&quot;&gt; &lt;code&gt;extends&lt;/code&gt; &lt;/a&gt;标记中所述。</target>
        </trans-unit>
        <trans-unit id="735ce792d80ea48985a0c3c2c332b181a7542837" translate="yes" xml:space="preserve">
          <source>Normally the template name is relative to the template loader&amp;rsquo;s root directory. A string argument may also be a relative path starting with &lt;code&gt;./&lt;/code&gt; or &lt;code&gt;../&lt;/code&gt;. For example, assume the following directory structure:</source>
          <target state="translated">通常，模板名称是相对于模板加载器的根目录而言的。字符串参数也可以是以 &lt;code&gt;./&lt;/code&gt; 或 &lt;code&gt;../&lt;/code&gt; 开头的相对路径。例如，假定以下目录结构：</target>
        </trans-unit>
        <trans-unit id="2dd3dec7507f373967972687c007b5c2f2200db3" translate="yes" xml:space="preserve">
          <source>Normally you&amp;rsquo;ll only be adding extra tables that don&amp;rsquo;t already appear in the query. However, if the case outlined above does occur, there are a few solutions. First, see if you can get by without including the extra table and use the one already in the query. If that isn&amp;rsquo;t possible, put your &lt;code&gt;extra()&lt;/code&gt; call at the front of the queryset construction so that your table is the first use of that table. Finally, if all else fails, look at the query produced and rewrite your &lt;code&gt;where&lt;/code&gt; addition to use the alias given to your extra table. The alias will be the same each time you construct the queryset in the same way, so you can rely upon the alias name to not change.</source>
          <target state="translated">通常，您只会添加查询中未显示的其他表。但是，如果确实发生上述情况，则有一些解决方案。首先，看看是否可以不包含多余的表而使用查询中已经存在的表。如果这不可能，请将您的 &lt;code&gt;extra()&lt;/code&gt; 调用放在queryset结构的最前面，以便您的表是该表的首次使用。最后，如果其他所有方法均失败，请查看生成的查询并重写您的 &lt;code&gt;where&lt;/code&gt; 附加项，以使用为您的额外表提供的别名。每次以相同的方式构造查询集时，别名都将相同，因此您可以依靠别名来进行更改。</target>
        </trans-unit>
        <trans-unit id="4f40a32d698fbe63e70a0ff00283bd488789116d" translate="yes" xml:space="preserve">
          <source>Normally, objects have three save options: &amp;ldquo;Save&amp;rdquo;, &amp;ldquo;Save and continue editing&amp;rdquo;, and &amp;ldquo;Save and add another&amp;rdquo;. If &lt;code&gt;save_as&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, &amp;ldquo;Save and add another&amp;rdquo; will be replaced by a &amp;ldquo;Save as new&amp;rdquo; button that creates a new object (with a new ID) rather than updating the existing object.</source>
          <target state="translated">通常，对象具有三个保存选项：&amp;ldquo;保存&amp;rdquo;，&amp;ldquo;保存并继续编辑&amp;rdquo;和&amp;ldquo;保存并添加另一个&amp;rdquo;。如果 &lt;code&gt;save_as&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ，则将 &amp;ldquo;保存并添加另一个&amp;rdquo;替换为&amp;ldquo;另存为新&amp;rdquo;按钮，该按钮可创建新对象（具有新ID）而不是更新现有对象。</target>
        </trans-unit>
        <trans-unit id="fc1a750f10e8d842b641d322f43c6420831581c7" translate="yes" xml:space="preserve">
          <source>Normally, the save buttons appear only at the bottom of the forms. If you set &lt;code&gt;save_on_top&lt;/code&gt;, the buttons will appear both on the top and the bottom.</source>
          <target state="translated">通常，保存按钮仅出现在表单底部。如果设置 &lt;code&gt;save_on_top&lt;/code&gt; ，则按钮将同时显示在顶部和底部。</target>
        </trans-unit>
        <trans-unit id="159f39779a59cc0691baa39db4014b657a742b47" translate="yes" xml:space="preserve">
          <source>Normally, you should always use &lt;a href=&quot;#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; to define URLs within your application. However, if your application constructs part of the URL hierarchy itself, you may occasionally need to generate URLs. In that case, you need to be able to find the base URL of the Django project within its Web server (normally, &lt;a href=&quot;#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; takes care of this for you). In that case, you can call &lt;code&gt;get_script_prefix()&lt;/code&gt;, which will return the script prefix portion of the URL for your Django project. If your Django project is at the root of its web server, this is always &lt;code&gt;&quot;/&quot;&lt;/code&gt;.</source>
          <target state="translated">通常，您应该始终使用&lt;a href=&quot;#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt;在应用程序中定义URL。但是，如果您的应用程序本身构成了URL层次结构的一部分，则有时可能需要生成URL。在这种情况下，您需要能够在其Web服务器中找到Django项目的基本URL（通常，&lt;a href=&quot;#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt;会为您完成此工作）。在这种情况下，您可以调用 &lt;code&gt;get_script_prefix()&lt;/code&gt; ，这将返回Django项目URL的脚本前缀部分。如果您的Django项目位于其Web服务器的根目录下，则始终为 &lt;code&gt;&quot;/&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e93810e7ce2337ee98760b872339538f911e403d" translate="yes" xml:space="preserve">
          <source>Normally, you will not need to override the defaults in this fashion. The Django defaults are sufficiently tame that you can safely use them. Be aware that if you do pass in a new default module, it entirely &lt;em&gt;replaces&lt;/em&gt; the Django defaults, so you must specify a value for every possible setting that might be used in that code you are importing. Check in &lt;code&gt;django.conf.settings.global_settings&lt;/code&gt; for the full list.</source>
          <target state="translated">通常，您无需以这种方式覆盖默认值。Django默认值足够驯服，您可以放心使用它们。请注意，如果您确实传入了一个新的默认模块，它将完全&lt;em&gt;替换&lt;/em&gt; Django默认值，因此您必须为要导入的代码中可能使用的每个可能的设置指定一个值。检入 &lt;code&gt;django.conf.settings.global_settings&lt;/code&gt; 中的完整列表。</target>
        </trans-unit>
        <trans-unit id="0bf43317eddd783b9efbccb3bf152e0b1cdb043f" translate="yes" xml:space="preserve">
          <source>Normally, you won&amp;rsquo;t have to worry about lazy translations. Just be aware that if you examine an object and it claims to be a &lt;code&gt;django.utils.functional.__proxy__&lt;/code&gt; object, it is a lazy translation. Calling &lt;code&gt;str()&lt;/code&gt; with the lazy translation as the argument will generate a string in the current locale.</source>
          <target state="translated">通常，您不必担心懒惰的翻译。请注意，如果您检查一个对象并且声称它是 &lt;code&gt;django.utils.functional.__proxy__&lt;/code&gt; 对象，则它是一个懒惰的翻译。以惰性翻译作为参数调用 &lt;code&gt;str()&lt;/code&gt; 将在当前语言环境中生成一个字符串。</target>
        </trans-unit>
        <trans-unit id="887896ca3cf9796c1df0cd00c7595e083f030487" translate="yes" xml:space="preserve">
          <source>Normally, you&amp;rsquo;ll only need to use &lt;code&gt;force_str()&lt;/code&gt;. Call it as early as possible on any input data that might be either a string or a bytestring, and from then on, you can treat the result as always being a string.</source>
          <target state="translated">通常，您只需要使用 &lt;code&gt;force_str()&lt;/code&gt; 即可。在可能是字符串或字节字符串的任何输入数据上尽早调用它，然后，您就可以将结果始终视为字符串。</target>
        </trans-unit>
        <trans-unit id="f226bb2d80ebbb2763506939a29736102f7ef23d" translate="yes" xml:space="preserve">
          <source>Normally, you&amp;rsquo;re either writing a Django field to match a particular database column type, or you will need a way to convert your data to, say, a string.</source>
          <target state="translated">通常，您正在编写Django字段以匹配特定的数据库列类型，或者您将需要一种将数据转换为字符串的方法。</target>
        </trans-unit>
        <trans-unit id="ce4466a62d04187676c02df4614fbce2c4ba7436" translate="yes" xml:space="preserve">
          <source>Not all backends support all functions, so refer to the documentation of each function to see if your database backend supports the function you want to use. If you call a geographic function on a backend that doesn&amp;rsquo;t support it, you&amp;rsquo;ll get a &lt;code&gt;NotImplementedError&lt;/code&gt; exception.</source>
          <target state="translated">并非所有后端都支持所有功能，因此请参考每个功能的文档，以查看数据库后端是否支持要使用的功能。如果在不支持该功能的后端上调用地理功能，则会收到 &lt;code&gt;NotImplementedError&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="d9b293fdef69d661a6a9fab7edba5fc8c10298b9" translate="yes" xml:space="preserve">
          <source>Not all features of the &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; class are available through the &lt;a href=&quot;#django.core.mail.send_mail&quot;&gt;&lt;code&gt;send_mail()&lt;/code&gt;&lt;/a&gt; and related wrapper functions. If you wish to use advanced features, such as BCC&amp;rsquo;ed recipients, file attachments, or multi-part email, you&amp;rsquo;ll need to create &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; instances directly.</source>
          <target state="translated">并非通过&lt;a href=&quot;#django.core.mail.send_mail&quot;&gt; &lt;code&gt;send_mail()&lt;/code&gt; &lt;/a&gt;和相关的包装函数可以使用&lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;类的所有功能。如果您希望使用高级功能，例如密件抄送收件人，文件附件或多部分电子邮件，则需要直接创建&lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="affd0634cea2588f77f986208d4ea492e34b7daf" translate="yes" xml:space="preserve">
          <source>Not all mixins can be used together, and not all generic class based views can be used with all other mixins. Here we present a few examples that do work; if you want to bring together other functionality then you&amp;rsquo;ll have to consider interactions between attributes and methods that overlap between the different classes you&amp;rsquo;re using, and how &lt;a href=&quot;https://www.python.org/download/releases/2.3/mro/&quot;&gt;method resolution order&lt;/a&gt; will affect which versions of the methods will be called in what order.</source>
          <target state="translated">并非所有mixin都可以一起使用，也不是所有基于通用类的视图都可以与所有其他mixin一起使用。在这里，我们提供了一些可行的示例。如果要合并其他功能，则必须考虑使用的不同类之间重叠的属性和方法之间的交互，以及&lt;a href=&quot;https://www.python.org/download/releases/2.3/mro/&quot;&gt;方法解析顺序&lt;/a&gt;将如何影响以何种顺序调用哪些版本的方法。</target>
        </trans-unit>
        <trans-unit id="391ee549e2bdb434e349e78237a5df19f1d67675" translate="yes" xml:space="preserve">
          <source>Not contained within. This is the negation of the &lt;code&gt;in&lt;/code&gt; operator.</source>
          <target state="translated">不包含在其中。这是 &lt;code&gt;in&lt;/code&gt; 运算符的取反。</target>
        </trans-unit>
        <trans-unit id="d73f1f8457b1700a505f1a5f8a7aa88ca0436156" translate="yes" xml:space="preserve">
          <source>Not every &lt;code&gt;QuerySet&lt;/code&gt; method makes sense at the &lt;code&gt;Manager&lt;/code&gt; level; for instance we intentionally prevent the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt;&lt;code&gt;QuerySet.delete()&lt;/code&gt;&lt;/a&gt; method from being copied onto the &lt;code&gt;Manager&lt;/code&gt; class.</source>
          <target state="translated">并非每个 &lt;code&gt;QuerySet&lt;/code&gt; 方法在 &lt;code&gt;Manager&lt;/code&gt; 级别都有意义。例如，我们有意防止&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt; &lt;code&gt;QuerySet.delete()&lt;/code&gt; &lt;/a&gt;方法复制到 &lt;code&gt;Manager&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="a63cbf6b4d6edab9e07d126c7a36e814a81f1ec6" translate="yes" xml:space="preserve">
          <source>Not every template in &lt;code&gt;contrib/admin/templates/admin&lt;/code&gt; may be overridden per app or per model. The following can:</source>
          <target state="translated">并非每个应用程序或每个模型都可以覆盖 &lt;code&gt;contrib/admin/templates/admin&lt;/code&gt; 中的每个模板。以下可以：</target>
        </trans-unit>
        <trans-unit id="acba9927675c8a60aae9adcfef202f41a6c00c6d" translate="yes" xml:space="preserve">
          <source>Not found anything? See &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/help/&quot;&gt;FAQ: Getting Help&lt;/a&gt; for information on getting support and asking questions to the community.</source>
          <target state="translated">找不到任何东西吗？有关获得支持和向社区提出问题的信息，请参见&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/help/&quot;&gt;FAQ：获得帮助&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2fc7fe98cf64c700ce9b0cc4bb17c0caec7c3361" translate="yes" xml:space="preserve">
          <source>Not represented in the form</source>
          <target state="translated">未以格式表示</target>
        </trans-unit>
        <trans-unit id="d3f69563db3e7715296e2ae2d359c0c8bdd2cce0" translate="yes" xml:space="preserve">
          <source>Not using Django templates?</source>
          <target state="translated">没有使用Django模板?</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="296473149ccc264ba7b462302f22e07ee1613215" translate="yes" xml:space="preserve">
          <source>Note &lt;code&gt;{{ article.pub_date|date:&quot;F j, Y&quot; }}&lt;/code&gt; uses a Unix-style &amp;ldquo;pipe&amp;rdquo; (the &amp;ldquo;|&amp;rdquo; character). This is called a template filter, and it&amp;rsquo;s a way to filter the value of a variable. In this case, the date filter formats a Python datetime object in the given format (as found in PHP&amp;rsquo;s date function).</source>
          <target state="translated">注意 &lt;code&gt;{{ article.pub_date|date:&quot;F j, Y&quot; }}&lt;/code&gt; 使用Unix风格的&amp;ldquo; pipe&amp;rdquo;（&amp;ldquo; |&amp;rdquo;字符）。这称为模板过滤器，它是一种过滤变量值的方法。在这种情况下，日期过滤器会以给定格式（如PHP的date函数中所示）格式化Python datetime对象。</target>
        </trans-unit>
        <trans-unit id="870a794d4d0468102a15a5fa5bb46615f6e62898" translate="yes" xml:space="preserve">
          <source>Note a few important things about how the test client works:</source>
          <target state="translated">注意测试客户端工作的几个重要事项。</target>
        </trans-unit>
        <trans-unit id="5da84070f0015820b57bc36610be733ca3294c24" translate="yes" xml:space="preserve">
          <source>Note also that Django stores signal handlers as weak references by default, so if your handler is a local function, it may be garbage collected. To prevent this, pass &lt;code&gt;weak=False&lt;/code&gt; when you call the signal&amp;rsquo;s &lt;a href=&quot;../topics/signals#django.dispatch.Signal.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另请注意，默认情况下，Django将信号处理程序存储为弱引用，因此，如果处理程序是本地函数，则可能会被垃圾回收。为了防止这种情况，请在调用信号的&lt;a href=&quot;../topics/signals#django.dispatch.Signal.connect&quot;&gt; &lt;code&gt;connect()&lt;/code&gt; &lt;/a&gt;时传递 &lt;code&gt;weak=False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14299bd3cea26d7db0d4aabfc73b1f096d5551d9" translate="yes" xml:space="preserve">
          <source>Note also that while the MAC can guarantee the authenticity of the data (that it was generated by your site, and not someone else), and the integrity of the data (that it is all there and correct), it cannot guarantee freshness i.e. that you are being sent back the last thing you sent to the client. This means that for some uses of session data, the cookie backend might open you up to &lt;a href=&quot;https://en.wikipedia.org/wiki/Replay_attack&quot;&gt;replay attacks&lt;/a&gt;. Unlike other session backends which keep a server-side record of each session and invalidate it when a user logs out, cookie-based sessions are not invalidated when a user logs out. Thus if an attacker steals a user&amp;rsquo;s cookie, they can use that cookie to login as that user even if the user logs out. Cookies will only be detected as &amp;lsquo;stale&amp;rsquo; if they are older than your &lt;a href=&quot;../../ref/settings#std:setting-SESSION_COOKIE_AGE&quot;&gt;&lt;code&gt;SESSION_COOKIE_AGE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">还请注意，虽然MAC可以保证数据的真实性（它是由您的站点生成的，而不是其他人生成的），以及数据的完整性（它是全部并且正确的），但它不能保证数据的新鲜度，即您将被发送回您发送给客户端的最后一件事。这意味着对于会话数据的某些用途，Cookie后端可能会使您&lt;a href=&quot;https://en.wikipedia.org/wiki/Replay_attack&quot;&gt;重播攻击&lt;/a&gt;。与其他会话后端不同，该后端保留每个会话的服务器端记录并在用户注销时使其无效，而基于cookie的会话在用户注销时不会无效。因此，如果攻击者窃取了用户的cookie，则即使用户注销了，他们也可以使用该cookie登录该用户。如果Cookie的年龄超过您的&lt;a href=&quot;../../ref/settings#std:setting-SESSION_COOKIE_AGE&quot;&gt; &lt;code&gt;SESSION_COOKIE_AGE&lt;/code&gt; ,&lt;/a&gt;则它们只会被检测为&amp;ldquo;陈旧&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="a33d9580056f5d9f9ef0f3f8d807edc652ece048" translate="yes" xml:space="preserve">
          <source>Note also that you can only inherit from one generic view - that is, only one parent class may inherit from &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; and the rest (if any) should be mixins. Trying to inherit from more than one class that inherits from &lt;code&gt;View&lt;/code&gt; - for example, trying to use a form at the top of a list and combining &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ProcessFormView&quot;&gt;&lt;code&gt;ProcessFormView&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; - won&amp;rsquo;t work as expected.</source>
          <target state="translated">还要注意，您只能从一个通用视图继承-也就是说，只有一个父类可以从&lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt;继承，其余的（如果有的话）应该是mixins。尝试从多个继承自 &lt;code&gt;View&lt;/code&gt; 的类中进行继承-例如，尝试使用列表顶部的表单并将&lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ProcessFormView&quot;&gt; &lt;code&gt;ProcessFormView&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt;结合使用-不会按预期工作。</target>
        </trans-unit>
        <trans-unit id="9582cd85442dd5db57f039a1ee4d57e14418eb91" translate="yes" xml:space="preserve">
          <source>Note also, that if you delete an object that has a &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt;&lt;code&gt;GenericRelation&lt;/code&gt;&lt;/a&gt;, any objects which have a &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt;&lt;code&gt;GenericForeignKey&lt;/code&gt;&lt;/a&gt; pointing at it will be deleted as well. In the example above, this means that if a &lt;code&gt;Bookmark&lt;/code&gt; object were deleted, any &lt;code&gt;TaggedItem&lt;/code&gt; objects pointing at it would be deleted at the same time.</source>
          <target state="translated">还要注意，如果删除具有&lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt; &lt;code&gt;GenericRelation&lt;/code&gt; &lt;/a&gt;的对象，则任何具有&lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt; &lt;code&gt;GenericForeignKey&lt;/code&gt; &lt;/a&gt;指向它的对象也将被删除。在上面的示例中，这意味着如果删除了 &lt;code&gt;Bookmark&lt;/code&gt; 对象，则指向该对象的所有 &lt;code&gt;TaggedItem&lt;/code&gt; 对象都将被同时删除。</target>
        </trans-unit>
        <trans-unit id="afb22d70274d73a3af0a11a9efbc7601c6cffe84" translate="yes" xml:space="preserve">
          <source>Note however that not all these methods are required and may be deliberately omitted. As it happens, it is possible to leave each method unimplemented and still have a working Storage.</source>
          <target state="translated">但是请注意,并非所有这些方法都是必需的,可能会被故意省略。碰巧的是,可以不执行每一个方法,而仍然有一个工作的存储。</target>
        </trans-unit>
        <trans-unit id="a281167ca6f3f3d6ce6cf851b7d39c49313bd017" translate="yes" xml:space="preserve">
          <source>Note on performance</source>
          <target state="translated">关于业绩的说明</target>
        </trans-unit>
        <trans-unit id="8edc7ffdd6f4a3b096034148187e765e050e9ef8" translate="yes" xml:space="preserve">
          <source>Note that &amp;ldquo;bar&amp;rdquo; in a template expression like &lt;code&gt;{{ foo.bar }}&lt;/code&gt; will be interpreted as a literal string and not using the value of the variable &amp;ldquo;bar&amp;rdquo;, if one exists in the template context.</source>
          <target state="translated">请注意，如果模板上下文中存在模板表达式，例如 &lt;code&gt;{{ foo.bar }}&lt;/code&gt; 中的&amp;ldquo; bar&amp;rdquo; 将被解释为文字字符串，而不使用变量&amp;ldquo; bar&amp;rdquo;的值。</target>
        </trans-unit>
        <trans-unit id="afe31081e1c0a0c22ce8c03c79b6e9fe781b5cdf" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#django.contrib.auth.decorators.permission_required&quot;&gt;&lt;code&gt;permission_required()&lt;/code&gt;&lt;/a&gt; also takes an optional &lt;code&gt;login_url&lt;/code&gt; parameter:</source>
          <target state="translated">请注意，&lt;a href=&quot;#django.contrib.auth.decorators.permission_required&quot;&gt; &lt;code&gt;permission_required()&lt;/code&gt; &lt;/a&gt;还带有可选的 &lt;code&gt;login_url&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="5935aa7699bc39ae3d2e0a6a74be308015833cce" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#django.contrib.auth.logout&quot;&gt;&lt;code&gt;logout()&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t throw any errors if the user wasn&amp;rsquo;t logged in.</source>
          <target state="translated">请注意，如果未登录用户，则&lt;a href=&quot;#django.contrib.auth.logout&quot;&gt; &lt;code&gt;logout()&lt;/code&gt; &lt;/a&gt;不会引发任何错误。</target>
        </trans-unit>
        <trans-unit id="d5a560efe9ed69acab07d99a89a77ed4ccc33f23" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#std:setting-EMAIL_USE_TLS&quot;&gt;&lt;code&gt;EMAIL_USE_TLS&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#std:setting-EMAIL_USE_SSL&quot;&gt;&lt;code&gt;EMAIL_USE_SSL&lt;/code&gt;&lt;/a&gt; are mutually exclusive, so only set one of those settings to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">请注意，&lt;a href=&quot;#std:setting-EMAIL_USE_TLS&quot;&gt; &lt;code&gt;EMAIL_USE_TLS&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;#std:setting-EMAIL_USE_SSL&quot;&gt; &lt;code&gt;EMAIL_USE_SSL&lt;/code&gt; &lt;/a&gt;是互斥的，因此只能将其中一项设置为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3a5ff144d4383f6e080bcaf3e8709508673fa55" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; is the only &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; method that is not exposed on a &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; itself. This is a safety mechanism to prevent you from accidentally requesting &lt;code&gt;Entry.objects.delete()&lt;/code&gt;, and deleting &lt;em&gt;all&lt;/em&gt; the entries. If you &lt;em&gt;do&lt;/em&gt; want to delete all the objects, then you have to explicitly request a complete query set:</source>
          <target state="translated">请注意，&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt;是唯一未在&lt;a href=&quot;managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt;本身上公开的&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;方法。这是一种安全机制，可防止您意外地请求 &lt;code&gt;Entry.objects.delete()&lt;/code&gt; 并删除&lt;em&gt;所有&lt;/em&gt;条目。如果&lt;em&gt;确实&lt;/em&gt;要删除所有对象，则必须显式请求一个完整的查询集：&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="efbe9c61755a3354107632b1df1edcfca88d5654" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt;&lt;code&gt;request.FILES&lt;/code&gt;&lt;/a&gt; will only contain data if the request method was &lt;code&gt;POST&lt;/code&gt; and the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; that posted the request has the attribute &lt;code&gt;enctype=&quot;multipart/form-data&quot;&lt;/code&gt;. Otherwise, &lt;code&gt;request.FILES&lt;/code&gt; will be empty.</source>
          <target state="translated">请注意，仅当请求方法为 &lt;code&gt;POST&lt;/code&gt; 并且发布请求的 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 具有属性 &lt;code&gt;enctype=&quot;multipart/form-data&quot;&lt;/code&gt; ，&lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt; &lt;code&gt;request.FILES&lt;/code&gt; &lt;/a&gt;才会包含数据。否则， &lt;code&gt;request.FILES&lt;/code&gt; 将为空。</target>
        </trans-unit>
        <trans-unit id="d0796c678d8887176b4064744ab4bf371a4b7ac7" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt;&lt;code&gt;request.FILES&lt;/code&gt;&lt;/a&gt; will only contain data if the request method was &lt;code&gt;POST&lt;/code&gt;, at least one file field was actually posted, and the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; that posted the request has the attribute &lt;code&gt;enctype=&quot;multipart/form-data&quot;&lt;/code&gt;. Otherwise, &lt;code&gt;request.FILES&lt;/code&gt; will be empty.</source>
          <target state="translated">请注意，仅当请求方法为 &lt;code&gt;POST&lt;/code&gt; ，实际已发布至少一个文件字段且发布请求的 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 具有属性 &lt;code&gt;enctype=&quot;multipart/form-data&quot;&lt;/code&gt; ，&lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt; &lt;code&gt;request.FILES&lt;/code&gt; &lt;/a&gt;仅包含数据。否则， &lt;code&gt;request.FILES&lt;/code&gt; 将为空。</target>
        </trans-unit>
        <trans-unit id="114ec4ae4f7b3f1c9ee023cbb2f4ae83341a7264" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../exceptions#django.core.exceptions.ObjectDoesNotExist&quot;&gt;&lt;code&gt;django.core.exceptions.ObjectDoesNotExist&lt;/code&gt;&lt;/a&gt;, which is the base class for all Django database API &lt;code&gt;DoesNotExist&lt;/code&gt; exceptions, has &lt;code&gt;silent_variable_failure = True&lt;/code&gt;. So if you&amp;rsquo;re using Django templates with Django model objects, any &lt;code&gt;DoesNotExist&lt;/code&gt; exception will fail silently.</source>
          <target state="translated">请注意，&lt;a href=&quot;../exceptions#django.core.exceptions.ObjectDoesNotExist&quot;&gt; &lt;code&gt;django.core.exceptions.ObjectDoesNotExist&lt;/code&gt; &lt;/a&gt;是所有Django数据库API &lt;code&gt;DoesNotExist&lt;/code&gt; 异常的基类，具有 &lt;code&gt;silent_variable_failure = True&lt;/code&gt; 。因此，如果您将Django模板与Django模型对象一起使用，则所有 &lt;code&gt;DoesNotExist&lt;/code&gt; 异常都将静默失败。</target>
        </trans-unit>
        <trans-unit id="12f148b2871d0ee0ac320bfab0d6043b1e56d19b" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;django-admin#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; strips all headers with underscores in the name, so you won&amp;rsquo;t see them in &lt;code&gt;META&lt;/code&gt;. This prevents header-spoofing based on ambiguity between underscores and dashes both being normalizing to underscores in WSGI environment variables. It matches the behavior of Web servers like Nginx and Apache 2.4+.</source>
          <target state="translated">请注意，&lt;a href=&quot;django-admin#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; 会&lt;/a&gt;在名称中用下划线删除所有标头，因此您不会在 &lt;code&gt;META&lt;/code&gt; 中看到它们。这样可以防止基于下划线和破折号之间的歧义的标头欺骗在WSGI环境变量中均被标准化为下划线。它与Nginx和Apache 2.4+等Web服务器的行为匹配。</target>
        </trans-unit>
        <trans-unit id="51299edb450e554bd78f74b0809db32387011d1a" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;fields#django.forms.MultiValueField&quot;&gt;&lt;code&gt;MultiValueField&lt;/code&gt;&lt;/a&gt; has a complementary method &lt;a href=&quot;fields#django.forms.MultiValueField.compress&quot;&gt;&lt;code&gt;compress()&lt;/code&gt;&lt;/a&gt; with the opposite responsibility - to combine cleaned values of all member fields into one.</source>
          <target state="translated">请注意，&lt;a href=&quot;fields#django.forms.MultiValueField&quot;&gt; &lt;code&gt;MultiValueField&lt;/code&gt; &lt;/a&gt;具有互补的&lt;a href=&quot;fields#django.forms.MultiValueField.compress&quot;&gt; &lt;code&gt;compress()&lt;/code&gt; &lt;/a&gt;方法，其职责相反-将所有成员字段的清除值组合为一个。</target>
        </trans-unit>
        <trans-unit id="174125b977abe383ebe027c7283e688f70171a40" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Form.add_error()&lt;/code&gt; automatically removes the relevant field from &lt;code&gt;cleaned_data&lt;/code&gt;.</source>
          <target state="translated">请注意， &lt;code&gt;Form.add_error()&lt;/code&gt; 会自动从 &lt;code&gt;cleaned_data&lt;/code&gt; 中删除相关字段。</target>
        </trans-unit>
        <trans-unit id="4591c68c233751182879e8ea4c7ab5f0a044d31a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;add()&lt;/code&gt;, &lt;code&gt;create()&lt;/code&gt;, &lt;code&gt;remove()&lt;/code&gt;, &lt;code&gt;clear()&lt;/code&gt;, and &lt;code&gt;set()&lt;/code&gt; all apply database changes immediately for all types of related fields. In other words, there is no need to call &lt;code&gt;save()&lt;/code&gt; on either end of the relationship.</source>
          <target state="translated">请注意， &lt;code&gt;add()&lt;/code&gt; ， &lt;code&gt;create()&lt;/code&gt; ， &lt;code&gt;remove()&lt;/code&gt; ， &lt;code&gt;clear()&lt;/code&gt; 和 &lt;code&gt;set()&lt;/code&gt; 都立即将数据库更改应用于所有类型的相关字段。换句话说，不需要在关系的任何一端调用 &lt;code&gt;save()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90ef74f6371e10a6782d0c647e7ce73f1b8c10a7" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;django.conf.settings&lt;/code&gt; isn&amp;rsquo;t a module &amp;ndash; it&amp;rsquo;s an object. So importing individual settings is not possible:</source>
          <target state="translated">请注意， &lt;code&gt;django.conf.settings&lt;/code&gt; 不是模块，而是一个对象。因此，无法导入单个设置：</target>
        </trans-unit>
        <trans-unit id="4d70a240827ed6a63d96ee2feb5521ee6e8c53d8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;dumpdata&lt;/code&gt; uses the default manager on the model for selecting the records to dump. If you&amp;rsquo;re using a &lt;a href=&quot;../topics/db/managers#custom-managers&quot;&gt;custom manager&lt;/a&gt; as the default manager and it filters some of the available records, not all of the objects will be dumped.</source>
          <target state="translated">请注意， &lt;code&gt;dumpdata&lt;/code&gt; 使用模型上的默认管理器来选择要转储的记录。如果您使用&lt;a href=&quot;../topics/db/managers#custom-managers&quot;&gt;自定义管理器&lt;/a&gt;作为默认管理器，并且它过滤了一些可用的记录，则不会转储所有对象。</target>
        </trans-unit>
        <trans-unit id="617474170b52d9ea43a8f37beddaa5594df33958" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;earliest()&lt;/code&gt; and &lt;code&gt;latest()&lt;/code&gt; exist purely for convenience and readability.</source>
          <target state="translated">请注意， &lt;code&gt;earliest()&lt;/code&gt; 和 &lt;code&gt;latest()&lt;/code&gt; 纯粹是为了方便和易读而存在。</target>
        </trans-unit>
        <trans-unit id="60bc6baf0f131a6ccb397c320fca68e1cf2cb32d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;first()&lt;/code&gt; is a convenience method, the following code sample is equivalent to the above example:</source>
          <target state="translated">请注意， &lt;code&gt;first()&lt;/code&gt; 是一种便捷方法，下面的代码示例与上述示例等效：</target>
        </trans-unit>
        <trans-unit id="2477105d4945a87d3531b00f61d9dfbbde81b7a1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;full_clean()&lt;/code&gt; will &lt;em&gt;not&lt;/em&gt; be called automatically when you call your model&amp;rsquo;s &lt;a href=&quot;#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; method. You&amp;rsquo;ll need to call it manually when you want to run one-step model validation for your own manually created models. For example:</source>
          <target state="translated">需要注意的是 &lt;code&gt;full_clean()&lt;/code&gt; 将&lt;em&gt;不会&lt;/em&gt;被自动当你调用模型的所谓&lt;a href=&quot;#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;方法。若要为自己创建的模型运行一步模型验证，则需要手动调用它。例如：</target>
        </trans-unit>
        <trans-unit id="b60eaaa655b6061f0ff964b2c7c786fae5248e6d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;localize&lt;/code&gt; is a pytz extension to the &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; API. Also, you may want to catch &lt;code&gt;pytz.InvalidTimeError&lt;/code&gt;. The documentation of pytz contains &lt;a href=&quot;http://pytz.sourceforge.net/#example-usage&quot;&gt;more examples&lt;/a&gt;. You should review it before attempting to manipulate aware datetimes.</source>
          <target state="translated">请注意， &lt;code&gt;localize&lt;/code&gt; 是&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt; API 的pytz扩展。另外，您可能想捕获 &lt;code&gt;pytz.InvalidTimeError&lt;/code&gt; 。pytz的文档包含&lt;a href=&quot;http://pytz.sourceforge.net/#example-usage&quot;&gt;更多示例&lt;/a&gt;。您应在尝试操纵有意识的日期时间之前对其进行检查。</target>
        </trans-unit>
        <trans-unit id="fcff2e0ec8bf12bd9fd1d74a3726364370255148" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;output_field&lt;/code&gt; is only required when Django is unable to determine what field type the result should be. Complex expressions that mix field types should define the desired &lt;code&gt;output_field&lt;/code&gt;. For example, adding an &lt;code&gt;IntegerField()&lt;/code&gt; and a &lt;code&gt;FloatField()&lt;/code&gt; together should probably have &lt;code&gt;output_field=FloatField()&lt;/code&gt; defined.</source>
          <target state="translated">请注意，仅当Django无法确定结果应为哪种字段类型时，才需要 &lt;code&gt;output_field&lt;/code&gt; 。混合字段类型的复杂表达式应定义所需的 &lt;code&gt;output_field&lt;/code&gt; 。例如，将 &lt;code&gt;IntegerField()&lt;/code&gt; 和 &lt;code&gt;FloatField()&lt;/code&gt; 一起添加可能应该定义了 &lt;code&gt;output_field=FloatField()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e0000d6c434afcf6f1baf1d4b21199b5b33c66a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;page&lt;/code&gt;&lt;em&gt;must&lt;/em&gt; be either a valid page number or the value &lt;code&gt;last&lt;/code&gt;; any other value for &lt;code&gt;page&lt;/code&gt; will result in a 404 error.</source>
          <target state="translated">请注意， &lt;code&gt;page&lt;/code&gt; &lt;em&gt;必须&lt;/em&gt;是有效的页面编号或值 &lt;code&gt;last&lt;/code&gt; ; &lt;code&gt;page&lt;/code&gt; 任何其他值都将导致404错误。</target>
        </trans-unit>
        <trans-unit id="4fa87508d78ed938ea3b53c04e6e8bac6e4c0d53" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;pnt&lt;/code&gt; may also be constructed with EWKT, an &amp;ldquo;extended&amp;rdquo; form of WKT that includes the SRID:</source>
          <target state="translated">请注意，也可以使用EWKT构造 &lt;code&gt;pnt&lt;/code&gt; ，EWKT是WKT的&amp;ldquo;扩展&amp;rdquo;形式，其中包括SRID：</target>
        </trans-unit>
        <trans-unit id="69afc1bd88ec7db55e0a8541d45277ff4bd45240" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;render()&lt;/code&gt; returns the empty string. &lt;code&gt;render()&lt;/code&gt; should always return string output. If all the template tag does is set a variable, &lt;code&gt;render()&lt;/code&gt; should return the empty string.</source>
          <target state="translated">请注意， &lt;code&gt;render()&lt;/code&gt; 返回空字符串。 &lt;code&gt;render()&lt;/code&gt; 应该始终返回字符串输出。如果所有模板标记都设置了变量，则 &lt;code&gt;render()&lt;/code&gt; 应该返回空字符串。</target>
        </trans-unit>
        <trans-unit id="eeadeb6021da41a361ee20d5764d2103bff4b20d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;sqlmigrate&lt;/code&gt; doesn&amp;rsquo;t colorize its output.</source>
          <target state="translated">请注意， &lt;code&gt;sqlmigrate&lt;/code&gt; 不会使输出变色。</target>
        </trans-unit>
        <trans-unit id="f4ef6ae7ec0603ef3df71659f00737594af30ccc" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;striptags&lt;/code&gt; doesn&amp;rsquo;t give any guarantee about its output being HTML safe, particularly with non valid HTML input. So &lt;strong&gt;NEVER&lt;/strong&gt; apply the &lt;code&gt;safe&lt;/code&gt; filter to a &lt;code&gt;striptags&lt;/code&gt; output. If you are looking for something more robust, you can use the &lt;code&gt;bleach&lt;/code&gt; Python library, notably its &lt;a href=&quot;https://bleach.readthedocs.io/en/latest/clean.html&quot;&gt;clean&lt;/a&gt; method.</source>
          <target state="translated">请注意， &lt;code&gt;striptags&lt;/code&gt; 不能保证其输出是HTML安全的，特别是对于无效的HTML输入而言。因此，&lt;strong&gt;切勿&lt;/strong&gt;将 &lt;code&gt;safe&lt;/code&gt; 过滤器应用于 &lt;code&gt;striptags&lt;/code&gt; 输出。如果您正在寻找更强大的功能，则可以使用 &lt;code&gt;bleach&lt;/code&gt; Python库，尤其是它的&lt;a href=&quot;https://bleach.readthedocs.io/en/latest/clean.html&quot;&gt;clean&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="e6c1a0bf2d18380514c058c2103f2660189ecd36" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;{% regroup %}&lt;/code&gt; does not order its input! Our example relies on the fact that the &lt;code&gt;cities&lt;/code&gt; list was ordered by &lt;code&gt;country&lt;/code&gt; in the first place. If the &lt;code&gt;cities&lt;/code&gt; list did &lt;em&gt;not&lt;/em&gt; order its members by &lt;code&gt;country&lt;/code&gt;, the regrouping would naively display more than one group for a single country. For example, say the &lt;code&gt;cities&lt;/code&gt; list was set to this (note that the countries are not grouped together):</source>
          <target state="translated">请注意， &lt;code&gt;{% regroup %}&lt;/code&gt; 不会对输入进行排序！我们的示例基于以下事实： &lt;code&gt;cities&lt;/code&gt; 列表首先是按 &lt;code&gt;country&lt;/code&gt; 排序的。如果 &lt;code&gt;cities&lt;/code&gt; 列表&lt;em&gt;未按&lt;/em&gt; &lt;code&gt;country&lt;/code&gt; 排序，则重新组合将仅显示单个国家/地区的多个组。例如，假设将 &lt;code&gt;cities&lt;/code&gt; 列表设置为此（请注意，这些国家未分组在一起）：</target>
        </trans-unit>
        <trans-unit id="555959baa50f98a7ff375b125440d82908185be5" translate="yes" xml:space="preserve">
          <source>Note that Django also provides &lt;a href=&quot;../ref/request-response#django.http.HttpRequest.GET&quot;&gt;&lt;code&gt;request.GET&lt;/code&gt;&lt;/a&gt; for accessing GET data in the same way &amp;ndash; but we&amp;rsquo;re explicitly using &lt;a href=&quot;../ref/request-response#django.http.HttpRequest.POST&quot;&gt;&lt;code&gt;request.POST&lt;/code&gt;&lt;/a&gt; in our code, to ensure that data is only altered via a POST call.</source>
          <target state="translated">请注意，Django还提供了&lt;a href=&quot;../ref/request-response#django.http.HttpRequest.GET&quot;&gt; &lt;code&gt;request.GET&lt;/code&gt; ,&lt;/a&gt;用于以相同的方式访问GET数据-但我们在代码中明确使用&lt;a href=&quot;../ref/request-response#django.http.HttpRequest.POST&quot;&gt; &lt;code&gt;request.POST&lt;/code&gt; &lt;/a&gt;，以确保仅通过POST调用来更改数据。</target>
        </trans-unit>
        <trans-unit id="5a86bd35e7d0371b683012acf70b7110506f8792" translate="yes" xml:space="preserve">
          <source>Note that a callable (with the parentheses omitted) is passed to &lt;code&gt;default&lt;/code&gt;, not an instance of &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">注意，可调用（省略括号）被传递给 &lt;code&gt;default&lt;/code&gt; ，而不是 &lt;code&gt;UUID&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="769f71352d570fcd1ad93b9334853d28dc71b571" translate="yes" xml:space="preserve">
          <source>Note that a settings file should &lt;em&gt;not&lt;/em&gt; import from &lt;code&gt;global_settings&lt;/code&gt;, because that&amp;rsquo;s redundant.</source>
          <target state="translated">请注意，设置文件应该&lt;em&gt;不是&lt;/em&gt;从导入 &lt;code&gt;global_settings&lt;/code&gt; ，因为那是多余的。</target>
        </trans-unit>
        <trans-unit id="91d33e115058c62ed3b06406e2b16a18f7403773" translate="yes" xml:space="preserve">
          <source>Note that all subsequent PDF-generation methods are called on the PDF object (in this case, &lt;code&gt;p&lt;/code&gt;) &amp;ndash; not on &lt;code&gt;buffer&lt;/code&gt;.</source>
          <target state="translated">请注意，所有后续的PDF生成方法都在PDF对象（在本例中为 &lt;code&gt;p&lt;/code&gt; ）上调用，而不是在 &lt;code&gt;buffer&lt;/code&gt; 上调用。</target>
        </trans-unit>
        <trans-unit id="e2720462e729bf12c9dc1637761930abaf6e5302" translate="yes" xml:space="preserve">
          <source>Note that although this function uses &lt;code&gt;str.format()&lt;/code&gt; to do the interpolation, some of the formatting options provided by &lt;code&gt;str.format()&lt;/code&gt; (e.g. number formatting) will not work, since all arguments are passed through &lt;a href=&quot;#django.utils.html.conditional_escape&quot;&gt;&lt;code&gt;conditional_escape()&lt;/code&gt;&lt;/a&gt; which (ultimately) calls &lt;a href=&quot;#django.utils.encoding.force_str&quot;&gt;&lt;code&gt;force_str()&lt;/code&gt;&lt;/a&gt; on the values.</source>
          <target state="translated">请注意，尽管此函数使用 &lt;code&gt;str.format()&lt;/code&gt; 进行插值，但是 &lt;code&gt;str.format()&lt;/code&gt; 提供的某些格式设置选项（例如数字格式设置）将不起作用，因为所有参数均通过&lt;a href=&quot;#django.utils.html.conditional_escape&quot;&gt; &lt;code&gt;conditional_escape()&lt;/code&gt; &lt;/a&gt;传递（最终）在值上调用&lt;a href=&quot;#django.utils.encoding.force_str&quot;&gt; &lt;code&gt;force_str()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1655d49d10104c3e29e68482b9119e277e90f07d" translate="yes" xml:space="preserve">
          <source>Note that an even more flexible (but more heavyweight) way of doing this would be to use Django&amp;rsquo;s template system. Assuming Lawrence.com and LJWorld.com have different template directories (&lt;a href=&quot;../settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt;), you could farm out to the template system like so:</source>
          <target state="translated">请注意，更灵活（但更重）的方法是使用Django的模板系统。假设Lawrence.com和LJWorld.com具有不同的模板目录（&lt;a href=&quot;../settings#std:setting-TEMPLATES-DIRS&quot;&gt; &lt;code&gt;DIRS&lt;/code&gt; &lt;/a&gt;），则可以像这样将其扩展到模板系统：</target>
        </trans-unit>
        <trans-unit id="a03be98ba22733726f31548200c2a1eb13fd38d0" translate="yes" xml:space="preserve">
          <source>Note that any data set during the anonymous session is retained in the session after a user logs in.</source>
          <target state="translated">请注意,在匿名会话期间设置的任何数据在用户登录后都会保留在该会话中。</target>
        </trans-unit>
        <trans-unit id="5e76af3cfee25aa8aedca5c9cce37758a092a5a5" translate="yes" xml:space="preserve">
          <source>Note that any errors raised by your &lt;a href=&quot;api#django.forms.Form.clean&quot;&gt;&lt;code&gt;Form.clean()&lt;/code&gt;&lt;/a&gt; override will not be associated with any field in particular. They go into a special &amp;ldquo;field&amp;rdquo; (called &lt;code&gt;__all__&lt;/code&gt;), which you can access via the &lt;a href=&quot;api#django.forms.Form.non_field_errors&quot;&gt;&lt;code&gt;non_field_errors()&lt;/code&gt;&lt;/a&gt; method if you need to. If you want to attach errors to a specific field in the form, you need to call &lt;a href=&quot;api#django.forms.Form.add_error&quot;&gt;&lt;code&gt;add_error()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请注意，由&lt;a href=&quot;api#django.forms.Form.clean&quot;&gt; &lt;code&gt;Form.clean()&lt;/code&gt; &lt;/a&gt;覆盖引发的任何错误都不会与任何特定字段关联。它们进入一个特殊的&amp;ldquo;字段&amp;rdquo;（称为 &lt;code&gt;__all__&lt;/code&gt; ），您可以根据需要通过&lt;a href=&quot;api#django.forms.Form.non_field_errors&quot;&gt; &lt;code&gt;non_field_errors()&lt;/code&gt; &lt;/a&gt;方法进行访问。如果要将错误附加到表单中的特定字段，则需要调用&lt;a href=&quot;api#django.forms.Form.add_error&quot;&gt; &lt;code&gt;add_error()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bb7f74b1561095f41f3d18b56dd6375c9ec3906f" translate="yes" xml:space="preserve">
          <source>Note that any of Django&amp;rsquo;s default admin templates can be overridden. To override a template, do the same thing you did with &lt;code&gt;base_site.html&lt;/code&gt; &amp;ndash; copy it from the default directory into your custom directory, and make changes.</source>
          <target state="translated">请注意，任何Django的默认管理模板都可以被覆盖。要覆盖模板，请执行与 &lt;code&gt;base_site.html&lt;/code&gt; 相同的操作 &amp;ndash;将其从默认目录复制到自定义目录中，然后进行更改。</target>
        </trans-unit>
        <trans-unit id="239df39fbba56c17e5c95caf2ecf410c00f83202" translate="yes" xml:space="preserve">
          <source>Note that any text-based field &amp;ndash; such as &lt;code&gt;CharField&lt;/code&gt; or &lt;code&gt;EmailField&lt;/code&gt; &amp;ndash; always cleans the input into a string. We&amp;rsquo;ll cover the encoding implications later in this document.</source>
          <target state="translated">请注意，任何基于文本的字段（例如 &lt;code&gt;CharField&lt;/code&gt; 或 &lt;code&gt;EmailField&lt;/code&gt; ）始终会将输入清除为字符串。我们将在本文档后面部分介绍编码含义。</target>
        </trans-unit>
        <trans-unit id="7bedfd96029424831aed4722f0eb96eed865f31a" translate="yes" xml:space="preserve">
          <source>Note that as the method is now a property, in Python code it will need to be accessed appropriately:</source>
          <target state="translated">请注意,由于该方法现在是一个属性,在 Python 代码中需要适当地访问它。</target>
        </trans-unit>
        <trans-unit id="fe32d6c5f76eb9f75c146ee626da625540f82c24" translate="yes" xml:space="preserve">
          <source>Note that calling &lt;code&gt;django.setup()&lt;/code&gt; is only necessary if your code is truly standalone. When invoked by your Web server, or through &lt;a href=&quot;../ref/django-admin&quot;&gt;django-admin&lt;/a&gt;, Django will handle this for you.</source>
          <target state="translated">请注意，仅当代码真正独立时才需要调用 &lt;code&gt;django.setup()&lt;/code&gt; 。当您的Web服务器或通过&lt;a href=&quot;../ref/django-admin&quot;&gt;django-admin&lt;/a&gt;调用时，Django将为您处理此问题。</target>
        </trans-unit>
        <trans-unit id="3bc381cc771bad16450ca029b7c0214227351136" translate="yes" xml:space="preserve">
          <source>Note that choices can be any sequence object &amp;ndash; not necessarily a list or tuple. This lets you construct choices dynamically. But if you find yourself hacking &lt;a href=&quot;#django.db.models.Field.choices&quot;&gt;&lt;code&gt;choices&lt;/code&gt;&lt;/a&gt; to be dynamic, you&amp;rsquo;re probably better off using a proper database table with a &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#django.db.models.Field.choices&quot;&gt;&lt;code&gt;choices&lt;/code&gt;&lt;/a&gt; is meant for static data that doesn&amp;rsquo;t change much, if ever.</source>
          <target state="translated">请注意，选择可以是任何序列对象-不一定是列表或元组。这使您可以动态构造选择。但是，如果您发现自己的黑客&lt;a href=&quot;#django.db.models.Field.choices&quot;&gt; &lt;code&gt;choices&lt;/code&gt; &lt;/a&gt;是动态的，那么最好使用带有&lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;的正确数据库表。&lt;a href=&quot;#django.db.models.Field.choices&quot;&gt; &lt;code&gt;choices&lt;/code&gt; &lt;/a&gt;是针对不变的静态数据（如果有的话）。</target>
        </trans-unit>
        <trans-unit id="23311557d1c1b4a3bc91b67a7dcbb2a15f706caf" translate="yes" xml:space="preserve">
          <source>Note that command options that take no arguments are passed as keywords with &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;, as you can see with the &lt;code&gt;interactive&lt;/code&gt; option above.</source>
          <target state="translated">请注意，不带任何参数的命令选项将通过 &lt;code&gt;True&lt;/code&gt; 或 &lt;code&gt;False&lt;/code&gt; 作为关键字传递，如您在上面的 &lt;code&gt;interactive&lt;/code&gt; 选项中所见。</target>
        </trans-unit>
        <trans-unit id="771c36984deec4007d5e353a2afde4a1288b3d14" translate="yes" xml:space="preserve">
          <source>Note that each form field has an ID attribute set to &lt;code&gt;id_&amp;lt;field-name&amp;gt;&lt;/code&gt;, which is referenced by the accompanying label tag. This is important in ensuring that forms are accessible to assistive technology such as screen reader software. You can also &lt;a href=&quot;../../ref/forms/api#ref-forms-api-configuring-label&quot;&gt;customize the way in which labels and ids are generated&lt;/a&gt;.</source>
          <target state="translated">请注意，每个表单字段都有一个ID属性设置为 &lt;code&gt;id_&amp;lt;field-name&amp;gt;&lt;/code&gt; ，该属性由随附的标签标记引用。这对于确保表单可以被辅助技术（例如屏幕阅读器软件）访问是很重要的。您还可以&lt;a href=&quot;../../ref/forms/api#ref-forms-api-configuring-label&quot;&gt;自定义标签和ID的生成方式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3bdfccd500eb934555bb43b9a29d41da73c40d02" translate="yes" xml:space="preserve">
          <source>Note that each process will have its own private cache instance, which means no cross-process caching is possible. This also means the local memory cache isn&amp;rsquo;t particularly memory-efficient, so it&amp;rsquo;s probably not a good choice for production environments. It&amp;rsquo;s nice for development.</source>
          <target state="translated">请注意，每个进程都有其自己的专用缓存实例，这意味着不可能进行跨进程缓存。这也意味着本地内存缓存不是特别有效的内存，因此对于生产环境而言，它可能不是一个好选择。这对开发很好。</target>
        </trans-unit>
        <trans-unit id="1f0445bbbacae2bc87d1553017a414c56d8a13c4" translate="yes" xml:space="preserve">
          <source>Note that each process will have its own private cache instance, which means no cross-process caching is possible. This obviously also means the local memory cache isn&amp;rsquo;t particularly memory-efficient, so it&amp;rsquo;s probably not a good choice for production environments. It&amp;rsquo;s nice for development.</source>
          <target state="translated">请注意，每个进程将具有其自己的专用缓存实例，这意味着不可能进行跨进程缓存。这显然也意味着本地内存缓存不是特别有效的内存，因此对于生产环境而言，它可能不是一个好选择。这对开发很好。</target>
        </trans-unit>
        <trans-unit id="a2eeff486edfad4d9520b6f22313f2e3567d2e11" translate="yes" xml:space="preserve">
          <source>Note that extra options will &lt;em&gt;always&lt;/em&gt; be passed to &lt;em&gt;every&lt;/em&gt; line in the included URLconf, regardless of whether the line&amp;rsquo;s view actually accepts those options as valid. For this reason, this technique is only useful if you&amp;rsquo;re certain that every view in the included URLconf accepts the extra options you&amp;rsquo;re passing.</source>
          <target state="translated">请注意，无论行的视图实际上是否接受这些选项，额外的选项将&lt;em&gt;始终&lt;/em&gt;传递到所包含的URLconf中的&lt;em&gt;每一&lt;/em&gt;行。因此，仅当您确定所包含的URLconf中的每个视图都接受要传递的额外选项时，此技术才有用。</target>
        </trans-unit>
        <trans-unit id="92c628e1fbd6a9010f3d0db034ba40cb41449dee" translate="yes" xml:space="preserve">
          <source>Note that having the view instance in the template context may expose potentially hazardous methods to template authors. To prevent methods like this from being called in the template, set &lt;code&gt;alters_data=True&lt;/code&gt; on those methods. For more information, read the documentation on &lt;a href=&quot;../templates/api#alters-data-description&quot;&gt;rendering a template context&lt;/a&gt;.</source>
          <target state="translated">请注意，在模板上下文中包含视图实例可能会向模板作者暴露潜在的危险方法。为了防止在模板中调用 &lt;code&gt;alters_data=True&lt;/code&gt; 方法，请在这些方法上设置alters_data = True。有关更多信息，请阅读有关&lt;a href=&quot;../templates/api#alters-data-description&quot;&gt;渲染模板上下文&lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="98f6de66c762486638954c88d910ab00b17debe3" translate="yes" xml:space="preserve">
          <source>Note that if &lt;a href=&quot;#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;, then the corresponding locale-dictated format has higher precedence and will be applied.</source>
          <target state="translated">请注意，如果&lt;a href=&quot;#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; ，则相应的区域设置格式具有更高的优先级，并将被应用。</target>
        </trans-unit>
        <trans-unit id="50d31d0e0ebd30e972979684ec82c5fb17e9796a" translate="yes" xml:space="preserve">
          <source>Note that if &lt;a href=&quot;#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;, then the locale-dictated format has higher precedence and will be applied instead.</source>
          <target state="translated">请注意，如果&lt;a href=&quot;#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; ，则由区域设置指定的格式具有更高的优先级，并将被应用。</target>
        </trans-unit>
        <trans-unit id="49e296c8c84c9dd47aab0634b92f9ddef9e72e21" translate="yes" xml:space="preserve">
          <source>Note that if a &lt;code&gt;ModelChoiceField&lt;/code&gt; is required and has a default initial value, no empty choice is created (regardless of the value of &lt;code&gt;empty_label&lt;/code&gt;).</source>
          <target state="translated">请注意，如果 &lt;code&gt;ModelChoiceField&lt;/code&gt; 是必需的并且具有默认的初始值，则不会创建任何空选择（无论 &lt;code&gt;empty_label&lt;/code&gt; 的值如何）。</target>
        </trans-unit>
        <trans-unit id="a602110fb64a1dd4cb469f056ba8051460109907" translate="yes" xml:space="preserve">
          <source>Note that if an empty string is given, the default value will &lt;em&gt;not&lt;/em&gt; be used. Use the &lt;a href=&quot;#std:templatefilter-default&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt; filter if you want to fallback for empty strings.</source>
          <target state="translated">请注意，如果给出一个空字符串，将&lt;em&gt;不&lt;/em&gt;使用默认值。如果要回退空字符串，请使用&lt;a href=&quot;#std:templatefilter-default&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;过滤器。</target>
        </trans-unit>
        <trans-unit id="80730ee1d592ce07bf82235a3404e06b9d3abf66" translate="yes" xml:space="preserve">
          <source>Note that if the URL you&amp;rsquo;re reversing doesn&amp;rsquo;t exist, you&amp;rsquo;ll get an &lt;a href=&quot;../exceptions#django.urls.NoReverseMatch&quot;&gt;&lt;code&gt;NoReverseMatch&lt;/code&gt;&lt;/a&gt; exception raised, which will cause your site to display an error page.</source>
          <target state="translated">请注意，如果您要反转的URL不存在，则会引发&lt;a href=&quot;../exceptions#django.urls.NoReverseMatch&quot;&gt; &lt;code&gt;NoReverseMatch&lt;/code&gt; &lt;/a&gt;异常，这将导致您的网站显示错误页面。</target>
        </trans-unit>
        <trans-unit id="3e45a85a7dcecfdfcfb4389a347188b10434abde" translate="yes" xml:space="preserve">
          <source>Note that if the form &lt;a href=&quot;#validation-on-modelform&quot;&gt;hasn&amp;rsquo;t been validated&lt;/a&gt;, calling &lt;code&gt;save()&lt;/code&gt; will do so by checking &lt;code&gt;form.errors&lt;/code&gt;. A &lt;code&gt;ValueError&lt;/code&gt; will be raised if the data in the form doesn&amp;rsquo;t validate &amp;ndash; i.e., if &lt;code&gt;form.errors&lt;/code&gt; evaluates to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">请注意，如果表单&lt;a href=&quot;#validation-on-modelform&quot;&gt;尚未通过验证&lt;/a&gt;，则调用 &lt;code&gt;save()&lt;/code&gt; 将通过检查 &lt;code&gt;form.errors&lt;/code&gt; 来进行验证。一个 &lt;code&gt;ValueError&lt;/code&gt; 异常将被提出如果表单中的数据不验证-也就是说，如果 &lt;code&gt;form.errors&lt;/code&gt; 计算结果为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61f3ec02092015ed9d1f89e12937af6bb0ee587e" translate="yes" xml:space="preserve">
          <source>Note that if the tests are run on a database with no transaction support (for instance, MySQL with the MyISAM engine), &lt;code&gt;setUpTestData()&lt;/code&gt; will be called before each test, negating the speed benefits.</source>
          <target state="translated">请注意，如果测试在没有事务支持的数据库上运行（例如，带有MyISAM引擎的MySQL）， &lt;code&gt;setUpTestData()&lt;/code&gt; 在每次测试之前调用setUpTestData（），从而降低了速度优势。</target>
        </trans-unit>
        <trans-unit id="a758f5f8e960e50154e5596b9c6aefae0ab85207" translate="yes" xml:space="preserve">
          <source>Note that if two fixtures with the same name but different fixture type are discovered (for example, if &lt;code&gt;mydata.json&lt;/code&gt; and &lt;code&gt;mydata.xml.gz&lt;/code&gt; were found in the same fixture directory), fixture installation will be aborted, and any data installed in the call to &lt;code&gt;loaddata&lt;/code&gt; will be removed from the database.</source>
          <target state="translated">请注意，如果发现两个具有相同名称但夹具类型不同的夹具（例如，如果在同一夹具目录中找到了 &lt;code&gt;mydata.json&lt;/code&gt; 和 &lt;code&gt;mydata.xml.gz&lt;/code&gt; ），夹具安装将被中止，并且所有安装在该夹具中的数据调用 &lt;code&gt;loaddata&lt;/code&gt; 将从数据库中删除。</target>
        </trans-unit>
        <trans-unit id="ac49bd48639bcacfaff102892d44aa3595f4440b" translate="yes" xml:space="preserve">
          <source>Note that if you don&amp;rsquo;t specify the &lt;code&gt;login_url&lt;/code&gt; parameter, you&amp;rsquo;ll need to ensure that the &lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt;&lt;code&gt;settings.LOGIN_URL&lt;/code&gt;&lt;/a&gt; and your login view are properly associated. For example, using the defaults, add the following lines to your URLconf:</source>
          <target state="translated">请注意，如果您未指定 &lt;code&gt;login_url&lt;/code&gt; 参数，则需要确保&lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt; &lt;code&gt;settings.LOGIN_URL&lt;/code&gt; &lt;/a&gt;和您的登录视图正确关联。例如，使用默认值，将以下行添加到URLconf：</target>
        </trans-unit>
        <trans-unit id="6cd271fbb7b9ed101646f23af0c3630189f7de5d" translate="yes" xml:space="preserve">
          <source>Note that if you provide a value to &lt;code&gt;redirect_field_name&lt;/code&gt;, you will most likely need to customize your login template as well, since the template context variable which stores the redirect path will use the value of &lt;code&gt;redirect_field_name&lt;/code&gt; as its key rather than &lt;code&gt;&quot;next&quot;&lt;/code&gt; (the default).</source>
          <target state="translated">请注意，如果您为 &lt;code&gt;redirect_field_name&lt;/code&gt; 提供一个值，则很可能还需要自定义登录模板，因为存储重定向路径的模板上下文变量将使用 &lt;code&gt;redirect_field_name&lt;/code&gt; 的值作为其键，而不是 &lt;code&gt;&quot;next&quot;&lt;/code&gt; （默认值） ）。</target>
        </trans-unit>
        <trans-unit id="7d9053627b6ab7bc8cafe04e748b5f7e44a6dca7" translate="yes" xml:space="preserve">
          <source>Note that if you provide an &lt;code&gt;exclude&lt;/code&gt; argument to &lt;code&gt;validate_unique()&lt;/code&gt;, any &lt;a href=&quot;options#django.db.models.Options.unique_together&quot;&gt;&lt;code&gt;unique_together&lt;/code&gt;&lt;/a&gt; constraint involving one of the fields you provided will not be checked.</source>
          <target state="translated">请注意，如果您为 &lt;code&gt;validate_unique()&lt;/code&gt; 提供了 &lt;code&gt;exclude&lt;/code&gt; 参数，则不会检查任何涉及您提供的字段之一的&lt;a href=&quot;options#django.db.models.Options.unique_together&quot;&gt; &lt;code&gt;unique_together&lt;/code&gt; &lt;/a&gt;约束。</target>
        </trans-unit>
        <trans-unit id="4bf8a879fdf5070b51826c9b7caa260383bcc815" translate="yes" xml:space="preserve">
          <source>Note that if you set this to point to a &lt;a href=&quot;#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt;, only the date portion of the field will be considered. Besides, when &lt;a href=&quot;../settings#std:setting-USE_TZ&quot;&gt;&lt;code&gt;USE_TZ&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;, the check will be performed in the &lt;a href=&quot;../../topics/i18n/timezones#default-current-time-zone&quot;&gt;current time zone&lt;/a&gt; at the time the object gets saved.</source>
          <target state="translated">请注意，如果将其设置为指向&lt;a href=&quot;#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt;，则仅考虑字段的日期部分。此外，当&lt;a href=&quot;../settings#std:setting-USE_TZ&quot;&gt; &lt;code&gt;USE_TZ&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;True&lt;/code&gt; 时，将在保存对象时在&lt;a href=&quot;../../topics/i18n/timezones#default-current-time-zone&quot;&gt;当前时区&lt;/a&gt;执行检查。</target>
        </trans-unit>
        <trans-unit id="57208e52924136beaba1ef45b1cfb353a276896c" translate="yes" xml:space="preserve">
          <source>Note that if you use &lt;code&gt;iterator()&lt;/code&gt; to run the query, &lt;code&gt;prefetch_related()&lt;/code&gt; calls will be ignored since these two optimizations do not make sense together.</source>
          <target state="translated">请注意，如果您使用 &lt;code&gt;iterator()&lt;/code&gt; 运行查询，则 &lt;code&gt;prefetch_related()&lt;/code&gt; 调用将被忽略，因为这两个优化没有意义。</target>
        </trans-unit>
        <trans-unit id="d3fefd7119376ae7f60ef230db53d905b5c5f7ea" translate="yes" xml:space="preserve">
          <source>Note that if you want the number of items in a &lt;code&gt;QuerySet&lt;/code&gt; and are also retrieving model instances from it (for example, by iterating over it), it&amp;rsquo;s probably more efficient to use &lt;code&gt;len(queryset)&lt;/code&gt; which won&amp;rsquo;t cause an extra database query like &lt;code&gt;count()&lt;/code&gt; would.</source>
          <target state="translated">请注意，如果您想要 &lt;code&gt;QuerySet&lt;/code&gt; 中的项目数量并且还从中检索模型实例（例如，通过对其进行迭代），则使用 &lt;code&gt;len(queryset)&lt;/code&gt; 可能会更有效，因为它不会引起额外的数据库查询，例如 &lt;code&gt;count()&lt;/code&gt; 会。</target>
        </trans-unit>
        <trans-unit id="4b51148aa0e1df68489edcd2daa4501a3ad657c5" translate="yes" xml:space="preserve">
          <source>Note that if you want to include literal percent signs in the query, you have to double them in the case you are passing parameters:</source>
          <target state="translated">请注意,如果你想在查询中包含字面的百分号,你必须在传递参数的情况下将它们加倍。</target>
        </trans-unit>
        <trans-unit id="4b4035dfedcff608a0dab9991ed7812ee69969f8" translate="yes" xml:space="preserve">
          <source>Note that if you wish to use the same file handle for multiple &lt;code&gt;post()&lt;/code&gt; calls then you will need to manually reset the file pointer between posts. The easiest way to do this is to manually close the file after it has been provided to &lt;code&gt;post()&lt;/code&gt;, as demonstrated above.</source>
          <target state="translated">请注意，如果您希望对多个 &lt;code&gt;post()&lt;/code&gt; 调用使用相同的文件句柄，则需要手动重置帖子之间的文件指针。如上所示，最简单的方法是在将文件提供给 &lt;code&gt;post()&lt;/code&gt; 之后手动关闭文件。</target>
        </trans-unit>
        <trans-unit id="7f860210b1c27c53f17cee74317f048e4e6632b1" translate="yes" xml:space="preserve">
          <source>Note that in case there is no other lookup specified, Django interprets &lt;code&gt;change__abs=27&lt;/code&gt; as &lt;code&gt;change__abs__exact=27&lt;/code&gt;.</source>
          <target state="translated">请注意，如果未指定其他查找，则Django会将 &lt;code&gt;change__abs=27&lt;/code&gt; 解释为 &lt;code&gt;change__abs__exact=27&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9930c8dc279b69fbaa1a8be67211867deca2a03e" translate="yes" xml:space="preserve">
          <source>Note that in most deployment situations where Django isn&amp;rsquo;t involved in serving user-uploaded files, this setting won&amp;rsquo;t help you. For example, if your &lt;a href=&quot;settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt; is served directly by your front-end Web server (nginx, Apache, etc.) then you&amp;rsquo;d want to set this header there. On the other hand, if you are using Django to do something like require authorization in order to download files and you cannot set the header using your Web server, this setting will be useful.</source>
          <target state="translated">请注意，在大多数部署情况下，Django不参与提供用户上传的文件，此设置将无济于事。例如，如果您的&lt;a href=&quot;settings#std:setting-MEDIA_URL&quot;&gt; &lt;code&gt;MEDIA_URL&lt;/code&gt; &lt;/a&gt;由前端Web服务器（nginx，Apache等）直接提供服务，则需要在此处设置此标头。另一方面，如果您使用Django来执行诸如需要授权才能下载文件之类的操作，并且无法使用Web服务器设置标头，则此设置将非常有用。</target>
        </trans-unit>
        <trans-unit id="99e79e30a12a76f1313050e4f0b66fec20480e07" translate="yes" xml:space="preserve">
          <source>Note that in the case of identical date values, these methods will use the primary key as a tie-breaker. This guarantees that no records are skipped or duplicated. That also means you cannot use those methods on unsaved objects.</source>
          <target state="translated">请注意,在日期值相同的情况下,这些方法将使用主键作为平局。这保证了没有记录被跳过或重复。这也意味着你不能对未保存的对象使用这些方法。</target>
        </trans-unit>
        <trans-unit id="90c15f36e80bc36194e7fc7c88e2411b03bc0b09" translate="yes" xml:space="preserve">
          <source>Note that in the last example the article has moved from John to Paul.</source>
          <target state="translated">请注意,在最后一个例子中,文章已经从约翰移到了保罗。</target>
        </trans-unit>
        <trans-unit id="cf55cefd5bd9a22b0ef1f0f6fcfbd1370197c2a8" translate="yes" xml:space="preserve">
          <source>Note that inheriting from multiple models that have a common &lt;code&gt;id&lt;/code&gt; primary key field will raise an error. To properly use multiple inheritance, you can use an explicit &lt;a href=&quot;../../ref/models/fields#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt; in the base models:</source>
          <target state="translated">请注意，从具有公共 &lt;code&gt;id&lt;/code&gt; 主键字段的多个模型继承将引发错误。要正确使用多重继承，可以在基本模型中使用显式的&lt;a href=&quot;../../ref/models/fields#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f16597be826caa262d10a0f4d0ad1380467491e9" translate="yes" xml:space="preserve">
          <source>Note that it &lt;strong&gt;does not&lt;/strong&gt; include the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tags, or a submit button. We&amp;rsquo;ll have to provide those ourselves in the template.</source>
          <target state="translated">请注意，它&lt;strong&gt;不&lt;/strong&gt;包含 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 标记或提交按钮。我们必须在模板中提供这些信息。</target>
        </trans-unit>
        <trans-unit id="20fcecc00ae0237fe53c67889180caee6880fbb3" translate="yes" xml:space="preserve">
          <source>Note that it is possible to compare &lt;code&gt;Polygon&lt;/code&gt; objects directly with &lt;code&gt;&amp;lt;&lt;/code&gt; or &lt;code&gt;&amp;gt;&lt;/code&gt;, but as the comparison is made through Polygon&amp;rsquo;s &lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt;&lt;code&gt;LineString&lt;/code&gt;&lt;/a&gt;, it does not mean much (but is consistent and quick). You can always force the comparison with the &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.area&quot;&gt;&lt;code&gt;area&lt;/code&gt;&lt;/a&gt; property:</source>
          <target state="translated">请注意，可以直接用 &lt;code&gt;&amp;lt;&lt;/code&gt; 或 &lt;code&gt;&amp;gt;&lt;/code&gt; 比较 &lt;code&gt;Polygon&lt;/code&gt; 对象，但是由于是通过Polygon的&lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt; &lt;code&gt;LineString&lt;/code&gt; &lt;/a&gt;进行比较的，所以意义不大（但是一致且快速）。您始终可以使用&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.area&quot;&gt; &lt;code&gt;area&lt;/code&gt; &lt;/a&gt;属性强制进行比较：</target>
        </trans-unit>
        <trans-unit id="309e54b62c2f8838bb6218907b1b434ce25c9449" translate="yes" xml:space="preserve">
          <source>Note that it&amp;rsquo;s perfectly safe to store global information that will not change throughout the life of the &lt;code&gt;Node&lt;/code&gt; as an attribute. In the case of &lt;code&gt;CycleNode&lt;/code&gt;, the &lt;code&gt;cyclevars&lt;/code&gt; argument doesn&amp;rsquo;t change after the &lt;code&gt;Node&lt;/code&gt; is instantiated, so we don&amp;rsquo;t need to put it in the &lt;code&gt;render_context&lt;/code&gt;. But state information that is specific to the template that is currently being rendered, like the current iteration of the &lt;code&gt;CycleNode&lt;/code&gt;, should be stored in the &lt;code&gt;render_context&lt;/code&gt;.</source>
          <target state="translated">请注意，将在 &lt;code&gt;Node&lt;/code&gt; 整个生命周期内不会改变的全局信息作为属性存储是绝对安全的。对于 &lt;code&gt;CycleNode&lt;/code&gt; 来说，在实例化 &lt;code&gt;Node&lt;/code&gt; 之后， &lt;code&gt;cyclevars&lt;/code&gt; 参数不会改变，因此我们不需要将其放在 &lt;code&gt;render_context&lt;/code&gt; 中。但是，特定于当前正在渲染的模板的状态信息（例如 &lt;code&gt;CycleNode&lt;/code&gt; 的当前迭代）应存储在 &lt;code&gt;render_context&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="e90fd4cc43a3b840e41758699f16f4a951c22c6a" translate="yes" xml:space="preserve">
          <source>Note that model interdependencies in Django can get very complex, and squashing may result in migrations that do not run; either mis-optimized (in which case you can try again with &lt;code&gt;--no-optimize&lt;/code&gt;, though you should also report an issue), or with a &lt;code&gt;CircularDependencyError&lt;/code&gt;, in which case you can manually resolve it.</source>
          <target state="translated">请注意，Django中的模型相互依赖性会变得非常复杂，并且挤压可能会导致迁移无法运行。错误优化的（在这种情况下，您可以使用 &lt;code&gt;--no-optimize&lt;/code&gt; 再次尝试，尽管您也应该报告问题），或者使用 &lt;code&gt;CircularDependencyError&lt;/code&gt; ，在这种情况下，您可以手动解决它。</target>
        </trans-unit>
        <trans-unit id="284c76538164a551a6ead0347d70137da1e7759a" translate="yes" xml:space="preserve">
          <source>Note that not all changes are possible on all databases - for example, you cannot change a text-type field like &lt;code&gt;models.TextField()&lt;/code&gt; into a number-type field like &lt;code&gt;models.IntegerField()&lt;/code&gt; on most databases.</source>
          <target state="translated">请注意，并非所有的变化都可能对所有数据库-例如，你不能改变像一个文本型字段 &lt;code&gt;models.TextField()&lt;/code&gt; 到像数类型字段 &lt;code&gt;models.IntegerField()&lt;/code&gt; 在大多数数据库。</target>
        </trans-unit>
        <trans-unit id="5765b42680f5abb4a72b6c1b5ae0dc4354eab406" translate="yes" xml:space="preserve">
          <source>Note that older or more recent versions of these libraries &lt;em&gt;may&lt;/em&gt; also work totally fine with GeoDjango. Your mileage may vary.</source>
          <target state="translated">需要注意的是较旧的或较新版本的这些库的&lt;em&gt;可能&lt;/em&gt;也与GeoDjango内置工作完全正常。你的旅费可能会改变。</target>
        </trans-unit>
        <trans-unit id="fbd318205dcfeda5f23d3aa3a5607de8d9bf49a6" translate="yes" xml:space="preserve">
          <source>Note that once we&amp;rsquo;ve done this in all these views, we no longer need to import &lt;a href=&quot;../topics/templates#module-django.template.loader&quot;&gt;&lt;code&gt;loader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; (you&amp;rsquo;ll want to keep &lt;code&gt;HttpResponse&lt;/code&gt; if you still have the stub methods for &lt;code&gt;detail&lt;/code&gt;, &lt;code&gt;results&lt;/code&gt;, and &lt;code&gt;vote&lt;/code&gt;).</source>
          <target state="translated">请注意，一旦在所有这些视图中都完成了此操作，就不再需要导入&lt;a href=&quot;../topics/templates#module-django.template.loader&quot;&gt; &lt;code&gt;loader&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;（如果仍然有 &lt;code&gt;detail&lt;/code&gt; ， &lt;code&gt;results&lt;/code&gt; 和 &lt;code&gt;vote&lt;/code&gt; 的stub方法，则希望保留 &lt;code&gt;HttpResponse&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="db3daa7b3e0d58113112241aa78669b84d25e7f6" translate="yes" xml:space="preserve">
          <source>Note that only the execution of your view is enclosed in the transactions. Middleware runs outside of the transaction, and so does the rendering of template responses.</source>
          <target state="translated">请注意,只有你的视图的执行是封闭在事务中的。中间件运行在事务之外,模板响应的渲染也在事务之外。</target>
        </trans-unit>
        <trans-unit id="f230fc5e74b5fca6a965580a65f23bf035b6e813" translate="yes" xml:space="preserve">
          <source>Note that only the outermost call to &lt;a href=&quot;../../../topics/db/transactions#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; sets up a transaction and thus sets the time that &lt;code&gt;TransactionNow()&lt;/code&gt; will return; nested calls create savepoints which do not affect the transaction time.</source>
          <target state="translated">注意，只有对&lt;a href=&quot;../../../topics/db/transactions#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt;的最外层调用才能建立事务，从而设置 &lt;code&gt;TransactionNow()&lt;/code&gt; 返回的时间。嵌套调用创建不影响事务时间的保存点。</target>
        </trans-unit>
        <trans-unit id="d57570c30207a70feb1f95d543f2d181afc9bba6" translate="yes" xml:space="preserve">
          <source>Note that passing an empty dictionary creates a &lt;em&gt;bound&lt;/em&gt; form with empty data:</source>
          <target state="translated">请注意，传递空字典会创建一个包含空数据的&lt;em&gt;绑定&lt;/em&gt;形式：</target>
        </trans-unit>
        <trans-unit id="eaad0f28e2fcb42d6532c371c6cfac0fd491200a" translate="yes" xml:space="preserve">
          <source>Note that per-user installations can still affect the behavior of system tools that run as that user, so &lt;code&gt;virtualenv&lt;/code&gt; is a more robust solution (see below).</source>
          <target state="translated">请注意，按用户安装仍然会影响以该用户身份运行的系统工具的行为，因此 &lt;code&gt;virtualenv&lt;/code&gt; 是更可靠的解决方案（请参见下文）。</target>
        </trans-unit>
        <trans-unit id="773f2a11fc905c994db622bf8e5b84629e2c2670" translate="yes" xml:space="preserve">
          <source>Note that per-user installations can still affect the behavior of system tools that run as that user, so using a virtual environment is a more robust solution (see below).</source>
          <target state="translated">请注意,每个用户的安装仍然会影响以该用户身份运行的系统工具的行为,因此使用虚拟环境是一个更稳健的解决方案(见下文)。</target>
        </trans-unit>
        <trans-unit id="cb0441db5179fedc88175f7abe68eb6db9244379" translate="yes" xml:space="preserve">
          <source>Note that pluralization is complicated and works differently in each language. Comparing &lt;code&gt;count&lt;/code&gt; to 1 isn&amp;rsquo;t always the correct rule. This code looks sophisticated, but will produce incorrect results for some languages:</source>
          <target state="translated">注意，复数是复杂的，并且在每种语言中的工作方式都不同。将 &lt;code&gt;count&lt;/code&gt; 与1比较并不总是正确的规则。这段代码看起来很复杂，但是对于某些语言会产生不正确的结果：</target>
        </trans-unit>
        <trans-unit id="5de11d40e524334a2d38e78962aaeec3d5b135e7" translate="yes" xml:space="preserve">
          <source>Note that request methods should be in uppercase.</source>
          <target state="translated">注意,请求方法应该用大写字母。</target>
        </trans-unit>
        <trans-unit id="968db22470d1ca267f45216e5aaa73f7fd939af9" translate="yes" xml:space="preserve">
          <source>Note that setting &lt;a href=&quot;#std:setting-EMAIL_SSL_CERTFILE&quot;&gt;&lt;code&gt;EMAIL_SSL_CERTFILE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-EMAIL_SSL_KEYFILE&quot;&gt;&lt;code&gt;EMAIL_SSL_KEYFILE&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t result in any certificate checking. They&amp;rsquo;re passed to the underlying SSL connection. Please refer to the documentation of Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/ssl.html#ssl.wrap_socket&quot;&gt;&lt;code&gt;ssl.wrap_socket()&lt;/code&gt;&lt;/a&gt; function for details on how the certificate chain file and private key file are handled.</source>
          <target state="translated">请注意，设置&lt;a href=&quot;#std:setting-EMAIL_SSL_CERTFILE&quot;&gt; &lt;code&gt;EMAIL_SSL_CERTFILE&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#std:setting-EMAIL_SSL_KEYFILE&quot;&gt; &lt;code&gt;EMAIL_SSL_KEYFILE&lt;/code&gt; &lt;/a&gt;不会导致任何证书检查。它们已传递到基础SSL连接。有关如何处理证书链文件和私钥文件的详细信息，请参考Python的&lt;a href=&quot;https://docs.python.org/3/library/ssl.html#ssl.wrap_socket&quot;&gt; &lt;code&gt;ssl.wrap_socket()&lt;/code&gt; &lt;/a&gt;函数的文档。</target>
        </trans-unit>
        <trans-unit id="c22e8dd57361cf848941e0793916235467d46530" translate="yes" xml:space="preserve">
          <source>Note that since &lt;code&gt;set()&lt;/code&gt; is a compound operation, it is subject to race conditions. For instance, new objects may be added to the database in between the call to &lt;code&gt;clear()&lt;/code&gt; and the call to &lt;code&gt;add()&lt;/code&gt;.</source>
          <target state="translated">注意，由于 &lt;code&gt;set()&lt;/code&gt; 是复合操作，因此它受竞争条件的影响。例如，可以在对 &lt;code&gt;clear()&lt;/code&gt; 的调用与对 &lt;code&gt;add()&lt;/code&gt; 的调用之间将新对象添加到数据库中。</target>
        </trans-unit>
        <trans-unit id="e1ea0edc5eb39ec2c96e83f140636e0429b857eb" translate="yes" xml:space="preserve">
          <source>Note that since the child template didn&amp;rsquo;t define the &lt;code&gt;sidebar&lt;/code&gt; block, the value from the parent template is used instead. Content within a &lt;code&gt;{% block %}&lt;/code&gt; tag in a parent template is always used as a fallback.</source>
          <target state="translated">请注意，由于子模板未定义 &lt;code&gt;sidebar&lt;/code&gt; 块，因此将使用父模板中的值。父模板中 &lt;code&gt;{% block %}&lt;/code&gt; 标记内的内容始终用作后备。</target>
        </trans-unit>
        <trans-unit id="a0ef7e754d821fe5a5389a0e0485b1236840d758" translate="yes" xml:space="preserve">
          <source>Note that some Django code was executed while running tests, but it is not listed here because of the &lt;code&gt;source&lt;/code&gt; flag passed to the previous command.</source>
          <target state="translated">请注意，某些Django代码是在运行测试时执行的，但由于将 &lt;code&gt;source&lt;/code&gt; 标志传递给了先前的命令，因此未在此处列出。</target>
        </trans-unit>
        <trans-unit id="b58e3568c1f9f0b7253202c19712cef23c12adeb" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt;&lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt;&lt;/a&gt; only steps in once another view has successfully produced a 404 response. If another view or middleware class attempts to produce a 404 but ends up raising an exception instead, the response will become an HTTP 500 (&amp;ldquo;Internal Server Error&amp;rdquo;) and the &lt;a href=&quot;#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt;&lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt;&lt;/a&gt; will not attempt to serve a flat page.</source>
          <target state="translated">请注意，&lt;a href=&quot;#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt; &lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt; &lt;/a&gt;仅在另一个视图成功产生404响应后才进入。如果另一个视图或中间件类尝试生成404但最终引发异常，则响应将变为HTTP 500（&amp;ldquo;内部服务器错误&amp;rdquo;），并且&lt;a href=&quot;#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt; &lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt; &lt;/a&gt;将不会尝试提供平面页。</target>
        </trans-unit>
        <trans-unit id="6fd81eb0266642f411e0ec2b93dda43fb0cdaa81" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method for an object is not necessarily called when &lt;a href=&quot;queries#topics-db-queries-delete&quot;&gt;deleting objects in bulk using a QuerySet&lt;/a&gt; or as a result of a &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.on_delete&quot;&gt;&lt;code&gt;cascading
delete&lt;/code&gt;&lt;/a&gt;. To ensure customized delete logic gets executed, you can use &lt;a href=&quot;../../ref/signals#django.db.models.signals.pre_delete&quot;&gt;&lt;code&gt;pre_delete&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;../../ref/signals#django.db.models.signals.post_delete&quot;&gt;&lt;code&gt;post_delete&lt;/code&gt;&lt;/a&gt; signals.</source>
          <target state="translated">请注意，&lt;a href=&quot;queries#topics-db-queries-delete&quot;&gt;使用QuerySet批量删除对象&lt;/a&gt;或&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.on_delete&quot;&gt; &lt;code&gt;cascading delete&lt;/code&gt; &lt;/a&gt;的结果时，不必调用对象的&lt;a href=&quot;../../ref/models/instances#django.db.models.Model.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt;方法。为了确保执行自定义的删除逻辑，您可以使用&lt;a href=&quot;../../ref/signals#django.db.models.signals.pre_delete&quot;&gt; &lt;code&gt;pre_delete&lt;/code&gt; &lt;/a&gt;和/或&lt;a href=&quot;../../ref/signals#django.db.models.signals.post_delete&quot;&gt; &lt;code&gt;post_delete&lt;/code&gt; &lt;/a&gt;信号。</target>
        </trans-unit>
        <trans-unit id="253ce872bdbdccddb3ef8b680bcb97ef630a7e6c" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.select_related&quot;&gt;&lt;code&gt;select_related()&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; method recursively prepopulates the cache of all one-to-many relationships ahead of time. Example:</source>
          <target state="translated">请注意，&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.select_related&quot;&gt; &lt;code&gt;select_related()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;方法会提前递归地预先填充所有一对多关系的缓存。例：</target>
        </trans-unit>
        <trans-unit id="e80f5630b8f1dca8b0ea0eedd1bf8d8773a13237" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;content&lt;/code&gt; argument must be an instance of either &lt;a href=&quot;#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; or of a subclass of &lt;a href=&quot;#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;, such as &lt;a href=&quot;#django.core.files.base.ContentFile&quot;&gt;&lt;code&gt;ContentFile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请注意， &lt;code&gt;content&lt;/code&gt; 的参数必须是实例&lt;a href=&quot;#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;或子类的&lt;a href=&quot;#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;，如&lt;a href=&quot;#django.core.files.base.ContentFile&quot;&gt; &lt;code&gt;ContentFile&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="69cf65c7f436b8fbaff150d2dc857544f903a181" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;content&lt;/code&gt; argument should be an instance of &lt;a href=&quot;../files/file#django.core.files.File&quot;&gt;&lt;code&gt;django.core.files.File&lt;/code&gt;&lt;/a&gt;, not Python&amp;rsquo;s built-in file object. You can construct a &lt;a href=&quot;../files/file#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; from an existing Python file object like this:</source>
          <target state="translated">请注意， &lt;code&gt;content&lt;/code&gt; 参数应该是&lt;a href=&quot;../files/file#django.core.files.File&quot;&gt; &lt;code&gt;django.core.files.File&lt;/code&gt; &lt;/a&gt;的实例，而不是Python的内置文件对象。您可以像这样从现有的Python文件对象构造一个&lt;a href=&quot;../files/file#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f40ef01b229f9c63dbeb83559c6536f91520f3ba" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;docs&lt;/code&gt; directory won&amp;rsquo;t be included in your package unless you add some files to it. Many Django apps also provide their documentation online through sites like &lt;a href=&quot;https://readthedocs.org&quot;&gt;readthedocs.org&lt;/a&gt;.</source>
          <target state="translated">请注意，除非您向其中添加一些文件，否则 &lt;code&gt;docs&lt;/code&gt; 目录不会包含在您的软件包中。许多Django应用程序还通过&lt;a href=&quot;https://readthedocs.org&quot;&gt;readthedocs.org等&lt;/a&gt;网站在线提供其文档。</target>
        </trans-unit>
        <trans-unit id="480e601acbf5c70f30565ccc01d9a0fb37503e26" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;models&lt;/code&gt; module is imported from &lt;code&gt;django.contrib.gis.db&lt;/code&gt;.</source>
          <target state="translated">请注意， &lt;code&gt;models&lt;/code&gt; 模块是从 &lt;code&gt;django.contrib.gis.db&lt;/code&gt; 导入的。</target>
        </trans-unit>
        <trans-unit id="d8c97e4e91823174dcc8b363df50dbaa5e57e373" translate="yes" xml:space="preserve">
          <source>Note that the block includes &lt;em&gt;all&lt;/em&gt; the text between the &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;endfilter&lt;/code&gt; tags.</source>
          <target state="translated">请注意，该块包含 &lt;code&gt;filter&lt;/code&gt; 和 &lt;code&gt;endfilter&lt;/code&gt; 标记之间的&lt;em&gt;所有&lt;/em&gt;文本。</target>
        </trans-unit>
        <trans-unit id="d560327fe2008995352ea5ff59887465ed4e02c3" translate="yes" xml:space="preserve">
          <source>Note that the cache backend isn&amp;rsquo;t vulnerable to this problem, because caches automatically delete stale data. Neither is the cookie backend, because the session data is stored by the users&amp;rsquo; browsers.</source>
          <target state="translated">请注意，缓存后端不容易受到此问题的影响，因为缓存会自动删除陈旧数据。cookie后端也不是，因为会话数据是由用户的浏览器存储的。</target>
        </trans-unit>
        <trans-unit id="997b862ea7c654dba69036735ee9c3d739d594e9" translate="yes" xml:space="preserve">
          <source>Note that the cache control settings &amp;ldquo;private&amp;rdquo; and &amp;ldquo;public&amp;rdquo; are mutually exclusive. The decorator ensures that the &amp;ldquo;public&amp;rdquo; directive is removed if &amp;ldquo;private&amp;rdquo; should be set (and vice versa). An example use of the two directives would be a blog site that offers both private and public entries. Public entries may be cached on any shared cache. The following code uses &lt;a href=&quot;../ref/utils#django.utils.cache.patch_cache_control&quot;&gt;&lt;code&gt;patch_cache_control()&lt;/code&gt;&lt;/a&gt;, the manual way to modify the cache control header (it is internally called by the &lt;a href=&quot;http/decorators#django.views.decorators.cache.cache_control&quot;&gt;&lt;code&gt;cache_control()&lt;/code&gt;&lt;/a&gt; decorator):</source>
          <target state="translated">请注意，缓存控制设置&amp;ldquo;专用&amp;rdquo;和&amp;ldquo;公用&amp;rdquo;是互斥的。装饰器确保如果应设置为&amp;ldquo; private&amp;rdquo;，则删除&amp;ldquo; public&amp;rdquo;指令（反之亦然）。这两个指令的示例用法是提供私有条目和公共条目的博客网站。公共条目可以缓存在任何共享缓存中。以下代码使用&lt;a href=&quot;../ref/utils#django.utils.cache.patch_cache_control&quot;&gt; &lt;code&gt;patch_cache_control()&lt;/code&gt; &lt;/a&gt;，这是修改缓存控制标头的手动方式（它由&lt;a href=&quot;http/decorators#django.views.decorators.cache.cache_control&quot;&gt; &lt;code&gt;cache_control()&lt;/code&gt; &lt;/a&gt;装饰器在内部调用）：</target>
        </trans-unit>
        <trans-unit id="329a8fe91b918a1eabc78ec4127577a2eaa4620a" translate="yes" xml:space="preserve">
          <source>Note that the default IP address, &lt;code&gt;127.0.0.1&lt;/code&gt;, is not accessible from other machines on your network. To make your development server viewable to other machines on the network, use its own IP address (e.g. &lt;code&gt;192.168.2.1&lt;/code&gt;) or &lt;code&gt;0.0.0.0&lt;/code&gt; or &lt;code&gt;::&lt;/code&gt; (with IPv6 enabled).</source>
          <target state="translated">请注意，无法从网络上的其他计算机访问默认IP地址 &lt;code&gt;127.0.0.1&lt;/code&gt; 。为了使您的开发服务器对网络上的其他计算机可见，请使用其自己的IP地址（例如 &lt;code&gt;192.168.2.1&lt;/code&gt; ）或 &lt;code&gt;0.0.0.0&lt;/code&gt; 或 &lt;code&gt;::&lt;/code&gt; :（启用IPv6）。</target>
        </trans-unit>
        <trans-unit id="7932c67ecc916c97da8c8c7c0e37c190f380e858" translate="yes" xml:space="preserve">
          <source>Note that the default configuration process only calls &lt;a href=&quot;../ref/settings#std:setting-LOGGING_CONFIG&quot;&gt;&lt;code&gt;LOGGING_CONFIG&lt;/code&gt;&lt;/a&gt; once settings are fully-loaded. In contrast, manually configuring the logging in your settings file will load your logging config immediately. As such, your logging config must appear &lt;em&gt;after&lt;/em&gt; any settings on which it depends.</source>
          <target state="translated">请注意，默认设置仅在设置完全加载后才调用&lt;a href=&quot;../ref/settings#std:setting-LOGGING_CONFIG&quot;&gt; &lt;code&gt;LOGGING_CONFIG&lt;/code&gt; &lt;/a&gt;。相反，在设置文件中手动配置日志记录将立即加载您的日志记录配置。因此，您的日志记录配置必须出现&lt;em&gt;在&lt;/em&gt;它依赖的任何设置&lt;em&gt;之后&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="40528c2a9e8caf146e1fc466ce15cb5b451cd1a5" translate="yes" xml:space="preserve">
          <source>Note that the first argument &lt;em&gt;must&lt;/em&gt; be called &lt;code&gt;context&lt;/code&gt;.</source>
          <target state="translated">注意，第一个参数&lt;em&gt;必须&lt;/em&gt;称为 &lt;code&gt;context&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65e9739383cf60a6791ac75fed8f327d25413bd7" translate="yes" xml:space="preserve">
          <source>Note that the first parameter to the function &lt;em&gt;must&lt;/em&gt; be called &lt;code&gt;context&lt;/code&gt;.</source>
          <target state="translated">注意，该函数的第一个参数&lt;em&gt;必须&lt;/em&gt;称为 &lt;code&gt;context&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0abaf39e2d3058e4498c22aad4c34d7e6f3e0926" translate="yes" xml:space="preserve">
          <source>Note that the header needs to be in the format as used by &lt;code&gt;request.META&lt;/code&gt; &amp;ndash; all caps and likely starting with &lt;code&gt;HTTP_&lt;/code&gt;. (Remember, Django automatically adds &lt;code&gt;'HTTP_'&lt;/code&gt; to the start of x-header names before making the header available in &lt;code&gt;request.META&lt;/code&gt;.)</source>
          <target state="translated">请注意，标头必须采用 &lt;code&gt;request.META&lt;/code&gt; 所使用的格式-全部为大写，可能以 &lt;code&gt;HTTP_&lt;/code&gt; 开头。（请记住，在将标头在 &lt;code&gt;request.META&lt;/code&gt; 中可用之前，Django会自动在x标头名称的开头添加 &lt;code&gt;'HTTP_'&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="a0b88ccf06c4a2dde1c8ecf8326ade5f6087323f" translate="yes" xml:space="preserve">
          <source>Note that the key in the dictionary is the actual field class, &lt;em&gt;not&lt;/em&gt; a string. The value is another dictionary; these arguments will be passed to the form field&amp;rsquo;s &lt;code&gt;__init__()&lt;/code&gt; method. See &lt;a href=&quot;../../forms/api&quot;&gt;The Forms API&lt;/a&gt; for details.</source>
          <target state="translated">请注意，字典中的键是实际的字段类，&lt;em&gt;而不是&lt;/em&gt;字符串。该值是另一个字典；这些参数将传递给表单字段的 &lt;code&gt;__init__()&lt;/code&gt; 方法。有关详细信息，请参见&lt;a href=&quot;../../forms/api&quot;&gt;Forms API&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09019a3c236f5e543c42c3fc84c9325d2206d759" translate="yes" xml:space="preserve">
          <source>Note that the label suffix is added only if the last character of the label isn&amp;rsquo;t a punctuation character (in English, those are &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt; or &lt;code&gt;:&lt;/code&gt;).</source>
          <target state="translated">请注意，仅当标签的最后一个字符不是标点符号时才添加标签后缀（英语中为 &lt;code&gt;.&lt;/code&gt; ， &lt;code&gt;!&lt;/code&gt; ， &lt;code&gt;?&lt;/code&gt; 或 &lt;code&gt;:&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="45f9ccb1fbd2c54a94373b7ce9767a5b690ebf8b" translate="yes" xml:space="preserve">
          <source>Note that the latest Django master may not always be stable. When developing against master, you can check &lt;a href=&quot;https://djangoci.com&quot;&gt;Django&amp;rsquo;s continuous integration builds&lt;/a&gt; to determine if the failures are specific to your machine or if they are also present in Django&amp;rsquo;s official builds. If you click to view a particular build, you can view the &amp;ldquo;Configuration Matrix&amp;rdquo; which shows failures broken down by Python version and database backend.</source>
          <target state="translated">请注意，最新的Django master可能并不总是稳定的。在针对master进行开发时，您可以检查&lt;a href=&quot;https://djangoci.com&quot;&gt;Django的持续集成版本，&lt;/a&gt;以确定故障是否特定于您的计算机，或者是否也出现在Django的正式版本中。如果单击以查看特定的构建，则可以查看&amp;ldquo;配置矩阵&amp;rdquo;，其中显示了按Python版本和数据库后端细分的故障。</target>
        </trans-unit>
        <trans-unit id="1c1acd60a0e2efb4514768243487586e4ccb5e22" translate="yes" xml:space="preserve">
          <source>Note that the loader performs an optimization when it first runs: it caches a list of which &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; packages have a &lt;code&gt;templates&lt;/code&gt; subdirectory.</source>
          <target state="translated">请注意，该加载程序在首次运行时会进行优化：它会缓存&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;软件包具有 &lt;code&gt;templates&lt;/code&gt; 子目录的列表。</target>
        </trans-unit>
        <trans-unit id="1d5d95f9aa8b375a624a768724d8045e847dc228" translate="yes" xml:space="preserve">
          <source>Note that the name of the matched pattern in the path strings of the second and third patterns has changed from &lt;code&gt;&amp;lt;question_id&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;pk&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">请注意，第二个和第三个模式的路径字符串中匹配模式的名称已从 &lt;code&gt;&amp;lt;question_id&amp;gt;&lt;/code&gt; 更改为 &lt;code&gt;&amp;lt;pk&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b16982e8febbd865c853824b0312670d37d10b80" translate="yes" xml:space="preserve">
          <source>Note that the name of the view function doesn&amp;rsquo;t matter; it doesn&amp;rsquo;t have to be named in a certain way in order for Django to recognize it. We&amp;rsquo;re calling it &lt;code&gt;current_datetime&lt;/code&gt; here, because that name clearly indicates what it does.</source>
          <target state="translated">请注意，视图函数的名称无关紧要；它不必以某种方式命名即可让Django识别它。我们在这里将其称为 &lt;code&gt;current_datetime&lt;/code&gt; ，因为该名称清楚地表明了它的作用。</target>
        </trans-unit>
        <trans-unit id="1d37566e826663dd236669ec8c0a538314d88d04" translate="yes" xml:space="preserve">
          <source>Note that the object will no longer be in the database, so be very careful what you do with this instance.</source>
          <target state="translated">请注意,该对象将不再在数据库中,所以要非常小心地处理这个实例。</target>
        </trans-unit>
        <trans-unit id="6cb9b339d54209535bd6dcb521d136ae0891eda7" translate="yes" xml:space="preserve">
          <source>Note that the order in which fixture files are processed is undefined. However, all fixture data is installed as a single transaction, so data in one fixture can reference data in another fixture. If the database backend supports row-level constraints, these constraints will be checked at the end of the transaction.</source>
          <target state="translated">请注意,处理夹具文件的顺序是未定义的。然而,所有的夹具数据都是作为一个事务安装的,因此一个夹具中的数据可以引用另一个夹具中的数据。如果数据库后端支持行级约束,这些约束将在事务结束时被检查。</target>
        </trans-unit>
        <trans-unit id="cb80071655e1d9fbbd4b908b7ff6b7de62de9971" translate="yes" xml:space="preserve">
          <source>Note that the order of &lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; matters. Generally, you can put &lt;a href=&quot;#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt;&lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt;&lt;/a&gt; at the end of the list. This means it will run first when processing the response, and ensures that any other response-processing middleware see the real flatpage response rather than the 404.</source>
          <target state="translated">请注意，&lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; 的顺序很&lt;/a&gt;重要。通常，您可以将&lt;a href=&quot;#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt; &lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt; &lt;/a&gt;放在列表的末尾。这意味着它将在处理响应时首先运行，并确保任何其他响应处理中间件都能看到真实的平面响应，而不是404。</target>
        </trans-unit>
        <trans-unit id="08698ded25f56ec765d5763a05954e398b0131e4" translate="yes" xml:space="preserve">
          <source>Note that the order of &lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; matters. Generally, you can put &lt;a href=&quot;#django.contrib.redirects.middleware.RedirectFallbackMiddleware&quot;&gt;&lt;code&gt;RedirectFallbackMiddleware&lt;/code&gt;&lt;/a&gt; at the end of the list, because it&amp;rsquo;s a last resort.</source>
          <target state="translated">请注意，&lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; 的顺序很&lt;/a&gt;重要。通常，您可以将&lt;a href=&quot;#django.contrib.redirects.middleware.RedirectFallbackMiddleware&quot;&gt; &lt;code&gt;RedirectFallbackMiddleware&lt;/code&gt; &lt;/a&gt;放在列表的末尾，因为这是不得已的方法。</target>
        </trans-unit>
        <trans-unit id="fef6bd3ebae4c1ec9ddd2798fe72b4fcf23c8784" translate="yes" xml:space="preserve">
          <source>Note that the parentheses required by most database engines around subqueries are not required in Django&amp;rsquo;s &lt;code&gt;select&lt;/code&gt; clauses. Also note that some database backends, such as some MySQL versions, don&amp;rsquo;t support subqueries.</source>
          <target state="translated">请注意，Django的 &lt;code&gt;select&lt;/code&gt; 子句中不需要大多数数据库引擎围绕子查询的括号。还要注意，某些数据库后端（例如某些MySQL版本）不支持子查询。</target>
        </trans-unit>
        <trans-unit id="cfc63e63ecf8ac2eb2e30b758738319acc47dd43" translate="yes" xml:space="preserve">
          <source>Note that the queries generated in object deletion is an implementation detail subject to change.</source>
          <target state="translated">需要注意的是,对象删除中产生的查询是一个实施细节,可能会发生变化。</target>
        </trans-unit>
        <trans-unit id="08ece2bb01374f6040408665502dabf3bdbfee50" translate="yes" xml:space="preserve">
          <source>Note that the result cache of the primary &lt;code&gt;QuerySet&lt;/code&gt; and all specified related objects will then be fully loaded into memory. This changes the typical behavior of &lt;code&gt;QuerySets&lt;/code&gt;, which normally try to avoid loading all objects into memory before they are needed, even after a query has been executed in the database.</source>
          <target state="translated">请注意，主要的结果缓存 &lt;code&gt;QuerySet&lt;/code&gt; 和所有指定相关对象将被完全加载到内存中。这改变了 &lt;code&gt;QuerySets&lt;/code&gt; 的典型行为，该行为通常试图避免在需要它们之前就将所有对象加载到内存中，即使在数据库中执行了查询之后也是如此。</target>
        </trans-unit>
        <trans-unit id="aa58b675144be5fd04bd425ca97fc559b052e8eb" translate="yes" xml:space="preserve">
          <source>Note that the return code for the test-runner script is 1 for any number of failed and erroneous tests. If all the tests pass, the return code is 0. This feature is useful if you&amp;rsquo;re using the test-runner script in a shell script and need to test for success or failure at that level.</source>
          <target state="translated">请注意，对于任何数量的失败和错误测试，test-runner脚本的返回码均为1。如果所有测试均通过，则返回码为0。如果您在Shell脚本中使用test-runner脚本，并且需要在该级别上测试成功或失败，则此功能很有用。</target>
        </trans-unit>
        <trans-unit id="d50fd012ff22d54624835fa78fdc60e01d630190" translate="yes" xml:space="preserve">
          <source>Note that the session cookie is only sent when a session has been created or modified. If &lt;a href=&quot;../../ref/settings#std:setting-SESSION_SAVE_EVERY_REQUEST&quot;&gt;&lt;code&gt;SESSION_SAVE_EVERY_REQUEST&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;, the session cookie will be sent on every request.</source>
          <target state="translated">请注意，仅在创建或修改会话后才发送会话cookie。如果&lt;a href=&quot;../../ref/settings#std:setting-SESSION_SAVE_EVERY_REQUEST&quot;&gt; &lt;code&gt;SESSION_SAVE_EVERY_REQUEST&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;True&lt;/code&gt; ，则将在每个请求上发送会话cookie。</target>
        </trans-unit>
        <trans-unit id="5a3066deed15c333016258a7e176bfa5fbe7bff4" translate="yes" xml:space="preserve">
          <source>Note that the test client is not intended to be a replacement for &lt;a href=&quot;http://seleniumhq.org/&quot;&gt;Selenium&lt;/a&gt; or other &amp;ldquo;in-browser&amp;rdquo; frameworks. Django&amp;rsquo;s test client has a different focus. In short:</source>
          <target state="translated">请注意，测试客户端无意替代&lt;a href=&quot;http://seleniumhq.org/&quot;&gt;Selenium&lt;/a&gt;或其他&amp;ldquo;浏览器内&amp;rdquo;框架。Django的测试客户端有不同的重点。简而言之：</target>
        </trans-unit>
        <trans-unit id="e7c15fa6899ee16f22c2f3eebad5d4575601d120" translate="yes" xml:space="preserve">
          <source>Note that there also is a &lt;a href=&quot;#django.forms.MultipleHiddenInput&quot;&gt;&lt;code&gt;MultipleHiddenInput&lt;/code&gt;&lt;/a&gt; widget that encapsulates a set of hidden input elements.</source>
          <target state="translated">请注意，还有一个&lt;a href=&quot;#django.forms.MultipleHiddenInput&quot;&gt; &lt;code&gt;MultipleHiddenInput&lt;/code&gt; &lt;/a&gt;小部件，它封装了一组隐藏的输入元素。</target>
        </trans-unit>
        <trans-unit id="f3dc5df00a8e3e730c40fe838d9cf28eedc30a0f" translate="yes" xml:space="preserve">
          <source>Note that there are a number of &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.bulk_create&quot;&gt;&lt;code&gt;caveats to this method&lt;/code&gt;&lt;/a&gt;, so make sure it&amp;rsquo;s appropriate for your use case.</source>
          <target state="translated">请&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.bulk_create&quot;&gt; &lt;code&gt;caveats to this method&lt;/code&gt; &lt;/a&gt;有很多注意事项，因此请确保它适合您的用例。</target>
        </trans-unit>
        <trans-unit id="ed11446b0c6e152b1bcc9ce1866f87a0033a7c22" translate="yes" xml:space="preserve">
          <source>Note that there are a number of &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.bulk_update&quot;&gt;&lt;code&gt;caveats to this method&lt;/code&gt;&lt;/a&gt;, so make sure it&amp;rsquo;s appropriate for your use case.</source>
          <target state="translated">请&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.bulk_update&quot;&gt; &lt;code&gt;caveats to this method&lt;/code&gt; &lt;/a&gt;有很多注意事项，因此请确保它适合您的用例。</target>
        </trans-unit>
        <trans-unit id="ec4883b6f62b2a123fc0b302f2c2ef4d90d01466" translate="yes" xml:space="preserve">
          <source>Note that there is a difference between using &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; with a slice of &lt;code&gt;[0]&lt;/code&gt;. If there are no results that match the query, &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; will raise a &lt;code&gt;DoesNotExist&lt;/code&gt; exception. This exception is an attribute of the model class that the query is being performed on - so in the code above, if there is no &lt;code&gt;Entry&lt;/code&gt; object with a primary key of 1, Django will raise &lt;code&gt;Entry.DoesNotExist&lt;/code&gt;.</source>
          <target state="translated">注意，使用&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;和使用带有 &lt;code&gt;[0]&lt;/code&gt; 切片的&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt;之间是有区别的。如果没有与查询匹配的结果，则&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;将引发 &lt;code&gt;DoesNotExist&lt;/code&gt; 异常。该异常是要执行查询的模型类的一个属性-因此在上面的代码中，如果没有主键为1的 &lt;code&gt;Entry&lt;/code&gt; 对象，则Django将引发 &lt;code&gt;Entry.DoesNotExist&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e083cac1d45447670947e2765f04c7f401bd320c" translate="yes" xml:space="preserve">
          <source>Note that there is an extra &amp;ldquo;Delete?&amp;rdquo; column that allows removing rows added using the &amp;ldquo;Add Another Choice&amp;rdquo; button and rows that have already been saved.</source>
          <target state="translated">请注意，还有一个额外的&amp;ldquo;删除？&amp;rdquo; 列，该列允许删除使用&amp;ldquo;添加其他选择&amp;rdquo;按钮添加的行以及已保存的行。</target>
        </trans-unit>
        <trans-unit id="d2130933d4a7a35839fd38a445d7757805cf2913" translate="yes" xml:space="preserve">
          <source>Note that there&amp;rsquo;s no need to specify the keyword argument of the model that defines the relationship. In the above example, we don&amp;rsquo;t pass the parameter &lt;code&gt;blog&lt;/code&gt; to &lt;code&gt;create()&lt;/code&gt;. Django figures out that the new &lt;code&gt;Entry&lt;/code&gt; object&amp;rsquo;s &lt;code&gt;blog&lt;/code&gt; field should be set to &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">请注意，无需指定定义关系的模型的关键字参数。在上面的示例中，我们没有将参数 &lt;code&gt;blog&lt;/code&gt; 传递给 &lt;code&gt;create()&lt;/code&gt; 。Django指出新的 &lt;code&gt;Entry&lt;/code&gt; 对象的 &lt;code&gt;blog&lt;/code&gt; 字段应设置为 &lt;code&gt;b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2477290a913291cbc38ebf667d64085a6083a034" translate="yes" xml:space="preserve">
          <source>Note that these are &lt;em&gt;partial&lt;/em&gt; matches. &lt;code&gt;'PASS'&lt;/code&gt; will also match PASSWORD, just as &lt;code&gt;'TOKEN'&lt;/code&gt; will also match TOKENIZED and so on.</source>
          <target state="translated">请注意，这些是&lt;em&gt;部分&lt;/em&gt;匹配。 &lt;code&gt;'PASS'&lt;/code&gt; 通行证 &lt;code&gt;'TOKEN'&lt;/code&gt; 也将与&amp;ldquo;密码&amp;rdquo;匹配，就像&amp;ldquo;通证&amp;rdquo;也将与&amp;ldquo;通证&amp;rdquo;匹配，依此类推。</target>
        </trans-unit>
        <trans-unit id="e1fc5fa3e855f806a565c439909e116dd3591f60" translate="yes" xml:space="preserve">
          <source>Note that these paths should use Unix-style forward slashes, even on Windows (e.g. &lt;code&gt;&quot;C:/Users/user/mysite/extra_static_content&quot;&lt;/code&gt;).</source>
          <target state="translated">请注意，即使在Windows上，这些路径也应使用Unix风格的正斜杠（例如 &lt;code&gt;&quot;C:/Users/user/mysite/extra_static_content&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="795b6608e8468ba6ef747bf20d7df8c092e409b7" translate="yes" xml:space="preserve">
          <source>Note that these paths should use Unix-style forward slashes, even on Windows.</source>
          <target state="translated">请注意,这些路径应该使用Unix风格的斜线,即使在Windows上也是如此。</target>
        </trans-unit>
        <trans-unit id="2cf35c103d926ddc769c79ec834723110b7dd384" translate="yes" xml:space="preserve">
          <source>Note that this HTML version of the email contains a full traceback, with names and values of local variables at each level of the stack, plus the values of your Django settings. This information is potentially very sensitive, and you may not want to send it over email. Consider using something such as &lt;a href=&quot;https://pypi.org/project/sentry/&quot;&gt;Sentry&lt;/a&gt; to get the best of both worlds &amp;ndash; the rich information of full tracebacks plus the security of &lt;em&gt;not&lt;/em&gt; sending the information over email. You may also explicitly designate certain sensitive information to be filtered out of error reports &amp;ndash; learn more on &lt;a href=&quot;../howto/error-reporting#filtering-error-reports&quot;&gt;Filtering error reports&lt;/a&gt;.</source>
          <target state="translated">请注意，此电子邮件的HTML版本包含完整的追溯，在堆栈的每个级别上都包含局部变量的名称和值，以及Django设置的值。此信息可能非常敏感，您可能不想通过电子邮件发送它。考虑使用诸如&lt;a href=&quot;https://pypi.org/project/sentry/&quot;&gt;Sentry之类的&lt;/a&gt;东西来获得两全其美的体验&amp;ndash;全面的回溯的丰富信息以及&lt;em&gt;不&lt;/em&gt;通过电子邮件发送信息的安全性。您也可以明确指定&lt;a href=&quot;../howto/error-reporting#filtering-error-reports&quot;&gt;要从错误报告中&lt;/a&gt;过滤掉的某些敏感信息&amp;ndash;了解有关过滤错误报告的更多信息。</target>
        </trans-unit>
        <trans-unit id="8a3d1d6be0677336f3c4ce808049c72f672b6643" translate="yes" xml:space="preserve">
          <source>Note that this checks only for the existence of a given key, not that the value of a key is non-empty.</source>
          <target state="translated">注意,这只是检查给定的键的存在,而不是检查键的值是非空的。</target>
        </trans-unit>
        <trans-unit id="0bbb736bbd29d6ee2584aa607cfd01a5217b40a3" translate="yes" xml:space="preserve">
          <source>Note that this equivalent to:</source>
          <target state="translated">注意,这相当于。</target>
        </trans-unit>
        <trans-unit id="dba99c12af9dce2149cb16de622b8b3d2a6c2aad" translate="yes" xml:space="preserve">
          <source>Note that this is different than &lt;a href=&quot;#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; is purely database-related, whereas &lt;a href=&quot;#django.db.models.Field.blank&quot;&gt;&lt;code&gt;blank&lt;/code&gt;&lt;/a&gt; is validation-related. If a field has &lt;code&gt;blank=True&lt;/code&gt;, form validation will allow entry of an empty value. If a field has &lt;code&gt;blank=False&lt;/code&gt;, the field will be required.</source>
          <target state="translated">请注意，这不同于&lt;a href=&quot;#django.db.models.Field.null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;#django.db.models.Field.null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;纯粹是与数据库有关的，而&lt;a href=&quot;#django.db.models.Field.blank&quot;&gt; &lt;code&gt;blank&lt;/code&gt; &lt;/a&gt;是与验证有关的。如果字段具有 &lt;code&gt;blank=True&lt;/code&gt; ，则表单验证将允许输入空值。如果字段具有 &lt;code&gt;blank=False&lt;/code&gt; ，那么将需要该字段。</target>
        </trans-unit>
        <trans-unit id="e1a927a86b31c6fe256c0c201864b03e59d37343" translate="yes" xml:space="preserve">
          <source>Note that this is different than &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; is purely database-related, whereas &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.blank&quot;&gt;&lt;code&gt;blank&lt;/code&gt;&lt;/a&gt; is validation-related. If a field has &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.blank&quot;&gt;&lt;code&gt;blank=True&lt;/code&gt;&lt;/a&gt;, form validation will allow entry of an empty value. If a field has &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.blank&quot;&gt;&lt;code&gt;blank=False&lt;/code&gt;&lt;/a&gt;, the field will be required.</source>
          <target state="translated">请注意，这不同于&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;纯粹是与数据库有关的，而&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.blank&quot;&gt; &lt;code&gt;blank&lt;/code&gt; &lt;/a&gt;是与验证有关的。如果字段具有&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.blank&quot;&gt; &lt;code&gt;blank=True&lt;/code&gt; &lt;/a&gt;，则表单验证将允许输入空值。如果字段具有&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.blank&quot;&gt; &lt;code&gt;blank=False&lt;/code&gt; &lt;/a&gt;，那么将需要该字段。</target>
        </trans-unit>
        <trans-unit id="65807d9d49cf72ec77bf7a331d692c91fa7c9ef4" translate="yes" xml:space="preserve">
          <source>Note that this is not quite the same as slicing from the end of a sequence in Python. The above example will return the last item first, then the penultimate item and so on. If we had a Python sequence and looked at &lt;code&gt;seq[-5:]&lt;/code&gt;, we would see the fifth-last item first. Django doesn&amp;rsquo;t support that mode of access (slicing from the end), because it&amp;rsquo;s not possible to do it efficiently in SQL.</source>
          <target state="translated">请注意，这与在Python中从序列末尾切片并不完全相同。上面的示例将首先返回最后一个项目，然后是倒数第二个项目，依此类推。如果我们有一个Python序列并查看 &lt;code&gt;seq[-5:]&lt;/code&gt; ，我们将首先看到倒数第二个项目。Django不支持这种访问方式（从末尾切片），因为不可能在SQL中高效地进行访问。</target>
        </trans-unit>
        <trans-unit id="bb0ad9f46efaf6ea73d6b6569c751fa30e6aab82" translate="yes" xml:space="preserve">
          <source>Note that this isn&amp;rsquo;t necessarily the time zone of the server. For example, one server may serve multiple Django-powered sites, each with a separate time zone setting.</source>
          <target state="translated">请注意，这不一定是服务器的时区。例如，一台服务器可以服务于多个由Django驱动的站点，每个站点都有单独的时区设置。</target>
        </trans-unit>
        <trans-unit id="c953b63059173178458ed761fbedea0ac39027ac" translate="yes" xml:space="preserve">
          <source>Note that this only works given two things:</source>
          <target state="translated">需要注意的是,这只适用于两件事。</target>
        </trans-unit>
        <trans-unit id="43246198826a48db05dda06a13016417e496af6b" translate="yes" xml:space="preserve">
          <source>Note that this server does &lt;em&gt;not&lt;/em&gt; automatically detect changes to your Python source code (as &lt;a href=&quot;#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; does). It does, however, detect changes to templates.</source>
          <target state="translated">请注意，此服务器也&lt;em&gt;不会&lt;/em&gt;自动检测对你的Python代码（如&lt;a href=&quot;#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; 命令&lt;/a&gt;一样）。但是，它确实检测到模板的更改。</target>
        </trans-unit>
        <trans-unit id="77708f0489400a9d946be1d05b99670aa11a0f4b" translate="yes" xml:space="preserve">
          <source>Note that this value is &lt;em&gt;not&lt;/em&gt; HTML-escaped in automatically-generated forms. This lets you include HTML in &lt;a href=&quot;#django.db.models.Field.help_text&quot;&gt;&lt;code&gt;help_text&lt;/code&gt;&lt;/a&gt; if you so desire. For example:</source>
          <target state="translated">请注意，此值&lt;em&gt;不会&lt;/em&gt;以自动生成的形式转义为HTML。如果需要，可以在&lt;a href=&quot;#django.db.models.Field.help_text&quot;&gt; &lt;code&gt;help_text&lt;/code&gt; 中&lt;/a&gt;包含HTML 。例如：</target>
        </trans-unit>
        <trans-unit id="bcf38a05a5b6f4694b53daa8eea90c967fc370a2" translate="yes" xml:space="preserve">
          <source>Note that this value is &lt;em&gt;not&lt;/em&gt; HTML-escaped when it&amp;rsquo;s displayed in the admin interface. This lets you include HTML if you so desire. Alternatively you can use plain text and &lt;a href=&quot;../../utils#django.utils.html.escape&quot;&gt;&lt;code&gt;django.utils.html.escape()&lt;/code&gt;&lt;/a&gt; to escape any HTML special characters.</source>
          <target state="translated">请注意，在管理界面中显示此值时，&lt;em&gt;不会&lt;/em&gt;将该值转义为HTML。如果需要，这可以让您包含HTML。或者，您可以使用纯文本和&lt;a href=&quot;../../utils#django.utils.html.escape&quot;&gt; &lt;code&gt;django.utils.html.escape()&lt;/code&gt; &lt;/a&gt;来转义任何HTML特殊字符。</target>
        </trans-unit>
        <trans-unit id="906411ef03113b0636d2db25f54351b72fe13574" translate="yes" xml:space="preserve">
          <source>Note that unlike &lt;a href=&quot;#django.contrib.sessions.serializers.PickleSerializer&quot;&gt;&lt;code&gt;PickleSerializer&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#django.contrib.sessions.serializers.JSONSerializer&quot;&gt;&lt;code&gt;JSONSerializer&lt;/code&gt;&lt;/a&gt; cannot handle arbitrary Python data types. As is often the case, there is a trade-off between convenience and security. If you wish to store more advanced data types including &lt;code&gt;datetime&lt;/code&gt; and &lt;code&gt;Decimal&lt;/code&gt; in JSON backed sessions, you will need to write a custom serializer (or convert such values to a JSON serializable object before storing them in &lt;code&gt;request.session&lt;/code&gt;). While serializing these values is often straightforward (&lt;a href=&quot;../serialization#django.core.serializers.json.DjangoJSONEncoder&quot;&gt;&lt;code&gt;DjangoJSONEncoder&lt;/code&gt;&lt;/a&gt; may be helpful), writing a decoder that can reliably get back the same thing that you put in is more fragile. For example, you run the risk of returning a &lt;code&gt;datetime&lt;/code&gt; that was actually a string that just happened to be in the same format chosen for &lt;code&gt;datetime&lt;/code&gt;s).</source>
          <target state="translated">请注意，与&lt;a href=&quot;#django.contrib.sessions.serializers.PickleSerializer&quot;&gt; &lt;code&gt;PickleSerializer&lt;/code&gt; &lt;/a&gt;不同，&lt;a href=&quot;#django.contrib.sessions.serializers.JSONSerializer&quot;&gt; &lt;code&gt;JSONSerializer&lt;/code&gt; &lt;/a&gt;无法处理任意Python数据类型。通常，在便利性和安全性之间需要权衡取舍。如果您希望在JSON支持的会话中存储更高级的数据类型（包括 &lt;code&gt;datetime&lt;/code&gt; 和 &lt;code&gt;Decimal&lt;/code&gt; ，则需要编写一个自定义的序列化器（或在将它们存储在 &lt;code&gt;request.session&lt;/code&gt; 中之前将这些值转换为JSON可序列化的对象）。虽然序列化这些值通常很简单（&lt;a href=&quot;../serialization#django.core.serializers.json.DjangoJSONEncoder&quot;&gt; &lt;code&gt;DjangoJSONEncoder&lt;/code&gt; &lt;/a&gt;可能会有所帮助），但是编写可以可靠地取回所放入内容的解码器更加脆弱。例如，您冒着返回 &lt;code&gt;datetime&lt;/code&gt; 时间的风险实际上是一个字符串，刚好与为 &lt;code&gt;datetime&lt;/code&gt; 选择的格式相同）。</target>
        </trans-unit>
        <trans-unit id="702d81c03f196bf44f8bcd6b11a9b027b74ab4bb" translate="yes" xml:space="preserve">
          <source>Note that unlike a dictionary, &lt;code&gt;del&lt;/code&gt; doesn&amp;rsquo;t raise &lt;code&gt;KeyError&lt;/code&gt; if the header field doesn&amp;rsquo;t exist.</source>
          <target state="translated">请注意，与字典不同，如果标头字段不存在，则 &lt;code&gt;del&lt;/code&gt; 不会引发 &lt;code&gt;KeyError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66f752221b158da1f8b91ce1869204010b1f48ea" translate="yes" xml:space="preserve">
          <source>Note that using &lt;code&gt;YearInSchool.SENIOR&lt;/code&gt;, &lt;code&gt;YearInSchool['SENIOR']&lt;/code&gt;, or &lt;code&gt;YearInSchool('SR')&lt;/code&gt; to access or lookup enum members work as expected, as do the &lt;code&gt;.name&lt;/code&gt; and &lt;code&gt;.value&lt;/code&gt; properties on the members.</source>
          <target state="translated">请注意，使用 &lt;code&gt;YearInSchool.SENIOR&lt;/code&gt; ， &lt;code&gt;YearInSchool['SENIOR']&lt;/code&gt; 或 &lt;code&gt;YearInSchool('SR')&lt;/code&gt; 来访问或查找枚举成员的工作与预期的一样，成员上的 &lt;code&gt;.name&lt;/code&gt; 和 &lt;code&gt;.value&lt;/code&gt; 属性也是如此。</target>
        </trans-unit>
        <trans-unit id="f50008769d1a14e593867a6db9cdf9470058cdd6" translate="yes" xml:space="preserve">
          <source>Note that using &lt;code&gt;iterator()&lt;/code&gt; on a &lt;code&gt;QuerySet&lt;/code&gt; which has already been evaluated will force it to evaluate again, repeating the query.</source>
          <target state="translated">请注意，在已经评估过的 &lt;code&gt;QuerySet&lt;/code&gt; 上使用 &lt;code&gt;iterator()&lt;/code&gt; 将迫使其再次评估，重复查询。</target>
        </trans-unit>
        <trans-unit id="f5a5705d4f4e4dba6360106b56cde3d815c0b93d" translate="yes" xml:space="preserve">
          <source>Note that we pass the &lt;code&gt;queryset&lt;/code&gt; argument in both the &lt;code&gt;POST&lt;/code&gt; and &lt;code&gt;GET&lt;/code&gt; cases in this example.</source>
          <target state="translated">请注意，在此示例中，我们在 &lt;code&gt;POST&lt;/code&gt; 和 &lt;code&gt;GET&lt;/code&gt; 情况下都传递了 &lt;code&gt;queryset&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="fe5575ba32184ff281804a3e6ed550d830b3259c" translate="yes" xml:space="preserve">
          <source>Note that when &lt;code&gt;unique&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, you don&amp;rsquo;t need to specify &lt;a href=&quot;#django.db.models.Field.db_index&quot;&gt;&lt;code&gt;db_index&lt;/code&gt;&lt;/a&gt;, because &lt;code&gt;unique&lt;/code&gt; implies the creation of an index.</source>
          <target state="translated">请注意，当 &lt;code&gt;unique&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; 时，您无需指定&lt;a href=&quot;#django.db.models.Field.db_index&quot;&gt; &lt;code&gt;db_index&lt;/code&gt; &lt;/a&gt;，因为 &lt;code&gt;unique&lt;/code&gt; 意味着创建了索引。</target>
        </trans-unit>
        <trans-unit id="39167b947707fbb5b9cf4b6e5a2e4668c034defb" translate="yes" xml:space="preserve">
          <source>Note that when a model is deleted, related files are not deleted. If you need to cleanup orphaned files, you&amp;rsquo;ll need to handle it yourself (for instance, with a custom management command that can be run manually or scheduled to run periodically via e.g. cron).</source>
          <target state="translated">请注意，删除模型时，不会删除相关文件。如果需要清理孤立的文件，则需要自己处理（例如，使用可手动运行或计划通过cron定期运行的自定义管理命令）。</target>
        </trans-unit>
        <trans-unit id="719be46afabc795f700c5cdc4fb51623fb2f80af" translate="yes" xml:space="preserve">
          <source>Note that when deferred fields are accessed, the loading of the deferred field&amp;rsquo;s value happens through this method. Thus it is possible to customize the way deferred loading happens. The example below shows how one can reload all of the instance&amp;rsquo;s fields when a deferred field is reloaded:</source>
          <target state="translated">请注意，当访问延迟字段时，通过此方法会加载延迟字段的值。因此可以自定义延迟加载的方式。下面的示例显示了在重载延迟字段时如何重载实例的所有字段：</target>
        </trans-unit>
        <trans-unit id="94c1c16b5b2cd3f86c4031d357763da656691cbe" translate="yes" xml:space="preserve">
          <source>Note that when using this technique the &lt;a href=&quot;../../signals#django.db.models.signals.m2m_changed&quot;&gt;&lt;code&gt;m2m_changed&lt;/code&gt;&lt;/a&gt; signals aren&amp;rsquo;t triggered. This is because as far as the admin is concerned, &lt;code&gt;through&lt;/code&gt; is just a model with two foreign key fields rather than a many-to-many relation.</source>
          <target state="translated">请注意，使用此技术时，不会触发&lt;a href=&quot;../../signals#django.db.models.signals.m2m_changed&quot;&gt; &lt;code&gt;m2m_changed&lt;/code&gt; &lt;/a&gt;信号。这是因为就管理员而言， &lt;code&gt;through&lt;/code&gt; 只是具有两个外键字段而不是多对多关系的模型。</target>
        </trans-unit>
        <trans-unit id="b05fa36010992ac15dfe2760e5308fe656f763bc" translate="yes" xml:space="preserve">
          <source>Note that when you&amp;rsquo;re using &lt;code&gt;takes_context=True&lt;/code&gt;, there&amp;rsquo;s no need to pass arguments to the template tag. It automatically gets access to the context.</source>
          <target state="translated">请注意，当您使用 &lt;code&gt;takes_context=True&lt;/code&gt; 时，无需将参数传递给模板标记。它会自动访问上下文。</target>
        </trans-unit>
        <trans-unit id="79079404d7b87dcc164745f56a3bf81208b2cc17" translate="yes" xml:space="preserve">
          <source>Note that whenever you deal with uploaded files, you should pay close attention to where you&amp;rsquo;re uploading them and what type of files they are, to avoid security holes. &lt;em&gt;Validate all uploaded files&lt;/em&gt; so that you&amp;rsquo;re sure the files are what you think they are. For example, if you blindly let somebody upload files, without validation, to a directory that&amp;rsquo;s within your Web server&amp;rsquo;s document root, then somebody could upload a CGI or PHP script and execute that script by visiting its URL on your site. Don&amp;rsquo;t allow that.</source>
          <target state="translated">请注意，无论何时处理上传的文件，都应密切注意上传文件的位置以及文件的类型，以避免安全漏洞。&lt;em&gt;验证所有上载的文件，&lt;/em&gt;以确保文件符合您的想法。例如，如果您盲目地让某人未经验证将文件上传到Web服务器文档根目录中的目录，那么某人可以上传CGI或PHP脚本并通过访问您站点上的URL来执行该脚本。不要这样</target>
        </trans-unit>
        <trans-unit id="39f8400a649c5d93c855cdc636e888afa63eb937" translate="yes" xml:space="preserve">
          <source>Note that where the password is passed to one of these functions, this should always be the clear text password - not a hashed password.</source>
          <target state="translated">需要注意的是,当密码被传递给这些函数之一时,它应该始终是明文密码,而不是哈希密码。</target>
        </trans-unit>
        <trans-unit id="d093d349e1d459362f8b4a2b1a67b11670c43223" translate="yes" xml:space="preserve">
          <source>Note that while you can &lt;em&gt;define&lt;/em&gt; a custom manager on the abstract model, you can&amp;rsquo;t &lt;em&gt;invoke&lt;/em&gt; any methods using the abstract model. That is:</source>
          <target state="translated">请注意，虽然您可以在抽象模型上&lt;em&gt;定义&lt;/em&gt;自定义管理器，但是不能使用抽象模型&lt;em&gt;调用&lt;/em&gt;任何方法。那是：</target>
        </trans-unit>
        <trans-unit id="3265dff3dd371813ef80cf218a365cc918b03a70" translate="yes" xml:space="preserve">
          <source>Note that you can backslash-escape a format string if you want to use the &amp;ldquo;raw&amp;rdquo; value. In this example, both &amp;ldquo;h&amp;rdquo; and &amp;ldquo;m&amp;rdquo; are backslash-escaped, because otherwise each is a format string that displays the hour and the month, respectively:</source>
          <target state="translated">请注意，如果要使用&amp;ldquo; raw&amp;rdquo;值，可以反斜杠转义格式字符串。在此示例中，&amp;ldquo; h&amp;rdquo;和&amp;ldquo; m&amp;rdquo;都用反斜杠转义，因为否则每个都是分别显示小时和月的格式字符串：</target>
        </trans-unit>
        <trans-unit id="7476fdc821a56bd47f0eda1f0b41d488383e4103" translate="yes" xml:space="preserve">
          <source>Note that you can backslash-escape a format string if you want to use the &amp;ldquo;raw&amp;rdquo; value. In this example, both &amp;ldquo;o&amp;rdquo; and &amp;ldquo;f&amp;rdquo; are backslash-escaped, because otherwise each is a format string that displays the year and the time, respectively:</source>
          <target state="translated">请注意，如果要使用&amp;ldquo; raw&amp;rdquo;值，可以反斜杠转义格式字符串。在此示例中，&amp;ldquo; o&amp;rdquo;和&amp;ldquo; f&amp;rdquo;都用反斜杠转义，因为否则每个都是分别显示年份和时间的格式字符串：</target>
        </trans-unit>
        <trans-unit id="4f73d7dc009cf6ecb0d2dc25b668df5cadd84847" translate="yes" xml:space="preserve">
          <source>Note that you can give &lt;code&gt;Paginator&lt;/code&gt; a list/tuple, a Django &lt;code&gt;QuerySet&lt;/code&gt;, or any other object with a &lt;code&gt;count()&lt;/code&gt; or &lt;code&gt;__len__()&lt;/code&gt; method. When determining the number of objects contained in the passed object, &lt;code&gt;Paginator&lt;/code&gt; will first try calling &lt;code&gt;count()&lt;/code&gt;, then fallback to using &lt;code&gt;len()&lt;/code&gt; if the passed object has no &lt;code&gt;count()&lt;/code&gt; method. This allows objects such as Django&amp;rsquo;s &lt;code&gt;QuerySet&lt;/code&gt; to use a more efficient &lt;code&gt;count()&lt;/code&gt; method when available.</source>
          <target state="translated">请注意，您可以使用 &lt;code&gt;count()&lt;/code&gt; 或 &lt;code&gt;__len__()&lt;/code&gt; 方法为 &lt;code&gt;Paginator&lt;/code&gt; 提供一个列表/元组，一个Django &lt;code&gt;QuerySet&lt;/code&gt; 或任何其他对象。在确定传递的对象中包含的对象数量时， &lt;code&gt;Paginator&lt;/code&gt; 将首先尝试调用 &lt;code&gt;count()&lt;/code&gt; ，如果传递的对象没有 &lt;code&gt;count()&lt;/code&gt; 方法，则回退到使用 &lt;code&gt;len()&lt;/code&gt; 。这允许诸如Django的 &lt;code&gt;QuerySet&lt;/code&gt; 之类的对象在可用时使用更有效的 &lt;code&gt;count()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="9e42e9704f036f9a6dfea5bd7eeae341bb89a4c9" translate="yes" xml:space="preserve">
          <source>Note that you can redirect standard output and error streams as all commands support the &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; options. For example, you could write:</source>
          <target state="translated">请注意，您可以重定向标准输出和错误流，因为所有命令都支持 &lt;code&gt;stdout&lt;/code&gt; 和 &lt;code&gt;stderr&lt;/code&gt; 选项。例如，您可以编写：</target>
        </trans-unit>
        <trans-unit id="28f96228f714507e7175e473320352a2987351be" translate="yes" xml:space="preserve">
          <source>Note that you can use the decorators in conjunction with the middleware. Use of a decorator overrides the middleware.</source>
          <target state="translated">请注意,您可以将装饰器与中间件一起使用。使用装饰器可以覆盖中间件。</target>
        </trans-unit>
        <trans-unit id="b96ab2ffca51fc0d415d2ea2c91ff51267bb654f" translate="yes" xml:space="preserve">
          <source>Note that you don&amp;rsquo;t have to use Django&amp;rsquo;s template system if you prefer another system. While Django&amp;rsquo;s template system is particularly well-integrated with Django&amp;rsquo;s model layer, nothing forces you to use it. For that matter, you don&amp;rsquo;t have to use Django&amp;rsquo;s database API, either. You can use another database abstraction layer, you can read XML files, you can read files off disk, or anything you want. Each piece of Django &amp;ndash; models, views, templates &amp;ndash; is decoupled from the next.</source>
          <target state="translated">请注意，如果您喜欢其他系统，则不必使用Django的模板系统。尽管Django的模板系统与Django的模型层特别集成在一起，但是没有什么可以强迫您使用它。因此，您也不必使用Django的数据库API。您可以使用另一个数据库抽象层，可以读取XML文件，可以从磁盘读取文件或任何所需的文件。 Django的每个部分（模型，视图，模板）都与下一个解耦。</target>
        </trans-unit>
        <trans-unit id="f31c5c5b9d42b1077c8970e03ed8c44f9ddad790" translate="yes" xml:space="preserve">
          <source>Note that you may not want autodiscovery of &lt;code&gt;admin&lt;/code&gt; modules when using your own &lt;code&gt;AdminSite&lt;/code&gt; instance since you will likely be importing all the per-app &lt;code&gt;admin&lt;/code&gt; modules in your &lt;code&gt;myproject.admin&lt;/code&gt; module. This means you need to put &lt;code&gt;'django.contrib.admin.apps.SimpleAdminConfig'&lt;/code&gt; instead of &lt;code&gt;'django.contrib.admin'&lt;/code&gt; in your &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">请注意，在使用自己的 &lt;code&gt;AdminSite&lt;/code&gt; 实例时，您可能不希望自动发现 &lt;code&gt;admin&lt;/code&gt; 模块，因为您可能会在 &lt;code&gt;myproject.admin&lt;/code&gt; 模块中导入所有按应用程序 &lt;code&gt;admin&lt;/code&gt; 模块。这意味着您需要在&lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置中放置 &lt;code&gt;'django.contrib.admin.apps.SimpleAdminConfig'&lt;/code&gt; 而不是 &lt;code&gt;'django.contrib.admin'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21df1330fbaf74e0680f4452a5609d54fd10fa1a" translate="yes" xml:space="preserve">
          <source>Note that you must save an object before it can be assigned to a foreign key relationship. For example, creating an &lt;code&gt;Article&lt;/code&gt; with unsaved &lt;code&gt;Reporter&lt;/code&gt; raises &lt;code&gt;ValueError&lt;/code&gt;:</source>
          <target state="translated">请注意，必须先保存一个对象，然后才能将其分配给外键关系。例如，使用未保存的 &lt;code&gt;Reporter&lt;/code&gt; 创建 &lt;code&gt;Article&lt;/code&gt; 会引发 &lt;code&gt;ValueError&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="376f6d08577acaa494289e31892d8f4bc49a71b1" translate="yes" xml:space="preserve">
          <source>Note that you must save an object before it can be assigned to a one-to-one relationship. For example, creating a &lt;code&gt;Restaurant&lt;/code&gt; with unsaved &lt;code&gt;Place&lt;/code&gt; raises &lt;code&gt;ValueError&lt;/code&gt;:</source>
          <target state="translated">请注意，必须先保存一个对象，然后才能将其分配给一对一关系。例如，创建一个 &lt;code&gt;Restaurant&lt;/code&gt; 未保存的 &lt;code&gt;Place&lt;/code&gt; 引发 &lt;code&gt;ValueError&lt;/code&gt; 异常：</target>
        </trans-unit>
        <trans-unit id="3aa4492251f1f89b7d1b67c82923a765943b8b96" translate="yes" xml:space="preserve">
          <source>Note that you set &lt;code&gt;feed_type&lt;/code&gt; to a class object, not an instance.</source>
          <target state="translated">请注意，您将 &lt;code&gt;feed_type&lt;/code&gt; 设置为类对象，而不是实例。</target>
        </trans-unit>
        <trans-unit id="41780517e58575ae1fd4b7cf13682bde6c859248" translate="yes" xml:space="preserve">
          <source>Note that you&amp;rsquo;ll have to provide the surrounding &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; elements yourself.</source>
          <target state="translated">请注意，您必须自己提供周围的 &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="739a26284bb028620f19294b60895ab661309c8a" translate="yes" xml:space="preserve">
          <source>Note that you&amp;rsquo;ll need to call &lt;a href=&quot;#django.contrib.sessions.base_session.AbstractBaseSession.get_decoded&quot;&gt;&lt;code&gt;get_decoded()&lt;/code&gt;&lt;/a&gt; to get the session dictionary. This is necessary because the dictionary is stored in an encoded format:</source>
          <target state="translated">请注意，您需要调用&lt;a href=&quot;#django.contrib.sessions.base_session.AbstractBaseSession.get_decoded&quot;&gt; &lt;code&gt;get_decoded()&lt;/code&gt; &lt;/a&gt;来获取会话字典。这是必需的，因为字典以编码格式存储：</target>
        </trans-unit>
        <trans-unit id="5764965c279a49130b8ab3f921987b56c15bcdef" translate="yes" xml:space="preserve">
          <source>Note that, with static (middleware-less) translation, the language is in &lt;code&gt;settings.LANGUAGE_CODE&lt;/code&gt;, while with dynamic (middleware) translation, it&amp;rsquo;s in &lt;code&gt;request.LANGUAGE_CODE&lt;/code&gt;.</source>
          <target state="translated">请注意，对于静态（无中间件）翻译，该语言位于 &lt;code&gt;settings.LANGUAGE_CODE&lt;/code&gt; 中，而对于动态（中间件）翻译，其语言位于 &lt;code&gt;request.LANGUAGE_CODE&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="285f98e8d01e4962eff6724b78a3c6724d0931e6" translate="yes" xml:space="preserve">
          <source>Note that:</source>
          <target state="translated">请注意:</target>
        </trans-unit>
        <trans-unit id="2c5683f35f8382bf853d6c54b47a1958d38402e3" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;list()&lt;/code&gt; call around the Blog &lt;code&gt;QuerySet&lt;/code&gt; to force execution of the first query. Without it, a nested query would be executed, because &lt;a href=&quot;../../topics/db/queries#querysets-are-lazy&quot;&gt;QuerySets are lazy&lt;/a&gt;.</source>
          <target state="translated">请注意Blog &lt;code&gt;QuerySet&lt;/code&gt; 周围的 &lt;code&gt;list()&lt;/code&gt; 调用强制执行第一个查询。没有它，将执行嵌套查询，因为&lt;a href=&quot;../../topics/db/queries#querysets-are-lazy&quot;&gt;QuerySet是lazy&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="50042f95afef19ddcee485ac7f7b1bcf7743b564" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;pk&lt;/code&gt; named group, which &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin.get_object&quot;&gt;&lt;code&gt;get_object()&lt;/code&gt;&lt;/a&gt; uses to look up the &lt;code&gt;Author&lt;/code&gt; instance. You could also use a slug, or any of the other features of &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注意名为group 的 &lt;code&gt;pk&lt;/code&gt; ，&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin.get_object&quot;&gt; &lt;code&gt;get_object()&lt;/code&gt; &lt;/a&gt;使用它来查找 &lt;code&gt;Author&lt;/code&gt; 实例。您还可以使用&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt; &lt;code&gt;SingleObjectMixin&lt;/code&gt; &lt;/a&gt;或SingleObjectMixin的任何其他功能。</target>
        </trans-unit>
        <trans-unit id="1548150f65982792369c241ae984f2b20c5090cc" translate="yes" xml:space="preserve">
          <source>Note the addition of &lt;code&gt;import datetime&lt;/code&gt; and &lt;code&gt;from django.utils import
timezone&lt;/code&gt;, to reference Python&amp;rsquo;s standard &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; module and Django&amp;rsquo;s time-zone-related utilities in &lt;a href=&quot;../ref/utils#module-django.utils.timezone&quot;&gt;&lt;code&gt;django.utils.timezone&lt;/code&gt;&lt;/a&gt;, respectively. If you aren&amp;rsquo;t familiar with time zone handling in Python, you can learn more in the &lt;a href=&quot;../topics/i18n/timezones&quot;&gt;time zone support docs&lt;/a&gt;.</source>
          <target state="translated">注：将 &lt;code&gt;import datetime&lt;/code&gt; 和 &lt;code&gt;from django.utils import timezone&lt;/code&gt; ，引用Python的标准&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;模块和Django的时区相关的公用事业&lt;a href=&quot;../ref/utils#module-django.utils.timezone&quot;&gt; &lt;code&gt;django.utils.timezone&lt;/code&gt; &lt;/a&gt;，分别。如果您不熟悉Python中的时区处理，可以在&lt;a href=&quot;../topics/i18n/timezones&quot;&gt;时区支持文档中&lt;/a&gt;了解更多信息。</target>
        </trans-unit>
        <trans-unit id="36e778e75c22dd51e685a8060e6bf755ecbdde51" translate="yes" xml:space="preserve">
          <source>Note the first query will match &lt;code&gt;'Beatles Blog'&lt;/code&gt;, &lt;code&gt;'beatles blog'&lt;/code&gt;, &lt;code&gt;'BeAtLes BLoG'&lt;/code&gt;, etc.</source>
          <target state="translated">请注意，第一个查询将匹配 &lt;code&gt;'Beatles Blog'&lt;/code&gt; ，&amp;ldquo;甲壳虫博客 &lt;code&gt;'beatles blog'&lt;/code&gt; ， &lt;code&gt;'BeAtLes BLoG'&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="20d78a8e421517dfc8501178399cb2a435e63306" translate="yes" xml:space="preserve">
          <source>Note the following:</source>
          <target state="translated">请注意以下几点:</target>
        </trans-unit>
        <trans-unit id="4270a55c8d2d5be21936635e96658dc1d9f116f5" translate="yes" xml:space="preserve">
          <source>Note the second example is more restrictive.</source>
          <target state="translated">请注意,第二个例子的限制性更强。</target>
        </trans-unit>
        <trans-unit id="f90cc3f74d38c8aecec6b1b3c2cf127ed6722f4d" translate="yes" xml:space="preserve">
          <source>Note there is a race condition if you allow objects to be created while this migration is running. Objects created after the &lt;code&gt;AddField&lt;/code&gt; and before &lt;code&gt;RunPython&lt;/code&gt; will have their original &lt;code&gt;uuid&lt;/code&gt;&amp;rsquo;s overwritten.</source>
          <target state="translated">请注意，如果允许在运行此迁移时创建对象，则存在竞争条件。在 &lt;code&gt;AddField&lt;/code&gt; 之后和 &lt;code&gt;RunPython&lt;/code&gt; 之前创建的对象将被覆盖其原始 &lt;code&gt;uuid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e57ad67f321891403673ac74379faf842d068ac0" translate="yes" xml:space="preserve">
          <source>Note this doesn&amp;rsquo;t delete the related objects &amp;ndash; it just disassociates them.</source>
          <target state="translated">请注意，这不会删除相关对象，而只是取消关联它们。</target>
        </trans-unit>
        <trans-unit id="625d205aa6a02c8990ca032fce68080c4bbaac13" translate="yes" xml:space="preserve">
          <source>Note this will match any record with a &lt;code&gt;pub_date&lt;/code&gt; that falls on a Monday (day 1 of the week), regardless of the month or year in which it occurs. Week days are indexed with day 1 being Monday and day 7 being Sunday.</source>
          <target state="translated">请注意，此记录将与 &lt;code&gt;pub_date&lt;/code&gt; 属于星期一（一周中的第一天）的任何记录进行匹配，而不考虑记录发生的月份或年份。索引工作日，第1天为星期一，第7天为星期日。</target>
        </trans-unit>
        <trans-unit id="1e1c648f6363a79666bda4022f326dccc253cf89" translate="yes" xml:space="preserve">
          <source>Note this will match any record with a &lt;code&gt;pub_date&lt;/code&gt; that falls on a Monday (day 2 of the week), regardless of the month or year in which it occurs. Week days are indexed with day 1 being Sunday and day 7 being Saturday.</source>
          <target state="translated">请注意，此记录将与 &lt;code&gt;pub_date&lt;/code&gt; 属于星期一（一周中的第2天）的任何记录进行匹配，而不考虑记录发生的月份或年份。索引工作日，第1天为星期日，第7天为星期六。</target>
        </trans-unit>
        <trans-unit id="e6eb4a1725fee4458ebd4aae91065f1733dbed3c" translate="yes" xml:space="preserve">
          <source>Note this will match any record with a pub_date on the third day of the month, such as January 3, July 3, etc.</source>
          <target state="translated">请注意,这将匹配任何带有pub_date的月份第三天的记录,如1月3日,7月3日等。</target>
        </trans-unit>
        <trans-unit id="91a2cf41eebcf0cbbe41c2fed03384b950262468" translate="yes" xml:space="preserve">
          <source>Note this will match the headline &lt;code&gt;'Lennon honored today'&lt;/code&gt; but not &lt;code&gt;'lennon
honored today'&lt;/code&gt;.</source>
          <target state="translated">请注意，这将匹配大标题 &lt;code&gt;'Lennon honored today'&lt;/code&gt; 而不是 &lt;code&gt;'lennon honored today'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd54aed7458a908757d562528231778dc691427f" translate="yes" xml:space="preserve">
          <source>Note this will match the headline &lt;code&gt;'Today Lennon honored'&lt;/code&gt; but not &lt;code&gt;'today lennon honored'&lt;/code&gt;.</source>
          <target state="translated">注意，这将与标题 &lt;code&gt;'Today Lennon honored'&lt;/code&gt; 匹配，而不是 &lt;code&gt;'today lennon honored'&lt;/code&gt; 标题。</target>
        </trans-unit>
        <trans-unit id="97147c98752b50c4fd43dfdbddc52f844a56c7e1" translate="yes" xml:space="preserve">
          <source>Note, however, that like &lt;a href=&quot;#django.db.models.Model.full_clean&quot;&gt;&lt;code&gt;Model.full_clean()&lt;/code&gt;&lt;/a&gt;, a model&amp;rsquo;s &lt;code&gt;clean()&lt;/code&gt; method is not invoked when you call your model&amp;rsquo;s &lt;a href=&quot;#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">但是请注意，与&lt;a href=&quot;#django.db.models.Model.full_clean&quot;&gt; &lt;code&gt;Model.full_clean()&lt;/code&gt; 一样&lt;/a&gt;，调用模型的&lt;a href=&quot;#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;方法时不会调用模型的 &lt;code&gt;clean()&lt;/code&gt; （）方法。</target>
        </trans-unit>
        <trans-unit id="e3ef265b66c27a036bf430bdf6cdf4e5f69c53b0" translate="yes" xml:space="preserve">
          <source>Note, however, that the first of these will raise &lt;code&gt;IndexError&lt;/code&gt; while the second will raise &lt;code&gt;DoesNotExist&lt;/code&gt; if no objects match the given criteria. See &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">但是请注意，如果没有对象与给定条件匹配，则第一个将引发 &lt;code&gt;IndexError&lt;/code&gt; ,而第二个将引发 &lt;code&gt;DoesNotExist&lt;/code&gt; 。有关更多详细信息，请参见&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4bf23a731a060601e951cfde8e837da30936df56" translate="yes" xml:space="preserve">
          <source>Note, however, that these bulk update methods cannot call the &lt;code&gt;save()&lt;/code&gt; or &lt;code&gt;delete()&lt;/code&gt; methods of individual instances, which means that any custom behavior you have added for these methods will not be executed, including anything driven from the normal database object &lt;a href=&quot;../../ref/signals&quot;&gt;signals&lt;/a&gt;.</source>
          <target state="translated">但是请注意，这些批量更新方法不能调用单个实例的 &lt;code&gt;save()&lt;/code&gt; 或 &lt;code&gt;delete()&lt;/code&gt; 方法，这意味着将不会执行为这些方法添加的任何自定义行为，包括从常规数据库对象&lt;a href=&quot;../../ref/signals&quot;&gt;信号&lt;/a&gt;驱动的任何行为。。</target>
        </trans-unit>
        <trans-unit id="c9a64d96116de9297dfea7c94ac09033ffbd0323" translate="yes" xml:space="preserve">
          <source>Note, the beginning of the pattern (&lt;code&gt;r'^static/'&lt;/code&gt;) should be your &lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">请注意，模式的开头（ &lt;code&gt;r'^static/'&lt;/code&gt; ）应该是您的&lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="53e1a6480426cb88534e0d776b00fdf6ab609686" translate="yes" xml:space="preserve">
          <source>Note, the snippet assumes your &lt;a href=&quot;settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt; has a value of &lt;code&gt;'/media/'&lt;/code&gt;. This will call the &lt;a href=&quot;#django.views.static.serve&quot;&gt;&lt;code&gt;serve()&lt;/code&gt;&lt;/a&gt; view, passing in the path from the URLconf and the (required) &lt;code&gt;document_root&lt;/code&gt; parameter.</source>
          <target state="translated">请注意，该代码段假定您的&lt;a href=&quot;settings#std:setting-MEDIA_URL&quot;&gt; &lt;code&gt;MEDIA_URL&lt;/code&gt; &lt;/a&gt;的值为 &lt;code&gt;'/media/'&lt;/code&gt; 。这将调用&lt;a href=&quot;#django.views.static.serve&quot;&gt; &lt;code&gt;serve()&lt;/code&gt; &lt;/a&gt;视图，并传入URLconf和（必需的） &lt;code&gt;document_root&lt;/code&gt; 参数的路径。</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="9ef9ec7a9d7bf170473fb43f8eca38078f7b19b8" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;order_by('?')&lt;/code&gt; queries may be expensive and slow, depending on the database backend you&amp;rsquo;re using.</source>
          <target state="translated">注意： &lt;code&gt;order_by('?')&lt;/code&gt; 查询可能昂贵且缓慢，具体取决于您所使用的数据库后端。</target>
        </trans-unit>
        <trans-unit id="befec88db067d5cfe6f992fabb031cd376020ac6" translate="yes" xml:space="preserve">
          <source>Note: As with &lt;code&gt;get()&lt;/code&gt;, a &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.MultipleObjectsReturned&quot;&gt;&lt;code&gt;MultipleObjectsReturned&lt;/code&gt;&lt;/a&gt; exception will be raised if more than one object is found.</source>
          <target state="translated">注意：与 &lt;code&gt;get()&lt;/code&gt; 一样，如果找到多个对象，将引发&lt;a href=&quot;../../ref/exceptions#django.core.exceptions.MultipleObjectsReturned&quot;&gt; &lt;code&gt;MultipleObjectsReturned&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="910a845f2c2f78c037f270de3da706b062724005" translate="yes" xml:space="preserve">
          <source>Note: Don&amp;rsquo;t use this if all you want to do is determine if at least one result exists. It&amp;rsquo;s more efficient to use &lt;a href=&quot;#django.db.models.query.QuerySet.exists&quot;&gt;&lt;code&gt;exists()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注意：如果您要做的只是确定是否存在至少一个结果，请不要使用它。使用&lt;a href=&quot;#django.db.models.query.QuerySet.exists&quot;&gt; &lt;code&gt;exists()&lt;/code&gt; &lt;/a&gt;效率更高。</target>
        </trans-unit>
        <trans-unit id="385f626475e0107c6a0177ca3b63ffea00ce9f62" translate="yes" xml:space="preserve">
          <source>Note: If you only need to determine the number of records in the set (and don&amp;rsquo;t need the actual objects), it&amp;rsquo;s much more efficient to handle a count at the database level using SQL&amp;rsquo;s &lt;code&gt;SELECT COUNT(*)&lt;/code&gt;. Django provides a &lt;a href=&quot;#django.db.models.query.QuerySet.count&quot;&gt;&lt;code&gt;count()&lt;/code&gt;&lt;/a&gt; method for precisely this reason.</source>
          <target state="translated">注意：如果您只需要确定集合中的记录数（而不需要实际的对象），则使用SQL的 &lt;code&gt;SELECT COUNT(*)&lt;/code&gt; 在数据库级别处理计数将更加高效。正是出于这个原因，Django提供了&lt;a href=&quot;#django.db.models.query.QuerySet.count&quot;&gt; &lt;code&gt;count()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="e985be7c9234ac7fdd7d0605d286a7defa1cd034" translate="yes" xml:space="preserve">
          <source>Note: If you only want to determine if at least one result exists (and don&amp;rsquo;t need the actual objects), it&amp;rsquo;s more efficient to use &lt;a href=&quot;#django.db.models.query.QuerySet.exists&quot;&gt;&lt;code&gt;exists()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注意：如果只想确定是否存在至少一个结果（并且不需要实际的对象），则使用&lt;a href=&quot;#django.db.models.query.QuerySet.exists&quot;&gt; &lt;code&gt;exists()&lt;/code&gt; &lt;/a&gt;更有效。</target>
        </trans-unit>
        <trans-unit id="d230e76ec82af164b0c7d3b96c1e1a1415482dfc" translate="yes" xml:space="preserve">
          <source>Note: Without a really compelling reason, such as a host that doesn&amp;rsquo;t support them, you should stick to the cache backends included with Django. They&amp;rsquo;ve been well-tested and are well-documented.</source>
          <target state="translated">注意：如果没有真正令人信服的理由，例如不支持它们的主机，则应坚持使用Django随附的缓存后端。他们已经过充分的测试并且有据可查。</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="a8813e550b224d06483ad44dd0caab3e91810f54" translate="yes" xml:space="preserve">
          <source>Notes on field ordering</source>
          <target state="translated">外地订购说明</target>
        </trans-unit>
        <trans-unit id="03285d22efba2cd6d7db91dcbcfa20e93a3abcbd" translate="yes" xml:space="preserve">
          <source>Notes on specific fields</source>
          <target state="translated">关于具体领域的说明</target>
        </trans-unit>
        <trans-unit id="9c3befe7e22c8667bc957541f49b0ee79970b588" translate="yes" xml:space="preserve">
          <source>Notes:</source>
          <target state="translated">Notes:</target>
        </trans-unit>
        <trans-unit id="000e64e4b4ee3745e9af8db1a328fea32acd56cf" translate="yes" xml:space="preserve">
          <source>Notice also that as both sides are used multiple times in the query the params need to contain &lt;code&gt;lhs_params&lt;/code&gt; and &lt;code&gt;rhs_params&lt;/code&gt; multiple times.</source>
          <target state="translated">还要注意，由于查询中双方都多次使用，因此参数需要多次包含 &lt;code&gt;lhs_params&lt;/code&gt; 和 &lt;code&gt;rhs_params&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2384e08c0f35bbe96198a9eea0586bf6a621eb2b" translate="yes" xml:space="preserve">
          <source>Notice first that we&amp;rsquo;ve moved &lt;code&gt;make_published&lt;/code&gt; into a method and renamed the &lt;code&gt;modeladmin&lt;/code&gt; parameter to &lt;code&gt;self&lt;/code&gt;, and second that we&amp;rsquo;ve now put the string &lt;code&gt;'make_published'&lt;/code&gt; in &lt;code&gt;actions&lt;/code&gt; instead of a direct function reference. This tells the &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; to look up the action as a method.</source>
          <target state="translated">请注意，首先，我们已将 &lt;code&gt;make_published&lt;/code&gt; 移至方法中，并将 &lt;code&gt;modeladmin&lt;/code&gt; 参数重命名为 &lt;code&gt;self&lt;/code&gt; ，其次，我们现在已将字符串 &lt;code&gt;'make_published'&lt;/code&gt; 放入 &lt;code&gt;actions&lt;/code&gt; 而不是直接函数引用中。这告诉&lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;将操作作为方法进行查找。</target>
        </trans-unit>
        <trans-unit id="8b0cc5089c4b2a1219a366349dd5e31eab5291cc" translate="yes" xml:space="preserve">
          <source>Notice how the first block ends with &lt;code&gt;class=&quot;odd&quot;&lt;/code&gt; and the new one starts with &lt;code&gt;class=&quot;odd&quot;&lt;/code&gt;. Without the &lt;code&gt;{% resetcycle %}&lt;/code&gt; tag, the second block would start with &lt;code&gt;class=&quot;even&quot;&lt;/code&gt;.</source>
          <target state="translated">通知如何与第一块端 &lt;code&gt;class=&quot;odd&quot;&lt;/code&gt; 和用新的开始 &lt;code&gt;class=&quot;odd&quot;&lt;/code&gt; 。没有 &lt;code&gt;{% resetcycle %}&lt;/code&gt; 标签，第二个块将从 &lt;code&gt;class=&quot;even&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f70af69036a60f939ee11c7ec6dd9119fc16aaef" translate="yes" xml:space="preserve">
          <source>Notice how we need to explicitly render &lt;code&gt;{{ form.id }}&lt;/code&gt;. This ensures that the model formset, in the &lt;code&gt;POST&lt;/code&gt; case, will work correctly. (This example assumes a primary key named &lt;code&gt;id&lt;/code&gt;. If you&amp;rsquo;ve explicitly defined your own primary key that isn&amp;rsquo;t called &lt;code&gt;id&lt;/code&gt;, make sure it gets rendered.)</source>
          <target state="translated">注意，我们需要如何显式呈现 &lt;code&gt;{{ form.id }}&lt;/code&gt; 。这样可以确保在 &lt;code&gt;POST&lt;/code&gt; 情况下模型表单集可以正常工作。（此示例假定一个名为 &lt;code&gt;id&lt;/code&gt; 的主键。如果您已显式定义了自己的未称为 &lt;code&gt;id&lt;/code&gt; 的主键，请确保将其呈现。）</target>
        </trans-unit>
        <trans-unit id="0229f8c21d6b19db58706ac73ebaa3b227103d86" translate="yes" xml:space="preserve">
          <source>Notice how we pass &lt;code&gt;instance&lt;/code&gt; in both the &lt;code&gt;POST&lt;/code&gt; and &lt;code&gt;GET&lt;/code&gt; cases.</source>
          <target state="translated">注意在 &lt;code&gt;POST&lt;/code&gt; 和 &lt;code&gt;GET&lt;/code&gt; 情况下我们如何传递 &lt;code&gt;instance&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa5250b6be8df62e51f37c769420fd8720950beb" translate="yes" xml:space="preserve">
          <source>Notice how we set &lt;code&gt;self.object&lt;/code&gt; within &lt;code&gt;get()&lt;/code&gt; so we can use it again later in &lt;code&gt;get_context_data()&lt;/code&gt; and &lt;code&gt;get_queryset()&lt;/code&gt;. If you don&amp;rsquo;t set &lt;code&gt;template_name&lt;/code&gt;, the template will default to the normal &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; choice, which in this case would be &lt;code&gt;&quot;books/book_list.html&quot;&lt;/code&gt; because it&amp;rsquo;s a list of books; &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; knows nothing about &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt;, so it doesn&amp;rsquo;t have any clue this view is anything to do with a &lt;code&gt;Publisher&lt;/code&gt;.</source>
          <target state="translated">注意我们如何在 &lt;code&gt;get()&lt;/code&gt; 中设置 &lt;code&gt;self.object&lt;/code&gt; ，以便稍后可以在 &lt;code&gt;get_context_data()&lt;/code&gt; 和 &lt;code&gt;get_queryset()&lt;/code&gt; 中再次使用它。如果您未设置 &lt;code&gt;template_name&lt;/code&gt; ，则该模板将默认为普通的&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt;选项，在本例中为 &lt;code&gt;&quot;books/book_list.html&quot;&lt;/code&gt; 因为它是一本书的列表；&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt;对&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt; &lt;code&gt;SingleObjectMixin&lt;/code&gt; 一无所知&lt;/a&gt;，因此它没有任何线索，该视图与 &lt;code&gt;Publisher&lt;/code&gt; 有关。</target>
        </trans-unit>
        <trans-unit id="0f13f463d1411391b196b9c3d220258b3801b8b2" translate="yes" xml:space="preserve">
          <source>Notice how we set &lt;code&gt;self.object&lt;/code&gt; within &lt;code&gt;get()&lt;/code&gt; so we can use it again later in &lt;code&gt;get_context_data()&lt;/code&gt; and &lt;code&gt;get_queryset()&lt;/code&gt;. If you don&amp;rsquo;t set &lt;code&gt;template_name&lt;/code&gt;, the template will default to the normal &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; choice, which in this case would be &lt;code&gt;&quot;books/book_list.html&quot;&lt;/code&gt; because it&amp;rsquo;s a list of books; &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; knows nothing about &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt;, so it doesn&amp;rsquo;t have any clue this view is anything to do with a &lt;code&gt;Publisher&lt;/code&gt;.</source>
          <target state="translated">注意我们如何在 &lt;code&gt;get()&lt;/code&gt; 中设置 &lt;code&gt;self.object&lt;/code&gt; ，以便稍后可以在 &lt;code&gt;get_context_data()&lt;/code&gt; 和 &lt;code&gt;get_queryset()&lt;/code&gt; 中再次使用它。如果您未设置 &lt;code&gt;template_name&lt;/code&gt; ，则该模板将默认为普通的&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt;选项，在本例中为 &lt;code&gt;&quot;books/book_list.html&quot;&lt;/code&gt; 因为它是一本书的列表。&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt;对&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt; &lt;code&gt;SingleObjectMixin&lt;/code&gt; 一无所知&lt;/a&gt;，因此它没有任何线索，这个视图与 &lt;code&gt;Publisher&lt;/code&gt; 有关。</target>
        </trans-unit>
        <trans-unit id="f88f6f6b02e714ff2c4fe469bdc1f6fb93d22663" translate="yes" xml:space="preserve">
          <source>Notice how we used &lt;code&gt;self&lt;/code&gt; to scope the &lt;code&gt;CycleNode&lt;/code&gt; specific information within the &lt;code&gt;render_context&lt;/code&gt;. There may be multiple &lt;code&gt;CycleNodes&lt;/code&gt; in a given template, so we need to be careful not to clobber another node&amp;rsquo;s state information. The easiest way to do this is to always use &lt;code&gt;self&lt;/code&gt; as the key into &lt;code&gt;render_context&lt;/code&gt;. If you&amp;rsquo;re keeping track of several state variables, make &lt;code&gt;render_context[self]&lt;/code&gt; a dictionary.</source>
          <target state="translated">请注意，我们如何使用 &lt;code&gt;self&lt;/code&gt; 来对 &lt;code&gt;CycleNode&lt;/code&gt; 特定信息进行范围 &lt;code&gt;render_context&lt;/code&gt; 。一个给定的模板中可能有多个 &lt;code&gt;CycleNodes&lt;/code&gt; ，因此我们需要注意不要破坏另一个节点的状态信息。最简单的方法是始终使用 &lt;code&gt;self&lt;/code&gt; 作为 &lt;code&gt;render_context&lt;/code&gt; 的键。如果要跟踪几个状态变量，请使 &lt;code&gt;render_context[self]&lt;/code&gt; 成为字典。</target>
        </trans-unit>
        <trans-unit id="cb164517055d21810f3fcb5b55cae736b85fa840" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;(0, 0)&lt;/code&gt; is the first and last coordinate &amp;ndash; if they were not equal, an error would be raised.</source>
          <target state="translated">请注意， &lt;code&gt;(0, 0)&lt;/code&gt; 是第一个和最后一个坐标&amp;ndash;如果它们不相等，则会引发错误。</target>
        </trans-unit>
        <trans-unit id="ac06989a6888c756b6647843b41cc87a3733f5ba" translate="yes" xml:space="preserve">
          <source>Notice that along with a filtered &lt;code&gt;queryset&lt;/code&gt;, we&amp;rsquo;re also using a custom template name. If we didn&amp;rsquo;t, the generic view would use the same template as the &amp;ldquo;vanilla&amp;rdquo; object list, which might not be what we want.</source>
          <target state="translated">请注意，除了过滤后的 &lt;code&gt;queryset&lt;/code&gt; 之外，我们还使用了自定义模板名称。如果不这样做，则通用视图将使用与&amp;ldquo;普通&amp;rdquo;对象列表相同的模板，而这可能不是我们想要的。</target>
        </trans-unit>
        <trans-unit id="423d90eb39ba0efaae8b6fe6038d1df1eed0d32b" translate="yes" xml:space="preserve">
          <source>Notice that the custom patterns are included &lt;em&gt;before&lt;/em&gt; the regular admin URLs: the admin URL patterns are very permissive and will match nearly anything, so you&amp;rsquo;ll usually want to prepend your custom URLs to the built-in ones.</source>
          <target state="translated">请注意，自定义模式包含&lt;em&gt;在&lt;/em&gt;常规管理URL &lt;em&gt;之前&lt;/em&gt;：管理URL模式非常宽松，几乎可以匹配任何内容，因此您通常希望将自定义URL放在内置的URL之前。</target>
        </trans-unit>
        <trans-unit id="a287bfd08800792a69e7a9c13eeb25e0be2944c0" translate="yes" xml:space="preserve">
          <source>Notice that the function takes a &lt;code&gt;sender&lt;/code&gt; argument, along with wildcard keyword arguments (&lt;code&gt;**kwargs&lt;/code&gt;); all signal handlers must take these arguments.</source>
          <target state="translated">请注意，该函数带有一个 &lt;code&gt;sender&lt;/code&gt; 参数以及通配符关键字参数（ &lt;code&gt;**kwargs&lt;/code&gt; ）; 所有信号处理程序都必须采用这些参数。</target>
        </trans-unit>
        <trans-unit id="c6d96c5e92b1bc39c53248522c2579dd44ac99ae" translate="yes" xml:space="preserve">
          <source>Notice that there isn&amp;rsquo;t a lot in these examples that&amp;rsquo;s PDF-specific &amp;ndash; just the bits using &lt;code&gt;reportlab&lt;/code&gt;. You can use a similar technique to generate any arbitrary format that you can find a Python library for. Also see &lt;a href=&quot;outputting-csv&quot;&gt;Outputting CSV with Django&lt;/a&gt; for another example and some techniques you can use when generated text-based formats.</source>
          <target state="translated">请注意，这些示例中没有很多特定于PDF的内容-只是使用 &lt;code&gt;reportlab&lt;/code&gt; 的内容。您可以使用类似的技术来生成可以找到Python库的任意格式。另请参见另一个示例以及在生成基于文本的格式时可以使用的一些技术，以及&lt;a href=&quot;outputting-csv&quot;&gt;使用Django输出CSV&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="62566baa057cfcfdb2bc356cfe8e2afa1aa5d755" translate="yes" xml:space="preserve">
          <source>Notice that there isn&amp;rsquo;t very much specific to CSV here &amp;ndash; just the specific output format. You can use either of these techniques to output any text-based format you can dream of. You can also use a similar technique to generate arbitrary binary data; see &lt;a href=&quot;outputting-pdf&quot;&gt;Outputting PDFs with Django&lt;/a&gt; for an example.</source>
          <target state="translated">请注意，这里的CSV并不是很特定-只是特定的输出格式。您可以使用这些技术中的任何一种来输出您梦dream以求的任何基于文本的格式。您也可以使用类似的技术来生成任意二进制数据。有关示例，请参见&lt;a href=&quot;outputting-pdf&quot;&gt;使用Django输出PDF&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ec92f0273100502d01875ac12f88f482d518616e" translate="yes" xml:space="preserve">
          <source>Notice that we always return a &lt;code&gt;Hand&lt;/code&gt; instance from these methods. That&amp;rsquo;s the Python object type we want to store in the model&amp;rsquo;s attribute.</source>
          <target state="translated">注意，我们总是从这些方法返回 &lt;code&gt;Hand&lt;/code&gt; 实例。这就是我们要存储在模型属性中的Python对象类型。</target>
        </trans-unit>
        <trans-unit id="7cb962ccf88e6d68aadedd4642d88f1b96287c61" translate="yes" xml:space="preserve">
          <source>Notice that we have to pass &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt;&lt;code&gt;request.FILES&lt;/code&gt;&lt;/a&gt; into the form&amp;rsquo;s constructor; this is how file data gets bound into a form.</source>
          <target state="translated">注意，我们必须将&lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt; &lt;code&gt;request.FILES&lt;/code&gt; &lt;/a&gt;传递到表单的构造函数中。这就是将文件数据绑定为表格的方式。</target>
        </trans-unit>
        <trans-unit id="ebe9aa5966d9fd8238eb5df6b3f145913747b3be" translate="yes" xml:space="preserve">
          <source>Notice the wrapped view in the fifth line above:</source>
          <target state="translated">请注意上面第五行的包景。</target>
        </trans-unit>
        <trans-unit id="7d3a34e68924487518a00635e921200b1ac742b0" translate="yes" xml:space="preserve">
          <source>Now &amp;ldquo;Choices&amp;rdquo; is an available option in the Django admin. The &amp;ldquo;Add choice&amp;rdquo; form looks like this:</source>
          <target state="translated">现在，&amp;ldquo;选择&amp;rdquo;是Django管理员中的可用选项。&amp;ldquo;添加选择&amp;rdquo;表单如下所示：</target>
        </trans-unit>
        <trans-unit id="3506a6d9619d5b948e78683002fea85609bda448" translate="yes" xml:space="preserve">
          <source>Now Django knows to include the &lt;code&gt;polls&lt;/code&gt; app. Let&amp;rsquo;s run another command:</source>
          <target state="translated">现在，Django知道包括 &lt;code&gt;polls&lt;/code&gt; 应用程序了。让我们运行另一个命令：</target>
        </trans-unit>
        <trans-unit id="7f03ca20e19c12646270f4a55b9c68e694ccfc63" translate="yes" xml:space="preserve">
          <source>Now books can use that natural key to refer to &lt;code&gt;Person&lt;/code&gt; objects:</source>
          <target state="translated">现在，书籍可以使用该自然键来引用 &lt;code&gt;Person&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="f48eb4671182254c386d97a21fd740b58e671430" translate="yes" xml:space="preserve">
          <source>Now change your &lt;code&gt;polls/index.html&lt;/code&gt; template from:</source>
          <target state="translated">现在，从以下位置更改 &lt;code&gt;polls/index.html&lt;/code&gt; 模板：</target>
        </trans-unit>
        <trans-unit id="3c17a0825c6bc86f0b3d2cec1786b40f2a2a7adf" translate="yes" xml:space="preserve">
          <source>Now create a directory called &lt;code&gt;admin&lt;/code&gt; inside &lt;code&gt;templates&lt;/code&gt;, and copy the template &lt;code&gt;admin/base_site.html&lt;/code&gt; from within the default Django admin template directory in the source code of Django itself (&lt;code&gt;django/contrib/admin/templates&lt;/code&gt;) into that directory.</source>
          <target state="translated">现在，在 &lt;code&gt;templates&lt;/code&gt; 内部创建一个名为 &lt;code&gt;admin&lt;/code&gt; 的目录，然后将Django自身源代码（ &lt;code&gt;django/contrib/admin/templates&lt;/code&gt; ）中默认Django admin模板目录中的模板 &lt;code&gt;admin/base_site.html&lt;/code&gt; 复制到该目录中。</target>
        </trans-unit>
        <trans-unit id="ad66c95e391e146cd22fbf05a88db00e41ed0fca" translate="yes" xml:space="preserve">
          <source>Now create admin views for the &lt;code&gt;Person&lt;/code&gt; and &lt;code&gt;Group&lt;/code&gt; models:</source>
          <target state="translated">现在为 &lt;code&gt;Person&lt;/code&gt; 和 &lt;code&gt;Group&lt;/code&gt; 模型创建管理员视图：</target>
        </trans-unit>
        <trans-unit id="32171b8cd59d1de6923e5f771f767aa171c9ff0d" translate="yes" xml:space="preserve">
          <source>Now for our hands-on example.</source>
          <target state="translated">现在是我们的实战例子。</target>
        </trans-unit>
        <trans-unit id="729e7fc2aa726bb0bbccd67b261c45e009998ba6" translate="yes" xml:space="preserve">
          <source>Now in your time on the web you may have come across such beauties as &amp;ldquo;ME2/Sites/dirmod.asp?sid=&amp;amp;type=gen&amp;amp;mod=Core+Pages&amp;amp;gid=A6CD4967199A42D9B65B1B&amp;rdquo;. You will be pleased to know that Django allows us much more elegant &lt;em&gt;URL patterns&lt;/em&gt; than that.</source>
          <target state="translated">现在，您在网络上的时光可能遇到了诸如&amp;ldquo; ME2 / Sites / dirmod.asp？sid =＆type = gen＆mod = Core + Pages＆gid = A6CD4967199A42D9B65B1B&amp;rdquo;之类的美人。您会很高兴知道Django允许我们提供比这更优雅的&lt;em&gt;URL模式&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="4a92f218cc3e9875e924bf54caa6461c527dc629" translate="yes" xml:space="preserve">
          <source>Now in your time on the web you may have come across such beauties as &lt;code&gt;ME2/Sites/dirmod.htm?sid=&amp;amp;type=gen&amp;amp;mod=Core+Pages&amp;amp;gid=A6CD4967199A42D9B65B1B&lt;/code&gt;. You will be pleased to know that Django allows us much more elegant &lt;em&gt;URL patterns&lt;/em&gt; than that.</source>
          <target state="translated">现在，您在网络上的时光可能遇到过诸如 &lt;code&gt;ME2/Sites/dirmod.htm?sid=&amp;amp;type=gen&amp;amp;mod=Core+Pages&amp;amp;gid=A6CD4967199A42D9B65B1B&lt;/code&gt; 。您会很高兴知道Django允许我们提供比这更优雅的&lt;em&gt;URL模式&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="d7ae0cff622895ccfc58ecd68188d07d6dbf3c75" translate="yes" xml:space="preserve">
          <source>Now is a good time to check your backup strategy for these files.</source>
          <target state="translated">现在是检查你对这些文件的备份策略的好时机。</target>
        </trans-unit>
        <trans-unit id="36e9dc72ab05bd8c0ba6109d8103272522c57402" translate="yes" xml:space="preserve">
          <source>Now it&amp;rsquo;s time to go through all the changes made in our patch. To stage all the changes ready for commit, run:</source>
          <target state="translated">现在是时候检查补丁中所做的所有更改了。要暂存所有更改以准备提交，请运行：</target>
        </trans-unit>
        <trans-unit id="f163c45d21c3827f27074167e2374cf71f319599" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s add a few more views to &lt;code&gt;polls/views.py&lt;/code&gt;. These views are slightly different, because they take an argument:</source>
          <target state="translated">现在让我们向 &lt;code&gt;polls/views.py&lt;/code&gt; 添加更多视图。这些视图略有不同，因为它们采用了一个参数：</target>
        </trans-unit>
        <trans-unit id="f9a6d41951be6209dd204da14498c508cbc2918a" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s take a closer look at the &lt;code&gt;model&lt;/code&gt; argument we&amp;rsquo;ve been using all along. The &lt;code&gt;model&lt;/code&gt; argument, which specifies the database model that the view will operate upon, is available on all the generic views that operate on a single object or a collection of objects. However, the &lt;code&gt;model&lt;/code&gt; argument is not the only way to specify the objects that the view will operate upon &amp;ndash; you can also specify the list of objects using the &lt;code&gt;queryset&lt;/code&gt; argument:</source>
          <target state="translated">现在，让我们仔细看看我们一直使用的 &lt;code&gt;model&lt;/code&gt; 参数。该 &lt;code&gt;model&lt;/code&gt; 参数，该参数指定数据库模型，视图将在运行，适用于所有单个对象或对象的集合上运行的通用视图。但是， &lt;code&gt;model&lt;/code&gt; 参数不是指定视图将操作的对象的唯一方法&amp;ndash;您还可以使用 &lt;code&gt;queryset&lt;/code&gt; 参数指定对象列表：</target>
        </trans-unit>
        <trans-unit id="04c4dc8474d5993bb9a263be8a4f51e3572a25c0" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s update our &lt;code&gt;index&lt;/code&gt; view in &lt;code&gt;polls/views.py&lt;/code&gt; to use the template:</source>
          <target state="translated">现在，让我们在 &lt;code&gt;polls/views.py&lt;/code&gt; 中更新 &lt;code&gt;index&lt;/code&gt; 视图以使用模板：</target>
        </trans-unit>
        <trans-unit id="f7acf85e2f16d675683380e16460476b2319c859" translate="yes" xml:space="preserve">
          <source>Now normal &lt;code&gt;Person&lt;/code&gt; queries will be unordered and &lt;code&gt;OrderedPerson&lt;/code&gt; queries will be ordered by &lt;code&gt;last_name&lt;/code&gt;.</source>
          <target state="translated">现在普通的 &lt;code&gt;Person&lt;/code&gt; 查询将是无序的，而 &lt;code&gt;OrderedPerson&lt;/code&gt; 查询将由 &lt;code&gt;last_name&lt;/code&gt; 进行排序。</target>
        </trans-unit>
        <trans-unit id="52926bd958ab5c5a3c94125229eeb6b79ce9a920" translate="yes" xml:space="preserve">
          <source>Now sit back and relax. Django&amp;rsquo;s entire test suite has thousands of tests, and it takes at least a few minutes run, depending on the speed of your computer.</source>
          <target state="translated">现在坐下来放松。Django的整个测试套件具有数千个测试，并且至少要花几分钟的时间运行，具体取决于计算机的速度。</target>
        </trans-unit>
        <trans-unit id="7662abc4461a188dc00d3f866b2b22d621b6328a" translate="yes" xml:space="preserve">
          <source>Now sit back and relax. Django&amp;rsquo;s entire test suite has thousands of tests, and it takes at least a few minutes to run, depending on the speed of your computer.</source>
          <target state="translated">现在坐下来放松。Django的整个测试套件具有成千上万的测试，并且运行至少需要几分钟，具体取决于计算机的速度。</target>
        </trans-unit>
        <trans-unit id="1207f077c878e60c8e36479acd1b3e82b4924ee9" translate="yes" xml:space="preserve">
          <source>Now that the Question admin page is looking good, let&amp;rsquo;s make some tweaks to the &amp;ldquo;change list&amp;rdquo; page &amp;ndash; the one that displays all the questions in the system.</source>
          <target state="translated">现在问题管理页面看起来不错，让我们对&amp;ldquo;更改列表&amp;rdquo;页面进行一些调整，该页面显示了系统中的所有问题。</target>
        </trans-unit>
        <trans-unit id="9c4af4d9ba28bde34b6930edb4ff370956fb3d37" translate="yes" xml:space="preserve">
          <source>Now that the server&amp;rsquo;s running, visit &lt;a href=&quot;http://127.0.0.1:8000/&quot;&gt;http://127.0.0.1:8000/&lt;/a&gt; with your Web browser. You&amp;rsquo;ll see a &amp;ldquo;Congratulations!&amp;rdquo; page, with a rocket taking off. It worked!</source>
          <target state="translated">现在服务器已运行，请使用Web浏览器访问&lt;a href=&quot;http://127.0.0.1:8000/&quot;&gt;http://127.0.0.1:8000/&lt;/a&gt;。您会看到&amp;ldquo;恭喜！&amp;rdquo; 页，火箭起飞。有效！</target>
        </trans-unit>
        <trans-unit id="75e57caa4343eb4793c179b4fc0c146dbae59a0e" translate="yes" xml:space="preserve">
          <source>Now that we&amp;rsquo;ve packaged and tested &lt;code&gt;django-polls&lt;/code&gt;, it&amp;rsquo;s ready to share with the world! If this wasn&amp;rsquo;t just an example, you could now:</source>
          <target state="translated">既然我们已经打包并测试了 &lt;code&gt;django-polls&lt;/code&gt; ，就可以与世界分享了！如果这不仅仅是一个例子，您现在可以：</target>
        </trans-unit>
        <trans-unit id="bf406cea330fa6d9142db8c49a22df6724bea522" translate="yes" xml:space="preserve">
          <source>Now that we&amp;rsquo;ve registered &lt;code&gt;Question&lt;/code&gt;, Django knows that it should be displayed on the admin index page:</source>
          <target state="translated">现在我们已经注册了 &lt;code&gt;Question&lt;/code&gt; ，Django知道它应该显示在admin索引页面上：</target>
        </trans-unit>
        <trans-unit id="75cde598167c7f2589d0c60c6738de9584b976d6" translate="yes" xml:space="preserve">
          <source>Now that you have a local copy of Django, you can install it just like you would install any package using &lt;code&gt;pip&lt;/code&gt;. The most convenient way to do so is by using a &lt;em&gt;virtual environment&lt;/em&gt;, which is a feature built into Python that allows you to keep a separate directory of installed packages for each of your projects so that they don&amp;rsquo;t interfere with each other.</source>
          <target state="translated">现在您有了Django的本地副本，就可以安装它，就像使用 &lt;code&gt;pip&lt;/code&gt; 安装任何软件包一样。最方便的方法是使用&lt;em&gt;虚拟环境&lt;/em&gt;，这是Python内置的功能，可让您为每个项目保留单独的已安装软件包目录，以免彼此干扰。</target>
        </trans-unit>
        <trans-unit id="64bad9fc6f101dcdbda55bfa6724529b3cc5e83a" translate="yes" xml:space="preserve">
          <source>Now that you have set up your &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; to use your intermediary model (&lt;code&gt;Membership&lt;/code&gt;, in this case), you&amp;rsquo;re ready to start creating some many-to-many relationships. You do this by creating instances of the intermediate model:</source>
          <target state="translated">既然您已经设置了&lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;来使用中介模型（在本例中为 &lt;code&gt;Membership&lt;/code&gt; ），就可以开始创建一些多对多关系了。您可以通过创建中间模型的实例来做到这一点：</target>
        </trans-unit>
        <trans-unit id="2529a6500c0e15e2c4abe6d28f26cc62054cc372" translate="yes" xml:space="preserve">
          <source>Now that you&amp;rsquo;ve examined your dataset using &lt;code&gt;ogrinfo&lt;/code&gt;, create a GeoDjango model to represent this data:</source>
          <target state="translated">现在，您已经使用 &lt;code&gt;ogrinfo&lt;/code&gt; 检查了数据集，创建一个GeoDjango模型来表示此数据：</target>
        </trans-unit>
        <trans-unit id="dc2389b5f334729c58b759c145bcf664705ad347" translate="yes" xml:space="preserve">
          <source>Now that you&amp;rsquo;ve seen how to define geographic models and import data with the &lt;a href=&quot;layermapping&quot;&gt;LayerMapping data import utility&lt;/a&gt;, it&amp;rsquo;s possible to further automate this process with use of the &lt;a href=&quot;commands#django-admin-ogrinspect&quot;&gt;&lt;code&gt;ogrinspect&lt;/code&gt;&lt;/a&gt; management command. The &lt;a href=&quot;commands#django-admin-ogrinspect&quot;&gt;&lt;code&gt;ogrinspect&lt;/code&gt;&lt;/a&gt; command introspects a GDAL-supported vector data source (e.g., a shapefile) and generates a model definition and &lt;code&gt;LayerMapping&lt;/code&gt; dictionary automatically.</source>
          <target state="translated">既然您已经了解了如何使用&lt;a href=&quot;layermapping&quot;&gt;LayerMapping数据导入实用程序&lt;/a&gt;来定义地理模型和导入数据，则可以使用&lt;a href=&quot;commands#django-admin-ogrinspect&quot;&gt; &lt;code&gt;ogrinspect&lt;/code&gt; &lt;/a&gt;管理命令进一步自动化此过程。所述&lt;a href=&quot;commands#django-admin-ogrinspect&quot;&gt; &lt;code&gt;ogrinspect&lt;/code&gt; &lt;/a&gt;命令自省某个GDAL支持的矢量数据源（例如，shape文件），并生成一个模型定义和 &lt;code&gt;LayerMapping&lt;/code&gt; 自动字典。</target>
        </trans-unit>
        <trans-unit id="6376b1ae238a5fa6f312c93f3d2f4898fe8c1b17" translate="yes" xml:space="preserve">
          <source>Now that your environment &amp;ndash; a &amp;ldquo;project&amp;rdquo; &amp;ndash; is set up, you&amp;rsquo;re set to start doing work.</source>
          <target state="translated">现在，您的环境（一个&amp;ldquo;项目&amp;rdquo;）已设置好，您就可以开始工作了。</target>
        </trans-unit>
        <trans-unit id="fae278f6e2f60b163eed4caa52b0d02177fea03c" translate="yes" xml:space="preserve">
          <source>Now the question change list page looks like this:</source>
          <target state="translated">现在问题修改列表页面是这样的。</target>
        </trans-unit>
        <trans-unit id="eb90dc277d26d2a028d83b7c97946650cba77833" translate="yes" xml:space="preserve">
          <source>Now we &lt;em&gt;might&lt;/em&gt; be able to get away with putting our static files directly in &lt;code&gt;my_app/static/&lt;/code&gt; (rather than creating another &lt;code&gt;my_app&lt;/code&gt; subdirectory), but it would actually be a bad idea. Django will use the first static file it finds whose name matches, and if you had a static file with the same name in a &lt;em&gt;different&lt;/em&gt; application, Django would be unable to distinguish between them. We need to be able to point Django at the right one, and the best way to ensure this is by &lt;em&gt;namespacing&lt;/em&gt; them. That is, by putting those static files inside &lt;em&gt;another&lt;/em&gt; directory named for the application itself.</source>
          <target state="translated">现在，我们&lt;em&gt;也许&lt;/em&gt;可以将静态文件直接 &lt;code&gt;my_app/static/&lt;/code&gt; 在my_app / static /中（而不是创建另一个 &lt;code&gt;my_app&lt;/code&gt; 子目录），但这实际上不是一个好主意。 Django将使用找到的第一个名称与之匹配的静态文件，如果在&lt;em&gt;其他&lt;/em&gt;应用程序中具有相同名称的静态文件，则Django将无法区分它们。我们需要能够将Django指向正确的位置，而确保这一点的最佳方法是对它们进行&lt;em&gt;命名&lt;/em&gt;。也就是说，通过将这些静态文件放在应用程序本身命名的&lt;em&gt;另一个&lt;/em&gt;目录中。</target>
        </trans-unit>
        <trans-unit id="01d175c1e637f3cee5ceb291fdf4c9adfc0dc821" translate="yes" xml:space="preserve">
          <source>Now we &lt;em&gt;might&lt;/em&gt; be able to get away with putting our templates directly in &lt;code&gt;polls/templates&lt;/code&gt; (rather than creating another &lt;code&gt;polls&lt;/code&gt; subdirectory), but it would actually be a bad idea. Django will choose the first template it finds whose name matches, and if you had a template with the same name in a &lt;em&gt;different&lt;/em&gt; application, Django would be unable to distinguish between them. We need to be able to point Django at the right one, and the best way to ensure this is by &lt;em&gt;namespacing&lt;/em&gt; them. That is, by putting those templates inside &lt;em&gt;another&lt;/em&gt; directory named for the application itself.</source>
          <target state="translated">现在，我们&lt;em&gt;也许&lt;/em&gt;可以将模板直接放在 &lt;code&gt;polls/templates&lt;/code&gt; 中（而不是创建另一个 &lt;code&gt;polls&lt;/code&gt; 子目录），但这实际上是一个坏主意。Django将选择找到的第一个名称匹配的模板，如果在&lt;em&gt;不同的&lt;/em&gt;应用程序中有一个具有相同名称的模板，则Django将无法区分它们。我们需要能够将Django指向正确的位置，而确保这一点的最佳方法是对它们进行&lt;em&gt;命名&lt;/em&gt;。也就是说，将这些模板放在应用程序本身命名的&lt;em&gt;另一个&lt;/em&gt;目录中。</target>
        </trans-unit>
        <trans-unit id="7c4f42edd57918625d34396bf4a71a96fb72f5a7" translate="yes" xml:space="preserve">
          <source>Now we are ready to run the test suite. If you&amp;rsquo;re using GNU/Linux, macOS, or some other flavor of Unix, run:</source>
          <target state="translated">现在，我们准备运行测试套件。如果您使用的是GNU / Linux，macOS或其他类型的Unix，请运行：</target>
        </trans-unit>
        <trans-unit id="e47a8ac15a5ebf5edb5feb22215c8cd06eb6fb07" translate="yes" xml:space="preserve">
          <source>Now we can write a new &lt;code&gt;PublisherDetail&lt;/code&gt;:</source>
          <target state="translated">现在我们可以编写一个新的 &lt;code&gt;PublisherDetail&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7c66e87b3835c409da2dcefebcb4caed4fb353a1" translate="yes" xml:space="preserve">
          <source>Now we define our corresponding Django model (make sure to use &lt;a href=&quot;../../django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">现在，我们定义相应的Django模型（确保使用&lt;a href=&quot;../../django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="7ae1e4292d6b8aae98119242843cc18f427ab83b" translate="yes" xml:space="preserve">
          <source>Now we have a different problem - the longer name of &amp;ldquo;Helena Bonham Carter&amp;rdquo; doesn&amp;rsquo;t show up as it is much longer. Trigram searches consider all combinations of three letters, and compares how many appear in both search and source strings. For the longer name, there are more combinations that don&amp;rsquo;t appear in the source string, so it is no longer considered a close match.</source>
          <target state="translated">现在，我们遇到了另一个问题-&amp;ldquo; Helena Bonham Carter&amp;rdquo;的较长名称不再显示，因为它的长度更长。Trigram搜索考虑三个字母的所有组合，并比较搜索字符串和源字符串中出现的数量。对于较长的名称，有更多的组合不会出现在源字符串中，因此不再视为紧密匹配。</target>
        </trans-unit>
        <trans-unit id="4c5602413593d1c5528e6e57dcbd46503a8f2804" translate="yes" xml:space="preserve">
          <source>Now we have a different problem - the longer name of &amp;ldquo;Helena Bonham Carter&amp;rdquo; doesn&amp;rsquo;t show up as it is much longer. Trigram searches consider all combinations of three letters, and compares how many appear in both search and source strings. For the longer name, there are more combinations which appear in the source string so it is no longer considered a close match.</source>
          <target state="translated">现在，我们遇到了另一个问题-&amp;ldquo; Helena Bonham Carter&amp;rdquo;的较长名称不再显示，因为它的长度更长。Trigram搜索考虑三个字母的所有组合，并比较搜索字符串和源字符串中出现的数量。对于较长的名称，源字符串中会出现更多的组合，因此不再将其视为紧密匹配。</target>
        </trans-unit>
        <trans-unit id="2d795b337a92c0a5e31febc9c4041e82a9227dbc" translate="yes" xml:space="preserve">
          <source>Now we implement the pre-processing and validation. Since we do not have any of our own validation at this point, we delegate to the nested expressions:</source>
          <target state="translated">现在我们实现预处理和验证。由于此时我们没有任何自己的验证,所以我们委托给嵌套的表达式。</target>
        </trans-unit>
        <trans-unit id="c37a1e6f4b5daec07056100cf46833458caf834e" translate="yes" xml:space="preserve">
          <source>Now we need to define a view:</source>
          <target state="translated">现在我们需要定义一个视图。</target>
        </trans-unit>
        <trans-unit id="8cfc15775270a0cf7074a75118fb26261619cc6f" translate="yes" xml:space="preserve">
          <source>Now we need to make sure that the test we wrote earlier passes, so we can see whether the code we added is working correctly. Again, navigate to the Django &lt;code&gt;tests/&lt;/code&gt; directory and run:</source>
          <target state="translated">现在，我们需要确保之前编写的测试通过了，以便我们可以查看添加的代码是否正常运行。再次，导航到Django &lt;code&gt;tests/&lt;/code&gt; 目录并运行：</target>
        </trans-unit>
        <trans-unit id="bcac3a04746aabf930cb5a747d4e5bc7fbac7974" translate="yes" xml:space="preserve">
          <source>Now we&amp;rsquo;ll define your models &amp;ndash; essentially, your database layout, with additional metadata.</source>
          <target state="translated">现在，我们将定义您的模型-本质上是您的数据库布局以及其他元数据。</target>
        </trans-unit>
        <trans-unit id="fe5908be768f13a2be925c73b002c0119eef5f3a" translate="yes" xml:space="preserve">
          <source>Now we&amp;rsquo;ll need to handle routing. First we want a router that knows to send queries for the &lt;code&gt;auth&lt;/code&gt; and &lt;code&gt;contenttypes&lt;/code&gt; apps to &lt;code&gt;auth_db&lt;/code&gt; (&lt;code&gt;auth&lt;/code&gt; models are linked to &lt;code&gt;ContentType&lt;/code&gt;, so they must be stored in the same database):</source>
          <target state="translated">现在，我们需要处理路由。首先，我们需要一个知道将 &lt;code&gt;auth&lt;/code&gt; 和 &lt;code&gt;contenttypes&lt;/code&gt; 应用程序查询发送到 &lt;code&gt;auth_db&lt;/code&gt; 的路由器（ &lt;code&gt;auth&lt;/code&gt; 模型链接到 &lt;code&gt;ContentType&lt;/code&gt; ，因此它们必须存储在同一数据库中）：</target>
        </trans-unit>
        <trans-unit id="d5c11520a098768a6c24489507829a2b07907224" translate="yes" xml:space="preserve">
          <source>Now we&amp;rsquo;ve seen how Django&amp;rsquo;s generic class-based views use the provided mixins, let&amp;rsquo;s look at other ways we can combine them. Of course we&amp;rsquo;re still going to be combining them with either built-in class-based views, or other generic class-based views, but there are a range of rarer problems you can solve than are provided for by Django out of the box.</source>
          <target state="translated">现在，我们已经了解了Django的基于通用类的视图如何使用所提供的mixins，让我们看一下将它们组合在一起的其他方法。当然，我们仍将它们与内置的基于类的视图或其他通用的基于类的视图结合起来，但是您可以解决许多比Django开箱即用的罕见问题。</target>
        </trans-unit>
        <trans-unit id="d0d9f0575c1c236d5af487efdbf517700e1f99af" translate="yes" xml:space="preserve">
          <source>Now we&amp;rsquo;ve seen how Django&amp;rsquo;s generic class-based views use the provided mixins, let&amp;rsquo;s look at other ways we can combine them. We&amp;rsquo;re still going to be combining them with either built-in class-based views, or other generic class-based views, but there are a range of rarer problems you can solve than are provided for by Django out of the box.</source>
          <target state="translated">现在，我们已经了解了Django的基于通用类的视图如何使用提供的mixins，让我们看一下将它们组合在一起的其他方法。我们仍将它们与内置的基于类的视图或其他通用的基于类的视图相结合，但是您可以解决许多比Django开箱即用的罕见问题。</target>
        </trans-unit>
        <trans-unit id="2b516478da3cbf3e609d2d9aa54d602ac37ba736" translate="yes" xml:space="preserve">
          <source>Now you can access the country in a template with &lt;code&gt;{{ form.coordinates.country }}&lt;/code&gt;.</source>
          <target state="translated">现在，您可以使用 &lt;code&gt;{{ form.coordinates.country }}&lt;/code&gt; 在模板中访问国家/地区。</target>
        </trans-unit>
        <trans-unit id="d475869dbc3deb53f1f216a136b9eba20db60766" translate="yes" xml:space="preserve">
          <source>Now you can apply the migrations as usual with the &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">现在，您可以像以前一样使用migration 命令应用&lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="72ac8fc1339f4d03f079fb6f9c9f0e194b347a82" translate="yes" xml:space="preserve">
          <source>Now you can put those skills to good use by helping to improve Django&amp;rsquo;s codebase.</source>
          <target state="translated">现在，您可以通过帮助改善Django的代码库来充分利用这些技能。</target>
        </trans-unit>
        <trans-unit id="23f1e33e76b69dcdf87c9a1fb7103093a05beea6" translate="yes" xml:space="preserve">
          <source>Now you can satisfy yourself that this behaves as expected by firing up &lt;code&gt;runserver&lt;/code&gt;, loading the site in your browser, creating &lt;code&gt;Questions&lt;/code&gt; with dates in the past and future, and checking that only those that have been published are listed. You don&amp;rsquo;t want to have to do that &lt;em&gt;every single time you make any change that might affect this&lt;/em&gt; - so let&amp;rsquo;s also create a test, based on our &lt;a href=&quot;../ref/django-admin#django-admin-shell&quot;&gt;&lt;code&gt;shell&lt;/code&gt;&lt;/a&gt; session above.</source>
          <target state="translated">现在，您可以通过启动 &lt;code&gt;runserver&lt;/code&gt; ，在浏览器中加载网站，创建带有过去和将来日期的 &lt;code&gt;Questions&lt;/code&gt; 并检查仅列出已发布的问题来使自己满意。您不需要&lt;em&gt;每次都进行可能影响此更改的更改，&lt;/em&gt;因此，我们还要根据上面的&lt;a href=&quot;../ref/django-admin#django-admin-shell&quot;&gt; &lt;code&gt;shell&lt;/code&gt; &lt;/a&gt;会话创建一个测试。</target>
        </trans-unit>
        <trans-unit id="0dd4f0d714b7b440236676490d5cd5cc97710517" translate="yes" xml:space="preserve">
          <source>Now you can use any of the documented attributes and methods of the &lt;a href=&quot;../ref/files/file#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">现在，您可以使用&lt;a href=&quot;../ref/files/file#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;类中记录的任何属性和方法。</target>
        </trans-unit>
        <trans-unit id="7ab3a4c732a570e45e72d8279159c31dd602e88c" translate="yes" xml:space="preserve">
          <source>Now you&amp;rsquo;ll also need a view corresponding to that &lt;code&gt;/your-name/&lt;/code&gt; URL which will find the appropriate key/value pairs in the request, and then process them.</source>
          <target state="translated">现在，您还需要一个与 &lt;code&gt;/your-name/&lt;/code&gt; URL 对应的视图，该视图将在请求中找到适当的键/值对，然后对其进行处理。</target>
        </trans-unit>
        <trans-unit id="773ae0c9b55a06a6212d086ca1c9132147c8e3bc" translate="yes" xml:space="preserve">
          <source>Now your admin site is set up to edit &lt;code&gt;Membership&lt;/code&gt; objects inline from either the &lt;code&gt;Person&lt;/code&gt; or the &lt;code&gt;Group&lt;/code&gt; detail pages.</source>
          <target state="translated">现在，您的管理站点已设置为从&amp;ldquo; &lt;code&gt;Person&lt;/code&gt; 或&amp;ldquo; &lt;code&gt;Group&lt;/code&gt; 详细信息页面内联编辑&amp;ldquo; &lt;code&gt;Membership&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="1d7161c477ce1fa34e1cd8a8fcedd1a97cd45391" translate="yes" xml:space="preserve">
          <source>Now your tag should begin to look like this:</source>
          <target state="translated">现在你的标签应该开始像这样。</target>
        </trans-unit>
        <trans-unit id="3ca505f89a58836d8d8355a91fcfdcb88a64397d" translate="yes" xml:space="preserve">
          <source>Now&amp;rsquo;s a good time to note: &lt;strong&gt;don&amp;rsquo;t&lt;/strong&gt; use this server in anything resembling a production environment. It&amp;rsquo;s intended only for use while developing. (We&amp;rsquo;re in the business of making Web frameworks, not Web servers.)</source>
          <target state="translated">现在是要注意的好时机：&lt;strong&gt;请勿&lt;/strong&gt;在类似于生产环境的任何环境中使用该服务器。仅在开发时使用。（我们的业务是制作Web框架，而不是Web服务器。）</target>
        </trans-unit>
        <trans-unit id="8d15bcc0a82dc2d5aaadb1122619ae9298528376" translate="yes" xml:space="preserve">
          <source>Now&amp;rsquo;s also a good time to note that change lists give you free pagination. The default is to display 100 items per page. &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_per_page&quot;&gt;&lt;code&gt;Change list pagination&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.search_fields&quot;&gt;&lt;code&gt;search boxes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_filter&quot;&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.date_hierarchy&quot;&gt;&lt;code&gt;date-hierarchies&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_display&quot;&gt;&lt;code&gt;column-header-ordering&lt;/code&gt;&lt;/a&gt; all work together like you think they should.</source>
          <target state="translated">现在也是注意更改列表为您提供免费分页的好时机。默认设置是每页显示100个项目。&lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_per_page&quot;&gt; &lt;code&gt;Change list pagination&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.search_fields&quot;&gt; &lt;code&gt;search boxes&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_filter&quot;&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.date_hierarchy&quot;&gt; &lt;code&gt;date-hierarchies&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_display&quot;&gt; &lt;code&gt;column-header-ordering&lt;/code&gt; &lt;/a&gt;都可以像您认为的那样一起工作。</target>
        </trans-unit>
        <trans-unit id="99ce113dbab28c6966339979cd1800d1c3a5e9a6" translate="yes" xml:space="preserve">
          <source>Now, all you need to do is create a new function and have &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt; use it. &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt; expects a callable as its argument which takes two arguments - the first is an &lt;a href=&quot;../ref/applications&quot;&gt;app registry&lt;/a&gt; that has the historical versions of all your models loaded into it to match where in your history the migration sits, and the second is a &lt;a href=&quot;../ref/schema-editor&quot;&gt;SchemaEditor&lt;/a&gt;, which you can use to manually effect database schema changes (but beware, doing this can confuse the migration autodetector!)</source>
          <target state="translated">现在，您需要做的就是创建一个新函数并让&lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt;使用它。&lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt;期望有一个callable作为其参数，该参数带有两个参数-第一个是&lt;a href=&quot;../ref/applications&quot;&gt;应用程序注册表&lt;/a&gt;，其中加载了所有模型的历史版本，以匹配历史记录中迁移的位置，第二个是&lt;a href=&quot;../ref/schema-editor&quot;&gt;SchemaEditor&lt;/a&gt;，您可以用于手动影响数据库架构更改（但请注意，这样做可能会使迁移自动检测器感到困惑！）</target>
        </trans-unit>
        <trans-unit id="e26eeede8de5f6aef6477290252659725320f583" translate="yes" xml:space="preserve">
          <source>Now, create a &lt;code&gt;polls/results.html&lt;/code&gt; template:</source>
          <target state="translated">现在，创建一个 &lt;code&gt;polls/results.html&lt;/code&gt; 模板：</target>
        </trans-unit>
        <trans-unit id="9b9600adacf65499e24be89755a51a93c7893117" translate="yes" xml:space="preserve">
          <source>Now, create and register the inclusion tag by calling the &lt;code&gt;inclusion_tag()&lt;/code&gt; method on a &lt;code&gt;Library&lt;/code&gt; object. Following our example, if the above template is in a file called &lt;code&gt;results.html&lt;/code&gt; in a directory that&amp;rsquo;s searched by the template loader, we&amp;rsquo;d register the tag like this:</source>
          <target state="translated">现在，通过调用 &lt;code&gt;Library&lt;/code&gt; 对象上的 &lt;code&gt;inclusion_tag()&lt;/code&gt; 方法来创建并注册包含标签。按照我们的示例，如果上面的模板在模板加载器搜索的目录中的 &lt;code&gt;results.html&lt;/code&gt; 文件中，我们将像这样注册标记：</target>
        </trans-unit>
        <trans-unit id="61df64fac0bdb450dcab9337d6fdd355672882b3" translate="yes" xml:space="preserve">
          <source>Now, define a point of interest &lt;a href=&quot;#id13&quot; id=&quot;id7&quot;&gt;[3]&lt;/a&gt;:</source>
          <target state="translated">现在，定义一个兴趣点&lt;a href=&quot;#id13&quot; id=&quot;id7&quot;&gt;[3]&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="c9f3f21fc4e880937be50b7fcf36ca081326148a" translate="yes" xml:space="preserve">
          <source>Now, go to &lt;code&gt;/polls/1/&lt;/code&gt; in your browser and vote in the question. You should see a results page that gets updated each time you vote. If you submit the form without having chosen a choice, you should see the error message.</source>
          <target state="translated">现在，在浏览器中转到 &lt;code&gt;/polls/1/&lt;/code&gt; 并对该问题进行投票。您应该看到一个结果页面，该页面在您每次投票时都会更新。如果您没有选择就提交表单，则应该看到错误消息。</target>
        </trans-unit>
        <trans-unit id="a1efea4230fe635c172ad6eeb75a83bbd75fc583" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s create a Django view that handles the submitted data and does something with it. Remember, in &lt;a href=&quot;tutorial03&quot;&gt;Tutorial 3&lt;/a&gt;, we created a URLconf for the polls application that includes this line:</source>
          <target state="translated">现在，让我们创建一个Django视图，该视图可以处理提交的数据并对其进行处理。记住，在&lt;a href=&quot;tutorial03&quot;&gt;教程3中&lt;/a&gt;，我们为民意调查应用程序创建了一个URLconf，其中包括以下行：</target>
        </trans-unit>
        <trans-unit id="38f59dfc7640b31e36394dc7c9a2f46f24eb17ba" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s hop into the interactive Python shell and play around with the free API Django gives you. To invoke the Python shell, use this command:</source>
          <target state="translated">现在，让我们跳入交互式Python外壳并使用Django给您的免费API。要调用Python Shell，请使用以下命令：</target>
        </trans-unit>
        <trans-unit id="7cbef95cf75c7a3f4b4837de306a008dbc014431" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s tackle the question detail view &amp;ndash; the page that displays the question text for a given poll. Here&amp;rsquo;s the view:</source>
          <target state="translated">现在，让我们解决问题详细信息视图&amp;ndash;显示给定民意测验的问题文本的页面。这是视图：</target>
        </trans-unit>
        <trans-unit id="b460cbb07f78017c0c6f37a652de30bf9aafdb00" translate="yes" xml:space="preserve">
          <source>Now, open a Web browser and go to &amp;ldquo;/admin/&amp;rdquo; on your local domain &amp;ndash; e.g., &lt;a href=&quot;http://127.0.0.1:8000/admin/&quot;&gt;http://127.0.0.1:8000/admin/&lt;/a&gt;. You should see the admin&amp;rsquo;s login screen:</source>
          <target state="translated">现在，打开Web浏览器，然后转到本地域上的&amp;ldquo; / admin /&amp;rdquo;，例如&lt;a href=&quot;http://127.0.0.1:8000/admin/&quot;&gt;http://127.0.0.1:8000/admin/&lt;/a&gt;。您应该看到管理员的登录屏幕：</target>
        </trans-unit>
        <trans-unit id="2b81dff36c6dd0997b6aebdd48e22ac831af4eec" translate="yes" xml:space="preserve">
          <source>Now, open the world borders shapefile using GeoDjango&amp;rsquo;s &lt;a href=&quot;gdal#django.contrib.gis.gdal.DataSource&quot;&gt;&lt;code&gt;DataSource&lt;/code&gt;&lt;/a&gt; interface:</source>
          <target state="translated">现在，使用GeoDjango的&lt;a href=&quot;gdal#django.contrib.gis.gdal.DataSource&quot;&gt; &lt;code&gt;DataSource&lt;/code&gt; &lt;/a&gt;界面打开世界边界shapefile ：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
