<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="8b1fa3471d34f0d234ba4558b474a601a8cc898d" translate="yes" xml:space="preserve">
          <source>Moreover, if the &lt;code&gt;GEOSGeometry&lt;/code&gt; is in a different coordinate system (has a different SRID value) than that of the field, then it will be implicitly transformed into the SRID of the model&amp;rsquo;s field, using the spatial database&amp;rsquo;s transform procedure:</source>
          <target state="translated">此外，如果 &lt;code&gt;GEOSGeometry&lt;/code&gt; 与字段处于不同的坐标系（具有不同的SRID值），则将使用空间数据库的转换过程将其隐式转换为模型字段的SRID：</target>
        </trans-unit>
        <trans-unit id="fee232fed6319afa654e98407d6a84369cdc26ae" translate="yes" xml:space="preserve">
          <source>Morphs this SpatialReference from ESRI&amp;rsquo;s format to EPSG</source>
          <target state="translated">将此SpatialReference从ESRI格式转换为EPSG</target>
        </trans-unit>
        <trans-unit id="2776d1cf12cc121cc6a53ab101839d36c44da49e" translate="yes" xml:space="preserve">
          <source>Morphs this SpatialReference to ESRI&amp;rsquo;s format.</source>
          <target state="translated">将此SpatialReference变形为ESRI的格式。</target>
        </trans-unit>
        <trans-unit id="de802c1632cedcbed1d1269dec4dd87d1626b63d" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;QueryDict&lt;/code&gt;s you encounter, and in particular those at &lt;code&gt;request.POST&lt;/code&gt; and &lt;code&gt;request.GET&lt;/code&gt;, will be immutable. If you are instantiating one yourself, you can make it mutable by passing &lt;code&gt;mutable=True&lt;/code&gt; to its &lt;code&gt;__init__()&lt;/code&gt;.</source>
          <target state="translated">您遇到的大多数 &lt;code&gt;QueryDict&lt;/code&gt; ，尤其是在 &lt;code&gt;request.POST&lt;/code&gt; 和 &lt;code&gt;request.GET&lt;/code&gt; 中遇到的，都是不可变的。如果您要自己实例化一个实例，则可以通过将 &lt;code&gt;mutable=True&lt;/code&gt; 传递给它的 &lt;code&gt;__init__()&lt;/code&gt; 使其可变。</target>
        </trans-unit>
        <trans-unit id="fd83b2da2d31a5769324d7579da823d1abff813e" translate="yes" xml:space="preserve">
          <source>Most developers won&amp;rsquo;t need to worry about changing form encoding, but this is a useful feature for applications that talk to legacy systems whose encoding you cannot control.</source>
          <target state="translated">大多数开发人员无需担心更改表单编码，但这对于与无法控制其编码的遗留系统进行通信的应用程序来说是一项有用的功能。</target>
        </trans-unit>
        <trans-unit id="10ade9a2061b05f7b91f4318c4b19e8aa5ca9527" translate="yes" xml:space="preserve">
          <source>Most fields don&amp;rsquo;t require data preparation. Simple data types, such as integers and strings, are &amp;lsquo;ready to write&amp;rsquo; as a Python object. However, more complex data types often require some modification.</source>
          <target state="translated">大多数字段不需要数据准备。简单的数据类型（例如整数和字符串）可以作为Python对象&amp;ldquo;准备写入&amp;rdquo;。但是，更复杂的数据类型通常需要进行一些修改。</target>
        </trans-unit>
        <trans-unit id="d529a24fa241e9065286615d191b753364639d64" translate="yes" xml:space="preserve">
          <source>Most filters don&amp;rsquo;t take arguments. In this case, leave the argument out of your function:</source>
          <target state="translated">大多数过滤器不接受参数。在这种情况下，请将参数保留在函数之外：</target>
        </trans-unit>
        <trans-unit id="6ac8c4baf64570371700af7032fa39a6dc85046f" translate="yes" xml:space="preserve">
          <source>Most generic views require the &lt;code&gt;queryset&lt;/code&gt; key, which is a &lt;code&gt;QuerySet&lt;/code&gt; instance; see &lt;a href=&quot;../../topics/db/queries&quot;&gt;Making queries&lt;/a&gt; for more information about &lt;code&gt;QuerySet&lt;/code&gt; objects.</source>
          <target state="translated">大多数通用视图都需要 &lt;code&gt;queryset&lt;/code&gt; 键，这是一个 &lt;code&gt;QuerySet&lt;/code&gt; 实例。请参阅进行&lt;a href=&quot;../../topics/db/queries&quot;&gt;查询&lt;/a&gt;以获取有关 &lt;code&gt;QuerySet&lt;/code&gt; 对象的更多信息。</target>
        </trans-unit>
        <trans-unit id="283a9ab800c27a0c42452de79dd91ba830b18c75" translate="yes" xml:space="preserve">
          <source>Most larger Django sites use a separate Web server &amp;ndash; i.e., one that&amp;rsquo;s not also running Django &amp;ndash; for serving static files. This server often runs a different type of web server &amp;ndash; faster but less full-featured. Some common choices are:</source>
          <target state="translated">大多数较大的Django站点使用单独的Web服务器（即未同时运行Django的Web服务器）来提供静态文件。该服务器通常运行其他类型的Web服务器-速度更快，但功能较少。一些常见的选择是：</target>
        </trans-unit>
        <trans-unit id="d071dd58c0ea09b5920680c494256897fe6f5f87" translate="yes" xml:space="preserve">
          <source>Most method calls attached to objects are also available from within templates. This means that templates have access to much more than just class attributes (like field names) and variables passed in from views. For example, the Django ORM provides the &lt;a href=&quot;../../topics/db/queries#topics-db-queries-related&quot;&gt;&amp;ldquo;entry_set&amp;rdquo;&lt;/a&gt; syntax for finding a collection of objects related on a foreign key. Therefore, given a model called &amp;ldquo;comment&amp;rdquo; with a foreign key relationship to a model called &amp;ldquo;task&amp;rdquo; you can loop through all comments attached to a given task like this:</source>
          <target state="translated">模板中还提供了大多数附加到对象的方法调用。这意味着模板不仅可以访问类属性（如字段名称），还可以访问从视图传入的变量。例如，Django ORM提供了&lt;a href=&quot;../../topics/db/queries#topics-db-queries-related&quot;&gt;&amp;ldquo; entry_set&amp;rdquo;&lt;/a&gt;语法，用于查找与外键相关的对象的集合。因此，给定一个名为&amp;ldquo;注释&amp;rdquo;的模型与一个名为&amp;ldquo;任务&amp;rdquo;的模型具有外键关系的模型，您可以像这样循环遍历附加到给定任务的所有注释：</target>
        </trans-unit>
        <trans-unit id="145d0f6157ec473a53e372c29d0eb1af87df32d4" translate="yes" xml:space="preserve">
          <source>Most of the time you&amp;rsquo;ll use &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.all&quot;&gt;&lt;code&gt;all()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.exclude&quot;&gt;&lt;code&gt;exclude()&lt;/code&gt;&lt;/a&gt; when you need to look up objects from the database. However, that&amp;rsquo;s far from all there is; see the &lt;a href=&quot;../../ref/models/querysets#queryset-api&quot;&gt;QuerySet API Reference&lt;/a&gt; for a complete list of all the various &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">在大多数情况下，当您需要从数据库中查找对象时，将使用&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.all&quot;&gt; &lt;code&gt;all()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.exclude&quot;&gt; &lt;code&gt;exclude()&lt;/code&gt; &lt;/a&gt;。但是，这还远远不够。有关所有各种&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;方法的完整列表，请参见&lt;a href=&quot;../../ref/models/querysets#queryset-api&quot;&gt;QuerySet API参考&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e5a70a402429d9e0751ab8352b3b6edf4a999b65" translate="yes" xml:space="preserve">
          <source>Most of the time you&amp;rsquo;ll use a &lt;code&gt;File&lt;/code&gt; that Django&amp;rsquo;s given you (i.e. a file attached to a model as above, or perhaps an uploaded file).</source>
          <target state="translated">在大多数情况下，你会使用一个 &lt;code&gt;File&lt;/code&gt; （附加到模型如上即一个文件，或者上传的文件），Django的给你。</target>
        </trans-unit>
        <trans-unit id="ee3f7c7371e94698b53b1354c3bef6e0872c9065" translate="yes" xml:space="preserve">
          <source>Most of the time, you&amp;rsquo;ll instantiate &lt;a href=&quot;#django.template.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; objects by passing in a fully-populated dictionary to &lt;code&gt;Context()&lt;/code&gt;. But you can add and delete items from a &lt;code&gt;Context&lt;/code&gt; object once it&amp;rsquo;s been instantiated, too, using standard dictionary syntax:</source>
          <target state="translated">大多数情况下，您将通过向 &lt;code&gt;Context()&lt;/code&gt; 传递完整填充的字典来实例化&lt;a href=&quot;#django.template.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;对象。但是，一旦实例化了 &lt;code&gt;Context&lt;/code&gt; 对象，您也可以使用标准字典语法对其进行添加和删除：</target>
        </trans-unit>
        <trans-unit id="75df474b5d319622c3cc5760d003faf378b95a8e" translate="yes" xml:space="preserve">
          <source>Most of the time, you&amp;rsquo;ll pass the file data from &lt;code&gt;request&lt;/code&gt; into the form as described in &lt;a href=&quot;../../ref/forms/api#binding-uploaded-files&quot;&gt;Binding uploaded files to a form&lt;/a&gt;. This would look something like:</source>
          <target state="translated">在大多数情况下，您会将 &lt;code&gt;request&lt;/code&gt; 的文件数据传递到表单中，如将&lt;a href=&quot;../../ref/forms/api#binding-uploaded-files&quot;&gt;上传的文件绑定到表单中所述&lt;/a&gt;。这看起来像：</target>
        </trans-unit>
        <trans-unit id="119f2c924a319d37b00a931fb60d52e9b7e587d8" translate="yes" xml:space="preserve">
          <source>Most other &lt;code&gt;django-admin&lt;/code&gt; commands that interact with the database operate in the same way as &lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; &amp;ndash; they only ever operate on one database at a time, using &lt;code&gt;--database&lt;/code&gt; to control the database used.</source>
          <target state="translated">与数据库交互的大多数其他 &lt;code&gt;django-admin&lt;/code&gt; 命令以与&lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;相同的方式运行&amp;ndash;它们一次只能使用 &lt;code&gt;--database&lt;/code&gt; 控制使用的数据库一次在一个数据库上运行。</target>
        </trans-unit>
        <trans-unit id="377bcaf04e9797c6340b2a8bdad4bee17d23a9bf" translate="yes" xml:space="preserve">
          <source>Most people are familiar with using latitude and longitude to reference a location on the earth&amp;rsquo;s surface. However, latitude and longitude are angles, not distances. In other words, while the shortest path between two points on a flat surface is a straight line, the shortest path between two points on a curved surface (such as the earth) is an &lt;em&gt;arc&lt;/em&gt; of a &lt;a href=&quot;https://en.wikipedia.org/wiki/Great_circle&quot;&gt;great circle&lt;/a&gt;. &lt;a href=&quot;#fnthematic&quot; id=&quot;id8&quot;&gt;[4]&lt;/a&gt; Thus, additional computation is required to obtain distances in planar units (e.g., kilometers and miles). Using a geographic coordinate system may introduce complications for the developer later on. For example, SpatiaLite does not have the capability to perform distance calculations between geometries using geographic coordinate systems, e.g. constructing a query to find all points within 5 miles of a county boundary stored as WGS84. &lt;a href=&quot;#fndist&quot; id=&quot;id9&quot;&gt;[5]&lt;/a&gt;</source>
          <target state="translated">大多数人都熟悉使用纬度和经度来参考地球表面上的位置。但是，纬度和经度是角度，而不是距离。换句话说，虽然在平坦表面上的两个点之间的最短路径是一条直线，两点之间的弯曲表面的最短路径（例如地球）是&lt;em&gt;弧&lt;/em&gt; a的&lt;a href=&quot;https://en.wikipedia.org/wiki/Great_circle&quot;&gt;大圆&lt;/a&gt;。&lt;a href=&quot;#fnthematic&quot; id=&quot;id8&quot;&gt;[4]&lt;/a&gt;因此，需要额外的计算以获得平面单位的距离（例如，公里和英里）。使用地理坐标系可能会在以后给开发人员带来麻烦。例如，SpatiaLite不具备使用地理坐标系在几何之间进行距离计算的功能，例如构造查询以查找存储为WGS84的县边界5英里内的所有点。&lt;a href=&quot;#fndist&quot; id=&quot;id9&quot;&gt;[5]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa380c3aed18b055c47fc70106524669e774f0e4" translate="yes" xml:space="preserve">
          <source>Most tags accept arguments:</source>
          <target state="translated">大多数标签都接受参数。</target>
        </trans-unit>
        <trans-unit id="7d98610356545b43a90b40c891fb649c8f9fda3c" translate="yes" xml:space="preserve">
          <source>Most validation can be done using &lt;a href=&quot;#validators&quot;&gt;validators&lt;/a&gt; - helpers that can be reused. Validators are functions (or callables) that take a single argument and raise &lt;code&gt;ValidationError&lt;/code&gt; on invalid input. Validators are run after the field&amp;rsquo;s &lt;code&gt;to_python&lt;/code&gt; and &lt;code&gt;validate&lt;/code&gt; methods have been called.</source>
          <target state="translated">大多数验证都可以使用&lt;a href=&quot;#validators&quot;&gt;验证器&lt;/a&gt;完成，这些验证器可以重复使用。验证器是采用单个参数并在无效输入上引发 &lt;code&gt;ValidationError&lt;/code&gt; 的函数（或可调用函数）。在字段的 &lt;code&gt;to_python&lt;/code&gt; 和 &lt;code&gt;validate&lt;/code&gt; 方法被调用之后运行验证器。</target>
        </trans-unit>
        <trans-unit id="723f4d4f07515e4cb9cdd3456d1f4fe86b2d6da5" translate="yes" xml:space="preserve">
          <source>Most views requires CSRF protection, but a few do not.</source>
          <target state="translated">大多数视图需要CSRF保护,但也有少数视图不需要。</target>
        </trans-unit>
        <trans-unit id="4128c1d8e90ab53d91e5ee014d62fddc81452af8" translate="yes" xml:space="preserve">
          <source>Most websites that care about time zones ask users in which time zone they live and store this information in the user&amp;rsquo;s profile. For anonymous users, they use the time zone of their primary audience or UTC. &lt;a href=&quot;http://pytz.sourceforge.net/&quot;&gt;pytz&lt;/a&gt; provides &lt;a href=&quot;http://pytz.sourceforge.net/#helpers&quot;&gt;helpers&lt;/a&gt;, like a list of time zones per country, that you can use to pre-select the most likely choices.</source>
          <target state="translated">大多数关心时区的网站都会询问用户他们居住在哪个时区并将此信息存储在用户的个人资料中。对于匿名用户，他们使用其主要受众或时区的时区。&lt;a href=&quot;http://pytz.sourceforge.net/&quot;&gt;pytz&lt;/a&gt;提供了一些&lt;a href=&quot;http://pytz.sourceforge.net/#helpers&quot;&gt;帮助程序&lt;/a&gt;，例如每个国家/地区的时区列表，您可以用来预先选择最可能的选择。</target>
        </trans-unit>
        <trans-unit id="6c8d12148748172394b8e79a6d152a32dd323fc1" translate="yes" xml:space="preserve">
          <source>Move the &lt;code&gt;polls&lt;/code&gt; directory into the &lt;code&gt;django-polls&lt;/code&gt; directory.</source>
          <target state="translated">将 &lt;code&gt;polls&lt;/code&gt; 目录移到 &lt;code&gt;django-polls&lt;/code&gt; 目录。</target>
        </trans-unit>
        <trans-unit id="c58c013c30d8701a971a22d72e01d0b764b2b536" translate="yes" xml:space="preserve">
          <source>Moves the model&amp;rsquo;s table from one tablespace to another.</source>
          <target state="translated">将模型的表从一个表空间移动到另一个表空间。</target>
        </trans-unit>
        <trans-unit id="d794a8d047d2027efa4972e195bbc53e5a2bcbce" translate="yes" xml:space="preserve">
          <source>Moving an object from one database to another</source>
          <target state="translated">将一个对象从一个数据库移动到另一个数据库</target>
        </trans-unit>
        <trans-unit id="64683d853b5d7f50f535fc278d45f921a490d24b" translate="yes" xml:space="preserve">
          <source>Much like &lt;a href=&quot;#django.db.migrations.operations.RunSQL&quot;&gt;&lt;code&gt;RunSQL&lt;/code&gt;&lt;/a&gt;, ensure that if you change schema inside here you&amp;rsquo;re either doing it outside the scope of the Django model system (e.g. triggers) or that you use &lt;a href=&quot;#django.db.migrations.operations.SeparateDatabaseAndState&quot;&gt;&lt;code&gt;SeparateDatabaseAndState&lt;/code&gt;&lt;/a&gt; to add in operations that will reflect your changes to the model state - otherwise, the versioned ORM and the autodetector will stop working correctly.</source>
          <target state="translated">与&lt;a href=&quot;#django.db.migrations.operations.RunSQL&quot;&gt; &lt;code&gt;RunSQL&lt;/code&gt; &lt;/a&gt;相似，请确保如果在此处更改架构，则要么在Django模型系统的范围之外（例如触发器）执行它，要么使用&lt;a href=&quot;#django.db.migrations.operations.SeparateDatabaseAndState&quot;&gt; &lt;code&gt;SeparateDatabaseAndState&lt;/code&gt; &lt;/a&gt;来添加可反映对模型状态所做更改的操作-否则，版本化的ORM和自动检测器将停止正常工作。</target>
        </trans-unit>
        <trans-unit id="41621a064f44e6daabdc27522b33298fa8aa62b1" translate="yes" xml:space="preserve">
          <source>Multi-database support</source>
          <target state="translated">多数据库支持</target>
        </trans-unit>
        <trans-unit id="ddb04e3ae372a17b92e0255fc4b279009db9af90" translate="yes" xml:space="preserve">
          <source>Multi-table inheritance</source>
          <target state="translated">多表继承</target>
        </trans-unit>
        <trans-unit id="85c68fd61341ba3993094799674748ff1b1fad2b" translate="yes" xml:space="preserve">
          <source>Multidimensional arrays with indexes and slices</source>
          <target state="translated">带有索引和切片的多维数组。</target>
        </trans-unit>
        <trans-unit id="6dae03e38262e1d8fbd6001ae280309609de7140" translate="yes" xml:space="preserve">
          <source>Multiple admin sites in the same URLconf</source>
          <target state="translated">同一个URLconf中的多个管理站点</target>
        </trans-unit>
        <trans-unit id="d28c471111be99bb04f22b41815e829ee1145175" translate="yes" xml:space="preserve">
          <source>Multiple databases</source>
          <target state="translated">多个数据库</target>
        </trans-unit>
        <trans-unit id="a9dadd9453a271030d305246c8860a4e63627858" translate="yes" xml:space="preserve">
          <source>Multiple inheritance</source>
          <target state="translated">多重继承</target>
        </trans-unit>
        <trans-unit id="232abe7a48c7c1ee8c0efaa67e739c2a6509d72e" translate="yes" xml:space="preserve">
          <source>Multiple keys can be chained together to form a path lookup:</source>
          <target state="translated">多个键可以连锁在一起,形成一个路径查询。</target>
        </trans-unit>
        <trans-unit id="5112902c4e583bfe7514db7252746db758fd62e2" translate="yes" xml:space="preserve">
          <source>Multiple object mixins</source>
          <target state="translated">多对象混搭</target>
        </trans-unit>
        <trans-unit id="86f9c0e7700126520aeb57e446419f134fb8a6f7" translate="yes" xml:space="preserve">
          <source>Mumbai: 19,000,000</source>
          <target state="translated">孟买:19 000 000人</target>
        </trans-unit>
        <trans-unit id="ce70a430cc3e5cc4fd6f19e52ba7a0369c6c0c5b" translate="yes" xml:space="preserve">
          <source>Must be a subclass of &lt;a href=&quot;widgets#django.forms.MultiWidget&quot;&gt;&lt;code&gt;django.forms.MultiWidget&lt;/code&gt;&lt;/a&gt;. Default value is &lt;a href=&quot;widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt;, which probably is not very useful in this case.</source>
          <target state="translated">必须是&lt;a href=&quot;widgets#django.forms.MultiWidget&quot;&gt; &lt;code&gt;django.forms.MultiWidget&lt;/code&gt; &lt;/a&gt;的子类。默认值为&lt;a href=&quot;widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt;，在这种情况下可能不是很有用。</target>
        </trans-unit>
        <trans-unit id="6f73e164a384f2624b0aa7805fd299ecce41fed8" translate="yes" xml:space="preserve">
          <source>Must return the lookup named &lt;code&gt;lookup_name&lt;/code&gt;. For instance, by returning &lt;code&gt;self.output_field.get_lookup(lookup_name)&lt;/code&gt;.</source>
          <target state="translated">必须返回名为 &lt;code&gt;lookup_name&lt;/code&gt; 的查找。例如，通过返回 &lt;code&gt;self.output_field.get_lookup(lookup_name)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c493b67af068ea997fcbeb95a43f0dc8b18c7ce6" translate="yes" xml:space="preserve">
          <source>Must return the lookup named &lt;code&gt;transform_name&lt;/code&gt;. For instance, by returning &lt;code&gt;self.output_field.get_transform(transform_name)&lt;/code&gt;.</source>
          <target state="translated">必须返回名为 &lt;code&gt;transform_name&lt;/code&gt; 的查找。例如，通过返回 &lt;code&gt;self.output_field.get_transform(transform_name)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a96b7ca96aaabf64fd5a1e1f8c1b203d836deaa9" translate="yes" xml:space="preserve">
          <source>Mutability: &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; objects may be modified.</source>
          <target state="translated">可变性：可以修改&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="4bccb0eee0e8600913c2c28639c66e179e6c916b" translate="yes" xml:space="preserve">
          <source>My logs are filled with GEOS-related errors</source>
          <target state="translated">我的日志中充满了与GEOS相关的错误。</target>
        </trans-unit>
        <trans-unit id="deaa0c393a6613972aaccbf1fecfdad67aa21e88" translate="yes" xml:space="preserve">
          <source>MySQL</source>
          <target state="translated">MySQL</target>
        </trans-unit>
        <trans-unit id="2e0075770347408bd338637c0345bcd2dba7d8f7" translate="yes" xml:space="preserve">
          <source>MySQL 5.6.4 and later can store fractional seconds, provided that the column definition includes a fractional indication (e.g. &lt;code&gt;DATETIME(6)&lt;/code&gt;). Earlier versions do not support them at all.</source>
          <target state="translated">MySQL 5.6.4和更高版本可以存储小数秒，只要列定义包含小数指示（例如 &lt;code&gt;DATETIME(6)&lt;/code&gt; ）。早期版本完全不支持它们。</target>
        </trans-unit>
        <trans-unit id="86a5ac5197e92a3bf370a96a8eed2e3a94e4cb1f" translate="yes" xml:space="preserve">
          <source>MySQL &lt;a href=&quot;#id10&quot; id=&quot;id9&quot;&gt;[5]&lt;/a&gt;</source>
          <target state="translated">MySQL &lt;a href=&quot;#id10&quot; id=&quot;id9&quot;&gt;[5]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="986a60a235cf32f505dc63fb40ec496ad291c705" translate="yes" xml:space="preserve">
          <source>MySQL Connector/Python</source>
          <target state="translated">MySQL连接器/python</target>
        </trans-unit>
        <trans-unit id="667f44d66957f73e91d3746ec1ac71180eba2323" translate="yes" xml:space="preserve">
          <source>MySQL Connector/Python is available from the &lt;a href=&quot;https://dev.mysql.com/downloads/connector/python/&quot;&gt;download page&lt;/a&gt;. The Django adapter is available in versions 1.1.X and later. It may not support the most recent releases of Django.</source>
          <target state="translated">可从&lt;a href=&quot;https://dev.mysql.com/downloads/connector/python/&quot;&gt;下载页面&lt;/a&gt;获得MySQL Connector / Python 。Django适配器在1.1.X及更高版本中可用。它可能不支持Django的最新版本。</target>
        </trans-unit>
        <trans-unit id="9bb341b82bf1c83dd03f7466f030dfb1c4ead4ae" translate="yes" xml:space="preserve">
          <source>MySQL DB API Drivers</source>
          <target state="translated">MySQL数据库API驱动程序</target>
        </trans-unit>
        <trans-unit id="2a32013dda91967e55f3b5f97fbb0212e962e6ad" translate="yes" xml:space="preserve">
          <source>MySQL Spatial Limitations</source>
          <target state="translated">MySQL的空间限制</target>
        </trans-unit>
        <trans-unit id="983d4198c4fe496e039642a0b10a31ff61fb8930" translate="yes" xml:space="preserve">
          <source>MySQL and MariaDB</source>
          <target state="translated">MySQL和MariaDB</target>
        </trans-unit>
        <trans-unit id="1ae647f2055c46f7991330b9effd8766eca9dada" translate="yes" xml:space="preserve">
          <source>MySQL and MariaDB do not support some options to the &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt; statement. If &lt;code&gt;select_for_update()&lt;/code&gt; is used with an unsupported option, then a &lt;a href=&quot;exceptions#django.db.NotSupportedError&quot;&gt;&lt;code&gt;NotSupportedError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">MySQL和MariaDB不支持 &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt; 语句的某些选项。如果 &lt;code&gt;select_for_update()&lt;/code&gt; 与不支持的选项一起使用，则会引发&lt;a href=&quot;exceptions#django.db.NotSupportedError&quot;&gt; &lt;code&gt;NotSupportedError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6f05eb6ba63b7a6cd32e2832c1d889278aa95ffb" translate="yes" xml:space="preserve">
          <source>MySQL and SpatiaLite without LWGEOM don&amp;rsquo;t support area calculations on geographic SRSes.</source>
          <target state="translated">没有LWGEOM的MySQL和SpatiaLite不支持在地理SRS上进行面积计算。</target>
        </trans-unit>
        <trans-unit id="e619fd44bc5f6e15a9f90141b521fe84e6c5c40b" translate="yes" xml:space="preserve">
          <source>MySQL can index only the first N chars of a &lt;code&gt;BLOB&lt;/code&gt; or &lt;code&gt;TEXT&lt;/code&gt; column. Since &lt;code&gt;TextField&lt;/code&gt; doesn&amp;rsquo;t have a defined length, you can&amp;rsquo;t mark it as &lt;code&gt;unique=True&lt;/code&gt;. MySQL will report: &amp;ldquo;BLOB/TEXT column &amp;lsquo;&amp;lt;db_column&amp;gt;&amp;rsquo; used in key specification without a key length&amp;rdquo;.</source>
          <target state="translated">MySQL只能索引 &lt;code&gt;BLOB&lt;/code&gt; 或 &lt;code&gt;TEXT&lt;/code&gt; 列的前N个字符。由于 &lt;code&gt;TextField&lt;/code&gt; 没有定义的长度，因此您不能将其标记为 &lt;code&gt;unique=True&lt;/code&gt; 。MySQL将报告：&amp;ldquo;在密钥规范中使用的BLOB / TEXT列'&amp;lt;db_column&amp;gt;'，没有密钥长度&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="e7f9037fbe1194d4e43f2ae2e2b77cd89ac807a6" translate="yes" xml:space="preserve">
          <source>MySQL comparisons</source>
          <target state="translated">MySQL比较</target>
        </trans-unit>
        <trans-unit id="1b2f25b29e36685e347b0022acef2066f4e227da" translate="yes" xml:space="preserve">
          <source>MySQL doesn&amp;rsquo;t support length calculations on geographic SRSes.</source>
          <target state="translated">MySQL不支持在地理SRS上进行长度计算。</target>
        </trans-unit>
        <trans-unit id="bb747cd75bad69ca691abcfc9dda3c14f82ee26e" translate="yes" xml:space="preserve">
          <source>MySQL doesn&amp;rsquo;t support streaming results, hence the Python database driver loads the entire result set into memory. The result set is then transformed into Python row objects by the database adapter using the &lt;code&gt;fetchmany()&lt;/code&gt; method defined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 249&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">MySQL不支持流式结果，因此Python数据库驱动程序将整个结果集加载到内存中。然后，数据库适配器使用&lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 249中&lt;/strong&gt;&lt;/a&gt;定义的 &lt;code&gt;fetchmany()&lt;/code&gt; 方法将结果集转换为Python行对象。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9699bc8cbc6d21071c531e97cae0a82b4d28855a" translate="yes" xml:space="preserve">
          <source>MySQL has a couple drivers that implement the Python Database API described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 249&lt;/strong&gt;&lt;/a&gt;:</source>
          <target state="translated">MySQL有几个驱动程序，它们实现了&lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 249中&lt;/strong&gt;&lt;/a&gt;描述的Python数据库API ：</target>
        </trans-unit>
        <trans-unit id="dd36a013a62a179e364138cb150dda709e3289ba" translate="yes" xml:space="preserve">
          <source>MySQL has several &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/storage-engines.html&quot;&gt;storage engines&lt;/a&gt;. You can change the default storage engine in the server configuration.</source>
          <target state="translated">MySQL有几个&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/storage-engines.html&quot;&gt;存储引擎&lt;/a&gt;。您可以在服务器配置中更改默认存储引擎。</target>
        </trans-unit>
        <trans-unit id="13c24d5b3db43171b5ef4d816ab11e8214bf90ac" translate="yes" xml:space="preserve">
          <source>MySQL lacks support for transactions around schema alteration operations, meaning that if a migration fails to apply you will have to manually unpick the changes in order to try again (it&amp;rsquo;s impossible to roll back to an earlier point).</source>
          <target state="translated">MySQL缺乏围绕模式变更操作的事务支持，这意味着如果迁移失败，您将必须手动取消选择更改才能重试（无法回滚到较早的时间）。</target>
        </trans-unit>
        <trans-unit id="da7ec2dd90480fe6867f579ccf7b82e69036fc20" translate="yes" xml:space="preserve">
          <source>MySQL notes</source>
          <target state="translated">MySQL注释</target>
        </trans-unit>
        <trans-unit id="c97f25b2cd670ac90747ff6c4670fa29f1bdcc07" translate="yes" xml:space="preserve">
          <source>MySQL option files.</source>
          <target state="translated">MySQL选项文件。</target>
        </trans-unit>
        <trans-unit id="a18101faca156f271f971ff4f81a92f324b38b2f" translate="yes" xml:space="preserve">
          <source>MySQL support was added.</source>
          <target state="translated">增加了对MySQL的支持。</target>
        </trans-unit>
        <trans-unit id="0aca998cada4db772b8e544e84480f89cb51ce1e" translate="yes" xml:space="preserve">
          <source>MySQL users, refer to the &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/charset-database.html&quot;&gt;MySQL manual&lt;/a&gt; for details on how to set or alter the database character set encoding.</source>
          <target state="translated">MySQL用户，请参阅&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/charset-database.html&quot;&gt;MySQL手册&lt;/a&gt;以获取有关如何设置或更改数据库字符集编码的详细信息。</target>
        </trans-unit>
        <trans-unit id="901623a9cc98c4d53a4f346dc9d64f6ee667fc21" translate="yes" xml:space="preserve">
          <source>MySQL with MyISAM and fixtures</source>
          <target state="translated">MySQL与MyISAM和夹具</target>
        </trans-unit>
        <trans-unit id="c8423889e44ab6d190ce5b97f8e3f5999ada3a9e" translate="yes" xml:space="preserve">
          <source>MySQL&amp;rsquo;s default storage engine is &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/innodb-storage-engine.html&quot;&gt;InnoDB&lt;/a&gt;. This engine is fully transactional and supports foreign key references. It&amp;rsquo;s the recommended choice. However, the InnoDB autoincrement counter is lost on a MySQL restart because it does not remember the &lt;code&gt;AUTO_INCREMENT&lt;/code&gt; value, instead recreating it as &amp;ldquo;max(id)+1&amp;rdquo;. This may result in an inadvertent reuse of &lt;a href=&quot;models/fields#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt; values.</source>
          <target state="translated">MySQL的默认存储引擎是&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/innodb-storage-engine.html&quot;&gt;InnoDB&lt;/a&gt;。该引擎是完全事务性的，并支持外键引用。这是推荐的选择。但是，由于MySQL不会记住 &lt;code&gt;AUTO_INCREMENT&lt;/code&gt; 值，而是将其重新创建为&amp;ldquo; max（id）+1&amp;rdquo;，因此在MySQL重新启动时，InnoDB自动增量计数器会丢失。这可能会导致无意中重复使用&lt;a href=&quot;models/fields#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; &lt;/a&gt;值。</target>
        </trans-unit>
        <trans-unit id="da894fa611c76d98f190b501119ec407ebf26fcc" translate="yes" xml:space="preserve">
          <source>MySQL, PostGIS, SpatiaLite</source>
          <target state="translated">MySQL、PostGIS、SpatiaLite</target>
        </trans-unit>
        <trans-unit id="e6d7af34f14cc7cd71ad2da3150f20559678178f" translate="yes" xml:space="preserve">
          <source>MySQL: &lt;code&gt;max_allowed_packet&lt;/code&gt; error</source>
          <target state="translated">MySQL： &lt;code&gt;max_allowed_packet&lt;/code&gt; 错误</target>
        </trans-unit>
        <trans-unit id="aa93eb462b33d3480c38c1390b6b9dda484bd422" translate="yes" xml:space="preserve">
          <source>MySQL: load the time zone tables with &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/mysql-tzinfo-to-sql.html&quot;&gt;mysql_tzinfo_to_sql&lt;/a&gt;.</source>
          <target state="translated">MySQL：使用&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/mysql-tzinfo-to-sql.html&quot;&gt;mysql_tzinfo_to_sql&lt;/a&gt;加载时区表。</target>
        </trans-unit>
        <trans-unit id="b51a60734da64be0e618bacbea2865a8a7dcd669" translate="yes" xml:space="preserve">
          <source>N</source>
          <target state="translated">N</target>
        </trans-unit>
        <trans-unit id="87bfcc6203402acde4aabbaf0352d970adff0de9" translate="yes" xml:space="preserve">
          <source>N, B</source>
          <target state="translated">N,B</target>
        </trans-unit>
        <trans-unit id="42279a6f78cd081c721ab2a673715d6e0141307a" translate="yes" xml:space="preserve">
          <source>NULL and empty strings</source>
          <target state="translated">NULL和空字符串</target>
        </trans-unit>
        <trans-unit id="3ec5dc9e67bb01760f1a1602b80350c782cc4a3d" translate="yes" xml:space="preserve">
          <source>Naive and aware datetime objects</source>
          <target state="translated">天真的和有意识的日期时间对象</target>
        </trans-unit>
        <trans-unit id="991cb900a910173a0198132c33364a293aa20dc5" translate="yes" xml:space="preserve">
          <source>Name of a model field which will be auto-populated with the height of the image each time the model instance is saved.</source>
          <target state="translated">模型字段的名称,每次保存模型实例时将自动填充图像的高度。</target>
        </trans-unit>
        <trans-unit id="77b12c2e53e54a360eee73a9a579997d2f334a46" translate="yes" xml:space="preserve">
          <source>Name of a model field which will be auto-populated with the width of the image each time the model instance is saved.</source>
          <target state="translated">模型字段的名称,每次保存模型实例时将自动填充图像的宽度。</target>
        </trans-unit>
        <trans-unit id="e796ff17766e96ff2c6860b2879523670c9a432e" translate="yes" xml:space="preserve">
          <source>Name of a supported database vendor that this model is specific to. Current built-in vendor names are: &lt;code&gt;sqlite&lt;/code&gt;, &lt;code&gt;postgresql&lt;/code&gt;, &lt;code&gt;mysql&lt;/code&gt;, &lt;code&gt;oracle&lt;/code&gt;. If this attribute is not empty and the current connection vendor doesn&amp;rsquo;t match it, the model will not be synchronized.</source>
          <target state="translated">该模型特定于的受支持数据库供应商的名称。当前内置的供应商名称是： &lt;code&gt;sqlite&lt;/code&gt; ， &lt;code&gt;postgresql&lt;/code&gt; ， &lt;code&gt;mysql&lt;/code&gt; ， &lt;code&gt;oracle&lt;/code&gt; 。如果此属性不为空，并且当前连接供应商不匹配该模型，则该模型将不同步。</target>
        </trans-unit>
        <trans-unit id="21e40c06422396c66fc6f011529e9fbb22670cb1" translate="yes" xml:space="preserve">
          <source>Named arguments can be passed by using either one of the following syntaxes:</source>
          <target state="translated">命名的参数可以通过使用以下任何一种语法来传递。</target>
        </trans-unit>
        <trans-unit id="456472e152b75181780a0aa5cf5f649563895b18" translate="yes" xml:space="preserve">
          <source>Named interpolation: This mode is selected by passing the optional boolean &lt;code&gt;named&lt;/code&gt; parameter as &lt;code&gt;true&lt;/code&gt;. &lt;code&gt;obj&lt;/code&gt; contains a JavaScript object or associative array. For example:</source>
          <target state="translated">命名插值：通过将可选的布尔 &lt;code&gt;named&lt;/code&gt; 参数传递为 &lt;code&gt;true&lt;/code&gt; 来选择此模式。 &lt;code&gt;obj&lt;/code&gt; 包含一个JavaScript对象或关联数组。例如：</target>
        </trans-unit>
        <trans-unit id="cddd6003787cffa647cd2f5ab65bee28c43a64f5" translate="yes" xml:space="preserve">
          <source>Namespace packages as apps</source>
          <target state="translated">命名空间包作为应用程序</target>
        </trans-unit>
        <trans-unit id="b401e0e546ac63496e6d96c97a9fc5aeb9b68b6f" translate="yes" xml:space="preserve">
          <source>Namespaced URLs are specified using the &lt;code&gt;':'&lt;/code&gt; operator. For example, the main index page of the admin application is referenced using &lt;code&gt;'admin:index'&lt;/code&gt;. This indicates a namespace of &lt;code&gt;'admin'&lt;/code&gt;, and a named URL of &lt;code&gt;'index'&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;':'&lt;/code&gt; 运算符指定命名空间的URL 。例如，使用 &lt;code&gt;'admin:index'&lt;/code&gt; 引用管理应用程序的主索引页面。这表示名称空间为 &lt;code&gt;'admin'&lt;/code&gt; ，命名URL为 &lt;code&gt;'index'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49121460562c588ebec421e328fc0f9d720e75bf" translate="yes" xml:space="preserve">
          <source>Namespaces can also be nested. The named URL &lt;code&gt;'sports:polls:index'&lt;/code&gt; would look for a pattern named &lt;code&gt;'index'&lt;/code&gt; in the namespace &lt;code&gt;'polls'&lt;/code&gt; that is itself defined within the top-level namespace &lt;code&gt;'sports'&lt;/code&gt;.</source>
          <target state="translated">命名空间也可以嵌套。命名URL'sports &lt;code&gt;'sports:polls:index'&lt;/code&gt; 将在名称空间 &lt;code&gt;'polls'&lt;/code&gt; 中查找名为 &lt;code&gt;'index'&lt;/code&gt; 的模式，该模式本身是在顶级名称空间 &lt;code&gt;'sports'&lt;/code&gt; 中定义的。</target>
        </trans-unit>
        <trans-unit id="7214a30965a0f1415063399b413c8991e0fe715d" translate="yes" xml:space="preserve">
          <source>Namespacing URL names</source>
          <target state="translated">命名间隔URL名称</target>
        </trans-unit>
        <trans-unit id="245bfd6a442d9a4f4c7f5466cc42e94f2e24f6ba" translate="yes" xml:space="preserve">
          <source>Naming URL patterns</source>
          <target state="translated">命名URL模式</target>
        </trans-unit>
        <trans-unit id="3801dd9c44d08b327a9ff306cbbe6bed16008529" translate="yes" xml:space="preserve">
          <source>Naming issues</source>
          <target state="translated">命名问题</target>
        </trans-unit>
        <trans-unit id="7e587f8f91b92c319567d66e4457de8a3eb6d592" translate="yes" xml:space="preserve">
          <source>Naming loggers</source>
          <target state="translated">命名记录仪</target>
        </trans-unit>
        <trans-unit id="6e94241c26e8d79594ba2990ac79ac771826be76" translate="yes" xml:space="preserve">
          <source>Naming your URL lets you refer to it unambiguously from elsewhere in Django, especially from within templates. This powerful feature allows you to make global changes to the URL patterns of your project while only touching a single file.</source>
          <target state="translated">命名你的URL可以让你在Django的其他地方毫不含糊地引用它,特别是在模板中。这个强大的功能允许你在只触及一个文件的情况下,对项目的URL模式进行全局的修改。</target>
        </trans-unit>
        <trans-unit id="b0e5d9ee1e706056e66182c63e2373c6ad455b80" translate="yes" xml:space="preserve">
          <source>Native raster support &lt;code&gt;N&lt;/code&gt;: the operator accepts rasters natively on both sides of the lookup, and raster input can be mixed with geometry inputs.</source>
          <target state="translated">本机栅格支持 &lt;code&gt;N&lt;/code&gt; ：运算符本机可以在查找的两侧接受本机栅格，并且可以将栅格输入与几何输入混合。</target>
        </trans-unit>
        <trans-unit id="71cb039d6cfd99775661211c11211853f3118ab8" translate="yes" xml:space="preserve">
          <source>Natural keys</source>
          <target state="translated">天然钥匙</target>
        </trans-unit>
        <trans-unit id="15de939347cd0f43fbb2c840def2f0483ccf19fc" translate="yes" xml:space="preserve">
          <source>Natural keys and forward references</source>
          <target state="translated">自然键和前向引用</target>
        </trans-unit>
        <trans-unit id="f2670621a6a242a585790697568a8a79acebea97" translate="yes" xml:space="preserve">
          <source>Naturally, the &lt;code&gt;forms&lt;/code&gt; library comes with a set of &lt;code&gt;Field&lt;/code&gt; classes that represent common validation needs. This section documents each built-in field.</source>
          <target state="translated">自然地， &lt;code&gt;forms&lt;/code&gt; 库带有一组代表通用验证需求的 &lt;code&gt;Field&lt;/code&gt; 类。本节记录每个内置字段。</target>
        </trans-unit>
        <trans-unit id="a0fd1dadeac26fc980d64d53a1d51dc00d872199" translate="yes" xml:space="preserve">
          <source>Nautical Mile</source>
          <target state="translated">海里</target>
        </trans-unit>
        <trans-unit id="c1bf29ee2167be4389b40be2ec27bb9ac6854cf5" translate="yes" xml:space="preserve">
          <source>Nautical Mile (UK)</source>
          <target state="translated">海里</target>
        </trans-unit>
        <trans-unit id="5e303aed43f7eea12893a04c1344d77f1422d360" translate="yes" xml:space="preserve">
          <source>Navigate to Django&amp;rsquo;s &lt;code&gt;tests/shortcuts/&lt;/code&gt; folder and create a new file &lt;code&gt;test_make_toast.py&lt;/code&gt;. Add the following code:</source>
          <target state="translated">导航到Django的 &lt;code&gt;tests/shortcuts/&lt;/code&gt; 文件夹，并创建一个新文件 &lt;code&gt;test_make_toast.py&lt;/code&gt; 。添加以下代码：</target>
        </trans-unit>
        <trans-unit id="391931ae9af417747703c930330f904886c481c0" translate="yes" xml:space="preserve">
          <source>Navigate to the &lt;code&gt;django/&lt;/code&gt; folder and open the &lt;code&gt;shortcuts.py&lt;/code&gt; file. At the bottom, add:</source>
          <target state="translated">导航到 &lt;code&gt;django/&lt;/code&gt; 文件夹，然后打开 &lt;code&gt;shortcuts.py&lt;/code&gt; 文件。在底部，添加：</target>
        </trans-unit>
        <trans-unit id="6ff1387ed6d44dceb1969e9b463d291bf6feec8d" translate="yes" xml:space="preserve">
          <source>Needing the result in every template.</source>
          <target state="translated">需要每个模板中的结果。</target>
        </trans-unit>
        <trans-unit id="854d8a7501a391087e8af696c7e80444951d2100" translate="yes" xml:space="preserve">
          <source>Negated object identity. Tests if two values are not the same object. This is the negation of the &lt;code&gt;is&lt;/code&gt; operator. Example:</source>
          <target state="translated">否定的对象标识。测试两个值是否不是同一对象。这是对 &lt;code&gt;is&lt;/code&gt; 运算符的否定。例：</target>
        </trans-unit>
        <trans-unit id="74cddaa347454041893fdb47ba6c8cf1d732490d" translate="yes" xml:space="preserve">
          <source>Negative indexing (i.e. &lt;code&gt;Entry.objects.all()[-1]&lt;/code&gt;) is not supported.</source>
          <target state="translated">不支持负索引（即 &lt;code&gt;Entry.objects.all()[-1]&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="16b2420a502b3deb13acfb660bcc642e826d0622" translate="yes" xml:space="preserve">
          <source>Nested arguments</source>
          <target state="translated">嵌套参数</target>
        </trans-unit>
        <trans-unit id="a51d1007934ad9baaf9054dadf4bd0eaf7048e4f" translate="yes" xml:space="preserve">
          <source>Nested captured arguments create a strong coupling between the view arguments and the URL as illustrated by &lt;code&gt;blog_articles&lt;/code&gt;: the view receives part of the URL (&lt;code&gt;page-2/&lt;/code&gt;) instead of only the value the view is interested in. This coupling is even more pronounced when reversing, since to reverse the view we need to pass the piece of URL instead of the page number.</source>
          <target state="translated">嵌套的捕获参数在视图参数和URL之间建立了牢固的耦合，如 &lt;code&gt;blog_articles&lt;/code&gt; 所示：视图接收URL的一部分（ &lt;code&gt;page-2/&lt;/code&gt; ），而不是仅接收视图感兴趣的值。当出现这种耦合时，这种耦合更加明显。反转，因为要反转视图，我们需要传递URL而不是页码。</target>
        </trans-unit>
        <trans-unit id="65046fcf73f5e6ac3773f70ea1badbd965d975c0" translate="yes" xml:space="preserve">
          <source>Nested classes</source>
          <target state="translated">嵌套类</target>
        </trans-unit>
        <trans-unit id="ffea8bcefbb1127b7c2b6d104e473978a7a5dfd5" translate="yes" xml:space="preserve">
          <source>Never deploy a site into production with &lt;a href=&quot;#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; turned on.</source>
          <target state="translated">切勿在启用&lt;a href=&quot;#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; 的情况下&lt;/a&gt;将站点部署到生产中。</target>
        </trans-unit>
        <trans-unit id="4e08b5505096fc8f458225bbe21af122777de6ec" translate="yes" xml:space="preserve">
          <source>New York: 20,000,000</source>
          <target state="translated">纽约:20 000 000人</target>
        </trans-unit>
        <trans-unit id="bc6939c687d34dccd6c0632aa8427056bf9dd500" translate="yes" xml:space="preserve">
          <source>New applications should avoid &lt;code&gt;default_app_config&lt;/code&gt;. Instead they should require the dotted path to the appropriate &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; subclass to be configured explicitly in &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">新应用程序应避免使用 &lt;code&gt;default_app_config&lt;/code&gt; 。相反，它们应要求在&lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 中&lt;/a&gt;显式配置指向适当的&lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt;子类的虚线路径。</target>
        </trans-unit>
        <trans-unit id="bb77323982627c875ecedea26b1cf8c9800f344b" translate="yes" xml:space="preserve">
          <source>New apps come preconfigured to accept migrations, and so you can add migrations by running &lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; once you&amp;rsquo;ve made some changes.</source>
          <target state="translated">新的应用程序已预先配置为接受迁移，因此您可以&lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt;一些更改后通过运行makemigrations添加迁移。</target>
        </trans-unit>
        <trans-unit id="397e08be4588b3e13fecbfaca297d85d558665ee" translate="yes" xml:space="preserve">
          <source>New features and improvements are added.</source>
          <target state="translated">增加了新的功能和改进。</target>
        </trans-unit>
        <trans-unit id="cdb2b3eaffe8e9fe13d1e76ec6f821570338db67" translate="yes" xml:space="preserve">
          <source>New in Django 2.2.</source>
          <target state="translated">Django 2.2中的新功能。</target>
        </trans-unit>
        <trans-unit id="a8859c9f8e0e148cbb9c7e291b070736ec990c4d" translate="yes" xml:space="preserve">
          <source>New in Django 2.2:</source>
          <target state="translated">Django 2.2中的新功能。</target>
        </trans-unit>
        <trans-unit id="7d4766fe3d85797ad596d99b8671ea4eafbe878d" translate="yes" xml:space="preserve">
          <source>New in Django 3.0.</source>
          <target state="translated">Django 3.0中的新功能。</target>
        </trans-unit>
        <trans-unit id="7802f5226ecb3555d94a9cf2a3159c22a8454a02" translate="yes" xml:space="preserve">
          <source>New in Django 3.0:</source>
          <target state="translated">Django 3.0中的新功能。</target>
        </trans-unit>
        <trans-unit id="3bdd2af04da21e645534a0164ec69a9d2e7eea84" translate="yes" xml:space="preserve">
          <source>New to Django? Or to Web development in general? Well, you came to the right place: read this material to quickly get up and running.</source>
          <target state="translated">你是Django的新手吗?或者对一般的Web开发?好吧,你来对了地方:阅读这本资料,可以快速上手。</target>
        </trans-unit>
        <trans-unit id="42c8c31ac17b91db81378ce6cded2f0b14aad34c" translate="yes" xml:space="preserve">
          <source>Newer is often - but not always - better</source>
          <target state="translated">较新的往往是--但并不总是--更好。</target>
        </trans-unit>
        <trans-unit id="90839b06d66480978bb51446f706afdc2004ad1e" translate="yes" xml:space="preserve">
          <source>Newer versions of Python, and also of Python packages, will often perform better too - but measure, rather than assume.</source>
          <target state="translated">Python 的新版本,以及 Python 包的新版本,通常也会有更好的表现-但要衡量,而不是假设。</target>
        </trans-unit>
        <trans-unit id="0f758a36445ca7a95d9a1d5274601a1eef8619f7" translate="yes" xml:space="preserve">
          <source>Newlines in the HTML content will be preserved.</source>
          <target state="translated">HTML内容中的新行将被保留。</target>
        </trans-unit>
        <trans-unit id="60c9dfae09ab7d11db1bd2a8800128d7b6ebdec0" translate="yes" xml:space="preserve">
          <source>Newlines within the string will be removed.</source>
          <target state="translated">字符串内的新行将被删除。</target>
        </trans-unit>
        <trans-unit id="11fc14203dd0f4441645a9c34d5dd022905f56e4" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="translated">今后的步骤</target>
        </trans-unit>
        <trans-unit id="6d1add59418ea384f8c14da01d32dd82a0c03a15" translate="yes" xml:space="preserve">
          <source>Next we need to import the test client class (later in &lt;code&gt;tests.py&lt;/code&gt; we will use the &lt;a href=&quot;../topics/testing/tools#django.test.TestCase&quot;&gt;&lt;code&gt;django.test.TestCase&lt;/code&gt;&lt;/a&gt; class, which comes with its own client, so this won&amp;rsquo;t be required):</source>
          <target state="translated">接下来，我们需要导入测试客户端类（稍后在 &lt;code&gt;tests.py&lt;/code&gt; 中,我们将使用&lt;a href=&quot;../topics/testing/tools#django.test.TestCase&quot;&gt; &lt;code&gt;django.test.TestCase&lt;/code&gt; &lt;/a&gt;类，该类随其自己的客户端一起提供，因此不需要）：</target>
        </trans-unit>
        <trans-unit id="b111a7c819e1512c7c04b41004b2e237b4657367" translate="yes" xml:space="preserve">
          <source>Next we&amp;rsquo;ll be adding the &lt;code&gt;make_toast()&lt;/code&gt; function.</source>
          <target state="translated">接下来，我们将添加 &lt;code&gt;make_toast()&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="76a45c894c9d7c9724383aea29e1d93ed7e569dd" translate="yes" xml:space="preserve">
          <source>Next we&amp;rsquo;ll create &lt;code&gt;setup.cfg&lt;/code&gt; and &lt;code&gt;setup.py&lt;/code&gt; files which detail how to build and install the app. A full explanation of these files is beyond the scope of this tutorial, but the &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/&quot;&gt;setuptools documentation&lt;/a&gt; has a good explanation. Create the files &lt;code&gt;django-polls/setup.cfg&lt;/code&gt; and &lt;code&gt;django-polls/setup.py&lt;/code&gt; with the following contents:</source>
          <target state="translated">接下来，我们将创建 &lt;code&gt;setup.cfg&lt;/code&gt; 和 &lt;code&gt;setup.py&lt;/code&gt; 文件，它们详细说明了如何构建和安装该应用程序。这些文件的完整说明超出了本教程的范围，但是&lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/&quot;&gt;setuptools文档&lt;/a&gt;提供了很好的说明。使用以下内容创建文件 &lt;code&gt;django-polls/setup.cfg&lt;/code&gt; 和 &lt;code&gt;django-polls/setup.py&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="2428b562258cc645b8a378441e5a8efef21e5410" translate="yes" xml:space="preserve">
          <source>Next we&amp;rsquo;ll need to ensure this &lt;code&gt;wsgi.py&lt;/code&gt; with a WSGI application object exists. As of Django version 1.4, &lt;a href=&quot;../../../ref/django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;startproject&lt;/code&gt;&lt;/a&gt; will have created one for you; otherwise, you&amp;rsquo;ll need to create it. See the &lt;a href=&quot;index&quot;&gt;WSGI overview documentation&lt;/a&gt; for the default contents you should put in this file, and what else you can add to it.</source>
          <target state="translated">接下来，我们需要确保此WSGI应用程序对象的 &lt;code&gt;wsgi.py&lt;/code&gt; 存在。从Django 1.4版开始，&lt;a href=&quot;../../../ref/django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;startproject&lt;/code&gt; &lt;/a&gt;将为您创建一个。否则，您将需要创建它。请参阅&lt;a href=&quot;index&quot;&gt;WSGI概述文档&lt;/a&gt;，以获取应放在此文件中的默认内容以及可以添加的其他内容。</target>
        </trans-unit>
        <trans-unit id="4458b46e2456208cc57f0c3fe8234e81455698af" translate="yes" xml:space="preserve">
          <source>Next, add the following at the top of &lt;code&gt;polls/templates/polls/index.html&lt;/code&gt;:</source>
          <target state="translated">接下来，在 &lt;code&gt;polls/templates/polls/index.html&lt;/code&gt; 顶部添加以下内容：</target>
        </trans-unit>
        <trans-unit id="c7e08d179fd99e5127a4244c23ceecf4befacdb5" translate="yes" xml:space="preserve">
          <source>Next, change into the directory where GEOS was unpacked, run the configure script, compile, and install:</source>
          <target state="translated">接下来,换到解压GEOS的目录下,运行configure脚本,编译,安装。</target>
        </trans-unit>
        <trans-unit id="97c565000f4ddc46a4029869cb4fde12f8283aea" translate="yes" xml:space="preserve">
          <source>Next, create the template used to render the tag&amp;rsquo;s output. This template is a fixed feature of the tag: the tag writer specifies it, not the template designer. Following our example, the template is very short:</source>
          <target state="translated">接下来，创建用于呈现标签输出的模板。该模板是标记的固定功能：标记编写器指定它，而不是模板设计器。按照我们的示例，模板非常简短：</target>
        </trans-unit>
        <trans-unit id="b06e64f44c84b4c936c45d05747ad2632f4f84e0" translate="yes" xml:space="preserve">
          <source>Next, edit your &lt;code&gt;urls.py&lt;/code&gt; in the &lt;code&gt;geodjango&lt;/code&gt; application folder as follows:</source>
          <target state="translated">接下来，按照以下步骤在 &lt;code&gt;geodjango&lt;/code&gt; 应用程序文件夹中编辑 &lt;code&gt;urls.py&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="977397e98ad4a4b3fb6d6c58fd844d5bc9efb0cf" translate="yes" xml:space="preserve">
          <source>Next, edit your Apache configuration to add a location that you want only authenticated users to be able to view:</source>
          <target state="translated">接下来,编辑你的Apache配置,添加一个你希望只有经过认证的用户才能查看的位置。</target>
        </trans-unit>
        <trans-unit id="c378e99152f7b9fca914a5bcc9c3e1b7f8efc41d" translate="yes" xml:space="preserve">
          <source>Next, import the &lt;code&gt;load&lt;/code&gt; module, call the &lt;code&gt;run&lt;/code&gt; routine, and watch &lt;code&gt;LayerMapping&lt;/code&gt; do the work:</source>
          <target state="translated">接下来，导入 &lt;code&gt;load&lt;/code&gt; 模块，调用 &lt;code&gt;run&lt;/code&gt; 例程，并观察 &lt;code&gt;LayerMapping&lt;/code&gt; 完成工作：</target>
        </trans-unit>
        <trans-unit id="0ebf4ba3fa141f4156fed974267f5f3468106b7b" translate="yes" xml:space="preserve">
          <source>Next, let&amp;rsquo;s register it for &lt;code&gt;IntegerField&lt;/code&gt;:</source>
          <target state="translated">接下来，让我们为 &lt;code&gt;IntegerField&lt;/code&gt; 注册它：</target>
        </trans-unit>
        <trans-unit id="70a1521747b230808ef34f3a484673e2d3e2c778" translate="yes" xml:space="preserve">
          <source>Next, let&amp;rsquo;s register it:</source>
          <target state="translated">接下来，让我们注册它：</target>
        </trans-unit>
        <trans-unit id="654260d8e6502409d1293980e5369dedc75a1e08" translate="yes" xml:space="preserve">
          <source>Next, run the &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; command to install any extra needed database records such as admin permissions and content types:</source>
          <target state="translated">接下来，运行&lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;命令以安装任何其他需要的数据库记录，例如管理员权限和内容类型：</target>
        </trans-unit>
        <trans-unit id="7bd185e2faa9b778aa47cb7ad13b219b635277a4" translate="yes" xml:space="preserve">
          <source>Next, run the &lt;code&gt;configure&lt;/code&gt; script &amp;ndash; however the &lt;code&gt;CFLAGS&lt;/code&gt; environment variable needs to be customized so that SQLite knows to build the R*Tree module:</source>
          <target state="translated">接下来，运行 &lt;code&gt;configure&lt;/code&gt; 脚本-但是需要自定义 &lt;code&gt;CFLAGS&lt;/code&gt; 环境变量，以便SQLite知道要构建R * Tree模块：</target>
        </trans-unit>
        <trans-unit id="6725dcdbf417b3ebc4306851939ccba5bb592dda" translate="yes" xml:space="preserve">
          <source>Next, run the Django command-line utilities to create the database tables automatically:</source>
          <target state="translated">接下来,运行Django命令行实用程序来自动创建数据库表。</target>
        </trans-unit>
        <trans-unit id="3d2afbfa24772718392bac2a4e9a06485063aa1a" translate="yes" xml:space="preserve">
          <source>Next, start up the Django development server:</source>
          <target state="translated">接下来,启动Django开发服务器。</target>
        </trans-unit>
        <trans-unit id="71a03345430550cc7e9c59db9c5b7395c24fb91c" translate="yes" xml:space="preserve">
          <source>Next, untar the source code archive, and extract the datum shifting files in the &lt;code&gt;nad&lt;/code&gt; subdirectory. This must be done &lt;em&gt;prior&lt;/em&gt; to configuration:</source>
          <target state="translated">接下来，解压缩源代码存档，并将数据移动文件提取到 &lt;code&gt;nad&lt;/code&gt; 子目录中。必须&lt;em&gt;在&lt;/em&gt;配置&lt;em&gt;之前&lt;/em&gt;完成此操作：</target>
        </trans-unit>
        <trans-unit id="021c776346f3be3e04eaad68d47bfd2f60ac64ea" translate="yes" xml:space="preserve">
          <source>Next, we define a function called &lt;code&gt;current_datetime&lt;/code&gt;. This is the view function. Each view function takes an &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; object as its first parameter, which is typically named &lt;code&gt;request&lt;/code&gt;.</source>
          <target state="translated">接下来，我们定义一个名为 &lt;code&gt;current_datetime&lt;/code&gt; 的函数。这是视图功能。每个视图函数都将&lt;a href=&quot;../../ref/request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;对象作为其第一个参数，通常将其命名为 &lt;code&gt;request&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="285aab5cab4e6d27cc92dd179795c52e99d8e048" translate="yes" xml:space="preserve">
          <source>Next, we write the method responsible for generating the SQL:</source>
          <target state="translated">接下来,我们编写负责生成SQL的方法。</target>
        </trans-unit>
        <trans-unit id="0c7a20054827a1f65c3805460f6867fbf008e055" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll create a subdirectory for images. Create an &lt;code&gt;images&lt;/code&gt; subdirectory in the &lt;code&gt;polls/static/polls/&lt;/code&gt; directory. Inside this directory, put an image called &lt;code&gt;background.gif&lt;/code&gt;. In other words, put your image in &lt;code&gt;polls/static/polls/images/background.gif&lt;/code&gt;.</source>
          <target state="translated">接下来，我们将为图像创建一个子目录。在 &lt;code&gt;polls/static/polls/&lt;/code&gt; 目录中创建一个 &lt;code&gt;images&lt;/code&gt; 子目录。在此目录中，放入一个名为 &lt;code&gt;background.gif&lt;/code&gt; 的图像。换句话说，将您的图片放在 &lt;code&gt;polls/static/polls/images/background.gif&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="2448d8012ce49bb13b445b0d77f557096a6e430b" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll need to inform our &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; of the action. This works just like any other configuration option. So, the complete &lt;code&gt;admin.py&lt;/code&gt; with the action and its registration would look like:</source>
          <target state="translated">接下来，我们需要将该操作通知我们的&lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;。就像其他配置选项一样工作。因此，带有操作及其注册的完整 &lt;code&gt;admin.py&lt;/code&gt; 如下所示：</target>
        </trans-unit>
        <trans-unit id="96a65e04544e3b461117b55fa16483b977d28de6" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll write the &lt;code&gt;PublisherBookList&lt;/code&gt; view itself:</source>
          <target state="translated">接下来，我们将编写 &lt;code&gt;PublisherBookList&lt;/code&gt; 视图本身：</target>
        </trans-unit>
        <trans-unit id="a0e179a073e3c81a9e2691303a73447da0cb82ce" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;re going to remove our old &lt;code&gt;index&lt;/code&gt;, &lt;code&gt;detail&lt;/code&gt;, and &lt;code&gt;results&lt;/code&gt; views and use Django&amp;rsquo;s generic views instead. To do so, open the &lt;code&gt;polls/views.py&lt;/code&gt; file and change it like so:</source>
          <target state="translated">接下来，我们将删除旧的 &lt;code&gt;index&lt;/code&gt; ， &lt;code&gt;detail&lt;/code&gt; 和 &lt;code&gt;results&lt;/code&gt; 视图，并改用Django的通用视图。为此，请打开 &lt;code&gt;polls/views.py&lt;/code&gt; 文件并进行如下更改：</target>
        </trans-unit>
        <trans-unit id="5f86a40e869fcd75bbca46dc9ff1ce17defbb2ec" translate="yes" xml:space="preserve">
          <source>Next, you must replace the &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.backends.ModelBackend&quot;&gt;&lt;code&gt;ModelBackend&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.backends.RemoteUserBackend&quot;&gt;&lt;code&gt;RemoteUserBackend&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&quot;../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt;&lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="translated">接下来，则必须更换&lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.backends.ModelBackend&quot;&gt; &lt;code&gt;ModelBackend&lt;/code&gt; &lt;/a&gt;与&lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.backends.RemoteUserBackend&quot;&gt; &lt;code&gt;RemoteUserBackend&lt;/code&gt; &lt;/a&gt;在&lt;a href=&quot;../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt; &lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt; &lt;/a&gt;设置：</target>
        </trans-unit>
        <trans-unit id="f2560cbce63028d4ce27fdd2ae2588b9ae69ca1e" translate="yes" xml:space="preserve">
          <source>Nginx</source>
          <target state="translated">Nginx</target>
        </trans-unit>
        <trans-unit id="816c52fd2bdd94a63cd0944823a6c0aa9384c103" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>
        </trans-unit>
        <trans-unit id="20edec5d0ae49d85148c06bcee71d165b579befe" translate="yes" xml:space="preserve">
          <source>No arguments: All apps have all of their migrations run.</source>
          <target state="translated">没有争论。所有的应用程序都有所有的迁移运行。</target>
        </trans-unit>
        <trans-unit id="d14d96d5d8b6c42d1f07720884470a5df54ddfae" translate="yes" xml:space="preserve">
          <source>No bulletproof technical solution exists at the framework level to safely validate all user uploaded file content, however, there are some other steps you can take to mitigate these attacks:</source>
          <target state="translated">在框架层面不存在防弹的技术解决方案来安全验证所有用户上传的文件内容,然而,你还可以采取一些其他措施来减轻这些攻击。</target>
        </trans-unit>
        <trans-unit id="3d8384f7fd7da9b2b422f4c883195efb29896bda" translate="yes" xml:space="preserve">
          <source>No checking is done on the SQL statement that is passed in to &lt;code&gt;.raw()&lt;/code&gt;. Django expects that the statement will return a set of rows from the database, but does nothing to enforce that. If the query does not return rows, a (possibly cryptic) error will result.</source>
          <target state="translated">不会检查传递给 &lt;code&gt;.raw()&lt;/code&gt; 的SQL语句。Django希望该语句将从数据库中返回一组行，但是不执行任何操作。如果查询不返回行，则将导致（可能是神秘的）错误。</target>
        </trans-unit>
        <trans-unit id="3b1825829e0d568b54e3f2738dbb38d3f1fe4df1" translate="yes" xml:space="preserve">
          <source>No gettext?</source>
          <target state="translated">没有得到文本?</target>
        </trans-unit>
        <trans-unit id="77e07c3be309fde63eb2e14702370190c908a04a" translate="yes" xml:space="preserve">
          <source>No matter which database backend we are using, this will mean that &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; and other SQL commands create the right column type for storing a string.</source>
          <target state="translated">无论我们使用哪个数据库后端，这都意味着&lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;和其他SQL命令创建正确的列类型来存储字符串。</target>
        </trans-unit>
        <trans-unit id="12930b65de7726f62fe80a0b6083ac02553c2c82" translate="yes" xml:space="preserve">
          <source>No referrer: do not send a &lt;code&gt;Referer&lt;/code&gt; header at all.</source>
          <target state="translated">无引荐网址：不发送 &lt;code&gt;Referer&lt;/code&gt; 的所有头。</target>
        </trans-unit>
        <trans-unit id="4a2f33f43afb49828b5490390f091674882fcb65" translate="yes" xml:space="preserve">
          <source>No safety guarantee</source>
          <target state="translated">无安全保证</target>
        </trans-unit>
        <trans-unit id="5d4134379c894768a5b0b531aeca8ad07511ff4d" translate="yes" xml:space="preserve">
          <source>No, that&amp;rsquo;s not a typo: the &amp;ldquo;update&amp;rdquo; middleware must be first in the list, and the &amp;ldquo;fetch&amp;rdquo; middleware must be last. The details are a bit obscure, but see &lt;a href=&quot;#order-of-middleware&quot;&gt;Order of MIDDLEWARE&lt;/a&gt; below if you&amp;rsquo;d like the full story.</source>
          <target state="translated">不，这不是一个错字：列表中的&amp;ldquo;更新&amp;rdquo;中间件必须位于第一个，&amp;ldquo;获取&amp;rdquo;中间件必须位于最后。细节有些晦涩，但是如果您想了解完整的故事，请参阅下面&lt;a href=&quot;#order-of-middleware&quot;&gt;的MIDDLEWARE顺序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0bae75e75a1d8c0944e2819de3d77ea82e28a278" translate="yes" xml:space="preserve">
          <source>No, this is by design. Not linking CSRF protection to a session allows using the protection on sites such as a &lt;code&gt;pastebin&lt;/code&gt; that allow submissions from anonymous users which don&amp;rsquo;t have a session.</source>
          <target state="translated">不，这是设计使然。不将CSRF保护链接到会话允许在站点上使用保护，例如 &lt;code&gt;pastebin&lt;/code&gt; ，该站点允许来自没有会话的匿名用户的提交。</target>
        </trans-unit>
        <trans-unit id="75a6e20e5d3d2a956555b09b0ceec04066703569" translate="yes" xml:space="preserve">
          <source>No, this is by design. Without a man-in-the-middle attack, there is no way for an attacker to send a CSRF token cookie to a victim&amp;rsquo;s browser, so a successful attack would need to obtain the victim&amp;rsquo;s browser&amp;rsquo;s cookie via XSS or similar, in which case an attacker usually doesn&amp;rsquo;t need CSRF attacks.</source>
          <target state="translated">不，这是设计使然。如果没有中间人攻击，攻击者就无法将CSRF令牌cookie发送到受害者的浏览器，因此，成功的攻击将需要通过XSS或类似方法获取受害者的浏览器的cookie。攻击者通常不需要CSRF攻击。</target>
        </trans-unit>
        <trans-unit id="bd0b455c46e5ca610bef77120da2e5ba9eaebc54" translate="yes" xml:space="preserve">
          <source>Non-atomic migrations</source>
          <target state="translated">非原子迁移</target>
        </trans-unit>
        <trans-unit id="69833b38232d3e89572bdb6759074b9ad006c98c" translate="yes" xml:space="preserve">
          <source>Non-field errors (and/or hidden field errors that are rendered at the top of the form when using helpers like &lt;code&gt;form.as_p()&lt;/code&gt;) will be rendered with an additional class of &lt;code&gt;nonfield&lt;/code&gt; to help distinguish them from field-specific errors. For example, &lt;code&gt;{{ form.non_field_errors }}&lt;/code&gt; would look like:</source>
          <target state="translated">非字段错误（和/或使用诸如 &lt;code&gt;form.as_p()&lt;/code&gt; 之类的助手时在表单顶部显示的隐藏字段错误）将通过附加的 &lt;code&gt;nonfield&lt;/code&gt; 字段类来呈现，以帮助将其与特定于字段的错误区分开。例如， &lt;code&gt;{{ form.non_field_errors }}&lt;/code&gt; 如下所示：</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="c32acd7553559b10b098232e03fd1062116c6e62" translate="yes" xml:space="preserve">
          <source>None of this is true in a time zone aware environment:</source>
          <target state="translated">在时区感知的环境中,这些都不是真的。</target>
        </trans-unit>
        <trans-unit id="6c905dba689783614e7cd8189d7380a8142bf699" translate="yes" xml:space="preserve">
          <source>Normal Python name resolution rules apply. If you have multiple base classes that declare a &lt;code&gt;Meta&lt;/code&gt; inner class, only the first one will be used. This means the child&amp;rsquo;s &lt;code&gt;Meta&lt;/code&gt;, if it exists, otherwise the &lt;code&gt;Meta&lt;/code&gt; of the first parent, etc.</source>
          <target state="translated">正常的Python名称解析规则适用。如果您有多个声明 &lt;code&gt;Meta&lt;/code&gt; 内部类的基类，则仅使用第一个。这意味着孩子的 &lt;code&gt;Meta&lt;/code&gt; （如果存在），否则是第一个父级的 &lt;code&gt;Meta&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="787e251fceb20e20f58285f09344abec1dac3b8e" translate="yes" xml:space="preserve">
          <source>Normal Python unit test classes extend a base class of &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt;. Django provides a few extensions of this base class:</source>
          <target state="translated">普通的Python单元测试类扩展了&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt;的基类。Django提供了一些对该基类的扩展：</target>
        </trans-unit>
        <trans-unit id="1ad536357eed7c72cb7dc875d4df958bc22cdd9b" translate="yes" xml:space="preserve">
          <source>Normalizes email addresses by lowercasing the domain portion of the email address.</source>
          <target state="translated">通过将电子邮件地址的域名部分小写化来规范电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="d2bd9144908a9d20be8073dbbaa165af1378fd10" translate="yes" xml:space="preserve">
          <source>Normalizes the email by calling &lt;a href=&quot;#django.contrib.auth.models.BaseUserManager.normalize_email&quot;&gt;&lt;code&gt;BaseUserManager.normalize_email()&lt;/code&gt;&lt;/a&gt;. If you override this method, be sure to call &lt;code&gt;super()&lt;/code&gt; to retain the normalization.</source>
          <target state="translated">通过调用&lt;a href=&quot;#django.contrib.auth.models.BaseUserManager.normalize_email&quot;&gt; &lt;code&gt;BaseUserManager.normalize_email()&lt;/code&gt; &lt;/a&gt;标准化电子邮件。如果重写此方法，请确保调用 &lt;code&gt;super()&lt;/code&gt; 以保留规范化。</target>
        </trans-unit>
        <trans-unit id="ebca8d3e7cb9434f28975cda931653991094e57c" translate="yes" xml:space="preserve">
          <source>Normalizes the username by calling &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser.normalize_username&quot;&gt;&lt;code&gt;normalize_username()&lt;/code&gt;&lt;/a&gt;. If you override this method, be sure to call &lt;code&gt;super()&lt;/code&gt; to retain the normalization.</source>
          <target state="translated">通过调用&lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser.normalize_username&quot;&gt; &lt;code&gt;normalize_username()&lt;/code&gt; &lt;/a&gt;标准化用户名。如果重写此方法，请确保调用 &lt;code&gt;super()&lt;/code&gt; 以保留规范化。</target>
        </trans-unit>
        <trans-unit id="c716c10654bb0f9670d96ab83c4ff9181bbc894e" translate="yes" xml:space="preserve">
          <source>Normalizes to: A &lt;a href=&quot;https://docs.python.org/3/library/uuid.html#uuid.UUID&quot;&gt;&lt;code&gt;UUID&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">标准化为：一个&lt;a href=&quot;https://docs.python.org/3/library/uuid.html#uuid.UUID&quot;&gt; &lt;code&gt;UUID&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="23571b266e909356ef73bc9292429433256272f7" translate="yes" xml:space="preserve">
          <source>Normalizes to: A &lt;code&gt;QuerySet&lt;/code&gt; of model instances.</source>
          <target state="translated">规范化为：模型实例的 &lt;code&gt;QuerySet&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8db01bd92878bf8c9d9ba50bf01d544d075050e" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">标准化为：Python &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f06883286dbd9b7a7366dcec2b203da4a388e3d8" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; value.</source>
          <target state="translated">规范化为：Python的 &lt;code&gt;True&lt;/code&gt; 或 &lt;code&gt;False&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="d4886d2a0f53043db52f5cde8feddfa0bc26c7b2" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;False&lt;/code&gt; or &lt;code&gt;None&lt;/code&gt; value.</source>
          <target state="translated">标准化为：Python的 &lt;code&gt;True&lt;/code&gt; ， &lt;code&gt;False&lt;/code&gt; 或 &lt;code&gt;None&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="605b63bef291da49b100f180cd452f4da48ba0c9" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python &lt;code&gt;datetime.date&lt;/code&gt; object.</source>
          <target state="translated">规范化为：Python &lt;code&gt;datetime.date&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="9ca92c54da10e1d5c685996a1b8233213ac1d451" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python &lt;code&gt;datetime.datetime&lt;/code&gt; object.</source>
          <target state="translated">规范化为：Python &lt;code&gt;datetime.datetime&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="f27a4c57bf6c2c00615c6bd981ee576ffc7d62f7" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python &lt;code&gt;datetime.time&lt;/code&gt; object.</source>
          <target state="translated">规范化为：Python &lt;code&gt;datetime.time&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="8208bd6963bb476e18fec3f6260c3df00f3671a6" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python &lt;code&gt;decimal&lt;/code&gt;.</source>
          <target state="translated">标准化为：Python &lt;code&gt;decimal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77e22ea42119f399cbae9e4153b4d1808eaee60c" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python float.</source>
          <target state="translated">归一化为。一个Python float。</target>
        </trans-unit>
        <trans-unit id="3a1c8382df016399dc527e0652beec43e30a44b8" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python integer.</source>
          <target state="translated">归一化为。一个Python整数。</target>
        </trans-unit>
        <trans-unit id="a22741f23a65dd20cd7fdbc9a7d00afdfb0db9cf" translate="yes" xml:space="preserve">
          <source>Normalizes to: A list of strings.</source>
          <target state="translated">归一化为。一个字符串列表。</target>
        </trans-unit>
        <trans-unit id="03edfdc79677e527c568c032a0794b48135d3b8f" translate="yes" xml:space="preserve">
          <source>Normalizes to: A list of values of the type provided by the &lt;code&gt;coerce&lt;/code&gt; argument.</source>
          <target state="translated">标准化为： &lt;code&gt;coerce&lt;/code&gt; 参数提供的类型的值列表。</target>
        </trans-unit>
        <trans-unit id="7a4cda7e66de907da2a21e509ad56f05074178a7" translate="yes" xml:space="preserve">
          <source>Normalizes to: A model instance.</source>
          <target state="translated">归一化为。一个模型实例。</target>
        </trans-unit>
        <trans-unit id="55888b9b4ff1eb1ec8ba6a3bbc52308ac1adbfc2" translate="yes" xml:space="preserve">
          <source>Normalizes to: A string.</source>
          <target state="translated">归一化为。一个字符串。</target>
        </trans-unit>
        <trans-unit id="24a53ad769cff7f9d766b78fc9dcb56af2255d2e" translate="yes" xml:space="preserve">
          <source>Normalizes to: A string. IPv6 addresses are normalized as described below.</source>
          <target state="translated">归一化为。一个字符串。IPv6地址的归一化如下所述。</target>
        </trans-unit>
        <trans-unit id="f17a7f7bab37ec3a1b4b6f3ae02f34271a88be2a" translate="yes" xml:space="preserve">
          <source>Normalizes to: A value of the type provided by the &lt;a href=&quot;#django.forms.TypedChoiceField.coerce&quot;&gt;&lt;code&gt;coerce&lt;/code&gt;&lt;/a&gt; argument.</source>
          <target state="translated">标准化为：&lt;a href=&quot;#django.forms.TypedChoiceField.coerce&quot;&gt; &lt;code&gt;coerce&lt;/code&gt; &lt;/a&gt;参数提供的类型的值。</target>
        </trans-unit>
        <trans-unit id="8e7beb335ed1ad3ce19afe6d6855d444ffea421d" translate="yes" xml:space="preserve">
          <source>Normalizes to: An &lt;code&gt;UploadedFile&lt;/code&gt; object that wraps the file content and file name into a single object.</source>
          <target state="translated">规范化为：一个 &lt;code&gt;UploadedFile&lt;/code&gt; 对象，它将文件内容和文件名包装到一个对象中。</target>
        </trans-unit>
        <trans-unit id="4e7bc8818cf68569ca76c5ed75dcf2518442499f" translate="yes" xml:space="preserve">
          <source>Normalizes to: the type returned by the &lt;code&gt;compress&lt;/code&gt; method of the subclass.</source>
          <target state="translated">标准化为：子类的 &lt;code&gt;compress&lt;/code&gt; 方法返回的类型。</target>
        </trans-unit>
        <trans-unit id="4ed9d7700d72a59a0582b3f18f6a1b3e16b71b15" translate="yes" xml:space="preserve">
          <source>Normally the &lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt;&lt;code&gt;csrf_token&lt;/code&gt;&lt;/a&gt; template tag will not work if &lt;code&gt;CsrfViewMiddleware.process_view&lt;/code&gt; or an equivalent like &lt;code&gt;csrf_protect&lt;/code&gt; has not run. The view decorator &lt;code&gt;requires_csrf_token&lt;/code&gt; can be used to ensure the template tag does work. This decorator works similarly to &lt;code&gt;csrf_protect&lt;/code&gt;, but never rejects an incoming request.</source>
          <target state="translated">通常，如果 &lt;code&gt;CsrfViewMiddleware.process_view&lt;/code&gt; 或诸如 &lt;code&gt;csrf_protect&lt;/code&gt; 之类的等效项未运行，则&lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt; &lt;code&gt;csrf_token&lt;/code&gt; &lt;/a&gt;模板标记将不起作用。视图装饰 &lt;code&gt;requires_csrf_token&lt;/code&gt; 可以用来确保模板标签不工作。该装饰器的工作方式与 &lt;code&gt;csrf_protect&lt;/code&gt; 相似，但是从不拒绝传入的请求。</target>
        </trans-unit>
        <trans-unit id="cdf12ca4e299dccc08f02ece3bea84cff2a538e5" translate="yes" xml:space="preserve">
          <source>Normally the template name is relative to the template loader&amp;rsquo;s root directory. A string argument may also be a relative path starting with &lt;code&gt;./&lt;/code&gt; or &lt;code&gt;../&lt;/code&gt; as described in the &lt;a href=&quot;#std:templatetag-extends&quot;&gt;&lt;code&gt;extends&lt;/code&gt;&lt;/a&gt; tag.</source>
          <target state="translated">通常，模板名称是相对于模板加载器的根目录而言的。字符串自变量也可以是相对路径，以 &lt;code&gt;./&lt;/code&gt; 或 &lt;code&gt;../&lt;/code&gt; 开头，如&lt;a href=&quot;#std:templatetag-extends&quot;&gt; &lt;code&gt;extends&lt;/code&gt; &lt;/a&gt;标记中所述。</target>
        </trans-unit>
        <trans-unit id="735ce792d80ea48985a0c3c2c332b181a7542837" translate="yes" xml:space="preserve">
          <source>Normally the template name is relative to the template loader&amp;rsquo;s root directory. A string argument may also be a relative path starting with &lt;code&gt;./&lt;/code&gt; or &lt;code&gt;../&lt;/code&gt;. For example, assume the following directory structure:</source>
          <target state="translated">通常，模板名称是相对于模板加载器的根目录而言的。字符串参数也可以是以 &lt;code&gt;./&lt;/code&gt; 或 &lt;code&gt;../&lt;/code&gt; 开头的相对路径。例如，假定以下目录结构：</target>
        </trans-unit>
        <trans-unit id="2dd3dec7507f373967972687c007b5c2f2200db3" translate="yes" xml:space="preserve">
          <source>Normally you&amp;rsquo;ll only be adding extra tables that don&amp;rsquo;t already appear in the query. However, if the case outlined above does occur, there are a few solutions. First, see if you can get by without including the extra table and use the one already in the query. If that isn&amp;rsquo;t possible, put your &lt;code&gt;extra()&lt;/code&gt; call at the front of the queryset construction so that your table is the first use of that table. Finally, if all else fails, look at the query produced and rewrite your &lt;code&gt;where&lt;/code&gt; addition to use the alias given to your extra table. The alias will be the same each time you construct the queryset in the same way, so you can rely upon the alias name to not change.</source>
          <target state="translated">通常，您只会添加查询中未显示的其他表。但是，如果确实发生上述情况，则有一些解决方案。首先，看看是否可以不包含多余的表而使用查询中已经存在的表。如果这不可能，请将您的 &lt;code&gt;extra()&lt;/code&gt; 调用放在queryset结构的最前面，以便您的表是该表的首次使用。最后，如果其他所有方法均失败，请查看生成的查询并重写您的 &lt;code&gt;where&lt;/code&gt; 附加项，以使用为您的额外表提供的别名。每次以相同的方式构造查询集时，别名都将相同，因此您可以依靠别名来进行更改。</target>
        </trans-unit>
        <trans-unit id="4f40a32d698fbe63e70a0ff00283bd488789116d" translate="yes" xml:space="preserve">
          <source>Normally, objects have three save options: &amp;ldquo;Save&amp;rdquo;, &amp;ldquo;Save and continue editing&amp;rdquo;, and &amp;ldquo;Save and add another&amp;rdquo;. If &lt;code&gt;save_as&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, &amp;ldquo;Save and add another&amp;rdquo; will be replaced by a &amp;ldquo;Save as new&amp;rdquo; button that creates a new object (with a new ID) rather than updating the existing object.</source>
          <target state="translated">通常，对象具有三个保存选项：&amp;ldquo;保存&amp;rdquo;，&amp;ldquo;保存并继续编辑&amp;rdquo;和&amp;ldquo;保存并添加另一个&amp;rdquo;。如果 &lt;code&gt;save_as&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ，则将 &amp;ldquo;保存并添加另一个&amp;rdquo;替换为&amp;ldquo;另存为新&amp;rdquo;按钮，该按钮可创建新对象（具有新ID）而不是更新现有对象。</target>
        </trans-unit>
        <trans-unit id="fc1a750f10e8d842b641d322f43c6420831581c7" translate="yes" xml:space="preserve">
          <source>Normally, the save buttons appear only at the bottom of the forms. If you set &lt;code&gt;save_on_top&lt;/code&gt;, the buttons will appear both on the top and the bottom.</source>
          <target state="translated">通常，保存按钮仅出现在表单底部。如果设置 &lt;code&gt;save_on_top&lt;/code&gt; ，则按钮将同时显示在顶部和底部。</target>
        </trans-unit>
        <trans-unit id="159f39779a59cc0691baa39db4014b657a742b47" translate="yes" xml:space="preserve">
          <source>Normally, you should always use &lt;a href=&quot;#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; to define URLs within your application. However, if your application constructs part of the URL hierarchy itself, you may occasionally need to generate URLs. In that case, you need to be able to find the base URL of the Django project within its Web server (normally, &lt;a href=&quot;#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; takes care of this for you). In that case, you can call &lt;code&gt;get_script_prefix()&lt;/code&gt;, which will return the script prefix portion of the URL for your Django project. If your Django project is at the root of its web server, this is always &lt;code&gt;&quot;/&quot;&lt;/code&gt;.</source>
          <target state="translated">通常，您应该始终使用&lt;a href=&quot;#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt;在应用程序中定义URL。但是，如果您的应用程序本身构成了URL层次结构的一部分，则有时可能需要生成URL。在这种情况下，您需要能够在其Web服务器中找到Django项目的基本URL（通常，&lt;a href=&quot;#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt;会为您完成此工作）。在这种情况下，您可以调用 &lt;code&gt;get_script_prefix()&lt;/code&gt; ，这将返回Django项目URL的脚本前缀部分。如果您的Django项目位于其Web服务器的根目录下，则始终为 &lt;code&gt;&quot;/&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e93810e7ce2337ee98760b872339538f911e403d" translate="yes" xml:space="preserve">
          <source>Normally, you will not need to override the defaults in this fashion. The Django defaults are sufficiently tame that you can safely use them. Be aware that if you do pass in a new default module, it entirely &lt;em&gt;replaces&lt;/em&gt; the Django defaults, so you must specify a value for every possible setting that might be used in that code you are importing. Check in &lt;code&gt;django.conf.settings.global_settings&lt;/code&gt; for the full list.</source>
          <target state="translated">通常，您无需以这种方式覆盖默认值。Django默认值足够驯服，您可以放心使用它们。请注意，如果您确实传入了一个新的默认模块，它将完全&lt;em&gt;替换&lt;/em&gt; Django默认值，因此您必须为要导入的代码中可能使用的每个可能的设置指定一个值。检入 &lt;code&gt;django.conf.settings.global_settings&lt;/code&gt; 中的完整列表。</target>
        </trans-unit>
        <trans-unit id="0bf43317eddd783b9efbccb3bf152e0b1cdb043f" translate="yes" xml:space="preserve">
          <source>Normally, you won&amp;rsquo;t have to worry about lazy translations. Just be aware that if you examine an object and it claims to be a &lt;code&gt;django.utils.functional.__proxy__&lt;/code&gt; object, it is a lazy translation. Calling &lt;code&gt;str()&lt;/code&gt; with the lazy translation as the argument will generate a string in the current locale.</source>
          <target state="translated">通常，您不必担心懒惰的翻译。请注意，如果您检查一个对象并且声称它是 &lt;code&gt;django.utils.functional.__proxy__&lt;/code&gt; 对象，则它是一个懒惰的翻译。以惰性翻译作为参数调用 &lt;code&gt;str()&lt;/code&gt; 将在当前语言环境中生成一个字符串。</target>
        </trans-unit>
        <trans-unit id="887896ca3cf9796c1df0cd00c7595e083f030487" translate="yes" xml:space="preserve">
          <source>Normally, you&amp;rsquo;ll only need to use &lt;code&gt;force_str()&lt;/code&gt;. Call it as early as possible on any input data that might be either a string or a bytestring, and from then on, you can treat the result as always being a string.</source>
          <target state="translated">通常，您只需要使用 &lt;code&gt;force_str()&lt;/code&gt; 即可。在可能是字符串或字节字符串的任何输入数据上尽早调用它，然后，您就可以将结果始终视为字符串。</target>
        </trans-unit>
        <trans-unit id="f226bb2d80ebbb2763506939a29736102f7ef23d" translate="yes" xml:space="preserve">
          <source>Normally, you&amp;rsquo;re either writing a Django field to match a particular database column type, or you will need a way to convert your data to, say, a string.</source>
          <target state="translated">通常，您正在编写Django字段以匹配特定的数据库列类型，或者您将需要一种将数据转换为字符串的方法。</target>
        </trans-unit>
        <trans-unit id="ce4466a62d04187676c02df4614fbce2c4ba7436" translate="yes" xml:space="preserve">
          <source>Not all backends support all functions, so refer to the documentation of each function to see if your database backend supports the function you want to use. If you call a geographic function on a backend that doesn&amp;rsquo;t support it, you&amp;rsquo;ll get a &lt;code&gt;NotImplementedError&lt;/code&gt; exception.</source>
          <target state="translated">并非所有后端都支持所有功能，因此请参考每个功能的文档，以查看数据库后端是否支持要使用的功能。如果在不支持该功能的后端上调用地理功能，则会收到 &lt;code&gt;NotImplementedError&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="d9b293fdef69d661a6a9fab7edba5fc8c10298b9" translate="yes" xml:space="preserve">
          <source>Not all features of the &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; class are available through the &lt;a href=&quot;#django.core.mail.send_mail&quot;&gt;&lt;code&gt;send_mail()&lt;/code&gt;&lt;/a&gt; and related wrapper functions. If you wish to use advanced features, such as BCC&amp;rsquo;ed recipients, file attachments, or multi-part email, you&amp;rsquo;ll need to create &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; instances directly.</source>
          <target state="translated">并非通过&lt;a href=&quot;#django.core.mail.send_mail&quot;&gt; &lt;code&gt;send_mail()&lt;/code&gt; &lt;/a&gt;和相关的包装函数可以使用&lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;类的所有功能。如果您希望使用高级功能，例如密件抄送收件人，文件附件或多部分电子邮件，则需要直接创建&lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="affd0634cea2588f77f986208d4ea492e34b7daf" translate="yes" xml:space="preserve">
          <source>Not all mixins can be used together, and not all generic class based views can be used with all other mixins. Here we present a few examples that do work; if you want to bring together other functionality then you&amp;rsquo;ll have to consider interactions between attributes and methods that overlap between the different classes you&amp;rsquo;re using, and how &lt;a href=&quot;https://www.python.org/download/releases/2.3/mro/&quot;&gt;method resolution order&lt;/a&gt; will affect which versions of the methods will be called in what order.</source>
          <target state="translated">并非所有mixin都可以一起使用，也不是所有基于通用类的视图都可以与所有其他mixin一起使用。在这里，我们提供了一些可行的示例。如果要合并其他功能，则必须考虑使用的不同类之间重叠的属性和方法之间的交互，以及&lt;a href=&quot;https://www.python.org/download/releases/2.3/mro/&quot;&gt;方法解析顺序&lt;/a&gt;将如何影响以何种顺序调用哪些版本的方法。</target>
        </trans-unit>
        <trans-unit id="391ee549e2bdb434e349e78237a5df19f1d67675" translate="yes" xml:space="preserve">
          <source>Not contained within. This is the negation of the &lt;code&gt;in&lt;/code&gt; operator.</source>
          <target state="translated">不包含在其中。这是 &lt;code&gt;in&lt;/code&gt; 运算符的取反。</target>
        </trans-unit>
        <trans-unit id="d73f1f8457b1700a505f1a5f8a7aa88ca0436156" translate="yes" xml:space="preserve">
          <source>Not every &lt;code&gt;QuerySet&lt;/code&gt; method makes sense at the &lt;code&gt;Manager&lt;/code&gt; level; for instance we intentionally prevent the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt;&lt;code&gt;QuerySet.delete()&lt;/code&gt;&lt;/a&gt; method from being copied onto the &lt;code&gt;Manager&lt;/code&gt; class.</source>
          <target state="translated">并非每个 &lt;code&gt;QuerySet&lt;/code&gt; 方法在 &lt;code&gt;Manager&lt;/code&gt; 级别都有意义。例如，我们有意防止&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt; &lt;code&gt;QuerySet.delete()&lt;/code&gt; &lt;/a&gt;方法复制到 &lt;code&gt;Manager&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="a63cbf6b4d6edab9e07d126c7a36e814a81f1ec6" translate="yes" xml:space="preserve">
          <source>Not every template in &lt;code&gt;contrib/admin/templates/admin&lt;/code&gt; may be overridden per app or per model. The following can:</source>
          <target state="translated">并非每个应用程序或每个模型都可以覆盖 &lt;code&gt;contrib/admin/templates/admin&lt;/code&gt; 中的每个模板。以下可以：</target>
        </trans-unit>
        <trans-unit id="2fc7fe98cf64c700ce9b0cc4bb17c0caec7c3361" translate="yes" xml:space="preserve">
          <source>Not represented in the form</source>
          <target state="translated">未以格式表示</target>
        </trans-unit>
        <trans-unit id="d3f69563db3e7715296e2ae2d359c0c8bdd2cce0" translate="yes" xml:space="preserve">
          <source>Not using Django templates?</source>
          <target state="translated">没有使用Django模板?</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="296473149ccc264ba7b462302f22e07ee1613215" translate="yes" xml:space="preserve">
          <source>Note &lt;code&gt;{{ article.pub_date|date:&quot;F j, Y&quot; }}&lt;/code&gt; uses a Unix-style &amp;ldquo;pipe&amp;rdquo; (the &amp;ldquo;|&amp;rdquo; character). This is called a template filter, and it&amp;rsquo;s a way to filter the value of a variable. In this case, the date filter formats a Python datetime object in the given format (as found in PHP&amp;rsquo;s date function).</source>
          <target state="translated">注意 &lt;code&gt;{{ article.pub_date|date:&quot;F j, Y&quot; }}&lt;/code&gt; 使用Unix风格的&amp;ldquo; pipe&amp;rdquo;（&amp;ldquo; |&amp;rdquo;字符）。这称为模板过滤器，它是一种过滤变量值的方法。在这种情况下，日期过滤器会以给定格式（如PHP的date函数中所示）格式化Python datetime对象。</target>
        </trans-unit>
        <trans-unit id="870a794d4d0468102a15a5fa5bb46615f6e62898" translate="yes" xml:space="preserve">
          <source>Note a few important things about how the test client works:</source>
          <target state="translated">注意测试客户端工作的几个重要事项。</target>
        </trans-unit>
        <trans-unit id="5da84070f0015820b57bc36610be733ca3294c24" translate="yes" xml:space="preserve">
          <source>Note also that Django stores signal handlers as weak references by default, so if your handler is a local function, it may be garbage collected. To prevent this, pass &lt;code&gt;weak=False&lt;/code&gt; when you call the signal&amp;rsquo;s &lt;a href=&quot;../topics/signals#django.dispatch.Signal.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另请注意，默认情况下，Django将信号处理程序存储为弱引用，因此，如果处理程序是本地函数，则可能会被垃圾回收。为了防止这种情况，请在调用信号的&lt;a href=&quot;../topics/signals#django.dispatch.Signal.connect&quot;&gt; &lt;code&gt;connect()&lt;/code&gt; &lt;/a&gt;时传递 &lt;code&gt;weak=False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14299bd3cea26d7db0d4aabfc73b1f096d5551d9" translate="yes" xml:space="preserve">
          <source>Note also that while the MAC can guarantee the authenticity of the data (that it was generated by your site, and not someone else), and the integrity of the data (that it is all there and correct), it cannot guarantee freshness i.e. that you are being sent back the last thing you sent to the client. This means that for some uses of session data, the cookie backend might open you up to &lt;a href=&quot;https://en.wikipedia.org/wiki/Replay_attack&quot;&gt;replay attacks&lt;/a&gt;. Unlike other session backends which keep a server-side record of each session and invalidate it when a user logs out, cookie-based sessions are not invalidated when a user logs out. Thus if an attacker steals a user&amp;rsquo;s cookie, they can use that cookie to login as that user even if the user logs out. Cookies will only be detected as &amp;lsquo;stale&amp;rsquo; if they are older than your &lt;a href=&quot;../../ref/settings#std:setting-SESSION_COOKIE_AGE&quot;&gt;&lt;code&gt;SESSION_COOKIE_AGE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">还请注意，虽然MAC可以保证数据的真实性（它是由您的站点生成的，而不是其他人生成的），以及数据的完整性（它是全部并且正确的），但它不能保证数据的新鲜度，即您将被发送回您发送给客户端的最后一件事。这意味着对于会话数据的某些用途，Cookie后端可能会使您&lt;a href=&quot;https://en.wikipedia.org/wiki/Replay_attack&quot;&gt;重播攻击&lt;/a&gt;。与其他会话后端不同，该后端保留每个会话的服务器端记录并在用户注销时使其无效，而基于cookie的会话在用户注销时不会无效。因此，如果攻击者窃取了用户的cookie，则即使用户注销了，他们也可以使用该cookie登录该用户。如果Cookie的年龄超过您的&lt;a href=&quot;../../ref/settings#std:setting-SESSION_COOKIE_AGE&quot;&gt; &lt;code&gt;SESSION_COOKIE_AGE&lt;/code&gt; ,&lt;/a&gt;则它们只会被检测为&amp;ldquo;陈旧&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="a33d9580056f5d9f9ef0f3f8d807edc652ece048" translate="yes" xml:space="preserve">
          <source>Note also that you can only inherit from one generic view - that is, only one parent class may inherit from &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; and the rest (if any) should be mixins. Trying to inherit from more than one class that inherits from &lt;code&gt;View&lt;/code&gt; - for example, trying to use a form at the top of a list and combining &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ProcessFormView&quot;&gt;&lt;code&gt;ProcessFormView&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; - won&amp;rsquo;t work as expected.</source>
          <target state="translated">还要注意，您只能从一个通用视图继承-也就是说，只有一个父类可以从&lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt;继承，其余的（如果有的话）应该是mixins。尝试从多个继承自 &lt;code&gt;View&lt;/code&gt; 的类中进行继承-例如，尝试使用列表顶部的表单并将&lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ProcessFormView&quot;&gt; &lt;code&gt;ProcessFormView&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt;结合使用-不会按预期工作。</target>
        </trans-unit>
        <trans-unit id="9582cd85442dd5db57f039a1ee4d57e14418eb91" translate="yes" xml:space="preserve">
          <source>Note also, that if you delete an object that has a &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt;&lt;code&gt;GenericRelation&lt;/code&gt;&lt;/a&gt;, any objects which have a &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt;&lt;code&gt;GenericForeignKey&lt;/code&gt;&lt;/a&gt; pointing at it will be deleted as well. In the example above, this means that if a &lt;code&gt;Bookmark&lt;/code&gt; object were deleted, any &lt;code&gt;TaggedItem&lt;/code&gt; objects pointing at it would be deleted at the same time.</source>
          <target state="translated">还要注意，如果删除具有&lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt; &lt;code&gt;GenericRelation&lt;/code&gt; &lt;/a&gt;的对象，则任何具有&lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt; &lt;code&gt;GenericForeignKey&lt;/code&gt; &lt;/a&gt;指向它的对象也将被删除。在上面的示例中，这意味着如果删除了 &lt;code&gt;Bookmark&lt;/code&gt; 对象，则指向该对象的所有 &lt;code&gt;TaggedItem&lt;/code&gt; 对象都将被同时删除。</target>
        </trans-unit>
        <trans-unit id="afb22d70274d73a3af0a11a9efbc7601c6cffe84" translate="yes" xml:space="preserve">
          <source>Note however that not all these methods are required and may be deliberately omitted. As it happens, it is possible to leave each method unimplemented and still have a working Storage.</source>
          <target state="translated">但是请注意,并非所有这些方法都是必需的,可能会被故意省略。碰巧的是,可以不执行每一个方法,而仍然有一个工作的存储。</target>
        </trans-unit>
        <trans-unit id="a281167ca6f3f3d6ce6cf851b7d39c49313bd017" translate="yes" xml:space="preserve">
          <source>Note on performance</source>
          <target state="translated">关于业绩的说明</target>
        </trans-unit>
        <trans-unit id="8edc7ffdd6f4a3b096034148187e765e050e9ef8" translate="yes" xml:space="preserve">
          <source>Note that &amp;ldquo;bar&amp;rdquo; in a template expression like &lt;code&gt;{{ foo.bar }}&lt;/code&gt; will be interpreted as a literal string and not using the value of the variable &amp;ldquo;bar&amp;rdquo;, if one exists in the template context.</source>
          <target state="translated">请注意，如果模板上下文中存在模板表达式，例如 &lt;code&gt;{{ foo.bar }}&lt;/code&gt; 中的&amp;ldquo; bar&amp;rdquo; 将被解释为文字字符串，而不使用变量&amp;ldquo; bar&amp;rdquo;的值。</target>
        </trans-unit>
        <trans-unit id="afe31081e1c0a0c22ce8c03c79b6e9fe781b5cdf" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#django.contrib.auth.decorators.permission_required&quot;&gt;&lt;code&gt;permission_required()&lt;/code&gt;&lt;/a&gt; also takes an optional &lt;code&gt;login_url&lt;/code&gt; parameter:</source>
          <target state="translated">请注意，&lt;a href=&quot;#django.contrib.auth.decorators.permission_required&quot;&gt; &lt;code&gt;permission_required()&lt;/code&gt; &lt;/a&gt;还带有可选的 &lt;code&gt;login_url&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="5935aa7699bc39ae3d2e0a6a74be308015833cce" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#django.contrib.auth.logout&quot;&gt;&lt;code&gt;logout()&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t throw any errors if the user wasn&amp;rsquo;t logged in.</source>
          <target state="translated">请注意，如果未登录用户，则&lt;a href=&quot;#django.contrib.auth.logout&quot;&gt; &lt;code&gt;logout()&lt;/code&gt; &lt;/a&gt;不会引发任何错误。</target>
        </trans-unit>
        <trans-unit id="d5a560efe9ed69acab07d99a89a77ed4ccc33f23" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#std:setting-EMAIL_USE_TLS&quot;&gt;&lt;code&gt;EMAIL_USE_TLS&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#std:setting-EMAIL_USE_SSL&quot;&gt;&lt;code&gt;EMAIL_USE_SSL&lt;/code&gt;&lt;/a&gt; are mutually exclusive, so only set one of those settings to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">请注意，&lt;a href=&quot;#std:setting-EMAIL_USE_TLS&quot;&gt; &lt;code&gt;EMAIL_USE_TLS&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;#std:setting-EMAIL_USE_SSL&quot;&gt; &lt;code&gt;EMAIL_USE_SSL&lt;/code&gt; &lt;/a&gt;是互斥的，因此只能将其中一项设置为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3a5ff144d4383f6e080bcaf3e8709508673fa55" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; is the only &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; method that is not exposed on a &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; itself. This is a safety mechanism to prevent you from accidentally requesting &lt;code&gt;Entry.objects.delete()&lt;/code&gt;, and deleting &lt;em&gt;all&lt;/em&gt; the entries. If you &lt;em&gt;do&lt;/em&gt; want to delete all the objects, then you have to explicitly request a complete query set:</source>
          <target state="translated">请注意，&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt;是唯一未在&lt;a href=&quot;managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt;本身上公开的&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;方法。这是一种安全机制，可防止您意外地请求 &lt;code&gt;Entry.objects.delete()&lt;/code&gt; 并删除&lt;em&gt;所有&lt;/em&gt;条目。如果&lt;em&gt;确实&lt;/em&gt;要删除所有对象，则必须显式请求一个完整的查询集：&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="efbe9c61755a3354107632b1df1edcfca88d5654" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt;&lt;code&gt;request.FILES&lt;/code&gt;&lt;/a&gt; will only contain data if the request method was &lt;code&gt;POST&lt;/code&gt; and the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; that posted the request has the attribute &lt;code&gt;enctype=&quot;multipart/form-data&quot;&lt;/code&gt;. Otherwise, &lt;code&gt;request.FILES&lt;/code&gt; will be empty.</source>
          <target state="translated">请注意，仅当请求方法为 &lt;code&gt;POST&lt;/code&gt; 并且发布请求的 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 具有属性 &lt;code&gt;enctype=&quot;multipart/form-data&quot;&lt;/code&gt; ，&lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt; &lt;code&gt;request.FILES&lt;/code&gt; &lt;/a&gt;才会包含数据。否则， &lt;code&gt;request.FILES&lt;/code&gt; 将为空。</target>
        </trans-unit>
        <trans-unit id="114ec4ae4f7b3f1c9ee023cbb2f4ae83341a7264" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../exceptions#django.core.exceptions.ObjectDoesNotExist&quot;&gt;&lt;code&gt;django.core.exceptions.ObjectDoesNotExist&lt;/code&gt;&lt;/a&gt;, which is the base class for all Django database API &lt;code&gt;DoesNotExist&lt;/code&gt; exceptions, has &lt;code&gt;silent_variable_failure = True&lt;/code&gt;. So if you&amp;rsquo;re using Django templates with Django model objects, any &lt;code&gt;DoesNotExist&lt;/code&gt; exception will fail silently.</source>
          <target state="translated">请注意，&lt;a href=&quot;../exceptions#django.core.exceptions.ObjectDoesNotExist&quot;&gt; &lt;code&gt;django.core.exceptions.ObjectDoesNotExist&lt;/code&gt; &lt;/a&gt;是所有Django数据库API &lt;code&gt;DoesNotExist&lt;/code&gt; 异常的基类，具有 &lt;code&gt;silent_variable_failure = True&lt;/code&gt; 。因此，如果您将Django模板与Django模型对象一起使用，则所有 &lt;code&gt;DoesNotExist&lt;/code&gt; 异常都将静默失败。</target>
        </trans-unit>
        <trans-unit id="12f148b2871d0ee0ac320bfab0d6043b1e56d19b" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;django-admin#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; strips all headers with underscores in the name, so you won&amp;rsquo;t see them in &lt;code&gt;META&lt;/code&gt;. This prevents header-spoofing based on ambiguity between underscores and dashes both being normalizing to underscores in WSGI environment variables. It matches the behavior of Web servers like Nginx and Apache 2.4+.</source>
          <target state="translated">请注意，&lt;a href=&quot;django-admin#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; 会&lt;/a&gt;在名称中用下划线删除所有标头，因此您不会在 &lt;code&gt;META&lt;/code&gt; 中看到它们。这样可以防止基于下划线和破折号之间的歧义的标头欺骗在WSGI环境变量中均被标准化为下划线。它与Nginx和Apache 2.4+等Web服务器的行为匹配。</target>
        </trans-unit>
        <trans-unit id="51299edb450e554bd78f74b0809db32387011d1a" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;fields#django.forms.MultiValueField&quot;&gt;&lt;code&gt;MultiValueField&lt;/code&gt;&lt;/a&gt; has a complementary method &lt;a href=&quot;fields#django.forms.MultiValueField.compress&quot;&gt;&lt;code&gt;compress()&lt;/code&gt;&lt;/a&gt; with the opposite responsibility - to combine cleaned values of all member fields into one.</source>
          <target state="translated">请注意，&lt;a href=&quot;fields#django.forms.MultiValueField&quot;&gt; &lt;code&gt;MultiValueField&lt;/code&gt; &lt;/a&gt;具有互补的&lt;a href=&quot;fields#django.forms.MultiValueField.compress&quot;&gt; &lt;code&gt;compress()&lt;/code&gt; &lt;/a&gt;方法，其职责相反-将所有成员字段的清除值组合为一个。</target>
        </trans-unit>
        <trans-unit id="174125b977abe383ebe027c7283e688f70171a40" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Form.add_error()&lt;/code&gt; automatically removes the relevant field from &lt;code&gt;cleaned_data&lt;/code&gt;.</source>
          <target state="translated">请注意， &lt;code&gt;Form.add_error()&lt;/code&gt; 会自动从 &lt;code&gt;cleaned_data&lt;/code&gt; 中删除相关字段。</target>
        </trans-unit>
        <trans-unit id="4591c68c233751182879e8ea4c7ab5f0a044d31a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;add()&lt;/code&gt;, &lt;code&gt;create()&lt;/code&gt;, &lt;code&gt;remove()&lt;/code&gt;, &lt;code&gt;clear()&lt;/code&gt;, and &lt;code&gt;set()&lt;/code&gt; all apply database changes immediately for all types of related fields. In other words, there is no need to call &lt;code&gt;save()&lt;/code&gt; on either end of the relationship.</source>
          <target state="translated">请注意， &lt;code&gt;add()&lt;/code&gt; ， &lt;code&gt;create()&lt;/code&gt; ， &lt;code&gt;remove()&lt;/code&gt; ， &lt;code&gt;clear()&lt;/code&gt; 和 &lt;code&gt;set()&lt;/code&gt; 都立即将数据库更改应用于所有类型的相关字段。换句话说，不需要在关系的任何一端调用 &lt;code&gt;save()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90ef74f6371e10a6782d0c647e7ce73f1b8c10a7" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;django.conf.settings&lt;/code&gt; isn&amp;rsquo;t a module &amp;ndash; it&amp;rsquo;s an object. So importing individual settings is not possible:</source>
          <target state="translated">请注意， &lt;code&gt;django.conf.settings&lt;/code&gt; 不是模块，而是一个对象。因此，无法导入单个设置：</target>
        </trans-unit>
        <trans-unit id="4d70a240827ed6a63d96ee2feb5521ee6e8c53d8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;dumpdata&lt;/code&gt; uses the default manager on the model for selecting the records to dump. If you&amp;rsquo;re using a &lt;a href=&quot;../topics/db/managers#custom-managers&quot;&gt;custom manager&lt;/a&gt; as the default manager and it filters some of the available records, not all of the objects will be dumped.</source>
          <target state="translated">请注意， &lt;code&gt;dumpdata&lt;/code&gt; 使用模型上的默认管理器来选择要转储的记录。如果您使用&lt;a href=&quot;../topics/db/managers#custom-managers&quot;&gt;自定义管理器&lt;/a&gt;作为默认管理器，并且它过滤了一些可用的记录，则不会转储所有对象。</target>
        </trans-unit>
        <trans-unit id="617474170b52d9ea43a8f37beddaa5594df33958" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;earliest()&lt;/code&gt; and &lt;code&gt;latest()&lt;/code&gt; exist purely for convenience and readability.</source>
          <target state="translated">请注意， &lt;code&gt;earliest()&lt;/code&gt; 和 &lt;code&gt;latest()&lt;/code&gt; 纯粹是为了方便和易读而存在。</target>
        </trans-unit>
        <trans-unit id="60bc6baf0f131a6ccb397c320fca68e1cf2cb32d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;first()&lt;/code&gt; is a convenience method, the following code sample is equivalent to the above example:</source>
          <target state="translated">请注意， &lt;code&gt;first()&lt;/code&gt; 是一种便捷方法，下面的代码示例与上述示例等效：</target>
        </trans-unit>
        <trans-unit id="2477105d4945a87d3531b00f61d9dfbbde81b7a1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;full_clean()&lt;/code&gt; will &lt;em&gt;not&lt;/em&gt; be called automatically when you call your model&amp;rsquo;s &lt;a href=&quot;#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; method. You&amp;rsquo;ll need to call it manually when you want to run one-step model validation for your own manually created models. For example:</source>
          <target state="translated">需要注意的是 &lt;code&gt;full_clean()&lt;/code&gt; 将&lt;em&gt;不会&lt;/em&gt;被自动当你调用模型的所谓&lt;a href=&quot;#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;方法。若要为自己创建的模型运行一步模型验证，则需要手动调用它。例如：</target>
        </trans-unit>
        <trans-unit id="b60eaaa655b6061f0ff964b2c7c786fae5248e6d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;localize&lt;/code&gt; is a pytz extension to the &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; API. Also, you may want to catch &lt;code&gt;pytz.InvalidTimeError&lt;/code&gt;. The documentation of pytz contains &lt;a href=&quot;http://pytz.sourceforge.net/#example-usage&quot;&gt;more examples&lt;/a&gt;. You should review it before attempting to manipulate aware datetimes.</source>
          <target state="translated">请注意， &lt;code&gt;localize&lt;/code&gt; 是&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt; API 的pytz扩展。另外，您可能想捕获 &lt;code&gt;pytz.InvalidTimeError&lt;/code&gt; 。pytz的文档包含&lt;a href=&quot;http://pytz.sourceforge.net/#example-usage&quot;&gt;更多示例&lt;/a&gt;。您应在尝试操纵有意识的日期时间之前对其进行检查。</target>
        </trans-unit>
        <trans-unit id="fcff2e0ec8bf12bd9fd1d74a3726364370255148" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;output_field&lt;/code&gt; is only required when Django is unable to determine what field type the result should be. Complex expressions that mix field types should define the desired &lt;code&gt;output_field&lt;/code&gt;. For example, adding an &lt;code&gt;IntegerField()&lt;/code&gt; and a &lt;code&gt;FloatField()&lt;/code&gt; together should probably have &lt;code&gt;output_field=FloatField()&lt;/code&gt; defined.</source>
          <target state="translated">请注意，仅当Django无法确定结果应为哪种字段类型时，才需要 &lt;code&gt;output_field&lt;/code&gt; 。混合字段类型的复杂表达式应定义所需的 &lt;code&gt;output_field&lt;/code&gt; 。例如，将 &lt;code&gt;IntegerField()&lt;/code&gt; 和 &lt;code&gt;FloatField()&lt;/code&gt; 一起添加可能应该定义了 &lt;code&gt;output_field=FloatField()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e0000d6c434afcf6f1baf1d4b21199b5b33c66a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;page&lt;/code&gt;&lt;em&gt;must&lt;/em&gt; be either a valid page number or the value &lt;code&gt;last&lt;/code&gt;; any other value for &lt;code&gt;page&lt;/code&gt; will result in a 404 error.</source>
          <target state="translated">请注意， &lt;code&gt;page&lt;/code&gt; &lt;em&gt;必须&lt;/em&gt;是有效的页面编号或值 &lt;code&gt;last&lt;/code&gt; ; &lt;code&gt;page&lt;/code&gt; 任何其他值都将导致404错误。</target>
        </trans-unit>
        <trans-unit id="4fa87508d78ed938ea3b53c04e6e8bac6e4c0d53" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;pnt&lt;/code&gt; may also be constructed with EWKT, an &amp;ldquo;extended&amp;rdquo; form of WKT that includes the SRID:</source>
          <target state="translated">请注意，也可以使用EWKT构造 &lt;code&gt;pnt&lt;/code&gt; ，EWKT是WKT的&amp;ldquo;扩展&amp;rdquo;形式，其中包括SRID：</target>
        </trans-unit>
        <trans-unit id="69afc1bd88ec7db55e0a8541d45277ff4bd45240" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;render()&lt;/code&gt; returns the empty string. &lt;code&gt;render()&lt;/code&gt; should always return string output. If all the template tag does is set a variable, &lt;code&gt;render()&lt;/code&gt; should return the empty string.</source>
          <target state="translated">请注意， &lt;code&gt;render()&lt;/code&gt; 返回空字符串。 &lt;code&gt;render()&lt;/code&gt; 应该始终返回字符串输出。如果所有模板标记都设置了变量，则 &lt;code&gt;render()&lt;/code&gt; 应该返回空字符串。</target>
        </trans-unit>
        <trans-unit id="eeadeb6021da41a361ee20d5764d2103bff4b20d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;sqlmigrate&lt;/code&gt; doesn&amp;rsquo;t colorize its output.</source>
          <target state="translated">请注意， &lt;code&gt;sqlmigrate&lt;/code&gt; 不会使输出变色。</target>
        </trans-unit>
        <trans-unit id="f4ef6ae7ec0603ef3df71659f00737594af30ccc" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;striptags&lt;/code&gt; doesn&amp;rsquo;t give any guarantee about its output being HTML safe, particularly with non valid HTML input. So &lt;strong&gt;NEVER&lt;/strong&gt; apply the &lt;code&gt;safe&lt;/code&gt; filter to a &lt;code&gt;striptags&lt;/code&gt; output. If you are looking for something more robust, you can use the &lt;code&gt;bleach&lt;/code&gt; Python library, notably its &lt;a href=&quot;https://bleach.readthedocs.io/en/latest/clean.html&quot;&gt;clean&lt;/a&gt; method.</source>
          <target state="translated">请注意， &lt;code&gt;striptags&lt;/code&gt; 不能保证其输出是HTML安全的，特别是对于无效的HTML输入而言。因此，&lt;strong&gt;切勿&lt;/strong&gt;将 &lt;code&gt;safe&lt;/code&gt; 过滤器应用于 &lt;code&gt;striptags&lt;/code&gt; 输出。如果您正在寻找更强大的功能，则可以使用 &lt;code&gt;bleach&lt;/code&gt; Python库，尤其是它的&lt;a href=&quot;https://bleach.readthedocs.io/en/latest/clean.html&quot;&gt;clean&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="e6c1a0bf2d18380514c058c2103f2660189ecd36" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;{% regroup %}&lt;/code&gt; does not order its input! Our example relies on the fact that the &lt;code&gt;cities&lt;/code&gt; list was ordered by &lt;code&gt;country&lt;/code&gt; in the first place. If the &lt;code&gt;cities&lt;/code&gt; list did &lt;em&gt;not&lt;/em&gt; order its members by &lt;code&gt;country&lt;/code&gt;, the regrouping would naively display more than one group for a single country. For example, say the &lt;code&gt;cities&lt;/code&gt; list was set to this (note that the countries are not grouped together):</source>
          <target state="translated">请注意， &lt;code&gt;{% regroup %}&lt;/code&gt; 不会对输入进行排序！我们的示例基于以下事实： &lt;code&gt;cities&lt;/code&gt; 列表首先是按 &lt;code&gt;country&lt;/code&gt; 排序的。如果 &lt;code&gt;cities&lt;/code&gt; 列表&lt;em&gt;未按&lt;/em&gt; &lt;code&gt;country&lt;/code&gt; 排序，则重新组合将仅显示单个国家/地区的多个组。例如，假设将 &lt;code&gt;cities&lt;/code&gt; 列表设置为此（请注意，这些国家未分组在一起）：</target>
        </trans-unit>
        <trans-unit id="555959baa50f98a7ff375b125440d82908185be5" translate="yes" xml:space="preserve">
          <source>Note that Django also provides &lt;a href=&quot;../ref/request-response#django.http.HttpRequest.GET&quot;&gt;&lt;code&gt;request.GET&lt;/code&gt;&lt;/a&gt; for accessing GET data in the same way &amp;ndash; but we&amp;rsquo;re explicitly using &lt;a href=&quot;../ref/request-response#django.http.HttpRequest.POST&quot;&gt;&lt;code&gt;request.POST&lt;/code&gt;&lt;/a&gt; in our code, to ensure that data is only altered via a POST call.</source>
          <target state="translated">请注意，Django还提供了&lt;a href=&quot;../ref/request-response#django.http.HttpRequest.GET&quot;&gt; &lt;code&gt;request.GET&lt;/code&gt; ,&lt;/a&gt;用于以相同的方式访问GET数据-但我们在代码中明确使用&lt;a href=&quot;../ref/request-response#django.http.HttpRequest.POST&quot;&gt; &lt;code&gt;request.POST&lt;/code&gt; &lt;/a&gt;，以确保仅通过POST调用来更改数据。</target>
        </trans-unit>
        <trans-unit id="5a86bd35e7d0371b683012acf70b7110506f8792" translate="yes" xml:space="preserve">
          <source>Note that a callable (with the parentheses omitted) is passed to &lt;code&gt;default&lt;/code&gt;, not an instance of &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">注意，可调用（省略括号）被传递给 &lt;code&gt;default&lt;/code&gt; ，而不是 &lt;code&gt;UUID&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="769f71352d570fcd1ad93b9334853d28dc71b571" translate="yes" xml:space="preserve">
          <source>Note that a settings file should &lt;em&gt;not&lt;/em&gt; import from &lt;code&gt;global_settings&lt;/code&gt;, because that&amp;rsquo;s redundant.</source>
          <target state="translated">请注意，设置文件应该&lt;em&gt;不是&lt;/em&gt;从导入 &lt;code&gt;global_settings&lt;/code&gt; ，因为那是多余的。</target>
        </trans-unit>
        <trans-unit id="91d33e115058c62ed3b06406e2b16a18f7403773" translate="yes" xml:space="preserve">
          <source>Note that all subsequent PDF-generation methods are called on the PDF object (in this case, &lt;code&gt;p&lt;/code&gt;) &amp;ndash; not on &lt;code&gt;buffer&lt;/code&gt;.</source>
          <target state="translated">请注意，所有后续的PDF生成方法都在PDF对象（在本例中为 &lt;code&gt;p&lt;/code&gt; ）上调用，而不是在 &lt;code&gt;buffer&lt;/code&gt; 上调用。</target>
        </trans-unit>
        <trans-unit id="e2720462e729bf12c9dc1637761930abaf6e5302" translate="yes" xml:space="preserve">
          <source>Note that although this function uses &lt;code&gt;str.format()&lt;/code&gt; to do the interpolation, some of the formatting options provided by &lt;code&gt;str.format()&lt;/code&gt; (e.g. number formatting) will not work, since all arguments are passed through &lt;a href=&quot;#django.utils.html.conditional_escape&quot;&gt;&lt;code&gt;conditional_escape()&lt;/code&gt;&lt;/a&gt; which (ultimately) calls &lt;a href=&quot;#django.utils.encoding.force_str&quot;&gt;&lt;code&gt;force_str()&lt;/code&gt;&lt;/a&gt; on the values.</source>
          <target state="translated">请注意，尽管此函数使用 &lt;code&gt;str.format()&lt;/code&gt; 进行插值，但是 &lt;code&gt;str.format()&lt;/code&gt; 提供的某些格式设置选项（例如数字格式设置）将不起作用，因为所有参数均通过&lt;a href=&quot;#django.utils.html.conditional_escape&quot;&gt; &lt;code&gt;conditional_escape()&lt;/code&gt; &lt;/a&gt;传递（最终）在值上调用&lt;a href=&quot;#django.utils.encoding.force_str&quot;&gt; &lt;code&gt;force_str()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1655d49d10104c3e29e68482b9119e277e90f07d" translate="yes" xml:space="preserve">
          <source>Note that an even more flexible (but more heavyweight) way of doing this would be to use Django&amp;rsquo;s template system. Assuming Lawrence.com and LJWorld.com have different template directories (&lt;a href=&quot;../settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt;), you could farm out to the template system like so:</source>
          <target state="translated">请注意，更灵活（但更重）的方法是使用Django的模板系统。假设Lawrence.com和LJWorld.com具有不同的模板目录（&lt;a href=&quot;../settings#std:setting-TEMPLATES-DIRS&quot;&gt; &lt;code&gt;DIRS&lt;/code&gt; &lt;/a&gt;），则可以像这样将其扩展到模板系统：</target>
        </trans-unit>
        <trans-unit id="a03be98ba22733726f31548200c2a1eb13fd38d0" translate="yes" xml:space="preserve">
          <source>Note that any data set during the anonymous session is retained in the session after a user logs in.</source>
          <target state="translated">请注意,在匿名会话期间设置的任何数据在用户登录后都会保留在该会话中。</target>
        </trans-unit>
        <trans-unit id="5e76af3cfee25aa8aedca5c9cce37758a092a5a5" translate="yes" xml:space="preserve">
          <source>Note that any errors raised by your &lt;a href=&quot;api#django.forms.Form.clean&quot;&gt;&lt;code&gt;Form.clean()&lt;/code&gt;&lt;/a&gt; override will not be associated with any field in particular. They go into a special &amp;ldquo;field&amp;rdquo; (called &lt;code&gt;__all__&lt;/code&gt;), which you can access via the &lt;a href=&quot;api#django.forms.Form.non_field_errors&quot;&gt;&lt;code&gt;non_field_errors()&lt;/code&gt;&lt;/a&gt; method if you need to. If you want to attach errors to a specific field in the form, you need to call &lt;a href=&quot;api#django.forms.Form.add_error&quot;&gt;&lt;code&gt;add_error()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请注意，由&lt;a href=&quot;api#django.forms.Form.clean&quot;&gt; &lt;code&gt;Form.clean()&lt;/code&gt; &lt;/a&gt;覆盖引发的任何错误都不会与任何特定字段关联。它们进入一个特殊的&amp;ldquo;字段&amp;rdquo;（称为 &lt;code&gt;__all__&lt;/code&gt; ），您可以根据需要通过&lt;a href=&quot;api#django.forms.Form.non_field_errors&quot;&gt; &lt;code&gt;non_field_errors()&lt;/code&gt; &lt;/a&gt;方法进行访问。如果要将错误附加到表单中的特定字段，则需要调用&lt;a href=&quot;api#django.forms.Form.add_error&quot;&gt; &lt;code&gt;add_error()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bb7f74b1561095f41f3d18b56dd6375c9ec3906f" translate="yes" xml:space="preserve">
          <source>Note that any of Django&amp;rsquo;s default admin templates can be overridden. To override a template, do the same thing you did with &lt;code&gt;base_site.html&lt;/code&gt; &amp;ndash; copy it from the default directory into your custom directory, and make changes.</source>
          <target state="translated">请注意，任何Django的默认管理模板都可以被覆盖。要覆盖模板，请执行与 &lt;code&gt;base_site.html&lt;/code&gt; 相同的操作 &amp;ndash;将其从默认目录复制到自定义目录中，然后进行更改。</target>
        </trans-unit>
        <trans-unit id="239df39fbba56c17e5c95caf2ecf410c00f83202" translate="yes" xml:space="preserve">
          <source>Note that any text-based field &amp;ndash; such as &lt;code&gt;CharField&lt;/code&gt; or &lt;code&gt;EmailField&lt;/code&gt; &amp;ndash; always cleans the input into a string. We&amp;rsquo;ll cover the encoding implications later in this document.</source>
          <target state="translated">请注意，任何基于文本的字段（例如 &lt;code&gt;CharField&lt;/code&gt; 或 &lt;code&gt;EmailField&lt;/code&gt; ）始终会将输入清除为字符串。我们将在本文档后面部分介绍编码含义。</target>
        </trans-unit>
        <trans-unit id="7bedfd96029424831aed4722f0eb96eed865f31a" translate="yes" xml:space="preserve">
          <source>Note that as the method is now a property, in Python code it will need to be accessed appropriately:</source>
          <target state="translated">请注意,由于该方法现在是一个属性,在 Python 代码中需要适当地访问它。</target>
        </trans-unit>
        <trans-unit id="fe32d6c5f76eb9f75c146ee626da625540f82c24" translate="yes" xml:space="preserve">
          <source>Note that calling &lt;code&gt;django.setup()&lt;/code&gt; is only necessary if your code is truly standalone. When invoked by your Web server, or through &lt;a href=&quot;../ref/django-admin&quot;&gt;django-admin&lt;/a&gt;, Django will handle this for you.</source>
          <target state="translated">请注意，仅当代码真正独立时才需要调用 &lt;code&gt;django.setup()&lt;/code&gt; 。当您的Web服务器或通过&lt;a href=&quot;../ref/django-admin&quot;&gt;django-admin&lt;/a&gt;调用时，Django将为您处理此问题。</target>
        </trans-unit>
        <trans-unit id="3bc381cc771bad16450ca029b7c0214227351136" translate="yes" xml:space="preserve">
          <source>Note that choices can be any sequence object &amp;ndash; not necessarily a list or tuple. This lets you construct choices dynamically. But if you find yourself hacking &lt;a href=&quot;#django.db.models.Field.choices&quot;&gt;&lt;code&gt;choices&lt;/code&gt;&lt;/a&gt; to be dynamic, you&amp;rsquo;re probably better off using a proper database table with a &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#django.db.models.Field.choices&quot;&gt;&lt;code&gt;choices&lt;/code&gt;&lt;/a&gt; is meant for static data that doesn&amp;rsquo;t change much, if ever.</source>
          <target state="translated">请注意，选择可以是任何序列对象-不一定是列表或元组。这使您可以动态构造选择。但是，如果您发现自己的黑客&lt;a href=&quot;#django.db.models.Field.choices&quot;&gt; &lt;code&gt;choices&lt;/code&gt; &lt;/a&gt;是动态的，那么最好使用带有&lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;的正确数据库表。&lt;a href=&quot;#django.db.models.Field.choices&quot;&gt; &lt;code&gt;choices&lt;/code&gt; &lt;/a&gt;是针对不变的静态数据（如果有的话）。</target>
        </trans-unit>
        <trans-unit id="23311557d1c1b4a3bc91b67a7dcbb2a15f706caf" translate="yes" xml:space="preserve">
          <source>Note that command options that take no arguments are passed as keywords with &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;, as you can see with the &lt;code&gt;interactive&lt;/code&gt; option above.</source>
          <target state="translated">请注意，不带任何参数的命令选项将通过 &lt;code&gt;True&lt;/code&gt; 或 &lt;code&gt;False&lt;/code&gt; 作为关键字传递，如您在上面的 &lt;code&gt;interactive&lt;/code&gt; 选项中所见。</target>
        </trans-unit>
        <trans-unit id="771c36984deec4007d5e353a2afde4a1288b3d14" translate="yes" xml:space="preserve">
          <source>Note that each form field has an ID attribute set to &lt;code&gt;id_&amp;lt;field-name&amp;gt;&lt;/code&gt;, which is referenced by the accompanying label tag. This is important in ensuring that forms are accessible to assistive technology such as screen reader software. You can also &lt;a href=&quot;../../ref/forms/api#ref-forms-api-configuring-label&quot;&gt;customize the way in which labels and ids are generated&lt;/a&gt;.</source>
          <target state="translated">请注意，每个表单字段都有一个ID属性设置为 &lt;code&gt;id_&amp;lt;field-name&amp;gt;&lt;/code&gt; ，该属性由随附的标签标记引用。这对于确保表单可以被辅助技术（例如屏幕阅读器软件）访问是很重要的。您还可以&lt;a href=&quot;../../ref/forms/api#ref-forms-api-configuring-label&quot;&gt;自定义标签和ID的生成方式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f0445bbbacae2bc87d1553017a414c56d8a13c4" translate="yes" xml:space="preserve">
          <source>Note that each process will have its own private cache instance, which means no cross-process caching is possible. This obviously also means the local memory cache isn&amp;rsquo;t particularly memory-efficient, so it&amp;rsquo;s probably not a good choice for production environments. It&amp;rsquo;s nice for development.</source>
          <target state="translated">请注意，每个进程将具有其自己的专用缓存实例，这意味着不可能进行跨进程缓存。这显然也意味着本地内存缓存不是特别有效的内存，因此对于生产环境而言，它可能不是一个好选择。这对开发很好。</target>
        </trans-unit>
        <trans-unit id="a2eeff486edfad4d9520b6f22313f2e3567d2e11" translate="yes" xml:space="preserve">
          <source>Note that extra options will &lt;em&gt;always&lt;/em&gt; be passed to &lt;em&gt;every&lt;/em&gt; line in the included URLconf, regardless of whether the line&amp;rsquo;s view actually accepts those options as valid. For this reason, this technique is only useful if you&amp;rsquo;re certain that every view in the included URLconf accepts the extra options you&amp;rsquo;re passing.</source>
          <target state="translated">请注意，无论行的视图实际上是否接受这些选项，额外的选项将&lt;em&gt;始终&lt;/em&gt;传递到所包含的URLconf中的&lt;em&gt;每一&lt;/em&gt;行。因此，仅当您确定所包含的URLconf中的每个视图都接受要传递的额外选项时，此技术才有用。</target>
        </trans-unit>
        <trans-unit id="92c628e1fbd6a9010f3d0db034ba40cb41449dee" translate="yes" xml:space="preserve">
          <source>Note that having the view instance in the template context may expose potentially hazardous methods to template authors. To prevent methods like this from being called in the template, set &lt;code&gt;alters_data=True&lt;/code&gt; on those methods. For more information, read the documentation on &lt;a href=&quot;../templates/api#alters-data-description&quot;&gt;rendering a template context&lt;/a&gt;.</source>
          <target state="translated">请注意，在模板上下文中包含视图实例可能会向模板作者暴露潜在的危险方法。为了防止在模板中调用 &lt;code&gt;alters_data=True&lt;/code&gt; 方法，请在这些方法上设置alters_data = True。有关更多信息，请阅读有关&lt;a href=&quot;../templates/api#alters-data-description&quot;&gt;渲染模板上下文&lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="98f6de66c762486638954c88d910ab00b17debe3" translate="yes" xml:space="preserve">
          <source>Note that if &lt;a href=&quot;#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;, then the corresponding locale-dictated format has higher precedence and will be applied.</source>
          <target state="translated">请注意，如果&lt;a href=&quot;#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; ，则相应的区域设置格式具有更高的优先级，并将被应用。</target>
        </trans-unit>
        <trans-unit id="50d31d0e0ebd30e972979684ec82c5fb17e9796a" translate="yes" xml:space="preserve">
          <source>Note that if &lt;a href=&quot;#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;, then the locale-dictated format has higher precedence and will be applied instead.</source>
          <target state="translated">请注意，如果&lt;a href=&quot;#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; ，则由区域设置指定的格式具有更高的优先级，并将被应用。</target>
        </trans-unit>
        <trans-unit id="49e296c8c84c9dd47aab0634b92f9ddef9e72e21" translate="yes" xml:space="preserve">
          <source>Note that if a &lt;code&gt;ModelChoiceField&lt;/code&gt; is required and has a default initial value, no empty choice is created (regardless of the value of &lt;code&gt;empty_label&lt;/code&gt;).</source>
          <target state="translated">请注意，如果 &lt;code&gt;ModelChoiceField&lt;/code&gt; 是必需的并且具有默认的初始值，则不会创建任何空选择（无论 &lt;code&gt;empty_label&lt;/code&gt; 的值如何）。</target>
        </trans-unit>
        <trans-unit id="a602110fb64a1dd4cb469f056ba8051460109907" translate="yes" xml:space="preserve">
          <source>Note that if an empty string is given, the default value will &lt;em&gt;not&lt;/em&gt; be used. Use the &lt;a href=&quot;#std:templatefilter-default&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt; filter if you want to fallback for empty strings.</source>
          <target state="translated">请注意，如果给出一个空字符串，将&lt;em&gt;不&lt;/em&gt;使用默认值。如果要回退空字符串，请使用&lt;a href=&quot;#std:templatefilter-default&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;过滤器。</target>
        </trans-unit>
        <trans-unit id="80730ee1d592ce07bf82235a3404e06b9d3abf66" translate="yes" xml:space="preserve">
          <source>Note that if the URL you&amp;rsquo;re reversing doesn&amp;rsquo;t exist, you&amp;rsquo;ll get an &lt;a href=&quot;../exceptions#django.urls.NoReverseMatch&quot;&gt;&lt;code&gt;NoReverseMatch&lt;/code&gt;&lt;/a&gt; exception raised, which will cause your site to display an error page.</source>
          <target state="translated">请注意，如果您要反转的URL不存在，则会引发&lt;a href=&quot;../exceptions#django.urls.NoReverseMatch&quot;&gt; &lt;code&gt;NoReverseMatch&lt;/code&gt; &lt;/a&gt;异常，这将导致您的网站显示错误页面。</target>
        </trans-unit>
        <trans-unit id="3e45a85a7dcecfdfcfb4389a347188b10434abde" translate="yes" xml:space="preserve">
          <source>Note that if the form &lt;a href=&quot;#validation-on-modelform&quot;&gt;hasn&amp;rsquo;t been validated&lt;/a&gt;, calling &lt;code&gt;save()&lt;/code&gt; will do so by checking &lt;code&gt;form.errors&lt;/code&gt;. A &lt;code&gt;ValueError&lt;/code&gt; will be raised if the data in the form doesn&amp;rsquo;t validate &amp;ndash; i.e., if &lt;code&gt;form.errors&lt;/code&gt; evaluates to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">请注意，如果表单&lt;a href=&quot;#validation-on-modelform&quot;&gt;尚未通过验证&lt;/a&gt;，则调用 &lt;code&gt;save()&lt;/code&gt; 将通过检查 &lt;code&gt;form.errors&lt;/code&gt; 来进行验证。一个 &lt;code&gt;ValueError&lt;/code&gt; 异常将被提出如果表单中的数据不验证-也就是说，如果 &lt;code&gt;form.errors&lt;/code&gt; 计算结果为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61f3ec02092015ed9d1f89e12937af6bb0ee587e" translate="yes" xml:space="preserve">
          <source>Note that if the tests are run on a database with no transaction support (for instance, MySQL with the MyISAM engine), &lt;code&gt;setUpTestData()&lt;/code&gt; will be called before each test, negating the speed benefits.</source>
          <target state="translated">请注意，如果测试在没有事务支持的数据库上运行（例如，带有MyISAM引擎的MySQL）， &lt;code&gt;setUpTestData()&lt;/code&gt; 在每次测试之前调用setUpTestData（），从而降低了速度优势。</target>
        </trans-unit>
        <trans-unit id="a758f5f8e960e50154e5596b9c6aefae0ab85207" translate="yes" xml:space="preserve">
          <source>Note that if two fixtures with the same name but different fixture type are discovered (for example, if &lt;code&gt;mydata.json&lt;/code&gt; and &lt;code&gt;mydata.xml.gz&lt;/code&gt; were found in the same fixture directory), fixture installation will be aborted, and any data installed in the call to &lt;code&gt;loaddata&lt;/code&gt; will be removed from the database.</source>
          <target state="translated">请注意，如果发现两个具有相同名称但夹具类型不同的夹具（例如，如果在同一夹具目录中找到了 &lt;code&gt;mydata.json&lt;/code&gt; 和 &lt;code&gt;mydata.xml.gz&lt;/code&gt; ），夹具安装将被中止，并且所有安装在该夹具中的数据调用 &lt;code&gt;loaddata&lt;/code&gt; 将从数据库中删除。</target>
        </trans-unit>
        <trans-unit id="ac49bd48639bcacfaff102892d44aa3595f4440b" translate="yes" xml:space="preserve">
          <source>Note that if you don&amp;rsquo;t specify the &lt;code&gt;login_url&lt;/code&gt; parameter, you&amp;rsquo;ll need to ensure that the &lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt;&lt;code&gt;settings.LOGIN_URL&lt;/code&gt;&lt;/a&gt; and your login view are properly associated. For example, using the defaults, add the following lines to your URLconf:</source>
          <target state="translated">请注意，如果您未指定 &lt;code&gt;login_url&lt;/code&gt; 参数，则需要确保&lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt; &lt;code&gt;settings.LOGIN_URL&lt;/code&gt; &lt;/a&gt;和您的登录视图正确关联。例如，使用默认值，将以下行添加到URLconf：</target>
        </trans-unit>
        <trans-unit id="6cd271fbb7b9ed101646f23af0c3630189f7de5d" translate="yes" xml:space="preserve">
          <source>Note that if you provide a value to &lt;code&gt;redirect_field_name&lt;/code&gt;, you will most likely need to customize your login template as well, since the template context variable which stores the redirect path will use the value of &lt;code&gt;redirect_field_name&lt;/code&gt; as its key rather than &lt;code&gt;&quot;next&quot;&lt;/code&gt; (the default).</source>
          <target state="translated">请注意，如果您为 &lt;code&gt;redirect_field_name&lt;/code&gt; 提供一个值，则很可能还需要自定义登录模板，因为存储重定向路径的模板上下文变量将使用 &lt;code&gt;redirect_field_name&lt;/code&gt; 的值作为其键，而不是 &lt;code&gt;&quot;next&quot;&lt;/code&gt; （默认值） ）。</target>
        </trans-unit>
        <trans-unit id="7d9053627b6ab7bc8cafe04e748b5f7e44a6dca7" translate="yes" xml:space="preserve">
          <source>Note that if you provide an &lt;code&gt;exclude&lt;/code&gt; argument to &lt;code&gt;validate_unique()&lt;/code&gt;, any &lt;a href=&quot;options#django.db.models.Options.unique_together&quot;&gt;&lt;code&gt;unique_together&lt;/code&gt;&lt;/a&gt; constraint involving one of the fields you provided will not be checked.</source>
          <target state="translated">请注意，如果您为 &lt;code&gt;validate_unique()&lt;/code&gt; 提供了 &lt;code&gt;exclude&lt;/code&gt; 参数，则不会检查任何涉及您提供的字段之一的&lt;a href=&quot;options#django.db.models.Options.unique_together&quot;&gt; &lt;code&gt;unique_together&lt;/code&gt; &lt;/a&gt;约束。</target>
        </trans-unit>
        <trans-unit id="4bf8a879fdf5070b51826c9b7caa260383bcc815" translate="yes" xml:space="preserve">
          <source>Note that if you set this to point to a &lt;a href=&quot;#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt;, only the date portion of the field will be considered. Besides, when &lt;a href=&quot;../settings#std:setting-USE_TZ&quot;&gt;&lt;code&gt;USE_TZ&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;, the check will be performed in the &lt;a href=&quot;../../topics/i18n/timezones#default-current-time-zone&quot;&gt;current time zone&lt;/a&gt; at the time the object gets saved.</source>
          <target state="translated">请注意，如果将其设置为指向&lt;a href=&quot;#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt;，则仅考虑字段的日期部分。此外，当&lt;a href=&quot;../settings#std:setting-USE_TZ&quot;&gt; &lt;code&gt;USE_TZ&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;True&lt;/code&gt; 时，将在保存对象时在&lt;a href=&quot;../../topics/i18n/timezones#default-current-time-zone&quot;&gt;当前时区&lt;/a&gt;执行检查。</target>
        </trans-unit>
        <trans-unit id="57208e52924136beaba1ef45b1cfb353a276896c" translate="yes" xml:space="preserve">
          <source>Note that if you use &lt;code&gt;iterator()&lt;/code&gt; to run the query, &lt;code&gt;prefetch_related()&lt;/code&gt; calls will be ignored since these two optimizations do not make sense together.</source>
          <target state="translated">请注意，如果您使用 &lt;code&gt;iterator()&lt;/code&gt; 运行查询，则 &lt;code&gt;prefetch_related()&lt;/code&gt; 调用将被忽略，因为这两个优化没有意义。</target>
        </trans-unit>
        <trans-unit id="d3fefd7119376ae7f60ef230db53d905b5c5f7ea" translate="yes" xml:space="preserve">
          <source>Note that if you want the number of items in a &lt;code&gt;QuerySet&lt;/code&gt; and are also retrieving model instances from it (for example, by iterating over it), it&amp;rsquo;s probably more efficient to use &lt;code&gt;len(queryset)&lt;/code&gt; which won&amp;rsquo;t cause an extra database query like &lt;code&gt;count()&lt;/code&gt; would.</source>
          <target state="translated">请注意，如果您想要 &lt;code&gt;QuerySet&lt;/code&gt; 中的项目数量并且还从中检索模型实例（例如，通过对其进行迭代），则使用 &lt;code&gt;len(queryset)&lt;/code&gt; 可能会更有效，因为它不会引起额外的数据库查询，例如 &lt;code&gt;count()&lt;/code&gt; 会。</target>
        </trans-unit>
        <trans-unit id="4b51148aa0e1df68489edcd2daa4501a3ad657c5" translate="yes" xml:space="preserve">
          <source>Note that if you want to include literal percent signs in the query, you have to double them in the case you are passing parameters:</source>
          <target state="translated">请注意,如果你想在查询中包含字面的百分号,你必须在传递参数的情况下将它们加倍。</target>
        </trans-unit>
        <trans-unit id="4b4035dfedcff608a0dab9991ed7812ee69969f8" translate="yes" xml:space="preserve">
          <source>Note that if you wish to use the same file handle for multiple &lt;code&gt;post()&lt;/code&gt; calls then you will need to manually reset the file pointer between posts. The easiest way to do this is to manually close the file after it has been provided to &lt;code&gt;post()&lt;/code&gt;, as demonstrated above.</source>
          <target state="translated">请注意，如果您希望对多个 &lt;code&gt;post()&lt;/code&gt; 调用使用相同的文件句柄，则需要手动重置帖子之间的文件指针。如上所示，最简单的方法是在将文件提供给 &lt;code&gt;post()&lt;/code&gt; 之后手动关闭文件。</target>
        </trans-unit>
        <trans-unit id="7f860210b1c27c53f17cee74317f048e4e6632b1" translate="yes" xml:space="preserve">
          <source>Note that in case there is no other lookup specified, Django interprets &lt;code&gt;change__abs=27&lt;/code&gt; as &lt;code&gt;change__abs__exact=27&lt;/code&gt;.</source>
          <target state="translated">请注意，如果未指定其他查找，则Django会将 &lt;code&gt;change__abs=27&lt;/code&gt; 解释为 &lt;code&gt;change__abs__exact=27&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9930c8dc279b69fbaa1a8be67211867deca2a03e" translate="yes" xml:space="preserve">
          <source>Note that in most deployment situations where Django isn&amp;rsquo;t involved in serving user-uploaded files, this setting won&amp;rsquo;t help you. For example, if your &lt;a href=&quot;settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt; is served directly by your front-end Web server (nginx, Apache, etc.) then you&amp;rsquo;d want to set this header there. On the other hand, if you are using Django to do something like require authorization in order to download files and you cannot set the header using your Web server, this setting will be useful.</source>
          <target state="translated">请注意，在大多数部署情况下，Django不参与提供用户上传的文件，此设置将无济于事。例如，如果您的&lt;a href=&quot;settings#std:setting-MEDIA_URL&quot;&gt; &lt;code&gt;MEDIA_URL&lt;/code&gt; &lt;/a&gt;由前端Web服务器（nginx，Apache等）直接提供服务，则需要在此处设置此标头。另一方面，如果您使用Django来执行诸如需要授权才能下载文件之类的操作，并且无法使用Web服务器设置标头，则此设置将非常有用。</target>
        </trans-unit>
        <trans-unit id="99e79e30a12a76f1313050e4f0b66fec20480e07" translate="yes" xml:space="preserve">
          <source>Note that in the case of identical date values, these methods will use the primary key as a tie-breaker. This guarantees that no records are skipped or duplicated. That also means you cannot use those methods on unsaved objects.</source>
          <target state="translated">请注意,在日期值相同的情况下,这些方法将使用主键作为平局。这保证了没有记录被跳过或重复。这也意味着你不能对未保存的对象使用这些方法。</target>
        </trans-unit>
        <trans-unit id="90c15f36e80bc36194e7fc7c88e2411b03bc0b09" translate="yes" xml:space="preserve">
          <source>Note that in the last example the article has moved from John to Paul.</source>
          <target state="translated">请注意,在最后一个例子中,文章已经从约翰移到了保罗。</target>
        </trans-unit>
        <trans-unit id="cf55cefd5bd9a22b0ef1f0f6fcfbd1370197c2a8" translate="yes" xml:space="preserve">
          <source>Note that inheriting from multiple models that have a common &lt;code&gt;id&lt;/code&gt; primary key field will raise an error. To properly use multiple inheritance, you can use an explicit &lt;a href=&quot;../../ref/models/fields#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt; in the base models:</source>
          <target state="translated">请注意，从具有公共 &lt;code&gt;id&lt;/code&gt; 主键字段的多个模型继承将引发错误。要正确使用多重继承，可以在基本模型中使用显式的&lt;a href=&quot;../../ref/models/fields#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f16597be826caa262d10a0f4d0ad1380467491e9" translate="yes" xml:space="preserve">
          <source>Note that it &lt;strong&gt;does not&lt;/strong&gt; include the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tags, or a submit button. We&amp;rsquo;ll have to provide those ourselves in the template.</source>
          <target state="translated">请注意，它&lt;strong&gt;不&lt;/strong&gt;包含 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 标记或提交按钮。我们必须在模板中提供这些信息。</target>
        </trans-unit>
        <trans-unit id="20fcecc00ae0237fe53c67889180caee6880fbb3" translate="yes" xml:space="preserve">
          <source>Note that it is possible to compare &lt;code&gt;Polygon&lt;/code&gt; objects directly with &lt;code&gt;&amp;lt;&lt;/code&gt; or &lt;code&gt;&amp;gt;&lt;/code&gt;, but as the comparison is made through Polygon&amp;rsquo;s &lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt;&lt;code&gt;LineString&lt;/code&gt;&lt;/a&gt;, it does not mean much (but is consistent and quick). You can always force the comparison with the &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.area&quot;&gt;&lt;code&gt;area&lt;/code&gt;&lt;/a&gt; property:</source>
          <target state="translated">请注意，可以直接用 &lt;code&gt;&amp;lt;&lt;/code&gt; 或 &lt;code&gt;&amp;gt;&lt;/code&gt; 比较 &lt;code&gt;Polygon&lt;/code&gt; 对象，但是由于是通过Polygon的&lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt; &lt;code&gt;LineString&lt;/code&gt; &lt;/a&gt;进行比较的，所以意义不大（但是一致且快速）。您始终可以使用&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.area&quot;&gt; &lt;code&gt;area&lt;/code&gt; &lt;/a&gt;属性强制进行比较：</target>
        </trans-unit>
        <trans-unit id="309e54b62c2f8838bb6218907b1b434ce25c9449" translate="yes" xml:space="preserve">
          <source>Note that it&amp;rsquo;s perfectly safe to store global information that will not change throughout the life of the &lt;code&gt;Node&lt;/code&gt; as an attribute. In the case of &lt;code&gt;CycleNode&lt;/code&gt;, the &lt;code&gt;cyclevars&lt;/code&gt; argument doesn&amp;rsquo;t change after the &lt;code&gt;Node&lt;/code&gt; is instantiated, so we don&amp;rsquo;t need to put it in the &lt;code&gt;render_context&lt;/code&gt;. But state information that is specific to the template that is currently being rendered, like the current iteration of the &lt;code&gt;CycleNode&lt;/code&gt;, should be stored in the &lt;code&gt;render_context&lt;/code&gt;.</source>
          <target state="translated">请注意，将在 &lt;code&gt;Node&lt;/code&gt; 整个生命周期内不会改变的全局信息作为属性存储是绝对安全的。对于 &lt;code&gt;CycleNode&lt;/code&gt; 来说，在实例化 &lt;code&gt;Node&lt;/code&gt; 之后， &lt;code&gt;cyclevars&lt;/code&gt; 参数不会改变，因此我们不需要将其放在 &lt;code&gt;render_context&lt;/code&gt; 中。但是，特定于当前正在渲染的模板的状态信息（例如 &lt;code&gt;CycleNode&lt;/code&gt; 的当前迭代）应存储在 &lt;code&gt;render_context&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="e90fd4cc43a3b840e41758699f16f4a951c22c6a" translate="yes" xml:space="preserve">
          <source>Note that model interdependencies in Django can get very complex, and squashing may result in migrations that do not run; either mis-optimized (in which case you can try again with &lt;code&gt;--no-optimize&lt;/code&gt;, though you should also report an issue), or with a &lt;code&gt;CircularDependencyError&lt;/code&gt;, in which case you can manually resolve it.</source>
          <target state="translated">请注意，Django中的模型相互依赖性会变得非常复杂，并且挤压可能会导致迁移无法运行。错误优化的（在这种情况下，您可以使用 &lt;code&gt;--no-optimize&lt;/code&gt; 再次尝试，尽管您也应该报告问题），或者使用 &lt;code&gt;CircularDependencyError&lt;/code&gt; ，在这种情况下，您可以手动解决它。</target>
        </trans-unit>
        <trans-unit id="284c76538164a551a6ead0347d70137da1e7759a" translate="yes" xml:space="preserve">
          <source>Note that not all changes are possible on all databases - for example, you cannot change a text-type field like &lt;code&gt;models.TextField()&lt;/code&gt; into a number-type field like &lt;code&gt;models.IntegerField()&lt;/code&gt; on most databases.</source>
          <target state="translated">请注意，并非所有的变化都可能对所有数据库-例如，你不能改变像一个文本型字段 &lt;code&gt;models.TextField()&lt;/code&gt; 到像数类型字段 &lt;code&gt;models.IntegerField()&lt;/code&gt; 在大多数数据库。</target>
        </trans-unit>
        <trans-unit id="5765b42680f5abb4a72b6c1b5ae0dc4354eab406" translate="yes" xml:space="preserve">
          <source>Note that older or more recent versions of these libraries &lt;em&gt;may&lt;/em&gt; also work totally fine with GeoDjango. Your mileage may vary.</source>
          <target state="translated">需要注意的是较旧的或较新版本的这些库的&lt;em&gt;可能&lt;/em&gt;也与GeoDjango内置工作完全正常。你的旅费可能会改变。</target>
        </trans-unit>
        <trans-unit id="fbd318205dcfeda5f23d3aa3a5607de8d9bf49a6" translate="yes" xml:space="preserve">
          <source>Note that once we&amp;rsquo;ve done this in all these views, we no longer need to import &lt;a href=&quot;../topics/templates#module-django.template.loader&quot;&gt;&lt;code&gt;loader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; (you&amp;rsquo;ll want to keep &lt;code&gt;HttpResponse&lt;/code&gt; if you still have the stub methods for &lt;code&gt;detail&lt;/code&gt;, &lt;code&gt;results&lt;/code&gt;, and &lt;code&gt;vote&lt;/code&gt;).</source>
          <target state="translated">请注意，一旦在所有这些视图中都完成了此操作，就不再需要导入&lt;a href=&quot;../topics/templates#module-django.template.loader&quot;&gt; &lt;code&gt;loader&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;（如果仍然有 &lt;code&gt;detail&lt;/code&gt; ， &lt;code&gt;results&lt;/code&gt; 和 &lt;code&gt;vote&lt;/code&gt; 的stub方法，则希望保留 &lt;code&gt;HttpResponse&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="db3daa7b3e0d58113112241aa78669b84d25e7f6" translate="yes" xml:space="preserve">
          <source>Note that only the execution of your view is enclosed in the transactions. Middleware runs outside of the transaction, and so does the rendering of template responses.</source>
          <target state="translated">请注意,只有你的视图的执行是封闭在事务中的。中间件运行在事务之外,模板响应的渲染也在事务之外。</target>
        </trans-unit>
        <trans-unit id="f230fc5e74b5fca6a965580a65f23bf035b6e813" translate="yes" xml:space="preserve">
          <source>Note that only the outermost call to &lt;a href=&quot;../../../topics/db/transactions#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; sets up a transaction and thus sets the time that &lt;code&gt;TransactionNow()&lt;/code&gt; will return; nested calls create savepoints which do not affect the transaction time.</source>
          <target state="translated">注意，只有对&lt;a href=&quot;../../../topics/db/transactions#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt;的最外层调用才能建立事务，从而设置 &lt;code&gt;TransactionNow()&lt;/code&gt; 返回的时间。嵌套调用创建不影响事务时间的保存点。</target>
        </trans-unit>
        <trans-unit id="d57570c30207a70feb1f95d543f2d181afc9bba6" translate="yes" xml:space="preserve">
          <source>Note that passing an empty dictionary creates a &lt;em&gt;bound&lt;/em&gt; form with empty data:</source>
          <target state="translated">请注意，传递空字典会创建一个包含空数据的&lt;em&gt;绑定&lt;/em&gt;形式：</target>
        </trans-unit>
        <trans-unit id="eaad0f28e2fcb42d6532c371c6cfac0fd491200a" translate="yes" xml:space="preserve">
          <source>Note that per-user installations can still affect the behavior of system tools that run as that user, so &lt;code&gt;virtualenv&lt;/code&gt; is a more robust solution (see below).</source>
          <target state="translated">请注意，按用户安装仍然会影响以该用户身份运行的系统工具的行为，因此 &lt;code&gt;virtualenv&lt;/code&gt; 是更可靠的解决方案（请参见下文）。</target>
        </trans-unit>
        <trans-unit id="cb0441db5179fedc88175f7abe68eb6db9244379" translate="yes" xml:space="preserve">
          <source>Note that pluralization is complicated and works differently in each language. Comparing &lt;code&gt;count&lt;/code&gt; to 1 isn&amp;rsquo;t always the correct rule. This code looks sophisticated, but will produce incorrect results for some languages:</source>
          <target state="translated">注意，复数是复杂的，并且在每种语言中的工作方式都不同。将 &lt;code&gt;count&lt;/code&gt; 与1比较并不总是正确的规则。这段代码看起来很复杂，但是对于某些语言会产生不正确的结果：</target>
        </trans-unit>
        <trans-unit id="5de11d40e524334a2d38e78962aaeec3d5b135e7" translate="yes" xml:space="preserve">
          <source>Note that request methods should be in uppercase.</source>
          <target state="translated">注意,请求方法应该用大写字母。</target>
        </trans-unit>
        <trans-unit id="968db22470d1ca267f45216e5aaa73f7fd939af9" translate="yes" xml:space="preserve">
          <source>Note that setting &lt;a href=&quot;#std:setting-EMAIL_SSL_CERTFILE&quot;&gt;&lt;code&gt;EMAIL_SSL_CERTFILE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-EMAIL_SSL_KEYFILE&quot;&gt;&lt;code&gt;EMAIL_SSL_KEYFILE&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t result in any certificate checking. They&amp;rsquo;re passed to the underlying SSL connection. Please refer to the documentation of Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/ssl.html#ssl.wrap_socket&quot;&gt;&lt;code&gt;ssl.wrap_socket()&lt;/code&gt;&lt;/a&gt; function for details on how the certificate chain file and private key file are handled.</source>
          <target state="translated">请注意，设置&lt;a href=&quot;#std:setting-EMAIL_SSL_CERTFILE&quot;&gt; &lt;code&gt;EMAIL_SSL_CERTFILE&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#std:setting-EMAIL_SSL_KEYFILE&quot;&gt; &lt;code&gt;EMAIL_SSL_KEYFILE&lt;/code&gt; &lt;/a&gt;不会导致任何证书检查。它们已传递到基础SSL连接。有关如何处理证书链文件和私钥文件的详细信息，请参考Python的&lt;a href=&quot;https://docs.python.org/3/library/ssl.html#ssl.wrap_socket&quot;&gt; &lt;code&gt;ssl.wrap_socket()&lt;/code&gt; &lt;/a&gt;函数的文档。</target>
        </trans-unit>
        <trans-unit id="c22e8dd57361cf848941e0793916235467d46530" translate="yes" xml:space="preserve">
          <source>Note that since &lt;code&gt;set()&lt;/code&gt; is a compound operation, it is subject to race conditions. For instance, new objects may be added to the database in between the call to &lt;code&gt;clear()&lt;/code&gt; and the call to &lt;code&gt;add()&lt;/code&gt;.</source>
          <target state="translated">注意，由于 &lt;code&gt;set()&lt;/code&gt; 是复合操作，因此它受竞争条件的影响。例如，可以在对 &lt;code&gt;clear()&lt;/code&gt; 的调用与对 &lt;code&gt;add()&lt;/code&gt; 的调用之间将新对象添加到数据库中。</target>
        </trans-unit>
        <trans-unit id="e1ea0edc5eb39ec2c96e83f140636e0429b857eb" translate="yes" xml:space="preserve">
          <source>Note that since the child template didn&amp;rsquo;t define the &lt;code&gt;sidebar&lt;/code&gt; block, the value from the parent template is used instead. Content within a &lt;code&gt;{% block %}&lt;/code&gt; tag in a parent template is always used as a fallback.</source>
          <target state="translated">请注意，由于子模板未定义 &lt;code&gt;sidebar&lt;/code&gt; 块，因此将使用父模板中的值。父模板中 &lt;code&gt;{% block %}&lt;/code&gt; 标记内的内容始终用作后备。</target>
        </trans-unit>
        <trans-unit id="a0ef7e754d821fe5a5389a0e0485b1236840d758" translate="yes" xml:space="preserve">
          <source>Note that some Django code was executed while running tests, but it is not listed here because of the &lt;code&gt;source&lt;/code&gt; flag passed to the previous command.</source>
          <target state="translated">请注意，某些Django代码是在运行测试时执行的，但由于将 &lt;code&gt;source&lt;/code&gt; 标志传递给了先前的命令，因此未在此处列出。</target>
        </trans-unit>
        <trans-unit id="b58e3568c1f9f0b7253202c19712cef23c12adeb" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt;&lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt;&lt;/a&gt; only steps in once another view has successfully produced a 404 response. If another view or middleware class attempts to produce a 404 but ends up raising an exception instead, the response will become an HTTP 500 (&amp;ldquo;Internal Server Error&amp;rdquo;) and the &lt;a href=&quot;#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt;&lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt;&lt;/a&gt; will not attempt to serve a flat page.</source>
          <target state="translated">请注意，&lt;a href=&quot;#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt; &lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt; &lt;/a&gt;仅在另一个视图成功产生404响应后才进入。如果另一个视图或中间件类尝试生成404但最终引发异常，则响应将变为HTTP 500（&amp;ldquo;内部服务器错误&amp;rdquo;），并且&lt;a href=&quot;#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt; &lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt; &lt;/a&gt;将不会尝试提供平面页。</target>
        </trans-unit>
        <trans-unit id="6fd81eb0266642f411e0ec2b93dda43fb0cdaa81" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method for an object is not necessarily called when &lt;a href=&quot;queries#topics-db-queries-delete&quot;&gt;deleting objects in bulk using a QuerySet&lt;/a&gt; or as a result of a &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.on_delete&quot;&gt;&lt;code&gt;cascading
delete&lt;/code&gt;&lt;/a&gt;. To ensure customized delete logic gets executed, you can use &lt;a href=&quot;../../ref/signals#django.db.models.signals.pre_delete&quot;&gt;&lt;code&gt;pre_delete&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;../../ref/signals#django.db.models.signals.post_delete&quot;&gt;&lt;code&gt;post_delete&lt;/code&gt;&lt;/a&gt; signals.</source>
          <target state="translated">请注意，&lt;a href=&quot;queries#topics-db-queries-delete&quot;&gt;使用QuerySet批量删除对象&lt;/a&gt;或&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.on_delete&quot;&gt; &lt;code&gt;cascading delete&lt;/code&gt; &lt;/a&gt;的结果时，不必调用对象的&lt;a href=&quot;../../ref/models/instances#django.db.models.Model.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt;方法。为了确保执行自定义的删除逻辑，您可以使用&lt;a href=&quot;../../ref/signals#django.db.models.signals.pre_delete&quot;&gt; &lt;code&gt;pre_delete&lt;/code&gt; &lt;/a&gt;和/或&lt;a href=&quot;../../ref/signals#django.db.models.signals.post_delete&quot;&gt; &lt;code&gt;post_delete&lt;/code&gt; &lt;/a&gt;信号。</target>
        </trans-unit>
        <trans-unit id="253ce872bdbdccddb3ef8b680bcb97ef630a7e6c" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.select_related&quot;&gt;&lt;code&gt;select_related()&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; method recursively prepopulates the cache of all one-to-many relationships ahead of time. Example:</source>
          <target state="translated">请注意，&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.select_related&quot;&gt; &lt;code&gt;select_related()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;方法会提前递归地预先填充所有一对多关系的缓存。例：</target>
        </trans-unit>
        <trans-unit id="e80f5630b8f1dca8b0ea0eedd1bf8d8773a13237" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;content&lt;/code&gt; argument must be an instance of either &lt;a href=&quot;#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; or of a subclass of &lt;a href=&quot;#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;, such as &lt;a href=&quot;#django.core.files.base.ContentFile&quot;&gt;&lt;code&gt;ContentFile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请注意， &lt;code&gt;content&lt;/code&gt; 的参数必须是实例&lt;a href=&quot;#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;或子类的&lt;a href=&quot;#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;，如&lt;a href=&quot;#django.core.files.base.ContentFile&quot;&gt; &lt;code&gt;ContentFile&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="69cf65c7f436b8fbaff150d2dc857544f903a181" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;content&lt;/code&gt; argument should be an instance of &lt;a href=&quot;../files/file#django.core.files.File&quot;&gt;&lt;code&gt;django.core.files.File&lt;/code&gt;&lt;/a&gt;, not Python&amp;rsquo;s built-in file object. You can construct a &lt;a href=&quot;../files/file#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; from an existing Python file object like this:</source>
          <target state="translated">请注意， &lt;code&gt;content&lt;/code&gt; 参数应该是&lt;a href=&quot;../files/file#django.core.files.File&quot;&gt; &lt;code&gt;django.core.files.File&lt;/code&gt; &lt;/a&gt;的实例，而不是Python的内置文件对象。您可以像这样从现有的Python文件对象构造一个&lt;a href=&quot;../files/file#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f40ef01b229f9c63dbeb83559c6536f91520f3ba" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;docs&lt;/code&gt; directory won&amp;rsquo;t be included in your package unless you add some files to it. Many Django apps also provide their documentation online through sites like &lt;a href=&quot;https://readthedocs.org&quot;&gt;readthedocs.org&lt;/a&gt;.</source>
          <target state="translated">请注意，除非您向其中添加一些文件，否则 &lt;code&gt;docs&lt;/code&gt; 目录不会包含在您的软件包中。许多Django应用程序还通过&lt;a href=&quot;https://readthedocs.org&quot;&gt;readthedocs.org等&lt;/a&gt;网站在线提供其文档。</target>
        </trans-unit>
        <trans-unit id="480e601acbf5c70f30565ccc01d9a0fb37503e26" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;models&lt;/code&gt; module is imported from &lt;code&gt;django.contrib.gis.db&lt;/code&gt;.</source>
          <target state="translated">请注意， &lt;code&gt;models&lt;/code&gt; 模块是从 &lt;code&gt;django.contrib.gis.db&lt;/code&gt; 导入的。</target>
        </trans-unit>
        <trans-unit id="d8c97e4e91823174dcc8b363df50dbaa5e57e373" translate="yes" xml:space="preserve">
          <source>Note that the block includes &lt;em&gt;all&lt;/em&gt; the text between the &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;endfilter&lt;/code&gt; tags.</source>
          <target state="translated">请注意，该块包含 &lt;code&gt;filter&lt;/code&gt; 和 &lt;code&gt;endfilter&lt;/code&gt; 标记之间的&lt;em&gt;所有&lt;/em&gt;文本。</target>
        </trans-unit>
        <trans-unit id="d560327fe2008995352ea5ff59887465ed4e02c3" translate="yes" xml:space="preserve">
          <source>Note that the cache backend isn&amp;rsquo;t vulnerable to this problem, because caches automatically delete stale data. Neither is the cookie backend, because the session data is stored by the users&amp;rsquo; browsers.</source>
          <target state="translated">请注意，缓存后端不容易受到此问题的影响，因为缓存会自动删除陈旧数据。cookie后端也不是，因为会话数据是由用户的浏览器存储的。</target>
        </trans-unit>
        <trans-unit id="997b862ea7c654dba69036735ee9c3d739d594e9" translate="yes" xml:space="preserve">
          <source>Note that the cache control settings &amp;ldquo;private&amp;rdquo; and &amp;ldquo;public&amp;rdquo; are mutually exclusive. The decorator ensures that the &amp;ldquo;public&amp;rdquo; directive is removed if &amp;ldquo;private&amp;rdquo; should be set (and vice versa). An example use of the two directives would be a blog site that offers both private and public entries. Public entries may be cached on any shared cache. The following code uses &lt;a href=&quot;../ref/utils#django.utils.cache.patch_cache_control&quot;&gt;&lt;code&gt;patch_cache_control()&lt;/code&gt;&lt;/a&gt;, the manual way to modify the cache control header (it is internally called by the &lt;a href=&quot;http/decorators#django.views.decorators.cache.cache_control&quot;&gt;&lt;code&gt;cache_control()&lt;/code&gt;&lt;/a&gt; decorator):</source>
          <target state="translated">请注意，缓存控制设置&amp;ldquo;专用&amp;rdquo;和&amp;ldquo;公用&amp;rdquo;是互斥的。装饰器确保如果应设置为&amp;ldquo; private&amp;rdquo;，则删除&amp;ldquo; public&amp;rdquo;指令（反之亦然）。这两个指令的示例用法是提供私有条目和公共条目的博客网站。公共条目可以缓存在任何共享缓存中。以下代码使用&lt;a href=&quot;../ref/utils#django.utils.cache.patch_cache_control&quot;&gt; &lt;code&gt;patch_cache_control()&lt;/code&gt; &lt;/a&gt;，这是修改缓存控制标头的手动方式（它由&lt;a href=&quot;http/decorators#django.views.decorators.cache.cache_control&quot;&gt; &lt;code&gt;cache_control()&lt;/code&gt; &lt;/a&gt;装饰器在内部调用）：</target>
        </trans-unit>
        <trans-unit id="329a8fe91b918a1eabc78ec4127577a2eaa4620a" translate="yes" xml:space="preserve">
          <source>Note that the default IP address, &lt;code&gt;127.0.0.1&lt;/code&gt;, is not accessible from other machines on your network. To make your development server viewable to other machines on the network, use its own IP address (e.g. &lt;code&gt;192.168.2.1&lt;/code&gt;) or &lt;code&gt;0.0.0.0&lt;/code&gt; or &lt;code&gt;::&lt;/code&gt; (with IPv6 enabled).</source>
          <target state="translated">请注意，无法从网络上的其他计算机访问默认IP地址 &lt;code&gt;127.0.0.1&lt;/code&gt; 。为了使您的开发服务器对网络上的其他计算机可见，请使用其自己的IP地址（例如 &lt;code&gt;192.168.2.1&lt;/code&gt; ）或 &lt;code&gt;0.0.0.0&lt;/code&gt; 或 &lt;code&gt;::&lt;/code&gt; :（启用IPv6）。</target>
        </trans-unit>
        <trans-unit id="40528c2a9e8caf146e1fc466ce15cb5b451cd1a5" translate="yes" xml:space="preserve">
          <source>Note that the first argument &lt;em&gt;must&lt;/em&gt; be called &lt;code&gt;context&lt;/code&gt;.</source>
          <target state="translated">注意，第一个参数&lt;em&gt;必须&lt;/em&gt;称为 &lt;code&gt;context&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65e9739383cf60a6791ac75fed8f327d25413bd7" translate="yes" xml:space="preserve">
          <source>Note that the first parameter to the function &lt;em&gt;must&lt;/em&gt; be called &lt;code&gt;context&lt;/code&gt;.</source>
          <target state="translated">注意，该函数的第一个参数&lt;em&gt;必须&lt;/em&gt;称为 &lt;code&gt;context&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0abaf39e2d3058e4498c22aad4c34d7e6f3e0926" translate="yes" xml:space="preserve">
          <source>Note that the header needs to be in the format as used by &lt;code&gt;request.META&lt;/code&gt; &amp;ndash; all caps and likely starting with &lt;code&gt;HTTP_&lt;/code&gt;. (Remember, Django automatically adds &lt;code&gt;'HTTP_'&lt;/code&gt; to the start of x-header names before making the header available in &lt;code&gt;request.META&lt;/code&gt;.)</source>
          <target state="translated">请注意，标头必须采用 &lt;code&gt;request.META&lt;/code&gt; 所使用的格式-全部为大写，可能以 &lt;code&gt;HTTP_&lt;/code&gt; 开头。（请记住，在将标头在 &lt;code&gt;request.META&lt;/code&gt; 中可用之前，Django会自动在x标头名称的开头添加 &lt;code&gt;'HTTP_'&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="a0b88ccf06c4a2dde1c8ecf8326ade5f6087323f" translate="yes" xml:space="preserve">
          <source>Note that the key in the dictionary is the actual field class, &lt;em&gt;not&lt;/em&gt; a string. The value is another dictionary; these arguments will be passed to the form field&amp;rsquo;s &lt;code&gt;__init__()&lt;/code&gt; method. See &lt;a href=&quot;../../forms/api&quot;&gt;The Forms API&lt;/a&gt; for details.</source>
          <target state="translated">请注意，字典中的键是实际的字段类，&lt;em&gt;而不是&lt;/em&gt;字符串。该值是另一个字典；这些参数将传递给表单字段的 &lt;code&gt;__init__()&lt;/code&gt; 方法。有关详细信息，请参见&lt;a href=&quot;../../forms/api&quot;&gt;Forms API&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09019a3c236f5e543c42c3fc84c9325d2206d759" translate="yes" xml:space="preserve">
          <source>Note that the label suffix is added only if the last character of the label isn&amp;rsquo;t a punctuation character (in English, those are &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt; or &lt;code&gt;:&lt;/code&gt;).</source>
          <target state="translated">请注意，仅当标签的最后一个字符不是标点符号时才添加标签后缀（英语中为 &lt;code&gt;.&lt;/code&gt; ， &lt;code&gt;!&lt;/code&gt; ， &lt;code&gt;?&lt;/code&gt; 或 &lt;code&gt;:&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="45f9ccb1fbd2c54a94373b7ce9767a5b690ebf8b" translate="yes" xml:space="preserve">
          <source>Note that the latest Django master may not always be stable. When developing against master, you can check &lt;a href=&quot;https://djangoci.com&quot;&gt;Django&amp;rsquo;s continuous integration builds&lt;/a&gt; to determine if the failures are specific to your machine or if they are also present in Django&amp;rsquo;s official builds. If you click to view a particular build, you can view the &amp;ldquo;Configuration Matrix&amp;rdquo; which shows failures broken down by Python version and database backend.</source>
          <target state="translated">请注意，最新的Django master可能并不总是稳定的。在针对master进行开发时，您可以检查&lt;a href=&quot;https://djangoci.com&quot;&gt;Django的持续集成版本，&lt;/a&gt;以确定故障是否特定于您的计算机，或者是否也出现在Django的正式版本中。如果单击以查看特定的构建，则可以查看&amp;ldquo;配置矩阵&amp;rdquo;，其中显示了按Python版本和数据库后端细分的故障。</target>
        </trans-unit>
        <trans-unit id="1c1acd60a0e2efb4514768243487586e4ccb5e22" translate="yes" xml:space="preserve">
          <source>Note that the loader performs an optimization when it first runs: it caches a list of which &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; packages have a &lt;code&gt;templates&lt;/code&gt; subdirectory.</source>
          <target state="translated">请注意，该加载程序在首次运行时会进行优化：它会缓存&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;软件包具有 &lt;code&gt;templates&lt;/code&gt; 子目录的列表。</target>
        </trans-unit>
        <trans-unit id="1d5d95f9aa8b375a624a768724d8045e847dc228" translate="yes" xml:space="preserve">
          <source>Note that the name of the matched pattern in the path strings of the second and third patterns has changed from &lt;code&gt;&amp;lt;question_id&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;pk&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">请注意，第二个和第三个模式的路径字符串中匹配模式的名称已从 &lt;code&gt;&amp;lt;question_id&amp;gt;&lt;/code&gt; 更改为 &lt;code&gt;&amp;lt;pk&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b16982e8febbd865c853824b0312670d37d10b80" translate="yes" xml:space="preserve">
          <source>Note that the name of the view function doesn&amp;rsquo;t matter; it doesn&amp;rsquo;t have to be named in a certain way in order for Django to recognize it. We&amp;rsquo;re calling it &lt;code&gt;current_datetime&lt;/code&gt; here, because that name clearly indicates what it does.</source>
          <target state="translated">请注意，视图函数的名称无关紧要；它不必以某种方式命名即可让Django识别它。我们在这里将其称为 &lt;code&gt;current_datetime&lt;/code&gt; ，因为该名称清楚地表明了它的作用。</target>
        </trans-unit>
        <trans-unit id="1d37566e826663dd236669ec8c0a538314d88d04" translate="yes" xml:space="preserve">
          <source>Note that the object will no longer be in the database, so be very careful what you do with this instance.</source>
          <target state="translated">请注意,该对象将不再在数据库中,所以要非常小心地处理这个实例。</target>
        </trans-unit>
        <trans-unit id="6cb9b339d54209535bd6dcb521d136ae0891eda7" translate="yes" xml:space="preserve">
          <source>Note that the order in which fixture files are processed is undefined. However, all fixture data is installed as a single transaction, so data in one fixture can reference data in another fixture. If the database backend supports row-level constraints, these constraints will be checked at the end of the transaction.</source>
          <target state="translated">请注意,处理夹具文件的顺序是未定义的。然而,所有的夹具数据都是作为一个事务安装的,因此一个夹具中的数据可以引用另一个夹具中的数据。如果数据库后端支持行级约束,这些约束将在事务结束时被检查。</target>
        </trans-unit>
        <trans-unit id="cb80071655e1d9fbbd4b908b7ff6b7de62de9971" translate="yes" xml:space="preserve">
          <source>Note that the order of &lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; matters. Generally, you can put &lt;a href=&quot;#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt;&lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt;&lt;/a&gt; at the end of the list. This means it will run first when processing the response, and ensures that any other response-processing middleware see the real flatpage response rather than the 404.</source>
          <target state="translated">请注意，&lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; 的顺序很&lt;/a&gt;重要。通常，您可以将&lt;a href=&quot;#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt; &lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt; &lt;/a&gt;放在列表的末尾。这意味着它将在处理响应时首先运行，并确保任何其他响应处理中间件都能看到真实的平面响应，而不是404。</target>
        </trans-unit>
        <trans-unit id="08698ded25f56ec765d5763a05954e398b0131e4" translate="yes" xml:space="preserve">
          <source>Note that the order of &lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; matters. Generally, you can put &lt;a href=&quot;#django.contrib.redirects.middleware.RedirectFallbackMiddleware&quot;&gt;&lt;code&gt;RedirectFallbackMiddleware&lt;/code&gt;&lt;/a&gt; at the end of the list, because it&amp;rsquo;s a last resort.</source>
          <target state="translated">请注意，&lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; 的顺序很&lt;/a&gt;重要。通常，您可以将&lt;a href=&quot;#django.contrib.redirects.middleware.RedirectFallbackMiddleware&quot;&gt; &lt;code&gt;RedirectFallbackMiddleware&lt;/code&gt; &lt;/a&gt;放在列表的末尾，因为这是不得已的方法。</target>
        </trans-unit>
        <trans-unit id="fef6bd3ebae4c1ec9ddd2798fe72b4fcf23c8784" translate="yes" xml:space="preserve">
          <source>Note that the parentheses required by most database engines around subqueries are not required in Django&amp;rsquo;s &lt;code&gt;select&lt;/code&gt; clauses. Also note that some database backends, such as some MySQL versions, don&amp;rsquo;t support subqueries.</source>
          <target state="translated">请注意，Django的 &lt;code&gt;select&lt;/code&gt; 子句中不需要大多数数据库引擎围绕子查询的括号。还要注意，某些数据库后端（例如某些MySQL版本）不支持子查询。</target>
        </trans-unit>
        <trans-unit id="cfc63e63ecf8ac2eb2e30b758738319acc47dd43" translate="yes" xml:space="preserve">
          <source>Note that the queries generated in object deletion is an implementation detail subject to change.</source>
          <target state="translated">需要注意的是,对象删除中产生的查询是一个实施细节,可能会发生变化。</target>
        </trans-unit>
        <trans-unit id="08ece2bb01374f6040408665502dabf3bdbfee50" translate="yes" xml:space="preserve">
          <source>Note that the result cache of the primary &lt;code&gt;QuerySet&lt;/code&gt; and all specified related objects will then be fully loaded into memory. This changes the typical behavior of &lt;code&gt;QuerySets&lt;/code&gt;, which normally try to avoid loading all objects into memory before they are needed, even after a query has been executed in the database.</source>
          <target state="translated">请注意，主要的结果缓存 &lt;code&gt;QuerySet&lt;/code&gt; 和所有指定相关对象将被完全加载到内存中。这改变了 &lt;code&gt;QuerySets&lt;/code&gt; 的典型行为，该行为通常试图避免在需要它们之前就将所有对象加载到内存中，即使在数据库中执行了查询之后也是如此。</target>
        </trans-unit>
        <trans-unit id="aa58b675144be5fd04bd425ca97fc559b052e8eb" translate="yes" xml:space="preserve">
          <source>Note that the return code for the test-runner script is 1 for any number of failed and erroneous tests. If all the tests pass, the return code is 0. This feature is useful if you&amp;rsquo;re using the test-runner script in a shell script and need to test for success or failure at that level.</source>
          <target state="translated">请注意，对于任何数量的失败和错误测试，test-runner脚本的返回码均为1。如果所有测试均通过，则返回码为0。如果您在Shell脚本中使用test-runner脚本，并且需要在该级别上测试成功或失败，则此功能很有用。</target>
        </trans-unit>
        <trans-unit id="d50fd012ff22d54624835fa78fdc60e01d630190" translate="yes" xml:space="preserve">
          <source>Note that the session cookie is only sent when a session has been created or modified. If &lt;a href=&quot;../../ref/settings#std:setting-SESSION_SAVE_EVERY_REQUEST&quot;&gt;&lt;code&gt;SESSION_SAVE_EVERY_REQUEST&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;, the session cookie will be sent on every request.</source>
          <target state="translated">请注意，仅在创建或修改会话后才发送会话cookie。如果&lt;a href=&quot;../../ref/settings#std:setting-SESSION_SAVE_EVERY_REQUEST&quot;&gt; &lt;code&gt;SESSION_SAVE_EVERY_REQUEST&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;True&lt;/code&gt; ，则将在每个请求上发送会话cookie。</target>
        </trans-unit>
        <trans-unit id="5a3066deed15c333016258a7e176bfa5fbe7bff4" translate="yes" xml:space="preserve">
          <source>Note that the test client is not intended to be a replacement for &lt;a href=&quot;http://seleniumhq.org/&quot;&gt;Selenium&lt;/a&gt; or other &amp;ldquo;in-browser&amp;rdquo; frameworks. Django&amp;rsquo;s test client has a different focus. In short:</source>
          <target state="translated">请注意，测试客户端无意替代&lt;a href=&quot;http://seleniumhq.org/&quot;&gt;Selenium&lt;/a&gt;或其他&amp;ldquo;浏览器内&amp;rdquo;框架。Django的测试客户端有不同的重点。简而言之：</target>
        </trans-unit>
        <trans-unit id="e7c15fa6899ee16f22c2f3eebad5d4575601d120" translate="yes" xml:space="preserve">
          <source>Note that there also is a &lt;a href=&quot;#django.forms.MultipleHiddenInput&quot;&gt;&lt;code&gt;MultipleHiddenInput&lt;/code&gt;&lt;/a&gt; widget that encapsulates a set of hidden input elements.</source>
          <target state="translated">请注意，还有一个&lt;a href=&quot;#django.forms.MultipleHiddenInput&quot;&gt; &lt;code&gt;MultipleHiddenInput&lt;/code&gt; &lt;/a&gt;小部件，它封装了一组隐藏的输入元素。</target>
        </trans-unit>
        <trans-unit id="f3dc5df00a8e3e730c40fe838d9cf28eedc30a0f" translate="yes" xml:space="preserve">
          <source>Note that there are a number of &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.bulk_create&quot;&gt;&lt;code&gt;caveats to this method&lt;/code&gt;&lt;/a&gt;, so make sure it&amp;rsquo;s appropriate for your use case.</source>
          <target state="translated">请&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.bulk_create&quot;&gt; &lt;code&gt;caveats to this method&lt;/code&gt; &lt;/a&gt;有很多注意事项，因此请确保它适合您的用例。</target>
        </trans-unit>
        <trans-unit id="ed11446b0c6e152b1bcc9ce1866f87a0033a7c22" translate="yes" xml:space="preserve">
          <source>Note that there are a number of &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.bulk_update&quot;&gt;&lt;code&gt;caveats to this method&lt;/code&gt;&lt;/a&gt;, so make sure it&amp;rsquo;s appropriate for your use case.</source>
          <target state="translated">请&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.bulk_update&quot;&gt; &lt;code&gt;caveats to this method&lt;/code&gt; &lt;/a&gt;有很多注意事项，因此请确保它适合您的用例。</target>
        </trans-unit>
        <trans-unit id="ec4883b6f62b2a123fc0b302f2c2ef4d90d01466" translate="yes" xml:space="preserve">
          <source>Note that there is a difference between using &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; with a slice of &lt;code&gt;[0]&lt;/code&gt;. If there are no results that match the query, &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; will raise a &lt;code&gt;DoesNotExist&lt;/code&gt; exception. This exception is an attribute of the model class that the query is being performed on - so in the code above, if there is no &lt;code&gt;Entry&lt;/code&gt; object with a primary key of 1, Django will raise &lt;code&gt;Entry.DoesNotExist&lt;/code&gt;.</source>
          <target state="translated">注意，使用&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;和使用带有 &lt;code&gt;[0]&lt;/code&gt; 切片的&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt;之间是有区别的。如果没有与查询匹配的结果，则&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;将引发 &lt;code&gt;DoesNotExist&lt;/code&gt; 异常。该异常是要执行查询的模型类的一个属性-因此在上面的代码中，如果没有主键为1的 &lt;code&gt;Entry&lt;/code&gt; 对象，则Django将引发 &lt;code&gt;Entry.DoesNotExist&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e083cac1d45447670947e2765f04c7f401bd320c" translate="yes" xml:space="preserve">
          <source>Note that there is an extra &amp;ldquo;Delete?&amp;rdquo; column that allows removing rows added using the &amp;ldquo;Add Another Choice&amp;rdquo; button and rows that have already been saved.</source>
          <target state="translated">请注意，还有一个额外的&amp;ldquo;删除？&amp;rdquo; 列，该列允许删除使用&amp;ldquo;添加其他选择&amp;rdquo;按钮添加的行以及已保存的行。</target>
        </trans-unit>
        <trans-unit id="d2130933d4a7a35839fd38a445d7757805cf2913" translate="yes" xml:space="preserve">
          <source>Note that there&amp;rsquo;s no need to specify the keyword argument of the model that defines the relationship. In the above example, we don&amp;rsquo;t pass the parameter &lt;code&gt;blog&lt;/code&gt; to &lt;code&gt;create()&lt;/code&gt;. Django figures out that the new &lt;code&gt;Entry&lt;/code&gt; object&amp;rsquo;s &lt;code&gt;blog&lt;/code&gt; field should be set to &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">请注意，无需指定定义关系的模型的关键字参数。在上面的示例中，我们没有将参数 &lt;code&gt;blog&lt;/code&gt; 传递给 &lt;code&gt;create()&lt;/code&gt; 。Django指出新的 &lt;code&gt;Entry&lt;/code&gt; 对象的 &lt;code&gt;blog&lt;/code&gt; 字段应设置为 &lt;code&gt;b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2477290a913291cbc38ebf667d64085a6083a034" translate="yes" xml:space="preserve">
          <source>Note that these are &lt;em&gt;partial&lt;/em&gt; matches. &lt;code&gt;'PASS'&lt;/code&gt; will also match PASSWORD, just as &lt;code&gt;'TOKEN'&lt;/code&gt; will also match TOKENIZED and so on.</source>
          <target state="translated">请注意，这些是&lt;em&gt;部分&lt;/em&gt;匹配。 &lt;code&gt;'PASS'&lt;/code&gt; 通行证 &lt;code&gt;'TOKEN'&lt;/code&gt; 也将与&amp;ldquo;密码&amp;rdquo;匹配，就像&amp;ldquo;通证&amp;rdquo;也将与&amp;ldquo;通证&amp;rdquo;匹配，依此类推。</target>
        </trans-unit>
        <trans-unit id="e1fc5fa3e855f806a565c439909e116dd3591f60" translate="yes" xml:space="preserve">
          <source>Note that these paths should use Unix-style forward slashes, even on Windows (e.g. &lt;code&gt;&quot;C:/Users/user/mysite/extra_static_content&quot;&lt;/code&gt;).</source>
          <target state="translated">请注意，即使在Windows上，这些路径也应使用Unix风格的正斜杠（例如 &lt;code&gt;&quot;C:/Users/user/mysite/extra_static_content&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="795b6608e8468ba6ef747bf20d7df8c092e409b7" translate="yes" xml:space="preserve">
          <source>Note that these paths should use Unix-style forward slashes, even on Windows.</source>
          <target state="translated">请注意,这些路径应该使用Unix风格的斜线,即使在Windows上也是如此。</target>
        </trans-unit>
        <trans-unit id="2cf35c103d926ddc769c79ec834723110b7dd384" translate="yes" xml:space="preserve">
          <source>Note that this HTML version of the email contains a full traceback, with names and values of local variables at each level of the stack, plus the values of your Django settings. This information is potentially very sensitive, and you may not want to send it over email. Consider using something such as &lt;a href=&quot;https://pypi.org/project/sentry/&quot;&gt;Sentry&lt;/a&gt; to get the best of both worlds &amp;ndash; the rich information of full tracebacks plus the security of &lt;em&gt;not&lt;/em&gt; sending the information over email. You may also explicitly designate certain sensitive information to be filtered out of error reports &amp;ndash; learn more on &lt;a href=&quot;../howto/error-reporting#filtering-error-reports&quot;&gt;Filtering error reports&lt;/a&gt;.</source>
          <target state="translated">请注意，此电子邮件的HTML版本包含完整的追溯，在堆栈的每个级别上都包含局部变量的名称和值，以及Django设置的值。此信息可能非常敏感，您可能不想通过电子邮件发送它。考虑使用诸如&lt;a href=&quot;https://pypi.org/project/sentry/&quot;&gt;Sentry之类的&lt;/a&gt;东西来获得两全其美的体验&amp;ndash;全面的回溯的丰富信息以及&lt;em&gt;不&lt;/em&gt;通过电子邮件发送信息的安全性。您也可以明确指定&lt;a href=&quot;../howto/error-reporting#filtering-error-reports&quot;&gt;要从错误报告中&lt;/a&gt;过滤掉的某些敏感信息&amp;ndash;了解有关过滤错误报告的更多信息。</target>
        </trans-unit>
        <trans-unit id="8a3d1d6be0677336f3c4ce808049c72f672b6643" translate="yes" xml:space="preserve">
          <source>Note that this checks only for the existence of a given key, not that the value of a key is non-empty.</source>
          <target state="translated">注意,这只是检查给定的键的存在,而不是检查键的值是非空的。</target>
        </trans-unit>
        <trans-unit id="0bbb736bbd29d6ee2584aa607cfd01a5217b40a3" translate="yes" xml:space="preserve">
          <source>Note that this equivalent to:</source>
          <target state="translated">注意,这相当于。</target>
        </trans-unit>
        <trans-unit id="dba99c12af9dce2149cb16de622b8b3d2a6c2aad" translate="yes" xml:space="preserve">
          <source>Note that this is different than &lt;a href=&quot;#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; is purely database-related, whereas &lt;a href=&quot;#django.db.models.Field.blank&quot;&gt;&lt;code&gt;blank&lt;/code&gt;&lt;/a&gt; is validation-related. If a field has &lt;code&gt;blank=True&lt;/code&gt;, form validation will allow entry of an empty value. If a field has &lt;code&gt;blank=False&lt;/code&gt;, the field will be required.</source>
          <target state="translated">请注意，这不同于&lt;a href=&quot;#django.db.models.Field.null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;#django.db.models.Field.null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;纯粹是与数据库有关的，而&lt;a href=&quot;#django.db.models.Field.blank&quot;&gt; &lt;code&gt;blank&lt;/code&gt; &lt;/a&gt;是与验证有关的。如果字段具有 &lt;code&gt;blank=True&lt;/code&gt; ，则表单验证将允许输入空值。如果字段具有 &lt;code&gt;blank=False&lt;/code&gt; ，那么将需要该字段。</target>
        </trans-unit>
        <trans-unit id="e1a927a86b31c6fe256c0c201864b03e59d37343" translate="yes" xml:space="preserve">
          <source>Note that this is different than &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; is purely database-related, whereas &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.blank&quot;&gt;&lt;code&gt;blank&lt;/code&gt;&lt;/a&gt; is validation-related. If a field has &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.blank&quot;&gt;&lt;code&gt;blank=True&lt;/code&gt;&lt;/a&gt;, form validation will allow entry of an empty value. If a field has &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.blank&quot;&gt;&lt;code&gt;blank=False&lt;/code&gt;&lt;/a&gt;, the field will be required.</source>
          <target state="translated">请注意，这不同于&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;纯粹是与数据库有关的，而&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.blank&quot;&gt; &lt;code&gt;blank&lt;/code&gt; &lt;/a&gt;是与验证有关的。如果字段具有&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.blank&quot;&gt; &lt;code&gt;blank=True&lt;/code&gt; &lt;/a&gt;，则表单验证将允许输入空值。如果字段具有&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.blank&quot;&gt; &lt;code&gt;blank=False&lt;/code&gt; &lt;/a&gt;，那么将需要该字段。</target>
        </trans-unit>
        <trans-unit id="65807d9d49cf72ec77bf7a331d692c91fa7c9ef4" translate="yes" xml:space="preserve">
          <source>Note that this is not quite the same as slicing from the end of a sequence in Python. The above example will return the last item first, then the penultimate item and so on. If we had a Python sequence and looked at &lt;code&gt;seq[-5:]&lt;/code&gt;, we would see the fifth-last item first. Django doesn&amp;rsquo;t support that mode of access (slicing from the end), because it&amp;rsquo;s not possible to do it efficiently in SQL.</source>
          <target state="translated">请注意，这与在Python中从序列末尾切片并不完全相同。上面的示例将首先返回最后一个项目，然后是倒数第二个项目，依此类推。如果我们有一个Python序列并查看 &lt;code&gt;seq[-5:]&lt;/code&gt; ，我们将首先看到倒数第二个项目。Django不支持这种访问方式（从末尾切片），因为不可能在SQL中高效地进行访问。</target>
        </trans-unit>
        <trans-unit id="bb0ad9f46efaf6ea73d6b6569c751fa30e6aab82" translate="yes" xml:space="preserve">
          <source>Note that this isn&amp;rsquo;t necessarily the time zone of the server. For example, one server may serve multiple Django-powered sites, each with a separate time zone setting.</source>
          <target state="translated">请注意，这不一定是服务器的时区。例如，一台服务器可以服务于多个由Django驱动的站点，每个站点都有单独的时区设置。</target>
        </trans-unit>
        <trans-unit id="c953b63059173178458ed761fbedea0ac39027ac" translate="yes" xml:space="preserve">
          <source>Note that this only works given two things:</source>
          <target state="translated">需要注意的是,这只适用于两件事。</target>
        </trans-unit>
        <trans-unit id="43246198826a48db05dda06a13016417e496af6b" translate="yes" xml:space="preserve">
          <source>Note that this server does &lt;em&gt;not&lt;/em&gt; automatically detect changes to your Python source code (as &lt;a href=&quot;#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; does). It does, however, detect changes to templates.</source>
          <target state="translated">请注意，此服务器也&lt;em&gt;不会&lt;/em&gt;自动检测对你的Python代码（如&lt;a href=&quot;#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; 命令&lt;/a&gt;一样）。但是，它确实检测到模板的更改。</target>
        </trans-unit>
        <trans-unit id="77708f0489400a9d946be1d05b99670aa11a0f4b" translate="yes" xml:space="preserve">
          <source>Note that this value is &lt;em&gt;not&lt;/em&gt; HTML-escaped in automatically-generated forms. This lets you include HTML in &lt;a href=&quot;#django.db.models.Field.help_text&quot;&gt;&lt;code&gt;help_text&lt;/code&gt;&lt;/a&gt; if you so desire. For example:</source>
          <target state="translated">请注意，此值&lt;em&gt;不会&lt;/em&gt;以自动生成的形式转义为HTML。如果需要，可以在&lt;a href=&quot;#django.db.models.Field.help_text&quot;&gt; &lt;code&gt;help_text&lt;/code&gt; 中&lt;/a&gt;包含HTML 。例如：</target>
        </trans-unit>
        <trans-unit id="bcf38a05a5b6f4694b53daa8eea90c967fc370a2" translate="yes" xml:space="preserve">
          <source>Note that this value is &lt;em&gt;not&lt;/em&gt; HTML-escaped when it&amp;rsquo;s displayed in the admin interface. This lets you include HTML if you so desire. Alternatively you can use plain text and &lt;a href=&quot;../../utils#django.utils.html.escape&quot;&gt;&lt;code&gt;django.utils.html.escape()&lt;/code&gt;&lt;/a&gt; to escape any HTML special characters.</source>
          <target state="translated">请注意，在管理界面中显示此值时，&lt;em&gt;不会&lt;/em&gt;将该值转义为HTML。如果需要，这可以让您包含HTML。或者，您可以使用纯文本和&lt;a href=&quot;../../utils#django.utils.html.escape&quot;&gt; &lt;code&gt;django.utils.html.escape()&lt;/code&gt; &lt;/a&gt;来转义任何HTML特殊字符。</target>
        </trans-unit>
        <trans-unit id="906411ef03113b0636d2db25f54351b72fe13574" translate="yes" xml:space="preserve">
          <source>Note that unlike &lt;a href=&quot;#django.contrib.sessions.serializers.PickleSerializer&quot;&gt;&lt;code&gt;PickleSerializer&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#django.contrib.sessions.serializers.JSONSerializer&quot;&gt;&lt;code&gt;JSONSerializer&lt;/code&gt;&lt;/a&gt; cannot handle arbitrary Python data types. As is often the case, there is a trade-off between convenience and security. If you wish to store more advanced data types including &lt;code&gt;datetime&lt;/code&gt; and &lt;code&gt;Decimal&lt;/code&gt; in JSON backed sessions, you will need to write a custom serializer (or convert such values to a JSON serializable object before storing them in &lt;code&gt;request.session&lt;/code&gt;). While serializing these values is often straightforward (&lt;a href=&quot;../serialization#django.core.serializers.json.DjangoJSONEncoder&quot;&gt;&lt;code&gt;DjangoJSONEncoder&lt;/code&gt;&lt;/a&gt; may be helpful), writing a decoder that can reliably get back the same thing that you put in is more fragile. For example, you run the risk of returning a &lt;code&gt;datetime&lt;/code&gt; that was actually a string that just happened to be in the same format chosen for &lt;code&gt;datetime&lt;/code&gt;s).</source>
          <target state="translated">请注意，与&lt;a href=&quot;#django.contrib.sessions.serializers.PickleSerializer&quot;&gt; &lt;code&gt;PickleSerializer&lt;/code&gt; &lt;/a&gt;不同，&lt;a href=&quot;#django.contrib.sessions.serializers.JSONSerializer&quot;&gt; &lt;code&gt;JSONSerializer&lt;/code&gt; &lt;/a&gt;无法处理任意Python数据类型。通常，在便利性和安全性之间需要权衡取舍。如果您希望在JSON支持的会话中存储更高级的数据类型（包括 &lt;code&gt;datetime&lt;/code&gt; 和 &lt;code&gt;Decimal&lt;/code&gt; ，则需要编写一个自定义的序列化器（或在将它们存储在 &lt;code&gt;request.session&lt;/code&gt; 中之前将这些值转换为JSON可序列化的对象）。虽然序列化这些值通常很简单（&lt;a href=&quot;../serialization#django.core.serializers.json.DjangoJSONEncoder&quot;&gt; &lt;code&gt;DjangoJSONEncoder&lt;/code&gt; &lt;/a&gt;可能会有所帮助），但是编写可以可靠地取回所放入内容的解码器更加脆弱。例如，您冒着返回 &lt;code&gt;datetime&lt;/code&gt; 时间的风险实际上是一个字符串，刚好与为 &lt;code&gt;datetime&lt;/code&gt; 选择的格式相同）。</target>
        </trans-unit>
        <trans-unit id="702d81c03f196bf44f8bcd6b11a9b027b74ab4bb" translate="yes" xml:space="preserve">
          <source>Note that unlike a dictionary, &lt;code&gt;del&lt;/code&gt; doesn&amp;rsquo;t raise &lt;code&gt;KeyError&lt;/code&gt; if the header field doesn&amp;rsquo;t exist.</source>
          <target state="translated">请注意，与字典不同，如果标头字段不存在，则 &lt;code&gt;del&lt;/code&gt; 不会引发 &lt;code&gt;KeyError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66f752221b158da1f8b91ce1869204010b1f48ea" translate="yes" xml:space="preserve">
          <source>Note that using &lt;code&gt;YearInSchool.SENIOR&lt;/code&gt;, &lt;code&gt;YearInSchool['SENIOR']&lt;/code&gt;, or &lt;code&gt;YearInSchool('SR')&lt;/code&gt; to access or lookup enum members work as expected, as do the &lt;code&gt;.name&lt;/code&gt; and &lt;code&gt;.value&lt;/code&gt; properties on the members.</source>
          <target state="translated">请注意，使用 &lt;code&gt;YearInSchool.SENIOR&lt;/code&gt; ， &lt;code&gt;YearInSchool['SENIOR']&lt;/code&gt; 或 &lt;code&gt;YearInSchool('SR')&lt;/code&gt; 来访问或查找枚举成员的工作与预期的一样，成员上的 &lt;code&gt;.name&lt;/code&gt; 和 &lt;code&gt;.value&lt;/code&gt; 属性也是如此。</target>
        </trans-unit>
        <trans-unit id="f50008769d1a14e593867a6db9cdf9470058cdd6" translate="yes" xml:space="preserve">
          <source>Note that using &lt;code&gt;iterator()&lt;/code&gt; on a &lt;code&gt;QuerySet&lt;/code&gt; which has already been evaluated will force it to evaluate again, repeating the query.</source>
          <target state="translated">请注意，在已经评估过的 &lt;code&gt;QuerySet&lt;/code&gt; 上使用 &lt;code&gt;iterator()&lt;/code&gt; 将迫使其再次评估，重复查询。</target>
        </trans-unit>
        <trans-unit id="f5a5705d4f4e4dba6360106b56cde3d815c0b93d" translate="yes" xml:space="preserve">
          <source>Note that we pass the &lt;code&gt;queryset&lt;/code&gt; argument in both the &lt;code&gt;POST&lt;/code&gt; and &lt;code&gt;GET&lt;/code&gt; cases in this example.</source>
          <target state="translated">请注意，在此示例中，我们在 &lt;code&gt;POST&lt;/code&gt; 和 &lt;code&gt;GET&lt;/code&gt; 情况下都传递了 &lt;code&gt;queryset&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="fe5575ba32184ff281804a3e6ed550d830b3259c" translate="yes" xml:space="preserve">
          <source>Note that when &lt;code&gt;unique&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, you don&amp;rsquo;t need to specify &lt;a href=&quot;#django.db.models.Field.db_index&quot;&gt;&lt;code&gt;db_index&lt;/code&gt;&lt;/a&gt;, because &lt;code&gt;unique&lt;/code&gt; implies the creation of an index.</source>
          <target state="translated">请注意，当 &lt;code&gt;unique&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; 时，您无需指定&lt;a href=&quot;#django.db.models.Field.db_index&quot;&gt; &lt;code&gt;db_index&lt;/code&gt; &lt;/a&gt;，因为 &lt;code&gt;unique&lt;/code&gt; 意味着创建了索引。</target>
        </trans-unit>
        <trans-unit id="39167b947707fbb5b9cf4b6e5a2e4668c034defb" translate="yes" xml:space="preserve">
          <source>Note that when a model is deleted, related files are not deleted. If you need to cleanup orphaned files, you&amp;rsquo;ll need to handle it yourself (for instance, with a custom management command that can be run manually or scheduled to run periodically via e.g. cron).</source>
          <target state="translated">请注意，删除模型时，不会删除相关文件。如果需要清理孤立的文件，则需要自己处理（例如，使用可手动运行或计划通过cron定期运行的自定义管理命令）。</target>
        </trans-unit>
        <trans-unit id="719be46afabc795f700c5cdc4fb51623fb2f80af" translate="yes" xml:space="preserve">
          <source>Note that when deferred fields are accessed, the loading of the deferred field&amp;rsquo;s value happens through this method. Thus it is possible to customize the way deferred loading happens. The example below shows how one can reload all of the instance&amp;rsquo;s fields when a deferred field is reloaded:</source>
          <target state="translated">请注意，当访问延迟字段时，通过此方法会加载延迟字段的值。因此可以自定义延迟加载的方式。下面的示例显示了在重载延迟字段时如何重载实例的所有字段：</target>
        </trans-unit>
        <trans-unit id="94c1c16b5b2cd3f86c4031d357763da656691cbe" translate="yes" xml:space="preserve">
          <source>Note that when using this technique the &lt;a href=&quot;../../signals#django.db.models.signals.m2m_changed&quot;&gt;&lt;code&gt;m2m_changed&lt;/code&gt;&lt;/a&gt; signals aren&amp;rsquo;t triggered. This is because as far as the admin is concerned, &lt;code&gt;through&lt;/code&gt; is just a model with two foreign key fields rather than a many-to-many relation.</source>
          <target state="translated">请注意，使用此技术时，不会触发&lt;a href=&quot;../../signals#django.db.models.signals.m2m_changed&quot;&gt; &lt;code&gt;m2m_changed&lt;/code&gt; &lt;/a&gt;信号。这是因为就管理员而言， &lt;code&gt;through&lt;/code&gt; 只是具有两个外键字段而不是多对多关系的模型。</target>
        </trans-unit>
        <trans-unit id="b05fa36010992ac15dfe2760e5308fe656f763bc" translate="yes" xml:space="preserve">
          <source>Note that when you&amp;rsquo;re using &lt;code&gt;takes_context=True&lt;/code&gt;, there&amp;rsquo;s no need to pass arguments to the template tag. It automatically gets access to the context.</source>
          <target state="translated">请注意，当您使用 &lt;code&gt;takes_context=True&lt;/code&gt; 时，无需将参数传递给模板标记。它会自动访问上下文。</target>
        </trans-unit>
        <trans-unit id="79079404d7b87dcc164745f56a3bf81208b2cc17" translate="yes" xml:space="preserve">
          <source>Note that whenever you deal with uploaded files, you should pay close attention to where you&amp;rsquo;re uploading them and what type of files they are, to avoid security holes. &lt;em&gt;Validate all uploaded files&lt;/em&gt; so that you&amp;rsquo;re sure the files are what you think they are. For example, if you blindly let somebody upload files, without validation, to a directory that&amp;rsquo;s within your Web server&amp;rsquo;s document root, then somebody could upload a CGI or PHP script and execute that script by visiting its URL on your site. Don&amp;rsquo;t allow that.</source>
          <target state="translated">请注意，无论何时处理上传的文件，都应密切注意上传文件的位置以及文件的类型，以避免安全漏洞。&lt;em&gt;验证所有上载的文件，&lt;/em&gt;以确保文件符合您的想法。例如，如果您盲目地让某人未经验证将文件上传到Web服务器文档根目录中的目录，那么某人可以上传CGI或PHP脚本并通过访问您站点上的URL来执行该脚本。不要这样</target>
        </trans-unit>
        <trans-unit id="39f8400a649c5d93c855cdc636e888afa63eb937" translate="yes" xml:space="preserve">
          <source>Note that where the password is passed to one of these functions, this should always be the clear text password - not a hashed password.</source>
          <target state="translated">需要注意的是,当密码被传递给这些函数之一时,它应该始终是明文密码,而不是哈希密码。</target>
        </trans-unit>
        <trans-unit id="d093d349e1d459362f8b4a2b1a67b11670c43223" translate="yes" xml:space="preserve">
          <source>Note that while you can &lt;em&gt;define&lt;/em&gt; a custom manager on the abstract model, you can&amp;rsquo;t &lt;em&gt;invoke&lt;/em&gt; any methods using the abstract model. That is:</source>
          <target state="translated">请注意，虽然您可以在抽象模型上&lt;em&gt;定义&lt;/em&gt;自定义管理器，但是不能使用抽象模型&lt;em&gt;调用&lt;/em&gt;任何方法。那是：</target>
        </trans-unit>
        <trans-unit id="3265dff3dd371813ef80cf218a365cc918b03a70" translate="yes" xml:space="preserve">
          <source>Note that you can backslash-escape a format string if you want to use the &amp;ldquo;raw&amp;rdquo; value. In this example, both &amp;ldquo;h&amp;rdquo; and &amp;ldquo;m&amp;rdquo; are backslash-escaped, because otherwise each is a format string that displays the hour and the month, respectively:</source>
          <target state="translated">请注意，如果要使用&amp;ldquo; raw&amp;rdquo;值，可以反斜杠转义格式字符串。在此示例中，&amp;ldquo; h&amp;rdquo;和&amp;ldquo; m&amp;rdquo;都用反斜杠转义，因为否则每个都是分别显示小时和月的格式字符串：</target>
        </trans-unit>
        <trans-unit id="7476fdc821a56bd47f0eda1f0b41d488383e4103" translate="yes" xml:space="preserve">
          <source>Note that you can backslash-escape a format string if you want to use the &amp;ldquo;raw&amp;rdquo; value. In this example, both &amp;ldquo;o&amp;rdquo; and &amp;ldquo;f&amp;rdquo; are backslash-escaped, because otherwise each is a format string that displays the year and the time, respectively:</source>
          <target state="translated">请注意，如果要使用&amp;ldquo; raw&amp;rdquo;值，可以反斜杠转义格式字符串。在此示例中，&amp;ldquo; o&amp;rdquo;和&amp;ldquo; f&amp;rdquo;都用反斜杠转义，因为否则每个都是分别显示年份和时间的格式字符串：</target>
        </trans-unit>
        <trans-unit id="4f73d7dc009cf6ecb0d2dc25b668df5cadd84847" translate="yes" xml:space="preserve">
          <source>Note that you can give &lt;code&gt;Paginator&lt;/code&gt; a list/tuple, a Django &lt;code&gt;QuerySet&lt;/code&gt;, or any other object with a &lt;code&gt;count()&lt;/code&gt; or &lt;code&gt;__len__()&lt;/code&gt; method. When determining the number of objects contained in the passed object, &lt;code&gt;Paginator&lt;/code&gt; will first try calling &lt;code&gt;count()&lt;/code&gt;, then fallback to using &lt;code&gt;len()&lt;/code&gt; if the passed object has no &lt;code&gt;count()&lt;/code&gt; method. This allows objects such as Django&amp;rsquo;s &lt;code&gt;QuerySet&lt;/code&gt; to use a more efficient &lt;code&gt;count()&lt;/code&gt; method when available.</source>
          <target state="translated">请注意，您可以使用 &lt;code&gt;count()&lt;/code&gt; 或 &lt;code&gt;__len__()&lt;/code&gt; 方法为 &lt;code&gt;Paginator&lt;/code&gt; 提供一个列表/元组，一个Django &lt;code&gt;QuerySet&lt;/code&gt; 或任何其他对象。在确定传递的对象中包含的对象数量时， &lt;code&gt;Paginator&lt;/code&gt; 将首先尝试调用 &lt;code&gt;count()&lt;/code&gt; ，如果传递的对象没有 &lt;code&gt;count()&lt;/code&gt; 方法，则回退到使用 &lt;code&gt;len()&lt;/code&gt; 。这允许诸如Django的 &lt;code&gt;QuerySet&lt;/code&gt; 之类的对象在可用时使用更有效的 &lt;code&gt;count()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="9e42e9704f036f9a6dfea5bd7eeae341bb89a4c9" translate="yes" xml:space="preserve">
          <source>Note that you can redirect standard output and error streams as all commands support the &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; options. For example, you could write:</source>
          <target state="translated">请注意，您可以重定向标准输出和错误流，因为所有命令都支持 &lt;code&gt;stdout&lt;/code&gt; 和 &lt;code&gt;stderr&lt;/code&gt; 选项。例如，您可以编写：</target>
        </trans-unit>
        <trans-unit id="28f96228f714507e7175e473320352a2987351be" translate="yes" xml:space="preserve">
          <source>Note that you can use the decorators in conjunction with the middleware. Use of a decorator overrides the middleware.</source>
          <target state="translated">请注意,您可以将装饰器与中间件一起使用。使用装饰器可以覆盖中间件。</target>
        </trans-unit>
        <trans-unit id="b96ab2ffca51fc0d415d2ea2c91ff51267bb654f" translate="yes" xml:space="preserve">
          <source>Note that you don&amp;rsquo;t have to use Django&amp;rsquo;s template system if you prefer another system. While Django&amp;rsquo;s template system is particularly well-integrated with Django&amp;rsquo;s model layer, nothing forces you to use it. For that matter, you don&amp;rsquo;t have to use Django&amp;rsquo;s database API, either. You can use another database abstraction layer, you can read XML files, you can read files off disk, or anything you want. Each piece of Django &amp;ndash; models, views, templates &amp;ndash; is decoupled from the next.</source>
          <target state="translated">请注意，如果您喜欢其他系统，则不必使用Django的模板系统。尽管Django的模板系统与Django的模型层特别集成在一起，但是没有什么可以强迫您使用它。因此，您也不必使用Django的数据库API。您可以使用另一个数据库抽象层，可以读取XML文件，可以从磁盘读取文件或任何所需的文件。 Django的每个部分（模型，视图，模板）都与下一个解耦。</target>
        </trans-unit>
        <trans-unit id="f31c5c5b9d42b1077c8970e03ed8c44f9ddad790" translate="yes" xml:space="preserve">
          <source>Note that you may not want autodiscovery of &lt;code&gt;admin&lt;/code&gt; modules when using your own &lt;code&gt;AdminSite&lt;/code&gt; instance since you will likely be importing all the per-app &lt;code&gt;admin&lt;/code&gt; modules in your &lt;code&gt;myproject.admin&lt;/code&gt; module. This means you need to put &lt;code&gt;'django.contrib.admin.apps.SimpleAdminConfig'&lt;/code&gt; instead of &lt;code&gt;'django.contrib.admin'&lt;/code&gt; in your &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">请注意，在使用自己的 &lt;code&gt;AdminSite&lt;/code&gt; 实例时，您可能不希望自动发现 &lt;code&gt;admin&lt;/code&gt; 模块，因为您可能会在 &lt;code&gt;myproject.admin&lt;/code&gt; 模块中导入所有按应用程序 &lt;code&gt;admin&lt;/code&gt; 模块。这意味着您需要在&lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置中放置 &lt;code&gt;'django.contrib.admin.apps.SimpleAdminConfig'&lt;/code&gt; 而不是 &lt;code&gt;'django.contrib.admin'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21df1330fbaf74e0680f4452a5609d54fd10fa1a" translate="yes" xml:space="preserve">
          <source>Note that you must save an object before it can be assigned to a foreign key relationship. For example, creating an &lt;code&gt;Article&lt;/code&gt; with unsaved &lt;code&gt;Reporter&lt;/code&gt; raises &lt;code&gt;ValueError&lt;/code&gt;:</source>
          <target state="translated">请注意，必须先保存一个对象，然后才能将其分配给外键关系。例如，使用未保存的 &lt;code&gt;Reporter&lt;/code&gt; 创建 &lt;code&gt;Article&lt;/code&gt; 会引发 &lt;code&gt;ValueError&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="376f6d08577acaa494289e31892d8f4bc49a71b1" translate="yes" xml:space="preserve">
          <source>Note that you must save an object before it can be assigned to a one-to-one relationship. For example, creating a &lt;code&gt;Restaurant&lt;/code&gt; with unsaved &lt;code&gt;Place&lt;/code&gt; raises &lt;code&gt;ValueError&lt;/code&gt;:</source>
          <target state="translated">请注意，必须先保存一个对象，然后才能将其分配给一对一关系。例如，创建一个 &lt;code&gt;Restaurant&lt;/code&gt; 未保存的 &lt;code&gt;Place&lt;/code&gt; 引发 &lt;code&gt;ValueError&lt;/code&gt; 异常：</target>
        </trans-unit>
        <trans-unit id="3aa4492251f1f89b7d1b67c82923a765943b8b96" translate="yes" xml:space="preserve">
          <source>Note that you set &lt;code&gt;feed_type&lt;/code&gt; to a class object, not an instance.</source>
          <target state="translated">请注意，您将 &lt;code&gt;feed_type&lt;/code&gt; 设置为类对象，而不是实例。</target>
        </trans-unit>
        <trans-unit id="41780517e58575ae1fd4b7cf13682bde6c859248" translate="yes" xml:space="preserve">
          <source>Note that you&amp;rsquo;ll have to provide the surrounding &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; elements yourself.</source>
          <target state="translated">请注意，您必须自己提供周围的 &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="739a26284bb028620f19294b60895ab661309c8a" translate="yes" xml:space="preserve">
          <source>Note that you&amp;rsquo;ll need to call &lt;a href=&quot;#django.contrib.sessions.base_session.AbstractBaseSession.get_decoded&quot;&gt;&lt;code&gt;get_decoded()&lt;/code&gt;&lt;/a&gt; to get the session dictionary. This is necessary because the dictionary is stored in an encoded format:</source>
          <target state="translated">请注意，您需要调用&lt;a href=&quot;#django.contrib.sessions.base_session.AbstractBaseSession.get_decoded&quot;&gt; &lt;code&gt;get_decoded()&lt;/code&gt; &lt;/a&gt;来获取会话字典。这是必需的，因为字典以编码格式存储：</target>
        </trans-unit>
        <trans-unit id="5764965c279a49130b8ab3f921987b56c15bcdef" translate="yes" xml:space="preserve">
          <source>Note that, with static (middleware-less) translation, the language is in &lt;code&gt;settings.LANGUAGE_CODE&lt;/code&gt;, while with dynamic (middleware) translation, it&amp;rsquo;s in &lt;code&gt;request.LANGUAGE_CODE&lt;/code&gt;.</source>
          <target state="translated">请注意，对于静态（无中间件）翻译，该语言位于 &lt;code&gt;settings.LANGUAGE_CODE&lt;/code&gt; 中，而对于动态（中间件）翻译，其语言位于 &lt;code&gt;request.LANGUAGE_CODE&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="285f98e8d01e4962eff6724b78a3c6724d0931e6" translate="yes" xml:space="preserve">
          <source>Note that:</source>
          <target state="translated">请注意:</target>
        </trans-unit>
        <trans-unit id="2c5683f35f8382bf853d6c54b47a1958d38402e3" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;list()&lt;/code&gt; call around the Blog &lt;code&gt;QuerySet&lt;/code&gt; to force execution of the first query. Without it, a nested query would be executed, because &lt;a href=&quot;../../topics/db/queries#querysets-are-lazy&quot;&gt;QuerySets are lazy&lt;/a&gt;.</source>
          <target state="translated">请注意Blog &lt;code&gt;QuerySet&lt;/code&gt; 周围的 &lt;code&gt;list()&lt;/code&gt; 调用强制执行第一个查询。没有它，将执行嵌套查询，因为&lt;a href=&quot;../../topics/db/queries#querysets-are-lazy&quot;&gt;QuerySet是lazy&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="50042f95afef19ddcee485ac7f7b1bcf7743b564" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;pk&lt;/code&gt; named group, which &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin.get_object&quot;&gt;&lt;code&gt;get_object()&lt;/code&gt;&lt;/a&gt; uses to look up the &lt;code&gt;Author&lt;/code&gt; instance. You could also use a slug, or any of the other features of &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注意名为group 的 &lt;code&gt;pk&lt;/code&gt; ，&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin.get_object&quot;&gt; &lt;code&gt;get_object()&lt;/code&gt; &lt;/a&gt;使用它来查找 &lt;code&gt;Author&lt;/code&gt; 实例。您还可以使用&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt; &lt;code&gt;SingleObjectMixin&lt;/code&gt; &lt;/a&gt;或SingleObjectMixin的任何其他功能。</target>
        </trans-unit>
        <trans-unit id="1548150f65982792369c241ae984f2b20c5090cc" translate="yes" xml:space="preserve">
          <source>Note the addition of &lt;code&gt;import datetime&lt;/code&gt; and &lt;code&gt;from django.utils import
timezone&lt;/code&gt;, to reference Python&amp;rsquo;s standard &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; module and Django&amp;rsquo;s time-zone-related utilities in &lt;a href=&quot;../ref/utils#module-django.utils.timezone&quot;&gt;&lt;code&gt;django.utils.timezone&lt;/code&gt;&lt;/a&gt;, respectively. If you aren&amp;rsquo;t familiar with time zone handling in Python, you can learn more in the &lt;a href=&quot;../topics/i18n/timezones&quot;&gt;time zone support docs&lt;/a&gt;.</source>
          <target state="translated">注：将 &lt;code&gt;import datetime&lt;/code&gt; 和 &lt;code&gt;from django.utils import timezone&lt;/code&gt; ，引用Python的标准&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;模块和Django的时区相关的公用事业&lt;a href=&quot;../ref/utils#module-django.utils.timezone&quot;&gt; &lt;code&gt;django.utils.timezone&lt;/code&gt; &lt;/a&gt;，分别。如果您不熟悉Python中的时区处理，可以在&lt;a href=&quot;../topics/i18n/timezones&quot;&gt;时区支持文档中&lt;/a&gt;了解更多信息。</target>
        </trans-unit>
        <trans-unit id="36e778e75c22dd51e685a8060e6bf755ecbdde51" translate="yes" xml:space="preserve">
          <source>Note the first query will match &lt;code&gt;'Beatles Blog'&lt;/code&gt;, &lt;code&gt;'beatles blog'&lt;/code&gt;, &lt;code&gt;'BeAtLes BLoG'&lt;/code&gt;, etc.</source>
          <target state="translated">请注意，第一个查询将匹配 &lt;code&gt;'Beatles Blog'&lt;/code&gt; ，&amp;ldquo;甲壳虫博客 &lt;code&gt;'beatles blog'&lt;/code&gt; ， &lt;code&gt;'BeAtLes BLoG'&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="20d78a8e421517dfc8501178399cb2a435e63306" translate="yes" xml:space="preserve">
          <source>Note the following:</source>
          <target state="translated">请注意以下几点:</target>
        </trans-unit>
        <trans-unit id="4270a55c8d2d5be21936635e96658dc1d9f116f5" translate="yes" xml:space="preserve">
          <source>Note the second example is more restrictive.</source>
          <target state="translated">请注意,第二个例子的限制性更强。</target>
        </trans-unit>
        <trans-unit id="f90cc3f74d38c8aecec6b1b3c2cf127ed6722f4d" translate="yes" xml:space="preserve">
          <source>Note there is a race condition if you allow objects to be created while this migration is running. Objects created after the &lt;code&gt;AddField&lt;/code&gt; and before &lt;code&gt;RunPython&lt;/code&gt; will have their original &lt;code&gt;uuid&lt;/code&gt;&amp;rsquo;s overwritten.</source>
          <target state="translated">请注意，如果允许在运行此迁移时创建对象，则存在竞争条件。在 &lt;code&gt;AddField&lt;/code&gt; 之后和 &lt;code&gt;RunPython&lt;/code&gt; 之前创建的对象将被覆盖其原始 &lt;code&gt;uuid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e57ad67f321891403673ac74379faf842d068ac0" translate="yes" xml:space="preserve">
          <source>Note this doesn&amp;rsquo;t delete the related objects &amp;ndash; it just disassociates them.</source>
          <target state="translated">请注意，这不会删除相关对象，而只是取消关联它们。</target>
        </trans-unit>
        <trans-unit id="1e1c648f6363a79666bda4022f326dccc253cf89" translate="yes" xml:space="preserve">
          <source>Note this will match any record with a &lt;code&gt;pub_date&lt;/code&gt; that falls on a Monday (day 2 of the week), regardless of the month or year in which it occurs. Week days are indexed with day 1 being Sunday and day 7 being Saturday.</source>
          <target state="translated">请注意，此记录将与 &lt;code&gt;pub_date&lt;/code&gt; 属于星期一（一周中的第2天）的任何记录进行匹配，而不考虑记录发生的月份或年份。索引工作日，第1天为星期日，第7天为星期六。</target>
        </trans-unit>
        <trans-unit id="e6eb4a1725fee4458ebd4aae91065f1733dbed3c" translate="yes" xml:space="preserve">
          <source>Note this will match any record with a pub_date on the third day of the month, such as January 3, July 3, etc.</source>
          <target state="translated">请注意,这将匹配任何带有pub_date的月份第三天的记录,如1月3日,7月3日等。</target>
        </trans-unit>
        <trans-unit id="91a2cf41eebcf0cbbe41c2fed03384b950262468" translate="yes" xml:space="preserve">
          <source>Note this will match the headline &lt;code&gt;'Lennon honored today'&lt;/code&gt; but not &lt;code&gt;'lennon
honored today'&lt;/code&gt;.</source>
          <target state="translated">请注意，这将匹配大标题 &lt;code&gt;'Lennon honored today'&lt;/code&gt; 而不是 &lt;code&gt;'lennon honored today'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd54aed7458a908757d562528231778dc691427f" translate="yes" xml:space="preserve">
          <source>Note this will match the headline &lt;code&gt;'Today Lennon honored'&lt;/code&gt; but not &lt;code&gt;'today lennon honored'&lt;/code&gt;.</source>
          <target state="translated">注意，这将与标题 &lt;code&gt;'Today Lennon honored'&lt;/code&gt; 匹配，而不是 &lt;code&gt;'today lennon honored'&lt;/code&gt; 标题。</target>
        </trans-unit>
        <trans-unit id="97147c98752b50c4fd43dfdbddc52f844a56c7e1" translate="yes" xml:space="preserve">
          <source>Note, however, that like &lt;a href=&quot;#django.db.models.Model.full_clean&quot;&gt;&lt;code&gt;Model.full_clean()&lt;/code&gt;&lt;/a&gt;, a model&amp;rsquo;s &lt;code&gt;clean()&lt;/code&gt; method is not invoked when you call your model&amp;rsquo;s &lt;a href=&quot;#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">但是请注意，与&lt;a href=&quot;#django.db.models.Model.full_clean&quot;&gt; &lt;code&gt;Model.full_clean()&lt;/code&gt; 一样&lt;/a&gt;，调用模型的&lt;a href=&quot;#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;方法时不会调用模型的 &lt;code&gt;clean()&lt;/code&gt; （）方法。</target>
        </trans-unit>
        <trans-unit id="e3ef265b66c27a036bf430bdf6cdf4e5f69c53b0" translate="yes" xml:space="preserve">
          <source>Note, however, that the first of these will raise &lt;code&gt;IndexError&lt;/code&gt; while the second will raise &lt;code&gt;DoesNotExist&lt;/code&gt; if no objects match the given criteria. See &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">但是请注意，如果没有对象与给定条件匹配，则第一个将引发 &lt;code&gt;IndexError&lt;/code&gt; ,而第二个将引发 &lt;code&gt;DoesNotExist&lt;/code&gt; 。有关更多详细信息，请参见&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4bf23a731a060601e951cfde8e837da30936df56" translate="yes" xml:space="preserve">
          <source>Note, however, that these bulk update methods cannot call the &lt;code&gt;save()&lt;/code&gt; or &lt;code&gt;delete()&lt;/code&gt; methods of individual instances, which means that any custom behavior you have added for these methods will not be executed, including anything driven from the normal database object &lt;a href=&quot;../../ref/signals&quot;&gt;signals&lt;/a&gt;.</source>
          <target state="translated">但是请注意，这些批量更新方法不能调用单个实例的 &lt;code&gt;save()&lt;/code&gt; 或 &lt;code&gt;delete()&lt;/code&gt; 方法，这意味着将不会执行为这些方法添加的任何自定义行为，包括从常规数据库对象&lt;a href=&quot;../../ref/signals&quot;&gt;信号&lt;/a&gt;驱动的任何行为。。</target>
        </trans-unit>
        <trans-unit id="c9a64d96116de9297dfea7c94ac09033ffbd0323" translate="yes" xml:space="preserve">
          <source>Note, the beginning of the pattern (&lt;code&gt;r'^static/'&lt;/code&gt;) should be your &lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">请注意，模式的开头（ &lt;code&gt;r'^static/'&lt;/code&gt; ）应该是您的&lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="53e1a6480426cb88534e0d776b00fdf6ab609686" translate="yes" xml:space="preserve">
          <source>Note, the snippet assumes your &lt;a href=&quot;settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt; has a value of &lt;code&gt;'/media/'&lt;/code&gt;. This will call the &lt;a href=&quot;#django.views.static.serve&quot;&gt;&lt;code&gt;serve()&lt;/code&gt;&lt;/a&gt; view, passing in the path from the URLconf and the (required) &lt;code&gt;document_root&lt;/code&gt; parameter.</source>
          <target state="translated">请注意，该代码段假定您的&lt;a href=&quot;settings#std:setting-MEDIA_URL&quot;&gt; &lt;code&gt;MEDIA_URL&lt;/code&gt; &lt;/a&gt;的值为 &lt;code&gt;'/media/'&lt;/code&gt; 。这将调用&lt;a href=&quot;#django.views.static.serve&quot;&gt; &lt;code&gt;serve()&lt;/code&gt; &lt;/a&gt;视图，并传入URLconf和（必需的） &lt;code&gt;document_root&lt;/code&gt; 参数的路径。</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="9ef9ec7a9d7bf170473fb43f8eca38078f7b19b8" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;order_by('?')&lt;/code&gt; queries may be expensive and slow, depending on the database backend you&amp;rsquo;re using.</source>
          <target state="translated">注意： &lt;code&gt;order_by('?')&lt;/code&gt; 查询可能昂贵且缓慢，具体取决于您所使用的数据库后端。</target>
        </trans-unit>
        <trans-unit id="befec88db067d5cfe6f992fabb031cd376020ac6" translate="yes" xml:space="preserve">
          <source>Note: As with &lt;code&gt;get()&lt;/code&gt;, a &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.MultipleObjectsReturned&quot;&gt;&lt;code&gt;MultipleObjectsReturned&lt;/code&gt;&lt;/a&gt; exception will be raised if more than one object is found.</source>
          <target state="translated">注意：与 &lt;code&gt;get()&lt;/code&gt; 一样，如果找到多个对象，将引发&lt;a href=&quot;../../ref/exceptions#django.core.exceptions.MultipleObjectsReturned&quot;&gt; &lt;code&gt;MultipleObjectsReturned&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="910a845f2c2f78c037f270de3da706b062724005" translate="yes" xml:space="preserve">
          <source>Note: Don&amp;rsquo;t use this if all you want to do is determine if at least one result exists. It&amp;rsquo;s more efficient to use &lt;a href=&quot;#django.db.models.query.QuerySet.exists&quot;&gt;&lt;code&gt;exists()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注意：如果您要做的只是确定是否存在至少一个结果，请不要使用它。使用&lt;a href=&quot;#django.db.models.query.QuerySet.exists&quot;&gt; &lt;code&gt;exists()&lt;/code&gt; &lt;/a&gt;效率更高。</target>
        </trans-unit>
        <trans-unit id="385f626475e0107c6a0177ca3b63ffea00ce9f62" translate="yes" xml:space="preserve">
          <source>Note: If you only need to determine the number of records in the set (and don&amp;rsquo;t need the actual objects), it&amp;rsquo;s much more efficient to handle a count at the database level using SQL&amp;rsquo;s &lt;code&gt;SELECT COUNT(*)&lt;/code&gt;. Django provides a &lt;a href=&quot;#django.db.models.query.QuerySet.count&quot;&gt;&lt;code&gt;count()&lt;/code&gt;&lt;/a&gt; method for precisely this reason.</source>
          <target state="translated">注意：如果您只需要确定集合中的记录数（而不需要实际的对象），则使用SQL的 &lt;code&gt;SELECT COUNT(*)&lt;/code&gt; 在数据库级别处理计数将更加高效。正是出于这个原因，Django提供了&lt;a href=&quot;#django.db.models.query.QuerySet.count&quot;&gt; &lt;code&gt;count()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="e985be7c9234ac7fdd7d0605d286a7defa1cd034" translate="yes" xml:space="preserve">
          <source>Note: If you only want to determine if at least one result exists (and don&amp;rsquo;t need the actual objects), it&amp;rsquo;s more efficient to use &lt;a href=&quot;#django.db.models.query.QuerySet.exists&quot;&gt;&lt;code&gt;exists()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注意：如果只想确定是否存在至少一个结果（并且不需要实际的对象），则使用&lt;a href=&quot;#django.db.models.query.QuerySet.exists&quot;&gt; &lt;code&gt;exists()&lt;/code&gt; &lt;/a&gt;更有效。</target>
        </trans-unit>
        <trans-unit id="d230e76ec82af164b0c7d3b96c1e1a1415482dfc" translate="yes" xml:space="preserve">
          <source>Note: Without a really compelling reason, such as a host that doesn&amp;rsquo;t support them, you should stick to the cache backends included with Django. They&amp;rsquo;ve been well-tested and are well-documented.</source>
          <target state="translated">注意：如果没有真正令人信服的理由，例如不支持它们的主机，则应坚持使用Django随附的缓存后端。他们已经过充分的测试并且有据可查。</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="a8813e550b224d06483ad44dd0caab3e91810f54" translate="yes" xml:space="preserve">
          <source>Notes on field ordering</source>
          <target state="translated">外地订购说明</target>
        </trans-unit>
        <trans-unit id="03285d22efba2cd6d7db91dcbcfa20e93a3abcbd" translate="yes" xml:space="preserve">
          <source>Notes on specific fields</source>
          <target state="translated">关于具体领域的说明</target>
        </trans-unit>
        <trans-unit id="9c3befe7e22c8667bc957541f49b0ee79970b588" translate="yes" xml:space="preserve">
          <source>Notes:</source>
          <target state="translated">Notes:</target>
        </trans-unit>
        <trans-unit id="000e64e4b4ee3745e9af8db1a328fea32acd56cf" translate="yes" xml:space="preserve">
          <source>Notice also that as both sides are used multiple times in the query the params need to contain &lt;code&gt;lhs_params&lt;/code&gt; and &lt;code&gt;rhs_params&lt;/code&gt; multiple times.</source>
          <target state="translated">还要注意，由于查询中双方都多次使用，因此参数需要多次包含 &lt;code&gt;lhs_params&lt;/code&gt; 和 &lt;code&gt;rhs_params&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2384e08c0f35bbe96198a9eea0586bf6a621eb2b" translate="yes" xml:space="preserve">
          <source>Notice first that we&amp;rsquo;ve moved &lt;code&gt;make_published&lt;/code&gt; into a method and renamed the &lt;code&gt;modeladmin&lt;/code&gt; parameter to &lt;code&gt;self&lt;/code&gt;, and second that we&amp;rsquo;ve now put the string &lt;code&gt;'make_published'&lt;/code&gt; in &lt;code&gt;actions&lt;/code&gt; instead of a direct function reference. This tells the &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; to look up the action as a method.</source>
          <target state="translated">请注意，首先，我们已将 &lt;code&gt;make_published&lt;/code&gt; 移至方法中，并将 &lt;code&gt;modeladmin&lt;/code&gt; 参数重命名为 &lt;code&gt;self&lt;/code&gt; ，其次，我们现在已将字符串 &lt;code&gt;'make_published'&lt;/code&gt; 放入 &lt;code&gt;actions&lt;/code&gt; 而不是直接函数引用中。这告诉&lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;将操作作为方法进行查找。</target>
        </trans-unit>
        <trans-unit id="8b0cc5089c4b2a1219a366349dd5e31eab5291cc" translate="yes" xml:space="preserve">
          <source>Notice how the first block ends with &lt;code&gt;class=&quot;odd&quot;&lt;/code&gt; and the new one starts with &lt;code&gt;class=&quot;odd&quot;&lt;/code&gt;. Without the &lt;code&gt;{% resetcycle %}&lt;/code&gt; tag, the second block would start with &lt;code&gt;class=&quot;even&quot;&lt;/code&gt;.</source>
          <target state="translated">通知如何与第一块端 &lt;code&gt;class=&quot;odd&quot;&lt;/code&gt; 和用新的开始 &lt;code&gt;class=&quot;odd&quot;&lt;/code&gt; 。没有 &lt;code&gt;{% resetcycle %}&lt;/code&gt; 标签，第二个块将从 &lt;code&gt;class=&quot;even&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f70af69036a60f939ee11c7ec6dd9119fc16aaef" translate="yes" xml:space="preserve">
          <source>Notice how we need to explicitly render &lt;code&gt;{{ form.id }}&lt;/code&gt;. This ensures that the model formset, in the &lt;code&gt;POST&lt;/code&gt; case, will work correctly. (This example assumes a primary key named &lt;code&gt;id&lt;/code&gt;. If you&amp;rsquo;ve explicitly defined your own primary key that isn&amp;rsquo;t called &lt;code&gt;id&lt;/code&gt;, make sure it gets rendered.)</source>
          <target state="translated">注意，我们需要如何显式呈现 &lt;code&gt;{{ form.id }}&lt;/code&gt; 。这样可以确保在 &lt;code&gt;POST&lt;/code&gt; 情况下模型表单集可以正常工作。（此示例假定一个名为 &lt;code&gt;id&lt;/code&gt; 的主键。如果您已显式定义了自己的未称为 &lt;code&gt;id&lt;/code&gt; 的主键，请确保将其呈现。）</target>
        </trans-unit>
        <trans-unit id="0229f8c21d6b19db58706ac73ebaa3b227103d86" translate="yes" xml:space="preserve">
          <source>Notice how we pass &lt;code&gt;instance&lt;/code&gt; in both the &lt;code&gt;POST&lt;/code&gt; and &lt;code&gt;GET&lt;/code&gt; cases.</source>
          <target state="translated">注意在 &lt;code&gt;POST&lt;/code&gt; 和 &lt;code&gt;GET&lt;/code&gt; 情况下我们如何传递 &lt;code&gt;instance&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa5250b6be8df62e51f37c769420fd8720950beb" translate="yes" xml:space="preserve">
          <source>Notice how we set &lt;code&gt;self.object&lt;/code&gt; within &lt;code&gt;get()&lt;/code&gt; so we can use it again later in &lt;code&gt;get_context_data()&lt;/code&gt; and &lt;code&gt;get_queryset()&lt;/code&gt;. If you don&amp;rsquo;t set &lt;code&gt;template_name&lt;/code&gt;, the template will default to the normal &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; choice, which in this case would be &lt;code&gt;&quot;books/book_list.html&quot;&lt;/code&gt; because it&amp;rsquo;s a list of books; &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; knows nothing about &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt;, so it doesn&amp;rsquo;t have any clue this view is anything to do with a &lt;code&gt;Publisher&lt;/code&gt;.</source>
          <target state="translated">注意我们如何在 &lt;code&gt;get()&lt;/code&gt; 中设置 &lt;code&gt;self.object&lt;/code&gt; ，以便稍后可以在 &lt;code&gt;get_context_data()&lt;/code&gt; 和 &lt;code&gt;get_queryset()&lt;/code&gt; 中再次使用它。如果您未设置 &lt;code&gt;template_name&lt;/code&gt; ，则该模板将默认为普通的&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt;选项，在本例中为 &lt;code&gt;&quot;books/book_list.html&quot;&lt;/code&gt; 因为它是一本书的列表；&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt;对&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt; &lt;code&gt;SingleObjectMixin&lt;/code&gt; 一无所知&lt;/a&gt;，因此它没有任何线索，该视图与 &lt;code&gt;Publisher&lt;/code&gt; 有关。</target>
        </trans-unit>
        <trans-unit id="f88f6f6b02e714ff2c4fe469bdc1f6fb93d22663" translate="yes" xml:space="preserve">
          <source>Notice how we used &lt;code&gt;self&lt;/code&gt; to scope the &lt;code&gt;CycleNode&lt;/code&gt; specific information within the &lt;code&gt;render_context&lt;/code&gt;. There may be multiple &lt;code&gt;CycleNodes&lt;/code&gt; in a given template, so we need to be careful not to clobber another node&amp;rsquo;s state information. The easiest way to do this is to always use &lt;code&gt;self&lt;/code&gt; as the key into &lt;code&gt;render_context&lt;/code&gt;. If you&amp;rsquo;re keeping track of several state variables, make &lt;code&gt;render_context[self]&lt;/code&gt; a dictionary.</source>
          <target state="translated">请注意，我们如何使用 &lt;code&gt;self&lt;/code&gt; 来对 &lt;code&gt;CycleNode&lt;/code&gt; 特定信息进行范围 &lt;code&gt;render_context&lt;/code&gt; 。一个给定的模板中可能有多个 &lt;code&gt;CycleNodes&lt;/code&gt; ，因此我们需要注意不要破坏另一个节点的状态信息。最简单的方法是始终使用 &lt;code&gt;self&lt;/code&gt; 作为 &lt;code&gt;render_context&lt;/code&gt; 的键。如果要跟踪几个状态变量，请使 &lt;code&gt;render_context[self]&lt;/code&gt; 成为字典。</target>
        </trans-unit>
        <trans-unit id="cb164517055d21810f3fcb5b55cae736b85fa840" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;(0, 0)&lt;/code&gt; is the first and last coordinate &amp;ndash; if they were not equal, an error would be raised.</source>
          <target state="translated">请注意， &lt;code&gt;(0, 0)&lt;/code&gt; 是第一个和最后一个坐标&amp;ndash;如果它们不相等，则会引发错误。</target>
        </trans-unit>
        <trans-unit id="ac06989a6888c756b6647843b41cc87a3733f5ba" translate="yes" xml:space="preserve">
          <source>Notice that along with a filtered &lt;code&gt;queryset&lt;/code&gt;, we&amp;rsquo;re also using a custom template name. If we didn&amp;rsquo;t, the generic view would use the same template as the &amp;ldquo;vanilla&amp;rdquo; object list, which might not be what we want.</source>
          <target state="translated">请注意，除了过滤后的 &lt;code&gt;queryset&lt;/code&gt; 之外，我们还使用了自定义模板名称。如果不这样做，则通用视图将使用与&amp;ldquo;普通&amp;rdquo;对象列表相同的模板，而这可能不是我们想要的。</target>
        </trans-unit>
        <trans-unit id="423d90eb39ba0efaae8b6fe6038d1df1eed0d32b" translate="yes" xml:space="preserve">
          <source>Notice that the custom patterns are included &lt;em&gt;before&lt;/em&gt; the regular admin URLs: the admin URL patterns are very permissive and will match nearly anything, so you&amp;rsquo;ll usually want to prepend your custom URLs to the built-in ones.</source>
          <target state="translated">请注意，自定义模式包含&lt;em&gt;在&lt;/em&gt;常规管理URL &lt;em&gt;之前&lt;/em&gt;：管理URL模式非常宽松，几乎可以匹配任何内容，因此您通常希望将自定义URL放在内置的URL之前。</target>
        </trans-unit>
        <trans-unit id="a287bfd08800792a69e7a9c13eeb25e0be2944c0" translate="yes" xml:space="preserve">
          <source>Notice that the function takes a &lt;code&gt;sender&lt;/code&gt; argument, along with wildcard keyword arguments (&lt;code&gt;**kwargs&lt;/code&gt;); all signal handlers must take these arguments.</source>
          <target state="translated">请注意，该函数带有一个 &lt;code&gt;sender&lt;/code&gt; 参数以及通配符关键字参数（ &lt;code&gt;**kwargs&lt;/code&gt; ）; 所有信号处理程序都必须采用这些参数。</target>
        </trans-unit>
        <trans-unit id="c6d96c5e92b1bc39c53248522c2579dd44ac99ae" translate="yes" xml:space="preserve">
          <source>Notice that there isn&amp;rsquo;t a lot in these examples that&amp;rsquo;s PDF-specific &amp;ndash; just the bits using &lt;code&gt;reportlab&lt;/code&gt;. You can use a similar technique to generate any arbitrary format that you can find a Python library for. Also see &lt;a href=&quot;outputting-csv&quot;&gt;Outputting CSV with Django&lt;/a&gt; for another example and some techniques you can use when generated text-based formats.</source>
          <target state="translated">请注意，这些示例中没有很多特定于PDF的内容-只是使用 &lt;code&gt;reportlab&lt;/code&gt; 的内容。您可以使用类似的技术来生成可以找到Python库的任意格式。另请参见另一个示例以及在生成基于文本的格式时可以使用的一些技术，以及&lt;a href=&quot;outputting-csv&quot;&gt;使用Django输出CSV&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="62566baa057cfcfdb2bc356cfe8e2afa1aa5d755" translate="yes" xml:space="preserve">
          <source>Notice that there isn&amp;rsquo;t very much specific to CSV here &amp;ndash; just the specific output format. You can use either of these techniques to output any text-based format you can dream of. You can also use a similar technique to generate arbitrary binary data; see &lt;a href=&quot;outputting-pdf&quot;&gt;Outputting PDFs with Django&lt;/a&gt; for an example.</source>
          <target state="translated">请注意，这里的CSV并不是很特定-只是特定的输出格式。您可以使用这些技术中的任何一种来输出您梦dream以求的任何基于文本的格式。您也可以使用类似的技术来生成任意二进制数据。有关示例，请参见&lt;a href=&quot;outputting-pdf&quot;&gt;使用Django输出PDF&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ec92f0273100502d01875ac12f88f482d518616e" translate="yes" xml:space="preserve">
          <source>Notice that we always return a &lt;code&gt;Hand&lt;/code&gt; instance from these methods. That&amp;rsquo;s the Python object type we want to store in the model&amp;rsquo;s attribute.</source>
          <target state="translated">注意，我们总是从这些方法返回 &lt;code&gt;Hand&lt;/code&gt; 实例。这就是我们要存储在模型属性中的Python对象类型。</target>
        </trans-unit>
        <trans-unit id="7cb962ccf88e6d68aadedd4642d88f1b96287c61" translate="yes" xml:space="preserve">
          <source>Notice that we have to pass &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt;&lt;code&gt;request.FILES&lt;/code&gt;&lt;/a&gt; into the form&amp;rsquo;s constructor; this is how file data gets bound into a form.</source>
          <target state="translated">注意，我们必须将&lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt; &lt;code&gt;request.FILES&lt;/code&gt; &lt;/a&gt;传递到表单的构造函数中。这就是将文件数据绑定为表格的方式。</target>
        </trans-unit>
        <trans-unit id="ebe9aa5966d9fd8238eb5df6b3f145913747b3be" translate="yes" xml:space="preserve">
          <source>Notice the wrapped view in the fifth line above:</source>
          <target state="translated">请注意上面第五行的包景。</target>
        </trans-unit>
        <trans-unit id="7d3a34e68924487518a00635e921200b1ac742b0" translate="yes" xml:space="preserve">
          <source>Now &amp;ldquo;Choices&amp;rdquo; is an available option in the Django admin. The &amp;ldquo;Add choice&amp;rdquo; form looks like this:</source>
          <target state="translated">现在，&amp;ldquo;选择&amp;rdquo;是Django管理员中的可用选项。&amp;ldquo;添加选择&amp;rdquo;表单如下所示：</target>
        </trans-unit>
        <trans-unit id="3506a6d9619d5b948e78683002fea85609bda448" translate="yes" xml:space="preserve">
          <source>Now Django knows to include the &lt;code&gt;polls&lt;/code&gt; app. Let&amp;rsquo;s run another command:</source>
          <target state="translated">现在，Django知道包括 &lt;code&gt;polls&lt;/code&gt; 应用程序了。让我们运行另一个命令：</target>
        </trans-unit>
        <trans-unit id="7f03ca20e19c12646270f4a55b9c68e694ccfc63" translate="yes" xml:space="preserve">
          <source>Now books can use that natural key to refer to &lt;code&gt;Person&lt;/code&gt; objects:</source>
          <target state="translated">现在，书籍可以使用该自然键来引用 &lt;code&gt;Person&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="f48eb4671182254c386d97a21fd740b58e671430" translate="yes" xml:space="preserve">
          <source>Now change your &lt;code&gt;polls/index.html&lt;/code&gt; template from:</source>
          <target state="translated">现在，从以下位置更改 &lt;code&gt;polls/index.html&lt;/code&gt; 模板：</target>
        </trans-unit>
        <trans-unit id="3c17a0825c6bc86f0b3d2cec1786b40f2a2a7adf" translate="yes" xml:space="preserve">
          <source>Now create a directory called &lt;code&gt;admin&lt;/code&gt; inside &lt;code&gt;templates&lt;/code&gt;, and copy the template &lt;code&gt;admin/base_site.html&lt;/code&gt; from within the default Django admin template directory in the source code of Django itself (&lt;code&gt;django/contrib/admin/templates&lt;/code&gt;) into that directory.</source>
          <target state="translated">现在，在 &lt;code&gt;templates&lt;/code&gt; 内部创建一个名为 &lt;code&gt;admin&lt;/code&gt; 的目录，然后将Django自身源代码（ &lt;code&gt;django/contrib/admin/templates&lt;/code&gt; ）中默认Django admin模板目录中的模板 &lt;code&gt;admin/base_site.html&lt;/code&gt; 复制到该目录中。</target>
        </trans-unit>
        <trans-unit id="ad66c95e391e146cd22fbf05a88db00e41ed0fca" translate="yes" xml:space="preserve">
          <source>Now create admin views for the &lt;code&gt;Person&lt;/code&gt; and &lt;code&gt;Group&lt;/code&gt; models:</source>
          <target state="translated">现在为 &lt;code&gt;Person&lt;/code&gt; 和 &lt;code&gt;Group&lt;/code&gt; 模型创建管理员视图：</target>
        </trans-unit>
        <trans-unit id="32171b8cd59d1de6923e5f771f767aa171c9ff0d" translate="yes" xml:space="preserve">
          <source>Now for our hands-on example.</source>
          <target state="translated">现在是我们的实战例子。</target>
        </trans-unit>
        <trans-unit id="729e7fc2aa726bb0bbccd67b261c45e009998ba6" translate="yes" xml:space="preserve">
          <source>Now in your time on the web you may have come across such beauties as &amp;ldquo;ME2/Sites/dirmod.asp?sid=&amp;amp;type=gen&amp;amp;mod=Core+Pages&amp;amp;gid=A6CD4967199A42D9B65B1B&amp;rdquo;. You will be pleased to know that Django allows us much more elegant &lt;em&gt;URL patterns&lt;/em&gt; than that.</source>
          <target state="translated">现在，您在网络上的时光可能遇到了诸如&amp;ldquo; ME2 / Sites / dirmod.asp？sid =＆type = gen＆mod = Core + Pages＆gid = A6CD4967199A42D9B65B1B&amp;rdquo;之类的美人。您会很高兴知道Django允许我们提供比这更优雅的&lt;em&gt;URL模式&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="d7ae0cff622895ccfc58ecd68188d07d6dbf3c75" translate="yes" xml:space="preserve">
          <source>Now is a good time to check your backup strategy for these files.</source>
          <target state="translated">现在是检查你对这些文件的备份策略的好时机。</target>
        </trans-unit>
        <trans-unit id="36e9dc72ab05bd8c0ba6109d8103272522c57402" translate="yes" xml:space="preserve">
          <source>Now it&amp;rsquo;s time to go through all the changes made in our patch. To stage all the changes ready for commit, run:</source>
          <target state="translated">现在是时候检查补丁中所做的所有更改了。要暂存所有更改以准备提交，请运行：</target>
        </trans-unit>
        <trans-unit id="f163c45d21c3827f27074167e2374cf71f319599" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s add a few more views to &lt;code&gt;polls/views.py&lt;/code&gt;. These views are slightly different, because they take an argument:</source>
          <target state="translated">现在让我们向 &lt;code&gt;polls/views.py&lt;/code&gt; 添加更多视图。这些视图略有不同，因为它们采用了一个参数：</target>
        </trans-unit>
        <trans-unit id="f9a6d41951be6209dd204da14498c508cbc2918a" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s take a closer look at the &lt;code&gt;model&lt;/code&gt; argument we&amp;rsquo;ve been using all along. The &lt;code&gt;model&lt;/code&gt; argument, which specifies the database model that the view will operate upon, is available on all the generic views that operate on a single object or a collection of objects. However, the &lt;code&gt;model&lt;/code&gt; argument is not the only way to specify the objects that the view will operate upon &amp;ndash; you can also specify the list of objects using the &lt;code&gt;queryset&lt;/code&gt; argument:</source>
          <target state="translated">现在，让我们仔细看看我们一直使用的 &lt;code&gt;model&lt;/code&gt; 参数。该 &lt;code&gt;model&lt;/code&gt; 参数，该参数指定数据库模型，视图将在运行，适用于所有单个对象或对象的集合上运行的通用视图。但是， &lt;code&gt;model&lt;/code&gt; 参数不是指定视图将操作的对象的唯一方法&amp;ndash;您还可以使用 &lt;code&gt;queryset&lt;/code&gt; 参数指定对象列表：</target>
        </trans-unit>
        <trans-unit id="04c4dc8474d5993bb9a263be8a4f51e3572a25c0" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s update our &lt;code&gt;index&lt;/code&gt; view in &lt;code&gt;polls/views.py&lt;/code&gt; to use the template:</source>
          <target state="translated">现在，让我们在 &lt;code&gt;polls/views.py&lt;/code&gt; 中更新 &lt;code&gt;index&lt;/code&gt; 视图以使用模板：</target>
        </trans-unit>
        <trans-unit id="f7acf85e2f16d675683380e16460476b2319c859" translate="yes" xml:space="preserve">
          <source>Now normal &lt;code&gt;Person&lt;/code&gt; queries will be unordered and &lt;code&gt;OrderedPerson&lt;/code&gt; queries will be ordered by &lt;code&gt;last_name&lt;/code&gt;.</source>
          <target state="translated">现在普通的 &lt;code&gt;Person&lt;/code&gt; 查询将是无序的，而 &lt;code&gt;OrderedPerson&lt;/code&gt; 查询将由 &lt;code&gt;last_name&lt;/code&gt; 进行排序。</target>
        </trans-unit>
        <trans-unit id="52926bd958ab5c5a3c94125229eeb6b79ce9a920" translate="yes" xml:space="preserve">
          <source>Now sit back and relax. Django&amp;rsquo;s entire test suite has thousands of tests, and it takes at least a few minutes run, depending on the speed of your computer.</source>
          <target state="translated">现在坐下来放松。Django的整个测试套件具有数千个测试，并且至少要花几分钟的时间运行，具体取决于计算机的速度。</target>
        </trans-unit>
        <trans-unit id="1207f077c878e60c8e36479acd1b3e82b4924ee9" translate="yes" xml:space="preserve">
          <source>Now that the Question admin page is looking good, let&amp;rsquo;s make some tweaks to the &amp;ldquo;change list&amp;rdquo; page &amp;ndash; the one that displays all the questions in the system.</source>
          <target state="translated">现在问题管理页面看起来不错，让我们对&amp;ldquo;更改列表&amp;rdquo;页面进行一些调整，该页面显示了系统中的所有问题。</target>
        </trans-unit>
        <trans-unit id="9c4af4d9ba28bde34b6930edb4ff370956fb3d37" translate="yes" xml:space="preserve">
          <source>Now that the server&amp;rsquo;s running, visit &lt;a href=&quot;http://127.0.0.1:8000/&quot;&gt;http://127.0.0.1:8000/&lt;/a&gt; with your Web browser. You&amp;rsquo;ll see a &amp;ldquo;Congratulations!&amp;rdquo; page, with a rocket taking off. It worked!</source>
          <target state="translated">现在服务器已运行，请使用Web浏览器访问&lt;a href=&quot;http://127.0.0.1:8000/&quot;&gt;http://127.0.0.1:8000/&lt;/a&gt;。您会看到&amp;ldquo;恭喜！&amp;rdquo; 页，火箭起飞。有效！</target>
        </trans-unit>
        <trans-unit id="75e57caa4343eb4793c179b4fc0c146dbae59a0e" translate="yes" xml:space="preserve">
          <source>Now that we&amp;rsquo;ve packaged and tested &lt;code&gt;django-polls&lt;/code&gt;, it&amp;rsquo;s ready to share with the world! If this wasn&amp;rsquo;t just an example, you could now:</source>
          <target state="translated">既然我们已经打包并测试了 &lt;code&gt;django-polls&lt;/code&gt; ，就可以与世界分享了！如果这不仅仅是一个例子，您现在可以：</target>
        </trans-unit>
        <trans-unit id="bf406cea330fa6d9142db8c49a22df6724bea522" translate="yes" xml:space="preserve">
          <source>Now that we&amp;rsquo;ve registered &lt;code&gt;Question&lt;/code&gt;, Django knows that it should be displayed on the admin index page:</source>
          <target state="translated">现在我们已经注册了 &lt;code&gt;Question&lt;/code&gt; ，Django知道它应该显示在admin索引页面上：</target>
        </trans-unit>
        <trans-unit id="75cde598167c7f2589d0c60c6738de9584b976d6" translate="yes" xml:space="preserve">
          <source>Now that you have a local copy of Django, you can install it just like you would install any package using &lt;code&gt;pip&lt;/code&gt;. The most convenient way to do so is by using a &lt;em&gt;virtual environment&lt;/em&gt;, which is a feature built into Python that allows you to keep a separate directory of installed packages for each of your projects so that they don&amp;rsquo;t interfere with each other.</source>
          <target state="translated">现在您有了Django的本地副本，就可以安装它，就像使用 &lt;code&gt;pip&lt;/code&gt; 安装任何软件包一样。最方便的方法是使用&lt;em&gt;虚拟环境&lt;/em&gt;，这是Python内置的功能，可让您为每个项目保留单独的已安装软件包目录，以免彼此干扰。</target>
        </trans-unit>
        <trans-unit id="64bad9fc6f101dcdbda55bfa6724529b3cc5e83a" translate="yes" xml:space="preserve">
          <source>Now that you have set up your &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; to use your intermediary model (&lt;code&gt;Membership&lt;/code&gt;, in this case), you&amp;rsquo;re ready to start creating some many-to-many relationships. You do this by creating instances of the intermediate model:</source>
          <target state="translated">既然您已经设置了&lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;来使用中介模型（在本例中为 &lt;code&gt;Membership&lt;/code&gt; ），就可以开始创建一些多对多关系了。您可以通过创建中间模型的实例来做到这一点：</target>
        </trans-unit>
        <trans-unit id="2529a6500c0e15e2c4abe6d28f26cc62054cc372" translate="yes" xml:space="preserve">
          <source>Now that you&amp;rsquo;ve examined your dataset using &lt;code&gt;ogrinfo&lt;/code&gt;, create a GeoDjango model to represent this data:</source>
          <target state="translated">现在，您已经使用 &lt;code&gt;ogrinfo&lt;/code&gt; 检查了数据集，创建一个GeoDjango模型来表示此数据：</target>
        </trans-unit>
        <trans-unit id="dc2389b5f334729c58b759c145bcf664705ad347" translate="yes" xml:space="preserve">
          <source>Now that you&amp;rsquo;ve seen how to define geographic models and import data with the &lt;a href=&quot;layermapping&quot;&gt;LayerMapping data import utility&lt;/a&gt;, it&amp;rsquo;s possible to further automate this process with use of the &lt;a href=&quot;commands#django-admin-ogrinspect&quot;&gt;&lt;code&gt;ogrinspect&lt;/code&gt;&lt;/a&gt; management command. The &lt;a href=&quot;commands#django-admin-ogrinspect&quot;&gt;&lt;code&gt;ogrinspect&lt;/code&gt;&lt;/a&gt; command introspects a GDAL-supported vector data source (e.g., a shapefile) and generates a model definition and &lt;code&gt;LayerMapping&lt;/code&gt; dictionary automatically.</source>
          <target state="translated">既然您已经了解了如何使用&lt;a href=&quot;layermapping&quot;&gt;LayerMapping数据导入实用程序&lt;/a&gt;来定义地理模型和导入数据，则可以使用&lt;a href=&quot;commands#django-admin-ogrinspect&quot;&gt; &lt;code&gt;ogrinspect&lt;/code&gt; &lt;/a&gt;管理命令进一步自动化此过程。所述&lt;a href=&quot;commands#django-admin-ogrinspect&quot;&gt; &lt;code&gt;ogrinspect&lt;/code&gt; &lt;/a&gt;命令自省某个GDAL支持的矢量数据源（例如，shape文件），并生成一个模型定义和 &lt;code&gt;LayerMapping&lt;/code&gt; 自动字典。</target>
        </trans-unit>
        <trans-unit id="6376b1ae238a5fa6f312c93f3d2f4898fe8c1b17" translate="yes" xml:space="preserve">
          <source>Now that your environment &amp;ndash; a &amp;ldquo;project&amp;rdquo; &amp;ndash; is set up, you&amp;rsquo;re set to start doing work.</source>
          <target state="translated">现在，您的环境（一个&amp;ldquo;项目&amp;rdquo;）已设置好，您就可以开始工作了。</target>
        </trans-unit>
        <trans-unit id="fae278f6e2f60b163eed4caa52b0d02177fea03c" translate="yes" xml:space="preserve">
          <source>Now the question change list page looks like this:</source>
          <target state="translated">现在问题修改列表页面是这样的。</target>
        </trans-unit>
        <trans-unit id="eb90dc277d26d2a028d83b7c97946650cba77833" translate="yes" xml:space="preserve">
          <source>Now we &lt;em&gt;might&lt;/em&gt; be able to get away with putting our static files directly in &lt;code&gt;my_app/static/&lt;/code&gt; (rather than creating another &lt;code&gt;my_app&lt;/code&gt; subdirectory), but it would actually be a bad idea. Django will use the first static file it finds whose name matches, and if you had a static file with the same name in a &lt;em&gt;different&lt;/em&gt; application, Django would be unable to distinguish between them. We need to be able to point Django at the right one, and the best way to ensure this is by &lt;em&gt;namespacing&lt;/em&gt; them. That is, by putting those static files inside &lt;em&gt;another&lt;/em&gt; directory named for the application itself.</source>
          <target state="translated">现在，我们&lt;em&gt;也许&lt;/em&gt;可以将静态文件直接 &lt;code&gt;my_app/static/&lt;/code&gt; 在my_app / static /中（而不是创建另一个 &lt;code&gt;my_app&lt;/code&gt; 子目录），但这实际上不是一个好主意。 Django将使用找到的第一个名称与之匹配的静态文件，如果在&lt;em&gt;其他&lt;/em&gt;应用程序中具有相同名称的静态文件，则Django将无法区分它们。我们需要能够将Django指向正确的位置，而确保这一点的最佳方法是对它们进行&lt;em&gt;命名&lt;/em&gt;。也就是说，通过将这些静态文件放在应用程序本身命名的&lt;em&gt;另一个&lt;/em&gt;目录中。</target>
        </trans-unit>
        <trans-unit id="01d175c1e637f3cee5ceb291fdf4c9adfc0dc821" translate="yes" xml:space="preserve">
          <source>Now we &lt;em&gt;might&lt;/em&gt; be able to get away with putting our templates directly in &lt;code&gt;polls/templates&lt;/code&gt; (rather than creating another &lt;code&gt;polls&lt;/code&gt; subdirectory), but it would actually be a bad idea. Django will choose the first template it finds whose name matches, and if you had a template with the same name in a &lt;em&gt;different&lt;/em&gt; application, Django would be unable to distinguish between them. We need to be able to point Django at the right one, and the best way to ensure this is by &lt;em&gt;namespacing&lt;/em&gt; them. That is, by putting those templates inside &lt;em&gt;another&lt;/em&gt; directory named for the application itself.</source>
          <target state="translated">现在，我们&lt;em&gt;也许&lt;/em&gt;可以将模板直接放在 &lt;code&gt;polls/templates&lt;/code&gt; 中（而不是创建另一个 &lt;code&gt;polls&lt;/code&gt; 子目录），但这实际上是一个坏主意。Django将选择找到的第一个名称匹配的模板，如果在&lt;em&gt;不同的&lt;/em&gt;应用程序中有一个具有相同名称的模板，则Django将无法区分它们。我们需要能够将Django指向正确的位置，而确保这一点的最佳方法是对它们进行&lt;em&gt;命名&lt;/em&gt;。也就是说，将这些模板放在应用程序本身命名的&lt;em&gt;另一个&lt;/em&gt;目录中。</target>
        </trans-unit>
        <trans-unit id="7c4f42edd57918625d34396bf4a71a96fb72f5a7" translate="yes" xml:space="preserve">
          <source>Now we are ready to run the test suite. If you&amp;rsquo;re using GNU/Linux, macOS, or some other flavor of Unix, run:</source>
          <target state="translated">现在，我们准备运行测试套件。如果您使用的是GNU / Linux，macOS或其他类型的Unix，请运行：</target>
        </trans-unit>
        <trans-unit id="e47a8ac15a5ebf5edb5feb22215c8cd06eb6fb07" translate="yes" xml:space="preserve">
          <source>Now we can write a new &lt;code&gt;PublisherDetail&lt;/code&gt;:</source>
          <target state="translated">现在我们可以编写一个新的 &lt;code&gt;PublisherDetail&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7c66e87b3835c409da2dcefebcb4caed4fb353a1" translate="yes" xml:space="preserve">
          <source>Now we define our corresponding Django model (make sure to use &lt;a href=&quot;../../django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">现在，我们定义相应的Django模型（确保使用&lt;a href=&quot;../../django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="4c5602413593d1c5528e6e57dcbd46503a8f2804" translate="yes" xml:space="preserve">
          <source>Now we have a different problem - the longer name of &amp;ldquo;Helena Bonham Carter&amp;rdquo; doesn&amp;rsquo;t show up as it is much longer. Trigram searches consider all combinations of three letters, and compares how many appear in both search and source strings. For the longer name, there are more combinations which appear in the source string so it is no longer considered a close match.</source>
          <target state="translated">现在，我们遇到了另一个问题-&amp;ldquo; Helena Bonham Carter&amp;rdquo;的较长名称不再显示，因为它的长度更长。Trigram搜索考虑三个字母的所有组合，并比较搜索字符串和源字符串中出现的数量。对于较长的名称，源字符串中会出现更多的组合，因此不再将其视为紧密匹配。</target>
        </trans-unit>
        <trans-unit id="2d795b337a92c0a5e31febc9c4041e82a9227dbc" translate="yes" xml:space="preserve">
          <source>Now we implement the pre-processing and validation. Since we do not have any of our own validation at this point, we delegate to the nested expressions:</source>
          <target state="translated">现在我们实现预处理和验证。由于此时我们没有任何自己的验证,所以我们委托给嵌套的表达式。</target>
        </trans-unit>
        <trans-unit id="c37a1e6f4b5daec07056100cf46833458caf834e" translate="yes" xml:space="preserve">
          <source>Now we need to define a view:</source>
          <target state="translated">现在我们需要定义一个视图。</target>
        </trans-unit>
        <trans-unit id="8cfc15775270a0cf7074a75118fb26261619cc6f" translate="yes" xml:space="preserve">
          <source>Now we need to make sure that the test we wrote earlier passes, so we can see whether the code we added is working correctly. Again, navigate to the Django &lt;code&gt;tests/&lt;/code&gt; directory and run:</source>
          <target state="translated">现在，我们需要确保之前编写的测试通过了，以便我们可以查看添加的代码是否正常运行。再次，导航到Django &lt;code&gt;tests/&lt;/code&gt; 目录并运行：</target>
        </trans-unit>
        <trans-unit id="bcac3a04746aabf930cb5a747d4e5bc7fbac7974" translate="yes" xml:space="preserve">
          <source>Now we&amp;rsquo;ll define your models &amp;ndash; essentially, your database layout, with additional metadata.</source>
          <target state="translated">现在，我们将定义您的模型-本质上是您的数据库布局以及其他元数据。</target>
        </trans-unit>
        <trans-unit id="fe5908be768f13a2be925c73b002c0119eef5f3a" translate="yes" xml:space="preserve">
          <source>Now we&amp;rsquo;ll need to handle routing. First we want a router that knows to send queries for the &lt;code&gt;auth&lt;/code&gt; and &lt;code&gt;contenttypes&lt;/code&gt; apps to &lt;code&gt;auth_db&lt;/code&gt; (&lt;code&gt;auth&lt;/code&gt; models are linked to &lt;code&gt;ContentType&lt;/code&gt;, so they must be stored in the same database):</source>
          <target state="translated">现在，我们需要处理路由。首先，我们需要一个知道将 &lt;code&gt;auth&lt;/code&gt; 和 &lt;code&gt;contenttypes&lt;/code&gt; 应用程序查询发送到 &lt;code&gt;auth_db&lt;/code&gt; 的路由器（ &lt;code&gt;auth&lt;/code&gt; 模型链接到 &lt;code&gt;ContentType&lt;/code&gt; ，因此它们必须存储在同一数据库中）：</target>
        </trans-unit>
        <trans-unit id="d5c11520a098768a6c24489507829a2b07907224" translate="yes" xml:space="preserve">
          <source>Now we&amp;rsquo;ve seen how Django&amp;rsquo;s generic class-based views use the provided mixins, let&amp;rsquo;s look at other ways we can combine them. Of course we&amp;rsquo;re still going to be combining them with either built-in class-based views, or other generic class-based views, but there are a range of rarer problems you can solve than are provided for by Django out of the box.</source>
          <target state="translated">现在，我们已经了解了Django的基于通用类的视图如何使用所提供的mixins，让我们看一下将它们组合在一起的其他方法。当然，我们仍将它们与内置的基于类的视图或其他通用的基于类的视图结合起来，但是您可以解决许多比Django开箱即用的罕见问题。</target>
        </trans-unit>
        <trans-unit id="2b516478da3cbf3e609d2d9aa54d602ac37ba736" translate="yes" xml:space="preserve">
          <source>Now you can access the country in a template with &lt;code&gt;{{ form.coordinates.country }}&lt;/code&gt;.</source>
          <target state="translated">现在，您可以使用 &lt;code&gt;{{ form.coordinates.country }}&lt;/code&gt; 在模板中访问国家/地区。</target>
        </trans-unit>
        <trans-unit id="d475869dbc3deb53f1f216a136b9eba20db60766" translate="yes" xml:space="preserve">
          <source>Now you can apply the migrations as usual with the &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">现在，您可以像以前一样使用migration 命令应用&lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="72ac8fc1339f4d03f079fb6f9c9f0e194b347a82" translate="yes" xml:space="preserve">
          <source>Now you can put those skills to good use by helping to improve Django&amp;rsquo;s codebase.</source>
          <target state="translated">现在，您可以通过帮助改善Django的代码库来充分利用这些技能。</target>
        </trans-unit>
        <trans-unit id="23f1e33e76b69dcdf87c9a1fb7103093a05beea6" translate="yes" xml:space="preserve">
          <source>Now you can satisfy yourself that this behaves as expected by firing up &lt;code&gt;runserver&lt;/code&gt;, loading the site in your browser, creating &lt;code&gt;Questions&lt;/code&gt; with dates in the past and future, and checking that only those that have been published are listed. You don&amp;rsquo;t want to have to do that &lt;em&gt;every single time you make any change that might affect this&lt;/em&gt; - so let&amp;rsquo;s also create a test, based on our &lt;a href=&quot;../ref/django-admin#django-admin-shell&quot;&gt;&lt;code&gt;shell&lt;/code&gt;&lt;/a&gt; session above.</source>
          <target state="translated">现在，您可以通过启动 &lt;code&gt;runserver&lt;/code&gt; ，在浏览器中加载网站，创建带有过去和将来日期的 &lt;code&gt;Questions&lt;/code&gt; 并检查仅列出已发布的问题来使自己满意。您不需要&lt;em&gt;每次都进行可能影响此更改的更改，&lt;/em&gt;因此，我们还要根据上面的&lt;a href=&quot;../ref/django-admin#django-admin-shell&quot;&gt; &lt;code&gt;shell&lt;/code&gt; &lt;/a&gt;会话创建一个测试。</target>
        </trans-unit>
        <trans-unit id="0dd4f0d714b7b440236676490d5cd5cc97710517" translate="yes" xml:space="preserve">
          <source>Now you can use any of the documented attributes and methods of the &lt;a href=&quot;../ref/files/file#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">现在，您可以使用&lt;a href=&quot;../ref/files/file#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;类中记录的任何属性和方法。</target>
        </trans-unit>
        <trans-unit id="7ab3a4c732a570e45e72d8279159c31dd602e88c" translate="yes" xml:space="preserve">
          <source>Now you&amp;rsquo;ll also need a view corresponding to that &lt;code&gt;/your-name/&lt;/code&gt; URL which will find the appropriate key/value pairs in the request, and then process them.</source>
          <target state="translated">现在，您还需要一个与 &lt;code&gt;/your-name/&lt;/code&gt; URL 对应的视图，该视图将在请求中找到适当的键/值对，然后对其进行处理。</target>
        </trans-unit>
        <trans-unit id="773ae0c9b55a06a6212d086ca1c9132147c8e3bc" translate="yes" xml:space="preserve">
          <source>Now your admin site is set up to edit &lt;code&gt;Membership&lt;/code&gt; objects inline from either the &lt;code&gt;Person&lt;/code&gt; or the &lt;code&gt;Group&lt;/code&gt; detail pages.</source>
          <target state="translated">现在，您的管理站点已设置为从&amp;ldquo; &lt;code&gt;Person&lt;/code&gt; 或&amp;ldquo; &lt;code&gt;Group&lt;/code&gt; 详细信息页面内联编辑&amp;ldquo; &lt;code&gt;Membership&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="1d7161c477ce1fa34e1cd8a8fcedd1a97cd45391" translate="yes" xml:space="preserve">
          <source>Now your tag should begin to look like this:</source>
          <target state="translated">现在你的标签应该开始像这样。</target>
        </trans-unit>
        <trans-unit id="3ca505f89a58836d8d8355a91fcfdcb88a64397d" translate="yes" xml:space="preserve">
          <source>Now&amp;rsquo;s a good time to note: &lt;strong&gt;don&amp;rsquo;t&lt;/strong&gt; use this server in anything resembling a production environment. It&amp;rsquo;s intended only for use while developing. (We&amp;rsquo;re in the business of making Web frameworks, not Web servers.)</source>
          <target state="translated">现在是要注意的好时机：&lt;strong&gt;请勿&lt;/strong&gt;在类似于生产环境的任何环境中使用该服务器。仅在开发时使用。（我们的业务是制作Web框架，而不是Web服务器。）</target>
        </trans-unit>
        <trans-unit id="8d15bcc0a82dc2d5aaadb1122619ae9298528376" translate="yes" xml:space="preserve">
          <source>Now&amp;rsquo;s also a good time to note that change lists give you free pagination. The default is to display 100 items per page. &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_per_page&quot;&gt;&lt;code&gt;Change list pagination&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.search_fields&quot;&gt;&lt;code&gt;search boxes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_filter&quot;&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.date_hierarchy&quot;&gt;&lt;code&gt;date-hierarchies&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_display&quot;&gt;&lt;code&gt;column-header-ordering&lt;/code&gt;&lt;/a&gt; all work together like you think they should.</source>
          <target state="translated">现在也是注意更改列表为您提供免费分页的好时机。默认设置是每页显示100个项目。&lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_per_page&quot;&gt; &lt;code&gt;Change list pagination&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.search_fields&quot;&gt; &lt;code&gt;search boxes&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_filter&quot;&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.date_hierarchy&quot;&gt; &lt;code&gt;date-hierarchies&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_display&quot;&gt; &lt;code&gt;column-header-ordering&lt;/code&gt; &lt;/a&gt;都可以像您认为的那样一起工作。</target>
        </trans-unit>
        <trans-unit id="99ce113dbab28c6966339979cd1800d1c3a5e9a6" translate="yes" xml:space="preserve">
          <source>Now, all you need to do is create a new function and have &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt; use it. &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt; expects a callable as its argument which takes two arguments - the first is an &lt;a href=&quot;../ref/applications&quot;&gt;app registry&lt;/a&gt; that has the historical versions of all your models loaded into it to match where in your history the migration sits, and the second is a &lt;a href=&quot;../ref/schema-editor&quot;&gt;SchemaEditor&lt;/a&gt;, which you can use to manually effect database schema changes (but beware, doing this can confuse the migration autodetector!)</source>
          <target state="translated">现在，您需要做的就是创建一个新函数并让&lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt;使用它。&lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt;期望有一个callable作为其参数，该参数带有两个参数-第一个是&lt;a href=&quot;../ref/applications&quot;&gt;应用程序注册表&lt;/a&gt;，其中加载了所有模型的历史版本，以匹配历史记录中迁移的位置，第二个是&lt;a href=&quot;../ref/schema-editor&quot;&gt;SchemaEditor&lt;/a&gt;，您可以用于手动影响数据库架构更改（但请注意，这样做可能会使迁移自动检测器感到困惑！）</target>
        </trans-unit>
        <trans-unit id="e26eeede8de5f6aef6477290252659725320f583" translate="yes" xml:space="preserve">
          <source>Now, create a &lt;code&gt;polls/results.html&lt;/code&gt; template:</source>
          <target state="translated">现在，创建一个 &lt;code&gt;polls/results.html&lt;/code&gt; 模板：</target>
        </trans-unit>
        <trans-unit id="9b9600adacf65499e24be89755a51a93c7893117" translate="yes" xml:space="preserve">
          <source>Now, create and register the inclusion tag by calling the &lt;code&gt;inclusion_tag()&lt;/code&gt; method on a &lt;code&gt;Library&lt;/code&gt; object. Following our example, if the above template is in a file called &lt;code&gt;results.html&lt;/code&gt; in a directory that&amp;rsquo;s searched by the template loader, we&amp;rsquo;d register the tag like this:</source>
          <target state="translated">现在，通过调用 &lt;code&gt;Library&lt;/code&gt; 对象上的 &lt;code&gt;inclusion_tag()&lt;/code&gt; 方法来创建并注册包含标签。按照我们的示例，如果上面的模板在模板加载器搜索的目录中的 &lt;code&gt;results.html&lt;/code&gt; 文件中，我们将像这样注册标记：</target>
        </trans-unit>
        <trans-unit id="61df64fac0bdb450dcab9337d6fdd355672882b3" translate="yes" xml:space="preserve">
          <source>Now, define a point of interest &lt;a href=&quot;#id13&quot; id=&quot;id7&quot;&gt;[3]&lt;/a&gt;:</source>
          <target state="translated">现在，定义一个兴趣点&lt;a href=&quot;#id13&quot; id=&quot;id7&quot;&gt;[3]&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="c9f3f21fc4e880937be50b7fcf36ca081326148a" translate="yes" xml:space="preserve">
          <source>Now, go to &lt;code&gt;/polls/1/&lt;/code&gt; in your browser and vote in the question. You should see a results page that gets updated each time you vote. If you submit the form without having chosen a choice, you should see the error message.</source>
          <target state="translated">现在，在浏览器中转到 &lt;code&gt;/polls/1/&lt;/code&gt; 并对该问题进行投票。您应该看到一个结果页面，该页面在您每次投票时都会更新。如果您没有选择就提交表单，则应该看到错误消息。</target>
        </trans-unit>
        <trans-unit id="a1efea4230fe635c172ad6eeb75a83bbd75fc583" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s create a Django view that handles the submitted data and does something with it. Remember, in &lt;a href=&quot;tutorial03&quot;&gt;Tutorial 3&lt;/a&gt;, we created a URLconf for the polls application that includes this line:</source>
          <target state="translated">现在，让我们创建一个Django视图，该视图可以处理提交的数据并对其进行处理。记住，在&lt;a href=&quot;tutorial03&quot;&gt;教程3中&lt;/a&gt;，我们为民意调查应用程序创建了一个URLconf，其中包括以下行：</target>
        </trans-unit>
        <trans-unit id="38f59dfc7640b31e36394dc7c9a2f46f24eb17ba" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s hop into the interactive Python shell and play around with the free API Django gives you. To invoke the Python shell, use this command:</source>
          <target state="translated">现在，让我们跳入交互式Python外壳并使用Django给您的免费API。要调用Python Shell，请使用以下命令：</target>
        </trans-unit>
        <trans-unit id="7cbef95cf75c7a3f4b4837de306a008dbc014431" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s tackle the question detail view &amp;ndash; the page that displays the question text for a given poll. Here&amp;rsquo;s the view:</source>
          <target state="translated">现在，让我们解决问题详细信息视图&amp;ndash;显示给定民意测验的问题文本的页面。这是视图：</target>
        </trans-unit>
        <trans-unit id="b460cbb07f78017c0c6f37a652de30bf9aafdb00" translate="yes" xml:space="preserve">
          <source>Now, open a Web browser and go to &amp;ldquo;/admin/&amp;rdquo; on your local domain &amp;ndash; e.g., &lt;a href=&quot;http://127.0.0.1:8000/admin/&quot;&gt;http://127.0.0.1:8000/admin/&lt;/a&gt;. You should see the admin&amp;rsquo;s login screen:</source>
          <target state="translated">现在，打开Web浏览器，然后转到本地域上的&amp;ldquo; / admin /&amp;rdquo;，例如&lt;a href=&quot;http://127.0.0.1:8000/admin/&quot;&gt;http://127.0.0.1:8000/admin/&lt;/a&gt;。您应该看到管理员的登录屏幕：</target>
        </trans-unit>
        <trans-unit id="2b81dff36c6dd0997b6aebdd48e22ac831af4eec" translate="yes" xml:space="preserve">
          <source>Now, open the world borders shapefile using GeoDjango&amp;rsquo;s &lt;a href=&quot;gdal#django.contrib.gis.gdal.DataSource&quot;&gt;&lt;code&gt;DataSource&lt;/code&gt;&lt;/a&gt; interface:</source>
          <target state="translated">现在，使用GeoDjango的&lt;a href=&quot;gdal#django.contrib.gis.gdal.DataSource&quot;&gt; &lt;code&gt;DataSource&lt;/code&gt; &lt;/a&gt;界面打开世界边界shapefile ：</target>
        </trans-unit>
        <trans-unit id="19494074e0ce6b931ea15036d66465f2093b1be8" translate="yes" xml:space="preserve">
          <source>Now, open up &lt;code&gt;mysite/settings.py&lt;/code&gt;. It&amp;rsquo;s a normal Python module with module-level variables representing Django settings.</source>
          <target state="translated">现在，打开 &lt;code&gt;mysite/settings.py&lt;/code&gt; 。这是一个普通的Python模块，具有表示Django设置的模块级变量。</target>
        </trans-unit>
        <trans-unit id="98eda674a05d556734adf8bf7b9aad9a8c246679" translate="yes" xml:space="preserve">
          <source>Now, our &lt;code&gt;my_callback&lt;/code&gt; function will be called each time a request finishes.</source>
          <target state="translated">现在，每次请求完成时都会调用我们的 &lt;code&gt;my_callback&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="23d68917d434ad1e2573241b966e9bc0d51a64c4" translate="yes" xml:space="preserve">
          <source>Now, run &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; again to create those model tables in your database:</source>
          <target state="translated">现在，再次运行&lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;在数据库中创建那些模型表：</target>
        </trans-unit>
        <trans-unit id="f6a08d106d707a8e05cb59e3d025bf0cc3bf4b7b" translate="yes" xml:space="preserve">
          <source>Now, the queryset &lt;code&gt;Author.objects.filter(name__upper=&quot;doe&quot;)&lt;/code&gt; will generate a case insensitive query like this:</source>
          <target state="translated">现在，查询集 &lt;code&gt;Author.objects.filter(name__upper=&quot;doe&quot;)&lt;/code&gt; 将生成不区分大小写的查询，如下所示：</target>
        </trans-unit>
        <trans-unit id="019b413f09c92b059447ea74193178d9efd7b8c3" translate="yes" xml:space="preserve">
          <source>Now, try logging in with the superuser account you created in the previous step. You should see the Django admin index page:</source>
          <target state="translated">现在,尝试用你在上一步创建的超级用户账号登录。你应该会看到Django管理索引页。</target>
        </trans-unit>
        <trans-unit id="32c93024bff623c4289921c3b56bd9587350c8d3" translate="yes" xml:space="preserve">
          <source>Number of Arguments</source>
          <target state="translated">参数数量</target>
        </trans-unit>
        <trans-unit id="116820b9b73509743abf48a1acbf4dddd83206b7" translate="yes" xml:space="preserve">
          <source>Number of days in the given month.</source>
          <target state="translated">特定月份的天数。</target>
        </trans-unit>
        <trans-unit id="b04cb777db62302a02b9d216b8670b547ad281d0" translate="yes" xml:space="preserve">
          <source>Number of digits grouped together on the integer part of a number.</source>
          <target state="translated">一个数字的整数部分的数字组合在一起的数量。</target>
        </trans-unit>
        <trans-unit id="95f9d371df5b0ffd2cc6176a1143927d2193cd4f" translate="yes" xml:space="preserve">
          <source>Numeric index lookup</source>
          <target state="translated">数字索引查询</target>
        </trans-unit>
        <trans-unit id="fb91068c51189c866a8e510b38ba4dfebf5d32bc" translate="yes" xml:space="preserve">
          <source>ODBC</source>
          <target state="translated">ODBC</target>
        </trans-unit>
        <trans-unit id="662cf8bb9e3967038266eb1080ea6e4e8ea74f98" translate="yes" xml:space="preserve">
          <source>OGC Well Known Text (WKT) (a string)</source>
          <target state="translated">OGC众所周知的文本(WKT)(字符串)</target>
        </trans-unit>
        <trans-unit id="290c05886911d59cc8d674f70d003a43dc32e88b" translate="yes" xml:space="preserve">
          <source>OGR Geometries</source>
          <target state="translated">OGR几何学</target>
        </trans-unit>
        <trans-unit id="5c43e7d2987cbaac40255a43821f767dd0fadb67" translate="yes" xml:space="preserve">
          <source>OGR Inspection</source>
          <target state="translated">OGR检查</target>
        </trans-unit>
        <trans-unit id="a58dcb8d2f4fd78a7f09ddeec7fda1d4d46d2e33" translate="yes" xml:space="preserve">
          <source>OK, we have our Question admin page, but a &lt;code&gt;Question&lt;/code&gt; has multiple &lt;code&gt;Choice&lt;/code&gt;s, and the admin page doesn&amp;rsquo;t display choices.</source>
          <target state="translated">好的，我们有一个Question管理页面，但是 &lt;code&gt;Question&lt;/code&gt; 具有多个 &lt;code&gt;Choice&lt;/code&gt; ，并且该管理页面不显示选择。</target>
        </trans-unit>
        <trans-unit id="1cca936963e1216accc3c85fd19f87c15dacffe3" translate="yes" xml:space="preserve">
          <source>OR (&lt;code&gt;|&lt;/code&gt;)</source>
          <target state="translated">或（ &lt;code&gt;|&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="8399256020378bed8c3d8bb2e9c6938a2d24c39c" translate="yes" xml:space="preserve">
          <source>OSGeo4W</source>
          <target state="translated">OSGeo4W</target>
        </trans-unit>
        <trans-unit id="60967688a30a09eb09743791c704681612911e27" translate="yes" xml:space="preserve">
          <source>Object identity. Tests if two values are the same object. Example:</source>
          <target state="translated">对象标识。测试两个值是否是同一个对象。例如:</target>
        </trans-unit>
        <trans-unit id="1138c91041e87452fb65f50c02a6263c018cceb2" translate="yes" xml:space="preserve">
          <source>Object oriented techniques such as mixins (multiple inheritance) can be used to factor code into reusable components.</source>
          <target state="translated">面向对象的技术,如mixins(多重继承),可以用来将代码分解成可重用的组件。</target>
        </trans-unit>
        <trans-unit id="3c3732315e88d1732eac3020ab7ae166984c473a" translate="yes" xml:space="preserve">
          <source>Object-level permissions</source>
          <target state="translated">对象级权限</target>
        </trans-unit>
        <trans-unit id="30cbdb8ef956e08ea0a8a7249b15ecf177cfcdce" translate="yes" xml:space="preserve">
          <source>Objects of protected types are preserved as-is when passed to &lt;code&gt;force_str(strings_only=True)&lt;/code&gt;.</source>
          <target state="translated">当将受保护类型的对象传递给 &lt;code&gt;force_str(strings_only=True)&lt;/code&gt; 时，将按原样保留。</target>
        </trans-unit>
        <trans-unit id="89bdb07bfaaf9bcd97ef26d457c9af59af02d739" translate="yes" xml:space="preserve">
          <source>Obtaining an instance of an email backend</source>
          <target state="translated">获取一个电子邮件后台的实例</target>
        </trans-unit>
        <trans-unit id="0ee2fe4c89c33b784169dc3bdcf688393360399b" translate="yes" xml:space="preserve">
          <source>Obtaining sufficient privileges</source>
          <target state="translated">获得足够的特权</target>
        </trans-unit>
        <trans-unit id="2c1bf815eac71da64c2550da0f9bbeb63ce8fbb8" translate="yes" xml:space="preserve">
          <source>Occasionally you may want to turn off this feature for other reasons, and tell the template system to leave a variable uncalled no matter what. To do so, set a &lt;code&gt;do_not_call_in_templates&lt;/code&gt; attribute on the callable with the value &lt;code&gt;True&lt;/code&gt;. The template system then will act as if your variable is not callable (allowing you to access attributes of the callable, for example).</source>
          <target state="translated">有时您可能会出于其他原因而关闭此功能，并告诉模板系统无论如何都不要调用变量。为此，请在可调用对象 &lt;code&gt;do_not_call_in_templates&lt;/code&gt; 属性设置为 &lt;code&gt;True&lt;/code&gt; 。然后，模板系统将充当您的变量不可调用的角色（例如，允许您访问可调用的属性）。</target>
        </trans-unit>
        <trans-unit id="dc14009bad7130e19f5888d5db446a5a88ed6bba" translate="yes" xml:space="preserve">
          <source>Of course the &lt;code&gt;{% static %}&lt;/code&gt; template tag is not available for use in static files like your stylesheet which aren&amp;rsquo;t generated by Django. You should always use &lt;strong&gt;relative paths&lt;/strong&gt; to link your static files between each other, because then you can change &lt;a href=&quot;../ref/settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; (used by the &lt;a href=&quot;../ref/templates/builtins#std:templatetag-static&quot;&gt;&lt;code&gt;static&lt;/code&gt;&lt;/a&gt; template tag to generate its URLs) without having to modify a bunch of paths in your static files as well.</source>
          <target state="translated">当然， &lt;code&gt;{% static %}&lt;/code&gt; 模板标记不可用于Django不会生成的静态文件（如样式表）中。您应该始终使用&lt;strong&gt;相对路径&lt;/strong&gt;在彼此之间链接静态文件，因为这样您就可以更改&lt;a href=&quot;../ref/settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt;（由&lt;a href=&quot;../ref/templates/builtins#std:templatetag-static&quot;&gt; &lt;code&gt;static&lt;/code&gt; &lt;/a&gt;模板标记用于生成其URL），而不必修改静态文件中的一堆路径。</target>
        </trans-unit>
        <trans-unit id="1bfb2ce81e6431b7c29d4d51f74af68b25c65c1b" translate="yes" xml:space="preserve">
          <source>Of course, as with all deployment tasks, the devil&amp;rsquo;s in the details. Every production setup will be a bit different, so you&amp;rsquo;ll need to adapt the basic outline to fit your needs. Below are a few common patterns that might help.</source>
          <target state="translated">当然，与所有部署任务一样，细节在于魔鬼。每个生产设置都会有所不同，因此您需要调整基本轮廓以适合您的需求。以下是一些可能有用的常见模式。</target>
        </trans-unit>
        <trans-unit id="3138d541751c54ebe3947e00d873e0cb999fdf5a" translate="yes" xml:space="preserve">
          <source>Of course, because &lt;code&gt;get_queryset()&lt;/code&gt; returns a &lt;code&gt;QuerySet&lt;/code&gt; object, you can use &lt;code&gt;filter()&lt;/code&gt;, &lt;code&gt;exclude()&lt;/code&gt; and all the other &lt;code&gt;QuerySet&lt;/code&gt; methods on it. So these statements are all legal:</source>
          <target state="translated">当然，由于 &lt;code&gt;get_queryset()&lt;/code&gt; 返回 &lt;code&gt;QuerySet&lt;/code&gt; 对象，因此可以在其上使用 &lt;code&gt;filter()&lt;/code&gt; ， &lt;code&gt;exclude()&lt;/code&gt; 以及所有其他 &lt;code&gt;QuerySet&lt;/code&gt; 方法。因此，这些声明都是合法的：</target>
        </trans-unit>
        <trans-unit id="339c185649670de6cadadffe96de30e0ea152c7b" translate="yes" xml:space="preserve">
          <source>Of course, if you don&amp;rsquo;t add the &lt;code&gt;related_query_name&lt;/code&gt;, you can do the same types of lookups manually:</source>
          <target state="translated">当然，如果您不添加 &lt;code&gt;related_query_name&lt;/code&gt; ，则可以手动执行相同类型的查找：</target>
        </trans-unit>
        <trans-unit id="5ace8e5a78b0b07e276c3f79bec3e8c57d8d2cf9" translate="yes" xml:space="preserve">
          <source>Of course, if you don&amp;rsquo;t use the database cache backend, you don&amp;rsquo;t need to worry about providing routing instructions for the database cache model.</source>
          <target state="translated">当然，如果您不使用数据库缓存后端，则无需担心为数据库缓存模型提供路由说明。</target>
        </trans-unit>
        <trans-unit id="527c38a6fe862bcf884025c788e8189ecf445b95" translate="yes" xml:space="preserve">
          <source>Of course, it isn&amp;rsquo;t enough to just put logging calls into your code. You also need to configure the loggers, handlers, filters and formatters to ensure that logging output is output in a useful way.</source>
          <target state="translated">当然，仅将调用记录放入代码中是不够的。您还需要配置记录器，处理程序，过滤器和格式化程序，以确保以有用的方式输出日志输出。</target>
        </trans-unit>
        <trans-unit id="fcc549ed333af5c6dc1f30c1549598ffa992a9e4" translate="yes" xml:space="preserve">
          <source>Of course, it&amp;rsquo;s ugly to hard-code the site IDs like that. This sort of hard-coding is best for hackish fixes that you need done quickly. The cleaner way of accomplishing the same thing is to check the current site&amp;rsquo;s domain:</source>
          <target state="translated">当然，像这样对站点ID进行硬编码是很丑陋的。这种硬编码最适合您需要快速完成的修补程序。完成同一件事的更干净的方法是检查当前站点的域：</target>
        </trans-unit>
        <trans-unit id="30da449e73eca2c680c3454cfd47b5e1c988d5a8" translate="yes" xml:space="preserve">
          <source>Of course, specifying a custom reverse manager also enables you to call its custom methods:</source>
          <target state="translated">当然,指定一个自定义的反向管理器也可以调用它的自定义方法。</target>
        </trans-unit>
        <trans-unit id="3559c4a540af23819f57c71ccbe9f2efbc63b105" translate="yes" xml:space="preserve">
          <source>Of course, the &lt;code&gt;best_pizza&lt;/code&gt; relationship could also be fetched using &lt;code&gt;select_related&lt;/code&gt; to reduce the query count to 2:</source>
          <target state="translated">当然， &lt;code&gt;best_pizza&lt;/code&gt; 关系也可以用被取出 &lt;code&gt;select_related&lt;/code&gt; 减少查询次数为2：</target>
        </trans-unit>
        <trans-unit id="f2e2608c2269e9abaf6c0d87ce7cd4ef673445a8" translate="yes" xml:space="preserve">
          <source>Of course, the price of this flexibility is more work. Until now we haven&amp;rsquo;t had to worry about how to display form errors, because that&amp;rsquo;s taken care of for us. In this example we have had to make sure we take care of any errors for each field and any errors for the form as a whole. Note &lt;code&gt;{{ form.non_field_errors
}}&lt;/code&gt; at the top of the form and the template lookup for errors on each field.</source>
          <target state="translated">当然，这种灵活性的代价是更多的工作。到目前为止，我们不必担心如何显示表单错误，因为这已经为我们解决了。在此示例中，我们必须确保照顾到每个字段的所有错误以及整个表单的所有错误。注意在表单顶部的 &lt;code&gt;{{ form.non_field_errors }}&lt;/code&gt; 和模板查找每个字段上的错误。</target>
        </trans-unit>
        <trans-unit id="0b051c52844da773f0bf17768634155ead973ec0" translate="yes" xml:space="preserve">
          <source>Of course, these arguments can be used together.</source>
          <target state="translated">当然,这些论点可以一起使用。</target>
        </trans-unit>
        <trans-unit id="b45a927f98e4c7ad1501b4da064e9694f24affbf" translate="yes" xml:space="preserve">
          <source>Of course, this example isn&amp;rsquo;t very exciting &amp;ndash; it&amp;rsquo;s exactly the same as running &lt;code&gt;Person.objects.all()&lt;/code&gt;. However, &lt;code&gt;raw()&lt;/code&gt; has a bunch of other options that make it very powerful.</source>
          <target state="translated">当然，此示例不是很令人兴奋-与运行 &lt;code&gt;Person.objects.all()&lt;/code&gt; 完全相同。但是， &lt;code&gt;raw()&lt;/code&gt; 有很多其他选项，使其功能非常强大。</target>
        </trans-unit>
        <trans-unit id="cdb127b59fbd7b604d617baf8fd8c288a7b18b4d" translate="yes" xml:space="preserve">
          <source>Of course, you can also tell your users to put &lt;code&gt;'rock_n_roll.apps.RockNRollConfig'&lt;/code&gt; in their &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting. You can even provide several different &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; subclasses with different behaviors and allow your users to choose one via their &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">当然，您也可以告诉用户将 &lt;code&gt;'rock_n_roll.apps.RockNRollConfig'&lt;/code&gt; 放入其&lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置中。您甚至可以提供几种具有不同行为的不同&lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt;子类，并允许用户通过其&lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置选择一个。</target>
        </trans-unit>
        <trans-unit id="f16c3b04076cad0a812a7a10dc4a605fc752bf57" translate="yes" xml:space="preserve">
          <source>Often it is expensive (that is, resource-hungry and slow) to compute a value, so there can be huge benefit in saving the value to a quickly accessible cache, ready for the next time it&amp;rsquo;s required.</source>
          <target state="translated">通常，计算值很昂贵（即耗费资源且速度慢），因此将值保存到快速可访问的缓存中以备下次使用时会产生巨大的好处。</target>
        </trans-unit>
        <trans-unit id="8b78e944a624797ce2f6db948d2279c2ab3117b8" translate="yes" xml:space="preserve">
          <source>Often you need to present some extra information beyond that provided by the generic view. For example, think of showing a list of all the books on each publisher detail page. The &lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt;&lt;code&gt;DetailView&lt;/code&gt;&lt;/a&gt; generic view provides the publisher to the context, but how do we get additional information in that template?</source>
          <target state="translated">通常，您需要提供一些超出通用视图所提供信息的额外信息。例如，考虑在每个出版商详细信息页面上显示所有书籍的列表。该&lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt; &lt;code&gt;DetailView&lt;/code&gt; &lt;/a&gt;通用视图提供了出版商到上下文，但是我们如何在模板中获取更多的信息？</target>
        </trans-unit>
        <trans-unit id="6179c551e66fb1509d096aba5f29780dd1197fb9" translate="yes" xml:space="preserve">
          <source>Often you want the search engine crawlers to index views which are neither object detail pages nor flatpages. The solution is to explicitly list URL names for these views in &lt;code&gt;items&lt;/code&gt; and call &lt;a href=&quot;../urlresolvers#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;location&lt;/code&gt; method of the sitemap. For example:</source>
          <target state="translated">通常，您希望搜索引擎爬网程序为既不是对象详细信息页面也不是平面页面的视图编制索引。解决方案是在 &lt;code&gt;items&lt;/code&gt; 显式列出这些视图的URL名称，然后在站点地图的 &lt;code&gt;location&lt;/code&gt; 方法中调用&lt;a href=&quot;../urlresolvers#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="f81feb967d1e47b1a7a307eacaa07cfd1652c9e4" translate="yes" xml:space="preserve">
          <source>Often, you will just want to use the parent class to hold information that you don&amp;rsquo;t want to have to type out for each child model. This class isn&amp;rsquo;t going to ever be used in isolation, so &lt;a href=&quot;#abstract-base-classes&quot;&gt;Abstract base classes&lt;/a&gt; are what you&amp;rsquo;re after.</source>
          <target state="translated">通常，您只想使用父类来保存不需要为每个子模型键入的信息。此类永远不会孤立地使用，因此您所追求的是&lt;a href=&quot;#abstract-base-classes&quot;&gt;Abstract基类&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b05a5f2fb24b871d13e27678513c61dfb1f55427" translate="yes" xml:space="preserve">
          <source>Oh, and one more thing: making humans edit XML is sadistic!</source>
          <target state="translated">哦,还有一点:让人类编辑XML是虐心的!</target>
        </trans-unit>
        <trans-unit id="eca5f76268f199f0b3cfebb0d68b71bb23c8d38a" translate="yes" xml:space="preserve">
          <source>Older version of Django will eventually no longer receive security updates. (see &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/release-process/#supported-versions-policy&quot;&gt;Supported versions&lt;/a&gt;).</source>
          <target state="translated">较旧版本的Django最终将不再收到安全更新。（请参阅&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/release-process/#supported-versions-policy&quot;&gt;支持的版本&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="87b1b047909da2fb1a82bf3394d62da9dc8ee40a" translate="yes" xml:space="preserve">
          <source>Older versions don&amp;rsquo;t display model properties.</source>
          <target state="translated">较旧的版本不显示模型属性。</target>
        </trans-unit>
        <trans-unit id="1236aef81022c4e6ffb10318683fd9a5227e19ab" translate="yes" xml:space="preserve">
          <source>Older versions of Django require the &lt;code&gt;name&lt;/code&gt; argument for all versions of Python.</source>
          <target state="translated">较早版本的Django需要所有Python版本的 &lt;code&gt;name&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="10ec9d5b7946a13c106294a63c16870358b0e25b" translate="yes" xml:space="preserve">
          <source>Omits the primary key in the serialized data of this object since it can be calculated during deserialization.</source>
          <target state="translated">省略该对象序列化数据中的主键,因为它可以在反序列化过程中计算。</target>
        </trans-unit>
        <trans-unit id="b9826f39dc51cb2574613e0058661470274d2713" translate="yes" xml:space="preserve">
          <source>On Debian/Ubuntu, you are advised to install the following packages which will install, directly or by dependency, the required geospatial libraries:</source>
          <target state="translated">在Debian/Ubuntu上,我们建议您安装以下软件包,它们将直接或通过依赖关系安装所需的地理空间库。</target>
        </trans-unit>
        <trans-unit id="3fd4a5308445d55b19d8fb010b7fb03ba7766bfa" translate="yes" xml:space="preserve">
          <source>On Debian/Ubuntu, you are advised to install the following packages: postgresql-x.x, postgresql-x.x-postgis, postgresql-server-dev-x.x, python-psycopg2 (x.x matching the PostgreSQL version you want to install). Alternately, you can &lt;a href=&quot;https://postgis.net/docs/postgis_installation.html#install_short_version&quot;&gt;build from source&lt;/a&gt;. Consult the platform-specific instructions if you are on &lt;a href=&quot;index#macos&quot;&gt;macOS&lt;/a&gt; or &lt;a href=&quot;index#windows&quot;&gt;Windows&lt;/a&gt;.</source>
          <target state="translated">建议在Debian / Ubuntu上安装以下软件包：postgresql-xx，postgresql-xx-postgis，postgresql-server-dev-xx，python-psycopg2（与要安装的PostgreSQL版本匹配的xx）。或者，您可以&lt;a href=&quot;https://postgis.net/docs/postgis_installation.html#install_short_version&quot;&gt;从source构建&lt;/a&gt;。如果您使用的是&lt;a href=&quot;index#macos&quot;&gt;macOS&lt;/a&gt;或&lt;a href=&quot;index#windows&quot;&gt;Windows，&lt;/a&gt;请查阅特定于平台的说明。</target>
        </trans-unit>
        <trans-unit id="a82dbf3165cbd0a452eb5b7752d0d864094e5ff4" translate="yes" xml:space="preserve">
          <source>On GNU/Linux systems, there is typically a file in &lt;code&gt;/etc/ld.so.conf&lt;/code&gt;, which may include additional paths from files in another directory, such as &lt;code&gt;/etc/ld.so.conf.d&lt;/code&gt;. As the root user, add the custom library path (like &lt;code&gt;/usr/local/lib&lt;/code&gt;) on a new line in &lt;code&gt;ld.so.conf&lt;/code&gt;. This is &lt;em&gt;one&lt;/em&gt; example of how to do so:</source>
          <target state="translated">在GNU / Linux系统上，通常在 &lt;code&gt;/etc/ld.so.conf&lt;/code&gt; 中有一个文件，该文件可能包含来自另一个目录（例如 &lt;code&gt;/etc/ld.so.conf.d&lt;/code&gt; )中文件的其他路径。作为root用户，在 &lt;code&gt;ld.so.conf&lt;/code&gt; 中的新行上添加自定义库路径（例如 &lt;code&gt;/usr/local/lib&lt;/code&gt; ）。这是如何执行此操作的&lt;em&gt;一个&lt;/em&gt;示例：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c469cf17feb53e87d1d7993315a9037108c1435c" translate="yes" xml:space="preserve">
          <source>On Lawrence.com, this email has the subject line &amp;ldquo;Thanks for subscribing to lawrence.com alerts.&amp;rdquo; On LJWorld.com, the email has the subject &amp;ldquo;Thanks for subscribing to LJWorld.com alerts.&amp;rdquo; Same goes for the email&amp;rsquo;s message body.</source>
          <target state="translated">在Lawrence.com上，此电子邮件的主题行为&amp;ldquo;感谢订阅lawrence.com警报&amp;rdquo;。在LJWorld.com上，电子邮件的主题为&amp;ldquo;感谢订阅LJWorld.com警报&amp;rdquo;。电子邮件的消息正文也是如此。</target>
        </trans-unit>
        <trans-unit id="09825e1bf4715078c02662b5c1463d166eb2bd68" translate="yes" xml:space="preserve">
          <source>On Linux platforms, it may be necessary to run the &lt;code&gt;ldconfig&lt;/code&gt; command after installing each library. For example:</source>
          <target state="translated">在Linux平台上，安装每个库之后可能需要运行 &lt;code&gt;ldconfig&lt;/code&gt; 命令。例如：</target>
        </trans-unit>
        <trans-unit id="5b7489f228770df5c4f89793fb295c0eb5f80335" translate="yes" xml:space="preserve">
          <source>On MySQL, returns &lt;code&gt;None&lt;/code&gt; for any non-&lt;code&gt;LINESTRING&lt;/code&gt; geometry.</source>
          <target state="translated">在MySQL上，对任何非 &lt;code&gt;LINESTRING&lt;/code&gt; 几何返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c479465cf9d6eb8433e919653828b13ecb2fedc6" translate="yes" xml:space="preserve">
          <source>On MySQL, returns &lt;code&gt;None&lt;/code&gt; for single geometries.</source>
          <target state="translated">在MySQL上，对于单个几何返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9423ea6ae9f5742f7782982188883a7624b6df11" translate="yes" xml:space="preserve">
          <source>On PostGIS and SpatiaLite, when the coordinates are geodetic (angular), you can specify if the calculation should be based on a simple sphere (less accurate, less resource-intensive) or on a spheroid (more accurate, more resource-intensive) with the &lt;code&gt;spheroid&lt;/code&gt; keyword argument.</source>
          <target state="translated">在PostGIS和SpatiaLite上，当坐标为大地坐标（角度）时，您可以指定计算是基于简单球体（精度较低，资源密集度较低）还是椭球体（精度更高，资源密集度较高）进行计算，该 &lt;code&gt;spheroid&lt;/code&gt; 关键字参数。</target>
        </trans-unit>
        <trans-unit id="e7bc6aa4387e8af5e72d849e5f9186d63d8f8b76" translate="yes" xml:space="preserve">
          <source>On PostgreSQL only, you can pass positional arguments (&lt;code&gt;*fields&lt;/code&gt;) in order to specify the names of fields to which the &lt;code&gt;DISTINCT&lt;/code&gt; should apply. This translates to a &lt;code&gt;SELECT DISTINCT ON&lt;/code&gt; SQL query. Here&amp;rsquo;s the difference. For a normal &lt;code&gt;distinct()&lt;/code&gt; call, the database compares &lt;em&gt;each&lt;/em&gt; field in each row when determining which rows are distinct. For a &lt;code&gt;distinct()&lt;/code&gt; call with specified field names, the database will only compare the specified field names.</source>
          <target state="translated">仅在PostgreSQL上，您可以传递位置参数（ &lt;code&gt;*fields&lt;/code&gt; ），以指定 &lt;code&gt;DISTINCT&lt;/code&gt; 应该应用的字段名称。这将转换为 &lt;code&gt;SELECT DISTINCT ON&lt;/code&gt; SQL查询。这是区别。对于常规的 &lt;code&gt;distinct()&lt;/code&gt; 调用，数据库在确定哪些行不同时会比较每行中的&lt;em&gt;每个&lt;/em&gt;字段。对于具有指定字段名称的 &lt;code&gt;distinct()&lt;/code&gt; 调用，数据库将仅比较指定的字段名称。</target>
        </trans-unit>
        <trans-unit id="d3ed2b681cc5211a1b79d3ad34cfeacc6f5daf13" translate="yes" xml:space="preserve">
          <source>On PostgreSQL, &lt;a href=&quot;../../ref/settings#std:setting-USER&quot;&gt;&lt;code&gt;USER&lt;/code&gt;&lt;/a&gt; will also need read access to the built-in &lt;code&gt;postgres&lt;/code&gt; database.</source>
          <target state="translated">在PostgreSQL上，&lt;a href=&quot;../../ref/settings#std:setting-USER&quot;&gt; &lt;code&gt;USER&lt;/code&gt; &lt;/a&gt;还需要对内置 &lt;code&gt;postgres&lt;/code&gt; 数据库的读取权限。</target>
        </trans-unit>
        <trans-unit id="e720f29b1479551b262a1c817ee9afc76e69cbd5" translate="yes" xml:space="preserve">
          <source>On PostgreSQL, server-side cursors will only be used when the &lt;a href=&quot;../settings#std:setting-DATABASE-DISABLE_SERVER_SIDE_CURSORS&quot;&gt;&lt;code&gt;DISABLE_SERVER_SIDE_CURSORS&lt;/code&gt;&lt;/a&gt; setting is &lt;code&gt;False&lt;/code&gt;. Read &lt;a href=&quot;../databases#transaction-pooling-server-side-cursors&quot;&gt;Transaction pooling and server-side cursors&lt;/a&gt; if you&amp;rsquo;re using a connection pooler configured in transaction pooling mode. When server-side cursors are disabled, the behavior is the same as databases that don&amp;rsquo;t support server-side cursors.</source>
          <target state="translated">在PostgreSQL上，仅当&lt;a href=&quot;../settings#std:setting-DATABASE-DISABLE_SERVER_SIDE_CURSORS&quot;&gt; &lt;code&gt;DISABLE_SERVER_SIDE_CURSORS&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;False&lt;/code&gt; 时才使用服务器端游标。如果您使用在事务池模式下配置的连接池，请阅读&lt;a href=&quot;../databases#transaction-pooling-server-side-cursors&quot;&gt;事务池和服务器端游标&lt;/a&gt;。禁用服务器端游标时，其行为与不支持服务器端游标的数据库相同。</target>
        </trans-unit>
        <trans-unit id="231d27d56a450bb1d7a023aede748b738f5350bc" translate="yes" xml:space="preserve">
          <source>On PostgreSQL, the &lt;code&gt;'spheroid'&lt;/code&gt; option uses &lt;a href=&quot;https://postgis.net/docs/ST_Distance_Spheroid.html&quot;&gt;ST_DistanceSpheroid&lt;/a&gt; instead of &lt;a href=&quot;https://postgis.net/docs/ST_DistanceSphere.html&quot;&gt;ST_DistanceSphere&lt;/a&gt;. The simpler &lt;a href=&quot;https://postgis.net/docs/ST_Distance.html&quot;&gt;ST_Distance&lt;/a&gt; function is used with projected coordinate systems. Rasters are converted to geometries for spheroid based lookups.</source>
          <target state="translated">在PostgreSQL上， &lt;code&gt;'spheroid'&lt;/code&gt; 选项使用&lt;a href=&quot;https://postgis.net/docs/ST_Distance_Spheroid.html&quot;&gt;ST_DistanceSpheroid&lt;/a&gt;而不是&lt;a href=&quot;https://postgis.net/docs/ST_DistanceSphere.html&quot;&gt;ST_DistanceSphere&lt;/a&gt;。更简单的&lt;a href=&quot;https://postgis.net/docs/ST_Distance.html&quot;&gt;ST_Distance&lt;/a&gt;函数与投影坐标系一起使用。栅格将转换为用于基于椭球的查找的几何。</target>
        </trans-unit>
        <trans-unit id="feadeca3b502e38c5e7a1bb0d3cdda7e166c150a" translate="yes" xml:space="preserve">
          <source>On PostgreSQL, the SQL &lt;code&gt;CURRENT_TIMESTAMP&lt;/code&gt; returns the time that the current transaction started. Therefore for cross-database compatibility, &lt;code&gt;Now()&lt;/code&gt; uses &lt;code&gt;STATEMENT_TIMESTAMP&lt;/code&gt; instead. If you need the transaction timestamp, use &lt;a href=&quot;../contrib/postgres/functions#django.contrib.postgres.functions.TransactionNow&quot;&gt;&lt;code&gt;django.contrib.postgres.functions.TransactionNow&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在PostgreSQL上，SQL &lt;code&gt;CURRENT_TIMESTAMP&lt;/code&gt; 返回当前事务开始的时间。因此，为了实现跨数据库兼容性， &lt;code&gt;Now()&lt;/code&gt; 改为使用 &lt;code&gt;STATEMENT_TIMESTAMP&lt;/code&gt; 。如果需要事务时间戳记，请使用&lt;a href=&quot;../contrib/postgres/functions#django.contrib.postgres.functions.TransactionNow&quot;&gt; &lt;code&gt;django.contrib.postgres.functions.TransactionNow&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="171a834e14bec4fef794bc5172bffac81b861f95" translate="yes" xml:space="preserve">
          <source>On PostgreSQL, the SQL looks like:</source>
          <target state="translated">在PostgreSQL上,SQL看起来像。</target>
        </trans-unit>
        <trans-unit id="6d1a678530b7cbd46006434001f4f57bbb5211cd" translate="yes" xml:space="preserve">
          <source>On Unix environments (where &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.tzset&quot;&gt;&lt;code&gt;time.tzset()&lt;/code&gt;&lt;/a&gt; is implemented), Django sets the &lt;code&gt;os.environ['TZ']&lt;/code&gt; variable to the time zone you specify in the &lt;a href=&quot;#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt; setting. Thus, all your views and models will automatically operate in this time zone. However, Django won&amp;rsquo;t set the &lt;code&gt;TZ&lt;/code&gt; environment variable if you&amp;rsquo;re using the manual configuration option as described in &lt;a href=&quot;../topics/settings#settings-without-django-settings-module&quot;&gt;manually configuring settings&lt;/a&gt;. If Django doesn&amp;rsquo;t set the &lt;code&gt;TZ&lt;/code&gt; environment variable, it&amp;rsquo;s up to you to ensure your processes are running in the correct environment.</source>
          <target state="translated">在Unix环境（实现&lt;a href=&quot;https://docs.python.org/3/library/time.html#time.tzset&quot;&gt; &lt;code&gt;time.tzset()&lt;/code&gt; 的&lt;/a&gt;环境）上，Django将 &lt;code&gt;os.environ['TZ']&lt;/code&gt; 变量设置为您在&lt;a href=&quot;#std:setting-TIME_ZONE&quot;&gt; &lt;code&gt;TIME_ZONE&lt;/code&gt; &lt;/a&gt;设置中指定的时区。因此，您所有的视图和模型都将在该时区自动运行。但是，如果您按照&lt;a href=&quot;../topics/settings#settings-without-django-settings-module&quot;&gt;手动配置设置中&lt;/a&gt;所述使用手动配置选项，则Django将不会设置 &lt;code&gt;TZ&lt;/code&gt; 环境变量。如果Django未设置 &lt;code&gt;TZ&lt;/code&gt; 环境变量，则取决于您确保进程在正确的环境中运行。</target>
        </trans-unit>
        <trans-unit id="9d87034675bfeb09dc1e05ad5ad92358405b48c9" translate="yes" xml:space="preserve">
          <source>On Windows platforms you can use the pgAdmin III utility to add superuser privileges to your database user.</source>
          <target state="translated">在 Windows 平台上,您可以使用 pgAdmin III 实用程序为您的数据库用户添加超级用户权限。</target>
        </trans-unit>
        <trans-unit id="54cfe6ffa00bf56c62bc2f9682a4ade18bfc9dbc" translate="yes" xml:space="preserve">
          <source>On Windows, the REPL is output due to implementation limits of &lt;a href=&quot;https://docs.python.org/3/library/select.html#select.select&quot;&gt;&lt;code&gt;select.select()&lt;/code&gt;&lt;/a&gt; on that platform.</source>
          <target state="translated">在Windows上，由于该平台上&lt;a href=&quot;https://docs.python.org/3/library/select.html#select.select&quot;&gt; &lt;code&gt;select.select()&lt;/code&gt; 的&lt;/a&gt;实现限制而输出REPL 。</target>
        </trans-unit>
        <trans-unit id="98e35620cab04b96e3ed65990cf570def39684a2" translate="yes" xml:space="preserve">
          <source>On a real Web page, you probably don&amp;rsquo;t want every widget to look the same. You might want a larger input element for the comment, and you might want the &amp;lsquo;name&amp;rsquo; widget to have some special CSS class. It is also possible to specify the &amp;lsquo;type&amp;rsquo; attribute to take advantage of the new HTML5 input types. To do this, you use the &lt;a href=&quot;#django.forms.Widget.attrs&quot;&gt;&lt;code&gt;Widget.attrs&lt;/code&gt;&lt;/a&gt; argument when creating the widget:</source>
          <target state="translated">在真实的网页上，您可能不希望每个小部件看起来都一样。您可能希望注释使用更大的输入元素，并且可能希望&amp;ldquo;名称&amp;rdquo;小部件具有一些特殊的CSS类。还可以指定'type'属性以利用新的HTML5输入类型。为此，请在创建窗口小部件时使用&lt;a href=&quot;#django.forms.Widget.attrs&quot;&gt; &lt;code&gt;Widget.attrs&lt;/code&gt; &lt;/a&gt;参数：</target>
        </trans-unit>
        <trans-unit id="e383a68178353fa8decc814cdf26f0a58017ac20" translate="yes" xml:space="preserve">
          <source>On a similar note, you might want to customize the look and feel of the Django admin index page.</source>
          <target state="translated">类似的,你可能想自定义Django管理索引页的外观和感觉。</target>
        </trans-unit>
        <trans-unit id="e3513645906e49f967649384ce2aae2d3029c45e" translate="yes" xml:space="preserve">
          <source>On backends that support distance calculation on geodetic coordinates, the proper backend function is automatically chosen depending on the SRID value of the geometries (e.g. &lt;a href=&quot;https://postgis.net/docs/ST_DistanceSphere.html&quot;&gt;ST_DistanceSphere&lt;/a&gt; on PostGIS).</source>
          <target state="translated">在支持基于大地坐标的距离计算的后端上，将根据几何的SRID值（例如PostGIS上的&lt;a href=&quot;https://postgis.net/docs/ST_DistanceSphere.html&quot;&gt;ST_DistanceSphere&lt;/a&gt;）自动选择适当的后端功能。</target>
        </trans-unit>
        <trans-unit id="5b43d185bfcf98e3e0ff7e26ab187ce7f129ec1c" translate="yes" xml:space="preserve">
          <source>On databases that do support DDL transactions (SQLite and PostgreSQL), &lt;code&gt;RunPython&lt;/code&gt; operations do not have any transactions automatically added besides the transactions created for each migration. Thus, on PostgreSQL, for example, you should avoid combining schema changes and &lt;code&gt;RunPython&lt;/code&gt; operations in the same migration or you may hit errors like &lt;code&gt;OperationalError: cannot
ALTER TABLE &quot;mytable&quot; because it has pending trigger events&lt;/code&gt;.</source>
          <target state="translated">在支持DDL事务的数据库（SQLite和PostgreSQL）上， &lt;code&gt;RunPython&lt;/code&gt; 操作除了为每个迁移创建的事务外，没有自动添加任何事务。因此，例如在PostgreSQL上，应避免在同一迁移中合并模式更改和 &lt;code&gt;RunPython&lt;/code&gt; 操作，否则可能会遇到诸如 &lt;code&gt;OperationalError: cannot ALTER TABLE &quot;mytable&quot; because it has pending trigger events&lt;/code&gt; 错误：不能ALTER TABLE&amp;ldquo; mytable&amp;rdquo;，因为它具有未决的触发事件。</target>
        </trans-unit>
        <trans-unit id="11d4ca34e4865526ed3bab65d895985c1d8c7e06" translate="yes" xml:space="preserve">
          <source>On databases that support DDL transactions (SQLite and PostgreSQL), migrations will run inside a transaction by default. For use cases such as performing data migrations on large tables, you may want to prevent a migration from running in a transaction by setting the &lt;code&gt;atomic&lt;/code&gt; attribute to &lt;code&gt;False&lt;/code&gt;:</source>
          <target state="translated">在支持DDL事务的数据库（SQLite和PostgreSQL）上，默认情况下，迁移将在事务内运行。对于诸如在大型表上执行数据迁移之类的用例，您可能需要通过将 &lt;code&gt;atomic&lt;/code&gt; 属性设置为 &lt;code&gt;False&lt;/code&gt; 来防止迁移在事务中运行：</target>
        </trans-unit>
        <trans-unit id="ca5b4e07c53341abd3017356f8a7dc9ef7ae499a" translate="yes" xml:space="preserve">
          <source>On databases that support it (all but Oracle), setting the &lt;code&gt;ignore_conflicts&lt;/code&gt; parameter to &lt;code&gt;True&lt;/code&gt; tells the database to ignore failure to insert any rows that fail constraints such as duplicate unique values. Enabling this parameter disables setting the primary key on each model instance (if the database normally supports it).</source>
          <target state="translated">在支持它的数据库（Oracle以外的所有数据库）上，将 &lt;code&gt;ignore_conflicts&lt;/code&gt; 参数设置为 &lt;code&gt;True&lt;/code&gt; 会告诉数据库忽略插入任何失败约束（例如重复的唯一值）的行的失败。启用此参数将禁用在每个模型实例上设置主键（如果数据库通常支持的话）。</target>
        </trans-unit>
        <trans-unit id="df2a46b8e1aeddaad78520b882b9cdecf3e5c347" translate="yes" xml:space="preserve">
          <source>On every distance lookup except &lt;a href=&quot;#std:fieldlookup-dwithin&quot;&gt;&lt;code&gt;dwithin&lt;/code&gt;&lt;/a&gt;, an optional element, &lt;code&gt;'spheroid'&lt;/code&gt;, may be included to use the more accurate spheroid distance calculation functions on fields with a geodetic coordinate system.</source>
          <target state="translated">在除&lt;a href=&quot;#std:fieldlookup-dwithin&quot;&gt; &lt;code&gt;dwithin&lt;/code&gt; &lt;/a&gt;之外的所有距离查找中，都可以包含可选元素 &lt;code&gt;'spheroid'&lt;/code&gt; ，以在具有大地坐标系的字段上使用更精确的球体距离计算功能。</target>
        </trans-unit>
        <trans-unit id="5c16f183cbe43a1d74cb296d07073bd34180fa90" translate="yes" xml:space="preserve">
          <source>On occasions it may be useful to require or restrict the keys which are valid for a given field. This can be done using the &lt;a href=&quot;validators#django.contrib.postgres.validators.KeysValidator&quot;&gt;&lt;code&gt;KeysValidator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有时，要求或限制对于给定字段有效的密钥可能会很有用。这可以使用&lt;a href=&quot;validators#django.contrib.postgres.validators.KeysValidator&quot;&gt; &lt;code&gt;KeysValidator&lt;/code&gt; &lt;/a&gt;完成。</target>
        </trans-unit>
        <trans-unit id="3135ae21a09a7d5963484b5886ed97c37f9aee36" translate="yes" xml:space="preserve">
          <source>On older databases, adding a field with a default value may cause a full rewrite of the table. This happens even for nullable fields and may have a negative performance impact. To avoid that, the following steps should be taken.</source>
          <target state="translated">在旧的数据库中,添加一个具有默认值的字段可能会导致表的完全重写。即使是对于可空字段,也会发生这种情况,可能会对性能产生负面影响。为了避免这种情况,应采取以下步骤。</target>
        </trans-unit>
        <trans-unit id="7a602592df2f82b3d4e98221e99e6bdd1a6c483c" translate="yes" xml:space="preserve">
          <source>On other databases, this is emulated using a &lt;code&gt;CASE&lt;/code&gt; statement:</source>
          <target state="translated">在其他数据库上，这是使用 &lt;code&gt;CASE&lt;/code&gt; 语句模拟的：</target>
        </trans-unit>
        <trans-unit id="78d0d5f86c0751b63e02578856d36bc3a65a179a" translate="yes" xml:space="preserve">
          <source>On some databases, flags may cause the query to be executed which could have adverse effects on your database. For example, PostgreSQL&amp;rsquo;s &lt;code&gt;ANALYZE&lt;/code&gt; flag could result in changes to data if there are triggers or if a function is called, even for a &lt;code&gt;SELECT&lt;/code&gt; query.</source>
          <target state="translated">在某些数据库上，标志可能导致查询被执行，这可能会对您的数据库产生不利影响。例如，如果存在触发器或调用了函数，即使对于 &lt;code&gt;SELECT&lt;/code&gt; 查询，PostgreSQL的 &lt;code&gt;ANALYZE&lt;/code&gt; 标志也可能导致数据更改。</target>
        </trans-unit>
        <trans-unit id="002dcb5bc58a7582b107d7e7d9659347ad64dcf4" translate="yes" xml:space="preserve">
          <source>On subsequent &lt;code&gt;collectstatic&lt;/code&gt; runs (if &lt;code&gt;STATIC_ROOT&lt;/code&gt; isn&amp;rsquo;t empty), files are copied only if they have a modified timestamp greater than the timestamp of the file in &lt;code&gt;STATIC_ROOT&lt;/code&gt;. Therefore if you remove an application from &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;, it&amp;rsquo;s a good idea to use the &lt;a href=&quot;#cmdoption-collectstatic-clear&quot;&gt;&lt;code&gt;collectstatic
--clear&lt;/code&gt;&lt;/a&gt; option in order to remove stale static files.</source>
          <target state="translated">在后续的 &lt;code&gt;collectstatic&lt;/code&gt; 运行中（如果 &lt;code&gt;STATIC_ROOT&lt;/code&gt; 不为空），仅当文件的修改时间戳大于 &lt;code&gt;STATIC_ROOT&lt;/code&gt; 中文件的时间戳时，才复制文件。因此，如果您从&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 中&lt;/a&gt;删除应用程序，则最好使用&lt;a href=&quot;#cmdoption-collectstatic-clear&quot;&gt; &lt;code&gt;collectstatic --clear&lt;/code&gt; &lt;/a&gt;选项来删除过时的静态文件。</target>
        </trans-unit>
        <trans-unit id="26454cc1ad8a1430d9c48c7d5cb25125f3c45cef" translate="yes" xml:space="preserve">
          <source>On supported backends (memcached), &lt;code&gt;set_many()&lt;/code&gt; returns a list of keys that failed to be inserted.</source>
          <target state="translated">在受支持的后端（memcached）上， &lt;code&gt;set_many()&lt;/code&gt; 返回无法插入的密钥列表。</target>
        </trans-unit>
        <trans-unit id="4b4ebcf96010e5ee4bcc0f23b425a4b14b45545e" translate="yes" xml:space="preserve">
          <source>On the left hand side of the example, &lt;code&gt;rast&lt;/code&gt; is the geographic raster field and &lt;a href=&quot;geoquerysets#std:fieldlookup-gis-contains&quot;&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; is the spatial lookup type. On the right hand side, &lt;code&gt;geom&lt;/code&gt; is a geometry input and &lt;code&gt;rst&lt;/code&gt; is a &lt;a href=&quot;gdal#django.contrib.gis.gdal.GDALRaster&quot;&gt;&lt;code&gt;GDALRaster&lt;/code&gt;&lt;/a&gt; object. The band index defaults to &lt;code&gt;0&lt;/code&gt; in the first two queries and is set to &lt;code&gt;1&lt;/code&gt; on the others.</source>
          <target state="translated">在示例的左侧， &lt;code&gt;rast&lt;/code&gt; 是地理栅格字段，&lt;a href=&quot;geoquerysets#std:fieldlookup-gis-contains&quot;&gt; &lt;code&gt;contains&lt;/code&gt; &lt;/a&gt;是空间查找类型。在右侧， &lt;code&gt;geom&lt;/code&gt; 是几何输入， &lt;code&gt;rst&lt;/code&gt; 是&lt;a href=&quot;gdal#django.contrib.gis.gdal.GDALRaster&quot;&gt; &lt;code&gt;GDALRaster&lt;/code&gt; &lt;/a&gt;对象。频段索引在前两个查询中默认为 &lt;code&gt;0&lt;/code&gt; ,在其他查询中设置为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="da0ebe59862835efe42e9523305ea8c0bd6a5461" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;a href=&quot;../ref/models/querysets#when-querysets-are-evaluated&quot;&gt;certain operations will force the evaluation of a QuerySet&lt;/a&gt;. Avoiding the premature evaluation of a &lt;code&gt;QuerySet&lt;/code&gt; can save making an expensive and unnecessary trip to the database.</source>
          <target state="translated">另一方面，&lt;a href=&quot;../ref/models/querysets#when-querysets-are-evaluated&quot;&gt;某些操作将强制评估QuerySet&lt;/a&gt;。避免过早评估 &lt;code&gt;QuerySet&lt;/code&gt; 可以节省对数据库的昂贵而不必要的行程。</target>
        </trans-unit>
        <trans-unit id="3d160b683bea44fcb1e91d7c5b1f06dc5559f378" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;code&gt;GET&lt;/code&gt; is suitable for things like a web search form, because the URLs that represent a &lt;code&gt;GET&lt;/code&gt; request can easily be bookmarked, shared, or resubmitted.</source>
          <target state="translated">另一方面， &lt;code&gt;GET&lt;/code&gt; 适用于诸如Web搜索表单之类的东西，因为代表 &lt;code&gt;GET&lt;/code&gt; 请求的URL 可以轻松地添加书签，共享或重新提交。</target>
        </trans-unit>
        <trans-unit id="6f7a7c5801c7d1a1d3369cd7df4b42ee61e93288" translate="yes" xml:space="preserve">
          <source>On the other hand, bugs caused by the lack of time zone support are much harder to prevent, diagnose and fix. Anything that involves scheduled tasks or datetime arithmetic is a candidate for subtle bugs that will bite you only once or twice a year.</source>
          <target state="translated">另一方面,由于缺乏时区支持而导致的错误,则更难预防、诊断和修复。任何涉及到计划任务或日期时间运算的东西都有可能出现微妙的bug,而这些bug每年只会咬你一两次。</target>
        </trans-unit>
        <trans-unit id="42997296bab7b08f1ceb56e2afd964aad5014fa4" translate="yes" xml:space="preserve">
          <source>On the other hand, by setting the &lt;code&gt;--verbosity&lt;/code&gt; flag to 2, you can get all the directories which were searched:</source>
          <target state="translated">另一方面，通过将 &lt;code&gt;--verbosity&lt;/code&gt; 标志设置为2，可以获取所有搜索到的目录：</target>
        </trans-unit>
        <trans-unit id="327d8b70bf9dd3f89730d860563313020b6f5624" translate="yes" xml:space="preserve">
          <source>On the other hand, if you are using a plain &lt;code&gt;FormSet&lt;/code&gt;, it&amp;rsquo;s up to you to handle &lt;code&gt;formset.deleted_forms&lt;/code&gt;, perhaps in your formset&amp;rsquo;s &lt;code&gt;save()&lt;/code&gt; method, as there&amp;rsquo;s no general notion of what it means to delete a form.</source>
          <target state="translated">另一方面，如果您使用的是普通的 &lt;code&gt;FormSet&lt;/code&gt; ，则由您决定是否可以处理 &lt;code&gt;formset.deleted_forms&lt;/code&gt; ，可能是在formset的 &lt;code&gt;save()&lt;/code&gt; 方法中处理，因为对于删除表单的含义没有普遍的认识。</target>
        </trans-unit>
        <trans-unit id="b4d82efd4f41e1694a1ff4a96d13777aeea9b652" translate="yes" xml:space="preserve">
          <source>On the other hand, proxy models are intended to behave exactly like the model they are proxying for. They are always in sync with the parent model since they directly inherit its fields and managers.</source>
          <target state="translated">另一方面,代理模型的目的是为了与它们代理的模型表现得一模一样。它们总是与父模型同步,因为它们直接继承了父模型的字段和管理者。</target>
        </trans-unit>
        <trans-unit id="9d9eb41739d72afbd8898888fd10f2dab6d9d4e3" translate="yes" xml:space="preserve">
          <source>On the other hand, when a savepoint is rolled back (due to an exception being raised), the inner callable will not be called:</source>
          <target state="translated">另一方面,当一个保存点被回滚时(由于异常被引发),内部的可调用将不会被调用。</target>
        </trans-unit>
        <trans-unit id="2a4daf554ed077861bb378c80a8f4c5b4b8037da" translate="yes" xml:space="preserve">
          <source>On the server (&lt;code&gt;mod_wsgi&lt;/code&gt;)</source>
          <target state="translated">在服务器上（ &lt;code&gt;mod_wsgi&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="cecf61e7e09516497b38938fd37f1bddd24dfa26" translate="yes" xml:space="preserve">
          <source>On the server, run &lt;a href=&quot;../../ref/contrib/staticfiles#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; to copy all the static files into &lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在服务器上，运行&lt;a href=&quot;../../ref/contrib/staticfiles#django-admin-collectstatic&quot;&gt; &lt;code&gt;collectstatic&lt;/code&gt; &lt;/a&gt;将所有静态文件复制到&lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt; &lt;code&gt;STATIC_ROOT&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8018b894c78df10ce0e2fab04879f59541601d51" translate="yes" xml:space="preserve">
          <source>On these spatial backends the intersection pattern is a string comprising nine characters, which define intersections between the interior, boundary, and exterior of the geometry field and the lookup geometry. The intersection pattern matrix may only use the following characters: &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;T&lt;/code&gt;, &lt;code&gt;F&lt;/code&gt;, or &lt;code&gt;*&lt;/code&gt;. This lookup type allows users to &amp;ldquo;fine tune&amp;rdquo; a specific geometric relationship consistent with the DE-9IM model. &lt;a href=&quot;#fnde9im&quot; id=&quot;id4&quot;&gt;[1]&lt;/a&gt;</source>
          <target state="translated">在这些空间后端，相交图案是一个包含9个字符的字符串，它们定义了几何字段和查找几何的内部，边界和外部之间的相交。交集矩阵图案可仅使用下面的特征： &lt;code&gt;1&lt;/code&gt; ， &lt;code&gt;2&lt;/code&gt; ， &lt;code&gt;T&lt;/code&gt; ， &lt;code&gt;F&lt;/code&gt; ，或 &lt;code&gt;*&lt;/code&gt; 。这种查找类型允许用户&amp;ldquo;微调&amp;rdquo;与DE-9IM模型一致的特定几何关系。&lt;a href=&quot;#fnde9im&quot; id=&quot;id4&quot;&gt;[1]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fe2da8c6b3beffe86c43d4ad3b331e4d1ab5aed7" translate="yes" xml:space="preserve">
          <source>On-commit functions for a given transaction are executed in the order they were registered.</source>
          <target state="translated">某一交易的On-commit函数按其注册的顺序执行。</target>
        </trans-unit>
        <trans-unit id="5b56a6bf63627728f31e434c106869807d7bf4d8" translate="yes" xml:space="preserve">
          <source>On-commit functions only work with &lt;a href=&quot;#managing-autocommit&quot;&gt;autocommit mode&lt;/a&gt; and the &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;../../ref/settings#std:setting-DATABASE-ATOMIC_REQUESTS&quot;&gt;&lt;code&gt;ATOMIC_REQUESTS&lt;/code&gt;&lt;/a&gt;) transaction API. Calling &lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt;&lt;code&gt;on_commit()&lt;/code&gt;&lt;/a&gt; when autocommit is disabled and you are not within an atomic block will result in an error.</source>
          <target state="translated">提交功能仅适用于&lt;a href=&quot;#managing-autocommit&quot;&gt;自动提交模式&lt;/a&gt;和&lt;a href=&quot;#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt;（或&lt;a href=&quot;../../ref/settings#std:setting-DATABASE-ATOMIC_REQUESTS&quot;&gt; &lt;code&gt;ATOMIC_REQUESTS&lt;/code&gt; &lt;/a&gt;）事务API。禁用自动提交并且您不在原子块内时调用&lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt; &lt;code&gt;on_commit()&lt;/code&gt; &lt;/a&gt;会导致错误。</target>
        </trans-unit>
        <trans-unit id="ea953980477f23ceaa27913413963b194a15f9cb" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;LocaleMiddleware&lt;/code&gt; determines the user&amp;rsquo;s preference, it makes this preference available as &lt;code&gt;request.LANGUAGE_CODE&lt;/code&gt; for each &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt;. Feel free to read this value in your view code. Here&amp;rsquo;s an example:</source>
          <target state="translated">一旦 &lt;code&gt;LocaleMiddleware&lt;/code&gt; 确定了用户的首选项，它将使该首选项作为每个&lt;a href=&quot;../../ref/request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; 的&lt;/a&gt; &lt;code&gt;request.LANGUAGE_CODE&lt;/code&gt; 可用。随时在您的视图代码中读取此值。这是一个例子：</target>
        </trans-unit>
        <trans-unit id="45bad62da27ce3b983be7a3066691f1ee9b247b1" translate="yes" xml:space="preserve">
          <source>Once a logger has determined that a message needs to be processed, it is passed to a &lt;em&gt;Handler&lt;/em&gt;.</source>
          <target state="translated">记录器确定需要处理消息后，会将其传递给&lt;em&gt;Handler&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="4892907ad7249904f6f00c6f41012b6dc82795ed" translate="yes" xml:space="preserve">
          <source>Once a node is parsed, its &lt;code&gt;render&lt;/code&gt; method may be called any number of times. Since Django is sometimes run in multi-threaded environments, a single node may be simultaneously rendering with different contexts in response to two separate requests. Therefore, it&amp;rsquo;s important to make sure your template tags are thread safe.</source>
          <target state="translated">解析节点后，可以多次调用其 &lt;code&gt;render&lt;/code&gt; 方法。由于Django有时在多线程环境中运行，因此单个节点可能响应两个单独的请求同时使用不同的上下文进行渲染。因此，重要的是要确保模板标签是线程安全的。</target>
        </trans-unit>
        <trans-unit id="4b7a48f914d876adbccaa3adc73eedab94ce96c4" translate="yes" xml:space="preserve">
          <source>Once a subclass of &lt;code&gt;File&lt;/code&gt; is created, the new &lt;code&gt;FileField&lt;/code&gt; subclass must be told to use it. To do so, assign the new &lt;code&gt;File&lt;/code&gt; subclass to the special &lt;code&gt;attr_class&lt;/code&gt; attribute of the &lt;code&gt;FileField&lt;/code&gt; subclass.</source>
          <target state="translated">创建 &lt;code&gt;File&lt;/code&gt; 的子类后，必须告知新的 &lt;code&gt;FileField&lt;/code&gt; 子类使用它。要做到这一点，分配新的 &lt;code&gt;File&lt;/code&gt; 子类的特殊 &lt;code&gt;attr_class&lt;/code&gt; 的属性 &lt;code&gt;FileField&lt;/code&gt; 子类。</target>
        </trans-unit>
        <trans-unit id="7fa4afcebb8e9a2e720375d04ee811c5c1d53d5f" translate="yes" xml:space="preserve">
          <source>Once a user has authenticated, Django stores which backend was used to authenticate the user in the user&amp;rsquo;s session, and re-uses the same backend for the duration of that session whenever access to the currently authenticated user is needed. This effectively means that authentication sources are cached on a per-session basis, so if you change &lt;a href=&quot;../../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt;&lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt;&lt;/a&gt;, you&amp;rsquo;ll need to clear out session data if you need to force users to re-authenticate using different methods. A simple way to do that is to execute &lt;code&gt;Session.objects.all().delete()&lt;/code&gt;.</source>
          <target state="translated">用户通过身份验证后，Django会在用户会话中存储用于验证用户身份的后端，并在需要访问当前身份验证的用户时在该会话期间重复使用相同的后端。这实际上意味着身份验证源将基于每个会话进行缓存，因此，如果您更改&lt;a href=&quot;../../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt; &lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt; &lt;/a&gt;，则需要强制用户使用其他方法重新进行身份验证，则需要清除会话数据。一种简单的方法是执行 &lt;code&gt;Session.objects.all().delete()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="47cc039fbcb18a971f6b9e295950ac28d3bbc3d6" translate="yes" xml:space="preserve">
          <source>Once one of the URL patterns matches, Django calls the given view, which is a Python function. Each view gets passed a request object &amp;ndash; which contains request metadata &amp;ndash; and the values captured in the pattern.</source>
          <target state="translated">一旦其中一个URL模式匹配，Django就会调用给定的视图，这是一个Python函数。每个视图都传递了一个请求对象（其中包含请求元数据）以及模式中捕获的值。</target>
        </trans-unit>
        <trans-unit id="8afce1673f10a3038aee77d9942248ca3461e349" translate="yes" xml:space="preserve">
          <source>Once one of the URL patterns matches, Django imports and calls the given view, which is a Python function (or a &lt;a href=&quot;../class-based-views/index&quot;&gt;class-based view&lt;/a&gt;). The view gets passed the following arguments:</source>
          <target state="translated">一旦其中一个URL模式匹配，Django就会导入并调用给定的视图，该视图是Python函数（或基于&lt;a href=&quot;../class-based-views/index&quot;&gt;类的视图&lt;/a&gt;）。该视图将传递以下参数：</target>
        </trans-unit>
        <trans-unit id="8d3f70853ffe17be01ce6b6b1b1ad3963fb68cb3" translate="yes" xml:space="preserve">
          <source>Once that&amp;rsquo;s done, all you have to do is run &lt;a href=&quot;../../ref/contrib/staticfiles#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; and your static files would be pushed through your storage package up to S3. If you later needed to switch to a different storage provider, you may only have to change your &lt;a href=&quot;../../ref/settings#std:setting-STATICFILES_STORAGE&quot;&gt;&lt;code&gt;STATICFILES_STORAGE&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">一旦完成，您所要做的就是运行&lt;a href=&quot;../../ref/contrib/staticfiles#django-admin-collectstatic&quot;&gt; &lt;code&gt;collectstatic&lt;/code&gt; ,&lt;/a&gt;并且您的静态文件将通过存储包推送到S3。如果以后需要切换到其他存储提供商，则只需更改&lt;a href=&quot;../../ref/settings#std:setting-STATICFILES_STORAGE&quot;&gt; &lt;code&gt;STATICFILES_STORAGE&lt;/code&gt; &lt;/a&gt;设置即可。</target>
        </trans-unit>
        <trans-unit id="cfd518f7c02dab56b7fa7099e9ab5f115d40d4af" translate="yes" xml:space="preserve">
          <source>Once that&amp;rsquo;s done, we can run &lt;code&gt;python manage.py migrate&lt;/code&gt; as normal and the data migration will run in place alongside other migrations.</source>
          <target state="translated">完成后，我们可以正常运行 &lt;code&gt;python manage.py migrate&lt;/code&gt; migration，数据迁移将与其他迁移一起就地运行。</target>
        </trans-unit>
        <trans-unit id="7d80a9630a5667fa5b1bf5e0b53bb9c33fc0955a" translate="yes" xml:space="preserve">
          <source>Once the cache is set up, the simplest way to use caching is to cache your entire site. You&amp;rsquo;ll need to add &lt;code&gt;'django.middleware.cache.UpdateCacheMiddleware'&lt;/code&gt; and &lt;code&gt;'django.middleware.cache.FetchFromCacheMiddleware'&lt;/code&gt; to your &lt;a href=&quot;../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting, as in this example:</source>
          <target state="translated">一旦设置了缓存，使用缓存的最简单方法就是缓存整个站点。您需要在&lt;a href=&quot;../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt;设置中添加 &lt;code&gt;'django.middleware.cache.UpdateCacheMiddleware'&lt;/code&gt; 和 &lt;code&gt;'django.middleware.cache.FetchFromCacheMiddleware'&lt;/code&gt; ，如以下示例所示：</target>
        </trans-unit>
        <trans-unit id="099066c054cd7e4194c8ae65b8e3741ea951ec11" translate="yes" xml:space="preserve">
          <source>Once the migration is applied, commit the migration and the models change to your version control system as a single commit - that way, when other developers (or your production servers) check out the code, they&amp;rsquo;ll get both the changes to your models and the accompanying migration at the same time.</source>
          <target state="translated">应用迁移后，提交迁移，然后将模型作为一次提交提交到版本控制系统中-这样，当其他开发人员（或生产服务器）签出代码时，他们将获得对模型的所有更改以及与此同时进行的迁移。</target>
        </trans-unit>
        <trans-unit id="9aac27c3870fec649b441a68d9801e0cfc37bac9" translate="yes" xml:space="preserve">
          <source>Once the operation sequence has been reduced as much as possible - the amount possible depends on how closely intertwined your models are and if you have any &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunSQL&quot;&gt;&lt;code&gt;RunSQL&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt; operations (which can&amp;rsquo;t be optimized through unless they are marked as &lt;code&gt;elidable&lt;/code&gt;) - Django will then write it back out into a new set of migration files.</source>
          <target state="translated">一旦尽可能减少了操作顺序-可能的数量取决于模型之间的紧密联系以及是否有任何&lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunSQL&quot;&gt; &lt;code&gt;RunSQL&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt;操作（除非将它们标记为可 &lt;code&gt;elidable&lt;/code&gt; 否则无法进行优化）-Django将然后将其写回到一组新的迁移文件中。</target>
        </trans-unit>
        <trans-unit id="ed3b976c0a650bb7fc905a8f0966094dff0cf52a" translate="yes" xml:space="preserve">
          <source>Once the sitemaps application is added to your project, you may also ping Google using the &lt;code&gt;ping_google&lt;/code&gt; management command:</source>
          <target state="translated">将Sitemaps应用程序添加到您的项目后，您还可以使用 &lt;code&gt;ping_google&lt;/code&gt; 管理命令ping Google ：</target>
        </trans-unit>
        <trans-unit id="f6b49e146a7a6f8208bd2db324b466d09add24fd" translate="yes" xml:space="preserve">
          <source>Once the string literals of an application have been tagged for later translation, the translation themselves need to be written (or obtained). Here&amp;rsquo;s how that works.</source>
          <target state="translated">一旦标记了应用程序的字符串文字以进行以后的翻译，就需要编写（或获取）翻译本身。这是这样的。</target>
        </trans-unit>
        <trans-unit id="f206c7b7afb4f63e3142f262b4b4485c255b7031" translate="yes" xml:space="preserve">
          <source>Once the test database has been created, Django will run your tests. If everything goes well, you&amp;rsquo;ll see something like this:</source>
          <target state="translated">创建测试数据库后，Django将运行您的测试。如果一切顺利，您将看到以下内容：</target>
        </trans-unit>
        <trans-unit id="c49b2de11a260f313eebb5acb8de8bd12ea04b7c" translate="yes" xml:space="preserve">
          <source>Once the tests complete, you should be greeted with a message informing you whether the test suite passed or failed. Since you haven&amp;rsquo;t yet made any changes to Django&amp;rsquo;s code, the entire test suite &lt;strong&gt;should&lt;/strong&gt; pass. If you get failures or errors make sure you&amp;rsquo;ve followed all of the previous steps properly. See &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/unit-tests/#running-unit-tests&quot;&gt;Running the unit tests&lt;/a&gt; for more information.</source>
          <target state="translated">测试完成后，应该收到一条消息，通知您测试套件是通过还是失败。由于您尚未对Django的代码进行任何更改，因此整个测试套件&lt;strong&gt;都应该&lt;/strong&gt;通过。如果遇到故障或错误，请确保已正确执行了所有前面的步骤。有关更多信息，请参见&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/unit-tests/#running-unit-tests&quot;&gt;运行单元测试&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="08bca7ec8b63ac1bbbb86e71cc804f726025bfcc" translate="yes" xml:space="preserve">
          <source>Once this is done, Django takes care of translating Web apps on the fly in each available language, according to users&amp;rsquo; language preferences.</source>
          <target state="translated">完成此操作后，Django会根据用户的语言偏好即时翻译每种可用语言的Web应用程序。</target>
        </trans-unit>
        <trans-unit id="beac49f82b1bb9504998712c3c8cf268da1ee652" translate="yes" xml:space="preserve">
          <source>Once this stage completes, APIs that operate on application configurations such as &lt;a href=&quot;#django.apps.apps.get_app_config&quot;&gt;&lt;code&gt;get_app_config()&lt;/code&gt;&lt;/a&gt; become usable.</source>
          <target state="translated">一旦完成此阶段，就可以使用对应用程序配置（例如&lt;a href=&quot;#django.apps.apps.get_app_config&quot;&gt; &lt;code&gt;get_app_config()&lt;/code&gt; )&lt;/a&gt;进行操作的API 。</target>
        </trans-unit>
        <trans-unit id="6d1164058a89f4747e93310f35287594ad610bd0" translate="yes" xml:space="preserve">
          <source>Once this stage completes, APIs that operate on models such as &lt;a href=&quot;#django.apps.apps.get_model&quot;&gt;&lt;code&gt;get_model()&lt;/code&gt;&lt;/a&gt; become usable.</source>
          <target state="translated">一旦完成此阶段，就可以使用在诸如&lt;a href=&quot;#django.apps.apps.get_model&quot;&gt; &lt;code&gt;get_model()&lt;/code&gt; 之类的&lt;/a&gt;模型上运行的API 。</target>
        </trans-unit>
        <trans-unit id="2953f2561ce177f56af024f2dd92e1f59d25403c" translate="yes" xml:space="preserve">
          <source>Once those steps are complete, you can start browsing the documentation by going to your admin interface and clicking the &amp;ldquo;Documentation&amp;rdquo; link in the upper right of the page.</source>
          <target state="translated">完成这些步骤后，您可以通过转到管理界面并单击页面右上方的&amp;ldquo;文档&amp;rdquo;链接来开始浏览文档。</target>
        </trans-unit>
        <trans-unit id="1239ce07e292603a287e3a01f0eb30465810a2ec" translate="yes" xml:space="preserve">
          <source>Once you have &lt;code&gt;MytypeField&lt;/code&gt;, you can use it in any model, just like any other &lt;code&gt;Field&lt;/code&gt; type:</source>
          <target state="translated">一旦拥有 &lt;code&gt;MytypeField&lt;/code&gt; ，就可以在任何模型中使用它，就像其他任何 &lt;code&gt;Field&lt;/code&gt; 类型一样：</target>
        </trans-unit>
        <trans-unit id="b3891fc58305b0a5a423532b9868592dc59f7e43" translate="yes" xml:space="preserve">
          <source>Once you have a &lt;code&gt;Client&lt;/code&gt; instance, you can call any of the following methods:</source>
          <target state="translated">拥有一个 &lt;code&gt;Client&lt;/code&gt; 实例后，您可以调用以下任何一种方法：</target>
        </trans-unit>
        <trans-unit id="d52a875481cca2d8c66414f94d375f0c665ec6c2" translate="yes" xml:space="preserve">
          <source>Once you have a compiled &lt;a href=&quot;#django.template.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; object, you can render a context with it. You can reuse the same template to render it several times with different contexts.</source>
          <target state="translated">一旦有了已编译的&lt;a href=&quot;#django.template.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt;对象，就可以使用它呈现上下文。您可以重复使用同一模板，以在不同的上下文中多次渲染它。</target>
        </trans-unit>
        <trans-unit id="3b7c2b14858900752e7f2ec09ad28d32ec131ad8" translate="yes" xml:space="preserve">
          <source>Once you have configured your installation, run &lt;code&gt;manage.py migrate&lt;/code&gt; to install the single database table that stores session data.</source>
          <target state="translated">配置完安装后，请运行 &lt;code&gt;manage.py migrate&lt;/code&gt; 以安装用于存储会话数据的单个数据库表。</target>
        </trans-unit>
        <trans-unit id="4e3f8d55fa3db6648c5321fd5704f17bc2706d5f" translate="yes" xml:space="preserve">
          <source>Once you have configured your loggers, handlers, filters and formatters, you need to place logging calls into your code. Using the logging framework works like this:</source>
          <target state="translated">一旦您配置了您的记录器、处理程序、过滤器和格式化程序,您就需要将记录调用放入您的代码中。使用日志框架的工作原理是这样的。</target>
        </trans-unit>
        <trans-unit id="06625db7449c235ed03be7a56ab284c2fd23316a" translate="yes" xml:space="preserve">
          <source>Once you have defined your models, you need to tell Django you&amp;rsquo;re going to &lt;em&gt;use&lt;/em&gt; those models. Do this by editing your settings file and changing the &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting to add the name of the module that contains your &lt;code&gt;models.py&lt;/code&gt;.</source>
          <target state="translated">定义模型后，您需要告诉Django您将&lt;em&gt;使用&lt;/em&gt;这些模型。为此，请编辑设置文件并更改&lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置，以添加包含您的 &lt;code&gt;models.py&lt;/code&gt; 的模块的名称。</target>
        </trans-unit>
        <trans-unit id="b7449018ba0036e62aa7a8073bea808f1634e08d" translate="yes" xml:space="preserve">
          <source>Once you have established the many-to-many relationships, you can issue queries. Just as with normal many-to-many relationships, you can query using the attributes of the many-to-many-related model:</source>
          <target state="translated">一旦建立了多对多关系,就可以发出查询。就像普通的多对多关系一样,你可以使用多对多相关模型的属性进行查询。</target>
        </trans-unit>
        <trans-unit id="767d3c1c5b235cde245b661bd7ecf4af97258d00" translate="yes" xml:space="preserve">
          <source>Once you have your new migration files, you should apply them to your database to make sure they work as expected:</source>
          <target state="translated">一旦你有了新的迁移文件,你应该将它们应用到你的数据库中,以确保它们按照预期的方式工作。</target>
        </trans-unit>
        <trans-unit id="31d824ef7fe4e79e96012a6f5d6b173e1c8aa4d9" translate="yes" xml:space="preserve">
          <source>Once you turn autocommit off, you get the default behavior of your database adapter, and Django won&amp;rsquo;t help you. Although that behavior is specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 249&lt;/strong&gt;&lt;/a&gt;, implementations of adapters aren&amp;rsquo;t always consistent with one another. Review the documentation of the adapter you&amp;rsquo;re using carefully.</source>
          <target state="translated">关闭自动提交功能后，您将获得数据库适配器的默认行为，而Django将无法为您提供帮助。尽管在&lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 249中&lt;/strong&gt;&lt;/a&gt;指定了该行为，但是适配器的实现并不总是彼此一致的。仔细阅读所用适配器的文档。</target>
        </trans-unit>
        <trans-unit id="c2aa97694ea5a295cf72f827c19c4c4b345fc129" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;re done with the tutorial, you can look through the rest of &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/index/&quot;&gt;Django&amp;rsquo;s documentation on contributing&lt;/a&gt;. It contains lots of great information and is a must read for anyone who&amp;rsquo;d like to become a regular contributor to Django. If you&amp;rsquo;ve got questions, it&amp;rsquo;s probably got the answers.</source>
          <target state="translated">学习完本教程后，您可以浏览&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/index/&quot;&gt;Django的&lt;/a&gt;其余文档中有关tribution的内容。它包含许多重要信息，对于任何想成为Django定期撰稿人的人来说都是必读的。如果您有任何疑问，可能会找到答案。</target>
        </trans-unit>
        <trans-unit id="94bfb4f8d2f6bac07ddde9a443c7b4ad253d96dc" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;re in a transaction, you can choose either to apply the changes you&amp;rsquo;ve performed until this point with &lt;a href=&quot;#django.db.transaction.commit&quot;&gt;&lt;code&gt;commit()&lt;/code&gt;&lt;/a&gt;, or to cancel them with &lt;a href=&quot;#django.db.transaction.rollback&quot;&gt;&lt;code&gt;rollback()&lt;/code&gt;&lt;/a&gt;. These functions are defined in &lt;a href=&quot;#module-django.db.transaction&quot;&gt;&lt;code&gt;django.db.transaction&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">进行事务后，您可以选择使用&lt;a href=&quot;#django.db.transaction.commit&quot;&gt; &lt;code&gt;commit()&lt;/code&gt; &lt;/a&gt;来应用到目前为止所做的更改，或者使用&lt;a href=&quot;#django.db.transaction.rollback&quot;&gt; &lt;code&gt;rollback()&lt;/code&gt; &lt;/a&gt;来取消更改。这些函数在&lt;a href=&quot;#module-django.db.transaction&quot;&gt; &lt;code&gt;django.db.transaction&lt;/code&gt; &lt;/a&gt;中定义。</target>
        </trans-unit>
        <trans-unit id="6fc30a8ed1ee54ee2a8ad8fe75695abc03a12eee" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;re in the shell, explore the &lt;a href=&quot;../topics/db/queries&quot;&gt;database API&lt;/a&gt;:</source>
          <target state="translated">进入Shell后，探索&lt;a href=&quot;../topics/db/queries&quot;&gt;数据库API&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="b2d2e5917827940324544b1fdd9370ee3bee88f3" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;re ready, it is time to &lt;a href=&quot;../topics/install&quot;&gt;install the new Django version&lt;/a&gt;. If you are using &lt;a href=&quot;https://virtualenv.pypa.io/&quot;&gt;virtualenv&lt;/a&gt; and it is a major upgrade, you might want to set up a new environment with all the dependencies first.</source>
          <target state="translated">准备就绪后，就该&lt;a href=&quot;../topics/install&quot;&gt;安装新的Django版本了&lt;/a&gt;。如果您使用的是&lt;a href=&quot;https://virtualenv.pypa.io/&quot;&gt;virtualenv&lt;/a&gt;，并且是主要升级，则可能需要先设置所有依赖项的新环境。</target>
        </trans-unit>
        <trans-unit id="3601b6f980a5ed721dd3f6813d175eff6425690c" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve cleaned up your models, name the file &lt;code&gt;models.py&lt;/code&gt; and put it in the Python package that holds your app. Then add the app to your &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">清理完模型后，将文件命名为 &lt;code&gt;models.py&lt;/code&gt; ，并将其放入保存应用程序的Python包中。然后将应用添加到您的&lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置中。</target>
        </trans-unit>
        <trans-unit id="dddb377d8f9821df9e564ad3cdd2743cd7bb459c" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve created a &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; instance with a set of data and validated it, you can access the clean data via its &lt;code&gt;cleaned_data&lt;/code&gt; attribute:</source>
          <target state="translated">创建具有一组数据的&lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;实例并对其进行验证后，就可以通过其 &lt;code&gt;cleaned_data&lt;/code&gt; 属性访问干净数据：</target>
        </trans-unit>
        <trans-unit id="c7fd70ea6a4e1deee0b3f0def90a2d54bbf639bb" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve created a fixture and placed it in a &lt;code&gt;fixtures&lt;/code&gt; directory in one of your &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;, you can use it in your unit tests by specifying a &lt;code&gt;fixtures&lt;/code&gt; class attribute on your &lt;a href=&quot;#django.test.TestCase&quot;&gt;&lt;code&gt;django.test.TestCase&lt;/code&gt;&lt;/a&gt; subclass:</source>
          <target state="translated">创建固定装置并将其放置在&lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;之一的 &lt;code&gt;fixtures&lt;/code&gt; 目录中后，可以通过在&lt;a href=&quot;#django.test.TestCase&quot;&gt; &lt;code&gt;django.test.TestCase&lt;/code&gt; &lt;/a&gt;子类上指定 &lt;code&gt;fixtures&lt;/code&gt; 类属性，在单元测试中使用它：</target>
        </trans-unit>
        <trans-unit id="b490d3d98321be447b59796b137ee29f847904c0" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve created your &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; subclass, you might consider overriding a few standard methods, depending on your field&amp;rsquo;s behavior. The list of methods below is in approximately decreasing order of importance, so start from the top.</source>
          <target state="translated">创建&lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;子类后，您可能会考虑根据字段的行为重写一些标准方法。下面的方法列表按照重要性从高到低的顺序排列，因此从顶部开始。</target>
        </trans-unit>
        <trans-unit id="197b7b0e6149f4e2e6712d214786714045eb3c1f" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve created your &lt;a href=&quot;models&quot;&gt;data models&lt;/a&gt;, Django automatically gives you a database-abstraction API that lets you create, retrieve, update and delete objects. This document explains how to use this API. Refer to the &lt;a href=&quot;../../ref/models/index&quot;&gt;data model reference&lt;/a&gt; for full details of all the various model lookup options.</source>
          <target state="translated">创建&lt;a href=&quot;models&quot;&gt;数据模型后&lt;/a&gt;，Django会自动为您提供一个数据库抽象API，该API可让您创建，检索，更新和删除对象。本文档说明了如何使用此API。有关所有各种模型查找选项的完整详细信息，请&lt;a href=&quot;../../ref/models/index&quot;&gt;参考数据模型参考&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="88aa93333b5daf9d68ee1cfd8a3f1aa27dcc950e" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve created your &lt;code&gt;DataSource&lt;/code&gt;, you can find out how many layers of data it contains by accessing the &lt;a href=&quot;#django.contrib.gis.gdal.DataSource.layer_count&quot;&gt;&lt;code&gt;layer_count&lt;/code&gt;&lt;/a&gt; property, or (equivalently) by using the &lt;code&gt;len()&lt;/code&gt; function. For information on accessing the layers of data themselves, see the next section:</source>
          <target state="translated">一旦创建了 &lt;code&gt;DataSource&lt;/code&gt; ，您就可以通过访问&lt;a href=&quot;#django.contrib.gis.gdal.DataSource.layer_count&quot;&gt; &lt;code&gt;layer_count&lt;/code&gt; &lt;/a&gt;属性或（等效地）使用 &lt;code&gt;len()&lt;/code&gt; 函数来找出数据包含多少层数据。有关访问数据本身的信息，请参阅下一节：</target>
        </trans-unit>
        <trans-unit id="703ec67080b97801ea35faae3735f4dec7ffed77" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve done that, rows will be given &lt;code&gt;&quot;error&quot;&lt;/code&gt; and/or &lt;code&gt;&quot;required&quot;&lt;/code&gt; classes, as needed. The HTML will look something like:</source>
          <target state="translated">完成此操作后，将根据需要为行赋予 &lt;code&gt;&quot;error&quot;&lt;/code&gt; 和/或 &lt;code&gt;&quot;required&quot;&lt;/code&gt; 类。HTML将类似于：</target>
        </trans-unit>
        <trans-unit id="dff17ab7c2df9ca6a63551eb8b689e7637d33a02" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve done the above, that action will no longer be available site-wide.</source>
          <target state="translated">完成上述操作后，该操作将不再适用于整个网站。</target>
        </trans-unit>
        <trans-unit id="fbbfd787ddca57ffde3e7f85fbc478dfaccd6e48" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve got Django set up, you&amp;rsquo;ll follow this general process to integrate with an existing database.</source>
          <target state="translated">设置好Django之后，您将按照以下一般过程与现有数据库集成。</target>
        </trans-unit>
        <trans-unit id="2f5c9fbb1a2d3eba9e116b1f222d33cd90b8f048" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve got mod_wsgi installed and activated, edit your Apache server&amp;rsquo;s &lt;a href=&quot;https://wiki.apache.org/httpd/DistrosDefaultLayout&quot;&gt;httpd.conf&lt;/a&gt; file and add the following. If you are using a version of Apache older than 2.4, replace &lt;code&gt;Require all granted&lt;/code&gt; with &lt;code&gt;Allow from all&lt;/code&gt; and also add the line &lt;code&gt;Order deny,allow&lt;/code&gt; above it.</source>
          <target state="translated">安装并激活mod_wsgi后，请编辑Apache服务器的&lt;a href=&quot;https://wiki.apache.org/httpd/DistrosDefaultLayout&quot;&gt;httpd.conf&lt;/a&gt;文件并添加以下内容。如果您使用的是Apache版本比2.4更老，更换 &lt;code&gt;Require all granted&lt;/code&gt; 与 &lt;code&gt;Allow from all&lt;/code&gt; 并添加一行 &lt;code&gt;Order deny,allow&lt;/code&gt; 它上面。</target>
        </trans-unit>
        <trans-unit id="7ea2962dc3da1b2a4e7f20b94682599e9793c872" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve looked through some of that information, you&amp;rsquo;ll be ready to go out and find a ticket of your own to write a patch for. Pay special attention to tickets with the &amp;ldquo;easy pickings&amp;rdquo; criterion. These tickets are often much simpler in nature and are great for first time contributors. Once you&amp;rsquo;re familiar with contributing to Django, you can move on to writing patches for more difficult and complicated tickets.</source>
          <target state="translated">浏览了其中的一些信息之后，您就可以准备出去寻找自己的票来为其打补丁。要特别注意具有&amp;ldquo;轻松领取&amp;rdquo;标准的门票。这些票证本质上通常要简单得多，对于初次投稿的人来说非常有用。一旦熟悉了对Django的贡献，就可以继续编写补丁，以获取更困难和更复杂的票证。</target>
        </trans-unit>
        <trans-unit id="b1583459c98b69257fec18665dd137de13c329bb" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve prepared your translations &amp;ndash; or, if you want to use the translations that come with Django &amp;ndash; you&amp;rsquo;ll need to activate translation for your app.</source>
          <target state="translated">准备好翻译后-或者，如果您想使用Django随附的翻译，则需要为您的应用激活翻译。</target>
        </trans-unit>
        <trans-unit id="3ad0717e6526c6287ba99f236bd12fe3752678e2" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve set up HTTPS, enable the following settings.</source>
          <target state="translated">设置HTTPS后，请启用以下设置。</target>
        </trans-unit>
        <trans-unit id="433e15e0611bc8ef3ad131e1aaf3db8eb32d5b0a" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve squashed a migration, you should not then re-squash that squashed migration until you have fully transitioned it to a normal migration.</source>
          <target state="translated">压缩迁移后，在完全将其转换为正常迁移之前，您不应该再重新压缩该压缩的迁移。</target>
        </trans-unit>
        <trans-unit id="5cdecad320333138fd82d8195736190509b2a0ed" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve squashed your migration, you should then commit it alongside the migrations it replaces and distribute this change to all running instances of your application, making sure that they run &lt;code&gt;migrate&lt;/code&gt; to store the change in their database.</source>
          <target state="translated">压缩迁移后，应将其与替换的迁移一起提交，并将此更改分发到应用程序的所有正在运行的实例，确保它们进行 &lt;code&gt;migrate&lt;/code&gt; 以将更改存储在数据库中。</target>
        </trans-unit>
        <trans-unit id="1349fa263311d97d35f37c2c1a842df10861817d" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve verified that your patch and your test are working correctly, it&amp;rsquo;s a good idea to run the entire Django test suite to verify that your change hasn&amp;rsquo;t introduced any bugs into other areas of Django. While successfully passing the entire test suite doesn&amp;rsquo;t guarantee your code is bug free, it does help identify many bugs and regressions that might otherwise go unnoticed.</source>
          <target state="translated">验证补丁和测试正常工作后，最好运行整个Django测试套件，以确保所做的更改没有在Django的其他区域引入任何错误。虽然成功通过了整个测试套件并不能保证您的代码没有错误，但确实可以帮助您识别许多可能不被注意的错误和回归。</target>
        </trans-unit>
        <trans-unit id="9cfdfebb993364de477eb12a7abb4fc259f77346" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve written tests, run them using the &lt;a href=&quot;../../ref/django-admin#django-admin-test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; command of your project&amp;rsquo;s &lt;code&gt;manage.py&lt;/code&gt; utility:</source>
          <target state="translated">编写测试后，请使用项目的 &lt;code&gt;manage.py&lt;/code&gt; 实用程序的&lt;a href=&quot;../../ref/django-admin#django-admin-test&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt;命令运行它们：</target>
        </trans-unit>
        <trans-unit id="854eafd257c13871740ebcffeae796127fc7faaf" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve written your filter definition, you need to register it with your &lt;code&gt;Library&lt;/code&gt; instance, to make it available to Django&amp;rsquo;s template language:</source>
          <target state="translated">编写过滤器定义后，您需要在 &lt;code&gt;Library&lt;/code&gt; 实例中注册它，以使其可用于Django的模板语言：</target>
        </trans-unit>
        <trans-unit id="1dc74ddc71ef956145231d8e56d23a70390692ec" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve written your model admin definitions, they can be registered with any &lt;code&gt;Admin&lt;/code&gt; instance:</source>
          <target state="translated">编写模型管理员定义后，即可将其注册到任何 &lt;code&gt;Admin&lt;/code&gt; 实例中：</target>
        </trans-unit>
        <trans-unit id="d5f3273b9d64e8fc4a352c674738831de3f6ba4d" translate="yes" xml:space="preserve">
          <source>Once your cache is configured, you&amp;rsquo;ve got two choices for how to store data in the cache:</source>
          <target state="translated">一旦配置了缓存，就可以在缓存中存储数据的方式有两种：</target>
        </trans-unit>
        <trans-unit id="1e94ea20a9162ba0f7f32f56c3b82565f3d3e459" translate="yes" xml:space="preserve">
          <source>Once your models are defined, Django can automatically create a professional, production ready &lt;a href=&quot;../ref/contrib/admin/index&quot;&gt;administrative interface&lt;/a&gt; &amp;ndash; a website that lets authenticated users add, change and delete objects. The only step required is to register your model in the admin site:</source>
          <target state="translated">定义模型后，Django可以自动创建专业的，可投入生产的&lt;a href=&quot;../ref/contrib/admin/index&quot;&gt;管理界面&lt;/a&gt; -一个允许经过身份验证的用户添加，更改和删除对象的网站。唯一需要的步骤是在管理站点中注册模型：</target>
        </trans-unit>
        <trans-unit id="5381ea3412869876f5aedc5f6a12e33628d362ab" translate="yes" xml:space="preserve">
          <source>One bookmarklet is available from the &lt;code&gt;admindocs&lt;/code&gt; page:</source>
          <target state="translated">可以从 &lt;code&gt;admindocs&lt;/code&gt; 页面获得一个小书签：</target>
        </trans-unit>
        <trans-unit id="3b8655d015723e3ffff545c6f5985e5282ef053b" translate="yes" xml:space="preserve">
          <source>One class of attacks can be prevented by always serving user uploaded content from a distinct top-level or second-level domain. This prevents any exploit blocked by &lt;a href=&quot;https://en.wikipedia.org/wiki/Same-origin_policy&quot;&gt;same-origin policy&lt;/a&gt; protections such as cross site scripting. For example, if your site runs on &lt;code&gt;example.com&lt;/code&gt;, you would want to serve uploaded content (the &lt;a href=&quot;../ref/settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt; setting) from something like &lt;code&gt;usercontent-example.com&lt;/code&gt;. It&amp;rsquo;s &lt;em&gt;not&lt;/em&gt; sufficient to serve content from a subdomain like &lt;code&gt;usercontent.example.com&lt;/code&gt;.</source>
          <target state="translated">通过始终为来自不同的顶级域或第二级域的用户上载内容提供服务，可以防止一类攻击。这样可以防止任何由&lt;a href=&quot;https://en.wikipedia.org/wiki/Same-origin_policy&quot;&gt;同源策略&lt;/a&gt;保护（例如跨站点脚本）阻止的漏洞利用。例如，如果您的网站在 &lt;code&gt;example.com&lt;/code&gt; 上运行，则需要从诸如 &lt;code&gt;usercontent-example.com&lt;/code&gt; 之类的网站上载上载的内容（&lt;a href=&quot;../ref/settings#std:setting-MEDIA_URL&quot;&gt; &lt;code&gt;MEDIA_URL&lt;/code&gt; &lt;/a&gt;设置）。这是&lt;em&gt;不是&lt;/em&gt;足以从像一个子域提供内容 &lt;code&gt;usercontent.example.com&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d35da2cb46849f2d42b8f4c677498c5a2d6f7139" translate="yes" xml:space="preserve">
          <source>One common reason for overriding these methods is to augment the context data that is provided to the template that renders the view. In the following example, the change view is overridden so that the rendered template is provided some extra mapping data that would not otherwise be available:</source>
          <target state="translated">覆盖这些方法的一个常见原因是增加提供给渲染视图的模板的上下文数据。在下面的例子中,更改视图被覆盖,以便为渲染模板提供一些额外的映射数据,否则这些数据将不可用。</target>
        </trans-unit>
        <trans-unit id="6f73d920aa2ddf0ff594a6ef8ce772d924c15bd9" translate="yes" xml:space="preserve">
          <source>One difference is in the attribute naming: The model that defines the &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; uses the attribute name of that field itself, whereas the &amp;ldquo;reverse&amp;rdquo; model uses the lowercased model name of the original model, plus &lt;code&gt;'_set'&lt;/code&gt; (just like reverse one-to-many relationships).</source>
          <target state="translated">属性命名之间的区别是：定义&lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;的模型使用该字段本身的属性名称，而&amp;ldquo;反向&amp;rdquo;模型则使用原始模型的小写模型名称加上 &lt;code&gt;'_set'&lt;/code&gt; （就像反向一-许多关系）。</target>
        </trans-unit>
        <trans-unit id="52fbd495f92e2902784ac9baa74b04fcd17f36e9" translate="yes" xml:space="preserve">
          <source>One difference to note when using &lt;code&gt;prefetch_related&lt;/code&gt; is that objects created by a query can be shared between the different objects that they are related to i.e. a single Python model instance can appear at more than one point in the tree of objects that are returned. This will normally happen with foreign key relationships. Typically this behavior will not be a problem, and will in fact save both memory and CPU time.</source>
          <target state="translated">使用 &lt;code&gt;prefetch_related&lt;/code&gt; 时要注意的一个区别是，查询创建的对象可以在与它们相关的不同对象之间共享，即，单个Python模型实例可以出现在返回的对象树中的多个点上。这通常在外键关系中发生。通常，此行为不会有问题，并且实际上会节省内存和CPU时间。</target>
        </trans-unit>
        <trans-unit id="fcc69356192552c22d0ee8a7f4168cdb22150eb7" translate="yes" xml:space="preserve">
          <source>One excellent feature of Memcached is its ability to share a cache over multiple servers. This means you can run Memcached daemons on multiple machines, and the program will treat the group of machines as a &lt;em&gt;single&lt;/em&gt; cache, without the need to duplicate cache values on each machine. To take advantage of this feature, include all server addresses in &lt;a href=&quot;../ref/settings#std:setting-CACHES-LOCATION&quot;&gt;&lt;code&gt;LOCATION&lt;/code&gt;&lt;/a&gt;, either as a semicolon or comma delimited string, or as a list.</source>
          <target state="translated">Memcached的一项出色功能是能够在多个服务器上共享缓存。这意味着您可以在多台计算机上运行Memcached守护程序，并且该程序会将计算机组视为&lt;em&gt;单个&lt;/em&gt;缓存，而无需在每台计算机上重复缓存值。要利用此功能，请将所有服务器地址包括在&lt;a href=&quot;../ref/settings#std:setting-CACHES-LOCATION&quot;&gt; &lt;code&gt;LOCATION&lt;/code&gt; 中&lt;/a&gt;，以分号或逗号分隔的字符串或列表的形式。</target>
        </trans-unit>
        <trans-unit id="a0c4a4a0c4be81cbd7b437378f9e85751aa6b578" translate="yes" xml:space="preserve">
          <source>One finder is disabled by default: &lt;code&gt;django.contrib.staticfiles.finders.DefaultStorageFinder&lt;/code&gt;. If added to your &lt;a href=&quot;#std:setting-STATICFILES_FINDERS&quot;&gt;&lt;code&gt;STATICFILES_FINDERS&lt;/code&gt;&lt;/a&gt; setting, it will look for static files in the default file storage as defined by the &lt;a href=&quot;#std:setting-DEFAULT_FILE_STORAGE&quot;&gt;&lt;code&gt;DEFAULT_FILE_STORAGE&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">默认情况下，一个查找程序是禁用的： &lt;code&gt;django.contrib.staticfiles.finders.DefaultStorageFinder&lt;/code&gt; 。如果添加到您的&lt;a href=&quot;#std:setting-STATICFILES_FINDERS&quot;&gt; &lt;code&gt;STATICFILES_FINDERS&lt;/code&gt; &lt;/a&gt;设置中，它将在默认文件存储中查找由&lt;a href=&quot;#std:setting-DEFAULT_FILE_STORAGE&quot;&gt; &lt;code&gt;DEFAULT_FILE_STORAGE&lt;/code&gt; &lt;/a&gt;设置定义的静态文件。</target>
        </trans-unit>
        <trans-unit id="8796608c8ed158d52b85b7539105298913a9d7eb" translate="yes" xml:space="preserve">
          <source>One limitation of custom user models is that installing a custom user model will break any proxy model extending &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt;. Proxy models must be based on a concrete base class; by defining a custom user model, you remove the ability of Django to reliably identify the base class.</source>
          <target state="translated">定制用户模型的一个限制是，安装定制用户模型将破坏扩展&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; 的&lt;/a&gt;任何代理模型。代理模型必须基于具体的基类。通过定义自定义用户模型，可以消除Django可靠地标识基类的功能。</target>
        </trans-unit>
        <trans-unit id="8252f91a0142e0f1f7810c559eb6eeff09a7e40a" translate="yes" xml:space="preserve">
          <source>One of the main features of debug mode is the display of detailed error pages. If your app raises an exception when &lt;a href=&quot;#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;, Django will display a detailed traceback, including a lot of metadata about your environment, such as all the currently defined Django settings (from &lt;code&gt;settings.py&lt;/code&gt;).</source>
          <target state="translated">调试模式的主要功能之一是显示详细的错误页面。如果当&lt;a href=&quot;#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;True&lt;/code&gt; 时您的应用引发异常，则Django将显示详细的回溯，包括有关您的环境的许多元数据，例如所有当前定义的Django设置（来自 &lt;code&gt;settings.py&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a7af099253a75c3b7896229949ed8b4d0dfb3dfb" translate="yes" xml:space="preserve">
          <source>One of the most powerful parts of Django is the automatic admin interface. It reads metadata from your models to provide a quick, model-centric interface where trusted users can manage content on your site. The admin&amp;rsquo;s recommended use is limited to an organization&amp;rsquo;s internal management tool. It&amp;rsquo;s not intended for building your entire front end around.</source>
          <target state="translated">Django最强大的部分之一是自动管理界面。它从您的模型中读取元数据，以提供一个快速的，以模型为中心的界面，受信任的用户可以在其中管理您网站上的内容。管理员的建议用法仅限于组织的内部管理工具。它并非旨在构建您的整个前端。</target>
        </trans-unit>
        <trans-unit id="325b632f60776937fe0278c6d5b74af921fc4d83" translate="yes" xml:space="preserve">
          <source>One of the topmost, after &lt;code&gt;SessionMiddleware&lt;/code&gt; (uses session data) and &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; (modifies &lt;code&gt;Vary&lt;/code&gt; header).</source>
          <target state="translated">最高的之一，仅次于 &lt;code&gt;SessionMiddleware&lt;/code&gt; （使用会话数据）和 &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; （修改 &lt;code&gt;Vary&lt;/code&gt; 标头）。</target>
        </trans-unit>
        <trans-unit id="2b4130a908f3b1b3021bf422aaa436600226ba47" translate="yes" xml:space="preserve">
          <source>One place Django uses &lt;code&gt;get_absolute_url()&lt;/code&gt; is in the admin app. If an object defines this method, the object-editing page will have a &amp;ldquo;View on site&amp;rdquo; link that will jump you directly to the object&amp;rsquo;s public view, as given by &lt;code&gt;get_absolute_url()&lt;/code&gt;.</source>
          <target state="translated">Django 在管理应用程序中使用 &lt;code&gt;get_absolute_url()&lt;/code&gt; 的一个地方。如果对象定义了此方法，则对象编辑页面将具有&amp;ldquo;站点上查看&amp;rdquo;链接，该链接将使您直接跳至该对象的公共视图，如 &lt;code&gt;get_absolute_url()&lt;/code&gt; 所示。</target>
        </trans-unit>
        <trans-unit id="3f1cb2de20a0dd60228e6a239c6ba2218e20e8d9" translate="yes" xml:space="preserve">
          <source>One positional argument is required: the class to which the model will be related. This works exactly the same as it does for &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, including all the options regarding &lt;a href=&quot;#recursive-relationships&quot;&gt;recursive&lt;/a&gt; and &lt;a href=&quot;#lazy-relationships&quot;&gt;lazy&lt;/a&gt; relationships.</source>
          <target state="translated">需要一个位置参数：与模型相关的类。它的工作方式与&lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;完全相同，包括有关&lt;a href=&quot;#recursive-relationships&quot;&gt;递归&lt;/a&gt;和&lt;a href=&quot;#lazy-relationships&quot;&gt;惰性&lt;/a&gt;关系的所有选项。</target>
        </trans-unit>
        <trans-unit id="fc925b117affa0ade4bdd69f5aabf69f1242debe" translate="yes" xml:space="preserve">
          <source>One possible use of &lt;a href=&quot;#django.urls.resolve&quot;&gt;&lt;code&gt;resolve()&lt;/code&gt;&lt;/a&gt; would be to test whether a view would raise a &lt;code&gt;Http404&lt;/code&gt; error before redirecting to it:</source>
          <target state="translated">&lt;a href=&quot;#django.urls.resolve&quot;&gt; &lt;code&gt;resolve()&lt;/code&gt; 的&lt;/a&gt;一种可能用法是在重定向到视图之前测试视图是否会引发 &lt;code&gt;Http404&lt;/code&gt; 错误：</target>
        </trans-unit>
        <trans-unit id="17affb526021724b56b79a75409ec922fe1ee514" translate="yes" xml:space="preserve">
          <source>One small problem, though. It takes a lot of screen space to display all the fields for entering related &lt;code&gt;Choice&lt;/code&gt; objects. For that reason, Django offers a tabular way of displaying inline related objects. To use it, change the &lt;code&gt;ChoiceInline&lt;/code&gt; declaration to read:</source>
          <target state="translated">不过，这是一个小问题。显示用于输入相关 &lt;code&gt;Choice&lt;/code&gt; 对象的所有字段需要大量屏幕空间。因此，Django提供了一种表格式的方式来显示与内联相关的对象。要使用它，请将 &lt;code&gt;ChoiceInline&lt;/code&gt; 声明更改为：</target>
        </trans-unit>
        <trans-unit id="463e554d2cf1d72ee789f287bd7cfb00f6a89d54" translate="yes" xml:space="preserve">
          <source>One solution is to disable server-side cursors for a connection in &lt;a href=&quot;settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt; by setting &lt;a href=&quot;settings#std:setting-DATABASE-DISABLE_SERVER_SIDE_CURSORS&quot;&gt;&lt;code&gt;DISABLE_SERVER_SIDE_CURSORS&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">一种解决方案是通过将&lt;a href=&quot;settings#std:setting-DATABASE-DISABLE_SERVER_SIDE_CURSORS&quot;&gt; &lt;code&gt;DISABLE_SERVER_SIDE_CURSORS&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; 来禁用&lt;a href=&quot;settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt;连接的服务器端游标。</target>
        </trans-unit>
        <trans-unit id="92c378607313029c98f29e172485bb93294cfa11" translate="yes" xml:space="preserve">
          <source>One thing is left to do. In an RSS feed, each &lt;code&gt;&amp;lt;item&amp;gt;&lt;/code&gt; has a &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt;. We need to tell the framework what data to put into those elements.</source>
          <target state="translated">一件事要做。在RSS提要中，每个 &lt;code&gt;&amp;lt;item&amp;gt;&lt;/code&gt; 都有一个 &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt; 。我们需要告诉框架哪些数据要放入这些元素中。</target>
        </trans-unit>
        <trans-unit id="64761a4b2513c0fea467c008774b2e8d461a2beb" translate="yes" xml:space="preserve">
          <source>One typical workflow in creating Django apps is to create models and get the admin sites up and running as fast as possible, so your staff (or clients) can start populating data. Then, develop the way data is presented to the public.</source>
          <target state="translated">创建Django应用的一个典型的工作流程是创建模型,并尽快让管理站点启动并运行,这样你的员工(或客户)就可以开始填充数据。然后,开发向公众展示数据的方式。</target>
        </trans-unit>
        <trans-unit id="62b2c3ff1937b4b7f9fd3bcb172889cfa14560c7" translate="yes" xml:space="preserve">
          <source>One useful way to call &lt;a href=&quot;#django.contrib.sitemaps.ping_google&quot;&gt;&lt;code&gt;ping_google()&lt;/code&gt;&lt;/a&gt; is from a model&amp;rsquo;s &lt;code&gt;save()&lt;/code&gt; method:</source>
          <target state="translated">调用&lt;a href=&quot;#django.contrib.sitemaps.ping_google&quot;&gt; &lt;code&gt;ping_google()&lt;/code&gt; 的&lt;/a&gt;一种有用方法是通过模型的 &lt;code&gt;save()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="17eb63729cb4ca1e9175bfce2cb9b9d88cdf1052" translate="yes" xml:space="preserve">
          <source>One way to do this is to combine &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt;, so that the queryset for the paginated list of books can hang off the publisher found as the single object. In order to do this, we need to have two different querysets:</source>
          <target state="translated">一种方法是将&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt;与&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt; &lt;code&gt;SingleObjectMixin&lt;/code&gt; &lt;/a&gt;结合使用，以便分页图书清单的查询集可以与作为单个对象的出版商联系起来。为此，我们需要有两个不同的查询集：</target>
        </trans-unit>
        <trans-unit id="41f303fa2fa76a8d5b84fa7acb2f90143da403df" translate="yes" xml:space="preserve">
          <source>One, you can make sure to run each untrusted variable through the &lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt;&lt;code&gt;escape&lt;/code&gt;&lt;/a&gt; filter (documented below), which converts potentially harmful HTML characters to unharmful ones. This was the default solution in Django for its first few years, but the problem is that it puts the onus on &lt;em&gt;you&lt;/em&gt;, the developer / template author, to ensure you&amp;rsquo;re escaping everything. It&amp;rsquo;s easy to forget to escape data.</source>
          <target state="translated">第一，您可以确保通过&lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt; &lt;code&gt;escape&lt;/code&gt; &lt;/a&gt;过滤器（如下所述）运行每个不受信任的变量，该转义过滤器会将潜在有害的HTML字符转换为有害的HTML字符。这是在Django的最初几年默认的解决方案，但问题是，它把责任推给&lt;em&gt;你&lt;/em&gt;，开发者/模板作者，以确保您逃避一切。很容易忘记转义数据。</target>
        </trans-unit>
        <trans-unit id="5e552a2e648dcc45b50e74d0e4c89fd9b2d22ab3" translate="yes" xml:space="preserve">
          <source>One-to-many relationships</source>
          <target state="translated">一对多的关系</target>
        </trans-unit>
        <trans-unit id="20ec6acfe79375c3d49a487621b6f11703727d27" translate="yes" xml:space="preserve">
          <source>One-to-one relationships</source>
          <target state="translated">一对一关系</target>
        </trans-unit>
        <trans-unit id="4b68ab7517c53fd87db0b3a6835784386aa78fb7" translate="yes" xml:space="preserve">
          <source>One-to-one relationships are very similar to many-to-one relationships. If you define a &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; on your model, instances of that model will have access to the related object via an attribute of the model.</source>
          <target state="translated">一对一关系与多对一关系非常相似。如果在模型上定义&lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt;，则该模型的实例将可以通过模型的属性访问相关对象。</target>
        </trans-unit>
        <trans-unit id="97b3481d82cdab92ba77fee20f5da98da43ecd1b" translate="yes" xml:space="preserve">
          <source>Only Python modules and packages are included in the package by default. To include additional files, we&amp;rsquo;ll need to create a &lt;code&gt;MANIFEST.in&lt;/code&gt; file. The setuptools docs referred to in the previous step discuss this file in more details. To include the templates, the &lt;code&gt;README.rst&lt;/code&gt; and our &lt;code&gt;LICENSE&lt;/code&gt; file, create a file &lt;code&gt;django-polls/MANIFEST.in&lt;/code&gt; with the following contents:</source>
          <target state="translated">默认情况下，软件包中仅包含Python模块和软件包。要包含其他文件，我们需要创建一个 &lt;code&gt;MANIFEST.in&lt;/code&gt; 文件。上一步中提到的setuptools文档更详细地讨论了该文件。要包括模板， &lt;code&gt;README.rst&lt;/code&gt; 和我们的 &lt;code&gt;LICENSE&lt;/code&gt; 文件，请创建一个文件 &lt;code&gt;django-polls/MANIFEST.in&lt;/code&gt; ，其内容如下：</target>
        </trans-unit>
        <trans-unit id="1fce148cd28a6d831801c9e33d3b8a3831a5e379" translate="yes" xml:space="preserve">
          <source>Only a few keys are required in the &lt;code&gt;ds_input&lt;/code&gt; dictionary to create a raster: &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, and &lt;code&gt;srid&lt;/code&gt;. All other parameters have default values (see the table below). The list of keys that can be passed in the &lt;code&gt;ds_input&lt;/code&gt; dictionary is closely related but not identical to the &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster&quot;&gt;&lt;code&gt;GDALRaster&lt;/code&gt;&lt;/a&gt; properties. Many of the parameters are mapped directly to those properties; the others are described below.</source>
          <target state="translated">&lt;code&gt;ds_input&lt;/code&gt; 字典中仅需要几个键即可创建栅格： &lt;code&gt;width&lt;/code&gt; ， &lt;code&gt;height&lt;/code&gt; 和 &lt;code&gt;srid&lt;/code&gt; 。所有其他参数均具有默认值（请参见下表）。可以在 &lt;code&gt;ds_input&lt;/code&gt; 词典中传递的键列表与&lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster&quot;&gt; &lt;code&gt;GDALRaster&lt;/code&gt; &lt;/a&gt;属性密切相关，但不完全相同。许多参数直接映射到那些属性。其他说明如下。</target>
        </trans-unit>
        <trans-unit id="e7d519722edd8f91aa9627c3bc9de76db3f17444" translate="yes" xml:space="preserve">
          <source>Only commutative operators can be used in exclusion constraints.</source>
          <target state="translated">只有换算符才能用于排除约束。</target>
        </trans-unit>
        <trans-unit id="118c204498e41611d1aa64a9174ae0deab8590fa" translate="yes" xml:space="preserve">
          <source>Only fields of the model are reloaded from the database. Other database-dependent values such as annotations aren&amp;rsquo;t reloaded. Any &lt;a href=&quot;../utils#django.utils.functional.cached_property&quot;&gt;&lt;code&gt;@cached_property&lt;/code&gt;&lt;/a&gt; attributes aren&amp;rsquo;t cleared either.</source>
          <target state="translated">仅从数据库中重新加载模型的字段。不会重新加载其他与数据库相关的值，例如注释。任何&lt;a href=&quot;../utils#django.utils.functional.cached_property&quot;&gt; &lt;code&gt;@cached_property&lt;/code&gt; &lt;/a&gt;属性也不会清除。</target>
        </trans-unit>
        <trans-unit id="81f771fd27be6e788932e7308fcda610d615c10d" translate="yes" xml:space="preserve">
          <source>Only languages listed in the &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt; setting can be selected. If you want to restrict the language selection to a subset of provided languages (because your application doesn&amp;rsquo;t provide all those languages), set &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt; to a list of languages. For example:</source>
          <target state="translated">只能选择&lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt; &lt;code&gt;LANGUAGES&lt;/code&gt; &lt;/a&gt;设置中列出的语言。如果要将语言选择限制为提供的语言的子集（因为您的应用程序不提供所有这些语言），请将&lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt; &lt;code&gt;LANGUAGES&lt;/code&gt; &lt;/a&gt;设置为语言列表。例如：</target>
        </trans-unit>
        <trans-unit id="598d1d19ae95d2cec14e6d3d02561fe81bd52fae" translate="yes" xml:space="preserve">
          <source>Only one more thing to do: we need to tell the admin that &lt;code&gt;Question&lt;/code&gt; objects have an admin interface. To do this, open the &lt;code&gt;polls/admin.py&lt;/code&gt; file, and edit it to look like this:</source>
          <target state="translated">只需要做一件事：我们需要告诉管理员 &lt;code&gt;Question&lt;/code&gt; 对象具有管理界面。为此，请打开 &lt;code&gt;polls/admin.py&lt;/code&gt; 文件，并将其编辑为如下所示：</target>
        </trans-unit>
        <trans-unit id="d187541e5c50bb85bbf53e7de2e2b853a43bb4df" translate="yes" xml:space="preserve">
          <source>Only set it to &lt;code&gt;False&lt;/code&gt; if you&amp;rsquo;re rendering non-HTML templates!</source>
          <target state="translated">仅在呈现非HTML模板时才将其设置为 &lt;code&gt;False&lt;/code&gt; ！</target>
        </trans-unit>
        <trans-unit id="02223d043024f670b97c33914336f2eb06bc17fd" translate="yes" xml:space="preserve">
          <source>Only space between &lt;em&gt;tags&lt;/em&gt; is removed &amp;ndash; not space between tags and text. In this example, the space around &lt;code&gt;Hello&lt;/code&gt; won&amp;rsquo;t be stripped:</source>
          <target state="translated">&lt;em&gt;标签&lt;/em&gt;之间只有空格，而标签和文本之间没有空格。在此示例中， &lt;code&gt;Hello&lt;/code&gt; 周围的空间不会被剥离：</target>
        </trans-unit>
        <trans-unit id="cf315a07b04a81601a60855f71141828daa89ad4" translate="yes" xml:space="preserve">
          <source>Only support for PostgreSQL is implemented.</source>
          <target state="translated">只实现了对PostgreSQL的支持。</target>
        </trans-unit>
        <trans-unit id="8a7ec474d6e2d23ebc63b6c63bb988c49dc019ef" translate="yes" xml:space="preserve">
          <source>Only supported for the &lt;code&gt;mysql&lt;/code&gt; backend (see the &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/charset-charsets.html&quot;&gt;MySQL manual&lt;/a&gt; for details).</source>
          <target state="translated">仅支持 &lt;code&gt;mysql&lt;/code&gt; 后端（有关详细信息，请参见&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/charset-charsets.html&quot;&gt;MySQL手册&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7c0d14d34ab8a7955c088997331af3fa6a9e7049" translate="yes" xml:space="preserve">
          <source>Only used in the definition of ManyToManyFields on self. Consider the following model:</source>
          <target state="translated">只用于对self上的ManyToManyFields的定义。考虑以下模型。</target>
        </trans-unit>
        <trans-unit id="4acf1510b1d98d5e3adcf9076d95b782cf93d327" translate="yes" xml:space="preserve">
          <source>Only used when a custom intermediary model is specified. Django will normally determine which fields of the intermediary model to use in order to establish a many-to-many relationship automatically. However, consider the following models:</source>
          <target state="translated">只有当指定了一个自定义的中介模型时才会使用,Django通常会决定使用中介模型的哪些字段来自动建立多对多的关系。Django通常会决定使用中介模型的哪些字段来自动建立多对多的关系。但是,考虑以下模型。</target>
        </trans-unit>
        <trans-unit id="9254969541b35d72fc959e9b7fe870bcb83c672e" translate="yes" xml:space="preserve">
          <source>Open Geospatial Consortium, Inc., &lt;a href=&quot;https://www.opengeospatial.org/standards/sfs&quot;&gt;OpenGIS Simple Feature Specification For SQL&lt;/a&gt;.</source>
          <target state="translated">Open Geospatial Consortium，Inc。，《&lt;a href=&quot;https://www.opengeospatial.org/standards/sfs&quot;&gt;SQL的OpenGIS简单功能规范》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="abacb099ec5118e6e55042c66b29d2709c4e6df5" translate="yes" xml:space="preserve">
          <source>Open or reopen the file (which also does &lt;code&gt;File.seek(0)&lt;/code&gt;). The &lt;code&gt;mode&lt;/code&gt; argument allows the same values as Python&amp;rsquo;s built-in &lt;a href=&quot;https://docs.python.org/3/library/functions.html#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">打开或重新打开文件（它也执行 &lt;code&gt;File.seek(0)&lt;/code&gt; ）。该 &lt;code&gt;mode&lt;/code&gt; 参数允许值相同Python的内置&lt;a href=&quot;https://docs.python.org/3/library/functions.html#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3832cd1bf27026789b46ef8c2cbece9d54caa9de" translate="yes" xml:space="preserve">
          <source>Open transactions have a performance cost for your database server. To minimize this overhead, keep your transactions as short as possible. This is especially important if you&amp;rsquo;re using &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; in long-running processes, outside of Django&amp;rsquo;s request / response cycle.</source>
          <target state="translated">对于您的数据库服务器，未清事务具有性能成本。为了最大程度地减少这种开销，请使您的事务越短越好。如果您在Django的请求/响应周期之外的长时间运行的进程中使用&lt;a href=&quot;#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt;，这一点尤其重要。</target>
        </trans-unit>
        <trans-unit id="32793e991ad0f2475e18136d291c51ab1d339516" translate="yes" xml:space="preserve">
          <source>Open your settings file (&lt;code&gt;mysite/settings.py&lt;/code&gt;, remember) and add a &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt; option in the &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="translated">打开设置文件（ &lt;code&gt;mysite/settings.py&lt;/code&gt; ，请记住），并在&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;设置中添加&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-DIRS&quot;&gt; &lt;code&gt;DIRS&lt;/code&gt; &lt;/a&gt;选项：</target>
        </trans-unit>
        <trans-unit id="6434fe05c72675fd05c47cdbb933de7e31125e90" translate="yes" xml:space="preserve">
          <source>OpenGIS Consortium, Inc., &lt;a href=&quot;https://www.opengeospatial.org/standards/sfs&quot;&gt;Simple Feature Specification For SQL&lt;/a&gt;.</source>
          <target state="translated">OpenGIS Consortium，Inc.，&lt;a href=&quot;https://www.opengeospatial.org/standards/sfs&quot;&gt;SQL的简单功能规范&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9badfbd517d8be4261428821d0d24138f988f1ee" translate="yes" xml:space="preserve">
          <source>Opens or reopens the file associated with this instance in the specified &lt;code&gt;mode&lt;/code&gt;. Unlike the standard Python &lt;code&gt;open()&lt;/code&gt; method, it doesn&amp;rsquo;t return a file descriptor.</source>
          <target state="translated">以指定 &lt;code&gt;mode&lt;/code&gt; 打开或重新打开与此实例关联的文件。与标准的Python &lt;code&gt;open()&lt;/code&gt; 方法不同，它不返回文件描述符。</target>
        </trans-unit>
        <trans-unit id="0323b5e451ddf487ae0f9edb7081ee29301ba290" translate="yes" xml:space="preserve">
          <source>Opens the file given by &lt;code&gt;name&lt;/code&gt;. Note that although the returned file is guaranteed to be a &lt;code&gt;File&lt;/code&gt; object, it might actually be some subclass. In the case of remote file storage this means that reading/writing could be quite slow, so be warned.</source>
          <target state="translated">打开 &lt;code&gt;name&lt;/code&gt; 为的文件。请注意，尽管保证返回的文件是 &lt;code&gt;File&lt;/code&gt; 对象，但实际上它可能是某些子类。在远程文件存储的情况下，这意味着读/写可能会很慢，因此请注意。</target>
        </trans-unit>
        <trans-unit id="103728613a9cc06c0578fcde7fc71050f537ea45" translate="yes" xml:space="preserve">
          <source>Opera 10.5+</source>
          <target state="translated">Opera 10.5以上</target>
        </trans-unit>
        <trans-unit id="a1fdaa6b2a846c8fcf18d414bf8c61db610eda6a" translate="yes" xml:space="preserve">
          <source>Operations</source>
          <target state="translated">Operations</target>
        </trans-unit>
        <trans-unit id="03c6a5370c606a7007cc455f9ad4f55be771bfe8" translate="yes" xml:space="preserve">
          <source>Operations have a relatively simple API, and they&amp;rsquo;re designed so that you can easily write your own to supplement the built-in Django ones. The basic structure of an &lt;code&gt;Operation&lt;/code&gt; looks like this:</source>
          <target state="translated">操作具有一个相对简单的API，并且对它们进行了设计，以便您可以轻松编写自己的API来补充内置的Django。一个基本结构 &lt;code&gt;Operation&lt;/code&gt; 是这样的：</target>
        </trans-unit>
        <trans-unit id="0242933f1377922941730d3a9a935c73e4996c91" translate="yes" xml:space="preserve">
          <source>Operators that return new &lt;code&gt;QuerySet&lt;/code&gt;s</source>
          <target state="translated">返回新 &lt;code&gt;QuerySet&lt;/code&gt; 的运算符</target>
        </trans-unit>
        <trans-unit id="900a4c57a6781dc8aa8c7a72e161410e12278326" translate="yes" xml:space="preserve">
          <source>Optimizing PostgreSQL&amp;rsquo;s configuration</source>
          <target state="translated">优化PostgreSQL的配置</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="475f499a740fe5799b1c67d8e4e26cb243d985a8" translate="yes" xml:space="preserve">
          <source>Optional (&lt;a href=&quot;../models/fields#django.db.models.Field.blank&quot;&gt;&lt;code&gt;blank=True&lt;/code&gt;&lt;/a&gt;). 150 characters or fewer.</source>
          <target state="translated">可选（&lt;a href=&quot;../models/fields#django.db.models.Field.blank&quot;&gt; &lt;code&gt;blank=True&lt;/code&gt; &lt;/a&gt;）。150个字符以内。</target>
        </trans-unit>
        <trans-unit id="e66aff119da5b74c8ec06d905b22607e760e1684" translate="yes" xml:space="preserve">
          <source>Optional (&lt;a href=&quot;../models/fields#django.db.models.Field.blank&quot;&gt;&lt;code&gt;blank=True&lt;/code&gt;&lt;/a&gt;). 30 characters or fewer.</source>
          <target state="translated">可选（&lt;a href=&quot;../models/fields#django.db.models.Field.blank&quot;&gt; &lt;code&gt;blank=True&lt;/code&gt; &lt;/a&gt;）。少于30个字符。</target>
        </trans-unit>
        <trans-unit id="10e30e11eaa8f36beb627e1a0f319f0e7d46a4e7" translate="yes" xml:space="preserve">
          <source>Optional (&lt;a href=&quot;../models/fields#django.db.models.Field.blank&quot;&gt;&lt;code&gt;blank=True&lt;/code&gt;&lt;/a&gt;). Email address.</source>
          <target state="translated">可选（&lt;a href=&quot;../models/fields#django.db.models.Field.blank&quot;&gt; &lt;code&gt;blank=True&lt;/code&gt; &lt;/a&gt;）。电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="f0d8694ad53a2924ebd7f6ff587227e39c0eaa32" translate="yes" xml:space="preserve">
          <source>Optional arguments</source>
          <target state="translated">可选参数</target>
        </trans-unit>
        <trans-unit id="9b6ba92e748f3335310f550931483cf88fec0fdb" translate="yes" xml:space="preserve">
          <source>Optional keyword arguments are:</source>
          <target state="translated">可选的关键字参数有:</target>
        </trans-unit>
        <trans-unit id="742b85c136c1ca04e82668422d5efca1b119f047" translate="yes" xml:space="preserve">
          <source>Optional methods</source>
          <target state="translated">可选方法</target>
        </trans-unit>
        <trans-unit id="08ad86a9f1de732a056ed6b271a3dd4a1a66436a" translate="yes" xml:space="preserve">
          <source>Optional string. A unique identifier for the issue. Identifiers should follow the pattern &lt;code&gt;applabel.X001&lt;/code&gt;, where &lt;code&gt;X&lt;/code&gt; is one of the letters &lt;code&gt;CEWID&lt;/code&gt;, indicating the message severity (&lt;code&gt;C&lt;/code&gt; for criticals, &lt;code&gt;E&lt;/code&gt; for errors and so). The number can be allocated by the application, but should be unique within that application.</source>
          <target state="translated">可选字符串。问题的唯一标识符。标识符应遵循模式 &lt;code&gt;applabel.X001&lt;/code&gt; ，其中 &lt;code&gt;X&lt;/code&gt; 是字母 &lt;code&gt;CEWID&lt;/code&gt; 之一，指示消息的严重性（ &lt;code&gt;C&lt;/code&gt; 表示严重， &lt;code&gt;E&lt;/code&gt; 表示错误，等等）。该编号可以由应用程序分配，但是在该应用程序中应该是唯一的。</target>
        </trans-unit>
        <trans-unit id="b66038a3c02f9a96da2de4ad83dde3b6fd772cf3" translate="yes" xml:space="preserve">
          <source>Optional. A longer formal identifier for the user such as their full name. If implemented, this appears alongside the username in an object&amp;rsquo;s history in &lt;a href=&quot;../../ref/contrib/admin/index#module-django.contrib.admin&quot;&gt;&lt;code&gt;django.contrib.admin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可选的。用户的较长形式标识符，例如其全名。如果已实现，&lt;a href=&quot;../../ref/contrib/admin/index#module-django.contrib.admin&quot;&gt; &lt;code&gt;django.contrib.admin&lt;/code&gt; &lt;/a&gt;在django.contrib.admin中对象历史记录中的用户名旁边显示。</target>
        </trans-unit>
        <trans-unit id="061866f2e6c0cdfec2a4982a7d90d650093a48e7" translate="yes" xml:space="preserve">
          <source>Optional. A regular expression, as a string, that &lt;a href=&quot;#django.db.models.FilePathField&quot;&gt;&lt;code&gt;FilePathField&lt;/code&gt;&lt;/a&gt; will use to filter filenames. Note that the regex will be applied to the base filename, not the full path. Example: &lt;code&gt;&quot;foo.*\.txt$&quot;&lt;/code&gt;, which will match a file called &lt;code&gt;foo23.txt&lt;/code&gt; but not &lt;code&gt;bar.txt&lt;/code&gt; or &lt;code&gt;foo23.png&lt;/code&gt;.</source>
          <target state="translated">可选的。&lt;a href=&quot;#django.db.models.FilePathField&quot;&gt; &lt;code&gt;FilePathField&lt;/code&gt; &lt;/a&gt;将用于过滤文件名的正则表达式（作为字符串）。请注意，正则表达式将应用于基本文件名，而不是完整路径。例如： &lt;code&gt;&quot;foo.*\.txt$&quot;&lt;/code&gt; ，它将与名为 &lt;code&gt;foo23.txt&lt;/code&gt; 的文件匹配，但与 &lt;code&gt;bar.txt&lt;/code&gt; 或 &lt;code&gt;foo23.png&lt;/code&gt; 的文件匹配。</target>
        </trans-unit>
        <trans-unit id="3e29ee6bb955883371605aef97a8811a60e6c87c" translate="yes" xml:space="preserve">
          <source>Optional. A short, informal identifier for the user such as their first name. If implemented, this replaces the username in the greeting to the user in the header of &lt;a href=&quot;../../ref/contrib/admin/index#module-django.contrib.admin&quot;&gt;&lt;code&gt;django.contrib.admin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可选的。用户的简短非正式标识符，例如他们的名字。如果实现，它将替换&lt;a href=&quot;../../ref/contrib/admin/index#module-django.contrib.admin&quot;&gt; &lt;code&gt;django.contrib.admin&lt;/code&gt; &lt;/a&gt;标头中的问候用户名。</target>
        </trans-unit>
        <trans-unit id="51a658020e63dbe321aa155cd99501c0cf557082" translate="yes" xml:space="preserve">
          <source>Optional. An object providing context for the message (for example, the model where the problem was discovered). The object should be a model, field, or manager or any other object that defines a &lt;code&gt;__str__()&lt;/code&gt; method. The method is used while reporting all messages and its result precedes the message.</source>
          <target state="translated">可选的。提供消息上下文的对象（例如，发现问题的模型）。该对象应该是模型，字段或管理器，或者是定义 &lt;code&gt;__str__()&lt;/code&gt; 方法的任何其他对象。报告所有消息时使用该方法，其结果在消息之前。</target>
        </trans-unit>
        <trans-unit id="1936ff6bbb449f848f49c6ae78c3aa3aa37a355e" translate="yes" xml:space="preserve">
          <source>Optional. Either &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. Default is &lt;code&gt;False&lt;/code&gt;. Specifies whether all subdirectories of &lt;a href=&quot;#django.db.models.FilePathField.path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt; should be included</source>
          <target state="translated">可选的。无论是 &lt;code&gt;True&lt;/code&gt; 还是 &lt;code&gt;False&lt;/code&gt; 。默认值为 &lt;code&gt;False&lt;/code&gt; 。指定是否应包含&lt;a href=&quot;#django.db.models.FilePathField.path&quot;&gt; &lt;code&gt;path&lt;/code&gt; &lt;/a&gt;所有子目录</target>
        </trans-unit>
        <trans-unit id="c6efc47fa95924bfdc447bff456d7202911619d1" translate="yes" xml:space="preserve">
          <source>Optional. Either &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. Default is &lt;code&gt;False&lt;/code&gt;. Specifies whether folders in the specified location should be included. Either this or &lt;a href=&quot;#django.db.models.FilePathField.allow_files&quot;&gt;&lt;code&gt;allow_files&lt;/code&gt;&lt;/a&gt; must be &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">可选的。无论是 &lt;code&gt;True&lt;/code&gt; 还是 &lt;code&gt;False&lt;/code&gt; 。默认值为 &lt;code&gt;False&lt;/code&gt; 。指定是否应包含指定位置的文件夹。这个或&lt;a href=&quot;#django.db.models.FilePathField.allow_files&quot;&gt; &lt;code&gt;allow_files&lt;/code&gt; &lt;/a&gt;必须为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="859a13f143ebceeae06636e103999ba77f0b08f3" translate="yes" xml:space="preserve">
          <source>Optional. Either &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. Default is &lt;code&gt;False&lt;/code&gt;. Specifies whether folders in the specified location should be included. Either this or &lt;a href=&quot;#django.forms.FilePathField.allow_files&quot;&gt;&lt;code&gt;allow_files&lt;/code&gt;&lt;/a&gt; must be &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">可选的。无论是 &lt;code&gt;True&lt;/code&gt; 还是 &lt;code&gt;False&lt;/code&gt; 。默认值为 &lt;code&gt;False&lt;/code&gt; 。指定是否应包含指定位置的文件夹。这个或&lt;a href=&quot;#django.forms.FilePathField.allow_files&quot;&gt; &lt;code&gt;allow_files&lt;/code&gt; &lt;/a&gt;必须为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c8bf189c542c692617e3001bd9a6dfe770462db" translate="yes" xml:space="preserve">
          <source>Optional. Either &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. Default is &lt;code&gt;True&lt;/code&gt;. Specifies whether files in the specified location should be included. Either this or &lt;a href=&quot;#django.db.models.FilePathField.allow_folders&quot;&gt;&lt;code&gt;allow_folders&lt;/code&gt;&lt;/a&gt; must be &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">可选的。无论是 &lt;code&gt;True&lt;/code&gt; 还是 &lt;code&gt;False&lt;/code&gt; 。默认值为 &lt;code&gt;True&lt;/code&gt; 。指定是否应包含指定位置的文件。这个或&lt;a href=&quot;#django.db.models.FilePathField.allow_folders&quot;&gt; &lt;code&gt;allow_folders&lt;/code&gt; &lt;/a&gt;必须为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6a3952c4ecfc5610a215c9e91c6fd5fd72b1ac0" translate="yes" xml:space="preserve">
          <source>Optional. Either &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. Default is &lt;code&gt;True&lt;/code&gt;. Specifies whether files in the specified location should be included. Either this or &lt;a href=&quot;#django.forms.FilePathField.allow_folders&quot;&gt;&lt;code&gt;allow_folders&lt;/code&gt;&lt;/a&gt; must be &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">可选的。无论是 &lt;code&gt;True&lt;/code&gt; 还是 &lt;code&gt;False&lt;/code&gt; 。默认值为 &lt;code&gt;True&lt;/code&gt; 。指定是否应包含指定位置的文件。这个或&lt;a href=&quot;#django.forms.FilePathField.allow_folders&quot;&gt; &lt;code&gt;allow_folders&lt;/code&gt; &lt;/a&gt;必须为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb4e88563898cfc6b1e24fe4d3ab342226f2930f" translate="yes" xml:space="preserve">
          <source>Optional. Use this when you don&amp;rsquo;t want to have a last page with very few items. If the last page would normally have a number of items less than or equal to &lt;code&gt;orphans&lt;/code&gt;, then those items will be added to the previous page (which becomes the last page) instead of leaving the items on a page by themselves. For example, with 23 items, &lt;code&gt;per_page=10&lt;/code&gt;, and &lt;code&gt;orphans=3&lt;/code&gt;, there will be two pages; the first page with 10 items and the second (and last) page with 13 items. &lt;code&gt;orphans&lt;/code&gt; defaults to zero, which means pages are never combined and the last page may have one item.</source>
          <target state="translated">可选的。如果您不希望最后一页包含很少的项目，请使用此选项。如果最后一页通常包含少于或等于 &lt;code&gt;orphans&lt;/code&gt; 的项目，那么这些项目将被添加到前一页（成为最后一页），而不是将这些项目自己留在页面上。例如，对于23个项目， &lt;code&gt;per_page=10&lt;/code&gt; 和 &lt;code&gt;orphans=3&lt;/code&gt; ，将有两页；第一页包含10个项目，第二页（也是最后一个）包含13个项目。 &lt;code&gt;orphans&lt;/code&gt; 默认为零，这意味着页面永远不会合并，最后一页可能只有一项。</target>
        </trans-unit>
        <trans-unit id="14c1bff36682bc530c11e77aee6ae2707c4b47f6" translate="yes" xml:space="preserve">
          <source>Optional. Whether or not the first page is allowed to be empty. If &lt;code&gt;False&lt;/code&gt; and &lt;code&gt;object_list&lt;/code&gt; is empty, then an &lt;code&gt;EmptyPage&lt;/code&gt; error will be raised.</source>
          <target state="translated">可选的。第一页是否允许为空。如果 &lt;code&gt;False&lt;/code&gt; 并且 &lt;code&gt;object_list&lt;/code&gt; 为空，则将引发 &lt;code&gt;EmptyPage&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="0f0162cab2f0f669c986db914fb247821cb1ec00" translate="yes" xml:space="preserve">
          <source>Or ask for the average rating of all the books written by author(s) we have on file:</source>
          <target state="translated">或者询问我们存档的所有作者所写书籍的平均评分。</target>
        </trans-unit>
        <trans-unit id="3e165d6eeab75c3a82d3fe0f1d27fa4aa66617e4" translate="yes" xml:space="preserve">
          <source>Or if &lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt;&lt;code&gt;staticfiles&lt;/code&gt;&lt;/a&gt; is configured using the &lt;a href=&quot;../../ref/contrib/staticfiles#django.contrib.staticfiles.storage.ManifestStaticFilesStorage&quot;&gt;&lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">或者，如果使用&lt;a href=&quot;../../ref/contrib/staticfiles#django.contrib.staticfiles.storage.ManifestStaticFilesStorage&quot;&gt; &lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt; &lt;/a&gt;配置了&lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt; &lt;code&gt;staticfiles&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="25621e679324af50dad4ec149022a79ed2b71273" translate="yes" xml:space="preserve">
          <source>Or if only some variables should be escaped, you can use:</source>
          <target state="translated">或者如果只对一些变量进行转义,可以使用。</target>
        </trans-unit>
        <trans-unit id="c0c61c22e60e27ae3fc6d5b7070d0cf89978aee2" translate="yes" xml:space="preserve">
          <source>Or if the field isn&amp;rsquo;t declared directly on the form (such as model form fields), you can use the &lt;a href=&quot;api#django.forms.Form.fields&quot;&gt;&lt;code&gt;Form.fields&lt;/code&gt;&lt;/a&gt; attribute:</source>
          <target state="translated">或者，如果未在表单上直接声明该字段（例如模型表单字段），则可以使用&lt;a href=&quot;api#django.forms.Form.fields&quot;&gt; &lt;code&gt;Form.fields&lt;/code&gt; &lt;/a&gt;属性：</target>
        </trans-unit>
        <trans-unit id="8a5c20782dc46697c9459b8ca83e94d56d6e36da" translate="yes" xml:space="preserve">
          <source>Or in Python code:</source>
          <target state="translated">或者在Python代码中。</target>
        </trans-unit>
        <trans-unit id="51f1927e73396518f1297b2575004e5095f6b52c" translate="yes" xml:space="preserve">
          <source>Or it can be written as a class whose instances are callable, like this:</source>
          <target state="translated">也可以写成一个类,它的实例是可调用的,像这样。</target>
        </trans-unit>
        <trans-unit id="628dfe73ba7840dc380d070dd15676af902666dd" translate="yes" xml:space="preserve">
          <source>Or on a field level:</source>
          <target state="translated">或者在场面上。</target>
        </trans-unit>
        <trans-unit id="a93f0f9fb53a117410c2e9ad2f200b2f307fcf27" translate="yes" xml:space="preserve">
          <source>Or to allow only some active users to log in:</source>
          <target state="translated">或者只允许部分活跃用户登录。</target>
        </trans-unit>
        <trans-unit id="95e5d3f75703413a8b79b401fe7d0d695c3cda3c" translate="yes" xml:space="preserve">
          <source>Or to call &lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt;&lt;code&gt;select_related()&lt;/code&gt;&lt;/a&gt; when applicable to reduce the number of queries even further:</source>
          <target state="translated">或者在适用时调用&lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt; &lt;code&gt;select_related()&lt;/code&gt; &lt;/a&gt;以进一步减少查询数量：</target>
        </trans-unit>
        <trans-unit id="96e4c7d2f9d2a2b030616fa913c4e00422de6f1d" translate="yes" xml:space="preserve">
          <source>Or to run fast tests and the core one (even though it&amp;rsquo;s slow):</source>
          <target state="translated">或者运行快速测试和核心测试（即使速度很慢）：</target>
        </trans-unit>
        <trans-unit id="93b807bbd527363221a89cbd863d6640212fda60" translate="yes" xml:space="preserve">
          <source>Or use a common ancestor to hold the &lt;a href=&quot;../../ref/models/fields#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt;. This requires using an explicit &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; from each parent model to the common ancestor to avoid a clash between the fields that are automatically generated and inherited by the child:</source>
          <target state="translated">或使用一个共同的祖先来保存&lt;a href=&quot;../../ref/models/fields#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; &lt;/a&gt;。这要求使用从每个父模型到公共祖先的显式&lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt;，以避免由孩子自动生成和继承的字段之间发生冲突：</target>
        </trans-unit>
        <trans-unit id="1b076f6cdc8de07a4839942de5e78d29d923fbf6" translate="yes" xml:space="preserve">
          <source>Or you can construct one from a Python string like this:</source>
          <target state="translated">或者你可以从Python字符串中构建一个像这样的字符串。</target>
        </trans-unit>
        <trans-unit id="d2aeed12399e9670e50e9f1d89661b30754da3a5" translate="yes" xml:space="preserve">
          <source>Or you can use &lt;code&gt;no-python-format&lt;/code&gt; so that all percent signs are treated as literals:</source>
          <target state="translated">或者，您可以使用 &lt;code&gt;no-python-format&lt;/code&gt; ,以便将所有百分号都视为文字：</target>
        </trans-unit>
        <trans-unit id="789685f9c51dad66c9d22df1380fb36080ed3822" translate="yes" xml:space="preserve">
          <source>Or you could run it directly on a production or staging deployment to verify that the correct settings are in use (omitting &lt;code&gt;--settings&lt;/code&gt;). You could even make it part of your integration test suite.</source>
          <target state="translated">或者，您可以直接在生产或登台部署上运行它，以验证是否使用了正确的设置（省略 &lt;code&gt;--settings&lt;/code&gt; ）。您甚至可以使其成为集成测试套件的一部分。</target>
        </trans-unit>
        <trans-unit id="b617cd1ba98d84e1130d043eaeefe7d8402eb25f" translate="yes" xml:space="preserve">
          <source>Or you may alter the user&amp;rsquo;s role from the SQL shell (assuming this is done from an existing superuser account):</source>
          <target state="translated">或者，您可以从SQL Shell中更改用户的角色（假设这是通过现有的超级用户帐户完成的）：</target>
        </trans-unit>
        <trans-unit id="05b1d66bf715e37c24910768d027c42362464ed6" translate="yes" xml:space="preserve">
          <source>Or, if &lt;code&gt;country&lt;/code&gt; is a field with &lt;code&gt;choices&lt;/code&gt;, it will have a &lt;a href=&quot;../models/instances#django.db.models.Model.get_FOO_display&quot;&gt;&lt;code&gt;get_FOO_display()&lt;/code&gt;&lt;/a&gt; method available as an attribute, allowing you to group on the display string rather than the &lt;code&gt;choices&lt;/code&gt; key:</source>
          <target state="translated">或者，如果 &lt;code&gt;country&lt;/code&gt; 是具有 &lt;code&gt;choices&lt;/code&gt; 的字段，它将具有一个&lt;a href=&quot;../models/instances#django.db.models.Model.get_FOO_display&quot;&gt; &lt;code&gt;get_FOO_display()&lt;/code&gt; &lt;/a&gt;方法作为属性，允许您对显示字符串而不是 &lt;code&gt;choices&lt;/code&gt; 键进行分组：</target>
        </trans-unit>
        <trans-unit id="ce3b6a8261b1b6c88c0c24b29441ab053c10b703" translate="yes" xml:space="preserve">
          <source>Or, more succinctly, you can decorate the class instead and pass the name of the method to be decorated as the keyword argument &lt;code&gt;name&lt;/code&gt;:</source>
          <target state="translated">或者，更简洁地说，您可以改为装饰类，并将要装饰的方法的名称作为关键字参数 &lt;code&gt;name&lt;/code&gt; 传递：</target>
        </trans-unit>
        <trans-unit id="8a1681e612a2025087b703fdf1f8f617e506b053" translate="yes" xml:space="preserve">
          <source>Oracle</source>
          <target state="translated">Oracle</target>
        </trans-unit>
        <trans-unit id="24c906abad94128562e1df0b2509b20fb80ebc90" translate="yes" xml:space="preserve">
          <source>Oracle SQL equivalent:</source>
          <target state="translated">相当于Oracle SQL。</target>
        </trans-unit>
        <trans-unit id="3b4a2c983578c980d5fb7441f41c11a4556cc78d" translate="yes" xml:space="preserve">
          <source>Oracle and &lt;a href=&quot;../databases#postgresql-server-side-cursors&quot;&gt;PostgreSQL&lt;/a&gt; use server-side cursors to stream results from the database without loading the entire result set into memory.</source>
          <target state="translated">Oracle和&lt;a href=&quot;../databases#postgresql-server-side-cursors&quot;&gt;PostgreSQL&lt;/a&gt;使用服务器端游标从数据库流式传输结果，而无需将整个结果集加载到内存中。</target>
        </trans-unit>
        <trans-unit id="b7cec2eeafd5ab234afeacc8d167e821f3308189" translate="yes" xml:space="preserve">
          <source>Oracle does not support partial indexes. Instead, partial indexes can be emulated using functional indexes. Use a &lt;a href=&quot;../../topics/migrations&quot;&gt;migration&lt;/a&gt; to add the index using &lt;a href=&quot;../migration-operations#django.db.migrations.operations.RunSQL&quot;&gt;&lt;code&gt;RunSQL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Oracle不支持部分索引。而是可以使用功能索引来模拟部分索引。使用&lt;a href=&quot;../../topics/migrations&quot;&gt;迁移&lt;/a&gt;来使用&lt;a href=&quot;../migration-operations#django.db.migrations.operations.RunSQL&quot;&gt; &lt;code&gt;RunSQL&lt;/code&gt; &lt;/a&gt;添加索引。</target>
        </trans-unit>
        <trans-unit id="2bb858c0c3c56c066673baa7ce0106b1b7e5aa94" translate="yes" xml:space="preserve">
          <source>Oracle doesn&amp;rsquo;t support the &lt;code&gt;SHA224&lt;/code&gt; function.</source>
          <target state="translated">Oracle不支持 &lt;code&gt;SHA224&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="560221169f9cab89c0441238ad0defe5bfa95fb8" translate="yes" xml:space="preserve">
          <source>Oracle imposes a name length limit of 30 characters. To accommodate this, the backend truncates database identifiers to fit, replacing the final four characters of the truncated name with a repeatable MD5 hash value. Additionally, the backend turns database identifiers to all-uppercase.</source>
          <target state="translated">Oracle规定名称长度限制为30个字符。为了适应这一限制,后端对数据库标识符进行截断以适应,用一个可重复的MD5哈希值替换截断后的名称的最后四个字符。此外,后端将数据库标识符变成全大写。</target>
        </trans-unit>
        <trans-unit id="c0d228d153ffc5d5fa61bcb753bb50f0393cd1ea" translate="yes" xml:space="preserve">
          <source>Oracle notes</source>
          <target state="translated">甲骨文说明</target>
        </trans-unit>
        <trans-unit id="33a07706252bf9e24da2916db3db3060aab7c186" translate="yes" xml:space="preserve">
          <source>Oracle support was added.</source>
          <target state="translated">增加了对Oracle的支持。</target>
        </trans-unit>
        <trans-unit id="3507f061e1f240a2a4bc257e26a155bc7a8a45a2" translate="yes" xml:space="preserve">
          <source>Oracle users, refer to the &lt;a href=&quot;https://docs.oracle.com/en/database/oracle/oracle-database/18/nlspg/index.html&quot;&gt;Oracle manual&lt;/a&gt; for details on how to set (&lt;a href=&quot;https://docs.oracle.com/en/database/oracle/oracle-database/18/nlspg/choosing-character-set.html&quot;&gt;section 2&lt;/a&gt;) or alter (&lt;a href=&quot;https://docs.oracle.com/en/database/oracle/oracle-database/18/nlspg/character-set-migration.html&quot;&gt;section 11&lt;/a&gt;) the database character set encoding.</source>
          <target state="translated">Oracle用户，请参阅&lt;a href=&quot;https://docs.oracle.com/en/database/oracle/oracle-database/18/nlspg/index.html&quot;&gt;Oracle手册&lt;/a&gt;以获取有关如何设置（&lt;a href=&quot;https://docs.oracle.com/en/database/oracle/oracle-database/18/nlspg/choosing-character-set.html&quot;&gt;第2节&lt;/a&gt;）或更改（&lt;a href=&quot;https://docs.oracle.com/en/database/oracle/oracle-database/18/nlspg/character-set-migration.html&quot;&gt;第11节&lt;/a&gt;）数据库字符集编码的详细信息。</target>
        </trans-unit>
        <trans-unit id="296a5959a53a3acc498b705e649dc5c5ed628ae7" translate="yes" xml:space="preserve">
          <source>Oracle: no requirements (see &lt;a href=&quot;https://docs.oracle.com/en/database/oracle/oracle-database/18/nlspg/datetime-data-types-and-time-zone-support.html#GUID-805AB986-DE12-4FEA-AF56-5AABCD2132DF&quot;&gt;Choosing a Time Zone File&lt;/a&gt;).</source>
          <target state="translated">Oracle：无要求（请参阅&lt;a href=&quot;https://docs.oracle.com/en/database/oracle/oracle-database/18/nlspg/datetime-data-types-and-time-zone-support.html#GUID-805AB986-DE12-4FEA-AF56-5AABCD2132DF&quot;&gt;选择时区文件&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="30d87136b62cc92241cf688437d6474a9f92bac6" translate="yes" xml:space="preserve">
          <source>Order in which tests are executed</source>
          <target state="translated">测试的执行顺序</target>
        </trans-unit>
        <trans-unit id="420c74ea5a94142dc2e8ddc45403f850816df75c" translate="yes" xml:space="preserve">
          <source>Order of &lt;code&gt;MIDDLEWARE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MIDDLEWARE&lt;/code&gt; 的订单</target>
        </trans-unit>
        <trans-unit id="55995aea917745e5b9c1538926b64f813438d41b" translate="yes" xml:space="preserve">
          <source>Order of &lt;code&gt;annotate()&lt;/code&gt; and &lt;code&gt;filter()&lt;/code&gt; clauses</source>
          <target state="translated">&lt;code&gt;annotate()&lt;/code&gt; 和 &lt;code&gt;filter()&lt;/code&gt; 子句的顺序</target>
        </trans-unit>
        <trans-unit id="7d2f7827be2e56452ab9e1eae8df3e8b6144bea7" translate="yes" xml:space="preserve">
          <source>Order of &lt;code&gt;annotate()&lt;/code&gt; and &lt;code&gt;values()&lt;/code&gt; clauses</source>
          <target state="translated">&lt;code&gt;annotate()&lt;/code&gt; 和 &lt;code&gt;values()&lt;/code&gt; 子句的顺序</target>
        </trans-unit>
        <trans-unit id="8e3feffbf3af227c58c043b37683f4707ea88216" translate="yes" xml:space="preserve">
          <source>Order of assets</source>
          <target state="translated">资产顺序</target>
        </trans-unit>
        <trans-unit id="991d0fbf1a20045f117c183786a7bc2bd16ca132" translate="yes" xml:space="preserve">
          <source>Order of execution</source>
          <target state="translated">执行顺序</target>
        </trans-unit>
        <trans-unit id="db6e3d6df8111bad6222030723cf15a80b8e40d6" translate="yes" xml:space="preserve">
          <source>Ordering and pagination of the results are controlled by the related &lt;code&gt;ModelAdmin&lt;/code&gt;&amp;rsquo;s &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_ordering&quot;&gt;&lt;code&gt;get_ordering()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_paginator&quot;&gt;&lt;code&gt;get_paginator()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">结果的排序和分页由相关 &lt;code&gt;ModelAdmin&lt;/code&gt; 的&lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_ordering&quot;&gt; &lt;code&gt;get_ordering()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_paginator&quot;&gt; &lt;code&gt;get_paginator()&lt;/code&gt; &lt;/a&gt;方法控制。</target>
        </trans-unit>
        <trans-unit id="005de91ef7aac968fb5cac1b25907b93799f647f" translate="yes" xml:space="preserve">
          <source>Ordering is not a free operation. Each field you add to the ordering incurs a cost to your database. Each foreign key you add will implicitly include all of its default orderings as well.</source>
          <target state="translated">订购不是一个免费的操作。您添加到订购中的每个字段都会给您的数据库带来成本。您添加的每个外键都会隐含地包含其所有的默认排序。</target>
        </trans-unit>
        <trans-unit id="8b5102222646eeb276b5e810050c372aa24580a7" translate="yes" xml:space="preserve">
          <source>Ordering is not free; each field to order by is an operation the database must perform. If a model has a default ordering (&lt;a href=&quot;../../ref/models/options#django.db.models.Options.ordering&quot;&gt;&lt;code&gt;Meta.ordering&lt;/code&gt;&lt;/a&gt;) and you don&amp;rsquo;t need it, remove it on a &lt;code&gt;QuerySet&lt;/code&gt; by calling &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt; with no parameters.</source>
          <target state="translated">订购不是免费的；每个要排序的字段是数据库必须执行的操作。如果模型具有默认顺序（&lt;a href=&quot;../../ref/models/options#django.db.models.Options.ordering&quot;&gt; &lt;code&gt;Meta.ordering&lt;/code&gt; &lt;/a&gt;），而您不需要它，则可以通过不带任何参数的&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.order_by&quot;&gt; &lt;code&gt;order_by()&lt;/code&gt; &lt;/a&gt;在 &lt;code&gt;QuerySet&lt;/code&gt; 上将其删除。</target>
        </trans-unit>
        <trans-unit id="53af4c39205242aabe13f143571457f5791a2efe" translate="yes" xml:space="preserve">
          <source>Ordering using &lt;a href=&quot;#django.contrib.admin.ModelAdmin.ordering&quot;&gt;&lt;code&gt;ModelAdmin.ordering&lt;/code&gt;&lt;/a&gt; may cause performance problems as sorting on a large queryset will be slow.</source>
          <target state="translated">使用&lt;a href=&quot;#django.contrib.admin.ModelAdmin.ordering&quot;&gt; &lt;code&gt;ModelAdmin.ordering&lt;/code&gt; &lt;/a&gt;进行排序可能会导致性能问题，因为对大型查询集进行排序会很慢。</target>
        </trans-unit>
        <trans-unit id="170b53da47c53a430863bf01d78e2bd103f629f3" translate="yes" xml:space="preserve">
          <source>Ordinarily, annotations are generated on a per-object basis - an annotated &lt;code&gt;QuerySet&lt;/code&gt; will return one result for each object in the original &lt;code&gt;QuerySet&lt;/code&gt;. However, when a &lt;code&gt;values()&lt;/code&gt; clause is used to constrain the columns that are returned in the result set, the method for evaluating annotations is slightly different. Instead of returning an annotated result for each result in the original &lt;code&gt;QuerySet&lt;/code&gt;, the original results are grouped according to the unique combinations of the fields specified in the &lt;code&gt;values()&lt;/code&gt; clause. An annotation is then provided for each unique group; the annotation is computed over all members of the group.</source>
          <target state="translated">通常，注释是基于每个对象生成的-带注释的 &lt;code&gt;QuerySet&lt;/code&gt; 将为原始 &lt;code&gt;QuerySet&lt;/code&gt; 中的每个对象返回一个结果。但是，当使用 &lt;code&gt;values()&lt;/code&gt; 子句约束结果集中返回的列时，评估注释的方法略有不同。代替为原始 &lt;code&gt;QuerySet&lt;/code&gt; 中的每个结果返回带注释的结果，而是根据 &lt;code&gt;values()&lt;/code&gt; 子句中指定的字段的唯一组合对原始结果进行分组。然后为每个唯一组提供一个注释；注释是在组的所有成员上计算的。</target>
        </trans-unit>
        <trans-unit id="3f10f78534f7589d00e4f60b98f5edf1e048c4d4" translate="yes" xml:space="preserve">
          <source>Ordinarily, serialized data for &lt;code&gt;Book&lt;/code&gt; would use an integer to refer to the author. For example, in JSON, a Book might be serialized as:</source>
          <target state="translated">通常， &lt;code&gt;Book&lt;/code&gt; 的序列化数据将使用整数来引用作者。例如，在JSON中，一本书可能被序列化为：</target>
        </trans-unit>
        <trans-unit id="16141546793a331563f3f2fdc4d7dcbc40757661" translate="yes" xml:space="preserve">
          <source>Organization of code related to specific HTTP methods (&lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, etc.) can be addressed by separate methods instead of conditional branching.</source>
          <target state="translated">与特定HTTP方法（ &lt;code&gt;GET&lt;/code&gt; ， &lt;code&gt;POST&lt;/code&gt; 等）相关的代码的组织可以通过单独的方法而不是条件分支来解决。</target>
        </trans-unit>
        <trans-unit id="6d31d09863416a43257272008777412de3dc0343" translate="yes" xml:space="preserve">
          <source>Organizing models in a package</source>
          <target state="translated">在一个包中组织模型</target>
        </trans-unit>
        <trans-unit id="55da83428e96e3bf49eebf44fdc2f8c182ddbf21" translate="yes" xml:space="preserve">
          <source>Organizing templates</source>
          <target state="translated">组织模板</target>
        </trans-unit>
        <trans-unit id="14447665d4c2d8f9f315b725d8b973ebb151e2c5" translate="yes" xml:space="preserve">
          <source>Origin API and 3rd-party integration</source>
          <target state="translated">Origin API和第三方集成</target>
        </trans-unit>
        <trans-unit id="6cf7b1361d8726852a7325f31ec28d0d2e4f7221" translate="yes" xml:space="preserve">
          <source>Origin only: send only the &amp;ldquo;origin&amp;rdquo; in the referrer. The origin consists of the scheme, host and (optionally) port number. For example, if the user is visiting &lt;code&gt;https://example.com/page.html&lt;/code&gt;, the origin would be &lt;code&gt;https://example.com/&lt;/code&gt;.</source>
          <target state="translated">仅起源：仅在引荐来源网址中发送&amp;ldquo;起源&amp;rdquo;。来源包括方案，主机和（可选）端口号。例如，如果用户正在访问 &lt;code&gt;https://example.com/page.html&lt;/code&gt; ，则源将是 &lt;code&gt;https://example.com/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6c8bcec7b648c9760b1a9ea6708ae59737c716c" translate="yes" xml:space="preserve">
          <source>Other &lt;code&gt;QuerySet&lt;/code&gt; methods</source>
          <target state="translated">其他 &lt;code&gt;QuerySet&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="65f29d4c86bb4f978641051185ab0c5b61b9d448" translate="yes" xml:space="preserve">
          <source>Other &lt;code&gt;django.security&lt;/code&gt; loggers not based on &lt;code&gt;SuspiciousOperation&lt;/code&gt; are:</source>
          <target state="translated">其他不基于 &lt;code&gt;SuspiciousOperation&lt;/code&gt; 的 &lt;code&gt;django.security&lt;/code&gt; 记录器包括：</target>
        </trans-unit>
        <trans-unit id="d1ef4006e149656d7817ee292efc3130a7537e8a" translate="yes" xml:space="preserve">
          <source>Other Helpers</source>
          <target state="translated">其他帮助者</target>
        </trans-unit>
        <trans-unit id="db3716ee8a50c03cd8e126dc59e145dc9267c1af" translate="yes" xml:space="preserve">
          <source>Other Properties &amp;amp; Methods</source>
          <target state="translated">其他属性和方法</target>
        </trans-unit>
        <trans-unit id="6e2191d6b97ca844ba9c5454d6d85c08f1e9f2b8" translate="yes" xml:space="preserve">
          <source>Other add-ons</source>
          <target state="translated">其他附加功能</target>
        </trans-unit>
        <trans-unit id="d042bb243a9d93f7d217c6e5a0c1a49c971c43e7" translate="yes" xml:space="preserve">
          <source>Other attributes</source>
          <target state="translated">其他属性</target>
        </trans-unit>
        <trans-unit id="8f0808417c4e94d8894a482d97d0418503902abe" translate="yes" xml:space="preserve">
          <source>Other authentication sources</source>
          <target state="translated">其他认证来源</target>
        </trans-unit>
        <trans-unit id="ef306d3af22afdd366097a5c56a90706f4ac8bb7" translate="yes" xml:space="preserve">
          <source>Other backends store datetimes without time zone information. If you switch from &lt;code&gt;USE_TZ = False&lt;/code&gt; to &lt;code&gt;USE_TZ = True&lt;/code&gt;, you must convert your data from local time to UTC &amp;ndash; which isn&amp;rsquo;t deterministic if your local time has DST.</source>
          <target state="translated">其他后端存储的日期时间没有时区信息。如果从 &lt;code&gt;USE_TZ = False&lt;/code&gt; 切换为 &lt;code&gt;USE_TZ = True&lt;/code&gt; ，则必须将数据从本地时间转换为UTC &amp;ndash;如果您的本地时间具有DST，则不确定。</target>
        </trans-unit>
        <trans-unit id="aa6d8caad589ade3266bf1e83ffb4c334fa9991d" translate="yes" xml:space="preserve">
          <source>Other block tags (for example &lt;code&gt;{% for %}&lt;/code&gt; or &lt;code&gt;{% if %}&lt;/code&gt;) are not allowed inside a &lt;code&gt;blocktrans&lt;/code&gt; tag.</source>
          <target state="translated">禁止在 &lt;code&gt;blocktrans&lt;/code&gt; 标记内使用其他块标记（例如 &lt;code&gt;{% for %}&lt;/code&gt; 或 &lt;code&gt;{% if %}&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="30f251e729d16aef2e5e61a11c227d160c9e8d9d" translate="yes" xml:space="preserve">
          <source>Other core functionalities</source>
          <target state="translated">其他核心功能</target>
        </trans-unit>
        <trans-unit id="4bed2e8111f71065df59141e43a29a4b8f0bc963" translate="yes" xml:space="preserve">
          <source>Other database-related tips</source>
          <target state="translated">其他数据库相关提示</target>
        </trans-unit>
        <trans-unit id="5cb93deb997e7cfed93f5fb4038b0d930039d6e9" translate="yes" xml:space="preserve">
          <source>Other databases</source>
          <target state="translated">其他数据库</target>
        </trans-unit>
        <trans-unit id="ad24dd8dd4de3a366dfa2226270e532f5785c056" translate="yes" xml:space="preserve">
          <source>Other formats</source>
          <target state="translated">其他格式</target>
        </trans-unit>
        <trans-unit id="ea910b17053e23533d815464a56b475af947b4f3" translate="yes" xml:space="preserve">
          <source>Other methods</source>
          <target state="translated">其他方法</target>
        </trans-unit>
        <trans-unit id="1a080dcddf2ba764e5db781600567fddeadb8e52" translate="yes" xml:space="preserve">
          <source>Other middleware hooks</source>
          <target state="translated">其他中间件钩子</target>
        </trans-unit>
        <trans-unit id="ed57bc8d21ee8cb372b5d9ff1936640dbca10641" translate="yes" xml:space="preserve">
          <source>Other model instance methods</source>
          <target state="translated">其他模型实例方法</target>
        </trans-unit>
        <trans-unit id="4c15f8b2bc73ab95c0934e87b1a87123a60c7ee2" translate="yes" xml:space="preserve">
          <source>Other object-relational mappers require you to define relationships on both sides. The Django developers believe this is a violation of the DRY (Don&amp;rsquo;t Repeat Yourself) principle, so Django only requires you to define the relationship on one end.</source>
          <target state="translated">其他对象关系映射器要求您在两侧定义关系。Django开发人员认为这违反了DRY（请勿重复自己）原则，因此Django仅要求您在一端定义关系。</target>
        </trans-unit>
        <trans-unit id="74883f3f28ff75cbfd0b1e676bda3af8304d204b" translate="yes" xml:space="preserve">
          <source>Other problems with caching are the privacy of data and the question of where data should be stored in a cascade of caches.</source>
          <target state="translated">缓存的其他问题还有数据的私密性,以及数据在级联缓存中应该存储在哪里的问题。</target>
        </trans-unit>
        <trans-unit id="07f0c8a819b057b97bd83b3e8e3832bd6eeea145" translate="yes" xml:space="preserve">
          <source>Other tags</source>
          <target state="translated">其他标签</target>
        </trans-unit>
        <trans-unit id="30b651a2617dab8f49f0fe838e2180168a76de91" translate="yes" xml:space="preserve">
          <source>Other tags and filters libraries</source>
          <target state="translated">其他标签和过滤器库</target>
        </trans-unit>
        <trans-unit id="4a35752ab9f4b364c50ff15dd9e36c30daa57fc5" translate="yes" xml:space="preserve">
          <source>Other test conditions</source>
          <target state="translated">其他试验条件</target>
        </trans-unit>
        <trans-unit id="740307b6495ba5e98cdc9cd0ee6c245866224b54" translate="yes" xml:space="preserve">
          <source>Other text-based formats</source>
          <target state="translated">其他基于文本的格式</target>
        </trans-unit>
        <trans-unit id="f7a5be2bc9ddbbd8c9fdf6a6ffac21f5ac820287" translate="yes" xml:space="preserve">
          <source>Other than the &lt;code&gt;save()&lt;/code&gt; and &lt;code&gt;save_m2m()&lt;/code&gt; methods, a &lt;code&gt;ModelForm&lt;/code&gt; works exactly the same way as any other &lt;code&gt;forms&lt;/code&gt; form. For example, the &lt;code&gt;is_valid()&lt;/code&gt; method is used to check for validity, the &lt;code&gt;is_multipart()&lt;/code&gt; method is used to determine whether a form requires multipart file upload (and hence whether &lt;code&gt;request.FILES&lt;/code&gt; must be passed to the form), etc. See &lt;a href=&quot;../../ref/forms/api#binding-uploaded-files&quot;&gt;Binding uploaded files to a form&lt;/a&gt; for more information.</source>
          <target state="translated">除了 &lt;code&gt;save()&lt;/code&gt; 和 &lt;code&gt;save_m2m()&lt;/code&gt; 方法之外， &lt;code&gt;ModelForm&lt;/code&gt; 的工作方式与任何其他 &lt;code&gt;forms&lt;/code&gt; 形式完全相同。例如， &lt;code&gt;is_valid()&lt;/code&gt; 方法用于检查有效性， &lt;code&gt;is_multipart()&lt;/code&gt; 方法用于确定表单是否需要分段文件上传（以及是否必须将 &lt;code&gt;request.FILES&lt;/code&gt; 传递给表单），等等。请参见&lt;a href=&quot;../../ref/forms/api#binding-uploaded-files&quot;&gt;绑定将文件上传到表单以&lt;/a&gt;获取更多信息。</target>
        </trans-unit>
        <trans-unit id="d7c4b57295a40e5f3e757610ef1f4a955b58ae43" translate="yes" xml:space="preserve">
          <source>Other topics</source>
          <target state="translated">其他主题</target>
        </trans-unit>
        <trans-unit id="f2253ba92e11ef33d967c8e37bf8f95e5d5af2b1" translate="yes" xml:space="preserve">
          <source>Other uses of lazy in delayed translations</source>
          <target state="translated">懒惰在延迟翻译中的其他用法</target>
        </trans-unit>
        <trans-unit id="a29b5726b1cc15826ea9d1a05ed4d0ac7b40ef27" translate="yes" xml:space="preserve">
          <source>Otherwise, raise an exception.</source>
          <target state="translated">否则,引发异常。</target>
        </trans-unit>
        <trans-unit id="0df0011def0634465c8c760cf06ab96ff5bdcfb7" translate="yes" xml:space="preserve">
          <source>Otherwise, the request will be redirected to the URL specified by the &lt;code&gt;login_url&lt;/code&gt; parameter, with the originally requested path in a query string variable specified by &lt;code&gt;redirect_field_name&lt;/code&gt;. For example: &lt;code&gt;/admin/login/?next=/admin/polls/question/3/&lt;/code&gt;.</source>
          <target state="translated">否则，请求将被重定向到 &lt;code&gt;login_url&lt;/code&gt; 参数指定的URL ，并将原始请求的路径包含在 &lt;code&gt;redirect_field_name&lt;/code&gt; 指定的查询字符串变量中。例如： &lt;code&gt;/admin/login/?next=/admin/polls/question/3/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0050fbc0f9f82e9a5a5b89786cc9c3c5d3f52e45" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;HandField&lt;/code&gt; accepts most of the standard field options (see the list below), but we ensure it has a fixed length, since it only needs to hold 52 card values plus their suits; 104 characters in total.</source>
          <target state="translated">我们的 &lt;code&gt;HandField&lt;/code&gt; 接受大多数标准字段选项（请参阅下面的列表），但是我们确保它具有固定的长度，因为它只需要容纳52张卡值及其花色；总共104个字符。</target>
        </trans-unit>
        <trans-unit id="db06c72d2934d67a03d3f0f3a2a745ee6d03f280" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;current_time&lt;/code&gt; function could thus be written like this:</source>
          <target state="translated">我们的 &lt;code&gt;current_time&lt;/code&gt; 函数可以这样写：</target>
        </trans-unit>
        <trans-unit id="dff6ab8adb93a46ee3c6e3bd3ed49ff4ebd8ab39" translate="yes" xml:space="preserve">
          <source>Our earlier form used a single field, &lt;code&gt;your_name&lt;/code&gt;, a &lt;a href=&quot;../../ref/forms/fields#django.forms.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;. In this case, our form has four fields: &lt;code&gt;subject&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt;, &lt;code&gt;sender&lt;/code&gt; and &lt;code&gt;cc_myself&lt;/code&gt;. &lt;a href=&quot;../../ref/forms/fields#django.forms.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/forms/fields#django.forms.EmailField&quot;&gt;&lt;code&gt;EmailField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/forms/fields#django.forms.BooleanField&quot;&gt;&lt;code&gt;BooleanField&lt;/code&gt;&lt;/a&gt; are just three of the available field types; a full list can be found in &lt;a href=&quot;../../ref/forms/fields&quot;&gt;Form fields&lt;/a&gt;.</source>
          <target state="translated">我们之前的表格使用了单个字段 &lt;code&gt;your_name&lt;/code&gt; 和&lt;a href=&quot;../../ref/forms/fields#django.forms.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;。在这种情况下，我们的表单具有四个字段： &lt;code&gt;subject&lt;/code&gt; ， &lt;code&gt;message&lt;/code&gt; ， &lt;code&gt;sender&lt;/code&gt; 和 &lt;code&gt;cc_myself&lt;/code&gt; 。&lt;a href=&quot;../../ref/forms/fields#django.forms.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../ref/forms/fields#django.forms.EmailField&quot;&gt; &lt;code&gt;EmailField&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ref/forms/fields#django.forms.BooleanField&quot;&gt; &lt;code&gt;BooleanField&lt;/code&gt; &lt;/a&gt;只是三种可用的字段类型；完整列表可在&amp;ldquo; &lt;a href=&quot;../../ref/forms/fields&quot;&gt;表单&amp;rdquo;字段中&lt;/a&gt;找到。</target>
        </trans-unit>
        <trans-unit id="8ffa06db831290132ff3c584882aede3e5800c0f" translate="yes" xml:space="preserve">
          <source>Our example object</source>
          <target state="translated">我们的示例对象</target>
        </trans-unit>
        <trans-unit id="0627352608ac4e2e19335c97ffa41d6265f59e8d" translate="yes" xml:space="preserve">
          <source>Our new &lt;code&gt;AuthorDetail&lt;/code&gt; looks like this:</source>
          <target state="translated">我们新的 &lt;code&gt;AuthorDetail&lt;/code&gt; 看起来像这样：</target>
        </trans-unit>
        <trans-unit id="1f8e1dd2e4de2f81be39a90d9ea2dedca52e113d" translate="yes" xml:space="preserve">
          <source>Our poll application is not very complex and doesn&amp;rsquo;t need custom admin templates. But if it grew more sophisticated and required modification of Django&amp;rsquo;s standard admin templates for some of its functionality, it would be more sensible to modify the &lt;em&gt;application&amp;rsquo;s&lt;/em&gt; templates, rather than those in the &lt;em&gt;project&lt;/em&gt;. That way, you could include the polls application in any new project and be assured that it would find the custom templates it needed.</source>
          <target state="translated">我们的民意调查应用程序不是很复杂，不需要自定义管理模板。但是，如果它变得更加复杂，并且需要对其某些功能进行Django标准管理模板的修改，那么修改&lt;em&gt;应用程序的&lt;/em&gt;模板而不是&lt;em&gt;项目中&lt;/em&gt;&lt;em&gt;的&lt;/em&gt;模板将更为明智。这样，您可以在任何新项目中包含民意调查应用程序，并确保它会找到所需的自定义模板。</target>
        </trans-unit>
        <trans-unit id="94262ed90ad185998a5f246db31ae553a069776c" translate="yes" xml:space="preserve">
          <source>Our publish-these-articles function won&amp;rsquo;t need the &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; or the request object, but we will use the queryset:</source>
          <target state="translated">我们的publish-these-articles函数不需要&lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;或request对象，但是我们将使用queryset：</target>
        </trans-unit>
        <trans-unit id="8bf7102d00ad0d0a1a4d16b6ef4507a65f16f2b8" translate="yes" xml:space="preserve">
          <source>Outdim Value</source>
          <target state="translated">輸出值</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="5ff63679199d65dfb0c6db045e65af9d0751d7e2" translate="yes" xml:space="preserve">
          <source>Output 3D WKB.</source>
          <target state="translated">输出3D WKB。</target>
        </trans-unit>
        <trans-unit id="43209554279e71a6edbe8bb7ebb6fdeecbe79ba6" translate="yes" xml:space="preserve">
          <source>Output Properties</source>
          <target state="translated">输出属性</target>
        </trans-unit>
        <trans-unit id="c03f08a8f205e4568e916e3cfaa50c6a48749706" translate="yes" xml:space="preserve">
          <source>Output format</source>
          <target state="translated">输出格式</target>
        </trans-unit>
        <trans-unit id="bb8145bf62edbc420c2b0cf4c732bd403b67f7e7" translate="yes" xml:space="preserve">
          <source>Output in case of error can be customized with the &lt;code&gt;msg&lt;/code&gt; argument.</source>
          <target state="translated">发生错误时的输出可以使用 &lt;code&gt;msg&lt;/code&gt; 参数自定义。</target>
        </trans-unit>
        <trans-unit id="c664efd5b3e4b44ce5bc39e691c6e2565216beef" translate="yes" xml:space="preserve">
          <source>Output of the applied datetimes at verbosity 2 and above was added.</source>
          <target state="translated">增加了动词性2及以上的应用日期的输出。</target>
        </trans-unit>
        <trans-unit id="03e1aee184126121c6a71ebdabaa3bfe9cc944a7" translate="yes" xml:space="preserve">
          <source>Output redirection</source>
          <target state="translated">输出重定向</target>
        </trans-unit>
        <trans-unit id="7835db447bc76230b5b0d736b2d78c671d7100a1" translate="yes" xml:space="preserve">
          <source>Outputs</source>
          <target state="translated">Outputs</target>
        </trans-unit>
        <trans-unit id="e10f22272a52d06137d232f9827cac0615b426c9" translate="yes" xml:space="preserve">
          <source>Outputs a &lt;code&gt;&amp;lt;ul class=&quot;errorlist&quot;&amp;gt;&lt;/code&gt; containing any validation errors corresponding to this field. You can customize the presentation of the errors with a &lt;code&gt;{% for error in field.errors %}&lt;/code&gt; loop. In this case, each object in the loop is a string containing the error message.</source>
          <target state="translated">输出一个 &lt;code&gt;&amp;lt;ul class=&quot;errorlist&quot;&amp;gt;&lt;/code&gt; 其中包含与此字段对应的任何验证错误。您可以使用 &lt;code&gt;{% for error in field.errors %}&lt;/code&gt; 循环中的错误来自定义错误的表示形式。在这种情况下，循环中的每个对象都是一个包含错误消息的字符串。</target>
        </trans-unit>
        <trans-unit id="7333f4a7bf31ccfdbb5dc18e2179555f50ce400e" translate="yes" xml:space="preserve">
          <source>Outputs a string in the format &lt;code&gt;Wdy, DD Mon YYYY HH:MM:SS GMT&lt;/code&gt;.</source>
          <target state="translated">输出格式为 &lt;code&gt;Wdy, DD Mon YYYY HH:MM:SS GMT&lt;/code&gt; 的字符串。</target>
        </trans-unit>
        <trans-unit id="a6f5e4808bedbab831b1bb9c7c9c21be9a0e5910" translate="yes" xml:space="preserve">
          <source>Outputs a whole load of debugging information, including the current context and imported modules.</source>
          <target state="translated">输出一整套调试信息,包括当前上下文和导入的模块。</target>
        </trans-unit>
        <trans-unit id="73525538b3d957fd8f1b877e665683002b2e3665" translate="yes" xml:space="preserve">
          <source>Outputs an empty migration for the specified apps, for manual editing. This is for advanced users and should not be used unless you are familiar with the migration format, migration operations, and the dependencies between your migrations.</source>
          <target state="translated">为指定的应用程序输出一个空的迁移,用于手动编辑。这是为高级用户准备的,除非你熟悉迁移格式、迁移操作和迁移之间的依赖关系,否则不应使用。</target>
        </trans-unit>
        <trans-unit id="e13110426e6548f4f6d99430014198a4aff088e3" translate="yes" xml:space="preserve">
          <source>Outputs one of the syntax characters used to compose template tags.</source>
          <target state="translated">输出用于组成模板标签的语法字符之一。</target>
        </trans-unit>
        <trans-unit id="1b0ee9d22ffd2b84beb646b9a42cfb1a6de46213" translate="yes" xml:space="preserve">
          <source>Outputs only the objects specified by a comma separated list of primary keys. This is only available when dumping one model. By default, all the records of the model are output.</source>
          <target state="translated">只输出由逗号分隔的主键列表指定的对象。这仅在转储一个模型时可用。默认情况下,输出模型的所有记录。</target>
        </trans-unit>
        <trans-unit id="a2fb19bf9e041d6bac4abe0f868835a6e7118c10" translate="yes" xml:space="preserve">
          <source>Outputs the feed in the given encoding to &lt;code&gt;outfile&lt;/code&gt;, which is a file-like object. Subclasses should override this.</source>
          <target state="translated">将给定编码的提要输出到 &lt;code&gt;outfile&lt;/code&gt; ，后者是一个类似文件的对象。子类应覆盖此内容。</target>
        </trans-unit>
        <trans-unit id="b1d86c371b153e0d5a8e04bf4843d2b1c82764bd" translate="yes" xml:space="preserve">
          <source>Outputs the feed in the given encoding to outfile, which is a file-like object.</source>
          <target state="translated">将给定编码的feed输出到outfile,这是一个类似文件的对象。</target>
        </trans-unit>
        <trans-unit id="3a8df3db84756400ab5f34f1a3a8eeb89a2d6d30" translate="yes" xml:space="preserve">
          <source>Outputs the first argument variable that is not &amp;ldquo;false&amp;rdquo; (i.e. exists, is not empty, is not a false boolean value, and is not a zero numeric value). Outputs nothing if all the passed variables are &amp;ldquo;false&amp;rdquo;.</source>
          <target state="translated">输出不为&amp;ldquo; false&amp;rdquo;的第一个参数变量（即存在，不为空，不是错误的布尔值并且不是零数值）。如果所有传递的变量均为&amp;ldquo; false&amp;rdquo;，则不输出任何内容。</target>
        </trans-unit>
        <trans-unit id="5bcad65f84e50e07aa9fc40899f541aa8811c827" translate="yes" xml:space="preserve">
          <source>Outputs to standard output all data in the database associated with the named application(s).</source>
          <target state="translated">将数据库中与指定应用程序相关联的所有数据输出到标准输出。</target>
        </trans-unit>
        <trans-unit id="a07c2209b8bfd7ff7088211321dd90df2f4ee620" translate="yes" xml:space="preserve">
          <source>Outputting CSV with Django</source>
          <target state="translated">用Django输出CSV</target>
        </trans-unit>
        <trans-unit id="6bdeb471d5cc647c2c535dd532c5a68d71c980eb" translate="yes" xml:space="preserve">
          <source>Outputting PDFs with Django</source>
          <target state="translated">用Django输出PDF</target>
        </trans-unit>
        <trans-unit id="bfead61450a1bd4702affa28ce6ae7a44cf9aac3" translate="yes" xml:space="preserve">
          <source>Outputting forms as HTML</source>
          <target state="translated">将表格输出为HTML</target>
        </trans-unit>
        <trans-unit id="ff49716ffa83140e43327e6b1d6b0a707b986f35" translate="yes" xml:space="preserve">
          <source>Overridden model methods are not called on bulk operations</source>
          <target state="translated">在批量操作中不调用重写的模型方法。</target>
        </trans-unit>
        <trans-unit id="89d709369fdcd6212bf5ccd14fc13db032b3b30a" translate="yes" xml:space="preserve">
          <source>Overridden settings</source>
          <target state="translated">覆盖的设置</target>
        </trans-unit>
        <trans-unit id="035501ec3a242aa3e857c79b2e79a8403eb1c67a" translate="yes" xml:space="preserve">
          <source>Override &lt;code&gt;get_ordering_widget()&lt;/code&gt; if you need to provide a widget instance for use with &lt;code&gt;can_order&lt;/code&gt;:</source>
          <target state="translated">如果需要提供可与 &lt;code&gt;can_order&lt;/code&gt; 一起使用的小部件实例，则覆盖 &lt;code&gt;get_ordering_widget()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="66913097817c449f24ca2f4e0a17beb7a1288aca" translate="yes" xml:space="preserve">
          <source>Override the template used to generate the JavaScript slippy map. Default is &lt;code&gt;'gis/admin/openlayers.html'&lt;/code&gt;.</source>
          <target state="translated">覆盖用于生成JavaScript滑动贴图的模板。默认值为 &lt;code&gt;'gis/admin/openlayers.html'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="37aaab92c3e9edc5da33aa21afe333e610896754" translate="yes" xml:space="preserve">
          <source>Override this class method to add custom arguments accepted by the &lt;a href=&quot;../../ref/django-admin#django-admin-test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; management command. See &lt;a href=&quot;https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;argparse.ArgumentParser.add_argument()&lt;/code&gt;&lt;/a&gt; for details about adding arguments to a parser.</source>
          <target state="translated">重写此类方法以添加&lt;a href=&quot;../../ref/django-admin#django-admin-test&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt;管理命令接受的自定义参数。有关将参数添加到解析器的详细信息，请参见&lt;a href=&quot;https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;argparse.ArgumentParser.add_argument()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d12a4bd05a8c968e3b8465eece0297c044b668fa" translate="yes" xml:space="preserve">
          <source>Override this method in custom widgets that aren&amp;rsquo;t compatible with browser validation. For example, a WSYSIWG text editor widget backed by a hidden &lt;code&gt;textarea&lt;/code&gt; element may want to always return &lt;code&gt;False&lt;/code&gt; to avoid browser validation on the hidden field.</source>
          <target state="translated">在与浏览器验证不兼容的自定义窗口小部件中重写此方法。例如，由隐藏的 &lt;code&gt;textarea&lt;/code&gt; 元素支持的WSYSIWG文本编辑器小部件可能希望始终返回 &lt;code&gt;False&lt;/code&gt; ,以避免浏览器在隐藏字段上进行验证。</target>
        </trans-unit>
        <trans-unit id="dc563379c597beff2c355e9c43b5ce5092ed10eb" translate="yes" xml:space="preserve">
          <source>Override this method in order to customize template loading.</source>
          <target state="translated">重写此方法,以便自定义模板加载。</target>
        </trans-unit>
        <trans-unit id="1edb92cd9420ce4f36c8b1147f33da7b34cfcb35" translate="yes" xml:space="preserve">
          <source>Override this method in order to customize the context.</source>
          <target state="translated">重写此方法,以自定义上下文。</target>
        </trans-unit>
        <trans-unit id="ff8c2e9164239343752ee6d0f93598934f05a1be" translate="yes" xml:space="preserve">
          <source>Override this method to customize the lookups permitted for your &lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; subclass.</source>
          <target state="translated">重写此方法可自定义允许您的&lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;子类使用的查找。</target>
        </trans-unit>
        <trans-unit id="087100e8f13a40d6b39a5b10f146cf8a7e2290bd" translate="yes" xml:space="preserve">
          <source>Override this method to programmatically determine the maximum number of inline forms. For example, this may be based on the model instance (passed as the keyword argument &lt;code&gt;obj&lt;/code&gt;):</source>
          <target state="translated">重写此方法以编程方式确定最大内联表单数。例如，这可能基于模型实例（作为关键字参数 &lt;code&gt;obj&lt;/code&gt; 传递）：</target>
        </trans-unit>
        <trans-unit id="843de265883c0b6c28f62f1497d04b114f460694" translate="yes" xml:space="preserve">
          <source>Override this method to programmatically determine the minimum number of inline forms. For example, this may be based on the model instance (passed as the keyword argument &lt;code&gt;obj&lt;/code&gt;).</source>
          <target state="translated">重写此方法，以编程方式确定内联表单的最小数量。例如，这可以基于模型实例（作为关键字参数 &lt;code&gt;obj&lt;/code&gt; 传递）。</target>
        </trans-unit>
        <trans-unit id="feb44a6cc063864441d2898f84d3a6a1c8e295a0" translate="yes" xml:space="preserve">
          <source>Override this method to programmatically determine the number of extra inline forms. For example, this may be based on the model instance (passed as the keyword argument &lt;code&gt;obj&lt;/code&gt;):</source>
          <target state="translated">重写此方法以编程方式确定额外的内联表单的数量。例如，这可能基于模型实例（作为关键字参数 &lt;code&gt;obj&lt;/code&gt; 传递）：</target>
        </trans-unit>
        <trans-unit id="b3bc9b7fa0583dc0d7816f97efe6238a8a7d0bdd" translate="yes" xml:space="preserve">
          <source>Override this method to return a custom session model if you need one.</source>
          <target state="translated">如果需要的话,重写这个方法来返回一个自定义的会话模型。</target>
        </trans-unit>
        <trans-unit id="69caf77a19dbf07a315c7cad38827e71389d7d4d" translate="yes" xml:space="preserve">
          <source>Overrides the core &lt;a href=&quot;../django-admin#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; command if the &lt;code&gt;staticfiles&lt;/code&gt; app is &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;installed&lt;/code&gt;&lt;/a&gt; and adds automatic serving of static files. File serving doesn&amp;rsquo;t run through &lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果已&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;installed&lt;/code&gt; &lt;/a&gt; &lt;code&gt;staticfiles&lt;/code&gt; 应用，则覆盖core &lt;a href=&quot;../django-admin#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; &lt;/a&gt;命令，并添加自动提供的静态文件服务。文件服务不是通过&lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt;运行的。</target>
        </trans-unit>
        <trans-unit id="7fd821b1d08d73b122a6705bea6d2acf9f48415c" translate="yes" xml:space="preserve">
          <source>Overriding &lt;code&gt;clean()&lt;/code&gt; on a &lt;code&gt;ModelFormSet&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;ModelFormSet&lt;/code&gt; 上覆盖 &lt;code&gt;clean()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3dbe275b12e6b131bd5fa586a00fa885792a625f" translate="yes" xml:space="preserve">
          <source>Overriding admin templates</source>
          <target state="translated">覆盖管理模板</target>
        </trans-unit>
        <trans-unit id="9d2c7bf1e34177cfe3761f91d4d3744f7f20c177" translate="yes" xml:space="preserve">
          <source>Overriding built-in widget templates</source>
          <target state="translated">覆盖内置小部件模板</target>
        </trans-unit>
        <trans-unit id="4b77dbb64d3ddce7b029d8a7f94456a8966798f7" translate="yes" xml:space="preserve">
          <source>Overriding commands</source>
          <target state="translated">覆盖命令</target>
        </trans-unit>
        <trans-unit id="5c0cd00ef62c0bf0fe417d52cbf1fa9ba89a2b50" translate="yes" xml:space="preserve">
          <source>Overriding extra instance methods</source>
          <target state="translated">覆盖额外的实例方法</target>
        </trans-unit>
        <trans-unit id="c415121e5c9b1cf52fe819b5e91d79873486b23a" translate="yes" xml:space="preserve">
          <source>Overriding fields in a parent model leads to difficulties in areas such as initializing new instances (specifying which field is being initialized in &lt;code&gt;Model.__init__&lt;/code&gt;) and serialization. These are features which normal Python class inheritance doesn&amp;rsquo;t have to deal with in quite the same way, so the difference between Django model inheritance and Python class inheritance isn&amp;rsquo;t arbitrary.</source>
          <target state="translated">在父模型中覆盖字段会在诸如初始化新实例（指定要在 &lt;code&gt;Model.__init__&lt;/code&gt; 初始化哪个字段）和序列化等方面带来困难。这些功能是普通Python类继承不必以完全相同的方式处理的，因此Django模型继承和Python类继承之间的区别不是任意的。</target>
        </trans-unit>
        <trans-unit id="77d8038605b2fca489407ed088db1ceea011b7c8" translate="yes" xml:space="preserve">
          <source>Overriding from an app&amp;rsquo;s template directory</source>
          <target state="translated">从应用程序的模板目录覆盖</target>
        </trans-unit>
        <trans-unit id="f001aea88bb9e65ee9b4dc4471475534873ba06f" translate="yes" xml:space="preserve">
          <source>Overriding from the project&amp;rsquo;s templates directory</source>
          <target state="translated">从项目的模板目录覆盖</target>
        </trans-unit>
        <trans-unit id="3a3805c2ae70eb5cb4212efd0a99dd2d9a9443e4" translate="yes" xml:space="preserve">
          <source>Overriding methods on an &lt;code&gt;InlineFormSet&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;InlineFormSet&lt;/code&gt; 上的重写方法</target>
        </trans-unit>
        <trans-unit id="9c9c3a166212376bd13fb2b3e01f65a0fc27be26" translate="yes" xml:space="preserve">
          <source>Overriding predefined model methods</source>
          <target state="translated">覆盖预定义的模型方法</target>
        </trans-unit>
        <trans-unit id="e10ea40ee84dbb4909b38e93509627b1fa56998f" translate="yes" xml:space="preserve">
          <source>Overriding settings</source>
          <target state="translated">覆盖设置</target>
        </trans-unit>
        <trans-unit id="ed374ca602e69830c442fb16e8fb1a1ae0414a53" translate="yes" xml:space="preserve">
          <source>Overriding templates</source>
          <target state="translated">覆盖模板</target>
        </trans-unit>
        <trans-unit id="2397f08bfac55b9388cd6502b4efe24cb9bef22b" translate="yes" xml:space="preserve">
          <source>Overriding the clean() method</source>
          <target state="translated">覆盖clean()方法</target>
        </trans-unit>
        <trans-unit id="4441238c478d169181967bbd91e1d68e28320c76" translate="yes" xml:space="preserve">
          <source>Overriding the default admin site</source>
          <target state="translated">覆盖默认的管理站点</target>
        </trans-unit>
        <trans-unit id="785ec6b460a9a580366254f7cd31a754f6257d4c" translate="yes" xml:space="preserve">
          <source>Overriding the default fields</source>
          <target state="translated">覆盖默认字段</target>
        </trans-unit>
        <trans-unit id="1d41bd1399dd356573d969d293bfdbd01fcff8fd" translate="yes" xml:space="preserve">
          <source>Overriding this method allows mixins to setup instance attributes for reuse in child classes. When overriding this method, you must call &lt;code&gt;super()&lt;/code&gt;.</source>
          <target state="translated">重写此方法使mixin可以设置实例属性以在子类中重用。重写此方法时，必须调用 &lt;code&gt;super()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e8ce33c66b4853973572b69adb9d506516b80aab" translate="yes" xml:space="preserve">
          <source>Overriding this method provides the ability to modify session model data before it&amp;rsquo;s saved to database.</source>
          <target state="translated">覆盖此方法可以在将会话模型数据保存到数据库之前对其进行修改。</target>
        </trans-unit>
        <trans-unit id="b7b8a25c5d31e6f7580233bf7d54b9ce41735815" translate="yes" xml:space="preserve">
          <source>Overriding vs. replacing an admin template</source>
          <target state="translated">覆盖与替换管理模板。</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="92cb27d6d1803adc296b9c4279b80fa353e15573" translate="yes" xml:space="preserve">
          <source>Overview and a quick example</source>
          <target state="translated">概述和快速示例</target>
        </trans-unit>
        <trans-unit id="20156e9875f7da34802f85b44394c55cbb9a5f1b" translate="yes" xml:space="preserve">
          <source>PBKDF2 and bcrypt</source>
          <target state="translated">PBKDF2和bcrypt</target>
        </trans-unit>
        <trans-unit id="b343828bbf7d960e58d0a4ca891c7d1b51085027" translate="yes" xml:space="preserve">
          <source>PGRaster</source>
          <target state="translated">PGRaster</target>
        </trans-unit>
        <trans-unit id="6eb27d4d79f559d61d621cf0080cfccf437ac896" translate="yes" xml:space="preserve">
          <source>POST with invalid data (typically redisplay form with errors)</source>
          <target state="translated">带有无效数据的POST(通常是带有错误的重新显示表单)。</target>
        </trans-unit>
        <trans-unit id="294d17ead46c3e6fc07b57af85f32dcdd8ca9251" translate="yes" xml:space="preserve">
          <source>POST with valid data (process the data and typically redirect)</source>
          <target state="translated">带有有效数据的POST(处理数据并通常重定向)。</target>
        </trans-unit>
        <trans-unit id="0963d5c6b9415810b661524f7d28705a56affa59" translate="yes" xml:space="preserve">
          <source>PROJ</source>
          <target state="translated">PROJ</target>
        </trans-unit>
        <trans-unit id="474485b21e48b6e355a5bd7d43b0dcccf85d5fc9" translate="yes" xml:space="preserve">
          <source>PROJ.4</source>
          <target state="translated">PROJ.4</target>
        </trans-unit>
        <trans-unit id="c8598d7514c7ab48be8762685bf2ae515f08ef7f" translate="yes" xml:space="preserve">
          <source>PROJ.4 string</source>
          <target state="translated">PROJ.4字符串</target>
        </trans-unit>
        <trans-unit id="990257c6f86c20190b34ad65ebbfce57b12ac007" translate="yes" xml:space="preserve">
          <source>Package? App?</source>
          <target state="translated">包装?应用?</target>
        </trans-unit>
        <trans-unit id="83b51fffd5af70659c944e65a24a3fc7795b640c" translate="yes" xml:space="preserve">
          <source>Packaging your app</source>
          <target state="translated">包装您的应用程序</target>
        </trans-unit>
        <trans-unit id="fb06270f7c212baabc8749ffc36e49dc8f321548" translate="yes" xml:space="preserve">
          <source>Page</source>
          <target state="translated">Page</target>
        </trans-unit>
        <trans-unit id="7b0468ed348a7d65dd776d4abfc8e3474cc611b5" translate="yes" xml:space="preserve">
          <source>Page not found?</source>
          <target state="translated">没有找到页面?</target>
        </trans-unit>
        <trans-unit id="f9da63ed84d3f9029e123e169b354d8b685d5524" translate="yes" xml:space="preserve">
          <source>Page uses AJAX without any HTML form</source>
          <target state="translated">页面使用AJAX,没有任何HTML表单</target>
        </trans-unit>
        <trans-unit id="73be4714f17a88adb73ee8ec0ea70e3fc4fbe59f" translate="yes" xml:space="preserve">
          <source>Paginating a &lt;code&gt;ListView&lt;/code&gt;</source>
          <target state="translated">分页 &lt;code&gt;ListView&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="100325b8d6de92dc6ff09cd2c078133755bf274f" translate="yes" xml:space="preserve">
          <source>Pagination</source>
          <target state="translated">Pagination</target>
        </trans-unit>
        <trans-unit id="24533236e88c1d36ff37cc521374f5302ab40560" translate="yes" xml:space="preserve">
          <source>Paginator</source>
          <target state="translated">Paginator</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="38aa618f069cd612474bdf8ae436523f7aac024f" translate="yes" xml:space="preserve">
          <source>Parses a string and returns a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date&quot;&gt;&lt;code&gt;datetime.date&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">解析字符串并返回&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date&quot;&gt; &lt;code&gt;datetime.date&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="98c7984221adfb3491e17bb4d79c15079bcd1909" translate="yes" xml:space="preserve">
          <source>Parses a string and returns a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime.datetime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">解析字符串并返回&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime.datetime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e9c57985d10f102269be4dfc290ec569bb9c2439" translate="yes" xml:space="preserve">
          <source>Parses a string and returns a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.time&quot;&gt;&lt;code&gt;datetime.time&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">解析字符串并返回&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.time&quot;&gt; &lt;code&gt;datetime.time&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bcfafbf568bd9f3c5acfb3a5945e8adb847df2c2" translate="yes" xml:space="preserve">
          <source>Parses a string and returns a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt;&lt;code&gt;datetime.timedelta&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">解析字符串并返回&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt; &lt;code&gt;datetime.timedelta&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d78e9c7e2e0111470599d2080e66d8472ca42075" translate="yes" xml:space="preserve">
          <source>Parsing until another block tag</source>
          <target state="translated">解析直到另一个区块标签</target>
        </trans-unit>
        <trans-unit id="dd29a98e2f867432ac16b8458dbae0a86ebb6f7d" translate="yes" xml:space="preserve">
          <source>Parsing until another block tag, and saving contents</source>
          <target state="translated">解析直到另一个区块标签,并保存内容。</target>
        </trans-unit>
        <trans-unit id="edc6c4de665cd0969b267054f0bc15952c64a141" translate="yes" xml:space="preserve">
          <source>Partial indexes in abstract base classes</source>
          <target state="translated">抽象基类中的部分索引</target>
        </trans-unit>
        <trans-unit id="2e57cb42086ecd22d3778798ec47f16bab4305df" translate="yes" xml:space="preserve">
          <source>Particularly useful is passing 0 (zero) as the argument which will round the float to the nearest integer.</source>
          <target state="translated">特别有用的是传递0(0)作为参数,它将把浮点数舍入到最接近的整数。</target>
        </trans-unit>
        <trans-unit id="83106ebfb559316a40d0b624ad764b8f2c4fbdbe" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;commit=False&lt;/code&gt; to return the unsaved model instances:</source>
          <target state="translated">传递 &lt;code&gt;commit=False&lt;/code&gt; 以返回未保存的模型实例：</target>
        </trans-unit>
        <trans-unit id="a5907b5e14985eae2d17793f5fdff70061f9d381" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;configure()&lt;/code&gt; as many keyword arguments as you&amp;rsquo;d like, with each keyword argument representing a setting and its value. Each argument name should be all uppercase, with the same name as the settings described above. If a particular setting is not passed to &lt;code&gt;configure()&lt;/code&gt; and is needed at some later point, Django will use the default setting value.</source>
          <target state="translated">根据需要传递 &lt;code&gt;configure()&lt;/code&gt; 尽可能多的关键字参数，每个关键字参数代表一个设置及其值。每个参数名称均应全部为大写，且名称与上述设置相同。如果未将特定设置传递给 &lt;code&gt;configure()&lt;/code&gt; ，但稍后需要使用，则Django将使用默认设置值。</target>
        </trans-unit>
        <trans-unit id="3375ac34bc5b07b3abb647071876612620aa29e7" translate="yes" xml:space="preserve">
          <source>Pass an iterable of model instances (must all be of the same class) and the lookups or &lt;a href=&quot;#django.db.models.Prefetch&quot;&gt;&lt;code&gt;Prefetch&lt;/code&gt;&lt;/a&gt; objects you want to prefetch for. For example:</source>
          <target state="translated">传递可迭代的模型实例（必须全部属于同一类），并传递要为其预取的查找或&lt;a href=&quot;#django.db.models.Prefetch&quot;&gt; &lt;code&gt;Prefetch&lt;/code&gt; &lt;/a&gt;对象。例如：</target>
        </trans-unit>
        <trans-unit id="0bc1e5a920414c3a7a617932bfa1cb74ddf33ca8" translate="yes" xml:space="preserve">
          <source>Pass any function (that takes no arguments) to &lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt;&lt;code&gt;on_commit()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">将任何函数（不带参数）传递给&lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt; &lt;code&gt;on_commit()&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="dff14d3715358315559de87e93047676754ed230" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;RunPython.noop&lt;/code&gt; method to &lt;code&gt;code&lt;/code&gt; or &lt;code&gt;reverse_code&lt;/code&gt; when you want the operation not to do anything in the given direction. This is especially useful in making the operation reversible.</source>
          <target state="translated">如果您希望操作在给定方向上不执行任何操作， &lt;code&gt;RunPython.noop&lt;/code&gt; 方法传递给 &lt;code&gt;code&lt;/code&gt; 或 &lt;code&gt;reverse_code&lt;/code&gt; 。这对于使操作可逆特别有用。</target>
        </trans-unit>
        <trans-unit id="22714a0e2f564fdc8bb2133e6f31fe4f021d1013" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;RunSQL.noop&lt;/code&gt; attribute to &lt;code&gt;sql&lt;/code&gt; or &lt;code&gt;reverse_sql&lt;/code&gt; when you want the operation not to do anything in the given direction. This is especially useful in making the operation reversible.</source>
          <target state="translated">如果您希望操作在给定方向上不执行任何操作， &lt;code&gt;RunSQL.noop&lt;/code&gt; 属性传递给 &lt;code&gt;sql&lt;/code&gt; 或 &lt;code&gt;reverse_sql&lt;/code&gt; 。这对于使操作可逆特别有用。</target>
        </trans-unit>
        <trans-unit id="cd27a54101bdeb3a00cc6b1e71a3a6c154544800" translate="yes" xml:space="preserve">
          <source>Pass the page number via the &lt;code&gt;page&lt;/code&gt; query-string parameter. For example, a URL would look like this:</source>
          <target state="translated">通过 &lt;code&gt;page&lt;/code&gt; query-string参数传递页码。例如，URL如下所示：</target>
        </trans-unit>
        <trans-unit id="ebbdcfc4d351bffe1099929547cfbf663c8041d6" translate="yes" xml:space="preserve">
          <source>Passed to the &lt;a href=&quot;#django.contrib.gis.gdal.GDALBand.data&quot;&gt;&lt;code&gt;data()&lt;/code&gt;&lt;/a&gt; method</source>
          <target state="translated">传递给&lt;a href=&quot;#django.contrib.gis.gdal.GDALBand.data&quot;&gt; &lt;code&gt;data()&lt;/code&gt; &lt;/a&gt;方法</target>
        </trans-unit>
        <trans-unit id="867c510983ef9ee90b94d79234302035e0ceebda" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;Value(None)&lt;/code&gt; to &lt;code&gt;expression1&lt;/code&gt; is prohibited on Oracle since Oracle doesn&amp;rsquo;t accept &lt;code&gt;NULL&lt;/code&gt; as the first argument.</source>
          <target state="translated">在Oracle上禁止将 &lt;code&gt;Value(None)&lt;/code&gt; 传递给 &lt;code&gt;expression1&lt;/code&gt; ，因为Oracle不接受 &lt;code&gt;NULL&lt;/code&gt; 作为第一个参数。</target>
        </trans-unit>
        <trans-unit id="a499daa7841f330b02ab40e38530ebc188948246" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;nowait=True&lt;/code&gt;, &lt;code&gt;skip_locked=True&lt;/code&gt;, or &lt;code&gt;of&lt;/code&gt; to &lt;code&gt;select_for_update()&lt;/code&gt; using database backends that do not support these options, such as MySQL, raises a &lt;a href=&quot;../exceptions#django.db.NotSupportedError&quot;&gt;&lt;code&gt;NotSupportedError&lt;/code&gt;&lt;/a&gt;. This prevents code from unexpectedly blocking.</source>
          <target state="translated">路过 &lt;code&gt;nowait=True&lt;/code&gt; ， &lt;code&gt;skip_locked=True&lt;/code&gt; ，或 &lt;code&gt;of&lt;/code&gt; 到 &lt;code&gt;select_for_update()&lt;/code&gt; 使用不支持这些选项，如MySQL数据库后端，提出了&lt;a href=&quot;../exceptions#django.db.NotSupportedError&quot;&gt; &lt;code&gt;NotSupportedError&lt;/code&gt; &lt;/a&gt;。这样可以防止代码意外阻塞。</target>
        </trans-unit>
        <trans-unit id="d2adeb387e4441046ff1e9c147e8419b6f1c14e6" translate="yes" xml:space="preserve">
          <source>Passing custom parameters to formset forms</source>
          <target state="translated">将自定义参数传递给表单集表单</target>
        </trans-unit>
        <trans-unit id="e4bc883064fdec73117f9dc706643b24af16c727" translate="yes" xml:space="preserve">
          <source>Passing extra options to &lt;code&gt;include()&lt;/code&gt;</source>
          <target state="translated">传递额外的选项到 &lt;code&gt;include()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60efd02f5ed0f44b53a44ad3313f510fedaad832" translate="yes" xml:space="preserve">
          <source>Passing extra options to view functions</source>
          <target state="translated">通过额外的选项来查看功能</target>
        </trans-unit>
        <trans-unit id="7bc32ea8b1ae65cd9736e4019f349cc45bac8346" translate="yes" xml:space="preserve">
          <source>Passing iterators</source>
          <target state="translated">传递迭代器</target>
        </trans-unit>
        <trans-unit id="dc11d2c496ab8e7196b236f460f54cc548ef4e7f" translate="yes" xml:space="preserve">
          <source>Passing parameters into &lt;code&gt;raw()&lt;/code&gt;</source>
          <target state="translated">将参数传递到 &lt;code&gt;raw()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26826b46bf6032bb6290da65c715fbb888d4e9b7" translate="yes" xml:space="preserve">
          <source>Passing strings</source>
          <target state="translated">传递字符串</target>
        </trans-unit>
        <trans-unit id="42021a29f4d390299499ad18ee376fba89d46f3c" translate="yes" xml:space="preserve">
          <source>Passing template variables to the tag</source>
          <target state="translated">将模板变量传递给标签</target>
        </trans-unit>
        <trans-unit id="cb1d265a07df179d0e372c15df3fbfebc633fcb8" translate="yes" xml:space="preserve">
          <source>Password change</source>
          <target state="translated">密码更改</target>
        </trans-unit>
        <trans-unit id="53d05af070a4f337a22391045ae28e52feb0c7fc" translate="yes" xml:space="preserve">
          <source>Password change done</source>
          <target state="translated">密码更改完毕</target>
        </trans-unit>
        <trans-unit id="b9af60b418a51c6c11205cb77e92e77ac8901139" translate="yes" xml:space="preserve">
          <source>Password hashing</source>
          <target state="translated">密码散列</target>
        </trans-unit>
        <trans-unit id="fdbf90a060dfba26686234af55512f4b78dc775c" translate="yes" xml:space="preserve">
          <source>Password management in Django</source>
          <target state="translated">Django中的密码管理</target>
        </trans-unit>
        <trans-unit id="97938456acff794b32791967276a916c34ef7479" translate="yes" xml:space="preserve">
          <source>Password management is something that should generally not be reinvented unnecessarily, and Django endeavors to provide a secure and flexible set of tools for managing user passwords. This document describes how Django stores passwords, how the storage hashing can be configured, and some utilities to work with hashed passwords.</source>
          <target state="translated">密码管理是一般情况下不应该进行不必要的重新发明,Django努力提供一套安全灵活的工具来管理用户密码。本文档介绍了Django如何存储密码,如何配置存储哈希,以及一些处理哈希密码的实用程序。</target>
        </trans-unit>
        <trans-unit id="42747c3134a14a08e853bd9298741b02f392325d" translate="yes" xml:space="preserve">
          <source>Password strength checking</source>
          <target state="translated">密码强度检查</target>
        </trans-unit>
        <trans-unit id="72e845c3a0535ba2a4b8b38cd50be31dfab9b536" translate="yes" xml:space="preserve">
          <source>Password to use for the SMTP server defined in &lt;a href=&quot;#std:setting-EMAIL_HOST&quot;&gt;&lt;code&gt;EMAIL_HOST&lt;/code&gt;&lt;/a&gt;. This setting is used in conjunction with &lt;a href=&quot;#std:setting-EMAIL_HOST_USER&quot;&gt;&lt;code&gt;EMAIL_HOST_USER&lt;/code&gt;&lt;/a&gt; when authenticating to the SMTP server. If either of these settings is empty, Django won&amp;rsquo;t attempt authentication.</source>
          <target state="translated">用于&lt;a href=&quot;#std:setting-EMAIL_HOST&quot;&gt; &lt;code&gt;EMAIL_HOST&lt;/code&gt; 中&lt;/a&gt;定义的SMTP服务器的密码。验证SMTP服务器时，此设置与&lt;a href=&quot;#std:setting-EMAIL_HOST_USER&quot;&gt; &lt;code&gt;EMAIL_HOST_USER&lt;/code&gt; &lt;/a&gt;结合使用。如果这些设置中的任何一个为空，则Django都不会尝试身份验证。</target>
        </trans-unit>
        <trans-unit id="f78b3350a7bcdb589a957e23ff81fad31b3e2773" translate="yes" xml:space="preserve">
          <source>Password upgrading</source>
          <target state="translated">密码升级</target>
        </trans-unit>
        <trans-unit id="82bfb41a774975db54411718143f0e70ce9a7688" translate="yes" xml:space="preserve">
          <source>Password upgrading without requiring a login</source>
          <target state="translated">无需登录即可升级密码</target>
        </trans-unit>
        <trans-unit id="cfb75c3a8b84a83f1313ca1c5eb4ad97afb6c789" translate="yes" xml:space="preserve">
          <source>Password validation</source>
          <target state="translated">密码验证</target>
        </trans-unit>
        <trans-unit id="f63d7362dbbfa3509b73dc229d682d018ee48cc6" translate="yes" xml:space="preserve">
          <source>Password validation can prevent the use of many types of weak passwords. However, the fact that a password passes all the validators doesn&amp;rsquo;t guarantee that it is a strong password. There are many factors that can weaken a password that are not detectable by even the most advanced password validators.</source>
          <target state="translated">密码验证可以防止使用多种类型的弱密码。但是，密码通过所有验证程序这一事实并不能保证它是一个强密码。有许多因素可以削弱密码，即使最高级的密码验证程序也无法检测到这些因素。</target>
        </trans-unit>
        <trans-unit id="030ddae36a366a4e884ba702f1f24e629d2fafa4" translate="yes" xml:space="preserve">
          <source>Password validation is configured in the &lt;a href=&quot;../../ref/settings#std:setting-AUTH_PASSWORD_VALIDATORS&quot;&gt;&lt;code&gt;AUTH_PASSWORD_VALIDATORS&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="translated">密码验证是在&lt;a href=&quot;../../ref/settings#std:setting-AUTH_PASSWORD_VALIDATORS&quot;&gt; &lt;code&gt;AUTH_PASSWORD_VALIDATORS&lt;/code&gt; &lt;/a&gt;设置中配置的：</target>
        </trans-unit>
        <trans-unit id="3dd8163758541d100df9ffeb599a921e907953ed" translate="yes" xml:space="preserve">
          <source>Path converters</source>
          <target state="translated">路径转换器</target>
        </trans-unit>
        <trans-unit id="d3f7215820c20d73fb1520647a2cfe9ae2d19c59" translate="yes" xml:space="preserve">
          <source>Path matching was added.</source>
          <target state="translated">增加了路径匹配。</target>
        </trans-unit>
        <trans-unit id="1c611af2558850679a78f47f5579ae407fea6cdb" translate="yes" xml:space="preserve">
          <source>Path to a custom template that will be used by the admin site app index view.</source>
          <target state="translated">管理网站应用索引视图将使用的自定义模板的路径。</target>
        </trans-unit>
        <trans-unit id="a3c17c88e105eb850a5ad023c10109e7c8f035c4" translate="yes" xml:space="preserve">
          <source>Path to a custom template that will be used by the admin site login view.</source>
          <target state="translated">管理网站登录视图将使用的自定义模板的路径。</target>
        </trans-unit>
        <trans-unit id="0a6b4a4caccef224659a85c6f9f94574b9f64e63" translate="yes" xml:space="preserve">
          <source>Path to a custom template that will be used by the admin site logout view.</source>
          <target state="translated">管理网站注销视图将使用的自定义模板的路径。</target>
        </trans-unit>
        <trans-unit id="af6ee8fc926db110165f33c61aa6ff661bccdf24" translate="yes" xml:space="preserve">
          <source>Path to a custom template that will be used by the admin site main index view.</source>
          <target state="translated">管理网站主索引视图将使用的自定义模板的路径。</target>
        </trans-unit>
        <trans-unit id="b0a61f6a8b7ef4c17116725efb1139996550e882" translate="yes" xml:space="preserve">
          <source>Path to a custom template that will be used by the admin site password change done view.</source>
          <target state="translated">自定义模板的路径,该模板将被管理员网站密码修改完成后的视图使用。</target>
        </trans-unit>
        <trans-unit id="f95c10d6eac86f86888cc76f83fcea345c83bd8b" translate="yes" xml:space="preserve">
          <source>Path to a custom template that will be used by the admin site password change view.</source>
          <target state="translated">管理网站密码修改视图将使用的自定义模板的路径。</target>
        </trans-unit>
        <trans-unit id="4ecf349cf4d3adf10399fee85596d3bb4c52d469" translate="yes" xml:space="preserve">
          <source>Path to a custom template, used by &lt;a href=&quot;#django.contrib.admin.ModelAdmin.add_view&quot;&gt;&lt;code&gt;add_view()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">自定义模板的路径，由&lt;a href=&quot;#django.contrib.admin.ModelAdmin.add_view&quot;&gt; &lt;code&gt;add_view()&lt;/code&gt; 使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="88f3bb0e37e80c6a1bcc036d5e5fdf3dea300ed8" translate="yes" xml:space="preserve">
          <source>Path to a custom template, used by &lt;a href=&quot;#django.contrib.admin.ModelAdmin.change_view&quot;&gt;&lt;code&gt;change_view()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">自定义模板的路径，由&lt;a href=&quot;#django.contrib.admin.ModelAdmin.change_view&quot;&gt; &lt;code&gt;change_view()&lt;/code&gt; 使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2c7220fce158453823a1b66b37aca5acee702105" translate="yes" xml:space="preserve">
          <source>Path to a custom template, used by &lt;a href=&quot;#django.contrib.admin.ModelAdmin.changelist_view&quot;&gt;&lt;code&gt;changelist_view()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">自定义模板的路径，由&lt;a href=&quot;#django.contrib.admin.ModelAdmin.changelist_view&quot;&gt; &lt;code&gt;changelist_view()&lt;/code&gt; 使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f591d246cfdef823abf87f8a77ea702e1c10bd2" translate="yes" xml:space="preserve">
          <source>Path to a custom template, used by &lt;a href=&quot;#django.contrib.admin.ModelAdmin.delete_view&quot;&gt;&lt;code&gt;delete_view()&lt;/code&gt;&lt;/a&gt; for displaying a confirmation page when deleting one or more objects.</source>
          <target state="translated">自定义模板的路径，由&lt;a href=&quot;#django.contrib.admin.ModelAdmin.delete_view&quot;&gt; &lt;code&gt;delete_view()&lt;/code&gt; &lt;/a&gt;用于在删除一个或多个对象时显示确认页面。</target>
        </trans-unit>
        <trans-unit id="0c2e8f0a12128c3ab584505f6c0757977a466d7d" translate="yes" xml:space="preserve">
          <source>Path to a custom template, used by &lt;a href=&quot;#django.contrib.admin.ModelAdmin.history_view&quot;&gt;&lt;code&gt;history_view()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">自定义模板的路径，由&lt;a href=&quot;#django.contrib.admin.ModelAdmin.history_view&quot;&gt; &lt;code&gt;history_view()&lt;/code&gt; 使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6c63c61822ce8565bbff9ba9c14ec706fad15416" translate="yes" xml:space="preserve">
          <source>Path to a custom template, used by &lt;a href=&quot;#django.contrib.admin.ModelAdmin.response_add&quot;&gt;&lt;code&gt;response_add()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.contrib.admin.ModelAdmin.response_change&quot;&gt;&lt;code&gt;response_change()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#django.contrib.admin.ModelAdmin.response_delete&quot;&gt;&lt;code&gt;response_delete()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">自定义模板的路径，由&lt;a href=&quot;#django.contrib.admin.ModelAdmin.response_add&quot;&gt; &lt;code&gt;response_add()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#django.contrib.admin.ModelAdmin.response_change&quot;&gt; &lt;code&gt;response_change()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.contrib.admin.ModelAdmin.response_delete&quot;&gt; &lt;code&gt;response_delete()&lt;/code&gt; 使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="84e2190f2c73e7f762bcc09f1d74e0a065af6f13" translate="yes" xml:space="preserve">
          <source>Path to a custom template, used by the &lt;code&gt;delete_selected&lt;/code&gt; action method for displaying a confirmation page when deleting one or more objects. See the &lt;a href=&quot;actions&quot;&gt;actions documentation&lt;/a&gt;.</source>
          <target state="translated">自定义模板的路径，由 &lt;code&gt;delete_selected&lt;/code&gt; 操作方法使用，用于在删除一个或多个对象时显示确认页面。请参阅&lt;a href=&quot;actions&quot;&gt;操作文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f95dfae2a5316331007fb6a8e1f5453be2d906e0" translate="yes" xml:space="preserve">
          <source>Paths in asset definitions</source>
          <target state="translated">资产定义中的路径</target>
        </trans-unit>
        <trans-unit id="53abecb8bf2af146e43fc25704616a8595335af7" translate="yes" xml:space="preserve">
          <source>Paths used to specify assets can be either relative or absolute. If a path starts with &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt;, it will be interpreted as an absolute path, and left as-is. All other paths will be prepended with the value of the appropriate prefix. If the &lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt;&lt;code&gt;django.contrib.staticfiles&lt;/code&gt;&lt;/a&gt; app is installed, it will be used to serve assets.</source>
          <target state="translated">用于指定资产的路径可以是相对的或绝对的。如果路径以 &lt;code&gt;/&lt;/code&gt; ， &lt;code&gt;http://&lt;/code&gt; 或 &lt;code&gt;https://&lt;/code&gt; 开头，它将被解释为绝对路径，并保持原样。所有其他路径将以适当前缀的值开头。如果安装了&lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt; &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; &lt;/a&gt;应用程序，它将用于提供资产。</target>
        </trans-unit>
        <trans-unit id="e2feeb9a8c48b959a84dc56a27e5d342951587fd" translate="yes" xml:space="preserve">
          <source>Patterns don&amp;rsquo;t search GET and POST parameters, or the domain name. For example, in a request to &lt;code&gt;https://www.example.com/myapp/&lt;/code&gt;, the URLconf will look for &lt;code&gt;myapp/&lt;/code&gt;. In a request to &lt;code&gt;https://www.example.com/myapp/?page=3&lt;/code&gt;, the URLconf will also look for &lt;code&gt;myapp/&lt;/code&gt;.</source>
          <target state="translated">模式不搜索GET和POST参数或域名。例如，在对 &lt;code&gt;https://www.example.com/myapp/&lt;/code&gt; 的请求中，URLconf将寻找 &lt;code&gt;myapp/&lt;/code&gt; 。在对 &lt;code&gt;https://www.example.com/myapp/?page=3&lt;/code&gt; 的请求中，URLconf也将寻找 &lt;code&gt;myapp/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b78a58c376655ac544fdd20d4725693c93da7d0" translate="yes" xml:space="preserve">
          <source>Pay extra attention if you set new default values for arguments in the &lt;code&gt;Field&lt;/code&gt; superclass; you want to make sure they&amp;rsquo;re always included, rather than disappearing if they take on the old default value.</source>
          <target state="translated">如果在 &lt;code&gt;Field&lt;/code&gt; 超类中为参数设置新的默认值，请格外注意；您想确保始终将其包括在内，而不是采用旧的默认值就消失了。</target>
        </trans-unit>
        <trans-unit id="594c442547cc35487cd009181ae20319c80c5a71" translate="yes" xml:space="preserve">
          <source>Pay particular attention to backwards incompatible changes to get a clear idea of what will be needed for a successful upgrade.</source>
          <target state="translated">要特别注意向后不兼容的变化,以清楚地了解成功升级所需的条件。</target>
        </trans-unit>
        <trans-unit id="e398f12507cb84c1ebf8a01e1677802a0e657315" translate="yes" xml:space="preserve">
          <source>Per-object summaries can be generated using the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.annotate&quot;&gt;&lt;code&gt;annotate()&lt;/code&gt;&lt;/a&gt; clause. When an &lt;code&gt;annotate()&lt;/code&gt; clause is specified, each object in the &lt;code&gt;QuerySet&lt;/code&gt; will be annotated with the specified values.</source>
          <target state="translated">可以使用&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.annotate&quot;&gt; &lt;code&gt;annotate()&lt;/code&gt; &lt;/a&gt;子句生成每个对象的摘要。当指定 &lt;code&gt;annotate()&lt;/code&gt; 子句时，将使用指定的值对 &lt;code&gt;QuerySet&lt;/code&gt; 中的每个对象进行注释。</target>
        </trans-unit>
        <trans-unit id="b8c281fc601c15be7b044f13ee8e38598899e21d" translate="yes" xml:space="preserve">
          <source>Per-request transactions and streaming responses</source>
          <target state="translated">按请求处理和流式响应</target>
        </trans-unit>
        <trans-unit id="67f3db8d0939383b7e5120b105c86c3bd6dbf1be" translate="yes" xml:space="preserve">
          <source>Percent Rank</source>
          <target state="translated">百分比 排名</target>
        </trans-unit>
        <trans-unit id="f99f33983bd0aae5f91d07dd7ab8345f193cc3e5" translate="yes" xml:space="preserve">
          <source>Perform the command&amp;rsquo;s actions for &lt;code&gt;app_config&lt;/code&gt;, which will be an &lt;a href=&quot;../ref/applications#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; instance corresponding to an application label given on the command line.</source>
          <target state="translated">对 &lt;code&gt;app_config&lt;/code&gt; 执行命令的操作，这将是与命令行上给定的应用程序标签对应的&lt;a href=&quot;../ref/applications#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="d095abe3a9010ab49f3950b5b1561b6615ba109b" translate="yes" xml:space="preserve">
          <source>Perform the command&amp;rsquo;s actions for &lt;code&gt;label&lt;/code&gt;, which will be the string as given on the command line.</source>
          <target state="translated">对 &lt;code&gt;label&lt;/code&gt; 执行命令的操作，该操作将是命令行上给出的字符串。</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="2b80df3bed690b3128861d9e152f675ea8826d81" translate="yes" xml:space="preserve">
          <source>Performance and optimization</source>
          <target state="translated">性能和优化</target>
        </trans-unit>
        <trans-unit id="bcd699a0cdae62872f3edfba9239ab5f07470457" translate="yes" xml:space="preserve">
          <source>Performance and optimization overview</source>
          <target state="translated">性能和优化概述</target>
        </trans-unit>
        <trans-unit id="87b4f4b3bfcd6886b8193c17c86c824cb40213a8" translate="yes" xml:space="preserve">
          <source>Performance benchmarking</source>
          <target state="translated">业绩基准</target>
        </trans-unit>
        <trans-unit id="0cb883fc85b1fd84aaebb7319c682c586a065641" translate="yes" xml:space="preserve">
          <source>Performance considerations</source>
          <target state="translated">性能方面的考虑</target>
        </trans-unit>
        <trans-unit id="ae714eedb21d7ab1528a4ae82422cec5289d2845" translate="yes" xml:space="preserve">
          <source>Performance considerations for large datasets</source>
          <target state="translated">大型数据集的性能考虑</target>
        </trans-unit>
        <trans-unit id="8ee3b2dc04e0215d9a974d428a5be7af6d478312" translate="yes" xml:space="preserve">
          <source>Performance considerations with ordering and sorting</source>
          <target state="translated">排序和分类的性能考虑</target>
        </trans-unit>
        <trans-unit id="57eb76df8c228a52fa0a32fe3f7d805858d345f1" translate="yes" xml:space="preserve">
          <source>Performance issues paginating large &lt;code&gt;QuerySet&lt;/code&gt;s</source>
          <target state="translated">分页大型 &lt;code&gt;QuerySet&lt;/code&gt; 的性能问题</target>
        </trans-unit>
        <trans-unit id="7ceaba33d5069dbda23239422436b2c95b3fbf96" translate="yes" xml:space="preserve">
          <source>Performance optimizations</source>
          <target state="translated">性能优化</target>
        </trans-unit>
        <trans-unit id="5becd8e661b6a97e9458257ed85b17fc0d3e0068" translate="yes" xml:space="preserve">
          <source>Performance optimizations are another category of trade-offs with convenience. For instance, caching is useful in production, less so for local development. Error reporting needs are also widely different.</source>
          <target state="translated">性能优化是另一类与便利性的权衡。例如,缓存在生产中很有用,在本地开发中就不那么有用了。错误报告的需求也大不相同。</target>
        </trans-unit>
        <trans-unit id="158f80dec0b85939f0f5846ccb6bc0da934a4aff" translate="yes" xml:space="preserve">
          <source>Performing actions after commit</source>
          <target state="translated">提交后执行操作</target>
        </trans-unit>
        <trans-unit id="cd0fb10828b82b902b570a4024cf081d37128641" translate="yes" xml:space="preserve">
          <source>Performing extra work</source>
          <target state="translated">从事额外工作</target>
        </trans-unit>
        <trans-unit id="350310b0607f1d6331a0ddbcedd2fc32ffb465f7" translate="yes" xml:space="preserve">
          <source>Performing global post-test teardown.</source>
          <target state="translated">进行全局性的测试后拆解。</target>
        </trans-unit>
        <trans-unit id="cc61a8f27b7c24e7cb629cf9d4b96984b5a39b6d" translate="yes" xml:space="preserve">
          <source>Performing global pre-test setup.</source>
          <target state="translated">进行全局性的测试前设置。</target>
        </trans-unit>
        <trans-unit id="71e37d0adb6adfac736d37bfa52a53ea1e3bf6e1" translate="yes" xml:space="preserve">
          <source>Performing raw SQL queries</source>
          <target state="translated">执行原始SQL查询</target>
        </trans-unit>
        <trans-unit id="cad75e52264fcd20385b958231648b076610e84b" translate="yes" xml:space="preserve">
          <source>Performing raw queries</source>
          <target state="translated">执行原始查询</target>
        </trans-unit>
        <trans-unit id="cc3b1021e9a86a3acfa73ba992dd59266658de10" translate="yes" xml:space="preserve">
          <source>Performs URL rewriting based on the &lt;a href=&quot;settings#std:setting-APPEND_SLASH&quot;&gt;&lt;code&gt;APPEND_SLASH&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;settings#std:setting-PREPEND_WWW&quot;&gt;&lt;code&gt;PREPEND_WWW&lt;/code&gt;&lt;/a&gt; settings.</source>
          <target state="translated">根据&lt;a href=&quot;settings#std:setting-APPEND_SLASH&quot;&gt; &lt;code&gt;APPEND_SLASH&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;settings#std:setting-PREPEND_WWW&quot;&gt; &lt;code&gt;PREPEND_WWW&lt;/code&gt; &lt;/a&gt;设置执行URL重写。</target>
        </trans-unit>
        <trans-unit id="d29a15d48c3ff7247ebc6f6ef2b637ea97801d97" translate="yes" xml:space="preserve">
          <source>Performs an SQL delete query on all rows in the &lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; and returns the number of objects deleted and a dictionary with the number of deletions per object type.</source>
          <target state="translated">在&lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; 中的&lt;/a&gt;所有行上执行SQL删除查询，并返回删除的对象数和带有每种对象类型的删除数的字典。</target>
        </trans-unit>
        <trans-unit id="c114706f49d4f5dc002f7814b9df80c8a2ed84f2" translate="yes" xml:space="preserve">
          <source>Performs an SQL update query for the specified fields, and returns the number of rows matched (which may not be equal to the number of rows updated if some rows already have the new value).</source>
          <target state="translated">对指定的字段执行SQL更新查询,并返回匹配的行数(如果有些行已经有了新的值,则可能不等于更新的行数)。</target>
        </trans-unit>
        <trans-unit id="b48ee18bc781dc21a08722b397a52297df32eff1" translate="yes" xml:space="preserve">
          <source>Performs any cleaning on the &lt;code&gt;username&lt;/code&gt; (e.g. stripping LDAP DN information) prior to using it to get or create a user object. Returns the cleaned username.</source>
          <target state="translated">在使用 &lt;code&gt;username&lt;/code&gt; 获取或创建用户对象之前，请对其进行任何清理（例如，剥离LDAP DN信息）。返回清理的用户名。</target>
        </trans-unit>
        <trans-unit id="246a818df13cbbbbfc866f12a62fd447eac03353" translate="yes" xml:space="preserve">
          <source>Performs global post-test teardown, such as removing instrumentation from the template system and restoring normal email services.</source>
          <target state="translated">进行全局性的测试后拆解,如从模板系统中删除仪器设备,恢复正常的邮件服务。</target>
        </trans-unit>
        <trans-unit id="a8b30211935a430f6cdf20f168e2eba4f87d8bb3" translate="yes" xml:space="preserve">
          <source>Performs global pre-test setup, such as installing instrumentation for the template rendering system and setting up the dummy email outbox.</source>
          <target state="translated">执行全局性的测试前设置,如为模板渲染系统安装仪器,设置虚拟的电子邮件发件箱。</target>
        </trans-unit>
        <trans-unit id="7b4fe6ff4dcae7c6f94c35e727b63487f7fdb00c" translate="yes" xml:space="preserve">
          <source>Perhaps logged-in admin users should be allowed to see unpublished &lt;code&gt;Questions&lt;/code&gt;, but not ordinary visitors. Again: whatever needs to be added to the software to accomplish this should be accompanied by a test, whether you write the test first and then make the code pass the test, or work out the logic in your code first and then write a test to prove it.</source>
          <target state="translated">也许应该允许已登录的管理员用户看到未发布的 &lt;code&gt;Questions&lt;/code&gt; ，但不能看到普通的访问者。再说一遍：为完成此操作需要添加到软件中的任何内容都应伴随测试，无论是先编写测试然后使代码通过测试，还是先编写代码中的逻辑然后编写测试以证明给我看。</target>
        </trans-unit>
        <trans-unit id="0e9fe7d5a36abc41d023282aff0764ffd9a1e922" translate="yes" xml:space="preserve">
          <source>Perhaps, for instance, your site includes a view whose results depend on several expensive queries, the results of which change at different intervals. In this case, it would not be ideal to use the full-page caching that the per-site or per-view cache strategies offer, because you wouldn&amp;rsquo;t want to cache the entire result (since some of the data changes often), but you&amp;rsquo;d still want to cache the results that rarely change.</source>
          <target state="translated">例如，也许您的站点包含一个视图，该视图的结果取决于多个昂贵的查询，这些查询的结果以不同的间隔更改。在这种情况下，使用每个站点或每个视图缓存策略提供的全页缓存是不理想的，因为您不想缓存整个结果（因为某些数据经常更改），但您仍想缓存很少更改的结果。</target>
        </trans-unit>
        <trans-unit id="8faebcc441548e3c376bd0355caeb12cebb88eba" translate="yes" xml:space="preserve">
          <source>Permission caching</source>
          <target state="translated">权限缓存</target>
        </trans-unit>
        <trans-unit id="d06d55570938d12f87db3bf2b48caa9de22d9c67" translate="yes" xml:space="preserve">
          <source>Permissions</source>
          <target state="translated">Permissions</target>
        </trans-unit>
        <trans-unit id="5d919afbd469ebf76a8be7e58815187b8fe8bc59" translate="yes" xml:space="preserve">
          <source>Permissions and Authorization</source>
          <target state="translated">许可和授权</target>
        </trans-unit>
        <trans-unit id="a47f3fd0644dda3ff0b65116c2c9135682fd4f23" translate="yes" xml:space="preserve">
          <source>Permissions and authorization</source>
          <target state="translated">许可和授权</target>
        </trans-unit>
        <trans-unit id="6042a22bc7d97a7cd78da919ef0f626d92138bbf" translate="yes" xml:space="preserve">
          <source>Permissions can be set not only per type of object, but also per specific object instance. By using the &lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.has_view_permission&quot;&gt;&lt;code&gt;has_view_permission()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.has_add_permission&quot;&gt;&lt;code&gt;has_add_permission()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.has_change_permission&quot;&gt;&lt;code&gt;has_change_permission()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.has_delete_permission&quot;&gt;&lt;code&gt;has_delete_permission()&lt;/code&gt;&lt;/a&gt; methods provided by the &lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; class, it is possible to customize permissions for different object instances of the same type.</source>
          <target state="translated">不仅可以按对象类型设置权限，还可以按特定对象实例设置权限。通过使用&lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;类提供的&lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.has_view_permission&quot;&gt; &lt;code&gt;has_view_permission()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.has_add_permission&quot;&gt; &lt;code&gt;has_add_permission()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.has_change_permission&quot;&gt; &lt;code&gt;has_change_permission()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.has_delete_permission&quot;&gt; &lt;code&gt;has_delete_permission()&lt;/code&gt; &lt;/a&gt;方法，可以为同一类型的不同对象实例自定义权限。</target>
        </trans-unit>
        <trans-unit id="fbff237369de06d317a0b658feaf770230fade6a" translate="yes" xml:space="preserve">
          <source>Permissions: Binary (yes/no) flags designating whether a user may perform a certain task.</source>
          <target state="translated">权限。二进制(是/否)标志,表示用户是否可以执行某项任务。</target>
        </trans-unit>
        <trans-unit id="7a346cd10ffe699546f235f362a53bac9f81fa99" translate="yes" xml:space="preserve">
          <source>Persistent connections</source>
          <target state="translated">持久连接</target>
        </trans-unit>
        <trans-unit id="5527c702a1226ed849c17bf8545ec1a197d478da" translate="yes" xml:space="preserve">
          <source>Persistent connections avoid the overhead of re-establishing a connection to the database in each request. They&amp;rsquo;re controlled by the &lt;a href=&quot;settings#std:setting-CONN_MAX_AGE&quot;&gt;&lt;code&gt;CONN_MAX_AGE&lt;/code&gt;&lt;/a&gt; parameter which defines the maximum lifetime of a connection. It can be set independently for each database.</source>
          <target state="translated">持久连接避免了在每个请求中重新建立与数据库的连接的开销。它们由&lt;a href=&quot;settings#std:setting-CONN_MAX_AGE&quot;&gt; &lt;code&gt;CONN_MAX_AGE&lt;/code&gt; &lt;/a&gt;参数控制，该参数定义了连接的最大生存期。可以为每个数据库独立设置。</target>
        </trans-unit>
        <trans-unit id="ecc8fd07befe6d71a839208418ee04d9af0cdb35" translate="yes" xml:space="preserve">
          <source>Persistent state</source>
          <target state="translated">持续性状态</target>
        </trans-unit>
        <trans-unit id="496e9438ab65557e3360c256d99d6d71460da8a3" translate="yes" xml:space="preserve">
          <source>Philosophy</source>
          <target state="translated">Philosophy</target>
        </trans-unit>
        <trans-unit id="35cc717a3ea48a92f26c8b257f8b5c3c987027a3" translate="yes" xml:space="preserve">
          <source>Pickles of &lt;code&gt;QuerySets&lt;/code&gt; are only valid for the version of Django that was used to generate them. If you generate a pickle using Django version N, there is no guarantee that pickle will be readable with Django version N+1. Pickles should not be used as part of a long-term archival strategy.</source>
          <target state="translated">腌制的 &lt;code&gt;QuerySets&lt;/code&gt; 仅对用于生成它们的Django版本有效。如果您使用Django版本N生成腌制，则不能保证Django版本N + 1可以读取该腌制。泡菜不应用作长期存档策略的一部分。</target>
        </trans-unit>
        <trans-unit id="6d0148232e25209752fd250046d1e1e5365c0bf9" translate="yes" xml:space="preserve">
          <source>Pickles of models are only valid for the version of Django that was used to generate them. If you generate a pickle using Django version N, there is no guarantee that pickle will be readable with Django version N+1. Pickles should not be used as part of a long-term archival strategy.</source>
          <target state="translated">模型的pickle只对生成它们的Django版本有效。如果你使用Django版本N生成了一个pickle,那么不能保证这个pickle在Django版本N+1中可以被读取。Pickle不应该作为长期存档策略的一部分。</target>
        </trans-unit>
        <trans-unit id="e0e5d5560b715f0a73b38d639394514dc7764164" translate="yes" xml:space="preserve">
          <source>Pickling &lt;code&gt;QuerySet&lt;/code&gt;s</source>
          <target state="translated">酸洗 &lt;code&gt;QuerySet&lt;/code&gt; 小号</target>
        </trans-unit>
        <trans-unit id="3e577e5c97a799fa16a538451be3f3460858c9f4" translate="yes" xml:space="preserve">
          <source>Pickling objects</source>
          <target state="translated">腌制对象</target>
        </trans-unit>
        <trans-unit id="c9b609a7a0071985e1b196bfdacc310b8ce76780" translate="yes" xml:space="preserve">
          <source>Pinging Google</source>
          <target state="translated">Pinging Google</target>
        </trans-unit>
        <trans-unit id="1aec9f7d616f37a87712e020c021c06578d6d716" translate="yes" xml:space="preserve">
          <source>Pinging Google via &lt;code&gt;manage.py&lt;/code&gt;</source>
          <target state="translated">通过 &lt;code&gt;manage.py&lt;/code&gt; Ping Google</target>
        </trans-unit>
        <trans-unit id="2f1d58b998875409d1483ed8145f5535f153c8c0" translate="yes" xml:space="preserve">
          <source>Pixel width and height used for georeferencing the raster, as a point object with &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; members. See &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.geotransform&quot;&gt;&lt;code&gt;geotransform&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">用于对栅格进行地理配准的像素宽度和高度，作为具有 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 成员的点对象。有关更多信息，请参见&lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.geotransform&quot;&gt; &lt;code&gt;geotransform&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc8a879aac31b9d6eb482c7dc9001a8e5a26ed67" translate="yes" xml:space="preserve">
          <source>Place.objects.all() returns all Places, regardless of whether they have Restaurants:</source>
          <target state="translated">Place.objects.all()返回所有 Places,不管它们是否有 Restaurants。</target>
        </trans-unit>
        <trans-unit id="1472be598dad008e8b7e6176694c3682d869a694" translate="yes" xml:space="preserve">
          <source>Platform-specific instructions</source>
          <target state="translated">特定平台说明</target>
        </trans-unit>
        <trans-unit id="aff897904900c56f2ce8b62f77e12c92a2ed20e4" translate="yes" xml:space="preserve">
          <source>Playing with &lt;code&gt;Context&lt;/code&gt; objects</source>
          <target state="translated">玩 &lt;code&gt;Context&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="6ac31ef33df4860a5777ea446d2c00537722d098" translate="yes" xml:space="preserve">
          <source>Playing with the API</source>
          <target state="translated">玩转API</target>
        </trans-unit>
        <trans-unit id="945144904d116a346215bedd2ad08e4f4c3b1716" translate="yes" xml:space="preserve">
          <source>Please also consult platform-specific instructions if you are on &lt;a href=&quot;index#macos&quot;&gt;macOS&lt;/a&gt; or &lt;a href=&quot;index#windows&quot;&gt;Windows&lt;/a&gt;.</source>
          <target state="translated">如果您使用的是&lt;a href=&quot;index#macos&quot;&gt;macOS&lt;/a&gt;或&lt;a href=&quot;index#windows&quot;&gt;Windows，&lt;/a&gt;也请查阅特定于平台的说明。</target>
        </trans-unit>
        <trans-unit id="a3063da44afe6d9259ba01aec843c1f12d20e110" translate="yes" xml:space="preserve">
          <source>Please also see the &lt;a href=&quot;#render-warning&quot;&gt;rendering warning&lt;/a&gt; as mentioned for &lt;a href=&quot;#django-admin-startapp&quot;&gt;&lt;code&gt;startapp&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另请参阅有关&lt;a href=&quot;#django-admin-startapp&quot;&gt; &lt;code&gt;startapp&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;#render-warning&quot;&gt;渲染警告&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f4b0dee64fbb0daeb99d6f6433dd16d0f3ea7666" translate="yes" xml:space="preserve">
          <source>Please don&amp;rsquo;t do it for this tutorial, but on the next page that displays a preview of the patch, you would click &amp;ldquo;Create pull request&amp;rdquo;.</source>
          <target state="translated">在本教程中请不要这样做，但是在显示补丁预览的下一页上，您将单击&amp;ldquo;创建请求请求&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="dd3c3fcd9d54b9d240b3a7b691e97c29668e1d7d" translate="yes" xml:space="preserve">
          <source>Please note that according to &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/charset-unicode-sets.html&quot;&gt;MySQL Unicode Character Sets&lt;/a&gt;, comparisons for the &lt;code&gt;utf8_general_ci&lt;/code&gt; collation are faster, but slightly less correct, than comparisons for &lt;code&gt;utf8_unicode_ci&lt;/code&gt;. If this is acceptable for your application, you should use &lt;code&gt;utf8_general_ci&lt;/code&gt; because it is faster. If this is not acceptable (for example, if you require German dictionary order), use &lt;code&gt;utf8_unicode_ci&lt;/code&gt; because it is more accurate.</source>
          <target state="translated">请注意，根据&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/charset-unicode-sets.html&quot;&gt;MySQL Unicode字符集&lt;/a&gt;，与 &lt;code&gt;utf8_unicode_ci&lt;/code&gt; 的比较相比， &lt;code&gt;utf8_general_ci&lt;/code&gt; 归类的比较更快，但正确性稍差。如果这对于您的应用程序是可接受的，则应使用 &lt;code&gt;utf8_general_ci&lt;/code&gt; ,因为它速度更快。如果这是不可接受的（例如，如果您需要德语词典顺序），请使用 &lt;code&gt;utf8_unicode_ci&lt;/code&gt; ,因为它更准确。</target>
        </trans-unit>
        <trans-unit id="61c9c7d6201e4421ab2907f232155b7d7af62fbc" translate="yes" xml:space="preserve">
          <source>Please note that the presence of this setting does not imply that Django&amp;rsquo;s CSRF protection is safe from cross-subdomain attacks by default - please see the &lt;a href=&quot;csrf#csrf-limitations&quot;&gt;CSRF limitations&lt;/a&gt; section.</source>
          <target state="translated">请注意，此设置的存在并不意味着默认情况下Django的CSRF保护不受跨子域攻击的影响-请参阅&lt;a href=&quot;csrf#csrf-limitations&quot;&gt;CSRF限制&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="f555e10e4c64d8e62d16b2b5b7c678648b4ff894" translate="yes" xml:space="preserve">
          <source>Please note the caveats under &lt;a href=&quot;../ref/settings#std:setting-SECURE_PROXY_SSL_HEADER&quot;&gt;&lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt;&lt;/a&gt;. For the case of a reverse proxy, it may be easier or more secure to configure the main Web server to do the redirect to HTTPS.</source>
          <target state="translated">请注意&lt;a href=&quot;../ref/settings#std:setting-SECURE_PROXY_SSL_HEADER&quot;&gt; &lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt; &lt;/a&gt;下的警告。对于反向代理，将主Web服务器配置为重定向到HTTPS可能更容易或更安全。</target>
        </trans-unit>
        <trans-unit id="b25cb094d1d27b01e27c9afab7e6b1a51bce03d7" translate="yes" xml:space="preserve">
          <source>Please refer to its &lt;a href=&quot;contrib/gis/commands#django-admin-ogrinspect&quot;&gt;&lt;code&gt;description&lt;/code&gt;&lt;/a&gt; in the GeoDjango documentation.</source>
          <target state="translated">请参考GeoDjango文档中的&lt;a href=&quot;contrib/gis/commands#django-admin-ogrinspect&quot;&gt; &lt;code&gt;description&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d92355eefed916d708a8f8c8821d784a6d817613" translate="yes" xml:space="preserve">
          <source>Please refer to its &lt;a href=&quot;contrib/sitemaps#django-admin-ping_google&quot;&gt;&lt;code&gt;description&lt;/code&gt;&lt;/a&gt; in the Sitemaps documentation.</source>
          <target state="translated">请参考Sitemaps文档中的&lt;a href=&quot;contrib/sitemaps#django-admin-ping_google&quot;&gt; &lt;code&gt;description&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8f8a4e796321a065679280200da41cb9ae57915f" translate="yes" xml:space="preserve">
          <source>Please refer to its &lt;a href=&quot;contrib/staticfiles#django-admin-collectstatic&quot;&gt;&lt;code&gt;description&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&quot;contrib/staticfiles&quot;&gt;staticfiles&lt;/a&gt; documentation.</source>
          <target state="translated">请参考其&lt;a href=&quot;contrib/staticfiles#django-admin-collectstatic&quot;&gt; &lt;code&gt;description&lt;/code&gt; &lt;/a&gt;中&lt;a href=&quot;contrib/staticfiles&quot;&gt;staticfiles&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="27545fdc451a436172a6796515d9ff68fee772aa" translate="yes" xml:space="preserve">
          <source>Please refer to its &lt;a href=&quot;contrib/staticfiles#django-admin-findstatic&quot;&gt;&lt;code&gt;description&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&quot;contrib/staticfiles&quot;&gt;staticfiles&lt;/a&gt; documentation.</source>
          <target state="translated">请参考其&lt;a href=&quot;contrib/staticfiles#django-admin-findstatic&quot;&gt; &lt;code&gt;description&lt;/code&gt; &lt;/a&gt;中&lt;a href=&quot;contrib/staticfiles&quot;&gt;staticfiles&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="fcc1657655e13b26336a1f918bea2362b8beb8ad" translate="yes" xml:space="preserve">
          <source>Please refer to the &lt;a href=&quot;https://postgis.net/docs/using_postgis_dbmanagement.html#PostGIS_Geography&quot;&gt;PostGIS Geography Type&lt;/a&gt; documentation for more details.</source>
          <target state="translated">有关更多详细信息，请参阅&lt;a href=&quot;https://postgis.net/docs/using_postgis_dbmanagement.html#PostGIS_Geography&quot;&gt;PostGIS地理类型&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="eee66bf135a104e85862ac181583cbf6e6096e0b" translate="yes" xml:space="preserve">
          <source>Please refer to the notes about &lt;a href=&quot;#historical-models&quot;&gt;Historical models&lt;/a&gt; in migrations to see the implications that come along.</source>
          <target state="translated">请参阅有关迁移中的&lt;a href=&quot;#historical-models&quot;&gt;历史模型&lt;/a&gt;的注释，以了解随之而来的含义。</target>
        </trans-unit>
        <trans-unit id="7b5132a644191e3e0c1bd4c851f5a29784f9272a" translate="yes" xml:space="preserve">
          <source>Plural form and po files</source>
          <target state="translated">复数形式和po文件</target>
        </trans-unit>
        <trans-unit id="deece46c22e64f44a14fe2209222289025573b98" translate="yes" xml:space="preserve">
          <source>Pluralization</source>
          <target state="translated">Pluralization</target>
        </trans-unit>
        <trans-unit id="bfb18c81f7d12bc77bce9d95a4e7bbce79d43c94" translate="yes" xml:space="preserve">
          <source>Points to the model the field relates to. For example, &lt;code&gt;Author&lt;/code&gt; in &lt;code&gt;ForeignKey(Author, on_delete=models.CASCADE)&lt;/code&gt;. The &lt;code&gt;related_model&lt;/code&gt; for a &lt;code&gt;GenericForeignKey&lt;/code&gt; is always &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">指向该领域所涉及的模型。例如， &lt;code&gt;Author&lt;/code&gt; 在 &lt;code&gt;ForeignKey(Author, on_delete=models.CASCADE)&lt;/code&gt; 。该 &lt;code&gt;related_model&lt;/code&gt; 的 &lt;code&gt;GenericForeignKey&lt;/code&gt; 总是 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71bb200b0c8a940ce59c402fc6398215220da8df" translate="yes" xml:space="preserve">
          <source>Populate the test database with fixture data from the given fixtures. (For more on fixtures, see the documentation for &lt;a href=&quot;#django-admin-loaddata&quot;&gt;&lt;code&gt;loaddata&lt;/code&gt;&lt;/a&gt; above.)</source>
          <target state="translated">用来自给定夹具的夹具数据填充测试数据库。（有关夹具的更多信息，请参见上面有关&lt;a href=&quot;#django-admin-loaddata&quot;&gt; &lt;code&gt;loaddata&lt;/code&gt; &lt;/a&gt;的文档。）</target>
        </trans-unit>
        <trans-unit id="3a2edcda15f5ffb120fc20f1479582ba5b5f36fb" translate="yes" xml:space="preserve">
          <source>Populated (through &lt;a href=&quot;mixins-simple#django.views.generic.base.ContextMixin&quot;&gt;&lt;code&gt;ContextMixin&lt;/code&gt;&lt;/a&gt;) with the keyword arguments captured from the URL pattern that served the view.</source>
          <target state="translated">（通过&lt;a href=&quot;mixins-simple#django.views.generic.base.ContextMixin&quot;&gt; &lt;code&gt;ContextMixin&lt;/code&gt; &lt;/a&gt;）填充有从为视图提供服务的URL模式中捕获的关键字参数。</target>
        </trans-unit>
        <trans-unit id="d728346840abef332d96fd01dccf493e5038300e" translate="yes" xml:space="preserve">
          <source>Port 7000 on IP address &lt;code&gt;1.2.3.4&lt;/code&gt;:</source>
          <target state="translated">IP地址 &lt;code&gt;1.2.3.4&lt;/code&gt; 上的端口7000 ：</target>
        </trans-unit>
        <trans-unit id="607d0c9b35e92f6cc376ca90f2895ba371a84f2b" translate="yes" xml:space="preserve">
          <source>Port 7000 on IP address &lt;code&gt;127.0.0.1&lt;/code&gt;:</source>
          <target state="translated">IP地址 &lt;code&gt;127.0.0.1&lt;/code&gt; 上的端口7000 ：</target>
        </trans-unit>
        <trans-unit id="b46d886ce6b0db58100d9b5030cbdd743f26cf41" translate="yes" xml:space="preserve">
          <source>Port 7000 on IPv6 address &lt;code&gt;2001:0db8:1234:5678::9&lt;/code&gt;:</source>
          <target state="translated">IPv6地址 &lt;code&gt;2001:0db8:1234:5678::9&lt;/code&gt; 上的端口7000 ：0db8：1234：5678 :: 9：</target>
        </trans-unit>
        <trans-unit id="6e9c9cca16d90fd52eacd273a38fa72a12f667fc" translate="yes" xml:space="preserve">
          <source>Port 7000 on IPv6 address &lt;code&gt;::1&lt;/code&gt;:</source>
          <target state="translated">IPv6地址 &lt;code&gt;::1&lt;/code&gt; 上的端口7000 ：</target>
        </trans-unit>
        <trans-unit id="742e76e604364aedcc1fa967a72420adbbbae2a0" translate="yes" xml:space="preserve">
          <source>Port 8000 on IP address &lt;code&gt;1.2.3.4&lt;/code&gt;:</source>
          <target state="translated">IP地址 &lt;code&gt;1.2.3.4&lt;/code&gt; 上的端口8000 ：</target>
        </trans-unit>
        <trans-unit id="bc2f03cb30b616fe88f752d7e01d955bfe250071" translate="yes" xml:space="preserve">
          <source>Port 8000 on IP address &lt;code&gt;127.0.0.1&lt;/code&gt;:</source>
          <target state="translated">IP地址 &lt;code&gt;127.0.0.1&lt;/code&gt; 上的端口8000 ：</target>
        </trans-unit>
        <trans-unit id="4de2c8eb6aa5980c388083ab1f0fafcbfac5918f" translate="yes" xml:space="preserve">
          <source>Port 8000 on IPv4 address of host &lt;code&gt;localhost&lt;/code&gt;:</source>
          <target state="translated">主机 &lt;code&gt;localhost&lt;/code&gt; 的 IPv4地址上的端口8000 ：</target>
        </trans-unit>
        <trans-unit id="573ccc065de8b4c79dd9da36bc7dcb461a3d1be2" translate="yes" xml:space="preserve">
          <source>Port 8000 on IPv6 address &lt;code&gt;::1&lt;/code&gt;:</source>
          <target state="translated">IPv6地址 &lt;code&gt;::1&lt;/code&gt; 上的端口8000 ：</target>
        </trans-unit>
        <trans-unit id="4da741a13093553d24e793918995988b42ce5ef5" translate="yes" xml:space="preserve">
          <source>Port 8000 on IPv6 address of host &lt;code&gt;localhost&lt;/code&gt;:</source>
          <target state="translated">主机 &lt;code&gt;localhost&lt;/code&gt; 的 IPv6地址上的端口8000 ：</target>
        </trans-unit>
        <trans-unit id="11572a96cabaee01b8320ac115b9990aee7241f0" translate="yes" xml:space="preserve">
          <source>Port to use for the SMTP server defined in &lt;a href=&quot;#std:setting-EMAIL_HOST&quot;&gt;&lt;code&gt;EMAIL_HOST&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用于&lt;a href=&quot;#std:setting-EMAIL_HOST&quot;&gt; &lt;code&gt;EMAIL_HOST&lt;/code&gt; 中&lt;/a&gt;定义的SMTP服务器的端口。</target>
        </trans-unit>
        <trans-unit id="0990635d6e89d26c7cf1ecf413e1a3ce967ed2db" translate="yes" xml:space="preserve">
          <source>Portions of the earth&amp;rsquo;s surface may projected onto a two-dimensional, or Cartesian, plane. Projected coordinate systems are especially convenient for region-specific applications, e.g., if you know that your database will only cover geometries in &lt;a href=&quot;https://www.spatialreference.org/ref/epsg/2796/&quot;&gt;North Kansas&lt;/a&gt;, then you may consider using projection system specific to that region. Moreover, projected coordinate systems are defined in Cartesian units (such as meters or feet), easing distance calculations.</source>
          <target state="translated">地球表面的某些部分可能会投影到二维或笛卡尔平面上。投影坐标系对于特定于区域的应用程序特别方便，例如，如果您知道数据库仅涵盖&lt;a href=&quot;https://www.spatialreference.org/ref/epsg/2796/&quot;&gt;北堪萨斯州的&lt;/a&gt;几何图形，则可以考虑使用特定于该区域的投影系统。此外，投影坐标系以笛卡尔单位（例如米或英尺）定义，从而简化了距离计算。</target>
        </trans-unit>
        <trans-unit id="18762e8d6ba5f2c5db546d95048bef0d942060a9" translate="yes" xml:space="preserve">
          <source>Positional arguments can be expressions or Python values. Strings are assumed to be column references and will be wrapped in &lt;code&gt;F()&lt;/code&gt; expressions while other values will be wrapped in &lt;code&gt;Value()&lt;/code&gt; expressions.</source>
          <target state="translated">位置参数可以是表达式或Python值。字符串被假定为列引用，并且将被包装在 &lt;code&gt;F()&lt;/code&gt; 表达式中，而其他值将被包装在 &lt;code&gt;Value()&lt;/code&gt; 表达式中。</target>
        </trans-unit>
        <trans-unit id="57aa2fd441e9ebdf27ee5187b667b9235ac71fa2" translate="yes" xml:space="preserve">
          <source>Positional interpolation: &lt;code&gt;obj&lt;/code&gt; contains a JavaScript Array object whose elements values are then sequentially interpolated in their corresponding &lt;code&gt;fmt&lt;/code&gt; placeholders in the same order they appear. For example:</source>
          <target state="translated">位置插值： &lt;code&gt;obj&lt;/code&gt; 包含一个JavaScript Array对象，该对象的元素值然后按照它们出现的顺序顺序插值到其对应的 &lt;code&gt;fmt&lt;/code&gt; 占位符中。例如：</target>
        </trans-unit>
        <trans-unit id="681e79c0db6a401f4ddd7a4987052826179fc670" translate="yes" xml:space="preserve">
          <source>Possible values for &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.changefreq&quot;&gt;&lt;code&gt;changefreq&lt;/code&gt;&lt;/a&gt;, whether you use a method or attribute, are:</source>
          <target state="translated">无论使用方法还是属性，&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.changefreq&quot;&gt; &lt;code&gt;changefreq&lt;/code&gt; 的&lt;/a&gt;可能值为：</target>
        </trans-unit>
        <trans-unit id="b490ea1c022fa91521273862fbe582512a00d2ba" translate="yes" xml:space="preserve">
          <source>Possible values for the setting are:</source>
          <target state="translated">该设置的可能值为:</target>
        </trans-unit>
        <trans-unit id="7001a7b3fe9633e217615d8ec116930191433437" translate="yes" xml:space="preserve">
          <source>Post the package on a public repository, such as &lt;a href=&quot;https://pypi.org/&quot;&gt;the Python Package Index (PyPI)&lt;/a&gt;. &lt;a href=&quot;https://packaging.python.org&quot;&gt;packaging.python.org&lt;/a&gt; has &lt;a href=&quot;https://packaging.python.org/tutorials/packaging-projects/#uploading-the-distribution-archives&quot;&gt;a good tutorial&lt;/a&gt; for doing this.</source>
          <target state="translated">将包发布到公共存储库中，例如&lt;a href=&quot;https://pypi.org/&quot;&gt;Python Package Index（PyPI）&lt;/a&gt;。&lt;a href=&quot;https://packaging.python.org&quot;&gt;packaging.python.org&lt;/a&gt;有&lt;a href=&quot;https://packaging.python.org/tutorials/packaging-projects/#uploading-the-distribution-archives&quot;&gt;一个很好的教程&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="678cbf7009afee05403a9a11e9851a53710762e8" translate="yes" xml:space="preserve">
          <source>Post-installation</source>
          <target state="translated">Post-installation</target>
        </trans-unit>
        <trans-unit id="f075ac1284323276cbb4295a60cdc325f91d79a0" translate="yes" xml:space="preserve">
          <source>Post-render callbacks</source>
          <target state="translated">渲染后回调</target>
        </trans-unit>
        <trans-unit id="f6b2ee5af0705015c0259810547be11a12a12e56" translate="yes" xml:space="preserve">
          <source>PostGIS</source>
          <target state="translated">PostGIS</target>
        </trans-unit>
        <trans-unit id="2bea93831effd0e3ad7df53d76be03e00ff5b6cd" translate="yes" xml:space="preserve">
          <source>PostGIS &amp;amp; SpatiaLite</source>
          <target state="translated">PostGIS和SpatiaLite</target>
        </trans-unit>
        <trans-unit id="11a4e4e05809d4f14d8be13109be6db393559bcb" translate="yes" xml:space="preserve">
          <source>PostGIS 2 includes an extension for PostgreSQL that&amp;rsquo;s used to enable spatial functionality:</source>
          <target state="translated">PostGIS 2包括用于PostgreSQL的扩展，用于扩展空间功能：</target>
        </trans-unit>
        <trans-unit id="73a99390678212628538dd514696cce25b495507" translate="yes" xml:space="preserve">
          <source>PostGIS SQL equivalent:</source>
          <target state="translated">PostGIS SQL相当于。</target>
        </trans-unit>
        <trans-unit id="1d1da10b3da9b356a1f4a1d6e8a8cdfb730bd398" translate="yes" xml:space="preserve">
          <source>PostGIS equivalent:</source>
          <target state="translated">相当于PostGIS。</target>
        </trans-unit>
        <trans-unit id="196b10bf3f4d00049cab5694548312b77ddc43e2" translate="yes" xml:space="preserve">
          <source>PostGIS is recommended, because it is the most mature and feature-rich open source spatial database.</source>
          <target state="translated">推荐使用PostGIS,因为它是最成熟、功能最丰富的开源空间数据库。</target>
        </trans-unit>
        <trans-unit id="24fd6c2d1150de6a47543209150ff4c2a2d3104f" translate="yes" xml:space="preserve">
          <source>PostgreSQL</source>
          <target state="translated">PostgreSQL</target>
        </trans-unit>
        <trans-unit id="bbd25fc89254dfdc1a222d745bb12b7ccc57b2be" translate="yes" xml:space="preserve">
          <source>PostgreSQL (with PostGIS), MySQL (mostly with MyISAM engine), Oracle, and SQLite (with SpatiaLite) are the spatial databases currently supported.</source>
          <target state="translated">目前支持的空间数据库有PostgreSQL(含PostGIS)、MySQL(主要含MyISAM引擎)、Oracle和SQLite(含SpatiaLite)。</target>
        </trans-unit>
        <trans-unit id="2f5ea5c978e41d98e9cd9501d91ecdc32ecfb799" translate="yes" xml:space="preserve">
          <source>PostgreSQL allows the definition of custom range types. Django&amp;rsquo;s model and form field implementations use base classes below, and psycopg2 provides a &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.register_range&quot;&gt;&lt;code&gt;register_range()&lt;/code&gt;&lt;/a&gt; to allow use of custom range types.</source>
          <target state="translated">PostgreSQL允许定义自定义范围类型。Django的模型和表单字段实现使用下面的基类，而psycopg2提供&lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.register_range&quot;&gt; &lt;code&gt;register_range()&lt;/code&gt; &lt;/a&gt;允许使用自定义范围类型。</target>
        </trans-unit>
        <trans-unit id="fe4d770eb0d9650370218a8fa878b7a5b483ebc7" translate="yes" xml:space="preserve">
          <source>PostgreSQL and Oracle support tablespaces. SQLite, MariaDB and MySQL don&amp;rsquo;t.</source>
          <target state="translated">PostgreSQL和Oracle支持表空间。SQLite，MariaDB和MySQL则没有。</target>
        </trans-unit>
        <trans-unit id="05f4ec56f55ff923cb4b3d56ae07f61bd20228d1" translate="yes" xml:space="preserve">
          <source>PostgreSQL connection settings</source>
          <target state="translated">PostgreSQL连接设置</target>
        </trans-unit>
        <trans-unit id="f412ef2862c42e4812ecbb9665bab0d6019d9370" translate="yes" xml:space="preserve">
          <source>PostgreSQL considerations</source>
          <target state="translated">PostgreSQL的注意事项</target>
        </trans-unit>
        <trans-unit id="c655c4fb326b838552c931062ac52582724f272b" translate="yes" xml:space="preserve">
          <source>PostgreSQL doesn&amp;rsquo;t support &lt;code&gt;select_for_update()&lt;/code&gt; with &lt;a href=&quot;expressions#django.db.models.expressions.Window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; expressions.</source>
          <target state="translated">PostgreSQL不支持 &lt;code&gt;select_for_update()&lt;/code&gt; 与&lt;a href=&quot;expressions#django.db.models.expressions.Window&quot;&gt; &lt;code&gt;Window&lt;/code&gt; &lt;/a&gt;表达式。</target>
        </trans-unit>
        <trans-unit id="c867fef8faa5874e85b172667e33557340e635c7" translate="yes" xml:space="preserve">
          <source>PostgreSQL has a number of features which are not shared by the other databases Django supports. This optional module contains model fields and form fields for a number of PostgreSQL specific data types.</source>
          <target state="translated">PostgreSQL有许多Django支持的数据库所不具备的特性。这个可选的模块包含了一些PostgreSQL特定数据类型的模型字段和表单字段。</target>
        </trans-unit>
        <trans-unit id="bb7e67fcf426788e20ae1eb3f7197518890ae1e2" translate="yes" xml:space="preserve">
          <source>PostgreSQL has its own full text search implementation built-in. While not as powerful as some other search engines, it has the advantage of being inside your database and so can easily be combined with other relational queries such as categorization.</source>
          <target state="translated">PostgreSQL内置了自己的全文搜索实现。虽然没有其他一些搜索引擎那么强大,但它的优点是在你的数据库里面,所以可以很容易地与其他关系查询结合起来,比如分类。</target>
        </trans-unit>
        <trans-unit id="3ef98aade0e8da7a08e5531509a27a327b441abe" translate="yes" xml:space="preserve">
          <source>PostgreSQL has limited support for &lt;code&gt;ValueRange&lt;/code&gt; and only supports use of the standard start and end points, such as &lt;code&gt;CURRENT ROW&lt;/code&gt; and &lt;code&gt;UNBOUNDED
FOLLOWING&lt;/code&gt;.</source>
          <target state="translated">PostgreSQL对 &lt;code&gt;ValueRange&lt;/code&gt; 的支持有限，仅支持使用标准的起点和终点，例如 &lt;code&gt;CURRENT ROW&lt;/code&gt; 和 &lt;code&gt;UNBOUNDED FOLLOWING&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3643545450f0b1060eaf31855775f5e742665810" translate="yes" xml:space="preserve">
          <source>PostgreSQL has some rather esoteric behavior when using indexes and slices on multidimensional arrays. It will always work to use indexes to reach down to the final underlying data, but most other slices behave strangely at the database level and cannot be supported in a logical, consistent fashion by Django.</source>
          <target state="translated">PostgreSQL在多维数组上使用索引和切片时,有一些相当神秘的行为。使用索引向下到达最终的底层数据总是可行的,但是大多数其他的slices在数据库层面的行为很奇怪,不能被Django以逻辑的、一致的方式支持。</target>
        </trans-unit>
        <trans-unit id="168c98d4a0d8ebe6230bc3c052e4fdd2ba25b19e" translate="yes" xml:space="preserve">
          <source>PostgreSQL has two native JSON based data types: &lt;code&gt;json&lt;/code&gt; and &lt;code&gt;jsonb&lt;/code&gt;. The main difference between them is how they are stored and how they can be queried. PostgreSQL&amp;rsquo;s &lt;code&gt;json&lt;/code&gt; field is stored as the original string representation of the JSON and must be decoded on the fly when queried based on keys. The &lt;code&gt;jsonb&lt;/code&gt; field is stored based on the actual structure of the JSON which allows indexing. The trade-off is a small additional cost on writing to the &lt;code&gt;jsonb&lt;/code&gt; field. &lt;code&gt;JSONField&lt;/code&gt; uses &lt;code&gt;jsonb&lt;/code&gt;.</source>
          <target state="translated">PostgreSQL有两种基于JSON的本地数据类型： &lt;code&gt;json&lt;/code&gt; 和 &lt;code&gt;jsonb&lt;/code&gt; 。它们之间的主要区别在于它们的存储方式和查询方式。 PostgreSQL的 &lt;code&gt;json&lt;/code&gt; 字段存储为JSON的原始字符串表示形式，并且在基于键查询时必须进行动态解码。所述 &lt;code&gt;jsonb&lt;/code&gt; 字段是基于JSON的实际结构，其允许分度存储。权衡是写入 &lt;code&gt;jsonb&lt;/code&gt; 字段时的一小笔额外费用。 &lt;code&gt;JSONField&lt;/code&gt; 使用 &lt;code&gt;jsonb&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0657db99aab825991981ffd509a6318950c7ef93" translate="yes" xml:space="preserve">
          <source>PostgreSQL is the most capable of all the databases here in terms of schema support.</source>
          <target state="translated">PostgreSQL是这里所有数据库中对模式支持能力最强的。</target>
        </trans-unit>
        <trans-unit id="55dd5c922f681934365cca704f104392d442ece2" translate="yes" xml:space="preserve">
          <source>PostgreSQL notes</source>
          <target state="translated">PostgreSQL笔记本</target>
        </trans-unit>
        <trans-unit id="cdd6eae37307f69a33d4850f1814d7cc40ca27df" translate="yes" xml:space="preserve">
          <source>PostgreSQL provides a set of SQL operators that can be used together with the range data types (see &lt;a href=&quot;https://www.postgresql.org/docs/current/functions-range.html#RANGE-OPERATORS-TABLE&quot;&gt;the PostgreSQL documentation for the full details of range operators&lt;/a&gt;). This class is meant as a convenient method to avoid typos. The operator names overlap with the names of corresponding lookups.</source>
          <target state="translated">PostgreSQL提供了一组可以与范围数据类型一起使用的SQL运算符（&lt;a href=&quot;https://www.postgresql.org/docs/current/functions-range.html#RANGE-OPERATORS-TABLE&quot;&gt;有关范围运算符的完整详细信息，&lt;/a&gt;请参见PostgreSQL文档）。此类是避免输入错误的便捷方法。运算符名称与相应查找的名称重叠。</target>
        </trans-unit>
        <trans-unit id="1b9fdd15f79f970458f34ca1a3022486efe7c590" translate="yes" xml:space="preserve">
          <source>PostgreSQL requires functions referenced in the condition to be marked as IMMUTABLE. Django doesn&amp;rsquo;t validate this but PostgreSQL will error. This means that functions such as &lt;a href=&quot;database-functions#date-functions&quot;&gt;Date functions&lt;/a&gt; and &lt;a href=&quot;database-functions#django.db.models.functions.Concat&quot;&gt;&lt;code&gt;Concat&lt;/code&gt;&lt;/a&gt; aren&amp;rsquo;t accepted. If you store dates in &lt;a href=&quot;fields#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt;, comparison to &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; objects may require the &lt;code&gt;tzinfo&lt;/code&gt; argument to be provided because otherwise the comparison could result in a mutable function due to the casting Django does for &lt;a href=&quot;querysets#field-lookups&quot;&gt;lookups&lt;/a&gt;.</source>
          <target state="translated">PostgreSQL要求条件中引用的函数标记为IMMUTABLE。Django不会对此进行验证，但是PostgreSQL会出错。这意味着不接受诸如&lt;a href=&quot;database-functions#date-functions&quot;&gt;Date函数&lt;/a&gt;和&lt;a href=&quot;database-functions#django.db.models.functions.Concat&quot;&gt; &lt;code&gt;Concat&lt;/code&gt; 之&lt;/a&gt;类的函数。如果将日期存储在&lt;a href=&quot;fields#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; 中&lt;/a&gt;，则可能需要提供 &lt;code&gt;tzinfo&lt;/code&gt; 参数来与&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;对象进行比较，因为否则，由于Django对&lt;a href=&quot;querysets#field-lookups&quot;&gt;查找&lt;/a&gt;的转换，该比较可能会导致可变的函数。</target>
        </trans-unit>
        <trans-unit id="a085e76da94d3489a9588f510cd24ea971e32f8b" translate="yes" xml:space="preserve">
          <source>PostgreSQL specific aggregation functions</source>
          <target state="translated">PostgreSQL特定的聚合函数</target>
        </trans-unit>
        <trans-unit id="17d23c73509ab198a20410e4a6424d0513c56222" translate="yes" xml:space="preserve">
          <source>PostgreSQL specific database constraints</source>
          <target state="translated">PostgreSQL特定的数据库约束</target>
        </trans-unit>
        <trans-unit id="821a2053b711fd6c472f917be0d74de35f6e9b4e" translate="yes" xml:space="preserve">
          <source>PostgreSQL specific database functions</source>
          <target state="translated">PostgreSQL特定的数据库功能</target>
        </trans-unit>
        <trans-unit id="5309ed46b34a6d7276f1b802d8aa991ba94fedef" translate="yes" xml:space="preserve">
          <source>PostgreSQL specific form fields and widgets</source>
          <target state="translated">PostgreSQL特定的表格字段和小部件</target>
        </trans-unit>
        <trans-unit id="e93190dcec5536d34ee763e854fad91df855c274" translate="yes" xml:space="preserve">
          <source>PostgreSQL specific lookups</source>
          <target state="translated">PostgreSQL的特定查询</target>
        </trans-unit>
        <trans-unit id="70834072f4b64529a787c3ea195778e0df214157" translate="yes" xml:space="preserve">
          <source>PostgreSQL specific model fields</source>
          <target state="translated">PostgreSQL特定模型字段</target>
        </trans-unit>
        <trans-unit id="12c585a6756725c70222f1410fdd60f0c5a75626" translate="yes" xml:space="preserve">
          <source>PostgreSQL specific model indexes</source>
          <target state="translated">PostgreSQL特定模型索引</target>
        </trans-unit>
        <trans-unit id="f0c4bc5c32a46fb3a181291fa84618678666babd" translate="yes" xml:space="preserve">
          <source>PostgreSQL support</source>
          <target state="translated">支持PostgreSQL</target>
        </trans-unit>
        <trans-unit id="0eef3b53c86498212ac385626e52ac7c316ecaf6" translate="yes" xml:space="preserve">
          <source>PostgreSQL supports additional data integrity constraints available from the &lt;code&gt;django.contrib.postgres.constraints&lt;/code&gt; module. They are added in the model &lt;a href=&quot;../../models/options#django.db.models.Options.constraints&quot;&gt;&lt;code&gt;Meta.constraints&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">PostgreSQL支持 &lt;code&gt;django.contrib.postgres.constraints&lt;/code&gt; 模块中可用的其他数据完整性约束。它们被添加到模型&lt;a href=&quot;../../models/options#django.db.models.Options.constraints&quot;&gt; &lt;code&gt;Meta.constraints&lt;/code&gt; &lt;/a&gt;选项中。</target>
        </trans-unit>
        <trans-unit id="25d283cdcf63fd5991436c1209f908667770d60e" translate="yes" xml:space="preserve">
          <source>PostgreSQL supports the &lt;code&gt;CONCURRENTLY&lt;/code&gt; option to &lt;code&gt;CREATE INDEX&lt;/code&gt; and &lt;code&gt;DROP INDEX&lt;/code&gt; statements to add and remove indexes without locking out writes. This option is useful for adding or removing an index in a live production database.</source>
          <target state="translated">PostgreSQL支持 &lt;code&gt;CONCURRENTLY&lt;/code&gt; 选项来 &lt;code&gt;CREATE INDEX&lt;/code&gt; 和 &lt;code&gt;DROP INDEX&lt;/code&gt; 语句，以添加和删除索引而不会锁定写入。此选项对于在实时生产数据库中添加或删除索引很有用。</target>
        </trans-unit>
        <trans-unit id="6a96fa582734cacd75112dd8c6e708395b968e6d" translate="yes" xml:space="preserve">
          <source>PostgreSQL users, refer to the &lt;a href=&quot;https://www.postgresql.org/docs/current/multibyte.html&quot;&gt;PostgreSQL manual&lt;/a&gt; (section 22.3.2 in PostgreSQL 9) for details on creating databases with the correct encoding.</source>
          <target state="translated">PostgreSQL用户，请参阅&lt;a href=&quot;https://www.postgresql.org/docs/current/multibyte.html&quot;&gt;PostgreSQL手册&lt;/a&gt;（PostgreSQL 9中的22.3.2节），以获取有关使用正确编码创建数据库的详细信息。</target>
        </trans-unit>
        <trans-unit id="99c3be427ccc82c1f56376a400dc28af2dd57965" translate="yes" xml:space="preserve">
          <source>PostgreSQL uses 1-based indexing for array fields when writing raw SQL. However these indexes and those used in &lt;a href=&quot;#std:fieldlookup-arrayfield.slice&quot;&gt;&lt;code&gt;slices&lt;/code&gt;&lt;/a&gt; use 0-based indexing to be consistent with Python.</source>
          <target state="translated">PostgreSQL在编写原始SQL时对数组字段使用基于1的索引。但是，这些索引以及在&lt;a href=&quot;#std:fieldlookup-arrayfield.slice&quot;&gt; &lt;code&gt;slices&lt;/code&gt; &lt;/a&gt;使用的索引都使用基于0的索引，以与Python保持一致。</target>
        </trans-unit>
        <trans-unit id="a4329b4028fdbd21bc77a3aac453280324b61e4c" translate="yes" xml:space="preserve">
          <source>PostgreSQL uses 1-based indexing for array fields when writing raw SQL. However these slices and those used in &lt;a href=&quot;#std:fieldlookup-arrayfield.index&quot;&gt;&lt;code&gt;indexes&lt;/code&gt;&lt;/a&gt; use 0-based indexing to be consistent with Python.</source>
          <target state="translated">PostgreSQL在编写原始SQL时对数组字段使用基于1的索引。但是，这些切片以及在&lt;a href=&quot;#std:fieldlookup-arrayfield.index&quot;&gt; &lt;code&gt;indexes&lt;/code&gt; &lt;/a&gt;使用的切片都使用基于0的索引，以与Python保持一致。</target>
        </trans-unit>
        <trans-unit id="ed068c3d2667549ee11391e449bacfc1b001022c" translate="yes" xml:space="preserve">
          <source>PostgreSQL: &lt;code&gt;Greatest&lt;/code&gt; will return the largest non-null expression, or &lt;code&gt;null&lt;/code&gt; if all expressions are &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">PostgreSQL的： &lt;code&gt;Greatest&lt;/code&gt; 将返回最大的非空的表达，或者 &lt;code&gt;null&lt;/code&gt; ，如果所有表达式都 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f655593cd1eb913446d7c92b93bcc2a048ac139" translate="yes" xml:space="preserve">
          <source>PostgreSQL: &lt;code&gt;Least&lt;/code&gt; will return the smallest non-null expression, or &lt;code&gt;null&lt;/code&gt; if all expressions are &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">PostgreSQL的： &lt;code&gt;Least&lt;/code&gt; 会返回最小的非空的表达，或者 &lt;code&gt;null&lt;/code&gt; ，如果所有表达式都 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e9bddaf93ff070867c9370e73d30d3f1a143b9a" translate="yes" xml:space="preserve">
          <source>PostgreSQL: no requirements (see &lt;a href=&quot;https://www.postgresql.org/docs/current/datatype-datetime.html#DATATYPE-TIMEZONES&quot;&gt;Time Zones&lt;/a&gt;).</source>
          <target state="translated">PostgreSQL：无要求（请参阅&lt;a href=&quot;https://www.postgresql.org/docs/current/datatype-datetime.html#DATATYPE-TIMEZONES&quot;&gt;时区&lt;/a&gt;）。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
