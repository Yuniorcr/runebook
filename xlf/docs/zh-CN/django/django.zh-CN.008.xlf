<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="048ec96d38efe8c12dfb083658d8404651c7e75b" translate="yes" xml:space="preserve">
          <source>If not set, the return value of &lt;code&gt;django.core.wsgi.get_wsgi_application()&lt;/code&gt; will be used. In this case, the behavior of &lt;a href=&quot;django-admin#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; will be identical to previous Django versions.</source>
          <target state="translated">如果未设置，将使用 &lt;code&gt;django.core.wsgi.get_wsgi_application()&lt;/code&gt; 的返回值。在这种情况下，&lt;a href=&quot;django-admin#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; &lt;/a&gt;的行为将与以前的Django版本相同。</target>
        </trans-unit>
        <trans-unit id="0bcd2319885f70c975b7765a16711af57eab9baa" translate="yes" xml:space="preserve">
          <source>If one of the existing model fields cannot be used to fit your purposes, or if you wish to take advantage of some less common database column types, you can create your own field class. Full coverage of creating your own fields is provided in &lt;a href=&quot;../../howto/custom-model-fields&quot;&gt;Writing custom model fields&lt;/a&gt;.</source>
          <target state="translated">如果现有模型字段之一不能用于满足您的目的，或者您希望利用一些不太常见的数据库列类型，则可以创建自己的字段类。&lt;a href=&quot;../../howto/custom-model-fields&quot;&gt;编写自定义模型字段中&lt;/a&gt;提供了有关创建自己的字段的完整介绍。</target>
        </trans-unit>
        <trans-unit id="ec78108394b7b984ffd4c8ac9c00c3ab09c32865" translate="yes" xml:space="preserve">
          <source>If one of the instances is current - say, if we were rendering the detail page in the instance &lt;code&gt;'author-polls'&lt;/code&gt; - &lt;code&gt;'polls:index'&lt;/code&gt; will resolve to the index page of the &lt;code&gt;'author-polls'&lt;/code&gt; instance; i.e. both of the following will result in &lt;code&gt;&quot;/author-polls/&quot;&lt;/code&gt;.</source>
          <target state="translated">如果其中一个实例就是当前-比方说，如果我们渲染的详细信息页面的情况下 &lt;code&gt;'author-polls'&lt;/code&gt; - &lt;code&gt;'polls:index'&lt;/code&gt; 将解析到的索引页 &lt;code&gt;'author-polls'&lt;/code&gt; 实例; 即以下两个都将导致 &lt;code&gt;&quot;/author-polls/&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a7628010548cc467431f476a0dd2aede2b28e62" translate="yes" xml:space="preserve">
          <source>If one of the layers decides to short-circuit and return a response without ever calling its &lt;code&gt;get_response&lt;/code&gt;, none of the layers of the onion inside that layer (including the view) will see the request or the response. The response will only return through the same layers that the request passed in through.</source>
          <target state="translated">如果其中一层决定在不调用 &lt;code&gt;get_response&lt;/code&gt; 的情况下短路并返回响应，则该层内的洋葱层（包括视图）都不会看到请求或响应。响应将仅返回与请求通过的相同层。</target>
        </trans-unit>
        <trans-unit id="5f7fc56d57619fe006603eedffe2bc29e42343d8" translate="yes" xml:space="preserve">
          <source>If one of your views receives an &lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; object with &lt;a href=&quot;../ref/request-response#django.http.HttpRequest.POST&quot;&gt;&lt;code&gt;POST parameters&lt;/code&gt;&lt;/a&gt; susceptible to contain sensitive information, you may prevent the values of those parameters from being included in the error reports using the &lt;code&gt;sensitive_post_parameters&lt;/code&gt; decorator:</source>
          <target state="translated">如果您的一个视图接收到带有&lt;a href=&quot;../ref/request-response#django.http.HttpRequest.POST&quot;&gt; &lt;code&gt;POST parameters&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;对象，该对象很容易包含敏感信息，则可以使用 &lt;code&gt;sensitive_post_parameters&lt;/code&gt; 装饰器防止这些参数的值包含在错误报告中：</target>
        </trans-unit>
        <trans-unit id="fcff0878219423167c0e066e172d3008301e3e9b" translate="yes" xml:space="preserve">
          <source>If one on-commit function within a given transaction raises an uncaught exception, no later registered functions in that same transaction will run. This is, of course, the same behavior as if you&amp;rsquo;d executed the functions sequentially yourself without &lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt;&lt;code&gt;on_commit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果给定事务中的一个on-commit函数引发未捕获的异常，则该同一事务中以后的已注册函数都不会运行。当然，这与没有&lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt; &lt;code&gt;on_commit()&lt;/code&gt; &lt;/a&gt;自己顺序执行函数的行为相同。</target>
        </trans-unit>
        <trans-unit id="9c159979e36f022ea0dfa4ec34adbe09e0fd50d6" translate="yes" xml:space="preserve">
          <source>If only one key or index is used, the SQL operator &lt;code&gt;-&amp;gt;&lt;/code&gt; is used. If multiple operators are used then the &lt;code&gt;#&amp;gt;&lt;/code&gt; operator is used.</source>
          <target state="translated">如果仅使用一个键或索引，则使用SQL运算符 &lt;code&gt;-&amp;gt;&lt;/code&gt; 。如果使用多个运算符，则使用 &lt;code&gt;#&amp;gt;&lt;/code&gt; 运算符。</target>
        </trans-unit>
        <trans-unit id="099c20d00ec2098bbaf3e804c844660386fd2250" translate="yes" xml:space="preserve">
          <source>If only the &lt;code&gt;expected_exception&lt;/code&gt; and &lt;code&gt;expected_message&lt;/code&gt; parameters are given, returns a context manager so that the code being tested can be written inline rather than as a function:</source>
          <target state="translated">如果仅给出了 &lt;code&gt;expected_exception&lt;/code&gt; 和 &lt;code&gt;expected_message&lt;/code&gt; 参数，则返回一个上下文管理器，以便可以内联而不是作为函数编写要测试的代码：</target>
        </trans-unit>
        <trans-unit id="35d8f324adb880bcc55735740ccdb17428c2eda0" translate="yes" xml:space="preserve">
          <source>If only the project name is given, both the project directory and project package will be named &lt;code&gt;&amp;lt;projectname&amp;gt;&lt;/code&gt; and the project directory will be created in the current working directory.</source>
          <target state="translated">如果仅给出项目名称，则项目目录和项目包都将被命名为 &lt;code&gt;&amp;lt;projectname&amp;gt;&lt;/code&gt; ，并且项目目录将在当前工作目录中创建。</target>
        </trans-unit>
        <trans-unit id="9a92c12dfd56bfbe7079f0230ba9f2be3d91cfd1" translate="yes" xml:space="preserve">
          <source>If passed, the array will have a maximum size as specified. This will be passed to the database, although PostgreSQL at present does not enforce the restriction.</source>
          <target state="translated">如果通过,数组将有一个指定的最大大小。这将被传递给数据库,尽管PostgreSQL目前并没有强制执行这个限制。</target>
        </trans-unit>
        <trans-unit id="bbbac6dbe1f627e4d81d10293f0c6b4eac1b8f3e" translate="yes" xml:space="preserve">
          <source>If present for the field subclass, &lt;code&gt;from_db_value()&lt;/code&gt; will be called in all circumstances when the data is loaded from the database, including in aggregates and &lt;a href=&quot;../ref/models/querysets#django.db.models.query.QuerySet.values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">如果存在于字段子类中， &lt;code&gt;from_db_value()&lt;/code&gt; 数据库加载数据时，在所有情况下都将调用from_db_value（），包括聚集和&lt;a href=&quot;../ref/models/querysets#django.db.models.query.QuerySet.values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt;调用。</target>
        </trans-unit>
        <trans-unit id="5d46fb88e8ed76c60d72db1c27bf5a8f7b838cfa" translate="yes" xml:space="preserve">
          <source>If provided, these arguments ensure that the string is at most or at least the given length.</source>
          <target state="translated">如果提供了这些参数,这些参数确保字符串的长度最多或至少是给定的长度。</target>
        </trans-unit>
        <trans-unit id="d4ce7026faaa634fc0b96ac52163aab44216566a" translate="yes" xml:space="preserve">
          <source>If requested by &lt;a href=&quot;#django.views.generic.base.RedirectView.query_string&quot;&gt;&lt;code&gt;query_string&lt;/code&gt;&lt;/a&gt;, it will also append the query string to the generated URL. Subclasses may implement any behavior they wish, as long as the method returns a redirect-ready URL string.</source>
          <target state="translated">如果&lt;a href=&quot;#django.views.generic.base.RedirectView.query_string&quot;&gt; &lt;code&gt;query_string&lt;/code&gt; &lt;/a&gt;请求，它将查询字符串附加到生成的URL。子类可以实现其希望的任何行为，只要该方法返回可重定向的URL字符串即可。</target>
        </trans-unit>
        <trans-unit id="faf19452a1ebae56ddadfb9b942ecd374ffb45ac" translate="yes" xml:space="preserve">
          <source>If resolving one of the block arguments fails, &lt;code&gt;blocktrans&lt;/code&gt; will fall back to the default language by deactivating the currently active language temporarily with the &lt;a href=&quot;../../ref/utils#django.utils.translation.deactivate_all&quot;&gt;&lt;code&gt;deactivate_all()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">如果解析block参数之一失败， &lt;code&gt;blocktrans&lt;/code&gt; 将通过使用&lt;a href=&quot;../../ref/utils#django.utils.translation.deactivate_all&quot;&gt; &lt;code&gt;deactivate_all()&lt;/code&gt; &lt;/a&gt;函数暂时停用当前活动的语言来回退到默认语言。</target>
        </trans-unit>
        <trans-unit id="e3b2b458927a860df9d6045447f0d0faf0b56f59" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;True&lt;/code&gt;, Django&amp;rsquo;s exception handling of view functions (&lt;a href=&quot;urls#django.conf.urls.handler500&quot;&gt;&lt;code&gt;handler500&lt;/code&gt;&lt;/a&gt;, or the debug view if &lt;a href=&quot;#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;) and logging of 500 responses (&lt;a href=&quot;../topics/logging#django-request-logger&quot;&gt;django.request&lt;/a&gt;) is skipped and exceptions propagate upwards.</source>
          <target state="translated">如果设置为 &lt;code&gt;True&lt;/code&gt; ，&lt;a href=&quot;urls#django.conf.urls.handler500&quot;&gt; &lt;code&gt;handler500&lt;/code&gt; &lt;/a&gt;视图功能的Django异常处理（handler500，如果&lt;a href=&quot;#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;True&lt;/code&gt; ，则为调试视图）和500个响应的记录（&lt;a href=&quot;../topics/logging#django-request-logger&quot;&gt;django.request&lt;/a&gt;）被跳过，并且异常向上传播。</target>
        </trans-unit>
        <trans-unit id="1e3988cd635b524ad4c3e4bb0d792a1a3fb38586" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;True&lt;/code&gt;, Oracle Managed Files (OMF) tablespaces will be used. &lt;a href=&quot;#std:setting-DATAFILE&quot;&gt;&lt;code&gt;DATAFILE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-DATAFILE_TMP&quot;&gt;&lt;code&gt;DATAFILE_TMP&lt;/code&gt;&lt;/a&gt; will be ignored.</source>
          <target state="translated">如果设置为 &lt;code&gt;True&lt;/code&gt; ，则将使用Oracle托管文件（OMF）表空间。&lt;a href=&quot;#std:setting-DATAFILE&quot;&gt; &lt;code&gt;DATAFILE&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#std:setting-DATAFILE_TMP&quot;&gt; &lt;code&gt;DATAFILE_TMP&lt;/code&gt; &lt;/a&gt;将被忽略。</target>
        </trans-unit>
        <trans-unit id="0701521850d9a195a77571e1f1a78268d2492816" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;True&lt;/code&gt;, the path data will be implemented in terms of relative moves. Defaults to &lt;code&gt;False&lt;/code&gt;, meaning that absolute moves are used instead.</source>
          <target state="translated">如果设置为 &lt;code&gt;True&lt;/code&gt; ，则将根据相对移动来实现路径数据。默认为 &lt;code&gt;False&lt;/code&gt; ，这意味着将使用绝对移动。</target>
        </trans-unit>
        <trans-unit id="b3b374206c1d9d7963bc92da925a698f9a26de10" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;True&lt;/code&gt;, this option will create a database column of type geography, rather than geometry. Please refer to the &lt;a href=&quot;#geography-type&quot;&gt;geography type&lt;/a&gt; section below for more details.</source>
          <target state="translated">如果设置为 &lt;code&gt;True&lt;/code&gt; ，则此选项将创建一个地理类型而不是几何类型的数据库列。有关更多详细信息，请参阅下面的&lt;a href=&quot;#geography-type&quot;&gt;地理位置类型&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="27d12549976cfe6d3d621899eab318195533bf4e" translate="yes" xml:space="preserve">
          <source>If set to a non-zero integer value, the &lt;a href=&quot;middleware#django.middleware.security.SecurityMiddleware&quot;&gt;&lt;code&gt;SecurityMiddleware&lt;/code&gt;&lt;/a&gt; sets the &lt;a href=&quot;middleware#http-strict-transport-security&quot;&gt;HTTP Strict Transport Security&lt;/a&gt; header on all responses that do not already have it.</source>
          <target state="translated">如果设置为非零整数值，则&lt;a href=&quot;middleware#django.middleware.security.SecurityMiddleware&quot;&gt; &lt;code&gt;SecurityMiddleware&lt;/code&gt; 会&lt;/a&gt;在所有尚未使用的&lt;a href=&quot;middleware#http-strict-transport-security&quot;&gt;HTTP严格&lt;/a&gt;响应上设置HTTP Strict Transport Security标头。</target>
        </trans-unit>
        <trans-unit id="a50b195fbd06b17894ee9502ef4702bb971ad749" translate="yes" xml:space="preserve">
          <source>If set with an integer, transactions will occur at every step interval. For example, if &lt;code&gt;step=1000&lt;/code&gt;, a commit would occur after the 1,000th feature, the 2,000th feature etc.</source>
          <target state="translated">如果设置为整数，则交易将在每个步骤间隔发生。例如，如果 &lt;code&gt;step=1000&lt;/code&gt; ，则将在第1,000个特征，第2,000个特征等之后进行提交。</target>
        </trans-unit>
        <trans-unit id="d8380b522d46fe516758e3f692cac2c3f0d5ddf0" translate="yes" xml:space="preserve">
          <source>If set, information will be printed subsequent to each model save executed on the database.</source>
          <target state="translated">如果设置,则数据库上每次执行模型保存后都会打印信息。</target>
        </trans-unit>
        <trans-unit id="c30cf6e77ab684eba085d96ac7acc4917b027312" translate="yes" xml:space="preserve">
          <source>If that command doesn&amp;rsquo;t raise any errors, the installation worked.</source>
          <target state="translated">如果该命令没有引发任何错误，则说明安装成功。</target>
        </trans-unit>
        <trans-unit id="f98d28bcb8810cfb8ae43b4092760e1122f40b81" translate="yes" xml:space="preserve">
          <source>If that hypothetical database write is instead rolled back (typically when an unhandled exception is raised in an &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; block), your function will be discarded and never called.</source>
          <target state="translated">如果反而回滚了假设的数据库写操作（通常是在&lt;a href=&quot;#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt;块中引发了未处理的异常时），则函数将被丢弃并且从不调用。</target>
        </trans-unit>
        <trans-unit id="e85862c30325f5a99e9a50173133105b8ad0fe04" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#django.contrib.gis.gdal.Layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt; has no spatial reference information associated with it, &lt;code&gt;None&lt;/code&gt; is returned.</source>
          <target state="translated">如果该&lt;a href=&quot;#django.contrib.gis.gdal.Layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;没有与之关联的空间参考信息，则不返回 &lt;code&gt;None&lt;/code&gt; 内容。</target>
        </trans-unit>
        <trans-unit id="b51b9193a32e07b19adea10866b60d16f80af212" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#django.template.response.SimpleTemplateResponse&quot;&gt;&lt;code&gt;SimpleTemplateResponse&lt;/code&gt;&lt;/a&gt; has already been rendered, the callback will be invoked immediately.</source>
          <target state="translated">如果&lt;a href=&quot;#django.template.response.SimpleTemplateResponse&quot;&gt; &lt;code&gt;SimpleTemplateResponse&lt;/code&gt; &lt;/a&gt;已经呈现，则回调将立即被调用。</target>
        </trans-unit>
        <trans-unit id="10740bab3147ec45ec0f050fa0c6500025482a05" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ModelFormMixin.model&quot;&gt;&lt;code&gt;model&lt;/code&gt;&lt;/a&gt; attribute is given, that model class will be used.</source>
          <target state="translated">如果指定了&lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ModelFormMixin.model&quot;&gt; &lt;code&gt;model&lt;/code&gt; &lt;/a&gt;属性，则将使用该模型类。</target>
        </trans-unit>
        <trans-unit id="8f5c4ba24e8b583b133b407fb7b8a2c07d70e77c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;contrib/staticfiles&quot;&gt;staticfiles&lt;/a&gt; contrib app is enabled (as in the default project template), the &lt;a href=&quot;contrib/staticfiles#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; management command will collect static files into this directory. See the how-to on &lt;a href=&quot;../howto/static-files/index&quot;&gt;managing static files&lt;/a&gt; for more details about usage.</source>
          <target state="translated">如果启用了&lt;a href=&quot;contrib/staticfiles&quot;&gt;staticfiles&lt;/a&gt; contrib应用程序（如在默认项目模板中一样），&lt;a href=&quot;contrib/staticfiles#django-admin-collectstatic&quot;&gt; &lt;code&gt;collectstatic&lt;/code&gt; &lt;/a&gt;管理命令会将静态文件收集到此目录中。有关使用的更多详细信息，请参见&lt;a href=&quot;../howto/static-files/index&quot;&gt;管理静态文件&lt;/a&gt;的方法。</target>
        </trans-unit>
        <trans-unit id="934af602cfac6348740d242482f234edb0625730" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;contrib/staticfiles&quot;&gt;staticfiles&lt;/a&gt; contrib app is enabled (default in new projects) the &lt;a href=&quot;#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; command will be overridden with its own &lt;a href=&quot;contrib/staticfiles#staticfiles-runserver&quot;&gt;runserver&lt;/a&gt; command.</source>
          <target state="translated">如果启用了&lt;a href=&quot;contrib/staticfiles&quot;&gt;staticfiles&lt;/a&gt; contrib应用程序（新项目中的默认设置），则&lt;a href=&quot;#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; &lt;/a&gt;命令将被其自己的&lt;a href=&quot;contrib/staticfiles#staticfiles-runserver&quot;&gt;runserver&lt;/a&gt;命令覆盖。</target>
        </trans-unit>
        <trans-unit id="8afc9a7ac5ef4d7727722e324647e67d5a1458d6" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;fields#django.forms.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt; is not required, &lt;a href=&quot;#django.forms.SelectDateWidget&quot;&gt;&lt;code&gt;SelectDateWidget&lt;/code&gt;&lt;/a&gt; will have an empty choice at the top of the list (which is &lt;code&gt;---&lt;/code&gt; by default). You can change the text of this label with the &lt;code&gt;empty_label&lt;/code&gt; attribute. &lt;code&gt;empty_label&lt;/code&gt; can be a &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, or &lt;code&gt;tuple&lt;/code&gt;. When a string is used, all select boxes will each have an empty choice with this label. If &lt;code&gt;empty_label&lt;/code&gt; is a &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;tuple&lt;/code&gt; of 3 string elements, the select boxes will have their own custom label. The labels should be in this order &lt;code&gt;('year_label', 'month_label', 'day_label')&lt;/code&gt;.</source>
          <target state="translated">如果不需要&lt;a href=&quot;fields#django.forms.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#django.forms.SelectDateWidget&quot;&gt; &lt;code&gt;SelectDateWidget&lt;/code&gt; &lt;/a&gt;将在列表顶部具有一个空选项（默认为 &lt;code&gt;---&lt;/code&gt; ）。您可以使用 &lt;code&gt;empty_label&lt;/code&gt; 属性更改此标签的文本。 &lt;code&gt;empty_label&lt;/code&gt; 可以是 &lt;code&gt;string&lt;/code&gt; ， &lt;code&gt;list&lt;/code&gt; 或 &lt;code&gt;tuple&lt;/code&gt; 。使用字符串时，所有选择框都将带有此标签的空选择。如果 &lt;code&gt;empty_label&lt;/code&gt; 是3个字符串元素的 &lt;code&gt;list&lt;/code&gt; 或 &lt;code&gt;tuple&lt;/code&gt; ，则选择框将具有其自己的自定义标签。标签应按此顺序排列 &lt;code&gt;('year_label', 'month_label', 'day_label')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa835231e8a9a83481dbf82598e20e9d33a8a3a3" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_DOMAIN&quot;&gt;&lt;code&gt;CSRF_COOKIE_DOMAIN&lt;/code&gt;&lt;/a&gt; setting is set, the referer is compared against it. This setting supports subdomains. For example, &lt;code&gt;CSRF_COOKIE_DOMAIN = '.example.com'&lt;/code&gt; will allow POST requests from &lt;code&gt;www.example.com&lt;/code&gt; and &lt;code&gt;api.example.com&lt;/code&gt;. If the setting is not set, then the referer must match the HTTP &lt;code&gt;Host&lt;/code&gt; header.</source>
          <target state="translated">如果设置了&lt;a href=&quot;settings#std:setting-CSRF_COOKIE_DOMAIN&quot;&gt; &lt;code&gt;CSRF_COOKIE_DOMAIN&lt;/code&gt; &lt;/a&gt;设置，则将参照者与其进行比较。此设置支持子域。例如， &lt;code&gt;CSRF_COOKIE_DOMAIN = '.example.com'&lt;/code&gt; 将允许来自 &lt;code&gt;www.example.com&lt;/code&gt; 和 &lt;code&gt;api.example.com&lt;/code&gt; 的 POST请求。如果未设置，则引用者必须与HTTP &lt;code&gt;Host&lt;/code&gt; 标头匹配。</target>
        </trans-unit>
        <trans-unit id="d84c6d34373dc24879682691c703f3d7f2efc49b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;settings#std:setting-SECURE_SSL_HOST&quot;&gt;&lt;code&gt;SECURE_SSL_HOST&lt;/code&gt;&lt;/a&gt; setting has a value, all redirects will be sent to that host instead of the originally-requested host.</source>
          <target state="translated">如果&lt;a href=&quot;settings#std:setting-SECURE_SSL_HOST&quot;&gt; &lt;code&gt;SECURE_SSL_HOST&lt;/code&gt; &lt;/a&gt;设置具有值，则所有重定向将发送到该主机，而不是原始请求的主机。</target>
        </trans-unit>
        <trans-unit id="5615de50081621591758a391687a80e665e2ccbd" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt;&lt;code&gt;csrf_token&lt;/code&gt;&lt;/a&gt; template tag is used by a template (or the &lt;code&gt;get_token&lt;/code&gt; function is called some other way), &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; will add a cookie and a &lt;code&gt;Vary: Cookie&lt;/code&gt; header to the response. This means that the middleware will play well with the cache middleware if it is used as instructed (&lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; goes before all other middleware).</source>
          <target state="translated">如果模板使用了&lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt; &lt;code&gt;csrf_token&lt;/code&gt; &lt;/a&gt;模板标签（或者以其他方式调用了 &lt;code&gt;get_token&lt;/code&gt; 函数），则 &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; 将向响应添加一个cookie和一个 &lt;code&gt;Vary: Cookie&lt;/code&gt; 头。这意味着，如果按照指示使用中间件，则它将与缓存中间件很好地配合使用（ &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; 在所有其他中间件之前）。</target>
        </trans-unit>
        <trans-unit id="26bd8d1320630840541b8d7d651b43b729598b95" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Content-Type&lt;/code&gt; header is not &lt;code&gt;&quot;application/json&quot;&lt;/code&gt;, then a &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised when trying to parse the response.</source>
          <target state="translated">如果 &lt;code&gt;Content-Type&lt;/code&gt; 标头不是 &lt;code&gt;&quot;application/json&quot;&lt;/code&gt; ，则在尝试解析响应时将引发&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2acff23ea5a5ddc3c288d900245bf1fb2834f32f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Host&lt;/code&gt; header (or &lt;code&gt;X-Forwarded-Host&lt;/code&gt; if &lt;a href=&quot;#std:setting-USE_X_FORWARDED_HOST&quot;&gt;&lt;code&gt;USE_X_FORWARDED_HOST&lt;/code&gt;&lt;/a&gt; is enabled) does not match any value in this list, the &lt;a href=&quot;request-response#django.http.HttpRequest.get_host&quot;&gt;&lt;code&gt;django.http.HttpRequest.get_host()&lt;/code&gt;&lt;/a&gt; method will raise &lt;a href=&quot;exceptions#django.core.exceptions.SuspiciousOperation&quot;&gt;&lt;code&gt;SuspiciousOperation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Host&lt;/code&gt; 标头（如果启用了&lt;a href=&quot;#std:setting-USE_X_FORWARDED_HOST&quot;&gt; &lt;code&gt;USE_X_FORWARDED_HOST&lt;/code&gt; ,&lt;/a&gt;则为 &lt;code&gt;X-Forwarded-Host&lt;/code&gt; ）与该列表中的任何值都不匹配，则&lt;a href=&quot;request-response#django.http.HttpRequest.get_host&quot;&gt; &lt;code&gt;django.http.HttpRequest.get_host()&lt;/code&gt; &lt;/a&gt;方法将引发&lt;a href=&quot;exceptions#django.core.exceptions.SuspiciousOperation&quot;&gt; &lt;code&gt;SuspiciousOperation&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c585a191597195f24d023a685c724097e584557" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ManyToManyField&lt;/code&gt; points from and to the same model, the following fields are generated:</source>
          <target state="translated">如果 &lt;code&gt;ManyToManyField&lt;/code&gt; 指向和指向同一模型，则将生成以下字段：</target>
        </trans-unit>
        <trans-unit id="7111fc374211946c06667dfde5bc62beeaef76cf" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ModelForm&lt;/code&gt; is only going to be used for the admin, the easiest solution is to omit the &lt;code&gt;Meta.model&lt;/code&gt; attribute, since &lt;code&gt;ModelAdmin&lt;/code&gt; will provide the correct model to use. Alternatively, you can set &lt;code&gt;fields = []&lt;/code&gt; in the &lt;code&gt;Meta&lt;/code&gt; class to satisfy the validation on the &lt;code&gt;ModelForm&lt;/code&gt;.</source>
          <target state="translated">如果仅将 &lt;code&gt;ModelForm&lt;/code&gt; 用于管理员，则最简单的解决方案是忽略 &lt;code&gt;Meta.model&lt;/code&gt; 属性，因为 &lt;code&gt;ModelAdmin&lt;/code&gt; 将提供要使用的正确模型。另外，您可以在 &lt;code&gt;Meta&lt;/code&gt; 类中设置 &lt;code&gt;fields = []&lt;/code&gt; 来满足对 &lt;code&gt;ModelForm&lt;/code&gt; 的验证。</target>
        </trans-unit>
        <trans-unit id="94e7c57e585e52b8e93039b8fb19e79e14bdd3e1" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;RunPython&lt;/code&gt; operation is part of a &lt;a href=&quot;../howto/writing-migrations#non-atomic-migrations&quot;&gt;non-atomic migration&lt;/a&gt;, the operation will only be executed in a transaction if &lt;code&gt;atomic=True&lt;/code&gt; is passed to the &lt;code&gt;RunPython&lt;/code&gt; operation.</source>
          <target state="translated">如果 &lt;code&gt;RunPython&lt;/code&gt; 操作&lt;a href=&quot;../howto/writing-migrations#non-atomic-migrations&quot;&gt;是非原子迁移的一部分&lt;/a&gt;，则只有在将 &lt;code&gt;atomic=True&lt;/code&gt; 传递给 &lt;code&gt;RunPython&lt;/code&gt; 操作时，该操作才会在事务中执行。</target>
        </trans-unit>
        <trans-unit id="31d01216ada1a5804e326038cd6eae0f674c8905" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;approximate&lt;/code&gt; argument is set to &lt;code&gt;True&lt;/code&gt;, the statistics may be computed based on overviews or a subset of image tiles.</source>
          <target state="translated">如果 &lt;code&gt;approximate&lt;/code&gt; 参数设置为 &lt;code&gt;True&lt;/code&gt; ，则可以基于概览或图像图块的子集来计算统计信息。</target>
        </trans-unit>
        <trans-unit id="92d7232ff3bb4953caa004d3cafc9ee9c491c11a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;clear()&lt;/code&gt; method is available, any pre-existing objects will be removed from the &lt;code&gt;entry_set&lt;/code&gt; before all objects in the iterable (in this case, a list) are added to the set. If the &lt;code&gt;clear()&lt;/code&gt; method is &lt;em&gt;not&lt;/em&gt; available, all objects in the iterable will be added without removing any existing elements.</source>
          <target state="translated">如果 &lt;code&gt;clear()&lt;/code&gt; 方法可用，则在将iterable中的所有对象（在这种情况下，为列表）添加到集合之前，所有先前存在的对象将从 &lt;code&gt;entry_set&lt;/code&gt; 中删除。如果 &lt;code&gt;clear()&lt;/code&gt; 方法&lt;em&gt;不可&lt;/em&gt;用，则将在不删除任何现有元素的情况下添加iterable中的所有对象。</target>
        </trans-unit>
        <trans-unit id="2297ffae582b0075c91fa434df47e635fa35db94" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;count&lt;/code&gt; integer argument is specified, then additionally the number of &lt;code&gt;needle&lt;/code&gt; occurrences will be strictly verified.</source>
          <target state="translated">如果指定了 &lt;code&gt;count&lt;/code&gt; integer参数，则另外将严格验证 &lt;code&gt;needle&lt;/code&gt; 出现的次数。</target>
        </trans-unit>
        <trans-unit id="a2e468dac67b430f87f8897eb4897a2b9f527f58" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;disable_existing_loggers&lt;/code&gt; key in the &lt;a href=&quot;../ref/settings#std:setting-LOGGING&quot;&gt;&lt;code&gt;LOGGING&lt;/code&gt;&lt;/a&gt; dictConfig is set to &lt;code&gt;True&lt;/code&gt; (which is the &lt;code&gt;dictConfig&lt;/code&gt; default if the key is missing) then all loggers from the default configuration will be disabled. Disabled loggers are not the same as removed; the logger will still exist, but will silently discard anything logged to it, not even propagating entries to a parent logger. Thus you should be very careful using &lt;code&gt;'disable_existing_loggers': True&lt;/code&gt;; it&amp;rsquo;s probably not what you want. Instead, you can set &lt;code&gt;disable_existing_loggers&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt; and redefine some or all of the default loggers; or you can set &lt;a href=&quot;../ref/settings#std:setting-LOGGING_CONFIG&quot;&gt;&lt;code&gt;LOGGING_CONFIG&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;None&lt;/code&gt; and &lt;a href=&quot;#disabling-logging-configuration&quot;&gt;handle logging config yourself&lt;/a&gt;.</source>
          <target state="translated">如果将&lt;a href=&quot;../ref/settings#std:setting-LOGGING&quot;&gt; &lt;code&gt;LOGGING&lt;/code&gt; &lt;/a&gt; dictConfig中的 &lt;code&gt;disable_existing_loggers&lt;/code&gt; 键设置为 &lt;code&gt;True&lt;/code&gt; （如果缺少键，则是 &lt;code&gt;dictConfig&lt;/code&gt; 默认值），则将禁用默认配置中的所有记录器。禁用的记录器与已删除的记录器不同；记录器仍将存在，但会静默丢弃记录到它的任何内容，甚至不会将条目传播到父记录器。因此，使用 &lt;code&gt;'disable_existing_loggers': True&lt;/code&gt; 应该非常小心：True ;这可能不是您想要的。相反，您可以将 &lt;code&gt;disable_existing_loggers&lt;/code&gt; 设置为 &lt;code&gt;False&lt;/code&gt; ,然后重新定义一些或所有默认记录器。或者您可以将&lt;a href=&quot;../ref/settings#std:setting-LOGGING_CONFIG&quot;&gt; &lt;code&gt;LOGGING_CONFIG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;None&lt;/code&gt; 并&lt;a href=&quot;#disabling-logging-configuration&quot;&gt;自己处理日志配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="05b08f75ebf13d1d83b41dad6945c5f27a8d81f7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;keepdb&lt;/code&gt; argument is &lt;code&gt;True&lt;/code&gt;, then the connection to the database will be closed, but the database will not be destroyed.</source>
          <target state="translated">如果 &lt;code&gt;keepdb&lt;/code&gt; 参数为 &lt;code&gt;True&lt;/code&gt; ，则将关闭与数据库的连接，但不会破坏数据库。</target>
        </trans-unit>
        <trans-unit id="08a666c5a8da8f429a409a1267d3838029509ea0" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;noop&lt;/code&gt; option is present, variable lookup still takes place but the translation is skipped. This is useful when &amp;ldquo;stubbing out&amp;rdquo; content that will require translation in the future:</source>
          <target state="translated">如果存在 &lt;code&gt;noop&lt;/code&gt; 选项，则仍会进行变量查找，但会跳过翻译。当&amp;ldquo;存根&amp;rdquo;将来需要翻译的内容时，这很有用：</target>
        </trans-unit>
        <trans-unit id="2ee97327ba18c15399455629ba03a6de34dcb1f6" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;pk&lt;/code&gt; attribute in the serialized data doesn&amp;rsquo;t exist or is null, a new instance will be saved to the database.</source>
          <target state="translated">如果序列化数据中的 &lt;code&gt;pk&lt;/code&gt; 属性不存在或为null，则新实例将保存到数据库中。</target>
        </trans-unit>
        <trans-unit id="b2735b2310885870e75d0ff6691c6be8a18b8799" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;raise_exception&lt;/code&gt; parameter is given, the decorator will raise &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.PermissionDenied&quot;&gt;&lt;code&gt;PermissionDenied&lt;/code&gt;&lt;/a&gt;, prompting &lt;a href=&quot;../../ref/views#http-forbidden-view&quot;&gt;the 403 (HTTP Forbidden) view&lt;/a&gt; instead of redirecting to the login page.</source>
          <target state="translated">如果给出了 &lt;code&gt;raise_exception&lt;/code&gt; 参数，则装饰器将引发&lt;a href=&quot;../../ref/exceptions#django.core.exceptions.PermissionDenied&quot;&gt; &lt;code&gt;PermissionDenied&lt;/code&gt; &lt;/a&gt;，提示您&lt;a href=&quot;../../ref/views#http-forbidden-view&quot;&gt;在403（禁止访问HTTP）视图，&lt;/a&gt;而不是重定向到登录页面。</target>
        </trans-unit>
        <trans-unit id="8394c12ff09c1a5f8f90c7ba9e59af4e1bad9b1d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;refresh&lt;/code&gt; argument is set to &lt;code&gt;True&lt;/code&gt;, the statistics will be computed from the data directly, and the cache will be updated with the result.</source>
          <target state="translated">如果将 &lt;code&gt;refresh&lt;/code&gt; 参数设置为 &lt;code&gt;True&lt;/code&gt; ，那么将直接从数据中计算统计信息，并且将使用结果更新缓存。</target>
        </trans-unit>
        <trans-unit id="33693d4d2aaa6f581909a8eddc7f106b165a2f88" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;render()&lt;/code&gt; method of your template tag stores the result in a context variable (rather than returning the result in a string), it should take care to call &lt;code&gt;mark_safe()&lt;/code&gt; if appropriate. When the variable is ultimately rendered, it will be affected by the auto-escape setting in effect at the time, so content that should be safe from further escaping needs to be marked as such.</source>
          <target state="translated">如果模板标记的 &lt;code&gt;render()&lt;/code&gt; 方法将结果存储在上下文变量中（而不是将结果返回到字符串中），则应酌情调用 &lt;code&gt;mark_safe()&lt;/code&gt; 。最终呈现该变量时，该变量将受到当时有效的自动转义设置的影响，因此需要对应避免进一步转义的内容进行标记。</target>
        </trans-unit>
        <trans-unit id="c2101e6671e6072ad4bba4baf10eea4a340d6815" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;source&lt;/code&gt; command is not available, you can try using a dot instead:</source>
          <target state="translated">如果 &lt;code&gt;source&lt;/code&gt; 命令不可用，则可以尝试使用点代替：</target>
        </trans-unit>
        <trans-unit id="6fe133ba83ae0e8070bb7d71584bd37302738487" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;values()&lt;/code&gt; clause precedes the &lt;code&gt;annotate()&lt;/code&gt; clause, any annotations will be automatically added to the result set. However, if the &lt;code&gt;values()&lt;/code&gt; clause is applied after the &lt;code&gt;annotate()&lt;/code&gt; clause, you need to explicitly include the aggregate column.</source>
          <target state="translated">如果 &lt;code&gt;values()&lt;/code&gt; 子句位于 &lt;code&gt;annotate()&lt;/code&gt; （）子句之前，则所有注释将自动添加到结果集中。但是，如果 &lt;code&gt;values()&lt;/code&gt; 子句在 &lt;code&gt;annotate()&lt;/code&gt; 子句之后应用，则需要显式包括聚合列。</target>
        </trans-unit>
        <trans-unit id="5040996a29b439b21cdb418aa42738cf3b6d145f" translate="yes" xml:space="preserve">
          <source>If the URL accepts arguments, you may pass them in &lt;code&gt;args&lt;/code&gt;. For example:</source>
          <target state="translated">如果URL接受参数，则可以在 &lt;code&gt;args&lt;/code&gt; 中传递它们。例如：</target>
        </trans-unit>
        <trans-unit id="7e0c98ab05f016b5dde972280549bc4e7e4e4ca7" translate="yes" xml:space="preserve">
          <source>If the URL does not resolve, the function raises a &lt;a href=&quot;exceptions#django.urls.Resolver404&quot;&gt;&lt;code&gt;Resolver404&lt;/code&gt;&lt;/a&gt; exception (a subclass of &lt;a href=&quot;../topics/http/views#django.http.Http404&quot;&gt;&lt;code&gt;Http404&lt;/code&gt;&lt;/a&gt;) .</source>
          <target state="translated">如果URL无法解析，则该函数引发&lt;a href=&quot;exceptions#django.urls.Resolver404&quot;&gt; &lt;code&gt;Resolver404&lt;/code&gt; &lt;/a&gt;异常（&lt;a href=&quot;../topics/http/views#django.http.Http404&quot;&gt; &lt;code&gt;Http404&lt;/code&gt; &lt;/a&gt;的子类）。</target>
        </trans-unit>
        <trans-unit id="a05f5f3d9b9ee23fb6009484d0a452e7752eff69" translate="yes" xml:space="preserve">
          <source>If the URL you request with a POST contains encoded parameters, these parameters will be made available in the request.GET data. For example, if you were to make the request:</source>
          <target state="translated">如果你用POST请求的URL包含编码参数,这些参数将在request.GET数据中提供。例如,如果您在 request.GET 数据中加入以下内容。</target>
        </trans-unit>
        <trans-unit id="7bfe6092e2dbc4af99eae5987a2b05f2af49e616" translate="yes" xml:space="preserve">
          <source>If the argument passed to &lt;code&gt;floatformat&lt;/code&gt; is negative, it will round a number to that many decimal places &amp;ndash; but only if there&amp;rsquo;s a decimal part to be displayed. For example:</source>
          <target state="translated">如果传递给 &lt;code&gt;floatformat&lt;/code&gt; 的参数为负数，则它将数字四舍五入到小数点后位数-但前提是要显示小数部分。例如：</target>
        </trans-unit>
        <trans-unit id="37eef821508b28230557eff0648d464c18e05688" translate="yes" xml:space="preserve">
          <source>If the argument was a template variable, our function is passed the current value of the variable, not the variable itself.</source>
          <target state="translated">如果参数是模板变量,我们的函数传递的是变量的当前值,而不是变量本身。</target>
        </trans-unit>
        <trans-unit id="0cd46f87317e9cbe83ccd768d1ca1f980a06f428" translate="yes" xml:space="preserve">
          <source>If the built-in &lt;code&gt;Field&lt;/code&gt; classes don&amp;rsquo;t meet your needs, you can create custom &lt;code&gt;Field&lt;/code&gt; classes. To do this, create a subclass of &lt;code&gt;django.forms.Field&lt;/code&gt;. Its only requirements are that it implement a &lt;code&gt;clean()&lt;/code&gt; method and that its &lt;code&gt;__init__()&lt;/code&gt; method accept the core arguments mentioned above (&lt;code&gt;required&lt;/code&gt;, &lt;code&gt;label&lt;/code&gt;, &lt;code&gt;initial&lt;/code&gt;, &lt;code&gt;widget&lt;/code&gt;, &lt;code&gt;help_text&lt;/code&gt;).</source>
          <target state="translated">如果内置的 &lt;code&gt;Field&lt;/code&gt; 类不能满足您的需求，则可以创建自定义 &lt;code&gt;Field&lt;/code&gt; 类。为此，请创建 &lt;code&gt;django.forms.Field&lt;/code&gt; 的子类。它唯一的要求是实现一个 &lt;code&gt;clean()&lt;/code&gt; 方法，并且它的 &lt;code&gt;__init__()&lt;/code&gt; 方法接受上述核心参数（ &lt;code&gt;required&lt;/code&gt; ， &lt;code&gt;label&lt;/code&gt; ， &lt;code&gt;initial&lt;/code&gt; ， &lt;code&gt;widget&lt;/code&gt; ， &lt;code&gt;help_text&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0881e54800250d1cf05f08cf67b32a0f19ebd6b4" translate="yes" xml:space="preserve">
          <source>If the built-in fields don&amp;rsquo;t do the trick, you can try &lt;a href=&quot;https://github.com/django/django-localflavor&quot;&gt;django-localflavor&lt;/a&gt; (&lt;a href=&quot;https://django-localflavor.readthedocs.io/&quot;&gt;documentation&lt;/a&gt;), which contains assorted pieces of code that are useful for particular countries and cultures.</source>
          <target state="translated">如果内置字段不能解决问题，则可以尝试&lt;a href=&quot;https://github.com/django/django-localflavor&quot;&gt;django-localflavor&lt;/a&gt;（&lt;a href=&quot;https://django-localflavor.readthedocs.io/&quot;&gt;文档&lt;/a&gt;），其中包含对特定国家和地区有用的各种代码段。</target>
        </trans-unit>
        <trans-unit id="f55edd29f245a56eb902d9c4815f789400cb13c8" translate="yes" xml:space="preserve">
          <source>If the callback returns a value that is not &lt;code&gt;None&lt;/code&gt;, this will be used as the response instead of the original response object (and will be passed to the next post rendering callback etc.)</source>
          <target state="translated">如果回调返回的值不是 &lt;code&gt;None&lt;/code&gt; ，则它将用作响应而不是原始响应对象（并将传递给下一个渲染后的回调等）。</target>
        </trans-unit>
        <trans-unit id="68cb408f8b62b8a0532f41e57994c10be485c369" translate="yes" xml:space="preserve">
          <source>If the computation time for using this method is too expensive, consider using &lt;a href=&quot;#django.contrib.gis.db.models.Collect&quot;&gt;&lt;code&gt;Collect&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">如果使用此方法的计算时间过于昂贵，请考虑改为使用&amp;ldquo; &lt;a href=&quot;#django.contrib.gis.db.models.Collect&quot;&gt; &lt;code&gt;Collect&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="47b5d1532c2916d14a586f84ef6f39d88cc4cdda" translate="yes" xml:space="preserve">
          <source>If the concept of a &lt;code&gt;default&lt;/code&gt; database doesn&amp;rsquo;t make sense in the context of your project, you need to be careful to always specify the database that you want to use. Django requires that a &lt;code&gt;default&lt;/code&gt; database entry be defined, but the parameters dictionary can be left blank if it will not be used. To do this, you must set up &lt;a href=&quot;../../ref/settings#std:setting-DATABASE_ROUTERS&quot;&gt;&lt;code&gt;DATABASE_ROUTERS&lt;/code&gt;&lt;/a&gt; for all of your apps&amp;rsquo; models, including those in any contrib and third-party apps you&amp;rsquo;re using, so that no queries are routed to the default database. The following is an example &lt;code&gt;settings.py&lt;/code&gt; snippet defining two non-default databases, with the &lt;code&gt;default&lt;/code&gt; entry intentionally left empty:</source>
          <target state="translated">如果 &lt;code&gt;default&lt;/code&gt; 数据库的概念在您的项目上下文中没有意义，则需要小心始终指定要使用的数据库。 Django要求定义 &lt;code&gt;default&lt;/code&gt; 数据库条目，但是如果不使用参数字典，则可以将其保留为空白。为此，您必须为所有应用程序模型设置&lt;a href=&quot;../../ref/settings#std:setting-DATABASE_ROUTERS&quot;&gt; &lt;code&gt;DATABASE_ROUTERS&lt;/code&gt; &lt;/a&gt;，包括正在使用的任何contrib和第三方应用程序中的模型，以便将任何查询都不路由到默认数据库。以下是一个示例 &lt;code&gt;settings.py&lt;/code&gt; 片段，定义了两个非默认数据库， &lt;code&gt;default&lt;/code&gt; 条目有意留为空白：</target>
        </trans-unit>
        <trans-unit id="eeb6db1ade98b249e264e62c08a05f0b6e4af339" translate="yes" xml:space="preserve">
          <source>If the content to be serialized contains control characters that are not accepted in the XML 1.0 standard, the serialization will fail with a &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; exception. Read also the W3C&amp;rsquo;s explanation of &lt;a href=&quot;https://www.w3.org/International/questions/qa-controls&quot;&gt;HTML, XHTML, XML and Control Codes&lt;/a&gt;.</source>
          <target state="translated">如果要序列化的内容包含XML 1.0标准不接受的控制字符，则序列化将失败，并出现&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;异常。另请阅读W3C对&lt;a href=&quot;https://www.w3.org/International/questions/qa-controls&quot;&gt;HTML，XHTML，XML和控制代码&lt;/a&gt;的解释。</target>
        </trans-unit>
        <trans-unit id="4525ae9d6cf2854a6fcb0608be8b93a3f3c30647" translate="yes" xml:space="preserve">
          <source>If the current time zone raises an exception for datetimes that don&amp;rsquo;t exist or are ambiguous because they fall in a DST transition (the timezones provided by &lt;a href=&quot;http://pytz.sourceforge.net/&quot;&gt;pytz&lt;/a&gt; do this), such datetimes will be reported as invalid values.</source>
          <target state="translated">如果当前时区由于不属于DST转换（因为&lt;a href=&quot;http://pytz.sourceforge.net/&quot;&gt;pytz&lt;/a&gt;提供的时区会这样做）而导致不存在或不明确的日期时间引发异常，则此类日期时间将报告为无效值。</target>
        </trans-unit>
        <trans-unit id="f4e60e6c3027fafd4a1a2f98a5fa17785a3288ae" translate="yes" xml:space="preserve">
          <source>If the custom through table defined by the intermediate model does not enforce uniqueness on the &lt;code&gt;(model1, model2)&lt;/code&gt; pair, allowing multiple values, the &lt;a href=&quot;../../ref/models/relations#django.db.models.fields.related.RelatedManager.remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; call will remove all intermediate model instances:</source>
          <target state="translated">如果中间模型定义的自定义通过表未对 &lt;code&gt;(model1, model2)&lt;/code&gt; 对施加唯一性，从而允许多个值，则&lt;a href=&quot;../../ref/models/relations#django.db.models.fields.related.RelatedManager.remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;调用将删除所有中间模型实例：</target>
        </trans-unit>
        <trans-unit id="24e26eeaf3ed6a6240170bc7969a0916fee521c8" translate="yes" xml:space="preserve">
          <source>If the database column name is a Python reserved word (such as &lt;code&gt;'pass'&lt;/code&gt;, &lt;code&gt;'class'&lt;/code&gt; or &lt;code&gt;'for'&lt;/code&gt;), &lt;code&gt;inspectdb&lt;/code&gt; will append &lt;code&gt;'_field'&lt;/code&gt; to the attribute name. For example, if a table has a column &lt;code&gt;'for'&lt;/code&gt;, the generated model will have a field &lt;code&gt;'for_field'&lt;/code&gt;, with the &lt;code&gt;db_column&lt;/code&gt; attribute set to &lt;code&gt;'for'&lt;/code&gt;. &lt;code&gt;inspectdb&lt;/code&gt; will insert the Python comment &lt;code&gt;'Field renamed because it was a Python reserved word.'&lt;/code&gt; next to the field.</source>
          <target state="translated">如果数据库列名称是Python保留字（例如 &lt;code&gt;'pass'&lt;/code&gt; ， &lt;code&gt;'class'&lt;/code&gt; 或 &lt;code&gt;'for'&lt;/code&gt; ）， &lt;code&gt;inspectdb&lt;/code&gt; 会将 &lt;code&gt;'_field'&lt;/code&gt; 追加到属性名称之后。例如，如果表 &lt;code&gt;'for_field'&lt;/code&gt; &lt;code&gt;'for'&lt;/code&gt; ，则生成的模型将具有字段'for_field'，且 &lt;code&gt;db_column&lt;/code&gt; 属性设置为 &lt;code&gt;'for'&lt;/code&gt; 。 &lt;code&gt;inspectdb&lt;/code&gt; 将插入Python注释 &lt;code&gt;'Field renamed because it was a Python reserved word.'&lt;/code&gt; 旁边的领域。</target>
        </trans-unit>
        <trans-unit id="b433adee0cff9f7e77689b285a176f694c2dfe64" translate="yes" xml:space="preserve">
          <source>If the database has the &lt;code&gt;supports_combined_alters&lt;/code&gt;, Django will try and do as many of these in a single database call as possible; otherwise, it will issue a separate ALTER statement for each change, but will not issue ALTERs where no change is required (as South often did).</source>
          <target state="translated">如果数据库具有 &lt;code&gt;supports_combined_alters&lt;/code&gt; ，则Django将尝试在单个数据库调用中执行尽可能多的操作；否则，它将为每个更改发出单独的ALTER语句，但不会在不需要更改的情况下发出ALTER（如South经常这样做）。</target>
        </trans-unit>
        <trans-unit id="2b6214efcbb5905b7ba74c2ae487377c68437bf4" translate="yes" xml:space="preserve">
          <source>If the database is responsible for updating the field, the process is more robust: it will only ever update the field based on the value of the field in the database when the &lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;update()&lt;/code&gt; is executed, rather than based on its value when the instance was retrieved.</source>
          <target state="translated">如果数据库负责更新字段，则该过程将更可靠：它只会根据执行&lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;update()&lt;/code&gt; 时数据库中字段的值来更新字段，而不是根据其值来更新字段检索实例时的值。</target>
        </trans-unit>
        <trans-unit id="75e620c38af1daa6c954718d3fb54518ed7eaca8" translate="yes" xml:space="preserve">
          <source>If the database supports it, you can specify the start and end points based on values of an expression in the partition. If the &lt;code&gt;released&lt;/code&gt; field of the &lt;code&gt;Movie&lt;/code&gt; model stores the release month of each movies, this &lt;code&gt;ValueRange&lt;/code&gt; example annotates each movie with the average rating of a movie&amp;rsquo;s peers released between twelve months before and twelve months after the each movie.</source>
          <target state="translated">如果数据库支持，则可以基于分区中表达式的值指定起点和终点。如果 &lt;code&gt;Movie&lt;/code&gt; 模型的 &lt;code&gt;released&lt;/code&gt; 字段存储了每个电影的发布月份，则此 &lt;code&gt;ValueRange&lt;/code&gt; 示例将用每个电影之前12个月和之后12个月之间发布的电影同级的平均评分来注释每个电影。</target>
        </trans-unit>
        <trans-unit id="de682c7bb318e9e4b8081e3ba95e6e42e73b0668" translate="yes" xml:space="preserve">
          <source>If the default value (&lt;code&gt;None&lt;/code&gt;) is used with the SQLite database engine, the tests will use a memory resident database. For all other database engines the test database will use the name &lt;code&gt;'test_' + DATABASE_NAME&lt;/code&gt;.</source>
          <target state="translated">如果SQLite数据库引擎使用默认值（ &lt;code&gt;None&lt;/code&gt; ），则测试将使用内存驻留数据库。对于所有其他数据库引擎，测试数据库将使用名称 &lt;code&gt;'test_' + DATABASE_NAME&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="31d7e870cfce92781ed62069a8d06aed8bd6f166" translate="yes" xml:space="preserve">
          <source>If the email address provided does not exist in the system, the user is inactive, or has an unusable password, the user will still be redirected to this view but no email will be sent.</source>
          <target state="translated">如果所提供的电子邮件地址在系统中不存在,用户不活跃,或有一个无法使用的密码,用户仍然会被重定向到这个视图,但不会发送电子邮件。</target>
        </trans-unit>
        <trans-unit id="db3ee4ff45ccc9f4fcd4236a06eb867d73a8a85f" translate="yes" xml:space="preserve">
          <source>If the email address provided does not exist in the system, this view won&amp;rsquo;t send an email, but the user won&amp;rsquo;t receive any error message either. This prevents information leaking to potential attackers. If you want to provide an error message in this case, you can subclass &lt;a href=&quot;#django.contrib.auth.forms.PasswordResetForm&quot;&gt;&lt;code&gt;PasswordResetForm&lt;/code&gt;&lt;/a&gt; and use the &lt;code&gt;form_class&lt;/code&gt; attribute.</source>
          <target state="translated">如果系统中不存在提供的电子邮件地址，则该视图将不会发送电子邮件，但用户也不会收到任何错误消息。这样可以防止信息泄露给潜在的攻击者。如果要在这种情况下提供错误消息，则可以将&lt;a href=&quot;#django.contrib.auth.forms.PasswordResetForm&quot;&gt; &lt;code&gt;PasswordResetForm&lt;/code&gt; &lt;/a&gt;子类化，并使用 &lt;code&gt;form_class&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="c99e2655adb8e99185dcdfcf065a8bd817fd52d8" translate="yes" xml:space="preserve">
          <source>If the feed format is totally custom, you&amp;rsquo;ll want to subclass &lt;code&gt;SyndicationFeed&lt;/code&gt; and completely replace the &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;writeString()&lt;/code&gt; methods.</source>
          <target state="translated">如果提要格式是完全自定义的，则需要对 &lt;code&gt;SyndicationFeed&lt;/code&gt; 进行子类化，并完全替换 &lt;code&gt;write()&lt;/code&gt; 和 &lt;code&gt;writeString()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="e7368b6434626ac779365385ae08f94dbbeb6a28" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;code&gt;BooleanField&lt;/code&gt;, Django will display a pretty &amp;ldquo;on&amp;rdquo; or &amp;ldquo;off&amp;rdquo; icon instead of &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">如果该字段是 &lt;code&gt;BooleanField&lt;/code&gt; ，则Django将显示一个漂亮的&amp;ldquo; on&amp;rdquo;或&amp;ldquo; off&amp;rdquo;图标，而不是 &lt;code&gt;True&lt;/code&gt; 或 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93a5e61f0fff2318c8177651d57e9f9df8232f8d" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;code&gt;ForeignKey&lt;/code&gt;, Django will display the &lt;code&gt;__str__()&lt;/code&gt; of the related object.</source>
          <target state="translated">如果该字段是 &lt;code&gt;ForeignKey&lt;/code&gt; ，则Django将显示相关对象的 &lt;code&gt;__str__()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="187bb90cacedf45099edc0ce8a570d93fd2dd2d0" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;code&gt;ForeignKey&lt;/code&gt;, this will also add the foreign key constraint to the column.</source>
          <target state="translated">如果该字段是 &lt;code&gt;ForeignKey&lt;/code&gt; ，这还将向该列添加外键约束。</target>
        </trans-unit>
        <trans-unit id="7fc4678d8fbbd49c904395e0d20c16a282bf2e32" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;code&gt;ManyToManyField&lt;/code&gt; without a value for &lt;code&gt;through&lt;/code&gt;, instead of creating a column, it will make a table to represent the relationship. If &lt;code&gt;through&lt;/code&gt; is provided, it is a no-op.</source>
          <target state="translated">如果该字段是 &lt;code&gt;ManyToManyField&lt;/code&gt; ,而没有 &lt;code&gt;through&lt;/code&gt; 的值，则它会创建一个表来表示该关系，而不是创建一列。如果提供 &lt;code&gt;through&lt;/code&gt; ，则为无操作。</target>
        </trans-unit>
        <trans-unit id="c3e41a9270c1726202619f246ad8066eeba76c80" translate="yes" xml:space="preserve">
          <source>If the field is a ManyToManyField without a value for &lt;code&gt;through&lt;/code&gt;, it will remove the table created to track the relationship. If &lt;code&gt;through&lt;/code&gt; is provided, it is a no-op.</source>
          <target state="translated">如果该字段是没有某个值的ManyToManyField &lt;code&gt;through&lt;/code&gt; ，它会删除创建跟踪关系表。如果提供 &lt;code&gt;through&lt;/code&gt; ，则为无操作。</target>
        </trans-unit>
        <trans-unit id="2eb25c25d3d9375ffc539e7ad5b8fd3b1ac65ecc" translate="yes" xml:space="preserve">
          <source>If the fields that you&amp;rsquo;re combining are of different types you&amp;rsquo;ll need to tell Django what kind of field will be returned. Since &lt;code&gt;F()&lt;/code&gt; does not directly support &lt;code&gt;output_field&lt;/code&gt; you will need to wrap the expression with &lt;a href=&quot;#django.db.models.ExpressionWrapper&quot;&gt;&lt;code&gt;ExpressionWrapper&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果您要合并的字段具有不同的类型，则需要告诉Django将返回哪种类型的字段。由于 &lt;code&gt;F()&lt;/code&gt; 不直接支持 &lt;code&gt;output_field&lt;/code&gt; ,因此您需要使用&lt;a href=&quot;#django.db.models.ExpressionWrapper&quot;&gt; &lt;code&gt;ExpressionWrapper&lt;/code&gt; &lt;/a&gt;包装表达式：</target>
        </trans-unit>
        <trans-unit id="920dc62d10b6075521a8826f302508a777dbe1bd" translate="yes" xml:space="preserve">
          <source>If the flatpage has a custom template, it loads that template. Otherwise, it loads the template &lt;code&gt;flatpages/default.html&lt;/code&gt;.</source>
          <target state="translated">如果平面具有自定义模板，则它将加载该模板。否则，它将加载模板 &lt;code&gt;flatpages/default.html&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14fdac3e377218b7cc6f1824107094f6dfcc7132" translate="yes" xml:space="preserve">
          <source>If the form is bound to data, the HTML output will include that data appropriately. For example, if a field is represented by an &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt;, the data will be in the &lt;code&gt;value&lt;/code&gt; attribute. If a field is represented by an &lt;code&gt;&amp;lt;input type=&quot;checkbox&quot;&amp;gt;&lt;/code&gt;, then that HTML will include &lt;code&gt;checked&lt;/code&gt; if appropriate:</source>
          <target state="translated">如果表单绑定到数据，则HTML输出将适当地包含该数据。例如，如果一个字段由 &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt; ，则数据将在 &lt;code&gt;value&lt;/code&gt; 属性中。如果一个字段由 &lt;code&gt;&amp;lt;input type=&quot;checkbox&quot;&amp;gt;&lt;/code&gt; ，则该HTML将在适当的情况下包括 &lt;code&gt;checked&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="2347bbb524d905c24374a2f0eed006de697e76e6" translate="yes" xml:space="preserve">
          <source>If the form is submitted using a &lt;code&gt;POST&lt;/code&gt; request, the view will once again create a form instance and populate it with data from the request: &lt;code&gt;form =
NameForm(request.POST)&lt;/code&gt; This is called &amp;ldquo;binding data to the form&amp;rdquo; (it is now a &lt;em&gt;bound&lt;/em&gt; form).</source>
          <target state="translated">如果使用 &lt;code&gt;POST&lt;/code&gt; 请求提交表单，则视图将再次创建一个表单实例，并使用请求中的数据填充该表单实例： &lt;code&gt;form = NameForm(request.POST)&lt;/code&gt; 这称为&amp;ldquo;将数据绑定到表单&amp;rdquo;（现在是一个&lt;em&gt;结合的&lt;/em&gt;形式）。</target>
        </trans-unit>
        <trans-unit id="a9757191fc0fc873cf4bf622fc86ad210c659471" translate="yes" xml:space="preserve">
          <source>If the form object passed to a template has a different name within the context, you can alias it using the &lt;code&gt;with&lt;/code&gt; argument of the &lt;a href=&quot;../../ref/templates/builtins#std:templatetag-include&quot;&gt;&lt;code&gt;include&lt;/code&gt;&lt;/a&gt; tag:</source>
          <target state="translated">如果传递给模板的表单对象在上下文中具有不同的名称，则可以使用&lt;a href=&quot;../../ref/templates/builtins#std:templatetag-include&quot;&gt; &lt;code&gt;include&lt;/code&gt; &lt;/a&gt;标记的 &lt;code&gt;with&lt;/code&gt; 参数对其进行别名：</target>
        </trans-unit>
        <trans-unit id="d04738f31fd24193f9e0dc204f8a74807516e46f" translate="yes" xml:space="preserve">
          <source>If the front page, displaying the latest blog entries, only changes when you add a new blog entry, you can compute the last modified time very quickly. You need the latest &lt;code&gt;published&lt;/code&gt; date for every entry associated with that blog. One way to do this would be:</source>
          <target state="translated">如果显示最新博客条目的首页仅在添加新博客条目时发生更改，则可以非常快速地计算上次修改时间。您需要与该博客关联的每个条目的最新 &lt;code&gt;published&lt;/code&gt; 日期。一种方法是：</target>
        </trans-unit>
        <trans-unit id="a34161a59a4f0d30905cb9967f322b4a368ff736" translate="yes" xml:space="preserve">
          <source>If the given URL is &lt;code&gt;None&lt;/code&gt;, Django will return an &lt;code&gt;HttpResponseGone&lt;/code&gt; (410).</source>
          <target state="translated">如果给定的URL为 &lt;code&gt;None&lt;/code&gt; ，则Django将返回 &lt;code&gt;HttpResponseGone&lt;/code&gt; （410）。</target>
        </trans-unit>
        <trans-unit id="1a04dcff64887ebdbc5f16a342619a164a3cd7da" translate="yes" xml:space="preserve">
          <source>If the given URL is not found, accessing this attribute will raise a &lt;a href=&quot;../../ref/exceptions#django.urls.Resolver404&quot;&gt;&lt;code&gt;Resolver404&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">如果找不到给定的URL，则访问此属性将引发&lt;a href=&quot;../../ref/exceptions#django.urls.Resolver404&quot;&gt; &lt;code&gt;Resolver404&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="f77d4aed574a50b3060efbb746c1d73ca1c67d9a" translate="yes" xml:space="preserve">
          <source>If the input is a file path, the raster is opened from there. If the input is raw data in a dictionary, the parameters &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, and &lt;code&gt;srid&lt;/code&gt; are required. If the input is a bytes object, it will be opened using a GDAL virtual filesystem.</source>
          <target state="translated">如果输入是文件路径，则从那里打开栅格。如果输入是字典中的原始数据，则需要参数 &lt;code&gt;width&lt;/code&gt; ， &lt;code&gt;height&lt;/code&gt; 和 &lt;code&gt;srid&lt;/code&gt; 。如果输入是字节对象，则将使用GDAL虚拟文件系统将其打开。</target>
        </trans-unit>
        <trans-unit id="00448ece8c00dea5fb14fcecd674a9b61b65198b" translate="yes" xml:space="preserve">
          <source>If the key is an integer, it will be interpreted as an index lookup in an array:</source>
          <target state="translated">如果键是一个整数,它将被解释为一个数组中的索引查找。</target>
        </trans-unit>
        <trans-unit id="ac79a02ca9d1e219d3a805f08c37df80bb98035e" translate="yes" xml:space="preserve">
          <source>If the key you wish to query by clashes with the name of another lookup, use the &lt;a href=&quot;#std:fieldlookup-jsonfield.contains&quot;&gt;&lt;code&gt;jsonfield.contains&lt;/code&gt;&lt;/a&gt; lookup instead.</source>
          <target state="translated">如果您希望通过查询来查询的键与另一个查询的名称发生冲突，请改用&lt;a href=&quot;#std:fieldlookup-jsonfield.contains&quot;&gt; &lt;code&gt;jsonfield.contains&lt;/code&gt; &lt;/a&gt;查找。</target>
        </trans-unit>
        <trans-unit id="407cc2b75a43efab538c3808b42253f8c6a41dce" translate="yes" xml:space="preserve">
          <source>If the key you wish to query by clashes with the name of another lookup, you need to use the &lt;a href=&quot;#std:fieldlookup-hstorefield.contains&quot;&gt;&lt;code&gt;hstorefield.contains&lt;/code&gt;&lt;/a&gt; lookup instead.</source>
          <target state="translated">如果要查询的键与另一个查找的名称冲突，则需要使用&lt;a href=&quot;#std:fieldlookup-hstorefield.contains&quot;&gt; &lt;code&gt;hstorefield.contains&lt;/code&gt; &lt;/a&gt;查找。</target>
        </trans-unit>
        <trans-unit id="5ebd9152465f3666cabb8bf46cfee56114d51e1f" translate="yes" xml:space="preserve">
          <source>If the locale middleware is active, it provides a fallback language in case the user&amp;rsquo;s preferred language can&amp;rsquo;t be determined or is not supported by the website. It also provides the fallback translation when a translation for a given literal doesn&amp;rsquo;t exist for the user&amp;rsquo;s preferred language.</source>
          <target state="translated">如果语言环境中间件处于活动状态，则它会提供一种备用语言，以防无法确定用户的首选语言或网站不支持该语言。当给定文字的用户首选语言的翻译不存在时，它还提供后备翻译。</target>
        </trans-unit>
        <trans-unit id="b655b28cf85b0e9ab6424f2bae76d62937214d02" translate="yes" xml:space="preserve">
          <source>If the locale middleware isn&amp;rsquo;t in use, it decides which translation is served to all users.</source>
          <target state="translated">如果不使用语言环境中间件，则它将决定为所有用户提供哪种翻译。</target>
        </trans-unit>
        <trans-unit id="8c593d7145885e16ebab0576dd01ea5edc8eb619" translate="yes" xml:space="preserve">
          <source>If the location is already an absolute URI, it will not be altered. Otherwise the absolute URI is built using the server variables available in this request. For example:</source>
          <target state="translated">如果位置已经是一个绝对URI,它将不会被改变。否则,绝对URI将使用这个请求中可用的服务器变量建立。例如</target>
        </trans-unit>
        <trans-unit id="d3264db38633da128d75c5eb268e476d4a3b951a" translate="yes" xml:space="preserve">
          <source>If the log record contains a &lt;code&gt;request&lt;/code&gt; attribute, the full details of the request will be included in the email. The email subject will include the phrase &amp;ldquo;internal IP&amp;rdquo; if the client&amp;rsquo;s IP address is in the &lt;a href=&quot;../ref/settings#std:setting-INTERNAL_IPS&quot;&gt;&lt;code&gt;INTERNAL_IPS&lt;/code&gt;&lt;/a&gt; setting; if not, it will include &amp;ldquo;EXTERNAL IP&amp;rdquo;.</source>
          <target state="translated">如果日志记录包含 &lt;code&gt;request&lt;/code&gt; 属性，则请求的完整详细信息将包含在电子邮件中。如果客户的IP地址在&lt;a href=&quot;../ref/settings#std:setting-INTERNAL_IPS&quot;&gt; &lt;code&gt;INTERNAL_IPS&lt;/code&gt; &lt;/a&gt;设置中，则电子邮件主题将包含短语&amp;ldquo;内部IP&amp;rdquo; ；如果没有，它将包括&amp;ldquo; EXTERNAL IP&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="558c854eeaec5a7ab6be858905f8f23539e7a64a" translate="yes" xml:space="preserve">
          <source>If the log record contains stack trace information, that stack trace will be included in the email.</source>
          <target state="translated">如果日志记录中包含堆栈跟踪信息,该堆栈跟踪信息将包含在电子邮件中。</target>
        </trans-unit>
        <trans-unit id="8d11f19d1f78b5ab369ba0f054bb8ddefd7d18dc" translate="yes" xml:space="preserve">
          <source>If the matched URL pattern contained no named groups, then the matches from the regular expression are provided as positional arguments.</source>
          <target state="translated">如果匹配的URL模式中不包含命名组,那么正则表达式中的匹配结果将作为位置参数提供。</target>
        </trans-unit>
        <trans-unit id="f27bc33c579e0ba1b671f20cb2b969680090aa80" translate="yes" xml:space="preserve">
          <source>If the middleware is enabled, the language can be set by creating a cookie with a name of &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGE_COOKIE_NAME&quot;&gt;&lt;code&gt;LANGUAGE_COOKIE_NAME&lt;/code&gt;&lt;/a&gt; and a value of the language code:</source>
          <target state="translated">如果启用了中间件，则可以通过创建名称为&lt;a href=&quot;../../ref/settings#std:setting-LANGUAGE_COOKIE_NAME&quot;&gt; &lt;code&gt;LANGUAGE_COOKIE_NAME&lt;/code&gt; &lt;/a&gt;的cookie 和语言代码的值来设置语言：</target>
        </trans-unit>
        <trans-unit id="f8b3db4161aa1f1d9ef7d96ed438167b2a06057a" translate="yes" xml:space="preserve">
          <source>If the middleware isn&amp;rsquo;t enabled, the active language may be set using &lt;a href=&quot;../../ref/utils#django.utils.translation.override&quot;&gt;&lt;code&gt;translation.override()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果未启用中间件，则可以使用&lt;a href=&quot;../../ref/utils#django.utils.translation.override&quot;&gt; &lt;code&gt;translation.override()&lt;/code&gt; &lt;/a&gt;设置活动语言：</target>
        </trans-unit>
        <trans-unit id="77e0e8d1467be7a2d6e9f0484b05652c14f7c823" translate="yes" xml:space="preserve">
          <source>If the model field has &lt;code&gt;blank=True&lt;/code&gt;, then &lt;code&gt;required&lt;/code&gt; is set to &lt;code&gt;False&lt;/code&gt; on the form field. Otherwise, &lt;code&gt;required=True&lt;/code&gt;.</source>
          <target state="translated">如果模型字段具有 &lt;code&gt;blank=True&lt;/code&gt; ，则在表单字段上将 &lt;code&gt;required&lt;/code&gt; 设置为 &lt;code&gt;False&lt;/code&gt; 。否则， &lt;code&gt;required=True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b6ce905c045e003d848e1a4bfebb8367398b55a5" translate="yes" xml:space="preserve">
          <source>If the model field has &lt;code&gt;choices&lt;/code&gt; set, then the form field&amp;rsquo;s &lt;code&gt;widget&lt;/code&gt; will be set to &lt;code&gt;Select&lt;/code&gt;, with choices coming from the model field&amp;rsquo;s &lt;code&gt;choices&lt;/code&gt;. The choices will normally include the blank choice which is selected by default. If the field is required, this forces the user to make a selection. The blank choice will not be included if the model field has &lt;code&gt;blank=False&lt;/code&gt; and an explicit &lt;code&gt;default&lt;/code&gt; value (the &lt;code&gt;default&lt;/code&gt; value will be initially selected instead).</source>
          <target state="translated">如果模型字段设置了 &lt;code&gt;choices&lt;/code&gt; ，则表单字段的 &lt;code&gt;widget&lt;/code&gt; 将设置为 &lt;code&gt;Select&lt;/code&gt; ，其中选项来自模型字段的 &lt;code&gt;choices&lt;/code&gt; 。这些选项通常包括默认情况下选择的空白选项。如果需要该字段，这将迫使用户进行选择。如果模型字段具有 &lt;code&gt;blank=False&lt;/code&gt; 和一个明确的 &lt;code&gt;default&lt;/code&gt; 值（ &lt;code&gt;default&lt;/code&gt; 将默认选择默认值），则不包括空白选项。</target>
        </trans-unit>
        <trans-unit id="f96a82c6715c5a715a0e01211ac8adf4e12046a4" translate="yes" xml:space="preserve">
          <source>If the model&amp;rsquo;s primary key is an &lt;a href=&quot;fields#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt; it does not retrieve and set the primary key attribute, as &lt;code&gt;save()&lt;/code&gt; does, unless the database backend supports it (currently PostgreSQL).</source>
          <target state="translated">如果模型的主键是&lt;a href=&quot;fields#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; ,&lt;/a&gt;则它不会像 &lt;code&gt;save()&lt;/code&gt; 那样检索和设置主键属性，除非数据库后端支持它（当前为PostgreSQL）。</target>
        </trans-unit>
        <trans-unit id="b759c75b1b279d612802ffa84e3c983524d1b418" translate="yes" xml:space="preserve">
          <source>If the named fixture has a file extension, only fixtures of that type will be loaded. For example:</source>
          <target state="translated">如果命名的夹具有一个文件扩展名,只有该类型的夹具才会被加载。例如</target>
        </trans-unit>
        <trans-unit id="362d07b2752f99df71674036aec9a530c5efa750" translate="yes" xml:space="preserve">
          <source>If the named key does not exist, &lt;code&gt;InvalidCacheBackendError&lt;/code&gt; will be raised.</source>
          <target state="translated">如果指定的键不存在，将引发 &lt;code&gt;InvalidCacheBackendError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a668f34f8121048f3d4b44ccf50ee64fbbfdbd16" translate="yes" xml:space="preserve">
          <source>If the normal base manager class (&lt;a href=&quot;#django.db.models.Manager&quot;&gt;&lt;code&gt;django.db.models.Manager&lt;/code&gt;&lt;/a&gt;) isn&amp;rsquo;t appropriate for your circumstances, you can tell Django which class to use by setting &lt;a href=&quot;../../ref/models/options#django.db.models.Options.base_manager_name&quot;&gt;&lt;code&gt;Meta.base_manager_name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果普通的基本管理器类（&lt;a href=&quot;#django.db.models.Manager&quot;&gt; &lt;code&gt;django.db.models.Manager&lt;/code&gt; &lt;/a&gt;）不适合您的情况，则可以通过设置&lt;a href=&quot;../../ref/models/options#django.db.models.Options.base_manager_name&quot;&gt; &lt;code&gt;Meta.base_manager_name&lt;/code&gt; &lt;/a&gt;来告诉Django使用哪个类。</target>
        </trans-unit>
        <trans-unit id="826ea8b39c2adb284a994b3ac295d22a4f3c7746" translate="yes" xml:space="preserve">
          <source>If the number of items in the initial data exceeds &lt;code&gt;max_num&lt;/code&gt;, all initial data forms will be displayed regardless of the value of &lt;code&gt;max_num&lt;/code&gt; and no extra forms will be displayed. For example, if &lt;code&gt;extra=3&lt;/code&gt; and &lt;code&gt;max_num=1&lt;/code&gt; and the formset is initialized with two initial items, two forms with the initial data will be displayed.</source>
          <target state="translated">如果初始数据中的项目数超过 &lt;code&gt;max_num&lt;/code&gt; ，则将显示所有初始数据表单，而不管 &lt;code&gt;max_num&lt;/code&gt; 的值如何，并且不会显示任何额外的表单。例如，如果 &lt;code&gt;extra=3&lt;/code&gt; 和 &lt;code&gt;max_num=1&lt;/code&gt; 且使用两个初始项初始化表单集，则将显示两个具有初始数据的表单。</target>
        </trans-unit>
        <trans-unit id="9a54427017bdff00314afd5156803ed55090ab15" translate="yes" xml:space="preserve">
          <source>If the number of items in the input is different from the target pixel block, the &lt;code&gt;shape&lt;/code&gt; parameter must be specified. The shape is a tuple that specifies the width and height of the input data in pixels. The data is then replicated to update the pixel values of the selected block. This is useful to fill an entire band with a single value, for instance.</source>
          <target state="translated">如果输入中的项目数与目标像素块不同，则必须指定 &lt;code&gt;shape&lt;/code&gt; 参数。形状是一个元组，以像素为单位指定输入数据的宽度和高度。然后复制数据以更新所选块的像素值。例如，这对于用单个值填充整个波段很有用。</target>
        </trans-unit>
        <trans-unit id="a6a6749b0e99cb6050db9cf3716874b3e4ced2ec" translate="yes" xml:space="preserve">
          <source>If the object doesn&amp;rsquo;t exist in the cache, &lt;code&gt;cache.get()&lt;/code&gt; returns &lt;code&gt;None&lt;/code&gt;:</source>
          <target state="translated">如果对象在缓存中不存在，则 &lt;code&gt;cache.get()&lt;/code&gt; 返回 &lt;code&gt;None&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="646d736dabdd25c732e89d37d9d4201115c381b3" translate="yes" xml:space="preserve">
          <source>If the object&amp;rsquo;s primary key attribute defines a &lt;a href=&quot;fields#django.db.models.Field.default&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt; then Django executes an &lt;code&gt;UPDATE&lt;/code&gt; if it is an existing model instance and primary key is set to a value that exists in the database. Otherwise, Django executes an &lt;code&gt;INSERT&lt;/code&gt;.</source>
          <target state="translated">如果对象的主键属性定义了&lt;a href=&quot;fields#django.db.models.Field.default&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;则Django将执行 &lt;code&gt;UPDATE&lt;/code&gt; (如果它是现有的模型实例）并且主键设置为数据库中存在的值。否则，Django执行 &lt;code&gt;INSERT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c671ef226635a52b529ee6c4d9e1022741a8176d" translate="yes" xml:space="preserve">
          <source>If the object&amp;rsquo;s primary key attribute is &lt;em&gt;not&lt;/em&gt; set or if the &lt;code&gt;UPDATE&lt;/code&gt; didn&amp;rsquo;t update anything (e.g. if primary key is set to a value that doesn&amp;rsquo;t exist in the database), Django executes an &lt;code&gt;INSERT&lt;/code&gt;.</source>
          <target state="translated">如果&lt;em&gt;未&lt;/em&gt;设置对象的主键属性，或者 &lt;code&gt;UPDATE&lt;/code&gt; 未更新任何内容（例如，如果主键设置为数据库中不存在的值），则Django执行 &lt;code&gt;INSERT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e28fb5ae884b5520d6c8a7cdb6b70dbd48ca7eb" translate="yes" xml:space="preserve">
          <source>If the object&amp;rsquo;s primary key attribute is set to a value that evaluates to &lt;code&gt;True&lt;/code&gt; (i.e., a value other than &lt;code&gt;None&lt;/code&gt; or the empty string), Django executes an &lt;code&gt;UPDATE&lt;/code&gt;.</source>
          <target state="translated">如果对象的主键属性设置为计算结果为 &lt;code&gt;True&lt;/code&gt; 的值（即， &lt;code&gt;None&lt;/code&gt; 或空字符串以外的值），则Django执行 &lt;code&gt;UPDATE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34a7e5104e15b8b6de4d5070431c0318f28a763a" translate="yes" xml:space="preserve">
          <source>If the old &lt;code&gt;number_sold&lt;/code&gt; value retrieved from the database was 10, then the value of 11 will be written back to the database.</source>
          <target state="translated">如果从数据库中检索到的旧 &lt;code&gt;number_sold&lt;/code&gt; 值为10，则值11将被写回到数据库中。</target>
        </trans-unit>
        <trans-unit id="aca412a3a96d6dc532c6fed74ff3abb6bb8b6222" translate="yes" xml:space="preserve">
          <source>If the optional destination is provided, Django will use that existing directory as the project directory, and create &lt;code&gt;manage.py&lt;/code&gt; and the project package within it. Use &amp;lsquo;.&amp;rsquo; to denote the current working directory.</source>
          <target state="translated">如果提供了可选目标，Django将使用该现有目录作为项目目录，并在其中创建 &lt;code&gt;manage.py&lt;/code&gt; 和项目包。用 '。' 表示当前工作目录。</target>
        </trans-unit>
        <trans-unit id="96bd866396bdc1707e3fb218d60c9174cbfa1187" translate="yes" xml:space="preserve">
          <source>If the optional destination is provided, Django will use that existing directory rather than creating a new one. You can use &amp;lsquo;.&amp;rsquo; to denote the current working directory.</source>
          <target state="translated">如果提供了可选目标，Django将使用该现有目录，而不是创建一个新目录。您可以使用 '。' 表示当前工作目录。</target>
        </trans-unit>
        <trans-unit id="d65b4b8040f37069c8c493e01d172fe82c59186d" translate="yes" xml:space="preserve">
          <source>If the page is cacheable, but you still want the permission check to be performed, you can pass a &lt;code&gt;cacheable=True&lt;/code&gt; argument to &lt;code&gt;AdminSite.admin_view()&lt;/code&gt;:</source>
          <target state="translated">如果页面是可缓存的，但是您仍然希望执行权限检查，则可以将 &lt;code&gt;cacheable=True&lt;/code&gt; 参数传递给 &lt;code&gt;AdminSite.admin_view()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="2d63af43bcd959831a177ff5a58c265ebe73ad08" translate="yes" xml:space="preserve">
          <source>If the page isn&amp;rsquo;t a number, it returns the first page. If the page number is negative or greater than the number of pages, it returns the last page.</source>
          <target state="translated">如果页面不是数字，则返回第一页。如果页数为负或大于页数，则返回最后一页。</target>
        </trans-unit>
        <trans-unit id="449c71074274cb7cb8ca111a6688e519d349913f" translate="yes" xml:space="preserve">
          <source>If the parent has an ordering and you don&amp;rsquo;t want the child to have any natural ordering, you can explicitly disable it:</source>
          <target state="translated">如果父母有命令，并且您不希望孩子有任何自然命令，则可以显式禁用它：</target>
        </trans-unit>
        <trans-unit id="7e8326d7c2e2af22b7076e60b8fae585d509c641" translate="yes" xml:space="preserve">
          <source>If the paths and converters syntax isn&amp;rsquo;t sufficient for defining your URL patterns, you can also use regular expressions. To do so, use &lt;a href=&quot;../../ref/urls#django.urls.re_path&quot;&gt;&lt;code&gt;re_path()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../../ref/urls#django.urls.path&quot;&gt;&lt;code&gt;path()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果路径和转换器语法不足以定义URL模式，则还可以使用正则表达式。为此，请使用&lt;a href=&quot;../../ref/urls#django.urls.re_path&quot;&gt; &lt;code&gt;re_path()&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;../../ref/urls#django.urls.path&quot;&gt; &lt;code&gt;path()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ba3b655a98f41927c3df59507ec695765575a46" translate="yes" xml:space="preserve">
          <source>If the provided namespace doesn&amp;rsquo;t match an &lt;a href=&quot;#term-application-namespace&quot;&gt;application namespace&lt;/a&gt; in step 1, Django will attempt a direct lookup of the namespace as an &lt;a href=&quot;#term-instance-namespace&quot;&gt;instance namespace&lt;/a&gt;.</source>
          <target state="translated">如果在步骤1中提供的名称空间与&lt;a href=&quot;#term-application-namespace&quot;&gt;应用程序名称&lt;/a&gt;空间不匹配，则Django将尝试直接查找该名称空间作为&lt;a href=&quot;#term-instance-namespace&quot;&gt;实例名称空间&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e61e6192fb272635702649e3754a886729bd48dc" translate="yes" xml:space="preserve">
          <source>If the related object is deleted, the &lt;code&gt;content_type&lt;/code&gt; and &lt;code&gt;object_id&lt;/code&gt; fields remain set to their original values and the &lt;code&gt;GenericForeignKey&lt;/code&gt; returns &lt;code&gt;None&lt;/code&gt;:</source>
          <target state="translated">如果删除了相关对象，则 &lt;code&gt;content_type&lt;/code&gt; 和 &lt;code&gt;object_id&lt;/code&gt; 字段将保持设置为其原始值，并且 &lt;code&gt;GenericForeignKey&lt;/code&gt; 返回 &lt;code&gt;None&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ffcc219aa1c4e4ac018419462ed9e9a642409200" translate="yes" xml:space="preserve">
          <source>If the rendered page used multiple templates, then &lt;code&gt;context&lt;/code&gt; will be a list of &lt;code&gt;Context&lt;/code&gt; objects, in the order in which they were rendered.</source>
          <target state="translated">如果渲染的页面使用了多个模板，则 &lt;code&gt;context&lt;/code&gt; 将是 &lt;code&gt;Context&lt;/code&gt; 对象的列表，按它们的渲染顺序排列。</target>
        </trans-unit>
        <trans-unit id="453aeb3c1ca5c2eb5a8bb6d078fe6dcf9b73c42d" translate="yes" xml:space="preserve">
          <source>If the response has an &lt;code&gt;ETag&lt;/code&gt; header, the ETag is made weak to comply with &lt;a href=&quot;https://tools.ietf.org/html/rfc7232.html#section-2.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 7232#section-2.1&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">如果响应具有 &lt;code&gt;ETag&lt;/code&gt; 标头，则使ETag变弱以符合&lt;a href=&quot;https://tools.ietf.org/html/rfc7232.html#section-2.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 7232＃section-2.1的要求&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="704a6e7c4c31475b433de2a9afeccf1e10be5b91" translate="yes" xml:space="preserve">
          <source>If the resulting value is callable, it is called with no arguments. The result of the call becomes the template value.</source>
          <target state="translated">如果产生的值是可调用的,则调用时不含参数。调用的结果成为模板值。</target>
        </trans-unit>
        <trans-unit id="89fff7515bba7259d533e340af1d28df5122f23c" translate="yes" xml:space="preserve">
          <source>If the server is not running start it like so:</source>
          <target state="translated">如果服务器没有运行,就像这样启动它。</target>
        </trans-unit>
        <trans-unit id="d395fb88fed3efa1c3c52eced6fa03546c8e9385" translate="yes" xml:space="preserve">
          <source>If the signature or value have been altered in any way, a &lt;code&gt;django.core.signing.BadSignature&lt;/code&gt; exception will be raised:</source>
          <target state="translated">如果签名或值有任何更改，将引发 &lt;code&gt;django.core.signing.BadSignature&lt;/code&gt; 异常：</target>
        </trans-unit>
        <trans-unit id="68d86086636afed31f5e8b83119b391c11676938" translate="yes" xml:space="preserve">
          <source>If the source and target models differ, the following fields are generated:</source>
          <target state="translated">如果源模型和目标模型不同,则会生成以下字段。</target>
        </trans-unit>
        <trans-unit id="633ef4f9d4e293110218b0b09a566215a2bdf55e" translate="yes" xml:space="preserve">
          <source>If the string contains exactly one unnamed placeholder, you can interpolate directly with the &lt;code&gt;number&lt;/code&gt; argument:</source>
          <target state="translated">如果字符串恰好包含一个未命名的占位符，则可以直接使用 &lt;code&gt;number&lt;/code&gt; 参数进行插值：</target>
        </trans-unit>
        <trans-unit id="77f538b0c255912dbe9364dbf7280961b4996b22" translate="yes" xml:space="preserve">
          <source>If the string given is a method of the model, &lt;code&gt;ModelAdmin&lt;/code&gt; or a callable that returns True or False Django will display a pretty &amp;ldquo;on&amp;rdquo; or &amp;ldquo;off&amp;rdquo; icon if you give the method a &lt;code&gt;boolean&lt;/code&gt; attribute whose value is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">如果给定的字符串是模型的方法，则如果您为该方法赋予值 &lt;code&gt;True&lt;/code&gt; 的 &lt;code&gt;boolean&lt;/code&gt; 属性，则 &lt;code&gt;ModelAdmin&lt;/code&gt; 或返回True或False的callable Django将显示漂亮的&amp;ldquo; on&amp;rdquo;或&amp;ldquo; off&amp;rdquo;图标。</target>
        </trans-unit>
        <trans-unit id="d24a764d1bded8d74681dd2025af0d5bc9819ce3" translate="yes" xml:space="preserve">
          <source>If the string given is a method of the model, &lt;code&gt;ModelAdmin&lt;/code&gt; or a callable, Django will HTML-escape the output by default. To escape user input and allow your own unescaped tags, use &lt;a href=&quot;../../utils#django.utils.html.format_html&quot;&gt;&lt;code&gt;format_html()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果给定的字符串是模型的方法， &lt;code&gt;ModelAdmin&lt;/code&gt; 或可调用的，则Django默认将对输出进行HTML转义。要转义用户输入并允许您自己使用&lt;a href=&quot;../../utils#django.utils.html.format_html&quot;&gt; &lt;code&gt;format_html()&lt;/code&gt; &lt;/a&gt;转义的标记，请使用format_html（）。</target>
        </trans-unit>
        <trans-unit id="105660f9c8d885576c4d75b90c9c72dcdf558e17" translate="yes" xml:space="preserve">
          <source>If the table is very large and your queries mostly target a subset of rows, it may be useful to restrict an index to that subset. Specify a condition as a &lt;a href=&quot;querysets#django.db.models.Q&quot;&gt;&lt;code&gt;Q&lt;/code&gt;&lt;/a&gt;. For example, &lt;code&gt;condition=Q(pages__gt=400)&lt;/code&gt; indexes records with more than 400 pages.</source>
          <target state="translated">如果表很大，并且您的查询主要针对行的子集，则将索引限制为该子集可能很有​​用。指定条件为&lt;a href=&quot;querysets#django.db.models.Q&quot;&gt; &lt;code&gt;Q&lt;/code&gt; &lt;/a&gt;。例如， &lt;code&gt;condition=Q(pages__gt=400)&lt;/code&gt; 索引具有超过400页的记录。</target>
        </trans-unit>
        <trans-unit id="daab90a7c3bc9cf977eae52e7797b86c2df0f84b" translate="yes" xml:space="preserve">
          <source>If the template has already been rendered, the callback will be invoked immediately.</source>
          <target state="translated">如果模板已经被渲染,回调将被立即调用。</target>
        </trans-unit>
        <trans-unit id="335267b2f6f5eff3146781e1f8c7c684e000fea5" translate="yes" xml:space="preserve">
          <source>If the template is instantiated directly rather than through a template loader, this is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">如果模板是直接实例化而不是通过模板加载器实例化，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="390b626866eea7efc24acb7e8d97d6da5d385595" translate="yes" xml:space="preserve">
          <source>If the template is instantiated directly rather than through a template loader, this is a string value of &lt;code&gt;&amp;lt;unknown_source&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">如果模板是直接实例化而不是通过模板加载器实例化，则这是 &lt;code&gt;&amp;lt;unknown_source&amp;gt;&lt;/code&gt; 的字符串值。</target>
        </trans-unit>
        <trans-unit id="f97ee8abfbc218db701614dc037ecbee79227cd2" translate="yes" xml:space="preserve">
          <source>If the tests ran correctly, you should see one failure corresponding to the test method we added, with this error:</source>
          <target state="translated">如果测试运行正常,你应该看到有一个失败,对应我们添加的测试方法,有这个错误。</target>
        </trans-unit>
        <trans-unit id="7c48045bec5e6654cb74a0ee34255333da0859d4" translate="yes" xml:space="preserve">
          <source>If the user is logged in, execute the view normally. The view code is free to assume the user is logged in.</source>
          <target state="translated">如果用户已登录,则正常执行视图。视图代码可以自由地假设用户已登录。</target>
        </trans-unit>
        <trans-unit id="d79847842ff72b1b58e1003ad0d867e4b7832fce" translate="yes" xml:space="preserve">
          <source>If the user is logged in, is a staff member (&lt;code&gt;User.is_staff=True&lt;/code&gt;), and is active (&lt;code&gt;User.is_active=True&lt;/code&gt;), execute the view normally.</source>
          <target state="translated">如果用户已登录，并且是工作人员（ &lt;code&gt;User.is_staff=True&lt;/code&gt; ）并且处于活动状态（ &lt;code&gt;User.is_active=True&lt;/code&gt; ），请正常执行视图。</target>
        </trans-unit>
        <trans-unit id="a84a442ecadb3f93afb7b132ac6a3edff540cf78" translate="yes" xml:space="preserve">
          <source>If the user isn&amp;rsquo;t logged in, redirect to &lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt;&lt;code&gt;settings.LOGIN_URL&lt;/code&gt;&lt;/a&gt;, passing the current absolute path in the query string. Example: &lt;code&gt;/accounts/login/?next=/polls/3/&lt;/code&gt;.</source>
          <target state="translated">如果用户未登录，请重定向到&lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt; &lt;code&gt;settings.LOGIN_URL&lt;/code&gt; &lt;/a&gt;，在查询字符串中传递当前的绝对路径。例如： &lt;code&gt;/accounts/login/?next=/polls/3/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1dae3ed09b6ca9b76e7ec5b0d3c3054584ffd95a" translate="yes" xml:space="preserve">
          <source>If the value of &amp;ldquo;Date published&amp;rdquo; doesn&amp;rsquo;t match the time when you created the question in &lt;a href=&quot;tutorial01&quot;&gt;Tutorial 1&lt;/a&gt;, it probably means you forgot to set the correct value for the &lt;a href=&quot;../ref/settings#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt; setting. Change it, reload the page and check that the correct value appears.</source>
          <target state="translated">如果&amp;ldquo;发布日期&amp;rdquo;的值与在&lt;a href=&quot;tutorial01&quot;&gt;教程1中&lt;/a&gt;创建问题的时间不匹配，则可能意味着您忘记为&lt;a href=&quot;../ref/settings#std:setting-TIME_ZONE&quot;&gt; &lt;code&gt;TIME_ZONE&lt;/code&gt; &lt;/a&gt;设置设置了正确的值。更改它，重新加载页面并检查是否显示正确的值。</target>
        </trans-unit>
        <trans-unit id="6ec7d3427ae03d948878d8a5e1e5725c95509eed" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;max_num&lt;/code&gt; is greater than the number of existing items in the initial data, up to &lt;code&gt;extra&lt;/code&gt; additional blank forms will be added to the formset, so long as the total number of forms does not exceed &lt;code&gt;max_num&lt;/code&gt;. For example, if &lt;code&gt;extra=2&lt;/code&gt; and &lt;code&gt;max_num=2&lt;/code&gt; and the formset is initialized with one &lt;code&gt;initial&lt;/code&gt; item, a form for the initial item and one blank form will be displayed.</source>
          <target state="translated">如果 &lt;code&gt;max_num&lt;/code&gt; 的值大于初始数据中现有项目的数量，则只要表单总数不超过 &lt;code&gt;max_num&lt;/code&gt; ，最多会将 &lt;code&gt;extra&lt;/code&gt; 空白表单添加到表单集。例如，如果 &lt;code&gt;extra=2&lt;/code&gt; 和 &lt;code&gt;max_num=2&lt;/code&gt; 并且用一个 &lt;code&gt;initial&lt;/code&gt; 项初始化表单集，则将显示该初始项的表单和一个空白表单。</target>
        </trans-unit>
        <trans-unit id="1e45aed9df9aac2846d0bcfef80483bef9bd6ac8" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;max_num&lt;/code&gt; is greater than the number of existing related objects, up to &lt;code&gt;extra&lt;/code&gt; additional blank forms will be added to the formset, so long as the total number of forms does not exceed &lt;code&gt;max_num&lt;/code&gt;:</source>
          <target state="translated">如果 &lt;code&gt;max_num&lt;/code&gt; 的值大于现有相关对象的数量，则只要表单总数不超过 &lt;code&gt;max_num&lt;/code&gt; ，最多会将 &lt;code&gt;extra&lt;/code&gt; 空白表单添加到表单集：</target>
        </trans-unit>
        <trans-unit id="dda283897bebb404083b05a40ab1c2c6cb7b8001" translate="yes" xml:space="preserve">
          <source>If the value of a field is &lt;code&gt;None&lt;/code&gt;, an empty string, or an iterable without elements, Django will display &lt;code&gt;-&lt;/code&gt; (a dash). You can override this with &lt;a href=&quot;#django.contrib.admin.AdminSite.empty_value_display&quot;&gt;&lt;code&gt;AdminSite.empty_value_display&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果字段的值为 &lt;code&gt;None&lt;/code&gt; ，空字符串或没有元素的可迭代项，则Django将显示 &lt;code&gt;-&lt;/code&gt; （破折号）。您可以使用&lt;a href=&quot;#django.contrib.admin.AdminSite.empty_value_display&quot;&gt; &lt;code&gt;AdminSite.empty_value_display&lt;/code&gt; &lt;/a&gt;覆盖它：</target>
        </trans-unit>
        <trans-unit id="2a6040be557d2f8f3ea8136a3c4eb78cc78f35eb" translate="yes" xml:space="preserve">
          <source>If the value of a parameter is &lt;code&gt;True&lt;/code&gt; (exactly &lt;code&gt;True&lt;/code&gt;, not just a true value), only the parameter name is added to the header.</source>
          <target state="translated">如果参数的值为 &lt;code&gt;True&lt;/code&gt; （恰好为 &lt;code&gt;True&lt;/code&gt; ，而不仅仅是一个True值），则仅将参数名称添加到标题中。</target>
        </trans-unit>
        <trans-unit id="5382b4646a0aea7fd71c163665e2667aa6200bdb" translate="yes" xml:space="preserve">
          <source>If the variable raises an exception when called, the exception will be propagated, unless the exception has an attribute &lt;code&gt;silent_variable_failure&lt;/code&gt; whose value is &lt;code&gt;True&lt;/code&gt;. If the exception &lt;em&gt;does&lt;/em&gt; have a &lt;code&gt;silent_variable_failure&lt;/code&gt; attribute whose value is &lt;code&gt;True&lt;/code&gt;, the variable will render as the value of the engine&amp;rsquo;s &lt;code&gt;string_if_invalid&lt;/code&gt; configuration option (an empty string, by default). Example:</source>
          <target state="translated">如果该变量在调用时引发异常，则该异常将被传播，除非该异常的属性 &lt;code&gt;silent_variable_failure&lt;/code&gt; 其值为 &lt;code&gt;True&lt;/code&gt; 。如果异常&lt;em&gt;确实&lt;/em&gt;具有值为 &lt;code&gt;True&lt;/code&gt; 的 &lt;code&gt;silent_variable_failure&lt;/code&gt; 属性，则该变量将呈现为引擎的 &lt;code&gt;string_if_invalid&lt;/code&gt; 配置选项的值（默认为空字符串）。例：</target>
        </trans-unit>
        <trans-unit id="1312957734ba11c680e8012938eacebc58dee1ff" translate="yes" xml:space="preserve">
          <source>If the variable you want to hide is also a function argument (e.g. &amp;lsquo;&lt;code&gt;user&lt;/code&gt;&amp;rsquo; in the following example), and if the decorated function has multiple decorators, then make sure to place &lt;code&gt;@sensitive_variables&lt;/code&gt; at the top of the decorator chain. This way it will also hide the function argument as it gets passed through the other decorators:</source>
          <target state="translated">如果要隐藏的变量也是函数参数（例如，在下面的示例中为&amp;ldquo; &lt;code&gt;user&lt;/code&gt; &amp;rdquo;），并且如果修饰的函数具有多个修饰符，则请确保将 &lt;code&gt;@sensitive_variables&lt;/code&gt; 放置在修饰符链的顶部。这样，当它通过其他装饰器传递时，它还将隐藏函数参数：</target>
        </trans-unit>
        <trans-unit id="d4cc6c88236085ea8a9c1a17ca851862c50d53fd" translate="yes" xml:space="preserve">
          <source>If the view is accessed from a &lt;code&gt;GET&lt;/code&gt; request, an object list is returned in the response (using the &lt;code&gt;book_list.html&lt;/code&gt; template). But if the client issues a &lt;code&gt;HEAD&lt;/code&gt; request, the response has an empty body and the &lt;code&gt;Last-Modified&lt;/code&gt; header indicates when the most recent book was published. Based on this information, the client may or may not download the full object list.</source>
          <target state="translated">如果从 &lt;code&gt;GET&lt;/code&gt; 请求访问视图，则在响应中返回一个对象列表（使用 &lt;code&gt;book_list.html&lt;/code&gt; 模板）。但是，如果客户端发出 &lt;code&gt;HEAD&lt;/code&gt; 请求，则响应的主体为空，并且 &lt;code&gt;Last-Modified&lt;/code&gt; 标头指示最新书籍的发布时间。根据此信息，客户端可能会也可能不会下载完整的对象列表。</target>
        </trans-unit>
        <trans-unit id="525749ea81e916d0079819f9669b95d8583c62ff" translate="yes" xml:space="preserve">
          <source>If the view was called with a HTTP method it doesn&amp;rsquo;t support, this method is called instead.</source>
          <target state="translated">如果使用不支持的HTTP方法调用该视图，则改为调用此方法。</target>
        </trans-unit>
        <trans-unit id="fe60eb379813b7555e5b0588046322369833bdf6" translate="yes" xml:space="preserve">
          <source>If there are a few pages on your site that should be available over HTTP, and not redirected to HTTPS, you can list regular expressions to match those URLs in the &lt;a href=&quot;settings#std:setting-SECURE_REDIRECT_EXEMPT&quot;&gt;&lt;code&gt;SECURE_REDIRECT_EXEMPT&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">如果您的站点上有一些页面应该通过HTTP可用，而不重定向到HTTPS，则可以在&lt;a href=&quot;settings#std:setting-SECURE_REDIRECT_EXEMPT&quot;&gt; &lt;code&gt;SECURE_REDIRECT_EXEMPT&lt;/code&gt; &lt;/a&gt;设置中列出正则表达式以匹配这些URL 。</target>
        </trans-unit>
        <trans-unit id="a06f663d9a920b6dd71a5fd7a5b30d2f53179a52" translate="yes" xml:space="preserve">
          <source>If there are a large number of pizzas, this queryset performs better than:</source>
          <target state="translated">如果有大量的披萨,这个查询集的性能比。</target>
        </trans-unit>
        <trans-unit id="58361dc72d9b28ac6f97a44739dee9fe240ef3e8" translate="yes" xml:space="preserve">
          <source>If there are any circular dependencies in the &lt;a href=&quot;../../ref/settings#std:setting-TEST_DEPENDENCIES&quot;&gt;&lt;code&gt;DEPENDENCIES&lt;/code&gt;&lt;/a&gt; definition, an &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt;&lt;code&gt;ImproperlyConfigured&lt;/code&gt;&lt;/a&gt; exception will be raised.</source>
          <target state="translated">如果&lt;a href=&quot;../../ref/settings#std:setting-TEST_DEPENDENCIES&quot;&gt; &lt;code&gt;DEPENDENCIES&lt;/code&gt; &lt;/a&gt;定义中有任何循环依赖项，则将引发&lt;a href=&quot;../../ref/exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt; &lt;code&gt;ImproperlyConfigured&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="c15c84390ee375a9adefe2ee02e23a4311d73646" translate="yes" xml:space="preserve">
          <source>If there are any rings within this geometry that have not been closed, this routine will do so by adding the starting point to the end:</source>
          <target state="translated">如果在这个几何体内有任何环没有被封闭,这个例程将通过将起点加到终点来实现。</target>
        </trans-unit>
        <trans-unit id="036865303d893103f1a82fb50cc8915eb290e5a5" translate="yes" xml:space="preserve">
          <source>If there are foreseeable error conditions that may occur while running your action, you should gracefully inform the user of the problem. This means handling exceptions and using &lt;a href=&quot;index#django.contrib.admin.ModelAdmin.message_user&quot;&gt;&lt;code&gt;django.contrib.admin.ModelAdmin.message_user()&lt;/code&gt;&lt;/a&gt; to display a user friendly description of the problem in the response.</source>
          <target state="translated">如果在执行操作时可能发生可预见的错误情况，则应妥善告知用户该问题。这意味着处理异常并使用&lt;a href=&quot;index#django.contrib.admin.ModelAdmin.message_user&quot;&gt; &lt;code&gt;django.contrib.admin.ModelAdmin.message_user()&lt;/code&gt; &lt;/a&gt;在响应中显示问题的用户友好描述。</target>
        </trans-unit>
        <trans-unit id="951293bc34387f5cb268cf92d7536a2c32d0ad81" translate="yes" xml:space="preserve">
          <source>If there are nested namespaces, these steps are repeated for each part of the namespace until only the view name is unresolved. The view name will then be resolved into a URL in the namespace that has been found.</source>
          <target state="translated">如果有嵌套的命名空间,则对命名空间的每个部分重复这些步骤,直到只有视图名称未被解析。然后,视图名称将被解析为已找到的命名空间中的一个 URL。</target>
        </trans-unit>
        <trans-unit id="018686731469965487e7387f2655be540539d013" translate="yes" xml:space="preserve">
          <source>If there are test failures, however, you&amp;rsquo;ll see full details about which tests failed:</source>
          <target state="translated">但是，如果有测试失败，您将看到有关哪些测试失败的完整详细信息：</target>
        </trans-unit>
        <trans-unit id="33090b22c578cdbfc10a5466d23820158dc57c7e" translate="yes" xml:space="preserve">
          <source>If there is a current application defined, Django finds and returns the URL resolver for that instance. The current application can be specified with the &lt;code&gt;current_app&lt;/code&gt; argument to the &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">如果定义了当前应用程序，则Django查找并返回该实例的URL解析器。可以使用&lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt;函数的 &lt;code&gt;current_app&lt;/code&gt; 参数指定当前应用程序。</target>
        </trans-unit>
        <trans-unit id="cad92f90be1997903d0e603c48aaadf781898139" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;default_app_config&lt;/code&gt;, Django uses the base &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">如果没有 &lt;code&gt;default_app_config&lt;/code&gt; ，则Django使用基本的&lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="b29aa4916d0907d63149e49df881a7730b345911" translate="yes" xml:space="preserve">
          <source>If there is no current application, Django looks for a default application instance. The default application instance is the instance that has an &lt;a href=&quot;#term-instance-namespace&quot;&gt;instance namespace&lt;/a&gt; matching the &lt;a href=&quot;#term-application-namespace&quot;&gt;application namespace&lt;/a&gt; (in this example, an instance of &lt;code&gt;polls&lt;/code&gt; called &lt;code&gt;'polls'&lt;/code&gt;).</source>
          <target state="translated">如果没有当前应用程序，则Django将查找默认应用程序实例。默认的应用程序实例是具有与&lt;a href=&quot;#term-application-namespace&quot;&gt;应用程序名称&lt;/a&gt;&lt;a href=&quot;#term-instance-namespace&quot;&gt;空间&lt;/a&gt;匹配的实例名称空间的实例（在此示例中，名为 &lt;code&gt;'polls'&lt;/code&gt; 的 &lt;code&gt;polls&lt;/code&gt; 的实例）。</target>
        </trans-unit>
        <trans-unit id="3196de7f2aa2fe23e2168314d2dfd5664d611802" translate="yes" xml:space="preserve">
          <source>If there is no current instance - say, if we were rendering a page somewhere else on the site - &lt;code&gt;'polls:index'&lt;/code&gt; will resolve to the last registered instance of &lt;code&gt;polls&lt;/code&gt;. Since there is no default instance (instance namespace of &lt;code&gt;'polls'&lt;/code&gt;), the last instance of &lt;code&gt;polls&lt;/code&gt; that is registered will be used. This would be &lt;code&gt;'publisher-polls'&lt;/code&gt; since it&amp;rsquo;s declared last in the &lt;code&gt;urlpatterns&lt;/code&gt;.</source>
          <target state="translated">如果没有当前实例（例如，如果我们正在网站上其他地方渲染页面），则 &lt;code&gt;'polls:index'&lt;/code&gt; 将解析为上次注册的 &lt;code&gt;polls&lt;/code&gt; 实例。由于没有默认实例（ &lt;code&gt;'polls'&lt;/code&gt; 的实例名称空间），因此将使用已注册的 &lt;code&gt;polls&lt;/code&gt; 的最后一个实例。这将是 &lt;code&gt;'publisher-polls'&lt;/code&gt; 因为它是在 &lt;code&gt;urlpatterns&lt;/code&gt; 中最后声明的。</target>
        </trans-unit>
        <trans-unit id="756f0b4c6a33908e3c22386f366fc70b18420a5b" translate="yes" xml:space="preserve">
          <source>If there is no default application instance, Django will pick the last deployed instance of the application, whatever its instance name may be.</source>
          <target state="translated">如果没有默认的应用实例,Django会选择最后部署的应用实例,不管它的实例名称是什么。</target>
        </trans-unit>
        <trans-unit id="a6bc41190ec33fed228db9ca9e2271ec22fd151d" translate="yes" xml:space="preserve">
          <source>If there is no headerlist stored, the page needs to be rebuilt, so this function returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">如果没有存储头列表，则需要重建页面，因此此函数返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b205d7e5d58e03b8f42ec69b13b892b65de8d30c" translate="yes" xml:space="preserve">
          <source>If there were also a default instance - i.e., an instance named &lt;code&gt;'polls'&lt;/code&gt; - the only change from above would be in the case where there is no current instance (the second item in the list above). In this case &lt;code&gt;'polls:index'&lt;/code&gt; would resolve to the index page of the default instance instead of the instance declared last in &lt;code&gt;urlpatterns&lt;/code&gt;.</source>
          <target state="translated">如果还存在一个默认实例（即名为 &lt;code&gt;'polls'&lt;/code&gt; 的实例），则唯一的变化就是没有当前实例（上面列表中的第二项）。在这种情况下， &lt;code&gt;'polls:index'&lt;/code&gt; 将解析为默认实例的索引页，而不是 &lt;code&gt;urlpatterns&lt;/code&gt; 中最后声明的实例。</target>
        </trans-unit>
        <trans-unit id="1bc101bd73deeb1cf516281ef037ef748d979a37" translate="yes" xml:space="preserve">
          <source>If these aren&amp;rsquo;t enough to generate the SQL you need:</source>
          <target state="translated">如果这些还不足以生成SQL，则需要：</target>
        </trans-unit>
        <trans-unit id="5e71fd6c24627701d76d95f4ee851ac2352deca4" translate="yes" xml:space="preserve">
          <source>If these parameters already have the correct values, Django won&amp;rsquo;t set them for every new connection, which improves performance slightly. You can configure them directly in &lt;code&gt;postgresql.conf&lt;/code&gt; or more conveniently per database user with &lt;a href=&quot;https://www.postgresql.org/docs/current/sql-alterrole.html&quot;&gt;ALTER ROLE&lt;/a&gt;.</source>
          <target state="translated">如果这些参数已经具有正确的值，则Django不会为每个新连接设置它们，这会稍微提高性能。您可以直接在 &lt;code&gt;postgresql.conf&lt;/code&gt; 中配置它们，或者使用&lt;a href=&quot;https://www.postgresql.org/docs/current/sql-alterrole.html&quot;&gt;ALTER ROLE为&lt;/a&gt;每个数据库用户更方便地配置它们。</target>
        </trans-unit>
        <trans-unit id="8d05d3185d1dac94d8dadaa8fa6fec4ba26f14ae" translate="yes" xml:space="preserve">
          <source>If this app&amp;rsquo;s URLconf is included into the project&amp;rsquo;s URLconf under a path such as this:</source>
          <target state="translated">如果此应用程序的URLconf被包含在项目的URLconf中，例如以下路径：</target>
        </trans-unit>
        <trans-unit id="db3b489bf675bc83e9e833fb2c11bf0ec0e3584a" translate="yes" xml:space="preserve">
          <source>If this approach becomes too slow, you can add a &lt;code&gt;SearchVectorField&lt;/code&gt; to your model. You&amp;rsquo;ll need to keep it populated with triggers, for example, as described in the &lt;a href=&quot;https://www.postgresql.org/docs/current/textsearch-features.html#TEXTSEARCH-UPDATE-TRIGGERS&quot;&gt;PostgreSQL documentation&lt;/a&gt;. You can then query the field as if it were an annotated &lt;code&gt;SearchVector&lt;/code&gt;:</source>
          <target state="translated">如果此方法变得太慢，则可以将 &lt;code&gt;SearchVectorField&lt;/code&gt; 添加到模型中。例如，您需要使用触发器来填充它，如&lt;a href=&quot;https://www.postgresql.org/docs/current/textsearch-features.html#TEXTSEARCH-UPDATE-TRIGGERS&quot;&gt;PostgreSQL文档中所述&lt;/a&gt;。然后，您可以查询该字段，就像它是带注释的 &lt;code&gt;SearchVector&lt;/code&gt; 一样：</target>
        </trans-unit>
        <trans-unit id="a0a2e48175c412228e4e7ff2cbf177425c036e1a" translate="yes" xml:space="preserve">
          <source>If this attribute is set to &lt;code&gt;True&lt;/code&gt;, a &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.PermissionDenied&quot;&gt;&lt;code&gt;PermissionDenied&lt;/code&gt;&lt;/a&gt; exception is raised when the conditions are not met. When &lt;code&gt;False&lt;/code&gt; (the default), anonymous users are redirected to the login page.</source>
          <target state="translated">如果将此属性设置为 &lt;code&gt;True&lt;/code&gt; ，则在不满足条件时会引发&lt;a href=&quot;../../ref/exceptions#django.core.exceptions.PermissionDenied&quot;&gt; &lt;code&gt;PermissionDenied&lt;/code&gt; &lt;/a&gt;异常。如果为 &lt;code&gt;False&lt;/code&gt; （默认值），则匿名用户将重定向到登录页面。</target>
        </trans-unit>
        <trans-unit id="ea6a57da3a6226d105def8abb17cde5efd3edbc8" translate="yes" xml:space="preserve">
          <source>If this behavior is problematic (such as when using signals to send an email whenever a model is saved), pass a unique identifier as the &lt;code&gt;dispatch_uid&lt;/code&gt; argument to identify your receiver function. This identifier will usually be a string, although any hashable object will suffice. The end result is that your receiver function will only be bound to the signal once for each unique &lt;code&gt;dispatch_uid&lt;/code&gt; value:</source>
          <target state="translated">如果此行为有问题（例如在保存模型时使用信号发送电子邮件），请传递唯一标识符作为 &lt;code&gt;dispatch_uid&lt;/code&gt; 参数来标识您的接收器功能。该标识符通常是一个字符串，尽管任何可哈希对象都足够。最终结果是，对于每个唯一的 &lt;code&gt;dispatch_uid&lt;/code&gt; 值，您的接收器函数将仅与信号绑定一次：</target>
        </trans-unit>
        <trans-unit id="168754e6d80f99f11f4410d20c99b6a0e1c4fca4" translate="yes" xml:space="preserve">
          <source>If this exception is raised during the execution of a management command from a command line console, it will be caught and turned into a nicely-printed error message to the appropriate output stream (i.e., stderr); as a result, raising this exception (with a sensible description of the error) is the preferred way to indicate that something has gone wrong in the execution of a command.</source>
          <target state="translated">如果在从命令行控制台执行管理命令的过程中引发了这个异常,那么它将被捕获,并变成一个打印得很好的错误信息发送到相应的输出流(即stderr);因此,引发这个异常(带有合理的错误描述)是表明命令执行过程中出错的首选方式。</target>
        </trans-unit>
        <trans-unit id="5121ccc468599203cdf2f41680528f512f5238b0" translate="yes" xml:space="preserve">
          <source>If this is set to &lt;code&gt;False&lt;/code&gt;, accessing a related object that doesn&amp;rsquo;t exist will raise its &lt;code&gt;DoesNotExist&lt;/code&gt; exception.</source>
          <target state="translated">如果将其设置为 &lt;code&gt;False&lt;/code&gt; ，则访问不存在的相关对象将引发其 &lt;code&gt;DoesNotExist&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="2d8f6dac00928c49d28b754a31e0c9229145c79e" translate="yes" xml:space="preserve">
          <source>If this is your first time using Django, you&amp;rsquo;ll have to take care of some initial setup. Namely, you&amp;rsquo;ll need to auto-generate some code that establishes a Django &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/glossary/#term-project&quot;&gt;project&lt;/a&gt; &amp;ndash; a collection of settings for an instance of Django, including database configuration, Django-specific options and application-specific settings.</source>
          <target state="translated">如果这是您第一次使用Django，则必须进行一些初始设置。即，您将需要自动生成一些代码来建立Django &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/glossary/#term-project&quot;&gt;项目&lt;/a&gt; -Django实例的一组设置，包括数据库配置，特定于Django的选项和特定于应用程序的设置。</target>
        </trans-unit>
        <trans-unit id="be1b7e4acd8d0cb9dde67da29afd40808b1e50d6" translate="yes" xml:space="preserve">
          <source>If this isn&amp;rsquo;t given or is &lt;code&gt;None&lt;/code&gt;, you&amp;rsquo;ll get operating-system dependent behavior. On most platforms, temporary files will have a mode of &lt;code&gt;0o600&lt;/code&gt;, and files saved from memory will be saved using the system&amp;rsquo;s standard umask.</source>
          <target state="translated">如果未给出或为 &lt;code&gt;None&lt;/code&gt; ，则将获得依赖于操作系统的行为。在大多数平台上，临时文件的模式为 &lt;code&gt;0o600&lt;/code&gt; ，而从内存中保存的文件将使用系统的标准umask保存。</target>
        </trans-unit>
        <trans-unit id="f463269eb88c1b3ee3a234d7c03dfce4134a153f" translate="yes" xml:space="preserve">
          <source>If this isn&amp;rsquo;t given, Django will use &lt;a href=&quot;#django.db.models.Options.verbose_name&quot;&gt;&lt;code&gt;verbose_name&lt;/code&gt;&lt;/a&gt; + &lt;code&gt;&quot;s&quot;&lt;/code&gt;.</source>
          <target state="translated">如果没有给出，Django将使用&lt;a href=&quot;#django.db.models.Options.verbose_name&quot;&gt; &lt;code&gt;verbose_name&lt;/code&gt; &lt;/a&gt; + &lt;code&gt;&quot;s&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73b98905cd565580c0b7cdd5b5b3c194b7edc1e0" translate="yes" xml:space="preserve">
          <source>If this isn&amp;rsquo;t given, Django will use a munged version of the class name: &lt;code&gt;CamelCase&lt;/code&gt; becomes &lt;code&gt;camel case&lt;/code&gt;.</source>
          <target state="translated">如果未给出，则Django将使用该类名称的修改版本： &lt;code&gt;CamelCase&lt;/code&gt; 成为 &lt;code&gt;camel case&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee5e3c28a977fe38b4bf893b8d5bd1cfcc581da9" translate="yes" xml:space="preserve">
          <source>If this isn&amp;rsquo;t provided, the Django admin will use the model&amp;rsquo;s default ordering.</source>
          <target state="translated">如果未提供此选项，则Django管理员将使用模型的默认顺序。</target>
        </trans-unit>
        <trans-unit id="204cd62fbe95eddcc429e1cf499ecc20b6269794" translate="yes" xml:space="preserve">
          <source>If this last CSS definition were to be rendered, it would become the following HTML:</source>
          <target state="translated">如果渲染最后一个CSS定义,就会变成下面的HTML。</target>
        </trans-unit>
        <trans-unit id="03956128530b9f0fcadffe8423761387cbfdf376" translate="yes" xml:space="preserve">
          <source>If this looks correct, run &lt;a href=&quot;../../django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; to create this table in the database:</source>
          <target state="translated">如果看起来正确，请运行&lt;a href=&quot;../../django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;以在数据库中创建此表：</target>
        </trans-unit>
        <trans-unit id="214efc0b3c62bb58b19ca86ac2cf1be69388e8d4" translate="yes" xml:space="preserve">
          <source>If this method is defined on a storage, it&amp;rsquo;s called by the &lt;a href=&quot;#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; management command after each run and gets passed the local storages and paths of found files as a dictionary, as well as the command line options. It yields tuples of three values: &lt;code&gt;original_path, processed_path, processed&lt;/code&gt;. The path values are strings and &lt;code&gt;processed&lt;/code&gt; is a boolean indicating whether or not the value was post-processed, or an exception if post-processing failed.</source>
          <target state="translated">如果此方法是在存储上定义的，则每次运行后由&lt;a href=&quot;#django-admin-collectstatic&quot;&gt; &lt;code&gt;collectstatic&lt;/code&gt; &lt;/a&gt;管理命令调用，并通过本地存储和找到的文件的路径作为字典以及命令行选项来传递。它产生三个值的元组： &lt;code&gt;original_path, processed_path, processed&lt;/code&gt; 。路径值是字符串，并且已 &lt;code&gt;processed&lt;/code&gt; 是一个布尔值，指示该值是否已被后处理；如果后处理失败，则为异常。</target>
        </trans-unit>
        <trans-unit id="78f9e31a35c14f187c486666943c82fca263c677" translate="yes" xml:space="preserve">
          <source>If this option is provided, models are also created for database views.</source>
          <target state="translated">如果提供了这个选项,也会为数据库视图创建模型。</target>
        </trans-unit>
        <trans-unit id="d949b49e534243e5950667398078494f92cad676" translate="yes" xml:space="preserve">
          <source>If this option is provided, models are also created for partitions.</source>
          <target state="translated">如果提供了这个选项,也会为分区创建模型。</target>
        </trans-unit>
        <trans-unit id="cf5933056c3c4a4bab36f59eaaa0e7ba423fd575" translate="yes" xml:space="preserve">
          <source>If this processor is enabled, every &lt;code&gt;RequestContext&lt;/code&gt; will contain a variable &lt;code&gt;MEDIA_URL&lt;/code&gt;, providing the value of the &lt;a href=&quot;../settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">如果该处理器被使能，每隔 &lt;code&gt;RequestContext&lt;/code&gt; 将包含可变 &lt;code&gt;MEDIA_URL&lt;/code&gt; ，提供的值&lt;a href=&quot;../settings#std:setting-MEDIA_URL&quot;&gt; &lt;code&gt;MEDIA_URL&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="c3f669b44318076a8ac745b45b0e2b57ced4c0dd" translate="yes" xml:space="preserve">
          <source>If this processor is enabled, every &lt;code&gt;RequestContext&lt;/code&gt; will contain a variable &lt;code&gt;STATIC_URL&lt;/code&gt;, providing the value of the &lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">如果该处理器被使能，每隔 &lt;code&gt;RequestContext&lt;/code&gt; 将包含可变 &lt;code&gt;STATIC_URL&lt;/code&gt; ，提供的值&lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="b3627ab80c4912ed55e04ec73d8095f9410c0c92" translate="yes" xml:space="preserve">
          <source>If this processor is enabled, every &lt;code&gt;RequestContext&lt;/code&gt; will contain a variable &lt;code&gt;TIME_ZONE&lt;/code&gt;, providing the name of the currently active time zone.</source>
          <target state="translated">如果启用了此处理器，则每个 &lt;code&gt;RequestContext&lt;/code&gt; 将包含一个变量 &lt;code&gt;TIME_ZONE&lt;/code&gt; ，提供当前活动时区的名称。</target>
        </trans-unit>
        <trans-unit id="e14c9efdfe0e83e3c1193bc7da7c91988d833298" translate="yes" xml:space="preserve">
          <source>If this processor is enabled, every &lt;code&gt;RequestContext&lt;/code&gt; will contain a variable &lt;code&gt;request&lt;/code&gt;, which is the current &lt;a href=&quot;../request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果启用了此处理器，则每个 &lt;code&gt;RequestContext&lt;/code&gt; 将包含一个变量 &lt;code&gt;request&lt;/code&gt; ，即当前的&lt;a href=&quot;../request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dfffb710a2c53706e240b5d6768b0976050feb4c" translate="yes" xml:space="preserve">
          <source>If this processor is enabled, every &lt;code&gt;RequestContext&lt;/code&gt; will contain these two variables &amp;ndash; but only if your &lt;a href=&quot;../settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; setting is set to &lt;code&gt;True&lt;/code&gt; and the request&amp;rsquo;s IP address (&lt;code&gt;request.META['REMOTE_ADDR']&lt;/code&gt;) is in the &lt;a href=&quot;../settings#std:setting-INTERNAL_IPS&quot;&gt;&lt;code&gt;INTERNAL_IPS&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="translated">如果启用了此处理器，则每个 &lt;code&gt;RequestContext&lt;/code&gt; 都将包含以下两个变量-但仅当您的&lt;a href=&quot;../settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;设置设置为 &lt;code&gt;True&lt;/code&gt; 且请求的IP地址（ &lt;code&gt;request.META['REMOTE_ADDR']&lt;/code&gt; ）位于&lt;a href=&quot;../settings#std:setting-INTERNAL_IPS&quot;&gt; &lt;code&gt;INTERNAL_IPS&lt;/code&gt; &lt;/a&gt;设置中时：</target>
        </trans-unit>
        <trans-unit id="5f1b3b594560029b6edef85f4752d5ee49a66bb6" translate="yes" xml:space="preserve">
          <source>If this processor is enabled, every &lt;code&gt;RequestContext&lt;/code&gt; will contain these two variables:</source>
          <target state="translated">如果启用了此处理器，则每个 &lt;code&gt;RequestContext&lt;/code&gt; 将包含以下两个变量：</target>
        </trans-unit>
        <trans-unit id="6c99cf696c7be10586d5d490d5e348ad6994d715" translate="yes" xml:space="preserve">
          <source>If this processor is enabled, every &lt;code&gt;RequestContext&lt;/code&gt; will contain these variables:</source>
          <target state="translated">如果启用了此处理器，则每个 &lt;code&gt;RequestContext&lt;/code&gt; 将包含以下变量：</target>
        </trans-unit>
        <trans-unit id="74bf18d2eb713de82935d180fe41cd27d0c61d5c" translate="yes" xml:space="preserve">
          <source>If this still isn&amp;rsquo;t a good match, you can manually set the name of the context variable. The &lt;code&gt;context_object_name&lt;/code&gt; attribute on a generic view specifies the context variable to use:</source>
          <target state="translated">如果仍然不能很好地匹配，则可以手动设置上下文变量的名称。通用视图上的 &lt;code&gt;context_object_name&lt;/code&gt; 属性指定要使用的上下文变量：</target>
        </trans-unit>
        <trans-unit id="111885105b9365941fb05a9bc35108884dfcc593" translate="yes" xml:space="preserve">
          <source>If this value starts with a forward slash (&lt;code&gt;'/'&lt;/code&gt;) and you&amp;rsquo;re using MySQL, MySQL will connect via a Unix socket to the specified socket. For example:</source>
          <target state="translated">如果此值以正斜杠（ &lt;code&gt;'/'&lt;/code&gt; ）开头并且您正在使用MySQL，则MySQL将通过Unix套接字连接到指定的套接字。例如：</target>
        </trans-unit>
        <trans-unit id="687f9e38edf81cd2d25145c7b1294f723a108558" translate="yes" xml:space="preserve">
          <source>If this variable isn&amp;rsquo;t set, the default &lt;code&gt;asgi.py&lt;/code&gt; sets it to &lt;code&gt;mysite.settings&lt;/code&gt;, where &lt;code&gt;mysite&lt;/code&gt; is the name of your project.</source>
          <target state="translated">如果未设置此变量，则默认的 &lt;code&gt;asgi.py&lt;/code&gt; 会将其设置为 &lt;code&gt;mysite.settings&lt;/code&gt; ，其中 &lt;code&gt;mysite&lt;/code&gt; 是您的项目的名称。</target>
        </trans-unit>
        <trans-unit id="7763646c9a13213d2e42106763a322d405a3bd97" translate="yes" xml:space="preserve">
          <source>If this variable isn&amp;rsquo;t set, the default &lt;code&gt;wsgi.py&lt;/code&gt; sets it to &lt;code&gt;mysite.settings&lt;/code&gt;, where &lt;code&gt;mysite&lt;/code&gt; is the name of your project. That&amp;rsquo;s how &lt;a href=&quot;../../../ref/django-admin#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; discovers the default settings file by default.</source>
          <target state="translated">如果未设置此变量，则默认的 &lt;code&gt;wsgi.py&lt;/code&gt; 将其设置为 &lt;code&gt;mysite.settings&lt;/code&gt; ，其中 &lt;code&gt;mysite&lt;/code&gt; 是您的项目的名称。这就是&lt;a href=&quot;../../../ref/django-admin#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; &lt;/a&gt;默认情况下发现默认设置文件的方式。</target>
        </trans-unit>
        <trans-unit id="f5989aedec02f4ad2eba63dbf7a594f3d1537d24" translate="yes" xml:space="preserve">
          <source>If those conditions are met, Django will email the users listed in the &lt;a href=&quot;../ref/settings#std:setting-MANAGERS&quot;&gt;&lt;code&gt;MANAGERS&lt;/code&gt;&lt;/a&gt; setting whenever your code raises a 404 and the request has a referer. It doesn&amp;rsquo;t bother to email for 404s that don&amp;rsquo;t have a referer &amp;ndash; those are usually people typing in broken URLs or broken Web bots. It also ignores 404s when the referer is equal to the requested URL, since this behavior is from broken Web bots too.</source>
          <target state="translated">如果满足这些条件，则只要您的代码引发404并且请求具有引荐来源，Django就会向&lt;a href=&quot;../ref/settings#std:setting-MANAGERS&quot;&gt; &lt;code&gt;MANAGERS&lt;/code&gt; &lt;/a&gt;设置中列出的用户发送电子邮件。不用电子邮件发送没有推荐人的404，这些人通常是输入损坏的URL或损坏的Web bot的人。当引用者等于请求的URL时，它也会忽略404，因为此行为也来自损坏的Web机器人。</target>
        </trans-unit>
        <trans-unit id="a73c5cb2486718bdc78ebe8a3caef6b14a81e74a" translate="yes" xml:space="preserve">
          <source>If turning this to &lt;code&gt;True&lt;/code&gt; causes infinite redirects, it probably means your site is running behind a proxy and can&amp;rsquo;t tell which requests are secure and which are not. Your proxy likely sets a header to indicate secure requests; you can correct the problem by finding out what that header is and configuring the &lt;a href=&quot;#std:setting-SECURE_PROXY_SSL_HEADER&quot;&gt;&lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt;&lt;/a&gt; setting accordingly.</source>
          <target state="translated">如果将其设置为 &lt;code&gt;True&lt;/code&gt; 会导致无限重定向，则可能意味着您的网站在代理后面运行，并且无法确定哪些请求是安全的，哪些不是安全的。您的代理可能会设置标头以指示安全请求；您可以通过找出该标头是什么并相应地配置&lt;a href=&quot;#std:setting-SECURE_PROXY_SSL_HEADER&quot;&gt; &lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt; &lt;/a&gt;设置来纠正问题。</target>
        </trans-unit>
        <trans-unit id="6481e6950ed002a13f7a54255de0e49329f79ddf" translate="yes" xml:space="preserve">
          <source>If two Python threads execute the code in the first example above, one thread could retrieve, increment, and save a field&amp;rsquo;s value after the other has retrieved it from the database. The value that the second thread saves will be based on the original value; the work of the first thread will be lost.</source>
          <target state="translated">如果上面的第一个示例中有两个Python线程执行代码，则一个线程可以在另一个从数据库中检索到该字段的值后，对其进行检索，递增和保存。第二个线程保存的值将基于原始值。第一个线程的工作将丢失。</target>
        </trans-unit>
        <trans-unit id="5e64204f76516c2278e4b64d558fec189d6cf43f" translate="yes" xml:space="preserve">
          <source>If unspecified, the default &lt;code&gt;timeout&lt;/code&gt; will be the one provided by &lt;a href=&quot;https://docs.python.org/3/library/socket.html#socket.getdefaulttimeout&quot;&gt;&lt;code&gt;socket.getdefaulttimeout()&lt;/code&gt;&lt;/a&gt;, which defaults to &lt;code&gt;None&lt;/code&gt; (no timeout).</source>
          <target state="translated">如果未指定，则默认 &lt;code&gt;timeout&lt;/code&gt; 将是&lt;a href=&quot;https://docs.python.org/3/library/socket.html#socket.getdefaulttimeout&quot;&gt; &lt;code&gt;socket.getdefaulttimeout()&lt;/code&gt; &lt;/a&gt;提供的默认超时，默认为 &lt;code&gt;None&lt;/code&gt; （无超时）。</target>
        </trans-unit>
        <trans-unit id="60e13a5dc7aa8445a725b41528f2e1f91c6d315c" translate="yes" xml:space="preserve">
          <source>If updating a large number of columns in a large number of rows, the SQL generated can be very large. Avoid this by specifying a suitable &lt;code&gt;batch_size&lt;/code&gt;.</source>
          <target state="translated">如果更新大量行中的大量列，则生成的SQL可能非常大。通过指定适当的 &lt;code&gt;batch_size&lt;/code&gt; 避免这种情况。</target>
        </trans-unit>
        <trans-unit id="9de1d7c145e3bfbd1da3b57f9e69810dee560a48" translate="yes" xml:space="preserve">
          <source>If used with &lt;code&gt;MIDDLEWARE_CLASSES&lt;/code&gt;, the &lt;code&gt;__call__()&lt;/code&gt; method will never be used; Django calls &lt;code&gt;process_request()&lt;/code&gt; and &lt;code&gt;process_response()&lt;/code&gt; directly.</source>
          <target state="translated">如果与用于 &lt;code&gt;MIDDLEWARE_CLASSES&lt;/code&gt; ，所述 &lt;code&gt;__call__()&lt;/code&gt; 方法将永远不会被使用; Django直接调用 &lt;code&gt;process_request()&lt;/code&gt; 和 &lt;code&gt;process_response()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3318f562b136e880f0fe72349d17ab0bbe42fba" translate="yes" xml:space="preserve">
          <source>If used with a numeric integer argument, &lt;code&gt;floatformat&lt;/code&gt; rounds a number to that many decimal places. For example:</source>
          <target state="translated">如果与数字整数参数一起使用， &lt;code&gt;floatformat&lt;/code&gt; 将数字四舍五入到小数点后位数。例如：</target>
        </trans-unit>
        <trans-unit id="b36b4a6b3834f5db697a34dce30549b123363b8c" translate="yes" xml:space="preserve">
          <source>If using a binary package of GEOS (e.g., on Ubuntu), you may need to &lt;a href=&quot;index#binutils&quot;&gt;Install binutils&lt;/a&gt;.</source>
          <target state="translated">如果使用GEOS的二进制软件包（例如，在Ubuntu上），则可能需要&lt;a href=&quot;index#binutils&quot;&gt;安装binutils&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="77e5c9f7d7653d5f758d827f9f9d8be93ef993b1" translate="yes" xml:space="preserve">
          <source>If using an SQLite in-memory database with SQLite, &lt;a href=&quot;https://www.sqlite.org/sharedcache.html&quot;&gt;shared cache&lt;/a&gt; is enabled, so you can write tests with ability to share the database between threads.</source>
          <target state="translated">如果将SQLite内存数据库与SQLite一起使用，则启用了&lt;a href=&quot;https://www.sqlite.org/sharedcache.html&quot;&gt;共享缓存&lt;/a&gt;，因此您可以编写能够在线程之间共享数据库的测试。</target>
        </trans-unit>
        <trans-unit id="71eff97e42ab86eb5151370fe1181333a128682b" translate="yes" xml:space="preserve">
          <source>If value evaluates to &lt;code&gt;False&lt;/code&gt;, uses the given default. Otherwise, uses the value.</source>
          <target state="translated">如果value计算为 &lt;code&gt;False&lt;/code&gt; ，则使用给定的默认值。否则，使用该值。</target>
        </trans-unit>
        <trans-unit id="f611765f2d320e927111295d6c9695093483fb31" translate="yes" xml:space="preserve">
          <source>If we arrive at this view with a &lt;code&gt;GET&lt;/code&gt; request, it will create an empty form instance and place it in the template context to be rendered. This is what we can expect to happen the first time we visit the URL.</source>
          <target state="translated">如果我们通过 &lt;code&gt;GET&lt;/code&gt; 请求到达此视图，它将创建一个空表单实例并将其放置在要呈现的模板上下文中。这是我们第一次访问URL时可以预期的情况。</target>
        </trans-unit>
        <trans-unit id="0a8a851d0367ffe29323b90c503c215f8aa8f5d9" translate="yes" xml:space="preserve">
          <source>If we connected a handler like this:</source>
          <target state="translated">如果我们连接一个这样的处理程序。</target>
        </trans-unit>
        <trans-unit id="406383748435b9b983e4fe62090c8c234445f370" translate="yes" xml:space="preserve">
          <source>If we delete a &lt;code&gt;Publication&lt;/code&gt;, its &lt;code&gt;Articles&lt;/code&gt; won&amp;rsquo;t be able to access it:</source>
          <target state="translated">如果我们删除 &lt;code&gt;Publication&lt;/code&gt; ，则其 &lt;code&gt;Articles&lt;/code&gt; 将无法访问它：</target>
        </trans-unit>
        <trans-unit id="3d341e594a575849b6069ae86fb05e49f3983a60" translate="yes" xml:space="preserve">
          <source>If we delete an &lt;code&gt;Article&lt;/code&gt;, its &lt;code&gt;Publications&lt;/code&gt; won&amp;rsquo;t be able to access it:</source>
          <target state="translated">如果我们删除 &lt;code&gt;Article&lt;/code&gt; ，则其 &lt;code&gt;Publications&lt;/code&gt; 将无法访问它：</target>
        </trans-unit>
        <trans-unit id="c2e7f5f3fb7b52337975a488b9c8164eab92ebfb" translate="yes" xml:space="preserve">
          <source>If we had neglected to pass in the current &lt;code&gt;context.autoescape&lt;/code&gt; value to our new &lt;code&gt;Context&lt;/code&gt; in this example, the results would have &lt;em&gt;always&lt;/em&gt; been automatically escaped, which may not be the desired behavior if the template tag is used inside a &lt;a href=&quot;../ref/templates/builtins#std:templatetag-autoescape&quot;&gt;&lt;code&gt;{% autoescape off %}&lt;/code&gt;&lt;/a&gt; block.</source>
          <target state="translated">如果在此示例中我们忽略了将当前 &lt;code&gt;context.autoescape&lt;/code&gt; 值传递给我们的新 &lt;code&gt;Context&lt;/code&gt; ，则结果将&lt;em&gt;始终&lt;/em&gt;自动转义，如果在&lt;a href=&quot;../ref/templates/builtins#std:templatetag-autoescape&quot;&gt; &lt;code&gt;{% autoescape off %}&lt;/code&gt; &lt;/a&gt;块。</target>
        </trans-unit>
        <trans-unit id="ffb90e72c570b70af963c6da1122122d334c0352" translate="yes" xml:space="preserve">
          <source>If we want to write a class-based view that responds only to &lt;code&gt;POST&lt;/code&gt;, we&amp;rsquo;ll subclass &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; and write a &lt;code&gt;post()&lt;/code&gt; method in the subclass. However if we want our processing to work on a particular object, identified from the URL, we&amp;rsquo;ll want the functionality provided by &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果我们想编写一个仅对 &lt;code&gt;POST&lt;/code&gt; 响应的基于类的视图，我们将对&lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View&quot;&gt; &lt;code&gt;View&lt;/code&gt; 进行&lt;/a&gt;子类化，并在该子类中编写一个 &lt;code&gt;post()&lt;/code&gt; 方法。但是，如果我们希望处理对从URL标识的特定对象进行处理，则需要&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt; &lt;code&gt;SingleObjectMixin&lt;/code&gt; &lt;/a&gt;提供的功能。</target>
        </trans-unit>
        <trans-unit id="f9670d8eca365c2fbb8bf2e17c3f35929328311b" translate="yes" xml:space="preserve">
          <source>If we wanted to add a tool to the change list view for only a specific model named &amp;lsquo;Page&amp;rsquo;, we would copy that same file to the &lt;code&gt;templates/admin/my_app/page&lt;/code&gt; directory of our project.</source>
          <target state="translated">如果我们只想为名为&amp;ldquo; Page&amp;rdquo;的特定模型向更改列表视图中添加工具，则可以将该文件复制到项目的 &lt;code&gt;templates/admin/my_app/page&lt;/code&gt; 目录中。</target>
        </trans-unit>
        <trans-unit id="6bd7027efcdd2746450164bec58ed7a7c2bb113c" translate="yes" xml:space="preserve">
          <source>If we wanted to change our previous query to get the discount based on how long the &lt;code&gt;Client&lt;/code&gt; has been with us, we could do so using lookups:</source>
          <target state="translated">如果我们想更改先前的查询以根据 &lt;code&gt;Client&lt;/code&gt; 在我们身边的时间来获得折扣，则可以使用查找方法：</target>
        </trans-unit>
        <trans-unit id="424f525a9d69de5a035589bbd0105ee23eb2ed5c" translate="yes" xml:space="preserve">
          <source>If you &lt;a href=&quot;https://docs.python.org/3/library/pickle.html#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; a &lt;code&gt;QuerySet&lt;/code&gt;, this will force all the results to be loaded into memory prior to pickling. Pickling is usually used as a precursor to caching and when the cached queryset is reloaded, you want the results to already be present and ready for use (reading from the database can take some time, defeating the purpose of caching). This means that when you unpickle a &lt;code&gt;QuerySet&lt;/code&gt;, it contains the results at the moment it was pickled, rather than the results that are currently in the database.</source>
          <target state="translated">如果&lt;a href=&quot;https://docs.python.org/3/library/pickle.html#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;一个 &lt;code&gt;QuerySet&lt;/code&gt; ，这将迫使所有的结果将被加载到内存中之前酸洗。酸洗通常用作缓存的先决条件，并且当重新加载缓存的查询集时，您希望结果已经存在并可以使用（从数据库中读取数据可能要花费一些时间，无法达到缓存的目的）。这意味着，当您释放 &lt;code&gt;QuerySet&lt;/code&gt; 时，它包含被腌制时的结果，而不是数据库中当前的结果。</target>
        </trans-unit>
        <trans-unit id="c976c50b35c8e39b12378828f30c9e059d209f63" translate="yes" xml:space="preserve">
          <source>If you activate &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt;&lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt;&lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt;&lt;/a&gt;, you must include the CSRF token in your HTML and read the token from the DOM with JavaScript:</source>
          <target state="translated">如果您激活&lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt; &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt; &lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt; &lt;/a&gt;，则必须在HTML中包含CSRF令牌，并使用JavaScript从DOM中读取该令牌：</target>
        </trans-unit>
        <trans-unit id="ab46e0097159c03d8a60d09a7d1250eee53c6b4a" translate="yes" xml:space="preserve">
          <source>If you add a new keyword argument, you need to write code in &lt;code&gt;deconstruct()&lt;/code&gt; that puts its value into &lt;code&gt;kwargs&lt;/code&gt; yourself. You should also omit the value from &lt;code&gt;kwargs&lt;/code&gt; when it isn&amp;rsquo;t necessary to reconstruct the state of the field, such as when the default value is being used:</source>
          <target state="translated">如果添加新的关键字参数，则需要在 &lt;code&gt;deconstruct()&lt;/code&gt; 中编写代码，以便自己将其值放入 &lt;code&gt;kwargs&lt;/code&gt; 中。当不需要重建字段的状态时，例如在使用默认值时，您还应该从 &lt;code&gt;kwargs&lt;/code&gt; 中忽略该值：</target>
        </trans-unit>
        <trans-unit id="9290e813a0bf97db9d008f3c672105ad13a270f2" translate="yes" xml:space="preserve">
          <source>If you add or modify flatpages via your own code, you will likely want to check for duplicate flatpage URLs within the same site. The flatpage form used in the admin performs this validation check, and can be imported from &lt;code&gt;django.contrib.flatpages.forms.FlatpageForm&lt;/code&gt; and used in your own views.</source>
          <target state="translated">如果您通过自己的代码添加或修改纯平版，则可能需要检查同一站点内是否有重复的纯平版URL。管理员使用的平面表单执行此验证检查，可以从 &lt;code&gt;django.contrib.flatpages.forms.FlatpageForm&lt;/code&gt; 导入并在您自己的视图中使用。</target>
        </trans-unit>
        <trans-unit id="19279f2745faa7fa825b809dfd65333ca02e57b9" translate="yes" xml:space="preserve">
          <source>If you add the name of a callable to &lt;code&gt;fields&lt;/code&gt;, the same rule applies as with the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.fields&quot;&gt;&lt;code&gt;fields&lt;/code&gt;&lt;/a&gt; option: the callable must be listed in &lt;a href=&quot;#django.contrib.admin.ModelAdmin.readonly_fields&quot;&gt;&lt;code&gt;readonly_fields&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果将可调用对象的名称添加到 &lt;code&gt;fields&lt;/code&gt; ，则将应用与&lt;a href=&quot;#django.contrib.admin.ModelAdmin.fields&quot;&gt; &lt;code&gt;fields&lt;/code&gt; &lt;/a&gt;选项相同的规则：必须在&lt;a href=&quot;#django.contrib.admin.ModelAdmin.readonly_fields&quot;&gt; &lt;code&gt;readonly_fields&lt;/code&gt; 中&lt;/a&gt;列出可调用对象。</target>
        </trans-unit>
        <trans-unit id="4828b14d37ca4d41be7823693b8a8c011f2c2552" translate="yes" xml:space="preserve">
          <source>If you aim to build a database-agnostic application, you should account for differences in database column types. For example, the date/time column type in PostgreSQL is called &lt;code&gt;timestamp&lt;/code&gt;, while the same column in MySQL is called &lt;code&gt;datetime&lt;/code&gt;. You can handle this in a &lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt;&lt;code&gt;db_type()&lt;/code&gt;&lt;/a&gt; method by checking the &lt;code&gt;connection.settings_dict['ENGINE']&lt;/code&gt; attribute.</source>
          <target state="translated">如果要构建与数据库无关的应用程序，则应考虑数据库列类型的差异。例如，PostgreSQL中的date / time列类型称为 &lt;code&gt;timestamp&lt;/code&gt; ，而MySQL中的同一列称为 &lt;code&gt;datetime&lt;/code&gt; 。您可以通过检查 &lt;code&gt;connection.settings_dict['ENGINE']&lt;/code&gt; 属性在&lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt; &lt;code&gt;db_type()&lt;/code&gt; &lt;/a&gt;方法中进行处理。</target>
        </trans-unit>
        <trans-unit id="d866003e34d19497e6a39513c19080fca9667425" translate="yes" xml:space="preserve">
          <source>If you allow for blank values, you have to allow for null values since blank values are stored as null.</source>
          <target state="translated">如果允许空值,就必须允许空值,因为空值会被存储为null。</target>
        </trans-unit>
        <trans-unit id="5dfbcb1590644f47fc6c2a97a5c0c0679f9f8edd" translate="yes" xml:space="preserve">
          <source>If you already have the GET arguments in URL-encoded form, you can use that encoding instead of using the data argument. For example, the previous GET request could also be posed as:</source>
          <target state="translated">如果你已经有了URL编码形式的GET参数,你可以使用该编码代替数据参数。例如,之前的GET请求也可以摆成。</target>
        </trans-unit>
        <trans-unit id="9f8f087d060b362f136ee6b97e34ff5646abcd8a" translate="yes" xml:space="preserve">
          <source>If you already know a few other languages and want to get up to speed with Python quickly, we recommend &lt;a href=&quot;https://diveinto.org/python3/table-of-contents.html&quot;&gt;Dive Into Python&lt;/a&gt;. If that&amp;rsquo;s not quite your style, there are many other &lt;a href=&quot;https://wiki.python.org/moin/PythonBooks&quot;&gt;books about Python&lt;/a&gt;.</source>
          <target state="translated">如果您已经了解其他几种语言，并且想快速掌握Python的知识，我们建议您使用&lt;a href=&quot;https://diveinto.org/python3/table-of-contents.html&quot;&gt;Dive Into Python&lt;/a&gt;。如果那不是您的风格，那么还有许多其他&lt;a href=&quot;https://wiki.python.org/moin/PythonBooks&quot;&gt;有关Python的书&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="037b16c87c42ef82ec961a3ac3d843c26b02994c" translate="yes" xml:space="preserve">
          <source>If you are &lt;em&gt;absolutely&lt;/em&gt; in dire need to run this code from an asynchronous context - for example, it is being forced on you by an external environment, and you are sure there is no chance of it being run concurrently (e.g. you are in a &lt;a href=&quot;https://jupyter.org/&quot;&gt;Jupyter&lt;/a&gt; notebook), then you can disable the warning with the &lt;code&gt;DJANGO_ALLOW_ASYNC_UNSAFE&lt;/code&gt; environment variable.</source>
          <target state="translated">如果您&lt;em&gt;绝对&lt;/em&gt;迫切需要从异步上下文中运行此代码-例如，它是由外部环境强加给您的，并且您确定它不可能同时运行（例如，您在&lt;a href=&quot;https://jupyter.org/&quot;&gt;Jupyter中）&lt;/a&gt;笔记本），则可以使用 &lt;code&gt;DJANGO_ALLOW_ASYNC_UNSAFE&lt;/code&gt; 环境变量禁用该警告。</target>
        </trans-unit>
        <trans-unit id="cabfbe868e7cb75abcebb7e76b56c06e811c5257" translate="yes" xml:space="preserve">
          <source>If you are chaining filters, a filter applied after &lt;code&gt;safe&lt;/code&gt; can make the contents unsafe again. For example, the following code prints the variable as is, unescaped:</source>
          <target state="translated">如果要链接过滤器，则在 &lt;code&gt;safe&lt;/code&gt; 后应用过滤器可能会使内容再次变得不安全。例如，以下代码按原样打印变量，不转义：</target>
        </trans-unit>
        <trans-unit id="2655962c0a4f53510466dd490c637f462974c542" translate="yes" xml:space="preserve">
          <source>If you are connecting to the internet behind a proxy, there might be problems in running the command &lt;code&gt;py -m pip install Django&lt;/code&gt;. Set the environment variables for proxy configuration in the command prompt as follows:</source>
          <target state="translated">如果要通过代理连接到Internet，则在运行 &lt;code&gt;py -m pip install Django&lt;/code&gt; 命令时可能会出现问题。在命令提示符下设置用于代理配置的环境变量，如下所示：</target>
        </trans-unit>
        <trans-unit id="3f2135c10c9c1fcecec78e1b0692c6109124ccab" translate="yes" xml:space="preserve">
          <source>If you are constructing an object manually, you can assign the file object from &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt;&lt;code&gt;request.FILES&lt;/code&gt;&lt;/a&gt; to the file field in the model:</source>
          <target state="translated">如果要手动构造对象，则可以将&lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt; &lt;code&gt;request.FILES&lt;/code&gt; 中&lt;/a&gt;的文件对象分配给模型中的file字段：</target>
        </trans-unit>
        <trans-unit id="92ab820f72ae9c99d7def5b0452724d8bd608be6" translate="yes" xml:space="preserve">
          <source>If you are creating a reusable application, it is recommended to use only the built-in &lt;a href=&quot;#message-levels&quot;&gt;message levels&lt;/a&gt; and not rely on any custom levels.</source>
          <target state="translated">如果要创建可重用的应用程序，建议仅使用内置&lt;a href=&quot;#message-levels&quot;&gt;消息级别&lt;/a&gt;而不依赖任何自定义级别。</target>
        </trans-unit>
        <trans-unit id="ffa521388bfefc73cf3b041673a0e7a8595c90d3" translate="yes" xml:space="preserve">
          <source>If you are deployed behind a load-balancer or reverse-proxy server and Django can&amp;rsquo;t seem to tell when a request actually is already secure, you may need to set the &lt;a href=&quot;settings#std:setting-SECURE_PROXY_SSL_HEADER&quot;&gt;&lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">如果将您部署在负载平衡器或反向代理服务器之后，而Django似乎无法告知请求实际何时已经安全，则可能需要设置&lt;a href=&quot;settings#std:setting-SECURE_PROXY_SSL_HEADER&quot;&gt; &lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="41e9a421371bfb5a50b98c32edd7081296c13f7c" translate="yes" xml:space="preserve">
          <source>If you are deployed behind a load-balancer or reverse-proxy server, and the &lt;code&gt;Strict-Transport-Security&lt;/code&gt; header is not being added to your responses, it may be because Django doesn&amp;rsquo;t realize that it&amp;rsquo;s on a secure connection; you may need to set the &lt;a href=&quot;settings#std:setting-SECURE_PROXY_SSL_HEADER&quot;&gt;&lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">如果将您部署在负载平衡器或反向代理服务器之后，并且未将 &lt;code&gt;Strict-Transport-Security&lt;/code&gt; 标头添加到响应中，则可能是因为Django没有意识到它位于安全连接上；您可能需要设置&lt;a href=&quot;settings#std:setting-SECURE_PROXY_SSL_HEADER&quot;&gt; &lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="2c691ad6ca02fef297ccdbc9e5c26db8508ebcf4" translate="yes" xml:space="preserve">
          <source>If you are developing a small project or something you don&amp;rsquo;t plan to deploy in a production environment, SQLite is generally the best option as it doesn&amp;rsquo;t require running a separate server. However, SQLite has many differences from other databases, so if you are working on something substantial, it&amp;rsquo;s recommended to develop with the same database that you plan on using in production.</source>
          <target state="translated">如果您正在开发小型项目或不打算在生产环境中部署的项目，则SQLite通常是最佳选择，因为它不需要运行单独的服务器。但是，SQLite与其他数据库有很多差异，因此，如果您要进行大量工作，建议使用计划在生产中使用的数据库进行开发。</target>
        </trans-unit>
        <trans-unit id="426463c8a09b71f7c823f03996117348698ae262" translate="yes" xml:space="preserve">
          <source>If you are familiar with Python packaging and interested in learning how to turn polls into a &amp;ldquo;reusable app&amp;rdquo;, check out &lt;a href=&quot;reusable-apps&quot;&gt;Advanced tutorial: How to write reusable apps&lt;/a&gt;.</source>
          <target state="translated">如果您熟悉Python打包并且有兴趣学习如何将民意测验转变为&amp;ldquo;可重用应用程序&amp;rdquo;，请查看&lt;a href=&quot;reusable-apps&quot;&gt;高级教程：如何编写可重用应用程序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6df1a07d3d4b877dffccc3304d0749b9a9a63bcf" translate="yes" xml:space="preserve">
          <source>If you are filtering across multiple relationships and one of the intermediate models doesn&amp;rsquo;t have a value that meets the filter condition, Django will treat it as if there is an empty (all values are &lt;code&gt;NULL&lt;/code&gt;), but valid, object there. All this means is that no error will be raised. For example, in this filter:</source>
          <target state="translated">如果您正在多个关系中进行过滤，并且其中一个中间模型没有一个满足过滤条件的值，则Django会将其视为存在一个空（所有值均为 &lt;code&gt;NULL&lt;/code&gt; ）但有效的对象。所有这些意味着不会出现任何错误。例如，在此过滤器中：</target>
        </trans-unit>
        <trans-unit id="54d3dc0d5d9a07f09c0b925c9b0c98d70db0dd97" translate="yes" xml:space="preserve">
          <source>If you are going to need other data from the QuerySet, evaluate it immediately.</source>
          <target state="translated">如果你将需要来自QuerySet的其他数据,请立即评估它。</target>
        </trans-unit>
        <trans-unit id="0a6f484ecf97ba11c41c19b92638b2e691e251cf" translate="yes" xml:space="preserve">
          <source>If you are just starting with Django and using Windows, you may find &lt;a href=&quot;../howto/windows&quot;&gt;How to install Django on Windows&lt;/a&gt; useful.</source>
          <target state="translated">如果您只是从Django开始并使用Windows，则可能会发现&amp;ldquo; &lt;a href=&quot;../howto/windows&quot;&gt;如何在Windows上安装Django&amp;rdquo;&lt;/a&gt;很有用。</target>
        </trans-unit>
        <trans-unit id="f8022aedc2f24dbfc32c1645a06e23557556b40d" translate="yes" xml:space="preserve">
          <source>If you are looking for a more robust solution, take a look at the &lt;a href=&quot;https://pypi.org/project/bleach/&quot;&gt;bleach&lt;/a&gt; Python library.</source>
          <target state="translated">如果您正在寻找更强大的解决方案，请查看&lt;a href=&quot;https://pypi.org/project/bleach/&quot;&gt;漂白&lt;/a&gt; Python库。</target>
        </trans-unit>
        <trans-unit id="5679be2b89b6ad12b1cb13d77be5c899c643d272" translate="yes" xml:space="preserve">
          <source>If you are looking for a reference on how to submit patches, see the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/submitting-patches/&quot;&gt;Submitting patches&lt;/a&gt; documentation.</source>
          <target state="translated">如果要查找有关如何提交修补程序的参考，请参阅&amp;ldquo; &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/submitting-patches/&quot;&gt;提交修补程序&amp;rdquo;&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="b51f6b7ffd84766e0e10e46ee09ef3d2cd522fad" translate="yes" xml:space="preserve">
          <source>If you are migrating from the Django&amp;rsquo;s built-in &lt;code&gt;cached_db&lt;/code&gt; session store to a custom one based on &lt;code&gt;cached_db&lt;/code&gt;, you should override the cache key prefix in order to prevent a namespace clash:</source>
          <target state="translated">如果要从Django的内置 &lt;code&gt;cached_db&lt;/code&gt; 会话存储区迁移到基于 &lt;code&gt;cached_db&lt;/code&gt; 的自定义存储区，则应覆盖缓存键前缀，以防止名称空间冲突：</target>
        </trans-unit>
        <trans-unit id="3f20d2e0ed1b7dfe99fe7b1b15afc7ea12f08c4e" translate="yes" xml:space="preserve">
          <source>If you are mirroring an existing model or database table and don&amp;rsquo;t want all the original database table columns, use &lt;code&gt;Meta.managed=False&lt;/code&gt;. That option is normally useful for modeling database views and tables not under the control of Django.</source>
          <target state="translated">如果要镜像现有模型或数据库表，并且不希望所有原始数据库表列，请使用 &lt;code&gt;Meta.managed=False&lt;/code&gt; 。通常，该选项对于不受Django控制的数据库视图和表建模很有用。</target>
        </trans-unit>
        <trans-unit id="2c77013a5d33bed9ff8aeb9b8d8bccb978ee3d8e" translate="yes" xml:space="preserve">
          <source>If you are not using SQLite as your database, additional settings such as &lt;a href=&quot;../ref/settings#std:setting-USER&quot;&gt;&lt;code&gt;USER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ref/settings#std:setting-PASSWORD&quot;&gt;&lt;code&gt;PASSWORD&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../ref/settings#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt; must be added. For more details, see the reference documentation for &lt;a href=&quot;../ref/settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您不使用SQLite作为数据库，则必须添加其他设置，例如&lt;a href=&quot;../ref/settings#std:setting-USER&quot;&gt; &lt;code&gt;USER&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../ref/settings#std:setting-PASSWORD&quot;&gt; &lt;code&gt;PASSWORD&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/settings#std:setting-HOST&quot;&gt; &lt;code&gt;HOST&lt;/code&gt; &lt;/a&gt;。有关更多详细信息，请参见&lt;a href=&quot;../ref/settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt;的参考文档。</target>
        </trans-unit>
        <trans-unit id="2dff9fa6f2943dcffcb71466072c87506f22903b" translate="yes" xml:space="preserve">
          <source>If you are performing queries on MySQL, note that MySQL&amp;rsquo;s silent type coercion may cause unexpected results when mixing types. If you query on a string type column, but with an integer value, MySQL will coerce the types of all values in the table to an integer before performing the comparison. For example, if your table contains the values &lt;code&gt;'abc'&lt;/code&gt;, &lt;code&gt;'def'&lt;/code&gt; and you query for &lt;code&gt;WHERE mycolumn=0&lt;/code&gt;, both rows will match. To prevent this, perform the correct typecasting before using the value in a query.</source>
          <target state="translated">如果要在MySQL上执行查询，请注意，在混合类型时，MySQL的静默类型强制可能会导致意外结果。如果在字符串类型的列上查询但具有整数值，MySQL将在执行比较之前将表中所有值的类型强制为整数。例如，如果您的表包含值 &lt;code&gt;'abc'&lt;/code&gt; ， &lt;code&gt;'def'&lt;/code&gt; 并且您查询 &lt;code&gt;WHERE mycolumn=0&lt;/code&gt; ，则两行都将匹配。为防止这种情况，请在查询中使用该值之前执行正确的类型转换。</target>
        </trans-unit>
        <trans-unit id="a947d6cabd99493fc7e983c79f42f4923da04a9e" translate="yes" xml:space="preserve">
          <source>If you are serving your own static files, be sure that handlers like Apache&amp;rsquo;s &lt;code&gt;mod_php&lt;/code&gt;, which would execute static files as code, are disabled. You don&amp;rsquo;t want users to be able to execute arbitrary code by uploading and requesting a specially crafted file.</source>
          <target state="translated">如果您要提供自己的静态文件，请确保禁用将Apache的 &lt;code&gt;mod_php&lt;/code&gt; 之类的处理程序作为代码执行的处理程序。您不希望用户能够通过上载和请求特制文件来执行任意代码。</target>
        </trans-unit>
        <trans-unit id="3e266d9fb9806995f7ae92d1d0321cc13f004066" translate="yes" xml:space="preserve">
          <source>If you are sharing a cache instance between servers, or between your production and development environments, it&amp;rsquo;s possible for data cached by one server to be used by another server. If the format of cached data is different between servers, this can lead to some very hard to diagnose problems.</source>
          <target state="translated">如果要在服务器之间或在生产和开发环境之间共享缓存实例，则一台服务器缓存的数据可能会被另一台服务器使用。如果服务器之间的缓存数据格式不同，则可能导致某些很难诊断的问题。</target>
        </trans-unit>
        <trans-unit id="5df3afa0c3b43eec8bd8d9f748fb63ae435ac643" translate="yes" xml:space="preserve">
          <source>If you are the maintainer of a third-party app with models, you may need to ship migrations that support multiple Django versions. In this case, you should always run &lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;with the lowest Django version you wish to support&lt;/strong&gt;.</source>
          <target state="translated">如果您是带有模型的第三方应用程序的维护者，则可能需要提供支持多个Django版本的迁移。在这种情况下，您应该始终&lt;strong&gt;使用希望支持的最低Django版本&lt;/strong&gt;运行&lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c58efff062a8aaaaa34e19e97693ce558ec61bc5" translate="yes" xml:space="preserve">
          <source>If you are trying to call code that is synchronous-only from an asynchronous thread, then create a synchronous thread and call it in that. You can accomplish this is with &lt;code&gt;asgiref.sync.sync_to_async&lt;/code&gt;.</source>
          <target state="translated">如果您尝试从异步线程中调用仅同步的代码，请创建一个同步线程并在其中调用它。您可以使用 &lt;code&gt;asgiref.sync.sync_to_async&lt;/code&gt; 完成此操作。</target>
        </trans-unit>
        <trans-unit id="e8e0bd3010ac7dd8cec899905c900e89f1f7d84a" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_query_name&quot;&gt;&lt;code&gt;related_query_name&lt;/code&gt;&lt;/a&gt; on a &lt;code&gt;ForeignKey&lt;/code&gt; or &lt;code&gt;ManyToManyField&lt;/code&gt;, you must always specify a &lt;em&gt;unique&lt;/em&gt; reverse name and query name for the field. This would normally cause a problem in abstract base classes, since the fields on this class are included into each of the child classes, with exactly the same values for the attributes (including &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_query_name&quot;&gt;&lt;code&gt;related_query_name&lt;/code&gt;&lt;/a&gt;) each time.</source>
          <target state="translated">如果你正在使用&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_query_name&quot;&gt; &lt;code&gt;related_query_name&lt;/code&gt; &lt;/a&gt;在 &lt;code&gt;ForeignKey&lt;/code&gt; 的或 &lt;code&gt;ManyToManyField&lt;/code&gt; ，你必须指定一个&lt;em&gt;唯一的&lt;/em&gt;反向名称和字段查询名称。这通常会在抽象基类中引起问题，因为此类的字段包含在每个子类中，并且每次具有完全相同的属性值（包括&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_query_name&quot;&gt; &lt;code&gt;related_query_name&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="13ff923ff59501ab414c4be102a84827b6e517bb" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;../ref/django-admin#django-admin-dumpdata&quot;&gt;&lt;code&gt;dumpdata&lt;/code&gt;&lt;/a&gt; to generate serialized data, use the &lt;a href=&quot;../ref/django-admin#cmdoption-dumpdata-natural-foreign&quot;&gt;&lt;code&gt;dumpdata --natural-foreign&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/django-admin#cmdoption-dumpdata-natural-primary&quot;&gt;&lt;code&gt;dumpdata --natural-primary&lt;/code&gt;&lt;/a&gt; command line flags to generate natural keys.</source>
          <target state="translated">如果要使用&lt;a href=&quot;../ref/django-admin#django-admin-dumpdata&quot;&gt; &lt;code&gt;dumpdata&lt;/code&gt; &lt;/a&gt;生成序列化数据，请使用&lt;a href=&quot;../ref/django-admin#cmdoption-dumpdata-natural-foreign&quot;&gt; &lt;code&gt;dumpdata --natural-foreign&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/django-admin#cmdoption-dumpdata-natural-primary&quot;&gt; &lt;code&gt;dumpdata --natural-primary&lt;/code&gt; &lt;/a&gt;命令行标志来生成自然键。</target>
        </trans-unit>
        <trans-unit id="59359e0377bcc9039f07ed70ee0fda67ef2ccade" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;multi-db&quot;&gt;more than one database&lt;/a&gt;, you can use &lt;code&gt;django.db.connections&lt;/code&gt; to obtain the connection (and cursor) for a specific database. &lt;code&gt;django.db.connections&lt;/code&gt; is a dictionary-like object that allows you to retrieve a specific connection using its alias:</source>
          <target state="translated">如果您使用&lt;a href=&quot;multi-db&quot;&gt;多个数据库&lt;/a&gt;，则可以使用 &lt;code&gt;django.db.connections&lt;/code&gt; 获取特定数据库的连接（和游标）。 &lt;code&gt;django.db.connections&lt;/code&gt; 是一个类似于字典的对象，它允许您使用其别名检索特定的连接：</target>
        </trans-unit>
        <trans-unit id="f9a935f64b3c7b8ef812c793ab72169e068de5c7" translate="yes" xml:space="preserve">
          <source>If you are using MySQL, see the &lt;a href=&quot;../../ref/databases#mysql-time-zone-definitions&quot;&gt;Time zone definitions&lt;/a&gt; section of the MySQL notes for instructions on loading time zone definitions.</source>
          <target state="translated">如果您使用的是MySQL，请参阅MySQL注释的&amp;ldquo; &lt;a href=&quot;../../ref/databases#mysql-time-zone-definitions&quot;&gt;时区定义&amp;rdquo;&lt;/a&gt;部分，以获取有关加载时区定义的说明。</target>
        </trans-unit>
        <trans-unit id="20d3a84d61e53af28e187e5423ab3c6daba100cb" translate="yes" xml:space="preserve">
          <source>If you are using a &lt;a href=&quot;modelforms#django.forms.models.BaseModelFormSet&quot;&gt;&lt;code&gt;ModelFormSet&lt;/code&gt;&lt;/a&gt;, model instances for deleted forms will be deleted when you call &lt;code&gt;formset.save()&lt;/code&gt;.</source>
          <target state="translated">如果使用&lt;a href=&quot;modelforms#django.forms.models.BaseModelFormSet&quot;&gt; &lt;code&gt;ModelFormSet&lt;/code&gt; &lt;/a&gt;，则在调用 &lt;code&gt;formset.save()&lt;/code&gt; 时将删除已删除表单的模型实例。</target>
        </trans-unit>
        <trans-unit id="4a32235de5fa9b7f6d1fb4ceb0c0a90fb7c8b7a7" translate="yes" xml:space="preserve">
          <source>If you are using a custom &lt;code&gt;AdminSite&lt;/code&gt;, it is common to import all of the &lt;code&gt;ModelAdmin&lt;/code&gt; subclasses into your code and register them to the custom &lt;code&gt;AdminSite&lt;/code&gt;. In that case, in order to disable auto-discovery, you should put &lt;code&gt;'django.contrib.admin.apps.SimpleAdminConfig'&lt;/code&gt; instead of &lt;code&gt;'django.contrib.admin'&lt;/code&gt; in your &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">如果使用的是自定义 &lt;code&gt;AdminSite&lt;/code&gt; ，通常 &lt;code&gt;ModelAdmin&lt;/code&gt; 所有ModelAdmin子类导入代码中，然后将它们注册到自定义 &lt;code&gt;AdminSite&lt;/code&gt; 中。在这种情况下，为了禁用自动发现，应在&lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置中放置 &lt;code&gt;'django.contrib.admin.apps.SimpleAdminConfig'&lt;/code&gt; 而不是 &lt;code&gt;'django.contrib.admin'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e5ad72d051f2c508d3660b55413bfd83991c9d5" translate="yes" xml:space="preserve">
          <source>If you are using a custom &lt;code&gt;ModelAdmin&lt;/code&gt; which is a subclass of &lt;code&gt;django.contrib.auth.admin.UserAdmin&lt;/code&gt;, then you need to add your custom fields to &lt;code&gt;fieldsets&lt;/code&gt; (for fields to be used in editing users) and to &lt;code&gt;add_fieldsets&lt;/code&gt; (for fields to be used when creating a user). For example:</source>
          <target state="translated">如果您使用的是定制 &lt;code&gt;ModelAdmin&lt;/code&gt; 是的子类 &lt;code&gt;django.contrib.auth.admin.UserAdmin&lt;/code&gt; ，那么你就需要您的自定义字段添加到 &lt;code&gt;fieldsets&lt;/code&gt; （用于编辑的用户使用的字段）和 &lt;code&gt;add_fieldsets&lt;/code&gt; （字段的是创建用户时使用）。例如：</target>
        </trans-unit>
        <trans-unit id="55299cb11d5a4d1a27e95db83e96e73588d11d45" translate="yes" xml:space="preserve">
          <source>If you are using a legacy database that contains &lt;code&gt;TIMESTAMP&lt;/code&gt; columns, you must set &lt;a href=&quot;settings#std:setting-USE_TZ&quot;&gt;&lt;code&gt;USE_TZ = False&lt;/code&gt;&lt;/a&gt; to avoid data corruption. &lt;a href=&quot;django-admin#django-admin-inspectdb&quot;&gt;&lt;code&gt;inspectdb&lt;/code&gt;&lt;/a&gt; maps these columns to &lt;a href=&quot;models/fields#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt; and if you enable timezone support, both MySQL and Django will attempt to convert the values from UTC to local time.</source>
          <target state="translated">如果使用的旧数据库包含 &lt;code&gt;TIMESTAMP&lt;/code&gt; 列，则必须将&lt;a href=&quot;settings#std:setting-USE_TZ&quot;&gt; &lt;code&gt;USE_TZ = False&lt;/code&gt; &lt;/a&gt;设置为避免数据损坏。&lt;a href=&quot;django-admin#django-admin-inspectdb&quot;&gt; &lt;code&gt;inspectdb&lt;/code&gt; &lt;/a&gt;将这些列映射到&lt;a href=&quot;models/fields#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt;，如果启用时区支持，则MySQL和Django都会尝试将值从UTC转换为本地时间。</target>
        </trans-unit>
        <trans-unit id="9b9eb482ea04b91f418d3f207e5896276fab27cb" translate="yes" xml:space="preserve">
          <source>If you are using a production backend that can accept a wider range of keys (a custom backend, or one of the non-memcached built-in backends), and want to use this wider range without warnings, you can silence &lt;code&gt;CacheKeyWarning&lt;/code&gt; with this code in the &lt;code&gt;management&lt;/code&gt; module of one of your &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果您使用的生产后端可以接受更广泛的键范围（自定义后端或非内存缓存的内置后端之一），并且想要在没有警告的情况下使用更大范围的键，则可以使用此代码使 &lt;code&gt;CacheKeyWarning&lt;/code&gt; 静音在您的&lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;之一的 &lt;code&gt;management&lt;/code&gt; 模块中：</target>
        </trans-unit>
        <trans-unit id="400ddbb0cf2f8ce72e355d92bebfc1e26ffa4aab" translate="yes" xml:space="preserve">
          <source>If you are using a version of Apache older than 2.4, replace &lt;code&gt;Require all granted&lt;/code&gt; with &lt;code&gt;Allow from all&lt;/code&gt; and also add the line &lt;code&gt;Order deny,allow&lt;/code&gt; above it.</source>
          <target state="translated">如果您使用的是Apache版本比2.4更老，更换 &lt;code&gt;Require all granted&lt;/code&gt; 与 &lt;code&gt;Allow from all&lt;/code&gt; 并添加一行 &lt;code&gt;Order deny,allow&lt;/code&gt; 它上面。</target>
        </trans-unit>
        <trans-unit id="e9b1ff813f22a4d98b3e0ec7f8d1a70dfb440c12" translate="yes" xml:space="preserve">
          <source>If you are using caching provided by Django, you should consider clearing your cache after upgrading. Otherwise you may run into problems, for example, if you are caching pickled objects as these objects are not guaranteed to be pickle-compatible across Django versions. A past instance of incompatibility was caching pickled &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; objects, either directly or indirectly via the &lt;a href=&quot;../topics/cache#django.views.decorators.cache.cache_page&quot;&gt;&lt;code&gt;cache_page()&lt;/code&gt;&lt;/a&gt; decorator.</source>
          <target state="translated">如果您使用的是Django提供的缓存，则应考虑在升级后清除缓存。否则，您可能会遇到问题，例如，如果您在缓存腌制的对象时，因为不能保证这些对象在Django版本之间都是与腌制兼容的。过去的不兼容性实例是直接或通过&lt;a href=&quot;../topics/cache#django.views.decorators.cache.cache_page&quot;&gt; &lt;code&gt;cache_page()&lt;/code&gt; &lt;/a&gt;装饰器间接缓存已腌制的&lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="31c81067457a54fed13944b98da35401d7bcbd26" translate="yes" xml:space="preserve">
          <source>If you are using class-based views, you can refer to &lt;a href=&quot;../topics/class-based-views/intro#id1&quot;&gt;Decorating class-based views&lt;/a&gt;.</source>
          <target state="translated">如果您使用的是基于类的视图，则可以参考&lt;a href=&quot;../topics/class-based-views/intro#id1&quot;&gt;装饰基于类的视图&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="74bc5b3d8a5fb005230ddd51971a6b250b4753ac" translate="yes" xml:space="preserve">
          <source>If you are using more than one database you can use &lt;code&gt;django.db.connections&lt;/code&gt; to obtain the connection (and cursor) for a specific database. &lt;code&gt;django.db.connections&lt;/code&gt; is a dictionary-like object that allows you to retrieve a specific connection using its alias:</source>
          <target state="translated">如果您使用多个数据库，则可以使用 &lt;code&gt;django.db.connections&lt;/code&gt; 获取特定数据库的连接（和游标）。 &lt;code&gt;django.db.connections&lt;/code&gt; 是一个类似于字典的对象，它允许您使用其别名检索特定的连接：</target>
        </trans-unit>
        <trans-unit id="0ecf06722ffb34ee4a0fedfb0511c983d4a713e0" translate="yes" xml:space="preserve">
          <source>If you are using multiple database caches, &lt;a href=&quot;../ref/django-admin#django-admin-createcachetable&quot;&gt;&lt;code&gt;createcachetable&lt;/code&gt;&lt;/a&gt; creates one table for each cache.</source>
          <target state="translated">如果使用多个数据库缓存，则&lt;a href=&quot;../ref/django-admin#django-admin-createcachetable&quot;&gt; &lt;code&gt;createcachetable&lt;/code&gt; &lt;/a&gt;为每个缓存创建一个表。</target>
        </trans-unit>
        <trans-unit id="c1f1afe7956d536875c96cebe4354cfc56b04593" translate="yes" xml:space="preserve">
          <source>If you are using multiple databases, &lt;a href=&quot;../ref/django-admin#django-admin-createcachetable&quot;&gt;&lt;code&gt;createcachetable&lt;/code&gt;&lt;/a&gt; observes the &lt;code&gt;allow_migrate()&lt;/code&gt; method of your database routers (see below).</source>
          <target state="translated">如果使用多个数据库，则&lt;a href=&quot;../ref/django-admin#django-admin-createcachetable&quot;&gt; &lt;code&gt;createcachetable&lt;/code&gt; 会&lt;/a&gt;观察数据库路由器的 &lt;code&gt;allow_migrate()&lt;/code&gt; 方法（请参见下文）。</target>
        </trans-unit>
        <trans-unit id="d8e86b0dcae3d153f97ecddffbaca181d07969ec" translate="yes" xml:space="preserve">
          <source>If you are using the &lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt; backend, this probably isn&amp;rsquo;t the documentation you&amp;rsquo;re looking for. An instance of the &lt;code&gt;Engine&lt;/code&gt; class described below is accessible using the &lt;code&gt;engine&lt;/code&gt; attribute of that backend and any attribute defaults mentioned below are overridden by what&amp;rsquo;s passed by &lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您使用的是&lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;DjangoTemplates&lt;/code&gt; &lt;/a&gt;后端，则可能不是您要查找的文档。可以使用该后端的 &lt;code&gt;engine&lt;/code&gt; 属性访问下面描述的 &lt;code&gt;Engine&lt;/code&gt; 类的实例，并且下面提到的任何属性默认值都会被&lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;DjangoTemplates&lt;/code&gt; &lt;/a&gt;传递的内容覆盖。</target>
        </trans-unit>
        <trans-unit id="98aa047d8bc9dd103405d4da35377acc8117f24d" translate="yes" xml:space="preserve">
          <source>If you are using the &lt;a href=&quot;db/managers#django.db.models.from_queryset&quot;&gt;&lt;code&gt;from_queryset()&lt;/code&gt;&lt;/a&gt; function to dynamically generate a manager class, you need to inherit from the generated class to make it importable:</source>
          <target state="translated">如果使用&lt;a href=&quot;db/managers#django.db.models.from_queryset&quot;&gt; &lt;code&gt;from_queryset()&lt;/code&gt; &lt;/a&gt;函数动态生成管理器类，则需要从生成的类继承以使其可导入：</target>
        </trans-unit>
        <trans-unit id="b152ab1851b4b76c1b0fadc99e24633039333bc3" translate="yes" xml:space="preserve">
          <source>If you are using the default &lt;a href=&quot;../files/storage#django.core.files.storage.FileSystemStorage&quot;&gt;&lt;code&gt;FileSystemStorage&lt;/code&gt;&lt;/a&gt;, the string value will be appended to your &lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt;&lt;/a&gt; path to form the location on the local filesystem where uploaded files will be stored. If you are using a different storage, check that storage&amp;rsquo;s documentation to see how it handles &lt;code&gt;upload_to&lt;/code&gt;.</source>
          <target state="translated">如果使用默认的&lt;a href=&quot;../files/storage#django.core.files.storage.FileSystemStorage&quot;&gt; &lt;code&gt;FileSystemStorage&lt;/code&gt; &lt;/a&gt;，则字符串值将附加到&lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt; &lt;code&gt;MEDIA_ROOT&lt;/code&gt; &lt;/a&gt;路径中，以形成本地文件系统上将存储上传文件的位置。如果您使用的是其他存储，请查看该存储的文档以查看其如何处理 &lt;code&gt;upload_to&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d24da33ace038770df53fb75680d36c64adccce" translate="yes" xml:space="preserve">
          <source>If you are using the default test runner, you can control this with the the &lt;a href=&quot;../../ref/settings#std:setting-TEST_SERIALIZE&quot;&gt;&lt;code&gt;SERIALIZE&lt;/code&gt;&lt;/a&gt; entry in the &lt;a href=&quot;../../ref/settings#std:setting-DATABASE-TEST&quot;&gt;&lt;code&gt;TEST&lt;/code&gt;&lt;/a&gt; dictionary.</source>
          <target state="translated">如果您使用默认的测试运行程序，则可以通过&lt;a href=&quot;../../ref/settings#std:setting-DATABASE-TEST&quot;&gt; &lt;code&gt;TEST&lt;/code&gt; &lt;/a&gt;词典中的&lt;a href=&quot;../../ref/settings#std:setting-TEST_SERIALIZE&quot;&gt; &lt;code&gt;SERIALIZE&lt;/code&gt; &lt;/a&gt;条目来控制它。</target>
        </trans-unit>
        <trans-unit id="3b67e56408c732a18c6ba1adae555cdf257848ab" translate="yes" xml:space="preserve">
          <source>If you are wanting to change the Python-only behavior of a model, but keep all the same fields as in the original, use &lt;code&gt;Meta.proxy=True&lt;/code&gt;. This sets things up so that the proxy model is an exact copy of the storage structure of the original model when data is saved.</source>
          <target state="translated">如果要更改模型的仅Python行为，但保留与原始模型相同的所有字段，请使用 &lt;code&gt;Meta.proxy=True&lt;/code&gt; 。这样可以进行设置，以便在保存数据时，代理模型是原始模型存储结构的精确副本。</target>
        </trans-unit>
        <trans-unit id="f2bd0fdb6a5a5ac5aa3b6f2e67b4ab2cda67e9ec" translate="yes" xml:space="preserve">
          <source>If you are writing a &lt;a href=&quot;../../intro/reusable-apps&quot;&gt;reusable application&lt;/a&gt; you may want to use the Django test runner to run your own test suite and thus benefit from the Django testing infrastructure.</source>
          <target state="translated">如果您正在编写&lt;a href=&quot;../../intro/reusable-apps&quot;&gt;可重用的应用程序&lt;/a&gt;，则可能需要使用Django测试运行器来运行您自己的测试套件，从而从Django测试基础结构中受益。</target>
        </trans-unit>
        <trans-unit id="63f4345566a629d77c36a5b719a36c80b1781cf7" translate="yes" xml:space="preserve">
          <source>If you are writing an application that must be portable to multiple database backends, you should be aware that there are restrictions on &lt;code&gt;max_length&lt;/code&gt; for some backends. Refer to the &lt;a href=&quot;../databases&quot;&gt;database backend notes&lt;/a&gt; for details.</source>
          <target state="translated">如果编写的应用程序必须可移植到多个数据库后端，则应注意某些后端对 &lt;code&gt;max_length&lt;/code&gt; 有限制。有关详细信息，请参考&lt;a href=&quot;../databases&quot;&gt;数据库后端说明&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3ec3b03a16835f16337bac3782d93796fddb90be" translate="yes" xml:space="preserve">
          <source>If you are writing custom views for Django&amp;rsquo;s admin (or need the same authorization check that the built-in views use), you may find the &lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.views.decorators.staff_member_required&quot;&gt;&lt;code&gt;django.contrib.admin.views.decorators.staff_member_required()&lt;/code&gt;&lt;/a&gt; decorator a useful alternative to &lt;code&gt;login_required()&lt;/code&gt;.</source>
          <target state="translated">如果您正在为Django的管理员编写自定义视图（或需要与内置视图使用相同的授权检查），则可能会发现&lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.views.decorators.staff_member_required&quot;&gt; &lt;code&gt;django.contrib.admin.views.decorators.staff_member_required()&lt;/code&gt; &lt;/a&gt;装饰器是 &lt;code&gt;login_required()&lt;/code&gt; 的有用替代方法。</target>
        </trans-unit>
        <trans-unit id="9260861ea3c89683f0065f3584c6348bda3c70e8" translate="yes" xml:space="preserve">
          <source>If you are writing or maintaining a third-party database backend for Django, you will need to provide a &lt;code&gt;SchemaEditor&lt;/code&gt; implementation in order to work with 1.7&amp;rsquo;s migration functionality - however, as long as your database is relatively standard in its use of SQL and relational design, you should be able to subclass one of the built-in Django &lt;code&gt;SchemaEditor&lt;/code&gt; classes and tweak the syntax a little. Also note that there are a few new database features that migrations will look for: &lt;code&gt;can_rollback_ddl&lt;/code&gt; and &lt;code&gt;supports_combined_alters&lt;/code&gt; are the most important.</source>
          <target state="translated">如果要为Django编写或维护第三方数据库后端，则需要提供 &lt;code&gt;SchemaEditor&lt;/code&gt; 实现才能使用1.7的迁移功能-但是，只要您的数据库在使用SQL和SQL方面相对标准，关系设计，您应该能够将内置Django &lt;code&gt;SchemaEditor&lt;/code&gt; 类的一个子类化，并对其语法进行一些调整。还要注意，迁移会寻找一些新的数据库功能： &lt;code&gt;can_rollback_ddl&lt;/code&gt; 和 &lt;code&gt;supports_combined_alters&lt;/code&gt; 是最重要的。</target>
        </trans-unit>
        <trans-unit id="6e12212c9814a4d33e32e4d9464358cf6356b217" translate="yes" xml:space="preserve">
          <source>If you assign a value of &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; to an attribute, it will be rendered as an HTML5 boolean attribute:</source>
          <target state="translated">如果您为属性分配 &lt;code&gt;True&lt;/code&gt; 或 &lt;code&gt;False&lt;/code&gt; 值，它将被呈现为HTML5布尔值属性：</target>
        </trans-unit>
        <trans-unit id="32c8444bd1418d1e80bc0e62c5a90e8f82286fbe" translate="yes" xml:space="preserve">
          <source>If you assign auto-primary-key values manually, make sure not to use an already-existing primary-key value! If you create a new object with an explicit primary-key value that already exists in the database, Django will assume you&amp;rsquo;re changing the existing record rather than creating a new one.</source>
          <target state="translated">如果您手动分配自动主键值，请确保不要使用已经存在的主键值！如果您使用数据库中已经存在的显式主键值创建新对象，则Django会假定您正在更改现有记录，而不是创建新记录。</target>
        </trans-unit>
        <trans-unit id="49a2f3768ca62045d71dd6c07b469ec6cd3d26bc" translate="yes" xml:space="preserve">
          <source>If you attempt to access a database that you haven&amp;rsquo;t defined in your &lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt; setting, Django will raise a &lt;code&gt;django.db.utils.ConnectionDoesNotExist&lt;/code&gt; exception.</source>
          <target state="translated">如果您尝试访问未在&lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt;设置中定义的数据库，则Django将引发 &lt;code&gt;django.db.utils.ConnectionDoesNotExist&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="094a5a53db7e5fc234781db19fdb93e284cd8498" translate="yes" xml:space="preserve">
          <source>If you attempt to insert a new row that conflicts with an existing row, an &lt;a href=&quot;../../exceptions#django.db.IntegrityError&quot;&gt;&lt;code&gt;IntegrityError&lt;/code&gt;&lt;/a&gt; is raised. Similarly, when update conflicts with an existing row.</source>
          <target state="translated">如果尝试插入与现有行冲突的新行，则会引发&lt;a href=&quot;../../exceptions#django.db.IntegrityError&quot;&gt; &lt;code&gt;IntegrityError&lt;/code&gt; &lt;/a&gt;。同样，当更新与现有行发生冲突时。</target>
        </trans-unit>
        <trans-unit id="b554a2162422140f6059440c8b501ad2c5a78b5b" translate="yes" xml:space="preserve">
          <source>If you attempt to use &lt;a href=&quot;#django.contrib.sites.managers.CurrentSiteManager&quot;&gt;&lt;code&gt;CurrentSiteManager&lt;/code&gt;&lt;/a&gt; and pass a field name that doesn&amp;rsquo;t exist, Django will raise a &lt;code&gt;ValueError&lt;/code&gt;.</source>
          <target state="translated">如果尝试使用&lt;a href=&quot;#django.contrib.sites.managers.CurrentSiteManager&quot;&gt; &lt;code&gt;CurrentSiteManager&lt;/code&gt; &lt;/a&gt;并传递不存在的字段名称，则Django将引发 &lt;code&gt;ValueError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e5abf4e7be3fc5b817d5e64f617996405c68b1a" translate="yes" xml:space="preserve">
          <source>If you call &lt;code&gt;formset.save(commit=False)&lt;/code&gt;, objects will not be deleted automatically. You&amp;rsquo;ll need to call &lt;code&gt;delete()&lt;/code&gt; on each of the &lt;a href=&quot;modelforms#django.forms.models.BaseModelFormSet.deleted_objects&quot;&gt;&lt;code&gt;formset.deleted_objects&lt;/code&gt;&lt;/a&gt; to actually delete them:</source>
          <target state="translated">如果调用 &lt;code&gt;formset.save(commit=False)&lt;/code&gt; ，则不会自动删除对象。您需要在每个&lt;a href=&quot;modelforms#django.forms.models.BaseModelFormSet.deleted_objects&quot;&gt; &lt;code&gt;formset.deleted_objects&lt;/code&gt; &lt;/a&gt;上调用 &lt;code&gt;delete()&lt;/code&gt; 才能实际删除它们：</target>
        </trans-unit>
        <trans-unit id="77f2d3ee05bddf46e62d79be0db43fed60754a7d" translate="yes" xml:space="preserve">
          <source>If you call &lt;code&gt;get_template('story_detail.html')&lt;/code&gt;, here are the files Django will look for, in order:</source>
          <target state="translated">如果调用 &lt;code&gt;get_template('story_detail.html')&lt;/code&gt; ，以下是Django将按顺序查找的文件：</target>
        </trans-unit>
        <trans-unit id="81d2651eaffa16d0fff33c40f11a5412ce1b24bb" translate="yes" xml:space="preserve">
          <source>If you call &lt;code&gt;on_commit()&lt;/code&gt; while there isn&amp;rsquo;t an active transaction, the callback will be executed immediately.</source>
          <target state="translated">如果在没有活动事务的情况下调用 &lt;code&gt;on_commit()&lt;/code&gt; ，则回调将立即执行。</target>
        </trans-unit>
        <trans-unit id="fd4a96e10fe18bc75c5654babe72785efc64e7dd" translate="yes" xml:space="preserve">
          <source>If you call &lt;code&gt;select_template(['story_253_detail.html', 'story_detail.html'])&lt;/code&gt;, here&amp;rsquo;s what Django will look for:</source>
          <target state="translated">如果调用 &lt;code&gt;select_template(['story_253_detail.html', 'story_detail.html'])&lt;/code&gt; ，则Django将查找以下内容：</target>
        </trans-unit>
        <trans-unit id="b2232cc0a9efa6073693abc788397e1cd49fb07c" translate="yes" xml:space="preserve">
          <source>If you can&amp;rsquo;t find the solution to your problem here then participate in the community! You can:</source>
          <target state="translated">如果您在这里找不到问题的解决方案，请加入社区！您可以：</target>
        </trans-unit>
        <trans-unit id="f9c5827d1b1d34ede00df19d4fc1cff6b7b1859a" translate="yes" xml:space="preserve">
          <source>If you can&amp;rsquo;t use mod_wsgi for some reason, fear not: Django supports many other deployment options. One is &lt;a href=&quot;../howto/deployment/wsgi/uwsgi&quot;&gt;uWSGI&lt;/a&gt;; it works very well with &lt;a href=&quot;https://nginx.org/&quot;&gt;nginx&lt;/a&gt;. Additionally, Django follows the WSGI spec (&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;), which allows it to run on a variety of server platforms.</source>
          <target state="translated">如果由于某种原因不能使用mod_wsgi，请不要担心：Django支持许多其他部署选项。一种是&lt;a href=&quot;../howto/deployment/wsgi/uwsgi&quot;&gt;uWSGI&lt;/a&gt; ; 它与&lt;a href=&quot;https://nginx.org/&quot;&gt;nginx一起&lt;/a&gt;很好地工作。此外，Django遵循WSGI规范（&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;），该规范使其可以在各种服务器平台上运行。</target>
        </trans-unit>
        <trans-unit id="714e0fc374856568ae969db6c05be8f214cc209c" translate="yes" xml:space="preserve">
          <source>If you catch exceptions raised by raw SQL queries, Django&amp;rsquo;s behavior is unspecified and database-dependent.</source>
          <target state="translated">如果您捕获原始SQL查询引发的异常，则Django的行为是未指定的且与数据库有关。</target>
        </trans-unit>
        <trans-unit id="94e38667622f6c2c7156cdc76fe9c7801210a45e" translate="yes" xml:space="preserve">
          <source>If you customized the Python or OSGeo4W installation directories, then you will need to modify the &lt;code&gt;OSGEO4W_ROOT&lt;/code&gt; and/or &lt;code&gt;PYTHON_ROOT&lt;/code&gt; variables accordingly.</source>
          <target state="translated">如果定制了Python或OSGeo4W安装目录，则需要相应地修改 &lt;code&gt;OSGEO4W_ROOT&lt;/code&gt; 和/或 &lt;code&gt;PYTHON_ROOT&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="daa850f3332eec5c502db816abab6725f3877956" translate="yes" xml:space="preserve">
          <source>If you decide not to loop over the radio buttons &amp;ndash; e.g., if your template includes &lt;code&gt;{{ myform.beatles }}&lt;/code&gt; &amp;ndash; they&amp;rsquo;ll be output in a &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; with &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; tags, as above.</source>
          <target state="translated">如果您决定不循环显示单选按钮（例如，如果模板包含 &lt;code&gt;{{ myform.beatles }}&lt;/code&gt; ，则它们将以带有 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 标记的 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; 形式输出，如上所述。</target>
        </trans-unit>
        <trans-unit id="6e464f5ba0eea9891fc2679642fe2eb1b677c058" translate="yes" xml:space="preserve">
          <source>If you decide to use the latest development version of Django, you&amp;rsquo;ll want to pay close attention to &lt;a href=&quot;https://code.djangoproject.com/timeline&quot;&gt;the development timeline&lt;/a&gt;, and you&amp;rsquo;ll want to keep an eye on the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/releases/index/#development-release-notes&quot;&gt;release notes for the upcoming release&lt;/a&gt;. This will help you stay on top of any new features you might want to use, as well as any changes you&amp;rsquo;ll need to make to your code when updating your copy of Django. (For stable releases, any necessary changes are documented in the release notes.)</source>
          <target state="translated">如果您决定使用Django的最新开发版本，则需要密切注意&lt;a href=&quot;https://code.djangoproject.com/timeline&quot;&gt;开发时间表&lt;/a&gt;，并且要留意&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/releases/index/#development-release-notes&quot;&gt;即将发布&lt;/a&gt;的发行说明。这将帮助您掌握可能要使用的所有新功能，以及在更新Django副本时需要对代码进行的任何更改。（对于稳定版本，任何必要的更改都记录在发行说明中。）</target>
        </trans-unit>
        <trans-unit id="ad704302a2e0f4e5bbd68ed3a827973dea658d2e" translate="yes" xml:space="preserve">
          <source>If you define a custom &lt;a href=&quot;#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt; setting, you can mark the language names as translation strings using the &lt;a href=&quot;utils#django.utils.translation.gettext_lazy&quot;&gt;&lt;code&gt;gettext_lazy()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">如果定义了自定义&lt;a href=&quot;#std:setting-LANGUAGES&quot;&gt; &lt;code&gt;LANGUAGES&lt;/code&gt; &lt;/a&gt;设置，则可以使用&lt;a href=&quot;utils#django.utils.translation.gettext_lazy&quot;&gt; &lt;code&gt;gettext_lazy()&lt;/code&gt; &lt;/a&gt;函数将语言名称标记为翻译字符串。</target>
        </trans-unit>
        <trans-unit id="b08ee922d63ba491bb2cdb4cdfbeae244906b41e" translate="yes" xml:space="preserve">
          <source>If you define a custom &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt; setting, as explained in the previous bullet, you can mark the language names as translation strings &amp;ndash; but use &lt;a href=&quot;../../ref/utils#django.utils.translation.gettext_lazy&quot;&gt;&lt;code&gt;gettext_lazy()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../../ref/utils#django.utils.translation.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; to avoid a circular import.</source>
          <target state="translated">如果您定义了自定义&lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt; &lt;code&gt;LANGUAGES&lt;/code&gt; &lt;/a&gt;设置（如上一个项目符号中所述），则可以将语言名称标记为翻译字符串-但使用&lt;a href=&quot;../../ref/utils#django.utils.translation.gettext_lazy&quot;&gt; &lt;code&gt;gettext_lazy()&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;../../ref/utils#django.utils.translation.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;可以避免循环导入。</target>
        </trans-unit>
        <trans-unit id="fcb6c3e1edc1b97b11ed2b6af3ff6371f63271e0" translate="yes" xml:space="preserve">
          <source>If you define the &lt;code&gt;Meta.model&lt;/code&gt; attribute on a &lt;a href=&quot;../../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt;, you must also define the &lt;code&gt;Meta.fields&lt;/code&gt; attribute (or the &lt;code&gt;Meta.exclude&lt;/code&gt; attribute). However, &lt;code&gt;ModelAdmin&lt;/code&gt; ignores this value, overriding it with the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_editable&quot;&gt;&lt;code&gt;ModelAdmin.list_editable&lt;/code&gt;&lt;/a&gt; attribute. The easiest solution is to omit the &lt;code&gt;Meta.model&lt;/code&gt; attribute, since &lt;code&gt;ModelAdmin&lt;/code&gt; will provide the correct model to use.</source>
          <target state="translated">如果定义 &lt;code&gt;Meta.model&lt;/code&gt; 上一个属性&lt;a href=&quot;../../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt;，你还必须定义 &lt;code&gt;Meta.fields&lt;/code&gt; 属性（或 &lt;code&gt;Meta.exclude&lt;/code&gt; 属性）。但是， &lt;code&gt;ModelAdmin&lt;/code&gt; 会忽略此值，并使用&lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_editable&quot;&gt; &lt;code&gt;ModelAdmin.list_editable&lt;/code&gt; &lt;/a&gt;属性覆盖它。最简单的解决方案是忽略 &lt;code&gt;Meta.model&lt;/code&gt; 属性，因为 &lt;code&gt;ModelAdmin&lt;/code&gt; 将提供要使用的正确模型。</target>
        </trans-unit>
        <trans-unit id="485fe478429ed2c9c1a4f227e8e46539022690b8" translate="yes" xml:space="preserve">
          <source>If you define the &lt;code&gt;Meta.model&lt;/code&gt; attribute on a &lt;a href=&quot;../../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt;, you must also define the &lt;code&gt;Meta.fields&lt;/code&gt; attribute (or the &lt;code&gt;Meta.exclude&lt;/code&gt; attribute). However, since the admin has its own way of defining fields, the &lt;code&gt;Meta.fields&lt;/code&gt; attribute will be ignored.</source>
          <target state="translated">如果定义 &lt;code&gt;Meta.model&lt;/code&gt; 上一个属性&lt;a href=&quot;../../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt;，你还必须定义 &lt;code&gt;Meta.fields&lt;/code&gt; 属性（或 &lt;code&gt;Meta.exclude&lt;/code&gt; 属性）。但是，由于管理员具有自己定义字段的方式，因此 &lt;code&gt;Meta.fields&lt;/code&gt; 属性将被忽略。</target>
        </trans-unit>
        <trans-unit id="45386bfd1f22aa5a94eb25eb7ab85058786a5cc9" translate="yes" xml:space="preserve">
          <source>If you define your own test runner class and point &lt;a href=&quot;../../ref/settings#std:setting-TEST_RUNNER&quot;&gt;&lt;code&gt;TEST_RUNNER&lt;/code&gt;&lt;/a&gt; at that class, Django will execute your test runner whenever you run &lt;code&gt;./manage.py test&lt;/code&gt;. In this way, it is possible to use any test framework that can be executed from Python code, or to modify the Django test execution process to satisfy whatever testing requirements you may have.</source>
          <target state="translated">如果您定义自己的测试运行程序类，并将&lt;a href=&quot;../../ref/settings#std:setting-TEST_RUNNER&quot;&gt; &lt;code&gt;TEST_RUNNER&lt;/code&gt; &lt;/a&gt;指向该类，那么只要您运行 &lt;code&gt;./manage.py test&lt;/code&gt; ，Django就会执行您的测试运行程序。这样，可以使用可以从Python代码执行的任何测试框架，或者修改Django测试执行过程以满足您可能具有的任何测试要求。</target>
        </trans-unit>
        <trans-unit id="ea90d73bc6981a1948260ffdf5034a68bee6dab3" translate="yes" xml:space="preserve">
          <source>If you delete a field from a model instance, accessing it again reloads the value from the database:</source>
          <target state="translated">如果从模型实例中删除一个字段,再次访问它就会从数据库中重新加载该值。</target>
        </trans-unit>
        <trans-unit id="cff220c390a9ab95545f838c9087be24651f1351" translate="yes" xml:space="preserve">
          <source>If you delete a reporter, his articles will be deleted (assuming that the ForeignKey was defined with &lt;a href=&quot;../../../ref/models/fields#django.db.models.ForeignKey.on_delete&quot;&gt;&lt;code&gt;django.db.models.ForeignKey.on_delete&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;CASCADE&lt;/code&gt;, which is the default):</source>
          <target state="translated">如果删除记者，则他的文章将被删除（假设ForeignKey是在&lt;a href=&quot;../../../ref/models/fields#django.db.models.ForeignKey.on_delete&quot;&gt; &lt;code&gt;django.db.models.ForeignKey.on_delete&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;CASCADE&lt;/code&gt; 的情况下定义的，这是默认设置）：</target>
        </trans-unit>
        <trans-unit id="d6c2e53ecc92c0f84dc913ba54c33563aaf304cc" translate="yes" xml:space="preserve">
          <source>If you detect errors in multiple fields during &lt;code&gt;Model.clean()&lt;/code&gt;, you can also pass a dictionary mapping field names to errors:</source>
          <target state="translated">如果在 &lt;code&gt;Model.clean()&lt;/code&gt; 期间在多个字段中检测到错误，则还可以将字典映射字段名称传递给错误：</target>
        </trans-unit>
        <trans-unit id="48e44cf0802dee16054df73fe1871ad99f86e145" translate="yes" xml:space="preserve">
          <source>If you detect multiple errors during a cleaning method and wish to signal all of them to the form submitter, it is possible to pass a list of errors to the &lt;code&gt;ValidationError&lt;/code&gt; constructor.</source>
          <target state="translated">如果您在清除方法期间检测到多个错误，并希望将所有错误发送给表单提交者，则可以将错误列表传递给 &lt;code&gt;ValidationError&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="4cb2bdf9479ffe7ea003c7007bb350d20e0ee892" translate="yes" xml:space="preserve">
          <source>If you disabled it, which is not recommended, you can use &lt;a href=&quot;#django.views.decorators.csrf.csrf_protect&quot;&gt;&lt;code&gt;csrf_protect()&lt;/code&gt;&lt;/a&gt; on particular views you want to protect (see below).</source>
          <target state="translated">如果不建议禁用它，则可以在要保护的特定视图上使用&lt;a href=&quot;#django.views.decorators.csrf.csrf_protect&quot;&gt; &lt;code&gt;csrf_protect()&lt;/code&gt; &lt;/a&gt;（请参见下文）。</target>
        </trans-unit>
        <trans-unit id="2479d1d20a26faec2996d634b0774780be84066c" translate="yes" xml:space="preserve">
          <source>If you do either of the first two steps, keep an eye out for parts of the documentation marked &lt;strong&gt;new in development version&lt;/strong&gt;. That phrase flags features that are only available in development versions of Django, and they likely won&amp;rsquo;t work with an official release.</source>
          <target state="translated">如果您执行前两个步骤中的任何一个，请注意文档中标&lt;strong&gt;有&amp;ldquo;开发版本&amp;rdquo;中&amp;ldquo;新&amp;rdquo;的&lt;/strong&gt;部分。该短语标记仅在Django开发版本中可用的功能，并且它们可能不适用于正式版本。</target>
        </trans-unit>
        <trans-unit id="2aaa0c487bb4c6a6eabbf43dd80c991c63a022d7" translate="yes" xml:space="preserve">
          <source>If you do not specify any app, all apps will be checked.</source>
          <target state="translated">如果你没有指定任何应用程序,所有的应用程序将被检查。</target>
        </trans-unit>
        <trans-unit id="4141223977e7c136210c586bc61b2fd0accffd3c" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;a href=&quot;#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt; argument for the &lt;code&gt;OneToOneField&lt;/code&gt;, Django will use the lowercase name of the current model as default value.</source>
          <target state="translated">如果您未为 &lt;code&gt;OneToOneField&lt;/code&gt; 指定&lt;a href=&quot;#django.db.models.ForeignKey.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt;参数，则Django将使用当前模型的小写名称作为默认值。</target>
        </trans-unit>
        <trans-unit id="d8109cdfe40c6ccae39110a25cad8a7f109000c4" translate="yes" xml:space="preserve">
          <source>If you do not want symmetry in many-to-many relationships with &lt;code&gt;self&lt;/code&gt;, set &lt;a href=&quot;#django.db.models.ManyToManyField.symmetrical&quot;&gt;&lt;code&gt;symmetrical&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt;. This will force Django to add the descriptor for the reverse relationship, allowing &lt;a href=&quot;#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; relationships to be non-symmetrical.</source>
          <target state="translated">如果您不希望与 &lt;code&gt;self&lt;/code&gt; 的多对多关系具有&lt;a href=&quot;#django.db.models.ManyToManyField.symmetrical&quot;&gt; &lt;code&gt;symmetrical&lt;/code&gt; &lt;/a&gt;，请将&amp;ldquo; 对称性&amp;rdquo;设置为 &lt;code&gt;False&lt;/code&gt; 。这将迫使Django为反向关系添加描述符，从而允许&lt;a href=&quot;#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;关系是非对称的。</target>
        </trans-unit>
        <trans-unit id="d7c82087cc8221fab70b35945b3651dea07d149a" translate="yes" xml:space="preserve">
          <source>If you do not want to wait for the currently running test to finish, you can press &lt;code&gt;Ctrl-C&lt;/code&gt; a second time and the test run will halt immediately, but not gracefully. No details of the tests run before the interruption will be reported, and any test databases created by the run will not be destroyed.</source>
          <target state="translated">如果您不想等待当前运行的测试完成，则可以再次按 &lt;code&gt;Ctrl-C&lt;/code&gt; ，测试运行将立即停止，但不会优雅地停止。不会报告中断之前运行的测试的详细信息，并且运行所创建的任何测试数据库都不会被破坏。</target>
        </trans-unit>
        <trans-unit id="18efad3241b2dca59f5e6839d85c3fd25968e685" translate="yes" xml:space="preserve">
          <source>If you do not wish for every occurrence of a particular string to have the same signature hash, you can use the optional &lt;code&gt;salt&lt;/code&gt; argument to the &lt;code&gt;Signer&lt;/code&gt; class. Using a salt will seed the signing hash function with both the salt and your &lt;a href=&quot;../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果您不希望特定字符串的每次出现都具有相同的签名哈希，则可以对 &lt;code&gt;Signer&lt;/code&gt; 类使用可选的 &lt;code&gt;salt&lt;/code&gt; 参数。使用盐将使盐和您的&lt;a href=&quot;../ref/settings#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; &lt;/a&gt;都成为签名哈希函数的种子：</target>
        </trans-unit>
        <trans-unit id="0bfd8f75b46ff74579ca2af7a7939f691c4a818d" translate="yes" xml:space="preserve">
          <source>If you do override this method, you must return the value of the attribute at the end. You should also update the model&amp;rsquo;s attribute if you make any changes to the value so that code holding references to the model will always see the correct value.</source>
          <target state="translated">如果您重写此方法，则必须在最后返回属性的值。如果您对该值进行任何更改，还应该更新模型的属性，以使保存对模型的引用的代码将始终看到正确的值。</target>
        </trans-unit>
        <trans-unit id="3bc531fc3e6fe0dda101c4233233899fb5df0175" translate="yes" xml:space="preserve">
          <source>If you do want to allow Django to manage the table&amp;rsquo;s lifecycle, you&amp;rsquo;ll need to change the &lt;a href=&quot;../ref/models/options#django.db.models.Options.managed&quot;&gt;&lt;code&gt;managed&lt;/code&gt;&lt;/a&gt; option above to &lt;code&gt;True&lt;/code&gt; (or remove it because &lt;code&gt;True&lt;/code&gt; is its default value).</source>
          <target state="translated">如果确实要允许Django管理表的生命周期，则需要将上述&lt;a href=&quot;../ref/models/options#django.db.models.Options.managed&quot;&gt; &lt;code&gt;managed&lt;/code&gt; &lt;/a&gt;选项更改为 &lt;code&gt;True&lt;/code&gt; （或将其删除，因为 &lt;code&gt;True&lt;/code&gt; 是其默认值）。</target>
        </trans-unit>
        <trans-unit id="94bbf9a3b61ed7ba431cfe4c7c55a2f5b58d406a" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t have &lt;code&gt;pip&lt;/code&gt;, follow the &lt;a href=&quot;../../../../topics/install#installing-official-release&quot;&gt;installation instructions&lt;/a&gt; to install it.</source>
          <target state="translated">如果没有 &lt;code&gt;pip&lt;/code&gt; ，请按照&lt;a href=&quot;../../../../topics/install#installing-official-release&quot;&gt;安装说明&lt;/a&gt;进行安装。</target>
        </trans-unit>
        <trans-unit id="83b4541d75cf80e630fb9cb0eae0f6dcce396113" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t have access to the request object, you can use the &lt;code&gt;get_current()&lt;/code&gt; method of the &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; model&amp;rsquo;s manager. You should then ensure that your settings file does contain the &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt;&lt;code&gt;SITE_ID&lt;/code&gt;&lt;/a&gt; setting. This example is equivalent to the previous one:</source>
          <target state="translated">如果您无权访问请求对象，则可以使用&lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt;模型管理器的 &lt;code&gt;get_current()&lt;/code&gt; 方法。然后，您应确保您的设置文件中确实包含&lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt; &lt;code&gt;SITE_ID&lt;/code&gt; &lt;/a&gt;设置。此示例等效于上一个示例：</target>
        </trans-unit>
        <trans-unit id="6e6f1ebd340eb9d605be9c4db45ebb236fd2e050" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t have the &lt;code&gt;gettext&lt;/code&gt; utilities installed, &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;makemessages&lt;/code&gt;&lt;/a&gt; will create empty files. If that&amp;rsquo;s the case, either install the &lt;code&gt;gettext&lt;/code&gt; utilities or copy the English message file (&lt;code&gt;locale/en/LC_MESSAGES/django.po&lt;/code&gt;) if available and use it as a starting point, which is an empty translation file.</source>
          <target state="translated">如果没有安装 &lt;code&gt;gettext&lt;/code&gt; 实用程序，&lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt; &lt;code&gt;makemessages&lt;/code&gt; &lt;/a&gt;将创建空文件。在这种情况下，请安装 &lt;code&gt;gettext&lt;/code&gt; 实用程序或复制英文消息文件（ &lt;code&gt;locale/en/LC_MESSAGES/django.po&lt;/code&gt; ）（如果有）并将其用作起点，它是一个空的翻译文件。</target>
        </trans-unit>
        <trans-unit id="4f1d2a7a739cbcb4a30351e90054953707bb1564" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t include the &lt;a href=&quot;#django.contrib.auth.models.PermissionsMixin&quot;&gt;&lt;code&gt;PermissionsMixin&lt;/code&gt;&lt;/a&gt;, you must ensure you don&amp;rsquo;t invoke the permissions methods on &lt;code&gt;ModelBackend&lt;/code&gt;. &lt;code&gt;ModelBackend&lt;/code&gt; assumes that certain fields are available on your user model. If your user model doesn&amp;rsquo;t provide those fields, you&amp;rsquo;ll receive database errors when you check permissions.</source>
          <target state="translated">如果不包括&lt;a href=&quot;#django.contrib.auth.models.PermissionsMixin&quot;&gt; &lt;code&gt;PermissionsMixin&lt;/code&gt; &lt;/a&gt;，则必须确保不调用 &lt;code&gt;ModelBackend&lt;/code&gt; 上的权限方法。 &lt;code&gt;ModelBackend&lt;/code&gt; 假定您的用户模型上某些字段可用。如果您的用户模型不提供这些字段，则在检查权限时会收到数据库错误。</target>
        </trans-unit>
        <trans-unit id="35899ce1414f3555035a9788cf172f76ca6773ef" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t like the long &lt;code&gt;gettext_lazy&lt;/code&gt; name, you can alias it as &lt;code&gt;_&lt;/code&gt; (underscore), like so:</source>
          <target state="translated">如果您不喜欢长的 &lt;code&gt;gettext_lazy&lt;/code&gt; 名称，则可以将其别名为 &lt;code&gt;_&lt;/code&gt; （下划线），如下所示：</target>
        </trans-unit>
        <trans-unit id="e7c2f2ae002997f7ed67a2217c27f8708bf96ef6" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t need to have the human-readable names translated, you can have them inferred from the member name (replacing underscores with spaces and using title-case):</source>
          <target state="translated">如果不需要翻译人类可读的名称，则可以从成员名称中推断出它们（用空格替换下划线并使用标题大小写）：</target>
        </trans-unit>
        <trans-unit id="8611658ee88ea0ad3dcc2ed7a1a97af6dae4a361" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t pass any values to &lt;code&gt;values_list()&lt;/code&gt;, it will return all the fields in the model, in the order they were declared.</source>
          <target state="translated">如果您没有将任何值传递给 &lt;code&gt;values_list()&lt;/code&gt; ，它将按照声明它们的顺序返回模型中的所有字段。</target>
        </trans-unit>
        <trans-unit id="857e12793ad461caf04fff1ba581da785c3a5bcb" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t provide a lookup type &amp;ndash; that is, if your keyword argument doesn&amp;rsquo;t contain a double underscore &amp;ndash; the lookup type is assumed to be &lt;code&gt;exact&lt;/code&gt;.</source>
          <target state="translated">如果您不提供查找类型（即，如果您的关键字参数不包含双下划线），则该查找类型被认为是 &lt;code&gt;exact&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b49754202789d5dcf7dd5093a036116cfc0b7e7b" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t provide a value for &lt;code&gt;content_type&lt;/code&gt;, the values in &lt;code&gt;data&lt;/code&gt; will be transmitted with a content type of &lt;em&gt;multipart/form-data&lt;/em&gt;. In this case, the key-value pairs in &lt;code&gt;data&lt;/code&gt; will be encoded as a multipart message and used to create the POST data payload.</source>
          <target state="translated">如果您不为 &lt;code&gt;content_type&lt;/code&gt; 提供值，则 &lt;code&gt;data&lt;/code&gt; 的值将以&lt;em&gt;multipart / form-data&lt;/em&gt;的内容类型&lt;em&gt;传输&lt;/em&gt;。在这种情况下，在键-值对 &lt;code&gt;data&lt;/code&gt; 将被编码为多部分消息并用于创建POST数据有效载荷。</target>
        </trans-unit>
        <trans-unit id="dd179816ea4797c0c27e26002186e53c76cd44e3" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t set &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; and don&amp;rsquo;t call &lt;code&gt;configure()&lt;/code&gt;, Django will raise an &lt;code&gt;ImportError&lt;/code&gt; exception the first time a setting is accessed.</source>
          <target state="translated">如果您未设置 &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; 且未调用 &lt;code&gt;configure()&lt;/code&gt; ，则Django将在首次访问设置时引发 &lt;code&gt;ImportError&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="6d28696ece852d234602878e925455bc5844a029" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t set &lt;code&gt;list_display&lt;/code&gt;, the admin site will display a single column that displays the &lt;code&gt;__str__()&lt;/code&gt; representation of each object.</source>
          <target state="translated">如果您未设置 &lt;code&gt;list_display&lt;/code&gt; ，则管理站点将显示单个列，该列显示每个对象的 &lt;code&gt;__str__()&lt;/code&gt; 表示形式。</target>
        </trans-unit>
        <trans-unit id="a163d2bcd9e6db7c5ea4d04d3672fd598949d73a" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t specify &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt;&lt;code&gt;primary_key=True&lt;/code&gt;&lt;/a&gt; for any fields in your model, Django will automatically add an &lt;a href=&quot;../../ref/models/fields#django.db.models.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt; to hold the primary key, so you don&amp;rsquo;t need to set &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt;&lt;code&gt;primary_key=True&lt;/code&gt;&lt;/a&gt; on any of your fields unless you want to override the default primary-key behavior. For more, see &lt;a href=&quot;#automatic-primary-key-fields&quot;&gt;Automatic primary key fields&lt;/a&gt;.</source>
          <target state="translated">如果您未为模型中的任何字段指定&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt; &lt;code&gt;primary_key=True&lt;/code&gt; &lt;/a&gt;，则Django会自动添加一个&lt;a href=&quot;../../ref/models/fields#django.db.models.IntegerField&quot;&gt; &lt;code&gt;IntegerField&lt;/code&gt; &lt;/a&gt;来保存主键，因此您无需在任何字段上设置&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt; &lt;code&gt;primary_key=True&lt;/code&gt; &lt;/a&gt;，除非您想要覆盖默认的主键行为。有关更多信息，请参见&lt;a href=&quot;#automatic-primary-key-fields&quot;&gt;自动主键字段&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="590c6fe5a79ddb6a0fb543209eff8fe3de9cd579" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t specify &lt;code&gt;primary_key=True&lt;/code&gt; for any field in your model, Django will automatically add an &lt;a href=&quot;#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt; to hold the primary key, so you don&amp;rsquo;t need to set &lt;code&gt;primary_key=True&lt;/code&gt; on any of your fields unless you want to override the default primary-key behavior. For more, see &lt;a href=&quot;../../topics/db/models#automatic-primary-key-fields&quot;&gt;Automatic primary key fields&lt;/a&gt;.</source>
          <target state="translated">如果您未为模型中的任何字段指定 &lt;code&gt;primary_key=True&lt;/code&gt; ，则Django会自动添加一个&lt;a href=&quot;#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; &lt;/a&gt;来保存主键，因此除非您要覆盖该字段，否则无需在任何字段上设置 &lt;code&gt;primary_key=True&lt;/code&gt; 。默认的主键行为。有关更多信息，请参见&lt;a href=&quot;../../topics/db/models#automatic-primary-key-fields&quot;&gt;自动主键字段&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="04c0cebe040a5a95be05e16a67b332d448a4cdf2" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t specify &lt;code&gt;using&lt;/code&gt;, the &lt;code&gt;save()&lt;/code&gt; method will save into the default database allocated by the routers.</source>
          <target state="translated">如果未指定 &lt;code&gt;using&lt;/code&gt; ，则 &lt;code&gt;save()&lt;/code&gt; 方法将保存到路由器分配的默认数据库中。</target>
        </trans-unit>
        <trans-unit id="538f16b988998147ff60490597be28bc48eafdda" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t specify a &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt; attribute for a field in an abstract base class, the default reverse name will be the name of the child class followed by &lt;code&gt;'_set'&lt;/code&gt;, just as it normally would be if you&amp;rsquo;d declared the field directly on the child class. For example, in the above code, if the &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt; attribute was omitted, the reverse name for the &lt;code&gt;m2m&lt;/code&gt; field would be &lt;code&gt;childa_set&lt;/code&gt; in the &lt;code&gt;ChildA&lt;/code&gt; case and &lt;code&gt;childb_set&lt;/code&gt; for the &lt;code&gt;ChildB&lt;/code&gt; field.</source>
          <target state="translated">如果未在抽象基类中为字段指定&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt;属性，则默认的反向名称将是子类的名称，后跟 &lt;code&gt;'_set'&lt;/code&gt; ，就像通常直接声明该字段时一样在儿童班上。例如，在上面的代码中，如果&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt;省略属性，对于反向名称 &lt;code&gt;m2m&lt;/code&gt; 字段将是 &lt;code&gt;childa_set&lt;/code&gt; 在 &lt;code&gt;ChildA&lt;/code&gt; 壳体和 &lt;code&gt;childb_set&lt;/code&gt; 为 &lt;code&gt;ChildB&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="d339100c909e90a9e5e2bd7aa909352403fa7c4f" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t specify an explicit &lt;code&gt;through&lt;/code&gt; model, there is still an implicit &lt;code&gt;through&lt;/code&gt; model class you can use to directly access the table created to hold the association. It has three fields to link the models.</source>
          <target state="translated">如果未指定显式的 &lt;code&gt;through&lt;/code&gt; 模型，则仍然存在隐式的 &lt;code&gt;through&lt;/code&gt; 模型类，可用于直接访问为保存关联而创建的表。它具有三个用于链接模型的字段。</target>
        </trans-unit>
        <trans-unit id="666775cf1efa55d8c53fada8a23701a9987dd988" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t specify any model managers on a proxy model, it inherits the managers from its model parents. If you define a manager on the proxy model, it will become the default, although any managers defined on the parent classes will still be available.</source>
          <target state="translated">如果您未在代理模型上指定任何模型管理器，它将从其模型父级继承这些管理器。如果在代理模型上定义管理器，尽管在父类上定义的任何管理器仍然可用，它将成为默认模型。</target>
        </trans-unit>
        <trans-unit id="2831dc2c926cb081c9cc4a7a2bc6243fa61db6a9" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t specify routing directions for the database cache model, the cache backend will use the &lt;code&gt;default&lt;/code&gt; database.</source>
          <target state="translated">如果您没有为数据库缓存模型指定路由方向，则缓存后端将使用 &lt;code&gt;default&lt;/code&gt; 数据库。</target>
        </trans-unit>
        <trans-unit id="fd4f5afea03a0462ac45abaffd1965ddce74ce84" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want any ordering to be applied to a query, not even the default ordering, call &lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt; with no parameters.</source>
          <target state="translated">如果您不希望对查询应用任何排序，甚至不希望使用默认排序，请调用不带参数的&lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt; &lt;code&gt;order_by()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02f361b8fc537e98dc07890f9bf542dd0f12b07f" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want data to be auto-escaped, on a per-site, per-template level or per-variable level, you can turn it off in several ways.</source>
          <target state="translated">如果您不想在每个站点，每个模板级别或每个变量级别自动转义数据，则可以通过多种方式将其关闭。</target>
        </trans-unit>
        <trans-unit id="10b519cb1d07a83a7e8a3c4a687450cc5ea4bc3e" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want every application to be synchronized onto a particular database, you can define a &lt;a href=&quot;#topics-db-multi-db-routing&quot;&gt;database router&lt;/a&gt; that implements a policy constraining the availability of particular models.</source>
          <target state="translated">如果您不希望每个应用程序都同步到一个特定的数据库中，则可以定义一个&lt;a href=&quot;#topics-db-multi-db-routing&quot;&gt;数据库路由器&lt;/a&gt;，该路由器实施一个限制特定模型可用性的策略。</target>
        </trans-unit>
        <trans-unit id="35c4fdb0cd2c686ba39701ab3494c7c292bcb631" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want to configure logging at all (or you want to manually configure logging using your own approach), you can set &lt;a href=&quot;../ref/settings#std:setting-LOGGING_CONFIG&quot;&gt;&lt;code&gt;LOGGING_CONFIG&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;None&lt;/code&gt;. This will disable the configuration process for &lt;a href=&quot;#default-logging-configuration&quot;&gt;Django&amp;rsquo;s default logging&lt;/a&gt;. Here&amp;rsquo;s an example that disables Django&amp;rsquo;s logging configuration and then manually configures logging:</source>
          <target state="translated">如果您根本不想配置日志记录（或者您想使用自己的方法手动配置日志记录），可以将&lt;a href=&quot;../ref/settings#std:setting-LOGGING_CONFIG&quot;&gt; &lt;code&gt;LOGGING_CONFIG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;None&lt;/code&gt; 。这将禁用&lt;a href=&quot;#default-logging-configuration&quot;&gt;Django默认日志记录&lt;/a&gt;的配置过程。这是一个禁用Django的日志记录配置，然后手动配置日志记录的示例：</target>
        </trans-unit>
        <trans-unit id="77c86f64e5416c16d57ada9152596773e6ea1cc7" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want to use &lt;code&gt;icontains&lt;/code&gt; as the lookup, you can use any lookup by appending it the field. For example, you could use &lt;a href=&quot;../../models/querysets#std:fieldlookup-exact&quot;&gt;&lt;code&gt;exact&lt;/code&gt;&lt;/a&gt; by setting &lt;code&gt;search_fields&lt;/code&gt; to &lt;code&gt;['first_name__exact']&lt;/code&gt;.</source>
          <target state="translated">如果您不想使用 &lt;code&gt;icontains&lt;/code&gt; 作为查找，则可以通过将其附加到字段中来使用任何查找。例如，可以通过将 &lt;code&gt;search_fields&lt;/code&gt; 设置为 &lt;code&gt;['first_name__exact']&lt;/code&gt; 来使用&lt;a href=&quot;../../models/querysets#std:fieldlookup-exact&quot;&gt; &lt;code&gt;exact&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="31395295db9a85690ee46840f48259811129865d" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want to use Python&amp;rsquo;s dictConfig format to configure your logger, you can specify your own configuration scheme.</source>
          <target state="translated">如果您不想使用Python的dictConfig格式配置记录器，则可以指定自己的配置方案。</target>
        </trans-unit>
        <trans-unit id="515cdb51845c22c1192ff3cb9088b0aae43b5f38" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want to use messages, you can remove &lt;code&gt;'django.contrib.messages'&lt;/code&gt; from your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;MessageMiddleware&lt;/code&gt; line from &lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt;, and the &lt;code&gt;messages&lt;/code&gt; context processor from &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您不想使用消息，则可以从&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 中&lt;/a&gt;删除 &lt;code&gt;'django.contrib.messages'&lt;/code&gt; ，从&lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; 中&lt;/a&gt;删除 &lt;code&gt;MessageMiddleware&lt;/code&gt; 行，并从&lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; 中&lt;/a&gt;删除 &lt;code&gt;messages&lt;/code&gt; 上下文处理器。</target>
        </trans-unit>
        <trans-unit id="9f7e47131b63bc56e18f6396512e77f9352c9650" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want to use sessions, you might as well remove the &lt;code&gt;SessionMiddleware&lt;/code&gt; line from &lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;'django.contrib.sessions'&lt;/code&gt; from your &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;. It&amp;rsquo;ll save you a small bit of overhead.</source>
          <target state="translated">如果您不想使用会话，则最好从&lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; 中&lt;/a&gt;删除 &lt;code&gt;SessionMiddleware&lt;/code&gt; 行，并从&lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 中&lt;/a&gt;删除 &lt;code&gt;'django.contrib.sessions'&lt;/code&gt; 。这样可以节省您一点点的开销。</target>
        </trans-unit>
        <trans-unit id="9b1a1786e7b1cf25c6aacb2f5b78f4da284e5c48" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want to use the built-in views, but want the convenience of not having to write forms for this functionality, the authentication system provides several built-in forms located in &lt;a href=&quot;#module-django.contrib.auth.forms&quot;&gt;&lt;code&gt;django.contrib.auth.forms&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果您不想使用内置视图，但又希望不必为此功能编写表单，那么身份验证系统会提供位于&lt;a href=&quot;#module-django.contrib.auth.forms&quot;&gt; &lt;code&gt;django.contrib.auth.forms&lt;/code&gt; 中的&lt;/a&gt;多个内置表单：</target>
        </trans-unit>
        <trans-unit id="5c568e3de4c1c7c6a2712e65c1fa4112cf06d36a" translate="yes" xml:space="preserve">
          <source>If you downloaded the &lt;a href=&quot;#worldborders&quot;&gt;World Borders&lt;/a&gt; data earlier in the tutorial, then you can determine its path using Python&amp;rsquo;s built-in &lt;code&gt;os&lt;/code&gt; module:</source>
          <target state="translated">如果您在本教程的前面下载了&lt;a href=&quot;#worldborders&quot;&gt;World Borders&lt;/a&gt;数据，则可以使用Python的内置 &lt;code&gt;os&lt;/code&gt; 模块确定其路径：</target>
        </trans-unit>
        <trans-unit id="455d07668f86b3453aef324fdb20b370ef36fb11" translate="yes" xml:space="preserve">
          <source>If you enable &lt;code&gt;redirect_authenticated_user&lt;/code&gt;, other websites will be able to determine if their visitors are authenticated on your site by requesting redirect URLs to image files on your website. To avoid this &amp;ldquo;&lt;a href=&quot;https://robinlinus.github.io/socialmedia-leak/&quot;&gt;social media fingerprinting&lt;/a&gt;&amp;rdquo; information leakage, host all images and your favicon on a separate domain.</source>
          <target state="translated">如果启用 &lt;code&gt;redirect_authenticated_user&lt;/code&gt; ，则其他网站将能够通过请求重定向URL到您网站上图像文件的方式来确定他们的访问者是否在您的网站上通过了身份验证。为避免这种&amp;ldquo; &lt;a href=&quot;https://robinlinus.github.io/socialmedia-leak/&quot;&gt;社交媒体指纹&lt;/a&gt; &amp;rdquo;信息泄漏，请将所有图像和您的图标保存在单独的域中。</target>
        </trans-unit>
        <trans-unit id="6de81e981c118fcef157137194f59e4a18089f15" translate="yes" xml:space="preserve">
          <source>If you enable the &lt;a href=&quot;../../ref/templates/api#django.template.context_processors.i18n&quot;&gt;&lt;code&gt;django.template.context_processors.i18n&lt;/code&gt;&lt;/a&gt; context processor, then each &lt;code&gt;RequestContext&lt;/code&gt; will have access to &lt;code&gt;LANGUAGES&lt;/code&gt;, &lt;code&gt;LANGUAGE_CODE&lt;/code&gt;, and &lt;code&gt;LANGUAGE_BIDI&lt;/code&gt; as defined above.</source>
          <target state="translated">如果启用&lt;a href=&quot;../../ref/templates/api#django.template.context_processors.i18n&quot;&gt; &lt;code&gt;django.template.context_processors.i18n&lt;/code&gt; &lt;/a&gt;上下文处理器，则每个 &lt;code&gt;RequestContext&lt;/code&gt; 都可以访问如上定义的 &lt;code&gt;LANGUAGES&lt;/code&gt; ， &lt;code&gt;LANGUAGE_CODE&lt;/code&gt; 和 &lt;code&gt;LANGUAGE_BIDI&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="729e00760630570ad607e0e6587465fb4412384e" translate="yes" xml:space="preserve">
          <source>If you enable this and need to send the value of the CSRF token with an AJAX request, your JavaScript must pull the value &lt;a href=&quot;csrf#acquiring-csrf-token-from-html&quot;&gt;from a hidden CSRF token form input&lt;/a&gt; instead of &lt;a href=&quot;csrf#acquiring-csrf-token-from-cookie&quot;&gt;from the cookie&lt;/a&gt;.</source>
          <target state="translated">如果启用此功能，并且需要通过AJAX请求发送CSRF令牌的值，则您的JavaScript必须&lt;a href=&quot;csrf#acquiring-csrf-token-from-html&quot;&gt;从隐藏的CSRF令牌形式输入&lt;/a&gt;而不是&lt;a href=&quot;csrf#acquiring-csrf-token-from-cookie&quot;&gt;cookie中&lt;/a&gt;提取值。</target>
        </trans-unit>
        <trans-unit id="eecda653f4341e8484e3844f08cb3debaa15b75a" translate="yes" xml:space="preserve">
          <source>If you enable this option and there is concurrent access to the async-unsafe parts of Django, you may suffer data loss or corruption. Be very careful and do not use this in production environments.</source>
          <target state="translated">如果你启用了这个选项,并且有并发访问Django的async-unsafe部分,你可能会遭受数据丢失或损坏。要非常小心,不要在生产环境中使用这个选项。</target>
        </trans-unit>
        <trans-unit id="690f4bcf8a157bd61ea9244f015553c0c9c48320" translate="yes" xml:space="preserve">
          <source>If you encounter an error during the installation, your system might be missing a dependency for one or more of the Python packages. Consult the failing package&amp;rsquo;s documentation or search the Web with the error message that you encounter.</source>
          <target state="translated">如果在安装过程中遇到错误，则系统可能缺少对一个或多个Python软件包的依赖关系。请查阅失败的软件包的文档或在网络上搜索遇到的错误消息。</target>
        </trans-unit>
        <trans-unit id="a6da4243a036aa29469a63cceb377bd8e3d4c0cc" translate="yes" xml:space="preserve">
          <source>If you encounter the following error when using &lt;code&gt;LayerMapping&lt;/code&gt; and MySQL:</source>
          <target state="translated">如果在使用 &lt;code&gt;LayerMapping&lt;/code&gt; 和MySQL 时遇到以下错误：</target>
        </trans-unit>
        <trans-unit id="388118dd7f5efca0821c54391ac838c186b2e0db" translate="yes" xml:space="preserve">
          <source>If you encounter this error, most likely your code is comparing these two things:</source>
          <target state="translated">如果你遇到这个错误,很可能是你的代码在比较这两件事。</target>
        </trans-unit>
        <trans-unit id="9980a2e684bd447360258377b3fadc41c30bff5f" translate="yes" xml:space="preserve">
          <source>If you encounter this error, you should fix your code to not call the offending code from an async context; instead, write your code that talks to async-unsafe in its own, synchronous function, and call that using &lt;code&gt;asgiref.sync.async_to_sync&lt;/code&gt;, or any other preferred way of running synchronous code in its own thread.</source>
          <target state="translated">如果遇到此错误，则应修复代码以免从异步上下文中调用有问题的代码。相反，编写您自己的代码，该代码在其自己的同步函数中与async-unsafe对话，然后使用 &lt;code&gt;asgiref.sync.async_to_sync&lt;/code&gt; 或任何其他在其自己的线程中运行同步代码的首选方式来调用该代码。</target>
        </trans-unit>
        <trans-unit id="c318da5e64838ab0635a2445fb6173a140f25b28" translate="yes" xml:space="preserve">
          <source>If you expect a queryset to return one row, you can use &lt;code&gt;get()&lt;/code&gt; without any arguments to return the object for that row:</source>
          <target state="translated">如果希望查询集返回一行，则可以使用不带任何参数的 &lt;code&gt;get()&lt;/code&gt; 返回该行的对象：</target>
        </trans-unit>
        <trans-unit id="b49a74a0b115f2bc1bddecbe1ff4268a349bfe46" translate="yes" xml:space="preserve">
          <source>If you find yourself doing this often, you might consider creating a custom &lt;a href=&quot;../../howto/custom-template-tags#howto-custom-template-tags-inclusion-tags&quot;&gt;inclusion tag&lt;/a&gt;.</source>
          <target state="translated">如果您发现自己经常这样做，则可以考虑创建一个自定义&lt;a href=&quot;../../howto/custom-template-tags#howto-custom-template-tags-inclusion-tags&quot;&gt;包含标签&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="08b548542180a05ddc30c78ed125af341d51e6c9" translate="yes" xml:space="preserve">
          <source>If you find yourself duplicating content in a number of templates, it probably means you should move that content to a &lt;code&gt;{% block %}&lt;/code&gt; in a parent template.</source>
          <target state="translated">如果发现自己在许多模板中都复制了内容，则可能意味着您应将该内容移至父模板中的 &lt;code&gt;{% block %}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed5f5b63170617e447bc7e02390a27114c2912d5" translate="yes" xml:space="preserve">
          <source>If you find yourself needing a response class that Django doesn&amp;rsquo;t provide, you can create it with the help of &lt;a href=&quot;https://docs.python.org/3/library/http.html#http.HTTPStatus&quot;&gt;&lt;code&gt;http.HTTPStatus&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">如果您发现自己需要Django不提供的响应类，则可以在&lt;a href=&quot;https://docs.python.org/3/library/http.html#http.HTTPStatus&quot;&gt; &lt;code&gt;http.HTTPStatus&lt;/code&gt; &lt;/a&gt;的帮助下创建它。例如：</target>
        </trans-unit>
        <trans-unit id="a6acad9064fdbc3ea2b22b0bcfca87cc4ffc3ec7" translate="yes" xml:space="preserve">
          <source>If you find yourself needing to write an SQL query that is too complex for Django&amp;rsquo;s database-mapper to handle, you can fall back on writing SQL by hand. Django has a couple of options for writing raw SQL queries; see &lt;a href=&quot;sql&quot;&gt;Performing raw SQL queries&lt;/a&gt;.</source>
          <target state="translated">如果发现自己需要编写对于Django的数据库映射器来说太复杂的SQL查询，则可以手动编写SQL。Django有两个写原始SQL查询的选项。请参阅&lt;a href=&quot;sql&quot;&gt;执行原始SQL查询&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2ad1e5c64873a39591bff334fe500d215c29ad49" translate="yes" xml:space="preserve">
          <source>If you get a 404 when requesting &lt;code&gt;/books/acme/&lt;/code&gt;, check to ensure you actually have a Publisher with the name &amp;lsquo;ACME Publishing&amp;rsquo;. Generic views have an &lt;code&gt;allow_empty&lt;/code&gt; parameter for this case. See the &lt;a href=&quot;../../ref/class-based-views/index&quot;&gt;class-based-views reference&lt;/a&gt; for more details.</source>
          <target state="translated">如果在请求 &lt;code&gt;/books/acme/&lt;/code&gt; 时收到404 ，请检查以确保您实际上拥有名称为'ACME Publishing'的Publisher。在这种情况下，通用视图具有 &lt;code&gt;allow_empty&lt;/code&gt; 参数。有关更多详细信息，请参见&lt;a href=&quot;../../ref/class-based-views/index&quot;&gt;基于类的视图参考&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7f7742ad36754cc74a4903fa526fb289e4d0d2b4" translate="yes" xml:space="preserve">
          <source>If you get a &lt;code&gt;UnicodeEncodeError&lt;/code&gt; when uploading files with file names that contain non-ASCII characters, make sure Apache is configured to accept non-ASCII file names:</source>
          <target state="translated">如果在上传文件名包含非ASCII字符的文件时收到 &lt;code&gt;UnicodeEncodeError&lt;/code&gt; ，请确保将Apache配置为接受非ASCII文件名：</target>
        </trans-unit>
        <trans-unit id="7616ac6b8d7c3639812f35a6bc31e6c215afa7ae" translate="yes" xml:space="preserve">
          <source>If you get a &lt;code&gt;UnicodeEncodeError&lt;/code&gt; when uploading files with file names that contain non-ASCII characters, make sure uWSGI is configured to accept non-ASCII file names by adding this to your &lt;code&gt;uwsgi.ini&lt;/code&gt;:</source>
          <target state="translated">如果在上传文件名包含非ASCII字符的文件时收到 &lt;code&gt;UnicodeEncodeError&lt;/code&gt; ，请通过将 &lt;code&gt;uwsgi.ini&lt;/code&gt; 添加到uwsgi.ini来确保将uWSGI配置为接受非ASCII文件名：</target>
        </trans-unit>
        <trans-unit id="b3df4479a6ed3992aa239152c3ea200360f998d8" translate="yes" xml:space="preserve">
          <source>If you get an error page here, check that you&amp;rsquo;re going to &lt;a href=&quot;http://localhost:8000/polls/&quot;&gt;http://localhost:8000/polls/&lt;/a&gt; and not &lt;a href=&quot;http://localhost:8000/&quot;&gt;http://localhost:8000/&lt;/a&gt;.</source>
          <target state="translated">如果您在这里看到错误页面，请检查您是否要访问&lt;a href=&quot;http://localhost:8000/polls/&quot;&gt;http：// localhost：8000 / polls /&lt;/a&gt;而不是&lt;a href=&quot;http://localhost:8000/&quot;&gt;http：// localhost：8000 /&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="069b129e53ef4f85715fcc43dda8a29afa775b23" translate="yes" xml:space="preserve">
          <source>If you give the field a &lt;a href=&quot;../../models/fields#django.db.models.Field.default&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;, ensure it&amp;rsquo;s a callable such as &lt;code&gt;dict&lt;/code&gt; (for an empty default) or a callable that returns a dict (such as a function). Incorrectly using &lt;code&gt;default={}&lt;/code&gt; creates a mutable default that is shared between all instances of &lt;code&gt;JSONField&lt;/code&gt;.</source>
          <target state="translated">如果为该字段提供&lt;a href=&quot;../../models/fields#django.db.models.Field.default&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;，请确保它是可调用的，例如 &lt;code&gt;dict&lt;/code&gt; （用于空默认值）或返回dict的可调用（例如函数）。错误地使用 &lt;code&gt;default={}&lt;/code&gt; 会创建一个可变的默认值，该值在 &lt;code&gt;JSONField&lt;/code&gt; 的所有实例之间共享。</target>
        </trans-unit>
        <trans-unit id="27410732e928525d8c647604e8926b8d0498bdf6" translate="yes" xml:space="preserve">
          <source>If you give the field a &lt;a href=&quot;../../models/fields#django.db.models.Field.default&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;, ensure it&amp;rsquo;s a callable such as &lt;code&gt;list&lt;/code&gt; (for an empty default) or a callable that returns a list (such as a function). Incorrectly using &lt;code&gt;default=[]&lt;/code&gt; creates a mutable default that is shared between all instances of &lt;code&gt;ArrayField&lt;/code&gt;.</source>
          <target state="translated">如果为该字段提供&lt;a href=&quot;../../models/fields#django.db.models.Field.default&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;，请确保它是可调用项（例如 &lt;code&gt;list&lt;/code&gt; )（用于空默认值）或可调用项，其返回列表（例如函数）。错误地使用 &lt;code&gt;default=[]&lt;/code&gt; 会创建一个可变的默认值，该默认值在 &lt;code&gt;ArrayField&lt;/code&gt; 的所有实例之间共享。</target>
        </trans-unit>
        <trans-unit id="e341d486c0a6527afd40afba3bbf387252d13451" translate="yes" xml:space="preserve">
          <source>If you had a URL &lt;code&gt;/redirect_me/&lt;/code&gt; that redirected to &lt;code&gt;/next/&lt;/code&gt;, that redirected to &lt;code&gt;/final/&lt;/code&gt;, this is what you&amp;rsquo;d see:</source>
          <target state="translated">如果您有一个重定向到 &lt;code&gt;/next/&lt;/code&gt; 的URL &lt;code&gt;/redirect_me/&lt;/code&gt; ，该URL 重定向到了 &lt;code&gt;/final/&lt;/code&gt; ，那么您将看到：</target>
        </trans-unit>
        <trans-unit id="e18323392212f10a65b2daa3a1a10c84409a9d06" translate="yes" xml:space="preserve">
          <source>If you have a &amp;ldquo;rich&amp;rdquo; shell installed but want to force use of the &amp;ldquo;plain&amp;rdquo; Python interpreter, use &lt;code&gt;python&lt;/code&gt; as the interface name, like so:</source>
          <target state="translated">如果您安装了&amp;ldquo;丰富&amp;rdquo;外壳程序，但想强制使用&amp;ldquo;普通&amp;rdquo; Python解释器，请使用 &lt;code&gt;python&lt;/code&gt; 作为接口名称，如下所示：</target>
        </trans-unit>
        <trans-unit id="5d8adf9ea9a8d83fd0e8e6616d3cb139fe7ee8e2" translate="yes" xml:space="preserve">
          <source>If you have a &lt;code&gt;GPSCoordinatesField&lt;/code&gt;, for example, and want to be able to access additional information about the coordinates in a template, this could be implemented as follows:</source>
          <target state="translated">例如，如果您具有 &lt;code&gt;GPSCoordinatesField&lt;/code&gt; ，并且希望能够访问有关模板中坐标的其他信息，则可以按以下方式实现：</target>
        </trans-unit>
        <trans-unit id="d61d684a756350ad6251ad220974916e91d79976" translate="yes" xml:space="preserve">
          <source>If you have a &lt;code&gt;Place&lt;/code&gt; that is also a &lt;code&gt;Restaurant&lt;/code&gt;, you can get from the &lt;code&gt;Place&lt;/code&gt; object to the &lt;code&gt;Restaurant&lt;/code&gt; object by using the lowercase version of the model name:</source>
          <target state="translated">如果您的 &lt;code&gt;Place&lt;/code&gt; 也是 &lt;code&gt;Restaurant&lt;/code&gt; ，则可以使用模型名称的小写形式从 &lt;code&gt;Place&lt;/code&gt; 对象到 &lt;code&gt;Restaurant&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="e101b1692181a5bd9c21e9a4901c5f705625b68f" translate="yes" xml:space="preserve">
          <source>If you have a background in programming, or if you&amp;rsquo;re used to languages which mix programming code directly into HTML, you&amp;rsquo;ll want to bear in mind that the Django template system is not simply Python embedded into HTML. This is by design: the template system is meant to express presentation, not program logic.</source>
          <target state="translated">如果您有编程背景，或者习惯于将编程代码直接混合到HTML中的语言，则需要记住Django模板系统不仅仅是将Python嵌入HTML中。这是设计使然：模板系统用于表示表示形式，而不是程序逻辑。</target>
        </trans-unit>
        <trans-unit id="59e1b17500d931bbf50d9ce94988d17d56a10749" translate="yes" xml:space="preserve">
          <source>If you have a bound &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; instance and want to change the data somehow, or if you want to bind an unbound &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; instance to some data, create another &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; instance. There is no way to change data in a &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; instance. Once a &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; instance has been created, you should consider its data immutable, whether it has data or not.</source>
          <target state="translated">如果您有绑定的&lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;实例，并且想要以某种方式更改数据，或者要将未绑定的&lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;实例绑定到某些数据，请创建另一个&lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;实例。无法更改&lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;实例中的数据。一旦&lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;实例被创建时，应考虑其数据不可变的，它是否有数据或不。</target>
        </trans-unit>
        <trans-unit id="978ffd4b507205bec211ecb6fb44da5a6411e504" translate="yes" xml:space="preserve">
          <source>If you have a complex application, you may want to run tests automatically with every commit for the purposes of &lt;a href=&quot;https://en.wikipedia.org/wiki/Continuous_integration&quot;&gt;continuous integration&lt;/a&gt;, so that quality control is itself - at least partially - automated.</source>
          <target state="translated">如果您有复杂的应用程序，则可能需要针对每次提交自动运行测试以实现&lt;a href=&quot;https://en.wikipedia.org/wiki/Continuous_integration&quot;&gt;持续集成&lt;/a&gt;，从而使质量控制本身（至少部分是自动化）是自动化的。</target>
        </trans-unit>
        <trans-unit id="e8cd69861c19aec280ff4c3da106598eae268983" translate="yes" xml:space="preserve">
          <source>If you have a different database and aren&amp;rsquo;t sure if it supports DDL transactions, check the &lt;code&gt;django.db.connection.features.can_rollback_ddl&lt;/code&gt; attribute.</source>
          <target state="translated">如果您具有其他数据库，并且不确定该数据库是否支持DDL事务，请检查 &lt;code&gt;django.db.connection.features.can_rollback_ddl&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="5b7fdb666d2c7387f8e88756c3572339b99b1480" translate="yes" xml:space="preserve">
          <source>If you have a field called &lt;code&gt;foo&lt;/code&gt; that is a &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, the default &lt;code&gt;values()&lt;/code&gt; call will return a dictionary key called &lt;code&gt;foo_id&lt;/code&gt;, since this is the name of the hidden model attribute that stores the actual value (the &lt;code&gt;foo&lt;/code&gt; attribute refers to the related model). When you are calling &lt;code&gt;values()&lt;/code&gt; and passing in field names, you can pass in either &lt;code&gt;foo&lt;/code&gt; or &lt;code&gt;foo_id&lt;/code&gt; and you will get back the same thing (the dictionary key will match the field name you passed in).</source>
          <target state="translated">如果您有一个名为 &lt;code&gt;foo&lt;/code&gt; 的字段作为&lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;，则默认 &lt;code&gt;values()&lt;/code&gt; 调用将返回一个名为 &lt;code&gt;foo_id&lt;/code&gt; 的字典键，因为这是存储实际值的隐藏模型属性的名称（ &lt;code&gt;foo&lt;/code&gt; 属性引用了相关模型）。当您调用 &lt;code&gt;values()&lt;/code&gt; 并传递字段名称时，您可以传递 &lt;code&gt;foo&lt;/code&gt; 或 &lt;code&gt;foo_id&lt;/code&gt; ，然后返回相同的内容（字典键将与您传递的字段名称匹配）。</target>
        </trans-unit>
        <trans-unit id="16711bcb9d7d51d98a29ea22696d824133aa4a4b" translate="yes" xml:space="preserve">
          <source>If you have a field named &lt;code&gt;defaults&lt;/code&gt; and want to use it as an exact lookup in &lt;code&gt;get_or_create()&lt;/code&gt;, use &lt;code&gt;'defaults__exact'&lt;/code&gt;, like so:</source>
          <target state="translated">如果您有一个名为 &lt;code&gt;defaults&lt;/code&gt; 的字段，并且想在 &lt;code&gt;get_or_create()&lt;/code&gt; 中将其用作精确查找，请使用 &lt;code&gt;'defaults__exact'&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="d37c7ca73612e3f18e551c6e6e5ec5e6e3aab068" translate="yes" xml:space="preserve">
          <source>If you have a function that returns text and you want to be able to take lazy arguments while delaying their evaluation, you can use this decorator:</source>
          <target state="translated">如果你有一个返回文本的函数,并且你希望能够在延迟其评估的同时接受懒惰参数,你可以使用这个装饰器。</target>
        </trans-unit>
        <trans-unit id="e0d31ad051cee43c03199fe35d1cfc46041814b9" translate="yes" xml:space="preserve">
          <source>If you have a model that is defined using an &lt;a href=&quot;db/models#abstract-base-classes&quot;&gt;abstract base class&lt;/a&gt;, you don&amp;rsquo;t have to do anything special to serialize that model. Call the serializer on the object (or objects) that you want to serialize, and the output will be a complete representation of the serialized object.</source>
          <target state="translated">如果您有使用&lt;a href=&quot;db/models#abstract-base-classes&quot;&gt;抽象基类&lt;/a&gt;定义的模型，则无需执行任何特殊操作即可序列化该模型。在要序列化的一个或多个对象上调用序列化程序，输出将是序列化对象的完整表示。</target>
        </trans-unit>
        <trans-unit id="e6770af4d44284b72b625f55e0971a26874c906c" translate="yes" xml:space="preserve">
          <source>If you have a set of common decorators used in several places, you can define a list or tuple of decorators and use this instead of invoking &lt;code&gt;method_decorator()&lt;/code&gt; multiple times. These two classes are equivalent:</source>
          <target state="translated">如果您在多个地方使用了一组通用装饰器，则可以定义一个装饰器列表或元组，并使用它而不是多次调用 &lt;code&gt;method_decorator()&lt;/code&gt; 。这两个类是等效的：</target>
        </trans-unit>
        <trans-unit id="79b825e9cb0e34e49d16acfbe8a24478320f86a0" translate="yes" xml:space="preserve">
          <source>If you have an authenticated user you want to attach to the current session - this is done with a &lt;a href=&quot;#django.contrib.auth.login&quot;&gt;&lt;code&gt;login()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">如果您具有经过身份验证的用户，则希望附加到当前会话-这是通过&lt;a href=&quot;#django.contrib.auth.login&quot;&gt; &lt;code&gt;login()&lt;/code&gt; &lt;/a&gt;函数完成的。</target>
        </trans-unit>
        <trans-unit id="026d9fcdfc9b1f7521fa03bbe9b4114c2b909148" translate="yes" xml:space="preserve">
          <source>If you have an existing database with an older, weak hash such as MD5 or SHA1, you might want to upgrade those hashes yourself instead of waiting for the upgrade to happen when a user logs in (which may never happen if a user doesn&amp;rsquo;t return to your site). In this case, you can use a &amp;ldquo;wrapped&amp;rdquo; password hasher.</source>
          <target state="translated">如果您现有的数据库具有较旧的弱哈希（例如MD5或SHA1），则可能需要自己升级这些哈希，而不是等待用户登录时进行升级（如果用户未登录则可能永远不会发生）返回您的网站）。在这种情况下，您可以使用&amp;ldquo;包装的&amp;rdquo;密码哈希器。</target>
        </trans-unit>
        <trans-unit id="b86b91ddb2f98a42f4900d8c7c7782b7b091a39b" translate="yes" xml:space="preserve">
          <source>If you have an idea for functionality to include in &lt;code&gt;contrib&lt;/code&gt;, let us know! Code it up, and post it to the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/mailing-lists/#django-users-mailing-list&quot;&gt;django-users&lt;/a&gt; mailing list.</source>
          <target state="translated">如果您对将功能包括在 &lt;code&gt;contrib&lt;/code&gt; 中有任何想法，请告诉我们！对其进行编码，并将其发布到&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/mailing-lists/#django-users-mailing-list&quot;&gt;django-users&lt;/a&gt;邮件列表中。</target>
        </trans-unit>
        <trans-unit id="19c3b5495362847755cae62d7b220043549d25b3" translate="yes" xml:space="preserve">
          <source>If you have an iterable of model instances, you can prefetch related attributes on those instances using the &lt;a href=&quot;#django.db.models.prefetch_related_objects&quot;&gt;&lt;code&gt;prefetch_related_objects()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">如果您具有可迭代的模型实例，则可以使用&lt;a href=&quot;#django.db.models.prefetch_related_objects&quot;&gt; &lt;code&gt;prefetch_related_objects()&lt;/code&gt; &lt;/a&gt;函数在这些实例上预取相关属性。</target>
        </trans-unit>
        <trans-unit id="37904d083a93c2edd3d70d07fdce8e8357fcda8e" translate="yes" xml:space="preserve">
          <source>If you have any problems, please see the troubleshooting section below for suggestions and solutions.</source>
          <target state="translated">如果您有任何问题,请参见下面的故障排除部分,以获得建议和解决方案。</target>
        </trans-unit>
        <trans-unit id="ec0d4ee5c753dc222b01df5bf0c69c8624af1347" translate="yes" xml:space="preserve">
          <source>If you have app and project templates directories that both contain overrides, the default Django template loader will try to load the template from the project-level directory first. In other words, &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt; is searched before &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt;&lt;code&gt;APP_DIRS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您的应用程序和项目模板目录都包含替代，则默认Django模板加载器将首先尝试从项目级目录加载模板。换句话说，&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-DIRS&quot;&gt; &lt;code&gt;DIRS&lt;/code&gt; &lt;/a&gt;之前搜索&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt; &lt;code&gt;APP_DIRS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="08d9347c3a2e9dd49fb8cc1c6728cc1b9165b3fb" translate="yes" xml:space="preserve">
          <source>If you have created a &lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt;&lt;code&gt;db_type()&lt;/code&gt;&lt;/a&gt; method, you don&amp;rsquo;t need to worry about &lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_internal_type&quot;&gt;&lt;code&gt;get_internal_type()&lt;/code&gt;&lt;/a&gt; &amp;ndash; it won&amp;rsquo;t be used much. Sometimes, though, your database storage is similar in type to some other field, so you can use that other field&amp;rsquo;s logic to create the right column.</source>
          <target state="translated">如果创建了&lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt; &lt;code&gt;db_type()&lt;/code&gt; &lt;/a&gt;方法，则无需担心&lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_internal_type&quot;&gt; &lt;code&gt;get_internal_type()&lt;/code&gt; &lt;/a&gt;－它不会被太多使用。但是，有时数据库存储的类型与其他字段相似，因此您可以使用该其他字段的逻辑来创建正确的列。</target>
        </trans-unit>
        <trans-unit id="b5976cd51ea3df04ddca3661787303e1989a9bdd" translate="yes" xml:space="preserve">
          <source>If you have customized authentication (see &lt;a href=&quot;customizing&quot;&gt;Customizing Authentication&lt;/a&gt;) you can use a custom authentication form by setting the &lt;code&gt;authentication_form&lt;/code&gt; attribute. This form must accept a &lt;code&gt;request&lt;/code&gt; keyword argument in its &lt;code&gt;__init__()&lt;/code&gt; method and provide a &lt;code&gt;get_user()&lt;/code&gt; method which returns the authenticated user object (this method is only ever called after successful form validation).</source>
          <target state="translated">如果您具有定制的身份验证（请参阅&lt;a href=&quot;customizing&quot;&gt;Customizing Authentication&lt;/a&gt;），则可以通过设置 &lt;code&gt;authentication_form&lt;/code&gt; 属性来使用定制的身份验证表单。此表单必须在其 &lt;code&gt;__init__()&lt;/code&gt; 方法中接受一个 &lt;code&gt;request&lt;/code&gt; 关键字参数，并提供一个 &lt;code&gt;get_user()&lt;/code&gt; 方法，该方法返回经过身份验证的用户对象（仅在成功进行表单验证后才调用此方法）。</target>
        </trans-unit>
        <trans-unit id="e49e350f7aca08322a1d5e22652de39cfc978ac8" translate="yes" xml:space="preserve">
          <source>If you have difficulty finding where the Django source files are located on your system, run the following command:</source>
          <target state="translated">如果你很难找到Django源文件在你的系统中的位置,运行以下命令。</target>
        </trans-unit>
        <trans-unit id="2ed6656727786d8c5a9c10718cdb288f20ac8eaf" translate="yes" xml:space="preserve">
          <source>If you have installed a &lt;a href=&quot;../../../topics/auth/customizing#auth-custom-user&quot;&gt;custom user model&lt;/a&gt; and want to use this default auth handler, it must support an &lt;code&gt;is_active&lt;/code&gt; attribute. If you want to use group based authorization, your custom user must have a relation named &amp;lsquo;groups&amp;rsquo;, referring to a related object that has a &amp;lsquo;name&amp;rsquo; field. You can also specify your own custom mod_wsgi auth handler if your custom cannot conform to these requirements.</source>
          <target state="translated">如果您已经安装了&lt;a href=&quot;../../../topics/auth/customizing#auth-custom-user&quot;&gt;自定义用户模型&lt;/a&gt;并希望使用此默认身份验证处理程序，则它必须支持 &lt;code&gt;is_active&lt;/code&gt; 属性。如果要使用基于组的授权，则自定义用户必须具有名为&amp;ldquo;组&amp;rdquo;的关系，该关系是指具有&amp;ldquo;名称&amp;rdquo;字段的相关对象。如果您的自定义不符合这些要求，也可以指定自己的自定义mod_wsgi身份验证处理程序。</target>
        </trans-unit>
        <trans-unit id="2f1712a605e1df12222b17db97359a92359d57b3" translate="yes" xml:space="preserve">
          <source>If you have multiple &lt;code&gt;Form&lt;/code&gt; classes that share fields, you can use subclassing to remove redundancy.</source>
          <target state="translated">如果您有多个共享字段的 &lt;code&gt;Form&lt;/code&gt; 类，则可以使用子类删除冗余。</target>
        </trans-unit>
        <trans-unit id="c6aa2d211b2f44d42c468cde0eb6bc8be637e6dd" translate="yes" xml:space="preserve">
          <source>If you have multiple caches defined in &lt;a href=&quot;../../ref/settings#std:setting-CACHES&quot;&gt;&lt;code&gt;CACHES&lt;/code&gt;&lt;/a&gt;, Django will use the default cache. To use another cache, set &lt;a href=&quot;../../ref/settings#std:setting-SESSION_CACHE_ALIAS&quot;&gt;&lt;code&gt;SESSION_CACHE_ALIAS&lt;/code&gt;&lt;/a&gt; to the name of that cache.</source>
          <target state="translated">如果您在&lt;a href=&quot;../../ref/settings#std:setting-CACHES&quot;&gt; &lt;code&gt;CACHES&lt;/code&gt; 中&lt;/a&gt;定义了多个缓存，则Django将使用默认缓存。要使用另一个缓存，请将&lt;a href=&quot;../../ref/settings#std:setting-SESSION_CACHE_ALIAS&quot;&gt; &lt;code&gt;SESSION_CACHE_ALIAS&lt;/code&gt; &lt;/a&gt;设置为该缓存的名称。</target>
        </trans-unit>
        <trans-unit id="0daeb88e4409e7fba4cbaee7d1c51bff9fbbe585" translate="yes" xml:space="preserve">
          <source>If you have test classes that cannot be run in parallel (e.g. because they share a common resource), you can use &lt;code&gt;django.test.testcases.SerializeMixin&lt;/code&gt; to run them sequentially. This mixin uses a filesystem &lt;code&gt;lockfile&lt;/code&gt;.</source>
          <target state="translated">如果您有不能并行运行的测试类（例如，因为它们共享一个公共资源），则可以使用 &lt;code&gt;django.test.testcases.SerializeMixin&lt;/code&gt; 顺序运行它们。此混入使用文件系统 &lt;code&gt;lockfile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="69e118594fe6d021ccddfba860e486fc346e2e24" translate="yes" xml:space="preserve">
          <source>If you have test classes that cannot be run in parallel, you can use &lt;code&gt;SerializeMixin&lt;/code&gt; to run them sequentially. See &lt;a href=&quot;../topics/testing/advanced#topics-testing-enforce-run-sequentially&quot;&gt;Enforce running test classes sequentially&lt;/a&gt;.</source>
          <target state="translated">如果您有不能并行运行的测试类，则可以使用 &lt;code&gt;SerializeMixin&lt;/code&gt; 依次运行它们。请参阅&lt;a href=&quot;../topics/testing/advanced#topics-testing-enforce-run-sequentially&quot;&gt;强制顺序运行测试类&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="db6b634100bf984485aba1e1d164f951a1225a84" translate="yes" xml:space="preserve">
          <source>If you have the Django admin installed, you can also &lt;a href=&quot;#auth-admin&quot;&gt;create users interactively&lt;/a&gt;.</source>
          <target state="translated">如果您安装了Django管理员，则还&lt;a href=&quot;#auth-admin&quot;&gt;可以交互式创建用户&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2000ff382760e480cb9b499a00548bfca0c2d7fe" translate="yes" xml:space="preserve">
          <source>If you have the Django admin installed, you can also change user&amp;rsquo;s passwords on the &lt;a href=&quot;#auth-admin&quot;&gt;authentication system&amp;rsquo;s admin pages&lt;/a&gt;.</source>
          <target state="translated">如果您安装了Django admin，则还可以在&lt;a href=&quot;#auth-admin&quot;&gt;身份验证系统的admin页面&lt;/a&gt;上更改用户的密码。</target>
        </trans-unit>
        <trans-unit id="59e6b390f0fb4a292f006284bfad36ce56a1c450" translate="yes" xml:space="preserve">
          <source>If you have tried function based generic views in the past and found them lacking, you should not think of class-based generic views as a class-based equivalent, but rather as a fresh approach to solving the original problems that generic views were meant to solve.</source>
          <target state="translated">如果你在过去尝试过基于函数的泛型视图,并发现它们的不足,你不应该把基于类的泛型视图看作是基于类的等价物,而应该把它看作是解决泛型视图原本要解决的问题的一种新方法。</target>
        </trans-unit>
        <trans-unit id="efd9aa9b8fc35677ff19eb12feae61a2f1dd1243" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t added any extra options on top of the field you inherited from, then there&amp;rsquo;s no need to write a new &lt;code&gt;deconstruct()&lt;/code&gt; method. If, however, you&amp;rsquo;re changing the arguments passed in &lt;code&gt;__init__()&lt;/code&gt; (like we are in &lt;code&gt;HandField&lt;/code&gt;), you&amp;rsquo;ll need to supplement the values being passed.</source>
          <target state="translated">如果您没有在继承字段的顶部添加任何其他选项，则无需编写新的 &lt;code&gt;deconstruct()&lt;/code&gt; 方法。但是，如果要更改在 &lt;code&gt;__init__()&lt;/code&gt; 传递的参数（就像我们在 &lt;code&gt;HandField&lt;/code&gt; 中一样），则需要补充所传递的值。</target>
        </trans-unit>
        <trans-unit id="4ea2ba3519701ee1ea3735aa6135ecb00e08b0a0" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t recently completed Tutorials 1&amp;ndash;7, we encourage you to review these so that your example project matches the one described below.</source>
          <target state="translated">如果您最近尚未完成教程1&amp;ndash;7，我们建议您复习这些内容，以使示例项目与下面描述的项目匹配。</target>
        </trans-unit>
        <trans-unit id="b16b0bccf0c08600a1fbaec81d987234f8ac3c71" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t set up backups for your database, do it right now!</source>
          <target state="translated">如果您尚未为数据库设置备份，请立即执行！</target>
        </trans-unit>
        <trans-unit id="3abc3fddfa394c8f2c33c40961d7aa2e45568252" translate="yes" xml:space="preserve">
          <source>If you implement &lt;code&gt;__init__&lt;/code&gt; in your subclass of &lt;a href=&quot;#django.core.management.BaseCommand&quot;&gt;&lt;code&gt;BaseCommand&lt;/code&gt;&lt;/a&gt;, you must call &lt;a href=&quot;#django.core.management.BaseCommand&quot;&gt;&lt;code&gt;BaseCommand&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;code&gt;__init__&lt;/code&gt;:</source>
          <target state="translated">如果您在&lt;a href=&quot;#django.core.management.BaseCommand&quot;&gt; &lt;code&gt;BaseCommand&lt;/code&gt; &lt;/a&gt;的子类中实现 &lt;code&gt;__init__&lt;/code&gt; ，则必须调用&lt;a href=&quot;#django.core.management.BaseCommand&quot;&gt; &lt;code&gt;BaseCommand&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;__init__&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a3b78e197955bcb146a1c23c5d00f08fdb545c8d" translate="yes" xml:space="preserve">
          <source>If you implement custom model fields that inherit from &lt;a href=&quot;models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; directly, are overriding &lt;a href=&quot;models/fields#django.db.models.Field.get_prep_value&quot;&gt;&lt;code&gt;get_prep_value()&lt;/code&gt;&lt;/a&gt;, or use &lt;a href=&quot;models/expressions#django.db.models.expressions.RawSQL&quot;&gt;&lt;code&gt;RawSQL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;models/querysets#django.db.models.query.QuerySet.extra&quot;&gt;&lt;code&gt;extra()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../topics/db/sql#django.db.models.Manager.raw&quot;&gt;&lt;code&gt;raw()&lt;/code&gt;&lt;/a&gt;, you should ensure that you perform appropriate typecasting.</source>
          <target state="translated">如果您实现直接从&lt;a href=&quot;models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;继承，覆盖&lt;a href=&quot;models/fields#django.db.models.Field.get_prep_value&quot;&gt; &lt;code&gt;get_prep_value()&lt;/code&gt; &lt;/a&gt;或使用&lt;a href=&quot;models/expressions#django.db.models.expressions.RawSQL&quot;&gt; &lt;code&gt;RawSQL&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;models/querysets#django.db.models.query.QuerySet.extra&quot;&gt; &lt;code&gt;extra()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../topics/db/sql#django.db.models.Manager.raw&quot;&gt; &lt;code&gt;raw()&lt;/code&gt; 的&lt;/a&gt;自定义模型字段，则应确保执行适当的类型转换。</target>
        </trans-unit>
        <trans-unit id="4d14c28506b4a41e79a0a531c1100009cf8a5877" translate="yes" xml:space="preserve">
          <source>If you import models directly rather than using the historical models, your migrations &lt;em&gt;may work initially&lt;/em&gt; but will fail in the future when you try to re-run old migrations (commonly, when you set up a new installation and run through all the migrations to set up the database).</source>
          <target state="translated">如果直接导入模型而不是使用历史模型，则迁移&lt;em&gt;可能会开始工作，&lt;/em&gt;但将来在尝试重新运行旧迁移时会失败（通常，在安装新安装并运行所有要设置的迁移时）数据库）。</target>
        </trans-unit>
        <trans-unit id="44070fbe89941700ca164927fd2839d802124e64" translate="yes" xml:space="preserve">
          <source>If you install your project&amp;rsquo;s Python dependencies inside a &lt;a href=&quot;https://virtualenv.pypa.io/&quot;&gt;virtualenv&lt;/a&gt;, add the path to the virtualenv using &lt;code&gt;WSGIPythonHome&lt;/code&gt;. See the &lt;a href=&quot;https://modwsgi.readthedocs.io/en/develop/user-guides/virtual-environments.html&quot;&gt;mod_wsgi virtualenv guide&lt;/a&gt; for more details.</source>
          <target state="translated">如果您在&lt;a href=&quot;https://virtualenv.pypa.io/&quot;&gt;virtualenv&lt;/a&gt;内安装项目的Python依赖项，请使用 &lt;code&gt;WSGIPythonHome&lt;/code&gt; 将路径添加到virtualenv 。有关更多详细信息，请参见&lt;a href=&quot;https://modwsgi.readthedocs.io/en/develop/user-guides/virtual-environments.html&quot;&gt;mod_wsgi virtualenv指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a74cb3689863414b53e2cc2ad45826c27f81e941" translate="yes" xml:space="preserve">
          <source>If you installed Django with &lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt;, you can use the &lt;code&gt;--upgrade&lt;/code&gt; or &lt;code&gt;-U&lt;/code&gt; flag:</source>
          <target state="translated">如果使用&lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt;安装了Django ，则可以使用 &lt;code&gt;--upgrade&lt;/code&gt; 或 &lt;code&gt;-U&lt;/code&gt; 标志：</target>
        </trans-unit>
        <trans-unit id="0e1355dc1d54e62ec3be4d96bc279fa717ea1aa3" translate="yes" xml:space="preserve">
          <source>If you intend to allow users to upload files, you must ensure that the environment used to run Django is configured to work with non-ASCII file names. If your environment isn&amp;rsquo;t configured correctly, you&amp;rsquo;ll encounter &lt;code&gt;UnicodeEncodeError&lt;/code&gt; exceptions when saving files with file names that contain non-ASCII characters.</source>
          <target state="translated">如果要允许用户上传文件，则必须确保将用于运行Django的环境配置为使用非ASCII文件名。如果您的环境配置不正确，则在保存文件名包含非ASCII字符的文件时会遇到 &lt;code&gt;UnicodeEncodeError&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="4acb8b00d983476c1c0fae9d2bcb2eb3c71e63d5" translate="yes" xml:space="preserve">
          <source>If you just want to experiment with Django, skip ahead to the next section; Django includes a lightweight web server you can use for testing, so you won&amp;rsquo;t need to set up Apache until you&amp;rsquo;re ready to deploy Django in production.</source>
          <target state="translated">如果您只想尝试使用Django，请跳到下一节；Django包括可用于测试的轻量级Web服务器，因此在准备好将Django部署到生产环境之前，无需设置Apache。</target>
        </trans-unit>
        <trans-unit id="3568f1bdadbf483dacd6fb9b4be3a20a4b3cc65b" translate="yes" xml:space="preserve">
          <source>If you just want to get some data from your tables into a serialized form, you could use the &lt;a href=&quot;../ref/django-admin#django-admin-dumpdata&quot;&gt;&lt;code&gt;dumpdata&lt;/code&gt;&lt;/a&gt; management command.</source>
          <target state="translated">如果只想从表中获取一些数据以序列化形式，则可以使用&lt;a href=&quot;../ref/django-admin#django-admin-dumpdata&quot;&gt; &lt;code&gt;dumpdata&lt;/code&gt; &lt;/a&gt; management命令。</target>
        </trans-unit>
        <trans-unit id="4e09fa0bd8a3a147ea439259f86c751ca2fbfc03" translate="yes" xml:space="preserve">
          <source>If you just want to get started already (and nobody would blame you!), try taking a look at the list of &lt;a href=&quot;https://code.djangoproject.com/query?status=new&amp;amp;status=reopened&amp;amp;has_patch=0&amp;amp;easy=1&amp;amp;col=id&amp;amp;col=summary&amp;amp;col=status&amp;amp;col=owner&amp;amp;col=type&amp;amp;col=milestone&amp;amp;order=priority&quot;&gt;easy tickets that need patches&lt;/a&gt; and the &lt;a href=&quot;https://code.djangoproject.com/query?status=new&amp;amp;status=reopened&amp;amp;needs_better_patch=1&amp;amp;easy=1&amp;amp;col=id&amp;amp;col=summary&amp;amp;col=status&amp;amp;col=owner&amp;amp;col=type&amp;amp;col=milestone&amp;amp;order=priority&quot;&gt;easy tickets that have patches which need improvement&lt;/a&gt;. If you&amp;rsquo;re familiar with writing tests, you can also look at the list of &lt;a href=&quot;https://code.djangoproject.com/query?status=new&amp;amp;status=reopened&amp;amp;needs_tests=1&amp;amp;easy=1&amp;amp;col=id&amp;amp;col=summary&amp;amp;col=status&amp;amp;col=owner&amp;amp;col=type&amp;amp;col=milestone&amp;amp;order=priority&quot;&gt;easy tickets that need tests&lt;/a&gt;. Remember to follow the guidelines about claiming tickets that were mentioned in the link to Django&amp;rsquo;s documentation on &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/submitting-patches/&quot;&gt;claiming tickets and submitting patches&lt;/a&gt;.</source>
          <target state="translated">如果您只是想开始使用（没有人会怪您！），请尝试看一下&lt;a href=&quot;https://code.djangoproject.com/query?status=new&amp;amp;status=reopened&amp;amp;has_patch=0&amp;amp;easy=1&amp;amp;col=id&amp;amp;col=summary&amp;amp;col=status&amp;amp;col=owner&amp;amp;col=type&amp;amp;col=milestone&amp;amp;order=priority&quot;&gt;需要补丁&lt;/a&gt;的&lt;a href=&quot;https://code.djangoproject.com/query?status=new&amp;amp;status=reopened&amp;amp;needs_better_patch=1&amp;amp;easy=1&amp;amp;col=id&amp;amp;col=summary&amp;amp;col=status&amp;amp;col=owner&amp;amp;col=type&amp;amp;col=milestone&amp;amp;order=priority&quot;&gt;简易票据和带有需要改进&lt;/a&gt;的简易票据的清单。如果您熟悉编写测试的方法，则还可以查看&lt;a href=&quot;https://code.djangoproject.com/query?status=new&amp;amp;status=reopened&amp;amp;needs_tests=1&amp;amp;easy=1&amp;amp;col=id&amp;amp;col=summary&amp;amp;col=status&amp;amp;col=owner&amp;amp;col=type&amp;amp;col=milestone&amp;amp;order=priority&quot;&gt;需要测试&lt;/a&gt;的简易凭单清单。请记住要遵循Django的&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/submitting-patches/&quot;&gt;索取票证和提交补丁&lt;/a&gt;文档链接中提到的索取票证的准则。</target>
        </trans-unit>
        <trans-unit id="c50512e5b7b4d2917fd0ded7753af940b02ac0a6" translate="yes" xml:space="preserve">
          <source>If you know there is only one object that matches your query, you can use the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; which returns the object directly:</source>
          <target state="translated">如果您知道只有一个对象与查询匹配，则可以在&lt;a href=&quot;managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt;上使用&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;方法，该方法直接返回该对象：</target>
        </trans-unit>
        <trans-unit id="a4d46c64f50d662db0e36989441c746c4eb15547" translate="yes" xml:space="preserve">
          <source>If you know which models you&amp;rsquo;ll be using most often, you can also add a &amp;ldquo;reverse&amp;rdquo; generic relationship to enable an additional API. For example:</source>
          <target state="translated">如果您知道最常使用哪种模型，则还可以添加&amp;ldquo;反向&amp;rdquo;通用关系以启用其他API。例如：</target>
        </trans-unit>
        <trans-unit id="c191fd40bd25e99c36f57ceff24ea08151258536" translate="yes" xml:space="preserve">
          <source>If you leave off the &lt;code&gt;name&lt;/code&gt; argument, as in the second example above, Django will use the function&amp;rsquo;s name as the filter name.</source>
          <target state="translated">如果不使用 &lt;code&gt;name&lt;/code&gt; 参数，如上面的第二个示例中所示，Django将使用该函数的名称作为过滤器名称。</target>
        </trans-unit>
        <trans-unit id="e8bf004d14c563eb22c00ca8e5526f83bb38a104" translate="yes" xml:space="preserve">
          <source>If you leave off the &lt;code&gt;name&lt;/code&gt; argument, as in the second example above, Django will use the function&amp;rsquo;s name as the tag name.</source>
          <target state="translated">如果不使用 &lt;code&gt;name&lt;/code&gt; 参数，如上面的第二个示例中所示，Django将使用该函数的名称作为标记名称。</target>
        </trans-unit>
        <trans-unit id="950469d51b06aaa88a367dde3845db6577c50567" translate="yes" xml:space="preserve">
          <source>If you like the widgets that the Django Admin application uses, feel free to use them in your own application! They&amp;rsquo;re all stored in &lt;code&gt;django.contrib.admin.widgets&lt;/code&gt;.</source>
          <target state="translated">如果您喜欢Django Admin应用程序使用的小部件，请随时在您自己的应用程序中使用它们！它们都存储在 &lt;code&gt;django.contrib.admin.widgets&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="338ebae0cd2defb4e2b46e3293b08157abaa3c2b" translate="yes" xml:space="preserve">
          <source>If you look at any change list in the admin, you&amp;rsquo;ll see this feature in action; Django ships with a &amp;ldquo;delete selected objects&amp;rdquo; action available to all models. For example, here&amp;rsquo;s the user module from Django&amp;rsquo;s built-in &lt;a href=&quot;../../../topics/auth/index#module-django.contrib.auth&quot;&gt;&lt;code&gt;django.contrib.auth&lt;/code&gt;&lt;/a&gt; app:</source>
          <target state="translated">如果您查看管理员中的任何更改列表，就会看到此功能的实际效果；Django随附了适用于所有模型的&amp;ldquo;删除选定对象&amp;rdquo;操作。例如，这是Django内置的&lt;a href=&quot;../../../topics/auth/index#module-django.contrib.auth&quot;&gt; &lt;code&gt;django.contrib.auth&lt;/code&gt; &lt;/a&gt;应用程序中的用户模块：</target>
        </trans-unit>
        <trans-unit id="563d1c2d9d163e085568958c9f2b6d9c96629a36" translate="yes" xml:space="preserve">
          <source>If you look carefully, you can see that the portion that was generated by &lt;code&gt;quote()&lt;/code&gt; in the second example was not double-quoted when passed to &lt;code&gt;iri_to_uri()&lt;/code&gt;. This is a very important and useful feature. It means that you can construct your IRI without worrying about whether it contains non-ASCII characters and then, right at the end, call &lt;code&gt;iri_to_uri()&lt;/code&gt; on the result.</source>
          <target state="translated">如果仔细看，您会发现第二个示例中由 &lt;code&gt;quote()&lt;/code&gt; 生成的部分在传递给 &lt;code&gt;iri_to_uri()&lt;/code&gt; 时没有被双引号引起来。这是非常重要和有用的功能。这意味着您可以构造IRI，而不必担心它是否包含非ASCII字符，然后 &lt;code&gt;iri_to_uri()&lt;/code&gt; 在结果上调用iri_to_uri（）。</target>
        </trans-unit>
        <trans-unit id="fae37143701969595b56a1de835f003e68a717b5" translate="yes" xml:space="preserve">
          <source>If you manually render fields in the template, you can render &lt;code&gt;can_delete&lt;/code&gt; parameter with &lt;code&gt;{{ form.DELETE }}&lt;/code&gt;:</source>
          <target state="translated">如果您手动渲染模板中的字段，则可以使用 &lt;code&gt;{{ form.DELETE }}&lt;/code&gt; 渲染 &lt;code&gt;can_delete&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="f75b2bb9e0e1faedcbcaf93a8d2cb2f193a634dc" translate="yes" xml:space="preserve">
          <source>If you meet this requirement, then substitute the &lt;code&gt;OSMGeoAdmin&lt;/code&gt; option class in your &lt;code&gt;admin.py&lt;/code&gt; file:</source>
          <target state="translated">如果满足此要求，请在 &lt;code&gt;admin.py&lt;/code&gt; 文件中替换 &lt;code&gt;OSMGeoAdmin&lt;/code&gt; 选项类：</target>
        </trans-unit>
        <trans-unit id="225bae64392f765fd429b21ea8ac02f57f4afb72" translate="yes" xml:space="preserve">
          <source>If you need an empty migration file to write your own &lt;code&gt;Operation&lt;/code&gt; objects into, use &lt;code&gt;python manage.py makemigrations --empty yourappname&lt;/code&gt;, but be aware that manually adding schema-altering operations can confuse the migration autodetector and make resulting runs of &lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; output incorrect code.</source>
          <target state="translated">如果您需要一个空的迁移文件来将自己的 &lt;code&gt;Operation&lt;/code&gt; 对象写入其中，请使用 &lt;code&gt;python manage.py makemigrations --empty yourappname&lt;/code&gt; ，但请注意，手动添加更改模式的操作可能会使迁移自动检测器&lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt;困惑，并使makemigrations的最终运行输出不正确的代码。</target>
        </trans-unit>
        <trans-unit id="c26240f024c2f3e478948f8f7fec8bbb42d821c0" translate="yes" xml:space="preserve">
          <source>If you need custom template loading or custom context object instantiation, create a &lt;code&gt;TemplateResponse&lt;/code&gt; subclass and assign it to &lt;code&gt;response_class&lt;/code&gt;.</source>
          <target state="translated">如果需要自定义模板加载或自定义上下文对象实例化，请创建 &lt;code&gt;TemplateResponse&lt;/code&gt; 子类并将其分配给 &lt;code&gt;response_class&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d33ecf64697d7de63f58f86dbfaa4f84e060248a" translate="yes" xml:space="preserve">
          <source>If you need different precedence, you will need to use nested &lt;a href=&quot;#std:templatetag-if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; tags. Sometimes that is better for clarity anyway, for the sake of those who do not know the precedence rules.</source>
          <target state="translated">如果需要不同的优先级，则需要使用嵌套的&lt;a href=&quot;#std:templatetag-if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt;标记。有时候，为了那些不了解优先规则的人，为了清楚起见，这总会更好。</target>
        </trans-unit>
        <trans-unit id="94aa71aa505c6a16108b61bb062ab6ada6bf5751" translate="yes" xml:space="preserve">
          <source>If you need more control, you can create your own authentication backend that inherits from &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.backends.RemoteUserBackend&quot;&gt;&lt;code&gt;RemoteUserBackend&lt;/code&gt;&lt;/a&gt; and override one or more of its attributes and methods.</source>
          <target state="translated">如果需要更多控制，则可以创建自己的身份验证后端，该后端从&lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.backends.RemoteUserBackend&quot;&gt; &lt;code&gt;RemoteUserBackend&lt;/code&gt; &lt;/a&gt;继承，并覆盖其一个或多个属性和方法。</target>
        </trans-unit>
        <trans-unit id="758aabbe668d354fb6f337c8ed3f754bf52e0550" translate="yes" xml:space="preserve">
          <source>If you need more control, you can create your own authentication backend that inherits from this class and override these attributes or methods:</source>
          <target state="translated">如果你需要更多的控制,你可以创建自己的认证后端,继承这个类,并覆盖这些属性或方法。</target>
        </trans-unit>
        <trans-unit id="0e28d0fde6b118d6feed4accf2b47a636af43e24" translate="yes" xml:space="preserve">
          <source>If you need more fine-grained control, use a tuple (or list) as value for &lt;code&gt;list_select_related&lt;/code&gt;. Empty tuple will prevent Django from calling &lt;code&gt;select_related&lt;/code&gt; at all. Any other tuple will be passed directly to &lt;code&gt;select_related&lt;/code&gt; as parameters. For example:</source>
          <target state="translated">如果需要更细粒度的控制，请使用元组（或列表）作为 &lt;code&gt;list_select_related&lt;/code&gt; 的值。空元组将完全阻止Django调用 &lt;code&gt;select_related&lt;/code&gt; 。其他任何元组都将直接传递给 &lt;code&gt;select_related&lt;/code&gt; 作为参数。例如：</target>
        </trans-unit>
        <trans-unit id="d8cb56dde557370f78a7f18c4a395b3fd0b21ee4" translate="yes" xml:space="preserve">
          <source>If you need more flexibility, you could also add a new argument to your custom &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;makemessages&lt;/code&gt;&lt;/a&gt; command:</source>
          <target state="translated">如果需要更大的灵活性，还可以在自定义&lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt; &lt;code&gt;makemessages&lt;/code&gt; &lt;/a&gt;命令中添加新参数：</target>
        </trans-unit>
        <trans-unit id="aff7c703e8b54ba634b913901864d3aa00cffcf1" translate="yes" xml:space="preserve">
          <source>If you need the response to be streamed from the iterator to the client, you must use the &lt;a href=&quot;#django.http.StreamingHttpResponse&quot;&gt;&lt;code&gt;StreamingHttpResponse&lt;/code&gt;&lt;/a&gt; class instead.</source>
          <target state="translated">如果需要将响应从迭代器流式传输到客户端，则必须改用&lt;a href=&quot;#django.http.StreamingHttpResponse&quot;&gt; &lt;code&gt;StreamingHttpResponse&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="9cf5c4ff845a5d20e57ce99fe95fc4dfe26d3a0d" translate="yes" xml:space="preserve">
          <source>If you need to access a membership&amp;rsquo;s information you may do so by directly querying the &lt;code&gt;Membership&lt;/code&gt; model:</source>
          <target state="translated">如果您需要访问成员资格信息，可以通过直接查询 &lt;code&gt;Membership&lt;/code&gt; 模型来进行：</target>
        </trans-unit>
        <trans-unit id="29d093239d80818b0b1e33570e4407bb058ea195" translate="yes" xml:space="preserve">
          <source>If you need to access some additional information about a form field in a template and using a subclass of &lt;a href=&quot;fields#django.forms.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; isn&amp;rsquo;t sufficient, consider also customizing &lt;a href=&quot;#django.forms.BoundField&quot;&gt;&lt;code&gt;BoundField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您需要访问有关模板中表单字段的其他信息，而使用&lt;a href=&quot;fields#django.forms.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;的子类还不够，请考虑自定义&lt;a href=&quot;#django.forms.BoundField&quot;&gt; &lt;code&gt;BoundField&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ecb3aea88ed07bec970c7d28d05fa46d621b0e09" translate="yes" xml:space="preserve">
          <source>If you need to add a PostgreSQL extension (like &lt;code&gt;hstore&lt;/code&gt;, &lt;code&gt;postgis&lt;/code&gt;, etc.) using a migration, use the &lt;a href=&quot;contrib/postgres/operations#django.contrib.postgres.operations.CreateExtension&quot;&gt;&lt;code&gt;CreateExtension&lt;/code&gt;&lt;/a&gt; operation.</source>
          <target state="translated">如果您需要使用迁移来添加PostgreSQL扩展（例如 &lt;code&gt;hstore&lt;/code&gt; ， &lt;code&gt;postgis&lt;/code&gt; 等），请使用&lt;a href=&quot;contrib/postgres/operations#django.contrib.postgres.operations.CreateExtension&quot;&gt; &lt;code&gt;CreateExtension&lt;/code&gt; &lt;/a&gt;操作。</target>
        </trans-unit>
        <trans-unit id="e450e893ae7afe1bc2e22ffb0c5a0a76816766d3" translate="yes" xml:space="preserve">
          <source>If you need to add additional fields to the formset this can be easily accomplished. The formset base class provides an &lt;code&gt;add_fields&lt;/code&gt; method. You can override this method to add your own fields or even redefine the default fields/attributes of the order and deletion fields:</source>
          <target state="translated">如果您需要向表单集添加其他字段，则可以轻松实现。 &lt;code&gt;add_fields&lt;/code&gt; 基类提供了一个add_fields方法。您可以重写此方法以添加自己的字段，甚至重新定义order和delete字段的默认字段/属性：</target>
        </trans-unit>
        <trans-unit id="a49d29d22712c0f8cc4a9ef3a3f1dc48cf130bea" translate="yes" xml:space="preserve">
          <source>If you need to change how emails are sent you can write your own email backend. The &lt;a href=&quot;../ref/settings#std:setting-EMAIL_BACKEND&quot;&gt;&lt;code&gt;EMAIL_BACKEND&lt;/code&gt;&lt;/a&gt; setting in your settings file is then the Python import path for your backend class.</source>
          <target state="translated">如果您需要更改电子邮件的发送方式，则可以编写自己的电子邮件后端。然后，设置文件中的&lt;a href=&quot;../ref/settings#std:setting-EMAIL_BACKEND&quot;&gt; &lt;code&gt;EMAIL_BACKEND&lt;/code&gt; &lt;/a&gt;设置就是您的后端类的Python导入路径。</target>
        </trans-unit>
        <trans-unit id="e5fa605cf3f76c4428e51ca9506d8d5da266d92c" translate="yes" xml:space="preserve">
          <source>If you need to change this default behavior, create the intermediary table as an explicit model (with &lt;code&gt;managed&lt;/code&gt; set as needed) and use the &lt;a href=&quot;fields#django.db.models.ManyToManyField.through&quot;&gt;&lt;code&gt;ManyToManyField.through&lt;/code&gt;&lt;/a&gt; attribute to make the relation use your custom model.</source>
          <target state="translated">如果需要更改此默认行为，则将中介表创建为显式模型（根据需要使用 &lt;code&gt;managed&lt;/code&gt; 集），并使用&lt;a href=&quot;fields#django.db.models.ManyToManyField.through&quot;&gt; &lt;code&gt;ManyToManyField.through&lt;/code&gt; &lt;/a&gt;属性使关系使用自定义模型。</target>
        </trans-unit>
        <trans-unit id="417131b19902519fe0b468a60926a5bf16770559" translate="yes" xml:space="preserve">
          <source>If you need to clear the list of related fields added by past calls of &lt;code&gt;select_related&lt;/code&gt; on a &lt;code&gt;QuerySet&lt;/code&gt;, you can pass &lt;code&gt;None&lt;/code&gt; as a parameter:</source>
          <target state="translated">如果您需要清除 &lt;code&gt;QuerySet&lt;/code&gt; 上过去 &lt;code&gt;select_related&lt;/code&gt; 调用所添加的相关字段的列表，则可以将 &lt;code&gt;None&lt;/code&gt; 作为参数传递：</target>
        </trans-unit>
        <trans-unit id="16b5139d25521e92cae75d82c00fd807f514ef86" translate="yes" xml:space="preserve">
          <source>If you need to construct a &lt;code&gt;File&lt;/code&gt; yourself, the easiest way is to create one using a Python built-in &lt;code&gt;file&lt;/code&gt; object:</source>
          <target state="translated">如果您需要自己构造 &lt;code&gt;File&lt;/code&gt; ，最简单的方法是使用Python内置 &lt;code&gt;file&lt;/code&gt; 对象创建一个File：</target>
        </trans-unit>
        <trans-unit id="3c6d8d98e29f39567c45f015a91e483e346b4e97" translate="yes" xml:space="preserve">
          <source>If you need to create a relationship on a model that has not yet been defined, you can use the name of the model, rather than the model object itself:</source>
          <target state="translated">如果您需要在尚未定义的模型上创建关系,您可以使用模型的名称,而不是模型对象本身。</target>
        </trans-unit>
        <trans-unit id="65d871b7088c66feacdac17c59f3a01772b1f023" translate="yes" xml:space="preserve">
          <source>If you need to create a user to login with, use the &lt;a href=&quot;../../django-admin#django-admin-createsuperuser&quot;&gt;&lt;code&gt;createsuperuser&lt;/code&gt;&lt;/a&gt; command. By default, logging in to the admin requires that the user has the &lt;a href=&quot;../auth#django.contrib.auth.models.User.is_superuser&quot;&gt;&lt;code&gt;is_superuser&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../auth#django.contrib.auth.models.User.is_staff&quot;&gt;&lt;code&gt;is_staff&lt;/code&gt;&lt;/a&gt; attribute set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">如果需要创建用于登录的用户，请使用&lt;a href=&quot;../../django-admin#django-admin-createsuperuser&quot;&gt; &lt;code&gt;createsuperuser&lt;/code&gt; &lt;/a&gt;命令。默认情况下，登录到admin要求用户将&lt;a href=&quot;../auth#django.contrib.auth.models.User.is_superuser&quot;&gt; &lt;code&gt;is_superuser&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../auth#django.contrib.auth.models.User.is_staff&quot;&gt; &lt;code&gt;is_staff&lt;/code&gt; &lt;/a&gt;属性设置为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d65af76fc2fae362276614f23f186268a8063338" translate="yes" xml:space="preserve">
          <source>If you need to customize search you can use &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_search_results&quot;&gt;&lt;code&gt;ModelAdmin.get_search_results()&lt;/code&gt;&lt;/a&gt; to provide additional or alternate search behavior.</source>
          <target state="translated">如果需要自定义搜索，则可以使用&lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_search_results&quot;&gt; &lt;code&gt;ModelAdmin.get_search_results()&lt;/code&gt; &lt;/a&gt;提供其他或替代的搜索行为。</target>
        </trans-unit>
        <trans-unit id="268d1539953ae22ff11a5330553a90257431d684" translate="yes" xml:space="preserve">
          <source>If you need to customize the SQL mode, you can set the &lt;code&gt;sql_mode&lt;/code&gt; variable like other MySQL options: either in a config file or with the entry &lt;code&gt;'init_command': &quot;SET sql_mode='STRICT_TRANS_TABLES'&quot;&lt;/code&gt; in the &lt;a href=&quot;settings#std:setting-OPTIONS&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt; part of your database configuration in &lt;a href=&quot;settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您需要自定义SQL模式，则可以像其他MySQL选项一样设置 &lt;code&gt;sql_mode&lt;/code&gt; 变量：在配置文件中或在数据库配置的&lt;a href=&quot;settings#std:setting-OPTIONS&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; &lt;/a&gt;部分中使用条目 &lt;code&gt;'init_command': &quot;SET sql_mode='STRICT_TRANS_TABLES'&quot;&lt;/code&gt; 进行设置。&lt;a href=&quot;settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5590b9cc3e5a4f06eb74e308901af7ab377968ea" translate="yes" xml:space="preserve">
          <source>If you need to disable a &lt;a href=&quot;#adminsite-actions&quot;&gt;site-wide action&lt;/a&gt; you can call &lt;a href=&quot;#django.contrib.admin.AdminSite.disable_action&quot;&gt;&lt;code&gt;AdminSite.disable_action()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您需要禁用&lt;a href=&quot;#adminsite-actions&quot;&gt;网站范围的操作&lt;/a&gt;，则可以调用&lt;a href=&quot;#django.contrib.admin.AdminSite.disable_action&quot;&gt; &lt;code&gt;AdminSite.disable_action()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3188dcbcf55e21ddcef8ee90b69dccce7ee89480" translate="yes" xml:space="preserve">
          <source>If you need to distinguish between bound and unbound form instances at runtime, check the value of the form&amp;rsquo;s &lt;a href=&quot;#django.forms.Form.is_bound&quot;&gt;&lt;code&gt;is_bound&lt;/code&gt;&lt;/a&gt; attribute:</source>
          <target state="translated">如果需要在运行时区分绑定表单实例和未绑定表单实例，请检查表单的&lt;a href=&quot;#django.forms.Form.is_bound&quot;&gt; &lt;code&gt;is_bound&lt;/code&gt; &lt;/a&gt;属性的值：</target>
        </trans-unit>
        <trans-unit id="271b48b10c2eaee15e6c01af5201ecab45c59f1b" translate="yes" xml:space="preserve">
          <source>If you need to do this from within Python, do that with &lt;code&gt;os.environ&lt;/code&gt;:</source>
          <target state="translated">如果您需要在Python中执行此操作，请使用 &lt;code&gt;os.environ&lt;/code&gt; 进行操作：</target>
        </trans-unit>
        <trans-unit id="05047b6375db39f11bb955e3562cff830f8ce275" translate="yes" xml:space="preserve">
          <source>If you need to execute more complex queries (for example, queries with &lt;code&gt;OR&lt;/code&gt; statements), you can use &lt;a href=&quot;#django.db.models.Q&quot;&gt;&lt;code&gt;Q objects&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您需要执行更复杂的查询（例如，带有 &lt;code&gt;OR&lt;/code&gt; 语句的查询），则可以使用&lt;a href=&quot;#django.db.models.Q&quot;&gt; &lt;code&gt;Q objects&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="382397a2d5889617644e1747a1ec56a1cb186983" translate="yes" xml:space="preserve">
          <source>If you need to get the content of the block from the parent template, the &lt;code&gt;{{ block.super }}&lt;/code&gt; variable will do the trick. This is useful if you want to add to the contents of a parent block instead of completely overriding it. Data inserted using &lt;code&gt;{{ block.super }}&lt;/code&gt; will not be automatically escaped (see the &lt;a href=&quot;#automatic-html-escaping&quot;&gt;next section&lt;/a&gt;), since it was already escaped, if necessary, in the parent template.</source>
          <target state="translated">如果您需要从父模板获取块的内容，则 &lt;code&gt;{{ block.super }}&lt;/code&gt; 变量可以解决问题。如果要添加到父块的内容而不是完全覆盖它，这将很有用。使用 &lt;code&gt;{{ block.super }}&lt;/code&gt; 插入的数据将不会自动转义（请参阅&lt;a href=&quot;#automatic-html-escaping&quot;&gt;下一节&lt;/a&gt;），因为如果需要，已经在父模板中转义了该数据。</target>
        </trans-unit>
        <trans-unit id="7ebc26c78fa9c356f90a7f72742c57e3cd52c72f" translate="yes" xml:space="preserve">
          <source>If you need to identify the custom levels in your HTML or CSS, you need to provide a mapping via the &lt;a href=&quot;../settings#std:setting-MESSAGE_TAGS&quot;&gt;&lt;code&gt;MESSAGE_TAGS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">如果需要在HTML或CSS中标识自定义级别，则需要通过&lt;a href=&quot;../settings#std:setting-MESSAGE_TAGS&quot;&gt; &lt;code&gt;MESSAGE_TAGS&lt;/code&gt; &lt;/a&gt;设置提供映射。</target>
        </trans-unit>
        <trans-unit id="43d0b36b5694d463b889f6b0ba10b3bc8033471f" translate="yes" xml:space="preserve">
          <source>If you need to know whether &lt;code&gt;add()&lt;/code&gt; stored a value in the cache, you can check the return value. It will return &lt;code&gt;True&lt;/code&gt; if the value was stored, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果您需要知道 &lt;code&gt;add()&lt;/code&gt; 是否在缓存中存储了值，则可以检查返回值。如果存储了值，它将返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d830c73c6c6c1f7e7b98469dce63d2206baf4296" translate="yes" xml:space="preserve">
          <source>If you need to loop over a list of lists, you can unpack the values in each sublist into individual variables. For example, if your context contains a list of (x,y) coordinates called &lt;code&gt;points&lt;/code&gt;, you could use the following to output the list of points:</source>
          <target state="translated">如果您需要遍历列表列表，则可以将每个子列表中的值解压缩为单独的变量。例如，如果您的上下文包含称为 &lt;code&gt;points&lt;/code&gt; 的（x，y）坐标列表，则可以使用以下命令输出点列表：</target>
        </trans-unit>
        <trans-unit id="e4875586a1526cd06344d2126b39a51bf67bf624" translate="yes" xml:space="preserve">
          <source>If you need to order the resulting queryset using some of the new fields or tables you have included via &lt;code&gt;extra()&lt;/code&gt; use the &lt;code&gt;order_by&lt;/code&gt; parameter to &lt;code&gt;extra()&lt;/code&gt; and pass in a sequence of strings. These strings should either be model fields (as in the normal &lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt; method on querysets), of the form &lt;code&gt;table_name.column_name&lt;/code&gt; or an alias for a column that you specified in the &lt;code&gt;select&lt;/code&gt; parameter to &lt;code&gt;extra()&lt;/code&gt;.</source>
          <target state="translated">如果您需要使用通过 &lt;code&gt;extra()&lt;/code&gt; 包含的一些新字段或表对结果查询集进行排序，请使用 &lt;code&gt;order_by&lt;/code&gt; 参数设置 &lt;code&gt;extra()&lt;/code&gt; 并传递一系列字符串。这些字符串应该是形式为 &lt;code&gt;table_name.column_name&lt;/code&gt; 的模型字段（如在querysets上的常规&lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt; &lt;code&gt;order_by()&lt;/code&gt; &lt;/a&gt;方法中），或者是您在 &lt;code&gt;select&lt;/code&gt; 参数中为 &lt;code&gt;extra()&lt;/code&gt; 指定的列的别名。</target>
        </trans-unit>
        <trans-unit id="29512c055a4bbedadcf50ac81bc12aa696fefce6" translate="yes" xml:space="preserve">
          <source>If you need to perform parameterized queries, you can use the &lt;code&gt;params&lt;/code&gt; argument to &lt;code&gt;raw()&lt;/code&gt;:</source>
          <target state="translated">如果需要执行参数化查询，则可以对 &lt;code&gt;raw()&lt;/code&gt; 使用 &lt;code&gt;params&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="85d94e84caa03cb9aa1eba7c8a2edd2887aceacb" translate="yes" xml:space="preserve">
          <source>If you need to perform some more sophisticated manipulation of asset requirements, you can define the &lt;code&gt;media&lt;/code&gt; property directly. This is done by defining a widget property that returns an instance of &lt;code&gt;forms.Media&lt;/code&gt;. The constructor for &lt;code&gt;forms.Media&lt;/code&gt; accepts &lt;code&gt;css&lt;/code&gt; and &lt;code&gt;js&lt;/code&gt; keyword arguments in the same format as that used in a static media definition.</source>
          <target state="translated">如果您需要对资产要求执行一些更复杂的操作，则可以直接定义 &lt;code&gt;media&lt;/code&gt; 属性。这是通过定义一个小部件属性来完成的，该属性返回 &lt;code&gt;forms.Media&lt;/code&gt; 的实例。 &lt;code&gt;forms.Media&lt;/code&gt; 的构造函数接受与静态媒体定义中使用的格式相同的 &lt;code&gt;css&lt;/code&gt; 和 &lt;code&gt;js&lt;/code&gt; 关键字参数。</target>
        </trans-unit>
        <trans-unit id="03077957c82f83770cda4245c00130142e0728ea" translate="yes" xml:space="preserve">
          <source>If you need to produce a custom feed format, you&amp;rsquo;ve got a couple of options.</source>
          <target state="translated">如果您需要产生自定义的Feed格式，则有两种选择。</target>
        </trans-unit>
        <trans-unit id="dce169f28d5a3a0a8217378654a731a6091f2895" translate="yes" xml:space="preserve">
          <source>If you need to provide custom file storage &amp;ndash; a common example is storing files on some remote system &amp;ndash; you can do so by defining a custom storage class. You&amp;rsquo;ll need to follow these steps:</source>
          <target state="translated">如果需要提供自定义文件存储（一个常见的示例是在某个远程系统上存储文件），则可以通过定义自定义存储类来实现。您需要按照以下步骤操作：</target>
        </trans-unit>
        <trans-unit id="21318dce302488db7fe1be9c8f91e7d9398db2d0" translate="yes" xml:space="preserve">
          <source>If you need to reload a model&amp;rsquo;s values from the database, you can use the &lt;code&gt;refresh_from_db()&lt;/code&gt; method. When this method is called without arguments the following is done:</source>
          <target state="translated">如果需要从数据库中重新加载模型的值，则可以使用 &lt;code&gt;refresh_from_db()&lt;/code&gt; 方法。当不带参数调用此方法时，将完成以下操作：</target>
        </trans-unit>
        <trans-unit id="9f60d676b2ff26e717c98cf757ee77b4169d2c79" translate="yes" xml:space="preserve">
          <source>If you need to rename your tag, you can provide a custom name for it:</source>
          <target state="translated">如果您需要重新命名您的标签,您可以为它提供一个自定义的名称。</target>
        </trans-unit>
        <trans-unit id="70ce7ed4a5fd90c845431eb06c0ba9bf7b77d4be" translate="yes" xml:space="preserve">
          <source>If you need to specify a dynamic order (for example depending on user or language) you can implement a &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_ordering&quot;&gt;&lt;code&gt;get_ordering()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">如果需要指定动态顺序（例如，取决于用户或语言），则可以实现&lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_ordering&quot;&gt; &lt;code&gt;get_ordering()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="54934551f16cb178c17684aaa62b9b0ce737160b" translate="yes" xml:space="preserve">
          <source>If you need to specify a dynamic value based on the request, you can implement a &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_list_select_related&quot;&gt;&lt;code&gt;get_list_select_related()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">如果需要基于请求指定动态值，则可以实现&lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_list_select_related&quot;&gt; &lt;code&gt;get_list_select_related()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="d7afe7febaba1ec3c478e01c27fcfae0fcae482f" translate="yes" xml:space="preserve">
          <source>If you need to specify such values, reset the sequence afterwards to avoid reusing a value that&amp;rsquo;s already in the table. The &lt;a href=&quot;django-admin#django-admin-sqlsequencereset&quot;&gt;&lt;code&gt;sqlsequencereset&lt;/code&gt;&lt;/a&gt; management command generates the SQL statements to do that.</source>
          <target state="translated">如果需要指定此类值，请在以后重置顺序，以避免重复使用表中已有的值。该&lt;a href=&quot;django-admin#django-admin-sqlsequencereset&quot;&gt; &lt;code&gt;sqlsequencereset&lt;/code&gt; &lt;/a&gt;管理命令生成SQL语句来做到这一点。</target>
        </trans-unit>
        <trans-unit id="42afbcfd63e453f7b679ed0c58b5d3f86138dbfa" translate="yes" xml:space="preserve">
          <source>If you need to specify this list dynamically, implement a &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_sortable_by&quot;&gt;&lt;code&gt;get_sortable_by()&lt;/code&gt;&lt;/a&gt; method instead.</source>
          <target state="translated">如果您需要动态指定此列表，请改为实现&lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_sortable_by&quot;&gt; &lt;code&gt;get_sortable_by()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="385e9bf858c9d8171227212211f5666543e0edbb" translate="yes" xml:space="preserve">
          <source>If you need to use a different JSON encoder class you can pass the &lt;code&gt;encoder&lt;/code&gt; parameter to the constructor method:</source>
          <target state="translated">如果需要使用其他JSON编码器类，则可以将 &lt;code&gt;encoder&lt;/code&gt; 参数传递给构造函数方法：</target>
        </trans-unit>
        <trans-unit id="52403383dcd3d11592773e83b934a1caeec7695e" translate="yes" xml:space="preserve">
          <source>If you need to use a literal &lt;code&gt;%s&lt;/code&gt; inside your select string, use the sequence &lt;code&gt;%%s&lt;/code&gt;.</source>
          <target state="translated">如果需要在选择字符串中使用文字 &lt;code&gt;%s&lt;/code&gt; ，请使用序列 &lt;code&gt;%%s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e62765ab69b86199c0c670e1b19ddf6f4572d8af" translate="yes" xml:space="preserve">
          <source>If you need to use a spatial lookup or aggregate that doesn&amp;rsquo;t support the geography type as input, you can use the &lt;a href=&quot;../../models/database-functions#django.db.models.functions.Cast&quot;&gt;&lt;code&gt;Cast&lt;/code&gt;&lt;/a&gt; database function to convert the geography column to a geometry type in the query:</source>
          <target state="translated">如果需要使用不支持地理类型的空间查找或聚合作为输入，则可以使用&lt;a href=&quot;../../models/database-functions#django.db.models.functions.Cast&quot;&gt; &lt;code&gt;Cast&lt;/code&gt; &lt;/a&gt;数据库函数将地理列转换为查询中的几何类型：</target>
        </trans-unit>
        <trans-unit id="7261e018cbf8f2bbdd8cb56b7d0debc25633a8f3" translate="yes" xml:space="preserve">
          <source>If you need to use something similar to the &lt;a href=&quot;templates/builtins#std:templatetag-url&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; template tag in your code, Django provides the following function:</source>
          <target state="translated">如果您需要在代码中使用类似于&lt;a href=&quot;templates/builtins#std:templatetag-url&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt;模板标签的内容，则Django提供以下功能：</target>
        </trans-unit>
        <trans-unit id="65a8bbb933c1c4d11d662bcf552b38b0767fd8e4" translate="yes" xml:space="preserve">
          <source>If you need to use strings with these sequences, store them in template variables or use a custom template tag or filter to workaround the limitation.</source>
          <target state="translated">如果您需要使用这些序列的字符串,请将它们存储在模板变量中,或者使用自定义模板标签或过滤器来解决这个限制。</target>
        </trans-unit>
        <trans-unit id="fcc7733e03c7800262e0a10bde85e2867cb41401" translate="yes" xml:space="preserve">
          <source>If you need two annotations with two separate filters you can use the &lt;code&gt;filter&lt;/code&gt; argument with any aggregate. For example, to generate a list of authors with a count of highly rated books:</source>
          <target state="translated">如果您需要两个带有两个单独过滤器的注释，则可以将 &lt;code&gt;filter&lt;/code&gt; 参数与任何聚合一起使用。例如，要生成包含大量高评价书籍的作者列表：</target>
        </trans-unit>
        <trans-unit id="c897784a3f3666e7ffa637c1500a855cd1d427d9" translate="yes" xml:space="preserve">
          <source>If you obtain an error, you will have to recompile SQLite from source. Otherwise, skip this section.</source>
          <target state="translated">如果你获得一个错误,你将不得不从源码重新编译SQLite。否则,请跳过本节。</target>
        </trans-unit>
        <trans-unit id="741f58ec7bbe2e730412e151c54ddb2163fa4a4f" translate="yes" xml:space="preserve">
          <source>If you often use this pattern:</source>
          <target state="translated">如果你经常使用这种模式。</target>
        </trans-unit>
        <trans-unit id="2f212d93748c23a6b8f8df2fb8bdf19695fec4c9" translate="yes" xml:space="preserve">
          <source>If you omit the extensions, Django will search all available fixture types for a matching fixture. For example:</source>
          <target state="translated">如果你省略了扩展,Django会搜索所有可用的夹具类型来寻找匹配的夹具。例如</target>
        </trans-unit>
        <trans-unit id="b7281fcbaa809c600b8793d4f53e33c8473eac8d" translate="yes" xml:space="preserve">
          <source>If you only need a foreign key value, use the foreign key value that is already on the object you&amp;rsquo;ve got, rather than getting the whole related object and taking its primary key. i.e. do:</source>
          <target state="translated">如果只需要一个外键值，请使用已在对象上已存在的外键值，而不要获取整个相关对象并获取其主键。即：</target>
        </trans-unit>
        <trans-unit id="800fadfa713dccf394aba70d45e9d4112ae330ee" translate="yes" xml:space="preserve">
          <source>If you only pass in a single field, you can also pass in the &lt;code&gt;flat&lt;/code&gt; parameter. If &lt;code&gt;True&lt;/code&gt;, this will mean the returned results are single values, rather than one-tuples. An example should make the difference clearer:</source>
          <target state="translated">如果仅传递单个字段，则还可以传递 &lt;code&gt;flat&lt;/code&gt; 参数。如果为 &lt;code&gt;True&lt;/code&gt; ，则意味着返回的结果是单个值，而不是一元组。一个例子应该使区别更加清楚：</target>
        </trans-unit>
        <trans-unit id="21a02b2eee96e24a49f04e13b9eb6b72eba93d67" translate="yes" xml:space="preserve">
          <source>If you only serialize the Restaurant model:</source>
          <target state="translated">如果你只将餐厅模型序列化。</target>
        </trans-unit>
        <trans-unit id="09d4a126b134831de63cd4bb62765a50804cd5f0" translate="yes" xml:space="preserve">
          <source>If you only want a subset of fields to be serialized, you can specify a &lt;code&gt;fields&lt;/code&gt; argument to the serializer:</source>
          <target state="translated">如果只希望序列化字段的子集，则可以为序列化程序指定一个 &lt;code&gt;fields&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="4364377f218dbdb6f693a8ac230e516ce29b7d3f" translate="yes" xml:space="preserve">
          <source>If you only want files of a particular type, you can use the subscript operator to filter out a medium of interest. For example:</source>
          <target state="translated">如果你只想要特定类型的文件,你可以使用下标操作符来筛选出感兴趣的介质。例如</target>
        </trans-unit>
        <trans-unit id="b7761bd9d1203f2151ef4f8ccf146d8e1530f6c1" translate="yes" xml:space="preserve">
          <source>If you only want to pickle the necessary information to recreate the &lt;code&gt;QuerySet&lt;/code&gt; from the database at a later time, pickle the &lt;code&gt;query&lt;/code&gt; attribute of the &lt;code&gt;QuerySet&lt;/code&gt;. You can then recreate the original &lt;code&gt;QuerySet&lt;/code&gt; (without any results loaded) using some code like this:</source>
          <target state="translated">如果只想腌制必要的信息以在以后从数据库重新创建 &lt;code&gt;QuerySet&lt;/code&gt; ，则腌制 &lt;code&gt;QuerySet&lt;/code&gt; 的 &lt;code&gt;query&lt;/code&gt; 属性。然后，您可以使用以下代码重新创建原始 &lt;code&gt;QuerySet&lt;/code&gt; （不加载任何结果）：</target>
        </trans-unit>
        <trans-unit id="57e21af0c1526d4117f7cb3d0a6e6b7c87ae870c" translate="yes" xml:space="preserve">
          <source>If you opt to use this third method and you don&amp;rsquo;t iterate over the fields with a &lt;code&gt;{% for %}&lt;/code&gt; loop, you&amp;rsquo;ll need to render the primary key field. For example, if you were rendering the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt; fields of a model:</source>
          <target state="translated">如果您选择使用第三种方法，并且没有使用 &lt;code&gt;{% for %}&lt;/code&gt; 循环遍历字段，则需要呈现主键字段。例如，如果要渲染模型的 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;age&lt;/code&gt; 字段：</target>
        </trans-unit>
        <trans-unit id="f4b5a3ee8156aeb994b28c82b8a75b4aeb508550" translate="yes" xml:space="preserve">
          <source>If you override &lt;code&gt;MESSAGE_LEVEL&lt;/code&gt; in your settings file and rely on any of the built-in constants, you must import the constants module directly to avoid the potential for circular imports, e.g.:</source>
          <target state="translated">如果您在设置文件中覆盖 &lt;code&gt;MESSAGE_LEVEL&lt;/code&gt; 并依赖于任何内置常量，则必须直接导入常量模块，以避免潜在的循环导入，例如：</target>
        </trans-unit>
        <trans-unit id="7a02510672f31144e2b0955819bddaf9315a3389" translate="yes" xml:space="preserve">
          <source>If you override &lt;code&gt;MESSAGE_TAGS&lt;/code&gt; in your settings file and rely on any of the built-in constants, you must import the &lt;code&gt;constants&lt;/code&gt; module directly to avoid the potential for circular imports, e.g.:</source>
          <target state="translated">如果您在设置文件中覆盖 &lt;code&gt;MESSAGE_TAGS&lt;/code&gt; 并依赖于任何内置常量，则必须直接导入 &lt;code&gt;constants&lt;/code&gt; 模块，以避免潜在的循环导入，例如：</target>
        </trans-unit>
        <trans-unit id="8b48af8079716221e4c0051117d47bfd44a4b260" translate="yes" xml:space="preserve">
          <source>If you override any of these methods, be sure to call the superclass methods since they add the required elements for each feed format.</source>
          <target state="translated">如果你覆盖了这些方法中的任何一个,一定要调用超级类方法,因为它们为每种feed格式添加了所需的元素。</target>
        </trans-unit>
        <trans-unit id="bdf1c5dfe752c4d781780083470ca6f0e40af894" translate="yes" xml:space="preserve">
          <source>If you override the &lt;code&gt;get_queryset()&lt;/code&gt; method and filter out any rows, Django will return incorrect results. Don&amp;rsquo;t do that. A manager that filters results in &lt;code&gt;get_queryset()&lt;/code&gt; is not appropriate for use as a base manager.</source>
          <target state="translated">如果您覆盖 &lt;code&gt;get_queryset()&lt;/code&gt; 方法并过滤出任何行，则Django将返回错误的结果。不要那样做 过滤结果为 &lt;code&gt;get_queryset()&lt;/code&gt; 的管理器不适合用作基本管理器。</target>
        </trans-unit>
        <trans-unit id="efa7906aab8c824e5c384fdd3e0c6fb2aa3af44d" translate="yes" xml:space="preserve">
          <source>If you override these methods on your model, you must call the parent class&amp;rsquo; methods for these signals to be sent.</source>
          <target state="translated">如果在模型上覆盖了这些方法，则必须调用父类的方法来发送这些信号。</target>
        </trans-unit>
        <trans-unit id="139f65047f08d0c31df99bf777b749aac8b06810" translate="yes" xml:space="preserve">
          <source>If you override this method, make sure that the returned inlines are instances of the classes defined in &lt;a href=&quot;#django.contrib.admin.ModelAdmin.inlines&quot;&gt;&lt;code&gt;inlines&lt;/code&gt;&lt;/a&gt; or you might encounter a &amp;ldquo;Bad Request&amp;rdquo; error when adding related objects.</source>
          <target state="translated">如果重写此方法，请确保返回的内联是内&lt;a href=&quot;#django.contrib.admin.ModelAdmin.inlines&quot;&gt; &lt;code&gt;inlines&lt;/code&gt; &lt;/a&gt;定义的类的实例，否则在添加相关对象时可能会遇到&amp;ldquo;错误请求&amp;rdquo;错误。</target>
        </trans-unit>
        <trans-unit id="cd49ed7d9ce6425ca491d84c25250c4b7a60d8ad" translate="yes" xml:space="preserve">
          <source>If you pass &lt;code&gt;in_bulk()&lt;/code&gt; an empty list, you&amp;rsquo;ll get an empty dictionary.</source>
          <target state="translated">如果将 &lt;code&gt;in_bulk()&lt;/code&gt; 传递给一个空列表，则会得到一个空字典。</target>
        </trans-unit>
        <trans-unit id="01b4c8798ac8d3c2ee64f1b7afb638cce29f856f" translate="yes" xml:space="preserve">
          <source>If you pass a string to Django that has been encoded in some other format, things will go wrong in interesting ways. Usually, Django will raise a &lt;code&gt;UnicodeDecodeError&lt;/code&gt; at some point.</source>
          <target state="translated">如果您将已以其他格式编码的字符串传递给Django，则可能会以有趣的方式出错。通常，Django 有时会引发 &lt;code&gt;UnicodeDecodeError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f875b90b3600dbb8929f4dd6aae0773f46d238bd" translate="yes" xml:space="preserve">
          <source>If you pass an invalid keyword argument, a lookup function will raise &lt;code&gt;TypeError&lt;/code&gt;.</source>
          <target state="translated">如果传递无效的关键字参数，则查找函数将引发 &lt;code&gt;TypeError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a3d957dd878c573465d3ad6cc8518f32e53e656" translate="yes" xml:space="preserve">
          <source>If you pass in a &lt;code&gt;QuerySet&lt;/code&gt; resulting from &lt;code&gt;values()&lt;/code&gt; or &lt;code&gt;values_list()&lt;/code&gt; as the value to an &lt;code&gt;__in&lt;/code&gt; lookup, you need to ensure you are only extracting one field in the result. For example, this will work (filtering on the blog names):</source>
          <target state="translated">如果将由 &lt;code&gt;values()&lt;/code&gt; 或 &lt;code&gt;values_list()&lt;/code&gt; 产生的 &lt;code&gt;QuerySet&lt;/code&gt; 作为值传递给 &lt;code&gt;__in&lt;/code&gt; 查找，则需要确保仅在结果中提取一个字段。例如，这将起作用（过滤博客名称）：</target>
        </trans-unit>
        <trans-unit id="55a3e9f28be7d4fb14de4ec185385e4a1a973d4f" translate="yes" xml:space="preserve">
          <source>If you pass the &lt;a href=&quot;../ref/django-admin#cmdoption-no-color&quot;&gt;&lt;code&gt;--no-color&lt;/code&gt;&lt;/a&gt; option when running your command, all &lt;code&gt;self.style()&lt;/code&gt; calls will return the original string uncolored.</source>
          <target state="translated">如果在运行命令时传递&lt;a href=&quot;../ref/django-admin#cmdoption-no-color&quot;&gt; &lt;code&gt;--no-color&lt;/code&gt; &lt;/a&gt;选项，则所有 &lt;code&gt;self.style()&lt;/code&gt; 调用都将返回未着色的原始字符串。</target>
        </trans-unit>
        <trans-unit id="b79b1f32de698ec64ae613eae6bcf15970d7b876" translate="yes" xml:space="preserve">
          <source>If you plan on using Django&amp;rsquo;s &lt;a href=&quot;../topics/i18n/timezones&quot;&gt;timezone support&lt;/a&gt;, use &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/mysql-tzinfo-to-sql.html&quot;&gt;mysql_tzinfo_to_sql&lt;/a&gt; to load time zone tables into the MySQL database. This needs to be done just once for your MySQL server, not per database.</source>
          <target state="translated">如果计划使用Django的&lt;a href=&quot;../topics/i18n/timezones&quot;&gt;时区支持&lt;/a&gt;，请使用&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/mysql-tzinfo-to-sql.html&quot;&gt;mysql_tzinfo_to_sql&lt;/a&gt;将时区表加载到MySQL数据库中。只需对您的MySQL服务器执行一次，而不是对每个数据库执行一次。</target>
        </trans-unit>
        <trans-unit id="3d07ba410dfae393dcd5dd3868653a7b65add33c" translate="yes" xml:space="preserve">
          <source>If you plan to remove the old app later, you&amp;rsquo;ll need to set the &lt;code&gt;dependencies&lt;/code&gt; property based on whether or not the old app is installed. Otherwise, you&amp;rsquo;ll have missing dependencies once you uninstall the old app. Similarly, you&amp;rsquo;ll need to catch &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#LookupError&quot;&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;apps.get_model()&lt;/code&gt; call that retrieves models from the old app. This approach allows you to deploy your project anywhere without first installing and then uninstalling the old app.</source>
          <target state="translated">如果计划以后删除旧应用程序，则需要根据是否已安装旧应用程序来设置 &lt;code&gt;dependencies&lt;/code&gt; 属性。否则，一旦卸载旧应用程序，您将缺少依赖项。同样，您需要在 &lt;code&gt;apps.get_model()&lt;/code&gt; 调用中捕获&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#LookupError&quot;&gt; &lt;code&gt;LookupError&lt;/code&gt; &lt;/a&gt;，该调用从旧应用程序检索模型。这种方法允许您将项目部署到任何地方，而无需先安装然后卸载旧应用程序。</target>
        </trans-unit>
        <trans-unit id="9073c8632746695fe881c718b8ef04b35fa192e4" translate="yes" xml:space="preserve">
          <source>If you plan to run Django in a multithreaded environment (e.g. Apache using the default MPM module on any modern operating system), then you &lt;strong&gt;must&lt;/strong&gt; set the &lt;code&gt;threaded&lt;/code&gt; option of your Oracle database configuration to &lt;code&gt;True&lt;/code&gt;:</source>
          <target state="translated">如果计划在多线程环境中运行Django（例如，在任何现代操作系统上使用默认的MPM模块的Apache），则&lt;strong&gt;必须&lt;/strong&gt;将Oracle数据库配置的 &lt;code&gt;threaded&lt;/code&gt; 选项设置为 &lt;code&gt;True&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8d225f0abfbc3c7de48d5bc9786ca2d1091b6fe9" translate="yes" xml:space="preserve">
          <source>If you plan to use Django&amp;rsquo;s &lt;code&gt;manage.py migrate&lt;/code&gt; command to automatically create database tables for your models (after first installing Django and creating a project), you&amp;rsquo;ll need to ensure that Django has permission to create and alter tables in the database you&amp;rsquo;re using; if you plan to manually create the tables, you can grant Django &lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt; and &lt;code&gt;DELETE&lt;/code&gt; permissions. After creating a database user with these permissions, you&amp;rsquo;ll specify the details in your project&amp;rsquo;s settings file, see &lt;a href=&quot;../ref/settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">如果您打算使用Django的 &lt;code&gt;manage.py migrate&lt;/code&gt; 命令自动为模型创建数据库表（在首次安装Django并创建项目之后），则需要确保Django有权在您的数据库中创建和更改表。重新使用如果计划手动创建表，则可以授予Django &lt;code&gt;SELECT&lt;/code&gt; ， &lt;code&gt;INSERT&lt;/code&gt; ， &lt;code&gt;UPDATE&lt;/code&gt; 和 &lt;code&gt;DELETE&lt;/code&gt; 权限。创建具有这些权限的数据库用户后，您将在项目的设置文件中指定详细信息，有关详细信息，请参见&lt;a href=&quot;../ref/settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1cf8ce09ee94ba97497f8c75ae9497949e7ca9e6" translate="yes" xml:space="preserve">
          <source>If you plan to use Django&amp;rsquo;s database API functionality, you&amp;rsquo;ll need to make sure a database server is running. Django supports many different database servers and is officially supported with &lt;a href=&quot;https://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt;, &lt;a href=&quot;https://mariadb.org/&quot;&gt;MariaDB&lt;/a&gt;, &lt;a href=&quot;https://www.mysql.com/&quot;&gt;MySQL&lt;/a&gt;, &lt;a href=&quot;https://www.oracle.com/&quot;&gt;Oracle&lt;/a&gt; and &lt;a href=&quot;https://www.sqlite.org/&quot;&gt;SQLite&lt;/a&gt;.</source>
          <target state="translated">如果您打算使用Django的数据库API功能，则需要确保数据库服务器正在运行。Django支持许多不同的数据库服务器，并且&lt;a href=&quot;https://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt;，&lt;a href=&quot;https://mariadb.org/&quot;&gt;MariaDB&lt;/a&gt;，&lt;a href=&quot;https://www.mysql.com/&quot;&gt;MySQL&lt;/a&gt;，&lt;a href=&quot;https://www.oracle.com/&quot;&gt;Oracle&lt;/a&gt;和&lt;a href=&quot;https://www.sqlite.org/&quot;&gt;SQLite&lt;/a&gt;正式受支持。</target>
        </trans-unit>
        <trans-unit id="2d29104b9899b9d86e33356f84568767e51c25b0" translate="yes" xml:space="preserve">
          <source>If you point the test client at a view that raises an exception and &lt;code&gt;Client.raise_request_exception&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, that exception will be visible in the test case. You can then use a standard &lt;code&gt;try ... except&lt;/code&gt; block or &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaises&quot;&gt;&lt;code&gt;assertRaises()&lt;/code&gt;&lt;/a&gt; to test for exceptions.</source>
          <target state="translated">如果将测试客户端指向引发异常的视图，并且 &lt;code&gt;Client.raise_request_exception&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ，则该异常将在测试用例中可见。然后，您可以使用标准 &lt;code&gt;try ... except&lt;/code&gt; block或&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaises&quot;&gt; &lt;code&gt;assertRaises()&lt;/code&gt; &lt;/a&gt;之外）来测试异常。</target>
        </trans-unit>
        <trans-unit id="9a1ee774d1d6b71e65f51c9761d622d272f3e630" translate="yes" xml:space="preserve">
          <source>If you press &lt;code&gt;Ctrl-C&lt;/code&gt; while the tests are running, the test runner will wait for the currently running test to complete and then exit gracefully. During a graceful exit the test runner will output details of any test failures, report on how many tests were run and how many errors and failures were encountered, and destroy any test databases as usual. Thus pressing &lt;code&gt;Ctrl-C&lt;/code&gt; can be very useful if you forget to pass the &lt;a href=&quot;../../ref/django-admin#cmdoption-test-failfast&quot;&gt;&lt;code&gt;--failfast&lt;/code&gt;&lt;/a&gt; option, notice that some tests are unexpectedly failing and want to get details on the failures without waiting for the full test run to complete.</source>
          <target state="translated">如果在测试运行时按 &lt;code&gt;Ctrl-C&lt;/code&gt; ，则测试运行器将等待当前运行的测试完成，然后正常退出。在正常退出期间，测试运行程序将输出所有测试失败的详细信息，报告已运行了多少测试以及遇到了多少错误和失败，并照常销毁了所有测试数据库。因此，如果您忘记通过&lt;a href=&quot;../../ref/django-admin#cmdoption-test-failfast&quot;&gt; &lt;code&gt;--failfast&lt;/code&gt; &lt;/a&gt;选项，请注意某些测试意外失败并且想要获取有关失败的详细信息而无需等待完整的测试运行，则按 &lt;code&gt;Ctrl-C&lt;/code&gt; 很有用。</target>
        </trans-unit>
        <trans-unit id="9fd3c524d495f19aa19c27cdbbee5399534aacb6" translate="yes" xml:space="preserve">
          <source>If you provide &lt;code&gt;content_type&lt;/code&gt; as &lt;em&gt;application/json&lt;/em&gt;, the &lt;code&gt;data&lt;/code&gt; is serialized using &lt;a href=&quot;https://docs.python.org/3/library/json.html#json.dumps&quot;&gt;&lt;code&gt;json.dumps()&lt;/code&gt;&lt;/a&gt; if it&amp;rsquo;s a dict, list, or tuple. Serialization is performed with &lt;a href=&quot;../serialization#django.core.serializers.json.DjangoJSONEncoder&quot;&gt;&lt;code&gt;DjangoJSONEncoder&lt;/code&gt;&lt;/a&gt; by default, and can be overridden by providing a &lt;code&gt;json_encoder&lt;/code&gt; argument to &lt;a href=&quot;#django.test.Client&quot;&gt;&lt;code&gt;Client&lt;/code&gt;&lt;/a&gt;. This serialization also happens for &lt;a href=&quot;#django.test.Client.put&quot;&gt;&lt;code&gt;put()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.test.Client.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#django.test.Client.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; requests.</source>
          <target state="translated">如果提供 &lt;code&gt;content_type&lt;/code&gt; 作为&lt;em&gt;application / json&lt;/em&gt;，则 &lt;code&gt;data&lt;/code&gt; 是字典，列表或元组时，将使用&lt;a href=&quot;https://docs.python.org/3/library/json.html#json.dumps&quot;&gt; &lt;code&gt;json.dumps()&lt;/code&gt; 进行&lt;/a&gt;序列化。默认情况下，序列化是使用&lt;a href=&quot;../serialization#django.core.serializers.json.DjangoJSONEncoder&quot;&gt; &lt;code&gt;DjangoJSONEncoder&lt;/code&gt; &lt;/a&gt;执行的，可以通过为&lt;a href=&quot;#django.test.Client&quot;&gt; &lt;code&gt;Client&lt;/code&gt; &lt;/a&gt;提供 &lt;code&gt;json_encoder&lt;/code&gt; 参数来覆盖序列化。此序列化也会发生在&lt;a href=&quot;#django.test.Client.put&quot;&gt; &lt;code&gt;put()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#django.test.Client.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.test.Client.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt;请求中。</target>
        </trans-unit>
        <trans-unit id="d70400506fc271afc5226a9156b79bd7b0a3892e" translate="yes" xml:space="preserve">
          <source>If you provide a &lt;code&gt;description&lt;/code&gt; in your &lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt;&lt;code&gt;Feed&lt;/code&gt;&lt;/a&gt; class, Django will &lt;em&gt;not&lt;/em&gt; automatically put that into the &lt;code&gt;subtitle&lt;/code&gt; element, because a subtitle and description are not necessarily the same thing. Instead, you should define a &lt;code&gt;subtitle&lt;/code&gt; attribute.</source>
          <target state="translated">如果您在&lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt; &lt;code&gt;Feed&lt;/code&gt; &lt;/a&gt;类中提供了 &lt;code&gt;description&lt;/code&gt; ，则Django &lt;em&gt;不会&lt;/em&gt;自动将其放入 &lt;code&gt;subtitle&lt;/code&gt; 元素，因为字幕和描述不一定是同一回事。相反，您应该定义 &lt;code&gt;subtitle&lt;/code&gt; 属性。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aa823e0a0041a6947816c68759b373adb5e9f2ff" translate="yes" xml:space="preserve">
          <source>If you provide a URL with both an encoded GET data and a data argument, the data argument will take precedence.</source>
          <target state="translated">如果您提供的URL同时包含编码的GET数据和数据参数,数据参数将优先。</target>
        </trans-unit>
        <trans-unit id="10f0311a7904a5e576592cc2026a0cba559e4f85" translate="yes" xml:space="preserve">
          <source>If you provide an &lt;a href=&quot;applications#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; instance as the sender argument, please ensure that the signal is registered in &lt;a href=&quot;applications#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;ready()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;AppConfig&lt;/code&gt;s are recreated for tests that run with a modified set of &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; (such as when settings are overridden) and such signals should be connected for each new &lt;code&gt;AppConfig&lt;/code&gt; instance.</source>
          <target state="translated">如果您提供&lt;a href=&quot;applications#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt;实例作为sender参数，请确保信号已在&lt;a href=&quot;applications#django.apps.AppConfig.ready&quot;&gt; &lt;code&gt;ready()&lt;/code&gt; 中&lt;/a&gt;注册。将为使用修改后的&lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;集运行的测试（例如，当设置被覆盖时）重新创建 &lt;code&gt;AppConfig&lt;/code&gt; ，并且应该为每个新的 &lt;code&gt;AppConfig&lt;/code&gt; 实例连接此类信号。</target>
        </trans-unit>
        <trans-unit id="b4f73da389b543957cd3a9484131a18f37edca2b" translate="yes" xml:space="preserve">
          <source>If you provide an anonymous user, &lt;a href=&quot;#std:templatetag-get_flatpages&quot;&gt;&lt;code&gt;get_flatpages&lt;/code&gt;&lt;/a&gt; will behave the same as if you hadn&amp;rsquo;t provided a user &amp;ndash; i.e., it will only show you public flatpages.</source>
          <target state="translated">如果提供匿名用户，则&lt;a href=&quot;#std:templatetag-get_flatpages&quot;&gt; &lt;code&gt;get_flatpages&lt;/code&gt; 的&lt;/a&gt;行为与未提供用户的行为相同-即，它将仅向您显示公共平面。</target>
        </trans-unit>
        <trans-unit id="9045948db59d0563c0a89ef13a497ad48bb714a4" translate="yes" xml:space="preserve">
          <source>If you provide any other &lt;code&gt;content_type&lt;/code&gt; (e.g. &lt;em&gt;text/xml&lt;/em&gt; for an XML payload), the contents of &lt;code&gt;data&lt;/code&gt; are sent as-is in the POST request, using &lt;code&gt;content_type&lt;/code&gt; in the HTTP &lt;code&gt;Content-Type&lt;/code&gt; header.</source>
          <target state="translated">如果提供任何其他 &lt;code&gt;content_type&lt;/code&gt; （例如，XML有效负载的&lt;em&gt;text / xml&lt;/em&gt;），则使用HTTP &lt;code&gt;Content-Type&lt;/code&gt; 标头中的 &lt;code&gt;content_type&lt;/code&gt; 在POST请求中按原样发送 &lt;code&gt;data&lt;/code&gt; 内容。</target>
        </trans-unit>
        <trans-unit id="910309a8687236b4eef1cb1fc342a8ae2c903a62" translate="yes" xml:space="preserve">
          <source>If you provide the &lt;code&gt;app_label&lt;/code&gt; argument, &lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; will automatically create the package if it doesn&amp;rsquo;t already exist.</source>
          <target state="translated">如果提供 &lt;code&gt;app_label&lt;/code&gt; 参数，&lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt;将自动创建该软件包（如果尚不存在）。</target>
        </trans-unit>
        <trans-unit id="6a321433ae0fb44c3dba2485b43003a37dcff291" translate="yes" xml:space="preserve">
          <source>If you raise a &lt;code&gt;StopUpload&lt;/code&gt; or a &lt;code&gt;SkipFile&lt;/code&gt; exception, the upload will abort or the file will be completely skipped.</source>
          <target state="translated">如果引发 &lt;code&gt;StopUpload&lt;/code&gt; 或 &lt;code&gt;SkipFile&lt;/code&gt; 异常，则上传将中止，或者文件将被完全跳过。</target>
        </trans-unit>
        <trans-unit id="f5c930b9d9ff449d37bc58a058280baf8e9d25ba" translate="yes" xml:space="preserve">
          <source>If you really need to do the conversion yourself, you must ensure the datetime is converted to the appropriate time zone first. Usually, this will be the current timezone:</source>
          <target state="translated">如果你真的需要自己进行转换,你必须先确保将日期时间转换到合适的时区。通常情况下,这将是当前的时区。</target>
        </trans-unit>
        <trans-unit id="aba032f0055b3ba362cd40902bc9f74174f0f582" translate="yes" xml:space="preserve">
          <source>If you reference &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; directly (for example, by referring to it in a foreign key), your code will not work in projects where the &lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt;&lt;code&gt;AUTH_USER_MODEL&lt;/code&gt;&lt;/a&gt; setting has been changed to a different user model.</source>
          <target state="translated">如果直接引用&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;（例如，通过外键引用它），则您的代码将无法在&lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt; &lt;code&gt;AUTH_USER_MODEL&lt;/code&gt; &lt;/a&gt;设置更改为其他用户模型的项目中使用。</target>
        </trans-unit>
        <trans-unit id="0e1ecb9bcfed717dbcef9591ae9c8802ed73bd90" translate="yes" xml:space="preserve">
          <source>If you render a bound &lt;code&gt;Form&lt;/code&gt; object, the act of rendering will automatically run the form&amp;rsquo;s validation if it hasn&amp;rsquo;t already happened, and the HTML output will include the validation errors as a &lt;code&gt;&amp;lt;ul class=&quot;errorlist&quot;&amp;gt;&lt;/code&gt; near the field. The particular positioning of the error messages depends on the output method you&amp;rsquo;re using:</source>
          <target state="translated">如果渲染绑定的 &lt;code&gt;Form&lt;/code&gt; 对象，则渲染动作将自动运行表单的验证（如果尚未发生），并且HTML输出将在字段附近以 &lt;code&gt;&amp;lt;ul class=&quot;errorlist&quot;&amp;gt;&lt;/code&gt; 的形式包含验证错误。错误消息的具体位置取决于您使用的输出方法：</target>
        </trans-unit>
        <trans-unit id="07459c1428179836772ae027ec5297d2da1c0fb6" translate="yes" xml:space="preserve">
          <source>If you require even more control over inheritance, define your assets using a &lt;a href=&quot;#dynamic-property&quot;&gt;dynamic property&lt;/a&gt;. Dynamic properties give you complete control over which files are inherited, and which are not.</source>
          <target state="translated">如果您需要对继承的更多控制，请使用&lt;a href=&quot;#dynamic-property&quot;&gt;dynamic属性&lt;/a&gt;定义资产。动态属性使您可以完全控制哪些文件是继承的，哪些不是。</target>
        </trans-unit>
        <trans-unit id="6b05712d776517317396db80b42d65e9ba95c552" translate="yes" xml:space="preserve">
          <source>If you require support for a concrete data type other than &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;str&lt;/code&gt;, you can subclass &lt;code&gt;Choices&lt;/code&gt; and the required concrete data type, e.g. &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; for use with &lt;a href=&quot;#django.db.models.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果您需要支持除 &lt;code&gt;int&lt;/code&gt; 或 &lt;code&gt;str&lt;/code&gt; 之外的具体数据类型，则可以将 &lt;code&gt;Choices&lt;/code&gt; 和所需的具体数据类型（例如与&lt;a href=&quot;#django.db.models.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt;一起使用的&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;子类化：</target>
        </trans-unit>
        <trans-unit id="db9d39b35fe6f2b0b25e26ce3e859ec9c161c377" translate="yes" xml:space="preserve">
          <source>If you rotate your secret key, all of the above will be invalidated. Secret keys are not used for passwords of users and key rotation will not affect them.</source>
          <target state="translated">如果你轮换秘钥,以上都将失效。秘钥不用于用户的密码,轮换秘钥不会影响用户的密码。</target>
        </trans-unit>
        <trans-unit id="ce316f0b6ed1ed42439817ae8b4f2b1e4a6893ce" translate="yes" xml:space="preserve">
          <source>If you run this script as a user with normal privileges (recommended), you might not have access to start a port on a low port number. Low port numbers are reserved for the superuser (root).</source>
          <target state="translated">如果您以普通用户的身份运行这个脚本 (推荐),您可能无法在低端口号上启动一个端口。低端口号是为超级用户(root)保留的。</target>
        </trans-unit>
        <trans-unit id="581d2693ba51ca9c6d74a9c3aec8c1d2ed991658" translate="yes" xml:space="preserve">
          <source>If you set &lt;a href=&quot;#std:setting-LOGGING_CONFIG&quot;&gt;&lt;code&gt;LOGGING_CONFIG&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;None&lt;/code&gt;, the logging configuration process will be skipped.</source>
          <target state="translated">如果将&lt;a href=&quot;#std:setting-LOGGING_CONFIG&quot;&gt; &lt;code&gt;LOGGING_CONFIG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;None&lt;/code&gt; ，则将跳过日志记录配置过程。</target>
        </trans-unit>
        <trans-unit id="6c3c4b3192dde41e8664985f2f99b630a848a1da" translate="yes" xml:space="preserve">
          <source>If you set &lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt;, you also need to properly set the &lt;a href=&quot;../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt;&lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">如果将&lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;False&lt;/code&gt; ，则还需要正确设置&lt;a href=&quot;../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt; &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="912981cf3b9022683052e38d66b9a92981f3bcd3" translate="yes" xml:space="preserve">
          <source>If you set &lt;a href=&quot;../settings#std:setting-APPEND_SLASH&quot;&gt;&lt;code&gt;APPEND_SLASH&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt;, you must remove the slash in the catchall pattern or flatpages without a trailing slash will not be matched.</source>
          <target state="translated">如果将&lt;a href=&quot;../settings#std:setting-APPEND_SLASH&quot;&gt; &lt;code&gt;APPEND_SLASH&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;False&lt;/code&gt; ，则必须删除所有模式中的斜杠，否则没有尾随斜杠的平版将不匹配。</target>
        </trans-unit>
        <trans-unit id="395ad5010523ffc1e4b670f7488f023e63a22e17" translate="yes" xml:space="preserve">
          <source>If you set &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;, access settings values somehow, &lt;em&gt;then&lt;/em&gt; call &lt;code&gt;configure()&lt;/code&gt;, Django will raise a &lt;code&gt;RuntimeError&lt;/code&gt; indicating that settings have already been configured. There is a property for this purpose:</source>
          <target state="translated">如果您设置 &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; ，以某种方式访问​​设置值，&lt;em&gt;然后&lt;/em&gt;调用 &lt;code&gt;configure()&lt;/code&gt; ，Django将引发 &lt;code&gt;RuntimeError&lt;/code&gt; ,表明设置已被配置。有一个用于此目的的属性：</target>
        </trans-unit>
        <trans-unit id="fe70b07e6ecfbabb2180c75d50c0a38a0f922032" translate="yes" xml:space="preserve">
          <source>If you set &lt;code&gt;follow&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt; the client will follow any redirects and a &lt;code&gt;redirect_chain&lt;/code&gt; attribute will be set in the response object containing tuples of the intermediate urls and status codes.</source>
          <target state="translated">如果将 &lt;code&gt;follow&lt;/code&gt; 设置为 &lt;code&gt;True&lt;/code&gt; ,则客户端将遵循任何重定向，并且将在包含中间URL和状态代码的元组的响应对象中设置 &lt;code&gt;redirect_chain&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="3b6d0e5b836e0ffb759b558f1953cb5c40ecbc36" translate="yes" xml:space="preserve">
          <source>If you set &lt;code&gt;secure&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt; the client will emulate an HTTPS request.</source>
          <target state="translated">如果将 &lt;code&gt;secure&lt;/code&gt; 设置为 &lt;code&gt;True&lt;/code&gt; ,则客户端将模拟HTTPS请求。</target>
        </trans-unit>
        <trans-unit id="ed87f4fbcb2623f91b4272494cedf3618bd43220" translate="yes" xml:space="preserve">
          <source>If you set the &lt;a href=&quot;settings#std:setting-SECURE_SSL_REDIRECT&quot;&gt;&lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt;&lt;/a&gt; setting to True, &lt;code&gt;SecurityMiddleware&lt;/code&gt; will permanently (HTTP 301) redirect all HTTP connections to HTTPS.</source>
          <target state="translated">如果将&lt;a href=&quot;settings#std:setting-SECURE_SSL_REDIRECT&quot;&gt; &lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt; &lt;/a&gt;设置设置为True， &lt;code&gt;SecurityMiddleware&lt;/code&gt; 将永久（HTTP 301）将所有HTTP连接重定向到HTTPS。</target>
        </trans-unit>
        <trans-unit id="804dd8b3f2f0998b19444a70dea6c4f275857e45" translate="yes" xml:space="preserve">
          <source>If you specify a &lt;code&gt;max_length&lt;/code&gt; attribute, it will be reflected in the &lt;a href=&quot;../forms/widgets#django.forms.Textarea&quot;&gt;&lt;code&gt;Textarea&lt;/code&gt;&lt;/a&gt; widget of the auto-generated form field. However it is not enforced at the model or database level. Use a &lt;a href=&quot;#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; for that.</source>
          <target state="translated">如果指定 &lt;code&gt;max_length&lt;/code&gt; 属性，它将反映在自动生成的表单字段的&lt;a href=&quot;../forms/widgets#django.forms.Textarea&quot;&gt; &lt;code&gt;Textarea&lt;/code&gt; &lt;/a&gt;小部件中。但是，它不是在模型或数据库级别强制执行的。为此使用&lt;a href=&quot;#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9247f5ac3aa9a42d00715df98ff9b7c3141c9780" translate="yes" xml:space="preserve">
          <source>If you specify a &lt;code&gt;mimetype&lt;/code&gt; of &lt;code&gt;message/rfc822&lt;/code&gt;, it will also accept &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;django.core.mail.EmailMessage&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3/library/email.compat32-message.html#email.message.Message&quot;&gt;&lt;code&gt;email.message.Message&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果指定了 &lt;code&gt;mimetype&lt;/code&gt; 的 &lt;code&gt;message/rfc822&lt;/code&gt; ，它也将接受&lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;django.core.mail.EmailMessage&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3/library/email.compat32-message.html#email.message.Message&quot;&gt; &lt;code&gt;email.message.Message&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="305c89bb0d6f74a15dce564b912bcda21f76247e" translate="yes" xml:space="preserve">
          <source>If you specify a string value or a &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt;, it may contain &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; formatting, which will be replaced by the date/time of the file upload (so that uploaded files don&amp;rsquo;t fill up the given directory). For example:</source>
          <target state="translated">如果指定字符串值或&lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;，则它可能包含&lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt;格式，该格式将替换为文件上传的日期/时间（以使上传的文件不会填满给定的目录）。例如：</target>
        </trans-unit>
        <trans-unit id="614fc3b6599f9800b8c0df59893296044168cf2c" translate="yes" xml:space="preserve">
          <source>If you specify both the &lt;a href=&quot;#django.views.generic.edit.ModelFormMixin.fields&quot;&gt;&lt;code&gt;fields&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.views.generic.edit.FormMixin.form_class&quot;&gt;&lt;code&gt;form_class&lt;/code&gt;&lt;/a&gt; attributes, an &lt;a href=&quot;../exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt;&lt;code&gt;ImproperlyConfigured&lt;/code&gt;&lt;/a&gt; exception will be raised.</source>
          <target state="translated">如果同时指定&lt;a href=&quot;#django.views.generic.edit.ModelFormMixin.fields&quot;&gt; &lt;code&gt;fields&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.views.generic.edit.FormMixin.form_class&quot;&gt; &lt;code&gt;form_class&lt;/code&gt; &lt;/a&gt;属性，则会引发&lt;a href=&quot;../exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt; &lt;code&gt;ImproperlyConfigured&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="58aa7a9ed4ab489b04c05563f7b555c7cbfda0ee" translate="yes" xml:space="preserve">
          <source>If you specify both the &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ModelFormMixin.fields&quot;&gt;&lt;code&gt;fields&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.FormMixin.form_class&quot;&gt;&lt;code&gt;form_class&lt;/code&gt;&lt;/a&gt; attributes, an &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt;&lt;code&gt;ImproperlyConfigured&lt;/code&gt;&lt;/a&gt; exception will be raised.</source>
          <target state="translated">如果同时指定&lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ModelFormMixin.fields&quot;&gt; &lt;code&gt;fields&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.FormMixin.form_class&quot;&gt; &lt;code&gt;form_class&lt;/code&gt; &lt;/a&gt;属性，则会引发&lt;a href=&quot;../../ref/exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt; &lt;code&gt;ImproperlyConfigured&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="e42f6fe4a1eafc9cbe0fe1ed0eb44c26cf3abac5" translate="yes" xml:space="preserve">
          <source>If you try to compile message files with incorrectly flagged strings, you&amp;rsquo;ll get an error message like &lt;code&gt;number of format specifications in 'msgid' and
'msgstr' does not match&lt;/code&gt; or &lt;code&gt;'msgstr' is not a valid Python format string,
unlike 'msgid'&lt;/code&gt;.</source>
          <target state="translated">如果您尝试使用错误标记的字符串来编译消息文件，则会收到一条错误消息，例如 &lt;code&gt;number of format specifications in 'msgid' and 'msgstr' does not match&lt;/code&gt; 或 &lt;code&gt;'msgstr' is not a valid Python format string, unlike 'msgid'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5f573bc4c6fc46c2deb1fdead6cdb73bb482a8e" translate="yes" xml:space="preserve">
          <source>If you try to order by a field that is a relation to another model, Django will use the default ordering on the related model, or order by the related model&amp;rsquo;s primary key if there is no &lt;a href=&quot;options#django.db.models.Options.ordering&quot;&gt;&lt;code&gt;Meta.ordering&lt;/code&gt;&lt;/a&gt; specified. For example, since the &lt;code&gt;Blog&lt;/code&gt; model has no default ordering specified:</source>
          <target state="translated">如果您尝试通过与另一个模型有关系的字段进行排序，则Django将在相关模型上使用默认排序，或者在未指定&lt;a href=&quot;options#django.db.models.Options.ordering&quot;&gt; &lt;code&gt;Meta.ordering&lt;/code&gt; &lt;/a&gt;的情况下，通过相关模型的主键进行排序。例如，由于 &lt;code&gt;Blog&lt;/code&gt; 模型没有指定默认顺序，因此：</target>
        </trans-unit>
        <trans-unit id="2949a48f95fe7e8506fdc6f5701b10f53659defb" translate="yes" xml:space="preserve">
          <source>If you try to run any of these parts from a thread where there is a &lt;em&gt;running event loop&lt;/em&gt;, you will get a &lt;a href=&quot;../ref/exceptions#django.core.exceptions.SynchronousOnlyOperation&quot;&gt;&lt;code&gt;SynchronousOnlyOperation&lt;/code&gt;&lt;/a&gt; error. Note that you don&amp;rsquo;t have to be inside an async function directly to have this error occur. If you have called a synchronous function directly from an asynchronous function without going through something like &lt;code&gt;sync_to_async&lt;/code&gt; or a threadpool, then it can also occur, as your code is still running in an asynchronous context.</source>
          <target state="translated">如果尝试从存在&lt;em&gt;运行中事件循环&lt;/em&gt;的线程中运行这些部件中的任何一个，则将收到&lt;a href=&quot;../ref/exceptions#django.core.exceptions.SynchronousOnlyOperation&quot;&gt; &lt;code&gt;SynchronousOnlyOperation&lt;/code&gt; &lt;/a&gt;错误。请注意，您不必直接在异步函数内部即可发生此错误。如果您直接从异步函数中调用了同步函数而不经过了诸如 &lt;code&gt;sync_to_async&lt;/code&gt; 或线程池之类的操作，那么它也可能发生，因为您的代码仍在异步上下文中运行。</target>
        </trans-unit>
        <trans-unit id="c6693a4c5d595d8b5d83b35a6ac98c4c846239c9" translate="yes" xml:space="preserve">
          <source>If you use &lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt;&lt;code&gt;django.contrib.staticfiles&lt;/code&gt;&lt;/a&gt; as explained above, &lt;a href=&quot;../../ref/django-admin#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; will do this automatically when &lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;. If you don&amp;rsquo;t have &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; in &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;, you can still manually serve static files using the &lt;a href=&quot;../../ref/views#django.views.static.serve&quot;&gt;&lt;code&gt;django.views.static.serve()&lt;/code&gt;&lt;/a&gt; view.</source>
          <target state="translated">如果如上所述使用&lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt; &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; &lt;/a&gt;，则当&lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; 时，&lt;a href=&quot;../../ref/django-admin#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; &lt;/a&gt;将自动执行此操作。如果你没有 &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; 在&lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;，你仍然可以使用手动静态文件&lt;a href=&quot;../../ref/views#django.views.static.serve&quot;&gt; &lt;code&gt;django.views.static.serve()&lt;/code&gt; &lt;/a&gt;视图。</target>
        </trans-unit>
        <trans-unit id="8418102b1538f4a4f474193f2874d5390e66e014" translate="yes" xml:space="preserve">
          <source>If you use &lt;a href=&quot;builtins#std:templatetag-extends&quot;&gt;&lt;code&gt;{% extends %}&lt;/code&gt;&lt;/a&gt; in a template, it must be the first template tag in that template. Template inheritance won&amp;rsquo;t work, otherwise.</source>
          <target state="translated">如果在模板中使用&lt;a href=&quot;builtins#std:templatetag-extends&quot;&gt; &lt;code&gt;{% extends %}&lt;/code&gt; &lt;/a&gt;，则它必须是该模板中的第一个模板标记。模板继承将不起作用，否则。</target>
        </trans-unit>
        <trans-unit id="3afccef5fe1cf8e14fa9070553ef6dbbc3b09b80" translate="yes" xml:space="preserve">
          <source>If you use &lt;a href=&quot;querysets#django.db.models.query.QuerySet.prefetch_related&quot;&gt;&lt;code&gt;prefetch_related()&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;add()&lt;/code&gt;, &lt;code&gt;remove()&lt;/code&gt;, &lt;code&gt;clear()&lt;/code&gt;, and &lt;code&gt;set()&lt;/code&gt; methods clear the prefetched cache.</source>
          <target state="translated">如果使用&lt;a href=&quot;querysets#django.db.models.query.QuerySet.prefetch_related&quot;&gt; &lt;code&gt;prefetch_related()&lt;/code&gt; &lt;/a&gt;，则 &lt;code&gt;add()&lt;/code&gt; ， &lt;code&gt;remove()&lt;/code&gt; ， &lt;code&gt;clear()&lt;/code&gt; 和 &lt;code&gt;set()&lt;/code&gt; 方法将清除预取的缓存。</target>
        </trans-unit>
        <trans-unit id="f71c7943193c59ecd27d1e4581a08197f0907309" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;CacheMiddleware&lt;/code&gt;, put &lt;code&gt;LocaleMiddleware&lt;/code&gt; after it.</source>
          <target state="translated">如果使用 &lt;code&gt;CacheMiddleware&lt;/code&gt; ，请将 &lt;code&gt;LocaleMiddleware&lt;/code&gt; 放在其后。</target>
        </trans-unit>
        <trans-unit id="fc8b56cb887dca8be941443856060957b865139d" translate="yes" xml:space="preserve">
          <source>If you use a &lt;code&gt;values()&lt;/code&gt; clause after an &lt;a href=&quot;#django.db.models.query.QuerySet.extra&quot;&gt;&lt;code&gt;extra()&lt;/code&gt;&lt;/a&gt; call, any fields defined by a &lt;code&gt;select&lt;/code&gt; argument in the &lt;a href=&quot;#django.db.models.query.QuerySet.extra&quot;&gt;&lt;code&gt;extra()&lt;/code&gt;&lt;/a&gt; must be explicitly included in the &lt;code&gt;values()&lt;/code&gt; call. Any &lt;a href=&quot;#django.db.models.query.QuerySet.extra&quot;&gt;&lt;code&gt;extra()&lt;/code&gt;&lt;/a&gt; call made after a &lt;code&gt;values()&lt;/code&gt; call will have its extra selected fields ignored.</source>
          <target state="translated">如果您使用 &lt;code&gt;values()&lt;/code&gt; 的条款后&lt;a href=&quot;#django.db.models.query.QuerySet.extra&quot;&gt; &lt;code&gt;extra()&lt;/code&gt; &lt;/a&gt;调用，通过定义的任何字段 &lt;code&gt;select&lt;/code&gt; 在参数&lt;a href=&quot;#django.db.models.query.QuerySet.extra&quot;&gt; &lt;code&gt;extra()&lt;/code&gt; &lt;/a&gt;必须明确列入 &lt;code&gt;values()&lt;/code&gt; 调用。在 &lt;code&gt;values()&lt;/code&gt; 调用之后进行的任何&lt;a href=&quot;#django.db.models.query.QuerySet.extra&quot;&gt; &lt;code&gt;extra()&lt;/code&gt; &lt;/a&gt;调用都将忽略其额外选择的字段。</target>
        </trans-unit>
        <trans-unit id="5138658165170713fe8921c287483c369dd879d1" translate="yes" xml:space="preserve">
          <source>If you use a variable that doesn&amp;rsquo;t exist, the template system will insert the value of the &lt;code&gt;string_if_invalid&lt;/code&gt; option, which is set to &lt;code&gt;''&lt;/code&gt; (the empty string) by default.</source>
          <target state="translated">如果使用不存在的变量，则模板系统将插入 &lt;code&gt;string_if_invalid&lt;/code&gt; 选项的值，该选项的默认值设置为 &lt;code&gt;''&lt;/code&gt; （空字符串）。</target>
        </trans-unit>
        <trans-unit id="d3110291b387e92d09039d47bcce85bc592e4fda" translate="yes" xml:space="preserve">
          <source>If you use an &lt;code&gt;initial&lt;/code&gt; for displaying a formset, you should pass the same &lt;code&gt;initial&lt;/code&gt; when processing that formset&amp;rsquo;s submission so that the formset can detect which forms were changed by the user. For example, you might have something like: &lt;code&gt;ArticleFormSet(request.POST, initial=[...])&lt;/code&gt;.</source>
          <target state="translated">如果您使用的是 &lt;code&gt;initial&lt;/code&gt; 显示一个formset，你应该通过相同的 &lt;code&gt;initial&lt;/code&gt; 处理该表单集的陈述时，使该formset可以检测其形式是由用户更改。例如，您可能会有类似的内容： &lt;code&gt;ArticleFormSet(request.POST, initial=[...])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ab4496b070493e1cbd88967385539fa01b3ea78" translate="yes" xml:space="preserve">
          <source>If you use any of Django&amp;rsquo;s custom &lt;code&gt;TestCase&lt;/code&gt; classes, the test runner will clear the contents of the test email outbox at the start of each test case.</source>
          <target state="translated">如果您使用Django的任何自定义 &lt;code&gt;TestCase&lt;/code&gt; 类，则测试运行器将在每个测试用例开始时清除测试电子邮件发件箱的内容。</target>
        </trans-unit>
        <trans-unit id="af63582f03bb6e4c9e15c7b92a57d1ba5b4b0680" translate="yes" xml:space="preserve">
          <source>If you use caching middleware, it&amp;rsquo;s important to put each half in the right place within the &lt;a href=&quot;../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting. That&amp;rsquo;s because the cache middleware needs to know which headers by which to vary the cache storage. Middleware always adds something to the &lt;code&gt;Vary&lt;/code&gt; response header when it can.</source>
          <target state="translated">如果使用缓存中间件，则将每一半放在&lt;a href=&quot;../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt;设置中的正确位置很重要。这是因为缓存中间件需要知道通过哪些头来更改缓存存储。中间件总是尽可能向 &lt;code&gt;Vary&lt;/code&gt; 响应标头添加一些内容。</target>
        </trans-unit>
        <trans-unit id="eb3ba9d9638be9dba67498258cd53f1f8d8c441d" translate="yes" xml:space="preserve">
          <source>If you use cookie-based sessions, pay extra care that your secret key is always kept completely secret, for any system which might be remotely accessible.</source>
          <target state="translated">如果你使用基于cookie的会话,要特别注意你的秘钥始终是完全保密的,对于任何可能被远程访问的系统。</target>
        </trans-unit>
        <trans-unit id="ac9946ee9d075e84bfbeea0cd48def7c04248d87" translate="yes" xml:space="preserve">
          <source>If you use custom &lt;code&gt;Manager&lt;/code&gt; objects, take note that the first &lt;code&gt;Manager&lt;/code&gt; Django encounters (in the order in which they&amp;rsquo;re defined in the model) has a special status. Django interprets the first &lt;code&gt;Manager&lt;/code&gt; defined in a class as the &amp;ldquo;default&amp;rdquo; &lt;code&gt;Manager&lt;/code&gt;, and several parts of Django (including &lt;a href=&quot;../../ref/django-admin#django-admin-dumpdata&quot;&gt;&lt;code&gt;dumpdata&lt;/code&gt;&lt;/a&gt;) will use that &lt;code&gt;Manager&lt;/code&gt; exclusively for that model. As a result, it&amp;rsquo;s a good idea to be careful in your choice of default manager in order to avoid a situation where overriding &lt;code&gt;get_queryset()&lt;/code&gt; results in an inability to retrieve objects you&amp;rsquo;d like to work with.</source>
          <target state="translated">如果使用自定义 &lt;code&gt;Manager&lt;/code&gt; 对象，请注意，第一个Django &lt;code&gt;Manager&lt;/code&gt; Django遇到（按在模型中定义的顺序）处于特殊状态。 Django将类中定义的第一个 &lt;code&gt;Manager&lt;/code&gt; 解释为&amp;ldquo;默认&amp;rdquo; &lt;code&gt;Manager&lt;/code&gt; ，并且Django的某些部分（包括&lt;a href=&quot;../../ref/django-admin#django-admin-dumpdata&quot;&gt; &lt;code&gt;dumpdata&lt;/code&gt; &lt;/a&gt;）将对该模型专门使用该 &lt;code&gt;Manager&lt;/code&gt; 。因此，最好谨慎选择默认管理器，以免发生覆盖 &lt;code&gt;get_queryset()&lt;/code&gt; 导致无法检索要使用的对象的情况。</target>
        </trans-unit>
        <trans-unit id="3354dc763efee5cbb2a050e1c410a3261d6d6efb" translate="yes" xml:space="preserve">
          <source>If you use database caching with multiple databases, you&amp;rsquo;ll also need to set up routing instructions for your database cache table. For the purposes of routing, the database cache table appears as a model named &lt;code&gt;CacheEntry&lt;/code&gt;, in an application named &lt;code&gt;django_cache&lt;/code&gt;. This model won&amp;rsquo;t appear in the models cache, but the model details can be used for routing purposes.</source>
          <target state="translated">如果您将数据库缓存与多个数据库一起使用，则还需要为数据库缓存表设置路由说明。为了进行路由，数据库高速缓存表在名为 &lt;code&gt;django_cache&lt;/code&gt; 的应用程序中显示为名为 &lt;code&gt;CacheEntry&lt;/code&gt; 的模型。该模型不会出现在模型缓存中，但是可以将模型详细信息用于路由目的。</target>
        </trans-unit>
        <trans-unit id="17cfa5ced8dcbb7e597664d335ed9ae258277518" translate="yes" xml:space="preserve">
          <source>If you use more than one &lt;code&gt;JavaScriptCatalog&lt;/code&gt; view on a site and some of them define the same strings, the strings in the catalog that was loaded last take precedence.</source>
          <target state="translated">如果您在一个网站上使用多个 &lt;code&gt;JavaScriptCatalog&lt;/code&gt; 视图，并且其中一些定义相同的字符串，则上次加载的目录中的字符串优先。</target>
        </trans-unit>
        <trans-unit id="e46850bb8ec958f8fdf1580dc6739aff53945b19" translate="yes" xml:space="preserve">
          <source>If you use the &lt;code&gt;cached_db&lt;/code&gt; session backend, you also need to follow the configuration instructions for the &lt;a href=&quot;#using-database-backed-sessions&quot;&gt;using database-backed sessions&lt;/a&gt;.</source>
          <target state="translated">如果您使用 &lt;code&gt;cached_db&lt;/code&gt; 会话后端，则还需要遵循配置说明以&lt;a href=&quot;#using-database-backed-sessions&quot;&gt;使用数据库支持的会话&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6cf187a7f4b8a72e3eca21b8c45ef8b3ee2725a2" translate="yes" xml:space="preserve">
          <source>If you use the Bash shell, consider installing the Django bash completion script, which lives in &lt;code&gt;extras/django_bash_completion&lt;/code&gt; in the Django source distribution. It enables tab-completion of &lt;code&gt;django-admin&lt;/code&gt; and &lt;code&gt;manage.py&lt;/code&gt; commands, so you can, for instance&amp;hellip;</source>
          <target state="translated">如果您使用Bash shell，请考虑安装Django bash完成脚本，该脚本位于Django源代码发行版的 &lt;code&gt;extras/django_bash_completion&lt;/code&gt; 中。它启用了 &lt;code&gt;django-admin&lt;/code&gt; 和 &lt;code&gt;manage.py&lt;/code&gt; 命令的制表符完成功能，因此，例如，您可以&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="544a332c4cb22ae2768b4c0f6f7c943861e6344b" translate="yes" xml:space="preserve">
          <source>If you use the MyISAM storage engine please be aware of the fact that you will receive database-generated errors if you try to use the &lt;a href=&quot;../topics/db/transactions#topics-db-transactions-savepoints&quot;&gt;savepoint-related methods of the transactions API&lt;/a&gt;. The reason for this is that detecting the storage engine of a MySQL database/table is an expensive operation so it was decided it isn&amp;rsquo;t worth to dynamically convert these methods in no-op&amp;rsquo;s based in the results of such detection.</source>
          <target state="translated">如果您使用MyISAM存储引擎，请注意以下事实：如果您尝试使用&lt;a href=&quot;../topics/db/transactions#topics-db-transactions-savepoints&quot;&gt;与事务API有关的与保存点相关的方法，&lt;/a&gt;则将收到数据库生成的错误。这样做的原因是，检测MySQL数据库/表的存储引擎是一项昂贵的操作，因此，基于这种检测的结果，决定不将这些方法动态转换为no-op是不值得的。</target>
        </trans-unit>
        <trans-unit id="612e62c7aaac6d3ed93e17cc5eb89853c3216591" translate="yes" xml:space="preserve">
          <source>If you use the default authentication backend, then your model must have a single unique field that can be used for identification purposes. This can be a username, an email address, or any other unique attribute. A non-unique username field is allowed if you use a custom authentication backend that can support it.</source>
          <target state="translated">如果您使用默认的验证后台,那么您的模型必须有一个可用于识别目的的唯一字段。这可以是一个用户名,一个电子邮件地址,或任何其他独特的属性。如果您使用可以支持的自定义认证后端,则允许使用非唯一的用户名字段。</target>
        </trans-unit>
        <trans-unit id="632cae7f626396f49915f6528bfd124915502643" translate="yes" xml:space="preserve">
          <source>If you use this directly in a subclass, &lt;code&gt;objects&lt;/code&gt; will be the default manager if you declare no managers in the base class:</source>
          <target state="translated">如果直接在子类中使用此 &lt;code&gt;objects&lt;/code&gt; 则在基类中未声明任何管理器的情况下，对象将是默认管理器：</target>
        </trans-unit>
        <trans-unit id="0be2ddd3771f7e5301d04d44291e1551fbddd667" translate="yes" xml:space="preserve">
          <source>If you use this example, be sure to change the &lt;code&gt;'filename'&lt;/code&gt; path to a location that&amp;rsquo;s writable by the user that&amp;rsquo;s running the Django application.</source>
          <target state="translated">如果使用此示例，请确保将 &lt;code&gt;'filename'&lt;/code&gt; 路径更改为运行Django应用程序的用户可写的位置。</target>
        </trans-unit>
        <trans-unit id="5390e72ce357a7eabd5449a3955b90282d9e0e6d" translate="yes" xml:space="preserve">
          <source>If you want &lt;em&gt;no&lt;/em&gt; bulk actions available for a given &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt;, set &lt;a href=&quot;index#django.contrib.admin.ModelAdmin.actions&quot;&gt;&lt;code&gt;ModelAdmin.actions&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;None&lt;/code&gt;:</source>
          <target state="translated">如果你想&lt;em&gt;没有&lt;/em&gt;可用于给定批量操作&lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;，设置&lt;a href=&quot;index#django.contrib.admin.ModelAdmin.actions&quot;&gt; &lt;code&gt;ModelAdmin.actions&lt;/code&gt; &lt;/a&gt;到 &lt;code&gt;None&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3aec3757f7c2abfc3d404eaea0295a8443022fe5" translate="yes" xml:space="preserve">
          <source>If you want a form for the &lt;code&gt;Author&lt;/code&gt; model that includes only the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;title&lt;/code&gt; fields, you would specify &lt;code&gt;fields&lt;/code&gt; or &lt;code&gt;exclude&lt;/code&gt; like this:</source>
          <target state="translated">如果您希望 &lt;code&gt;Author&lt;/code&gt; 模型的表单仅包含 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;title&lt;/code&gt; 字段，则可以指定 &lt;code&gt;fields&lt;/code&gt; 或像这样 &lt;code&gt;exclude&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="dac386a15e0c8bb88ff7bb297d68523406916892" translate="yes" xml:space="preserve">
          <source>If you want context data to take priority over context processors, use the following pattern:</source>
          <target state="translated">如果你想让上下文数据优先于上下文处理器,请使用以下模式。</target>
        </trans-unit>
        <trans-unit id="7e20d9f91dd7be41dd2b75340fb5ad46d7aff9dd" translate="yes" xml:space="preserve">
          <source>If you want customized deletion behavior, you can override the &lt;code&gt;delete()&lt;/code&gt; method. See &lt;a href=&quot;../../topics/db/models#overriding-model-methods&quot;&gt;Overriding predefined model methods&lt;/a&gt; for more details.</source>
          <target state="translated">如果要自定义删除行为，可以重写 &lt;code&gt;delete()&lt;/code&gt; 方法。有关更多详细信息，请参见&lt;a href=&quot;../../topics/db/models#overriding-model-methods&quot;&gt;覆盖预定义的模型方法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="93acdd6e4c8eae4615be0fc45ec00696af259471" translate="yes" xml:space="preserve">
          <source>If you want customized saving behavior, you can override this &lt;code&gt;save()&lt;/code&gt; method. See &lt;a href=&quot;../../topics/db/models#overriding-model-methods&quot;&gt;Overriding predefined model methods&lt;/a&gt; for more details.</source>
          <target state="translated">如果要自定义保存行为，则可以覆盖此 &lt;code&gt;save()&lt;/code&gt; 方法。有关更多详细信息，请参见&lt;a href=&quot;../../topics/db/models#overriding-model-methods&quot;&gt;覆盖预定义的模型方法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="be8f02ec9aac915643a3af8cb57319e744527c0c" translate="yes" xml:space="preserve">
          <source>If you want more control over your URLs, you can reference a specific view in your URLconf:</source>
          <target state="translated">如果你想对你的URL有更多的控制,你可以在你的URLconf中引用一个特定的视图。</target>
        </trans-unit>
        <trans-unit id="f457998a8d8d75ab48817a88d807beddf2f50846" translate="yes" xml:space="preserve">
          <source>If you want the protection that HTTPS provides, and have enabled it on your server, there are some additional steps you may need:</source>
          <target state="translated">如果你想要HTTPS提供的保护,并在你的服务器上启用它,你可能需要一些额外的步骤。</target>
        </trans-unit>
        <trans-unit id="a14d621828e626147519d733f8c184b1c0c37ab4" translate="yes" xml:space="preserve">
          <source>If you want to add a check to a model class, the approach is &lt;em&gt;almost&lt;/em&gt; the same: the only difference is that the check is a classmethod, not an instance method:</source>
          <target state="translated">如果要向模型类添加检查，则方法&lt;em&gt;几乎&lt;/em&gt;相同：唯一的区别是检查是一种类方法，而不是实例方法：</target>
        </trans-unit>
        <trans-unit id="56b33aa10e58145097aa338a7bdcf35a9f1eab1d" translate="yes" xml:space="preserve">
          <source>If you want to allow Unicode characters, pass &lt;code&gt;allow_unicode=True&lt;/code&gt;. For example:</source>
          <target state="translated">如果要允许Unicode字符，请传递 &lt;code&gt;allow_unicode=True&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="89e6786d70f17235ea0a07bab1827e495e61aad1" translate="yes" xml:space="preserve">
          <source>If you want to allow editing and creating an &lt;code&gt;Image&lt;/code&gt; instance on the &lt;code&gt;Product&lt;/code&gt;, add/change views you can use &lt;a href=&quot;../contenttypes#django.contrib.contenttypes.admin.GenericTabularInline&quot;&gt;&lt;code&gt;GenericTabularInline&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../contenttypes#django.contrib.contenttypes.admin.GenericStackedInline&quot;&gt;&lt;code&gt;GenericStackedInline&lt;/code&gt;&lt;/a&gt; (both subclasses of &lt;a href=&quot;../contenttypes#django.contrib.contenttypes.admin.GenericInlineModelAdmin&quot;&gt;&lt;code&gt;GenericInlineModelAdmin&lt;/code&gt;&lt;/a&gt;) provided by &lt;a href=&quot;../contenttypes#module-django.contrib.contenttypes.admin&quot;&gt;&lt;code&gt;admin&lt;/code&gt;&lt;/a&gt;. They implement tabular and stacked visual layouts for the forms representing the inline objects, respectively, just like their non-generic counterparts. They behave just like any other inline. In your &lt;code&gt;admin.py&lt;/code&gt; for this example app:</source>
          <target state="translated">如果要允许在 &lt;code&gt;Product&lt;/code&gt; 上编辑和创建 &lt;code&gt;Image&lt;/code&gt; 实例，请添加/更改视图，可以使用&lt;a href=&quot;../contenttypes#module-django.contrib.contenttypes.admin&quot;&gt; &lt;code&gt;admin&lt;/code&gt; &lt;/a&gt;提供的&lt;a href=&quot;../contenttypes#django.contrib.contenttypes.admin.GenericTabularInline&quot;&gt; &lt;code&gt;GenericTabularInline&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../contenttypes#django.contrib.contenttypes.admin.GenericStackedInline&quot;&gt; &lt;code&gt;GenericStackedInline&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;../contenttypes#django.contrib.contenttypes.admin.GenericInlineModelAdmin&quot;&gt; &lt;code&gt;GenericInlineModelAdmin&lt;/code&gt; 的&lt;/a&gt;两个子类）。就像它们的非泛型对应物一样，它们分别为代表内联对象的表单实现表格和堆叠式视觉布局。它们的行为就像其他任何内联函数一样。在此示例应用程序的 &lt;code&gt;admin.py&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="dc86f9ac38476957adf53db6078bb6b2f39a0899" translate="yes" xml:space="preserve">
          <source>If you want to associate additional assets with a form &amp;ndash; for example, CSS for form layout &amp;ndash; add a &lt;code&gt;Media&lt;/code&gt; declaration to the form:</source>
          <target state="translated">如果要将其他资产与表单相关联（例如，用于表单布局的CSS），请在表单中添加 &lt;code&gt;Media&lt;/code&gt; 声明：</target>
        </trans-unit>
        <trans-unit id="ca5663445451e733c438680c0b1cdbdb78de064c" translate="yes" xml:space="preserve">
          <source>If you want to automatically load initial data for an app, create a &lt;a href=&quot;../topics/migrations#data-migrations&quot;&gt;data migration&lt;/a&gt;. Migrations are run when setting up the test database, so the data will be available there, subject to &lt;a href=&quot;../topics/testing/overview#test-case-serialized-rollback&quot;&gt;some limitations&lt;/a&gt;.</source>
          <target state="translated">如果您要自动为应用加载初始数据，请创建&lt;a href=&quot;../topics/migrations#data-migrations&quot;&gt;数据迁移&lt;/a&gt;。设置测试数据库时会运行迁移，因此在&lt;a href=&quot;../topics/testing/overview#test-case-serialized-rollback&quot;&gt;某些限制下&lt;/a&gt;，数据将在那里可用。</target>
        </trans-unit>
        <trans-unit id="7f619ca80296d2ab8fb9d0ccf4cddacae4955198" translate="yes" xml:space="preserve">
          <source>If you want to be really adventurous, you could even mix a &lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt;&lt;code&gt;DetailView&lt;/code&gt;&lt;/a&gt; subclass that is able to return &lt;em&gt;both&lt;/em&gt; HTML and JSON content, depending on some property of the HTTP request, such as a query argument or a HTTP header. Mix in both the &lt;code&gt;JSONResponseMixin&lt;/code&gt; and a &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin&quot;&gt;&lt;code&gt;SingleObjectTemplateResponseMixin&lt;/code&gt;&lt;/a&gt;, and override the implementation of &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.render_to_response&quot;&gt;&lt;code&gt;render_to_response()&lt;/code&gt;&lt;/a&gt; to defer to the appropriate rendering method depending on the type of response that the user requested:</source>
          <target state="translated">如果你想成为真正的冒险，你甚至可以混用&lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt; &lt;code&gt;DetailView&lt;/code&gt; &lt;/a&gt;子类，它能够返回&lt;em&gt;两个&lt;/em&gt; HTML和JSON的内容，根据不同的HTTP请求，的某些属性，如查询参数或HTTP标头。混合使用 &lt;code&gt;JSONResponseMixin&lt;/code&gt; 和&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin&quot;&gt; &lt;code&gt;SingleObjectTemplateResponseMixin&lt;/code&gt; &lt;/a&gt;，并重写&lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.render_to_response&quot;&gt; &lt;code&gt;render_to_response()&lt;/code&gt; &lt;/a&gt;的实现，以根据用户请求的响应类型推迟使用适当的呈现方法：</target>
        </trans-unit>
        <trans-unit id="b286b7423a58f0cdbf8dc79961083cfa7e97f673" translate="yes" xml:space="preserve">
          <source>If you want to call the group something else, you can set &lt;code&gt;pk_url_kwarg&lt;/code&gt; on the view. More details can be found in the reference for &lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt;&lt;code&gt;DetailView&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">如果您想给组别打电话，可以在视图上设置 &lt;code&gt;pk_url_kwarg&lt;/code&gt; 。有关更多详细信息，请参见&lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt; &lt;code&gt;DetailView&lt;/code&gt; &lt;/a&gt;的参考。</target>
        </trans-unit>
        <trans-unit id="73609264d7cce96ce235888ee071c9ba08110d63" translate="yes" xml:space="preserve">
          <source>If you want to change an unmanaged model (&lt;a href=&quot;../ref/models/options#django.db.models.Options.managed&quot;&gt;&lt;code&gt;managed=False&lt;/code&gt;&lt;/a&gt;) to managed, you must remove &lt;code&gt;managed=False&lt;/code&gt; and generate a migration before making other schema-related changes to the model, since schema changes that appear in the migration that contains the operation to change &lt;code&gt;Meta.managed&lt;/code&gt; may not be applied.</source>
          <target state="translated">如果要将非托管模型（&lt;a href=&quot;../ref/models/options#django.db.models.Options.managed&quot;&gt; &lt;code&gt;managed=False&lt;/code&gt; &lt;/a&gt;）更改为托管模型，则必须删除 &lt;code&gt;managed=False&lt;/code&gt; 并生成迁移，然后再对模型进行其他与架构相关的更改，因为架构更改会出现在包含以下操作的迁移中：更改 &lt;code&gt;Meta.managed&lt;/code&gt; 可能无法应用。</target>
        </trans-unit>
        <trans-unit id="5a36c203fa50ee87df5fef8091b5a765a085602e" translate="yes" xml:space="preserve">
          <source>If you want to change the URL of the polls detail view to something else, perhaps to something like &lt;code&gt;polls/specifics/12/&lt;/code&gt; instead of doing it in the template (or templates) you would change it in &lt;code&gt;polls/urls.py&lt;/code&gt;:</source>
          <target state="translated">如果您想将民意调查详细信息视图的URL更改为其他内容，例如，将其更改为民意 &lt;code&gt;polls/specifics/12/&lt;/code&gt; 而不是在一个或多个模板中进行更改，则可以在 &lt;code&gt;polls/urls.py&lt;/code&gt; 中进行更改：</target>
        </trans-unit>
        <trans-unit id="cd1a5725d6fa059579a40d41f2adb758f0ec7936" translate="yes" xml:space="preserve">
          <source>If you want to change the server&amp;rsquo;s IP, pass it along with the port. For example, to listen on all available public IPs (which is useful if you are running Vagrant or want to show off your work on other computers on the network), use:</source>
          <target state="translated">如果要更改服务器的IP，请将其与端口一起传递。例如，要侦听所有可用的公共IP（如果您正在运行Vagrant或想在网络上的其他计算机上炫耀您的工作，这将很有用），请使用：</target>
        </trans-unit>
        <trans-unit id="7ac7bf138057c02102b254cb4eb4bc5c8cedeaa4" translate="yes" xml:space="preserve">
          <source>If you want to change the server&amp;rsquo;s port, pass it as a command-line argument. For instance, this command starts the server on port 8080:</source>
          <target state="translated">如果要更改服务器的端口，请将其作为命令行参数传递。例如，此命令在端口8080上启动服务器：</target>
        </trans-unit>
        <trans-unit id="5a92e0eac7cf91c4cf108e75a7e4cb1c79be68f3" translate="yes" xml:space="preserve">
          <source>If you want to clear a bunch of keys at once, &lt;code&gt;delete_many()&lt;/code&gt; can take a list of keys to be cleared:</source>
          <target state="translated">如果要一次清除一堆密钥， &lt;code&gt;delete_many()&lt;/code&gt; 可以列出要清除的密钥列表：</target>
        </trans-unit>
        <trans-unit id="1a4bfa95187de8542d04a8bb8ab8cdef55f56bbf" translate="yes" xml:space="preserve">
          <source>If you want to clear the set of deferred fields, pass &lt;code&gt;None&lt;/code&gt; as a parameter to &lt;code&gt;defer()&lt;/code&gt;:</source>
          <target state="translated">如果要清除一组延迟字段，请将 &lt;code&gt;None&lt;/code&gt; 作为参数传递给 &lt;code&gt;defer()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b6383cfa56650e6cabffa9d626bc1f48a0ac3ae1" translate="yes" xml:space="preserve">
          <source>If you want to combine the parts in different ways, or apply other processing to the final key (e.g., taking a hash digest of the key parts), you can provide a custom key function.</source>
          <target state="translated">如果您想以不同的方式组合各部分,或对最终的密钥应用其他处理(例如,对密钥部分进行哈希摘要),您可以提供一个自定义密钥功能。</target>
        </trans-unit>
        <trans-unit id="b365d93078a708fa2af27d965ccfe68bed9e884a" translate="yes" xml:space="preserve">
          <source>If you want to create &lt;a href=&quot;#proxy-models-permissions-topic&quot;&gt;permissions for a proxy model&lt;/a&gt;, pass &lt;code&gt;for_concrete_model=False&lt;/code&gt; to &lt;a href=&quot;../../ref/contrib/contenttypes#django.contrib.contenttypes.models.ContentTypeManager.get_for_model&quot;&gt;&lt;code&gt;ContentTypeManager.get_for_model()&lt;/code&gt;&lt;/a&gt; to get the appropriate &lt;code&gt;ContentType&lt;/code&gt;:</source>
          <target state="translated">如果要&lt;a href=&quot;#proxy-models-permissions-topic&quot;&gt;为代理模型&lt;/a&gt;创建权限， &lt;code&gt;for_concrete_model=False&lt;/code&gt; 传递给&lt;a href=&quot;../../ref/contrib/contenttypes#django.contrib.contenttypes.models.ContentTypeManager.get_for_model&quot;&gt; &lt;code&gt;ContentTypeManager.get_for_model()&lt;/code&gt; &lt;/a&gt;以获得适当的 &lt;code&gt;ContentType&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="baafb11630a741f29de95c236634c1933ad61e35" translate="yes" xml:space="preserve">
          <source>If you want to create a formset that allows you to edit books belonging to a particular author, you could do this:</source>
          <target state="translated">如果你想创建一个允许你编辑属于特定作者的书籍的表单集,你可以这样做。</target>
        </trans-unit>
        <trans-unit id="d22c7f47483da249cee231a92c3ccfc41e9f41cc" translate="yes" xml:space="preserve">
          <source>If you want to customize the default admin site, you can &lt;a href=&quot;#overriding-default-admin-site&quot;&gt;override it&lt;/a&gt;.</source>
          <target state="translated">如果要自定义默认管理网站，则可以&lt;a href=&quot;#overriding-default-admin-site&quot;&gt;覆盖它&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c29543c5a12e486f79959dd0c7c612e7d05d854c" translate="yes" xml:space="preserve">
          <source>If you want to disable sorting for some columns, set &lt;code&gt;sortable_by&lt;/code&gt; to a collection (e.g. &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;tuple&lt;/code&gt;, or &lt;code&gt;set&lt;/code&gt;) of the subset of &lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_display&quot;&gt;&lt;code&gt;list_display&lt;/code&gt;&lt;/a&gt; that you want to be sortable. An empty collection disables sorting for all columns.</source>
          <target state="translated">如果要禁用某些列的 &lt;code&gt;sortable_by&lt;/code&gt; ，请将sortable_by &lt;code&gt;set&lt;/code&gt; 为要排序的&lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_display&quot;&gt; &lt;code&gt;list_display&lt;/code&gt; &lt;/a&gt;子集的集合（例如 &lt;code&gt;list&lt;/code&gt; ， &lt;code&gt;tuple&lt;/code&gt; 或set）。空集合将禁用对所有列的排序。</target>
        </trans-unit>
        <trans-unit id="819a05f247100e1405566f18b1980253c4ad662e" translate="yes" xml:space="preserve">
          <source>If you want to display many-to-many relations using an inline, you can do so by defining an &lt;code&gt;InlineModelAdmin&lt;/code&gt; object for the relationship:</source>
          <target state="translated">如果要使用内联显示多对多关系，可以通过为该关系定义一个 &lt;code&gt;InlineModelAdmin&lt;/code&gt; 对象来实现：</target>
        </trans-unit>
        <trans-unit id="4f2c2b260acd4e58d5f685e485d85b0eafeeb6b4" translate="yes" xml:space="preserve">
          <source>If you want to do any special formatting for either the title or description, &lt;a href=&quot;../templates/language&quot;&gt;Django templates&lt;/a&gt; can be used instead. Their paths can be specified with the &lt;code&gt;title_template&lt;/code&gt; and &lt;code&gt;description_template&lt;/code&gt; attributes on the &lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt;&lt;code&gt;Feed&lt;/code&gt;&lt;/a&gt; class. The templates are rendered for each item and are passed two template context variables:</source>
          <target state="translated">如果要对标题或描述进行特殊格式设置，则可以使用&lt;a href=&quot;../templates/language&quot;&gt;Django模板&lt;/a&gt;。可以使用&lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt; &lt;code&gt;Feed&lt;/code&gt; &lt;/a&gt;类上的 &lt;code&gt;title_template&lt;/code&gt; 和 &lt;code&gt;description_template&lt;/code&gt; 属性指定其路径。为每个项目渲染模板，并传递两个模板上下文变量：</target>
        </trans-unit>
        <trans-unit id="9a2a9d97c3bcdcc33735186ed18274e012b287d6" translate="yes" xml:space="preserve">
          <source>If you want to exclude multiple applications, pass &lt;code&gt;--exclude&lt;/code&gt; more than once:</source>
          <target state="translated">如果要排除多个应用程序，请多次传递 &lt;code&gt;--exclude&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="47dc3f16d887ad06159fa3d81469f66328dc09f5" translate="yes" xml:space="preserve">
          <source>If you want to find a URL in a specific admin instance, provide the name of that instance as a &lt;code&gt;current_app&lt;/code&gt; hint to the reverse call. For example, if you specifically wanted the admin view from the admin instance named &lt;code&gt;custom&lt;/code&gt;, you would need to call:</source>
          <target state="translated">如果要在特定管理实例中查找URL，请将该实例的名称作为反向调用的 &lt;code&gt;current_app&lt;/code&gt; 提示提供。例如，如果您特别希望从名为 &lt;code&gt;custom&lt;/code&gt; 的管理实例中获得admin视图，则需要调用：</target>
        </trans-unit>
        <trans-unit id="bdd8542fd2cea7b2e24bbfa472ae38020dc7bf81" translate="yes" xml:space="preserve">
          <source>If you want to generate more than one aggregate, you add another argument to the &lt;code&gt;aggregate()&lt;/code&gt; clause. So, if we also wanted to know the maximum and minimum price of all books, we would issue the query:</source>
          <target state="translated">如果要生成多个聚合，可以在 &lt;code&gt;aggregate()&lt;/code&gt; 子句中添加另一个参数。因此，如果我们还想知道所有书籍的最高和最低价格，我们将发出查询：</target>
        </trans-unit>
        <trans-unit id="e5ea26ccc56d69b0c9654b4277fee5e12990d99b" translate="yes" xml:space="preserve">
          <source>If you want to get a key&amp;rsquo;s value or set a value if the key isn&amp;rsquo;t in the cache, there is the &lt;code&gt;get_or_set()&lt;/code&gt; method. It takes the same parameters as &lt;code&gt;get()&lt;/code&gt; but the default is set as the new cache value for that key, rather than returned:</source>
          <target state="translated">如果要获取键的值，或者如果键不在缓存中 &lt;code&gt;get_or_set()&lt;/code&gt; 设置值，则可以使用get_or_set（）方法。它采用与 &lt;code&gt;get()&lt;/code&gt; 相同的参数，但默认设置为该键的新缓存值，而不是返回：</target>
        </trans-unit>
        <trans-unit id="e511661d588f548844ad43177d187a8b8e72782e" translate="yes" xml:space="preserve">
          <source>If you want to give the migration(s) a meaningful name instead of a generated one, you can use the &lt;a href=&quot;../ref/django-admin#cmdoption-makemigrations-name&quot;&gt;&lt;code&gt;makemigrations --name&lt;/code&gt;&lt;/a&gt; option:</source>
          <target state="translated">如果要为迁移指定一个有意义的名称而不是生成的名称，则可以使用&lt;a href=&quot;../ref/django-admin#cmdoption-makemigrations-name&quot;&gt; &lt;code&gt;makemigrations --name&lt;/code&gt; &lt;/a&gt;选项：</target>
        </trans-unit>
        <trans-unit id="bb3d67e91b95e1098c276074de20f2c056d12673" translate="yes" xml:space="preserve">
          <source>If you want to include literal percent signs in the query, you have to double them if you are passing parameters.</source>
          <target state="translated">如果你想在查询中包含字面的百分号,如果你传递的是参数,你必须将它们翻倍。</target>
        </trans-unit>
        <trans-unit id="9211860caf6395f0b137a8be9dc6cdd28adf359b" translate="yes" xml:space="preserve">
          <source>If you want to inherit from &lt;code&gt;AbstractBase&lt;/code&gt;, but provide a different default manager, you can provide the default manager on the child class:</source>
          <target state="translated">如果要从 &lt;code&gt;AbstractBase&lt;/code&gt; 继承，但提供其他默认管理器，则可以在子类上提供默认管理器：</target>
        </trans-unit>
        <trans-unit id="3a2a9c4986e8f5e6654175d1d77008d474dcec7c" translate="yes" xml:space="preserve">
          <source>If you want to instead provide custom key validation logic for one of the built-in backends, you can subclass it, override just the &lt;code&gt;validate_key&lt;/code&gt; method, and follow the instructions for &lt;a href=&quot;#using-a-custom-cache-backend&quot;&gt;using a custom cache backend&lt;/a&gt;. For instance, to do this for the &lt;code&gt;locmem&lt;/code&gt; backend, put this code in a module:</source>
          <target state="translated">如果您想为内置后端之一提供自定义密钥验证逻辑，则可以对其进行子类化，仅覆盖 &lt;code&gt;validate_key&lt;/code&gt; 方法，然后按照说明&lt;a href=&quot;#using-a-custom-cache-backend&quot;&gt;使用自定义缓存后端&lt;/a&gt;。例如，要针对 &lt;code&gt;locmem&lt;/code&gt; 后端执行此操作，请将以下代码放在模块中：</target>
        </trans-unit>
        <trans-unit id="6c92f47c8dd63980980d8036fb8b746fc5307c13" translate="yes" xml:space="preserve">
          <source>If you want to let each individual user specify which language they prefer, then you also need to use the &lt;code&gt;LocaleMiddleware&lt;/code&gt;. &lt;code&gt;LocaleMiddleware&lt;/code&gt; enables language selection based on data from the request. It customizes content for each user.</source>
          <target state="translated">如果要让每个用户指定他们喜欢的语言，则还需要使用 &lt;code&gt;LocaleMiddleware&lt;/code&gt; 。 &lt;code&gt;LocaleMiddleware&lt;/code&gt; 可以根据请求中的数据进行语言选择。它为每个用户定制内容。</target>
        </trans-unit>
        <trans-unit id="187ea719ed80062b93104d8f62e4ca6ba48d9ded" translate="yes" xml:space="preserve">
          <source>If you want to lock parents models when using &lt;a href=&quot;../../topics/db/models#multi-table-inheritance&quot;&gt;multi-table inheritance&lt;/a&gt;, you must specify parent link fields (by default &lt;code&gt;&amp;lt;parent_model_name&amp;gt;_ptr&lt;/code&gt;) in the &lt;code&gt;of&lt;/code&gt; argument. For example:</source>
          <target state="translated">如果要在使用&lt;a href=&quot;../../topics/db/models#multi-table-inheritance&quot;&gt;多表继承&lt;/a&gt;时锁定父模型，则必须在 &lt;code&gt;of&lt;/code&gt; 参数中指定父链接字段（默认为 &lt;code&gt;&amp;lt;parent_model_name&amp;gt;_ptr&lt;/code&gt; ）。例如：</target>
        </trans-unit>
        <trans-unit id="1bc0322e1dee230846f920ac1858bed59fef0294" translate="yes" xml:space="preserve">
          <source>If you want to make one widget instance look different from another, you will need to specify additional attributes at the time when the widget object is instantiated and assigned to a form field (and perhaps add some rules to your CSS files).</source>
          <target state="translated">如果您想让一个widget实例看起来与另一个不同,您需要在实例化widget对象并将其分配给表单字段时指定额外的属性(也许还需要在您的CSS文件中添加一些规则)。</target>
        </trans-unit>
        <trans-unit id="358714f5af82b779858f9cc401582af9b516624f" translate="yes" xml:space="preserve">
          <source>If you want to obtain the cache key used for a cached fragment, you can use &lt;code&gt;make_template_fragment_key&lt;/code&gt;. &lt;code&gt;fragment_name&lt;/code&gt; is the same as second argument to the &lt;code&gt;cache&lt;/code&gt; template tag; &lt;code&gt;vary_on&lt;/code&gt; is a list of all additional arguments passed to the tag. This function can be useful for invalidating or overwriting a cached item, for example:</source>
          <target state="translated">如果要获取用于缓存片段的缓存键，则可以使用 &lt;code&gt;make_template_fragment_key&lt;/code&gt; 。 &lt;code&gt;fragment_name&lt;/code&gt; 与 &lt;code&gt;cache&lt;/code&gt; 模板标记的第二个参数相同； &lt;code&gt;vary_on&lt;/code&gt; 是传递给标记的所有其他参数的列表。该功能对于使缓存项无效或覆盖很有用，例如：</target>
        </trans-unit>
        <trans-unit id="ba4ffba3fdbb584b8cac1266ddb0e4fc416423c1" translate="yes" xml:space="preserve">
          <source>If you want to override certain options of the cache backend the storage uses, specify a custom entry in the &lt;a href=&quot;../settings#std:setting-CACHES&quot;&gt;&lt;code&gt;CACHES&lt;/code&gt;&lt;/a&gt; setting named &lt;code&gt;'staticfiles'&lt;/code&gt;. It falls back to using the &lt;code&gt;'default'&lt;/code&gt; cache backend.</source>
          <target state="translated">如果要覆盖存储使用的缓存后端的某些选项，请在&lt;a href=&quot;../settings#std:setting-CACHES&quot;&gt; &lt;code&gt;CACHES&lt;/code&gt; &lt;/a&gt;设置中指定一个名为 &lt;code&gt;'staticfiles'&lt;/code&gt; 的自定义条目。只能使用 &lt;code&gt;'default'&lt;/code&gt; 缓存后端。</target>
        </trans-unit>
        <trans-unit id="08bf32a6e2fd3850e1313d6ddcddcbe5d0693024" translate="yes" xml:space="preserve">
          <source>If you want to pass additional parameters to &lt;code&gt;xgettext&lt;/code&gt;, you need to create a custom &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;makemessages&lt;/code&gt;&lt;/a&gt; command and override its &lt;code&gt;xgettext_options&lt;/code&gt; attribute:</source>
          <target state="translated">如果要将其他参数传递给 &lt;code&gt;xgettext&lt;/code&gt; ，则需要创建一个自定义&lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt; &lt;code&gt;makemessages&lt;/code&gt; &lt;/a&gt;命令并覆盖其 &lt;code&gt;xgettext_options&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="0fcbbd1a64b93e2ce60b3ae36a4546b17d7404e5" translate="yes" xml:space="preserve">
          <source>If you want to preprocess the value just before saving, you can use &lt;a href=&quot;../ref/models/fields#django.db.models.Field.pre_save&quot;&gt;&lt;code&gt;pre_save()&lt;/code&gt;&lt;/a&gt;. For example, Django&amp;rsquo;s &lt;a href=&quot;../ref/models/fields#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt; uses this method to set the attribute correctly in the case of &lt;a href=&quot;../ref/models/fields#django.db.models.DateField.auto_now&quot;&gt;&lt;code&gt;auto_now&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../ref/models/fields#django.db.models.DateField.auto_now_add&quot;&gt;&lt;code&gt;auto_now_add&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果要在保存之前对值进行预处理，则可以使用&lt;a href=&quot;../ref/models/fields#django.db.models.Field.pre_save&quot;&gt; &lt;code&gt;pre_save()&lt;/code&gt; &lt;/a&gt;。例如，在&lt;a href=&quot;../ref/models/fields#django.db.models.DateField.auto_now&quot;&gt; &lt;code&gt;auto_now&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../ref/models/fields#django.db.models.DateField.auto_now_add&quot;&gt; &lt;code&gt;auto_now_add&lt;/code&gt; &lt;/a&gt;的情况下，Django的&lt;a href=&quot;../ref/models/fields#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt;使用此方法正确设置属性。</target>
        </trans-unit>
        <trans-unit id="82aeed39d2f4a0fb067ad666d1bfbc02c9469e46" translate="yes" xml:space="preserve">
          <source>If you want to provide some additional classes in addition to the error and required classes that may be required, you can provide those classes as an argument:</source>
          <target state="translated">如果你想在可能需要的错误和必要的类之外提供一些额外的类,你可以提供这些类作为参数。</target>
        </trans-unit>
        <trans-unit id="d347d884e0e4a232836473d57e45545a254b5f95" translate="yes" xml:space="preserve">
          <source>If you want to put the template overrides in an app called &lt;code&gt;myapp&lt;/code&gt; and the templates to override are named &lt;code&gt;blog/list.html&lt;/code&gt; and &lt;code&gt;blog/post.html&lt;/code&gt;, then your directory structure will look like:</source>
          <target state="translated">如果要将模板替代放置在名为 &lt;code&gt;myapp&lt;/code&gt; 的应用中，并且要覆盖的模板命名为 &lt;code&gt;blog/list.html&lt;/code&gt; 和 &lt;code&gt;blog/post.html&lt;/code&gt; ，则目录结构将如下所示：</target>
        </trans-unit>
        <trans-unit id="8675cd01d369192cb8585e183346b84ac04d8fa3" translate="yes" xml:space="preserve">
          <source>If you want to render templates with customizations from your &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting, such as context processors for example, use the &lt;a href=&quot;#django.forms.renderers.TemplatesSetting&quot;&gt;&lt;code&gt;TemplatesSetting&lt;/code&gt;&lt;/a&gt; renderer.</source>
          <target state="translated">如果要使用&lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;设置中的自定义呈现模板，例如上下文处理器，请使用&lt;a href=&quot;#django.forms.renderers.TemplatesSetting&quot;&gt; &lt;code&gt;TemplatesSetting&lt;/code&gt; &lt;/a&gt;呈现器。</target>
        </trans-unit>
        <trans-unit id="a54cf1350fd260fcc8471b214783924c0962b9d7" translate="yes" xml:space="preserve">
          <source>If you want to render the context only with the variables provided (or even no variables at all), use the &lt;code&gt;only&lt;/code&gt; option. No other variables are available to the included template:</source>
          <target state="translated">如果只想使用提供的变量（甚至根本没有变量）来呈现上下文，请使用 &lt;code&gt;only&lt;/code&gt; 选项。包含的模板没有其他变量可用：</target>
        </trans-unit>
        <trans-unit id="1299f323e280c4314aecc4bf363b73686a188120" translate="yes" xml:space="preserve">
          <source>If you want to replace the upload handlers completely, you can assign a new list:</source>
          <target state="translated">如果你想完全替换上传处理程序,你可以分配一个新的列表。</target>
        </trans-unit>
        <trans-unit id="3b1eb52947855dd8e6837d854ad3dbc97c8dfac6" translate="yes" xml:space="preserve">
          <source>If you want to represent a model with the format &lt;code&gt;app_label.object_name&lt;/code&gt; or &lt;code&gt;app_label.model_name&lt;/code&gt; you can use &lt;code&gt;model._meta.label&lt;/code&gt; or &lt;code&gt;model._meta.label_lower&lt;/code&gt; respectively.</source>
          <target state="translated">如果你想表示，格式为模型 &lt;code&gt;app_label.object_name&lt;/code&gt; 或 &lt;code&gt;app_label.model_name&lt;/code&gt; 可以使用 &lt;code&gt;model._meta.label&lt;/code&gt; 或 &lt;code&gt;model._meta.label_lower&lt;/code&gt; 分别。</target>
        </trans-unit>
        <trans-unit id="d9363c35de0c24ed2e535f99e48aad5e18fa6e74" translate="yes" xml:space="preserve">
          <source>If you want to restrict the search to a particular template engine, pass the engine&amp;rsquo;s &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;using&lt;/code&gt; argument.</source>
          <target state="translated">如果要将搜索限制为特定的模板引擎，请在 &lt;code&gt;using&lt;/code&gt; 参数中传递引擎的&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1a073b38a0044d193c0986f27e9a3dc2f7954430" translate="yes" xml:space="preserve">
          <source>If you want to return a formset that doesn&amp;rsquo;t include &lt;em&gt;any&lt;/em&gt; pre-existing instances of the model, you can specify an empty QuerySet:</source>
          <target state="translated">如果要返回不包含模型的&lt;em&gt;任何&lt;/em&gt;现有实例的表单集，则可以指定一个空的QuerySet：</target>
        </trans-unit>
        <trans-unit id="ae90359159ce2a046afee5fe8740de7f9eb423ea" translate="yes" xml:space="preserve">
          <source>If you want to revert all migrations applied for an app, use the name &lt;code&gt;zero&lt;/code&gt;:</source>
          <target state="translated">如果要还原应用程序应用的所有迁移，请使用名称 &lt;code&gt;zero&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="458328755ac20bf1935dfcb1e46e0973d7fa75b0" translate="yes" xml:space="preserve">
          <source>If you want to select a language within a template, you can use the &lt;code&gt;language&lt;/code&gt; template tag:</source>
          <target state="translated">如果要在模板中选择一种语言，则可以使用 &lt;code&gt;language&lt;/code&gt; template标签：</target>
        </trans-unit>
        <trans-unit id="ea255638cee3103be21ce078c6c8eb0e0a82aafb" translate="yes" xml:space="preserve">
          <source>If you want to serve your project in a subdirectory (&lt;code&gt;https://example.com/mysite&lt;/code&gt; in this example), you can add &lt;code&gt;WSGIScriptAlias&lt;/code&gt; to the configuration above:</source>
          <target state="translated">如果要在子目录（此示例中为 &lt;code&gt;https://example.com/mysite&lt;/code&gt; )中提供项目，则可以将 &lt;code&gt;WSGIScriptAlias&lt;/code&gt; 添加到上述配置中：</target>
        </trans-unit>
        <trans-unit id="470d59534ec7120ebb7f43a0559ad898e0a6a691" translate="yes" xml:space="preserve">
          <source>If you want to serve your static files from the same server that&amp;rsquo;s already serving your site, the process may look something like:</source>
          <target state="translated">如果要从已经为您的站点提供服务的同一台服务器提供静态文件，则该过程可能类似于：</target>
        </trans-unit>
        <trans-unit id="d1f072200b67438fce5826bd23e1652372b64f96" translate="yes" xml:space="preserve">
          <source>If you want to specify a field&amp;rsquo;s validators, you can do so by defining the field declaratively and setting its &lt;code&gt;validators&lt;/code&gt; parameter:</source>
          <target state="translated">如果要指定字段的验证器，则可以通过声明性地定义该字段并设置其 &lt;code&gt;validators&lt;/code&gt; 参数来实现：</target>
        </trans-unit>
        <trans-unit id="2045cb8a545994f5940fdb8bb609edfefe504ffd" translate="yes" xml:space="preserve">
          <source>If you want to submit a form or access a session cookie within a frame or iframe, you may need to modify the &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_SAMESITE&quot;&gt;&lt;code&gt;CSRF_COOKIE_SAMESITE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;settings#std:setting-SESSION_COOKIE_SAMESITE&quot;&gt;&lt;code&gt;SESSION_COOKIE_SAMESITE&lt;/code&gt;&lt;/a&gt; settings.</source>
          <target state="translated">如果要在框架或iframe中提交表单或访问会话cookie，则可能需要修改&lt;a href=&quot;settings#std:setting-CSRF_COOKIE_SAMESITE&quot;&gt; &lt;code&gt;CSRF_COOKIE_SAMESITE&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;settings#std:setting-SESSION_COOKIE_SAMESITE&quot;&gt; &lt;code&gt;SESSION_COOKIE_SAMESITE&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="f156652923d4a2867402c1c5d313ea25450f71ae" translate="yes" xml:space="preserve">
          <source>If you want to upload multiple files using one form field, set the &lt;code&gt;multiple&lt;/code&gt; HTML attribute of field&amp;rsquo;s widget:</source>
          <target state="translated">如果要使用一个表单字段上载多个文件，请设置该字段的小部件的 &lt;code&gt;multiple&lt;/code&gt; HTML属性：</target>
        </trans-unit>
        <trans-unit id="45963581a6022c16346e1c2ec6732c8d86176fe6" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;a href=&quot;https://docs.python.org/3/library/pdb.html#module-pdb&quot;&gt;&lt;code&gt;pdb&lt;/code&gt;&lt;/a&gt; while debugging tests, you must disable parallel execution (&lt;code&gt;--parallel=1&lt;/code&gt;). You&amp;rsquo;ll see something like &lt;code&gt;bdb.BdbQuit&lt;/code&gt; if you don&amp;rsquo;t.</source>
          <target state="translated">如果要在调试测试时使用&lt;a href=&quot;https://docs.python.org/3/library/pdb.html#module-pdb&quot;&gt; &lt;code&gt;pdb&lt;/code&gt; ,&lt;/a&gt;则必须禁用并行执行（ &lt;code&gt;--parallel=1&lt;/code&gt; ）。如果没有，您会看到类似 &lt;code&gt;bdb.BdbQuit&lt;/code&gt; 的信息。</target>
        </trans-unit>
        <trans-unit id="09bf01b3a96c96f5b899be6fd6691dca94d0251d" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;code&gt;raise_exception&lt;/code&gt; but also give your users a chance to login first, you can add the &lt;a href=&quot;#django.contrib.auth.decorators.login_required&quot;&gt;&lt;code&gt;login_required()&lt;/code&gt;&lt;/a&gt; decorator:</source>
          <target state="translated">如果要使用 &lt;code&gt;raise_exception&lt;/code&gt; ,但同时又给用户提供了一次登录的机会，则可以添加&lt;a href=&quot;#django.contrib.auth.decorators.login_required&quot;&gt; &lt;code&gt;login_required()&lt;/code&gt; &lt;/a&gt;装饰器：</target>
        </trans-unit>
        <trans-unit id="5dc0b597e5d02af669c0e6dc95f1cbd74aafb742" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;code&gt;{{ MEDIA_URL }}&lt;/code&gt; in your templates, add &lt;code&gt;'django.template.context_processors.media'&lt;/code&gt; in the &lt;code&gt;'context_processors'&lt;/code&gt; option of &lt;a href=&quot;#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果要在模板中使用 &lt;code&gt;{{ MEDIA_URL }}&lt;/code&gt; ，请在&lt;a href=&quot;#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;'context_processors'&lt;/code&gt; 选项中添加 &lt;code&gt;'django.template.context_processors.media'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0c3dd032579f4df0a564516ab9f6887bed67602d" translate="yes" xml:space="preserve">
          <source>If you want to use Django on a production site, use &lt;a href=&quot;https://httpd.apache.org/&quot;&gt;Apache&lt;/a&gt; with &lt;a href=&quot;https://modwsgi.readthedocs.io/en/develop/&quot;&gt;mod_wsgi&lt;/a&gt;. mod_wsgi operates in one of two modes: embedded mode or daemon mode. In embedded mode, mod_wsgi is similar to mod_perl &amp;ndash; it embeds Python within Apache and loads Python code into memory when the server starts. Code stays in memory throughout the life of an Apache process, which leads to significant performance gains over other server arrangements. In daemon mode, mod_wsgi spawns an independent daemon process that handles requests. The daemon process can run as a different user than the Web server, possibly leading to improved security. The daemon process can be restarted without restarting the entire Apache Web server, possibly making refreshing your codebase more seamless. Consult the mod_wsgi documentation to determine which mode is right for your setup. Make sure you have Apache installed with the mod_wsgi module activated. Django will work with any version of Apache that supports mod_wsgi.</source>
          <target state="translated">如果要在生产站点上使用Django，请将&lt;a href=&quot;https://httpd.apache.org/&quot;&gt;Apache&lt;/a&gt;与&lt;a href=&quot;https://modwsgi.readthedocs.io/en/develop/&quot;&gt;mod_wsgi一起使用&lt;/a&gt;。 mod_wsgi在以下两种模式之一中运行：嵌入式模式或守护程序模式。在嵌入式模式下，mod_wsgi与mod_perl相似&amp;ndash;将Python嵌入Apache并在服务器启动时将Python代码加载到内存中。代码在Apache进程的整个生命周期中都保留在内存中，与其他服务器相比，它可以显着提高性能。在守护程序模式下，mod_wsgi产生一个独立的守护进程来处理请求。守护进程可以与Web服务器不同的用户身份运行，这可能会提高安全性。可以在不重新启动整个Apache Web服务器的情况下重新启动守护进程，这可能使刷新代码库更加无缝。请查阅mod_wsgi文档，确定哪种模式适合您的设置。确保已安装了已激活mod_wsgi模块的Apache。Django可以与任何支持mod_wsgi的Apache版本一起使用。</target>
        </trans-unit>
        <trans-unit id="7c92963f8c898d1ccffd90cfaac208f60b5e5b47" translate="yes" xml:space="preserve">
          <source>If you want to use a custom &lt;a href=&quot;../forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt; (for instance to add extra validation), set &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.FormMixin.form_class&quot;&gt;&lt;code&gt;form_class&lt;/code&gt;&lt;/a&gt; on your view.</source>
          <target state="translated">如果要使用自定义&lt;a href=&quot;../forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt;（例如，添加额外的验证），&lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.FormMixin.form_class&quot;&gt; &lt;code&gt;form_class&lt;/code&gt; &lt;/a&gt;在视图上设置form_class。</target>
        </trans-unit>
        <trans-unit id="316d41ea216f94382282cfe3b25a5c07e352a193" translate="yes" xml:space="preserve">
          <source>If you want to use a custom widget with a relation field (i.e. &lt;a href=&quot;../../models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;), make sure you haven&amp;rsquo;t included that field&amp;rsquo;s name in &lt;code&gt;raw_id_fields&lt;/code&gt;, &lt;code&gt;radio_fields&lt;/code&gt;, or &lt;code&gt;autocomplete_fields&lt;/code&gt;.</source>
          <target state="translated">如果要使用带有关系字段的自定义窗口小部件（即&lt;a href=&quot;../../models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;），请确保未在 &lt;code&gt;raw_id_fields&lt;/code&gt; ， &lt;code&gt;radio_fields&lt;/code&gt; 或 &lt;code&gt;autocomplete_fields&lt;/code&gt; 中包含该字段的名称。</target>
        </trans-unit>
        <trans-unit id="72ff3767011b9eb84f053fc485cd959d42700e5b" translate="yes" xml:space="preserve">
          <source>If you want to use a database-backed session, you need to add &lt;code&gt;'django.contrib.sessions'&lt;/code&gt; to your &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">如果要使用数据库支持的会话，则需要在&lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置中添加 &lt;code&gt;'django.contrib.sessions'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c485b12671856cb3f97a146712ef453cc167eaf1" translate="yes" xml:space="preserve">
          <source>If you want to use a different &lt;code&gt;Client&lt;/code&gt; class (for example, a subclass with customized behavior), use the &lt;a href=&quot;#django.test.SimpleTestCase.client_class&quot;&gt;&lt;code&gt;client_class&lt;/code&gt;&lt;/a&gt; class attribute:</source>
          <target state="translated">如果要使用其他 &lt;code&gt;Client&lt;/code&gt; 类（例如，具有自定义行为的子类），请使用&lt;a href=&quot;#django.test.SimpleTestCase.client_class&quot;&gt; &lt;code&gt;client_class&lt;/code&gt; &lt;/a&gt;类属性：</target>
        </trans-unit>
        <trans-unit id="5db65e04d45386782928afe748f9d80b1e108065" translate="yes" xml:space="preserve">
          <source>If you want to use headers to disable caching altogether, &lt;a href=&quot;http/decorators#django.views.decorators.cache.never_cache&quot;&gt;&lt;code&gt;never_cache()&lt;/code&gt;&lt;/a&gt; is a view decorator that adds headers to ensure the response won&amp;rsquo;t be cached by browsers or other caches. Example:</source>
          <target state="translated">如果要使用标&lt;a href=&quot;http/decorators#django.views.decorators.cache.never_cache&quot;&gt; &lt;code&gt;never_cache()&lt;/code&gt; &lt;/a&gt;完全禁用缓存，never_cache（）是一个视图装饰器，它添加标头以确保响应不会被浏览器或其他缓存所缓存。例：</target>
        </trans-unit>
        <trans-unit id="8361c5fa5bdf1c6b873a3e941b8993711b228a02" translate="yes" xml:space="preserve">
          <source>If you want to use the admin layout, extend from &lt;code&gt;admin/base_site.html&lt;/code&gt;:</source>
          <target state="translated">如果要使用管理员布局，请从 &lt;code&gt;admin/base_site.html&lt;/code&gt; 扩展：</target>
        </trans-unit>
        <trans-unit id="7a82fb0e4828be0c9686fdb58d8239454489f85b" translate="yes" xml:space="preserve">
          <source>If you want to work with model classes or model instances from the &lt;code&gt;from_state&lt;/code&gt; argument in &lt;code&gt;database_forwards()&lt;/code&gt; or &lt;code&gt;database_backwards()&lt;/code&gt;, you must render model states using the &lt;code&gt;clear_delayed_apps_cache()&lt;/code&gt; method to make related models available:</source>
          <target state="translated">如果要通过 &lt;code&gt;database_forwards()&lt;/code&gt; 或 &lt;code&gt;database_backwards()&lt;/code&gt; 中的 &lt;code&gt;from_state&lt;/code&gt; 参数使用模型类或模型实例，则必须使用 &lt;code&gt;clear_delayed_apps_cache()&lt;/code&gt; 方法呈现模型状态，以使相关模型可用：</target>
        </trans-unit>
        <trans-unit id="ddefbc21db307ddde4dcfed071042c3b03fd65a6" translate="yes" xml:space="preserve">
          <source>If you want your custom user model to also work with the admin, your user model must define some additional attributes and methods. These methods allow the admin to control access of the user to admin content:</source>
          <target state="translated">如果你希望你的自定义用户模型也能与管理员一起工作,你的用户模型必须定义一些额外的属性和方法。这些方法允许管理员控制用户对管理员内容的访问。</target>
        </trans-unit>
        <trans-unit id="281b29199ee15df8030aeddb22d5e3ee5ba23b2d" translate="yes" xml:space="preserve">
          <source>If you wanted to add a new manager to the Proxy, without replacing the existing default, you can use the techniques described in the &lt;a href=&quot;managers#custom-managers-and-inheritance&quot;&gt;custom manager&lt;/a&gt; documentation: create a base class containing the new managers and inherit that after the primary base class:</source>
          <target state="translated">如果要向代理添加新的管理器而不替换现有的默认管理器，则可以使用&lt;a href=&quot;managers#custom-managers-and-inheritance&quot;&gt;定制管理器&lt;/a&gt;文档中描述的技术：创建包含新管理器的基类，并在主基类之后继承该基类：</target>
        </trans-unit>
        <trans-unit id="ce151f538ddf72bffbb0e10083ffad1aba038cda" translate="yes" xml:space="preserve">
          <source>If you wanted to add checks to a model manager, you would take the same approach on your subclass of &lt;a href=&quot;db/managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果要向模型管理器添加检查，则可以对&lt;a href=&quot;db/managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt;的子类采用相同的方法。</target>
        </trans-unit>
        <trans-unit id="c6cd0e76c2fef52fb36e48a577f2af1ba781eba5" translate="yes" xml:space="preserve">
          <source>If you wanted to display an inline on the &lt;code&gt;Person&lt;/code&gt; admin add/change pages you need to explicitly define the foreign key since it is unable to do so automatically:</source>
          <target state="translated">如果要在&amp;ldquo; &lt;code&gt;Person&lt;/code&gt; 管理员添加/更改页面上显示内联，则需要显式定义外键，因为它无法自动进行以下操作：</target>
        </trans-unit>
        <trans-unit id="07539613b20b80f84b619ddd76722bd149b459aa" translate="yes" xml:space="preserve">
          <source>If you wanted to retrieve the uploaded file&amp;rsquo;s on-disk filename, or the file&amp;rsquo;s size, you could use the &lt;a href=&quot;../files/file#django.core.files.File.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../files/file#django.core.files.File.size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt; attributes respectively; for more information on the available attributes and methods, see the &lt;a href=&quot;../files/file#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; class reference and the &lt;a href=&quot;../../topics/files&quot;&gt;Managing files&lt;/a&gt; topic guide.</source>
          <target state="translated">如果要检索上载文件的磁盘上文件名或文件大小，则可以分别使用&lt;a href=&quot;../files/file#django.core.files.File.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../files/file#django.core.files.File.size&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt;属性。有关可用属性和方法的更多信息，请参见&amp;ldquo; &lt;a href=&quot;../files/file#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;类参考&amp;rdquo;和&amp;ldquo; &lt;a href=&quot;../../topics/files&quot;&gt;管理文件&amp;rdquo;&lt;/a&gt;主题指南。</target>
        </trans-unit>
        <trans-unit id="b0b81a58992bc81d6e10a12990d5032b8172bb7a" translate="yes" xml:space="preserve">
          <source>If you wish to call a function with a &lt;code&gt;using&lt;/code&gt; parameter you can do it by wrapping the call with a &lt;code&gt;lambda&lt;/code&gt; to add an extra parameter:</source>
          <target state="translated">如果您希望 &lt;code&gt;using&lt;/code&gt; 参数来调用函数，则可以通过用 &lt;code&gt;lambda&lt;/code&gt; 包裹调用来添加额外的参数来实现：</target>
        </trans-unit>
        <trans-unit id="f26de0b1fb03d0b7c3a7b0c5f5e0aa437ee3f542" translate="yes" xml:space="preserve">
          <source>If you wish to change the index, login or logout templates, you are better off creating your own &lt;code&gt;AdminSite&lt;/code&gt; instance (see below), and changing the &lt;a href=&quot;#django.contrib.admin.AdminSite.index_template&quot;&gt;&lt;code&gt;AdminSite.index_template&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;#django.contrib.admin.AdminSite.login_template&quot;&gt;&lt;code&gt;AdminSite.login_template&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.contrib.admin.AdminSite.logout_template&quot;&gt;&lt;code&gt;AdminSite.logout_template&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="translated">如果要更改索引，登录或注销模板，最好创建自己的 &lt;code&gt;AdminSite&lt;/code&gt; 实例（请参见下文），并更改&lt;a href=&quot;#django.contrib.admin.AdminSite.index_template&quot;&gt; &lt;code&gt;AdminSite.index_template&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#django.contrib.admin.AdminSite.login_template&quot;&gt; &lt;code&gt;AdminSite.login_template&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#django.contrib.admin.AdminSite.logout_template&quot;&gt; &lt;code&gt;AdminSite.logout_template&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="fd89bde5afb1b4ac48d534864f59e0b25319f574" translate="yes" xml:space="preserve">
          <source>If you wish to have separate templates for &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#CreateView&quot;&gt;&lt;code&gt;CreateView&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#UpdateView&quot;&gt;&lt;code&gt;UpdateView&lt;/code&gt;&lt;/a&gt;, you can set either &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt;&lt;code&gt;template_name&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin.template_name_suffix&quot;&gt;&lt;code&gt;template_name_suffix&lt;/code&gt;&lt;/a&gt; on your view class.</source>
          <target state="translated">如果希望为&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#CreateView&quot;&gt; &lt;code&gt;CreateView&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#UpdateView&quot;&gt; &lt;code&gt;UpdateView&lt;/code&gt; &lt;/a&gt;使用单独的模板，则可以在视图类上设置&lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt; &lt;code&gt;template_name&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin.template_name_suffix&quot;&gt; &lt;code&gt;template_name_suffix&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c63c598798c3a61a008e5d7569767325195fe300" translate="yes" xml:space="preserve">
          <source>If you wish to override this behavior, you can override &lt;a href=&quot;index#django.contrib.admin.ModelAdmin.delete_queryset&quot;&gt;&lt;code&gt;ModelAdmin.delete_queryset()&lt;/code&gt;&lt;/a&gt; or write a custom action which does deletion in your preferred manner &amp;ndash; for example, by calling &lt;code&gt;Model.delete()&lt;/code&gt; for each of the selected items.</source>
          <target state="translated">如果您希望覆盖此行为，则可以覆盖&lt;a href=&quot;index#django.contrib.admin.ModelAdmin.delete_queryset&quot;&gt; &lt;code&gt;ModelAdmin.delete_queryset()&lt;/code&gt; &lt;/a&gt;或编写一个自定义操作，该操作会以您喜欢的方式进行删除-例如，通过为每个选定项调用 &lt;code&gt;Model.delete()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c81732d3ee4b9133691a67e4efeae93d3348110c" translate="yes" xml:space="preserve">
          <source>If you wish to perform arbitrary distance queries using non-point geometries in WGS84 in PostGIS and you want decent performance, enable the &lt;a href=&quot;#django.contrib.gis.db.models.GeometryField.geography&quot;&gt;&lt;code&gt;GeometryField.geography&lt;/code&gt;&lt;/a&gt; keyword so that &lt;a href=&quot;#geography-type&quot;&gt;geography database type&lt;/a&gt; is used instead.</source>
          <target state="translated">如果希望在PostGIS的WGS84中使用非点几何来执行任意距离查询，并且想要获得不错的性能，请启用&lt;a href=&quot;#django.contrib.gis.db.models.GeometryField.geography&quot;&gt; &lt;code&gt;GeometryField.geography&lt;/code&gt; &lt;/a&gt;关键字，以便改用&lt;a href=&quot;#geography-type&quot;&gt;地理数据库类型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d149fe0ba9386b629de5325bd32fff38e705d495" translate="yes" xml:space="preserve">
          <source>If you wish to protect a list, tuple or dictionary you can do so using the signing module&amp;rsquo;s &lt;code&gt;dumps&lt;/code&gt; and &lt;code&gt;loads&lt;/code&gt; functions. These imitate Python&amp;rsquo;s pickle module, but use JSON serialization under the hood. JSON ensures that even if your &lt;a href=&quot;../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt; is stolen an attacker will not be able to execute arbitrary commands by exploiting the pickle format:</source>
          <target state="translated">如果您希望保护列表，元组或字典，则可以使用签名模块的 &lt;code&gt;dumps&lt;/code&gt; 和 &lt;code&gt;loads&lt;/code&gt; 功能来实现。它们模仿Python的pickle模块，但在后台使用JSON序列化。JSON确保即使您的&lt;a href=&quot;../ref/settings#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; &lt;/a&gt;被盗，攻击者也无法通过利用pickle格式执行任意命令：</target>
        </trans-unit>
        <trans-unit id="1a7ff6c29d67b18f351c6ef695f42316c70e46f0" translate="yes" xml:space="preserve">
          <source>If you wish to store information related to &lt;code&gt;User&lt;/code&gt;, you can use a &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; to a model containing the fields for additional information. This one-to-one model is often called a profile model, as it might store non-auth related information about a site user. For example you might create an Employee model:</source>
          <target state="translated">如果您希望存储与 &lt;code&gt;User&lt;/code&gt; 相关的信息，则可以对包含其他信息字段的模型使用&lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt;。这种一对一模型通常称为配置文件模型，因为它可能存储有关站点用户的与身份验证无关的信息。例如，您可以创建一个Employee模型：</target>
        </trans-unit>
        <trans-unit id="e3163de4f64d0e6226c0693d4c28e0ff7be844ba" translate="yes" xml:space="preserve">
          <source>If you wish to store the CSRF token in the user&amp;rsquo;s session, use the &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt;&lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">如果希望将CSRF令牌存储在用户的会话中，请使用&lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt; &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="95ab3f31deb5e5844d6cefd4f6792b2923cdc1d0" translate="yes" xml:space="preserve">
          <source>If you wish to submit your site to the &lt;a href=&quot;https://hstspreload.org/&quot;&gt;browser preload list&lt;/a&gt;, set the &lt;a href=&quot;settings#std:setting-SECURE_HSTS_PRELOAD&quot;&gt;&lt;code&gt;SECURE_HSTS_PRELOAD&lt;/code&gt;&lt;/a&gt; setting to &lt;code&gt;True&lt;/code&gt;. That appends the &lt;code&gt;preload&lt;/code&gt; directive to the &lt;code&gt;Strict-Transport-Security&lt;/code&gt; header.</source>
          <target state="translated">如果希望将站点提交到&lt;a href=&quot;https://hstspreload.org/&quot;&gt;浏览器预加载列表&lt;/a&gt;，请将&lt;a href=&quot;settings#std:setting-SECURE_HSTS_PRELOAD&quot;&gt; &lt;code&gt;SECURE_HSTS_PRELOAD&lt;/code&gt; &lt;/a&gt;设置设置为 &lt;code&gt;True&lt;/code&gt; 。这会将 &lt;code&gt;preload&lt;/code&gt; 指令附加到 &lt;code&gt;Strict-Transport-Security&lt;/code&gt; 标头。</target>
        </trans-unit>
        <trans-unit id="530ae0cc38e2e42a905344acaf5f960f73fc3715" translate="yes" xml:space="preserve">
          <source>If you wish to use a different template for each sitemap or sitemap index available on your site, you may specify it by passing a &lt;code&gt;template_name&lt;/code&gt; parameter to the &lt;code&gt;sitemap&lt;/code&gt; and &lt;code&gt;index&lt;/code&gt; views via the URLconf:</source>
          <target state="translated">如果您希望对网站上可用的每个站点地图或站点地图索引使用不同的模板，则可以通过URLconf 将 &lt;code&gt;template_name&lt;/code&gt; 参数传递给 &lt;code&gt;sitemap&lt;/code&gt; 和 &lt;code&gt;index&lt;/code&gt; 视图来指定模板：</target>
        </trans-unit>
        <trans-unit id="6909e16e21302fa3cec3921ce60357ae9b5838a2" translate="yes" xml:space="preserve">
          <source>If you wish to use another database, install the appropriate &lt;a href=&quot;../topics/install#database-installation&quot;&gt;database bindings&lt;/a&gt; and change the following keys in the &lt;a href=&quot;../ref/settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt;&lt;code&gt;'default'&lt;/code&gt; item to match your database connection settings:</source>
          <target state="translated">如果您希望使用另一个数据库，请安装适当的&lt;a href=&quot;../topics/install#database-installation&quot;&gt;数据库绑定&lt;/a&gt;并在&lt;a href=&quot;../ref/settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt; &lt;code&gt;'default'&lt;/code&gt; 项中更改以下键以匹配您的数据库连接设置：</target>
        </trans-unit>
        <trans-unit id="b6e2765329d13f9a756817f8148fc06ebd15e20d" translate="yes" xml:space="preserve">
          <source>If you would like to give translators hints about a translatable string, you can add a comment prefixed with the &lt;code&gt;Translators&lt;/code&gt; keyword on the line preceding the string, e.g.:</source>
          <target state="translated">如果您想为翻译人员提供有关可翻译字符串的提示，则可以在该字符串之前的行上添加以 &lt;code&gt;Translators&lt;/code&gt; 关键字为前缀的注释，例如：</target>
        </trans-unit>
        <trans-unit id="ec10a212c4274c393a2dd780fbf91de455cc5cb9" translate="yes" xml:space="preserve">
          <source>If you would like to override the &lt;code&gt;clean()&lt;/code&gt; method and maintain this validation, you must call the parent class&amp;rsquo;s &lt;code&gt;clean()&lt;/code&gt; method.</source>
          <target state="translated">如果要覆盖 &lt;code&gt;clean()&lt;/code&gt; 方法并保持此验证，则必须调用父类的 &lt;code&gt;clean()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="3f28065cea9d31fe5a0cfcc2e982ee60d5116348" translate="yes" xml:space="preserve">
          <source>If you would rather start from an empty database and re-run all migrations, you should drop and recreate the database and then run &lt;a href=&quot;#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">如果您希望从一个空的数据库开始并重新运行所有迁移，则应删除并重新创建数据库，然后运行&lt;a href=&quot;#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="787d4b4a6adbad5e56e698fbb47e2f7227b1967b" translate="yes" xml:space="preserve">
          <source>If you write a custom filter that operates on &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; objects, you&amp;rsquo;ll usually register it with the &lt;code&gt;expects_localtime&lt;/code&gt; flag set to &lt;code&gt;True&lt;/code&gt;:</source>
          <target state="translated">如果编写对&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;对象进行操作的自定义过滤器，则通常会在将 &lt;code&gt;expects_localtime&lt;/code&gt; 标志设置为 &lt;code&gt;True&lt;/code&gt; 的情况下进行注册：</target>
        </trans-unit>
        <trans-unit id="41a73fd1c496ecfedcbd96f35862caf467d2aa9d" translate="yes" xml:space="preserve">
          <source>If you write your own password hasher that contains a work factor such as a number of iterations, you should implement a &lt;code&gt;harden_runtime(self, password, encoded)&lt;/code&gt; method to bridge the runtime gap between the work factor supplied in the &lt;code&gt;encoded&lt;/code&gt; password and the default work factor of the hasher. This prevents a user enumeration timing attack due to difference between a login request for a user with a password encoded in an older number of iterations and a nonexistent user (which runs the default hasher&amp;rsquo;s default number of iterations).</source>
          <target state="translated">如果您编写自己的密码哈希器，其中包含工作因子（例如多次迭代），则应实现 &lt;code&gt;harden_runtime(self, password, encoded)&lt;/code&gt; 方法，以弥合 &lt;code&gt;encoded&lt;/code&gt; 密码中提供的工作因子与默认工作之间的运行时差距哈希的因素。这样可以防止由于对用户的登录请求（使用密码以较旧的迭代次数进行编码）和不存在的用户（运行默认哈希器的默认迭代次数）之间的差异而导致的用户枚举计时攻击。</target>
        </trans-unit>
        <trans-unit id="0874fbd3ce49447e25c47a3eeb9385b0739ec7b9" translate="yes" xml:space="preserve">
          <source>If you write your own similar functions and deal with translations, you&amp;rsquo;ll face the problem of what to do when the first argument is a lazy translation object. You don&amp;rsquo;t want to convert it to a string immediately, because you might be using this function outside of a view (and hence the current thread&amp;rsquo;s locale setting will not be correct).</source>
          <target state="translated">如果您编写自己的类似函数并处理翻译，则当第一个参数是惰性翻译对象时，您将面临如何处理的问题。您不希望立即将其转换为字符串，因为您可能在视图外使用此函数（因此当前线程的语言环境设置将不正确）。</target>
        </trans-unit>
        <trans-unit id="7404aaf8b678e2be0f5abe5634bc5b715f5e8c11" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like default values to come from somewhere other than &lt;code&gt;django.conf.global_settings&lt;/code&gt;, you can pass in a module or class that provides the default settings as the &lt;code&gt;default_settings&lt;/code&gt; argument (or as the first positional argument) in the call to &lt;code&gt;configure()&lt;/code&gt;.</source>
          <target state="translated">如果您希望默认值来自 &lt;code&gt;django.conf.global_settings&lt;/code&gt; 以外的其他地方，则可以传入提供默认设置的模块或类作为 &lt;code&gt;default_settings&lt;/code&gt; 参数（或作为第一个位置参数），以调用 &lt;code&gt;configure()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="87fbb560a0a7d5bfb6385760a929b01781e9247b" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to be able to update your Django code occasionally with the latest bug fixes and improvements, follow these instructions:</source>
          <target state="translated">如果您希望能够偶尔通过最新的错误修复和改进来更新Django代码，请按照以下说明进行操作：</target>
        </trans-unit>
        <trans-unit id="2e426d25005a653ab3104419888711627e40acb9" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to customize the behavior of &lt;a href=&quot;../ref/middleware#django.middleware.common.BrokenLinkEmailsMiddleware&quot;&gt;&lt;code&gt;django.middleware.common.BrokenLinkEmailsMiddleware&lt;/code&gt;&lt;/a&gt; further (for example to ignore requests coming from web crawlers), you should subclass it and override its methods.</source>
          <target state="translated">如果您想进一步自定义&lt;a href=&quot;../ref/middleware#django.middleware.common.BrokenLinkEmailsMiddleware&quot;&gt; &lt;code&gt;django.middleware.common.BrokenLinkEmailsMiddleware&lt;/code&gt; &lt;/a&gt;的行为（例如，忽略来自Web爬网程序的请求），则应将其子类化并覆盖其方法。</target>
        </trans-unit>
        <trans-unit id="40a45578a28fb495c1954bbd188030f39d58e346" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to manually authenticate a user by comparing a plain-text password to the hashed password in the database, use the convenience function &lt;a href=&quot;#django.contrib.auth.hashers.check_password&quot;&gt;&lt;code&gt;check_password()&lt;/code&gt;&lt;/a&gt;. It takes two arguments: the plain-text password to check, and the full value of a user&amp;rsquo;s &lt;code&gt;password&lt;/code&gt; field in the database to check against, and returns &lt;code&gt;True&lt;/code&gt; if they match, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果您想通过将纯文本密码与数据库中的哈希密码进行比较来手动验证用户身份，请使用便捷功能&lt;a href=&quot;#django.contrib.auth.hashers.check_password&quot;&gt; &lt;code&gt;check_password()&lt;/code&gt; &lt;/a&gt;。它有两个参数：要检查的纯文本密码，以及要检查的用户 &lt;code&gt;password&lt;/code&gt; 字段在数据库中的完整值，如果匹配则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7032cf12cbd255835e52ce652c41252d70b15172" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to retrieve a URL without displaying it, you can use a slightly different call:</source>
          <target state="translated">如果您想检索一个URL但不显示它，则可以使用一个稍微不同的调用：</target>
        </trans-unit>
        <trans-unit id="3e6e1935ff1f8bbe3d9a10a3392b2aed18e77332" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to retrieve a namespaced URL, specify the fully qualified name:</source>
          <target state="translated">如果要检索命名空间的URL，请指定全限定名：</target>
        </trans-unit>
        <trans-unit id="42574c0524ed457c65a64125a0ee03cde3ec0664" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to retrieve a static URL without displaying it, you can use a slightly different call:</source>
          <target state="translated">如果您想在不显示静态网址的情况下对其进行检索，则可以使用稍微不同的调用：</target>
        </trans-unit>
        <trans-unit id="782329d0998e5379bd00452f104bcc26d52e8259" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to retrieve a translated string without displaying it, you can use the following syntax:</source>
          <target state="translated">如果您想在不显示转换后的字符串的情况下不显示该字符串，则可以使用以下语法：</target>
        </trans-unit>
        <trans-unit id="a678c4aabe8ea3a89184137c4d4eb0cd0f145382" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to set up your own admin site with custom behavior, you&amp;rsquo;re free to subclass &lt;code&gt;AdminSite&lt;/code&gt; and override or add anything you like. Then, create an instance of your &lt;code&gt;AdminSite&lt;/code&gt; subclass (the same way you&amp;rsquo;d instantiate any other Python class) and register your models and &lt;code&gt;ModelAdmin&lt;/code&gt; subclasses with it instead of with the default site. Finally, update &lt;code&gt;myproject/urls.py&lt;/code&gt; to reference your &lt;a href=&quot;#django.contrib.admin.AdminSite&quot;&gt;&lt;code&gt;AdminSite&lt;/code&gt;&lt;/a&gt; subclass.</source>
          <target state="translated">如果您想使用自定义行为来设置自己的管理网站，则可以随意 &lt;code&gt;AdminSite&lt;/code&gt; 子类，并覆盖或添加所需的任何内容。然后，创建 &lt;code&gt;AdminSite&lt;/code&gt; 子类的实例（与实例化任何其他Python类的方式相同），并用它（而不是默认站点）注册模型和 &lt;code&gt;ModelAdmin&lt;/code&gt; 子类。最后，更新 &lt;code&gt;myproject/urls.py&lt;/code&gt; 以引用您的&lt;a href=&quot;#django.contrib.admin.AdminSite&quot;&gt; &lt;code&gt;AdminSite&lt;/code&gt; &lt;/a&gt;子类。</target>
        </trans-unit>
        <trans-unit id="817d51330fc9dd66b1c2b0e80b8eed9e206bc902" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to specify a custom primary key, specify &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt;&lt;code&gt;primary_key=True&lt;/code&gt;&lt;/a&gt; on one of your fields. If Django sees you&amp;rsquo;ve explicitly set &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt;&lt;code&gt;Field.primary_key&lt;/code&gt;&lt;/a&gt;, it won&amp;rsquo;t add the automatic &lt;code&gt;id&lt;/code&gt; column.</source>
          <target state="translated">如果您想指定自定义主键，请在您的其中一个字段上指定&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt; &lt;code&gt;primary_key=True&lt;/code&gt; &lt;/a&gt;。如果Django看到您已显式设置&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt; &lt;code&gt;Field.primary_key&lt;/code&gt; &lt;/a&gt;，则不会添加自动 &lt;code&gt;id&lt;/code&gt; 列。</target>
        </trans-unit>
        <trans-unit id="59523cacb99089a63ab1f97cf8f948701988f18d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d prefer Django not to create a backwards relation, set &lt;code&gt;related_name&lt;/code&gt; to &lt;code&gt;'+'&lt;/code&gt; or end it with &lt;code&gt;'+'&lt;/code&gt;. For example, this will ensure that the &lt;code&gt;User&lt;/code&gt; model won&amp;rsquo;t have a backwards relation to this model:</source>
          <target state="translated">如果你喜欢的Django不创建向后关系，集 &lt;code&gt;related_name&lt;/code&gt; 到 &lt;code&gt;'+'&lt;/code&gt; 或结束它 &lt;code&gt;'+'&lt;/code&gt; 。例如，这将确保 &lt;code&gt;User&lt;/code&gt; 模型不会与此模型具有向后关系：</target>
        </trans-unit>
        <trans-unit id="1b20aacdd666251729295967fecf137a2c2099d5" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d prefer not to call the template &lt;code&gt;registration/login.html&lt;/code&gt;, you can pass the &lt;code&gt;template_name&lt;/code&gt; parameter via the extra arguments to the &lt;code&gt;as_view&lt;/code&gt; method in your URLconf. For example, this URLconf line would use &lt;code&gt;myapp/login.html&lt;/code&gt; instead:</source>
          <target state="translated">如果您不想调用模板 &lt;code&gt;registration/login.html&lt;/code&gt; ，则可以通过额外的参数将 &lt;code&gt;template_name&lt;/code&gt; 参数传递给URLconf中的 &lt;code&gt;as_view&lt;/code&gt; 方法。例如，此URLconf行将改用 &lt;code&gt;myapp/login.html&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="48c682ae2cbd0afba4b4eae5274158bf92b45a13" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re after even more control, you can also cache template fragments using the &lt;code&gt;cache&lt;/code&gt; template tag. To give your template access to this tag, put &lt;code&gt;{% load cache %}&lt;/code&gt; near the top of your template.</source>
          <target state="translated">如果您想获得更多控制权，还可以使用 &lt;code&gt;cache&lt;/code&gt; template标签来缓存模板片段。要使您的模板可以访问此标签，请在模板顶部附近放置 &lt;code&gt;{% load cache %}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="767eed5b450bd819bca83e5738282f4f7be2808f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re building a database-driven app, chances are you&amp;rsquo;ll have forms that map closely to Django models. For instance, you might have a &lt;code&gt;BlogComment&lt;/code&gt; model, and you want to create a form that lets people submit comments. In this case, it would be redundant to define the field types in your form, because you&amp;rsquo;ve already defined the fields in your model.</source>
          <target state="translated">如果您要构建数据库驱动的应用程序，那么您的表格很可能会与Django模型紧密映射。例如，您可能有一个 &lt;code&gt;BlogComment&lt;/code&gt; 模型，并且您想要创建一个允许人们提交评论的表单。在这种情况下，在表单中定义字段类型将是多余的，因为您已经在模型中定义了字段。</target>
        </trans-unit>
        <trans-unit id="abfc88abce0b83f7179182a6de094082846b855c" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re building your own backend, you can use the standard cache backends as reference implementations. You&amp;rsquo;ll find the code in the &lt;code&gt;django/core/cache/backends/&lt;/code&gt; directory of the Django source.</source>
          <target state="translated">如果要构建自己的后端，则可以将标准缓存后端用作参考实现。您将在Django源代码的 &lt;code&gt;django/core/cache/backends/&lt;/code&gt; 目录中找到代码。</target>
        </trans-unit>
        <trans-unit id="cdde1ef1672874bcb82d804c53395d8d7aa1ed21" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re constructing SQL like &lt;code&gt;strftime('%W', 'date')&lt;/code&gt; and need a literal &lt;code&gt;%&lt;/code&gt; character in the query, quadruple it (&lt;code&gt;%%%%&lt;/code&gt;) in the &lt;code&gt;template&lt;/code&gt; attribute because the string is interpolated twice: once during the template interpolation in &lt;code&gt;as_sql()&lt;/code&gt; and once in the SQL interpolation with the query parameters in the database cursor.</source>
          <target state="translated">如果您要构造类似于 &lt;code&gt;strftime('%W', 'date')&lt;/code&gt; SQL ，并且在查询中需要一个文字 &lt;code&gt;%&lt;/code&gt; 字符，请在 &lt;code&gt;template&lt;/code&gt; 属性中将它加倍（ &lt;code&gt;%%%%&lt;/code&gt; ），因为该字符串会被内插两次：在 &lt;code&gt;as_sql()&lt;/code&gt; 中使用模板插值，在SQL插值中一次使用数据库游标中的查询参数进行模板插值。</target>
        </trans-unit>
        <trans-unit id="ab456d418794c4d43bbff01956e9a7a76d213a8a" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re constructing a URL manually (i.e., &lt;em&gt;not&lt;/em&gt; using the &lt;code&gt;reverse()&lt;/code&gt; function), you&amp;rsquo;ll need to take care of the encoding yourself. In this case, use the &lt;code&gt;iri_to_uri()&lt;/code&gt; and &lt;code&gt;quote()&lt;/code&gt; functions that were documented &lt;a href=&quot;#id1&quot;&gt;above&lt;/a&gt;. For example:</source>
          <target state="translated">如果要手动构造URL（即，&lt;em&gt;不&lt;/em&gt;使用 &lt;code&gt;reverse()&lt;/code&gt; 函数），则需要自己进行编码。在这种情况下，使用 &lt;code&gt;iri_to_uri()&lt;/code&gt; 和 &lt;code&gt;quote()&lt;/code&gt; 被记录在案，其功能&lt;a href=&quot;#id1&quot;&gt;之上&lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="6d1f283bcbf28eac94ae688e9ec728c932159a38" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re creating a pluggable app called &amp;ldquo;Rock &amp;rsquo;n&amp;rsquo; roll&amp;rdquo;, here&amp;rsquo;s how you would provide a proper name for the admin:</source>
          <target state="translated">如果您要创建一个名为&amp;ldquo; Rock'n'roll&amp;rdquo;的可插拔应用，请按照以下步骤为管理员提供适当的名称：</target>
        </trans-unit>
        <trans-unit id="48483c8c5c77a7b69d1a11700c288faaa0c7a213" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re creating a template that might be used in situations where you&amp;rsquo;re not sure whether auto-escaping is enabled, then add an &lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt;&lt;code&gt;escape&lt;/code&gt;&lt;/a&gt; filter to any variable that needs escaping. When auto-escaping is on, there&amp;rsquo;s no danger of the &lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt;&lt;code&gt;escape&lt;/code&gt;&lt;/a&gt; filter &lt;em&gt;double-escaping&lt;/em&gt; data &amp;ndash; the &lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt;&lt;code&gt;escape&lt;/code&gt;&lt;/a&gt; filter does not affect auto-escaped variables.</source>
          <target state="translated">如果要创建的模板可能在不确定是否启用自动转义的情况下使用，请向需要转义的任何变量添加&lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt; &lt;code&gt;escape&lt;/code&gt; &lt;/a&gt;过滤器。启用自动转义后，&lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt; &lt;code&gt;escape&lt;/code&gt; &lt;/a&gt;过滤器不会对数据进行&lt;em&gt;两次转义&lt;/em&gt;，也没有危险&amp;ndash; &lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt; &lt;code&gt;escape&lt;/code&gt; &lt;/a&gt;过滤器不会影响自动转义的变量。</target>
        </trans-unit>
        <trans-unit id="bb584f8f7f077e584c39783ffdb002ff86b811fe" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re creating an Atom feed, rather than an RSS feed, set the &lt;code&gt;subtitle&lt;/code&gt; attribute instead of the &lt;code&gt;description&lt;/code&gt; attribute. See &lt;a href=&quot;#publishing-atom-and-rss-feeds-in-tandem&quot;&gt;Publishing Atom and RSS feeds in tandem&lt;/a&gt;, later, for an example.</source>
          <target state="translated">如果要创建Atom提要而不是RSS提要，请设置 &lt;code&gt;subtitle&lt;/code&gt; 属性而不是 &lt;code&gt;description&lt;/code&gt; 属性。有关示例，请参阅稍后&lt;a href=&quot;#publishing-atom-and-rss-feeds-in-tandem&quot;&gt;以串联方式发布Atom和RSS feed&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4cb96d8c5caf914260b393b1dfd4c0e8a90b35c9" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re entirely happy with Django&amp;rsquo;s &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; model, but you want to add some additional profile information, you could subclass &lt;a href=&quot;#django.contrib.auth.models.AbstractUser&quot;&gt;&lt;code&gt;django.contrib.auth.models.AbstractUser&lt;/code&gt;&lt;/a&gt; and add your custom profile fields, although we&amp;rsquo;d recommend a separate model as described in the &amp;ldquo;Model design considerations&amp;rdquo; note of &lt;a href=&quot;#specifying-custom-user-model&quot;&gt;Specifying a custom user model&lt;/a&gt;. &lt;code&gt;AbstractUser&lt;/code&gt; provides the full implementation of the default &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; as an &lt;a href=&quot;../db/models#abstract-base-classes&quot;&gt;abstract model&lt;/a&gt;.</source>
          <target state="translated">如果您对Django的&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;模型完全满意，但又想添加一些其他配置文件信息，则可以将&lt;a href=&quot;#django.contrib.auth.models.AbstractUser&quot;&gt; &lt;code&gt;django.contrib.auth.models.AbstractUser&lt;/code&gt; &lt;/a&gt;子类化，并添加自定义配置文件字段，尽管我们建议按照以下说明使用其他模型在&lt;a href=&quot;#specifying-custom-user-model&quot;&gt;指定自定义用户模型&lt;/a&gt;的&amp;ldquo;模型设计注意事项&amp;rdquo;注释中。 &lt;code&gt;AbstractUser&lt;/code&gt; 作为默认&lt;a href=&quot;../db/models#abstract-base-classes&quot;&gt;模型&lt;/a&gt;提供了默认&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;的完整实现。</target>
        </trans-unit>
        <trans-unit id="cf98ea5e8ac10c40300863d754cd455a34023fde" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re getting this error, you can solve it by:</source>
          <target state="translated">如果遇到此错误，可以通过以下方法解决：</target>
        </trans-unit>
        <trans-unit id="4ff638989d7f1c32d1bc77a814ea175afb1ded83" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re having trouble going through this tutorial, please head over to the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/faq/help/&quot;&gt;Getting Help&lt;/a&gt; section of the FAQ.</source>
          <target state="translated">如果您在阅读本教程时遇到麻烦，请转到FAQ 的&amp;ldquo; &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/faq/help/&quot;&gt;获得帮助&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="6d2ac7f0ad5bbe9c9e5d4d66af481149008f986f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re having trouble going through this tutorial, please post a message to &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/mailing-lists/#django-developers-mailing-list&quot;&gt;django-developers&lt;/a&gt; or drop by &lt;a href=&quot;irc://irc.freenode.net/django-dev&quot;&gt;#django-dev on irc.freenode.net&lt;/a&gt; to chat with other Django users who might be able to help.</source>
          <target state="translated">如果您在阅读本教程时遇到麻烦，请向&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/mailing-lists/#django-developers-mailing-list&quot;&gt;django开发人员&lt;/a&gt;发布消息，或&lt;a href=&quot;irc://irc.freenode.net/django-dev&quot;&gt;在irc.freenode.net上&lt;/a&gt;通过＃django-dev来与其他可能会提供帮助的Django用户聊天。</target>
        </trans-unit>
        <trans-unit id="7d98d87b390e8d3b15eb2355fe5039a0d87c9028" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re in a multi-database setup, you might have fixture data that you want to load onto one database, but not onto another. In this situation, you can add a database identifier into the names of your fixtures.</source>
          <target state="translated">如果您在多数据库设置中，则可能需要将夹具数据加载到一个数据库中，而不要加载到另一个数据库中。在这种情况下，您可以将数据库标识符添加到灯具的名称中。</target>
        </trans-unit>
        <trans-unit id="36c3a9be516105bc13cecddbe3c1b10fd6b1043c" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested in changing the Python-level behavior of a model class, you &lt;em&gt;could&lt;/em&gt; use &lt;code&gt;managed=False&lt;/code&gt; and create a copy of an existing model. However, there&amp;rsquo;s a better approach for that situation: &lt;a href=&quot;../../topics/db/models#proxy-models&quot;&gt;Proxy models&lt;/a&gt;.</source>
          <target state="translated">如果您对更改模型类的Python级别的行为感兴趣，则&lt;em&gt;可以&lt;/em&gt;使用 &lt;code&gt;managed=False&lt;/code&gt; 并创建现有模型的副本。但是，对于这种情况，有一种更好的方法：&lt;a href=&quot;../../topics/db/models#proxy-models&quot;&gt;代理模型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="99f458dbd1df038441eb2681e7428cb82105b3e7" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested in the more advanced migration operations, or want to be able to write your own, see the &lt;a href=&quot;../ref/migration-operations&quot;&gt;migration operations reference&lt;/a&gt; and the &amp;ldquo;how-to&amp;rdquo; on &lt;a href=&quot;../howto/writing-migrations&quot;&gt;writing migrations&lt;/a&gt;.</source>
          <target state="translated">如果您对更高级的迁移操作感兴趣，或者希望能够编写自己的&lt;a href=&quot;../ref/migration-operations&quot;&gt;迁移操作&lt;/a&gt;，请参阅迁移操作参考和&lt;a href=&quot;../howto/writing-migrations&quot;&gt;编写迁移&lt;/a&gt;的&amp;ldquo;方法&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="90b9a4c5a91dd19aabaed1109072ba30aa990297" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested, you can also run &lt;a href=&quot;../ref/django-admin#django-admin-check&quot;&gt;&lt;code&gt;python manage.py check&lt;/code&gt;&lt;/a&gt;; this checks for any problems in your project without making migrations or touching the database.</source>
          <target state="translated">如果您有兴趣，也可以运行&lt;a href=&quot;../ref/django-admin#django-admin-check&quot;&gt; &lt;code&gt;python manage.py check&lt;/code&gt; &lt;/a&gt; ; 这将检查项目中是否存在任何问题，而无需进行迁移或接触数据库。</target>
        </trans-unit>
        <trans-unit id="254c1791d376774d686299aebfc8b6db7e292b89" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re just updating a record and don&amp;rsquo;t need to do anything with the model object, the most efficient approach is to call &lt;code&gt;update()&lt;/code&gt;, rather than loading the model object into memory. For example, instead of doing this:</source>
          <target state="translated">如果您只是更新记录，而无需对模型对象执行任何操作，则最有效的方法是调用 &lt;code&gt;update()&lt;/code&gt; ，而不是将模型对象加载到内存中。例如，不要这样做：</target>
        </trans-unit>
        <trans-unit id="6535bf89936e50d74084e2cbe76650a8f1162a35" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re manually laying out a form in a template, as opposed to relying on Django&amp;rsquo;s default form layout, you might want to treat &lt;code&gt;&amp;lt;input type=&quot;hidden&quot;&amp;gt;&lt;/code&gt; fields differently from non-hidden fields. For example, because hidden fields don&amp;rsquo;t display anything, putting error messages &amp;ldquo;next to&amp;rdquo; the field could cause confusion for your users &amp;ndash; so errors for those fields should be handled differently.</source>
          <target state="translated">如果您要手动在模板中布局表单，而不是依赖Django的默认表单布局，则可能需要将 &lt;code&gt;&amp;lt;input type=&quot;hidden&quot;&amp;gt;&lt;/code&gt; 字段与非隐藏字段区别对待。例如，由于隐藏字段不显示任何内容，因此将错误消息放在该字段旁边可能会给您的用户造成混乱-因此，应对这些字段的错误进行不同的处理。</target>
        </trans-unit>
        <trans-unit id="255a115dbc0b712cc68471c5b0157f7a05af4797" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re new to &lt;a href=&quot;https://python.org/&quot;&gt;Python&lt;/a&gt;, you might want to start by getting an idea of what the language is like. Django is 100% Python, so if you&amp;rsquo;ve got minimal comfort with Python you&amp;rsquo;ll probably get a lot more out of Django.</source>
          <target state="translated">如果您是&lt;a href=&quot;https://python.org/&quot;&gt;Python的&lt;/a&gt;新手，则可能首先要了解一下语言的样子。Django是100％Python，因此，如果您对Python的使用感到最不舒服，则可能会从Django中获得更多收益。</target>
        </trans-unit>
        <trans-unit id="57db89d44ba94f90db102a29f1cf186e18b0cf37" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re new to programming entirely, you might want to start with this &lt;a href=&quot;https://wiki.python.org/moin/BeginnersGuide/NonProgrammers&quot;&gt;list of Python resources for non-programmers&lt;/a&gt;</source>
          <target state="translated">如果您是完全不熟悉编程的人，则可能想从此&lt;a href=&quot;https://wiki.python.org/moin/BeginnersGuide/NonProgrammers&quot;&gt;面向非程序员的Python资源列表&lt;/a&gt;开始</target>
        </trans-unit>
        <trans-unit id="a1b95c0b433ee48fc48a97069bddf9e2b101dfc4" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not familiar with file modes, please note that the leading &lt;code&gt;0&lt;/code&gt; is very important: it indicates an octal number, which is the way that modes must be specified. If you try to use &lt;code&gt;644&lt;/code&gt;, you&amp;rsquo;ll get totally incorrect behavior.</source>
          <target state="translated">如果您不熟悉文件模式，请注意前导 &lt;code&gt;0&lt;/code&gt; 非常重要：它表示一个八进制数，这是必须指定模式的方式。如果尝试使用 &lt;code&gt;644&lt;/code&gt; ，则会出现完全错误的行为。</target>
        </trans-unit>
        <trans-unit id="fca79f66a708a64746ced9500efdfaadfc0da5f9" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not familiar with the Python DB-API, note that the SQL statement in &lt;code&gt;cursor.execute()&lt;/code&gt; uses placeholders, &lt;code&gt;&quot;%s&quot;&lt;/code&gt;, rather than adding parameters directly within the SQL. If you use this technique, the underlying database library will automatically escape your parameters as necessary.</source>
          <target state="translated">如果您不熟悉Python DB-API，请注意， &lt;code&gt;cursor.execute()&lt;/code&gt; 中的SQL语句使用占位符 &lt;code&gt;&quot;%s&quot;&lt;/code&gt; ，而不是直接在SQL中添加参数。如果使用此技术，则基础数据库库将根据需要自动转义参数。</target>
        </trans-unit>
        <trans-unit id="69337c6de60600bc5976cb6685657eebda60402c" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not setting the &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; environment variable, you &lt;em&gt;must&lt;/em&gt; call &lt;code&gt;configure()&lt;/code&gt; at some point before using any code that reads settings.</source>
          <target state="translated">如果未设置 &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; 环境变量，则&lt;em&gt;必须&lt;/em&gt;在使用任何读取设置的代码之前的某个时刻调用 &lt;code&gt;configure()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4fdba98bf4c4fe90941820a9cac473eb87b6acfa" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not that familiar with Git, you can always find out more about its commands (once it&amp;rsquo;s installed) by typing &lt;code&gt;git help&lt;/code&gt; into the command line.</source>
          <target state="translated">如果您不太熟悉Git，则始终可以通过在命令行中输入 &lt;code&gt;git help&lt;/code&gt; 来了解有关它的命令的更多信息（一旦安装）。</target>
        </trans-unit>
        <trans-unit id="8f2ea50eab7b004cc616e97a7e545f78a1430a05" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not using the Django test runner, you may need to also ensure that any console output is not captured which would hide deprecation warnings. For example, if you use &lt;a href=&quot;https://pytest.org/&quot;&gt;pytest&lt;/a&gt;:</source>
          <target state="translated">如果您不使用Django测试运行程序，则可能还需要确保未捕获任何控制台输出，这会隐藏弃用警告。例如，如果您使用&lt;a href=&quot;https://pytest.org/&quot;&gt;pytest&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="336e08309a7a860fad0714de0146cb1df14fc063" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not using the default project template, here are the requirements:</source>
          <target state="translated">如果您没有使用默认的项目模板，则要求如下：</target>
        </trans-unit>
        <trans-unit id="65ea4d648599b2fb37f6f7e76db2905fce405c7f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not using the vanilla sitemap view &amp;ndash; for example, if it&amp;rsquo;s wrapped with a caching decorator &amp;ndash; you must name your sitemap view and pass &lt;code&gt;sitemap_url_name&lt;/code&gt; to the index view:</source>
          <target state="translated">如果您不使用原始站点地图视图（例如，如果它被缓存装饰器包裹），则必须命名站点地图视图，并将 &lt;code&gt;sitemap_url_name&lt;/code&gt; 传递给索引视图：</target>
        </trans-unit>
        <trans-unit id="a8c1d92ca93227fb6dd5eeedd2d2fb7fc729ef48" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re on Windows, put the drive letter at the beginning of the path, like this:</source>
          <target state="translated">如果您使用的是Windows，请将驱动器号放在路径的开头，如下所示：</target>
        </trans-unit>
        <trans-unit id="4fae52cace337e4f280328a49b626c77ab0c7b45" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re overriding &lt;code&gt;get_queryset()&lt;/code&gt; on your manager, be sure to either call the method on the parent (using &lt;code&gt;super()&lt;/code&gt;) or do the appropriate handling of the &lt;code&gt;_db&lt;/code&gt; attribute on the manager (a string containing the name of the database to use).</source>
          <target state="translated">如果要在管理器上覆盖 &lt;code&gt;get_queryset()&lt;/code&gt; ，请确保在父级上调用方法（使用 &lt;code&gt;super()&lt;/code&gt; ）或对管理器上的 &lt;code&gt;_db&lt;/code&gt; 属性进行适当的处理（包含数据库名称的字符串，用）。</target>
        </trans-unit>
        <trans-unit id="f1a843504a97e80d5cb600f4100e8e00a5e36193" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re registering &lt;a href=&quot;signals#module-django.db.models.signals&quot;&gt;&lt;code&gt;model signals&lt;/code&gt;&lt;/a&gt;, you can refer to the sender by its string label instead of using the model class itself.</source>
          <target state="translated">如果要注册&lt;a href=&quot;signals#module-django.db.models.signals&quot;&gt; &lt;code&gt;model signals&lt;/code&gt; &lt;/a&gt;，则可以通过其字符串标签引用发送者，而不是使用模型类本身。</target>
        </trans-unit>
        <trans-unit id="7ad1460f336e480b534127419cefa394fd978f41" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re saving a file on a &lt;a href=&quot;../../ref/models/instances#django.db.models.Model&quot;&gt;&lt;code&gt;Model&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;../../ref/models/fields#django.db.models.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt;, using a &lt;a href=&quot;../forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt; makes this process much easier. The file object will be saved to the location specified by the &lt;a href=&quot;../../ref/models/fields#django.db.models.FileField.upload_to&quot;&gt;&lt;code&gt;upload_to&lt;/code&gt;&lt;/a&gt; argument of the corresponding &lt;a href=&quot;../../ref/models/fields#django.db.models.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt; when calling &lt;code&gt;form.save()&lt;/code&gt;:</source>
          <target state="translated">如果您要保存在一个文件&lt;a href=&quot;../../ref/models/instances#django.db.models.Model&quot;&gt; &lt;code&gt;Model&lt;/code&gt; &lt;/a&gt;与&lt;a href=&quot;../../ref/models/fields#django.db.models.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; 字段&lt;/a&gt;，使用&lt;a href=&quot;../forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt;使得这一过程变得更加容易。文件对象将被保存到由指定的位置&lt;a href=&quot;../../ref/models/fields#django.db.models.FileField.upload_to&quot;&gt; &lt;code&gt;upload_to&lt;/code&gt; &lt;/a&gt;相应的参数&lt;a href=&quot;../../ref/models/fields#django.db.models.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; &lt;/a&gt;调用时 &lt;code&gt;form.save()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="bedad35c511cec1744a3555151947dfea12f66f1" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re serializing data (for example, when generating &lt;a href=&quot;../../topics/testing/tools#django.test.TransactionTestCase.fixtures&quot;&gt;&lt;code&gt;fixtures&lt;/code&gt;&lt;/a&gt;) from a model that implements generic relations, you should probably be using a natural key to uniquely identify related &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; objects. See &lt;a href=&quot;../../topics/serialization#topics-serialization-natural-keys&quot;&gt;natural keys&lt;/a&gt; and &lt;a href=&quot;../django-admin#cmdoption-dumpdata-natural-foreign&quot;&gt;&lt;code&gt;dumpdata --natural-foreign&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">如果您要从实现通用关系的模型中序列化数据（例如，生成&lt;a href=&quot;../../topics/testing/tools#django.test.TransactionTestCase.fixtures&quot;&gt; &lt;code&gt;fixtures&lt;/code&gt; &lt;/a&gt;），则可能应该使用自然键来唯一地标识相关的&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;对象。有关更多信息，请参见&lt;a href=&quot;../../topics/serialization#topics-serialization-natural-keys&quot;&gt;自然键&lt;/a&gt;和&lt;a href=&quot;../django-admin#cmdoption-dumpdata-natural-foreign&quot;&gt; &lt;code&gt;dumpdata --natural-foreign&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="11eb2a40cd729d4d12c805c9535dc58c68ec956d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re starting a new project, it&amp;rsquo;s highly recommended to set up a custom user model, even if the default &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; model is sufficient for you. This model behaves identically to the default user model, but you&amp;rsquo;ll be able to customize it in the future if the need arises:</source>
          <target state="translated">如果您要开始一个新项目，强烈建议您设置一个自定义用户模型，即使默认的&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;模型就足够了。该模型的行为与默认用户模型相同，但是如果需要，您将来可以自定义它：</target>
        </trans-unit>
        <trans-unit id="48a25be3e80caa082a172422daae21775a104668" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re subclassing an existing model (perhaps something from another application entirely) and want each model to have its own database table, &lt;a href=&quot;#multi-table-inheritance&quot;&gt;Multi-table inheritance&lt;/a&gt; is the way to go.</source>
          <target state="translated">如果您要&lt;a href=&quot;#multi-table-inheritance&quot;&gt;继承&lt;/a&gt;现有模型（也许是完全来自另一个应用程序的某种东西）的子类，并且希望每个模型都有自己的数据库表，那么多表继承就是解决之道。</target>
        </trans-unit>
        <trans-unit id="749f5754bf6064aeadce7af0aa572b7f5cd04a43" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re synchronizing content types to more than one database, be aware that their primary keys may not match across databases. This may result in data corruption or data loss.</source>
          <target state="translated">如果要将内容类型同步到多个数据库，请注意它们的主键可能在数据库之间不匹配。这可能会导致数据损坏或数据丢失。</target>
        </trans-unit>
        <trans-unit id="f6fc2fe716bde4fb5cf0628226301f83349d64f4" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re testing a multiple database configuration with primary/replica (referred to as master/slave by some databases) replication, this strategy of creating test databases poses a problem. When the test databases are created, there won&amp;rsquo;t be any replication, and as a result, data created on the primary won&amp;rsquo;t be seen on the replica.</source>
          <target state="translated">如果您要使用主/副本（在某些数据库中称为主数据库/从数据库）复制来测试多数据库配置，则这种创建测试数据库的策略会带来问题。创建测试数据库后，将不会进行任何复制，因此，在主数据库上创建的数据将不会在副本上看到。</target>
        </trans-unit>
        <trans-unit id="7a5e6b4700226ab4c476a2e5c6dee860df741084" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re upgrading from South, this is basically the South pattern as an operation - one or two methods for forwards and backwards, with an ORM and schema operations available. Most of the time, you should be able to translate the &lt;code&gt;orm.Model&lt;/code&gt; or &lt;code&gt;orm[&quot;appname&quot;, &quot;Model&quot;]&lt;/code&gt; references from South directly into &lt;code&gt;apps.get_model(&quot;appname&quot;, &quot;Model&quot;)&lt;/code&gt; references here and leave most of the rest of the code unchanged for data migrations. However, &lt;code&gt;apps&lt;/code&gt; will only have references to models in the current app unless migrations in other apps are added to the migration&amp;rsquo;s dependencies.</source>
          <target state="translated">如果您是从南方升级的，那么这基本上就是一种南方模式，一种操作-一种或两种向前和向后的方法，并提供ORM和架构操作。大多数时候，您应该能够将来自南方的 &lt;code&gt;orm.Model&lt;/code&gt; 或 &lt;code&gt;orm[&quot;appname&quot;, &quot;Model&quot;]&lt;/code&gt; 引用直接转换为 &lt;code&gt;apps.get_model(&quot;appname&quot;, &quot;Model&quot;)&lt;/code&gt; 引用，并保留大部分其余代码保持不变，无法进行数据迁移。但是，除非将其他应用程序中的迁移添加到迁移的依赖项中，否则这些 &lt;code&gt;apps&lt;/code&gt; 将仅引用当前应用程序中的模型。</target>
        </trans-unit>
        <trans-unit id="dd100d30c9413b8bcf0a641346e7fe8e8d78916b" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re upgrading through more than one feature version (e.g. 2.0 to 2.2), it&amp;rsquo;s usually easier to upgrade through each feature release incrementally (2.0 to 2.1 to 2.2) rather than to make all the changes for each feature release at once. For each feature release, use the latest patch release (e.g. for 2.1, use 2.1.15).</source>
          <target state="translated">如果要通过多个功能版本（例如2.0到2.2）进行升级，则通常比通过一次对每个功能版本进行所有更改更容易地通过每个功能版本（从2.0到2.1到2.2）进行升级。对于每个功能版本，请使用最新的修补程序版本（例如，对于2.1，请使用2.1.15）。</target>
        </trans-unit>
        <trans-unit id="c0a30d48cf1c939c8e9ed571529055414a3d67b6" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using &amp;ldquo;Rock &amp;rsquo;n&amp;rsquo; roll&amp;rdquo; in a project called &lt;code&gt;anthology&lt;/code&gt;, but you want it to show up as &amp;ldquo;Jazz Manouche&amp;rdquo; instead, you can provide your own configuration:</source>
          <target state="translated">如果您在名为 &lt;code&gt;anthology&lt;/code&gt; 的项目中使用&amp;ldquo;摇滚乐&amp;rdquo; ，但希望将其显示为&amp;ldquo; Jazz Manouche&amp;rdquo;，则可以提供自己的配置：</target>
        </trans-unit>
        <trans-unit id="481f4f1b70a903de3297e01b947b9f2c4871b7fa" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using &lt;a href=&quot;../topics/http/sessions#cached-sessions-backend&quot;&gt;cache-based session storage&lt;/a&gt;, this selects the cache to use.</source>
          <target state="translated">如果您使用&lt;a href=&quot;../topics/http/sessions#cached-sessions-backend&quot;&gt;的是基于缓存的会话存储&lt;/a&gt;，则会选择要使用的缓存。</target>
        </trans-unit>
        <trans-unit id="aeeb2f9285f5f42da4ca38d644da7b9668702942" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using AngularJS 1.1.3 and newer, it&amp;rsquo;s sufficient to configure the &lt;code&gt;$http&lt;/code&gt; provider with the cookie and header names:</source>
          <target state="translated">如果您使用的是AngularJS 1.1.3及更高版本，则使用cookie和标头名称配置 &lt;code&gt;$http&lt;/code&gt; 提供程序就足够了：</target>
        </trans-unit>
        <trans-unit id="b71dafc0a9ca6cc7e9afc06dfb5f48ffeac44f3e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Django&amp;rsquo;s &lt;a href=&quot;testing/index&quot;&gt;testing framework&lt;/a&gt; to test database queries, Django will need permission to create a test database.</source>
          <target state="translated">如果您使用Django的&lt;a href=&quot;testing/index&quot;&gt;测试框架&lt;/a&gt;来测试数据库查询，则Django将需要权限来创建测试数据库。</target>
        </trans-unit>
        <trans-unit id="9944ee7dd34baf50152dd56fcdc484819ead5962" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Linux or MacOS and install both &lt;a href=&quot;https://pypi.org/project/pywatchman/&quot;&gt;pywatchman&lt;/a&gt; and the &lt;a href=&quot;https://facebook.github.io/watchman/&quot;&gt;Watchman&lt;/a&gt; service, kernel signals will be used to autoreload the server (rather than polling file modification timestamps each second). This offers better performance on large projects, reduced response time after code changes, more robust change detection, and a reduction in power usage. Django supports &lt;code&gt;pywatchman&lt;/code&gt; 1.2.0 and higher.</source>
          <target state="translated">如果您使用的是Linux或MacOS，并且同时安装了&lt;a href=&quot;https://pypi.org/project/pywatchman/&quot;&gt;pywatchman&lt;/a&gt;和&lt;a href=&quot;https://facebook.github.io/watchman/&quot;&gt;Watchman&lt;/a&gt;服务，则内核信号将用于自动重新加载服务器（而不是每秒轮询文件修改时间戳）。这样可以在大型项目中提供更好的性能，减少代码更改后的响应时间，更强大的更改检测功能，并减少功耗。Django支持 &lt;code&gt;pywatchman&lt;/code&gt; 1.2.0及更高版本。</target>
        </trans-unit>
        <trans-unit id="4e53baf0d0f56b77511625581c99cc7d9191b439" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Memcached, consider using &lt;a href=&quot;../../topics/http/sessions#cached-sessions-backend&quot;&gt;cached sessions&lt;/a&gt; to improve performance.</source>
          <target state="translated">如果您使用的是Memcached，请考虑使用&lt;a href=&quot;../../topics/http/sessions#cached-sessions-backend&quot;&gt;缓存的会话&lt;/a&gt;来提高性能。</target>
        </trans-unit>
        <trans-unit id="5123ae3f1eac47dcb57f53aa5e34a747a949d8e9" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using MySQL and this value &lt;em&gt;doesn&amp;rsquo;t&lt;/em&gt; start with a forward slash, then this value is assumed to be the host.</source>
          <target state="translated">如果您使用的是MySQL，并且此值&lt;em&gt;不是&lt;/em&gt;以正斜杠开头，则假定该值为主机。</target>
        </trans-unit>
        <trans-unit id="5c1359456437f291b8b48eb0bceaeca46fd2af3d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using MySQL or MariaDB, you&amp;rsquo;ll need a &lt;a href=&quot;../ref/databases#mysql-db-api-drivers&quot;&gt;DB API driver&lt;/a&gt; like &lt;code&gt;mysqlclient&lt;/code&gt;. See &lt;a href=&quot;../ref/databases#mysql-notes&quot;&gt;notes for the MySQL backend&lt;/a&gt; for details.</source>
          <target state="translated">如果您使用的是MySQL或MariaDB，则需要一个&lt;a href=&quot;../ref/databases#mysql-db-api-drivers&quot;&gt;数据库API驱动程序，&lt;/a&gt;例如 &lt;code&gt;mysqlclient&lt;/code&gt; 。有关详细信息，请参见&lt;a href=&quot;../ref/databases#mysql-notes&quot;&gt;MySQL后端的注释&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bf9bdf3f5fa10aff2cab1f17aaffdcca0b623596" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using MySQL, the following checks will be performed:</source>
          <target state="translated">如果您使用的是MySQL，将执行以下检查：</target>
        </trans-unit>
        <trans-unit id="228adccc2a150114c8cffe4456bca9a36f683fa7" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using MySQL, your tables may or may not support transactions; it depends on your MySQL version and the table types you&amp;rsquo;re using. (By &amp;ldquo;table types,&amp;rdquo; we mean something like &amp;ldquo;InnoDB&amp;rdquo; or &amp;ldquo;MyISAM&amp;rdquo;.) MySQL transaction peculiarities are outside the scope of this article, but the MySQL site has &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/sql-syntax-transactions.html&quot;&gt;information on MySQL transactions&lt;/a&gt;.</source>
          <target state="translated">如果您使用的是MySQL，则您的表可能支持也可能不支持事务。这取决于您的MySQL版本和所使用的表类型。（对于&amp;ldquo;表类型&amp;rdquo;，我们的意思是&amp;ldquo; InnoDB&amp;rdquo;或&amp;ldquo; MyISAM&amp;rdquo;。）MySQL事务的特殊性不在本文讨论范围之内，但是MySQL站点提供了&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/sql-syntax-transactions.html&quot;&gt;有关MySQL事务的信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a9a0fd540cf9eba9010f1a43a66ed09c582deee1" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Oracle, you&amp;rsquo;ll need a copy of &lt;a href=&quot;https://oracle.github.io/python-cx_Oracle/&quot;&gt;cx_Oracle&lt;/a&gt;, but please read the &lt;a href=&quot;../ref/databases#oracle-notes&quot;&gt;notes for the Oracle backend&lt;/a&gt; for details regarding supported versions of both Oracle and &lt;code&gt;cx_Oracle&lt;/code&gt;.</source>
          <target state="translated">如果您使用的是Oracle，则需要一份&lt;a href=&quot;https://oracle.github.io/python-cx_Oracle/&quot;&gt;cx_Oracle&lt;/a&gt;的副本，但是请阅读&lt;a href=&quot;../ref/databases#oracle-notes&quot;&gt;Oracle后端说明，以&lt;/a&gt;获取有关Oracle和 &lt;code&gt;cx_Oracle&lt;/code&gt; 的受支持版本的详细信息。</target>
        </trans-unit>
        <trans-unit id="92d54d481c5d03a9b0ca88a5f50b8ed2498b6ef7" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using PostgreSQL, Django provides &lt;a href=&quot;../../ref/contrib/postgres/search&quot;&gt;a selection of database specific tools&lt;/a&gt; to allow you to leverage more complex querying options. Other databases have different selections of tools, possibly via plugins or user-defined functions. Django doesn&amp;rsquo;t include any support for them at this time. We&amp;rsquo;ll use some examples from PostgreSQL to demonstrate the kind of functionality databases may have.</source>
          <target state="translated">如果您使用的是PostgreSQL，则Django提供&lt;a href=&quot;../../ref/contrib/postgres/search&quot;&gt;了一些特定&lt;/a&gt;于数据库的工具，以允许您利用更复杂的查询选项。其他数据库可能通过插件或用户定义的函数来选择不同的工具。Django目前不支持它们。我们将使用PostgreSQL中的一些示例来演示数据库可能具有的功能。</target>
        </trans-unit>
        <trans-unit id="2740b6405cd59234c5607e21afdcdaccce94c79c" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using PostgreSQL, by default (empty &lt;a href=&quot;#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt;), the connection to the database is done through UNIX domain sockets (&amp;lsquo;local&amp;rsquo; lines in &lt;code&gt;pg_hba.conf&lt;/code&gt;). If your UNIX domain socket is not in the standard location, use the same value of &lt;code&gt;unix_socket_directory&lt;/code&gt; from &lt;code&gt;postgresql.conf&lt;/code&gt;. If you want to connect through TCP sockets, set &lt;a href=&quot;#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt; to &amp;lsquo;localhost&amp;rsquo; or &amp;lsquo;127.0.0.1&amp;rsquo; (&amp;lsquo;host&amp;rsquo; lines in &lt;code&gt;pg_hba.conf&lt;/code&gt;). On Windows, you should always define &lt;a href=&quot;#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt;, as UNIX domain sockets are not available.</source>
          <target state="translated">如果您使用的是PostgreSQL，默认情况下（空&lt;a href=&quot;#std:setting-HOST&quot;&gt; &lt;code&gt;HOST&lt;/code&gt; &lt;/a&gt;），通过UNIX域套接字（ &lt;code&gt;pg_hba.conf&lt;/code&gt; 中的 &amp;ldquo; local&amp;rdquo;行）来完成与数据库的连接。如果您的UNIX域套接字不在标准位置，请使用来自 &lt;code&gt;postgresql.conf&lt;/code&gt; 的 &lt;code&gt;unix_socket_directory&lt;/code&gt; 相同的值。如果要通过TCP套接字连接，请将&lt;a href=&quot;#std:setting-HOST&quot;&gt; &lt;code&gt;HOST&lt;/code&gt; &lt;/a&gt;设置为'localhost'或'127.0.0.1'（ &lt;code&gt;pg_hba.conf&lt;/code&gt; 中的 &amp;ldquo; host&amp;rdquo;行）。在Windows上，应始终定义&lt;a href=&quot;#std:setting-HOST&quot;&gt; &lt;code&gt;HOST&lt;/code&gt; &lt;/a&gt;，因为UNIX域套接字不可用。</target>
        </trans-unit>
        <trans-unit id="dd5ae27cbc04f18050df1d431f5fb25a9fbe2c53" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using PostgreSQL, the sequence associated with the primary key might need to be updated; see &lt;a href=&quot;../databases#manually-specified-autoincrement-pk&quot;&gt;Manually-specifying values of auto-incrementing primary keys&lt;/a&gt;.</source>
          <target state="translated">如果您使用的是PostgreSQL，则可能需要更新与主键关联的序列。请参见&lt;a href=&quot;../databases#manually-specified-autoincrement-pk&quot;&gt;手动指定自动递增主键的值&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="17609ee45cfd691775da7000d116f264e7657fcb" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using PostgreSQL, you&amp;rsquo;ll need the &lt;a href=&quot;https://www.psycopg.org/&quot;&gt;psycopg2&lt;/a&gt; package. Refer to the &lt;a href=&quot;../ref/databases#postgresql-notes&quot;&gt;PostgreSQL notes&lt;/a&gt; for further details.</source>
          <target state="translated">如果使用的是PostgreSQL，则需要&lt;a href=&quot;https://www.psycopg.org/&quot;&gt;psycopg2&lt;/a&gt;软件包。有关更多详细信息，请参见&lt;a href=&quot;../ref/databases#postgresql-notes&quot;&gt;PostgreSQL注释&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="81dfb5f0dc2391f3e82b1355d3ca6abc305f8d47" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Postgres, Oracle, or MySQL with InnoDB, this is enforced at the database integrity level &amp;ndash; database level key constraints prevent the creation of relations that can&amp;rsquo;t be validated.</source>
          <target state="translated">如果您在InnoDB上使用Postgres，Oracle或MySQL，则这是在数据库完整性级别上执行的-数据库级别的键约束会阻止创建无法验证的关系。</target>
        </trans-unit>
        <trans-unit id="65a65316c0bd24040960220c94a678789b0f6a2a" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using SQLite you might want to read the &lt;a href=&quot;../ref/databases#sqlite-notes&quot;&gt;SQLite backend notes&lt;/a&gt;.</source>
          <target state="translated">如果您使用的是SQLite，则可能需要阅读&lt;a href=&quot;../ref/databases#sqlite-notes&quot;&gt;SQLite后端说明&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="334c33a340c62565a0dda48701d8cc481ae24464" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using SQLite, you don&amp;rsquo;t need to create anything beforehand - the database file will be created automatically when it is needed.</source>
          <target state="translated">如果您使用的是SQLite，则无需事先创建任何内容-数据库文件将在需要时自动创建。</target>
        </trans-unit>
        <trans-unit id="dd02ebc4205a2c5d09b790615c39301f2afffdb4" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Windows and need to install the GNU gettext utilities so &lt;a href=&quot;../../ref/django-admin#django-admin-compilemessages&quot;&gt;&lt;code&gt;django-admin compilemessages&lt;/code&gt;&lt;/a&gt; works see &lt;a href=&quot;#gettext-on-windows&quot;&gt;gettext on Windows&lt;/a&gt; for more information.</source>
          <target state="translated">如果您使用的是Windows，并且需要安装GNU gettext实用程序，则&lt;a href=&quot;../../ref/django-admin#django-admin-compilemessages&quot;&gt; &lt;code&gt;django-admin compilemessages&lt;/code&gt; &lt;/a&gt;可以正常运行，请参见&lt;a href=&quot;#gettext-on-windows&quot;&gt;Windows上的gettext以&lt;/a&gt;获取更多信息。</target>
        </trans-unit>
        <trans-unit id="7c2566945d2ca024ddf78f5b4ec709f5e3b7bae3" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Windows and need to install the GNU gettext utilities so &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;makemessages&lt;/code&gt;&lt;/a&gt; works, see &lt;a href=&quot;#gettext-on-windows&quot;&gt;gettext on Windows&lt;/a&gt; for more information.</source>
          <target state="translated">如果您使用的是Windows，并且需要安装GNU gettext实用程序以便使&lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt; &lt;code&gt;makemessages&lt;/code&gt; &lt;/a&gt;起作用，请参阅&lt;a href=&quot;#gettext-on-windows&quot;&gt;Windows上的gettext以&lt;/a&gt;获取更多信息。</target>
        </trans-unit>
        <trans-unit id="46eb70b42871e7bacf59440c3bae92eb1b4ae4ef" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a &lt;code&gt;QuerySet&lt;/code&gt; with a very large number of items, requesting high page numbers might be slow on some databases, because the resulting &lt;code&gt;LIMIT&lt;/code&gt;/&lt;code&gt;OFFSET&lt;/code&gt; query needs to count the number of &lt;code&gt;OFFSET&lt;/code&gt; records which takes longer as the page number gets higher.</source>
          <target state="translated">如果您使用的是 &lt;code&gt;QuerySet&lt;/code&gt; 有一个非常大量的项目，要求高的页码可能会慢一些数据库，因为由此产生的 &lt;code&gt;LIMIT&lt;/code&gt; / &lt;code&gt;OFFSET&lt;/code&gt; 查询需求来算的数目 &lt;code&gt;OFFSET&lt;/code&gt; 这需要较长的页面数变高记录。</target>
        </trans-unit>
        <trans-unit id="70b3d5d4568f4fd39cfd395329f1734d8e532b16" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a cache, connection parameters may be different in development and in production. Django defaults to per-process &lt;a href=&quot;../../topics/cache#local-memory-caching&quot;&gt;local-memory caching&lt;/a&gt; which may not be desirable.</source>
          <target state="translated">如果使用缓存，则连接参数在开发和生产中可能会有所不同。Django默认对每个进程进行&lt;a href=&quot;../../topics/cache#local-memory-caching&quot;&gt;本地内存缓存&lt;/a&gt;，这可能是不希望的。</target>
        </trans-unit>
        <trans-unit id="fc3ed93f28f451dc5be072e0a09e76c785745981" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a database backend that uses a different SQL syntax for a certain function, you can add support for it by monkey patching a new method onto the function&amp;rsquo;s class.</source>
          <target state="translated">如果您使用的数据库后端对某个函数使用不同的SQL语法，则可以通过将新方法修补到函数的类上来添加对它的支持。</target>
        </trans-unit>
        <trans-unit id="42525c03b5426673012c5e443de921b7d2a48312" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a database besides SQLite, make sure you&amp;rsquo;ve created a database by this point. Do that with &amp;ldquo;&lt;code&gt;CREATE DATABASE database_name;&lt;/code&gt;&amp;rdquo; within your database&amp;rsquo;s interactive prompt.</source>
          <target state="translated">如果您使用的是SQLite以外的数据库，请确保此时已创建数据库。使用&amp;ldquo; &lt;code&gt;CREATE DATABASE database_name;&lt;/code&gt; 在数据库的交互式提示中。</target>
        </trans-unit>
        <trans-unit id="3bfd941888efa436ecc6ede3006e996113f463ad" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a different authentication backend, this method may require different credentials. It requires whichever credentials are required by your backend&amp;rsquo;s &lt;code&gt;authenticate()&lt;/code&gt; method.</source>
          <target state="translated">如果您使用其他身份验证后端，则此方法可能需要不同的凭据。它需要后端的 &lt;code&gt;authenticate()&lt;/code&gt; 方法所需的任何凭据。</target>
        </trans-unit>
        <trans-unit id="05764d13eeb945fede1a5e8927e7f8a5ab301058" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a hosting service and can&amp;rsquo;t change your server&amp;rsquo;s default storage engine, you have a couple of options.</source>
          <target state="translated">如果您使用的是托管服务，但无法更改服务器的默认存储引擎，则有两种选择。</target>
        </trans-unit>
        <trans-unit id="5a353593d2d8e5b736818eb171577ee093269dde" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using an &lt;a href=&quot;#django.contrib.postgres.fields.ArrayField&quot;&gt;&lt;code&gt;ArrayField&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;CIText&lt;/code&gt; fields, you must add &lt;code&gt;'django.contrib.postgres'&lt;/code&gt; in your &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;, otherwise field values will appear as strings like &lt;code&gt;'{thoughts,django}'&lt;/code&gt;.</source>
          <target state="translated">如果您使用的是&lt;a href=&quot;#django.contrib.postgres.fields.ArrayField&quot;&gt; &lt;code&gt;ArrayField&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;CIText&lt;/code&gt; 领域，你必须添加 &lt;code&gt;'django.contrib.postgres'&lt;/code&gt; 在你&lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;，否则字段值会出现像琴弦 &lt;code&gt;'{thoughts,django}'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61e7c53b9fd063f957398fb1f4320dfd4e2a9584" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using an unofficial 3rd party backend, please consult the documentation provided for any additional requirements.</source>
          <target state="translated">如果您使用的是非官方的第三方后端，请参阅提供的文档以了解任何其他要求。</target>
        </trans-unit>
        <trans-unit id="fb1e7f7e52bbcd15afd7dc412eee86df9c3f70b8" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using components of Django &amp;ldquo;standalone&amp;rdquo; &amp;ndash; for example, writing a Python script which loads some Django templates and renders them, or uses the ORM to fetch some data &amp;ndash; there&amp;rsquo;s one more step you&amp;rsquo;ll need in addition to configuring settings.</source>
          <target state="translated">如果您使用的是Django&amp;ldquo;独立&amp;rdquo;组件，例如，编写一个Python脚本来加载一些Django模板并进行渲染，或者使用ORM来获取一些数据，那么除了配置设置外，还需要执行另外一个步骤。</target>
        </trans-unit>
        <trans-unit id="6c2160405a6776b9843f65c896f4c6a76b70b42b" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using file-based session storage, this sets the directory in which Django will store session data. When the default value (&lt;code&gt;None&lt;/code&gt;) is used, Django will use the standard temporary directory for the system.</source>
          <target state="translated">如果您使用的是基于文件的会话存储，则会设置Django将在其中存储会话数据的目录。使用默认值（ &lt;code&gt;None&lt;/code&gt; ）时，Django将为系统使用标准的临时目录。</target>
        </trans-unit>
        <trans-unit id="bdf2864962c6854deb565415dc128e418e85409e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using middleware, you can do that. Middleware provides multiple opportunities to process a response on exit from a view. If you put behavior in the response middleware, it&amp;rsquo;s guaranteed to execute after template rendering has taken place.</source>
          <target state="translated">如果您使用的是中间件，则可以这样做。中间件为处理视图退出时的响应提供了多种机会。如果将行为放在响应中间件中，则可以确保在模板渲染完成后执行。</target>
        </trans-unit>
        <trans-unit id="176b3e53bd5619ca954a6de51573ff4145217e13" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using pagination, you can adapt the &lt;a href=&quot;../../topics/pagination#using-paginator-in-view&quot;&gt;example template from the pagination docs&lt;/a&gt;. Change instances of &lt;code&gt;contacts&lt;/code&gt; in that example template to &lt;code&gt;page_obj&lt;/code&gt;.</source>
          <target state="translated">如果您使用的是分页，则可以改用&lt;a href=&quot;../../topics/pagination#using-paginator-in-view&quot;&gt;分页文档中&lt;/a&gt;的示例模板。将该示例模板中的 &lt;code&gt;contacts&lt;/code&gt; 实例更改为 &lt;code&gt;page_obj&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="38126e95e0083d43b4efeedfd50bff85a4f91dfd" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using the &lt;code&gt;django.contrib.sessions.backends.db&lt;/code&gt; backend, each session is a normal Django model. The &lt;code&gt;Session&lt;/code&gt; model is defined in &lt;code&gt;django/contrib/sessions/models.py&lt;/code&gt;. Because it&amp;rsquo;s a normal model, you can access sessions using the normal Django database API:</source>
          <target state="translated">如果您使用的是 &lt;code&gt;django.contrib.sessions.backends.db&lt;/code&gt; 后端，则每个会话都是普通的Django模型。该 &lt;code&gt;Session&lt;/code&gt; 模型中定义 &lt;code&gt;django/contrib/sessions/models.py&lt;/code&gt; 。因为它是普通模型，所以您可以使用普通Django数据库API访问会话：</target>
        </trans-unit>
        <trans-unit id="50d514d3dd0b830cdb2e92c3b229482ff305cf07" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using the context processor, your template should be rendered with a &lt;code&gt;RequestContext&lt;/code&gt;. Otherwise, ensure &lt;code&gt;messages&lt;/code&gt; is available to the template context.</source>
          <target state="translated">如果使用上下文处理器，则应使用 &lt;code&gt;RequestContext&lt;/code&gt; 呈现模板。否则，请确保 &lt;code&gt;messages&lt;/code&gt; 可用于模板上下文。</target>
        </trans-unit>
        <trans-unit id="526e48b58228f65bfc33a8bdc8a0463e6592108c" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using the same HTML for each of your form fields, you can reduce duplicate code by looping through each field in turn using a &lt;code&gt;{% for %}&lt;/code&gt; loop:</source>
          <target state="translated">如果您为每个表单字段使用相同的HTML，则可以通过使用 &lt;code&gt;{% for %}&lt;/code&gt; 循环依次遍历每个字段来减少重复代码：</target>
        </trans-unit>
        <trans-unit id="71b2f6560e3b81f86c2f6fbf8c0b3fd58fd8164f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re wrestling with a particular problem, start with the &lt;a href=&quot;#time-zones-faq&quot;&gt;time zone FAQ&lt;/a&gt;.</source>
          <target state="translated">如果您在解决特定问题，请从&lt;a href=&quot;#time-zones-faq&quot;&gt;时区FAQ开始&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="033bd6d75929d6d7705838d0e26ce74b89b3cf6f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re writing a pluggable application that&amp;rsquo;s expected to work independently of the value of &lt;a href=&quot;../../ref/settings#std:setting-USE_TZ&quot;&gt;&lt;code&gt;USE_TZ&lt;/code&gt;&lt;/a&gt;, you may find &lt;a href=&quot;../../ref/utils#django.utils.timezone.now&quot;&gt;&lt;code&gt;django.utils.timezone.now()&lt;/code&gt;&lt;/a&gt; useful. This function returns the current date and time as a naive datetime when &lt;code&gt;USE_TZ = False&lt;/code&gt; and as an aware datetime when &lt;code&gt;USE_TZ = True&lt;/code&gt;. You can add or subtract &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt;&lt;code&gt;datetime.timedelta&lt;/code&gt;&lt;/a&gt; as needed.</source>
          <target state="translated">如果编写的可插拔应用程序独立于&lt;a href=&quot;../../ref/settings#std:setting-USE_TZ&quot;&gt; &lt;code&gt;USE_TZ&lt;/code&gt; &lt;/a&gt;的值运行，则可能会发现&lt;a href=&quot;../../ref/utils#django.utils.timezone.now&quot;&gt; &lt;code&gt;django.utils.timezone.now()&lt;/code&gt; &lt;/a&gt;有用。当 &lt;code&gt;USE_TZ = False&lt;/code&gt; 时，此函数返回当前日期和时间，作为原始日期时间；当 &lt;code&gt;USE_TZ = True&lt;/code&gt; 时，返回已知的日期时间。您可以根据需要添加或减去&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt; &lt;code&gt;datetime.timedelta&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b9ad3f8840feee3141c8778e1865bfb234bef75" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re writing a reusable app (or other piece of code) and want to include messaging functionality, but don&amp;rsquo;t want to require your users to enable it if they don&amp;rsquo;t want to, you may pass an additional keyword argument &lt;code&gt;fail_silently=True&lt;/code&gt; to any of the &lt;code&gt;add_message&lt;/code&gt; family of methods. For example:</source>
          <target state="translated">如果您正在编写可重用的应用程序（或其他代码），并希望包含消息传递功能，但又不想要求用户启用该功能，则可以传递额外的关键字参数 &lt;code&gt;fail_silently=True&lt;/code&gt; 于 &lt;code&gt;add_message&lt;/code&gt; 系列方法中的任何一个。例如：</target>
        </trans-unit>
        <trans-unit id="84e127f1322ee32bfece7dc5d4283b6cce1c3d07" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re writing a template filter that only expects a string as the first argument, you should use the decorator &lt;code&gt;stringfilter&lt;/code&gt;. This will convert an object to its string value before being passed to your function:</source>
          <target state="translated">如果要编写仅将字符串作为第一个参数的模板过滤器，则应使用装饰器 &lt;code&gt;stringfilter&lt;/code&gt; 。这将在将对象传递给函数之前将其转换为字符串值：</target>
        </trans-unit>
        <trans-unit id="62e93f9276c7d2bf03dab03afbe7a0d01da88a4a" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re writing reusable views or templates, you may not know ahead of time whether your form is a multipart form or not. The &lt;code&gt;is_multipart()&lt;/code&gt; method tells you whether the form requires multipart encoding for submission:</source>
          <target state="translated">如果要编写可重用的视图或模板，则可能无法提前知道表单是否为多部分表单。该 &lt;code&gt;is_multipart()&lt;/code&gt; 方法告诉你的表单是否需要提交多编码：</target>
        </trans-unit>
        <trans-unit id="0b3ccbce78a9deb2e8380cbbbf0c3e8d425150d4" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re writing some code that must handle an unknown model, for example, in a third-party app that implements a generic view, use this manager (or &lt;a href=&quot;#django.db.models.Model._base_manager&quot;&gt;&lt;code&gt;_base_manager&lt;/code&gt;&lt;/a&gt;) rather than assuming the model has an &lt;code&gt;objects&lt;/code&gt; manager.</source>
          <target state="translated">如果您正在编写一些必须处理未知模型的代码，例如，在实现通用视图的第三方应用程序中，请使用此管理器（或&lt;a href=&quot;#django.db.models.Model._base_manager&quot;&gt; &lt;code&gt;_base_manager&lt;/code&gt; &lt;/a&gt;），而不要假设模型具有 &lt;code&gt;objects&lt;/code&gt; 管理器。</target>
        </trans-unit>
        <trans-unit id="ffa49a02c217a153d3911b777d92a70dad025527" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve activated the automatic Django admin interface, you should see a &amp;ldquo;Flatpages&amp;rdquo; section on the admin index page. Edit flatpages as you edit any other object in the system.</source>
          <target state="translated">如果您已经激活了自动Django管理界面，则应该在管理索引页面上看到&amp;ldquo;平台&amp;rdquo;部分。在编辑系统中的任何其他对象时编辑平面。</target>
        </trans-unit>
        <trans-unit id="8c91814cc038e9087397b1c9d79e06cb53c2998e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve activated the automatic Django admin interface, you should see a &amp;ldquo;Redirects&amp;rdquo; section on the admin index page. Edit redirects as you edit any other object in the system.</source>
          <target state="translated">如果您已经激活了自动Django管理界面，则应该在管理索引页面上看到&amp;ldquo;重定向&amp;rdquo;部分。当您编辑系统中的任何其他对象时，编辑重定向。</target>
        </trans-unit>
        <trans-unit id="746003a32ff1823f7c12c2c3009e4bcdbdada474" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve always used naive datetimes, you probably believe that you can convert a datetime to a date by calling its &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime.date&quot;&gt;&lt;code&gt;date()&lt;/code&gt;&lt;/a&gt; method. You also consider that a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; is a lot like a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;, except that it&amp;rsquo;s less accurate.</source>
          <target state="translated">如果您一直使用朴素的日期时间，则可能会相信可以通过调用其&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime.date&quot;&gt; &lt;code&gt;date()&lt;/code&gt; &lt;/a&gt;方法将日期时间转换为日期。您还认为&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;很像&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;，只是日期不那么准确。</target>
        </trans-unit>
        <trans-unit id="510f1ae50ede1300d4b2693ad8c71631f7d7fb86" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve customized the &lt;a href=&quot;../../settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting, &lt;a href=&quot;../../middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt;&lt;code&gt;django.contrib.auth.middleware.AuthenticationMiddleware&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../middleware#django.contrib.messages.middleware.MessageMiddleware&quot;&gt;&lt;code&gt;django.contrib.messages.middleware.MessageMiddleware&lt;/code&gt;&lt;/a&gt; must be included.</source>
          <target state="translated">如果您已自定义&lt;a href=&quot;../../settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt;设置，则必须包括&lt;a href=&quot;../../middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt; &lt;code&gt;django.contrib.auth.middleware.AuthenticationMiddleware&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../middleware#django.contrib.messages.middleware.MessageMiddleware&quot;&gt; &lt;code&gt;django.contrib.messages.middleware.MessageMiddleware&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="46537cc51b7d74f1917135d14f86f7f048e20457" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve never had to deal with tests before, they can look a little hard to write at first glance. Fortunately, testing is a &lt;em&gt;very&lt;/em&gt; big subject in computer programming, so there&amp;rsquo;s lots of information out there:</source>
          <target state="translated">如果您以前从未处理过测试，那么乍一看它们可能很难编写。幸运的是，测试是计算机编程中&lt;em&gt;非常&lt;/em&gt;大的主题，因此有很多信息：</target>
        </trans-unit>
        <trans-unit id="b1fcac0f08f188a490cc866525da1cb739eb8667" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve saved an instance to one database, it might be tempting to use &lt;code&gt;save(using=...)&lt;/code&gt; as a way to migrate the instance to a new database. However, if you don&amp;rsquo;t take appropriate steps, this could have some unexpected consequences.</source>
          <target state="translated">如果您已将实例保存到一个数据库，则可能会想使用 &lt;code&gt;save(using=...)&lt;/code&gt; 作为将实例迁移到新数据库的一种方式。但是，如果您没有采取适当的步骤，则可能会产生一些意想不到的后果。</target>
        </trans-unit>
        <trans-unit id="e02d2ccf5c1a7f35c124bfd1c3140db6fcf906af" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve used the &lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; command you&amp;rsquo;ve probably already seen &lt;code&gt;dependencies&lt;/code&gt; in action because auto-created migrations have this defined as part of their creation process.</source>
          <target state="translated">如果使用了&lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt;命令，则可能已经在使用 &lt;code&gt;dependencies&lt;/code&gt; ，因为自动创建的迁移将其定义为创建过程的一部分。</target>
        </trans-unit>
        <trans-unit id="57c4c61903f21939d1b79448096a5c411639cc93" translate="yes" xml:space="preserve">
          <source>If your &lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt;&lt;code&gt;AUTH_USER_MODEL&lt;/code&gt;&lt;/a&gt; inherits from &lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser&quot;&gt;&lt;code&gt;AbstractBaseUser&lt;/code&gt;&lt;/a&gt; or implements its own &lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash&quot;&gt;&lt;code&gt;get_session_auth_hash()&lt;/code&gt;&lt;/a&gt; method, authenticated sessions will include the hash returned by this function. In the &lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser&quot;&gt;&lt;code&gt;AbstractBaseUser&lt;/code&gt;&lt;/a&gt; case, this is an HMAC of the password field. Django verifies that the hash in the session for each request matches the one that&amp;rsquo;s computed during the request. This allows a user to log out all of their sessions by changing their password.</source>
          <target state="translated">如果您的&lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt; &lt;code&gt;AUTH_USER_MODEL&lt;/code&gt; &lt;/a&gt;继承自&lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser&quot;&gt; &lt;code&gt;AbstractBaseUser&lt;/code&gt; &lt;/a&gt;或实现自己的&lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash&quot;&gt; &lt;code&gt;get_session_auth_hash()&lt;/code&gt; &lt;/a&gt;方法，则经过身份验证的会话将包含此函数返回的哈希。在&lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser&quot;&gt; &lt;code&gt;AbstractBaseUser&lt;/code&gt; &lt;/a&gt;情况下，这是密码字段的HMAC。Django会验证会话中每个请求的哈希是否与请求期间计算的哈希匹配。这使用户可以通过更改密码注销所有会话。</target>
        </trans-unit>
        <trans-unit id="ff6fb60a475d1cd1de37b15f96dc6b92a8c3143c" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;ModelForm&lt;/code&gt; and &lt;code&gt;ModelAdmin&lt;/code&gt; both define an &lt;code&gt;exclude&lt;/code&gt; option then &lt;code&gt;ModelAdmin&lt;/code&gt; takes precedence:</source>
          <target state="translated">如果您的 &lt;code&gt;ModelForm&lt;/code&gt; 和 &lt;code&gt;ModelAdmin&lt;/code&gt; 都定义了 &lt;code&gt;exclude&lt;/code&gt; 选项，则 &lt;code&gt;ModelAdmin&lt;/code&gt; 优先：</target>
        </trans-unit>
        <trans-unit id="eaae8d7419df5dae5e0d1df980784410834abbbb" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;RunPython&lt;/code&gt; or &lt;code&gt;RunSQL&lt;/code&gt; operation only affects one model, it&amp;rsquo;s good practice to pass &lt;code&gt;model_name&lt;/code&gt; as a hint to make it as transparent as possible to the router. This is especially important for reusable and third-party apps.</source>
          <target state="translated">如果您的 &lt;code&gt;RunPython&lt;/code&gt; 或 &lt;code&gt;RunSQL&lt;/code&gt; 操作仅影响一个模型，则最好传递 &lt;code&gt;model_name&lt;/code&gt; 作为提示，以使其对路由器尽可能透明。这对于可重用和第三方应用程序尤其重要。</target>
        </trans-unit>
        <trans-unit id="17d97886edb51352b4b876638aac3d9f4f3ca528" translate="yes" xml:space="preserve">
          <source>If your Django app is behind a proxy, though, the proxy may be &amp;ldquo;swallowing&amp;rdquo; whether the original request uses HTTPS or not. If there is a non-HTTPS connection between the proxy and Django then &lt;code&gt;is_secure()&lt;/code&gt; would always return &lt;code&gt;False&lt;/code&gt; &amp;ndash; even for requests that were made via HTTPS by the end user. In contrast, if there is an HTTPS connection between the proxy and Django then &lt;code&gt;is_secure()&lt;/code&gt; would always return &lt;code&gt;True&lt;/code&gt; &amp;ndash; even for requests that were made originally via HTTP.</source>
          <target state="translated">但是，如果您的Django应用位于代理之后，则该代理可能会&amp;ldquo;吞咽&amp;rdquo;原始请求是否使用HTTPS。如果在代理和Django的之间的非HTTPS连接，然后 &lt;code&gt;is_secure()&lt;/code&gt; 总是返回 &lt;code&gt;False&lt;/code&gt; -即使是通过HTTPS终端用户所做的请求。相反，如果有代理和Django的之间的HTTPS连接，然后 &lt;code&gt;is_secure()&lt;/code&gt; 总是返回 &lt;code&gt;True&lt;/code&gt; -即使是通过HTTP最初提出的请求。</target>
        </trans-unit>
        <trans-unit id="5497b62e97032ff943fb4f10c5f320b8f45dac4e" translate="yes" xml:space="preserve">
          <source>If your GDAL library is in a non-standard location, or you don&amp;rsquo;t want to modify the system&amp;rsquo;s library path then the &lt;a href=&quot;../gdal#std:setting-GDAL_LIBRARY_PATH&quot;&gt;&lt;code&gt;GDAL_LIBRARY_PATH&lt;/code&gt;&lt;/a&gt; setting may be added to your Django settings file with the full path to the GDAL library. For example:</source>
          <target state="translated">如果您的GDAL库位于非标准位置，或者您不想修改系统的库路径，则&lt;a href=&quot;../gdal#std:setting-GDAL_LIBRARY_PATH&quot;&gt; &lt;code&gt;GDAL_LIBRARY_PATH&lt;/code&gt; &lt;/a&gt;设置可能会添加到Django设置文件中，并带有GDAL库的完整路径。例如：</target>
        </trans-unit>
        <trans-unit id="6656b0bbfc9f0cf5bcaba4af9e2783f344122be3" translate="yes" xml:space="preserve">
          <source>If your GEOS library is in a non-standard location, or you don&amp;rsquo;t want to modify the system&amp;rsquo;s library path then the &lt;a href=&quot;../geos#std:setting-GEOS_LIBRARY_PATH&quot;&gt;&lt;code&gt;GEOS_LIBRARY_PATH&lt;/code&gt;&lt;/a&gt; setting may be added to your Django settings file with the full path to the GEOS C library. For example:</source>
          <target state="translated">如果您的GEOS库位于非标准位置，或者您不想修改系统的库路径，则可以将&lt;a href=&quot;../geos#std:setting-GEOS_LIBRARY_PATH&quot;&gt; &lt;code&gt;GEOS_LIBRARY_PATH&lt;/code&gt; &lt;/a&gt;设置添加到Django设置文件中，并带有GEOS C库的完整路径。例如：</target>
        </trans-unit>
        <trans-unit id="9503b6ac9885ede72752befeddae5b57e6923b42" translate="yes" xml:space="preserve">
          <source>If your MySQL setup does &lt;em&gt;not&lt;/em&gt; support transactions, then Django will always function in autocommit mode: statements will be executed and committed as soon as they&amp;rsquo;re called. If your MySQL setup &lt;em&gt;does&lt;/em&gt; support transactions, Django will handle transactions as explained in this document.</source>
          <target state="translated">如果你的MySQL安装程序&lt;em&gt;不&lt;/em&gt;支持事务，那么Django的功能将始终在自动提交模式：语句将被执行，一旦他们是所谓的承诺。如果您的MySQL设置&lt;em&gt;确实&lt;/em&gt;支持事务，则Django将按照本文档中的说明处理事务。</target>
        </trans-unit>
        <trans-unit id="7357f3c6b27ecc3b358d99481fc74b66e7e2445c" translate="yes" xml:space="preserve">
          <source>If your app already has models and database tables, and doesn&amp;rsquo;t have migrations yet (for example, you created it against a previous Django version), you&amp;rsquo;ll need to convert it to use migrations by running:</source>
          <target state="translated">如果您的应用程序已经具有模型和数据库表，并且还没有迁移（例如，您是根据以前的Django版本创建的），则需要通过运行以下命令将其转换为使用迁移：</target>
        </trans-unit>
        <trans-unit id="a6f0ecf7e5650fbc70efecf351f9f0234f1b8a8a" translate="yes" xml:space="preserve">
          <source>If your app is tested with multiple user models, using &lt;code&gt;@override_settings(AUTH_USER_MODEL=...)&lt;/code&gt; for example, and you cache the result of &lt;code&gt;get_user_model()&lt;/code&gt; in a module-level variable, you may need to listen to the &lt;a href=&quot;../../ref/signals#django.test.signals.setting_changed&quot;&gt;&lt;code&gt;setting_changed&lt;/code&gt;&lt;/a&gt; signal to clear the cache. For example:</source>
          <target state="translated">如果您的应用已通过多种用户模型进行了测试，例如使用 &lt;code&gt;@override_settings(AUTH_USER_MODEL=...)&lt;/code&gt; ，并且将 &lt;code&gt;get_user_model()&lt;/code&gt; 的结果缓存在模块级变量中，则可能需要侦听&lt;a href=&quot;../../ref/signals#django.test.signals.setting_changed&quot;&gt; &lt;code&gt;setting_changed&lt;/code&gt; &lt;/a&gt;信号以进行清除缓存。例如：</target>
        </trans-unit>
        <trans-unit id="19dcfebcbdd415cf375a630be2b6e427341d0dea" translate="yes" xml:space="preserve">
          <source>If your application connects to other systems &amp;ndash; for instance, if it queries a Web service &amp;ndash; make sure datetimes are properly specified. To transmit datetimes safely, their representation should include the UTC offset, or their values should be in UTC (or both!).</source>
          <target state="translated">如果您的应用程序连接到其他系统（例如，如果它查询Web服务），请确保正确指定了日期时间。为了安全地传输日期时间，它们的表示应包括UTC偏移量，或它们的值都应采用UTC（或两者都用！）。</target>
        </trans-unit>
        <trans-unit id="68eb798bc7d826d0f87acddbc39d34694074284b" translate="yes" xml:space="preserve">
          <source>If your application provides views, you may want to include tests that use the test client to exercise those views. However, an end user is free to deploy the views in your application at any URL of their choosing. This means that your tests can&amp;rsquo;t rely upon the fact that your views will be available at a particular URL. Decorate your test class or test method with &lt;code&gt;@override_settings(ROOT_URLCONF=...)&lt;/code&gt; for URLconf configuration.</source>
          <target state="translated">如果您的应用程序提供了视图，则可能要包括使用测试客户端执行这些视图的测试。但是，最终用户可以自由选择将其视图部署到您的应用程序中的任何URL。这意味着您的测试不能依赖您的视图将在特定URL可用的事实。使用 &lt;code&gt;@override_settings(ROOT_URLCONF=...)&lt;/code&gt; 装饰测试类或测试方法以进行URLconf配置。</target>
        </trans-unit>
        <trans-unit id="35485f3524af2f43a59e170657765450ecc8c6f8" translate="yes" xml:space="preserve">
          <source>If your authentication mechanism uses a custom HTTP header and not &lt;code&gt;REMOTE_USER&lt;/code&gt;, you can subclass &lt;code&gt;RemoteUserMiddleware&lt;/code&gt; and set the &lt;code&gt;header&lt;/code&gt; attribute to the desired &lt;code&gt;request.META&lt;/code&gt; key. For example:</source>
          <target state="translated">如果您的身份验证机制使用的是自定义HTTP标头而不是 &lt;code&gt;REMOTE_USER&lt;/code&gt; ，则可以子类 &lt;code&gt;RemoteUserMiddleware&lt;/code&gt; 并将 &lt;code&gt;header&lt;/code&gt; 属性设置为所需的 &lt;code&gt;request.META&lt;/code&gt; 密钥。例如：</target>
        </trans-unit>
        <trans-unit id="9779f7ac3b7339bf4ea6d174741695fcb45580da" translate="yes" xml:space="preserve">
          <source>If your background is in plain old PHP (with no use of modern frameworks), you&amp;rsquo;re probably used to putting code under the Web server&amp;rsquo;s document root (in a place such as &lt;code&gt;/var/www&lt;/code&gt;). With Django, you don&amp;rsquo;t do that. It&amp;rsquo;s not a good idea to put any of this Python code within your Web server&amp;rsquo;s document root, because it risks the possibility that people may be able to view your code over the Web. That&amp;rsquo;s not good for security.</source>
          <target state="translated">如果您的背景是使用简单的旧PHP（不使用现代框架），则可能习惯于将代码放在Web服务器的文档根目录下（在 &lt;code&gt;/var/www&lt;/code&gt; 等位置）。使用Django，您无需这么做。将任何这些Python代码放在​​Web服务器的文档根目录中不是一个好主意，因为这冒着人们可能通过Web查看您的代码的风险。这对安全性不利。</target>
        </trans-unit>
        <trans-unit id="ca388b1fedcaa5043ea95b9f8107592768d9f5dc" translate="yes" xml:space="preserve">
          <source>If your code attempts to access the database when its modules are compiled, this will occur &lt;em&gt;before&lt;/em&gt; the test database is set up, with potentially unexpected results. For example, if you have a database query in module-level code and a real database exists, production data could pollute your tests. &lt;em&gt;It is a bad idea to have such import-time database queries in your code&lt;/em&gt; anyway - rewrite your code so that it doesn&amp;rsquo;t do this.</source>
          <target state="translated">如果您的代码在编译模块时尝试访问数据库，则这将&lt;em&gt;在&lt;/em&gt;建立测试数据库&lt;em&gt;之前&lt;/em&gt;发生，并可能导致意外结果。例如，如果您在模块级代码中进行数据库查询，并且存在真实数据库，则生产数据可能会污染您的测试。无论如何&lt;em&gt;，在代码中都包含这样的导入时数据库查询是一个坏主意&lt;/em&gt; -重写代码，使其不会执行此操作。</target>
        </trans-unit>
        <trans-unit id="8b9eb50ad139972e07c5927be25959ddc8c43a98" translate="yes" xml:space="preserve">
          <source>If your code imports the application registry in an application&amp;rsquo;s &lt;code&gt;__init__.py&lt;/code&gt;, the name &lt;code&gt;apps&lt;/code&gt; will clash with the &lt;code&gt;apps&lt;/code&gt; submodule. The best practice is to move that code to a submodule and import it. A workaround is to import the registry under a different name:</source>
          <target state="translated">如果您的代码将应用程序注册表导入到应用程序的 &lt;code&gt;__init__.py&lt;/code&gt; 中，则名称 &lt;code&gt;apps&lt;/code&gt; 将与 &lt;code&gt;apps&lt;/code&gt; 子模块冲突。最佳实践是将代码移至子模块并导入。解决方法是使用其他名称导入注册表：</target>
        </trans-unit>
        <trans-unit id="037c62c31dab165af710e06e5131c4b392f063c1" translate="yes" xml:space="preserve">
          <source>If your code only uses ASCII data, it&amp;rsquo;s safe to use your normal strings, passing them around at will, because ASCII is a subset of UTF-8.</source>
          <target state="translated">如果您的代码仅使用ASCII数据，则可以安全地使用常规字符串，并随意传递它们，因为ASCII是UTF-8的子集。</target>
        </trans-unit>
        <trans-unit id="e54e295adfb62bcb63529d5938619c752337731c" translate="yes" xml:space="preserve">
          <source>If your command defines mandatory positional arguments, you can customize the message error returned in the case of missing arguments. The default is output by &lt;a href=&quot;https://docs.python.org/3/library/argparse.html#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; (&amp;ldquo;too few arguments&amp;rdquo;).</source>
          <target state="translated">如果您的命令定义了必需的位置参数，则可以自定义在缺少参数的情况下返回的消息错误。缺省值由&lt;a href=&quot;https://docs.python.org/3/library/argparse.html#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;输出（&amp;ldquo;参数过多&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="8b66d0e6b2d3c34277e5351352f9e2d49c89f40f" translate="yes" xml:space="preserve">
          <source>If your custom &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; class deals with data structures that are more complex than strings, dates, integers, or floats, then you may need to override &lt;a href=&quot;../ref/models/fields#django.db.models.Field.from_db_value&quot;&gt;&lt;code&gt;from_db_value()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/models/fields#django.db.models.Field.to_python&quot;&gt;&lt;code&gt;to_python()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您的自定义&lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;类处理的数据结构比字符串，日期，整数或浮点数复杂，那么您可能需要覆盖&lt;a href=&quot;../ref/models/fields#django.db.models.Field.from_db_value&quot;&gt; &lt;code&gt;from_db_value()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/models/fields#django.db.models.Field.to_python&quot;&gt; &lt;code&gt;to_python()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="42459a545a83bcbb2b1a6c5d0c989d612ebefbcf" translate="yes" xml:space="preserve">
          <source>If your custom field uses the &lt;code&gt;CHAR&lt;/code&gt;, &lt;code&gt;VARCHAR&lt;/code&gt; or &lt;code&gt;TEXT&lt;/code&gt; types for MySQL, you must make sure that &lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_prep_value&quot;&gt;&lt;code&gt;get_prep_value()&lt;/code&gt;&lt;/a&gt; always returns a string type. MySQL performs flexible and unexpected matching when a query is performed on these types and the provided value is an integer, which can cause queries to include unexpected objects in their results. This problem cannot occur if you always return a string type from &lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_prep_value&quot;&gt;&lt;code&gt;get_prep_value()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您的自定义字段使用MySQL 的 &lt;code&gt;CHAR&lt;/code&gt; ， &lt;code&gt;VARCHAR&lt;/code&gt; 或 &lt;code&gt;TEXT&lt;/code&gt; 类型，则必须确保&lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_prep_value&quot;&gt; &lt;code&gt;get_prep_value()&lt;/code&gt; &lt;/a&gt;始终返回字符串类型。当对这些类型执行查询并且提供的值是整数时，MySQL执行灵活且意外的匹配，这可能导致查询的结果中包含意外的对象。如果您始终从&lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_prep_value&quot;&gt; &lt;code&gt;get_prep_value()&lt;/code&gt; &lt;/a&gt;返回一个字符串类型，则不会发生此问题。</target>
        </trans-unit>
        <trans-unit id="5f134f8d6891d13bafe02ccedf40254834ce3b1c" translate="yes" xml:space="preserve">
          <source>If your custom user model is a subclass of &lt;code&gt;AbstractUser&lt;/code&gt;, then you can extend these forms in this manner:</source>
          <target state="translated">如果您的自定义用户模型是 &lt;code&gt;AbstractUser&lt;/code&gt; 的子类，则可以通过以下方式扩展这些形式：</target>
        </trans-unit>
        <trans-unit id="7489ac299b65b30e1fabb441ed4d0427d3e20fa3" translate="yes" xml:space="preserve">
          <source>If your data does &lt;em&gt;not&lt;/em&gt; validate, the &lt;code&gt;cleaned_data&lt;/code&gt; dictionary contains only the valid fields:</source>
          <target state="translated">如果您的数据&lt;em&gt;未&lt;/em&gt;通过验证，则 &lt;code&gt;cleaned_data&lt;/code&gt; 词典仅包含有效字段：</target>
        </trans-unit>
        <trans-unit id="66fee195a0e25a7f977bf0cd9ad9e712b37631fd" translate="yes" xml:space="preserve">
          <source>If your database column name is an SQL reserved word, or contains characters that aren&amp;rsquo;t allowed in Python variable names &amp;ndash; notably, the hyphen &amp;ndash; that&amp;rsquo;s OK. Django quotes column and table names behind the scenes.</source>
          <target state="translated">如果您的数据库列名称是SQL保留字，或者包含Python变量名称中不允许使用的字符（尤其是连字符），则可以。Django在幕后引用列名和表名。</target>
        </trans-unit>
        <trans-unit id="83b77d8f63e76cf58cc37344473b9afbbd464eed" translate="yes" xml:space="preserve">
          <source>If your database configuration requires a specific creation order, you can specify the dependencies that exist using the &lt;a href=&quot;../../ref/settings#std:setting-TEST_DEPENDENCIES&quot;&gt;&lt;code&gt;DEPENDENCIES&lt;/code&gt;&lt;/a&gt; test setting. Consider the following (simplified) example database configuration:</source>
          <target state="translated">如果您的数据库配置需要特定的创建顺序，则可以使用&lt;a href=&quot;../../ref/settings#std:setting-TEST_DEPENDENCIES&quot;&gt; &lt;code&gt;DEPENDENCIES&lt;/code&gt; &lt;/a&gt;测试设置指定存在的依赖项。考虑以下（简化的）示例数据库配置：</target>
        </trans-unit>
        <trans-unit id="7805750627528231fb20224a0ae84ae501c12e42" translate="yes" xml:space="preserve">
          <source>If your database table name is an SQL reserved word, or contains characters that aren&amp;rsquo;t allowed in Python variable names &amp;ndash; notably, the hyphen &amp;ndash; that&amp;rsquo;s OK. Django quotes column and table names behind the scenes.</source>
          <target state="translated">如果您的数据库表名称是SQL保留字，或者包含Python变量名称中不允许使用的字符（尤其是连字符），则可以。Django在幕后引用列名和表名。</target>
        </trans-unit>
        <trans-unit id="b9f5f90e03e19a8bb4a87f8c1e61359a54e098f8" translate="yes" xml:space="preserve">
          <source>If your deployment situation allows, it&amp;rsquo;s usually a good idea to have your front-end Web server perform the functionality provided by the &lt;code&gt;SecurityMiddleware&lt;/code&gt;. That way, if there are requests that aren&amp;rsquo;t served by Django (such as static media or user-uploaded files), they will have the same protections as requests to your Django application.</source>
          <target state="translated">如果您的部署情况允许，让前端Web服务器执行 &lt;code&gt;SecurityMiddleware&lt;/code&gt; 提供的功能通常是个好主意。这样，如果存在Django不提供的请求（例如静态媒体或用户上传的文件），则它们将具有与Django应用程序的请求相同的保护。</target>
        </trans-unit>
        <trans-unit id="b1ce081d315c1a0717aefc66e3fbb209ac78a158" translate="yes" xml:space="preserve">
          <source>If your form includes a &lt;a href=&quot;../../ref/forms/fields#django.forms.URLField&quot;&gt;&lt;code&gt;URLField&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;../../ref/forms/fields#django.forms.EmailField&quot;&gt;&lt;code&gt;EmailField&lt;/code&gt;&lt;/a&gt; or any integer field type, Django will use the &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt; and &lt;code&gt;number&lt;/code&gt; HTML5 input types. By default, browsers may apply their own validation on these fields, which may be stricter than Django&amp;rsquo;s validation. If you would like to disable this behavior, set the &lt;code&gt;novalidate&lt;/code&gt; attribute on the &lt;code&gt;form&lt;/code&gt; tag, or specify a different widget on the field, like &lt;a href=&quot;../../ref/forms/widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您的表单包含&lt;a href=&quot;../../ref/forms/fields#django.forms.URLField&quot;&gt; &lt;code&gt;URLField&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../ref/forms/fields#django.forms.EmailField&quot;&gt; &lt;code&gt;EmailField&lt;/code&gt; &lt;/a&gt;或任何整数字段类型，则Django将使用 &lt;code&gt;url&lt;/code&gt; ， &lt;code&gt;email&lt;/code&gt; 和 &lt;code&gt;number&lt;/code&gt; HTML5输入类型。默认情况下，浏览器可以在这些字段上应用自己的验证，这可能比Django的验证更严格。如果要禁用此行为，请在 &lt;code&gt;form&lt;/code&gt; 标记上设置 &lt;code&gt;novalidate&lt;/code&gt; 属性，或在字段上指定其他小部件，例如&lt;a href=&quot;../../ref/forms/widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9e4e143f7d7dfb7b18d9cf7a1c3427090cb8e9a5" translate="yes" xml:space="preserve">
          <source>If your hasher doesn&amp;rsquo;t have a work factor, implement the method as a no-op (&lt;code&gt;pass&lt;/code&gt;).</source>
          <target state="translated">如果您的哈希器没有工作因素，请将该方法实现为no-op（ &lt;code&gt;pass&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b352e31157863463daa5a9b2b4a00f05e691f6ce" translate="yes" xml:space="preserve">
          <source>If your model contains more than one foreign key to the same model, you&amp;rsquo;ll need to resolve the ambiguity manually using &lt;code&gt;fk_name&lt;/code&gt;. For example, consider the following model:</source>
          <target state="translated">如果您的模型包含同一模型的多个外键，则需要使用 &lt;code&gt;fk_name&lt;/code&gt; 手动解决歧义。例如，考虑以下模型：</target>
        </trans-unit>
        <trans-unit id="6ca7a43d3ceacd8c83aa87a7c6008e8f5f3287d7" translate="yes" xml:space="preserve">
          <source>If your model has a &lt;a href=&quot;../../models/instances#django.db.models.Model.get_absolute_url&quot;&gt;&lt;code&gt;get_absolute_url()&lt;/code&gt;&lt;/a&gt; method but you don&amp;rsquo;t want the &amp;ldquo;View on site&amp;rdquo; button to appear, you only need to set &lt;code&gt;view_on_site&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt;:</source>
          <target state="translated">如果您的模型具有&lt;a href=&quot;../../models/instances#django.db.models.Model.get_absolute_url&quot;&gt; &lt;code&gt;get_absolute_url()&lt;/code&gt; &lt;/a&gt;方法，但是您不希望显示&amp;ldquo;现场查看&amp;rdquo;按钮，则只需将 &lt;code&gt;view_on_site&lt;/code&gt; 设置为 &lt;code&gt;False&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="55784988b7d647b9df1a836203e5bf6b7c5dabc3" translate="yes" xml:space="preserve">
          <source>If your model has more than one &lt;a href=&quot;../models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; to the &lt;code&gt;parent_model&lt;/code&gt;, you must specify a &lt;code&gt;fk_name&lt;/code&gt;.</source>
          <target state="translated">如果您的模型对 &lt;code&gt;parent_model&lt;/code&gt; 有多个&lt;a href=&quot;../models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;，则必须指定一个 &lt;code&gt;fk_name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e6dc5086c9587c9e487ae0b9fdc36e7f3231fe93" translate="yes" xml:space="preserve">
          <source>If your model&amp;rsquo;s &lt;a href=&quot;../../topics/db/models#meta-options&quot;&gt;Meta&lt;/a&gt; specifies &lt;a href=&quot;options#django.db.models.Options.get_latest_by&quot;&gt;&lt;code&gt;get_latest_by&lt;/code&gt;&lt;/a&gt;, you can omit any arguments to &lt;code&gt;earliest()&lt;/code&gt; or &lt;code&gt;latest()&lt;/code&gt;. The fields specified in &lt;a href=&quot;options#django.db.models.Options.get_latest_by&quot;&gt;&lt;code&gt;get_latest_by&lt;/code&gt;&lt;/a&gt; will be used by default.</source>
          <target state="translated">如果您模型的&lt;a href=&quot;../../topics/db/models#meta-options&quot;&gt;Meta&lt;/a&gt;指定了&lt;a href=&quot;options#django.db.models.Options.get_latest_by&quot;&gt; &lt;code&gt;get_latest_by&lt;/code&gt; &lt;/a&gt;，则可以忽略任何参数earlyest &lt;code&gt;earliest()&lt;/code&gt; 或 &lt;code&gt;latest()&lt;/code&gt; 。默认情况下，将使用在&lt;a href=&quot;options#django.db.models.Options.get_latest_by&quot;&gt; &lt;code&gt;get_latest_by&lt;/code&gt; 中&lt;/a&gt;指定的字段。</target>
        </trans-unit>
        <trans-unit id="151f04ef6d26ef02a6f8f49d9494948ff5996818" translate="yes" xml:space="preserve">
          <source>If your project uses proxy models, you must either modify the proxy to extend the user model that&amp;rsquo;s in use in your project, or merge your proxy&amp;rsquo;s behavior into your &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; subclass.</source>
          <target state="translated">如果项目使用代理模型，则必须修改代理以扩展项目中正在使用的用户模型，或者将代理的行为合并到&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;子类中。</target>
        </trans-unit>
        <trans-unit id="44824388e510837cfa981ebd84a663ae9c830298" translate="yes" xml:space="preserve">
          <source>If your request used the &lt;code&gt;follow&lt;/code&gt; argument, the &lt;code&gt;expected_url&lt;/code&gt; and &lt;code&gt;target_status_code&lt;/code&gt; will be the url and status code for the final point of the redirect chain.</source>
          <target state="translated">如果您的请求中使用的 &lt;code&gt;follow&lt;/code&gt; 参数， &lt;code&gt;expected_url&lt;/code&gt; 和 &lt;code&gt;target_status_code&lt;/code&gt; 将是重定向链的最终点的网址和状态代码。</target>
        </trans-unit>
        <trans-unit id="90e0da33d8c8d3ffe3995050565ede94840b1dd8" translate="yes" xml:space="preserve">
          <source>If your root URLconf uses &lt;a href=&quot;#django.conf.urls.i18n.i18n_patterns&quot;&gt;&lt;code&gt;i18n_patterns()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;JavaScriptCatalog&lt;/code&gt; must also be wrapped by &lt;code&gt;i18n_patterns()&lt;/code&gt; for the catalog to be correctly generated.</source>
          <target state="translated">如果您的根URLconf使用&lt;a href=&quot;#django.conf.urls.i18n.i18n_patterns&quot;&gt; &lt;code&gt;i18n_patterns()&lt;/code&gt; &lt;/a&gt;，则 &lt;code&gt;JavaScriptCatalog&lt;/code&gt; 也必须由 &lt;code&gt;i18n_patterns()&lt;/code&gt; 包装，以便正确生成目录。</target>
        </trans-unit>
        <trans-unit id="6df4fb6245e051b9d36fab3f466fa1d09ca7a5f9" translate="yes" xml:space="preserve">
          <source>If your site accepts file uploads, it is strongly advised that you limit these uploads in your Web server configuration to a reasonable size in order to prevent denial of service (DOS) attacks. In Apache, this can be easily set using the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/mod/core.html#limitrequestbody&quot;&gt;LimitRequestBody&lt;/a&gt; directive.</source>
          <target state="translated">如果您的站点接受文件上载，则强烈建议您将Web服务器配置中的这些上载限制为合理的大小，以防止拒绝服务（DOS）攻击。在Apache中，可以使用&lt;a href=&quot;https://httpd.apache.org/docs/2.4/mod/core.html#limitrequestbody&quot;&gt;LimitRequestBody&lt;/a&gt;指令轻松设置此值。</target>
        </trans-unit>
        <trans-unit id="6f8d605a5c50ad541297eddd5069d8164b968b86" translate="yes" xml:space="preserve">
          <source>If your site offers both HTTP and HTTPS connections, most users will end up with an unsecured connection by default. For best security, you should redirect all HTTP connections to HTTPS.</source>
          <target state="translated">如果你的网站同时提供HTTP和HTTPS连接,大多数用户最终会默认使用不安全的连接。为了达到最佳的安全性,你应该将所有的HTTP连接重定向到HTTPS。</target>
        </trans-unit>
        <trans-unit id="d3c6bc1158a1e98cf03b8d846800ac77b1fa4b8a" translate="yes" xml:space="preserve">
          <source>If your site sends emails, these values need to be set correctly.</source>
          <target state="translated">如果你的网站发送电子邮件,这些值需要正确设置。</target>
        </trans-unit>
        <trans-unit id="9aa8302c804c3a783e15d8c95fda308c718b94b7" translate="yes" xml:space="preserve">
          <source>If your site serves user-uploaded files, a malicious user could upload a specially-crafted file that would be interpreted as HTML or JavaScript by the browser when you expected it to be something harmless.</source>
          <target state="translated">如果您的网站提供用户上传的文件,恶意用户可能会上传一个特制的文件,当您认为它是无害的东西时,该文件会被浏览器解释为HTML或JavaScript。</target>
        </trans-unit>
        <trans-unit id="0ad66de9dea62ec082b44fd754a56be3eb2434f8" translate="yes" xml:space="preserve">
          <source>If your site uses Django&amp;rsquo;s &lt;a href=&quot;../auth/index&quot;&gt;authentication system&lt;/a&gt; and you deal with logging in users, you can use the test client&amp;rsquo;s &lt;code&gt;login()&lt;/code&gt; method to simulate the effect of a user logging into the site.</source>
          <target state="translated">如果您的站点使用Django的&lt;a href=&quot;../auth/index&quot;&gt;身份验证系统&lt;/a&gt;并且您要处理用户登录，则可以使用测试客户端的 &lt;code&gt;login()&lt;/code&gt; 方法来模拟用户登录站点的效果。</target>
        </trans-unit>
        <trans-unit id="d440a3cae88c7b38cb98393225850ee488a3a51c" translate="yes" xml:space="preserve">
          <source>If your site uses Django&amp;rsquo;s &lt;a href=&quot;../auth/index&quot;&gt;authentication system&lt;/a&gt;, the &lt;code&gt;logout()&lt;/code&gt; method can be used to simulate the effect of a user logging out of your site.</source>
          <target state="translated">如果您的站点使用Django的&lt;a href=&quot;../auth/index&quot;&gt;身份验证系统&lt;/a&gt;，则 &lt;code&gt;logout()&lt;/code&gt; 方法可用于模拟用户退出站点的效果。</target>
        </trans-unit>
        <trans-unit id="0ae4efc81923d0d641f95a6dbd07af8563d1a6b5" translate="yes" xml:space="preserve">
          <source>If your site uses Django&amp;rsquo;s &lt;a href=&quot;../auth/index&quot;&gt;authentication system&lt;/a&gt;, you can use the &lt;code&gt;force_login()&lt;/code&gt; method to simulate the effect of a user logging into the site. Use this method instead of &lt;a href=&quot;#django.test.Client.login&quot;&gt;&lt;code&gt;login()&lt;/code&gt;&lt;/a&gt; when a test requires a user be logged in and the details of how a user logged in aren&amp;rsquo;t important.</source>
          <target state="translated">如果您的站点使用Django的&lt;a href=&quot;../auth/index&quot;&gt;身份验证系统&lt;/a&gt;，则可以使用 &lt;code&gt;force_login()&lt;/code&gt; 方法来模拟用户登录该站点的效果。当测试要求用户登录且用户登录方式的详细信息并不重要时，请使用此方法代替&lt;a href=&quot;#django.test.Client.login&quot;&gt; &lt;code&gt;login()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="56c55021691d4a1273096fb3bde5d2de5ed1abf6" translate="yes" xml:space="preserve">
          <source>If your site uses the same rendering logic for forms in multiple places, you can reduce duplication by saving the form&amp;rsquo;s loop in a standalone template and using the &lt;a href=&quot;../../ref/templates/builtins#std:templatetag-include&quot;&gt;&lt;code&gt;include&lt;/code&gt;&lt;/a&gt; tag to reuse it in other templates:</source>
          <target state="translated">如果您的站点在多个位置对表单使用相同的呈现逻辑，则可以通过将表单的循环保存在独立模板中并使用&lt;a href=&quot;../../ref/templates/builtins#std:templatetag-include&quot;&gt; &lt;code&gt;include&lt;/code&gt; &lt;/a&gt;标记在其他模板中重用它来减少重复：</target>
        </trans-unit>
        <trans-unit id="0462de7d96fe5e5014114972e806e852776e60fd" translate="yes" xml:space="preserve">
          <source>If your template tag needs to access the current context, you can use the &lt;code&gt;takes_context&lt;/code&gt; argument when registering your tag:</source>
          <target state="translated">如果您的模板标签需要访问当前上下文，则可以在注册标签时使用 &lt;code&gt;takes_context&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="131d5a32009bb9c3437d883a85b81cbab612c507" translate="yes" xml:space="preserve">
          <source>If your tests make any database queries, use subclasses &lt;a href=&quot;#django.test.TransactionTestCase&quot;&gt;&lt;code&gt;TransactionTestCase&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.test.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您的测试进行任何数据库查询，请使用子类&lt;a href=&quot;#django.test.TransactionTestCase&quot;&gt; &lt;code&gt;TransactionTestCase&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#django.test.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="93b76f5f9b3d3f25cd25b34d9927950756431ed5" translate="yes" xml:space="preserve">
          <source>If your tests rely on database access such as creating or querying models, be sure to create your test classes as subclasses of &lt;a href=&quot;tools#django.test.TestCase&quot;&gt;&lt;code&gt;django.test.TestCase&lt;/code&gt;&lt;/a&gt; rather than &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您的测试依赖于数据库访问（例如创建或查询模型），请确保将测试类创建为&lt;a href=&quot;tools#django.test.TestCase&quot;&gt; &lt;code&gt;django.test.TestCase&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; 的&lt;/a&gt;子类。</target>
        </trans-unit>
        <trans-unit id="7ea04c1e37c45f0d4b469802f36772d32e7b6af6" translate="yes" xml:space="preserve">
          <source>If your view is not rendering a template containing the &lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt;&lt;code&gt;csrf_token&lt;/code&gt;&lt;/a&gt; template tag, Django might not set the CSRF token cookie. This is common in cases where forms are dynamically added to the page. To address this case, Django provides a view decorator which forces setting of the cookie: &lt;a href=&quot;#django.views.decorators.csrf.ensure_csrf_cookie&quot;&gt;&lt;code&gt;ensure_csrf_cookie()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您的视图未呈现包含&lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt; &lt;code&gt;csrf_token&lt;/code&gt; &lt;/a&gt;模板标签的模板，则Django可能未设置CSRF令牌cookie。在将表单动态添加到页面的情况下，这很常见。为了解决这种情况，Django提供了一个视图装饰器来强制设置cookie：&lt;a href=&quot;#django.views.decorators.csrf.ensure_csrf_cookie&quot;&gt; &lt;code&gt;ensure_csrf_cookie()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="100164bf62bbd4acd7334a3ab2e0db0ddfb29848" translate="yes" xml:space="preserve">
          <source>If, as in the second example above, you&amp;rsquo;ve left the &lt;code&gt;default&lt;/code&gt; database empty, you must provide a database name each time you run &lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt;. Omitting the database name would raise an error. For the second example:</source>
          <target state="translated">如果像上面的第二个示例一样，将 &lt;code&gt;default&lt;/code&gt; 数据库留空，则每次运行&lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;时必须提供一个数据库名称。省略数据库名称将引发错误。对于第二个示例：</target>
        </trans-unit>
        <trans-unit id="05a2ca6c2742910df2490054ce0b70ad2788db45" translate="yes" xml:space="preserve">
          <source>If, for some reason, it was decided that the URLs where content for yearly article archives are published at should be changed then you would only need to change the entry in the URLconf.</source>
          <target state="translated">如果出于某种原因,决定改变年度文章存档内容发布的URL,那么你只需要改变URLconf中的条目。</target>
        </trans-unit>
        <trans-unit id="2bdda409711d05757642b136dd218873e3a28bc8" translate="yes" xml:space="preserve">
          <source>If, for some reason, you &lt;em&gt;want&lt;/em&gt; the test client to perform CSRF checks, you can create an instance of the test client that enforces CSRF checks. To do this, pass in the &lt;code&gt;enforce_csrf_checks&lt;/code&gt; argument when you construct your client:</source>
          <target state="translated">如果出于某种原因，您&lt;em&gt;希望&lt;/em&gt;测试客户端执行CSRF检查，则可以创建一个强制执行CSRF检查的测试客户端实例。为此，请在构造客户端时传递 &lt;code&gt;enforce_csrf_checks&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="cd25f650a89f987a8ae9410f69052145579c8043" translate="yes" xml:space="preserve">
          <source>If, for some reason, you &lt;em&gt;want&lt;/em&gt; the test client to perform CSRF checks, you can create an instance of the test client that enforces CSRF checks:</source>
          <target state="translated">如果出于某种原因，您&lt;em&gt;希望&lt;/em&gt;测试客户端执行CSRF检查，则可以创建实施CSRF检查的测试客户端实例：</target>
        </trans-unit>
        <trans-unit id="919bf73ea026018730b49f5cba48431bbbf54fd7" translate="yes" xml:space="preserve">
          <source>If, for some reason, your custom management command must run without an active locale (for example, to prevent translated content from being inserted into the database), deactivate translations using the &lt;code&gt;@no_translations&lt;/code&gt; decorator on your &lt;a href=&quot;#django.core.management.BaseCommand.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">如果由于某种原因您的自定义管理命令必须在没有活动语言环境的情况下运行（例如，防止翻译的内容插入数据库），请使用&lt;a href=&quot;#django.core.management.BaseCommand.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt;方法上的 &lt;code&gt;@no_translations&lt;/code&gt; 装饰器停用翻译：</target>
        </trans-unit>
        <trans-unit id="b07cc84bbd178c74aa2d9ca20dfcde5708a26518" translate="yes" xml:space="preserve">
          <source>If, however, you have no option but to serve media files on the same Apache &lt;code&gt;VirtualHost&lt;/code&gt; as Django, you can set up Apache to serve some URLs as static media, and others using the mod_wsgi interface to Django.</source>
          <target state="translated">但是，如果您别无选择，只能在与Django 相同的Apache &lt;code&gt;VirtualHost&lt;/code&gt; 上提供媒体文件，则可以将Apache设置为将某些URL用作静态媒体，将其他URL用作Django的mod_wsgi接口。</target>
        </trans-unit>
        <trans-unit id="9ce69c54fa4098f27900ed28ca0545fa9c86efee" translate="yes" xml:space="preserve">
          <source>If, however, you need to re-enable a globally-disabled action for one particular model, list it explicitly in your &lt;code&gt;ModelAdmin.actions&lt;/code&gt; list:</source>
          <target state="translated">但是，如果您需要为一个特定模型重新启用全局禁用的操作，请在 &lt;code&gt;ModelAdmin.actions&lt;/code&gt; 列表中明确列出该操作：</target>
        </trans-unit>
        <trans-unit id="4e214bf4c073cee123e8fb348d379cb842d22670" translate="yes" xml:space="preserve">
          <source>Ignore files, directories, or paths matching this glob-style pattern. Use multiple times to ignore more. When specifying a path, always use forward slashes, even on Windows.</source>
          <target state="translated">忽略与此glob样式模式匹配的文件、目录或路径。多次使用可以忽略更多的文件、目录或路径。当指定路径时,始终使用正斜线,即使在Windows上也是如此。</target>
        </trans-unit>
        <trans-unit id="b46ee8e1837971774646e299482d167d080ed7ef" translate="yes" xml:space="preserve">
          <source>Ignore the warning about unapplied database migrations for now; we&amp;rsquo;ll deal with the database shortly.</source>
          <target state="translated">暂时忽略有关未应用数据库迁移的警告；我们将尽快处理数据库。</target>
        </trans-unit>
        <trans-unit id="37586d575c14722fe8807bc994aadfaef7495bc6" translate="yes" xml:space="preserve">
          <source>Ignores directories matching the given &lt;a href=&quot;https://docs.python.org/3/library/glob.html#module-glob&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt;-style pattern. Use multiple times to ignore more.</source>
          <target state="translated">忽略与给定的&lt;a href=&quot;https://docs.python.org/3/library/glob.html#module-glob&quot;&gt; &lt;code&gt;glob&lt;/code&gt; &lt;/a&gt; -style模式匹配的目录。使用多次忽略更多。</target>
        </trans-unit>
        <trans-unit id="26f58245e8a0d7451fc5c47ad810a8c64487bb47" translate="yes" xml:space="preserve">
          <source>Ignores everything between &lt;code&gt;{% comment %}&lt;/code&gt; and &lt;code&gt;{% endcomment %}&lt;/code&gt;. An optional note may be inserted in the first tag. For example, this is useful when commenting out code for documenting why the code was disabled.</source>
          <target state="translated">忽略 &lt;code&gt;{% comment %}&lt;/code&gt; 和 &lt;code&gt;{% endcomment %}&lt;/code&gt; 。可以在第一个标签中插入可选注释。例如，在注释掉代码以记录为什么禁用代码时，这很有用。</target>
        </trans-unit>
        <trans-unit id="9ee48f68c602ee8c804d6234ef660c199f1fbe4a" translate="yes" xml:space="preserve">
          <source>Ignores fields and models that may have been removed since the fixture was originally generated.</source>
          <target state="translated">忽略自夹具最初生成以来可能已经被删除的字段和模型。</target>
        </trans-unit>
        <trans-unit id="e6f657b51973a7ffa6d6443941085cb8d8492fd4" translate="yes" xml:space="preserve">
          <source>Ignores files or directories matching the given &lt;a href=&quot;https://docs.python.org/3/library/glob.html#module-glob&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt;-style pattern. Use multiple times to ignore more.</source>
          <target state="translated">忽略与给定的&lt;a href=&quot;https://docs.python.org/3/library/glob.html#module-glob&quot;&gt; &lt;code&gt;glob&lt;/code&gt; &lt;/a&gt; -style模式匹配的文件或目录。使用多次忽略更多。</target>
        </trans-unit>
        <trans-unit id="323377a570864e3a1b26bdc4a63a300a0a6b5471" translate="yes" xml:space="preserve">
          <source>Ignoring &amp;ldquo;stop words&amp;rdquo; such as &amp;ldquo;a&amp;rdquo;, &amp;ldquo;the&amp;rdquo;, &amp;ldquo;and&amp;rdquo;.</source>
          <target state="translated">忽略&amp;ldquo;停用词&amp;rdquo;，例如&amp;ldquo; a&amp;rdquo;，&amp;ldquo; the&amp;rdquo;，&amp;ldquo; and&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="99b7a0e4a10dba5856b9ea510fa67c9bb35255e5" translate="yes" xml:space="preserve">
          <source>Imagine we had a &lt;code&gt;last_accessed&lt;/code&gt; field on our &lt;code&gt;Author&lt;/code&gt; model that we were using to keep track of the last time anybody looked at that author:</source>
          <target state="translated">想象一下，我们在 &lt;code&gt;Author&lt;/code&gt; 模型上有一个 &lt;code&gt;last_accessed&lt;/code&gt; 字段，用于跟踪任何人上次查看该作者的时间：</target>
        </trans-unit>
        <trans-unit id="7fc15e1eb128d4daccbe8c7ab2a5c5e128767d8e" translate="yes" xml:space="preserve">
          <source>Implement a &lt;code&gt;clean()&lt;/code&gt; method on your &lt;code&gt;Form&lt;/code&gt; when you must add custom validation for fields that are interdependent. See &lt;a href=&quot;validation#validating-fields-with-clean&quot;&gt;Cleaning and validating fields that depend on each other&lt;/a&gt; for example usage.</source>
          <target state="translated">当必须为相互依赖的字段添加自定义验证时，请在 &lt;code&gt;Form&lt;/code&gt; 上实现 &lt;code&gt;clean()&lt;/code&gt; 方法。有关示例用法&lt;a href=&quot;validation#validating-fields-with-clean&quot;&gt;，&lt;/a&gt;请参见清洁和验证彼此依赖的字段。</target>
        </trans-unit>
        <trans-unit id="c6cfa7967295c6a6446e645b10a6097c50a71d8d" translate="yes" xml:space="preserve">
          <source>Implementation concerns</source>
          <target state="translated">执行问题</target>
        </trans-unit>
        <trans-unit id="e0bf2dc952ab6d2617aa9b9ee013534f9eeb5b62" translate="yes" xml:space="preserve">
          <source>Implementation notes</source>
          <target state="translated">实施说明</target>
        </trans-unit>
        <trans-unit id="3e3330bd2a361feb0240b1fddb979752ae17ea93" translate="yes" xml:space="preserve">
          <source>Implementing a constructor in a subclass</source>
          <target state="translated">在子类中实现构造函数</target>
        </trans-unit>
        <trans-unit id="632f01fece5418e29e250528914dbf408f470600" translate="yes" xml:space="preserve">
          <source>Implementing caching should not be regarded as an alternative to improving code that&amp;rsquo;s performing poorly because it has been written badly. It&amp;rsquo;s one of the final steps towards producing well-performing code, not a shortcut.</source>
          <target state="translated">实施缓存不应被视为改善性能较差的代码的替代方法，因为它的编写质量很差。这是生成性能良好的代码的最后一步，而不是捷径。</target>
        </trans-unit>
        <trans-unit id="6c877258699b88d7b5575fdb8ca9aae3d8820bae" translate="yes" xml:space="preserve">
          <source>Implementing this yourself often results in a lot of repeated boilerplate code (see &lt;a href=&quot;../forms/index#using-a-form-in-a-view&quot;&gt;Using a form in a view&lt;/a&gt;). To help avoid this, Django provides a collection of generic class-based views for form processing.</source>
          <target state="translated">自己实现这一点通常会导致很多重复的样板代码（请参阅&lt;a href=&quot;../forms/index#using-a-form-in-a-view&quot;&gt;在视图中使用表单&lt;/a&gt;）。为了避免这种情况，Django提供了一组基于类的通用视图以进行表单处理。</target>
        </trans-unit>
        <trans-unit id="e5d8feee9c32a98e60e7043052deae37efa5b7c8" translate="yes" xml:space="preserve">
          <source>Implements cached database-backed session store.</source>
          <target state="translated">实现缓存的数据库支持的会话存储。</target>
        </trans-unit>
        <trans-unit id="57a7f9ee519c5b8d6227a97eb918c9e03394062f" translate="yes" xml:space="preserve">
          <source>Implements database-backed session store.</source>
          <target state="translated">实现数据库支持的会话存储。</target>
        </trans-unit>
        <trans-unit id="22e27035ac8e154d8d3e3995c4f857cc344cbb23" translate="yes" xml:space="preserve">
          <source>Implies setting &lt;a href=&quot;#django.db.models.Field.db_index&quot;&gt;&lt;code&gt;Field.db_index&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">意味着将&lt;a href=&quot;#django.db.models.Field.db_index&quot;&gt; &lt;code&gt;Field.db_index&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="759987d88bd09dd553f257b758daf18ca5f14887" translate="yes" xml:space="preserve">
          <source>Import spatial reference from EPSG code.</source>
          <target state="translated">从EPSG代码导入空间参考。</target>
        </trans-unit>
        <trans-unit id="f7080a194b706adfdf562e2d80373f6ad81a34c0" translate="yes" xml:space="preserve">
          <source>Import spatial reference from PROJ.4 string.</source>
          <target state="translated">从PROJ.4字符串导入空间参考。</target>
        </trans-unit>
        <trans-unit id="6fef6e94164d6d870390223dd3af1c7cb28c31ac" translate="yes" xml:space="preserve">
          <source>Import spatial reference from WKT.</source>
          <target state="translated">从WKT导入空间参考。</target>
        </trans-unit>
        <trans-unit id="8a4c58086cb4f68917fb1260e33f6c51036c8456" translate="yes" xml:space="preserve">
          <source>Import spatial reference from XML.</source>
          <target state="translated">从XML导入空间参考。</target>
        </trans-unit>
        <trans-unit id="4b6d6a30150a506f9b79caf45da5aecb76b0018e" translate="yes" xml:space="preserve">
          <source>Important</source>
          <target state="translated">Important</target>
        </trans-unit>
        <trans-unit id="6c4b688b2ef86c7056f52a57bea61a8792c3849d" translate="yes" xml:space="preserve">
          <source>Importing &lt;code&gt;AbstractBaseUser&lt;/code&gt;</source>
          <target state="translated">导入 &lt;code&gt;AbstractBaseUser&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7a5f39849f3fe8c1533fc46296d83c2841e8caa" translate="yes" xml:space="preserve">
          <source>Importing Spatial Data</source>
          <target state="translated">导入空间数据</target>
        </trans-unit>
        <trans-unit id="31deeb21a29c47ae89f038bc8341eaaeff7a09c5" translate="yes" xml:space="preserve">
          <source>Imports a dotted module path and returns the attribute/class designated by the last name in the path. Raises &lt;code&gt;ImportError&lt;/code&gt; if the import failed. For example:</source>
          <target state="translated">导入点划线的模块路径，并返回路径中姓氏所指定的属性/类。如果导入失败，则引发 &lt;code&gt;ImportError&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="43d1c07c1e566ca2939141457a3c42159b8e891a" translate="yes" xml:space="preserve">
          <source>Improved speed might be the most obvious aim for a program, but sometimes other performance improvements might be sought, such as lower memory consumption or fewer demands on the database or network.</source>
          <target state="translated">对于一个程序来说,提高速度可能是最明显的目的,但有时可能会寻求其他性能的改进,例如降低内存消耗或减少对数据库或网络的需求。</target>
        </trans-unit>
        <trans-unit id="d8cb9b65545d67676e31319a8591f1bc9ef9938d" translate="yes" xml:space="preserve">
          <source>Improvements in one area will often bring about improved performance in another, but not always; sometimes one can even be at the expense of another. For example, an improvement in a program&amp;rsquo;s speed might cause it to use more memory. Even worse, it can be self-defeating - if the speed improvement is so memory-hungry that the system starts to run out of memory, you&amp;rsquo;ll have done more harm than good.</source>
          <target state="translated">一个方面的改进通常会带来另一个方面的改进，但并非总是如此；有时一个人甚至可以牺牲另一个人。例如，程序速度的提高可能会导致它使用更多的内存。更糟糕的是，这可能是自欺欺人的-如果速度提升如此耗费内存，以致系统开始耗尽内存，那么您的弊大于利。</target>
        </trans-unit>
        <trans-unit id="b5e972a8024aea2ff5834415377894b0b1408dc1" translate="yes" xml:space="preserve">
          <source>Improving our view</source>
          <target state="translated">改善我们的看法</target>
        </trans-unit>
        <trans-unit id="423ee3d502d51a230964dcb05a5037a9723ba101" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt;, each middleware component is represented by a string: the full Python path to the middleware factory&amp;rsquo;s class or function name. For example, here&amp;rsquo;s the default value created by &lt;a href=&quot;../../ref/django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;django-admin
startproject&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">在&lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; 中&lt;/a&gt;，每个中间件组件都由一个字符串表示：中间件工厂的类或函数名称的完整Python路径。例如，这是&lt;a href=&quot;../../ref/django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;django-admin startproject&lt;/code&gt; &lt;/a&gt;创建的默认值：</target>
        </trans-unit>
        <trans-unit id="0f98c9c44256324347c54d4de74bec56956bdb2a" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;tutorial04&quot;&gt;Tutorial 4&lt;/a&gt; we introduced a class-based view, based on &lt;a href=&quot;../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">在&lt;a href=&quot;tutorial04&quot;&gt;教程4中，&lt;/a&gt;我们基于&lt;a href=&quot;../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt;引入了基于类的视图：</target>
        </trans-unit>
        <trans-unit id="061872dabbd882e65fed4448dcd75d033d42e91a" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&quot;nodelist = parser.parse(('endcomment',))&quot;&lt;/code&gt; in the above example, &lt;code&gt;nodelist&lt;/code&gt; is a list of all nodes between the &lt;code&gt;{% comment %}&lt;/code&gt; and &lt;code&gt;{% endcomment %}&lt;/code&gt;, not counting &lt;code&gt;{% comment %}&lt;/code&gt; and &lt;code&gt;{% endcomment %}&lt;/code&gt; themselves.</source>
          <target state="translated">在上例中的 &lt;code&gt;&quot;nodelist = parser.parse(('endcomment',))&quot;&lt;/code&gt; 中， &lt;code&gt;nodelist&lt;/code&gt; 是 &lt;code&gt;{% comment %}&lt;/code&gt; 和 &lt;code&gt;{% endcomment %}&lt;/code&gt; 之间的所有节点的列表，不包括 &lt;code&gt;{% comment %}&lt;/code&gt; 和 &lt;code&gt;{% endcomment %}&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="980baa344e263cc001383a2be32c4e65f245ce93" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;template.html&lt;/code&gt;, the following paths would be valid:</source>
          <target state="translated">在 &lt;code&gt;template.html&lt;/code&gt; 中，以下路径将有效：</target>
        </trans-unit>
        <trans-unit id="6ef78276f8e607837babb1b9074bcf132d9b67ef" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;test_future_question&lt;/code&gt;, we create a question with a &lt;code&gt;pub_date&lt;/code&gt; in the future. The database is reset for each test method, so the first question is no longer there, and so again the index shouldn&amp;rsquo;t have any questions in it.</source>
          <target state="translated">在 &lt;code&gt;test_future_question&lt;/code&gt; 中，我们将来创建一个带有 &lt;code&gt;pub_date&lt;/code&gt; 的问题。每种测试方法都会重置数据库，因此第一个问题不再存在，因此索引中也不应再有任何问题。</target>
        </trans-unit>
        <trans-unit id="5f9cbf79cc52467baff9c100eb8928946f93b121" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;test_past_question&lt;/code&gt;, we create a question and verify that it appears in the list.</source>
          <target state="translated">在 &lt;code&gt;test_past_question&lt;/code&gt; 中，我们创建一个问题并验证它是否出现在列表中。</target>
        </trans-unit>
        <trans-unit id="1ca0c441f71f0c9c390db046d94cf2f81905b41d" translate="yes" xml:space="preserve">
          <source>In Django 1.5 and earlier, Django did a &lt;code&gt;SELECT&lt;/code&gt; when the primary key attribute was set. If the &lt;code&gt;SELECT&lt;/code&gt; found a row, then Django did an &lt;code&gt;UPDATE&lt;/code&gt;, otherwise it did an &lt;code&gt;INSERT&lt;/code&gt;. The old algorithm results in one more query in the &lt;code&gt;UPDATE&lt;/code&gt; case. There are some rare cases where the database doesn&amp;rsquo;t report that a row was updated even if the database contains a row for the object&amp;rsquo;s primary key value. An example is the PostgreSQL &lt;code&gt;ON UPDATE&lt;/code&gt; trigger which returns &lt;code&gt;NULL&lt;/code&gt;. In such cases it is possible to revert to the old algorithm by setting the &lt;a href=&quot;options#django.db.models.Options.select_on_save&quot;&gt;&lt;code&gt;select_on_save&lt;/code&gt;&lt;/a&gt; option to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">在Django 1.5及更早版本中，设置主键属性时Django进行了 &lt;code&gt;SELECT&lt;/code&gt; 。如果 &lt;code&gt;SELECT&lt;/code&gt; 找到一行，则Django执行 &lt;code&gt;UPDATE&lt;/code&gt; ，否则 &lt;code&gt;INSERT&lt;/code&gt; 。在 &lt;code&gt;UPDATE&lt;/code&gt; 情况下，旧算法会导致另外一个查询。在极少数情况下，即使数据库包含对象主键值的行，数据库也不会报告行已更新。一个示例是PostgreSQL &lt;code&gt;ON UPDATE&lt;/code&gt; 触发器，该触发器返回 &lt;code&gt;NULL&lt;/code&gt; 。在这种情况下，可以通过将&lt;a href=&quot;options#django.db.models.Options.select_on_save&quot;&gt; &lt;code&gt;select_on_save&lt;/code&gt; &lt;/a&gt;选项设置为 &lt;code&gt;True&lt;/code&gt; 来恢复到旧算法。</target>
        </trans-unit>
        <trans-unit id="7e54c507b0c09f4f3df149d0a652096ad567f2ff" translate="yes" xml:space="preserve">
          <source>In Django, web pages and other content are delivered by views. Each view is represented by a Python function (or method, in the case of class-based views). Django will choose a view by examining the URL that&amp;rsquo;s requested (to be precise, the part of the URL after the domain name).</source>
          <target state="translated">在Django中，网页和其他内容是通过视图传递的。每个视图均由Python函数（或方法（对于基于类的视图而言））表示。 Django将通过检查所请求的URL（准确地说，是域名之后的URL部分）来选择视图。</target>
        </trans-unit>
        <trans-unit id="71d28781461f30c2ecb2b20559c2484c3f2780b6" translate="yes" xml:space="preserve">
          <source>In English, that means start with any non-&lt;code&gt;'defaults'&lt;/code&gt; keyword argument that doesn&amp;rsquo;t contain a double underscore (which would indicate a non-exact lookup). Then add the contents of &lt;code&gt;defaults&lt;/code&gt;, overriding any keys if necessary, and use the result as the keyword arguments to the model class. If there are any callables in &lt;code&gt;defaults&lt;/code&gt;, evaluate them. As hinted at above, this is a simplification of the algorithm that is used, but it contains all the pertinent details. The internal implementation has some more error-checking than this and handles some extra edge-conditions; if you&amp;rsquo;re interested, read the code.</source>
          <target state="translated">用英语来说，这意味着从任何不包含双下划线（表示未精确查找）的非 &lt;code&gt;'defaults'&lt;/code&gt; 关键字参数开始。然后添加 &lt;code&gt;defaults&lt;/code&gt; 的内容，必要时覆盖所有键，并将结果用作模型类的关键字参数。如果 &lt;code&gt;defaults&lt;/code&gt; 有任何可调用对象，请对其进行评估。正如上面所暗示的，这是所使用算法的简化，但是它包含所有相关细节。内部实现比此实现的错误检查更多，并且可以处理一些额外的边缘条件。如果您有兴趣，请阅读代码。</target>
        </trans-unit>
        <trans-unit id="2325b2ee62df43500f1c00235b487a802857009c" translate="yes" xml:space="preserve">
          <source>In HTML, a form is a collection of elements inside &lt;code&gt;&amp;lt;form&amp;gt;...&amp;lt;/form&amp;gt;&lt;/code&gt; that allow a visitor to do things like enter text, select options, manipulate objects or controls, and so on, and then send that information back to the server.</source>
          <target state="translated">在HTML中，表单是 &lt;code&gt;&amp;lt;form&amp;gt;...&amp;lt;/form&amp;gt;&lt;/code&gt; 中的元素的集合，允许访问者执行诸如输入文本，选择选项，操作对象或控件等操作，然后将信息发送回去。到服务器。</target>
        </trans-unit>
        <trans-unit id="530abed4adee655c3e3355fa9c58c011c506ea41" translate="yes" xml:space="preserve">
          <source>In MySQL, a database table&amp;rsquo;s &amp;ldquo;collation&amp;rdquo; setting determines whether &lt;code&gt;exact&lt;/code&gt; comparisons are case-sensitive. This is a database setting, &lt;em&gt;not&lt;/em&gt; a Django setting. It&amp;rsquo;s possible to configure your MySQL tables to use case-sensitive comparisons, but some trade-offs are involved. For more information about this, see the &lt;a href=&quot;../databases#mysql-collation&quot;&gt;collation section&lt;/a&gt; in the &lt;a href=&quot;../databases&quot;&gt;databases&lt;/a&gt; documentation.</source>
          <target state="translated">在MySQL中，数据库表的&amp;ldquo;排序规则&amp;rdquo;设置确定 &lt;code&gt;exact&lt;/code&gt; 比较是否区分大小写。这是一个数据库设置，&lt;em&gt;而不是&lt;/em&gt; Django设置。可以将MySQL表配置为使用区分大小写的比较，但是需要权衡取舍。有关更多信息，请参阅&lt;a href=&quot;../databases#mysql-collation&quot;&gt;核对部分&lt;/a&gt;中&lt;a href=&quot;../databases&quot;&gt;的数据库&lt;/a&gt;文件。</target>
        </trans-unit>
        <trans-unit id="15bb2b94418927da4ddbebe62ad941621709c6f9" translate="yes" xml:space="preserve">
          <source>In MySQL, a database table&amp;rsquo;s &lt;a href=&quot;../databases#mysql-collation&quot;&gt;collation&lt;/a&gt; determines whether string comparisons (such as the &lt;code&gt;expression&lt;/code&gt; and &lt;code&gt;substring&lt;/code&gt; of this function) are case-sensitive. Comparisons are case-insensitive by default.</source>
          <target state="translated">在MySQL中，数据库表的&lt;a href=&quot;../databases#mysql-collation&quot;&gt;排序规则&lt;/a&gt;确定字符串比较（例如此函数的 &lt;code&gt;expression&lt;/code&gt; 和 &lt;code&gt;substring&lt;/code&gt; ）是否区分大小写。默认情况下，比较不区分大小写。</target>
        </trans-unit>
        <trans-unit id="8421ba54de371dd641a53fee1d33a332c1c91eef" translate="yes" xml:space="preserve">
          <source>In PostGIS, &lt;code&gt;ST_Distance_Sphere&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; limit the geometry types geographic distance queries are performed with. &lt;a href=&quot;#fndistsphere15&quot; id=&quot;id7&quot;&gt;[3]&lt;/a&gt; However, these queries may take a long time, as great-circle distances must be calculated on the fly for &lt;em&gt;every&lt;/em&gt; row in the query. This is because the spatial index on traditional geometry fields cannot be used.</source>
          <target state="translated">在PostGIS的， &lt;code&gt;ST_Distance_Sphere&lt;/code&gt; 并&lt;em&gt;没有&lt;/em&gt;限制的几何形状类型的地理距离的查询与执行。&lt;a href=&quot;#fndistsphere15&quot; id=&quot;id7&quot;&gt;[3]&lt;/a&gt;但是，这些查询可能要花费很长时间，因为必须为查询中的&lt;em&gt;每一&lt;/em&gt;行动态计算大圆距离。这是因为无法使用传统几何字段上的空间索引。</target>
        </trans-unit>
        <trans-unit id="715bef95523b40746c6e2c01e2e5141dd1cef9e3" translate="yes" xml:space="preserve">
          <source>In Python code: Using the &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">在Python代码中：使用&lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="bd51507af923505247bc61c0fb892385469fd543" translate="yes" xml:space="preserve">
          <source>In Python regular expressions, the syntax for named regular expression groups is &lt;code&gt;(?P&amp;lt;name&amp;gt;pattern)&lt;/code&gt;, where &lt;code&gt;name&lt;/code&gt; is the name of the group and &lt;code&gt;pattern&lt;/code&gt; is some pattern to match.</source>
          <target state="translated">在Python正则表达式中，命名正则表达式组的语法为 &lt;code&gt;(?P&amp;lt;name&amp;gt;pattern)&lt;/code&gt; ，其中 &lt;code&gt;name&lt;/code&gt; 是组的名称， &lt;code&gt;pattern&lt;/code&gt; 是要匹配的某种模式。</target>
        </trans-unit>
        <trans-unit id="ea7465a7cc3dd82a2d9fd7afc703bdeb0a931d30" translate="yes" xml:space="preserve">
          <source>In Python, deprecation warnings are silenced by default. You must turn them on using the &lt;code&gt;-Wa&lt;/code&gt; Python command line option or the &lt;a href=&quot;https://docs.python.org/3/using/cmdline.html#envvar-PYTHONWARNINGS&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;PYTHONWARNINGS&lt;/code&gt;&lt;/a&gt; environment variable. For example, to show warnings while running tests:</source>
          <target state="translated">在Python中，默认情况下，弃用警告会静音。您必须使用 &lt;code&gt;-Wa&lt;/code&gt; Python命令行选项或&lt;a href=&quot;https://docs.python.org/3/using/cmdline.html#envvar-PYTHONWARNINGS&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;PYTHONWARNINGS&lt;/code&gt; &lt;/a&gt;环境变量来打开它们。例如，要在运行测试时显示警告：</target>
        </trans-unit>
        <trans-unit id="1b9dd68d5fb0091a5354cd74f43e44ab9d2220be" translate="yes" xml:space="preserve">
          <source>In SQL terms, that evaluates to:</source>
          <target state="translated">用SQL术语来说,它的值是:</target>
        </trans-unit>
        <trans-unit id="b5219e196842cd49964f7f565faa02caa768e6fc" translate="yes" xml:space="preserve">
          <source>In a Django project where the &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting defines a &lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt; engine, it&amp;rsquo;s possible to instantiate a &lt;a href=&quot;#django.template.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; directly. If more than one &lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt; engine is defined, the first one will be used.</source>
          <target state="translated">在&lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;设置定义&lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;DjangoTemplates&lt;/code&gt; &lt;/a&gt;引擎的Django项目中，可以直接实例化&lt;a href=&quot;#django.template.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt;。如果定义了多个&lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;DjangoTemplates&lt;/code&gt; &lt;/a&gt;引擎，则将使用第一个。</target>
        </trans-unit>
        <trans-unit id="78dd68fff46c7f31d6d76f4f0ceba6a02a64543d" translate="yes" xml:space="preserve">
          <source>In a class-based view, this would become:</source>
          <target state="translated">在基于类的观点中,这将成为。</target>
        </trans-unit>
        <trans-unit id="5a9a78ce7cfa61e948398641be09cee26a9431e5" translate="yes" xml:space="preserve">
          <source>In a given iterable; often a list, tuple, or queryset. It&amp;rsquo;s not a common use case, but strings (being iterables) are accepted.</source>
          <target state="translated">在给定的迭代中 通常是列表，元组或查询集。这不是常见的用例，但是可以接受字符串（可迭代）。</target>
        </trans-unit>
        <trans-unit id="936002e8c54e8cd2138c3c4e13a6b879a99a297c" translate="yes" xml:space="preserve">
          <source>In a hurry? Here&amp;rsquo;s how to do common aggregate queries, assuming the models above:</source>
          <target state="translated">匆忙？假设采用上述模型，以下是进行常见聚合查询的方法：</target>
        </trans-unit>
        <trans-unit id="95d5174861e60b5fbde4b2d21a30e9578bd91660" translate="yes" xml:space="preserve">
          <source>In a newly created &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;, the cache is empty. The first time a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; is evaluated &amp;ndash; and, hence, a database query happens &amp;ndash; Django saves the query results in the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s cache and returns the results that have been explicitly requested (e.g., the next element, if the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; is being iterated over). Subsequent evaluations of the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; reuse the cached results.</source>
          <target state="translated">在新创建的&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; 中&lt;/a&gt;，缓存为空。首次评估&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;并因此进行数据库查询时，Django将查询结果保存在&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;的缓存中，并返回已明确请求的结果（例如，下一个元素（如果正在迭代&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;）过度）。&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; 的&lt;/a&gt;后续评估将重用缓存的结果。</target>
        </trans-unit>
        <trans-unit id="66bad3b414c450ecef328dcf5b4fecbf454e6176" translate="yes" xml:space="preserve">
          <source>In a nutshell, you will need to subclass the widget and either &lt;a href=&quot;../../topics/forms/media#assets-as-a-static-definition&quot;&gt;define a &amp;ldquo;Media&amp;rdquo; inner class&lt;/a&gt; or &lt;a href=&quot;../../topics/forms/media#dynamic-property&quot;&gt;create a &amp;ldquo;media&amp;rdquo; property&lt;/a&gt;.</source>
          <target state="translated">简而言之，您将需要对小部件进行子类化，或者&lt;a href=&quot;../../topics/forms/media#assets-as-a-static-definition&quot;&gt;定义&amp;ldquo; Media&amp;rdquo;内部类&lt;/a&gt;或&lt;a href=&quot;../../topics/forms/media#dynamic-property&quot;&gt;创建&amp;ldquo; media&amp;rdquo;属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1142528d124b30027cb2863e674b995be99f903d" translate="yes" xml:space="preserve">
          <source>In a request to &lt;code&gt;https://www.example.com/myapp/?page=3&lt;/code&gt;, the URLconf will look for &lt;code&gt;myapp/&lt;/code&gt;.</source>
          <target state="translated">在对 &lt;code&gt;https://www.example.com/myapp/?page=3&lt;/code&gt; 的请求中，URLconf将寻找 &lt;code&gt;myapp/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c6e077cc1b0e75309e606ecc2180a3df1935d34" translate="yes" xml:space="preserve">
          <source>In a similar way that a model class&amp;rsquo;s fields map to database fields, a form class&amp;rsquo;s fields map to HTML form &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements. (A &lt;a href=&quot;modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt; maps a model class&amp;rsquo;s fields to HTML form &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements via a &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt;; this is what the Django admin is based upon.)</source>
          <target state="translated">以类似于模型类的字段映射到数据库字段的方式，表单类的字段映射到HTML表单 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 元素。（A &lt;a href=&quot;modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt;映射模型类的字段，以HTML形式 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 经由元件&lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt; ;这是什么Django管理是基于）。</target>
        </trans-unit>
        <trans-unit id="9e280d0af372eabe0c94458ef4c152f0bbcae80b" translate="yes" xml:space="preserve">
          <source>In a way similar to &lt;a href=&quot;queries#lookups-that-span-relationships&quot;&gt;Lookups that span relationships&lt;/a&gt;, aggregations and annotations on fields of models or models that are related to the one you are querying can include traversing &amp;ldquo;reverse&amp;rdquo; relationships. The lowercase name of related models and double-underscores are used here too.</source>
          <target state="translated">以类似于&lt;a href=&quot;queries#lookups-that-span-relationships&quot;&gt;跨越关系的查找&lt;/a&gt;的方式，在与要查询的模型或模型相关的模型或模型字段上进行聚合和注释可以包括遍历&amp;ldquo;反向&amp;rdquo;关系。此处也使用相关模型的小写名称和双下划线。</target>
        </trans-unit>
        <trans-unit id="ab27628513f607e825e71ce210049162b75905a1" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.db.models.Model.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt;, a model object might have some of the following methods:</source>
          <target state="translated">除了&lt;a href=&quot;#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#django.db.models.Model.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; 之外&lt;/a&gt;，模型对象还可以具有以下某些方法：</target>
        </trans-unit>
        <trans-unit id="751f7712ef19a124de333a44cc737e7ace3bfe24" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt; style list of tuples, &lt;code&gt;{% get_language_info_list %}&lt;/code&gt; supports lists of language codes. If you do this in your view:</source>
          <target state="translated">除了元组的&lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt; &lt;code&gt;LANGUAGES&lt;/code&gt; &lt;/a&gt;样式列表之外， &lt;code&gt;{% get_language_info_list %}&lt;/code&gt; 支持语言代码列表。如果您认为这样：</target>
        </trans-unit>
        <trans-unit id="acfdeca1bfa2723747c23831e1f6c72abb0244fc" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;push()&lt;/code&gt; and &lt;code&gt;pop()&lt;/code&gt;, the &lt;code&gt;Context&lt;/code&gt; object also defines an &lt;code&gt;update()&lt;/code&gt; method. This works like &lt;code&gt;push()&lt;/code&gt; but takes a dictionary as an argument and pushes that dictionary onto the stack instead of an empty one.</source>
          <target state="translated">除了 &lt;code&gt;push()&lt;/code&gt; 和 &lt;code&gt;pop()&lt;/code&gt; 之外， &lt;code&gt;Context&lt;/code&gt; 对象还定义了 &lt;code&gt;update()&lt;/code&gt; 方法。这类似于 &lt;code&gt;push()&lt;/code&gt; ,但将字典作为参数并将该字典推入堆栈，而不是空字典。</target>
        </trans-unit>
        <trans-unit id="d08bf980f90aa9d354ce9fe22f93944096aa983d" translate="yes" xml:space="preserve">
          <source>In addition to a DB API driver, Django needs an adapter to access the database drivers from its ORM. Django provides an adapter for mysqlclient while MySQL Connector/Python includes &lt;a href=&quot;https://dev.mysql.com/doc/connector-python/en/connector-python-django-backend.html&quot;&gt;its own&lt;/a&gt;.</source>
          <target state="translated">除了DB API驱动程序外，Django还需要一个适配器来从其ORM访问数据库驱动程序。Django为mysqlclient提供了一个适配器，而MySQL Connector / Python包含&lt;a href=&quot;https://dev.mysql.com/doc/connector-python/en/connector-python-django-backend.html&quot;&gt;了自己的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4446e8a7eb646fabe3c820b8fc45118f5b558932" translate="yes" xml:space="preserve">
          <source>In addition to a database backend, you&amp;rsquo;ll need to make sure your Python database bindings are installed.</source>
          <target state="translated">除了数据库后端，您还需要确保已安装Python数据库绑定。</target>
        </trans-unit>
        <trans-unit id="c94ce8da528fb522992156b232a5ab6d1b86573f" translate="yes" xml:space="preserve">
          <source>In addition to being able to add custom command line options, all &lt;a href=&quot;../ref/django-admin&quot;&gt;management commands&lt;/a&gt; can accept some default options such as &lt;a href=&quot;../ref/django-admin#cmdoption-verbosity&quot;&gt;&lt;code&gt;--verbosity&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/django-admin#cmdoption-traceback&quot;&gt;&lt;code&gt;--traceback&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">除了能够添加自定义命令行选项之外，所有&lt;a href=&quot;../ref/django-admin&quot;&gt;管理命令&lt;/a&gt;都可以接受一些默认选项，例如&lt;a href=&quot;../ref/django-admin#cmdoption-verbosity&quot;&gt; &lt;code&gt;--verbosity&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/django-admin#cmdoption-traceback&quot;&gt; &lt;code&gt;--traceback&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f180ecdd9c92f470286413ff38ed940f9bbd38e7" translate="yes" xml:space="preserve">
          <source>In addition to creating the new model, the &lt;code&gt;from_db()&lt;/code&gt; method must set the &lt;code&gt;adding&lt;/code&gt; and &lt;code&gt;db&lt;/code&gt; flags in the new instance&amp;rsquo;s &lt;code&gt;_state&lt;/code&gt; attribute.</source>
          <target state="translated">除了创建新模式， &lt;code&gt;from_db()&lt;/code&gt; 方法必须设置 &lt;code&gt;adding&lt;/code&gt; 和 &lt;code&gt;db&lt;/code&gt; 的新实例的标志 &lt;code&gt;_state&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="aa82b6442e717c223b5e675d2e5b3acbf200def3" translate="yes" xml:space="preserve">
          <source>In addition to methods provided by the &lt;a href=&quot;../syndication#django.contrib.syndication.views.Feed&quot;&gt;&lt;code&gt;django.contrib.syndication.views.Feed&lt;/code&gt;&lt;/a&gt; base class, GeoDjango&amp;rsquo;s &lt;code&gt;Feed&lt;/code&gt; class provides the following overrides. Note that these overrides may be done in multiple ways:</source>
          <target state="translated">除了&lt;a href=&quot;../syndication#django.contrib.syndication.views.Feed&quot;&gt; &lt;code&gt;django.contrib.syndication.views.Feed&lt;/code&gt; &lt;/a&gt;基类提供的方法外，GeoDjango的 &lt;code&gt;Feed&lt;/code&gt; 类还提供以下替代。请注意，这些替代可以通过多种方式完成：</target>
        </trans-unit>
        <trans-unit id="e71cd07f4ac2e62e0ecd7170c96df0e8a130dfc7" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; methods defined in &amp;ldquo;Retrieving objects&amp;rdquo; above, the &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; has additional methods used to handle the set of related objects. A synopsis of each is below, and complete details can be found in the &lt;a href=&quot;../../ref/models/relations&quot;&gt;related objects reference&lt;/a&gt;.</source>
          <target state="translated">除了上面&amp;ldquo;检索对象&amp;rdquo;中定义的&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;方法外，&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt;还具有用于处理相关对象集的其他方法。下面是每个内容的摘要，可以在&lt;a href=&quot;../../ref/models/relations&quot;&gt;相关对象参考中&lt;/a&gt;找到完整的详细信息。</target>
        </trans-unit>
        <trans-unit id="a87715969be2e401bffbf721c0b6e38e1c930533" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;'widget'&lt;/code&gt; key described in &lt;a href=&quot;#django.forms.Widget.get_context&quot;&gt;&lt;code&gt;Widget.get_context()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;MultiValueWidget&lt;/code&gt; adds a &lt;code&gt;widget['subwidgets']&lt;/code&gt; key.</source>
          <target state="translated">除了&lt;a href=&quot;#django.forms.Widget.get_context&quot;&gt; &lt;code&gt;Widget.get_context()&lt;/code&gt; 中&lt;/a&gt;描述的 &lt;code&gt;'widget'&lt;/code&gt; 键外， &lt;code&gt;MultiValueWidget&lt;/code&gt; 还添加了一个 &lt;code&gt;widget['subwidgets']&lt;/code&gt; 键。</target>
        </trans-unit>
        <trans-unit id="ff5784549c9c0063d76c5ca8754372f0f0124d65" translate="yes" xml:space="preserve">
          <source>In addition to the API inherited from &lt;a href=&quot;../files/file#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; such as &lt;code&gt;read()&lt;/code&gt; and &lt;code&gt;write()&lt;/code&gt;, &lt;a href=&quot;#django.db.models.fields.files.FieldFile&quot;&gt;&lt;code&gt;FieldFile&lt;/code&gt;&lt;/a&gt; includes several methods that can be used to interact with the underlying file:</source>
          <target state="translated">除了从&lt;a href=&quot;../files/file#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;继承的API &lt;code&gt;read()&lt;/code&gt; 例如read（）和 &lt;code&gt;write()&lt;/code&gt; )之外，&lt;a href=&quot;#django.db.models.fields.files.FieldFile&quot;&gt; &lt;code&gt;FieldFile&lt;/code&gt; &lt;/a&gt;还包括几种可用于与基础文件进行交互的方法：</target>
        </trans-unit>
        <trans-unit id="a10925da11c09a74be0bd8f4c1b6704fc5cb3520" translate="yes" xml:space="preserve">
          <source>In addition to the ability to query by key, there are a number of custom lookups available for &lt;code&gt;HStoreField&lt;/code&gt;.</source>
          <target state="translated">除了可以通过键查询之外，还有一些可用于 &lt;code&gt;HStoreField&lt;/code&gt; 的自定义查找。</target>
        </trans-unit>
        <trans-unit id="d69ed98b07f3efe4289e6ef8ac1e34397081717a" translate="yes" xml:space="preserve">
          <source>In addition to the above details, there are a few guidelines which can greatly improve the efficiency and readability of the field&amp;rsquo;s code.</source>
          <target state="translated">除上述详细信息外，还有一些准则可以极大地提高该字段代码的效率和可读性。</target>
        </trans-unit>
        <trans-unit id="8c64e028bd2cea8a3b5c6e844c13dd01044496cd" translate="yes" xml:space="preserve">
          <source>In addition to the above methods, fields that deal with files have a few other special requirements which must be taken into account. The majority of the mechanics provided by &lt;code&gt;FileField&lt;/code&gt;, such as controlling database storage and retrieval, can remain unchanged, leaving subclasses to deal with the challenge of supporting a particular type of file.</source>
          <target state="translated">除上述方法外，处理文件的字段还有一些其他特殊要求，必须予以考虑。 &lt;code&gt;FileField&lt;/code&gt; 提供的大多数机制（例如控制数据库的存储和检索）可以保持不变，而保留子类来应对支持特定类型文件的挑战。</target>
        </trans-unit>
        <trans-unit id="2e1bc480fcebe4ce8116912b2190e867237ad26c" translate="yes" xml:space="preserve">
          <source>In addition to the context provided by &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin&quot;&gt;&lt;code&gt;MultipleObjectMixin&lt;/code&gt;&lt;/a&gt; (via &lt;a href=&quot;mixins-date-based#django.views.generic.dates.BaseDateListView&quot;&gt;&lt;code&gt;BaseDateListView&lt;/code&gt;&lt;/a&gt;), the template&amp;rsquo;s context will be:</source>
          <target state="translated">除了&lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin&quot;&gt; &lt;code&gt;MultipleObjectMixin&lt;/code&gt; &lt;/a&gt;（通过&lt;a href=&quot;mixins-date-based#django.views.generic.dates.BaseDateListView&quot;&gt; &lt;code&gt;BaseDateListView&lt;/code&gt; &lt;/a&gt;）提供的上下文之外，模板的上下文还将是：</target>
        </trans-unit>
        <trans-unit id="78146a6623f617f370bdbb7922a1a46c904a4d3e" translate="yes" xml:space="preserve">
          <source>In addition to the context provided by &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin&quot;&gt;&lt;code&gt;django.views.generic.list.MultipleObjectMixin&lt;/code&gt;&lt;/a&gt; (via &lt;a href=&quot;mixins-date-based#django.views.generic.dates.BaseDateListView&quot;&gt;&lt;code&gt;django.views.generic.dates.BaseDateListView&lt;/code&gt;&lt;/a&gt;), the template&amp;rsquo;s context will be:</source>
          <target state="translated">除了&lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin&quot;&gt; &lt;code&gt;django.views.generic.list.MultipleObjectMixin&lt;/code&gt; &lt;/a&gt;提供的上下文（通过&lt;a href=&quot;mixins-date-based#django.views.generic.dates.BaseDateListView&quot;&gt; &lt;code&gt;django.views.generic.dates.BaseDateListView&lt;/code&gt; 提供&lt;/a&gt;）之外，模板的上下文还将是：</target>
        </trans-unit>
        <trans-unit id="9f847ce1f109048a1fb1aa3ac7bebe988e89f275" translate="yes" xml:space="preserve">
          <source>In addition to the following, all extracts for &lt;code&gt;DateField&lt;/code&gt; listed above may also be used on &lt;code&gt;DateTimeField&lt;/code&gt;s .</source>
          <target state="translated">除以下内容外，上面列出的 &lt;code&gt;DateField&lt;/code&gt; 的所有摘录也可以在 &lt;code&gt;DateTimeField&lt;/code&gt; 上使用。</target>
        </trans-unit>
        <trans-unit id="cc163a8af460b22769a0a66d0e1689102a23ab92" translate="yes" xml:space="preserve">
          <source>In addition to the listed methods, &lt;a href=&quot;#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; exposes the following attributes and methods of its &lt;code&gt;file&lt;/code&gt; object: &lt;code&gt;encoding&lt;/code&gt;, &lt;code&gt;fileno&lt;/code&gt;, &lt;code&gt;flush&lt;/code&gt;, &lt;code&gt;isatty&lt;/code&gt;, &lt;code&gt;newlines&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;readinto&lt;/code&gt;, &lt;code&gt;readline&lt;/code&gt;, &lt;code&gt;readlines&lt;/code&gt;, &lt;code&gt;seek&lt;/code&gt;, &lt;code&gt;tell&lt;/code&gt;, &lt;code&gt;truncate&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;writelines&lt;/code&gt;, &lt;code&gt;readable()&lt;/code&gt;, &lt;code&gt;writable()&lt;/code&gt;, and &lt;code&gt;seekable()&lt;/code&gt;.</source>
          <target state="translated">除了列出的方法外，&lt;a href=&quot;#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; 还&lt;/a&gt;公开了其 &lt;code&gt;file&lt;/code&gt; 对象的以下属性和方法： &lt;code&gt;encoding&lt;/code&gt; ， &lt;code&gt;fileno&lt;/code&gt; ， &lt;code&gt;flush&lt;/code&gt; ， &lt;code&gt;isatty&lt;/code&gt; ， &lt;code&gt;newlines&lt;/code&gt; ， &lt;code&gt;read&lt;/code&gt; ， &lt;code&gt;readinto&lt;/code&gt; ， &lt;code&gt;readline&lt;/code&gt; ， &lt;code&gt;readlines&lt;/code&gt; ， &lt;code&gt;seek&lt;/code&gt; ， &lt;code&gt;tell&lt;/code&gt; ， &lt;code&gt;truncate&lt;/code&gt; ， &lt;code&gt;write&lt;/code&gt; ， &lt;code&gt;writelines&lt;/code&gt; ，read &lt;code&gt;readable()&lt;/code&gt; ， &lt;code&gt;writable()&lt;/code&gt; 和 &lt;code&gt;seekable()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d138f7de7bbc3af07a0fb71bb0320df5a1bd9111" translate="yes" xml:space="preserve">
          <source>In addition to the officially supported databases, there are &lt;a href=&quot;../ref/databases#third-party-notes&quot;&gt;backends provided by 3rd parties&lt;/a&gt; that allow you to use other databases with Django.</source>
          <target state="translated">除了官方支持的数据库外，还有&lt;a href=&quot;../ref/databases#third-party-notes&quot;&gt;第三方提供的后端&lt;/a&gt;，这些后端使您可以将其他数据库与Django一起使用。</target>
        </trans-unit>
        <trans-unit id="38ffcb3817bbbd2551f77d39d51caba8b51562b9" translate="yes" xml:space="preserve">
          <source>In addition to the officially supported databases, there are backends provided by 3rd parties that allow you to use other databases with Django:</source>
          <target state="translated">除了官方支持的数据库,还有一些第三方提供的后端,允许你在Django中使用其他数据库。</target>
        </trans-unit>
        <trans-unit id="1db79a28d08359b046f49991e77de295d5e703c7" translate="yes" xml:space="preserve">
          <source>In addition to the optional arguments of its parent &lt;a href=&quot;#django.core.validators.RegexValidator&quot;&gt;&lt;code&gt;RegexValidator&lt;/code&gt;&lt;/a&gt; class, &lt;code&gt;URLValidator&lt;/code&gt; accepts an extra optional attribute:</source>
          <target state="translated">除了其父&lt;a href=&quot;#django.core.validators.RegexValidator&quot;&gt; &lt;code&gt;RegexValidator&lt;/code&gt; &lt;/a&gt;类的可选参数之外， &lt;code&gt;URLValidator&lt;/code&gt; 还接受一个额外的可选属性：</target>
        </trans-unit>
        <trans-unit id="0a4a0c3d6f62b599c6443f955946a232e25c4126" translate="yes" xml:space="preserve">
          <source>In addition to the options of the &lt;code&gt;json&lt;/code&gt; serializer, the &lt;code&gt;geojson&lt;/code&gt; serializer accepts the following additional option when it is called by &lt;code&gt;serializers.serialize()&lt;/code&gt;:</source>
          <target state="translated">除了 &lt;code&gt;json&lt;/code&gt; 序列化程序的选项外，当由 &lt;code&gt;serializers.serialize()&lt;/code&gt; 调用时， &lt;code&gt;geojson&lt;/code&gt; 序列化程序还接受以下附加选项：</target>
        </trans-unit>
        <trans-unit id="75907cde4d6071df1af2b10556dffed4d3fefdf2" translate="yes" xml:space="preserve">
          <source>In addition to the regular &lt;a href=&quot;../../forms/fields#core-field-arguments&quot;&gt;form field arguments&lt;/a&gt;, GeoDjango form fields take the following optional arguments.</source>
          <target state="translated">除了常规&lt;a href=&quot;../../forms/fields#core-field-arguments&quot;&gt;表单字段参数外&lt;/a&gt;，GeoDjango表单字段还包含以下可选参数。</target>
        </trans-unit>
        <trans-unit id="fab30d8fa172502cea3f7aebdb228bfeb4d6d2f0" translate="yes" xml:space="preserve">
          <source>In addition to the regular &lt;a href=&quot;../../models/fields#common-model-field-options&quot;&gt;Field options&lt;/a&gt; available for Django model fields, spatial fields have the following additional options. All are optional.</source>
          <target state="translated">除了适用于Django模型字段的常规&amp;ldquo; &lt;a href=&quot;../../models/fields#common-model-field-options&quot;&gt;字段&amp;rdquo;选项外&lt;/a&gt;，空间字段还具有以下其他选项。所有都是可选的。</target>
        </trans-unit>
        <trans-unit id="bcac2853c813ab81bdb91abe9b8fe01ccb15cb5c" translate="yes" xml:space="preserve">
          <source>In addition to the special attributes that are available for &lt;a href=&quot;#django.db.models.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;#django.db.models.ImageField&quot;&gt;&lt;code&gt;ImageField&lt;/code&gt;&lt;/a&gt; also has &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; attributes.</source>
          <target state="translated">除了可用于特殊属性&lt;a href=&quot;#django.db.models.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; &lt;/a&gt;，一个&lt;a href=&quot;#django.db.models.ImageField&quot;&gt; &lt;code&gt;ImageField&lt;/code&gt; 的&lt;/a&gt;也有 &lt;code&gt;height&lt;/code&gt; 和 &lt;code&gt;width&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="14e5e76a34a70eeb072f8cbe5905434d81e71e1b" translate="yes" xml:space="preserve">
          <source>In addition to these configuration steps, you&amp;rsquo;ll also need to actually serve the static files.</source>
          <target state="translated">除了这些配置步骤之外，您还需要实际提供静态文件。</target>
        </trans-unit>
        <trans-unit id="c2c243a6eca738bdaa3a92ec6f2b8a90ad5218f3" translate="yes" xml:space="preserve">
          <source>In addition to these, &lt;a href=&quot;#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt; always enables &lt;code&gt;'django.template.context_processors.csrf'&lt;/code&gt;. This is a security related context processor required by the admin and other contrib apps, and, in case of accidental misconfiguration, it is deliberately hardcoded in and cannot be turned off in the &lt;code&gt;context_processors&lt;/code&gt; option.</source>
          <target state="translated">除此之外，&lt;a href=&quot;#django.template.RequestContext&quot;&gt; &lt;code&gt;RequestContext&lt;/code&gt; &lt;/a&gt;始终启用 &lt;code&gt;'django.template.context_processors.csrf'&lt;/code&gt; 。这是管理员和其他contrib应用程序所需的与安全性相关的上下文处理器，并且在意外配置错误的情况下，会故意对其进行硬编码，并且无法在 &lt;code&gt;context_processors&lt;/code&gt; 选项中将其关闭。</target>
        </trans-unit>
        <trans-unit id="09d1558db313d92c5461aa77b23628bc5f54ef5a" translate="yes" xml:space="preserve">
          <source>In addition to web links, &lt;code&gt;urlize&lt;/code&gt; also converts email addresses into &lt;code&gt;mailto:&lt;/code&gt; links. If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;Send questions to foo@example.com&quot;&lt;/code&gt;, the output will be &lt;code&gt;&quot;Send questions to &amp;lt;a href=&quot;mailto:foo@example.com&quot;&amp;gt;foo@example.com&amp;lt;/a&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">除了Web链接之外， &lt;code&gt;urlize&lt;/code&gt; 还将电子邮件地址转换为 &lt;code&gt;mailto:&lt;/code&gt; 链接。如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;Send questions to foo@example.com&quot;&lt;/code&gt; ，则输出将是 &lt;code&gt;&quot;Send questions to &amp;lt;a href=&quot;mailto:foo@example.com&quot;&amp;gt;foo@example.com&amp;lt;/a&amp;gt;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb3cc5db265feffd76588b55bfe91ebe04db4bd8" translate="yes" xml:space="preserve">
          <source>In addition, &lt;code&gt;LineString&lt;/code&gt; objects may also be created by passing in a single sequence of coordinate or &lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">另外，也可以通过传递单个坐标或&lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt; &lt;code&gt;Point&lt;/code&gt; &lt;/a&gt;对象序列来创建 &lt;code&gt;LineString&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="092a2edd2b26995b6c73e6e9e9e504760cdc3b10" translate="yes" xml:space="preserve">
          <source>In addition, &lt;code&gt;QueryDict&lt;/code&gt; has the following methods:</source>
          <target state="translated">此外， &lt;code&gt;QueryDict&lt;/code&gt; 具有以下方法：</target>
        </trans-unit>
        <trans-unit id="003bc4accc874f1fef4668d4b87997f905b9b76e" translate="yes" xml:space="preserve">
          <source>In addition, &lt;code&gt;manage.py&lt;/code&gt; is automatically created in each Django project. It does the same thing as &lt;code&gt;django-admin&lt;/code&gt; but also sets the &lt;a href=&quot;../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt; environment variable so that it points to your project&amp;rsquo;s &lt;code&gt;settings.py&lt;/code&gt; file.</source>
          <target state="translated">此外， &lt;code&gt;manage.py&lt;/code&gt; 是在每个Django项目中自动创建的。它的作用与 &lt;code&gt;django-admin&lt;/code&gt; 相同，但它还会设置&lt;a href=&quot;../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt;环境变量，使其指向项目的 &lt;code&gt;settings.py&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="42da778e8ed7bdaf3955ad5f72d2ff5536335b45" translate="yes" xml:space="preserve">
          <source>In addition, &lt;code&gt;message/rfc822&lt;/code&gt; attachments will no longer be base64-encoded in violation of &lt;a href=&quot;https://tools.ietf.org/html/rfc2046.html#section-5.2.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2046#section-5.2.1&lt;/strong&gt;&lt;/a&gt;, which can cause issues with displaying the attachments in &lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=651197&quot;&gt;Evolution&lt;/a&gt; and &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=333880&quot;&gt;Thunderbird&lt;/a&gt;.</source>
          <target state="translated">此外，将不再对 &lt;code&gt;message/rfc822&lt;/code&gt; 附件进行base64编码，而违反&lt;a href=&quot;https://tools.ietf.org/html/rfc2046.html#section-5.2.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2046＃section-5.2.1&lt;/strong&gt;&lt;/a&gt;，这可能会导致在&lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=651197&quot;&gt;Evolution&lt;/a&gt;和&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=333880&quot;&gt;Thunderbird中&lt;/a&gt;显示附件的问题。</target>
        </trans-unit>
        <trans-unit id="8e4cb7c7a0731de3ea837edf11710dd02a514d0f" translate="yes" xml:space="preserve">
          <source>In addition, Django applies the following rule: if you set &lt;code&gt;editable=False&lt;/code&gt; on the model field, &lt;em&gt;any&lt;/em&gt; form created from the model via &lt;code&gt;ModelForm&lt;/code&gt; will not include that field.</source>
          <target state="translated">此外，Django应用以下规则：如果在model字段上设置 &lt;code&gt;editable=False&lt;/code&gt; ，则通过 &lt;code&gt;ModelForm&lt;/code&gt; 从模型创建的&lt;em&gt;任何&lt;/em&gt;表单都不会包含该字段。</target>
        </trans-unit>
        <trans-unit id="30a99ac2f20a9d7ce513beb52192fea90a5cd0c6" translate="yes" xml:space="preserve">
          <source>In addition, Django provides enumeration types that you can subclass to define choices in a concise way:</source>
          <target state="translated">此外,Django还提供了枚举类型,你可以通过子类来简洁地定义选择。</target>
        </trans-unit>
        <trans-unit id="c8a09597939bdcb71e0faa18c3b3a20ccef0e692" translate="yes" xml:space="preserve">
          <source>In addition, MySQL will fully rewrite tables for almost every schema operation and generally takes a time proportional to the number of rows in the table to add or remove columns. On slower hardware this can be worse than a minute per million rows - adding a few columns to a table with just a few million rows could lock your site up for over ten minutes.</source>
          <target state="translated">此外,MySQL几乎每一次模式操作都会完全重写表,一般来说,增加或删除列需要的时间与表的行数成正比。在速度较慢的硬件上,这可能比每百万行一分钟还要糟糕--在一个只有几百万行的表中添加几列,可能会让你的网站锁定十几分钟。</target>
        </trans-unit>
        <trans-unit id="80f1a60fae36c3742c0b6b4ed6f4684b7d6979d1" translate="yes" xml:space="preserve">
          <source>In addition, add the &lt;code&gt;DYLD_FALLBACK_LIBRARY_PATH&lt;/code&gt; setting so that the libraries can be found by Python:</source>
          <target state="translated">另外，添加 &lt;code&gt;DYLD_FALLBACK_LIBRARY_PATH&lt;/code&gt; 设置，以便Python可以找到这些库：</target>
        </trans-unit>
        <trans-unit id="0d00c3d27b51ce30fb9025d5d42429ee3fad5033" translate="yes" xml:space="preserve">
          <source>In addition, as JSON supports only string keys, note that using non-string keys in &lt;code&gt;request.session&lt;/code&gt; won&amp;rsquo;t work as expected:</source>
          <target state="translated">另外，由于JSON仅支持字符串键，因此请注意，在 &lt;code&gt;request.session&lt;/code&gt; 中使用非字符串键将无法正常工作：</target>
        </trans-unit>
        <trans-unit id="193e94f351cba3a0360a6e545faac2e59e822fc0" translate="yes" xml:space="preserve">
          <source>In addition, coordinates/components of the geometry may added or modified, just like a Python list:</source>
          <target state="translated">此外,几何体的坐标/组件可以添加或修改,就像Python列表一样。</target>
        </trans-unit>
        <trans-unit id="3ddf753e80872dd11269d2a3533531f2d9a256cc" translate="yes" xml:space="preserve">
          <source>In addition, each generated form field has attributes set as follows:</source>
          <target state="translated">此外,每个生成的表格字段的属性设置如下。</target>
        </trans-unit>
        <trans-unit id="e0d877515ca9c31768db2b55639e4f4d3d64d88a" translate="yes" xml:space="preserve">
          <source>In addition, for HTTPS requests, strict referer checking is done by &lt;code&gt;CsrfViewMiddleware&lt;/code&gt;. This means that even if a subdomain can set or modify cookies on your domain, it can&amp;rsquo;t force a user to post to your application since that request won&amp;rsquo;t come from your own exact domain.</source>
          <target state="translated">此外，对于HTTPS请求，由 &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; 进行严格的引用检查。这意味着，即使子域可以在您的域上设置或修改Cookie，也不能强迫用户将其发布到您的应用程序中，因为该请求不会来自您自己的确切域。</target>
        </trans-unit>
        <trans-unit id="609772e6e1f8a2aa06a07103e8048bef77e6acf0" translate="yes" xml:space="preserve">
          <source>In addition, if you are using the template system to output something other than HTML, there may be entirely separate characters and words which require escaping.</source>
          <target state="translated">此外,如果您使用模板系统来输出HTML以外的其他内容,可能会有完全独立的字符和单词需要转义。</target>
        </trans-unit>
        <trans-unit id="271507652d7f3c6c044a78d1ab9d1f40af16ab01" translate="yes" xml:space="preserve">
          <source>In addition, if your class provides local file storage, it must override the &lt;code&gt;path()&lt;/code&gt; method.</source>
          <target state="translated">另外，如果您的类提供本地文件存储，则它必须重写 &lt;code&gt;path()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="f41a663166406e5affa41f624b0f5ba10f8271ea" translate="yes" xml:space="preserve">
          <source>In addition, modify the &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting to include &lt;a href=&quot;../admin/index#module-django.contrib.admin&quot;&gt;&lt;code&gt;django.contrib.admin&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;index#module-django.contrib.gis&quot;&gt;&lt;code&gt;django.contrib.gis&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;world&lt;/code&gt; (your newly created application):</source>
          <target state="translated">另外，修改&lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置以包括&lt;a href=&quot;../admin/index#module-django.contrib.admin&quot;&gt; &lt;code&gt;django.contrib.admin&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;index#module-django.contrib.gis&quot;&gt; &lt;code&gt;django.contrib.gis&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;world&lt;/code&gt; （您新创建的应用程序）：</target>
        </trans-unit>
        <trans-unit id="e0cf7f24ea8838462019e7f2d8be131526d91e9c" translate="yes" xml:space="preserve">
          <source>In addition, only &lt;code&gt;LIMIT&lt;/code&gt;, &lt;code&gt;OFFSET&lt;/code&gt;, &lt;code&gt;COUNT(*)&lt;/code&gt;, &lt;code&gt;ORDER BY&lt;/code&gt;, and specifying columns (i.e. slicing, &lt;a href=&quot;#django.db.models.query.QuerySet.count&quot;&gt;&lt;code&gt;count()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#django.db.models.query.QuerySet.values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#django.db.models.query.QuerySet.values_list&quot;&gt;&lt;code&gt;values_list()&lt;/code&gt;&lt;/a&gt;) are allowed on the resulting &lt;code&gt;QuerySet&lt;/code&gt;. Further, databases place restrictions on what operations are allowed in the combined queries. For example, most databases don&amp;rsquo;t allow &lt;code&gt;LIMIT&lt;/code&gt; or &lt;code&gt;OFFSET&lt;/code&gt; in the combined queries.</source>
          <target state="translated">另外，在结果 &lt;code&gt;QuerySet&lt;/code&gt; 上仅允许 &lt;code&gt;LIMIT&lt;/code&gt; ， &lt;code&gt;OFFSET&lt;/code&gt; ， &lt;code&gt;COUNT(*)&lt;/code&gt; ， &lt;code&gt;ORDER BY&lt;/code&gt; 和指定列（即切片，&lt;a href=&quot;#django.db.models.query.QuerySet.count&quot;&gt; &lt;code&gt;count()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt; &lt;code&gt;order_by()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.db.models.query.QuerySet.values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;#django.db.models.query.QuerySet.values_list&quot;&gt; &lt;code&gt;values_list()&lt;/code&gt; &lt;/a&gt;）。此外，数据库对组合查询中允许的操作设置了限制。例如，大多数数据库在组合查询中不允许 &lt;code&gt;LIMIT&lt;/code&gt; 或 &lt;code&gt;OFFSET&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="073651aeeb0daff1ea4b8f8b97a8fcd077d19c9e" translate="yes" xml:space="preserve">
          <source>In addition, shapefiles also support attribute fields that may contain additional data. Here are the fields on the World Borders layer:</source>
          <target state="translated">此外,shapefiles还支持可能包含附加数据的属性字段。以下是世界边界图层上的字段。</target>
        </trans-unit>
        <trans-unit id="6182146b091f830549eb231420eb3ef3684d03ab" translate="yes" xml:space="preserve">
          <source>In addition, some objects are automatically created just after &lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; creates a table to hold them in a database:</source>
          <target state="translated">另外，在&lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;创建表以将它们保存在数据库中之后，会自动创建一些对象：</target>
        </trans-unit>
        <trans-unit id="602a62df0ea4d621c4bb672ddce2276a2ba75e0f" translate="yes" xml:space="preserve">
          <source>In addition, the concrete base classes of the model are stored as pointers, so you must always keep base classes around for as long as there is a migration that contains a reference to them. On the plus side, methods and managers from these base classes inherit normally, so if you absolutely need access to these you can opt to move them into a superclass.</source>
          <target state="translated">此外,模型的具体基类是以指针的形式存储的,所以只要有一个包含对它们的引用的迁移,你就必须始终将基类保留在身边。从好的方面来说,这些基类的方法和管理器都是正常继承的,所以如果你绝对需要访问这些,你可以选择将它们迁移到一个超级类中。</target>
        </trans-unit>
        <trans-unit id="ecc2eb2c3ab555cfa8732961afb123db30b159c9" translate="yes" xml:space="preserve">
          <source>In addition, there&amp;rsquo;s a utility function:</source>
          <target state="translated">此外，还有一个实用程序功能：</target>
        </trans-unit>
        <trans-unit id="5cb0790e9c7133e4cc81702a5b48be8ffd4efd86" translate="yes" xml:space="preserve">
          <source>In addition, to allow Python template files that contain Django template language syntax while also preventing packaging systems from trying to byte-compile invalid &lt;code&gt;*.py&lt;/code&gt; files, template files ending with &lt;code&gt;.py-tpl&lt;/code&gt; will be renamed to &lt;code&gt;.py&lt;/code&gt;.</source>
          <target state="translated">另外，为了允许包含Django模板语言语法的Python模板文件，同时还防止打包系统尝试对无效的 &lt;code&gt;*.py&lt;/code&gt; 文件进行字节编译，以 &lt;code&gt;.py-tpl&lt;/code&gt; 结尾的模板文件将重命名为 &lt;code&gt;.py&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f39294b8048c718f8bb8084ffe106424b63a64a2" translate="yes" xml:space="preserve">
          <source>In addition, to cut down on the repetitive nature of loading and rendering templates, Django provides a shortcut function which automates the process.</source>
          <target state="translated">此外,为了减少加载和渲染模板的重复性,Django提供了一个快捷功能,使这个过程自动化。</target>
        </trans-unit>
        <trans-unit id="be8f95e23db63b8ed19a44c8deba6d75e37d2dc0" translate="yes" xml:space="preserve">
          <source>In addition, try to avoid returning values as positional arguments; where possible, return values as keyword arguments for maximum future compatibility. Of course, if you change the names of things more often than their position in the constructor&amp;rsquo;s argument list, you might prefer positional, but bear in mind that people will be reconstructing your field from the serialized version for quite a while (possibly years), depending how long your migrations live for.</source>
          <target state="translated">另外，尽量避免返回值作为位置参数。在可能的情况下，返回值作为关键字参数，以实现最大的将来兼容性。当然，如果您更改事物的名称而不是更改其名称在构造函数的参数列表中的位置，则可能更喜欢位置，但请记住，人们将在相当长的一段时间（可能是几年）内从序列化版本重建您的字段，取决于您的迁移寿命。</target>
        </trans-unit>
        <trans-unit id="d3643c4f39cc7b043d095a8d10a730426bd124d2" translate="yes" xml:space="preserve">
          <source>In addition, you may run into a &lt;code&gt;CircularDependencyError&lt;/code&gt; when running your migrations as Django won&amp;rsquo;t be able to automatically break the dependency loop due to the dynamic dependency. If you see this error, you should break the loop by moving the models depended on by your user model into a second migration. (You can try making two normal models that have a &lt;code&gt;ForeignKey&lt;/code&gt; to each other and seeing how &lt;code&gt;makemigrations&lt;/code&gt; resolves that circular dependency if you want to see how it&amp;rsquo;s usually done.)</source>
          <target state="translated">此外，在运行迁移时，由于动态依赖关系，Django无法自动中断依赖关系循环，因此您可能会遇到 &lt;code&gt;CircularDependencyError&lt;/code&gt; 。如果看到此错误，则应通过将用户模型所依赖的模型移至第二个迁移中来中断循环。 （您可以尝试制作两个彼此具有 &lt;code&gt;ForeignKey&lt;/code&gt; 的普通模型，并查看 &lt;code&gt;makemigrations&lt;/code&gt; 如何解决该循环依赖关系（如果您想了解它通常是如何完成的。）</target>
        </trans-unit>
        <trans-unit id="6c07cdf9206331466980546d8b1cf47350f9dec8" translate="yes" xml:space="preserve">
          <source>In all cases the name of the directory containing the translation is expected to be named using &lt;a href=&quot;index#term-locale-name&quot;&gt;locale name&lt;/a&gt; notation. E.g. &lt;code&gt;de&lt;/code&gt;, &lt;code&gt;pt_BR&lt;/code&gt;, &lt;code&gt;es_AR&lt;/code&gt;, etc. Untranslated strings for territorial language variants use the translations of the generic language. For example, untranslated &lt;code&gt;pt_BR&lt;/code&gt; strings use &lt;code&gt;pt&lt;/code&gt; translations.</source>
          <target state="translated">在所有情况下，都应使用&lt;a href=&quot;index#term-locale-name&quot;&gt;区域设置名称&lt;/a&gt;符号来命名包含翻译的目录名称。如 &lt;code&gt;de&lt;/code&gt; ， &lt;code&gt;pt_BR&lt;/code&gt; 表示， &lt;code&gt;es_AR&lt;/code&gt; 等领土语言版本翻译的字符串使用通用语言的翻译。例如，未翻译的 &lt;code&gt;pt_BR&lt;/code&gt; 字符串使用 &lt;code&gt;pt&lt;/code&gt; 翻译。</target>
        </trans-unit>
        <trans-unit id="72cd5697475afea58d2e7c1ba3fcfc8ea3cf3530" translate="yes" xml:space="preserve">
          <source>In all other respects, the &lt;code&gt;InlineModelAdmin&lt;/code&gt; is exactly the same as any other. You can customize the appearance using any of the normal &lt;code&gt;ModelAdmin&lt;/code&gt; properties.</source>
          <target state="translated">在所有其他方面， &lt;code&gt;InlineModelAdmin&lt;/code&gt; 与其他任何方面完全相同。您可以使用任何正常的 &lt;code&gt;ModelAdmin&lt;/code&gt; 属性来自定义外观。</target>
        </trans-unit>
        <trans-unit id="e9d5e238bac9efc00000ed6f69e2747cbb0fb9ac" translate="yes" xml:space="preserve">
          <source>In an &lt;a href=&quot;#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; object, the &lt;a href=&quot;#django.http.HttpRequest.GET&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.http.HttpRequest.POST&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; attributes are instances of &lt;code&gt;django.http.QueryDict&lt;/code&gt;, a dictionary-like class customized to deal with multiple values for the same key. This is necessary because some HTML form elements, notably &lt;code&gt;&amp;lt;select multiple&amp;gt;&lt;/code&gt;, pass multiple values for the same key.</source>
          <target state="translated">在&lt;a href=&quot;#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;对象中，&lt;a href=&quot;#django.http.HttpRequest.GET&quot;&gt; &lt;code&gt;GET&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.http.HttpRequest.POST&quot;&gt; &lt;code&gt;POST&lt;/code&gt; &lt;/a&gt;属性是 &lt;code&gt;django.http.QueryDict&lt;/code&gt; 的实例，django.http.QueryDict是类似字典的类，自定义为可处理同一键的多个值。这是必需的，因为某些HTML表单元素（尤其是 &lt;code&gt;&amp;lt;select multiple&amp;gt;&lt;/code&gt; )会为同一键传递多个值。</target>
        </trans-unit>
        <trans-unit id="125593a33b52de9b2649a843eba4f9a9f643a393" translate="yes" xml:space="preserve">
          <source>In any case, you should always be able to &lt;a href=&quot;#spatialite-source&quot;&gt;install from source&lt;/a&gt;.</source>
          <target state="translated">无论如何，您应该始终能够&lt;a href=&quot;#spatialite-source&quot;&gt;从source安装&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="26372be3d62eb8474ab024118b757738445b8b1e" translate="yes" xml:space="preserve">
          <source>In any directory named in the &lt;a href=&quot;settings#std:setting-FIXTURE_DIRS&quot;&gt;&lt;code&gt;FIXTURE_DIRS&lt;/code&gt;&lt;/a&gt; setting</source>
          <target state="translated">在以&lt;a href=&quot;settings#std:setting-FIXTURE_DIRS&quot;&gt; &lt;code&gt;FIXTURE_DIRS&lt;/code&gt; &lt;/a&gt;设置命名的任何目录中</target>
        </trans-unit>
        <trans-unit id="c617f38771b04f4bc99f2332d1dc8deca3569a57" translate="yes" xml:space="preserve">
          <source>In any template that uses a POST form, use the &lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt;&lt;code&gt;csrf_token&lt;/code&gt;&lt;/a&gt; tag inside the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element if the form is for an internal URL, e.g.:</source>
          <target state="translated">在任何使用POST表单的模板中，如果表单用于内部URL，请在 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 元素内使用&lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt; &lt;code&gt;csrf_token&lt;/code&gt; &lt;/a&gt;标记，例如：</target>
        </trans-unit>
        <trans-unit id="9584b79fc48ff0575ab4a3e73aa30d63351d2fd1" translate="yes" xml:space="preserve">
          <source>In both cases, &amp;ldquo;absolute path&amp;rdquo; means a URL that doesn&amp;rsquo;t include the protocol or domain. Examples:</source>
          <target state="translated">在这两种情况下，&amp;ldquo;绝对路径&amp;rdquo;是指不包含协议或域的URL。例子：</target>
        </trans-unit>
        <trans-unit id="ad26be7567d5ea62f6cbf975fb69c51dd3b9c5ff" translate="yes" xml:space="preserve">
          <source>In case a template var (&lt;code&gt;myvar&lt;/code&gt; above) is passed to the tag, the tag will first resolve such variable to a string at run-time and then look up that string in the message catalogs.</source>
          <target state="translated">如果将模板var（上面的 &lt;code&gt;myvar&lt;/code&gt; ）传递给标签，标签将首先在运行时将此类变量解析为字符串，然后在消息目录中查找该字符串。</target>
        </trans-unit>
        <trans-unit id="2ac2ff181891a9196cfcb6c36702ae8d31f48781" translate="yes" xml:space="preserve">
          <source>In case it is a callable, it accepts the model instance as a parameter. For example:</source>
          <target state="translated">如果它是一个可调用的,它接受模型实例作为参数。例如:如果它是可调用的,它接受模型实例作为参数。</target>
        </trans-unit>
        <trans-unit id="c754ae6f658d028d73d2c46131b5071580be6e76" translate="yes" xml:space="preserve">
          <source>In case you want to override a setting for a test method, Django provides the &lt;a href=&quot;#django.test.override_settings&quot;&gt;&lt;code&gt;override_settings()&lt;/code&gt;&lt;/a&gt; decorator (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0318&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 318&lt;/strong&gt;&lt;/a&gt;). It&amp;rsquo;s used like this:</source>
          <target state="translated">如果您想覆盖测试方法的设置，则Django提供了&lt;a href=&quot;#django.test.override_settings&quot;&gt; &lt;code&gt;override_settings()&lt;/code&gt; &lt;/a&gt;装饰器（请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0318&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 318&lt;/strong&gt;&lt;/a&gt;）。它的用法如下：</target>
        </trans-unit>
        <trans-unit id="14bf4df5347afc16b3429fb63cb4de3162b6824c" translate="yes" xml:space="preserve">
          <source>In case you want to refer to files in one of the locations with an additional namespace, you can &lt;strong&gt;optionally&lt;/strong&gt; provide a prefix as &lt;code&gt;(prefix, path)&lt;/code&gt; tuples, e.g.:</source>
          <target state="translated">如果要使用附加名称空间引用位置之一中的文件，则可以&lt;strong&gt;选择&lt;/strong&gt;将前缀提供为 &lt;code&gt;(prefix, path)&lt;/code&gt; 元组，例如：</target>
        </trans-unit>
        <trans-unit id="d992ed68ceac74ca140820c822217fa435f7818c" translate="yes" xml:space="preserve">
          <source>In case your custom field needs a special conversion when being saved that is not the same as the conversion used for normal query parameters, you can override &lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_db_prep_save&quot;&gt;&lt;code&gt;get_db_prep_save()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您的自定义字段在保存时需要特殊转换，而该特殊转换与用于普通查询参数的转换不同，则可以重写&lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_db_prep_save&quot;&gt; &lt;code&gt;get_db_prep_save()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e7465849737f4a0d865ae26d03454c4d9bb925c5" translate="yes" xml:space="preserve">
          <source>In case your model defines a range using two fields, instead of the native PostgreSQL range types, you should write an expression that uses the equivalent function (e.g. &lt;code&gt;TsTzRange()&lt;/code&gt;), and use the delimiters for the field. Most often, the delimiters will be &lt;code&gt;'[)'&lt;/code&gt;, meaning that the lower bound is inclusive and the upper bound is exclusive. You may use the &lt;a href=&quot;fields#django.contrib.postgres.fields.RangeBoundary&quot;&gt;&lt;code&gt;RangeBoundary&lt;/code&gt;&lt;/a&gt; that provides an expression mapping for the &lt;a href=&quot;https://www.postgresql.org/docs/current/rangetypes.html#RANGETYPES-INCLUSIVITY&quot;&gt;range boundaries&lt;/a&gt;. For example:</source>
          <target state="translated">如果您的模型使用两个字段而不是本地PostgreSQL范围类型定义范围，则应编写一个使用等效函数的表达式（例如 &lt;code&gt;TsTzRange()&lt;/code&gt; ），并对该字段使用定界符。通常，定界符将为 &lt;code&gt;'[)'&lt;/code&gt; ，这意味着下限是包含在内的，上限是排斥的。您可以使用&lt;a href=&quot;fields#django.contrib.postgres.fields.RangeBoundary&quot;&gt; &lt;code&gt;RangeBoundary&lt;/code&gt; &lt;/a&gt;，它为&lt;a href=&quot;https://www.postgresql.org/docs/current/rangetypes.html#RANGETYPES-INCLUSIVITY&quot;&gt;范围边界&lt;/a&gt;提供表达式映射。例如：</target>
        </trans-unit>
        <trans-unit id="051cd6e750abe4a0440743fc7195e3b28df1345b" translate="yes" xml:space="preserve">
          <source>In cases 1 and 2, the value of the &lt;code&gt;backend&lt;/code&gt; argument or the &lt;code&gt;user.backend&lt;/code&gt; attribute should be a dotted import path string (like that found in &lt;a href=&quot;../../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt;&lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt;&lt;/a&gt;), not the actual backend class.</source>
          <target state="translated">在情况1和2中， &lt;code&gt;backend&lt;/code&gt; 参数或 &lt;code&gt;user.backend&lt;/code&gt; 属性的值应为点分导入路径字符串（例如在&lt;a href=&quot;../../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt; &lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt; &lt;/a&gt;中找到的字符串），而不是实际的后端类。</target>
        </trans-unit>
        <trans-unit id="d8468a1c5eceb7ad498210c570f09ce1a370656f" translate="yes" xml:space="preserve">
          <source>In contrast to &lt;a href=&quot;#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; objects, which are created automatically by Django, &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; objects are your responsibility. Each view you write is responsible for instantiating, populating, and returning an &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">与Django自动创建的&lt;a href=&quot;#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;对象相反，&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;对象是您的责任。您编写的每个视图都负责实例化，填充和返回&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f060f555e740ac3beb8b7312bc9eac7c1f9e16bd" translate="yes" xml:space="preserve">
          <source>In detail, Django automatically opens a connection to the database whenever it needs one and doesn&amp;rsquo;t have one already &amp;mdash; either because this is the first connection, or because the previous connection was closed.</source>
          <target state="translated">详细来说，Django会在需要数据库且尚未建立数据库时自动打开与数据库的连接-要么是因为这是第一个连接，要么是因为上一个连接已关闭。</target>
        </trans-unit>
        <trans-unit id="34d24d63eafec4abb1397d46acb8a0d53758ad7a" translate="yes" xml:space="preserve">
          <source>In each of these places, the language preference is expected to be in the standard &lt;a href=&quot;index#term-language-code&quot;&gt;language format&lt;/a&gt;, as a string. For example, Brazilian Portuguese is &lt;code&gt;pt-br&lt;/code&gt;.</source>
          <target state="translated">在这些地方的每个地方，语言首选项都应采用标准&lt;a href=&quot;index#term-language-code&quot;&gt;语言格式&lt;/a&gt;，即字符串。例如，巴西葡萄牙语是 &lt;code&gt;pt-br&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8cd7c1e1e4252d27a4de97d1e3a8a42f6ba5b40c" translate="yes" xml:space="preserve">
          <source>In either case, using only one style within a given regex is recommended. When both styles are mixed, any unnamed groups are ignored and only named groups are passed to the view function.</source>
          <target state="translated">无论哪种情况,都建议在一个给定的regex中只使用一种样式。当两种样式混合使用时,任何未命名的组都会被忽略,只有命名的组会被传递给视图函数。</target>
        </trans-unit>
        <trans-unit id="eca740cfe82332cf351f75edde40f7eee9f36561" translate="yes" xml:space="preserve">
          <source>In fact if your form is going to be used to directly add or edit a Django model, a &lt;a href=&quot;modelforms&quot;&gt;ModelForm&lt;/a&gt; can save you a great deal of time, effort, and code, because it will build a form, along with the appropriate fields and their attributes, from a &lt;code&gt;Model&lt;/code&gt; class.</source>
          <target state="translated">实际上，如果您的表单将用于直接添加或编辑Django模型，那么&lt;a href=&quot;modelforms&quot;&gt;ModelForm&lt;/a&gt;可以节省大量的时间，精力和代码，因为它可以构建表单以及适当的字段及其属性，来自 &lt;code&gt;Model&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="7d9a9c622b4c3cad5652ef1faa625de607bb2ed0" translate="yes" xml:space="preserve">
          <source>In fact, most lookups with &lt;code&gt;__abs&lt;/code&gt; could be implemented as range queries like this, and on most database backends it is likely to be more sensible to do so as you can make use of the indexes. However with PostgreSQL you may want to add an index on &lt;code&gt;abs(change)&lt;/code&gt; which would allow these queries to be very efficient.</source>
          <target state="translated">实际上，使用 &lt;code&gt;__abs&lt;/code&gt; 进行的大多数查找都可以这样实现为范围查询，并且在大多数数据库后端，这样做可能更明智，因为您可以使用索引。但是，对于PostgreSQL，您可能希望在 &lt;code&gt;abs(change)&lt;/code&gt; 上添加一个索引，这将使这些查询非常有效。</target>
        </trans-unit>
        <trans-unit id="adba40a949f571c0432f75912f911cb4408c8a50" translate="yes" xml:space="preserve">
          <source>In general constraints are &lt;strong&gt;not&lt;/strong&gt; checked during &lt;code&gt;full_clean()&lt;/code&gt;, and do not raise &lt;code&gt;ValidationError&lt;/code&gt;s. Rather you&amp;rsquo;ll get a database integrity error on &lt;code&gt;save()&lt;/code&gt;. &lt;code&gt;UniqueConstraint&lt;/code&gt;s without a &lt;a href=&quot;#django.db.models.UniqueConstraint.condition&quot;&gt;&lt;code&gt;condition&lt;/code&gt;&lt;/a&gt; (i.e. non-partial unique constraints) are different in this regard, in that they leverage the existing &lt;code&gt;validate_unique()&lt;/code&gt; logic, and thus enable two-stage validation. In addition to &lt;code&gt;IntegrityError&lt;/code&gt; on &lt;code&gt;save()&lt;/code&gt;, &lt;code&gt;ValidationError&lt;/code&gt; is also raised during model validation when the &lt;code&gt;UniqueConstraint&lt;/code&gt; is violated.</source>
          <target state="translated">通常，在 &lt;code&gt;full_clean()&lt;/code&gt; 期间&lt;strong&gt;不&lt;/strong&gt;检查约束，并且不引发 &lt;code&gt;ValidationError&lt;/code&gt; 。相反，您将在 &lt;code&gt;save()&lt;/code&gt; 上收到数据库完整性错误。没有&lt;a href=&quot;#django.db.models.UniqueConstraint.condition&quot;&gt; &lt;code&gt;condition&lt;/code&gt; &lt;/a&gt;（即非局部唯一约束）的 &lt;code&gt;UniqueConstraint&lt;/code&gt; 在这方面有所不同，因为它们利用了现有的 &lt;code&gt;validate_unique()&lt;/code&gt; 逻辑，从而启用了两阶段验证。除了 &lt;code&gt;IntegrityError&lt;/code&gt; 上 &lt;code&gt;save()&lt;/code&gt; ， &lt;code&gt;ValidationError&lt;/code&gt; 也模型验证期间，当提出 &lt;code&gt;UniqueConstraint&lt;/code&gt; 被侵犯。</target>
        </trans-unit>
        <trans-unit id="209edf2940165c6cc1a875e5298008997ec85e40" translate="yes" xml:space="preserve">
          <source>In general, &lt;code&gt;Q() objects&lt;/code&gt; make it possible to define and reuse conditions. This permits the &lt;a href=&quot;../../topics/db/queries#complex-lookups-with-q&quot;&gt;construction of complex database queries&lt;/a&gt; using &lt;code&gt;|&lt;/code&gt; (&lt;code&gt;OR&lt;/code&gt;) and &lt;code&gt;&amp;amp;&lt;/code&gt; (&lt;code&gt;AND&lt;/code&gt;) operators; in particular, it is not otherwise possible to use &lt;code&gt;OR&lt;/code&gt; in &lt;code&gt;QuerySets&lt;/code&gt;.</source>
          <target state="translated">通常，使用 &lt;code&gt;Q() objects&lt;/code&gt; 可以定义和重用条件。这允许使用 &lt;code&gt;|&lt;/code&gt; &lt;a href=&quot;../../topics/db/queries#complex-lookups-with-q&quot;&gt;构造复杂的数据库查询&lt;/a&gt;。（ &lt;code&gt;OR&lt;/code&gt; ）和 &lt;code&gt;&amp;amp;&lt;/code&gt; （ &lt;code&gt;AND&lt;/code&gt; ）运算符；特别是，否则不可能在 &lt;code&gt;QuerySets&lt;/code&gt; 中使用 &lt;code&gt;OR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6c3985cf74933843dd741b4b15c88efa849cde0" translate="yes" xml:space="preserve">
          <source>In general, GeoDjango installation requires:</source>
          <target state="translated">一般来说,GeoDjango安装需要。</target>
        </trans-unit>
        <trans-unit id="509d11594c50dfe8712d4434d7a4afdf6b8e5098" translate="yes" xml:space="preserve">
          <source>In general, any cleaning method can raise &lt;code&gt;ValidationError&lt;/code&gt; if there is a problem with the data it is processing, passing the relevant information to the &lt;code&gt;ValidationError&lt;/code&gt; constructor. &lt;a href=&quot;#raising-validation-error&quot;&gt;See below&lt;/a&gt; for the best practice in raising &lt;code&gt;ValidationError&lt;/code&gt;. If no &lt;code&gt;ValidationError&lt;/code&gt; is raised, the method should return the cleaned (normalized) data as a Python object.</source>
          <target state="translated">通常，如果正在处理的数据存在问题，则任何清除方法都可以引发 &lt;code&gt;ValidationError&lt;/code&gt; ，并将相关信息传递给 &lt;code&gt;ValidationError&lt;/code&gt; 构造函数。&lt;a href=&quot;#raising-validation-error&quot;&gt;有关&lt;/a&gt;提高 &lt;code&gt;ValidationError&lt;/code&gt; 的最佳实践，请参见下文。如果没有引发 &lt;code&gt;ValidationError&lt;/code&gt; ，则该方法应将清除（规范化）的数据作为Python对象返回。</target>
        </trans-unit>
        <trans-unit id="aff7eda262832443cdc4cfd621b6e572d84270a0" translate="yes" xml:space="preserve">
          <source>In general, it is enough to define &lt;a href=&quot;#django.template.loaders.base.Loader.get_template_sources&quot;&gt;&lt;code&gt;get_template_sources()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.template.loaders.base.Loader.get_contents&quot;&gt;&lt;code&gt;get_contents()&lt;/code&gt;&lt;/a&gt; for custom template loaders. &lt;code&gt;get_template()&lt;/code&gt; will usually not need to be overridden.</source>
          <target state="translated">通常，为自定义模板加载程序定义&lt;a href=&quot;#django.template.loaders.base.Loader.get_template_sources&quot;&gt; &lt;code&gt;get_template_sources()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.template.loaders.base.Loader.get_contents&quot;&gt; &lt;code&gt;get_contents()&lt;/code&gt; &lt;/a&gt;就足够了。 &lt;code&gt;get_template()&lt;/code&gt; 通常不需要重写。</target>
        </trans-unit>
        <trans-unit id="b162efee794bcad06a96b812cb84dc6a654ea12a" translate="yes" xml:space="preserve">
          <source>In general, the library path may be set on a per-user basis by setting an environment variable, or by configuring the library path for the entire system.</source>
          <target state="translated">一般情况下,库路径可以通过设置环境变量按每个用户来设置,也可以为整个系统配置库路径。</target>
        </trans-unit>
        <trans-unit id="f02826e5404756fbfee9b9f4d13058259e858ef3" translate="yes" xml:space="preserve">
          <source>In higher level code related to handling of URLs of Django model instances: The &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_absolute_url&quot;&gt;&lt;code&gt;get_absolute_url()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">在与Django模型实例的URL处理相关的高级代码中：&lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_absolute_url&quot;&gt; &lt;code&gt;get_absolute_url()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="0325acb3dd5bb25e96712e073ccf8beac6d4f214" translate="yes" xml:space="preserve">
          <source>In its simplest form &lt;code&gt;Prefetch&lt;/code&gt; is equivalent to the traditional string based lookups:</source>
          <target state="translated">&lt;code&gt;Prefetch&lt;/code&gt; 以其最简单的形式等效于基于传统字符串的查找：</target>
        </trans-unit>
        <trans-unit id="74628a3f6d1c7feffe7469a9ab6311bf142ff0b9" translate="yes" xml:space="preserve">
          <source>In larger templates, this technique helps you see which &lt;code&gt;{% block %}&lt;/code&gt; tags are being closed.</source>
          <target state="translated">在较大的模板中，此技术可帮助您查看哪些 &lt;code&gt;{% block %}&lt;/code&gt; 标签正在关闭。</target>
        </trans-unit>
        <trans-unit id="e5e38ef2b3710d00983de8113dd8ab5592914bbb" translate="yes" xml:space="preserve">
          <source>In lieu of the above approach which requires duplicating methods on both the &lt;code&gt;QuerySet&lt;/code&gt; and the &lt;code&gt;Manager&lt;/code&gt;, &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.as_manager&quot;&gt;&lt;code&gt;QuerySet.as_manager()&lt;/code&gt;&lt;/a&gt; can be used to create an instance of &lt;code&gt;Manager&lt;/code&gt; with a copy of a custom &lt;code&gt;QuerySet&lt;/code&gt;&amp;rsquo;s methods:</source>
          <target state="translated">代替上述要求在 &lt;code&gt;QuerySet&lt;/code&gt; 和 &lt;code&gt;Manager&lt;/code&gt; 上都复制方法的方法，可以使用&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.as_manager&quot;&gt; &lt;code&gt;QuerySet.as_manager()&lt;/code&gt; &lt;/a&gt;创建具有自定义 &lt;code&gt;QuerySet&lt;/code&gt; 方法副本的 &lt;code&gt;Manager&lt;/code&gt; 实例：</target>
        </trans-unit>
        <trans-unit id="892885cde16dca9d450a49f5544282693afce6a6" translate="yes" xml:space="preserve">
          <source>In models, a field is instantiated as a class attribute and represents a particular table column, see &lt;a href=&quot;../../topics/db/models&quot;&gt;Models&lt;/a&gt;. It has attributes such as &lt;a href=&quot;#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.Field.unique&quot;&gt;&lt;code&gt;unique&lt;/code&gt;&lt;/a&gt;, and methods that Django uses to map the field value to database-specific values.</source>
          <target state="translated">在模型中，字段被实例化为类属性，并代表特定的表列，请参见&lt;a href=&quot;../../topics/db/models&quot;&gt;Models&lt;/a&gt;。它具有诸如&lt;a href=&quot;#django.db.models.Field.null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.db.models.Field.unique&quot;&gt; &lt;code&gt;unique&lt;/code&gt; 的&lt;/a&gt;属性，以及Django用于将字段值映射到特定于数据库的值的方法。</target>
        </trans-unit>
        <trans-unit id="c049c4f3a733196872767a3d6e8373dbf1a9e8d8" translate="yes" xml:space="preserve">
          <source>In most cases it will be necessary to upgrade to the latest version of your Django-related dependencies as well. If the Django version was recently released or if some of your dependencies are not well-maintained, some of your dependencies may not yet support the new Django version. In these cases you may have to wait until new versions of your dependencies are released.</source>
          <target state="translated">在大多数情况下,你需要将Django相关的依赖关系也升级到最新版本。如果Django的版本最近才发布,或者你的一些依赖关系没有得到很好的维护,那么你的一些依赖关系可能还不支持新的Django版本。在这种情况下,你可能不得不等待新版本的依赖关系发布。</target>
        </trans-unit>
        <trans-unit id="2553c57b09242581a803e6aacbe2b851d277b3d0" translate="yes" xml:space="preserve">
          <source>In most cases overriding or inheriting &lt;code&gt;get_FOO_display()&lt;/code&gt;, &lt;code&gt;get_next_by_FOO()&lt;/code&gt;, and &lt;code&gt;get_previous_by_FOO()&lt;/code&gt; should work as expected. Since they are added by the metaclass however, it is not practical to account for all possible inheritance structures. In more complex cases you should override &lt;code&gt;Field.contribute_to_class()&lt;/code&gt; to set the methods you need.</source>
          <target state="translated">在大多数情况下，覆盖或继承 &lt;code&gt;get_FOO_display()&lt;/code&gt; ， &lt;code&gt;get_next_by_FOO()&lt;/code&gt; 和 &lt;code&gt;get_previous_by_FOO()&lt;/code&gt; 应该可以正常工作。由于它们是由元类添加的，因此考虑所有可能的继承结构是不切实际的。在更复杂的情况下，您应该重写 &lt;code&gt;Field.contribute_to_class()&lt;/code&gt; 来设置所需的方法。</target>
        </trans-unit>
        <trans-unit id="46ee957bac7e253d4620f33ab4a0b3981905456a" translate="yes" xml:space="preserve">
          <source>In most cases when Django is dealing with strings, it will convert them to strings before doing anything else. So, as a general rule, if you pass in a bytestring, be prepared to receive a string back in the result.</source>
          <target state="translated">在大多数情况下,当Django处理字符串时,它会在做其他事情之前将它们转换为字符串。所以,一般来说,如果你传入一个bytestring,要准备好在结果中收到一个字符串。</target>
        </trans-unit>
        <trans-unit id="acee6b59fd13a3ca3fe85dc3b662ea33a0c91494" translate="yes" xml:space="preserve">
          <source>In most cases, Django can automatically detect and set this, but you can also provide an explicit override as a class attribute on your &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; subclass. In a few situations this is required; for instance if the app package is a &lt;a href=&quot;#namespace-package&quot;&gt;namespace package&lt;/a&gt; with multiple paths.</source>
          <target state="translated">在大多数情况下，Django可以自动检测并设置此设置，但您也可以在&lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt;子类上提供显式替代作为类属性。在某些情况下，这是必需的；例如，如果应用程序包是具有多个路径的&lt;a href=&quot;#namespace-package&quot;&gt;名称空间包&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e12dbf6f96ad8979888b66a156e04c3569721e6" translate="yes" xml:space="preserve">
          <source>In most cases, for a patch to be accepted into Django it has to include tests. For bug fix patches, this means writing a regression test to ensure that the bug is never reintroduced into Django later on. A regression test should be written in such a way that it will fail while the bug still exists and pass once the bug has been fixed. For patches containing new features, you&amp;rsquo;ll need to include tests which ensure that the new features are working correctly. They too should fail when the new feature is not present, and then pass once it has been implemented.</source>
          <target state="translated">在大多数情况下，要使补丁被Django接受，必须包含测试。对于错误修复补丁，这意味着编写回归测试以确保以后永远不会将错误重新引入Django。编写回归测试的方式应使其在错误仍然存​​在时将失败并在错误被修复后通过。对于包含新功能的修补程序，您需要包括测试以确保新功能正常运行。当新功能不存在时，它们也应该失败，然后在实现新功能时通过。</target>
        </trans-unit>
        <trans-unit id="d63a9dd51c8abf1805656df5834de22fb54d2d48" translate="yes" xml:space="preserve">
          <source>In most cases, inheriting from this mixin will be sufficient to make an old-style middleware compatible with the new system with sufficient backwards-compatibility. The new short-circuiting semantics will be harmless or even beneficial to the existing middleware. In a few cases, a middleware class may need some changes to adjust to the new semantics.</source>
          <target state="translated">在大多数情况下,从这个mixin继承就足以使旧式的中间件与新系统有足够的向后兼容性。新的短路语义对现有的中间件将是无害的,甚至是有益的。在少数情况下,中间件类可能需要做一些改变来适应新的语义。</target>
        </trans-unit>
        <trans-unit id="d9d0c45a9a5c2988974b76f45606b7b5230c0954" translate="yes" xml:space="preserve">
          <source>In most cases, it&amp;rsquo;s best to use translated URLs only within a language code prefixed block of patterns (using &lt;a href=&quot;#django.conf.urls.i18n.i18n_patterns&quot;&gt;&lt;code&gt;i18n_patterns()&lt;/code&gt;&lt;/a&gt;), to avoid the possibility that a carelessly translated URL causes a collision with a non-translated URL pattern.</source>
          <target state="translated">在大多数情况下，最好仅在以语言代码为前缀的模式块中使用翻译的URL（使用&lt;a href=&quot;#django.conf.urls.i18n.i18n_patterns&quot;&gt; &lt;code&gt;i18n_patterns()&lt;/code&gt; &lt;/a&gt;），以避免粗心翻译的URL与非翻译的URL模式发生冲突的可能性。</target>
        </trans-unit>
        <trans-unit id="53ae97a84b8d45f7667a00362e01147ed1582f6c" translate="yes" xml:space="preserve">
          <source>In most cases, the field will have a sensible default widget. For example, by default, a &lt;a href=&quot;../../ref/forms/fields#django.forms.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; will have a &lt;a href=&quot;../../ref/forms/widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt; widget, that produces an &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt; in the HTML. If you needed &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; instead, you&amp;rsquo;d specify the appropriate widget when defining your form field, as we have done for the &lt;code&gt;message&lt;/code&gt; field.</source>
          <target state="translated">在大多数情况下，该字段将具有明智的默认小部件。例如，默认情况下，&lt;a href=&quot;../../ref/forms/fields#django.forms.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;将具有&lt;a href=&quot;../../ref/forms/widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt;小部件，该小部件将在HTML 中生成 &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt; 。如果您需要 &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; ，则可以在定义表单字段时指定适当的小部件，就像我们对 &lt;code&gt;message&lt;/code&gt; 字段所做的那样。</target>
        </trans-unit>
        <trans-unit id="6eb548d924e6f442368c56b8245c2ffe7a95f69e" translate="yes" xml:space="preserve">
          <source>In most cases, this object will not have been saved to the database yet, so if it uses the default &lt;code&gt;AutoField&lt;/code&gt;, &lt;em&gt;it might not yet have a value for its primary key field&lt;/em&gt;.</source>
          <target state="translated">在大多数情况下，此对象尚未保存到数据库，因此，如果使用默认的 &lt;code&gt;AutoField&lt;/code&gt; ，&lt;em&gt;则它的主键字段可能尚未具有值&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="553a3a820227d2b61d89c93a4f51644a0ad682a2" translate="yes" xml:space="preserve">
          <source>In most cases, you can send email using &lt;code&gt;django.core.mail.send_mail()&lt;/code&gt;.</source>
          <target state="translated">在大多数情况下，您可以使用 &lt;code&gt;django.core.mail.send_mail()&lt;/code&gt; 发送电子邮件。</target>
        </trans-unit>
        <trans-unit id="fb9e461a8cfdfc6e585763268faa61b1594df5ef" translate="yes" xml:space="preserve">
          <source>In non-interactive mode, the &lt;a href=&quot;../topics/auth/customizing#django.contrib.auth.models.CustomUser.USERNAME_FIELD&quot;&gt;&lt;code&gt;USERNAME_FIELD&lt;/code&gt;&lt;/a&gt; and required fields (listed in &lt;a href=&quot;../topics/auth/customizing#django.contrib.auth.models.CustomUser.REQUIRED_FIELDS&quot;&gt;&lt;code&gt;REQUIRED_FIELDS&lt;/code&gt;&lt;/a&gt;) fall back to &lt;code&gt;DJANGO_SUPERUSER_&amp;lt;uppercase_field_name&amp;gt;&lt;/code&gt; environment variables, unless they are overridden by a command line argument. For example, to provide an &lt;code&gt;email&lt;/code&gt; field, you can use &lt;code&gt;DJANGO_SUPERUSER_EMAIL&lt;/code&gt; environment variable.</source>
          <target state="translated">在非交互模式下，除非由命令行参数覆盖，否则&lt;a href=&quot;../topics/auth/customizing#django.contrib.auth.models.CustomUser.USERNAME_FIELD&quot;&gt; &lt;code&gt;USERNAME_FIELD&lt;/code&gt; &lt;/a&gt;和必填字段（列在&lt;a href=&quot;../topics/auth/customizing#django.contrib.auth.models.CustomUser.REQUIRED_FIELDS&quot;&gt; &lt;code&gt;REQUIRED_FIELDS&lt;/code&gt; 中&lt;/a&gt;）将回退至 &lt;code&gt;DJANGO_SUPERUSER_&amp;lt;uppercase_field_name&amp;gt;&lt;/code&gt; 环境变量。例如，要提供 &lt;code&gt;email&lt;/code&gt; 字段，可以使用 &lt;code&gt;DJANGO_SUPERUSER_EMAIL&lt;/code&gt; 环境变量。</target>
        </trans-unit>
        <trans-unit id="e811dedb04c04b0db2eb92ba335a09921c544b79" translate="yes" xml:space="preserve">
          <source>In normal Python class inheritance, it is permissible for a child class to override any attribute from the parent class. In Django, this isn&amp;rsquo;t usually permitted for model fields. If a non-abstract model base class has a field called &lt;code&gt;author&lt;/code&gt;, you can&amp;rsquo;t create another model field or define an attribute called &lt;code&gt;author&lt;/code&gt; in any class that inherits from that base class.</source>
          <target state="translated">在常规的Python类继承中，子类可以覆盖父类的任何属性。在Django中，模型字段通常不允许这样做。如果非抽象模型基类具有一个称为 &lt;code&gt;author&lt;/code&gt; 的字段，则不能在从该基类继承的任何类中创建另一个模型字段或定义一个称为 &lt;code&gt;author&lt;/code&gt; 的属性。</target>
        </trans-unit>
        <trans-unit id="9ba287b42f73a012193a36b795923c8fa6f96a7d" translate="yes" xml:space="preserve">
          <source>In older versions of Django, be careful when reusing Django&amp;rsquo;s built-in filters as &lt;code&gt;autoescape&lt;/code&gt; defaults to &lt;code&gt;None&lt;/code&gt;. You&amp;rsquo;ll need to pass &lt;code&gt;autoescape=True&lt;/code&gt; to get autoescaping.</source>
          <target state="translated">在旧版本的Django中，重新使用Django的内置过滤器时要小心，因为 &lt;code&gt;autoescape&lt;/code&gt; 的默认值为 &lt;code&gt;None&lt;/code&gt; 。您需要传递 &lt;code&gt;autoescape=True&lt;/code&gt; 才能进行自动转义。</target>
        </trans-unit>
        <trans-unit id="48487eecdf3392dca8cdac3e20e02c45e851f71c" translate="yes" xml:space="preserve">
          <source>In older versions, &lt;code&gt;'&lt;/code&gt; is converted to its decimal code &lt;code&gt;&amp;amp;#39;&lt;/code&gt; instead of the equivalent hex code &lt;code&gt;&amp;amp;#x27;&lt;/code&gt;.</source>
          <target state="translated">在较旧的版本中， &lt;code&gt;'&lt;/code&gt; 转换为其十进制代码 &lt;code&gt;&amp;amp;#39;&lt;/code&gt; 。而不是等效的十六进制代码 &lt;code&gt;&amp;amp;#x27;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a594579463454aa6c5f1d126c4933adb9501ac81" translate="yes" xml:space="preserve">
          <source>In older versions, &lt;code&gt;s&lt;/code&gt; may be a bytestring.</source>
          <target state="translated">在旧版本中， &lt;code&gt;s&lt;/code&gt; 可能是一个字节串。</target>
        </trans-unit>
        <trans-unit id="06abe09565f7ebaaa5a5a3e66eecce8b6a0e1ba2" translate="yes" xml:space="preserve">
          <source>In older versions, MySQL uses &lt;code&gt;MBRContains&lt;/code&gt; and operates only on bounding boxes.</source>
          <target state="translated">在旧版本中，MySQL使用 &lt;code&gt;MBRContains&lt;/code&gt; 并仅在边界框上运行。</target>
        </trans-unit>
        <trans-unit id="86fdacbc12f0c3ada37ced324655c76230d31333" translate="yes" xml:space="preserve">
          <source>In older versions, MySQL uses &lt;code&gt;MBRDisjoint&lt;/code&gt; and operates only on bounding boxes.</source>
          <target state="translated">在旧版本中，MySQL使用 &lt;code&gt;MBRDisjoint&lt;/code&gt; 且仅在边界框上运行。</target>
        </trans-unit>
        <trans-unit id="a250c6c4d5ddf0ab4e264cb2589304887da56d37" translate="yes" xml:space="preserve">
          <source>In older versions, MySQL uses &lt;code&gt;MBREquals&lt;/code&gt; and operates only on bounding boxes.</source>
          <target state="translated">在旧版本中，MySQL使用 &lt;code&gt;MBREquals&lt;/code&gt; 并仅在边界框上运行。</target>
        </trans-unit>
        <trans-unit id="3d30b1f38b6febfe720406653832214a3cd66396" translate="yes" xml:space="preserve">
          <source>In older versions, MySQL uses &lt;code&gt;MBRIntersects&lt;/code&gt; and operates only on bounding boxes.</source>
          <target state="translated">在旧版本中，MySQL使用 &lt;code&gt;MBRIntersects&lt;/code&gt; 并仅在边界框上运行。</target>
        </trans-unit>
        <trans-unit id="a108605efc0a5748e8093c6df53458e3fc931cff" translate="yes" xml:space="preserve">
          <source>In older versions, MySQL uses &lt;code&gt;MBROverlaps&lt;/code&gt; and operates only on bounding boxes.</source>
          <target state="translated">在旧版本中，MySQL使用 &lt;code&gt;MBROverlaps&lt;/code&gt; 且仅在边界框上运行。</target>
        </trans-unit>
        <trans-unit id="6a423185ebb0542b517af591a286bdfe336b4ccb" translate="yes" xml:space="preserve">
          <source>In older versions, MySQL uses &lt;code&gt;MBRTouches&lt;/code&gt; and operates only on bounding boxes.</source>
          <target state="translated">在旧版本中，MySQL使用 &lt;code&gt;MBRTouches&lt;/code&gt; 且仅在边界框上运行。</target>
        </trans-unit>
        <trans-unit id="e454d7f81ea9b0f64b3dcee0ba1d27440f516a6e" translate="yes" xml:space="preserve">
          <source>In older versions, MySQL uses &lt;code&gt;MBRWithin&lt;/code&gt; and operates only on bounding boxes.</source>
          <target state="translated">在旧版本中，MySQL使用 &lt;code&gt;MBRWithin&lt;/code&gt; 并且仅在边界框上运行。</target>
        </trans-unit>
        <trans-unit id="04c471d6170a640a7f0b0a6b5d86ad526b15aeb8" translate="yes" xml:space="preserve">
          <source>In older versions, it returns a bytestring instead of a string.</source>
          <target state="translated">在旧版本中,它返回一个bytestring而不是一个字符串。</target>
        </trans-unit>
        <trans-unit id="e77f0794cc34eae167668fa46edcdb855f41b6ef" translate="yes" xml:space="preserve">
          <source>In older versions, permissions for proxy models use the content type of the concrete model rather than content type of the proxy model.</source>
          <target state="translated">在旧版本中,代理模型的权限使用具体模型的内容类型而不是代理模型的内容类型。</target>
        </trans-unit>
        <trans-unit id="c3ee96d228df4d2c97001f389d45ba85fe666ff6" translate="yes" xml:space="preserve">
          <source>In older versions, proxy models use the content type of the concrete model.</source>
          <target state="translated">在旧版本中,代理模型使用具体模型的内容类型。</target>
        </trans-unit>
        <trans-unit id="fb39b75e03f33a4e72cf13d13c8cf8133f783eb6" translate="yes" xml:space="preserve">
          <source>In older versions, the &lt;code&gt;tzinfo&lt;/code&gt; attribute is a &lt;a href=&quot;#django.utils.timezone.FixedOffset&quot;&gt;&lt;code&gt;FixedOffset&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">在旧版本中， &lt;code&gt;tzinfo&lt;/code&gt; 属性是&lt;a href=&quot;#django.utils.timezone.FixedOffset&quot;&gt; &lt;code&gt;FixedOffset&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="688ca5f2699bc44de7ce8a06a72f66e4061b7b2e" translate="yes" xml:space="preserve">
          <source>In older versions, the default value is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">在旧版本中，默认值为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f4239bf88dcd319d30aa682cbe4d3cde5d9664bc" translate="yes" xml:space="preserve">
          <source>In older versions, the default value is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">在旧版本中，默认值为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce7d5574bd6957ee81720c428d128a45952d2924" translate="yes" xml:space="preserve">
          <source>In older versions, the default value is &lt;code&gt;SAMEORIGIN&lt;/code&gt;.</source>
          <target state="translated">在旧版本中，默认值为 &lt;code&gt;SAMEORIGIN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66326a5c500f2e9b8f06b11645d2eb1a463f096a" translate="yes" xml:space="preserve">
          <source>In older versions, the keyword arguments with &lt;code&gt;None&lt;/code&gt; values are made up also for not provided named parts.</source>
          <target state="translated">在旧版本中，具有 &lt;code&gt;None&lt;/code&gt; 值的关键字参数也由未提供的命名部件组成。</target>
        </trans-unit>
        <trans-unit id="be44bea554526db510067415e8c9fcb3f595c8bd" translate="yes" xml:space="preserve">
          <source>In older versions, you could set the language in the current session.</source>
          <target state="translated">在旧版本中,你可以在当前会话中设置语言。</target>
        </trans-unit>
        <trans-unit id="ecde436d8369233ca2f3dcb9ab1ca79254f03cdf" translate="yes" xml:space="preserve">
          <source>In order for the &lt;code&gt;python manage.py migrate&lt;/code&gt; command to work, your Oracle database user must have privileges to run the following commands:</source>
          <target state="translated">为了使 &lt;code&gt;python manage.py migrate&lt;/code&gt; 命令起作用，您的Oracle数据库用户必须具有运行以下命令的特权：</target>
        </trans-unit>
        <trans-unit id="90fe772dd41ff482e0ce23d0eaa3b30a1fdefbce" translate="yes" xml:space="preserve">
          <source>In order for your filter to know the current auto-escaping state, set the &lt;code&gt;needs_autoescape&lt;/code&gt; flag to &lt;code&gt;True&lt;/code&gt; when you register your filter function. (If you don&amp;rsquo;t specify this flag, it defaults to &lt;code&gt;False&lt;/code&gt;). This flag tells Django that your filter function wants to be passed an extra keyword argument, called &lt;code&gt;autoescape&lt;/code&gt;, that is &lt;code&gt;True&lt;/code&gt; if auto-escaping is in effect and &lt;code&gt;False&lt;/code&gt; otherwise. It is recommended to set the default of the &lt;code&gt;autoescape&lt;/code&gt; parameter to &lt;code&gt;True&lt;/code&gt;, so that if you call the function from Python code it will have escaping enabled by default.</source>
          <target state="translated">为了使您的过滤器了解当前的自动转义状态，请在注册过滤器功能时将 &lt;code&gt;needs_autoescape&lt;/code&gt; 标志设置为 &lt;code&gt;True&lt;/code&gt; 。 （如果不指定此标志，则默认为 &lt;code&gt;False&lt;/code&gt; ）。此标志告诉Django您的过滤器函数希望传递一个额外的关键字参数，称为 &lt;code&gt;autoescape&lt;/code&gt; ，如果自动转义有效，则为 &lt;code&gt;True&lt;/code&gt; ，否则为 &lt;code&gt;False&lt;/code&gt; 。建议将 &lt;code&gt;autoescape&lt;/code&gt; 参数的默认值设置为 &lt;code&gt;True&lt;/code&gt; ，这样，如果您从Python代码调用该函数，则默认情况下将启用转义。</target>
        </trans-unit>
        <trans-unit id="11a387c8a9914108b9a7aabd974b6e6881a3bea5" translate="yes" xml:space="preserve">
          <source>In order to build a custom session engine or to customize an existing one, you may create a new class inheriting from &lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase&quot;&gt;&lt;code&gt;SessionBase&lt;/code&gt;&lt;/a&gt; or any other existing &lt;code&gt;SessionStore&lt;/code&gt; class.</source>
          <target state="translated">为了构建自定义会话引擎或自定义现有会话引擎，您可以创建一个继承自&lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase&quot;&gt; &lt;code&gt;SessionBase&lt;/code&gt; &lt;/a&gt;或任何其他现有 &lt;code&gt;SessionStore&lt;/code&gt; 类的新类。</target>
        </trans-unit>
        <trans-unit id="f48a9537ae495f429e0a574bc2641d48124286ad" translate="yes" xml:space="preserve">
          <source>In order to configure logging, you use &lt;a href=&quot;../ref/settings#std:setting-LOGGING&quot;&gt;&lt;code&gt;LOGGING&lt;/code&gt;&lt;/a&gt; to define a dictionary of logging settings. These settings describes the loggers, handlers, filters and formatters that you want in your logging setup, and the log levels and other properties that you want those components to have.</source>
          <target state="translated">为了配置日志记录，您可以使用&lt;a href=&quot;../ref/settings#std:setting-LOGGING&quot;&gt; &lt;code&gt;LOGGING&lt;/code&gt; &lt;/a&gt;定义日志记录设置的字典。这些设置描述了您希望在日志记录设置中使用的日志记录器，处理程序，过滤器和格式化程序，以及希望这些组件具有的日志级别和其他属性。</target>
        </trans-unit>
        <trans-unit id="42b3fc106c92756d794366455faac3a83dc515a5" translate="yes" xml:space="preserve">
          <source>In order to do that you can check the database connection&amp;rsquo;s alias inside a &lt;code&gt;RunPython&lt;/code&gt; operation by looking at the &lt;code&gt;schema_editor.connection.alias&lt;/code&gt; attribute:</source>
          <target state="translated">为此，您可以通过查看 &lt;code&gt;schema_editor.connection.alias&lt;/code&gt; 属性来检查 &lt;code&gt;RunPython&lt;/code&gt; 操作中数据库连接的别名：</target>
        </trans-unit>
        <trans-unit id="61d52591f027c8771ad5ddae66ce22631a8a19bc" translate="yes" xml:space="preserve">
          <source>In order to fully serialize your &lt;code&gt;Restaurant&lt;/code&gt; instances, you will need to serialize the &lt;code&gt;Place&lt;/code&gt; models as well:</source>
          <target state="translated">为了完全序列化您的 &lt;code&gt;Restaurant&lt;/code&gt; 实例，您还需要序列化 &lt;code&gt;Place&lt;/code&gt; 模型：</target>
        </trans-unit>
        <trans-unit id="814bf473789694253cf32579769ab02b74a9eb85" translate="yes" xml:space="preserve">
          <source>In order to guarantee atomicity, &lt;code&gt;atomic&lt;/code&gt; disables some APIs. Attempting to commit, roll back, or change the autocommit state of the database connection within an &lt;code&gt;atomic&lt;/code&gt; block will raise an exception.</source>
          <target state="translated">为了保证原子性， &lt;code&gt;atomic&lt;/code&gt; 禁用了一些API。尝试在 &lt;code&gt;atomic&lt;/code&gt; 块内提交，回滚或更改数据库连接的自动提交状态将引发异常。</target>
        </trans-unit>
        <trans-unit id="2d184cd5980dd60fc335a14a8588be38002eadd0" translate="yes" xml:space="preserve">
          <source>In order to guarantee that all &lt;code&gt;TestCase&lt;/code&gt; code starts with a clean database, the Django test runner reorders tests in the following way:</source>
          <target state="translated">为了确保所有 &lt;code&gt;TestCase&lt;/code&gt; 代码均以干净的数据库开头，Django测试运行器通过以下方式对测试进行重新排序：</target>
        </trans-unit>
        <trans-unit id="ebd5f1b685513a442ce3a791e86443cc357e3454" translate="yes" xml:space="preserve">
          <source>In order to handle this situation, you need to pass &lt;code&gt;handle_forward_references=True&lt;/code&gt; to &lt;code&gt;serializers.deserialize()&lt;/code&gt;. This will set the &lt;code&gt;deferred_fields&lt;/code&gt; attribute on the &lt;code&gt;DeserializedObject&lt;/code&gt; instances. You&amp;rsquo;ll need to keep track of &lt;code&gt;DeserializedObject&lt;/code&gt; instances where this attribute isn&amp;rsquo;t &lt;code&gt;None&lt;/code&gt; and later call &lt;code&gt;save_deferred_fields()&lt;/code&gt; on them.</source>
          <target state="translated">为了处理这种情况，您需要将 &lt;code&gt;handle_forward_references=True&lt;/code&gt; 传递给 &lt;code&gt;serializers.deserialize()&lt;/code&gt; 。这将在 &lt;code&gt;DeserializedObject&lt;/code&gt; 实例上设置 &lt;code&gt;deferred_fields&lt;/code&gt; 属性。您需要跟踪该属性不是 &lt;code&gt;None&lt;/code&gt; 的 &lt;code&gt;DeserializedObject&lt;/code&gt; 实例，然后在它们上调用 &lt;code&gt;save_deferred_fields()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8b2e79b4b6aa18a676e91499097aad9f8d4ed2dc" translate="yes" xml:space="preserve">
          <source>In order to make a Django project translatable, you have to add a minimal number of hooks to your Python code and templates. These hooks are called &lt;a href=&quot;index#term-translation-string&quot;&gt;translation strings&lt;/a&gt;. They tell Django: &amp;ldquo;This text should be translated into the end user&amp;rsquo;s language, if a translation for this text is available in that language.&amp;rdquo; It&amp;rsquo;s your responsibility to mark translatable strings; the system can only translate strings it knows about.</source>
          <target state="translated">为了使Django项目可翻译，您必须在Python代码和模板中添加最少数量的钩子。这些挂钩称为&lt;a href=&quot;index#term-translation-string&quot;&gt;翻译字符串&lt;/a&gt;。他们告诉Django：&amp;ldquo;如果可以使用该语言的翻译版本，则应将其翻译成最终用户的语言。&amp;rdquo; 标记可翻译字符串是您的责任；系统只能翻译它知道的字符串。</target>
        </trans-unit>
        <trans-unit id="fd427f482c454b8a176992fb9016a46f9519bd6a" translate="yes" xml:space="preserve">
          <source>In order to make error messages flexible and easy to override, consider the following guidelines:</source>
          <target state="translated">为了使错误信息灵活且易于覆盖,请考虑以下准则。</target>
        </trans-unit>
        <trans-unit id="4fbde88be4d3a61eb0fa9d81f26e60f25b7c967a" translate="yes" xml:space="preserve">
          <source>In order to meet the 30-char limitation Oracle has on table names, and match the usual conventions for Oracle databases, Django may shorten table names and turn them all-uppercase. To prevent such transformations, use a quoted name as the value for &lt;code&gt;db_table&lt;/code&gt;:</source>
          <target state="translated">为了满足Oracle对表名的30个字符的限制，并与Oracle数据库的常规约定匹配，Django可能会缩短表名并将它们全部大写。为防止此类转换，请使用带引号的名称作为 &lt;code&gt;db_table&lt;/code&gt; 的值：</target>
        </trans-unit>
        <trans-unit id="09f9a7ab0865d01d87a2c3387c4322fa09399408" translate="yes" xml:space="preserve">
          <source>In order to obtain a prepared geometry, access the &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.prepared&quot;&gt;&lt;code&gt;GEOSGeometry.prepared&lt;/code&gt;&lt;/a&gt; property. Once you have a &lt;code&gt;PreparedGeometry&lt;/code&gt; instance its spatial predicate methods, listed below, may be used with other &lt;code&gt;GEOSGeometry&lt;/code&gt; objects. An operation with a prepared geometry can be orders of magnitude faster &amp;ndash; the more complex the geometry that is prepared, the larger the speedup in the operation. For more information, please consult the &lt;a href=&quot;https://trac.osgeo.org/geos/wiki/PreparedGeometry&quot;&gt;GEOS wiki page on prepared geometries&lt;/a&gt;.</source>
          <target state="translated">为了获得准备好的几何图形，请访问&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.prepared&quot;&gt; &lt;code&gt;GEOSGeometry.prepared&lt;/code&gt; &lt;/a&gt;属性。有了 &lt;code&gt;PreparedGeometry&lt;/code&gt; 实例后，下面列出的其空间谓词方法可以与其他 &lt;code&gt;GEOSGeometry&lt;/code&gt; 对象一起使用。具有准备好的几何形状的操作可以快几个数量级&amp;ndash;准备的几何形状越复杂，操作的速度就越大。有关更多信息，请查阅&lt;a href=&quot;https://trac.osgeo.org/geos/wiki/PreparedGeometry&quot;&gt;有关准备好的几何图形&lt;/a&gt;的GEOS Wiki页面。</target>
        </trans-unit>
        <trans-unit id="197304082f996b82afb0836da69efaacaa7a04c7" translate="yes" xml:space="preserve">
          <source>In order to override one or more of them, first create an &lt;code&gt;admin&lt;/code&gt; directory in your project&amp;rsquo;s &lt;code&gt;templates&lt;/code&gt; directory. This can be any of the directories you specified in the &lt;a href=&quot;../../settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt; option of the &lt;code&gt;DjangoTemplates&lt;/code&gt; backend in the &lt;a href=&quot;../../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting. If you have customized the &lt;code&gt;'loaders'&lt;/code&gt; option, be sure &lt;code&gt;'django.template.loaders.filesystem.Loader'&lt;/code&gt; appears before &lt;code&gt;'django.template.loaders.app_directories.Loader'&lt;/code&gt; so that your custom templates will be found by the template loading system before those that are included with &lt;a href=&quot;#module-django.contrib.admin&quot;&gt;&lt;code&gt;django.contrib.admin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为了覆盖其中的一个或多个，首先在项目的 &lt;code&gt;templates&lt;/code&gt; 目录中创建一个 &lt;code&gt;admin&lt;/code&gt; 目录。这可以是任何你指定的目录中&lt;a href=&quot;../../settings#std:setting-TEMPLATES-DIRS&quot;&gt; &lt;code&gt;DIRS&lt;/code&gt; &lt;/a&gt;中的选项 &lt;code&gt;DjangoTemplates&lt;/code&gt; 在后端&lt;a href=&quot;../../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;设置。如果您已自定义 &lt;code&gt;'loaders'&lt;/code&gt; 选项，请确保在 &lt;code&gt;'django.template.loaders.filesystem.Loader'&lt;/code&gt; 之前出现 &lt;code&gt;'django.template.loaders.app_directories.Loader'&lt;/code&gt; 以便模板加载系统可以在此之前找到自定义模板。&lt;a href=&quot;#module-django.contrib.admin&quot;&gt; &lt;code&gt;django.contrib.admin&lt;/code&gt; &lt;/a&gt;附带的那些。</target>
        </trans-unit>
        <trans-unit id="6a3a6dec2c344fd808b8bba54d23e18d9e3ffaeb" translate="yes" xml:space="preserve">
          <source>In order to perform IP-based geolocation, the &lt;a href=&quot;#django.contrib.gis.geoip2.GeoIP2&quot;&gt;&lt;code&gt;GeoIP2&lt;/code&gt;&lt;/a&gt; object requires the &lt;a href=&quot;https://pypi.org/project/geoip2/&quot;&gt;geoip2 Python library&lt;/a&gt; and the GeoIP &lt;code&gt;Country&lt;/code&gt; and/or &lt;code&gt;City&lt;/code&gt;&lt;a href=&quot;https://dev.maxmind.com/geoip/geoip2/geolite2/&quot;&gt;datasets in binary format&lt;/a&gt; (the CSV files will not work!). Grab the &lt;code&gt;GeoLite2-Country.mmdb.gz&lt;/code&gt; and &lt;code&gt;GeoLite2-City.mmdb.gz&lt;/code&gt; files and unzip them in a directory corresponding to the &lt;a href=&quot;#std:setting-GEOIP_PATH&quot;&gt;&lt;code&gt;GEOIP_PATH&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">为了执行基于IP的地理定位，&lt;a href=&quot;#django.contrib.gis.geoip2.GeoIP2&quot;&gt; &lt;code&gt;GeoIP2&lt;/code&gt; &lt;/a&gt;对象需要使用&lt;a href=&quot;https://pypi.org/project/geoip2/&quot;&gt;geoip2 Python库&lt;/a&gt;以及&lt;a href=&quot;https://dev.maxmind.com/geoip/geoip2/geolite2/&quot;&gt;二进制格式&lt;/a&gt;的GeoIP &lt;code&gt;Country&lt;/code&gt; 和/或 &lt;code&gt;City&lt;/code&gt; 数据集（CSV文件将无法使用！）。抓住 &lt;code&gt;GeoLite2-Country.mmdb.gz&lt;/code&gt; 和 &lt;code&gt;GeoLite2-City.mmdb.gz&lt;/code&gt; 文件，并将其解压缩到对应的目录&lt;a href=&quot;#std:setting-GEOIP_PATH&quot;&gt; &lt;code&gt;GEOIP_PATH&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="95a595d960799ba8b0ca87e797be6ea493f08f8d" translate="yes" xml:space="preserve">
          <source>In order to perform URL reversing, you&amp;rsquo;ll need to use &lt;strong&gt;named URL patterns&lt;/strong&gt; as done in the examples above. The string used for the URL name can contain any characters you like. You are not restricted to valid Python names.</source>
          <target state="translated">为了执行URL反向，您需要像上面的示例一样使用&lt;strong&gt;命名的URL模式&lt;/strong&gt;。URL名称使用的字符串可以包含您喜欢的任何字符。您不限于有效的Python名称。</target>
        </trans-unit>
        <trans-unit id="6a68fede8724820357864706cab00502d65622e6" translate="yes" xml:space="preserve">
          <source>In order to protect against &lt;a href=&quot;http://breachattack.com/&quot;&gt;BREACH&lt;/a&gt; attacks, the token is not simply the secret; a random salt is prepended to the secret and used to scramble it.</source>
          <target state="translated">为了防止&lt;a href=&quot;http://breachattack.com/&quot;&gt;遭到BREACH&lt;/a&gt;攻击，令牌不仅仅是秘密。随机盐会添加到该秘密中并用于加扰。</target>
        </trans-unit>
        <trans-unit id="655aa485065fe0aea8855d7ccc45fba32956ce48" translate="yes" xml:space="preserve">
          <source>In order to resolve this ticket, we&amp;rsquo;ll add a &lt;code&gt;make_toast()&lt;/code&gt; function to the top-level &lt;code&gt;django&lt;/code&gt; module. First we are going to write a test that tries to use the function and check that its output looks correct.</source>
          <target state="translated">为了解决这个问题，我们将在顶层 &lt;code&gt;django&lt;/code&gt; 模块中添加一个 &lt;code&gt;make_toast()&lt;/code&gt; 函数。首先，我们将编写一个尝试使用该函数并测试其输出看起来正确的测试。</target>
        </trans-unit>
        <trans-unit id="f0a5f481c3502942e7d16bcd7a3cc304c2eefa6a" translate="yes" xml:space="preserve">
          <source>In order to restore the database state between tests for &lt;code&gt;TransactionTestCase&lt;/code&gt;s and database backends without transactions, Django will &lt;a href=&quot;../topics/testing/overview#test-case-serialized-rollback&quot;&gt;serialize the contents of all apps&lt;/a&gt; when it starts the test run so it can then reload from that copy before running tests that need it.</source>
          <target state="translated">为了在没有事务的情况下恢复 &lt;code&gt;TransactionTestCase&lt;/code&gt; 的测试和数据库后端之间的数据库状态，Django将在开始测试运行时&lt;a href=&quot;../topics/testing/overview#test-case-serialized-rollback&quot;&gt;对所有应用程序的内容进行序列化，&lt;/a&gt;以便在运行需要它的测试之前可以从该副本中重新加载。</target>
        </trans-unit>
        <trans-unit id="f0343766ff0b17d92d018f4427983d376ae25e60" translate="yes" xml:space="preserve">
          <source>In order to send email, Django requires a few settings telling it how to connect to your mail server. At the very least, you&amp;rsquo;ll need to specify &lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST&quot;&gt;&lt;code&gt;EMAIL_HOST&lt;/code&gt;&lt;/a&gt; and possibly &lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST_USER&quot;&gt;&lt;code&gt;EMAIL_HOST_USER&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST_PASSWORD&quot;&gt;&lt;code&gt;EMAIL_HOST_PASSWORD&lt;/code&gt;&lt;/a&gt;, though other settings may be also required depending on your mail server&amp;rsquo;s configuration. Consult &lt;a href=&quot;../ref/settings&quot;&gt;the Django settings documentation&lt;/a&gt; for a full list of email-related settings.</source>
          <target state="translated">为了发送电子邮件，Django需要一些设置来告诉它如何连接到您的邮件服务器。最起码，你需要指定&lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST&quot;&gt; &lt;code&gt;EMAIL_HOST&lt;/code&gt; &lt;/a&gt;并可能&lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST_USER&quot;&gt; &lt;code&gt;EMAIL_HOST_USER&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST_PASSWORD&quot;&gt; &lt;code&gt;EMAIL_HOST_PASSWORD&lt;/code&gt; &lt;/a&gt;，但其他设置可能会根据您的邮件服务器的配置中也是必需的。有关&lt;a href=&quot;../ref/settings&quot;&gt;与&lt;/a&gt;电子邮件相关的设置的完整列表，请参阅Django设置文档。</target>
        </trans-unit>
        <trans-unit id="26a276856b644a8829e847fabc786f7f950cbafe" translate="yes" xml:space="preserve">
          <source>In order to serialize objects other than &lt;code&gt;dict&lt;/code&gt; you must set the &lt;code&gt;safe&lt;/code&gt; parameter to &lt;code&gt;False&lt;/code&gt;:</source>
          <target state="translated">为了序列 &lt;code&gt;dict&lt;/code&gt; 之外的对象，必须将 &lt;code&gt;safe&lt;/code&gt; 参数设置为 &lt;code&gt;False&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="bef01765dc926124667e6f25f418d12592815fda" translate="yes" xml:space="preserve">
          <source>In order to serve different sites in production, you&amp;rsquo;d create a separate settings file with each &lt;code&gt;SITE_ID&lt;/code&gt; (perhaps importing from a common settings file to avoid duplicating shared settings) and then specify the appropriate &lt;a href=&quot;../../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt; for each site.</source>
          <target state="translated">为了在生产中为不同的站点提供服务，您将使用每个 &lt;code&gt;SITE_ID&lt;/code&gt; 创建一个单独的设置文件（也许从一个公共设置文件导入以避免重复的共享设置），然后为每个站点指定适当的&lt;a href=&quot;../../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f1fc64af07066814f008513d76447706a68a9ba2" translate="yes" xml:space="preserve">
          <source>In order to show customized HTML when Django returns a 404, you can create an HTML template named &lt;code&gt;404.html&lt;/code&gt; and place it in the top level of your template tree. This template will then be served when &lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">为了在Django返回404时显示自定义HTML，您可以创建一个名为 &lt;code&gt;404.html&lt;/code&gt; 的HTML模板并将其放在模板树的顶层。当&lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;False&lt;/code&gt; 时，将提供此模板。</target>
        </trans-unit>
        <trans-unit id="3409046afa59c093b23889795e8442232cd66efe" translate="yes" xml:space="preserve">
          <source>In order to test class-based views outside of the request/response cycle you must ensure that they are configured correctly, by calling &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.setup&quot;&gt;&lt;code&gt;setup()&lt;/code&gt;&lt;/a&gt; after instantiation.</source>
          <target state="translated">为了在请求/响应周期之外测试基于类的视图，必须通过在实例化后调用&lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.setup&quot;&gt; &lt;code&gt;setup()&lt;/code&gt; &lt;/a&gt;来确保已正确配置它们。</target>
        </trans-unit>
        <trans-unit id="8c0c7c490993a4b8206ebaa2bae3d78e513a3e92" translate="yes" xml:space="preserve">
          <source>In order to understand what happens in your query, consider inspecting the &lt;code&gt;query&lt;/code&gt; property of your &lt;code&gt;QuerySet&lt;/code&gt;.</source>
          <target state="translated">为了了解查询中会发生什么，请考虑检查 &lt;code&gt;QuerySet&lt;/code&gt; 的 &lt;code&gt;query&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="c570b617951053ed3053b9d4c9a52cb627915e3e" translate="yes" xml:space="preserve">
          <source>In order to use GeoDjango, you will need to add your Python and OSGeo4W directories to your Windows system &lt;code&gt;Path&lt;/code&gt;, as well as create &lt;code&gt;GDAL_DATA&lt;/code&gt; and &lt;code&gt;PROJ_LIB&lt;/code&gt; environment variables. The following set of commands, executable with &lt;code&gt;cmd.exe&lt;/code&gt;, will set this up:</source>
          <target state="translated">为了使用GeoDjango，您需要将Python和OSGeo4W目录添加到Windows系统 &lt;code&gt;Path&lt;/code&gt; ，并创建 &lt;code&gt;GDAL_DATA&lt;/code&gt; 和 &lt;code&gt;PROJ_LIB&lt;/code&gt; 环境变量。以下命令集（可使用 &lt;code&gt;cmd.exe&lt;/code&gt; 执行）将对此进行设置：</target>
        </trans-unit>
        <trans-unit id="ded6a8537ff07979ac6a5c88d86c82670bed0de7" translate="yes" xml:space="preserve">
          <source>In order to use another client-side library to handle translations, you may want to take advantage of the &lt;code&gt;JSONCatalog&lt;/code&gt; view. It&amp;rsquo;s similar to &lt;a href=&quot;#django.views.i18n.JavaScriptCatalog&quot;&gt;&lt;code&gt;JavaScriptCatalog&lt;/code&gt;&lt;/a&gt; but returns a JSON response.</source>
          <target state="translated">为了使用另一个客户端库来处理翻译，您可能需要利用 &lt;code&gt;JSONCatalog&lt;/code&gt; 视图。它类似于&lt;a href=&quot;#django.views.i18n.JavaScriptCatalog&quot;&gt; &lt;code&gt;JavaScriptCatalog&lt;/code&gt; ,&lt;/a&gt;但返回JSON响应。</target>
        </trans-unit>
        <trans-unit id="68a8c6184d43fa10d946434ba4ead136463b3827" translate="yes" xml:space="preserve">
          <source>In order to use the &lt;code&gt;Hand&lt;/code&gt; class in our models, we &lt;strong&gt;do not&lt;/strong&gt; have to change this class at all. This is ideal, because it means you can easily write model support for existing classes where you cannot change the source code.</source>
          <target state="translated">为了在我们的模型中使用 &lt;code&gt;Hand&lt;/code&gt; 类，我们&lt;strong&gt;根本不必&lt;/strong&gt;更改此类。这是理想的，因为这意味着您可以轻松地为无法更改源代码的现有类编写模型支持。</target>
        </trans-unit>
        <trans-unit id="482b7e02eb0c4ca18c3f11eba075a9c3cbab0ed5" translate="yes" xml:space="preserve">
          <source>In other words, if you set the name of the database in &lt;a href=&quot;settings#std:setting-OPTIONS&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt;, this will take precedence over &lt;a href=&quot;settings#std:setting-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt;, which would override anything in a &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/option-files.html&quot;&gt;MySQL option file&lt;/a&gt;.</source>
          <target state="translated">换句话说，如果您在&lt;a href=&quot;settings#std:setting-OPTIONS&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; 中&lt;/a&gt;设置数据库的名称，它将优先于&lt;a href=&quot;settings#std:setting-NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt;，后者将覆盖&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/option-files.html&quot;&gt;MySQL选项文件中的所有内容&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="348e74db786d501ec367bbeb95b86df85b7e5a62" translate="yes" xml:space="preserve">
          <source>In other words, the usual use is to examine the deserialized objects to make sure that they are &amp;ldquo;appropriate&amp;rdquo; for saving before doing so. Of course, if you trust your data source you can instead save the object directly and move on.</source>
          <target state="translated">换句话说，通常的用途是在进行反序列化的对象之前检查它们，以确保它们&amp;ldquo;适合&amp;rdquo;保存。当然，如果您信任数据源，则可以直接保存对象然后继续。</target>
        </trans-unit>
        <trans-unit id="87a0055fdb9b686309bb27e57a048438c7379179" translate="yes" xml:space="preserve">
          <source>In other words, to override a command, the new command must have the same name and its app must be before the overridden command&amp;rsquo;s app in &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">换句话说，要覆盖命令，新命令必须具有相同的名称，并且其应用必须在&lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 中&lt;/a&gt;被覆盖的命令的应用之前。</target>
        </trans-unit>
        <trans-unit id="b80ed963edad5d68b67324a7f70c9b908485886a" translate="yes" xml:space="preserve">
          <source>In other words, what&amp;rsquo;s needed is a DRY mechanism. Among other advantages it would allow evolution of the URL design without having to go over all the project source code to search and replace outdated URLs.</source>
          <target state="translated">换句话说，需要一种DRY机制。除其他优点外，它还允许URL设计的发展，而不必遍历所有项目源代码来搜索和替换过时的URL。</target>
        </trans-unit>
        <trans-unit id="321459efe8129cd478ea12c0e5f6183e07ff2a01" translate="yes" xml:space="preserve">
          <source>In other words, your applications&amp;rsquo; root packages and the modules that define your application configuration classes shouldn&amp;rsquo;t import any models, even indirectly.</source>
          <target state="translated">换句话说，应用程序的根包和定义应用程序配置类的模块不应导入任何模型，即使是间接导入的模型也不应。</target>
        </trans-unit>
        <trans-unit id="87949143eea93ab9a8d8bacabc4b969b2cd76026" translate="yes" xml:space="preserve">
          <source>In our &lt;code&gt;HandField&lt;/code&gt; class, we&amp;rsquo;re storing the data as a VARCHAR field in the database, so we need to be able to process strings and &lt;code&gt;None&lt;/code&gt; in the &lt;code&gt;from_db_value()&lt;/code&gt;. In &lt;code&gt;to_python()&lt;/code&gt;, we need to also handle &lt;code&gt;Hand&lt;/code&gt; instances:</source>
          <target state="translated">在我们 &lt;code&gt;HandField&lt;/code&gt; 节课，我们将数据存储在数据库中的VARCHAR字段，所以我们需要能够处理字符串，并 &lt;code&gt;None&lt;/code&gt; 在 &lt;code&gt;from_db_value()&lt;/code&gt; 。在 &lt;code&gt;to_python()&lt;/code&gt; 中，我们还需要处理 &lt;code&gt;Hand&lt;/code&gt; 实例：</target>
        </trans-unit>
        <trans-unit id="8ec59e4ab401ce0ece29fca3cb173154f5ebfc03" translate="yes" xml:space="preserve">
          <source>In our example, we&amp;rsquo;ll call our field &lt;code&gt;HandField&lt;/code&gt;. (It&amp;rsquo;s a good idea to call your &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; subclass &lt;code&gt;&amp;lt;Something&amp;gt;Field&lt;/code&gt;, so it&amp;rsquo;s easily identifiable as a &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; subclass.) It doesn&amp;rsquo;t behave like any existing field, so we&amp;rsquo;ll subclass directly from &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">在我们的示例中，我们将其称为字段 &lt;code&gt;HandField&lt;/code&gt; 。（将&lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;子类称为 &lt;code&gt;&amp;lt;Something&amp;gt;Field&lt;/code&gt; 是一个好主意，因此可以很容易地将其标识为&lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;子类。）它的行为不像任何现有字段，因此我们将直接从&lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; 进行&lt;/a&gt;子类化：</target>
        </trans-unit>
        <trans-unit id="200d03f759a98a5f63a0cca6040dab99cbf456aa" translate="yes" xml:space="preserve">
          <source>In our first test, we focused closely on the internal behavior of the code. For this test, we want to check its behavior as it would be experienced by a user through a web browser.</source>
          <target state="translated">在第一个测试中,我们密切关注代码的内部行为。在这个测试中,我们想检查它的行为,就像用户通过网络浏览器所体验到的那样。</target>
        </trans-unit>
        <trans-unit id="be3f232c87c2467fa6a724407cf4bb950c14ef61" translate="yes" xml:space="preserve">
          <source>In our poll app, we&amp;rsquo;ll create two models: &lt;code&gt;Question&lt;/code&gt; and &lt;code&gt;Choice&lt;/code&gt;. A &lt;code&gt;Question&lt;/code&gt; has a question and a publication date. A &lt;code&gt;Choice&lt;/code&gt; has two fields: the text of the choice and a vote tally. Each &lt;code&gt;Choice&lt;/code&gt; is associated with a &lt;code&gt;Question&lt;/code&gt;.</source>
          <target state="translated">在我们的民意调查应用程序中，我们将创建两个模型： &lt;code&gt;Question&lt;/code&gt; 和 &lt;code&gt;Choice&lt;/code&gt; 。一个 &lt;code&gt;Question&lt;/code&gt; 有一个问题和出版日期。&amp;ldquo; &lt;code&gt;Choice&lt;/code&gt; 有两个字段：选择的文本和投票提示。每个 &lt;code&gt;Choice&lt;/code&gt; 都与一个 &lt;code&gt;Question&lt;/code&gt; 相关联。</target>
        </trans-unit>
        <trans-unit id="8c9571e16932b147d1f1c8511a5d04504310d27a" translate="yes" xml:space="preserve">
          <source>In our poll application, we&amp;rsquo;ll have the following four views:</source>
          <target state="translated">在我们的民意调查应用程序中，我们将具有以下四个视图：</target>
        </trans-unit>
        <trans-unit id="bf972e12a966ca6c6eecb8fe6283423f8ce689ac" translate="yes" xml:space="preserve">
          <source>In practice you&amp;rsquo;d probably want to record the interest in a key-value store rather than in a relational database, so we&amp;rsquo;ve left that bit out. The only bit of the view that needs to worry about using &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt; is where we want to look up the author we&amp;rsquo;re interested in, which it does with a call to &lt;code&gt;self.get_object()&lt;/code&gt;. Everything else is taken care of for us by the mixin.</source>
          <target state="translated">实际上，您可能希望将兴趣记录在键值存储中，而不是关系数据库中，因此我们省略了这一点。该视图中唯一需要担心使用&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt; &lt;code&gt;SingleObjectMixin&lt;/code&gt; &lt;/a&gt;的地方是我们要查找感兴趣的作者的地方，它通过调用 &lt;code&gt;self.get_object()&lt;/code&gt; 来完成。mixin会为我们处理其他所有事务。</target>
        </trans-unit>
        <trans-unit id="f5a8cc8880a64d6f073c4d7908bd6dba8d796910" translate="yes" xml:space="preserve">
          <source>In practice you&amp;rsquo;ll use this to get a string you can use in multiple places in a template or so you can use the output as an argument for other template tags or filters.</source>
          <target state="translated">在实践中，您将使用它来获取可在模板中的多个位置使用的字符串，或者将输出用作其他模板标签或过滤器的参数。</target>
        </trans-unit>
        <trans-unit id="b07696c8063df15fbf4c588d34e006df6dbe3901" translate="yes" xml:space="preserve">
          <source>In practice you&amp;rsquo;ll use this to get a string you can use in multiple places in a template or so you can use the output as an argument for other template tags or filters:</source>
          <target state="translated">在实践中，您将使用它来获取可在模板中的多个位置使用的字符串，或将输出用作其他模板标签或过滤器的参数：</target>
        </trans-unit>
        <trans-unit id="d297ccfa88b8ebaa61778e3119442058ee0cb9c0" translate="yes" xml:space="preserve">
          <source>In practice, it&amp;rsquo;s often easiest to use &lt;code&gt;chunks()&lt;/code&gt; all the time. Looping over &lt;code&gt;chunks()&lt;/code&gt; instead of using &lt;code&gt;read()&lt;/code&gt; ensures that large files don&amp;rsquo;t overwhelm your system&amp;rsquo;s memory.</source>
          <target state="translated">在实践中，通常总是最容易使用 &lt;code&gt;chunks()&lt;/code&gt; 。循环使用 &lt;code&gt;chunks()&lt;/code&gt; 而不是使用 &lt;code&gt;read()&lt;/code&gt; 可确保大文件不会淹没您系统的内存。</target>
        </trans-unit>
        <trans-unit id="1b8e788eb6f744c88e1daabbf412406627452a09" translate="yes" xml:space="preserve">
          <source>In practice, signal handlers are usually defined in a &lt;code&gt;signals&lt;/code&gt; submodule of the application they relate to. Signal receivers are connected in the &lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;ready()&lt;/code&gt;&lt;/a&gt; method of your application configuration class. If you&amp;rsquo;re using the &lt;a href=&quot;#django.dispatch.receiver&quot;&gt;&lt;code&gt;receiver()&lt;/code&gt;&lt;/a&gt; decorator, import the &lt;code&gt;signals&lt;/code&gt; submodule inside &lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;ready()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">实际上，信号处理程序通常是在与之相关的应用程序的 &lt;code&gt;signals&lt;/code&gt; 子模块中定义的。信号接收器连接在应用程序配置类的&lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt; &lt;code&gt;ready()&lt;/code&gt; &lt;/a&gt;方法中。如果您使用的是&lt;a href=&quot;#django.dispatch.receiver&quot;&gt; &lt;code&gt;receiver()&lt;/code&gt; &lt;/a&gt;装饰器，则将 &lt;code&gt;signals&lt;/code&gt; 子模块导入&lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt; &lt;code&gt;ready()&lt;/code&gt; 内&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e303b3791ba00ba2f2730c84ffcba41b1b0fece" translate="yes" xml:space="preserve">
          <source>In practice, this feature wraps every view function in the &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; decorator described below.</source>
          <target state="translated">实际上，此功能将每个视图函数包装在下面描述的&lt;a href=&quot;#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt;装饰器中。</target>
        </trans-unit>
        <trans-unit id="807d6a79df3e61ec95aafb0098dd4efac1e3da72" translate="yes" xml:space="preserve">
          <source>In practice, this is rarely an issue. Django gives you aware datetime objects in the models and forms, and most often, new datetime objects are created from existing ones through &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; arithmetic. The only datetime that&amp;rsquo;s often created in application code is the current time, and &lt;a href=&quot;../../ref/utils#django.utils.timezone.now&quot;&gt;&lt;code&gt;timezone.now()&lt;/code&gt;&lt;/a&gt; automatically does the right thing.</source>
          <target state="translated">实际上，这很少是一个问题。Django在模型和表单中为您提供了明显的datetime对象，并且最常见的是，新的datetime对象是通过&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;算法从现有对象中创建的。通常在应用程序代码中创建的唯一日期时间是当前时间，并且&lt;a href=&quot;../../ref/utils#django.utils.timezone.now&quot;&gt; &lt;code&gt;timezone.now()&lt;/code&gt; &lt;/a&gt;自动执行正确的操作。</target>
        </trans-unit>
        <trans-unit id="b637ff00ea296f5217d7753924c94e2a84bd6acf" translate="yes" xml:space="preserve">
          <source>In practice, you probably won&amp;rsquo;t need to use &lt;a href=&quot;#django.contrib.auth.models.AnonymousUser&quot;&gt;&lt;code&gt;AnonymousUser&lt;/code&gt;&lt;/a&gt; objects on your own, but they&amp;rsquo;re used by Web requests, as explained in the next section.</source>
          <target state="translated">实际上，您可能不需要自己使用&lt;a href=&quot;#django.contrib.auth.models.AnonymousUser&quot;&gt; &lt;code&gt;AnonymousUser&lt;/code&gt; &lt;/a&gt;对象，但是Web请求将使用它们，如下一节所述。</target>
        </trans-unit>
        <trans-unit id="05f63b699e28cf435f1bb4b69860a1d658a1a201" translate="yes" xml:space="preserve">
          <source>In practice, you will usually specify &lt;code&gt;request.FILES&lt;/code&gt; as the source of file data (just like you use &lt;code&gt;request.POST&lt;/code&gt; as the source of form data):</source>
          <target state="translated">实际上，通常会指定 &lt;code&gt;request.FILES&lt;/code&gt; 作为文件数据的源（就像您将 &lt;code&gt;request.POST&lt;/code&gt; 作为表单数据的源一样）：</target>
        </trans-unit>
        <trans-unit id="b18791ebd38e85110f995871c6815d3b19ab08ca" translate="yes" xml:space="preserve">
          <source>In previous parts of the tutorial, the templates have been provided with a context that contains the &lt;code&gt;question&lt;/code&gt; and &lt;code&gt;latest_question_list&lt;/code&gt; context variables. For &lt;code&gt;DetailView&lt;/code&gt; the &lt;code&gt;question&lt;/code&gt; variable is provided automatically &amp;ndash; since we&amp;rsquo;re using a Django model (&lt;code&gt;Question&lt;/code&gt;), Django is able to determine an appropriate name for the context variable. However, for ListView, the automatically generated context variable is &lt;code&gt;question_list&lt;/code&gt;. To override this we provide the &lt;code&gt;context_object_name&lt;/code&gt; attribute, specifying that we want to use &lt;code&gt;latest_question_list&lt;/code&gt; instead. As an alternative approach, you could change your templates to match the new default context variables &amp;ndash; but it&amp;rsquo;s a lot easier to tell Django to use the variable you want.</source>
          <target state="translated">在本教程的前面部分中，已为模板提供了一个上下文，该上下文包含 &lt;code&gt;question&lt;/code&gt; 和 &lt;code&gt;latest_question_list&lt;/code&gt; 上下文变量。对于 &lt;code&gt;DetailView&lt;/code&gt; ,将自动提供 &lt;code&gt;question&lt;/code&gt; 变量-由于我们使用的是Django模型（ &lt;code&gt;Question&lt;/code&gt; ），因此Django能够为上下文变量确定适当的名称。但是，对于ListView，自动生成的上下文变量是 &lt;code&gt;question_list&lt;/code&gt; 。要覆盖此内容，我们提供 &lt;code&gt;context_object_name&lt;/code&gt; 属性，指定我们要使用 &lt;code&gt;latest_question_list&lt;/code&gt; 代替。作为一种替代方法，您可以更改模板以匹配新的默认上下文变量，但是告诉Django使用所需的变量要容易得多。</target>
        </trans-unit>
        <trans-unit id="1f6f3aa09d467d54d4f032943cbd599296ba5ef5" translate="yes" xml:space="preserve">
          <source>In previous versions of Django, it was necessary to first annotate and then filter against the annotation. This resulted in the annotated value always being present in the query result, and often resulted in a query that took more time to execute.</source>
          <target state="translated">在以前的Django版本中,需要先进行注释,然后根据注释进行过滤。这导致注解的值总是出现在查询结果中,往往导致查询的执行时间增加。</target>
        </trans-unit>
        <trans-unit id="857c7ad4641da7dfb7c6325f24baaa53cf1e388e" translate="yes" xml:space="preserve">
          <source>In short, when multiple simultaneous requests from the same client are involved, messages are not guaranteed to be delivered to the same window that created them nor, in some cases, at all. Note that this is typically not a problem in most applications and will become a non-issue in HTML5, where each window/tab will have its own browsing context.</source>
          <target state="translated">简而言之,当涉及来自同一客户端的多个同步请求时,不能保证将消息传递到创建这些请求的同一个窗口,在某些情况下,也不能保证将消息传递到所有窗口。请注意,这在大多数应用程序中通常不是问题,在 HTML5 中,这将成为一个非问题,因为在 HTML5 中,每个窗口/标签都有自己的浏览上下文。</target>
        </trans-unit>
        <trans-unit id="c1af56e92f61b1b8ed524de14c455aa50b0aab85" translate="yes" xml:space="preserve">
          <source>In some cases you may wish to dynamically change which &lt;code&gt;Transform&lt;/code&gt; or &lt;code&gt;Lookup&lt;/code&gt; is returned based on the name passed in, rather than fixing it. As an example, you could have a field which stores coordinates or an arbitrary dimension, and wish to allow a syntax like &lt;code&gt;.filter(coords__x7=4)&lt;/code&gt; to return the objects where the 7th coordinate has value 4. In order to do this, you would override &lt;code&gt;get_lookup&lt;/code&gt; with something like:</source>
          <target state="translated">在某些情况下，您可能希望根据传入的名称动态更改返回的&amp;ldquo; &lt;code&gt;Transform&lt;/code&gt; 或&amp;ldquo; &lt;code&gt;Lookup&lt;/code&gt; ，而不是对其进行修复。例如，您可能有一个存储坐标或任意维度的字段，并且希望允许 &lt;code&gt;.filter(coords__x7=4)&lt;/code&gt; 之类的语法返回第7个坐标值为4的对象。为此，您可以将使用类似以下内容覆盖 &lt;code&gt;get_lookup&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5fdef86b13548e606f863fbd8e30806d3a23d8c0" translate="yes" xml:space="preserve">
          <source>In some cases you might want to capture the result of &lt;code&gt;widthratio&lt;/code&gt; in a variable. It can be useful, for instance, in a &lt;a href=&quot;../../topics/i18n/translation#std:templatetag-blocktrans&quot;&gt;&lt;code&gt;blocktrans&lt;/code&gt;&lt;/a&gt; like this:</source>
          <target state="translated">在某些情况下，您可能想在一个变量中捕获 &lt;code&gt;widthratio&lt;/code&gt; 的结果。例如，在如下所示的&lt;a href=&quot;../../topics/i18n/translation#std:templatetag-blocktrans&quot;&gt; &lt;code&gt;blocktrans&lt;/code&gt; 中&lt;/a&gt;它可能是有用的：</target>
        </trans-unit>
        <trans-unit id="1b575c3528640df48c24349d84fecc89450e51b0" translate="yes" xml:space="preserve">
          <source>In some cases you might want to refer to the current value of a cycle without advancing to the next value. To do this, give the &lt;code&gt;{% cycle %}&lt;/code&gt; tag a name, using &amp;ldquo;as&amp;rdquo;, like this:</source>
          <target state="translated">在某些情况下，您可能希望引用循环的当前值而不前进到下一个值。为此，请使用 &lt;code&gt;{% cycle %}&lt;/code&gt; as&amp;ldquo; 为{％cycle％}标签命名，如下所示：</target>
        </trans-unit>
        <trans-unit id="29c5cbea71be2c58cfaf5424459023b0c9686745" translate="yes" xml:space="preserve">
          <source>In some cases, such as strings with a percent sign followed by a space and a &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#old-string-formatting&quot;&gt;string conversion type&lt;/a&gt; (e.g. &lt;code&gt;_(&quot;10% interest&quot;)&lt;/code&gt;), &lt;a href=&quot;../../ref/utils#django.utils.translation.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; incorrectly flags strings with &lt;code&gt;python-format&lt;/code&gt;.</source>
          <target state="translated">在某些情况下，例如带百分号，空格和&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#old-string-formatting&quot;&gt;字符串转换类型&lt;/a&gt;的字符串（例如 &lt;code&gt;_(&quot;10% interest&quot;)&lt;/code&gt; ），&lt;a href=&quot;../../ref/utils#django.utils.translation.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;错误地标记了 &lt;code&gt;python-format&lt;/code&gt; 字符串。</target>
        </trans-unit>
        <trans-unit id="0daf50f8b596a24cd4a4b70959499e29894a58dc" translate="yes" xml:space="preserve">
          <source>In some cases, you might want to bypass the &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; environment variable. For example, if you&amp;rsquo;re using the template system by itself, you likely don&amp;rsquo;t want to have to set up an environment variable pointing to a settings module.</source>
          <target state="translated">在某些情况下，您可能希望绕过 &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; 环境变量。例如，如果您单独使用模板系统，则可能不需要设置指向设置模块的环境变量。</target>
        </trans-unit>
        <trans-unit id="8dbcdb94c1eff87b6c56ef91c1c4506628f40cf0" translate="yes" xml:space="preserve">
          <source>In some cases, you won&amp;rsquo;t need to register your check function &amp;ndash; you can piggyback on an existing registration.</source>
          <target state="translated">在某些情况下，您不需要注册检查功能-您可以搭载现有的注册。</target>
        </trans-unit>
        <trans-unit id="8a2f86e668a97029be624ec47a33ad2137608e0e" translate="yes" xml:space="preserve">
          <source>In some circumstances, the code connecting receivers to signals may run multiple times. This can cause your receiver function to be registered more than once, and thus called multiple times for a single signal event.</source>
          <target state="translated">在某些情况下,连接接收器和信号的代码可能会运行多次。这可能会导致你的接收器函数被注册一次以上,从而对一个信号事件进行多次调用。</target>
        </trans-unit>
        <trans-unit id="79d711a83ce7a924bc3594bf29585bfc7129050d" translate="yes" xml:space="preserve">
          <source>In some complex data-modeling situations, your models might contain a lot of fields, some of which could contain a lot of data (for example, text fields), or require expensive processing to convert them to Python objects. If you are using the results of a queryset in some situation where you don&amp;rsquo;t know if you need those particular fields when you initially fetch the data, you can tell Django not to retrieve them from the database.</source>
          <target state="translated">在某些复杂的数据建模情况下，您的模型可能包含很多字段，其中一些字段可能包含很多数据（例如，文本字段），或者需要昂贵的处理才能将它们转换为Python对象。如果您在某些情况下使用查询集的结果，而这些情况在您最初获取数据时不知道是否需要这些特定字段，则可以告诉Django不要从数据库中检索它们。</target>
        </trans-unit>
        <trans-unit id="2774cd9614848bc838324a9f3925846c843cbd6c" translate="yes" xml:space="preserve">
          <source>In some rare cases, you might wish to pass parameters to the SQL fragments in &lt;code&gt;extra(select=...)&lt;/code&gt;. For this purpose, use the &lt;code&gt;select_params&lt;/code&gt; parameter.</source>
          <target state="translated">在极少数情况下，您可能希望将参数传递给 &lt;code&gt;extra(select=...)&lt;/code&gt; 中的SQL片段。为此，请使用 &lt;code&gt;select_params&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="4b48e88bf410f2cba633c2cb412176cbfa3a3eb6" translate="yes" xml:space="preserve">
          <source>In some rare circumstances, it&amp;rsquo;s necessary to be able to force the &lt;a href=&quot;#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; method to perform an SQL &lt;code&gt;INSERT&lt;/code&gt; and not fall back to doing an &lt;code&gt;UPDATE&lt;/code&gt;. Or vice-versa: update, if possible, but not insert a new row. In these cases you can pass the &lt;code&gt;force_insert=True&lt;/code&gt; or &lt;code&gt;force_update=True&lt;/code&gt; parameters to the &lt;a href=&quot;#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; method. Passing both parameters is an error: you cannot both insert &lt;em&gt;and&lt;/em&gt; update at the same time!</source>
          <target state="translated">在极少数情况下，有必要能够强制&lt;a href=&quot;#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;方法执行SQL &lt;code&gt;INSERT&lt;/code&gt; ,而不能退一步来执行 &lt;code&gt;UPDATE&lt;/code&gt; 。反之亦然：如果可能，请更新，但不要插入新行。在这些情况下，您可以将 &lt;code&gt;force_insert=True&lt;/code&gt; 或 &lt;code&gt;force_update=True&lt;/code&gt; 参数传递给&lt;a href=&quot;#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;方法。传递两个参数是一个错误：您不能同时插入&lt;em&gt;和&lt;/em&gt;更新！</target>
        </trans-unit>
        <trans-unit id="ce736764b432a2fae47c89320e8e9fd2392f9dd8" translate="yes" xml:space="preserve">
          <source>In some scenarios where views are of a generic nature, a many-to-one relationship might exist between URLs and views. For these cases the view name isn&amp;rsquo;t a good enough identifier for it when comes the time of reversing URLs. Read the next section to know about the solution Django provides for this.</source>
          <target state="translated">在视图具有一般性质的某些情况下，URL和视图之间可能存在多对一关系。对于这些情况，在反向URL时，视图名称并不是一个足够好的标识符。阅读下一节以了解Django为此提供的解决方案。</target>
        </trans-unit>
        <trans-unit id="b1e5d19e9d9d33f10b0a69c92fa82b62a739e1d4" translate="yes" xml:space="preserve">
          <source>In statement 1, a new &lt;code&gt;Person&lt;/code&gt; object is saved to the &lt;code&gt;first&lt;/code&gt; database. At this time, &lt;code&gt;p&lt;/code&gt; doesn&amp;rsquo;t have a primary key, so Django issues an SQL &lt;code&gt;INSERT&lt;/code&gt; statement. This creates a primary key, and Django assigns that primary key to &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">在语句1中，将新的 &lt;code&gt;Person&lt;/code&gt; 对象保存到第 &lt;code&gt;first&lt;/code&gt; 数据库。目前， &lt;code&gt;p&lt;/code&gt; 没有主键，因此Django发出SQL &lt;code&gt;INSERT&lt;/code&gt; 语句。这将创建一个主键，并且Django将该主键分配给 &lt;code&gt;p&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e064abd9ffdc8b00766db1b2b02b9688bf7b519c" translate="yes" xml:space="preserve">
          <source>In templates: Using the &lt;a href=&quot;../../ref/templates/builtins#std:templatetag-url&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; template tag.</source>
          <target state="translated">在模板中：使用&lt;a href=&quot;../../ref/templates/builtins#std:templatetag-url&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt;模板标记。</target>
        </trans-unit>
        <trans-unit id="cfdab87bc82efd3797239c4ba21d1d79e927c429" translate="yes" xml:space="preserve">
          <source>In that &lt;code&gt;register.inclusion_tag()&lt;/code&gt; line, we specified &lt;code&gt;takes_context=True&lt;/code&gt; and the name of the template. Here&amp;rsquo;s what the template &lt;code&gt;link.html&lt;/code&gt; might look like:</source>
          <target state="translated">在该 &lt;code&gt;register.inclusion_tag()&lt;/code&gt; 行中，我们指定了 &lt;code&gt;takes_context=True&lt;/code&gt; 和模板的名称。模板 &lt;code&gt;link.html&lt;/code&gt; 可能如下所示：</target>
        </trans-unit>
        <trans-unit id="67c01f0adefa1043d3003b730cd2f663f4b756b7" translate="yes" xml:space="preserve">
          <source>In that form, the &amp;ldquo;Question&amp;rdquo; field is a select box containing every question in the database. Django knows that a &lt;a href=&quot;../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; should be represented in the admin as a &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; box. In our case, only one question exists at this point.</source>
          <target state="translated">以这种形式，&amp;ldquo;问题&amp;rdquo;字段是一个选择框，其中包含数据库中的每个问题。Django知道，&lt;a href=&quot;../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;应该在管理员中表示为 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 框。在我们的案例中，此时仅存在一个问题。</target>
        </trans-unit>
        <trans-unit id="e16803d7e5444774cf1847606a924ea98fc0f9ff" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;#built-in-field-classes&quot;&gt;built-in Field classes&lt;/a&gt; section below, each &lt;code&gt;Field&lt;/code&gt; defines the error message keys it uses.</source>
          <target state="translated">在下面的&lt;a href=&quot;#built-in-field-classes&quot;&gt;内置字段类&lt;/a&gt;部分中，每个 &lt;code&gt;Field&lt;/code&gt; 定义其使用的错误消息键。</target>
        </trans-unit>
        <trans-unit id="4b8de39169c018ef000a9984f73650a25eb94d98" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;../../topics/auth/index#module-django.contrib.auth&quot;&gt;&lt;code&gt;authentication framework&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../topics/auth/default#django.contrib.auth.views.LoginView&quot;&gt;&lt;code&gt;django.contrib.auth.views.LoginView&lt;/code&gt;&lt;/a&gt; passes the current &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; name to the template as &lt;code&gt;{{ site_name }}&lt;/code&gt;.</source>
          <target state="translated">在&lt;a href=&quot;../../topics/auth/index#module-django.contrib.auth&quot;&gt; &lt;code&gt;authentication framework&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../topics/auth/default#django.contrib.auth.views.LoginView&quot;&gt; &lt;code&gt;django.contrib.auth.views.LoginView&lt;/code&gt; &lt;/a&gt;将当前&lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt;名称作为 &lt;code&gt;{{ site_name }}&lt;/code&gt; 传递给模板。</target>
        </trans-unit>
        <trans-unit id="f38cdaf92023e3d5b6ad536a62d5ac0850443cb2" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;../ref/contrib/admin/admindocs#module-django.contrib.admindocs&quot;&gt;&lt;code&gt;django.contrib.admindocs&lt;/code&gt;&lt;/a&gt; display, the field description is interpolated with &lt;code&gt;field.__dict__&lt;/code&gt; which allows the description to incorporate arguments of the field. For example, the description for &lt;a href=&quot;../ref/models/fields#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; is:</source>
          <target state="translated">在&lt;a href=&quot;../ref/contrib/admin/admindocs#module-django.contrib.admindocs&quot;&gt; &lt;code&gt;django.contrib.admindocs&lt;/code&gt; &lt;/a&gt;显示中，字段描述用 &lt;code&gt;field.__dict__&lt;/code&gt; 插值，这允许描述包含字段的参数。例如对于&lt;a href=&quot;../ref/models/fields#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;的描述是：</target>
        </trans-unit>
        <trans-unit id="61a99f888da03252e37a49dc94b253027356d243" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;flatpages#module-django.contrib.flatpages&quot;&gt;&lt;code&gt;flatpages framework&lt;/code&gt;&lt;/a&gt;, each flatpage is associated with a particular site. When a flatpage is created, you specify its &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt;, and the &lt;a href=&quot;flatpages#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt;&lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt;&lt;/a&gt; checks the current site in retrieving flatpages to display.</source>
          <target state="translated">在&lt;a href=&quot;flatpages#module-django.contrib.flatpages&quot;&gt; &lt;code&gt;flatpages framework&lt;/code&gt; &lt;/a&gt;，每个flatpage与一个特定站点相关联。创建&lt;a href=&quot;flatpages#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt; &lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt; &lt;/a&gt;页面时，请指定其&lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt;，然后FlatpageFallbackMiddleware会在检索要显示的平面页面时检查当前站点。</target>
        </trans-unit>
        <trans-unit id="ab0e7037c1bb990ccc8f0010f58edfb9050005ab" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;redirects#module-django.contrib.redirects&quot;&gt;&lt;code&gt;redirects framework&lt;/code&gt;&lt;/a&gt;, each redirect object is associated with a particular site. When Django searches for a redirect, it takes into account the current site.</source>
          <target state="translated">在&lt;a href=&quot;redirects#module-django.contrib.redirects&quot;&gt; &lt;code&gt;redirects framework&lt;/code&gt; &lt;/a&gt;，每个重定向对象都与一个特定站点相关联。Django搜索重定向时，它会考虑当前站点。</target>
        </trans-unit>
        <trans-unit id="e00c865684c73ed393c739c654ec70b0bd8e2997" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;syndication#module-django.contrib.syndication&quot;&gt;&lt;code&gt;syndication framework&lt;/code&gt;&lt;/a&gt;, the templates for &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt; automatically have access to a variable &lt;code&gt;{{ site }}&lt;/code&gt;, which is the &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; object representing the current site. Also, the hook for providing item URLs will use the &lt;code&gt;domain&lt;/code&gt; from the current &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; object if you don&amp;rsquo;t specify a fully-qualified domain.</source>
          <target state="translated">在&lt;a href=&quot;syndication#module-django.contrib.syndication&quot;&gt; &lt;code&gt;syndication framework&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;title&lt;/code&gt; 和 &lt;code&gt;description&lt;/code&gt; 模板自动访问变量 &lt;code&gt;{{ site }}&lt;/code&gt; ，变量{{site}}是代表当前站点的&lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt;对象。此外，钩提供项目的URL会使用 &lt;code&gt;domain&lt;/code&gt; 从当前&lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt;的对象，如果你不指定一个完全合格的域名。</target>
        </trans-unit>
        <trans-unit id="3cae9da1a42439d27f7e2fc7772d9140895ca585" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;as_p()&lt;/code&gt;, &lt;code&gt;as_ul()&lt;/code&gt; and &lt;code&gt;as_table()&lt;/code&gt; shortcuts, the fields are displayed in the order in which you define them in your form class. For example, in the &lt;code&gt;ContactForm&lt;/code&gt; example, the fields are defined in the order &lt;code&gt;subject&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt;, &lt;code&gt;sender&lt;/code&gt;, &lt;code&gt;cc_myself&lt;/code&gt;. To reorder the HTML output, change the order in which those fields are listed in the class.</source>
          <target state="translated">在 &lt;code&gt;as_p()&lt;/code&gt; ， &lt;code&gt;as_ul()&lt;/code&gt; 和 &lt;code&gt;as_table()&lt;/code&gt; 快捷方式中，以在表单类中定义字段的顺序显示字段。例如，在 &lt;code&gt;ContactForm&lt;/code&gt; 示例中，按 &lt;code&gt;subject&lt;/code&gt; ， &lt;code&gt;message&lt;/code&gt; ， &lt;code&gt;sender&lt;/code&gt; ， &lt;code&gt;cc_myself&lt;/code&gt; 定义字段。要重新排序HTML输出，请更改类中列出这些字段的顺序。</target>
        </trans-unit>
        <trans-unit id="6ca61b57511e0384cfa193f4c62191a0072117aa" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;fixtures&lt;/code&gt; directory of every installed application</source>
          <target state="translated">在每个已安装应用程序的 &lt;code&gt;fixtures&lt;/code&gt; 目录中</target>
        </trans-unit>
        <trans-unit id="c2e20542720527ab7cf07a8cbe445b23385b59fc" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;polls/urls.py&lt;/code&gt; file include the following code:</source>
          <target state="translated">在 &lt;code&gt;polls/urls.py&lt;/code&gt; 文件中，包含以下代码：</target>
        </trans-unit>
        <trans-unit id="7e79d1c3816db22dfa49e704e2e1e701d76541a2" translate="yes" xml:space="preserve">
          <source>In the GitHub scenario, the session cookie would be allowed when following a regular link from an external website and be blocked in CSRF-prone request methods (e.g. &lt;code&gt;POST&lt;/code&gt;).</source>
          <target state="translated">在GitHub场景中，当遵循来自外部网站的常规链接时，将允许会话cookie，并在倾向于CSRF的请求方法（例如 &lt;code&gt;POST&lt;/code&gt; ）中将其阻止。</target>
        </trans-unit>
        <trans-unit id="a35e39704ca75e16ec151ec02bb8d09c5245b059" translate="yes" xml:space="preserve">
          <source>In the SQL standards, each SQL query starts a transaction, unless one is already active. Such transactions must then be explicitly committed or rolled back.</source>
          <target state="translated">在SQL标准中,每个SQL查询都会启动一个事务,除非一个事务已经处于活动状态。然后,这种事务必须明确地提交或回滚。</target>
        </trans-unit>
        <trans-unit id="d85d9726aad9b5761b698a91a3fa752dcf0b2bef" translate="yes" xml:space="preserve">
          <source>In the above example, &lt;code&gt;{{ section.title }}&lt;/code&gt; will be replaced with the &lt;code&gt;title&lt;/code&gt; attribute of the &lt;code&gt;section&lt;/code&gt; object.</source>
          <target state="translated">在上面的示例中， &lt;code&gt;{{ section.title }}&lt;/code&gt; 将替换为 &lt;code&gt;section&lt;/code&gt; 对象的 &lt;code&gt;title&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="c8e400b0450098c588ff1bf9ef3ced42847e2189" translate="yes" xml:space="preserve">
          <source>In the above example, both URL patterns point to the same view &amp;ndash; &lt;code&gt;views.page&lt;/code&gt; &amp;ndash; but the first pattern doesn&amp;rsquo;t capture anything from the URL. If the first pattern matches, the &lt;code&gt;page()&lt;/code&gt; function will use its default argument for &lt;code&gt;num&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;. If the second pattern matches, &lt;code&gt;page()&lt;/code&gt; will use whatever &lt;code&gt;num&lt;/code&gt; value was captured.</source>
          <target state="translated">在上面的示例中，两个URL模式都指向同一视图（ &lt;code&gt;views.page&lt;/code&gt; )，但是第一个模式未从URL中捕获任何内容。如果第一个模式匹配， &lt;code&gt;page()&lt;/code&gt; 函数将使用其默认参数 &lt;code&gt;num&lt;/code&gt; ， &lt;code&gt;1&lt;/code&gt; 。如果第二个模式匹配，则 &lt;code&gt;page()&lt;/code&gt; 将使用捕获的 &lt;code&gt;num&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="fc33d28f955e8ad2642da30af478dafd323d4ae4" translate="yes" xml:space="preserve">
          <source>In the above example, only the fields &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;content&lt;/code&gt; will be displayed, sequentially, in the form. &lt;code&gt;fields&lt;/code&gt; can contain values defined in &lt;a href=&quot;#django.contrib.admin.ModelAdmin.readonly_fields&quot;&gt;&lt;code&gt;ModelAdmin.readonly_fields&lt;/code&gt;&lt;/a&gt; to be displayed as read-only.</source>
          <target state="translated">在上面的示例中，仅字段 &lt;code&gt;url&lt;/code&gt; ， &lt;code&gt;title&lt;/code&gt; 和 &lt;code&gt;content&lt;/code&gt; 将以表格顺序显示。 &lt;code&gt;fields&lt;/code&gt; 可以包含在&lt;a href=&quot;#django.contrib.admin.ModelAdmin.readonly_fields&quot;&gt; &lt;code&gt;ModelAdmin.readonly_fields&lt;/code&gt; 中&lt;/a&gt;定义的值，以显示为只读。</target>
        </trans-unit>
        <trans-unit id="36256fe1165ee329fa178a898c6d788a746b521c" translate="yes" xml:space="preserve">
          <source>In the above example, the &amp;ldquo;age&amp;rdquo; field will be excluded but the &amp;ldquo;name&amp;rdquo; field will be included in the generated form.</source>
          <target state="translated">在上面的示例中，&amp;ldquo;年龄&amp;rdquo;字段将被排除，但&amp;ldquo;名称&amp;rdquo;字段将包含在生成的表单中。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
