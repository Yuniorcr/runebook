<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="45e66663fc9c49156a42c4c815d1ca9ece7337cd" translate="yes" xml:space="preserve">
          <source>Hour, 24-hour format.</source>
          <target state="translated">小时,24小时的形式。</target>
        </trans-unit>
        <trans-unit id="834defb49795704bb66671584938734ef31149af" translate="yes" xml:space="preserve">
          <source>How Django determines the lookups and transforms which are used</source>
          <target state="translated">Django是如何决定使用的查找和转换的?</target>
        </trans-unit>
        <trans-unit id="c430bfd8ea64f441a6249a4392b781c211b8181a" translate="yes" xml:space="preserve">
          <source>How Django discovers language preference</source>
          <target state="translated">Django如何发现语言偏好</target>
        </trans-unit>
        <trans-unit id="332c02dc1e8a1ada0eb887a1ba1863a66b86b9f3" translate="yes" xml:space="preserve">
          <source>How Django discovers translations</source>
          <target state="translated">Django如何发现翻译</target>
        </trans-unit>
        <trans-unit id="e16df067ba88e72bf0641a55551a8b9e61d360f6" translate="yes" xml:space="preserve">
          <source>How Django knows to UPDATE vs. INSERT</source>
          <target state="translated">Django是如何知道UPDATE与INSERT的?</target>
        </trans-unit>
        <trans-unit id="342461abdfba0eb8d205c5faef1083bcee625984" translate="yes" xml:space="preserve">
          <source>How Django processes a request</source>
          <target state="translated">Django如何处理一个请求</target>
        </trans-unit>
        <trans-unit id="a965dc33e4b23fff03edc6677ddd4a5db2a68137" translate="yes" xml:space="preserve">
          <source>How Django stores passwords</source>
          <target state="translated">Django如何存储密码</target>
        </trans-unit>
        <trans-unit id="84049f5f6d42de61077b821036f8551841f5c062" translate="yes" xml:space="preserve">
          <source>How Django uses the sites framework</source>
          <target state="translated">Django如何使用网站框架</target>
        </trans-unit>
        <trans-unit id="58bcd029adac356fe636f2a688e8a3911920d656" translate="yes" xml:space="preserve">
          <source>How applications are loaded</source>
          <target state="translated">如何加载应用程序</target>
        </trans-unit>
        <trans-unit id="ba680964ddbb43280ef340243ccbc0d61802f176" translate="yes" xml:space="preserve">
          <source>How are the backward relationships possible?</source>
          <target state="translated">后面的关系怎么可能?</target>
        </trans-unit>
        <trans-unit id="d26502dd842d87ee4ca401cd3ff22a727c99c3bd" translate="yes" xml:space="preserve">
          <source>How did &lt;a href=&quot;#django.contrib.sites.managers.CurrentSiteManager&quot;&gt;&lt;code&gt;CurrentSiteManager&lt;/code&gt;&lt;/a&gt; know which field of &lt;code&gt;Photo&lt;/code&gt; was the &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt;? By default, &lt;a href=&quot;#django.contrib.sites.managers.CurrentSiteManager&quot;&gt;&lt;code&gt;CurrentSiteManager&lt;/code&gt;&lt;/a&gt; looks for a either a &lt;a href=&quot;../models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; called &lt;code&gt;site&lt;/code&gt; or a &lt;a href=&quot;../models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; called &lt;code&gt;sites&lt;/code&gt; to filter on. If you use a field named something other than &lt;code&gt;site&lt;/code&gt; or &lt;code&gt;sites&lt;/code&gt; to identify which &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; objects your object is related to, then you need to explicitly pass the custom field name as a parameter to &lt;a href=&quot;#django.contrib.sites.managers.CurrentSiteManager&quot;&gt;&lt;code&gt;CurrentSiteManager&lt;/code&gt;&lt;/a&gt; on your model. The following model, which has a field called &lt;code&gt;publish_on&lt;/code&gt;, demonstrates this:</source>
          <target state="translated">怎么&lt;a href=&quot;#django.contrib.sites.managers.CurrentSiteManager&quot;&gt; &lt;code&gt;CurrentSiteManager&lt;/code&gt; &lt;/a&gt;知道哪些领域 &lt;code&gt;Photo&lt;/code&gt; 是&lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt;？默认情况下，&lt;a href=&quot;#django.contrib.sites.managers.CurrentSiteManager&quot;&gt; &lt;code&gt;CurrentSiteManager&lt;/code&gt; &lt;/a&gt;寻找一个无论是&lt;a href=&quot;../models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; 的&lt;/a&gt;所谓 &lt;code&gt;site&lt;/code&gt; 或&lt;a href=&quot;../models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;叫 &lt;code&gt;sites&lt;/code&gt; 上过滤。如果你使用了一个名为比其他一些领域 &lt;code&gt;site&lt;/code&gt; 或 &lt;code&gt;sites&lt;/code&gt; ，以确定哪些&lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt;对象的对象涉及到，那么你需要明确地将自定义字段名称作为参数传递给&lt;a href=&quot;#django.contrib.sites.managers.CurrentSiteManager&quot;&gt; &lt;code&gt;CurrentSiteManager&lt;/code&gt; &lt;/a&gt;你的模型。以下模型具有一个名为 &lt;code&gt;publish_on&lt;/code&gt; 的字段，对此进行了演示：</target>
        </trans-unit>
        <trans-unit id="418b80ab08e7d31c1d6197daae3222c122081927" translate="yes" xml:space="preserve">
          <source>How errors are displayed</source>
          <target state="translated">如何显示错误</target>
        </trans-unit>
        <trans-unit id="4484a6c1ccb775145808167aab3a7812e6a5f96b" translate="yes" xml:space="preserve">
          <source>How invalid variables are handled</source>
          <target state="translated">如何处理无效变量</target>
        </trans-unit>
        <trans-unit id="1dd6a17cb4033f4f74df1bb6912b8a28a8074084" translate="yes" xml:space="preserve">
          <source>How it works</source>
          <target state="translated">运作方式</target>
        </trans-unit>
        <trans-unit id="ee4e87f06982bb7102fed5603132079aa0ee2fde" translate="yes" xml:space="preserve">
          <source>How templates are searched and loaded depends on each engine&amp;rsquo;s backend and configuration.</source>
          <target state="translated">搜索和加载模板的方式取决于每个引擎的后端和配置。</target>
        </trans-unit>
        <trans-unit id="e8fc0e3bb00051cc499978898e8d78a09f57c0f8" translate="yes" xml:space="preserve">
          <source>How the documentation is organized</source>
          <target state="translated">文件是如何组织的</target>
        </trans-unit>
        <trans-unit id="2808360f60d17c835d1d64fb4002b0966b4ab333" translate="yes" xml:space="preserve">
          <source>How this is possible</source>
          <target state="translated">这怎么可能</target>
        </trans-unit>
        <trans-unit id="0618f72382628efcfa82e8777ab385d847babe02" translate="yes" xml:space="preserve">
          <source>How to add, change and delete flatpages</source>
          <target state="translated">如何添加、更改和删除平页。</target>
        </trans-unit>
        <trans-unit id="26a3d16f713fda9a3eb2c25d96fe6ed5d051ad38" translate="yes" xml:space="preserve">
          <source>How to add, change and delete redirects</source>
          <target state="translated">如何添加、更改和删除重定向?</target>
        </trans-unit>
        <trans-unit id="b7425528758ba98909653aaf21600d6df07eeb8c" translate="yes" xml:space="preserve">
          <source>How to deploy with ASGI</source>
          <target state="translated">如何使用ASGI进行部署</target>
        </trans-unit>
        <trans-unit id="105c9c1c914097c69fddc962d12692f35139f7e7" translate="yes" xml:space="preserve">
          <source>How to deploy with WSGI</source>
          <target state="translated">如何使用WSGI进行部署</target>
        </trans-unit>
        <trans-unit id="1dc657f6557483d50a954592bea11c5f8db24590" translate="yes" xml:space="preserve">
          <source>How to install Django</source>
          <target state="translated">如何安装Django</target>
        </trans-unit>
        <trans-unit id="ccdbd153262df55417375bdee52f2912645d9a0e" translate="yes" xml:space="preserve">
          <source>How to install Django on Windows</source>
          <target state="translated">如何在Windows上安装Django</target>
        </trans-unit>
        <trans-unit id="4eb1317232cb4cb37edcf659f49ccd3f48d075d1" translate="yes" xml:space="preserve">
          <source>How to log a user in</source>
          <target state="translated">如何登录用户</target>
        </trans-unit>
        <trans-unit id="8e97372fd46b1a4c793b964fe51a2e05af8b5bfa" translate="yes" xml:space="preserve">
          <source>How to log a user out</source>
          <target state="translated">如何注销用户</target>
        </trans-unit>
        <trans-unit id="36c0f9a912898ba68eb09309256b126031c47a47" translate="yes" xml:space="preserve">
          <source>How to raise field-specific validation errors if those fields don&amp;rsquo;t appear in a &lt;code&gt;ModelForm&lt;/code&gt;</source>
          <target state="translated">如果那些字段未出现在 &lt;code&gt;ModelForm&lt;/code&gt; 中,如何引发特定于字段的验证错误</target>
        </trans-unit>
        <trans-unit id="da4447c72cfc8dee8d3c6513aecab850e658f572" translate="yes" xml:space="preserve">
          <source>How to turn it off</source>
          <target state="translated">如何关闭它</target>
        </trans-unit>
        <trans-unit id="cdb68c618ea1c60ef6ccf6356cdc7abd1131bf29" translate="yes" xml:space="preserve">
          <source>How to use Django with Apache and &lt;code&gt;mod_wsgi&lt;/code&gt;</source>
          <target state="translated">如何在Apache和 &lt;code&gt;mod_wsgi&lt;/code&gt; 中使用Django</target>
        </trans-unit>
        <trans-unit id="45a42a0292be71eae6fb17276c919e0ef9a60e58" translate="yes" xml:space="preserve">
          <source>How to use Django with Apache and mod_wsgi</source>
          <target state="translated">如何在Apache和mod_wsgi中使用Django。</target>
        </trans-unit>
        <trans-unit id="1c87ea425ad7ce70954526d9a78e6316cc80cb84" translate="yes" xml:space="preserve">
          <source>How to use Django with Daphne</source>
          <target state="translated">如何使用Django和Daphne?</target>
        </trans-unit>
        <trans-unit id="401f4f18ef241d7a8c42c42c8411a233ec281835" translate="yes" xml:space="preserve">
          <source>How to use Django with Gunicorn</source>
          <target state="translated">如何使用Django与Gunicorn合作</target>
        </trans-unit>
        <trans-unit id="303751e55a377e501b33bdf4fa3b46da0f945c83" translate="yes" xml:space="preserve">
          <source>How to use Django with Hypercorn</source>
          <target state="translated">如何使用Django和Hypercorn?</target>
        </trans-unit>
        <trans-unit id="9b88c226e2c4beb580e0f1ed219560527cff4f1e" translate="yes" xml:space="preserve">
          <source>How to use Django with Uvicorn</source>
          <target state="translated">如何使用Django与Uvicorn合作</target>
        </trans-unit>
        <trans-unit id="1ccc858c03c14705b686e0bc855cd2943676fefe" translate="yes" xml:space="preserve">
          <source>How to use Django with uWSGI</source>
          <target state="translated">如何使用Django与uWSGI合作</target>
        </trans-unit>
        <trans-unit id="e13e18f3a4a56aeb9973b0c1bdfe43af2d3c3e20" translate="yes" xml:space="preserve">
          <source>How to use it</source>
          <target state="translated">如何使用</target>
        </trans-unit>
        <trans-unit id="a030b8f9f596ae923525bf1136808679544d64f7" translate="yes" xml:space="preserve">
          <source>How to use sessions</source>
          <target state="translated">如何使用会话</target>
        </trans-unit>
        <trans-unit id="38ba2a640e385eee2f46de3c7f8be0042cdb0349" translate="yes" xml:space="preserve">
          <source>How validators are run</source>
          <target state="translated">如何运行验证器</target>
        </trans-unit>
        <trans-unit id="eb3e14332ead8dd346a65a6a6e145c7ed3afb46a" translate="yes" xml:space="preserve">
          <source>How you use this is up to you, but Django uses it in a couple of ways automatically via a couple of conventions.</source>
          <target state="translated">如何使用这个功能由你决定,但Django通过几个约定自动使用它。</target>
        </trans-unit>
        <trans-unit id="a7eed64119997a9da981184d1d2f258373c91e6c" translate="yes" xml:space="preserve">
          <source>However there&amp;rsquo;s a slight shortcut for the above by letting the formset itself deal with the management form:</source>
          <target state="translated">但是，通过让表单集本身处理管理表单，可以为上述方法提供一个小捷径：</target>
        </trans-unit>
        <trans-unit id="6d0edf5671214ffb733ad2d740f03aefdd689c4e" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;Media&lt;/code&gt; objects have some other interesting properties.</source>
          <target state="translated">但是， &lt;code&gt;Media&lt;/code&gt; 对象还具有其他一些有趣的属性。</target>
        </trans-unit>
        <trans-unit id="1b75e60d0429c5a33209819138b456eab429c1af" translate="yes" xml:space="preserve">
          <source>However, Django can only upgrade passwords that use algorithms mentioned in &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt;&lt;code&gt;PASSWORD_HASHERS&lt;/code&gt;&lt;/a&gt;, so as you upgrade to new systems you should make sure never to &lt;em&gt;remove&lt;/em&gt; entries from this list. If you do, users using unmentioned algorithms won&amp;rsquo;t be able to upgrade. Hashed passwords will be updated when increasing (or decreasing) the number of PBKDF2 iterations or bcrypt rounds.</source>
          <target state="translated">但是，Django只能升级使用&lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt; &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; 中&lt;/a&gt;提到的算法的密码，因此在升级到新系统时，应确保切勿从该列表中&lt;em&gt;删除&lt;/em&gt;条目。如果这样做，使用未提及算法的用户将无法升级。当增加（或减少）PBKDF2迭代次数或bcrypt轮次时，哈希密码将被更新。</target>
        </trans-unit>
        <trans-unit id="7dae5e00844414b926a308fba7f2ac67ecafebc1" translate="yes" xml:space="preserve">
          <source>However, Django can only upgrade passwords that use algorithms mentioned in &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt;&lt;code&gt;PASSWORD_HASHERS&lt;/code&gt;&lt;/a&gt;, so as you upgrade to new systems you should make sure never to &lt;em&gt;remove&lt;/em&gt; entries from this list. If you do, users using unmentioned algorithms won&amp;rsquo;t be able to upgrade. Hashed passwords will be updated when increasing (or decreasing) the number of PBKDF2 iterations, bcrypt rounds, or argon2 attributes.</source>
          <target state="translated">但是，Django只能升级使用&lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt; &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; 中&lt;/a&gt;提到的算法的密码，因此在升级到新系统时，应确保切勿从该列表中&lt;em&gt;删除&lt;/em&gt;条目。如果这样做，使用未提及算法的用户将无法升级。当增加（或减少）PBKDF2迭代次数，bcrypt轮次或argon2属性时，哈希密码将被更新。</target>
        </trans-unit>
        <trans-unit id="fee2b1cd4765dc45441956cd26d5a725bff1a79c" translate="yes" xml:space="preserve">
          <source>However, Django provides ways to write custom &lt;a href=&quot;#file-storage&quot;&gt;file storage systems&lt;/a&gt; that allow you to completely customize where and how Django stores files. The second half of this document describes how these storage systems work.</source>
          <target state="translated">但是，Django提供了编写自定义&lt;a href=&quot;#file-storage&quot;&gt;文件存储系统的方法&lt;/a&gt;，使您可以完全自定义Django存储文件的位置和方式。本文档的后半部分描述了这些存储系统如何工作。</target>
        </trans-unit>
        <trans-unit id="8eb7e9563d786a695961474efff12ea48136b44e" translate="yes" xml:space="preserve">
          <source>However, a big part of the time taken to run a Django &lt;code&gt;TestCase&lt;/code&gt; is consumed by the call to &lt;code&gt;flush&lt;/code&gt; that ensures that you have a clean database at the start of each test run. If you have multiple databases, multiple flushes are required (one for each database), which can be a time consuming activity &amp;ndash; especially if your tests don&amp;rsquo;t need to test multi-database activity.</source>
          <target state="translated">但是，运行Django &lt;code&gt;TestCase&lt;/code&gt; 所花费的时间很大一部分被 &lt;code&gt;flush&lt;/code&gt; 调用所占用，以确保您在每次测试运行开始时就拥有一个干净的数据库。如果您有多个数据库，则需要多次刷新（每个数据库一个刷新），这可能是一项耗时的活动-尤其是在您的测试不需要测试多数据库活动的情况下。</target>
        </trans-unit>
        <trans-unit id="1e4fa7259e12f87e861c3168d81edd38bb151356" translate="yes" xml:space="preserve">
          <source>However, depending on your requirements, you may choose a different algorithm, or even use a custom algorithm to match your specific security situation. Again, most users shouldn&amp;rsquo;t need to do this &amp;ndash; if you&amp;rsquo;re not sure, you probably don&amp;rsquo;t. If you do, please read on:</source>
          <target state="translated">但是，根据您的要求，您可以选择其他算法，甚至可以使用自定义算法来匹配您的特定安全情况。同样，大多数用户不需要这样做-如果您不确定，则可能不需要。如果您这样做，请继续阅读：</target>
        </trans-unit>
        <trans-unit id="9fac3d9102b0dac6aef0721b096d54bbdccf3e96" translate="yes" xml:space="preserve">
          <source>However, here it gets slightly complicated. The objects returned by the &lt;code&gt;deserialize&lt;/code&gt; iterator &lt;em&gt;aren&amp;rsquo;t&lt;/em&gt; regular Django objects. Instead, they are special &lt;code&gt;DeserializedObject&lt;/code&gt; instances that wrap a created &amp;ndash; but unsaved &amp;ndash; object and any associated relationship data.</source>
          <target state="translated">但是，这里变得有些复杂。 &lt;code&gt;deserialize&lt;/code&gt; 迭代器返回的对象&lt;em&gt;不是&lt;/em&gt;常规的Django对象。相反，它们是特殊的 &lt;code&gt;DeserializedObject&lt;/code&gt; 实例，其中包装了已创建但未保存的对象和任何关联的关系数据。</target>
        </trans-unit>
        <trans-unit id="c081ae39f8041417e994469fcd2bf0623ae3ac98" translate="yes" xml:space="preserve">
          <source>However, if &lt;code&gt;p&lt;/code&gt; in the above example was &lt;em&gt;not&lt;/em&gt; a &lt;code&gt;Restaurant&lt;/code&gt; (it had been created directly as a &lt;code&gt;Place&lt;/code&gt; object or was the parent of some other class), referring to &lt;code&gt;p.restaurant&lt;/code&gt; would raise a &lt;code&gt;Restaurant.DoesNotExist&lt;/code&gt; exception.</source>
          <target state="translated">然而，如果 &lt;code&gt;p&lt;/code&gt; 在上述例子中是&lt;em&gt;不&lt;/em&gt;一个 &lt;code&gt;Restaurant&lt;/code&gt; （它已被直接创建为 &lt;code&gt;Place&lt;/code&gt; 对象，或者在一些其它类的父），参照 &lt;code&gt;p.restaurant&lt;/code&gt; 将提高 &lt;code&gt;Restaurant.DoesNotExist&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="2344053661dea4c49a4bf5f3fa14735765590c54" translate="yes" xml:space="preserve">
          <source>However, if an element of &lt;code&gt;list_display&lt;/code&gt; represents a certain database field, you can indicate this fact by setting the &lt;code&gt;admin_order_field&lt;/code&gt; attribute of the item.</source>
          <target state="translated">但是，如果 &lt;code&gt;list_display&lt;/code&gt; 的元素表示某个数据库字段，则可以通过设置项目的 &lt;code&gt;admin_order_field&lt;/code&gt; 属性来表明这一事实。</target>
        </trans-unit>
        <trans-unit id="41eb48668d3b5ceb1113bcdd82344815a9a6c016" translate="yes" xml:space="preserve">
          <source>However, if an uploaded file is too large, Django will write the uploaded file to a temporary file stored in your system&amp;rsquo;s temporary directory. On a Unix-like platform this means you can expect Django to generate a file called something like &lt;code&gt;/tmp/tmpzfp6I6.upload&lt;/code&gt;. If an upload is large enough, you can watch this file grow in size as Django streams the data onto disk.</source>
          <target state="translated">但是，如果上传的文件太大，则Django会将上传的文件写入存储在系统临时目录中的临时文件中。在类似Unix的平台上，这意味着您可以期望Django生成名为 &lt;code&gt;/tmp/tmpzfp6I6.upload&lt;/code&gt; 之类的文件。如果上传的文件足够大，那么您可以观察到该文件的大小随着Django将数据流传输到磁盘而增大。</target>
        </trans-unit>
        <trans-unit id="a0fbd7284b4e1524d1854eb5de380f1d3cf243f6" translate="yes" xml:space="preserve">
          <source>However, if the &lt;code&gt;annotate()&lt;/code&gt; clause precedes the &lt;code&gt;values()&lt;/code&gt; clause, the annotations will be generated over the entire query set. In this case, the &lt;code&gt;values()&lt;/code&gt; clause only constrains the fields that are generated on output.</source>
          <target state="translated">但是，如果 &lt;code&gt;annotate()&lt;/code&gt; 子句位于 &lt;code&gt;values()&lt;/code&gt; （）子句之前，则将在整个查询集上生成注释。在这种情况下， &lt;code&gt;values()&lt;/code&gt; 子句仅约束在输出中生成的字段。</target>
        </trans-unit>
        <trans-unit id="6578d295eb15a87e1a1078a730cb3b542371e4d0" translate="yes" xml:space="preserve">
          <source>However, if the entire queryset has already been evaluated, the cache will be checked instead:</source>
          <target state="translated">但是,如果整个查询集已经被评估,则会检查缓存。</target>
        </trans-unit>
        <trans-unit id="fbe9a3149e46d75becca6ac25b6ad60602731de4" translate="yes" xml:space="preserve">
          <source>However, if the feed format is a spin-off of RSS or Atom (i.e. &lt;a href=&quot;http://georss.org/&quot;&gt;GeoRSS&lt;/a&gt;, Apple&amp;rsquo;s &lt;a href=&quot;https://help.apple.com/itc/podcasts_connect/#/itcb54353390&quot;&gt;iTunes podcast format&lt;/a&gt;, etc.), you&amp;rsquo;ve got a better choice. These types of feeds typically add extra elements and/or attributes to the underlying format, and there are a set of methods that &lt;code&gt;SyndicationFeed&lt;/code&gt; calls to get these extra attributes. Thus, you can subclass the appropriate feed generator class (&lt;code&gt;Atom1Feed&lt;/code&gt; or &lt;code&gt;Rss201rev2Feed&lt;/code&gt;) and extend these callbacks. They are:</source>
          <target state="translated">但是，如果提要格式是RSS或Atom的衍生产品（即&lt;a href=&quot;http://georss.org/&quot;&gt;GeoRSS&lt;/a&gt;，Apple的&lt;a href=&quot;https://help.apple.com/itc/podcasts_connect/#/itcb54353390&quot;&gt;iTunes podcast格式&lt;/a&gt;等），则您有更好的选择。这些类型的供稿通常会在基础格式中添加额外的元素和/或属性，并且 &lt;code&gt;SyndicationFeed&lt;/code&gt; 调用了一组方法来获取这些额外的属性。因此，您可以子类化适当的提要生成器类（ &lt;code&gt;Atom1Feed&lt;/code&gt; 或 &lt;code&gt;Rss201rev2Feed&lt;/code&gt; ）并扩展这些回调。他们是：</target>
        </trans-unit>
        <trans-unit id="42ab22e0bac3843886f0c1daf3e0597991c18711" translate="yes" xml:space="preserve">
          <source>However, if the feed format is a spin-off of RSS or Atom (i.e. &lt;a href=&quot;http://georss.org/&quot;&gt;GeoRSS&lt;/a&gt;, Apple&amp;rsquo;s &lt;a href=&quot;https://www.apple.com/itunes/podcasts/specs.html&quot;&gt;iTunes podcast format&lt;/a&gt;, etc.), you&amp;rsquo;ve got a better choice. These types of feeds typically add extra elements and/or attributes to the underlying format, and there are a set of methods that &lt;code&gt;SyndicationFeed&lt;/code&gt; calls to get these extra attributes. Thus, you can subclass the appropriate feed generator class (&lt;code&gt;Atom1Feed&lt;/code&gt; or &lt;code&gt;Rss201rev2Feed&lt;/code&gt;) and extend these callbacks. They are:</source>
          <target state="translated">但是，如果提要格式是RSS或Atom的衍生产品（即&lt;a href=&quot;http://georss.org/&quot;&gt;GeoRSS&lt;/a&gt;，Apple的&lt;a href=&quot;https://www.apple.com/itunes/podcasts/specs.html&quot;&gt;iTunes podcast格式&lt;/a&gt;等），则您有更好的选择。这些类型的Feed通常会向基础格式添加额外的元素和/或属性，并且 &lt;code&gt;SyndicationFeed&lt;/code&gt; 调用了一组方法来获取这些额外的属性。因此，您可以子类化适当的提要生成器类（ &lt;code&gt;Atom1Feed&lt;/code&gt; 或 &lt;code&gt;Rss201rev2Feed&lt;/code&gt; ）并扩展这些回调。他们是：</target>
        </trans-unit>
        <trans-unit id="a498b0269f9b28570de87c0de9c651cc95df7a39" translate="yes" xml:space="preserve">
          <source>However, if the primary key of &lt;code&gt;p&lt;/code&gt; is already in use on the &lt;code&gt;second&lt;/code&gt; database, the existing object in the &lt;code&gt;second&lt;/code&gt; database will be overridden when &lt;code&gt;p&lt;/code&gt; is saved.</source>
          <target state="translated">但是，如果主键 &lt;code&gt;p&lt;/code&gt; 已经在上使用的 &lt;code&gt;second&lt;/code&gt; 数据库，在现有的对象 &lt;code&gt;second&lt;/code&gt; 数据库将被覆盖时， &lt;code&gt;p&lt;/code&gt; 被保存。</target>
        </trans-unit>
        <trans-unit id="0f8b6e26d41ac062816981cbdb05f3e271c08d87" translate="yes" xml:space="preserve">
          <source>However, if we add natural key handling to Person, the fixture becomes much more humane. To add natural key handling, you define a default Manager for Person with a &lt;code&gt;get_by_natural_key()&lt;/code&gt; method. In the case of a Person, a good natural key might be the pair of first and last name:</source>
          <target state="translated">但是，如果我们向Person添加自然键处理，则固定装置将变得更加人性化。要添加自然键处理，请使用 &lt;code&gt;get_by_natural_key()&lt;/code&gt; 方法为Person定义默认的Manager 。对于人，一个好的自然键可能是名字和姓氏对：</target>
        </trans-unit>
        <trans-unit id="4eb21e18a9f005242b43b8b964308b3ae898644d" translate="yes" xml:space="preserve">
          <source>However, if you have a model that uses &lt;a href=&quot;db/models#multi-table-inheritance&quot;&gt;multi-table inheritance&lt;/a&gt;, you also need to serialize all of the base classes for the model. This is because only the fields that are locally defined on the model will be serialized. For example, consider the following models:</source>
          <target state="translated">但是，如果您有一个使用&lt;a href=&quot;db/models#multi-table-inheritance&quot;&gt;多表继承&lt;/a&gt;的模型，则还需要序列化该模型的所有基类。这是因为仅对模型上本地定义的字段进行序列化。例如，考虑以下模型：</target>
        </trans-unit>
        <trans-unit id="cd236b305b5929c0eefa9d1f880696309cfb3535" translate="yes" xml:space="preserve">
          <source>However, if you put synchronous middleware between an ASGI server and an asynchronous view, it will have to switch into sync mode for the middleware and then back to async mode for the view. Django will also hold the sync thread open for middleware exception propagation. This may not be noticeable at first, but adding this penalty of one thread per request can remove any async performance advantage.</source>
          <target state="translated">但是,如果你把同步的中间件放在ASGI服务器和异步的视图之间,就必须为中间件切换到同步模式,然后再回到视图的异步模式。Django还将保持同步线程的开放,以便中间件的异常传播。这在一开始可能并不明显,但增加这个每个请求一个线程的惩罚可以消除任何异步性能优势。</target>
        </trans-unit>
        <trans-unit id="96cd9777ad909b92b73d8ba9adcf21e6feb2539e" translate="yes" xml:space="preserve">
          <source>However, if you use cache decorators on individual views, the CSRF middleware will not yet have been able to set the Vary header or the CSRF cookie, and the response will be cached without either one. In this case, on any views that will require a CSRF token to be inserted you should use the &lt;a href=&quot;#django.views.decorators.csrf.csrf_protect&quot;&gt;&lt;code&gt;django.views.decorators.csrf.csrf_protect()&lt;/code&gt;&lt;/a&gt; decorator first:</source>
          <target state="translated">但是，如果您在各个视图上使用缓存装饰器，则CSRF中间件将无法设置Vary标头或CSRF cookie，并且响应中的任何一个都将被缓存。在这种情况下，在任何需要插入CSRF令牌的视图上，都应首先使用&lt;a href=&quot;#django.views.decorators.csrf.csrf_protect&quot;&gt; &lt;code&gt;django.views.decorators.csrf.csrf_protect()&lt;/code&gt; &lt;/a&gt;装饰器：</target>
        </trans-unit>
        <trans-unit id="2789f39b8e2c7846604c30d7ad18b293d2ccdb5b" translate="yes" xml:space="preserve">
          <source>However, if you want to use a different widget for a field, you can use the &lt;a href=&quot;fields#django.forms.Field.widget&quot;&gt;&lt;code&gt;widget&lt;/code&gt;&lt;/a&gt; argument on the field definition. For example:</source>
          <target state="translated">但是，如果要为字段使用其他小部件，则可以在字段定义上使用&lt;a href=&quot;fields#django.forms.Field.widget&quot;&gt; &lt;code&gt;widget&lt;/code&gt; &lt;/a&gt;参数。例如：</target>
        </trans-unit>
        <trans-unit id="9080c7a129504fb41e106fa867a1842a2d8ca3e7" translate="yes" xml:space="preserve">
          <source>However, if you want to write fully-asynchronous tests for a Django project, you will need to take several things into account.</source>
          <target state="translated">然而,如果你想为Django项目编写完全异步的测试,你需要考虑到几个问题。</target>
        </trans-unit>
        <trans-unit id="ca0193672aea0bbf1dc1e95a90a928b931d3a8af" translate="yes" xml:space="preserve">
          <source>However, if you&amp;rsquo;re using SQLite or MySQL with MyISAM tables, there is no enforced referential integrity; as a result, you may be able to &amp;lsquo;fake&amp;rsquo; cross database foreign keys. However, this configuration is not officially supported by Django.</source>
          <target state="translated">但是，如果您将SQLite或MySQL与MyISAM表一起使用，则没有强制的参照完整性。结果，您可以&amp;ldquo;伪造&amp;rdquo;跨数据库外键。但是，Django并未正式支持此配置。</target>
        </trans-unit>
        <trans-unit id="27aa3c10d7ffcec8e1fa56d52af589198f2988d2" translate="yes" xml:space="preserve">
          <source>However, if you&amp;rsquo;re using a decorator, the same opportunities do not exist. Any behavior defined in a decorator is handled immediately.</source>
          <target state="translated">但是，如果您使用的是装饰器，则不存在相同的机会。装饰器中定义的任何行为都将立即处理。</target>
        </trans-unit>
        <trans-unit id="2319f17aafcae6e92434d5e3bae08aafd1a79a99" translate="yes" xml:space="preserve">
          <source>However, it can sometimes be beneficial to allow decorators or middleware to modify a response &lt;em&gt;after&lt;/em&gt; it has been constructed by the view. For example, you may want to change the template that is used, or put additional data into the context.</source>
          <target state="translated">但是，有时允许装饰器或中间件&lt;em&gt;在&lt;/em&gt;通过视图构建响应&lt;em&gt;之后&lt;/em&gt;修改响应可能会有所帮助。例如，您可能要更改使用的模板，或将其他数据放入上下文中。</target>
        </trans-unit>
        <trans-unit id="b4fe8063e2e1e12bacb424e98275f1830bf5cfe7" translate="yes" xml:space="preserve">
          <source>However, it may not always be appropriate to use localized values &amp;ndash; for example, if you&amp;rsquo;re outputting JavaScript or XML that is designed to be machine-readable, you will always want unlocalized values. You may also want to use localization in selected templates, rather than using localization everywhere.</source>
          <target state="translated">但是，使用本地化的值可能并不总是合适的-例如，如果要输出设计为机器可读的JavaScript或XML，则始终需要使用非本地化的值。您可能还想在所选模板中使用本地化，而不是在所有地方都使用本地化。</target>
        </trans-unit>
        <trans-unit id="2c21caaedc7a94be4767a92a207cc019af5c1e0f" translate="yes" xml:space="preserve">
          <source>However, it will almost always be faster to do this work at lower rather than higher levels. At higher levels the system has to deal with objects through multiple levels of abstraction and layers of machinery.</source>
          <target state="translated">然而,在较低层次而不是较高层次上做这项工作几乎总是更快。在较高层次上,系统必须通过多层次的抽象和机械层来处理对象。</target>
        </trans-unit>
        <trans-unit id="1b669d8e47b653ff4d42be16c51c4790d279903e" translate="yes" xml:space="preserve">
          <source>However, pluralization is not this simple in all languages. If the language does not support pluralization, an empty value is provided.</source>
          <target state="translated">然而,复数化并不是所有语言都这么简单。如果该语言不支持复数化,则提供一个空值。</target>
        </trans-unit>
        <trans-unit id="9f3bfc1533fbc7360133c35d3f551767f73e5bf9" translate="yes" xml:space="preserve">
          <source>However, running with &lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;False&lt;/code&gt; means you&amp;rsquo;ll never see errors generated by your site &amp;ndash; everyone will instead see your public error pages. You need to keep track of errors that occur in deployed sites, so Django can be configured to create reports with details about those errors.</source>
          <target state="translated">但是，在&lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;False&lt;/code&gt; 的情况下运行意味着您将永远不会看到站点生成的错误-每个人都将看到您的公共错误页面。您需要跟踪部署站点中发生的错误，因此可以将Django配置为创建包含有关这些错误的详细信息的报告。</target>
        </trans-unit>
        <trans-unit id="a75d2a7d5098c093e2c9517e3afbe9ca4b271de9" translate="yes" xml:space="preserve">
          <source>However, some databases are more capable than others when it comes to schema migrations; some of the caveats are covered below.</source>
          <target state="translated">然而,在模式迁移方面,有些数据库比其他数据库更有能力;下面将介绍一些注意事项。</target>
        </trans-unit>
        <trans-unit id="e47de287b75e3011e426c42a0e9ee087f660cd19" translate="yes" xml:space="preserve">
          <source>However, sometimes certain types of information may be too sensitive and thus may not be appropriate to be kept track of, for example a user&amp;rsquo;s password or credit card number. So in addition to filtering out settings that appear to be sensitive as described in the &lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; documentation, Django offers a set of function decorators to help you control which information should be filtered out of error reports in a production environment (that is, where &lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;False&lt;/code&gt;): &lt;a href=&quot;#django.views.decorators.debug.sensitive_variables&quot;&gt;&lt;code&gt;sensitive_variables()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.views.decorators.debug.sensitive_post_parameters&quot;&gt;&lt;code&gt;sensitive_post_parameters()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">但是，有时某些类型的信息可能过于敏感，因此可能不适用于跟踪例如用户的密码或信用卡号。因此，除了过滤掉&lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;文档中描述的敏感设置之外，Django还提供了一组函数装饰器来帮助您控制应从生产环境中的错误报告中过滤掉哪些信息（即&lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;在哪里）设置为 &lt;code&gt;False&lt;/code&gt; ）：&lt;a href=&quot;#django.views.decorators.debug.sensitive_variables&quot;&gt; &lt;code&gt;sensitive_variables()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.views.decorators.debug.sensitive_post_parameters&quot;&gt; &lt;code&gt;sensitive_post_parameters()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e4b608e0433096c6cd9a3edf695ce8e00e708ffc" translate="yes" xml:space="preserve">
          <source>However, the &lt;code&gt;self.my_view&lt;/code&gt; function registered above suffers from two problems:</source>
          <target state="translated">但是，上面注册的 &lt;code&gt;self.my_view&lt;/code&gt; 函数遇到两个问题：</target>
        </trans-unit>
        <trans-unit id="fd1a9bdffd29bc1f50c4d99a898040993ccd7d60" translate="yes" xml:space="preserve">
          <source>However, the indexing and slicing are not performed at the database level. If you have a large number of &lt;code&gt;Person&lt;/code&gt; objects in your database, it is more efficient to limit the query at the SQL level:</source>
          <target state="translated">但是，索引和切片不是在数据库级别执行的。如果数据库中有大量的 &lt;code&gt;Person&lt;/code&gt; 对象，则将查询限制在SQL级别会更有效：</target>
        </trans-unit>
        <trans-unit id="e7a99e7174b52626783c113021c1e91d1c0c4176" translate="yes" xml:space="preserve">
          <source>However, the result will be slightly different if you use a &lt;code&gt;values()&lt;/code&gt; clause:</source>
          <target state="translated">但是，如果使用 &lt;code&gt;values()&lt;/code&gt; 子句，结果将略有不同：</target>
        </trans-unit>
        <trans-unit id="c00b388280770d80bee839b88012bad935795d5a" translate="yes" xml:space="preserve">
          <source>However, the task of writing tests is a lot more fulfilling than spending hours testing your application manually or trying to identify the cause of a newly-introduced problem.</source>
          <target state="translated">然而,编写测试的任务比花几个小时手动测试你的应用程序或试图确定新引入的问题的原因要充实得多。</target>
        </trans-unit>
        <trans-unit id="2e4d9a12485243a42b040d170ce31a6c9a19eb8a" translate="yes" xml:space="preserve">
          <source>However, these conversions may fail around DST transitions, which means you aren&amp;rsquo;t getting the full benefits of time zone support yet. Also, you&amp;rsquo;re likely to run into a few problems because it&amp;rsquo;s impossible to compare a naive datetime with an aware datetime. Since Django now gives you aware datetimes, you&amp;rsquo;ll get exceptions wherever you compare a datetime that comes from a model or a form with a naive datetime that you&amp;rsquo;ve created in your code.</source>
          <target state="translated">但是，这些转换可能会在DST转换周围失败，这意味着您还没有获得时区支持的全部好处。另外，您可能会遇到一些问题，因为无法将原始日期时间与已知日期时间进行比较。由于Django现在为您提供了已知的日期时间，因此，如果您将来自模型或表单的日期时间与您在代码中创建的原始日期时间进行比较，就会遇到异常。</target>
        </trans-unit>
        <trans-unit id="954cc1f0e6626e70ed6d7f67879580da584dd1bb" translate="yes" xml:space="preserve">
          <source>However, they are not magic solutions to performance problems, and they&amp;rsquo;re unlikely to bring better than marginal gains to sites that don&amp;rsquo;t already do the more basic things the right way.</source>
          <target state="translated">但是，它们并不是解决性能问题的灵丹妙药，它们不可能为那些尚未以正确方式做更多基本工作的网站带来比边际收益更好的收益。</target>
        </trans-unit>
        <trans-unit id="d45f028bb66fb35103d15fb2e1d90e37b946acf8" translate="yes" xml:space="preserve">
          <source>However, this has a downside: receiving all datetimes in local time makes datetime arithmetic more tricky &amp;mdash; you must call the &lt;code&gt;normalize()&lt;/code&gt; method provided by pytz after each operation.</source>
          <target state="translated">但是，这样做有一个缺点：在本地时间接收所有日期时间会使日期时间算法更加棘手-您必须在每次操作后调用pytz提供的 &lt;code&gt;normalize()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="cd4a35aff4244b3ade1041850c6b940cdf2cb682" translate="yes" xml:space="preserve">
          <source>However, this may not always be enough. If your natural key refers to another object (by using a foreign key or natural key to another object as part of a natural key), then you need to be able to ensure that the objects on which a natural key depends occur in the serialized data before the natural key requires them.</source>
          <target state="translated">然而,这可能并不总是足够的。如果您的自然键指向另一个对象(通过使用外键或自然键指向另一个对象作为自然键的一部分),那么您需要能够确保自然键所依赖的对象在自然键要求它们之前出现在序列化数据中。</target>
        </trans-unit>
        <trans-unit id="e20cedbaff2d50e62555f245162f273796811893" translate="yes" xml:space="preserve">
          <source>However, unlike &lt;code&gt;F()&lt;/code&gt; objects in filter and exclude clauses, you can&amp;rsquo;t introduce joins when you use &lt;code&gt;F()&lt;/code&gt; objects in an update &amp;ndash; you can only reference fields local to the model being updated. If you attempt to introduce a join with an &lt;code&gt;F()&lt;/code&gt; object, a &lt;code&gt;FieldError&lt;/code&gt; will be raised:</source>
          <target state="translated">然而，与 &lt;code&gt;F()&lt;/code&gt; 在过滤对象和排除条款，你不能介绍联接当您使用 &lt;code&gt;F()&lt;/code&gt; 在更新对象-你只能本地的模型参考字段更新。如果尝试使用 &lt;code&gt;F()&lt;/code&gt; 对象引入 &lt;code&gt;FieldError&lt;/code&gt; 则会引发FieldError：</target>
        </trans-unit>
        <trans-unit id="57c558202ab0e7f96381e51def5567b27e8e2ed7" translate="yes" xml:space="preserve">
          <source>However, unlike the behavior when using &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt;, this will not limit blogs based on entries that satisfy both conditions. In order to do that, i.e. to select all blogs that do not contain entries published with &lt;em&gt;&amp;ldquo;Lennon&amp;rdquo;&lt;/em&gt; that were published in 2008, you need to make two queries:</source>
          <target state="translated">但是，与使用&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt;时的行为不同，这不会基于满足两个条件的条目来限制博客。为此，例如，选择所有不包含在2008年发布的用&lt;em&gt;&amp;ldquo; Lennon&amp;rdquo;&lt;/em&gt;发布的条目的博客，您需要进行两个查询：</target>
        </trans-unit>
        <trans-unit id="cffd2486ef5b313d7c0ee7a40894b44641c0e923" translate="yes" xml:space="preserve">
          <source>However, we still want to be able to edit that information inline. Fortunately, we can do this with inline admin models. Suppose we have the following models:</source>
          <target state="translated">然而,我们仍然希望能够在线编辑这些信息。幸运的是,我们可以通过内联管理模型来实现这一点。假设我们有以下模型。</target>
        </trans-unit>
        <trans-unit id="4d2345457eacc290db828ae02019e1d391f9b0f2" translate="yes" xml:space="preserve">
          <source>However, when &lt;code&gt;response.content&lt;/code&gt; is explicitly assigned, the change is always applied. If you want to force the content to be re-rendered, you can re-evaluate the rendered content, and assign the content of the response manually:</source>
          <target state="translated">但是，当显式分配 &lt;code&gt;response.content&lt;/code&gt; 时，将始终应用更改。如果要强制重新渲染内容，则可以重新评估渲染的内容，然后手动分配响应的内容：</target>
        </trans-unit>
        <trans-unit id="563ee1f5cb30a896660eb595ed931c48292c849a" translate="yes" xml:space="preserve">
          <source>However, you are free to add formatting as desired.</source>
          <target state="translated">但是,您可以根据需要自由添加格式。</target>
        </trans-unit>
        <trans-unit id="bb1050a497060724f2e4bb1267868c2c5ca9662d" translate="yes" xml:space="preserve">
          <source>However: most performance problems in well-written Django sites aren&amp;rsquo;t at the Python execution level, but rather in inefficient database querying, caching, and templates. If you&amp;rsquo;re relying on poorly-written Python code, your performance problems are unlikely to be solved by having it execute faster.</source>
          <target state="translated">但是：在编写良好的Django站点中，大多数性能问题不是在Python执行级别上，而是在效率低下的数据库查询，缓存和模板方面。如果您依赖编写不佳的Python代码，则可能无法通过更快地执行来解决性能问题。</target>
        </trans-unit>
        <trans-unit id="fbe171dafe9c16da54051f873de0dd176076dec0" translate="yes" xml:space="preserve">
          <source>Http Exceptions</source>
          <target state="translated">Http异常</target>
        </trans-unit>
        <trans-unit id="bfae5a87387f6ccc29bb86e5cf99488568c3f161" translate="yes" xml:space="preserve">
          <source>Http exceptions may be imported from &lt;code&gt;django.http&lt;/code&gt;.</source>
          <target state="translated">可以从 &lt;code&gt;django.http&lt;/code&gt; 导入Http异常。</target>
        </trans-unit>
        <trans-unit id="ba3f61701a1352c8a25e806229e289b816663a55" translate="yes" xml:space="preserve">
          <source>Human-readable name for the application, e.g. &amp;ldquo;Administration&amp;rdquo;.</source>
          <target state="translated">应用程序的可读名称，例如&amp;ldquo; Administration&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="1670a10ac92535b3c3aa89fbe1fbd927e9f3218c" translate="yes" xml:space="preserve">
          <source>I/O Objects</source>
          <target state="translated">I/O对象</target>
        </trans-unit>
        <trans-unit id="03f41aebc1232a365cd0a70260db5df54cdcea1b" translate="yes" xml:space="preserve">
          <source>IBM DB2</source>
          <target state="translated">IBM DB2</target>
        </trans-unit>
        <trans-unit id="89f89c02cf47e091e726a4e07b88af0966806897" translate="yes" xml:space="preserve">
          <source>ID</source>
          <target state="translated">ID</target>
        </trans-unit>
        <trans-unit id="e0909302700b3b64d7f8176c0468bec2141f5da0" translate="yes" xml:space="preserve">
          <source>INSERT &amp;hellip; RETURNING INTO</source>
          <target state="translated">插入&amp;hellip;返回</target>
        </trans-unit>
        <trans-unit id="8e0e55878c270900ad89521f5554b562f91414b5" translate="yes" xml:space="preserve">
          <source>IP-based geolocation library</source>
          <target state="translated">基于IP的地理定位库</target>
        </trans-unit>
        <trans-unit id="c9d47b90bea2a79c48f8bc0c4b05f5ee7f8119e8" translate="yes" xml:space="preserve">
          <source>IPython:</source>
          <target state="translated">IPython:</target>
        </trans-unit>
        <trans-unit id="ff8948a3034b01513c9fad7bf57cab26fc2d374d" translate="yes" xml:space="preserve">
          <source>ISO 8601 format. (Note: unlike others formatters, such as &amp;ldquo;Z&amp;rdquo;, &amp;ldquo;O&amp;rdquo; or &amp;ldquo;r&amp;rdquo;, the &amp;ldquo;c&amp;rdquo; formatter will not add timezone offset if value is a naive datetime (see &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt;&lt;code&gt;datetime.tzinfo&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">ISO 8601格式。（请注意：与其他格式化程序（例如&amp;ldquo; Z&amp;rdquo;，&amp;ldquo; O&amp;rdquo;或&amp;ldquo; r&amp;rdquo;）不同，如果value为初始日期时间，则&amp;ldquo; c&amp;rdquo;格式化程序不会添加时区偏移量（请参见&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt; &lt;code&gt;datetime.tzinfo&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ab28365811365736a9b9bbd91ab0f2453872ba5a" translate="yes" xml:space="preserve">
          <source>ISO-8601 week number of year, with weeks starting on Monday.</source>
          <target state="translated">ISO-8601年的周数,周数从星期一开始。</target>
        </trans-unit>
        <trans-unit id="046d47251e666624c71c74ab2e6343cf76c6ffbf" translate="yes" xml:space="preserve">
          <source>ISO-8601 week-numbering year, corresponding to the ISO-8601 week number (W) which uses leap weeks. See Y for the more common year format.</source>
          <target state="translated">ISO-8601周数年,对应于使用闰周的ISO-8601周数(W)。更常见的年份格式见Y。</target>
        </trans-unit>
        <trans-unit id="ad3e1f0404afde783b8e43b5e5054c4f169eed2b" translate="yes" xml:space="preserve">
          <source>Ideas for more tests</source>
          <target state="translated">更多测试的想法</target>
        </trans-unit>
        <trans-unit id="06b6ace8ca3f18249e8ba4ea9090c0f34564ce1c" translate="yes" xml:space="preserve">
          <source>Identifier</source>
          <target state="translated">Identifier</target>
        </trans-unit>
        <trans-unit id="843c1f75bd65a80cb5c2fdec7a4a54902f306b86" translate="yes" xml:space="preserve">
          <source>Identifies the configuration as being in &amp;lsquo;dictConfig version 1&amp;rsquo; format. At present, this is the only dictConfig format version.</source>
          <target state="translated">将配置标识为&amp;ldquo; dictConfig版本1&amp;rdquo;格式。目前，这是唯一的dictConfig格式版本。</target>
        </trans-unit>
        <trans-unit id="576390ace0227af3d18d31582357c5b35faa2fd7" translate="yes" xml:space="preserve">
          <source>If (and only if) value is &lt;code&gt;None&lt;/code&gt;, uses the given default. Otherwise, uses the value.</source>
          <target state="translated">如果（且仅当）值为 &lt;code&gt;None&lt;/code&gt; ，则使用给定的默认值。否则，使用该值。</target>
        </trans-unit>
        <trans-unit id="bf8ac1c479377e8adc8f407b952b011265a5a70a" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.location&quot;&gt;&lt;code&gt;location&lt;/code&gt;&lt;/a&gt; isn&amp;rsquo;t provided, the framework will call the &lt;code&gt;get_absolute_url()&lt;/code&gt; method on each object as returned by &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.items&quot;&gt;&lt;code&gt;items()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果未提供&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.location&quot;&gt; &lt;code&gt;location&lt;/code&gt; &lt;/a&gt;，则框架将在由&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.items&quot;&gt; &lt;code&gt;items()&lt;/code&gt; &lt;/a&gt;返回的每个对象上调用 &lt;code&gt;get_absolute_url()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="4b556c7fec42ccdcf771962a8bd01295c1377c73" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; plays a key role in your application, consider using the helpful &lt;a href=&quot;#django.contrib.sites.managers.CurrentSiteManager&quot;&gt;&lt;code&gt;CurrentSiteManager&lt;/code&gt;&lt;/a&gt; in your model(s). It&amp;rsquo;s a model &lt;a href=&quot;../../topics/db/managers&quot;&gt;manager&lt;/a&gt; that automatically filters its queries to include only objects associated with the current &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果&lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt;在您的应用程序中起关键作用，请考虑在模型中使用有用的&lt;a href=&quot;#django.contrib.sites.managers.CurrentSiteManager&quot;&gt; &lt;code&gt;CurrentSiteManager&lt;/code&gt; &lt;/a&gt;。它是一个模型&lt;a href=&quot;../../topics/db/managers&quot;&gt;管理器&lt;/a&gt;，可自动过滤其查询以仅包括与当前&lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt;关联的对象。</target>
        </trans-unit>
        <trans-unit id="b04805301e02d6cc5edc0bd4cec0b660c5b5b1f8" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#django.views.generic.base.RedirectView.url&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; is not set, &lt;code&gt;get_redirect_url()&lt;/code&gt; tries to reverse the &lt;a href=&quot;#django.views.generic.base.RedirectView.pattern_name&quot;&gt;&lt;code&gt;pattern_name&lt;/code&gt;&lt;/a&gt; using what was captured in the URL (both named and unnamed groups are used).</source>
          <target state="translated">如果&lt;a href=&quot;#django.views.generic.base.RedirectView.url&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt;未设置， &lt;code&gt;get_redirect_url()&lt;/code&gt; 试图扭转&lt;a href=&quot;#django.views.generic.base.RedirectView.pattern_name&quot;&gt; &lt;code&gt;pattern_name&lt;/code&gt; &lt;/a&gt;用什么在URL（包括命名，并使用无名组）抓获。</target>
        </trans-unit>
        <trans-unit id="a441ed946a92b14760f245476b5f2337f5733bf1" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt;&lt;code&gt;template_name&lt;/code&gt;&lt;/a&gt; is specified, the default implementation will return a list containing &lt;a href=&quot;#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt;&lt;code&gt;template_name&lt;/code&gt;&lt;/a&gt; (if it is specified).</source>
          <target state="translated">如果指定了&lt;a href=&quot;#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt; &lt;code&gt;template_name&lt;/code&gt; &lt;/a&gt;，则默认实现将返回一个包含&lt;a href=&quot;#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt; &lt;code&gt;template_name&lt;/code&gt; &lt;/a&gt;的列表（如果已指定）。</target>
        </trans-unit>
        <trans-unit id="0dab78e3424972f994b4a41eeedb0e58507bc1ec" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#std:setting-EMAIL_USE_SSL&quot;&gt;&lt;code&gt;EMAIL_USE_SSL&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#std:setting-EMAIL_USE_TLS&quot;&gt;&lt;code&gt;EMAIL_USE_TLS&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;, you can optionally specify the path to a PEM-formatted certificate chain file to use for the SSL connection.</source>
          <target state="translated">如果&lt;a href=&quot;#std:setting-EMAIL_USE_SSL&quot;&gt; &lt;code&gt;EMAIL_USE_SSL&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#std:setting-EMAIL_USE_TLS&quot;&gt; &lt;code&gt;EMAIL_USE_TLS&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;True&lt;/code&gt; ，则可以选择指定PEM格式的证书链文件的路径以用于SSL连接。</target>
        </trans-unit>
        <trans-unit id="e41632ac93e09334dacaf028209efd8f874dffad" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#std:setting-EMAIL_USE_SSL&quot;&gt;&lt;code&gt;EMAIL_USE_SSL&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#std:setting-EMAIL_USE_TLS&quot;&gt;&lt;code&gt;EMAIL_USE_TLS&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;, you can optionally specify the path to a PEM-formatted private key file to use for the SSL connection.</source>
          <target state="translated">如果&lt;a href=&quot;#std:setting-EMAIL_USE_SSL&quot;&gt; &lt;code&gt;EMAIL_USE_SSL&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#std:setting-EMAIL_USE_TLS&quot;&gt; &lt;code&gt;EMAIL_USE_TLS&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;True&lt;/code&gt; ，则可以选择指定PEM格式的私钥文件的路径以用于SSL连接。</target>
        </trans-unit>
        <trans-unit id="3c5d39002274831c8031219e7011bd4dfb4b8787" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt; is a relative path, then it will be prefixed by the server-provided value of &lt;code&gt;SCRIPT_NAME&lt;/code&gt; (or &lt;code&gt;/&lt;/code&gt; if not set). This makes it easier to serve a Django application in a subpath without adding an extra configuration to the settings.</source>
          <target state="translated">如果&lt;a href=&quot;#std:setting-MEDIA_URL&quot;&gt; &lt;code&gt;MEDIA_URL&lt;/code&gt; &lt;/a&gt;是相对路径，那么它将以服务器提供的 &lt;code&gt;SCRIPT_NAME&lt;/code&gt; 值作为前缀（或 &lt;code&gt;/&lt;/code&gt; ,如果未设置）。这使得在子路径中服务Django应用程序变得更加容易，而无需在设置中添加额外的配置。</target>
        </trans-unit>
        <trans-unit id="c76407c010fc18e5e064ae0cd1ef3a947244b3e5" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; is a relative path, then it will be prefixed by the server-provided value of &lt;code&gt;SCRIPT_NAME&lt;/code&gt; (or &lt;code&gt;/&lt;/code&gt; if not set). This makes it easier to serve a Django application in a subpath without adding an extra configuration to the settings.</source>
          <target state="translated">如果&lt;a href=&quot;#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt;是相对路径，那么它将以服务器提供的 &lt;code&gt;SCRIPT_NAME&lt;/code&gt; 值（或 &lt;code&gt;/&lt;/code&gt; ,如果未设置）作为前缀。这使得在子路径中服务Django应用程序变得更加容易，而无需在设置中添加额外的配置。</target>
        </trans-unit>
        <trans-unit id="fca761e106de55e55d1a4f9984fbd1d1dedb5812" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin.get_object&quot;&gt;&lt;code&gt;get_object()&lt;/code&gt;&lt;/a&gt; returns an object, the class of that object will be used.</source>
          <target state="translated">如果&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin.get_object&quot;&gt; &lt;code&gt;get_object()&lt;/code&gt; &lt;/a&gt;返回一个对象，则将使用该对象的类。</target>
        </trans-unit>
        <trans-unit id="2bcc933a78db34c13e04edfc78d73b3aa0cfda0d" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.db_tablespace&quot;&gt;&lt;code&gt;db_tablespace&lt;/code&gt;&lt;/a&gt; isn&amp;rsquo;t specified and you didn&amp;rsquo;t set &lt;a href=&quot;../../ref/settings#std:setting-DEFAULT_INDEX_TABLESPACE&quot;&gt;&lt;code&gt;DEFAULT_INDEX_TABLESPACE&lt;/code&gt;&lt;/a&gt;, the index is created in the same tablespace as the tables.</source>
          <target state="translated">如果未指定&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.db_tablespace&quot;&gt; &lt;code&gt;db_tablespace&lt;/code&gt; &lt;/a&gt;且未设置&lt;a href=&quot;../../ref/settings#std:setting-DEFAULT_INDEX_TABLESPACE&quot;&gt; &lt;code&gt;DEFAULT_INDEX_TABLESPACE&lt;/code&gt; &lt;/a&gt;，则在与表相同的表空间中创建索引。</target>
        </trans-unit>
        <trans-unit id="b734be08a43e058aa1a95c259b8e56f1c154ceee" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../../ref/settings#std:setting-SESSION_EXPIRE_AT_BROWSER_CLOSE&quot;&gt;&lt;code&gt;SESSION_EXPIRE_AT_BROWSER_CLOSE&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;, Django will use browser-length cookies &amp;ndash; cookies that expire as soon as the user closes their browser. Use this if you want people to have to log in every time they open a browser.</source>
          <target state="translated">如果&lt;a href=&quot;../../ref/settings#std:setting-SESSION_EXPIRE_AT_BROWSER_CLOSE&quot;&gt; &lt;code&gt;SESSION_EXPIRE_AT_BROWSER_CLOSE&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; ，则Django将使用浏览器长度的cookie，这些cookie会在用户关闭浏览器后立即失效。如果希望人们每次打开浏览器都必须登录，请使用此选项。</target>
        </trans-unit>
        <trans-unit id="302e4e8af81e0f64710dc3d22131d1a4420080dd" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_internal_type&quot;&gt;&lt;code&gt;get_internal_type()&lt;/code&gt;&lt;/a&gt; returns a string that is not known to Django for the database backend you are using &amp;ndash; that is, it doesn&amp;rsquo;t appear in &lt;code&gt;django.db.backends.&amp;lt;db_name&amp;gt;.base.DatabaseWrapper.data_types&lt;/code&gt; &amp;ndash; the string will still be used by the serializer, but the default &lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt;&lt;code&gt;db_type()&lt;/code&gt;&lt;/a&gt; method will return &lt;code&gt;None&lt;/code&gt;. See the documentation of &lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt;&lt;code&gt;db_type()&lt;/code&gt;&lt;/a&gt; for reasons why this might be useful. Putting a descriptive string in as the type of the field for the serializer is a useful idea if you&amp;rsquo;re ever going to be using the serializer output in some other place, outside of Django.</source>
          <target state="translated">如果&lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_internal_type&quot;&gt; &lt;code&gt;get_internal_type()&lt;/code&gt; &lt;/a&gt;返回您正在使用的数据库后端Django未知的字符串&amp;ndash;即，它不会出现在 &lt;code&gt;django.db.backends.&amp;lt;db_name&amp;gt;.base.DatabaseWrapper.data_types&lt;/code&gt; &amp;ndash;该字符串仍将由序列化程序使用，但是默认的&lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt; &lt;code&gt;db_type()&lt;/code&gt; &lt;/a&gt;方法将返回 &lt;code&gt;None&lt;/code&gt; 。有关可能有用的原因，请参见&lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt; &lt;code&gt;db_type()&lt;/code&gt; &lt;/a&gt;的文档。如果您打算在Django之外的其他地方使用序列化器输出，则将描述性字符串作为序列化器字段的类型放入是一个有用的想法。</target>
        </trans-unit>
        <trans-unit id="9e0fc6708169160a661ce0c5e2e5e51df935ab4d" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../ref/settings#std:setting-USE_I18N&quot;&gt;&lt;code&gt;USE_I18N&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt; the per-site middleware cache will &lt;a href=&quot;#i18n-cache-key&quot;&gt;respect the active language&lt;/a&gt;. For the &lt;code&gt;cache&lt;/code&gt; template tag you could use one of the &lt;a href=&quot;i18n/translation#template-translation-vars&quot;&gt;translation-specific variables&lt;/a&gt; available in templates to achieve the same result:</source>
          <target state="translated">如果&lt;a href=&quot;../ref/settings#std:setting-USE_I18N&quot;&gt; &lt;code&gt;USE_I18N&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; ,则每个站点的中间件缓存将&lt;a href=&quot;#i18n-cache-key&quot;&gt;遵循活动语言&lt;/a&gt;。对于 &lt;code&gt;cache&lt;/code&gt; 模板标记，您可以使用模板中可用&lt;a href=&quot;i18n/translation#template-translation-vars&quot;&gt;的特定&lt;/a&gt;于翻译的变量之一来获得相同的结果：</target>
        </trans-unit>
        <trans-unit id="1dec9c1c2d78ca0739125f223e56a616974c3604" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../ref/settings#std:setting-USE_I18N&quot;&gt;&lt;code&gt;USE_I18N&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt; then the generated cache key will include the name of the active &lt;a href=&quot;i18n/index#term-language-code&quot;&gt;language&lt;/a&gt; &amp;ndash; see also &lt;a href=&quot;i18n/translation#how-django-discovers-language-preference&quot;&gt;How Django discovers language preference&lt;/a&gt;). This allows you to easily cache multilingual sites without having to create the cache key yourself.</source>
          <target state="translated">如果&lt;a href=&quot;../ref/settings#std:setting-USE_I18N&quot;&gt; &lt;code&gt;USE_I18N&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; ,则生成的缓存键将包含活动&lt;a href=&quot;i18n/index#term-language-code&quot;&gt;语言&lt;/a&gt;的名称-另请参见&lt;a href=&quot;i18n/translation#how-django-discovers-language-preference&quot;&gt;Django如何发现语言首选项&lt;/a&gt;。这使您可以轻松地缓存多语言站点，而不必自己创建缓存密钥。</target>
        </trans-unit>
        <trans-unit id="ba088c9c367fa9bed0d2638a14b58c651b3e8138" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../settings#std:setting-USE_TZ&quot;&gt;&lt;code&gt;USE_TZ&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;, returns an aware &lt;code&gt;datetime&lt;/code&gt;, otherwise returns a naive &lt;code&gt;datetime&lt;/code&gt; in the local timezone.</source>
          <target state="translated">如果&lt;a href=&quot;../settings#std:setting-USE_TZ&quot;&gt; &lt;code&gt;USE_TZ&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;True&lt;/code&gt; ，则返回已知的 &lt;code&gt;datetime&lt;/code&gt; ，否则返回本地时区中的原始 &lt;code&gt;datetime&lt;/code&gt; 时间。</target>
        </trans-unit>
        <trans-unit id="a5717ee542a44db43b337277360e76d5d90d2062" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;fields#django.db.models.Field.db_tablespace&quot;&gt;&lt;code&gt;Field.db_tablespace&lt;/code&gt;&lt;/a&gt; isn&amp;rsquo;t specified (or if the index uses multiple fields), the index is created in tablespace specified in the &lt;a href=&quot;options#django.db.models.Options.db_tablespace&quot;&gt;&lt;code&gt;db_tablespace&lt;/code&gt;&lt;/a&gt; option inside the model&amp;rsquo;s &lt;code&gt;class Meta&lt;/code&gt;. If neither of those tablespaces are set, the index is created in the same tablespace as the table.</source>
          <target state="translated">如果未指定&lt;a href=&quot;fields#django.db.models.Field.db_tablespace&quot;&gt; &lt;code&gt;Field.db_tablespace&lt;/code&gt; &lt;/a&gt;（或者如果索引使用多个字段），则在模型 &lt;code&gt;class Meta&lt;/code&gt; 内&lt;a href=&quot;options#django.db.models.Options.db_tablespace&quot;&gt; &lt;code&gt;db_tablespace&lt;/code&gt; &lt;/a&gt;选项中指定的表空间中创建索引。如果未设置这些表空间，则将在与表相同的表空间中创建索引。</target>
        </trans-unit>
        <trans-unit id="bbd815722eda15f33dbfb7a5326a66902a84cfa1" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;settings#std:setting-APPEND_SLASH&quot;&gt;&lt;code&gt;APPEND_SLASH&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt; and the initial URL doesn&amp;rsquo;t end with a slash, and it is not found in the URLconf, then a new URL is formed by appending a slash at the end. If this new URL is found in the URLconf, then Django redirects the request to this new URL. Otherwise, the initial URL is processed as usual.</source>
          <target state="translated">如果&lt;a href=&quot;settings#std:setting-APPEND_SLASH&quot;&gt; &lt;code&gt;APPEND_SLASH&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;True&lt;/code&gt; ，并且初始URL不以斜杠结尾，并且在URLconf中找不到该URL，则通过在末尾附加斜杠来形成新的URL。如果在URLconf中找到此新URL，则Django会将请求重定向到该新URL。否则，将照常处理初始URL。</target>
        </trans-unit>
        <trans-unit id="703b7a5f7e217bd910de90ae15cc8cecb3bfbb50" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt; (in your settings module), then your 404 view will never be used, and your URLconf will be displayed instead, with some debug information.</source>
          <target state="translated">如果将&lt;a href=&quot;settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; （在您的设置模块中），则将永远不会使用404视图，而将显示URLconf以及一些调试信息。</target>
        </trans-unit>
        <trans-unit id="5eedf5297f17474dc2270509f5e5de780a61e4f2" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt; (in your settings module), then your 500 view will never be used, and the traceback will be displayed instead, with some debug information.</source>
          <target state="translated">如果将&lt;a href=&quot;settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; （在您的设置模块中），则将永远不会使用500视图，而是显示回溯以及一些调试信息。</target>
        </trans-unit>
        <trans-unit id="28f55ac704b0b514f68d7f33bfed23d6d400294d" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;settings#std:setting-PREPEND_WWW&quot;&gt;&lt;code&gt;PREPEND_WWW&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;, URLs that lack a leading &amp;ldquo;www.&amp;rdquo; will be redirected to the same URL with a leading &amp;ldquo;www.&amp;rdquo;</source>
          <target state="translated">如果&lt;a href=&quot;settings#std:setting-PREPEND_WWW&quot;&gt; &lt;code&gt;PREPEND_WWW&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;True&lt;/code&gt; ，则URL缺少前导&amp;ldquo; www&amp;rdquo;。将会被重定向到带有前导&amp;ldquo; www&amp;rdquo;的相同URL。</target>
        </trans-unit>
        <trans-unit id="9268883f3a170c41786d2f41528ad09a08f1df14" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;settings#std:setting-USE_TZ&quot;&gt;&lt;code&gt;USE_TZ&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;, this will be a &lt;a href=&quot;../topics/i18n/timezones#naive-vs-aware-datetimes&quot;&gt;naive&lt;/a&gt; datetime (i.e. a datetime without an associated timezone) that represents the current time in the system&amp;rsquo;s local timezone.</source>
          <target state="translated">如果&lt;a href=&quot;settings#std:setting-USE_TZ&quot;&gt; &lt;code&gt;USE_TZ&lt;/code&gt; &lt;/a&gt;是 &lt;code&gt;False&lt;/code&gt; ，这将是一个&lt;a href=&quot;../topics/i18n/timezones#naive-vs-aware-datetimes&quot;&gt;天真&lt;/a&gt;，它表示系统的本地时区的当前时间日期时间（即一个日期没有关联的时区）。</target>
        </trans-unit>
        <trans-unit id="c2de81b367dd71f5c015e5f41f8afee04e06b3cf" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;settings#std:setting-USE_TZ&quot;&gt;&lt;code&gt;USE_TZ&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;, this will be an &lt;a href=&quot;../topics/i18n/timezones#naive-vs-aware-datetimes&quot;&gt;aware&lt;/a&gt; datetime representing the current time in UTC. Note that &lt;a href=&quot;#django.utils.timezone.now&quot;&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/a&gt; will always return times in UTC regardless of the value of &lt;a href=&quot;settings#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt;; you can use &lt;a href=&quot;#django.utils.timezone.localtime&quot;&gt;&lt;code&gt;localtime()&lt;/code&gt;&lt;/a&gt; to get the time in the current time zone.</source>
          <target state="translated">如果&lt;a href=&quot;settings#std:setting-USE_TZ&quot;&gt; &lt;code&gt;USE_TZ&lt;/code&gt; &lt;/a&gt;是 &lt;code&gt;True&lt;/code&gt; ，这将是一个&lt;a href=&quot;../topics/i18n/timezones#naive-vs-aware-datetimes&quot;&gt;知道&lt;/a&gt;代表UTC当前时间日期时间。注意&lt;a href=&quot;#django.utils.timezone.now&quot;&gt; &lt;code&gt;now()&lt;/code&gt; &lt;/a&gt;将始终以UTC返回时间，而不管&lt;a href=&quot;settings#std:setting-TIME_ZONE&quot;&gt; &lt;code&gt;TIME_ZONE&lt;/code&gt; &lt;/a&gt;的值如何；您可以使用&lt;a href=&quot;#django.utils.timezone.localtime&quot;&gt; &lt;code&gt;localtime()&lt;/code&gt; &lt;/a&gt;获取当前时区的时间。</target>
        </trans-unit>
        <trans-unit id="d132c69aa17f397b9e7aeef1bf23acca8692c78b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; is empty and &lt;code&gt;DEBUG=True&lt;/code&gt;, subdomains of localhost were allowed.</source>
          <target state="translated">如果 &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; 为空并且 &lt;code&gt;DEBUG=True&lt;/code&gt; ，则允许localhost的子域。</target>
        </trans-unit>
        <trans-unit id="57215ad4aec3fe8e542fb77429da4ec0f6b316a2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Blog&lt;/code&gt; had &lt;code&gt;ordering = ['name']&lt;/code&gt;, then the first queryset would be identical to:</source>
          <target state="translated">如果 &lt;code&gt;Blog&lt;/code&gt; 具有 &lt;code&gt;ordering = ['name']&lt;/code&gt; ，则第一个查询集将等于：</target>
        </trans-unit>
        <trans-unit id="915ff9d1a4c7c8ff8163f55e3d64c8bec0860f25" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Client.raise_request_exception&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, the test client will return a 500 response as would be returned to a browser. The response has the attribute &lt;a href=&quot;#django.test.Response.exc_info&quot;&gt;&lt;code&gt;exc_info&lt;/code&gt;&lt;/a&gt; to provide information about the unhandled exception.</source>
          <target state="translated">如果 &lt;code&gt;Client.raise_request_exception&lt;/code&gt; 为 &lt;code&gt;False&lt;/code&gt; ，则测试客户端将返回500响应，就像返回浏览器一样。该响应具有属性&lt;a href=&quot;#django.test.Response.exc_info&quot;&gt; &lt;code&gt;exc_info&lt;/code&gt; &lt;/a&gt;以提供有关未处理异常的信息。</target>
        </trans-unit>
        <trans-unit id="abf361655e63d0be9b5f070d1dac967ddae52b37" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;EntryManager&lt;/code&gt; performed default filtering in its &lt;code&gt;get_queryset()&lt;/code&gt; method, that filtering would apply to the &lt;code&gt;all()&lt;/code&gt; call.</source>
          <target state="translated">如果 &lt;code&gt;EntryManager&lt;/code&gt; 在其 &lt;code&gt;get_queryset()&lt;/code&gt; 方法中执行了默认过滤，则该过滤将应用于 &lt;code&gt;all()&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="93630d6eedd2025ff2ec8981f5e933b31e83e1d4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;False&lt;/code&gt; (default), the upper bound is exclusive &lt;code&gt;')'&lt;/code&gt;, otherwise it&amp;rsquo;s inclusive &lt;code&gt;']'&lt;/code&gt;.</source>
          <target state="translated">如果为 &lt;code&gt;False&lt;/code&gt; （默认值），则上限为互斥 &lt;code&gt;')'&lt;/code&gt; ，否则为互斥 &lt;code&gt;']'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18778cefe298f546baad10095627a522a85d4d98" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;False&lt;/code&gt; (the default) only the direct contents of &lt;code&gt;path&lt;/code&gt; will be offered as choices. If &lt;code&gt;True&lt;/code&gt;, the directory will be descended into recursively and all descendants will be listed as choices.</source>
          <target state="translated">如果为 &lt;code&gt;False&lt;/code&gt; （默认值），则仅提供 &lt;code&gt;path&lt;/code&gt; 的直接内容作为选择。如果为 &lt;code&gt;True&lt;/code&gt; ，则目录将以递归方式降级，并且所有后代都将列为选项。</target>
        </trans-unit>
        <trans-unit id="8580bd511e1e56fc6a57ce10bc1a3957d3e92eef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;False&lt;/code&gt;, no database table creation or deletion operations will be performed for this model. This is useful if the model represents an existing table or a database view that has been created by some other means. This is the &lt;em&gt;only&lt;/em&gt; difference when &lt;code&gt;managed=False&lt;/code&gt;. All other aspects of model handling are exactly the same as normal. This includes</source>
          <target state="translated">如果为 &lt;code&gt;False&lt;/code&gt; ，则不会对此模型执行数据库表创建或删除操作。如果模型表示通过其他某种方式创建的现有表或数据库视图，则此功能很有用。这是 &lt;code&gt;managed=False&lt;/code&gt; 时的&lt;em&gt;唯一&lt;/em&gt;区别。模型处理的所有其他方面与正常情况完全相同。这包括</target>
        </trans-unit>
        <trans-unit id="1196f2e1c99c84b45ad9ac3e676f34a8c3e7b1e3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;False&lt;/code&gt;, no database table creation, modification, or deletion operations will be performed for this model. This is useful if the model represents an existing table or a database view that has been created by some other means. This is the &lt;em&gt;only&lt;/em&gt; difference when &lt;code&gt;managed=False&lt;/code&gt;. All other aspects of model handling are exactly the same as normal. This includes</source>
          <target state="translated">如果为 &lt;code&gt;False&lt;/code&gt; ，则不会对此模型执行数据库表的创建，修改或删除操作。如果模型表示现有表或通过其他某种方式创建的数据库视图，则此功能很有用。这是 &lt;code&gt;managed=False&lt;/code&gt; 时的&lt;em&gt;唯一&lt;/em&gt;区别。模型处理的所有其他方面与正常情况完全相同。这包括</target>
        </trans-unit>
        <trans-unit id="b5afc96ec010c7587fe847918d3f0b1cbd618c34" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;False&lt;/code&gt;, the field will be able to reference proxy models. Default is &lt;code&gt;True&lt;/code&gt;. This mirrors the &lt;code&gt;for_concrete_model&lt;/code&gt; argument to &lt;a href=&quot;#django.contrib.contenttypes.models.ContentTypeManager.get_for_model&quot;&gt;&lt;code&gt;get_for_model()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果为 &lt;code&gt;False&lt;/code&gt; ，那么该字段将能够引用代理模型。默认值为 &lt;code&gt;True&lt;/code&gt; 。这将 &lt;code&gt;for_concrete_model&lt;/code&gt; 参数镜像到&lt;a href=&quot;#django.contrib.contenttypes.models.ContentTypeManager.get_for_model&quot;&gt; &lt;code&gt;get_for_model()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ecc7857237fad6548c3573566a3dff629cc4ca4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;False&lt;/code&gt;, the field will not be displayed in the admin or any other &lt;a href=&quot;../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt;. They are also skipped during &lt;a href=&quot;instances#validating-objects&quot;&gt;model validation&lt;/a&gt;. Default is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">如果为 &lt;code&gt;False&lt;/code&gt; ，则该字段将不会显示在admin或任何其他&lt;a href=&quot;../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; 中&lt;/a&gt;。在&lt;a href=&quot;instances#validating-objects&quot;&gt;模型验证&lt;/a&gt;期间也将跳过它们。默认值为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a394bcde334572fe03593b3cb90dfa9215df0e6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;None&lt;/code&gt;, no redirect will be performed and the logout view will be rendered.</source>
          <target state="translated">如果为 &lt;code&gt;None&lt;/code&gt; ，则不会执行任何重定向，并且将呈现注销视图。</target>
        </trans-unit>
        <trans-unit id="967733181a22434f2b539a31845b38708e94e3fa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;None&lt;/code&gt;, you&amp;rsquo;ll get operating-system dependent behavior. On most platforms, temporary files will have a mode of &lt;code&gt;0o600&lt;/code&gt;, and files saved from memory will be saved using the system&amp;rsquo;s standard umask.</source>
          <target state="translated">如果为 &lt;code&gt;None&lt;/code&gt; ，则将获得操作系统相关的行为。在大多数平台上，临时文件的模式为 &lt;code&gt;0o600&lt;/code&gt; ，而从内存中保存的文件将使用系统的标准umask保存。</target>
        </trans-unit>
        <trans-unit id="1ea11f1dd3469689c6da4beae549200413dad0f6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;TestMixin1&lt;/code&gt; would call &lt;code&gt;super()&lt;/code&gt; and take that result into account, &lt;code&gt;TestMixin1&lt;/code&gt; wouldn&amp;rsquo;t work standalone anymore.</source>
          <target state="translated">如果 &lt;code&gt;TestMixin1&lt;/code&gt; 将调用 &lt;code&gt;super()&lt;/code&gt; 并考虑到该结果，则 &lt;code&gt;TestMixin1&lt;/code&gt; 将不再独立运行。</target>
        </trans-unit>
        <trans-unit id="6769b5f470623bf5a1a01f00daddb8704bd14842" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt; (default), the lower bound is inclusive &lt;code&gt;'['&lt;/code&gt;, otherwise it&amp;rsquo;s exclusive &lt;code&gt;'('&lt;/code&gt;.</source>
          <target state="translated">如果为 &lt;code&gt;True&lt;/code&gt; （默认值），则下限为包含的 &lt;code&gt;'['&lt;/code&gt; ，否则为专有的 &lt;code&gt;'('&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac0108b91dd39d35eec7c74542b910976de59f38" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt; (default), the value will be stripped of leading and trailing whitespace.</source>
          <target state="translated">如果为 &lt;code&gt;True&lt;/code&gt; （默认），则该值将去除开头和结尾的空格。</target>
        </trans-unit>
        <trans-unit id="0889dcaa5531b627194e2e75f61b16d17c01c4c1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, Django will store empty values as &lt;code&gt;NULL&lt;/code&gt; in the database. Default is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">如果为 &lt;code&gt;True&lt;/code&gt; ，Django将在数据库中将空值存储为 &lt;code&gt;NULL&lt;/code&gt; 。默认值为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5ac068b66f4ddfe5eb27d866c030ede7da7d0d3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, a database index will be created for this field.</source>
          <target state="translated">如果为 &lt;code&gt;True&lt;/code&gt; ，将为此字段创建数据库索引。</target>
        </trans-unit>
        <trans-unit id="f9534fba934e74f7ef1a7dd6e9bc77488b38aafe" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, causes &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.get_object&quot;&gt;&lt;code&gt;get_object()&lt;/code&gt;&lt;/a&gt; to perform its lookup using both the primary key and the slug. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">如果为 &lt;code&gt;True&lt;/code&gt; ，则使&lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.get_object&quot;&gt; &lt;code&gt;get_object()&lt;/code&gt; &lt;/a&gt;使用主键和子弹执行查找。默认为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="758c3834bb8ce6505681916f3fb282790c5a617b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, the &lt;a href=&quot;middleware#django.middleware.security.SecurityMiddleware&quot;&gt;&lt;code&gt;SecurityMiddleware&lt;/code&gt;&lt;/a&gt; adds the &lt;code&gt;includeSubDomains&lt;/code&gt; directive to the &lt;a href=&quot;middleware#http-strict-transport-security&quot;&gt;HTTP Strict Transport Security&lt;/a&gt; header. It has no effect unless &lt;a href=&quot;#std:setting-SECURE_HSTS_SECONDS&quot;&gt;&lt;code&gt;SECURE_HSTS_SECONDS&lt;/code&gt;&lt;/a&gt; is set to a non-zero value.</source>
          <target state="translated">如果为 &lt;code&gt;True&lt;/code&gt; ，则&lt;a href=&quot;middleware#django.middleware.security.SecurityMiddleware&quot;&gt; &lt;code&gt;SecurityMiddleware&lt;/code&gt; &lt;/a&gt;会将 &lt;code&gt;includeSubDomains&lt;/code&gt; 指令添加到&lt;a href=&quot;middleware#http-strict-transport-security&quot;&gt;HTTP Strict Transport Security&lt;/a&gt;标头中。除非将&lt;a href=&quot;#std:setting-SECURE_HSTS_SECONDS&quot;&gt; &lt;code&gt;SECURE_HSTS_SECONDS&lt;/code&gt; &lt;/a&gt;设置为非零值，否则它无效。</target>
        </trans-unit>
        <trans-unit id="bf5376ee839b91d8f49b195845182cc96ba96ad8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, the &lt;a href=&quot;middleware#django.middleware.security.SecurityMiddleware&quot;&gt;&lt;code&gt;SecurityMiddleware&lt;/code&gt;&lt;/a&gt; adds the &lt;code&gt;preload&lt;/code&gt; directive to the &lt;a href=&quot;middleware#http-strict-transport-security&quot;&gt;HTTP Strict Transport Security&lt;/a&gt; header. It has no effect unless &lt;a href=&quot;#std:setting-SECURE_HSTS_SECONDS&quot;&gt;&lt;code&gt;SECURE_HSTS_SECONDS&lt;/code&gt;&lt;/a&gt; is set to a non-zero value.</source>
          <target state="translated">如果为 &lt;code&gt;True&lt;/code&gt; ，则&lt;a href=&quot;middleware#django.middleware.security.SecurityMiddleware&quot;&gt; &lt;code&gt;SecurityMiddleware&lt;/code&gt; &lt;/a&gt;将 &lt;code&gt;preload&lt;/code&gt; 指令添加到&lt;a href=&quot;middleware#http-strict-transport-security&quot;&gt;HTTP Strict Transport Security&lt;/a&gt;标头中。除非将&lt;a href=&quot;#std:setting-SECURE_HSTS_SECONDS&quot;&gt; &lt;code&gt;SECURE_HSTS_SECONDS&lt;/code&gt; &lt;/a&gt;设置为非零值，否则它无效。</target>
        </trans-unit>
        <trans-unit id="7269473ae0ab0fa0cde96c635f4c57333c8000c0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, the &lt;a href=&quot;middleware#django.middleware.security.SecurityMiddleware&quot;&gt;&lt;code&gt;SecurityMiddleware&lt;/code&gt;&lt;/a&gt; sets the &lt;a href=&quot;middleware#x-content-type-options&quot;&gt;X-Content-Type-Options: nosniff&lt;/a&gt; header on all responses that do not already have it.</source>
          <target state="translated">如果 &lt;code&gt;True&lt;/code&gt; ，则&lt;a href=&quot;middleware#django.middleware.security.SecurityMiddleware&quot;&gt; &lt;code&gt;SecurityMiddleware&lt;/code&gt; &lt;/a&gt;设置&lt;a href=&quot;middleware#x-content-type-options&quot;&gt;X-Content-Type的选项：nosniff&lt;/a&gt;上还没有它的所有响应头。</target>
        </trans-unit>
        <trans-unit id="06532e19f603440c20d409e3e0783241dddf0594" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, the &lt;a href=&quot;middleware#django.middleware.security.SecurityMiddleware&quot;&gt;&lt;code&gt;SecurityMiddleware&lt;/code&gt;&lt;/a&gt; sets the &lt;a href=&quot;middleware#x-xss-protection&quot;&gt;X-XSS-Protection: 1; mode=block&lt;/a&gt; header on all responses that do not already have it.</source>
          <target state="translated">如果为 &lt;code&gt;True&lt;/code&gt; ，则&lt;a href=&quot;middleware#django.middleware.security.SecurityMiddleware&quot;&gt; &lt;code&gt;SecurityMiddleware&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;middleware#x-xss-protection&quot;&gt;会将X-XSS-Protection&lt;/a&gt;设置为：1；在所有没有响应的响应上使用mode = block头。</target>
        </trans-unit>
        <trans-unit id="3aa67e9c195274834b1514184f81665a3681157f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, the &lt;a href=&quot;middleware#django.middleware.security.SecurityMiddleware&quot;&gt;&lt;code&gt;SecurityMiddleware&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;middleware#ssl-redirect&quot;&gt;redirects&lt;/a&gt; all non-HTTPS requests to HTTPS (except for those URLs matching a regular expression listed in &lt;a href=&quot;#std:setting-SECURE_REDIRECT_EXEMPT&quot;&gt;&lt;code&gt;SECURE_REDIRECT_EXEMPT&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">如果为 &lt;code&gt;True&lt;/code&gt; ，则&lt;a href=&quot;middleware#django.middleware.security.SecurityMiddleware&quot;&gt; &lt;code&gt;SecurityMiddleware&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;middleware#ssl-redirect&quot;&gt;会将&lt;/a&gt;所有非HTTPS请求重定向到HTTPS（与&lt;a href=&quot;#std:setting-SECURE_REDIRECT_EXEMPT&quot;&gt; &lt;code&gt;SECURE_REDIRECT_EXEMPT&lt;/code&gt; 中&lt;/a&gt;列出的正则表达式匹配的URL除外）。</target>
        </trans-unit>
        <trans-unit id="1fe34d7fa424adbe99975f44452f0cb8c9b26460" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, the field accepts Unicode letters in addition to ASCII letters. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">如果为 &lt;code&gt;True&lt;/code&gt; ，则该字段除了接受ASCII字母外，还接受Unicode字母。默认为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94ca19b3ecb3f8bbe3f1a9bff2249de7c42b4ee0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, the field is allowed to be blank. Default is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">如果为 &lt;code&gt;True&lt;/code&gt; ，则该字段允许为空白。默认值为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e99788f392fe32220f3399732e6992bdae5fd30" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, this field is the primary key for the model.</source>
          <target state="translated">如果为 &lt;code&gt;True&lt;/code&gt; ，那么此字段是模型的主键。</target>
        </trans-unit>
        <trans-unit id="b0a8661c8043a78d79876d7e0eed097ed9a770fd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, this field must be unique throughout the table.</source>
          <target state="translated">如果为 &lt;code&gt;True&lt;/code&gt; ，则该字段在整个表中必须是唯一的。</target>
        </trans-unit>
        <trans-unit id="a121385ed8cbdd359e3d02312aea0ad306878456" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;abstract = True&lt;/code&gt;, this model will be an &lt;a href=&quot;../../topics/db/models#abstract-base-classes&quot;&gt;abstract base class&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;abstract = True&lt;/code&gt; ，则此模型将是&lt;a href=&quot;../../topics/db/models#abstract-base-classes&quot;&gt;抽象基类&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c0bcccb8df0544ee276445e6621dc3c3b97509cb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;allowed_permissions&lt;/code&gt; has more than one permission, the action will be available as long as the user passes at least one of the checks.</source>
          <target state="translated">如果 &lt;code&gt;allowed_permissions&lt;/code&gt; 具有多个权限，则只要用户通过了至少一项检查，该操作就可用。</target>
        </trans-unit>
        <trans-unit id="ac69109cdc61dd101b981bea9a5dba1484d0b872" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;app_configs&lt;/code&gt; and &lt;code&gt;tags&lt;/code&gt; are both &lt;code&gt;None&lt;/code&gt;, all system checks are performed. &lt;code&gt;tags&lt;/code&gt; can be a list of check tags, like &lt;code&gt;compatibility&lt;/code&gt; or &lt;code&gt;models&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;app_configs&lt;/code&gt; 和 &lt;code&gt;tags&lt;/code&gt; 均为 &lt;code&gt;None&lt;/code&gt; ，则执行所有系统检查。 &lt;code&gt;tags&lt;/code&gt; 可以是检查标签的列表，例如 &lt;code&gt;compatibility&lt;/code&gt; 或 &lt;code&gt;models&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6615ec052ef5b32e9a7ddc0191176c4b5da7db9c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;as_attachment=True&lt;/code&gt;, the &lt;code&gt;Content-Disposition&lt;/code&gt; header is set to &lt;code&gt;attachment&lt;/code&gt;, which asks the browser to offer the file to the user as a download. Otherwise, a &lt;code&gt;Content-Disposition&lt;/code&gt; header with a value of &lt;code&gt;inline&lt;/code&gt; (the browser default) will be set only if a filename is available.</source>
          <target state="translated">如果 &lt;code&gt;as_attachment=True&lt;/code&gt; ，则 &lt;code&gt;Content-Disposition&lt;/code&gt; 标头设置为 &lt;code&gt;attachment&lt;/code&gt; ，要求浏览器将文件提供给用户下载。否则，仅当文件名可用时，才会设置 &lt;code&gt;inline&lt;/code&gt; 值的 &lt;code&gt;Content-Disposition&lt;/code&gt; 标头（浏览器默认）。</target>
        </trans-unit>
        <trans-unit id="d6efdd4d6808763901e2a4ef79dd40c79a07e12c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;auto_id&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, then the form output will not include &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; tags nor &lt;code&gt;id&lt;/code&gt; attributes:</source>
          <target state="translated">如果 &lt;code&gt;auto_id&lt;/code&gt; 为 &lt;code&gt;False&lt;/code&gt; ，则表单输出将不包含 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 标记或 &lt;code&gt;id&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="3cc984f7eb8796fb1fd928f2b24d9c6845248e58" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;auto_id&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;, then the form output &lt;em&gt;will&lt;/em&gt; include &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; tags and will use the field name as its &lt;code&gt;id&lt;/code&gt; for each form field:</source>
          <target state="translated">如果 &lt;code&gt;auto_id&lt;/code&gt; 设置为 &lt;code&gt;True&lt;/code&gt; ，则表单输出&lt;em&gt;将&lt;/em&gt;包含 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 标记，并将使用字段名称作为每个表单字段的 &lt;code&gt;id&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c915e73a9f6e71c73afac26838e8f2e10b0b4b57" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;auto_id&lt;/code&gt; is set to a string containing the format character &lt;code&gt;'%s'&lt;/code&gt;, then the form output will include &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; tags, and will generate &lt;code&gt;id&lt;/code&gt; attributes based on the format string. For example, for a format string &lt;code&gt;'field_%s'&lt;/code&gt;, a field named &lt;code&gt;subject&lt;/code&gt; will get the &lt;code&gt;id&lt;/code&gt; value &lt;code&gt;'field_subject'&lt;/code&gt;. Continuing our example:</source>
          <target state="translated">如果将 &lt;code&gt;auto_id&lt;/code&gt; 设置为包含格式字符 &lt;code&gt;'%s'&lt;/code&gt; 的字符串，则表单输出将包含 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 标记，并将基于格式字符串生成 &lt;code&gt;id&lt;/code&gt; 属性。例如，对于格式字符串 &lt;code&gt;'field_%s'&lt;/code&gt; ，名为 &lt;code&gt;subject&lt;/code&gt; 的字段将获得 &lt;code&gt;id&lt;/code&gt; 值 &lt;code&gt;'field_subject'&lt;/code&gt; 。继续我们的示例：</target>
        </trans-unit>
        <trans-unit id="3264738ae83ae7d0a0ed8e3fb36220d1bd14caff" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;auto_id&lt;/code&gt; is set to any other true value &amp;ndash; such as a string that doesn&amp;rsquo;t include &lt;code&gt;%s&lt;/code&gt; &amp;ndash; then the library will act as if &lt;code&gt;auto_id&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">如果将 &lt;code&gt;auto_id&lt;/code&gt; 设置为其他任何真值（例如不包含 &lt;code&gt;%s&lt;/code&gt; 的字符串），则库将像 &lt;code&gt;auto_id&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; 一样工作。</target>
        </trans-unit>
        <trans-unit id="3e0883ecf28d02e1a38399c6f3915b7fcc7015ae" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;autoclobber&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, the user will be asked to approve destroying the existing database. &lt;code&gt;sys.exit&lt;/code&gt; is called if the user does not approve.</source>
          <target state="translated">如果 &lt;code&gt;autoclobber&lt;/code&gt; 为 &lt;code&gt;False&lt;/code&gt; ，将要求用户批准销毁现有数据库。如果用户不同意，则调用 &lt;code&gt;sys.exit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98e4a76b7e84d38f335e28bca3305209202dca5b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;backend&lt;/code&gt; is passed in and it&amp;rsquo;s defined in &lt;a href=&quot;../settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt;&lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt;&lt;/a&gt;, then this method will use it. Otherwise, it will use the &lt;code&gt;backend&lt;/code&gt; in &lt;a href=&quot;../settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt;&lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt;&lt;/a&gt;, if there is only one, or raise an exception.</source>
          <target state="translated">如果 &lt;code&gt;backend&lt;/code&gt; 传入并且在&lt;a href=&quot;../settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt; &lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt; 中&lt;/a&gt;定义，则此方法将使用它。否则，它将使用 &lt;code&gt;backend&lt;/code&gt; 的&lt;a href=&quot;../settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt; &lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt; &lt;/a&gt;，如果只有一个，或引发异常。</target>
        </trans-unit>
        <trans-unit id="375cd7296bfab6553a96bb4023ab0d2f1474319f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;books&lt;/code&gt; is:</source>
          <target state="translated">如果 &lt;code&gt;books&lt;/code&gt; 是：</target>
        </trans-unit>
        <trans-unit id="c362f4eb9d4fc883dad853b368e887b80e39db88" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;buffer&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, outputs from passing tests will be discarded.</source>
          <target state="translated">如果 &lt;code&gt;buffer&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ，则通过测试的输出将被丢弃。</target>
        </trans-unit>
        <trans-unit id="1a7c8aa34e3c2c04547138e30fa08eb1d3557164" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;check_path&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, the function first checks the requested URL for whether its path begins with a language code listed in the &lt;a href=&quot;settings#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">如果 &lt;code&gt;check_path&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ，则该函数首先检查所请求的URL，以确定其路径是否以&lt;a href=&quot;settings#std:setting-LANGUAGES&quot;&gt; &lt;code&gt;LANGUAGES&lt;/code&gt; &lt;/a&gt;设置中列出的语言代码开头。</target>
        </trans-unit>
        <trans-unit id="c8ec35a2ea23587d9fe9a54f0ca32995bf582faf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;context&lt;/code&gt; is provided, it must be a &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;. If it isn&amp;rsquo;t provided, the engine will render the template with an empty context.</source>
          <target state="translated">如果提供了 &lt;code&gt;context&lt;/code&gt; ，则必须是&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;。如果未提供，则引擎将使用空上下文呈现模板。</target>
        </trans-unit>
        <trans-unit id="17d141a9754d51166d4f3a44118b415f530a4910" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;debug&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, these loaders are wrapped in &lt;a href=&quot;#django.template.loaders.cached.Loader&quot;&gt;&lt;code&gt;django.template.loaders.cached.Loader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;debug&lt;/code&gt; 为 &lt;code&gt;False&lt;/code&gt; ，则这些加载器将包装在&lt;a href=&quot;#django.template.loaders.cached.Loader&quot;&gt; &lt;code&gt;django.template.loaders.cached.Loader&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0f4c76818b3f8b7eae0f4fc29ad7ccd7c54fd6d2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;debug&lt;/code&gt; isn&amp;rsquo;t &lt;code&gt;None&lt;/code&gt;, the &lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; setting is updated to its value.</source>
          <target state="translated">如果 &lt;code&gt;debug&lt;/code&gt; 不为 &lt;code&gt;None&lt;/code&gt; ，则&lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;设置将更新为其值。</target>
        </trans-unit>
        <trans-unit id="fd405748877e5e65871815a667f3253dfbbccc4b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;debug_sql&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, failing test cases will output SQL queries logged to the &lt;a href=&quot;../logging#django-db-logger&quot;&gt;django.db.backends logger&lt;/a&gt; as well as the traceback. If &lt;code&gt;verbosity&lt;/code&gt; is &lt;code&gt;2&lt;/code&gt;, then queries in all tests are output.</source>
          <target state="translated">如果 &lt;code&gt;debug_sql&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ，那么失败的测试用例将输出记录到&lt;a href=&quot;../logging#django-db-logger&quot;&gt;django.db.backends记录器&lt;/a&gt;以及回溯中的SQL查询。如果 &lt;code&gt;verbosity&lt;/code&gt; 为 &lt;code&gt;2&lt;/code&gt; ，则输出所有测试中的查询。</target>
        </trans-unit>
        <trans-unit id="3b7f214abcf2191401e59d4b6763d7f1cc638a5b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;distinct=True&lt;/code&gt;, &lt;code&gt;Avg&lt;/code&gt; returns the mean value of unique values. This is the SQL equivalent of &lt;code&gt;AVG(DISTINCT &amp;lt;field&amp;gt;)&lt;/code&gt;. The default value is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;distinct=True&lt;/code&gt; ，则 &lt;code&gt;Avg&lt;/code&gt; 返回唯一值的平均值。这是SQL的 &lt;code&gt;AVG(DISTINCT &amp;lt;field&amp;gt;)&lt;/code&gt; 的等效项。默认值为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3bcdf7ed01d6c4e579221df819cdfdb4ec55a4a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;distinct=True&lt;/code&gt;, &lt;code&gt;Sum&lt;/code&gt; returns the sum of unique values. This is the SQL equivalent of &lt;code&gt;SUM(DISTINCT &amp;lt;field&amp;gt;)&lt;/code&gt;. The default value is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;distinct=True&lt;/code&gt; ，则 &lt;code&gt;Sum&lt;/code&gt; 返回唯一值的总和。这是SQL的 &lt;code&gt;SUM(DISTINCT &amp;lt;field&amp;gt;)&lt;/code&gt; 等效项。默认值为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e396e16bde5b9f0db7d59755293462c7fa1e84b0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;distinct=True&lt;/code&gt;, the count will only include unique instances. This is the SQL equivalent of &lt;code&gt;COUNT(DISTINCT &amp;lt;field&amp;gt;)&lt;/code&gt;. The default value is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;distinct=True&lt;/code&gt; ，则计数将仅包括唯一实例。这是 &lt;code&gt;COUNT(DISTINCT &amp;lt;field&amp;gt;)&lt;/code&gt; 的SQL等效项。默认值为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e9f695c5cdafd569ee51fc695279eb0e6f896f6f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;django-admin&lt;/code&gt; only displays the help text no matter what arguments it is given, there is probably a problem with the file association in Windows. Check if there is more than one environment variable set for running Python scripts in &lt;code&gt;PATH&lt;/code&gt;. This usually occurs when there is more than one Python version installed.</source>
          <target state="translated">如果 &lt;code&gt;django-admin&lt;/code&gt; 无论给出什么参数都仅显示帮助文本，则Windows中的文件关联可能存在问题。检查在 &lt;code&gt;PATH&lt;/code&gt; 中是否设置了多个用于运行Python脚本的环境变量。当安装了多个Python版本时，通常会发生这种情况。</target>
        </trans-unit>
        <trans-unit id="361315ebe5ec678bf8ab55ad6dc27bfd903864d3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;failfast&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, the test suite will stop running after the first test failure is detected.</source>
          <target state="translated">如果 &lt;code&gt;failfast&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ，则在检测到第一个测试失败后，测试套件将停止运行。</target>
        </trans-unit>
        <trans-unit id="553d84602f7d657ca01d69ac24fa1a843b57d59e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;fetch_redirect_response&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, the final page won&amp;rsquo;t be loaded. Since the test client can&amp;rsquo;t fetch external URLs, this is particularly useful if &lt;code&gt;expected_url&lt;/code&gt; isn&amp;rsquo;t part of your Django app.</source>
          <target state="translated">如果 &lt;code&gt;fetch_redirect_response&lt;/code&gt; 为 &lt;code&gt;False&lt;/code&gt; ，则不会加载最后一页。由于测试客户端无法获取外部URL，因此如果 &lt;code&gt;expected_url&lt;/code&gt; 不是您的Django应用程序的一部分，则这特别有用。</target>
        </trans-unit>
        <trans-unit id="aa845bb6d3fc5ac41cd79bc147d6aec3b05b0f54" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;get()&lt;/code&gt; doesn&amp;rsquo;t find any object, it raises a &lt;a href=&quot;class#django.db.models.Model.DoesNotExist&quot;&gt;&lt;code&gt;Model.DoesNotExist&lt;/code&gt;&lt;/a&gt; exception:</source>
          <target state="translated">如果 &lt;code&gt;get()&lt;/code&gt; 找不到任何对象，则会引发&lt;a href=&quot;class#django.db.models.Model.DoesNotExist&quot;&gt; &lt;code&gt;Model.DoesNotExist&lt;/code&gt; &lt;/a&gt;异常：</target>
        </trans-unit>
        <trans-unit id="d0b969b258b0b680f2a5e4e2993f89a44307e3bf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;get()&lt;/code&gt; finds more than one object, it raises a &lt;a href=&quot;class#django.db.models.Model.MultipleObjectsReturned&quot;&gt;&lt;code&gt;Model.MultipleObjectsReturned&lt;/code&gt;&lt;/a&gt; exception:</source>
          <target state="translated">如果 &lt;code&gt;get()&lt;/code&gt; 找到多个对象，则会引发&lt;a href=&quot;class#django.db.models.Model.MultipleObjectsReturned&quot;&gt; &lt;code&gt;Model.MultipleObjectsReturned&lt;/code&gt; &lt;/a&gt;异常：</target>
        </trans-unit>
        <trans-unit id="9b9986686bc1debc8466f09df6e013f28b9ad282" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;html_message&lt;/code&gt; is provided, the resulting email will be a &lt;em&gt;multipart/alternative&lt;/em&gt; email with &lt;code&gt;message&lt;/code&gt; as the &lt;em&gt;text/plain&lt;/em&gt; content type and &lt;code&gt;html_message&lt;/code&gt; as the &lt;em&gt;text/html&lt;/em&gt; content type.</source>
          <target state="translated">如果提供了 &lt;code&gt;html_message&lt;/code&gt; ，则生成的电子邮件将是&lt;em&gt;多部分/替代&lt;/em&gt;电子邮件，其中 &lt;code&gt;message&lt;/code&gt; 为&lt;em&gt;文本/纯&lt;/em&gt;内容类型，而 &lt;code&gt;html_message&lt;/code&gt; 为&lt;em&gt;文本/ html&lt;/em&gt;内容类型。</target>
        </trans-unit>
        <trans-unit id="941ffb3faea2e8e3929fbee655ba7559bab0a4f8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;include_superusers&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt; (default), the result will include superusers.</source>
          <target state="translated">如果 &lt;code&gt;include_superusers&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; （默认值），则结果将包括超级用户。</target>
        </trans-unit>
        <trans-unit id="949941ab38e1b5f16c207535d23d3aea1d5f9972" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;inspectdb&lt;/code&gt; cannot map a column&amp;rsquo;s type to a model field type, it&amp;rsquo;ll use &lt;code&gt;TextField&lt;/code&gt; and will insert the Python comment &lt;code&gt;'This field type is a guess.'&lt;/code&gt; next to the field in the generated model. The recognized fields may depend on apps listed in &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;. For example, &lt;a href=&quot;contrib/postgres/index#module-django.contrib.postgres&quot;&gt;&lt;code&gt;django.contrib.postgres&lt;/code&gt;&lt;/a&gt; adds recognition for several PostgreSQL-specific field types.</source>
          <target state="translated">如果 &lt;code&gt;inspectdb&lt;/code&gt; 无法将列的类型映射到模型字段类型，它将使用 &lt;code&gt;TextField&lt;/code&gt; 并插入Python注释 &lt;code&gt;'This field type is a guess.'&lt;/code&gt; 在生成的模型中的字段旁边。识别的字段可能取决于&lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 中&lt;/a&gt;列出的应用。例如，&lt;a href=&quot;contrib/postgres/index#module-django.contrib.postgres&quot;&gt; &lt;code&gt;django.contrib.postgres&lt;/code&gt; &lt;/a&gt;添加了对几种特定于PostgreSQL的字段类型的识别。</target>
        </trans-unit>
        <trans-unit id="858f3c43f659ce4cbaef07711c393bd1533ced3f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;interactive&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, it&amp;rsquo;s safe to prompt the user to input things on the command line. If &lt;code&gt;interactive&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, functions which listen for this signal should not try to prompt for anything.</source>
          <target state="translated">如果 &lt;code&gt;interactive&lt;/code&gt; 是 &lt;code&gt;True&lt;/code&gt; ，则可以安全地提示用户在命令行上输入内容。如果 &lt;code&gt;interactive&lt;/code&gt; 为 &lt;code&gt;False&lt;/code&gt; ，则侦听此信号的函数不应尝试提示任何内容。</target>
        </trans-unit>
        <trans-unit id="626b4c25c6b37295fc6b45206394744f58a53eb8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;interactive&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, the test suite has permission to ask the user for instructions when the test suite is executed. An example of this behavior would be asking for permission to delete an existing test database. If &lt;code&gt;interactive&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, the test suite must be able to run without any manual intervention.</source>
          <target state="translated">如果 &lt;code&gt;interactive&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ，则执行测试套件时，测试套件有权向用户询问指令。此行为的一个示例是要求获得删除现有测试数据库的权限。如果 &lt;code&gt;interactive&lt;/code&gt; 为 &lt;code&gt;False&lt;/code&gt; ，则测试套件必须能够在没有任何手动干预的情况下运行。</target>
        </trans-unit>
        <trans-unit id="1c57c8f9832ea1f2b2611e0f586e4b53e5bc935e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;is_active&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt; (default), returns only active users, or if &lt;code&gt;False&lt;/code&gt;, returns only inactive users. Use &lt;code&gt;None&lt;/code&gt; to return all users irrespective of active state.</source>
          <target state="translated">如果 &lt;code&gt;is_active&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; （默认值），则仅返回活动用户，或者，如果为 &lt;code&gt;False&lt;/code&gt; ，则仅返回非活动用户。使用&amp;ldquo; &lt;code&gt;None&lt;/code&gt; 返回所有用户，而与活动状态无关。</target>
        </trans-unit>
        <trans-unit id="9d60554d1eba08cd3217b974a171c4e2851e3e70" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;is_valid()&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, we&amp;rsquo;ll now be able to find all the validated form data in its &lt;code&gt;cleaned_data&lt;/code&gt; attribute. We can use this data to update the database or do other processing before sending an HTTP redirect to the browser telling it where to go next.</source>
          <target state="translated">如果 &lt;code&gt;is_valid()&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ，我们现在可以在其 &lt;code&gt;cleaned_data&lt;/code&gt; 属性中找到所有经过验证的表单数据。我们可以使用此数据来更新数据库或进行其他处理，然后再将HTTP重定向发送到浏览器，告知下一步操作。</target>
        </trans-unit>
        <trans-unit id="fc0ce8e242c0def881ec84e3bdcf44bc32faa981" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;keepdb&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, the test suite will use the existing database, or create one if necessary. If &lt;code&gt;False&lt;/code&gt;, a new database will be created, prompting the user to remove the existing one, if present.</source>
          <target state="translated">如果 &lt;code&gt;keepdb&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ，则测试套件将使用现有数据库，或者在必要时创建一个数据库。如果为 &lt;code&gt;False&lt;/code&gt; ，将创建一个新数据库，提示用户删除现有数据库（如果存在）。</target>
        </trans-unit>
        <trans-unit id="b705770333b7f75454b455c7c40f3bee6b13e433" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; is in the context, returns its value. Otherwise inserts &lt;code&gt;key&lt;/code&gt; with a value of &lt;code&gt;default&lt;/code&gt; and returns &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;key&lt;/code&gt; 在上下文中，则返回其值。否则，插入具有 &lt;code&gt;default&lt;/code&gt; 值的 &lt;code&gt;key&lt;/code&gt; 并返回 &lt;code&gt;default&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06130c8d19c7ce438bfdc76c100ec76ef0f594dd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;limit_choices_to&lt;/code&gt; is or returns a &lt;a href=&quot;querysets#django.db.models.Q&quot;&gt;&lt;code&gt;Q object&lt;/code&gt;&lt;/a&gt;, which is useful for &lt;a href=&quot;../../topics/db/queries#complex-lookups-with-q&quot;&gt;complex queries&lt;/a&gt;, then it will only have an effect on the choices available in the admin when the field is not listed in &lt;a href=&quot;../contrib/admin/index#django.contrib.admin.ModelAdmin.raw_id_fields&quot;&gt;&lt;code&gt;raw_id_fields&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;ModelAdmin&lt;/code&gt; for the model.</source>
          <target state="translated">如果 &lt;code&gt;limit_choices_to&lt;/code&gt; 是或返回&lt;a href=&quot;querysets#django.db.models.Q&quot;&gt; &lt;code&gt;Q object&lt;/code&gt; &lt;/a&gt;（这对&lt;a href=&quot;../../topics/db/queries#complex-lookups-with-q&quot;&gt;复杂查询&lt;/a&gt;很有用），则仅当该字段未在模型的 &lt;code&gt;ModelAdmin&lt;/code&gt; 的&lt;a href=&quot;../contrib/admin/index#django.contrib.admin.ModelAdmin.raw_id_fields&quot;&gt; &lt;code&gt;raw_id_fields&lt;/code&gt; &lt;/a&gt;中列出时，它才会对admin中可用的选择产生影响。</target>
        </trans-unit>
        <trans-unit id="a69ba9ab042b6955c7b8a5885ebdc5353d04f0cb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;localized_fields&lt;/code&gt; is set to the special value &lt;code&gt;'__all__'&lt;/code&gt;, all fields will be localized.</source>
          <target state="translated">如果 &lt;code&gt;localized_fields&lt;/code&gt; 设置为特殊值 &lt;code&gt;'__all__'&lt;/code&gt; ，则所有字段都将被本地化。</target>
        </trans-unit>
        <trans-unit id="12496495cc140a23f1470913ca850c949acc7c56" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;num_messages&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;, the output will be &lt;code&gt;You have 1 message.&lt;/code&gt; If &lt;code&gt;num_messages&lt;/code&gt; is &lt;code&gt;2&lt;/code&gt; the output will be &lt;code&gt;You have 2 messages.&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;num_messages&lt;/code&gt; 为 &lt;code&gt;1&lt;/code&gt; ，则输出为 &lt;code&gt;You have 1 message.&lt;/code&gt; 如果 &lt;code&gt;num_messages&lt;/code&gt; 为 &lt;code&gt;2&lt;/code&gt; ,则输出为 &lt;code&gt;You have 2 messages.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="745547a13ff3b07b7f0df9814180894ed3cbd790" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;obj&lt;/code&gt; is passed in, only returns the group permissions for this specific object.</source>
          <target state="translated">如果传入 &lt;code&gt;obj&lt;/code&gt; ，则仅返回此特定对象的组权限。</target>
        </trans-unit>
        <trans-unit id="03ed81e92e7e7194280c4f660b2b67fb25464e6b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;obj&lt;/code&gt; is passed in, only returns the permissions for this specific object.</source>
          <target state="translated">如果传入 &lt;code&gt;obj&lt;/code&gt; ，则仅返回此特定对象的权限。</target>
        </trans-unit>
        <trans-unit id="85ee7993fd53cf5084822b1e8f85e878a5981909" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;obj&lt;/code&gt; is passed in, only returns the user permissions for this specific object.</source>
          <target state="translated">如果传入 &lt;code&gt;obj&lt;/code&gt; ，则仅返回此特定对象的用户权限。</target>
        </trans-unit>
        <trans-unit id="0bd47472a1197cd85102dd3aa290ee04f5235bcb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;obj&lt;/code&gt; is passed in, this method won&amp;rsquo;t check for a permission for the model, but for this specific object.</source>
          <target state="translated">如果传入 &lt;code&gt;obj&lt;/code&gt; ，则此方法将不检查模型的权限，而是检查此特定对象的权限。</target>
        </trans-unit>
        <trans-unit id="b51a1e97f03cbd18b3eb07528ca1ad579116eda4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;obj&lt;/code&gt; is passed in, this method won&amp;rsquo;t check for permissions for the model, but for the specific object.</source>
          <target state="translated">如果传入 &lt;code&gt;obj&lt;/code&gt; ，则此方法将不会检查模型的权限，而只会检查特定对象的权限。</target>
        </trans-unit>
        <trans-unit id="2940740f5602aae91149f88fbd7e5e938152bb95" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;objs&lt;/code&gt; contains duplicates, only the first one is updated.</source>
          <target state="translated">如果 &lt;code&gt;objs&lt;/code&gt; 包含重复项，则仅更新第一个。</target>
        </trans-unit>
        <trans-unit id="cfd0587006a5ebe13f169804da937daa1dc6170e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;open_file&lt;/code&gt; doesn&amp;rsquo;t have a name or if the name of &lt;code&gt;open_file&lt;/code&gt; isn&amp;rsquo;t appropriate, provide a custom file name using the &lt;code&gt;filename&lt;/code&gt; parameter. Note that if you pass a file-like object like &lt;code&gt;io.BytesIO&lt;/code&gt;, it&amp;rsquo;s your task to &lt;code&gt;seek()&lt;/code&gt; it before passing it to &lt;code&gt;FileResponse&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;open_file&lt;/code&gt; 没有名称，或者 &lt;code&gt;open_file&lt;/code&gt; 的名称不合适，请使用 &lt;code&gt;filename&lt;/code&gt; 参数提供自定义文件名。请注意，如果传递类似 &lt;code&gt;io.BytesIO&lt;/code&gt; 的文件状对象，则是在将其传递给 &lt;code&gt;FileResponse&lt;/code&gt; 之前先进行 &lt;code&gt;seek()&lt;/code&gt; 任务。</target>
        </trans-unit>
        <trans-unit id="a0a54a895818665a80021bf42884336a44240094" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;paginate_by&lt;/code&gt; is specified, Django will paginate the results returned by this. You can specify the page number in the URL in one of two ways:</source>
          <target state="translated">如果指定了 &lt;code&gt;paginate_by&lt;/code&gt; ，则Django将对由此返回的结果进行分页。您可以通过以下两种方式之一在URL中指定页码：</target>
        </trans-unit>
        <trans-unit id="36d395ac24cbc55eaca1c775ab13e6698f248794" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pdb&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, a debugger (&lt;code&gt;pdb&lt;/code&gt; or &lt;code&gt;ipdb&lt;/code&gt;) will be spawned at each test error or failure.</source>
          <target state="translated">如果 &lt;code&gt;pdb&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ，则在每次测试错误或失败时都会生成调试器（ &lt;code&gt;pdb&lt;/code&gt; 或 &lt;code&gt;ipdb&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="58fb18994a7a795b3456196c38bd884554ce674e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;proxy = True&lt;/code&gt;, a model which subclasses another model will be treated as a &lt;a href=&quot;../../topics/db/models#proxy-models&quot;&gt;proxy model&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;proxy = True&lt;/code&gt; ，则继承另一个模型的模型将被视为&lt;a href=&quot;../../topics/db/models#proxy-models&quot;&gt;代理模型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c2ace2686aec54c72ff11eb64de5cdd2c225de9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;query_string&lt;/code&gt; is not passed in, the resulting &lt;code&gt;QueryDict&lt;/code&gt; will be empty (it will have no keys or values).</source>
          <target state="translated">如果 &lt;code&gt;query_string&lt;/code&gt; 不通过的，由此产生 &lt;code&gt;QueryDict&lt;/code&gt; 将是空的（它不会有任何键或值）。</target>
        </trans-unit>
        <trans-unit id="f8ceb4db235a057ec15ab959aa814110f84beb5a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;readonly_fields&lt;/code&gt; is used without defining explicit ordering through &lt;a href=&quot;#django.contrib.admin.ModelAdmin.fields&quot;&gt;&lt;code&gt;ModelAdmin.fields&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.contrib.admin.ModelAdmin.fieldsets&quot;&gt;&lt;code&gt;ModelAdmin.fieldsets&lt;/code&gt;&lt;/a&gt; they will be added last after all editable fields.</source>
          <target state="translated">如果使用 &lt;code&gt;readonly_fields&lt;/code&gt; 而不通过&lt;a href=&quot;#django.contrib.admin.ModelAdmin.fields&quot;&gt; &lt;code&gt;ModelAdmin.fields&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#django.contrib.admin.ModelAdmin.fieldsets&quot;&gt; &lt;code&gt;ModelAdmin.fieldsets&lt;/code&gt; &lt;/a&gt;定义显式顺序，则它们将在所有可编辑字段之后最后添加。</target>
        </trans-unit>
        <trans-unit id="fa30400306a5da4bcdce4253036865b4f3bc0524" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;request&lt;/code&gt; is provided, it must be an &lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt;. Then the engine must make it, as well as the CSRF token, available in the template. How this is achieved is up to each backend.</source>
          <target state="translated">如果 &lt;code&gt;request&lt;/code&gt; ，则必须为&lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;。然后，引擎必须使其以及CSRF令牌在模板中可用。如何实现这一点取决于每个后端。</target>
        </trans-unit>
        <trans-unit id="528ada93743e93ff057cf83a95ad5d5fef5392e1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;reverse&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, test cases will be executed in the opposite order. This could be useful to debug tests that aren&amp;rsquo;t properly isolated and have side effects. &lt;a href=&quot;overview#order-of-tests&quot;&gt;Grouping by test class&lt;/a&gt; is preserved when using this option.</source>
          <target state="translated">如果 &lt;code&gt;reverse&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ，则将以相反的顺序执行测试用例。这对于调试未正确隔离且具有副作用的测试很有用。使用此选项时，将保留&lt;a href=&quot;overview#order-of-tests&quot;&gt;按测试类分组&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ad20bc0c784c2f029f4a98645d65c0f300592e27" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;reverse_sql&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt; (the default), the &lt;code&gt;RunSQL&lt;/code&gt; operation is irreversible.</source>
          <target state="translated">如果 &lt;code&gt;reverse_sql&lt;/code&gt; 为 &lt;code&gt;None&lt;/code&gt; （默认值），则 &lt;code&gt;RunSQL&lt;/code&gt; 操作是不可逆的。</target>
        </trans-unit>
        <trans-unit id="43523508781181e89cf0252c143efbdcfd606d84" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;save()&lt;/code&gt; is passed a list of field names in keyword argument &lt;code&gt;update_fields&lt;/code&gt;, only the fields named in that list will be updated. This may be desirable if you want to update just one or a few fields on an object. There will be a slight performance benefit from preventing all of the model fields from being updated in the database. For example:</source>
          <target state="translated">如果 &lt;code&gt;save()&lt;/code&gt; 关键字参数 &lt;code&gt;update_fields&lt;/code&gt; 中的字段名称列表传递给save（），则仅更新该列表中命名的字段。如果只想更新一个对象上的一个或几个字段，则可能需要这样做。阻止数据库中所有模型字段的更新将对性能产生一点好处。例如：</target>
        </trans-unit>
        <trans-unit id="f0b514748e158fcb5e55ffe9236c490c2c794096" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;search_type&lt;/code&gt; is &lt;code&gt;'plain'&lt;/code&gt;, which is the default, the terms are treated as separate keywords. If &lt;code&gt;search_type&lt;/code&gt; is &lt;code&gt;'phrase'&lt;/code&gt;, the terms are treated as a single phrase. If &lt;code&gt;search_type&lt;/code&gt; is &lt;code&gt;'raw'&lt;/code&gt;, then you can provide a formatted search query with terms and operators. If &lt;code&gt;search_type&lt;/code&gt; is &lt;code&gt;'websearch'&lt;/code&gt;, then you can provide a formatted search query, similar to the one used by web search engines. &lt;code&gt;'websearch'&lt;/code&gt; requires PostgreSQL &amp;ge; 11. Read PostgreSQL&amp;rsquo;s &lt;a href=&quot;https://www.postgresql.org/docs/current/textsearch-controls.html#TEXTSEARCH-PARSING-QUERIES&quot;&gt;Full Text Search docs&lt;/a&gt; to learn about differences and syntax. Examples:</source>
          <target state="translated">如果 &lt;code&gt;search_type&lt;/code&gt; 为 &lt;code&gt;'plain'&lt;/code&gt; ，这是默认设置，则将这些术语视为单独的关键字。如果 &lt;code&gt;search_type&lt;/code&gt; 为 &lt;code&gt;'phrase'&lt;/code&gt; ，则将这些术语视为一个短语。如果 &lt;code&gt;search_type&lt;/code&gt; 为 &lt;code&gt;'raw'&lt;/code&gt; ，那么您可以提供带有术语和运算符的格式化搜索查询。如果 &lt;code&gt;search_type&lt;/code&gt; 是 &lt;code&gt;'websearch'&lt;/code&gt; ，那么您可以提供一种格式化的搜索查询，类似于网络搜索引擎所使用的查询。 &lt;code&gt;'websearch'&lt;/code&gt; 要求PostgreSQL&amp;ge;11。请阅读PostgreSQL的&lt;a href=&quot;https://www.postgresql.org/docs/current/textsearch-controls.html#TEXTSEARCH-PARSING-QUERIES&quot;&gt;全文搜索文档&lt;/a&gt;以了解差异和语法。例子：</target>
        </trans-unit>
        <trans-unit id="758b7e8b01a01d0cf6d9accbc0e30c1dde12bb08" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;search_type&lt;/code&gt; is &lt;code&gt;'plain'&lt;/code&gt;, which is the default, the terms are treated as separate keywords. If &lt;code&gt;search_type&lt;/code&gt; is &lt;code&gt;'phrase'&lt;/code&gt;, the terms are treated as a single phrase. If &lt;code&gt;search_type&lt;/code&gt; is &lt;code&gt;'raw'&lt;/code&gt;, then you can provide a formatted search query with terms and operators. Read PostgreSQL&amp;rsquo;s &lt;a href=&quot;https://www.postgresql.org/docs/current/textsearch-controls.html#TEXTSEARCH-PARSING-QUERIES&quot;&gt;Full Text Search docs&lt;/a&gt; to learn about differences and syntax. Examples:</source>
          <target state="translated">如果 &lt;code&gt;search_type&lt;/code&gt; 为 &lt;code&gt;'plain'&lt;/code&gt; ，这是默认设置，则将这些术语视为单独的关键字。如果 &lt;code&gt;search_type&lt;/code&gt; 为 &lt;code&gt;'phrase'&lt;/code&gt; ，则将这些术语视为一个短语。如果 &lt;code&gt;search_type&lt;/code&gt; 为 &lt;code&gt;'raw'&lt;/code&gt; ，那么您可以提供带有术语和运算符的格式化搜索查询。阅读PostgreSQL的&lt;a href=&quot;https://www.postgresql.org/docs/current/textsearch-controls.html#TEXTSEARCH-PARSING-QUERIES&quot;&gt;全文搜索文档&lt;/a&gt;以了解差异和语法。例子：</target>
        </trans-unit>
        <trans-unit id="eb44119253673674de8eae9f7f13c0327406af38" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;self.name&lt;/code&gt; is &lt;code&gt;'/example.com'&lt;/code&gt; this returns &lt;code&gt;'//example.com/'&lt;/code&gt; which, in turn, is a valid schema relative URL but not the expected &lt;code&gt;'/%2Fexample.com/'&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;self.name&lt;/code&gt; 为 &lt;code&gt;'/example.com'&lt;/code&gt; ,则返回 &lt;code&gt;'//example.com/'&lt;/code&gt; ，这又是有效的架构相对URL，但不是预期的 &lt;code&gt;'/%2Fexample.com/'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4149f6c59a8a8f994df534f92c186cd9332cad77" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;set_prefix&lt;/code&gt; is True, setting the URL resolver script prefix to &lt;a href=&quot;settings#std:setting-FORCE_SCRIPT_NAME&quot;&gt;&lt;code&gt;FORCE_SCRIPT_NAME&lt;/code&gt;&lt;/a&gt; if defined, or &lt;code&gt;/&lt;/code&gt; otherwise.</source>
          <target state="translated">如果 &lt;code&gt;set_prefix&lt;/code&gt; 为True，则将URL解析器脚本前缀设置为&lt;a href=&quot;settings#std:setting-FORCE_SCRIPT_NAME&quot;&gt; &lt;code&gt;FORCE_SCRIPT_NAME&lt;/code&gt; (&lt;/a&gt;如果已定义），否则设置为 &lt;code&gt;/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab1cb60769ca7f5a89497ce33a2ae60ab8a9d4bd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;some_list&lt;/code&gt; is &lt;code&gt;['a', 'b', 'c']&lt;/code&gt;, the output will be &lt;code&gt;['a', 'b']&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;some_list&lt;/code&gt; 为 &lt;code&gt;['a', 'b', 'c']&lt;/code&gt; ，则输出为 &lt;code&gt;['a', 'b']&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c918e03d3cc6b09be1e254bf14b4ced98312a29" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;strict&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt; (the default), a country-specific variant may be returned when neither the language code nor its generic variant is found. For example, if only &lt;code&gt;'es-co'&lt;/code&gt; is in &lt;a href=&quot;settings#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt;, that&amp;rsquo;s returned for &lt;code&gt;lang_code&lt;/code&gt;s like &lt;code&gt;'es'&lt;/code&gt; and &lt;code&gt;'es-ar'&lt;/code&gt;. Those matches aren&amp;rsquo;t returned if &lt;code&gt;strict=True&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;strict&lt;/code&gt; 为 &lt;code&gt;False&lt;/code&gt; （默认值），则在未找到语言代码或其通用变体的情况下，可能会返回特定国家/地区的变体。例如，如果&lt;a href=&quot;settings#std:setting-LANGUAGES&quot;&gt; &lt;code&gt;LANGUAGES&lt;/code&gt; 中&lt;/a&gt;只有 &lt;code&gt;'es-co'&lt;/code&gt; ,则返回 &lt;code&gt;lang_code&lt;/code&gt; ,如 &lt;code&gt;'es'&lt;/code&gt; 和 &lt;code&gt;'es-ar'&lt;/code&gt; 。如果 &lt;code&gt;strict=True&lt;/code&gt; ,则不返回那些匹配项。</target>
        </trans-unit>
        <trans-unit id="2ce60c41b82f95787b4d8ede724ae3aeb165c150" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;string_if_invalid&lt;/code&gt; contains a &lt;code&gt;'%s'&lt;/code&gt;, the format marker will be replaced with the name of the invalid variable.</source>
          <target state="translated">如果 &lt;code&gt;string_if_invalid&lt;/code&gt; 包含 &lt;code&gt;'%s'&lt;/code&gt; ，则格式标记将替换为无效变量的名称。</target>
        </trans-unit>
        <trans-unit id="d4e2d7c9cc527a004f01055080d5e8c772cbe415" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;strings_only&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, don&amp;rsquo;t convert (some) non-string-like objects.</source>
          <target state="translated">如果 &lt;code&gt;strings_only&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ，请不要转换（某些）非字符串类对象。</target>
        </trans-unit>
        <trans-unit id="02948597a9796eed77f937b00717f14fc87c09e4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;test_labels&lt;/code&gt; has a value of &lt;code&gt;None&lt;/code&gt;, the test runner will search for tests in all files below the current directory whose names match its &lt;code&gt;pattern&lt;/code&gt; (see above).</source>
          <target state="translated">如果 &lt;code&gt;test_labels&lt;/code&gt; 的值为 &lt;code&gt;None&lt;/code&gt; ，则测试运行程序将在名称与其 &lt;code&gt;pattern&lt;/code&gt; 匹配的当前目录下的所有文件中搜索测试（请参见上文）。</target>
        </trans-unit>
        <trans-unit id="ffc18a42277d2f23ae1db5f8a3d415914924bb24" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this_value&lt;/code&gt; is 175, &lt;code&gt;max_value&lt;/code&gt; is 200, and &lt;code&gt;max_width&lt;/code&gt; is 100, the image in the above example will be 88 pixels wide (because 175/200 = .875; .875 * 100 = 87.5 which is rounded up to 88).</source>
          <target state="translated">如果 &lt;code&gt;this_value&lt;/code&gt; 是175， &lt;code&gt;max_value&lt;/code&gt; 为200， &lt;code&gt;max_width&lt;/code&gt; 是100，在上述示例中的图像将是88个像素宽（因为200分之175= 0.875; 0.875 * 100 = 87.5，其被上舍入到88）。</target>
        </trans-unit>
        <trans-unit id="4137df6686025784e6f4bd6dbe64263ec732c01b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;urlize&lt;/code&gt; is applied to text that already contains HTML markup, or to email addresses that contain single quotes (&lt;code&gt;'&lt;/code&gt;), things won&amp;rsquo;t work as expected. Apply this filter only to plain text.</source>
          <target state="translated">如果将 &lt;code&gt;urlize&lt;/code&gt; 应用于已经包含HTML标记的文本或包含单引号（ &lt;code&gt;'&lt;/code&gt; ）的电子邮件地址，则将无法正常工作。仅将此过滤器应用于纯文本。</target>
        </trans-unit>
        <trans-unit id="755d325efa931044c84d8862e2bdd301da420af5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;validate_max=True&lt;/code&gt; is passed to &lt;a href=&quot;../../ref/forms/formsets#django.forms.formsets.formset_factory&quot;&gt;&lt;code&gt;formset_factory()&lt;/code&gt;&lt;/a&gt;, validation will also check that the number of forms in the data set, minus those marked for deletion, is less than or equal to &lt;code&gt;max_num&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;validate_max=True&lt;/code&gt; 传递给&lt;a href=&quot;../../ref/forms/formsets#django.forms.formsets.formset_factory&quot;&gt; &lt;code&gt;formset_factory()&lt;/code&gt; &lt;/a&gt;，验证还将检查数据集中的表单数量（减去标记为删除的表单数量）是否小于或等于 &lt;code&gt;max_num&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0c7a70e9a93e3c5c85204a071c7a02b943a478cc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;validate_min=True&lt;/code&gt; is passed to &lt;a href=&quot;../../ref/forms/formsets#django.forms.formsets.formset_factory&quot;&gt;&lt;code&gt;formset_factory()&lt;/code&gt;&lt;/a&gt;, validation will also check that the number of forms in the data set, minus those marked for deletion, is greater than or equal to &lt;code&gt;min_num&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;validate_min=True&lt;/code&gt; 传递给&lt;a href=&quot;../../ref/forms/formsets#django.forms.formsets.formset_factory&quot;&gt; &lt;code&gt;formset_factory()&lt;/code&gt; &lt;/a&gt;，验证还将检查数据集中的表单数量（减去标记为删除的表单）是否大于或等于 &lt;code&gt;min_num&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c6735bdaa6045f1ec97e336418abe747d7949ed" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is 123456789, the output would be &lt;code&gt;117.7 MB&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 123456789，则输出将为 &lt;code&gt;117.7 MB&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4f3f2f373b391d75ad0829ab7341020c580a64d9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;&quot;&lt;/code&gt; (the empty string), the output will be &lt;code&gt;nothing&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 为 &lt;code&gt;&quot;&quot;&lt;/code&gt; （空字符串），则输出为 &lt;code&gt;nothing&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="362ec1cf5c026a9ec9908c69ec686dfa7658cd06" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;&amp;lt;b&amp;gt;Joel&amp;lt;/b&amp;gt; &amp;lt;button&amp;gt;is&amp;lt;/button&amp;gt; a &amp;lt;span&amp;gt;slug&amp;lt;/span&amp;gt;&quot;&lt;/code&gt; the return value will be &lt;code&gt;&quot;Joel is a slug&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;&amp;lt;b&amp;gt;Joel&amp;lt;/b&amp;gt; &amp;lt;button&amp;gt;is&amp;lt;/button&amp;gt; a &amp;lt;span&amp;gt;slug&amp;lt;/span&amp;gt;&quot;&lt;/code&gt; 则返回值将是 &lt;code&gt;&quot;Joel is a slug&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e691b98f5c994a59981e42ad33e040c5b50a1e37" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;&amp;lt;b&amp;gt;Joel&amp;lt;/b&amp;gt; &amp;lt;button&amp;gt;is&amp;lt;/button&amp;gt; a &amp;lt;span&amp;gt;slug&amp;lt;/span&amp;gt;&quot;&lt;/code&gt;, the output will be &lt;code&gt;&quot;Joel is a slug&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;&amp;lt;b&amp;gt;Joel&amp;lt;/b&amp;gt; &amp;lt;button&amp;gt;is&amp;lt;/button&amp;gt; a &amp;lt;span&amp;gt;slug&amp;lt;/span&amp;gt;&quot;&lt;/code&gt; ，则输出将是 &lt;code&gt;&quot;Joel is a slug&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f8e9ee502ff5012d2ebcd6a7cefdc7edffdf62b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;&amp;lt;p&amp;gt;Joel is a slug&amp;lt;/p&amp;gt;&quot;&lt;/code&gt;, the output will be &lt;code&gt;&quot;&amp;lt;p&amp;gt;Joel i&amp;hellip;&amp;lt;/p&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;&amp;lt;p&amp;gt;Joel is a slug&amp;lt;/p&amp;gt;&quot;&lt;/code&gt; ，输出将是 &lt;code&gt;&quot;&amp;lt;p&amp;gt;Joel i&amp;hellip;&amp;lt;/p&amp;gt;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d5e14c0338556cf8d588b052d7020856a9e0d085" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;&amp;lt;p&amp;gt;Joel is a slug&amp;lt;/p&amp;gt;&quot;&lt;/code&gt;, the output will be &lt;code&gt;&quot;&amp;lt;p&amp;gt;Joel is &amp;hellip;&amp;lt;/p&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;&amp;lt;p&amp;gt;Joel is a slug&amp;lt;/p&amp;gt;&quot;&lt;/code&gt; ，则输出将是 &lt;code&gt;&quot;&amp;lt;p&amp;gt;Joel is &amp;hellip;&amp;lt;/p&amp;gt;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="09787e815cb703f7bdecda5fd0867ef3e441c8b5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;?test=1&amp;amp;me=2&quot;&lt;/code&gt;, the output will be &lt;code&gt;&quot;?test=1&amp;amp;amp;me=2&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;?test=1&amp;amp;me=2&quot;&lt;/code&gt; ，则输出将是 &lt;code&gt;&quot;?test=1&amp;amp;amp;me=2&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="769218d7736e8cea14dbbebb7c1aca16fb56ff9e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;Check out www.djangoproject.com&quot;&lt;/code&gt;, the output will be &lt;code&gt;&quot;Check out &amp;lt;a href=&quot;http://www.djangoproject.com&quot;
rel=&quot;nofollow&quot;&amp;gt;www.djangoproject.com&amp;lt;/a&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;Check out www.djangoproject.com&quot;&lt;/code&gt; ，输出将是 &lt;code&gt;&quot;Check out &amp;lt;a href=&quot;http://www.djangoproject.com&quot; rel=&quot;nofollow&quot;&amp;gt;www.djangoproject.com&amp;lt;/a&amp;gt;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="740ff784b31d6ec0305563ffa7d9222904379a81" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;Check out www.djangoproject.com&quot;&lt;/code&gt;, the output would be &lt;code&gt;'Check out &amp;lt;a href=&quot;http://www.djangoproject.com&quot;
rel=&quot;nofollow&quot;&amp;gt;www.djangoproj&amp;hellip;&amp;lt;/a&amp;gt;'&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;Check out www.djangoproject.com&quot;&lt;/code&gt; ，输出将是 &lt;code&gt;'Check out &amp;lt;a href=&quot;http://www.djangoproject.com&quot; rel=&quot;nofollow&quot;&amp;gt;www.djangoproj&amp;hellip;&amp;lt;/a&amp;gt;'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="767db1d4011700144ef49c99462e47c02a6c2278" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;Django&quot;&lt;/code&gt;, the output will be &lt;code&gt;&quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Django&amp;nbsp;&amp;nbsp;&amp;nbsp; &quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;Django&quot;&lt;/code&gt; ，则输出将是 &lt;code&gt;&quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Django&amp;nbsp;&amp;nbsp;&amp;nbsp; &quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88d4c2db75d2d463013aff515a4e539aaecba50a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;I'm using Django&quot;&lt;/code&gt;, the output will be &lt;code&gt;&quot;I\'m using Django&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;I'm using Django&quot;&lt;/code&gt; ，则输出将是 &lt;code&gt;&quot;I\'m using Django&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b1301998ce64c5e4b7385eb5a9c1ed65276d48e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;Joel is a slug&quot;&lt;/code&gt;, the output will be &lt;code&gt;&quot;JOEL IS A SLUG&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;Joel is a slug&quot;&lt;/code&gt; ，则输出将是 &lt;code&gt;&quot;JOEL IS A SLUG&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dfa84605a1f0d197bce09323aca3dc32fb281b29" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;Joel is a slug&quot;&lt;/code&gt;, the output will be &lt;code&gt;&quot;Joel i&amp;hellip;&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;Joel is a slug&quot;&lt;/code&gt; ，输出将是 &lt;code&gt;&quot;Joel i&amp;hellip;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76a39aa993601030e66d46ab03d548fbf5f2434f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;Joel is a slug&quot;&lt;/code&gt;, the output will be &lt;code&gt;&quot;Joel is &amp;hellip;&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;Joel is a slug&quot;&lt;/code&gt; ，输出将是 &lt;code&gt;&quot;Joel is &amp;hellip;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="698cbda96e629b682048b0c4d5991a17b4894cea" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;Joel is a slug&quot;&lt;/code&gt;, the output will be &lt;code&gt;&quot;joel-is-a-slug&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;Joel is a slug&quot;&lt;/code&gt; ，则输出将是 &lt;code&gt;&quot;joel-is-a-slug&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc76eaef5a37e6719179bb1b819008595736dfb2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;Joel is a slug&quot;&lt;/code&gt;, the output will be &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;Joel is a slug&quot;&lt;/code&gt; ，则输出将为 &lt;code&gt;4&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="410449c9d652bd564e1760e072d78e9e87b32302" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;String with spaces&quot;&lt;/code&gt;, the output will be &lt;code&gt;&quot;Stringwithspaces&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;String with spaces&quot;&lt;/code&gt; ，则输出将是 &lt;code&gt;&quot;Stringwithspaces&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d91bcc161c250f9c6d522fa815ad28f244f63f29" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;django&quot;&lt;/code&gt;, the output will be &lt;code&gt;&quot;Django&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;django&quot;&lt;/code&gt; ，则输出将是 &lt;code&gt;&quot;Django&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b898df2bd8f9782ff2ac117ad19c1990ad06b75e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;https://www.example.org/&quot;&lt;/code&gt;, the output will be &lt;code&gt;&quot;https%3A%2F%2Fwww.example.org%2F&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;https://www.example.org/&quot;&lt;/code&gt; ，输出将是 &lt;code&gt;&quot;https%3A%2F%2Fwww.example.org%2F&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="03a8dfb79e75755980218848dff7e849b6a16325" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;https://www.example.org/foo?a=b&amp;amp;c=d&quot;&lt;/code&gt;, the output will be &lt;code&gt;&quot;https%3A//www.example.org/foo%3Fa%3Db%26c%3Dd&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;https://www.example.org/foo?a=b&amp;amp;c=d&quot;&lt;/code&gt; ，输出将是 &lt;code&gt;&quot;https%3A//www.example.org/foo%3Fa%3Db%26c%3Dd&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e8dcb3a8c75858398ed0fa2c246e7342a5a9ba89" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;my FIRST post&quot;&lt;/code&gt;, the output will be &lt;code&gt;&quot;My First Post&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;my FIRST post&quot;&lt;/code&gt; ，则输出将是 &lt;code&gt;&quot;My First Post&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8d3d329491303a39279635854b2c96c2d0a0a56" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;testing\r\njavascript 'string\&quot; &amp;lt;b&amp;gt;escaping&amp;lt;/b&amp;gt;&quot;&lt;/code&gt;, the output will be &lt;code&gt;&quot;testing\\u000D\\u000Ajavascript \\u0027string\\u0022 \\u003Cb\\u003Eescaping\\u003C/b\\u003E&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;testing\r\njavascript 'string\&quot; &amp;lt;b&amp;gt;escaping&amp;lt;/b&amp;gt;&quot;&lt;/code&gt; ，输出将是 &lt;code&gt;&quot;testing\\u000D\\u000Ajavascript \\u0027string\\u0022 \\u003Cb\\u003Eescaping\\u003C/b\\u003E&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b41984a04577beda8d7ddaa541cd5c8bfe22183b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;testing\r\njavascript \'string&quot; &amp;lt;b&amp;gt;escaping&amp;lt;/b&amp;gt;&quot;&lt;/code&gt;, the output will be &lt;code&gt;&quot;testing\\u000D\\u000Ajavascript \\u0027string\\u0022 \\u003Cb\\u003Eescaping\\u003C/b\\u003E&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;&quot;testing\r\njavascript \'string&quot; &amp;lt;b&amp;gt;escaping&amp;lt;/b&amp;gt;&quot;&lt;/code&gt; ，输出将是 &lt;code&gt;&quot;testing\\u000D\\u000Ajavascript \\u0027string\\u0022 \\u003Cb\\u003Eescaping\\u003C/b\\u003E&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7889dd48460a146383ae914001047479ef55de85" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;, the user&amp;rsquo;s session cookie will expire when the user&amp;rsquo;s Web browser is closed.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 为 &lt;code&gt;0&lt;/code&gt; ，则在关闭用户的Web浏览器时，用户的会话cookie将过期。</target>
        </trans-unit>
        <trans-unit id="3c553dfd78a3f0de982d32c7b5033452e8746ba1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;10&lt;/code&gt;, the output will be &lt;code&gt;1.000000E+01&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;10&lt;/code&gt; ，输出将是 &lt;code&gt;1.000000E+01&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d24c684374af1d1c25ab9b268e805e2a2d4c3a21" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;123456789&lt;/code&gt;, the output will be &lt;code&gt;8&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;123456789&lt;/code&gt; ，输出将是 &lt;code&gt;8&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c286f249c65363c49d41fb5d1e8d5d182f5584b3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;21&lt;/code&gt;, the output would be &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 为 &lt;code&gt;21&lt;/code&gt; ，则输出为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94d30195d6ca92c8171cecacb58be30e535aa470" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;4&lt;/code&gt;, then the output will be &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;4&lt;/code&gt; ，则输出将是 &lt;code&gt;6&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a692698093e8de528f1a1cbd97383f7022734827" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;800-COLLECT&lt;/code&gt;, the output will be &lt;code&gt;800-2655328&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 为 &lt;code&gt;800-COLLECT&lt;/code&gt; ，则输出为 &lt;code&gt;800-2655328&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="39b16f1b864fe3ace79d15160dae5c90ca2baf33" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;Django&lt;/code&gt;, the output will be &lt;code&gt;&quot;&amp;nbsp;&amp;nbsp;&amp;nbsp; Django&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 为 &lt;code&gt;Django&lt;/code&gt; ，则输出将为 &lt;code&gt;&quot;&amp;nbsp;&amp;nbsp;&amp;nbsp; Django&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b3e719615b2ce65d002b3a522862acf99a04139" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;Django&lt;/code&gt;, the output will be &lt;code&gt;&quot;Django&amp;nbsp;&amp;nbsp;&amp;nbsp; &quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;Django&lt;/code&gt; ，则输出将为 &lt;code&gt;&quot;Django&amp;nbsp;&amp;nbsp;&amp;nbsp; &quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78a703a23fba3f90c70f851ca663092d08fdd36a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;Joel is a slug&lt;/code&gt;, the output would be:</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 为 &lt;code&gt;Joel is a slug&lt;/code&gt; ，则输出为：</target>
        </trans-unit>
        <trans-unit id="bbabf0348a25f576ca3e535b2d97041ed032a179" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;Joel\nis a slug&lt;/code&gt;, the output will be &lt;code&gt;&amp;lt;p&amp;gt;Joel&amp;lt;br&amp;gt;is a
slug&amp;lt;/p&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;Joel\nis a slug&lt;/code&gt; ，则输出将是 &lt;code&gt;&amp;lt;p&amp;gt;Joel&amp;lt;br&amp;gt;is a slug&amp;lt;/p&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d0e1ab9aefbde6cb30a949c02a255d7270744a8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;Joel\nis a slug&lt;/code&gt;, the output will be &lt;code&gt;Joel&amp;lt;br&amp;gt;is a
slug&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;Joel\nis a slug&lt;/code&gt; ，则输出将是 &lt;code&gt;Joel&amp;lt;br&amp;gt;is a slug&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e38dc6e53ea0e75a764b87ee8c019666da2345e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, the output will be &lt;code&gt;nothing&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 为 &lt;code&gt;None&lt;/code&gt; ，则输出为 &lt;code&gt;nothing&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="001b566bffd4b80501ba95ca798e628579b0ab7b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, the session reverts to using the global session expiry policy.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 为 &lt;code&gt;None&lt;/code&gt; ，则会话将恢复为使用全局会话到期策略。</target>
        </trans-unit>
        <trans-unit id="5dedd9c095b41ac7753da699bb1e880646273b4a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;Totally LOVING this Album!&lt;/code&gt;, the output will be &lt;code&gt;totally loving this album!&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;Totally LOVING this Album!&lt;/code&gt; ，输出将 &lt;code&gt;totally loving this album!&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61c4e59683ff8d7dd92dbe8e1b3b2066f63beab0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;['a', 'b', 'c', 'd']&lt;/code&gt; or &lt;code&gt;&quot;abcd&quot;&lt;/code&gt;, the output will be &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 为 &lt;code&gt;['a', 'b', 'c', 'd']&lt;/code&gt; 或 &lt;code&gt;&quot;abcd&quot;&lt;/code&gt; ，则输出为 &lt;code&gt;4&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53bca12a161e9dd5d7b927148faebf050de63371" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;['a', 'b', 'c', 'd']&lt;/code&gt; or &lt;code&gt;&quot;abcd&quot;&lt;/code&gt;, the output will be &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 为 &lt;code&gt;['a', 'b', 'c', 'd']&lt;/code&gt; 或 &lt;code&gt;&quot;abcd&quot;&lt;/code&gt; ，则输出将为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d149d18212e0e86edab9f7f00ad13bcc30cd131c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;['a', 'b', 'c', 'd']&lt;/code&gt;, the output will be &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 为 &lt;code&gt;['a', 'b', 'c', 'd']&lt;/code&gt; ，则输出为 &lt;code&gt;4&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="64fc5562b8f34bb2258acd150773d8d63506b010" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object (e.g., the result of &lt;code&gt;datetime.datetime.now()&lt;/code&gt;), the output will be the string &lt;code&gt;'Wed 09 Jan 2008'&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;对象（例如 &lt;code&gt;datetime.datetime.now()&lt;/code&gt; 的结果），则输出将为字符串 &lt;code&gt;'Wed 09 Jan 2008'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0395d03d9197ccb31dfcace99ff8aeebe3ca82cf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is a &lt;code&gt;datetime&lt;/code&gt; or &lt;code&gt;timedelta&lt;/code&gt; object, the session will expire at that specific date/time. Note that &lt;code&gt;datetime&lt;/code&gt; and &lt;code&gt;timedelta&lt;/code&gt; values are only serializable if you are using the &lt;a href=&quot;#django.contrib.sessions.serializers.PickleSerializer&quot;&gt;&lt;code&gt;PickleSerializer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;datetime&lt;/code&gt; 或 &lt;code&gt;timedelta&lt;/code&gt; 对象，则会话将在该特定日期/时间到期。请注意，只有在使用&lt;a href=&quot;#django.contrib.sessions.serializers.PickleSerializer&quot;&gt; &lt;code&gt;PickleSerializer&lt;/code&gt; 时&lt;/a&gt;， &lt;code&gt;datetime&lt;/code&gt; 和 &lt;code&gt;timedelta&lt;/code&gt; 值才能序列化。</target>
        </trans-unit>
        <trans-unit id="0b5d654bfc7f582442d4ec52b97710fc6f52860f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is an integer, the session will expire after that many seconds of inactivity. For example, calling &lt;code&gt;request.session.set_expiry(300)&lt;/code&gt; would make the session expire in 5 minutes.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是整数，那么会话将在闲置许多秒后过期。例如，调用 &lt;code&gt;request.session.set_expiry(300)&lt;/code&gt; 将使会话在5分钟后过期。</target>
        </trans-unit>
        <trans-unit id="e742281c4c6418f5b4ad30c98a1be96235d497aa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is equivalent to &lt;code&gt;datetime.datetime.now()&lt;/code&gt;, the output will be the string &lt;code&gt;&quot;01:23&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 等于 &lt;code&gt;datetime.datetime.now()&lt;/code&gt; ，则输出将为字符串 &lt;code&gt;&quot;01:23&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fcb3b78b97e6fee24b4a40ac3d2e8f3ce6ba8572" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is the dictionary &lt;code&gt;{'hello': 'world'}&lt;/code&gt;, the output will be:</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是字典 &lt;code&gt;{'hello': 'world'}&lt;/code&gt; ，则输出为：</target>
        </trans-unit>
        <trans-unit id="11f959b07996e38ca116ea1d82c203bfc00d8e34" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is the list &lt;code&gt;['a', 'b', 'c', 'd']&lt;/code&gt;, the output could be &lt;code&gt;&quot;b&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是列表 &lt;code&gt;['a', 'b', 'c', 'd']&lt;/code&gt; ，则输出可以为 &lt;code&gt;&quot;b&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c3473a8e4f8140a0e16b67b255243a22fb2f528" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is the list &lt;code&gt;['a', 'b', 'c', 'd']&lt;/code&gt;, the output will be the string &lt;code&gt;&quot;d&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是列表 &lt;code&gt;['a', 'b', 'c', 'd']&lt;/code&gt; ，则输出将为字符串 &lt;code&gt;&quot;d&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d8d8a7505600a0d6f9c35b9d459454fa1379e79" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is the list &lt;code&gt;['a', 'b', 'c']&lt;/code&gt;, the output will be &lt;code&gt;'a'&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是列表 &lt;code&gt;['a', 'b', 'c']&lt;/code&gt; ，则输出将为 &lt;code&gt;'a'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29580353d7769d46a2677481abfdaba1144ef6ed" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is the list &lt;code&gt;['a', 'b', 'c']&lt;/code&gt;, the output will be the string &lt;code&gt;&quot;a // b // c&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是列表 &lt;code&gt;['a', 'b', 'c']&lt;/code&gt; ，则输出将为字符串 &lt;code&gt;&quot;a // b // c&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7fe07b5b9c67f950be5a22ac0321698d6f5f8d94" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is the string &lt;code&gt;&quot;Joel&quot;&lt;/code&gt;, the output would be the list &lt;code&gt;['J', 'o', 'e', 'l']&lt;/code&gt;. If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;123&lt;/code&gt;, the output will be the list &lt;code&gt;['1', '2', '3']&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是字符串 &lt;code&gt;&quot;Joel&quot;&lt;/code&gt; ，则输出将是列表 &lt;code&gt;['J', 'o', 'e', 'l']&lt;/code&gt; 。如果 &lt;code&gt;value&lt;/code&gt; 为 &lt;code&gt;123&lt;/code&gt; ，则输出将为列表 &lt;code&gt;['1', '2', '3']&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fdd0402e2118e34facbcfab001befd8ad7443b87" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is:</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d11b28c45cbb035e65f1544fc9f37f977239d634" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; isn&amp;rsquo;t provided or is empty, the above will display &amp;ldquo;&lt;code&gt;nothing&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">如果未提供 &lt;code&gt;value&lt;/code&gt; 或为空，则上面将显示&amp;ldquo; &lt;code&gt;nothing&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="817a7abcfb83a78664a778e654e31a8f9e0d2826" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;var&lt;/code&gt; is set to &lt;code&gt;'class1 onmouseover=javascript:func()'&lt;/code&gt;, this can result in unauthorized JavaScript execution, depending on how the browser renders imperfect HTML. (Quoting the attribute value would fix this case.)</source>
          <target state="translated">如果将 &lt;code&gt;var&lt;/code&gt; 设置为 &lt;code&gt;'class1 onmouseover=javascript:func()'&lt;/code&gt; ，则可能导致未经授权的JavaScript执行，具体取决于浏览器如何呈现不完美的HTML。（引用属性值将解决这种情况。）</target>
        </trans-unit>
        <trans-unit id="f933e059630c72c200d25c5fdd28a82f3d46a177" translate="yes" xml:space="preserve">
          <source>If Django created two independent test databases, this would break any tests that expected replication to occur. However, the &lt;code&gt;replica&lt;/code&gt; database has been configured as a test mirror (using the &lt;a href=&quot;../../ref/settings#std:setting-TEST_MIRROR&quot;&gt;&lt;code&gt;MIRROR&lt;/code&gt;&lt;/a&gt; test setting), indicating that under testing, &lt;code&gt;replica&lt;/code&gt; should be treated as a mirror of &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">如果Django创建了两个独立的测试数据库，这将破坏预期会发生复制的所有测试。但是， &lt;code&gt;replica&lt;/code&gt; 数据库已被配置为测试镜像（使用&lt;a href=&quot;../../ref/settings#std:setting-TEST_MIRROR&quot;&gt; &lt;code&gt;MIRROR&lt;/code&gt; &lt;/a&gt;测试设置），表明在测试中， &lt;code&gt;replica&lt;/code&gt; 应被视为 &lt;code&gt;default&lt;/code&gt; 的镜像。</target>
        </trans-unit>
        <trans-unit id="9036d692b9906336f90c7855a3028c2226003914" translate="yes" xml:space="preserve">
          <source>If Django is installed, you should see the version of your installation. If it isn&amp;rsquo;t, you&amp;rsquo;ll get an error telling &amp;ldquo;No module named django&amp;rdquo;.</source>
          <target state="translated">如果安装了Django，则应该看到安装的版本。如果不是，您将得到一个错误消息，提示&amp;ldquo;没有名为django的模块&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="be236e6ac5bd748d1f22e3cf4100a89925204a13" translate="yes" xml:space="preserve">
          <source>If Django manages the database and you don&amp;rsquo;t have a strong reason to do otherwise, you should leave this option unset. It&amp;rsquo;s best to store datetimes in UTC because it avoids ambiguous or nonexistent datetimes during daylight saving time changes. Also, receiving datetimes in UTC keeps datetime arithmetic simple &amp;mdash; there&amp;rsquo;s no need for the &lt;code&gt;normalize()&lt;/code&gt; method provided by pytz.</source>
          <target state="translated">如果Django管理数据库，而您没有充分的理由这样做，则应将此选项保持未设置状态。最好将日期时间存储在UTC中，因为这样可以避免在夏令时更改期间出现歧义或不存在的日期时间。另外，使用UTC接收日期时间可以使日期时间算法保持简单&amp;mdash;无需使用pytz提供的 &lt;code&gt;normalize()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="eb49e9ea4d2a972ace1883451b923566c522dc81" translate="yes" xml:space="preserve">
          <source>If Django&amp;rsquo;s built-in validators are not sufficient, you can write your own password validators. Validators have a fairly small interface. They must implement two methods:</source>
          <target state="translated">如果Django的内置验证器不够用，您可以编写自己的密码验证器。验证器的接口很小。他们必须实现两种方法：</target>
        </trans-unit>
        <trans-unit id="5aaa5cbe96b1f59dab0cb77d8d9c394e298d33d7" translate="yes" xml:space="preserve">
          <source>If NumPy is available, the data is returned as NumPy array. For performance reasons, it is highly recommended to use NumPy.</source>
          <target state="translated">如果NumPy可用,数据将以NumPy数组形式返回。出于性能考虑,强烈建议使用NumPy。</target>
        </trans-unit>
        <trans-unit id="4f35abfa4df178cd3d5446f3665622a0713685e7" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin.queryset&quot;&gt;&lt;code&gt;queryset&lt;/code&gt;&lt;/a&gt; is given, the model for that queryset will be used.</source>
          <target state="translated">如果&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin.queryset&quot;&gt; &lt;code&gt;queryset&lt;/code&gt; &lt;/a&gt;给出，将用于该查询集模型。</target>
        </trans-unit>
        <trans-unit id="5a0e09204d58d9f6314a4467ac19b26072f6cdbf" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; field has &lt;code&gt;null=True&lt;/code&gt; set (i.e., it allows &lt;code&gt;NULL&lt;/code&gt; values), you can assign &lt;code&gt;None&lt;/code&gt; to remove the relation. Example:</source>
          <target state="translated">如果&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;字段设置了 &lt;code&gt;null=True&lt;/code&gt; （即，它允许 &lt;code&gt;NULL&lt;/code&gt; 值），则可以指定 &lt;code&gt;None&lt;/code&gt; 来删除该关系。例：</target>
        </trans-unit>
        <trans-unit id="dd1b92eec1467f8420d4b8fea716bef4edcfbc98" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;fields#django.forms.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; defines &lt;a href=&quot;fields#django.forms.Field.initial&quot;&gt;&lt;code&gt;initial&lt;/code&gt;&lt;/a&gt;&lt;em&gt;and&lt;/em&gt; you include &lt;a href=&quot;#django.forms.Form.initial&quot;&gt;&lt;code&gt;initial&lt;/code&gt;&lt;/a&gt; when instantiating the &lt;code&gt;Form&lt;/code&gt;, then the latter &lt;code&gt;initial&lt;/code&gt; will have precedence. In this example, &lt;code&gt;initial&lt;/code&gt; is provided both at the field level and at the form instance level, and the latter gets precedence:</source>
          <target state="translated">如果一个&lt;a href=&quot;fields#django.forms.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;定义了&lt;a href=&quot;fields#django.forms.Field.initial&quot;&gt; &lt;code&gt;initial&lt;/code&gt; ,&lt;/a&gt;&lt;em&gt;并且&lt;/em&gt;在实例化 &lt;code&gt;Form&lt;/code&gt; 时包含了&lt;a href=&quot;#django.forms.Form.initial&quot;&gt; &lt;code&gt;initial&lt;/code&gt; &lt;/a&gt;，则后一个 &lt;code&gt;initial&lt;/code&gt; 将具有优先权。在此示例中，在字段级别和表单实例级别都提供了 &lt;code&gt;initial&lt;/code&gt; ，并且后者具有优先权：</target>
        </trans-unit>
        <trans-unit id="23297be1ec8de83f5e39f061355f1a7e31301819" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/a&gt; object is used, it may be expressed in any units (the SQL generated will use units converted to those of the field); otherwise, numeric parameters are assumed to be in the units of the field.</source>
          <target state="translated">如果使用&lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt; &lt;code&gt;Distance&lt;/code&gt; &lt;/a&gt;对象，则可以任何单位表示（生成的SQL将使用转换为该字段的单位）；否则，假定数字参数以字段为单位。</target>
        </trans-unit>
        <trans-unit id="0953444ca96ddeaf1b7959fbef6cb9995213c823" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&quot;using&quot;&lt;/code&gt; key is present in &lt;code&gt;kwargs&lt;/code&gt; it is used as the database alias for which to check the number of queries:</source>
          <target state="translated">如果 &lt;code&gt;kwargs&lt;/code&gt; 中存在 &lt;code&gt;&quot;using&quot;&lt;/code&gt; 键，则将其用作数据库别名以检查查询数量：</target>
        </trans-unit>
        <trans-unit id="ec4e6b65d87815d29d8a2d46ec2b00f298d5d66e" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;Field&lt;/code&gt; has &lt;code&gt;required=False&lt;/code&gt; and you pass &lt;code&gt;clean()&lt;/code&gt; an empty value, then &lt;code&gt;clean()&lt;/code&gt; will return a &lt;em&gt;normalized&lt;/em&gt; empty value rather than raising &lt;code&gt;ValidationError&lt;/code&gt;. For &lt;code&gt;CharField&lt;/code&gt;, this will be an empty string. For other &lt;code&gt;Field&lt;/code&gt; classes, it might be &lt;code&gt;None&lt;/code&gt;. (This varies from field to field.)</source>
          <target state="translated">如果 &lt;code&gt;Field&lt;/code&gt; 具有 &lt;code&gt;required=False&lt;/code&gt; ,并且您将 &lt;code&gt;clean()&lt;/code&gt; 传递为空值，则 &lt;code&gt;clean()&lt;/code&gt; 将返回&lt;em&gt;标准化的&lt;/em&gt;空值，而不是引发 &lt;code&gt;ValidationError&lt;/code&gt; 。对于 &lt;code&gt;CharField&lt;/code&gt; ，这将是一个空字符串。对于其他 &lt;code&gt;Field&lt;/code&gt; 类，它可能是 &lt;code&gt;None&lt;/code&gt; 。（这因字段而异。）</target>
        </trans-unit>
        <trans-unit id="d24b9c32e214ef3ab0246d149a23453ae0ffe403" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;Field&lt;/code&gt; has &lt;code&gt;required=False&lt;/code&gt; and you pass &lt;code&gt;clean()&lt;/code&gt; an empty value, then &lt;code&gt;clean()&lt;/code&gt; will return a &lt;em&gt;normalized&lt;/em&gt; empty value rather than raising &lt;code&gt;ValidationError&lt;/code&gt;. For &lt;code&gt;CharField&lt;/code&gt;, this will return &lt;a href=&quot;#django.forms.CharField.empty_value&quot;&gt;&lt;code&gt;empty_value&lt;/code&gt;&lt;/a&gt; which defaults to an empty string. For other &lt;code&gt;Field&lt;/code&gt; classes, it might be &lt;code&gt;None&lt;/code&gt;. (This varies from field to field.)</source>
          <target state="translated">如果 &lt;code&gt;Field&lt;/code&gt; 具有 &lt;code&gt;required=False&lt;/code&gt; ,并且您将 &lt;code&gt;clean()&lt;/code&gt; 传递为空值，则 &lt;code&gt;clean()&lt;/code&gt; 将返回&lt;em&gt;规范化的&lt;/em&gt;空值，而不是引发 &lt;code&gt;ValidationError&lt;/code&gt; 。对于 &lt;code&gt;CharField&lt;/code&gt; ，这将返回&lt;a href=&quot;#django.forms.CharField.empty_value&quot;&gt; &lt;code&gt;empty_value&lt;/code&gt; &lt;/a&gt;，默认为空字符串。对于其他 &lt;code&gt;Field&lt;/code&gt; 类，它可能是 &lt;code&gt;None&lt;/code&gt; 。（这因字段而异。）</target>
        </trans-unit>
        <trans-unit id="a088e001be99ce0f05ecba2e8beb695059c4f795" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;SuspiciousOperation&lt;/code&gt; exception reaches the ASGI/WSGI handler level it is logged at the &lt;code&gt;Error&lt;/code&gt; level and results in a &lt;a href=&quot;request-response#django.http.HttpResponseBadRequest&quot;&gt;&lt;code&gt;HttpResponseBadRequest&lt;/code&gt;&lt;/a&gt;. See the &lt;a href=&quot;../topics/logging&quot;&gt;logging documentation&lt;/a&gt; for more information.</source>
          <target state="translated">如果 &lt;code&gt;SuspiciousOperation&lt;/code&gt; 异常达到ASGI / WSGI处理程序级别，则将其记录为 &lt;code&gt;Error&lt;/code&gt; 级别，并产生&lt;a href=&quot;request-response#django.http.HttpResponseBadRequest&quot;&gt; &lt;code&gt;HttpResponseBadRequest&lt;/code&gt; &lt;/a&gt;。有关更多信息，请参见&lt;a href=&quot;../topics/logging&quot;&gt;日志记录文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="95ebbce5c79519d1d18da9be429b333faaaf5fc6" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;SuspiciousOperation&lt;/code&gt; exception reaches the WSGI handler level it is logged at the &lt;code&gt;Error&lt;/code&gt; level and results in a &lt;a href=&quot;request-response#django.http.HttpResponseBadRequest&quot;&gt;&lt;code&gt;HttpResponseBadRequest&lt;/code&gt;&lt;/a&gt;. See the &lt;a href=&quot;../topics/logging&quot;&gt;logging documentation&lt;/a&gt; for more information.</source>
          <target state="translated">如果 &lt;code&gt;SuspiciousOperation&lt;/code&gt; 异常达到WSGI处理程序级别，则将其记录在 &lt;code&gt;Error&lt;/code&gt; 级别，并导致&lt;a href=&quot;request-response#django.http.HttpResponseBadRequest&quot;&gt; &lt;code&gt;HttpResponseBadRequest&lt;/code&gt; &lt;/a&gt;。有关更多信息，请参见&lt;a href=&quot;../topics/logging&quot;&gt;日志记录文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f5bcb830a3b55a5db496eeac9f63848db38b4358" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;message&lt;/code&gt; contains headers at the start of the string, the headers will be printed as the first bit of the email message.</source>
          <target state="translated">如果 &lt;code&gt;message&lt;/code&gt; 在字符串的开头包含标题，则标题将被打印为电子邮件的第一位。</target>
        </trans-unit>
        <trans-unit id="786de74a26ea3015865d33eda29d9247850de3ff" translate="yes" xml:space="preserve">
          <source>If a URL path matches a regular expression in this list, the request will not be redirected to HTTPS. The &lt;a href=&quot;middleware#django.middleware.security.SecurityMiddleware&quot;&gt;&lt;code&gt;SecurityMiddleware&lt;/code&gt;&lt;/a&gt; strips leading slashes from URL paths, so patterns shouldn&amp;rsquo;t include them, e.g. &lt;code&gt;SECURE_REDIRECT_EXEMPT = [r'^no-ssl/$', &amp;hellip;]&lt;/code&gt;. If &lt;a href=&quot;#std:setting-SECURE_SSL_REDIRECT&quot;&gt;&lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;, this setting has no effect.</source>
          <target state="translated">如果URL路径与此列表中的正则表达式匹配，则该请求将不会重定向到HTTPS。该&lt;a href=&quot;middleware#django.middleware.security.SecurityMiddleware&quot;&gt; &lt;code&gt;SecurityMiddleware&lt;/code&gt; &lt;/a&gt;条网址路径斜线开头，这样的模式不应该包括它们，如 &lt;code&gt;SECURE_REDIRECT_EXEMPT = [r'^no-ssl/$', &amp;hellip;]&lt;/code&gt; 。如果&lt;a href=&quot;#std:setting-SECURE_SSL_REDIRECT&quot;&gt; &lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;False&lt;/code&gt; ，则此设置无效。</target>
        </trans-unit>
        <trans-unit id="ba03fe98598ff554e940b398aa3215f04de4ffcf" translate="yes" xml:space="preserve">
          <source>If a backend raises a &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.PermissionDenied&quot;&gt;&lt;code&gt;PermissionDenied&lt;/code&gt;&lt;/a&gt; exception in &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.has_perm&quot;&gt;&lt;code&gt;has_perm()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.has_module_perms&quot;&gt;&lt;code&gt;has_module_perms()&lt;/code&gt;&lt;/a&gt;, the authorization will immediately fail and Django won&amp;rsquo;t check the backends that follow.</source>
          <target state="translated">如果后端在&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.has_perm&quot;&gt; &lt;code&gt;has_perm()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.has_module_perms&quot;&gt; &lt;code&gt;has_module_perms()&lt;/code&gt; 中&lt;/a&gt;引发&lt;a href=&quot;../../ref/exceptions#django.core.exceptions.PermissionDenied&quot;&gt; &lt;code&gt;PermissionDenied&lt;/code&gt; &lt;/a&gt;异常，则授权将立即失败，并且Django将不会检查随后的后端。</target>
        </trans-unit>
        <trans-unit id="2fa2ce59c7328dc011fd86b6fee3bba58a56ca18" translate="yes" xml:space="preserve">
          <source>If a backend raises a &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.PermissionDenied&quot;&gt;&lt;code&gt;PermissionDenied&lt;/code&gt;&lt;/a&gt; exception, authentication will immediately fail. Django won&amp;rsquo;t check the backends that follow.</source>
          <target state="translated">如果后端引发&lt;a href=&quot;../../ref/exceptions#django.core.exceptions.PermissionDenied&quot;&gt; &lt;code&gt;PermissionDenied&lt;/code&gt; &lt;/a&gt;异常，则身份验证将立即失败。Django不会检查后面的后端。</target>
        </trans-unit>
        <trans-unit id="9d41c8331ab7adddfc4b833cf0b2041ce7dd29ef" translate="yes" xml:space="preserve">
          <source>If a base language is available but the sublanguage specified is not, Django uses the base language. For example, if a user specifies &lt;code&gt;de-at&lt;/code&gt; (Austrian German) but Django only has &lt;code&gt;de&lt;/code&gt; available, Django uses &lt;code&gt;de&lt;/code&gt;.</source>
          <target state="translated">如果基本语言可用，但指定的子语言不可用，则Django使用基本语言。例如，如果用户指定 &lt;code&gt;de-at&lt;/code&gt; （奥地利德语），但Django只有 &lt;code&gt;de&lt;/code&gt; 可用，则Django使用 &lt;code&gt;de&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="376b43b9cb329d49e19ff49c7e26326c21be0070" translate="yes" xml:space="preserve">
          <source>If a browser connects initially via HTTP, which is the default for most browsers, it is possible for existing cookies to be leaked. For this reason, you should set your &lt;a href=&quot;../ref/settings#std:setting-SESSION_COOKIE_SECURE&quot;&gt;&lt;code&gt;SESSION_COOKIE_SECURE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/settings#std:setting-CSRF_COOKIE_SECURE&quot;&gt;&lt;code&gt;CSRF_COOKIE_SECURE&lt;/code&gt;&lt;/a&gt; settings to &lt;code&gt;True&lt;/code&gt;. This instructs the browser to only send these cookies over HTTPS connections. Note that this will mean that sessions will not work over HTTP, and the CSRF protection will prevent any POST data being accepted over HTTP (which will be fine if you are redirecting all HTTP traffic to HTTPS).</source>
          <target state="translated">如果浏览器最初通过HTTP连接（这是大多数浏览器的默认设置），则现有的Cookie可能会泄漏。因此，您应该将&lt;a href=&quot;../ref/settings#std:setting-SESSION_COOKIE_SECURE&quot;&gt; &lt;code&gt;SESSION_COOKIE_SECURE&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/settings#std:setting-CSRF_COOKIE_SECURE&quot;&gt; &lt;code&gt;CSRF_COOKIE_SECURE&lt;/code&gt; &lt;/a&gt;设置设置为 &lt;code&gt;True&lt;/code&gt; 。这指示浏览器仅通过HTTPS连接发送这些cookie。请注意，这将意味着会话将无法通过HTTP进行工作，并且CSRF保护将防止通过HTTP接受任何POST数据（如果您将所有HTTP流量都重定向到HTTPS，就可以了）。</target>
        </trans-unit>
        <trans-unit id="c740b7603394883b2b965eca28364f7c9247ff89" translate="yes" xml:space="preserve">
          <source>If a callable is used for &lt;code&gt;limit_choices_to&lt;/code&gt;, it will be invoked every time a new form is instantiated. It may also be invoked when a model is validated, for example by management commands or the admin. The admin constructs querysets to validate its form inputs in various edge cases multiple times, so there is a possibility your callable may be invoked several times.</source>
          <target state="translated">如果callable用于 &lt;code&gt;limit_choices_to&lt;/code&gt; ，则每次实例化新表单时都会调用它。当验证模型时也可以调用它，例如通过管理命令或管理员。管理员构造查询集以多次验证其在各种极端情况下的表单输入，因此您的可调用对象有可能被多次调用。</target>
        </trans-unit>
        <trans-unit id="ca3b6246fdb9dbc1b936cc3e8ac2b8da1438d4d3" translate="yes" xml:space="preserve">
          <source>If a custom subclass of &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; implements a &lt;code&gt;render&lt;/code&gt; method, Django will treat it as emulating a &lt;a href=&quot;template-response#django.template.response.SimpleTemplateResponse&quot;&gt;&lt;code&gt;SimpleTemplateResponse&lt;/code&gt;&lt;/a&gt;, and the &lt;code&gt;render&lt;/code&gt; method must itself return a valid response object.</source>
          <target state="translated">如果&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;的自定义子类实现了 &lt;code&gt;render&lt;/code&gt; 方法，则Django将其视为模拟&lt;a href=&quot;template-response#django.template.response.SimpleTemplateResponse&quot;&gt; &lt;code&gt;SimpleTemplateResponse&lt;/code&gt; &lt;/a&gt;，并且 &lt;code&gt;render&lt;/code&gt; 方法本身必须返回有效的响应对象。</target>
        </trans-unit>
        <trans-unit id="e32b11f77650a5dfa1ba5024c565f112473c21f5" translate="yes" xml:space="preserve">
          <source>If a database operation is able to provide any additional information that might assist in selecting a database, it will be provided in the &lt;code&gt;hints&lt;/code&gt; dictionary. Details on valid hints are provided &lt;a href=&quot;#topics-db-multi-db-hints&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">如果数据库操作能够提供任何有助于选择数据库的附加信息，它将在 &lt;code&gt;hints&lt;/code&gt; 字典中提供。有效提示的详细信息在&lt;a href=&quot;#topics-db-multi-db-hints&quot;&gt;下面&lt;/a&gt;提供。</target>
        </trans-unit>
        <trans-unit id="57e35454b09ff691f569bed0b6a01f70be68bb53" translate="yes" xml:space="preserve">
          <source>If a different timezone like &lt;code&gt;Australia/Melbourne&lt;/code&gt; is active in Django, then the datetime is converted to the new timezone before the value is truncated. The timezone offset for Melbourne in the example date above is +10:00. The values returned when this timezone is active will be:</source>
          <target state="translated">如果Django中有其他时区（例如 &lt;code&gt;Australia/Melbourne&lt;/code&gt; ）处于活动状态，则日期时间将在值被截断之前转换为新时区。在上面的示例日期中，墨尔本的时区偏移为+10：00。激活该时区时返回的值将是：</target>
        </trans-unit>
        <trans-unit id="40ead0c16c096714986873e5ca8d59648a2731a1" translate="yes" xml:space="preserve">
          <source>If a different timezone like &lt;code&gt;Australia/Melbourne&lt;/code&gt; is active in Django, then the datetime is converted to the timezone before the value is extracted. The timezone offset for Melbourne in the example date above is +10:00. The values returned when this timezone is active will be the same as above except for:</source>
          <target state="translated">如果Django中有其他时区（如 &lt;code&gt;Australia/Melbourne&lt;/code&gt; ）处于活动状态，则在提取值之前将datetime转换为时区。在上面的示例日期中，墨尔本的时区偏移为+10：00。此时区处于活动状态时返回的值将与上述相同，除了：</target>
        </trans-unit>
        <trans-unit id="9dd612fed9477c0abbcabff974c2e3681b9057f6" translate="yes" xml:space="preserve">
          <source>If a field with the given name is not found a &lt;a href=&quot;../exceptions#django.core.exceptions.FieldDoesNotExist&quot;&gt;&lt;code&gt;FieldDoesNotExist&lt;/code&gt;&lt;/a&gt; exception will be raised.</source>
          <target state="translated">如果找不到具有给定名称的字段，则将引发&lt;a href=&quot;../exceptions#django.core.exceptions.FieldDoesNotExist&quot;&gt; &lt;code&gt;FieldDoesNotExist&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="36f5c6d42b4b693d43fb0565ac08c49881a8cc16" translate="yes" xml:space="preserve">
          <source>If a file isn&amp;rsquo;t found in the &lt;code&gt;staticfiles.json&lt;/code&gt; manifest at runtime, a &lt;code&gt;ValueError&lt;/code&gt; is raised. This behavior can be disabled by subclassing &lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt; and setting the &lt;code&gt;manifest_strict&lt;/code&gt; attribute to &lt;code&gt;False&lt;/code&gt; &amp;ndash; nonexistent paths will remain unchanged.</source>
          <target state="translated">如果在运行时在 &lt;code&gt;staticfiles.json&lt;/code&gt; 清单中找不到文件，则会引发 &lt;code&gt;ValueError&lt;/code&gt; 。可以通过将 &lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt; 子类化并将 &lt;code&gt;manifest_strict&lt;/code&gt; 属性设置为 &lt;code&gt;False&lt;/code&gt; 来禁用此行为-不存在的路径将保持不变。</target>
        </trans-unit>
        <trans-unit id="d64815254ec043cc9f487e75e480e0b7d7744f44" translate="yes" xml:space="preserve">
          <source>If a file with &lt;code&gt;name&lt;/code&gt; already exists, &lt;a href=&quot;../../howto/custom-file-storage#django.core.files.storage.get_alternative_name&quot;&gt;&lt;code&gt;get_alternative_name()&lt;/code&gt;&lt;/a&gt; is called to obtain an alternative name.</source>
          <target state="translated">如果具有 &lt;code&gt;name&lt;/code&gt; 的文件已经存在，则调用&lt;a href=&quot;../../howto/custom-file-storage#django.core.files.storage.get_alternative_name&quot;&gt; &lt;code&gt;get_alternative_name()&lt;/code&gt; &lt;/a&gt;以获得备用名称。</target>
        </trans-unit>
        <trans-unit id="4878c82df117e894b2c83734529f13460689ef4f" translate="yes" xml:space="preserve">
          <source>If a file with &lt;code&gt;name&lt;/code&gt; already exists, &lt;code&gt;get_alternative_name()&lt;/code&gt; is called to obtain an alternative name.</source>
          <target state="translated">如果具有 &lt;code&gt;name&lt;/code&gt; 的文件已经存在，则调用 &lt;code&gt;get_alternative_name()&lt;/code&gt; 以获得备用名称。</target>
        </trans-unit>
        <trans-unit id="1db0a6d60d804a7f072aeecfe4f0e2fd449487ea" translate="yes" xml:space="preserve">
          <source>If a function (either a view or any regular callback) in your code uses local variables susceptible to contain sensitive information, you may prevent the values of those variables from being included in error reports using the &lt;code&gt;sensitive_variables&lt;/code&gt; decorator:</source>
          <target state="translated">如果代码中的函数（视图或任何常规回调）使用易于包含敏感信息的局部变量，则可以使用 &lt;code&gt;sensitive_variables&lt;/code&gt; 装饰器防止这些变量的值包含在错误报告中：</target>
        </trans-unit>
        <trans-unit id="a908979b10b7cbe092ab501a90dbcc59af970e03" translate="yes" xml:space="preserve">
          <source>If a group of CSS files are appropriate for multiple output media types, the dictionary key can be a comma separated list of output media types. In the following example, TV&amp;rsquo;s and projectors will have the same media requirements:</source>
          <target state="translated">如果一组CSS文件适用于多种输出媒体类型，则字典键可以是逗号分隔的输出媒体类型列表。在以下示例中，电视和投影仪的媒体要求相同：</target>
        </trans-unit>
        <trans-unit id="0969faa22edce6893747f90fdcf0cc7c56f629be" translate="yes" xml:space="preserve">
          <source>If a management command is called from code through &lt;a href=&quot;../ref/django-admin#django.core.management.call_command&quot;&gt;&lt;code&gt;call_command()&lt;/code&gt;&lt;/a&gt;, it&amp;rsquo;s up to you to catch the exception when needed.</source>
          <target state="translated">如果通过&lt;a href=&quot;../ref/django-admin#django.core.management.call_command&quot;&gt; &lt;code&gt;call_command()&lt;/code&gt; &lt;/a&gt;从代码中调用管理命令，则需要由您来捕获异常。</target>
        </trans-unit>
        <trans-unit id="b69c1f15f7880ce6a608e37a3d0c0885c68c3db2" translate="yes" xml:space="preserve">
          <source>If a model has a &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, instances of that model will have access to the related (foreign) object via an attribute of the model.</source>
          <target state="translated">如果模型具有&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;，则该模型的实例将可以通过模型的属性访问相关（外部）对象。</target>
        </trans-unit>
        <trans-unit id="eb15c806fa95b1c1cac44107cdbd6729a430458b" translate="yes" xml:space="preserve">
          <source>If a model has a &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, instances of the foreign-key model will have access to a &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; that returns all instances of the first model. By default, this &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; is named &lt;code&gt;FOO_set&lt;/code&gt;, where &lt;code&gt;FOO&lt;/code&gt; is the source model name, lowercased. This &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;QuerySets&lt;/code&gt;, which can be filtered and manipulated as described in the &amp;ldquo;Retrieving objects&amp;rdquo; section above.</source>
          <target state="translated">如果模型具有&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;，那么外键模型的实例将有权访问&lt;a href=&quot;managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt;，该Manager返回第一个模型的所有实例。默认情况下，此&lt;a href=&quot;managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt;名为 &lt;code&gt;FOO_set&lt;/code&gt; ，其中 &lt;code&gt;FOO&lt;/code&gt; 是源模型名称，小写。该&lt;a href=&quot;managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;QuerySets&lt;/code&gt; ，可以按照上面&amp;ldquo;检索对象&amp;rdquo;部分中的描述进行过滤和操作。</target>
        </trans-unit>
        <trans-unit id="60ba79a890d9e5b777dce6459bc7d4e3596736cc" translate="yes" xml:space="preserve">
          <source>If a model has an &lt;a href=&quot;fields#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt; &amp;mdash; an auto-incrementing primary key &amp;mdash; then that auto-incremented value will be calculated and saved as an attribute on your object the first time you call &lt;code&gt;save()&lt;/code&gt;:</source>
          <target state="translated">如果模型具有&lt;a href=&quot;fields#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; &lt;/a&gt;（自动递增的主键），则该自动递增的值将被计算并在您首次调用 &lt;code&gt;save()&lt;/code&gt; 时作为属性保存在对象上：</target>
        </trans-unit>
        <trans-unit id="8867ea227fede80f2b653fda4e88d79e719938b1" translate="yes" xml:space="preserve">
          <source>If a model has an &lt;a href=&quot;fields#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt; but you want to define a new object&amp;rsquo;s ID explicitly when saving, define it explicitly before saving, rather than relying on the auto-assignment of the ID:</source>
          <target state="translated">如果模型具有一个&lt;a href=&quot;fields#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; ,&lt;/a&gt;但是您想要在保存时显式定义一个新对象的ID，请在保存之前显式定义它，而不是依赖于ID的自动分配：</target>
        </trans-unit>
        <trans-unit id="836ea517ddae0d98a98be3d92fb098c1716467c1" translate="yes" xml:space="preserve">
          <source>If a model is defined outside of an application in &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;, it must declare which app it belongs to:</source>
          <target state="translated">如果模型是在&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;中的应用程序之外定义的，则它必须声明它属于哪个应用程序：</target>
        </trans-unit>
        <trans-unit id="b1b1b8a914c46d91f06259e7e2f6393532703abd" translate="yes" xml:space="preserve">
          <source>If a model with &lt;code&gt;managed=False&lt;/code&gt; contains a &lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; that points to another unmanaged model, then the intermediate table for the many-to-many join will also not be created. However, the intermediary table between one managed and one unmanaged model &lt;em&gt;will&lt;/em&gt; be created.</source>
          <target state="translated">如果 &lt;code&gt;managed=False&lt;/code&gt; 的模型包含指向另一个非托管模型的&lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;，则也不会创建多对多联接的中间表。但是，&lt;em&gt;将&lt;/em&gt;创建一种托管模型和一种非托管模型之间的中间表。</target>
        </trans-unit>
        <trans-unit id="412ddfb7b344d2bfd06795c612194f73c03d1d0a" translate="yes" xml:space="preserve">
          <source>If a model&amp;rsquo;s primary key isn&amp;rsquo;t called &lt;code&gt;id&lt;/code&gt;, no problem. Comparisons will always use the primary key, whatever it&amp;rsquo;s called. For example, if a model&amp;rsquo;s primary key field is called &lt;code&gt;name&lt;/code&gt;, these two statements are equivalent:</source>
          <target state="translated">如果模型的主键不称为 &lt;code&gt;id&lt;/code&gt; ，那就没问题。无论调用什么，比较将始终使用主键。例如，如果模型的主键字段称为 &lt;code&gt;name&lt;/code&gt; ，那么这两个语句是等效的：</target>
        </trans-unit>
        <trans-unit id="fa59d497e1dda34138c57d1907906c6ac5378b51" translate="yes" xml:space="preserve">
          <source>If a movie&amp;rsquo;s &amp;ldquo;peers&amp;rdquo; are described as movies released by the same studio in the same genre in the same year, this &lt;code&gt;RowRange&lt;/code&gt; example annotates each movie with the average rating of a movie&amp;rsquo;s two prior and two following peers:</source>
          <target state="translated">如果将电影的&amp;ldquo;同伴&amp;rdquo;描述为同一年在同一类型的同一工作室发行的电影，则此 &lt;code&gt;RowRange&lt;/code&gt; 示例以每部电影的前两个和后两个同等电影的平均评分为注释：</target>
        </trans-unit>
        <trans-unit id="02dc34c15c815e6e708c5523691c3b4a85610564" translate="yes" xml:space="preserve">
          <source>If a persistent cache value is found, that value is returned. For raster formats using Persistent Auxiliary Metadata (PAM) services, the statistics might be cached in an auxiliary file. In some cases this metadata might be out of sync with the pixel values or cause values from a previous call to be returned which don&amp;rsquo;t reflect the value of the &lt;code&gt;approximate&lt;/code&gt; argument. In such cases, use the &lt;code&gt;refresh&lt;/code&gt; argument to get updated values and store them in the cache.</source>
          <target state="translated">如果找到了持久性缓存值，则返回该值。对于使用持久性辅助元数据（PAM）服务的栅格格式，统计信息可能会缓存在辅助文件中。在某些情况下，此元数据可能与像素值不同步，或导致返回前一个调用的值，而这些值未反映 &lt;code&gt;approximate&lt;/code&gt; 参数的值。在这种情况下，请使用 &lt;code&gt;refresh&lt;/code&gt; 参数获取更新的值并将其存储在缓存中。</target>
        </trans-unit>
        <trans-unit id="8e2f7c830b30646acb1129766828116985345dda" translate="yes" xml:space="preserve">
          <source>If a query doesn&amp;rsquo;t have an ordering specified, results are returned from the database in an unspecified order. A particular ordering is guaranteed only when ordering by a set of fields that uniquely identify each object in the results. For example, if a &lt;code&gt;name&lt;/code&gt; field isn&amp;rsquo;t unique, ordering by it won&amp;rsquo;t guarantee objects with the same name always appear in the same order.</source>
          <target state="translated">如果查询未指定顺序，则结果将以未指定的顺序从数据库返回。仅当通过一组唯一标识结果中每个对象的字段进行排序时，才能保证特定的排序。例如，如果 &lt;code&gt;name&lt;/code&gt; 字段不是唯一的，则按其排序将不能保证具有相同名称的对象始终以相同的顺序出现。</target>
        </trans-unit>
        <trans-unit id="276f40ee2ff4debb8de8e2a78fbc889d76bec708" translate="yes" xml:space="preserve">
          <source>If a response varies depending on the content of the &lt;code&gt;Accept&lt;/code&gt; header and you are using some form of caching like Django&amp;rsquo;s &lt;a href=&quot;middleware#module-django.middleware.cache&quot;&gt;&lt;code&gt;cache middleware&lt;/code&gt;&lt;/a&gt;, you should decorate the view with &lt;a href=&quot;../topics/http/decorators#django.views.decorators.vary.vary_on_headers&quot;&gt;&lt;code&gt;vary_on_headers('Accept')&lt;/code&gt;&lt;/a&gt; so that the responses are properly cached.</source>
          <target state="translated">如果响应根据 &lt;code&gt;Accept&lt;/code&gt; 标头的内容而有所不同，并且您正在使用某种形式的缓存（如Django的&lt;a href=&quot;middleware#module-django.middleware.cache&quot;&gt; &lt;code&gt;cache middleware&lt;/code&gt; &lt;/a&gt;，则应使用&lt;a href=&quot;../topics/http/decorators#django.views.decorators.vary.vary_on_headers&quot;&gt; &lt;code&gt;vary_on_headers('Accept')&lt;/code&gt; &lt;/a&gt;装饰视图，以便正确地缓存响应。</target>
        </trans-unit>
        <trans-unit id="419fbfe6388d6c8dcc573315271dbda24cc24890" translate="yes" xml:space="preserve">
          <source>If a response varies on whether or not it&amp;rsquo;s requested via AJAX and you are using some form of caching like Django&amp;rsquo;s &lt;a href=&quot;middleware#module-django.middleware.cache&quot;&gt;&lt;code&gt;cache middleware&lt;/code&gt;&lt;/a&gt;, you should decorate the view with &lt;a href=&quot;../topics/http/decorators#django.views.decorators.vary.vary_on_headers&quot;&gt;&lt;code&gt;vary_on_headers('X-Requested-With')&lt;/code&gt;&lt;/a&gt; so that the responses are properly cached.</source>
          <target state="translated">如果响应是否通过AJAX请求而有所不同，并且您正在使用某种形式的缓存（例如Django的&lt;a href=&quot;middleware#module-django.middleware.cache&quot;&gt; &lt;code&gt;cache middleware&lt;/code&gt; &lt;/a&gt;，则应使用&lt;a href=&quot;../topics/http/decorators#django.views.decorators.vary.vary_on_headers&quot;&gt; &lt;code&gt;vary_on_headers('X-Requested-With')&lt;/code&gt; &lt;/a&gt;装饰视图，以便正确地缓存响应。</target>
        </trans-unit>
        <trans-unit id="7f467ff0e02bba6e43affce86c588503c3a97097" translate="yes" xml:space="preserve">
          <source>If a string (e.g. &lt;code&gt;secure.example.com&lt;/code&gt;), all SSL redirects will be directed to this host rather than the originally-requested host (e.g. &lt;code&gt;www.example.com&lt;/code&gt;). If &lt;a href=&quot;#std:setting-SECURE_SSL_REDIRECT&quot;&gt;&lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;, this setting has no effect.</source>
          <target state="translated">如果是字符串（例如 &lt;code&gt;secure.example.com&lt;/code&gt; ），则所有SSL重定向都将定向到该主机，而不是最初请求的主机（例如 &lt;code&gt;www.example.com&lt;/code&gt; ）。如果&lt;a href=&quot;#std:setting-SECURE_SSL_REDIRECT&quot;&gt; &lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;False&lt;/code&gt; ，则此设置无效。</target>
        </trans-unit>
        <trans-unit id="819af35e8e5b0b423576e67f3d4a85e07e4a5780" translate="yes" xml:space="preserve">
          <source>If a variable is false or empty, use given default. Otherwise, use the value of the variable. For example:</source>
          <target state="translated">如果一个变量为false或空,使用给定的默认值。否则,使用变量的值。例如:如果一个变量为false或空,则使用给定的默认值,否则使用变量的值。</target>
        </trans-unit>
        <trans-unit id="65519194e6da2e5393e5193ef34a21784e4c9145" translate="yes" xml:space="preserve">
          <source>If a variable resolves to a callable, the template system will call it with no arguments and use its result instead of the callable.</source>
          <target state="translated">如果一个变量解析为一个可调用的变量,模板系统将在没有参数的情况下调用它,并使用它的结果代替可调用的变量。</target>
        </trans-unit>
        <trans-unit id="116d86f8db0d1afc35e7e30a7f2315cb0ba50f4a" translate="yes" xml:space="preserve">
          <source>If a view is using this mixin, all requests by non-authenticated users will be redirected to the login page or shown an HTTP 403 Forbidden error, depending on the &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.raise_exception&quot;&gt;&lt;code&gt;raise_exception&lt;/code&gt;&lt;/a&gt; parameter.</source>
          <target state="translated">如果视图使用此混合，则未经身份验证的用户的所有请求都将重定向到登录页面，或显示HTTP 403 Forbidden错误，具体取决于&lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.raise_exception&quot;&gt; &lt;code&gt;raise_exception&lt;/code&gt; &lt;/a&gt;参数。</target>
        </trans-unit>
        <trans-unit id="2472a23c9704c8c58addf4a481db8096770e5e94" translate="yes" xml:space="preserve">
          <source>If a view sets its own cache expiry time (i.e. it has a &lt;code&gt;max-age&lt;/code&gt; section in its &lt;code&gt;Cache-Control&lt;/code&gt; header) then the page will be cached until the expiry time, rather than &lt;a href=&quot;../ref/settings#std:setting-CACHE_MIDDLEWARE_SECONDS&quot;&gt;&lt;code&gt;CACHE_MIDDLEWARE_SECONDS&lt;/code&gt;&lt;/a&gt;. Using the decorators in &lt;code&gt;django.views.decorators.cache&lt;/code&gt; you can easily set a view&amp;rsquo;s expiry time (using the &lt;a href=&quot;http/decorators#django.views.decorators.cache.cache_control&quot;&gt;&lt;code&gt;cache_control()&lt;/code&gt;&lt;/a&gt; decorator) or disable caching for a view (using the &lt;a href=&quot;http/decorators#django.views.decorators.cache.never_cache&quot;&gt;&lt;code&gt;never_cache()&lt;/code&gt;&lt;/a&gt; decorator). See the &lt;a href=&quot;#controlling-cache-using-other-headers&quot;&gt;using other headers&lt;/a&gt; section for more on these decorators.</source>
          <target state="translated">如果视图设置了自己的缓存过期时间（即，它的 &lt;code&gt;Cache-Control&lt;/code&gt; 标头中具有 &lt;code&gt;max-age&lt;/code&gt; 部分），则页面将一直缓存到过期时间，而不是&lt;a href=&quot;../ref/settings#std:setting-CACHE_MIDDLEWARE_SECONDS&quot;&gt; &lt;code&gt;CACHE_MIDDLEWARE_SECONDS&lt;/code&gt; &lt;/a&gt;。使用 &lt;code&gt;django.views.decorators.cache&lt;/code&gt; 中的装饰器，您可以轻松设置视图的过期时间（使用&lt;a href=&quot;http/decorators#django.views.decorators.cache.cache_control&quot;&gt; &lt;code&gt;cache_control()&lt;/code&gt; &lt;/a&gt;装饰器）或禁用视图缓存（使用&lt;a href=&quot;http/decorators#django.views.decorators.cache.never_cache&quot;&gt; &lt;code&gt;never_cache()&lt;/code&gt; &lt;/a&gt;装饰器）。有关这些装饰器的更多信息，请参见&amp;ldquo; &lt;a href=&quot;#controlling-cache-using-other-headers&quot;&gt;使用其他标头&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="bd0e4e15cb1a129fa5304adb9ab881ae3476ced9" translate="yes" xml:space="preserve">
          <source>If additional escaping is not desired, you will need to use &lt;a href=&quot;../ref/utils#django.utils.safestring.mark_safe&quot;&gt;&lt;code&gt;mark_safe()&lt;/code&gt;&lt;/a&gt; if you are absolutely sure that your code does not contain XSS vulnerabilities. For building small HTML snippets, use of &lt;a href=&quot;../ref/utils#django.utils.html.format_html&quot;&gt;&lt;code&gt;format_html()&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;mark_safe()&lt;/code&gt; is strongly recommended.</source>
          <target state="translated">如果不需要额外的转义，如果您完全确定您的代码不包含XSS漏洞，则需要使用&lt;a href=&quot;../ref/utils#django.utils.safestring.mark_safe&quot;&gt; &lt;code&gt;mark_safe()&lt;/code&gt; &lt;/a&gt;。为了生成小的HTML代码段，强烈建议使用&lt;a href=&quot;../ref/utils#django.utils.html.format_html&quot;&gt; &lt;code&gt;format_html()&lt;/code&gt; &lt;/a&gt;而不是 &lt;code&gt;mark_safe()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d018009d896660351337e8c7652155ea49ee64a9" translate="yes" xml:space="preserve">
          <source>If all items in a sitemap have a &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.lastmod&quot;&gt;&lt;code&gt;lastmod&lt;/code&gt;&lt;/a&gt;, the sitemap generated by &lt;a href=&quot;#django.contrib.sitemaps.views.sitemap&quot;&gt;&lt;code&gt;views.sitemap()&lt;/code&gt;&lt;/a&gt; will have a &lt;code&gt;Last-Modified&lt;/code&gt; header equal to the latest &lt;code&gt;lastmod&lt;/code&gt;. You can activate the &lt;a href=&quot;../middleware#django.middleware.http.ConditionalGetMiddleware&quot;&gt;&lt;code&gt;ConditionalGetMiddleware&lt;/code&gt;&lt;/a&gt; to make Django respond appropriately to requests with an &lt;code&gt;If-Modified-Since&lt;/code&gt; header which will prevent sending the sitemap if it hasn&amp;rsquo;t changed.</source>
          <target state="translated">如果站点地图中的所有项目都具有&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.lastmod&quot;&gt; &lt;code&gt;lastmod&lt;/code&gt; &lt;/a&gt;，则&lt;a href=&quot;#django.contrib.sitemaps.views.sitemap&quot;&gt; &lt;code&gt;views.sitemap()&lt;/code&gt; &lt;/a&gt;生成的站点地图将具有 &lt;code&gt;Last-Modified&lt;/code&gt; 标头，该标头等于最新的 &lt;code&gt;lastmod&lt;/code&gt; 。您可以激活&lt;a href=&quot;../middleware#django.middleware.http.ConditionalGetMiddleware&quot;&gt; &lt;code&gt;ConditionalGetMiddleware&lt;/code&gt; &lt;/a&gt;以使Django使用 &lt;code&gt;If-Modified-Since&lt;/code&gt; 标头适当地响应请求，这将阻止发送站点地图（如果未更改）。</target>
        </trans-unit>
        <trans-unit id="4efc199d481916c1801fd9d031e671d91e418ff5" translate="yes" xml:space="preserve">
          <source>If all of the tests passed, then you&amp;rsquo;ll want to make sure that you added the new test shown above to the appropriate folder and file name.</source>
          <target state="translated">如果所有测试都通过了，那么您将要确保将上面显示的新测试添加到适当的文件夹和文件名中。</target>
        </trans-unit>
        <trans-unit id="af2d81f3186a97fe69044083ccf1ae5c5bacc347" translate="yes" xml:space="preserve">
          <source>If all you want is to run Django with your native language all you need to do is set &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGE_CODE&quot;&gt;&lt;code&gt;LANGUAGE_CODE&lt;/code&gt;&lt;/a&gt; and make sure the corresponding &lt;a href=&quot;index#term-message-file&quot;&gt;message files&lt;/a&gt; and their compiled versions (&lt;code&gt;.mo&lt;/code&gt;) exist.</source>
          <target state="translated">如果只想使用本机语言运行Django，则只需设置&lt;a href=&quot;../../ref/settings#std:setting-LANGUAGE_CODE&quot;&gt; &lt;code&gt;LANGUAGE_CODE&lt;/code&gt; &lt;/a&gt;，并确保存在相应的&lt;a href=&quot;index#term-message-file&quot;&gt;消息文件&lt;/a&gt;及其编译版本（ &lt;code&gt;.mo&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5d55df844cd1e592f6c1063624dbce8afbbd7354" translate="yes" xml:space="preserve">
          <source>If an error happens during template parsing or rendering, Django can display the line the error happened on. For example:</source>
          <target state="translated">如果在模板解析或渲染过程中发生错误,Django可以显示错误发生的行。例如</target>
        </trans-unit>
        <trans-unit id="004a42cd451fd1f1d6e009a950c33e7582c724d1" translate="yes" xml:space="preserve">
          <source>If an optional field doesn&amp;rsquo;t appear in the form&amp;rsquo;s data, the resulting model instance uses the model field &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.default&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;, if there is one, for that field. This behavior doesn&amp;rsquo;t apply to fields that use &lt;a href=&quot;../../ref/forms/widgets#django.forms.CheckboxInput&quot;&gt;&lt;code&gt;CheckboxInput&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/forms/widgets#django.forms.CheckboxSelectMultiple&quot;&gt;&lt;code&gt;CheckboxSelectMultiple&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../../ref/forms/widgets#django.forms.SelectMultiple&quot;&gt;&lt;code&gt;SelectMultiple&lt;/code&gt;&lt;/a&gt; (or any custom widget whose &lt;a href=&quot;../../ref/forms/widgets#django.forms.Widget.value_omitted_from_data&quot;&gt;&lt;code&gt;value_omitted_from_data()&lt;/code&gt;&lt;/a&gt; method always returns &lt;code&gt;False&lt;/code&gt;) since an unchecked checkbox and unselected &lt;code&gt;&amp;lt;select multiple&amp;gt;&lt;/code&gt; don&amp;rsquo;t appear in the data of an HTML form submission. Use a custom form field or widget if you&amp;rsquo;re designing an API and want the default fallback behavior for a field that uses one of these widgets.</source>
          <target state="translated">如果表单数据中未显示可选字段，则生成的模型实例将对该字段使用模型字段&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.default&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;（如果有）。此行为不适用于使用&lt;a href=&quot;../../ref/forms/widgets#django.forms.CheckboxInput&quot;&gt; &lt;code&gt;CheckboxInput&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../ref/forms/widgets#django.forms.CheckboxSelectMultiple&quot;&gt; &lt;code&gt;CheckboxSelectMultiple&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../ref/forms/widgets#django.forms.SelectMultiple&quot;&gt; &lt;code&gt;SelectMultiple&lt;/code&gt; &lt;/a&gt;（或任何&lt;a href=&quot;../../ref/forms/widgets#django.forms.Widget.value_omitted_from_data&quot;&gt; &lt;code&gt;value_omitted_from_data()&lt;/code&gt; &lt;/a&gt;方法始终返回 &lt;code&gt;False&lt;/code&gt; 的自定义窗口小部件）的字段，因为未选中的复选框和未选中的 &lt;code&gt;&amp;lt;select multiple&amp;gt;&lt;/code&gt; 不会出现在HTML的数据中表单提交。如果您正在设计API，并且想要使用这些小部件之一的字段的默认回退行为，请使用自定义表单字段或小部件。</target>
        </trans-unit>
        <trans-unit id="9cb04eee8e4707359752c37d935aef72b38a85f2" translate="yes" xml:space="preserve">
          <source>If any keyword arguments are provided, they will be passed to the constructor of the response class.</source>
          <target state="translated">如果提供任何关键字参数,它们将被传递给响应类的构造函数。</target>
        </trans-unit>
        <trans-unit id="3ca0ba8a01e4bba76fac0f283df438a0e32e99ce" translate="yes" xml:space="preserve">
          <source>If any of those are not true, you should keep this setting set to &lt;code&gt;None&lt;/code&gt; and find another way of determining HTTPS, perhaps via custom middleware.</source>
          <target state="translated">如果其中任何一个都不正确，则应将此设置保持为 &lt;code&gt;None&lt;/code&gt; ,并找到另一种确定HTTPS的方法，也许通过自定义中间件。</target>
        </trans-unit>
        <trans-unit id="b7d9b6ada1db10c808758db904b1e245c1501d93" translate="yes" xml:space="preserve">
          <source>If any of your Django views send email using &lt;a href=&quot;../email&quot;&gt;Django&amp;rsquo;s email functionality&lt;/a&gt;, you probably don&amp;rsquo;t want to send email each time you run a test using that view. For this reason, Django&amp;rsquo;s test runner automatically redirects all Django-sent email to a dummy outbox. This lets you test every aspect of sending email &amp;ndash; from the number of messages sent to the contents of each message &amp;ndash; without actually sending the messages.</source>
          <target state="translated">如果您的任何Django视图使用&lt;a href=&quot;../email&quot;&gt;Django的电子邮件功能&lt;/a&gt;发送电子邮件，则可能不想每次使用该视图运行测试时都发送电子邮件。因此，Django的测试运行程序会自动将所有Django发送的电子邮件重定向到虚拟发件箱。这使您可以测试发送电子邮件的各个方面-从发送的邮件数到每封邮件的内容-无需实际发送邮件。</target>
        </trans-unit>
        <trans-unit id="f7cd992185606a1b60bac1b5887d3305c1d38a0f" translate="yes" xml:space="preserve">
          <source>If any part of the variable is callable, the template system will try calling it. Example:</source>
          <target state="translated">如果变量的任何部分是可调用的,模板系统将尝试调用它。例子:如果一个变量的任何部分是可调用的,那么模板系统将尝试调用它。</target>
        </trans-unit>
        <trans-unit id="98c3f82d22ad3b1b1d268b1281f2a82a22a7f832" translate="yes" xml:space="preserve">
          <source>If autoclobber is &lt;code&gt;True&lt;/code&gt;, the database will be destroyed without consulting the user.</source>
          <target state="translated">如果autoclobber为 &lt;code&gt;True&lt;/code&gt; ，则将在不咨询用户的情况下破坏数据库。</target>
        </trans-unit>
        <trans-unit id="5b22c30791d93745f5516c055e57528793230347" translate="yes" xml:space="preserve">
          <source>If called via &lt;code&gt;GET&lt;/code&gt;, it displays a login form that POSTs to the same URL. More on this in a bit.</source>
          <target state="translated">如果通过 &lt;code&gt;GET&lt;/code&gt; 调用，它将显示一个登录表单，该表单会过帐到相同的URL。进一步了解这一点。</target>
        </trans-unit>
        <trans-unit id="46678a34b8334aafed964864dd1e40fe87ccd539" translate="yes" xml:space="preserve">
          <source>If called via &lt;code&gt;POST&lt;/code&gt; with user submitted credentials, it tries to log the user in. If login is successful, the view redirects to the URL specified in &lt;code&gt;next&lt;/code&gt;. If &lt;code&gt;next&lt;/code&gt; isn&amp;rsquo;t provided, it redirects to &lt;a href=&quot;../../ref/settings#std:setting-LOGIN_REDIRECT_URL&quot;&gt;&lt;code&gt;settings.LOGIN_REDIRECT_URL&lt;/code&gt;&lt;/a&gt; (which defaults to &lt;code&gt;/accounts/profile/&lt;/code&gt;). If login isn&amp;rsquo;t successful, it redisplays the login form.</source>
          <target state="translated">如果使用用户提交的凭据通过 &lt;code&gt;POST&lt;/code&gt; 调用，它将尝试登录用户。如果登录成功，则视图将重定向到 &lt;code&gt;next&lt;/code&gt; 中指定的URL 。如果未提供 &lt;code&gt;next&lt;/code&gt; ，它将重定向到&lt;a href=&quot;../../ref/settings#std:setting-LOGIN_REDIRECT_URL&quot;&gt; &lt;code&gt;settings.LOGIN_REDIRECT_URL&lt;/code&gt; &lt;/a&gt;（默认为 &lt;code&gt;/accounts/profile/&lt;/code&gt; ）。如果登录不成功，它将重新显示登录表单。</target>
        </trans-unit>
        <trans-unit id="750d2305bb14a5c3b5333c9c7a05dbb98c87224d" translate="yes" xml:space="preserve">
          <source>If configured, the &lt;a href=&quot;middleware#django.middleware.security.SecurityMiddleware&quot;&gt;&lt;code&gt;SecurityMiddleware&lt;/code&gt;&lt;/a&gt; sets the &lt;a href=&quot;middleware#referrer-policy&quot;&gt;Referrer Policy&lt;/a&gt; header on all responses that do not already have it to the value provided.</source>
          <target state="translated">如果已配置，则&lt;a href=&quot;middleware#django.middleware.security.SecurityMiddleware&quot;&gt; &lt;code&gt;SecurityMiddleware&lt;/code&gt; &lt;/a&gt;会将所有&lt;a href=&quot;middleware#referrer-policy&quot;&gt;尚&lt;/a&gt;没有的Referrer Policy标头设置为提供的值。</target>
        </trans-unit>
        <trans-unit id="3b24098ce265e59d2d9391447879b5bbc4795b4b" translate="yes" xml:space="preserve">
          <source>If desired, you may specify the numeric values for the constants directly according to the values in the above &lt;a href=&quot;contrib/messages#message-level-constants&quot;&gt;constants table&lt;/a&gt;.</source>
          <target state="translated">如果需要，可以直接根据上面的&lt;a href=&quot;contrib/messages#message-level-constants&quot;&gt;常数表中&lt;/a&gt;的值指定常数的数值。</target>
        </trans-unit>
        <trans-unit id="60f37a761df5744dd22f17c7944ea423a1fae999" translate="yes" xml:space="preserve">
          <source>If either geometry is empty, returns &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">如果任一几何为空，则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2dc033f0f3207c5001559cb4fc79bafb686f8940" translate="yes" xml:space="preserve">
          <source>If either of these are used, the order the fields appear in the form will be the order the fields are defined in the model, with &lt;code&gt;ManyToManyField&lt;/code&gt; instances appearing last.</source>
          <target state="translated">如果使用这两种方法中的任何一种，则字段在表单中出现的顺序将是字段在模型中定义的顺序，其中 &lt;code&gt;ManyToManyField&lt;/code&gt; 实例最后出现。</target>
        </trans-unit>
        <trans-unit id="89dd600a41a8a4a339d00aba9150edcc8a920468" translate="yes" xml:space="preserve">
          <source>If for any reason you want to force a database query, you can tell Django to clear the cache using &lt;code&gt;Site.objects.clear_cache()&lt;/code&gt;:</source>
          <target state="translated">如果出于某种原因要强制执行数据库查询，则可以告诉Django使用 &lt;code&gt;Site.objects.clear_cache()&lt;/code&gt; 清除缓存：</target>
        </trans-unit>
        <trans-unit id="881be6681a0240125f9df0391268603aa0a52905" translate="yes" xml:space="preserve">
          <source>If for some reason you don&amp;rsquo;t want to use client-side escaping, you can also set &lt;code&gt;escape_html=True&lt;/code&gt; and error messages will be escaped so you can use them directly in HTML.</source>
          <target state="translated">如果由于某种原因您不想使用客户端转义，您还可以设置 &lt;code&gt;escape_html=True&lt;/code&gt; ,并且错误消息将被转义，因此您可以直接在HTML中使用它们。</target>
        </trans-unit>
        <trans-unit id="7d58ec0c689655b5bf0b89270f0419bdf232624f" translate="yes" xml:space="preserve">
          <source>If given one or more variables, check whether any variable has changed. For example, the following shows the date every time it changes, while showing the hour if either the hour or the date has changed:</source>
          <target state="translated">如果给定一个或多个变量,检查是否有任何变量发生了变化。例如,下面的内容显示了每一次日期的变化,而如果小时或日期发生了变化,则显示小时。</target>
        </trans-unit>
        <trans-unit id="a75480c4dd65b1596a43ef88e502e15a63301456" translate="yes" xml:space="preserve">
          <source>If in doubt, inspect the SQL query!</source>
          <target state="translated">如果有疑问,请检查SQL查询!</target>
        </trans-unit>
        <trans-unit id="95d8c3ff1cc126a9b4a3bff2c74afae11dd80cd5" translate="yes" xml:space="preserve">
          <source>If in doubt, it&amp;rsquo;s often better to back off and base your work on &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#View&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#TemplateView&quot;&gt;&lt;code&gt;TemplateView&lt;/code&gt;&lt;/a&gt;, perhaps with &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/class-based-views/mixins-multiple-object#django.views.generic.list.MultipleObjectMixin&quot;&gt;&lt;code&gt;MultipleObjectMixin&lt;/code&gt;&lt;/a&gt;. Although you will probably end up writing more code, it is more likely to be clearly understandable to someone else coming to it later, and with fewer interactions to worry about you will save yourself some thinking. (Of course, you can always dip into Django&amp;rsquo;s implementation of the generic class-based views for inspiration on how to tackle problems.)</source>
          <target state="translated">如有疑问，最好退一步并将工作基于&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#View&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#TemplateView&quot;&gt; &lt;code&gt;TemplateView&lt;/code&gt; &lt;/a&gt;，也许可以使用&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt; &lt;code&gt;SingleObjectMixin&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ref/class-based-views/mixins-multiple-object#django.views.generic.list.MultipleObjectMixin&quot;&gt; &lt;code&gt;MultipleObjectMixin&lt;/code&gt; &lt;/a&gt;。尽管您可能最终会写出更多的代码，但是以后其他人可能更容易理解它，而更少的交互性让您担心了，省去了一些思考。（当然，您总是可以深入了解Django基于类的通用视图的实现，以获取有关如何解决问题的灵感。）</target>
        </trans-unit>
        <trans-unit id="b5a0af3361c3b012a91fa944affd5c900cdcd944" translate="yes" xml:space="preserve">
          <source>If in doubt, it&amp;rsquo;s often better to back off and base your work on &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#View&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#TemplateView&quot;&gt;&lt;code&gt;TemplateView&lt;/code&gt;&lt;/a&gt;, perhaps with &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/class-based-views/mixins-multiple-object#django.views.generic.list.MultipleObjectMixin&quot;&gt;&lt;code&gt;MultipleObjectMixin&lt;/code&gt;&lt;/a&gt;. Although you will probably end up writing more code, it is more likely to be clearly understandable to someone else coming to it later, and with fewer interactions to worry about you will save yourself some thinking. (Of course, you can always dip into Django&amp;rsquo;s implementation of the generic class-based views for inspiration on how to tackle problems.)</source>
          <target state="translated">如有疑问，最好退一步，然后基于&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#View&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#TemplateView&quot;&gt; &lt;code&gt;TemplateView&lt;/code&gt; 进行工作&lt;/a&gt;，也许使用&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt; &lt;code&gt;SingleObjectMixin&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ref/class-based-views/mixins-multiple-object#django.views.generic.list.MultipleObjectMixin&quot;&gt; &lt;code&gt;MultipleObjectMixin&lt;/code&gt; &lt;/a&gt;。尽管您可能最终会写出更多的代码，但是以后其他人可能更容易理解它，而更少的交互性让您担心，可以节省很多时间。 （当然，您始终可以深入了解Django基于类的通用视图的实现，以获取有关如何解决问题的灵感。）</target>
        </trans-unit>
        <trans-unit id="e0befa3f1898d2d464922616bfef2029b094f045" translate="yes" xml:space="preserve">
          <source>If in doubt, leave it to its default of &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">如有疑问，请将其保留为默认值 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff31f3d5d18a022f12eef24cbd3a8fdb28ad8cd1" translate="yes" xml:space="preserve">
          <source>If installed successfully, the PostgreSQL server will run in the background each time the system as started as a Windows service. A PostgreSQL 12 start menu group will created and contains shortcuts for the Application Stack Builder (ASB) as well as the &amp;lsquo;SQL Shell&amp;rsquo;, which will launch a &lt;code&gt;psql&lt;/code&gt; command window.</source>
          <target state="translated">如果安装成功，则每次将系统作为Windows服务启动时，PostgreSQL服务器将在后台运行。将创建一个PostgreSQL 12开始菜单组，其中包含Application Stack Builder（ASB）和&amp;ldquo; SQL Shell&amp;rdquo;的快捷方式，这将启动一个 &lt;code&gt;psql&lt;/code&gt; 命令窗口。</target>
        </trans-unit>
        <trans-unit id="ee64183f66a72c6ae780b05e928a3e9c5cf48b84" translate="yes" xml:space="preserve">
          <source>If installed successfully, the PostgreSQL server will run in the background each time the system as started as a Windows service. A PostgreSQL 9.x start menu group will created and contains shortcuts for the ASB as well as the &amp;lsquo;SQL Shell&amp;rsquo;, which will launch a &lt;code&gt;psql&lt;/code&gt; command window.</source>
          <target state="translated">如果安装成功，则每次将系统作为Windows服务启动时，PostgreSQL服务器都会在后台运行。将创建一个PostgreSQL 9.x开始菜单组，其中包含ASB和&amp;ldquo; SQL Shell&amp;rdquo;的快捷方式，这将启动一个 &lt;code&gt;psql&lt;/code&gt; 命令窗口。</target>
        </trans-unit>
        <trans-unit id="9982be845bcf21d3518f4d7ad7b68561577502c0" translate="yes" xml:space="preserve">
          <source>If instead you&amp;rsquo;re getting a &lt;code&gt;NameError&lt;/code&gt; here, you may have missed a step in &lt;a href=&quot;tutorial02#tutorial02-import-timezone&quot;&gt;Part 2&lt;/a&gt; where we added imports of &lt;code&gt;datetime&lt;/code&gt; and &lt;code&gt;timezone&lt;/code&gt; to &lt;code&gt;polls/models.py&lt;/code&gt;. Copy the imports from that section, and try running your tests again.</source>
          <target state="translated">相反，如果您在此处遇到 &lt;code&gt;NameError&lt;/code&gt; ，则可能错过了&lt;a href=&quot;tutorial02#tutorial02-import-timezone&quot;&gt;第2部分中&lt;/a&gt;的步骤，在该步骤中，我们将 &lt;code&gt;datetime&lt;/code&gt; 和 &lt;code&gt;timezone&lt;/code&gt; 的导入添加到 &lt;code&gt;polls/models.py&lt;/code&gt; 中。复制该部分中的导入，然后尝试再次运行测试。</target>
        </trans-unit>
        <trans-unit id="b0529f7dc039ac957b0f3d20411828b42bb5e1fe" translate="yes" xml:space="preserve">
          <source>If irregular shapes are required, then the underlying field should be made nullable and the values padded with &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">如果需要不规则形状，则应使基础字段可为空，并用 &lt;code&gt;None&lt;/code&gt; 填充值。</target>
        </trans-unit>
        <trans-unit id="9c00a72ebe457e881bb58234002ab6b32b6b66b1" translate="yes" xml:space="preserve">
          <source>If it doesn&amp;rsquo;t find a match, the request continues to be processed as usual.</source>
          <target state="translated">如果找不到匹配项，则继续照常处理请求。</target>
        </trans-unit>
        <trans-unit id="e0e735de01fd61ae5f7f9a6e0d1a273b2c4436c9" translate="yes" xml:space="preserve">
          <source>If it finds a match, and &lt;code&gt;new_path&lt;/code&gt; is empty, it sends a 410 (&amp;ldquo;Gone&amp;rdquo;) HTTP header and empty (content-less) response.</source>
          <target state="translated">如果找到匹配项，并且 &lt;code&gt;new_path&lt;/code&gt; 为空，则发送410（&amp;ldquo;已消失&amp;rdquo;）HTTP标头和空（无内容）响应。</target>
        </trans-unit>
        <trans-unit id="73c4530195aba3cc21c592ffcd6b9c8e4ef6a369" translate="yes" xml:space="preserve">
          <source>If it finds a match, and &lt;code&gt;new_path&lt;/code&gt; is not empty, it redirects to &lt;code&gt;new_path&lt;/code&gt; using a 301 (&amp;ldquo;Moved Permanently&amp;rdquo;) redirect. You can subclass &lt;a href=&quot;#django.contrib.redirects.middleware.RedirectFallbackMiddleware&quot;&gt;&lt;code&gt;RedirectFallbackMiddleware&lt;/code&gt;&lt;/a&gt; and set &lt;a href=&quot;#django.contrib.redirects.middleware.RedirectFallbackMiddleware.response_redirect_class&quot;&gt;&lt;code&gt;response_redirect_class&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;../request-response#django.http.HttpResponseRedirect&quot;&gt;&lt;code&gt;django.http.HttpResponseRedirect&lt;/code&gt;&lt;/a&gt; to use a &lt;code&gt;302 Moved Temporarily&lt;/code&gt; redirect instead.</source>
          <target state="translated">如果找到匹配项，并且 &lt;code&gt;new_path&lt;/code&gt; 不为空，则使用301（&amp;ldquo;永久移动&amp;rdquo;）重定向将其重定向到 &lt;code&gt;new_path&lt;/code&gt; 。您可以&lt;a href=&quot;#django.contrib.redirects.middleware.RedirectFallbackMiddleware&quot;&gt; &lt;code&gt;RedirectFallbackMiddleware&lt;/code&gt; &lt;/a&gt;子类化，并将&lt;a href=&quot;#django.contrib.redirects.middleware.RedirectFallbackMiddleware.response_redirect_class&quot;&gt; &lt;code&gt;response_redirect_class&lt;/code&gt; &lt;/a&gt;设置为&lt;a href=&quot;../request-response#django.http.HttpResponseRedirect&quot;&gt; &lt;code&gt;django.http.HttpResponseRedirect&lt;/code&gt; ,&lt;/a&gt;以改用 &lt;code&gt;302 Moved Temporarily&lt;/code&gt; 重定向。</target>
        </trans-unit>
        <trans-unit id="5b218da7489aa0db49911f5e0a7d7d9f83acf412" translate="yes" xml:space="preserve">
          <source>If it finds a match, it follows this algorithm:</source>
          <target state="translated">如果它找到了匹配,就按照这个算法。</target>
        </trans-unit>
        <trans-unit id="f8555e4e9f54c1af70c38896405428aee1b63eb8" translate="yes" xml:space="preserve">
          <source>If it is set to &lt;code&gt;False&lt;/code&gt;, the test tablespaces won&amp;rsquo;t be automatically created at the beginning of the tests or dropped at the end.</source>
          <target state="translated">如果将其设置为 &lt;code&gt;False&lt;/code&gt; ，则测试表空间将不会在测试开始时自动创建，也不会在测试结束时自动删除。</target>
        </trans-unit>
        <trans-unit id="9ff28be548c2e6e62ad9addaad106ce48d9e3524" translate="yes" xml:space="preserve">
          <source>If it is set to &lt;code&gt;False&lt;/code&gt;, the test user won&amp;rsquo;t be automatically created at the beginning of the tests and dropped at the end.</source>
          <target state="translated">如果将其设置为 &lt;code&gt;False&lt;/code&gt; ，则不会在测试开始时自动创建测试用户，并在测试结束时自动将其删除。</target>
        </trans-unit>
        <trans-unit id="086e529324c77f10019deb2293586e1f5eb037d3" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s &lt;strong&gt;bound&lt;/strong&gt; to a set of data, it&amp;rsquo;s capable of validating that data and rendering the form as HTML with the data displayed in the HTML.</source>
          <target state="translated">如果&lt;strong&gt;绑定&lt;/strong&gt;到一组数据，则可以验证该数据并将表单显示为HTML，并将数据显示在HTML中。</target>
        </trans-unit>
        <trans-unit id="762f1bc2f06cdbc47d6d0f309454113e33598057" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s &lt;strong&gt;unbound&lt;/strong&gt;, it cannot do validation (because there&amp;rsquo;s no data to validate!), but it can still render the blank form as HTML.</source>
          <target state="translated">如果&lt;strong&gt;未绑定&lt;/strong&gt;，则无法进行验证（因为没有要验证的数据！），但仍可以将空白表单呈现为HTML。</target>
        </trans-unit>
        <trans-unit id="7234acef7c65e2c9323271fc3c9d4ad9eb4b1e7c" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s a method, it should return the absolute path for a given object as returned by &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.items&quot;&gt;&lt;code&gt;items()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果是方法，则应返回由&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.items&quot;&gt; &lt;code&gt;items()&lt;/code&gt; &lt;/a&gt;返回的给定对象的绝对路径。</target>
        </trans-unit>
        <trans-unit id="143031e8953811a9c3a88c79798b24e0a425cc95" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s a method, it should take one argument &amp;ndash; an object as returned by &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.items&quot;&gt;&lt;code&gt;items()&lt;/code&gt;&lt;/a&gt; &amp;ndash; and return that object&amp;rsquo;s change frequency as a string.</source>
          <target state="translated">如果是方法，则应使用一个参数-由&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.items&quot;&gt; &lt;code&gt;items()&lt;/code&gt; &lt;/a&gt;返回的对象-并将该对象的更改频率作为字符串返回。</target>
        </trans-unit>
        <trans-unit id="7bff00a78b519ed7c413fef5001b2e654dfd2b69" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s a method, it should take one argument &amp;ndash; an object as returned by &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.items&quot;&gt;&lt;code&gt;items()&lt;/code&gt;&lt;/a&gt; &amp;ndash; and return that object&amp;rsquo;s last-modified date/time as a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果是方法，则应使用一个参数-由&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.items&quot;&gt; &lt;code&gt;items()&lt;/code&gt; &lt;/a&gt;返回的对象-并将该对象的上次修改日期/时间作为&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; 返回&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="32fb347ef452af06b7d9684d9471b5bc24024f2b" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s a method, it should take one argument &amp;ndash; an object as returned by &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.items&quot;&gt;&lt;code&gt;items()&lt;/code&gt;&lt;/a&gt; &amp;ndash; and return that object&amp;rsquo;s priority as either a string or float.</source>
          <target state="translated">如果是方法，则应使用一个参数-由&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.items&quot;&gt; &lt;code&gt;items()&lt;/code&gt; &lt;/a&gt;返回的对象-并以字符串或浮点数形式返回该对象的优先级。</target>
        </trans-unit>
        <trans-unit id="15ba45a5043f7358b844c8ea9113c7ba3ec3b8db" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s an application configuration class, Django imports the root package of the application, defined by its &lt;a href=&quot;#django.apps.AppConfig.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; attribute. If it&amp;rsquo;s a Python package, Django creates a default application configuration.</source>
          <target state="translated">如果是应用程序配置类，则Django会导入应用程序的根包，该根包由其&lt;a href=&quot;#django.apps.AppConfig.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;属性定义。如果是Python软件包，则Django将创建默认的应用程序配置。</target>
        </trans-unit>
        <trans-unit id="739a813bcb6932652d7c4c0f099220e51e22f92e" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s an attribute, its value should be a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; representing the last-modified date/time for &lt;em&gt;every&lt;/em&gt; object returned by &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.items&quot;&gt;&lt;code&gt;items()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果它是一个属性，则它的值应该是一个&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;，它表示&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.items&quot;&gt; &lt;code&gt;items()&lt;/code&gt; &lt;/a&gt;返回的&lt;em&gt;每个&lt;/em&gt;对象的最后修改日期/时间。</target>
        </trans-unit>
        <trans-unit id="15ad29af32202e8f80e7637ce9fea9eb2c04bb2b" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s an attribute, its value should be a string representing an absolute path to use for &lt;em&gt;every&lt;/em&gt; object returned by &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.items&quot;&gt;&lt;code&gt;items()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果它是一个属性，则其值应该是一个字符串，该字符串表示要用于由&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.items&quot;&gt; &lt;code&gt;items()&lt;/code&gt; &lt;/a&gt;返回的&lt;em&gt;每个&lt;/em&gt;对象的绝对路径。</target>
        </trans-unit>
        <trans-unit id="1ddf41b0a9d07a449a358d682fe7947578779914" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s an attribute, its value should be a string representing the change frequency of &lt;em&gt;every&lt;/em&gt; object returned by &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.items&quot;&gt;&lt;code&gt;items()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果它是一个属性，则其值应该是一个字符串，表示由&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.items&quot;&gt; &lt;code&gt;items()&lt;/code&gt; &lt;/a&gt;返回的&lt;em&gt;每个&lt;/em&gt;对象的更改频率。</target>
        </trans-unit>
        <trans-unit id="7ee4f35fc601d54876905bd051b2469f621200e6" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s an attribute, its value should be either a string or float representing the priority of &lt;em&gt;every&lt;/em&gt; object returned by &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.items&quot;&gt;&lt;code&gt;items()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果它是一个属性，则其值应为字符串或float，代表由&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.items&quot;&gt; &lt;code&gt;items()&lt;/code&gt; &lt;/a&gt;返回的&lt;em&gt;每个&lt;/em&gt;对象的优先级。</target>
        </trans-unit>
        <trans-unit id="45346a65597fa89f0720e560f69fecf7ee17793a" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s defined, it&amp;rsquo;s the dotted path to the &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; subclass for that application.</source>
          <target state="translated">如果已定义，则为该应用程序的&lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt;子类的虚线路径。</target>
        </trans-unit>
        <trans-unit id="586dfd2621f54a7ad40e50477dfcdfaa75815200" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s your first time doing an upgrade, it is useful to read the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/release-process/&quot;&gt;guide on the different release processes&lt;/a&gt;.</source>
          <target state="translated">如果您是第一次进行升级，那么阅读&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/release-process/&quot;&gt;有关不同发行流程&lt;/a&gt;的指南会很有用。</target>
        </trans-unit>
        <trans-unit id="e13b8f81222ab1aac3ae1278eea9ad8e5f0607b1" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s your first time doing an upgrade, it is useful to read the &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/release-process/&quot;&gt;guide on the different release processes&lt;/a&gt;.</source>
          <target state="translated">如果您是第一次升级，请阅读&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/release-process/&quot;&gt;有关不同发行流程&lt;/a&gt;的指南，这很有用。</target>
        </trans-unit>
        <trans-unit id="48ee40c99146090e779f852245b5afb888e00a5e" translate="yes" xml:space="preserve">
          <source>If loading a template fails, the following two exceptions, defined in &lt;code&gt;django.template&lt;/code&gt;, may be raised:</source>
          <target state="translated">如果加载模板失败，则可能会引发 &lt;code&gt;django.template&lt;/code&gt; 中定义的以下两个异常：</target>
        </trans-unit>
        <trans-unit id="d4d46c7886d2254cf93d3e3fcccd7a0f4bcf2dcc" translate="yes" xml:space="preserve">
          <source>If localized URLs get reversed in templates they always use the current language. To link to a URL in another language use the &lt;a href=&quot;#std:templatetag-language&quot;&gt;&lt;code&gt;language&lt;/code&gt;&lt;/a&gt; template tag. It enables the given language in the enclosed template section:</source>
          <target state="translated">如果本地化的URL在模板中被反转，它们将始终使用当前语言。要链接到另一种语言的URL，请使用&lt;a href=&quot;#std:templatetag-language&quot;&gt; &lt;code&gt;language&lt;/code&gt; &lt;/a&gt;模板标记。它在随附的模板部分中启用给定的语言：</target>
        </trans-unit>
        <trans-unit id="5b07bb0f1712469af9863f3a275491ca48434fc9" translate="yes" xml:space="preserve">
          <source>If many fields need to be duplicated in the unmanaged model, it may be best to create an abstract model with the shared fields and then have the unmanaged and managed models inherit from the abstract model.</source>
          <target state="translated">如果很多字段需要在非托管模型中重复,最好的办法是创建一个共享字段的抽象模型,然后让非托管模型和托管模型从抽象模型中继承。</target>
        </trans-unit>
        <trans-unit id="5117892f8f0300c66daa9628a86ea40e1e0c377f" translate="yes" xml:space="preserve">
          <source>If multiple Django sites are run in a single mod_wsgi process, all of them will use the settings of whichever one happens to run first. This can be solved by changing:</source>
          <target state="translated">如果多个Django站点在一个mod_wsgi进程中运行,所有站点都会使用最先运行的站点的设置。这个问题可以通过修改</target>
        </trans-unit>
        <trans-unit id="fea1c8c9bb79ccbb6aa26063b6ab36dc99df0518" translate="yes" xml:space="preserve">
          <source>If multiple objects are found, &lt;code&gt;get_or_create()&lt;/code&gt; raises &lt;a href=&quot;../exceptions#django.core.exceptions.MultipleObjectsReturned&quot;&gt;&lt;code&gt;MultipleObjectsReturned&lt;/code&gt;&lt;/a&gt;. If an object is &lt;em&gt;not&lt;/em&gt; found, &lt;code&gt;get_or_create()&lt;/code&gt; will instantiate and save a new object, returning a tuple of the new object and &lt;code&gt;True&lt;/code&gt;. The new object will be created roughly according to this algorithm:</source>
          <target state="translated">如果找到多个对象，则 &lt;code&gt;get_or_create()&lt;/code&gt; 引发&lt;a href=&quot;../exceptions#django.core.exceptions.MultipleObjectsReturned&quot;&gt; &lt;code&gt;MultipleObjectsReturned&lt;/code&gt; &lt;/a&gt;。如果&lt;em&gt;未&lt;/em&gt;找到对象，则 &lt;code&gt;get_or_create()&lt;/code&gt; 将实例化并保存一个新对象，并返回新对象和 &lt;code&gt;True&lt;/code&gt; 的元组。将大致根据以下算法创建新对象：</target>
        </trans-unit>
        <trans-unit id="1e71877ad6a5d25c689b1f2de0070e7265bd4937" translate="yes" xml:space="preserve">
          <source>If necessary, set &lt;a href=&quot;../ref/settings#std:setting-SECURE_PROXY_SSL_HEADER&quot;&gt;&lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt;&lt;/a&gt;, ensuring that you have understood the warnings there thoroughly. Failure to do this can result in CSRF vulnerabilities, and failure to do it correctly can also be dangerous!</source>
          <target state="translated">如有必要，请设置&lt;a href=&quot;../ref/settings#std:setting-SECURE_PROXY_SSL_HEADER&quot;&gt; &lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt; &lt;/a&gt;，以确保您已完全了解警告内容。否则可能会导致CSRF漏洞，并且如果未能正确正确执行，也将很危险！</target>
        </trans-unit>
        <trans-unit id="03ba143e9f631d05f6ba22f0590ce7f747ce8328" translate="yes" xml:space="preserve">
          <source>If neither &lt;code&gt;fields&lt;/code&gt; nor &lt;a href=&quot;#django.contrib.admin.ModelAdmin.fieldsets&quot;&gt;&lt;code&gt;fieldsets&lt;/code&gt;&lt;/a&gt; options are present, Django will default to displaying each field that isn&amp;rsquo;t an &lt;code&gt;AutoField&lt;/code&gt; and has &lt;code&gt;editable=True&lt;/code&gt;, in a single fieldset, in the same order as the fields are defined in the model.</source>
          <target state="translated">如果既没有 &lt;code&gt;fields&lt;/code&gt; 也没有&lt;a href=&quot;#django.contrib.admin.ModelAdmin.fieldsets&quot;&gt; &lt;code&gt;fieldsets&lt;/code&gt; &lt;/a&gt;选项，则Django将默认在单个字段集中以与模型中定义的字段相同的顺序显示不是 &lt;code&gt;AutoField&lt;/code&gt; 且具有 &lt;code&gt;editable=True&lt;/code&gt; 的每个字段。</target>
        </trans-unit>
        <trans-unit id="d162507e2b28cb230355fa270db138b42135ea87" translate="yes" xml:space="preserve">
          <source>If neither &lt;code&gt;fieldsets&lt;/code&gt; nor &lt;a href=&quot;#django.contrib.admin.ModelAdmin.fields&quot;&gt;&lt;code&gt;fields&lt;/code&gt;&lt;/a&gt; options are present, Django will default to displaying each field that isn&amp;rsquo;t an &lt;code&gt;AutoField&lt;/code&gt; and has &lt;code&gt;editable=True&lt;/code&gt;, in a single fieldset, in the same order as the fields are defined in the model.</source>
          <target state="translated">如果既没有 &lt;code&gt;fieldsets&lt;/code&gt; 也没有&lt;a href=&quot;#django.contrib.admin.ModelAdmin.fields&quot;&gt; &lt;code&gt;fields&lt;/code&gt; &lt;/a&gt;选项，则Django将默认在单个fieldset中显示不是 &lt;code&gt;AutoField&lt;/code&gt; 且具有 &lt;code&gt;editable=True&lt;/code&gt; 的每个字段，其顺序与模型中定义的字段相同。</target>
        </trans-unit>
        <trans-unit id="e9c8ddd198190a9c557ddc6bb9c2aea2a2e1d698" translate="yes" xml:space="preserve">
          <source>If neither of these conditions is met, Django will raise &lt;a href=&quot;exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt;&lt;code&gt;ImproperlyConfigured&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果这两个条件都不满足，则Django将引发&lt;a href=&quot;exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt; &lt;code&gt;ImproperlyConfigured&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="22236fab6abdd3c57ac49f8258f85828d58d41a1" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;format&lt;/code&gt; argument is provided, the default format is the first format found in &lt;a href=&quot;../settings#std:setting-DATETIME_INPUT_FORMATS&quot;&gt;&lt;code&gt;DATETIME_INPUT_FORMATS&lt;/code&gt;&lt;/a&gt; and respects &lt;a href=&quot;../../topics/i18n/formatting&quot;&gt;Format localization&lt;/a&gt;.</source>
          <target state="translated">如果未提供 &lt;code&gt;format&lt;/code&gt; 参数，则默认格式是&lt;a href=&quot;../settings#std:setting-DATETIME_INPUT_FORMATS&quot;&gt; &lt;code&gt;DATETIME_INPUT_FORMATS&lt;/code&gt; 中&lt;/a&gt;找到的第一种格式，并且遵循&lt;a href=&quot;../../topics/i18n/formatting&quot;&gt;Format localization&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="69f074f3a84e1657dd8a12d9aa961a2df4985580" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;format&lt;/code&gt; argument is provided, the default format is the first format found in &lt;a href=&quot;../settings#std:setting-DATE_INPUT_FORMATS&quot;&gt;&lt;code&gt;DATE_INPUT_FORMATS&lt;/code&gt;&lt;/a&gt; and respects &lt;a href=&quot;../../topics/i18n/formatting&quot;&gt;Format localization&lt;/a&gt;.</source>
          <target state="translated">如果未提供 &lt;code&gt;format&lt;/code&gt; 参数，则默认格式是&lt;a href=&quot;../settings#std:setting-DATE_INPUT_FORMATS&quot;&gt; &lt;code&gt;DATE_INPUT_FORMATS&lt;/code&gt; 中&lt;/a&gt;找到的第一种格式，并且遵循&lt;a href=&quot;../../topics/i18n/formatting&quot;&gt;Format localization&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="651012be4ff2b148ba9354acdae062b14fd3c0d9" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;format&lt;/code&gt; argument is provided, the default format is the first format found in &lt;a href=&quot;../settings#std:setting-TIME_INPUT_FORMATS&quot;&gt;&lt;code&gt;TIME_INPUT_FORMATS&lt;/code&gt;&lt;/a&gt; and respects &lt;a href=&quot;../../topics/i18n/formatting&quot;&gt;Format localization&lt;/a&gt;.</source>
          <target state="translated">如果未提供 &lt;code&gt;format&lt;/code&gt; 参数，则默认格式是&lt;a href=&quot;../settings#std:setting-TIME_INPUT_FORMATS&quot;&gt; &lt;code&gt;TIME_INPUT_FORMATS&lt;/code&gt; 中&lt;/a&gt;找到的第一种格式，并且遵循&lt;a href=&quot;../../topics/i18n/formatting&quot;&gt;Format localization&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="880370f7f114c5c060d3bd42e86cd83d71f53766" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;input_date_formats&lt;/code&gt; argument is provided, the default input formats for &lt;a href=&quot;#django.forms.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt; are used.</source>
          <target state="translated">如果未提供 &lt;code&gt;input_date_formats&lt;/code&gt; 参数，则使用&lt;a href=&quot;#django.forms.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt;的默认输入格式。</target>
        </trans-unit>
        <trans-unit id="5e0a4ac71f22fa55f33f4c53815cc761110373fd" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;input_formats&lt;/code&gt; argument is provided, the default input formats are taken from &lt;a href=&quot;../settings#std:setting-DATETIME_INPUT_FORMATS&quot;&gt;&lt;code&gt;DATETIME_INPUT_FORMATS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../settings#std:setting-DATE_INPUT_FORMATS&quot;&gt;&lt;code&gt;DATE_INPUT_FORMATS&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;../settings#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;, or from the active locale format &lt;code&gt;DATETIME_INPUT_FORMATS&lt;/code&gt; and &lt;code&gt;DATE_INPUT_FORMATS&lt;/code&gt; keys if localization is enabled. See also &lt;a href=&quot;../../topics/i18n/formatting&quot;&gt;format localization&lt;/a&gt;.</source>
          <target state="translated">如果未提供 &lt;code&gt;input_formats&lt;/code&gt; 参数，则如果&lt;a href=&quot;../settings#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;False&lt;/code&gt; ，则从&lt;a href=&quot;../settings#std:setting-DATETIME_INPUT_FORMATS&quot;&gt; &lt;code&gt;DATETIME_INPUT_FORMATS&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../settings#std:setting-DATE_INPUT_FORMATS&quot;&gt; &lt;code&gt;DATE_INPUT_FORMATS&lt;/code&gt; &lt;/a&gt;中获取默认输入格式，如果启用了本地化， &lt;code&gt;DATE_INPUT_FORMATS&lt;/code&gt; 活动语言环境格式 &lt;code&gt;DATETIME_INPUT_FORMATS&lt;/code&gt; 和DATE_INPUT_FORMATS中获取默认输入格式。另请参阅&lt;a href=&quot;../../topics/i18n/formatting&quot;&gt;格式本地化&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="53192b0b6262194bcbc96fe1b2f7da606c0cca2b" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;input_formats&lt;/code&gt; argument is provided, the default input formats are taken from &lt;a href=&quot;../settings#std:setting-DATETIME_INPUT_FORMATS&quot;&gt;&lt;code&gt;DATETIME_INPUT_FORMATS&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;../settings#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;, or from the active locale format &lt;code&gt;DATETIME_INPUT_FORMATS&lt;/code&gt; key if localization is enabled. See also &lt;a href=&quot;../../topics/i18n/formatting&quot;&gt;format localization&lt;/a&gt;.</source>
          <target state="translated">如果未提供 &lt;code&gt;input_formats&lt;/code&gt; 参数，则如果&lt;a href=&quot;../settings#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;False&lt;/code&gt; ，则从&lt;a href=&quot;../settings#std:setting-DATETIME_INPUT_FORMATS&quot;&gt; &lt;code&gt;DATETIME_INPUT_FORMATS&lt;/code&gt; &lt;/a&gt;取默认输入格式；如果启用了本地化，则取自活动的语言环境格式 &lt;code&gt;DATETIME_INPUT_FORMATS&lt;/code&gt; 键。另请参阅&lt;a href=&quot;../../topics/i18n/formatting&quot;&gt;格式本地化&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e218ec7444929cf5f907333d683042a1a250dec0" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;input_formats&lt;/code&gt; argument is provided, the default input formats are taken from &lt;a href=&quot;../settings#std:setting-DATE_INPUT_FORMATS&quot;&gt;&lt;code&gt;DATE_INPUT_FORMATS&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;../settings#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;, or from the active locale format &lt;code&gt;DATE_INPUT_FORMATS&lt;/code&gt; key if localization is enabled. See also &lt;a href=&quot;../../topics/i18n/formatting&quot;&gt;format localization&lt;/a&gt;.</source>
          <target state="translated">如果未提供 &lt;code&gt;input_formats&lt;/code&gt; 参数，则如果&lt;a href=&quot;../settings#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;False&lt;/code&gt; ，则从&lt;a href=&quot;../settings#std:setting-DATE_INPUT_FORMATS&quot;&gt; &lt;code&gt;DATE_INPUT_FORMATS&lt;/code&gt; &lt;/a&gt;中获取默认输入格式；如果启用了本地化，则从活动语言环境格式 &lt;code&gt;DATE_INPUT_FORMATS&lt;/code&gt; 中获取默认输入格式。另请参阅&lt;a href=&quot;../../topics/i18n/formatting&quot;&gt;格式本地化&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="00ca1bfa89502aeb4be2cb7334f19db2fd371a1f" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;input_formats&lt;/code&gt; argument is provided, the default input formats are taken from &lt;a href=&quot;../settings#std:setting-TIME_INPUT_FORMATS&quot;&gt;&lt;code&gt;TIME_INPUT_FORMATS&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;../settings#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;, or from the active locale format &lt;code&gt;TIME_INPUT_FORMATS&lt;/code&gt; key if localization is enabled. See also &lt;a href=&quot;../../topics/i18n/formatting&quot;&gt;format localization&lt;/a&gt;.</source>
          <target state="translated">如果未提供 &lt;code&gt;input_formats&lt;/code&gt; 参数，则如果&lt;a href=&quot;../settings#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;False&lt;/code&gt; ，则从&lt;a href=&quot;../settings#std:setting-TIME_INPUT_FORMATS&quot;&gt; &lt;code&gt;TIME_INPUT_FORMATS&lt;/code&gt; &lt;/a&gt;中获取默认输入格式；如果启用了本地化，则从活动语言环境格式 &lt;code&gt;TIME_INPUT_FORMATS&lt;/code&gt; 中获取默认输入格式。另请参阅&lt;a href=&quot;../../topics/i18n/formatting&quot;&gt;格式本地化&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="deb75c2ac702a4b0a40f6bcf697ba548571a7947" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;input_time_formats&lt;/code&gt; argument is provided, the default input formats for &lt;a href=&quot;#django.forms.TimeField&quot;&gt;&lt;code&gt;TimeField&lt;/code&gt;&lt;/a&gt; are used.</source>
          <target state="translated">如果未提供 &lt;code&gt;input_time_formats&lt;/code&gt; 参数，则使用&lt;a href=&quot;#django.forms.TimeField&quot;&gt; &lt;code&gt;TimeField&lt;/code&gt; &lt;/a&gt;的默认输入格式。</target>
        </trans-unit>
        <trans-unit id="e2eabcd7b412af2312e2abb94cd9bbfac179ea3d" translate="yes" xml:space="preserve">
          <source>If no URL pattern matches, or if an exception is raised during any point in this process, Django invokes an appropriate error-handling view. See &lt;a href=&quot;#error-handling&quot;&gt;Error handling&lt;/a&gt; below.</source>
          <target state="translated">如果没有任何URL模式匹配，或者在此过程中的任何时候引发了异常，则Django都会调用相应的错误处理视图。请参阅下面的&lt;a href=&quot;#error-handling&quot;&gt;错误处理&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b48d608444a7be435d54c631af2c36c0e71eb05b" translate="yes" xml:space="preserve">
          <source>If no application name is provided, all installed applications will be dumped.</source>
          <target state="translated">如果没有提供应用程序名称,所有安装的应用程序将被转储。</target>
        </trans-unit>
        <trans-unit id="3be3b978e15bd33854b5175c0738a463b9bbdadd" translate="yes" xml:space="preserve">
          <source>If no exception occurred, then &lt;code&gt;exc_info&lt;/code&gt; will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">如果没有发生异常，那么 &lt;code&gt;exc_info&lt;/code&gt; 将为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="230449ebf8fd8f983b73d29fe0abb4963a58e26e" translate="yes" xml:space="preserve">
          <source>If no managers are declared on a model and/or its parents, Django automatically creates the &lt;code&gt;objects&lt;/code&gt; manager.</source>
          <target state="translated">如果没有在模型和/或其父上声明任何管理器，则Django会自动创建 &lt;code&gt;objects&lt;/code&gt; 管理器。</target>
        </trans-unit>
        <trans-unit id="90268d13885a180cdb68972e2680aa7e5ca9a536" translate="yes" xml:space="preserve">
          <source>If no match can be made, &lt;code&gt;reverse()&lt;/code&gt; raises a &lt;a href=&quot;exceptions#django.urls.NoReverseMatch&quot;&gt;&lt;code&gt;NoReverseMatch&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">如果无法进行匹配，则 &lt;code&gt;reverse()&lt;/code&gt; 会引发&lt;a href=&quot;exceptions#django.urls.NoReverseMatch&quot;&gt; &lt;code&gt;NoReverseMatch&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="fd524aa004b3f27870b580c048596af0b132e7e1" translate="yes" xml:space="preserve">
          <source>If no object has been assigned to this relationship, Django will raise a &lt;code&gt;DoesNotExist&lt;/code&gt; exception.</source>
          <target state="translated">如果尚未为该关系分配任何对象，则Django将引发 &lt;code&gt;DoesNotExist&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="e5e7bac3ef346bb21109fb7f48b276715fbf7e3b" translate="yes" xml:space="preserve">
          <source>If no password is provided, &lt;a href=&quot;#django.contrib.auth.models.User.set_unusable_password&quot;&gt;&lt;code&gt;set_unusable_password()&lt;/code&gt;&lt;/a&gt; will be called.</source>
          <target state="translated">如果未提供密码，&lt;a href=&quot;#django.contrib.auth.models.User.set_unusable_password&quot;&gt; &lt;code&gt;set_unusable_password()&lt;/code&gt; &lt;/a&gt;调用set_unusable_password（）。</target>
        </trans-unit>
        <trans-unit id="f2a94519d41f60e01c2bb67dfbc966d83d787abe" translate="yes" xml:space="preserve">
          <source>If no router has an opinion (i.e. all routers return &lt;code&gt;None&lt;/code&gt;), only relations within the same database are allowed.</source>
          <target state="translated">如果没有路由器有意见（即所有路由器都返回 &lt;code&gt;None&lt;/code&gt; ），则仅允许同一数据库内的关系。</target>
        </trans-unit>
        <trans-unit id="8d6ba29a42ab8732ea2bac1f574258bf97584d1c" translate="yes" xml:space="preserve">
          <source>If not &lt;code&gt;None&lt;/code&gt;, this will be used as the base path for &lt;a href=&quot;../topics/forms/media#form-asset-paths&quot;&gt;asset definitions&lt;/a&gt; (the &lt;code&gt;Media&lt;/code&gt; class) and the &lt;a href=&quot;contrib/staticfiles&quot;&gt;staticfiles app&lt;/a&gt;.</source>
          <target state="translated">如果不是 &lt;code&gt;None&lt;/code&gt; ，它将用作&lt;a href=&quot;../topics/forms/media#form-asset-paths&quot;&gt;资产定义&lt;/a&gt;（ &lt;code&gt;Media&lt;/code&gt; 类）和&lt;a href=&quot;contrib/staticfiles&quot;&gt;staticfiles app&lt;/a&gt;的基本路径。</target>
        </trans-unit>
        <trans-unit id="61421a068661ad515ad52948781a5d81bcd78c50" translate="yes" xml:space="preserve">
          <source>If not &lt;code&gt;None&lt;/code&gt;, this will be used as the value of the &lt;code&gt;SCRIPT_NAME&lt;/code&gt; environment variable in any HTTP request. This setting can be used to override the server-provided value of &lt;code&gt;SCRIPT_NAME&lt;/code&gt;, which may be a rewritten version of the preferred value or not supplied at all. It is also used by &lt;a href=&quot;applications#django.setup&quot;&gt;&lt;code&gt;django.setup()&lt;/code&gt;&lt;/a&gt; to set the URL resolver script prefix outside of the request/response cycle (e.g. in management commands and standalone scripts) to generate correct URLs when &lt;code&gt;SCRIPT_NAME&lt;/code&gt; is not &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">如果不是 &lt;code&gt;None&lt;/code&gt; ，它将在任何HTTP请求中用作 &lt;code&gt;SCRIPT_NAME&lt;/code&gt; 环境变量的值。此设置可用于覆盖服务器提供的 &lt;code&gt;SCRIPT_NAME&lt;/code&gt; 值，该值可能是首选值的重写版本或根本没有提供。&lt;a href=&quot;applications#django.setup&quot;&gt; &lt;code&gt;django.setup()&lt;/code&gt; &lt;/a&gt;也使用它在请求/响应周期之外（例如，在管理命令和独立脚本中）设置URL解析器脚本前缀，以在 &lt;code&gt;SCRIPT_NAME&lt;/code&gt; 不是 &lt;code&gt;/&lt;/code&gt; 时生成正确的URL 。</target>
        </trans-unit>
        <trans-unit id="29ae695d6cfe529eb5e8578f78625de3958c1363" translate="yes" xml:space="preserve">
          <source>If not provided, the &amp;lsquo;/&amp;rsquo; character is assumed safe. An empty string can be provided when &lt;em&gt;all&lt;/em&gt; characters should be escaped. For example:</source>
          <target state="translated">如果未提供，则假定'/'字符为安全字符。当&lt;em&gt;所有&lt;/em&gt;字符都应转义时，可以提供一个空字符串。例如：</target>
        </trans-unit>
        <trans-unit id="048ec96d38efe8c12dfb083658d8404651c7e75b" translate="yes" xml:space="preserve">
          <source>If not set, the return value of &lt;code&gt;django.core.wsgi.get_wsgi_application()&lt;/code&gt; will be used. In this case, the behavior of &lt;a href=&quot;django-admin#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; will be identical to previous Django versions.</source>
          <target state="translated">如果未设置，将使用 &lt;code&gt;django.core.wsgi.get_wsgi_application()&lt;/code&gt; 的返回值。在这种情况下，&lt;a href=&quot;django-admin#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; &lt;/a&gt;的行为将与以前的Django版本相同。</target>
        </trans-unit>
        <trans-unit id="0bcd2319885f70c975b7765a16711af57eab9baa" translate="yes" xml:space="preserve">
          <source>If one of the existing model fields cannot be used to fit your purposes, or if you wish to take advantage of some less common database column types, you can create your own field class. Full coverage of creating your own fields is provided in &lt;a href=&quot;../../howto/custom-model-fields&quot;&gt;Writing custom model fields&lt;/a&gt;.</source>
          <target state="translated">如果现有模型字段之一不能用于满足您的目的，或者您希望利用一些不太常见的数据库列类型，则可以创建自己的字段类。&lt;a href=&quot;../../howto/custom-model-fields&quot;&gt;编写自定义模型字段中&lt;/a&gt;提供了有关创建自己的字段的完整介绍。</target>
        </trans-unit>
        <trans-unit id="ec78108394b7b984ffd4c8ac9c00c3ab09c32865" translate="yes" xml:space="preserve">
          <source>If one of the instances is current - say, if we were rendering the detail page in the instance &lt;code&gt;'author-polls'&lt;/code&gt; - &lt;code&gt;'polls:index'&lt;/code&gt; will resolve to the index page of the &lt;code&gt;'author-polls'&lt;/code&gt; instance; i.e. both of the following will result in &lt;code&gt;&quot;/author-polls/&quot;&lt;/code&gt;.</source>
          <target state="translated">如果其中一个实例就是当前-比方说，如果我们渲染的详细信息页面的情况下 &lt;code&gt;'author-polls'&lt;/code&gt; - &lt;code&gt;'polls:index'&lt;/code&gt; 将解析到的索引页 &lt;code&gt;'author-polls'&lt;/code&gt; 实例; 即以下两个都将导致 &lt;code&gt;&quot;/author-polls/&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a7628010548cc467431f476a0dd2aede2b28e62" translate="yes" xml:space="preserve">
          <source>If one of the layers decides to short-circuit and return a response without ever calling its &lt;code&gt;get_response&lt;/code&gt;, none of the layers of the onion inside that layer (including the view) will see the request or the response. The response will only return through the same layers that the request passed in through.</source>
          <target state="translated">如果其中一层决定在不调用 &lt;code&gt;get_response&lt;/code&gt; 的情况下短路并返回响应，则该层内的洋葱层（包括视图）都不会看到请求或响应。响应将仅返回与请求通过的相同层。</target>
        </trans-unit>
        <trans-unit id="5f7fc56d57619fe006603eedffe2bc29e42343d8" translate="yes" xml:space="preserve">
          <source>If one of your views receives an &lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; object with &lt;a href=&quot;../ref/request-response#django.http.HttpRequest.POST&quot;&gt;&lt;code&gt;POST parameters&lt;/code&gt;&lt;/a&gt; susceptible to contain sensitive information, you may prevent the values of those parameters from being included in the error reports using the &lt;code&gt;sensitive_post_parameters&lt;/code&gt; decorator:</source>
          <target state="translated">如果您的一个视图接收到带有&lt;a href=&quot;../ref/request-response#django.http.HttpRequest.POST&quot;&gt; &lt;code&gt;POST parameters&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;对象，该对象很容易包含敏感信息，则可以使用 &lt;code&gt;sensitive_post_parameters&lt;/code&gt; 装饰器防止这些参数的值包含在错误报告中：</target>
        </trans-unit>
        <trans-unit id="b6842ad1704a4bfe27e663a65a75745b7e53e8d7" translate="yes" xml:space="preserve">
          <source>If one on-commit function within a given transaction raises an uncaught exception, no later registered functions in that same transaction will run. This is the same behavior as if you&amp;rsquo;d executed the functions sequentially yourself without &lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt;&lt;code&gt;on_commit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果给定事务中的一个on-commit函数引发未捕获的异常，则该同一事务中以后没有注册的函数将不会运行。这与没有&lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt; &lt;code&gt;on_commit()&lt;/code&gt; &lt;/a&gt;自己顺序执行函数的行为相同。</target>
        </trans-unit>
        <trans-unit id="fcff0878219423167c0e066e172d3008301e3e9b" translate="yes" xml:space="preserve">
          <source>If one on-commit function within a given transaction raises an uncaught exception, no later registered functions in that same transaction will run. This is, of course, the same behavior as if you&amp;rsquo;d executed the functions sequentially yourself without &lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt;&lt;code&gt;on_commit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果给定事务中的一个on-commit函数引发未捕获的异常，则该同一事务中以后的已注册函数都不会运行。当然，这与没有&lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt; &lt;code&gt;on_commit()&lt;/code&gt; &lt;/a&gt;自己顺序执行函数的行为相同。</target>
        </trans-unit>
        <trans-unit id="9c159979e36f022ea0dfa4ec34adbe09e0fd50d6" translate="yes" xml:space="preserve">
          <source>If only one key or index is used, the SQL operator &lt;code&gt;-&amp;gt;&lt;/code&gt; is used. If multiple operators are used then the &lt;code&gt;#&amp;gt;&lt;/code&gt; operator is used.</source>
          <target state="translated">如果仅使用一个键或索引，则使用SQL运算符 &lt;code&gt;-&amp;gt;&lt;/code&gt; 。如果使用多个运算符，则使用 &lt;code&gt;#&amp;gt;&lt;/code&gt; 运算符。</target>
        </trans-unit>
        <trans-unit id="099c20d00ec2098bbaf3e804c844660386fd2250" translate="yes" xml:space="preserve">
          <source>If only the &lt;code&gt;expected_exception&lt;/code&gt; and &lt;code&gt;expected_message&lt;/code&gt; parameters are given, returns a context manager so that the code being tested can be written inline rather than as a function:</source>
          <target state="translated">如果仅给出了 &lt;code&gt;expected_exception&lt;/code&gt; 和 &lt;code&gt;expected_message&lt;/code&gt; 参数，则返回一个上下文管理器，以便可以内联而不是作为函数编写要测试的代码：</target>
        </trans-unit>
        <trans-unit id="35d8f324adb880bcc55735740ccdb17428c2eda0" translate="yes" xml:space="preserve">
          <source>If only the project name is given, both the project directory and project package will be named &lt;code&gt;&amp;lt;projectname&amp;gt;&lt;/code&gt; and the project directory will be created in the current working directory.</source>
          <target state="translated">如果仅给出项目名称，则项目目录和项目包都将被命名为 &lt;code&gt;&amp;lt;projectname&amp;gt;&lt;/code&gt; ，并且项目目录将在当前工作目录中创建。</target>
        </trans-unit>
        <trans-unit id="d699f3837e773c72f65299756ba17f8a6868e5e3" translate="yes" xml:space="preserve">
          <source>If overriding this method, you must call &lt;code&gt;super()&lt;/code&gt;.</source>
          <target state="translated">如果重写此方法，则必须调用 &lt;code&gt;super()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a92c12dfd56bfbe7079f0230ba9f2be3d91cfd1" translate="yes" xml:space="preserve">
          <source>If passed, the array will have a maximum size as specified. This will be passed to the database, although PostgreSQL at present does not enforce the restriction.</source>
          <target state="translated">如果通过,数组将有一个指定的最大大小。这将被传递给数据库,尽管PostgreSQL目前并没有强制执行这个限制。</target>
        </trans-unit>
        <trans-unit id="bbbac6dbe1f627e4d81d10293f0c6b4eac1b8f3e" translate="yes" xml:space="preserve">
          <source>If present for the field subclass, &lt;code&gt;from_db_value()&lt;/code&gt; will be called in all circumstances when the data is loaded from the database, including in aggregates and &lt;a href=&quot;../ref/models/querysets#django.db.models.query.QuerySet.values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">如果存在于字段子类中， &lt;code&gt;from_db_value()&lt;/code&gt; 数据库加载数据时，在所有情况下都将调用from_db_value（），包括聚集和&lt;a href=&quot;../ref/models/querysets#django.db.models.query.QuerySet.values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt;调用。</target>
        </trans-unit>
        <trans-unit id="5d46fb88e8ed76c60d72db1c27bf5a8f7b838cfa" translate="yes" xml:space="preserve">
          <source>If provided, these arguments ensure that the string is at most or at least the given length.</source>
          <target state="translated">如果提供了这些参数,这些参数确保字符串的长度最多或至少是给定的长度。</target>
        </trans-unit>
        <trans-unit id="d4ce7026faaa634fc0b96ac52163aab44216566a" translate="yes" xml:space="preserve">
          <source>If requested by &lt;a href=&quot;#django.views.generic.base.RedirectView.query_string&quot;&gt;&lt;code&gt;query_string&lt;/code&gt;&lt;/a&gt;, it will also append the query string to the generated URL. Subclasses may implement any behavior they wish, as long as the method returns a redirect-ready URL string.</source>
          <target state="translated">如果&lt;a href=&quot;#django.views.generic.base.RedirectView.query_string&quot;&gt; &lt;code&gt;query_string&lt;/code&gt; &lt;/a&gt;请求，它将查询字符串附加到生成的URL。子类可以实现其希望的任何行为，只要该方法返回可重定向的URL字符串即可。</target>
        </trans-unit>
        <trans-unit id="faf19452a1ebae56ddadfb9b942ecd374ffb45ac" translate="yes" xml:space="preserve">
          <source>If resolving one of the block arguments fails, &lt;code&gt;blocktrans&lt;/code&gt; will fall back to the default language by deactivating the currently active language temporarily with the &lt;a href=&quot;../../ref/utils#django.utils.translation.deactivate_all&quot;&gt;&lt;code&gt;deactivate_all()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">如果解析block参数之一失败， &lt;code&gt;blocktrans&lt;/code&gt; 将通过使用&lt;a href=&quot;../../ref/utils#django.utils.translation.deactivate_all&quot;&gt; &lt;code&gt;deactivate_all()&lt;/code&gt; &lt;/a&gt;函数暂时停用当前活动的语言来回退到默认语言。</target>
        </trans-unit>
        <trans-unit id="f03e776f8eb8cc5fcc0396d21e707a58bc675d8b" translate="yes" xml:space="preserve">
          <source>If resolving one of the block arguments fails, &lt;code&gt;blocktranslate&lt;/code&gt; will fall back to the default language by deactivating the currently active language temporarily with the &lt;a href=&quot;../../ref/utils#django.utils.translation.deactivate_all&quot;&gt;&lt;code&gt;deactivate_all()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">如果解析block参数之一失败， &lt;code&gt;blocktranslate&lt;/code&gt; 将通过使用&lt;a href=&quot;../../ref/utils#django.utils.translation.deactivate_all&quot;&gt; &lt;code&gt;deactivate_all()&lt;/code&gt; &lt;/a&gt;函数暂时停用当前激活的语言来回退到默认语言。</target>
        </trans-unit>
        <trans-unit id="e3b2b458927a860df9d6045447f0d0faf0b56f59" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;True&lt;/code&gt;, Django&amp;rsquo;s exception handling of view functions (&lt;a href=&quot;urls#django.conf.urls.handler500&quot;&gt;&lt;code&gt;handler500&lt;/code&gt;&lt;/a&gt;, or the debug view if &lt;a href=&quot;#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;) and logging of 500 responses (&lt;a href=&quot;../topics/logging#django-request-logger&quot;&gt;django.request&lt;/a&gt;) is skipped and exceptions propagate upwards.</source>
          <target state="translated">如果设置为 &lt;code&gt;True&lt;/code&gt; ，&lt;a href=&quot;urls#django.conf.urls.handler500&quot;&gt; &lt;code&gt;handler500&lt;/code&gt; &lt;/a&gt;视图功能的Django异常处理（handler500，如果&lt;a href=&quot;#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;True&lt;/code&gt; ，则为调试视图）和500个响应的记录（&lt;a href=&quot;../topics/logging#django-request-logger&quot;&gt;django.request&lt;/a&gt;）被跳过，并且异常向上传播。</target>
        </trans-unit>
        <trans-unit id="1e3988cd635b524ad4c3e4bb0d792a1a3fb38586" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;True&lt;/code&gt;, Oracle Managed Files (OMF) tablespaces will be used. &lt;a href=&quot;#std:setting-DATAFILE&quot;&gt;&lt;code&gt;DATAFILE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-DATAFILE_TMP&quot;&gt;&lt;code&gt;DATAFILE_TMP&lt;/code&gt;&lt;/a&gt; will be ignored.</source>
          <target state="translated">如果设置为 &lt;code&gt;True&lt;/code&gt; ，则将使用Oracle托管文件（OMF）表空间。&lt;a href=&quot;#std:setting-DATAFILE&quot;&gt; &lt;code&gt;DATAFILE&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#std:setting-DATAFILE_TMP&quot;&gt; &lt;code&gt;DATAFILE_TMP&lt;/code&gt; &lt;/a&gt;将被忽略。</target>
        </trans-unit>
        <trans-unit id="0701521850d9a195a77571e1f1a78268d2492816" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;True&lt;/code&gt;, the path data will be implemented in terms of relative moves. Defaults to &lt;code&gt;False&lt;/code&gt;, meaning that absolute moves are used instead.</source>
          <target state="translated">如果设置为 &lt;code&gt;True&lt;/code&gt; ，则将根据相对移动来实现路径数据。默认为 &lt;code&gt;False&lt;/code&gt; ，这意味着将使用绝对移动。</target>
        </trans-unit>
        <trans-unit id="b3b374206c1d9d7963bc92da925a698f9a26de10" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;True&lt;/code&gt;, this option will create a database column of type geography, rather than geometry. Please refer to the &lt;a href=&quot;#geography-type&quot;&gt;geography type&lt;/a&gt; section below for more details.</source>
          <target state="translated">如果设置为 &lt;code&gt;True&lt;/code&gt; ，则此选项将创建一个地理类型而不是几何类型的数据库列。有关更多详细信息，请参阅下面的&lt;a href=&quot;#geography-type&quot;&gt;地理位置类型&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="27d12549976cfe6d3d621899eab318195533bf4e" translate="yes" xml:space="preserve">
          <source>If set to a non-zero integer value, the &lt;a href=&quot;middleware#django.middleware.security.SecurityMiddleware&quot;&gt;&lt;code&gt;SecurityMiddleware&lt;/code&gt;&lt;/a&gt; sets the &lt;a href=&quot;middleware#http-strict-transport-security&quot;&gt;HTTP Strict Transport Security&lt;/a&gt; header on all responses that do not already have it.</source>
          <target state="translated">如果设置为非零整数值，则&lt;a href=&quot;middleware#django.middleware.security.SecurityMiddleware&quot;&gt; &lt;code&gt;SecurityMiddleware&lt;/code&gt; 会&lt;/a&gt;在所有尚未使用的&lt;a href=&quot;middleware#http-strict-transport-security&quot;&gt;HTTP严格&lt;/a&gt;响应上设置HTTP Strict Transport Security标头。</target>
        </trans-unit>
        <trans-unit id="a50b195fbd06b17894ee9502ef4702bb971ad749" translate="yes" xml:space="preserve">
          <source>If set with an integer, transactions will occur at every step interval. For example, if &lt;code&gt;step=1000&lt;/code&gt;, a commit would occur after the 1,000th feature, the 2,000th feature etc.</source>
          <target state="translated">如果设置为整数，则交易将在每个步骤间隔发生。例如，如果 &lt;code&gt;step=1000&lt;/code&gt; ，则将在第1,000个特征，第2,000个特征等之后进行提交。</target>
        </trans-unit>
        <trans-unit id="d8380b522d46fe516758e3f692cac2c3f0d5ddf0" translate="yes" xml:space="preserve">
          <source>If set, information will be printed subsequent to each model save executed on the database.</source>
          <target state="translated">如果设置,则数据库上每次执行模型保存后都会打印信息。</target>
        </trans-unit>
        <trans-unit id="c30cf6e77ab684eba085d96ac7acc4917b027312" translate="yes" xml:space="preserve">
          <source>If that command doesn&amp;rsquo;t raise any errors, the installation worked.</source>
          <target state="translated">如果该命令没有引发任何错误，则说明安装成功。</target>
        </trans-unit>
        <trans-unit id="f98d28bcb8810cfb8ae43b4092760e1122f40b81" translate="yes" xml:space="preserve">
          <source>If that hypothetical database write is instead rolled back (typically when an unhandled exception is raised in an &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; block), your function will be discarded and never called.</source>
          <target state="translated">如果反而回滚了假设的数据库写操作（通常是在&lt;a href=&quot;#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt;块中引发了未处理的异常时），则函数将被丢弃并且从不调用。</target>
        </trans-unit>
        <trans-unit id="e85862c30325f5a99e9a50173133105b8ad0fe04" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#django.contrib.gis.gdal.Layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt; has no spatial reference information associated with it, &lt;code&gt;None&lt;/code&gt; is returned.</source>
          <target state="translated">如果该&lt;a href=&quot;#django.contrib.gis.gdal.Layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;没有与之关联的空间参考信息，则不返回 &lt;code&gt;None&lt;/code&gt; 内容。</target>
        </trans-unit>
        <trans-unit id="b51b9193a32e07b19adea10866b60d16f80af212" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#django.template.response.SimpleTemplateResponse&quot;&gt;&lt;code&gt;SimpleTemplateResponse&lt;/code&gt;&lt;/a&gt; has already been rendered, the callback will be invoked immediately.</source>
          <target state="translated">如果&lt;a href=&quot;#django.template.response.SimpleTemplateResponse&quot;&gt; &lt;code&gt;SimpleTemplateResponse&lt;/code&gt; &lt;/a&gt;已经呈现，则回调将立即被调用。</target>
        </trans-unit>
        <trans-unit id="10740bab3147ec45ec0f050fa0c6500025482a05" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ModelFormMixin.model&quot;&gt;&lt;code&gt;model&lt;/code&gt;&lt;/a&gt; attribute is given, that model class will be used.</source>
          <target state="translated">如果指定了&lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ModelFormMixin.model&quot;&gt; &lt;code&gt;model&lt;/code&gt; &lt;/a&gt;属性，则将使用该模型类。</target>
        </trans-unit>
        <trans-unit id="8f5c4ba24e8b583b133b407fb7b8a2c07d70e77c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;contrib/staticfiles&quot;&gt;staticfiles&lt;/a&gt; contrib app is enabled (as in the default project template), the &lt;a href=&quot;contrib/staticfiles#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; management command will collect static files into this directory. See the how-to on &lt;a href=&quot;../howto/static-files/index&quot;&gt;managing static files&lt;/a&gt; for more details about usage.</source>
          <target state="translated">如果启用了&lt;a href=&quot;contrib/staticfiles&quot;&gt;staticfiles&lt;/a&gt; contrib应用程序（如在默认项目模板中一样），&lt;a href=&quot;contrib/staticfiles#django-admin-collectstatic&quot;&gt; &lt;code&gt;collectstatic&lt;/code&gt; &lt;/a&gt;管理命令会将静态文件收集到此目录中。有关使用的更多详细信息，请参见&lt;a href=&quot;../howto/static-files/index&quot;&gt;管理静态文件&lt;/a&gt;的方法。</target>
        </trans-unit>
        <trans-unit id="934af602cfac6348740d242482f234edb0625730" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;contrib/staticfiles&quot;&gt;staticfiles&lt;/a&gt; contrib app is enabled (default in new projects) the &lt;a href=&quot;#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; command will be overridden with its own &lt;a href=&quot;contrib/staticfiles#staticfiles-runserver&quot;&gt;runserver&lt;/a&gt; command.</source>
          <target state="translated">如果启用了&lt;a href=&quot;contrib/staticfiles&quot;&gt;staticfiles&lt;/a&gt; contrib应用程序（新项目中的默认设置），则&lt;a href=&quot;#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; &lt;/a&gt;命令将被其自己的&lt;a href=&quot;contrib/staticfiles#staticfiles-runserver&quot;&gt;runserver&lt;/a&gt;命令覆盖。</target>
        </trans-unit>
        <trans-unit id="8afc9a7ac5ef4d7727722e324647e67d5a1458d6" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;fields#django.forms.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt; is not required, &lt;a href=&quot;#django.forms.SelectDateWidget&quot;&gt;&lt;code&gt;SelectDateWidget&lt;/code&gt;&lt;/a&gt; will have an empty choice at the top of the list (which is &lt;code&gt;---&lt;/code&gt; by default). You can change the text of this label with the &lt;code&gt;empty_label&lt;/code&gt; attribute. &lt;code&gt;empty_label&lt;/code&gt; can be a &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, or &lt;code&gt;tuple&lt;/code&gt;. When a string is used, all select boxes will each have an empty choice with this label. If &lt;code&gt;empty_label&lt;/code&gt; is a &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;tuple&lt;/code&gt; of 3 string elements, the select boxes will have their own custom label. The labels should be in this order &lt;code&gt;('year_label', 'month_label', 'day_label')&lt;/code&gt;.</source>
          <target state="translated">如果不需要&lt;a href=&quot;fields#django.forms.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#django.forms.SelectDateWidget&quot;&gt; &lt;code&gt;SelectDateWidget&lt;/code&gt; &lt;/a&gt;将在列表顶部具有一个空选项（默认为 &lt;code&gt;---&lt;/code&gt; ）。您可以使用 &lt;code&gt;empty_label&lt;/code&gt; 属性更改此标签的文本。 &lt;code&gt;empty_label&lt;/code&gt; 可以是 &lt;code&gt;string&lt;/code&gt; ， &lt;code&gt;list&lt;/code&gt; 或 &lt;code&gt;tuple&lt;/code&gt; 。使用字符串时，所有选择框都将带有此标签的空选择。如果 &lt;code&gt;empty_label&lt;/code&gt; 是3个字符串元素的 &lt;code&gt;list&lt;/code&gt; 或 &lt;code&gt;tuple&lt;/code&gt; ，则选择框将具有其自己的自定义标签。标签应按此顺序排列 &lt;code&gt;('year_label', 'month_label', 'day_label')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa835231e8a9a83481dbf82598e20e9d33a8a3a3" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_DOMAIN&quot;&gt;&lt;code&gt;CSRF_COOKIE_DOMAIN&lt;/code&gt;&lt;/a&gt; setting is set, the referer is compared against it. This setting supports subdomains. For example, &lt;code&gt;CSRF_COOKIE_DOMAIN = '.example.com'&lt;/code&gt; will allow POST requests from &lt;code&gt;www.example.com&lt;/code&gt; and &lt;code&gt;api.example.com&lt;/code&gt;. If the setting is not set, then the referer must match the HTTP &lt;code&gt;Host&lt;/code&gt; header.</source>
          <target state="translated">如果设置了&lt;a href=&quot;settings#std:setting-CSRF_COOKIE_DOMAIN&quot;&gt; &lt;code&gt;CSRF_COOKIE_DOMAIN&lt;/code&gt; &lt;/a&gt;设置，则将参照者与其进行比较。此设置支持子域。例如， &lt;code&gt;CSRF_COOKIE_DOMAIN = '.example.com'&lt;/code&gt; 将允许来自 &lt;code&gt;www.example.com&lt;/code&gt; 和 &lt;code&gt;api.example.com&lt;/code&gt; 的 POST请求。如果未设置，则引用者必须与HTTP &lt;code&gt;Host&lt;/code&gt; 标头匹配。</target>
        </trans-unit>
        <trans-unit id="e6b97c7b65c9462ac600fe6db085a62642ec3eea" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_DOMAIN&quot;&gt;&lt;code&gt;CSRF_COOKIE_DOMAIN&lt;/code&gt;&lt;/a&gt; setting is set, the referer is compared against it. You can allow cross-subdomain requests by including a leading dot. For example, &lt;code&gt;CSRF_COOKIE_DOMAIN = '.example.com'&lt;/code&gt; will allow POST requests from &lt;code&gt;www.example.com&lt;/code&gt; and &lt;code&gt;api.example.com&lt;/code&gt;. If the setting is not set, then the referer must match the HTTP &lt;code&gt;Host&lt;/code&gt; header.</source>
          <target state="translated">如果设置了&lt;a href=&quot;settings#std:setting-CSRF_COOKIE_DOMAIN&quot;&gt; &lt;code&gt;CSRF_COOKIE_DOMAIN&lt;/code&gt; &lt;/a&gt;设置，则将参照与之进行比较。您可以通过添加前导点来允许跨子域请求。例如， &lt;code&gt;CSRF_COOKIE_DOMAIN = '.example.com'&lt;/code&gt; 将允许来自 &lt;code&gt;www.example.com&lt;/code&gt; 和 &lt;code&gt;api.example.com&lt;/code&gt; 的POST请求。如果未设置，则引用者必须与HTTP &lt;code&gt;Host&lt;/code&gt; 标头匹配。</target>
        </trans-unit>
        <trans-unit id="d84c6d34373dc24879682691c703f3d7f2efc49b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;settings#std:setting-SECURE_SSL_HOST&quot;&gt;&lt;code&gt;SECURE_SSL_HOST&lt;/code&gt;&lt;/a&gt; setting has a value, all redirects will be sent to that host instead of the originally-requested host.</source>
          <target state="translated">如果&lt;a href=&quot;settings#std:setting-SECURE_SSL_HOST&quot;&gt; &lt;code&gt;SECURE_SSL_HOST&lt;/code&gt; &lt;/a&gt;设置具有值，则所有重定向将发送到该主机，而不是原始请求的主机。</target>
        </trans-unit>
        <trans-unit id="5615de50081621591758a391687a80e665e2ccbd" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt;&lt;code&gt;csrf_token&lt;/code&gt;&lt;/a&gt; template tag is used by a template (or the &lt;code&gt;get_token&lt;/code&gt; function is called some other way), &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; will add a cookie and a &lt;code&gt;Vary: Cookie&lt;/code&gt; header to the response. This means that the middleware will play well with the cache middleware if it is used as instructed (&lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; goes before all other middleware).</source>
          <target state="translated">如果模板使用了&lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt; &lt;code&gt;csrf_token&lt;/code&gt; &lt;/a&gt;模板标签（或者以其他方式调用了 &lt;code&gt;get_token&lt;/code&gt; 函数），则 &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; 将向响应添加一个cookie和一个 &lt;code&gt;Vary: Cookie&lt;/code&gt; 头。这意味着，如果按照指示使用中间件，则它将与缓存中间件很好地配合使用（ &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; 在所有其他中间件之前）。</target>
        </trans-unit>
        <trans-unit id="26bd8d1320630840541b8d7d651b43b729598b95" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Content-Type&lt;/code&gt; header is not &lt;code&gt;&quot;application/json&quot;&lt;/code&gt;, then a &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised when trying to parse the response.</source>
          <target state="translated">如果 &lt;code&gt;Content-Type&lt;/code&gt; 标头不是 &lt;code&gt;&quot;application/json&quot;&lt;/code&gt; ，则在尝试解析响应时将引发&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2acff23ea5a5ddc3c288d900245bf1fb2834f32f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Host&lt;/code&gt; header (or &lt;code&gt;X-Forwarded-Host&lt;/code&gt; if &lt;a href=&quot;#std:setting-USE_X_FORWARDED_HOST&quot;&gt;&lt;code&gt;USE_X_FORWARDED_HOST&lt;/code&gt;&lt;/a&gt; is enabled) does not match any value in this list, the &lt;a href=&quot;request-response#django.http.HttpRequest.get_host&quot;&gt;&lt;code&gt;django.http.HttpRequest.get_host()&lt;/code&gt;&lt;/a&gt; method will raise &lt;a href=&quot;exceptions#django.core.exceptions.SuspiciousOperation&quot;&gt;&lt;code&gt;SuspiciousOperation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Host&lt;/code&gt; 标头（如果启用了&lt;a href=&quot;#std:setting-USE_X_FORWARDED_HOST&quot;&gt; &lt;code&gt;USE_X_FORWARDED_HOST&lt;/code&gt; ,&lt;/a&gt;则为 &lt;code&gt;X-Forwarded-Host&lt;/code&gt; ）与该列表中的任何值都不匹配，则&lt;a href=&quot;request-response#django.http.HttpRequest.get_host&quot;&gt; &lt;code&gt;django.http.HttpRequest.get_host()&lt;/code&gt; &lt;/a&gt;方法将引发&lt;a href=&quot;exceptions#django.core.exceptions.SuspiciousOperation&quot;&gt; &lt;code&gt;SuspiciousOperation&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c585a191597195f24d023a685c724097e584557" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ManyToManyField&lt;/code&gt; points from and to the same model, the following fields are generated:</source>
          <target state="translated">如果 &lt;code&gt;ManyToManyField&lt;/code&gt; 指向和指向同一模型，则将生成以下字段：</target>
        </trans-unit>
        <trans-unit id="7111fc374211946c06667dfde5bc62beeaef76cf" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ModelForm&lt;/code&gt; is only going to be used for the admin, the easiest solution is to omit the &lt;code&gt;Meta.model&lt;/code&gt; attribute, since &lt;code&gt;ModelAdmin&lt;/code&gt; will provide the correct model to use. Alternatively, you can set &lt;code&gt;fields = []&lt;/code&gt; in the &lt;code&gt;Meta&lt;/code&gt; class to satisfy the validation on the &lt;code&gt;ModelForm&lt;/code&gt;.</source>
          <target state="translated">如果仅将 &lt;code&gt;ModelForm&lt;/code&gt; 用于管理员，则最简单的解决方案是忽略 &lt;code&gt;Meta.model&lt;/code&gt; 属性，因为 &lt;code&gt;ModelAdmin&lt;/code&gt; 将提供要使用的正确模型。另外，您可以在 &lt;code&gt;Meta&lt;/code&gt; 类中设置 &lt;code&gt;fields = []&lt;/code&gt; 来满足对 &lt;code&gt;ModelForm&lt;/code&gt; 的验证。</target>
        </trans-unit>
        <trans-unit id="94e7c57e585e52b8e93039b8fb19e79e14bdd3e1" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;RunPython&lt;/code&gt; operation is part of a &lt;a href=&quot;../howto/writing-migrations#non-atomic-migrations&quot;&gt;non-atomic migration&lt;/a&gt;, the operation will only be executed in a transaction if &lt;code&gt;atomic=True&lt;/code&gt; is passed to the &lt;code&gt;RunPython&lt;/code&gt; operation.</source>
          <target state="translated">如果 &lt;code&gt;RunPython&lt;/code&gt; 操作&lt;a href=&quot;../howto/writing-migrations#non-atomic-migrations&quot;&gt;是非原子迁移的一部分&lt;/a&gt;，则只有在将 &lt;code&gt;atomic=True&lt;/code&gt; 传递给 &lt;code&gt;RunPython&lt;/code&gt; 操作时，该操作才会在事务中执行。</target>
        </trans-unit>
        <trans-unit id="31d01216ada1a5804e326038cd6eae0f674c8905" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;approximate&lt;/code&gt; argument is set to &lt;code&gt;True&lt;/code&gt;, the statistics may be computed based on overviews or a subset of image tiles.</source>
          <target state="translated">如果 &lt;code&gt;approximate&lt;/code&gt; 参数设置为 &lt;code&gt;True&lt;/code&gt; ，则可以基于概览或图像图块的子集来计算统计信息。</target>
        </trans-unit>
        <trans-unit id="92d7232ff3bb4953caa004d3cafc9ee9c491c11a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;clear()&lt;/code&gt; method is available, any pre-existing objects will be removed from the &lt;code&gt;entry_set&lt;/code&gt; before all objects in the iterable (in this case, a list) are added to the set. If the &lt;code&gt;clear()&lt;/code&gt; method is &lt;em&gt;not&lt;/em&gt; available, all objects in the iterable will be added without removing any existing elements.</source>
          <target state="translated">如果 &lt;code&gt;clear()&lt;/code&gt; 方法可用，则在将iterable中的所有对象（在这种情况下，为列表）添加到集合之前，所有先前存在的对象将从 &lt;code&gt;entry_set&lt;/code&gt; 中删除。如果 &lt;code&gt;clear()&lt;/code&gt; 方法&lt;em&gt;不可&lt;/em&gt;用，则将在不删除任何现有元素的情况下添加iterable中的所有对象。</target>
        </trans-unit>
        <trans-unit id="2297ffae582b0075c91fa434df47e635fa35db94" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;count&lt;/code&gt; integer argument is specified, then additionally the number of &lt;code&gt;needle&lt;/code&gt; occurrences will be strictly verified.</source>
          <target state="translated">如果指定了 &lt;code&gt;count&lt;/code&gt; integer参数，则另外将严格验证 &lt;code&gt;needle&lt;/code&gt; 出现的次数。</target>
        </trans-unit>
        <trans-unit id="a2e468dac67b430f87f8897eb4897a2b9f527f58" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;disable_existing_loggers&lt;/code&gt; key in the &lt;a href=&quot;../ref/settings#std:setting-LOGGING&quot;&gt;&lt;code&gt;LOGGING&lt;/code&gt;&lt;/a&gt; dictConfig is set to &lt;code&gt;True&lt;/code&gt; (which is the &lt;code&gt;dictConfig&lt;/code&gt; default if the key is missing) then all loggers from the default configuration will be disabled. Disabled loggers are not the same as removed; the logger will still exist, but will silently discard anything logged to it, not even propagating entries to a parent logger. Thus you should be very careful using &lt;code&gt;'disable_existing_loggers': True&lt;/code&gt;; it&amp;rsquo;s probably not what you want. Instead, you can set &lt;code&gt;disable_existing_loggers&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt; and redefine some or all of the default loggers; or you can set &lt;a href=&quot;../ref/settings#std:setting-LOGGING_CONFIG&quot;&gt;&lt;code&gt;LOGGING_CONFIG&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;None&lt;/code&gt; and &lt;a href=&quot;#disabling-logging-configuration&quot;&gt;handle logging config yourself&lt;/a&gt;.</source>
          <target state="translated">如果将&lt;a href=&quot;../ref/settings#std:setting-LOGGING&quot;&gt; &lt;code&gt;LOGGING&lt;/code&gt; &lt;/a&gt; dictConfig中的 &lt;code&gt;disable_existing_loggers&lt;/code&gt; 键设置为 &lt;code&gt;True&lt;/code&gt; （如果缺少键，则是 &lt;code&gt;dictConfig&lt;/code&gt; 默认值），则将禁用默认配置中的所有记录器。禁用的记录器与已删除的记录器不同；记录器仍将存在，但会静默丢弃记录到它的任何内容，甚至不会将条目传播到父记录器。因此，使用 &lt;code&gt;'disable_existing_loggers': True&lt;/code&gt; 应该非常小心：True ;这可能不是您想要的。相反，您可以将 &lt;code&gt;disable_existing_loggers&lt;/code&gt; 设置为 &lt;code&gt;False&lt;/code&gt; ,然后重新定义一些或所有默认记录器。或者您可以将&lt;a href=&quot;../ref/settings#std:setting-LOGGING_CONFIG&quot;&gt; &lt;code&gt;LOGGING_CONFIG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;None&lt;/code&gt; 并&lt;a href=&quot;#disabling-logging-configuration&quot;&gt;自己处理日志配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="05b08f75ebf13d1d83b41dad6945c5f27a8d81f7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;keepdb&lt;/code&gt; argument is &lt;code&gt;True&lt;/code&gt;, then the connection to the database will be closed, but the database will not be destroyed.</source>
          <target state="translated">如果 &lt;code&gt;keepdb&lt;/code&gt; 参数为 &lt;code&gt;True&lt;/code&gt; ，则将关闭与数据库的连接，但不会破坏数据库。</target>
        </trans-unit>
        <trans-unit id="08a666c5a8da8f429a409a1267d3838029509ea0" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;noop&lt;/code&gt; option is present, variable lookup still takes place but the translation is skipped. This is useful when &amp;ldquo;stubbing out&amp;rdquo; content that will require translation in the future:</source>
          <target state="translated">如果存在 &lt;code&gt;noop&lt;/code&gt; 选项，则仍会进行变量查找，但会跳过翻译。当&amp;ldquo;存根&amp;rdquo;将来需要翻译的内容时，这很有用：</target>
        </trans-unit>
        <trans-unit id="2ee97327ba18c15399455629ba03a6de34dcb1f6" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;pk&lt;/code&gt; attribute in the serialized data doesn&amp;rsquo;t exist or is null, a new instance will be saved to the database.</source>
          <target state="translated">如果序列化数据中的 &lt;code&gt;pk&lt;/code&gt; 属性不存在或为null，则新实例将保存到数据库中。</target>
        </trans-unit>
        <trans-unit id="b2735b2310885870e75d0ff6691c6be8a18b8799" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;raise_exception&lt;/code&gt; parameter is given, the decorator will raise &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.PermissionDenied&quot;&gt;&lt;code&gt;PermissionDenied&lt;/code&gt;&lt;/a&gt;, prompting &lt;a href=&quot;../../ref/views#http-forbidden-view&quot;&gt;the 403 (HTTP Forbidden) view&lt;/a&gt; instead of redirecting to the login page.</source>
          <target state="translated">如果给出了 &lt;code&gt;raise_exception&lt;/code&gt; 参数，则装饰器将引发&lt;a href=&quot;../../ref/exceptions#django.core.exceptions.PermissionDenied&quot;&gt; &lt;code&gt;PermissionDenied&lt;/code&gt; &lt;/a&gt;，提示您&lt;a href=&quot;../../ref/views#http-forbidden-view&quot;&gt;在403（禁止访问HTTP）视图，&lt;/a&gt;而不是重定向到登录页面。</target>
        </trans-unit>
        <trans-unit id="8394c12ff09c1a5f8f90c7ba9e59af4e1bad9b1d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;refresh&lt;/code&gt; argument is set to &lt;code&gt;True&lt;/code&gt;, the statistics will be computed from the data directly, and the cache will be updated with the result.</source>
          <target state="translated">如果将 &lt;code&gt;refresh&lt;/code&gt; 参数设置为 &lt;code&gt;True&lt;/code&gt; ，那么将直接从数据中计算统计信息，并且将使用结果更新缓存。</target>
        </trans-unit>
        <trans-unit id="33693d4d2aaa6f581909a8eddc7f106b165a2f88" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;render()&lt;/code&gt; method of your template tag stores the result in a context variable (rather than returning the result in a string), it should take care to call &lt;code&gt;mark_safe()&lt;/code&gt; if appropriate. When the variable is ultimately rendered, it will be affected by the auto-escape setting in effect at the time, so content that should be safe from further escaping needs to be marked as such.</source>
          <target state="translated">如果模板标记的 &lt;code&gt;render()&lt;/code&gt; 方法将结果存储在上下文变量中（而不是将结果返回到字符串中），则应酌情调用 &lt;code&gt;mark_safe()&lt;/code&gt; 。最终呈现该变量时，该变量将受到当时有效的自动转义设置的影响，因此需要对应避免进一步转义的内容进行标记。</target>
        </trans-unit>
        <trans-unit id="c2101e6671e6072ad4bba4baf10eea4a340d6815" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;source&lt;/code&gt; command is not available, you can try using a dot instead:</source>
          <target state="translated">如果 &lt;code&gt;source&lt;/code&gt; 命令不可用，则可以尝试使用点代替：</target>
        </trans-unit>
        <trans-unit id="6fe133ba83ae0e8070bb7d71584bd37302738487" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;values()&lt;/code&gt; clause precedes the &lt;code&gt;annotate()&lt;/code&gt; clause, any annotations will be automatically added to the result set. However, if the &lt;code&gt;values()&lt;/code&gt; clause is applied after the &lt;code&gt;annotate()&lt;/code&gt; clause, you need to explicitly include the aggregate column.</source>
          <target state="translated">如果 &lt;code&gt;values()&lt;/code&gt; 子句位于 &lt;code&gt;annotate()&lt;/code&gt; （）子句之前，则所有注释将自动添加到结果集中。但是，如果 &lt;code&gt;values()&lt;/code&gt; 子句在 &lt;code&gt;annotate()&lt;/code&gt; 子句之后应用，则需要显式包括聚合列。</target>
        </trans-unit>
        <trans-unit id="5040996a29b439b21cdb418aa42738cf3b6d145f" translate="yes" xml:space="preserve">
          <source>If the URL accepts arguments, you may pass them in &lt;code&gt;args&lt;/code&gt;. For example:</source>
          <target state="translated">如果URL接受参数，则可以在 &lt;code&gt;args&lt;/code&gt; 中传递它们。例如：</target>
        </trans-unit>
        <trans-unit id="7e0c98ab05f016b5dde972280549bc4e7e4e4ca7" translate="yes" xml:space="preserve">
          <source>If the URL does not resolve, the function raises a &lt;a href=&quot;exceptions#django.urls.Resolver404&quot;&gt;&lt;code&gt;Resolver404&lt;/code&gt;&lt;/a&gt; exception (a subclass of &lt;a href=&quot;../topics/http/views#django.http.Http404&quot;&gt;&lt;code&gt;Http404&lt;/code&gt;&lt;/a&gt;) .</source>
          <target state="translated">如果URL无法解析，则该函数引发&lt;a href=&quot;exceptions#django.urls.Resolver404&quot;&gt; &lt;code&gt;Resolver404&lt;/code&gt; &lt;/a&gt;异常（&lt;a href=&quot;../topics/http/views#django.http.Http404&quot;&gt; &lt;code&gt;Http404&lt;/code&gt; &lt;/a&gt;的子类）。</target>
        </trans-unit>
        <trans-unit id="a05f5f3d9b9ee23fb6009484d0a452e7752eff69" translate="yes" xml:space="preserve">
          <source>If the URL you request with a POST contains encoded parameters, these parameters will be made available in the request.GET data. For example, if you were to make the request:</source>
          <target state="translated">如果你用POST请求的URL包含编码参数,这些参数将在request.GET数据中提供。例如,如果您在 request.GET 数据中加入以下内容。</target>
        </trans-unit>
        <trans-unit id="81e578b176fe7d9a3ae3e7b6b5fa7a60a79d1ac7" translate="yes" xml:space="preserve">
          <source>If the actual state of the database and Django&amp;rsquo;s view of the state get out of sync, this can break the migration framework, even leading to data loss. It&amp;rsquo;s worth exercising caution and checking your database and state operations carefully. You can use &lt;a href=&quot;django-admin#django-admin-sqlmigrate&quot;&gt;&lt;code&gt;sqlmigrate&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;django-admin#django-admin-dbshell&quot;&gt;&lt;code&gt;dbshell&lt;/code&gt;&lt;/a&gt; to check your database operations. You can use &lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt;, especially with &lt;a href=&quot;django-admin#cmdoption-makemigrations-dry-run&quot;&gt;&lt;code&gt;--dry-run&lt;/code&gt;&lt;/a&gt;, to check your state operations.</source>
          <target state="translated">如果数据库的实际状态与Django的状态视图不同步，则可能破坏迁移框架，甚至导致数据丢失。值得谨慎行事，并仔细检查数据库和状态操作。您可以使用&lt;a href=&quot;django-admin#django-admin-sqlmigrate&quot;&gt; &lt;code&gt;sqlmigrate&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;django-admin#django-admin-dbshell&quot;&gt; &lt;code&gt;dbshell&lt;/code&gt; &lt;/a&gt;来检查数据库操作。您可以使用&lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt;，尤其是使用&lt;a href=&quot;django-admin#cmdoption-makemigrations-dry-run&quot;&gt; &lt;code&gt;--dry-run&lt;/code&gt; &lt;/a&gt;来检查状态操作。</target>
        </trans-unit>
        <trans-unit id="7bfe6092e2dbc4af99eae5987a2b05f2af49e616" translate="yes" xml:space="preserve">
          <source>If the argument passed to &lt;code&gt;floatformat&lt;/code&gt; is negative, it will round a number to that many decimal places &amp;ndash; but only if there&amp;rsquo;s a decimal part to be displayed. For example:</source>
          <target state="translated">如果传递给 &lt;code&gt;floatformat&lt;/code&gt; 的参数为负数，则它将数字四舍五入到小数点后位数-但前提是要显示小数部分。例如：</target>
        </trans-unit>
        <trans-unit id="37eef821508b28230557eff0648d464c18e05688" translate="yes" xml:space="preserve">
          <source>If the argument was a template variable, our function is passed the current value of the variable, not the variable itself.</source>
          <target state="translated">如果参数是模板变量,我们的函数传递的是变量的当前值,而不是变量本身。</target>
        </trans-unit>
        <trans-unit id="0cd46f87317e9cbe83ccd768d1ca1f980a06f428" translate="yes" xml:space="preserve">
          <source>If the built-in &lt;code&gt;Field&lt;/code&gt; classes don&amp;rsquo;t meet your needs, you can create custom &lt;code&gt;Field&lt;/code&gt; classes. To do this, create a subclass of &lt;code&gt;django.forms.Field&lt;/code&gt;. Its only requirements are that it implement a &lt;code&gt;clean()&lt;/code&gt; method and that its &lt;code&gt;__init__()&lt;/code&gt; method accept the core arguments mentioned above (&lt;code&gt;required&lt;/code&gt;, &lt;code&gt;label&lt;/code&gt;, &lt;code&gt;initial&lt;/code&gt;, &lt;code&gt;widget&lt;/code&gt;, &lt;code&gt;help_text&lt;/code&gt;).</source>
          <target state="translated">如果内置的 &lt;code&gt;Field&lt;/code&gt; 类不能满足您的需求，则可以创建自定义 &lt;code&gt;Field&lt;/code&gt; 类。为此，请创建 &lt;code&gt;django.forms.Field&lt;/code&gt; 的子类。它唯一的要求是实现一个 &lt;code&gt;clean()&lt;/code&gt; 方法，并且它的 &lt;code&gt;__init__()&lt;/code&gt; 方法接受上述核心参数（ &lt;code&gt;required&lt;/code&gt; ， &lt;code&gt;label&lt;/code&gt; ， &lt;code&gt;initial&lt;/code&gt; ， &lt;code&gt;widget&lt;/code&gt; ， &lt;code&gt;help_text&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0881e54800250d1cf05f08cf67b32a0f19ebd6b4" translate="yes" xml:space="preserve">
          <source>If the built-in fields don&amp;rsquo;t do the trick, you can try &lt;a href=&quot;https://github.com/django/django-localflavor&quot;&gt;django-localflavor&lt;/a&gt; (&lt;a href=&quot;https://django-localflavor.readthedocs.io/&quot;&gt;documentation&lt;/a&gt;), which contains assorted pieces of code that are useful for particular countries and cultures.</source>
          <target state="translated">如果内置字段不能解决问题，则可以尝试&lt;a href=&quot;https://github.com/django/django-localflavor&quot;&gt;django-localflavor&lt;/a&gt;（&lt;a href=&quot;https://django-localflavor.readthedocs.io/&quot;&gt;文档&lt;/a&gt;），其中包含对特定国家和地区有用的各种代码段。</target>
        </trans-unit>
        <trans-unit id="f55edd29f245a56eb902d9c4815f789400cb13c8" translate="yes" xml:space="preserve">
          <source>If the callback returns a value that is not &lt;code&gt;None&lt;/code&gt;, this will be used as the response instead of the original response object (and will be passed to the next post rendering callback etc.)</source>
          <target state="translated">如果回调返回的值不是 &lt;code&gt;None&lt;/code&gt; ，则它将用作响应而不是原始响应对象（并将传递给下一个渲染后的回调等）。</target>
        </trans-unit>
        <trans-unit id="68cb408f8b62b8a0532f41e57994c10be485c369" translate="yes" xml:space="preserve">
          <source>If the computation time for using this method is too expensive, consider using &lt;a href=&quot;#django.contrib.gis.db.models.Collect&quot;&gt;&lt;code&gt;Collect&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">如果使用此方法的计算时间过于昂贵，请考虑改为使用&amp;ldquo; &lt;a href=&quot;#django.contrib.gis.db.models.Collect&quot;&gt; &lt;code&gt;Collect&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="47b5d1532c2916d14a586f84ef6f39d88cc4cdda" translate="yes" xml:space="preserve">
          <source>If the concept of a &lt;code&gt;default&lt;/code&gt; database doesn&amp;rsquo;t make sense in the context of your project, you need to be careful to always specify the database that you want to use. Django requires that a &lt;code&gt;default&lt;/code&gt; database entry be defined, but the parameters dictionary can be left blank if it will not be used. To do this, you must set up &lt;a href=&quot;../../ref/settings#std:setting-DATABASE_ROUTERS&quot;&gt;&lt;code&gt;DATABASE_ROUTERS&lt;/code&gt;&lt;/a&gt; for all of your apps&amp;rsquo; models, including those in any contrib and third-party apps you&amp;rsquo;re using, so that no queries are routed to the default database. The following is an example &lt;code&gt;settings.py&lt;/code&gt; snippet defining two non-default databases, with the &lt;code&gt;default&lt;/code&gt; entry intentionally left empty:</source>
          <target state="translated">如果 &lt;code&gt;default&lt;/code&gt; 数据库的概念在您的项目上下文中没有意义，则需要小心始终指定要使用的数据库。 Django要求定义 &lt;code&gt;default&lt;/code&gt; 数据库条目，但是如果不使用参数字典，则可以将其保留为空白。为此，您必须为所有应用程序模型设置&lt;a href=&quot;../../ref/settings#std:setting-DATABASE_ROUTERS&quot;&gt; &lt;code&gt;DATABASE_ROUTERS&lt;/code&gt; &lt;/a&gt;，包括正在使用的任何contrib和第三方应用程序中的模型，以便将任何查询都不路由到默认数据库。以下是一个示例 &lt;code&gt;settings.py&lt;/code&gt; 片段，定义了两个非默认数据库， &lt;code&gt;default&lt;/code&gt; 条目有意留为空白：</target>
        </trans-unit>
        <trans-unit id="eeb6db1ade98b249e264e62c08a05f0b6e4af339" translate="yes" xml:space="preserve">
          <source>If the content to be serialized contains control characters that are not accepted in the XML 1.0 standard, the serialization will fail with a &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; exception. Read also the W3C&amp;rsquo;s explanation of &lt;a href=&quot;https://www.w3.org/International/questions/qa-controls&quot;&gt;HTML, XHTML, XML and Control Codes&lt;/a&gt;.</source>
          <target state="translated">如果要序列化的内容包含XML 1.0标准不接受的控制字符，则序列化将失败，并出现&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;异常。另请阅读W3C对&lt;a href=&quot;https://www.w3.org/International/questions/qa-controls&quot;&gt;HTML，XHTML，XML和控制代码&lt;/a&gt;的解释。</target>
        </trans-unit>
        <trans-unit id="4525ae9d6cf2854a6fcb0608be8b93a3f3c30647" translate="yes" xml:space="preserve">
          <source>If the current time zone raises an exception for datetimes that don&amp;rsquo;t exist or are ambiguous because they fall in a DST transition (the timezones provided by &lt;a href=&quot;http://pytz.sourceforge.net/&quot;&gt;pytz&lt;/a&gt; do this), such datetimes will be reported as invalid values.</source>
          <target state="translated">如果当前时区由于不属于DST转换（因为&lt;a href=&quot;http://pytz.sourceforge.net/&quot;&gt;pytz&lt;/a&gt;提供的时区会这样做）而导致不存在或不明确的日期时间引发异常，则此类日期时间将报告为无效值。</target>
        </trans-unit>
        <trans-unit id="f4e60e6c3027fafd4a1a2f98a5fa17785a3288ae" translate="yes" xml:space="preserve">
          <source>If the custom through table defined by the intermediate model does not enforce uniqueness on the &lt;code&gt;(model1, model2)&lt;/code&gt; pair, allowing multiple values, the &lt;a href=&quot;../../ref/models/relations#django.db.models.fields.related.RelatedManager.remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; call will remove all intermediate model instances:</source>
          <target state="translated">如果中间模型定义的自定义通过表未对 &lt;code&gt;(model1, model2)&lt;/code&gt; 对施加唯一性，从而允许多个值，则&lt;a href=&quot;../../ref/models/relations#django.db.models.fields.related.RelatedManager.remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;调用将删除所有中间模型实例：</target>
        </trans-unit>
        <trans-unit id="60b168a79b98017c44ac1a37fd2d1555ab25d04d" translate="yes" xml:space="preserve">
          <source>If the database backend doesn&amp;rsquo;t support time zones (e.g. SQLite, MySQL, Oracle), Django reads and writes datetimes in local time according to this option if it is set and in UTC if it isn&amp;rsquo;t.</source>
          <target state="translated">如果数据库后端不支持时区（例如SQLite，MySQL，Oracle），则Django会根据此选项（如果设置了该选项）在本地时间读写日期时间，如果不设置，则在UTC中读写日期时间。</target>
        </trans-unit>
        <trans-unit id="a2ba213c7e47c95e2f4c72c230a8d86ca3174f13" translate="yes" xml:space="preserve">
          <source>If the database backend supports time zones (e.g. PostgreSQL), the &lt;code&gt;TIME_ZONE&lt;/code&gt; option is very rarely needed. It can be changed at any time; the database takes care of converting datetimes to the desired time zone.</source>
          <target state="translated">如果数据库后端支持时区（例如PostgreSQL），则很少需要 &lt;code&gt;TIME_ZONE&lt;/code&gt; 选项。可以随时更改。数据库负责将日期时间转换为所需的时区。</target>
        </trans-unit>
        <trans-unit id="24e26eeaf3ed6a6240170bc7969a0916fee521c8" translate="yes" xml:space="preserve">
          <source>If the database column name is a Python reserved word (such as &lt;code&gt;'pass'&lt;/code&gt;, &lt;code&gt;'class'&lt;/code&gt; or &lt;code&gt;'for'&lt;/code&gt;), &lt;code&gt;inspectdb&lt;/code&gt; will append &lt;code&gt;'_field'&lt;/code&gt; to the attribute name. For example, if a table has a column &lt;code&gt;'for'&lt;/code&gt;, the generated model will have a field &lt;code&gt;'for_field'&lt;/code&gt;, with the &lt;code&gt;db_column&lt;/code&gt; attribute set to &lt;code&gt;'for'&lt;/code&gt;. &lt;code&gt;inspectdb&lt;/code&gt; will insert the Python comment &lt;code&gt;'Field renamed because it was a Python reserved word.'&lt;/code&gt; next to the field.</source>
          <target state="translated">如果数据库列名称是Python保留字（例如 &lt;code&gt;'pass'&lt;/code&gt; ， &lt;code&gt;'class'&lt;/code&gt; 或 &lt;code&gt;'for'&lt;/code&gt; ）， &lt;code&gt;inspectdb&lt;/code&gt; 会将 &lt;code&gt;'_field'&lt;/code&gt; 追加到属性名称之后。例如，如果表 &lt;code&gt;'for_field'&lt;/code&gt; &lt;code&gt;'for'&lt;/code&gt; ，则生成的模型将具有字段'for_field'，且 &lt;code&gt;db_column&lt;/code&gt; 属性设置为 &lt;code&gt;'for'&lt;/code&gt; 。 &lt;code&gt;inspectdb&lt;/code&gt; 将插入Python注释 &lt;code&gt;'Field renamed because it was a Python reserved word.'&lt;/code&gt; 旁边的领域。</target>
        </trans-unit>
        <trans-unit id="b433adee0cff9f7e77689b285a176f694c2dfe64" translate="yes" xml:space="preserve">
          <source>If the database has the &lt;code&gt;supports_combined_alters&lt;/code&gt;, Django will try and do as many of these in a single database call as possible; otherwise, it will issue a separate ALTER statement for each change, but will not issue ALTERs where no change is required (as South often did).</source>
          <target state="translated">如果数据库具有 &lt;code&gt;supports_combined_alters&lt;/code&gt; ，则Django将尝试在单个数据库调用中执行尽可能多的操作；否则，它将为每个更改发出单独的ALTER语句，但不会在不需要更改的情况下发出ALTER（如South经常这样做）。</target>
        </trans-unit>
        <trans-unit id="db2ceac90336d5ce8d16f9adb539f3c2b5279cfd" translate="yes" xml:space="preserve">
          <source>If the database has the &lt;code&gt;supports_combined_alters&lt;/code&gt;, Django will try and do as many of these in a single database call as possible; otherwise, it will issue a separate ALTER statement for each change, but will not issue ALTERs where no change is required.</source>
          <target state="translated">如果数据库具有 &lt;code&gt;supports_combined_alters&lt;/code&gt; ，则Django将尝试在单个数据库调用中执行尽可能多的操作；否则，它将为每个更改发出单独的ALTER语句，但不会在不需要更改的情况下发出ALTER。</target>
        </trans-unit>
        <trans-unit id="2b6214efcbb5905b7ba74c2ae487377c68437bf4" translate="yes" xml:space="preserve">
          <source>If the database is responsible for updating the field, the process is more robust: it will only ever update the field based on the value of the field in the database when the &lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;update()&lt;/code&gt; is executed, rather than based on its value when the instance was retrieved.</source>
          <target state="translated">如果数据库负责更新字段，则该过程将更可靠：它只会根据执行&lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;update()&lt;/code&gt; 时数据库中字段的值来更新字段，而不是根据其值来更新字段检索实例时的值。</target>
        </trans-unit>
        <trans-unit id="75e620c38af1daa6c954718d3fb54518ed7eaca8" translate="yes" xml:space="preserve">
          <source>If the database supports it, you can specify the start and end points based on values of an expression in the partition. If the &lt;code&gt;released&lt;/code&gt; field of the &lt;code&gt;Movie&lt;/code&gt; model stores the release month of each movies, this &lt;code&gt;ValueRange&lt;/code&gt; example annotates each movie with the average rating of a movie&amp;rsquo;s peers released between twelve months before and twelve months after the each movie.</source>
          <target state="translated">如果数据库支持，则可以基于分区中表达式的值指定起点和终点。如果 &lt;code&gt;Movie&lt;/code&gt; 模型的 &lt;code&gt;released&lt;/code&gt; 字段存储了每个电影的发布月份，则此 &lt;code&gt;ValueRange&lt;/code&gt; 示例将用每个电影之前12个月和之后12个月之间发布的电影同级的平均评分来注释每个电影。</target>
        </trans-unit>
        <trans-unit id="de682c7bb318e9e4b8081e3ba95e6e42e73b0668" translate="yes" xml:space="preserve">
          <source>If the default value (&lt;code&gt;None&lt;/code&gt;) is used with the SQLite database engine, the tests will use a memory resident database. For all other database engines the test database will use the name &lt;code&gt;'test_' + DATABASE_NAME&lt;/code&gt;.</source>
          <target state="translated">如果SQLite数据库引擎使用默认值（ &lt;code&gt;None&lt;/code&gt; ），则测试将使用内存驻留数据库。对于所有其他数据库引擎，测试数据库将使用名称 &lt;code&gt;'test_' + DATABASE_NAME&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="31d7e870cfce92781ed62069a8d06aed8bd6f166" translate="yes" xml:space="preserve">
          <source>If the email address provided does not exist in the system, the user is inactive, or has an unusable password, the user will still be redirected to this view but no email will be sent.</source>
          <target state="translated">如果所提供的电子邮件地址在系统中不存在,用户不活跃,或有一个无法使用的密码,用户仍然会被重定向到这个视图,但不会发送电子邮件。</target>
        </trans-unit>
        <trans-unit id="db3ee4ff45ccc9f4fcd4236a06eb867d73a8a85f" translate="yes" xml:space="preserve">
          <source>If the email address provided does not exist in the system, this view won&amp;rsquo;t send an email, but the user won&amp;rsquo;t receive any error message either. This prevents information leaking to potential attackers. If you want to provide an error message in this case, you can subclass &lt;a href=&quot;#django.contrib.auth.forms.PasswordResetForm&quot;&gt;&lt;code&gt;PasswordResetForm&lt;/code&gt;&lt;/a&gt; and use the &lt;code&gt;form_class&lt;/code&gt; attribute.</source>
          <target state="translated">如果系统中不存在提供的电子邮件地址，则该视图将不会发送电子邮件，但用户也不会收到任何错误消息。这样可以防止信息泄露给潜在的攻击者。如果要在这种情况下提供错误消息，则可以将&lt;a href=&quot;#django.contrib.auth.forms.PasswordResetForm&quot;&gt; &lt;code&gt;PasswordResetForm&lt;/code&gt; &lt;/a&gt;子类化，并使用 &lt;code&gt;form_class&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="c99e2655adb8e99185dcdfcf065a8bd817fd52d8" translate="yes" xml:space="preserve">
          <source>If the feed format is totally custom, you&amp;rsquo;ll want to subclass &lt;code&gt;SyndicationFeed&lt;/code&gt; and completely replace the &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;writeString()&lt;/code&gt; methods.</source>
          <target state="translated">如果提要格式是完全自定义的，则需要对 &lt;code&gt;SyndicationFeed&lt;/code&gt; 进行子类化，并完全替换 &lt;code&gt;write()&lt;/code&gt; 和 &lt;code&gt;writeString()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="e7368b6434626ac779365385ae08f94dbbeb6a28" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;code&gt;BooleanField&lt;/code&gt;, Django will display a pretty &amp;ldquo;on&amp;rdquo; or &amp;ldquo;off&amp;rdquo; icon instead of &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">如果该字段是 &lt;code&gt;BooleanField&lt;/code&gt; ，则Django将显示一个漂亮的&amp;ldquo; on&amp;rdquo;或&amp;ldquo; off&amp;rdquo;图标，而不是 &lt;code&gt;True&lt;/code&gt; 或 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93a5e61f0fff2318c8177651d57e9f9df8232f8d" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;code&gt;ForeignKey&lt;/code&gt;, Django will display the &lt;code&gt;__str__()&lt;/code&gt; of the related object.</source>
          <target state="translated">如果该字段是 &lt;code&gt;ForeignKey&lt;/code&gt; ，则Django将显示相关对象的 &lt;code&gt;__str__()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="187bb90cacedf45099edc0ce8a570d93fd2dd2d0" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;code&gt;ForeignKey&lt;/code&gt;, this will also add the foreign key constraint to the column.</source>
          <target state="translated">如果该字段是 &lt;code&gt;ForeignKey&lt;/code&gt; ，这还将向该列添加外键约束。</target>
        </trans-unit>
        <trans-unit id="7fc4678d8fbbd49c904395e0d20c16a282bf2e32" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;code&gt;ManyToManyField&lt;/code&gt; without a value for &lt;code&gt;through&lt;/code&gt;, instead of creating a column, it will make a table to represent the relationship. If &lt;code&gt;through&lt;/code&gt; is provided, it is a no-op.</source>
          <target state="translated">如果该字段是 &lt;code&gt;ManyToManyField&lt;/code&gt; ,而没有 &lt;code&gt;through&lt;/code&gt; 的值，则它会创建一个表来表示该关系，而不是创建一列。如果提供 &lt;code&gt;through&lt;/code&gt; ，则为无操作。</target>
        </trans-unit>
        <trans-unit id="c3e41a9270c1726202619f246ad8066eeba76c80" translate="yes" xml:space="preserve">
          <source>If the field is a ManyToManyField without a value for &lt;code&gt;through&lt;/code&gt;, it will remove the table created to track the relationship. If &lt;code&gt;through&lt;/code&gt; is provided, it is a no-op.</source>
          <target state="translated">如果该字段是没有某个值的ManyToManyField &lt;code&gt;through&lt;/code&gt; ，它会删除创建跟踪关系表。如果提供 &lt;code&gt;through&lt;/code&gt; ，则为无操作。</target>
        </trans-unit>
        <trans-unit id="2eb25c25d3d9375ffc539e7ad5b8fd3b1ac65ecc" translate="yes" xml:space="preserve">
          <source>If the fields that you&amp;rsquo;re combining are of different types you&amp;rsquo;ll need to tell Django what kind of field will be returned. Since &lt;code&gt;F()&lt;/code&gt; does not directly support &lt;code&gt;output_field&lt;/code&gt; you will need to wrap the expression with &lt;a href=&quot;#django.db.models.ExpressionWrapper&quot;&gt;&lt;code&gt;ExpressionWrapper&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果您要合并的字段具有不同的类型，则需要告诉Django将返回哪种类型的字段。由于 &lt;code&gt;F()&lt;/code&gt; 不直接支持 &lt;code&gt;output_field&lt;/code&gt; ,因此您需要使用&lt;a href=&quot;#django.db.models.ExpressionWrapper&quot;&gt; &lt;code&gt;ExpressionWrapper&lt;/code&gt; &lt;/a&gt;包装表达式：</target>
        </trans-unit>
        <trans-unit id="920dc62d10b6075521a8826f302508a777dbe1bd" translate="yes" xml:space="preserve">
          <source>If the flatpage has a custom template, it loads that template. Otherwise, it loads the template &lt;code&gt;flatpages/default.html&lt;/code&gt;.</source>
          <target state="translated">如果平面具有自定义模板，则它将加载该模板。否则，它将加载模板 &lt;code&gt;flatpages/default.html&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14fdac3e377218b7cc6f1824107094f6dfcc7132" translate="yes" xml:space="preserve">
          <source>If the form is bound to data, the HTML output will include that data appropriately. For example, if a field is represented by an &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt;, the data will be in the &lt;code&gt;value&lt;/code&gt; attribute. If a field is represented by an &lt;code&gt;&amp;lt;input type=&quot;checkbox&quot;&amp;gt;&lt;/code&gt;, then that HTML will include &lt;code&gt;checked&lt;/code&gt; if appropriate:</source>
          <target state="translated">如果表单绑定到数据，则HTML输出将适当地包含该数据。例如，如果一个字段由 &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt; ，则数据将在 &lt;code&gt;value&lt;/code&gt; 属性中。如果一个字段由 &lt;code&gt;&amp;lt;input type=&quot;checkbox&quot;&amp;gt;&lt;/code&gt; ，则该HTML将在适当的情况下包括 &lt;code&gt;checked&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="2347bbb524d905c24374a2f0eed006de697e76e6" translate="yes" xml:space="preserve">
          <source>If the form is submitted using a &lt;code&gt;POST&lt;/code&gt; request, the view will once again create a form instance and populate it with data from the request: &lt;code&gt;form =
NameForm(request.POST)&lt;/code&gt; This is called &amp;ldquo;binding data to the form&amp;rdquo; (it is now a &lt;em&gt;bound&lt;/em&gt; form).</source>
          <target state="translated">如果使用 &lt;code&gt;POST&lt;/code&gt; 请求提交表单，则视图将再次创建一个表单实例，并使用请求中的数据填充该表单实例： &lt;code&gt;form = NameForm(request.POST)&lt;/code&gt; 这称为&amp;ldquo;将数据绑定到表单&amp;rdquo;（现在是一个&lt;em&gt;结合的&lt;/em&gt;形式）。</target>
        </trans-unit>
        <trans-unit id="a9757191fc0fc873cf4bf622fc86ad210c659471" translate="yes" xml:space="preserve">
          <source>If the form object passed to a template has a different name within the context, you can alias it using the &lt;code&gt;with&lt;/code&gt; argument of the &lt;a href=&quot;../../ref/templates/builtins#std:templatetag-include&quot;&gt;&lt;code&gt;include&lt;/code&gt;&lt;/a&gt; tag:</source>
          <target state="translated">如果传递给模板的表单对象在上下文中具有不同的名称，则可以使用&lt;a href=&quot;../../ref/templates/builtins#std:templatetag-include&quot;&gt; &lt;code&gt;include&lt;/code&gt; &lt;/a&gt;标记的 &lt;code&gt;with&lt;/code&gt; 参数对其进行别名：</target>
        </trans-unit>
        <trans-unit id="d04738f31fd24193f9e0dc204f8a74807516e46f" translate="yes" xml:space="preserve">
          <source>If the front page, displaying the latest blog entries, only changes when you add a new blog entry, you can compute the last modified time very quickly. You need the latest &lt;code&gt;published&lt;/code&gt; date for every entry associated with that blog. One way to do this would be:</source>
          <target state="translated">如果显示最新博客条目的首页仅在添加新博客条目时发生更改，则可以非常快速地计算上次修改时间。您需要与该博客关联的每个条目的最新 &lt;code&gt;published&lt;/code&gt; 日期。一种方法是：</target>
        </trans-unit>
        <trans-unit id="a34161a59a4f0d30905cb9967f322b4a368ff736" translate="yes" xml:space="preserve">
          <source>If the given URL is &lt;code&gt;None&lt;/code&gt;, Django will return an &lt;code&gt;HttpResponseGone&lt;/code&gt; (410).</source>
          <target state="translated">如果给定的URL为 &lt;code&gt;None&lt;/code&gt; ，则Django将返回 &lt;code&gt;HttpResponseGone&lt;/code&gt; （410）。</target>
        </trans-unit>
        <trans-unit id="1a04dcff64887ebdbc5f16a342619a164a3cd7da" translate="yes" xml:space="preserve">
          <source>If the given URL is not found, accessing this attribute will raise a &lt;a href=&quot;../../ref/exceptions#django.urls.Resolver404&quot;&gt;&lt;code&gt;Resolver404&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">如果找不到给定的URL，则访问此属性将引发&lt;a href=&quot;../../ref/exceptions#django.urls.Resolver404&quot;&gt; &lt;code&gt;Resolver404&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="f77d4aed574a50b3060efbb746c1d73ca1c67d9a" translate="yes" xml:space="preserve">
          <source>If the input is a file path, the raster is opened from there. If the input is raw data in a dictionary, the parameters &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, and &lt;code&gt;srid&lt;/code&gt; are required. If the input is a bytes object, it will be opened using a GDAL virtual filesystem.</source>
          <target state="translated">如果输入是文件路径，则从那里打开栅格。如果输入是字典中的原始数据，则需要参数 &lt;code&gt;width&lt;/code&gt; ， &lt;code&gt;height&lt;/code&gt; 和 &lt;code&gt;srid&lt;/code&gt; 。如果输入是字节对象，则将使用GDAL虚拟文件系统将其打开。</target>
        </trans-unit>
        <trans-unit id="00448ece8c00dea5fb14fcecd674a9b61b65198b" translate="yes" xml:space="preserve">
          <source>If the key is an integer, it will be interpreted as an index lookup in an array:</source>
          <target state="translated">如果键是一个整数,它将被解释为一个数组中的索引查找。</target>
        </trans-unit>
        <trans-unit id="d8a46612976fac7698199bc967b79f7c4caed3a7" translate="yes" xml:space="preserve">
          <source>If the key is an integer, it will be interpreted as an index transform in an array:</source>
          <target state="translated">如果键是一个整数,它将被解释为一个数组中的索引变换。</target>
        </trans-unit>
        <trans-unit id="48c43cb455f861107b84dacb63c723b0238df4a6" translate="yes" xml:space="preserve">
          <source>If the key you wish to query by clashes with the name of another lookup, use the &lt;a href=&quot;#std:fieldlookup-jsonfield.contains&quot;&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; lookup instead.</source>
          <target state="translated">如果您希望通过查询来查询的键与另一个查询的名称发生冲突，请改用&lt;a href=&quot;#std:fieldlookup-jsonfield.contains&quot;&gt; &lt;code&gt;contains&lt;/code&gt; &lt;/a&gt;查找。</target>
        </trans-unit>
        <trans-unit id="ac79a02ca9d1e219d3a805f08c37df80bb98035e" translate="yes" xml:space="preserve">
          <source>If the key you wish to query by clashes with the name of another lookup, use the &lt;a href=&quot;#std:fieldlookup-jsonfield.contains&quot;&gt;&lt;code&gt;jsonfield.contains&lt;/code&gt;&lt;/a&gt; lookup instead.</source>
          <target state="translated">如果您希望通过查询来查询的键与另一个查询的名称发生冲突，请改用&lt;a href=&quot;#std:fieldlookup-jsonfield.contains&quot;&gt; &lt;code&gt;jsonfield.contains&lt;/code&gt; &lt;/a&gt;查找。</target>
        </trans-unit>
        <trans-unit id="407cc2b75a43efab538c3808b42253f8c6a41dce" translate="yes" xml:space="preserve">
          <source>If the key you wish to query by clashes with the name of another lookup, you need to use the &lt;a href=&quot;#std:fieldlookup-hstorefield.contains&quot;&gt;&lt;code&gt;hstorefield.contains&lt;/code&gt;&lt;/a&gt; lookup instead.</source>
          <target state="translated">如果要查询的键与另一个查找的名称冲突，则需要使用&lt;a href=&quot;#std:fieldlookup-hstorefield.contains&quot;&gt; &lt;code&gt;hstorefield.contains&lt;/code&gt; &lt;/a&gt;查找。</target>
        </trans-unit>
        <trans-unit id="5ebd9152465f3666cabb8bf46cfee56114d51e1f" translate="yes" xml:space="preserve">
          <source>If the locale middleware is active, it provides a fallback language in case the user&amp;rsquo;s preferred language can&amp;rsquo;t be determined or is not supported by the website. It also provides the fallback translation when a translation for a given literal doesn&amp;rsquo;t exist for the user&amp;rsquo;s preferred language.</source>
          <target state="translated">如果语言环境中间件处于活动状态，则它会提供一种备用语言，以防无法确定用户的首选语言或网站不支持该语言。当给定文字的用户首选语言的翻译不存在时，它还提供后备翻译。</target>
        </trans-unit>
        <trans-unit id="b655b28cf85b0e9ab6424f2bae76d62937214d02" translate="yes" xml:space="preserve">
          <source>If the locale middleware isn&amp;rsquo;t in use, it decides which translation is served to all users.</source>
          <target state="translated">如果不使用语言环境中间件，则它将决定为所有用户提供哪种翻译。</target>
        </trans-unit>
        <trans-unit id="8c593d7145885e16ebab0576dd01ea5edc8eb619" translate="yes" xml:space="preserve">
          <source>If the location is already an absolute URI, it will not be altered. Otherwise the absolute URI is built using the server variables available in this request. For example:</source>
          <target state="translated">如果位置已经是一个绝对URI,它将不会被改变。否则,绝对URI将使用这个请求中可用的服务器变量建立。例如</target>
        </trans-unit>
        <trans-unit id="d3264db38633da128d75c5eb268e476d4a3b951a" translate="yes" xml:space="preserve">
          <source>If the log record contains a &lt;code&gt;request&lt;/code&gt; attribute, the full details of the request will be included in the email. The email subject will include the phrase &amp;ldquo;internal IP&amp;rdquo; if the client&amp;rsquo;s IP address is in the &lt;a href=&quot;../ref/settings#std:setting-INTERNAL_IPS&quot;&gt;&lt;code&gt;INTERNAL_IPS&lt;/code&gt;&lt;/a&gt; setting; if not, it will include &amp;ldquo;EXTERNAL IP&amp;rdquo;.</source>
          <target state="translated">如果日志记录包含 &lt;code&gt;request&lt;/code&gt; 属性，则请求的完整详细信息将包含在电子邮件中。如果客户的IP地址在&lt;a href=&quot;../ref/settings#std:setting-INTERNAL_IPS&quot;&gt; &lt;code&gt;INTERNAL_IPS&lt;/code&gt; &lt;/a&gt;设置中，则电子邮件主题将包含短语&amp;ldquo;内部IP&amp;rdquo; ；如果没有，它将包括&amp;ldquo; EXTERNAL IP&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="558c854eeaec5a7ab6be858905f8f23539e7a64a" translate="yes" xml:space="preserve">
          <source>If the log record contains stack trace information, that stack trace will be included in the email.</source>
          <target state="translated">如果日志记录中包含堆栈跟踪信息,该堆栈跟踪信息将包含在电子邮件中。</target>
        </trans-unit>
        <trans-unit id="8d11f19d1f78b5ab369ba0f054bb8ddefd7d18dc" translate="yes" xml:space="preserve">
          <source>If the matched URL pattern contained no named groups, then the matches from the regular expression are provided as positional arguments.</source>
          <target state="translated">如果匹配的URL模式中不包含命名组,那么正则表达式中的匹配结果将作为位置参数提供。</target>
        </trans-unit>
        <trans-unit id="f27bc33c579e0ba1b671f20cb2b969680090aa80" translate="yes" xml:space="preserve">
          <source>If the middleware is enabled, the language can be set by creating a cookie with a name of &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGE_COOKIE_NAME&quot;&gt;&lt;code&gt;LANGUAGE_COOKIE_NAME&lt;/code&gt;&lt;/a&gt; and a value of the language code:</source>
          <target state="translated">如果启用了中间件，则可以通过创建名称为&lt;a href=&quot;../../ref/settings#std:setting-LANGUAGE_COOKIE_NAME&quot;&gt; &lt;code&gt;LANGUAGE_COOKIE_NAME&lt;/code&gt; &lt;/a&gt;的cookie 和语言代码的值来设置语言：</target>
        </trans-unit>
        <trans-unit id="f8b3db4161aa1f1d9ef7d96ed438167b2a06057a" translate="yes" xml:space="preserve">
          <source>If the middleware isn&amp;rsquo;t enabled, the active language may be set using &lt;a href=&quot;../../ref/utils#django.utils.translation.override&quot;&gt;&lt;code&gt;translation.override()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果未启用中间件，则可以使用&lt;a href=&quot;../../ref/utils#django.utils.translation.override&quot;&gt; &lt;code&gt;translation.override()&lt;/code&gt; &lt;/a&gt;设置活动语言：</target>
        </trans-unit>
        <trans-unit id="77e0e8d1467be7a2d6e9f0484b05652c14f7c823" translate="yes" xml:space="preserve">
          <source>If the model field has &lt;code&gt;blank=True&lt;/code&gt;, then &lt;code&gt;required&lt;/code&gt; is set to &lt;code&gt;False&lt;/code&gt; on the form field. Otherwise, &lt;code&gt;required=True&lt;/code&gt;.</source>
          <target state="translated">如果模型字段具有 &lt;code&gt;blank=True&lt;/code&gt; ，则在表单字段上将 &lt;code&gt;required&lt;/code&gt; 设置为 &lt;code&gt;False&lt;/code&gt; 。否则， &lt;code&gt;required=True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b6ce905c045e003d848e1a4bfebb8367398b55a5" translate="yes" xml:space="preserve">
          <source>If the model field has &lt;code&gt;choices&lt;/code&gt; set, then the form field&amp;rsquo;s &lt;code&gt;widget&lt;/code&gt; will be set to &lt;code&gt;Select&lt;/code&gt;, with choices coming from the model field&amp;rsquo;s &lt;code&gt;choices&lt;/code&gt;. The choices will normally include the blank choice which is selected by default. If the field is required, this forces the user to make a selection. The blank choice will not be included if the model field has &lt;code&gt;blank=False&lt;/code&gt; and an explicit &lt;code&gt;default&lt;/code&gt; value (the &lt;code&gt;default&lt;/code&gt; value will be initially selected instead).</source>
          <target state="translated">如果模型字段设置了 &lt;code&gt;choices&lt;/code&gt; ，则表单字段的 &lt;code&gt;widget&lt;/code&gt; 将设置为 &lt;code&gt;Select&lt;/code&gt; ，其中选项来自模型字段的 &lt;code&gt;choices&lt;/code&gt; 。这些选项通常包括默认情况下选择的空白选项。如果需要该字段，这将迫使用户进行选择。如果模型字段具有 &lt;code&gt;blank=False&lt;/code&gt; 和一个明确的 &lt;code&gt;default&lt;/code&gt; 值（ &lt;code&gt;default&lt;/code&gt; 将默认选择默认值），则不包括空白选项。</target>
        </trans-unit>
        <trans-unit id="f96a82c6715c5a715a0e01211ac8adf4e12046a4" translate="yes" xml:space="preserve">
          <source>If the model&amp;rsquo;s primary key is an &lt;a href=&quot;fields#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt; it does not retrieve and set the primary key attribute, as &lt;code&gt;save()&lt;/code&gt; does, unless the database backend supports it (currently PostgreSQL).</source>
          <target state="translated">如果模型的主键是&lt;a href=&quot;fields#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; ,&lt;/a&gt;则它不会像 &lt;code&gt;save()&lt;/code&gt; 那样检索和设置主键属性，除非数据库后端支持它（当前为PostgreSQL）。</target>
        </trans-unit>
        <trans-unit id="9d4c86c05a2b9809fc32d1cacacc1d67cbcfb128" translate="yes" xml:space="preserve">
          <source>If the model&amp;rsquo;s primary key is an &lt;a href=&quot;fields#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt;, the primary key attribute can only be retrieved on certain databases (currently PostgreSQL and MariaDB 10.5+). On other databases, it will not be set.</source>
          <target state="translated">如果模型的主键是&lt;a href=&quot;fields#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; &lt;/a&gt;，则只能在某些数据库（当前为PostgreSQL和MariaDB 10.5+）上检索主键属性。在其他数据库上，将不会设置它。</target>
        </trans-unit>
        <trans-unit id="b759c75b1b279d612802ffa84e3c983524d1b418" translate="yes" xml:space="preserve">
          <source>If the named fixture has a file extension, only fixtures of that type will be loaded. For example:</source>
          <target state="translated">如果命名的夹具有一个文件扩展名,只有该类型的夹具才会被加载。例如</target>
        </trans-unit>
        <trans-unit id="362d07b2752f99df71674036aec9a530c5efa750" translate="yes" xml:space="preserve">
          <source>If the named key does not exist, &lt;code&gt;InvalidCacheBackendError&lt;/code&gt; will be raised.</source>
          <target state="translated">如果指定的键不存在，将引发 &lt;code&gt;InvalidCacheBackendError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a668f34f8121048f3d4b44ccf50ee64fbbfdbd16" translate="yes" xml:space="preserve">
          <source>If the normal base manager class (&lt;a href=&quot;#django.db.models.Manager&quot;&gt;&lt;code&gt;django.db.models.Manager&lt;/code&gt;&lt;/a&gt;) isn&amp;rsquo;t appropriate for your circumstances, you can tell Django which class to use by setting &lt;a href=&quot;../../ref/models/options#django.db.models.Options.base_manager_name&quot;&gt;&lt;code&gt;Meta.base_manager_name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果普通的基本管理器类（&lt;a href=&quot;#django.db.models.Manager&quot;&gt; &lt;code&gt;django.db.models.Manager&lt;/code&gt; &lt;/a&gt;）不适合您的情况，则可以通过设置&lt;a href=&quot;../../ref/models/options#django.db.models.Options.base_manager_name&quot;&gt; &lt;code&gt;Meta.base_manager_name&lt;/code&gt; &lt;/a&gt;来告诉Django使用哪个类。</target>
        </trans-unit>
        <trans-unit id="826ea8b39c2adb284a994b3ac295d22a4f3c7746" translate="yes" xml:space="preserve">
          <source>If the number of items in the initial data exceeds &lt;code&gt;max_num&lt;/code&gt;, all initial data forms will be displayed regardless of the value of &lt;code&gt;max_num&lt;/code&gt; and no extra forms will be displayed. For example, if &lt;code&gt;extra=3&lt;/code&gt; and &lt;code&gt;max_num=1&lt;/code&gt; and the formset is initialized with two initial items, two forms with the initial data will be displayed.</source>
          <target state="translated">如果初始数据中的项目数超过 &lt;code&gt;max_num&lt;/code&gt; ，则将显示所有初始数据表单，而不管 &lt;code&gt;max_num&lt;/code&gt; 的值如何，并且不会显示任何额外的表单。例如，如果 &lt;code&gt;extra=3&lt;/code&gt; 和 &lt;code&gt;max_num=1&lt;/code&gt; 且使用两个初始项初始化表单集，则将显示两个具有初始数据的表单。</target>
        </trans-unit>
        <trans-unit id="9a54427017bdff00314afd5156803ed55090ab15" translate="yes" xml:space="preserve">
          <source>If the number of items in the input is different from the target pixel block, the &lt;code&gt;shape&lt;/code&gt; parameter must be specified. The shape is a tuple that specifies the width and height of the input data in pixels. The data is then replicated to update the pixel values of the selected block. This is useful to fill an entire band with a single value, for instance.</source>
          <target state="translated">如果输入中的项目数与目标像素块不同，则必须指定 &lt;code&gt;shape&lt;/code&gt; 参数。形状是一个元组，以像素为单位指定输入数据的宽度和高度。然后复制数据以更新所选块的像素值。例如，这对于用单个值填充整个波段很有用。</target>
        </trans-unit>
        <trans-unit id="a6a6749b0e99cb6050db9cf3716874b3e4ced2ec" translate="yes" xml:space="preserve">
          <source>If the object doesn&amp;rsquo;t exist in the cache, &lt;code&gt;cache.get()&lt;/code&gt; returns &lt;code&gt;None&lt;/code&gt;:</source>
          <target state="translated">如果对象在缓存中不存在，则 &lt;code&gt;cache.get()&lt;/code&gt; 返回 &lt;code&gt;None&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="646d736dabdd25c732e89d37d9d4201115c381b3" translate="yes" xml:space="preserve">
          <source>If the object&amp;rsquo;s primary key attribute defines a &lt;a href=&quot;fields#django.db.models.Field.default&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt; then Django executes an &lt;code&gt;UPDATE&lt;/code&gt; if it is an existing model instance and primary key is set to a value that exists in the database. Otherwise, Django executes an &lt;code&gt;INSERT&lt;/code&gt;.</source>
          <target state="translated">如果对象的主键属性定义了&lt;a href=&quot;fields#django.db.models.Field.default&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;则Django将执行 &lt;code&gt;UPDATE&lt;/code&gt; (如果它是现有的模型实例）并且主键设置为数据库中存在的值。否则，Django执行 &lt;code&gt;INSERT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c671ef226635a52b529ee6c4d9e1022741a8176d" translate="yes" xml:space="preserve">
          <source>If the object&amp;rsquo;s primary key attribute is &lt;em&gt;not&lt;/em&gt; set or if the &lt;code&gt;UPDATE&lt;/code&gt; didn&amp;rsquo;t update anything (e.g. if primary key is set to a value that doesn&amp;rsquo;t exist in the database), Django executes an &lt;code&gt;INSERT&lt;/code&gt;.</source>
          <target state="translated">如果&lt;em&gt;未&lt;/em&gt;设置对象的主键属性，或者 &lt;code&gt;UPDATE&lt;/code&gt; 未更新任何内容（例如，如果主键设置为数据库中不存在的值），则Django执行 &lt;code&gt;INSERT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e28fb5ae884b5520d6c8a7cdb6b70dbd48ca7eb" translate="yes" xml:space="preserve">
          <source>If the object&amp;rsquo;s primary key attribute is set to a value that evaluates to &lt;code&gt;True&lt;/code&gt; (i.e., a value other than &lt;code&gt;None&lt;/code&gt; or the empty string), Django executes an &lt;code&gt;UPDATE&lt;/code&gt;.</source>
          <target state="translated">如果对象的主键属性设置为计算结果为 &lt;code&gt;True&lt;/code&gt; 的值（即， &lt;code&gt;None&lt;/code&gt; 或空字符串以外的值），则Django执行 &lt;code&gt;UPDATE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34a7e5104e15b8b6de4d5070431c0318f28a763a" translate="yes" xml:space="preserve">
          <source>If the old &lt;code&gt;number_sold&lt;/code&gt; value retrieved from the database was 10, then the value of 11 will be written back to the database.</source>
          <target state="translated">如果从数据库中检索到的旧 &lt;code&gt;number_sold&lt;/code&gt; 值为10，则值11将被写回到数据库中。</target>
        </trans-unit>
        <trans-unit id="aca412a3a96d6dc532c6fed74ff3abb6bb8b6222" translate="yes" xml:space="preserve">
          <source>If the optional destination is provided, Django will use that existing directory as the project directory, and create &lt;code&gt;manage.py&lt;/code&gt; and the project package within it. Use &amp;lsquo;.&amp;rsquo; to denote the current working directory.</source>
          <target state="translated">如果提供了可选目标，Django将使用该现有目录作为项目目录，并在其中创建 &lt;code&gt;manage.py&lt;/code&gt; 和项目包。用 '。' 表示当前工作目录。</target>
        </trans-unit>
        <trans-unit id="96bd866396bdc1707e3fb218d60c9174cbfa1187" translate="yes" xml:space="preserve">
          <source>If the optional destination is provided, Django will use that existing directory rather than creating a new one. You can use &amp;lsquo;.&amp;rsquo; to denote the current working directory.</source>
          <target state="translated">如果提供了可选目标，Django将使用该现有目录，而不是创建一个新目录。您可以使用 '。' 表示当前工作目录。</target>
        </trans-unit>
        <trans-unit id="d65b4b8040f37069c8c493e01d172fe82c59186d" translate="yes" xml:space="preserve">
          <source>If the page is cacheable, but you still want the permission check to be performed, you can pass a &lt;code&gt;cacheable=True&lt;/code&gt; argument to &lt;code&gt;AdminSite.admin_view()&lt;/code&gt;:</source>
          <target state="translated">如果页面是可缓存的，但是您仍然希望执行权限检查，则可以将 &lt;code&gt;cacheable=True&lt;/code&gt; 参数传递给 &lt;code&gt;AdminSite.admin_view()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="2d63af43bcd959831a177ff5a58c265ebe73ad08" translate="yes" xml:space="preserve">
          <source>If the page isn&amp;rsquo;t a number, it returns the first page. If the page number is negative or greater than the number of pages, it returns the last page.</source>
          <target state="translated">如果页面不是数字，则返回第一页。如果页数为负或大于页数，则返回最后一页。</target>
        </trans-unit>
        <trans-unit id="449c71074274cb7cb8ca111a6688e519d349913f" translate="yes" xml:space="preserve">
          <source>If the parent has an ordering and you don&amp;rsquo;t want the child to have any natural ordering, you can explicitly disable it:</source>
          <target state="translated">如果父母有命令，并且您不希望孩子有任何自然命令，则可以显式禁用它：</target>
        </trans-unit>
        <trans-unit id="7e8326d7c2e2af22b7076e60b8fae585d509c641" translate="yes" xml:space="preserve">
          <source>If the paths and converters syntax isn&amp;rsquo;t sufficient for defining your URL patterns, you can also use regular expressions. To do so, use &lt;a href=&quot;../../ref/urls#django.urls.re_path&quot;&gt;&lt;code&gt;re_path()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../../ref/urls#django.urls.path&quot;&gt;&lt;code&gt;path()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果路径和转换器语法不足以定义URL模式，则还可以使用正则表达式。为此，请使用&lt;a href=&quot;../../ref/urls#django.urls.re_path&quot;&gt; &lt;code&gt;re_path()&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;../../ref/urls#django.urls.path&quot;&gt; &lt;code&gt;path()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ba3b655a98f41927c3df59507ec695765575a46" translate="yes" xml:space="preserve">
          <source>If the provided namespace doesn&amp;rsquo;t match an &lt;a href=&quot;#term-application-namespace&quot;&gt;application namespace&lt;/a&gt; in step 1, Django will attempt a direct lookup of the namespace as an &lt;a href=&quot;#term-instance-namespace&quot;&gt;instance namespace&lt;/a&gt;.</source>
          <target state="translated">如果在步骤1中提供的名称空间与&lt;a href=&quot;#term-application-namespace&quot;&gt;应用程序名称&lt;/a&gt;空间不匹配，则Django将尝试直接查找该名称空间作为&lt;a href=&quot;#term-instance-namespace&quot;&gt;实例名称空间&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e61e6192fb272635702649e3754a886729bd48dc" translate="yes" xml:space="preserve">
          <source>If the related object is deleted, the &lt;code&gt;content_type&lt;/code&gt; and &lt;code&gt;object_id&lt;/code&gt; fields remain set to their original values and the &lt;code&gt;GenericForeignKey&lt;/code&gt; returns &lt;code&gt;None&lt;/code&gt;:</source>
          <target state="translated">如果删除了相关对象，则 &lt;code&gt;content_type&lt;/code&gt; 和 &lt;code&gt;object_id&lt;/code&gt; 字段将保持设置为其原始值，并且 &lt;code&gt;GenericForeignKey&lt;/code&gt; 返回 &lt;code&gt;None&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ffcc219aa1c4e4ac018419462ed9e9a642409200" translate="yes" xml:space="preserve">
          <source>If the rendered page used multiple templates, then &lt;code&gt;context&lt;/code&gt; will be a list of &lt;code&gt;Context&lt;/code&gt; objects, in the order in which they were rendered.</source>
          <target state="translated">如果渲染的页面使用了多个模板，则 &lt;code&gt;context&lt;/code&gt; 将是 &lt;code&gt;Context&lt;/code&gt; 对象的列表，按它们的渲染顺序排列。</target>
        </trans-unit>
        <trans-unit id="aa69dd5e6ef529351a5374ba7d6e3f33a54a2e85" translate="yes" xml:space="preserve">
          <source>If the request accepts HTML content (based on its &lt;code&gt;Accept&lt;/code&gt; HTTP header), the fallback will always be performed.</source>
          <target state="translated">如果请求接受HTML内容（基于其 &lt;code&gt;Accept&lt;/code&gt; HTTP标头），则将始终执行回退。</target>
        </trans-unit>
        <trans-unit id="7f10b33a7cd6abc8421d75725477d27d01ae4077" translate="yes" xml:space="preserve">
          <source>If the request doesn&amp;rsquo;t accept HTML, the fallback will be performed only if the &lt;code&gt;next&lt;/code&gt; parameter was set. Otherwise a 204 status code (No Content) will be returned.</source>
          <target state="translated">如果请求不接受HTML，则仅在设置了 &lt;code&gt;next&lt;/code&gt; 参数时才执行回退。否则，将返回204状态代码（无内容）。</target>
        </trans-unit>
        <trans-unit id="453aeb3c1ca5c2eb5a8bb6d078fe6dcf9b73c42d" translate="yes" xml:space="preserve">
          <source>If the response has an &lt;code&gt;ETag&lt;/code&gt; header, the ETag is made weak to comply with &lt;a href=&quot;https://tools.ietf.org/html/rfc7232.html#section-2.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 7232#section-2.1&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">如果响应具有 &lt;code&gt;ETag&lt;/code&gt; 标头，则使ETag变弱以符合&lt;a href=&quot;https://tools.ietf.org/html/rfc7232.html#section-2.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 7232＃section-2.1的要求&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="704a6e7c4c31475b433de2a9afeccf1e10be5b91" translate="yes" xml:space="preserve">
          <source>If the resulting value is callable, it is called with no arguments. The result of the call becomes the template value.</source>
          <target state="translated">如果产生的值是可调用的,则调用时不含参数。调用的结果成为模板值。</target>
        </trans-unit>
        <trans-unit id="89fff7515bba7259d533e340af1d28df5122f23c" translate="yes" xml:space="preserve">
          <source>If the server is not running start it like so:</source>
          <target state="translated">如果服务器没有运行,就像这样启动它。</target>
        </trans-unit>
        <trans-unit id="d395fb88fed3efa1c3c52eced6fa03546c8e9385" translate="yes" xml:space="preserve">
          <source>If the signature or value have been altered in any way, a &lt;code&gt;django.core.signing.BadSignature&lt;/code&gt; exception will be raised:</source>
          <target state="translated">如果签名或值有任何更改，将引发 &lt;code&gt;django.core.signing.BadSignature&lt;/code&gt; 异常：</target>
        </trans-unit>
        <trans-unit id="68d86086636afed31f5e8b83119b391c11676938" translate="yes" xml:space="preserve">
          <source>If the source and target models differ, the following fields are generated:</source>
          <target state="translated">如果源模型和目标模型不同,则会生成以下字段。</target>
        </trans-unit>
        <trans-unit id="633ef4f9d4e293110218b0b09a566215a2bdf55e" translate="yes" xml:space="preserve">
          <source>If the string contains exactly one unnamed placeholder, you can interpolate directly with the &lt;code&gt;number&lt;/code&gt; argument:</source>
          <target state="translated">如果字符串恰好包含一个未命名的占位符，则可以直接使用 &lt;code&gt;number&lt;/code&gt; 参数进行插值：</target>
        </trans-unit>
        <trans-unit id="77f538b0c255912dbe9364dbf7280961b4996b22" translate="yes" xml:space="preserve">
          <source>If the string given is a method of the model, &lt;code&gt;ModelAdmin&lt;/code&gt; or a callable that returns True or False Django will display a pretty &amp;ldquo;on&amp;rdquo; or &amp;ldquo;off&amp;rdquo; icon if you give the method a &lt;code&gt;boolean&lt;/code&gt; attribute whose value is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">如果给定的字符串是模型的方法，则如果您为该方法赋予值 &lt;code&gt;True&lt;/code&gt; 的 &lt;code&gt;boolean&lt;/code&gt; 属性，则 &lt;code&gt;ModelAdmin&lt;/code&gt; 或返回True或False的callable Django将显示漂亮的&amp;ldquo; on&amp;rdquo;或&amp;ldquo; off&amp;rdquo;图标。</target>
        </trans-unit>
        <trans-unit id="d24a764d1bded8d74681dd2025af0d5bc9819ce3" translate="yes" xml:space="preserve">
          <source>If the string given is a method of the model, &lt;code&gt;ModelAdmin&lt;/code&gt; or a callable, Django will HTML-escape the output by default. To escape user input and allow your own unescaped tags, use &lt;a href=&quot;../../utils#django.utils.html.format_html&quot;&gt;&lt;code&gt;format_html()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果给定的字符串是模型的方法， &lt;code&gt;ModelAdmin&lt;/code&gt; 或可调用的，则Django默认将对输出进行HTML转义。要转义用户输入并允许您自己使用&lt;a href=&quot;../../utils#django.utils.html.format_html&quot;&gt; &lt;code&gt;format_html()&lt;/code&gt; &lt;/a&gt;转义的标记，请使用format_html（）。</target>
        </trans-unit>
        <trans-unit id="105660f9c8d885576c4d75b90c9c72dcdf558e17" translate="yes" xml:space="preserve">
          <source>If the table is very large and your queries mostly target a subset of rows, it may be useful to restrict an index to that subset. Specify a condition as a &lt;a href=&quot;querysets#django.db.models.Q&quot;&gt;&lt;code&gt;Q&lt;/code&gt;&lt;/a&gt;. For example, &lt;code&gt;condition=Q(pages__gt=400)&lt;/code&gt; indexes records with more than 400 pages.</source>
          <target state="translated">如果表很大，并且您的查询主要针对行的子集，则将索引限制为该子集可能很有​​用。指定条件为&lt;a href=&quot;querysets#django.db.models.Q&quot;&gt; &lt;code&gt;Q&lt;/code&gt; &lt;/a&gt;。例如， &lt;code&gt;condition=Q(pages__gt=400)&lt;/code&gt; 索引具有超过400页的记录。</target>
        </trans-unit>
        <trans-unit id="daab90a7c3bc9cf977eae52e7797b86c2df0f84b" translate="yes" xml:space="preserve">
          <source>If the template has already been rendered, the callback will be invoked immediately.</source>
          <target state="translated">如果模板已经被渲染,回调将被立即调用。</target>
        </trans-unit>
        <trans-unit id="335267b2f6f5eff3146781e1f8c7c684e000fea5" translate="yes" xml:space="preserve">
          <source>If the template is instantiated directly rather than through a template loader, this is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">如果模板是直接实例化而不是通过模板加载器实例化，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="390b626866eea7efc24acb7e8d97d6da5d385595" translate="yes" xml:space="preserve">
          <source>If the template is instantiated directly rather than through a template loader, this is a string value of &lt;code&gt;&amp;lt;unknown_source&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">如果模板是直接实例化而不是通过模板加载器实例化，则这是 &lt;code&gt;&amp;lt;unknown_source&amp;gt;&lt;/code&gt; 的字符串值。</target>
        </trans-unit>
        <trans-unit id="f97ee8abfbc218db701614dc037ecbee79227cd2" translate="yes" xml:space="preserve">
          <source>If the tests ran correctly, you should see one failure corresponding to the test method we added, with this error:</source>
          <target state="translated">如果测试运行正常,你应该看到有一个失败,对应我们添加的测试方法,有这个错误。</target>
        </trans-unit>
        <trans-unit id="7c48045bec5e6654cb74a0ee34255333da0859d4" translate="yes" xml:space="preserve">
          <source>If the user is logged in, execute the view normally. The view code is free to assume the user is logged in.</source>
          <target state="translated">如果用户已登录,则正常执行视图。视图代码可以自由地假设用户已登录。</target>
        </trans-unit>
        <trans-unit id="d79847842ff72b1b58e1003ad0d867e4b7832fce" translate="yes" xml:space="preserve">
          <source>If the user is logged in, is a staff member (&lt;code&gt;User.is_staff=True&lt;/code&gt;), and is active (&lt;code&gt;User.is_active=True&lt;/code&gt;), execute the view normally.</source>
          <target state="translated">如果用户已登录，并且是工作人员（ &lt;code&gt;User.is_staff=True&lt;/code&gt; ）并且处于活动状态（ &lt;code&gt;User.is_active=True&lt;/code&gt; ），请正常执行视图。</target>
        </trans-unit>
        <trans-unit id="a84a442ecadb3f93afb7b132ac6a3edff540cf78" translate="yes" xml:space="preserve">
          <source>If the user isn&amp;rsquo;t logged in, redirect to &lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt;&lt;code&gt;settings.LOGIN_URL&lt;/code&gt;&lt;/a&gt;, passing the current absolute path in the query string. Example: &lt;code&gt;/accounts/login/?next=/polls/3/&lt;/code&gt;.</source>
          <target state="translated">如果用户未登录，请重定向到&lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt; &lt;code&gt;settings.LOGIN_URL&lt;/code&gt; &lt;/a&gt;，在查询字符串中传递当前的绝对路径。例如： &lt;code&gt;/accounts/login/?next=/polls/3/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1dae3ed09b6ca9b76e7ec5b0d3c3054584ffd95a" translate="yes" xml:space="preserve">
          <source>If the value of &amp;ldquo;Date published&amp;rdquo; doesn&amp;rsquo;t match the time when you created the question in &lt;a href=&quot;tutorial01&quot;&gt;Tutorial 1&lt;/a&gt;, it probably means you forgot to set the correct value for the &lt;a href=&quot;../ref/settings#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt; setting. Change it, reload the page and check that the correct value appears.</source>
          <target state="translated">如果&amp;ldquo;发布日期&amp;rdquo;的值与在&lt;a href=&quot;tutorial01&quot;&gt;教程1中&lt;/a&gt;创建问题的时间不匹配，则可能意味着您忘记为&lt;a href=&quot;../ref/settings#std:setting-TIME_ZONE&quot;&gt; &lt;code&gt;TIME_ZONE&lt;/code&gt; &lt;/a&gt;设置设置了正确的值。更改它，重新加载页面并检查是否显示正确的值。</target>
        </trans-unit>
        <trans-unit id="6ec7d3427ae03d948878d8a5e1e5725c95509eed" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;max_num&lt;/code&gt; is greater than the number of existing items in the initial data, up to &lt;code&gt;extra&lt;/code&gt; additional blank forms will be added to the formset, so long as the total number of forms does not exceed &lt;code&gt;max_num&lt;/code&gt;. For example, if &lt;code&gt;extra=2&lt;/code&gt; and &lt;code&gt;max_num=2&lt;/code&gt; and the formset is initialized with one &lt;code&gt;initial&lt;/code&gt; item, a form for the initial item and one blank form will be displayed.</source>
          <target state="translated">如果 &lt;code&gt;max_num&lt;/code&gt; 的值大于初始数据中现有项目的数量，则只要表单总数不超过 &lt;code&gt;max_num&lt;/code&gt; ，最多会将 &lt;code&gt;extra&lt;/code&gt; 空白表单添加到表单集。例如，如果 &lt;code&gt;extra=2&lt;/code&gt; 和 &lt;code&gt;max_num=2&lt;/code&gt; 并且用一个 &lt;code&gt;initial&lt;/code&gt; 项初始化表单集，则将显示该初始项的表单和一个空白表单。</target>
        </trans-unit>
        <trans-unit id="1e45aed9df9aac2846d0bcfef80483bef9bd6ac8" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;max_num&lt;/code&gt; is greater than the number of existing related objects, up to &lt;code&gt;extra&lt;/code&gt; additional blank forms will be added to the formset, so long as the total number of forms does not exceed &lt;code&gt;max_num&lt;/code&gt;:</source>
          <target state="translated">如果 &lt;code&gt;max_num&lt;/code&gt; 的值大于现有相关对象的数量，则只要表单总数不超过 &lt;code&gt;max_num&lt;/code&gt; ，最多会将 &lt;code&gt;extra&lt;/code&gt; 空白表单添加到表单集：</target>
        </trans-unit>
        <trans-unit id="dda283897bebb404083b05a40ab1c2c6cb7b8001" translate="yes" xml:space="preserve">
          <source>If the value of a field is &lt;code&gt;None&lt;/code&gt;, an empty string, or an iterable without elements, Django will display &lt;code&gt;-&lt;/code&gt; (a dash). You can override this with &lt;a href=&quot;#django.contrib.admin.AdminSite.empty_value_display&quot;&gt;&lt;code&gt;AdminSite.empty_value_display&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果字段的值为 &lt;code&gt;None&lt;/code&gt; ，空字符串或没有元素的可迭代项，则Django将显示 &lt;code&gt;-&lt;/code&gt; （破折号）。您可以使用&lt;a href=&quot;#django.contrib.admin.AdminSite.empty_value_display&quot;&gt; &lt;code&gt;AdminSite.empty_value_display&lt;/code&gt; &lt;/a&gt;覆盖它：</target>
        </trans-unit>
        <trans-unit id="2a6040be557d2f8f3ea8136a3c4eb78cc78f35eb" translate="yes" xml:space="preserve">
          <source>If the value of a parameter is &lt;code&gt;True&lt;/code&gt; (exactly &lt;code&gt;True&lt;/code&gt;, not just a true value), only the parameter name is added to the header.</source>
          <target state="translated">如果参数的值为 &lt;code&gt;True&lt;/code&gt; （恰好为 &lt;code&gt;True&lt;/code&gt; ，而不仅仅是一个True值），则仅将参数名称添加到标题中。</target>
        </trans-unit>
        <trans-unit id="5382b4646a0aea7fd71c163665e2667aa6200bdb" translate="yes" xml:space="preserve">
          <source>If the variable raises an exception when called, the exception will be propagated, unless the exception has an attribute &lt;code&gt;silent_variable_failure&lt;/code&gt; whose value is &lt;code&gt;True&lt;/code&gt;. If the exception &lt;em&gt;does&lt;/em&gt; have a &lt;code&gt;silent_variable_failure&lt;/code&gt; attribute whose value is &lt;code&gt;True&lt;/code&gt;, the variable will render as the value of the engine&amp;rsquo;s &lt;code&gt;string_if_invalid&lt;/code&gt; configuration option (an empty string, by default). Example:</source>
          <target state="translated">如果该变量在调用时引发异常，则该异常将被传播，除非该异常的属性 &lt;code&gt;silent_variable_failure&lt;/code&gt; 其值为 &lt;code&gt;True&lt;/code&gt; 。如果异常&lt;em&gt;确实&lt;/em&gt;具有值为 &lt;code&gt;True&lt;/code&gt; 的 &lt;code&gt;silent_variable_failure&lt;/code&gt; 属性，则该变量将呈现为引擎的 &lt;code&gt;string_if_invalid&lt;/code&gt; 配置选项的值（默认为空字符串）。例：</target>
        </trans-unit>
        <trans-unit id="1312957734ba11c680e8012938eacebc58dee1ff" translate="yes" xml:space="preserve">
          <source>If the variable you want to hide is also a function argument (e.g. &amp;lsquo;&lt;code&gt;user&lt;/code&gt;&amp;rsquo; in the following example), and if the decorated function has multiple decorators, then make sure to place &lt;code&gt;@sensitive_variables&lt;/code&gt; at the top of the decorator chain. This way it will also hide the function argument as it gets passed through the other decorators:</source>
          <target state="translated">如果要隐藏的变量也是函数参数（例如，在下面的示例中为&amp;ldquo; &lt;code&gt;user&lt;/code&gt; &amp;rdquo;），并且如果修饰的函数具有多个修饰符，则请确保将 &lt;code&gt;@sensitive_variables&lt;/code&gt; 放置在修饰符链的顶部。这样，当它通过其他装饰器传递时，它还将隐藏函数参数：</target>
        </trans-unit>
        <trans-unit id="d4cc6c88236085ea8a9c1a17ca851862c50d53fd" translate="yes" xml:space="preserve">
          <source>If the view is accessed from a &lt;code&gt;GET&lt;/code&gt; request, an object list is returned in the response (using the &lt;code&gt;book_list.html&lt;/code&gt; template). But if the client issues a &lt;code&gt;HEAD&lt;/code&gt; request, the response has an empty body and the &lt;code&gt;Last-Modified&lt;/code&gt; header indicates when the most recent book was published. Based on this information, the client may or may not download the full object list.</source>
          <target state="translated">如果从 &lt;code&gt;GET&lt;/code&gt; 请求访问视图，则在响应中返回一个对象列表（使用 &lt;code&gt;book_list.html&lt;/code&gt; 模板）。但是，如果客户端发出 &lt;code&gt;HEAD&lt;/code&gt; 请求，则响应的主体为空，并且 &lt;code&gt;Last-Modified&lt;/code&gt; 标头指示最新书籍的发布时间。根据此信息，客户端可能会也可能不会下载完整的对象列表。</target>
        </trans-unit>
        <trans-unit id="525749ea81e916d0079819f9669b95d8583c62ff" translate="yes" xml:space="preserve">
          <source>If the view was called with a HTTP method it doesn&amp;rsquo;t support, this method is called instead.</source>
          <target state="translated">如果使用不支持的HTTP方法调用该视图，则改为调用此方法。</target>
        </trans-unit>
        <trans-unit id="fe60eb379813b7555e5b0588046322369833bdf6" translate="yes" xml:space="preserve">
          <source>If there are a few pages on your site that should be available over HTTP, and not redirected to HTTPS, you can list regular expressions to match those URLs in the &lt;a href=&quot;settings#std:setting-SECURE_REDIRECT_EXEMPT&quot;&gt;&lt;code&gt;SECURE_REDIRECT_EXEMPT&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">如果您的站点上有一些页面应该通过HTTP可用，而不重定向到HTTPS，则可以在&lt;a href=&quot;settings#std:setting-SECURE_REDIRECT_EXEMPT&quot;&gt; &lt;code&gt;SECURE_REDIRECT_EXEMPT&lt;/code&gt; &lt;/a&gt;设置中列出正则表达式以匹配这些URL 。</target>
        </trans-unit>
        <trans-unit id="a06f663d9a920b6dd71a5fd7a5b30d2f53179a52" translate="yes" xml:space="preserve">
          <source>If there are a large number of pizzas, this queryset performs better than:</source>
          <target state="translated">如果有大量的披萨,这个查询集的性能比。</target>
        </trans-unit>
        <trans-unit id="58361dc72d9b28ac6f97a44739dee9fe240ef3e8" translate="yes" xml:space="preserve">
          <source>If there are any circular dependencies in the &lt;a href=&quot;../../ref/settings#std:setting-TEST_DEPENDENCIES&quot;&gt;&lt;code&gt;DEPENDENCIES&lt;/code&gt;&lt;/a&gt; definition, an &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt;&lt;code&gt;ImproperlyConfigured&lt;/code&gt;&lt;/a&gt; exception will be raised.</source>
          <target state="translated">如果&lt;a href=&quot;../../ref/settings#std:setting-TEST_DEPENDENCIES&quot;&gt; &lt;code&gt;DEPENDENCIES&lt;/code&gt; &lt;/a&gt;定义中有任何循环依赖项，则将引发&lt;a href=&quot;../../ref/exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt; &lt;code&gt;ImproperlyConfigured&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="c15c84390ee375a9adefe2ee02e23a4311d73646" translate="yes" xml:space="preserve">
          <source>If there are any rings within this geometry that have not been closed, this routine will do so by adding the starting point to the end:</source>
          <target state="translated">如果在这个几何体内有任何环没有被封闭,这个例程将通过将起点加到终点来实现。</target>
        </trans-unit>
        <trans-unit id="036865303d893103f1a82fb50cc8915eb290e5a5" translate="yes" xml:space="preserve">
          <source>If there are foreseeable error conditions that may occur while running your action, you should gracefully inform the user of the problem. This means handling exceptions and using &lt;a href=&quot;index#django.contrib.admin.ModelAdmin.message_user&quot;&gt;&lt;code&gt;django.contrib.admin.ModelAdmin.message_user()&lt;/code&gt;&lt;/a&gt; to display a user friendly description of the problem in the response.</source>
          <target state="translated">如果在执行操作时可能发生可预见的错误情况，则应妥善告知用户该问题。这意味着处理异常并使用&lt;a href=&quot;index#django.contrib.admin.ModelAdmin.message_user&quot;&gt; &lt;code&gt;django.contrib.admin.ModelAdmin.message_user()&lt;/code&gt; &lt;/a&gt;在响应中显示问题的用户友好描述。</target>
        </trans-unit>
        <trans-unit id="951293bc34387f5cb268cf92d7536a2c32d0ad81" translate="yes" xml:space="preserve">
          <source>If there are nested namespaces, these steps are repeated for each part of the namespace until only the view name is unresolved. The view name will then be resolved into a URL in the namespace that has been found.</source>
          <target state="translated">如果有嵌套的命名空间,则对命名空间的每个部分重复这些步骤,直到只有视图名称未被解析。然后,视图名称将被解析为已找到的命名空间中的一个 URL。</target>
        </trans-unit>
        <trans-unit id="018686731469965487e7387f2655be540539d013" translate="yes" xml:space="preserve">
          <source>If there are test failures, however, you&amp;rsquo;ll see full details about which tests failed:</source>
          <target state="translated">但是，如果有测试失败，您将看到有关哪些测试失败的完整详细信息：</target>
        </trans-unit>
        <trans-unit id="33090b22c578cdbfc10a5466d23820158dc57c7e" translate="yes" xml:space="preserve">
          <source>If there is a current application defined, Django finds and returns the URL resolver for that instance. The current application can be specified with the &lt;code&gt;current_app&lt;/code&gt; argument to the &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">如果定义了当前应用程序，则Django查找并返回该实例的URL解析器。可以使用&lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt;函数的 &lt;code&gt;current_app&lt;/code&gt; 参数指定当前应用程序。</target>
        </trans-unit>
        <trans-unit id="cad92f90be1997903d0e603c48aaadf781898139" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;default_app_config&lt;/code&gt;, Django uses the base &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">如果没有 &lt;code&gt;default_app_config&lt;/code&gt; ，则Django使用基本的&lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="b29aa4916d0907d63149e49df881a7730b345911" translate="yes" xml:space="preserve">
          <source>If there is no current application, Django looks for a default application instance. The default application instance is the instance that has an &lt;a href=&quot;#term-instance-namespace&quot;&gt;instance namespace&lt;/a&gt; matching the &lt;a href=&quot;#term-application-namespace&quot;&gt;application namespace&lt;/a&gt; (in this example, an instance of &lt;code&gt;polls&lt;/code&gt; called &lt;code&gt;'polls'&lt;/code&gt;).</source>
          <target state="translated">如果没有当前应用程序，则Django将查找默认应用程序实例。默认的应用程序实例是具有与&lt;a href=&quot;#term-application-namespace&quot;&gt;应用程序名称&lt;/a&gt;&lt;a href=&quot;#term-instance-namespace&quot;&gt;空间&lt;/a&gt;匹配的实例名称空间的实例（在此示例中，名为 &lt;code&gt;'polls'&lt;/code&gt; 的 &lt;code&gt;polls&lt;/code&gt; 的实例）。</target>
        </trans-unit>
        <trans-unit id="3196de7f2aa2fe23e2168314d2dfd5664d611802" translate="yes" xml:space="preserve">
          <source>If there is no current instance - say, if we were rendering a page somewhere else on the site - &lt;code&gt;'polls:index'&lt;/code&gt; will resolve to the last registered instance of &lt;code&gt;polls&lt;/code&gt;. Since there is no default instance (instance namespace of &lt;code&gt;'polls'&lt;/code&gt;), the last instance of &lt;code&gt;polls&lt;/code&gt; that is registered will be used. This would be &lt;code&gt;'publisher-polls'&lt;/code&gt; since it&amp;rsquo;s declared last in the &lt;code&gt;urlpatterns&lt;/code&gt;.</source>
          <target state="translated">如果没有当前实例（例如，如果我们正在网站上其他地方渲染页面），则 &lt;code&gt;'polls:index'&lt;/code&gt; 将解析为上次注册的 &lt;code&gt;polls&lt;/code&gt; 实例。由于没有默认实例（ &lt;code&gt;'polls'&lt;/code&gt; 的实例名称空间），因此将使用已注册的 &lt;code&gt;polls&lt;/code&gt; 的最后一个实例。这将是 &lt;code&gt;'publisher-polls'&lt;/code&gt; 因为它是在 &lt;code&gt;urlpatterns&lt;/code&gt; 中最后声明的。</target>
        </trans-unit>
        <trans-unit id="756f0b4c6a33908e3c22386f366fc70b18420a5b" translate="yes" xml:space="preserve">
          <source>If there is no default application instance, Django will pick the last deployed instance of the application, whatever its instance name may be.</source>
          <target state="translated">如果没有默认的应用实例,Django会选择最后部署的应用实例,不管它的实例名称是什么。</target>
        </trans-unit>
        <trans-unit id="a6bc41190ec33fed228db9ca9e2271ec22fd151d" translate="yes" xml:space="preserve">
          <source>If there is no headerlist stored, the page needs to be rebuilt, so this function returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">如果没有存储头列表，则需要重建页面，因此此函数返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b205d7e5d58e03b8f42ec69b13b892b65de8d30c" translate="yes" xml:space="preserve">
          <source>If there were also a default instance - i.e., an instance named &lt;code&gt;'polls'&lt;/code&gt; - the only change from above would be in the case where there is no current instance (the second item in the list above). In this case &lt;code&gt;'polls:index'&lt;/code&gt; would resolve to the index page of the default instance instead of the instance declared last in &lt;code&gt;urlpatterns&lt;/code&gt;.</source>
          <target state="translated">如果还存在一个默认实例（即名为 &lt;code&gt;'polls'&lt;/code&gt; 的实例），则唯一的变化就是没有当前实例（上面列表中的第二项）。在这种情况下， &lt;code&gt;'polls:index'&lt;/code&gt; 将解析为默认实例的索引页，而不是 &lt;code&gt;urlpatterns&lt;/code&gt; 中最后声明的实例。</target>
        </trans-unit>
        <trans-unit id="1bc101bd73deeb1cf516281ef037ef748d979a37" translate="yes" xml:space="preserve">
          <source>If these aren&amp;rsquo;t enough to generate the SQL you need:</source>
          <target state="translated">如果这些还不足以生成SQL，则需要：</target>
        </trans-unit>
        <trans-unit id="5e71fd6c24627701d76d95f4ee851ac2352deca4" translate="yes" xml:space="preserve">
          <source>If these parameters already have the correct values, Django won&amp;rsquo;t set them for every new connection, which improves performance slightly. You can configure them directly in &lt;code&gt;postgresql.conf&lt;/code&gt; or more conveniently per database user with &lt;a href=&quot;https://www.postgresql.org/docs/current/sql-alterrole.html&quot;&gt;ALTER ROLE&lt;/a&gt;.</source>
          <target state="translated">如果这些参数已经具有正确的值，则Django不会为每个新连接设置它们，这会稍微提高性能。您可以直接在 &lt;code&gt;postgresql.conf&lt;/code&gt; 中配置它们，或者使用&lt;a href=&quot;https://www.postgresql.org/docs/current/sql-alterrole.html&quot;&gt;ALTER ROLE为&lt;/a&gt;每个数据库用户更方便地配置它们。</target>
        </trans-unit>
        <trans-unit id="8d05d3185d1dac94d8dadaa8fa6fec4ba26f14ae" translate="yes" xml:space="preserve">
          <source>If this app&amp;rsquo;s URLconf is included into the project&amp;rsquo;s URLconf under a path such as this:</source>
          <target state="translated">如果此应用程序的URLconf被包含在项目的URLconf中，例如以下路径：</target>
        </trans-unit>
        <trans-unit id="db3b489bf675bc83e9e833fb2c11bf0ec0e3584a" translate="yes" xml:space="preserve">
          <source>If this approach becomes too slow, you can add a &lt;code&gt;SearchVectorField&lt;/code&gt; to your model. You&amp;rsquo;ll need to keep it populated with triggers, for example, as described in the &lt;a href=&quot;https://www.postgresql.org/docs/current/textsearch-features.html#TEXTSEARCH-UPDATE-TRIGGERS&quot;&gt;PostgreSQL documentation&lt;/a&gt;. You can then query the field as if it were an annotated &lt;code&gt;SearchVector&lt;/code&gt;:</source>
          <target state="translated">如果此方法变得太慢，则可以将 &lt;code&gt;SearchVectorField&lt;/code&gt; 添加到模型中。例如，您需要使用触发器来填充它，如&lt;a href=&quot;https://www.postgresql.org/docs/current/textsearch-features.html#TEXTSEARCH-UPDATE-TRIGGERS&quot;&gt;PostgreSQL文档中所述&lt;/a&gt;。然后，您可以查询该字段，就像它是带注释的 &lt;code&gt;SearchVector&lt;/code&gt; 一样：</target>
        </trans-unit>
        <trans-unit id="a0a2e48175c412228e4e7ff2cbf177425c036e1a" translate="yes" xml:space="preserve">
          <source>If this attribute is set to &lt;code&gt;True&lt;/code&gt;, a &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.PermissionDenied&quot;&gt;&lt;code&gt;PermissionDenied&lt;/code&gt;&lt;/a&gt; exception is raised when the conditions are not met. When &lt;code&gt;False&lt;/code&gt; (the default), anonymous users are redirected to the login page.</source>
          <target state="translated">如果将此属性设置为 &lt;code&gt;True&lt;/code&gt; ，则在不满足条件时会引发&lt;a href=&quot;../../ref/exceptions#django.core.exceptions.PermissionDenied&quot;&gt; &lt;code&gt;PermissionDenied&lt;/code&gt; &lt;/a&gt;异常。如果为 &lt;code&gt;False&lt;/code&gt; （默认值），则匿名用户将重定向到登录页面。</target>
        </trans-unit>
        <trans-unit id="ea6a57da3a6226d105def8abb17cde5efd3edbc8" translate="yes" xml:space="preserve">
          <source>If this behavior is problematic (such as when using signals to send an email whenever a model is saved), pass a unique identifier as the &lt;code&gt;dispatch_uid&lt;/code&gt; argument to identify your receiver function. This identifier will usually be a string, although any hashable object will suffice. The end result is that your receiver function will only be bound to the signal once for each unique &lt;code&gt;dispatch_uid&lt;/code&gt; value:</source>
          <target state="translated">如果此行为有问题（例如在保存模型时使用信号发送电子邮件），请传递唯一标识符作为 &lt;code&gt;dispatch_uid&lt;/code&gt; 参数来标识您的接收器功能。该标识符通常是一个字符串，尽管任何可哈希对象都足够。最终结果是，对于每个唯一的 &lt;code&gt;dispatch_uid&lt;/code&gt; 值，您的接收器函数将仅与信号绑定一次：</target>
        </trans-unit>
        <trans-unit id="168754e6d80f99f11f4410d20c99b6a0e1c4fca4" translate="yes" xml:space="preserve">
          <source>If this exception is raised during the execution of a management command from a command line console, it will be caught and turned into a nicely-printed error message to the appropriate output stream (i.e., stderr); as a result, raising this exception (with a sensible description of the error) is the preferred way to indicate that something has gone wrong in the execution of a command.</source>
          <target state="translated">如果在从命令行控制台执行管理命令的过程中引发了这个异常,那么它将被捕获,并变成一个打印得很好的错误信息发送到相应的输出流(即stderr);因此,引发这个异常(带有合理的错误描述)是表明命令执行过程中出错的首选方式。</target>
        </trans-unit>
        <trans-unit id="798fc22e4b1c1c4ae674a16bd8671bd98591463c" translate="yes" xml:space="preserve">
          <source>If this exception is raised during the execution of a management command from a command line console, it will be caught and turned into a nicely-printed error message to the appropriate output stream (i.e., stderr); as a result, raising this exception (with a sensible description of the error) is the preferred way to indicate that something has gone wrong in the execution of a command. It accepts the optional &lt;code&gt;returncode&lt;/code&gt; argument to customize the exit status for the management command to exit with, using &lt;a href=&quot;https://docs.python.org/3/library/sys.html#sys.exit&quot;&gt;&lt;code&gt;sys.exit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果在从命令行控制台执行管理命令的过程中引发了此异常，则将捕获该异常并将其转换为正确输出的错误消息，并将其转换为适当的输出流（例如stderr）；结果，引发此异常（对错误进行明智的描述）是指示执行命令时出现错误的首选方法。它使用&lt;a href=&quot;https://docs.python.org/3/library/sys.html#sys.exit&quot;&gt; &lt;code&gt;sys.exit()&lt;/code&gt; &lt;/a&gt;接受可选的 &lt;code&gt;returncode&lt;/code&gt; 参数，以自定义退出状态以供管理命令退出。</target>
        </trans-unit>
        <trans-unit id="5121ccc468599203cdf2f41680528f512f5238b0" translate="yes" xml:space="preserve">
          <source>If this is set to &lt;code&gt;False&lt;/code&gt;, accessing a related object that doesn&amp;rsquo;t exist will raise its &lt;code&gt;DoesNotExist&lt;/code&gt; exception.</source>
          <target state="translated">如果将其设置为 &lt;code&gt;False&lt;/code&gt; ，则访问不存在的相关对象将引发其 &lt;code&gt;DoesNotExist&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="2d8f6dac00928c49d28b754a31e0c9229145c79e" translate="yes" xml:space="preserve">
          <source>If this is your first time using Django, you&amp;rsquo;ll have to take care of some initial setup. Namely, you&amp;rsquo;ll need to auto-generate some code that establishes a Django &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/glossary/#term-project&quot;&gt;project&lt;/a&gt; &amp;ndash; a collection of settings for an instance of Django, including database configuration, Django-specific options and application-specific settings.</source>
          <target state="translated">如果这是您第一次使用Django，则必须进行一些初始设置。即，您将需要自动生成一些代码来建立Django &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/glossary/#term-project&quot;&gt;项目&lt;/a&gt; -Django实例的一组设置，包括数据库配置，特定于Django的选项和特定于应用程序的设置。</target>
        </trans-unit>
        <trans-unit id="1154664032050539d3d00f427dd841fb2ced2f41" translate="yes" xml:space="preserve">
          <source>If this is your first time using Django, you&amp;rsquo;ll have to take care of some initial setup. Namely, you&amp;rsquo;ll need to auto-generate some code that establishes a Django &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/glossary/#term-project&quot;&gt;project&lt;/a&gt; &amp;ndash; a collection of settings for an instance of Django, including database configuration, Django-specific options and application-specific settings.</source>
          <target state="translated">如果这是您第一次使用Django，则必须进行一些初始设置。即，您将需要自动生成一些代码来建立Django&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/glossary/#term-project&quot;&gt;项目&lt;/a&gt;-Django实例的一组设置，包括数据库配置，特定于Django的选项和特定于应用程序的设置。</target>
        </trans-unit>
        <trans-unit id="be1b7e4acd8d0cb9dde67da29afd40808b1e50d6" translate="yes" xml:space="preserve">
          <source>If this isn&amp;rsquo;t given or is &lt;code&gt;None&lt;/code&gt;, you&amp;rsquo;ll get operating-system dependent behavior. On most platforms, temporary files will have a mode of &lt;code&gt;0o600&lt;/code&gt;, and files saved from memory will be saved using the system&amp;rsquo;s standard umask.</source>
          <target state="translated">如果未给出或为 &lt;code&gt;None&lt;/code&gt; ，则将获得依赖于操作系统的行为。在大多数平台上，临时文件的模式为 &lt;code&gt;0o600&lt;/code&gt; ，而从内存中保存的文件将使用系统的标准umask保存。</target>
        </trans-unit>
        <trans-unit id="f463269eb88c1b3ee3a234d7c03dfce4134a153f" translate="yes" xml:space="preserve">
          <source>If this isn&amp;rsquo;t given, Django will use &lt;a href=&quot;#django.db.models.Options.verbose_name&quot;&gt;&lt;code&gt;verbose_name&lt;/code&gt;&lt;/a&gt; + &lt;code&gt;&quot;s&quot;&lt;/code&gt;.</source>
          <target state="translated">如果没有给出，Django将使用&lt;a href=&quot;#django.db.models.Options.verbose_name&quot;&gt; &lt;code&gt;verbose_name&lt;/code&gt; &lt;/a&gt; + &lt;code&gt;&quot;s&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73b98905cd565580c0b7cdd5b5b3c194b7edc1e0" translate="yes" xml:space="preserve">
          <source>If this isn&amp;rsquo;t given, Django will use a munged version of the class name: &lt;code&gt;CamelCase&lt;/code&gt; becomes &lt;code&gt;camel case&lt;/code&gt;.</source>
          <target state="translated">如果未给出，则Django将使用该类名称的修改版本： &lt;code&gt;CamelCase&lt;/code&gt; 成为 &lt;code&gt;camel case&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee5e3c28a977fe38b4bf893b8d5bd1cfcc581da9" translate="yes" xml:space="preserve">
          <source>If this isn&amp;rsquo;t provided, the Django admin will use the model&amp;rsquo;s default ordering.</source>
          <target state="translated">如果未提供此选项，则Django管理员将使用模型的默认顺序。</target>
        </trans-unit>
        <trans-unit id="204cd62fbe95eddcc429e1cf499ecc20b6269794" translate="yes" xml:space="preserve">
          <source>If this last CSS definition were to be rendered, it would become the following HTML:</source>
          <target state="translated">如果渲染最后一个CSS定义,就会变成下面的HTML。</target>
        </trans-unit>
        <trans-unit id="03956128530b9f0fcadffe8423761387cbfdf376" translate="yes" xml:space="preserve">
          <source>If this looks correct, run &lt;a href=&quot;../../django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; to create this table in the database:</source>
          <target state="translated">如果看起来正确，请运行&lt;a href=&quot;../../django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;以在数据库中创建此表：</target>
        </trans-unit>
        <trans-unit id="214efc0b3c62bb58b19ca86ac2cf1be69388e8d4" translate="yes" xml:space="preserve">
          <source>If this method is defined on a storage, it&amp;rsquo;s called by the &lt;a href=&quot;#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; management command after each run and gets passed the local storages and paths of found files as a dictionary, as well as the command line options. It yields tuples of three values: &lt;code&gt;original_path, processed_path, processed&lt;/code&gt;. The path values are strings and &lt;code&gt;processed&lt;/code&gt; is a boolean indicating whether or not the value was post-processed, or an exception if post-processing failed.</source>
          <target state="translated">如果此方法是在存储上定义的，则每次运行后由&lt;a href=&quot;#django-admin-collectstatic&quot;&gt; &lt;code&gt;collectstatic&lt;/code&gt; &lt;/a&gt;管理命令调用，并通过本地存储和找到的文件的路径作为字典以及命令行选项来传递。它产生三个值的元组： &lt;code&gt;original_path, processed_path, processed&lt;/code&gt; 。路径值是字符串，并且已 &lt;code&gt;processed&lt;/code&gt; 是一个布尔值，指示该值是否已被后处理；如果后处理失败，则为异常。</target>
        </trans-unit>
        <trans-unit id="78f9e31a35c14f187c486666943c82fca263c677" translate="yes" xml:space="preserve">
          <source>If this option is provided, models are also created for database views.</source>
          <target state="translated">如果提供了这个选项,也会为数据库视图创建模型。</target>
        </trans-unit>
        <trans-unit id="d949b49e534243e5950667398078494f92cad676" translate="yes" xml:space="preserve">
          <source>If this option is provided, models are also created for partitions.</source>
          <target state="translated">如果提供了这个选项,也会为分区创建模型。</target>
        </trans-unit>
        <trans-unit id="cf5933056c3c4a4bab36f59eaaa0e7ba423fd575" translate="yes" xml:space="preserve">
          <source>If this processor is enabled, every &lt;code&gt;RequestContext&lt;/code&gt; will contain a variable &lt;code&gt;MEDIA_URL&lt;/code&gt;, providing the value of the &lt;a href=&quot;../settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">如果该处理器被使能，每隔 &lt;code&gt;RequestContext&lt;/code&gt; 将包含可变 &lt;code&gt;MEDIA_URL&lt;/code&gt; ，提供的值&lt;a href=&quot;../settings#std:setting-MEDIA_URL&quot;&gt; &lt;code&gt;MEDIA_URL&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="c3f669b44318076a8ac745b45b0e2b57ced4c0dd" translate="yes" xml:space="preserve">
          <source>If this processor is enabled, every &lt;code&gt;RequestContext&lt;/code&gt; will contain a variable &lt;code&gt;STATIC_URL&lt;/code&gt;, providing the value of the &lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">如果该处理器被使能，每隔 &lt;code&gt;RequestContext&lt;/code&gt; 将包含可变 &lt;code&gt;STATIC_URL&lt;/code&gt; ，提供的值&lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="b3627ab80c4912ed55e04ec73d8095f9410c0c92" translate="yes" xml:space="preserve">
          <source>If this processor is enabled, every &lt;code&gt;RequestContext&lt;/code&gt; will contain a variable &lt;code&gt;TIME_ZONE&lt;/code&gt;, providing the name of the currently active time zone.</source>
          <target state="translated">如果启用了此处理器，则每个 &lt;code&gt;RequestContext&lt;/code&gt; 将包含一个变量 &lt;code&gt;TIME_ZONE&lt;/code&gt; ，提供当前活动时区的名称。</target>
        </trans-unit>
        <trans-unit id="e14c9efdfe0e83e3c1193bc7da7c91988d833298" translate="yes" xml:space="preserve">
          <source>If this processor is enabled, every &lt;code&gt;RequestContext&lt;/code&gt; will contain a variable &lt;code&gt;request&lt;/code&gt;, which is the current &lt;a href=&quot;../request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果启用了此处理器，则每个 &lt;code&gt;RequestContext&lt;/code&gt; 将包含一个变量 &lt;code&gt;request&lt;/code&gt; ，即当前的&lt;a href=&quot;../request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dfffb710a2c53706e240b5d6768b0976050feb4c" translate="yes" xml:space="preserve">
          <source>If this processor is enabled, every &lt;code&gt;RequestContext&lt;/code&gt; will contain these two variables &amp;ndash; but only if your &lt;a href=&quot;../settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; setting is set to &lt;code&gt;True&lt;/code&gt; and the request&amp;rsquo;s IP address (&lt;code&gt;request.META['REMOTE_ADDR']&lt;/code&gt;) is in the &lt;a href=&quot;../settings#std:setting-INTERNAL_IPS&quot;&gt;&lt;code&gt;INTERNAL_IPS&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="translated">如果启用了此处理器，则每个 &lt;code&gt;RequestContext&lt;/code&gt; 都将包含以下两个变量-但仅当您的&lt;a href=&quot;../settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;设置设置为 &lt;code&gt;True&lt;/code&gt; 且请求的IP地址（ &lt;code&gt;request.META['REMOTE_ADDR']&lt;/code&gt; ）位于&lt;a href=&quot;../settings#std:setting-INTERNAL_IPS&quot;&gt; &lt;code&gt;INTERNAL_IPS&lt;/code&gt; &lt;/a&gt;设置中时：</target>
        </trans-unit>
        <trans-unit id="5f1b3b594560029b6edef85f4752d5ee49a66bb6" translate="yes" xml:space="preserve">
          <source>If this processor is enabled, every &lt;code&gt;RequestContext&lt;/code&gt; will contain these two variables:</source>
          <target state="translated">如果启用了此处理器，则每个 &lt;code&gt;RequestContext&lt;/code&gt; 将包含以下两个变量：</target>
        </trans-unit>
        <trans-unit id="6c99cf696c7be10586d5d490d5e348ad6994d715" translate="yes" xml:space="preserve">
          <source>If this processor is enabled, every &lt;code&gt;RequestContext&lt;/code&gt; will contain these variables:</source>
          <target state="translated">如果启用了此处理器，则每个 &lt;code&gt;RequestContext&lt;/code&gt; 将包含以下变量：</target>
        </trans-unit>
        <trans-unit id="74bf18d2eb713de82935d180fe41cd27d0c61d5c" translate="yes" xml:space="preserve">
          <source>If this still isn&amp;rsquo;t a good match, you can manually set the name of the context variable. The &lt;code&gt;context_object_name&lt;/code&gt; attribute on a generic view specifies the context variable to use:</source>
          <target state="translated">如果仍然不能很好地匹配，则可以手动设置上下文变量的名称。通用视图上的 &lt;code&gt;context_object_name&lt;/code&gt; 属性指定要使用的上下文变量：</target>
        </trans-unit>
        <trans-unit id="111885105b9365941fb05a9bc35108884dfcc593" translate="yes" xml:space="preserve">
          <source>If this value starts with a forward slash (&lt;code&gt;'/'&lt;/code&gt;) and you&amp;rsquo;re using MySQL, MySQL will connect via a Unix socket to the specified socket. For example:</source>
          <target state="translated">如果此值以正斜杠（ &lt;code&gt;'/'&lt;/code&gt; ）开头并且您正在使用MySQL，则MySQL将通过Unix套接字连接到指定的套接字。例如：</target>
        </trans-unit>
        <trans-unit id="687f9e38edf81cd2d25145c7b1294f723a108558" translate="yes" xml:space="preserve">
          <source>If this variable isn&amp;rsquo;t set, the default &lt;code&gt;asgi.py&lt;/code&gt; sets it to &lt;code&gt;mysite.settings&lt;/code&gt;, where &lt;code&gt;mysite&lt;/code&gt; is the name of your project.</source>
          <target state="translated">如果未设置此变量，则默认的 &lt;code&gt;asgi.py&lt;/code&gt; 会将其设置为 &lt;code&gt;mysite.settings&lt;/code&gt; ，其中 &lt;code&gt;mysite&lt;/code&gt; 是您的项目的名称。</target>
        </trans-unit>
        <trans-unit id="7763646c9a13213d2e42106763a322d405a3bd97" translate="yes" xml:space="preserve">
          <source>If this variable isn&amp;rsquo;t set, the default &lt;code&gt;wsgi.py&lt;/code&gt; sets it to &lt;code&gt;mysite.settings&lt;/code&gt;, where &lt;code&gt;mysite&lt;/code&gt; is the name of your project. That&amp;rsquo;s how &lt;a href=&quot;../../../ref/django-admin#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; discovers the default settings file by default.</source>
          <target state="translated">如果未设置此变量，则默认的 &lt;code&gt;wsgi.py&lt;/code&gt; 将其设置为 &lt;code&gt;mysite.settings&lt;/code&gt; ，其中 &lt;code&gt;mysite&lt;/code&gt; 是您的项目的名称。这就是&lt;a href=&quot;../../../ref/django-admin#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; &lt;/a&gt;默认情况下发现默认设置文件的方式。</target>
        </trans-unit>
        <trans-unit id="f5989aedec02f4ad2eba63dbf7a594f3d1537d24" translate="yes" xml:space="preserve">
          <source>If those conditions are met, Django will email the users listed in the &lt;a href=&quot;../ref/settings#std:setting-MANAGERS&quot;&gt;&lt;code&gt;MANAGERS&lt;/code&gt;&lt;/a&gt; setting whenever your code raises a 404 and the request has a referer. It doesn&amp;rsquo;t bother to email for 404s that don&amp;rsquo;t have a referer &amp;ndash; those are usually people typing in broken URLs or broken Web bots. It also ignores 404s when the referer is equal to the requested URL, since this behavior is from broken Web bots too.</source>
          <target state="translated">如果满足这些条件，则只要您的代码引发404并且请求具有引荐来源，Django就会向&lt;a href=&quot;../ref/settings#std:setting-MANAGERS&quot;&gt; &lt;code&gt;MANAGERS&lt;/code&gt; &lt;/a&gt;设置中列出的用户发送电子邮件。不用电子邮件发送没有推荐人的404，这些人通常是输入损坏的URL或损坏的Web bot的人。当引用者等于请求的URL时，它也会忽略404，因为此行为也来自损坏的Web机器人。</target>
        </trans-unit>
        <trans-unit id="a73c5cb2486718bdc78ebe8a3caef6b14a81e74a" translate="yes" xml:space="preserve">
          <source>If turning this to &lt;code&gt;True&lt;/code&gt; causes infinite redirects, it probably means your site is running behind a proxy and can&amp;rsquo;t tell which requests are secure and which are not. Your proxy likely sets a header to indicate secure requests; you can correct the problem by finding out what that header is and configuring the &lt;a href=&quot;#std:setting-SECURE_PROXY_SSL_HEADER&quot;&gt;&lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt;&lt;/a&gt; setting accordingly.</source>
          <target state="translated">如果将其设置为 &lt;code&gt;True&lt;/code&gt; 会导致无限重定向，则可能意味着您的网站在代理后面运行，并且无法确定哪些请求是安全的，哪些不是安全的。您的代理可能会设置标头以指示安全请求；您可以通过找出该标头是什么并相应地配置&lt;a href=&quot;#std:setting-SECURE_PROXY_SSL_HEADER&quot;&gt; &lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt; &lt;/a&gt;设置来纠正问题。</target>
        </trans-unit>
        <trans-unit id="6481e6950ed002a13f7a54255de0e49329f79ddf" translate="yes" xml:space="preserve">
          <source>If two Python threads execute the code in the first example above, one thread could retrieve, increment, and save a field&amp;rsquo;s value after the other has retrieved it from the database. The value that the second thread saves will be based on the original value; the work of the first thread will be lost.</source>
          <target state="translated">如果上面的第一个示例中有两个Python线程执行代码，则一个线程可以在另一个从数据库中检索到该字段的值后，对其进行检索，递增和保存。第二个线程保存的值将基于原始值。第一个线程的工作将丢失。</target>
        </trans-unit>
        <trans-unit id="5e64204f76516c2278e4b64d558fec189d6cf43f" translate="yes" xml:space="preserve">
          <source>If unspecified, the default &lt;code&gt;timeout&lt;/code&gt; will be the one provided by &lt;a href=&quot;https://docs.python.org/3/library/socket.html#socket.getdefaulttimeout&quot;&gt;&lt;code&gt;socket.getdefaulttimeout()&lt;/code&gt;&lt;/a&gt;, which defaults to &lt;code&gt;None&lt;/code&gt; (no timeout).</source>
          <target state="translated">如果未指定，则默认 &lt;code&gt;timeout&lt;/code&gt; 将是&lt;a href=&quot;https://docs.python.org/3/library/socket.html#socket.getdefaulttimeout&quot;&gt; &lt;code&gt;socket.getdefaulttimeout()&lt;/code&gt; &lt;/a&gt;提供的默认超时，默认为 &lt;code&gt;None&lt;/code&gt; （无超时）。</target>
        </trans-unit>
        <trans-unit id="60e13a5dc7aa8445a725b41528f2e1f91c6d315c" translate="yes" xml:space="preserve">
          <source>If updating a large number of columns in a large number of rows, the SQL generated can be very large. Avoid this by specifying a suitable &lt;code&gt;batch_size&lt;/code&gt;.</source>
          <target state="translated">如果更新大量行中的大量列，则生成的SQL可能非常大。通过指定适当的 &lt;code&gt;batch_size&lt;/code&gt; 避免这种情况。</target>
        </trans-unit>
        <trans-unit id="9de1d7c145e3bfbd1da3b57f9e69810dee560a48" translate="yes" xml:space="preserve">
          <source>If used with &lt;code&gt;MIDDLEWARE_CLASSES&lt;/code&gt;, the &lt;code&gt;__call__()&lt;/code&gt; method will never be used; Django calls &lt;code&gt;process_request()&lt;/code&gt; and &lt;code&gt;process_response()&lt;/code&gt; directly.</source>
          <target state="translated">如果与用于 &lt;code&gt;MIDDLEWARE_CLASSES&lt;/code&gt; ，所述 &lt;code&gt;__call__()&lt;/code&gt; 方法将永远不会被使用; Django直接调用 &lt;code&gt;process_request()&lt;/code&gt; 和 &lt;code&gt;process_response()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3318f562b136e880f0fe72349d17ab0bbe42fba" translate="yes" xml:space="preserve">
          <source>If used with a numeric integer argument, &lt;code&gt;floatformat&lt;/code&gt; rounds a number to that many decimal places. For example:</source>
          <target state="translated">如果与数字整数参数一起使用， &lt;code&gt;floatformat&lt;/code&gt; 将数字四舍五入到小数点后位数。例如：</target>
        </trans-unit>
        <trans-unit id="b36b4a6b3834f5db697a34dce30549b123363b8c" translate="yes" xml:space="preserve">
          <source>If using a binary package of GEOS (e.g., on Ubuntu), you may need to &lt;a href=&quot;index#binutils&quot;&gt;Install binutils&lt;/a&gt;.</source>
          <target state="translated">如果使用GEOS的二进制软件包（例如，在Ubuntu上），则可能需要&lt;a href=&quot;index#binutils&quot;&gt;安装binutils&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="77e5c9f7d7653d5f758d827f9f9d8be93ef993b1" translate="yes" xml:space="preserve">
          <source>If using an SQLite in-memory database with SQLite, &lt;a href=&quot;https://www.sqlite.org/sharedcache.html&quot;&gt;shared cache&lt;/a&gt; is enabled, so you can write tests with ability to share the database between threads.</source>
          <target state="translated">如果将SQLite内存数据库与SQLite一起使用，则启用了&lt;a href=&quot;https://www.sqlite.org/sharedcache.html&quot;&gt;共享缓存&lt;/a&gt;，因此您可以编写能够在线程之间共享数据库的测试。</target>
        </trans-unit>
        <trans-unit id="a39821e0ea752a2e9e4388107ced28792f496f36" translate="yes" xml:space="preserve">
          <source>If using database-backed sessions, regularly &lt;a href=&quot;../../topics/http/sessions#clearing-the-session-store&quot;&gt;clear old sessions&lt;/a&gt; to avoid storing unnecessary data.</source>
          <target state="translated">如果使用数据库支持的会话，请定期&lt;a href=&quot;../../topics/http/sessions#clearing-the-session-store&quot;&gt;清除旧会话，&lt;/a&gt;以避免存储不必要的数据。</target>
        </trans-unit>
        <trans-unit id="71eff97e42ab86eb5151370fe1181333a128682b" translate="yes" xml:space="preserve">
          <source>If value evaluates to &lt;code&gt;False&lt;/code&gt;, uses the given default. Otherwise, uses the value.</source>
          <target state="translated">如果value计算为 &lt;code&gt;False&lt;/code&gt; ，则使用给定的默认值。否则，使用该值。</target>
        </trans-unit>
        <trans-unit id="f611765f2d320e927111295d6c9695093483fb31" translate="yes" xml:space="preserve">
          <source>If we arrive at this view with a &lt;code&gt;GET&lt;/code&gt; request, it will create an empty form instance and place it in the template context to be rendered. This is what we can expect to happen the first time we visit the URL.</source>
          <target state="translated">如果我们通过 &lt;code&gt;GET&lt;/code&gt; 请求到达此视图，它将创建一个空表单实例并将其放置在要呈现的模板上下文中。这是我们第一次访问URL时可以预期的情况。</target>
        </trans-unit>
        <trans-unit id="0a8a851d0367ffe29323b90c503c215f8aa8f5d9" translate="yes" xml:space="preserve">
          <source>If we connected a handler like this:</source>
          <target state="translated">如果我们连接一个这样的处理程序。</target>
        </trans-unit>
        <trans-unit id="406383748435b9b983e4fe62090c8c234445f370" translate="yes" xml:space="preserve">
          <source>If we delete a &lt;code&gt;Publication&lt;/code&gt;, its &lt;code&gt;Articles&lt;/code&gt; won&amp;rsquo;t be able to access it:</source>
          <target state="translated">如果我们删除 &lt;code&gt;Publication&lt;/code&gt; ，则其 &lt;code&gt;Articles&lt;/code&gt; 将无法访问它：</target>
        </trans-unit>
        <trans-unit id="3d341e594a575849b6069ae86fb05e49f3983a60" translate="yes" xml:space="preserve">
          <source>If we delete an &lt;code&gt;Article&lt;/code&gt;, its &lt;code&gt;Publications&lt;/code&gt; won&amp;rsquo;t be able to access it:</source>
          <target state="translated">如果我们删除 &lt;code&gt;Article&lt;/code&gt; ，则其 &lt;code&gt;Publications&lt;/code&gt; 将无法访问它：</target>
        </trans-unit>
        <trans-unit id="c2e7f5f3fb7b52337975a488b9c8164eab92ebfb" translate="yes" xml:space="preserve">
          <source>If we had neglected to pass in the current &lt;code&gt;context.autoescape&lt;/code&gt; value to our new &lt;code&gt;Context&lt;/code&gt; in this example, the results would have &lt;em&gt;always&lt;/em&gt; been automatically escaped, which may not be the desired behavior if the template tag is used inside a &lt;a href=&quot;../ref/templates/builtins#std:templatetag-autoescape&quot;&gt;&lt;code&gt;{% autoescape off %}&lt;/code&gt;&lt;/a&gt; block.</source>
          <target state="translated">如果在此示例中我们忽略了将当前 &lt;code&gt;context.autoescape&lt;/code&gt; 值传递给我们的新 &lt;code&gt;Context&lt;/code&gt; ，则结果将&lt;em&gt;始终&lt;/em&gt;自动转义，如果在&lt;a href=&quot;../ref/templates/builtins#std:templatetag-autoescape&quot;&gt; &lt;code&gt;{% autoescape off %}&lt;/code&gt; &lt;/a&gt;块。</target>
        </trans-unit>
        <trans-unit id="ffb90e72c570b70af963c6da1122122d334c0352" translate="yes" xml:space="preserve">
          <source>If we want to write a class-based view that responds only to &lt;code&gt;POST&lt;/code&gt;, we&amp;rsquo;ll subclass &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; and write a &lt;code&gt;post()&lt;/code&gt; method in the subclass. However if we want our processing to work on a particular object, identified from the URL, we&amp;rsquo;ll want the functionality provided by &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果我们想编写一个仅对 &lt;code&gt;POST&lt;/code&gt; 响应的基于类的视图，我们将对&lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View&quot;&gt; &lt;code&gt;View&lt;/code&gt; 进行&lt;/a&gt;子类化，并在该子类中编写一个 &lt;code&gt;post()&lt;/code&gt; 方法。但是，如果我们希望处理对从URL标识的特定对象进行处理，则需要&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt; &lt;code&gt;SingleObjectMixin&lt;/code&gt; &lt;/a&gt;提供的功能。</target>
        </trans-unit>
        <trans-unit id="f9670d8eca365c2fbb8bf2e17c3f35929328311b" translate="yes" xml:space="preserve">
          <source>If we wanted to add a tool to the change list view for only a specific model named &amp;lsquo;Page&amp;rsquo;, we would copy that same file to the &lt;code&gt;templates/admin/my_app/page&lt;/code&gt; directory of our project.</source>
          <target state="translated">如果我们只想为名为&amp;ldquo; Page&amp;rdquo;的特定模型向更改列表视图中添加工具，则可以将该文件复制到项目的 &lt;code&gt;templates/admin/my_app/page&lt;/code&gt; 目录中。</target>
        </trans-unit>
        <trans-unit id="6bd7027efcdd2746450164bec58ed7a7c2bb113c" translate="yes" xml:space="preserve">
          <source>If we wanted to change our previous query to get the discount based on how long the &lt;code&gt;Client&lt;/code&gt; has been with us, we could do so using lookups:</source>
          <target state="translated">如果我们想更改先前的查询以根据 &lt;code&gt;Client&lt;/code&gt; 在我们身边的时间来获得折扣，则可以使用查找方法：</target>
        </trans-unit>
        <trans-unit id="424f525a9d69de5a035589bbd0105ee23eb2ed5c" translate="yes" xml:space="preserve">
          <source>If you &lt;a href=&quot;https://docs.python.org/3/library/pickle.html#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; a &lt;code&gt;QuerySet&lt;/code&gt;, this will force all the results to be loaded into memory prior to pickling. Pickling is usually used as a precursor to caching and when the cached queryset is reloaded, you want the results to already be present and ready for use (reading from the database can take some time, defeating the purpose of caching). This means that when you unpickle a &lt;code&gt;QuerySet&lt;/code&gt;, it contains the results at the moment it was pickled, rather than the results that are currently in the database.</source>
          <target state="translated">如果&lt;a href=&quot;https://docs.python.org/3/library/pickle.html#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;一个 &lt;code&gt;QuerySet&lt;/code&gt; ，这将迫使所有的结果将被加载到内存中之前酸洗。酸洗通常用作缓存的先决条件，并且当重新加载缓存的查询集时，您希望结果已经存在并可以使用（从数据库中读取数据可能要花费一些时间，无法达到缓存的目的）。这意味着，当您释放 &lt;code&gt;QuerySet&lt;/code&gt; 时，它包含被腌制时的结果，而不是数据库中当前的结果。</target>
        </trans-unit>
        <trans-unit id="50f8dcfebb421839cfac4619ff97003f8219dfe8" translate="yes" xml:space="preserve">
          <source>If you accidentally try to call a part of Django that is still synchronous-only from an async view, you will trigger Django&amp;rsquo;s &lt;a href=&quot;#async-safety&quot;&gt;asynchronous safety protection&lt;/a&gt; to protect your data from corruption.</source>
          <target state="translated">如果您不小心尝试从异步视图中调用仅仍为同步状态的Django部分，则会触发Django的&lt;a href=&quot;#async-safety&quot;&gt;异步安全保护，&lt;/a&gt;以保护数据免遭损坏。</target>
        </trans-unit>
        <trans-unit id="c976c50b35c8e39b12378828f30c9e059d209f63" translate="yes" xml:space="preserve">
          <source>If you activate &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt;&lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt;&lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt;&lt;/a&gt;, you must include the CSRF token in your HTML and read the token from the DOM with JavaScript:</source>
          <target state="translated">如果您激活&lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt; &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt; &lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt; &lt;/a&gt;，则必须在HTML中包含CSRF令牌，并使用JavaScript从DOM中读取该令牌：</target>
        </trans-unit>
        <trans-unit id="ab46e0097159c03d8a60d09a7d1250eee53c6b4a" translate="yes" xml:space="preserve">
          <source>If you add a new keyword argument, you need to write code in &lt;code&gt;deconstruct()&lt;/code&gt; that puts its value into &lt;code&gt;kwargs&lt;/code&gt; yourself. You should also omit the value from &lt;code&gt;kwargs&lt;/code&gt; when it isn&amp;rsquo;t necessary to reconstruct the state of the field, such as when the default value is being used:</source>
          <target state="translated">如果添加新的关键字参数，则需要在 &lt;code&gt;deconstruct()&lt;/code&gt; 中编写代码，以便自己将其值放入 &lt;code&gt;kwargs&lt;/code&gt; 中。当不需要重建字段的状态时，例如在使用默认值时，您还应该从 &lt;code&gt;kwargs&lt;/code&gt; 中忽略该值：</target>
        </trans-unit>
        <trans-unit id="9290e813a0bf97db9d008f3c672105ad13a270f2" translate="yes" xml:space="preserve">
          <source>If you add or modify flatpages via your own code, you will likely want to check for duplicate flatpage URLs within the same site. The flatpage form used in the admin performs this validation check, and can be imported from &lt;code&gt;django.contrib.flatpages.forms.FlatpageForm&lt;/code&gt; and used in your own views.</source>
          <target state="translated">如果您通过自己的代码添加或修改纯平版，则可能需要检查同一站点内是否有重复的纯平版URL。管理员使用的平面表单执行此验证检查，可以从 &lt;code&gt;django.contrib.flatpages.forms.FlatpageForm&lt;/code&gt; 导入并在您自己的视图中使用。</target>
        </trans-unit>
        <trans-unit id="19279f2745faa7fa825b809dfd65333ca02e57b9" translate="yes" xml:space="preserve">
          <source>If you add the name of a callable to &lt;code&gt;fields&lt;/code&gt;, the same rule applies as with the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.fields&quot;&gt;&lt;code&gt;fields&lt;/code&gt;&lt;/a&gt; option: the callable must be listed in &lt;a href=&quot;#django.contrib.admin.ModelAdmin.readonly_fields&quot;&gt;&lt;code&gt;readonly_fields&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果将可调用对象的名称添加到 &lt;code&gt;fields&lt;/code&gt; ，则将应用与&lt;a href=&quot;#django.contrib.admin.ModelAdmin.fields&quot;&gt; &lt;code&gt;fields&lt;/code&gt; &lt;/a&gt;选项相同的规则：必须在&lt;a href=&quot;#django.contrib.admin.ModelAdmin.readonly_fields&quot;&gt; &lt;code&gt;readonly_fields&lt;/code&gt; 中&lt;/a&gt;列出可调用对象。</target>
        </trans-unit>
        <trans-unit id="4828b14d37ca4d41be7823693b8a8c011f2c2552" translate="yes" xml:space="preserve">
          <source>If you aim to build a database-agnostic application, you should account for differences in database column types. For example, the date/time column type in PostgreSQL is called &lt;code&gt;timestamp&lt;/code&gt;, while the same column in MySQL is called &lt;code&gt;datetime&lt;/code&gt;. You can handle this in a &lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt;&lt;code&gt;db_type()&lt;/code&gt;&lt;/a&gt; method by checking the &lt;code&gt;connection.settings_dict['ENGINE']&lt;/code&gt; attribute.</source>
          <target state="translated">如果要构建与数据库无关的应用程序，则应考虑数据库列类型的差异。例如，PostgreSQL中的date / time列类型称为 &lt;code&gt;timestamp&lt;/code&gt; ，而MySQL中的同一列称为 &lt;code&gt;datetime&lt;/code&gt; 。您可以通过检查 &lt;code&gt;connection.settings_dict['ENGINE']&lt;/code&gt; 属性在&lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt; &lt;code&gt;db_type()&lt;/code&gt; &lt;/a&gt;方法中进行处理。</target>
        </trans-unit>
        <trans-unit id="d866003e34d19497e6a39513c19080fca9667425" translate="yes" xml:space="preserve">
          <source>If you allow for blank values, you have to allow for null values since blank values are stored as null.</source>
          <target state="translated">如果允许空值,就必须允许空值,因为空值会被存储为null。</target>
        </trans-unit>
        <trans-unit id="5dfbcb1590644f47fc6c2a97a5c0c0679f9f8edd" translate="yes" xml:space="preserve">
          <source>If you already have the GET arguments in URL-encoded form, you can use that encoding instead of using the data argument. For example, the previous GET request could also be posed as:</source>
          <target state="translated">如果你已经有了URL编码形式的GET参数,你可以使用该编码代替数据参数。例如,之前的GET请求也可以摆成。</target>
        </trans-unit>
        <trans-unit id="9f8f087d060b362f136ee6b97e34ff5646abcd8a" translate="yes" xml:space="preserve">
          <source>If you already know a few other languages and want to get up to speed with Python quickly, we recommend &lt;a href=&quot;https://diveinto.org/python3/table-of-contents.html&quot;&gt;Dive Into Python&lt;/a&gt;. If that&amp;rsquo;s not quite your style, there are many other &lt;a href=&quot;https://wiki.python.org/moin/PythonBooks&quot;&gt;books about Python&lt;/a&gt;.</source>
          <target state="translated">如果您已经了解其他几种语言，并且想快速掌握Python的知识，我们建议您使用&lt;a href=&quot;https://diveinto.org/python3/table-of-contents.html&quot;&gt;Dive Into Python&lt;/a&gt;。如果那不是您的风格，那么还有许多其他&lt;a href=&quot;https://wiki.python.org/moin/PythonBooks&quot;&gt;有关Python的书&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="037b16c87c42ef82ec961a3ac3d843c26b02994c" translate="yes" xml:space="preserve">
          <source>If you are &lt;em&gt;absolutely&lt;/em&gt; in dire need to run this code from an asynchronous context - for example, it is being forced on you by an external environment, and you are sure there is no chance of it being run concurrently (e.g. you are in a &lt;a href=&quot;https://jupyter.org/&quot;&gt;Jupyter&lt;/a&gt; notebook), then you can disable the warning with the &lt;code&gt;DJANGO_ALLOW_ASYNC_UNSAFE&lt;/code&gt; environment variable.</source>
          <target state="translated">如果您&lt;em&gt;绝对&lt;/em&gt;迫切需要从异步上下文中运行此代码-例如，它是由外部环境强加给您的，并且您确定它不可能同时运行（例如，您在&lt;a href=&quot;https://jupyter.org/&quot;&gt;Jupyter中）&lt;/a&gt;笔记本），则可以使用 &lt;code&gt;DJANGO_ALLOW_ASYNC_UNSAFE&lt;/code&gt; 环境变量禁用该警告。</target>
        </trans-unit>
        <trans-unit id="cabfbe868e7cb75abcebb7e76b56c06e811c5257" translate="yes" xml:space="preserve">
          <source>If you are chaining filters, a filter applied after &lt;code&gt;safe&lt;/code&gt; can make the contents unsafe again. For example, the following code prints the variable as is, unescaped:</source>
          <target state="translated">如果要链接过滤器，则在 &lt;code&gt;safe&lt;/code&gt; 后应用过滤器可能会使内容再次变得不安全。例如，以下代码按原样打印变量，不转义：</target>
        </trans-unit>
        <trans-unit id="2655962c0a4f53510466dd490c637f462974c542" translate="yes" xml:space="preserve">
          <source>If you are connecting to the internet behind a proxy, there might be problems in running the command &lt;code&gt;py -m pip install Django&lt;/code&gt;. Set the environment variables for proxy configuration in the command prompt as follows:</source>
          <target state="translated">如果要通过代理连接到Internet，则在运行 &lt;code&gt;py -m pip install Django&lt;/code&gt; 命令时可能会出现问题。在命令提示符下设置用于代理配置的环境变量，如下所示：</target>
        </trans-unit>
        <trans-unit id="3f2135c10c9c1fcecec78e1b0692c6109124ccab" translate="yes" xml:space="preserve">
          <source>If you are constructing an object manually, you can assign the file object from &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt;&lt;code&gt;request.FILES&lt;/code&gt;&lt;/a&gt; to the file field in the model:</source>
          <target state="translated">如果要手动构造对象，则可以将&lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt; &lt;code&gt;request.FILES&lt;/code&gt; 中&lt;/a&gt;的文件对象分配给模型中的file字段：</target>
        </trans-unit>
        <trans-unit id="92ab820f72ae9c99d7def5b0452724d8bd608be6" translate="yes" xml:space="preserve">
          <source>If you are creating a reusable application, it is recommended to use only the built-in &lt;a href=&quot;#message-levels&quot;&gt;message levels&lt;/a&gt; and not rely on any custom levels.</source>
          <target state="translated">如果要创建可重用的应用程序，建议仅使用内置&lt;a href=&quot;#message-levels&quot;&gt;消息级别&lt;/a&gt;而不依赖任何自定义级别。</target>
        </trans-unit>
        <trans-unit id="ffa521388bfefc73cf3b041673a0e7a8595c90d3" translate="yes" xml:space="preserve">
          <source>If you are deployed behind a load-balancer or reverse-proxy server and Django can&amp;rsquo;t seem to tell when a request actually is already secure, you may need to set the &lt;a href=&quot;settings#std:setting-SECURE_PROXY_SSL_HEADER&quot;&gt;&lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">如果将您部署在负载平衡器或反向代理服务器之后，而Django似乎无法告知请求实际何时已经安全，则可能需要设置&lt;a href=&quot;settings#std:setting-SECURE_PROXY_SSL_HEADER&quot;&gt; &lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="41e9a421371bfb5a50b98c32edd7081296c13f7c" translate="yes" xml:space="preserve">
          <source>If you are deployed behind a load-balancer or reverse-proxy server, and the &lt;code&gt;Strict-Transport-Security&lt;/code&gt; header is not being added to your responses, it may be because Django doesn&amp;rsquo;t realize that it&amp;rsquo;s on a secure connection; you may need to set the &lt;a href=&quot;settings#std:setting-SECURE_PROXY_SSL_HEADER&quot;&gt;&lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">如果将您部署在负载平衡器或反向代理服务器之后，并且未将 &lt;code&gt;Strict-Transport-Security&lt;/code&gt; 标头添加到响应中，则可能是因为Django没有意识到它位于安全连接上；您可能需要设置&lt;a href=&quot;settings#std:setting-SECURE_PROXY_SSL_HEADER&quot;&gt; &lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="2c691ad6ca02fef297ccdbc9e5c26db8508ebcf4" translate="yes" xml:space="preserve">
          <source>If you are developing a small project or something you don&amp;rsquo;t plan to deploy in a production environment, SQLite is generally the best option as it doesn&amp;rsquo;t require running a separate server. However, SQLite has many differences from other databases, so if you are working on something substantial, it&amp;rsquo;s recommended to develop with the same database that you plan on using in production.</source>
          <target state="translated">如果您正在开发小型项目或不打算在生产环境中部署的项目，则SQLite通常是最佳选择，因为它不需要运行单独的服务器。但是，SQLite与其他数据库有很多差异，因此，如果您要进行大量工作，建议使用计划在生产中使用的数据库进行开发。</target>
        </trans-unit>
        <trans-unit id="426463c8a09b71f7c823f03996117348698ae262" translate="yes" xml:space="preserve">
          <source>If you are familiar with Python packaging and interested in learning how to turn polls into a &amp;ldquo;reusable app&amp;rdquo;, check out &lt;a href=&quot;reusable-apps&quot;&gt;Advanced tutorial: How to write reusable apps&lt;/a&gt;.</source>
          <target state="translated">如果您熟悉Python打包并且有兴趣学习如何将民意测验转变为&amp;ldquo;可重用应用程序&amp;rdquo;，请查看&lt;a href=&quot;reusable-apps&quot;&gt;高级教程：如何编写可重用应用程序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6df1a07d3d4b877dffccc3304d0749b9a9a63bcf" translate="yes" xml:space="preserve">
          <source>If you are filtering across multiple relationships and one of the intermediate models doesn&amp;rsquo;t have a value that meets the filter condition, Django will treat it as if there is an empty (all values are &lt;code&gt;NULL&lt;/code&gt;), but valid, object there. All this means is that no error will be raised. For example, in this filter:</source>
          <target state="translated">如果您正在多个关系中进行过滤，并且其中一个中间模型没有一个满足过滤条件的值，则Django会将其视为存在一个空（所有值均为 &lt;code&gt;NULL&lt;/code&gt; ）但有效的对象。所有这些意味着不会出现任何错误。例如，在此过滤器中：</target>
        </trans-unit>
        <trans-unit id="54d3dc0d5d9a07f09c0b925c9b0c98d70db0dd97" translate="yes" xml:space="preserve">
          <source>If you are going to need other data from the QuerySet, evaluate it immediately.</source>
          <target state="translated">如果你将需要来自QuerySet的其他数据,请立即评估它。</target>
        </trans-unit>
        <trans-unit id="0a6f484ecf97ba11c41c19b92638b2e691e251cf" translate="yes" xml:space="preserve">
          <source>If you are just starting with Django and using Windows, you may find &lt;a href=&quot;../howto/windows&quot;&gt;How to install Django on Windows&lt;/a&gt; useful.</source>
          <target state="translated">如果您只是从Django开始并使用Windows，则可能会发现&amp;ldquo; &lt;a href=&quot;../howto/windows&quot;&gt;如何在Windows上安装Django&amp;rdquo;&lt;/a&gt;很有用。</target>
        </trans-unit>
        <trans-unit id="f8022aedc2f24dbfc32c1645a06e23557556b40d" translate="yes" xml:space="preserve">
          <source>If you are looking for a more robust solution, take a look at the &lt;a href=&quot;https://pypi.org/project/bleach/&quot;&gt;bleach&lt;/a&gt; Python library.</source>
          <target state="translated">如果您正在寻找更强大的解决方案，请查看&lt;a href=&quot;https://pypi.org/project/bleach/&quot;&gt;漂白&lt;/a&gt; Python库。</target>
        </trans-unit>
        <trans-unit id="5679be2b89b6ad12b1cb13d77be5c899c643d272" translate="yes" xml:space="preserve">
          <source>If you are looking for a reference on how to submit patches, see the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/submitting-patches/&quot;&gt;Submitting patches&lt;/a&gt; documentation.</source>
          <target state="translated">如果要查找有关如何提交修补程序的参考，请参阅&amp;ldquo; &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/submitting-patches/&quot;&gt;提交修补程序&amp;rdquo;&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="49ef38e282be1a0ceabdc271e0e19b9b3902d0fd" translate="yes" xml:space="preserve">
          <source>If you are looking for a reference on how to submit patches, see the &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-code/submitting-patches/&quot;&gt;Submitting patches&lt;/a&gt; documentation.</source>
          <target state="translated">如果要查找有关如何提交修补程序的参考，请参阅&amp;ldquo;&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-code/submitting-patches/&quot;&gt;提交修补程序&amp;rdquo;&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="b51f6b7ffd84766e0e10e46ee09ef3d2cd522fad" translate="yes" xml:space="preserve">
          <source>If you are migrating from the Django&amp;rsquo;s built-in &lt;code&gt;cached_db&lt;/code&gt; session store to a custom one based on &lt;code&gt;cached_db&lt;/code&gt;, you should override the cache key prefix in order to prevent a namespace clash:</source>
          <target state="translated">如果要从Django的内置 &lt;code&gt;cached_db&lt;/code&gt; 会话存储区迁移到基于 &lt;code&gt;cached_db&lt;/code&gt; 的自定义存储区，则应覆盖缓存键前缀，以防止名称空间冲突：</target>
        </trans-unit>
        <trans-unit id="3f20d2e0ed1b7dfe99fe7b1b15afc7ea12f08c4e" translate="yes" xml:space="preserve">
          <source>If you are mirroring an existing model or database table and don&amp;rsquo;t want all the original database table columns, use &lt;code&gt;Meta.managed=False&lt;/code&gt;. That option is normally useful for modeling database views and tables not under the control of Django.</source>
          <target state="translated">如果要镜像现有模型或数据库表，并且不希望所有原始数据库表列，请使用 &lt;code&gt;Meta.managed=False&lt;/code&gt; 。通常，该选项对于不受Django控制的数据库视图和表建模很有用。</target>
        </trans-unit>
        <trans-unit id="2c77013a5d33bed9ff8aeb9b8d8bccb978ee3d8e" translate="yes" xml:space="preserve">
          <source>If you are not using SQLite as your database, additional settings such as &lt;a href=&quot;../ref/settings#std:setting-USER&quot;&gt;&lt;code&gt;USER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ref/settings#std:setting-PASSWORD&quot;&gt;&lt;code&gt;PASSWORD&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../ref/settings#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt; must be added. For more details, see the reference documentation for &lt;a href=&quot;../ref/settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您不使用SQLite作为数据库，则必须添加其他设置，例如&lt;a href=&quot;../ref/settings#std:setting-USER&quot;&gt; &lt;code&gt;USER&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../ref/settings#std:setting-PASSWORD&quot;&gt; &lt;code&gt;PASSWORD&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/settings#std:setting-HOST&quot;&gt; &lt;code&gt;HOST&lt;/code&gt; &lt;/a&gt;。有关更多详细信息，请参见&lt;a href=&quot;../ref/settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt;的参考文档。</target>
        </trans-unit>
        <trans-unit id="2dff9fa6f2943dcffcb71466072c87506f22903b" translate="yes" xml:space="preserve">
          <source>If you are performing queries on MySQL, note that MySQL&amp;rsquo;s silent type coercion may cause unexpected results when mixing types. If you query on a string type column, but with an integer value, MySQL will coerce the types of all values in the table to an integer before performing the comparison. For example, if your table contains the values &lt;code&gt;'abc'&lt;/code&gt;, &lt;code&gt;'def'&lt;/code&gt; and you query for &lt;code&gt;WHERE mycolumn=0&lt;/code&gt;, both rows will match. To prevent this, perform the correct typecasting before using the value in a query.</source>
          <target state="translated">如果要在MySQL上执行查询，请注意，在混合类型时，MySQL的静默类型强制可能会导致意外结果。如果在字符串类型的列上查询但具有整数值，MySQL将在执行比较之前将表中所有值的类型强制为整数。例如，如果您的表包含值 &lt;code&gt;'abc'&lt;/code&gt; ， &lt;code&gt;'def'&lt;/code&gt; 并且您查询 &lt;code&gt;WHERE mycolumn=0&lt;/code&gt; ，则两行都将匹配。为防止这种情况，请在查询中使用该值之前执行正确的类型转换。</target>
        </trans-unit>
        <trans-unit id="a947d6cabd99493fc7e983c79f42f4923da04a9e" translate="yes" xml:space="preserve">
          <source>If you are serving your own static files, be sure that handlers like Apache&amp;rsquo;s &lt;code&gt;mod_php&lt;/code&gt;, which would execute static files as code, are disabled. You don&amp;rsquo;t want users to be able to execute arbitrary code by uploading and requesting a specially crafted file.</source>
          <target state="translated">如果您要提供自己的静态文件，请确保禁用将Apache的 &lt;code&gt;mod_php&lt;/code&gt; 之类的处理程序作为代码执行的处理程序。您不希望用户能够通过上载和请求特制文件来执行任意代码。</target>
        </trans-unit>
        <trans-unit id="3e266d9fb9806995f7ae92d1d0321cc13f004066" translate="yes" xml:space="preserve">
          <source>If you are sharing a cache instance between servers, or between your production and development environments, it&amp;rsquo;s possible for data cached by one server to be used by another server. If the format of cached data is different between servers, this can lead to some very hard to diagnose problems.</source>
          <target state="translated">如果要在服务器之间或在生产和开发环境之间共享缓存实例，则一台服务器缓存的数据可能会被另一台服务器使用。如果服务器之间的缓存数据格式不同，则可能导致某些很难诊断的问题。</target>
        </trans-unit>
        <trans-unit id="11740fd9f726066aa1c21ea9b74be5776e21a750" translate="yes" xml:space="preserve">
          <source>If you are testing from an asynchronous function, you must also use the asynchronous test client. This is available as &lt;code&gt;django.test.AsyncClient&lt;/code&gt;, or as &lt;code&gt;self.async_client&lt;/code&gt; on any test.</source>
          <target state="translated">如果要通过异步功能进行测试，则还必须使用异步测试客户端。可以在任何测试中以 &lt;code&gt;django.test.AsyncClient&lt;/code&gt; 或 &lt;code&gt;self.async_client&lt;/code&gt; 的形式使用。</target>
        </trans-unit>
        <trans-unit id="5df3afa0c3b43eec8bd8d9f748fb63ae435ac643" translate="yes" xml:space="preserve">
          <source>If you are the maintainer of a third-party app with models, you may need to ship migrations that support multiple Django versions. In this case, you should always run &lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;with the lowest Django version you wish to support&lt;/strong&gt;.</source>
          <target state="translated">如果您是带有模型的第三方应用程序的维护者，则可能需要提供支持多个Django版本的迁移。在这种情况下，您应该始终&lt;strong&gt;使用希望支持的最低Django版本&lt;/strong&gt;运行&lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29f132b30359fb7a3ec8ec8ec098562f51231719" translate="yes" xml:space="preserve">
          <source>If you are trying to call code that is synchronous-only from an asynchronous thread, then create a synchronous thread and call it in that. You can accomplish this is with &lt;a href=&quot;../topics/async#asgiref.sync.sync_to_async&quot;&gt;&lt;code&gt;asgiref.sync.sync_to_async()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果尝试从异步线程中调用仅同步的代码，请创建一个同步线程并在其中调用它。您可以使用&lt;a href=&quot;../topics/async#asgiref.sync.sync_to_async&quot;&gt; &lt;code&gt;asgiref.sync.sync_to_async()&lt;/code&gt; &lt;/a&gt;完成此操作。</target>
        </trans-unit>
        <trans-unit id="c58efff062a8aaaaa34e19e97693ce558ec61bc5" translate="yes" xml:space="preserve">
          <source>If you are trying to call code that is synchronous-only from an asynchronous thread, then create a synchronous thread and call it in that. You can accomplish this is with &lt;code&gt;asgiref.sync.sync_to_async&lt;/code&gt;.</source>
          <target state="translated">如果您尝试从异步线程中调用仅同步的代码，请创建一个同步线程并在其中调用它。您可以使用 &lt;code&gt;asgiref.sync.sync_to_async&lt;/code&gt; 完成此操作。</target>
        </trans-unit>
        <trans-unit id="e8e0bd3010ac7dd8cec899905c900e89f1f7d84a" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_query_name&quot;&gt;&lt;code&gt;related_query_name&lt;/code&gt;&lt;/a&gt; on a &lt;code&gt;ForeignKey&lt;/code&gt; or &lt;code&gt;ManyToManyField&lt;/code&gt;, you must always specify a &lt;em&gt;unique&lt;/em&gt; reverse name and query name for the field. This would normally cause a problem in abstract base classes, since the fields on this class are included into each of the child classes, with exactly the same values for the attributes (including &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_query_name&quot;&gt;&lt;code&gt;related_query_name&lt;/code&gt;&lt;/a&gt;) each time.</source>
          <target state="translated">如果你正在使用&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_query_name&quot;&gt; &lt;code&gt;related_query_name&lt;/code&gt; &lt;/a&gt;在 &lt;code&gt;ForeignKey&lt;/code&gt; 的或 &lt;code&gt;ManyToManyField&lt;/code&gt; ，你必须指定一个&lt;em&gt;唯一的&lt;/em&gt;反向名称和字段查询名称。这通常会在抽象基类中引起问题，因为此类的字段包含在每个子类中，并且每次具有完全相同的属性值（包括&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_query_name&quot;&gt; &lt;code&gt;related_query_name&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="13ff923ff59501ab414c4be102a84827b6e517bb" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;../ref/django-admin#django-admin-dumpdata&quot;&gt;&lt;code&gt;dumpdata&lt;/code&gt;&lt;/a&gt; to generate serialized data, use the &lt;a href=&quot;../ref/django-admin#cmdoption-dumpdata-natural-foreign&quot;&gt;&lt;code&gt;dumpdata --natural-foreign&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/django-admin#cmdoption-dumpdata-natural-primary&quot;&gt;&lt;code&gt;dumpdata --natural-primary&lt;/code&gt;&lt;/a&gt; command line flags to generate natural keys.</source>
          <target state="translated">如果要使用&lt;a href=&quot;../ref/django-admin#django-admin-dumpdata&quot;&gt; &lt;code&gt;dumpdata&lt;/code&gt; &lt;/a&gt;生成序列化数据，请使用&lt;a href=&quot;../ref/django-admin#cmdoption-dumpdata-natural-foreign&quot;&gt; &lt;code&gt;dumpdata --natural-foreign&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/django-admin#cmdoption-dumpdata-natural-primary&quot;&gt; &lt;code&gt;dumpdata --natural-primary&lt;/code&gt; &lt;/a&gt;命令行标志来生成自然键。</target>
        </trans-unit>
        <trans-unit id="59359e0377bcc9039f07ed70ee0fda67ef2ccade" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;multi-db&quot;&gt;more than one database&lt;/a&gt;, you can use &lt;code&gt;django.db.connections&lt;/code&gt; to obtain the connection (and cursor) for a specific database. &lt;code&gt;django.db.connections&lt;/code&gt; is a dictionary-like object that allows you to retrieve a specific connection using its alias:</source>
          <target state="translated">如果您使用&lt;a href=&quot;multi-db&quot;&gt;多个数据库&lt;/a&gt;，则可以使用 &lt;code&gt;django.db.connections&lt;/code&gt; 获取特定数据库的连接（和游标）。 &lt;code&gt;django.db.connections&lt;/code&gt; 是一个类似于字典的对象，它允许您使用其别名检索特定的连接：</target>
        </trans-unit>
        <trans-unit id="f9a935f64b3c7b8ef812c793ab72169e068de5c7" translate="yes" xml:space="preserve">
          <source>If you are using MySQL, see the &lt;a href=&quot;../../ref/databases#mysql-time-zone-definitions&quot;&gt;Time zone definitions&lt;/a&gt; section of the MySQL notes for instructions on loading time zone definitions.</source>
          <target state="translated">如果您使用的是MySQL，请参阅MySQL注释的&amp;ldquo; &lt;a href=&quot;../../ref/databases#mysql-time-zone-definitions&quot;&gt;时区定义&amp;rdquo;&lt;/a&gt;部分，以获取有关加载时区定义的说明。</target>
        </trans-unit>
        <trans-unit id="20d3a84d61e53af28e187e5423ab3c6daba100cb" translate="yes" xml:space="preserve">
          <source>If you are using a &lt;a href=&quot;modelforms#django.forms.models.BaseModelFormSet&quot;&gt;&lt;code&gt;ModelFormSet&lt;/code&gt;&lt;/a&gt;, model instances for deleted forms will be deleted when you call &lt;code&gt;formset.save()&lt;/code&gt;.</source>
          <target state="translated">如果使用&lt;a href=&quot;modelforms#django.forms.models.BaseModelFormSet&quot;&gt; &lt;code&gt;ModelFormSet&lt;/code&gt; &lt;/a&gt;，则在调用 &lt;code&gt;formset.save()&lt;/code&gt; 时将删除已删除表单的模型实例。</target>
        </trans-unit>
        <trans-unit id="4a32235de5fa9b7f6d1fb4ceb0c0a90fb7c8b7a7" translate="yes" xml:space="preserve">
          <source>If you are using a custom &lt;code&gt;AdminSite&lt;/code&gt;, it is common to import all of the &lt;code&gt;ModelAdmin&lt;/code&gt; subclasses into your code and register them to the custom &lt;code&gt;AdminSite&lt;/code&gt;. In that case, in order to disable auto-discovery, you should put &lt;code&gt;'django.contrib.admin.apps.SimpleAdminConfig'&lt;/code&gt; instead of &lt;code&gt;'django.contrib.admin'&lt;/code&gt; in your &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">如果使用的是自定义 &lt;code&gt;AdminSite&lt;/code&gt; ，通常 &lt;code&gt;ModelAdmin&lt;/code&gt; 所有ModelAdmin子类导入代码中，然后将它们注册到自定义 &lt;code&gt;AdminSite&lt;/code&gt; 中。在这种情况下，为了禁用自动发现，应在&lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置中放置 &lt;code&gt;'django.contrib.admin.apps.SimpleAdminConfig'&lt;/code&gt; 而不是 &lt;code&gt;'django.contrib.admin'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e5ad72d051f2c508d3660b55413bfd83991c9d5" translate="yes" xml:space="preserve">
          <source>If you are using a custom &lt;code&gt;ModelAdmin&lt;/code&gt; which is a subclass of &lt;code&gt;django.contrib.auth.admin.UserAdmin&lt;/code&gt;, then you need to add your custom fields to &lt;code&gt;fieldsets&lt;/code&gt; (for fields to be used in editing users) and to &lt;code&gt;add_fieldsets&lt;/code&gt; (for fields to be used when creating a user). For example:</source>
          <target state="translated">如果您使用的是定制 &lt;code&gt;ModelAdmin&lt;/code&gt; 是的子类 &lt;code&gt;django.contrib.auth.admin.UserAdmin&lt;/code&gt; ，那么你就需要您的自定义字段添加到 &lt;code&gt;fieldsets&lt;/code&gt; （用于编辑的用户使用的字段）和 &lt;code&gt;add_fieldsets&lt;/code&gt; （字段的是创建用户时使用）。例如：</target>
        </trans-unit>
        <trans-unit id="55299cb11d5a4d1a27e95db83e96e73588d11d45" translate="yes" xml:space="preserve">
          <source>If you are using a legacy database that contains &lt;code&gt;TIMESTAMP&lt;/code&gt; columns, you must set &lt;a href=&quot;settings#std:setting-USE_TZ&quot;&gt;&lt;code&gt;USE_TZ = False&lt;/code&gt;&lt;/a&gt; to avoid data corruption. &lt;a href=&quot;django-admin#django-admin-inspectdb&quot;&gt;&lt;code&gt;inspectdb&lt;/code&gt;&lt;/a&gt; maps these columns to &lt;a href=&quot;models/fields#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt; and if you enable timezone support, both MySQL and Django will attempt to convert the values from UTC to local time.</source>
          <target state="translated">如果使用的旧数据库包含 &lt;code&gt;TIMESTAMP&lt;/code&gt; 列，则必须将&lt;a href=&quot;settings#std:setting-USE_TZ&quot;&gt; &lt;code&gt;USE_TZ = False&lt;/code&gt; &lt;/a&gt;设置为避免数据损坏。&lt;a href=&quot;django-admin#django-admin-inspectdb&quot;&gt; &lt;code&gt;inspectdb&lt;/code&gt; &lt;/a&gt;将这些列映射到&lt;a href=&quot;models/fields#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt;，如果启用时区支持，则MySQL和Django都会尝试将值从UTC转换为本地时间。</target>
        </trans-unit>
        <trans-unit id="9b9eb482ea04b91f418d3f207e5896276fab27cb" translate="yes" xml:space="preserve">
          <source>If you are using a production backend that can accept a wider range of keys (a custom backend, or one of the non-memcached built-in backends), and want to use this wider range without warnings, you can silence &lt;code&gt;CacheKeyWarning&lt;/code&gt; with this code in the &lt;code&gt;management&lt;/code&gt; module of one of your &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果您使用的生产后端可以接受更广泛的键范围（自定义后端或非内存缓存的内置后端之一），并且想要在没有警告的情况下使用更大范围的键，则可以使用此代码使 &lt;code&gt;CacheKeyWarning&lt;/code&gt; 静音在您的&lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;之一的 &lt;code&gt;management&lt;/code&gt; 模块中：</target>
        </trans-unit>
        <trans-unit id="400ddbb0cf2f8ce72e355d92bebfc1e26ffa4aab" translate="yes" xml:space="preserve">
          <source>If you are using a version of Apache older than 2.4, replace &lt;code&gt;Require all granted&lt;/code&gt; with &lt;code&gt;Allow from all&lt;/code&gt; and also add the line &lt;code&gt;Order deny,allow&lt;/code&gt; above it.</source>
          <target state="translated">如果您使用的是Apache版本比2.4更老，更换 &lt;code&gt;Require all granted&lt;/code&gt; 与 &lt;code&gt;Allow from all&lt;/code&gt; 并添加一行 &lt;code&gt;Order deny,allow&lt;/code&gt; 它上面。</target>
        </trans-unit>
        <trans-unit id="e9b1ff813f22a4d98b3e0ec7f8d1a70dfb440c12" translate="yes" xml:space="preserve">
          <source>If you are using caching provided by Django, you should consider clearing your cache after upgrading. Otherwise you may run into problems, for example, if you are caching pickled objects as these objects are not guaranteed to be pickle-compatible across Django versions. A past instance of incompatibility was caching pickled &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; objects, either directly or indirectly via the &lt;a href=&quot;../topics/cache#django.views.decorators.cache.cache_page&quot;&gt;&lt;code&gt;cache_page()&lt;/code&gt;&lt;/a&gt; decorator.</source>
          <target state="translated">如果您使用的是Django提供的缓存，则应考虑在升级后清除缓存。否则，您可能会遇到问题，例如，如果您在缓存腌制的对象时，因为不能保证这些对象在Django版本之间都是与腌制兼容的。过去的不兼容性实例是直接或通过&lt;a href=&quot;../topics/cache#django.views.decorators.cache.cache_page&quot;&gt; &lt;code&gt;cache_page()&lt;/code&gt; &lt;/a&gt;装饰器间接缓存已腌制的&lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="31c81067457a54fed13944b98da35401d7bcbd26" translate="yes" xml:space="preserve">
          <source>If you are using class-based views, you can refer to &lt;a href=&quot;../topics/class-based-views/intro#id1&quot;&gt;Decorating class-based views&lt;/a&gt;.</source>
          <target state="translated">如果您使用的是基于类的视图，则可以参考&lt;a href=&quot;../topics/class-based-views/intro#id1&quot;&gt;装饰基于类的视图&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="74bc5b3d8a5fb005230ddd51971a6b250b4753ac" translate="yes" xml:space="preserve">
          <source>If you are using more than one database you can use &lt;code&gt;django.db.connections&lt;/code&gt; to obtain the connection (and cursor) for a specific database. &lt;code&gt;django.db.connections&lt;/code&gt; is a dictionary-like object that allows you to retrieve a specific connection using its alias:</source>
          <target state="translated">如果您使用多个数据库，则可以使用 &lt;code&gt;django.db.connections&lt;/code&gt; 获取特定数据库的连接（和游标）。 &lt;code&gt;django.db.connections&lt;/code&gt; 是一个类似于字典的对象，它允许您使用其别名检索特定的连接：</target>
        </trans-unit>
        <trans-unit id="0ecf06722ffb34ee4a0fedfb0511c983d4a713e0" translate="yes" xml:space="preserve">
          <source>If you are using multiple database caches, &lt;a href=&quot;../ref/django-admin#django-admin-createcachetable&quot;&gt;&lt;code&gt;createcachetable&lt;/code&gt;&lt;/a&gt; creates one table for each cache.</source>
          <target state="translated">如果使用多个数据库缓存，则&lt;a href=&quot;../ref/django-admin#django-admin-createcachetable&quot;&gt; &lt;code&gt;createcachetable&lt;/code&gt; &lt;/a&gt;为每个缓存创建一个表。</target>
        </trans-unit>
        <trans-unit id="c1f1afe7956d536875c96cebe4354cfc56b04593" translate="yes" xml:space="preserve">
          <source>If you are using multiple databases, &lt;a href=&quot;../ref/django-admin#django-admin-createcachetable&quot;&gt;&lt;code&gt;createcachetable&lt;/code&gt;&lt;/a&gt; observes the &lt;code&gt;allow_migrate()&lt;/code&gt; method of your database routers (see below).</source>
          <target state="translated">如果使用多个数据库，则&lt;a href=&quot;../ref/django-admin#django-admin-createcachetable&quot;&gt; &lt;code&gt;createcachetable&lt;/code&gt; 会&lt;/a&gt;观察数据库路由器的 &lt;code&gt;allow_migrate()&lt;/code&gt; 方法（请参见下文）。</target>
        </trans-unit>
        <trans-unit id="df924b4a3089f458dd4a26a99d7de10d2a275ae2" translate="yes" xml:space="preserve">
          <source>If you are using test decorators, they must be async-compatible to ensure they work correctly. Django&amp;rsquo;s built-in decorators will behave correctly, but third-party ones may appear to not execute (they will &amp;ldquo;wrap&amp;rdquo; the wrong part of the execution flow and not your test).</source>
          <target state="translated">如果使用测试装饰器，则它们必须与异步兼容，以确保它们正常工作。Django的内置装饰器将正常运行，但第三方装饰器似乎无法执行（它们将&amp;ldquo;包装&amp;rdquo;执行流程的错误部分，而不是测试）。</target>
        </trans-unit>
        <trans-unit id="d8e86b0dcae3d153f97ecddffbaca181d07969ec" translate="yes" xml:space="preserve">
          <source>If you are using the &lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt; backend, this probably isn&amp;rsquo;t the documentation you&amp;rsquo;re looking for. An instance of the &lt;code&gt;Engine&lt;/code&gt; class described below is accessible using the &lt;code&gt;engine&lt;/code&gt; attribute of that backend and any attribute defaults mentioned below are overridden by what&amp;rsquo;s passed by &lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您使用的是&lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;DjangoTemplates&lt;/code&gt; &lt;/a&gt;后端，则可能不是您要查找的文档。可以使用该后端的 &lt;code&gt;engine&lt;/code&gt; 属性访问下面描述的 &lt;code&gt;Engine&lt;/code&gt; 类的实例，并且下面提到的任何属性默认值都会被&lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;DjangoTemplates&lt;/code&gt; &lt;/a&gt;传递的内容覆盖。</target>
        </trans-unit>
        <trans-unit id="98aa047d8bc9dd103405d4da35377acc8117f24d" translate="yes" xml:space="preserve">
          <source>If you are using the &lt;a href=&quot;db/managers#django.db.models.from_queryset&quot;&gt;&lt;code&gt;from_queryset()&lt;/code&gt;&lt;/a&gt; function to dynamically generate a manager class, you need to inherit from the generated class to make it importable:</source>
          <target state="translated">如果使用&lt;a href=&quot;db/managers#django.db.models.from_queryset&quot;&gt; &lt;code&gt;from_queryset()&lt;/code&gt; &lt;/a&gt;函数动态生成管理器类，则需要从生成的类继承以使其可导入：</target>
        </trans-unit>
        <trans-unit id="b152ab1851b4b76c1b0fadc99e24633039333bc3" translate="yes" xml:space="preserve">
          <source>If you are using the default &lt;a href=&quot;../files/storage#django.core.files.storage.FileSystemStorage&quot;&gt;&lt;code&gt;FileSystemStorage&lt;/code&gt;&lt;/a&gt;, the string value will be appended to your &lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt;&lt;/a&gt; path to form the location on the local filesystem where uploaded files will be stored. If you are using a different storage, check that storage&amp;rsquo;s documentation to see how it handles &lt;code&gt;upload_to&lt;/code&gt;.</source>
          <target state="translated">如果使用默认的&lt;a href=&quot;../files/storage#django.core.files.storage.FileSystemStorage&quot;&gt; &lt;code&gt;FileSystemStorage&lt;/code&gt; &lt;/a&gt;，则字符串值将附加到&lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt; &lt;code&gt;MEDIA_ROOT&lt;/code&gt; &lt;/a&gt;路径中，以形成本地文件系统上将存储上传文件的位置。如果您使用的是其他存储，请查看该存储的文档以查看其如何处理 &lt;code&gt;upload_to&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d24da33ace038770df53fb75680d36c64adccce" translate="yes" xml:space="preserve">
          <source>If you are using the default test runner, you can control this with the the &lt;a href=&quot;../../ref/settings#std:setting-TEST_SERIALIZE&quot;&gt;&lt;code&gt;SERIALIZE&lt;/code&gt;&lt;/a&gt; entry in the &lt;a href=&quot;../../ref/settings#std:setting-DATABASE-TEST&quot;&gt;&lt;code&gt;TEST&lt;/code&gt;&lt;/a&gt; dictionary.</source>
          <target state="translated">如果您使用默认的测试运行程序，则可以通过&lt;a href=&quot;../../ref/settings#std:setting-DATABASE-TEST&quot;&gt; &lt;code&gt;TEST&lt;/code&gt; &lt;/a&gt;词典中的&lt;a href=&quot;../../ref/settings#std:setting-TEST_SERIALIZE&quot;&gt; &lt;code&gt;SERIALIZE&lt;/code&gt; &lt;/a&gt;条目来控制它。</target>
        </trans-unit>
        <trans-unit id="3b67e56408c732a18c6ba1adae555cdf257848ab" translate="yes" xml:space="preserve">
          <source>If you are wanting to change the Python-only behavior of a model, but keep all the same fields as in the original, use &lt;code&gt;Meta.proxy=True&lt;/code&gt;. This sets things up so that the proxy model is an exact copy of the storage structure of the original model when data is saved.</source>
          <target state="translated">如果要更改模型的仅Python行为，但保留与原始模型相同的所有字段，请使用 &lt;code&gt;Meta.proxy=True&lt;/code&gt; 。这样可以进行设置，以便在保存数据时，代理模型是原始模型存储结构的精确副本。</target>
        </trans-unit>
        <trans-unit id="f2bd0fdb6a5a5ac5aa3b6f2e67b4ab2cda67e9ec" translate="yes" xml:space="preserve">
          <source>If you are writing a &lt;a href=&quot;../../intro/reusable-apps&quot;&gt;reusable application&lt;/a&gt; you may want to use the Django test runner to run your own test suite and thus benefit from the Django testing infrastructure.</source>
          <target state="translated">如果您正在编写&lt;a href=&quot;../../intro/reusable-apps&quot;&gt;可重用的应用程序&lt;/a&gt;，则可能需要使用Django测试运行器来运行您自己的测试套件，从而从Django测试基础结构中受益。</target>
        </trans-unit>
        <trans-unit id="63f4345566a629d77c36a5b719a36c80b1781cf7" translate="yes" xml:space="preserve">
          <source>If you are writing an application that must be portable to multiple database backends, you should be aware that there are restrictions on &lt;code&gt;max_length&lt;/code&gt; for some backends. Refer to the &lt;a href=&quot;../databases&quot;&gt;database backend notes&lt;/a&gt; for details.</source>
          <target state="translated">如果编写的应用程序必须可移植到多个数据库后端，则应注意某些后端对 &lt;code&gt;max_length&lt;/code&gt; 有限制。有关详细信息，请参考&lt;a href=&quot;../databases&quot;&gt;数据库后端说明&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3ec3b03a16835f16337bac3782d93796fddb90be" translate="yes" xml:space="preserve">
          <source>If you are writing custom views for Django&amp;rsquo;s admin (or need the same authorization check that the built-in views use), you may find the &lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.views.decorators.staff_member_required&quot;&gt;&lt;code&gt;django.contrib.admin.views.decorators.staff_member_required()&lt;/code&gt;&lt;/a&gt; decorator a useful alternative to &lt;code&gt;login_required()&lt;/code&gt;.</source>
          <target state="translated">如果您正在为Django的管理员编写自定义视图（或需要与内置视图使用相同的授权检查），则可能会发现&lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.views.decorators.staff_member_required&quot;&gt; &lt;code&gt;django.contrib.admin.views.decorators.staff_member_required()&lt;/code&gt; &lt;/a&gt;装饰器是 &lt;code&gt;login_required()&lt;/code&gt; 的有用替代方法。</target>
        </trans-unit>
        <trans-unit id="9260861ea3c89683f0065f3584c6348bda3c70e8" translate="yes" xml:space="preserve">
          <source>If you are writing or maintaining a third-party database backend for Django, you will need to provide a &lt;code&gt;SchemaEditor&lt;/code&gt; implementation in order to work with 1.7&amp;rsquo;s migration functionality - however, as long as your database is relatively standard in its use of SQL and relational design, you should be able to subclass one of the built-in Django &lt;code&gt;SchemaEditor&lt;/code&gt; classes and tweak the syntax a little. Also note that there are a few new database features that migrations will look for: &lt;code&gt;can_rollback_ddl&lt;/code&gt; and &lt;code&gt;supports_combined_alters&lt;/code&gt; are the most important.</source>
          <target state="translated">如果要为Django编写或维护第三方数据库后端，则需要提供 &lt;code&gt;SchemaEditor&lt;/code&gt; 实现才能使用1.7的迁移功能-但是，只要您的数据库在使用SQL和SQL方面相对标准，关系设计，您应该能够将内置Django &lt;code&gt;SchemaEditor&lt;/code&gt; 类的一个子类化，并对其语法进行一些调整。还要注意，迁移会寻找一些新的数据库功能： &lt;code&gt;can_rollback_ddl&lt;/code&gt; 和 &lt;code&gt;supports_combined_alters&lt;/code&gt; 是最重要的。</target>
        </trans-unit>
        <trans-unit id="b0f8725f4059061d6c5d765e52cefa75411612d2" translate="yes" xml:space="preserve">
          <source>If you are writing or maintaining a third-party database backend for Django, you will need to provide a &lt;code&gt;SchemaEditor&lt;/code&gt; implementation in order to work with Django&amp;rsquo;s migration functionality - however, as long as your database is relatively standard in its use of SQL and relational design, you should be able to subclass one of the built-in Django &lt;code&gt;SchemaEditor&lt;/code&gt; classes and tweak the syntax a little.</source>
          <target state="translated">如果您正在为Django编写或维护第三方数据库后端，则需要提供 &lt;code&gt;SchemaEditor&lt;/code&gt; 实现才能使用Django的迁移功能-但是，只要您的数据库在使用SQL和关系设计方面相对标准， ，您应该能够 &lt;code&gt;SchemaEditor&lt;/code&gt; 内置的Django SchemaEditor类之一，并对其语法进行一些调整。</target>
        </trans-unit>
        <trans-unit id="6e12212c9814a4d33e32e4d9464358cf6356b217" translate="yes" xml:space="preserve">
          <source>If you assign a value of &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; to an attribute, it will be rendered as an HTML5 boolean attribute:</source>
          <target state="translated">如果您为属性分配 &lt;code&gt;True&lt;/code&gt; 或 &lt;code&gt;False&lt;/code&gt; 值，它将被呈现为HTML5布尔值属性：</target>
        </trans-unit>
        <trans-unit id="32c8444bd1418d1e80bc0e62c5a90e8f82286fbe" translate="yes" xml:space="preserve">
          <source>If you assign auto-primary-key values manually, make sure not to use an already-existing primary-key value! If you create a new object with an explicit primary-key value that already exists in the database, Django will assume you&amp;rsquo;re changing the existing record rather than creating a new one.</source>
          <target state="translated">如果您手动分配自动主键值，请确保不要使用已经存在的主键值！如果您使用数据库中已经存在的显式主键值创建新对象，则Django会假定您正在更改现有记录，而不是创建新记录。</target>
        </trans-unit>
        <trans-unit id="49a2f3768ca62045d71dd6c07b469ec6cd3d26bc" translate="yes" xml:space="preserve">
          <source>If you attempt to access a database that you haven&amp;rsquo;t defined in your &lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt; setting, Django will raise a &lt;code&gt;django.db.utils.ConnectionDoesNotExist&lt;/code&gt; exception.</source>
          <target state="translated">如果您尝试访问未在&lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt;设置中定义的数据库，则Django将引发 &lt;code&gt;django.db.utils.ConnectionDoesNotExist&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="094a5a53db7e5fc234781db19fdb93e284cd8498" translate="yes" xml:space="preserve">
          <source>If you attempt to insert a new row that conflicts with an existing row, an &lt;a href=&quot;../../exceptions#django.db.IntegrityError&quot;&gt;&lt;code&gt;IntegrityError&lt;/code&gt;&lt;/a&gt; is raised. Similarly, when update conflicts with an existing row.</source>
          <target state="translated">如果尝试插入与现有行冲突的新行，则会引发&lt;a href=&quot;../../exceptions#django.db.IntegrityError&quot;&gt; &lt;code&gt;IntegrityError&lt;/code&gt; &lt;/a&gt;。同样，当更新与现有行发生冲突时。</target>
        </trans-unit>
        <trans-unit id="b554a2162422140f6059440c8b501ad2c5a78b5b" translate="yes" xml:space="preserve">
          <source>If you attempt to use &lt;a href=&quot;#django.contrib.sites.managers.CurrentSiteManager&quot;&gt;&lt;code&gt;CurrentSiteManager&lt;/code&gt;&lt;/a&gt; and pass a field name that doesn&amp;rsquo;t exist, Django will raise a &lt;code&gt;ValueError&lt;/code&gt;.</source>
          <target state="translated">如果尝试使用&lt;a href=&quot;#django.contrib.sites.managers.CurrentSiteManager&quot;&gt; &lt;code&gt;CurrentSiteManager&lt;/code&gt; &lt;/a&gt;并传递不存在的字段名称，则Django将引发 &lt;code&gt;ValueError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e5abf4e7be3fc5b817d5e64f617996405c68b1a" translate="yes" xml:space="preserve">
          <source>If you call &lt;code&gt;formset.save(commit=False)&lt;/code&gt;, objects will not be deleted automatically. You&amp;rsquo;ll need to call &lt;code&gt;delete()&lt;/code&gt; on each of the &lt;a href=&quot;modelforms#django.forms.models.BaseModelFormSet.deleted_objects&quot;&gt;&lt;code&gt;formset.deleted_objects&lt;/code&gt;&lt;/a&gt; to actually delete them:</source>
          <target state="translated">如果调用 &lt;code&gt;formset.save(commit=False)&lt;/code&gt; ，则不会自动删除对象。您需要在每个&lt;a href=&quot;modelforms#django.forms.models.BaseModelFormSet.deleted_objects&quot;&gt; &lt;code&gt;formset.deleted_objects&lt;/code&gt; &lt;/a&gt;上调用 &lt;code&gt;delete()&lt;/code&gt; 才能实际删除它们：</target>
        </trans-unit>
        <trans-unit id="77f2d3ee05bddf46e62d79be0db43fed60754a7d" translate="yes" xml:space="preserve">
          <source>If you call &lt;code&gt;get_template('story_detail.html')&lt;/code&gt;, here are the files Django will look for, in order:</source>
          <target state="translated">如果调用 &lt;code&gt;get_template('story_detail.html')&lt;/code&gt; ，以下是Django将按顺序查找的文件：</target>
        </trans-unit>
        <trans-unit id="81d2651eaffa16d0fff33c40f11a5412ce1b24bb" translate="yes" xml:space="preserve">
          <source>If you call &lt;code&gt;on_commit()&lt;/code&gt; while there isn&amp;rsquo;t an active transaction, the callback will be executed immediately.</source>
          <target state="translated">如果在没有活动事务的情况下调用 &lt;code&gt;on_commit()&lt;/code&gt; ，则回调将立即执行。</target>
        </trans-unit>
        <trans-unit id="fd4a96e10fe18bc75c5654babe72785efc64e7dd" translate="yes" xml:space="preserve">
          <source>If you call &lt;code&gt;select_template(['story_253_detail.html', 'story_detail.html'])&lt;/code&gt;, here&amp;rsquo;s what Django will look for:</source>
          <target state="translated">如果调用 &lt;code&gt;select_template(['story_253_detail.html', 'story_detail.html'])&lt;/code&gt; ，则Django将查找以下内容：</target>
        </trans-unit>
        <trans-unit id="b2232cc0a9efa6073693abc788397e1cd49fb07c" translate="yes" xml:space="preserve">
          <source>If you can&amp;rsquo;t find the solution to your problem here then participate in the community! You can:</source>
          <target state="translated">如果您在这里找不到问题的解决方案，请加入社区！您可以：</target>
        </trans-unit>
        <trans-unit id="f9c5827d1b1d34ede00df19d4fc1cff6b7b1859a" translate="yes" xml:space="preserve">
          <source>If you can&amp;rsquo;t use mod_wsgi for some reason, fear not: Django supports many other deployment options. One is &lt;a href=&quot;../howto/deployment/wsgi/uwsgi&quot;&gt;uWSGI&lt;/a&gt;; it works very well with &lt;a href=&quot;https://nginx.org/&quot;&gt;nginx&lt;/a&gt;. Additionally, Django follows the WSGI spec (&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;), which allows it to run on a variety of server platforms.</source>
          <target state="translated">如果由于某种原因不能使用mod_wsgi，请不要担心：Django支持许多其他部署选项。一种是&lt;a href=&quot;../howto/deployment/wsgi/uwsgi&quot;&gt;uWSGI&lt;/a&gt; ; 它与&lt;a href=&quot;https://nginx.org/&quot;&gt;nginx一起&lt;/a&gt;很好地工作。此外，Django遵循WSGI规范（&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;），该规范使其可以在各种服务器平台上运行。</target>
        </trans-unit>
        <trans-unit id="714e0fc374856568ae969db6c05be8f214cc209c" translate="yes" xml:space="preserve">
          <source>If you catch exceptions raised by raw SQL queries, Django&amp;rsquo;s behavior is unspecified and database-dependent.</source>
          <target state="translated">如果您捕获原始SQL查询引发的异常，则Django的行为是未指定的且与数据库有关。</target>
        </trans-unit>
        <trans-unit id="46398ea388c4a399cca78d1e3fb2ac07fe7b2c36" translate="yes" xml:space="preserve">
          <source>If you change a &lt;a href=&quot;../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; to use a &lt;code&gt;through&lt;/code&gt; model, the default migration will delete the existing table and create a new one, losing the existing relations. To avoid this, you can use &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.SeparateDatabaseAndState&quot;&gt;&lt;code&gt;SeparateDatabaseAndState&lt;/code&gt;&lt;/a&gt; to rename the existing table to the new table name whilst telling the migration autodetector that the new model has been created. You can check the existing table name through &lt;a href=&quot;../ref/django-admin#django-admin-sqlmigrate&quot;&gt;&lt;code&gt;sqlmigrate&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../ref/django-admin#django-admin-dbshell&quot;&gt;&lt;code&gt;dbshell&lt;/code&gt;&lt;/a&gt;. You can check the new table name with the through model&amp;rsquo;s &lt;code&gt;_meta.db_table&lt;/code&gt; property. Your new &lt;code&gt;through&lt;/code&gt; model should use the same names for the &lt;code&gt;ForeignKey&lt;/code&gt;s as Django did. Also if it needs any extra fields, they should be added in operations after &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.SeparateDatabaseAndState&quot;&gt;&lt;code&gt;SeparateDatabaseAndState&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果将&lt;a href=&quot;../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;更改为使用 &lt;code&gt;through&lt;/code&gt; 模型，则默认迁移将删除现有表并创建一个新表，从而丢失现有关系。为避免这种情况，您可以使用&lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.SeparateDatabaseAndState&quot;&gt; &lt;code&gt;SeparateDatabaseAndState&lt;/code&gt; &lt;/a&gt;将现有表重命名为新表名，同时告诉迁移自动检测器已创建新模型。您可以通过&lt;a href=&quot;../ref/django-admin#django-admin-sqlmigrate&quot;&gt; &lt;code&gt;sqlmigrate&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../ref/django-admin#django-admin-dbshell&quot;&gt; &lt;code&gt;dbshell&lt;/code&gt; &lt;/a&gt;检查现有表名称。您可以使用直通模型的 &lt;code&gt;_meta.db_table&lt;/code&gt; 属性检查新表的名称。您的新 &lt;code&gt;through&lt;/code&gt; 模型应为 &lt;code&gt;ForeignKey&lt;/code&gt; 使用相同的名称就像Django一样。另外，如果需要任何其他字段，则应在&lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.SeparateDatabaseAndState&quot;&gt; &lt;code&gt;SeparateDatabaseAndState&lt;/code&gt; &lt;/a&gt;之后的操作中添加它们。</target>
        </trans-unit>
        <trans-unit id="812b7dd3005f0d1c3f0522730a119cabfc50f94f" translate="yes" xml:space="preserve">
          <source>If you customized the OSGeo4W installation directories, then you will need to modify the &lt;code&gt;OSGEO4W_ROOT&lt;/code&gt; variables accordingly.</source>
          <target state="translated">如果定制了OSGeo4W安装目录，则需要相应地修改 &lt;code&gt;OSGEO4W_ROOT&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="94e38667622f6c2c7156cdc76fe9c7801210a45e" translate="yes" xml:space="preserve">
          <source>If you customized the Python or OSGeo4W installation directories, then you will need to modify the &lt;code&gt;OSGEO4W_ROOT&lt;/code&gt; and/or &lt;code&gt;PYTHON_ROOT&lt;/code&gt; variables accordingly.</source>
          <target state="translated">如果定制了Python或OSGeo4W安装目录，则需要相应地修改 &lt;code&gt;OSGEO4W_ROOT&lt;/code&gt; 和/或 &lt;code&gt;PYTHON_ROOT&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="daa850f3332eec5c502db816abab6725f3877956" translate="yes" xml:space="preserve">
          <source>If you decide not to loop over the radio buttons &amp;ndash; e.g., if your template includes &lt;code&gt;{{ myform.beatles }}&lt;/code&gt; &amp;ndash; they&amp;rsquo;ll be output in a &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; with &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; tags, as above.</source>
          <target state="translated">如果您决定不循环显示单选按钮（例如，如果模板包含 &lt;code&gt;{{ myform.beatles }}&lt;/code&gt; ，则它们将以带有 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 标记的 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; 形式输出，如上所述。</target>
        </trans-unit>
        <trans-unit id="6e464f5ba0eea9891fc2679642fe2eb1b677c058" translate="yes" xml:space="preserve">
          <source>If you decide to use the latest development version of Django, you&amp;rsquo;ll want to pay close attention to &lt;a href=&quot;https://code.djangoproject.com/timeline&quot;&gt;the development timeline&lt;/a&gt;, and you&amp;rsquo;ll want to keep an eye on the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/releases/index/#development-release-notes&quot;&gt;release notes for the upcoming release&lt;/a&gt;. This will help you stay on top of any new features you might want to use, as well as any changes you&amp;rsquo;ll need to make to your code when updating your copy of Django. (For stable releases, any necessary changes are documented in the release notes.)</source>
          <target state="translated">如果您决定使用Django的最新开发版本，则需要密切注意&lt;a href=&quot;https://code.djangoproject.com/timeline&quot;&gt;开发时间表&lt;/a&gt;，并且要留意&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/releases/index/#development-release-notes&quot;&gt;即将发布&lt;/a&gt;的发行说明。这将帮助您掌握可能要使用的所有新功能，以及在更新Django副本时需要对代码进行的任何更改。（对于稳定版本，任何必要的更改都记录在发行说明中。）</target>
        </trans-unit>
        <trans-unit id="f6211d5ac8fb417dfa2dabd5bde70687e0d4cb0f" translate="yes" xml:space="preserve">
          <source>If you decide to use the latest development version of Django, you&amp;rsquo;ll want to pay close attention to &lt;a href=&quot;https://code.djangoproject.com/timeline&quot;&gt;the development timeline&lt;/a&gt;, and you&amp;rsquo;ll want to keep an eye on the &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/releases/index/#development-release-notes&quot;&gt;release notes for the upcoming release&lt;/a&gt;. This will help you stay on top of any new features you might want to use, as well as any changes you&amp;rsquo;ll need to make to your code when updating your copy of Django. (For stable releases, any necessary changes are documented in the release notes.)</source>
          <target state="translated">如果您决定使用Django的最新开发版本，则需要密切注意&lt;a href=&quot;https://code.djangoproject.com/timeline&quot;&gt;开发时间表&lt;/a&gt;，并密切注意&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/releases/index/#development-release-notes&quot;&gt;即将发布&lt;/a&gt;的发行说明。这将帮助您掌握可能要使用的所有新功能，以及在更新Django副本时需要对代码进行的任何更改。（对于稳定版本，任何必要的更改都记录在发行说明中。）</target>
        </trans-unit>
        <trans-unit id="367511bd4ccbdd57657dc6f20fe5383038baa533" translate="yes" xml:space="preserve">
          <source>If you declare a hybrid middleware that supports both synchronous and asynchronous calls, the kind of call you get may not match the underlying view. Django will optimize the middleware call stack to have as few sync/async transitions as possible.</source>
          <target state="translated">如果你声明了一个同时支持同步和异步调用的混合中间件,你得到的调用种类可能与底层视图不匹配。Django会优化中间件调用栈,使其尽可能少的同步/异步转换。</target>
        </trans-unit>
        <trans-unit id="ad704302a2e0f4e5bbd68ed3a827973dea658d2e" translate="yes" xml:space="preserve">
          <source>If you define a custom &lt;a href=&quot;#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt; setting, you can mark the language names as translation strings using the &lt;a href=&quot;utils#django.utils.translation.gettext_lazy&quot;&gt;&lt;code&gt;gettext_lazy()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">如果定义了自定义&lt;a href=&quot;#std:setting-LANGUAGES&quot;&gt; &lt;code&gt;LANGUAGES&lt;/code&gt; &lt;/a&gt;设置，则可以使用&lt;a href=&quot;utils#django.utils.translation.gettext_lazy&quot;&gt; &lt;code&gt;gettext_lazy()&lt;/code&gt; &lt;/a&gt;函数将语言名称标记为翻译字符串。</target>
        </trans-unit>
        <trans-unit id="b08ee922d63ba491bb2cdb4cdfbeae244906b41e" translate="yes" xml:space="preserve">
          <source>If you define a custom &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt; setting, as explained in the previous bullet, you can mark the language names as translation strings &amp;ndash; but use &lt;a href=&quot;../../ref/utils#django.utils.translation.gettext_lazy&quot;&gt;&lt;code&gt;gettext_lazy()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../../ref/utils#django.utils.translation.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; to avoid a circular import.</source>
          <target state="translated">如果您定义了自定义&lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt; &lt;code&gt;LANGUAGES&lt;/code&gt; &lt;/a&gt;设置（如上一个项目符号中所述），则可以将语言名称标记为翻译字符串-但使用&lt;a href=&quot;../../ref/utils#django.utils.translation.gettext_lazy&quot;&gt; &lt;code&gt;gettext_lazy()&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;../../ref/utils#django.utils.translation.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;可以避免循环导入。</target>
        </trans-unit>
        <trans-unit id="fcb6c3e1edc1b97b11ed2b6af3ff6371f63271e0" translate="yes" xml:space="preserve">
          <source>If you define the &lt;code&gt;Meta.model&lt;/code&gt; attribute on a &lt;a href=&quot;../../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt;, you must also define the &lt;code&gt;Meta.fields&lt;/code&gt; attribute (or the &lt;code&gt;Meta.exclude&lt;/code&gt; attribute). However, &lt;code&gt;ModelAdmin&lt;/code&gt; ignores this value, overriding it with the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_editable&quot;&gt;&lt;code&gt;ModelAdmin.list_editable&lt;/code&gt;&lt;/a&gt; attribute. The easiest solution is to omit the &lt;code&gt;Meta.model&lt;/code&gt; attribute, since &lt;code&gt;ModelAdmin&lt;/code&gt; will provide the correct model to use.</source>
          <target state="translated">如果定义 &lt;code&gt;Meta.model&lt;/code&gt; 上一个属性&lt;a href=&quot;../../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt;，你还必须定义 &lt;code&gt;Meta.fields&lt;/code&gt; 属性（或 &lt;code&gt;Meta.exclude&lt;/code&gt; 属性）。但是， &lt;code&gt;ModelAdmin&lt;/code&gt; 会忽略此值，并使用&lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_editable&quot;&gt; &lt;code&gt;ModelAdmin.list_editable&lt;/code&gt; &lt;/a&gt;属性覆盖它。最简单的解决方案是忽略 &lt;code&gt;Meta.model&lt;/code&gt; 属性，因为 &lt;code&gt;ModelAdmin&lt;/code&gt; 将提供要使用的正确模型。</target>
        </trans-unit>
        <trans-unit id="485fe478429ed2c9c1a4f227e8e46539022690b8" translate="yes" xml:space="preserve">
          <source>If you define the &lt;code&gt;Meta.model&lt;/code&gt; attribute on a &lt;a href=&quot;../../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt;, you must also define the &lt;code&gt;Meta.fields&lt;/code&gt; attribute (or the &lt;code&gt;Meta.exclude&lt;/code&gt; attribute). However, since the admin has its own way of defining fields, the &lt;code&gt;Meta.fields&lt;/code&gt; attribute will be ignored.</source>
          <target state="translated">如果定义 &lt;code&gt;Meta.model&lt;/code&gt; 上一个属性&lt;a href=&quot;../../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt;，你还必须定义 &lt;code&gt;Meta.fields&lt;/code&gt; 属性（或 &lt;code&gt;Meta.exclude&lt;/code&gt; 属性）。但是，由于管理员具有自己定义字段的方式，因此 &lt;code&gt;Meta.fields&lt;/code&gt; 属性将被忽略。</target>
        </trans-unit>
        <trans-unit id="45386bfd1f22aa5a94eb25eb7ab85058786a5cc9" translate="yes" xml:space="preserve">
          <source>If you define your own test runner class and point &lt;a href=&quot;../../ref/settings#std:setting-TEST_RUNNER&quot;&gt;&lt;code&gt;TEST_RUNNER&lt;/code&gt;&lt;/a&gt; at that class, Django will execute your test runner whenever you run &lt;code&gt;./manage.py test&lt;/code&gt;. In this way, it is possible to use any test framework that can be executed from Python code, or to modify the Django test execution process to satisfy whatever testing requirements you may have.</source>
          <target state="translated">如果您定义自己的测试运行程序类，并将&lt;a href=&quot;../../ref/settings#std:setting-TEST_RUNNER&quot;&gt; &lt;code&gt;TEST_RUNNER&lt;/code&gt; &lt;/a&gt;指向该类，那么只要您运行 &lt;code&gt;./manage.py test&lt;/code&gt; ，Django就会执行您的测试运行程序。这样，可以使用可以从Python代码执行的任何测试框架，或者修改Django测试执行过程以满足您可能具有的任何测试要求。</target>
        </trans-unit>
        <trans-unit id="ea90d73bc6981a1948260ffdf5034a68bee6dab3" translate="yes" xml:space="preserve">
          <source>If you delete a field from a model instance, accessing it again reloads the value from the database:</source>
          <target state="translated">如果从模型实例中删除一个字段,再次访问它就会从数据库中重新加载该值。</target>
        </trans-unit>
        <trans-unit id="cff220c390a9ab95545f838c9087be24651f1351" translate="yes" xml:space="preserve">
          <source>If you delete a reporter, his articles will be deleted (assuming that the ForeignKey was defined with &lt;a href=&quot;../../../ref/models/fields#django.db.models.ForeignKey.on_delete&quot;&gt;&lt;code&gt;django.db.models.ForeignKey.on_delete&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;CASCADE&lt;/code&gt;, which is the default):</source>
          <target state="translated">如果删除记者，则他的文章将被删除（假设ForeignKey是在&lt;a href=&quot;../../../ref/models/fields#django.db.models.ForeignKey.on_delete&quot;&gt; &lt;code&gt;django.db.models.ForeignKey.on_delete&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;CASCADE&lt;/code&gt; 的情况下定义的，这是默认设置）：</target>
        </trans-unit>
        <trans-unit id="3e5714dd7ed956c18562b5fc034b352464e8a7d4" translate="yes" xml:space="preserve">
          <source>If you delete a reporter, their articles will be deleted (assuming that the ForeignKey was defined with &lt;a href=&quot;../../../ref/models/fields#django.db.models.ForeignKey.on_delete&quot;&gt;&lt;code&gt;django.db.models.ForeignKey.on_delete&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;CASCADE&lt;/code&gt;, which is the default):</source>
          <target state="translated">如果删除报告程序，则将删除其文章（假设ForeignKey是在&lt;a href=&quot;../../../ref/models/fields#django.db.models.ForeignKey.on_delete&quot;&gt; &lt;code&gt;django.db.models.ForeignKey.on_delete&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;CASCADE&lt;/code&gt; 的情况下定义的，这是默认设置）：</target>
        </trans-unit>
        <trans-unit id="d6c2e53ecc92c0f84dc913ba54c33563aaf304cc" translate="yes" xml:space="preserve">
          <source>If you detect errors in multiple fields during &lt;code&gt;Model.clean()&lt;/code&gt;, you can also pass a dictionary mapping field names to errors:</source>
          <target state="translated">如果在 &lt;code&gt;Model.clean()&lt;/code&gt; 期间在多个字段中检测到错误，则还可以将字典映射字段名称传递给错误：</target>
        </trans-unit>
        <trans-unit id="48e44cf0802dee16054df73fe1871ad99f86e145" translate="yes" xml:space="preserve">
          <source>If you detect multiple errors during a cleaning method and wish to signal all of them to the form submitter, it is possible to pass a list of errors to the &lt;code&gt;ValidationError&lt;/code&gt; constructor.</source>
          <target state="translated">如果您在清除方法期间检测到多个错误，并希望将所有错误发送给表单提交者，则可以将错误列表传递给 &lt;code&gt;ValidationError&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="4cb2bdf9479ffe7ea003c7007bb350d20e0ee892" translate="yes" xml:space="preserve">
          <source>If you disabled it, which is not recommended, you can use &lt;a href=&quot;#django.views.decorators.csrf.csrf_protect&quot;&gt;&lt;code&gt;csrf_protect()&lt;/code&gt;&lt;/a&gt; on particular views you want to protect (see below).</source>
          <target state="translated">如果不建议禁用它，则可以在要保护的特定视图上使用&lt;a href=&quot;#django.views.decorators.csrf.csrf_protect&quot;&gt; &lt;code&gt;csrf_protect()&lt;/code&gt; &lt;/a&gt;（请参见下文）。</target>
        </trans-unit>
        <trans-unit id="2479d1d20a26faec2996d634b0774780be84066c" translate="yes" xml:space="preserve">
          <source>If you do either of the first two steps, keep an eye out for parts of the documentation marked &lt;strong&gt;new in development version&lt;/strong&gt;. That phrase flags features that are only available in development versions of Django, and they likely won&amp;rsquo;t work with an official release.</source>
          <target state="translated">如果您执行前两个步骤中的任何一个，请注意文档中标&lt;strong&gt;有&amp;ldquo;开发版本&amp;rdquo;中&amp;ldquo;新&amp;rdquo;的&lt;/strong&gt;部分。该短语标记仅在Django开发版本中可用的功能，并且它们可能不适用于正式版本。</target>
        </trans-unit>
        <trans-unit id="2aaa0c487bb4c6a6eabbf43dd80c991c63a022d7" translate="yes" xml:space="preserve">
          <source>If you do not specify any app, all apps will be checked.</source>
          <target state="translated">如果你没有指定任何应用程序,所有的应用程序将被检查。</target>
        </trans-unit>
        <trans-unit id="4141223977e7c136210c586bc61b2fd0accffd3c" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;a href=&quot;#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt; argument for the &lt;code&gt;OneToOneField&lt;/code&gt;, Django will use the lowercase name of the current model as default value.</source>
          <target state="translated">如果您未为 &lt;code&gt;OneToOneField&lt;/code&gt; 指定&lt;a href=&quot;#django.db.models.ForeignKey.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt;参数，则Django将使用当前模型的小写名称作为默认值。</target>
        </trans-unit>
        <trans-unit id="d8109cdfe40c6ccae39110a25cad8a7f109000c4" translate="yes" xml:space="preserve">
          <source>If you do not want symmetry in many-to-many relationships with &lt;code&gt;self&lt;/code&gt;, set &lt;a href=&quot;#django.db.models.ManyToManyField.symmetrical&quot;&gt;&lt;code&gt;symmetrical&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt;. This will force Django to add the descriptor for the reverse relationship, allowing &lt;a href=&quot;#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; relationships to be non-symmetrical.</source>
          <target state="translated">如果您不希望与 &lt;code&gt;self&lt;/code&gt; 的多对多关系具有&lt;a href=&quot;#django.db.models.ManyToManyField.symmetrical&quot;&gt; &lt;code&gt;symmetrical&lt;/code&gt; &lt;/a&gt;，请将&amp;ldquo; 对称性&amp;rdquo;设置为 &lt;code&gt;False&lt;/code&gt; 。这将迫使Django为反向关系添加描述符，从而允许&lt;a href=&quot;#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;关系是非对称的。</target>
        </trans-unit>
        <trans-unit id="d7c82087cc8221fab70b35945b3651dea07d149a" translate="yes" xml:space="preserve">
          <source>If you do not want to wait for the currently running test to finish, you can press &lt;code&gt;Ctrl-C&lt;/code&gt; a second time and the test run will halt immediately, but not gracefully. No details of the tests run before the interruption will be reported, and any test databases created by the run will not be destroyed.</source>
          <target state="translated">如果您不想等待当前运行的测试完成，则可以再次按 &lt;code&gt;Ctrl-C&lt;/code&gt; ，测试运行将立即停止，但不会优雅地停止。不会报告中断之前运行的测试的详细信息，并且运行所创建的任何测试数据库都不会被破坏。</target>
        </trans-unit>
        <trans-unit id="18efad3241b2dca59f5e6839d85c3fd25968e685" translate="yes" xml:space="preserve">
          <source>If you do not wish for every occurrence of a particular string to have the same signature hash, you can use the optional &lt;code&gt;salt&lt;/code&gt; argument to the &lt;code&gt;Signer&lt;/code&gt; class. Using a salt will seed the signing hash function with both the salt and your &lt;a href=&quot;../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果您不希望特定字符串的每次出现都具有相同的签名哈希，则可以对 &lt;code&gt;Signer&lt;/code&gt; 类使用可选的 &lt;code&gt;salt&lt;/code&gt; 参数。使用盐将使盐和您的&lt;a href=&quot;../ref/settings#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; &lt;/a&gt;都成为签名哈希函数的种子：</target>
        </trans-unit>
        <trans-unit id="0bfd8f75b46ff74579ca2af7a7939f691c4a818d" translate="yes" xml:space="preserve">
          <source>If you do override this method, you must return the value of the attribute at the end. You should also update the model&amp;rsquo;s attribute if you make any changes to the value so that code holding references to the model will always see the correct value.</source>
          <target state="translated">如果您重写此方法，则必须在最后返回属性的值。如果您对该值进行任何更改，还应该更新模型的属性，以使保存对模型的引用的代码将始终看到正确的值。</target>
        </trans-unit>
        <trans-unit id="3bc531fc3e6fe0dda101c4233233899fb5df0175" translate="yes" xml:space="preserve">
          <source>If you do want to allow Django to manage the table&amp;rsquo;s lifecycle, you&amp;rsquo;ll need to change the &lt;a href=&quot;../ref/models/options#django.db.models.Options.managed&quot;&gt;&lt;code&gt;managed&lt;/code&gt;&lt;/a&gt; option above to &lt;code&gt;True&lt;/code&gt; (or remove it because &lt;code&gt;True&lt;/code&gt; is its default value).</source>
          <target state="translated">如果确实要允许Django管理表的生命周期，则需要将上述&lt;a href=&quot;../ref/models/options#django.db.models.Options.managed&quot;&gt; &lt;code&gt;managed&lt;/code&gt; &lt;/a&gt;选项更改为 &lt;code&gt;True&lt;/code&gt; （或将其删除，因为 &lt;code&gt;True&lt;/code&gt; 是其默认值）。</target>
        </trans-unit>
        <trans-unit id="1c3cd8e2ea1d7324cd1b2bd74b7c1b2da10ad473" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t add the &lt;code&gt;related_query_name&lt;/code&gt;, you can do the same types of lookups manually:</source>
          <target state="translated">如果不添加 &lt;code&gt;related_query_name&lt;/code&gt; ，则可以手动执行相同类型的查找：</target>
        </trans-unit>
        <trans-unit id="94bbf9a3b61ed7ba431cfe4c7c55a2f5b58d406a" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t have &lt;code&gt;pip&lt;/code&gt;, follow the &lt;a href=&quot;../../../../topics/install#installing-official-release&quot;&gt;installation instructions&lt;/a&gt; to install it.</source>
          <target state="translated">如果没有 &lt;code&gt;pip&lt;/code&gt; ，请按照&lt;a href=&quot;../../../../topics/install#installing-official-release&quot;&gt;安装说明&lt;/a&gt;进行安装。</target>
        </trans-unit>
        <trans-unit id="83b4541d75cf80e630fb9cb0eae0f6dcce396113" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t have access to the request object, you can use the &lt;code&gt;get_current()&lt;/code&gt; method of the &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; model&amp;rsquo;s manager. You should then ensure that your settings file does contain the &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt;&lt;code&gt;SITE_ID&lt;/code&gt;&lt;/a&gt; setting. This example is equivalent to the previous one:</source>
          <target state="translated">如果您无权访问请求对象，则可以使用&lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt;模型管理器的 &lt;code&gt;get_current()&lt;/code&gt; 方法。然后，您应确保您的设置文件中确实包含&lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt; &lt;code&gt;SITE_ID&lt;/code&gt; &lt;/a&gt;设置。此示例等效于上一个示例：</target>
        </trans-unit>
        <trans-unit id="6e6f1ebd340eb9d605be9c4db45ebb236fd2e050" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t have the &lt;code&gt;gettext&lt;/code&gt; utilities installed, &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;makemessages&lt;/code&gt;&lt;/a&gt; will create empty files. If that&amp;rsquo;s the case, either install the &lt;code&gt;gettext&lt;/code&gt; utilities or copy the English message file (&lt;code&gt;locale/en/LC_MESSAGES/django.po&lt;/code&gt;) if available and use it as a starting point, which is an empty translation file.</source>
          <target state="translated">如果没有安装 &lt;code&gt;gettext&lt;/code&gt; 实用程序，&lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt; &lt;code&gt;makemessages&lt;/code&gt; &lt;/a&gt;将创建空文件。在这种情况下，请安装 &lt;code&gt;gettext&lt;/code&gt; 实用程序或复制英文消息文件（ &lt;code&gt;locale/en/LC_MESSAGES/django.po&lt;/code&gt; ）（如果有）并将其用作起点，它是一个空的翻译文件。</target>
        </trans-unit>
        <trans-unit id="4f1d2a7a739cbcb4a30351e90054953707bb1564" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t include the &lt;a href=&quot;#django.contrib.auth.models.PermissionsMixin&quot;&gt;&lt;code&gt;PermissionsMixin&lt;/code&gt;&lt;/a&gt;, you must ensure you don&amp;rsquo;t invoke the permissions methods on &lt;code&gt;ModelBackend&lt;/code&gt;. &lt;code&gt;ModelBackend&lt;/code&gt; assumes that certain fields are available on your user model. If your user model doesn&amp;rsquo;t provide those fields, you&amp;rsquo;ll receive database errors when you check permissions.</source>
          <target state="translated">如果不包括&lt;a href=&quot;#django.contrib.auth.models.PermissionsMixin&quot;&gt; &lt;code&gt;PermissionsMixin&lt;/code&gt; &lt;/a&gt;，则必须确保不调用 &lt;code&gt;ModelBackend&lt;/code&gt; 上的权限方法。 &lt;code&gt;ModelBackend&lt;/code&gt; 假定您的用户模型上某些字段可用。如果您的用户模型不提供这些字段，则在检查权限时会收到数据库错误。</target>
        </trans-unit>
        <trans-unit id="35899ce1414f3555035a9788cf172f76ca6773ef" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t like the long &lt;code&gt;gettext_lazy&lt;/code&gt; name, you can alias it as &lt;code&gt;_&lt;/code&gt; (underscore), like so:</source>
          <target state="translated">如果您不喜欢长的 &lt;code&gt;gettext_lazy&lt;/code&gt; 名称，则可以将其别名为 &lt;code&gt;_&lt;/code&gt; （下划线），如下所示：</target>
        </trans-unit>
        <trans-unit id="e7c2f2ae002997f7ed67a2217c27f8708bf96ef6" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t need to have the human-readable names translated, you can have them inferred from the member name (replacing underscores with spaces and using title-case):</source>
          <target state="translated">如果不需要翻译人类可读的名称，则可以从成员名称中推断出它们（用空格替换下划线并使用标题大小写）：</target>
        </trans-unit>
        <trans-unit id="8611658ee88ea0ad3dcc2ed7a1a97af6dae4a361" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t pass any values to &lt;code&gt;values_list()&lt;/code&gt;, it will return all the fields in the model, in the order they were declared.</source>
          <target state="translated">如果您没有将任何值传递给 &lt;code&gt;values_list()&lt;/code&gt; ，它将按照声明它们的顺序返回模型中的所有字段。</target>
        </trans-unit>
        <trans-unit id="857e12793ad461caf04fff1ba581da785c3a5bcb" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t provide a lookup type &amp;ndash; that is, if your keyword argument doesn&amp;rsquo;t contain a double underscore &amp;ndash; the lookup type is assumed to be &lt;code&gt;exact&lt;/code&gt;.</source>
          <target state="translated">如果您不提供查找类型（即，如果您的关键字参数不包含双下划线），则该查找类型被认为是 &lt;code&gt;exact&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b49754202789d5dcf7dd5093a036116cfc0b7e7b" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t provide a value for &lt;code&gt;content_type&lt;/code&gt;, the values in &lt;code&gt;data&lt;/code&gt; will be transmitted with a content type of &lt;em&gt;multipart/form-data&lt;/em&gt;. In this case, the key-value pairs in &lt;code&gt;data&lt;/code&gt; will be encoded as a multipart message and used to create the POST data payload.</source>
          <target state="translated">如果您不为 &lt;code&gt;content_type&lt;/code&gt; 提供值，则 &lt;code&gt;data&lt;/code&gt; 的值将以&lt;em&gt;multipart / form-data&lt;/em&gt;的内容类型&lt;em&gt;传输&lt;/em&gt;。在这种情况下，在键-值对 &lt;code&gt;data&lt;/code&gt; 将被编码为多部分消息并用于创建POST数据有效载荷。</target>
        </trans-unit>
        <trans-unit id="7e2bf3116cfcd8bcac568c28322326cd296119eb" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t set &lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-6&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt; and don&amp;rsquo;t call &lt;code&gt;configure()&lt;/code&gt;, Django will raise an &lt;code&gt;ImportError&lt;/code&gt; exception the first time a setting is accessed.</source>
          <target state="translated">如果您未设置&lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-6&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt;且未调用 &lt;code&gt;configure()&lt;/code&gt; ，则Django将在首次访问设置时引发 &lt;code&gt;ImportError&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="dd179816ea4797c0c27e26002186e53c76cd44e3" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t set &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; and don&amp;rsquo;t call &lt;code&gt;configure()&lt;/code&gt;, Django will raise an &lt;code&gt;ImportError&lt;/code&gt; exception the first time a setting is accessed.</source>
          <target state="translated">如果您未设置 &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; 且未调用 &lt;code&gt;configure()&lt;/code&gt; ，则Django将在首次访问设置时引发 &lt;code&gt;ImportError&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="6d28696ece852d234602878e925455bc5844a029" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t set &lt;code&gt;list_display&lt;/code&gt;, the admin site will display a single column that displays the &lt;code&gt;__str__()&lt;/code&gt; representation of each object.</source>
          <target state="translated">如果您未设置 &lt;code&gt;list_display&lt;/code&gt; ，则管理站点将显示单个列，该列显示每个对象的 &lt;code&gt;__str__()&lt;/code&gt; 表示形式。</target>
        </trans-unit>
        <trans-unit id="a163d2bcd9e6db7c5ea4d04d3672fd598949d73a" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t specify &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt;&lt;code&gt;primary_key=True&lt;/code&gt;&lt;/a&gt; for any fields in your model, Django will automatically add an &lt;a href=&quot;../../ref/models/fields#django.db.models.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt; to hold the primary key, so you don&amp;rsquo;t need to set &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt;&lt;code&gt;primary_key=True&lt;/code&gt;&lt;/a&gt; on any of your fields unless you want to override the default primary-key behavior. For more, see &lt;a href=&quot;#automatic-primary-key-fields&quot;&gt;Automatic primary key fields&lt;/a&gt;.</source>
          <target state="translated">如果您未为模型中的任何字段指定&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt; &lt;code&gt;primary_key=True&lt;/code&gt; &lt;/a&gt;，则Django会自动添加一个&lt;a href=&quot;../../ref/models/fields#django.db.models.IntegerField&quot;&gt; &lt;code&gt;IntegerField&lt;/code&gt; &lt;/a&gt;来保存主键，因此您无需在任何字段上设置&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt; &lt;code&gt;primary_key=True&lt;/code&gt; &lt;/a&gt;，除非您想要覆盖默认的主键行为。有关更多信息，请参见&lt;a href=&quot;#automatic-primary-key-fields&quot;&gt;自动主键字段&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="590c6fe5a79ddb6a0fb543209eff8fe3de9cd579" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t specify &lt;code&gt;primary_key=True&lt;/code&gt; for any field in your model, Django will automatically add an &lt;a href=&quot;#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt; to hold the primary key, so you don&amp;rsquo;t need to set &lt;code&gt;primary_key=True&lt;/code&gt; on any of your fields unless you want to override the default primary-key behavior. For more, see &lt;a href=&quot;../../topics/db/models#automatic-primary-key-fields&quot;&gt;Automatic primary key fields&lt;/a&gt;.</source>
          <target state="translated">如果您未为模型中的任何字段指定 &lt;code&gt;primary_key=True&lt;/code&gt; ，则Django会自动添加一个&lt;a href=&quot;#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; &lt;/a&gt;来保存主键，因此除非您要覆盖该字段，否则无需在任何字段上设置 &lt;code&gt;primary_key=True&lt;/code&gt; 。默认的主键行为。有关更多信息，请参见&lt;a href=&quot;../../topics/db/models#automatic-primary-key-fields&quot;&gt;自动主键字段&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="04c0cebe040a5a95be05e16a67b332d448a4cdf2" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t specify &lt;code&gt;using&lt;/code&gt;, the &lt;code&gt;save()&lt;/code&gt; method will save into the default database allocated by the routers.</source>
          <target state="translated">如果未指定 &lt;code&gt;using&lt;/code&gt; ，则 &lt;code&gt;save()&lt;/code&gt; 方法将保存到路由器分配的默认数据库中。</target>
        </trans-unit>
        <trans-unit id="538f16b988998147ff60490597be28bc48eafdda" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t specify a &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt; attribute for a field in an abstract base class, the default reverse name will be the name of the child class followed by &lt;code&gt;'_set'&lt;/code&gt;, just as it normally would be if you&amp;rsquo;d declared the field directly on the child class. For example, in the above code, if the &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt; attribute was omitted, the reverse name for the &lt;code&gt;m2m&lt;/code&gt; field would be &lt;code&gt;childa_set&lt;/code&gt; in the &lt;code&gt;ChildA&lt;/code&gt; case and &lt;code&gt;childb_set&lt;/code&gt; for the &lt;code&gt;ChildB&lt;/code&gt; field.</source>
          <target state="translated">如果未在抽象基类中为字段指定&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt;属性，则默认的反向名称将是子类的名称，后跟 &lt;code&gt;'_set'&lt;/code&gt; ，就像通常直接声明该字段时一样在儿童班上。例如，在上面的代码中，如果&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt;省略属性，对于反向名称 &lt;code&gt;m2m&lt;/code&gt; 字段将是 &lt;code&gt;childa_set&lt;/code&gt; 在 &lt;code&gt;ChildA&lt;/code&gt; 壳体和 &lt;code&gt;childb_set&lt;/code&gt; 为 &lt;code&gt;ChildB&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="d339100c909e90a9e5e2bd7aa909352403fa7c4f" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t specify an explicit &lt;code&gt;through&lt;/code&gt; model, there is still an implicit &lt;code&gt;through&lt;/code&gt; model class you can use to directly access the table created to hold the association. It has three fields to link the models.</source>
          <target state="translated">如果未指定显式的 &lt;code&gt;through&lt;/code&gt; 模型，则仍然存在隐式的 &lt;code&gt;through&lt;/code&gt; 模型类，可用于直接访问为保存关联而创建的表。它具有三个用于链接模型的字段。</target>
        </trans-unit>
        <trans-unit id="666775cf1efa55d8c53fada8a23701a9987dd988" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t specify any model managers on a proxy model, it inherits the managers from its model parents. If you define a manager on the proxy model, it will become the default, although any managers defined on the parent classes will still be available.</source>
          <target state="translated">如果您未在代理模型上指定任何模型管理器，它将从其模型父级继承这些管理器。如果在代理模型上定义管理器，尽管在父类上定义的任何管理器仍然可用，它将成为默认模型。</target>
        </trans-unit>
        <trans-unit id="2831dc2c926cb081c9cc4a7a2bc6243fa61db6a9" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t specify routing directions for the database cache model, the cache backend will use the &lt;code&gt;default&lt;/code&gt; database.</source>
          <target state="translated">如果您没有为数据库缓存模型指定路由方向，则缓存后端将使用 &lt;code&gt;default&lt;/code&gt; 数据库。</target>
        </trans-unit>
        <trans-unit id="fd4f5afea03a0462ac45abaffd1965ddce74ce84" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want any ordering to be applied to a query, not even the default ordering, call &lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt; with no parameters.</source>
          <target state="translated">如果您不希望对查询应用任何排序，甚至不希望使用默认排序，请调用不带参数的&lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt; &lt;code&gt;order_by()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02f361b8fc537e98dc07890f9bf542dd0f12b07f" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want data to be auto-escaped, on a per-site, per-template level or per-variable level, you can turn it off in several ways.</source>
          <target state="translated">如果您不想在每个站点，每个模板级别或每个变量级别自动转义数据，则可以通过多种方式将其关闭。</target>
        </trans-unit>
        <trans-unit id="10b519cb1d07a83a7e8a3c4a687450cc5ea4bc3e" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want every application to be synchronized onto a particular database, you can define a &lt;a href=&quot;#topics-db-multi-db-routing&quot;&gt;database router&lt;/a&gt; that implements a policy constraining the availability of particular models.</source>
          <target state="translated">如果您不希望每个应用程序都同步到一个特定的数据库中，则可以定义一个&lt;a href=&quot;#topics-db-multi-db-routing&quot;&gt;数据库路由器&lt;/a&gt;，该路由器实施一个限制特定模型可用性的策略。</target>
        </trans-unit>
        <trans-unit id="d81b301e8e3d1ffb784a67d2c862ad60178d6c04" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want multiple associations between the same instances, add a &lt;a href=&quot;constraints#django.db.models.UniqueConstraint&quot;&gt;&lt;code&gt;UniqueConstraint&lt;/code&gt;&lt;/a&gt; including the from and to fields. Django&amp;rsquo;s automatically generated many-to-many tables include such a constraint.</source>
          <target state="translated">如果您不希望同一实例之间存在多个关联，请添加一个&lt;a href=&quot;constraints#django.db.models.UniqueConstraint&quot;&gt; &lt;code&gt;UniqueConstraint&lt;/code&gt; ,&lt;/a&gt;其中包括from和to字段。Django自动生成的多对多表包含了这样的约束。</target>
        </trans-unit>
        <trans-unit id="fe1aecbe271aa338db0d87a905bab0dff7f004a6" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want to configure logging at all (or you want to manually configure logging using your own approach), you can set &lt;a href=&quot;../ref/settings#std:setting-LOGGING_CONFIG&quot;&gt;&lt;code&gt;LOGGING_CONFIG&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;None&lt;/code&gt;. This will disable the configuration process for &lt;a href=&quot;#default-logging-configuration&quot;&gt;Django&amp;rsquo;s default logging&lt;/a&gt;.</source>
          <target state="translated">如果您根本不想配置日志记录（或者您想使用自己的方法手动配置日志记录），则可以将&lt;a href=&quot;../ref/settings#std:setting-LOGGING_CONFIG&quot;&gt; &lt;code&gt;LOGGING_CONFIG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;None&lt;/code&gt; 。这将禁用&lt;a href=&quot;#default-logging-configuration&quot;&gt;Django默认日志记录&lt;/a&gt;的配置过程。</target>
        </trans-unit>
        <trans-unit id="35c4fdb0cd2c686ba39701ab3494c7c292bcb631" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want to configure logging at all (or you want to manually configure logging using your own approach), you can set &lt;a href=&quot;../ref/settings#std:setting-LOGGING_CONFIG&quot;&gt;&lt;code&gt;LOGGING_CONFIG&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;None&lt;/code&gt;. This will disable the configuration process for &lt;a href=&quot;#default-logging-configuration&quot;&gt;Django&amp;rsquo;s default logging&lt;/a&gt;. Here&amp;rsquo;s an example that disables Django&amp;rsquo;s logging configuration and then manually configures logging:</source>
          <target state="translated">如果您根本不想配置日志记录（或者您想使用自己的方法手动配置日志记录），可以将&lt;a href=&quot;../ref/settings#std:setting-LOGGING_CONFIG&quot;&gt; &lt;code&gt;LOGGING_CONFIG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;None&lt;/code&gt; 。这将禁用&lt;a href=&quot;#default-logging-configuration&quot;&gt;Django默认日志记录&lt;/a&gt;的配置过程。这是一个禁用Django的日志记录配置，然后手动配置日志记录的示例：</target>
        </trans-unit>
        <trans-unit id="77c86f64e5416c16d57ada9152596773e6ea1cc7" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want to use &lt;code&gt;icontains&lt;/code&gt; as the lookup, you can use any lookup by appending it the field. For example, you could use &lt;a href=&quot;../../models/querysets#std:fieldlookup-exact&quot;&gt;&lt;code&gt;exact&lt;/code&gt;&lt;/a&gt; by setting &lt;code&gt;search_fields&lt;/code&gt; to &lt;code&gt;['first_name__exact']&lt;/code&gt;.</source>
          <target state="translated">如果您不想使用 &lt;code&gt;icontains&lt;/code&gt; 作为查找，则可以通过将其附加到字段中来使用任何查找。例如，可以通过将 &lt;code&gt;search_fields&lt;/code&gt; 设置为 &lt;code&gt;['first_name__exact']&lt;/code&gt; 来使用&lt;a href=&quot;../../models/querysets#std:fieldlookup-exact&quot;&gt; &lt;code&gt;exact&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="31395295db9a85690ee46840f48259811129865d" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want to use Python&amp;rsquo;s dictConfig format to configure your logger, you can specify your own configuration scheme.</source>
          <target state="translated">如果您不想使用Python的dictConfig格式配置记录器，则可以指定自己的配置方案。</target>
        </trans-unit>
        <trans-unit id="515cdb51845c22c1192ff3cb9088b0aae43b5f38" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want to use messages, you can remove &lt;code&gt;'django.contrib.messages'&lt;/code&gt; from your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;MessageMiddleware&lt;/code&gt; line from &lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt;, and the &lt;code&gt;messages&lt;/code&gt; context processor from &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您不想使用消息，则可以从&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 中&lt;/a&gt;删除 &lt;code&gt;'django.contrib.messages'&lt;/code&gt; ，从&lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; 中&lt;/a&gt;删除 &lt;code&gt;MessageMiddleware&lt;/code&gt; 行，并从&lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; 中&lt;/a&gt;删除 &lt;code&gt;messages&lt;/code&gt; 上下文处理器。</target>
        </trans-unit>
        <trans-unit id="9f7e47131b63bc56e18f6396512e77f9352c9650" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want to use sessions, you might as well remove the &lt;code&gt;SessionMiddleware&lt;/code&gt; line from &lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;'django.contrib.sessions'&lt;/code&gt; from your &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;. It&amp;rsquo;ll save you a small bit of overhead.</source>
          <target state="translated">如果您不想使用会话，则最好从&lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; 中&lt;/a&gt;删除 &lt;code&gt;SessionMiddleware&lt;/code&gt; 行，并从&lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 中&lt;/a&gt;删除 &lt;code&gt;'django.contrib.sessions'&lt;/code&gt; 。这样可以节省您一点点的开销。</target>
        </trans-unit>
        <trans-unit id="9b1a1786e7b1cf25c6aacb2f5b78f4da284e5c48" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want to use the built-in views, but want the convenience of not having to write forms for this functionality, the authentication system provides several built-in forms located in &lt;a href=&quot;#module-django.contrib.auth.forms&quot;&gt;&lt;code&gt;django.contrib.auth.forms&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果您不想使用内置视图，但又希望不必为此功能编写表单，那么身份验证系统会提供位于&lt;a href=&quot;#module-django.contrib.auth.forms&quot;&gt; &lt;code&gt;django.contrib.auth.forms&lt;/code&gt; 中的&lt;/a&gt;多个内置表单：</target>
        </trans-unit>
        <trans-unit id="4b45b7b54dc69e9c451ecaac2c9aed0cb4634c14" translate="yes" xml:space="preserve">
          <source>If you downloaded the &lt;a href=&quot;#worldborders&quot;&gt;World Borders&lt;/a&gt; data earlier in the tutorial, then you can determine its path using Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path&quot;&gt;&lt;code&gt;pathlib.Path&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果您在本教程的前面下载了&lt;a href=&quot;#worldborders&quot;&gt;World Borders&lt;/a&gt;数据，则可以使用Python的&lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path&quot;&gt; &lt;code&gt;pathlib.Path&lt;/code&gt; &lt;/a&gt;确定其路径：</target>
        </trans-unit>
        <trans-unit id="5c568e3de4c1c7c6a2712e65c1fa4112cf06d36a" translate="yes" xml:space="preserve">
          <source>If you downloaded the &lt;a href=&quot;#worldborders&quot;&gt;World Borders&lt;/a&gt; data earlier in the tutorial, then you can determine its path using Python&amp;rsquo;s built-in &lt;code&gt;os&lt;/code&gt; module:</source>
          <target state="translated">如果您在本教程的前面下载了&lt;a href=&quot;#worldborders&quot;&gt;World Borders&lt;/a&gt;数据，则可以使用Python的内置 &lt;code&gt;os&lt;/code&gt; 模块确定其路径：</target>
        </trans-unit>
        <trans-unit id="455d07668f86b3453aef324fdb20b370ef36fb11" translate="yes" xml:space="preserve">
          <source>If you enable &lt;code&gt;redirect_authenticated_user&lt;/code&gt;, other websites will be able to determine if their visitors are authenticated on your site by requesting redirect URLs to image files on your website. To avoid this &amp;ldquo;&lt;a href=&quot;https://robinlinus.github.io/socialmedia-leak/&quot;&gt;social media fingerprinting&lt;/a&gt;&amp;rdquo; information leakage, host all images and your favicon on a separate domain.</source>
          <target state="translated">如果启用 &lt;code&gt;redirect_authenticated_user&lt;/code&gt; ，则其他网站将能够通过请求重定向URL到您网站上图像文件的方式来确定他们的访问者是否在您的网站上通过了身份验证。为避免这种&amp;ldquo; &lt;a href=&quot;https://robinlinus.github.io/socialmedia-leak/&quot;&gt;社交媒体指纹&lt;/a&gt; &amp;rdquo;信息泄漏，请将所有图像和您的图标保存在单独的域中。</target>
        </trans-unit>
        <trans-unit id="6de81e981c118fcef157137194f59e4a18089f15" translate="yes" xml:space="preserve">
          <source>If you enable the &lt;a href=&quot;../../ref/templates/api#django.template.context_processors.i18n&quot;&gt;&lt;code&gt;django.template.context_processors.i18n&lt;/code&gt;&lt;/a&gt; context processor, then each &lt;code&gt;RequestContext&lt;/code&gt; will have access to &lt;code&gt;LANGUAGES&lt;/code&gt;, &lt;code&gt;LANGUAGE_CODE&lt;/code&gt;, and &lt;code&gt;LANGUAGE_BIDI&lt;/code&gt; as defined above.</source>
          <target state="translated">如果启用&lt;a href=&quot;../../ref/templates/api#django.template.context_processors.i18n&quot;&gt; &lt;code&gt;django.template.context_processors.i18n&lt;/code&gt; &lt;/a&gt;上下文处理器，则每个 &lt;code&gt;RequestContext&lt;/code&gt; 都可以访问如上定义的 &lt;code&gt;LANGUAGES&lt;/code&gt; ， &lt;code&gt;LANGUAGE_CODE&lt;/code&gt; 和 &lt;code&gt;LANGUAGE_BIDI&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="729e00760630570ad607e0e6587465fb4412384e" translate="yes" xml:space="preserve">
          <source>If you enable this and need to send the value of the CSRF token with an AJAX request, your JavaScript must pull the value &lt;a href=&quot;csrf#acquiring-csrf-token-from-html&quot;&gt;from a hidden CSRF token form input&lt;/a&gt; instead of &lt;a href=&quot;csrf#acquiring-csrf-token-from-cookie&quot;&gt;from the cookie&lt;/a&gt;.</source>
          <target state="translated">如果启用此功能，并且需要通过AJAX请求发送CSRF令牌的值，则您的JavaScript必须&lt;a href=&quot;csrf#acquiring-csrf-token-from-html&quot;&gt;从隐藏的CSRF令牌形式输入&lt;/a&gt;而不是&lt;a href=&quot;csrf#acquiring-csrf-token-from-cookie&quot;&gt;cookie中&lt;/a&gt;提取值。</target>
        </trans-unit>
        <trans-unit id="eecda653f4341e8484e3844f08cb3debaa15b75a" translate="yes" xml:space="preserve">
          <source>If you enable this option and there is concurrent access to the async-unsafe parts of Django, you may suffer data loss or corruption. Be very careful and do not use this in production environments.</source>
          <target state="translated">如果你启用了这个选项,并且有并发访问Django的async-unsafe部分,你可能会遭受数据丢失或损坏。要非常小心,不要在生产环境中使用这个选项。</target>
        </trans-unit>
        <trans-unit id="690f4bcf8a157bd61ea9244f015553c0c9c48320" translate="yes" xml:space="preserve">
          <source>If you encounter an error during the installation, your system might be missing a dependency for one or more of the Python packages. Consult the failing package&amp;rsquo;s documentation or search the Web with the error message that you encounter.</source>
          <target state="translated">如果在安装过程中遇到错误，则系统可能缺少对一个或多个Python软件包的依赖关系。请查阅失败的软件包的文档或在网络上搜索遇到的错误消息。</target>
        </trans-unit>
        <trans-unit id="a6da4243a036aa29469a63cceb377bd8e3d4c0cc" translate="yes" xml:space="preserve">
          <source>If you encounter the following error when using &lt;code&gt;LayerMapping&lt;/code&gt; and MySQL:</source>
          <target state="translated">如果在使用 &lt;code&gt;LayerMapping&lt;/code&gt; 和MySQL 时遇到以下错误：</target>
        </trans-unit>
        <trans-unit id="388118dd7f5efca0821c54391ac838c186b2e0db" translate="yes" xml:space="preserve">
          <source>If you encounter this error, most likely your code is comparing these two things:</source>
          <target state="translated">如果你遇到这个错误,很可能是你的代码在比较这两件事。</target>
        </trans-unit>
        <trans-unit id="453875e39942a1ebb0f9d4262e3a3da68e8a4e2c" translate="yes" xml:space="preserve">
          <source>If you encounter this error, you should fix your code to not call the offending code from an async context. Instead, write your code that talks to async-unsafe functions in its own, sync function, and call that using &lt;a href=&quot;#asgiref.sync.sync_to_async&quot;&gt;&lt;code&gt;asgiref.sync.sync_to_async()&lt;/code&gt;&lt;/a&gt; (or any other way of running sync code in its own thread).</source>
          <target state="translated">如果遇到此错误，则应修复代码以免从异步上下文中调用有问题的代码。而是编写自己的与异步不安全函数对话的代码，同步函数，然后使用&lt;a href=&quot;#asgiref.sync.sync_to_async&quot;&gt; &lt;code&gt;asgiref.sync.sync_to_async()&lt;/code&gt; &lt;/a&gt;调用该代码（或在其自己的线程中运行同步代码的任何其他方式）。</target>
        </trans-unit>
        <trans-unit id="9980a2e684bd447360258377b3fadc41c30bff5f" translate="yes" xml:space="preserve">
          <source>If you encounter this error, you should fix your code to not call the offending code from an async context; instead, write your code that talks to async-unsafe in its own, synchronous function, and call that using &lt;code&gt;asgiref.sync.async_to_sync&lt;/code&gt;, or any other preferred way of running synchronous code in its own thread.</source>
          <target state="translated">如果遇到此错误，则应修复代码以免从异步上下文中调用有问题的代码。相反，编写您自己的代码，该代码在其自己的同步函数中与async-unsafe对话，然后使用 &lt;code&gt;asgiref.sync.async_to_sync&lt;/code&gt; 或任何其他在其自己的线程中运行同步代码的首选方式来调用该代码。</target>
        </trans-unit>
        <trans-unit id="d44bb95904902ba04b1303875f334e1056e1ab60" translate="yes" xml:space="preserve">
          <source>If you expect a queryset to already return one row, you can use &lt;code&gt;get()&lt;/code&gt; without any arguments to return the object for that row:</source>
          <target state="translated">如果您希望查询集已经返回一行，则可以使用不带任何参数的 &lt;code&gt;get()&lt;/code&gt; 返回该行的对象：</target>
        </trans-unit>
        <trans-unit id="c318da5e64838ab0635a2445fb6173a140f25b28" translate="yes" xml:space="preserve">
          <source>If you expect a queryset to return one row, you can use &lt;code&gt;get()&lt;/code&gt; without any arguments to return the object for that row:</source>
          <target state="translated">如果希望查询集返回一行，则可以使用不带任何参数的 &lt;code&gt;get()&lt;/code&gt; 返回该行的对象：</target>
        </trans-unit>
        <trans-unit id="b49a74a0b115f2bc1bddecbe1ff4268a349bfe46" translate="yes" xml:space="preserve">
          <source>If you find yourself doing this often, you might consider creating a custom &lt;a href=&quot;../../howto/custom-template-tags#howto-custom-template-tags-inclusion-tags&quot;&gt;inclusion tag&lt;/a&gt;.</source>
          <target state="translated">如果您发现自己经常这样做，则可以考虑创建一个自定义&lt;a href=&quot;../../howto/custom-template-tags#howto-custom-template-tags-inclusion-tags&quot;&gt;包含标签&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="08b548542180a05ddc30c78ed125af341d51e6c9" translate="yes" xml:space="preserve">
          <source>If you find yourself duplicating content in a number of templates, it probably means you should move that content to a &lt;code&gt;{% block %}&lt;/code&gt; in a parent template.</source>
          <target state="translated">如果发现自己在许多模板中都复制了内容，则可能意味着您应将该内容移至父模板中的 &lt;code&gt;{% block %}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed5f5b63170617e447bc7e02390a27114c2912d5" translate="yes" xml:space="preserve">
          <source>If you find yourself needing a response class that Django doesn&amp;rsquo;t provide, you can create it with the help of &lt;a href=&quot;https://docs.python.org/3/library/http.html#http.HTTPStatus&quot;&gt;&lt;code&gt;http.HTTPStatus&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">如果您发现自己需要Django不提供的响应类，则可以在&lt;a href=&quot;https://docs.python.org/3/library/http.html#http.HTTPStatus&quot;&gt; &lt;code&gt;http.HTTPStatus&lt;/code&gt; &lt;/a&gt;的帮助下创建它。例如：</target>
        </trans-unit>
        <trans-unit id="a6acad9064fdbc3ea2b22b0bcfca87cc4ffc3ec7" translate="yes" xml:space="preserve">
          <source>If you find yourself needing to write an SQL query that is too complex for Django&amp;rsquo;s database-mapper to handle, you can fall back on writing SQL by hand. Django has a couple of options for writing raw SQL queries; see &lt;a href=&quot;sql&quot;&gt;Performing raw SQL queries&lt;/a&gt;.</source>
          <target state="translated">如果发现自己需要编写对于Django的数据库映射器来说太复杂的SQL查询，则可以手动编写SQL。Django有两个写原始SQL查询的选项。请参阅&lt;a href=&quot;sql&quot;&gt;执行原始SQL查询&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2ad1e5c64873a39591bff334fe500d215c29ad49" translate="yes" xml:space="preserve">
          <source>If you get a 404 when requesting &lt;code&gt;/books/acme/&lt;/code&gt;, check to ensure you actually have a Publisher with the name &amp;lsquo;ACME Publishing&amp;rsquo;. Generic views have an &lt;code&gt;allow_empty&lt;/code&gt; parameter for this case. See the &lt;a href=&quot;../../ref/class-based-views/index&quot;&gt;class-based-views reference&lt;/a&gt; for more details.</source>
          <target state="translated">如果在请求 &lt;code&gt;/books/acme/&lt;/code&gt; 时收到404 ，请检查以确保您实际上拥有名称为'ACME Publishing'的Publisher。在这种情况下，通用视图具有 &lt;code&gt;allow_empty&lt;/code&gt; 参数。有关更多详细信息，请参见&lt;a href=&quot;../../ref/class-based-views/index&quot;&gt;基于类的视图参考&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7f7742ad36754cc74a4903fa526fb289e4d0d2b4" translate="yes" xml:space="preserve">
          <source>If you get a &lt;code&gt;UnicodeEncodeError&lt;/code&gt; when uploading files with file names that contain non-ASCII characters, make sure Apache is configured to accept non-ASCII file names:</source>
          <target state="translated">如果在上传文件名包含非ASCII字符的文件时收到 &lt;code&gt;UnicodeEncodeError&lt;/code&gt; ，请确保将Apache配置为接受非ASCII文件名：</target>
        </trans-unit>
        <trans-unit id="7616ac6b8d7c3639812f35a6bc31e6c215afa7ae" translate="yes" xml:space="preserve">
          <source>If you get a &lt;code&gt;UnicodeEncodeError&lt;/code&gt; when uploading files with file names that contain non-ASCII characters, make sure uWSGI is configured to accept non-ASCII file names by adding this to your &lt;code&gt;uwsgi.ini&lt;/code&gt;:</source>
          <target state="translated">如果在上传文件名包含非ASCII字符的文件时收到 &lt;code&gt;UnicodeEncodeError&lt;/code&gt; ，请通过将 &lt;code&gt;uwsgi.ini&lt;/code&gt; 添加到uwsgi.ini来确保将uWSGI配置为接受非ASCII文件名：</target>
        </trans-unit>
        <trans-unit id="b3df4479a6ed3992aa239152c3ea200360f998d8" translate="yes" xml:space="preserve">
          <source>If you get an error page here, check that you&amp;rsquo;re going to &lt;a href=&quot;http://localhost:8000/polls/&quot;&gt;http://localhost:8000/polls/&lt;/a&gt; and not &lt;a href=&quot;http://localhost:8000/&quot;&gt;http://localhost:8000/&lt;/a&gt;.</source>
          <target state="translated">如果您在这里看到错误页面，请检查您是否要访问&lt;a href=&quot;http://localhost:8000/polls/&quot;&gt;http：// localhost：8000 / polls /&lt;/a&gt;而不是&lt;a href=&quot;http://localhost:8000/&quot;&gt;http：// localhost：8000 /&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="824450c24cc06cc488eedd8f4d3692a22b966d5a" translate="yes" xml:space="preserve">
          <source>If you give the field a &lt;a href=&quot;#django.db.models.Field.default&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;, ensure it&amp;rsquo;s an immutable object, such as a &lt;code&gt;str&lt;/code&gt;, or a callable object that returns a fresh mutable object each time, such as &lt;code&gt;dict&lt;/code&gt; or a function. Providing a mutable default object like &lt;code&gt;default={}&lt;/code&gt; or &lt;code&gt;default=[]&lt;/code&gt; shares the one object between all model instances.</source>
          <target state="translated">如果为该字段提供&lt;a href=&quot;#django.db.models.Field.default&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;，请确保它是一个不变的对象（例如 &lt;code&gt;str&lt;/code&gt; )，或者是每次都返回一个新的可变对象（例如 &lt;code&gt;dict&lt;/code&gt; 或一个函数）的可调用对象。提供一个可变的默认对象（例如 &lt;code&gt;default={}&lt;/code&gt; 或 &lt;code&gt;default=[]&lt;/code&gt; )在所有模型实例之间共享一个对象。</target>
        </trans-unit>
        <trans-unit id="069b129e53ef4f85715fcc43dda8a29afa775b23" translate="yes" xml:space="preserve">
          <source>If you give the field a &lt;a href=&quot;../../models/fields#django.db.models.Field.default&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;, ensure it&amp;rsquo;s a callable such as &lt;code&gt;dict&lt;/code&gt; (for an empty default) or a callable that returns a dict (such as a function). Incorrectly using &lt;code&gt;default={}&lt;/code&gt; creates a mutable default that is shared between all instances of &lt;code&gt;JSONField&lt;/code&gt;.</source>
          <target state="translated">如果为该字段提供&lt;a href=&quot;../../models/fields#django.db.models.Field.default&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;，请确保它是可调用的，例如 &lt;code&gt;dict&lt;/code&gt; （用于空默认值）或返回dict的可调用（例如函数）。错误地使用 &lt;code&gt;default={}&lt;/code&gt; 会创建一个可变的默认值，该值在 &lt;code&gt;JSONField&lt;/code&gt; 的所有实例之间共享。</target>
        </trans-unit>
        <trans-unit id="27410732e928525d8c647604e8926b8d0498bdf6" translate="yes" xml:space="preserve">
          <source>If you give the field a &lt;a href=&quot;../../models/fields#django.db.models.Field.default&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;, ensure it&amp;rsquo;s a callable such as &lt;code&gt;list&lt;/code&gt; (for an empty default) or a callable that returns a list (such as a function). Incorrectly using &lt;code&gt;default=[]&lt;/code&gt; creates a mutable default that is shared between all instances of &lt;code&gt;ArrayField&lt;/code&gt;.</source>
          <target state="translated">如果为该字段提供&lt;a href=&quot;../../models/fields#django.db.models.Field.default&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;，请确保它是可调用项（例如 &lt;code&gt;list&lt;/code&gt; )（用于空默认值）或可调用项，其返回列表（例如函数）。错误地使用 &lt;code&gt;default=[]&lt;/code&gt; 会创建一个可变的默认值，该默认值在 &lt;code&gt;ArrayField&lt;/code&gt; 的所有实例之间共享。</target>
        </trans-unit>
        <trans-unit id="e341d486c0a6527afd40afba3bbf387252d13451" translate="yes" xml:space="preserve">
          <source>If you had a URL &lt;code&gt;/redirect_me/&lt;/code&gt; that redirected to &lt;code&gt;/next/&lt;/code&gt;, that redirected to &lt;code&gt;/final/&lt;/code&gt;, this is what you&amp;rsquo;d see:</source>
          <target state="translated">如果您有一个重定向到 &lt;code&gt;/next/&lt;/code&gt; 的URL &lt;code&gt;/redirect_me/&lt;/code&gt; ，该URL 重定向到了 &lt;code&gt;/final/&lt;/code&gt; ，那么您将看到：</target>
        </trans-unit>
        <trans-unit id="e18323392212f10a65b2daa3a1a10c84409a9d06" translate="yes" xml:space="preserve">
          <source>If you have a &amp;ldquo;rich&amp;rdquo; shell installed but want to force use of the &amp;ldquo;plain&amp;rdquo; Python interpreter, use &lt;code&gt;python&lt;/code&gt; as the interface name, like so:</source>
          <target state="translated">如果您安装了&amp;ldquo;丰富&amp;rdquo;外壳程序，但想强制使用&amp;ldquo;普通&amp;rdquo; Python解释器，请使用 &lt;code&gt;python&lt;/code&gt; 作为接口名称，如下所示：</target>
        </trans-unit>
        <trans-unit id="5d8adf9ea9a8d83fd0e8e6616d3cb139fe7ee8e2" translate="yes" xml:space="preserve">
          <source>If you have a &lt;code&gt;GPSCoordinatesField&lt;/code&gt;, for example, and want to be able to access additional information about the coordinates in a template, this could be implemented as follows:</source>
          <target state="translated">例如，如果您具有 &lt;code&gt;GPSCoordinatesField&lt;/code&gt; ，并且希望能够访问有关模板中坐标的其他信息，则可以按以下方式实现：</target>
        </trans-unit>
        <trans-unit id="d61d684a756350ad6251ad220974916e91d79976" translate="yes" xml:space="preserve">
          <source>If you have a &lt;code&gt;Place&lt;/code&gt; that is also a &lt;code&gt;Restaurant&lt;/code&gt;, you can get from the &lt;code&gt;Place&lt;/code&gt; object to the &lt;code&gt;Restaurant&lt;/code&gt; object by using the lowercase version of the model name:</source>
          <target state="translated">如果您的 &lt;code&gt;Place&lt;/code&gt; 也是 &lt;code&gt;Restaurant&lt;/code&gt; ，则可以使用模型名称的小写形式从 &lt;code&gt;Place&lt;/code&gt; 对象到 &lt;code&gt;Restaurant&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="e101b1692181a5bd9c21e9a4901c5f705625b68f" translate="yes" xml:space="preserve">
          <source>If you have a background in programming, or if you&amp;rsquo;re used to languages which mix programming code directly into HTML, you&amp;rsquo;ll want to bear in mind that the Django template system is not simply Python embedded into HTML. This is by design: the template system is meant to express presentation, not program logic.</source>
          <target state="translated">如果您有编程背景，或者习惯于将编程代码直接混合到HTML中的语言，则需要记住Django模板系统不仅仅是将Python嵌入HTML中。这是设计使然：模板系统用于表示表示形式，而不是程序逻辑。</target>
        </trans-unit>
        <trans-unit id="59e1b17500d931bbf50d9ce94988d17d56a10749" translate="yes" xml:space="preserve">
          <source>If you have a bound &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; instance and want to change the data somehow, or if you want to bind an unbound &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; instance to some data, create another &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; instance. There is no way to change data in a &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; instance. Once a &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; instance has been created, you should consider its data immutable, whether it has data or not.</source>
          <target state="translated">如果您有绑定的&lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;实例，并且想要以某种方式更改数据，或者要将未绑定的&lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;实例绑定到某些数据，请创建另一个&lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;实例。无法更改&lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;实例中的数据。一旦&lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;实例被创建时，应考虑其数据不可变的，它是否有数据或不。</target>
        </trans-unit>
        <trans-unit id="978ffd4b507205bec211ecb6fb44da5a6411e504" translate="yes" xml:space="preserve">
          <source>If you have a complex application, you may want to run tests automatically with every commit for the purposes of &lt;a href=&quot;https://en.wikipedia.org/wiki/Continuous_integration&quot;&gt;continuous integration&lt;/a&gt;, so that quality control is itself - at least partially - automated.</source>
          <target state="translated">如果您有复杂的应用程序，则可能需要针对每次提交自动运行测试以实现&lt;a href=&quot;https://en.wikipedia.org/wiki/Continuous_integration&quot;&gt;持续集成&lt;/a&gt;，从而使质量控制本身（至少部分是自动化）是自动化的。</target>
        </trans-unit>
        <trans-unit id="e8cd69861c19aec280ff4c3da106598eae268983" translate="yes" xml:space="preserve">
          <source>If you have a different database and aren&amp;rsquo;t sure if it supports DDL transactions, check the &lt;code&gt;django.db.connection.features.can_rollback_ddl&lt;/code&gt; attribute.</source>
          <target state="translated">如果您具有其他数据库，并且不确定该数据库是否支持DDL事务，请检查 &lt;code&gt;django.db.connection.features.can_rollback_ddl&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="5b7fdb666d2c7387f8e88756c3572339b99b1480" translate="yes" xml:space="preserve">
          <source>If you have a field called &lt;code&gt;foo&lt;/code&gt; that is a &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, the default &lt;code&gt;values()&lt;/code&gt; call will return a dictionary key called &lt;code&gt;foo_id&lt;/code&gt;, since this is the name of the hidden model attribute that stores the actual value (the &lt;code&gt;foo&lt;/code&gt; attribute refers to the related model). When you are calling &lt;code&gt;values()&lt;/code&gt; and passing in field names, you can pass in either &lt;code&gt;foo&lt;/code&gt; or &lt;code&gt;foo_id&lt;/code&gt; and you will get back the same thing (the dictionary key will match the field name you passed in).</source>
          <target state="translated">如果您有一个名为 &lt;code&gt;foo&lt;/code&gt; 的字段作为&lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;，则默认 &lt;code&gt;values()&lt;/code&gt; 调用将返回一个名为 &lt;code&gt;foo_id&lt;/code&gt; 的字典键，因为这是存储实际值的隐藏模型属性的名称（ &lt;code&gt;foo&lt;/code&gt; 属性引用了相关模型）。当您调用 &lt;code&gt;values()&lt;/code&gt; 并传递字段名称时，您可以传递 &lt;code&gt;foo&lt;/code&gt; 或 &lt;code&gt;foo_id&lt;/code&gt; ，然后返回相同的内容（字典键将与您传递的字段名称匹配）。</target>
        </trans-unit>
        <trans-unit id="16711bcb9d7d51d98a29ea22696d824133aa4a4b" translate="yes" xml:space="preserve">
          <source>If you have a field named &lt;code&gt;defaults&lt;/code&gt; and want to use it as an exact lookup in &lt;code&gt;get_or_create()&lt;/code&gt;, use &lt;code&gt;'defaults__exact'&lt;/code&gt;, like so:</source>
          <target state="translated">如果您有一个名为 &lt;code&gt;defaults&lt;/code&gt; 的字段，并且想在 &lt;code&gt;get_or_create()&lt;/code&gt; 中将其用作精确查找，请使用 &lt;code&gt;'defaults__exact'&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="d37c7ca73612e3f18e551c6e6e5ec5e6e3aab068" translate="yes" xml:space="preserve">
          <source>If you have a function that returns text and you want to be able to take lazy arguments while delaying their evaluation, you can use this decorator:</source>
          <target state="translated">如果你有一个返回文本的函数,并且你希望能够在延迟其评估的同时接受懒惰参数,你可以使用这个装饰器。</target>
        </trans-unit>
        <trans-unit id="e0d31ad051cee43c03199fe35d1cfc46041814b9" translate="yes" xml:space="preserve">
          <source>If you have a model that is defined using an &lt;a href=&quot;db/models#abstract-base-classes&quot;&gt;abstract base class&lt;/a&gt;, you don&amp;rsquo;t have to do anything special to serialize that model. Call the serializer on the object (or objects) that you want to serialize, and the output will be a complete representation of the serialized object.</source>
          <target state="translated">如果您有使用&lt;a href=&quot;db/models#abstract-base-classes&quot;&gt;抽象基类&lt;/a&gt;定义的模型，则无需执行任何特殊操作即可序列化该模型。在要序列化的一个或多个对象上调用序列化程序，输出将是序列化对象的完整表示。</target>
        </trans-unit>
        <trans-unit id="e6770af4d44284b72b625f55e0971a26874c906c" translate="yes" xml:space="preserve">
          <source>If you have a set of common decorators used in several places, you can define a list or tuple of decorators and use this instead of invoking &lt;code&gt;method_decorator()&lt;/code&gt; multiple times. These two classes are equivalent:</source>
          <target state="translated">如果您在多个地方使用了一组通用装饰器，则可以定义一个装饰器列表或元组，并使用它而不是多次调用 &lt;code&gt;method_decorator()&lt;/code&gt; 。这两个类是等效的：</target>
        </trans-unit>
        <trans-unit id="79b825e9cb0e34e49d16acfbe8a24478320f86a0" translate="yes" xml:space="preserve">
          <source>If you have an authenticated user you want to attach to the current session - this is done with a &lt;a href=&quot;#django.contrib.auth.login&quot;&gt;&lt;code&gt;login()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">如果您具有经过身份验证的用户，则希望附加到当前会话-这是通过&lt;a href=&quot;#django.contrib.auth.login&quot;&gt; &lt;code&gt;login()&lt;/code&gt; &lt;/a&gt;函数完成的。</target>
        </trans-unit>
        <trans-unit id="026d9fcdfc9b1f7521fa03bbe9b4114c2b909148" translate="yes" xml:space="preserve">
          <source>If you have an existing database with an older, weak hash such as MD5 or SHA1, you might want to upgrade those hashes yourself instead of waiting for the upgrade to happen when a user logs in (which may never happen if a user doesn&amp;rsquo;t return to your site). In this case, you can use a &amp;ldquo;wrapped&amp;rdquo; password hasher.</source>
          <target state="translated">如果您现有的数据库具有较旧的弱哈希（例如MD5或SHA1），则可能需要自己升级这些哈希，而不是等待用户登录时进行升级（如果用户未登录则可能永远不会发生）返回您的网站）。在这种情况下，您可以使用&amp;ldquo;包装的&amp;rdquo;密码哈希器。</target>
        </trans-unit>
        <trans-unit id="b86b91ddb2f98a42f4900d8c7c7782b7b091a39b" translate="yes" xml:space="preserve">
          <source>If you have an idea for functionality to include in &lt;code&gt;contrib&lt;/code&gt;, let us know! Code it up, and post it to the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/mailing-lists/#django-users-mailing-list&quot;&gt;django-users&lt;/a&gt; mailing list.</source>
          <target state="translated">如果您对将功能包括在 &lt;code&gt;contrib&lt;/code&gt; 中有任何想法，请告诉我们！对其进行编码，并将其发布到&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/mailing-lists/#django-users-mailing-list&quot;&gt;django-users&lt;/a&gt;邮件列表中。</target>
        </trans-unit>
        <trans-unit id="83d150fd871b3c780160a5e729ba2cd5515b0ee6" translate="yes" xml:space="preserve">
          <source>If you have an idea for functionality to include in &lt;code&gt;contrib&lt;/code&gt;, let us know! Code it up, and post it to the &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/mailing-lists/#django-users-mailing-list&quot;&gt;django-users&lt;/a&gt; mailing list.</source>
          <target state="translated">如果您对将功能加入 &lt;code&gt;contrib&lt;/code&gt; 有任何想法，请告诉我们！对其进行编码，并将其发布到&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/mailing-lists/#django-users-mailing-list&quot;&gt;django-users&lt;/a&gt;邮件列表中。</target>
        </trans-unit>
        <trans-unit id="19c3b5495362847755cae62d7b220043549d25b3" translate="yes" xml:space="preserve">
          <source>If you have an iterable of model instances, you can prefetch related attributes on those instances using the &lt;a href=&quot;#django.db.models.prefetch_related_objects&quot;&gt;&lt;code&gt;prefetch_related_objects()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">如果您具有可迭代的模型实例，则可以使用&lt;a href=&quot;#django.db.models.prefetch_related_objects&quot;&gt; &lt;code&gt;prefetch_related_objects()&lt;/code&gt; &lt;/a&gt;函数在这些实例上预取相关属性。</target>
        </trans-unit>
        <trans-unit id="37904d083a93c2edd3d70d07fdce8e8357fcda8e" translate="yes" xml:space="preserve">
          <source>If you have any problems, please see the troubleshooting section below for suggestions and solutions.</source>
          <target state="translated">如果您有任何问题,请参见下面的故障排除部分,以获得建议和解决方案。</target>
        </trans-unit>
        <trans-unit id="ec0d4ee5c753dc222b01df5bf0c69c8624af1347" translate="yes" xml:space="preserve">
          <source>If you have app and project templates directories that both contain overrides, the default Django template loader will try to load the template from the project-level directory first. In other words, &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt; is searched before &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt;&lt;code&gt;APP_DIRS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您的应用程序和项目模板目录都包含替代，则默认Django模板加载器将首先尝试从项目级目录加载模板。换句话说，&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-DIRS&quot;&gt; &lt;code&gt;DIRS&lt;/code&gt; &lt;/a&gt;之前搜索&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt; &lt;code&gt;APP_DIRS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="08d9347c3a2e9dd49fb8cc1c6728cc1b9165b3fb" translate="yes" xml:space="preserve">
          <source>If you have created a &lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt;&lt;code&gt;db_type()&lt;/code&gt;&lt;/a&gt; method, you don&amp;rsquo;t need to worry about &lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_internal_type&quot;&gt;&lt;code&gt;get_internal_type()&lt;/code&gt;&lt;/a&gt; &amp;ndash; it won&amp;rsquo;t be used much. Sometimes, though, your database storage is similar in type to some other field, so you can use that other field&amp;rsquo;s logic to create the right column.</source>
          <target state="translated">如果创建了&lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt; &lt;code&gt;db_type()&lt;/code&gt; &lt;/a&gt;方法，则无需担心&lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_internal_type&quot;&gt; &lt;code&gt;get_internal_type()&lt;/code&gt; &lt;/a&gt;－它不会被太多使用。但是，有时数据库存储的类型与其他字段相似，因此您可以使用该其他字段的逻辑来创建正确的列。</target>
        </trans-unit>
        <trans-unit id="b5976cd51ea3df04ddca3661787303e1989a9bdd" translate="yes" xml:space="preserve">
          <source>If you have customized authentication (see &lt;a href=&quot;customizing&quot;&gt;Customizing Authentication&lt;/a&gt;) you can use a custom authentication form by setting the &lt;code&gt;authentication_form&lt;/code&gt; attribute. This form must accept a &lt;code&gt;request&lt;/code&gt; keyword argument in its &lt;code&gt;__init__()&lt;/code&gt; method and provide a &lt;code&gt;get_user()&lt;/code&gt; method which returns the authenticated user object (this method is only ever called after successful form validation).</source>
          <target state="translated">如果您具有定制的身份验证（请参阅&lt;a href=&quot;customizing&quot;&gt;Customizing Authentication&lt;/a&gt;），则可以通过设置 &lt;code&gt;authentication_form&lt;/code&gt; 属性来使用定制的身份验证表单。此表单必须在其 &lt;code&gt;__init__()&lt;/code&gt; 方法中接受一个 &lt;code&gt;request&lt;/code&gt; 关键字参数，并提供一个 &lt;code&gt;get_user()&lt;/code&gt; 方法，该方法返回经过身份验证的用户对象（仅在成功进行表单验证后才调用此方法）。</target>
        </trans-unit>
        <trans-unit id="e49e350f7aca08322a1d5e22652de39cfc978ac8" translate="yes" xml:space="preserve">
          <source>If you have difficulty finding where the Django source files are located on your system, run the following command:</source>
          <target state="translated">如果你很难找到Django源文件在你的系统中的位置,运行以下命令。</target>
        </trans-unit>
        <trans-unit id="2ed6656727786d8c5a9c10718cdb288f20ac8eaf" translate="yes" xml:space="preserve">
          <source>If you have installed a &lt;a href=&quot;../../../topics/auth/customizing#auth-custom-user&quot;&gt;custom user model&lt;/a&gt; and want to use this default auth handler, it must support an &lt;code&gt;is_active&lt;/code&gt; attribute. If you want to use group based authorization, your custom user must have a relation named &amp;lsquo;groups&amp;rsquo;, referring to a related object that has a &amp;lsquo;name&amp;rsquo; field. You can also specify your own custom mod_wsgi auth handler if your custom cannot conform to these requirements.</source>
          <target state="translated">如果您已经安装了&lt;a href=&quot;../../../topics/auth/customizing#auth-custom-user&quot;&gt;自定义用户模型&lt;/a&gt;并希望使用此默认身份验证处理程序，则它必须支持 &lt;code&gt;is_active&lt;/code&gt; 属性。如果要使用基于组的授权，则自定义用户必须具有名为&amp;ldquo;组&amp;rdquo;的关系，该关系是指具有&amp;ldquo;名称&amp;rdquo;字段的相关对象。如果您的自定义不符合这些要求，也可以指定自己的自定义mod_wsgi身份验证处理程序。</target>
        </trans-unit>
        <trans-unit id="2f1712a605e1df12222b17db97359a92359d57b3" translate="yes" xml:space="preserve">
          <source>If you have multiple &lt;code&gt;Form&lt;/code&gt; classes that share fields, you can use subclassing to remove redundancy.</source>
          <target state="translated">如果您有多个共享字段的 &lt;code&gt;Form&lt;/code&gt; 类，则可以使用子类删除冗余。</target>
        </trans-unit>
        <trans-unit id="c6aa2d211b2f44d42c468cde0eb6bc8be637e6dd" translate="yes" xml:space="preserve">
          <source>If you have multiple caches defined in &lt;a href=&quot;../../ref/settings#std:setting-CACHES&quot;&gt;&lt;code&gt;CACHES&lt;/code&gt;&lt;/a&gt;, Django will use the default cache. To use another cache, set &lt;a href=&quot;../../ref/settings#std:setting-SESSION_CACHE_ALIAS&quot;&gt;&lt;code&gt;SESSION_CACHE_ALIAS&lt;/code&gt;&lt;/a&gt; to the name of that cache.</source>
          <target state="translated">如果您在&lt;a href=&quot;../../ref/settings#std:setting-CACHES&quot;&gt; &lt;code&gt;CACHES&lt;/code&gt; 中&lt;/a&gt;定义了多个缓存，则Django将使用默认缓存。要使用另一个缓存，请将&lt;a href=&quot;../../ref/settings#std:setting-SESSION_CACHE_ALIAS&quot;&gt; &lt;code&gt;SESSION_CACHE_ALIAS&lt;/code&gt; &lt;/a&gt;设置为该缓存的名称。</target>
        </trans-unit>
        <trans-unit id="0daeb88e4409e7fba4cbaee7d1c51bff9fbbe585" translate="yes" xml:space="preserve">
          <source>If you have test classes that cannot be run in parallel (e.g. because they share a common resource), you can use &lt;code&gt;django.test.testcases.SerializeMixin&lt;/code&gt; to run them sequentially. This mixin uses a filesystem &lt;code&gt;lockfile&lt;/code&gt;.</source>
          <target state="translated">如果您有不能并行运行的测试类（例如，因为它们共享一个公共资源），则可以使用 &lt;code&gt;django.test.testcases.SerializeMixin&lt;/code&gt; 顺序运行它们。此混入使用文件系统 &lt;code&gt;lockfile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="69e118594fe6d021ccddfba860e486fc346e2e24" translate="yes" xml:space="preserve">
          <source>If you have test classes that cannot be run in parallel, you can use &lt;code&gt;SerializeMixin&lt;/code&gt; to run them sequentially. See &lt;a href=&quot;../topics/testing/advanced#topics-testing-enforce-run-sequentially&quot;&gt;Enforce running test classes sequentially&lt;/a&gt;.</source>
          <target state="translated">如果您有不能并行运行的测试类，则可以使用 &lt;code&gt;SerializeMixin&lt;/code&gt; 依次运行它们。请参阅&lt;a href=&quot;../topics/testing/advanced#topics-testing-enforce-run-sequentially&quot;&gt;强制顺序运行测试类&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="db6b634100bf984485aba1e1d164f951a1225a84" translate="yes" xml:space="preserve">
          <source>If you have the Django admin installed, you can also &lt;a href=&quot;#auth-admin&quot;&gt;create users interactively&lt;/a&gt;.</source>
          <target state="translated">如果您安装了Django管理员，则还&lt;a href=&quot;#auth-admin&quot;&gt;可以交互式创建用户&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2000ff382760e480cb9b499a00548bfca0c2d7fe" translate="yes" xml:space="preserve">
          <source>If you have the Django admin installed, you can also change user&amp;rsquo;s passwords on the &lt;a href=&quot;#auth-admin&quot;&gt;authentication system&amp;rsquo;s admin pages&lt;/a&gt;.</source>
          <target state="translated">如果您安装了Django admin，则还可以在&lt;a href=&quot;#auth-admin&quot;&gt;身份验证系统的admin页面&lt;/a&gt;上更改用户的密码。</target>
        </trans-unit>
        <trans-unit id="59e6b390f0fb4a292f006284bfad36ce56a1c450" translate="yes" xml:space="preserve">
          <source>If you have tried function based generic views in the past and found them lacking, you should not think of class-based generic views as a class-based equivalent, but rather as a fresh approach to solving the original problems that generic views were meant to solve.</source>
          <target state="translated">如果你在过去尝试过基于函数的泛型视图,并发现它们的不足,你不应该把基于类的泛型视图看作是基于类的等价物,而应该把它看作是解决泛型视图原本要解决的问题的一种新方法。</target>
        </trans-unit>
        <trans-unit id="efd9aa9b8fc35677ff19eb12feae61a2f1dd1243" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t added any extra options on top of the field you inherited from, then there&amp;rsquo;s no need to write a new &lt;code&gt;deconstruct()&lt;/code&gt; method. If, however, you&amp;rsquo;re changing the arguments passed in &lt;code&gt;__init__()&lt;/code&gt; (like we are in &lt;code&gt;HandField&lt;/code&gt;), you&amp;rsquo;ll need to supplement the values being passed.</source>
          <target state="translated">如果您没有在继承字段的顶部添加任何其他选项，则无需编写新的 &lt;code&gt;deconstruct()&lt;/code&gt; 方法。但是，如果要更改在 &lt;code&gt;__init__()&lt;/code&gt; 传递的参数（就像我们在 &lt;code&gt;HandField&lt;/code&gt; 中一样），则需要补充所传递的值。</target>
        </trans-unit>
        <trans-unit id="4ea2ba3519701ee1ea3735aa6135ecb00e08b0a0" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t recently completed Tutorials 1&amp;ndash;7, we encourage you to review these so that your example project matches the one described below.</source>
          <target state="translated">如果您最近尚未完成教程1&amp;ndash;7，我们建议您复习这些内容，以使示例项目与下面描述的项目匹配。</target>
        </trans-unit>
        <trans-unit id="b16b0bccf0c08600a1fbaec81d987234f8ac3c71" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t set up backups for your database, do it right now!</source>
          <target state="translated">如果您尚未为数据库设置备份，请立即执行！</target>
        </trans-unit>
        <trans-unit id="3abc3fddfa394c8f2c33c40961d7aa2e45568252" translate="yes" xml:space="preserve">
          <source>If you implement &lt;code&gt;__init__&lt;/code&gt; in your subclass of &lt;a href=&quot;#django.core.management.BaseCommand&quot;&gt;&lt;code&gt;BaseCommand&lt;/code&gt;&lt;/a&gt;, you must call &lt;a href=&quot;#django.core.management.BaseCommand&quot;&gt;&lt;code&gt;BaseCommand&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;code&gt;__init__&lt;/code&gt;:</source>
          <target state="translated">如果您在&lt;a href=&quot;#django.core.management.BaseCommand&quot;&gt; &lt;code&gt;BaseCommand&lt;/code&gt; &lt;/a&gt;的子类中实现 &lt;code&gt;__init__&lt;/code&gt; ，则必须调用&lt;a href=&quot;#django.core.management.BaseCommand&quot;&gt; &lt;code&gt;BaseCommand&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;__init__&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a3b78e197955bcb146a1c23c5d00f08fdb545c8d" translate="yes" xml:space="preserve">
          <source>If you implement custom model fields that inherit from &lt;a href=&quot;models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; directly, are overriding &lt;a href=&quot;models/fields#django.db.models.Field.get_prep_value&quot;&gt;&lt;code&gt;get_prep_value()&lt;/code&gt;&lt;/a&gt;, or use &lt;a href=&quot;models/expressions#django.db.models.expressions.RawSQL&quot;&gt;&lt;code&gt;RawSQL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;models/querysets#django.db.models.query.QuerySet.extra&quot;&gt;&lt;code&gt;extra()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../topics/db/sql#django.db.models.Manager.raw&quot;&gt;&lt;code&gt;raw()&lt;/code&gt;&lt;/a&gt;, you should ensure that you perform appropriate typecasting.</source>
          <target state="translated">如果您实现直接从&lt;a href=&quot;models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;继承，覆盖&lt;a href=&quot;models/fields#django.db.models.Field.get_prep_value&quot;&gt; &lt;code&gt;get_prep_value()&lt;/code&gt; &lt;/a&gt;或使用&lt;a href=&quot;models/expressions#django.db.models.expressions.RawSQL&quot;&gt; &lt;code&gt;RawSQL&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;models/querysets#django.db.models.query.QuerySet.extra&quot;&gt; &lt;code&gt;extra()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../topics/db/sql#django.db.models.Manager.raw&quot;&gt; &lt;code&gt;raw()&lt;/code&gt; 的&lt;/a&gt;自定义模型字段，则应确保执行适当的类型转换。</target>
        </trans-unit>
        <trans-unit id="4d14c28506b4a41e79a0a531c1100009cf8a5877" translate="yes" xml:space="preserve">
          <source>If you import models directly rather than using the historical models, your migrations &lt;em&gt;may work initially&lt;/em&gt; but will fail in the future when you try to re-run old migrations (commonly, when you set up a new installation and run through all the migrations to set up the database).</source>
          <target state="translated">如果直接导入模型而不是使用历史模型，则迁移&lt;em&gt;可能会开始工作，&lt;/em&gt;但将来在尝试重新运行旧迁移时会失败（通常，在安装新安装并运行所有要设置的迁移时）数据库）。</target>
        </trans-unit>
        <trans-unit id="4dcf54cc839f3636de3833bb33a943b51d4b3e83" translate="yes" xml:space="preserve">
          <source>If you install your project&amp;rsquo;s Python dependencies inside a &lt;a href=&quot;https://docs.python.org/3/library/venv.html#module-venv&quot;&gt;&lt;code&gt;virtual
environment&lt;/code&gt;&lt;/a&gt;, add the path using &lt;code&gt;WSGIPythonHome&lt;/code&gt;. See the &lt;a href=&quot;https://modwsgi.readthedocs.io/en/develop/user-guides/virtual-environments.html&quot;&gt;mod_wsgi virtual environment guide&lt;/a&gt; for more details.</source>
          <target state="translated">如果您在&lt;a href=&quot;https://docs.python.org/3/library/venv.html#module-venv&quot;&gt; &lt;code&gt;virtual environment&lt;/code&gt; &lt;/a&gt;安装项目的Python依赖项，请使用 &lt;code&gt;WSGIPythonHome&lt;/code&gt; 添加路径。有关更多详细信息，请参见&lt;a href=&quot;https://modwsgi.readthedocs.io/en/develop/user-guides/virtual-environments.html&quot;&gt;mod_wsgi虚拟环境指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="44070fbe89941700ca164927fd2839d802124e64" translate="yes" xml:space="preserve">
          <source>If you install your project&amp;rsquo;s Python dependencies inside a &lt;a href=&quot;https://virtualenv.pypa.io/&quot;&gt;virtualenv&lt;/a&gt;, add the path to the virtualenv using &lt;code&gt;WSGIPythonHome&lt;/code&gt;. See the &lt;a href=&quot;https://modwsgi.readthedocs.io/en/develop/user-guides/virtual-environments.html&quot;&gt;mod_wsgi virtualenv guide&lt;/a&gt; for more details.</source>
          <target state="translated">如果您在&lt;a href=&quot;https://virtualenv.pypa.io/&quot;&gt;virtualenv&lt;/a&gt;内安装项目的Python依赖项，请使用 &lt;code&gt;WSGIPythonHome&lt;/code&gt; 将路径添加到virtualenv 。有关更多详细信息，请参见&lt;a href=&quot;https://modwsgi.readthedocs.io/en/develop/user-guides/virtual-environments.html&quot;&gt;mod_wsgi virtualenv指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a74cb3689863414b53e2cc2ad45826c27f81e941" translate="yes" xml:space="preserve">
          <source>If you installed Django with &lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt;, you can use the &lt;code&gt;--upgrade&lt;/code&gt; or &lt;code&gt;-U&lt;/code&gt; flag:</source>
          <target state="translated">如果使用&lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt;安装了Django ，则可以使用 &lt;code&gt;--upgrade&lt;/code&gt; 或 &lt;code&gt;-U&lt;/code&gt; 标志：</target>
        </trans-unit>
        <trans-unit id="0e1355dc1d54e62ec3be4d96bc279fa717ea1aa3" translate="yes" xml:space="preserve">
          <source>If you intend to allow users to upload files, you must ensure that the environment used to run Django is configured to work with non-ASCII file names. If your environment isn&amp;rsquo;t configured correctly, you&amp;rsquo;ll encounter &lt;code&gt;UnicodeEncodeError&lt;/code&gt; exceptions when saving files with file names that contain non-ASCII characters.</source>
          <target state="translated">如果要允许用户上传文件，则必须确保将用于运行Django的环境配置为使用非ASCII文件名。如果您的环境配置不正确，则在保存文件名包含非ASCII字符的文件时会遇到 &lt;code&gt;UnicodeEncodeError&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="4acb8b00d983476c1c0fae9d2bcb2eb3c71e63d5" translate="yes" xml:space="preserve">
          <source>If you just want to experiment with Django, skip ahead to the next section; Django includes a lightweight web server you can use for testing, so you won&amp;rsquo;t need to set up Apache until you&amp;rsquo;re ready to deploy Django in production.</source>
          <target state="translated">如果您只想尝试使用Django，请跳到下一节；Django包括可用于测试的轻量级Web服务器，因此在准备好将Django部署到生产环境之前，无需设置Apache。</target>
        </trans-unit>
        <trans-unit id="3568f1bdadbf483dacd6fb9b4be3a20a4b3cc65b" translate="yes" xml:space="preserve">
          <source>If you just want to get some data from your tables into a serialized form, you could use the &lt;a href=&quot;../ref/django-admin#django-admin-dumpdata&quot;&gt;&lt;code&gt;dumpdata&lt;/code&gt;&lt;/a&gt; management command.</source>
          <target state="translated">如果只想从表中获取一些数据以序列化形式，则可以使用&lt;a href=&quot;../ref/django-admin#django-admin-dumpdata&quot;&gt; &lt;code&gt;dumpdata&lt;/code&gt; &lt;/a&gt; management命令。</target>
        </trans-unit>
        <trans-unit id="4e09fa0bd8a3a147ea439259f86c751ca2fbfc03" translate="yes" xml:space="preserve">
          <source>If you just want to get started already (and nobody would blame you!), try taking a look at the list of &lt;a href=&quot;https://code.djangoproject.com/query?status=new&amp;amp;status=reopened&amp;amp;has_patch=0&amp;amp;easy=1&amp;amp;col=id&amp;amp;col=summary&amp;amp;col=status&amp;amp;col=owner&amp;amp;col=type&amp;amp;col=milestone&amp;amp;order=priority&quot;&gt;easy tickets that need patches&lt;/a&gt; and the &lt;a href=&quot;https://code.djangoproject.com/query?status=new&amp;amp;status=reopened&amp;amp;needs_better_patch=1&amp;amp;easy=1&amp;amp;col=id&amp;amp;col=summary&amp;amp;col=status&amp;amp;col=owner&amp;amp;col=type&amp;amp;col=milestone&amp;amp;order=priority&quot;&gt;easy tickets that have patches which need improvement&lt;/a&gt;. If you&amp;rsquo;re familiar with writing tests, you can also look at the list of &lt;a href=&quot;https://code.djangoproject.com/query?status=new&amp;amp;status=reopened&amp;amp;needs_tests=1&amp;amp;easy=1&amp;amp;col=id&amp;amp;col=summary&amp;amp;col=status&amp;amp;col=owner&amp;amp;col=type&amp;amp;col=milestone&amp;amp;order=priority&quot;&gt;easy tickets that need tests&lt;/a&gt;. Remember to follow the guidelines about claiming tickets that were mentioned in the link to Django&amp;rsquo;s documentation on &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/submitting-patches/&quot;&gt;claiming tickets and submitting patches&lt;/a&gt;.</source>
          <target state="translated">如果您只是想开始使用（没有人会怪您！），请尝试看一下&lt;a href=&quot;https://code.djangoproject.com/query?status=new&amp;amp;status=reopened&amp;amp;has_patch=0&amp;amp;easy=1&amp;amp;col=id&amp;amp;col=summary&amp;amp;col=status&amp;amp;col=owner&amp;amp;col=type&amp;amp;col=milestone&amp;amp;order=priority&quot;&gt;需要补丁&lt;/a&gt;的&lt;a href=&quot;https://code.djangoproject.com/query?status=new&amp;amp;status=reopened&amp;amp;needs_better_patch=1&amp;amp;easy=1&amp;amp;col=id&amp;amp;col=summary&amp;amp;col=status&amp;amp;col=owner&amp;amp;col=type&amp;amp;col=milestone&amp;amp;order=priority&quot;&gt;简易票据和带有需要改进&lt;/a&gt;的简易票据的清单。如果您熟悉编写测试的方法，则还可以查看&lt;a href=&quot;https://code.djangoproject.com/query?status=new&amp;amp;status=reopened&amp;amp;needs_tests=1&amp;amp;easy=1&amp;amp;col=id&amp;amp;col=summary&amp;amp;col=status&amp;amp;col=owner&amp;amp;col=type&amp;amp;col=milestone&amp;amp;order=priority&quot;&gt;需要测试&lt;/a&gt;的简易凭单清单。请记住要遵循Django的&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/submitting-patches/&quot;&gt;索取票证和提交补丁&lt;/a&gt;文档链接中提到的索取票证的准则。</target>
        </trans-unit>
        <trans-unit id="e71f753d1a94701cabfdc64cd8592ac2d4550327" translate="yes" xml:space="preserve">
          <source>If you just want to get started already (and nobody would blame you!), try taking a look at the list of &lt;a href=&quot;https://code.djangoproject.com/query?status=new&amp;amp;status=reopened&amp;amp;has_patch=0&amp;amp;easy=1&amp;amp;col=id&amp;amp;col=summary&amp;amp;col=status&amp;amp;col=owner&amp;amp;col=type&amp;amp;col=milestone&amp;amp;order=priority&quot;&gt;easy tickets that need patches&lt;/a&gt; and the &lt;a href=&quot;https://code.djangoproject.com/query?status=new&amp;amp;status=reopened&amp;amp;needs_better_patch=1&amp;amp;easy=1&amp;amp;col=id&amp;amp;col=summary&amp;amp;col=status&amp;amp;col=owner&amp;amp;col=type&amp;amp;col=milestone&amp;amp;order=priority&quot;&gt;easy tickets that have patches which need improvement&lt;/a&gt;. If you&amp;rsquo;re familiar with writing tests, you can also look at the list of &lt;a href=&quot;https://code.djangoproject.com/query?status=new&amp;amp;status=reopened&amp;amp;needs_tests=1&amp;amp;easy=1&amp;amp;col=id&amp;amp;col=summary&amp;amp;col=status&amp;amp;col=owner&amp;amp;col=type&amp;amp;col=milestone&amp;amp;order=priority&quot;&gt;easy tickets that need tests&lt;/a&gt;. Remember to follow the guidelines about claiming tickets that were mentioned in the link to Django&amp;rsquo;s documentation on &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-code/submitting-patches/&quot;&gt;claiming tickets and submitting patches&lt;/a&gt;.</source>
          <target state="translated">如果您只是想开始使用（没有人会怪您！），请尝试看一下&lt;a href=&quot;https://code.djangoproject.com/query?status=new&amp;amp;status=reopened&amp;amp;has_patch=0&amp;amp;easy=1&amp;amp;col=id&amp;amp;col=summary&amp;amp;col=status&amp;amp;col=owner&amp;amp;col=type&amp;amp;col=milestone&amp;amp;order=priority&quot;&gt;需要补丁&lt;/a&gt;的&lt;a href=&quot;https://code.djangoproject.com/query?status=new&amp;amp;status=reopened&amp;amp;needs_better_patch=1&amp;amp;easy=1&amp;amp;col=id&amp;amp;col=summary&amp;amp;col=status&amp;amp;col=owner&amp;amp;col=type&amp;amp;col=milestone&amp;amp;order=priority&quot;&gt;简易票据&lt;/a&gt;列表和带有需要改进的简易票据的清单。如果您熟悉编写测试的方法，则还可以查看&lt;a href=&quot;https://code.djangoproject.com/query?status=new&amp;amp;status=reopened&amp;amp;needs_tests=1&amp;amp;easy=1&amp;amp;col=id&amp;amp;col=summary&amp;amp;col=status&amp;amp;col=owner&amp;amp;col=type&amp;amp;col=milestone&amp;amp;order=priority&quot;&gt;需要测试&lt;/a&gt;的简易凭单清单。记住要遵循Django的有关&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-code/submitting-patches/&quot;&gt;索取票证和提交补丁&lt;/a&gt;的文档链接中提到的索取票证的准则。</target>
        </trans-unit>
        <trans-unit id="c50512e5b7b4d2917fd0ded7753af940b02ac0a6" translate="yes" xml:space="preserve">
          <source>If you know there is only one object that matches your query, you can use the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; which returns the object directly:</source>
          <target state="translated">如果您知道只有一个对象与查询匹配，则可以在&lt;a href=&quot;managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt;上使用&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;方法，该方法直接返回该对象：</target>
        </trans-unit>
        <trans-unit id="a4d46c64f50d662db0e36989441c746c4eb15547" translate="yes" xml:space="preserve">
          <source>If you know which models you&amp;rsquo;ll be using most often, you can also add a &amp;ldquo;reverse&amp;rdquo; generic relationship to enable an additional API. For example:</source>
          <target state="translated">如果您知道最常使用哪种模型，则还可以添加&amp;ldquo;反向&amp;rdquo;通用关系以启用其他API。例如：</target>
        </trans-unit>
        <trans-unit id="c191fd40bd25e99c36f57ceff24ea08151258536" translate="yes" xml:space="preserve">
          <source>If you leave off the &lt;code&gt;name&lt;/code&gt; argument, as in the second example above, Django will use the function&amp;rsquo;s name as the filter name.</source>
          <target state="translated">如果不使用 &lt;code&gt;name&lt;/code&gt; 参数，如上面的第二个示例中所示，Django将使用该函数的名称作为过滤器名称。</target>
        </trans-unit>
        <trans-unit id="e8bf004d14c563eb22c00ca8e5526f83bb38a104" translate="yes" xml:space="preserve">
          <source>If you leave off the &lt;code&gt;name&lt;/code&gt; argument, as in the second example above, Django will use the function&amp;rsquo;s name as the tag name.</source>
          <target state="translated">如果不使用 &lt;code&gt;name&lt;/code&gt; 参数，如上面的第二个示例中所示，Django将使用该函数的名称作为标记名称。</target>
        </trans-unit>
        <trans-unit id="950469d51b06aaa88a367dde3845db6577c50567" translate="yes" xml:space="preserve">
          <source>If you like the widgets that the Django Admin application uses, feel free to use them in your own application! They&amp;rsquo;re all stored in &lt;code&gt;django.contrib.admin.widgets&lt;/code&gt;.</source>
          <target state="translated">如果您喜欢Django Admin应用程序使用的小部件，请随时在您自己的应用程序中使用它们！它们都存储在 &lt;code&gt;django.contrib.admin.widgets&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="338ebae0cd2defb4e2b46e3293b08157abaa3c2b" translate="yes" xml:space="preserve">
          <source>If you look at any change list in the admin, you&amp;rsquo;ll see this feature in action; Django ships with a &amp;ldquo;delete selected objects&amp;rdquo; action available to all models. For example, here&amp;rsquo;s the user module from Django&amp;rsquo;s built-in &lt;a href=&quot;../../../topics/auth/index#module-django.contrib.auth&quot;&gt;&lt;code&gt;django.contrib.auth&lt;/code&gt;&lt;/a&gt; app:</source>
          <target state="translated">如果您查看管理员中的任何更改列表，就会看到此功能的实际效果；Django随附了适用于所有模型的&amp;ldquo;删除选定对象&amp;rdquo;操作。例如，这是Django内置的&lt;a href=&quot;../../../topics/auth/index#module-django.contrib.auth&quot;&gt; &lt;code&gt;django.contrib.auth&lt;/code&gt; &lt;/a&gt;应用程序中的用户模块：</target>
        </trans-unit>
        <trans-unit id="563d1c2d9d163e085568958c9f2b6d9c96629a36" translate="yes" xml:space="preserve">
          <source>If you look carefully, you can see that the portion that was generated by &lt;code&gt;quote()&lt;/code&gt; in the second example was not double-quoted when passed to &lt;code&gt;iri_to_uri()&lt;/code&gt;. This is a very important and useful feature. It means that you can construct your IRI without worrying about whether it contains non-ASCII characters and then, right at the end, call &lt;code&gt;iri_to_uri()&lt;/code&gt; on the result.</source>
          <target state="translated">如果仔细看，您会发现第二个示例中由 &lt;code&gt;quote()&lt;/code&gt; 生成的部分在传递给 &lt;code&gt;iri_to_uri()&lt;/code&gt; 时没有被双引号引起来。这是非常重要和有用的功能。这意味着您可以构造IRI，而不必担心它是否包含非ASCII字符，然后 &lt;code&gt;iri_to_uri()&lt;/code&gt; 在结果上调用iri_to_uri（）。</target>
        </trans-unit>
        <trans-unit id="fae37143701969595b56a1de835f003e68a717b5" translate="yes" xml:space="preserve">
          <source>If you manually render fields in the template, you can render &lt;code&gt;can_delete&lt;/code&gt; parameter with &lt;code&gt;{{ form.DELETE }}&lt;/code&gt;:</source>
          <target state="translated">如果您手动渲染模板中的字段，则可以使用 &lt;code&gt;{{ form.DELETE }}&lt;/code&gt; 渲染 &lt;code&gt;can_delete&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="f75b2bb9e0e1faedcbcaf93a8d2cb2f193a634dc" translate="yes" xml:space="preserve">
          <source>If you meet this requirement, then substitute the &lt;code&gt;OSMGeoAdmin&lt;/code&gt; option class in your &lt;code&gt;admin.py&lt;/code&gt; file:</source>
          <target state="translated">如果满足此要求，请在 &lt;code&gt;admin.py&lt;/code&gt; 文件中替换 &lt;code&gt;OSMGeoAdmin&lt;/code&gt; 选项类：</target>
        </trans-unit>
        <trans-unit id="cb77b3727fe1f39422116c93df21b4f10b4b7b3e" translate="yes" xml:space="preserve">
          <source>If you merely want to test the output of your asynchronous views, the standard test client will run them inside their own asynchronous loop without any extra work needed on your part.</source>
          <target state="translated">如果你只是想测试异步视图的输出,标准测试客户端将在自己的异步循环中运行它们,而不需要你做任何额外的工作。</target>
        </trans-unit>
        <trans-unit id="225bae64392f765fd429b21ea8ac02f57f4afb72" translate="yes" xml:space="preserve">
          <source>If you need an empty migration file to write your own &lt;code&gt;Operation&lt;/code&gt; objects into, use &lt;code&gt;python manage.py makemigrations --empty yourappname&lt;/code&gt;, but be aware that manually adding schema-altering operations can confuse the migration autodetector and make resulting runs of &lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; output incorrect code.</source>
          <target state="translated">如果您需要一个空的迁移文件来将自己的 &lt;code&gt;Operation&lt;/code&gt; 对象写入其中，请使用 &lt;code&gt;python manage.py makemigrations --empty yourappname&lt;/code&gt; ，但请注意，手动添加更改模式的操作可能会使迁移自动检测器&lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt;困惑，并使makemigrations的最终运行输出不正确的代码。</target>
        </trans-unit>
        <trans-unit id="c26240f024c2f3e478948f8f7fec8bbb42d821c0" translate="yes" xml:space="preserve">
          <source>If you need custom template loading or custom context object instantiation, create a &lt;code&gt;TemplateResponse&lt;/code&gt; subclass and assign it to &lt;code&gt;response_class&lt;/code&gt;.</source>
          <target state="translated">如果需要自定义模板加载或自定义上下文对象实例化，请创建 &lt;code&gt;TemplateResponse&lt;/code&gt; 子类并将其分配给 &lt;code&gt;response_class&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d33ecf64697d7de63f58f86dbfaa4f84e060248a" translate="yes" xml:space="preserve">
          <source>If you need different precedence, you will need to use nested &lt;a href=&quot;#std:templatetag-if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; tags. Sometimes that is better for clarity anyway, for the sake of those who do not know the precedence rules.</source>
          <target state="translated">如果需要不同的优先级，则需要使用嵌套的&lt;a href=&quot;#std:templatetag-if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt;标记。有时候，为了那些不了解优先规则的人，为了清楚起见，这总会更好。</target>
        </trans-unit>
        <trans-unit id="94aa71aa505c6a16108b61bb062ab6ada6bf5751" translate="yes" xml:space="preserve">
          <source>If you need more control, you can create your own authentication backend that inherits from &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.backends.RemoteUserBackend&quot;&gt;&lt;code&gt;RemoteUserBackend&lt;/code&gt;&lt;/a&gt; and override one or more of its attributes and methods.</source>
          <target state="translated">如果需要更多控制，则可以创建自己的身份验证后端，该后端从&lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.backends.RemoteUserBackend&quot;&gt; &lt;code&gt;RemoteUserBackend&lt;/code&gt; &lt;/a&gt;继承，并覆盖其一个或多个属性和方法。</target>
        </trans-unit>
        <trans-unit id="758aabbe668d354fb6f337c8ed3f754bf52e0550" translate="yes" xml:space="preserve">
          <source>If you need more control, you can create your own authentication backend that inherits from this class and override these attributes or methods:</source>
          <target state="translated">如果你需要更多的控制,你可以创建自己的认证后端,继承这个类,并覆盖这些属性或方法。</target>
        </trans-unit>
        <trans-unit id="0e28d0fde6b118d6feed4accf2b47a636af43e24" translate="yes" xml:space="preserve">
          <source>If you need more fine-grained control, use a tuple (or list) as value for &lt;code&gt;list_select_related&lt;/code&gt;. Empty tuple will prevent Django from calling &lt;code&gt;select_related&lt;/code&gt; at all. Any other tuple will be passed directly to &lt;code&gt;select_related&lt;/code&gt; as parameters. For example:</source>
          <target state="translated">如果需要更细粒度的控制，请使用元组（或列表）作为 &lt;code&gt;list_select_related&lt;/code&gt; 的值。空元组将完全阻止Django调用 &lt;code&gt;select_related&lt;/code&gt; 。其他任何元组都将直接传递给 &lt;code&gt;select_related&lt;/code&gt; 作为参数。例如：</target>
        </trans-unit>
        <trans-unit id="d8cb56dde557370f78a7f18c4a395b3fd0b21ee4" translate="yes" xml:space="preserve">
          <source>If you need more flexibility, you could also add a new argument to your custom &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;makemessages&lt;/code&gt;&lt;/a&gt; command:</source>
          <target state="translated">如果需要更大的灵活性，还可以在自定义&lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt; &lt;code&gt;makemessages&lt;/code&gt; &lt;/a&gt;命令中添加新参数：</target>
        </trans-unit>
        <trans-unit id="aff7c703e8b54ba634b913901864d3aa00cffcf1" translate="yes" xml:space="preserve">
          <source>If you need the response to be streamed from the iterator to the client, you must use the &lt;a href=&quot;#django.http.StreamingHttpResponse&quot;&gt;&lt;code&gt;StreamingHttpResponse&lt;/code&gt;&lt;/a&gt; class instead.</source>
          <target state="translated">如果需要将响应从迭代器流式传输到客户端，则必须改用&lt;a href=&quot;#django.http.StreamingHttpResponse&quot;&gt; &lt;code&gt;StreamingHttpResponse&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="9cf5c4ff845a5d20e57ce99fe95fc4dfe26d3a0d" translate="yes" xml:space="preserve">
          <source>If you need to access a membership&amp;rsquo;s information you may do so by directly querying the &lt;code&gt;Membership&lt;/code&gt; model:</source>
          <target state="translated">如果您需要访问成员资格信息，可以通过直接查询 &lt;code&gt;Membership&lt;/code&gt; 模型来进行：</target>
        </trans-unit>
        <trans-unit id="29d093239d80818b0b1e33570e4407bb058ea195" translate="yes" xml:space="preserve">
          <source>If you need to access some additional information about a form field in a template and using a subclass of &lt;a href=&quot;fields#django.forms.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; isn&amp;rsquo;t sufficient, consider also customizing &lt;a href=&quot;#django.forms.BoundField&quot;&gt;&lt;code&gt;BoundField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您需要访问有关模板中表单字段的其他信息，而使用&lt;a href=&quot;fields#django.forms.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;的子类还不够，请考虑自定义&lt;a href=&quot;#django.forms.BoundField&quot;&gt; &lt;code&gt;BoundField&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ecb3aea88ed07bec970c7d28d05fa46d621b0e09" translate="yes" xml:space="preserve">
          <source>If you need to add a PostgreSQL extension (like &lt;code&gt;hstore&lt;/code&gt;, &lt;code&gt;postgis&lt;/code&gt;, etc.) using a migration, use the &lt;a href=&quot;contrib/postgres/operations#django.contrib.postgres.operations.CreateExtension&quot;&gt;&lt;code&gt;CreateExtension&lt;/code&gt;&lt;/a&gt; operation.</source>
          <target state="translated">如果您需要使用迁移来添加PostgreSQL扩展（例如 &lt;code&gt;hstore&lt;/code&gt; ， &lt;code&gt;postgis&lt;/code&gt; 等），请使用&lt;a href=&quot;contrib/postgres/operations#django.contrib.postgres.operations.CreateExtension&quot;&gt; &lt;code&gt;CreateExtension&lt;/code&gt; &lt;/a&gt;操作。</target>
        </trans-unit>
        <trans-unit id="e450e893ae7afe1bc2e22ffb0c5a0a76816766d3" translate="yes" xml:space="preserve">
          <source>If you need to add additional fields to the formset this can be easily accomplished. The formset base class provides an &lt;code&gt;add_fields&lt;/code&gt; method. You can override this method to add your own fields or even redefine the default fields/attributes of the order and deletion fields:</source>
          <target state="translated">如果您需要向表单集添加其他字段，则可以轻松实现。 &lt;code&gt;add_fields&lt;/code&gt; 基类提供了一个add_fields方法。您可以重写此方法以添加自己的字段，甚至重新定义order和delete字段的默认字段/属性：</target>
        </trans-unit>
        <trans-unit id="a49d29d22712c0f8cc4a9ef3a3f1dc48cf130bea" translate="yes" xml:space="preserve">
          <source>If you need to change how emails are sent you can write your own email backend. The &lt;a href=&quot;../ref/settings#std:setting-EMAIL_BACKEND&quot;&gt;&lt;code&gt;EMAIL_BACKEND&lt;/code&gt;&lt;/a&gt; setting in your settings file is then the Python import path for your backend class.</source>
          <target state="translated">如果您需要更改电子邮件的发送方式，则可以编写自己的电子邮件后端。然后，设置文件中的&lt;a href=&quot;../ref/settings#std:setting-EMAIL_BACKEND&quot;&gt; &lt;code&gt;EMAIL_BACKEND&lt;/code&gt; &lt;/a&gt;设置就是您的后端类的Python导入路径。</target>
        </trans-unit>
        <trans-unit id="e5fa605cf3f76c4428e51ca9506d8d5da266d92c" translate="yes" xml:space="preserve">
          <source>If you need to change this default behavior, create the intermediary table as an explicit model (with &lt;code&gt;managed&lt;/code&gt; set as needed) and use the &lt;a href=&quot;fields#django.db.models.ManyToManyField.through&quot;&gt;&lt;code&gt;ManyToManyField.through&lt;/code&gt;&lt;/a&gt; attribute to make the relation use your custom model.</source>
          <target state="translated">如果需要更改此默认行为，则将中介表创建为显式模型（根据需要使用 &lt;code&gt;managed&lt;/code&gt; 集），并使用&lt;a href=&quot;fields#django.db.models.ManyToManyField.through&quot;&gt; &lt;code&gt;ManyToManyField.through&lt;/code&gt; &lt;/a&gt;属性使关系使用自定义模型。</target>
        </trans-unit>
        <trans-unit id="417131b19902519fe0b468a60926a5bf16770559" translate="yes" xml:space="preserve">
          <source>If you need to clear the list of related fields added by past calls of &lt;code&gt;select_related&lt;/code&gt; on a &lt;code&gt;QuerySet&lt;/code&gt;, you can pass &lt;code&gt;None&lt;/code&gt; as a parameter:</source>
          <target state="translated">如果您需要清除 &lt;code&gt;QuerySet&lt;/code&gt; 上过去 &lt;code&gt;select_related&lt;/code&gt; 调用所添加的相关字段的列表，则可以将 &lt;code&gt;None&lt;/code&gt; 作为参数传递：</target>
        </trans-unit>
        <trans-unit id="16b5139d25521e92cae75d82c00fd807f514ef86" translate="yes" xml:space="preserve">
          <source>If you need to construct a &lt;code&gt;File&lt;/code&gt; yourself, the easiest way is to create one using a Python built-in &lt;code&gt;file&lt;/code&gt; object:</source>
          <target state="translated">如果您需要自己构造 &lt;code&gt;File&lt;/code&gt; ，最简单的方法是使用Python内置 &lt;code&gt;file&lt;/code&gt; 对象创建一个File：</target>
        </trans-unit>
        <trans-unit id="3c6d8d98e29f39567c45f015a91e483e346b4e97" translate="yes" xml:space="preserve">
          <source>If you need to create a relationship on a model that has not yet been defined, you can use the name of the model, rather than the model object itself:</source>
          <target state="translated">如果您需要在尚未定义的模型上创建关系,您可以使用模型的名称,而不是模型对象本身。</target>
        </trans-unit>
        <trans-unit id="65d871b7088c66feacdac17c59f3a01772b1f023" translate="yes" xml:space="preserve">
          <source>If you need to create a user to login with, use the &lt;a href=&quot;../../django-admin#django-admin-createsuperuser&quot;&gt;&lt;code&gt;createsuperuser&lt;/code&gt;&lt;/a&gt; command. By default, logging in to the admin requires that the user has the &lt;a href=&quot;../auth#django.contrib.auth.models.User.is_superuser&quot;&gt;&lt;code&gt;is_superuser&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../auth#django.contrib.auth.models.User.is_staff&quot;&gt;&lt;code&gt;is_staff&lt;/code&gt;&lt;/a&gt; attribute set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">如果需要创建用于登录的用户，请使用&lt;a href=&quot;../../django-admin#django-admin-createsuperuser&quot;&gt; &lt;code&gt;createsuperuser&lt;/code&gt; &lt;/a&gt;命令。默认情况下，登录到admin要求用户将&lt;a href=&quot;../auth#django.contrib.auth.models.User.is_superuser&quot;&gt; &lt;code&gt;is_superuser&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../auth#django.contrib.auth.models.User.is_staff&quot;&gt; &lt;code&gt;is_staff&lt;/code&gt; &lt;/a&gt;属性设置为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8c2e6ded6b51f5db806ed60abec233f32b0b1f1" translate="yes" xml:space="preserve">
          <source>If you need to customize error reports beyond filtering you may specify a custom error reporter class by defining the &lt;a href=&quot;../ref/settings#std:setting-DEFAULT_EXCEPTION_REPORTER&quot;&gt;&lt;code&gt;DEFAULT_EXCEPTION_REPORTER&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="translated">如果除了过滤之外还需要自定义错误报告，则可以通过定义&lt;a href=&quot;../ref/settings#std:setting-DEFAULT_EXCEPTION_REPORTER&quot;&gt; &lt;code&gt;DEFAULT_EXCEPTION_REPORTER&lt;/code&gt; &lt;/a&gt;设置来指定自定义错误报告器类：</target>
        </trans-unit>
        <trans-unit id="d65af76fc2fae362276614f23f186268a8063338" translate="yes" xml:space="preserve">
          <source>If you need to customize search you can use &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_search_results&quot;&gt;&lt;code&gt;ModelAdmin.get_search_results()&lt;/code&gt;&lt;/a&gt; to provide additional or alternate search behavior.</source>
          <target state="translated">如果需要自定义搜索，则可以使用&lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_search_results&quot;&gt; &lt;code&gt;ModelAdmin.get_search_results()&lt;/code&gt; &lt;/a&gt;提供其他或替代的搜索行为。</target>
        </trans-unit>
        <trans-unit id="268d1539953ae22ff11a5330553a90257431d684" translate="yes" xml:space="preserve">
          <source>If you need to customize the SQL mode, you can set the &lt;code&gt;sql_mode&lt;/code&gt; variable like other MySQL options: either in a config file or with the entry &lt;code&gt;'init_command': &quot;SET sql_mode='STRICT_TRANS_TABLES'&quot;&lt;/code&gt; in the &lt;a href=&quot;settings#std:setting-OPTIONS&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt; part of your database configuration in &lt;a href=&quot;settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您需要自定义SQL模式，则可以像其他MySQL选项一样设置 &lt;code&gt;sql_mode&lt;/code&gt; 变量：在配置文件中或在数据库配置的&lt;a href=&quot;settings#std:setting-OPTIONS&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; &lt;/a&gt;部分中使用条目 &lt;code&gt;'init_command': &quot;SET sql_mode='STRICT_TRANS_TABLES'&quot;&lt;/code&gt; 进行设置。&lt;a href=&quot;settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5590b9cc3e5a4f06eb74e308901af7ab377968ea" translate="yes" xml:space="preserve">
          <source>If you need to disable a &lt;a href=&quot;#adminsite-actions&quot;&gt;site-wide action&lt;/a&gt; you can call &lt;a href=&quot;#django.contrib.admin.AdminSite.disable_action&quot;&gt;&lt;code&gt;AdminSite.disable_action()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您需要禁用&lt;a href=&quot;#adminsite-actions&quot;&gt;网站范围的操作&lt;/a&gt;，则可以调用&lt;a href=&quot;#django.contrib.admin.AdminSite.disable_action&quot;&gt; &lt;code&gt;AdminSite.disable_action()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3188dcbcf55e21ddcef8ee90b69dccce7ee89480" translate="yes" xml:space="preserve">
          <source>If you need to distinguish between bound and unbound form instances at runtime, check the value of the form&amp;rsquo;s &lt;a href=&quot;#django.forms.Form.is_bound&quot;&gt;&lt;code&gt;is_bound&lt;/code&gt;&lt;/a&gt; attribute:</source>
          <target state="translated">如果需要在运行时区分绑定表单实例和未绑定表单实例，请检查表单的&lt;a href=&quot;#django.forms.Form.is_bound&quot;&gt; &lt;code&gt;is_bound&lt;/code&gt; &lt;/a&gt;属性的值：</target>
        </trans-unit>
        <trans-unit id="271b48b10c2eaee15e6c01af5201ecab45c59f1b" translate="yes" xml:space="preserve">
          <source>If you need to do this from within Python, do that with &lt;code&gt;os.environ&lt;/code&gt;:</source>
          <target state="translated">如果您需要在Python中执行此操作，请使用 &lt;code&gt;os.environ&lt;/code&gt; 进行操作：</target>
        </trans-unit>
        <trans-unit id="05047b6375db39f11bb955e3562cff830f8ce275" translate="yes" xml:space="preserve">
          <source>If you need to execute more complex queries (for example, queries with &lt;code&gt;OR&lt;/code&gt; statements), you can use &lt;a href=&quot;#django.db.models.Q&quot;&gt;&lt;code&gt;Q objects&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您需要执行更复杂的查询（例如，带有 &lt;code&gt;OR&lt;/code&gt; 语句的查询），则可以使用&lt;a href=&quot;#django.db.models.Q&quot;&gt; &lt;code&gt;Q objects&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="382397a2d5889617644e1747a1ec56a1cb186983" translate="yes" xml:space="preserve">
          <source>If you need to get the content of the block from the parent template, the &lt;code&gt;{{ block.super }}&lt;/code&gt; variable will do the trick. This is useful if you want to add to the contents of a parent block instead of completely overriding it. Data inserted using &lt;code&gt;{{ block.super }}&lt;/code&gt; will not be automatically escaped (see the &lt;a href=&quot;#automatic-html-escaping&quot;&gt;next section&lt;/a&gt;), since it was already escaped, if necessary, in the parent template.</source>
          <target state="translated">如果您需要从父模板获取块的内容，则 &lt;code&gt;{{ block.super }}&lt;/code&gt; 变量可以解决问题。如果要添加到父块的内容而不是完全覆盖它，这将很有用。使用 &lt;code&gt;{{ block.super }}&lt;/code&gt; 插入的数据将不会自动转义（请参阅&lt;a href=&quot;#automatic-html-escaping&quot;&gt;下一节&lt;/a&gt;），因为如果需要，已经在父模板中转义了该数据。</target>
        </trans-unit>
        <trans-unit id="7ebc26c78fa9c356f90a7f72742c57e3cd52c72f" translate="yes" xml:space="preserve">
          <source>If you need to identify the custom levels in your HTML or CSS, you need to provide a mapping via the &lt;a href=&quot;../settings#std:setting-MESSAGE_TAGS&quot;&gt;&lt;code&gt;MESSAGE_TAGS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">如果需要在HTML或CSS中标识自定义级别，则需要通过&lt;a href=&quot;../settings#std:setting-MESSAGE_TAGS&quot;&gt; &lt;code&gt;MESSAGE_TAGS&lt;/code&gt; &lt;/a&gt;设置提供映射。</target>
        </trans-unit>
        <trans-unit id="43d0b36b5694d463b889f6b0ba10b3bc8033471f" translate="yes" xml:space="preserve">
          <source>If you need to know whether &lt;code&gt;add()&lt;/code&gt; stored a value in the cache, you can check the return value. It will return &lt;code&gt;True&lt;/code&gt; if the value was stored, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果您需要知道 &lt;code&gt;add()&lt;/code&gt; 是否在缓存中存储了值，则可以检查返回值。如果存储了值，它将返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d830c73c6c6c1f7e7b98469dce63d2206baf4296" translate="yes" xml:space="preserve">
          <source>If you need to loop over a list of lists, you can unpack the values in each sublist into individual variables. For example, if your context contains a list of (x,y) coordinates called &lt;code&gt;points&lt;/code&gt;, you could use the following to output the list of points:</source>
          <target state="translated">如果您需要遍历列表列表，则可以将每个子列表中的值解压缩为单独的变量。例如，如果您的上下文包含称为 &lt;code&gt;points&lt;/code&gt; 的（x，y）坐标列表，则可以使用以下命令输出点列表：</target>
        </trans-unit>
        <trans-unit id="e4875586a1526cd06344d2126b39a51bf67bf624" translate="yes" xml:space="preserve">
          <source>If you need to order the resulting queryset using some of the new fields or tables you have included via &lt;code&gt;extra()&lt;/code&gt; use the &lt;code&gt;order_by&lt;/code&gt; parameter to &lt;code&gt;extra()&lt;/code&gt; and pass in a sequence of strings. These strings should either be model fields (as in the normal &lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt; method on querysets), of the form &lt;code&gt;table_name.column_name&lt;/code&gt; or an alias for a column that you specified in the &lt;code&gt;select&lt;/code&gt; parameter to &lt;code&gt;extra()&lt;/code&gt;.</source>
          <target state="translated">如果您需要使用通过 &lt;code&gt;extra()&lt;/code&gt; 包含的一些新字段或表对结果查询集进行排序，请使用 &lt;code&gt;order_by&lt;/code&gt; 参数设置 &lt;code&gt;extra()&lt;/code&gt; 并传递一系列字符串。这些字符串应该是形式为 &lt;code&gt;table_name.column_name&lt;/code&gt; 的模型字段（如在querysets上的常规&lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt; &lt;code&gt;order_by()&lt;/code&gt; &lt;/a&gt;方法中），或者是您在 &lt;code&gt;select&lt;/code&gt; 参数中为 &lt;code&gt;extra()&lt;/code&gt; 指定的列的别名。</target>
        </trans-unit>
        <trans-unit id="29512c055a4bbedadcf50ac81bc12aa696fefce6" translate="yes" xml:space="preserve">
          <source>If you need to perform parameterized queries, you can use the &lt;code&gt;params&lt;/code&gt; argument to &lt;code&gt;raw()&lt;/code&gt;:</source>
          <target state="translated">如果需要执行参数化查询，则可以对 &lt;code&gt;raw()&lt;/code&gt; 使用 &lt;code&gt;params&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="85d94e84caa03cb9aa1eba7c8a2edd2887aceacb" translate="yes" xml:space="preserve">
          <source>If you need to perform some more sophisticated manipulation of asset requirements, you can define the &lt;code&gt;media&lt;/code&gt; property directly. This is done by defining a widget property that returns an instance of &lt;code&gt;forms.Media&lt;/code&gt;. The constructor for &lt;code&gt;forms.Media&lt;/code&gt; accepts &lt;code&gt;css&lt;/code&gt; and &lt;code&gt;js&lt;/code&gt; keyword arguments in the same format as that used in a static media definition.</source>
          <target state="translated">如果您需要对资产要求执行一些更复杂的操作，则可以直接定义 &lt;code&gt;media&lt;/code&gt; 属性。这是通过定义一个小部件属性来完成的，该属性返回 &lt;code&gt;forms.Media&lt;/code&gt; 的实例。 &lt;code&gt;forms.Media&lt;/code&gt; 的构造函数接受与静态媒体定义中使用的格式相同的 &lt;code&gt;css&lt;/code&gt; 和 &lt;code&gt;js&lt;/code&gt; 关键字参数。</target>
        </trans-unit>
        <trans-unit id="03077957c82f83770cda4245c00130142e0728ea" translate="yes" xml:space="preserve">
          <source>If you need to produce a custom feed format, you&amp;rsquo;ve got a couple of options.</source>
          <target state="translated">如果您需要产生自定义的Feed格式，则有两种选择。</target>
        </trans-unit>
        <trans-unit id="dce169f28d5a3a0a8217378654a731a6091f2895" translate="yes" xml:space="preserve">
          <source>If you need to provide custom file storage &amp;ndash; a common example is storing files on some remote system &amp;ndash; you can do so by defining a custom storage class. You&amp;rsquo;ll need to follow these steps:</source>
          <target state="translated">如果需要提供自定义文件存储（一个常见的示例是在某个远程系统上存储文件），则可以通过定义自定义存储类来实现。您需要按照以下步骤操作：</target>
        </trans-unit>
        <trans-unit id="21318dce302488db7fe1be9c8f91e7d9398db2d0" translate="yes" xml:space="preserve">
          <source>If you need to reload a model&amp;rsquo;s values from the database, you can use the &lt;code&gt;refresh_from_db()&lt;/code&gt; method. When this method is called without arguments the following is done:</source>
          <target state="translated">如果需要从数据库中重新加载模型的值，则可以使用 &lt;code&gt;refresh_from_db()&lt;/code&gt; 方法。当不带参数调用此方法时，将完成以下操作：</target>
        </trans-unit>
        <trans-unit id="9f60d676b2ff26e717c98cf757ee77b4169d2c79" translate="yes" xml:space="preserve">
          <source>If you need to rename your tag, you can provide a custom name for it:</source>
          <target state="translated">如果您需要重新命名您的标签,您可以为它提供一个自定义的名称。</target>
        </trans-unit>
        <trans-unit id="70ce7ed4a5fd90c845431eb06c0ba9bf7b77d4be" translate="yes" xml:space="preserve">
          <source>If you need to specify a dynamic order (for example depending on user or language) you can implement a &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_ordering&quot;&gt;&lt;code&gt;get_ordering()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">如果需要指定动态顺序（例如，取决于用户或语言），则可以实现&lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_ordering&quot;&gt; &lt;code&gt;get_ordering()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="54934551f16cb178c17684aaa62b9b0ce737160b" translate="yes" xml:space="preserve">
          <source>If you need to specify a dynamic value based on the request, you can implement a &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_list_select_related&quot;&gt;&lt;code&gt;get_list_select_related()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">如果需要基于请求指定动态值，则可以实现&lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_list_select_related&quot;&gt; &lt;code&gt;get_list_select_related()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="d7afe7febaba1ec3c478e01c27fcfae0fcae482f" translate="yes" xml:space="preserve">
          <source>If you need to specify such values, reset the sequence afterwards to avoid reusing a value that&amp;rsquo;s already in the table. The &lt;a href=&quot;django-admin#django-admin-sqlsequencereset&quot;&gt;&lt;code&gt;sqlsequencereset&lt;/code&gt;&lt;/a&gt; management command generates the SQL statements to do that.</source>
          <target state="translated">如果需要指定此类值，请在以后重置顺序，以避免重复使用表中已有的值。该&lt;a href=&quot;django-admin#django-admin-sqlsequencereset&quot;&gt; &lt;code&gt;sqlsequencereset&lt;/code&gt; &lt;/a&gt;管理命令生成SQL语句来做到这一点。</target>
        </trans-unit>
        <trans-unit id="42afbcfd63e453f7b679ed0c58b5d3f86138dbfa" translate="yes" xml:space="preserve">
          <source>If you need to specify this list dynamically, implement a &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_sortable_by&quot;&gt;&lt;code&gt;get_sortable_by()&lt;/code&gt;&lt;/a&gt; method instead.</source>
          <target state="translated">如果您需要动态指定此列表，请改为实现&lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_sortable_by&quot;&gt; &lt;code&gt;get_sortable_by()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="385e9bf858c9d8171227212211f5666543e0edbb" translate="yes" xml:space="preserve">
          <source>If you need to use a different JSON encoder class you can pass the &lt;code&gt;encoder&lt;/code&gt; parameter to the constructor method:</source>
          <target state="translated">如果需要使用其他JSON编码器类，则可以将 &lt;code&gt;encoder&lt;/code&gt; 参数传递给构造函数方法：</target>
        </trans-unit>
        <trans-unit id="52403383dcd3d11592773e83b934a1caeec7695e" translate="yes" xml:space="preserve">
          <source>If you need to use a literal &lt;code&gt;%s&lt;/code&gt; inside your select string, use the sequence &lt;code&gt;%%s&lt;/code&gt;.</source>
          <target state="translated">如果需要在选择字符串中使用文字 &lt;code&gt;%s&lt;/code&gt; ，请使用序列 &lt;code&gt;%%s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e62765ab69b86199c0c670e1b19ddf6f4572d8af" translate="yes" xml:space="preserve">
          <source>If you need to use a spatial lookup or aggregate that doesn&amp;rsquo;t support the geography type as input, you can use the &lt;a href=&quot;../../models/database-functions#django.db.models.functions.Cast&quot;&gt;&lt;code&gt;Cast&lt;/code&gt;&lt;/a&gt; database function to convert the geography column to a geometry type in the query:</source>
          <target state="translated">如果需要使用不支持地理类型的空间查找或聚合作为输入，则可以使用&lt;a href=&quot;../../models/database-functions#django.db.models.functions.Cast&quot;&gt; &lt;code&gt;Cast&lt;/code&gt; &lt;/a&gt;数据库函数将地理列转换为查询中的几何类型：</target>
        </trans-unit>
        <trans-unit id="7261e018cbf8f2bbdd8cb56b7d0debc25633a8f3" translate="yes" xml:space="preserve">
          <source>If you need to use something similar to the &lt;a href=&quot;templates/builtins#std:templatetag-url&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; template tag in your code, Django provides the following function:</source>
          <target state="translated">如果您需要在代码中使用类似于&lt;a href=&quot;templates/builtins#std:templatetag-url&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt;模板标签的内容，则Django提供以下功能：</target>
        </trans-unit>
        <trans-unit id="65a8bbb933c1c4d11d662bcf552b38b0767fd8e4" translate="yes" xml:space="preserve">
          <source>If you need to use strings with these sequences, store them in template variables or use a custom template tag or filter to workaround the limitation.</source>
          <target state="translated">如果您需要使用这些序列的字符串,请将它们存储在模板变量中,或者使用自定义模板标签或过滤器来解决这个限制。</target>
        </trans-unit>
        <trans-unit id="2378beb626084b4cc95382cdb283eb570e4777a7" translate="yes" xml:space="preserve">
          <source>If you need to use these decorators, then you should decorate your test methods with &lt;a href=&quot;../async#asgiref.sync.async_to_sync&quot;&gt;&lt;code&gt;async_to_sync()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;inside&lt;/em&gt; of them instead:</source>
          <target state="translated">如果需要使用这些装饰器，则应&lt;em&gt;在&lt;/em&gt;其&lt;em&gt;内部&lt;/em&gt;使用&lt;a href=&quot;../async#asgiref.sync.async_to_sync&quot;&gt; &lt;code&gt;async_to_sync()&lt;/code&gt; &lt;/a&gt;装饰测试方法：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fcc7733e03c7800262e0a10bde85e2867cb41401" translate="yes" xml:space="preserve">
          <source>If you need two annotations with two separate filters you can use the &lt;code&gt;filter&lt;/code&gt; argument with any aggregate. For example, to generate a list of authors with a count of highly rated books:</source>
          <target state="translated">如果您需要两个带有两个单独过滤器的注释，则可以将 &lt;code&gt;filter&lt;/code&gt; 参数与任何聚合一起使用。例如，要生成包含大量高评价书籍的作者列表：</target>
        </trans-unit>
        <trans-unit id="c897784a3f3666e7ffa637c1500a855cd1d427d9" translate="yes" xml:space="preserve">
          <source>If you obtain an error, you will have to recompile SQLite from source. Otherwise, skip this section.</source>
          <target state="translated">如果你获得一个错误,你将不得不从源码重新编译SQLite。否则,请跳过本节。</target>
        </trans-unit>
        <trans-unit id="741f58ec7bbe2e730412e151c54ddb2163fa4a4f" translate="yes" xml:space="preserve">
          <source>If you often use this pattern:</source>
          <target state="translated">如果你经常使用这种模式。</target>
        </trans-unit>
        <trans-unit id="2f212d93748c23a6b8f8df2fb8bdf19695fec4c9" translate="yes" xml:space="preserve">
          <source>If you omit the extensions, Django will search all available fixture types for a matching fixture. For example:</source>
          <target state="translated">如果你省略了扩展,Django会搜索所有可用的夹具类型来寻找匹配的夹具。例如</target>
        </trans-unit>
        <trans-unit id="b7281fcbaa809c600b8793d4f53e33c8473eac8d" translate="yes" xml:space="preserve">
          <source>If you only need a foreign key value, use the foreign key value that is already on the object you&amp;rsquo;ve got, rather than getting the whole related object and taking its primary key. i.e. do:</source>
          <target state="translated">如果只需要一个外键值，请使用已在对象上已存在的外键值，而不要获取整个相关对象并获取其主键。即：</target>
        </trans-unit>
        <trans-unit id="800fadfa713dccf394aba70d45e9d4112ae330ee" translate="yes" xml:space="preserve">
          <source>If you only pass in a single field, you can also pass in the &lt;code&gt;flat&lt;/code&gt; parameter. If &lt;code&gt;True&lt;/code&gt;, this will mean the returned results are single values, rather than one-tuples. An example should make the difference clearer:</source>
          <target state="translated">如果仅传递单个字段，则还可以传递 &lt;code&gt;flat&lt;/code&gt; 参数。如果为 &lt;code&gt;True&lt;/code&gt; ，则意味着返回的结果是单个值，而不是一元组。一个例子应该使区别更加清楚：</target>
        </trans-unit>
        <trans-unit id="21a02b2eee96e24a49f04e13b9eb6b72eba93d67" translate="yes" xml:space="preserve">
          <source>If you only serialize the Restaurant model:</source>
          <target state="translated">如果你只将餐厅模型序列化。</target>
        </trans-unit>
        <trans-unit id="09d4a126b134831de63cd4bb62765a50804cd5f0" translate="yes" xml:space="preserve">
          <source>If you only want a subset of fields to be serialized, you can specify a &lt;code&gt;fields&lt;/code&gt; argument to the serializer:</source>
          <target state="translated">如果只希望序列化字段的子集，则可以为序列化程序指定一个 &lt;code&gt;fields&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="4364377f218dbdb6f693a8ac230e516ce29b7d3f" translate="yes" xml:space="preserve">
          <source>If you only want files of a particular type, you can use the subscript operator to filter out a medium of interest. For example:</source>
          <target state="translated">如果你只想要特定类型的文件,你可以使用下标操作符来筛选出感兴趣的介质。例如</target>
        </trans-unit>
        <trans-unit id="b7761bd9d1203f2151ef4f8ccf146d8e1530f6c1" translate="yes" xml:space="preserve">
          <source>If you only want to pickle the necessary information to recreate the &lt;code&gt;QuerySet&lt;/code&gt; from the database at a later time, pickle the &lt;code&gt;query&lt;/code&gt; attribute of the &lt;code&gt;QuerySet&lt;/code&gt;. You can then recreate the original &lt;code&gt;QuerySet&lt;/code&gt; (without any results loaded) using some code like this:</source>
          <target state="translated">如果只想腌制必要的信息以在以后从数据库重新创建 &lt;code&gt;QuerySet&lt;/code&gt; ，则腌制 &lt;code&gt;QuerySet&lt;/code&gt; 的 &lt;code&gt;query&lt;/code&gt; 属性。然后，您可以使用以下代码重新创建原始 &lt;code&gt;QuerySet&lt;/code&gt; （不加载任何结果）：</target>
        </trans-unit>
        <trans-unit id="57e21af0c1526d4117f7cb3d0a6e6b7c87ae870c" translate="yes" xml:space="preserve">
          <source>If you opt to use this third method and you don&amp;rsquo;t iterate over the fields with a &lt;code&gt;{% for %}&lt;/code&gt; loop, you&amp;rsquo;ll need to render the primary key field. For example, if you were rendering the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt; fields of a model:</source>
          <target state="translated">如果您选择使用第三种方法，并且没有使用 &lt;code&gt;{% for %}&lt;/code&gt; 循环遍历字段，则需要呈现主键字段。例如，如果要渲染模型的 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;age&lt;/code&gt; 字段：</target>
        </trans-unit>
        <trans-unit id="f4b5a3ee8156aeb994b28c82b8a75b4aeb508550" translate="yes" xml:space="preserve">
          <source>If you override &lt;code&gt;MESSAGE_LEVEL&lt;/code&gt; in your settings file and rely on any of the built-in constants, you must import the constants module directly to avoid the potential for circular imports, e.g.:</source>
          <target state="translated">如果您在设置文件中覆盖 &lt;code&gt;MESSAGE_LEVEL&lt;/code&gt; 并依赖于任何内置常量，则必须直接导入常量模块，以避免潜在的循环导入，例如：</target>
        </trans-unit>
        <trans-unit id="7a02510672f31144e2b0955819bddaf9315a3389" translate="yes" xml:space="preserve">
          <source>If you override &lt;code&gt;MESSAGE_TAGS&lt;/code&gt; in your settings file and rely on any of the built-in constants, you must import the &lt;code&gt;constants&lt;/code&gt; module directly to avoid the potential for circular imports, e.g.:</source>
          <target state="translated">如果您在设置文件中覆盖 &lt;code&gt;MESSAGE_TAGS&lt;/code&gt; 并依赖于任何内置常量，则必须直接导入 &lt;code&gt;constants&lt;/code&gt; 模块，以避免潜在的循环导入，例如：</target>
        </trans-unit>
        <trans-unit id="8b48af8079716221e4c0051117d47bfd44a4b260" translate="yes" xml:space="preserve">
          <source>If you override any of these methods, be sure to call the superclass methods since they add the required elements for each feed format.</source>
          <target state="translated">如果你覆盖了这些方法中的任何一个,一定要调用超级类方法,因为它们为每种feed格式添加了所需的元素。</target>
        </trans-unit>
        <trans-unit id="bdf1c5dfe752c4d781780083470ca6f0e40af894" translate="yes" xml:space="preserve">
          <source>If you override the &lt;code&gt;get_queryset()&lt;/code&gt; method and filter out any rows, Django will return incorrect results. Don&amp;rsquo;t do that. A manager that filters results in &lt;code&gt;get_queryset()&lt;/code&gt; is not appropriate for use as a base manager.</source>
          <target state="translated">如果您覆盖 &lt;code&gt;get_queryset()&lt;/code&gt; 方法并过滤出任何行，则Django将返回错误的结果。不要那样做 过滤结果为 &lt;code&gt;get_queryset()&lt;/code&gt; 的管理器不适合用作基本管理器。</target>
        </trans-unit>
        <trans-unit id="efa7906aab8c824e5c384fdd3e0c6fb2aa3af44d" translate="yes" xml:space="preserve">
          <source>If you override these methods on your model, you must call the parent class&amp;rsquo; methods for these signals to be sent.</source>
          <target state="translated">如果在模型上覆盖了这些方法，则必须调用父类的方法来发送这些信号。</target>
        </trans-unit>
        <trans-unit id="139f65047f08d0c31df99bf777b749aac8b06810" translate="yes" xml:space="preserve">
          <source>If you override this method, make sure that the returned inlines are instances of the classes defined in &lt;a href=&quot;#django.contrib.admin.ModelAdmin.inlines&quot;&gt;&lt;code&gt;inlines&lt;/code&gt;&lt;/a&gt; or you might encounter a &amp;ldquo;Bad Request&amp;rdquo; error when adding related objects.</source>
          <target state="translated">如果重写此方法，请确保返回的内联是内&lt;a href=&quot;#django.contrib.admin.ModelAdmin.inlines&quot;&gt; &lt;code&gt;inlines&lt;/code&gt; &lt;/a&gt;定义的类的实例，否则在添加相关对象时可能会遇到&amp;ldquo;错误请求&amp;rdquo;错误。</target>
        </trans-unit>
        <trans-unit id="cd49ed7d9ce6425ca491d84c25250c4b7a60d8ad" translate="yes" xml:space="preserve">
          <source>If you pass &lt;code&gt;in_bulk()&lt;/code&gt; an empty list, you&amp;rsquo;ll get an empty dictionary.</source>
          <target state="translated">如果将 &lt;code&gt;in_bulk()&lt;/code&gt; 传递给一个空列表，则会得到一个空字典。</target>
        </trans-unit>
        <trans-unit id="738c5872b2d80eca3eabca4443294a67bf3373b0" translate="yes" xml:space="preserve">
          <source>If you pass a non-string value to &lt;code&gt;sign&lt;/code&gt;, the value will be forced to string before being signed, and the &lt;code&gt;unsign&lt;/code&gt; result will give you that string value:</source>
          <target state="translated">如果将非字符串值传递给 &lt;code&gt;sign&lt;/code&gt; ，则该值将在被签名前被强制为字符串，并且 &lt;code&gt;unsign&lt;/code&gt; 结果将为您提供该字符串值：</target>
        </trans-unit>
        <trans-unit id="01b4c8798ac8d3c2ee64f1b7afb638cce29f856f" translate="yes" xml:space="preserve">
          <source>If you pass a string to Django that has been encoded in some other format, things will go wrong in interesting ways. Usually, Django will raise a &lt;code&gt;UnicodeDecodeError&lt;/code&gt; at some point.</source>
          <target state="translated">如果您将已以其他格式编码的字符串传递给Django，则可能会以有趣的方式出错。通常，Django 有时会引发 &lt;code&gt;UnicodeDecodeError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f875b90b3600dbb8929f4dd6aae0773f46d238bd" translate="yes" xml:space="preserve">
          <source>If you pass an invalid keyword argument, a lookup function will raise &lt;code&gt;TypeError&lt;/code&gt;.</source>
          <target state="translated">如果传递无效的关键字参数，则查找函数将引发 &lt;code&gt;TypeError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a3d957dd878c573465d3ad6cc8518f32e53e656" translate="yes" xml:space="preserve">
          <source>If you pass in a &lt;code&gt;QuerySet&lt;/code&gt; resulting from &lt;code&gt;values()&lt;/code&gt; or &lt;code&gt;values_list()&lt;/code&gt; as the value to an &lt;code&gt;__in&lt;/code&gt; lookup, you need to ensure you are only extracting one field in the result. For example, this will work (filtering on the blog names):</source>
          <target state="translated">如果将由 &lt;code&gt;values()&lt;/code&gt; 或 &lt;code&gt;values_list()&lt;/code&gt; 产生的 &lt;code&gt;QuerySet&lt;/code&gt; 作为值传递给 &lt;code&gt;__in&lt;/code&gt; 查找，则需要确保仅在结果中提取一个字段。例如，这将起作用（过滤博客名称）：</target>
        </trans-unit>
        <trans-unit id="55a3e9f28be7d4fb14de4ec185385e4a1a973d4f" translate="yes" xml:space="preserve">
          <source>If you pass the &lt;a href=&quot;../ref/django-admin#cmdoption-no-color&quot;&gt;&lt;code&gt;--no-color&lt;/code&gt;&lt;/a&gt; option when running your command, all &lt;code&gt;self.style()&lt;/code&gt; calls will return the original string uncolored.</source>
          <target state="translated">如果在运行命令时传递&lt;a href=&quot;../ref/django-admin#cmdoption-no-color&quot;&gt; &lt;code&gt;--no-color&lt;/code&gt; &lt;/a&gt;选项，则所有 &lt;code&gt;self.style()&lt;/code&gt; 调用都将返回未着色的原始字符串。</target>
        </trans-unit>
        <trans-unit id="b79b1f32de698ec64ae613eae6bcf15970d7b876" translate="yes" xml:space="preserve">
          <source>If you plan on using Django&amp;rsquo;s &lt;a href=&quot;../topics/i18n/timezones&quot;&gt;timezone support&lt;/a&gt;, use &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/mysql-tzinfo-to-sql.html&quot;&gt;mysql_tzinfo_to_sql&lt;/a&gt; to load time zone tables into the MySQL database. This needs to be done just once for your MySQL server, not per database.</source>
          <target state="translated">如果计划使用Django的&lt;a href=&quot;../topics/i18n/timezones&quot;&gt;时区支持&lt;/a&gt;，请使用&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/mysql-tzinfo-to-sql.html&quot;&gt;mysql_tzinfo_to_sql&lt;/a&gt;将时区表加载到MySQL数据库中。只需对您的MySQL服务器执行一次，而不是对每个数据库执行一次。</target>
        </trans-unit>
        <trans-unit id="3d07ba410dfae393dcd5dd3868653a7b65add33c" translate="yes" xml:space="preserve">
          <source>If you plan to remove the old app later, you&amp;rsquo;ll need to set the &lt;code&gt;dependencies&lt;/code&gt; property based on whether or not the old app is installed. Otherwise, you&amp;rsquo;ll have missing dependencies once you uninstall the old app. Similarly, you&amp;rsquo;ll need to catch &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#LookupError&quot;&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;apps.get_model()&lt;/code&gt; call that retrieves models from the old app. This approach allows you to deploy your project anywhere without first installing and then uninstalling the old app.</source>
          <target state="translated">如果计划以后删除旧应用程序，则需要根据是否已安装旧应用程序来设置 &lt;code&gt;dependencies&lt;/code&gt; 属性。否则，一旦卸载旧应用程序，您将缺少依赖项。同样，您需要在 &lt;code&gt;apps.get_model()&lt;/code&gt; 调用中捕获&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#LookupError&quot;&gt; &lt;code&gt;LookupError&lt;/code&gt; &lt;/a&gt;，该调用从旧应用程序检索模型。这种方法允许您将项目部署到任何地方，而无需先安装然后卸载旧应用程序。</target>
        </trans-unit>
        <trans-unit id="9073c8632746695fe881c718b8ef04b35fa192e4" translate="yes" xml:space="preserve">
          <source>If you plan to run Django in a multithreaded environment (e.g. Apache using the default MPM module on any modern operating system), then you &lt;strong&gt;must&lt;/strong&gt; set the &lt;code&gt;threaded&lt;/code&gt; option of your Oracle database configuration to &lt;code&gt;True&lt;/code&gt;:</source>
          <target state="translated">如果计划在多线程环境中运行Django（例如，在任何现代操作系统上使用默认的MPM模块的Apache），则&lt;strong&gt;必须&lt;/strong&gt;将Oracle数据库配置的 &lt;code&gt;threaded&lt;/code&gt; 选项设置为 &lt;code&gt;True&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8d225f0abfbc3c7de48d5bc9786ca2d1091b6fe9" translate="yes" xml:space="preserve">
          <source>If you plan to use Django&amp;rsquo;s &lt;code&gt;manage.py migrate&lt;/code&gt; command to automatically create database tables for your models (after first installing Django and creating a project), you&amp;rsquo;ll need to ensure that Django has permission to create and alter tables in the database you&amp;rsquo;re using; if you plan to manually create the tables, you can grant Django &lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt; and &lt;code&gt;DELETE&lt;/code&gt; permissions. After creating a database user with these permissions, you&amp;rsquo;ll specify the details in your project&amp;rsquo;s settings file, see &lt;a href=&quot;../ref/settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">如果您打算使用Django的 &lt;code&gt;manage.py migrate&lt;/code&gt; 命令自动为模型创建数据库表（在首次安装Django并创建项目之后），则需要确保Django有权在您的数据库中创建和更改表。重新使用如果计划手动创建表，则可以授予Django &lt;code&gt;SELECT&lt;/code&gt; ， &lt;code&gt;INSERT&lt;/code&gt; ， &lt;code&gt;UPDATE&lt;/code&gt; 和 &lt;code&gt;DELETE&lt;/code&gt; 权限。创建具有这些权限的数据库用户后，您将在项目的设置文件中指定详细信息，有关详细信息，请参见&lt;a href=&quot;../ref/settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1cf8ce09ee94ba97497f8c75ae9497949e7ca9e6" translate="yes" xml:space="preserve">
          <source>If you plan to use Django&amp;rsquo;s database API functionality, you&amp;rsquo;ll need to make sure a database server is running. Django supports many different database servers and is officially supported with &lt;a href=&quot;https://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt;, &lt;a href=&quot;https://mariadb.org/&quot;&gt;MariaDB&lt;/a&gt;, &lt;a href=&quot;https://www.mysql.com/&quot;&gt;MySQL&lt;/a&gt;, &lt;a href=&quot;https://www.oracle.com/&quot;&gt;Oracle&lt;/a&gt; and &lt;a href=&quot;https://www.sqlite.org/&quot;&gt;SQLite&lt;/a&gt;.</source>
          <target state="translated">如果您打算使用Django的数据库API功能，则需要确保数据库服务器正在运行。Django支持许多不同的数据库服务器，并且&lt;a href=&quot;https://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt;，&lt;a href=&quot;https://mariadb.org/&quot;&gt;MariaDB&lt;/a&gt;，&lt;a href=&quot;https://www.mysql.com/&quot;&gt;MySQL&lt;/a&gt;，&lt;a href=&quot;https://www.oracle.com/&quot;&gt;Oracle&lt;/a&gt;和&lt;a href=&quot;https://www.sqlite.org/&quot;&gt;SQLite&lt;/a&gt;正式受支持。</target>
        </trans-unit>
        <trans-unit id="f9ffb321598eac539d278bb929456e302d26fb2d" translate="yes" xml:space="preserve">
          <source>If you plan to use PostGIS raster functionality on PostGIS 3+, you should also activate the &lt;code&gt;postgis_raster&lt;/code&gt; extension. You can install the extension using the &lt;a href=&quot;../../postgres/operations#django.contrib.postgres.operations.CreateExtension&quot;&gt;&lt;code&gt;CreateExtension&lt;/code&gt;&lt;/a&gt; migration operation, or directly by running &lt;code&gt;CREATE EXTENSION postgis_raster;&lt;/code&gt;.</source>
          <target state="translated">如果计划在PostGIS 3+上使用PostGIS栅格功能，则还应激活 &lt;code&gt;postgis_raster&lt;/code&gt; 扩展。您可以使用&lt;a href=&quot;../../postgres/operations#django.contrib.postgres.operations.CreateExtension&quot;&gt; &lt;code&gt;CreateExtension&lt;/code&gt; &lt;/a&gt;迁移操作或直接通过运行 &lt;code&gt;CREATE EXTENSION postgis_raster;&lt;/code&gt; 安装扩展。。</target>
        </trans-unit>
        <trans-unit id="2d29104b9899b9d86e33356f84568767e51c25b0" translate="yes" xml:space="preserve">
          <source>If you point the test client at a view that raises an exception and &lt;code&gt;Client.raise_request_exception&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, that exception will be visible in the test case. You can then use a standard &lt;code&gt;try ... except&lt;/code&gt; block or &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaises&quot;&gt;&lt;code&gt;assertRaises()&lt;/code&gt;&lt;/a&gt; to test for exceptions.</source>
          <target state="translated">如果将测试客户端指向引发异常的视图，并且 &lt;code&gt;Client.raise_request_exception&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ，则该异常将在测试用例中可见。然后，您可以使用标准 &lt;code&gt;try ... except&lt;/code&gt; block或&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaises&quot;&gt; &lt;code&gt;assertRaises()&lt;/code&gt; &lt;/a&gt;之外）来测试异常。</target>
        </trans-unit>
        <trans-unit id="9a1ee774d1d6b71e65f51c9761d622d272f3e630" translate="yes" xml:space="preserve">
          <source>If you press &lt;code&gt;Ctrl-C&lt;/code&gt; while the tests are running, the test runner will wait for the currently running test to complete and then exit gracefully. During a graceful exit the test runner will output details of any test failures, report on how many tests were run and how many errors and failures were encountered, and destroy any test databases as usual. Thus pressing &lt;code&gt;Ctrl-C&lt;/code&gt; can be very useful if you forget to pass the &lt;a href=&quot;../../ref/django-admin#cmdoption-test-failfast&quot;&gt;&lt;code&gt;--failfast&lt;/code&gt;&lt;/a&gt; option, notice that some tests are unexpectedly failing and want to get details on the failures without waiting for the full test run to complete.</source>
          <target state="translated">如果在测试运行时按 &lt;code&gt;Ctrl-C&lt;/code&gt; ，则测试运行器将等待当前运行的测试完成，然后正常退出。在正常退出期间，测试运行程序将输出所有测试失败的详细信息，报告已运行了多少测试以及遇到了多少错误和失败，并照常销毁了所有测试数据库。因此，如果您忘记通过&lt;a href=&quot;../../ref/django-admin#cmdoption-test-failfast&quot;&gt; &lt;code&gt;--failfast&lt;/code&gt; &lt;/a&gt;选项，请注意某些测试意外失败并且想要获取有关失败的详细信息而无需等待完整的测试运行，则按 &lt;code&gt;Ctrl-C&lt;/code&gt; 很有用。</target>
        </trans-unit>
        <trans-unit id="9fd3c524d495f19aa19c27cdbbee5399534aacb6" translate="yes" xml:space="preserve">
          <source>If you provide &lt;code&gt;content_type&lt;/code&gt; as &lt;em&gt;application/json&lt;/em&gt;, the &lt;code&gt;data&lt;/code&gt; is serialized using &lt;a href=&quot;https://docs.python.org/3/library/json.html#json.dumps&quot;&gt;&lt;code&gt;json.dumps()&lt;/code&gt;&lt;/a&gt; if it&amp;rsquo;s a dict, list, or tuple. Serialization is performed with &lt;a href=&quot;../serialization#django.core.serializers.json.DjangoJSONEncoder&quot;&gt;&lt;code&gt;DjangoJSONEncoder&lt;/code&gt;&lt;/a&gt; by default, and can be overridden by providing a &lt;code&gt;json_encoder&lt;/code&gt; argument to &lt;a href=&quot;#django.test.Client&quot;&gt;&lt;code&gt;Client&lt;/code&gt;&lt;/a&gt;. This serialization also happens for &lt;a href=&quot;#django.test.Client.put&quot;&gt;&lt;code&gt;put()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.test.Client.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#django.test.Client.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; requests.</source>
          <target state="translated">如果提供 &lt;code&gt;content_type&lt;/code&gt; 作为&lt;em&gt;application / json&lt;/em&gt;，则 &lt;code&gt;data&lt;/code&gt; 是字典，列表或元组时，将使用&lt;a href=&quot;https://docs.python.org/3/library/json.html#json.dumps&quot;&gt; &lt;code&gt;json.dumps()&lt;/code&gt; 进行&lt;/a&gt;序列化。默认情况下，序列化是使用&lt;a href=&quot;../serialization#django.core.serializers.json.DjangoJSONEncoder&quot;&gt; &lt;code&gt;DjangoJSONEncoder&lt;/code&gt; &lt;/a&gt;执行的，可以通过为&lt;a href=&quot;#django.test.Client&quot;&gt; &lt;code&gt;Client&lt;/code&gt; &lt;/a&gt;提供 &lt;code&gt;json_encoder&lt;/code&gt; 参数来覆盖序列化。此序列化也会发生在&lt;a href=&quot;#django.test.Client.put&quot;&gt; &lt;code&gt;put()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#django.test.Client.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.test.Client.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt;请求中。</target>
        </trans-unit>
        <trans-unit id="d70400506fc271afc5226a9156b79bd7b0a3892e" translate="yes" xml:space="preserve">
          <source>If you provide a &lt;code&gt;description&lt;/code&gt; in your &lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt;&lt;code&gt;Feed&lt;/code&gt;&lt;/a&gt; class, Django will &lt;em&gt;not&lt;/em&gt; automatically put that into the &lt;code&gt;subtitle&lt;/code&gt; element, because a subtitle and description are not necessarily the same thing. Instead, you should define a &lt;code&gt;subtitle&lt;/code&gt; attribute.</source>
          <target state="translated">如果您在&lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt; &lt;code&gt;Feed&lt;/code&gt; &lt;/a&gt;类中提供了 &lt;code&gt;description&lt;/code&gt; ，则Django &lt;em&gt;不会&lt;/em&gt;自动将其放入 &lt;code&gt;subtitle&lt;/code&gt; 元素，因为字幕和描述不一定是同一回事。相反，您应该定义 &lt;code&gt;subtitle&lt;/code&gt; 属性。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aa823e0a0041a6947816c68759b373adb5e9f2ff" translate="yes" xml:space="preserve">
          <source>If you provide a URL with both an encoded GET data and a data argument, the data argument will take precedence.</source>
          <target state="translated">如果您提供的URL同时包含编码的GET数据和数据参数,数据参数将优先。</target>
        </trans-unit>
        <trans-unit id="10f0311a7904a5e576592cc2026a0cba559e4f85" translate="yes" xml:space="preserve">
          <source>If you provide an &lt;a href=&quot;applications#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; instance as the sender argument, please ensure that the signal is registered in &lt;a href=&quot;applications#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;ready()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;AppConfig&lt;/code&gt;s are recreated for tests that run with a modified set of &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; (such as when settings are overridden) and such signals should be connected for each new &lt;code&gt;AppConfig&lt;/code&gt; instance.</source>
          <target state="translated">如果您提供&lt;a href=&quot;applications#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt;实例作为sender参数，请确保信号已在&lt;a href=&quot;applications#django.apps.AppConfig.ready&quot;&gt; &lt;code&gt;ready()&lt;/code&gt; 中&lt;/a&gt;注册。将为使用修改后的&lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;集运行的测试（例如，当设置被覆盖时）重新创建 &lt;code&gt;AppConfig&lt;/code&gt; ，并且应该为每个新的 &lt;code&gt;AppConfig&lt;/code&gt; 实例连接此类信号。</target>
        </trans-unit>
        <trans-unit id="b4f73da389b543957cd3a9484131a18f37edca2b" translate="yes" xml:space="preserve">
          <source>If you provide an anonymous user, &lt;a href=&quot;#std:templatetag-get_flatpages&quot;&gt;&lt;code&gt;get_flatpages&lt;/code&gt;&lt;/a&gt; will behave the same as if you hadn&amp;rsquo;t provided a user &amp;ndash; i.e., it will only show you public flatpages.</source>
          <target state="translated">如果提供匿名用户，则&lt;a href=&quot;#std:templatetag-get_flatpages&quot;&gt; &lt;code&gt;get_flatpages&lt;/code&gt; 的&lt;/a&gt;行为与未提供用户的行为相同-即，它将仅向您显示公共平面。</target>
        </trans-unit>
        <trans-unit id="9045948db59d0563c0a89ef13a497ad48bb714a4" translate="yes" xml:space="preserve">
          <source>If you provide any other &lt;code&gt;content_type&lt;/code&gt; (e.g. &lt;em&gt;text/xml&lt;/em&gt; for an XML payload), the contents of &lt;code&gt;data&lt;/code&gt; are sent as-is in the POST request, using &lt;code&gt;content_type&lt;/code&gt; in the HTTP &lt;code&gt;Content-Type&lt;/code&gt; header.</source>
          <target state="translated">如果提供任何其他 &lt;code&gt;content_type&lt;/code&gt; （例如，XML有效负载的&lt;em&gt;text / xml&lt;/em&gt;），则使用HTTP &lt;code&gt;Content-Type&lt;/code&gt; 标头中的 &lt;code&gt;content_type&lt;/code&gt; 在POST请求中按原样发送 &lt;code&gt;data&lt;/code&gt; 内容。</target>
        </trans-unit>
        <trans-unit id="910309a8687236b4eef1cb1fc342a8ae2c903a62" translate="yes" xml:space="preserve">
          <source>If you provide the &lt;code&gt;app_label&lt;/code&gt; argument, &lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; will automatically create the package if it doesn&amp;rsquo;t already exist.</source>
          <target state="translated">如果提供 &lt;code&gt;app_label&lt;/code&gt; 参数，&lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt;将自动创建该软件包（如果尚不存在）。</target>
        </trans-unit>
        <trans-unit id="6a321433ae0fb44c3dba2485b43003a37dcff291" translate="yes" xml:space="preserve">
          <source>If you raise a &lt;code&gt;StopUpload&lt;/code&gt; or a &lt;code&gt;SkipFile&lt;/code&gt; exception, the upload will abort or the file will be completely skipped.</source>
          <target state="translated">如果引发 &lt;code&gt;StopUpload&lt;/code&gt; 或 &lt;code&gt;SkipFile&lt;/code&gt; 异常，则上传将中止，或者文件将被完全跳过。</target>
        </trans-unit>
        <trans-unit id="f5c930b9d9ff449d37bc58a058280baf8e9d25ba" translate="yes" xml:space="preserve">
          <source>If you really need to do the conversion yourself, you must ensure the datetime is converted to the appropriate time zone first. Usually, this will be the current timezone:</source>
          <target state="translated">如果你真的需要自己进行转换,你必须先确保将日期时间转换到合适的时区。通常情况下,这将是当前的时区。</target>
        </trans-unit>
        <trans-unit id="aba032f0055b3ba362cd40902bc9f74174f0f582" translate="yes" xml:space="preserve">
          <source>If you reference &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; directly (for example, by referring to it in a foreign key), your code will not work in projects where the &lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt;&lt;code&gt;AUTH_USER_MODEL&lt;/code&gt;&lt;/a&gt; setting has been changed to a different user model.</source>
          <target state="translated">如果直接引用&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;（例如，通过外键引用它），则您的代码将无法在&lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt; &lt;code&gt;AUTH_USER_MODEL&lt;/code&gt; &lt;/a&gt;设置更改为其他用户模型的项目中使用。</target>
        </trans-unit>
        <trans-unit id="0e1ecb9bcfed717dbcef9591ae9c8802ed73bd90" translate="yes" xml:space="preserve">
          <source>If you render a bound &lt;code&gt;Form&lt;/code&gt; object, the act of rendering will automatically run the form&amp;rsquo;s validation if it hasn&amp;rsquo;t already happened, and the HTML output will include the validation errors as a &lt;code&gt;&amp;lt;ul class=&quot;errorlist&quot;&amp;gt;&lt;/code&gt; near the field. The particular positioning of the error messages depends on the output method you&amp;rsquo;re using:</source>
          <target state="translated">如果渲染绑定的 &lt;code&gt;Form&lt;/code&gt; 对象，则渲染动作将自动运行表单的验证（如果尚未发生），并且HTML输出将在字段附近以 &lt;code&gt;&amp;lt;ul class=&quot;errorlist&quot;&amp;gt;&lt;/code&gt; 的形式包含验证错误。错误消息的具体位置取决于您使用的输出方法：</target>
        </trans-unit>
        <trans-unit id="07459c1428179836772ae027ec5297d2da1c0fb6" translate="yes" xml:space="preserve">
          <source>If you require even more control over inheritance, define your assets using a &lt;a href=&quot;#dynamic-property&quot;&gt;dynamic property&lt;/a&gt;. Dynamic properties give you complete control over which files are inherited, and which are not.</source>
          <target state="translated">如果您需要对继承的更多控制，请使用&lt;a href=&quot;#dynamic-property&quot;&gt;dynamic属性&lt;/a&gt;定义资产。动态属性使您可以完全控制哪些文件是继承的，哪些不是。</target>
        </trans-unit>
        <trans-unit id="6b05712d776517317396db80b42d65e9ba95c552" translate="yes" xml:space="preserve">
          <source>If you require support for a concrete data type other than &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;str&lt;/code&gt;, you can subclass &lt;code&gt;Choices&lt;/code&gt; and the required concrete data type, e.g. &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; for use with &lt;a href=&quot;#django.db.models.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果您需要支持除 &lt;code&gt;int&lt;/code&gt; 或 &lt;code&gt;str&lt;/code&gt; 之外的具体数据类型，则可以将 &lt;code&gt;Choices&lt;/code&gt; 和所需的具体数据类型（例如与&lt;a href=&quot;#django.db.models.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt;一起使用的&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;子类化：</target>
        </trans-unit>
        <trans-unit id="db9d39b35fe6f2b0b25e26ce3e859ec9c161c377" translate="yes" xml:space="preserve">
          <source>If you rotate your secret key, all of the above will be invalidated. Secret keys are not used for passwords of users and key rotation will not affect them.</source>
          <target state="translated">如果你轮换秘钥,以上都将失效。秘钥不用于用户的密码,轮换秘钥不会影响用户的密码。</target>
        </trans-unit>
        <trans-unit id="ce316f0b6ed1ed42439817ae8b4f2b1e4a6893ce" translate="yes" xml:space="preserve">
          <source>If you run this script as a user with normal privileges (recommended), you might not have access to start a port on a low port number. Low port numbers are reserved for the superuser (root).</source>
          <target state="translated">如果您以普通用户的身份运行这个脚本 (推荐),您可能无法在低端口号上启动一个端口。低端口号是为超级用户(root)保留的。</target>
        </trans-unit>
        <trans-unit id="e41cf1bc99b54789424ebdb54c86380a8a4bc54f" translate="yes" xml:space="preserve">
          <source>If you set &lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-7&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt;, access settings values somehow, &lt;em&gt;then&lt;/em&gt; call &lt;code&gt;configure()&lt;/code&gt;, Django will raise a &lt;code&gt;RuntimeError&lt;/code&gt; indicating that settings have already been configured. There is a property for this purpose:</source>
          <target state="translated">如果您设置&lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-7&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt;，以某种方式访问​​设置值，&lt;em&gt;然后&lt;/em&gt;调用 &lt;code&gt;configure()&lt;/code&gt; ，Django将引发 &lt;code&gt;RuntimeError&lt;/code&gt; ,表明设置已被配置。有一个用于此目的的属性：</target>
        </trans-unit>
        <trans-unit id="581d2693ba51ca9c6d74a9c3aec8c1d2ed991658" translate="yes" xml:space="preserve">
          <source>If you set &lt;a href=&quot;#std:setting-LOGGING_CONFIG&quot;&gt;&lt;code&gt;LOGGING_CONFIG&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;None&lt;/code&gt;, the logging configuration process will be skipped.</source>
          <target state="translated">如果将&lt;a href=&quot;#std:setting-LOGGING_CONFIG&quot;&gt; &lt;code&gt;LOGGING_CONFIG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;None&lt;/code&gt; ，则将跳过日志记录配置过程。</target>
        </trans-unit>
        <trans-unit id="6c3c4b3192dde41e8664985f2f99b630a848a1da" translate="yes" xml:space="preserve">
          <source>If you set &lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt;, you also need to properly set the &lt;a href=&quot;../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt;&lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">如果将&lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;False&lt;/code&gt; ，则还需要正确设置&lt;a href=&quot;../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt; &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="912981cf3b9022683052e38d66b9a92981f3bcd3" translate="yes" xml:space="preserve">
          <source>If you set &lt;a href=&quot;../settings#std:setting-APPEND_SLASH&quot;&gt;&lt;code&gt;APPEND_SLASH&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt;, you must remove the slash in the catchall pattern or flatpages without a trailing slash will not be matched.</source>
          <target state="translated">如果将&lt;a href=&quot;../settings#std:setting-APPEND_SLASH&quot;&gt; &lt;code&gt;APPEND_SLASH&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;False&lt;/code&gt; ，则必须删除所有模式中的斜杠，否则没有尾随斜杠的平版将不匹配。</target>
        </trans-unit>
        <trans-unit id="395ad5010523ffc1e4b670f7488f023e63a22e17" translate="yes" xml:space="preserve">
          <source>If you set &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;, access settings values somehow, &lt;em&gt;then&lt;/em&gt; call &lt;code&gt;configure()&lt;/code&gt;, Django will raise a &lt;code&gt;RuntimeError&lt;/code&gt; indicating that settings have already been configured. There is a property for this purpose:</source>
          <target state="translated">如果您设置 &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; ，以某种方式访问​​设置值，&lt;em&gt;然后&lt;/em&gt;调用 &lt;code&gt;configure()&lt;/code&gt; ，Django将引发 &lt;code&gt;RuntimeError&lt;/code&gt; ,表明设置已被配置。有一个用于此目的的属性：</target>
        </trans-unit>
        <trans-unit id="fe70b07e6ecfbabb2180c75d50c0a38a0f922032" translate="yes" xml:space="preserve">
          <source>If you set &lt;code&gt;follow&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt; the client will follow any redirects and a &lt;code&gt;redirect_chain&lt;/code&gt; attribute will be set in the response object containing tuples of the intermediate urls and status codes.</source>
          <target state="translated">如果将 &lt;code&gt;follow&lt;/code&gt; 设置为 &lt;code&gt;True&lt;/code&gt; ,则客户端将遵循任何重定向，并且将在包含中间URL和状态代码的元组的响应对象中设置 &lt;code&gt;redirect_chain&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="3b6d0e5b836e0ffb759b558f1953cb5c40ecbc36" translate="yes" xml:space="preserve">
          <source>If you set &lt;code&gt;secure&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt; the client will emulate an HTTPS request.</source>
          <target state="translated">如果将 &lt;code&gt;secure&lt;/code&gt; 设置为 &lt;code&gt;True&lt;/code&gt; ,则客户端将模拟HTTPS请求。</target>
        </trans-unit>
        <trans-unit id="ed87f4fbcb2623f91b4272494cedf3618bd43220" translate="yes" xml:space="preserve">
          <source>If you set the &lt;a href=&quot;settings#std:setting-SECURE_SSL_REDIRECT&quot;&gt;&lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt;&lt;/a&gt; setting to True, &lt;code&gt;SecurityMiddleware&lt;/code&gt; will permanently (HTTP 301) redirect all HTTP connections to HTTPS.</source>
          <target state="translated">如果将&lt;a href=&quot;settings#std:setting-SECURE_SSL_REDIRECT&quot;&gt; &lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt; &lt;/a&gt;设置设置为True， &lt;code&gt;SecurityMiddleware&lt;/code&gt; 将永久（HTTP 301）将所有HTTP连接重定向到HTTPS。</target>
        </trans-unit>
        <trans-unit id="804dd8b3f2f0998b19444a70dea6c4f275857e45" translate="yes" xml:space="preserve">
          <source>If you specify a &lt;code&gt;max_length&lt;/code&gt; attribute, it will be reflected in the &lt;a href=&quot;../forms/widgets#django.forms.Textarea&quot;&gt;&lt;code&gt;Textarea&lt;/code&gt;&lt;/a&gt; widget of the auto-generated form field. However it is not enforced at the model or database level. Use a &lt;a href=&quot;#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; for that.</source>
          <target state="translated">如果指定 &lt;code&gt;max_length&lt;/code&gt; 属性，它将反映在自动生成的表单字段的&lt;a href=&quot;../forms/widgets#django.forms.Textarea&quot;&gt; &lt;code&gt;Textarea&lt;/code&gt; &lt;/a&gt;小部件中。但是，它不是在模型或数据库级别强制执行的。为此使用&lt;a href=&quot;#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9247f5ac3aa9a42d00715df98ff9b7c3141c9780" translate="yes" xml:space="preserve">
          <source>If you specify a &lt;code&gt;mimetype&lt;/code&gt; of &lt;code&gt;message/rfc822&lt;/code&gt;, it will also accept &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;django.core.mail.EmailMessage&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3/library/email.compat32-message.html#email.message.Message&quot;&gt;&lt;code&gt;email.message.Message&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果指定了 &lt;code&gt;mimetype&lt;/code&gt; 的 &lt;code&gt;message/rfc822&lt;/code&gt; ，它也将接受&lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;django.core.mail.EmailMessage&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3/library/email.compat32-message.html#email.message.Message&quot;&gt; &lt;code&gt;email.message.Message&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4020c7114522e13a4b27d1776830d993a345f52a" translate="yes" xml:space="preserve">
          <source>If you specify a &lt;code&gt;mimetype&lt;/code&gt; of &lt;em&gt;message/rfc822&lt;/em&gt;, it will also accept &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;django.core.mail.EmailMessage&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3/library/email.compat32-message.html#email.message.Message&quot;&gt;&lt;code&gt;email.message.Message&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果指定了 &lt;code&gt;mimetype&lt;/code&gt; 的&lt;em&gt;消息/ RFC822&lt;/em&gt;，它也将接受&lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;django.core.mail.EmailMessage&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3/library/email.compat32-message.html#email.message.Message&quot;&gt; &lt;code&gt;email.message.Message&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="305c89bb0d6f74a15dce564b912bcda21f76247e" translate="yes" xml:space="preserve">
          <source>If you specify a string value or a &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt;, it may contain &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; formatting, which will be replaced by the date/time of the file upload (so that uploaded files don&amp;rsquo;t fill up the given directory). For example:</source>
          <target state="translated">如果指定字符串值或&lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;，则它可能包含&lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt;格式，该格式将替换为文件上传的日期/时间（以使上传的文件不会填满给定的目录）。例如：</target>
        </trans-unit>
        <trans-unit id="614fc3b6599f9800b8c0df59893296044168cf2c" translate="yes" xml:space="preserve">
          <source>If you specify both the &lt;a href=&quot;#django.views.generic.edit.ModelFormMixin.fields&quot;&gt;&lt;code&gt;fields&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.views.generic.edit.FormMixin.form_class&quot;&gt;&lt;code&gt;form_class&lt;/code&gt;&lt;/a&gt; attributes, an &lt;a href=&quot;../exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt;&lt;code&gt;ImproperlyConfigured&lt;/code&gt;&lt;/a&gt; exception will be raised.</source>
          <target state="translated">如果同时指定&lt;a href=&quot;#django.views.generic.edit.ModelFormMixin.fields&quot;&gt; &lt;code&gt;fields&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.views.generic.edit.FormMixin.form_class&quot;&gt; &lt;code&gt;form_class&lt;/code&gt; &lt;/a&gt;属性，则会引发&lt;a href=&quot;../exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt; &lt;code&gt;ImproperlyConfigured&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="58aa7a9ed4ab489b04c05563f7b555c7cbfda0ee" translate="yes" xml:space="preserve">
          <source>If you specify both the &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ModelFormMixin.fields&quot;&gt;&lt;code&gt;fields&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.FormMixin.form_class&quot;&gt;&lt;code&gt;form_class&lt;/code&gt;&lt;/a&gt; attributes, an &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt;&lt;code&gt;ImproperlyConfigured&lt;/code&gt;&lt;/a&gt; exception will be raised.</source>
          <target state="translated">如果同时指定&lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ModelFormMixin.fields&quot;&gt; &lt;code&gt;fields&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.FormMixin.form_class&quot;&gt; &lt;code&gt;form_class&lt;/code&gt; &lt;/a&gt;属性，则会引发&lt;a href=&quot;../../ref/exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt; &lt;code&gt;ImproperlyConfigured&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="e42f6fe4a1eafc9cbe0fe1ed0eb44c26cf3abac5" translate="yes" xml:space="preserve">
          <source>If you try to compile message files with incorrectly flagged strings, you&amp;rsquo;ll get an error message like &lt;code&gt;number of format specifications in 'msgid' and
'msgstr' does not match&lt;/code&gt; or &lt;code&gt;'msgstr' is not a valid Python format string,
unlike 'msgid'&lt;/code&gt;.</source>
          <target state="translated">如果您尝试使用错误标记的字符串来编译消息文件，则会收到一条错误消息，例如 &lt;code&gt;number of format specifications in 'msgid' and 'msgstr' does not match&lt;/code&gt; 或 &lt;code&gt;'msgstr' is not a valid Python format string, unlike 'msgid'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5f573bc4c6fc46c2deb1fdead6cdb73bb482a8e" translate="yes" xml:space="preserve">
          <source>If you try to order by a field that is a relation to another model, Django will use the default ordering on the related model, or order by the related model&amp;rsquo;s primary key if there is no &lt;a href=&quot;options#django.db.models.Options.ordering&quot;&gt;&lt;code&gt;Meta.ordering&lt;/code&gt;&lt;/a&gt; specified. For example, since the &lt;code&gt;Blog&lt;/code&gt; model has no default ordering specified:</source>
          <target state="translated">如果您尝试通过与另一个模型有关系的字段进行排序，则Django将在相关模型上使用默认排序，或者在未指定&lt;a href=&quot;options#django.db.models.Options.ordering&quot;&gt; &lt;code&gt;Meta.ordering&lt;/code&gt; &lt;/a&gt;的情况下，通过相关模型的主键进行排序。例如，由于 &lt;code&gt;Blog&lt;/code&gt; 模型没有指定默认顺序，因此：</target>
        </trans-unit>
        <trans-unit id="4b74e6d17d477f89b500f2530d4cf1bb7e54270d" translate="yes" xml:space="preserve">
          <source>If you try to run any of these parts from a thread where there is a &lt;em&gt;running event loop&lt;/em&gt;, you will get a &lt;a href=&quot;../ref/exceptions#django.core.exceptions.SynchronousOnlyOperation&quot;&gt;&lt;code&gt;SynchronousOnlyOperation&lt;/code&gt;&lt;/a&gt; error. Note that you don&amp;rsquo;t have to be inside an async function directly to have this error occur. If you have called a sync function directly from an async function, without using &lt;a href=&quot;#asgiref.sync.sync_to_async&quot;&gt;&lt;code&gt;sync_to_async()&lt;/code&gt;&lt;/a&gt; or similar, then it can also occur. This is because your code is still running in a thread with an active event loop, even though it may not be declared as async code.</source>
          <target state="translated">如果您尝试从存在&lt;em&gt;运行中事件循环&lt;/em&gt;的线程中运行任何这些部分，则会收到&lt;a href=&quot;../ref/exceptions#django.core.exceptions.SynchronousOnlyOperation&quot;&gt; &lt;code&gt;SynchronousOnlyOperation&lt;/code&gt; &lt;/a&gt;错误。请注意，您不必直接在异步函数内部即可发生此错误。如果您直接从异步函数中调用了同步函数，而没有使用&lt;a href=&quot;#asgiref.sync.sync_to_async&quot;&gt; &lt;code&gt;sync_to_async()&lt;/code&gt; &lt;/a&gt;或类似函数，则它也可能发生。这是因为您的代码即使未声明为异步代码，也仍在具有活动事件循环的线程中运行。</target>
        </trans-unit>
        <trans-unit id="2949a48f95fe7e8506fdc6f5701b10f53659defb" translate="yes" xml:space="preserve">
          <source>If you try to run any of these parts from a thread where there is a &lt;em&gt;running event loop&lt;/em&gt;, you will get a &lt;a href=&quot;../ref/exceptions#django.core.exceptions.SynchronousOnlyOperation&quot;&gt;&lt;code&gt;SynchronousOnlyOperation&lt;/code&gt;&lt;/a&gt; error. Note that you don&amp;rsquo;t have to be inside an async function directly to have this error occur. If you have called a synchronous function directly from an asynchronous function without going through something like &lt;code&gt;sync_to_async&lt;/code&gt; or a threadpool, then it can also occur, as your code is still running in an asynchronous context.</source>
          <target state="translated">如果尝试从存在&lt;em&gt;运行中事件循环&lt;/em&gt;的线程中运行这些部件中的任何一个，则将收到&lt;a href=&quot;../ref/exceptions#django.core.exceptions.SynchronousOnlyOperation&quot;&gt; &lt;code&gt;SynchronousOnlyOperation&lt;/code&gt; &lt;/a&gt;错误。请注意，您不必直接在异步函数内部即可发生此错误。如果您直接从异步函数中调用了同步函数而不经过了诸如 &lt;code&gt;sync_to_async&lt;/code&gt; 或线程池之类的操作，那么它也可能发生，因为您的代码仍在异步上下文中运行。</target>
        </trans-unit>
        <trans-unit id="c6693a4c5d595d8b5d83b35a6ac98c4c846239c9" translate="yes" xml:space="preserve">
          <source>If you use &lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt;&lt;code&gt;django.contrib.staticfiles&lt;/code&gt;&lt;/a&gt; as explained above, &lt;a href=&quot;../../ref/django-admin#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; will do this automatically when &lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;. If you don&amp;rsquo;t have &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; in &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;, you can still manually serve static files using the &lt;a href=&quot;../../ref/views#django.views.static.serve&quot;&gt;&lt;code&gt;django.views.static.serve()&lt;/code&gt;&lt;/a&gt; view.</source>
          <target state="translated">如果如上所述使用&lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt; &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; &lt;/a&gt;，则当&lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; 时，&lt;a href=&quot;../../ref/django-admin#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; &lt;/a&gt;将自动执行此操作。如果你没有 &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; 在&lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;，你仍然可以使用手动静态文件&lt;a href=&quot;../../ref/views#django.views.static.serve&quot;&gt; &lt;code&gt;django.views.static.serve()&lt;/code&gt; &lt;/a&gt;视图。</target>
        </trans-unit>
        <trans-unit id="8418102b1538f4a4f474193f2874d5390e66e014" translate="yes" xml:space="preserve">
          <source>If you use &lt;a href=&quot;builtins#std:templatetag-extends&quot;&gt;&lt;code&gt;{% extends %}&lt;/code&gt;&lt;/a&gt; in a template, it must be the first template tag in that template. Template inheritance won&amp;rsquo;t work, otherwise.</source>
          <target state="translated">如果在模板中使用&lt;a href=&quot;builtins#std:templatetag-extends&quot;&gt; &lt;code&gt;{% extends %}&lt;/code&gt; &lt;/a&gt;，则它必须是该模板中的第一个模板标记。模板继承将不起作用，否则。</target>
        </trans-unit>
        <trans-unit id="3afccef5fe1cf8e14fa9070553ef6dbbc3b09b80" translate="yes" xml:space="preserve">
          <source>If you use &lt;a href=&quot;querysets#django.db.models.query.QuerySet.prefetch_related&quot;&gt;&lt;code&gt;prefetch_related()&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;add()&lt;/code&gt;, &lt;code&gt;remove()&lt;/code&gt;, &lt;code&gt;clear()&lt;/code&gt;, and &lt;code&gt;set()&lt;/code&gt; methods clear the prefetched cache.</source>
          <target state="translated">如果使用&lt;a href=&quot;querysets#django.db.models.query.QuerySet.prefetch_related&quot;&gt; &lt;code&gt;prefetch_related()&lt;/code&gt; &lt;/a&gt;，则 &lt;code&gt;add()&lt;/code&gt; ， &lt;code&gt;remove()&lt;/code&gt; ， &lt;code&gt;clear()&lt;/code&gt; 和 &lt;code&gt;set()&lt;/code&gt; 方法将清除预取的缓存。</target>
        </trans-unit>
        <trans-unit id="f71c7943193c59ecd27d1e4581a08197f0907309" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;CacheMiddleware&lt;/code&gt;, put &lt;code&gt;LocaleMiddleware&lt;/code&gt; after it.</source>
          <target state="translated">如果使用 &lt;code&gt;CacheMiddleware&lt;/code&gt; ，请将 &lt;code&gt;LocaleMiddleware&lt;/code&gt; 放在其后。</target>
        </trans-unit>
        <trans-unit id="f04e933cf73bf9a9662d42e68375fa7d7c6d1dc5" translate="yes" xml:space="preserve">
          <source>If you use a &lt;a href=&quot;../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;encoder&lt;/code&gt; and &lt;code&gt;decoder&lt;/code&gt; from &lt;a href=&quot;../models/fields#django.db.models.JSONField&quot;&gt;&lt;code&gt;JSONField&lt;/code&gt;&lt;/a&gt; will be used.</source>
          <target state="translated">如果您使用&lt;a href=&quot;../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt;中， &lt;code&gt;encoder&lt;/code&gt; 和 &lt;code&gt;decoder&lt;/code&gt; 从&lt;a href=&quot;../models/fields#django.db.models.JSONField&quot;&gt; &lt;code&gt;JSONField&lt;/code&gt; &lt;/a&gt;将被使用。</target>
        </trans-unit>
        <trans-unit id="fc8b56cb887dca8be941443856060957b865139d" translate="yes" xml:space="preserve">
          <source>If you use a &lt;code&gt;values()&lt;/code&gt; clause after an &lt;a href=&quot;#django.db.models.query.QuerySet.extra&quot;&gt;&lt;code&gt;extra()&lt;/code&gt;&lt;/a&gt; call, any fields defined by a &lt;code&gt;select&lt;/code&gt; argument in the &lt;a href=&quot;#django.db.models.query.QuerySet.extra&quot;&gt;&lt;code&gt;extra()&lt;/code&gt;&lt;/a&gt; must be explicitly included in the &lt;code&gt;values()&lt;/code&gt; call. Any &lt;a href=&quot;#django.db.models.query.QuerySet.extra&quot;&gt;&lt;code&gt;extra()&lt;/code&gt;&lt;/a&gt; call made after a &lt;code&gt;values()&lt;/code&gt; call will have its extra selected fields ignored.</source>
          <target state="translated">如果您使用 &lt;code&gt;values()&lt;/code&gt; 的条款后&lt;a href=&quot;#django.db.models.query.QuerySet.extra&quot;&gt; &lt;code&gt;extra()&lt;/code&gt; &lt;/a&gt;调用，通过定义的任何字段 &lt;code&gt;select&lt;/code&gt; 在参数&lt;a href=&quot;#django.db.models.query.QuerySet.extra&quot;&gt; &lt;code&gt;extra()&lt;/code&gt; &lt;/a&gt;必须明确列入 &lt;code&gt;values()&lt;/code&gt; 调用。在 &lt;code&gt;values()&lt;/code&gt; 调用之后进行的任何&lt;a href=&quot;#django.db.models.query.QuerySet.extra&quot;&gt; &lt;code&gt;extra()&lt;/code&gt; &lt;/a&gt;调用都将忽略其额外选择的字段。</target>
        </trans-unit>
        <trans-unit id="5138658165170713fe8921c287483c369dd879d1" translate="yes" xml:space="preserve">
          <source>If you use a variable that doesn&amp;rsquo;t exist, the template system will insert the value of the &lt;code&gt;string_if_invalid&lt;/code&gt; option, which is set to &lt;code&gt;''&lt;/code&gt; (the empty string) by default.</source>
          <target state="translated">如果使用不存在的变量，则模板系统将插入 &lt;code&gt;string_if_invalid&lt;/code&gt; 选项的值，该选项的默认值设置为 &lt;code&gt;''&lt;/code&gt; （空字符串）。</target>
        </trans-unit>
        <trans-unit id="d3110291b387e92d09039d47bcce85bc592e4fda" translate="yes" xml:space="preserve">
          <source>If you use an &lt;code&gt;initial&lt;/code&gt; for displaying a formset, you should pass the same &lt;code&gt;initial&lt;/code&gt; when processing that formset&amp;rsquo;s submission so that the formset can detect which forms were changed by the user. For example, you might have something like: &lt;code&gt;ArticleFormSet(request.POST, initial=[...])&lt;/code&gt;.</source>
          <target state="translated">如果您使用的是 &lt;code&gt;initial&lt;/code&gt; 显示一个formset，你应该通过相同的 &lt;code&gt;initial&lt;/code&gt; 处理该表单集的陈述时，使该formset可以检测其形式是由用户更改。例如，您可能会有类似的内容： &lt;code&gt;ArticleFormSet(request.POST, initial=[...])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ab4496b070493e1cbd88967385539fa01b3ea78" translate="yes" xml:space="preserve">
          <source>If you use any of Django&amp;rsquo;s custom &lt;code&gt;TestCase&lt;/code&gt; classes, the test runner will clear the contents of the test email outbox at the start of each test case.</source>
          <target state="translated">如果您使用Django的任何自定义 &lt;code&gt;TestCase&lt;/code&gt; 类，则测试运行器将在每个测试用例开始时清除测试电子邮件发件箱的内容。</target>
        </trans-unit>
        <trans-unit id="af63582f03bb6e4c9e15c7b92a57d1ba5b4b0680" translate="yes" xml:space="preserve">
          <source>If you use caching middleware, it&amp;rsquo;s important to put each half in the right place within the &lt;a href=&quot;../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting. That&amp;rsquo;s because the cache middleware needs to know which headers by which to vary the cache storage. Middleware always adds something to the &lt;code&gt;Vary&lt;/code&gt; response header when it can.</source>
          <target state="translated">如果使用缓存中间件，则将每一半放在&lt;a href=&quot;../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt;设置中的正确位置很重要。这是因为缓存中间件需要知道通过哪些头来更改缓存存储。中间件总是尽可能向 &lt;code&gt;Vary&lt;/code&gt; 响应标头添加一些内容。</target>
        </trans-unit>
        <trans-unit id="eb3ba9d9638be9dba67498258cd53f1f8d8c441d" translate="yes" xml:space="preserve">
          <source>If you use cookie-based sessions, pay extra care that your secret key is always kept completely secret, for any system which might be remotely accessible.</source>
          <target state="translated">如果你使用基于cookie的会话,要特别注意你的秘钥始终是完全保密的,对于任何可能被远程访问的系统。</target>
        </trans-unit>
        <trans-unit id="ac9946ee9d075e84bfbeea0cd48def7c04248d87" translate="yes" xml:space="preserve">
          <source>If you use custom &lt;code&gt;Manager&lt;/code&gt; objects, take note that the first &lt;code&gt;Manager&lt;/code&gt; Django encounters (in the order in which they&amp;rsquo;re defined in the model) has a special status. Django interprets the first &lt;code&gt;Manager&lt;/code&gt; defined in a class as the &amp;ldquo;default&amp;rdquo; &lt;code&gt;Manager&lt;/code&gt;, and several parts of Django (including &lt;a href=&quot;../../ref/django-admin#django-admin-dumpdata&quot;&gt;&lt;code&gt;dumpdata&lt;/code&gt;&lt;/a&gt;) will use that &lt;code&gt;Manager&lt;/code&gt; exclusively for that model. As a result, it&amp;rsquo;s a good idea to be careful in your choice of default manager in order to avoid a situation where overriding &lt;code&gt;get_queryset()&lt;/code&gt; results in an inability to retrieve objects you&amp;rsquo;d like to work with.</source>
          <target state="translated">如果使用自定义 &lt;code&gt;Manager&lt;/code&gt; 对象，请注意，第一个Django &lt;code&gt;Manager&lt;/code&gt; Django遇到（按在模型中定义的顺序）处于特殊状态。 Django将类中定义的第一个 &lt;code&gt;Manager&lt;/code&gt; 解释为&amp;ldquo;默认&amp;rdquo; &lt;code&gt;Manager&lt;/code&gt; ，并且Django的某些部分（包括&lt;a href=&quot;../../ref/django-admin#django-admin-dumpdata&quot;&gt; &lt;code&gt;dumpdata&lt;/code&gt; &lt;/a&gt;）将对该模型专门使用该 &lt;code&gt;Manager&lt;/code&gt; 。因此，最好谨慎选择默认管理器，以免发生覆盖 &lt;code&gt;get_queryset()&lt;/code&gt; 导致无法检索要使用的对象的情况。</target>
        </trans-unit>
        <trans-unit id="3354dc763efee5cbb2a050e1c410a3261d6d6efb" translate="yes" xml:space="preserve">
          <source>If you use database caching with multiple databases, you&amp;rsquo;ll also need to set up routing instructions for your database cache table. For the purposes of routing, the database cache table appears as a model named &lt;code&gt;CacheEntry&lt;/code&gt;, in an application named &lt;code&gt;django_cache&lt;/code&gt;. This model won&amp;rsquo;t appear in the models cache, but the model details can be used for routing purposes.</source>
          <target state="translated">如果您将数据库缓存与多个数据库一起使用，则还需要为数据库缓存表设置路由说明。为了进行路由，数据库高速缓存表在名为 &lt;code&gt;django_cache&lt;/code&gt; 的应用程序中显示为名为 &lt;code&gt;CacheEntry&lt;/code&gt; 的模型。该模型不会出现在模型缓存中，但是可以将模型详细信息用于路由目的。</target>
        </trans-unit>
        <trans-unit id="17cfa5ced8dcbb7e597664d335ed9ae258277518" translate="yes" xml:space="preserve">
          <source>If you use more than one &lt;code&gt;JavaScriptCatalog&lt;/code&gt; view on a site and some of them define the same strings, the strings in the catalog that was loaded last take precedence.</source>
          <target state="translated">如果您在一个网站上使用多个 &lt;code&gt;JavaScriptCatalog&lt;/code&gt; 视图，并且其中一些定义相同的字符串，则上次加载的目录中的字符串优先。</target>
        </trans-unit>
        <trans-unit id="e46850bb8ec958f8fdf1580dc6739aff53945b19" translate="yes" xml:space="preserve">
          <source>If you use the &lt;code&gt;cached_db&lt;/code&gt; session backend, you also need to follow the configuration instructions for the &lt;a href=&quot;#using-database-backed-sessions&quot;&gt;using database-backed sessions&lt;/a&gt;.</source>
          <target state="translated">如果您使用 &lt;code&gt;cached_db&lt;/code&gt; 会话后端，则还需要遵循配置说明以&lt;a href=&quot;#using-database-backed-sessions&quot;&gt;使用数据库支持的会话&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6cf187a7f4b8a72e3eca21b8c45ef8b3ee2725a2" translate="yes" xml:space="preserve">
          <source>If you use the Bash shell, consider installing the Django bash completion script, which lives in &lt;code&gt;extras/django_bash_completion&lt;/code&gt; in the Django source distribution. It enables tab-completion of &lt;code&gt;django-admin&lt;/code&gt; and &lt;code&gt;manage.py&lt;/code&gt; commands, so you can, for instance&amp;hellip;</source>
          <target state="translated">如果您使用Bash shell，请考虑安装Django bash完成脚本，该脚本位于Django源代码发行版的 &lt;code&gt;extras/django_bash_completion&lt;/code&gt; 中。它启用了 &lt;code&gt;django-admin&lt;/code&gt; 和 &lt;code&gt;manage.py&lt;/code&gt; 命令的制表符完成功能，因此，例如，您可以&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="544a332c4cb22ae2768b4c0f6f7c943861e6344b" translate="yes" xml:space="preserve">
          <source>If you use the MyISAM storage engine please be aware of the fact that you will receive database-generated errors if you try to use the &lt;a href=&quot;../topics/db/transactions#topics-db-transactions-savepoints&quot;&gt;savepoint-related methods of the transactions API&lt;/a&gt;. The reason for this is that detecting the storage engine of a MySQL database/table is an expensive operation so it was decided it isn&amp;rsquo;t worth to dynamically convert these methods in no-op&amp;rsquo;s based in the results of such detection.</source>
          <target state="translated">如果您使用MyISAM存储引擎，请注意以下事实：如果您尝试使用&lt;a href=&quot;../topics/db/transactions#topics-db-transactions-savepoints&quot;&gt;与事务API有关的与保存点相关的方法，&lt;/a&gt;则将收到数据库生成的错误。这样做的原因是，检测MySQL数据库/表的存储引擎是一项昂贵的操作，因此，基于这种检测的结果，决定不将这些方法动态转换为no-op是不值得的。</target>
        </trans-unit>
        <trans-unit id="612e62c7aaac6d3ed93e17cc5eb89853c3216591" translate="yes" xml:space="preserve">
          <source>If you use the default authentication backend, then your model must have a single unique field that can be used for identification purposes. This can be a username, an email address, or any other unique attribute. A non-unique username field is allowed if you use a custom authentication backend that can support it.</source>
          <target state="translated">如果您使用默认的验证后台,那么您的模型必须有一个可用于识别目的的唯一字段。这可以是一个用户名,一个电子邮件地址,或任何其他独特的属性。如果您使用可以支持的自定义认证后端,则允许使用非唯一的用户名字段。</target>
        </trans-unit>
        <trans-unit id="632cae7f626396f49915f6528bfd124915502643" translate="yes" xml:space="preserve">
          <source>If you use this directly in a subclass, &lt;code&gt;objects&lt;/code&gt; will be the default manager if you declare no managers in the base class:</source>
          <target state="translated">如果直接在子类中使用此 &lt;code&gt;objects&lt;/code&gt; 则在基类中未声明任何管理器的情况下，对象将是默认管理器：</target>
        </trans-unit>
        <trans-unit id="0be2ddd3771f7e5301d04d44291e1551fbddd667" translate="yes" xml:space="preserve">
          <source>If you use this example, be sure to change the &lt;code&gt;'filename'&lt;/code&gt; path to a location that&amp;rsquo;s writable by the user that&amp;rsquo;s running the Django application.</source>
          <target state="translated">如果使用此示例，请确保将 &lt;code&gt;'filename'&lt;/code&gt; 路径更改为运行Django应用程序的用户可写的位置。</target>
        </trans-unit>
        <trans-unit id="5390e72ce357a7eabd5449a3955b90282d9e0e6d" translate="yes" xml:space="preserve">
          <source>If you want &lt;em&gt;no&lt;/em&gt; bulk actions available for a given &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt;, set &lt;a href=&quot;index#django.contrib.admin.ModelAdmin.actions&quot;&gt;&lt;code&gt;ModelAdmin.actions&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;None&lt;/code&gt;:</source>
          <target state="translated">如果你想&lt;em&gt;没有&lt;/em&gt;可用于给定批量操作&lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;，设置&lt;a href=&quot;index#django.contrib.admin.ModelAdmin.actions&quot;&gt; &lt;code&gt;ModelAdmin.actions&lt;/code&gt; &lt;/a&gt;到 &lt;code&gt;None&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3aec3757f7c2abfc3d404eaea0295a8443022fe5" translate="yes" xml:space="preserve">
          <source>If you want a form for the &lt;code&gt;Author&lt;/code&gt; model that includes only the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;title&lt;/code&gt; fields, you would specify &lt;code&gt;fields&lt;/code&gt; or &lt;code&gt;exclude&lt;/code&gt; like this:</source>
          <target state="translated">如果您希望 &lt;code&gt;Author&lt;/code&gt; 模型的表单仅包含 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;title&lt;/code&gt; 字段，则可以指定 &lt;code&gt;fields&lt;/code&gt; 或像这样 &lt;code&gt;exclude&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="dac386a15e0c8bb88ff7bb297d68523406916892" translate="yes" xml:space="preserve">
          <source>If you want context data to take priority over context processors, use the following pattern:</source>
          <target state="translated">如果你想让上下文数据优先于上下文处理器,请使用以下模式。</target>
        </trans-unit>
        <trans-unit id="7e20d9f91dd7be41dd2b75340fb5ad46d7aff9dd" translate="yes" xml:space="preserve">
          <source>If you want customized deletion behavior, you can override the &lt;code&gt;delete()&lt;/code&gt; method. See &lt;a href=&quot;../../topics/db/models#overriding-model-methods&quot;&gt;Overriding predefined model methods&lt;/a&gt; for more details.</source>
          <target state="translated">如果要自定义删除行为，可以重写 &lt;code&gt;delete()&lt;/code&gt; 方法。有关更多详细信息，请参见&lt;a href=&quot;../../topics/db/models#overriding-model-methods&quot;&gt;覆盖预定义的模型方法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="93acdd6e4c8eae4615be0fc45ec00696af259471" translate="yes" xml:space="preserve">
          <source>If you want customized saving behavior, you can override this &lt;code&gt;save()&lt;/code&gt; method. See &lt;a href=&quot;../../topics/db/models#overriding-model-methods&quot;&gt;Overriding predefined model methods&lt;/a&gt; for more details.</source>
          <target state="translated">如果要自定义保存行为，则可以覆盖此 &lt;code&gt;save()&lt;/code&gt; 方法。有关更多详细信息，请参见&lt;a href=&quot;../../topics/db/models#overriding-model-methods&quot;&gt;覆盖预定义的模型方法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="be8f02ec9aac915643a3af8cb57319e744527c0c" translate="yes" xml:space="preserve">
          <source>If you want more control over your URLs, you can reference a specific view in your URLconf:</source>
          <target state="translated">如果你想对你的URL有更多的控制,你可以在你的URLconf中引用一个特定的视图。</target>
        </trans-unit>
        <trans-unit id="f457998a8d8d75ab48817a88d807beddf2f50846" translate="yes" xml:space="preserve">
          <source>If you want the protection that HTTPS provides, and have enabled it on your server, there are some additional steps you may need:</source>
          <target state="translated">如果你想要HTTPS提供的保护,并在你的服务器上启用它,你可能需要一些额外的步骤。</target>
        </trans-unit>
        <trans-unit id="a14d621828e626147519d733f8c184b1c0c37ab4" translate="yes" xml:space="preserve">
          <source>If you want to add a check to a model class, the approach is &lt;em&gt;almost&lt;/em&gt; the same: the only difference is that the check is a classmethod, not an instance method:</source>
          <target state="translated">如果要向模型类添加检查，则方法&lt;em&gt;几乎&lt;/em&gt;相同：唯一的区别是检查是一种类方法，而不是实例方法：</target>
        </trans-unit>
        <trans-unit id="56b33aa10e58145097aa338a7bdcf35a9f1eab1d" translate="yes" xml:space="preserve">
          <source>If you want to allow Unicode characters, pass &lt;code&gt;allow_unicode=True&lt;/code&gt;. For example:</source>
          <target state="translated">如果要允许Unicode字符，请传递 &lt;code&gt;allow_unicode=True&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="89e6786d70f17235ea0a07bab1827e495e61aad1" translate="yes" xml:space="preserve">
          <source>If you want to allow editing and creating an &lt;code&gt;Image&lt;/code&gt; instance on the &lt;code&gt;Product&lt;/code&gt;, add/change views you can use &lt;a href=&quot;../contenttypes#django.contrib.contenttypes.admin.GenericTabularInline&quot;&gt;&lt;code&gt;GenericTabularInline&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../contenttypes#django.contrib.contenttypes.admin.GenericStackedInline&quot;&gt;&lt;code&gt;GenericStackedInline&lt;/code&gt;&lt;/a&gt; (both subclasses of &lt;a href=&quot;../contenttypes#django.contrib.contenttypes.admin.GenericInlineModelAdmin&quot;&gt;&lt;code&gt;GenericInlineModelAdmin&lt;/code&gt;&lt;/a&gt;) provided by &lt;a href=&quot;../contenttypes#module-django.contrib.contenttypes.admin&quot;&gt;&lt;code&gt;admin&lt;/code&gt;&lt;/a&gt;. They implement tabular and stacked visual layouts for the forms representing the inline objects, respectively, just like their non-generic counterparts. They behave just like any other inline. In your &lt;code&gt;admin.py&lt;/code&gt; for this example app:</source>
          <target state="translated">如果要允许在 &lt;code&gt;Product&lt;/code&gt; 上编辑和创建 &lt;code&gt;Image&lt;/code&gt; 实例，请添加/更改视图，可以使用&lt;a href=&quot;../contenttypes#module-django.contrib.contenttypes.admin&quot;&gt; &lt;code&gt;admin&lt;/code&gt; &lt;/a&gt;提供的&lt;a href=&quot;../contenttypes#django.contrib.contenttypes.admin.GenericTabularInline&quot;&gt; &lt;code&gt;GenericTabularInline&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../contenttypes#django.contrib.contenttypes.admin.GenericStackedInline&quot;&gt; &lt;code&gt;GenericStackedInline&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;../contenttypes#django.contrib.contenttypes.admin.GenericInlineModelAdmin&quot;&gt; &lt;code&gt;GenericInlineModelAdmin&lt;/code&gt; 的&lt;/a&gt;两个子类）。就像它们的非泛型对应物一样，它们分别为代表内联对象的表单实现表格和堆叠式视觉布局。它们的行为就像其他任何内联函数一样。在此示例应用程序的 &lt;code&gt;admin.py&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="dc86f9ac38476957adf53db6078bb6b2f39a0899" translate="yes" xml:space="preserve">
          <source>If you want to associate additional assets with a form &amp;ndash; for example, CSS for form layout &amp;ndash; add a &lt;code&gt;Media&lt;/code&gt; declaration to the form:</source>
          <target state="translated">如果要将其他资产与表单相关联（例如，用于表单布局的CSS），请在表单中添加 &lt;code&gt;Media&lt;/code&gt; 声明：</target>
        </trans-unit>
        <trans-unit id="ca5663445451e733c438680c0b1cdbdb78de064c" translate="yes" xml:space="preserve">
          <source>If you want to automatically load initial data for an app, create a &lt;a href=&quot;../topics/migrations#data-migrations&quot;&gt;data migration&lt;/a&gt;. Migrations are run when setting up the test database, so the data will be available there, subject to &lt;a href=&quot;../topics/testing/overview#test-case-serialized-rollback&quot;&gt;some limitations&lt;/a&gt;.</source>
          <target state="translated">如果您要自动为应用加载初始数据，请创建&lt;a href=&quot;../topics/migrations#data-migrations&quot;&gt;数据迁移&lt;/a&gt;。设置测试数据库时会运行迁移，因此在&lt;a href=&quot;../topics/testing/overview#test-case-serialized-rollback&quot;&gt;某些限制下&lt;/a&gt;，数据将在那里可用。</target>
        </trans-unit>
        <trans-unit id="7f619ca80296d2ab8fb9d0ccf4cddacae4955198" translate="yes" xml:space="preserve">
          <source>If you want to be really adventurous, you could even mix a &lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt;&lt;code&gt;DetailView&lt;/code&gt;&lt;/a&gt; subclass that is able to return &lt;em&gt;both&lt;/em&gt; HTML and JSON content, depending on some property of the HTTP request, such as a query argument or a HTTP header. Mix in both the &lt;code&gt;JSONResponseMixin&lt;/code&gt; and a &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin&quot;&gt;&lt;code&gt;SingleObjectTemplateResponseMixin&lt;/code&gt;&lt;/a&gt;, and override the implementation of &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.render_to_response&quot;&gt;&lt;code&gt;render_to_response()&lt;/code&gt;&lt;/a&gt; to defer to the appropriate rendering method depending on the type of response that the user requested:</source>
          <target state="translated">如果你想成为真正的冒险，你甚至可以混用&lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt; &lt;code&gt;DetailView&lt;/code&gt; &lt;/a&gt;子类，它能够返回&lt;em&gt;两个&lt;/em&gt; HTML和JSON的内容，根据不同的HTTP请求，的某些属性，如查询参数或HTTP标头。混合使用 &lt;code&gt;JSONResponseMixin&lt;/code&gt; 和&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin&quot;&gt; &lt;code&gt;SingleObjectTemplateResponseMixin&lt;/code&gt; &lt;/a&gt;，并重写&lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.render_to_response&quot;&gt; &lt;code&gt;render_to_response()&lt;/code&gt; &lt;/a&gt;的实现，以根据用户请求的响应类型推迟使用适当的呈现方法：</target>
        </trans-unit>
        <trans-unit id="e48997e946b1d861be1ec919d53b25bf8cf15a1f" translate="yes" xml:space="preserve">
          <source>If you want to call a part of Django that is still synchronous, like the ORM, you will need to wrap it in a &lt;a href=&quot;#asgiref.sync.sync_to_async&quot;&gt;&lt;code&gt;sync_to_async()&lt;/code&gt;&lt;/a&gt; call. For example:</source>
          <target state="translated">如果要调用仍处于同步状态的Django部分（例如ORM），则需要将其包装在&lt;a href=&quot;#asgiref.sync.sync_to_async&quot;&gt; &lt;code&gt;sync_to_async()&lt;/code&gt; &lt;/a&gt;调用中。例如：</target>
        </trans-unit>
        <trans-unit id="b286b7423a58f0cdbf8dc79961083cfa7e97f673" translate="yes" xml:space="preserve">
          <source>If you want to call the group something else, you can set &lt;code&gt;pk_url_kwarg&lt;/code&gt; on the view. More details can be found in the reference for &lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt;&lt;code&gt;DetailView&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">如果您想给组别打电话，可以在视图上设置 &lt;code&gt;pk_url_kwarg&lt;/code&gt; 。有关更多详细信息，请参见&lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt; &lt;code&gt;DetailView&lt;/code&gt; &lt;/a&gt;的参考。</target>
        </trans-unit>
        <trans-unit id="73609264d7cce96ce235888ee071c9ba08110d63" translate="yes" xml:space="preserve">
          <source>If you want to change an unmanaged model (&lt;a href=&quot;../ref/models/options#django.db.models.Options.managed&quot;&gt;&lt;code&gt;managed=False&lt;/code&gt;&lt;/a&gt;) to managed, you must remove &lt;code&gt;managed=False&lt;/code&gt; and generate a migration before making other schema-related changes to the model, since schema changes that appear in the migration that contains the operation to change &lt;code&gt;Meta.managed&lt;/code&gt; may not be applied.</source>
          <target state="translated">如果要将非托管模型（&lt;a href=&quot;../ref/models/options#django.db.models.Options.managed&quot;&gt; &lt;code&gt;managed=False&lt;/code&gt; &lt;/a&gt;）更改为托管模型，则必须删除 &lt;code&gt;managed=False&lt;/code&gt; 并生成迁移，然后再对模型进行其他与架构相关的更改，因为架构更改会出现在包含以下操作的迁移中：更改 &lt;code&gt;Meta.managed&lt;/code&gt; 可能无法应用。</target>
        </trans-unit>
        <trans-unit id="5a36c203fa50ee87df5fef8091b5a765a085602e" translate="yes" xml:space="preserve">
          <source>If you want to change the URL of the polls detail view to something else, perhaps to something like &lt;code&gt;polls/specifics/12/&lt;/code&gt; instead of doing it in the template (or templates) you would change it in &lt;code&gt;polls/urls.py&lt;/code&gt;:</source>
          <target state="translated">如果您想将民意调查详细信息视图的URL更改为其他内容，例如，将其更改为民意 &lt;code&gt;polls/specifics/12/&lt;/code&gt; 而不是在一个或多个模板中进行更改，则可以在 &lt;code&gt;polls/urls.py&lt;/code&gt; 中进行更改：</target>
        </trans-unit>
        <trans-unit id="cd1a5725d6fa059579a40d41f2adb758f0ec7936" translate="yes" xml:space="preserve">
          <source>If you want to change the server&amp;rsquo;s IP, pass it along with the port. For example, to listen on all available public IPs (which is useful if you are running Vagrant or want to show off your work on other computers on the network), use:</source>
          <target state="translated">如果要更改服务器的IP，请将其与端口一起传递。例如，要侦听所有可用的公共IP（如果您正在运行Vagrant或想在网络上的其他计算机上炫耀您的工作，这将很有用），请使用：</target>
        </trans-unit>
        <trans-unit id="7ac7bf138057c02102b254cb4eb4bc5c8cedeaa4" translate="yes" xml:space="preserve">
          <source>If you want to change the server&amp;rsquo;s port, pass it as a command-line argument. For instance, this command starts the server on port 8080:</source>
          <target state="translated">如果要更改服务器的端口，请将其作为命令行参数传递。例如，此命令在端口8080上启动服务器：</target>
        </trans-unit>
        <trans-unit id="5a92e0eac7cf91c4cf108e75a7e4cb1c79be68f3" translate="yes" xml:space="preserve">
          <source>If you want to clear a bunch of keys at once, &lt;code&gt;delete_many()&lt;/code&gt; can take a list of keys to be cleared:</source>
          <target state="translated">如果要一次清除一堆密钥， &lt;code&gt;delete_many()&lt;/code&gt; 可以列出要清除的密钥列表：</target>
        </trans-unit>
        <trans-unit id="1a4bfa95187de8542d04a8bb8ab8cdef55f56bbf" translate="yes" xml:space="preserve">
          <source>If you want to clear the set of deferred fields, pass &lt;code&gt;None&lt;/code&gt; as a parameter to &lt;code&gt;defer()&lt;/code&gt;:</source>
          <target state="translated">如果要清除一组延迟字段，请将 &lt;code&gt;None&lt;/code&gt; 作为参数传递给 &lt;code&gt;defer()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b6383cfa56650e6cabffa9d626bc1f48a0ac3ae1" translate="yes" xml:space="preserve">
          <source>If you want to combine the parts in different ways, or apply other processing to the final key (e.g., taking a hash digest of the key parts), you can provide a custom key function.</source>
          <target state="translated">如果您想以不同的方式组合各部分,或对最终的密钥应用其他处理(例如,对密钥部分进行哈希摘要),您可以提供一个自定义密钥功能。</target>
        </trans-unit>
        <trans-unit id="b365d93078a708fa2af27d965ccfe68bed9e884a" translate="yes" xml:space="preserve">
          <source>If you want to create &lt;a href=&quot;#proxy-models-permissions-topic&quot;&gt;permissions for a proxy model&lt;/a&gt;, pass &lt;code&gt;for_concrete_model=False&lt;/code&gt; to &lt;a href=&quot;../../ref/contrib/contenttypes#django.contrib.contenttypes.models.ContentTypeManager.get_for_model&quot;&gt;&lt;code&gt;ContentTypeManager.get_for_model()&lt;/code&gt;&lt;/a&gt; to get the appropriate &lt;code&gt;ContentType&lt;/code&gt;:</source>
          <target state="translated">如果要&lt;a href=&quot;#proxy-models-permissions-topic&quot;&gt;为代理模型&lt;/a&gt;创建权限， &lt;code&gt;for_concrete_model=False&lt;/code&gt; 传递给&lt;a href=&quot;../../ref/contrib/contenttypes#django.contrib.contenttypes.models.ContentTypeManager.get_for_model&quot;&gt; &lt;code&gt;ContentTypeManager.get_for_model()&lt;/code&gt; &lt;/a&gt;以获得适当的 &lt;code&gt;ContentType&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="baafb11630a741f29de95c236634c1933ad61e35" translate="yes" xml:space="preserve">
          <source>If you want to create a formset that allows you to edit books belonging to a particular author, you could do this:</source>
          <target state="translated">如果你想创建一个允许你编辑属于特定作者的书籍的表单集,你可以这样做。</target>
        </trans-unit>
        <trans-unit id="d22c7f47483da249cee231a92c3ccfc41e9f41cc" translate="yes" xml:space="preserve">
          <source>If you want to customize the default admin site, you can &lt;a href=&quot;#overriding-default-admin-site&quot;&gt;override it&lt;/a&gt;.</source>
          <target state="translated">如果要自定义默认管理网站，则可以&lt;a href=&quot;#overriding-default-admin-site&quot;&gt;覆盖它&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c29543c5a12e486f79959dd0c7c612e7d05d854c" translate="yes" xml:space="preserve">
          <source>If you want to disable sorting for some columns, set &lt;code&gt;sortable_by&lt;/code&gt; to a collection (e.g. &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;tuple&lt;/code&gt;, or &lt;code&gt;set&lt;/code&gt;) of the subset of &lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_display&quot;&gt;&lt;code&gt;list_display&lt;/code&gt;&lt;/a&gt; that you want to be sortable. An empty collection disables sorting for all columns.</source>
          <target state="translated">如果要禁用某些列的 &lt;code&gt;sortable_by&lt;/code&gt; ，请将sortable_by &lt;code&gt;set&lt;/code&gt; 为要排序的&lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_display&quot;&gt; &lt;code&gt;list_display&lt;/code&gt; &lt;/a&gt;子集的集合（例如 &lt;code&gt;list&lt;/code&gt; ， &lt;code&gt;tuple&lt;/code&gt; 或set）。空集合将禁用对所有列的排序。</target>
        </trans-unit>
        <trans-unit id="819a05f247100e1405566f18b1980253c4ad662e" translate="yes" xml:space="preserve">
          <source>If you want to display many-to-many relations using an inline, you can do so by defining an &lt;code&gt;InlineModelAdmin&lt;/code&gt; object for the relationship:</source>
          <target state="translated">如果要使用内联显示多对多关系，可以通过为该关系定义一个 &lt;code&gt;InlineModelAdmin&lt;/code&gt; 对象来实现：</target>
        </trans-unit>
        <trans-unit id="4f2c2b260acd4e58d5f685e485d85b0eafeeb6b4" translate="yes" xml:space="preserve">
          <source>If you want to do any special formatting for either the title or description, &lt;a href=&quot;../templates/language&quot;&gt;Django templates&lt;/a&gt; can be used instead. Their paths can be specified with the &lt;code&gt;title_template&lt;/code&gt; and &lt;code&gt;description_template&lt;/code&gt; attributes on the &lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt;&lt;code&gt;Feed&lt;/code&gt;&lt;/a&gt; class. The templates are rendered for each item and are passed two template context variables:</source>
          <target state="translated">如果要对标题或描述进行特殊格式设置，则可以使用&lt;a href=&quot;../templates/language&quot;&gt;Django模板&lt;/a&gt;。可以使用&lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt; &lt;code&gt;Feed&lt;/code&gt; &lt;/a&gt;类上的 &lt;code&gt;title_template&lt;/code&gt; 和 &lt;code&gt;description_template&lt;/code&gt; 属性指定其路径。为每个项目渲染模板，并传递两个模板上下文变量：</target>
        </trans-unit>
        <trans-unit id="9a2a9d97c3bcdcc33735186ed18274e012b287d6" translate="yes" xml:space="preserve">
          <source>If you want to exclude multiple applications, pass &lt;code&gt;--exclude&lt;/code&gt; more than once:</source>
          <target state="translated">如果要排除多个应用程序，请多次传递 &lt;code&gt;--exclude&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="47dc3f16d887ad06159fa3d81469f66328dc09f5" translate="yes" xml:space="preserve">
          <source>If you want to find a URL in a specific admin instance, provide the name of that instance as a &lt;code&gt;current_app&lt;/code&gt; hint to the reverse call. For example, if you specifically wanted the admin view from the admin instance named &lt;code&gt;custom&lt;/code&gt;, you would need to call:</source>
          <target state="translated">如果要在特定管理实例中查找URL，请将该实例的名称作为反向调用的 &lt;code&gt;current_app&lt;/code&gt; 提示提供。例如，如果您特别希望从名为 &lt;code&gt;custom&lt;/code&gt; 的管理实例中获得admin视图，则需要调用：</target>
        </trans-unit>
        <trans-unit id="bdd8542fd2cea7b2e24bbfa472ae38020dc7bf81" translate="yes" xml:space="preserve">
          <source>If you want to generate more than one aggregate, you add another argument to the &lt;code&gt;aggregate()&lt;/code&gt; clause. So, if we also wanted to know the maximum and minimum price of all books, we would issue the query:</source>
          <target state="translated">如果要生成多个聚合，可以在 &lt;code&gt;aggregate()&lt;/code&gt; 子句中添加另一个参数。因此，如果我们还想知道所有书籍的最高和最低价格，我们将发出查询：</target>
        </trans-unit>
        <trans-unit id="e5ea26ccc56d69b0c9654b4277fee5e12990d99b" translate="yes" xml:space="preserve">
          <source>If you want to get a key&amp;rsquo;s value or set a value if the key isn&amp;rsquo;t in the cache, there is the &lt;code&gt;get_or_set()&lt;/code&gt; method. It takes the same parameters as &lt;code&gt;get()&lt;/code&gt; but the default is set as the new cache value for that key, rather than returned:</source>
          <target state="translated">如果要获取键的值，或者如果键不在缓存中 &lt;code&gt;get_or_set()&lt;/code&gt; 设置值，则可以使用get_or_set（）方法。它采用与 &lt;code&gt;get()&lt;/code&gt; 相同的参数，但默认设置为该键的新缓存值，而不是返回：</target>
        </trans-unit>
        <trans-unit id="e511661d588f548844ad43177d187a8b8e72782e" translate="yes" xml:space="preserve">
          <source>If you want to give the migration(s) a meaningful name instead of a generated one, you can use the &lt;a href=&quot;../ref/django-admin#cmdoption-makemigrations-name&quot;&gt;&lt;code&gt;makemigrations --name&lt;/code&gt;&lt;/a&gt; option:</source>
          <target state="translated">如果要为迁移指定一个有意义的名称而不是生成的名称，则可以使用&lt;a href=&quot;../ref/django-admin#cmdoption-makemigrations-name&quot;&gt; &lt;code&gt;makemigrations --name&lt;/code&gt; &lt;/a&gt;选项：</target>
        </trans-unit>
        <trans-unit id="bb3d67e91b95e1098c276074de20f2c056d12673" translate="yes" xml:space="preserve">
          <source>If you want to include literal percent signs in the query, you have to double them if you are passing parameters.</source>
          <target state="translated">如果你想在查询中包含字面的百分号,如果你传递的是参数,你必须将它们翻倍。</target>
        </trans-unit>
        <trans-unit id="9211860caf6395f0b137a8be9dc6cdd28adf359b" translate="yes" xml:space="preserve">
          <source>If you want to inherit from &lt;code&gt;AbstractBase&lt;/code&gt;, but provide a different default manager, you can provide the default manager on the child class:</source>
          <target state="translated">如果要从 &lt;code&gt;AbstractBase&lt;/code&gt; 继承，但提供其他默认管理器，则可以在子类上提供默认管理器：</target>
        </trans-unit>
        <trans-unit id="3a2a9c4986e8f5e6654175d1d77008d474dcec7c" translate="yes" xml:space="preserve">
          <source>If you want to instead provide custom key validation logic for one of the built-in backends, you can subclass it, override just the &lt;code&gt;validate_key&lt;/code&gt; method, and follow the instructions for &lt;a href=&quot;#using-a-custom-cache-backend&quot;&gt;using a custom cache backend&lt;/a&gt;. For instance, to do this for the &lt;code&gt;locmem&lt;/code&gt; backend, put this code in a module:</source>
          <target state="translated">如果您想为内置后端之一提供自定义密钥验证逻辑，则可以对其进行子类化，仅覆盖 &lt;code&gt;validate_key&lt;/code&gt; 方法，然后按照说明&lt;a href=&quot;#using-a-custom-cache-backend&quot;&gt;使用自定义缓存后端&lt;/a&gt;。例如，要针对 &lt;code&gt;locmem&lt;/code&gt; 后端执行此操作，请将以下代码放在模块中：</target>
        </trans-unit>
        <trans-unit id="6c92f47c8dd63980980d8036fb8b746fc5307c13" translate="yes" xml:space="preserve">
          <source>If you want to let each individual user specify which language they prefer, then you also need to use the &lt;code&gt;LocaleMiddleware&lt;/code&gt;. &lt;code&gt;LocaleMiddleware&lt;/code&gt; enables language selection based on data from the request. It customizes content for each user.</source>
          <target state="translated">如果要让每个用户指定他们喜欢的语言，则还需要使用 &lt;code&gt;LocaleMiddleware&lt;/code&gt; 。 &lt;code&gt;LocaleMiddleware&lt;/code&gt; 可以根据请求中的数据进行语言选择。它为每个用户定制内容。</target>
        </trans-unit>
        <trans-unit id="187ea719ed80062b93104d8f62e4ca6ba48d9ded" translate="yes" xml:space="preserve">
          <source>If you want to lock parents models when using &lt;a href=&quot;../../topics/db/models#multi-table-inheritance&quot;&gt;multi-table inheritance&lt;/a&gt;, you must specify parent link fields (by default &lt;code&gt;&amp;lt;parent_model_name&amp;gt;_ptr&lt;/code&gt;) in the &lt;code&gt;of&lt;/code&gt; argument. For example:</source>
          <target state="translated">如果要在使用&lt;a href=&quot;../../topics/db/models#multi-table-inheritance&quot;&gt;多表继承&lt;/a&gt;时锁定父模型，则必须在 &lt;code&gt;of&lt;/code&gt; 参数中指定父链接字段（默认为 &lt;code&gt;&amp;lt;parent_model_name&amp;gt;_ptr&lt;/code&gt; ）。例如：</target>
        </trans-unit>
        <trans-unit id="1bc0322e1dee230846f920ac1858bed59fef0294" translate="yes" xml:space="preserve">
          <source>If you want to make one widget instance look different from another, you will need to specify additional attributes at the time when the widget object is instantiated and assigned to a form field (and perhaps add some rules to your CSS files).</source>
          <target state="translated">如果您想让一个widget实例看起来与另一个不同,您需要在实例化widget对象并将其分配给表单字段时指定额外的属性(也许还需要在您的CSS文件中添加一些规则)。</target>
        </trans-unit>
        <trans-unit id="358714f5af82b779858f9cc401582af9b516624f" translate="yes" xml:space="preserve">
          <source>If you want to obtain the cache key used for a cached fragment, you can use &lt;code&gt;make_template_fragment_key&lt;/code&gt;. &lt;code&gt;fragment_name&lt;/code&gt; is the same as second argument to the &lt;code&gt;cache&lt;/code&gt; template tag; &lt;code&gt;vary_on&lt;/code&gt; is a list of all additional arguments passed to the tag. This function can be useful for invalidating or overwriting a cached item, for example:</source>
          <target state="translated">如果要获取用于缓存片段的缓存键，则可以使用 &lt;code&gt;make_template_fragment_key&lt;/code&gt; 。 &lt;code&gt;fragment_name&lt;/code&gt; 与 &lt;code&gt;cache&lt;/code&gt; 模板标记的第二个参数相同； &lt;code&gt;vary_on&lt;/code&gt; 是传递给标记的所有其他参数的列表。该功能对于使缓存项无效或覆盖很有用，例如：</target>
        </trans-unit>
        <trans-unit id="ba4ffba3fdbb584b8cac1266ddb0e4fc416423c1" translate="yes" xml:space="preserve">
          <source>If you want to override certain options of the cache backend the storage uses, specify a custom entry in the &lt;a href=&quot;../settings#std:setting-CACHES&quot;&gt;&lt;code&gt;CACHES&lt;/code&gt;&lt;/a&gt; setting named &lt;code&gt;'staticfiles'&lt;/code&gt;. It falls back to using the &lt;code&gt;'default'&lt;/code&gt; cache backend.</source>
          <target state="translated">如果要覆盖存储使用的缓存后端的某些选项，请在&lt;a href=&quot;../settings#std:setting-CACHES&quot;&gt; &lt;code&gt;CACHES&lt;/code&gt; &lt;/a&gt;设置中指定一个名为 &lt;code&gt;'staticfiles'&lt;/code&gt; 的自定义条目。只能使用 &lt;code&gt;'default'&lt;/code&gt; 缓存后端。</target>
        </trans-unit>
        <trans-unit id="08bf32a6e2fd3850e1313d6ddcddcbe5d0693024" translate="yes" xml:space="preserve">
          <source>If you want to pass additional parameters to &lt;code&gt;xgettext&lt;/code&gt;, you need to create a custom &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;makemessages&lt;/code&gt;&lt;/a&gt; command and override its &lt;code&gt;xgettext_options&lt;/code&gt; attribute:</source>
          <target state="translated">如果要将其他参数传递给 &lt;code&gt;xgettext&lt;/code&gt; ，则需要创建一个自定义&lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt; &lt;code&gt;makemessages&lt;/code&gt; &lt;/a&gt;命令并覆盖其 &lt;code&gt;xgettext_options&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="0fcbbd1a64b93e2ce60b3ae36a4546b17d7404e5" translate="yes" xml:space="preserve">
          <source>If you want to preprocess the value just before saving, you can use &lt;a href=&quot;../ref/models/fields#django.db.models.Field.pre_save&quot;&gt;&lt;code&gt;pre_save()&lt;/code&gt;&lt;/a&gt;. For example, Django&amp;rsquo;s &lt;a href=&quot;../ref/models/fields#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt; uses this method to set the attribute correctly in the case of &lt;a href=&quot;../ref/models/fields#django.db.models.DateField.auto_now&quot;&gt;&lt;code&gt;auto_now&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../ref/models/fields#django.db.models.DateField.auto_now_add&quot;&gt;&lt;code&gt;auto_now_add&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果要在保存之前对值进行预处理，则可以使用&lt;a href=&quot;../ref/models/fields#django.db.models.Field.pre_save&quot;&gt; &lt;code&gt;pre_save()&lt;/code&gt; &lt;/a&gt;。例如，在&lt;a href=&quot;../ref/models/fields#django.db.models.DateField.auto_now&quot;&gt; &lt;code&gt;auto_now&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../ref/models/fields#django.db.models.DateField.auto_now_add&quot;&gt; &lt;code&gt;auto_now_add&lt;/code&gt; &lt;/a&gt;的情况下，Django的&lt;a href=&quot;../ref/models/fields#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt;使用此方法正确设置属性。</target>
        </trans-unit>
        <trans-unit id="82aeed39d2f4a0fb067ad666d1bfbc02c9469e46" translate="yes" xml:space="preserve">
          <source>If you want to provide some additional classes in addition to the error and required classes that may be required, you can provide those classes as an argument:</source>
          <target state="translated">如果你想在可能需要的错误和必要的类之外提供一些额外的类,你可以提供这些类作为参数。</target>
        </trans-unit>
        <trans-unit id="d347d884e0e4a232836473d57e45545a254b5f95" translate="yes" xml:space="preserve">
          <source>If you want to put the template overrides in an app called &lt;code&gt;myapp&lt;/code&gt; and the templates to override are named &lt;code&gt;blog/list.html&lt;/code&gt; and &lt;code&gt;blog/post.html&lt;/code&gt;, then your directory structure will look like:</source>
          <target state="translated">如果要将模板替代放置在名为 &lt;code&gt;myapp&lt;/code&gt; 的应用中，并且要覆盖的模板命名为 &lt;code&gt;blog/list.html&lt;/code&gt; 和 &lt;code&gt;blog/post.html&lt;/code&gt; ，则目录结构将如下所示：</target>
        </trans-unit>
        <trans-unit id="8675cd01d369192cb8585e183346b84ac04d8fa3" translate="yes" xml:space="preserve">
          <source>If you want to render templates with customizations from your &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting, such as context processors for example, use the &lt;a href=&quot;#django.forms.renderers.TemplatesSetting&quot;&gt;&lt;code&gt;TemplatesSetting&lt;/code&gt;&lt;/a&gt; renderer.</source>
          <target state="translated">如果要使用&lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;设置中的自定义呈现模板，例如上下文处理器，请使用&lt;a href=&quot;#django.forms.renderers.TemplatesSetting&quot;&gt; &lt;code&gt;TemplatesSetting&lt;/code&gt; &lt;/a&gt;呈现器。</target>
        </trans-unit>
        <trans-unit id="a54cf1350fd260fcc8471b214783924c0962b9d7" translate="yes" xml:space="preserve">
          <source>If you want to render the context only with the variables provided (or even no variables at all), use the &lt;code&gt;only&lt;/code&gt; option. No other variables are available to the included template:</source>
          <target state="translated">如果只想使用提供的变量（甚至根本没有变量）来呈现上下文，请使用 &lt;code&gt;only&lt;/code&gt; 选项。包含的模板没有其他变量可用：</target>
        </trans-unit>
        <trans-unit id="1299f323e280c4314aecc4bf363b73686a188120" translate="yes" xml:space="preserve">
          <source>If you want to replace the upload handlers completely, you can assign a new list:</source>
          <target state="translated">如果你想完全替换上传处理程序,你可以分配一个新的列表。</target>
        </trans-unit>
        <trans-unit id="3b1eb52947855dd8e6837d854ad3dbc97c8dfac6" translate="yes" xml:space="preserve">
          <source>If you want to represent a model with the format &lt;code&gt;app_label.object_name&lt;/code&gt; or &lt;code&gt;app_label.model_name&lt;/code&gt; you can use &lt;code&gt;model._meta.label&lt;/code&gt; or &lt;code&gt;model._meta.label_lower&lt;/code&gt; respectively.</source>
          <target state="translated">如果你想表示，格式为模型 &lt;code&gt;app_label.object_name&lt;/code&gt; 或 &lt;code&gt;app_label.model_name&lt;/code&gt; 可以使用 &lt;code&gt;model._meta.label&lt;/code&gt; 或 &lt;code&gt;model._meta.label_lower&lt;/code&gt; 分别。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
