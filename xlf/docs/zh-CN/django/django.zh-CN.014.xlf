<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="78b8aba7c0c4ae80f67ebea10a50bcbc3da701ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AbsoluteValue&lt;/code&gt; example we discussed previously is a transformation which applies to the left-hand side of the lookup. There may be some cases where you want the transformation to be applied to both the left-hand side and the right-hand side. For instance, if you want to filter a queryset based on the equality of the left and right-hand side insensitively to some SQL function.</source>
          <target state="translated">我们前面讨论的 &lt;code&gt;AbsoluteValue&lt;/code&gt; 示例是一个转换，适用于查找的左侧。在某些情况下，您希望将转换同时应用于左侧和右侧。例如，如果您要基于对某些SQL函数不敏感的左右相等来筛选查询集。</target>
        </trans-unit>
        <trans-unit id="6e779acb105048a1d52426d33fd514405c33678f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Aggregate&lt;/code&gt; API is as follows:</source>
          <target state="translated">该 &lt;code&gt;Aggregate&lt;/code&gt; API如下：</target>
        </trans-unit>
        <trans-unit id="d911c34602cafaa77331e7100053f56b2b0f40ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AuthorDisplay&lt;/code&gt; view is almost the same as &lt;a href=&quot;generic-display#generic-views-extra-work&quot;&gt;when we first introduced AuthorDetail&lt;/a&gt;; we have to write our own &lt;code&gt;get_context_data()&lt;/code&gt; to make the &lt;code&gt;AuthorInterestForm&lt;/code&gt; available to the template. We&amp;rsquo;ll skip the &lt;code&gt;get_object()&lt;/code&gt; override from before for clarity:</source>
          <target state="translated">该 &lt;code&gt;AuthorDisplay&lt;/code&gt; 观点几乎相同，&lt;a href=&quot;generic-display#generic-views-extra-work&quot;&gt;当我们第一次推出AuthorDetail&lt;/a&gt; ; 我们必须编写我们自己的 &lt;code&gt;get_context_data()&lt;/code&gt; ,以使 &lt;code&gt;AuthorInterestForm&lt;/code&gt; 可用于模板。为了清楚起见，我们将跳过之前的 &lt;code&gt;get_object()&lt;/code&gt; 重写：</target>
        </trans-unit>
        <trans-unit id="dc05ce23ac02ec8f3c0899170d3c7fecf9359fb7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Blog&lt;/code&gt; model doesn&amp;rsquo;t define an &lt;code&gt;entry__count&lt;/code&gt; attribute by itself, but by using a keyword argument to specify the aggregate function, you can control the name of the annotation:</source>
          <target state="translated">该 &lt;code&gt;Blog&lt;/code&gt; 的模型没有定义 &lt;code&gt;entry__count&lt;/code&gt; 本身的属性，但是通过使用关键字参数指定的集合函数，你可以控制注释的名称：</target>
        </trans-unit>
        <trans-unit id="f3cdbe994242b60eaae55c0cf7589105a9566e96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COALESCE&lt;/code&gt; SQL function is defined as taking a list of columns or values. It will return the first column or value that isn&amp;rsquo;t &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;COALESCE&lt;/code&gt; SQL函数定义为采用列或值的列表。它将返回第一列或非 &lt;code&gt;NULL&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="66bd41040b7b8090e6c5cbf88439032ba50fc072" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CONCURRENTLY&lt;/code&gt; option is not supported inside a transaction (see &lt;a href=&quot;../../../howto/writing-migrations#non-atomic-migrations&quot;&gt;non-atomic migration&lt;/a&gt;).</source>
          <target state="translated">所述 &lt;code&gt;CONCURRENTLY&lt;/code&gt; 事务内部不支持的选项（参见&lt;a href=&quot;../../../howto/writing-migrations#non-atomic-migrations&quot;&gt;非原子的迁移&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="97d947b75daa40e1f9cce25fc27bd884f56b885c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CREATE TABLE&lt;/code&gt; SQL in this example is formatted using PostgreSQL syntax, but it&amp;rsquo;s worth noting Django uses SQL tailored to the database backend specified in your &lt;a href=&quot;../settings&quot;&gt;settings file&lt;/a&gt;.</source>
          <target state="translated">在此示例中， &lt;code&gt;CREATE TABLE&lt;/code&gt; SQL是使用PostgreSQL语法格式化的，但是值得注意的是Django使用了为您的&lt;a href=&quot;../settings&quot;&gt;settings文件中&lt;/a&gt;指定的数据库后端量身定制的SQL 。</target>
        </trans-unit>
        <trans-unit id="861cc2e48a67150675101c0d023d92a6ee1e0b04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Content-Length&lt;/code&gt; and &lt;code&gt;Content-Type&lt;/code&gt; headers are automatically set when they can be guessed from contents of &lt;code&gt;open_file&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Content-Length&lt;/code&gt; 和 &lt;code&gt;Content-Type&lt;/code&gt; 时，他们可以从内容猜测头被自动设置 &lt;code&gt;open_file&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44d810df6b481c2cea1143a353ea2db01c08e1e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ContentFile&lt;/code&gt; class</source>
          <target state="translated">该 &lt;code&gt;ContentFile&lt;/code&gt; 类</target>
        </trans-unit>
        <trans-unit id="c605f7fa7df751cf52b25056e2b1d3fecdedb68b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ContentFile&lt;/code&gt; class inherits from &lt;a href=&quot;#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;, but unlike &lt;a href=&quot;#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; it operates on string content (bytes also supported), rather than an actual file. For example:</source>
          <target state="translated">该 &lt;code&gt;ContentFile&lt;/code&gt; 从类继承&lt;a href=&quot;#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;，但不像&lt;a href=&quot;#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;它字符串的内容进行操作（字节数也支持），而不是实际的文件。例如：</target>
        </trans-unit>
        <trans-unit id="1b7b55a159b59ffae51b1e8f1dd478676fce1e80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ContentType&lt;/code&gt; model</source>
          <target state="translated">该 &lt;code&gt;ContentType&lt;/code&gt; 的模型</target>
        </trans-unit>
        <trans-unit id="e120c8eb3e5ccb24a47d1db9c9a1301145f2d3ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ContentTypeManager&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;ContentTypeManager&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="43dedfcde8c7c617b506f4acc7f270df0a4e11ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CreateView&lt;/code&gt; page displayed to a &lt;code&gt;GET&lt;/code&gt; request uses a &lt;code&gt;template_name_suffix&lt;/code&gt; of &lt;code&gt;'_form'&lt;/code&gt;. For example, changing this attribute to &lt;code&gt;'_create_form'&lt;/code&gt; for a view creating objects for the example &lt;code&gt;Author&lt;/code&gt; model would cause the default &lt;code&gt;template_name&lt;/code&gt; to be &lt;code&gt;'myapp/author_create_form.html'&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;CreateView&lt;/code&gt; 的显示页面 &lt;code&gt;GET&lt;/code&gt; 请求使用一个 &lt;code&gt;template_name_suffix&lt;/code&gt; 的 &lt;code&gt;'_form'&lt;/code&gt; 。例如，对于为示例 &lt;code&gt;Author&lt;/code&gt; 模型创建对象的视图，将此属性更改为 &lt;code&gt;'_create_form'&lt;/code&gt; 将导致默认 &lt;code&gt;template_name&lt;/code&gt; 为 &lt;code&gt;'myapp/author_create_form.html'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac9e94399203abb8d783b8055f3ff2a76d207c26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; will usually be a big hindrance to testing view functions, due to the need for the CSRF token which must be sent with every POST request. For this reason, Django&amp;rsquo;s HTTP client for tests has been modified to set a flag on requests which relaxes the middleware and the &lt;code&gt;csrf_protect&lt;/code&gt; decorator so that they no longer rejects requests. In every other respect (e.g. sending cookies etc.), they behave the same.</source>
          <target state="translated">由于需要CSRF令牌（必须随每个POST请求一起发送），因此 &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; 通常会成为测试视图功能的一大障碍。因此，已修改Django的HTTP测试客户端，以在请求上设置标志，从而放松中间件和 &lt;code&gt;csrf_protect&lt;/code&gt; 装饰器，使它们不再拒绝请求。在其他所有方面（例如发送cookie等），它们的行为都相同。</target>
        </trans-unit>
        <trans-unit id="de292607cde3e357863df90bae0b1d00bd6d0bc2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CurrentSiteManager&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;CurrentSiteManager&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d1e7b97f38c853c73f8dd7053607f722d4701044" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CurrentSiteManager&lt;/code&gt; is only usable when the &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt;&lt;code&gt;SITE_ID&lt;/code&gt;&lt;/a&gt; setting is defined in your settings.</source>
          <target state="translated">该 &lt;code&gt;CurrentSiteManager&lt;/code&gt; 当仅使用&lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt; &lt;code&gt;SITE_ID&lt;/code&gt; &lt;/a&gt;设置在你的设置中定义。</target>
        </trans-unit>
        <trans-unit id="67ecc5eff51d3c54a5e2b6935d90883f50a83bd8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DeleteView&lt;/code&gt; page displayed to a &lt;code&gt;GET&lt;/code&gt; request uses a &lt;code&gt;template_name_suffix&lt;/code&gt; of &lt;code&gt;'_confirm_delete'&lt;/code&gt;. For example, changing this attribute to &lt;code&gt;'_check_delete'&lt;/code&gt; for a view deleting objects for the example &lt;code&gt;Author&lt;/code&gt; model would cause the default &lt;code&gt;template_name&lt;/code&gt; to be &lt;code&gt;'myapp/author_check_delete.html'&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;DeleteView&lt;/code&gt; 页面显示给 &lt;code&gt;GET&lt;/code&gt; 请求，使用 &lt;code&gt;template_name_suffix&lt;/code&gt; 的 &lt;code&gt;'_confirm_delete'&lt;/code&gt; 。例如，对于删除示例 &lt;code&gt;Author&lt;/code&gt; 模型的对象的视图，将此属性更改为 &lt;code&gt;'_check_delete'&lt;/code&gt; 将导致默认 &lt;code&gt;template_name&lt;/code&gt; 为 &lt;code&gt;'myapp/author_check_delete.html'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c446a58624d2b38d24557e890960fc8e1d3d10d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Driver&lt;/code&gt; class is used internally to wrap an OGR &lt;a href=&quot;#django.contrib.gis.gdal.DataSource&quot;&gt;&lt;code&gt;DataSource&lt;/code&gt;&lt;/a&gt; driver.</source>
          <target state="translated">该 &lt;code&gt;Driver&lt;/code&gt; 类在内部用来包装OGR &lt;a href=&quot;#django.contrib.gis.gdal.DataSource&quot;&gt; &lt;code&gt;DataSource&lt;/code&gt; &lt;/a&gt;的驱动程序。</target>
        </trans-unit>
        <trans-unit id="1b352a6799cbd31f3e63e42e59a34937e0cbcb2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EmailMessage&lt;/code&gt; class</source>
          <target state="translated">该 &lt;code&gt;EmailMessage&lt;/code&gt; 类</target>
        </trans-unit>
        <trans-unit id="07e3714ec68520f6005679923560b7677138f0cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EmptyFieldListFilter&lt;/code&gt; class was added.</source>
          <target state="translated">该 &lt;code&gt;EmptyFieldListFilter&lt;/code&gt; 加入类。</target>
        </trans-unit>
        <trans-unit id="3d1912cfdde1948121ebf770001aac858886f8d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExampleFeed&lt;/code&gt; class below gives full documentation on methods and attributes of &lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt;&lt;code&gt;Feed&lt;/code&gt;&lt;/a&gt; classes.</source>
          <target state="translated">下面的 &lt;code&gt;ExampleFeed&lt;/code&gt; 类提供有关&lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt; &lt;code&gt;Feed&lt;/code&gt; &lt;/a&gt;类的方法和属性的完整文档。</target>
        </trans-unit>
        <trans-unit id="bfbb0df8c1cb8dae833c52ae9de6175fd5608511" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;F()&lt;/code&gt; objects support bitwise operations by &lt;code&gt;.bitand()&lt;/code&gt;, &lt;code&gt;.bitor()&lt;/code&gt;, &lt;code&gt;.bitrightshift()&lt;/code&gt;, and &lt;code&gt;.bitleftshift()&lt;/code&gt;. For example:</source>
          <target state="translated">在 &lt;code&gt;F()&lt;/code&gt; 由对象支持位运算 &lt;code&gt;.bitand()&lt;/code&gt; ， &lt;code&gt;.bitor()&lt;/code&gt; ， &lt;code&gt;.bitrightshift()&lt;/code&gt; ，和 &lt;code&gt;.bitleftshift()&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="c3c4702076dea038c9a7851b540f65cb7a0cafcc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;F()&lt;/code&gt; objects support bitwise operations by &lt;code&gt;.bitand()&lt;/code&gt;, &lt;code&gt;.bitor()&lt;/code&gt;, &lt;code&gt;.bitxor()&lt;/code&gt;, &lt;code&gt;.bitrightshift()&lt;/code&gt;, and &lt;code&gt;.bitleftshift()&lt;/code&gt;. For example:</source>
          <target state="translated">在 &lt;code&gt;F()&lt;/code&gt; 由对象支持位运算 &lt;code&gt;.bitand()&lt;/code&gt; ， &lt;code&gt;.bitor()&lt;/code&gt; ， &lt;code&gt;.bitxor()&lt;/code&gt; ， &lt;code&gt;.bitrightshift()&lt;/code&gt; ,和 &lt;code&gt;.bitleftshift()&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="5e9e0181c0b4d602da85d68ac432240acc634f07" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Field.__init__()&lt;/code&gt; method takes the following parameters:</source>
          <target state="translated">该 &lt;code&gt;Field.__init__()&lt;/code&gt; 方法采用以下参数：</target>
        </trans-unit>
        <trans-unit id="9d7b848927c946c603d946f7ec55765689bb5bc0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FieldDoesNotExist&lt;/code&gt; exception is raised by a model&amp;rsquo;s &lt;code&gt;_meta.get_field()&lt;/code&gt; method when the requested field does not exist on the model or on the model&amp;rsquo;s parents.</source>
          <target state="translated">该 &lt;code&gt;FieldDoesNotExist&lt;/code&gt; 异常是由一个模型的提出 &lt;code&gt;_meta.get_field()&lt;/code&gt; 方法时所要求的字段不会在模型或对模型的父母存在。</target>
        </trans-unit>
        <trans-unit id="8f2fbadf9de9d57c93cc293ac1beb4bbffc74b82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FieldListFilter&lt;/code&gt; API is considered internal and might be changed.</source>
          <target state="translated">该 &lt;code&gt;FieldListFilter&lt;/code&gt; API被认为是内部的，并且可能被改变。</target>
        </trans-unit>
        <trans-unit id="054f12c17df82834714f675523ab2fe6d2f0132a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;File&lt;/code&gt; class</source>
          <target state="translated">该 &lt;code&gt;File&lt;/code&gt; 类</target>
        </trans-unit>
        <trans-unit id="2e7bbd9905bc17f67ecb85d1dc8abed1854ed881" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;File&lt;/code&gt; object</source>
          <target state="translated">该 &lt;code&gt;File&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="b79ca764f8009438bf1c05de4e3852e1cd5ae1c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileSystemStorage.delete()&lt;/code&gt; method will not raise an exception if the given file name does not exist.</source>
          <target state="translated">该 &lt;code&gt;FileSystemStorage.delete()&lt;/code&gt; 如果给定的文件名称不存在方法不会引发异常。</target>
        </trans-unit>
        <trans-unit id="ffbff64a0f0cda949e739761b67fc69f46291292" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileSystemStorage&lt;/code&gt; class</source>
          <target state="translated">该 &lt;code&gt;FileSystemStorage&lt;/code&gt; 类</target>
        </trans-unit>
        <trans-unit id="306a89bf0e13c9d572b8bfc8cf17a92447c33f1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FlatPage&lt;/code&gt; model has an &lt;code&gt;enable_comments&lt;/code&gt; field that isn&amp;rsquo;t used by &lt;code&gt;contrib.flatpages&lt;/code&gt;, but that could be useful for your project or third-party apps. It doesn&amp;rsquo;t appear in the admin interface, but you can add it by registering a custom &lt;code&gt;ModelAdmin&lt;/code&gt; for &lt;code&gt;FlatPage&lt;/code&gt;:</source>
          <target state="translated">该 &lt;code&gt;FlatPage&lt;/code&gt; 模型有一个 &lt;code&gt;enable_comments&lt;/code&gt; 未使用现场 &lt;code&gt;contrib.flatpages&lt;/code&gt; ，但可能是为您的项目或第三方应用程序非常有用。它不会出现在管理界面中，但是您可以通过为 &lt;code&gt;FlatPage&lt;/code&gt; 注册一个自定义 &lt;code&gt;ModelAdmin&lt;/code&gt; 来添加它：</target>
        </trans-unit>
        <trans-unit id="febe870245ad5511a3f4858b0540d28944d20b04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Func&lt;/code&gt; API is as follows:</source>
          <target state="translated">该 &lt;code&gt;Func&lt;/code&gt; API如下：</target>
        </trans-unit>
        <trans-unit id="24a72ed1bf58193aff3180a260d78cc621fc0e48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GeoIP&lt;/code&gt; object does not require any parameters to use the default settings. However, at the very least the &lt;a href=&quot;#std:setting-GEOIP_PATH&quot;&gt;&lt;code&gt;GEOIP_PATH&lt;/code&gt;&lt;/a&gt; setting should be set with the path of the location of your GeoIP datasets. The following initialization keywords may be used to customize any of the defaults.</source>
          <target state="translated">该 &lt;code&gt;GeoIP&lt;/code&gt; 的对象不需要任何参数使用默认设置。但是，至少应使用GeoIP数据集的位置路径来设置&lt;a href=&quot;#std:setting-GEOIP_PATH&quot;&gt; &lt;code&gt;GEOIP_PATH&lt;/code&gt; &lt;/a&gt;设置。以下初始化关键字可用于自定义任何默认值。</target>
        </trans-unit>
        <trans-unit id="1e6414ffb3ba6fded4cbd0a1899d767fcea55d93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Http404&lt;/code&gt; exception</source>
          <target state="translated">该 &lt;code&gt;Http404&lt;/code&gt; 例外</target>
        </trans-unit>
        <trans-unit id="15cda89552d958897dfe6d132bb500672085e573" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageFile&lt;/code&gt; class</source>
          <target state="translated">该 &lt;code&gt;ImageFile&lt;/code&gt; 类</target>
        </trans-unit>
        <trans-unit id="95f8b04f8e2ec015495e351d3569efe2ee601c55" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;InlineModelAdmin&lt;/code&gt; class adds or customizes:</source>
          <target state="translated">该 &lt;code&gt;InlineModelAdmin&lt;/code&gt; 类添加或自定义：</target>
        </trans-unit>
        <trans-unit id="bea7feb931720f672eb4c497f95a2887f664db56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JSONCatalog&lt;/code&gt; view</source>
          <target state="translated">该 &lt;code&gt;JSONCatalog&lt;/code&gt; 视图</target>
        </trans-unit>
        <trans-unit id="8e27874a268965948a0edf09905add1420dd83d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JavaScriptCatalog&lt;/code&gt; view</source>
          <target state="translated">该 &lt;code&gt;JavaScriptCatalog&lt;/code&gt; 视图</target>
        </trans-unit>
        <trans-unit id="4f04585d56697a5d0e0b9995400c63e76b05f667" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LANG&lt;/code&gt; environment variable is responsible for setting the expected encoding on Unix platforms. Consult the documentation for your operating system and application server for the appropriate syntax and location to set this variable.</source>
          <target state="translated">在 &lt;code&gt;LANG&lt;/code&gt; 环境变量是负责制定在Unix平台上的预期编码。有关设置此变量的适当语法和位置，请查阅您的操作系统和应用程序服务器的文档。</target>
        </trans-unit>
        <trans-unit id="285cf5f207a7ef3fbcc78086d3571c83dbb83f3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Library.filter()&lt;/code&gt; method takes two arguments:</source>
          <target state="translated">所述 &lt;code&gt;Library.filter()&lt;/code&gt; 方法需要两个参数：</target>
        </trans-unit>
        <trans-unit id="cabe8d4c021337d761f9d3b91be35537f6938137" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LogEntry&lt;/code&gt; class tracks additions, changes, and deletions of objects done through the admin interface.</source>
          <target state="translated">该 &lt;code&gt;LogEntry&lt;/code&gt; 类曲目追加，变更和对象删除通过管理界面来完成。</target>
        </trans-unit>
        <trans-unit id="9dcfcc7809e21efd896fa27c469328cf7acd7806" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LoginRequired&lt;/code&gt; mixin</source>
          <target state="translated">该 &lt;code&gt;LoginRequired&lt;/code&gt; 混入</target>
        </trans-unit>
        <trans-unit id="c178f34bc0712ff7919ec4e4381fc5d4e1351174" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Manager&lt;/code&gt; instance created by &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.as_manager&quot;&gt;&lt;code&gt;QuerySet.as_manager()&lt;/code&gt;&lt;/a&gt; will be virtually identical to the &lt;code&gt;PersonManager&lt;/code&gt; from the previous example.</source>
          <target state="translated">&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.as_manager&quot;&gt; &lt;code&gt;QuerySet.as_manager()&lt;/code&gt; &lt;/a&gt;创建的 &lt;code&gt;Manager&lt;/code&gt; 实例实际上与前面示例中的 &lt;code&gt;PersonManager&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="a061a7cbda401e1c2998d04aa4da33cd95b74423" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Message&lt;/code&gt; class</source>
          <target state="translated">该 &lt;code&gt;Message&lt;/code&gt; 类</target>
        </trans-unit>
        <trans-unit id="aeafa73f42a5c6cffacbc1c1eced4dde098973fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ModelAdmin&lt;/code&gt; class is the representation of a model in the admin interface. Usually, these are stored in a file named &lt;code&gt;admin.py&lt;/code&gt; in your application. Let&amp;rsquo;s take a look at an example of the &lt;code&gt;ModelAdmin&lt;/code&gt;:</source>
          <target state="translated">该 &lt;code&gt;ModelAdmin&lt;/code&gt; 类是在管理界面模型的表示。通常，这些文件存储在应用程序中名为 &lt;code&gt;admin.py&lt;/code&gt; 的文件中。让我们看一下 &lt;code&gt;ModelAdmin&lt;/code&gt; 的示例：</target>
        </trans-unit>
        <trans-unit id="23c9ded338b366b981096905686705ca916c572c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ModelAdmin&lt;/code&gt; is very flexible. It has several options for dealing with customizing the interface. All options are defined on the &lt;code&gt;ModelAdmin&lt;/code&gt; subclass:</source>
          <target state="translated">该 &lt;code&gt;ModelAdmin&lt;/code&gt; 是非常灵活的。它具有几个用于定制界面的选项。所有选项都在 &lt;code&gt;ModelAdmin&lt;/code&gt; 子类上定义：</target>
        </trans-unit>
        <trans-unit id="c5dd73c8ec6250cee9eca5fba0b2e0e9caba77a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ModelForm.clean()&lt;/code&gt; method sets a flag that makes the &lt;a href=&quot;../../ref/models/instances#validating-objects&quot;&gt;model validation&lt;/a&gt; step validate the uniqueness of model fields that are marked as &lt;code&gt;unique&lt;/code&gt;, &lt;code&gt;unique_together&lt;/code&gt; or &lt;code&gt;unique_for_date|month|year&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;ModelForm.clean()&lt;/code&gt; 方法设置一个标志，使&lt;a href=&quot;../../ref/models/instances#validating-objects&quot;&gt;模型验证&lt;/a&gt;步骤验证模型的字段标记为唯一性 &lt;code&gt;unique&lt;/code&gt; ， &lt;code&gt;unique_together&lt;/code&gt; 或 &lt;code&gt;unique_for_date|month|year&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59622ba220fd806b25ca51df7f3561bd0875987e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ModelState&lt;/code&gt; object has two attributes: &lt;code&gt;adding&lt;/code&gt;, a flag which is &lt;code&gt;True&lt;/code&gt; if the model has not been saved to the database yet, and &lt;code&gt;db&lt;/code&gt;, a string referring to the database alias the instance was loaded from or saved to.</source>
          <target state="translated">该 &lt;code&gt;ModelState&lt;/code&gt; 中的对象有两个属性： &lt;code&gt;adding&lt;/code&gt; ，一个标志，它是 &lt;code&gt;True&lt;/code&gt; ，如果模型尚未保存到数据库着呢， &lt;code&gt;db&lt;/code&gt; ，一个字符串指的是例如从加载或保存到数据库别名。</target>
        </trans-unit>
        <trans-unit id="fd4b7158ac1530a7d04e4fa10fa06ce0fdc5afb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MyPerson&lt;/code&gt; class operates on the same database table as its parent &lt;code&gt;Person&lt;/code&gt; class. In particular, any new instances of &lt;code&gt;Person&lt;/code&gt; will also be accessible through &lt;code&gt;MyPerson&lt;/code&gt;, and vice-versa:</source>
          <target state="translated">该 &lt;code&gt;MyPerson&lt;/code&gt; 类在同一个数据库表和它的父工作 &lt;code&gt;Person&lt;/code&gt; 类。特别是，也可以通过 &lt;code&gt;MyPerson&lt;/code&gt; 访问 &lt;code&gt;Person&lt;/code&gt; 的任何新实例，反之亦然：</target>
        </trans-unit>
        <trans-unit id="b67a192312e68e9e91286de6c8d0e4786a94f427" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PUT&lt;/code&gt; action is also handled and passes all parameters through to &lt;a href=&quot;#django.views.generic.edit.ProcessFormView.post&quot;&gt;&lt;code&gt;post()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;PUT&lt;/code&gt; 动作也通过处理和传递所有的参数&lt;a href=&quot;#django.views.generic.edit.ProcessFormView.post&quot;&gt; &lt;code&gt;post()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="666a8ee59e8634562737cf79e7bc6a0a23331d2b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Paginator&lt;/code&gt; class</source>
          <target state="translated">该 &lt;code&gt;Paginator&lt;/code&gt; 类</target>
        </trans-unit>
        <trans-unit id="8018100cec4f6c644b38502894290c3c27b8ff98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PermissionRequiredMixin&lt;/code&gt; mixin</source>
          <target state="translated">该 &lt;code&gt;PermissionRequiredMixin&lt;/code&gt; 混入</target>
        </trans-unit>
        <trans-unit id="b799d6249c516fdabc4073a9921582597917fd4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Person&lt;/code&gt; objects returned by this query will be deferred model instances (see &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.defer&quot;&gt;&lt;code&gt;defer()&lt;/code&gt;&lt;/a&gt;). This means that the fields that are omitted from the query will be loaded on demand. For example:</source>
          <target state="translated">该查询返回的 &lt;code&gt;Person&lt;/code&gt; 对象将是延迟的模型实例（请参见&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.defer&quot;&gt; &lt;code&gt;defer()&lt;/code&gt; &lt;/a&gt;）。这意味着查询中省略的字段将按需加载。例如：</target>
        </trans-unit>
        <trans-unit id="cafa6e51de54db1e1e0585166954505694b562e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Prefetch()&lt;/code&gt; object can be used to control the operation of &lt;a href=&quot;#django.db.models.query.QuerySet.prefetch_related&quot;&gt;&lt;code&gt;prefetch_related()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">的 &lt;code&gt;Prefetch()&lt;/code&gt; 对象可以被用来控制其操作&lt;a href=&quot;#django.db.models.query.QuerySet.prefetch_related&quot;&gt; &lt;code&gt;prefetch_related()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="edefc338306ee3efcd160fd136a3325a4913ead6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;QueryDict&lt;/code&gt;s at &lt;code&gt;request.POST&lt;/code&gt; and &lt;code&gt;request.GET&lt;/code&gt; will be immutable when accessed in a normal request/response cycle. To get a mutable version you need to use &lt;a href=&quot;#django.http.QueryDict.copy&quot;&gt;&lt;code&gt;QueryDict.copy()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在正常请求/响应周期中访问时， &lt;code&gt;request.POST&lt;/code&gt; 和 &lt;code&gt;request.GET&lt;/code&gt; 处的 &lt;code&gt;QueryDict&lt;/code&gt; 将是不可变的。要获得可变版本，您需要使用&lt;a href=&quot;#django.http.QueryDict.copy&quot;&gt; &lt;code&gt;QueryDict.copy()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d8a70643cc158234954d43aa26a9590d3ebaed4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;QuerySet&lt;/code&gt; class has two public attributes you can use for introspection:</source>
          <target state="translated">该 &lt;code&gt;QuerySet&lt;/code&gt; 类有可以使用内省两个公共属性：</target>
        </trans-unit>
        <trans-unit id="b575665a47ba0362c547db861ead9c76ba3ff3d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoteUserMiddleware&lt;/code&gt; authentication middleware assumes that the HTTP request header &lt;code&gt;REMOTE_USER&lt;/code&gt; is present with all authenticated requests. That might be expected and practical when Basic HTTP Auth with &lt;code&gt;htpasswd&lt;/code&gt; or similar mechanisms are used, but with Negotiate (GSSAPI/Kerberos) or other resource intensive authentication methods, the authentication in the front-end HTTP server is usually only set up for one or a few login URLs, and after successful authentication, the application is supposed to maintain the authenticated session itself.</source>
          <target state="translated">所述 &lt;code&gt;RemoteUserMiddleware&lt;/code&gt; 认证中间件假定HTTP请求头 &lt;code&gt;REMOTE_USER&lt;/code&gt; 存在与所有已验证的请求。当使用具有 &lt;code&gt;htpasswd&lt;/code&gt; 或类似机制的基本HTTP 身份验证，但是使用协商（GSSAPI / Kerberos）或其他资源密集型身份验证方法时，通常仅针对以下一种情况设置前端HTTP服务器中的身份验证：几个登录URL，并在成功通过身份验证后，应该由应用程序维护已身份验证的会话本身。</target>
        </trans-unit>
        <trans-unit id="8b542265b1983b33fadc5e6f04eb4951d3d7e7b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionStore&lt;/code&gt; object</source>
          <target state="translated">该 &lt;code&gt;SessionStore&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="48cf066edc359a135c3a713b1dfdba853aa404f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Storage&lt;/code&gt; class</source>
          <target state="translated">该 &lt;code&gt;Storage&lt;/code&gt; 类</target>
        </trans-unit>
        <trans-unit id="ed56488a4cb844d37f694c6eea5fbdd95577da59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Student&lt;/code&gt; model will have three fields: &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;age&lt;/code&gt; and &lt;code&gt;home_group&lt;/code&gt;. The &lt;code&gt;CommonInfo&lt;/code&gt; model cannot be used as a normal Django model, since it is an abstract base class. It does not generate a database table or have a manager, and cannot be instantiated or saved directly.</source>
          <target state="translated">该 &lt;code&gt;Student&lt;/code&gt; 车型将拥有三个字段： &lt;code&gt;name&lt;/code&gt; ， &lt;code&gt;age&lt;/code&gt; 和 &lt;code&gt;home_group&lt;/code&gt; 。该 &lt;code&gt;CommonInfo&lt;/code&gt; 模型不能被用作一个普通的Django模型，因为它是一个抽象基类。它不生成数据库表或没有管理器，并且不能实例化或直接保存。</target>
        </trans-unit>
        <trans-unit id="da96ff8aa6e3551b382f94119bd8fa3340fd2aeb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Template&lt;/code&gt; obtained in the previous step has a &lt;a href=&quot;../../topics/templates#django.template.backends.base.Template.render&quot;&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/a&gt; method which marshals a context and possibly a request into a &lt;a href=&quot;#django.template.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; and delegates the rendering to the underlying &lt;a href=&quot;#django.template.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在上一步中获得的 &lt;code&gt;Template&lt;/code&gt; 具有&lt;a href=&quot;../../topics/templates#django.template.backends.base.Template.render&quot;&gt; &lt;code&gt;render()&lt;/code&gt; &lt;/a&gt;方法，该方法将上下文和可能的请求编组到&lt;a href=&quot;#django.template.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; 中&lt;/a&gt;，并将渲染委托给基础&lt;a href=&quot;#django.template.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7e27128238af2d5f6a740580b07db00d262b4fba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TemplateSyntaxError&lt;/code&gt; exceptions use the &lt;code&gt;tag_name&lt;/code&gt; variable. Don&amp;rsquo;t hard-code the tag&amp;rsquo;s name in your error messages, because that couples the tag&amp;rsquo;s name to your function. &lt;code&gt;token.contents.split()[0]&lt;/code&gt; will &amp;lsquo;&amp;rsquo;always&amp;rsquo;&amp;rsquo; be the name of your tag &amp;ndash; even when the tag has no arguments.</source>
          <target state="translated">该 &lt;code&gt;TemplateSyntaxError&lt;/code&gt; 例外使用 &lt;code&gt;tag_name&lt;/code&gt; 变量。不要在错误消息中对标签名称进行硬编码，因为这样会使标签名称与您的函数耦合。 &lt;code&gt;token.contents.split()[0]&lt;/code&gt; 将&amp;ldquo;始终&amp;rdquo;作为标签的名称，即使标签没有参数也是如此。</target>
        </trans-unit>
        <trans-unit id="c091954b717320c11090e2070265b925d1a2a9ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextChoices&lt;/code&gt;, &lt;code&gt;IntegerChoices&lt;/code&gt;, and &lt;code&gt;Choices&lt;/code&gt; classes were added.</source>
          <target state="translated">该 &lt;code&gt;TextChoices&lt;/code&gt; ， &lt;code&gt;IntegerChoices&lt;/code&gt; ，并 &lt;code&gt;Choices&lt;/code&gt; 添加类。</target>
        </trans-unit>
        <trans-unit id="14288aba89c33872a740c10d4a391f80f0bf802d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UNION&lt;/code&gt; operator selects only distinct values by default. To allow duplicate values, use the &lt;code&gt;all=True&lt;/code&gt; argument.</source>
          <target state="translated">默认情况下， &lt;code&gt;UNION&lt;/code&gt; 运算符仅选择不同的值。要允许重复值，请使用 &lt;code&gt;all=True&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="155d1808963ceed66609cb3c1b8fd61fed485e41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UpdateView&lt;/code&gt; page displayed to a &lt;code&gt;GET&lt;/code&gt; request uses a &lt;code&gt;template_name_suffix&lt;/code&gt; of &lt;code&gt;'_form'&lt;/code&gt;. For example, changing this attribute to &lt;code&gt;'_update_form'&lt;/code&gt; for a view updating objects for the example &lt;code&gt;Author&lt;/code&gt; model would cause the default &lt;code&gt;template_name&lt;/code&gt; to be &lt;code&gt;'myapp/author_update_form.html'&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;UpdateView&lt;/code&gt; 中显示的页面 &lt;code&gt;GET&lt;/code&gt; 请求使用一个 &lt;code&gt;template_name_suffix&lt;/code&gt; 的 &lt;code&gt;'_form'&lt;/code&gt; 。例如，将视图的属性更改为 &lt;code&gt;'_update_form'&lt;/code&gt; 以便更新示例 &lt;code&gt;Author&lt;/code&gt; 模型的对象，将导致默认 &lt;code&gt;template_name&lt;/code&gt; 为 &lt;code&gt;'myapp/author_update_form.html'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d308fa62178257f91629efa203f542cd07374b65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UserAdmin&lt;/code&gt; provides a named URL:</source>
          <target state="translated">该 &lt;code&gt;UserAdmin&lt;/code&gt; 提供了一个名为网址：</target>
        </trans-unit>
        <trans-unit id="53062c3a9371e633ac3ae69a192a4f0a96f3f759" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ValidationError&lt;/code&gt; raised during model validation when the constraint is violated has the &lt;code&gt;unique_together&lt;/code&gt; error code.</source>
          <target state="translated">在模型验证期间违反约束时引发的 &lt;code&gt;ValidationError&lt;/code&gt; 具有 &lt;code&gt;unique_together&lt;/code&gt; 错误代码。</target>
        </trans-unit>
        <trans-unit id="f8f0c00d4ddb47408f98b0f5375559ae517828ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Vary&lt;/code&gt; header defines which request headers a cache mechanism should take into account when building its cache key.</source>
          <target state="translated">所述 &lt;code&gt;Vary&lt;/code&gt; 的头部定义请求头建立其缓存键时的高速缓存机制应考虑到。</target>
        </trans-unit>
        <trans-unit id="a296183e71b88db6f8d0f224705c084727691887" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Vary&lt;/code&gt; header defines which request headers a cache mechanism should take into account when building its cache key. For example, if the contents of a Web page depend on a user&amp;rsquo;s language preference, the page is said to &amp;ldquo;vary on language.&amp;rdquo;</source>
          <target state="translated">所述 &lt;code&gt;Vary&lt;/code&gt; 的头部定义请求头建立其缓存键时的高速缓存机制应考虑到。例如，如果网页的内容取决于用户的语言偏好，则该页面被称为&amp;ldquo;随语言而变化&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="4717077b7fad61b698d3696fa998b3983f06c8ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WSGIAuthUserScript&lt;/code&gt; directive tells mod_wsgi to execute the &lt;code&gt;check_password&lt;/code&gt; function in specified wsgi script, passing the user name and password that it receives from the prompt. In this example, the &lt;code&gt;WSGIAuthUserScript&lt;/code&gt; is the same as the &lt;code&gt;WSGIScriptAlias&lt;/code&gt; that defines your application &lt;a href=&quot;index&quot;&gt;that is created by django-admin startproject&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;WSGIAuthUserScript&lt;/code&gt; 指令告诉mod_wsgi的执行 &lt;code&gt;check_password&lt;/code&gt; 在指定的WSGI脚本函数，将用户名和它从提示接收密码。在此示例中， &lt;code&gt;WSGIAuthUserScript&lt;/code&gt; 与WSGIScriptAlias相同， &lt;code&gt;WSGIScriptAlias&lt;/code&gt; 定义&lt;a href=&quot;index&quot;&gt;了由django-admin startproject创建的&lt;/a&gt;应用程序。</target>
        </trans-unit>
        <trans-unit id="f7d83ceb03961e0133df4bfeaa95be6f6ba88db6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WSGIPythonPath&lt;/code&gt; line ensures that your project package is available for import on the Python path; in other words, that &lt;code&gt;import mysite&lt;/code&gt; works.</source>
          <target state="translated">该 &lt;code&gt;WSGIPythonPath&lt;/code&gt; 线确保您的项目包可用于Python路径上的进口; 换句话说， &lt;code&gt;import mysite&lt;/code&gt; 作品。</target>
        </trans-unit>
        <trans-unit id="25533319195395dc78eabeafda0877205e33873c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WSGIRequest&lt;/code&gt; instance generated by the test handler that generated the response.</source>
          <target state="translated">该 &lt;code&gt;WSGIRequest&lt;/code&gt; 由测试处理机生成的实例生成的响应。</target>
        </trans-unit>
        <trans-unit id="66afd505ff8a2b88d4d404382dba8366c94adbdf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Window&lt;/code&gt; class is the main expression for an &lt;code&gt;OVER&lt;/code&gt; clause.</source>
          <target state="translated">的 &lt;code&gt;Window&lt;/code&gt; 类是一个主要表达 &lt;code&gt;OVER&lt;/code&gt; 子句。</target>
        </trans-unit>
        <trans-unit id="8979a358900953093d2326b9824ba1de2de53ea2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;X-Frame-Options&lt;/code&gt; HTTP header will only be set by the middleware or view decorators if it is not already present in the response.</source>
          <target state="translated">该 &lt;code&gt;X-Frame-Options&lt;/code&gt; HTTP头将仅由中间件或视图装饰如果它不是已存在于所述响应来设定。</target>
        </trans-unit>
        <trans-unit id="8d09a0d425815f28ca10ad6b5cbfd35f8a48aadd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;X-Frame-Options&lt;/code&gt; header will only protect against clickjacking in a modern browser. Older browsers will quietly ignore the header and need &lt;a href=&quot;https://en.wikipedia.org/wiki/Clickjacking#Prevention&quot;&gt;other clickjacking prevention techniques&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;X-Frame-Options&lt;/code&gt; 标题只会防止在现代浏览器中点击劫持。较旧的浏览器将安静地忽略标题，并需要&lt;a href=&quot;https://en.wikipedia.org/wiki/Clickjacking#Prevention&quot;&gt;其他防止点击劫持的技术&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c36695a4a662815bce0c58313089f7aaa0f48d50" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__call__()&lt;/code&gt; method:</source>
          <target state="translated">的 &lt;code&gt;__call__()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="7d43e36285954e8018df358dc63c1c96dce6c55d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__hash__()&lt;/code&gt; method is based on the instance&amp;rsquo;s primary key value. It is effectively &lt;code&gt;hash(obj.pk)&lt;/code&gt;. If the instance doesn&amp;rsquo;t have a primary key value then a &lt;code&gt;TypeError&lt;/code&gt; will be raised (otherwise the &lt;code&gt;__hash__()&lt;/code&gt; method would return different values before and after the instance is saved, but changing the &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; value of an instance is forbidden in Python.</source>
          <target state="translated">所述 &lt;code&gt;__hash__()&lt;/code&gt; 方法是基于实例的主键值。实际上是 &lt;code&gt;hash(obj.pk)&lt;/code&gt; 。如果实例没有主键值，则将 &lt;code&gt;TypeError&lt;/code&gt; （否则 &lt;code&gt;__hash__()&lt;/code&gt; 方法将在保存实例之前和之后返回不同的值，但Python中禁止更改实例的&lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;值）。</target>
        </trans-unit>
        <trans-unit id="b245c13863acef3cf98e9755c517e60cd4238be0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__html__()&lt;/code&gt; method on a class helps non-Django templates detect classes whose output doesn&amp;rsquo;t require HTML escaping.</source>
          <target state="translated">类上的 &lt;code&gt;__html__()&lt;/code&gt; 方法可帮助非Django模板检测其输出不需要HTML转义的类。</target>
        </trans-unit>
        <trans-unit id="242cd5c6915a028a44de86d1423bf8dbd0db36f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__str__()&lt;/code&gt; method is called whenever you call &lt;code&gt;str()&lt;/code&gt; on an object. Django uses &lt;code&gt;str(obj)&lt;/code&gt; in a number of places. Most notably, to display an object in the Django admin site and as the value inserted into a template when it displays an object. Thus, you should always return a nice, human-readable representation of the model from the &lt;code&gt;__str__()&lt;/code&gt; method.</source>
          <target state="translated">该 &lt;code&gt;__str__()&lt;/code&gt; 当你调用方法称为 &lt;code&gt;str()&lt;/code&gt; 的对象上。Django 在许多地方都使用 &lt;code&gt;str(obj)&lt;/code&gt; 。最值得注意的是，在Django管理站点中显示对象，并在显示对象时将其插入模板中。因此，您应该始终从 &lt;code&gt;__str__()&lt;/code&gt; 方法返回一个很好的，易于理解的模型表示形式。</target>
        </trans-unit>
        <trans-unit id="e94b365dd5e4fdc21c38390fcbd56923e0217c62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__str__()&lt;/code&gt; method is just as valid in &lt;code&gt;list_display&lt;/code&gt; as any other model method, so it&amp;rsquo;s perfectly OK to do this:</source>
          <target state="translated">该 &lt;code&gt;__str__()&lt;/code&gt; 方法是一样的有效 &lt;code&gt;list_display&lt;/code&gt; 任何其他模型的方法，所以这是完全可以做到这一点：</target>
        </trans-unit>
        <trans-unit id="fb1166692699eb0d9c437ab4c9c89c728a9df40b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__str__()&lt;/code&gt; method of the model will be called to generate string representations of the objects for use in the field&amp;rsquo;s choices. To provide customized representations, subclass &lt;code&gt;ModelChoiceField&lt;/code&gt; and override &lt;code&gt;label_from_instance&lt;/code&gt;. This method will receive a model object and should return a string suitable for representing it. For example:</source>
          <target state="translated">将调用模型的 &lt;code&gt;__str__()&lt;/code&gt; 方法来生成对象的字符串表示形式，以供在字段的选择中使用。要提供自定义表示，请子类 &lt;code&gt;ModelChoiceField&lt;/code&gt; 并重写 &lt;code&gt;label_from_instance&lt;/code&gt; 。此方法将接收模型对象，并应返回适合于表示它的字符串。例如：</target>
        </trans-unit>
        <trans-unit id="bc8e00c0f07ddecf5b0083b8a3e48275147ace7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__str__()&lt;/code&gt; method of this object displays the HTML for this field.</source>
          <target state="translated">此对象的 &lt;code&gt;__str__()&lt;/code&gt; 方法显示此字段的HTML。</target>
        </trans-unit>
        <trans-unit id="e02b06decdff25a6b34edac539ebe7fdca953884" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;_private.py&lt;/code&gt; module will not be available as a management command.</source>
          <target state="translated">该 &lt;code&gt;_private.py&lt;/code&gt; 模块将不再作为一个管理命令。</target>
        </trans-unit>
        <trans-unit id="1f1de0ef74330e91324a7b1a6ceb8a2537f83d80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;_state&lt;/code&gt; attribute refers to a &lt;code&gt;ModelState&lt;/code&gt; object that tracks the lifecycle of the model instance.</source>
          <target state="translated">所述 &lt;code&gt;_state&lt;/code&gt; 属性指 &lt;code&gt;ModelState&lt;/code&gt; 对象轨道模型实例的生命周期。</target>
        </trans-unit>
        <trans-unit id="b37db792ea6a2c9600b693b0e001acd1372fc865" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;algorithm&lt;/code&gt; parameter was added.</source>
          <target state="translated">该 &lt;code&gt;algorithm&lt;/code&gt; 中加入参数。</target>
        </trans-unit>
        <trans-unit id="3129f56bffecbb12af92556c1e2b3dd0d2e6e694" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;alias&lt;/code&gt; parameter was added.</source>
          <target state="translated">该 &lt;code&gt;alias&lt;/code&gt; 加入参数。</target>
        </trans-unit>
        <trans-unit id="59494d9c4e049331ff85ce6c2568b743a72e88c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aliases&lt;/code&gt; argument determines which &lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt; aliases test databases should be setup for. If it&amp;rsquo;s not provided, it defaults to all of &lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt; aliases.</source>
          <target state="translated">的 &lt;code&gt;aliases&lt;/code&gt; 参数确定哪个&lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt;别名测试数据库应该是设置为。如果未提供，则默认为所有&lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt;别名。</target>
        </trans-unit>
        <trans-unit id="8750e97ecb463c425823eb7cc1352eae9ebfe833" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aliases&lt;/code&gt; argument was added.</source>
          <target state="translated">该 &lt;code&gt;aliases&lt;/code&gt; 加入争论。</target>
        </trans-unit>
        <trans-unit id="040e41485d8ef0ae272ef7bd601f4a429ca88bf3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;all()&lt;/code&gt; is redundant in this example, so this could be simplified to:</source>
          <target state="translated">的 &lt;code&gt;all()&lt;/code&gt; 是在本例中多余的，所以这可以简化为：</target>
        </trans-unit>
        <trans-unit id="7f6dc9679098f04080112228476983b6a1976393" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;allow_distinct&lt;/code&gt; attribute and &lt;code&gt;distinct&lt;/code&gt; argument were added.</source>
          <target state="translated">的 &lt;code&gt;allow_distinct&lt;/code&gt; 属性和 &lt;code&gt;distinct&lt;/code&gt; 添加的参数。</target>
        </trans-unit>
        <trans-unit id="c7bb54cee1b3911dbfb881e060211c780f0ea073" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app_label&lt;/code&gt; positional argument is the label of the application being migrated.</source>
          <target state="translated">所述 &lt;code&gt;app_label&lt;/code&gt; 位置参数是正在迁移的应用程序的标签。</target>
        </trans-unit>
        <trans-unit id="9bdb389563417a3b0a519152176d6ed8447860f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;application&lt;/code&gt; object</source>
          <target state="translated">该 &lt;code&gt;application&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="af8539fc49d946321203b4240ca5674468d0aa11" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;args&lt;/code&gt; and &lt;code&gt;kwargs&lt;/code&gt; arguments are positional and/or keyword arguments &lt;a href=&quot;../../topics/http/urls#how-django-processes-a-request&quot;&gt;captured from the URL pattern&lt;/a&gt;, respectively.</source>
          <target state="translated">的 &lt;code&gt;args&lt;/code&gt; 和 &lt;code&gt;kwargs&lt;/code&gt; 参数是位置和/或关键字参数&lt;a href=&quot;../../topics/http/urls#how-django-processes-a-request&quot;&gt;从URL模式捕获的&lt;/a&gt;，分别。</target>
        </trans-unit>
        <trans-unit id="8c2c21610a893a69f159ee7fade61111640f2947" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;as_p()&lt;/code&gt;, &lt;code&gt;as_ul()&lt;/code&gt;, and &lt;code&gt;as_table()&lt;/code&gt; methods are shortcuts &amp;ndash; they&amp;rsquo;re not the only way a form object can be displayed.</source>
          <target state="translated">该 &lt;code&gt;as_p()&lt;/code&gt; ， &lt;code&gt;as_ul()&lt;/code&gt; ，和 &lt;code&gt;as_table()&lt;/code&gt; 方法是捷径-他们没有可以显示的表单对象的唯一途径。</target>
        </trans-unit>
        <trans-unit id="36a62e596278fcb3fdb7a0e6cbf94bfa691b95db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;as_vendor()&lt;/code&gt; methods should use the &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;template&lt;/code&gt;, &lt;code&gt;arg_joiner&lt;/code&gt;, and any other &lt;code&gt;**extra_context&lt;/code&gt; parameters to customize the SQL as needed. For example:</source>
          <target state="translated">该 &lt;code&gt;as_vendor()&lt;/code&gt; 方法应使用 &lt;code&gt;function&lt;/code&gt; ， &lt;code&gt;template&lt;/code&gt; ， &lt;code&gt;arg_joiner&lt;/code&gt; ，以及任何其他 &lt;code&gt;**extra_context&lt;/code&gt; 中用需要的参数自定义SQL。例如：</target>
        </trans-unit>
        <trans-unit id="14cc7e3cc644dbe6fbd01653c9f923fda6ee0008" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;async_support&lt;/code&gt; tag was added.</source>
          <target state="translated">该 &lt;code&gt;async_support&lt;/code&gt; 添加标签。</target>
        </trans-unit>
        <trans-unit id="7b0b060b2a387bc6f0547172f29bfda89f363e66" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;atomic&lt;/code&gt; attribute doesn&amp;rsquo;t have an effect on databases that don&amp;rsquo;t support DDL transactions (e.g. MySQL, Oracle). (MySQL&amp;rsquo;s &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/atomic-ddl.html&quot;&gt;atomic DDL statement support&lt;/a&gt; refers to individual statements rather than multiple statements wrapped in a transaction that can be rolled back.)</source>
          <target state="translated">该 &lt;code&gt;atomic&lt;/code&gt; 属性没有上不支持DDL事务数据库的影响（如MySQL和甲骨文）。（MySQL的&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/atomic-ddl.html&quot;&gt;原子DDL语句支持&lt;/a&gt;引用单个语句，而不是包装在可以回滚的事务中的多个语句。）</target>
        </trans-unit>
        <trans-unit id="ed5071623fbdd5e7cd63c8530a1a34501032f3d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;authenticate&lt;/code&gt; method takes a &lt;code&gt;request&lt;/code&gt; argument and credentials as keyword arguments. Most of the time, it&amp;rsquo;ll look like this:</source>
          <target state="translated">所述 &lt;code&gt;authenticate&lt;/code&gt; 方法需要一个 &lt;code&gt;request&lt;/code&gt; 参数和凭据作为关键字参数。大多数时候，它看起来像这样：</target>
        </trans-unit>
        <trans-unit id="07bd50999a8a07b661852e5912695c810796717b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;auto_now&lt;/code&gt; and &lt;code&gt;auto_now_add&lt;/code&gt; options will always use the date in the &lt;a href=&quot;../../topics/i18n/timezones#default-current-time-zone&quot;&gt;default timezone&lt;/a&gt; at the moment of creation or update. If you need something different, you may want to consider using your own callable default or overriding &lt;code&gt;save()&lt;/code&gt; instead of using &lt;code&gt;auto_now&lt;/code&gt; or &lt;code&gt;auto_now_add&lt;/code&gt;; or using a &lt;code&gt;DateTimeField&lt;/code&gt; instead of a &lt;code&gt;DateField&lt;/code&gt; and deciding how to handle the conversion from datetime to date at display time.</source>
          <target state="translated">该 &lt;code&gt;auto_now&lt;/code&gt; 和 &lt;code&gt;auto_now_add&lt;/code&gt; 选项将始终使用的日期&lt;a href=&quot;../../topics/i18n/timezones#default-current-time-zone&quot;&gt;默认时区&lt;/a&gt;在创建或更新的时刻。如果需要其他功能，则可能要考虑使用自己的可调用默认值或覆盖 &lt;code&gt;save()&lt;/code&gt; ,而不要使用 &lt;code&gt;auto_now&lt;/code&gt; 或 &lt;code&gt;auto_now_add&lt;/code&gt; ；或使用 &lt;code&gt;DateTimeField&lt;/code&gt; 代替 &lt;code&gt;DateField&lt;/code&gt; 并确定如何处理显示时从datetime到date的转换。</target>
        </trans-unit>
        <trans-unit id="e5f42d2abe12a2c52440a2178e6b239cd5f4d2cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;autosummarize&lt;/code&gt; parameter was added.</source>
          <target state="translated">该 &lt;code&gt;autosummarize&lt;/code&gt; 加入参数。</target>
        </trans-unit>
        <trans-unit id="fba83b90756f2ace91825b6864267bdb1d2dd334" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;band_input&lt;/code&gt; dictionary</source>
          <target state="translated">该 &lt;code&gt;band_input&lt;/code&gt; 词典</target>
        </trans-unit>
        <trans-unit id="3e650b6d21fc6995e2e4c4bddb5833894f2cc980" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bands&lt;/code&gt; key in the &lt;code&gt;ds_input&lt;/code&gt; dictionary is a list of &lt;code&gt;band_input&lt;/code&gt; dictionaries. Each &lt;code&gt;band_input&lt;/code&gt; dictionary can contain pixel values and the &amp;ldquo;no data&amp;rdquo; value to be set on the bands of the new raster. The data array can have the full size of the new raster or be smaller. For arrays that are smaller than the full raster, the &lt;code&gt;size&lt;/code&gt;, &lt;code&gt;shape&lt;/code&gt;, and &lt;code&gt;offset&lt;/code&gt; keys control the pixel values. The corresponding keys are passed to the &lt;a href=&quot;#django.contrib.gis.gdal.GDALBand.data&quot;&gt;&lt;code&gt;data()&lt;/code&gt;&lt;/a&gt; method. Their functionality is the same as setting the band data with that method. The following table describes the keys that can be used.</source>
          <target state="translated">该 &lt;code&gt;bands&lt;/code&gt; 在关键 &lt;code&gt;ds_input&lt;/code&gt; 词典列表 &lt;code&gt;band_input&lt;/code&gt; 字典。每个 &lt;code&gt;band_input&lt;/code&gt; 词典可以包含像素值和要在新栅格的波段上设置的&amp;ldquo;无数据&amp;rdquo;值。数据数组可以具有新栅格的完整大小，也可以更小。对于小于整个栅格的阵列， &lt;code&gt;size&lt;/code&gt; ， &lt;code&gt;shape&lt;/code&gt; 和 &lt;code&gt;offset&lt;/code&gt; 键控制像素值。相应的键将传递给&lt;a href=&quot;#django.contrib.gis.gdal.GDALBand.data&quot;&gt; &lt;code&gt;data()&lt;/code&gt; &lt;/a&gt;方法。它们的功能与使用该方法设置波段数据相同。下表描述了可以使用的键。</target>
        </trans-unit>
        <trans-unit id="127a774352ae775d1a734f12eb032c19f5941490" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;base.py&lt;/code&gt; module must contain a class named &lt;code&gt;DatabaseWrapper&lt;/code&gt; that subclasses an existing engine from the &lt;code&gt;django.db.backends&lt;/code&gt; module. Here&amp;rsquo;s an example of subclassing the PostgreSQL engine to change a feature class &lt;code&gt;allows_group_by_selected_pks_on_model&lt;/code&gt;:</source>
          <target state="translated">该 &lt;code&gt;base.py&lt;/code&gt; 模块必须包含一个名为类 &lt;code&gt;DatabaseWrapper&lt;/code&gt; 的子类从现有的发动机 &lt;code&gt;django.db.backends&lt;/code&gt; 模块。这是对PostgreSQL引擎进行子类化以更改要素类 &lt;code&gt;allows_group_by_selected_pks_on_model&lt;/code&gt; 的示例：</target>
        </trans-unit>
        <trans-unit id="350daf9adcbd3902411ac2fd50a35ba2aff803a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;batch_size&lt;/code&gt; parameter controls how many objects are created in a single query. The default is to create all objects in one batch, except for SQLite where the default is such that at most 999 variables per query are used.</source>
          <target state="translated">该 &lt;code&gt;batch_size&lt;/code&gt; 时参数控制多少个对象在一个查询中被创建。默认设置是一批创建所有对象，但SQLite除外，默认设置是每个查询最多使用999个变量。</target>
        </trans-unit>
        <trans-unit id="148a50ded27967b9b5e995fa4ee2dfefe0180318" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;batch_size&lt;/code&gt; parameter controls how many objects are saved in a single query. The default is to update all objects in one batch, except for SQLite and Oracle which have restrictions on the number of variables used in a query.</source>
          <target state="translated">该 &lt;code&gt;batch_size&lt;/code&gt; 时参数控制多少个对象都保存在一个单一的查询。默认设置是一批更新所有对象，但SQLite和Oracle对查询中使用的变量数量有限制的除外。</target>
        </trans-unit>
        <trans-unit id="29214e1139e592cdc699dbaac6437019d5842836" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;best_pizza&lt;/code&gt; relationship could also be fetched using &lt;code&gt;select_related&lt;/code&gt; to reduce the query count to 2:</source>
          <target state="translated">该 &lt;code&gt;best_pizza&lt;/code&gt; 关系也可以用被取出 &lt;code&gt;select_related&lt;/code&gt; 减少查询次数为2：</target>
        </trans-unit>
        <trans-unit id="839ea21b855d7bebf3c528d20a38d7f0c39d1918" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;binutils&lt;/code&gt; package may be installed on Debian and Ubuntu systems using the following command:</source>
          <target state="translated">所述 &lt;code&gt;binutils&lt;/code&gt; 封装可以被安装在使用以下命令Debian和Ubuntu系统：</target>
        </trans-unit>
        <trans-unit id="aa42c5f25054d273ec0f4165273460384667b661" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;blocktrans&lt;/code&gt; tag was renamed to &lt;code&gt;blocktranslate&lt;/code&gt;. The &lt;code&gt;blocktrans&lt;/code&gt; tag is still supported as an alias for backwards compatibility.</source>
          <target state="translated">该 &lt;code&gt;blocktrans&lt;/code&gt; 标签更名为 &lt;code&gt;blocktranslate&lt;/code&gt; 。仍支持使用 &lt;code&gt;blocktrans&lt;/code&gt; 标记作为向后兼容性的别名。</target>
        </trans-unit>
        <trans-unit id="242af23e9647f0e506b37c5b30b71ec386636d5f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;blog_articles&lt;/code&gt; view needs the outermost captured argument to be reversed, &lt;code&gt;page-2/&lt;/code&gt; or no arguments in this case, while &lt;code&gt;comments&lt;/code&gt; can be reversed with either no arguments or a value for &lt;code&gt;page_number&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;blog_articles&lt;/code&gt; 查看需要的最外捕获的参数被逆转， &lt;code&gt;page-2/&lt;/code&gt; 或在这种情况下不使用参数，而 &lt;code&gt;comments&lt;/code&gt; 可与任何参数或对于一个数值被反转 &lt;code&gt;page_number&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3f33c6c673bfbf57b5ee38bf6abf43fd16b8ed1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;buffer&lt;/code&gt; argument was added.</source>
          <target state="translated">该 &lt;code&gt;buffer&lt;/code&gt; 加入争论。</target>
        </trans-unit>
        <trans-unit id="71cc1a05ada301e38f2a5deb777002a4cb21a84c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;changed_data&lt;/code&gt; attribute returns a list of the names of the fields whose values in the form&amp;rsquo;s bound data (usually &lt;code&gt;request.POST&lt;/code&gt;) differ from what was provided in &lt;a href=&quot;#django.forms.Form.initial&quot;&gt;&lt;code&gt;initial&lt;/code&gt;&lt;/a&gt;. It returns an empty list if no data differs.</source>
          <target state="translated">该 &lt;code&gt;changed_data&lt;/code&gt; 属性返回其在表单的数据绑定（通常值的字段的名称列表 &lt;code&gt;request.POST&lt;/code&gt; ）从什么是在提供不同的&lt;a href=&quot;#django.forms.Form.initial&quot;&gt; &lt;code&gt;initial&lt;/code&gt; &lt;/a&gt;。如果没有数据不同，它将返回一个空列表。</target>
        </trans-unit>
        <trans-unit id="b158cebf7ca06f6bb44d798cabf4ff75fe620b68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;chunk_size&lt;/code&gt; parameter controls the size of batches Django retrieves from the database driver. Larger batches decrease the overhead of communicating with the database driver at the expense of a slight increase in memory consumption.</source>
          <target state="translated">该 &lt;code&gt;chunk_size&lt;/code&gt; 参数控制批次的Django从数据库中获取驱动器的大小。较大的批处理减少了与数据库驱动程序进行通信的开销，但代价是稍微增加了内存消耗。</target>
        </trans-unit>
        <trans-unit id="ca0e6efeac5dbe6abb2828a00ea8c0e8ed0f93ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clean()&lt;/code&gt; method on a &lt;code&gt;Field&lt;/code&gt; subclass is responsible for running &lt;code&gt;to_python()&lt;/code&gt;, &lt;code&gt;validate()&lt;/code&gt;, and &lt;code&gt;run_validators()&lt;/code&gt; in the correct order and propagating their errors. If, at any time, any of the methods raise &lt;code&gt;ValidationError&lt;/code&gt;, the validation stops and that error is raised. This method returns the clean data, which is then inserted into the &lt;code&gt;cleaned_data&lt;/code&gt; dictionary of the form.</source>
          <target state="translated">&lt;code&gt;Field&lt;/code&gt; 子类上的 &lt;code&gt;clean()&lt;/code&gt; 方法负责以正确的顺序运行 &lt;code&gt;to_python()&lt;/code&gt; ， &lt;code&gt;validate()&lt;/code&gt; 和 &lt;code&gt;run_validators()&lt;/code&gt; 并传播其错误。如果任何时候任何方法引发 &lt;code&gt;ValidationError&lt;/code&gt; ，则验证将停止并引发该错误。此方法返回清除数据，然后将其插入表单的 &lt;code&gt;cleaned_data&lt;/code&gt; 字典中。</target>
        </trans-unit>
        <trans-unit id="3c52417139bac92e876f396b203f816a08c893de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clean_&amp;lt;fieldname&amp;gt;()&lt;/code&gt; method is called on a form subclass &amp;ndash; where &lt;code&gt;&amp;lt;fieldname&amp;gt;&lt;/code&gt; is replaced with the name of the form field attribute. This method does any cleaning that is specific to that particular attribute, unrelated to the type of field that it is. This method is not passed any parameters. You will need to look up the value of the field in &lt;code&gt;self.cleaned_data&lt;/code&gt; and remember that it will be a Python object at this point, not the original string submitted in the form (it will be in &lt;code&gt;cleaned_data&lt;/code&gt; because the general field &lt;code&gt;clean()&lt;/code&gt; method, above, has already cleaned the data once).</source>
          <target state="translated">所述 &lt;code&gt;clean_&amp;lt;fieldname&amp;gt;()&lt;/code&gt; 方法被调用上的形式的子类- ，其中 &lt;code&gt;&amp;lt;fieldname&amp;gt;&lt;/code&gt; 替换为表单字段属性的名称。此方法执行特定于该特定属性的任何清理，而与该字段的类型无关。此方法未传递任何参数。您将需要在 &lt;code&gt;self.cleaned_data&lt;/code&gt; 中查询该字段的值，并记住这时它将是一个Python对象，而不是表单中提交的原始字符串（它将在 &lt;code&gt;cleaned_data&lt;/code&gt; 中,因为常规字段 &lt;code&gt;clean()&lt;/code&gt; 方法，上面的数据已经清除了一次）。</target>
        </trans-unit>
        <trans-unit id="73d5328986341f457f499ee9ad3b3adc8f6b49a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clear()&lt;/code&gt; method can be used to bulk delete all related objects for an instance:</source>
          <target state="translated">的 &lt;code&gt;clear()&lt;/code&gt; 方法可用于批量删除一个实例的所有相关对象：</target>
        </trans-unit>
        <trans-unit id="27bdefbb47e8a8cd64bd76c6906f4ab1a9280839" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;closepoll.py&lt;/code&gt; module has only one requirement &amp;ndash; it must define a class &lt;code&gt;Command&lt;/code&gt; that extends &lt;a href=&quot;#django.core.management.BaseCommand&quot;&gt;&lt;code&gt;BaseCommand&lt;/code&gt;&lt;/a&gt; or one of its &lt;a href=&quot;#ref-basecommand-subclasses&quot;&gt;subclasses&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;closepoll.py&lt;/code&gt; 模块只有一个要求-它必须定义一个类 &lt;code&gt;Command&lt;/code&gt; 扩展&lt;a href=&quot;#django.core.management.BaseCommand&quot;&gt; &lt;code&gt;BaseCommand&lt;/code&gt; &lt;/a&gt;或它的一个&lt;a href=&quot;#ref-basecommand-subclasses&quot;&gt;子类&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb6fbcac7d5d2693b65686e44afda279692d83d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;columns&lt;/code&gt; argument takes a tuple or list of up to 32 values that are integer number of bits from 1 to 4095.</source>
          <target state="translated">该 &lt;code&gt;columns&lt;/code&gt; 参数需要长达32个值是整数从1到4095位的数目的元组或列表。</target>
        </trans-unit>
        <trans-unit id="d147cb6a81ba4e1f9f1cfdd857bfa6d5debf2964" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;condition&lt;/code&gt; argument is ignored with MySQL and MariaDB as neither supports conditional indexes.</source>
          <target state="translated">由于MySQL和MariaDB都不支持条件索引，因此会忽略 &lt;code&gt;condition&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="07df2f86e6de88400ec849e2aa274e8a6dec96e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;condition&lt;/code&gt; decorator</source>
          <target state="translated">该 &lt;code&gt;condition&lt;/code&gt; 装饰</target>
        </trans-unit>
        <trans-unit id="676451c2a4a971d9135da0ad4e5193ea055be77c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;condition&lt;/code&gt; decorator is useful for more than only &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt; requests (&lt;code&gt;HEAD&lt;/code&gt; requests are the same as &lt;code&gt;GET&lt;/code&gt; in this situation). It can also be used to provide checking for &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt; and &lt;code&gt;DELETE&lt;/code&gt; requests. In these situations, the idea isn&amp;rsquo;t to return a &amp;ldquo;not modified&amp;rdquo; response, but to tell the client that the resource they are trying to change has been altered in the meantime.</source>
          <target state="translated">该 &lt;code&gt;condition&lt;/code&gt; 装饰是超过才有用 &lt;code&gt;GET&lt;/code&gt; 和 &lt;code&gt;HEAD&lt;/code&gt; 请求（ &lt;code&gt;HEAD&lt;/code&gt; 请求是相同的 &lt;code&gt;GET&lt;/code&gt; 在这种情况下）。它也可以用于检查 &lt;code&gt;POST&lt;/code&gt; ， &lt;code&gt;PUT&lt;/code&gt; 和 &lt;code&gt;DELETE&lt;/code&gt; 请求。在这种情况下，该想法不是返回&amp;ldquo;未修改&amp;rdquo;响应，而是告诉客户端他们试图更改的资源在此期间已被更改。</target>
        </trans-unit>
        <trans-unit id="9da5e5f87c99e48862267658f8355a10d6f1ffea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;condition&lt;/code&gt; decorator only sets validator headers (&lt;code&gt;ETag&lt;/code&gt; and &lt;code&gt;Last-Modified&lt;/code&gt;) for safe HTTP methods, i.e. &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt;. If you wish to return them in other cases, set them in your view. See &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-4.3.4&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 7231#section-4.3.4&lt;/strong&gt;&lt;/a&gt; to learn about the distinction between setting a validator header in response to requests made with &lt;code&gt;PUT&lt;/code&gt; versus &lt;code&gt;POST&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;condition&lt;/code&gt; 装饰只设置验证头（ &lt;code&gt;ETag&lt;/code&gt; 的和 &lt;code&gt;Last-Modified&lt;/code&gt; ），用于安全HTTP方法，即 &lt;code&gt;GET&lt;/code&gt; 和 &lt;code&gt;HEAD&lt;/code&gt; 。如果您希望在其他情况下退还它们，请在您的视图中进行设置。请参阅&lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-4.3.4&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 7231＃section-4.3.4&lt;/strong&gt;&lt;/a&gt;，了解设置响应 &lt;code&gt;PUT&lt;/code&gt; 与 &lt;code&gt;POST&lt;/code&gt; 的请求时设置验证器标头之间的区别。</target>
        </trans-unit>
        <trans-unit id="88c95c793e4b8a78ded6deb77eff0253e4300cf8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;condition&lt;/code&gt; decorator only sets validator headers (&lt;code&gt;ETag&lt;/code&gt; and &lt;code&gt;Last-Modified&lt;/code&gt;) for safe HTTP methods, i.e. &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt;. If you wish to return them in other cases, set them in your view. See &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-4.3.4&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 7231#section-4.3.4&lt;/strong&gt;&lt;/a&gt; to learn about the distinction between setting a validator header in response to requests made with &lt;code&gt;PUT&lt;/code&gt; versus &lt;code&gt;POST&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;condition&lt;/code&gt; 装饰只设置验证头（ &lt;code&gt;ETag&lt;/code&gt; 的和 &lt;code&gt;Last-Modified&lt;/code&gt; ），用于安全HTTP方法，即 &lt;code&gt;GET&lt;/code&gt; 和 &lt;code&gt;HEAD&lt;/code&gt; 。如果您希望在其他情况下退还它们，请在您的视图中进行设置。请参阅&lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-4.3.4&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 7231＃section-4.3.4&lt;/strong&gt;&lt;/a&gt;，了解设置响应 &lt;code&gt;PUT&lt;/code&gt; 与 &lt;code&gt;POST&lt;/code&gt; 的请求时设置验证器标头之间的区别。</target>
        </trans-unit>
        <trans-unit id="7d5358b33428e764a771faf195a50a4b6effe41f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;condition&lt;/code&gt; decorator&amp;rsquo;s signature looks like this:</source>
          <target state="translated">该 &lt;code&gt;condition&lt;/code&gt; 装饰的签名如下所示：</target>
        </trans-unit>
        <trans-unit id="b6c2a511c9148521ac6efd590bade037fbd21edc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contained_by&lt;/code&gt; lookup is also available on the non-range field types: &lt;a href=&quot;../../models/fields#django.db.models.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../models/fields#django.db.models.BigIntegerField&quot;&gt;&lt;code&gt;BigIntegerField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../models/fields#django.db.models.FloatField&quot;&gt;&lt;code&gt;FloatField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../models/fields#django.db.models.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../models/fields#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">还可以在以下非范围字段类型上使用 &lt;code&gt;contained_by&lt;/code&gt; 查找：&lt;a href=&quot;../../models/fields#django.db.models.IntegerField&quot;&gt; &lt;code&gt;IntegerField&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../models/fields#django.db.models.BigIntegerField&quot;&gt; &lt;code&gt;BigIntegerField&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../models/fields#django.db.models.FloatField&quot;&gt; &lt;code&gt;FloatField&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../models/fields#django.db.models.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../models/fields#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="8375c269f25318522ab96fb44c712afcbaa7a299" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contained_by&lt;/code&gt; lookup is also available on the non-range field types: &lt;a href=&quot;../../models/fields#django.db.models.SmallAutoField&quot;&gt;&lt;code&gt;SmallAutoField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../models/fields#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../models/fields#django.db.models.BigAutoField&quot;&gt;&lt;code&gt;BigAutoField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../models/fields#django.db.models.SmallIntegerField&quot;&gt;&lt;code&gt;SmallIntegerField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../models/fields#django.db.models.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../models/fields#django.db.models.BigIntegerField&quot;&gt;&lt;code&gt;BigIntegerField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../models/fields#django.db.models.DecimalField&quot;&gt;&lt;code&gt;DecimalField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../models/fields#django.db.models.FloatField&quot;&gt;&lt;code&gt;FloatField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../models/fields#django.db.models.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../models/fields#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">所述 &lt;code&gt;contained_by&lt;/code&gt; 查找是也可在非范围字段类型：&lt;a href=&quot;../../models/fields#django.db.models.SmallAutoField&quot;&gt; &lt;code&gt;SmallAutoField&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../models/fields#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../models/fields#django.db.models.BigAutoField&quot;&gt; &lt;code&gt;BigAutoField&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../models/fields#django.db.models.SmallIntegerField&quot;&gt; &lt;code&gt;SmallIntegerField&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../models/fields#django.db.models.IntegerField&quot;&gt; &lt;code&gt;IntegerField&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../models/fields#django.db.models.BigIntegerField&quot;&gt; &lt;code&gt;BigIntegerField&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../models/fields#django.db.models.DecimalField&quot;&gt; &lt;code&gt;DecimalField&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../models/fields#django.db.models.FloatField&quot;&gt; &lt;code&gt;FloatField&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../models/fields#django.db.models.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt;，和&lt;a href=&quot;../../models/fields#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; 字段&lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="00cc9e8b50e8cd04d1c33d74ab44ee31f338d72b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contains&lt;/code&gt; and &lt;code&gt;intersects&lt;/code&gt; lookups are just a subset of the available queries &amp;ndash; the &lt;a href=&quot;db-api&quot;&gt;GeoDjango Database API&lt;/a&gt; documentation has more.</source>
          <target state="translated">在 &lt;code&gt;contains&lt;/code&gt; 和 &lt;code&gt;intersects&lt;/code&gt; 查找仅仅是可用查询的一个子集-的&lt;a href=&quot;db-api&quot;&gt;GeoDjango内置数据库API&lt;/a&gt;文档有更多。</target>
        </trans-unit>
        <trans-unit id="f7c21a9a282bc1271bd8dadc73df3306e76dd19f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;content&lt;/code&gt; argument must be an instance of &lt;a href=&quot;file#django.core.files.File&quot;&gt;&lt;code&gt;django.core.files.File&lt;/code&gt;&lt;/a&gt; or a file-like object that can be wrapped in &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;content&lt;/code&gt; 参数必须是实例&lt;a href=&quot;file#django.core.files.File&quot;&gt; &lt;code&gt;django.core.files.File&lt;/code&gt; &lt;/a&gt;或可以包装在一个类文件对象 &lt;code&gt;File&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="005cc4262486e03357f8a1cf9c1427d3554d3464" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;context_processors&lt;/code&gt; option is a list of callables &amp;ndash; called &lt;strong&gt;context processors&lt;/strong&gt; &amp;ndash; that take a request object as their argument and return a dictionary of items to be merged into the context. In the default generated settings file, the default template engine contains the following context processors:</source>
          <target state="translated">该 &lt;code&gt;context_processors&lt;/code&gt; 选项是可调用的列表-所谓&lt;strong&gt;的上下文处理器&lt;/strong&gt; -这需要一个request对象作为参数，返回项目的字典合并到上下文。在默认生成的设置文件中，默认模板引擎包含以下上下文处理器：</target>
        </trans-unit>
        <trans-unit id="9af77d9107d35b8e2882dbc247226a417f3f94d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;converter&lt;/code&gt; argument is a converter class, and &lt;code&gt;type_name&lt;/code&gt; is the converter name to use in path patterns. See &lt;a href=&quot;../topics/http/urls#registering-custom-path-converters&quot;&gt;Registering custom path converters&lt;/a&gt; for an example.</source>
          <target state="translated">该 &lt;code&gt;converter&lt;/code&gt; 参数是一个转换器类，并且 &lt;code&gt;type_name&lt;/code&gt; 是在路径模式来使用转换器的名称。有关示例，请参见&lt;a href=&quot;../topics/http/urls#registering-custom-path-converters&quot;&gt;注册自定义路径转换器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="600d94b23358b9e64a45d7079ab642cd07e9bfe8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;covers&lt;/code&gt; predicate has the following equivalent definitions:</source>
          <target state="translated">该 &lt;code&gt;covers&lt;/code&gt; 谓有下列等价的定义：</target>
        </trans-unit>
        <trans-unit id="d2aed277329d52559aed9e42ae909ea0493b089e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;current_app&lt;/code&gt; argument allows you to provide a hint to the resolver indicating the application to which the currently executing view belongs. This &lt;code&gt;current_app&lt;/code&gt; argument is used as a hint to resolve application namespaces into URLs on specific application instances, according to the &lt;a href=&quot;../topics/http/urls#topics-http-reversing-url-namespaces&quot;&gt;namespaced URL resolution strategy&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;current_app&lt;/code&gt; 参数可用于提供指示所述当前执行视图所属的应用程序的提示的解析器。根据&lt;a href=&quot;../topics/http/urls#topics-http-reversing-url-namespaces&quot;&gt;命名空间URL解析策略&lt;/a&gt;，此 &lt;code&gt;current_app&lt;/code&gt; 参数用作提示，以将应用程序命名空间解析为特定应用程序实例上的URL。</target>
        </trans-unit>
        <trans-unit id="fa0c9a5562781a0fc9d6df538ad97e13184ed51e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;database&lt;/code&gt; checks are now run only for database aliases specified using the &lt;a href=&quot;django-admin#cmdoption-check-database&quot;&gt;&lt;code&gt;check --database&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">该 &lt;code&gt;database&lt;/code&gt; 现在检查只针对数据库别名使用指定的运行&lt;a href=&quot;django-admin#cmdoption-check-database&quot;&gt; &lt;code&gt;check --database&lt;/code&gt; &lt;/a&gt;选项。</target>
        </trans-unit>
        <trans-unit id="c29ae58720a36ebd27ff270ec3a4a67136670d69" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;databases&lt;/code&gt; flag also controls which databases the &lt;a href=&quot;#django.test.TransactionTestCase.fixtures&quot;&gt;&lt;code&gt;TransactionTestCase.fixtures&lt;/code&gt;&lt;/a&gt; are loaded into. By default, fixtures are only loaded into the &lt;code&gt;default&lt;/code&gt; database.</source>
          <target state="translated">该 &lt;code&gt;databases&lt;/code&gt; 也标志，该标志数据库对照&lt;a href=&quot;#django.test.TransactionTestCase.fixtures&quot;&gt; &lt;code&gt;TransactionTestCase.fixtures&lt;/code&gt; &lt;/a&gt;被装入。默认情况下，固定装置仅加载到 &lt;code&gt;default&lt;/code&gt; 数据库中。</target>
        </trans-unit>
        <trans-unit id="02f8bb0bc2fca523fa77abf154c47a4f885b4118" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;databases&lt;/code&gt; parameter was added.</source>
          <target state="translated">该 &lt;code&gt;databases&lt;/code&gt; 中添加参数。</target>
        </trans-unit>
        <trans-unit id="cc435999c74ad21471b72975a1b3703b615d2231" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;db&lt;/code&gt; argument contains the database alias for the database the model is loaded from, &lt;code&gt;field_names&lt;/code&gt; contains the names of all loaded fields, and &lt;code&gt;values&lt;/code&gt; contains the loaded values for each field in &lt;code&gt;field_names&lt;/code&gt;. The &lt;code&gt;field_names&lt;/code&gt; are in the same order as the &lt;code&gt;values&lt;/code&gt;. If all of the model&amp;rsquo;s fields are present, then &lt;code&gt;values&lt;/code&gt; are guaranteed to be in the order &lt;code&gt;__init__()&lt;/code&gt; expects them. That is, the instance can be created by &lt;code&gt;cls(*values)&lt;/code&gt;. If any fields are deferred, they won&amp;rsquo;t appear in &lt;code&gt;field_names&lt;/code&gt;. In that case, assign a value of &lt;code&gt;django.db.models.DEFERRED&lt;/code&gt; to each of the missing fields.</source>
          <target state="translated">该 &lt;code&gt;db&lt;/code&gt; 参数包含在模型从装载数据库数据库别名， &lt;code&gt;field_names&lt;/code&gt; 包含所有加载的字段的名称，和 &lt;code&gt;values&lt;/code&gt; 包含在每个字段中加载的值 &lt;code&gt;field_names&lt;/code&gt; 。该 &lt;code&gt;field_names&lt;/code&gt; 都在相同的顺序 &lt;code&gt;values&lt;/code&gt; 。如果存在模型的所有字段，则保证 &lt;code&gt;values&lt;/code&gt; 的顺序为 &lt;code&gt;__init__()&lt;/code&gt; 期望它们的顺序。也就是说，可以通过 &lt;code&gt;cls(*values)&lt;/code&gt; 创建实例。如果推迟任何字段，它们将不会出现在 &lt;code&gt;field_names&lt;/code&gt; 中。在这种情况下，请分配值 &lt;code&gt;django.db.models.DEFERRED&lt;/code&gt; 到每个缺少的字段。</target>
        </trans-unit>
        <trans-unit id="5085611415b0d98d4c116923f8b795d2c1d95b05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;debug()&lt;/code&gt; method was implemented to allow running a test without collecting the result and catching exceptions.</source>
          <target state="translated">的 &lt;code&gt;debug()&lt;/code&gt; 方法被实现以允许而不收集结果和捕获异常运行测试。</target>
        </trans-unit>
        <trans-unit id="028e4d3f62d6689cd12d1cfa8062a08519ed0d3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;decoder&lt;/code&gt; can be used to validate the input. If &lt;a href=&quot;https://docs.python.org/3/library/json.html#json.JSONDecodeError&quot;&gt;&lt;code&gt;json.JSONDecodeError&lt;/code&gt;&lt;/a&gt; is raised during the deserialization, a &lt;code&gt;ValidationError&lt;/code&gt; will be raised.</source>
          <target state="translated">该 &lt;code&gt;decoder&lt;/code&gt; 可用于验证输入。如果在反序列化期间引发&lt;a href=&quot;https://docs.python.org/3/library/json.html#json.JSONDecodeError&quot;&gt; &lt;code&gt;json.JSONDecodeError&lt;/code&gt; &lt;/a&gt;，则将引发 &lt;code&gt;ValidationError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc8a573ac216d9a5b7bad577de73fb00d9b8a4f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;defer()&lt;/code&gt; method (and its cousin, &lt;a href=&quot;#django.db.models.query.QuerySet.only&quot;&gt;&lt;code&gt;only()&lt;/code&gt;&lt;/a&gt;, below) are only for advanced use-cases. They provide an optimization for when you have analyzed your queries closely and understand &lt;em&gt;exactly&lt;/em&gt; what information you need and have measured that the difference between returning the fields you need and the full set of fields for the model will be significant.</source>
          <target state="translated">在 &lt;code&gt;defer()&lt;/code&gt; 方法（和它的近亲，&lt;a href=&quot;#django.db.models.query.QuerySet.only&quot;&gt; &lt;code&gt;only()&lt;/code&gt; &lt;/a&gt;，下同）仅适用于先进的使用情况。当您仔细分析查询并&lt;em&gt;准确&lt;/em&gt;了解所需信息，并确定返回所需字段与模型的完整字段之间的差异非常大时，它们将提供一种优化。</target>
        </trans-unit>
        <trans-unit id="0a2b9b5e2c58ba6aa45bb769c054c156476e6dc7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delete()&lt;/code&gt; is applied instantly. You cannot call &lt;code&gt;delete()&lt;/code&gt; on a &lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; that has had a slice taken or can otherwise no longer be filtered.</source>
          <target state="translated">在 &lt;code&gt;delete()&lt;/code&gt; 的即时应用。您不能在已获取切片的&lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;上调用 &lt;code&gt;delete()&lt;/code&gt; ，否则将无法对其进行过滤。</target>
        </trans-unit>
        <trans-unit id="cd5ee7495aeed1ad4fa9a2df385383ac53997509" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delete()&lt;/code&gt; method does a bulk delete and does not call any &lt;code&gt;delete()&lt;/code&gt; methods on your models. It does, however, emit the &lt;a href=&quot;../signals#django.db.models.signals.pre_delete&quot;&gt;&lt;code&gt;pre_delete&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../signals#django.db.models.signals.post_delete&quot;&gt;&lt;code&gt;post_delete&lt;/code&gt;&lt;/a&gt; signals for all deleted objects (including cascaded deletions).</source>
          <target state="translated">该 &lt;code&gt;delete()&lt;/code&gt; 方法做了批量删除，并且不调用任何 &lt;code&gt;delete()&lt;/code&gt; 在你的模型的方法。但是，它确实为所有已删除对象（包括级联删除）发出&lt;a href=&quot;../signals#django.db.models.signals.pre_delete&quot;&gt; &lt;code&gt;pre_delete&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../signals#django.db.models.signals.post_delete&quot;&gt; &lt;code&gt;post_delete&lt;/code&gt; &lt;/a&gt;信号。</target>
        </trans-unit>
        <trans-unit id="0f0061be28bab77cda22844b74eb4a9f297fcbbc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delete_model&lt;/code&gt; method is given the &lt;code&gt;HttpRequest&lt;/code&gt; and a model instance. Overriding this method allows doing pre- or post-delete operations. Call &lt;code&gt;super().delete_model()&lt;/code&gt; to delete the object using &lt;a href=&quot;../../models/instances#django.db.models.Model.delete&quot;&gt;&lt;code&gt;Model.delete()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为 &lt;code&gt;delete_model&lt;/code&gt; 方法提供了 &lt;code&gt;HttpRequest&lt;/code&gt; 和一个模型实例。覆盖此方法可进行删除前或删除后的操作。调用 &lt;code&gt;super().delete_model()&lt;/code&gt; 以使用&lt;a href=&quot;../../models/instances#django.db.models.Model.delete&quot;&gt; &lt;code&gt;Model.delete()&lt;/code&gt; &lt;/a&gt;删除对象。</target>
        </trans-unit>
        <trans-unit id="334c2703a76253aba2e4c34a08bfba6b4664d5eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delete_queryset()&lt;/code&gt; method is given the &lt;code&gt;HttpRequest&lt;/code&gt; and a &lt;code&gt;QuerySet&lt;/code&gt; of objects to be deleted. Override this method to customize the deletion process for the &amp;ldquo;delete selected objects&amp;rdquo; &lt;a href=&quot;actions&quot;&gt;action&lt;/a&gt;.</source>
          <target state="translated">为 &lt;code&gt;delete_queryset()&lt;/code&gt; 方法提供了 &lt;code&gt;HttpRequest&lt;/code&gt; 和要删除的对象的 &lt;code&gt;QuerySet&lt;/code&gt; 。重写此方法可为&amp;ldquo;删除所选对象&amp;rdquo; &lt;a href=&quot;actions&quot;&gt;操作&lt;/a&gt;自定义删除过程。</target>
        </trans-unit>
        <trans-unit id="105675c32417c794f56e90baf6f0548c41d90b7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dependencies&lt;/code&gt; property is declared like this:</source>
          <target state="translated">该 &lt;code&gt;dependencies&lt;/code&gt; 属性声明如下：</target>
        </trans-unit>
        <trans-unit id="3ab64b1dcc0ea87c192718ade70afa20e9c9f314" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;detail()&lt;/code&gt; (from &lt;a href=&quot;tutorial03&quot;&gt;Tutorial 3&lt;/a&gt;) and &lt;code&gt;results()&lt;/code&gt; views are very short &amp;ndash; and, as mentioned above, redundant. The &lt;code&gt;index()&lt;/code&gt; view, which displays a list of polls, is similar.</source>
          <target state="translated">的 &lt;code&gt;detail()&lt;/code&gt; （从&lt;a href=&quot;tutorial03&quot;&gt;教程3&lt;/a&gt;）和 &lt;code&gt;results()&lt;/code&gt; 意见是非常短-和，如上面提到的，冗余的。显示投票列表的 &lt;code&gt;index()&lt;/code&gt; 视图与此类似。</target>
        </trans-unit>
        <trans-unit id="d3ac64ae4db395ba92f375f1894e081e8eedc65f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;disabled&lt;/code&gt; boolean argument, when set to &lt;code&gt;True&lt;/code&gt;, disables a form field using the &lt;code&gt;disabled&lt;/code&gt; HTML attribute so that it won&amp;rsquo;t be editable by users. Even if a user tampers with the field&amp;rsquo;s value submitted to the server, it will be ignored in favor of the value from the form&amp;rsquo;s initial data.</source>
          <target state="translated">在 &lt;code&gt;disabled&lt;/code&gt; 布尔参数，当设置为 &lt;code&gt;True&lt;/code&gt; 时，禁止使用表单域 &lt;code&gt;disabled&lt;/code&gt; HTML属性，使其不会被用户编辑。即使用户篡改了提交给服务器的字段的值，也将忽略该字段，而使用表单的初始数据中的值。</target>
        </trans-unit>
        <trans-unit id="cc4bb422f6b07cdcfa59a89628fda5ae5f1770a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;distinct&lt;/code&gt; argument determines whether or not the aggregate function should be invoked for each distinct value of &lt;code&gt;expressions&lt;/code&gt; (or set of values, for multiple &lt;code&gt;expressions&lt;/code&gt;). The argument is only supported on aggregates that have &lt;a href=&quot;#django.db.models.Aggregate.allow_distinct&quot;&gt;&lt;code&gt;allow_distinct&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;distinct&lt;/code&gt; 参数确定是否聚合函数应的每个不同的值被调用 &lt;code&gt;expressions&lt;/code&gt; （或值的集合，对于多个 &lt;code&gt;expressions&lt;/code&gt; ）。仅在&lt;a href=&quot;#django.db.models.Aggregate.allow_distinct&quot;&gt; &lt;code&gt;allow_distinct&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; 的聚合上支持该参数。</target>
        </trans-unit>
        <trans-unit id="554557058166afd6d58febc2557ac2927634999d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;django-admin&lt;/code&gt; / &lt;code&gt;manage.py&lt;/code&gt; commands will use pretty color-coded output if your terminal supports ANSI-colored output. It won&amp;rsquo;t use the color codes if you&amp;rsquo;re piping the command&amp;rsquo;s output to another program unless the &lt;a href=&quot;#cmdoption-force-color&quot;&gt;&lt;code&gt;--force-color&lt;/code&gt;&lt;/a&gt; option is used.</source>
          <target state="translated">在 &lt;code&gt;django-admin&lt;/code&gt; / &lt;code&gt;manage.py&lt;/code&gt; 命令将如果你的终端支持ANSI彩色输出使用漂亮的颜色编码输出。如果将命令的输出传递到另一个程序，则除非使用&lt;a href=&quot;#cmdoption-force-color&quot;&gt; &lt;code&gt;--force-color&lt;/code&gt; &lt;/a&gt;选项，否则它将不使用颜色代码。</target>
        </trans-unit>
        <trans-unit id="edb9ad724a443d5696f2bd854b9ae59ed3faf171" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;django-admin&lt;/code&gt; script should be on your system path if you installed Django via &lt;code&gt;pip&lt;/code&gt;. If it&amp;rsquo;s not in your path, ensure you have your virtual environment activated.</source>
          <target state="translated">在 &lt;code&gt;django-admin&lt;/code&gt; 脚本应该是你的系统路径上，如果你通过安装的Django &lt;code&gt;pip&lt;/code&gt; 。如果您不在，请确保已激活您的虚拟环境。</target>
        </trans-unit>
        <trans-unit id="ee94f96f99978afde505223c4d2d3c486ea61b19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;django-admin&lt;/code&gt; script should be on your system path if you installed Django via &lt;code&gt;pip&lt;/code&gt;. If it&amp;rsquo;s not on your path, you can find it in &lt;code&gt;site-packages/django/bin&lt;/code&gt; within your Python installation. Consider symlinking it from some place on your path, such as &lt;code&gt;/usr/local/bin&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;django-admin&lt;/code&gt; 脚本应该是你的系统路径上，如果你通过安装的Django &lt;code&gt;pip&lt;/code&gt; 。如果不在您的路径中，则可以在Python安装中的 &lt;code&gt;site-packages/django/bin&lt;/code&gt; 中找到它。考虑从路径上的某些位置将其符号链接，例如 &lt;code&gt;/usr/local/bin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="715f022d061bbda6ba2084bf2e86c4564dfd9e16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;django-admin&lt;/code&gt; utility</source>
          <target state="translated">在 &lt;code&gt;django-admin&lt;/code&gt; 工具</target>
        </trans-unit>
        <trans-unit id="1efdda5a91b60c90410571e56e94f021572e91f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;django.middleware.gzip.GZipMiddleware&lt;/code&gt; compresses content for browsers that understand GZip compression (all modern browsers).</source>
          <target state="translated">该 &lt;code&gt;django.middleware.gzip.GZipMiddleware&lt;/code&gt; 压缩为了解gzip压缩（所有现代浏览器）浏览器的内容。</target>
        </trans-unit>
        <trans-unit id="b272884f04c42a4c7bce64e53ab9d7654cba2e4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;django.middleware.security.SecurityMiddleware&lt;/code&gt; provides several security enhancements to the request/response cycle. Each one can be independently enabled or disabled with a setting.</source>
          <target state="translated">所述 &lt;code&gt;django.middleware.security.SecurityMiddleware&lt;/code&gt; 提供了几个安全性增强的请求/响应循环。可以通过设置分别启用或禁用每个选项。</target>
        </trans-unit>
        <trans-unit id="b490748982f6e86c39781b79caffc39dafaa554b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;django.template.loader&lt;/code&gt; module defines two functions to load templates.</source>
          <target state="translated">所述 &lt;code&gt;django.template.loader&lt;/code&gt; 模块定义了两个函数到负载模板。</target>
        </trans-unit>
        <trans-unit id="989b8491d1976291960faa8773eacf5eb441cfe2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;django.utils.decorators&lt;/code&gt; module contains &lt;a href=&quot;../../ref/utils#django.utils.decorators.sync_only_middleware&quot;&gt;&lt;code&gt;sync_only_middleware()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/utils#django.utils.decorators.async_only_middleware&quot;&gt;&lt;code&gt;async_only_middleware()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../ref/utils#django.utils.decorators.sync_and_async_middleware&quot;&gt;&lt;code&gt;sync_and_async_middleware()&lt;/code&gt;&lt;/a&gt; decorators that allow you to apply these flags to middleware factory functions.</source>
          <target state="translated">该 &lt;code&gt;django.utils.decorators&lt;/code&gt; 模块包含&lt;a href=&quot;../../ref/utils#django.utils.decorators.sync_only_middleware&quot;&gt; &lt;code&gt;sync_only_middleware()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../ref/utils#django.utils.decorators.async_only_middleware&quot;&gt; &lt;code&gt;async_only_middleware()&lt;/code&gt; &lt;/a&gt;，和&lt;a href=&quot;../../ref/utils#django.utils.decorators.sync_and_async_middleware&quot;&gt; &lt;code&gt;sync_and_async_middleware()&lt;/code&gt; &lt;/a&gt;装饰，让您与这些标志适用于中间件工厂函数。</target>
        </trans-unit>
        <trans-unit id="754d81f25843e3630b44190f127e7ab88dca50ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;django.utils.encoding&lt;/code&gt; module contains a few functions that are handy for converting back and forth between strings and bytestrings.</source>
          <target state="translated">该 &lt;code&gt;django.utils.encoding&lt;/code&gt; 模块包括了方便的字符串和字节串之间来回转换的一些功能。</target>
        </trans-unit>
        <trans-unit id="c802771bce8ac3d3e8bfdc6da5d8a583dbef074a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;django.views.decorators.http.etag&lt;/code&gt; and &lt;code&gt;django.views.decorators.http.last_modified&lt;/code&gt; decorators are passed the same type of functions as the &lt;code&gt;condition&lt;/code&gt; decorator. Their signatures are:</source>
          <target state="translated">的 &lt;code&gt;django.views.decorators.http.etag&lt;/code&gt; 和 &lt;code&gt;django.views.decorators.http.last_modified&lt;/code&gt; 装饰传递相同类型的功能的 &lt;code&gt;condition&lt;/code&gt; 装饰。他们的签名是：</target>
        </trans-unit>
        <trans-unit id="7e4c982787a5d9e1fcf99c43a7857b7c7a301d8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;django&lt;/code&gt; logger sends messages in the &lt;code&gt;django&lt;/code&gt; hierarchy (except &lt;code&gt;django.server&lt;/code&gt;) at the &lt;code&gt;INFO&lt;/code&gt; level or higher to the console.</source>
          <target state="translated">的 &lt;code&gt;django&lt;/code&gt; 的记录器发来的消息 &lt;code&gt;django&lt;/code&gt; 层次结构（除了 &lt;code&gt;django.server&lt;/code&gt; 在） &lt;code&gt;INFO&lt;/code&gt; 级别或更高级别到控制台。</target>
        </trans-unit>
        <trans-unit id="a8e9d08c01f536decd3318f78da920b131d4d144" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;django&lt;/code&gt; logger sends messages in the &lt;code&gt;django&lt;/code&gt; hierarchy (except &lt;code&gt;django.server&lt;/code&gt;) with &lt;code&gt;ERROR&lt;/code&gt; or &lt;code&gt;CRITICAL&lt;/code&gt; level to &lt;a href=&quot;#django.utils.log.AdminEmailHandler&quot;&gt;&lt;code&gt;AdminEmailHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">的 &lt;code&gt;django&lt;/code&gt; 的记录器发来的消息 &lt;code&gt;django&lt;/code&gt; 层次结构（除了 &lt;code&gt;django.server&lt;/code&gt; ）与 &lt;code&gt;ERROR&lt;/code&gt; 或 &lt;code&gt;CRITICAL&lt;/code&gt; 水平&lt;a href=&quot;#django.utils.log.AdminEmailHandler&quot;&gt; &lt;code&gt;AdminEmailHandler&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b409aa09cbe33e796179e11ffc5cdf9cc21b26c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ds_input&lt;/code&gt; dictionary</source>
          <target state="translated">该 &lt;code&gt;ds_input&lt;/code&gt; 词典</target>
        </trans-unit>
        <trans-unit id="9070debf7227bd168fc7e1983cb351125bcb6837" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;email&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; parameters were made optional.</source>
          <target state="translated">该 &lt;code&gt;email&lt;/code&gt; 和 &lt;code&gt;password&lt;/code&gt; 参数为可选。</target>
        </trans-unit>
        <trans-unit id="bbe92c5fd85ab431e21579896b995263bf4f6366" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;encoder&lt;/code&gt;, which defaults to &lt;a href=&quot;../topics/serialization#django.core.serializers.json.DjangoJSONEncoder&quot;&gt;&lt;code&gt;django.core.serializers.json.DjangoJSONEncoder&lt;/code&gt;&lt;/a&gt;, will be used to serialize the data. See &lt;a href=&quot;../topics/serialization#serialization-formats-json&quot;&gt;JSON serialization&lt;/a&gt; for more details about this serializer.</source>
          <target state="translated">默认使用&lt;a href=&quot;../topics/serialization#django.core.serializers.json.DjangoJSONEncoder&quot;&gt; &lt;code&gt;django.core.serializers.json.DjangoJSONEncoder&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;encoder&lt;/code&gt; 将用于序列化数据。有关此序列&lt;a href=&quot;../topics/serialization#serialization-formats-json&quot;&gt;化&lt;/a&gt;程序的更多详细信息，请参见JSON序列化。</target>
        </trans-unit>
        <trans-unit id="1ce87d8775873b615bca016e8e0bf32cf991c005" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;enforce_csrf_checks&lt;/code&gt; argument can be used to test CSRF protection (see above).</source>
          <target state="translated">所述 &lt;code&gt;enforce_csrf_checks&lt;/code&gt; 参数可以被用来测试CSRF保护（参见上文）。</target>
        </trans-unit>
        <trans-unit id="d37cd3506d938c6459bca470103356dacd07f429" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;environ&lt;/code&gt; dictionary provided to the request.</source>
          <target state="translated">提供给请求的 &lt;code&gt;environ&lt;/code&gt; 字典。</target>
        </trans-unit>
        <trans-unit id="ff28e6fc9e2e8861fb89838e679469506d760422" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;error&lt;/code&gt; argument can be a string, or preferably an instance of &lt;code&gt;ValidationError&lt;/code&gt;. See &lt;a href=&quot;validation#raising-validation-error&quot;&gt;Raising ValidationError&lt;/a&gt; for best practices when defining form errors.</source>
          <target state="translated">该 &lt;code&gt;error&lt;/code&gt; 参数可以是一个字符串，或优选的实例 &lt;code&gt;ValidationError&lt;/code&gt; 。有关定义表单错误的最佳实践，请参见&lt;a href=&quot;validation#raising-validation-error&quot;&gt;引发ValidationError&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a59a906a0f8ad980a261062dfdd7376f15de2056" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;error_messages&lt;/code&gt; argument lets you override the default messages that the field will raise. Pass in a dictionary with keys matching the error messages you want to override.</source>
          <target state="translated">使用 &lt;code&gt;error_messages&lt;/code&gt; 参数可以覆盖该字段将引发的默认消息。输入具有与您要覆盖的错误消息匹配的键的字典。</target>
        </trans-unit>
        <trans-unit id="529d7b0b3b8abc125f670d8d709d2108117fd718" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;error_messages&lt;/code&gt; argument lets you override the default messages that the field will raise. Pass in a dictionary with keys matching the error messages you want to override. For example, here is the default error message:</source>
          <target state="translated">使用 &lt;code&gt;error_messages&lt;/code&gt; 参数可以覆盖该字段将引发的默认消息。输入具有与您要覆盖的错误消息匹配的键的字典。例如，这是默认错误消息：</target>
        </trans-unit>
        <trans-unit id="4f63145fb6ff6fc3de368350fbbb7eeb95a679e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;escape_html&lt;/code&gt; parameter behaves as described in &lt;a href=&quot;#django.forms.Form.errors.as_json&quot;&gt;&lt;code&gt;Form.errors.as_json()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;escape_html&lt;/code&gt; 中所描述的行为的参数&lt;a href=&quot;#django.forms.Form.errors.as_json&quot;&gt; &lt;code&gt;Form.errors.as_json()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fddd9327a8323ea356bfd11d4a83957c2b92f7bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;expression&lt;/code&gt; argument is either a &lt;a href=&quot;database-functions#window-functions&quot;&gt;window function&lt;/a&gt;, an &lt;a href=&quot;querysets#aggregation-functions&quot;&gt;aggregate function&lt;/a&gt;, or an expression that&amp;rsquo;s compatible in a window clause.</source>
          <target state="translated">该 &lt;code&gt;expression&lt;/code&gt; 参数可以是一个&lt;a href=&quot;database-functions#window-functions&quot;&gt;窗函数&lt;/a&gt;，一个&lt;a href=&quot;querysets#aggregation-functions&quot;&gt;集合函数&lt;/a&gt;，或这是在一个窗口子句兼容的表达式。</target>
        </trans-unit>
        <trans-unit id="1dd21e868a58cb8aded4d3a24a87406e82e300d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;expressions&lt;/code&gt; positional arguments can include expressions or the names of model fields. They will be converted to a string and used as the &lt;code&gt;expressions&lt;/code&gt; placeholder within the &lt;code&gt;template&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;expressions&lt;/code&gt; 的位置参数可以包括表达式或模型字段的名称。它们将被转换为字符串，并用作 &lt;code&gt;template&lt;/code&gt; 的 &lt;code&gt;expressions&lt;/code&gt; 占位符。</target>
        </trans-unit>
        <trans-unit id="55be1543700537de67850b99d6a1b3674199e10d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extra&lt;/code&gt; argument acts the same as for &lt;a href=&quot;#django.test.Client.get&quot;&gt;&lt;code&gt;Client.get()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;extra&lt;/code&gt; 参数作用于相同&lt;a href=&quot;#django.test.Client.get&quot;&gt; &lt;code&gt;Client.get()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="86e5ce7d47bd10516322155266ef668a65d05dbd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extra&lt;/code&gt; keyword arguments parameter can be used to specify headers to be sent in the request. For example:</source>
          <target state="translated">该 &lt;code&gt;extra&lt;/code&gt; 参数可用于指定标题的关键字参数在请求被发送。例如：</target>
        </trans-unit>
        <trans-unit id="fa8fecf5c3d69c3dad5a5f4f5174789911878085" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extra_fields&lt;/code&gt; keyword arguments are passed through to the &lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;code&gt;__init__&lt;/code&gt; method to allow setting arbitrary fields on a &lt;a href=&quot;../../topics/auth/customizing#auth-custom-user&quot;&gt;custom user model&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;extra_fields&lt;/code&gt; 关键字参数是通过所传递的&lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;__init__&lt;/code&gt; 方法，以允许上设置任意字段&lt;a href=&quot;../../topics/auth/customizing#auth-custom-user&quot;&gt;定制的用户模型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d0cf16d9061426baa9f5929184a4c9e65561102d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fail_silently&lt;/code&gt; argument controls how the backend should handle errors. If &lt;code&gt;fail_silently&lt;/code&gt; is True, exceptions during the email sending process will be silently ignored.</source>
          <target state="translated">该 &lt;code&gt;fail_silently&lt;/code&gt; 参数控制后端如何处理错误。如果 &lt;code&gt;fail_silently&lt;/code&gt; 为True，则电子邮件发送过程中的异常将被静默忽略。</target>
        </trans-unit>
        <trans-unit id="227a1fc8697b21feca5fb3725d66b805b2610bd9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;field&lt;/code&gt; argument is the name of the field to which the errors should be added. If its value is &lt;code&gt;None&lt;/code&gt; the error will be treated as a non-field error as returned by &lt;a href=&quot;#django.forms.Form.non_field_errors&quot;&gt;&lt;code&gt;Form.non_field_errors()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;field&lt;/code&gt; 争论是应该添加错误的字段的名称。如果其值为 &lt;code&gt;None&lt;/code&gt; ,则该错误将被视为由&lt;a href=&quot;#django.forms.Form.non_field_errors&quot;&gt; &lt;code&gt;Form.non_field_errors()&lt;/code&gt; &lt;/a&gt;返回的非字段错误。</target>
        </trans-unit>
        <trans-unit id="3130b09cc5888f4344b4fb96a856974a85cd9d6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;field_options&lt;/code&gt; dictionary can have the following keys:</source>
          <target state="translated">该 &lt;code&gt;field_options&lt;/code&gt; 字典可以包含以下键值：</target>
        </trans-unit>
        <trans-unit id="9ef24f76914696345a84cdc8c99b23562b9f5c7a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fields&lt;/code&gt; attribute works the same way as the &lt;code&gt;fields&lt;/code&gt; attribute on the inner &lt;code&gt;Meta&lt;/code&gt; class on &lt;a href=&quot;../forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt;. Unless you define the form class in another way, the attribute is required and the view will raise an &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt;&lt;code&gt;ImproperlyConfigured&lt;/code&gt;&lt;/a&gt; exception if it&amp;rsquo;s not.</source>
          <target state="translated">该 &lt;code&gt;fields&lt;/code&gt; 属性的工作方式相同 &lt;code&gt;fields&lt;/code&gt; 在内属性 &lt;code&gt;Meta&lt;/code&gt; 阶级&lt;a href=&quot;../forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt;。除非您以其他方式定义表单类，否则该属性是必需的，并且如果不是，则该视图将引发&lt;a href=&quot;../../ref/exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt; &lt;code&gt;ImproperlyConfigured&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="28d3f4226bdb078eeb9c2c2f412780c2f6769345" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fields&lt;/code&gt; option accepts the same types of values as &lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_display&quot;&gt;&lt;code&gt;list_display&lt;/code&gt;&lt;/a&gt;, except that callables aren&amp;rsquo;t accepted. Names of model and model admin methods will only be used if they&amp;rsquo;re listed in &lt;a href=&quot;#django.contrib.admin.ModelAdmin.readonly_fields&quot;&gt;&lt;code&gt;readonly_fields&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;fields&lt;/code&gt; 选项接受相同类型的值作为&lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_display&quot;&gt; &lt;code&gt;list_display&lt;/code&gt; &lt;/a&gt;，不同之处在于可调用不被接受。只有在&lt;a href=&quot;#django.contrib.admin.ModelAdmin.readonly_fields&quot;&gt; &lt;code&gt;readonly_fields&lt;/code&gt; 中&lt;/a&gt;列出了模型和模型管理方法的名称时，才使用它们。</target>
        </trans-unit>
        <trans-unit id="8ea4da011d346501d0e2995dfa66cd403498de86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filename&lt;/code&gt; argument may include a path as returned by &lt;a href=&quot;../models/fields#django.db.models.FileField.upload_to&quot;&gt;&lt;code&gt;FileField.upload_to&lt;/code&gt;&lt;/a&gt;. In that case, the path won&amp;rsquo;t be passed to &lt;a href=&quot;../../howto/custom-file-storage#django.core.files.storage.get_valid_name&quot;&gt;&lt;code&gt;get_valid_name()&lt;/code&gt;&lt;/a&gt; but will be prepended back to the resulting name.</source>
          <target state="translated">该 &lt;code&gt;filename&lt;/code&gt; 参数可能包括路径通过返回的&lt;a href=&quot;../models/fields#django.db.models.FileField.upload_to&quot;&gt; &lt;code&gt;FileField.upload_to&lt;/code&gt; &lt;/a&gt;。在这种情况下，该路径将不会传递给&lt;a href=&quot;../../howto/custom-file-storage#django.core.files.storage.get_valid_name&quot;&gt; &lt;code&gt;get_valid_name()&lt;/code&gt; ,&lt;/a&gt;而是会重新添加回结果名称。</target>
        </trans-unit>
        <trans-unit id="5f5bc8df51bb2770da0a361084bd71b5da2e6c43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filter&lt;/code&gt; argument takes a &lt;a href=&quot;querysets#django.db.models.Q&quot;&gt;&lt;code&gt;Q object&lt;/code&gt;&lt;/a&gt; that&amp;rsquo;s used to filter the rows that are aggregated. See &lt;a href=&quot;conditional-expressions#conditional-aggregation&quot;&gt;Conditional aggregation&lt;/a&gt; and &lt;a href=&quot;../../topics/db/aggregation#filtering-on-annotations&quot;&gt;Filtering on annotations&lt;/a&gt; for example usage.</source>
          <target state="translated">的 &lt;code&gt;filter&lt;/code&gt; 参数采用一个&lt;a href=&quot;querysets#django.db.models.Q&quot;&gt; &lt;code&gt;Q object&lt;/code&gt; &lt;/a&gt;，这些会用来过滤被聚合的行。有关示例用法，请参见&lt;a href=&quot;conditional-expressions#conditional-aggregation&quot;&gt;条件聚合&lt;/a&gt;和&lt;a href=&quot;../../topics/db/aggregation#filtering-on-annotations&quot;&gt;对注释&lt;/a&gt;进行过滤。</target>
        </trans-unit>
        <trans-unit id="4b860cb57da1e159f20dd3a4aff5c562c40d1ff7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;follow&lt;/code&gt; parameter is not supported.</source>
          <target state="translated">在 &lt;code&gt;follow&lt;/code&gt; 不支持的参数。</target>
        </trans-unit>
        <trans-unit id="e695baa760ebfa7a7a3af6b0c77d3eebe9ec9770" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;follow&lt;/code&gt;, &lt;code&gt;secure&lt;/code&gt; and &lt;code&gt;extra&lt;/code&gt; arguments act the same as for &lt;a href=&quot;#django.test.Client.get&quot;&gt;&lt;code&gt;Client.get()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在 &lt;code&gt;follow&lt;/code&gt; ， &lt;code&gt;secure&lt;/code&gt; 和 &lt;code&gt;extra&lt;/code&gt; 的参数行事一样&lt;a href=&quot;#django.test.Client.get&quot;&gt; &lt;code&gt;Client.get()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="16c69e9db7109cd1093b97a5f1e8d115d3decb1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;follow&lt;/code&gt;, &lt;code&gt;secure&lt;/code&gt;, and &lt;code&gt;extra&lt;/code&gt; arguments act the same as for &lt;a href=&quot;#django.test.Client.get&quot;&gt;&lt;code&gt;Client.get()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在 &lt;code&gt;follow&lt;/code&gt; ， &lt;code&gt;secure&lt;/code&gt; ，以及 &lt;code&gt;extra&lt;/code&gt; 的参数行事一样&lt;a href=&quot;#django.test.Client.get&quot;&gt; &lt;code&gt;Client.get()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="42a2b17496e4da60c33885e9950835e19b0694a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;for&lt;/code&gt; tag can take an optional &lt;code&gt;{% empty %}&lt;/code&gt; clause whose text is displayed if the given array is empty or could not be found:</source>
          <target state="translated">该 &lt;code&gt;for&lt;/code&gt; 标签可以采取一个可选的 &lt;code&gt;{% empty %}&lt;/code&gt; ，其文本显示，如果给定的数组为空或找不到条款：</target>
        </trans-unit>
        <trans-unit id="f9b43ede79c55c7b49dd8a9f31b2c61ad839c7c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;for_concrete_model&lt;/code&gt; argument corresponds to the &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey.for_concrete_model&quot;&gt;&lt;code&gt;for_concrete_model&lt;/code&gt;&lt;/a&gt; argument on &lt;code&gt;GenericForeignKey&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;for_concrete_model&lt;/code&gt; 参数对应于&lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey.for_concrete_model&quot;&gt; &lt;code&gt;for_concrete_model&lt;/code&gt; &lt;/a&gt;的说法 &lt;code&gt;GenericForeignKey&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="03936ee48140a19fe86e917e4c8c5ca1da003130" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;form_kwargs&lt;/code&gt; may also depend on the specific form instance. The formset base class provides a &lt;code&gt;get_form_kwargs&lt;/code&gt; method. The method takes a single argument - the index of the form in the formset. The index is &lt;code&gt;None&lt;/code&gt; for the &lt;a href=&quot;#empty-form&quot;&gt;empty_form&lt;/a&gt;:</source>
          <target state="translated">该 &lt;code&gt;form_kwargs&lt;/code&gt; 还可以依赖于具体形式的实例。表单集基类提供了一个 &lt;code&gt;get_form_kwargs&lt;/code&gt; 方法。该方法采用一个参数-表单在表单集中的索引。对于&lt;a href=&quot;#empty-form&quot;&gt;empty_form&lt;/a&gt;，索引为 &lt;code&gt;None&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4e81df20d77b84a800ef455ddf70b8a56f1656b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format&lt;/code&gt; parameter changes the output format from the databases&amp;rsquo;s default, usually text-based. PostgreSQL supports &lt;code&gt;'TEXT'&lt;/code&gt;, &lt;code&gt;'JSON'&lt;/code&gt;, &lt;code&gt;'YAML'&lt;/code&gt;, and &lt;code&gt;'XML'&lt;/code&gt;. MySQL supports &lt;code&gt;'TEXT'&lt;/code&gt; (also called &lt;code&gt;'TRADITIONAL'&lt;/code&gt;) and &lt;code&gt;'JSON'&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;format&lt;/code&gt; 参数改变来自数据库的默认的输出格式，通常是基于文本的。PostgreSQL支持 &lt;code&gt;'TEXT'&lt;/code&gt; ， &lt;code&gt;'JSON'&lt;/code&gt; ， &lt;code&gt;'YAML'&lt;/code&gt; 和 &lt;code&gt;'XML'&lt;/code&gt; 。MySQL支持 &lt;code&gt;'TEXT'&lt;/code&gt; （也称为 &lt;code&gt;'TRADITIONAL'&lt;/code&gt; ）和 &lt;code&gt;'JSON'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b6b4b6669c1531ecc3f3d532dce241acd94fa09d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format&lt;/code&gt; parameter changes the output format from the databases&amp;rsquo;s default, which is usually text-based. PostgreSQL supports &lt;code&gt;'TEXT'&lt;/code&gt;, &lt;code&gt;'JSON'&lt;/code&gt;, &lt;code&gt;'YAML'&lt;/code&gt;, and &lt;code&gt;'XML'&lt;/code&gt; formats. MariaDB and MySQL support &lt;code&gt;'TEXT'&lt;/code&gt; (also called &lt;code&gt;'TRADITIONAL'&lt;/code&gt;) and &lt;code&gt;'JSON'&lt;/code&gt; formats. MySQL 8.0.16+ also supports an improved &lt;code&gt;'TREE'&lt;/code&gt; format, which is similar to PostgreSQL&amp;rsquo;s &lt;code&gt;'TEXT'&lt;/code&gt; output and is used by default, if supported.</source>
          <target state="translated">该 &lt;code&gt;format&lt;/code&gt; 参数改变来自数据库的默认，这通常是基于文本的输出格式。PostgreSQL支持 &lt;code&gt;'TEXT'&lt;/code&gt; ， &lt;code&gt;'JSON'&lt;/code&gt; ， &lt;code&gt;'YAML'&lt;/code&gt; 和 &lt;code&gt;'XML'&lt;/code&gt; 格式。MariaDB和MySQL支持 &lt;code&gt;'TEXT'&lt;/code&gt; （也称为 &lt;code&gt;'TRADITIONAL'&lt;/code&gt; ）和 &lt;code&gt;'JSON'&lt;/code&gt; 格式。MySQL 8.0.16+还支持改进的 &lt;code&gt;'TREE'&lt;/code&gt; 格式，该格式类似于PostgreSQL的 &lt;code&gt;'TEXT'&lt;/code&gt; 输出，如果支持，则默认使用。</target>
        </trans-unit>
        <trans-unit id="37ea6e91c6855a52f5e223daf2a9f1560e5bc2b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format&lt;/code&gt; string is a normal Python formatting string describing the details that are to be output on each logging line. The full list of detail that can be output can be found in &lt;a href=&quot;https://docs.python.org/3/library/logging.html#formatter-objects&quot;&gt;Formatter Objects&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;format&lt;/code&gt; 串是描述要被每个记录线输出的详细情况的正常的Python格式化字符串。可以输出的详细信息的完整列表可以在&lt;a href=&quot;https://docs.python.org/3/library/logging.html#formatter-objects&quot;&gt;Formatter Objects中&lt;/a&gt;找到。</target>
        </trans-unit>
        <trans-unit id="00b1bf604206212572a560228da76cd4978976e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;formfield_for_foreignkey&lt;/code&gt; method on a &lt;code&gt;ModelAdmin&lt;/code&gt; allows you to override the default formfield for a foreign keys field. For example, to return a subset of objects for this foreign key field based on the user:</source>
          <target state="translated">该 &lt;code&gt;formfield_for_foreignkey&lt;/code&gt; 上的一个方法 &lt;code&gt;ModelAdmin&lt;/code&gt; 可以让你覆盖默认formfield的外键字段。例如，要根据用户返回此外键字段的对象子集：</target>
        </trans-unit>
        <trans-unit id="8af953dad1272529a6ebe31a577aca6d0a58e0a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;frame&lt;/code&gt; parameter specifies which other rows that should be used in the computation. See &lt;a href=&quot;#window-frames&quot;&gt;Frames&lt;/a&gt; for details.</source>
          <target state="translated">的 &lt;code&gt;frame&lt;/code&gt; 参数指定应在计算中使用哪个其他行。有关详细信息，请参见&lt;a href=&quot;#window-frames&quot;&gt;框架&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ee79af5100a74898bf0e1d325662fad3184f08fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;from_db()&lt;/code&gt; method can be used to customize model instance creation when loading from the database.</source>
          <target state="translated">所述 &lt;code&gt;from_db()&lt;/code&gt; 方法可用于定制模型实例的创建时从数据库加载。</target>
        </trans-unit>
        <trans-unit id="0fefbbb7a32c81388579de62a4f48c1322432786" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;template&lt;/code&gt;, and &lt;code&gt;arg_joiner&lt;/code&gt; keywords can be used to replace the attributes of the same name without having to define your own class. &lt;code&gt;output_field&lt;/code&gt; can be used to define the expected return type.</source>
          <target state="translated">该 &lt;code&gt;function&lt;/code&gt; ， &lt;code&gt;template&lt;/code&gt; 和 &lt;code&gt;arg_joiner&lt;/code&gt; 关键字可以用来替换同名的属性，而不必定义自己的类。 &lt;code&gt;output_field&lt;/code&gt; 可用于定义期望的返回类型。</target>
        </trans-unit>
        <trans-unit id="4af005ecc55096de924e70b463ab323db6f99517" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;geodjango&lt;/code&gt; project settings are stored in the &lt;code&gt;geodjango/settings.py&lt;/code&gt; file. Edit the database connection settings to match your setup:</source>
          <target state="translated">该 &lt;code&gt;geodjango&lt;/code&gt; 项目设置存储在 &lt;code&gt;geodjango/settings.py&lt;/code&gt; 文件。编辑数据库连接设置以匹配您的设置：</target>
        </trans-unit>
        <trans-unit id="6261e5e19b0103508a4f772f93affa6b3ea47bc1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;geojson&lt;/code&gt; serializer is not meant for round-tripping data, as it has no deserializer equivalent. For example, you cannot use &lt;a href=&quot;../../django-admin#django-admin-loaddata&quot;&gt;&lt;code&gt;loaddata&lt;/code&gt;&lt;/a&gt; to reload the output produced by this serializer. If you plan to reload the outputted data, use the plain &lt;a href=&quot;../../../topics/serialization#serialization-formats-json&quot;&gt;json serializer&lt;/a&gt; instead.</source>
          <target state="translated">该 &lt;code&gt;geojson&lt;/code&gt; 串行并不意味着往返的数据，因为它没有解串器等同。例如，您不能使用&lt;a href=&quot;../../django-admin#django-admin-loaddata&quot;&gt; &lt;code&gt;loaddata&lt;/code&gt; &lt;/a&gt;重新加载此序列化程序产生的输出。如果您打算重新加载输出的数据，请改用普通的&lt;a href=&quot;../../../topics/serialization#serialization-formats-json&quot;&gt;json序列化程序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="70bc251219a3c6361014e07b174b00adc0f70011" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;post()&lt;/code&gt; methods both return a &lt;code&gt;Response&lt;/code&gt; object. This &lt;code&gt;Response&lt;/code&gt; object is &lt;em&gt;not&lt;/em&gt; the same as the &lt;code&gt;HttpResponse&lt;/code&gt; object returned by Django views; the test response object has some additional data useful for test code to verify.</source>
          <target state="translated">该 &lt;code&gt;get()&lt;/code&gt; 和 &lt;code&gt;post()&lt;/code&gt; 方法均返回一个 &lt;code&gt;Response&lt;/code&gt; 对象。此 &lt;code&gt;Response&lt;/code&gt; 对象是&lt;em&gt;不&lt;/em&gt;一样的 &lt;code&gt;HttpResponse&lt;/code&gt; 通过Django的视图返回的对象; 测试响应对象还有一些其他数据，可用于验证测试代码。</target>
        </trans-unit>
        <trans-unit id="4644e38a5b4ed90e43cb4a95b5b04a9ad2295bd0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_autocomplete_fields()&lt;/code&gt; method is given the &lt;code&gt;HttpRequest&lt;/code&gt; and is expected to return a &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;tuple&lt;/code&gt; of field names that will be displayed with an autocomplete widget as described above in the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.autocomplete_fields&quot;&gt;&lt;code&gt;ModelAdmin.autocomplete_fields&lt;/code&gt;&lt;/a&gt; section.</source>
          <target state="translated">所述 &lt;code&gt;get_autocomplete_fields()&lt;/code&gt; 方法给出 &lt;code&gt;HttpRequest&lt;/code&gt; ，预计返回一个 &lt;code&gt;list&lt;/code&gt; 或 &lt;code&gt;tuple&lt;/code&gt; 将与一个自动完成构件如上面所描述的被显示的字段名称的&lt;a href=&quot;#django.contrib.admin.ModelAdmin.autocomplete_fields&quot;&gt; &lt;code&gt;ModelAdmin.autocomplete_fields&lt;/code&gt; &lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="5176b83061fe07acd35cb8583738ca8101f44b96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_exclude&lt;/code&gt; method is given the &lt;code&gt;HttpRequest&lt;/code&gt; and the &lt;code&gt;obj&lt;/code&gt; being edited (or &lt;code&gt;None&lt;/code&gt; on an add form) and is expected to return a list of fields, as described in &lt;a href=&quot;#django.contrib.admin.ModelAdmin.exclude&quot;&gt;&lt;code&gt;ModelAdmin.exclude&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;get_exclude&lt;/code&gt; 方法给出 &lt;code&gt;HttpRequest&lt;/code&gt; 和 &lt;code&gt;obj&lt;/code&gt; 被编辑（或 &lt;code&gt;None&lt;/code&gt; 附加形式），并预期返回字段的列表，如在描述&lt;a href=&quot;#django.contrib.admin.ModelAdmin.exclude&quot;&gt; &lt;code&gt;ModelAdmin.exclude&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="755e82fff8b7899063270b4eb42e60c723f98e63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_fields&lt;/code&gt; method is given the &lt;code&gt;HttpRequest&lt;/code&gt; and the &lt;code&gt;obj&lt;/code&gt; being edited (or &lt;code&gt;None&lt;/code&gt; on an add form) and is expected to return a list of fields, as described above in the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.fields&quot;&gt;&lt;code&gt;ModelAdmin.fields&lt;/code&gt;&lt;/a&gt; section.</source>
          <target state="translated">该 &lt;code&gt;get_fields&lt;/code&gt; 方法给出 &lt;code&gt;HttpRequest&lt;/code&gt; 和 &lt;code&gt;obj&lt;/code&gt; 被编辑（或 &lt;code&gt;None&lt;/code&gt; 附加形式），并预期返回字段的列表，如上面所描述的&lt;a href=&quot;#django.contrib.admin.ModelAdmin.fields&quot;&gt; &lt;code&gt;ModelAdmin.fields&lt;/code&gt; &lt;/a&gt;部。</target>
        </trans-unit>
        <trans-unit id="198991e31c914bc986ef1174446070721aea8002" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_fieldsets&lt;/code&gt; method is given the &lt;code&gt;HttpRequest&lt;/code&gt; and the &lt;code&gt;obj&lt;/code&gt; being edited (or &lt;code&gt;None&lt;/code&gt; on an add form) and is expected to return a list of two-tuples, in which each two-tuple represents a &lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt; on the admin form page, as described above in the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.fieldsets&quot;&gt;&lt;code&gt;ModelAdmin.fieldsets&lt;/code&gt;&lt;/a&gt; section.</source>
          <target state="translated">该 &lt;code&gt;get_fieldsets&lt;/code&gt; 方法给出 &lt;code&gt;HttpRequest&lt;/code&gt; 和 &lt;code&gt;obj&lt;/code&gt; 被编辑（或 &lt;code&gt;None&lt;/code&gt; 附加形式），并预期返回两元组的列表，其中，每两个元组表示 &lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt; 管理员表单页面上，如以上在&lt;a href=&quot;#django.contrib.admin.ModelAdmin.fieldsets&quot;&gt; &lt;code&gt;ModelAdmin.fieldsets&lt;/code&gt; &lt;/a&gt;部分中进行了介绍。</target>
        </trans-unit>
        <trans-unit id="00df08ce04cf3666f946909512833c065f35fa46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_format&lt;/code&gt; function has access to the configured i18n formatting settings and can retrieve the format string for a given setting name:</source>
          <target state="translated">该 &lt;code&gt;get_format&lt;/code&gt; 函数访问配置的国际化格式设置，可以检索给定设置名称格式字符串：</target>
        </trans-unit>
        <trans-unit id="8b40622097cc8f4cbe32e1fa473f94495c878dfb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_inline_instances&lt;/code&gt; method is given the &lt;code&gt;HttpRequest&lt;/code&gt; and the &lt;code&gt;obj&lt;/code&gt; being edited (or &lt;code&gt;None&lt;/code&gt; on an add form) and is expected to return a &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;tuple&lt;/code&gt; of &lt;a href=&quot;#django.contrib.admin.InlineModelAdmin&quot;&gt;&lt;code&gt;InlineModelAdmin&lt;/code&gt;&lt;/a&gt; objects, as described below in the &lt;a href=&quot;#django.contrib.admin.InlineModelAdmin&quot;&gt;&lt;code&gt;InlineModelAdmin&lt;/code&gt;&lt;/a&gt; section. For example, the following would return inlines without the default filtering based on add, change, delete, and view permissions:</source>
          <target state="translated">该 &lt;code&gt;get_inline_instances&lt;/code&gt; 方法给出 &lt;code&gt;HttpRequest&lt;/code&gt; 和 &lt;code&gt;obj&lt;/code&gt; 被编辑（或 &lt;code&gt;None&lt;/code&gt; 附加形式），并预期返回一个 &lt;code&gt;list&lt;/code&gt; 或 &lt;code&gt;tuple&lt;/code&gt; 的&lt;a href=&quot;#django.contrib.admin.InlineModelAdmin&quot;&gt; &lt;code&gt;InlineModelAdmin&lt;/code&gt; &lt;/a&gt;对象，如以下所描述的&lt;a href=&quot;#django.contrib.admin.InlineModelAdmin&quot;&gt; &lt;code&gt;InlineModelAdmin&lt;/code&gt; &lt;/a&gt;部。例如，以下代码将返回内联而没有基于添加，更改，删除和查看权限的默认过滤：</target>
        </trans-unit>
        <trans-unit id="951e692bee930fd4e9e3bfb396dc06eef242c2b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_inlines&lt;/code&gt; method is given the &lt;code&gt;HttpRequest&lt;/code&gt; and the &lt;code&gt;obj&lt;/code&gt; being edited (or &lt;code&gt;None&lt;/code&gt; on an add form) and is expected to return an iterable of inlines. You can override this method to dynamically add inlines based on the request or model instance instead of specifying them in &lt;a href=&quot;#django.contrib.admin.ModelAdmin.inlines&quot;&gt;&lt;code&gt;ModelAdmin.inlines&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;get_inlines&lt;/code&gt; 方法给出 &lt;code&gt;HttpRequest&lt;/code&gt; 和 &lt;code&gt;obj&lt;/code&gt; 被编辑（或 &lt;code&gt;None&lt;/code&gt; 附加形式），并预期返回可迭代内联的。您可以重写此方法以根据请求或模型实例动态添加内联，而不是在&lt;a href=&quot;#django.contrib.admin.ModelAdmin.inlines&quot;&gt; &lt;code&gt;ModelAdmin.inlines&lt;/code&gt; &lt;/a&gt;中指定它们。</target>
        </trans-unit>
        <trans-unit id="3040761ce63b148627de401548cd68bb71755f08" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_language_info()&lt;/code&gt; function provides detailed information about languages:</source>
          <target state="translated">该 &lt;code&gt;get_language_info()&lt;/code&gt; 函数提供了有关语言的详细信息：</target>
        </trans-unit>
        <trans-unit id="852a4619c006a3651094ececb52b7e69441578d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_list_display&lt;/code&gt; method is given the &lt;code&gt;HttpRequest&lt;/code&gt; and is expected to return a &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;tuple&lt;/code&gt; of field names that will be displayed on the changelist view as described above in the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_display&quot;&gt;&lt;code&gt;ModelAdmin.list_display&lt;/code&gt;&lt;/a&gt; section.</source>
          <target state="translated">该 &lt;code&gt;get_list_display&lt;/code&gt; 方法给出 &lt;code&gt;HttpRequest&lt;/code&gt; ，预计返回一个 &lt;code&gt;list&lt;/code&gt; 或 &lt;code&gt;tuple&lt;/code&gt; ，这将在如上面所描述的变更列表视图中显示的字段名称的&lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_display&quot;&gt; &lt;code&gt;ModelAdmin.list_display&lt;/code&gt; &lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="3b755ef879e69ace6824c12c62b70e3e1c468d81" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_list_display_links&lt;/code&gt; method is given the &lt;code&gt;HttpRequest&lt;/code&gt; and the &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;tuple&lt;/code&gt; returned by &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_list_display&quot;&gt;&lt;code&gt;ModelAdmin.get_list_display()&lt;/code&gt;&lt;/a&gt;. It is expected to return either &lt;code&gt;None&lt;/code&gt; or a &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;tuple&lt;/code&gt; of field names on the changelist that will be linked to the change view, as described in the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_display_links&quot;&gt;&lt;code&gt;ModelAdmin.list_display_links&lt;/code&gt;&lt;/a&gt; section.</source>
          <target state="translated">该 &lt;code&gt;get_list_display_links&lt;/code&gt; 方法给出 &lt;code&gt;HttpRequest&lt;/code&gt; 和 &lt;code&gt;list&lt;/code&gt; 或 &lt;code&gt;tuple&lt;/code&gt; 通过返回&lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_list_display&quot;&gt; &lt;code&gt;ModelAdmin.get_list_display()&lt;/code&gt; &lt;/a&gt;。如&lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_display_links&quot;&gt; &lt;code&gt;ModelAdmin.list_display_links&lt;/code&gt; &lt;/a&gt;部分中所述，预期将返回 &lt;code&gt;None&lt;/code&gt; 或将链接到变更视图的变更列表上的字段名称 &lt;code&gt;list&lt;/code&gt; 或 &lt;code&gt;tuple&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffbcea4b076e289d3280ca8b246b0d775f7dc6f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_list_filter&lt;/code&gt; method is given the &lt;code&gt;HttpRequest&lt;/code&gt; and is expected to return the same kind of sequence type as for the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_filter&quot;&gt;&lt;code&gt;list_filter&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">该 &lt;code&gt;get_list_filter&lt;/code&gt; 方法给出 &lt;code&gt;HttpRequest&lt;/code&gt; 并有望重返同一种序列类型作为&lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_filter&quot;&gt; &lt;code&gt;list_filter&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="86d3756bff1c41f38b16948ade80e5e01b268f81" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_list_select_related&lt;/code&gt; method is given the &lt;code&gt;HttpRequest&lt;/code&gt; and should return a boolean or list as &lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_select_related&quot;&gt;&lt;code&gt;ModelAdmin.list_select_related&lt;/code&gt;&lt;/a&gt; does.</source>
          <target state="translated">该 &lt;code&gt;get_list_select_related&lt;/code&gt; 方法给出 &lt;code&gt;HttpRequest&lt;/code&gt; 和应该返回一个布尔值或列表&lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_select_related&quot;&gt; &lt;code&gt;ModelAdmin.list_select_related&lt;/code&gt; &lt;/a&gt;一样。</target>
        </trans-unit>
        <trans-unit id="5fad6a9317395add4e08220a598d083ef68feb4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_or_create()&lt;/code&gt; method has similar error behavior to &lt;a href=&quot;#django.db.models.query.QuerySet.create&quot;&gt;&lt;code&gt;create()&lt;/code&gt;&lt;/a&gt; when you&amp;rsquo;re using manually specified primary keys. If an object needs to be created and the key already exists in the database, an &lt;a href=&quot;../exceptions#django.db.IntegrityError&quot;&gt;&lt;code&gt;IntegrityError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">使用手动指定的主键时， &lt;code&gt;get_or_create()&lt;/code&gt; 方法具有与&lt;a href=&quot;#django.db.models.query.QuerySet.create&quot;&gt; &lt;code&gt;create()&lt;/code&gt; &lt;/a&gt;类似的错误行为。如果需要创建一个对象并且该密钥已经存在于数据库中，则将引发&lt;a href=&quot;../exceptions#django.db.IntegrityError&quot;&gt; &lt;code&gt;IntegrityError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8edb8c859b219486db4db13b0c0ff3a589490539" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_ordering&lt;/code&gt; method takes a &lt;code&gt;request&lt;/code&gt; as parameter and is expected to return a &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;tuple&lt;/code&gt; for ordering similar to the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.ordering&quot;&gt;&lt;code&gt;ordering&lt;/code&gt;&lt;/a&gt; attribute. For example:</source>
          <target state="translated">该 &lt;code&gt;get_ordering&lt;/code&gt; 方法需要一个 &lt;code&gt;request&lt;/code&gt; 为参数和预期返回一个 &lt;code&gt;list&lt;/code&gt; 或 &lt;code&gt;tuple&lt;/code&gt; 订购类似&lt;a href=&quot;#django.contrib.admin.ModelAdmin.ordering&quot;&gt; &lt;code&gt;ordering&lt;/code&gt; &lt;/a&gt;属性。例如：</target>
        </trans-unit>
        <trans-unit id="64d1d66947d4db50472f5745c27c90cafbf119f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_prepopulated_fields&lt;/code&gt; method is given the &lt;code&gt;HttpRequest&lt;/code&gt; and the &lt;code&gt;obj&lt;/code&gt; being edited (or &lt;code&gt;None&lt;/code&gt; on an add form) and is expected to return a &lt;code&gt;dictionary&lt;/code&gt;, as described above in the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.prepopulated_fields&quot;&gt;&lt;code&gt;ModelAdmin.prepopulated_fields&lt;/code&gt;&lt;/a&gt; section.</source>
          <target state="translated">该 &lt;code&gt;get_prepopulated_fields&lt;/code&gt; 方法给出 &lt;code&gt;HttpRequest&lt;/code&gt; 和 &lt;code&gt;obj&lt;/code&gt; 被编辑（或 &lt;code&gt;None&lt;/code&gt; 附加形式），并预期返回一个 &lt;code&gt;dictionary&lt;/code&gt; ，如上面所描述的&lt;a href=&quot;#django.contrib.admin.ModelAdmin.prepopulated_fields&quot;&gt; &lt;code&gt;ModelAdmin.prepopulated_fields&lt;/code&gt; &lt;/a&gt;部。</target>
        </trans-unit>
        <trans-unit id="f2c7d836a850e61a7cc9eac0531c6c15a726119c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_queryset&lt;/code&gt; method on a &lt;code&gt;ModelAdmin&lt;/code&gt; returns a &lt;a href=&quot;../../models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; of all model instances that can be edited by the admin site. One use case for overriding this method is to show objects owned by the logged-in user:</source>
          <target state="translated">该 &lt;code&gt;get_queryset&lt;/code&gt; 上的方法 &lt;code&gt;ModelAdmin&lt;/code&gt; 返回&lt;a href=&quot;../../models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;，可以通过管理界面进行编辑所有的模型实例。重写此方法的一个用例是显示登录用户拥有的对象：</target>
        </trans-unit>
        <trans-unit id="2808c552bcbc92b5c6cd5c6e8a9529417baedbc2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_readonly_fields&lt;/code&gt; method is given the &lt;code&gt;HttpRequest&lt;/code&gt; and the &lt;code&gt;obj&lt;/code&gt; being edited (or &lt;code&gt;None&lt;/code&gt; on an add form) and is expected to return a &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;tuple&lt;/code&gt; of field names that will be displayed as read-only, as described above in the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.readonly_fields&quot;&gt;&lt;code&gt;ModelAdmin.readonly_fields&lt;/code&gt;&lt;/a&gt; section.</source>
          <target state="translated">该 &lt;code&gt;get_readonly_fields&lt;/code&gt; 方法给出 &lt;code&gt;HttpRequest&lt;/code&gt; 和 &lt;code&gt;obj&lt;/code&gt; 被编辑（或 &lt;code&gt;None&lt;/code&gt; 附加形式），并预期返回一个 &lt;code&gt;list&lt;/code&gt; 或 &lt;code&gt;tuple&lt;/code&gt; 将被显示为只读字段名的，如上面所描述的&lt;a href=&quot;#django.contrib.admin.ModelAdmin.readonly_fields&quot;&gt; &lt;code&gt;ModelAdmin.readonly_fields&lt;/code&gt; &lt;/a&gt;部。</target>
        </trans-unit>
        <trans-unit id="40e4c35370b765d264ee5046e3e9c0fa2eba899f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_response&lt;/code&gt; callable provided by Django might be the actual view (if this is the last listed middleware) or it might be the next middleware in the chain. The current middleware doesn&amp;rsquo;t need to know or care what exactly it is, just that it represents whatever comes next.</source>
          <target state="translated">Django提供的 &lt;code&gt;get_response&lt;/code&gt; 可调用对象可能是实际视图（如果这是最后列出的中间件），或者可能是链中的下一个中间件。当前的中间件不需要知道或关心它到底是什么，只要它代表接下来要发生的事情即可。</target>
        </trans-unit>
        <trans-unit id="b42cf7b6677ddc723603ee6f8bf35ebe461c378d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_search_fields&lt;/code&gt; method is given the &lt;code&gt;HttpRequest&lt;/code&gt; and is expected to return the same kind of sequence type as for the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.search_fields&quot;&gt;&lt;code&gt;search_fields&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">该 &lt;code&gt;get_search_fields&lt;/code&gt; 方法给出 &lt;code&gt;HttpRequest&lt;/code&gt; 并有望重返同一种序列类型作为&lt;a href=&quot;#django.contrib.admin.ModelAdmin.search_fields&quot;&gt; &lt;code&gt;search_fields&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="b9c3233a6fe16b13e93695d98da3ffc24c66a93c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_search_results&lt;/code&gt; method modifies the list of objects displayed into those that match the provided search term. It accepts the request, a queryset that applies the current filters, and the user-provided search term. It returns a tuple containing a queryset modified to implement the search, and a boolean indicating if the results may contain duplicates.</source>
          <target state="translated">该 &lt;code&gt;get_search_results&lt;/code&gt; 方法修改的对象列表中显示为那些符合所提供的搜索词。它接受请求，应用当前过滤器的查询集以及用户提供的搜索词。它返回一个元组，其中包含为实现搜索而修改的queryset和一个布尔值，指示结果是否可能包含重复项。</target>
        </trans-unit>
        <trans-unit id="ac5d5c1b01fa74758fe1927836211bbe738b7378" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_sortable_by()&lt;/code&gt; method is passed the &lt;code&gt;HttpRequest&lt;/code&gt; and is expected to return a collection (e.g. &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;tuple&lt;/code&gt;, or &lt;code&gt;set&lt;/code&gt;) of field names that will be sortable in the change list page.</source>
          <target state="translated">该 &lt;code&gt;get_sortable_by()&lt;/code&gt; 方法通过 &lt;code&gt;HttpRequest&lt;/code&gt; ，预计返回一个集合（如 &lt;code&gt;list&lt;/code&gt; ， &lt;code&gt;tuple&lt;/code&gt; ，或者 &lt;code&gt;set&lt;/code&gt; 字段名，将在该列表页面排序的）。</target>
        </trans-unit>
        <trans-unit id="85e4efd30eb710f485b68af67a07b75591f48ecc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_urls&lt;/code&gt; method on a &lt;code&gt;ModelAdmin&lt;/code&gt; returns the URLs to be used for that ModelAdmin in the same way as a URLconf. Therefore you can extend them as documented in &lt;a href=&quot;../../../topics/http/urls&quot;&gt;URL dispatcher&lt;/a&gt;:</source>
          <target state="translated">所述 &lt;code&gt;get_urls&lt;/code&gt; 上的方法 &lt;code&gt;ModelAdmin&lt;/code&gt; 返回到用于以相同的方式作为URL配置其的ModelAdmin的网址。因此，您可以按照&lt;a href=&quot;../../../topics/http/urls&quot;&gt;URL调度程序中的&lt;/a&gt;说明扩展它们：</target>
        </trans-unit>
        <trans-unit id="4fa93c96fae27002f96fa896e99d9a22fc33c61c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get_user&lt;/code&gt; method takes a &lt;code&gt;user_id&lt;/code&gt; &amp;ndash; which could be a username, database ID or whatever, but has to be the primary key of your user object &amp;ndash; and returns a user object or &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;get_user&lt;/code&gt; 方法需要一个 &lt;code&gt;user_id&lt;/code&gt; 的 -这可能是一个用户名，数据库ID或什么的，但必须是你的用户对象的主键-并返回一个用户对象或 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="720b9b664b79d7bd448e6d9bcd4e8d3b07c4409a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;gettext&lt;/code&gt; function behaves similarly to the standard &lt;code&gt;gettext&lt;/code&gt; interface within your Python code:</source>
          <target state="translated">该 &lt;code&gt;gettext&lt;/code&gt; 的函数的行为类似于标准 &lt;code&gt;gettext&lt;/code&gt; 保存Python代码界面：</target>
        </trans-unit>
        <trans-unit id="78e83556dbbfdc2a626230db91da607d3375cab9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handle()&lt;/code&gt; method takes one or more &lt;code&gt;poll_ids&lt;/code&gt; and sets &lt;code&gt;poll.opened&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt; for each one. If the user referenced any nonexistent polls, a &lt;a href=&quot;#django.core.management.CommandError&quot;&gt;&lt;code&gt;CommandError&lt;/code&gt;&lt;/a&gt; is raised. The &lt;code&gt;poll.opened&lt;/code&gt; attribute does not exist in the &lt;a href=&quot;../intro/tutorial02&quot;&gt;tutorial&lt;/a&gt; and was added to &lt;code&gt;polls.models.Question&lt;/code&gt; for this example.</source>
          <target state="translated">所述 &lt;code&gt;handle()&lt;/code&gt; 方法使用一个或多个 &lt;code&gt;poll_ids&lt;/code&gt; 和套 &lt;code&gt;poll.opened&lt;/code&gt; 到 &lt;code&gt;False&lt;/code&gt; 对每一个。如果用户引用了任何不存在的民意测验，则会引发&lt;a href=&quot;#django.core.management.CommandError&quot;&gt; &lt;code&gt;CommandError&lt;/code&gt; &lt;/a&gt;。所述 &lt;code&gt;poll.opened&lt;/code&gt; 属性中不存在&lt;a href=&quot;../intro/tutorial02&quot;&gt;的教程&lt;/a&gt;，并加入到 &lt;code&gt;polls.models.Question&lt;/code&gt; 这个例子。</target>
        </trans-unit>
        <trans-unit id="2434f6311509e15e5576856722fd48f850d27218" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_changed()&lt;/code&gt; method is used to determine if the field value has changed from the initial value. Returns &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;has_changed()&lt;/code&gt; 方法用来确定字段值从初始值改变。返回 &lt;code&gt;True&lt;/code&gt; 或 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b7c784949b69451cfcd551cb296d2c319e3e23a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;help_text&lt;/code&gt; argument lets you specify descriptive text for this &lt;code&gt;Field&lt;/code&gt;. If you provide &lt;code&gt;help_text&lt;/code&gt;, it will be displayed next to the &lt;code&gt;Field&lt;/code&gt; when the &lt;code&gt;Field&lt;/code&gt; is rendered by one of the convenience &lt;code&gt;Form&lt;/code&gt; methods (e.g., &lt;code&gt;as_ul()&lt;/code&gt;).</source>
          <target state="translated">通过 &lt;code&gt;help_text&lt;/code&gt; 参数，您可以为此 &lt;code&gt;Field&lt;/code&gt; 指定描述性文本。如果你提供 &lt;code&gt;help_text&lt;/code&gt; ，将旁边显示的 &lt;code&gt;Field&lt;/code&gt; 时， &lt;code&gt;Field&lt;/code&gt; 被方便一个绘制 &lt;code&gt;Form&lt;/code&gt; 的方法（例如， &lt;code&gt;as_ul()&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3d45ee526d37e1c68494af99bcacbf305bfeffdf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id&lt;/code&gt; attribute values are generated by prepending &lt;code&gt;id_&lt;/code&gt; to the form field names. This behavior is configurable, though, if you want to change the &lt;code&gt;id&lt;/code&gt; convention or remove HTML &lt;code&gt;id&lt;/code&gt; attributes and &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; tags entirely.</source>
          <target state="translated">该 &lt;code&gt;id&lt;/code&gt; 属性值通过预先生成 &lt;code&gt;id_&lt;/code&gt; 到表单字段名称。但是，如果要更改 &lt;code&gt;id&lt;/code&gt; 约定或完全删除HTML &lt;code&gt;id&lt;/code&gt; 属性和 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 标记，则此行为是可配置的。</target>
        </trans-unit>
        <trans-unit id="e9b5a121541650ec2354edc465ac362f2156cb4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ifchanged&lt;/code&gt; tag can also take an optional &lt;code&gt;{% else %}&lt;/code&gt; clause that will be displayed if the value has not changed:</source>
          <target state="translated">如果值未更改， &lt;code&gt;ifchanged&lt;/code&gt; 标记也可以采用可选的 &lt;code&gt;{% else %}&lt;/code&gt; 子句，该子句将显示：</target>
        </trans-unit>
        <trans-unit id="6215d24775f532c0acec6f163b0f848784c5b3bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ignore_conflicts&lt;/code&gt; parameter was added.</source>
          <target state="translated">该 &lt;code&gt;ignore_conflicts&lt;/code&gt; 加入参数。</target>
        </trans-unit>
        <trans-unit id="491d5f94e827a70f27f68b440bda880d3361ef95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;include_html&lt;/code&gt; argument of &lt;code&gt;AdminEmailHandler&lt;/code&gt; is used to control whether the traceback email includes an HTML attachment containing the full content of the debug Web page that would have been produced if &lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; were &lt;code&gt;True&lt;/code&gt;. To set this value in your configuration, include it in the handler definition for &lt;code&gt;django.utils.log.AdminEmailHandler&lt;/code&gt;, like this:</source>
          <target state="translated">&lt;code&gt;AdminEmailHandler&lt;/code&gt; 的 &lt;code&gt;include_html&lt;/code&gt; 参数用于控制回溯电子邮件是否包含HTML附件，如果&lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;True&lt;/code&gt; ，则该附件包含调试Web页面的完整内容。要在您的配置中设置此值，请将其包含在 &lt;code&gt;django.utils.log.AdminEmailHandler&lt;/code&gt; 的处理程序定义中，如下所示：</target>
        </trans-unit>
        <trans-unit id="045417884876ee26cd9ed54479966623f176dfba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initial&lt;/code&gt; argument is set to &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_initial&quot;&gt;&lt;code&gt;get_initial()&lt;/code&gt;&lt;/a&gt;. If the request is a &lt;code&gt;POST&lt;/code&gt; or &lt;code&gt;PUT&lt;/code&gt;, the request data (&lt;code&gt;request.POST&lt;/code&gt; and &lt;code&gt;request.FILES&lt;/code&gt;) will also be provided.</source>
          <target state="translated">的 &lt;code&gt;initial&lt;/code&gt; 参数设置为&lt;a href=&quot;#django.views.generic.edit.FormMixin.get_initial&quot;&gt; &lt;code&gt;get_initial()&lt;/code&gt; &lt;/a&gt;。如果请求是 &lt;code&gt;POST&lt;/code&gt; 或 &lt;code&gt;PUT&lt;/code&gt; ，则还将提供请求数据（ &lt;code&gt;request.POST&lt;/code&gt; 和 &lt;code&gt;request.FILES&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4b421260063c0a7da8d712fe749b9c0c4bbdd3b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initial&lt;/code&gt; argument lets you specify the initial value to use when rendering this &lt;code&gt;Field&lt;/code&gt; in an unbound &lt;code&gt;Form&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;initial&lt;/code&gt; 参数让你呈现这个时指定的初始值，以使用 &lt;code&gt;Field&lt;/code&gt; 未绑定 &lt;code&gt;Form&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="587dffd1ab2f5b3de25664661b90ed9ecc58c177" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;interpolate&lt;/code&gt; function supports dynamically populating a format string. The interpolation syntax is borrowed from Python, so the &lt;code&gt;interpolate&lt;/code&gt; function supports both positional and named interpolation:</source>
          <target state="translated">该 &lt;code&gt;interpolate&lt;/code&gt; 功能支持动态填充格式字符串。插值语法是从Python借用的，因此 &lt;code&gt;interpolate&lt;/code&gt; 函数支持位置插值和命名插值：</target>
        </trans-unit>
        <trans-unit id="4cf4709dabffeb2019d07cb0c69daafa4432f75f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;invalid_choice&lt;/code&gt; error message may contain &lt;code&gt;%(value)s&lt;/code&gt;, which will be replaced with the selected choice.</source>
          <target state="translated">所述 &lt;code&gt;invalid_choice&lt;/code&gt; 错误消息可能包含 &lt;code&gt;%(value)s&lt;/code&gt; ，其将与被选择的选择来代替。</target>
        </trans-unit>
        <trans-unit id="57c7084a67dbad9e052011c25164acf97dc027ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;invalid_choice&lt;/code&gt; message may contain &lt;code&gt;%(value)s&lt;/code&gt; and the &lt;code&gt;invalid_pk_value&lt;/code&gt; message may contain &lt;code&gt;%(pk)s&lt;/code&gt;, which will be substituted by the appropriate values.</source>
          <target state="translated">该 &lt;code&gt;invalid_choice&lt;/code&gt; 消息可以包含 &lt;code&gt;%(value)s&lt;/code&gt; 和 &lt;code&gt;invalid_pk_value&lt;/code&gt; 消息可以包含 &lt;code&gt;%(pk)s&lt;/code&gt; ，将由适当的值取代。</target>
        </trans-unit>
        <trans-unit id="5a49d7a7899560ebdd1c858882275e30b825c080" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;iri_to_uri()&lt;/code&gt; function will not change ASCII characters that are otherwise permitted in a URL. So, for example, the character &amp;lsquo;%&amp;rsquo; is not further encoded when passed to &lt;code&gt;iri_to_uri()&lt;/code&gt;. This means you can pass a full URL to this function and it will not mess up the query string or anything like that.</source>
          <target state="translated">该 &lt;code&gt;iri_to_uri()&lt;/code&gt; 函数将不会改变在一个URL的准许，否则ASCII字符。因此，例如，当字符'％'传递给 &lt;code&gt;iri_to_uri()&lt;/code&gt; 时，不会进一步编码。这意味着您可以将完整的URL传递给此函数，并且不会弄乱查询字符串或类似内容。</target>
        </trans-unit>
        <trans-unit id="9f3f432585755de56f959725bb5534e37beeec25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;is_dst&lt;/code&gt; parameter indicates whether or not &lt;code&gt;pytz&lt;/code&gt; should interpret nonexistent and ambiguous datetimes in daylight saving time. By default (when &lt;code&gt;is_dst=None&lt;/code&gt;), &lt;code&gt;pytz&lt;/code&gt; raises an exception for such datetimes.</source>
          <target state="translated">该 &lt;code&gt;is_dst&lt;/code&gt; 参数指示是否 &lt;code&gt;pytz&lt;/code&gt; 应在夏令时解释不存在的，模糊的日期时间。默认情况下（当 &lt;code&gt;is_dst=None&lt;/code&gt; 时）， &lt;code&gt;pytz&lt;/code&gt; 会引发此类日期时间的异常。</target>
        </trans-unit>
        <trans-unit id="3a01196b9b7e6f3aeb0e6702cf8ee27bedf29d4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;is_dst&lt;/code&gt; parameter was added.</source>
          <target state="translated">该 &lt;code&gt;is_dst&lt;/code&gt; 加入参数。</target>
        </trans-unit>
        <trans-unit id="c27dd9e7df2b2bfc3889345674663ba735e58376" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;item&lt;/code&gt; attribute has been added for each URL to allow more flexible customization of the templates, such as &lt;a href=&quot;https://support.google.com/news/publisher/answer/74288?hl=en&quot;&gt;Google news sitemaps&lt;/a&gt;. Assuming Sitemap&amp;rsquo;s &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.items&quot;&gt;&lt;code&gt;items()&lt;/code&gt;&lt;/a&gt; would return a list of items with &lt;code&gt;publication_data&lt;/code&gt; and a &lt;code&gt;tags&lt;/code&gt; field something like this would generate a Google News compatible sitemap:</source>
          <target state="translated">该 &lt;code&gt;item&lt;/code&gt; 属性已被添加到每个URL允许的模板，比如更灵活的定制&lt;a href=&quot;https://support.google.com/news/publisher/answer/74288?hl=en&quot;&gt;谷歌新闻站点地图&lt;/a&gt;。假设Sitemap的&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.items&quot;&gt; &lt;code&gt;items()&lt;/code&gt; &lt;/a&gt;会返回带有 &lt;code&gt;publication_data&lt;/code&gt; 的项目列表以及诸如此类的 &lt;code&gt;tags&lt;/code&gt; 字段，将生成与Google新闻兼容的站点地图：</target>
        </trans-unit>
        <trans-unit id="8a0a788a7406145689351a5a3e04f81e423b8411" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;json_dumps_params&lt;/code&gt; parameter is a dictionary of keyword arguments to pass to the &lt;code&gt;json.dumps()&lt;/code&gt; call used to generate the response.</source>
          <target state="translated">所述 &lt;code&gt;json_dumps_params&lt;/code&gt; 参数是参数的字典传递到 &lt;code&gt;json.dumps()&lt;/code&gt; 呼叫用于生成响应。</target>
        </trans-unit>
        <trans-unit id="a39ef318f4024f5c27e94d33225a4acc8c2ec8ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;json_encoder&lt;/code&gt; argument allows setting a custom JSON encoder for the JSON serialization that&amp;rsquo;s described in &lt;a href=&quot;#django.test.Client.post&quot;&gt;&lt;code&gt;post()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;json_encoder&lt;/code&gt; 参数允许设置自定义JSON编码器是在描述的JSON序列化&lt;a href=&quot;#django.test.Client.post&quot;&gt; &lt;code&gt;post()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4ddd0240f2daceba3ef04ed169e2e06287f05eeb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keep_lazy()&lt;/code&gt; decorator takes a number of extra arguments (&lt;code&gt;*args&lt;/code&gt;) specifying the type(s) that the original function can return. A common use case is to have functions that return text. For these, you can pass the &lt;code&gt;str&lt;/code&gt; type to &lt;code&gt;keep_lazy&lt;/code&gt; (or use the &lt;a href=&quot;#django.utils.functional.keep_lazy_text&quot;&gt;&lt;code&gt;keep_lazy_text()&lt;/code&gt;&lt;/a&gt; decorator described in the next section).</source>
          <target state="translated">该 &lt;code&gt;keep_lazy()&lt;/code&gt; 装饰需要一些额外的参数（ &lt;code&gt;*args&lt;/code&gt; ）指定类型的原始函数可以返回。一个常见的用例是具有返回文本的函数。对于这些，您可以将 &lt;code&gt;str&lt;/code&gt; 类型传递给 &lt;code&gt;keep_lazy&lt;/code&gt; （或使用&lt;a href=&quot;#django.utils.functional.keep_lazy_text&quot;&gt; &lt;code&gt;keep_lazy_text()&lt;/code&gt; &lt;/a&gt;描述的keep_lazy_text（）装饰器）。</target>
        </trans-unit>
        <trans-unit id="252e8d5a57a36564be0d0827fa704d817fa5b64f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;key_prefix&lt;/code&gt; and &lt;code&gt;cache&lt;/code&gt; arguments may be specified together. The &lt;code&gt;key_prefix&lt;/code&gt; argument and the &lt;a href=&quot;../ref/settings#std:setting-CACHES-KEY_PREFIX&quot;&gt;&lt;code&gt;KEY_PREFIX&lt;/code&gt;&lt;/a&gt; specified under &lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt;&lt;code&gt;CACHES&lt;/code&gt;&lt;/a&gt; will be concatenated.</source>
          <target state="translated">该 &lt;code&gt;key_prefix&lt;/code&gt; 和 &lt;code&gt;cache&lt;/code&gt; 参数可以一起指定。该 &lt;code&gt;key_prefix&lt;/code&gt; 参数和&lt;a href=&quot;../ref/settings#std:setting-CACHES-KEY_PREFIX&quot;&gt; &lt;code&gt;KEY_PREFIX&lt;/code&gt; &lt;/a&gt;下指定&lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt; &lt;code&gt;CACHES&lt;/code&gt; &lt;/a&gt;将被连接在一起。</target>
        </trans-unit>
        <trans-unit id="225fa21eb9d1495e7c23f035f2d34079ef9f8a54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;kwargs&lt;/code&gt; argument allows you to pass additional arguments to the view function or method. See &lt;a href=&quot;../topics/http/urls#views-extra-options&quot;&gt;Passing extra options to view functions&lt;/a&gt; for an example.</source>
          <target state="translated">使用 &lt;code&gt;kwargs&lt;/code&gt; 参数可以将其他参数传递给视图函数或方法。有关示例，请参见&lt;a href=&quot;../topics/http/urls#views-extra-options&quot;&gt;传递额外的选项以查看功能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="18c6fe01854e626fcf6c1a2bda2635e4aef6a398" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;label&lt;/code&gt; argument lets you specify the &amp;ldquo;human-friendly&amp;rdquo; label for this field. This is used when the &lt;code&gt;Field&lt;/code&gt; is displayed in a &lt;code&gt;Form&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;label&lt;/code&gt; 参数，您可以指定&amp;ldquo;人性化&amp;rdquo;的标签此字段。在&amp;ldquo; &lt;code&gt;Form&lt;/code&gt; 显示&amp;ldquo; &lt;code&gt;Field&lt;/code&gt; 时使用。</target>
        </trans-unit>
        <trans-unit id="4785fd2c6ffd98affefcf3ec0c072b753d2b0916" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;label_suffix&lt;/code&gt; argument lets you override the form&amp;rsquo;s &lt;a href=&quot;api#django.forms.Form.label_suffix&quot;&gt;&lt;code&gt;label_suffix&lt;/code&gt;&lt;/a&gt; on a per-field basis:</source>
          <target state="translated">该 &lt;code&gt;label_suffix&lt;/code&gt; 参数，您可以覆盖形式的&lt;a href=&quot;api#django.forms.Form.label_suffix&quot;&gt; &lt;code&gt;label_suffix&lt;/code&gt; &lt;/a&gt;在每场的基础：</target>
        </trans-unit>
        <trans-unit id="f25b27e8fd89bfa03224a587de5043bc8f1e1530" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;language&lt;/code&gt; class attribute was added. In older versions, the behavior is the same as &lt;code&gt;language = settings.LANGUAGE_CODE&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;language&lt;/code&gt; 添加类属性。在旧版本中，行为与 &lt;code&gt;language = settings.LANGUAGE_CODE&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="34db368451dd7fad21778b0520e51dd205615b53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;link&lt;/code&gt; method/attribute can return either an absolute path (e.g. &lt;code&gt;&quot;/blog/&quot;&lt;/code&gt;) or a URL with the fully-qualified domain and protocol (e.g. &lt;code&gt;&quot;https://www.example.com/blog/&quot;&lt;/code&gt;). If &lt;code&gt;link&lt;/code&gt; doesn&amp;rsquo;t return the domain, the syndication framework will insert the domain of the current site, according to your &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt;&lt;code&gt;SITE_ID setting&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;link&lt;/code&gt; 的方法/属性可以返回一个绝对路径（例如 &lt;code&gt;&quot;/blog/&quot;&lt;/code&gt; ）或URL与完全限定域名和协议（例如 &lt;code&gt;&quot;https://www.example.com/blog/&quot;&lt;/code&gt; ）。如果 &lt;code&gt;link&lt;/code&gt; 不返回域，则联合框架将根据您的&lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt; &lt;code&gt;SITE_ID setting&lt;/code&gt; &lt;/a&gt;插入当前站点的域。</target>
        </trans-unit>
        <trans-unit id="ff9d3c9e138b80d4d6861793c26daf9a17b6b6df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;localize&lt;/code&gt; argument enables the localization of form data input, as well as the rendered output.</source>
          <target state="translated">的 &lt;code&gt;localize&lt;/code&gt; 参数使表单数据输入的定位，以及所呈现的输出。</target>
        </trans-unit>
        <trans-unit id="e1aed5fb83c2813f14231b1281a9975bd26ed001" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;login_required&lt;/code&gt; decorator</source>
          <target state="translated">该 &lt;code&gt;login_required&lt;/code&gt; 装饰</target>
        </trans-unit>
        <trans-unit id="8e95bd40db47cfc68c883889f009458f5d587a00" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;login_required&lt;/code&gt; decorator does NOT check the &lt;code&gt;is_active&lt;/code&gt; flag on a user, but the default &lt;a href=&quot;../../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt;&lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt;&lt;/a&gt; reject inactive users.</source>
          <target state="translated">该 &lt;code&gt;login_required&lt;/code&gt; 装饰不检查 &lt;code&gt;is_active&lt;/code&gt; 上的用户标志，但默认&lt;a href=&quot;../../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt; &lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt; &lt;/a&gt;拒绝不活动的用户。</target>
        </trans-unit>
        <trans-unit id="c85a785b111c688a0ca8db999db513587854b453" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lookup&lt;/code&gt; argument describes the relations to follow and works the same as the string based lookups passed to &lt;a href=&quot;#django.db.models.query.QuerySet.prefetch_related&quot;&gt;&lt;code&gt;prefetch_related()&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">该 &lt;code&gt;lookup&lt;/code&gt; 参数描述了关系遵循和作品一样传递到基于字符串查找&lt;a href=&quot;#django.db.models.query.QuerySet.prefetch_related&quot;&gt; &lt;code&gt;prefetch_related()&lt;/code&gt; &lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="d362b35f063a2bad884f9c3ac0d597e6e1b44d0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lookup_allowed()&lt;/code&gt; method is given a lookup path from the query string (e.g. &lt;code&gt;'user__email'&lt;/code&gt;) and the corresponding value (e.g. &lt;code&gt;'user@example.com'&lt;/code&gt;), and returns a boolean indicating whether filtering the changelist&amp;rsquo;s &lt;code&gt;QuerySet&lt;/code&gt; using the parameters is permitted. If &lt;code&gt;lookup_allowed()&lt;/code&gt; returns &lt;code&gt;False&lt;/code&gt;, &lt;code&gt;DisallowedModelAdminLookup&lt;/code&gt; (subclass of &lt;a href=&quot;../../exceptions#django.core.exceptions.SuspiciousOperation&quot;&gt;&lt;code&gt;SuspiciousOperation&lt;/code&gt;&lt;/a&gt;) is raised.</source>
          <target state="translated">为 &lt;code&gt;lookup_allowed()&lt;/code&gt; 方法提供了查询字符串（例如 &lt;code&gt;'user__email'&lt;/code&gt; ）和相应值（例如 &lt;code&gt;'user@example.com'&lt;/code&gt; ）的查找路径，并返回一个布尔值，该布尔值指示是否允许使用参数过滤更改列表的 &lt;code&gt;QuerySet&lt;/code&gt; 。。如果 &lt;code&gt;lookup_allowed()&lt;/code&gt; 返回 &lt;code&gt;False&lt;/code&gt; ，则会引发 &lt;code&gt;DisallowedModelAdminLookup&lt;/code&gt; （&lt;a href=&quot;../../exceptions#django.core.exceptions.SuspiciousOperation&quot;&gt; &lt;code&gt;SuspiciousOperation&lt;/code&gt; 的&lt;/a&gt;子类）。</target>
        </trans-unit>
        <trans-unit id="6c703f88a499c4f1a0d94ab8d30177d84112fd26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;make_published()&lt;/code&gt; action will only be available to users that pass the &lt;a href=&quot;index#django.contrib.admin.ModelAdmin.has_change_permission&quot;&gt;&lt;code&gt;ModelAdmin.has_change_permission()&lt;/code&gt;&lt;/a&gt; check.</source>
          <target state="translated">该 &lt;code&gt;make_published()&lt;/code&gt; 动作将只提供给符合用户&lt;a href=&quot;index#django.contrib.admin.ModelAdmin.has_change_permission&quot;&gt; &lt;code&gt;ModelAdmin.has_change_permission()&lt;/code&gt; &lt;/a&gt;检查。</target>
        </trans-unit>
        <trans-unit id="d81a3d0a72e4a8994231c23a41c2af7be8cccd04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;makemessages&lt;/code&gt; command (and &lt;code&gt;compilemessages&lt;/code&gt; discussed later) use commands from the GNU gettext toolset: &lt;code&gt;xgettext&lt;/code&gt;, &lt;code&gt;msgfmt&lt;/code&gt;, &lt;code&gt;msgmerge&lt;/code&gt; and &lt;code&gt;msguniq&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;makemessages&lt;/code&gt; 命令（和 &lt;code&gt;compilemessages&lt;/code&gt; 稍后讨论）从GNU的gettext工具集使用命令： &lt;code&gt;xgettext&lt;/code&gt; ， &lt;code&gt;msgfmt&lt;/code&gt; ， &lt;code&gt;msgmerge&lt;/code&gt; 和 &lt;code&gt;msguniq&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3cd5742b0c7f6b4a069a7b99288b0486c403076e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;manage_articles.html&lt;/code&gt; template might look like this:</source>
          <target state="translated">该 &lt;code&gt;manage_articles.html&lt;/code&gt; 模板可能是这样的：</target>
        </trans-unit>
        <trans-unit id="3357fbeed820dc154dc010ad25a9fc2a2439b44f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;max_error&lt;/code&gt; argument can be used to specify the maximum error measured in input pixels that is allowed in approximating the transformation. The default is 0.0 for exact calculations.</source>
          <target state="translated">所述 &lt;code&gt;max_error&lt;/code&gt; 参数可以被用来指定被允许在近似变换在输入像素为单位的最大误差。精确计算的默认值为0.0。</target>
        </trans-unit>
        <trans-unit id="81b860e95a6cba19059191b4316529dddbd101ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;max_length&lt;/code&gt; argument is passed along to &lt;a href=&quot;../../howto/custom-file-storage#django.core.files.storage.get_available_name&quot;&gt;&lt;code&gt;get_available_name()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;max_length&lt;/code&gt; 参数一起传递给&lt;a href=&quot;../../howto/custom-file-storage#django.core.files.storage.get_available_name&quot;&gt; &lt;code&gt;get_available_name()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1db244e5e1737559d41aa104eaa2d53accc34a6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;max_length&lt;/code&gt; error refers to the length of the filename. In the error message for that key, &lt;code&gt;%(max)d&lt;/code&gt; will be replaced with the maximum filename length and &lt;code&gt;%(length)d&lt;/code&gt; will be replaced with the current filename length.</source>
          <target state="translated">所述 &lt;code&gt;max_length&lt;/code&gt; 误差指的是文件名的长度。在该键的错误消息中， &lt;code&gt;%(max)d&lt;/code&gt; 将替换为最大文件名长度， &lt;code&gt;%(length)d&lt;/code&gt; 将替换为当前文件名长度。</target>
        </trans-unit>
        <trans-unit id="38b8c41ad0043e98ff3bd637cdd34e060ed1354e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;max_length&lt;/code&gt; increased from 30 to 150 characters.</source>
          <target state="translated">所述 &lt;code&gt;max_length&lt;/code&gt; 从30到150个字符增加。</target>
        </trans-unit>
        <trans-unit id="566d4e9464a6b9b8b3204978ca8957ed12f95a13" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;max_length&lt;/code&gt; increased from 80 to 150 characters.</source>
          <target state="translated">所述 &lt;code&gt;max_length&lt;/code&gt; 从80到150个字符增加。</target>
        </trans-unit>
        <trans-unit id="000930ed0c3d86899ddba4d3cc3d0d336d0066b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;max_length&lt;/code&gt; should be sufficient for many use cases. If you need a longer length, please use a &lt;a href=&quot;../../topics/auth/customizing#specifying-custom-user-model&quot;&gt;custom user model&lt;/a&gt;. If you use MySQL with the &lt;code&gt;utf8mb4&lt;/code&gt; encoding (recommended for proper Unicode support), specify at most &lt;code&gt;max_length=191&lt;/code&gt; because MySQL can only create unique indexes with 191 characters in that case by default.</source>
          <target state="translated">对于许多用例， &lt;code&gt;max_length&lt;/code&gt; 应该足够。如果您需要更长的长度，请使用&lt;a href=&quot;../../topics/auth/customizing#specifying-custom-user-model&quot;&gt;自定义用户模型&lt;/a&gt;。如果您将MySQL与 &lt;code&gt;utf8mb4&lt;/code&gt; 编码一起使用（建议使用Unicode，则建议最多使用 &lt;code&gt;max_length=191&lt;/code&gt; ），因为在这种情况下，MySQL默认只能创建191个字符的唯一索引。</target>
        </trans-unit>
        <trans-unit id="b9f19d8bb5bc9553686c3b103738e5b7e4d31b29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;max_num&lt;/code&gt; parameter to &lt;a href=&quot;../../ref/forms/formsets#django.forms.formsets.formset_factory&quot;&gt;&lt;code&gt;formset_factory()&lt;/code&gt;&lt;/a&gt; gives you the ability to limit the number of forms the formset will display:</source>
          <target state="translated">&lt;a href=&quot;../../ref/forms/formsets#django.forms.formsets.formset_factory&quot;&gt; &lt;code&gt;formset_factory()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;max_num&lt;/code&gt; 参数使您能够限制formset将显示的表单数量：</target>
        </trans-unit>
        <trans-unit id="234094d3679ad6cfd4561b81d535c06f706c6336" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;max_value&lt;/code&gt; and &lt;code&gt;min_value&lt;/code&gt; error messages may contain &lt;code&gt;%(limit_value)s&lt;/code&gt;, which will be substituted by the appropriate limit.</source>
          <target state="translated">的 &lt;code&gt;max_value&lt;/code&gt; 和 &lt;code&gt;min_value&lt;/code&gt; 错误消息可含有 &lt;code&gt;%(limit_value)s&lt;/code&gt; ，这将通过适当的限制所取代。</target>
        </trans-unit>
        <trans-unit id="b8c8ae98f390477b1ceb6cf5bb642916cc37b74d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;max_value&lt;/code&gt; and &lt;code&gt;min_value&lt;/code&gt; error messages may contain &lt;code&gt;%(limit_value)s&lt;/code&gt;, which will be substituted by the appropriate limit. Similarly, the &lt;code&gt;max_digits&lt;/code&gt;, &lt;code&gt;max_decimal_places&lt;/code&gt; and &lt;code&gt;max_whole_digits&lt;/code&gt; error messages may contain &lt;code&gt;%(max)s&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;max_value&lt;/code&gt; 和 &lt;code&gt;min_value&lt;/code&gt; 错误消息可含有 &lt;code&gt;%(limit_value)s&lt;/code&gt; ，这将通过适当的限制所取代。同样， &lt;code&gt;max_digits&lt;/code&gt; ， &lt;code&gt;max_decimal_places&lt;/code&gt; 和 &lt;code&gt;max_whole_digits&lt;/code&gt; 错误消息可能包含 &lt;code&gt;%(max)s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="878aa7191ff5f8f501bb1386bb56c2f4d33544c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;messages&lt;/code&gt; passed should be a dict containing the keys &lt;code&gt;missing_keys&lt;/code&gt; and/or &lt;code&gt;extra_keys&lt;/code&gt;.</source>
          <target state="translated">传递的 &lt;code&gt;messages&lt;/code&gt; 应该是一个字典，其中包含键 &lt;code&gt;missing_keys&lt;/code&gt; 和/或 &lt;code&gt;extra_keys&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78ab0b073182bf0fe2d634292ea1516016036c3b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;my_handler&lt;/code&gt; function will only be called when an instance of &lt;code&gt;MyModel&lt;/code&gt; is saved.</source>
          <target state="translated">该 &lt;code&gt;my_handler&lt;/code&gt; 当实例函数才会被调用 &lt;code&gt;MyModel&lt;/code&gt; 被保存。</target>
        </trans-unit>
        <trans-unit id="8fc78c7b9ffa5d218bc0fefb36a5d9715f1d807f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;name_local&lt;/code&gt;, and &lt;code&gt;name_translated&lt;/code&gt; attributes of the dictionary contain the name of the language in English, in the language itself, and in your current active language respectively. The &lt;code&gt;bidi&lt;/code&gt; attribute is True only for bi-directional languages.</source>
          <target state="translated">字典的 &lt;code&gt;name&lt;/code&gt; ， &lt;code&gt;name_local&lt;/code&gt; 和 &lt;code&gt;name_translated&lt;/code&gt; 属性分别包含英语，语言本身和您当前使用的语言的语言名称。在 &lt;code&gt;bidi&lt;/code&gt; 属性只为双向语言为True。</target>
        </trans-unit>
        <trans-unit id="a39c83ed85984b6642543f740cdb410d3ca8d109" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name_snippet.html&lt;/code&gt; template:</source>
          <target state="translated">该 &lt;code&gt;name_snippet.html&lt;/code&gt; 模板：</target>
        </trans-unit>
        <trans-unit id="e30f8a69eb295d4756927f614d2e23268324ff70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;needs_autoescape&lt;/code&gt; flag and the &lt;code&gt;autoescape&lt;/code&gt; keyword argument mean that our function will know whether automatic escaping is in effect when the filter is called. We use &lt;code&gt;autoescape&lt;/code&gt; to decide whether the input data needs to be passed through &lt;code&gt;django.utils.html.conditional_escape&lt;/code&gt; or not. (In the latter case, we use the identity function as the &amp;ldquo;escape&amp;rdquo; function.) The &lt;code&gt;conditional_escape()&lt;/code&gt; function is like &lt;code&gt;escape()&lt;/code&gt; except it only escapes input that is &lt;strong&gt;not&lt;/strong&gt; a &lt;code&gt;SafeData&lt;/code&gt; instance. If a &lt;code&gt;SafeData&lt;/code&gt; instance is passed to &lt;code&gt;conditional_escape()&lt;/code&gt;, the data is returned unchanged.</source>
          <target state="translated">该 &lt;code&gt;needs_autoescape&lt;/code&gt; 标志和 &lt;code&gt;autoescape&lt;/code&gt; 关键字参数意味着我们的功能将知道自动转义是否有效，当过滤器被调用。我们使用自动 &lt;code&gt;autoescape&lt;/code&gt; 来确定是否需要通过 &lt;code&gt;django.utils.html.conditional_escape&lt;/code&gt; 传递输入数据。 （在后一种情况下，我们使用恒等函数为&amp;ldquo;逃逸&amp;rdquo;的功能。）的 &lt;code&gt;conditional_escape()&lt;/code&gt; 函数是像 &lt;code&gt;escape()&lt;/code&gt; 除了它仅逸出输入是&lt;strong&gt;不是&lt;/strong&gt;一个 &lt;code&gt;SafeData&lt;/code&gt; 实例。如果将 &lt;code&gt;SafeData&lt;/code&gt; 实例传递给 &lt;code&gt;conditional_escape()&lt;/code&gt; ，则数据将保持不变。</target>
        </trans-unit>
        <trans-unit id="23762e1f473bb2f077c04a353c0d4c9e77960d15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngettext&lt;/code&gt; function provides an interface to pluralize words and phrases:</source>
          <target state="translated">该 &lt;code&gt;ngettext&lt;/code&gt; 功能提供变复数单词和短语的界面：</target>
        </trans-unit>
        <trans-unit id="82871b39860f1fe7aa4c2e86b7d346c94e39fc59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;normalization&lt;/code&gt; and &lt;code&gt;cover_density&lt;/code&gt; parameters were added.</source>
          <target state="translated">的 &lt;code&gt;normalization&lt;/code&gt; 和 &lt;code&gt;cover_density&lt;/code&gt; 加入参数。</target>
        </trans-unit>
        <trans-unit id="aa751bcb056f41b353edca8b0355b0fe2ed86c67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;npgettext&lt;/code&gt; function also behaves like the Python variant (&lt;a href=&quot;../../ref/utils#django.utils.translation.npgettext&quot;&gt;&lt;code&gt;npgettext()&lt;/code&gt;&lt;/a&gt;), providing a &lt;strong&gt;pluralized&lt;/strong&gt; contextually translated word:</source>
          <target state="translated">所述 &lt;code&gt;npgettext&lt;/code&gt; 功能也表现得像Python的变体（&lt;a href=&quot;../../ref/utils#django.utils.translation.npgettext&quot;&gt; &lt;code&gt;npgettext()&lt;/code&gt; &lt;/a&gt;），提供了一个&lt;strong&gt;使用复数&lt;/strong&gt;上下文译词：</target>
        </trans-unit>
        <trans-unit id="a22a490f2b2fd5278cb63bbbab5857207c62256f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;num_seg&lt;/code&gt; parameter is used only on PostGIS.</source>
          <target state="translated">该 &lt;code&gt;num_seg&lt;/code&gt; 参数只在PostGIS的使用。</target>
        </trans-unit>
        <trans-unit id="50dcf68eca8b70bab1d883b11415f436f951c004" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;obj&lt;/code&gt; argument passed to &lt;code&gt;InlineModelAdmin&lt;/code&gt; methods is the parent object being edited or &lt;code&gt;None&lt;/code&gt; when adding a new parent.</source>
          <target state="translated">传递给 &lt;code&gt;InlineModelAdmin&lt;/code&gt; 方法的 &lt;code&gt;obj&lt;/code&gt; 参数是正在编辑的父对象，或者是添加新父对象时为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7fb5adb12d8f32f8446533c6a10bc5301f02c5cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;objs&lt;/code&gt; argument is a homogeneous iterable of objects (a &lt;code&gt;QuerySet&lt;/code&gt; or a list of model instances) to be deleted, and &lt;code&gt;request&lt;/code&gt; is the &lt;a href=&quot;../../request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;objs&lt;/code&gt; 参数是对象的均匀可迭代（一个 &lt;code&gt;QuerySet&lt;/code&gt; 或模型实例的列表）被删除，并且 &lt;code&gt;request&lt;/code&gt; 是&lt;a href=&quot;../../request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; 的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aa4756c7afef702a4b2b00842cf02717b53d9d99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ogrinspect&lt;/code&gt; management command will inspect the given OGR-compatible &lt;a href=&quot;gdal#django.contrib.gis.gdal.DataSource&quot;&gt;&lt;code&gt;DataSource&lt;/code&gt;&lt;/a&gt; (e.g., a shapefile) and will output a GeoDjango model with the given model name. There&amp;rsquo;s a detailed example of using &lt;code&gt;ogrinspect&lt;/code&gt;&lt;a href=&quot;tutorial#ogrinspect-intro&quot;&gt;in the tutorial&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;ogrinspect&lt;/code&gt; 管理命令将检查给定的OGR兼容的&lt;a href=&quot;gdal#django.contrib.gis.gdal.DataSource&quot;&gt; &lt;code&gt;DataSource&lt;/code&gt; &lt;/a&gt;（例如shapefile文件），并会输出一个GeoDjango内置模型，模型名。&lt;a href=&quot;tutorial#ogrinspect-intro&quot;&gt;本教程中&lt;/a&gt;有一个使用 &lt;code&gt;ogrinspect&lt;/code&gt; 的详细示例。</target>
        </trans-unit>
        <trans-unit id="21bd259c30243667bafe786caf1a01669ddaa750" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;only()&lt;/code&gt; method is more or less the opposite of &lt;a href=&quot;#django.db.models.query.QuerySet.defer&quot;&gt;&lt;code&gt;defer()&lt;/code&gt;&lt;/a&gt;. You call it with the fields that should &lt;em&gt;not&lt;/em&gt; be deferred when retrieving a model. If you have a model where almost all the fields need to be deferred, using &lt;code&gt;only()&lt;/code&gt; to specify the complementary set of fields can result in simpler code.</source>
          <target state="translated">的 &lt;code&gt;only()&lt;/code&gt; 方法是或多或少相反&lt;a href=&quot;#django.db.models.query.QuerySet.defer&quot;&gt; &lt;code&gt;defer()&lt;/code&gt; &lt;/a&gt;。你应该等领域称之为&lt;em&gt;未&lt;/em&gt;检索模型时推迟。如果您有一个模型，其中几乎所有字段都需要延迟，则使用 &lt;code&gt;only()&lt;/code&gt; 指定互补的字段集可以简化代码。</target>
        </trans-unit>
        <trans-unit id="a2e6ddd396be002a5c5f76973498518725d44e1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;order_by&lt;/code&gt; argument accepts a sequence of expressions on which you can call &lt;a href=&quot;#django.db.models.Expression.asc&quot;&gt;&lt;code&gt;asc()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.Expression.desc&quot;&gt;&lt;code&gt;desc()&lt;/code&gt;&lt;/a&gt;. The ordering controls the order in which the expression is applied. For example, if you sum over the rows in a partition, the first result is the value of the first row, the second is the sum of first and second row.</source>
          <target state="translated">该 &lt;code&gt;order_by&lt;/code&gt; 参数接受表达式序列上，您可以拨打&lt;a href=&quot;#django.db.models.Expression.asc&quot;&gt; &lt;code&gt;asc()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.db.models.Expression.desc&quot;&gt; &lt;code&gt;desc()&lt;/code&gt; &lt;/a&gt;。顺序控制表达式的应用顺序。例如，如果对某个分区中的行进行求和，则第一个结果是第一行的值，第二个结果是第一行和第二行的总和。</target>
        </trans-unit>
        <trans-unit id="e7720641bc935c5b5682ec5d26004fb5cc63958c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;output_field&lt;/code&gt; argument requires a model field instance, like &lt;code&gt;IntegerField()&lt;/code&gt; or &lt;code&gt;BooleanField()&lt;/code&gt;, into which Django will load the value after it&amp;rsquo;s retrieved from the database. Usually no arguments are needed when instantiating the model field as any arguments relating to data validation (&lt;code&gt;max_length&lt;/code&gt;, &lt;code&gt;max_digits&lt;/code&gt;, etc.) will not be enforced on the expression&amp;rsquo;s output value.</source>
          <target state="translated">所述 &lt;code&gt;output_field&lt;/code&gt; 参数需要一个模型字段实例，如 &lt;code&gt;IntegerField()&lt;/code&gt; 或 &lt;code&gt;BooleanField()&lt;/code&gt; ，在其中它从数据库中检索后Django将加载的值。通常，在实例化模型字段时不需要参数，因为与数据验证有关的任何参数（ &lt;code&gt;max_length&lt;/code&gt; ， &lt;code&gt;max_digits&lt;/code&gt; 等）都不会在表达式的输出值上强制执行。</target>
        </trans-unit>
        <trans-unit id="b232e0558b7259d8092426da3013202cc8011dd4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;output_field&lt;/code&gt; argument should be a model field instance, like &lt;code&gt;IntegerField()&lt;/code&gt; or &lt;code&gt;BooleanField()&lt;/code&gt;, into which Django will load the value after it&amp;rsquo;s retrieved from the database. Usually no arguments are needed when instantiating the model field as any arguments relating to data validation (&lt;code&gt;max_length&lt;/code&gt;, &lt;code&gt;max_digits&lt;/code&gt;, etc.) will not be enforced on the expression&amp;rsquo;s output value.</source>
          <target state="translated">所述 &lt;code&gt;output_field&lt;/code&gt; 参数应该是一个模型字段实例，如 &lt;code&gt;IntegerField()&lt;/code&gt; 或 &lt;code&gt;BooleanField()&lt;/code&gt; ，在其中它从数据库中检索后Django将加载的值。通常，在实例化模型字段时不需要参数，因为与数据验证有关的任何参数（ &lt;code&gt;max_length&lt;/code&gt; ， &lt;code&gt;max_digits&lt;/code&gt; 等）都不会在表达式的输出值上强制执行。</target>
        </trans-unit>
        <trans-unit id="4a820584462ac3c5a9f86233924de726affde930" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;output_field&lt;/code&gt; is specified either as an argument or by the expression.</source>
          <target state="translated">将 &lt;code&gt;output_field&lt;/code&gt; 指定为参数或表达式。</target>
        </trans-unit>
        <trans-unit id="0def76be73374c0cd8e50f1e57b16a21b1d75371" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pages_per_range&lt;/code&gt; argument takes a positive integer.</source>
          <target state="translated">该 &lt;code&gt;pages_per_range&lt;/code&gt; 参数取正整数。</target>
        </trans-unit>
        <trans-unit id="1c79e0fc28f032c53c4ac9bdd58bb7b5faf90de2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;paginate_by&lt;/code&gt; is deliberately small in the example so you don&amp;rsquo;t have to create lots of books to see the pagination working! Here&amp;rsquo;s the template you&amp;rsquo;d want to use:</source>
          <target state="translated">在示例中， &lt;code&gt;paginate_by&lt;/code&gt; 故意很小，因此您无需创建大量书籍即可查看分页工作！这是您要使用的模板：</target>
        </trans-unit>
        <trans-unit id="908ac429deefd097084c4e466f252fdc397c2dbd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;partition_by&lt;/code&gt; argument is a list of expressions (column names should be wrapped in an &lt;code&gt;F&lt;/code&gt;-object) that control the partitioning of the rows. Partitioning narrows which rows are used to compute the result set.</source>
          <target state="translated">所述 &lt;code&gt;partition_by&lt;/code&gt; 参数是表达式（列名应包裹在一个列表 &lt;code&gt;F&lt;/code&gt; -object），其控制所述行的分区。分区缩小了哪些行用于计算结果集。</target>
        </trans-unit>
        <trans-unit id="7ddc038f575b9765382fff6d78aa5373cd0a39f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;password&lt;/code&gt; parameter must be a string or bytes if not &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;password&lt;/code&gt; 参数必须是一个字符串或字节，如果不 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0f964493bc5e4037b14edc15f6a49e7e3971493" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;password_list_path&lt;/code&gt; can be set to the path of a custom file of common passwords. This file should contain one lowercase password per line and may be plain text or gzipped.</source>
          <target state="translated">该 &lt;code&gt;password_list_path&lt;/code&gt; 可以设置为常用密码自定义文件的路径。该文件每行应包含一个小写密码，并且可以是纯文本或gzip压缩的。</target>
        </trans-unit>
        <trans-unit id="ea681148df1d1119c67ee6b0965de7063d3232c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pdb&lt;/code&gt; argument was added.</source>
          <target state="translated">该 &lt;code&gt;pdb&lt;/code&gt; 加入争论。</target>
        </trans-unit>
        <trans-unit id="92786737258fb408a52461d62987979ed03113f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;permission_required&lt;/code&gt; decorator</source>
          <target state="translated">该 &lt;code&gt;permission_required&lt;/code&gt; 装饰</target>
        </trans-unit>
        <trans-unit id="662367f8885b5fb44c88c9ff364921b11bc24db7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pgettext&lt;/code&gt; function behaves like the Python variant (&lt;a href=&quot;../../ref/utils#django.utils.translation.pgettext&quot;&gt;&lt;code&gt;pgettext()&lt;/code&gt;&lt;/a&gt;), providing a contextually translated word:</source>
          <target state="translated">所述 &lt;code&gt;pgettext&lt;/code&gt; 函数的行为类似于Python的变体（&lt;a href=&quot;../../ref/utils#django.utils.translation.pgettext&quot;&gt; &lt;code&gt;pgettext()&lt;/code&gt; &lt;/a&gt;），提供了一个上下文译词：</target>
        </trans-unit>
        <trans-unit id="0199f1bc48ca5d452aaafa6d4f2e533a895a42a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pk&lt;/code&gt; lookup shortcut</source>
          <target state="translated">将 &lt;code&gt;pk&lt;/code&gt; 查找快捷</target>
        </trans-unit>
        <trans-unit id="78a45ade1d3a763560883ef58e91836414aa09e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pk&lt;/code&gt; property</source>
          <target state="translated">在 &lt;code&gt;pk&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="c417e01b62b2bbcf06892051d44feceabd6b1664" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pluralidx&lt;/code&gt; function works in a similar way to the &lt;a href=&quot;../../ref/templates/builtins#std:templatefilter-pluralize&quot;&gt;&lt;code&gt;pluralize&lt;/code&gt;&lt;/a&gt; template filter, determining if a given &lt;code&gt;count&lt;/code&gt; should use a plural form of a word or not:</source>
          <target state="translated">该 &lt;code&gt;pluralidx&lt;/code&gt; 功能以类似的方式对作品&lt;a href=&quot;../../ref/templates/builtins#std:templatefilter-pluralize&quot;&gt; &lt;code&gt;pluralize&lt;/code&gt; &lt;/a&gt;模板过滤器，确定给定 &lt;code&gt;count&lt;/code&gt; 应该用一个词或没有的复数形式：</target>
        </trans-unit>
        <trans-unit id="db12d3dd2d41422b03fed5d5a4a7ef1323708e49" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pnt_wkt&lt;/code&gt; string represents the point at -95.3385 degrees longitude, 29.7245 degrees latitude. The geometry is in a format known as Well Known Text (WKT), a standard issued by the Open Geospatial Consortium (OGC). &lt;a href=&quot;#id14&quot; id=&quot;id8&quot;&gt;[4]&lt;/a&gt; Import the &lt;code&gt;WorldBorder&lt;/code&gt; model, and perform a &lt;code&gt;contains&lt;/code&gt; lookup using the &lt;code&gt;pnt_wkt&lt;/code&gt; as the parameter:</source>
          <target state="translated">该 &lt;code&gt;pnt_wkt&lt;/code&gt; 字符串代表在-95.3385经度点，29.7245度纬度。几何图形采用的格式为众所周知的文本（WKT），这是开放地理空间联盟（OGC）发布的标准。&lt;a href=&quot;#id14&quot; id=&quot;id8&quot;&gt;[4]&lt;/a&gt;导入 &lt;code&gt;WorldBorder&lt;/code&gt; 模型，并使用 &lt;code&gt;pnt_wkt&lt;/code&gt; 作为参数执行 &lt;code&gt;contains&lt;/code&gt; 查找：</target>
        </trans-unit>
        <trans-unit id="ba11aa480bc4f431b6690ba2244d48b3f4490969" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;polls&lt;/code&gt; directory could now be copied into a new Django project and immediately reused. It&amp;rsquo;s not quite ready to be published though. For that, we need to package the app to make it easy for others to install.</source>
          <target state="translated">该 &lt;code&gt;polls&lt;/code&gt; 目录现在可以复制到一个新的Django项目，并立即重用。它还没有准备好发布。为此，我们需要打包该应用程序以使其他人易于安装。</target>
        </trans-unit>
        <trans-unit id="b7d99da7c9780a0906c91344bb941135267b5544" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;precision&lt;/code&gt; keyword argument controls the number of characters in the result.</source>
          <target state="translated">的 &lt;code&gt;precision&lt;/code&gt; 关键字参数控制在结果中的字符数。</target>
        </trans-unit>
        <trans-unit id="e1ea804db691af945112079154b5764e60f20efb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;preserve_default&lt;/code&gt; argument indicates whether the field&amp;rsquo;s default value is permanent and should be baked into the project state (&lt;code&gt;True&lt;/code&gt;), or if it is temporary and just for this migration (&lt;code&gt;False&lt;/code&gt;) - usually because the migration is adding a non-nullable field to a table and needs a default value to put into existing rows. It does not affect the behavior of setting defaults in the database directly - Django never sets database defaults and always applies them in the Django ORM code.</source>
          <target state="translated">该 &lt;code&gt;preserve_default&lt;/code&gt; 参数指示字段的默认值是否是永久性的，应该被烤成的项目状态（ &lt;code&gt;True&lt;/code&gt; ），或者如果它是暂时的，只是这种迁移（ &lt;code&gt;False&lt;/code&gt; ） -通常是因为迁移添加非空的字段添加到表，并需要一个默认值放入现有行。它不会直接影响在数据库中设置默认值的行为-Django从不设置数据库默认值，而始终将其应用于Django ORM代码。</target>
        </trans-unit>
        <trans-unit id="f50140583853b168e3af2e589a1ac8cfaabbdd88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;preserve_default&lt;/code&gt; argument indicates whether the field&amp;rsquo;s default value is permanent and should be baked into the project state (&lt;code&gt;True&lt;/code&gt;), or if it is temporary and just for this migration (&lt;code&gt;False&lt;/code&gt;) - usually because the migration is altering a nullable field to a non-nullable one and needs a default value to put into existing rows. It does not affect the behavior of setting defaults in the database directly - Django never sets database defaults and always applies them in the Django ORM code.</source>
          <target state="translated">该 &lt;code&gt;preserve_default&lt;/code&gt; 参数指示字段的默认值是否是永久性的，应该被烤成的项目状态（ &lt;code&gt;True&lt;/code&gt; ），或者如果它是暂时的，只是这种迁移（ &lt;code&gt;False&lt;/code&gt; ） -通常是因为迁移改变一个可空场非可为空，需要一个默认值放入现有行中。它不会直接影响在数据库中设置默认值的行为-Django从不设置数据库默认值，而始终将其应用于Django ORM代码。</target>
        </trans-unit>
        <trans-unit id="a86bbc728df900d48f3b8806a68bdf90061f7dd3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;primary_key&lt;/code&gt; argument isn&amp;rsquo;t supported and will raise an error if used.</source>
          <target state="translated">不支持 &lt;code&gt;primary_key&lt;/code&gt; 参数，如果使用该参数，则会引发错误。</target>
        </trans-unit>
        <trans-unit id="5a70ceae9339dfbf8cb2eab4476e20c3f0e240e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;psycopg2&lt;/code&gt; Python module provides the interface between Python and the PostgreSQL database. &lt;code&gt;psycopg2&lt;/code&gt; can be installed via pip within your Python virtual environment:</source>
          <target state="translated">所述 &lt;code&gt;psycopg2&lt;/code&gt; Python模块提供Python和PostgreSQL数据库之间的接口。可以通过pip在您的Python虚拟环境中安装 &lt;code&gt;psycopg2&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="324afab94236c878328b0cdcc39e3464b750c74f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;psycopg2&lt;/code&gt; Python module provides the interface between Python and the PostgreSQL database. Download the latest &lt;a href=&quot;http://www.stickpeople.com/projects/python/win-psycopg/&quot;&gt;Windows installer&lt;/a&gt; for your version of Python and PostgreSQL and run using the default settings. &lt;a href=&quot;#id28&quot; id=&quot;id24&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">所述 &lt;code&gt;psycopg2&lt;/code&gt; Python模块提供Python和PostgreSQL数据库之间的接口。下载适用于您的Python和PostgreSQL版本的最新&lt;a href=&quot;http://www.stickpeople.com/projects/python/win-psycopg/&quot;&gt;Windows安装程序&lt;/a&gt;，并使用默认设置运行。&lt;a href=&quot;#id28&quot; id=&quot;id24&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76c3cf9b5782d05ce232b218d9c871239796da77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;psycopg2&lt;/code&gt; Windows installers are packaged and maintained by &lt;a href=&quot;http://www.stickpeople.com/projects/python/win-psycopg/&quot;&gt;Jason Erickson&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;psycopg2&lt;/code&gt; 的Windows安装程序打包和维护&lt;a href=&quot;http://www.stickpeople.com/projects/python/win-psycopg/&quot;&gt;贾森&amp;middot;埃里克森&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="419ade80a1087cdb1b0f4eaeff16662aa73ba922" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pytz.AmbiguousTimeError&lt;/code&gt; exception is raised if you try to make &lt;code&gt;value&lt;/code&gt; aware during a DST transition where the same time occurs twice (when reverting from DST). Setting &lt;code&gt;is_dst&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; will avoid the exception by choosing if the time is pre-transition or post-transition respectively.</source>
          <target state="translated">该 &lt;code&gt;pytz.AmbiguousTimeError&lt;/code&gt; 如果你试图让引发异常 &lt;code&gt;value&lt;/code&gt; 一DST过渡期间意识到在同一时间发生两次（从DST复原的情况）。将 &lt;code&gt;is_dst&lt;/code&gt; 设置为 &lt;code&gt;True&lt;/code&gt; 或 &lt;code&gt;False&lt;/code&gt; 将分别通过选择时间是转换前还是转换后来避免异常。</target>
        </trans-unit>
        <trans-unit id="f294115945f3f61648587916dfb0117ae68e9038" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pytz.NonExistentTimeError&lt;/code&gt; exception is raised if you try to make &lt;code&gt;value&lt;/code&gt; aware during a DST transition such that the time never occurred. For example, if the 2:00 hour is skipped during a DST transition, trying to make 2:30 aware in that time zone will raise an exception. To avoid that you can use &lt;code&gt;is_dst&lt;/code&gt; to specify how &lt;code&gt;make_aware()&lt;/code&gt; should interpret such a nonexistent time. If &lt;code&gt;is_dst=True&lt;/code&gt; then the above time would be interpreted as 2:30 DST time (equivalent to 1:30 local time). Conversely, if &lt;code&gt;is_dst=False&lt;/code&gt; the time would be interpreted as 2:30 standard time (equivalent to 3:30 local time).</source>
          <target state="translated">该 &lt;code&gt;pytz.NonExistentTimeError&lt;/code&gt; 如果你试图让引发异常 &lt;code&gt;value&lt;/code&gt; 一DST过渡，以使时间从未发生期间认识。例如，如果在DST转换过程中跳过了2:00小时，则尝试在该时区中使2:30知道将引发异常。为避免这种情况，可以使用 &lt;code&gt;is_dst&lt;/code&gt; 指定 &lt;code&gt;make_aware()&lt;/code&gt; 如何解释这种不存在的时间。如果 &lt;code&gt;is_dst=True&lt;/code&gt; ,则上述时间将被解释为DST时间2:30（相当于本地时间1:30）。相反，如果 &lt;code&gt;is_dst=False&lt;/code&gt; ，则该时间将被解释为2:30标准时间（相当于本地时间3:30）。</target>
        </trans-unit>
        <trans-unit id="376b3d869a4e6bad90a52375d74b366313f9300f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;query&lt;/code&gt; attribute is an opaque object. It represents the internals of the query construction and is not part of the public API. However, it is safe (and fully supported) to pickle and unpickle the attribute&amp;rsquo;s contents as described here.</source>
          <target state="translated">该 &lt;code&gt;query&lt;/code&gt; 属性是一个不透明的对象。它代表查询构造的内部，而不是公共API的一部分。但是，如此处所述，腌制和解开属性的内容是安全的（并且完全受支持）。</target>
        </trans-unit>
        <trans-unit id="9b6ee9bb71833cdd1eb6d40145803da310d91180" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;query&lt;/code&gt; parameter to &lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; exists so that specialized query subclasses can reconstruct internal query state. The value of the parameter is an opaque representation of that query state and is not part of a public API.</source>
          <target state="translated">存在&lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;query&lt;/code&gt; 参数，以便专门的查询子类可以重建内部查询状态。参数的值是该查询状态的不透明表示形式，不是公共API的一部分。</target>
        </trans-unit>
        <trans-unit id="91e0942173f21d9137489fb68a0cfa2c7a57c993" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;query&lt;/code&gt; parameter to &lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; exists so that specialized query subclasses can reconstruct internal query state. The value of the parameter is an opaque representation of that query state and is not part of a public API. To put it another way: if you need to ask, you don&amp;rsquo;t need to use it.</source>
          <target state="translated">存在&lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;query&lt;/code&gt; 参数，以便专门的查询子类可以重建内部查询状态。参数的值是该查询状态的不透明表示形式，不是公共API的一部分。换句话说，如果您需要询问，则无需使用它。</target>
        </trans-unit>
        <trans-unit id="4187b29ad8e96eee30e6834052097b6ccccc21f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;queryset&lt;/code&gt; argument supplies a base &lt;code&gt;QuerySet&lt;/code&gt; for the given lookup. This is useful to further filter down the prefetch operation, or to call &lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt;&lt;code&gt;select_related()&lt;/code&gt;&lt;/a&gt; from the prefetched relation, hence reducing the number of queries even further:</source>
          <target state="translated">该 &lt;code&gt;queryset&lt;/code&gt; 参数提供一个基础 &lt;code&gt;QuerySet&lt;/code&gt; 为给定的查找。这对于进一步过滤预取操作或从预取关系中调用&lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt; &lt;code&gt;select_related()&lt;/code&gt; &lt;/a&gt;很有用，从而进一步减少了查询数量：</target>
        </trans-unit>
        <trans-unit id="4f3a8438cf58cbfb64b1b3f08ca2b71cb13bfdb5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;question_id=34&lt;/code&gt; part comes from &lt;code&gt;&amp;lt;int:question_id&amp;gt;&lt;/code&gt;. Using angle brackets &amp;ldquo;captures&amp;rdquo; part of the URL and sends it as a keyword argument to the view function. The &lt;code&gt;:question_id&amp;gt;&lt;/code&gt; part of the string defines the name that will be used to identify the matched pattern, and the &lt;code&gt;&amp;lt;int:&lt;/code&gt; part is a converter that determines what patterns should match this part of the URL path.</source>
          <target state="translated">所述 &lt;code&gt;question_id=34&lt;/code&gt; 一部分来自 &lt;code&gt;&amp;lt;int:question_id&amp;gt;&lt;/code&gt; 。使用尖括号&amp;ldquo;捕获&amp;rdquo; URL的一部分，并将其作为关键字参数发送给视图函数。字符串的 &lt;code&gt;:question_id&amp;gt;&lt;/code&gt; 部分定义用于标识匹配模式的名称，而 &lt;code&gt;&amp;lt;int:&lt;/code&gt; 部分是一个转换器，该转换器确定哪些模式应与URL路径的此部分匹配。</target>
        </trans-unit>
        <trans-unit id="18d8c0512abe38d2e5523ff529ee12e64ec3684b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;raise_request_exception&lt;/code&gt; argument allows controlling whether or not exceptions raised during the request should also be raised in the test. Defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;raise_request_exception&lt;/code&gt; 参数允许控制是否请求中抛出的异常也应在测试得到提升。默认为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df75973272b881c9b14f0bc94612349a95b897d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;raise_request_exception&lt;/code&gt; argument was added.</source>
          <target state="translated">该 &lt;code&gt;raise_request_exception&lt;/code&gt; 加入争论。</target>
        </trans-unit>
        <trans-unit id="3a176926aa601db19f5e02852a6bba299fb7ed14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;raw()&lt;/code&gt; manager method can be used to perform raw SQL queries that return model instances:</source>
          <target state="translated">该 &lt;code&gt;raw()&lt;/code&gt; 管理方法可以用于执行原始SQL的查询返回的模型实例：</target>
        </trans-unit>
        <trans-unit id="ed06211a3b65df116099255fec22c89f9de1361a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;raw_id_fields&lt;/code&gt;&lt;code&gt;Input&lt;/code&gt; widget should contain a primary key if the field is a &lt;code&gt;ForeignKey&lt;/code&gt; or a comma separated list of values if the field is a &lt;code&gt;ManyToManyField&lt;/code&gt;. The &lt;code&gt;raw_id_fields&lt;/code&gt; widget shows a magnifying glass button next to the field which allows users to search for and select a value:</source>
          <target state="translated">所述 &lt;code&gt;raw_id_fields&lt;/code&gt; &lt;code&gt;Input&lt;/code&gt; 插件应包含一个主键如果该字段是一个 &lt;code&gt;ForeignKey&lt;/code&gt; 的或逗号分隔值的列表中，如果该字段是一个 &lt;code&gt;ManyToManyField&lt;/code&gt; 。所述 &lt;code&gt;raw_id_fields&lt;/code&gt; 小部件显示放大镜按钮旁边的，其允许用户搜索和选择一个值的字段：</target>
        </trans-unit>
        <trans-unit id="27407741a7f27e2ad1d8516c050756bde3569ea3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;receiver&lt;/code&gt; argument indicates the registered receiver to disconnect. It may be &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;dispatch_uid&lt;/code&gt; is used to identify the receiver.</source>
          <target state="translated">该 &lt;code&gt;receiver&lt;/code&gt; 参数指示注册接收器断开。如果使用 &lt;code&gt;dispatch_uid&lt;/code&gt; 标识接收者，则可能为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41c1e031005fd54af0c3ffd9391afb7f0f625916" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;register&lt;/code&gt; decorator</source>
          <target state="translated">该 &lt;code&gt;register&lt;/code&gt; 装饰</target>
        </trans-unit>
        <trans-unit id="b90d861869494c5a717ef5ecdbadcc025cba650d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remove()&lt;/code&gt; call will bulk delete the specified model objects:</source>
          <target state="translated">该 &lt;code&gt;remove()&lt;/code&gt; 调用将批量删除指定的模型对象：</target>
        </trans-unit>
        <trans-unit id="b61a58bd7de2b4b09d14b10310e7a98d489eb0d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;render()&lt;/code&gt; method is where the work actually happens.</source>
          <target state="translated">该 &lt;code&gt;render()&lt;/code&gt; 方法是在那里工作的实际情况。</target>
        </trans-unit>
        <trans-unit id="5481e089a3dd7f85ac82aa08e12f3199e2773014" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reporter_class&lt;/code&gt; argument of &lt;code&gt;AdminEmailHandler&lt;/code&gt; allows providing an &lt;code&gt;django.views.debug.ExceptionReporter&lt;/code&gt; subclass to customize the traceback text sent in the email body. You provide a string import path to the class you wish to use, like this:</source>
          <target state="translated">&lt;code&gt;AdminEmailHandler&lt;/code&gt; 的 &lt;code&gt;reporter_class&lt;/code&gt; 参数允许提供 &lt;code&gt;django.views.debug.ExceptionReporter&lt;/code&gt; 子类，以自定义在电子邮件正文中发送的回溯文本。您提供了要使用的类的字符串导入路径，如下所示：</target>
        </trans-unit>
        <trans-unit id="c98204d217de5dec53fe323049139b1dff3e045b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reporter_class&lt;/code&gt; argument was added.</source>
          <target state="translated">该 &lt;code&gt;reporter_class&lt;/code&gt; 加入争论。</target>
        </trans-unit>
        <trans-unit id="bc172fc4506c4abd2701a5af76769c198b47ca27" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;request&lt;/code&gt; argument was added. Support for method overrides that don&amp;rsquo;t accept it will be removed in Django 3.1.</source>
          <target state="translated">所述 &lt;code&gt;request&lt;/code&gt; 中加入自变量。Django 3.1中将删除对不支持方法重写的支持。</target>
        </trans-unit>
        <trans-unit id="d05ea9ea6363852c86e7305c9669d9457e930da1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reset_url_token&lt;/code&gt; class attribute was added.</source>
          <target state="translated">该 &lt;code&gt;reset_url_token&lt;/code&gt; 加入类属性。</target>
        </trans-unit>
        <trans-unit id="3b8025c9e9b225729b7efa746ce7f8f47fa344d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resolve()&lt;/code&gt; function can be used for resolving URL paths to the corresponding view functions. It has the following signature:</source>
          <target state="translated">的 &lt;code&gt;resolve()&lt;/code&gt; 函数可以被用于解析URL路径对应的视图的功能。它具有以下签名：</target>
        </trans-unit>
        <trans-unit id="1d4f0ef847bbd128998ea273876966dbd7fe22e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;returncode&lt;/code&gt; argument was added.</source>
          <target state="translated">该 &lt;code&gt;returncode&lt;/code&gt; ，加入的说法。</target>
        </trans-unit>
        <trans-unit id="fe878d4c5f08c7c10265e3c6922b51dabc1d76ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reverse()&lt;/code&gt; function can reverse a large variety of regular expression patterns for URLs, but not every possible one. The main restriction at the moment is that the pattern cannot contain alternative choices using the vertical bar (&lt;code&gt;&quot;|&quot;&lt;/code&gt;) character. You can quite happily use such patterns for matching against incoming URLs and sending them off to views, but you cannot reverse such patterns.</source>
          <target state="translated">在 &lt;code&gt;reverse()&lt;/code&gt; 函数可以逆转了大量的各种正则表达式模式针对URL，但不是每一个可能的。目前的主要限制是模式不能包含使用竖线（ &lt;code&gt;&quot;|&quot;&lt;/code&gt; ）字符的替代选择。您可以很高兴地使用这种模式来匹配传入的URL并将其发送给视图，但是您不能逆转这种模式。</target>
        </trans-unit>
        <trans-unit id="31ea67993087a3395504efc2bf3bfd3f2f1b65e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reverse_code&lt;/code&gt; argument is called when unapplying migrations. This callable should undo what is done in the &lt;code&gt;code&lt;/code&gt; callable so that the migration is reversible.</source>
          <target state="translated">该 &lt;code&gt;reverse_code&lt;/code&gt; unapplying迁移时参数调用。此可调用对象应撤消可调用 &lt;code&gt;code&lt;/code&gt; 所做的操作，以便迁移是可逆的。</target>
        </trans-unit>
        <trans-unit id="6f8348fd69b2bb25a355597f2625ccfe079180e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reverse_code&lt;/code&gt; argument is called when unapplying migrations. This callable should undo what is done in the &lt;code&gt;code&lt;/code&gt; callable so that the migration is reversible. If &lt;code&gt;reverse_code&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt; (the default), the &lt;code&gt;RunPython&lt;/code&gt; operation is irreversible.</source>
          <target state="translated">该 &lt;code&gt;reverse_code&lt;/code&gt; unapplying迁移时参数调用。此可调用对象应撤消可调用 &lt;code&gt;code&lt;/code&gt; 所做的操作，以便迁移是可逆的。如果 &lt;code&gt;reverse_code&lt;/code&gt; 为 &lt;code&gt;None&lt;/code&gt; （默认值），则 &lt;code&gt;RunPython&lt;/code&gt; 操作是不可逆的。</target>
        </trans-unit>
        <trans-unit id="28a02ec1c567284f3b25d07a9b99ee645ce7e1c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reverse_sql&lt;/code&gt; queries are executed when the migration is unapplied, so you can reverse the changes done in the forwards queries:</source>
          <target state="translated">当 &lt;code&gt;reverse_sql&lt;/code&gt; 应用迁移时，将执行reverse_sql查询，因此您可以撤消在Forwards查询中所做的更改：</target>
        </trans-unit>
        <trans-unit id="263481a7406cf64adca0a038d059096c5aa1aa30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reverse_sql&lt;/code&gt; queries are executed when the migration is unapplied. They should undo what is done by the &lt;code&gt;sql&lt;/code&gt; queries. For example, to undo the above insertion with a deletion:</source>
          <target state="translated">该 &lt;code&gt;reverse_sql&lt;/code&gt; 在迁移未应用查询被执行。他们应该撤消由 &lt;code&gt;sql&lt;/code&gt; 查询完成的操作。例如，要撤消上述插入操作并删除：</target>
        </trans-unit>
        <trans-unit id="621ff1bf72399f5cb8bd6c607564d23dd0b4081b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;route&lt;/code&gt; argument should be a string or &lt;a href=&quot;utils#django.utils.translation.gettext_lazy&quot;&gt;&lt;code&gt;gettext_lazy()&lt;/code&gt;&lt;/a&gt; (see &lt;a href=&quot;../topics/i18n/translation#translating-urlpatterns&quot;&gt;Translating URL patterns&lt;/a&gt;) that contains a URL pattern. The string may contain angle brackets (like &lt;code&gt;&amp;lt;username&amp;gt;&lt;/code&gt; above) to capture part of the URL and send it as a keyword argument to the view. The angle brackets may include a converter specification (like the &lt;code&gt;int&lt;/code&gt; part of &lt;code&gt;&amp;lt;int:section&amp;gt;&lt;/code&gt;) which limits the characters matched and may also change the type of the variable passed to the view. For example, &lt;code&gt;&amp;lt;int:section&amp;gt;&lt;/code&gt; matches a string of decimal digits and converts the value to an &lt;code&gt;int&lt;/code&gt;. See &lt;a href=&quot;../topics/http/urls#how-django-processes-a-request&quot;&gt;How Django processes a request&lt;/a&gt; for more details.</source>
          <target state="translated">该 &lt;code&gt;route&lt;/code&gt; 的说法应该是一个字符串或&lt;a href=&quot;utils#django.utils.translation.gettext_lazy&quot;&gt; &lt;code&gt;gettext_lazy()&lt;/code&gt; &lt;/a&gt;（见&lt;a href=&quot;../topics/i18n/translation#translating-urlpatterns&quot;&gt;翻译URL模式&lt;/a&gt;），其中包含一个URL模式。该字符串可能包含尖括号（例如上面的 &lt;code&gt;&amp;lt;username&amp;gt;&lt;/code&gt; ），以捕获URL的一部分并将其作为关键字参数发送到视图。尖括号可以包括转换器规范（如 &lt;code&gt;int&lt;/code&gt; 的一部分 &lt;code&gt;&amp;lt;int:section&amp;gt;&lt;/code&gt; ），其限制了匹配的字符，并且还可以改变传递到视图的变量的类型。例如， &lt;code&gt;&amp;lt;int:section&amp;gt;&lt;/code&gt; 匹配一串十进制数字，并将该值转换为 &lt;code&gt;int&lt;/code&gt; 。有关更多详细信息，请参见&lt;a href=&quot;../topics/http/urls#how-django-processes-a-request&quot;&gt;Django如何处理请求&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="39de2c3a2dac29941c9a6f3b5adf09158830d5b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;route&lt;/code&gt; argument should be a string or &lt;a href=&quot;utils#django.utils.translation.gettext_lazy&quot;&gt;&lt;code&gt;gettext_lazy()&lt;/code&gt;&lt;/a&gt; (see &lt;a href=&quot;../topics/i18n/translation#translating-urlpatterns&quot;&gt;Translating URL patterns&lt;/a&gt;) that contains a regular expression compatible with Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/re.html#module-re&quot;&gt;&lt;code&gt;re&lt;/code&gt;&lt;/a&gt; module. Strings typically use raw string syntax (&lt;code&gt;r''&lt;/code&gt;) so that they can contain sequences like &lt;code&gt;\d&lt;/code&gt; without the need to escape the backslash with another backslash. When a match is made, captured groups from the regular expression are passed to the view &amp;ndash; as named arguments if the groups are named, and as positional arguments otherwise. The values are passed as strings, without any type conversion.</source>
          <target state="translated">该 &lt;code&gt;route&lt;/code&gt; 的说法应该是一个字符串或&lt;a href=&quot;utils#django.utils.translation.gettext_lazy&quot;&gt; &lt;code&gt;gettext_lazy()&lt;/code&gt; &lt;/a&gt;（见&lt;a href=&quot;../topics/i18n/translation#translating-urlpatterns&quot;&gt;翻译URL模式&lt;/a&gt;），其中包含与Python的兼容的正则表达式&lt;a href=&quot;https://docs.python.org/3/library/re.html#module-re&quot;&gt; &lt;code&gt;re&lt;/code&gt; &lt;/a&gt;模块。字符串通常使用原始字符串语法（ &lt;code&gt;r''&lt;/code&gt; ），以便它们可以包含 &lt;code&gt;\d&lt;/code&gt; 类的序列，而无需使用另一个反斜杠来转义反斜杠。进行匹配时，将从正则表达式中捕获的组传递给视图-如果组已命名，则作为命名参数，否则传递为位置参数。这些值将作为字符串传递，而不进行任何类型转换。</target>
        </trans-unit>
        <trans-unit id="415cbcbc7016047d57e4dd8d5d1ab73a913461b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;run_validators()&lt;/code&gt; method on a &lt;code&gt;Field&lt;/code&gt; runs all of the field&amp;rsquo;s validators and aggregates all the errors into a single &lt;code&gt;ValidationError&lt;/code&gt;. You shouldn&amp;rsquo;t need to override this method.</source>
          <target state="translated">&lt;code&gt;Field&lt;/code&gt; 上的 &lt;code&gt;run_validators()&lt;/code&gt; 方法运行该字段的所有验证器，并将所有错误汇总到单个 &lt;code&gt;ValidationError&lt;/code&gt; 中。您不需要重写此方法。</target>
        </trans-unit>
        <trans-unit id="94478f419deb74b5fb4f1cb92b9134d638854b0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;safe&lt;/code&gt; boolean parameter defaults to &lt;code&gt;True&lt;/code&gt;. If it&amp;rsquo;s set to &lt;code&gt;False&lt;/code&gt;, any object can be passed for serialization (otherwise only &lt;code&gt;dict&lt;/code&gt; instances are allowed). If &lt;code&gt;safe&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt; and a non-&lt;code&gt;dict&lt;/code&gt; object is passed as the first argument, a &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">该 &lt;code&gt;safe&lt;/code&gt; 布尔参数默认为 &lt;code&gt;True&lt;/code&gt; 。如果将其设置为 &lt;code&gt;False&lt;/code&gt; ，则可以传递任何对象进行序列化（否则仅允许 &lt;code&gt;dict&lt;/code&gt; 实例）。如果 &lt;code&gt;safe&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ,并且将非 &lt;code&gt;dict&lt;/code&gt; 对象作为第一个参数传递，则将&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="515493902bd6909332fd123af7d756cb0244b6a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;samesite&lt;/code&gt; argument was added.</source>
          <target state="translated">该 &lt;code&gt;samesite&lt;/code&gt; 加入争论。</target>
        </trans-unit>
        <trans-unit id="965dd8e7763d7ea30c51906f2da34471ed7b5b1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;save()&lt;/code&gt; method</source>
          <target state="translated">的 &lt;code&gt;save()&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="913d5f44c96cf1f923a3008dc54df15da1f97ef5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;save()&lt;/code&gt; method also accepts keywords. These keywords are used for controlling output logging, error handling, and for importing specific feature ranges.</source>
          <target state="translated">在 &lt;code&gt;save()&lt;/code&gt; 方法也接受关键字。这些关键字用于控制输出日志记录，错误处理以及导入特定功能范围。</target>
        </trans-unit>
        <trans-unit id="f9ba531a6df068d63d688cb47225565b39165c70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;save()&lt;/code&gt; method returns the instances that have been saved to the database. If a given instance&amp;rsquo;s data didn&amp;rsquo;t change in the bound data, the instance won&amp;rsquo;t be saved to the database and won&amp;rsquo;t be included in the return value (&lt;code&gt;instances&lt;/code&gt;, in the above example).</source>
          <target state="translated">在 &lt;code&gt;save()&lt;/code&gt; 方法返回已保存到数据库实例。如果给定实例的数据在绑定数据中没有发生变化，则该实例将不会保存到数据库，也不会包含在返回值中（在上例中为 &lt;code&gt;instances&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="9af288aedf1fd9f98506a9909e2edb45aaee29a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;save_formset&lt;/code&gt; method is given the &lt;code&gt;HttpRequest&lt;/code&gt;, the parent &lt;code&gt;ModelForm&lt;/code&gt; instance and a boolean value based on whether it is adding or changing the parent object.</source>
          <target state="translated">为 &lt;code&gt;save_formset&lt;/code&gt; 方法提供 &lt;code&gt;HttpRequest&lt;/code&gt; ，父 &lt;code&gt;ModelForm&lt;/code&gt; 实例以及一个基于它是添加还是更改父对象的布尔值。</target>
        </trans-unit>
        <trans-unit id="47f2994fcd28bfd7c4b9c18861cd2ce18aad3024" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;save_model&lt;/code&gt; method is given the &lt;code&gt;HttpRequest&lt;/code&gt;, a model instance, a &lt;code&gt;ModelForm&lt;/code&gt; instance, and a boolean value based on whether it is adding or changing the object. Overriding this method allows doing pre- or post-save operations. Call &lt;code&gt;super().save_model()&lt;/code&gt; to save the object using &lt;a href=&quot;../../models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;Model.save()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;save_model&lt;/code&gt; 方法给出 &lt;code&gt;HttpRequest&lt;/code&gt; ，模型实例，一个 &lt;code&gt;ModelForm&lt;/code&gt; 实例，并且基于它是否被添加或改变对象的布尔值。覆盖此方法可进行保存前或保存后的操作。调用 &lt;code&gt;super().save_model()&lt;/code&gt; 以使用&lt;a href=&quot;../../models/instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;Model.save()&lt;/code&gt; &lt;/a&gt;保存对象。</target>
        </trans-unit>
        <trans-unit id="0d79db200c135a2a20361afa03a2c65861d65716" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;save_related&lt;/code&gt; method is given the &lt;code&gt;HttpRequest&lt;/code&gt;, the parent &lt;code&gt;ModelForm&lt;/code&gt; instance, the list of inline formsets and a boolean value based on whether the parent is being added or changed. Here you can do any pre- or post-save operations for objects related to the parent. Note that at this point the parent object and its form have already been saved.</source>
          <target state="translated">为 &lt;code&gt;save_related&lt;/code&gt; 方法提供 &lt;code&gt;HttpRequest&lt;/code&gt; ，父 &lt;code&gt;ModelForm&lt;/code&gt; 实例，内联表单集列表以及基于是否要添加或更改父级的布尔值。在这里，您可以对与父级相关的对象执行任何保存前或保存后操作。请注意，此时父对象及其形式已经保存。</target>
        </trans-unit>
        <trans-unit id="57e74f5a6a1922365791161696761bdaca4a5c9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;search&lt;/code&gt; lookup</source>
          <target state="translated">该 &lt;code&gt;search&lt;/code&gt; 查询</target>
        </trans-unit>
        <trans-unit id="bdb6ebab67efd43b3f12cb8dcbc02e7c3f6ec132" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;search_type&lt;/code&gt; parameter was added.</source>
          <target state="translated">该 &lt;code&gt;search_type&lt;/code&gt; 加入参数。</target>
        </trans-unit>
        <trans-unit id="404a8c043575a29dcf7baf306e34ce67bd428c43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;select&lt;/code&gt; argument lets you put extra fields in the &lt;code&gt;SELECT&lt;/code&gt; clause. It should be a dictionary mapping attribute names to SQL clauses to use to calculate that attribute.</source>
          <target state="translated">在 &lt;code&gt;select&lt;/code&gt; 参数可以让你把多余的字段在 &lt;code&gt;SELECT&lt;/code&gt; 子句。它应该是一个字典，将属性名称映射到SQL子句以用于计算该属性。</target>
        </trans-unit>
        <trans-unit id="eb92252495d383fc0626382bb860490595d04619" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;serialize()&lt;/code&gt; method of your serializer must return a string of how the value should appear in migrations and a set of any imports that are needed in the migration.</source>
          <target state="translated">本 &lt;code&gt;serialize()&lt;/code&gt; 您的序列化的方法必须返回的值应该出现的迁移串和一组需要在迁移任何进口。</target>
        </trans-unit>
        <trans-unit id="4df0d7d33c0414d3ef635cfa89f06f5f5ec825b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set_language&lt;/code&gt; redirect view</source>
          <target state="translated">该 &lt;code&gt;set_language&lt;/code&gt; 重定向视图</target>
        </trans-unit>
        <trans-unit id="65f827b34365ea53eba9f940727208c801b3b266" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sitemap_uses_https&lt;/code&gt; argument was added. Older versions of Django always use &lt;code&gt;http&lt;/code&gt; for a sitemap&amp;rsquo;s URL.</source>
          <target state="translated">该 &lt;code&gt;sitemap_uses_https&lt;/code&gt; 加入争论。较早版本的Django始终使用 &lt;code&gt;http&lt;/code&gt; 作为站点地图的URL。</target>
        </trans-unit>
        <trans-unit id="9f757f5ebdc63c3691349570ce7971b236189c48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;srid&lt;/code&gt; parameter, if given, is set as the SRID of the created geometry if &lt;code&gt;geo_input&lt;/code&gt; doesn&amp;rsquo;t have an SRID. If different SRIDs are provided through the &lt;code&gt;geo_input&lt;/code&gt; and &lt;code&gt;srid&lt;/code&gt; parameters, &lt;code&gt;ValueError&lt;/code&gt; is raised:</source>
          <target state="translated">该 &lt;code&gt;srid&lt;/code&gt; 参数，如果给，被设置为创建几何的SRID如果 &lt;code&gt;geo_input&lt;/code&gt; 不具有SRID。如果通过 &lt;code&gt;geo_input&lt;/code&gt; 和 &lt;code&gt;srid&lt;/code&gt; 参数提供了不同的SRID ，则会引发 &lt;code&gt;ValueError&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7f060c2ae11c723a0c14be1c2c1b9e3665590287" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;staff_member_required&lt;/code&gt; decorator</source>
          <target state="translated">该 &lt;code&gt;staff_member_required&lt;/code&gt; 装饰</target>
        </trans-unit>
        <trans-unit id="f0597cd4f96dd959b725b11dc4c8ef10d4d76312" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;state_operations&lt;/code&gt; argument allows you to supply operations that are equivalent to the SQL in terms of project state. For example, if you are manually creating a column, you should pass in a list containing an &lt;code&gt;AddField&lt;/code&gt; operation here so that the autodetector still has an up-to-date state of the model. If you don&amp;rsquo;t, when you next run &lt;code&gt;makemigrations&lt;/code&gt;, it won&amp;rsquo;t see any operation that adds that field and so will try to run it again. For example:</source>
          <target state="translated">该 &lt;code&gt;state_operations&lt;/code&gt; 参数可用于供应操作等效于项目状态方面的SQL。例如，如果要手动创建列，则应在此处传递包含 &lt;code&gt;AddField&lt;/code&gt; 操作的列表，以便自动检测器仍具有模型的最新状态。如果不这样做，则在下次运行 &lt;code&gt;makemigrations&lt;/code&gt; 时，它将看不到任何添加该字段的操作，因此将尝试再次运行它。例如：</target>
        </trans-unit>
        <trans-unit id="1fbd5ff1beb6bf44190986db52a20f74110488de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;state_operations&lt;/code&gt; argument is so you can supply operations that are equivalent to the SQL in terms of project state; for example, if you are manually creating a column, you should pass in a list containing an &lt;code&gt;AddField&lt;/code&gt; operation here so that the autodetector still has an up-to-date state of the model (otherwise, when you next run &lt;code&gt;makemigrations&lt;/code&gt;, it won&amp;rsquo;t see any operation that adds that field and so will try to run it again). For example:</source>
          <target state="translated">该 &lt;code&gt;state_operations&lt;/code&gt; 参数是这样你就可以提供等效于项目状态方面的SQL操作; 例如，如果您手动创建列，则应在此处传递包含 &lt;code&gt;AddField&lt;/code&gt; 操作的列表，以便自动检测器仍具有模型的最新状态（否则，当您下次运行 &lt;code&gt;makemigrations&lt;/code&gt; 时，它将不会看不到添加该字段的任何操作，因此将尝试再次运行它）。例如：</target>
        </trans-unit>
        <trans-unit id="05d82cf093dcf2d7991f5657501a4de6eae147ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;staticfiles&lt;/code&gt; app</source>
          <target state="translated">该 &lt;code&gt;staticfiles&lt;/code&gt; 应用</target>
        </trans-unit>
        <trans-unit id="df41329b2da832ef5b55238903165b040d9ae6db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;subject&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt;, &lt;code&gt;from_email&lt;/code&gt; and &lt;code&gt;recipient_list&lt;/code&gt; parameters are required.</source>
          <target state="translated">的 &lt;code&gt;subject&lt;/code&gt; ， &lt;code&gt;message&lt;/code&gt; ， &lt;code&gt;from_email&lt;/code&gt; 和 &lt;code&gt;recipient_list&lt;/code&gt; 参数是必需的。</target>
        </trans-unit>
        <trans-unit id="0de65cf4550eae05714a01ffb7d3a79a1c2fdbbf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tag()&lt;/code&gt; method takes two arguments:</source>
          <target state="translated">该 &lt;code&gt;tag()&lt;/code&gt; 方法有两个参数：</target>
        </trans-unit>
        <trans-unit id="b88e280b78b30b7e2da0586a60b2c4d184a56e27" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;takes_context&lt;/code&gt; parameter defaults to &lt;code&gt;False&lt;/code&gt;. When it&amp;rsquo;s set to &lt;code&gt;True&lt;/code&gt;, the tag is passed the context object, as in this example. That&amp;rsquo;s the only difference between this case and the previous &lt;code&gt;inclusion_tag&lt;/code&gt; example.</source>
          <target state="translated">该 &lt;code&gt;takes_context&lt;/code&gt; 参数默认为 &lt;code&gt;False&lt;/code&gt; 。如本例所示，将其设置为 &lt;code&gt;True&lt;/code&gt; 时，会将标记传递给上下文对象。这是本例与先前的 &lt;code&gt;inclusion_tag&lt;/code&gt; 示例之间的唯一区别。</target>
        </trans-unit>
        <trans-unit id="5f6b87c249856c9d5c29c0105512e8a9f240a1ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;test&lt;/code&gt; command receives options on behalf of the specified &lt;a href=&quot;#cmdoption-test-testrunner&quot;&gt;&lt;code&gt;--testrunner&lt;/code&gt;&lt;/a&gt;. These are the options of the default test runner: &lt;a href=&quot;../topics/testing/advanced#django.test.runner.DiscoverRunner&quot;&gt;&lt;code&gt;DiscoverRunner&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;test&lt;/code&gt; 命令接收代表指定的选项&lt;a href=&quot;#cmdoption-test-testrunner&quot;&gt; &lt;code&gt;--testrunner&lt;/code&gt; &lt;/a&gt;。这些是默认测试运行器的选项：&lt;a href=&quot;../topics/testing/advanced#django.test.runner.DiscoverRunner&quot;&gt; &lt;code&gt;DiscoverRunner&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="20898ff0b73800182c5228889c8234799ab8418b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;through_defaults&lt;/code&gt; argument was added.</source>
          <target state="translated">该 &lt;code&gt;through_defaults&lt;/code&gt; 加入争论。</target>
        </trans-unit>
        <trans-unit id="63025ae279029f4f8b4353e5a0c5154871a0ea93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;time&lt;/code&gt; filter will only accept parameters in the format string that relate to the time of day, not the date. If you need to format a &lt;code&gt;date&lt;/code&gt; value, use the &lt;a href=&quot;#std:templatefilter-date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; filter instead (or along with &lt;a href=&quot;#std:templatefilter-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; if you need to render a full &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; value).</source>
          <target state="translated">该 &lt;code&gt;time&lt;/code&gt; 过滤器将只接受格式字符串，涉及到天，而不是日期的时间参数。如果需要格式化 &lt;code&gt;date&lt;/code&gt; 值，请改用&lt;a href=&quot;#std:templatefilter-date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;过滤器（如果需要呈现完整的&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;值，请与&lt;a href=&quot;#std:templatefilter-time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;一起使用）。</target>
        </trans-unit>
        <trans-unit id="882e616cd1303003145edbed5f5661c0e5e5b6e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timeout&lt;/code&gt; argument is optional and defaults to the &lt;code&gt;timeout&lt;/code&gt; argument of the appropriate backend in the &lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt;&lt;code&gt;CACHES&lt;/code&gt;&lt;/a&gt; setting (explained above). It&amp;rsquo;s the number of seconds the value should be stored in the cache. Passing in &lt;code&gt;None&lt;/code&gt; for &lt;code&gt;timeout&lt;/code&gt; will cache the value forever. A &lt;code&gt;timeout&lt;/code&gt; of &lt;code&gt;0&lt;/code&gt; won&amp;rsquo;t cache the value.</source>
          <target state="translated">的 &lt;code&gt;timeout&lt;/code&gt; 参数是可选的，并且默认为 &lt;code&gt;timeout&lt;/code&gt; 在适当的后端的参数&lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt; &lt;code&gt;CACHES&lt;/code&gt; &lt;/a&gt;设置（如上所述）。这是该值应存储在缓存中的秒数。在通过 &lt;code&gt;None&lt;/code&gt; 对 &lt;code&gt;timeout&lt;/code&gt; 将永远缓存值。一个 &lt;code&gt;timeout&lt;/code&gt; 的 &lt;code&gt;0&lt;/code&gt; 将不缓存值。</target>
        </trans-unit>
        <trans-unit id="3d71fc1792d3867d9eded5708ab14a99703930e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;to_attr&lt;/code&gt; argument sets the result of the prefetch operation to a custom attribute:</source>
          <target state="translated">该 &lt;code&gt;to_attr&lt;/code&gt; 参数设置预取操作的自定义属性的结果：</target>
        </trans-unit>
        <trans-unit id="c82da793fa2c5044f6747c978360d31772836001" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;to_python()&lt;/code&gt; method on a &lt;code&gt;Field&lt;/code&gt; is the first step in every validation. It coerces the value to a correct datatype and raises &lt;code&gt;ValidationError&lt;/code&gt; if that is not possible. This method accepts the raw value from the widget and returns the converted value. For example, a &lt;code&gt;FloatField&lt;/code&gt; will turn the data into a Python &lt;code&gt;float&lt;/code&gt; or raise a &lt;code&gt;ValidationError&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Field&lt;/code&gt; 上的 &lt;code&gt;to_python()&lt;/code&gt; 方法是每次验证的第一步。它将值强制转换为正确的数据类型，并在不可能的情况下引发 &lt;code&gt;ValidationError&lt;/code&gt; 。此方法从小部件接受原始值，并返回转换后的值。例如， &lt;code&gt;FloatField&lt;/code&gt; 会将数据转换为Python &lt;code&gt;float&lt;/code&gt; 或引发 &lt;code&gt;ValidationError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="33825641191b3cc051e12f73b630c755e176e2f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;token.split_contents()&lt;/code&gt; method separates the arguments on spaces while keeping quoted strings together. The more straightforward &lt;code&gt;token.contents.split()&lt;/code&gt; wouldn&amp;rsquo;t be as robust, as it would naively split on &lt;em&gt;all&lt;/em&gt; spaces, including those within quoted strings. It&amp;rsquo;s a good idea to always use &lt;code&gt;token.split_contents()&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;token.split_contents()&lt;/code&gt; 方法，同时保持引用的字符串一起在空间参数分离。更直接的 &lt;code&gt;token.contents.split()&lt;/code&gt; 不会那么健壮，因为它会天真地在&lt;em&gt;所有&lt;/em&gt;空间上进行分割，包括带引号的字符串中的内容。始终使用 &lt;code&gt;token.split_contents()&lt;/code&gt; 是一个好主意。</target>
        </trans-unit>
        <trans-unit id="133dcf3a095f528c8f2acb9c59bc02f066bc9d4b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trans&lt;/code&gt; tag was renamed to &lt;code&gt;translate&lt;/code&gt;. The &lt;code&gt;trans&lt;/code&gt; tag is still supported as an alias for backwards compatibility.</source>
          <target state="translated">该 &lt;code&gt;trans&lt;/code&gt; 标签重命名为 &lt;code&gt;translate&lt;/code&gt; 。仍然支持使用 &lt;code&gt;trans&lt;/code&gt; 标签作为向后兼容性的别名。</target>
        </trans-unit>
        <trans-unit id="026f9a3069321939512024e7bed1da045841f4b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transform&lt;/code&gt; keyword is set to &lt;code&gt;False&lt;/code&gt; because the data in the shapefile does not need to be converted &amp;ndash; it&amp;rsquo;s already in WGS84 (SRID=4326).</source>
          <target state="translated">该 &lt;code&gt;transform&lt;/code&gt; 关键字设置为 &lt;code&gt;False&lt;/code&gt; ，因为shapefile文件的数据不需要转换-它已经在WGS84（SRID = 4326）。</target>
        </trans-unit>
        <trans-unit id="3606c6c2f6282a2a7c67e0de7dc1b81d981a097a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trigram_similar&lt;/code&gt; lookup allows you to perform trigram lookups, measuring the number of trigrams (three consecutive characters) shared, using a dedicated PostgreSQL extension. A trigram lookup is given an expression and returns results that have a similarity measurement greater than the current similarity threshold.</source>
          <target state="translated">所述 &lt;code&gt;trigram_similar&lt;/code&gt; 查找，可以执行卦查找，测量卦（三个连续的字符）共享使用专用的PostgreSQL扩展号码。为三字母组合查询提供一个表达式，并返回其相似性度量值大于当前相似性阈值的结果。</target>
        </trans-unit>
        <trans-unit id="42f93dd77b833412f853ef949e4baa7f46397c94" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trigram_similar&lt;/code&gt; lookup can be used on &lt;a href=&quot;../../models/fields#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../models/fields#django.db.models.TextField&quot;&gt;&lt;code&gt;TextField&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">该 &lt;code&gt;trigram_similar&lt;/code&gt; 查找可以使用&lt;a href=&quot;../../models/fields#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../models/fields#django.db.models.TextField&quot;&gt; &lt;code&gt;TextField&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="8cfd69aed5ca22d022889cf78a3c8807cdca5a1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;u&lt;/code&gt; prefix on the functions below comes from a difference in Python 2 between unicode and bytestrings. If your code doesn&amp;rsquo;t support Python 2, use the functions without the &lt;code&gt;u&lt;/code&gt;.</source>
          <target state="translated">以下函数中的 &lt;code&gt;u&lt;/code&gt; 前缀来自Unicode和字节字符串在Python 2中的区别。如果您的代码不支持Python 2，请使用不带 &lt;code&gt;u&lt;/code&gt; 的函数。</target>
        </trans-unit>
        <trans-unit id="dc0c85a9b38c962d6276590aaff3955606541e05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;u&lt;/code&gt; prefixing of &lt;code&gt;gettext&lt;/code&gt; functions was originally to distinguish usage between unicode strings and bytestrings on Python 2. For code that supports only Python 3, they can be used interchangeably. A deprecation for the prefixed functions may happen in a future Django release.</source>
          <target state="translated">&lt;code&gt;gettext&lt;/code&gt; 函数的 &lt;code&gt;u&lt;/code&gt; 前缀最初是为了区分Python 2上的unicode字符串和字节字符串的用法。对于仅支持Python 3的代码，它们可以互换使用。将来的Django版本可能会弃用带前缀的功能。</target>
        </trans-unit>
        <trans-unit id="a84e56120af8f8c421f6b5bf43405ce68b61d10e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unaccent&lt;/code&gt; lookup allows you to perform accent-insensitive lookups using a dedicated PostgreSQL extension.</source>
          <target state="translated">该 &lt;code&gt;unaccent&lt;/code&gt; 查找，您可以执行使用专用PostgreSQL的扩展不区分重音查找。</target>
        </trans-unit>
        <trans-unit id="dd1cdbdcdcc6cfa69838a0e0c8587f0684d5b99f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unaccent&lt;/code&gt; lookup can be used on &lt;a href=&quot;../../models/fields#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../models/fields#django.db.models.TextField&quot;&gt;&lt;code&gt;TextField&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">该 &lt;code&gt;unaccent&lt;/code&gt; 查找可以使用&lt;a href=&quot;../../models/fields#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../models/fields#django.db.models.TextField&quot;&gt; &lt;code&gt;TextField&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="bcb5cc579c8a83b7d7f74e6050fe7b4d6168cd1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;update()&lt;/code&gt; method is applied instantly and returns the number of rows matched by the query (which may not be equal to the number of rows updated if some rows already have the new value). The only restriction on the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; being updated is that it can only access one database table: the model&amp;rsquo;s main table. You can filter based on related fields, but you can only update columns in the model&amp;rsquo;s main table. Example:</source>
          <target state="translated">的 &lt;code&gt;update()&lt;/code&gt; 方法即时应用和返回该查询（其可能不等于更新的行的数目，如果某些行已经有新的值）匹配的行的数目。对&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;进行更新的唯一限制是它只能访问一个数据库表：模型的主表。您可以基于相关字段进行过滤，但是只能更新模型主表中的列。例：</target>
        </trans-unit>
        <trans-unit id="a1ed9eed4ccb2cf5456dbc06679e8868342bcc2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;update()&lt;/code&gt; method is applied instantly, and the only restriction on the &lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; that is updated is that it can only update columns in the model&amp;rsquo;s main table, not on related models. You can&amp;rsquo;t do this, for example:</source>
          <target state="translated">该 &lt;code&gt;update()&lt;/code&gt; 方法即时应用，并在唯一的限制&lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;被更新的是，它只能在模型中的主表更新列，而不是相关的模型。您不能这样做，例如：</target>
        </trans-unit>
        <trans-unit id="f35456264c2671f1a8e960970538ad92e85e8d33" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;update()&lt;/code&gt; method returns the number of affected rows:</source>
          <target state="translated">的 &lt;code&gt;update()&lt;/code&gt; 方法返回受影响的行数：</target>
        </trans-unit>
        <trans-unit id="817f4899cafb0bcd8c97c7670093f125e7dd5acb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;update_fields&lt;/code&gt; argument can be any iterable containing strings. An empty &lt;code&gt;update_fields&lt;/code&gt; iterable will skip the save. A value of None will perform an update on all fields.</source>
          <target state="translated">所述 &lt;code&gt;update_fields&lt;/code&gt; 参数可以是任何可迭代包含字符串。空的 &lt;code&gt;update_fields&lt;/code&gt; 可迭代将跳过保存。无值将对所有字段执行更新。</target>
        </trans-unit>
        <trans-unit id="471280f5eb20340fbd09a86183e931f5cd03a1c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;update_or_create&lt;/code&gt; method tries to fetch an object from database based on the given &lt;code&gt;kwargs&lt;/code&gt;. If a match is found, it updates the fields passed in the &lt;code&gt;defaults&lt;/code&gt; dictionary.</source>
          <target state="translated">该 &lt;code&gt;update_or_create&lt;/code&gt; 方法试图获取基于给定的从数据库中的对象 &lt;code&gt;kwargs&lt;/code&gt; 。如果找到匹配项，它将更新 &lt;code&gt;defaults&lt;/code&gt; 字典中传递的字段。</target>
        </trans-unit>
        <trans-unit id="aadbaa9aff12551ecf0e8f3bf1a67555bf85ce33" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;urlconf&lt;/code&gt; argument is the URLconf module containing the URL patterns to use for reversing. By default, the root URLconf for the current thread is used.</source>
          <target state="translated">该 &lt;code&gt;urlconf&lt;/code&gt; 参数是一个包含URL模式来使用逆转URL配置模块。默认情况下，使用当前线程的根URLconf。</target>
        </trans-unit>
        <trans-unit id="d0ec3c5e3a91cc9cc4501341473e7acd8b2bcdde" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;urlize&lt;/code&gt; filter also takes an optional parameter &lt;code&gt;autoescape&lt;/code&gt;. If &lt;code&gt;autoescape&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, the link text and URLs will be escaped using Django&amp;rsquo;s built-in &lt;a href=&quot;#std:templatefilter-escape&quot;&gt;&lt;code&gt;escape&lt;/code&gt;&lt;/a&gt; filter. The default value for &lt;code&gt;autoescape&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;urlize&lt;/code&gt; 过滤器还带有一个可选参数 &lt;code&gt;autoescape&lt;/code&gt; 。如果 &lt;code&gt;autoescape&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ，则将使用Django的内置&lt;a href=&quot;#std:templatefilter-escape&quot;&gt; &lt;code&gt;escape&lt;/code&gt; &lt;/a&gt;过滤器对链接文本和URL进行转义。为默认值 &lt;code&gt;autoescape&lt;/code&gt; 是 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4f68a313f36d24cdef578264db7b4b249a7b0538" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;user&lt;/code&gt; object is optional: if it&amp;rsquo;s not provided, some validators may not be able to perform any validation and will accept any password.</source>
          <target state="translated">该 &lt;code&gt;user&lt;/code&gt; 对象是可选的：如果不是提供它，一些验证可能无法进行任何验证，并会接受任何密码。</target>
        </trans-unit>
        <trans-unit id="cff7e1a92a4562d58867515dcdd0f9667de954e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;user_attributes&lt;/code&gt; parameter should be an iterable of names of user attributes to compare to. If this argument is not provided, the default is used: &lt;code&gt;'username', 'first_name', 'last_name', 'email'&lt;/code&gt;. Attributes that don&amp;rsquo;t exist are ignored.</source>
          <target state="translated">该 &lt;code&gt;user_attributes&lt;/code&gt; 参数应该是一个迭代的用户名的属性来比较。如果未提供此参数，则使用默认值： &lt;code&gt;'username', 'first_name', 'last_name', 'email'&lt;/code&gt; 。不存在的属性将被忽略。</target>
        </trans-unit>
        <trans-unit id="9de7f64975904f0ec1392a864e1d7317f71d4adc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;validate()&lt;/code&gt; method on a &lt;code&gt;Field&lt;/code&gt; handles field-specific validation that is not suitable for a validator. It takes a value that has been coerced to a correct datatype and raises &lt;code&gt;ValidationError&lt;/code&gt; on any error. This method does not return anything and shouldn&amp;rsquo;t alter the value. You should override it to handle validation logic that you can&amp;rsquo;t or don&amp;rsquo;t want to put in a validator.</source>
          <target state="translated">&lt;code&gt;Field&lt;/code&gt; 上的 &lt;code&gt;validate()&lt;/code&gt; 方法处理不适合验证程序的特定于字段的验证。它采用已强制转换为正确数据类型的值，并在出现任何错误时引发 &lt;code&gt;ValidationError&lt;/code&gt; 。此方法不返回任何内容，也不应该更改值。您应该重写它以处理您不能或不想放入验证器的验证逻辑。</target>
        </trans-unit>
        <trans-unit id="6f87704d635fe590059b6b15f126720e097b228f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;validators&lt;/code&gt; argument lets you provide a list of validation functions for this field.</source>
          <target state="translated">该 &lt;code&gt;validators&lt;/code&gt; 参数，您可以为这一领域提供的验证功能的列表。</target>
        </trans-unit>
        <trans-unit id="2af696240bba52026bf15b6322a6a83024e0e898" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; argument describes the value to be included in the expression, such as &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;True&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt;. Django knows how to convert these Python values into their corresponding database type.</source>
          <target state="translated">所述 &lt;code&gt;value&lt;/code&gt; 参数描述了被包括在表达式中的值，如 &lt;code&gt;1&lt;/code&gt; ， &lt;code&gt;True&lt;/code&gt; ，或 &lt;code&gt;None&lt;/code&gt; 。Django知道如何将这些Python值转换为相应的数据库类型。</target>
        </trans-unit>
        <trans-unit id="7a7d229cdf94e590a136fe7aaf6f17dbf06a89c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;values()&lt;/code&gt; method also takes optional keyword arguments, &lt;code&gt;**expressions&lt;/code&gt;, which are passed through to &lt;a href=&quot;#django.db.models.query.QuerySet.annotate&quot;&gt;&lt;code&gt;annotate()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">的 &lt;code&gt;values()&lt;/code&gt; 方法也需要可选关键字参数， &lt;code&gt;**expressions&lt;/code&gt; ，它们通过传递给&lt;a href=&quot;#django.db.models.query.QuerySet.annotate&quot;&gt; &lt;code&gt;annotate()&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="2c13b2f9c51e4baf68281653e0b158ec2efa1d5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;values()&lt;/code&gt; method takes optional positional arguments, &lt;code&gt;*fields&lt;/code&gt;, which specify field names to which the &lt;code&gt;SELECT&lt;/code&gt; should be limited. If you specify the fields, each dictionary will contain only the field keys/values for the fields you specify. If you don&amp;rsquo;t specify the fields, each dictionary will contain a key and value for every field in the database table.</source>
          <target state="translated">的 &lt;code&gt;values()&lt;/code&gt; 方法需要可选位置参数， &lt;code&gt;*fields&lt;/code&gt; ，其指定字段名该 &lt;code&gt;SELECT&lt;/code&gt; 应限制。如果指定字段，则每个字典将仅包含您指定的字段的字段键/值。如果不指定字段，则每个字典将为数据库表中的每个字段包含一个键和值。</target>
        </trans-unit>
        <trans-unit id="088daae2a399c92df1dade02fc570b7324d80838" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;verbosity&lt;/code&gt; argument has the same behavior as for &lt;a href=&quot;#django.test.runner.DiscoverRunner&quot;&gt;&lt;code&gt;DiscoverRunner&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在 &lt;code&gt;verbosity&lt;/code&gt; 的说法具有相同的行为作为&lt;a href=&quot;#django.test.runner.DiscoverRunner&quot;&gt; &lt;code&gt;DiscoverRunner&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2432a66df5a032d86ba6983c5190f40423564326" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;view&lt;/code&gt; argument is a view function or the result of &lt;a href=&quot;class-based-views/base#django.views.generic.base.View.as_view&quot;&gt;&lt;code&gt;as_view()&lt;/code&gt;&lt;/a&gt; for class-based views. It can also be an &lt;a href=&quot;#django.urls.include&quot;&gt;&lt;code&gt;django.urls.include()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;view&lt;/code&gt; 参数是一视图功能或结果&lt;a href=&quot;class-based-views/base#django.views.generic.base.View.as_view&quot;&gt; &lt;code&gt;as_view()&lt;/code&gt; &lt;/a&gt;用于基于类的视图。也可以是&lt;a href=&quot;#django.urls.include&quot;&gt; &lt;code&gt;django.urls.include()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6577e25bb6f82d70c2752592f11f31ca5042cae8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;view&lt;/code&gt; part of the view &amp;ndash; the method that accepts a &lt;code&gt;request&lt;/code&gt; argument plus arguments, and returns a HTTP response.</source>
          <target state="translated">的 &lt;code&gt;view&lt;/code&gt; 的视图的一部分-一个接受该方法 &lt;code&gt;request&lt;/code&gt; 参数加上参数，并返回一个HTTP响应。</target>
        </trans-unit>
        <trans-unit id="9078710ffa196d9ede5d8d2a6b469ae61ecba885" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;view&lt;/code&gt;, &lt;code&gt;kwargs&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; arguments are the same as for &lt;a href=&quot;#django.urls.path&quot;&gt;&lt;code&gt;path()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">的 &lt;code&gt;view&lt;/code&gt; ， &lt;code&gt;kwargs&lt;/code&gt; 和 &lt;code&gt;name&lt;/code&gt; 参数是相同&lt;a href=&quot;#django.urls.path&quot;&gt; &lt;code&gt;path()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b0109b3e1d427741805eb07f5694cec5fcd8024" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;week&lt;/code&gt;&lt;code&gt;lookup_type&lt;/code&gt; is calculated based on &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO-8601&quot;&gt;ISO-8601&lt;/a&gt;, i.e., a week starts on a Monday. The first week of a year is the one that contains the year&amp;rsquo;s first Thursday, i.e. the first week has the majority (four or more) of its days in the year. The value returned is in the range 1 to 52 or 53.</source>
          <target state="translated">该 &lt;code&gt;week&lt;/code&gt; &lt;code&gt;lookup_type&lt;/code&gt; 是基于计算的&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO-8601&quot;&gt;ISO-8601&lt;/a&gt;，即一周开始于星期一。一年的第一周是包含一年中第一个星期四的周，即，第一周占一年中大部分时间（四天或更多天）。返回的值在1到52或53的范围内。</target>
        </trans-unit>
        <trans-unit id="0217c6df9d195442693669a990f4df4dfb0eccc7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;week_day&lt;/code&gt;&lt;code&gt;lookup_type&lt;/code&gt; is calculated differently from most databases and from Python&amp;rsquo;s standard functions. This function will return &lt;code&gt;1&lt;/code&gt; for Sunday, &lt;code&gt;2&lt;/code&gt; for Monday, through &lt;code&gt;7&lt;/code&gt; for Saturday.</source>
          <target state="translated">该 &lt;code&gt;week_day&lt;/code&gt; &lt;code&gt;lookup_type&lt;/code&gt; 从大多数的数据库和Python的标准功能不同的方式计算。此函数将在星期日返回 &lt;code&gt;1&lt;/code&gt; ，在星期一返回 &lt;code&gt;2&lt;/code&gt; ，通过星期六返回 &lt;code&gt;7&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="204fda260f8a5d7347d1356a741248798ebeccae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;week_format&lt;/code&gt; attribute is a &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strptime&quot;&gt;&lt;code&gt;strptime()&lt;/code&gt;&lt;/a&gt; format string used to parse the week number. The following values are supported:</source>
          <target state="translated">所述 &lt;code&gt;week_format&lt;/code&gt; 属性是&lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strptime&quot;&gt; &lt;code&gt;strptime()&lt;/code&gt; &lt;/a&gt;用来解析星期编号格式字符串。支持以下值：</target>
        </trans-unit>
        <trans-unit id="148f289535ce903bc222c3f9276240a02680a97d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;where&lt;/code&gt; parameter described above may use standard Python database string placeholders &amp;mdash; &lt;code&gt;'%s'&lt;/code&gt; to indicate parameters the database engine should automatically quote. The &lt;code&gt;params&lt;/code&gt; argument is a list of any extra parameters to be substituted.</source>
          <target state="translated">上面描述的 &lt;code&gt;where&lt;/code&gt; 参数可以使用标准的Python数据库字符串占位符- &lt;code&gt;'%s'&lt;/code&gt; 来指示数据库引擎应自动引用的参数。所述 &lt;code&gt;params&lt;/code&gt; 参数是要取代的任何额外的参数的列表。</target>
        </trans-unit>
        <trans-unit id="928458ff4dd4c8ddac631f69d44268e9e6a13682" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;widget&lt;/code&gt; argument lets you specify a &lt;code&gt;Widget&lt;/code&gt; class to use when rendering this &lt;code&gt;Field&lt;/code&gt;. See &lt;a href=&quot;widgets&quot;&gt;Widgets&lt;/a&gt; for more information.</source>
          <target state="translated">该 &lt;code&gt;widget&lt;/code&gt; 参数允许您指定 &lt;code&gt;Widget&lt;/code&gt; 类来使用这个渲染时 &lt;code&gt;Field&lt;/code&gt; 。有关更多信息，请参见&lt;a href=&quot;widgets&quot;&gt;小部件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="771ca1d9164be58541ba427a2ab56788fbb1ef27" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;widgets&lt;/code&gt; dictionary accepts either widget instances (e.g., &lt;code&gt;Textarea(...)&lt;/code&gt;) or classes (e.g., &lt;code&gt;Textarea&lt;/code&gt;). Note that the &lt;code&gt;widgets&lt;/code&gt; dictionary is ignored for a model field with a non-empty &lt;code&gt;choices&lt;/code&gt; attribute. In this case, you must override the form field to use a different widget.</source>
          <target state="translated">该 &lt;code&gt;widgets&lt;/code&gt; 字典可以接受插件实例（例如， &lt;code&gt;Textarea(...)&lt;/code&gt; ）或类（例如， &lt;code&gt;Textarea&lt;/code&gt; ）。请注意，对于具有非空 &lt;code&gt;choices&lt;/code&gt; 属性的模型字段，将忽略 &lt;code&gt;widgets&lt;/code&gt; 字典。在这种情况下，您必须覆盖表单字段才能使用其他小部件。</target>
        </trans-unit>
        <trans-unit id="55cb3f54ccb705f97100e71a7cb698e09c180cc7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{% cache %}&lt;/code&gt; template tag caches the contents of the block for a given amount of time. It takes at least two arguments: the cache timeout, in seconds, and the name to give the cache fragment. The fragment is cached forever if timeout is &lt;code&gt;None&lt;/code&gt;. The name will be taken as is, do not use a variable. For example:</source>
          <target state="translated">的 &lt;code&gt;{% cache %}&lt;/code&gt; 模板标签缓存块的内容对于给定的时间量。它至少需要两个参数：高速缓存超时（以秒为单位）和提供高速缓存片段的名称。如果超时为 &lt;code&gt;None&lt;/code&gt; ,则片段将永远被缓存。名称将按原样使用，请勿使用变量。例如：</target>
        </trans-unit>
        <trans-unit id="73156f3d9b7d03ef0b54eab397489460eaa8942e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{% if %}&lt;/code&gt; tag evaluates a variable, and if that variable is &amp;ldquo;true&amp;rdquo; (i.e. exists, is not empty, and is not a false boolean value) the contents of the block are output:</source>
          <target state="translated">的 &lt;code&gt;{% if %}&lt;/code&gt; 标签计算一个变量，并且如果该变量是&amp;ldquo;真&amp;rdquo;（即存在，不为空，并且不是假布尔值）的数据块的内容被输出：</target>
        </trans-unit>
        <trans-unit id="d56bff40007a782c94320fcc09d900063f01065f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{% ifchanged %}&lt;/code&gt; block tag is used within a loop. It has two possible uses.</source>
          <target state="translated">的 &lt;code&gt;{% ifchanged %}&lt;/code&gt; 块标签被用于循环中。它有两种可能的用途。</target>
        </trans-unit>
        <trans-unit id="ad27d192e19a8573805d62620858d25ff46a643d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{% lorem %}&lt;/code&gt; tag can be used with zero, one, two or three arguments. The arguments are:</source>
          <target state="translated">的 &lt;code&gt;{% lorem %}&lt;/code&gt; 标签可以与零个，一个，两个或三个参数一起使用。参数为：</target>
        </trans-unit>
        <trans-unit id="17d03c427e8e45fa77cafb2812a34bdad5eb2228" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{% static %}&lt;/code&gt; template tag generates the absolute URL of static files.</source>
          <target state="translated">该 &lt;code&gt;{% static %}&lt;/code&gt; 模板标签生成静态文件的绝对路径。</target>
        </trans-unit>
        <trans-unit id="138792f47cc5f3c4cf57d1c1020d60fb46253001" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{% static %}&lt;/code&gt; template tag is not available for use in static files which aren&amp;rsquo;t generated by Django, like your stylesheet. You should always use &lt;strong&gt;relative paths&lt;/strong&gt; to link your static files between each other, because then you can change &lt;a href=&quot;../ref/settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; (used by the &lt;a href=&quot;../ref/templates/builtins#std:templatetag-static&quot;&gt;&lt;code&gt;static&lt;/code&gt;&lt;/a&gt; template tag to generate its URLs) without having to modify a bunch of paths in your static files as well.</source>
          <target state="translated">该 &lt;code&gt;{% static %}&lt;/code&gt; 模板标签不可用于在静态文件中使用未通过Django的产生，像你的样式表。您应该始终使用&lt;strong&gt;相对路径&lt;/strong&gt;在彼此之间链接静态文件，因为这样您就可以更改&lt;a href=&quot;../ref/settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt;（由&lt;a href=&quot;../ref/templates/builtins#std:templatetag-static&quot;&gt; &lt;code&gt;static&lt;/code&gt; &lt;/a&gt;模板标记用于生成其URL），而不必修改静态文件中的一堆路径。</target>
        </trans-unit>
        <trans-unit id="66445e8931363b5909bd25c58e5b6c95e72cb565" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{% trans %}&lt;/code&gt; template tag translates either a constant string (enclosed in single or double quotes) or variable content:</source>
          <target state="translated">的 &lt;code&gt;{% trans %}&lt;/code&gt; 模板标签转换或者一个常数字符串（用单引号或双引号）或可变内容：</target>
        </trans-unit>
        <trans-unit id="2ae45e4443354fea0eaa62aa004363b461d30eee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{% translate %}&lt;/code&gt; template tag translates either a constant string (enclosed in single or double quotes) or variable content:</source>
          <target state="translated">的 &lt;code&gt;{% translate %}&lt;/code&gt; 模板标签转换或者一个常数字符串（用单引号或双引号）或可变内容：</target>
        </trans-unit>
        <trans-unit id="11d23e85709de25b7d8e3b4316520c950588d340" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;context&lt;/strong&gt;, or a list of variables available in the view&amp;rsquo;s template.</source>
          <target state="translated">的&lt;strong&gt;背景下&lt;/strong&gt;，或在视图的模板中可用的变量列表。</target>
        </trans-unit>
        <trans-unit id="f640691d4a716673e693782f0e3084aaa1804956" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;current time zone&lt;/strong&gt; is the time zone that&amp;rsquo;s used for rendering.</source>
          <target state="translated">在&lt;strong&gt;当前时区&lt;/strong&gt;是所使用渲染的时区。</target>
        </trans-unit>
        <trans-unit id="601a05ecb118260dadad0da5a2a99d15be6c5743" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;default time zone&lt;/strong&gt; is the time zone defined by the &lt;a href=&quot;../../ref/settings#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">在&lt;strong&gt;默认时区&lt;/strong&gt;是由定义的时区&lt;a href=&quot;../../ref/settings#std:setting-TIME_ZONE&quot;&gt; &lt;code&gt;TIME_ZONE&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="64522a98a7a31b95777b207e3d74e1ea58327893" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;models&lt;/strong&gt; section of the &lt;code&gt;admindocs&lt;/code&gt; page describes each model in the system along with all the fields, properties, and methods available on it. Relationships to other models appear as hyperlinks. Descriptions are pulled from &lt;code&gt;help_text&lt;/code&gt; attributes on fields or from docstrings on model methods.</source>
          <target state="translated">&lt;code&gt;admindocs&lt;/code&gt; 页面的&lt;strong&gt;模型&lt;/strong&gt;部分描述了系统中的每个模型，以及系统上可用的所有字段，属性和方法。与其他模型的关系显示为超链接。描述是从字段的 &lt;code&gt;help_text&lt;/code&gt; 属性或模型方法的文档字符串中提取的。</target>
        </trans-unit>
        <trans-unit id="67e2a383bbb5fb7148ab99433698386580abf273" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;tags&lt;/strong&gt; and &lt;strong&gt;filters&lt;/strong&gt;&lt;code&gt;admindocs&lt;/code&gt; sections describe all the tags and filters that come with Django (in fact, the &lt;a href=&quot;../../templates/builtins#ref-templates-builtins-tags&quot;&gt;built-in tag reference&lt;/a&gt; and &lt;a href=&quot;../../templates/builtins#ref-templates-builtins-filters&quot;&gt;built-in filter reference&lt;/a&gt; documentation come directly from those pages). Any tags or filters that you create or are added by a third-party app will show up in these sections as well.</source>
          <target state="translated">该&lt;strong&gt;标签&lt;/strong&gt;和&lt;strong&gt;过滤器&lt;/strong&gt; &lt;code&gt;admindocs&lt;/code&gt; 部分描述了所有附带的Django的标签和过滤器（事实上，&lt;a href=&quot;../../templates/builtins#ref-templates-builtins-tags&quot;&gt;内置标签参考&lt;/a&gt;，并&lt;a href=&quot;../../templates/builtins#ref-templates-builtins-filters&quot;&gt;内置过滤器参照&lt;/a&gt;文件直接从这些页面来）。您创建或由第三方应用添加的任何标签或过滤器也会显示在这些部分中。</target>
        </trans-unit>
        <trans-unit id="1aca341310bfb222766142661d3711f8dbf6d7eb" translate="yes" xml:space="preserve">
          <source>The API for the &lt;a href=&quot;#django.test.RequestFactory&quot;&gt;&lt;code&gt;RequestFactory&lt;/code&gt;&lt;/a&gt; is a slightly restricted subset of the test client API:</source>
          <target state="translated">&lt;a href=&quot;#django.test.RequestFactory&quot;&gt; &lt;code&gt;RequestFactory&lt;/code&gt; &lt;/a&gt;的API 是测试客户端API的一个受限制的子集：</target>
        </trans-unit>
        <trans-unit id="d217aa283b3b614901a4512ea4ff4ed87ce55438" translate="yes" xml:space="preserve">
          <source>The API of &lt;a href=&quot;#django.db.models.fields.files.FieldFile&quot;&gt;&lt;code&gt;FieldFile&lt;/code&gt;&lt;/a&gt; mirrors that of &lt;a href=&quot;../files/file#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;, with one key difference: &lt;em&gt;The object wrapped by the class is not necessarily a wrapper around Python&amp;rsquo;s built-in file object.&lt;/em&gt; Instead, it is a wrapper around the result of the &lt;a href=&quot;../files/storage#django.core.files.storage.Storage.open&quot;&gt;&lt;code&gt;Storage.open()&lt;/code&gt;&lt;/a&gt; method, which may be a &lt;a href=&quot;../files/file#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object, or it may be a custom storage&amp;rsquo;s implementation of the &lt;a href=&quot;../files/file#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">&lt;a href=&quot;#django.db.models.fields.files.FieldFile&quot;&gt; &lt;code&gt;FieldFile&lt;/code&gt; &lt;/a&gt;的API 反映了&lt;a href=&quot;../files/file#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;的API，但有一个主要区别：&lt;em&gt;类包装的对象不一定是Python内置文件对象的包装。&lt;/em&gt;相反，它是&lt;a href=&quot;../files/storage#django.core.files.storage.Storage.open&quot;&gt; &lt;code&gt;Storage.open()&lt;/code&gt; &lt;/a&gt;方法结果的包装，后者可以是&lt;a href=&quot;../files/file#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;对象，也可以是自定义存储对&lt;a href=&quot;../files/file#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; API 的实现。</target>
        </trans-unit>
        <trans-unit id="553445eba83fe025ab0f5f215a28c4e550e90827" translate="yes" xml:space="preserve">
          <source>The CSRF middleware and template tag provides easy-to-use protection against &lt;a href=&quot;https://www.squarefree.com/securitytips/web-developers.html#CSRF&quot;&gt;Cross Site Request Forgeries&lt;/a&gt;. This type of attack occurs when a malicious website contains a link, a form button or some JavaScript that is intended to perform some action on your website, using the credentials of a logged-in user who visits the malicious site in their browser. A related type of attack, &amp;lsquo;login CSRF&amp;rsquo;, where an attacking site tricks a user&amp;rsquo;s browser into logging into a site with someone else&amp;rsquo;s credentials, is also covered.</source>
          <target state="translated">CSRF中间件和模板标签提供了易于使用的&lt;a href=&quot;https://www.squarefree.com/securitytips/web-developers.html#CSRF&quot;&gt;跨站点请求伪造&lt;/a&gt;保护。当恶意网站包含链接，表单按钮或某些旨在使用您的浏览器访问恶意网站的登录用户的凭据在您的网站上执行某些操作的JavaScript时，就会发生这种类型的攻击。还涵盖了一种相关的攻击类型&amp;ldquo;登录CSRF&amp;rdquo;，攻击站点在其中诱骗用户的浏览器使用他人的凭据登录到该站点。</target>
        </trans-unit>
        <trans-unit id="f01982ec73cd1ce624769540ec551de0741729f5" translate="yes" xml:space="preserve">
          <source>The CSRF middleware is activated by default in the &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting. If you override that setting, remember that &lt;code&gt;'django.middleware.csrf.CsrfViewMiddleware'&lt;/code&gt; should come before any view middleware that assume that CSRF attacks have been dealt with.</source>
          <target state="translated">默认情况下，在&lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt;设置中激活CSRF中间件。如果您覆盖了该设置，请记住，在假定已处理CSRF攻击的任何视图中间件之前，都应先添加 &lt;code&gt;'django.middleware.csrf.CsrfViewMiddleware'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8ebff9174a91979318e76f9dbafaad5ad443c6f2" translate="yes" xml:space="preserve">
          <source>The CSRF protection cannot protect against man-in-the-middle attacks, so use &lt;a href=&quot;../topics/security#security-recommendation-ssl&quot;&gt;HTTPS&lt;/a&gt; with &lt;a href=&quot;middleware#http-strict-transport-security&quot;&gt;HTTP Strict Transport Security&lt;/a&gt;. It also assumes &lt;a href=&quot;../topics/security#host-headers-virtual-hosting&quot;&gt;validation of the HOST header&lt;/a&gt; and that there aren&amp;rsquo;t any &lt;a href=&quot;../topics/security#cross-site-scripting&quot;&gt;cross-site scripting vulnerabilities&lt;/a&gt; on your site (because XSS vulnerabilities already let an attacker do anything a CSRF vulnerability allows and much worse).</source>
          <target state="translated">CSRF保护不能抵御中间人攻击，因此请结合使用&lt;a href=&quot;../topics/security#security-recommendation-ssl&quot;&gt;HTTPS&lt;/a&gt;和&lt;a href=&quot;middleware#http-strict-transport-security&quot;&gt;HTTP Strict Transport Security&lt;/a&gt;。它还假定已&lt;a href=&quot;../topics/security#host-headers-virtual-hosting&quot;&gt;验证HOST标头，&lt;/a&gt;并且您的站点上没有任何&lt;a href=&quot;../topics/security#cross-site-scripting&quot;&gt;跨站点脚本漏洞&lt;/a&gt;（因为XSS漏洞已使攻击者能够做CSRF漏洞允许的任何事情，并且更糟）。</target>
        </trans-unit>
        <trans-unit id="2a3f1d2acac7daf82355cd91db9e2626e6a81e23" translate="yes" xml:space="preserve">
          <source>The CSRF protection is based on the following things:</source>
          <target state="translated">CSRF保护是基于以下几点。</target>
        </trans-unit>
        <trans-unit id="050726ff76ed191299c1c220b54120661f26d55a" translate="yes" xml:space="preserve">
          <source>The CSRF token cookie is named &lt;code&gt;csrftoken&lt;/code&gt; by default, but you can control the cookie name via the &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_NAME&quot;&gt;&lt;code&gt;CSRF_COOKIE_NAME&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">默认情况下，CSRF令牌cookie的名称为 &lt;code&gt;csrftoken&lt;/code&gt; ，但是您可以通过&lt;a href=&quot;settings#std:setting-CSRF_COOKIE_NAME&quot;&gt; &lt;code&gt;CSRF_COOKIE_NAME&lt;/code&gt; &lt;/a&gt;设置来控制cookie名称。</target>
        </trans-unit>
        <trans-unit id="a318ecda4c019f8e8a6d943d130890511b7db569" translate="yes" xml:space="preserve">
          <source>The CSRF token is also present in the DOM, but only if explicitly included using &lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt;&lt;code&gt;csrf_token&lt;/code&gt;&lt;/a&gt; in a template. The cookie contains the canonical token; the &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; will prefer the cookie to the token in the DOM. Regardless, you&amp;rsquo;re guaranteed to have the cookie if the token is present in the DOM, so you should use the cookie!</source>
          <target state="translated">CSRF令牌也存在于DOM中，但&lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt; &lt;code&gt;csrf_token&lt;/code&gt; &lt;/a&gt;是使用模板中的csrf_token明确包含了CSRF令牌。Cookie包含规范令牌；该 &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; 会选择在DOM cookie来标记。无论如何，如果令牌在DOM中存在，则可以保证拥有cookie，因此您应该使用cookie！</target>
        </trans-unit>
        <trans-unit id="c65defd261b7048557ca65ad2eff6d8eafa78e0f" translate="yes" xml:space="preserve">
          <source>The CSV module takes care of quoting for you, so you don&amp;rsquo;t have to worry about escaping strings with quotes or commas in them. Pass &lt;code&gt;writerow()&lt;/code&gt; your raw strings, and it&amp;rsquo;ll do the right thing.</source>
          <target state="translated">CSV模块负责为您报价，因此您不必担心转义带有引号或逗号的字符串。传递 &lt;code&gt;writerow()&lt;/code&gt; 您的原始字符串，它将做正确的事。</target>
        </trans-unit>
        <trans-unit id="e7272524d432fef1b923b58e53abb70eebeb94d5" translate="yes" xml:space="preserve">
          <source>The Commands</source>
          <target state="translated">命令</target>
        </trans-unit>
        <trans-unit id="03837e0d23f794c5eab65bc2d4e531c15e647402" translate="yes" xml:space="preserve">
          <source>The CycleNode is iterating, but it&amp;rsquo;s iterating globally. As far as Thread 1 and Thread 2 are concerned, it&amp;rsquo;s always returning the same value. This is not what we want!</source>
          <target state="translated">CycleNode正在迭代，但是在全局范围内进行迭代。就线程1和线程2而言，它始终返回相同的值。这不是我们想要的！</target>
        </trans-unit>
        <trans-unit id="4c55d5a8daf5807fdeacbd0081a2a02efa19355c" translate="yes" xml:space="preserve">
          <source>The DE-9IM Intersection Matrix for the two geometries is &lt;code&gt;T*****FF*&lt;/code&gt;, &lt;code&gt;*T****FF*&lt;/code&gt;, &lt;code&gt;***T**FF*&lt;/code&gt;, or &lt;code&gt;****T*FF*&lt;/code&gt;.</source>
          <target state="translated">这两个几何的DE-9IM相交矩阵是 &lt;code&gt;T*****FF*&lt;/code&gt; ， &lt;code&gt;*T****FF*&lt;/code&gt; ， &lt;code&gt;***T**FF*&lt;/code&gt; 或 &lt;code&gt;****T*FF*&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3a0dea3d12d3d820b329187086fcb9957fe94e93" translate="yes" xml:space="preserve">
          <source>The Django &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; class</source>
          <target state="translated">Django &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;类</target>
        </trans-unit>
        <trans-unit id="7a593fde84fef92404caae7f9d61de6696560cc4" translate="yes" xml:space="preserve">
          <source>The Django Admin application defines a number of customized widgets for calendars, filtered selections, and so on. These widgets define asset requirements, and the Django Admin uses the custom widgets in place of the Django defaults. The Admin templates will only include those files that are required to render the widgets on any given page.</source>
          <target state="translated">Django Admin应用程序为日历、过滤选择等定义了许多自定义widget。这些widget定义了资产需求,Django Admin使用自定义widget来代替Django默认值。管理员模板将只包含那些在任何给定页面上渲染小部件所需的文件。</target>
        </trans-unit>
        <trans-unit id="caf39b6ac378d06f4ba7e4a0d85d5d768c57ee7d" translate="yes" xml:space="preserve">
          <source>The Django ORM provides many tools to express queries without writing raw SQL. For example:</source>
          <target state="translated">Django ORM提供了很多工具来表达查询,而不需要编写原始SQL。比如说</target>
        </trans-unit>
        <trans-unit id="c9bd59b8d237a40c09a224e4de9d77f34e7297e9" translate="yes" xml:space="preserve">
          <source>The Django admin documentation generator</source>
          <target state="translated">Django管理文档生成器</target>
        </trans-unit>
        <trans-unit id="409dd9b2237f8f97628f0d4b1a1cc36aa574d438" translate="yes" xml:space="preserve">
          <source>The Django admin is tightly coupled to the Django &lt;a href=&quot;default#user-objects&quot;&gt;User object&lt;/a&gt;. The best way to deal with this is to create a Django &lt;code&gt;User&lt;/code&gt; object for each user that exists for your backend (e.g., in your LDAP directory, your external SQL database, etc.) You can either write a script to do this in advance, or your &lt;code&gt;authenticate&lt;/code&gt; method can do it the first time a user logs in.</source>
          <target state="translated">Django管理员与Django &lt;a href=&quot;default#user-objects&quot;&gt;User对象&lt;/a&gt;紧密耦合。解决此问题的最佳方法是为后端存在的每个用户（例如，在LDAP目录，外部SQL数据库等中）创建一个Django &lt;code&gt;User&lt;/code&gt; 对象。您可以预先编写脚本来执行此操作，或您的 &lt;code&gt;authenticate&lt;/code&gt; 方法可以在用户首次登录时执行此操作。</target>
        </trans-unit>
        <trans-unit id="20824807ef99910351f52c7b6bbeb0a308bbbb09" translate="yes" xml:space="preserve">
          <source>The Django admin site</source>
          <target state="translated">Django管理网站</target>
        </trans-unit>
        <trans-unit id="aa458e5d08eb689cc116f4b3198410f8a2b19a05" translate="yes" xml:space="preserve">
          <source>The Django admin site is activated by default. Let&amp;rsquo;s start the development server and explore it.</source>
          <target state="translated">Django管理站点默认情况下处于激活状态。让我们启动开发服务器并进行探索。</target>
        </trans-unit>
        <trans-unit id="ad0a0309eb44e91a7fd1bba2a4f8950281166960" translate="yes" xml:space="preserve">
          <source>The Django admin site uses permissions as follows:</source>
          <target state="translated">Django管理网站使用的权限如下。</target>
        </trans-unit>
        <trans-unit id="84d305a014b50a87d55dfdccf87b463a4f1cbaff" translate="yes" xml:space="preserve">
          <source>The Django authentication system handles both authentication and authorization. Briefly, authentication verifies a user is who they claim to be, and authorization determines what an authenticated user is allowed to do. Here the term authentication is used to refer to both tasks.</source>
          <target state="translated">Django认证系统同时处理认证和授权。简而言之,身份验证验证了用户的身份,而授权则决定了经过身份验证的用户可以做什么。这里所说的认证是指这两个任务。</target>
        </trans-unit>
        <trans-unit id="e7a6747382a4de87d75f21c83e502ee4684a3dbc" translate="yes" xml:space="preserve">
          <source>The Django debug page has hooks to provide detailed information when a template error arises. Custom template engines can use these hooks to enhance the traceback information that appears to users. The following hooks are available:</source>
          <target state="translated">Django调试页面有钩子在模板错误出现时提供详细信息。自定义模板引擎可以使用这些钩子来增强出现在用户面前的回溯信息。以下是可用的钩子。</target>
        </trans-unit>
        <trans-unit id="00d640ab5ef138657aa229fc79bd67937b07ecdd" translate="yes" xml:space="preserve">
          <source>The Django email functions outlined above all protect against header injection by forbidding newlines in header values. If any &lt;code&gt;subject&lt;/code&gt;, &lt;code&gt;from_email&lt;/code&gt; or &lt;code&gt;recipient_list&lt;/code&gt; contains a newline (in either Unix, Windows or Mac style), the email function (e.g. &lt;a href=&quot;#django.core.mail.send_mail&quot;&gt;&lt;code&gt;send_mail()&lt;/code&gt;&lt;/a&gt;) will raise &lt;code&gt;django.core.mail.BadHeaderError&lt;/code&gt; (a subclass of &lt;code&gt;ValueError&lt;/code&gt;) and, hence, will not send the email. It&amp;rsquo;s your responsibility to validate all data before passing it to the email functions.</source>
          <target state="translated">上面概述的Django电子邮件功能通过禁止标头值中的换行符来防止标头注入。如果任何 &lt;code&gt;subject&lt;/code&gt; ， &lt;code&gt;from_email&lt;/code&gt; 或 &lt;code&gt;recipient_list&lt;/code&gt; 包含换行符（以Unix，Windows或Mac风格），则电子邮件功能（例如&lt;a href=&quot;#django.core.mail.send_mail&quot;&gt; &lt;code&gt;send_mail()&lt;/code&gt; &lt;/a&gt;）将引发 &lt;code&gt;django.core.mail.BadHeaderError&lt;/code&gt; （ &lt;code&gt;ValueError&lt;/code&gt; 的子类），因此，不发送电子邮件。您有责任在将所有数据传递到电子邮件功能之前对其进行验证。</target>
        </trans-unit>
        <trans-unit id="12c5d7be1ed59e42d6169c3a101ade0b6ec5e50b" translate="yes" xml:space="preserve">
          <source>The Django object itself can be inspected as &lt;code&gt;deserialized_object.object&lt;/code&gt;. If fields in the serialized data do not exist on a model, a &lt;code&gt;DeserializationError&lt;/code&gt; will be raised unless the &lt;code&gt;ignorenonexistent&lt;/code&gt; argument is passed in as &lt;code&gt;True&lt;/code&gt;:</source>
          <target state="translated">Django对象本身可以作为 &lt;code&gt;deserialized_object.object&lt;/code&gt; 检查。如果模型中不存在序列化数据中的字段，则将引发 &lt;code&gt;DeserializationError&lt;/code&gt; ,除非将 &lt;code&gt;ignorenonexistent&lt;/code&gt; 参数作为 &lt;code&gt;True&lt;/code&gt; 传递：</target>
        </trans-unit>
        <trans-unit id="fddba08a24aa2f5973a61e3acf52bc596ed9b96e" translate="yes" xml:space="preserve">
          <source>The Django open-source project</source>
          <target state="translated">Django开源项目</target>
        </trans-unit>
        <trans-unit id="92f06f3602b95676d65c1225ffde50b7fc548918" translate="yes" xml:space="preserve">
          <source>The Django sessions framework is entirely, and solely, cookie-based. It does not fall back to putting session IDs in URLs as a last resort, as PHP does. This is an intentional design decision. Not only does that behavior make URLs ugly, it makes your site vulnerable to session-ID theft via the &amp;ldquo;Referer&amp;rdquo; header.</source>
          <target state="translated">Django会话框架完全且完全基于cookie。它并没有像PHP那样将会话ID放在URL中作为最后手段。这是一个故意的设计决定。这种行为不仅使URL丑陋，而且使您的站点容易通过&amp;ldquo; Referer&amp;rdquo;标头盗用会话ID。</target>
        </trans-unit>
        <trans-unit id="442dc4a037bb4777abe615e2fecc5a925351592f" translate="yes" xml:space="preserve">
          <source>The Django sitemap framework automates the creation of this XML file by letting you express this information in Python code.</source>
          <target state="translated">Django网站地图框架通过让你用Python代码表达这些信息,自动创建这个XML文件。</target>
        </trans-unit>
        <trans-unit id="30c245aadb75286ee5650a024c66dd02773eb411" translate="yes" xml:space="preserve">
          <source>The Django template language</source>
          <target state="translated">Django模板语言</target>
        </trans-unit>
        <trans-unit id="a5cd5f75a37d2003a65396cbe3bc8f280118e32d" translate="yes" xml:space="preserve">
          <source>The Django template language: for Python programmers</source>
          <target state="translated">Django模板语言:为Python程序员服务</target>
        </trans-unit>
        <trans-unit id="430a962fc891a6e50fa291aadada019108cdb86a" translate="yes" xml:space="preserve">
          <source>The Django template system provides tags which function similarly to some programming constructs &amp;ndash; an &lt;a href=&quot;builtins#std:templatetag-if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; tag for boolean tests, a &lt;a href=&quot;builtins#std:templatetag-for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; tag for looping, etc. &amp;ndash; but these are not simply executed as the corresponding Python code, and the template system will not execute arbitrary Python expressions. Only the tags, filters and syntax listed below are supported by default (although you can add &lt;a href=&quot;../../howto/custom-template-tags&quot;&gt;your own extensions&lt;/a&gt; to the template language as needed).</source>
          <target state="translated">Django模板系统提供的标签功能与某些编程结构类似- 用于布尔测试的&lt;a href=&quot;builtins#std:templatetag-if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt;标签，用于循环的&lt;a href=&quot;builtins#std:templatetag-for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt;标签等-但是这些标签不能简单地作为相应的Python代码执行，并且模板系统不会执行任意Python表达式。默认情况下，仅支持下面列出的标签，过滤器和语法（尽管您可以根据需要&lt;a href=&quot;../../howto/custom-template-tags&quot;&gt;将自己的扩展名&lt;/a&gt;添加到模板语言中）。</target>
        </trans-unit>
        <trans-unit id="b07a58e32fcbf1b0cfdd968e8ac26c77cfd8b93b" translate="yes" xml:space="preserve">
          <source>The Django test client</source>
          <target state="translated">Django测试客户端</target>
        </trans-unit>
        <trans-unit id="55707dba4575f6781496f0ff9bccdc9fd21c02de" translate="yes" xml:space="preserve">
          <source>The Django versions and ORM features supported by these unofficial backends vary considerably. Queries regarding the specific capabilities of these unofficial backends, along with any support queries, should be directed to the support channels provided by each 3rd party project.</source>
          <target state="translated">这些非官方后端所支持的Django版本和ORM功能有很大的不同。关于这些非官方后端的具体功能的查询,以及任何支持的查询,都应该通过每个第三方项目提供的支持渠道进行。</target>
        </trans-unit>
        <trans-unit id="7bfd954f133e7b795d984004982f2fd38ffc52c0" translate="yes" xml:space="preserve">
          <source>The Django wrappers for database exceptions behave exactly the same as the underlying database exceptions. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 249&lt;/strong&gt;&lt;/a&gt;, the Python Database API Specification v2.0, for further information.</source>
          <target state="translated">用于数据库异常的Django包装器的行为与基础数据库异常完全相同。有关更多信息，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 249&lt;/strong&gt;&lt;/a&gt;（Python数据库API规范v2.0）。</target>
        </trans-unit>
        <trans-unit id="0211f518ca14e305e7130133825ce18b2b0fe4c7" translate="yes" xml:space="preserve">
          <source>The Django-specific options here are:</source>
          <target state="translated">这里的Django专用选项是:</target>
        </trans-unit>
        <trans-unit id="33cf02ab487b8e90cb7b19b8c02f8fdcf46ab6cf" translate="yes" xml:space="preserve">
          <source>The FancyCalendar widget inherits all the assets from its parent widget. If you don&amp;rsquo;t want &lt;code&gt;Media&lt;/code&gt; to be inherited in this way, add an &lt;code&gt;extend=False&lt;/code&gt; declaration to the &lt;code&gt;Media&lt;/code&gt; declaration:</source>
          <target state="translated">FancyCalendar小部件从其父小部件继承所有资产。如果您不希望 &lt;code&gt;Media&lt;/code&gt; 以这种方式来继承，添加一个 &lt;code&gt;extend=False&lt;/code&gt; 申报的 &lt;code&gt;Media&lt;/code&gt; 声明：</target>
        </trans-unit>
        <trans-unit id="254ea297427edcc72db5f8dffff8ee2830b5b000" translate="yes" xml:space="preserve">
          <source>The Feed class subclasses &lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt;&lt;code&gt;django.contrib.syndication.views.Feed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Feed类是&lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt; &lt;code&gt;django.contrib.syndication.views.Feed&lt;/code&gt; 的&lt;/a&gt;子类。</target>
        </trans-unit>
        <trans-unit id="fba386fa524a13c0f5fd863c141a32700a5e3e17" translate="yes" xml:space="preserve">
          <source>The File object</source>
          <target state="translated">文件对象</target>
        </trans-unit>
        <trans-unit id="da058efd6d5e84dc353574cdf9c0a19f4204c050" translate="yes" xml:space="preserve">
          <source>The Forms API</source>
          <target state="translated">表格API</target>
        </trans-unit>
        <trans-unit id="5efe726dd19666441f9b77daa8e10e1336d1ed20" translate="yes" xml:space="preserve">
          <source>The Forms Reference</source>
          <target state="translated">表格参考</target>
        </trans-unit>
        <trans-unit id="58db152bf60d60a1862f7886c4e17e4d0bcf10c6" translate="yes" xml:space="preserve">
          <source>The GDAL &lt;code&gt;ogrinfo&lt;/code&gt; utility allows examining the metadata of shapefiles or other vector data sources:</source>
          <target state="translated">GDAL &lt;code&gt;ogrinfo&lt;/code&gt; 实用程序允许检查shapefile或其他矢量数据源的元数据：</target>
        </trans-unit>
        <trans-unit id="0b87b24a59a68339206c7d4b286a365887f94474" translate="yes" xml:space="preserve">
          <source>The GDAL/OGR tools described here are designed to help you read in your geospatial data, in order for most of them to be useful you have to have some data to work with. If you&amp;rsquo;re starting out and don&amp;rsquo;t yet have any data of your own to use, GeoDjango tests contain a number of data sets that you can use for testing. You can download them here:</source>
          <target state="translated">此处介绍的GDAL / OGR工具旨在帮助您读取地理空间数据，为了使它们中的大多数有用，您必须要使用一些数据。如果您刚起步并且还没有自己的数据可使用，则GeoDjango测试包含许多可用于测试的数据集。您可以在此处下载它们：</target>
        </trans-unit>
        <trans-unit id="aa1fb78505858c9442ec79503edd40e5b822f3d0" translate="yes" xml:space="preserve">
          <source>The GeoDjango interfaces to GEOS, GDAL, and GeoIP may be used independently of Django. In other words, no database or settings file required &amp;ndash; import them as normal from &lt;a href=&quot;../index#module-django.contrib.gis&quot;&gt;&lt;code&gt;django.contrib.gis&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以独立于Django使用与GEOS，GDAL和GeoIP的GeoDjango接口。换句话说，不需要数据库或设置文件&amp;ndash;正常从&lt;a href=&quot;../index#module-django.contrib.gis&quot;&gt; &lt;code&gt;django.contrib.gis&lt;/code&gt; &lt;/a&gt;导入它们。</target>
        </trans-unit>
        <trans-unit id="319a275847dff315ccb00a30d1085d6d58278c0f" translate="yes" xml:space="preserve">
          <source>The HSTS policy applies to your entire domain, not just the URL of the response that you set the header on. Therefore, you should only use it if your entire domain is served via HTTPS only.</source>
          <target state="translated">HSTS策略适用于您的整个域,而不仅仅是您设置头的响应的URL。因此,您应该只在您的整个域名只通过HTTPS服务时使用它。</target>
        </trans-unit>
        <trans-unit id="654be3a937abe8074a2116805919e9dba12d3d02" translate="yes" xml:space="preserve">
          <source>The HTML &lt;code&gt;name&lt;/code&gt; for each tag is taken directly from its attribute name in the &lt;code&gt;ContactForm&lt;/code&gt; class.</source>
          <target state="translated">每个标签的HTML &lt;code&gt;name&lt;/code&gt; 直接来自 &lt;code&gt;ContactForm&lt;/code&gt; 类中的属性名称。</target>
        </trans-unit>
        <trans-unit id="fe025e32f34db0a4bb063ba113f3d44ba9090ad0" translate="yes" xml:space="preserve">
          <source>The HTML ID attribute for this &lt;code&gt;BoundField&lt;/code&gt;. Returns an empty string if &lt;a href=&quot;#django.forms.Form.auto_id&quot;&gt;&lt;code&gt;Form.auto_id&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">此 &lt;code&gt;BoundField&lt;/code&gt; 的HTML ID属性。如果&lt;a href=&quot;#django.forms.Form.auto_id&quot;&gt; &lt;code&gt;Form.auto_id&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;False&lt;/code&gt; ,则返回一个空字符串。</target>
        </trans-unit>
        <trans-unit id="bfd81eee9f78e30edc634b6a54a5d2b71184cd29" translate="yes" xml:space="preserve">
          <source>The HTML generated by the built-in widgets uses HTML5 syntax, targeting &lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt;. For example, it uses boolean attributes such as &lt;code&gt;checked&lt;/code&gt; rather than the XHTML style of &lt;code&gt;checked='checked'&lt;/code&gt;.</source>
          <target state="translated">内置窗口小部件生成的HTML使用HTML5语法，目标为 &lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt; 。例如，它使用布尔属性（例如， &lt;code&gt;checked&lt;/code&gt; )而不是XHTML样式的 &lt;code&gt;checked='checked'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7a457d5b4722073d9c9a8adda046e484928ad53" translate="yes" xml:space="preserve">
          <source>The HTML that&amp;rsquo;s generated includes the form&amp;rsquo;s &lt;a href=&quot;#django.forms.Form.label_suffix&quot;&gt;&lt;code&gt;label_suffix&lt;/code&gt;&lt;/a&gt; (a colon, by default) or, if set, the current field&amp;rsquo;s &lt;a href=&quot;fields#django.forms.Field.label_suffix&quot;&gt;&lt;code&gt;label_suffix&lt;/code&gt;&lt;/a&gt;. The optional &lt;code&gt;label_suffix&lt;/code&gt; parameter allows you to override any previously set suffix. For example, you can use an empty string to hide the label on selected fields. If you need to do this in a template, you could write a custom filter to allow passing parameters to &lt;code&gt;label_tag&lt;/code&gt;.</source>
          <target state="translated">生成的HTML包含表单的&lt;a href=&quot;#django.forms.Form.label_suffix&quot;&gt; &lt;code&gt;label_suffix&lt;/code&gt; &lt;/a&gt;（默认为冒号），或者如果设置了当前字段的&lt;a href=&quot;fields#django.forms.Field.label_suffix&quot;&gt; &lt;code&gt;label_suffix&lt;/code&gt; &lt;/a&gt;。可选的 &lt;code&gt;label_suffix&lt;/code&gt; 参数允许您覆盖任何先前设置的后缀。例如，您可以使用空字符串来隐藏所选字段上的标签。如果需要在模板中执行此操作，则可以编写一个自定义过滤器，以允许将参数传递给 &lt;code&gt;label_tag&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ffc589e7ea7852ca2c42efb9b947ddb147e46f4" translate="yes" xml:space="preserve">
          <source>The HTTP reason phrase for the response. It uses the &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-6.1&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;HTTP standard&amp;rsquo;s&lt;/strong&gt;&lt;/a&gt; default reason phrases.</source>
          <target state="translated">响应的HTTP原因短语。它使用&lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-6.1&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;HTTP标准的&lt;/strong&gt;&lt;/a&gt;默认原因短语。</target>
        </trans-unit>
        <trans-unit id="9f12433821f474021e968e955a8d9ba88759f0b9" translate="yes" xml:space="preserve">
          <source>The HTTP reason phrase for the response. It uses the &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-6.1&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;HTTP standard&amp;rsquo;s&lt;/strong&gt;&lt;/a&gt; default reason phrases.</source>
          <target state="translated">响应的HTTP原因短语。它使用&lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-6.1&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;HTTP标准的&lt;/strong&gt;&lt;/a&gt;默认原因短语。</target>
        </trans-unit>
        <trans-unit id="58681491633da97d1ec43392e67eb049b6dd1e8f" translate="yes" xml:space="preserve">
          <source>The HTTP status code for the response.</source>
          <target state="translated">响应的HTTP状态码。</target>
        </trans-unit>
        <trans-unit id="c0bf89f252380e3d8370d496ec7054d80d41b52d" translate="yes" xml:space="preserve">
          <source>The HTTP status of the response, as an integer. For a full list of defined codes, see the &lt;a href=&quot;https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml&quot;&gt;IANA status code registry&lt;/a&gt;.</source>
          <target state="translated">响应的HTTP状态，以整数形式。有关已定义代码的完整列表，请参见&lt;a href=&quot;https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml&quot;&gt;IANA状态代码注册表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3f40e8eb0e3ae82d3123a0ed18a55957c3e1c072" translate="yes" xml:space="preserve">
          <source>The ID that will be used for this field (&lt;code&gt;id_email&lt;/code&gt; in the example above). If you are constructing the label manually, you may want to use this in lieu of &lt;code&gt;label_tag&lt;/code&gt;. It&amp;rsquo;s also useful, for example, if you have some inline JavaScript and want to avoid hardcoding the field&amp;rsquo;s ID.</source>
          <target state="translated">该字段将使用的ID（在上面的示例中为 &lt;code&gt;id_email&lt;/code&gt; ）。如果要手动构造标签，则可能要使用它代替 &lt;code&gt;label_tag&lt;/code&gt; 。例如，如果您有一些内联JavaScript并希望避免对字段ID进行硬编码，它也很有用。</target>
        </trans-unit>
        <trans-unit id="37ee3cd9b52362975a52e7c48c4889fea9a6a489" translate="yes" xml:space="preserve">
          <source>The ID, as an integer, of the current site in the &lt;code&gt;django_site&lt;/code&gt; database table. This is used so that application data can hook into specific sites and a single database can manage content for multiple sites.</source>
          <target state="translated">&lt;code&gt;django_site&lt;/code&gt; 数据库表中当前站点的ID（整数）。使用它是为了使应用程序数据可以挂接到特定站点，并且单个数据库可以管理多个站点的内容。</target>
        </trans-unit>
        <trans-unit id="b2b6f8a13f5db675c5310d215eeb3f759dd5dfe4" translate="yes" xml:space="preserve">
          <source>The IPv6 address normalization follows &lt;a href=&quot;https://tools.ietf.org/html/rfc4291.html#section-2.2&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 4291#section-2.2&lt;/strong&gt;&lt;/a&gt; section 2.2, including using the IPv4 format suggested in paragraph 3 of that section, like &lt;code&gt;::ffff:192.0.2.0&lt;/code&gt;. For example, &lt;code&gt;2001:0::0:01&lt;/code&gt; would be normalized to &lt;code&gt;2001::1&lt;/code&gt;, and &lt;code&gt;::ffff:0a0a:0a0a&lt;/code&gt; to &lt;code&gt;::ffff:10.10.10.10&lt;/code&gt;. All characters are converted to lowercase.</source>
          <target state="translated">IPv6地址规范化遵循&lt;a href=&quot;https://tools.ietf.org/html/rfc4291.html#section-2.2&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 4291＃section-2.2&lt;/strong&gt;&lt;/a&gt;第&lt;strong&gt;2.2&lt;/strong&gt;节，包括使用该节第3段中建议的IPv4格式，例如 &lt;code&gt;::ffff:192.0.2.0&lt;/code&gt; 。例如， &lt;code&gt;2001:0::0:01&lt;/code&gt; &lt;code&gt;::ffff:0a0a:0a0a&lt;/code&gt; 将被标准化为 &lt;code&gt;2001::1&lt;/code&gt; ，而:: ffff：0a0a：0a0a被标准化为 &lt;code&gt;::ffff:10.10.10.10&lt;/code&gt; 。所有字符都将转换为小写。</target>
        </trans-unit>
        <trans-unit id="14f842e2f8f13268e8041976dd5ae6bdead195b5" translate="yes" xml:space="preserve">
          <source>The Internet is a hostile environment. Before deploying your Django project, you should take some time to review your settings, with security, performance, and operations in mind.</source>
          <target state="translated">互联网是一个充满敌意的环境。在部署Django项目之前,你应该花一些时间来检查你的设置,考虑到安全、性能和操作。</target>
        </trans-unit>
        <trans-unit id="96cf68c4fca09bfd64ba6135c567fd7e6932b487" translate="yes" xml:space="preserve">
          <source>The JSON serialization was extended to support lists and tuples. In older versions, only dicts are serialized.</source>
          <target state="translated">JSON序列化被扩展到支持列表和元组。在旧版本中,只有dicts被序列化。</target>
        </trans-unit>
        <trans-unit id="fc4de94cabe65bfaadd1321f9dbd70872db2a175" translate="yes" xml:space="preserve">
          <source>The JSON serializer uses &lt;code&gt;DjangoJSONEncoder&lt;/code&gt; for encoding. A subclass of &lt;a href=&quot;https://docs.python.org/3/library/json.html#json.JSONEncoder&quot;&gt;&lt;code&gt;JSONEncoder&lt;/code&gt;&lt;/a&gt;, it handles these additional types:</source>
          <target state="translated">JSON序列化程序使用 &lt;code&gt;DjangoJSONEncoder&lt;/code&gt; 进行编码。&lt;a href=&quot;https://docs.python.org/3/library/json.html#json.JSONEncoder&quot;&gt; &lt;code&gt;JSONEncoder&lt;/code&gt; &lt;/a&gt;的子类，它处理以下其他类型：</target>
        </trans-unit>
        <trans-unit id="54bac1e1d6c443548d3b9da63f81f5d53b0ead0f" translate="yes" xml:space="preserve">
          <source>The JavaScript code must go in a template block if you are inheriting &lt;code&gt;admin/change_form.html&lt;/code&gt; or it won&amp;rsquo;t be rendered in the final HTML.</source>
          <target state="translated">如果您要继承 &lt;code&gt;admin/change_form.html&lt;/code&gt; ，则JavaScript代码必须放在模板块中，否则将不会在最终的HTML中呈现。</target>
        </trans-unit>
        <trans-unit id="a137fc8531ca3502953a295f56ef115bdc915426" translate="yes" xml:space="preserve">
          <source>The MIME type to use for the resulting document. Defaults to &lt;code&gt;'text/html'&lt;/code&gt;.</source>
          <target state="translated">用于结果文档的MIME类型。默认为 &lt;code&gt;'text/html'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="87245b335c01ad93f2ee70eb807977f63bdc6496" translate="yes" xml:space="preserve">
          <source>The Migrations Operations Reference</source>
          <target state="translated">迁移业务参考</target>
        </trans-unit>
        <trans-unit id="faa96bf880beafe165e7aed58a2118d744195cbe" translate="yes" xml:space="preserve">
          <source>The Models Reference</source>
          <target state="translated">模型参考</target>
        </trans-unit>
        <trans-unit id="fd8917614e4f59f260fb160fe3b16922d97fe444" translate="yes" xml:space="preserve">
          <source>The MyISAM storage engine of MySQL doesn&amp;rsquo;t support transactions or constraints, so if you use MyISAM, you won&amp;rsquo;t get validation of fixture data, or a rollback if multiple transaction files are found.</source>
          <target state="translated">MySQL的MyISAM存储引擎不支持事务或约束，因此，如果使用MyISAM，将不会获得夹具数据的验证，如果找到多个事务文件，则不会回滚。</target>
        </trans-unit>
        <trans-unit id="01c3fb9f1ffce99e87f789d936ee8c8cb250f52f" translate="yes" xml:space="preserve">
          <source>The OpenGIS geometry type, generally set by the form field.</source>
          <target state="translated">OpenGIS几何体类型,一般由表格字段设置。</target>
        </trans-unit>
        <trans-unit id="7dde92feca78d3e5ffe6788481f71ac39dad7fcd" translate="yes" xml:space="preserve">
          <source>The Oracle backend stores &lt;code&gt;TextFields&lt;/code&gt; as &lt;code&gt;NCLOB&lt;/code&gt; columns. Oracle imposes some limitations on the usage of such LOB columns in general:</source>
          <target state="translated">Oracle后端将 &lt;code&gt;TextFields&lt;/code&gt; 存储为 &lt;code&gt;NCLOB&lt;/code&gt; 列。Oracle通常对此类LOB列的使用施加一些限制：</target>
        </trans-unit>
        <trans-unit id="a9fca3458c00da580f39f69297e381d16a3a853a" translate="yes" xml:space="preserve">
          <source>The Oracle database backend uses the &lt;code&gt;SYS.DBMS_LOB&lt;/code&gt; and &lt;code&gt;SYS.DBMS_RANDOM&lt;/code&gt; packages, so your user will require execute permissions on it. It&amp;rsquo;s normally accessible to all users by default, but in case it is not, you&amp;rsquo;ll need to grant permissions like so:</source>
          <target state="translated">Oracle数据库后端使用 &lt;code&gt;SYS.DBMS_LOB&lt;/code&gt; 和 &lt;code&gt;SYS.DBMS_RANDOM&lt;/code&gt; 包，因此您的用户将需要对其执行权限。默认情况下，通常所有用户都可以访问它，但是如果不能访问，则需要授予如下权限：</target>
        </trans-unit>
        <trans-unit id="a7189b34863bafc65b863357f79d9e53f94777ba" translate="yes" xml:space="preserve">
          <source>The Oracle database driver always uses server-side cursors.</source>
          <target state="translated">Oracle数据库驱动程序总是使用服务器端的游标。</target>
        </trans-unit>
        <trans-unit id="6cb1640142d67db49f1a018378d8515617a17571" translate="yes" xml:space="preserve">
          <source>The PBKDF2 and bcrypt algorithms use a number of iterations or rounds of hashing. This deliberately slows down attackers, making attacks against hashed passwords harder. However, as computing power increases, the number of iterations needs to be increased. We&amp;rsquo;ve chosen a reasonable default (and will increase it with each release of Django), but you may wish to tune it up or down, depending on your security needs and available processing power. To do so, you&amp;rsquo;ll subclass the appropriate algorithm and override the &lt;code&gt;iterations&lt;/code&gt; parameters. For example, to increase the number of iterations used by the default PBKDF2 algorithm:</source>
          <target state="translated">PBKDF2和bcrypt算法使用许多迭代或哈希运算。这故意降低了攻击者的速度，使针对散列密码的攻击更加困难。但是，随着计算能力的提高，迭代次数需要增加。我们选择了合理的默认值（并将在每个Django版本中增加默认值），但您可能希望根据您的安全需求和可用的处理能力对其进行调高或调低。为此，您将子类化适当的算法并覆盖 &lt;code&gt;iterations&lt;/code&gt; 参数。例如，要增加默认PBKDF2算法使用的迭代次数：</target>
        </trans-unit>
        <trans-unit id="4cf1867236c7aa33948bed32fcb851d74cc5b59c" translate="yes" xml:space="preserve">
          <source>The PROJ.4 datum shifting files must be installed (see the &lt;a href=&quot;install/geolibs#proj4&quot;&gt;PROJ.4 installation instructions&lt;/a&gt; for more details).</source>
          <target state="translated">必须安装PROJ.4基准移位文件（有关更多详细信息，请参见&lt;a href=&quot;install/geolibs#proj4&quot;&gt;PROJ.4安装说明&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="329dd1d62b7828f4c3dd85f5edaa7557c3cddcd2" translate="yes" xml:space="preserve">
          <source>The PostgreSQL backend stores datetimes as &lt;code&gt;timestamp with time zone&lt;/code&gt;. In practice, this means it converts datetimes from the connection&amp;rsquo;s time zone to UTC on storage, and from UTC to the connection&amp;rsquo;s time zone on retrieval.</source>
          <target state="translated">PostgreSQL后端将日期 &lt;code&gt;timestamp with time zone&lt;/code&gt; 存储为带时区的时间戳。实际上，这意味着在存储时它将日期时间从连接的时区转换为UTC，在检索时将其从UTC转换为连接的时区。</target>
        </trans-unit>
        <trans-unit id="6776f7c24fb7bea0795628b159948d294dfc944b" translate="yes" xml:space="preserve">
          <source>The PostgreSQL behavior can be emulated using &lt;code&gt;Coalesce&lt;/code&gt; if you know a sensible maximum value to provide as a default.</source>
          <target state="translated">如果您知道默认提供的明智最大值，则可以使用 &lt;code&gt;Coalesce&lt;/code&gt; 模拟PostgreSQL行为。</target>
        </trans-unit>
        <trans-unit id="8b99b1d8b53d1d56ee60aeb08d81046626e32b79" translate="yes" xml:space="preserve">
          <source>The PostgreSQL behavior can be emulated using &lt;code&gt;Coalesce&lt;/code&gt; if you know a sensible minimum value to provide as a default.</source>
          <target state="translated">如果您知道提供默认的合理最小值，则可以使用 &lt;code&gt;Coalesce&lt;/code&gt; 模拟PostgreSQL行为。</target>
        </trans-unit>
        <trans-unit id="080a3e51f1cd9e405ee49a3310f3ff641678d047" translate="yes" xml:space="preserve">
          <source>The PostgreSQL documentation has more details about &lt;a href=&quot;https://www.postgresql.org/docs/current/textsearch-controls.html#TEXTSEARCH-RANKING&quot;&gt;different rank normalization options&lt;/a&gt;.</source>
          <target state="translated">PostgreSQL文档提供了有关&lt;a href=&quot;https://www.postgresql.org/docs/current/textsearch-controls.html#TEXTSEARCH-RANKING&quot;&gt;不同等级归一化选项的&lt;/a&gt;更多详细信息。</target>
        </trans-unit>
        <trans-unit id="967afd51b13add2c7f7c55bed6f7bfc8d22c73c3" translate="yes" xml:space="preserve">
          <source>The PostgreSQL documentation has more details on &lt;a href=&quot;https://www.postgresql.org/docs/current/textsearch-controls.html#TEXTSEARCH-HEADLINE&quot;&gt;highlighting search results&lt;/a&gt;.</source>
          <target state="translated">PostgreSQL文档中有更多有关&lt;a href=&quot;https://www.postgresql.org/docs/current/textsearch-controls.html#TEXTSEARCH-HEADLINE&quot;&gt;突出显示搜索结果的&lt;/a&gt;详细信息。</target>
        </trans-unit>
        <trans-unit id="5d010d90dba16c98f2f20a73501228f2fca7de40" translate="yes" xml:space="preserve">
          <source>The PostgreSQL installer creates a new &lt;code&gt;postgres&lt;/code&gt; database superuser You will be prompted once to set the password &amp;ndash; make sure to remember it!</source>
          <target state="translated">PostgreSQL安装程序会创建一个新的 &lt;code&gt;postgres&lt;/code&gt; 数据库超级用户。系统将提示您设置密码-请记住密码！</target>
        </trans-unit>
        <trans-unit id="ffbb4982f7bc145844170a2795989a60e2fd3504" translate="yes" xml:space="preserve">
          <source>The PostgreSQL installer creates both a new Windows user to be the &amp;lsquo;postgres service account&amp;rsquo; and a &lt;code&gt;postgres&lt;/code&gt; database superuser You will be prompted once to set the password for both accounts &amp;ndash; make sure to remember it!</source>
          <target state="translated">PostgreSQL安装程序会同时创建一个新的Windows用户（即&amp;ldquo; postgres服务帐户&amp;rdquo;）和一个 &lt;code&gt;postgres&lt;/code&gt; 数据库超级用户。系统将提示您设置两个帐户的密码，请记住该密码！</target>
        </trans-unit>
        <trans-unit id="49f0980841b457206f0161614a0b15b56ce8c523" translate="yes" xml:space="preserve">
          <source>The Query Expression API</source>
          <target state="translated">查询表达式API</target>
        </trans-unit>
        <trans-unit id="a68257dca35e49a9799f4cf150dcc2c853156870" translate="yes" xml:space="preserve">
          <source>The ReportLab library is &lt;a href=&quot;https://pypi.org/project/reportlab/&quot;&gt;available on PyPI&lt;/a&gt;. A &lt;a href=&quot;https://www.reportlab.com/docs/reportlab-userguide.pdf&quot;&gt;user guide&lt;/a&gt; (not coincidentally, a PDF file) is also available for download. You can install ReportLab with &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://pypi.org/project/reportlab/&quot;&gt;可在PyPI上&lt;/a&gt;使用ReportLab库。一个&lt;a href=&quot;https://www.reportlab.com/docs/reportlab-userguide.pdf&quot;&gt;用户指南&lt;/a&gt;（不是巧合，PDF文件）也可供下载。您可以使用 &lt;code&gt;pip&lt;/code&gt; 安装ReportLab ：</target>
        </trans-unit>
        <trans-unit id="13127c6e90352b724af2c83b1dd527177d5069cd" translate="yes" xml:space="preserve">
          <source>The SMTP backend is the default configuration inherited by Django. If you want to specify it explicitly, put the following in your settings:</source>
          <target state="translated">SMTP后台是Django继承的默认配置。如果你想明确地指定它,在你的设置中加入以下内容。</target>
        </trans-unit>
        <trans-unit id="4d4b1704121603f93bc661dd4b024ff841989c1b" translate="yes" xml:space="preserve">
          <source>The SRID to use for the geometry field. If not set, &lt;code&gt;ogrinspect&lt;/code&gt; attempts to automatically determine of the SRID of the data source.</source>
          <target state="translated">用于几何字段的SRID。如果未设置，则 &lt;code&gt;ogrinspect&lt;/code&gt; 尝试自动确定数据源的SRID。</target>
        </trans-unit>
        <trans-unit id="00356ecb7c5f30ccaea4b4be4eb6f80130ffe404" translate="yes" xml:space="preserve">
          <source>The Select2 input looks similar to the default input but comes with a search feature that loads the options asynchronously. This is faster and more user-friendly if the related model has many instances.</source>
          <target state="translated">Select2输入看起来与默认输入类似,但自带搜索功能,异步加载选项。如果相关模型有很多实例,这样会更快、更方便用户使用。</target>
        </trans-unit>
        <trans-unit id="77bfef56c145a8ccd0c6c097cb5ae841f2306916" translate="yes" xml:space="preserve">
          <source>The Settings Reference</source>
          <target state="translated">设置参考</target>
        </trans-unit>
        <trans-unit id="9c627f82005f0f63b160ebee249864019f33c865" translate="yes" xml:space="preserve">
          <source>The Spatial Reference System Identifier (SRID) of the raster. This property is a shortcut to getting or setting the SRID through the &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.srs&quot;&gt;&lt;code&gt;srs&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">栅格的空间参考系统标识符（SRID）。此属性是通过&lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.srs&quot;&gt; &lt;code&gt;srs&lt;/code&gt; &lt;/a&gt;属性获取或设置SRID的快捷方式。</target>
        </trans-unit>
        <trans-unit id="f09a26915a27a15318465682e6bc60e74297258e" translate="yes" xml:space="preserve">
          <source>The Swiss number formatting depends on the type of number that is being formatted. For monetary values, a comma is used as the thousand separator and a decimal point for the decimal separator. For all other numbers, a comma is used as decimal separator and a space as thousand separator. The locale format provided by Django uses the generic separators, a comma for decimal and a space for thousand separators.</source>
          <target state="translated">瑞士数字的格式取决于被格式化的数字类型。对于货币价值,用逗号作为千位分隔符,用小数点作为小数分隔符;对于所有其他数字,用逗号作为千位分隔符,用空格作为千位分隔符。对于所有其他的数字,逗号作为小数分隔符,空格作为千位分隔符。Django提供的locale格式使用的是通用的分隔符,小数用逗号,千分符用空格。</target>
        </trans-unit>
        <trans-unit id="30b3b0c9916ede0153fe53922dc3f2d362bf74fb" translate="yes" xml:space="preserve">
          <source>The Templates Reference</source>
          <target state="translated">模板参考</target>
        </trans-unit>
        <trans-unit id="2cb63981e5ea302f9bd57a822b95b4d65284ca07" translate="yes" xml:space="preserve">
          <source>The URL for the &amp;ldquo;View site&amp;rdquo; link at the top of each admin page. By default, &lt;code&gt;site_url&lt;/code&gt; is &lt;code&gt;/&lt;/code&gt;. Set it to &lt;code&gt;None&lt;/code&gt; to remove the link.</source>
          <target state="translated">每个管理页面顶部的&amp;ldquo;查看网站&amp;rdquo;链接的URL。默认情况下， &lt;code&gt;site_url&lt;/code&gt; 为 &lt;code&gt;/&lt;/code&gt; 。将其设置为&amp;ldquo; &lt;code&gt;None&lt;/code&gt; 以删除链接。</target>
        </trans-unit>
        <trans-unit id="8afe6e962fdf9973c9362232bf4d33350bd5673a" translate="yes" xml:space="preserve">
          <source>The URL or &lt;a href=&quot;../topics/http/urls#naming-url-patterns&quot;&gt;named URL pattern&lt;/a&gt; where requests are redirected after login when the &lt;a href=&quot;../topics/auth/default#django.contrib.auth.views.LoginView&quot;&gt;&lt;code&gt;LoginView&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t get a &lt;code&gt;next&lt;/code&gt; GET parameter.</source>
          <target state="translated">URL或&lt;a href=&quot;../topics/http/urls#naming-url-patterns&quot;&gt;命名URL模式&lt;/a&gt;，当&lt;a href=&quot;../topics/auth/default#django.contrib.auth.views.LoginView&quot;&gt; &lt;code&gt;LoginView&lt;/code&gt; &lt;/a&gt;没有获得 &lt;code&gt;next&lt;/code&gt; GET参数时，登录后将重定向请求。</target>
        </trans-unit>
        <trans-unit id="448cc28a96720f1cb9ef51abcae4ea5231f53aec" translate="yes" xml:space="preserve">
          <source>The URL or &lt;a href=&quot;../topics/http/urls#naming-url-patterns&quot;&gt;named URL pattern&lt;/a&gt; where requests are redirected after logout if &lt;a href=&quot;../topics/auth/default#django.contrib.auth.views.LogoutView&quot;&gt;&lt;code&gt;LogoutView&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t have a &lt;code&gt;next_page&lt;/code&gt; attribute.</source>
          <target state="translated">如果&lt;a href=&quot;../topics/auth/default#django.contrib.auth.views.LogoutView&quot;&gt; &lt;code&gt;LogoutView&lt;/code&gt; &lt;/a&gt;没有 &lt;code&gt;next_page&lt;/code&gt; 属性，则在注销后重定向请求的URL或&lt;a href=&quot;../topics/http/urls#naming-url-patterns&quot;&gt;命名URL模式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ef9aef30ae0e745f772c22f6b50220d811bc8a96" translate="yes" xml:space="preserve">
          <source>The URL or &lt;a href=&quot;../topics/http/urls#naming-url-patterns&quot;&gt;named URL pattern&lt;/a&gt; where requests are redirected for login when using the &lt;a href=&quot;../topics/auth/default#django.contrib.auth.decorators.login_required&quot;&gt;&lt;code&gt;login_required()&lt;/code&gt;&lt;/a&gt; decorator, &lt;a href=&quot;../topics/auth/default#django.contrib.auth.mixins.LoginRequiredMixin&quot;&gt;&lt;code&gt;LoginRequiredMixin&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../topics/auth/default#django.contrib.auth.mixins.AccessMixin&quot;&gt;&lt;code&gt;AccessMixin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;../topics/auth/default#django.contrib.auth.decorators.login_required&quot;&gt; &lt;code&gt;login_required()&lt;/code&gt; &lt;/a&gt;装饰器，&lt;a href=&quot;../topics/auth/default#django.contrib.auth.mixins.LoginRequiredMixin&quot;&gt; &lt;code&gt;LoginRequiredMixin&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../topics/auth/default#django.contrib.auth.mixins.AccessMixin&quot;&gt; &lt;code&gt;AccessMixin&lt;/code&gt; &lt;/a&gt;时重定向到登录请求的URL或&lt;a href=&quot;../topics/http/urls#naming-url-patterns&quot;&gt;命名URL模式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="47720363e1e3af87132c2b68aa2d30176437cda3" translate="yes" xml:space="preserve">
          <source>The URL to redirect to when the form is successfully processed.</source>
          <target state="translated">表格处理成功后重定向到的URL。</target>
        </trans-unit>
        <trans-unit id="bcb52f1168af7f6925c0349f5273e7599b585a47" translate="yes" xml:space="preserve">
          <source>The URL to redirect to, as a string. Or &lt;code&gt;None&lt;/code&gt; to raise a 410 (Gone) HTTP error.</source>
          <target state="translated">重定向到的URL，以字符串形式。或&amp;ldquo; &lt;code&gt;None&lt;/code&gt; 引发410（消失）HTTP错误。</target>
        </trans-unit>
        <trans-unit id="f9b73cbfda3cf995a507d5ce4ffc81cbb8334cfe" translate="yes" xml:space="preserve">
          <source>The URLconf doesn&amp;rsquo;t look at the request method. In other words, all request methods &amp;ndash; &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;HEAD&lt;/code&gt;, etc. &amp;ndash; will be routed to the same function for the same URL.</source>
          <target state="translated">URLconf不查看请求方法。换句话说，所有请求方法 &lt;code&gt;POST&lt;/code&gt; ， &lt;code&gt;GET&lt;/code&gt; ， &lt;code&gt;HEAD&lt;/code&gt; 等将被路由到同一URL的相同函数。</target>
        </trans-unit>
        <trans-unit id="45ccb726900a8f0097c86dd1dce50d8509b830da" translate="yes" xml:space="preserve">
          <source>The URLconf here uses the named group &lt;code&gt;pk&lt;/code&gt; - this name is the default name that &lt;code&gt;DetailView&lt;/code&gt; uses to find the value of the primary key used to filter the queryset.</source>
          <target state="translated">此处的URLconf使用命名组 &lt;code&gt;pk&lt;/code&gt; -该名称是 &lt;code&gt;DetailView&lt;/code&gt; 用于查找用于过滤查询集的主键值的默认名称。</target>
        </trans-unit>
        <trans-unit id="548a01a1b80fb7120753de52a692180c774b10d8" translate="yes" xml:space="preserve">
          <source>The URLconf searches against the requested URL, as a normal Python string. This does not include GET or POST parameters, or the domain name.</source>
          <target state="translated">URLconf 对请求的 URL 进行搜索,作为一个普通的 Python 字符串。这不包括GET或POST参数,或者域名。</target>
        </trans-unit>
        <trans-unit id="32d4c73b498dfbbb4926938d46dfb74f2c43981e" translate="yes" xml:space="preserve">
          <source>The URLs defined in &lt;code&gt;polls.urls&lt;/code&gt; will have an application namespace &lt;code&gt;polls&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;polls.urls&lt;/code&gt; 中定义的URL 将具有应用程序名称空间 &lt;code&gt;polls&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e51a0e57d7a2704060bc92f629dd9a2cc306b706" translate="yes" xml:space="preserve">
          <source>The Writing Migrations &amp;ldquo;how-to&amp;rdquo;</source>
          <target state="translated">写作迁移的&amp;ldquo;方法&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="a0de502f5ba8bf18d602c98cf23a04ae506e5a4e" translate="yes" xml:space="preserve">
          <source>The ability to provide a callable was added.</source>
          <target state="translated">增加了提供可调用的能力。</target>
        </trans-unit>
        <trans-unit id="96320cb1bb7e355b708bc58f52c4b06b03d4d849" translate="yes" xml:space="preserve">
          <source>The ability to run tests with &lt;a href=&quot;#overriding-settings&quot;&gt;modified settings&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;#overriding-settings&quot;&gt;修改过的设置&lt;/a&gt;运行测试的能力。</target>
        </trans-unit>
        <trans-unit id="ce4e0ab9d1214bebe4df4b87379b65426aaa07f6" translate="yes" xml:space="preserve">
          <source>The above &lt;code&gt;Person&lt;/code&gt; model would create a database table like this:</source>
          <target state="translated">上面的 &lt;code&gt;Person&lt;/code&gt; 模型将创建这样的数据库表：</target>
        </trans-unit>
        <trans-unit id="cf3ffd9a97227b24e95069aa08843b8e620904af" translate="yes" xml:space="preserve">
          <source>The above code could be simplified by using the &lt;a href=&quot;https://github.com/js-cookie/js-cookie/&quot;&gt;JavaScript Cookie library&lt;/a&gt; to replace &lt;code&gt;getCookie&lt;/code&gt;:</source>
          <target state="translated">上面的代码可以通过使用&lt;a href=&quot;https://github.com/js-cookie/js-cookie/&quot;&gt;JavaScript Cookie库&lt;/a&gt;来代替 &lt;code&gt;getCookie&lt;/code&gt; 来简化：</target>
        </trans-unit>
        <trans-unit id="4b7fa6d84f2b71ecfdaa4ce31265ab0da7cc7aea" translate="yes" xml:space="preserve">
          <source>The above ends up calling the &lt;code&gt;as_table&lt;/code&gt; method on the formset class.</source>
          <target state="translated">以上内容最终在formset类上调用了 &lt;code&gt;as_table&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="557fde4255ef088eaef88066c675bce56a942655" translate="yes" xml:space="preserve">
          <source>The above example is a bit contrived since it&amp;rsquo;s equivalent to doing:</source>
          <target state="translated">上面的示例有点人为，因为它等效于：</target>
        </trans-unit>
        <trans-unit id="85585e575d4d7963c67e68f4b53fad058669241c" translate="yes" xml:space="preserve">
          <source>The above examples output a value. Generally, it&amp;rsquo;s more flexible if your template tags set template variables instead of outputting values. That way, template authors can reuse the values that your template tags create.</source>
          <target state="translated">上面的示例输出一个值。通常，如果您的模板标签设置模板变量而不是输出值，则更加灵活。这样，模板作者可以重复使用模板标记创建的值。</target>
        </trans-unit>
        <trans-unit id="d111647a3e61db68ecc833a2192ab67fc3f7f3dd" translate="yes" xml:space="preserve">
          <source>The above is a slight simplification &amp;ndash; the &lt;code&gt;get_response&lt;/code&gt; callable for the last middleware in the chain won&amp;rsquo;t be the actual view but rather a wrapper method from the handler which takes care of applying &lt;a href=&quot;#view-middleware&quot;&gt;view middleware&lt;/a&gt;, calling the view with appropriate URL arguments, and applying &lt;a href=&quot;#template-response-middleware&quot;&gt;template-response&lt;/a&gt; and &lt;a href=&quot;#exception-middleware&quot;&gt;exception&lt;/a&gt; middleware.</source>
          <target state="translated">上面是一个简单的简化&amp;ndash; 链中最后一个中间件的 &lt;code&gt;get_response&lt;/code&gt; 调用不是实际的视图，而是处理程序的包装方法，该方法负责应用&lt;a href=&quot;#view-middleware&quot;&gt;视图中间件&lt;/a&gt;，使用适当的URL参数调用视图并应用&lt;a href=&quot;#template-response-middleware&quot;&gt;模板响应&lt;/a&gt;和&lt;a href=&quot;#exception-middleware&quot;&gt;异常&lt;/a&gt;中间件。</target>
        </trans-unit>
        <trans-unit id="55aaac19d68791dbd391b3913730a9aaed21f082" translate="yes" xml:space="preserve">
          <source>The above is equivalent to &amp;ndash; but shorter, cleaner, and possibly faster than &amp;ndash; the following:</source>
          <target state="translated">上面的内容等效于-但更短，更干净，并且可能比以下内容更快：</target>
        </trans-unit>
        <trans-unit id="bc24d1df297ec73ced0dfccfc7c69b75979e3348" translate="yes" xml:space="preserve">
          <source>The above template displays a radio button for each question choice. The &lt;code&gt;value&lt;/code&gt; of each radio button is the associated question choice&amp;rsquo;s ID. The &lt;code&gt;name&lt;/code&gt; of each radio button is &lt;code&gt;&quot;choice&quot;&lt;/code&gt;. That means, when somebody selects one of the radio buttons and submits the form, it&amp;rsquo;ll send the POST data &lt;code&gt;choice=#&lt;/code&gt; where # is the ID of the selected choice. This is the basic concept of HTML forms.</source>
          <target state="translated">上面的模板为每个问题选择显示一个单选按钮。每个单选按钮的 &lt;code&gt;value&lt;/code&gt; 是相关问题选择的ID。每个单选按钮的 &lt;code&gt;name&lt;/code&gt; 是 &lt;code&gt;&quot;choice&quot;&lt;/code&gt; 。这意味着，当某人选择一个单选按钮并提交表单时，它将发送POST数据 &lt;code&gt;choice=#&lt;/code&gt; ，其中＃是所选选项的ID。这是HTML表单的基本概念。</target>
        </trans-unit>
        <trans-unit id="716991c7abeff036777543f27df7fccd5176dc1f" translate="yes" xml:space="preserve">
          <source>The above will tell Django to order by the &lt;code&gt;first_name&lt;/code&gt; field when trying to sort by &lt;code&gt;colored_first_name&lt;/code&gt; in the admin.</source>
          <target state="translated">上面将告诉Django 在尝试按admin中的 &lt;code&gt;colored_first_name&lt;/code&gt; 排序时，按 &lt;code&gt;first_name&lt;/code&gt; 字段排序。</target>
        </trans-unit>
        <trans-unit id="0972181000ef7696648390c6992716cc4dc262a8" translate="yes" xml:space="preserve">
          <source>The absolute path to the directory where &lt;a href=&quot;contrib/staticfiles#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; will collect static files for deployment.</source>
          <target state="translated">&lt;a href=&quot;contrib/staticfiles#django-admin-collectstatic&quot;&gt; &lt;code&gt;collectstatic&lt;/code&gt; &lt;/a&gt;将收集静态文件以进行部署的目录的绝对路径。</target>
        </trans-unit>
        <trans-unit id="317a77807beca4c01220a931465494671461ffd6" translate="yes" xml:space="preserve">
          <source>The absolute path to the directory whose contents you want listed. This directory must exist.</source>
          <target state="translated">您想要列出的内容的目录的绝对路径。该目录必须存在。</target>
        </trans-unit>
        <trans-unit id="3164ad6855d7d72155644f1912d0a5cbd0d2f705" translate="yes" xml:space="preserve">
          <source>The abstract base session model.</source>
          <target state="translated">抽象的基础会话模型。</target>
        </trans-unit>
        <trans-unit id="56ebb28485851a1ffcd13f95827f56abd6a6d25e" translate="yes" xml:space="preserve">
          <source>The accepted values for the &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; arguments are &lt;code&gt;None&lt;/code&gt;, an integer, or zero. A negative integer for &lt;code&gt;start&lt;/code&gt; results in &lt;code&gt;N preceding&lt;/code&gt;, while &lt;code&gt;None&lt;/code&gt; yields &lt;code&gt;UNBOUNDED PRECEDING&lt;/code&gt;. For both &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;, zero will return &lt;code&gt;CURRENT ROW&lt;/code&gt;. Positive integers are accepted for &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; 和 &lt;code&gt;end&lt;/code&gt; 参数的可接受值为 &lt;code&gt;None&lt;/code&gt; ，整数或零。 &lt;code&gt;start&lt;/code&gt; 的负整数导致 &lt;code&gt;N preceding&lt;/code&gt; ，而 &lt;code&gt;None&lt;/code&gt; 则产生 &lt;code&gt;UNBOUNDED PRECEDING&lt;/code&gt; 。对于 &lt;code&gt;start&lt;/code&gt; 和 &lt;code&gt;end&lt;/code&gt; ，零将返回 &lt;code&gt;CURRENT ROW&lt;/code&gt; 。正整数接受为 &lt;code&gt;end&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ea514c02d191ab1b66dad018866c2e8a24f5390e" translate="yes" xml:space="preserve">
          <source>The accessor to the pixel values of the &lt;code&gt;GDALBand&lt;/code&gt;. Returns the complete data array if no parameters are provided. A subset of the pixel array can be requested by specifying an offset and block size as tuples.</source>
          <target state="translated">&lt;code&gt;GDALBand&lt;/code&gt; 的像素值的访问者。如果没有提供参数，则返回完整的数据数组。通过将偏移量和块大小指定为元组，可以请求像素数组的子集。</target>
        </trans-unit>
        <trans-unit id="9377ffc39d254418ebca4c6c15922a83f8783858" translate="yes" xml:space="preserve">
          <source>The action in the examples above match the last part of the URL names for &lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; instances described above. The &lt;code&gt;opts&lt;/code&gt; variable can be any object which has an &lt;code&gt;app_label&lt;/code&gt; and &lt;code&gt;model_name&lt;/code&gt; attributes and is usually supplied by the admin views for the current model.</source>
          <target state="translated">上面示例中的操作与上述&lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;实例的URL名称的最后一部分匹配。所述 &lt;code&gt;opts&lt;/code&gt; 变量可以是具有任何对象 &lt;code&gt;app_label&lt;/code&gt; 和 &lt;code&gt;model_name&lt;/code&gt; 属性，通常是由当前模型管理员视图提供。</target>
        </trans-unit>
        <trans-unit id="98796218d1fed487ad6fb4bd4e5b5aa6d91ca19f" translate="yes" xml:space="preserve">
          <source>The actual implementation of &lt;a href=&quot;../ref/templates/builtins#std:templatetag-comment&quot;&gt;&lt;code&gt;{% comment %}&lt;/code&gt;&lt;/a&gt; is slightly different in that it allows broken template tags to appear between &lt;code&gt;{% comment %}&lt;/code&gt; and &lt;code&gt;{% endcomment %}&lt;/code&gt;. It does so by calling &lt;code&gt;parser.skip_past('endcomment')&lt;/code&gt; instead of &lt;code&gt;parser.parse(('endcomment',))&lt;/code&gt; followed by &lt;code&gt;parser.delete_first_token()&lt;/code&gt;, thus avoiding the generation of a node list.</source>
          <target state="translated">&lt;a href=&quot;../ref/templates/builtins#std:templatetag-comment&quot;&gt; &lt;code&gt;{% comment %}&lt;/code&gt; &lt;/a&gt;的实际实现略有不同，因为它允许损坏的模板标签出现在 &lt;code&gt;{% comment %}&lt;/code&gt; 和 &lt;code&gt;{% endcomment %}&lt;/code&gt; 。通过调用 &lt;code&gt;parser.skip_past('endcomment')&lt;/code&gt; 而不是 &lt;code&gt;parser.parse(('endcomment',))&lt;/code&gt; ,然后 &lt;code&gt;parser.delete_first_token()&lt;/code&gt; 来做到这一点，从而避免了生成节点列表。</target>
        </trans-unit>
        <trans-unit id="8fc8e68e96fa0090b4c5811c8ac059b6ef42b703" translate="yes" xml:space="preserve">
          <source>The actual instance being deleted.</source>
          <target state="translated">实际被删除的实例;</target>
        </trans-unit>
        <trans-unit id="1032ab139cf93563d82f21f1335a990f32f1c3df" translate="yes" xml:space="preserve">
          <source>The actual instance being saved.</source>
          <target state="translated">实际被保存的实例。</target>
        </trans-unit>
        <trans-unit id="da9623219a7c1ce080ccc2feae9d852ca5837425" translate="yes" xml:space="preserve">
          <source>The actual instance of the model that&amp;rsquo;s just been created.</source>
          <target state="translated">刚创建的模型的实际实例。</target>
        </trans-unit>
        <trans-unit id="da01ee37e16de5371384aa5ac9abb879e3b05e53" translate="yes" xml:space="preserve">
          <source>The actual logic of the command. Subclasses must implement this method.</source>
          <target state="translated">命令的实际逻辑。子类必须实现这个方法。</target>
        </trans-unit>
        <trans-unit id="e0e24f7961308ececd5e037e89fcf83bd0dbe4e2" translate="yes" xml:space="preserve">
          <source>The actual sending of an email is handled by the email backend.</source>
          <target state="translated">邮件的实际发送是由邮件后台处理的。</target>
        </trans-unit>
        <trans-unit id="6ce12f81e06ec304928aada38d066d9c08c3cbb1" translate="yes" xml:space="preserve">
          <source>The additional queries in &lt;code&gt;prefetch_related()&lt;/code&gt; are executed after the &lt;code&gt;QuerySet&lt;/code&gt; has begun to be evaluated and the primary query has been executed.</source>
          <target state="translated">&lt;code&gt;prefetch_related()&lt;/code&gt; 中的其他查询在开始评估 &lt;code&gt;QuerySet&lt;/code&gt; 并执行了主查询之后执行。</target>
        </trans-unit>
        <trans-unit id="5179fe240428ba4b7e061b5f58d3104ef0bd94eb" translate="yes" xml:space="preserve">
          <source>The admin</source>
          <target state="translated">管理员</target>
        </trans-unit>
        <trans-unit id="c1123d8f228e5f55443368f63edfa7793ca29507" translate="yes" xml:space="preserve">
          <source>The admin application uses it to log the history of each object added or changed through the admin interface.</source>
          <target state="translated">管理程序使用它来记录通过管理界面添加或更改的每个对象的历史。</target>
        </trans-unit>
        <trans-unit id="0dc4c79ddce6cefc1ffdd748a5c93c2e446ce6e8" translate="yes" xml:space="preserve">
          <source>The admin files live in (&lt;code&gt;django/contrib/admin/static/admin&lt;/code&gt;) of the Django distribution.</source>
          <target state="translated">管理文件位于Django发行版的（ &lt;code&gt;django/contrib/admin/static/admin&lt;/code&gt; ）中。</target>
        </trans-unit>
        <trans-unit id="d7c752166ff227f79fdebf363848237645a8e8f6" translate="yes" xml:space="preserve">
          <source>The admin has many hooks for customization, but beware of trying to use those hooks exclusively. If you need to provide a more process-centric interface that abstracts away the implementation details of database tables and fields, then it&amp;rsquo;s probably time to write your own views.</source>
          <target state="translated">管理员有许多用于自定义的挂钩，但是要当心尝试专门使用这些挂钩。如果您需要提供一个更加以流程为中心的接口，以抽象出数据库表和字段的实现细节，那么可能是时候编写您自己的视图了。</target>
        </trans-unit>
        <trans-unit id="d3b0cd903384fd1fd5cb3f68c5a3f30f5b2505d8" translate="yes" xml:space="preserve">
          <source>The admin interface has the ability to edit models on the same page as a parent model. These are called inlines. Suppose you have these two models:</source>
          <target state="translated">管理界面可以在同一页面上与父模型编辑模型。这些被称为内联。假设你有这两个模型。</target>
        </trans-unit>
        <trans-unit id="fc02a266d0220ef79d59d56fadf436f2a12a21f7" translate="yes" xml:space="preserve">
          <source>The admin is enabled in the default project template used by &lt;a href=&quot;../../django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;startproject&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;../../django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;startproject&lt;/code&gt; &lt;/a&gt;使用的默认项目模板中启用了admin 。</target>
        </trans-unit>
        <trans-unit id="2cc2b92b881a425293fef1210f548ff243ac5de3" translate="yes" xml:space="preserve">
          <source>The admin isn&amp;rsquo;t intended to be used by site visitors. It&amp;rsquo;s for site managers.</source>
          <target state="translated">管理员不建议站点访问者使用。这是针对网站管理员的。</target>
        </trans-unit>
        <trans-unit id="3a763de7510db871dbb866962cba71a3b4562f68" translate="yes" xml:space="preserve">
          <source>The admin now preserves filters on the list view after creating, editing or deleting an object. You can restore the previous behavior of clearing filters by setting this attribute to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">现在，管理员可以在创建，编辑或删除对象后在列表视图上保留过滤器。您可以通过将此属性设置为 &lt;code&gt;False&lt;/code&gt; 来恢复清除过滤器的先前行为。</target>
        </trans-unit>
        <trans-unit id="b89e874d2d4af6eb42f1a28899e15fe844bfcd49" translate="yes" xml:space="preserve">
          <source>The admin template files are located in the &lt;code&gt;contrib/admin/templates/admin&lt;/code&gt; directory.</source>
          <target state="translated">管理模板文件位于 &lt;code&gt;contrib/admin/templates/admin&lt;/code&gt; 目录中。</target>
        </trans-unit>
        <trans-unit id="d98c254ee449f811a31b3182cc950026479d0b29" translate="yes" xml:space="preserve">
          <source>The advantage of generating PDF files dynamically is that you can create customized PDFs for different purposes &amp;ndash; say, for different users or different pieces of content.</source>
          <target state="translated">动态生成PDF文件的优点是，您可以针对不同目的（例如针对不同用户或不同内容）创建自定义PDF。</target>
        </trans-unit>
        <trans-unit id="a82fad5ba44714112e257cab4164f0dee3f3846c" translate="yes" xml:space="preserve">
          <source>The advantage to using the &lt;code&gt;vary_on_headers&lt;/code&gt; decorator rather than manually setting the &lt;code&gt;Vary&lt;/code&gt; header (using something like &lt;code&gt;response['Vary'] = 'user-agent'&lt;/code&gt;) is that the decorator &lt;em&gt;adds&lt;/em&gt; to the &lt;code&gt;Vary&lt;/code&gt; header (which may already exist), rather than setting it from scratch and potentially overriding anything that was already in there.</source>
          <target state="translated">使用 &lt;code&gt;vary_on_headers&lt;/code&gt; 装饰器而不是手动设置 &lt;code&gt;Vary&lt;/code&gt; 标头（使用诸如 &lt;code&gt;response['Vary'] = 'user-agent'&lt;/code&gt; ）的好处是，装饰器&lt;em&gt;添加&lt;/em&gt;到 &lt;code&gt;Vary&lt;/code&gt; 标头（可能已经存在）中，而不是设置从头开始，可能会覆盖那里已经存在的任何内容。</target>
        </trans-unit>
        <trans-unit id="57b3f45901544edc694cb0f71468aeb80ab6ed30" translate="yes" xml:space="preserve">
          <source>The affine transformation matrix used to georeference the source, as a tuple of six coefficients which map pixel/line coordinates into georeferenced space using the following relationship:</source>
          <target state="translated">用于地理参照源的仿射变换矩阵,作为一个由六个系数组成的元组,使用以下关系将像素/线坐标映射到地理参照空间:</target>
        </trans-unit>
        <trans-unit id="089afeb26b2e08139d434b87601042a7dd454ac5" translate="yes" xml:space="preserve">
          <source>The age of CSRF cookies, in seconds.</source>
          <target state="translated">CSRF cookie的年龄,以秒为单位。</target>
        </trans-unit>
        <trans-unit id="f42f2d777b7b92e49dd946c55dcc61ca86a1306e" translate="yes" xml:space="preserve">
          <source>The age of session cookies, in seconds.</source>
          <target state="translated">会话cookie的年龄,以秒为单位。</target>
        </trans-unit>
        <trans-unit id="bba9c79ab9e998fa799d86191a5961623b862fee" translate="yes" xml:space="preserve">
          <source>The age of the language cookie, in seconds.</source>
          <target state="translated">语言饼干的年龄,以秒为单位。</target>
        </trans-unit>
        <trans-unit id="bbdeca32a5f892dadd83d5dc9290143a49e17aa5" translate="yes" xml:space="preserve">
          <source>The aggregation functions that are provided by Django are described in &lt;a href=&quot;#id5&quot;&gt;Aggregation Functions&lt;/a&gt; below.</source>
          <target state="translated">Django提供的&lt;a href=&quot;#id5&quot;&gt;聚合函数&lt;/a&gt;在下面的&amp;ldquo;聚合函数&amp;rdquo;中进行了描述。</target>
        </trans-unit>
        <trans-unit id="a394c241a73dcf16ef28dd6d99546b20d0c9b49c" translate="yes" xml:space="preserve">
          <source>The aggregation functions that are provided by Django are described in &lt;a href=&quot;#id5&quot;&gt;Aggregation Functions&lt;/a&gt; below. Since aggregates are also &lt;a href=&quot;expressions&quot;&gt;query expressions&lt;/a&gt;, you may combine aggregates with other aggregates or values to create complex aggregates.</source>
          <target state="translated">Django提供的&lt;a href=&quot;#id5&quot;&gt;聚合函数&lt;/a&gt;在下面的&amp;ldquo;聚合函数&amp;rdquo;中进行了描述。由于聚合也是&lt;a href=&quot;expressions&quot;&gt;查询表达式&lt;/a&gt;，因此您可以将聚合与其他聚合或值组合以创建复杂的聚合。</target>
        </trans-unit>
        <trans-unit id="0ab0b9b9f41018dfcb0f5fd43e3b8685da3a3afb" translate="yes" xml:space="preserve">
          <source>The alias for this particular template engine. It&amp;rsquo;s an identifier that allows selecting an engine for rendering. Aliases must be unique across all configured template engines.</source>
          <target state="translated">此特定模板引擎的别名。这是一个标识符，允许选择要渲染的引擎。别名在所有已配置的模板引擎中必须唯一。</target>
        </trans-unit>
        <trans-unit id="cfc7c6749a570961d900ab7b2a503c9968c35840" translate="yes" xml:space="preserve">
          <source>The alias of database on which a command will operate.</source>
          <target state="translated">命令运行的数据库的别名。</target>
        </trans-unit>
        <trans-unit id="b0df1ef91b1e8c044ad74b3cbcb392434f976638" translate="yes" xml:space="preserve">
          <source>The alias of the database that this database should mirror during testing.</source>
          <target state="translated">在测试过程中,该数据库应该镜像的数据库的别名。</target>
        </trans-unit>
        <trans-unit id="6469f2d5a72b50e7fad9377cca3e0d567da3990f" translate="yes" xml:space="preserve">
          <source>The alternative approach would be to include all fields automatically, or blacklist only some. This fundamental approach is known to be much less secure and has led to serious exploits on major websites (e.g. &lt;a href=&quot;https://github.com/blog/1068-public-key-security-vulnerability-and-mitigation&quot;&gt;GitHub&lt;/a&gt;).</source>
          <target state="translated">另一种方法是自动包括所有字段，或仅将某些字段列入黑名单。众所周知，这种基本方法的安全性要差得多，并且导致主要网站（例如&lt;a href=&quot;https://github.com/blog/1068-public-key-security-vulnerability-and-mitigation&quot;&gt;GitHub&lt;/a&gt;）上的严重利用。</target>
        </trans-unit>
        <trans-unit id="ae4b42165e8f82a9e531bc8dedc0027219982700" translate="yes" xml:space="preserve">
          <source>The alternative approach would be to include all fields automatically, or remove only some. This fundamental approach is known to be much less secure and has led to serious exploits on major websites (e.g. &lt;a href=&quot;https://github.com/blog/1068-public-key-security-vulnerability-and-mitigation&quot;&gt;GitHub&lt;/a&gt;).</source>
          <target state="translated">另一种方法是自动包括所有字段，或仅删除一些字段。众所周知，这种基本方法的安全性要差得多，并且已导致主要网站（例如&lt;a href=&quot;https://github.com/blog/1068-public-key-security-vulnerability-and-mitigation&quot;&gt;GitHub&lt;/a&gt;）上的严重利用。</target>
        </trans-unit>
        <trans-unit id="1e3a45d99d41b1eefef697c541685a517d46cd79" translate="yes" xml:space="preserve">
          <source>The amount by which the DATAFILE is extended when more space is required.</source>
          <target state="translated">当需要更多空间时,DATAFILE的扩展量。</target>
        </trans-unit>
        <trans-unit id="94947285a4cb666cb8e5b4793dfdc1e0db59d188" translate="yes" xml:space="preserve">
          <source>The amount by which the DATAFILE_TMP is extended when more space is required.</source>
          <target state="translated">当需要更多空间时,DATAFILE_TMP的扩展量。</target>
        </trans-unit>
        <trans-unit id="c7871f8a1a2ff8050113b5cc680f1c73a7369757" translate="yes" xml:space="preserve">
          <source>The amount of request data is correlated to the amount of memory needed to process the request and populate the GET and POST dictionaries. Large requests could be used as a denial-of-service attack vector if left unchecked. Since web servers don&amp;rsquo;t typically perform deep request inspection, it&amp;rsquo;s not possible to perform a similar check at that level.</source>
          <target state="translated">请求数据量与处理请求并填充GET和POST词典所需的内存量相关。如果不检查，大请求可以用作拒绝服务攻击向量。由于Web服务器通常不执行深度请求检查，因此无法在该级别执行类似的检查。</target>
        </trans-unit>
        <trans-unit id="4e9d86f8479a4d5f6dc4d326941d351fbe5b2143" translate="yes" xml:space="preserve">
          <source>The answer is to add namespaces to your URLconf. In the &lt;code&gt;polls/urls.py&lt;/code&gt; file, go ahead and add an &lt;code&gt;app_name&lt;/code&gt; to set the application namespace:</source>
          <target state="translated">答案是将名称空间添加到您的URLconf中。在 &lt;code&gt;polls/urls.py&lt;/code&gt; 文件中，继续并添加一个 &lt;code&gt;app_name&lt;/code&gt; 来设置应用程序名称空间：</target>
        </trans-unit>
        <trans-unit id="acd88c208304cffe835e71369ce09e1ee8db81aa" translate="yes" xml:space="preserve">
          <source>The answer is to subclass &lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt;&lt;code&gt;DetailView&lt;/code&gt;&lt;/a&gt; and provide your own implementation of the &lt;code&gt;get_context_data&lt;/code&gt; method. The default implementation adds the object being displayed to the template, but you can override it to send more:</source>
          <target state="translated">答案是子类化&lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt; &lt;code&gt;DetailView&lt;/code&gt; &lt;/a&gt;并提供您自己的 &lt;code&gt;get_context_data&lt;/code&gt; 方法的实现。默认实现将要显示的对象添加到模板中，但是您可以覆盖它以发送更多内容：</target>
        </trans-unit>
        <trans-unit id="34d8601c6f7a86dce107936f3e3b6d18983aa71e" translate="yes" xml:space="preserve">
          <source>The answer lies in the &lt;a href=&quot;../../ref/applications#django.apps.apps&quot;&gt;&lt;code&gt;app registry&lt;/code&gt;&lt;/a&gt;. When Django starts, it imports each application listed in &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;, and then the &lt;code&gt;models&lt;/code&gt; module inside each application. Whenever a new model class is created, Django adds backward-relationships to any related models. If the related models haven&amp;rsquo;t been imported yet, Django keeps tracks of the relationships and adds them when the related models eventually are imported.</source>
          <target state="translated">答案在于&lt;a href=&quot;../../ref/applications#django.apps.apps&quot;&gt; &lt;code&gt;app registry&lt;/code&gt; &lt;/a&gt;。Django启动时，它将导入&lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 中&lt;/a&gt;列出的每个应用程序，然后导入每个应用程序内部的 &lt;code&gt;models&lt;/code&gt; 模块。每当创建新的模型类时，Django都会向任何相关模型添加向后关系。如果尚未导入相关模型，则Django会跟踪关系并在最终导入相关模型时将其添加。</target>
        </trans-unit>
        <trans-unit id="d3ea665f80076e26a069279047d0310ffb1b56bd" translate="yes" xml:space="preserve">
          <source>The app should contain a &lt;code&gt;templatetags&lt;/code&gt; directory, at the same level as &lt;code&gt;models.py&lt;/code&gt;, &lt;code&gt;views.py&lt;/code&gt;, etc. If this doesn&amp;rsquo;t already exist, create it - don&amp;rsquo;t forget the &lt;code&gt;__init__.py&lt;/code&gt; file to ensure the directory is treated as a Python package.</source>
          <target state="translated">该应用程序应该包含一个 &lt;code&gt;templatetags&lt;/code&gt; 目录，在同级别的 &lt;code&gt;models.py&lt;/code&gt; ， &lt;code&gt;views.py&lt;/code&gt; 等。如果这不存在，创建它-不要忘了 &lt;code&gt;__init__.py&lt;/code&gt; 文件，以确保该目录将被视为一个Python包。</target>
        </trans-unit>
        <trans-unit id="43acbdb9bc94165dd56f07a45d30a3d385157141" translate="yes" xml:space="preserve">
          <source>The app that contains the custom tags must be in &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; in order for the &lt;a href=&quot;../ref/templates/builtins#std:templatetag-load&quot;&gt;&lt;code&gt;{% load %}&lt;/code&gt;&lt;/a&gt; tag to work. This is a security feature: It allows you to host Python code for many template libraries on a single host machine without enabling access to all of them for every Django installation.</source>
          <target state="translated">包含自定义标记的应用程序必须位于&lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;中，才能使&lt;a href=&quot;../ref/templates/builtins#std:templatetag-load&quot;&gt; &lt;code&gt;{% load %}&lt;/code&gt; &lt;/a&gt;标记起作用。这是一项安全功能：它允许您在单个主机上托管许多模板库的Python代码，而无需为每个Django安装启用对所有模板库的访问。</target>
        </trans-unit>
        <trans-unit id="fbee76a6a7247021b51dd33628ae427b81689e96" translate="yes" xml:space="preserve">
          <source>The application namespace for the URL pattern that matches the URL.</source>
          <target state="translated">匹配URL模式的应用名称空间。</target>
        </trans-unit>
        <trans-unit id="062ae2346459e1a84f3f948fa5772936e7b98202" translate="yes" xml:space="preserve">
          <source>The application registry is initialized in three stages. At each stage, Django processes all applications in the order of &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">应用程序注册表分为三个阶段初始化。在每个阶段，Django都会按照&lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;的顺序处理所有应用程序。</target>
        </trans-unit>
        <trans-unit id="0bd7315c4ec671207e710c4864fd93cebc6a48bc" translate="yes" xml:space="preserve">
          <source>The application registry provides the following public API. Methods that aren&amp;rsquo;t listed below are considered private and may change without notice.</source>
          <target state="translated">应用程序注册表提供以下公共API。以下未列出的方法被视为私有方法，如有更改，恕不另行通知。</target>
        </trans-unit>
        <trans-unit id="fb87a75825e3c769fb7fe0058c3898c1df301530" translate="yes" xml:space="preserve">
          <source>The argon2 command-line utility and some other libraries interpret the &lt;code&gt;memory_cost&lt;/code&gt; parameter differently from the value that Django uses. The conversion is given by &lt;code&gt;memory_cost == 2 ** memory_cost_commandline&lt;/code&gt;.</source>
          <target state="translated">argon2命令行实用程序和其他一些库对 &lt;code&gt;memory_cost&lt;/code&gt; 参数的解释与Django使用的值不同。转换由 &lt;code&gt;memory_cost == 2 ** memory_cost_commandline&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9cd5a4bec1e02d81814d911ca707218dc6b0e566" translate="yes" xml:space="preserve">
          <source>The argument must be an instance of a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclass or a time zone name.</source>
          <target state="translated">参数必须是&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;子类的实例或时区名称。</target>
        </trans-unit>
        <trans-unit id="cce0840fa770096bfd85ff5f0cda1e346a3ea756" translate="yes" xml:space="preserve">
          <source>The argument tells which template bit to output:</source>
          <target state="translated">这个参数告诉我们要输出哪个模板位。</target>
        </trans-unit>
        <trans-unit id="1679bd917f36b88ee02a5c144f28888ecc8129d6" translate="yes" xml:space="preserve">
          <source>The argument to the &lt;code&gt;aggregate()&lt;/code&gt; clause describes the aggregate value that we want to compute - in this case, the average of the &lt;code&gt;price&lt;/code&gt; field on the &lt;code&gt;Book&lt;/code&gt; model. A list of the aggregate functions that are available can be found in the &lt;a href=&quot;../../ref/models/querysets#aggregation-functions&quot;&gt;QuerySet reference&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;aggregate()&lt;/code&gt; 子句的参数描述了我们要计算的合计值-在这种情况下，是 &lt;code&gt;Book&lt;/code&gt; 模型中 &lt;code&gt;price&lt;/code&gt; 字段的平均值。可用的聚合函数列表可以在&lt;a href=&quot;../../ref/models/querysets#aggregation-functions&quot;&gt;QuerySet参考中&lt;/a&gt;找到。</target>
        </trans-unit>
        <trans-unit id="38b9fbc0c3f8999f4800792e7de465e03c8ff2df" translate="yes" xml:space="preserve">
          <source>The arguments &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt; for all these functions can be the name of a field or an expression returning a numeric data. Both are required.</source>
          <target state="translated">所有这些函数的参数 &lt;code&gt;y&lt;/code&gt; 和 &lt;code&gt;x&lt;/code&gt; 可以是返回数字数据的字段名称或表达式。两者都是必需的。</target>
        </trans-unit>
        <trans-unit id="234842b53cd3fb64ec6b1d34807b3146242f2bc5" translate="yes" xml:space="preserve">
          <source>The arguments could be:</source>
          <target state="translated">这些论点可以是:</target>
        </trans-unit>
        <trans-unit id="3a2e4d745e49dbe1d8f4700c23dbff5895949226" translate="yes" xml:space="preserve">
          <source>The arguments sent to a &lt;a href=&quot;#django.db.models.signals.pre_init&quot;&gt;&lt;code&gt;pre_init&lt;/code&gt;&lt;/a&gt; handler would be:</source>
          <target state="translated">发送到&lt;a href=&quot;#django.db.models.signals.pre_init&quot;&gt; &lt;code&gt;pre_init&lt;/code&gt; &lt;/a&gt;处理程序的参数为：</target>
        </trans-unit>
        <trans-unit id="b40a0dba514c3fca4aaf0a16475d475821c9133b" translate="yes" xml:space="preserve">
          <source>The arguments that would be passed to the view function, as parsed from the URL.</source>
          <target state="translated">从URL中解析出的传递给视图函数的参数。</target>
        </trans-unit>
        <trans-unit id="4a07353e9e4ebaa205ffd31498b077e009895998" translate="yes" xml:space="preserve">
          <source>The arguments to &lt;code&gt;SearchVector&lt;/code&gt; can be any &lt;a href=&quot;../../models/expressions#django.db.models.Expression&quot;&gt;&lt;code&gt;Expression&lt;/code&gt;&lt;/a&gt; or the name of a field. Multiple arguments will be concatenated together using a space so that the search document includes them all.</source>
          <target state="translated">&lt;code&gt;SearchVector&lt;/code&gt; 的参数可以是任何&lt;a href=&quot;../../models/expressions#django.db.models.Expression&quot;&gt; &lt;code&gt;Expression&lt;/code&gt; &lt;/a&gt;或字段名称。多个参数将使用空格连接在一起，以便搜索文档将它们全部包含在内。</target>
        </trans-unit>
        <trans-unit id="3d15cce58b664ebb221fa359cc4cd286c540775b" translate="yes" xml:space="preserve">
          <source>The arguments to the &lt;code&gt;serialize&lt;/code&gt; function are the format to serialize the data to (see &lt;a href=&quot;#id2&quot;&gt;Serialization formats&lt;/a&gt;) and a &lt;a href=&quot;../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; to serialize. (Actually, the second argument can be any iterator that yields Django model instances, but it&amp;rsquo;ll almost always be a QuerySet).</source>
          <target state="translated">&lt;code&gt;serialize&lt;/code&gt; 函数的参数是将数据序列化为的格式（请参阅&lt;a href=&quot;#id2&quot;&gt;序列化格式&lt;/a&gt;）和要序列化的&lt;a href=&quot;../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;。（实际上，第二个参数可以是产生Django模型实例的任何迭代器，但几乎总是一个QuerySet）。</target>
        </trans-unit>
        <trans-unit id="fd4452cde3f328edd93934e5104148d9f957b809" translate="yes" xml:space="preserve">
          <source>The associated &lt;a href=&quot;#django.core.paginator.Paginator&quot;&gt;&lt;code&gt;Paginator&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">关联的&lt;a href=&quot;#django.core.paginator.Paginator&quot;&gt; &lt;code&gt;Paginator&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="bdf71dd3c049299e09a4f2f928d80ec30fe24bac" translate="yes" xml:space="preserve">
          <source>The async function is run in the event loop for the current thread, if one is present. If there is no current event loop, a new event loop is spun up specifically for the single async invocation and shut down again once it completes. In either situation, the async function will execute on a different thread to the calling code.</source>
          <target state="translated">异步函数在当前线程的事件循环中运行(如果有的话)。如果当前线程没有事件循环,则会专门为单次异步调用启动一个新的事件循环,并在完成后再次关闭。无论是哪种情况,异步函数都会在与调用代码不同的线程上执行。</target>
        </trans-unit>
        <trans-unit id="a982c503ad49b68a1bdb121a89507e8e4a71c6b5" translate="yes" xml:space="preserve">
          <source>The asynchronous client can also call synchronous views; it runs through Django&amp;rsquo;s &lt;a href=&quot;../async&quot;&gt;asynchronous request path&lt;/a&gt;, which supports both. Any view called through the &lt;code&gt;AsyncClient&lt;/code&gt; will get an &lt;code&gt;ASGIRequest&lt;/code&gt; object for its &lt;code&gt;request&lt;/code&gt; rather than the &lt;code&gt;WSGIRequest&lt;/code&gt; that the normal client creates.</source>
          <target state="translated">异步客户端也可以调用同步视图。它通过Django的&lt;a href=&quot;../async&quot;&gt;异步请求路径&lt;/a&gt;（同时支持两者）运行。通过 &lt;code&gt;AsyncClient&lt;/code&gt; 调用的任何视图都将为其 &lt;code&gt;request&lt;/code&gt; 获取一个 &lt;code&gt;ASGIRequest&lt;/code&gt; 对象，而不是普通客户端创建的 &lt;code&gt;WSGIRequest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="914b747a079005b1889a3d7bacf74b3b2748bc6a" translate="yes" xml:space="preserve">
          <source>The attribute name of the manager, for example, &lt;code&gt;'objects'&lt;/code&gt;, to use for the model&amp;rsquo;s &lt;a href=&quot;../../topics/db/managers#django.db.models.Model._base_manager&quot;&gt;&lt;code&gt;_base_manager&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">管理器的属性名称，例如 &lt;code&gt;'objects'&lt;/code&gt; ，用于模型的&lt;a href=&quot;../../topics/db/managers#django.db.models.Model._base_manager&quot;&gt; &lt;code&gt;_base_manager&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="008b3dad8d22ca87ea5caad2736b3f94ac59b0d8" translate="yes" xml:space="preserve">
          <source>The attribute value for the given target node (e.g. &lt;code&gt;'PROJCS'&lt;/code&gt;). The index keyword specifies an index of the child node to return.</source>
          <target state="translated">给定目标节点的属性值（例如 &lt;code&gt;'PROJCS'&lt;/code&gt; ）。index关键字指定要返回的子节点的索引。</target>
        </trans-unit>
        <trans-unit id="3942b96a9448810f41feb915fe51e8f59804da30" translate="yes" xml:space="preserve">
          <source>The auth framework uses the following &lt;a href=&quot;../../topics/signals&quot;&gt;signals&lt;/a&gt; that can be used for notification when a user logs in or out.</source>
          <target state="translated">auth框架使用以下&lt;a href=&quot;../../topics/signals&quot;&gt;信号&lt;/a&gt;，这些信号可在用户登录或注销时用于通知。</target>
        </trans-unit>
        <trans-unit id="ecd508ff20efd3eb588e62639fcb2471a66c3d8a" translate="yes" xml:space="preserve">
          <source>The auth system consists of:</source>
          <target state="translated">认证系统包括:</target>
        </trans-unit>
        <trans-unit id="61a104070b2969d0c5f813a479d886d9764fecab" translate="yes" xml:space="preserve">
          <source>The authentication system in Django aims to be very generic and doesn&amp;rsquo;t provide some features commonly found in web authentication systems. Solutions for some of these common problems have been implemented in third-party packages:</source>
          <target state="translated">Django中的身份验证系统旨在非常通用，不提供Web身份验证系统中常见的某些功能。这些常见问题中的一些解决方案已在第三方程序包中实现：</target>
        </trans-unit>
        <trans-unit id="ec77eb11767b1885c805cb1b653e43962a44298c" translate="yes" xml:space="preserve">
          <source>The authentication that comes with Django is good enough for most common cases, but you may have needs not met by the out-of-the-box defaults. Customizing authentication in your projects requires understanding what points of the provided system are extensible or replaceable. This document provides details about how the auth system can be customized.</source>
          <target state="translated">Django自带的身份验证已经足够满足大多数常见的情况,但你可能有一些需求没有被开箱即用的默认值所满足。在你的项目中定制身份验证需要了解所提供系统的哪些点是可扩展或可替换的。本文档详细介绍了如何定制认证系统。</target>
        </trans-unit>
        <trans-unit id="cc1f5f7935160d4a0b3a0685c00899189bb8f19b" translate="yes" xml:space="preserve">
          <source>The auto-escaping tag passes its effect onto templates that extend the current one as well as templates included via the &lt;a href=&quot;builtins#std:templatetag-include&quot;&gt;&lt;code&gt;include&lt;/code&gt;&lt;/a&gt; tag, just like all block tags. For example:</source>
          <target state="translated">自动转义标签将其效果传递到扩展当前模板的模板以及通过&lt;a href=&quot;builtins#std:templatetag-include&quot;&gt; &lt;code&gt;include&lt;/code&gt; &lt;/a&gt;标签包含的模板，就像所有块标签一样。例如：</target>
        </trans-unit>
        <trans-unit id="5196492f954094c3d65f1964effd40af3faad1a8" translate="yes" xml:space="preserve">
          <source>The automatic Django administrative interface. For more information, see &lt;a href=&quot;../../intro/tutorial02&quot;&gt;Tutorial 2&lt;/a&gt; and the &lt;a href=&quot;admin/index&quot;&gt;admin documentation&lt;/a&gt;.</source>
          <target state="translated">自动Django管理界面。有关更多信息，请参见&lt;a href=&quot;../../intro/tutorial02&quot;&gt;教程2&lt;/a&gt;和&lt;a href=&quot;admin/index&quot;&gt;管理文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8463abda226aba2d4b03207a9828738ce89ce27" translate="yes" xml:space="preserve">
          <source>The automatically-created &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;Restaurant&lt;/code&gt; that links it to &lt;code&gt;Place&lt;/code&gt; looks like this:</source>
          <target state="translated">在 &lt;code&gt;Restaurant&lt;/code&gt; 上自动创建的将其链接到 &lt;code&gt;Place&lt;/code&gt; 的&lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt;如下所示：</target>
        </trans-unit>
        <trans-unit id="100dc0780f76c39f4f394eb5e29ec95f31614c47" translate="yes" xml:space="preserve">
          <source>The available options are driver-specific and are described in the documentation of each driver.</source>
          <target state="translated">可用的选项是特定的驱动程序,在每个驱动程序的文档中都有描述。</target>
        </trans-unit>
        <trans-unit id="8fcc676ce725143c073349a90333914bbdd1f51e" translate="yes" xml:space="preserve">
          <source>The backend to use for sending emails. For the list of available backends see &lt;a href=&quot;../topics/email&quot;&gt;Sending email&lt;/a&gt;.</source>
          <target state="translated">用于发送电子邮件的后端。有关可用后端的列表，请参阅&lt;a href=&quot;../topics/email&quot;&gt;发送电子邮件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="576799d745db3f1197d2fda500069280a6d9134f" translate="yes" xml:space="preserve">
          <source>The backend used for signing cookies and other data.</source>
          <target state="translated">用于签署cookie和其他数据的后台。</target>
        </trans-unit>
        <trans-unit id="b8a1264ca89d12e79ce195b56da626da227971ae" translate="yes" xml:space="preserve">
          <source>The backends that use cookies &amp;ndash; &lt;a href=&quot;contrib/messages#django.contrib.messages.storage.cookie.CookieStorage&quot;&gt;&lt;code&gt;CookieStorage&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;contrib/messages#django.contrib.messages.storage.fallback.FallbackStorage&quot;&gt;&lt;code&gt;FallbackStorage&lt;/code&gt;&lt;/a&gt; &amp;ndash; use the value of &lt;a href=&quot;#std:setting-SESSION_COOKIE_DOMAIN&quot;&gt;&lt;code&gt;SESSION_COOKIE_DOMAIN&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#std:setting-SESSION_COOKIE_SECURE&quot;&gt;&lt;code&gt;SESSION_COOKIE_SECURE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-SESSION_COOKIE_HTTPONLY&quot;&gt;&lt;code&gt;SESSION_COOKIE_HTTPONLY&lt;/code&gt;&lt;/a&gt; when setting their cookies.</source>
          <target state="translated">使用cookie的后端&lt;a href=&quot;contrib/messages#django.contrib.messages.storage.cookie.CookieStorage&quot;&gt; &lt;code&gt;CookieStorage&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;contrib/messages#django.contrib.messages.storage.fallback.FallbackStorage&quot;&gt; &lt;code&gt;FallbackStorage&lt;/code&gt; &lt;/a&gt;在设置其cookie时使用&lt;a href=&quot;#std:setting-SESSION_COOKIE_DOMAIN&quot;&gt; &lt;code&gt;SESSION_COOKIE_DOMAIN&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#std:setting-SESSION_COOKIE_SECURE&quot;&gt; &lt;code&gt;SESSION_COOKIE_SECURE&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#std:setting-SESSION_COOKIE_HTTPONLY&quot;&gt; &lt;code&gt;SESSION_COOKIE_HTTPONLY&lt;/code&gt; &lt;/a&gt;的值。</target>
        </trans-unit>
        <trans-unit id="964535ae016832b967055319bcc6c7fb352a308a" translate="yes" xml:space="preserve">
          <source>The base GDAL exception, indicating a GDAL-related error.</source>
          <target state="translated">基本的GDAL异常,表示一个与GDAL相关的错误。</target>
        </trans-unit>
        <trans-unit id="bda2f3d3bce60c32a775aeccb73cbe6de4e34b7c" translate="yes" xml:space="preserve">
          <source>The base GEOS exception, indicates a GEOS-related error.</source>
          <target state="translated">基本的GEOS异常,表示一个GEOS相关的错误。</target>
        </trans-unit>
        <trans-unit id="6b0141fd507b4c5e582f814df4e6601f267735ad" translate="yes" xml:space="preserve">
          <source>The base class for &lt;a href=&quot;models/class#django.db.models.Model.DoesNotExist&quot;&gt;&lt;code&gt;Model.DoesNotExist&lt;/code&gt;&lt;/a&gt; exceptions. A &lt;code&gt;try/except&lt;/code&gt; for &lt;code&gt;ObjectDoesNotExist&lt;/code&gt; will catch &lt;a href=&quot;models/class#django.db.models.Model.DoesNotExist&quot;&gt;&lt;code&gt;DoesNotExist&lt;/code&gt;&lt;/a&gt; exceptions for all models.</source>
          <target state="translated">&lt;a href=&quot;models/class#django.db.models.Model.DoesNotExist&quot;&gt; &lt;code&gt;Model.DoesNotExist&lt;/code&gt; &lt;/a&gt;异常的基类。一个 &lt;code&gt;try/except&lt;/code&gt; 用于 &lt;code&gt;ObjectDoesNotExist&lt;/code&gt; 将捕捉&lt;a href=&quot;models/class#django.db.models.Model.DoesNotExist&quot;&gt; &lt;code&gt;DoesNotExist&lt;/code&gt; &lt;/a&gt;例外适用于所有型号。</target>
        </trans-unit>
        <trans-unit id="0b0398840b7f3108351339309d0e357201b34e39" translate="yes" xml:space="preserve">
          <source>The base class for &lt;a href=&quot;models/class#django.db.models.Model.MultipleObjectsReturned&quot;&gt;&lt;code&gt;Model.MultipleObjectsReturned&lt;/code&gt;&lt;/a&gt; exceptions. A &lt;code&gt;try/except&lt;/code&gt; for &lt;code&gt;MultipleObjectsReturned&lt;/code&gt; will catch &lt;a href=&quot;models/class#django.db.models.Model.MultipleObjectsReturned&quot;&gt;&lt;code&gt;MultipleObjectsReturned&lt;/code&gt;&lt;/a&gt; exceptions for all models.</source>
          <target state="translated">&lt;a href=&quot;models/class#django.db.models.Model.MultipleObjectsReturned&quot;&gt; &lt;code&gt;Model.MultipleObjectsReturned&lt;/code&gt; &lt;/a&gt;异常的基类。一个 &lt;code&gt;try/except&lt;/code&gt; 用于 &lt;code&gt;MultipleObjectsReturned&lt;/code&gt; 将捕捉&lt;a href=&quot;models/class#django.db.models.Model.MultipleObjectsReturned&quot;&gt; &lt;code&gt;MultipleObjectsReturned&lt;/code&gt; &lt;/a&gt;例外适用于所有型号。</target>
        </trans-unit>
        <trans-unit id="906638656f4dbe6467a42477b52e04d7b0ece166" translate="yes" xml:space="preserve">
          <source>The base class for &lt;a href=&quot;models/instances#django.db.models.Model.DoesNotExist&quot;&gt;&lt;code&gt;DoesNotExist&lt;/code&gt;&lt;/a&gt; exceptions; a &lt;code&gt;try/except&lt;/code&gt; for &lt;code&gt;ObjectDoesNotExist&lt;/code&gt; will catch &lt;a href=&quot;models/instances#django.db.models.Model.DoesNotExist&quot;&gt;&lt;code&gt;DoesNotExist&lt;/code&gt;&lt;/a&gt; exceptions for all models.</source>
          <target state="translated">&lt;a href=&quot;models/instances#django.db.models.Model.DoesNotExist&quot;&gt; &lt;code&gt;DoesNotExist&lt;/code&gt; &lt;/a&gt;异常的基类；对于 &lt;code&gt;ObjectDoesNotExist&lt;/code&gt; 的 &lt;code&gt;try/except&lt;/code&gt; 将捕获所有模型的&lt;a href=&quot;models/instances#django.db.models.Model.DoesNotExist&quot;&gt; &lt;code&gt;DoesNotExist&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="e36fab02d6b59f2de4dd10a1261a1293cf20742c" translate="yes" xml:space="preserve">
          <source>The base class for geometry fields.</source>
          <target state="translated">几何领域的基类。</target>
        </trans-unit>
        <trans-unit id="122abe985212517b35de16354fc8007e773f67a4" translate="yes" xml:space="preserve">
          <source>The base class from which all management commands ultimately derive.</source>
          <target state="translated">所有管理命令最终派生的基类。</target>
        </trans-unit>
        <trans-unit id="ff98f09e4515cf46904df38f62dc4a6bda0598f3" translate="yes" xml:space="preserve">
          <source>The base implementation of this method requires that the &lt;code&gt;self.object&lt;/code&gt; attribute be set by the view (even if &lt;code&gt;None&lt;/code&gt;). Be sure to do this if you are using this mixin without one of the built-in views that does so.</source>
          <target state="translated">此方法的基本实现要求由视图设置 &lt;code&gt;self.object&lt;/code&gt; 属性（即使 &lt;code&gt;None&lt;/code&gt; ）。如果您在没有任何内置视图的情况下使用此混合，请确保执行此操作。</target>
        </trans-unit>
        <trans-unit id="62452647669ab0cad5d37dc37a48325331af7a79" translate="yes" xml:space="preserve">
          <source>The base implementation uses &lt;a href=&quot;../../forms/models#django.forms.models.modelform_factory&quot;&gt;&lt;code&gt;modelform_factory()&lt;/code&gt;&lt;/a&gt; to subclass &lt;a href=&quot;#django.contrib.admin.ModelAdmin.form&quot;&gt;&lt;code&gt;form&lt;/code&gt;&lt;/a&gt;, modified by attributes such as &lt;a href=&quot;#django.contrib.admin.ModelAdmin.fields&quot;&gt;&lt;code&gt;fields&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.admin.ModelAdmin.exclude&quot;&gt;&lt;code&gt;exclude&lt;/code&gt;&lt;/a&gt;. So, for example, if you wanted to offer additional fields to superusers, you could swap in a different base form like so:</source>
          <target state="translated">基本实现使用&lt;a href=&quot;../../forms/models#django.forms.models.modelform_factory&quot;&gt; &lt;code&gt;modelform_factory()&lt;/code&gt; &lt;/a&gt;子类化&lt;a href=&quot;#django.contrib.admin.ModelAdmin.form&quot;&gt; &lt;code&gt;form&lt;/code&gt; &lt;/a&gt;，并通过诸如&lt;a href=&quot;#django.contrib.admin.ModelAdmin.fields&quot;&gt; &lt;code&gt;fields&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.contrib.admin.ModelAdmin.exclude&quot;&gt; &lt;code&gt;exclude&lt;/code&gt; &lt;/a&gt;这样的属性进行修改。因此，例如，如果您想向超级用户提供其他字段，则可以像这样交换其他基本形式：</target>
        </trans-unit>
        <trans-unit id="dd857193078c9ecf614877cf19f32fb71dcd22ff" translate="yes" xml:space="preserve">
          <source>The basename to use for the GeoIP city data file. Defaults to &lt;code&gt;'GeoLite2-City.mmdb'&lt;/code&gt;.</source>
          <target state="translated">用于GeoIP城市数据文件的基本名称。默认为 &lt;code&gt;'GeoLite2-City.mmdb'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d2ca8058de41f46f3080948ecd7b174b87ede18" translate="yes" xml:space="preserve">
          <source>The basename to use for the GeoIP country data file. Defaults to &lt;code&gt;'GeoLite2-Country.mmdb'&lt;/code&gt;.</source>
          <target state="translated">用于GeoIP国家/地区数据文件的基本名称。默认为 &lt;code&gt;'GeoLite2-Country.mmdb'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1452396f8cd7cb28a94c915c5443b1afbfbb3e91" translate="yes" xml:space="preserve">
          <source>The basic XML serialization format looks like this:</source>
          <target state="translated">基本的XML序列化格式是这样的。</target>
        </trans-unit>
        <trans-unit id="1d9ebed1ce04c5f94076311a0a3f830cace13fce" translate="yes" xml:space="preserve">
          <source>The basic interface is:</source>
          <target state="translated">基本界面是:</target>
        </trans-unit>
        <trans-unit id="ebec57daa507b27696e753d25c527f7368179051" translate="yes" xml:space="preserve">
          <source>The basic outline of putting static files into production consists of two steps: run the &lt;a href=&quot;../../ref/contrib/staticfiles#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; command when static files change, then arrange for the collected static files directory (&lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt;) to be moved to the static file server and served. Depending on &lt;a href=&quot;../../ref/settings#std:setting-STATICFILES_STORAGE&quot;&gt;&lt;code&gt;STATICFILES_STORAGE&lt;/code&gt;&lt;/a&gt;, files may need to be moved to a new location manually or the &lt;a href=&quot;../../ref/contrib/staticfiles#django.contrib.staticfiles.storage.StaticFilesStorage.post_process&quot;&gt;&lt;code&gt;post_process&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;Storage&lt;/code&gt; class might take care of that.</source>
          <target state="translated">将静态文件投入生产的基本概述包括两个步骤：在静态文件更改时运行&lt;a href=&quot;../../ref/contrib/staticfiles#django-admin-collectstatic&quot;&gt; &lt;code&gt;collectstatic&lt;/code&gt; &lt;/a&gt;命令，然后安排将收集的静态文件目录（&lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt; &lt;code&gt;STATIC_ROOT&lt;/code&gt; &lt;/a&gt;）移至静态文件服务器并提供服务。根据&lt;a href=&quot;../../ref/settings#std:setting-STATICFILES_STORAGE&quot;&gt; &lt;code&gt;STATICFILES_STORAGE&lt;/code&gt; 的不同&lt;/a&gt;，可能需要将文件手动移动到新位置，或者 &lt;code&gt;Storage&lt;/code&gt; 类的&lt;a href=&quot;../../ref/contrib/staticfiles#django.contrib.staticfiles.storage.StaticFilesStorage.post_process&quot;&gt; &lt;code&gt;post_process&lt;/code&gt; &lt;/a&gt;方法可以解决此问题。</target>
        </trans-unit>
        <trans-unit id="1248c42957e9052c54ba9f94f75f3179ad9777de" translate="yes" xml:space="preserve">
          <source>The basic workflow of Django&amp;rsquo;s admin is, in a nutshell, &amp;ldquo;select an object, then change it.&amp;rdquo; This works well for a majority of use cases. However, if you need to make the same change to many objects at once, this workflow can be quite tedious.</source>
          <target state="translated">简而言之，Django管理员的基本工作流程是&amp;ldquo;选择一个对象，然后更改它&amp;rdquo;。这对于大多数用例都适用。但是，如果您需要一次对多个对象进行相同的更改，则此工作流程可能非常繁琐。</target>
        </trans-unit>
        <trans-unit id="dd7a1e79deca9ce13b590c6b3440a4ec69eb8a2d" translate="yes" xml:space="preserve">
          <source>The basics</source>
          <target state="translated">基础知识</target>
        </trans-unit>
        <trans-unit id="ed93bbf6bfa5dca06573f5f5c3e836a23fcac4cb" translate="yes" xml:space="preserve">
          <source>The basics:</source>
          <target state="translated">基础知识。</target>
        </trans-unit>
        <trans-unit id="19819b533035887c9696af9f0a0e1aca66195bd4" translate="yes" xml:space="preserve">
          <source>The beginner tutorial ends here. In the meantime, you might want to check out some pointers on &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/intro/whatsnext/&quot;&gt;where to go from here&lt;/a&gt;.</source>
          <target state="translated">初学者教程到此结束。在此期间，您可能想查看一些有关&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/intro/whatsnext/&quot;&gt;从此处&lt;/a&gt;出发的指示。</target>
        </trans-unit>
        <trans-unit id="fd1bbbef13b3aca2888e00241ee419d00c8eb30a" translate="yes" xml:space="preserve">
          <source>The beginner tutorial ends here. In the meantime, you might want to check out some pointers on &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/intro/whatsnext/&quot;&gt;where to go from here&lt;/a&gt;.</source>
          <target state="translated">初学者教程到此结束。在此期间，您可能想查看一些有关&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/intro/whatsnext/&quot;&gt;从此处&lt;/a&gt;出发的指示。</target>
        </trans-unit>
        <trans-unit id="03bab636f3eb8e10885855023760c7501a9934c3" translate="yes" xml:space="preserve">
          <source>The behavior of &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; for queries that span multi-value relationships, as described above, is not implemented equivalently for &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.exclude&quot;&gt;&lt;code&gt;exclude()&lt;/code&gt;&lt;/a&gt;. Instead, the conditions in a single &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.exclude&quot;&gt;&lt;code&gt;exclude()&lt;/code&gt;&lt;/a&gt; call will not necessarily refer to the same item.</source>
          <target state="translated">如上所述，对于跨多值关系的查询，&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt;的行为并未对&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.exclude&quot;&gt; &lt;code&gt;exclude()&lt;/code&gt; &lt;/a&gt;等效地实现。而是，单个&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.exclude&quot;&gt; &lt;code&gt;exclude()&lt;/code&gt; &lt;/a&gt;调用中的条件不一定会引用同一项目。</target>
        </trans-unit>
        <trans-unit id="f9e766c83dff95a6d83827725e91012dbcc59b2f" translate="yes" xml:space="preserve">
          <source>The behavior of &lt;code&gt;Greatest&lt;/code&gt; when one or more expression may be &lt;code&gt;null&lt;/code&gt; varies between databases:</source>
          <target state="translated">当一个或多个表达式可能为 &lt;code&gt;null&lt;/code&gt; 时， &lt;code&gt;Greatest&lt;/code&gt; 的行为在数据库之间有所不同：</target>
        </trans-unit>
        <trans-unit id="a351643e5f00ff474c7779a021e02617a4da171f" translate="yes" xml:space="preserve">
          <source>The behavior of &lt;code&gt;Least&lt;/code&gt; when one or more expression may be &lt;code&gt;null&lt;/code&gt; varies between databases:</source>
          <target state="translated">当一个或多个表达式可能为 &lt;code&gt;null&lt;/code&gt; 时， &lt;code&gt;Least&lt;/code&gt; 的行为在数据库之间有所不同：</target>
        </trans-unit>
        <trans-unit id="057b993325ccc80fcf95bd92fbdb2a382a9b442b" translate="yes" xml:space="preserve">
          <source>The behavior of &lt;code&gt;get_context_data()&lt;/code&gt; mimics that of &lt;a href=&quot;../../topics/class-based-views/generic-display#adding-extra-context&quot;&gt;generic views&lt;/a&gt; - you&amp;rsquo;re supposed to call &lt;code&gt;super()&lt;/code&gt; to retrieve context data from parent class, add your data and return the modified dictionary.</source>
          <target state="translated">&lt;code&gt;get_context_data()&lt;/code&gt; 的行为模仿了&lt;a href=&quot;../../topics/class-based-views/generic-display#adding-extra-context&quot;&gt;通用视图&lt;/a&gt;的行为-您应该调用 &lt;code&gt;super()&lt;/code&gt; 从父类检索上下文数据，添加数据并返回修改后的字典。</target>
        </trans-unit>
        <trans-unit id="aa169d725191490a1aea662b8802083bc3e86592" translate="yes" xml:space="preserve">
          <source>The behavior of this command changes depending on the arguments provided:</source>
          <target state="translated">该命令的行为根据提供的参数而改变。</target>
        </trans-unit>
        <trans-unit id="90325f4fcebc4171004e318ae97a21a3e65143dc" translate="yes" xml:space="preserve">
          <source>The better way of doing this would be to make the parameter specifiable at run time &amp;ndash; i.e., when the class is instantiated. To do that, implement &lt;code&gt;Field.__init__()&lt;/code&gt;, like so:</source>
          <target state="translated">更好的方法是在运行时（即在实例化类时）指定参数。为此，实现 &lt;code&gt;Field.__init__()&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="a75382c8cbcc3dbba796094ccab37c0db21da61b" translate="yes" xml:space="preserve">
          <source>The body of the response, as a bytestring. This is the final page content as rendered by the view, or any error message.</source>
          <target state="translated">响应的主体,作为一个bytestring。这是由视图渲染的最终页面内容,或任何错误信息。</target>
        </trans-unit>
        <trans-unit id="ba0635085b4b53dff09b77c3576d7e12b2e8304f" translate="yes" xml:space="preserve">
          <source>The body of the response, parsed as JSON. Extra keyword arguments are passed to &lt;a href=&quot;https://docs.python.org/3/library/json.html#json.loads&quot;&gt;&lt;code&gt;json.loads()&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">响应的主体，解析为JSON。额外的关键字参数传递给&lt;a href=&quot;https://docs.python.org/3/library/json.html#json.loads&quot;&gt; &lt;code&gt;json.loads()&lt;/code&gt; &lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="295e8ad1dcf0a388bc37ac83533ba8b1618e59e6" translate="yes" xml:space="preserve">
          <source>The boolean return value was added.</source>
          <target state="translated">增加了布尔返回值。</target>
        </trans-unit>
        <trans-unit id="d878d39730eba5ab369120caf235c7191a89071e" translate="yes" xml:space="preserve">
          <source>The bottom part of the page gives you a couple of options:</source>
          <target state="translated">页面的底部给了你几个选择。</target>
        </trans-unit>
        <trans-unit id="f53147ed081ba2076d0ad7d8eaa79bd9a6ceb4d2" translate="yes" xml:space="preserve">
          <source>The boundary of this geometry, as a new &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry&quot;&gt;&lt;code&gt;OGRGeometry&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">此几何的边界，作为新的&lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry&quot;&gt; &lt;code&gt;OGRGeometry&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="db71c7ecdde31216cce0a338b9b4ebddfeb78321" translate="yes" xml:space="preserve">
          <source>The browser XSS filter is a useful defense measure, but must not be relied upon exclusively. It cannot detect all XSS attacks and not all browsers support the header. Ensure you are still &lt;a href=&quot;../topics/security#cross-site-scripting&quot;&gt;validating and sanitizing&lt;/a&gt; all input to prevent XSS attacks.</source>
          <target state="translated">浏览器XSS过滤器是一种有用的防御措施，但绝不能完全依赖它。它无法检测到所有XSS攻击，并且并非所有浏览器都支持标头。确保您仍在&lt;a href=&quot;../topics/security#cross-site-scripting&quot;&gt;验证和清除&lt;/a&gt;所有输入以防止XSS攻击。</target>
        </trans-unit>
        <trans-unit id="2db9f0d686102d4ea9feac07a108844a5a917444" translate="yes" xml:space="preserve">
          <source>The built-in authentication forms make certain assumptions about the user model that they are working with. If you&amp;rsquo;re using a &lt;a href=&quot;customizing#auth-custom-user&quot;&gt;custom user model&lt;/a&gt;, it may be necessary to define your own forms for the authentication system. For more information, refer to the documentation about &lt;a href=&quot;customizing#custom-users-and-the-built-in-auth-forms&quot;&gt;using the built-in authentication forms with custom user models&lt;/a&gt;.</source>
          <target state="translated">内置的身份验证表单对他们使用的用户模型做出了某些假设。如果您使用的是&lt;a href=&quot;customizing#auth-custom-user&quot;&gt;自定义用户模型&lt;/a&gt;，则可能有必要为身份验证系统定义自己的表单。有关更多信息，请参阅有关&lt;a href=&quot;customizing#custom-users-and-the-built-in-auth-forms&quot;&gt;将内置身份验证表单与自定义用户模型一起使用&lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="b3931e44aa7f9b6bbd3694ca1edd00559719fb3d" translate="yes" xml:space="preserve">
          <source>The built-in filesystem storage class</source>
          <target state="translated">内置的文件系统存储类</target>
        </trans-unit>
        <trans-unit id="6b4fb3d576cb23d1e45270bd0cd300dd05954125" translate="yes" xml:space="preserve">
          <source>The built-in levels, which can be imported from &lt;code&gt;django.contrib.messages&lt;/code&gt; directly, are:</source>
          <target state="translated">可以直接从 &lt;code&gt;django.contrib.messages&lt;/code&gt; 导入的内置级别为：</target>
        </trans-unit>
        <trans-unit id="03c82f12b4874262b0dda2f2ddbd52c0a7d34ac6" translate="yes" xml:space="preserve">
          <source>The builtin template tag &lt;a href=&quot;../templates/builtins#std:templatetag-get_static_prefix&quot;&gt;&lt;code&gt;get_static_prefix&lt;/code&gt;&lt;/a&gt; which populates a template variable with the static prefix &lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; to be used as a variable or directly.</source>
          <target state="translated">内置模板标签&lt;a href=&quot;../templates/builtins#std:templatetag-get_static_prefix&quot;&gt; &lt;code&gt;get_static_prefix&lt;/code&gt; &lt;/a&gt;，该模板标签使用静态前缀&lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt;填充模板变量，以用作变量或直接用作变量。</target>
        </trans-unit>
        <trans-unit id="297fcb645fc48aff8a0298d4a2ce8e1f82194e37" translate="yes" xml:space="preserve">
          <source>The builtin template tag &lt;a href=&quot;../templates/builtins#std:templatetag-static&quot;&gt;&lt;code&gt;static&lt;/code&gt;&lt;/a&gt; which takes a path and urljoins it with the static prefix &lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; is installed, the tag uses the &lt;code&gt;url()&lt;/code&gt; method of the &lt;a href=&quot;../settings#std:setting-STATICFILES_STORAGE&quot;&gt;&lt;code&gt;STATICFILES_STORAGE&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">内置模板标记&lt;a href=&quot;../templates/builtins#std:templatetag-static&quot;&gt; &lt;code&gt;static&lt;/code&gt; &lt;/a&gt;，它接受路径并将其与静态前缀&lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; 进行urljoin&lt;/a&gt;。如果安装了 &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; ，则该标记将&lt;a href=&quot;../settings#std:setting-STATICFILES_STORAGE&quot;&gt; &lt;code&gt;STATICFILES_STORAGE&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;url()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="e947c073ddafa7efa9d10c0ab2187ebe8664d17e" translate="yes" xml:space="preserve">
          <source>The cache &lt;a href=&quot;../ref/settings#std:setting-CACHES-LOCATION&quot;&gt;&lt;code&gt;LOCATION&lt;/code&gt;&lt;/a&gt; is used to identify individual memory stores. If you only have one &lt;code&gt;locmem&lt;/code&gt; cache, you can omit the &lt;a href=&quot;../ref/settings#std:setting-CACHES-LOCATION&quot;&gt;&lt;code&gt;LOCATION&lt;/code&gt;&lt;/a&gt;; however, if you have more than one local memory cache, you will need to assign a name to at least one of them in order to keep them separate.</source>
          <target state="translated">高速缓存&lt;a href=&quot;../ref/settings#std:setting-CACHES-LOCATION&quot;&gt; &lt;code&gt;LOCATION&lt;/code&gt; &lt;/a&gt;用于标识各个存储器。如果只有一个 &lt;code&gt;locmem&lt;/code&gt; 缓存，则可以省略&lt;a href=&quot;../ref/settings#std:setting-CACHES-LOCATION&quot;&gt; &lt;code&gt;LOCATION&lt;/code&gt; &lt;/a&gt;；但是，如果您有多个本地内存缓存，则需要为其中至少一个分配一个名称，以使它们分开。</target>
        </trans-unit>
        <trans-unit id="26cd46adbf068b78511927170d0cd07d86f0fd4d" translate="yes" xml:space="preserve">
          <source>The cache backend to use. The built-in cache backends are:</source>
          <target state="translated">要使用的缓存后端。内置的缓存后端有:</target>
        </trans-unit>
        <trans-unit id="7e1154f774126ce5ad699da0f651f6187725e5fa" translate="yes" xml:space="preserve">
          <source>The cache connection to use for the &lt;a href=&quot;../topics/cache#the-per-site-cache&quot;&gt;cache middleware&lt;/a&gt;.</source>
          <target state="translated">用于&lt;a href=&quot;../topics/cache#the-per-site-cache&quot;&gt;缓存中间件&lt;/a&gt;的缓存连接。</target>
        </trans-unit>
        <trans-unit id="e0d8ccb98c19fec4a4ed9ca090e17f49252587bc" translate="yes" xml:space="preserve">
          <source>The cache settings when opening up the GeoIP datasets. May be an integer in (0, 1, 2, 4, 8) corresponding to the &lt;code&gt;MODE_AUTO&lt;/code&gt;, &lt;code&gt;MODE_MMAP_EXT&lt;/code&gt;, &lt;code&gt;MODE_MMAP&lt;/code&gt;, and &lt;code&gt;GEOIP_INDEX_CACHE&lt;/code&gt;&lt;code&gt;MODE_MEMORY&lt;/code&gt; C API settings, respectively. Defaults to 0 (&lt;code&gt;MODE_AUTO&lt;/code&gt;).</source>
          <target state="translated">打开GeoIP数据集时的缓存设置。可以是（ &lt;code&gt;MODE_AUTO&lt;/code&gt; ）中的整数， &lt;code&gt;MODE_MMAP_EXT&lt;/code&gt; 对应于MODE_AUTO，MODE_MMAP_EXT， &lt;code&gt;MODE_MMAP&lt;/code&gt; 和 &lt;code&gt;GEOIP_INDEX_CACHE&lt;/code&gt; &lt;code&gt;MODE_MEMORY&lt;/code&gt; C API设置。默认为0（ &lt;code&gt;MODE_AUTO&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3acdd70132d51d22420eb1175657196364abf659" translate="yes" xml:space="preserve">
          <source>The cache system requires a small amount of setup. Namely, you have to tell it where your cached data should live &amp;ndash; whether in a database, on the filesystem or directly in memory. This is an important decision that affects your cache&amp;rsquo;s performance; yes, some cache types are faster than others.</source>
          <target state="translated">缓存系统需要少量设置。即，您必须告诉它缓存的数据应该存放在哪里&amp;ndash;无论是在数据库中，在文件系统上还是直接在内存中。这是影响缓存性能的重要决定。是的，某些缓存类型比其他类型更快。</target>
        </trans-unit>
        <trans-unit id="412d65e9c538bfe4a372f72f3322c99a2e6d8093" translate="yes" xml:space="preserve">
          <source>The cache timeout can be a template variable, as long as the template variable resolves to an integer value. For example, if the template variable &lt;code&gt;my_timeout&lt;/code&gt; is set to the value &lt;code&gt;600&lt;/code&gt;, then the following two examples are equivalent:</source>
          <target state="translated">缓存超时可以是模板变量，只要模板变量解析为整数值即可。例如，如果模板变量 &lt;code&gt;my_timeout&lt;/code&gt; 设置为值 &lt;code&gt;600&lt;/code&gt; ，则以下两个示例等效：</target>
        </trans-unit>
        <trans-unit id="815d25ed19888d1432fe98c192f8df2fbb8ec940" translate="yes" xml:space="preserve">
          <source>The cache timeout set by &lt;code&gt;cache_page&lt;/code&gt; takes precedence over the &lt;code&gt;max-age&lt;/code&gt; directive from the &lt;code&gt;Cache-Control&lt;/code&gt; header.</source>
          <target state="translated">由 &lt;code&gt;cache_page&lt;/code&gt; 设置的缓存超时优先于 &lt;code&gt;Cache-Control&lt;/code&gt; 标头中的 &lt;code&gt;max-age&lt;/code&gt; 指令。</target>
        </trans-unit>
        <trans-unit id="bc353ddabf47aac846044e4948d99fc39ed66470" translate="yes" xml:space="preserve">
          <source>The cache uses a least-recently-used (LRU) culling strategy.</source>
          <target state="translated">缓存使用最小最近使用(LRU)的剔除策略。</target>
        </trans-unit>
        <trans-unit id="548bf6cd86306f6731ede47d7c608a40b6439642" translate="yes" xml:space="preserve">
          <source>The cached template loader</source>
          <target state="translated">缓存的模板加载器</target>
        </trans-unit>
        <trans-unit id="4aaac7ed3362a3f4617c65798299ec343e8dba17" translate="yes" xml:space="preserve">
          <source>The cached value can be treated like an ordinary attribute of the instance:</source>
          <target state="translated">缓存值可以像实例的普通属性一样对待。</target>
        </trans-unit>
        <trans-unit id="32eaef240c894f7537a2b2879dce4928a62820a9" translate="yes" xml:space="preserve">
          <source>The caching framework</source>
          <target state="translated">缓存框架</target>
        </trans-unit>
        <trans-unit id="0dbec7decbf87a1b937f4e084412fbd8e0b16bc0" translate="yes" xml:space="preserve">
          <source>The call to &lt;a href=&quot;https://docs.python.org/3/library/logging.html#logging.getLogger&quot;&gt;&lt;code&gt;logging.getLogger()&lt;/code&gt;&lt;/a&gt; obtains (creating, if necessary) an instance of a logger. The logger instance is identified by a name. This name is used to identify the logger for configuration purposes.</source>
          <target state="translated">对&lt;a href=&quot;https://docs.python.org/3/library/logging.html#logging.getLogger&quot;&gt; &lt;code&gt;logging.getLogger()&lt;/code&gt; &lt;/a&gt;的调用获得（如果需要，则创建）记录器的实例。记录器实例由名称标识。此名称用于标识记录器以进行配置。</target>
        </trans-unit>
        <trans-unit id="28be4b432a3ed767d3483f9f071adcfdabb0344b" translate="yes" xml:space="preserve">
          <source>The call to &lt;code&gt;super().clean()&lt;/code&gt; in the example code ensures that any validation logic in parent classes is maintained. If your form inherits another that doesn&amp;rsquo;t return a &lt;code&gt;cleaned_data&lt;/code&gt; dictionary in its &lt;code&gt;clean()&lt;/code&gt; method (doing so is optional), then don&amp;rsquo;t assign &lt;code&gt;cleaned_data&lt;/code&gt; to the result of the &lt;code&gt;super()&lt;/code&gt; call and use &lt;code&gt;self.cleaned_data&lt;/code&gt; instead:</source>
          <target state="translated">示例代码中对 &lt;code&gt;super().clean()&lt;/code&gt; 的调用确保了父类中的任何验证逻辑都得以维护。如果您的表单继承了另一个在其 &lt;code&gt;clean()&lt;/code&gt; 方法中不返回 &lt;code&gt;cleaned_data&lt;/code&gt; 字典的表单（这样做是可选的），则不要将 &lt;code&gt;cleaned_data&lt;/code&gt; 分配给 &lt;code&gt;super()&lt;/code&gt; 调用的结果，而应使用 &lt;code&gt;self.cleaned_data&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1a01ba7ce9d6f81e9f47125f43d5581b8b99b441" translate="yes" xml:space="preserve">
          <source>The callable form can be helpful, for instance, when used in conjunction with the Python &lt;code&gt;datetime&lt;/code&gt; module to limit selections by date range. For example:</source>
          <target state="translated">例如，当与Python &lt;code&gt;datetime&lt;/code&gt; 模块结合使用以限制日期范围内的选择时，可调用形式可能会有所帮助。例如：</target>
        </trans-unit>
        <trans-unit id="110d3d8214f7f2350e2549600976802c9af215c7" translate="yes" xml:space="preserve">
          <source>The callable will be evaluated only when the unbound form is displayed, not when it is defined.</source>
          <target state="translated">只有在显示未绑定的表单时,而不是在定义表单时,才会对可调用的表单进行评估。</target>
        </trans-unit>
        <trans-unit id="f31beda7ce9ec0cb008195715fe9842980da0eb9" translate="yes" xml:space="preserve">
          <source>The cast of players</source>
          <target state="translated">演员阵容</target>
        </trans-unit>
        <trans-unit id="452676dbe881ca0f8bb5366dc0a27f7542061a2a" translate="yes" xml:space="preserve">
          <source>The catch-all logger for messages in the &lt;code&gt;django&lt;/code&gt; hierarchy. No messages are posted using this name but instead using one of the loggers below.</source>
          <target state="translated">&lt;code&gt;django&lt;/code&gt; 层次结构中消息的通用记录器。没有使用该名称发布消息，而是使用以下记录器之一发布。</target>
        </trans-unit>
        <trans-unit id="b651c172f62901bc6714dc1973eef30ed2d264bc" translate="yes" xml:space="preserve">
          <source>The character encoding used to decode any files read from disk. This includes template files, static files, and translation catalogs.</source>
          <target state="translated">用于解码从磁盘读取的任何文件的字符编码。这包括模板文件、静态文件和翻译目录。</target>
        </trans-unit>
        <trans-unit id="d3f3a550e11ae36f28b06315e750dc9f2f45a0df" translate="yes" xml:space="preserve">
          <source>The character set encoding used to create the test database. The value of this string is passed directly through to the database, so its format is backend-specific.</source>
          <target state="translated">用于创建测试数据库的字符集编码。这个字符串的值是直接传递给数据库的,所以它的格式是特定于后台的。</target>
        </trans-unit>
        <trans-unit id="43f7b3134e5af3df9646d6c2bb0d84090f20eafe" translate="yes" xml:space="preserve">
          <source>The character set of email sent with &lt;code&gt;django.core.mail&lt;/code&gt; will be set to the value of your &lt;a href=&quot;../ref/settings#std:setting-DEFAULT_CHARSET&quot;&gt;&lt;code&gt;DEFAULT_CHARSET&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">通过 &lt;code&gt;django.core.mail&lt;/code&gt; 发送的电子邮件的字符集将设置为&lt;a href=&quot;../ref/settings#std:setting-DEFAULT_CHARSET&quot;&gt; &lt;code&gt;DEFAULT_CHARSET&lt;/code&gt; &lt;/a&gt;设置的值。</target>
        </trans-unit>
        <trans-unit id="a6af75081aab59ce90d68a800760cfeda0e9987c" translate="yes" xml:space="preserve">
          <source>The charset in which the response will be encoded. If not given it will be extracted from &lt;code&gt;content_type&lt;/code&gt;, and if that is unsuccessful, the &lt;a href=&quot;settings#std:setting-DEFAULT_CHARSET&quot;&gt;&lt;code&gt;DEFAULT_CHARSET&lt;/code&gt;&lt;/a&gt; setting will be used.</source>
          <target state="translated">响应将在其中编码的字符集。如果未给出，它将从 &lt;code&gt;content_type&lt;/code&gt; 中提取出来，如果不成功，将使用&lt;a href=&quot;settings#std:setting-DEFAULT_CHARSET&quot;&gt; &lt;code&gt;DEFAULT_CHARSET&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="743b8267a0834d32d9c2ea8e6ceedb8a5bce9f25" translate="yes" xml:space="preserve">
          <source>The check function &lt;em&gt;must&lt;/em&gt; accept an &lt;code&gt;app_configs&lt;/code&gt; argument; this argument is the list of applications that should be inspected. If None, the check must be run on &lt;em&gt;all&lt;/em&gt; installed apps in the project. The &lt;code&gt;**kwargs&lt;/code&gt; argument is required for future expansion.</source>
          <target state="translated">检查功能&lt;em&gt;必须&lt;/em&gt;接受 &lt;code&gt;app_configs&lt;/code&gt; 参数；此参数是应检查的应用程序列表。如果为&amp;ldquo;无&amp;rdquo;，则必须在项目中&lt;em&gt;所有&lt;/em&gt;已安装的应用程序上运行检查。该 &lt;code&gt;**kwargs&lt;/code&gt; 参数需要为将来的扩展。</target>
        </trans-unit>
        <trans-unit id="d5824011522bd9eb13377730c19f148d90d6540f" translate="yes" xml:space="preserve">
          <source>The class has the following methods:</source>
          <target state="translated">该类有以下方法。</target>
        </trans-unit>
        <trans-unit id="0bf8846e541ccfe96d8f9b3763d0c53900c892ec" translate="yes" xml:space="preserve">
          <source>The class of the objects that are added to, removed from or cleared from the relation.</source>
          <target state="translated">从关系中添加、删除或清除的对象的类别。</target>
        </trans-unit>
        <trans-unit id="f291af4bd08e7621ceed5517aef1b3e3a73166cd" translate="yes" xml:space="preserve">
          <source>The class of the user that just logged in.</source>
          <target state="translated">刚刚登录的用户的等级。</target>
        </trans-unit>
        <trans-unit id="75007b032e36e422a861e56bec617e750279b503" translate="yes" xml:space="preserve">
          <source>The class that renders form widgets. It must implement &lt;a href=&quot;forms/renderers#low-level-widget-render-api&quot;&gt;the low-level render API&lt;/a&gt;.</source>
          <target state="translated">呈现表单窗口小部件的类。它必须实现&lt;a href=&quot;forms/renderers#low-level-widget-render-api&quot;&gt;低级渲染API&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="755f095068c56e6a90831130ba6e82e55fde9c7b" translate="yes" xml:space="preserve">
          <source>The class used to build the test suite. By default it is set to &lt;code&gt;unittest.TestSuite&lt;/code&gt;. This can be overridden if you wish to implement different logic for collecting tests.</source>
          <target state="translated">用于构建测试套件的类。默认情况下，它设置为 &lt;code&gt;unittest.TestSuite&lt;/code&gt; 。如果您希望实现不同的逻辑来收集测试，可以将其覆盖。</target>
        </trans-unit>
        <trans-unit id="169d4cc1ae64db2818559a2fd3aa3df3f82a804f" translate="yes" xml:space="preserve">
          <source>The class-level &lt;code&gt;atomic&lt;/code&gt; block described above allows the creation of initial data at the class level, once for the whole &lt;code&gt;TestCase&lt;/code&gt;. This technique allows for faster tests as compared to using &lt;code&gt;setUp()&lt;/code&gt;.</source>
          <target state="translated">上述的类级别 &lt;code&gt;atomic&lt;/code&gt; 块允许在整个 &lt;code&gt;TestCase&lt;/code&gt; 一次在类级别创建初始数据。与使用 &lt;code&gt;setUp()&lt;/code&gt; 相比，该技术允许更快的测试。</target>
        </trans-unit>
        <trans-unit id="3ccbde73445a4688dc1fe731a4568c247f557bd5" translate="yes" xml:space="preserve">
          <source>The class:</source>
          <target state="translated">该类。</target>
        </trans-unit>
        <trans-unit id="c30d58a3ceff31ff24b10b5795c224f23288d2d3" translate="yes" xml:space="preserve">
          <source>The classes defined in this module create database constraints. They are added in the model &lt;a href=&quot;options#django.db.models.Options.constraints&quot;&gt;&lt;code&gt;Meta.constraints&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">此模块中定义的类创建数据库约束。它们被添加到模型&lt;a href=&quot;options#django.db.models.Options.constraints&quot;&gt; &lt;code&gt;Meta.constraints&lt;/code&gt; &lt;/a&gt;选项中。</target>
        </trans-unit>
        <trans-unit id="ed9477ab351e298dcff6bdca6b2539ae345998a6" translate="yes" xml:space="preserve">
          <source>The classes documented below provide a way for users to use functions provided by the underlying database as annotations, aggregations, or filters in Django. Functions are also &lt;a href=&quot;expressions&quot;&gt;expressions&lt;/a&gt;, so they can be used and combined with other expressions like &lt;a href=&quot;querysets#aggregation-functions&quot;&gt;aggregate functions&lt;/a&gt;.</source>
          <target state="translated">下面记录的类为用户提供了一种使用底层数据库提供的功能作为Django中的注释，聚合或过滤器的方式。函数也是&lt;a href=&quot;expressions&quot;&gt;表达式&lt;/a&gt;，因此它们可以与&lt;a href=&quot;querysets#aggregation-functions&quot;&gt;聚合函数&lt;/a&gt;等其他表达式结合使用。</target>
        </trans-unit>
        <trans-unit id="03d8d4a21cbeb2373689907d93ed89429b6e744d" translate="yes" xml:space="preserve">
          <source>The cleaned data from the &lt;code&gt;form&lt;/code&gt; is available for string interpolation using the &lt;code&gt;%(field_name)s&lt;/code&gt; syntax. For ModelForms, if you need access to fields from the saved &lt;code&gt;object&lt;/code&gt; override the &lt;a href=&quot;#django.contrib.messages.views.SuccessMessageMixin.get_success_message&quot;&gt;&lt;code&gt;get_success_message()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">可以使用 &lt;code&gt;%(field_name)s&lt;/code&gt; 语法对 &lt;code&gt;form&lt;/code&gt; 已清理数据进行字符串插值。对于ModelForms，如果需要访问保存 &lt;code&gt;object&lt;/code&gt; 字段，请重写&lt;a href=&quot;#django.contrib.messages.views.SuccessMessageMixin.get_success_message&quot;&gt; &lt;code&gt;get_success_message()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="05168c9f9c8bac7466da082345be65c10d1eb53a" translate="yes" xml:space="preserve">
          <source>The cleaning process modifies the model instance passed to the &lt;code&gt;ModelForm&lt;/code&gt; constructor in various ways. For instance, any date fields on the model are converted into actual date objects. Failed validation may leave the underlying model instance in an inconsistent state and therefore it&amp;rsquo;s not recommended to reuse it.</source>
          <target state="translated">清理过程以各种方式修改传递给 &lt;code&gt;ModelForm&lt;/code&gt; 构造函数的模型实例。例如，模型上的任何日期字段都将转换为实际的日期对象。验证失败可能会使基础模型实例处于不一致状态，因此不建议重用它。</target>
        </trans-unit>
        <trans-unit id="84de12d7e0bb1ef32e52fc74373ef725f8c8c7ff" translate="yes" xml:space="preserve">
          <source>The clickjacking middleware and decorators provide easy-to-use protection against &lt;a href=&quot;https://en.wikipedia.org/wiki/Clickjacking&quot;&gt;clickjacking&lt;/a&gt;. This type of attack occurs when a malicious site tricks a user into clicking on a concealed element of another site which they have loaded in a hidden frame or iframe.</source>
          <target state="translated">clickjacking中间件和装饰器提供了易于使用的保护，以防止&lt;a href=&quot;https://en.wikipedia.org/wiki/Clickjacking&quot;&gt;clickjacking&lt;/a&gt;。当恶意站点诱使用户单击他们已加载到隐藏框架或iframe中的另一个站点的隐藏元素时，会发生这种类型的攻击。</target>
        </trans-unit>
        <trans-unit id="cb0884e94bca60201ac08c4e39d15908fc5430d7" translate="yes" xml:space="preserve">
          <source>The code above loads the &lt;code&gt;news/year_archive.html&lt;/code&gt; template.</source>
          <target state="translated">上面的代码加载了 &lt;code&gt;news/year_archive.html&lt;/code&gt; 模板。</target>
        </trans-unit>
        <trans-unit id="f24bc0a812b0ec647c48d4e1b3d00ab9937b67cf" translate="yes" xml:space="preserve">
          <source>The code above maps URL paths to Python callback functions (&amp;ldquo;views&amp;rdquo;). The path strings use parameter tags to &amp;ldquo;capture&amp;rdquo; values from the URLs. When a user requests a page, Django runs through each path, in order, and stops at the first one that matches the requested URL. (If none of them matches, Django calls a special-case 404 view.) This is blazingly fast, because the paths are compiled into regular expressions at load time.</source>
          <target state="translated">上面的代码将URL路径映射到Python回调函数（&amp;ldquo;视图&amp;rdquo;）。路径字符串使用参数标记来&amp;ldquo;捕获&amp;rdquo; URL中的值。当用户请求页面时，Django按顺序运行每个路径，并在与请求的URL匹配的第一个路径处停止。 （如果它们都不匹配，则Django会调用一个特殊情况的404视图。）这非常快，因为在加载时会将路径编译为正则表达式。</target>
        </trans-unit>
        <trans-unit id="46c1c12b0e18dce0441e64b6b3d2ad9f9259493f" translate="yes" xml:space="preserve">
          <source>The code and comments should be self-explanatory, but a few things deserve a mention:</source>
          <target state="translated">代码和注释应该是不言而喻的,但有几件事值得一提。</target>
        </trans-unit>
        <trans-unit id="f91452dd3f89261240824192dc632bf4474db175" translate="yes" xml:space="preserve">
          <source>The code below is equivalent to the code above:</source>
          <target state="translated">下面的代码相当于上面的代码。</target>
        </trans-unit>
        <trans-unit id="bc942bc7da1dff6c09b53018389efffa7a208a0f" translate="yes" xml:space="preserve">
          <source>The code for our &lt;code&gt;vote()&lt;/code&gt; view does have a small problem. It first gets the &lt;code&gt;selected_choice&lt;/code&gt; object from the database, then computes the new value of &lt;code&gt;votes&lt;/code&gt;, and then saves it back to the database. If two users of your website try to vote at &lt;em&gt;exactly the same time&lt;/em&gt;, this might go wrong: The same value, let&amp;rsquo;s say 42, will be retrieved for &lt;code&gt;votes&lt;/code&gt;. Then, for both users the new value of 43 is computed and saved, but 44 would be the expected value.</source>
          <target state="translated">我们的 &lt;code&gt;vote()&lt;/code&gt; 视图的代码确实有一个小问题。它首先从数据库中获取 &lt;code&gt;selected_choice&lt;/code&gt; 对象，然后计算新的 &lt;code&gt;votes&lt;/code&gt; 值，然后将其保存回数据库。如果您网站的两个用户尝试&lt;em&gt;在同一时间&lt;/em&gt;进行投票，则可能会出错：将会取相同的值（例如42）进行 &lt;code&gt;votes&lt;/code&gt; 。然后，对于两个用户，都会计算并保存新值43，但是44将是期望值。</target>
        </trans-unit>
        <trans-unit id="a3644b015cb23e9bc6437c53f1691c4635daa000" translate="yes" xml:space="preserve">
          <source>The code for this test may look as follows:</source>
          <target state="translated">这个测试的代码可能如下:</target>
        </trans-unit>
        <trans-unit id="40f8751633105fc0bc54b57a07b88b096758e297" translate="yes" xml:space="preserve">
          <source>The code lives in the &lt;code&gt;django.core.mail&lt;/code&gt; module.</source>
          <target state="translated">该代码位于 &lt;code&gt;django.core.mail&lt;/code&gt; 模块中。</target>
        </trans-unit>
        <trans-unit id="e141e436bbeb21b445a338d88a7888bc10bed390" translate="yes" xml:space="preserve">
          <source>The code provided on &lt;code&gt;Storage&lt;/code&gt; retains only alpha-numeric characters, periods and underscores from the original filename, removing everything else.</source>
          <target state="translated">&lt;code&gt;Storage&lt;/code&gt; 提供的代码仅保留原始文件名中的字母数字字符，句点和下划线，并删除所有其他内容。</target>
        </trans-unit>
        <trans-unit id="98dd10203f7b601a1d65c073a69d7058e9042a01" translate="yes" xml:space="preserve">
          <source>The collation order to use when creating the test database. This value is passed directly to the backend, so its format is backend-specific.</source>
          <target state="translated">创建测试数据库时要使用的整理顺序。这个值是直接传递给后端的,所以它的格式是后端特定的。</target>
        </trans-unit>
        <trans-unit id="b90bb6212b1abdc5ca2c67075c5291b0c51c857b" translate="yes" xml:space="preserve">
          <source>The collation setting for a column controls the order in which data is sorted as well as what strings compare as equal. It can be set on a database-wide level and also per-table and per-column. This is &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/charset.html&quot;&gt;documented thoroughly&lt;/a&gt; in the MySQL documentation. In all cases, you set the collation by directly manipulating the database tables; Django doesn&amp;rsquo;t provide a way to set this on the model definition.</source>
          <target state="translated">列的排序规则设置控制数据的排序顺序以及相等比较的字符串。可以在数据库范围内以及每个表和每个列上进行设置。这在MySQL文档中有&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/charset.html&quot;&gt;完整&lt;/a&gt;的记录。在所有情况下，您都可以通过直接操作数据库表来设置排序规则。 Django没有提供在模型定义上进行设置的方法。</target>
        </trans-unit>
        <trans-unit id="3eeda2585aac2dc08a21c32d4248e9129f9e0bb3" translate="yes" xml:space="preserve">
          <source>The color interpretation for the band, as an integer between 0and 16. If &lt;code&gt;as_string&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, the data type is returned as a string with the following possible values: &lt;code&gt;GCI_Undefined&lt;/code&gt;, &lt;code&gt;GCI_GrayIndex&lt;/code&gt;, &lt;code&gt;GCI_PaletteIndex&lt;/code&gt;, &lt;code&gt;GCI_RedBand&lt;/code&gt;, &lt;code&gt;GCI_GreenBand&lt;/code&gt;, &lt;code&gt;GCI_BlueBand&lt;/code&gt;, &lt;code&gt;GCI_AlphaBand&lt;/code&gt;, &lt;code&gt;GCI_HueBand&lt;/code&gt;, &lt;code&gt;GCI_SaturationBand&lt;/code&gt;, &lt;code&gt;GCI_LightnessBand&lt;/code&gt;, &lt;code&gt;GCI_CyanBand&lt;/code&gt;, &lt;code&gt;GCI_MagentaBand&lt;/code&gt;, &lt;code&gt;GCI_YellowBand&lt;/code&gt;, &lt;code&gt;GCI_BlackBand&lt;/code&gt;, &lt;code&gt;GCI_YCbCr_YBand&lt;/code&gt;, &lt;code&gt;GCI_YCbCr_CbBand&lt;/code&gt;, and &lt;code&gt;GCI_YCbCr_CrBand&lt;/code&gt;. &lt;code&gt;GCI_YCbCr_CrBand&lt;/code&gt; also represents &lt;code&gt;GCI_Max&lt;/code&gt; because both correspond to the integer 16, but only &lt;code&gt;GCI_YCbCr_CrBand&lt;/code&gt; is returned as a string.</source>
          <target state="translated">频段的颜色解释，为0到16之间的整数。如果 &lt;code&gt;as_string&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ，则以字符串形式返回数据类型，并具有以下可能的值： &lt;code&gt;GCI_Undefined&lt;/code&gt; ， &lt;code&gt;GCI_GrayIndex&lt;/code&gt; ， &lt;code&gt;GCI_PaletteIndex&lt;/code&gt; ， &lt;code&gt;GCI_RedBand&lt;/code&gt; ， &lt;code&gt;GCI_GreenBand&lt;/code&gt; ， &lt;code&gt;GCI_BlueBand&lt;/code&gt; ， &lt;code&gt;GCI_AlphaBand&lt;/code&gt; ， &lt;code&gt;GCI_HueBand&lt;/code&gt; ， &lt;code&gt;GCI_SaturationBand&lt;/code&gt; ， &lt;code&gt;GCI_LightnessBand&lt;/code&gt; ， &lt;code&gt;GCI_CyanBand&lt;/code&gt; ， &lt;code&gt;GCI_MagentaBand&lt;/code&gt; ， &lt;code&gt;GCI_YellowBand&lt;/code&gt; ， &lt;code&gt;GCI_BlackBand&lt;/code&gt; ， &lt;code&gt;GCI_YCbCr_YBand&lt;/code&gt; ， &lt;code&gt;GCI_YCbCr_CbBand&lt;/code&gt; 和 &lt;code&gt;GCI_YCbCr_CrBand&lt;/code&gt; 。 &lt;code&gt;GCI_YCbCr_CrBand&lt;/code&gt; 也表示 &lt;code&gt;GCI_Max&lt;/code&gt; ,因为它们都对应于整数16，但是只有 &lt;code&gt;GCI_YCbCr_CrBand&lt;/code&gt; 作为字符串返回。</target>
        </trans-unit>
        <trans-unit id="ad09a70dacbadcdfce005c2c0b886f87ef1a6e92" translate="yes" xml:space="preserve">
          <source>The colors used for syntax highlighting can be customized. Django ships with three color palettes:</source>
          <target state="translated">语法高亮的颜色是可以自定义的。Django有三种调色板。</target>
        </trans-unit>
        <trans-unit id="2a922802028535811239279e39be84ceab6b7530" translate="yes" xml:space="preserve">
          <source>The column type, which tells the database what kind of data to store (e.g. &lt;code&gt;INTEGER&lt;/code&gt;, &lt;code&gt;VARCHAR&lt;/code&gt;, &lt;code&gt;TEXT&lt;/code&gt;).</source>
          <target state="translated">列类型，它告诉数据库要存储哪种数据（例如 &lt;code&gt;INTEGER&lt;/code&gt; ， &lt;code&gt;VARCHAR&lt;/code&gt; ， &lt;code&gt;TEXT&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="9e51ff0488cd65962f4119380c63a3ec8a0b8be4" translate="yes" xml:space="preserve">
          <source>The command &lt;code&gt;python manage.py diffsettings&lt;/code&gt; displays differences between the current settings file and Django&amp;rsquo;s default settings.</source>
          <target state="translated">&lt;code&gt;python manage.py diffsettings&lt;/code&gt; 命令显示当前设置文件和Django默认设置之间的差异。</target>
        </trans-unit>
        <trans-unit id="b80dfb4d69f2901b7da6bebabcfbace6e9333454" translate="yes" xml:space="preserve">
          <source>The command adds these options:</source>
          <target state="translated">该命令增加了这些选项。</target>
        </trans-unit>
        <trans-unit id="ebdfcb96927ee87fc75a054180cf816f17324db5" translate="yes" xml:space="preserve">
          <source>The command produces the following output, which may be copied directly into the &lt;code&gt;models.py&lt;/code&gt; of a GeoDjango application:</source>
          <target state="translated">该命令将产生以下输出，可以将其直接复制到GeoDjango应用程序的 &lt;code&gt;models.py&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="eb002894c488e2e7a65e11ca5cc9d4bfa9078340" translate="yes" xml:space="preserve">
          <source>The command that backs all this is &lt;a href=&quot;../ref/django-admin#django-admin-squashmigrations&quot;&gt;&lt;code&gt;squashmigrations&lt;/code&gt;&lt;/a&gt; - pass it the app label and migration name you want to squash up to, and it&amp;rsquo;ll get to work:</source>
          <target state="translated">支持这一切的命令是&lt;a href=&quot;../ref/django-admin#django-admin-squashmigrations&quot;&gt; &lt;code&gt;squashmigrations&lt;/code&gt; -向其&lt;/a&gt;传递您要压扁的应用程序标签和迁移名称，它将开始工作：</target>
        </trans-unit>
        <trans-unit id="9c020a948db5a02e51e5c1ba0d47dae01ba33dd3" translate="yes" xml:space="preserve">
          <source>The command-line examples throughout this document use &lt;code&gt;django-admin&lt;/code&gt; to be consistent, but any example can use &lt;code&gt;manage.py&lt;/code&gt; or &lt;code&gt;python -m django&lt;/code&gt; just as well.</source>
          <target state="translated">本文档中的命令行示例使用 &lt;code&gt;django-admin&lt;/code&gt; 来保持一致，但是任何示例都可以使用 &lt;code&gt;manage.py&lt;/code&gt; 或 &lt;code&gt;python -m django&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd2feb2c94af08b408eaec6dbef069506756f05b" translate="yes" xml:space="preserve">
          <source>The comment will then appear in the resulting &lt;code&gt;.po&lt;/code&gt; file associated with the translatable construct located below it and should also be displayed by most translation tools.</source>
          <target state="translated">然后，注释将出现在与位于其下方的可翻译结构关联的结果 &lt;code&gt;.po&lt;/code&gt; 文件中，并且大多数翻译工具也应显示该注释。</target>
        </trans-unit>
        <trans-unit id="6bfad5ebbd59f63638f9c18579b4ed5fb04ccdb6" translate="yes" xml:space="preserve">
          <source>The common API doesn&amp;rsquo;t have an equivalent concept. Context data is passed in a plain &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; and the current &lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; is passed separately if needed.</source>
          <target state="translated">通用API没有等效的概念。上下文数据在一个普通的通过&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;和当前&lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;如果需要被单独地通过。</target>
        </trans-unit>
        <trans-unit id="4e2f7d52a53a517dda3e3641c8525ab8c2bfbd8d" translate="yes" xml:space="preserve">
          <source>The comparison of the contents of &lt;code&gt;qs&lt;/code&gt; and &lt;code&gt;values&lt;/code&gt; is performed by applying &lt;code&gt;transform&lt;/code&gt; to &lt;code&gt;qs&lt;/code&gt;. By default, this means that the &lt;code&gt;repr()&lt;/code&gt; of each value in &lt;code&gt;qs&lt;/code&gt; is compared to the &lt;code&gt;values&lt;/code&gt;. Any other callable can be used if &lt;code&gt;repr()&lt;/code&gt; doesn&amp;rsquo;t provide a unique or helpful comparison.</source>
          <target state="translated">通过将 &lt;code&gt;transform&lt;/code&gt; 应用于 &lt;code&gt;qs&lt;/code&gt; 来比较 &lt;code&gt;qs&lt;/code&gt; 和 &lt;code&gt;values&lt;/code&gt; 的内容。默认情况下，这意味着将 &lt;code&gt;qs&lt;/code&gt; 中每个值的 &lt;code&gt;repr()&lt;/code&gt; 与 &lt;code&gt;values&lt;/code&gt; 进行比较。如果 &lt;code&gt;repr()&lt;/code&gt; 没有提供唯一或有用的比较，则可以使用任何其他可调用对象。</target>
        </trans-unit>
        <trans-unit id="a1c1b918eb4886e1878f6b407c27700844bba2a8" translate="yes" xml:space="preserve">
          <source>The comparison of the contents of &lt;code&gt;qs&lt;/code&gt; and &lt;code&gt;values&lt;/code&gt; is performed using the function &lt;code&gt;transform&lt;/code&gt;; by default, this means that the &lt;code&gt;repr()&lt;/code&gt; of each value is compared. Any other callable can be used if &lt;code&gt;repr()&lt;/code&gt; doesn&amp;rsquo;t provide a unique or helpful comparison.</source>
          <target state="translated">使用函数 &lt;code&gt;transform&lt;/code&gt; 比较 &lt;code&gt;qs&lt;/code&gt; 和 &lt;code&gt;values&lt;/code&gt; 的内容; 默认情况下，这意味着将比较每个值的 &lt;code&gt;repr()&lt;/code&gt; 。如果 &lt;code&gt;repr()&lt;/code&gt; 没有提供唯一或有用的比较，则可以使用任何其他可调用对象。</target>
        </trans-unit>
        <trans-unit id="1a91a5510b22b7501233e7fa3573651a27e2c669" translate="yes" xml:space="preserve">
          <source>The comparison operators cannot be &amp;lsquo;chained&amp;rsquo; like in Python or in mathematical notation. For example, instead of using:</source>
          <target state="translated">比较运算符不能像Python或数学符号那样被&amp;ldquo;链接&amp;rdquo;。例如，代替使用：</target>
        </trans-unit>
        <trans-unit id="fed46b6d6e53306b5501edbe2ad2c37a021c6b97" translate="yes" xml:space="preserve">
          <source>The compilation function &amp;ndash; a Python function (not the name of the function as a string).</source>
          <target state="translated">编译函数&amp;ndash; Python函数（不是字符串形式的函数名）。</target>
        </trans-unit>
        <trans-unit id="c432829c2360e91a30da4cee98de39816672c670" translate="yes" xml:space="preserve">
          <source>The concept is very similar to messages from the &lt;a href=&quot;../ref/contrib/messages&quot;&gt;message framework&lt;/a&gt; or the &lt;a href=&quot;logging&quot;&gt;logging framework&lt;/a&gt;. Messages are tagged with a &lt;code&gt;level&lt;/code&gt; indicating the severity of the message.</source>
          <target state="translated">这个概念与来自&lt;a href=&quot;../ref/contrib/messages&quot;&gt;消息框架&lt;/a&gt;或&lt;a href=&quot;logging&quot;&gt;日志记录框架&lt;/a&gt;的消息非常相似。消息被标记有指示消息严重性的 &lt;code&gt;level&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="549ccf14ad7d65404de2e82804d6dcffdfd6e2a2" translate="yes" xml:space="preserve">
          <source>The concepts of tags and filters exist both in the Django template language and in Jinja2 but they&amp;rsquo;re used differently. Since Jinja2 supports passing arguments to callables in templates, many features that require a template tag or filter in Django templates can be achieved by calling a function in Jinja2 templates, as shown in the example above. Jinja2&amp;rsquo;s global namespace removes the need for template context processors. The Django template language doesn&amp;rsquo;t have an equivalent of Jinja2 tests.</source>
          <target state="translated">标记和过滤器的概念在Django模板语言和Jinja2中都存在，但是用法不同。由于Jinja2支持将参数传递给模板中的可调用对象，因此可以通过在Jinja2模板中调用函数来实现许多需要Django模板中的模板标签或过滤器的功能。Jinja2的全局名称空间消除了对模板上下文处理器的需求。Django模板语言没有等效的Jinja2测试。</target>
        </trans-unit>
        <trans-unit id="e0b2cf1bb0de5081862f14c0f39c8abe579eb3c6" translate="yes" xml:space="preserve">
          <source>The conditional expression classes</source>
          <target state="translated">条件表达式类</target>
        </trans-unit>
        <trans-unit id="88433b473f828a40bacb10c9b4d1a00de9d89d65" translate="yes" xml:space="preserve">
          <source>The constructor creates several &lt;a href=&quot;#django.forms.Select&quot;&gt;&lt;code&gt;Select&lt;/code&gt;&lt;/a&gt; widgets in a list. The &lt;code&gt;super()&lt;/code&gt; method uses this list to setup the widget.</source>
          <target state="translated">构造函数在列表中创建几个&lt;a href=&quot;#django.forms.Select&quot;&gt; &lt;code&gt;Select&lt;/code&gt; &lt;/a&gt;小部件。该 &lt;code&gt;super()&lt;/code&gt; 方法使用此列表来设置窗口小部件。</target>
        </trans-unit>
        <trans-unit id="c354e7724254d0140cc11fd6b89752b23740e1fc" translate="yes" xml:space="preserve">
          <source>The constructor doesn&amp;rsquo;t take any arguments and no content should be added to this response. Use this to designate that a page hasn&amp;rsquo;t been modified since the user&amp;rsquo;s last request (status code 304).</source>
          <target state="translated">构造函数不接受任何参数，因此不应在此响应中添加任何内容。使用它来指定自用户的上一个请求以来（状态代码304）尚未修改页面。</target>
        </trans-unit>
        <trans-unit id="0d7b4750536ced9eb610dec817e1cd0c20262168" translate="yes" xml:space="preserve">
          <source>The constructor for &lt;code&gt;DataSource&lt;/code&gt; only requires one parameter: the path of the file you want to read. However, OGR also supports a variety of more complex data sources, including databases, that may be accessed by passing a special name string instead of a path. For more information, see the &lt;a href=&quot;https://gdal.org/drivers/vector/&quot;&gt;OGR Vector Formats&lt;/a&gt; documentation. The &lt;a href=&quot;#django.contrib.gis.gdal.DataSource.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; property of a &lt;code&gt;DataSource&lt;/code&gt; instance gives the OGR name of the underlying data source that it is using.</source>
          <target state="translated">&lt;code&gt;DataSource&lt;/code&gt; 的构造函数仅需要一个参数：要读取的文件的路径。但是，OGR还支持各种更复杂的数据源，包括数据库，可以通过传递特殊的名称字符串而不是路径来访问它们。有关更多信息，请参见&lt;a href=&quot;https://gdal.org/drivers/vector/&quot;&gt;OGR矢量格式&lt;/a&gt;文档。 &lt;code&gt;DataSource&lt;/code&gt; 实例的&lt;a href=&quot;#django.contrib.gis.gdal.DataSource.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;属性提供其正在使用的基础数据源的OGR名称。</target>
        </trans-unit>
        <trans-unit id="0eae3807f099dc609089e2fa4d06ea8db870ffe8" translate="yes" xml:space="preserve">
          <source>The constructor for &lt;code&gt;GDALRaster&lt;/code&gt; accepts two parameters. The first parameter defines the raster source, and the second parameter defines if a raster should be opened in write mode. For newly-created rasters, the second parameter is ignored and the new raster is always created in write mode.</source>
          <target state="translated">&lt;code&gt;GDALRaster&lt;/code&gt; 的构造函数接受两个参数。第一个参数定义栅格源，第二个参数定义是否应在写入模式下打开栅格。对于新创建的栅格，第二个参数将被忽略，并且新栅格始终以写入模式创建。</target>
        </trans-unit>
        <trans-unit id="bc598c12d02dedfb319c16bce2278d396df2b2eb" translate="yes" xml:space="preserve">
          <source>The constructor of &lt;code&gt;django.template.Context&lt;/code&gt; takes an optional argument &amp;mdash; a dictionary mapping variable names to variable values.</source>
          <target state="translated">&lt;code&gt;django.template.Context&lt;/code&gt; 的构造函数带有一个可选参数&amp;mdash;将变量名称映射为变量值的字典。</target>
        </trans-unit>
        <trans-unit id="2164eab6d4811fad250d2bb1ccbaa3d9c8003615" translate="yes" xml:space="preserve">
          <source>The content body is less than 200 bytes long.</source>
          <target state="translated">内容主体长度小于200字节。</target>
        </trans-unit>
        <trans-unit id="470e37da69adfa1e28fc63a006dbca1bae1fa479" translate="yes" xml:space="preserve">
          <source>The content field may optionally be left blank if you prefer to put your content in a custom template.</source>
          <target state="translated">如果您想把您的内容放在一个自定义模板中,内容字段可以选择留空。</target>
        </trans-unit>
        <trans-unit id="db675219db37343c2bae99df7a80d9928af81076" translate="yes" xml:space="preserve">
          <source>The content type to use for the response. &lt;code&gt;content_type&lt;/code&gt; is passed as a keyword argument to &lt;code&gt;response_class&lt;/code&gt;. Default is &lt;code&gt;None&lt;/code&gt; &amp;ndash; meaning that Django uses &lt;code&gt;'text/html'&lt;/code&gt;.</source>
          <target state="translated">用于响应的内容类型。 &lt;code&gt;content_type&lt;/code&gt; 作为关键字参数传递给 &lt;code&gt;response_class&lt;/code&gt; 。默认值为 &lt;code&gt;None&lt;/code&gt; &amp;ndash;意味着Django使用 &lt;code&gt;'text/html'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5835dca25f13fc5581c883182116aea3ab44a011" translate="yes" xml:space="preserve">
          <source>The content-type header uploaded with the file (e.g. &lt;em&gt;text/plain&lt;/em&gt; or &lt;em&gt;application/pdf&lt;/em&gt;). Like any data supplied by the user, you shouldn&amp;rsquo;t trust that the uploaded file is actually this type. You&amp;rsquo;ll still need to validate that the file contains the content that the content-type header claims &amp;ndash; &amp;ldquo;trust but verify.&amp;rdquo;</source>
          <target state="translated">随文件上传的内容类型标题（例如&lt;em&gt;text / plain&lt;/em&gt;或&lt;em&gt;application / pdf&lt;/em&gt;）。像用户提供的任何数据一样，您不应该相信上传的文件实际上就是这种类型。您仍然需要验证文件是否包含内容类型标头声明的内容&amp;ndash;&amp;ldquo;信任但验证&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="8c7de1a43c36e821a66909e1c15a46f2cee3281c" translate="yes" xml:space="preserve">
          <source>The contenttypes framework</source>
          <target state="translated">内容类型框架</target>
        </trans-unit>
        <trans-unit id="05e4d324241f65f889809ed3d94bf0710f1f7942" translate="yes" xml:space="preserve">
          <source>The contenttypes framework is included in the default &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; list created by &lt;code&gt;django-admin startproject&lt;/code&gt;, but if you&amp;rsquo;ve removed it or if you manually set up your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; list, you can enable it by adding &lt;code&gt;'django.contrib.contenttypes'&lt;/code&gt; to your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">内容类型框架包含在 &lt;code&gt;django-admin startproject&lt;/code&gt; 创建的默认&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;列表中，但是如果您将其删除或手动设置&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;列表，则可以通过将 &lt;code&gt;'django.contrib.contenttypes'&lt;/code&gt; 添加到&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;来启用它设置。</target>
        </trans-unit>
        <trans-unit id="8ac06751752a9579736538d702b5eed196af15a9" translate="yes" xml:space="preserve">
          <source>The context data to be used when rendering the template. It must be a &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">渲染模板时要使用的上下文数据。它必须是一个&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9c13fd4afc732549f974b3c9349753bf740123e7" translate="yes" xml:space="preserve">
          <source>The context processor also provides a &lt;code&gt;DEFAULT_MESSAGE_LEVELS&lt;/code&gt; variable which is a mapping of the message level names to their numeric value:</source>
          <target state="translated">上下文处理器还提供 &lt;code&gt;DEFAULT_MESSAGE_LEVELS&lt;/code&gt; 变量，该变量是消息级别名称与其数值的映射：</target>
        </trans-unit>
        <trans-unit id="234fb0df99df952c3684db102132db150237ee9e" translate="yes" xml:space="preserve">
          <source>The convention is not to capitalize the first letter of the &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.verbose_name&quot;&gt;&lt;code&gt;verbose_name&lt;/code&gt;&lt;/a&gt;. Django will automatically capitalize the first letter where it needs to.</source>
          <target state="translated">约定不要将&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.verbose_name&quot;&gt; &lt;code&gt;verbose_name&lt;/code&gt; &lt;/a&gt;的首字母大写。Django会在需要的地方自动将首字母大写。</target>
        </trans-unit>
        <trans-unit id="bf14e19437b9aeb95afe1f4da20fc4ae721c81ea" translate="yes" xml:space="preserve">
          <source>The correct choice of comparison functions here depends on your particular data set, for example the language(s) used and the type of text being searched. All of the examples we&amp;rsquo;ve seen are on short strings where the user is likely to enter something close (by varying definitions) to the source data.</source>
          <target state="translated">此处比较功能的正确选择取决于您的特定数据集，例如所使用的语言和所搜索文本的类型。我们看到的所有示例都在短字符串上，在此字符串中，用户可能会（通过不同的定义）输入接近源数据的内容。</target>
        </trans-unit>
        <trans-unit id="76284e00e8cf9b7966d97c110eeb914acef53fc7" translate="yes" xml:space="preserve">
          <source>The correct way to catch database errors is around an &lt;code&gt;atomic&lt;/code&gt; block as shown above. If necessary, add an extra &lt;code&gt;atomic&lt;/code&gt; block for this purpose. This pattern has another advantage: it delimits explicitly which operations will be rolled back if an exception occurs.</source>
          <target state="translated">捕获数据库错误的正确方法是围绕 &lt;code&gt;atomic&lt;/code&gt; 块，如上所示。如有必要，为此添加一个额外的 &lt;code&gt;atomic&lt;/code&gt; 块。这种模式的另一个优点是：它明确界定了发生异常时将回滚哪些操作。</target>
        </trans-unit>
        <trans-unit id="1f9086cc318bc5e173a9ec495b70bdcb43af97ee" translate="yes" xml:space="preserve">
          <source>The corresponding &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; tags around the labels. An HTML &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; tag designates which label text is associated with which form element. This small enhancement makes forms more usable and more accessible to assistive devices. It&amp;rsquo;s always a good idea to use &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; tags.</source>
          <target state="translated">标签周围的相应 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 标签。HTML &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 标记指定哪个标签文本与哪个表单元素相关联。这种小的增强使表格更易于使用，并且更易于辅助设备使用。使用 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 标签总是一个好主意。</target>
        </trans-unit>
        <trans-unit id="e868f50cf9b955c6a3a257a35cb8867c9d3988f1" translate="yes" xml:space="preserve">
          <source>The corresponding algorithm names are:</source>
          <target state="translated">相应的算法名称为:</target>
        </trans-unit>
        <trans-unit id="be57e0498aa6711170f0e9b968277292780a5351" translate="yes" xml:space="preserve">
          <source>The count argument is an integer indicating the number of times the template should be rendered. Default is &lt;code&gt;None&lt;/code&gt;, meaning that the template should be rendered one or more times.</source>
          <target state="translated">count参数是一个整数，指示应渲染模板的次数。默认值为 &lt;code&gt;None&lt;/code&gt; ，这意味着模板应渲染一次或多次。</target>
        </trans-unit>
        <trans-unit id="676683ffd241442533cedc1fa084bb636ddfc4ce" translate="yes" xml:space="preserve">
          <source>The counterpoint to writing your &lt;code&gt;__init__()&lt;/code&gt; method is writing the &lt;a href=&quot;../ref/models/fields#django.db.models.Field.deconstruct&quot;&gt;&lt;code&gt;deconstruct()&lt;/code&gt;&lt;/a&gt; method. It&amp;rsquo;s used during &lt;a href=&quot;../topics/migrations&quot;&gt;model migrations&lt;/a&gt; to tell Django how to take an instance of your new field and reduce it to a serialized form - in particular, what arguments to pass to &lt;code&gt;__init__()&lt;/code&gt; to re-create it.</source>
          <target state="translated">编写 &lt;code&gt;__init__()&lt;/code&gt; 方法的对点是编写&lt;a href=&quot;../ref/models/fields#django.db.models.Field.deconstruct&quot;&gt; &lt;code&gt;deconstruct()&lt;/code&gt; &lt;/a&gt;方法。在&lt;a href=&quot;../topics/migrations&quot;&gt;模型迁移&lt;/a&gt;期间，它用于告诉Django如何获取新字段的实例并将其简化为序列化形式-特别是传递给 &lt;code&gt;__init__()&lt;/code&gt; 以重新创建它。</target>
        </trans-unit>
        <trans-unit id="2ee8c481b2898ae8434d6313d56d583f06930d81" translate="yes" xml:space="preserve">
          <source>The creation module of the database backend also provides some utilities that can be useful during testing.</source>
          <target state="translated">数据库后台的创建模块还提供了一些在测试过程中有用的实用程序。</target>
        </trans-unit>
        <trans-unit id="27c67f5320bc6224cfdb7c1c07cc5374c7ae77a4" translate="yes" xml:space="preserve">
          <source>The creation-order dependencies of the database. See the documentation on &lt;a href=&quot;../topics/testing/advanced#topics-testing-creation-dependencies&quot;&gt;controlling the creation order of test databases&lt;/a&gt; for details.</source>
          <target state="translated">数据库的创建顺序依赖性。有关详细信息，请参见有关&lt;a href=&quot;../topics/testing/advanced#topics-testing-creation-dependencies&quot;&gt;控制测试数据库的创建顺序&lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="78d7917d9faae66855cbfd322829e7c779f54066" translate="yes" xml:space="preserve">
          <source>The current &lt;a href=&quot;../request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">当前的&lt;a href=&quot;../request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="f18defbb524b282098621bf1a29b83d998e3e40f" translate="yes" xml:space="preserve">
          <source>The current &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">当前的&lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1160e7be43a801bc82a4b53afea1ec9d68c8863b" translate="yes" xml:space="preserve">
          <source>The current iteration of the loop (0-indexed)</source>
          <target state="translated">循环的当前迭代(0-索引)。</target>
        </trans-unit>
        <trans-unit id="6bdad6fa0a0125769d10c429d4127b6e9b086a00" translate="yes" xml:space="preserve">
          <source>The current iteration of the loop (1-indexed)</source>
          <target state="translated">循环的当前迭代(1-indexed)</target>
        </trans-unit>
        <trans-unit id="77f3d67f0992528479762165e112bb2677c700db" translate="yes" xml:space="preserve">
          <source>The current rendered value of the response content, using the current template and context data.</source>
          <target state="translated">响应内容的当前渲染值,使用当前模板和上下文数据。</target>
        </trans-unit>
        <trans-unit id="2d5816e6b51fc7f53459dd7a68806e3abc020987" translate="yes" xml:space="preserve">
          <source>The current state of Python packaging is a bit muddled with various tools. For this tutorial, we&amp;rsquo;re going to use &lt;a href=&quot;https://pypi.org/project/setuptools/&quot;&gt;setuptools&lt;/a&gt; to build our package. It&amp;rsquo;s the recommended packaging tool (merged with the &lt;code&gt;distribute&lt;/code&gt; fork). We&amp;rsquo;ll also be using &lt;a href=&quot;https://pypi.org/project/pip/&quot;&gt;pip&lt;/a&gt; to install and uninstall it. You should install these two packages now. If you need help, you can refer to &lt;a href=&quot;../topics/install#installing-official-release&quot;&gt;how to install Django with pip&lt;/a&gt;. You can install &lt;code&gt;setuptools&lt;/code&gt; the same way.</source>
          <target state="translated">Python打包的当前状态与各种工具混为一谈。对于本教程，我们将使用&lt;a href=&quot;https://pypi.org/project/setuptools/&quot;&gt;setuptools&lt;/a&gt;来构建我们的包。这是推荐的包装工具（与 &lt;code&gt;distribute&lt;/code&gt; 叉合并）。我们还将使用&lt;a href=&quot;https://pypi.org/project/pip/&quot;&gt;pip&lt;/a&gt;来安装和卸载它。您应该立即安装这两个软件包。如果需要帮助，可以参考&lt;a href=&quot;../topics/install#installing-official-release&quot;&gt;如何使用pip安装Django&lt;/a&gt;。您可以以相同方式安装 &lt;code&gt;setuptools&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58a08c53207620f40ef4087879bd2f7158937901" translate="yes" xml:space="preserve">
          <source>The current time zone is the equivalent of the current &lt;a href=&quot;index#term-locale-name&quot;&gt;locale&lt;/a&gt; for translations. However, there&amp;rsquo;s no equivalent of the &lt;code&gt;Accept-Language&lt;/code&gt; HTTP header that Django could use to determine the user&amp;rsquo;s time zone automatically. Instead, Django provides &lt;a href=&quot;../../ref/utils#time-zone-selection-functions&quot;&gt;time zone selection functions&lt;/a&gt;. Use them to build the time zone selection logic that makes sense for you.</source>
          <target state="translated">当前时区相当于当前翻译的&lt;a href=&quot;index#term-locale-name&quot;&gt;语言环境&lt;/a&gt;。但是，没有等效的Django可用于自动确定用户时区的 &lt;code&gt;Accept-Language&lt;/code&gt; HTTP标头。相反，Django提供了&lt;a href=&quot;../../ref/utils#time-zone-selection-functions&quot;&gt;时区选择功能&lt;/a&gt;。使用它们来构建对您有意义的时区选择逻辑。</target>
        </trans-unit>
        <trans-unit id="d23ff7c7f68a407084d00f01afe6c15283d21f45" translate="yes" xml:space="preserve">
          <source>The current version of Django doesn&amp;rsquo;t support Python 2.7. Get Python 3 at &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;Python&amp;rsquo;s download page&lt;/a&gt; or with your operating system&amp;rsquo;s package manager.</source>
          <target state="translated">当前版本的Django不支持Python 2.7。在&lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;Python的下载页面&lt;/a&gt;或操作系统的软件包管理器中获取Python 3 。</target>
        </trans-unit>
        <trans-unit id="3476d04eaf5286941daa6863680a2594d54f758a" translate="yes" xml:space="preserve">
          <source>The currently logged-in user and their permissions are made available in the &lt;a href=&quot;../../ref/templates/api&quot;&gt;template context&lt;/a&gt; when you use &lt;a href=&quot;../../ref/templates/api#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;../../ref/templates/api#django.template.RequestContext&quot;&gt; &lt;code&gt;RequestContext&lt;/code&gt; &lt;/a&gt;时，可以在&lt;a href=&quot;../../ref/templates/api&quot;&gt;模板上下文中&lt;/a&gt;使用当前登录的用户及其权限。</target>
        </trans-unit>
        <trans-unit id="0f82cde19a9fcc9d37d62f904d3caefd5111f1d8" translate="yes" xml:space="preserve">
          <source>The currently logged-in user&amp;rsquo;s permissions are stored in the template variable &lt;code&gt;{{ perms }}&lt;/code&gt;. This is an instance of &lt;code&gt;django.contrib.auth.context_processors.PermWrapper&lt;/code&gt;, which is a template-friendly proxy of permissions.</source>
          <target state="translated">当前登录用户的权限存储在模板变量 &lt;code&gt;{{ perms }}&lt;/code&gt; 。这是 &lt;code&gt;django.contrib.auth.context_processors.PermWrapper&lt;/code&gt; 的实例，它是模板友好的权限代理。</target>
        </trans-unit>
        <trans-unit id="ed04acb21d2826ea5acc66c65bae1007aab057c0" translate="yes" xml:space="preserve">
          <source>The custom lookup above is great, but in some cases you may want to be able to chain lookups together. For example, let&amp;rsquo;s suppose we are building an application where we want to make use of the &lt;code&gt;abs()&lt;/code&gt; operator. We have an &lt;code&gt;Experiment&lt;/code&gt; model which records a start value, end value, and the change (start - end). We would like to find all experiments where the change was equal to a certain amount (&lt;code&gt;Experiment.objects.filter(change__abs=27)&lt;/code&gt;), or where it did not exceed a certain amount (&lt;code&gt;Experiment.objects.filter(change__abs__lt=27)&lt;/code&gt;).</source>
          <target state="translated">上面的自定义查找很棒，但是在某些情况下，您可能希望能够将查找链接在一起。例如，假设我们正在构建一个要使用 &lt;code&gt;abs()&lt;/code&gt; 运算符的应用程序。我们有一个 &lt;code&gt;Experiment&lt;/code&gt; 模型，该模型记录一个开始值，结束值和更改（开始-结束）。我们想找到所有变化等于某个值的 &lt;code&gt;Experiment.objects.filter(change__abs=27)&lt;/code&gt; （Experiment.objects.filter（change__abs = 27）），或者变化不超过某个值的 &lt;code&gt;Experiment.objects.filter(change__abs__lt=27)&lt;/code&gt; ） 。</target>
        </trans-unit>
        <trans-unit id="25e462bbe1e5e31788f421390d5772492a2c38c7" translate="yes" xml:space="preserve">
          <source>The data migration might look something like:</source>
          <target state="translated">数据迁移可能是这样的:</target>
        </trans-unit>
        <trans-unit id="ad2fce352218fcf551224af5c25f7a9ca59ddd03" translate="yes" xml:space="preserve">
          <source>The data type contained in the band, as an integer constant between 0 (Unknown) and 11. If &lt;code&gt;as_string&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, the data type is returned as a string with the following possible values: &lt;code&gt;GDT_Unknown&lt;/code&gt;, &lt;code&gt;GDT_Byte&lt;/code&gt;, &lt;code&gt;GDT_UInt16&lt;/code&gt;, &lt;code&gt;GDT_Int16&lt;/code&gt;, &lt;code&gt;GDT_UInt32&lt;/code&gt;, &lt;code&gt;GDT_Int32&lt;/code&gt;, &lt;code&gt;GDT_Float32&lt;/code&gt;, &lt;code&gt;GDT_Float64&lt;/code&gt;, &lt;code&gt;GDT_CInt16&lt;/code&gt;, &lt;code&gt;GDT_CInt32&lt;/code&gt;, &lt;code&gt;GDT_CFloat32&lt;/code&gt;, and &lt;code&gt;GDT_CFloat64&lt;/code&gt;.</source>
          <target state="translated">带中包含的数据类型，为0（未知）和11之间的整数常量。如果 &lt;code&gt;as_string&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ，则将数据类型作为字符串返回，并具有以下可能的值： &lt;code&gt;GDT_Unknown&lt;/code&gt; ， &lt;code&gt;GDT_Byte&lt;/code&gt; ， &lt;code&gt;GDT_UInt16&lt;/code&gt; ， &lt;code&gt;GDT_Int16&lt;/code&gt; ， &lt;code&gt;GDT_UInt32&lt;/code&gt; ， &lt;code&gt;GDT_Int32&lt;/code&gt; ， &lt;code&gt;GDT_Float32&lt;/code&gt; ， &lt;code&gt;GDT_Float64&lt;/code&gt; ， &lt;code&gt;GDT_CInt16&lt;/code&gt; ， &lt;code&gt;GDT_CInt32&lt;/code&gt; ， &lt;code&gt;GDT_CFloat32&lt;/code&gt; 和 &lt;code&gt;GDT_CFloat64&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d95eeae5ab8d781cf0f996fad262568ffa0c8a8" translate="yes" xml:space="preserve">
          <source>The data you return will get fed into the subsequent upload handlers&amp;rsquo; &lt;code&gt;receive_data_chunk&lt;/code&gt; methods. In this way, one handler can be a &amp;ldquo;filter&amp;rdquo; for other handlers.</source>
          <target state="translated">您返回的数据将被馈送到后续上传处理程序的 &lt;code&gt;receive_data_chunk&lt;/code&gt; 方法中。这样，一个处理程序可以成为其他处理程序的&amp;ldquo;过滤器&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c06dcd3a54eadeabfa5fc71f941fe35d32da63cf" translate="yes" xml:space="preserve">
          <source>The database API supports about two dozen lookup types; a complete reference can be found in the &lt;a href=&quot;../../ref/models/querysets#field-lookups&quot;&gt;field lookup reference&lt;/a&gt;. To give you a taste of what&amp;rsquo;s available, here&amp;rsquo;s some of the more common lookups you&amp;rsquo;ll probably use:</source>
          <target state="translated">数据库API支持大约二十种查找类型。完整的参考可以在&lt;a href=&quot;../../ref/models/querysets#field-lookups&quot;&gt;字段查找参考中找到&lt;/a&gt;。为了让您了解可用的功能，以下是您可能会使用的一些更常见的查询：</target>
        </trans-unit>
        <trans-unit id="cd51927fe60291aa96713c14a10084b2030a7122" translate="yes" xml:space="preserve">
          <source>The database alias being used.</source>
          <target state="translated">正在使用的数据库别名。</target>
        </trans-unit>
        <trans-unit id="cf7a0f6a4ffa467c95510c550e77ff84c2880ada" translate="yes" xml:space="preserve">
          <source>The database alias used for synchronization. Defaults to the &lt;code&gt;default&lt;/code&gt; database.</source>
          <target state="translated">用于同步的数据库别名。默认为 &lt;code&gt;default&lt;/code&gt; 数据库。</target>
        </trans-unit>
        <trans-unit id="952dd11e9541ef5d3727b9dfa84e64f7fbe99249" translate="yes" xml:space="preserve">
          <source>The database backend to use. The built-in database backends are:</source>
          <target state="translated">要使用的数据库后端。内置的数据库后端有:</target>
        </trans-unit>
        <trans-unit id="58b4bec81caaec606a7e790e7b80e1dfe5ab0542" translate="yes" xml:space="preserve">
          <source>The database connection that was opened. This can be used in a multiple-database configuration to differentiate connection signals from different databases.</source>
          <target state="translated">打开的数据库连接。这在多数据库配置中可以用来区分不同数据库的连接信号。</target>
        </trans-unit>
        <trans-unit id="cb2370421f5bdbfc63ed2299c4b75082331e9312" translate="yes" xml:space="preserve">
          <source>The database functions in the &lt;code&gt;django.contrib.postgres.search&lt;/code&gt; module ease the use of PostgreSQL&amp;rsquo;s &lt;a href=&quot;https://www.postgresql.org/docs/current/textsearch.html&quot;&gt;full text search engine&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;django.contrib.postgres.search&lt;/code&gt; 模块中的数据库功能简化了PostgreSQL &lt;a href=&quot;https://www.postgresql.org/docs/current/textsearch.html&quot;&gt;全文搜索引擎的使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b71695c6f4fa1dffd03cf126602c3ca0d7b6035e" translate="yes" xml:space="preserve">
          <source>The database operators used by the lookups can be divided into three categories:</source>
          <target state="translated">查询所使用的数据库运算符可分为三类。</target>
        </trans-unit>
        <trans-unit id="c8a5416a993dcb3bd1dc2279d4dade633db7282c" translate="yes" xml:space="preserve">
          <source>The database that will be used if this query is executed now.</source>
          <target state="translated">如果现在执行这个查询,将使用的数据库。</target>
        </trans-unit>
        <trans-unit id="9115c3491c26155c0d8b73a549668d12a0c78bb2" translate="yes" xml:space="preserve">
          <source>The database user must be a superuser in order to run &lt;code&gt;CREATE EXTENSION postgis;&lt;/code&gt;. The command is run during the &lt;a href=&quot;../../../django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; process. An alternative is to use a migration operation in your project:</source>
          <target state="translated">数据库用户必须是超级用户才能运行 &lt;code&gt;CREATE EXTENSION postgis;&lt;/code&gt; 。该命令在&lt;a href=&quot;../../../django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;过程中运行。一种替代方法是在项目中使用迁移操作：</target>
        </trans-unit>
        <trans-unit id="f61a99a7872ebf66de6187b65d49ab814180deb5" translate="yes" xml:space="preserve">
          <source>The database wrapper class &amp;ndash; i.e. &lt;code&gt;django.db.backends.postgresql.DatabaseWrapper&lt;/code&gt; or &lt;code&gt;django.db.backends.mysql.DatabaseWrapper&lt;/code&gt;, etc.</source>
          <target state="translated">数据库包装器类&amp;ndash;即 &lt;code&gt;django.db.backends.postgresql.DatabaseWrapper&lt;/code&gt; 或 &lt;code&gt;django.db.backends.mysql.DatabaseWrapper&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="3b23e6996a7bf9115220fd283aace6352331691e" translate="yes" xml:space="preserve">
          <source>The date and time of the action.</source>
          <target state="translated">行动的日期和时间;</target>
        </trans-unit>
        <trans-unit id="b139848485c3bd11a960042cbaa48f80aba5b2a1" translate="yes" xml:space="preserve">
          <source>The datum shifting files are needed for converting data to and from certain projections. For example, the PROJ.4 string for the &lt;a href=&quot;https://spatialreference.org/ref/sr-org/6864/prj/&quot;&gt;Google projection (900913 or 3857)&lt;/a&gt; requires the &lt;code&gt;null&lt;/code&gt; grid file only included in the extra datum shifting files. It is easier to install the shifting files now, then to have debug a problem caused by their absence later.</source>
          <target state="translated">需要数据移动文件才能将数据与某些投影相互转换。例如，用于&lt;a href=&quot;https://spatialreference.org/ref/sr-org/6864/prj/&quot;&gt;Google投影&lt;/a&gt;的PROJ.4字符串（900913或3857）需要仅包含在额外基准移动文件中的 &lt;code&gt;null&lt;/code&gt; 网格文件。现在安装移位文件比较容易，然后可以调试由于文件缺失而导致的问题。</target>
        </trans-unit>
        <trans-unit id="dc04cb57a0cb86ad163b712420777e844241e208" translate="yes" xml:space="preserve">
          <source>The decorator adds logic to capture and preserve the arguments on their way into your constructor, and then returns those arguments exactly when deconstruct() is called.</source>
          <target state="translated">装饰器添加了逻辑来捕获和保存进入构造函数的参数,然后在调用deconstruct()时准确地返回这些参数。</target>
        </trans-unit>
        <trans-unit id="9cd68e9318aaf868b6009093b024904f632bf5df" translate="yes" xml:space="preserve">
          <source>The decorator can also be applied to &lt;a href=&quot;#django.test.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; classes:</source>
          <target state="translated">装饰器也可以应用于&lt;a href=&quot;#django.test.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;类：</target>
        </trans-unit>
        <trans-unit id="e752ec513dfa2b9020c4b9b1d77dff65842791cc" translate="yes" xml:space="preserve">
          <source>The decorator can also be applied to test case classes:</source>
          <target state="translated">装饰器也可以应用于测试用例类。</target>
        </trans-unit>
        <trans-unit id="08078900b7b084a713be574d3ec48dde029f0fc7" translate="yes" xml:space="preserve">
          <source>The decorator may also take an iterable of permissions, in which case the user must have all of the permissions in order to access the view.</source>
          <target state="translated">装饰者也可以取一个权限的迭代,在这种情况下,用户必须拥有所有的权限才能访问视图。</target>
        </trans-unit>
        <trans-unit id="3e6984e25abb466ab3b70b1883295bf7fdad1ae1" translate="yes" xml:space="preserve">
          <source>The decorator method</source>
          <target state="translated">装饰者方法</target>
        </trans-unit>
        <trans-unit id="7c5f3a4a1d212f664f326057c0ab4ff2bbfd5f34" translate="yes" xml:space="preserve">
          <source>The decorator sets the &lt;code&gt;ETag&lt;/code&gt; and &lt;code&gt;Last-Modified&lt;/code&gt; headers on the response if they are not already set by the view and if the request&amp;rsquo;s method is safe (&lt;code&gt;GET&lt;/code&gt; or &lt;code&gt;HEAD&lt;/code&gt;).</source>
          <target state="translated">如果视图尚未设置装饰器，并且请求的方法是安全的（ &lt;code&gt;GET&lt;/code&gt; 或 &lt;code&gt;HEAD&lt;/code&gt; ），则装饰器在响应上设置 &lt;code&gt;ETag&lt;/code&gt; 和 &lt;code&gt;Last-Modified&lt;/code&gt; 头。</target>
        </trans-unit>
        <trans-unit id="dc20f9a0cf41d79aff3ab5d9ba049b34d9983d7f" translate="yes" xml:space="preserve">
          <source>The decorators in &lt;a href=&quot;#module-django.views.decorators.cache&quot;&gt;&lt;code&gt;django.views.decorators.cache&lt;/code&gt;&lt;/a&gt; control server and client-side caching.</source>
          <target state="translated">&lt;a href=&quot;#module-django.views.decorators.cache&quot;&gt; &lt;code&gt;django.views.decorators.cache&lt;/code&gt; 中&lt;/a&gt;的装饰器控制服务器和客户端缓存。</target>
        </trans-unit>
        <trans-unit id="714400a88cce911b942d02df934f863e07f4e572" translate="yes" xml:space="preserve">
          <source>The decorators in &lt;a href=&quot;#module-django.views.decorators.gzip&quot;&gt;&lt;code&gt;django.views.decorators.gzip&lt;/code&gt;&lt;/a&gt; control content compression on a per-view basis.</source>
          <target state="translated">&lt;a href=&quot;#module-django.views.decorators.gzip&quot;&gt; &lt;code&gt;django.views.decorators.gzip&lt;/code&gt; 中&lt;/a&gt;的装饰器按每个视图控制内容压缩。</target>
        </trans-unit>
        <trans-unit id="4b9631a95e4f5290b1d40c2f36db35dff973e6be" translate="yes" xml:space="preserve">
          <source>The decorators in &lt;a href=&quot;#module-django.views.decorators.http&quot;&gt;&lt;code&gt;django.views.decorators.http&lt;/code&gt;&lt;/a&gt; can be used to restrict access to views based on the request method. These decorators will return a &lt;a href=&quot;../../ref/request-response#django.http.HttpResponseNotAllowed&quot;&gt;&lt;code&gt;django.http.HttpResponseNotAllowed&lt;/code&gt;&lt;/a&gt; if the conditions are not met.</source>
          <target state="translated">&lt;a href=&quot;#module-django.views.decorators.http&quot;&gt; &lt;code&gt;django.views.decorators.http&lt;/code&gt; 中&lt;/a&gt;的装饰器可用于基于请求方法来限制对视图的访问。如果不满足条件，这些装饰器将返回&lt;a href=&quot;../../ref/request-response#django.http.HttpResponseNotAllowed&quot;&gt; &lt;code&gt;django.http.HttpResponseNotAllowed&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="172b895ce751cf6b71596b006bab1637b49f0e3a" translate="yes" xml:space="preserve">
          <source>The decorators in &lt;a href=&quot;#module-django.views.decorators.vary&quot;&gt;&lt;code&gt;django.views.decorators.vary&lt;/code&gt;&lt;/a&gt; can be used to control caching based on specific request headers.</source>
          <target state="translated">&lt;a href=&quot;#module-django.views.decorators.vary&quot;&gt; &lt;code&gt;django.views.decorators.vary&lt;/code&gt; 中&lt;/a&gt;的装饰器可用于基于特定的请求标头控制缓存。</target>
        </trans-unit>
        <trans-unit id="d956dc320ba4030b6695d4e49373953768a303f7" translate="yes" xml:space="preserve">
          <source>The decorators use a string identifier to describe database features. This string corresponds to attributes of the database connection features class. See &lt;code&gt;django.db.backends.BaseDatabaseFeatures&lt;/code&gt; class for a full list of database features that can be used as a basis for skipping tests.</source>
          <target state="translated">装饰器使用字符串标识符来描述数据库功能。此字符串对应于数据库连接要素类的属性。有关可用作跳过测试基础的数据库功能的完整列表，请参见 &lt;code&gt;django.db.backends.BaseDatabaseFeatures&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="caaa132833461901a9846628e798fe735598a186" translate="yes" xml:space="preserve">
          <source>The decorators will process a request in the order they are passed to the decorator. In the example, &lt;code&gt;never_cache()&lt;/code&gt; will process the request before &lt;code&gt;login_required()&lt;/code&gt;.</source>
          <target state="translated">装饰者将按照传递给装饰者的顺序处理请求。在该示例中， &lt;code&gt;never_cache()&lt;/code&gt; 将在 &lt;code&gt;login_required()&lt;/code&gt; 之前处理请求。</target>
        </trans-unit>
        <trans-unit id="e9b3340f0a94e2fad729899fe10f241ec56afb5c" translate="yes" xml:space="preserve">
          <source>The default 404 view will pass two variables to the template: &lt;code&gt;request_path&lt;/code&gt;, which is the URL that resulted in the error, and &lt;code&gt;exception&lt;/code&gt;, which is a useful representation of the exception that triggered the view (e.g. containing any message passed to a specific &lt;code&gt;Http404&lt;/code&gt; instance).</source>
          <target state="translated">默认的404视图将通过两个变量到模板： &lt;code&gt;request_path&lt;/code&gt; ，这是导致错误的URL，和 &lt;code&gt;exception&lt;/code&gt; ，这是触发视图对异常的有用表示（例如含有传递给一个特定的任何消息 &lt;code&gt;Http404&lt;/code&gt; 实例）。</target>
        </trans-unit>
        <trans-unit id="8bb62d8434d62bd532ee0e74706ef31f9611e1c2" translate="yes" xml:space="preserve">
          <source>The default 500 view passes no variables to the &lt;code&gt;500.html&lt;/code&gt; template and is rendered with an empty &lt;code&gt;Context&lt;/code&gt; to lessen the chance of additional errors.</source>
          <target state="translated">默认的500视图不会将任何变量传递到 &lt;code&gt;500.html&lt;/code&gt; 模板，并使用空的 &lt;code&gt;Context&lt;/code&gt; 呈现，以减少出现其他错误的机会。</target>
        </trans-unit>
        <trans-unit id="e0ec6d270d2168d34503a29c66d65f1c626916d8" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;#message-storage-backends&quot;&gt;storage backend&lt;/a&gt; relies on &lt;a href=&quot;../../topics/http/sessions&quot;&gt;sessions&lt;/a&gt;. That&amp;rsquo;s why &lt;code&gt;SessionMiddleware&lt;/code&gt; must be enabled and appear before &lt;code&gt;MessageMiddleware&lt;/code&gt; in &lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认的&lt;a href=&quot;#message-storage-backends&quot;&gt;存储后端&lt;/a&gt;依赖于&lt;a href=&quot;../../topics/http/sessions&quot;&gt;会话&lt;/a&gt;。这就是为什么必须启用 &lt;code&gt;SessionMiddleware&lt;/code&gt; 并使其出现在&lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; 中的&lt;/a&gt; &lt;code&gt;MessageMiddleware&lt;/code&gt; 之前的原因。</target>
        </trans-unit>
        <trans-unit id="cb25ca2a947cbc95f00df63677130dcc43190eba" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;../../ref/django-admin#django-admin-startapp&quot;&gt;&lt;code&gt;startapp&lt;/code&gt;&lt;/a&gt; template creates a &lt;code&gt;tests.py&lt;/code&gt; file in the new application. This might be fine if you only have a few tests, but as your test suite grows you&amp;rsquo;ll likely want to restructure it into a tests package so you can split your tests into different submodules such as &lt;code&gt;test_models.py&lt;/code&gt;, &lt;code&gt;test_views.py&lt;/code&gt;, &lt;code&gt;test_forms.py&lt;/code&gt;, etc. Feel free to pick whatever organizational scheme you like.</source>
          <target state="translated">默认的&lt;a href=&quot;../../ref/django-admin#django-admin-startapp&quot;&gt; &lt;code&gt;startapp&lt;/code&gt; &lt;/a&gt;模板在新应用程序中创建一个 &lt;code&gt;tests.py&lt;/code&gt; 文件。如果您只有几个测试，这可能很好，但是随着测试套件的增长，您可能需要将其重组为测试包，以便将测试拆分为不同的子模块，例如 &lt;code&gt;test_models.py&lt;/code&gt; ， &lt;code&gt;test_views.py&lt;/code&gt; ， &lt;code&gt;test_forms.py&lt;/code&gt; 等。请随意选择您喜欢的任何组织方案。</target>
        </trans-unit>
        <trans-unit id="226a066fd07ef456b5e140695c147458d6199d9c" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;settings.py&lt;/code&gt; created by &lt;code&gt;django-admin startproject&lt;/code&gt; already contains all the settings required to enable message functionality:</source>
          <target state="translated">&lt;code&gt;django-admin startproject&lt;/code&gt; 创建的默认 &lt;code&gt;settings.py&lt;/code&gt; 已包含启用消息功能所需的所有设置：</target>
        </trans-unit>
        <trans-unit id="15f5a864456675c86842be47238862e39ece8708" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;settings.py&lt;/code&gt; file created by &lt;a href=&quot;../../ref/django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;django-admin
startproject&lt;/code&gt;&lt;/a&gt; includes &lt;a href=&quot;../../ref/settings#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N = True&lt;/code&gt;&lt;/a&gt; for convenience. Note, however, that to enable number formatting with thousand separators it is necessary to set &lt;a href=&quot;../../ref/settings#std:setting-USE_THOUSAND_SEPARATOR&quot;&gt;&lt;code&gt;USE_THOUSAND_SEPARATOR
= True&lt;/code&gt;&lt;/a&gt; in your settings file. Alternatively, you could use &lt;a href=&quot;../../ref/contrib/humanize#std:templatefilter-intcomma&quot;&gt;&lt;code&gt;intcomma&lt;/code&gt;&lt;/a&gt; to format numbers in your template.</source>
          <target state="translated">&lt;a href=&quot;../../ref/django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;django-admin startproject&lt;/code&gt; &lt;/a&gt;创建的默认 &lt;code&gt;settings.py&lt;/code&gt; 文件包括&lt;a href=&quot;../../ref/settings#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N = True&lt;/code&gt; &lt;/a&gt;以方便使用。但是请注意，要启用带有千位分隔符的数字格式，必须在设置文件中设置&lt;a href=&quot;../../ref/settings#std:setting-USE_THOUSAND_SEPARATOR&quot;&gt; &lt;code&gt;USE_THOUSAND_SEPARATOR = True&lt;/code&gt; &lt;/a&gt;。或者，您可以使用&lt;a href=&quot;../../ref/contrib/humanize#std:templatefilter-intcomma&quot;&gt; &lt;code&gt;intcomma&lt;/code&gt; &lt;/a&gt;在模板中设置数字格式。</target>
        </trans-unit>
        <trans-unit id="552172d0157c475ea333dec0a0e79e817476d4b4" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;settings.py&lt;/code&gt; file created by &lt;a href=&quot;../../ref/django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;django-admin
startproject&lt;/code&gt;&lt;/a&gt; includes &lt;a href=&quot;../../ref/settings#std:setting-USE_TZ&quot;&gt;&lt;code&gt;USE_TZ = True&lt;/code&gt;&lt;/a&gt; for convenience.</source>
          <target state="translated">&lt;a href=&quot;../../ref/django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;django-admin startproject&lt;/code&gt; &lt;/a&gt;创建的默认 &lt;code&gt;settings.py&lt;/code&gt; 文件包括&lt;a href=&quot;../../ref/settings#std:setting-USE_TZ&quot;&gt; &lt;code&gt;USE_TZ = True&lt;/code&gt; &lt;/a&gt;以方便使用。</target>
        </trans-unit>
        <trans-unit id="37a44e663a84cee319df8611835c25940c7f1a11" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;settings.py&lt;/code&gt; file created by &lt;a href=&quot;django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;django-admin
startproject&lt;/code&gt;&lt;/a&gt; creates a unique &lt;code&gt;SECRET_KEY&lt;/code&gt; for convenience.</source>
          <target state="translated">&lt;a href=&quot;django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;django-admin startproject&lt;/code&gt; &lt;/a&gt;创建的默认 &lt;code&gt;settings.py&lt;/code&gt; 文件会创建一个唯一的 &lt;code&gt;SECRET_KEY&lt;/code&gt; ,以方便使用。</target>
        </trans-unit>
        <trans-unit id="13e8676c1b362fc1c1df84307e6fc7596047aa40" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;settings.py&lt;/code&gt; file created by &lt;a href=&quot;django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;django-admin
startproject&lt;/code&gt;&lt;/a&gt; includes &lt;code&gt;USE_I18N = True&lt;/code&gt; for convenience.</source>
          <target state="translated">&lt;a href=&quot;django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;django-admin startproject&lt;/code&gt; &lt;/a&gt;创建的默认 &lt;code&gt;settings.py&lt;/code&gt; 文件包含 &lt;code&gt;USE_I18N = True&lt;/code&gt; 以方便使用。</target>
        </trans-unit>
        <trans-unit id="229eaf04c4eefe874751764332b6248ddc79504c" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;settings.py&lt;/code&gt; file created by &lt;a href=&quot;django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;django-admin
startproject&lt;/code&gt;&lt;/a&gt; includes &lt;code&gt;USE_L10N = True&lt;/code&gt; for convenience.</source>
          <target state="translated">&lt;a href=&quot;django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;django-admin startproject&lt;/code&gt; &lt;/a&gt;创建的默认 &lt;code&gt;settings.py&lt;/code&gt; 文件包括 &lt;code&gt;USE_L10N = True&lt;/code&gt; 以方便使用。</target>
        </trans-unit>
        <trans-unit id="7b3298edc8e3436e091673198431668d349b4fe1" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;settings.py&lt;/code&gt; file created by &lt;a href=&quot;django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;django-admin
startproject&lt;/code&gt;&lt;/a&gt; sets &lt;code&gt;'APP_DIRS': True&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;django-admin startproject&lt;/code&gt; &lt;/a&gt;创建的默认 &lt;code&gt;settings.py&lt;/code&gt; 文件设置为 &lt;code&gt;'APP_DIRS': True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="896ebcb2f4a8b98bbc238bbcf9ec87231d75feca" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;settings.py&lt;/code&gt; file created by &lt;a href=&quot;django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;django-admin
startproject&lt;/code&gt;&lt;/a&gt; sets &lt;code&gt;DEBUG = True&lt;/code&gt; for convenience.</source>
          <target state="translated">&lt;a href=&quot;django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;django-admin startproject&lt;/code&gt; &lt;/a&gt;创建的默认 &lt;code&gt;settings.py&lt;/code&gt; 文件设置 &lt;code&gt;DEBUG = True&lt;/code&gt; 为方便起见。</target>
        </trans-unit>
        <trans-unit id="37f3c2b38e6100940f63032627821effc91e9578" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;settings.py&lt;/code&gt; file created by &lt;a href=&quot;django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;django-admin startproject&lt;/code&gt;&lt;/a&gt; includes &lt;code&gt;USE_TZ = True&lt;/code&gt; for convenience.</source>
          <target state="translated">&lt;a href=&quot;django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;django-admin startproject&lt;/code&gt; &lt;/a&gt;创建的默认 &lt;code&gt;settings.py&lt;/code&gt; 文件包括 &lt;code&gt;USE_TZ = True&lt;/code&gt; 以方便使用。</target>
        </trans-unit>
        <trans-unit id="38003d532df52d6f49eaaaa73790217a0dd7ee5b" translate="yes" xml:space="preserve">
          <source>The default HTML &lt;a href=&quot;../../ref/forms/widgets&quot;&gt;widget&lt;/a&gt; to use when rendering a form field (e.g. &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">呈现表单字段时使用的默认HTML &lt;a href=&quot;../../ref/forms/widgets&quot;&gt;小部件&lt;/a&gt;（例如 &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b697bad3491bb5d3085ff8046cdd9a14cbc88e43" translate="yes" xml:space="preserve">
          <source>The default can&amp;rsquo;t be a mutable object (model instance, &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, etc.), as a reference to the same instance of that object would be used as the default value in all new model instances. Instead, wrap the desired default in a callable. For example, if you want to specify a default &lt;code&gt;dict&lt;/code&gt; for &lt;a href=&quot;#django.db.models.JSONField&quot;&gt;&lt;code&gt;JSONField&lt;/code&gt;&lt;/a&gt;, use a function:</source>
          <target state="translated">默认值不能是可变对象（模型实例， &lt;code&gt;list&lt;/code&gt; ， &lt;code&gt;set&lt;/code&gt; 等），因为对该对象同一实例的引用将在所有新模型实例中用作默认值。而是将所需的默认值包装在可调用中。例如，如果要为&lt;a href=&quot;#django.db.models.JSONField&quot;&gt; &lt;code&gt;JSONField&lt;/code&gt; &lt;/a&gt;指定默认 &lt;code&gt;dict&lt;/code&gt; ，请使用以下函数：</target>
        </trans-unit>
        <trans-unit id="850c5f08bbd2469484fab8a1bbbdda4342749d52" translate="yes" xml:space="preserve">
          <source>The default can&amp;rsquo;t be a mutable object (model instance, &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, etc.), as a reference to the same instance of that object would be used as the default value in all new model instances. Instead, wrap the desired default in a callable. For example, if you want to specify a default &lt;code&gt;dict&lt;/code&gt; for &lt;a href=&quot;../contrib/postgres/fields#django.contrib.postgres.fields.JSONField&quot;&gt;&lt;code&gt;JSONField&lt;/code&gt;&lt;/a&gt;, use a function:</source>
          <target state="translated">默认值不能是可变对象（模型实例， &lt;code&gt;list&lt;/code&gt; ， &lt;code&gt;set&lt;/code&gt; 等），因为对该对象同一实例的引用将在所有新模型实例中用作默认值。而是将所需的默认值包装在可调用中。例如，如果要为&lt;a href=&quot;../contrib/postgres/fields#django.contrib.postgres.fields.JSONField&quot;&gt; &lt;code&gt;JSONField&lt;/code&gt; &lt;/a&gt;指定默认 &lt;code&gt;dict&lt;/code&gt; ，请使用以下函数：</target>
        </trans-unit>
        <trans-unit id="c1e6e73cc63d50d83c075b1833c565029c9c3c78" translate="yes" xml:space="preserve">
          <source>The default center latitude and longitude are &lt;code&gt;47&lt;/code&gt; and &lt;code&gt;5&lt;/code&gt;, respectively, which is a location in eastern France.</source>
          <target state="translated">默认的中心纬度和经度分别是 &lt;code&gt;47&lt;/code&gt; 和 &lt;code&gt;5&lt;/code&gt; ，这是法国东部的位置。</target>
        </trans-unit>
        <trans-unit id="6dc6b98a5ad4b8a3aea09cf719d80efb10089162" translate="yes" xml:space="preserve">
          <source>The default center latitude.</source>
          <target state="translated">默认的中心纬度。</target>
        </trans-unit>
        <trans-unit id="1a8bca6211de0327a68eaeb1c2bdb33a548d22de" translate="yes" xml:space="preserve">
          <source>The default center longitude.</source>
          <target state="translated">默认的中心经度。</target>
        </trans-unit>
        <trans-unit id="5b71e2fbed4079ac754389eb2c92a283a422c36d" translate="yes" xml:space="preserve">
          <source>The default class assigned to the &lt;code&gt;iterator&lt;/code&gt; attribute of &lt;a href=&quot;#django.forms.ModelChoiceField&quot;&gt;&lt;code&gt;ModelChoiceField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.forms.ModelMultipleChoiceField&quot;&gt;&lt;code&gt;ModelMultipleChoiceField&lt;/code&gt;&lt;/a&gt;. An iterable that yields 2-tuple choices from the queryset.</source>
          <target state="translated">分配给&lt;a href=&quot;#django.forms.ModelChoiceField&quot;&gt; &lt;code&gt;ModelChoiceField&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.forms.ModelMultipleChoiceField&quot;&gt; &lt;code&gt;ModelMultipleChoiceField&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;iterator&lt;/code&gt; 属性的默认类。从查询集中产生2元组选择的可迭代对象。</target>
        </trans-unit>
        <trans-unit id="47b75fca13bb5c5601d76c121b6fe2672e66398e" translate="yes" xml:space="preserve">
          <source>The default configuration is purposefully kept to a minimum. If a template is rendered with a request (e.g. when using &lt;a href=&quot;http/shortcuts#django.shortcuts.render&quot;&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/a&gt;), the &lt;code&gt;Jinja2&lt;/code&gt; backend adds the globals &lt;code&gt;request&lt;/code&gt;, &lt;code&gt;csrf_input&lt;/code&gt;, and &lt;code&gt;csrf_token&lt;/code&gt; to the context. Apart from that, this backend doesn&amp;rsquo;t create a Django-flavored environment. It doesn&amp;rsquo;t know about Django filters and tags. In order to use Django-specific APIs, you must configure them into the environment.</source>
          <target state="translated">默认配置有意保留为最低。如果模板是通过请求呈现的（例如，使用&lt;a href=&quot;http/shortcuts#django.shortcuts.render&quot;&gt; &lt;code&gt;render()&lt;/code&gt; 时&lt;/a&gt;），则 &lt;code&gt;Jinja2&lt;/code&gt; 后端会将globals &lt;code&gt;request&lt;/code&gt; ， &lt;code&gt;csrf_input&lt;/code&gt; 和 &lt;code&gt;csrf_token&lt;/code&gt; 添加到上下文中。除此之外，此后端不会创建Django风格的环境。它不了解Django过滤器和标签。为了使用特定于Django的API，您必须将其配置到环境中。</target>
        </trans-unit>
        <trans-unit id="79b75456b9d762f8c2dce9b2ae3e8175ad3db27a" translate="yes" xml:space="preserve">
          <source>The default depends on the values of &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt;&lt;code&gt;APP_DIRS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">缺省值取决于值&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-DIRS&quot;&gt; &lt;code&gt;DIRS&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt; &lt;code&gt;APP_DIRS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b30049a48d9bb824be0c46391448413b534fbed5" translate="yes" xml:space="preserve">
          <source>The default error views in Django should suffice for most Web applications, but can easily be overridden if you need any custom behavior. Specify the handlers as seen below in your URLconf (setting them anywhere else will have no effect).</source>
          <target state="translated">Django中默认的错误视图对于大多数Web应用来说已经足够了,但如果你需要自定义行为,可以很容易地被覆盖。在你的URLconf中指定如下所示的处理程序(在其他地方设置它们不会有任何影响)。</target>
        </trans-unit>
        <trans-unit id="bc4edfe7e2ec1bdac8450e6279fde98b4ec2a703" translate="yes" xml:space="preserve">
          <source>The default field types, as described in the &lt;a href=&quot;#field-types&quot;&gt;Field types&lt;/a&gt; table above, are sensible defaults. If you have a &lt;code&gt;DateField&lt;/code&gt; in your model, chances are you&amp;rsquo;d want that to be represented as a &lt;code&gt;DateField&lt;/code&gt; in your form. But &lt;code&gt;ModelForm&lt;/code&gt; gives you the flexibility of changing the form field for a given model.</source>
          <target state="translated">如上面的&amp;ldquo; &lt;a href=&quot;#field-types&quot;&gt;字段类型&amp;rdquo;&lt;/a&gt;表中所述，默认字段类型是明智的默认值。如果您的模型中有一个 &lt;code&gt;DateField&lt;/code&gt; ，那么您可能希望将其表示为表单中的 &lt;code&gt;DateField&lt;/code&gt; 。但是， &lt;code&gt;ModelForm&lt;/code&gt; 使您可以灵活地更改给定模型的表单字段。</target>
        </trans-unit>
        <trans-unit id="c4dd4f7c52db0ae0c51192809cd83268e43fe87b" translate="yes" xml:space="preserve">
          <source>The default for &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt;&lt;code&gt;PASSWORD_HASHERS&lt;/code&gt;&lt;/a&gt; is:</source>
          <target state="translated">&lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt; &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; &lt;/a&gt;的默认值为：</target>
        </trans-unit>
        <trans-unit id="134d94e39ec3e6ff60738a50fa838e784c29d613" translate="yes" xml:space="preserve">
          <source>The default form widget for this field is &lt;a href=&quot;../forms/widgets#django.forms.CheckboxInput&quot;&gt;&lt;code&gt;CheckboxInput&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../forms/widgets#django.forms.NullBooleanSelect&quot;&gt;&lt;code&gt;NullBooleanSelect&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;#django.db.models.Field.null&quot;&gt;&lt;code&gt;null=True&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此字段的默认表单窗口小部件为&lt;a href=&quot;../forms/widgets#django.forms.CheckboxInput&quot;&gt; &lt;code&gt;CheckboxInput&lt;/code&gt; &lt;/a&gt;，如果&lt;a href=&quot;#django.db.models.Field.null&quot;&gt; &lt;code&gt;null=True&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../forms/widgets#django.forms.NullBooleanSelect&quot;&gt; &lt;code&gt;NullBooleanSelect&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ea631760ea98aac69af2b8f8a5256ac828ece9ff" translate="yes" xml:space="preserve">
          <source>The default form widget for this field is a &lt;a href=&quot;../forms/widgets#django.forms.ClearableFileInput&quot;&gt;&lt;code&gt;ClearableFileInput&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此字段的默认表单窗口小部件是&lt;a href=&quot;../forms/widgets#django.forms.ClearableFileInput&quot;&gt; &lt;code&gt;ClearableFileInput&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9b905b296d7a144496b7009a975253fc6869e61e" translate="yes" xml:space="preserve">
          <source>The default form widget for this field is a &lt;a href=&quot;../forms/widgets#django.forms.DateInput&quot;&gt;&lt;code&gt;DateInput&lt;/code&gt;&lt;/a&gt;. The admin adds a JavaScript calendar, and a shortcut for &amp;ldquo;Today&amp;rdquo;. Includes an additional &lt;code&gt;invalid_date&lt;/code&gt; error message key.</source>
          <target state="translated">该字段的默认表单小部件是&lt;a href=&quot;../forms/widgets#django.forms.DateInput&quot;&gt; &lt;code&gt;DateInput&lt;/code&gt; &lt;/a&gt;。管理员添加了JavaScript日历和&amp;ldquo;今天&amp;rdquo;的快捷方式。包括一个附加的 &lt;code&gt;invalid_date&lt;/code&gt; 错误消息密钥。</target>
        </trans-unit>
        <trans-unit id="60986cff79bf6fc8ec851ab689e96aed367f661f" translate="yes" xml:space="preserve">
          <source>The default form widget for this field is a &lt;a href=&quot;../forms/widgets#django.forms.NumberInput&quot;&gt;&lt;code&gt;NumberInput&lt;/code&gt;&lt;/a&gt; when &lt;a href=&quot;../forms/fields#django.forms.Field.localize&quot;&gt;&lt;code&gt;localize&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt; or &lt;a href=&quot;../forms/widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">此字段的默认表单控件是一个&lt;a href=&quot;../forms/widgets#django.forms.NumberInput&quot;&gt; &lt;code&gt;NumberInput&lt;/code&gt; &lt;/a&gt;时&lt;a href=&quot;../forms/fields#django.forms.Field.localize&quot;&gt; &lt;code&gt;localize&lt;/code&gt; &lt;/a&gt;是 &lt;code&gt;False&lt;/code&gt; 或&lt;a href=&quot;../forms/widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt;其他。</target>
        </trans-unit>
        <trans-unit id="e3c6af63e65166181cbe2139ee4e69e1190626df" translate="yes" xml:space="preserve">
          <source>The default form widget for this field is a &lt;a href=&quot;../forms/widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该字段的默认表单小部件是&lt;a href=&quot;../forms/widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a60df51dd0ba10657107a46e39c3e7110ad412a" translate="yes" xml:space="preserve">
          <source>The default form widget for this field is a &lt;a href=&quot;../forms/widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt;. The admin adds a JavaScript calendar, and a shortcut for &amp;ldquo;Today&amp;rdquo;. Includes an additional &lt;code&gt;invalid_date&lt;/code&gt; error message key.</source>
          <target state="translated">该字段的默认表单小部件是&lt;a href=&quot;../forms/widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt;。管理员添加了JavaScript日历和&amp;ldquo;今天&amp;rdquo;的快捷方式。包括一个附加的 &lt;code&gt;invalid_date&lt;/code&gt; 错误消息密钥。</target>
        </trans-unit>
        <trans-unit id="2d825bc2343fa63f1211b4871b61308789330e5f" translate="yes" xml:space="preserve">
          <source>The default form widget for this field is a &lt;a href=&quot;../forms/widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt;. The admin adds some JavaScript shortcuts.</source>
          <target state="translated">该字段的默认表单小部件是&lt;a href=&quot;../forms/widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt;。管理员添加了一些JavaScript快捷方式。</target>
        </trans-unit>
        <trans-unit id="e6a1704847656dafc6f9fae0654999a133fe752e" translate="yes" xml:space="preserve">
          <source>The default form widget for this field is a &lt;a href=&quot;../forms/widgets#django.forms.TimeInput&quot;&gt;&lt;code&gt;TimeInput&lt;/code&gt;&lt;/a&gt;. The admin adds some JavaScript shortcuts.</source>
          <target state="translated">此字段的默认表单窗口小部件为&lt;a href=&quot;../forms/widgets#django.forms.TimeInput&quot;&gt; &lt;code&gt;TimeInput&lt;/code&gt; &lt;/a&gt;。管理员添加了一些JavaScript快捷方式。</target>
        </trans-unit>
        <trans-unit id="0b29b2b0f22a4f47553af4ca85c89a29a071a0f9" translate="yes" xml:space="preserve">
          <source>The default form widget for this field is a &lt;a href=&quot;../forms/widgets#django.forms.URLInput&quot;&gt;&lt;code&gt;URLInput&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此字段的默认表单窗口小部件是&lt;a href=&quot;../forms/widgets#django.forms.URLInput&quot;&gt; &lt;code&gt;URLInput&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ab7a915a6949ad8e59dacd9b65e621709e691765" translate="yes" xml:space="preserve">
          <source>The default form widget for this field is a single &lt;a href=&quot;../forms/widgets#django.forms.DateTimeInput&quot;&gt;&lt;code&gt;DateTimeInput&lt;/code&gt;&lt;/a&gt;. The admin uses two separate &lt;a href=&quot;../forms/widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt; widgets with JavaScript shortcuts.</source>
          <target state="translated">该字段的默认表单小部件是单个&lt;a href=&quot;../forms/widgets#django.forms.DateTimeInput&quot;&gt; &lt;code&gt;DateTimeInput&lt;/code&gt; &lt;/a&gt;。管理员使用带有JavaScript快捷方式的两个单独的&lt;a href=&quot;../forms/widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt;小部件。</target>
        </trans-unit>
        <trans-unit id="bfc82f92434f002c14f9510457820cb464b1af98" translate="yes" xml:space="preserve">
          <source>The default form widget for this field is a single &lt;a href=&quot;../forms/widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt;. The admin uses two separate &lt;a href=&quot;../forms/widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt; widgets with JavaScript shortcuts.</source>
          <target state="translated">该字段的默认表单小部件是单个&lt;a href=&quot;../forms/widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt;。管理员使用带有JavaScript快捷方式的两个单独的&lt;a href=&quot;../forms/widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt;小部件。</target>
        </trans-unit>
        <trans-unit id="e86b7b71b97eebfe17f27f711177ed2196a4552a" translate="yes" xml:space="preserve">
          <source>The default formatting to use for date fields on Django admin change-list pages &amp;ndash; and, possibly, by other parts of the system &amp;ndash; in cases when only the month and day are displayed.</source>
          <target state="translated">在仅显示月份和日期的情况下，Django管理员更改列表页面上（以及可能由系统的其他部分）日期字段使用的默认格式。</target>
        </trans-unit>
        <trans-unit id="f8c844f89ae57f68995ba3177973743e029db9ed" translate="yes" xml:space="preserve">
          <source>The default formatting to use for date fields on Django admin change-list pages &amp;ndash; and, possibly, by other parts of the system &amp;ndash; in cases when only the year and month are displayed.</source>
          <target state="translated">在仅显示年和月的情况下，用于Django管理员更改列表页面上日期字段的默认格式（可能还有系统其他部分的格式）。</target>
        </trans-unit>
        <trans-unit id="c3abe881263ad300827e24f23977ffeaa8fc68f5" translate="yes" xml:space="preserve">
          <source>The default formatting to use for displaying date fields in any part of the system. Note that if &lt;a href=&quot;#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;, then the locale-dictated format has higher precedence and will be applied instead. See &lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;allowed date format strings&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用于在系统任何部分中显示日期字段的默认格式。请注意，如果&lt;a href=&quot;#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; ，则由区域设置指定的格式具有更高的优先级，并将被应用。请参阅&lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt; &lt;code&gt;allowed date format strings&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b1b9178088242aa17794380e14db4ddb84579a8" translate="yes" xml:space="preserve">
          <source>The default formatting to use for displaying datetime fields in any part of the system. Note that if &lt;a href=&quot;#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;, then the locale-dictated format has higher precedence and will be applied instead. See &lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;allowed date format strings&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用于在系统任何部分中显示日期时间字段的默认格式。请注意，如果&lt;a href=&quot;#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; ，则由区域设置指定的格式具有更高的优先级，并将被应用。请参阅&lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt; &lt;code&gt;allowed date format strings&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3d9a445a36c674f2a2409abce5d97ada17179d05" translate="yes" xml:space="preserve">
          <source>The default formatting to use for displaying time fields in any part of the system. Note that if &lt;a href=&quot;#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;, then the locale-dictated format has higher precedence and will be applied instead. See &lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;allowed date format strings&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用于在系统任何部分中显示时间字段的默认格式。请注意，如果&lt;a href=&quot;#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; ，则由区域设置指定的格式具有更高的优先级，并将被应用。请参阅&lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt; &lt;code&gt;allowed date format strings&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cf5da289a6cdbe86004e0c35417963f837bd6560" translate="yes" xml:space="preserve">
          <source>The default ignored pattern list, &lt;code&gt;['CVS', '.*', '*~']&lt;/code&gt;, can be customized in a more persistent way than providing the &lt;code&gt;--ignore&lt;/code&gt; command option at each &lt;code&gt;collectstatic&lt;/code&gt; invocation. Provide a custom &lt;a href=&quot;../applications#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; class, override the &lt;code&gt;ignore_patterns&lt;/code&gt; attribute of this class and replace &lt;code&gt;'django.contrib.staticfiles'&lt;/code&gt; with that class path in your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="translated">与在每个 &lt;code&gt;collectstatic&lt;/code&gt; 调用中提供 &lt;code&gt;--ignore&lt;/code&gt; 命令选项相比，可以以更持久的方式自定义默认的忽略模式列表 &lt;code&gt;['CVS', '.*', '*~']&lt;/code&gt; 。提供一个自定义&lt;a href=&quot;../applications#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt;类，重写 &lt;code&gt;ignore_patterns&lt;/code&gt; 属性，并在&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置中用该类路径替换 &lt;code&gt;'django.contrib.staticfiles'&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="751eb81534ea3e24ef129517bef3e624542317ac" translate="yes" xml:space="preserve">
          <source>The default implementation for &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.FormMixin.form_valid&quot;&gt;&lt;code&gt;form_valid()&lt;/code&gt;&lt;/a&gt; simply redirects to the &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.FormMixin.success_url&quot;&gt;&lt;code&gt;success_url&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认实现&lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.FormMixin.form_valid&quot;&gt; &lt;code&gt;form_valid()&lt;/code&gt; &lt;/a&gt;简单地重定向到&lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.FormMixin.success_url&quot;&gt; &lt;code&gt;success_url&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58945866a1fad1e48b9997b0f3764ac1a493332d" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;a href=&quot;#django.forms.Widget.value_from_datadict&quot;&gt;&lt;code&gt;value_from_datadict()&lt;/code&gt;&lt;/a&gt; returns a list of values corresponding to each &lt;code&gt;Widget&lt;/code&gt;. This is appropriate when using a &lt;code&gt;MultiWidget&lt;/code&gt; with a &lt;a href=&quot;fields#django.forms.MultiValueField&quot;&gt;&lt;code&gt;MultiValueField&lt;/code&gt;&lt;/a&gt;. But since we want to use this widget with a &lt;a href=&quot;fields#django.forms.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt;, which takes a single value, we have overridden this method. The implementation here combines the data from the subwidgets into a string in the format that &lt;a href=&quot;fields#django.forms.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt; expects.</source>
          <target state="translated">&lt;a href=&quot;#django.forms.Widget.value_from_datadict&quot;&gt; &lt;code&gt;value_from_datadict()&lt;/code&gt; &lt;/a&gt;的默认实现返回与每个 &lt;code&gt;Widget&lt;/code&gt; 对应的值的列表。当将 &lt;code&gt;MultiWidget&lt;/code&gt; 与&lt;a href=&quot;fields#django.forms.MultiValueField&quot;&gt; &lt;code&gt;MultiValueField&lt;/code&gt; &lt;/a&gt;一起使用时，这是合适的。但是，由于我们想将此控件与带单个值的&lt;a href=&quot;fields#django.forms.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt;一起使用，因此我们重写了此方法。此处的实现将子控件中的数据组合成&lt;a href=&quot;fields#django.forms.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt;期望格式的字符串。</target>
        </trans-unit>
        <trans-unit id="0e767237a959c092f8fb6cc3a53857fa0dfee41b" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;code&gt;HttpResponseNotAllowed&lt;/code&gt; with a list of allowed methods in plain text.</source>
          <target state="translated">默认实现以纯文本形式返回 &lt;code&gt;HttpResponseNotAllowed&lt;/code&gt; 以及允许的方法列表。</target>
        </trans-unit>
        <trans-unit id="f02a775b38d24ae9223d3fc4cbfc7456c1b2afc8" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;code&gt;True&lt;/code&gt; if the user has either the &amp;ldquo;change&amp;rdquo; or &amp;ldquo;view&amp;rdquo; permission.</source>
          <target state="translated">如果用户具有&amp;ldquo;更改&amp;rdquo;或&amp;ldquo;查看&amp;rdquo;权限，则默认实现将返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5230cab4e521089f99bf954f4c5e6041635c9ad" translate="yes" xml:space="preserve">
          <source>The default implementation searches the fields named in &lt;a href=&quot;#django.contrib.admin.ModelAdmin.search_fields&quot;&gt;&lt;code&gt;ModelAdmin.search_fields&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认实现搜索&lt;a href=&quot;#django.contrib.admin.ModelAdmin.search_fields&quot;&gt; &lt;code&gt;ModelAdmin.search_fields&lt;/code&gt; 中&lt;/a&gt;命名的字段。</target>
        </trans-unit>
        <trans-unit id="f761f121dfbd8beab8561f6c419883ce3457de3c" translate="yes" xml:space="preserve">
          <source>The default implementation uses &lt;a href=&quot;#django.views.generic.base.RedirectView.url&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; as a starting string and performs expansion of &lt;code&gt;%&lt;/code&gt; named parameters in that string using the named groups captured in the URL.</source>
          <target state="translated">默认实现使用&lt;a href=&quot;#django.views.generic.base.RedirectView.url&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt;作为起始字符串，并使用URL中捕获的命名组在该字符串中扩展 &lt;code&gt;%&lt;/code&gt; 命名参数。</target>
        </trans-unit>
        <trans-unit id="462cb49a1d90ebd40612f2de40befbba0909941d" translate="yes" xml:space="preserve">
          <source>The default implementation uses &lt;a href=&quot;https://docs.python.org/3/library/os.path.html#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt; operations. Override this method if that&amp;rsquo;s not appropriate for your storage.</source>
          <target state="translated">默认实现使用&lt;a href=&quot;https://docs.python.org/3/library/os.path.html#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; &lt;/a&gt;操作。如果不适合您的存储，请覆盖此方法。</target>
        </trans-unit>
        <trans-unit id="8ead0d1970988ee507b431d44d59913400158913" translate="yes" xml:space="preserve">
          <source>The default implementation will inspect the HTTP method and attempt to delegate to a method that matches the HTTP method; a &lt;code&gt;GET&lt;/code&gt; will be delegated to &lt;code&gt;get()&lt;/code&gt;, a &lt;code&gt;POST&lt;/code&gt; to &lt;code&gt;post()&lt;/code&gt;, and so on.</source>
          <target state="translated">默认实现将检查HTTP方法，并尝试委托给与HTTP方法匹配的方法；一个 &lt;code&gt;GET&lt;/code&gt; 将被委托给 &lt;code&gt;get()&lt;/code&gt; 方法，一个 &lt;code&gt;POST&lt;/code&gt; 到 &lt;code&gt;post()&lt;/code&gt; ，等等。</target>
        </trans-unit>
        <trans-unit id="6fdab891f778ad549a56209e1770bef2df02bf29" translate="yes" xml:space="preserve">
          <source>The default implementation will return a list containing &lt;a href=&quot;#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt;&lt;code&gt;template_name&lt;/code&gt;&lt;/a&gt; (if it is specified).</source>
          <target state="translated">默认实现将返回一个包含&lt;a href=&quot;#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt; &lt;code&gt;template_name&lt;/code&gt; &lt;/a&gt;的列表（如果已指定）。</target>
        </trans-unit>
        <trans-unit id="1e9ec0e76f3af8986236ea7172214f311eaea0a5" translate="yes" xml:space="preserve">
          <source>The default is 64*2&lt;sup&gt;10&lt;/sup&gt; bytes, or 64 KB.</source>
          <target state="translated">默认值为64 * 2 &lt;sup&gt;10&lt;/sup&gt;字节，即64 KB。</target>
        </trans-unit>
        <trans-unit id="7b37abbc68ff24b36fc22e95104b39de87e18b06" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;[0.0, 1.0, 0.0, 0.0, 0.0, -1.0]&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;[0.0, 1.0, 0.0, 0.0, 0.0, -1.0]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c97f000fcb621b26c4ca76aed228db965cece3de" translate="yes" xml:space="preserve">
          <source>The default manager on a class is either the one chosen with &lt;a href=&quot;../../ref/models/options#django.db.models.Options.default_manager_name&quot;&gt;&lt;code&gt;Meta.default_manager_name&lt;/code&gt;&lt;/a&gt;, or the first manager declared on the model, or the default manager of the first parent model.</source>
          <target state="translated">类的默认管理器是使用&lt;a href=&quot;../../ref/models/options#django.db.models.Options.default_manager_name&quot;&gt; &lt;code&gt;Meta.default_manager_name&lt;/code&gt; &lt;/a&gt;选择的，或者是在模型上声明的第一个管理器，或者是第一个父模型的默认管理器。</target>
        </trans-unit>
        <trans-unit id="983962411dff41cd368f5b7bbf421e536db1acf1" translate="yes" xml:space="preserve">
          <source>The default map zoom is &lt;code&gt;12&lt;/code&gt;.</source>
          <target state="translated">默认地图缩放为 &lt;code&gt;12&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d4e743387931bcb102440b718b5c19ee9c15f17" translate="yes" xml:space="preserve">
          <source>The default number of seconds to cache a page for the &lt;a href=&quot;../topics/cache#the-per-site-cache&quot;&gt;cache middleware&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../topics/cache#the-per-site-cache&quot;&gt;缓存中间件&lt;/a&gt;页面的默认秒数。</target>
        </trans-unit>
        <trans-unit id="e154f587263da05e8c0f5967db25f769f3bbd0c8" translate="yes" xml:space="preserve">
          <source>The default of &lt;code&gt;show_full_result_count=True&lt;/code&gt; generates a query to perform a full count on the table which can be expensive if the table contains a large number of rows.</source>
          <target state="translated">默认的 &lt;code&gt;show_full_result_count=True&lt;/code&gt; 生成查询以对表执行完整计数，如果表包含大量行，则该查询可能会非常昂贵。</target>
        </trans-unit>
        <trans-unit id="16c7754ef944bfa9abfbac63064b61db060480eb" translate="yes" xml:space="preserve">
          <source>The default ordering for the object, for use when obtaining lists of objects:</source>
          <target state="translated">对象的默认排序,用于获取对象列表时使用。</target>
        </trans-unit>
        <trans-unit id="238163c4cb91e826d6996578b9872f96ffb9a648" translate="yes" xml:space="preserve">
          <source>The default password change views included with Django, &lt;a href=&quot;#django.contrib.auth.views.PasswordChangeView&quot;&gt;&lt;code&gt;PasswordChangeView&lt;/code&gt;&lt;/a&gt; and the &lt;code&gt;user_change_password&lt;/code&gt; view in the &lt;a href=&quot;index#module-django.contrib.auth&quot;&gt;&lt;code&gt;django.contrib.auth&lt;/code&gt;&lt;/a&gt; admin, update the session with the new password hash so that a user changing their own password won&amp;rsquo;t log themselves out. If you have a custom password change view and wish to have similar behavior, use the &lt;a href=&quot;#django.contrib.auth.update_session_auth_hash&quot;&gt;&lt;code&gt;update_session_auth_hash()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;index#module-django.contrib.auth&quot;&gt; &lt;code&gt;django.contrib.auth&lt;/code&gt; &lt;/a&gt;管理员中Django附带的默认密码更改视图，&lt;a href=&quot;#django.contrib.auth.views.PasswordChangeView&quot;&gt; &lt;code&gt;PasswordChangeView&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;user_change_password&lt;/code&gt; 视图使用新的密码哈希更新会话，以便更改自己密码的用户不会注销自己。如果您具有自定义密码更改视图并希望具有类似的行为，请使用&lt;a href=&quot;#django.contrib.auth.update_session_auth_hash&quot;&gt; &lt;code&gt;update_session_auth_hash()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="6f5fb4f1958be3d81c7def22a5a87c6baf5e9f41" translate="yes" xml:space="preserve">
          <source>The default password hasher is rather slow by design. If you&amp;rsquo;re authenticating many users in your tests, you may want to use a custom settings file and set the &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt;&lt;code&gt;PASSWORD_HASHERS&lt;/code&gt;&lt;/a&gt; setting to a faster hashing algorithm:</source>
          <target state="translated">默认密码哈希器在设计上相当慢。如果要在测试中对许多用户进行身份验证，则可能要使用自定义设置文件，并将&lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt; &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; &lt;/a&gt;设置设置为更快的哈希算法：</target>
        </trans-unit>
        <trans-unit id="da45cf62bc7d278f65e85a2fb4a8777e81153cc7" translate="yes" xml:space="preserve">
          <source>The default resampling algorithm is &lt;code&gt;NearestNeighbour&lt;/code&gt; but can be changed using the &lt;code&gt;resampling&lt;/code&gt; argument. The default maximum allowed error for resampling is 0.0 and can be changed using the &lt;code&gt;max_error&lt;/code&gt; argument. Consult the &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.warp&quot;&gt;&lt;code&gt;warp&lt;/code&gt;&lt;/a&gt; documentation for detail on those arguments.</source>
          <target state="translated">默认的重采样算法是 &lt;code&gt;NearestNeighbour&lt;/code&gt; ,但是可以使用 &lt;code&gt;resampling&lt;/code&gt; 参数进行更改。重采样的默认最大允许错误为0.0，可以使用 &lt;code&gt;max_error&lt;/code&gt; 参数进行更改。有关这些参数的详细信息，请查阅&lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.warp&quot;&gt; &lt;code&gt;warp&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="7cb2f0905f6675e362944d6915dabba14930728d" translate="yes" xml:space="preserve">
          <source>The default serialization strategy for foreign keys and many-to-many relations is to serialize the value of the primary key(s) of the objects in the relation. This strategy works well for most objects, but it can cause difficulty in some circumstances.</source>
          <target state="translated">外键和多对多关系的默认序列化策略是序列化关系中对象的主键值。这个策略对大多数对象都很有效,但在某些情况下会造成困难。</target>
        </trans-unit>
        <trans-unit id="1a236475813a0e546786080257d84264c4b37364" translate="yes" xml:space="preserve">
          <source>The default spatial reference system for geometry fields is WGS84 (meaning the &lt;a href=&quot;https://en.wikipedia.org/wiki/SRID&quot;&gt;SRID&lt;/a&gt; is 4326) &amp;ndash; in other words, the field coordinates are in longitude, latitude pairs in units of degrees. To use a different coordinate system, set the SRID of the geometry field with the &lt;code&gt;srid&lt;/code&gt; argument. Use an integer representing the coordinate system&amp;rsquo;s EPSG code.</source>
          <target state="translated">几何字段的默认空间参考系统是WGS84（意味着&lt;a href=&quot;https://en.wikipedia.org/wiki/SRID&quot;&gt;SRID&lt;/a&gt;为4326）&amp;ndash;换句话说，字段坐标是经度，纬度对，以度为单位。要使用其他坐标系，请使用 &lt;code&gt;srid&lt;/code&gt; 参数设置几何字段的SRID 。使用代表坐标系的EPSG代码的整数。</target>
        </trans-unit>
        <trans-unit id="f2964cc9737c87c70cfb2ca809b7da585353cdd0" translate="yes" xml:space="preserve">
          <source>The default starting point for a frame is &lt;code&gt;UNBOUNDED PRECEDING&lt;/code&gt; which is the first row of the partition. The end point is always explicitly included in the SQL generated by the ORM and is by default &lt;code&gt;UNBOUNDED FOLLOWING&lt;/code&gt;. The default frame includes all rows from the partition to the last row in the set.</source>
          <target state="translated">帧的默认起点是 &lt;code&gt;UNBOUNDED PRECEDING&lt;/code&gt; ，它是分区的第一行。端点始终明确包含在ORM生成的SQL中，默认情况下为 &lt;code&gt;UNBOUNDED FOLLOWING&lt;/code&gt; 。默认框架包括从分区到集合中最后一行的所有行。</target>
        </trans-unit>
        <trans-unit id="e264add06e3e7aafd31761cac5cd121ec1ebd13f" translate="yes" xml:space="preserve">
          <source>The default test database names are created by prepending &lt;code&gt;test_&lt;/code&gt; to the value of each &lt;a href=&quot;../../ref/settings#std:setting-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt; in &lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt;. When using SQLite, the tests will use an in-memory database by default (i.e., the database will be created in memory, bypassing the filesystem entirely!). The &lt;a href=&quot;../../ref/settings#std:setting-DATABASE-TEST&quot;&gt;&lt;code&gt;TEST&lt;/code&gt;&lt;/a&gt; dictionary in &lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt; offers a number of settings to configure your test database. For example, if you want to use a different database name, specify &lt;a href=&quot;../../ref/settings#std:setting-TEST_NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&quot;../../ref/settings#std:setting-DATABASE-TEST&quot;&gt;&lt;code&gt;TEST&lt;/code&gt;&lt;/a&gt; dictionary for any given database in &lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认的测试数据库名称是通过将 &lt;code&gt;test_&lt;/code&gt; 放在&lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt;中每个&lt;a href=&quot;../../ref/settings#std:setting-NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt;的值的前面来创建的。使用SQLite时，默认情况下，测试将使用内存数据库（即，数据库将在内存中创建，完全绕开文件系统！）。&lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; 中&lt;/a&gt;的&lt;a href=&quot;../../ref/settings#std:setting-DATABASE-TEST&quot;&gt; &lt;code&gt;TEST&lt;/code&gt; &lt;/a&gt;词典提供了许多设置来配置您的测试数据库。例如，如果要使用其他数据库名称，请在&lt;a href=&quot;../../ref/settings#std:setting-DATABASE-TEST&quot;&gt; &lt;code&gt;TEST&lt;/code&gt; &lt;/a&gt;字典中为&lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; 中的&lt;/a&gt;任何给定数据库指定&lt;a href=&quot;../../ref/settings#std:setting-TEST_NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ccdf5e525f2d14e5956f486c12773040c4635dd" translate="yes" xml:space="preserve">
          <source>The default timeout of &lt;code&gt;Watchman&lt;/code&gt; client is 5 seconds. You can change it by setting the &lt;a href=&quot;#envvar-DJANGO_WATCHMAN_TIMEOUT&quot; id=&quot;index-4&quot;&gt;&lt;code&gt;DJANGO_WATCHMAN_TIMEOUT&lt;/code&gt;&lt;/a&gt; environment variable.</source>
          <target state="translated">&lt;code&gt;Watchman&lt;/code&gt; 客户端的默认超时为5秒。您可以通过设置&lt;a href=&quot;#envvar-DJANGO_WATCHMAN_TIMEOUT&quot; id=&quot;index-4&quot;&gt; &lt;code&gt;DJANGO_WATCHMAN_TIMEOUT&lt;/code&gt; &lt;/a&gt;环境变量来更改它。</target>
        </trans-unit>
        <trans-unit id="aa3fea3a2cb7fbdc787868fa2bf10548a411c3b7" translate="yes" xml:space="preserve">
          <source>The default timeout of &lt;code&gt;Watchman&lt;/code&gt; client is 5 seconds. You can change it by setting the &lt;code&gt;DJANGO_WATCHMAN_TIMEOUT&lt;/code&gt; environment variable.</source>
          <target state="translated">&lt;code&gt;Watchman&lt;/code&gt; 客户端的默认超时为5秒。您可以通过设置 &lt;code&gt;DJANGO_WATCHMAN_TIMEOUT&lt;/code&gt; 环境变量来更改它。</target>
        </trans-unit>
        <trans-unit id="daa3eede9d94a26c4d7f936a6141140eeabde446" translate="yes" xml:space="preserve">
          <source>The default value for the X-Frame-Options header used by &lt;a href=&quot;middleware#django.middleware.clickjacking.XFrameOptionsMiddleware&quot;&gt;&lt;code&gt;XFrameOptionsMiddleware&lt;/code&gt;&lt;/a&gt;. See the &lt;a href=&quot;clickjacking&quot;&gt;clickjacking protection&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;a href=&quot;middleware#django.middleware.clickjacking.XFrameOptionsMiddleware&quot;&gt; &lt;code&gt;XFrameOptionsMiddleware&lt;/code&gt; &lt;/a&gt;使用的X-Frame-Options标头的默认值。请参阅&lt;a href=&quot;clickjacking&quot;&gt;点击劫持保护&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="3ad19aea01ce3b34c3122ad6567cba185a95789f" translate="yes" xml:space="preserve">
          <source>The default value for the field. This can be a value or a callable object. If callable it will be called every time a new object is created.</source>
          <target state="translated">字段的默认值。这可以是一个值或一个可调用的对象。如果是可调用对象,则每次创建新对象时都会被调用。</target>
        </trans-unit>
        <trans-unit id="1bdce88035abac81dcdbc686f432758b88e7ee8f" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;0&lt;/code&gt;, preserving the historical behavior of closing the database connection at the end of each request. To enable persistent connections, set &lt;a href=&quot;settings#std:setting-CONN_MAX_AGE&quot;&gt;&lt;code&gt;CONN_MAX_AGE&lt;/code&gt;&lt;/a&gt; to a positive integer of seconds. For unlimited persistent connections, set it to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">缺省值为 &lt;code&gt;0&lt;/code&gt; ，保留了在每个请求结束时关闭数据库连接的历史行为。要启用持久连接，请将&lt;a href=&quot;settings#std:setting-CONN_MAX_AGE&quot;&gt; &lt;code&gt;CONN_MAX_AGE&lt;/code&gt; &lt;/a&gt;设置为秒的正整数。对于无限的持久连接，请将其设置为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59eac11be59113cb531c77947d459e7720915510" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;0&lt;/code&gt;, preserving the historical behavior of closing the database connection at the end of each request. To enable persistent connections, set &lt;a href=&quot;settings#std:setting-CONN_MAX_AGE&quot;&gt;&lt;code&gt;CONN_MAX_AGE&lt;/code&gt;&lt;/a&gt; to a positive number of seconds. For unlimited persistent connections, set it to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">缺省值为 &lt;code&gt;0&lt;/code&gt; ，保留了在每个请求结束时关闭数据库连接的历史行为。要启用持久连接，请将&lt;a href=&quot;settings#std:setting-CONN_MAX_AGE&quot;&gt; &lt;code&gt;CONN_MAX_AGE&lt;/code&gt; &lt;/a&gt;设置为正数秒。对于无限的持久连接，请将其设置为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b64688fe542c602b65e6e7331dbb04c49fa93838" translate="yes" xml:space="preserve">
          <source>The default value is used when new model instances are created and a value isn&amp;rsquo;t provided for the field. When the field is a primary key, the default is also used when the field is set to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">创建新模型实例且未为该字段提供值时，将使用默认值。如果该字段是主键，则当该字段设置为 &lt;code&gt;None&lt;/code&gt; 时，也会使用默认值。</target>
        </trans-unit>
        <trans-unit id="69ec1abd98185eb6970143dce73b5d12c517b2f4" translate="yes" xml:space="preserve">
          <source>The default value of &lt;code&gt;BooleanField&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt; when &lt;a href=&quot;#django.db.models.Field.default&quot;&gt;&lt;code&gt;Field.default&lt;/code&gt;&lt;/a&gt; isn&amp;rsquo;t defined.</source>
          <target state="translated">默认值为 &lt;code&gt;BooleanField&lt;/code&gt; 是 &lt;code&gt;None&lt;/code&gt; 时&lt;a href=&quot;#django.db.models.Field.default&quot;&gt; &lt;code&gt;Field.default&lt;/code&gt; &lt;/a&gt;没有定义。</target>
        </trans-unit>
        <trans-unit id="382174f1bda042f076ce960d46e0b453db42cf82" translate="yes" xml:space="preserve">
          <source>The default value of &lt;code&gt;chunk_size&lt;/code&gt;, 2000, comes from &lt;a href=&quot;https://www.postgresql.org/message-id/4D2F2C71.8080805%40dndg.it&quot;&gt;a calculation on the psycopg mailing list&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;chunk_size&lt;/code&gt; 的默认值2000来自&lt;a href=&quot;https://www.postgresql.org/message-id/4D2F2C71.8080805%40dndg.it&quot;&gt;psycopg邮件列表的计算&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="7ca1bec9400ccbbb70ceb6a6128928f0a3fbc600" translate="yes" xml:space="preserve">
          <source>The default value of the &lt;a href=&quot;settings#std:setting-X_FRAME_OPTIONS&quot;&gt;&lt;code&gt;X_FRAME_OPTIONS&lt;/code&gt;&lt;/a&gt; setting was changed from &lt;code&gt;SAMEORIGIN&lt;/code&gt; to &lt;code&gt;DENY&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;settings#std:setting-X_FRAME_OPTIONS&quot;&gt; &lt;code&gt;X_FRAME_OPTIONS&lt;/code&gt; &lt;/a&gt;设置的默认值从 &lt;code&gt;SAMEORIGIN&lt;/code&gt; 更改为 &lt;code&gt;DENY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1209fb884dca8125f9f250e873dad008e7674864" translate="yes" xml:space="preserve">
          <source>The default values of these attributes are probably fine for you. If you determine that the password hash is too fast or too slow, you can tweak it as follows:</source>
          <target state="translated">这些属性的默认值对你来说可能很好。如果你确定密码哈希值过快或过慢,你可以按以下方式调整它。</target>
        </trans-unit>
        <trans-unit id="05656151b4b0dfce0903d02dc2521c2ec32bcb69" translate="yes" xml:space="preserve">
          <source>The default version number for cache keys generated by the Django server.</source>
          <target state="translated">Django服务器生成的缓存密钥的默认版本号。</target>
        </trans-unit>
        <trans-unit id="78fb24ffc76652e03018f1dd8a29e38a6634044f" translate="yes" xml:space="preserve">
          <source>The default will find files stored in the &lt;a href=&quot;#std:setting-STATICFILES_DIRS&quot;&gt;&lt;code&gt;STATICFILES_DIRS&lt;/code&gt;&lt;/a&gt; setting (using &lt;code&gt;django.contrib.staticfiles.finders.FileSystemFinder&lt;/code&gt;) and in a &lt;code&gt;static&lt;/code&gt; subdirectory of each app (using &lt;code&gt;django.contrib.staticfiles.finders.AppDirectoriesFinder&lt;/code&gt;). If multiple files with the same name are present, the first file that is found will be used.</source>
          <target state="translated">默认将查找存储在&lt;a href=&quot;#std:setting-STATICFILES_DIRS&quot;&gt; &lt;code&gt;STATICFILES_DIRS&lt;/code&gt; &lt;/a&gt;设置（使用 &lt;code&gt;django.contrib.staticfiles.finders.FileSystemFinder&lt;/code&gt; ）和每个应用程序的 &lt;code&gt;static&lt;/code&gt; 子目录（使用 &lt;code&gt;django.contrib.staticfiles.finders.AppDirectoriesFinder&lt;/code&gt; ）中的文件。如果存在多个具有相同名称的文件，则将使用找到的第一个文件。</target>
        </trans-unit>
        <trans-unit id="a64c65d5d530fbd477a00f355fb236632c2638fb" translate="yes" xml:space="preserve">
          <source>The default zoom level to use. Defaults to 4.</source>
          <target state="translated">要使用的默认缩放级别。默认值为4。</target>
        </trans-unit>
        <trans-unit id="377992fed2cb82d9664407c3569240cb12925a70" translate="yes" xml:space="preserve">
          <source>The default, output 2D WKB.</source>
          <target state="translated">默认情况下,输出2D WKB。</target>
        </trans-unit>
        <trans-unit id="1caf832ac267c397b03a907aedb144b4eaa0408e" translate="yes" xml:space="preserve">
          <source>The delete method, conveniently, is named &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt;. This method immediately deletes the object and returns the number of objects deleted and a dictionary with the number of deletions per object type. Example:</source>
          <target state="translated">方便地，将delete方法命名为&lt;a href=&quot;../../ref/models/instances#django.db.models.Model.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt;。此方法立即删除对象，并返回删除的对象数和带有每种对象类型的删除数的字典。例：</target>
        </trans-unit>
        <trans-unit id="beb30204d16e9db23c951318108a0ecb67ef44cb" translate="yes" xml:space="preserve">
          <source>The description can be of the form:</source>
          <target state="translated">说明的形式可以是:</target>
        </trans-unit>
        <trans-unit id="0d7adcb559f5a853b9e8a2d1c69d315b8258e572" translate="yes" xml:space="preserve">
          <source>The detailed description of the modification. In the case of an edit, for example, the message contains a list of the edited fields. The Django admin site formats this content as a JSON structure, so that &lt;a href=&quot;#django.contrib.admin.models.LogEntry.get_change_message&quot;&gt;&lt;code&gt;get_change_message()&lt;/code&gt;&lt;/a&gt; can recompose a message translated in the current user language. Custom code might set this as a plain string though. You are advised to use the &lt;a href=&quot;#django.contrib.admin.models.LogEntry.get_change_message&quot;&gt;&lt;code&gt;get_change_message()&lt;/code&gt;&lt;/a&gt; method to retrieve this value instead of accessing it directly.</source>
          <target state="translated">修改的详细说明。例如，在进行编辑的情况下，该消息包含已编辑字段的列表。Django管理站点将此内容格式化为JSON结构，以便&lt;a href=&quot;#django.contrib.admin.models.LogEntry.get_change_message&quot;&gt; &lt;code&gt;get_change_message()&lt;/code&gt; &lt;/a&gt;可以重新组合以当前用户语言翻译的消息。自定义代码可能会将其设置为纯字符串。建议您使用&lt;a href=&quot;#django.contrib.admin.models.LogEntry.get_change_message&quot;&gt; &lt;code&gt;get_change_message()&lt;/code&gt; &lt;/a&gt;方法来检索此值，而不是直接访问它。</target>
        </trans-unit>
        <trans-unit id="85044ff6d8ec6add8fcd586dc1308888d31cb228" translate="yes" xml:space="preserve">
          <source>The development process</source>
          <target state="translated">发展进程</target>
        </trans-unit>
        <trans-unit id="37d50d4b3c28889858e66e29eb1b78542a0508a0" translate="yes" xml:space="preserve">
          <source>The development server</source>
          <target state="translated">开发服务器</target>
        </trans-unit>
        <trans-unit id="cfd3b8bf265c1a3f4338f7de1430c957570dea3e" translate="yes" xml:space="preserve">
          <source>The development server automatically reloads Python code for each request as needed. You don&amp;rsquo;t need to restart the server for code changes to take effect. However, some actions like adding files don&amp;rsquo;t trigger a restart, so you&amp;rsquo;ll have to restart the server in these cases.</source>
          <target state="translated">开发服务器会根据需要自动为每个请求重新加载Python代码。您无需重新启动服务器即可使代码更改生效。但是，某些操作（例如添加文件）不会触发重新启动，因此在这种情况下，您必须重新启动服务器。</target>
        </trans-unit>
        <trans-unit id="69d40d41fd2c7119854b55dbde3aff7f9dc4a8a6" translate="yes" xml:space="preserve">
          <source>The development server automatically reloads Python code for each request, as needed. You don&amp;rsquo;t need to restart the server for code changes to take effect. However, some actions like adding files don&amp;rsquo;t trigger a restart, so you&amp;rsquo;ll have to restart the server in these cases.</source>
          <target state="translated">开发服务器会根据需要自动为每个请求重新加载Python代码。您无需重新启动服务器即可使代码更改生效。但是，某些操作（例如添加文件）不会触发重新启动，因此在这种情况下，您必须重新启动服务器。</target>
        </trans-unit>
        <trans-unit id="f2e2c61a3bbc35c05fcee6ff83b301d727f6625e" translate="yes" xml:space="preserve">
          <source>The development server creates a new thread for each request it handles, negating the effect of persistent connections. Don&amp;rsquo;t enable them during development.</source>
          <target state="translated">开发服务器为其处理的每个请求创建一个新线程，从而消除了持久连接的影响。在开发过程中不要启用它们。</target>
        </trans-unit>
        <trans-unit id="65a8a705f321727b308c87b6df994fe9d93e089d" translate="yes" xml:space="preserve">
          <source>The difference between these two is merely the template used to render them.</source>
          <target state="translated">这两者之间的区别仅仅是用于呈现它们的模板。</target>
        </trans-unit>
        <trans-unit id="0af504d1f47d3dc1755fe98c77ffbaa71f21426a" translate="yes" xml:space="preserve">
          <source>The difference comes in &amp;ldquo;reverse&amp;rdquo; queries. The related model in a one-to-one relationship also has access to a &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; object, but that &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; represents a single object, rather than a collection of objects:</source>
          <target state="translated">区别在于&amp;ldquo;反向&amp;rdquo;查询。一对一关系中的相关模型也可以访问&lt;a href=&quot;managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt;对象，但是该&lt;a href=&quot;managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt;代表单个对象，而不是对象的集合：</target>
        </trans-unit>
        <trans-unit id="aeea901ff7490fa90553479447d7a51e8ae76e53" translate="yes" xml:space="preserve">
          <source>The difference here is that &lt;code&gt;do_current_time()&lt;/code&gt; grabs the format string and the variable name, passing both to &lt;code&gt;CurrentTimeNode3&lt;/code&gt;.</source>
          <target state="translated">此处的区别在于 &lt;code&gt;do_current_time()&lt;/code&gt; 捕获格式字符串和变量名称，并将两者都传递给 &lt;code&gt;CurrentTimeNode3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="23e00239d3cd39f9bedf6ce6f53d58fb2c97897d" translate="yes" xml:space="preserve">
          <source>The different model field types (&lt;a href=&quot;../ref/models/fields#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ref/models/fields#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;) correspond to the appropriate HTML input widget. Each type of field knows how to display itself in the Django admin.</source>
          <target state="translated">不同的模型字段类型（&lt;a href=&quot;../ref/models/fields#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../ref/models/fields#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;）对应于适当的HTML输入小部件。每种类型的字段都知道如何在Django管理员中显示自己。</target>
        </trans-unit>
        <trans-unit id="5a27e6d484146d270b4af242adf6d6837ab3c613" translate="yes" xml:space="preserve">
          <source>The directories listed in &lt;a href=&quot;../../ref/settings#std:setting-LOCALE_PATHS&quot;&gt;&lt;code&gt;LOCALE_PATHS&lt;/code&gt;&lt;/a&gt; have the highest precedence, with the ones appearing first having higher precedence than the ones appearing later.</source>
          <target state="translated">&lt;a href=&quot;../../ref/settings#std:setting-LOCALE_PATHS&quot;&gt; &lt;code&gt;LOCALE_PATHS&lt;/code&gt; 中&lt;/a&gt;列出的目录具有最高优先级，首先出现的目录优先于随后出现的目录。</target>
        </trans-unit>
        <trans-unit id="f7c245d673aa06edd0292f66414c88ff2123f718" translate="yes" xml:space="preserve">
          <source>The directory path should be absolute &amp;ndash; that is, it should start at the root of your filesystem. It doesn&amp;rsquo;t matter whether you put a slash at the end of the setting.</source>
          <target state="translated">目录路径应该是绝对的-也就是说，它应该从文件系统的根目录开始。是否在设置的末尾加斜杠都没关系。</target>
        </trans-unit>
        <trans-unit id="b0c013069880559208deaffa6c2dbdd225ff8eea" translate="yes" xml:space="preserve">
          <source>The directory to store data to (typically files larger than &lt;a href=&quot;#std:setting-FILE_UPLOAD_MAX_MEMORY_SIZE&quot;&gt;&lt;code&gt;FILE_UPLOAD_MAX_MEMORY_SIZE&lt;/code&gt;&lt;/a&gt;) temporarily while uploading files. If &lt;code&gt;None&lt;/code&gt;, Django will use the standard temporary directory for the operating system. For example, this will default to &lt;code&gt;/tmp&lt;/code&gt; on *nix-style operating systems.</source>
          <target state="translated">上载文件时将数据临时存储到的目录（通常是大于&lt;a href=&quot;#std:setting-FILE_UPLOAD_MAX_MEMORY_SIZE&quot;&gt; &lt;code&gt;FILE_UPLOAD_MAX_MEMORY_SIZE&lt;/code&gt; 的&lt;/a&gt;文件）。如果为 &lt;code&gt;None&lt;/code&gt; ，Django将为操作系统使用标准的临时目录。例如，在* nix风格的操作系统上，该默认值为 &lt;code&gt;/tmp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="efe6c9d9a26f4b893a41fdd2ad38e95aa63558d5" translate="yes" xml:space="preserve">
          <source>The directory used by the &lt;a href=&quot;../topics/email#topic-email-file-backend&quot;&gt;file email backend&lt;/a&gt; to store output files.</source>
          <target state="translated">由所使用的目录&lt;a href=&quot;../topics/email#topic-email-file-backend&quot;&gt;文件的电子邮件后端&lt;/a&gt;存储输出文件。</target>
        </trans-unit>
        <trans-unit id="e16e14dcb79a4952dfb0ecb7dfccc157d53819e1" translate="yes" xml:space="preserve">
          <source>The distinction between &lt;a href=&quot;../../ref/forms/api#ref-forms-api-bound-unbound&quot;&gt;Bound and unbound forms&lt;/a&gt; is important:</source>
          <target state="translated">&lt;a href=&quot;../../ref/forms/api#ref-forms-api-bound-unbound&quot;&gt;绑定形式和未绑定形式&lt;/a&gt;之间的区别很重要：</target>
        </trans-unit>
        <trans-unit id="b08bc2093c5f8031ea7f3c8aaf065d1cf0aa2c00" translate="yes" xml:space="preserve">
          <source>The domain to be used when setting the CSRF cookie. This can be useful for easily allowing cross-subdomain requests to be excluded from the normal cross site request forgery protection. It should be set to a string such as &lt;code&gt;&quot;.example.com&quot;&lt;/code&gt; to allow a POST request from a form on one subdomain to be accepted by a view served from another subdomain.</source>
          <target state="translated">设置CSRF Coo​​kie时要使用的域。这对于将跨子域请求轻松排除在正常的跨站点请求伪造保护中很有用。应该将其设置为字符串，例如 &lt;code&gt;&quot;.example.com&quot;&lt;/code&gt; 以允许来自另一个子域的视图接受来自一个子域上的表单的POST请求。</target>
        </trans-unit>
        <trans-unit id="d0ba4fee1656fe57462feb575961e9a008b70b5c" translate="yes" xml:space="preserve">
          <source>The domain to be used when setting the CSRF cookie. This can be useful for easily allowing cross-subdomain requests to be excluded from the normal cross site request forgery protection. It should be set to a string such as &lt;code&gt;&quot;example.com&quot;&lt;/code&gt; to allow a POST request from a form on one subdomain to be accepted by a view served from another subdomain.</source>
          <target state="translated">设置CSRF Coo​​kie时要使用的域。这对于将跨子域请求轻松排除在正常的跨站点请求伪造保护中很有用。应该将其设置为字符串，例如 &lt;code&gt;&quot;example.com&quot;&lt;/code&gt; 以允许来自一个子域上的表单的POST请求被另一个子域提供的视图所接受。</target>
        </trans-unit>
        <trans-unit id="f6fa4e11ee0c7e669d33883c4844543c8422b769" translate="yes" xml:space="preserve">
          <source>The domain to use for session cookies. Set this to a string such as &lt;code&gt;&quot;example.com&quot;&lt;/code&gt; for cross-domain cookies, or use &lt;code&gt;None&lt;/code&gt; for a standard domain cookie.</source>
          <target state="translated">用于会话cookie的域。将其设置为字符串，例如 &lt;code&gt;&quot;example.com&quot;&lt;/code&gt; 用于跨域cookie，或将&amp;ldquo; &lt;code&gt;None&lt;/code&gt; 用于标准域cookie。</target>
        </trans-unit>
        <trans-unit id="68346906ed672a3e709eb8f536ba1f940cc1a0e8" translate="yes" xml:space="preserve">
          <source>The domain to use for the language cookie. Set this to a string such as &lt;code&gt;&quot;example.com&quot;&lt;/code&gt; for cross-domain cookies, or use &lt;code&gt;None&lt;/code&gt; for a standard domain cookie.</source>
          <target state="translated">用于语言Cookie的域。将其设置为字符串，例如 &lt;code&gt;&quot;example.com&quot;&lt;/code&gt; 用于跨域cookie，或将&amp;ldquo; &lt;code&gt;None&lt;/code&gt; 用于标准域cookie。</target>
        </trans-unit>
        <trans-unit id="5c99e78398396ac3dd4367988dfe7298ad65d032" translate="yes" xml:space="preserve">
          <source>The dotted paths of logger names define a hierarchy. The &lt;code&gt;project.interesting&lt;/code&gt; logger is considered to be a parent of the &lt;code&gt;project.interesting.stuff&lt;/code&gt; logger; the &lt;code&gt;project&lt;/code&gt; logger is a parent of the &lt;code&gt;project.interesting&lt;/code&gt; logger.</source>
          <target state="translated">记录器名称的虚线路径定义了层次结构。所述 &lt;code&gt;project.interesting&lt;/code&gt; 记录器被认为是所述的母体 &lt;code&gt;project.interesting.stuff&lt;/code&gt; 记录器; 该 &lt;code&gt;project&lt;/code&gt; 记录是一个父 &lt;code&gt;project.interesting&lt;/code&gt; 记录。</target>
        </trans-unit>
        <trans-unit id="5e13710149427fbf66cfeca797b8aff6be0c4f4b" translate="yes" xml:space="preserve">
          <source>The dynamic link will not appear if the number of currently displayed forms exceeds &lt;code&gt;max_num&lt;/code&gt;, or if the user does not have JavaScript enabled.</source>
          <target state="translated">如果当前显示的表单数超过 &lt;code&gt;max_num&lt;/code&gt; ，或者用户未启用JavaScript，则动态链接将不会出现。</target>
        </trans-unit>
        <trans-unit id="0d55a3c97d629d07660c6f636bfc19000aac89ef" translate="yes" xml:space="preserve">
          <source>The easiest solution to this gotcha is to make sure in your view code that the data is ordered according to how you want to display it.</source>
          <target state="translated">解决这个问题最简单的方法是在你的视图代码中确保数据是按照你想显示的方式来排序的。</target>
        </trans-unit>
        <trans-unit id="aefa18e20124a245a37ca6a166c5d0fa5833b82b" translate="yes" xml:space="preserve">
          <source>The easiest way to configure email for local development is to use the &lt;a href=&quot;#topic-email-console-backend&quot;&gt;console&lt;/a&gt; email backend. This backend redirects all email to stdout, allowing you to inspect the content of mail.</source>
          <target state="translated">为本地开发配置电子邮件的最简单方法是使用&lt;a href=&quot;#topic-email-console-backend&quot;&gt;控制台&lt;/a&gt;电子邮件后端。该后端将所有电子邮件重定向到标准输出，使您可以检查邮件的内容。</target>
        </trans-unit>
        <trans-unit id="b18bdad619333227fb015706761f59c6e7dce1e9" translate="yes" xml:space="preserve">
          <source>The easiest way to construct a compliant custom user model is to inherit from &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser&quot;&gt;&lt;code&gt;AbstractBaseUser&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser&quot;&gt;&lt;code&gt;AbstractBaseUser&lt;/code&gt;&lt;/a&gt; provides the core implementation of a user model, including hashed passwords and tokenized password resets. You must then provide some key implementation details:</source>
          <target state="translated">构造兼容的自定义用户模型的最简单方法是从&lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser&quot;&gt; &lt;code&gt;AbstractBaseUser&lt;/code&gt; &lt;/a&gt;继承。&lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser&quot;&gt; &lt;code&gt;AbstractBaseUser&lt;/code&gt; &lt;/a&gt;提供了用户模型的核心实现，包括哈希密码和令牌化密码重置。然后，您必须提供一些关键的实现细节：</target>
        </trans-unit>
        <trans-unit id="102bc6398625e356db3cd3d1071a8edf4afe2996" translate="yes" xml:space="preserve">
          <source>The easiest way to define assets is as a static definition. Using this method, the declaration is an inner &lt;code&gt;Media&lt;/code&gt; class. The properties of the inner class define the requirements.</source>
          <target state="translated">定义资产的最简单方法是静态定义。使用此方法，声明是一个内部 &lt;code&gt;Media&lt;/code&gt; 类。内部类的属性定义了需求。</target>
        </trans-unit>
        <trans-unit id="db27be8a72981483eaa7cc9cc5a678cbb34ecd8b" translate="yes" xml:space="preserve">
          <source>The easiest way to explain actions is by example, so let&amp;rsquo;s dive in.</source>
          <target state="translated">解释动作的最简单方法是通过示例，因此让我们开始吧。</target>
        </trans-unit>
        <trans-unit id="bbbcd95919fd1ecf2e067b0fc6797a2e498acd03" translate="yes" xml:space="preserve">
          <source>The easiest way to use multiple databases is to set up a database routing scheme. The default routing scheme ensures that objects remain &amp;lsquo;sticky&amp;rsquo; to their original database (i.e., an object retrieved from the &lt;code&gt;foo&lt;/code&gt; database will be saved on the same database). The default routing scheme ensures that if a database isn&amp;rsquo;t specified, all queries fall back to the &lt;code&gt;default&lt;/code&gt; database.</source>
          <target state="translated">使用多个数据库的最简单方法是设置数据库路由方案。默认的路由方案可确保对象保持对原始数据库的&amp;ldquo;粘性&amp;rdquo;（即，从 &lt;code&gt;foo&lt;/code&gt; 数据库检索的对象将保存在同一数据库中）。默认路由方案可确保如果未指定数据库，则所有查询都将回退到 &lt;code&gt;default&lt;/code&gt; 数据库。</target>
        </trans-unit>
        <trans-unit id="5dc09f982934c220e0648dd7dc1424777a9b07ff" translate="yes" xml:space="preserve">
          <source>The email address that error messages come from, such as those sent to &lt;a href=&quot;#std:setting-ADMINS&quot;&gt;&lt;code&gt;ADMINS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-MANAGERS&quot;&gt;&lt;code&gt;MANAGERS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">错误消息来自的电子邮件地址，例如发送给&lt;a href=&quot;#std:setting-ADMINS&quot;&gt; &lt;code&gt;ADMINS&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#std:setting-MANAGERS&quot;&gt; &lt;code&gt;MANAGERS&lt;/code&gt; &lt;/a&gt;的电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="b2aa2cff626dddc91132ca31ab8a805481ff856c" translate="yes" xml:space="preserve">
          <source>The email backend class has the following methods:</source>
          <target state="translated">电子邮件后台类有以下方法。</target>
        </trans-unit>
        <trans-unit id="4d71c5b436fb244d32f220ecce35712f91163ed6" translate="yes" xml:space="preserve">
          <source>The equality method is defined such that instances with the same primary key value and the same concrete class are considered equal, except that instances with a primary key value of &lt;code&gt;None&lt;/code&gt; aren&amp;rsquo;t equal to anything except themselves. For proxy models, concrete class is defined as the model&amp;rsquo;s first non-proxy parent; for all other models it&amp;rsquo;s simply the model&amp;rsquo;s class.</source>
          <target state="translated">定义相等方法，以便将具有相同主键值和相同具体类的实例视为相等，除了具有主键值&amp;ldquo; &lt;code&gt;None&lt;/code&gt; 实例除自身以外不等于任何东西。对于代理模型，将具体类定义为模型的第一个非代理父类；对于所有其他模型，它只是模型的类。</target>
        </trans-unit>
        <trans-unit id="9ebf4117d2b8a093f5d8b0d1ee0394b967c0414e" translate="yes" xml:space="preserve">
          <source>The equivalent calculation in Python is:</source>
          <target state="translated">在Python中的等价计算是:</target>
        </trans-unit>
        <trans-unit id="5efbfe2be254c3accd765a74009d40714d479343" translate="yes" xml:space="preserve">
          <source>The error code used by &lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; if validation fails. Defaults to &lt;code&gt;&quot;invalid&quot;&lt;/code&gt;.</source>
          <target state="translated">如果验证失败，&lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; &lt;/a&gt;使用的错误代码。默认为 &lt;code&gt;&quot;invalid&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b5adb27a8996cdfa0262e0146f124cdf9dba05a" translate="yes" xml:space="preserve">
          <source>The error code used by &lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; if validation fails. Defaults to &lt;code&gt;&quot;null_characters_not_allowed&quot;&lt;/code&gt;.</source>
          <target state="translated">如果验证失败，&lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; &lt;/a&gt;使用的错误代码。默认为 &lt;code&gt;&quot;null_characters_not_allowed&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="24202a6a3b9947bb61029f3e19e5678ab0a3296e" translate="yes" xml:space="preserve">
          <source>The error message used by &lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; if validation fails. Defaults to &lt;code&gt;&quot;Enter a valid email address&quot;&lt;/code&gt;.</source>
          <target state="translated">如果验证失败，&lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; &lt;/a&gt;使用的错误消息。默认为 &lt;code&gt;&quot;Enter a valid email address&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79cc7e5b6a815e9ec647851b99499ab73ff67c57" translate="yes" xml:space="preserve">
          <source>The error message used by &lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; if validation fails. Defaults to &lt;code&gt;&quot;Enter a valid value&quot;&lt;/code&gt;.</source>
          <target state="translated">如果验证失败，&lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; &lt;/a&gt;使用的错误消息。默认为 &lt;code&gt;&quot;Enter a valid value&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="057fab28e3430ed0f7b4a055703ab67be3eb226b" translate="yes" xml:space="preserve">
          <source>The error message used by &lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; if validation fails. Defaults to &lt;code&gt;&quot;Null characters are not allowed.&quot;&lt;/code&gt;.</source>
          <target state="translated">如果验证失败，&lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; &lt;/a&gt;使用的错误消息。默认为 &lt;code&gt;&quot;Null characters are not allowed.&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61a770a7f28e3325a45dcd70e8e1fa45b0d96d7e" translate="yes" xml:space="preserve">
          <source>The error page, however, is not very friendly, so you may want to provide your own view for handling this condition. To do this, set the &lt;a href=&quot;settings#std:setting-CSRF_FAILURE_VIEW&quot;&gt;&lt;code&gt;CSRF_FAILURE_VIEW&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">但是，错误页面不是很友好，因此您可能需要提供自己的视图来处理这种情况。为此，请设置&lt;a href=&quot;settings#std:setting-CSRF_FAILURE_VIEW&quot;&gt; &lt;code&gt;CSRF_FAILURE_VIEW&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="8d65d9525c27d19f320d6dc01f0885b38569c7fc" translate="yes" xml:space="preserve">
          <source>The event is fired using the &lt;a href=&quot;index#contrib-admin-jquery&quot;&gt;django.jQuery namespace&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;index#contrib-admin-jquery&quot;&gt;django.jQuery命名空间&lt;/a&gt;触发该事件。</target>
        </trans-unit>
        <trans-unit id="1b539ba0434b08941170f2cd1f818a49da908b66" translate="yes" xml:space="preserve">
          <source>The exact URLs that will match are slightly more constrained. For example, the year 10000 will no longer match since the year integers are constrained to be exactly four digits long.</source>
          <target state="translated">匹配的确切URL会受到更多的限制。例如,10000年将不再匹配,因为年份的整数被限制为四位数长。</target>
        </trans-unit>
        <trans-unit id="b4dbb4fcb65cef76c61031d37fb2287e26d8f480" translate="yes" xml:space="preserve">
          <source>The exact output will vary depending on the database you are using. The example above is generated for PostgreSQL.</source>
          <target state="translated">确切的输出会根据你使用的数据库而有所不同。上面的例子是为PostgreSQL生成的。</target>
        </trans-unit>
        <trans-unit id="6244d10392df2eaaeb16d3a53c4aefd2551507e9" translate="yes" xml:space="preserve">
          <source>The exact type of the return value depends on the backend that loaded the template. Each backend has its own &lt;code&gt;Template&lt;/code&gt; class.</source>
          <target state="translated">返回值的确切类型取决于加载模板的后端。每个后端都有自己的 &lt;code&gt;Template&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="d258cbef311d29cf54b7972437f615ede5dab5c9" translate="yes" xml:space="preserve">
          <source>The example above is merely illustrative.</source>
          <target state="translated">上面的例子只是说明性的。</target>
        </trans-unit>
        <trans-unit id="ce3e4f139b39bcf4b91e72adf60a54a7d1683bfb" translate="yes" xml:space="preserve">
          <source>The example above shows a full &lt;code&gt;from_db()&lt;/code&gt; implementation to clarify how that is done. In this case it would be possible to use a &lt;code&gt;super()&lt;/code&gt; call in the &lt;code&gt;from_db()&lt;/code&gt; method.</source>
          <target state="translated">上面的示例显示了完整的 &lt;code&gt;from_db()&lt;/code&gt; 实现，以阐明如何实现。在这种情况下，可以在 &lt;code&gt;from_db()&lt;/code&gt; 方法中使用 &lt;code&gt;super()&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="09ae48bd2b690b219baf1e4df51329cbdd48516f" translate="yes" xml:space="preserve">
          <source>The example above shows a full &lt;code&gt;from_db()&lt;/code&gt; implementation to clarify how that is done. In this case it would of course be possible to use &lt;code&gt;super()&lt;/code&gt; call in the &lt;code&gt;from_db()&lt;/code&gt; method.</source>
          <target state="translated">上面的示例显示了完整的 &lt;code&gt;from_db()&lt;/code&gt; 实现，以阐明如何实现。在这种情况下，当然可以在 &lt;code&gt;from_db()&lt;/code&gt; 方法中使用 &lt;code&gt;super()&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="01d04d9726b7a687dfcd3e1f1be1c2f02aa93f43" translate="yes" xml:space="preserve">
          <source>The example above shows the &lt;code&gt;make_published&lt;/code&gt; action defined as a function. That&amp;rsquo;s perfectly fine, but it&amp;rsquo;s not perfect from a code design point of view: since the action is tightly coupled to the &lt;code&gt;Article&lt;/code&gt; object, it makes sense to hook the action to the &lt;code&gt;ArticleAdmin&lt;/code&gt; object itself.</source>
          <target state="translated">上面的示例显示了定义为函数的 &lt;code&gt;make_published&lt;/code&gt; 操作。很好，但是从代码设计的角度来看，这并不是完美的：由于操作与 &lt;code&gt;Article&lt;/code&gt; 对象紧密耦合，因此将操作挂钩到 &lt;code&gt;ArticleAdmin&lt;/code&gt; 对象本身是有意义的。</target>
        </trans-unit>
        <trans-unit id="70fd6fd83f7a6415e49b18c6e810e778afba736b" translate="yes" xml:space="preserve">
          <source>The example below shows a custom database-backed session engine that includes an additional database column to store an account ID (thus providing an option to query the database for all active sessions for an account):</source>
          <target state="translated">下面的例子显示了一个自定义的数据库支持的会话引擎,它包括一个额外的数据库列来存储账户ID(从而提供了一个选项来查询数据库中一个账户的所有活动会话)。</target>
        </trans-unit>
        <trans-unit id="bdd75b3461c74472c1d252b5b38ac3cd7b71a1bc" translate="yes" xml:space="preserve">
          <source>The example creates a file at &lt;code&gt;templates/admin/base_site.html&lt;/code&gt; that uses the configured project-level &lt;code&gt;templates&lt;/code&gt; directory to override &lt;code&gt;admin/base_site.html&lt;/code&gt;.</source>
          <target state="translated">该示例在 &lt;code&gt;templates/admin/base_site.html&lt;/code&gt; 创建一个文件，该文件使用配置的项目级 &lt;code&gt;templates&lt;/code&gt; 目录覆盖 &lt;code&gt;admin/base_site.html&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="70d2d5dcaec3c018f486ad3a35bf450d09973557" translate="yes" xml:space="preserve">
          <source>The example output is from the cities data source, loaded above, which evidently contains one layer, called &lt;code&gt;&quot;cities&quot;&lt;/code&gt;, which contains three point features. For simplicity, the examples below assume that you&amp;rsquo;ve stored that layer in the variable &lt;code&gt;layer&lt;/code&gt;:</source>
          <target state="translated">示例输出来自上面加载的城市数据源，该数据源显然包含一层称为 &lt;code&gt;&quot;cities&quot;&lt;/code&gt; 图层，该图层包含三个点要素。为简单起见，下面的示例假定您已将该层存储在变量 &lt;code&gt;layer&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="6691f770da4c54ad86e364f335c9b091bbf02a5d" translate="yes" xml:space="preserve">
          <source>The examples below assume you are using function-based views. If you are working with class-based views, you can refer to &lt;a href=&quot;../topics/class-based-views/intro#id1&quot;&gt;Decorating class-based views&lt;/a&gt;.</source>
          <target state="translated">下面的示例假定您使用的是基于函数的视图。如果使用基于类的视图，则可以参考&lt;a href=&quot;../topics/class-based-views/intro#id1&quot;&gt;装饰基于类的视图&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f3acd75e8ac886e7361e65f7b3411b9fa504b1b4" translate="yes" xml:space="preserve">
          <source>The examples below show the SQL equivalent for the lookups in the different types of raster support. The same pattern applies to all spatial lookups.</source>
          <target state="translated">下面的例子显示了不同类型的栅格支持中的查找的SQL等价物。同样的模式适用于所有的空间查找。</target>
        </trans-unit>
        <trans-unit id="0381bb676822bd2c1fc32593d3eafed41c0ed3d5" translate="yes" xml:space="preserve">
          <source>The examples in the previous section have hard-coded the fact that the view is cached, because &lt;code&gt;cache_page&lt;/code&gt; alters the &lt;code&gt;my_view&lt;/code&gt; function in place. This approach couples your view to the cache system, which is not ideal for several reasons. For instance, you might want to reuse the view functions on another, cache-less site, or you might want to distribute the views to people who might want to use them without being cached. The solution to these problems is to specify the per-view cache in the URLconf rather than next to the view functions themselves.</source>
          <target state="translated">上一节中的示例对视图被缓存的事实进行了硬编码，因为 &lt;code&gt;cache_page&lt;/code&gt; 改变了 &lt;code&gt;my_view&lt;/code&gt; 函数的位置。这种方法将您的视图耦合到高速缓存系统，由于多种原因，这种方法并不理想。例如，您可能想在另一个无缓存的站点上重用视图功能，或者可能希望将视图分发给可能希望在不被缓存的情况下使用它们的人。这些问题的解决方案是在URLconf中指定每个视图的缓存，而不是在视图函数本身旁边。</target>
        </trans-unit>
        <trans-unit id="dc504c1e75f70f01937775c1721634f5639b416b" translate="yes" xml:space="preserve">
          <source>The examples in this section are designed to show how to force Django to execute a subquery. In some cases it may be possible to write an equivalent queryset that performs the same task more clearly or efficiently.</source>
          <target state="translated">本节中的例子是为了展示如何强制Django执行一个子查询。在某些情况下,可以写一个等价的查询集,更清楚或更有效地执行同样的任务。</target>
        </trans-unit>
        <trans-unit id="e3ba78a8e40dda280647c05bf08b8f045ba77f2b" translate="yes" xml:space="preserve">
          <source>The examples in this section import the &lt;code&gt;SessionStore&lt;/code&gt; object directly from the &lt;code&gt;django.contrib.sessions.backends.db&lt;/code&gt; backend. In your own code, you should consider importing &lt;code&gt;SessionStore&lt;/code&gt; from the session engine designated by &lt;a href=&quot;../../ref/settings#std:setting-SESSION_ENGINE&quot;&gt;&lt;code&gt;SESSION_ENGINE&lt;/code&gt;&lt;/a&gt;, as below:</source>
          <target state="translated">本节中的示例直接从 &lt;code&gt;django.contrib.sessions.backends.db&lt;/code&gt; 后端导入 &lt;code&gt;SessionStore&lt;/code&gt; 对象。在您自己的代码中，应该考虑从&lt;a href=&quot;../../ref/settings#std:setting-SESSION_ENGINE&quot;&gt; &lt;code&gt;SESSION_ENGINE&lt;/code&gt; &lt;/a&gt;指定的会话引擎导入 &lt;code&gt;SessionStore&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="e35dffac0488c2561c931a83c6fe1cf1d8a50419" translate="yes" xml:space="preserve">
          <source>The exception raised when an error occurs in a call to the underlying &lt;code&gt;geoip2&lt;/code&gt; library.</source>
          <target state="translated">在对基础 &lt;code&gt;geoip2&lt;/code&gt; 库的调用中发生错误时引发的异常。</target>
        </trans-unit>
        <trans-unit id="d9a23b0961a565f479b556667da6987637df208d" translate="yes" xml:space="preserve">
          <source>The exception reporter is responsible for compiling the exception report data, and formatting it as text or HTML appropriately. (The exception reporter uses &lt;a href=&quot;../ref/settings#std:setting-DEFAULT_EXCEPTION_REPORTER_FILTER&quot;&gt;&lt;code&gt;DEFAULT_EXCEPTION_REPORTER_FILTER&lt;/code&gt;&lt;/a&gt; when preparing the exception report data.)</source>
          <target state="translated">异常报告程序负责编译异常报告数据，并适当地将其格式化为文本或HTML。（异常报告器在准备异常报告数据时使用&lt;a href=&quot;../ref/settings#std:setting-DEFAULT_EXCEPTION_REPORTER_FILTER&quot;&gt; &lt;code&gt;DEFAULT_EXCEPTION_REPORTER_FILTER&lt;/code&gt; &lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="cda3c2363ac6d38861a1a8d767657d0f57cada68" translate="yes" xml:space="preserve">
          <source>The extension of class-based views isn&amp;rsquo;t limited to using mixins. You can also use decorators. Since class-based views aren&amp;rsquo;t functions, decorating them works differently depending on if you&amp;rsquo;re using &lt;code&gt;as_view()&lt;/code&gt; or creating a subclass.</source>
          <target state="translated">基于类的视图的扩展不仅限于使用混合。您也可以使用装饰器。由于基于类的视图不是函数，因此根据您使用的是 &lt;code&gt;as_view()&lt;/code&gt; 还是创建子类，对其进行修饰的工作方式有所不同。</target>
        </trans-unit>
        <trans-unit id="f0757fbf21f596c81165c37d3764eb4cbc8188fc" translate="yes" xml:space="preserve">
          <source>The failure messages given by most of these assertion methods can be customized with the &lt;code&gt;msg_prefix&lt;/code&gt; argument. This string will be prefixed to any failure message generated by the assertion. This allows you to provide additional details that may help you to identify the location and cause of a failure in your test suite.</source>
          <target state="translated">可以使用 &lt;code&gt;msg_prefix&lt;/code&gt; 参数自定义大多数断言方法给出的故障消息。该字符串将作为断言生成的任何失败消息的前缀。这使您可以提供其他详细信息，以帮助您确定测试套件中的位置和失败原因。</target>
        </trans-unit>
        <trans-unit id="d89de5b0252a42331ac71056c598b5e5535c2805" translate="yes" xml:space="preserve">
          <source>The fallback on &lt;code&gt;DATE_INPUT_FORMATS&lt;/code&gt; in the default &lt;code&gt;input_formats&lt;/code&gt; was added.</source>
          <target state="translated">添加了默认 &lt;code&gt;input_formats&lt;/code&gt; 法 &lt;code&gt;DATE_INPUT_FORMATS&lt;/code&gt; 的后备广告。</target>
        </trans-unit>
        <trans-unit id="227e5834572c4e194e4fc54218042f6fd22390e4" translate="yes" xml:space="preserve">
          <source>The fastest, most efficient type of cache supported natively by Django, &lt;a href=&quot;https://memcached.org/&quot;&gt;Memcached&lt;/a&gt; is an entirely memory-based cache server, originally developed to handle high loads at LiveJournal.com and subsequently open-sourced by Danga Interactive. It is used by sites such as Facebook and Wikipedia to reduce database access and dramatically increase site performance.</source>
          <target state="translated">&lt;a href=&quot;https://memcached.org/&quot;&gt;Memcached&lt;/a&gt;是Django原生支持的最快，最高效的缓存类型，是一种完全基于内存的缓存服务器，最初是为处理LiveJournal.com上的高负载而开发的，随后由Danga Interactive开源。Facebook和Wikipedia等网站使用它来减少数据库访问并显着提高网站性能。</target>
        </trans-unit>
        <trans-unit id="b74b1508edbbb23e6a3000370c6cd096da1fa665" translate="yes" xml:space="preserve">
          <source>The field allows choosing from files inside a certain directory. It takes five extra arguments; only &lt;code&gt;path&lt;/code&gt; is required:</source>
          <target state="translated">该字段允许从某个目录内的文件中进行选择。它需要五个额外的参数。只需要 &lt;code&gt;path&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="341f0b8c7b2bc92e1fd6f729ca5049a35daf85db" translate="yes" xml:space="preserve">
          <source>The field always accepts strings in ISO 8601 formatted dates or similar recognized by &lt;a href=&quot;../utils#django.utils.dateparse.parse_datetime&quot;&gt;&lt;code&gt;parse_datetime()&lt;/code&gt;&lt;/a&gt;. Some examples are:</source>
          <target state="translated">该字段始终接受ISO 8601格式的日期或&lt;a href=&quot;../utils#django.utils.dateparse.parse_datetime&quot;&gt; &lt;code&gt;parse_datetime()&lt;/code&gt; &lt;/a&gt;可以识别的类似日期的字符串。一些例子是：</target>
        </trans-unit>
        <trans-unit id="8261a27fdaafb3905c5f94eeccc1746f11d92091" translate="yes" xml:space="preserve">
          <source>The field does not support escaping of the delimiter, so be careful in cases where the delimiter is a valid character in the underlying field. The delimiter does not need to be only one character.</source>
          <target state="translated">该字段不支持定界符的转义,所以当定界符是底层字段中的有效字符时,要小心。定界符不需要只有一个字符。</target>
        </trans-unit>
        <trans-unit id="4541fd11f662c194c72fa461738a7803380d24f9" translate="yes" xml:space="preserve">
          <source>The field is only automatically updated when calling &lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;Model.save()&lt;/code&gt;&lt;/a&gt;. The field isn&amp;rsquo;t updated when making updates to other fields in other ways such as &lt;a href=&quot;querysets#django.db.models.query.QuerySet.update&quot;&gt;&lt;code&gt;QuerySet.update()&lt;/code&gt;&lt;/a&gt;, though you can specify a custom value for the field in an update like that.</source>
          <target state="translated">该字段仅在调用&lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;Model.save()&lt;/code&gt; &lt;/a&gt;时自动更新。以其他方式（例如&lt;a href=&quot;querysets#django.db.models.query.QuerySet.update&quot;&gt; &lt;code&gt;QuerySet.update()&lt;/code&gt; )&lt;/a&gt;对其他字段进行更新时，该字段不会更新，尽管您可以像这样在更新中为该字段指定自定义值。</target>
        </trans-unit>
        <trans-unit id="38b4adec7d5052603bed698a4b8c5e5c3538d594" translate="yes" xml:space="preserve">
          <source>The field lookups that equate to &lt;code&gt;LIKE&lt;/code&gt; SQL statements (&lt;code&gt;iexact&lt;/code&gt;, &lt;code&gt;contains&lt;/code&gt;, &lt;code&gt;icontains&lt;/code&gt;, &lt;code&gt;startswith&lt;/code&gt;, &lt;code&gt;istartswith&lt;/code&gt;, &lt;code&gt;endswith&lt;/code&gt; and &lt;code&gt;iendswith&lt;/code&gt;) will automatically escape the two special characters used in &lt;code&gt;LIKE&lt;/code&gt; statements &amp;ndash; the percent sign and the underscore. (In a &lt;code&gt;LIKE&lt;/code&gt; statement, the percent sign signifies a multiple-character wildcard and the underscore signifies a single-character wildcard.)</source>
          <target state="translated">相当于 &lt;code&gt;LIKE&lt;/code&gt; SQL语句（ &lt;code&gt;iexact&lt;/code&gt; ， &lt;code&gt;contains&lt;/code&gt; ， &lt;code&gt;icontains&lt;/code&gt; ， &lt;code&gt;startswith&lt;/code&gt; ， &lt;code&gt;istartswith&lt;/code&gt; ， &lt;code&gt;endswith&lt;/code&gt; 和 &lt;code&gt;iendswith&lt;/code&gt; ）的字段查找将自动转义 &lt;code&gt;LIKE&lt;/code&gt; 语句中使用的两个特殊字符-百分号和下划线。 （在 &lt;code&gt;LIKE&lt;/code&gt; 语句中，百分号表示多字符通配符，下划线表示单字符通配符。）</target>
        </trans-unit>
        <trans-unit id="1e41ee0c4c4e7718ea727f9a22cab41c7b40064f" translate="yes" xml:space="preserve">
          <source>The field names in &lt;code&gt;list_display&lt;/code&gt; will also appear as CSS classes in the HTML output, in the form of &lt;code&gt;column-&amp;lt;field_name&amp;gt;&lt;/code&gt; on each &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; element. This can be used to set column widths in a CSS file for example.</source>
          <target state="translated">&lt;code&gt;list_display&lt;/code&gt; 中的字段名称还将在HTML输出中显示为CSS类，在每个 &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; 元素上以 &lt;code&gt;column-&amp;lt;field_name&amp;gt;&lt;/code&gt; 的形式出现。例如，这可用于设置CSS文件中的列宽。</target>
        </trans-unit>
        <trans-unit id="d716dce5bada681604a2c53c84250caf27b95a35" translate="yes" xml:space="preserve">
          <source>The field on the current object instance that can be used to determine the name of a candidate template. If either &lt;code&gt;template_name_field&lt;/code&gt; itself or the value of the &lt;code&gt;template_name_field&lt;/code&gt; on the current object instance is &lt;code&gt;None&lt;/code&gt;, the object will not be used for a candidate template name.</source>
          <target state="translated">当前对象实例上的字段，可用于确定候选模板的名称。如果 &lt;code&gt;template_name_field&lt;/code&gt; 本身或当前对象实例上的 &lt;code&gt;template_name_field&lt;/code&gt; 的值为 &lt;code&gt;None&lt;/code&gt; ，则该对象将不用作候选模板名称。</target>
        </trans-unit>
        <trans-unit id="630d8b8702ce27d6f8645d1b86436f4a7464e445" translate="yes" xml:space="preserve">
          <source>The field on the related object that the relation is to. By default, Django uses the primary key of the related object. If you reference a different field, that field must have &lt;code&gt;unique=True&lt;/code&gt;.</source>
          <target state="translated">关系所关联的相关对象上的字段。默认情况下，Django使用相关对象的主键。如果引用其他字段，则该字段必须具有 &lt;code&gt;unique=True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e76cec744d379f4dcccb2ad310314d26fd8d60e" translate="yes" xml:space="preserve">
          <source>The field specified in a lookup has to be the name of a model field. There&amp;rsquo;s one exception though, in case of a &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; you can specify the field name suffixed with &lt;code&gt;_id&lt;/code&gt;. In this case, the value parameter is expected to contain the raw value of the foreign model&amp;rsquo;s primary key. For example:</source>
          <target state="translated">查找中指定的字段必须是模型字段的名称。但是，有一个例外，如果是&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;，则可以指定后缀 &lt;code&gt;_id&lt;/code&gt; 的字段名称。在这种情况下，value参数应包含外部模型的主键的原始值。例如：</target>
        </trans-unit>
        <trans-unit id="4175f90a0443952f19ac0063efac9cb36b524f33" translate="yes" xml:space="preserve">
          <source>The field&amp;rsquo;s label wrapped in the appropriate HTML &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; tag. This includes the form&amp;rsquo;s &lt;a href=&quot;../../ref/forms/api#django.forms.Form.label_suffix&quot;&gt;&lt;code&gt;label_suffix&lt;/code&gt;&lt;/a&gt;. For example, the default &lt;code&gt;label_suffix&lt;/code&gt; is a colon:</source>
          <target state="translated">字段的标签包装在适当的HTML &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 标签中。这包括表单的&lt;a href=&quot;../../ref/forms/api#django.forms.Form.label_suffix&quot;&gt; &lt;code&gt;label_suffix&lt;/code&gt; &lt;/a&gt;。例如，默认的 &lt;code&gt;label_suffix&lt;/code&gt; 是冒号：</target>
        </trans-unit>
        <trans-unit id="448005ac819f6d743923e91d627be3453197eb30" translate="yes" xml:space="preserve">
          <source>The field&amp;rsquo;s maximum allowable length is defined by &lt;a href=&quot;../../ref/forms/fields#django.forms.CharField.max_length&quot;&gt;&lt;code&gt;max_length&lt;/code&gt;&lt;/a&gt;. This does two things. It puts a &lt;code&gt;maxlength=&quot;100&quot;&lt;/code&gt; on the HTML &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; (so the browser should prevent the user from entering more than that number of characters in the first place). It also means that when Django receives the form back from the browser, it will validate the length of the data.</source>
          <target state="translated">字段的最大允许长度由&lt;a href=&quot;../../ref/forms/fields#django.forms.CharField.max_length&quot;&gt; &lt;code&gt;max_length&lt;/code&gt; &lt;/a&gt;定义。这有两件事。它将 &lt;code&gt;maxlength=&quot;100&quot;&lt;/code&gt; 放在HTML &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 上（因此浏览器应首先防止用户输入超过该数量的字符）。这也意味着，当Django从浏览器接收回表单时，它将验证数据的长度。</target>
        </trans-unit>
        <trans-unit id="cf3875fec24fc1333090caee45483067dc8d3dbb" translate="yes" xml:space="preserve">
          <source>The field-specific output honors the form object&amp;rsquo;s &lt;code&gt;auto_id&lt;/code&gt; setting:</source>
          <target state="translated">特定于字段的输出采用表单对象的 &lt;code&gt;auto_id&lt;/code&gt; 设置：</target>
        </trans-unit>
        <trans-unit id="ddb5416909036f134c988459a65406a38acce804" translate="yes" xml:space="preserve">
          <source>The fields to include can be specified using the &lt;code&gt;fields&lt;/code&gt; and &lt;code&gt;exclude&lt;/code&gt; keyword arguments, or the corresponding attributes on the &lt;code&gt;ModelForm&lt;/code&gt; inner &lt;code&gt;Meta&lt;/code&gt; class. Please see the &lt;code&gt;ModelForm&lt;/code&gt;&lt;a href=&quot;#modelforms-selecting-fields&quot;&gt;Selecting the fields to use&lt;/a&gt; documentation.</source>
          <target state="translated">可以使用这些 &lt;code&gt;fields&lt;/code&gt; 指定要包括的字段，并 &lt;code&gt;exclude&lt;/code&gt; 关键字参数或 &lt;code&gt;ModelForm&lt;/code&gt; 内部 &lt;code&gt;Meta&lt;/code&gt; 类上的相应属性。请参阅 &lt;code&gt;ModelForm&lt;/code&gt; &lt;a href=&quot;#modelforms-selecting-fields&quot;&gt;选择要使用&lt;/a&gt;文档的字段。</target>
        </trans-unit>
        <trans-unit id="e6b9074b6e7d23d0ad5da439d0ade59f87da165a" translate="yes" xml:space="preserve">
          <source>The file backend writes emails to a file. A new file is created for each new session that is opened on this backend. The directory to which the files are written is either taken from the &lt;a href=&quot;../ref/settings#std:setting-EMAIL_FILE_PATH&quot;&gt;&lt;code&gt;EMAIL_FILE_PATH&lt;/code&gt;&lt;/a&gt; setting or from the &lt;code&gt;file_path&lt;/code&gt; keyword when creating a connection with &lt;a href=&quot;#django.core.mail.get_connection&quot;&gt;&lt;code&gt;get_connection()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文件后端将电子邮件写入文件。将为此后端打开的每个新会话创建一个新文件。在使用&lt;a href=&quot;#django.core.mail.get_connection&quot;&gt; &lt;code&gt;get_connection()&lt;/code&gt; &lt;/a&gt;创建连接时，可以从&lt;a href=&quot;../ref/settings#std:setting-EMAIL_FILE_PATH&quot;&gt; &lt;code&gt;EMAIL_FILE_PATH&lt;/code&gt; &lt;/a&gt;设置或从 &lt;code&gt;file_path&lt;/code&gt; 关键字获取写入文件的目录。</target>
        </trans-unit>
        <trans-unit id="d4163f6ace1ca1417ecbd010ee4e813eba341221" translate="yes" xml:space="preserve">
          <source>The file is saved as part of saving the model in the database, so the actual file name used on disk cannot be relied on until after the model has been saved.</source>
          <target state="translated">该文件是作为在数据库中保存模型的一部分而保存的,因此在保存模型后才能依靠磁盘上实际使用的文件名。</target>
        </trans-unit>
        <trans-unit id="41f33b596b6e1ec2465b3f2736843f4c41a196a5" translate="yes" xml:space="preserve">
          <source>The file storage engine to use when collecting static files with the &lt;a href=&quot;contrib/staticfiles#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; management command.</source>
          <target state="translated">使用&lt;a href=&quot;contrib/staticfiles#django-admin-collectstatic&quot;&gt; &lt;code&gt;collectstatic&lt;/code&gt; &lt;/a&gt;管理命令收集静态文件时要使用的文件存储引擎。</target>
        </trans-unit>
        <trans-unit id="035804f436f66d4afdd615a6e4e8aa06c1c2c140" translate="yes" xml:space="preserve">
          <source>The file system permissions that the directory will receive when it is saved. Defaults to &lt;a href=&quot;../settings#std:setting-FILE_UPLOAD_DIRECTORY_PERMISSIONS&quot;&gt;&lt;code&gt;FILE_UPLOAD_DIRECTORY_PERMISSIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">目录在保存时将收到的文件系统权限。默认为&lt;a href=&quot;../settings#std:setting-FILE_UPLOAD_DIRECTORY_PERMISSIONS&quot;&gt; &lt;code&gt;FILE_UPLOAD_DIRECTORY_PERMISSIONS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c25797eed4c376aabbae73535692d312a1639d96" translate="yes" xml:space="preserve">
          <source>The file system permissions that the file will receive when it is saved. Defaults to &lt;a href=&quot;../settings#std:setting-FILE_UPLOAD_PERMISSIONS&quot;&gt;&lt;code&gt;FILE_UPLOAD_PERMISSIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">保存文件时将收到的文件系统权限。默认为&lt;a href=&quot;../settings#std:setting-FILE_UPLOAD_PERMISSIONS&quot;&gt; &lt;code&gt;FILE_UPLOAD_PERMISSIONS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6c74283db4d94eff6e28ffec0fc60afe81c7dfa3" translate="yes" xml:space="preserve">
          <source>The file will be closed automatically, so don&amp;rsquo;t open it with a context manager.</source>
          <target state="translated">该文件将自动关闭，因此请勿使用上下文管理器打开它。</target>
        </trans-unit>
        <trans-unit id="0b4c94442b294eae671b5179401a9e9dedbbf050" translate="yes" xml:space="preserve">
          <source>The file-based backend serializes and stores each cache value as a separate file. To use this backend set &lt;a href=&quot;../ref/settings#std:setting-CACHES-BACKEND&quot;&gt;&lt;code&gt;BACKEND&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;&quot;django.core.cache.backends.filebased.FileBasedCache&quot;&lt;/code&gt; and &lt;a href=&quot;../ref/settings#std:setting-CACHES-LOCATION&quot;&gt;&lt;code&gt;LOCATION&lt;/code&gt;&lt;/a&gt; to a suitable directory. For example, to store cached data in &lt;code&gt;/var/tmp/django_cache&lt;/code&gt;, use this setting:</source>
          <target state="translated">基于文件的后端将每个缓存值序列化并存储为单独的文件。要使用&lt;a href=&quot;../ref/settings#std:setting-CACHES-BACKEND&quot;&gt; &lt;code&gt;BACKEND&lt;/code&gt; &lt;/a&gt;，请将BACKEND设置为 &lt;code&gt;&quot;django.core.cache.backends.filebased.FileBasedCache&quot;&lt;/code&gt; 并将&lt;a href=&quot;../ref/settings#std:setting-CACHES-LOCATION&quot;&gt; &lt;code&gt;LOCATION&lt;/code&gt; 设置&lt;/a&gt;到合适的目录。例如，要将缓存的数据存储在 &lt;code&gt;/var/tmp/django_cache&lt;/code&gt; 中，请使用以下设置：</target>
        </trans-unit>
        <trans-unit id="4e75cf716c59afe86365331aee1878ffc6c24382" translate="yes" xml:space="preserve">
          <source>The filename that was originally given to the file. This may or may not be taken into account when determining the final destination path.</source>
          <target state="translated">最初给文件的文件名。在确定最终目标路径时,可能会考虑到,也可能不会考虑到。</target>
        </trans-unit>
        <trans-unit id="c7080193b49ff0446e5e91ef03b953c27eb57654" translate="yes" xml:space="preserve">
          <source>The filter returns &lt;code&gt;0&lt;/code&gt; for an undefined variable.</source>
          <target state="translated">过滤器为未定义的变量返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d3221c79e9c5f913b1c25c6eb2dd053b109e50e" translate="yes" xml:space="preserve">
          <source>The final query does the inversion (&lt;code&gt;27&lt;/code&gt; to &lt;code&gt;-27&lt;/code&gt;) directly in the database. The reason for doing this is that if the &lt;code&gt;self.rhs&lt;/code&gt; is something else than a plain integer value (for example an &lt;code&gt;F()&lt;/code&gt; reference) we can&amp;rsquo;t do the transformations in Python.</source>
          <target state="translated">最终查询直接在数据库中执行从 &lt;code&gt;27&lt;/code&gt; 到 &lt;code&gt;-27&lt;/code&gt; 的反转。这样做的原因是，如果 &lt;code&gt;self.rhs&lt;/code&gt; 不同于普通的整数值（例如 &lt;code&gt;F()&lt;/code&gt; 引用），我们将无法在Python中进行转换。</target>
        </trans-unit>
        <trans-unit id="7c7ca685cf1726772feb729af332bf567c40b4c5" translate="yes" xml:space="preserve">
          <source>The final step in setting up your virtual environment is to activate it:</source>
          <target state="translated">设置虚拟环境的最后一步是激活它。</target>
        </trans-unit>
        <trans-unit id="895d5d8ba62111caffdbf5c689da962e53c48cdb" translate="yes" xml:space="preserve">
          <source>The final step is to enter your password. You will be asked to enter your password twice, the second time as a confirmation of the first.</source>
          <target state="translated">最后一步是输入密码。你会被要求输入两次密码,第二次是对第一次的确认。</target>
        </trans-unit>
        <trans-unit id="26c7aa22741db0888336489a775e113abc6e5017" translate="yes" xml:space="preserve">
          <source>The first argument is a &lt;a href=&quot;../../topics/http/urls#naming-url-patterns&quot;&gt;URL pattern name&lt;/a&gt;. It can be a quoted literal or any other context variable. Additional arguments are optional and should be space-separated values that will be used as arguments in the URL. The example above shows passing positional arguments. Alternatively you may use keyword syntax:</source>
          <target state="translated">第一个参数是&lt;a href=&quot;../../topics/http/urls#naming-url-patterns&quot;&gt;URL模式名称&lt;/a&gt;。它可以是带引号的文字或任何其他上下文变量。其他参数是可选的，并且应为以空格分隔的值，这些值将用作URL中的参数。上面的示例显示了传递位置参数。或者，您可以使用关键字语法：</target>
        </trans-unit>
        <trans-unit id="aacf6fd5691502e26079ea4443424e381b2c587d" translate="yes" xml:space="preserve">
          <source>The first argument of &lt;code&gt;MigrationWriter.register_serializer()&lt;/code&gt; is a type or iterable of types that should use the serializer.</source>
          <target state="translated">&lt;code&gt;MigrationWriter.register_serializer()&lt;/code&gt; 的第一个参数是应使用序列化程序的类型或可迭代类型。</target>
        </trans-unit>
        <trans-unit id="5d0bd8d670ec9fbf10f7f2947c26e1dc1ad83639" translate="yes" xml:space="preserve">
          <source>The first argument to the constructor is required &amp;ndash; the path to redirect to. This can be a fully qualified URL (e.g. &lt;code&gt;'https://www.yahoo.com/search/'&lt;/code&gt;), an absolute path with no domain (e.g. &lt;code&gt;'/search/'&lt;/code&gt;), or even a relative path (e.g. &lt;code&gt;'search/'&lt;/code&gt;). In that last case, the client browser will reconstruct the full URL itself according to the current path. See &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; for other optional constructor arguments. Note that this returns an HTTP status code 302.</source>
          <target state="translated">构造函数的第一个参数是必需的-重定向到的路径。这可以是完全限定的URL（例如 &lt;code&gt;'https://www.yahoo.com/search/'&lt;/code&gt; ），没有域的绝对路径（例如 &lt;code&gt;'/search/'&lt;/code&gt; ）甚至是相对路径（例如 &lt;code&gt;'search/'&lt;/code&gt; ）。在最后一种情况下，客户端浏览器将根据当前路径重新构造完整的URL。有关其他可选构造函数参数，请参见&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;。请注意，这将返回HTTP状态代码302。</target>
        </trans-unit>
        <trans-unit id="47a3396d450783ab28ffa716e55c53cf2e330e39" translate="yes" xml:space="preserve">
          <source>The first bit in the &lt;code&gt;WSGIScriptAlias&lt;/code&gt; line is the base URL path you want to serve your application at (&lt;code&gt;/&lt;/code&gt; indicates the root url), and the second is the location of a &amp;ldquo;WSGI file&amp;rdquo; &amp;ndash; see below &amp;ndash; on your system, usually inside of your project package (&lt;code&gt;mysite&lt;/code&gt; in this example). This tells Apache to serve any request below the given URL using the WSGI application defined in that file.</source>
          <target state="translated">&lt;code&gt;WSGIScriptAlias&lt;/code&gt; 行的第一位是您要在其上为应用程序提供服务的基本URL路径（ &lt;code&gt;/&lt;/code&gt; 表示根URL），第二位是&amp;ldquo; WSGI文件&amp;rdquo;的位置&amp;ndash;请参见下文&amp;ndash;在系统中，通常位于您的项目包（在此示例中为 &lt;code&gt;mysite&lt;/code&gt; ）。这告诉Apache使用该文件中定义的WSGI应用程序为给定URL下的任何请求提供服务。</target>
        </trans-unit>
        <trans-unit id="c4793a0d9ffadbbd52ba70700ae977d5a3072dfa" translate="yes" xml:space="preserve">
          <source>The first class is the Python object that your users will manipulate. They will assign it to the model attribute, they will read from it for displaying purposes, things like that. This is the &lt;code&gt;Hand&lt;/code&gt; class in our example.</source>
          <target state="translated">第一类是您的用户将操作的Python对象。他们将其分配给模型属性，他们将从中读取以用于显示目的，诸如此类。在我们的示例中，这是 &lt;code&gt;Hand&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="c60b8b5e1f640009f89a0558d3d9c8beda00fdc0" translate="yes" xml:space="preserve">
          <source>The first decorator doesn&amp;rsquo;t know anything about the second and might answer that the response is not modified even if the second decorators would determine otherwise. The &lt;code&gt;condition&lt;/code&gt; decorator uses both callback functions simultaneously to work out the right action to take.</source>
          <target state="translated">第一个装饰者对第二个装饰者一无所知，即使第二个装饰器会另外做出决定，也可能会回答未修改响应。该 &lt;code&gt;condition&lt;/code&gt; 装饰同时使用两个回调函数来制定出正确的要采取的行动。</target>
        </trans-unit>
        <trans-unit id="35cc855bb31940c21fb4d0fbf57cd5cd7a4e7137" translate="yes" xml:space="preserve">
          <source>The first defense against CSRF attacks is to ensure that GET requests (and other &amp;lsquo;safe&amp;rsquo; methods, as defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-4.2.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 7231#section-4.2.1&lt;/strong&gt;&lt;/a&gt;) are side effect free. Requests via &amp;lsquo;unsafe&amp;rsquo; methods, such as POST, PUT, and DELETE, can then be protected by following the steps below.</source>
          <target state="translated">抵御CSRF攻击的第一个防御方法是确保GET请求（以及&lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-4.2.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 7231＃section-4.2.1&lt;/strong&gt;&lt;/a&gt;定义的其他&amp;ldquo;安全&amp;rdquo;方法）没有副作用。然后可以按照以下步骤保护通过&amp;ldquo;不安全&amp;rdquo;方法（例如POST，PUT和DELETE）发出的请求。</target>
        </trans-unit>
        <trans-unit id="8edd716d888141d95a121f4f265c937c657c24a4" translate="yes" xml:space="preserve">
          <source>The first element in each tuple is the actual value to be set on the model, and the second element is the human-readable name. For example:</source>
          <target state="translated">每个元组中的第一个元素是要在模型上设置的实际值,第二个元素是人可读的名称。例如:</target>
        </trans-unit>
        <trans-unit id="d81150df8a09c5e7833eef5c67c1667aedd8264b" translate="yes" xml:space="preserve">
          <source>The first element in each tuple is the name to apply to the group. The second element is an iterable of 2-tuples, with each 2-tuple containing a value and a human-readable name for an option. Grouped options may be combined with ungrouped options within a single list (such as the &lt;code&gt;'unknown'&lt;/code&gt; option in this example).</source>
          <target state="translated">每个元组中的第一个元素是应用于组的名称。第二个元素是2元组的可迭代对象，每个2元组包含一个值和一个选项的易于理解的名称。可以将组合选项与未组合选项组合在一个列表中（例如，本示例中的 &lt;code&gt;'unknown'&lt;/code&gt; 选项）。</target>
        </trans-unit>
        <trans-unit id="66298df4913a918317ded3e216893558da214ecb" translate="yes" xml:space="preserve">
          <source>The first element in each tuple is the name to apply to the group. The second element is an iterable of 2-tuples, with each 2-tuple containing a value and a human-readable name for an option. Grouped options may be combined with ungrouped options within a single list (such as the &lt;code&gt;unknown&lt;/code&gt; option in this example).</source>
          <target state="translated">每个元组中的第一个元素是应用于组的名称。第二个元素是2元组的可迭代对象，每个2元组包含一个值和一个选项的易于理解的名称。可以在单个列表中将分组的选项与未分组的选项组合在一起（例如本示例中的 &lt;code&gt;unknown&lt;/code&gt; 选项）。</target>
        </trans-unit>
        <trans-unit id="65be4df7d03179170f14cf237e2177f6c9b3d953" translate="yes" xml:space="preserve">
          <source>The first element in each tuple is the value that will be stored in the database. The second element is displayed by the field&amp;rsquo;s form widget.</source>
          <target state="translated">每个元组中的第一个元素是将存储在数据库中的值。第二个元素由字段的表单小部件显示。</target>
        </trans-unit>
        <trans-unit id="01cc055b3073ebaf706ad95e612b19ff24acdce3" translate="yes" xml:space="preserve">
          <source>The first element of each tuple in &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.fieldsets&quot;&gt;&lt;code&gt;fieldsets&lt;/code&gt;&lt;/a&gt; is the title of the fieldset. Here&amp;rsquo;s what our form looks like now:</source>
          <target state="translated">字段集中每个元组的第一个元素是&lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.fieldsets&quot;&gt; &lt;code&gt;fieldsets&lt;/code&gt; &lt;/a&gt;的标题。这是我们的表格现在的样子：</target>
        </trans-unit>
        <trans-unit id="893cf1f3905d1bba0b3c66da2bd40a36666ba533" translate="yes" xml:space="preserve">
          <source>The first is the standard Python way of subclassing and overriding attributes and methods in the subclass. So that if your parent class had an attribute &lt;code&gt;greeting&lt;/code&gt; like this:</source>
          <target state="translated">第一种是子类化和覆盖子类中的属性和方法的标准Python方法。因此，如果您的父类具有这样的属性 &lt;code&gt;greeting&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="97243a4154bcf38eec0dcd770c2c093897849746" translate="yes" xml:space="preserve">
          <source>The first iteration produces HTML that refers to class &lt;code&gt;row1&lt;/code&gt;, the second to &lt;code&gt;row2&lt;/code&gt;, the third to &lt;code&gt;row1&lt;/code&gt; again, and so on for each iteration of the loop.</source>
          <target state="translated">在第一次迭代产生的HTML引用类 &lt;code&gt;row1&lt;/code&gt; ，第二至 &lt;code&gt;row2&lt;/code&gt; ，第三至 &lt;code&gt;row1&lt;/code&gt; 再次，等等用于循环的每次迭代。</target>
        </trans-unit>
        <trans-unit id="e8d8c7f5c523b475b062636295d7f8b034bdc905" translate="yes" xml:space="preserve">
          <source>The first one is the usage we&amp;rsquo;ve been discussing in the previous sections. The second one is what is known as &lt;em&gt;reverse resolution of URLs&lt;/em&gt;, &lt;em&gt;reverse URL matching&lt;/em&gt;, &lt;em&gt;reverse URL lookup&lt;/em&gt;, or simply &lt;em&gt;URL reversing&lt;/em&gt;.</source>
          <target state="translated">第一个是我们在上一节中讨论的用法。第二种是所谓&lt;em&gt;的URL反向解析&lt;/em&gt;，&lt;em&gt;反向URL匹配&lt;/em&gt;，&lt;em&gt;反向URL查找&lt;/em&gt;或简称&lt;em&gt;URL反向&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="49b581f6ea38bccdb9c24f4a993f4f33893e5dc8" translate="yes" xml:space="preserve">
          <source>The first option is to roll back the entire transaction. For example:</source>
          <target state="translated">第一个选项是回滚整个交易。例如:</target>
        </trans-unit>
        <trans-unit id="7b2f5ff0a043fddbb6e2fd41755c4546361f62a5" translate="yes" xml:space="preserve">
          <source>The first option to do so is to add the hosts to your settings file. For example, the test suite for docs.djangoproject.com includes the following:</source>
          <target state="translated">第一个选项是将主机添加到你的设置文件中。例如,docs.djangoproject.com的测试套件包括以下内容。</target>
        </trans-unit>
        <trans-unit id="90239cd9cfb1ec6714d55686d931b04d4cbfa512" translate="yes" xml:space="preserve">
          <source>The first parameter can take three forms: a string representing a file path, a dictionary with values defining a new raster, or a bytes object representing a raster file.</source>
          <target state="translated">第一个参数可以有三种形式:一个代表文件路径的字符串,一个定义新栅格的值的字典,或者一个代表栅格文件的字节对象。</target>
        </trans-unit>
        <trans-unit id="92ec3dcecb261013fdca063af558824fb0f4468e" translate="yes" xml:space="preserve">
          <source>The first parameter, &lt;code&gt;data&lt;/code&gt;, should be a &lt;code&gt;dict&lt;/code&gt; instance. If the &lt;code&gt;safe&lt;/code&gt; parameter is set to &lt;code&gt;False&lt;/code&gt; (see below) it can be any JSON-serializable object.</source>
          <target state="translated">第一个参数 &lt;code&gt;data&lt;/code&gt; 应该是一个 &lt;code&gt;dict&lt;/code&gt; 实例。如果 &lt;code&gt;safe&lt;/code&gt; 参数设置为 &lt;code&gt;False&lt;/code&gt; （请参见下文），则它可以是任何JSON可序列化的对象。</target>
        </trans-unit>
        <trans-unit id="7bb4f019dc7831708e5af533eef9bd70821b86c5" translate="yes" xml:space="preserve">
          <source>The first query asks for the average rating of all a publisher&amp;rsquo;s books for publisher&amp;rsquo;s that have at least one book with a rating exceeding 3.0. The second query asks for the average of a publisher&amp;rsquo;s book&amp;rsquo;s ratings for only those ratings exceeding 3.0.</source>
          <target state="translated">第一个查询要求所有出版商的书籍的平均评分，对于拥有至少一本书且评分超过3.0的出版商。第二个查询仅询问那些评分超过3.0的出版商的书籍评分的平均值。</target>
        </trans-unit>
        <trans-unit id="053d07bf69e6e09e648c0c4e1ae628f5afd4936e" translate="yes" xml:space="preserve">
          <source>The first step &lt;code&gt;full_clean()&lt;/code&gt; performs is to clean each individual field.</source>
          <target state="translated">&lt;code&gt;full_clean()&lt;/code&gt; 执行的第一步是清除每个单独的字段。</target>
        </trans-unit>
        <trans-unit id="5a822f06f42c65b3dd06d798e0659cde397841bd" translate="yes" xml:space="preserve">
          <source>The first step in displaying this intermediate model in the admin is to define an inline class for the &lt;code&gt;Membership&lt;/code&gt; model:</source>
          <target state="translated">在管理员中显示此中间模型的第一步是为 &lt;code&gt;Membership&lt;/code&gt; 模型定义一个内联类：</target>
        </trans-unit>
        <trans-unit id="a2fe99ac174181e80dcc066068a1954b0b7fc707" translate="yes" xml:space="preserve">
          <source>The first step is to add &lt;a href=&quot;../../ref/settings#std:setting-USE_TZ&quot;&gt;&lt;code&gt;USE_TZ = True&lt;/code&gt;&lt;/a&gt; to your settings file. At this point, things should mostly work. If you create naive datetime objects in your code, Django makes them aware when necessary.</source>
          <target state="translated">第一步是将&lt;a href=&quot;../../ref/settings#std:setting-USE_TZ&quot;&gt; &lt;code&gt;USE_TZ = True&lt;/code&gt; &lt;/a&gt;添加到您的设置文件。在这一点上，大多数情况下都应该起作用。如果您在代码中创建朴素的datetime对象，则Django会在必要时使它们知道。</target>
        </trans-unit>
        <trans-unit id="5b43c96b6c6b5067fe128e9fb080167e2c1437e8" translate="yes" xml:space="preserve">
          <source>The first step is to create a &lt;a href=&quot;index#term-message-file&quot;&gt;message file&lt;/a&gt; for a new language. A message file is a plain-text file, representing a single language, that contains all available translation strings and how they should be represented in the given language. Message files have a &lt;code&gt;.po&lt;/code&gt; file extension.</source>
          <target state="translated">第一步是为新语言创建&lt;a href=&quot;index#term-message-file&quot;&gt;消息文件&lt;/a&gt;。消息文件是纯文本文件，代表一种语言，其中包含所有可用的翻译字符串以及应如何以给定语言表示。邮件文件的扩展名为 &lt;code&gt;.po&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0458bb2ba643653473bb694c0904556d9a528344" translate="yes" xml:space="preserve">
          <source>The first step to contributing to Django is to get a copy of the source code. First, &lt;a href=&quot;https://github.com/django/django/fork&quot;&gt;fork Django on GitHub&lt;/a&gt;. Then, from the command line, use the &lt;code&gt;cd&lt;/code&gt; command to navigate to the directory where you&amp;rsquo;ll want your local copy of Django to live.</source>
          <target state="translated">对Django做出贡献的第一步是获取源代码的副本。首先，&lt;a href=&quot;https://github.com/django/django/fork&quot;&gt;在GitHub上分叉Django&lt;/a&gt;。然后，从命令行使用 &lt;code&gt;cd&lt;/code&gt; 命令导航到您希望本地Django副本存在的目录。</target>
        </trans-unit>
        <trans-unit id="8ae8d67f65acd52dbb066631338392f1a23fc452" translate="yes" xml:space="preserve">
          <source>The first step to using more than one database with Django is to tell Django about the database servers you&amp;rsquo;ll be using. This is done using the &lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt; setting. This setting maps database aliases, which are a way to refer to a specific database throughout Django, to a dictionary of settings for that specific connection. The settings in the inner dictionaries are described fully in the &lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">在Django中使用多个数据库的第一步是告诉Django您将使用的数据库服务器。这是使用&lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt;设置完成的。此设置将数据库别名（这是在整个Django中引用特定数据库的一种方式）映射到该特定连接的设置字典。内部字典中的设置在&lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt;文档中有完整描述。</target>
        </trans-unit>
        <trans-unit id="44d5bd896e8ca28673de91b965ab96d0c88f5adc" translate="yes" xml:space="preserve">
          <source>The fixtures that are named can include directory components. These directories will be included in the search path. For example:</source>
          <target state="translated">被命名的夹具可以包括目录组件。这些目录将被包含在搜索路径中。比如说:</target>
        </trans-unit>
        <trans-unit id="6c9b843427d6189b66a1ac36bd8f3b19833f6092" translate="yes" xml:space="preserve">
          <source>The flags used when compiling the regular expression string &lt;a href=&quot;#django.core.validators.RegexValidator.regex&quot;&gt;&lt;code&gt;regex&lt;/code&gt;&lt;/a&gt;. If &lt;a href=&quot;#django.core.validators.RegexValidator.regex&quot;&gt;&lt;code&gt;regex&lt;/code&gt;&lt;/a&gt; is a pre-compiled regular expression, and &lt;a href=&quot;#django.core.validators.RegexValidator.flags&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; is overridden, &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised. Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">编译正则表达式字符串&lt;a href=&quot;#django.core.validators.RegexValidator.regex&quot;&gt; &lt;code&gt;regex&lt;/code&gt; &lt;/a&gt;时使用的标志。如果&lt;a href=&quot;#django.core.validators.RegexValidator.regex&quot;&gt; &lt;code&gt;regex&lt;/code&gt; &lt;/a&gt;是预编译的正则表达式，并且&lt;a href=&quot;#django.core.validators.RegexValidator.flags&quot;&gt; &lt;code&gt;flags&lt;/code&gt; &lt;/a&gt;被覆盖，则会引发&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。默认为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e33d92dd2768ab4c50afbc85edfa029aa2f7dda" translate="yes" xml:space="preserve">
          <source>The flatpages app</source>
          <target state="translated">平板应用</target>
        </trans-unit>
        <trans-unit id="37429ca8988aa9e21619e03578a3aa7629602021" translate="yes" xml:space="preserve">
          <source>The flatpages app provides a template tag that allows you to iterate over all of the available flatpages on the &lt;a href=&quot;sites#hooking-into-current-site-from-views&quot;&gt;current site&lt;/a&gt;.</source>
          <target state="translated">Flatpages应用程序提供了一个模板标签，可让您遍历&lt;a href=&quot;sites#hooking-into-current-site-from-views&quot;&gt;当前站点&lt;/a&gt;上的所有可用Flatpage 。</target>
        </trans-unit>
        <trans-unit id="b762ecc852af7e088e75baf74cdbc6ac96db8aa4" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;../../utils#django.utils.feedgenerator.SyndicationFeed&quot;&gt;&lt;code&gt;django.utils.feedgenerator.SyndicationFeed&lt;/code&gt;&lt;/a&gt; subclasses are available:</source>
          <target state="translated">以下&lt;a href=&quot;../../utils#django.utils.feedgenerator.SyndicationFeed&quot;&gt; &lt;code&gt;django.utils.feedgenerator.SyndicationFeed&lt;/code&gt; &lt;/a&gt;子类可用：</target>
        </trans-unit>
        <trans-unit id="d0e5c1877f90f95248f71d31f5912958212979ae" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;QuerySet&lt;/code&gt; methods evaluate the &lt;code&gt;QuerySet&lt;/code&gt; and return something &lt;em&gt;other than&lt;/em&gt; a &lt;code&gt;QuerySet&lt;/code&gt;.</source>
          <target state="translated">以下 &lt;code&gt;QuerySet&lt;/code&gt; 方法评估 &lt;code&gt;QuerySet&lt;/code&gt; 并返回 &lt;code&gt;QuerySet&lt;/code&gt; &lt;em&gt;以外&lt;/em&gt;的&lt;em&gt;其他值&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="284c34d68eec06943f4a3d9de8968921766e55bb" translate="yes" xml:space="preserve">
          <source>The following are PostgreSQL specific &lt;a href=&quot;../../models/indexes&quot;&gt;indexes&lt;/a&gt; available from the &lt;code&gt;django.contrib.postgres.indexes&lt;/code&gt; module.</source>
          <target state="translated">以下是 &lt;code&gt;django.contrib.postgres.indexes&lt;/code&gt; 模块中可用的PostgreSQL特定&lt;a href=&quot;../../models/indexes&quot;&gt;索引&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0b6966c34b02d72f9151d4120d3fb9804d013c97" translate="yes" xml:space="preserve">
          <source>The following are all legal:</source>
          <target state="translated">以下都是合法的。</target>
        </trans-unit>
        <trans-unit id="fb8617e614581813861e27bbbd803b31ff1f311d" translate="yes" xml:space="preserve">
          <source>The following are equivalent:</source>
          <target state="translated">以下是相等的:</target>
        </trans-unit>
        <trans-unit id="81542627868a9ffb56db58c11315f765372b892a" translate="yes" xml:space="preserve">
          <source>The following are the arguments and keywords that may be used during instantiation of &lt;code&gt;LayerMapping&lt;/code&gt; objects.</source>
          <target state="translated">以下是在实例化 &lt;code&gt;LayerMapping&lt;/code&gt; 对象期间可以使用的参数和关键字。</target>
        </trans-unit>
        <trans-unit id="ed47360c7d12e10b6c68d9808683c52ed8588691" translate="yes" xml:space="preserve">
          <source>The following arguments are available to all field types. All are optional.</source>
          <target state="translated">以下参数适用于所有字段类型。所有参数都是可选的。</target>
        </trans-unit>
        <trans-unit id="8a9bf51cbaea32fba407af879b808987c8179d02" translate="yes" xml:space="preserve">
          <source>The following attributes and methods are available on any subclass of &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser&quot;&gt;&lt;code&gt;AbstractBaseUser&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">以下属性和方法可用于&lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser&quot;&gt; &lt;code&gt;AbstractBaseUser&lt;/code&gt; 的&lt;/a&gt;任何子类：</target>
        </trans-unit>
        <trans-unit id="bc16b93aaf25c86c2e5a47839f6ba6772f8aac39" translate="yes" xml:space="preserve">
          <source>The following backends are available in &lt;a href=&quot;#module-django.contrib.auth.backends&quot;&gt;&lt;code&gt;django.contrib.auth.backends&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#module-django.contrib.auth.backends&quot;&gt; &lt;code&gt;django.contrib.auth.backends&lt;/code&gt; &lt;/a&gt;中提供了以下后端：</target>
        </trans-unit>
        <trans-unit id="27b33dc3dd8b00095e48bdd2946d661302f48b4a" translate="yes" xml:space="preserve">
          <source>The following checklist includes settings that:</source>
          <target state="translated">以下检查表包括以下设置:</target>
        </trans-unit>
        <trans-unit id="9df85d7bdd1888612b2cf87af0d7ed96d4b077c2" translate="yes" xml:space="preserve">
          <source>The following checks are performed on &lt;a href=&quot;contrib/postgres/index#module-django.contrib.postgres&quot;&gt;&lt;code&gt;django.contrib.postgres&lt;/code&gt;&lt;/a&gt; model fields:</source>
          <target state="translated">在&lt;a href=&quot;contrib/postgres/index#module-django.contrib.postgres&quot;&gt; &lt;code&gt;django.contrib.postgres&lt;/code&gt; &lt;/a&gt;模型字段上执行以下检查：</target>
        </trans-unit>
        <trans-unit id="d0a68f6fed3620bb3281f44c1e52da9151a8c4a5" translate="yes" xml:space="preserve">
          <source>The following checks are performed on any &lt;a href=&quot;contrib/admin/index#django.contrib.admin.InlineModelAdmin&quot;&gt;&lt;code&gt;InlineModelAdmin&lt;/code&gt;&lt;/a&gt; that is registered as an inline on a &lt;a href=&quot;contrib/admin/index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下检查在任何执行&lt;a href=&quot;contrib/admin/index#django.contrib.admin.InlineModelAdmin&quot;&gt; &lt;code&gt;InlineModelAdmin&lt;/code&gt; &lt;/a&gt;被注册为在内嵌&lt;a href=&quot;contrib/admin/index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc64c4f3803d970a42f815f585a9ef9266262cca" translate="yes" xml:space="preserve">
          <source>The following checks are performed on any &lt;a href=&quot;contrib/admin/index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; (or subclass) that is registered with the admin site:</source>
          <target state="translated">在向管理站点注册的任何&lt;a href=&quot;contrib/admin/index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;（或子类）上执行以下检查：</target>
        </trans-unit>
        <trans-unit id="fbc7a26eae3e54b89174c26b5546d6603116cb76" translate="yes" xml:space="preserve">
          <source>The following checks are performed on any &lt;a href=&quot;contrib/admin/index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; that is registered with the admin site:</source>
          <target state="translated">在向管理站点注册的任何&lt;a href=&quot;contrib/admin/index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;上执行以下检查：</target>
        </trans-unit>
        <trans-unit id="798b247d43f522a878f43ca529351c16150eece7" translate="yes" xml:space="preserve">
          <source>The following checks are performed on any &lt;a href=&quot;contrib/contenttypes#django.contrib.contenttypes.admin.GenericInlineModelAdmin&quot;&gt;&lt;code&gt;GenericInlineModelAdmin&lt;/code&gt;&lt;/a&gt; that is registered as an inline on a &lt;a href=&quot;contrib/admin/index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对在&lt;a href=&quot;contrib/admin/index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;上注册为内联的任何&lt;a href=&quot;contrib/contenttypes#django.contrib.contenttypes.admin.GenericInlineModelAdmin&quot;&gt; &lt;code&gt;GenericInlineModelAdmin&lt;/code&gt; &lt;/a&gt;执行以下检查。</target>
        </trans-unit>
        <trans-unit id="772c831459e6cb84678eef9556aba5363139c510" translate="yes" xml:space="preserve">
          <source>The following checks are performed on any model using a &lt;a href=&quot;contrib/sites#django.contrib.sites.managers.CurrentSiteManager&quot;&gt;&lt;code&gt;CurrentSiteManager&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">使用&lt;a href=&quot;contrib/sites#django.contrib.sites.managers.CurrentSiteManager&quot;&gt; &lt;code&gt;CurrentSiteManager&lt;/code&gt; &lt;/a&gt;在任何模型上执行以下检查：</target>
        </trans-unit>
        <trans-unit id="62c287734cdd195293b9a229ff93208bf14d1920" translate="yes" xml:space="preserve">
          <source>The following checks are performed on the default &lt;a href=&quot;contrib/admin/index#django.contrib.admin.AdminSite&quot;&gt;&lt;code&gt;AdminSite&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">在默认的&lt;a href=&quot;contrib/admin/index#django.contrib.admin.AdminSite&quot;&gt; &lt;code&gt;AdminSite&lt;/code&gt; &lt;/a&gt;上执行以下检查：</target>
        </trans-unit>
        <trans-unit id="9e37df7b44137276890a046f659bfb8ba9033c28" translate="yes" xml:space="preserve">
          <source>The following checks are performed on your URL configuration:</source>
          <target state="translated">以下是对您的URL配置进行的检查。</target>
        </trans-unit>
        <trans-unit id="b5e6a7bd9233bcb085b33c0911616d7cb121f331" translate="yes" xml:space="preserve">
          <source>The following checks are performed on your translation configuration:</source>
          <target state="translated">以下是对您的翻译配置进行的检查。</target>
        </trans-unit>
        <trans-unit id="2bc9c3b0e242eeb9303878e26142dbdb14ab08bd" translate="yes" xml:space="preserve">
          <source>The following checks are performed when a model contains a &lt;a href=&quot;contrib/contenttypes#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt;&lt;code&gt;GenericForeignKey&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;contrib/contenttypes#django.contrib.contenttypes.fields.GenericRelation&quot;&gt;&lt;code&gt;GenericRelation&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">当模型包含&lt;a href=&quot;contrib/contenttypes#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt; &lt;code&gt;GenericForeignKey&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;contrib/contenttypes#django.contrib.contenttypes.fields.GenericRelation&quot;&gt; &lt;code&gt;GenericRelation&lt;/code&gt; &lt;/a&gt;时，将执行以下检查：</target>
        </trans-unit>
        <trans-unit id="718dd25af97d4c416215d47f19360e01f976892e" translate="yes" xml:space="preserve">
          <source>The following checks are run if you use the &lt;a href=&quot;django-admin#cmdoption-check-deploy&quot;&gt;&lt;code&gt;check --deploy&lt;/code&gt;&lt;/a&gt; option:</source>
          <target state="translated">如果使用&lt;a href=&quot;django-admin#cmdoption-check-deploy&quot;&gt; &lt;code&gt;check --deploy&lt;/code&gt; &lt;/a&gt;选项，则会运行以下检查：</target>
        </trans-unit>
        <trans-unit id="169f8332f02f69fac3ca8c2910b09ef347510ade" translate="yes" xml:space="preserve">
          <source>The following checks verify that &lt;a href=&quot;contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt;&lt;code&gt;django.contrib.staticfiles&lt;/code&gt;&lt;/a&gt; is correctly configured:</source>
          <target state="translated">以下检查可验证&lt;a href=&quot;contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt; &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; &lt;/a&gt;是否已正确配置：</target>
        </trans-unit>
        <trans-unit id="ab28cab160996c2304c7c158d04a89bc438663c7" translate="yes" xml:space="preserve">
          <source>The following checks verify that your &lt;a href=&quot;settings#std:setting-CACHES&quot;&gt;&lt;code&gt;CACHES&lt;/code&gt;&lt;/a&gt; setting is correctly configured:</source>
          <target state="translated">以下检查可验证您的&lt;a href=&quot;settings#std:setting-CACHES&quot;&gt; &lt;code&gt;CACHES&lt;/code&gt; &lt;/a&gt;设置是否正确配置：</target>
        </trans-unit>
        <trans-unit id="658ec03bf20f39893ff07a0a1a0182adf9c190fa" translate="yes" xml:space="preserve">
          <source>The following checks verify that your &lt;a href=&quot;settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting is correctly configured:</source>
          <target state="translated">以下检查可验证您的&lt;a href=&quot;settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;设置是否正确配置：</target>
        </trans-unit>
        <trans-unit id="0728264c18b27eb329de45ccf7ad1ad8630dedde" translate="yes" xml:space="preserve">
          <source>The following checks verify that your security-related settings are correctly configured:</source>
          <target state="translated">以下检查验证您的安全相关设置是否正确配置。</target>
        </trans-unit>
        <trans-unit id="16b79a93cf47f2d5e419f5b5be11a1627acce6ce" translate="yes" xml:space="preserve">
          <source>The following checks verify your setup for &lt;a href=&quot;../topics/async&quot;&gt;Asynchronous support&lt;/a&gt;:</source>
          <target state="translated">以下检查可验证您对&lt;a href=&quot;../topics/async&quot;&gt;异步支持&lt;/a&gt;的设置：</target>
        </trans-unit>
        <trans-unit id="cb1871103b4735e9f911dab6f3e2f7b9126ed436" translate="yes" xml:space="preserve">
          <source>The following code will let you examine the OGR types (e.g. integer or string) associated with each of the fields:</source>
          <target state="translated">下面的代码将让你检查与每个字段相关联的OGR类型(如整数或字符串)。</target>
        </trans-unit>
        <trans-unit id="b97899d26792490f17732aac0bbd906bcd3df4f3" translate="yes" xml:space="preserve">
          <source>The following decorators in &lt;a href=&quot;#module-django.views.decorators.http&quot;&gt;&lt;code&gt;django.views.decorators.http&lt;/code&gt;&lt;/a&gt; can be used to control caching behavior on particular views.</source>
          <target state="translated">&lt;a href=&quot;#module-django.views.decorators.http&quot;&gt; &lt;code&gt;django.views.decorators.http&lt;/code&gt; 中&lt;/a&gt;的以下装饰器可用于控制特定视图上的缓存行为。</target>
        </trans-unit>
        <trans-unit id="9d3874885283eeb637d618d85b95b428ce844660" translate="yes" xml:space="preserve">
          <source>The following distance lookups are available:</source>
          <target state="translated">以下是可用的距离查询。</target>
        </trans-unit>
        <trans-unit id="511fb6f7d86146e81a24b7522fc492bf7dd8eb25" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the use of savepoints:</source>
          <target state="translated">下面的例子演示了保存点的使用。</target>
        </trans-unit>
        <trans-unit id="c94672d77becd10e86518f53b48e4b0ab433ece0" translate="yes" xml:space="preserve">
          <source>The following example gets all published objects from &lt;code&gt;MyModel&lt;/code&gt;:</source>
          <target state="translated">以下示例从 &lt;code&gt;MyModel&lt;/code&gt; 获取所有已发布的对象：</target>
        </trans-unit>
        <trans-unit id="5ab8189d4a7cb9d8d6126d8824341ddfe2eef07b" translate="yes" xml:space="preserve">
          <source>The following example gets the object with the primary key of 1 from &lt;code&gt;MyModel&lt;/code&gt;:</source>
          <target state="translated">以下示例从 &lt;code&gt;MyModel&lt;/code&gt; 获取主键为1的对象：</target>
        </trans-unit>
        <trans-unit id="2f109d2e9c17671da9abe438aa5081ff23c0cfc7" translate="yes" xml:space="preserve">
          <source>The following example renders the template &lt;code&gt;myapp/index.html&lt;/code&gt; with the MIME type &lt;em&gt;application/xhtml+xml&lt;/em&gt;:</source>
          <target state="translated">以下示例使用MIME类型&lt;em&gt;application / xhtml + xml&lt;/em&gt;呈现模板 &lt;code&gt;myapp/index.html&lt;/code&gt; ：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a613041ed60555fc2269d1cc2da4bb4bdaef377e" translate="yes" xml:space="preserve">
          <source>The following example restricts overlapping reservations in the same room, not taking canceled reservations into account:</source>
          <target state="translated">下面的例子限制同一房间的重叠保留,不考虑取消的保留。</target>
        </trans-unit>
        <trans-unit id="5ae77351bd437b3ba442b7b1ed3f17c0d69fd5f2" translate="yes" xml:space="preserve">
          <source>The following example shows how rasters can be created from different input sources (using the sample data from the GeoDjango tests; see also the &lt;a href=&quot;#gdal-sample-data&quot;&gt;Sample Data&lt;/a&gt; section).</source>
          <target state="translated">以下示例显示了如何从不同的输入源创建栅格（使用来自GeoDjango测试的&lt;a href=&quot;#gdal-sample-data&quot;&gt;示例数据&lt;/a&gt;；另请参见示例数据部分）。</target>
        </trans-unit>
        <trans-unit id="c6b0d211561de68fb072b86d7bf28643ec23a1c6" translate="yes" xml:space="preserve">
          <source>The following example shows how to exclude some conventional URLs that browsers and crawlers often request:</source>
          <target state="translated">下面的例子显示了如何排除浏览器和爬虫经常请求的一些常规URL。</target>
        </trans-unit>
        <trans-unit id="d17b7184c9d112ad10af3bbd154bc9a225b3dc3b" translate="yes" xml:space="preserve">
          <source>The following example uses some of the options available for the &lt;a href=&quot;https://gdal.org/drivers/raster/gtiff.html&quot;&gt;GTiff driver&lt;/a&gt;. The result is a compressed signed byte raster with an internal tiling scheme. The internal tiles have a block size of 23 by 23:</source>
          <target state="translated">下面的示例使用一些&lt;a href=&quot;https://gdal.org/drivers/raster/gtiff.html&quot;&gt;GTiff驱动程序&lt;/a&gt;可用的选项。结果是使用内部切片方案压缩的带符号字节光栅。内部磁贴的块大小为23 x 23：</target>
        </trans-unit>
        <trans-unit id="02aa7661af1a2fa0eb1f55c6693585884acd7e85" translate="yes" xml:space="preserve">
          <source>The following example, which uses &lt;code&gt;myapp_defaults&lt;/code&gt; as a positional argument, is equivalent:</source>
          <target state="translated">以下示例使用 &lt;code&gt;myapp_defaults&lt;/code&gt; 作为位置参数，它是等效的：</target>
        </trans-unit>
        <trans-unit id="a7f4a8147d9020a9a80678a5a04a8331e9fd9b42" translate="yes" xml:space="preserve">
          <source>The following example:</source>
          <target state="translated">下面的例子。</target>
        </trans-unit>
        <trans-unit id="dbdcc10d5462ba46d9b6fc2e25ec7724d00ed9d4" translate="yes" xml:space="preserve">
          <source>The following examples are valid tests and don&amp;rsquo;t raise any &lt;code&gt;AssertionError&lt;/code&gt;:</source>
          <target state="translated">以下示例是有效的测试，并且不会引发任何 &lt;code&gt;AssertionError&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ef65fe69e1f9b55d1642608283978e9fd4dd6a5c" translate="yes" xml:space="preserve">
          <source>The following examples illustrate the difference between plain lookups and &lt;code&gt;select_related()&lt;/code&gt; lookups. Here&amp;rsquo;s standard lookup:</source>
          <target state="translated">以下示例说明了普通查找和 &lt;code&gt;select_related()&lt;/code&gt; 查找之间的区别。这是标准查询：</target>
        </trans-unit>
        <trans-unit id="a4092fa174e7a8f36074dda217b59427b9e0598b" translate="yes" xml:space="preserve">
          <source>The following forms are compatible with any subclass of &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser&quot;&gt;&lt;code&gt;AbstractBaseUser&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">以下形式与&lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser&quot;&gt; &lt;code&gt;AbstractBaseUser&lt;/code&gt; 的&lt;/a&gt;任何子类兼容：</target>
        </trans-unit>
        <trans-unit id="adf4225ac1727ac53e1866d9bd7ebf9585a592aa" translate="yes" xml:space="preserve">
          <source>The following forms make assumptions about the user model and can be used as-is if those assumptions are met:</source>
          <target state="translated">以下表格对用户模型进行了假设,如果满足这些假设,可以按原样使用。</target>
        </trans-unit>
        <trans-unit id="03fd4939a7e630a5b2c4080424d25186843fae49" translate="yes" xml:space="preserve">
          <source>The following inner options that may be required for more complex configurations are available:</source>
          <target state="translated">以下是更复杂配置可能需要的内部选项:</target>
        </trans-unit>
        <trans-unit id="ce44bfd694d584e192c872881f893ed40f5892ce" translate="yes" xml:space="preserve">
          <source>The following input formats, along with their corresponding Python types, are accepted:</source>
          <target state="translated">接受以下输入格式,以及它们对应的Python类型。</target>
        </trans-unit>
        <trans-unit id="c5ed210269141c795e27b30d64a358ba08aee37b" translate="yes" xml:space="preserve">
          <source>The following is a unit test using the request factory:</source>
          <target state="translated">下面是一个使用请求工厂的单元测试。</target>
        </trans-unit>
        <trans-unit id="aa12bb2e2e2d43123308a3bfa9526910ae0ff4eb" translate="yes" xml:space="preserve">
          <source>The following is a unit test using the test client:</source>
          <target state="translated">以下是使用测试客户端进行的单元测试。</target>
        </trans-unit>
        <trans-unit id="fda8551c0b3bcb17fa6179ad9c7500759423e393" translate="yes" xml:space="preserve">
          <source>The following is an example &lt;code&gt;settings.py&lt;/code&gt; snippet defining two databases &amp;ndash; a default PostgreSQL database and a MySQL database called &lt;code&gt;users&lt;/code&gt;:</source>
          <target state="translated">以下是一个示例 &lt;code&gt;settings.py&lt;/code&gt; 片段，定义了两个数据库-一个默认的PostgreSQL数据库和一个名为 &lt;code&gt;users&lt;/code&gt; 的MySQL数据库：</target>
        </trans-unit>
        <trans-unit id="b293ec95f949c27628bace57f66b95d58a3bc865" translate="yes" xml:space="preserve">
          <source>The following is an example bare-bones settings file with spatial backends that can be used to run the entire Django test suite, including those in &lt;a href=&quot;index#module-django.contrib.gis&quot;&gt;&lt;code&gt;django.contrib.gis&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">以下是带有空间后端的示例基本设置文件，可用于运行整个Django测试套件，包括&lt;a href=&quot;index#module-django.contrib.gis&quot;&gt; &lt;code&gt;django.contrib.gis&lt;/code&gt; 中的&lt;/a&gt;那些：</target>
        </trans-unit>
        <trans-unit id="155b13a7d360ac7ab41723483431b48699c1a83a" translate="yes" xml:space="preserve">
          <source>The following keys in the &lt;code&gt;TEST&lt;/code&gt; dictionary are available:</source>
          <target state="translated">&lt;code&gt;TEST&lt;/code&gt; 词典中的以下键可用：</target>
        </trans-unit>
        <trans-unit id="8db9385dcb2867000b18aa9ba73c14c9c95225ae" translate="yes" xml:space="preserve">
          <source>The following mixins are used to construct Django&amp;rsquo;s editing views:</source>
          <target state="translated">以下mixin用于构造Django的编辑视图：</target>
        </trans-unit>
        <trans-unit id="56bf33227ffc3fd9440f7918633d861bffc08d69" translate="yes" xml:space="preserve">
          <source>The following options are available for all backends.</source>
          <target state="translated">以下选项适用于所有后端。</target>
        </trans-unit>
        <trans-unit id="bfc330e8533debea8bfca9a1ee07bf2cd57313b0" translate="yes" xml:space="preserve">
          <source>The following path converters are available by default:</source>
          <target state="translated">以下是默认的路径转换器。</target>
        </trans-unit>
        <trans-unit id="37a9d07a5ce6b19cdb03447182319609657d2303" translate="yes" xml:space="preserve">
          <source>The following special markup can be used in your docstrings to easily create hyperlinks to other components:</source>
          <target state="translated">下面的特殊标记可以在你的docstrings中使用,以方便创建超链接到其他组件。</target>
        </trans-unit>
        <trans-unit id="ce2e60220c58a5237c89916e6739ef4fb408e2f9" translate="yes" xml:space="preserve">
          <source>The following steps install &lt;code&gt;django-polls&lt;/code&gt; as a user library. Per-user installs have a lot of advantages over installing the package system-wide, such as being usable on systems where you don&amp;rsquo;t have administrator access as well as preventing the package from affecting system services and other users of the machine.</source>
          <target state="translated">以下步骤将 &lt;code&gt;django-polls&lt;/code&gt; 安装为用户库。与在整个系统范围内安装软件包相比，每用户安装具有很多优点，例如可在没有管理员访问权限的系统上使用，以及防止软件包影响系统服务和计算机的其他用户。</target>
        </trans-unit>
        <trans-unit id="3de0e27c71a643c0167b9228ad10d92581ce566d" translate="yes" xml:space="preserve">
          <source>The following table describes all keys that can be set in the &lt;code&gt;ds_input&lt;/code&gt; dictionary.</source>
          <target state="translated">下表描述了可以在 &lt;code&gt;ds_input&lt;/code&gt; 词典中设置的所有键。</target>
        </trans-unit>
        <trans-unit id="77ddba8f9221d107fb82a68bc44f1d2ec652ddc1" translate="yes" xml:space="preserve">
          <source>The following table explains the calculation for the percentile rank of a row:</source>
          <target state="translated">下表解释了行的百分位数的计算。</target>
        </trans-unit>
        <trans-unit id="9954c85322fc76aa8231c73793448b604300eff4" translate="yes" xml:space="preserve">
          <source>The following table provides a summary of what GIS-specific aggregate functions are available on each spatial backend. Please note that MySQL does not support any of these aggregates, and is thus excluded from the table.</source>
          <target state="translated">下表提供了每个空间后端可用的GIS专用汇总功能的摘要。请注意,MySQL不支持任何这些汇总功能,因此不在表中。</target>
        </trans-unit>
        <trans-unit id="8ed03a7e1d29f617e97e3e2081eac463d8dc91b6" translate="yes" xml:space="preserve">
          <source>The following table provides a summary of what geography-specific database functions are available on each spatial backend.</source>
          <target state="translated">下表提供了每个空间后端都有哪些地理专用数据库功能的摘要。</target>
        </trans-unit>
        <trans-unit id="87a5dfe0372fbe7b676b68991bb037492b90fea7" translate="yes" xml:space="preserve">
          <source>The following table provides a summary of what spatial lookups are available for each spatial database backend. The PostGIS Raster (PGRaster) lookups are divided into the three categories described in the &lt;a href=&quot;#spatial-lookup-raster&quot;&gt;raster lookup details&lt;/a&gt;: native support &lt;code&gt;N&lt;/code&gt;, bilateral native support &lt;code&gt;B&lt;/code&gt;, and geometry conversion support &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">下表总结了可用于每个空间数据库后端的空间查找。的PostGIS的光栅（PGRaster）查找被分成在所描述的三类&lt;a href=&quot;#spatial-lookup-raster&quot;&gt;光栅查找细节&lt;/a&gt;：原生支持 &lt;code&gt;N&lt;/code&gt; ，双边本地支持 &lt;code&gt;B&lt;/code&gt; ，和几何结构转换支持 &lt;code&gt;C&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17cb4e80e675b29c99328366acbf87f2bdc32c9b" translate="yes" xml:space="preserve">
          <source>The following three classes provide much of the functionality needed to create Django views. You may think of them as &lt;em&gt;parent&lt;/em&gt; views, which can be used by themselves or inherited from. They may not provide all the capabilities required for projects, in which case there are Mixins and Generic class-based views.</source>
          <target state="translated">以下三个类提供了创建Django视图所需的许多功能。您可能会认为它们是&lt;em&gt;父&lt;/em&gt;视图，它们可以自己使用或继承。它们可能无法提供项目所需的全部功能，在这种情况下，存在Mixins和基于通用类的视图。</target>
        </trans-unit>
        <trans-unit id="163b5f6afc0ffb26d1ffc866c1f722351d96ab02" translate="yes" xml:space="preserve">
          <source>The following views are described on this page and provide a foundation for editing content:</source>
          <target state="translated">本页介绍了以下视图,为编辑内容奠定了基础。</target>
        </trans-unit>
        <trans-unit id="3022ab1485812abddb1a35eb1aa77b23ad3cf6ee" translate="yes" xml:space="preserve">
          <source>The for loop sets a number of variables available within the loop:</source>
          <target state="translated">for循环设置了一些循环中可用的变量。</target>
        </trans-unit>
        <trans-unit id="6793037035443cca7f0f9bdde895bd5877949c0a" translate="yes" xml:space="preserve">
          <source>The foreign key relationship is made explicit by a &lt;code&gt;FOREIGN KEY&lt;/code&gt; constraint. Don&amp;rsquo;t worry about the &lt;code&gt;DEFERRABLE&lt;/code&gt; parts; it&amp;rsquo;s telling PostgreSQL to not enforce the foreign key until the end of the transaction.</source>
          <target state="translated">通过 &lt;code&gt;FOREIGN KEY&lt;/code&gt; 约束使外键关系明确。不用担心 &lt;code&gt;DEFERRABLE&lt;/code&gt; 部分；它告诉PostgreSQL在事务结束之前不要执行外键。</target>
        </trans-unit>
        <trans-unit id="c0ba7b5548e8a098c637d857954895946ddd63ea" translate="yes" xml:space="preserve">
          <source>The form &lt;a href=&quot;fields#django.forms.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; instance from the form class that this &lt;a href=&quot;#django.forms.BoundField&quot;&gt;&lt;code&gt;BoundField&lt;/code&gt;&lt;/a&gt; wraps.</source>
          <target state="translated">此&lt;a href=&quot;#django.forms.BoundField&quot;&gt; &lt;code&gt;BoundField&lt;/code&gt; &lt;/a&gt;包装的表单类中的表单&lt;a href=&quot;fields#django.forms.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="1534a6bb0f89c8d9e2ed69373d2903181c1f6689" translate="yes" xml:space="preserve">
          <source>The form class to instantiate.</source>
          <target state="translated">要实例化的表单类。</target>
        </trans-unit>
        <trans-unit id="b7be3637d68371b077e5ccddff05d872e662bae7" translate="yes" xml:space="preserve">
          <source>The form field class can be specified via the &lt;code&gt;form_class&lt;/code&gt; and &lt;code&gt;choices_form_class&lt;/code&gt; arguments; the latter is used if the field has choices specified, the former otherwise. If these arguments are not provided, &lt;a href=&quot;../ref/forms/fields#django.forms.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../ref/forms/fields#django.forms.TypedChoiceField&quot;&gt;&lt;code&gt;TypedChoiceField&lt;/code&gt;&lt;/a&gt; will be used.</source>
          <target state="translated">可以通过 &lt;code&gt;form_class&lt;/code&gt; 和 &lt;code&gt;choices_form_class&lt;/code&gt; 参数指定表单字段类；如果字段指定了选项，则使用后者；否则，则使用前者。如果未提供这些参数，则将使用&lt;a href=&quot;../ref/forms/fields#django.forms.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../ref/forms/fields#django.forms.TypedChoiceField&quot;&gt; &lt;code&gt;TypedChoiceField&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fa18bf982492fb4c002335a36b723ed98a5b1694" translate="yes" xml:space="preserve">
          <source>The form field class to use. Should be a subclass of &lt;a href=&quot;#django.contrib.postgres.fields.django.contrib.postgres.forms.BaseRangeField&quot;&gt;&lt;code&gt;django.contrib.postgres.forms.BaseRangeField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要使用的表单字段类。应该是&lt;a href=&quot;#django.contrib.postgres.fields.django.contrib.postgres.forms.BaseRangeField&quot;&gt; &lt;code&gt;django.contrib.postgres.forms.BaseRangeField&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
