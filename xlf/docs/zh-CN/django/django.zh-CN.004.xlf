<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="651990921909d5750a9b110f7087b0c6ff565c6e" translate="yes" xml:space="preserve">
          <source>Accepts a list of at least two text fields or expressions and returns the concatenated text. Each argument must be of a text or char type. If you want to concatenate a &lt;code&gt;TextField()&lt;/code&gt; with a &lt;code&gt;CharField()&lt;/code&gt;, then be sure to tell Django that the &lt;code&gt;output_field&lt;/code&gt; should be a &lt;code&gt;TextField()&lt;/code&gt;. Specifying an &lt;code&gt;output_field&lt;/code&gt; is also required when concatenating a &lt;code&gt;Value&lt;/code&gt; as in the example below.</source>
          <target state="translated">接受至少两个文本字段或表达式的列表，并返回连接的文本。每个参数必须是文本或char类型。如果要将 &lt;code&gt;TextField()&lt;/code&gt; 与 &lt;code&gt;CharField()&lt;/code&gt; 连接起来，请确保告诉Django &lt;code&gt;output_field&lt;/code&gt; 应该是 &lt;code&gt;TextField()&lt;/code&gt; 。在连接 &lt;code&gt;Value&lt;/code&gt; 时，也需要指定 &lt;code&gt;output_field&lt;/code&gt; ，如下例所示。</target>
        </trans-unit>
        <trans-unit id="cbc82473a8e0bd0fe72439d5e4d84775a91a5e4a" translate="yes" xml:space="preserve">
          <source>Accepts a numeric field or expression and returns the text representation of the expression as a single character. It works the same as Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/functions.html#chr&quot;&gt;&lt;code&gt;chr()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">接受数字字段或表达式，并将表达式的文本表示形式返回为单个字符。它的工作原理与Python的&lt;a href=&quot;https://docs.python.org/3/library/functions.html#chr&quot;&gt; &lt;code&gt;chr()&lt;/code&gt; &lt;/a&gt;函数相同。</target>
        </trans-unit>
        <trans-unit id="0a82ee117f4ab7b34cf69b9f475422a38f72ec13" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;a href=&quot;https://developers.google.com/kml/documentation/&quot;&gt;Keyhole Markup Language (KML)&lt;/a&gt; representation of the geometry.</source>
          <target state="translated">接受单个地理字段或表达式，并返回几何的&lt;a href=&quot;https://developers.google.com/kml/documentation/&quot;&gt;Keyhole标记语言（KML）&lt;/a&gt;表示形式。</target>
        </trans-unit>
        <trans-unit id="95f21af24d82a0d743fb2b1ae13bade9e937af0c" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;a href=&quot;https://en.wikipedia.org/wiki/Geography_Markup_Language&quot;&gt;Geographic Markup Language (GML)&lt;/a&gt; representation of the geometry.</source>
          <target state="translated">接受单个地理字段或表达式，并返回几何图形的&lt;a href=&quot;https://en.wikipedia.org/wiki/Geography_Markup_Language&quot;&gt;地理标记语言（GML）&lt;/a&gt;表示形式。</target>
        </trans-unit>
        <trans-unit id="56950137bc79c1fe91b955af4f24e5c6499122ec" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;a href=&quot;https://en.wikipedia.org/wiki/Geohash&quot;&gt;GeoHash&lt;/a&gt; representation of the geometry.</source>
          <target state="translated">接受单个地理字段或表达式，并返回几何的&lt;a href=&quot;https://en.wikipedia.org/wiki/Geohash&quot;&gt;GeoHash&lt;/a&gt;表示形式。</target>
        </trans-unit>
        <trans-unit id="2edd8558ead8c0c41c8046c981a7b5ed180637f0" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;a href=&quot;https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry&quot;&gt;Well-known text (WKT)&lt;/a&gt; representation of the geometry.</source>
          <target state="translated">接受单个地理字段或表达式，并返回几何&lt;a href=&quot;https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry&quot;&gt;的知名文本（WKT）&lt;/a&gt;表示形式。</target>
        </trans-unit>
        <trans-unit id="3571125a5f8d9978dd538b50f30c66266728eb8e" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;a href=&quot;https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry#Well-known_binary&quot;&gt;Well-known binary (WKB)&lt;/a&gt; representation of the geometry.</source>
          <target state="translated">接受单个地理字段或表达式，并返回几何&lt;a href=&quot;https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry#Well-known_binary&quot;&gt;的知名二进制（WKB）&lt;/a&gt;表示形式。</target>
        </trans-unit>
        <trans-unit id="657e11eb33f01b69f5e33eeb949a91f6fd40ee0a" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;a href=&quot;https://geojson.org/&quot;&gt;GeoJSON&lt;/a&gt; representation of the geometry. Note that the result is not a complete GeoJSON structure but only the &lt;code&gt;geometry&lt;/code&gt; key content of a GeoJSON structure. See also &lt;a href=&quot;serializers&quot;&gt;GeoJSON Serializer&lt;/a&gt;.</source>
          <target state="translated">接受单个地理字段或表达式，并返回几何的&lt;a href=&quot;https://geojson.org/&quot;&gt;GeoJSON&lt;/a&gt;表示形式。请注意，结果不是完整的GeoJSON结构，而仅仅是GeoJSON结构的 &lt;code&gt;geometry&lt;/code&gt; 关键内容。另请参见&lt;a href=&quot;serializers&quot;&gt;GeoJSON Serializer&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="14bfeffca9ca818d49288a07690181434cb7c29d" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;a href=&quot;https://www.w3.org/Graphics/SVG/&quot;&gt;Scalable Vector Graphics (SVG)&lt;/a&gt; representation of the geometry.</source>
          <target state="translated">接受单个地理字段或表达式，并返回几何的&lt;a href=&quot;https://www.w3.org/Graphics/SVG/&quot;&gt;可缩放矢量图形（SVG）&lt;/a&gt;表示形式。</target>
        </trans-unit>
        <trans-unit id="9eaceb8f73c655f3cc6a68da79e3d30ea6e56980" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;code&gt;Point&lt;/code&gt; geometry guaranteed to lie on the surface of the field; otherwise returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">接受单个地理字段或表达式，并返回保证位于该字段表面上的 &lt;code&gt;Point&lt;/code&gt; 几何；否则返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e84009ac9a234b365e6fe51fbebd50d36c375d3" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a geometry with all points snapped to the given grid. How the geometry is snapped to the grid depends on how many numeric (either float, integer, or long) arguments are given.</source>
          <target state="translated">接受一个单一的地理区域或表达式,并返回一个包含所有点的几何体,并将其套入给定网格。几何图形如何套入网格取决于给定参数的数量(浮点数、整数或长数)。</target>
        </trans-unit>
        <trans-unit id="1d75b7405eb2f866cf68e396014013bf7002cf93" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a geometry with its coordinates offset by the &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and optionally &lt;code&gt;z&lt;/code&gt; numeric parameters.</source>
          <target state="translated">接受单个地理字段或表达式，并返回其坐标偏移 &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;y&lt;/code&gt; 和（可选） &lt;code&gt;z&lt;/code&gt; 数字参数的几何。</target>
        </trans-unit>
        <trans-unit id="11726a810332e7e30ca7913f37c322116b5e114f" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a geometry with reversed coordinates.</source>
          <target state="translated">接受一个单一的地理区域或表达式,并返回一个具有反向坐标的几何体。</target>
        </trans-unit>
        <trans-unit id="19f890c9c0859a45cf1fdbe2e69ff88d46456dc9" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a geometry with scaled coordinates by multiplying them with the &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and optionally &lt;code&gt;z&lt;/code&gt; parameters.</source>
          <target state="translated">接受单个地理字段或表达式，并通过将其与 &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;y&lt;/code&gt; 和可选的 &lt;code&gt;z&lt;/code&gt; 参数相乘来返回具有缩放坐标的几何。</target>
        </trans-unit>
        <trans-unit id="50ed891d166b4c3b41549d228485aaff67d3e2b4" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a modified version of the polygon/multipolygon in which all exterior rings are oriented clockwise and all interior rings are oriented counterclockwise. Non-polygonal geometries are returned unchanged.</source>
          <target state="translated">接受一个单一的地理区域或表达式,并返回一个修改后的多边形/多角形,其中所有外环都是顺时针方向,所有内环都是逆时针方向。非多角形的几何图形将保持不变。</target>
        </trans-unit>
        <trans-unit id="3f683d3ed41ea8f15ff7f4b8fd69947814c3d503" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the &lt;code&gt;centroid&lt;/code&gt; value of the geometry.</source>
          <target state="translated">接受单个地理字段或表达式，并返回几何的 &lt;code&gt;centroid&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="a16fb807e556b8168c52b4c02df11039d3c22778" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the area of the field as an &lt;a href=&quot;measure#django.contrib.gis.measure.Area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; measure.</source>
          <target state="translated">接受单个地理字段或表达式，并将该字段的&lt;a href=&quot;measure#django.contrib.gis.measure.Area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt;作为&amp;ldquo; 面积&amp;rdquo;度量值返回。</target>
        </trans-unit>
        <trans-unit id="894baa74f10f984cb42ee3542530dcac1030b236" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the geometry representing the bounding box of the geometry.</source>
          <target state="translated">接受一个单一的地理区域或表达式,并返回代表该几何体边界框的几何体。</target>
        </trans-unit>
        <trans-unit id="b9a576062e78c1c62c2d11552d4116e25853b0ec" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the memory size (number of bytes) that the geometry field takes.</source>
          <target state="translated">接受单个地理字段或表达式,并返回几何字段占用的内存大小(字节数)。</target>
        </trans-unit>
        <trans-unit id="1405cab29ed4f82b8153fbc0581c26e14c0bc05a" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the number of geometries if the geometry field is a collection (e.g., a &lt;code&gt;GEOMETRYCOLLECTION&lt;/code&gt; or &lt;code&gt;MULTI*&lt;/code&gt; field). Returns 1 for single geometries.</source>
          <target state="translated">如果几何字段是集合（例如， &lt;code&gt;GEOMETRYCOLLECTION&lt;/code&gt; 或 &lt;code&gt;MULTI*&lt;/code&gt; 字段），则接受单个地理字段或表达式并返回几何数量。对于单个几何返回1。</target>
        </trans-unit>
        <trans-unit id="4bafcd90cee37aa8bf66b2eb68ddf7dda0f2f16d" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the number of points in a geometry.</source>
          <target state="translated">接受单个地理区域或表达式,并返回几何体中的点的数量。</target>
        </trans-unit>
        <trans-unit id="e1a3b53570fa1619e85009fc2e43afc948df7def" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the perimeter of the geometry field as a &lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">接受单个地理字段或表达式，并将几何字段的周长作为&lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt; &lt;code&gt;Distance&lt;/code&gt; &lt;/a&gt;对象返回。</target>
        </trans-unit>
        <trans-unit id="9f87d11cff69a70303d5e7c77cbfef1fc27494e1" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the smallest circle polygon that can fully contain the geometry.</source>
          <target state="translated">接受单个地理字段或表达式,并返回能够完全包含几何体的最小圆多边形。</target>
        </trans-unit>
        <trans-unit id="9b263a6957772a42280da039db9e98bbe33bd417" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic linestring or multilinestring field or expression and returns its length as a &lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/a&gt; measure.</source>
          <target state="translated">接受单个地理线串或多线串字段或表达式，并返回其长度作为&lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt; &lt;code&gt;Distance&lt;/code&gt; &lt;/a&gt;度量。</target>
        </trans-unit>
        <trans-unit id="0f0f937f22036d4da21aaf24afbf52a9eb9d0201" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or an expression, a query, a config, and a set of options. Returns highlighted search results.</source>
          <target state="translated">接受一个文本字段或一个表达式、一个查询、一个配置和一组选项。返回高亮显示的搜索结果。</target>
        </trans-unit>
        <trans-unit id="e94bb56a17617d1d457d56e9cbbcda0a2fff3aed" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or expression and returns the MD5 hash of the string.</source>
          <target state="translated">接受单个文本字段或表达式,并返回字符串的MD5哈希值。</target>
        </trans-unit>
        <trans-unit id="9ae8765b2acec59844a12c8e2e495aa22aec2438" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or expression and returns the Unicode code point value for the first character of that expression. It works similar to Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/functions.html#ord&quot;&gt;&lt;code&gt;ord()&lt;/code&gt;&lt;/a&gt; function, but an exception isn&amp;rsquo;t raised if the expression is more than one character long.</source>
          <target state="translated">接受单个文本字段或表达式，并为该表达式的第一个字符返回Unicode代码点值。它的工作方式类似于Python的&lt;a href=&quot;https://docs.python.org/3/library/functions.html#ord&quot;&gt; &lt;code&gt;ord()&lt;/code&gt; &lt;/a&gt;函数，但是如果表达式长度超过一个字符，则不会引发异常。</target>
        </trans-unit>
        <trans-unit id="549c3fd3fc223077dcaadcf7f13534cf15c32595" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or expression and returns the characters of that expression in reverse order.</source>
          <target state="translated">接受单个文本字段或表达式,并将该表达式的字符按相反顺序返回。</target>
        </trans-unit>
        <trans-unit id="74229dcf98653374b869555ef5f0abe75fcf68bb" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or expression and returns the lowercase representation.</source>
          <target state="translated">接受单个文本字段或表达式,并返回小写表示。</target>
        </trans-unit>
        <trans-unit id="e06db45cb0075a89734c8009693479cd720e1d83" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or expression and returns the number of characters the value has. If the expression is null, then the length will also be null.</source>
          <target state="translated">接受单个文本字段或表达式,并返回值的字符数。如果表达式为空,则长度也为空。</target>
        </trans-unit>
        <trans-unit id="71f22e95c98dffd3a8ec5fc5c82730d47889766d" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or expression and returns the particular hash of the string.</source>
          <target state="translated">接受单个文本字段或表达式,并返回字符串的特定哈希值。</target>
        </trans-unit>
        <trans-unit id="4b2b5833bcf18880c991919c7207a6a57cbabf44" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or expression and returns the uppercase representation.</source>
          <target state="translated">接受单个文本字段或表达式,并返回大写表示。</target>
        </trans-unit>
        <trans-unit id="ea58a83f52f471ce437448da8c01634ab701fee5" translate="yes" xml:space="preserve">
          <source>Accepts any format understood by &lt;a href=&quot;../utils#django.utils.dateparse.parse_duration&quot;&gt;&lt;code&gt;parse_duration()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">接受&lt;a href=&quot;../utils#django.utils.dateparse.parse_duration&quot;&gt; &lt;code&gt;parse_duration()&lt;/code&gt; 可以&lt;/a&gt;理解的任何格式。</target>
        </trans-unit>
        <trans-unit id="9e4915db3019ce7f68f5dd7ee8090bc81c9101b1" translate="yes" xml:space="preserve">
          <source>Accepts two expressions and returns &lt;code&gt;None&lt;/code&gt; if they are equal, otherwise returns &lt;code&gt;expression1&lt;/code&gt;.</source>
          <target state="translated">接受两个表达式，如果相等则返回 &lt;code&gt;None&lt;/code&gt; ，否则返回 &lt;code&gt;expression1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee7856f2001d93e76e9b8af8270479d621a210cd" translate="yes" xml:space="preserve">
          <source>Accepts two geographic fields or expressions and returns the distance between them, as a &lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/a&gt; object. On MySQL, a raw float value is returned when the coordinates are geodetic.</source>
          <target state="translated">接受两个地理字段或表达式，并将它们之间的距离作为&lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt; &lt;code&gt;Distance&lt;/code&gt; &lt;/a&gt;对象返回。在MySQL上，当坐标为大地坐标时，将返回原始浮点值。</target>
        </trans-unit>
        <trans-unit id="958327c3e5327273cc2f3161e66e45020fff9c66" translate="yes" xml:space="preserve">
          <source>Accepts two geographic fields or expressions and returns the distance between them. When used in an &lt;a href=&quot;../../models/querysets#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt; clause, it provides index-assisted nearest-neighbor result sets.</source>
          <target state="translated">接受两个地理字段或表达式并返回它们之间的距离。在&lt;a href=&quot;../../models/querysets#django.db.models.query.QuerySet.order_by&quot;&gt; &lt;code&gt;order_by()&lt;/code&gt; &lt;/a&gt;子句中使用时，它提供索引辅助的最近邻居结果集。</target>
        </trans-unit>
        <trans-unit id="d806ff458db000b20381bf0310c3d85777aca1a9" translate="yes" xml:space="preserve">
          <source>Accepts two geographic fields or expressions and returns the geometric difference, that is the part of geometry A that does not intersect with geometry B.</source>
          <target state="translated">接受两个地理场或表达式,并返回几何差值,即几何体A与几何体B不相交的部分。</target>
        </trans-unit>
        <trans-unit id="5f8e0479b490fd8a5168039d9c00a12fcb470f1a" translate="yes" xml:space="preserve">
          <source>Accepts two geographic fields or expressions and returns the geometric intersection between them.</source>
          <target state="translated">接受两个地理区域或表达式,并返回它们之间的几何交叉点。</target>
        </trans-unit>
        <trans-unit id="03cd71f01f6f1f5993554ef614bcf4862e65af76" translate="yes" xml:space="preserve">
          <source>Accepts two geographic fields or expressions and returns the geometric symmetric difference (union without the intersection) between the given parameters.</source>
          <target state="translated">接受两个地理区域或表达式,并返回给定参数之间的几何对称差值(无交点的结合)。</target>
        </trans-unit>
        <trans-unit id="d74f7c7cef82abfe45344bcbeb4804272efaa5c8" translate="yes" xml:space="preserve">
          <source>Accepts two geographic fields or expressions and returns the union of both geometries.</source>
          <target state="translated">接受两个地理区域或表达式,并返回两个几何体的结合。</target>
        </trans-unit>
        <trans-unit id="fe506cac1179895dadcf2a28dd9fc43f361e3104" translate="yes" xml:space="preserve">
          <source>Accepts two numeric fields or expressions and returns the logarithm of the first to base of the second.</source>
          <target state="translated">接受两个数字字段或表达式,并返回第一个字段的对数到第二个字段的基数。</target>
        </trans-unit>
        <trans-unit id="439402aace1e8ee2628b4527313d1b3db278c384" translate="yes" xml:space="preserve">
          <source>Accepts two numeric fields or expressions and returns the remainder of the first divided by the second (modulo operation).</source>
          <target state="translated">接受两个数字字段或表达式,并返回第一个字段除以第二个字段的余数(模数运算)。</target>
        </trans-unit>
        <trans-unit id="3682b37ac52be11c06f4185d23eb9ef0443a03f0" translate="yes" xml:space="preserve">
          <source>Accepts two numeric fields or expressions and returns the value of the first raised to the power of the second.</source>
          <target state="translated">接受两个数字字段或表达式,并将第一个字段的值提高到第二个字段的幂。</target>
        </trans-unit>
        <trans-unit id="27fa97d87729019951db2d8a6aebd5731fee67d6" translate="yes" xml:space="preserve">
          <source>Access the &lt;a href=&quot;#django.forms.Form.errors&quot;&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/a&gt; attribute to get a dictionary of error messages:</source>
          <target state="translated">访问&lt;a href=&quot;#django.forms.Form.errors&quot;&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/a&gt;属性以获取错误消息字典：</target>
        </trans-unit>
        <trans-unit id="70844f99b01c9887bd3cd6ac918267f64ac095d5" translate="yes" xml:space="preserve">
          <source>Access to delete an object is limited to users with the &amp;ldquo;delete&amp;rdquo; permission for that type of object.</source>
          <target state="translated">删除对象的权限仅限于具有该对象类型的&amp;ldquo;删除&amp;rdquo;权限的用户。</target>
        </trans-unit>
        <trans-unit id="366a11d335f02df3f29598095bfe942fd23dae76" translate="yes" xml:space="preserve">
          <source>Access to view objects is limited to users with the &amp;ldquo;view&amp;rdquo; or &amp;ldquo;change&amp;rdquo; permission for that type of object.</source>
          <target state="translated">对查看对象的访问仅限于对该类型对象具有&amp;ldquo;查看&amp;rdquo;或&amp;ldquo;更改&amp;rdquo;权限的用户。</target>
        </trans-unit>
        <trans-unit id="38e06500cb4d92bb119465a50fb9b86093a6009c" translate="yes" xml:space="preserve">
          <source>Access to view the &amp;ldquo;add&amp;rdquo; form and add an object is limited to users with the &amp;ldquo;add&amp;rdquo; permission for that type of object.</source>
          <target state="translated">只有具有相应类型对象&amp;ldquo;添加&amp;rdquo;权限的用户才能查看&amp;ldquo;添加&amp;rdquo;表单和添加对象。</target>
        </trans-unit>
        <trans-unit id="93db48fd1dde234b588b1a45da085aa25579c603" translate="yes" xml:space="preserve">
          <source>Access to view the change list, view the &amp;ldquo;change&amp;rdquo; form and change an object is limited to users with the &amp;ldquo;change&amp;rdquo; permission for that type of object.</source>
          <target state="translated">只能查看具有该类型对象的&amp;ldquo;更改&amp;rdquo;权限的用户才能查看更改列表，查看&amp;ldquo;更改&amp;rdquo;表单和更改对象。</target>
        </trans-unit>
        <trans-unit id="2813c4129c2938f226f74f0d6397ea87e54eeead" translate="yes" xml:space="preserve">
          <source>Accessing &amp;ldquo;clean&amp;rdquo; data</source>
          <target state="translated">访问&amp;ldquo;干净&amp;rdquo;数据</target>
        </trans-unit>
        <trans-unit id="4fbacb7119cba6d5d1991036814bdceefb24b0f5" translate="yes" xml:space="preserve">
          <source>Accessing &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.POST&quot;&gt;&lt;code&gt;request.POST&lt;/code&gt;&lt;/a&gt; inside middleware before the view runs or in &lt;code&gt;process_view()&lt;/code&gt; will prevent any view running after the middleware from being able to &lt;a href=&quot;file-uploads#modifying-upload-handlers-on-the-fly&quot;&gt;modify the upload handlers for the request&lt;/a&gt;, and should normally be avoided.</source>
          <target state="translated">在视图运行之前或在 &lt;code&gt;process_view()&lt;/code&gt; 中访问中间件内部的&lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.POST&quot;&gt; &lt;code&gt;request.POST&lt;/code&gt; &lt;/a&gt;将阻止在中间件之后运行的任何视图能够&lt;a href=&quot;file-uploads#modifying-upload-handlers-on-the-fly&quot;&gt;修改请求的上载处理程序&lt;/a&gt;，通常应避免。</target>
        </trans-unit>
        <trans-unit id="dba8c55facde2fcbf3afa09a373e3e68108704d8" translate="yes" xml:space="preserve">
          <source>Accessing method calls</source>
          <target state="translated">访问方法调用</target>
        </trans-unit>
        <trans-unit id="9e9865ef8d15c01595b6b655ad850c74bce1812a" translate="yes" xml:space="preserve">
          <source>Accessing models from other apps</source>
          <target state="translated">从其他应用程序访问模型</target>
        </trans-unit>
        <trans-unit id="bbc0ef11767ffcb6245d3a45e892639cc25a7bb1" translate="yes" xml:space="preserve">
          <source>Accessing the cache</source>
          <target state="translated">访问缓存</target>
        </trans-unit>
        <trans-unit id="f2275e202f6f5545a5e5a268c8877e7f21562068" translate="yes" xml:space="preserve">
          <source>Accessing the fields from the form</source>
          <target state="translated">从表格中访问字段</target>
        </trans-unit>
        <trans-unit id="8bd4b1d305d7be0f627fb7f8c1aa2a94b62c4214" translate="yes" xml:space="preserve">
          <source>According to this design, the URL for the archive corresponding to year &lt;em&gt;nnnn&lt;/em&gt; is &lt;code&gt;/articles/&amp;lt;nnnn&amp;gt;/&lt;/code&gt;.</source>
          <target state="translated">根据这种设计，对应于年份&lt;em&gt;nnnn&lt;/em&gt;的档案的URL 是 &lt;code&gt;/articles/&amp;lt;nnnn&amp;gt;/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="daabc7b465ab7ca34a13943237cf2f1d8a517b51" translate="yes" xml:space="preserve">
          <source>Acquiring the token if &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt;&lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt;&lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt;&lt;/a&gt; are &lt;code&gt;False&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt; &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt; &lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;False&lt;/code&gt; ,则获取令牌</target>
        </trans-unit>
        <trans-unit id="e04b42ab7f6e52405f0521b9742bf7a1cd0f86c4" translate="yes" xml:space="preserve">
          <source>Acquiring the token if &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt;&lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt;&lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;</source>
          <target state="translated">如果&lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt; &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt; &lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;True&lt;/code&gt; ,则获取令牌</target>
        </trans-unit>
        <trans-unit id="efc107784283b34b7f7958205ac5438711b20983" translate="yes" xml:space="preserve">
          <source>Actions as &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; methods</source>
          <target state="translated">作为&lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;方法的操作</target>
        </trans-unit>
        <trans-unit id="eb816f654713bed5c74865320bee81f41e3ccd80" translate="yes" xml:space="preserve">
          <source>Actions may limit their availability to users with specific permissions by setting an &lt;code&gt;allowed_permissions&lt;/code&gt; attribute on the action function:</source>
          <target state="translated">通过在动作函数上设置 &lt;code&gt;allowed_permissions&lt;/code&gt; 属性，动作可以将其可用性限制为具有特定权限的用户：</target>
        </trans-unit>
        <trans-unit id="f9e1795879dfbc37215933b8cc56a60f6f0fbf82" translate="yes" xml:space="preserve">
          <source>Actions that provide intermediate pages</source>
          <target state="translated">提供中间页的行动</target>
        </trans-unit>
        <trans-unit id="9951a92b331c9d8caf130eb6889f831dc049a60e" translate="yes" xml:space="preserve">
          <source>Activate this view by adding the following line to your URLconf:</source>
          <target state="translated">在你的URLconf中添加以下行来激活该视图。</target>
        </trans-unit>
        <trans-unit id="0aa4c06f0fcad75c97ecc22ca28a7b36d66d0f5d" translate="yes" xml:space="preserve">
          <source>Activates some additional checks that are only relevant in a deployment setting.</source>
          <target state="translated">激活一些仅在部署环境中相关的附加检查。</target>
        </trans-unit>
        <trans-unit id="4b4f7663e482a79242a94ee26cd46a50169934e7" translate="yes" xml:space="preserve">
          <source>Activating middleware</source>
          <target state="translated">激活中间件</target>
        </trans-unit>
        <trans-unit id="c7f5b8c15f3e67199af71c91865179df3a82c15f" translate="yes" xml:space="preserve">
          <source>Activating models</source>
          <target state="translated">激活模式</target>
        </trans-unit>
        <trans-unit id="6425bc77fc2311d432f3c6dadc948ecec41755af" translate="yes" xml:space="preserve">
          <source>Acts just like &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; but uses a 400 status code.</source>
          <target state="translated">行为类似于&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; ,&lt;/a&gt;但使用400状态代码。</target>
        </trans-unit>
        <trans-unit id="1ad023f335ce1f4a613b48dd7e19ffe903630c0d" translate="yes" xml:space="preserve">
          <source>Acts just like &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; but uses a 403 status code.</source>
          <target state="translated">行为类似于&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; ,&lt;/a&gt;但使用403状态代码。</target>
        </trans-unit>
        <trans-unit id="19f379d64f80d0caaf87d4defa31809099a865ce" translate="yes" xml:space="preserve">
          <source>Acts just like &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; but uses a 404 status code.</source>
          <target state="translated">行为类似于&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; ,&lt;/a&gt;但使用404状态代码。</target>
        </trans-unit>
        <trans-unit id="387a1008617d77a04b9deccff0a2d5bfaa3553a1" translate="yes" xml:space="preserve">
          <source>Acts just like &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; but uses a 410 status code.</source>
          <target state="translated">行为类似于&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; ,&lt;/a&gt;但使用410状态代码。</target>
        </trans-unit>
        <trans-unit id="35155d5f679b570e59ff0ecc8dbdfe14fd4aaea6" translate="yes" xml:space="preserve">
          <source>Acts just like &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; but uses a 500 status code.</source>
          <target state="translated">行为类似于&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; ,&lt;/a&gt;但使用500状态代码。</target>
        </trans-unit>
        <trans-unit id="251ce9dca3225b5cb410dc91fa95b1a8c4234fa1" translate="yes" xml:space="preserve">
          <source>Acts like &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.items&quot;&gt;&lt;code&gt;dict.items()&lt;/code&gt;&lt;/a&gt; for HTTP headers on the response.</source>
          <target state="translated">对于响应中的HTTP标头，其行为类似于&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.items&quot;&gt; &lt;code&gt;dict.items()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="61cc55aa0453184734c3fa0b621eda6fa874bd83" translate="yes" xml:space="preserve">
          <source>Add</source>
          <target state="translated">Add</target>
        </trans-unit>
        <trans-unit id="1781f1983893889bfb4e2f805c1c4ac45e575a3d" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;#module-django.contrib.admindocs&quot;&gt;&lt;code&gt;django.contrib.admindocs&lt;/code&gt;&lt;/a&gt; to your &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将&lt;a href=&quot;#module-django.contrib.admindocs&quot;&gt; &lt;code&gt;django.contrib.admindocs&lt;/code&gt; &lt;/a&gt;添加到您的&lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aee32ce5a37fb08ca19c3c059f786253013a8558" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.admin'&lt;/code&gt; and its dependencies - &lt;a href=&quot;../../../topics/auth/index#module-django.contrib.auth&quot;&gt;&lt;code&gt;django.contrib.auth&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../contenttypes#module-django.contrib.contenttypes&quot;&gt;&lt;code&gt;django.contrib.contenttypes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../messages#module-django.contrib.messages&quot;&gt;&lt;code&gt;django.contrib.messages&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../../topics/http/sessions#module-django.contrib.sessions&quot;&gt;&lt;code&gt;django.contrib.sessions&lt;/code&gt;&lt;/a&gt; - to your &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">将 &lt;code&gt;'django.contrib.admin'&lt;/code&gt; 及其依赖项&lt;a href=&quot;../../../topics/auth/index#module-django.contrib.auth&quot;&gt; &lt;code&gt;django.contrib.auth&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../contenttypes#module-django.contrib.contenttypes&quot;&gt; &lt;code&gt;django.contrib.contenttypes&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../messages#module-django.contrib.messages&quot;&gt; &lt;code&gt;django.contrib.messages&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../../topics/http/sessions#module-django.contrib.sessions&quot;&gt; &lt;code&gt;django.contrib.sessions&lt;/code&gt; 添加&lt;/a&gt;到您的&lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置中。</target>
        </trans-unit>
        <trans-unit id="8e18e6aa0b565d8aa03bcbedee7dbaa75a0dca49" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.flatpages'&lt;/code&gt; to your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">将 &lt;code&gt;'django.contrib.flatpages'&lt;/code&gt; 添加到您的&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置中。</target>
        </trans-unit>
        <trans-unit id="08f59dc4b59961edb6f73a3a7b17606a7b566d9e" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware'&lt;/code&gt; to your &lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">将 &lt;code&gt;'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware'&lt;/code&gt; 添加到您的&lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt;设置中。</target>
        </trans-unit>
        <trans-unit id="0397db5067511c5655f72ed2eeb2c56c8e0f042a" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.postgres'&lt;/code&gt; in your &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在您的&lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 中&lt;/a&gt;添加 &lt;code&gt;'django.contrib.postgres'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="174d52a78c97ad32e9199eded7fb3ff59db50471" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.redirects'&lt;/code&gt; to your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">将 &lt;code&gt;'django.contrib.redirects'&lt;/code&gt; 添加到您的&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="143d4d686f2f6b2ecc4271019cc19e1a5e24cb8f" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.redirects.middleware.RedirectFallbackMiddleware'&lt;/code&gt; to your &lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">将 &lt;code&gt;'django.contrib.redirects.middleware.RedirectFallbackMiddleware'&lt;/code&gt; 添加到您的&lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt;设置中。</target>
        </trans-unit>
        <trans-unit id="45606432fd93c03462735cd98f148a73fdb9d96b" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.sitemaps'&lt;/code&gt; to your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">将 &lt;code&gt;'django.contrib.sitemaps'&lt;/code&gt; 添加到您的&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置中。</target>
        </trans-unit>
        <trans-unit id="7ad2903b96cc7c2efcfa526b8b0aa8ac2eb3c98b" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.sites'&lt;/code&gt; to your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">将 &lt;code&gt;'django.contrib.sites'&lt;/code&gt; 添加到您的&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置中。</target>
        </trans-unit>
        <trans-unit id="2d94ca7b85226ff148b3305333826d511bd6f89c" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;django.contrib.gis&lt;/code&gt; to &lt;a href=&quot;../../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">将 &lt;code&gt;django.contrib.gis&lt;/code&gt; 添加到&lt;a href=&quot;../../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9222fafb5ea216f3ae56e452996c046dd3381b66" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;path('admin/doc/', include('django.contrib.admindocs.urls'))&lt;/code&gt; to your &lt;code&gt;urlpatterns&lt;/code&gt;. Make sure it&amp;rsquo;s included &lt;em&gt;before&lt;/em&gt; the &lt;code&gt;'admin/'&lt;/code&gt; entry, so that requests to &lt;code&gt;/admin/doc/&lt;/code&gt; don&amp;rsquo;t get handled by the latter entry.</source>
          <target state="translated">将 &lt;code&gt;path('admin/doc/', include('django.contrib.admindocs.urls'))&lt;/code&gt; &lt;code&gt;urlpatterns&lt;/code&gt; '））添加到您的urlpatterns中。确保在 &lt;code&gt;'admin/'&lt;/code&gt; 条目&lt;em&gt;之前&lt;/em&gt;包含了该条目，以免后一个条目处理对 &lt;code&gt;/admin/doc/&lt;/code&gt; 请求。</target>
        </trans-unit>
        <trans-unit id="542cc9c2b819f97521525dba6aaade88bad47f25" translate="yes" xml:space="preserve">
          <source>Add a Waiter to the Restaurant:</source>
          <target state="translated">在餐厅中增加一个服务员。</target>
        </trans-unit>
        <trans-unit id="84da544896ff6b09ffc33abb5a1e8af7c965d705" translate="yes" xml:space="preserve">
          <source>Add a callback that will be invoked after rendering has taken place. This hook can be used to defer certain processing operations (such as caching) until after rendering has occurred.</source>
          <target state="translated">添加一个回调,将在渲染发生后被调用。该钩子可用于将某些处理操作(如缓存)推迟到渲染发生后进行。</target>
        </trans-unit>
        <trans-unit id="312ff4feee6ea5004410a1e36dd7a51cbd167d9f" translate="yes" xml:space="preserve">
          <source>Add a classmethod on the model class:</source>
          <target state="translated">在模型类上增加一个类方法。</target>
        </trans-unit>
        <trans-unit id="c56cd0b17a6484404450cbece72765986670d747" translate="yes" xml:space="preserve">
          <source>Add a method on a custom manager (usually preferred):</source>
          <target state="translated">在自定义管理器上添加一个方法(通常是首选)。</target>
        </trans-unit>
        <trans-unit id="7eea3ddaf55306731e16d78033c237bd4b6b9a17" translate="yes" xml:space="preserve">
          <source>Add an entry in your URLconf. For example:</source>
          <target state="translated">在你的URLconf中添加一个条目。例如</target>
        </trans-unit>
        <trans-unit id="7c5c60eeeda06a7cbea23a2031ee90e364746f1e" translate="yes" xml:space="preserve">
          <source>Add an item to the feed with the given parameters.</source>
          <target state="translated">用给定的参数将一个项目添加到feed中。</target>
        </trans-unit>
        <trans-unit id="9c967c762729f4dcb287ed7d1527256f1992f670" translate="yes" xml:space="preserve">
          <source>Add elements in the root (i.e. feed/channel) element. Called from &lt;code&gt;write()&lt;/code&gt;.</source>
          <target state="translated">在根（即feed / channel）元素中添加元素。从 &lt;code&gt;write()&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="064def1c016a4c0f855806eea4b737660d8b6c5e" translate="yes" xml:space="preserve">
          <source>Add elements on each item (i.e. item/entry) element.</source>
          <target state="translated">在每个项目(即项目/条目)元素上添加元素。</target>
        </trans-unit>
        <trans-unit id="d332082a7d97d7c4d3b54712a6248ddea608f173" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;#django.db.models.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.db.models.ImageField&quot;&gt;&lt;code&gt;ImageField&lt;/code&gt;&lt;/a&gt; to your model, defining the &lt;a href=&quot;#django.db.models.FileField.upload_to&quot;&gt;&lt;code&gt;upload_to&lt;/code&gt;&lt;/a&gt; option to specify a subdirectory of &lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt;&lt;/a&gt; to use for uploaded files.</source>
          <target state="translated">将&lt;a href=&quot;#django.db.models.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#django.db.models.ImageField&quot;&gt; &lt;code&gt;ImageField&lt;/code&gt; &lt;/a&gt;添加到模型中，定义&lt;a href=&quot;#django.db.models.FileField.upload_to&quot;&gt; &lt;code&gt;upload_to&lt;/code&gt; &lt;/a&gt;选项，以指定&lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt; &lt;code&gt;MEDIA_ROOT&lt;/code&gt; &lt;/a&gt;的子目录以用于上载的文件。</target>
        </trans-unit>
        <trans-unit id="7ce97b976111d12dea30ef369832a81b6f8c5c88" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;system_check_deprecated_details&lt;/code&gt; attribute to your model field similar to the following:</source>
          <target state="translated">将 &lt;code&gt;system_check_deprecated_details&lt;/code&gt; 属性添加到模型字段中，如下所示：</target>
        </trans-unit>
        <trans-unit id="c775d2405227f64cfab31b8ebb0bd2e958a68989" translate="yes" xml:space="preserve">
          <source>Add the current instance (&lt;code&gt;self.object&lt;/code&gt;) to the standard &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_form_kwargs&quot;&gt;&lt;code&gt;get_form_kwargs()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将当前实例（ &lt;code&gt;self.object&lt;/code&gt; ）添加到标准get_form_kwargs &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_form_kwargs&quot;&gt; &lt;code&gt;get_form_kwargs()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23d9164c11ffee165ad5824e194a73e3c5b602a6" translate="yes" xml:space="preserve">
          <source>Add the default value to your field and run the &lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; command. This should generate a migration with an &lt;code&gt;AlterField&lt;/code&gt; operation.</source>
          <target state="translated">将默认值添加到您的字段，然后运行&lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt;命令。这应该使用 &lt;code&gt;AlterField&lt;/code&gt; 操作生成迁移。</target>
        </trans-unit>
        <trans-unit id="b6681e3e9d5f8f7e8e7120280f1f2a7979086c58" translate="yes" xml:space="preserve">
          <source>Add the field on your model with &lt;code&gt;default=uuid.uuid4&lt;/code&gt; and &lt;code&gt;unique=True&lt;/code&gt; arguments (choose an appropriate default for the type of the field you&amp;rsquo;re adding).</source>
          <target state="translated">使用 &lt;code&gt;default=uuid.uuid4&lt;/code&gt; 和 &lt;code&gt;unique=True&lt;/code&gt; 参数在模型上添加字段（为要添加的字段的类型选择适当的默认值）。</target>
        </trans-unit>
        <trans-unit id="02e1da9ced0fc993734740c21f17ae2a87c975ef" translate="yes" xml:space="preserve">
          <source>Add the following middleware to &lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">将以下中间件添加到&lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="81e22044472d5af6216bb40b88cc70aa51aa6e2e" translate="yes" xml:space="preserve">
          <source>Add the following to &lt;code&gt;polls/tests.py&lt;/code&gt;:</source>
          <target state="translated">将以下内容添加到 &lt;code&gt;polls/tests.py&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5c39e16b32deb2f096fa3a5cb2d52f59ee8c1559" translate="yes" xml:space="preserve">
          <source>Add the nullable field without the default value and run the &lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; command. This should generate a migration with an &lt;code&gt;AddField&lt;/code&gt; operation.</source>
          <target state="translated">添加不带默认值的可为空字段，然后运行&lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt;命令。这应该使用 &lt;code&gt;AddField&lt;/code&gt; 操作生成迁移。</target>
        </trans-unit>
        <trans-unit id="897846243edef3b03fde13f648c9bf56469bd194" translate="yes" xml:space="preserve">
          <source>Add the same article to a different article set - check that it moves:</source>
          <target state="translated">将同一篇文章添加到不同的文章集中--检查它是否移动。</target>
        </trans-unit>
        <trans-unit id="da7de644f515ca77678230d2a489c2a0f1a496f0" translate="yes" xml:space="preserve">
          <source>Add two more test methods to the same class, to test the behavior of the method more comprehensively:</source>
          <target state="translated">在同一个类中增加两个测试方法,更全面地测试方法的行为。</target>
        </trans-unit>
        <trans-unit id="b98dc98fe9e447d835aef4277affce64c01dd401" translate="yes" xml:space="preserve">
          <source>Add your new hasher as the first entry in &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt;&lt;code&gt;PASSWORD_HASHERS&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">将您的新哈希添加为&lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt; &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; 中&lt;/a&gt;的第一项：</target>
        </trans-unit>
        <trans-unit id="c4f919a2b3ad49ac11fcd9dcc041e6e2629763b4" translate="yes" xml:space="preserve">
          <source>Adding &lt;code&gt;related_name&lt;/code&gt; to the &lt;code&gt;customers&lt;/code&gt; field as follows would resolve the error: &lt;code&gt;models.ManyToManyField(Place, related_name='provider')&lt;/code&gt;.</source>
          <target state="translated">添加 &lt;code&gt;related_name&lt;/code&gt; 到 &lt;code&gt;customers&lt;/code&gt; 现场如下就解决了错误： &lt;code&gt;models.ManyToManyField(Place, related_name='provider')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd68975af9ff6bf42b31e25093a9ca4bc04db184" translate="yes" xml:space="preserve">
          <source>Adding a &lt;code&gt;deconstruct()&lt;/code&gt; method</source>
          <target state="translated">添加一个 &lt;code&gt;deconstruct()&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="7e2866da8913b39ced8f2ec66b3247474f2ebdaf" translate="yes" xml:space="preserve">
          <source>Adding a background-image</source>
          <target state="translated">添加背景图片</target>
        </trans-unit>
        <trans-unit id="0d892178c15bd974d128fa41f9821824862b1564" translate="yes" xml:space="preserve">
          <source>Adding a foreign key from one of your own models to &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; allows your model to effectively tie itself to another model class, as in the example of the &lt;a href=&quot;auth#django.contrib.auth.models.Permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt; model above. But it&amp;rsquo;s possible to go one step further and use &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; to enable truly generic (sometimes called &amp;ldquo;polymorphic&amp;rdquo;) relationships between models.</source>
          <target state="translated">如上面的&lt;a href=&quot;auth#django.contrib.auth.models.Permission&quot;&gt; &lt;code&gt;Permission&lt;/code&gt; &lt;/a&gt;模型的示例所示，将您自己的模型中的外键添加到&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;可以使您的模型有效地与另一个模型类关联。但是可以更进一步，使用&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;启用模型之间的真正通用（有时称为&amp;ldquo;多态&amp;rdquo;）关系。</target>
        </trans-unit>
        <trans-unit id="f32d42966426915a684928a50a3f91eefcb2668c" translate="yes" xml:space="preserve">
          <source>Adding a message</source>
          <target state="translated">添加信息</target>
        </trans-unit>
        <trans-unit id="9647b442f7b65a49aa241643ed53e216f831e273" translate="yes" xml:space="preserve">
          <source>Adding a password reset feature</source>
          <target state="translated">增加密码重置功能</target>
        </trans-unit>
        <trans-unit id="737275ab3224f8851da2d9bbb1a5a7c02b448f55" translate="yes" xml:space="preserve">
          <source>Adding a second time is OK, it will not duplicate the relation:</source>
          <target state="translated">添加第二次就可以了,不会重复关系。</target>
        </trans-unit>
        <trans-unit id="b717fb8e46bbd80f84d44a868651e9774677833a" translate="yes" xml:space="preserve">
          <source>Adding actions to the &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">向&lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;添加操作</target>
        </trans-unit>
        <trans-unit id="7fb6dd5ea495cc9b3ab9a76c1b753884aba14e9b" translate="yes" xml:space="preserve">
          <source>Adding additional fields to a formset</source>
          <target state="translated">为表单集添加附加字段</target>
        </trans-unit>
        <trans-unit id="f9e4c9a8b7d7bdf21d02d1603728d6f080e21fd5" translate="yes" xml:space="preserve">
          <source>Adding an automatic primary key field to the model if you don&amp;rsquo;t declare it. To avoid confusion for later code readers, it&amp;rsquo;s recommended to specify all the columns from the database table you are modeling when using unmanaged models.</source>
          <target state="translated">如果不声明，则向模型添加自动主键字段。为避免对以后的代码阅读器造成混淆，建议在使用非托管模型时从正在建模的数据库表中指定所有列。</target>
        </trans-unit>
        <trans-unit id="a677f2d3d7d36704d5ef8fe9f52670fb7004e7da" translate="yes" xml:space="preserve">
          <source>Adding an index to your database may help to improve ordering performance.</source>
          <target state="translated">在您的数据库中添加一个索引可能有助于提高订购性能。</target>
        </trans-unit>
        <trans-unit id="4b94c475955db5b6e3e02bf21b87eea5874a2a38" translate="yes" xml:space="preserve">
          <source>Adding an object of the wrong type raises &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">添加错误类型的对象会引发&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="2480784cdec9378029855e4634deeb18753830ae" translate="yes" xml:space="preserve">
          <source>Adding an object of the wrong type raises TypeError:</source>
          <target state="translated">添加一个错误类型的对象会引发TypeError。</target>
        </trans-unit>
        <trans-unit id="75ac589a7c74b921108f817dbc58cc312b033a74" translate="yes" xml:space="preserve">
          <source>Adding annotations</source>
          <target state="translated">添加注释</target>
        </trans-unit>
        <trans-unit id="6f3fb504cadea63bb79c2a9f67921972335a2ab4" translate="yes" xml:space="preserve">
          <source>Adding custom validation to the admin</source>
          <target state="translated">在管理中添加自定义验证</target>
        </trans-unit>
        <trans-unit id="21c3a8a053ec2e21cb223570d2501da48845f4b6" translate="yes" xml:space="preserve">
          <source>Adding extra &lt;code&gt;Manager&lt;/code&gt; methods is the preferred way to add &amp;ldquo;table-level&amp;rdquo; functionality to your models. (For &amp;ldquo;row-level&amp;rdquo; functionality &amp;ndash; i.e., functions that act on a single instance of a model object &amp;ndash; use &lt;a href=&quot;models#model-methods&quot;&gt;Model methods&lt;/a&gt;, not custom &lt;code&gt;Manager&lt;/code&gt; methods.)</source>
          <target state="translated">添加额外的 &lt;code&gt;Manager&lt;/code&gt; 方法是向模型添加&amp;ldquo;表级&amp;rdquo;功能的首选方法。（对于&amp;ldquo;行级&amp;rdquo;功能（即，作用于模型对象的单个实例的功能，请使用&lt;a href=&quot;models#model-methods&quot;&gt;Model方法&lt;/a&gt;，而不是自定义 &lt;code&gt;Manager&lt;/code&gt; 方法。）</target>
        </trans-unit>
        <trans-unit id="49a457ad4a4fb40029dfeb98bf770d419b6ed80e" translate="yes" xml:space="preserve">
          <source>Adding extra context</source>
          <target state="translated">增加额外的内容</target>
        </trans-unit>
        <trans-unit id="7d6b19de730f99e44e54a6e2f60d6fba5e949606" translate="yes" xml:space="preserve">
          <source>Adding extra manager methods</source>
          <target state="translated">增加额外的管理方法</target>
        </trans-unit>
        <trans-unit id="05c9b92bf3c6992f2275d32eb1bb9a5f874cbe2a" translate="yes" xml:space="preserve">
          <source>Adding extra message tags</source>
          <target state="translated">添加额外的信息标签</target>
        </trans-unit>
        <trans-unit id="065d8edc35a41c3e1c7f7106fb0ce5eebe146add" translate="yes" xml:space="preserve">
          <source>Adding messages in class-based views</source>
          <target state="translated">在基于类的视图中添加信息</target>
        </trans-unit>
        <trans-unit id="dde5351483f81b0be2720e29f44edb20496f0b3c" translate="yes" xml:space="preserve">
          <source>Adding migrations to apps</source>
          <target state="translated">向应用程序添加迁移</target>
        </trans-unit>
        <trans-unit id="cd9492e64e9db0d1444a09b5329d3bce5e245f07" translate="yes" xml:space="preserve">
          <source>Adding related objects</source>
          <target state="translated">增加相关对象</target>
        </trans-unit>
        <trans-unit id="80f31e3c892ed2c3d9284ce59d6e189757bbb332" translate="yes" xml:space="preserve">
          <source>Adding support in third-party database backends</source>
          <target state="translated">在第三方数据库后端增加支持。</target>
        </trans-unit>
        <trans-unit id="8f942de47430dca18f13c33d368bb70c332460c2" translate="yes" xml:space="preserve">
          <source>Adding the built-in widgets templates directory in &lt;a href=&quot;../settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt; of one of your template engines. To generate that path:</source>
          <target state="translated">在您的模板引擎之一的&lt;a href=&quot;../settings#std:setting-TEMPLATES-DIRS&quot;&gt; &lt;code&gt;DIRS&lt;/code&gt; &lt;/a&gt;中添加内置窗口小部件模板目录。要生成该路径：</target>
        </trans-unit>
        <trans-unit id="199984b1c4df9b28def33449c0f29df2d3cea020" translate="yes" xml:space="preserve">
          <source>Adding the language prefix to the root of the URL patterns to make it possible for &lt;a href=&quot;../../ref/middleware#django.middleware.locale.LocaleMiddleware&quot;&gt;&lt;code&gt;LocaleMiddleware&lt;/code&gt;&lt;/a&gt; to detect the language to activate from the requested URL.</source>
          <target state="translated">在URL模式的根目录中添加语言前缀，以使&lt;a href=&quot;../../ref/middleware#django.middleware.locale.LocaleMiddleware&quot;&gt; &lt;code&gt;LocaleMiddleware&lt;/code&gt; &lt;/a&gt;可以从请求的URL中检测要激活的语言。</target>
        </trans-unit>
        <trans-unit id="8bbdf001f85301d5c4caf9cad678d83599003252" translate="yes" xml:space="preserve">
          <source>Adding translations to JavaScript poses some problems:</source>
          <target state="translated">为JavaScript添加翻译会带来一些问题。</target>
        </trans-unit>
        <trans-unit id="9b2bc4970a121d42083d328ea38dfa708de484df" translate="yes" xml:space="preserve">
          <source>Adding via the &amp;lsquo;other&amp;rsquo; end of an m2m:</source>
          <target state="translated">通过m2m的&amp;ldquo;另一端&amp;rdquo;添加：</target>
        </trans-unit>
        <trans-unit id="58981ac9ab470f289e179674aec179db087b8177" translate="yes" xml:space="preserve">
          <source>Adding via the other end using keywords:</source>
          <target state="translated">通过另一端使用关键词进行添加。</target>
        </trans-unit>
        <trans-unit id="3726f6959d53012c980dc6e6514bf9f49e25f7f8" translate="yes" xml:space="preserve">
          <source>Adding views to admin sites</source>
          <target state="translated">在管理网站上添加视图</target>
        </trans-unit>
        <trans-unit id="eeb2928b085f70ed3eefe2ebfb553f92ebbeb1d4" translate="yes" xml:space="preserve">
          <source>Additional Resources:</source>
          <target state="translated">补充资源:</target>
        </trans-unit>
        <trans-unit id="20e967d50fd03923d186da10f984c24954c279bc" translate="yes" xml:space="preserve">
          <source>Additional form template furniture</source>
          <target state="translated">附加表格模板家具</target>
        </trans-unit>
        <trans-unit id="0639dbfaee6711fafef42bd5e3a8bb2d5b4d6b0d" translate="yes" xml:space="preserve">
          <source>Additional methods on files attached to objects</source>
          <target state="translated">附加在对象上的文件方法</target>
        </trans-unit>
        <trans-unit id="a3bd37141e3db51c93a974f72b5ed99fd4be069a" translate="yes" xml:space="preserve">
          <source>Additional methods to handle related objects</source>
          <target state="translated">处理相关对象的附加方法</target>
        </trans-unit>
        <trans-unit id="af004711cc4f84f9b7f7e5f37159b9933b2615c7" translate="yes" xml:space="preserve">
          <source>Additional security topics</source>
          <target state="translated">其他安全主题</target>
        </trans-unit>
        <trans-unit id="f51f11764f8ab3f8650e43b07eec550d435e9d07" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;OneToOneField&lt;/code&gt; accepts all of the extra arguments accepted by &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, plus one extra argument:</source>
          <target state="translated">此外， &lt;code&gt;OneToOneField&lt;/code&gt; 接受&lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;接受的所有其他参数，再加上一个附加参数：</target>
        </trans-unit>
        <trans-unit id="f18c9828e81de90a123e4ab9f3d1248d2eaa355f" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; automatically sets a few headers in each &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; which affect &lt;a href=&quot;#downstream-caches&quot;&gt;downstream caches&lt;/a&gt;:</source>
          <target state="translated">另外， &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; 在每个&lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; 中&lt;/a&gt;自动设置一些标头，这些标头会影响&lt;a href=&quot;#downstream-caches&quot;&gt;下游缓存&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="3bb4297691e2586f5e087e3bc7b4b49164fe1279" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; automatically sets a few headers in each &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">此外， &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; 在每个&lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; 中&lt;/a&gt;自动设置一些标头：</target>
        </trans-unit>
        <trans-unit id="d9c3eb7a943d408e9ef3eff367c07a9bdf0b504f" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;UploadedFile.content_type&lt;/code&gt; will be updated with the image&amp;rsquo;s content type if Pillow can determine it, otherwise it will be set to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">此外，如果Pillow可以确定，则 &lt;code&gt;UploadedFile.content_type&lt;/code&gt; 将使用图像的内容类型进行更新，否则将其设置为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf5f3789a249b86a962e868dcf5a537068b47abe" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;cache_page&lt;/code&gt; automatically sets &lt;code&gt;Cache-Control&lt;/code&gt; and &lt;code&gt;Expires&lt;/code&gt; headers in the response which affect &lt;a href=&quot;#downstream-caches&quot;&gt;downstream caches&lt;/a&gt;.</source>
          <target state="translated">此外， &lt;code&gt;cache_page&lt;/code&gt; 在响应中自动设置 &lt;code&gt;Cache-Control&lt;/code&gt; 和 &lt;code&gt;Expires&lt;/code&gt; 标头，这会影响&lt;a href=&quot;#downstream-caches&quot;&gt;下游缓存&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="59f091ea1fdfee35fafef8f5beec4d2ea7795fb3" translate="yes" xml:space="preserve">
          <source>Additionally, Django requires you to explicitly enable support for the &lt;code&gt;X-Forwarded-Host&lt;/code&gt; header (via the &lt;a href=&quot;../ref/settings#std:setting-USE_X_FORWARDED_HOST&quot;&gt;&lt;code&gt;USE_X_FORWARDED_HOST&lt;/code&gt;&lt;/a&gt; setting) if your configuration requires it.</source>
          <target state="translated">此外，如果您的配置需要，Django要求您明确启用对 &lt;code&gt;X-Forwarded-Host&lt;/code&gt; 标头的支持（通过&lt;a href=&quot;../ref/settings#std:setting-USE_X_FORWARDED_HOST&quot;&gt; &lt;code&gt;USE_X_FORWARDED_HOST&lt;/code&gt; &lt;/a&gt;设置）。</target>
        </trans-unit>
        <trans-unit id="8c1950c86ec7cad350a1882f9069c6111aa2bc35" translate="yes" xml:space="preserve">
          <source>Additionally, if a &lt;code&gt;some_queryset&lt;/code&gt; has not yet been evaluated, but you know that it will be at some point, then using &lt;code&gt;some_queryset.exists()&lt;/code&gt; will do more overall work (one query for the existence check plus an extra one to later retrieve the results) than using &lt;code&gt;bool(some_queryset)&lt;/code&gt;, which retrieves the results and then checks if any were returned.</source>
          <target state="translated">另外，如果还没有评估 &lt;code&gt;some_queryset&lt;/code&gt; ，但是您知道它会在某个时候进行评估，那么使用 &lt;code&gt;some_queryset.exists()&lt;/code&gt; 会做更多的整体工作（一个查询是否存在，另外一个查询以后再检索结果） ），而不是使用 &lt;code&gt;bool(some_queryset)&lt;/code&gt; ，后者会检索结果，然后检查是否返回了结果。</target>
        </trans-unit>
        <trans-unit id="5cd413f4862375205f2c9c8f5fb743ea9ac00da3" translate="yes" xml:space="preserve">
          <source>Additionally, if there are complex rules around pluralization, the catalog view will render a conditional expression. This will evaluate to either a &lt;code&gt;true&lt;/code&gt; (should pluralize) or &lt;code&gt;false&lt;/code&gt; (should &lt;strong&gt;not&lt;/strong&gt; pluralize) value.</source>
          <target state="translated">另外，如果复数周围有复杂的规则，则目录视图将呈现条件表达式。这将评估到任何一个 &lt;code&gt;true&lt;/code&gt; （应该以复数形式）或 &lt;code&gt;false&lt;/code&gt; （应该&lt;strong&gt;不&lt;/strong&gt;以复数）值。</target>
        </trans-unit>
        <trans-unit id="155b9da3a7f3110c995a2609d26841c5c24dd1fd" translate="yes" xml:space="preserve">
          <source>Additionally, if you set the &lt;a href=&quot;settings#std:setting-SECURE_HSTS_INCLUDE_SUBDOMAINS&quot;&gt;&lt;code&gt;SECURE_HSTS_INCLUDE_SUBDOMAINS&lt;/code&gt;&lt;/a&gt; setting to &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;SecurityMiddleware&lt;/code&gt; will add the &lt;code&gt;includeSubDomains&lt;/code&gt; directive to the &lt;code&gt;Strict-Transport-Security&lt;/code&gt; header. This is recommended (assuming all subdomains are served exclusively using HTTPS), otherwise your site may still be vulnerable via an insecure connection to a subdomain.</source>
          <target state="translated">此外，如果将&lt;a href=&quot;settings#std:setting-SECURE_HSTS_INCLUDE_SUBDOMAINS&quot;&gt; &lt;code&gt;SECURE_HSTS_INCLUDE_SUBDOMAINS&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; ，则 &lt;code&gt;SecurityMiddleware&lt;/code&gt; 会将 &lt;code&gt;includeSubDomains&lt;/code&gt; 指令添加到 &lt;code&gt;Strict-Transport-Security&lt;/code&gt; 标头中。建议这样做（假设所有子域仅使用HTTPS进行服务），否则您的站点可能仍会通过与子域的不安全连接而容易受到攻击。</target>
        </trans-unit>
        <trans-unit id="796ba10f1ad831c76eb8c34a0b7761256ed12335" translate="yes" xml:space="preserve">
          <source>Additionally, it is recommended to install the &lt;a href=&quot;https://github.com/maxmind/libmaxminddb&quot;&gt;libmaxminddb C library&lt;/a&gt;, so that &lt;code&gt;geoip2&lt;/code&gt; can leverage the C library&amp;rsquo;s faster speed.</source>
          <target state="translated">另外，建议安装&lt;a href=&quot;https://github.com/maxmind/libmaxminddb&quot;&gt;libmaxminddb C库&lt;/a&gt;，以便 &lt;code&gt;geoip2&lt;/code&gt; 可以利用C库的更快速度。</target>
        </trans-unit>
        <trans-unit id="7b5fcf69c665bf56f6d133b6aa0ec9e54e765756" translate="yes" xml:space="preserve">
          <source>Additionally, the following property is available:</source>
          <target state="translated">此外,还有以下财产:</target>
        </trans-unit>
        <trans-unit id="58aadc8b0bc2556a2416983dd97e11e2dca317e2" translate="yes" xml:space="preserve">
          <source>Additionally, the variable may be an iterable of template names, in which case the first that can be loaded will be used, as per &lt;a href=&quot;../../topics/templates#django.template.loader.select_template&quot;&gt;&lt;code&gt;select_template()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另外，该变量可以是模板名称的可迭代变量，在这种情况下，将按照&lt;a href=&quot;../../topics/templates#django.template.loader.select_template&quot;&gt; &lt;code&gt;select_template()&lt;/code&gt; &lt;/a&gt;使用可以加载的第一个。</target>
        </trans-unit>
        <trans-unit id="065186d003b68ca80e33b415f720adf82fb1f37e" translate="yes" xml:space="preserve">
          <source>Adds (or updates) the &lt;code&gt;Vary&lt;/code&gt; header in the given &lt;code&gt;HttpResponse&lt;/code&gt; object. &lt;code&gt;newheaders&lt;/code&gt; is a list of header names that should be in &lt;code&gt;Vary&lt;/code&gt;. If headers contains an asterisk, then &lt;code&gt;Vary&lt;/code&gt; header will consist of a single asterisk &lt;code&gt;'*'&lt;/code&gt;. Otherwise, existing headers in &lt;code&gt;Vary&lt;/code&gt; aren&amp;rsquo;t removed.</source>
          <target state="translated">在给定的 &lt;code&gt;HttpResponse&lt;/code&gt; 对象中添加（或更新） &lt;code&gt;Vary&lt;/code&gt; 标头。 &lt;code&gt;newheaders&lt;/code&gt; 是应该在 &lt;code&gt;Vary&lt;/code&gt; 中的标题名称列表。如果标头包含星号，则 &lt;code&gt;Vary&lt;/code&gt; 标头将由单个星号 &lt;code&gt;'*'&lt;/code&gt; 组成。否则，不会删除 &lt;code&gt;Vary&lt;/code&gt; 中现有的标头。</target>
        </trans-unit>
        <trans-unit id="1e90b62d665048ec0284ccfaa223ced853188c83" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;constraint&lt;/code&gt; to &lt;code&gt;model&lt;/code&gt;&amp;rsquo;s table.</source>
          <target state="translated">向 &lt;code&gt;model&lt;/code&gt; 的表添加 &lt;code&gt;constraint&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="189c0dc50c29d58c3f168feb673c8841534b5c85" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;index&lt;/code&gt; to &lt;code&gt;model&lt;/code&gt;&amp;rsquo;s table.</source>
          <target state="translated">向 &lt;code&gt;model&lt;/code&gt; 表添加 &lt;code&gt;index&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b8cfac95da60494037975ba4ec543ba3fe273f3" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;object_list&lt;/code&gt; to the context. If &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin.allow_empty&quot;&gt;&lt;code&gt;allow_empty&lt;/code&gt;&lt;/a&gt; is True then display an empty list. If &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin.allow_empty&quot;&gt;&lt;code&gt;allow_empty&lt;/code&gt;&lt;/a&gt; is False then raise a 404 error.</source>
          <target state="translated">将 &lt;code&gt;object_list&lt;/code&gt; 添加到上下文。如果&lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin.allow_empty&quot;&gt; &lt;code&gt;allow_empty&lt;/code&gt; &lt;/a&gt;为True，则显示一个空列表。如果&lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin.allow_empty&quot;&gt; &lt;code&gt;allow_empty&lt;/code&gt; &lt;/a&gt;为False，则引发404错误。</target>
        </trans-unit>
        <trans-unit id="514fb7f40df63dff563c3c7ad7a9ae3f9e685565" translate="yes" xml:space="preserve">
          <source>Adds a &lt;code&gt;Cache-Control: max-age=0, no-cache, no-store, must-revalidate,
private&lt;/code&gt; header to a response to indicate that a page should never be cached.</source>
          <target state="translated">在响应中添加一个 &lt;code&gt;Cache-Control: max-age=0, no-cache, no-store, must-revalidate, private&lt;/code&gt; 标头，以指示不应缓存页面。</target>
        </trans-unit>
        <trans-unit id="ff7383298422a0675008a255cc33c19c23220b7a" translate="yes" xml:space="preserve">
          <source>Adds a column (or sometimes multiple) to the model&amp;rsquo;s table to represent the field. This will also add indexes or a unique constraint if the field has &lt;code&gt;db_index=True&lt;/code&gt; or &lt;code&gt;unique=True&lt;/code&gt;.</source>
          <target state="translated">在模型的表中添加一列（有时是多列）以表示该字段。如果字段具有 &lt;code&gt;db_index=True&lt;/code&gt; 或 &lt;code&gt;unique=True&lt;/code&gt; ,这还将添加索引或唯一约束。</target>
        </trans-unit>
        <trans-unit id="e56f8bda02f55055ccc1af79a5faec7f5d76e619" translate="yes" xml:space="preserve">
          <source>Adds a few conveniences for perfectionists:</source>
          <target state="translated">为完美主义者增加了一些便利。</target>
        </trans-unit>
        <trans-unit id="3bc2c30ca18e7b58b0c427c2bd1065d3d8e2da65" translate="yes" xml:space="preserve">
          <source>Adds a field to a model. &lt;code&gt;model_name&lt;/code&gt; is the model&amp;rsquo;s name, &lt;code&gt;name&lt;/code&gt; is the field&amp;rsquo;s name, and &lt;code&gt;field&lt;/code&gt; is an unbound Field instance (the thing you would put in the field declaration in &lt;code&gt;models.py&lt;/code&gt; - for example, &lt;code&gt;models.IntegerField(null=True)&lt;/code&gt;.</source>
          <target state="translated">将字段添加到模型。 &lt;code&gt;model_name&lt;/code&gt; 是模型的名称， &lt;code&gt;name&lt;/code&gt; 是字段的名称， &lt;code&gt;field&lt;/code&gt; 是未绑定的Field实例（您将在 &lt;code&gt;models.py&lt;/code&gt; 中的字段声明中放入的内容-例如， &lt;code&gt;models.IntegerField(null=True)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd25b00fce5148ea823ee8b2f9f6663ac9a6299b" translate="yes" xml:space="preserve">
          <source>Adds a geometry to this geometry collection. Not applicable to other geometry types.</source>
          <target state="translated">添加一个几何体到这个几何体集合。不适用于其他几何体类型。</target>
        </trans-unit>
        <trans-unit id="40b2d7c6759c3aa4f4958c39ef024b8c9802838b" translate="yes" xml:space="preserve">
          <source>Adds a success message attribute to &lt;a href=&quot;../class-based-views/generic-editing#django.views.generic.edit.FormView&quot;&gt;&lt;code&gt;FormView&lt;/code&gt;&lt;/a&gt; based classes</source>
          <target state="translated">向基于&lt;a href=&quot;../class-based-views/generic-editing#django.views.generic.edit.FormView&quot;&gt; &lt;code&gt;FormView&lt;/code&gt; &lt;/a&gt;的类添加成功消息属性</target>
        </trans-unit>
        <trans-unit id="9443cc483fc4f79eee63f7b91ff9b63be753eaf3" translate="yes" xml:space="preserve">
          <source>Adds an item to the feed. All args are expected to be strings except &lt;code&gt;pubdate&lt;/code&gt; and &lt;code&gt;updateddate&lt;/code&gt;, which are &lt;code&gt;datetime.datetime&lt;/code&gt; objects, and &lt;code&gt;enclosures&lt;/code&gt;, which is a list of &lt;code&gt;Enclosure&lt;/code&gt; instances.</source>
          <target state="translated">将项目添加到供稿。除 &lt;code&gt;pubdate&lt;/code&gt; 和 &lt;code&gt;updateddate&lt;/code&gt; （它们是 &lt;code&gt;datetime.datetime&lt;/code&gt; 对象）和 &lt;code&gt;enclosures&lt;/code&gt; （这是 &lt;code&gt;Enclosure&lt;/code&gt; 实例列表）外，所有args都是字符串。</target>
        </trans-unit>
        <trans-unit id="3215cc38c2b33036efd88026a859c0cf5388f402" translate="yes" xml:space="preserve">
          <source>Adds protection against Cross Site Request Forgeries by adding hidden form fields to POST forms and checking requests for the correct value. See the &lt;a href=&quot;csrf&quot;&gt;Cross Site Request Forgery protection documentation&lt;/a&gt;.</source>
          <target state="translated">通过向POST表单添加隐藏的表单字段并检查请求的正确值来增强对跨站点请求伪造的保护。请参阅&lt;a href=&quot;csrf&quot;&gt;跨站点请求伪造保护文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="248f884a6debb66d33bb542947c6b5a70ec29527" translate="yes" xml:space="preserve">
          <source>Adds slashes before quotes. Useful for escaping strings in CSV, for example.</source>
          <target state="translated">在引号前添加斜杠。对CSV中的字符串进行转义很有用,例如。</target>
        </trans-unit>
        <trans-unit id="9fe6973ff05e99c675a4730464539f2a5309cce2" translate="yes" xml:space="preserve">
          <source>Adds some useful headers to the given &lt;code&gt;HttpResponse&lt;/code&gt; object:</source>
          <target state="translated">向给定的 &lt;code&gt;HttpResponse&lt;/code&gt; 对象添加一些有用的标头：</target>
        </trans-unit>
        <trans-unit id="a032013929920ba96d6f65e3ffe00d36c0baef9d" translate="yes" xml:space="preserve">
          <source>Adds support for modern browsers to conditionally GET responses based on the &lt;code&gt;ETag&lt;/code&gt; and &lt;code&gt;Last-Modified&lt;/code&gt; headers. It also calculates and sets an ETag if needed.</source>
          <target state="translated">添加对现代浏览器的支持，以基于 &lt;code&gt;ETag&lt;/code&gt; 和 &lt;code&gt;Last-Modified&lt;/code&gt; 标头有条件地获取响应。如果需要，它还会计算并设置一个ETag。</target>
        </trans-unit>
        <trans-unit id="c356b3798142f51ac749e338cf5674b7a71f9400" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;site&lt;/code&gt; attribute representing the current site to every incoming &lt;code&gt;HttpRequest&lt;/code&gt; object. See the &lt;a href=&quot;contrib/sites#site-middleware&quot;&gt;sites documentation&lt;/a&gt;.</source>
          <target state="translated">将代表当前站点的 &lt;code&gt;site&lt;/code&gt; 属性添加到每个传入的 &lt;code&gt;HttpRequest&lt;/code&gt; 对象中。请参阅&lt;a href=&quot;contrib/sites#site-middleware&quot;&gt;站点文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="664b30fbbf82f2c9316ffc7123a36e6ed05f431e" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;user&lt;/code&gt; attribute, representing the currently-logged-in user, to every incoming &lt;code&gt;HttpRequest&lt;/code&gt; object. See &lt;a href=&quot;../topics/auth/default#auth-web-requests&quot;&gt;Authentication in Web requests&lt;/a&gt;.</source>
          <target state="translated">将代表当前登录 &lt;code&gt;user&lt;/code&gt; 属性添加到每个传入的 &lt;code&gt;HttpRequest&lt;/code&gt; 对象中。请参阅&lt;a href=&quot;../topics/auth/default#auth-web-requests&quot;&gt;Web请求中的身份验证&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="82b26bb2b7e0b4dedd5abbf9499cb1f58e215b32" translate="yes" xml:space="preserve">
          <source>Adds the argument to the value.</source>
          <target state="translated">将参数添加到值中。</target>
        </trans-unit>
        <trans-unit id="e1db2693361f92fab5512898e218f1eb6734dbaf" translate="yes" xml:space="preserve">
          <source>Adds the given filesystem path to the Python &lt;a href=&quot;https://www.diveinto.org/python3/your-first-python-program.html#importsearchpath&quot;&gt;import search path&lt;/a&gt;. If this isn&amp;rsquo;t provided, &lt;code&gt;django-admin&lt;/code&gt; will use the &lt;a href=&quot;https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-8&quot;&gt;&lt;code&gt;PYTHONPATH&lt;/code&gt;&lt;/a&gt; environment variable.</source>
          <target state="translated">将给定的文件系统路径添加到Python&lt;a href=&quot;https://www.diveinto.org/python3/your-first-python-program.html#importsearchpath&quot;&gt;导入搜索路径&lt;/a&gt;。如果未提供， &lt;code&gt;django-admin&lt;/code&gt; 将使用&lt;a href=&quot;https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-8&quot;&gt; &lt;code&gt;PYTHONPATH&lt;/code&gt; &lt;/a&gt;环境变量。</target>
        </trans-unit>
        <trans-unit id="903c089d1a56e44c804837cfb1c84f16e81440b8" translate="yes" xml:space="preserve">
          <source>Adds the given filesystem path to the Python &lt;a href=&quot;https://www.diveinto.org/python3/your-first-python-program.html#importsearchpath&quot;&gt;import search path&lt;/a&gt;. If this isn&amp;rsquo;t provided, &lt;code&gt;django-admin&lt;/code&gt; will use the &lt;code&gt;PYTHONPATH&lt;/code&gt; environment variable.</source>
          <target state="translated">将给定的文件系统路径添加到Python &lt;a href=&quot;https://www.diveinto.org/python3/your-first-python-program.html#importsearchpath&quot;&gt;导入搜索路径&lt;/a&gt;。如果未提供， &lt;code&gt;django-admin&lt;/code&gt; 将使用 &lt;code&gt;PYTHONPATH&lt;/code&gt; 环境变量。</target>
        </trans-unit>
        <trans-unit id="be0a5949d228cfa91cfd2972bb3ffb858416c326" translate="yes" xml:space="preserve">
          <source>Adds the specified model objects to the related object set.</source>
          <target state="translated">将指定的模型对象添加到相关对象集。</target>
        </trans-unit>
        <trans-unit id="df614a098659ffdff10d271df37bd396baae86e3" translate="yes" xml:space="preserve">
          <source>Adjust &lt;code&gt;time_cost&lt;/code&gt; and measure the time hashing a password takes. Pick a &lt;code&gt;time_cost&lt;/code&gt; that takes an acceptable time for you. If &lt;code&gt;time_cost&lt;/code&gt; set to 1 is unacceptably slow, lower &lt;code&gt;memory_cost&lt;/code&gt;.</source>
          <target state="translated">调整 &lt;code&gt;time_cost&lt;/code&gt; 并测量密码散列所花费的时间。选择一个需要您接受的时间的 &lt;code&gt;time_cost&lt;/code&gt; 。如果将 &lt;code&gt;time_cost&lt;/code&gt; 设置为1太慢而无法接受，请降低 &lt;code&gt;memory_cost&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa81c61f91756873608f1f7af2602b2f7fc03a81" translate="yes" xml:space="preserve">
          <source>Admin actions</source>
          <target state="translated">管理行动</target>
        </trans-unit>
        <trans-unit id="f535d8e7c9b9ab3a3dfb3ab83bec8e5535ab79e9" translate="yes" xml:space="preserve">
          <source>Admin checks are all performed as part of the &lt;code&gt;admin&lt;/code&gt; tag.</source>
          <target state="translated">管理员检查都作为 &lt;code&gt;admin&lt;/code&gt; 标签的一部分执行。</target>
        </trans-unit>
        <trans-unit id="7a9d7b247e2f49f891dbb48cdd1ab3b6f10c4c23" translate="yes" xml:space="preserve">
          <source>Admin documentation generator</source>
          <target state="translated">管理文件生成器</target>
        </trans-unit>
        <trans-unit id="3aee1adc5c2281168d92436481848549843930c8" translate="yes" xml:space="preserve">
          <source>Admin site</source>
          <target state="translated">管理网站</target>
        </trans-unit>
        <trans-unit id="ea4395545ea1af3a57cb72e9912004568a18a70f" translate="yes" xml:space="preserve">
          <source>Administrator privileges are required to execute these commands. To do this, create a &lt;code&gt;bat&lt;/code&gt; script with the commands, right-click it, and select Run as administrator. You need to log out and log back in again for the settings to take effect.</source>
          <target state="translated">执行这些命令需要管理员特权。为此，请使用命令创建一个 &lt;code&gt;bat&lt;/code&gt; 脚本，右键单击它，然后选择&amp;ldquo;以管理员身份运行&amp;rdquo;。您需要先注销然后重新登录才能使设置生效。</target>
        </trans-unit>
        <trans-unit id="dc254ff09ad8edb5e90daec2acf4e090e64a2a3c" translate="yes" xml:space="preserve">
          <source>Administrator privileges are required to execute these commands. To do this, run command prompt as administrator and enter the commands above. You need to log out and log back in again for the settings to take effect.</source>
          <target state="translated">执行这些命令需要管理员权限。要做到这一点,请以管理员身份运行命令提示符,并输入上述命令。您需要注销并重新登录,设置才会生效。</target>
        </trans-unit>
        <trans-unit id="e6be539fb22a5b9d1b2dbc3f3efee91842482592" translate="yes" xml:space="preserve">
          <source>Advanced action techniques</source>
          <target state="translated">先进的行动技术</target>
        </trans-unit>
        <trans-unit id="7d11fcc75baee8b3a5e324b547b893ebb063f2ea" translate="yes" xml:space="preserve">
          <source>Advanced custom template tags</source>
          <target state="translated">高级自定义模板标签</target>
        </trans-unit>
        <trans-unit id="2ea5de740ecde63e7278f9c6f1ad4f38244713cc" translate="yes" xml:space="preserve">
          <source>Advanced features of &lt;code&gt;TransactionTestCase&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;TransactionTestCase&lt;/code&gt; 的高级功能</target>
        </trans-unit>
        <trans-unit id="2bfe0e3b7c302688acc1807007e8d8b521dfe939" translate="yes" xml:space="preserve">
          <source>Advanced queries</source>
          <target state="translated">高级查询</target>
        </trans-unit>
        <trans-unit id="6013e5a6b54a406e23e302755962d51289372466" translate="yes" xml:space="preserve">
          <source>Advanced testing topics</source>
          <target state="translated">高级测试主题</target>
        </trans-unit>
        <trans-unit id="8176f171fd2c2a51f8e7eeff9ab6630a3285d740" translate="yes" xml:space="preserve">
          <source>Advanced tutorial: How to write reusable apps</source>
          <target state="translated">高级教程。如何编写可重复使用的应用程序</target>
        </trans-unit>
        <trans-unit id="3f2484833c357305a71ba8f10aa625e55a1a6622" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;GZipMiddleware&lt;/code&gt; so it won&amp;rsquo;t calculate an &lt;code&gt;ETag&lt;/code&gt; header on gzipped contents.</source>
          <target state="translated">在 &lt;code&gt;GZipMiddleware&lt;/code&gt; 之后，因此它不会对压缩后的内容计算 &lt;code&gt;ETag&lt;/code&gt; 标头。</target>
        </trans-unit>
        <trans-unit id="86f00443055d740ee3c3763e61aeea16472d09ef" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;SessionMiddleware&lt;/code&gt; if you&amp;rsquo;re using &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt;&lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在 &lt;code&gt;SessionMiddleware&lt;/code&gt; 之后，如果您使用的是&lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt; &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9289f81e58cb8e19e5576059e58ac92f6f4ba14b" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;SessionMiddleware&lt;/code&gt;: can use session-based storage.</source>
          <target state="translated">&lt;code&gt;SessionMiddleware&lt;/code&gt; 之后：可以使用基于会话的存储。</target>
        </trans-unit>
        <trans-unit id="d726b0a1292337eaaae0815a0c2fa33faa692651" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;SessionMiddleware&lt;/code&gt;: uses session storage.</source>
          <target state="translated">在 &lt;code&gt;SessionMiddleware&lt;/code&gt; 之后：使用会话存储。</target>
        </trans-unit>
        <trans-unit id="4a5f057391aa6585b79fd3da631b77f7f1c42b44" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt;: Modifies &lt;code&gt;Vary&lt;/code&gt; header.</source>
          <target state="translated">在 &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; 之后：修改 &lt;code&gt;Vary&lt;/code&gt; 标头。</target>
        </trans-unit>
        <trans-unit id="2681fdd75b468f221993a3699c1f8d91d4bbbffc" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;parser.parse()&lt;/code&gt; is called, the parser hasn&amp;rsquo;t yet &amp;ldquo;consumed&amp;rdquo; the &lt;code&gt;{% endcomment %}&lt;/code&gt; tag, so the code needs to explicitly call &lt;code&gt;parser.delete_first_token()&lt;/code&gt;.</source>
          <target state="translated">调用 &lt;code&gt;parser.parse()&lt;/code&gt; 之后，解析器尚未&amp;ldquo;消耗&amp;rdquo; &lt;code&gt;{% endcomment %}&lt;/code&gt; 标记，因此代码需要显式调用 &lt;code&gt;parser.delete_first_token()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="281a78946c958de801c852d816af4adf36943168" translate="yes" xml:space="preserve">
          <source>After a deprecation period of your choosing (two or three feature releases for fields in Django itself), change the &lt;code&gt;system_check_deprecated_details&lt;/code&gt; attribute to &lt;code&gt;system_check_removed_details&lt;/code&gt; and update the dictionary similar to:</source>
          <target state="translated">在您选择的弃用期（Django本身中的字段的两个或三个功能版本）过后，将 &lt;code&gt;system_check_deprecated_details&lt;/code&gt; 属性更改为 &lt;code&gt;system_check_removed_details&lt;/code&gt; 并更新字典，类似于：</target>
        </trans-unit>
        <trans-unit id="6accf2533a2ff16ba36e8ad20774b9e6ba4a6eb7" translate="yes" xml:space="preserve">
          <source>After a ticket has a patch, it needs to be reviewed by a second set of eyes. After submitting a pull request, update the ticket metadata by setting the flags on the ticket to say &amp;ldquo;has patch&amp;rdquo;, &amp;ldquo;doesn&amp;rsquo;t need tests&amp;rdquo;, etc, so others can find it for review. Contributing doesn&amp;rsquo;t necessarily always mean writing a patch from scratch. Reviewing existing patches is also a very helpful contribution. See &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/triaging-tickets/&quot;&gt;Triaging tickets&lt;/a&gt; for details.</source>
          <target state="translated">票证有补丁之后，需要重新审视。提交请求请求后，通过在票证上设置标记&amp;ldquo;有补丁&amp;rdquo;，&amp;ldquo;不需要测试&amp;rdquo;等来更新票证元数据，以便其他人可以找到它进行审核。贡献不一定总是意味着从头开始编写补丁。审查现有补丁也是很有帮助的。有关详细信息，请参见&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/triaging-tickets/&quot;&gt;分票&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6abcb2ff248ea2f61984947bf36856668333da73" translate="yes" xml:space="preserve">
          <source>After a ticket has a patch, it needs to be reviewed by a second set of eyes. After submitting a pull request, update the ticket metadata by setting the flags on the ticket to say &amp;ldquo;has patch&amp;rdquo;, &amp;ldquo;doesn&amp;rsquo;t need tests&amp;rdquo;, etc, so others can find it for review. Contributing doesn&amp;rsquo;t necessarily always mean writing a patch from scratch. Reviewing existing patches is also a very helpful contribution. See &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/triaging-tickets/&quot;&gt;Triaging tickets&lt;/a&gt; for details.</source>
          <target state="translated">票证有补丁之后，需要重新审视。提交请求请求后，通过在票证上设置标记&amp;ldquo;有补丁&amp;rdquo;，&amp;ldquo;不需要测试&amp;rdquo;等来更新票证元数据，以便其他人可以找到它进行审核。贡献不一定总是意味着从头开始编写补丁。审查现有补丁也是非常有帮助的。有关详细信息，请参见&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/triaging-tickets/&quot;&gt;分票&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e32c6f7dcad4ecb9998b074a7cc11c519c1f8bd3" translate="yes" xml:space="preserve">
          <source>After adding the &lt;code&gt;templatetags&lt;/code&gt; module, you will need to restart your server before you can use the tags or filters in templates.</source>
          <target state="translated">添加 &lt;code&gt;templatetags&lt;/code&gt; 模块后，您将需要重新启动服务器，然后才能使用模板中的标签或过滤器。</target>
        </trans-unit>
        <trans-unit id="1f9942a37c8cd58111bc08a610226302ee82774c" translate="yes" xml:space="preserve">
          <source>After any middleware that modifies the &lt;code&gt;Vary&lt;/code&gt; header: that header is used to pick a value for the cache hash-key.</source>
          <target state="translated">在修改了 &lt;code&gt;Vary&lt;/code&gt; 标头的任何中间件之后：该标头用于为缓存哈希键选择一个值。</target>
        </trans-unit>
        <trans-unit id="1f06aea5ce8261b350616986ce317de50c27042d" translate="yes" xml:space="preserve">
          <source>After calling &lt;code&gt;save()&lt;/code&gt;, your model formset will have three new attributes containing the formset&amp;rsquo;s changes:</source>
          <target state="translated">调用 &lt;code&gt;save()&lt;/code&gt; 之后，您的模型表单集将具有三个新属性，其中包含表单集的更改：</target>
        </trans-unit>
        <trans-unit id="c58ac7107e455c654ba47c150a89bf6b48e736fc" translate="yes" xml:space="preserve">
          <source>After clicking next, you will be prompted to confirm the selected package and &amp;ldquo;Download directory&amp;rdquo;. Click next again, this will download PostGIS and you will be asked to click next to begin the PostGIS installer. Select the default options during install. The install process includes three Yes/No dialog boxes, the default option for all three is &amp;ldquo;No&amp;rdquo;.</source>
          <target state="translated">单击下一步后，将提示您确认选定的软件包和&amp;ldquo;下载目录&amp;rdquo;。再次单击下一步，这将下载PostGIS，并且将要求您单击下一步以开始PostGIS安装程序。在安装过程中选择默认选项。安装过程包括三个&amp;ldquo;是/否&amp;rdquo;对话框，这三个对话框的默认选项均为&amp;ldquo;否&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="4d390de24fb64624d4aff4859d91742174ae6775" translate="yes" xml:space="preserve">
          <source>After clicking next, you will be prompted to select your mirror, PostGIS will be downloaded, and the PostGIS installer will begin. Select only the default options during install (e.g., do not uncheck the option to create a default PostGIS database).</source>
          <target state="translated">单击 &quot;下一步 &quot;后,将提示您选择镜像,PostGIS将被下载,并开始PostGIS安装程序。在安装过程中只选择默认选项(例如,不要取消选中创建默认PostGIS数据库的选项)。</target>
        </trans-unit>
        <trans-unit id="7e357a5e8113a5b7fddea0de2d89e752e5b16ef5" translate="yes" xml:space="preserve">
          <source>After committing the patch, send it to your fork on GitHub (substitute &amp;ldquo;ticket_99999&amp;rdquo; with the name of your branch if it&amp;rsquo;s different):</source>
          <target state="translated">提交补丁后，将其发送到GitHub上的fork（如果分支名称不同，则用分支名称替换&amp;ldquo; ticket_99999&amp;rdquo;）：</target>
        </trans-unit>
        <trans-unit id="2aed56fcb855399b7f515c0d75a3f8bfa74e730b" translate="yes" xml:space="preserve">
          <source>After defining these URL patterns, Django will automatically add the language prefix to the URL patterns that were added by the &lt;code&gt;i18n_patterns&lt;/code&gt; function. Example:</source>
          <target state="translated">定义了这些URL模式后，Django会自动将语言前缀添加到 &lt;code&gt;i18n_patterns&lt;/code&gt; 函数添加的URL模式中。例：</target>
        </trans-unit>
        <trans-unit id="7d008e64d4a0475b85406cccc8318f86e3da9019" translate="yes" xml:space="preserve">
          <source>After defining your model, you need to sync it with the database. First, create a database migration:</source>
          <target state="translated">定义完模型后,你需要将其与数据库同步。首先,创建一个数据库迁移。</target>
        </trans-unit>
        <trans-unit id="8e6930a6c173b07b683b82da9d1f296b3dcb130c" translate="yes" xml:space="preserve">
          <source>After each test, Django empties only tables corresponding to models in available apps. However, at the database level, truncation may cascade to related models in unavailable apps. Furthermore &lt;a href=&quot;../../ref/signals#django.db.models.signals.post_migrate&quot;&gt;&lt;code&gt;post_migrate&lt;/code&gt;&lt;/a&gt; isn&amp;rsquo;t fired; it will be fired by the next &lt;code&gt;TransactionTestCase&lt;/code&gt;, after the correct set of applications is selected.</source>
          <target state="translated">每次测试后，Django仅清空与可用应用程序中的模型相对应的表。但是，在数据库级别，截断可能会级联到不可用应用程序中的相关模型。而且&lt;a href=&quot;../../ref/signals#django.db.models.signals.post_migrate&quot;&gt; &lt;code&gt;post_migrate&lt;/code&gt; &lt;/a&gt;不会被解雇。选择正确的应用程序集之后，它将由下一个 &lt;code&gt;TransactionTestCase&lt;/code&gt; 触发。</target>
        </trans-unit>
        <trans-unit id="b85411d44bdeb415c99e270e325cf620c6f3d48c" translate="yes" xml:space="preserve">
          <source>After identifying a bug, we wrote a test that exposes it and corrected the bug in the code so our test passes.</source>
          <target state="translated">在确定了一个bug之后,我们写了一个测试,将其暴露出来,并修正了代码中的bug,这样我们的测试就通过了。</target>
        </trans-unit>
        <trans-unit id="9ca69a5e2e9e85d442e5087cec08c6e01b338c19" translate="yes" xml:space="preserve">
          <source>After incrementing the choice count, the code returns an &lt;a href=&quot;../ref/request-response#django.http.HttpResponseRedirect&quot;&gt;&lt;code&gt;HttpResponseRedirect&lt;/code&gt;&lt;/a&gt; rather than a normal &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../ref/request-response#django.http.HttpResponseRedirect&quot;&gt;&lt;code&gt;HttpResponseRedirect&lt;/code&gt;&lt;/a&gt; takes a single argument: the URL to which the user will be redirected (see the following point for how we construct the URL in this case).</source>
          <target state="translated">增加选择计数后，代码将返回&lt;a href=&quot;../ref/request-response#django.http.HttpResponseRedirect&quot;&gt; &lt;code&gt;HttpResponseRedirect&lt;/code&gt; &lt;/a&gt;而不是常规的&lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;../ref/request-response#django.http.HttpResponseRedirect&quot;&gt; &lt;code&gt;HttpResponseRedirect&lt;/code&gt; &lt;/a&gt;接受一个参数：将用户重定向到的URL（有关在这种情况下如何构造URL，请参阅以下要点）。</target>
        </trans-unit>
        <trans-unit id="774c302b2329f500a54a6b1f4edb804e0b750ee4" translate="yes" xml:space="preserve">
          <source>After installation, open the command prompt and check that the Python version matches the version you installed by executing:</source>
          <target state="translated">安装完成后,打开命令提示符,通过执行检查Python版本是否与您安装的版本一致。</target>
        </trans-unit>
        <trans-unit id="71a6e296bbb95376e2919538a9365dbb8734ff32" translate="yes" xml:space="preserve">
          <source>After installing Memcached itself, you&amp;rsquo;ll need to install a Memcached binding. There are several Python Memcached bindings available; the two most common are &lt;a href=&quot;https://pypi.org/project/python-memcached/&quot;&gt;python-memcached&lt;/a&gt; and &lt;a href=&quot;https://pypi.org/project/pylibmc/&quot;&gt;pylibmc&lt;/a&gt;.</source>
          <target state="translated">本身安装Memcached后，您需要安装Memcached绑定。有几种可用的Python Memcached绑定。两种最常见的是&lt;a href=&quot;https://pypi.org/project/python-memcached/&quot;&gt;python-memcached&lt;/a&gt;和&lt;a href=&quot;https://pypi.org/project/pylibmc/&quot;&gt;pylibmc&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7aa4b22c12e8c71bdc31e0284bc1ee8ce0c4ac6c" translate="yes" xml:space="preserve">
          <source>After installing Postgres.app, add the following to your &lt;code&gt;.bash_profile&lt;/code&gt; so you can run the package&amp;rsquo;s programs from the command-line. Replace &lt;code&gt;X.Y&lt;/code&gt; with the version of PostgreSQL in the Postgres.app you installed:</source>
          <target state="translated">安装Postgres.app之后，将以下内容添加到您的 &lt;code&gt;.bash_profile&lt;/code&gt; 中,以便您可以从命令行运行软件包的程序。在安装的Postgres.app中将 &lt;code&gt;X.Y&lt;/code&gt; 替换为PostgreSQL版本：</target>
        </trans-unit>
        <trans-unit id="b736f158d630c0182bc11671267f8e1b4815968a" translate="yes" xml:space="preserve">
          <source>After installing the binary packages, you&amp;rsquo;ll want to add the following to your &lt;code&gt;.profile&lt;/code&gt; to be able to run the package programs from the command-line:</source>
          <target state="translated">安装二进制程序包之后，您需要将以下内容添加到 &lt;code&gt;.profile&lt;/code&gt; 中，以便能够从命令行运行程序包程序：</target>
        </trans-unit>
        <trans-unit id="a60de7d58c77244f0cf00d8e784d29a1e7247f48" translate="yes" xml:space="preserve">
          <source>After passing through template response middleware, but before passing through response middleware.</source>
          <target state="translated">通过模板响应中间件后,但在通过响应中间件之前。</target>
        </trans-unit>
        <trans-unit id="5bee1621e895ebf9bd0640dd87cf6d184eec12d4" translate="yes" xml:space="preserve">
          <source>After reading those, if you want something a little meatier to sink your teeth into, there&amp;rsquo;s always the Python &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">阅读这些，如果你想要的东西一点点更耐人寻味的你的牙齿沉入之后，总是有Python的&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="7dc0c875063a5da44991572aecb9756257b690a4" translate="yes" xml:space="preserve">
          <source>After setting the language choice, Django looks for a &lt;code&gt;next&lt;/code&gt; parameter in the &lt;code&gt;POST&lt;/code&gt; or &lt;code&gt;GET&lt;/code&gt; data. If that is found and Django considers it to be a safe URL (i.e. it doesn&amp;rsquo;t point to a different host and uses a safe scheme), a redirect to that URL will be performed. Otherwise, Django may fall back to redirecting the user to the URL from the &lt;code&gt;Referer&lt;/code&gt; header or, if it is not set, to &lt;code&gt;/&lt;/code&gt;, depending on the nature of the request:</source>
          <target state="translated">设置语言选择后，Django将在 &lt;code&gt;POST&lt;/code&gt; 或 &lt;code&gt;GET&lt;/code&gt; 数据中查找 &lt;code&gt;next&lt;/code&gt; 参数。如果找到该地址，并且Django认为它是一个安全的URL（即，它不指向其他主机并使用安全的方案），则将重定向到该URL。否则，Django可能会退回以将用户从 &lt;code&gt;Referer&lt;/code&gt; 标头重定向到URL，或者如果未设置，则将其重定向到 &lt;code&gt;/&lt;/code&gt; ，具体取决于请求的性质：</target>
        </trans-unit>
        <trans-unit id="3e1436ef5379ce0f1a30ea3cae55047febc6a4e9" translate="yes" xml:space="preserve">
          <source>After setting up and activating the virtual environment, run the following command:</source>
          <target state="translated">设置并激活虚拟环境后,运行以下命令。</target>
        </trans-unit>
        <trans-unit id="c7620c7b76f9f6f83e5a60670049dd6c754d2eb5" translate="yes" xml:space="preserve">
          <source>After setting up and activating the virtualenv, run the following command:</source>
          <target state="translated">设置并激活virtualenv后,运行以下命令。</target>
        </trans-unit>
        <trans-unit id="749f4fb21ac06aa715512fb023e5e4518d514613" translate="yes" xml:space="preserve">
          <source>After somebody votes in a question, the &lt;code&gt;vote()&lt;/code&gt; view redirects to the results page for the question. Let&amp;rsquo;s write that view:</source>
          <target state="translated">在有人对问题进行 &lt;code&gt;vote()&lt;/code&gt; 后，vote（）视图将重定向到该问题的结果页面。让我们写一个视图：</target>
        </trans-unit>
        <trans-unit id="a217c47f5d8014faf6fc30b3753dfee60b8d8123" translate="yes" xml:space="preserve">
          <source>After the &lt;a href=&quot;../../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;../../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; cache needs to be cleared, and the referenced objects should be gone:</source>
          <target state="translated">在&lt;a href=&quot;../../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; 之后&lt;/a&gt;，需要清除&lt;a href=&quot;../../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;缓存，并且所引用的对象也应该消失：</target>
        </trans-unit>
        <trans-unit id="4fcd69199df456b7ec6054b8a08e330f73536452" translate="yes" xml:space="preserve">
          <source>After the field has been cleaned and validated, the &lt;code&gt;UploadedFile&lt;/code&gt; object will have an additional &lt;code&gt;image&lt;/code&gt; attribute containing the Pillow &lt;a href=&quot;https://pillow.readthedocs.io/en/latest/reference/Image.html&quot;&gt;Image&lt;/a&gt; instance used to check if the file was a valid image. Pillow closes the underlying file descriptor after verifying an image, so whilst non-image data attributes, such as &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, and &lt;code&gt;width&lt;/code&gt;, are available, methods that access the underlying image data, such as &lt;code&gt;getdata()&lt;/code&gt; or &lt;code&gt;getpixel()&lt;/code&gt;, cannot be used without reopening the file. For example:</source>
          <target state="translated">清除并验证字段后， &lt;code&gt;UploadedFile&lt;/code&gt; 对象将具有一个附加的 &lt;code&gt;image&lt;/code&gt; 属性，其中包含用于检查文件是否为有效图像的枕头&lt;a href=&quot;https://pillow.readthedocs.io/en/latest/reference/Image.html&quot;&gt;图像&lt;/a&gt;实例。Pillow在验证图像后关闭基础文件描述符，因此尽管非图像数据属性（例如 &lt;code&gt;format&lt;/code&gt; ， &lt;code&gt;height&lt;/code&gt; 和 &lt;code&gt;width&lt;/code&gt; ）可用，但是访问基础图像数据的方法（例如 &lt;code&gt;getdata()&lt;/code&gt; 或getpixel（） &lt;code&gt;getpixel()&lt;/code&gt; 不能无需重新打开文件即可使用。例如：</target>
        </trans-unit>
        <trans-unit id="14ee9b4c42739ebdc299c256addfef73b7b4d50d" translate="yes" xml:space="preserve">
          <source>After the installation has completed, you can verify your Django installation by executing &lt;code&gt;django-admin --version&lt;/code&gt; in the command prompt.</source>
          <target state="translated">安装完成后，您可以通过在命令提示符下执行 &lt;code&gt;django-admin --version&lt;/code&gt; 来验证Django的安装。</target>
        </trans-unit>
        <trans-unit id="81017b450bb562125665785f46775a28051421ac" translate="yes" xml:space="preserve">
          <source>After the previous tutorials, our project should look like this:</source>
          <target state="translated">经过前面的教程,我们的项目应该是这样的。</target>
        </trans-unit>
        <trans-unit id="ac7e3cfe6d36fcc8800548c504c913db5ea08bda" translate="yes" xml:space="preserve">
          <source>After the tables are created, execute an &lt;code&gt;ALTER TABLE&lt;/code&gt; statement to convert a table to a new storage engine (such as InnoDB):</source>
          <target state="translated">创建表之后，执行 &lt;code&gt;ALTER TABLE&lt;/code&gt; 语句将表转换为新的存储引擎（例如InnoDB）：</target>
        </trans-unit>
        <trans-unit id="833c95b13093b5d748d6f17ddb4f86d50a0bd954" translate="yes" xml:space="preserve">
          <source>After those, if you&amp;rsquo;re still hungry for more information about contributing, you can always browse through the rest of &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/index/&quot;&gt;Django&amp;rsquo;s documentation on contributing&lt;/a&gt;. It contains a ton of useful information and should be your first source for answering any questions you might have.</source>
          <target state="translated">之后，如果您仍然渴望获得有关贡献的更多信息，则可以随时浏览&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/index/&quot;&gt;Django的&lt;/a&gt;其余有关贡献的文档。它包含大量有用的信息，应该是回答您可能遇到的任何问题的第一个来源。</target>
        </trans-unit>
        <trans-unit id="4392b74ce8f91504a3283e7e6876633a2885864e" translate="yes" xml:space="preserve">
          <source>After those, if you&amp;rsquo;re still hungry for more information about contributing, you can always browse through the rest of &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/index/&quot;&gt;Django&amp;rsquo;s documentation on contributing&lt;/a&gt;. It contains a ton of useful information and should be your first source for answering any questions you might have.</source>
          <target state="translated">之后，如果您仍然渴望获得有关贡献的更多信息，则可以随时浏览&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/index/&quot;&gt;Django的&lt;/a&gt;其余有关贡献的文档。它包含大量有用的信息，应该成为回答您可能遇到的任何问题的第一手资料。</target>
        </trans-unit>
        <trans-unit id="454dbfd1138b5db0a027bc12c3fb8a7dd0e23f9f" translate="yes" xml:space="preserve">
          <source>After you call this method, the test client will have all the cookies and session data cleared to defaults. Subsequent requests will appear to come from an &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.AnonymousUser&quot;&gt;&lt;code&gt;AnonymousUser&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">调用此方法后，测试客户端会将所有cookie和会话数据清除为默认值。随后的请求似乎来自&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.AnonymousUser&quot;&gt; &lt;code&gt;AnonymousUser&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb6524b580510278d19c4826bcc1d86bb9822378" translate="yes" xml:space="preserve">
          <source>After you call this method, the test client will have all the cookies and session data required to pass any login-based tests that may form part of a view.</source>
          <target state="translated">调用此方法后,测试客户端将拥有所有的cookie和会话数据,以通过任何可能形成视图一部分的基于登录的测试。</target>
        </trans-unit>
        <trans-unit id="8ccf916013f6746ea045fc6d05d7dcf32415b07c" translate="yes" xml:space="preserve">
          <source>After you create your message file &amp;ndash; and each time you make changes to it &amp;ndash; you&amp;rsquo;ll need to compile it into a more efficient form, for use by &lt;code&gt;gettext&lt;/code&gt;. Do this with the &lt;a href=&quot;../../ref/django-admin#django-admin-compilemessages&quot;&gt;&lt;code&gt;django-admin compilemessages&lt;/code&gt;&lt;/a&gt; utility.</source>
          <target state="translated">创建消息文件后-每次对其进行更改-您都需要将其编译为更有效的形式，以供 &lt;code&gt;gettext&lt;/code&gt; 使用。使用&lt;a href=&quot;../../ref/django-admin#django-admin-compilemessages&quot;&gt; &lt;code&gt;django-admin compilemessages&lt;/code&gt; &lt;/a&gt;实用程序执行此操作。</target>
        </trans-unit>
        <trans-unit id="9f142d8357e94c93bff8e02e5c80a67c40758627" translate="yes" xml:space="preserve">
          <source>After you have run the tests, fix any failures. While you have the release notes fresh in your mind, it may also be a good time to take advantage of new features in Django by refactoring your code to eliminate any deprecation warnings.</source>
          <target state="translated">在你运行测试之后,修正任何失败的地方。当你对发布说明记忆犹新的时候,也可能是一个很好的时机,通过重构你的代码来消除任何recrecrecation警告来利用Django的新特性。</target>
        </trans-unit>
        <trans-unit id="75948cd661d2774dc7b4af27c50f524b8ec48d16" translate="yes" xml:space="preserve">
          <source>After you&amp;rsquo;ve created and activated a virtual environment, enter the command:</source>
          <target state="translated">创建并激活虚拟环境后，输入以下命令：</target>
        </trans-unit>
        <trans-unit id="6c00f9f95d692f9f5d52dc64a0c910df8598d94d" translate="yes" xml:space="preserve">
          <source>After you&amp;rsquo;ve created the translations, the &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; function will return the URL in the active language. Example:</source>
          <target state="translated">创建翻译后，&lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt;函数将以活动语言返回URL。例：</target>
        </trans-unit>
        <trans-unit id="a83bf81fa68c7adb95861b4267776fda80bfd431" translate="yes" xml:space="preserve">
          <source>After you&amp;rsquo;ve either set &lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt; or called &lt;code&gt;configure()&lt;/code&gt;, you&amp;rsquo;ll need to call &lt;a href=&quot;../ref/applications#django.setup&quot;&gt;&lt;code&gt;django.setup()&lt;/code&gt;&lt;/a&gt; to load your settings and populate Django&amp;rsquo;s application registry. For example:</source>
          <target state="translated">设置&lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt;或调用 &lt;code&gt;configure()&lt;/code&gt; 之后，需要调用&lt;a href=&quot;../ref/applications#django.setup&quot;&gt; &lt;code&gt;django.setup()&lt;/code&gt; &lt;/a&gt;来加载设置并填充Django的应用程序注册表。例如：</target>
        </trans-unit>
        <trans-unit id="c00c09156a5af6e5afc0c9ffaf58bed13a5f856f" translate="yes" xml:space="preserve">
          <source>After you&amp;rsquo;ve either set &lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-9&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt; or called &lt;code&gt;configure()&lt;/code&gt;, you&amp;rsquo;ll need to call &lt;a href=&quot;../ref/applications#django.setup&quot;&gt;&lt;code&gt;django.setup()&lt;/code&gt;&lt;/a&gt; to load your settings and populate Django&amp;rsquo;s application registry. For example:</source>
          <target state="translated">设置&lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-9&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt;或调用 &lt;code&gt;configure()&lt;/code&gt; 之后，需要调用&lt;a href=&quot;../ref/applications#django.setup&quot;&gt; &lt;code&gt;django.setup()&lt;/code&gt; &lt;/a&gt;来加载设置并填充Django的应用程序注册表。例如：</target>
        </trans-unit>
        <trans-unit id="6eb54cbde4f24bf5c6af4e6dd0b7a585b18eb988" translate="yes" xml:space="preserve">
          <source>After you&amp;rsquo;ve installed the KyngChaos binaries and modified your &lt;code&gt;PATH&lt;/code&gt;, as described above, &lt;code&gt;psycopg2&lt;/code&gt; may be installed using the following command:</source>
          <target state="translated">如上所述，安装了KyngChaos二进制文件并修改了 &lt;code&gt;PATH&lt;/code&gt; 之后，可以使用以下命令安装 &lt;code&gt;psycopg2&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="88b1186bb9c94ec6c9603db091e796a247ecb17d" translate="yes" xml:space="preserve">
          <source>After you&amp;rsquo;ve taken these steps, you&amp;rsquo;ll be able to use the admin site by visiting the URL you hooked it into (&lt;code&gt;/admin/&lt;/code&gt;, by default).</source>
          <target state="translated">完成这些步骤后，您可以通过访问链接到的URL（默认为 &lt;code&gt;/admin/&lt;/code&gt; ）来使用管理站点。</target>
        </trans-unit>
        <trans-unit id="84768878fd67444cf6aeb2b9f70fb7f8c46001a3" translate="yes" xml:space="preserve">
          <source>Afterwards, invoke the Django shell from the &lt;code&gt;geodjango&lt;/code&gt; project directory:</source>
          <target state="translated">然后，从 &lt;code&gt;geodjango&lt;/code&gt; 项目目录调用Django shell ：</target>
        </trans-unit>
        <trans-unit id="b0c1764bcde7adb7e9f9737f8f18137d064ad3a9" translate="yes" xml:space="preserve">
          <source>Afterwards, you can also install the KyngChaos binary packages for &lt;a href=&quot;https://www.kyngchaos.com/software/postgres&quot;&gt;PostgreSQL and PostGIS&lt;/a&gt;.</source>
          <target state="translated">之后，您还可以为&lt;a href=&quot;https://www.kyngchaos.com/software/postgres&quot;&gt;PostgreSQL和PostGIS&lt;/a&gt;安装KyngChaos二进制软件包。</target>
        </trans-unit>
        <trans-unit id="609ae4a2b711e9851698f5c7ccad2895c556ca86" translate="yes" xml:space="preserve">
          <source>Afterwards, you should familiarize yourself with the changes that were made in the new Django version(s):</source>
          <target state="translated">之后,你应该熟悉新的Django版本中的变化。</target>
        </trans-unit>
        <trans-unit id="76d9eb1aa30256965c27105fa5717d6b2a4ac66b" translate="yes" xml:space="preserve">
          <source>Again, &lt;code&gt;polls&lt;/code&gt; is a minimal application, but however complex it grows in the future and whatever other code it interacts with, we now have some guarantee that the method we have written tests for will behave in expected ways.</source>
          <target state="translated">再说一次， &lt;code&gt;polls&lt;/code&gt; 是一个最小的应用程序，但是不管它将来变得多么复杂以及与之交互的其他代码如何，我们现在都可以保证我们编写测试的方法将以预期的方式运行。</target>
        </trans-unit>
        <trans-unit id="76edc27b78551b9907274be664d0d529b149a682" translate="yes" xml:space="preserve">
          <source>Again, defining project-specific configuration classes in a submodule called &lt;code&gt;apps&lt;/code&gt; is a convention, not a requirement.</source>
          <target state="translated">同样，在名为 &lt;code&gt;apps&lt;/code&gt; 的子模块中定义项目特定的配置类是惯例，而不是要求。</target>
        </trans-unit>
        <trans-unit id="4800e0bd8f8bf2f1ef78d7b6e6b1e6c25da9510a" translate="yes" xml:space="preserve">
          <source>Again, middleware are run in reverse order during the response phase, which includes &lt;code&gt;process_exception&lt;/code&gt;. If an exception middleware returns a response, the &lt;code&gt;process_exception&lt;/code&gt; methods of the middleware classes above that middleware won&amp;rsquo;t be called at all.</source>
          <target state="translated">同样，中间件在响应阶段以相反的顺序运行，其中包括 &lt;code&gt;process_exception&lt;/code&gt; 。如果异常中间件返回响应，则根本不会调用该中间件上方的中间件类的 &lt;code&gt;process_exception&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="07f00b688ea0b766303ecee7f61a1a4a6d54efd8" translate="yes" xml:space="preserve">
          <source>Again, the above is only a selection of the whole list; see the &lt;a href=&quot;builtins#ref-templates-builtins-tags&quot;&gt;built-in tag reference&lt;/a&gt; for the complete list.</source>
          <target state="translated">同样，以上只是整个列表的一部分；有关完整列表，请参见&lt;a href=&quot;builtins#ref-templates-builtins-tags&quot;&gt;内置标签参考&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="72d90458b1cb9acc91a52abbd86072d9d2f737ca" translate="yes" xml:space="preserve">
          <source>Again, these are just a few examples; see the &lt;a href=&quot;builtins#ref-templates-builtins-filters&quot;&gt;built-in filter reference&lt;/a&gt; for the complete list.</source>
          <target state="translated">同样，这些只是几个例子；请参阅&lt;a href=&quot;builtins#ref-templates-builtins-filters&quot;&gt;内置过滤器参考&lt;/a&gt;以获取完整列表。</target>
        </trans-unit>
        <trans-unit id="f2a7af272e8491c8ef8998c146668b3190e291a3" translate="yes" xml:space="preserve">
          <source>Again, these are just short descriptions of the most common field options. Full details can be found in the &lt;a href=&quot;../../ref/models/fields#common-model-field-options&quot;&gt;common model field option reference&lt;/a&gt;.</source>
          <target state="translated">同样，这些只是最常见字段选项的简短描述。完整的细节可以在&lt;a href=&quot;../../ref/models/fields#common-model-field-options&quot;&gt;通用模型字段选项参考中找到&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4ad6465156415426b3b441f0d6cb9831006c7d96" translate="yes" xml:space="preserve">
          <source>Again, this is a minimal example; your tests may require additional settings to run.</source>
          <target state="translated">同样,这是一个最小的例子;您的测试可能需要额外的设置才能运行。</target>
        </trans-unit>
        <trans-unit id="22f87c4755a2a72211f05d455242c68a7b90af59" translate="yes" xml:space="preserve">
          <source>Again, this only scratches the surface. A complete reference can be found in the &lt;a href=&quot;../../ref/models/querysets#field-lookups&quot;&gt;field lookup reference&lt;/a&gt;.</source>
          <target state="translated">同样，这只会划伤表面。完整的参考可以在&lt;a href=&quot;../../ref/models/querysets#field-lookups&quot;&gt;字段查找参考中找到&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f6e5271c1968addea0910c36407cb68adbcc2a4" translate="yes" xml:space="preserve">
          <source>Again, we stress that this behavior is on by default. If you&amp;rsquo;re using Django&amp;rsquo;s template system, you&amp;rsquo;re protected.</source>
          <target state="translated">同样，我们强调此行为默认情况下处于启用状态。如果您使用的是Django的模板系统，则将受到保护。</target>
        </trans-unit>
        <trans-unit id="6a8e8189f1313ddd69a6c196be4e792c160e8ade" translate="yes" xml:space="preserve">
          <source>Aggregate</source>
          <target state="translated">Aggregate</target>
        </trans-unit>
        <trans-unit id="558d7aad6e94b62a3c3d222979b260b60b6db7d2" translate="yes" xml:space="preserve">
          <source>Aggregate Functions</source>
          <target state="translated">聚合函数</target>
        </trans-unit>
        <trans-unit id="58db3b6eabf8f4ca517fda205de7d76143146986" translate="yes" xml:space="preserve">
          <source>Aggregate functions for statistics</source>
          <target state="translated">统计的汇总功能</target>
        </trans-unit>
        <trans-unit id="e592a786dfbb7bba39abe800dc70d129c6dce799" translate="yes" xml:space="preserve">
          <source>Aggregates can also participate in filters. Any &lt;code&gt;filter()&lt;/code&gt; (or &lt;code&gt;exclude()&lt;/code&gt;) applied to normal model fields will have the effect of constraining the objects that are considered for aggregation.</source>
          <target state="translated">聚集体也可以参与过滤器。应用于普通模型字段的任何 &lt;code&gt;filter()&lt;/code&gt; （或 &lt;code&gt;exclude()&lt;/code&gt; ）都将具有约束考虑进行聚合的对象的作用。</target>
        </trans-unit>
        <trans-unit id="0c1907fa8ba92171ecd5a41aa1138a68fd39e6c3" translate="yes" xml:space="preserve">
          <source>Aggregates may be used within a &lt;code&gt;Subquery&lt;/code&gt;, but they require a specific combination of &lt;a href=&quot;querysets#django.db.models.query.QuerySet.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;querysets#django.db.models.query.QuerySet.values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;querysets#django.db.models.query.QuerySet.annotate&quot;&gt;&lt;code&gt;annotate()&lt;/code&gt;&lt;/a&gt; to get the subquery grouping correct.</source>
          <target state="translated">聚合可以在 &lt;code&gt;Subquery&lt;/code&gt; ，但它们需要&lt;a href=&quot;querysets#django.db.models.query.QuerySet.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;querysets#django.db.models.query.QuerySet.values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;querysets#django.db.models.query.QuerySet.annotate&quot;&gt; &lt;code&gt;annotate()&lt;/code&gt; &lt;/a&gt;的特定组合才能使子查询分组正确。</target>
        </trans-unit>
        <trans-unit id="c3046a0b95ce675e13e620164db3548ddbeed47d" translate="yes" xml:space="preserve">
          <source>Aggregates specified using keyword arguments will use the keyword as the name for the annotation. Anonymous arguments will have a name generated for them based upon the name of the aggregate function and the model field that is being aggregated. Complex aggregates cannot use anonymous arguments and must specify a keyword argument as an alias.</source>
          <target state="translated">使用关键字参数指定的聚合将使用关键字作为注解的名称。匿名参数将根据聚合函数的名称和被聚合的模型字段为其生成一个名称。复杂的聚合不能使用匿名参数,必须指定一个关键字参数作为别名。</target>
        </trans-unit>
        <trans-unit id="4c54474caf51a4cfcf55ae1aeaad92afdaea6ae2" translate="yes" xml:space="preserve">
          <source>Aggregates the logic of multiple fields that together produce a single value.</source>
          <target state="translated">将多个字段的逻辑聚合在一起产生一个值。</target>
        </trans-unit>
        <trans-unit id="c5224068860504ef288a954b021f18be1d0eca82" translate="yes" xml:space="preserve">
          <source>Aggregating annotations</source>
          <target state="translated">汇总注释</target>
        </trans-unit>
        <trans-unit id="b9ba037c0e4c06d192c83e08070b15787f07daaa" translate="yes" xml:space="preserve">
          <source>Aggregation</source>
          <target state="translated">Aggregation</target>
        </trans-unit>
        <trans-unit id="8744763c19352d1e7e8a834af21ab845a14c6d4a" translate="yes" xml:space="preserve">
          <source>Aggregation functions</source>
          <target state="translated">聚合功能</target>
        </trans-unit>
        <trans-unit id="db05f7da09b2a0260f41b164da50f58bf58d7db4" translate="yes" xml:space="preserve">
          <source>Aggregation functions return &lt;code&gt;None&lt;/code&gt; when used with an empty &lt;code&gt;QuerySet&lt;/code&gt;. For example, the &lt;code&gt;Sum&lt;/code&gt; aggregation function returns &lt;code&gt;None&lt;/code&gt; instead of &lt;code&gt;0&lt;/code&gt; if the &lt;code&gt;QuerySet&lt;/code&gt; contains no entries. An exception is &lt;code&gt;Count&lt;/code&gt;, which does return &lt;code&gt;0&lt;/code&gt; if the &lt;code&gt;QuerySet&lt;/code&gt; is empty.</source>
          <target state="translated">与空的 &lt;code&gt;QuerySet&lt;/code&gt; 一起使用时，聚合函数返回 &lt;code&gt;None&lt;/code&gt; 。例如，如果 &lt;code&gt;QuerySet&lt;/code&gt; 不包含任何条目，则 &lt;code&gt;Sum&lt;/code&gt; 聚合函数将返回 &lt;code&gt;None&lt;/code&gt; 而不是 &lt;code&gt;0&lt;/code&gt; 。 &lt;code&gt;Count&lt;/code&gt; 是一个例外，如果 &lt;code&gt;QuerySet&lt;/code&gt; 为空，它会返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="28526bd2f39d981e3a8e47d55d1edc91059ed733" translate="yes" xml:space="preserve">
          <source>Aggregations and other &lt;code&gt;QuerySet&lt;/code&gt; clauses</source>
          <target state="translated">聚合和其他 &lt;code&gt;QuerySet&lt;/code&gt; 子句</target>
        </trans-unit>
        <trans-unit id="03401c7929a3c8c6e403e43f42554e9b39a016bc" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry.point_count&quot;&gt;&lt;code&gt;point_count&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry.point_count&quot;&gt; &lt;code&gt;point_count&lt;/code&gt; 的&lt;/a&gt;别名。</target>
        </trans-unit>
        <trans-unit id="89a10a12a5bd894bfe79c45dad116ea940883dff" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#django.contrib.gis.gdal.SpatialReference.proj&quot;&gt;&lt;code&gt;SpatialReference.proj&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.gis.gdal.SpatialReference.proj&quot;&gt; &lt;code&gt;SpatialReference.proj&lt;/code&gt; 的&lt;/a&gt;别名。</target>
        </trans-unit>
        <trans-unit id="311340d0f664404d0e32bcc705f7f5a3f899a664" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.json&quot;&gt;&lt;code&gt;GEOSGeometry.json&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.json&quot;&gt; &lt;code&gt;GEOSGeometry.json&lt;/code&gt; 的&lt;/a&gt;别名。</target>
        </trans-unit>
        <trans-unit id="eea85015493bafd873240e2440370250d63e355a" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#django.contrib.gis.measure.Area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.gis.measure.Area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt;类的别名。</target>
        </trans-unit>
        <trans-unit id="3139c96ef36bdd16b025d9f6b3f8b24e7ab6c197" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#django.contrib.gis.measure.Distance&quot;&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.gis.measure.Distance&quot;&gt; &lt;code&gt;Distance&lt;/code&gt; &lt;/a&gt;类的别名。</target>
        </trans-unit>
        <trans-unit id="d3596c0273800b5bfe61283f267b07dcfe497e68" translate="yes" xml:space="preserve">
          <source>Alias of &lt;a href=&quot;#django.utils.encoding.force_str&quot;&gt;&lt;code&gt;force_str()&lt;/code&gt;&lt;/a&gt; for backwards compatibility, especially in code that supports Python 2.</source>
          <target state="translated">向后兼容的&lt;a href=&quot;#django.utils.encoding.force_str&quot;&gt; &lt;code&gt;force_str()&lt;/code&gt; &lt;/a&gt;别名，尤其是在支持Python 2的代码中。</target>
        </trans-unit>
        <trans-unit id="e367d79c8df65fe0d42fc97a7d15eb1a67e28fd5" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;#django.views.decorators.debug.sensitive_variables&quot;&gt;&lt;code&gt;sensitive_variables()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.views.decorators.debug.sensitive_post_parameters&quot;&gt;&lt;code&gt;sensitive_post_parameters()&lt;/code&gt;&lt;/a&gt; do is, respectively, annotate the decorated function with the names of sensitive variables and annotate the &lt;code&gt;HttpRequest&lt;/code&gt; object with the names of sensitive POST parameters, so that this sensitive information can later be filtered out of reports when an error occurs. The actual filtering is done by Django&amp;rsquo;s default error reporter filter: &lt;a href=&quot;#django.views.debug.SafeExceptionReporterFilter&quot;&gt;&lt;code&gt;django.views.debug.SafeExceptionReporterFilter&lt;/code&gt;&lt;/a&gt;. This filter uses the decorators&amp;rsquo; annotations to replace the corresponding values with stars (&lt;code&gt;**********&lt;/code&gt;) when the error reports are produced. If you wish to override or customize this default behavior for your entire site, you need to define your own filter class and tell Django to use it via the &lt;a href=&quot;../ref/settings#std:setting-DEFAULT_EXCEPTION_REPORTER_FILTER&quot;&gt;&lt;code&gt;DEFAULT_EXCEPTION_REPORTER_FILTER&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="translated">所有&lt;a href=&quot;#django.views.decorators.debug.sensitive_variables&quot;&gt; &lt;code&gt;sensitive_variables()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.views.decorators.debug.sensitive_post_parameters&quot;&gt; &lt;code&gt;sensitive_post_parameters()&lt;/code&gt; &lt;/a&gt;分别用敏感变量的名称注释修饰后的函数，并使用敏感的POST参数的名称注释 &lt;code&gt;HttpRequest&lt;/code&gt; 对象，以便以后可以在报告中将这些敏感信息从报告中过滤掉。发生错误。实际的过滤是由Django的默认错误报告过滤器完成的：&lt;a href=&quot;#django.views.debug.SafeExceptionReporterFilter&quot;&gt; &lt;code&gt;django.views.debug.SafeExceptionReporterFilter&lt;/code&gt; &lt;/a&gt;。此过滤器使用修饰符的注释将相应的值替换为星号（ &lt;code&gt;**********&lt;/code&gt; ）生成错误报告时。如果要覆盖或自定义整个网站的默认行为，则需要定义自己的过滤器类，并告诉Django通过&lt;a href=&quot;../ref/settings#std:setting-DEFAULT_EXCEPTION_REPORTER_FILTER&quot;&gt; &lt;code&gt;DEFAULT_EXCEPTION_REPORTER_FILTER&lt;/code&gt; &lt;/a&gt;设置使用它：</target>
        </trans-unit>
        <trans-unit id="a8039f9e6b2179f06189ad75d841b92549f36262" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../topics/auth/default#django.contrib.auth.views.PasswordResetView&quot;&gt;&lt;code&gt;PasswordResetView&lt;/code&gt;&lt;/a&gt; tokens.</source>
          <target state="translated">所有&lt;a href=&quot;../topics/auth/default#django.contrib.auth.views.PasswordResetView&quot;&gt; &lt;code&gt;PasswordResetView&lt;/code&gt; &lt;/a&gt;令牌。</target>
        </trans-unit>
        <trans-unit id="83ad2f51e4998821b250c8647a84c6d07b6ed7e4" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../topics/http/sessions&quot;&gt;sessions&lt;/a&gt; if you are using any other session backend than &lt;code&gt;django.contrib.sessions.backends.cache&lt;/code&gt;, or are using the default &lt;a href=&quot;../topics/auth/customizing#django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash&quot;&gt;&lt;code&gt;get_session_auth_hash()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您正在使用 &lt;code&gt;django.contrib.sessions.backends.cache&lt;/code&gt; 以外的其他会话后端，或者正在使用默认的&lt;a href=&quot;../topics/auth/customizing#django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash&quot;&gt; &lt;code&gt;get_session_auth_hash()&lt;/code&gt; &lt;/a&gt;，则所有&lt;a href=&quot;../topics/http/sessions&quot;&gt;会话&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="04ac9d489c3dc8f1a010bfe9b454bb3b904669e8" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;contrib/messages&quot;&gt;messages&lt;/a&gt; if you are using &lt;a href=&quot;contrib/messages#django.contrib.messages.storage.cookie.CookieStorage&quot;&gt;&lt;code&gt;CookieStorage&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;contrib/messages#django.contrib.messages.storage.fallback.FallbackStorage&quot;&gt;&lt;code&gt;FallbackStorage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果使用&lt;a href=&quot;contrib/messages#django.contrib.messages.storage.cookie.CookieStorage&quot;&gt; &lt;code&gt;CookieStorage&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;contrib/messages#django.contrib.messages.storage.fallback.FallbackStorage&quot;&gt; &lt;code&gt;FallbackStorage&lt;/code&gt; ,&lt;/a&gt;则显示所有&lt;a href=&quot;contrib/messages&quot;&gt;消息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0384f79740400bf6124e127c5152b7d8fa1cdbc2" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;tools#django.test.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; subclasses are run first.</source>
          <target state="translated">所有&lt;a href=&quot;tools#django.test.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;子类都首先运行。</target>
        </trans-unit>
        <trans-unit id="31517b0b1c71d2abf5c73d7d73dc156598e93d51" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;SessionStore&lt;/code&gt; classes available in Django inherit from &lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase&quot;&gt;&lt;code&gt;SessionBase&lt;/code&gt;&lt;/a&gt; and implement data manipulation methods, namely:</source>
          <target state="translated">Django中所有可用的 &lt;code&gt;SessionStore&lt;/code&gt; 类都继承自&lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase&quot;&gt; &lt;code&gt;SessionBase&lt;/code&gt; &lt;/a&gt;并实现数据操作方法，即：</target>
        </trans-unit>
        <trans-unit id="c9f1617e377da8269575590aa14bf2bce27cdb91" translate="yes" xml:space="preserve">
          <source>All Django wants is that &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;. Or an exception.</source>
          <target state="translated">Django想要的只是&lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;。还是一个例外。</target>
        </trans-unit>
        <trans-unit id="9dd77df42cbf9e4375aa2cccefdd1a4331364ccb" translate="yes" xml:space="preserve">
          <source>All POST parameters are systematically filtered out of error reports for certain &lt;a href=&quot;../topics/auth/default#module-django.contrib.auth.views&quot;&gt;&lt;code&gt;django.contrib.auth.views&lt;/code&gt;&lt;/a&gt; views (&lt;code&gt;login&lt;/code&gt;, &lt;code&gt;password_reset_confirm&lt;/code&gt;, &lt;code&gt;password_change&lt;/code&gt;, and &lt;code&gt;add_view&lt;/code&gt; and &lt;code&gt;user_change_password&lt;/code&gt; in the &lt;code&gt;auth&lt;/code&gt; admin) to prevent the leaking of sensitive information such as user passwords.</source>
          <target state="translated">系统会从某些&lt;a href=&quot;../topics/auth/default#module-django.contrib.auth.views&quot;&gt; &lt;code&gt;django.contrib.auth.views&lt;/code&gt; &lt;/a&gt;视图（ &lt;code&gt;auth&lt;/code&gt; admin 中的 &lt;code&gt;login&lt;/code&gt; ， &lt;code&gt;password_reset_confirm&lt;/code&gt; ， &lt;code&gt;password_change&lt;/code&gt; 以及 &lt;code&gt;add_view&lt;/code&gt; 和 &lt;code&gt;user_change_password&lt;/code&gt; ）的错误报告中系统地过滤掉所有POST参数，以防止敏感信息（例如用户密码）泄漏。</target>
        </trans-unit>
        <trans-unit id="0b711e4e0c0aa1b459af24f49b004fe6a8f8910a" translate="yes" xml:space="preserve">
          <source>All aggregates have the &lt;a href=&quot;../../models/querysets#aggregate-filter&quot;&gt;filter&lt;/a&gt; keyword argument.</source>
          <target state="translated">所有聚合均具有&lt;a href=&quot;../../models/querysets#aggregate-filter&quot;&gt;filter&lt;/a&gt;关键字参数。</target>
        </trans-unit>
        <trans-unit id="f8d288bc11de64752d70a611e5d42fa8b3b32332" translate="yes" xml:space="preserve">
          <source>All aggregates have the following parameters in common:</source>
          <target state="translated">所有聚合体都有以下共同的参数:</target>
        </trans-unit>
        <trans-unit id="7a23a0a248b43bbcfef231f9bbc931de01093aed" translate="yes" xml:space="preserve">
          <source>All arguments passed to &lt;code&gt;push()&lt;/code&gt; will be passed to the &lt;code&gt;dict&lt;/code&gt; constructor used to build the new context level.</source>
          <target state="translated">传递给 &lt;code&gt;push()&lt;/code&gt; 的所有参数都将传递给用于构建新上下文级别的 &lt;code&gt;dict&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="fe5fd9064b79f1bef279924828a3bad888755038" translate="yes" xml:space="preserve">
          <source>All attributes can be set in your derived class and can be used in &lt;a href=&quot;#django.core.management.BaseCommand&quot;&gt;&lt;code&gt;BaseCommand&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;#ref-basecommand-subclasses&quot;&gt;subclasses&lt;/a&gt;.</source>
          <target state="translated">所有属性都可以在派生类中设置，也可以在&lt;a href=&quot;#django.core.management.BaseCommand&quot;&gt; &lt;code&gt;BaseCommand&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;#ref-basecommand-subclasses&quot;&gt;子类中使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0a9a5ca4be05a737b99621754bef89baa865d53b" translate="yes" xml:space="preserve">
          <source>All attributes should be considered read-only unless stated otherwise.</source>
          <target state="translated">除非另有说明,否则所有属性都应被视为只读。</target>
        </trans-unit>
        <trans-unit id="3654cf136b268bf0a4f4bf5e1314d277651c1fe1" translate="yes" xml:space="preserve">
          <source>All attributes should be considered read-only, unless stated otherwise.</source>
          <target state="translated">除非另有说明,否则所有属性都应视为只读。</target>
        </trans-unit>
        <trans-unit id="6c4a691f96ada2abf291b5d01a2c703144bc487d" translate="yes" xml:space="preserve">
          <source>All authentication views</source>
          <target state="translated">所有认证意见</target>
        </trans-unit>
        <trans-unit id="799abb870d053e1b0e49a20db77bfd8d0926901c" translate="yes" xml:space="preserve">
          <source>All data is now dumped with Unicode. If you need the previous behavior, pass &lt;code&gt;allow_unicode=False&lt;/code&gt; to the &lt;code&gt;serializers.serialize()&lt;/code&gt; function.</source>
          <target state="translated">现在，所有数据都使用Unicode转储。如果需要以前的行为， &lt;code&gt;allow_unicode=False&lt;/code&gt; 传递给 &lt;code&gt;serializers.serialize()&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="78dad26e1457753d4c81a5622a385195e1ed4091" translate="yes" xml:space="preserve">
          <source>All data is now dumped with Unicode. If you need the previous behavior, pass &lt;code&gt;ensure_ascii=True&lt;/code&gt; to the &lt;code&gt;serializers.serialize()&lt;/code&gt; function.</source>
          <target state="translated">现在，所有数据都使用Unicode转储。如果您需要以前的行为， &lt;code&gt;ensure_ascii=True&lt;/code&gt; 传递给 &lt;code&gt;serializers.serialize()&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="9d2cc8e4b1a53e5ff26f7c2253d15ca956b99f0e" translate="yes" xml:space="preserve">
          <source>All examples in the reference below are given for geometry fields and inputs, but the lookups can be used the same way with rasters on both sides. Whenever a lookup doesn&amp;rsquo;t support raster input, the input is automatically converted to a geometry where necessary using the &lt;a href=&quot;https://postgis.net/docs/RT_ST_Polygon.html&quot;&gt;ST_Polygon&lt;/a&gt; function. See also the &lt;a href=&quot;db-api#spatial-lookup-raster&quot;&gt;introduction to raster lookups&lt;/a&gt;.</source>
          <target state="translated">下面参考中的所有示例均针对几何字段和输入给出，但查找可以在栅格两侧使用相同方式。每当查找不支持栅格输入时，必要时可使用&lt;a href=&quot;https://postgis.net/docs/RT_ST_Polygon.html&quot;&gt;ST_Polygon&lt;/a&gt;函数将输入自动转换为几何。另请参见&lt;a href=&quot;db-api#spatial-lookup-raster&quot;&gt;栅格查找简介&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1164b8ae07415e94da9b058be21f6bb9956deb5c" translate="yes" xml:space="preserve">
          <source>All examples in this section use the sample &lt;code&gt;Blog&lt;/code&gt;, &lt;code&gt;Author&lt;/code&gt; and &lt;code&gt;Entry&lt;/code&gt; models defined at the top of this page.</source>
          <target state="translated">本节中的所有示例均使用此页面顶部定义的示例 &lt;code&gt;Blog&lt;/code&gt; ， &lt;code&gt;Author&lt;/code&gt; 和 &lt;code&gt;Entry&lt;/code&gt; 模型。</target>
        </trans-unit>
        <trans-unit id="02c9e7a76c652166d38ab264750ff35c60dc4b46" translate="yes" xml:space="preserve">
          <source>All file upload handlers should be subclasses of &lt;code&gt;django.core.files.uploadhandler.FileUploadHandler&lt;/code&gt;. You can define upload handlers wherever you wish.</source>
          <target state="translated">所有文件上传处理程序都应该是 &lt;code&gt;django.core.files.uploadhandler.FileUploadHandler&lt;/code&gt; 的子类。您可以在任意位置定义上传处理程序。</target>
        </trans-unit>
        <trans-unit id="19a5a27019567030d2cbca69e09abcfb4975cafd" translate="yes" xml:space="preserve">
          <source>All form classes are created as subclasses of either &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt;&lt;code&gt;django.forms.Form&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;django.forms.ModelForm&lt;/code&gt;&lt;/a&gt;. You can think of &lt;code&gt;ModelForm&lt;/code&gt; as a subclass of &lt;code&gt;Form&lt;/code&gt;. &lt;code&gt;Form&lt;/code&gt; and &lt;code&gt;ModelForm&lt;/code&gt; actually inherit common functionality from a (private) &lt;code&gt;BaseForm&lt;/code&gt; class, but this implementation detail is rarely important.</source>
          <target state="translated">所有表单类均作为&lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt; &lt;code&gt;django.forms.Form&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;django.forms.ModelForm&lt;/code&gt; 的&lt;/a&gt;子类创建。您可以将 &lt;code&gt;ModelForm&lt;/code&gt; 视为 &lt;code&gt;Form&lt;/code&gt; 的子类。 &lt;code&gt;Form&lt;/code&gt; 和 &lt;code&gt;ModelForm&lt;/code&gt; 实际上从（私有） &lt;code&gt;BaseForm&lt;/code&gt; 类继承了通用功能，但是这种实现细节很少很重要。</target>
        </trans-unit>
        <trans-unit id="9082a9d4ed7be6ac91a3858cfc8e0d456bc7434e" translate="yes" xml:space="preserve">
          <source>All functions come without default aliases, so you must explicitly provide one. For example:</source>
          <target state="translated">所有的函数都没有默认的别名,所以你必须明确提供一个别名。例如</target>
        </trans-unit>
        <trans-unit id="eb8c277929e720d58493dcd7faeaed7ee077a3e1" translate="yes" xml:space="preserve">
          <source>All keyword parameter names are turned to lowercase, and underscores are converted to hyphens.</source>
          <target state="translated">所有的关键字参数名都转为小写,下划线转为连字符。</target>
        </trans-unit>
        <trans-unit id="544970aea4074b488ba69731db1254ed617836c1" translate="yes" xml:space="preserve">
          <source>All loggers except &lt;a href=&quot;#django-server-logger&quot;&gt;django.server&lt;/a&gt; propagate logging to their parents, up to the root &lt;code&gt;django&lt;/code&gt; logger. The &lt;code&gt;console&lt;/code&gt; and &lt;code&gt;mail_admins&lt;/code&gt; handlers are attached to the root logger to provide the behavior described above.</source>
          <target state="translated">除&lt;a href=&quot;#django-server-logger&quot;&gt;django.server&lt;/a&gt;以外的所有记录器都将日志记录传播到其父目录，直到根 &lt;code&gt;django&lt;/code&gt; 记录器为止。的 &lt;code&gt;console&lt;/code&gt; 和 &lt;code&gt;mail_admins&lt;/code&gt; 处理程序被附接到根记录器，以提供上述的行为。</target>
        </trans-unit>
        <trans-unit id="9016f8182d2fe2c55bef97c4e79cb1bf3e62947b" translate="yes" xml:space="preserve">
          <source>All message file repositories are structured the same way. They are:</source>
          <target state="translated">所有的消息文件库的结构都是一样的。它们是:</target>
        </trans-unit>
        <trans-unit id="a2a722a87c436c67f4c4024376ede8cce074d719" translate="yes" xml:space="preserve">
          <source>All methods on &lt;code&gt;PreparedGeometry&lt;/code&gt; take an &lt;code&gt;other&lt;/code&gt; argument, which must be a &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;code&gt;PreparedGeometry&lt;/code&gt; 上的所有方法都带有 &lt;code&gt;other&lt;/code&gt; 参数，该参数必须是&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="dd9bfa9ebbc4d39a8057cc0688dd6cd8bba7bfc3" translate="yes" xml:space="preserve">
          <source>All non-deferred fields of the model are updated to the values currently present in the database.</source>
          <target state="translated">模型的所有非递延字段都更新为数据库中的当前值。</target>
        </trans-unit>
        <trans-unit id="52bd8839678fd66e4de579c13c97026b52a41c70" translate="yes" xml:space="preserve">
          <source>All numeric values are now translated as plural, except &lt;code&gt;1.0&lt;/code&gt; which is translated as a singular phrase. This may be incorrect for some languages.</source>
          <target state="translated">现在，所有数字值都将转换为复数形式，但 &lt;code&gt;1.0&lt;/code&gt; 会转换为单数短语。对于某些语言，这可能是不正确的。</target>
        </trans-unit>
        <trans-unit id="43879c25ad1f9ff0dbd0dee3407939e60e2d2d88" translate="yes" xml:space="preserve">
          <source>All of Django&amp;rsquo;s built-in fields, such as &lt;a href=&quot;#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;, are particular implementations of &lt;code&gt;Field&lt;/code&gt;. If you need a custom field, you can either subclass any of the built-in fields or write a &lt;code&gt;Field&lt;/code&gt; from scratch. In either case, see &lt;a href=&quot;../../howto/custom-model-fields&quot;&gt;Writing custom model fields&lt;/a&gt;.</source>
          <target state="translated">Django的所有内置字段（例如&lt;a href=&quot;#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;）都是 &lt;code&gt;Field&lt;/code&gt; 的特定实现。如果需要自定义字段，则可以子类化任何内置字段，也可以从头开始编写 &lt;code&gt;Field&lt;/code&gt; 。在任何一种情况下，请参见&lt;a href=&quot;../../howto/custom-model-fields&quot;&gt;编写自定义模型字段&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e0d672fbdfd3bd2fd3b9fdc94cd770c410f30ef" translate="yes" xml:space="preserve">
          <source>All of Django&amp;rsquo;s database backends automatically convert strings into the appropriate encoding for talking to the database. They also automatically convert strings retrieved from the database into strings. You don&amp;rsquo;t even need to tell Django what encoding your database uses: that is handled transparently.</source>
          <target state="translated">Django的所有数据库后端都会自动将字符串转换为用于与数据库对话的适当编码。它们还将从数据库中检索到的字符串自动转换为字符串。您甚至不需要告诉Django数据库使用什么编码：这是透明处理的。</target>
        </trans-unit>
        <trans-unit id="25d8c074531237860e80f6129a0d529bf6a881f2" translate="yes" xml:space="preserve">
          <source>All of Django&amp;rsquo;s fields (and when we say &lt;em&gt;fields&lt;/em&gt; in this document, we always mean model fields and not &lt;a href=&quot;../ref/forms/fields&quot;&gt;form fields&lt;/a&gt;) are subclasses of &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;django.db.models.Field&lt;/code&gt;&lt;/a&gt;. Most of the information that Django records about a field is common to all fields &amp;ndash; name, help text, uniqueness and so forth. Storing all that information is handled by &lt;code&gt;Field&lt;/code&gt;. We&amp;rsquo;ll get into the precise details of what &lt;code&gt;Field&lt;/code&gt; can do later on; for now, suffice it to say that everything descends from &lt;code&gt;Field&lt;/code&gt; and then customizes key pieces of the class behavior.</source>
          <target state="translated">Django的所有字段（当我们在本文档中称&lt;em&gt;字段&lt;/em&gt;时，我们始终表示模型字段而不是&lt;a href=&quot;../ref/forms/fields&quot;&gt;表单字段&lt;/a&gt;）是&lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;django.db.models.Field&lt;/code&gt; 的&lt;/a&gt;子类。 Django记录的有关某个字段的大多数信息对于所有字段都是通用的-名称，帮助文本，唯一性等。存储所有这些信息由 &lt;code&gt;Field&lt;/code&gt; 处理。稍后我们将详细介绍 &lt;code&gt;Field&lt;/code&gt; 可以做什么。现在，只需说一切都起源于 &lt;code&gt;Field&lt;/code&gt; ，然后自定义类行为的关键部分就足够了。</target>
        </trans-unit>
        <trans-unit id="fd788ae21f1d7d0fcd8ae323dc21ea5bbe95d8f5" translate="yes" xml:space="preserve">
          <source>All of the &lt;code&gt;kwargs&lt;/code&gt; dictionary is passed directly to the form field&amp;rsquo;s &lt;code&gt;__init__()&lt;/code&gt; method. Normally, all you need to do is set up a good default for the &lt;code&gt;form_class&lt;/code&gt; (and maybe &lt;code&gt;choices_form_class&lt;/code&gt;) argument and then delegate further handling to the parent class. This might require you to write a custom form field (and even a form widget). See the &lt;a href=&quot;../topics/forms/index&quot;&gt;forms documentation&lt;/a&gt; for information about this.</source>
          <target state="translated">所有的 &lt;code&gt;kwargs&lt;/code&gt; 词典都直接传递给form字段的 &lt;code&gt;__init__()&lt;/code&gt; 方法。通常，您需要做的只是为 &lt;code&gt;form_class&lt;/code&gt; （可能是 &lt;code&gt;choices_form_class&lt;/code&gt; ）参数设置一个很好的默认值，然后将进一步的处理委托给父类。这可能需要您编写一个自定义表单字段（甚至表单小部件）。有关此信息，请参阅&lt;a href=&quot;../topics/forms/index&quot;&gt;表单文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="db95fd1155b2734442bf4a034c402f65a5fac4d4" translate="yes" xml:space="preserve">
          <source>All of the above can be combined to form complex expressions. For such expressions, it can be important to know how the operators are grouped when the expression is evaluated - that is, the precedence rules. The precedence of the operators, from lowest to highest, is as follows:</source>
          <target state="translated">以上所有内容都可以组合成复杂的表达式。对于这样的表达式,了解表达式计算时运算符的分组方式--也就是优先规则,可能很重要。运算符的优先级,从低到高,如下所示。</target>
        </trans-unit>
        <trans-unit id="90e2cc10b0a5ed4093dc1410275ea6c4e9a947e4" translate="yes" xml:space="preserve">
          <source>All of the built-in Django template tags are safe to use with the cached loader, but if you&amp;rsquo;re using custom template tags that come from third party packages, or that you wrote yourself, you should ensure that the &lt;code&gt;Node&lt;/code&gt; implementation for each tag is thread-safe. For more information, see &lt;a href=&quot;../../howto/custom-template-tags#template-tag-thread-safety&quot;&gt;template tag thread safety considerations&lt;/a&gt;.</source>
          <target state="translated">所有内置的Django模板标签都可以安全地与缓存的加载程序一起使用，但是，如果您使用的是来自第三方软件包的自定义模板标签，或者是您自己编写的，则应确保每个标签的 &lt;code&gt;Node&lt;/code&gt; 实现是线程安全的。有关更多信息，请参阅&lt;a href=&quot;../../howto/custom-template-tags#template-tag-thread-safety&quot;&gt;模板标记线程安全注意事项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09975dacc6609e21c13e0ae24e664fb6e20c2dfd" translate="yes" xml:space="preserve">
          <source>All of the cautions in the note for the &lt;a href=&quot;#django.db.models.query.QuerySet.defer&quot;&gt;&lt;code&gt;defer()&lt;/code&gt;&lt;/a&gt; documentation apply to &lt;code&gt;only()&lt;/code&gt; as well. Use it cautiously and only after exhausting your other options.</source>
          <target state="translated">注意&lt;a href=&quot;#django.db.models.query.QuerySet.defer&quot;&gt; &lt;code&gt;defer()&lt;/code&gt; &lt;/a&gt;文档中的所有注意事项也 &lt;code&gt;only()&lt;/code&gt; 适用于only（）。仅在用尽其他选项之后，请谨慎使用。</target>
        </trans-unit>
        <trans-unit id="842bb58d8d3fde08f19712960e865ccc82a3b6a4" translate="yes" xml:space="preserve">
          <source>All of the core Django operations are available from the &lt;code&gt;django.db.migrations.operations&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;django.db.migrations.operations&lt;/code&gt; 模块提供了所有核心Django操作。</target>
        </trans-unit>
        <trans-unit id="9fe0461c1dc8f2290a9c15cc547f9e3d24400d21" translate="yes" xml:space="preserve">
          <source>All of the fields of &lt;code&gt;Place&lt;/code&gt; will also be available in &lt;code&gt;Restaurant&lt;/code&gt;, although the data will reside in a different database table. So these are both possible:</source>
          <target state="translated">尽管数据将驻留在其他数据库表中，但 &lt;code&gt;Place&lt;/code&gt; 的所有字段也将在 &lt;code&gt;Restaurant&lt;/code&gt; 中可用。所以这两种可能：</target>
        </trans-unit>
        <trans-unit id="b101a05b6664afc950679820eed8500bf36c445e" translate="yes" xml:space="preserve">
          <source>All of the following spatial predicate methods take another &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; instance (&lt;code&gt;other&lt;/code&gt;) as a parameter, and return a boolean.</source>
          <target state="translated">以下所有空间谓词方法都将另一个&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt;实例（ &lt;code&gt;other&lt;/code&gt; ）作为参数，并返回一个布尔值。</target>
        </trans-unit>
        <trans-unit id="f7d8fdc618c1fcb75c91fd91936783ef99cfc1e4" translate="yes" xml:space="preserve">
          <source>All of the generic views listed above have matching &lt;code&gt;Base&lt;/code&gt; views that only differ in that they do not include the &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectTemplateResponseMixin&quot;&gt;&lt;code&gt;MultipleObjectTemplateResponseMixin&lt;/code&gt;&lt;/a&gt; (for the archive views) or &lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin&quot;&gt;&lt;code&gt;SingleObjectTemplateResponseMixin&lt;/code&gt;&lt;/a&gt; (for the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#DateDetailView&quot;&gt;&lt;code&gt;DateDetailView&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">上面列出的所有通用视图具有匹配的 &lt;code&gt;Base&lt;/code&gt; 视图，不同之处仅在于它们不包括&lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectTemplateResponseMixin&quot;&gt; &lt;code&gt;MultipleObjectTemplateResponseMixin&lt;/code&gt; &lt;/a&gt;（对于存档视图）或&lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin&quot;&gt; &lt;code&gt;SingleObjectTemplateResponseMixin&lt;/code&gt; &lt;/a&gt;（对于&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#DateDetailView&quot;&gt; &lt;code&gt;DateDetailView&lt;/code&gt; &lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="ec3968d8dd3e9c20b69be73031342bec269e973b" translate="yes" xml:space="preserve">
          <source>All of the generic views listed above have matching &lt;code&gt;Base&lt;/code&gt; views that only differ in that they do not include the &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectTemplateResponseMixin&quot;&gt;&lt;code&gt;MultipleObjectTemplateResponseMixin&lt;/code&gt;&lt;/a&gt; (for the archive views) or &lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin&quot;&gt;&lt;code&gt;SingleObjectTemplateResponseMixin&lt;/code&gt;&lt;/a&gt; (for the &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#DateDetailView&quot;&gt;&lt;code&gt;DateDetailView&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">上面列出的所有通用视图具有匹配的 &lt;code&gt;Base&lt;/code&gt; 视图，不同之处仅在于它们不包括&lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectTemplateResponseMixin&quot;&gt; &lt;code&gt;MultipleObjectTemplateResponseMixin&lt;/code&gt; &lt;/a&gt;（对于存档视图）或&lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin&quot;&gt; &lt;code&gt;SingleObjectTemplateResponseMixin&lt;/code&gt; &lt;/a&gt;（对于&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#DateDetailView&quot;&gt; &lt;code&gt;DateDetailView&lt;/code&gt; &lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="993f88424c9eb90136110e3989777865daf81d23" translate="yes" xml:space="preserve">
          <source>All of the options without an explanation in the above list have the same meaning they do for normal Django fields. See the &lt;a href=&quot;../ref/models/fields&quot;&gt;field documentation&lt;/a&gt; for examples and details.</source>
          <target state="translated">上面列表中所有没有解释的选项都具有与普通Django字段相同的含义。有关示例和详细信息，请参见&lt;a href=&quot;../ref/models/fields&quot;&gt;现场文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e9186a35fc6e3bff19ebd7c9ee446a905473d50a" translate="yes" xml:space="preserve">
          <source>All of the range fields translate to &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#adapt-range&quot;&gt;psycopg2 Range objects&lt;/a&gt; in Python, but also accept tuples as input if no bounds information is necessary. The default is lower bound included, upper bound excluded, that is &lt;code&gt;[)&lt;/code&gt; (see the PostgreSQL documentation for details about &lt;a href=&quot;https://www.postgresql.org/docs/current/rangetypes.html#RANGETYPES-IO&quot;&gt;different bounds&lt;/a&gt;).</source>
          <target state="translated">在Python中，所有范围字段都转换为&lt;a href=&quot;https://www.psycopg.org/docs/extras.html#adapt-range&quot;&gt;psycopg2 Range对象&lt;/a&gt;，但是如果不需要边界信息，也可以接受元组作为输入。默认值为包括下界，排除上界，即 &lt;code&gt;[)&lt;/code&gt; （有关&lt;a href=&quot;https://www.postgresql.org/docs/current/rangetypes.html#RANGETYPES-IO&quot;&gt;不同界限的&lt;/a&gt;详细信息，请参见PostgreSQL文档）。</target>
        </trans-unit>
        <trans-unit id="624a5a8d10c60270d031b529a547369c7fd64845" translate="yes" xml:space="preserve">
          <source>All of the range fields translate to &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#adapt-range&quot;&gt;psycopg2 Range objects&lt;/a&gt; in Python, but also accept tuples as input if no bounds information is necessary. The default is lower bound included, upper bound excluded; that is, &lt;code&gt;[)&lt;/code&gt;.</source>
          <target state="translated">在Python中，所有范围字段都转换为&lt;a href=&quot;https://www.psycopg.org/docs/extras.html#adapt-range&quot;&gt;psycopg2 Range对象&lt;/a&gt;，但是如果不需要边界信息，也可以接受元组作为输入。默认值为包括下限，排除上限；即 &lt;code&gt;[)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2902724522b24a6a9baf75157913e5df50ff81cf" translate="yes" xml:space="preserve">
          <source>All of the searching tools provided by &lt;a href=&quot;../../ref/contrib/postgres/index#module-django.contrib.postgres&quot;&gt;&lt;code&gt;django.contrib.postgres&lt;/code&gt;&lt;/a&gt; are constructed entirely on public APIs such as &lt;a href=&quot;../../ref/models/lookups&quot;&gt;custom lookups&lt;/a&gt; and &lt;a href=&quot;../../ref/models/database-functions&quot;&gt;database functions&lt;/a&gt;. Depending on your database, you should be able to construct queries to allow similar APIs. If there are specific things which cannot be achieved this way, please open a ticket.</source>
          <target state="translated">&lt;a href=&quot;../../ref/contrib/postgres/index#module-django.contrib.postgres&quot;&gt; &lt;code&gt;django.contrib.postgres&lt;/code&gt; &lt;/a&gt;提供的所有搜索工具完全基于公共API（例如&lt;a href=&quot;../../ref/models/lookups&quot;&gt;自定义查找&lt;/a&gt;和&lt;a href=&quot;../../ref/models/database-functions&quot;&gt;数据库功能）&lt;/a&gt;构建。根据您的数据库，您应该能够构造查询以允许类似的API。如果某些特定的事情无法通过这种方式完成，请打开一张票。</target>
        </trans-unit>
        <trans-unit id="c98396e0c2b9f2c7ef436c4e1cf9e5f31888c1be" translate="yes" xml:space="preserve">
          <source>All of these &lt;a href=&quot;../../migration-operations&quot;&gt;operations&lt;/a&gt; are available from the &lt;code&gt;django.contrib.postgres.operations&lt;/code&gt; module.</source>
          <target state="translated">所有这些&lt;a href=&quot;../../migration-operations&quot;&gt;操作&lt;/a&gt;都可以从 &lt;code&gt;django.contrib.postgres.operations&lt;/code&gt; 模块中获得。</target>
        </trans-unit>
        <trans-unit id="bf69fe6ddacfc94447bb1654591dc2ef5e20fd2e" translate="yes" xml:space="preserve">
          <source>All of these fields and widgets are available from the &lt;code&gt;django.contrib.postgres.forms&lt;/code&gt; module.</source>
          <target state="translated">所有这些字段和小部件都可以从 &lt;code&gt;django.contrib.postgres.forms&lt;/code&gt; 模块中获得。</target>
        </trans-unit>
        <trans-unit id="e6c91b1cb74c4317aa449a6be37db052e8b533e8" translate="yes" xml:space="preserve">
          <source>All of these fields are available from the &lt;code&gt;django.contrib.postgres.fields&lt;/code&gt; module.</source>
          <target state="translated">所有这些字段都可以从 &lt;code&gt;django.contrib.postgres.fields&lt;/code&gt; 模块中获得。</target>
        </trans-unit>
        <trans-unit id="2acb772d997846489b2b26ab0c755d6580d4b4f6" translate="yes" xml:space="preserve">
          <source>All of these functions are available from the &lt;code&gt;django.contrib.postgres.functions&lt;/code&gt; module.</source>
          <target state="translated">所有这些功能都可以从 &lt;code&gt;django.contrib.postgres.functions&lt;/code&gt; 模块中获得。</target>
        </trans-unit>
        <trans-unit id="856c715c58d67f1194ee039629e537842d2c1e4d" translate="yes" xml:space="preserve">
          <source>All of these privileges are included in the DBA role, which is appropriate for use on a private developer&amp;rsquo;s database.</source>
          <target state="translated">所有这些特权都包含在DBA角色中，适合在私有开发人员的数据库上使用。</target>
        </trans-unit>
        <trans-unit id="dbf98850f8f06d736b8ca5f7baec9fbb0a05444b" translate="yes" xml:space="preserve">
          <source>All open tags are closed implicitly, e.g. when a surrounding tag is closed or the HTML document ends.</source>
          <target state="translated">所有打开的标签都是隐式关闭的,例如当周围的标签关闭或HTML文档结束时。</target>
        </trans-unit>
        <trans-unit id="a0f69135e80ea5c60940b72ac5f763b58088a197" translate="yes" xml:space="preserve">
          <source>All other arguments are passed directly to the constructor of the email backend.</source>
          <target state="translated">其他所有的参数都直接传递给邮件后台的构造函数。</target>
        </trans-unit>
        <trans-unit id="50e8cd16153274bc54b4af97b232706269c58a27" translate="yes" xml:space="preserve">
          <source>All other parameters are added with their value, after applying &lt;code&gt;str()&lt;/code&gt; to it.</source>
          <target state="translated">在对所有其他参数应用 &lt;code&gt;str()&lt;/code&gt; 之后，将其值与其相加。</target>
        </trans-unit>
        <trans-unit id="4f4fdbbc35fbb9ea3542dc3763d600cc60c72446" translate="yes" xml:space="preserve">
          <source>All parameters should be strings, except &lt;code&gt;categories&lt;/code&gt;, which should be a sequence of strings.</source>
          <target state="translated">所有参数应是字符串，除了 &lt;code&gt;categories&lt;/code&gt; ，这应该是字符串的序列。</target>
        </trans-unit>
        <trans-unit id="c7f29b7d19514ab25d12772fb55a815025e66f61" translate="yes" xml:space="preserve">
          <source>All parameters should be strings, except &lt;code&gt;categories&lt;/code&gt;, which should be a sequence of strings. Beware that some control characters are &lt;a href=&quot;https://www.w3.org/International/questions/qa-controls&quot;&gt;not allowed&lt;/a&gt; in XML documents. If your content has some of them, you might encounter a &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when producing the feed.</source>
          <target state="translated">所有参数应是字符串，除了 &lt;code&gt;categories&lt;/code&gt; ，这应该是字符串的序列。请注意，XML文档中&lt;a href=&quot;https://www.w3.org/International/questions/qa-controls&quot;&gt;不允许使用&lt;/a&gt;某些控制字符。如果您的内容中包含某些内容，则在生成提要时可能会遇到&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4af4dad26ab178c09537c563b2a0614380b4b23a" translate="yes" xml:space="preserve">
          <source>All parameters, if given, should be strings, except:</source>
          <target state="translated">所有参数,如果给定,都应该是字符串,除了:</target>
        </trans-unit>
        <trans-unit id="4a271b4683a28a9fc5a2fc552854a0d231daccb3" translate="yes" xml:space="preserve">
          <source>All paths listed in &lt;a href=&quot;../../ref/settings#std:setting-LOCALE_PATHS&quot;&gt;&lt;code&gt;LOCALE_PATHS&lt;/code&gt;&lt;/a&gt; in your settings file are searched for &lt;code&gt;&amp;lt;language&amp;gt;/LC_MESSAGES/django.(po|mo)&lt;/code&gt;</source>
          <target state="translated">搜索设置文件中&lt;a href=&quot;../../ref/settings#std:setting-LOCALE_PATHS&quot;&gt; &lt;code&gt;LOCALE_PATHS&lt;/code&gt; &lt;/a&gt;中列出的所有路径，以查找 &lt;code&gt;&amp;lt;language&amp;gt;/LC_MESSAGES/django.(po|mo)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cfc16dbd3530c3abe3050ff2730113eba38dad65" translate="yes" xml:space="preserve">
          <source>All signals are &lt;a href=&quot;#django.dispatch.Signal&quot;&gt;&lt;code&gt;django.dispatch.Signal&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">所有信号都是&lt;a href=&quot;#django.dispatch.Signal&quot;&gt; &lt;code&gt;django.dispatch.Signal&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="5db8c4111c1c2d8f37d711c7a4555c41dfb63b67" translate="yes" xml:space="preserve">
          <source>All signals are &lt;a href=&quot;#django.dispatch.Signal&quot;&gt;&lt;code&gt;django.dispatch.Signal&lt;/code&gt;&lt;/a&gt; instances. The &lt;code&gt;providing_args&lt;/code&gt; is a list of the names of arguments the signal will provide to listeners. This is purely documentational, however, as there is nothing that checks that the signal actually provides these arguments to its listeners.</source>
          <target state="translated">所有信号都是&lt;a href=&quot;#django.dispatch.Signal&quot;&gt; &lt;code&gt;django.dispatch.Signal&lt;/code&gt; &lt;/a&gt;实例。该 &lt;code&gt;providing_args&lt;/code&gt; 是参数名称的信号将提供给听众的名单。但是，这纯粹是文档性的，因为没有任何东西可以检查信号是否确实向其侦听器提供了这些参数。</target>
        </trans-unit>
        <trans-unit id="c5600e5832db9d352453e1ae0c944a0cb30304f5" translate="yes" xml:space="preserve">
          <source>All string literals are inserted &lt;strong&gt;without&lt;/strong&gt; any automatic escaping into the template &amp;ndash; they act as if they were all passed through the &lt;a href=&quot;builtins#std:templatefilter-safe&quot;&gt;&lt;code&gt;safe&lt;/code&gt;&lt;/a&gt; filter. The reasoning behind this is that the template author is in control of what goes into the string literal, so they can make sure the text is correctly escaped when the template is written.</source>
          <target state="translated">所有字符串文字都会插入&lt;strong&gt;而&lt;/strong&gt;不会自动转义到模板中-它们的作用就好像它们都已通过&lt;a href=&quot;builtins#std:templatefilter-safe&quot;&gt; &lt;code&gt;safe&lt;/code&gt; &lt;/a&gt;过滤器一样。其背后的原因是模板作者可以控制字符串文字中的内容，因此他们可以确保在编写模板时正确地转义了文本。</target>
        </trans-unit>
        <trans-unit id="eef9606bdef9ac250cca6fae75b8370dda710764" translate="yes" xml:space="preserve">
          <source>All that will be stored in your database is a path to the file (relative to &lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt;&lt;/a&gt;). You&amp;rsquo;ll most likely want to use the convenience &lt;a href=&quot;#django.db.models.fields.files.FieldFile.url&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; attribute provided by Django. For example, if your &lt;a href=&quot;#django.db.models.ImageField&quot;&gt;&lt;code&gt;ImageField&lt;/code&gt;&lt;/a&gt; is called &lt;code&gt;mug_shot&lt;/code&gt;, you can get the absolute path to your image in a template with &lt;code&gt;{{ object.mug_shot.url }}&lt;/code&gt;.</source>
          <target state="translated">将存储在数据库中的所有文件都是该文件的路径（相对于&lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt; &lt;code&gt;MEDIA_ROOT&lt;/code&gt; &lt;/a&gt;）。您很可能想使用Django提供的便捷&lt;a href=&quot;#django.db.models.fields.files.FieldFile.url&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt;属性。例如，如果你&lt;a href=&quot;#django.db.models.ImageField&quot;&gt; &lt;code&gt;ImageField&lt;/code&gt; &lt;/a&gt;被称为 &lt;code&gt;mug_shot&lt;/code&gt; ，你可以看到自己的图像的绝对路径在模板与 &lt;code&gt;{{ object.mug_shot.url }}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f2f6ea665148cbc04152358949c5beb998e57ea" translate="yes" xml:space="preserve">
          <source>All the date formatting attributes in these mixins use &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; format characters. Do not try to use the format characters from the &lt;a href=&quot;../templates/builtins#std:templatetag-now&quot;&gt;&lt;code&gt;now&lt;/code&gt;&lt;/a&gt; template tag as they are not compatible.</source>
          <target state="translated">这些mixin中的所有日期格式属性都使用&lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt;格式字符。不要尝试使用&lt;a href=&quot;../templates/builtins#std:templatetag-now&quot;&gt; &lt;code&gt;now&lt;/code&gt; &lt;/a&gt;模板标记中的格式字符，因为它们不兼容。</target>
        </trans-unit>
        <trans-unit id="8d411a1915cf1d79692f0ecc7eab33f4df58268f" translate="yes" xml:space="preserve">
          <source>All the following querying routines may take either a string IP address or a fully qualified domain name (FQDN). For example, both &lt;code&gt;'205.186.163.125'&lt;/code&gt; and &lt;code&gt;'djangoproject.com'&lt;/code&gt; would be valid query parameters.</source>
          <target state="translated">以下所有查询例程都可以使用字符串IP地址或完全限定域名（FQDN）。例如， &lt;code&gt;'205.186.163.125'&lt;/code&gt; 和 &lt;code&gt;'djangoproject.com'&lt;/code&gt; 都是有效的查询参数。</target>
        </trans-unit>
        <trans-unit id="a23111386f47d33144e97c201e8b2819947440dd" translate="yes" xml:space="preserve">
          <source>All the form&amp;rsquo;s fields and their attributes will be unpacked into HTML markup from that &lt;code&gt;{{ form }}&lt;/code&gt; by Django&amp;rsquo;s template language.</source>
          <target state="translated">Django的模板语言将从 &lt;code&gt;{{ form }}&lt;/code&gt; 的HTML标记中解压缩出所有表单的字段及其属性。</target>
        </trans-unit>
        <trans-unit id="70f425fb82934c9c3f6ad3e0e4651384ac86ae46" translate="yes" xml:space="preserve">
          <source>All these constructors take the keyword argument &lt;code&gt;srid&lt;/code&gt;. For example:</source>
          <target state="translated">所有这些构造函数都采用关键字参数 &lt;code&gt;srid&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="d93916726c30a4bd59a342267e7e13db2348de5f" translate="yes" xml:space="preserve">
          <source>All three steps are performed when you call a model&amp;rsquo;s &lt;a href=&quot;#django.db.models.Model.full_clean&quot;&gt;&lt;code&gt;full_clean()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">当调用模型的&lt;a href=&quot;#django.db.models.Model.full_clean&quot;&gt; &lt;code&gt;full_clean()&lt;/code&gt; &lt;/a&gt;方法时，将执行所有三个步骤。</target>
        </trans-unit>
        <trans-unit id="1f5d1da75bdef06070e1dc5cbe9e56db56806493" translate="yes" xml:space="preserve">
          <source>All types of whitespace are considered equivalent.</source>
          <target state="translated">所有类型的空白都被认为是等价的。</target>
        </trans-unit>
        <trans-unit id="960e29b6390375b2975735a4f48891f3bc5ac228" translate="yes" xml:space="preserve">
          <source>All views are &lt;a href=&quot;../class-based-views/index&quot;&gt;class-based&lt;/a&gt;, which allows you to easily customize them by subclassing.</source>
          <target state="translated">所有视图都是&lt;a href=&quot;../class-based-views/index&quot;&gt;基于类的&lt;/a&gt;，这使您可以通过子类轻松地自定义它们。</target>
        </trans-unit>
        <trans-unit id="511c46e961182dd1e2188c3056c3fd8298dc280a" translate="yes" xml:space="preserve">
          <source>All writer objects have a &lt;code&gt;write(geom)&lt;/code&gt; method that returns either the WKB or WKT of the given geometry. In addition, &lt;a href=&quot;#django.contrib.gis.geos.WKBWriter&quot;&gt;&lt;code&gt;WKBWriter&lt;/code&gt;&lt;/a&gt; objects also have properties that may be used to change the byte order, and or include the SRID value (in other words, EWKB).</source>
          <target state="translated">所有writer对象都有一个 &lt;code&gt;write(geom)&lt;/code&gt; 方法，该方法返回给定几何的WKB或WKT。此外，&lt;a href=&quot;#django.contrib.gis.geos.WKBWriter&quot;&gt; &lt;code&gt;WKBWriter&lt;/code&gt; &lt;/a&gt;对象还具有可用于更改字节顺序或包含SRID值（换句话说，EWKB）的属性。</target>
        </trans-unit>
        <trans-unit id="976206a5e39fc2cd6f46f9358ce379242cf92f7c" translate="yes" xml:space="preserve">
          <source>All you need to do to get your form into a template is to place the form instance into the template context. So if your form is called &lt;code&gt;form&lt;/code&gt; in the context, &lt;code&gt;{{ form }}&lt;/code&gt; will render its &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements appropriately.</source>
          <target state="translated">将表单放入模板所需要做的就是将表单实例放入模板上下文中。因此，如果您的表单在上下文中称为 &lt;code&gt;form&lt;/code&gt; ，则 &lt;code&gt;{{ form }}&lt;/code&gt; 将适当地呈现其 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="42b60e0ae235388663637de3e921a7ed4445dd82" translate="yes" xml:space="preserve">
          <source>Allow certain users to connect to a WebDAV share created with &lt;a href=&quot;https://httpd.apache.org/docs/2.2/mod/mod_dav.html&quot;&gt;mod_dav&lt;/a&gt;.</source>
          <target state="translated">允许某些用户连接到使用&lt;a href=&quot;https://httpd.apache.org/docs/2.2/mod/mod_dav.html&quot;&gt;mod_dav&lt;/a&gt;创建的WebDAV共享。</target>
        </trans-unit>
        <trans-unit id="190d3b06294b0737593e33b2a763d1fcd1eea641" translate="yes" xml:space="preserve">
          <source>Allow the &lt;a href=&quot;templates/api#django.template.context_processors.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt; context processor to add some variables to the template context.</source>
          <target state="translated">允许&lt;a href=&quot;templates/api#django.template.context_processors.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;上下文处理器将一些变量添加到模板上下文中。</target>
        </trans-unit>
        <trans-unit id="66b7cc1827e806b544424c0ff618a3255503780d" translate="yes" xml:space="preserve">
          <source>Allow users to create, update, and delete objects &amp;ndash; with or without authorization.</source>
          <target state="translated">允许用户创建，更新和删除对象（无论有无授权）。</target>
        </trans-unit>
        <trans-unit id="71a13e3c339e6985292477c95ec07f081b0e242e" translate="yes" xml:space="preserve">
          <source>Allowed HTTP methods</source>
          <target state="translated">允许的HTTP方法</target>
        </trans-unit>
        <trans-unit id="ec83abe710d81428cfbbb0caa76901503f7932b0" translate="yes" xml:space="preserve">
          <source>Allows Django to skip an app&amp;rsquo;s initial migration if all database tables with the names of all models created by all &lt;a href=&quot;migration-operations#django.db.migrations.operations.CreateModel&quot;&gt;&lt;code&gt;CreateModel&lt;/code&gt;&lt;/a&gt; operations in that migration already exist. This option is intended for use when first running migrations against a database that preexisted the use of migrations. This option does not, however, check for matching database schema beyond matching table names and so is only safe to use if you are confident that your existing schema matches what is recorded in your initial migration.</source>
          <target state="translated">如果使用该迁移中所有&lt;a href=&quot;migration-operations#django.db.migrations.operations.CreateModel&quot;&gt; &lt;code&gt;CreateModel&lt;/code&gt; &lt;/a&gt;操作创建的所有模型的所有数据库表均已存在，则允许Django跳过应用程序的初始迁移。此选项适用于首次针对已预先使用迁移的数据库运行迁移时使用。但是，此选项不会检查匹配表名之外的匹配数据库架构，因此只有在确信现有架构与初始迁移中记录的内容相匹配时，才可以安全使用。</target>
        </trans-unit>
        <trans-unit id="8f1aa13a48b42ff100decd5fc5ded1a58aa81a1a" translate="yes" xml:space="preserve">
          <source>Allows a user to change their password.</source>
          <target state="translated">允许用户更改密码。</target>
        </trans-unit>
        <trans-unit id="b6c4b72fea14639d13b981ac1ddbff185022a039" translate="yes" xml:space="preserve">
          <source>Allows a user to reset their password by generating a one-time use link that can be used to reset the password, and sending that link to the user&amp;rsquo;s registered email address.</source>
          <target state="translated">允许用户通过生成可用于重置密码的一次性使用链接并将该链接发送到用户的注册电子邮件地址来重置其密码。</target>
        </trans-unit>
        <trans-unit id="9b5db4acef816cc020ffda17473160d626d24626" translate="yes" xml:space="preserve">
          <source>Allows changing a user&amp;rsquo;s password. It prompts you to enter a new password twice for the given user. If the entries are identical, this immediately becomes the new password. If you do not supply a user, the command will attempt to change the password whose username matches the current user.</source>
          <target state="translated">允许更改用户密码。它提示您输入两次给定用户的新密码。如果条目相同，则立即成为新密码。如果不提供用户，该命令将尝试更改用户名与当前用户匹配的密码。</target>
        </trans-unit>
        <trans-unit id="945c742eac538b55929d9c2519561e805d8de9f1" translate="yes" xml:space="preserve">
          <source>Allows creating tables for apps without migrations. While this isn&amp;rsquo;t recommended, the migrations framework is sometimes too slow on large projects with hundreds of models.</source>
          <target state="translated">允许为应用创建表格，而无需迁移。尽管不建议这样做，但是在具有数百个模型的大型项目上，迁移框架有时太慢。</target>
        </trans-unit>
        <trans-unit id="775e744db0d361ad243681079679c9dfe7619701" translate="yes" xml:space="preserve">
          <source>Allows naming the generated migration(s) instead of using a generated name. The name must be a valid Python &lt;a href=&quot;https://docs.python.org/3/reference/lexical_analysis.html#identifiers&quot;&gt;identifier&lt;/a&gt;.</source>
          <target state="translated">允许命名生成的迁移，而不使用生成的名称。该名称必须是有效的Python &lt;a href=&quot;https://docs.python.org/3/reference/lexical_analysis.html#identifiers&quot;&gt;标识符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c5d7a1ae635e28e0843f83610edbf2c00760416" translate="yes" xml:space="preserve">
          <source>Allows running of arbitrary SQL on the database - useful for more advanced features of database backends that Django doesn&amp;rsquo;t support directly, like partial indexes.</source>
          <target state="translated">允许在数据库上运行任意SQL-对于Django不直接支持的数据库后端的更高级功能（例如部分索引）很有用。</target>
        </trans-unit>
        <trans-unit id="b02cf5fa9d1c920264f9951fc16d8a6144d1a292" translate="yes" xml:space="preserve">
          <source>Allows running of arbitrary SQL on the database - useful for more advanced features of database backends that Django doesn&amp;rsquo;t support directly.</source>
          <target state="translated">允许在数据库上运行任意SQL-对于Django不直接支持的数据库后端的更高级功能很有用。</target>
        </trans-unit>
        <trans-unit id="b3fc80d31ea31c921a37c65daf34995b592e35ee" translate="yes" xml:space="preserve">
          <source>Allows the handler to completely override the parsing of the raw HTTP input.</source>
          <target state="translated">允许处理程序完全覆盖原始HTTP输入的解析。</target>
        </trans-unit>
        <trans-unit id="eccb9b87175b88b821a7bc4e489d2465a78cb3b9" translate="yes" xml:space="preserve">
          <source>Allows the selection of a single model object, suitable for representing a foreign key. Note that the default widget for &lt;code&gt;ModelChoiceField&lt;/code&gt; becomes impractical when the number of entries increases. You should avoid using it for more than 100 items.</source>
          <target state="translated">允许选择单个模型对象，适合于表示外键。请注意，当条目数增加时，用于 &lt;code&gt;ModelChoiceField&lt;/code&gt; 的默认小部件将变得不切实际。您应该避免将其用于100多个项目。</target>
        </trans-unit>
        <trans-unit id="29acfb43849ab9b0daf20cd41edafb3f9243b2d6" translate="yes" xml:space="preserve">
          <source>Allows the selection of one or more model objects, suitable for representing a many-to-many relation. As with &lt;a href=&quot;#django.forms.ModelChoiceField&quot;&gt;&lt;code&gt;ModelChoiceField&lt;/code&gt;&lt;/a&gt;, you can use &lt;code&gt;label_from_instance&lt;/code&gt; to customize the object representations.</source>
          <target state="translated">允许选择一个或多个模型对象，适合于表示多对多关系。与&lt;a href=&quot;#django.forms.ModelChoiceField&quot;&gt; &lt;code&gt;ModelChoiceField&lt;/code&gt; 一样&lt;/a&gt;，您可以使用 &lt;code&gt;label_from_instance&lt;/code&gt; 来自定义对象表示。</target>
        </trans-unit>
        <trans-unit id="cc224d0743f2b3f1729cd3289e77a06a12ab78e8" translate="yes" xml:space="preserve">
          <source>Along with another app &lt;code&gt;rare/models.py&lt;/code&gt;:</source>
          <target state="translated">连同另一个应用程序 &lt;code&gt;rare/models.py&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="74c6032e98af391fe7bf85d75bccec29ac396723" translate="yes" xml:space="preserve">
          <source>Also as a convenience, the &lt;code&gt;ModelAdmin&lt;/code&gt; object is passed to the &lt;code&gt;lookups&lt;/code&gt; method, for example if you want to base the lookups on the available data:</source>
          <target state="translated">另外，为了方便起见， &lt;code&gt;ModelAdmin&lt;/code&gt; 对象传递给 &lt;code&gt;lookups&lt;/code&gt; 方法，例如，如果您要基于可用数据查找：</target>
        </trans-unit>
        <trans-unit id="dccc91e2b5b7283cd7d78d2ca5a8c6c83cdc4461" translate="yes" xml:space="preserve">
          <source>Also consider what you want to happen when the migration is unapplied. You could either do nothing (as in the example above) or remove some or all of the data from the new application. Adjust the second argument of the &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt; operation accordingly.</source>
          <target state="translated">还请考虑在不应用迁移时要发生的情况。您可以不执行任何操作（如上例所示），也可以从新应用程序中删除部分或全部数据。相应地调整&lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt;操作的第二个参数。</target>
        </trans-unit>
        <trans-unit id="079db1f37aab1427fb72df3b03673a8a53beed4e" translate="yes" xml:space="preserve">
          <source>Also make sure that the database user provided in &lt;code&gt;mysite/settings.py&lt;/code&gt; has &amp;ldquo;create database&amp;rdquo; privileges. This allows automatic creation of a &lt;a href=&quot;../topics/testing/overview#the-test-database&quot;&gt;test database&lt;/a&gt; which will be needed in a later tutorial.</source>
          <target state="translated">另外，请确保 &lt;code&gt;mysite/settings.py&lt;/code&gt; 中提供的数据库用户具有&amp;ldquo;创建数据库&amp;rdquo;特权。这样可以自动创建&lt;a href=&quot;../topics/testing/overview#the-test-database&quot;&gt;测试数据库&lt;/a&gt;，这在以后的教程中将需要。</target>
        </trans-unit>
        <trans-unit id="430d3e806bb33f656af3862b5015413135ec86e7" translate="yes" xml:space="preserve">
          <source>Also make sure you&amp;rsquo;ve correctly set &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt;&lt;code&gt;SITE_ID&lt;/code&gt;&lt;/a&gt; to the ID of the site the settings file represents. This will usually be &lt;code&gt;1&lt;/code&gt; (i.e. &lt;code&gt;SITE_ID = 1&lt;/code&gt;, but if you&amp;rsquo;re using the sites framework to manage multiple sites, it could be the ID of a different site.</source>
          <target state="translated">另外，请确保已将&lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt; &lt;code&gt;SITE_ID&lt;/code&gt; &lt;/a&gt;正确设置为设置文件代表的站点的ID。通常为 &lt;code&gt;1&lt;/code&gt; （即 &lt;code&gt;SITE_ID = 1&lt;/code&gt; ，但是如果您使用站点框架来管理多个站点，则它可能是另一个站点的ID。</target>
        </trans-unit>
        <trans-unit id="c8b0b0c45501b28f9ae6548c508388d04ebd9a13" translate="yes" xml:space="preserve">
          <source>Also note that &lt;code&gt;initial&lt;/code&gt; values are &lt;em&gt;not&lt;/em&gt; used as &amp;ldquo;fallback&amp;rdquo; data in validation if a particular field&amp;rsquo;s value is not given. &lt;code&gt;initial&lt;/code&gt; values are &lt;em&gt;only&lt;/em&gt; intended for initial form display:</source>
          <target state="translated">另请注意，如果未提供特定字段的值，则 &lt;code&gt;initial&lt;/code&gt; 值在验证中&lt;em&gt;不会&lt;/em&gt;用作&amp;ldquo;后备&amp;rdquo;数据。 &lt;code&gt;initial&lt;/code&gt; 值&lt;em&gt;仅&lt;/em&gt;用于初始表单显示：</target>
        </trans-unit>
        <trans-unit id="be520e4bab7c72fb552c6243756860e284bb3687" translate="yes" xml:space="preserve">
          <source>Also note that &lt;code&gt;items()&lt;/code&gt; also follows the same algorithm &amp;ndash; first, it tries &lt;code&gt;items(obj)&lt;/code&gt;, then &lt;code&gt;items()&lt;/code&gt;, then finally an &lt;code&gt;items&lt;/code&gt; class attribute (which should be a list).</source>
          <target state="translated">还要注意， &lt;code&gt;items()&lt;/code&gt; 也遵循相同的算法&amp;ndash;首先，它尝试 &lt;code&gt;items(obj)&lt;/code&gt; ，然后是 &lt;code&gt;items()&lt;/code&gt; ，最后是一个 &lt;code&gt;items&lt;/code&gt; 类属性（应该是一个列表）。</target>
        </trans-unit>
        <trans-unit id="ddd7d3643d00b0897475d780a3c9e83ac347bcfc" translate="yes" xml:space="preserve">
          <source>Also note that Django expects the &lt;code&gt;&quot;%s&quot;&lt;/code&gt; placeholder, &lt;em&gt;not&lt;/em&gt; the &lt;code&gt;&quot;?&quot;&lt;/code&gt; placeholder, which is used by the SQLite Python bindings. This is for the sake of consistency and sanity.</source>
          <target state="translated">还要注意的是Django的预计， &lt;code&gt;&quot;%s&quot;&lt;/code&gt; 占位符，&lt;em&gt;不是&lt;/em&gt;的 &lt;code&gt;&quot;?&quot;&lt;/code&gt; 占位符，由SQLite Python绑定使用。这是为了保持一致性和理智。</target>
        </trans-unit>
        <trans-unit id="e2634049a3f74c53b08c8960283181a1d277b605" translate="yes" xml:space="preserve">
          <source>Also note that GeoDjango provides a &lt;a href=&quot;../ref/contrib/gis/serializers&quot;&gt;customized GeoJSON serializer&lt;/a&gt;.</source>
          <target state="translated">另请注意，GeoDjango提供了&lt;a href=&quot;../ref/contrib/gis/serializers&quot;&gt;自定义的GeoJSON序列化程序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09c5f604de33bd5f14c0e2b803d418d64e00922c" translate="yes" xml:space="preserve">
          <source>Also note that by the time you reach this step, individual model instances have already been created for each &lt;code&gt;Form&lt;/code&gt;. Modifying a value in &lt;code&gt;form.cleaned_data&lt;/code&gt; is not sufficient to affect the saved value. If you wish to modify a value in &lt;code&gt;ModelFormSet.clean()&lt;/code&gt; you must modify &lt;code&gt;form.instance&lt;/code&gt;:</source>
          <target state="translated">还要注意，当您到达此步骤时，已经为每个 &lt;code&gt;Form&lt;/code&gt; 创建了单独的模型实例。修改 &lt;code&gt;form.cleaned_data&lt;/code&gt; 中的值不足以影响保存的值。如果要修改 &lt;code&gt;ModelFormSet.clean()&lt;/code&gt; 中的值，则必须修改 &lt;code&gt;form.instance&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0b6f701f2b5f4527d2271459ed75e2410e4d7a1b" translate="yes" xml:space="preserve">
          <source>Also note that even an uploaded HTML file, since it can be executed by the browser (though not by the server), can pose security threats that are equivalent to XSS or CSRF attacks.</source>
          <target state="translated">另外要注意的是,即使是上传的HTML文件,由于可以被浏览器执行(虽然不能被服务器执行),也会造成相当于XSS或CSRF攻击的安全威胁。</target>
        </trans-unit>
        <trans-unit id="1f8ddc74def1b0eb285056b958bc6feae34a8858" translate="yes" xml:space="preserve">
          <source>Also note that even though slicing an unevaluated &lt;code&gt;QuerySet&lt;/code&gt; returns another unevaluated &lt;code&gt;QuerySet&lt;/code&gt;, modifying it further (e.g., adding more filters, or modifying ordering) is not allowed, since that does not translate well into SQL and it would not have a clear meaning either.</source>
          <target state="translated">还要注意，即使切片未评估的 &lt;code&gt;QuerySet&lt;/code&gt; 会返回另一个未评估的 &lt;code&gt;QuerySet&lt;/code&gt; ，也不允许对其进行进一步修改（例如，添加更多过滤器或修改顺序），因为这样做不能很好地转换为SQL，也没有明确的含义。</target>
        </trans-unit>
        <trans-unit id="eb1d889432b542300870c076033a0c500c3f32c9" translate="yes" xml:space="preserve">
          <source>Also note that there are special considerations when overriding the &lt;code&gt;clean()&lt;/code&gt; method of a &lt;code&gt;ModelForm&lt;/code&gt; subclass. (see the &lt;a href=&quot;../../topics/forms/modelforms#overriding-modelform-clean-method&quot;&gt;ModelForm documentation&lt;/a&gt; for more information)</source>
          <target state="translated">还要注意，在重写 &lt;code&gt;ModelForm&lt;/code&gt; 子类的 &lt;code&gt;clean()&lt;/code&gt; 方法时，有一些特殊注意事项。（有关更多信息，请参见&lt;a href=&quot;../../topics/forms/modelforms#overriding-modelform-clean-method&quot;&gt;ModelForm文档&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="b337869beeb43597783a966bea73e9d052f4736d" translate="yes" xml:space="preserve">
          <source>Also note that your code should &lt;em&gt;not&lt;/em&gt; import from either &lt;code&gt;global_settings&lt;/code&gt; or your own settings file. &lt;code&gt;django.conf.settings&lt;/code&gt; abstracts the concepts of default settings and site-specific settings; it presents a single interface. It also decouples the code that uses settings from the location of your settings.</source>
          <target state="translated">还要注意的是你的代码应该&lt;em&gt;不是&lt;/em&gt;无论从导入 &lt;code&gt;global_settings&lt;/code&gt; 或你自己的设置文件。 &lt;code&gt;django.conf.settings&lt;/code&gt; 抽象了默认设置和站点特定设置的概念；它提供了一个界面。它还将使用设置的代码与设置的位置解耦。</target>
        </trans-unit>
        <trans-unit id="8b29efb6291c296b502920b310ea73c4228fffac" translate="yes" xml:space="preserve">
          <source>Also note the &amp;ldquo;Add Another&amp;rdquo; link next to &amp;ldquo;Question.&amp;rdquo; Every object with a &lt;code&gt;ForeignKey&lt;/code&gt; relationship to another gets this for free. When you click &amp;ldquo;Add Another&amp;rdquo;, you&amp;rsquo;ll get a popup window with the &amp;ldquo;Add question&amp;rdquo; form. If you add a question in that window and click &amp;ldquo;Save&amp;rdquo;, Django will save the question to the database and dynamically add it as the selected choice on the &amp;ldquo;Add choice&amp;rdquo; form you&amp;rsquo;re looking at.</source>
          <target state="translated">另外请注意&amp;ldquo;问题&amp;rdquo;旁边的&amp;ldquo;添加其他&amp;rdquo;链接。每个具有 &lt;code&gt;ForeignKey&lt;/code&gt; 关系的对象都可以免费获得。当您单击&amp;ldquo;添加另一个&amp;rdquo;时，将出现一个带有&amp;ldquo;添加问题&amp;rdquo;表单的弹出窗口。如果您在该窗口中添加问题并单击&amp;ldquo;保存&amp;rdquo;，则Django会将问题保存到数据库中，并将其动态添加为您要查看的&amp;ldquo;添加选择&amp;rdquo;表单上的选定选项。</target>
        </trans-unit>
        <trans-unit id="bf024fe79e32a8702c4c93dfb2506ad81ad9987b" translate="yes" xml:space="preserve">
          <source>Also note: if you want a user account to be able to create users using the Django admin site, you&amp;rsquo;ll need to give them permission to add users &lt;em&gt;and&lt;/em&gt; change users (i.e., the &amp;ldquo;Add user&amp;rdquo; and &amp;ldquo;Change user&amp;rdquo; permissions). If an account has permission to add users but not to change them, that account won&amp;rsquo;t be able to add users. Why? Because if you have permission to add users, you have the power to create superusers, which can then, in turn, change other users. So Django requires add &lt;em&gt;and&lt;/em&gt; change permissions as a slight security measure.</source>
          <target state="translated">另请注意：如果您希望用户帐户能够使用Django管理网站创建用户，则需要授予他们添加用户&lt;em&gt;和&lt;/em&gt;更改用户的权限（即&amp;ldquo;添加用户&amp;rdquo;和&amp;ldquo;更改用户&amp;rdquo;权限） 。如果某个帐户有权添加用户但不能更改用户，则该帐户将无法添加用户。为什么？因为如果您有权添加用户，则可以创建超级用户，然后可以依次更改其他用户。因此Django要求添加&lt;em&gt;和&lt;/em&gt;更改权限是一项轻微的安全措施。</target>
        </trans-unit>
        <trans-unit id="696e086368362c2d09106b35b57c47867e028a93" translate="yes" xml:space="preserve">
          <source>Also notice that this isn&amp;rsquo;t a very elegant way of doing publisher-specific books. If we want to add another publisher page, we&amp;rsquo;d need another handful of lines in the URLconf, and more than a few publishers would get unreasonable. We&amp;rsquo;ll deal with this problem in the next section.</source>
          <target state="translated">还要注意，这不是制作出版商特定书籍的一种非常优雅的方法。如果我们要添加另一个发布者页面，则需要在URLconf中再加上几行，并且不止几个发布者会变得不合理。我们将在下一部分中解决这个问题。</target>
        </trans-unit>
        <trans-unit id="274f94a8731614b29d48ec0b7318f1b3988943f8" translate="yes" xml:space="preserve">
          <source>Also takes &lt;code&gt;max_length&lt;/code&gt;, &lt;code&gt;min_length&lt;/code&gt;, &lt;code&gt;strip&lt;/code&gt;, and &lt;code&gt;empty_value&lt;/code&gt; which work just as they do for &lt;a href=&quot;#django.forms.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">还采用 &lt;code&gt;max_length&lt;/code&gt; ， &lt;code&gt;min_length&lt;/code&gt; ， &lt;code&gt;strip&lt;/code&gt; 和 &lt;code&gt;empty_value&lt;/code&gt; ，它们的作用与对&lt;a href=&quot;#django.forms.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; 的作用相同&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b9b4efe342a799ea29ae37efd1b65b2539fe6c99" translate="yes" xml:space="preserve">
          <source>Also takes &lt;code&gt;max_length&lt;/code&gt;, &lt;code&gt;min_length&lt;/code&gt;, and &lt;code&gt;strip&lt;/code&gt;, which work just as they do for &lt;a href=&quot;#django.forms.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">还需要 &lt;code&gt;max_length&lt;/code&gt; ， &lt;code&gt;min_length&lt;/code&gt; 和 &lt;code&gt;strip&lt;/code&gt; ，它们的工作方式与&lt;a href=&quot;#django.forms.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; 相同&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="43d3f0dec8708afadcd4301e960c1f9ba74f008b" translate="yes" xml:space="preserve">
          <source>Also takes some optional arguments:</source>
          <target state="translated">还需要一些可选的参数。</target>
        </trans-unit>
        <trans-unit id="41e4d1d7bc570080f714dde302cfe63771621c32" translate="yes" xml:space="preserve">
          <source>Also this helper function only serves the actual &lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt; folder; it doesn&amp;rsquo;t perform static files discovery like &lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt;&lt;code&gt;django.contrib.staticfiles&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另外，此帮助程序功能仅提供实际的&lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt; &lt;code&gt;STATIC_ROOT&lt;/code&gt; &lt;/a&gt;文件夹；它不执行像&lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt; &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; &lt;/a&gt;这样的静态文件发现。</target>
        </trans-unit>
        <trans-unit id="953ccdb4013747658e82aad06c56f0c154c9caf2" translate="yes" xml:space="preserve">
          <source>Also, &lt;code&gt;extra=0&lt;/code&gt; doesn&amp;rsquo;t prevent creation of new model instances as you can &lt;a href=&quot;formsets#understanding-the-managementform&quot;&gt;add additional forms with JavaScript&lt;/a&gt; or send additional POST data. Formsets &lt;a href=&quot;https://code.djangoproject.com/ticket/26142&quot;&gt;don&amp;rsquo;t yet provide functionality&lt;/a&gt; for an &amp;ldquo;edit only&amp;rdquo; view that prevents creation of new instances.</source>
          <target state="translated">另外， &lt;code&gt;extra=0&lt;/code&gt; 不会阻止创建新的模型实例，因为您可以&lt;a href=&quot;formsets#understanding-the-managementform&quot;&gt;使用JavaScript添加其他表单&lt;/a&gt;或发送其他POST数据。表单集&lt;a href=&quot;https://code.djangoproject.com/ticket/26142&quot;&gt;尚未提供&lt;/a&gt; &amp;ldquo;纯编辑&amp;rdquo;视图的功能，该功能会阻止创建新实例。</target>
        </trans-unit>
        <trans-unit id="a2bd6e68e9d37a21829d8762c978cf7a2c012cf0" translate="yes" xml:space="preserve">
          <source>Also, &lt;code&gt;request.POST&lt;/code&gt; is accessed by &lt;a href=&quot;../../ref/middleware#django.middleware.csrf.CsrfViewMiddleware&quot;&gt;&lt;code&gt;CsrfViewMiddleware&lt;/code&gt;&lt;/a&gt; which is enabled by default. This means you will need to use &lt;a href=&quot;../../ref/csrf#django.views.decorators.csrf.csrf_exempt&quot;&gt;&lt;code&gt;csrf_exempt()&lt;/code&gt;&lt;/a&gt; on your view to allow you to change the upload handlers. You will then need to use &lt;a href=&quot;../../ref/csrf#django.views.decorators.csrf.csrf_protect&quot;&gt;&lt;code&gt;csrf_protect()&lt;/code&gt;&lt;/a&gt; on the function that actually processes the request. Note that this means that the handlers may start receiving the file upload before the CSRF checks have been done. Example code:</source>
          <target state="translated">此外，&lt;a href=&quot;../../ref/middleware#django.middleware.csrf.CsrfViewMiddleware&quot;&gt; &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; &lt;/a&gt;会访问 &lt;code&gt;request.POST&lt;/code&gt; ，该软件默认情况下处于启用状态。这意味着您将需要在视图上使用&lt;a href=&quot;../../ref/csrf#django.views.decorators.csrf.csrf_exempt&quot;&gt; &lt;code&gt;csrf_exempt()&lt;/code&gt; &lt;/a&gt;来更改上传处理程序。然后，您将需要在实际处理请求的函数上使用&lt;a href=&quot;../../ref/csrf#django.views.decorators.csrf.csrf_protect&quot;&gt; &lt;code&gt;csrf_protect()&lt;/code&gt; &lt;/a&gt;。请注意，这意味着处理程序可能会在CSRF检查完成之前开始接收文件上传。示例代码：</target>
        </trans-unit>
        <trans-unit id="92a75a0b0baf789cfb6ccc150f550b1442b059a0" translate="yes" xml:space="preserve">
          <source>Also, if you call the database-altering methods &lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager.remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager.clear&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager.set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt;, on &lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager&quot;&gt;&lt;code&gt;related managers&lt;/code&gt;&lt;/a&gt;, any prefetched cache for the relation will be cleared.</source>
          <target state="translated">另外，如果在&lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager&quot;&gt; &lt;code&gt;related managers&lt;/code&gt; &lt;/a&gt;上调用数据库更改方法&lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager.add&quot;&gt; &lt;code&gt;add()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager.remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager.clear&quot;&gt; &lt;code&gt;clear()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager.set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;，则将清除该关系的任何预取缓存。</target>
        </trans-unit>
        <trans-unit id="698ca776869738d41eaf7a155f51f0e5da884fdc" translate="yes" xml:space="preserve">
          <source>Also, if your search fields include fields that aren&amp;rsquo;t indexed by the database, you might encounter poor performance on extremely large tables.</source>
          <target state="translated">另外，如果您的搜索字段包括数据库未索引的字段，则在超大表上可能会遇到性能不佳的情况。</target>
        </trans-unit>
        <trans-unit id="0825e6acbf0d587052cfc960fc478bc68675d460" translate="yes" xml:space="preserve">
          <source>Also, if your template tag creates a new context for performing some sub-rendering, set the auto-escape attribute to the current context&amp;rsquo;s value. The &lt;code&gt;__init__&lt;/code&gt; method for the &lt;code&gt;Context&lt;/code&gt; class takes a parameter called &lt;code&gt;autoescape&lt;/code&gt; that you can use for this purpose. For example:</source>
          <target state="translated">另外，如果您的模板标记创建了用于执行某些子渲染的新上下文，请将auto-escape属性设置为当前上下文的值。 &lt;code&gt;Context&lt;/code&gt; 类的 &lt;code&gt;__init__&lt;/code&gt; 方法使用一个名为 &lt;code&gt;autoescape&lt;/code&gt; 的参数，您可以将其用于此目的。例如：</target>
        </trans-unit>
        <trans-unit id="92abe54f4e4095755881b3d83e2ca157117e1f06" translate="yes" xml:space="preserve">
          <source>Also, it&amp;rsquo;s an error to call &lt;code&gt;configure()&lt;/code&gt; more than once, or to call &lt;code&gt;configure()&lt;/code&gt; after any setting has been accessed.</source>
          <target state="translated">此外，这是一个错误的呼叫 &lt;code&gt;configure()&lt;/code&gt; 不止一次，或调用 &lt;code&gt;configure()&lt;/code&gt; 的任何设置已经被浏览之后。</target>
        </trans-unit>
        <trans-unit id="de338795c2b16c294f7a41b095d17ca5ed1c7c66" translate="yes" xml:space="preserve">
          <source>Also, note that &lt;code&gt;reverse()&lt;/code&gt; should generally only be called on a &lt;code&gt;QuerySet&lt;/code&gt; which has a defined ordering (e.g., when querying against a model which defines a default ordering, or when using &lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt;). If no such ordering is defined for a given &lt;code&gt;QuerySet&lt;/code&gt;, calling &lt;code&gt;reverse()&lt;/code&gt; on it has no real effect (the ordering was undefined prior to calling &lt;code&gt;reverse()&lt;/code&gt;, and will remain undefined afterward).</source>
          <target state="translated">另外，请注意，通常只应在具有定义顺序的 &lt;code&gt;QuerySet&lt;/code&gt; 上调用 &lt;code&gt;reverse()&lt;/code&gt; （例如，在查询定义了默认顺序的模型时，或在使用&lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt; &lt;code&gt;order_by()&lt;/code&gt; 时&lt;/a&gt;）。如果没有为给定的 &lt;code&gt;QuerySet&lt;/code&gt; 定义这种顺序，则对其调用 &lt;code&gt;reverse()&lt;/code&gt; 不会产生实际效果（该顺序在调用 &lt;code&gt;reverse()&lt;/code&gt; 之前是未定义的，之后将保持未定义）。</target>
        </trans-unit>
        <trans-unit id="6564a059141b793de7c4015d115111e5700aa878" translate="yes" xml:space="preserve">
          <source>Also, note the &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting at the top of the file. That holds the names of all Django applications that are activated in this Django instance. Apps can be used in multiple projects, and you can package and distribute them for use by others in their projects.</source>
          <target state="translated">另外，请注意文件顶部的&lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置。该名称包含在此Django实例中激活的所有Django应用程序的名称。应用程序可以在多个项目中使用，并且您可以打包和分发它们以供其他人在其项目中使用。</target>
        </trans-unit>
        <trans-unit id="32fad38c70d331f28b8993769e786f5f8acf6480" translate="yes" xml:space="preserve">
          <source>Also, register the model in the app&amp;rsquo;s &lt;code&gt;admin.py&lt;/code&gt;:</source>
          <target state="translated">另外，在应用程序的 &lt;code&gt;admin.py&lt;/code&gt; 中注册模型：</target>
        </trans-unit>
        <trans-unit id="47fd7628205150d42e8bf244b355fc6770d7aa52" translate="yes" xml:space="preserve">
          <source>Also, use of &lt;code&gt;iterator()&lt;/code&gt; causes previous &lt;code&gt;prefetch_related()&lt;/code&gt; calls to be ignored since these two optimizations do not make sense together.</source>
          <target state="translated">同样，使用 &lt;code&gt;iterator()&lt;/code&gt; 会导致先前的 &lt;code&gt;prefetch_related()&lt;/code&gt; 调用被忽略，因为这两个优化不能同时使用。</target>
        </trans-unit>
        <trans-unit id="c24b47c5852869dcfdc94dc268593f79c8801929" translate="yes" xml:space="preserve">
          <source>Also, you can easily &lt;a href=&quot;../../howto/custom-model-fields&quot;&gt;write your own custom model fields&lt;/a&gt;.</source>
          <target state="translated">此外，您可以轻松&lt;a href=&quot;../../howto/custom-model-fields&quot;&gt;编写自己的自定义模型字段&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fe2f959782b3ac938753e3a5cc6f8e44788d56e9" translate="yes" xml:space="preserve">
          <source>Also, you can give &lt;a href=&quot;#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt; a list of additional processors, using the optional, third positional argument, &lt;code&gt;processors&lt;/code&gt;. In this example, the &lt;a href=&quot;#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt; instance gets an &lt;code&gt;ip_address&lt;/code&gt; variable:</source>
          <target state="translated">同样，您可以使用可选的第三个位置参数 &lt;code&gt;processors&lt;/code&gt; 为&lt;a href=&quot;#django.template.RequestContext&quot;&gt; &lt;code&gt;RequestContext&lt;/code&gt; &lt;/a&gt;列出其他处理器。在此示例中，&lt;a href=&quot;#django.template.RequestContext&quot;&gt; &lt;code&gt;RequestContext&lt;/code&gt; &lt;/a&gt;实例获取一个 &lt;code&gt;ip_address&lt;/code&gt; 变量：</target>
        </trans-unit>
        <trans-unit id="d068b3f2fe4f8285a438bec72113e6d9cc12d56b" translate="yes" xml:space="preserve">
          <source>Altering settings at runtime</source>
          <target state="translated">在运行时更改设置</target>
        </trans-unit>
        <trans-unit id="71a869542b89c60e80814055a00906889f48491c" translate="yes" xml:space="preserve">
          <source>Alternative software implementations</source>
          <target state="translated">替代软件的实施</target>
        </trans-unit>
        <trans-unit id="6e522f9a7cffe2ed0c63f89a3004cfe45ca65f35" translate="yes" xml:space="preserve">
          <source>Alternative template systems vary in the extent to which they share Django&amp;rsquo;s templating language.</source>
          <target state="translated">替代模板系统在共享Django模板语言的程度上有所不同。</target>
        </trans-unit>
        <trans-unit id="33dcb6032eefd2804d531b416d323ccba2ea1014" translate="yes" xml:space="preserve">
          <source>Alternatively it is possible to register the inclusion tag using a &lt;a href=&quot;../ref/templates/api#django.template.Template&quot;&gt;&lt;code&gt;django.template.Template&lt;/code&gt;&lt;/a&gt; instance:</source>
          <target state="translated">另外，也可以使用&lt;a href=&quot;../ref/templates/api#django.template.Template&quot;&gt; &lt;code&gt;django.template.Template&lt;/code&gt; &lt;/a&gt;实例注册包含标签：</target>
        </trans-unit>
        <trans-unit id="a7cdd84aa7f928d9cff82ebbc61a89788dc1bc59" translate="yes" xml:space="preserve">
          <source>Alternatively you can use plain text and &lt;a href=&quot;../utils#django.utils.html.escape&quot;&gt;&lt;code&gt;django.utils.html.escape()&lt;/code&gt;&lt;/a&gt; to escape any HTML special characters. Ensure that you escape any help text that may come from untrusted users to avoid a cross-site scripting attack.</source>
          <target state="translated">或者，您可以使用纯文本和&lt;a href=&quot;../utils#django.utils.html.escape&quot;&gt; &lt;code&gt;django.utils.html.escape()&lt;/code&gt; &lt;/a&gt;来转义任何HTML特殊字符。确保避免转义来自不受信任用户的任何帮助文本，以避免跨站点脚本攻击。</target>
        </trans-unit>
        <trans-unit id="2624e15c47d1ca23eaf50d436bb985d27e5220ab" translate="yes" xml:space="preserve">
          <source>Alternatively, it would still be less work than the above approach to have a separate view for processing the form, which could use &lt;a href=&quot;../../ref/class-based-views/generic-editing#django.views.generic.edit.FormView&quot;&gt;&lt;code&gt;FormView&lt;/code&gt;&lt;/a&gt; distinct from &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#DetailView&quot;&gt;&lt;code&gt;DetailView&lt;/code&gt;&lt;/a&gt; without concerns.</source>
          <target state="translated">或者，与上面的方法相比，拥有一个单独的视图来处理表单的工作仍然要少得多，因为可以使用&lt;a href=&quot;../../ref/class-based-views/generic-editing#django.views.generic.edit.FormView&quot;&gt; &lt;code&gt;FormView&lt;/code&gt; &lt;/a&gt;不同于&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#DetailView&quot;&gt; &lt;code&gt;DetailView&lt;/code&gt; ,&lt;/a&gt;而无需担心。</target>
        </trans-unit>
        <trans-unit id="bf935409335b0819ad31fff64ab28b7ddb6d2009" translate="yes" xml:space="preserve">
          <source>Alternatively, it would still be less work than the above approach to have a separate view for processing the form, which could use &lt;a href=&quot;../../ref/class-based-views/generic-editing#django.views.generic.edit.FormView&quot;&gt;&lt;code&gt;FormView&lt;/code&gt;&lt;/a&gt; distinct from &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#DetailView&quot;&gt;&lt;code&gt;DetailView&lt;/code&gt;&lt;/a&gt; without concerns.</source>
          <target state="translated">或者，与上面的方法相比，拥有一个单独的视图来处理表单的工作仍然要少得多，因为可以使用&lt;a href=&quot;../../ref/class-based-views/generic-editing#django.views.generic.edit.FormView&quot;&gt; &lt;code&gt;FormView&lt;/code&gt; &lt;/a&gt;不同于&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#DetailView&quot;&gt; &lt;code&gt;DetailView&lt;/code&gt; &lt;/a&gt;而无需担心。</target>
        </trans-unit>
        <trans-unit id="6ceea1051ad37e03b252c47ef8b593e57b8c022b" translate="yes" xml:space="preserve">
          <source>Alternatively, template tag modules can be registered through the &lt;code&gt;'libraries'&lt;/code&gt; argument to &lt;a href=&quot;../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt;. This is useful if you want to use a different label from the template tag module name when loading template tags. It also enables you to register tags without installing an application.</source>
          <target state="translated">另外，模板标记模块可以通过&lt;a href=&quot;../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;DjangoTemplates&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;'libraries'&lt;/code&gt; 参数进行注册。如果要在加载模板标签时使用与模板标签模块名称不同的标签，这将很有用。它还使您无需安装应用程序即可注册标签。</target>
        </trans-unit>
        <trans-unit id="ad074627882cec434ab6881802c7f64d46ab69ee" translate="yes" xml:space="preserve">
          <source>Alternatively, you can activate the &lt;a href=&quot;../../ref/templates/api#django.template.context_processors.tz&quot;&gt;&lt;code&gt;tz()&lt;/code&gt;&lt;/a&gt; context processor and use the &lt;code&gt;TIME_ZONE&lt;/code&gt; context variable.</source>
          <target state="translated">或者，您可以激活&lt;a href=&quot;../../ref/templates/api#django.template.context_processors.tz&quot;&gt; &lt;code&gt;tz()&lt;/code&gt; &lt;/a&gt;上下文处理器并使用 &lt;code&gt;TIME_ZONE&lt;/code&gt; 上下文变量。</target>
        </trans-unit>
        <trans-unit id="7d7e1d285de0e8c723c915766ec923e21dec62b3" translate="yes" xml:space="preserve">
          <source>Alternatively, you can create a subclass that sets &lt;code&gt;self.queryset&lt;/code&gt; in &lt;code&gt;__init__&lt;/code&gt;:</source>
          <target state="translated">另外，您可以创建一个在 &lt;code&gt;__init__&lt;/code&gt; 中设置 &lt;code&gt;self.queryset&lt;/code&gt; 的子类：</target>
        </trans-unit>
        <trans-unit id="b9aa58af8effd4d680ef6010538b711b78b68f52" translate="yes" xml:space="preserve">
          <source>Alternatively, you can map fields in the query to model fields using the &lt;code&gt;translations&lt;/code&gt; argument to &lt;code&gt;raw()&lt;/code&gt;. This is a dictionary mapping names of fields in the query to names of fields on the model. For example, the above query could also be written:</source>
          <target state="translated">或者，您可以使用 &lt;code&gt;raw()&lt;/code&gt; 的 &lt;code&gt;translations&lt;/code&gt; 参数将查询中的字段映射到模型字段。这是将查询中的字段名称映射到模型上的字段名称的字典。例如，上面的查询也可以写成：</target>
        </trans-unit>
        <trans-unit id="588bd3c0e8ac048379d18ae614bd814abd203833" translate="yes" xml:space="preserve">
          <source>Alternatively, you can pass &lt;code&gt;attach()&lt;/code&gt; three arguments: &lt;code&gt;filename&lt;/code&gt;, &lt;code&gt;content&lt;/code&gt; and &lt;code&gt;mimetype&lt;/code&gt;. &lt;code&gt;filename&lt;/code&gt; is the name of the file attachment as it will appear in the email, &lt;code&gt;content&lt;/code&gt; is the data that will be contained inside the attachment and &lt;code&gt;mimetype&lt;/code&gt; is the optional MIME type for the attachment. If you omit &lt;code&gt;mimetype&lt;/code&gt;, the MIME content type will be guessed from the filename of the attachment.</source>
          <target state="translated">或者，您可以传递 &lt;code&gt;attach()&lt;/code&gt; 三个参数： &lt;code&gt;filename&lt;/code&gt; ， &lt;code&gt;content&lt;/code&gt; 和 &lt;code&gt;mimetype&lt;/code&gt; 。 &lt;code&gt;filename&lt;/code&gt; 是将在电子邮件中显示的文件附件的名称， &lt;code&gt;content&lt;/code&gt; 是将包含在附件中的数据， &lt;code&gt;mimetype&lt;/code&gt; 是附件的可选MIME类型。如果省略 &lt;code&gt;mimetype&lt;/code&gt; ，将从附件的文件名中猜测MIME内容类型。</target>
        </trans-unit>
        <trans-unit id="56baacf75a7d1dd4e8e5a5ae7bb58b76cd961ea0" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use &lt;code&gt;save(commit=False)&lt;/code&gt; and manually set any extra required fields:</source>
          <target state="translated">另外，您可以使用 &lt;code&gt;save(commit=False)&lt;/code&gt; 并手动设置任何其他必填字段：</target>
        </trans-unit>
        <trans-unit id="85fbfeef40e52114cb18912e3180133fb64b164e" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use a &lt;a href=&quot;#django.dispatch.receiver&quot;&gt;&lt;code&gt;receiver()&lt;/code&gt;&lt;/a&gt; decorator:</source>
          <target state="translated">另外，您可以使用&lt;a href=&quot;#django.dispatch.receiver&quot;&gt; &lt;code&gt;receiver()&lt;/code&gt; &lt;/a&gt;装饰器：</target>
        </trans-unit>
        <trans-unit id="d2ab6c8b2d0a505ac8a240c953a735296c8dd0ef" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the &lt;a href=&quot;../topics/templates&quot;&gt;Django template system&lt;/a&gt; to generate CSV. This is lower-level than using the convenient Python &lt;a href=&quot;https://docs.python.org/3/library/csv.html#module-csv&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt; module, but the solution is presented here for completeness.</source>
          <target state="translated">另外，您可以使用&lt;a href=&quot;../topics/templates&quot;&gt;Django模板系统&lt;/a&gt;生成CSV。与使用便利的Python &lt;a href=&quot;https://docs.python.org/3/library/csv.html#module-csv&quot;&gt; &lt;code&gt;csv&lt;/code&gt; &lt;/a&gt;模块相比，此级别较低，但是此处出于完整性考虑提供了解决方案。</target>
        </trans-unit>
        <trans-unit id="27e398202050801cd681b4055b573026e175814f" translate="yes" xml:space="preserve">
          <source>Alternatively, you may alter an existing user&amp;rsquo;s role from the SQL shell (assuming this is done from an existing superuser account):</source>
          <target state="translated">或者，您可以从SQL Shell中更改现有用户的角色（假设这是通过现有的超级用户帐户完成的）：</target>
        </trans-unit>
        <trans-unit id="0abe152a51938c05079be6a7f31d395c658aeab4" translate="yes" xml:space="preserve">
          <source>Alternatively, you may have a complex Python object that can somehow be serialized to fit into a standard database column type. This is another case where a &lt;code&gt;Field&lt;/code&gt; subclass will help you use your object with your models.</source>
          <target state="translated">另外，您可能拥有一个复杂的Python对象，该对象可以以某种方式进行序列化以适合标准数据库列类型。这是 &lt;code&gt;Field&lt;/code&gt; 子类将帮助您在模型中使用对象的另一种情况。</target>
        </trans-unit>
        <trans-unit id="d22e73a36ee72142b9710c6f598b2fa17ad341ae" translate="yes" xml:space="preserve">
          <source>Alternatively, your filter code can manually take care of any necessary escaping. This is necessary when you&amp;rsquo;re introducing new HTML markup into the result. You want to mark the output as safe from further escaping so that your HTML markup isn&amp;rsquo;t escaped further, so you&amp;rsquo;ll need to handle the input yourself.</source>
          <target state="translated">另外，您的过滤器代码可以手动处理任何必要的转义。将新的HTML标记引入结果中时，这是必需的。您希望将输出标记为可以进一步转义为安全，以便您的HTML标记不会进一步转义，因此您需要自己处理输入。</target>
        </trans-unit>
        <trans-unit id="ea10ad892df4bcea34e41f944c0cec79f52baaf9" translate="yes" xml:space="preserve">
          <source>Alternatives to Django&amp;rsquo;s template language</source>
          <target state="translated">Django模板语言的替代品</target>
        </trans-unit>
        <trans-unit id="ae3e5f3db33e272b63b1b64732ee7fcd4f54eb4b" translate="yes" xml:space="preserve">
          <source>Alters a field&amp;rsquo;s definition, including changes to its type, &lt;a href=&quot;models/fields#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;models/fields#django.db.models.Field.unique&quot;&gt;&lt;code&gt;unique&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;models/fields#django.db.models.Field.db_column&quot;&gt;&lt;code&gt;db_column&lt;/code&gt;&lt;/a&gt; and other field attributes.</source>
          <target state="translated">更改字段的定义，包括对其类型，&lt;a href=&quot;models/fields#django.db.models.Field.null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;models/fields#django.db.models.Field.unique&quot;&gt; &lt;code&gt;unique&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;models/fields#django.db.models.Field.db_column&quot;&gt; &lt;code&gt;db_column&lt;/code&gt; &lt;/a&gt;和其他字段属性的更改。</target>
        </trans-unit>
        <trans-unit id="e5910625172e9af95bdd7fc7ab84528f5d87198e" translate="yes" xml:space="preserve">
          <source>Alters the managers that are available during migrations.</source>
          <target state="translated">改变迁移期间可用的管理人员。</target>
        </trans-unit>
        <trans-unit id="36a270dcb3503dfb775409cd7f97e05895cb28d0" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; output is the default output style when you &lt;code&gt;print&lt;/code&gt; a form, other output styles are available. Each style is available as a method on a form object, and each rendering method returns a string.</source>
          <target state="translated">尽管 &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; 输出是 &lt;code&gt;print&lt;/code&gt; 表单时的默认输出样式，但是其他输出样式也可用。每种样式都可以作为表单对象上的方法使用，并且每种呈现方法都返回一个字符串。</target>
        </trans-unit>
        <trans-unit id="f1d6bdab964b21813432d1c5afef320356d65640" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;reporter.stories_filed = F('stories_filed') + 1&lt;/code&gt; looks like a normal Python assignment of value to an instance attribute, in fact it&amp;rsquo;s an SQL construct describing an operation on the database.</source>
          <target state="translated">尽管 &lt;code&gt;reporter.stories_filed = F('stories_filed') + 1&lt;/code&gt; 看起来像是对实例属性进行常规的Python赋值，但实际上它是一个SQL构造，描述了对数据库的操作。</target>
        </trans-unit>
        <trans-unit id="eb73c88f5f50706eae03b23bf2627359294c5bf9" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;select_for_update()&lt;/code&gt; normally fails in autocommit mode, since &lt;a href=&quot;../../topics/testing/tools#django.test.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; automatically wraps each test in a transaction, calling &lt;code&gt;select_for_update()&lt;/code&gt; in a &lt;code&gt;TestCase&lt;/code&gt; even outside an &lt;a href=&quot;../../topics/db/transactions#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; block will (perhaps unexpectedly) pass without raising a &lt;code&gt;TransactionManagementError&lt;/code&gt;. To properly test &lt;code&gt;select_for_update()&lt;/code&gt; you should use &lt;a href=&quot;../../topics/testing/tools#django.test.TransactionTestCase&quot;&gt;&lt;code&gt;TransactionTestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">虽然 &lt;code&gt;select_for_update()&lt;/code&gt; 通常未能在自动提交模式中，由于&lt;a href=&quot;../../topics/testing/tools#django.test.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;自动换事务中的每一试验中，调用 &lt;code&gt;select_for_update()&lt;/code&gt; 在一个 &lt;code&gt;TestCase&lt;/code&gt; 即使外部的&lt;a href=&quot;../../topics/db/transactions#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt;块将（也许意外）通过而不养 &lt;code&gt;TransactionManagementError&lt;/code&gt; 。要正确测试 &lt;code&gt;select_for_update()&lt;/code&gt; ，应使用&lt;a href=&quot;../../topics/testing/tools#django.test.TransactionTestCase&quot;&gt; &lt;code&gt;TransactionTestCase&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="17d2e7a0d393b7d56d8a593921880b94e217792b" translate="yes" xml:space="preserve">
          <source>Although Python provides a mail sending interface via the &lt;a href=&quot;https://docs.python.org/3/library/smtplib.html#module-smtplib&quot;&gt;&lt;code&gt;smtplib&lt;/code&gt;&lt;/a&gt; module, Django provides a couple of light wrappers over it. These wrappers are provided to make sending email extra quick, to help test email sending during development, and to provide support for platforms that can&amp;rsquo;t use SMTP.</source>
          <target state="translated">尽管Python通过&lt;a href=&quot;https://docs.python.org/3/library/smtplib.html#module-smtplib&quot;&gt; &lt;code&gt;smtplib&lt;/code&gt; &lt;/a&gt;模块提供了一个邮件发送接口，但Django在其上提供了两个轻包装器。提供这些包装程序是为了使电子邮件发送速度更快，有助于在开发过程中测试电子邮件发送，并为无法使用SMTP的平台提供支持。</target>
        </trans-unit>
        <trans-unit id="ad28848e7e3de4d9e1c1d1e1c78fd615e37e0584" translate="yes" xml:space="preserve">
          <source>Although it&amp;rsquo;s not required that you use the sites framework, it&amp;rsquo;s strongly encouraged, because Django takes advantage of it in a few places. Even if your Django installation is powering only a single site, you should take the two seconds to create the site object with your &lt;code&gt;domain&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt;, and point to its ID in your &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt;&lt;code&gt;SITE_ID&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">尽管不需要使用sites框架，但强烈建议您使用它，因为Django在几个地方都利用了它。即使您的Django安装仅为单个站点供电，您也应该花两秒钟的时间使用您的 &lt;code&gt;domain&lt;/code&gt; 和 &lt;code&gt;name&lt;/code&gt; 创建站点对象，并在&lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt; &lt;code&gt;SITE_ID&lt;/code&gt; &lt;/a&gt;设置中指向其ID 。</target>
        </trans-unit>
        <trans-unit id="194869c1637c7a1a85b3692422964d84722a7385" translate="yes" xml:space="preserve">
          <source>Although macOS comes with Python installed, users can use &lt;a href=&quot;https://www.python.org/ftp/python/&quot;&gt;framework installers&lt;/a&gt; provided by the Python Software Foundation. An advantage to using the installer is that macOS&amp;rsquo;s Python will remain &amp;ldquo;pristine&amp;rdquo; for internal operating system use.</source>
          <target state="translated">尽管macOS随附安装了Python，但用户可以使用Python Software Foundation提供的&lt;a href=&quot;https://www.python.org/ftp/python/&quot;&gt;框架安装程序&lt;/a&gt;。使用安装程序的一个优点是，macOS的Python将保持&amp;ldquo;原始&amp;rdquo;状态以供内部操作系统使用。</target>
        </trans-unit>
        <trans-unit id="df04fcbdb047e55419855b5e1f2c6a44d972baa7" translate="yes" xml:space="preserve">
          <source>Although some commands may allow their own custom options, every command allows for the following options:</source>
          <target state="translated">虽然有些命令可能允许自己的自定义选项,但每个命令都允许以下选项。</target>
        </trans-unit>
        <trans-unit id="25e537bbf3b1fe34054d4a0be78f060d686c2d47" translate="yes" xml:space="preserve">
          <source>Although the above example would work in the Python interactive interpreter, some of the test client&amp;rsquo;s functionality, notably the template-related functionality, is only available &lt;em&gt;while tests are running&lt;/em&gt;.</source>
          <target state="translated">尽管上面的示例可以在Python交互式解释器中运行，但是测试客户端的某些功能（尤其是与模板相关的功能）仅&lt;em&gt;在测试运行时&lt;/em&gt;可用。</target>
        </trans-unit>
        <trans-unit id="642aada3b4dd7550553bdd48221f14037a9e70d5" translate="yes" xml:space="preserve">
          <source>Although the module is named &lt;code&gt;gdal&lt;/code&gt;, GeoDjango only supports some of the capabilities of OGR and GDAL&amp;rsquo;s raster features at this time.</source>
          <target state="translated">尽管模块名为 &lt;code&gt;gdal&lt;/code&gt; ，但GeoDjango目前仅支持OGR和GDAL栅格功能的某些功能。</target>
        </trans-unit>
        <trans-unit id="83f5a70b7b65e453c2f6735c339756076fead2b2" translate="yes" xml:space="preserve">
          <source>Although the primary way you&amp;rsquo;ll use &lt;code&gt;Field&lt;/code&gt; classes is in &lt;code&gt;Form&lt;/code&gt; classes, you can also instantiate them and use them directly to get a better idea of how they work. Each &lt;code&gt;Field&lt;/code&gt; instance has a &lt;code&gt;clean()&lt;/code&gt; method, which takes a single argument and either raises a &lt;code&gt;django.core.exceptions.ValidationError&lt;/code&gt; exception or returns the clean value:</source>
          <target state="translated">尽管使用 &lt;code&gt;Field&lt;/code&gt; 类的主要方法是在 &lt;code&gt;Form&lt;/code&gt; 类中，但是您也可以实例化它们并直接使用它们，以更好地了解它们的工作方式。每个 &lt;code&gt;Field&lt;/code&gt; 实例都有一个 &lt;code&gt;clean()&lt;/code&gt; 方法，该方法带有一个参数，并引发 &lt;code&gt;django.core.exceptions.ValidationError&lt;/code&gt; 异常或返回clean值：</target>
        </trans-unit>
        <trans-unit id="bee4b6c86d4b5ab7cb7d3c1c53cb24d37af0da9f" translate="yes" xml:space="preserve">
          <source>Although the primary way you&amp;rsquo;ll use &lt;code&gt;Field&lt;/code&gt; classes is in &lt;code&gt;Form&lt;/code&gt; classes, you can also instantiate them and use them directly to get a better idea of how they work. Each &lt;code&gt;Field&lt;/code&gt; instance has a &lt;code&gt;clean()&lt;/code&gt; method, which takes a single argument and either raises a &lt;code&gt;django.forms.ValidationError&lt;/code&gt; exception or returns the clean value:</source>
          <target state="translated">尽管使用 &lt;code&gt;Field&lt;/code&gt; 类的主要方法是在 &lt;code&gt;Form&lt;/code&gt; 类中，但是您也可以实例化它们并直接使用它们，以更好地了解它们的工作方式。每个 &lt;code&gt;Field&lt;/code&gt; 实例都有一个 &lt;code&gt;clean()&lt;/code&gt; 方法，该方法带有一个参数，并引发 &lt;code&gt;django.forms.ValidationError&lt;/code&gt; 异常或返回clean值：</target>
        </trans-unit>
        <trans-unit id="6226386795c943c9b1edd5627cd66bae7276a870" translate="yes" xml:space="preserve">
          <source>Although the setting offers little practical benefit, it&amp;rsquo;s sometimes required by security auditors.</source>
          <target state="translated">尽管该设置几乎没有实际好处，但是安全审核员有时还是需要此设置。</target>
        </trans-unit>
        <trans-unit id="7668db2531ca50b0b25171433eb3dcb36b9e4815" translate="yes" xml:space="preserve">
          <source>Although there is no built-in method for copying model instances, it is possible to easily create new instance with all fields&amp;rsquo; values copied. In the simplest case, you can set &lt;code&gt;pk&lt;/code&gt; to &lt;code&gt;None&lt;/code&gt;. Using our blog example:</source>
          <target state="translated">尽管没有用于复制模型实例的内置方法，但是可以轻松地创建复制了所有字段值的新实例。在最简单的情况下，可以将 &lt;code&gt;pk&lt;/code&gt; 设置为 &lt;code&gt;None&lt;/code&gt; 。使用我们的博客示例：</target>
        </trans-unit>
        <trans-unit id="e224421f07b0d6dcb4559fde5db93254f751573e" translate="yes" xml:space="preserve">
          <source>Although you can access model classes as described above, avoid interacting with the database in your &lt;a href=&quot;#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;ready()&lt;/code&gt;&lt;/a&gt; implementation. This includes model methods that execute queries (&lt;a href=&quot;models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;models/instances#django.db.models.Model.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt;, manager methods etc.), and also raw SQL queries via &lt;code&gt;django.db.connection&lt;/code&gt;. Your &lt;a href=&quot;#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;ready()&lt;/code&gt;&lt;/a&gt; method will run during startup of every management command. For example, even though the test database configuration is separate from the production settings, &lt;code&gt;manage.py test&lt;/code&gt; would still execute some queries against your &lt;strong&gt;production&lt;/strong&gt; database!</source>
          <target state="translated">尽管您可以如上所述访问模型类，但是请避免在&lt;a href=&quot;#django.apps.AppConfig.ready&quot;&gt; &lt;code&gt;ready()&lt;/code&gt; &lt;/a&gt;实现中与数据库进行交互。这包括执行查询的模型方法（&lt;a href=&quot;models/instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;models/instances#django.db.models.Model.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt;，管理器方法等），以及通过 &lt;code&gt;django.db.connection&lt;/code&gt; 进行的原始SQL查询。您的&lt;a href=&quot;#django.apps.AppConfig.ready&quot;&gt; &lt;code&gt;ready()&lt;/code&gt; &lt;/a&gt;方法将在每个管理命令启动期间运行。例如，即使测试数据库的配置与生产设置是分开的， &lt;code&gt;manage.py test&lt;/code&gt; 仍将对&lt;strong&gt;生产&lt;/strong&gt;数据库执行一些查询！</target>
        </trans-unit>
        <trans-unit id="61b75b8d0b36d72cb541a55f1994f7c38a8ead9d" translate="yes" xml:space="preserve">
          <source>Although you can pass any number of arguments to a template tag using &lt;code&gt;token.split_contents()&lt;/code&gt;, the arguments are all unpacked as string literals. A little more work is required in order to pass dynamic content (a template variable) to a template tag as an argument.</source>
          <target state="translated">尽管您可以使用 &lt;code&gt;token.split_contents()&lt;/code&gt; 将任意数量的参数传递给模板标签，但所有参数都将作为字符串文字解压缩。为了将动态内容（模板变量）作为参数传递给模板标签，还需要做更多的工作。</target>
        </trans-unit>
        <trans-unit id="a1a76598ce45e214be02b0c1dad6e5cccdb65e6a" translate="yes" xml:space="preserve">
          <source>Although you can use Django without a database, it comes with an &lt;a href=&quot;https://en.wikipedia.org/wiki/Object-relational_mapping&quot;&gt;object-relational mapper&lt;/a&gt; in which you describe your database layout in Python code.</source>
          <target state="translated">尽管您可以在没有数据库的情况下使用Django，但它带有&lt;a href=&quot;https://en.wikipedia.org/wiki/Object-relational_mapping&quot;&gt;对象关系映射器&lt;/a&gt;，您可以在其中使用Python代码描述数据库布局。</target>
        </trans-unit>
        <trans-unit id="3f2946c2a1c3d3fb758114cb91b72f1c7ecc85a0" translate="yes" xml:space="preserve">
          <source>Although you can&amp;rsquo;t import models at the module-level where &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; classes are defined, you can import them in &lt;code&gt;ready()&lt;/code&gt;, using either an &lt;code&gt;import&lt;/code&gt; statement or &lt;a href=&quot;#django.apps.AppConfig.get_model&quot;&gt;&lt;code&gt;get_model()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">尽管无法在定义&lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt;类的模块级别导入模型，但是可以使用 &lt;code&gt;import&lt;/code&gt; 语句或&lt;a href=&quot;#django.apps.AppConfig.get_model&quot;&gt; &lt;code&gt;get_model()&lt;/code&gt; &lt;/a&gt;在 &lt;code&gt;ready()&lt;/code&gt; 中导入模型。</target>
        </trans-unit>
        <trans-unit id="2c9d48b83bada6a5ee76fb5e0fea2eab96528d7e" translate="yes" xml:space="preserve">
          <source>Although you might think about storing files in the database, consider that it is bad design in 99% of the cases. This field is &lt;em&gt;not&lt;/em&gt; a replacement for proper &lt;a href=&quot;../../howto/static-files/index&quot;&gt;static files&lt;/a&gt; handling.</source>
          <target state="translated">尽管您可能考虑过将文件存储在数据库中，但在99％的情况下，都认为这是错误的设计。此字段&lt;em&gt;不能&lt;/em&gt;代替适当的&lt;a href=&quot;../../howto/static-files/index&quot;&gt;静态文件&lt;/a&gt;处理。</target>
        </trans-unit>
        <trans-unit id="67df2de3326ef19fc04ce801e27ed4b4b8fad0ec" translate="yes" xml:space="preserve">
          <source>Always &lt;code&gt;False&lt;/code&gt;. This method makes an &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; instance a stream-like object.</source>
          <target state="translated">总是 &lt;code&gt;False&lt;/code&gt; 。此方法使&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;实例成为类似流的对象。</target>
        </trans-unit>
        <trans-unit id="4686e5206fe2cbfcf5605c9202da330b22ccc178" translate="yes" xml:space="preserve">
          <source>Always &lt;code&gt;True&lt;/code&gt;. This method makes an &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; instance a stream-like object.</source>
          <target state="translated">始终为 &lt;code&gt;True&lt;/code&gt; 。此方法使&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;实例成为类似流的对象。</target>
        </trans-unit>
        <trans-unit id="125a4148526d3132ede8f973cff78ac6a82e0dff" translate="yes" xml:space="preserve">
          <source>Always prefer &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; if possible at all. It accounts for the idiosyncrasies of each database and prevents invalid operations.</source>
          <target state="translated">如果可能的话，总是选择&lt;a href=&quot;#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt;。它考虑了每个数据库的特性并防止了无效操作。</target>
        </trans-unit>
        <trans-unit id="92aeab1f6ae301136883fbf61b508354c6a1d03b" translate="yes" xml:space="preserve">
          <source>Always refer to the documentation that corresponds to the version of Django you&amp;rsquo;re using!</source>
          <target state="translated">请务必参考与您使用的Django版本相对应的文档！</target>
        </trans-unit>
        <trans-unit id="5e36151c5431caa487785143303f4667f6105373" translate="yes" xml:space="preserve">
          <source>Always return strings from a template tag&amp;rsquo;s &lt;code&gt;render()&lt;/code&gt; method and from template filters.</source>
          <target state="translated">始终从模板标签的 &lt;code&gt;render()&lt;/code&gt; 方法和模板过滤器返回字符串。</target>
        </trans-unit>
        <trans-unit id="e129e2c256cac5a202052b90d6f48444141571d0" translate="yes" xml:space="preserve">
          <source>Always use &lt;code&gt;params&lt;/code&gt; instead of embedding values directly into &lt;code&gt;where&lt;/code&gt; because &lt;code&gt;params&lt;/code&gt; will ensure values are quoted correctly according to your particular backend. For example, quotes will be escaped correctly.</source>
          <target state="translated">始终使用 &lt;code&gt;params&lt;/code&gt; 而不是将值直接嵌入到 &lt;code&gt;where&lt;/code&gt; 因为 &lt;code&gt;params&lt;/code&gt; 将确保根据您的特定后端正确引用值。例如，引号将正确转义。</target>
        </trans-unit>
        <trans-unit id="1509c95c0c093c1fb332475c1de5de599eb6a97d" translate="yes" xml:space="preserve">
          <source>Amend URLconf</source>
          <target state="translated">修改URLconf</target>
        </trans-unit>
        <trans-unit id="d0797826ea1aa534137aa2c3b4982212038f9bbc" translate="yes" xml:space="preserve">
          <source>Amend views</source>
          <target state="translated">修正意见</target>
        </trans-unit>
        <trans-unit id="98cb3586308743cf6fabda4d4ef48767bd8f9376" translate="yes" xml:space="preserve">
          <source>Among Django&amp;rsquo;s built-in database backends, MySQL 8.0.2+, PostgreSQL, and Oracle support window expressions. Support for different window expression features varies among the different databases. For example, the options in &lt;a href=&quot;#django.db.models.Expression.asc&quot;&gt;&lt;code&gt;asc()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.Expression.desc&quot;&gt;&lt;code&gt;desc()&lt;/code&gt;&lt;/a&gt; may not be supported. Consult the documentation for your database as needed.</source>
          <target state="translated">在Django的内置数据库后端中，MySQL 8.0.2 +，PostgreSQL和Oracle支持窗口表达式。不同数据库中对不同窗口表达式功能的支持也有所不同。例如，可能不支持&lt;a href=&quot;#django.db.models.Expression.asc&quot;&gt; &lt;code&gt;asc()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.db.models.Expression.desc&quot;&gt; &lt;code&gt;desc()&lt;/code&gt; 中&lt;/a&gt;的选项。根据需要查阅数据库的文档。</target>
        </trans-unit>
        <trans-unit id="dc2ba95fda99894557e8f895c4b9ab687f5bc290" translate="yes" xml:space="preserve">
          <source>Among other things, the default logging configuration passes HTTP 500 server errors to an email log handler when &lt;a href=&quot;#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;. See also &lt;a href=&quot;../topics/logging#configuring-logging&quot;&gt;Configuring logging&lt;/a&gt;.</source>
          <target state="translated">除其他事项外，当&lt;a href=&quot;#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;False&lt;/code&gt; 时，默认日志记录配置会将HTTP 500服务器错误传递到电子邮件日志处理程序。另请参阅&lt;a href=&quot;../topics/logging#configuring-logging&quot;&gt;配置日志记录&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f5dfcb63505f909d2e384679116d111c4e9c2d49" translate="yes" xml:space="preserve">
          <source>An &amp;ldquo;exact&amp;rdquo; match. For example:</source>
          <target state="translated">&amp;ldquo;完全匹配&amp;rdquo;。例如：</target>
        </trans-unit>
        <trans-unit id="6f863f157d9803f99f181e74a12c7d7d120b7259" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#django.core.validators.EmailValidator&quot;&gt;&lt;code&gt;EmailValidator&lt;/code&gt;&lt;/a&gt; instance without any customizations.</source>
          <target state="translated">没有任何自定义的&lt;a href=&quot;#django.core.validators.EmailValidator&quot;&gt; &lt;code&gt;EmailValidator&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="2c68635b466c4a39a19dd05df8c021ee90a24ffd" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#django.db.models.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt; that automatically increments according to available IDs. You usually won&amp;rsquo;t need to use this directly; a primary key field will automatically be added to your model if you don&amp;rsquo;t specify otherwise. See &lt;a href=&quot;../../topics/db/models#automatic-primary-key-fields&quot;&gt;Automatic primary key fields&lt;/a&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;#django.db.models.IntegerField&quot;&gt; &lt;code&gt;IntegerField&lt;/code&gt; &lt;/a&gt;，它根据可用的ID自动递增。您通常不需要直接使用它；如果没有另外指定，主键字段将自动添加到模型中。请参阅&lt;a href=&quot;../../topics/db/models#automatic-primary-key-fields&quot;&gt;自动主键字段&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="faddb2573c4c67040a191c29d77ac165c4bfede9" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; subclass that helps to create a JSON-encoded response. It inherits most behavior from its superclass with a couple differences:</source>
          <target state="translated">一个&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; 对象&lt;/a&gt;的子类，有助于创建一个JSON编码的响应。它从父类继承了大多数行为，但有一些区别：</target>
        </trans-unit>
        <trans-unit id="c0d33f2c22b5dcd80cd0b425eda25b332db008db" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../../request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; representing the current request,</source>
          <target state="translated">代表当前请求的&lt;a href=&quot;../../request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;，</target>
        </trans-unit>
        <trans-unit id="186111add1c13054b5e366f4d7b79674600a0885" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;applications#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; instance for the application about to be migrated/synced.</source>
          <target state="translated">要迁移/同步的应用程序的&lt;a href=&quot;applications#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="da3b88811bdac19d13bfca669b77a38651837b81" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;applications#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; instance for the application that was just installed.</source>
          <target state="translated">刚安装的应用程序的&lt;a href=&quot;applications#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="4106e26619049b03071241b0425bb837c58c7e97" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">一个&lt;a href=&quot;request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; 的&lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="cfa7d765cd5e7151478725f3460053f18691d841" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;F()&lt;/code&gt; object represents the value of a model field or annotated column. It makes it possible to refer to model field values and perform database operations using them without actually having to pull them out of the database into Python memory.</source>
          <target state="translated">一个 &lt;code&gt;F()&lt;/code&gt; 对象表示一个模型字段或注释的列的值。这样就可以引用模型字段值并使用它们执行数据库操作，而无需实际将它们从数据库中拉出到Python内存中。</target>
        </trans-unit>
        <trans-unit id="9f6969cbb4292c3086f7c958ae19344bb5aaa421" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Operation&lt;/code&gt; subclass which installs PostgreSQL extensions.</source>
          <target state="translated">安装PostgreSQL扩展的 &lt;code&gt;Operation&lt;/code&gt; 子类。</target>
        </trans-unit>
        <trans-unit id="b4204a2187e660eb7e65f9b02da09772bc3ffaf7" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Operation&lt;/code&gt; subclass which installs a PostgreSQL extension. For common extensions, use one of the more specific subclasses below.</source>
          <target state="translated">用于安装PostgreSQL扩展的 &lt;code&gt;Operation&lt;/code&gt; 子类。对于常见扩展，请使用以下更具体的子类之一。</target>
        </trans-unit>
        <trans-unit id="98724fe973995dab889727509346ca4f9510047d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;id&lt;/code&gt; field is added automatically, but this behavior can be overridden. See &lt;a href=&quot;#automatic-primary-key-fields&quot;&gt;Automatic primary key fields&lt;/a&gt;.</source>
          <target state="translated">将自动添加一个 &lt;code&gt;id&lt;/code&gt; 字段，但是可以覆盖此行为。请参阅&lt;a href=&quot;#automatic-primary-key-fields&quot;&gt;自动主键字段&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="59a2100a48bb74ca3c223e06a67c881b76a9b9c4" translate="yes" xml:space="preserve">
          <source>An API is available to manipulate session data outside of a view:</source>
          <target state="translated">一个API可用于在视图之外操作会话数据。</target>
        </trans-unit>
        <trans-unit id="65dffa4497ac4db1209b15a06c360f65a3812e50" translate="yes" xml:space="preserve">
          <source>An IPv4 or IPv6 address, in string format (e.g. &lt;code&gt;192.0.2.30&lt;/code&gt; or &lt;code&gt;2a02:42fe::4&lt;/code&gt;). The default form widget for this field is a &lt;a href=&quot;../forms/widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">字符串格式的IPv4或IPv6地址（例如 &lt;code&gt;192.0.2.30&lt;/code&gt; 或 &lt;code&gt;2a02:42fe::4&lt;/code&gt; ）。该字段的默认表单小部件是&lt;a href=&quot;../forms/widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="18e6d94a1f45fbaae76dc484c2c64added263e27" translate="yes" xml:space="preserve">
          <source>An absolute or relative URL, which will be used as-is for the redirect location.</source>
          <target state="translated">一个绝对或相对的URL,它将被用于重定向位置的现状。</target>
        </trans-unit>
        <trans-unit id="e3925ec179972ff07fb76189661269abc5b99a88" translate="yes" xml:space="preserve">
          <source>An action was &lt;strong&gt;not&lt;/strong&gt; successful or some other failure occurred</source>
          <target state="translated">一个动作是&lt;strong&gt;不是&lt;/strong&gt;成功，或者出现了其他一些故障</target>
        </trans-unit>
        <trans-unit id="e3a6647bd061a5c968c8eaf481deb4759e5f2412" translate="yes" xml:space="preserve">
          <source>An action was successful, e.g. &amp;ldquo;Your profile was updated successfully&amp;rdquo;</source>
          <target state="translated">操作成功，例如&amp;ldquo;您的个人资料已成功更新&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="4435bfb73984e94fc86de917153522bf1df0a5d7" translate="yes" xml:space="preserve">
          <source>An admin site that lets you add, change, and delete polls.</source>
          <target state="translated">一个可以让你添加、更改和删除投票的管理网站。</target>
        </trans-unit>
        <trans-unit id="9c68c75bc4729d236beed0fc44e1ac416abbfd61" translate="yes" xml:space="preserve">
          <source>An aggregate expression is a special case of a &lt;a href=&quot;#func-expressions&quot;&gt;Func() expression&lt;/a&gt; that informs the query that a &lt;code&gt;GROUP BY&lt;/code&gt; clause is required. All of the &lt;a href=&quot;querysets#aggregation-functions&quot;&gt;aggregate functions&lt;/a&gt;, like &lt;code&gt;Sum()&lt;/code&gt; and &lt;code&gt;Count()&lt;/code&gt;, inherit from &lt;code&gt;Aggregate()&lt;/code&gt;.</source>
          <target state="translated">聚合表达式是&lt;a href=&quot;#func-expressions&quot;&gt;Func（）表达式&lt;/a&gt;的特例，该表达式通知查询需要 &lt;code&gt;GROUP BY&lt;/code&gt; 子句。所有&lt;a href=&quot;querysets#aggregation-functions&quot;&gt;聚合函数&lt;/a&gt;（例如 &lt;code&gt;Sum()&lt;/code&gt; 和 &lt;code&gt;Count()&lt;/code&gt; )都继承自 &lt;code&gt;Aggregate()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6dac8c4d87a8e94f377a297147a7ed6a8deb0b20" translate="yes" xml:space="preserve">
          <source>An aggregate within a &lt;code&gt;values()&lt;/code&gt; clause is applied before other arguments within the same &lt;code&gt;values()&lt;/code&gt; clause. If you need to group by another value, add it to an earlier &lt;code&gt;values()&lt;/code&gt; clause instead. For example:</source>
          <target state="translated">&lt;code&gt;values()&lt;/code&gt; 子句中的聚合在相同 &lt;code&gt;values()&lt;/code&gt; 子句中的其他参数之前应用。如果您需要按另一个值分组，请将其添加到较早的 &lt;code&gt;values()&lt;/code&gt; 子句中。例如：</target>
        </trans-unit>
        <trans-unit id="33d2fc7e42e04914b254e4159f933abde947704f" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry.tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry.tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="3aff51db3da0e7b64fab96d99fc5c327a215a3e4" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;#django.contrib.gis.gdal.Polygon.shell&quot;&gt;&lt;code&gt;shell&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.gis.gdal.Polygon.shell&quot;&gt; &lt;code&gt;shell&lt;/code&gt; &lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="61d19c8e07f4c913c49aeae377f8f1d9b469aa9c" translate="yes" xml:space="preserve">
          <source>An alternative better solution</source>
          <target state="translated">另一种更好的解决办法</target>
        </trans-unit>
        <trans-unit id="1deb6430deb14f32cdaa8501e3f8aec60b594ea3" translate="yes" xml:space="preserve">
          <source>An anonymous user is one that is not authenticated i.e. they have provided no valid authentication details. However, that does not necessarily mean they are not authorized to do anything. At the most basic level, most websites authorize anonymous users to browse most of the site, and many allow anonymous posting of comments etc.</source>
          <target state="translated">匿名用户是指没有经过认证的用户,即他们没有提供有效的认证信息。然而,这并不一定意味着他们没有被授权做任何事情。在最基本的层面上,大多数网站授权匿名用户浏览网站的大部分内容,许多网站允许匿名发表评论等。</target>
        </trans-unit>
        <trans-unit id="4b08a99e915ba9c989b651c61303f82ad2208c1e" translate="yes" xml:space="preserve">
          <source>An attacker in possession of the &lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt; can not only generate falsified session data, which your site will trust, but also remotely execute arbitrary code, as the data is serialized using pickle.</source>
          <target state="translated">拥有&lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; &lt;/a&gt;的攻击者不仅可以生成您的站点将信任的伪造会话数据，而且还可以远程执行任意代码，因为这些数据是使用pickle序列化的。</target>
        </trans-unit>
        <trans-unit id="bb2dca9b7402e3038c29ea2d17d64957926209e9" translate="yes" xml:space="preserve">
          <source>An attribute that defaults to &lt;code&gt;True&lt;/code&gt;. If set to &lt;code&gt;False&lt;/code&gt;, the microseconds part of &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; values will be set to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;True&lt;/code&gt; 的属性。如果设置为 &lt;code&gt;False&lt;/code&gt; ，则&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;和时间值的微秒部分将设置为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd268500a89a883b70edb57f72986316598ae3d7" translate="yes" xml:space="preserve">
          <source>An authentication backend is a class that implements two required methods: &lt;code&gt;get_user(user_id)&lt;/code&gt; and &lt;code&gt;authenticate(request, **credentials)&lt;/code&gt;, as well as a set of optional permission related &lt;a href=&quot;#authorization-methods&quot;&gt;authorization methods&lt;/a&gt;.</source>
          <target state="translated">身份验证后端是一个类，它实现两个必需的方法： &lt;code&gt;get_user(user_id)&lt;/code&gt; 和 &lt;code&gt;authenticate(request, **credentials)&lt;/code&gt; 以及一组与权限相关的可选&lt;a href=&quot;#authorization-methods&quot;&gt;授权方法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="de073d9defd676ec7471fad3bbfe1a2dc52b507b" translate="yes" xml:space="preserve">
          <source>An available formatting that can be used for displaying date fields on templates. Note that if &lt;a href=&quot;#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;, then the corresponding locale-dictated format has higher precedence and will be applied. See &lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;allowed date format strings&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可用格式，可用于在模板上显示日期字段。请注意，如果&lt;a href=&quot;#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; ，则相应的区域设置格式具有更高的优先级，并将被应用。请参阅&lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt; &lt;code&gt;allowed date format strings&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="96ebe49d47555429233b3848f332b38958349db3" translate="yes" xml:space="preserve">
          <source>An available formatting that can be used for displaying datetime fields on templates. Note that if &lt;a href=&quot;#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;, then the corresponding locale-dictated format has higher precedence and will be applied. See &lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;allowed date format strings&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可用的格式，可用于在模板上显示日期时间字段。请注意，如果&lt;a href=&quot;#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; ，则相应的区域设置格式具有更高的优先级，并将被应用。请参阅&lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt; &lt;code&gt;allowed date format strings&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9ea26de5566952ec524cedbb60ee90bf6c1be0e2" translate="yes" xml:space="preserve">
          <source>An example</source>
          <target state="translated">一个例子</target>
        </trans-unit>
        <trans-unit id="44dc5e773df10840021031d5567151fd83c15331" translate="yes" xml:space="preserve">
          <source>An example makes this easier to understand:</source>
          <target state="translated">举个例子就更容易理解了。</target>
        </trans-unit>
        <trans-unit id="9c7cf5762a90e14bf9c1f5ef6f288bc6ceef0b2a" translate="yes" xml:space="preserve">
          <source>An example might clarify things here:</source>
          <target state="translated">这里举个例子可能会说明一些问题。</target>
        </trans-unit>
        <trans-unit id="b994f90ff92f4e93c073288c79a6cd02bfc15ab0" translate="yes" xml:space="preserve">
          <source>An example of clickjacking</source>
          <target state="translated">点击劫持的一个例子</target>
        </trans-unit>
        <trans-unit id="9e5daf695560715d43805edc8de2766a29f586db" translate="yes" xml:space="preserve">
          <source>An example of this is how &lt;a href=&quot;#django.forms.SplitDateTimeWidget&quot;&gt;&lt;code&gt;SplitDateTimeWidget&lt;/code&gt;&lt;/a&gt; turns a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; value into a list with date and time split into two separate values:</source>
          <target state="translated">例如，&lt;a href=&quot;#django.forms.SplitDateTimeWidget&quot;&gt; &lt;code&gt;SplitDateTimeWidget&lt;/code&gt; &lt;/a&gt;如何将&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;值转换为列表，并将日期和时间分为两个单独的值：</target>
        </trans-unit>
        <trans-unit id="e35ab3d53b689526afb17ba5bf93be01898a48f4" translate="yes" xml:space="preserve">
          <source>An example to demonstrate:</source>
          <target state="translated">一个例子来证明。</target>
        </trans-unit>
        <trans-unit id="f481ad49809e7c27b79d2e6d830283b22c04c1f7" translate="yes" xml:space="preserve">
          <source>An example:</source>
          <target state="translated">一个例子:</target>
        </trans-unit>
        <trans-unit id="fb43ae8a2d9729a801eac153bba3110e42b5e9c8" translate="yes" xml:space="preserve">
          <source>An exception raised when an error occurs when constructing or using a spatial reference system object.</source>
          <target state="translated">当构建或使用空间参考系统对象时发生错误时引发的异常。</target>
        </trans-unit>
        <trans-unit id="e5be9941c1dfa47b6a4a02b39ea4053fdb6457e4" translate="yes" xml:space="preserve">
          <source>An exception to this rule is the &lt;a href=&quot;../../ref/django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; command. It validates the migration history in the databases to catch problems with the existing migration files (which could be caused by editing them) before creating new migrations. By default, it checks only the &lt;code&gt;default&lt;/code&gt; database, but it consults the &lt;a href=&quot;#allow_migrate&quot;&gt;&lt;code&gt;allow_migrate()&lt;/code&gt;&lt;/a&gt; method of &lt;a href=&quot;#topics-db-multi-db-routing&quot;&gt;routers&lt;/a&gt; if any are installed.</source>
          <target state="translated">&lt;a href=&quot;../../ref/django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt;命令是该规则的一个例外。它会在创建新迁移之前验证数据库中的迁移历史记录，以发现现有迁移文件的问题（可能是由编辑它们引起的）。默认情况下，它仅检查 &lt;code&gt;default&lt;/code&gt; 数据库，但会查询&lt;a href=&quot;#topics-db-multi-db-routing&quot;&gt;路由器&lt;/a&gt;的&lt;a href=&quot;#allow_migrate&quot;&gt; &lt;code&gt;allow_migrate()&lt;/code&gt; &lt;/a&gt;方法（如果已安装）。</target>
        </trans-unit>
        <trans-unit id="ed175ed81f980812bd97abba4555214c4575fb8d" translate="yes" xml:space="preserve">
          <source>An in-memory raster is created through the following example:</source>
          <target state="translated">通过下面的例子,可以创建一个内存中的光栅。</target>
        </trans-unit>
        <trans-unit id="c3a0de81244b1acb46976eba51d4d245458bc3eb" translate="yes" xml:space="preserve">
          <source>An inactive user is one that has its &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.is_active&quot;&gt;&lt;code&gt;is_active&lt;/code&gt;&lt;/a&gt; field set to &lt;code&gt;False&lt;/code&gt;. The &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.backends.ModelBackend&quot;&gt;&lt;code&gt;ModelBackend&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.backends.RemoteUserBackend&quot;&gt;&lt;code&gt;RemoteUserBackend&lt;/code&gt;&lt;/a&gt; authentication backends prohibits these users from authenticating. If a custom user model doesn&amp;rsquo;t have an &lt;a href=&quot;#django.contrib.auth.models.CustomUser.is_active&quot;&gt;&lt;code&gt;is_active&lt;/code&gt;&lt;/a&gt; field, all users will be allowed to authenticate.</source>
          <target state="translated">非活动用户是将其&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.is_active&quot;&gt; &lt;code&gt;is_active&lt;/code&gt; &lt;/a&gt;字段设置为 &lt;code&gt;False&lt;/code&gt; 的用户。该&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.backends.ModelBackend&quot;&gt; &lt;code&gt;ModelBackend&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.backends.RemoteUserBackend&quot;&gt; &lt;code&gt;RemoteUserBackend&lt;/code&gt; &lt;/a&gt;认证后端禁止这些用户进行身份验证。如果自定义用户模型没有&lt;a href=&quot;#django.contrib.auth.models.CustomUser.is_active&quot;&gt; &lt;code&gt;is_active&lt;/code&gt; &lt;/a&gt;字段，则将允许所有用户进行身份验证。</target>
        </trans-unit>
        <trans-unit id="274d404b49cf7865c14ab687e838802e41ea0186" translate="yes" xml:space="preserve">
          <source>An included URLconf receives any captured parameters from parent URLconfs, so the following example is valid:</source>
          <target state="translated">一个包含的URLconf从父URLconfs接收任何捕获的参数,所以下面的例子是有效的。</target>
        </trans-unit>
        <trans-unit id="79f65afd7426a1dc2bc9545fd8cbde0c68685dda" translate="yes" xml:space="preserve">
          <source>An included template is rendered within the context of the template that includes it. This example produces the output &lt;code&gt;&quot;Hello, John!&quot;&lt;/code&gt;:</source>
          <target state="translated">包含的模板在包含它的模板的上下文中呈现。本示例产生输出 &lt;code&gt;&quot;Hello, John!&quot;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4168fcd2b3e8ad3adb04bc480ef91ac9dc32ac30" translate="yes" xml:space="preserve">
          <source>An infinite loop is caused by ordering</source>
          <target state="translated">无限循环是由排序引起的</target>
        </trans-unit>
        <trans-unit id="c342f5dc50caf73da0bd431eb33d447655a8bc38" translate="yes" xml:space="preserve">
          <source>An instance attribute that helps create colored output when writing to &lt;code&gt;stdout&lt;/code&gt; or &lt;code&gt;stderr&lt;/code&gt;. For example:</source>
          <target state="translated">一个实例属性，在写入 &lt;code&gt;stdout&lt;/code&gt; 或 &lt;code&gt;stderr&lt;/code&gt; 时有助于创建彩色输出。例如：</target>
        </trans-unit>
        <trans-unit id="9f2451f5257ef2ded26bcd890212ab4d9e0f0273" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../ref/request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;的实例。</target>
        </trans-unit>
        <trans-unit id="b677133dba37f8a0d05b9f531f292924134b17ce" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;../../ref/urlresolvers#django.urls.ResolverMatch&quot;&gt;&lt;code&gt;ResolverMatch&lt;/code&gt;&lt;/a&gt; for the response. You can use the &lt;a href=&quot;../../ref/urlresolvers#django.urls.ResolverMatch.func&quot;&gt;&lt;code&gt;func&lt;/code&gt;&lt;/a&gt; attribute, for example, to verify the view that served the response:</source>
          <target state="translated">响应的&lt;a href=&quot;../../ref/urlresolvers#django.urls.ResolverMatch&quot;&gt; &lt;code&gt;ResolverMatch&lt;/code&gt; &lt;/a&gt;实例。您可以使用&lt;a href=&quot;../../ref/urlresolvers#django.urls.ResolverMatch.func&quot;&gt; &lt;code&gt;func&lt;/code&gt; &lt;/a&gt;属性，例如，验证提供响应的视图：</target>
        </trans-unit>
        <trans-unit id="7151476a634aadae82a4558d217d3768bb129a09" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;applications#django.apps.apps&quot;&gt;&lt;code&gt;Apps&lt;/code&gt;&lt;/a&gt; containing the state of the project after the migration run. It should be used instead of the global &lt;a href=&quot;applications#django.apps.apps&quot;&gt;&lt;code&gt;apps&lt;/code&gt;&lt;/a&gt; registry to retrieve the models you want to perform operations on.</source>
          <target state="translated">包含运行迁移后项目状态的&lt;a href=&quot;applications#django.apps.apps&quot;&gt; &lt;code&gt;Apps&lt;/code&gt; &lt;/a&gt;实例。应该使用它代替全局&lt;a href=&quot;applications#django.apps.apps&quot;&gt; &lt;code&gt;apps&lt;/code&gt; &lt;/a&gt;注册表来检索要对其执行操作的模型。</target>
        </trans-unit>
        <trans-unit id="cee580ae302ae948e23c6225b6c391017760b3a8" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;applications#module-django.apps&quot;&gt;&lt;code&gt;Apps&lt;/code&gt;&lt;/a&gt; containing the state of the project before the migration run. It should be used instead of the global &lt;a href=&quot;applications#django.apps.apps&quot;&gt;&lt;code&gt;apps&lt;/code&gt;&lt;/a&gt; registry to retrieve the models you want to perform operations on.</source>
          <target state="translated">包含迁移运行前项目状态的&lt;a href=&quot;applications#module-django.apps&quot;&gt; &lt;code&gt;Apps&lt;/code&gt; &lt;/a&gt;实例。应该使用它代替全局&lt;a href=&quot;applications#django.apps.apps&quot;&gt; &lt;code&gt;apps&lt;/code&gt; &lt;/a&gt;注册表来检索要对其执行操作的模型。</target>
        </trans-unit>
        <trans-unit id="e82dde0c45c38efd74e624d73450580c79f107d0" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;urlresolvers#django.urls.ResolverMatch&quot;&gt;&lt;code&gt;ResolverMatch&lt;/code&gt;&lt;/a&gt; representing the resolved URL. This attribute is only set after URL resolving took place, which means it&amp;rsquo;s available in all views but not in middleware which are executed before URL resolving takes place (you can use it in &lt;a href=&quot;../topics/http/middleware#process_view&quot;&gt;&lt;code&gt;process_view()&lt;/code&gt;&lt;/a&gt; though).</source>
          <target state="translated">代表解析的URL 的&lt;a href=&quot;urlresolvers#django.urls.ResolverMatch&quot;&gt; &lt;code&gt;ResolverMatch&lt;/code&gt; &lt;/a&gt;实例。仅在发生URL解析之后才设置此属性，这意味着该属性在所有视图中可用，但在发生URL解析之前执行的中间件中不可用（不过您可以在&lt;a href=&quot;../topics/http/middleware#process_view&quot;&gt; &lt;code&gt;process_view()&lt;/code&gt; 中&lt;/a&gt;使用它）。</target>
        </trans-unit>
        <trans-unit id="62ebe3e92736407b7884afd74c06e451815b6cb6" translate="yes" xml:space="preserve">
          <source>An instance of the correct type (e.g., &lt;code&gt;Hand&lt;/code&gt; in our ongoing example).</source>
          <target state="translated">正确类型的实例（例如，在我们当前的示例中为 &lt;code&gt;Hand&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3c52b4b7dae7b1e7ef9416b4cfb7f0b060d5fcc5" translate="yes" xml:space="preserve">
          <source>An instance of the model where the &lt;code&gt;FileField&lt;/code&gt; is defined. More specifically, this is the particular instance where the current file is being attached.</source>
          <target state="translated">定义 &lt;code&gt;FileField&lt;/code&gt; 的模型实例。更具体地说，这是附加当前文件的特定实例。</target>
        </trans-unit>
        <trans-unit id="246472979f1a8942a4358ead771333c2b2a02c0e" translate="yes" xml:space="preserve">
          <source>An integer specifying how many objects should be displayed per page. If this is given, the view will paginate objects with &lt;code&gt;paginate_by&lt;/code&gt; objects per page. The view will expect either a &lt;code&gt;page&lt;/code&gt; query string parameter (via &lt;code&gt;request.GET&lt;/code&gt;) or a &lt;code&gt;page&lt;/code&gt; variable specified in the URLconf.</source>
          <target state="translated">一个整数，指定每页应显示多少个对象。如果指定了此视图，则视图将在每页上使用 &lt;code&gt;paginate_by&lt;/code&gt; 对象对对象进行分页。该视图将使用 &lt;code&gt;page&lt;/code&gt; 查询字符串参数（通过 &lt;code&gt;request.GET&lt;/code&gt; ）或URLconf中指定的 &lt;code&gt;page&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="3cf3b0caba7b39ed0e3bdd29ce7b2c628df21356" translate="yes" xml:space="preserve">
          <source>An integer specifying the number of &amp;ldquo;overflow&amp;rdquo; objects the last page can contain. By default this returns the value of &lt;a href=&quot;#django.views.generic.list.MultipleObjectMixin.paginate_orphans&quot;&gt;&lt;code&gt;paginate_orphans&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个整数，指定最后一页可以包含的&amp;ldquo;溢出&amp;rdquo;对象的数量。默认情况下，它返回&lt;a href=&quot;#django.views.generic.list.MultipleObjectMixin.paginate_orphans&quot;&gt; &lt;code&gt;paginate_orphans&lt;/code&gt; &lt;/a&gt;的值。</target>
        </trans-unit>
        <trans-unit id="b4ecc6422927cd0e8e9f3314e294f6a80faeaf21" translate="yes" xml:space="preserve">
          <source>An integer specifying the number of &amp;ldquo;overflow&amp;rdquo; objects the last page can contain. This extends the &lt;a href=&quot;#django.views.generic.list.MultipleObjectMixin.paginate_by&quot;&gt;&lt;code&gt;paginate_by&lt;/code&gt;&lt;/a&gt; limit on the last page by up to &lt;code&gt;paginate_orphans&lt;/code&gt;, in order to keep the last page from having a very small number of objects.</source>
          <target state="translated">一个整数，指定最后一页可以包含的&amp;ldquo;溢出&amp;rdquo;对象的数量。这样可以将最后一页上的&lt;a href=&quot;#django.views.generic.list.MultipleObjectMixin.paginate_by&quot;&gt; &lt;code&gt;paginate_by&lt;/code&gt; &lt;/a&gt;限制最多扩展到 &lt;code&gt;paginate_orphans&lt;/code&gt; ，以防止最后一页上的对象数量很少。</target>
        </trans-unit>
        <trans-unit id="30bb341a7bdb22e3ad1a0e3a492d93a67005d6ea" translate="yes" xml:space="preserve">
          <source>An integer. Values from &lt;code&gt;-2147483648&lt;/code&gt; to &lt;code&gt;2147483647&lt;/code&gt; are safe in all databases supported by Django.</source>
          <target state="translated">一个整数。在Django支持的所有数据库中， &lt;code&gt;-2147483648&lt;/code&gt; 到 &lt;code&gt;2147483647&lt;/code&gt; 之间的值都是安全的。</target>
        </trans-unit>
        <trans-unit id="e411d51eaf1718afd2228051f6d13a61f2e26282" translate="yes" xml:space="preserve">
          <source>An iterable containing the widgets needed.</source>
          <target state="translated">一个包含所需小部件的迭代器。</target>
        </trans-unit>
        <trans-unit id="1b68325a327361fc33c0b282ee4b1f9f41e3138d" translate="yes" xml:space="preserve">
          <source>An iterable containing the widgets needed. For example:</source>
          <target state="translated">一个包含所需小部件的迭代器。例如:</target>
        </trans-unit>
        <trans-unit id="782cb10126cecb403d126e1d894a7815f6715df8" translate="yes" xml:space="preserve">
          <source>An iterable of 2-tuples. The first element is an expression or string. The second element is a SQL operator represented as a string. To avoid typos, you may use &lt;a href=&quot;fields#django.contrib.postgres.fields.RangeOperators&quot;&gt;&lt;code&gt;RangeOperators&lt;/code&gt;&lt;/a&gt; which maps the operators with strings. For example:</source>
          <target state="translated">2元组的迭代。第一个元素是表达式或字符串。第二个元素是表示为字符串的SQL运算符。为了避免输入错误，您可以使用&lt;a href=&quot;fields#django.contrib.postgres.fields.RangeOperators&quot;&gt; &lt;code&gt;RangeOperators&lt;/code&gt; &lt;/a&gt;，它使用字符串映射运算符。例如：</target>
        </trans-unit>
        <trans-unit id="3890cb41c06b9fab006f1af94416b413635cd836" translate="yes" xml:space="preserve">
          <source>An iterable of 2-tuples. The first element is an expression or string. The second element is an SQL operator represented as a string. To avoid typos, you may use &lt;a href=&quot;fields#django.contrib.postgres.fields.RangeOperators&quot;&gt;&lt;code&gt;RangeOperators&lt;/code&gt;&lt;/a&gt; which maps the operators with strings. For example:</source>
          <target state="translated">2元组的迭代。第一个元素是表达式或字符串。第二个元素是表示为字符串的SQL运算符。为了避免输入错误，您可以使用&lt;a href=&quot;fields#django.contrib.postgres.fields.RangeOperators&quot;&gt; &lt;code&gt;RangeOperators&lt;/code&gt; &lt;/a&gt;，它使用字符串映射运算符。例如：</target>
        </trans-unit>
        <trans-unit id="1557e7d813a443c6e97ac8e302948f8a2a92ddc6" translate="yes" xml:space="preserve">
          <source>An iterator of the response content, bytestring encoded according to &lt;a href=&quot;#django.http.HttpResponse.charset&quot;&gt;&lt;code&gt;HttpResponse.charset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">响应内容的迭代器，根据&lt;a href=&quot;#django.http.HttpResponse.charset&quot;&gt; &lt;code&gt;HttpResponse.charset&lt;/code&gt; &lt;/a&gt;编码的字节串。</target>
        </trans-unit>
        <trans-unit id="764c42b91212f12a629a423f0f0afc1d1031be0b" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;#django.db.models.Q&quot;&gt;&lt;code&gt;Q object&lt;/code&gt;&lt;/a&gt; that&amp;rsquo;s used to filter the rows that are aggregated.</source>
          <target state="translated">可选的&lt;a href=&quot;#django.db.models.Q&quot;&gt; &lt;code&gt;Q object&lt;/code&gt; &lt;/a&gt;，用于过滤汇总的行。</target>
        </trans-unit>
        <trans-unit id="76ce46abaa60ff7cf50fa9f088ed9542f78f2bd9" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; that will be available during the template&amp;rsquo;s rendering process.</source>
          <target state="translated">可选的&lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;，将在模板的呈现过程中使用。</target>
        </trans-unit>
        <trans-unit id="f191d1f3bf0b579d3a02e71f79987b16c358797b" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;https://docs.python.org/3/library/json.html#json.JSONDecoder&quot;&gt;&lt;code&gt;json.JSONDecoder&lt;/code&gt;&lt;/a&gt; subclass to deserialize the value retrieved from the database. The value will be in the format chosen by the custom encoder (most often a string). Your deserialization may need to account for the fact that you can&amp;rsquo;t be certain of the input type. For example, you run the risk of returning a &lt;code&gt;datetime&lt;/code&gt; that was actually a string that just happened to be in the same format chosen for &lt;code&gt;datetime&lt;/code&gt;s.</source>
          <target state="translated">可选的&lt;a href=&quot;https://docs.python.org/3/library/json.html#json.JSONDecoder&quot;&gt; &lt;code&gt;json.JSONDecoder&lt;/code&gt; &lt;/a&gt;子类，用于反序列化从数据库检索的值。该值将采用自定义编码器选择的格式（通常是字符串）。反序列化可能需要考虑以下事实：您不确定输入类型。例如，您冒着返回 &lt;code&gt;datetime&lt;/code&gt; 时间的风险，该日期时间实际上是一个字符串，刚好与为 &lt;code&gt;datetime&lt;/code&gt; s选择的格式相同。</target>
        </trans-unit>
        <trans-unit id="a23afb57c393244f57d98b21627322991047b000" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;https://docs.python.org/3/library/json.html#json.JSONEncoder&quot;&gt;&lt;code&gt;json.JSONEncoder&lt;/code&gt;&lt;/a&gt; subclass to serialize data types not supported by the standard JSON serializer (e.g. &lt;code&gt;datetime.datetime&lt;/code&gt; or &lt;a href=&quot;https://docs.python.org/3/library/uuid.html#uuid.UUID&quot;&gt;&lt;code&gt;UUID&lt;/code&gt;&lt;/a&gt;). For example, you can use the &lt;a href=&quot;../../topics/serialization#django.core.serializers.json.DjangoJSONEncoder&quot;&gt;&lt;code&gt;DjangoJSONEncoder&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">可选的&lt;a href=&quot;https://docs.python.org/3/library/json.html#json.JSONEncoder&quot;&gt; &lt;code&gt;json.JSONEncoder&lt;/code&gt; &lt;/a&gt;子类，用于序列化标准JSON序列化器不支持的数据类型（例如 &lt;code&gt;datetime.datetime&lt;/code&gt; 或&lt;a href=&quot;https://docs.python.org/3/library/uuid.html#uuid.UUID&quot;&gt; &lt;code&gt;UUID&lt;/code&gt; &lt;/a&gt;）。例如，您可以使用&lt;a href=&quot;../../topics/serialization#django.core.serializers.json.DjangoJSONEncoder&quot;&gt; &lt;code&gt;DjangoJSONEncoder&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="51eabca0c49f8538626e416027ab8362de298d12" translate="yes" xml:space="preserve">
          <source>An optional JSON-encoding class to serialize data types not supported by the standard JSON serializer (&lt;code&gt;datetime&lt;/code&gt;, &lt;code&gt;uuid&lt;/code&gt;, etc.). For example, you can use the &lt;a href=&quot;../../../topics/serialization#django.core.serializers.json.DjangoJSONEncoder&quot;&gt;&lt;code&gt;DjangoJSONEncoder&lt;/code&gt;&lt;/a&gt; class or any other &lt;a href=&quot;https://docs.python.org/3/library/json.html#json.JSONEncoder&quot;&gt;&lt;code&gt;json.JSONEncoder&lt;/code&gt;&lt;/a&gt; subclass.</source>
          <target state="translated">可选的JSON编码类，用于序列化标准JSON序列化程序不支持的数据类型（ &lt;code&gt;datetime&lt;/code&gt; ， &lt;code&gt;uuid&lt;/code&gt; 等）。例如，您可以使用&lt;a href=&quot;../../../topics/serialization#django.core.serializers.json.DjangoJSONEncoder&quot;&gt; &lt;code&gt;DjangoJSONEncoder&lt;/code&gt; &lt;/a&gt;类或任何其他&lt;a href=&quot;https://docs.python.org/3/library/json.html#json.JSONEncoder&quot;&gt; &lt;code&gt;json.JSONEncoder&lt;/code&gt; &lt;/a&gt;子类。</target>
        </trans-unit>
        <trans-unit id="cf302c0ed6a7c8a745f8c8a389e92f3899cfc20e" translate="yes" xml:space="preserve">
          <source>An optional argument containing the characters which should not be escaped can be provided.</source>
          <target state="translated">可以提供一个可选的参数,包含不应该被转义的字符。</target>
        </trans-unit>
        <trans-unit id="37ddfbc6f10b5cbdd9c7a438e7bb14fa1cb94502" translate="yes" xml:space="preserve">
          <source>An optional argument that represents the &lt;a href=&quot;fields&quot;&gt;model field&lt;/a&gt; of the return value</source>
          <target state="translated">代表返回值的&lt;a href=&quot;fields&quot;&gt;模型字段&lt;/a&gt;的可选参数</target>
        </trans-unit>
        <trans-unit id="176299013af047e8122133ec1910bd95756256bf" translate="yes" xml:space="preserve">
          <source>An optional argument, &lt;code&gt;starts_with&lt;/code&gt;, can be applied to limit the returned pages to those beginning with a particular base URL. This argument may be passed as a string, or as a variable to be resolved from the context.</source>
          <target state="translated">可选参数 &lt;code&gt;starts_with&lt;/code&gt; 可以用于将返回的页面限制为以特定基本URL开头的页面。此参数可以作为字符串或作为要从上下文中解析的变量传递。</target>
        </trans-unit>
        <trans-unit id="90bbb5879cc4d952fc776e24ebf8fbe1815ea83c" translate="yes" xml:space="preserve">
          <source>An optional boolean argument that determines if array values will be distinct. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">一个可选的布尔参数，用于确定数组值是否不同。默认为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d7f719647ab51bd56cc6adc7bb2ef3848a3d37a" translate="yes" xml:space="preserve">
          <source>An optional boolean argument that determines if concatenated values will be distinct. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">一个可选的布尔参数，用于确定串联值是否不同。默认为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b0965bf17b8eef60057dfda1be8bca2a9a5b070a" translate="yes" xml:space="preserve">
          <source>An optional dict of months to use in the &amp;ldquo;months&amp;rdquo; select box.</source>
          <target state="translated">在&amp;ldquo;月&amp;rdquo;选择框中使用的月的可选字典。</target>
        </trans-unit>
        <trans-unit id="04946ca43c81da1014a5b10d04e67a735be7869b" translate="yes" xml:space="preserve">
          <source>An optional list/tuple of years to use in the &amp;ldquo;year&amp;rdquo; select box. The default is a list containing the current year and the next 9 years.</source>
          <target state="translated">在&amp;ldquo;年份&amp;rdquo;选择框中使用的可选列表/年份元组。默认值为包含当前年份和接下来的9年的列表。</target>
        </trans-unit>
        <trans-unit id="b15bc30576b82accc7ddd0cd521ab74377a57926" translate="yes" xml:space="preserve">
          <source>An optional string of a field name (with an optional &lt;code&gt;&quot;-&quot;&lt;/code&gt; prefix which indicates descending order) or an expression (or a tuple or list of strings and/or expressions) that specifies the ordering of the elements in the result list.</source>
          <target state="translated">字段名称的可选字符串（带有可选的 &lt;code&gt;&quot;-&quot;&lt;/code&gt; 前缀，表示降序）或表达式（或字符串和/或表达式的元组或列表），用于指定结果列表中元素的顺序。</target>
        </trans-unit>
        <trans-unit id="310bd87082e4e4832de44c97dbfa3ba94bc08f0d" translate="yes" xml:space="preserve">
          <source>An optional string of a field name (with an optional &lt;code&gt;&quot;-&quot;&lt;/code&gt; prefix which indicates descending order) or an expression (or a tuple or list of strings and/or expressions) that specifies the ordering of the elements in the result string.</source>
          <target state="translated">字段名称的可选字符串（带有可选的 &lt;code&gt;&quot;-&quot;&lt;/code&gt; 前缀，表示降序）或表达式（或字符串和/或表达式的元组或列表），用于指定结果字符串中元素的顺序。</target>
        </trans-unit>
        <trans-unit id="6f4edaf62b1dfdf8cb719bee64a43ebbceef00a2" translate="yes" xml:space="preserve">
          <source>An optional template engine &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt;. The search for the template will be restricted to that engine.</source>
          <target state="translated">可选模板引擎&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt;。搜索模板将仅限于该引擎。</target>
        </trans-unit>
        <trans-unit id="611aeb7acdb34b543451330642fcd3627d71cd8a" translate="yes" xml:space="preserve">
          <source>An override to the &lt;code&gt;verbose_name&lt;/code&gt; found in the model&amp;rsquo;s inner &lt;code&gt;Meta&lt;/code&gt; class.</source>
          <target state="translated">在模型的内部 &lt;code&gt;Meta&lt;/code&gt; 类中找到的 &lt;code&gt;verbose_name&lt;/code&gt; 的重写。</target>
        </trans-unit>
        <trans-unit id="ffcf163174409718ffabbf89f4d0f36fb79d14f9" translate="yes" xml:space="preserve">
          <source>An override to the &lt;code&gt;verbose_name_plural&lt;/code&gt; found in the model&amp;rsquo;s inner &lt;code&gt;Meta&lt;/code&gt; class.</source>
          <target state="translated">在模型的内部 &lt;code&gt;Meta&lt;/code&gt; 类中找到的 &lt;code&gt;verbose_name_plural&lt;/code&gt; 的替代。</target>
        </trans-unit>
        <trans-unit id="355d8688f4f9696453a0994cdc549492d8510967" translate="yes" xml:space="preserve">
          <source>An unbound form has no data associated with it. When rendered to the user, it will be empty or will contain default values.</source>
          <target state="translated">未绑定的表单没有相关的数据,当呈现给用户时,它将是空的或包含默认值。当渲染给用户时,它将是空的或包含默认值。</target>
        </trans-unit>
        <trans-unit id="b1a32456d35755cee8d21b9e4b77c13ccc1b84b8" translate="yes" xml:space="preserve">
          <source>Analogous to &lt;a href=&quot;#django.test.SimpleTestCase.assertRaisesMessage&quot;&gt;&lt;code&gt;SimpleTestCase.assertRaisesMessage()&lt;/code&gt;&lt;/a&gt; but for &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertWarnsRegex&quot;&gt;&lt;code&gt;assertWarnsRegex()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaisesRegex&quot;&gt;&lt;code&gt;assertRaisesRegex()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">类似于&lt;a href=&quot;#django.test.SimpleTestCase.assertRaisesMessage&quot;&gt; &lt;code&gt;SimpleTestCase.assertRaisesMessage()&lt;/code&gt; ,&lt;/a&gt;但是使用&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertWarnsRegex&quot;&gt; &lt;code&gt;assertWarnsRegex()&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaisesRegex&quot;&gt; &lt;code&gt;assertRaisesRegex()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ba957c88b3cfd199216b4fefecb0aef4a43c8fb5" translate="yes" xml:space="preserve">
          <source>Analyzes the request to find what language the user wants the system to show. Only languages listed in settings.LANGUAGES are taken into account. If the user requests a sublanguage where we have a main language, we send out the main language.</source>
          <target state="translated">分析请求,找出用户希望系统显示的语言。只考虑settings.LANGUAGES中列出的语言。如果用户请求的是我们有主语言的子语言,我们会发送主语言。</target>
        </trans-unit>
        <trans-unit id="7fd715a6a77af890a531d36685a0c3f6488bc441" translate="yes" xml:space="preserve">
          <source>And from the other end:</source>
          <target state="translated">而从另一端。</target>
        </trans-unit>
        <trans-unit id="1696dfe29429eaa7aa951e64f0a5a0adc2a6a84e" translate="yes" xml:space="preserve">
          <source>And here is a custom error message:</source>
          <target state="translated">而这里是一个自定义的错误信息。</target>
        </trans-unit>
        <trans-unit id="9cca8f3e51662b018d26f9c47a0d2d61b45340e4" translate="yes" xml:space="preserve">
          <source>And here&amp;rsquo;s &lt;code&gt;select_related&lt;/code&gt; lookup:</source>
          <target state="translated">这是 &lt;code&gt;select_related&lt;/code&gt; 查找：</target>
        </trans-unit>
        <trans-unit id="69a494ceeb088d95a44de3a13081c4a6afeb1751" translate="yes" xml:space="preserve">
          <source>And here&amp;rsquo;s an example of how that filter would be used:</source>
          <target state="translated">这是一个如何使用该过滤器的示例：</target>
        </trans-unit>
        <trans-unit id="03bff843633202076259ba7c810194e187aa4c2d" translate="yes" xml:space="preserve">
          <source>And here&amp;rsquo;s that same fixture as YAML:</source>
          <target state="translated">这与YAML相同：</target>
        </trans-unit>
        <trans-unit id="06b5a16628fc09b1a5c529ccdfe782e3493039ed" translate="yes" xml:space="preserve">
          <source>And if we would then do something like this:</source>
          <target state="translated">如果我们当时会做这样的事情。</target>
        </trans-unit>
        <trans-unit id="1ae632778b90d26ed88e99ef0026a9d9d566d012" translate="yes" xml:space="preserve">
          <source>And if you don&amp;rsquo;t use the database cache backend, you don&amp;rsquo;t need to worry about providing routing instructions for the database cache model.</source>
          <target state="translated">而且，如果您不使用数据库缓存后端，则无需担心为数据库缓存模型提供路由说明。</target>
        </trans-unit>
        <trans-unit id="33563f4b623edbd67004711fb92d511f217ed694" translate="yes" xml:space="preserve">
          <source>And in the template you would have:</source>
          <target state="translated">而在模板中,你会有。</target>
        </trans-unit>
        <trans-unit id="87cd8b6594bb03456295bc34593a83a34adf0007" translate="yes" xml:space="preserve">
          <source>And in your template you would use the following:</source>
          <target state="translated">而在你的模板中,你将使用以下内容。</target>
        </trans-unit>
        <trans-unit id="51a020ab2b01733bf5f33cb4a326e7e4db7ea093" translate="yes" xml:space="preserve">
          <source>And individual features may be retrieved by their feature ID:</source>
          <target state="translated">而单个特征可以通过其特征ID进行检索。</target>
        </trans-unit>
        <trans-unit id="90cfe1c3ebdd87032c4d116041779adeb21eb6ac" translate="yes" xml:space="preserve">
          <source>And it would be used in a view to block queries from the template like so:</source>
          <target state="translated">而它将被用于视图中,以阻止来自模板的查询,像这样。</target>
        </trans-unit>
        <trans-unit id="2f1888caae39ce8f393771e448ad036616a00801" translate="yes" xml:space="preserve">
          <source>And now we have three tests that confirm that &lt;code&gt;Question.was_published_recently()&lt;/code&gt; returns sensible values for past, recent, and future questions.</source>
          <target state="translated">现在，我们有三个测试可确认 &lt;code&gt;Question.was_published_recently()&lt;/code&gt; 返回过去，最近和将来问题的合理值。</target>
        </trans-unit>
        <trans-unit id="516c9f6b5c81b8fee9261467ab6cdf478025ee22" translate="yes" xml:space="preserve">
          <source>And of course you can easily access methods you&amp;rsquo;ve explicitly defined on your own models:</source>
          <target state="translated">当然，您可以轻松访问在自己的模型上明确定义的方法：</target>
        </trans-unit>
        <trans-unit id="dac469ad58c399cc88277f4ad145c4c7733aab27" translate="yes" xml:space="preserve">
          <source>And of course, we will add some tests, to check that a &lt;code&gt;Question&lt;/code&gt; whose &lt;code&gt;pub_date&lt;/code&gt; is in the past can be displayed, and that one with a &lt;code&gt;pub_date&lt;/code&gt; in the future is not:</source>
          <target state="translated">当然，我们将增加一些测试，以检查一个 &lt;code&gt;Question&lt;/code&gt; ，其 &lt;code&gt;pub_date&lt;/code&gt; 可以显示在过去，而且一用一 &lt;code&gt;pub_date&lt;/code&gt; 在未来是不是：</target>
        </trans-unit>
        <trans-unit id="ff7ec6ce2edd2d93bc624030dca48c59e112bf65" translate="yes" xml:space="preserve">
          <source>And on databases that support distinct on fields (such as PostgreSQL), &lt;code&gt;Experiment.objects.distinct('change__abs')&lt;/code&gt; generates:</source>
          <target state="translated">在支持不同字段的数据库上（例如PostgreSQL）， &lt;code&gt;Experiment.objects.distinct('change__abs')&lt;/code&gt; 会生成：</target>
        </trans-unit>
        <trans-unit id="69e0e14986a207d85dd815a22886b945871f3a0c" translate="yes" xml:space="preserve">
          <source>And one required method:</source>
          <target state="translated">还有一个必要的方法。</target>
        </trans-unit>
        <trans-unit id="8939b75db788e776e0ebb67584800991f6f44cb3" translate="yes" xml:space="preserve">
          <source>And so on. In effect, we are using the tests to tell a story of admin input and user experience on the site, and checking that at every state and for every new change in the state of the system, the expected results are published.</source>
          <target state="translated">以此类推。实际上,我们是用测试来讲述网站上的管理员投入和用户体验的故事,并检查在每一个状态和系统状态的每一个新变化,都会发布预期的结果。</target>
        </trans-unit>
        <trans-unit id="116552834b156417c58cbe981b1c02c3e334ad4f" translate="yes" xml:space="preserve">
          <source>And speaking of forms with dozens of fields, you might want to split the form up into fieldsets:</source>
          <target state="translated">说到有几十个字段的表单,你可能想把表单分成几个字段集。</target>
        </trans-unit>
        <trans-unit id="d2afd6d3f3b296fe1c08c8b4bd7068fb7e83d7b2" translate="yes" xml:space="preserve">
          <source>And that&amp;rsquo;s it! Every time the &lt;code&gt;bad_mojo&lt;/code&gt; condition is activated, an error log record will be written.</source>
          <target state="translated">就是这样！每次 &lt;code&gt;bad_mojo&lt;/code&gt; 条件被激活时，都会写入一个错误日志记录。</target>
        </trans-unit>
        <trans-unit id="bcfe3c0f395badbeb6a1fad7612c3793afe4eb8a" translate="yes" xml:space="preserve">
          <source>And that&amp;rsquo;s it! If we placed this file in the &lt;code&gt;templates/admin/my_app&lt;/code&gt; directory, our link would appear on the change form for all models within my_app.</source>
          <target state="translated">就是这样！如果我们将此文件放置在 &lt;code&gt;templates/admin/my_app&lt;/code&gt; 目录中，则链接将显示在my_app中所有模型的更改表单上。</target>
        </trans-unit>
        <trans-unit id="07e887c0940acf021ebba5ade747fc8fbec51123" translate="yes" xml:space="preserve">
          <source>And the accompanying URLconf:</source>
          <target state="translated">而配套的URLconf。</target>
        </trans-unit>
        <trans-unit id="eab402753ae334de81ac60191919efb50b4bc242" translate="yes" xml:space="preserve">
          <source>And the template:</source>
          <target state="translated">还有模板。</target>
        </trans-unit>
        <trans-unit id="9b52dd3016f5a17d966f982881e55520530da65e" translate="yes" xml:space="preserve">
          <source>And the view:</source>
          <target state="translated">还有这景色。</target>
        </trans-unit>
        <trans-unit id="a697ce9cc8667c8e9256c8d32cb413cc810723e1" translate="yes" xml:space="preserve">
          <source>And then later:</source>
          <target state="translated">再后来。</target>
        </trans-unit>
        <trans-unit id="ee6c7a92a558879bf024246e43dd7ff7bd50e6b3" translate="yes" xml:space="preserve">
          <source>And then use it to query for a particular &lt;a href=&quot;auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt;, or to get access to the &lt;code&gt;User&lt;/code&gt; model class:</source>
          <target state="translated">然后使用它来查询特定的&lt;a href=&quot;auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;或访问 &lt;code&gt;User&lt;/code&gt; 模型类：</target>
        </trans-unit>
        <trans-unit id="1098706171a72ea5de650d6dada38e6c6afa8002" translate="yes" xml:space="preserve">
          <source>And to find whether a queryset contains any items:</source>
          <target state="translated">并查找一个queryset是否包含任何项目。</target>
        </trans-unit>
        <trans-unit id="869524675f01329a247aa1f09e51825df4ec11fc" translate="yes" xml:space="preserve">
          <source>And to store numbers up to approximately one billion with a resolution of 10 decimal places:</source>
          <target state="translated">并可存储高达约10亿的数字,分辨率为10位小数。</target>
        </trans-unit>
        <trans-unit id="122dc325cc02b859f8d88f5588295d211a44e206" translate="yes" xml:space="preserve">
          <source>And we also want a router that sends all other apps to the primary/replica configuration, and randomly chooses a replica to read from:</source>
          <target state="translated">而且我们还想让一个路由器将所有其他应用发送到主/副本配置,并随机选择一个副本来读取。</target>
        </trans-unit>
        <trans-unit id="8e49b4c10f64ab640d69b1da323441187a6908f6" translate="yes" xml:space="preserve">
          <source>And you can clear from the other end:</source>
          <target state="translated">而你可以从另一端清除。</target>
        </trans-unit>
        <trans-unit id="82df6ae1054c31cec6c0f243a78e94fb29b9663d" translate="yes" xml:space="preserve">
          <source>Annotated values can also be filtered. The alias for the annotation can be used in &lt;code&gt;filter()&lt;/code&gt; and &lt;code&gt;exclude()&lt;/code&gt; clauses in the same way as any other model field.</source>
          <target state="translated">带注释的值也可以过滤。注释的别名可以在 &lt;code&gt;filter()&lt;/code&gt; 和 &lt;code&gt;exclude()&lt;/code&gt; 子句中使用，方法与其他任何模型字段相同。</target>
        </trans-unit>
        <trans-unit id="b554aee820c7e57ad49dd7b64f3173f5d178236d" translate="yes" xml:space="preserve">
          <source>Annotates each object in the &lt;code&gt;QuerySet&lt;/code&gt; with the provided list of &lt;a href=&quot;expressions&quot;&gt;query expressions&lt;/a&gt;. An expression may be a simple value, a reference to a field on the model (or any related models), or an aggregate expression (averages, sums, etc.) that has been computed over the objects that are related to the objects in the &lt;code&gt;QuerySet&lt;/code&gt;.</source>
          <target state="translated">使用提供的&lt;a href=&quot;expressions&quot;&gt;查询表达式&lt;/a&gt;列表注释 &lt;code&gt;QuerySet&lt;/code&gt; 中的每个对象。表达式可以是简单值，对模型（或任何相关模型）上字段的引用，也可以是针对与对象中的对象相关的对象计算出的聚合表达式（平均值，总和等）。 &lt;code&gt;QuerySet&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="829792c80022a8daeaba47c149334e000c254d65" translate="yes" xml:space="preserve">
          <source>Annotations can be used as a basis for ordering. When you define an &lt;code&gt;order_by()&lt;/code&gt; clause, the aggregates you provide can reference any alias defined as part of an &lt;code&gt;annotate()&lt;/code&gt; clause in the query.</source>
          <target state="translated">注释可以用作订购的基础。当您定义 &lt;code&gt;order_by()&lt;/code&gt; 子句时，您提供的聚合可以引用在查询中定义为 &lt;code&gt;annotate()&lt;/code&gt; 子句一部分的任何别名。</target>
        </trans-unit>
        <trans-unit id="3e92b3487e05d5f47d7725bc0a904c803488d603" translate="yes" xml:space="preserve">
          <source>Annotations specified using keyword arguments will use the keyword as the alias for the annotation. Anonymous arguments will have an alias generated for them based upon the name of the aggregate function and the model field that is being aggregated. Only aggregate expressions that reference a single field can be anonymous arguments. Everything else must be a keyword argument.</source>
          <target state="translated">使用关键字参数指定的注释将使用关键字作为注释的别名。匿名参数将根据聚合函数的名称和被聚合的模型字段为其生成一个别名。只有引用单个字段的聚合表达式才能成为匿名参数。其他一切都必须是关键字参数。</target>
        </trans-unit>
        <trans-unit id="88461f63d604b59172c0ff0ab1c649468d205b75" translate="yes" xml:space="preserve">
          <source>Another approach is to use a &amp;ldquo;dumb&amp;rdquo; SMTP server that receives the emails locally and displays them to the terminal, but does not actually send anything. Python has a built-in way to accomplish this with a single command:</source>
          <target state="translated">另一种方法是使用&amp;ldquo;哑&amp;rdquo; SMTP服务器，该服务器在本地接收电子邮件并将其显示给终端，但实际上不发送任何内容。Python有一个内置的方法可以通过一个命令来完成此任务：</target>
        </trans-unit>
        <trans-unit id="ba396ad6193b9ca5749ed17aafe362419ec415c8" translate="yes" xml:space="preserve">
          <source>Another approach to searching is trigram similarity. A trigram is a group of three consecutive characters. In addition to the &lt;a href=&quot;lookups#std:fieldlookup-trigram_similar&quot;&gt;&lt;code&gt;trigram_similar&lt;/code&gt;&lt;/a&gt; lookup, you can use a couple of other expressions.</source>
          <target state="translated">搜索的另一种方法是三字组相似度。三字母组是一组三个连续的字符。除了&lt;a href=&quot;lookups#std:fieldlookup-trigram_similar&quot;&gt; &lt;code&gt;trigram_similar&lt;/code&gt; &lt;/a&gt;查找之外，您还可以使用其他几个表达式。</target>
        </trans-unit>
        <trans-unit id="21ba367c9e3496589a56140d591b0ffe544a18b6" translate="yes" xml:space="preserve">
          <source>Another common need is to filter down the objects given in a list page by some key in the URL. Earlier we hard-coded the publisher&amp;rsquo;s name in the URLconf, but what if we wanted to write a view that displayed all the books by some arbitrary publisher?</source>
          <target state="translated">另一个常见的需求是通过URL中的某些键过滤列表页面中给定的对象。早些时候，我们在URLconf中硬编码了出版商的名称，但是如果我们想编写一个视图来显示某个任意出版商的所有书籍，该怎么办？</target>
        </trans-unit>
        <trans-unit id="45940903ef290c6607fb9dc48fca66f59422159d" translate="yes" xml:space="preserve">
          <source>Another common pattern is writing custom SQL statements in model methods and module-level methods. For more details on using raw SQL, see the documentation on &lt;a href=&quot;sql&quot;&gt;using raw SQL&lt;/a&gt;.</source>
          <target state="translated">另一个常见的模式是在模型方法和模块级方法中编写自定义SQL语句。有关使用原始SQL的更多详细信息，请参阅有关&lt;a href=&quot;sql&quot;&gt;使用原始SQL&lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="8a290b2c69d35adb6da1a5bfba443ced0c880483" translate="yes" xml:space="preserve">
          <source>Another common setup is to use flat pages for a limited set of known pages and to hard code the urls, so you can reference them with the &lt;a href=&quot;../templates/builtins#std:templatetag-url&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; template tag:</source>
          <target state="translated">另一种常见的设置是将平面页面用于有限的一组已知页面，并对URL进行硬编码，因此您可以使用&lt;a href=&quot;../templates/builtins#std:templatetag-url&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt; template标签引用它们：</target>
        </trans-unit>
        <trans-unit id="a1577f6aa21d88594318532f249d8835a0c12d0e" translate="yes" xml:space="preserve">
          <source>Another common tactic is to serve static files from a cloud storage provider like Amazon&amp;rsquo;s S3 and/or a CDN (content delivery network). This lets you ignore the problems of serving static files and can often make for faster-loading Web pages (especially when using a CDN).</source>
          <target state="translated">另一个常见的策略是从云存储提供商（如Amazon的S3和/或CDN（内容交付网络））提供静态文件。这使您可以忽略提供静态文件的问题，并且通常可以使网页加载速度更快（尤其是在使用CDN时）​​。</target>
        </trans-unit>
        <trans-unit id="87f01f544f559b7fee6f441175ba35e7b16c744c" translate="yes" xml:space="preserve">
          <source>Another common type of template tag is the type that displays some data by rendering &lt;em&gt;another&lt;/em&gt; template. For example, Django&amp;rsquo;s admin interface uses custom template tags to display the buttons along the bottom of the &amp;ldquo;add/change&amp;rdquo; form pages. Those buttons always look the same, but the link targets change depending on the object being edited &amp;ndash; so they&amp;rsquo;re a perfect case for using a small template that is filled with details from the current object. (In the admin&amp;rsquo;s case, this is the &lt;code&gt;submit_row&lt;/code&gt; tag.)</source>
          <target state="translated">模板标记的另一种常见类型是通过渲染&lt;em&gt;另一个&lt;/em&gt;模板来显示一些数据的类型。例如，Django的管理界面使用自定义模板标签在&amp;ldquo;添加/更改&amp;rdquo;表单页面的底部显示按钮。这些按钮看起来总是相同的，但是链接目标会根据正在编辑的对象而变化&amp;ndash;因此，它们是使用填充有当前对象详细信息的小型模板的理想案例。（对于管理员来说，这是 &lt;code&gt;submit_row&lt;/code&gt; 标记。）</target>
        </trans-unit>
        <trans-unit id="f0f51871d5071d412fc32544909d6747215d5a77" translate="yes" xml:space="preserve">
          <source>Another consideration is that the context data from class-based generic views will override data provided by context processors; see &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin.get_context_data&quot;&gt;&lt;code&gt;get_context_data()&lt;/code&gt;&lt;/a&gt; for an example.</source>
          <target state="translated">另一个考虑是基于类的通用视图的上下文数据将覆盖上下文处理器提供的数据。有关示例，请参见&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin.get_context_data&quot;&gt; &lt;code&gt;get_context_data()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b24e12dd9fad842cfca1849299590204ccaf993" translate="yes" xml:space="preserve">
          <source>Another difference from one-to-many relationships is that in addition to model instances, the &lt;code&gt;add()&lt;/code&gt;, &lt;code&gt;set()&lt;/code&gt;, and &lt;code&gt;remove()&lt;/code&gt; methods on many-to-many relationships accept primary key values. For example, if &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt; are &lt;code&gt;Entry&lt;/code&gt; instances, then these &lt;code&gt;set()&lt;/code&gt; calls work identically:</source>
          <target state="translated">与一对多关系的另一个区别是，除模型实例外，多对多关系上的 &lt;code&gt;add()&lt;/code&gt; ， &lt;code&gt;set()&lt;/code&gt; 和 &lt;code&gt;remove()&lt;/code&gt; 方法还接受主键值。例如，如果 &lt;code&gt;e1&lt;/code&gt; 和 &lt;code&gt;e2&lt;/code&gt; 是 &lt;code&gt;Entry&lt;/code&gt; 实例，则这些 &lt;code&gt;set()&lt;/code&gt; 调用的工作方式相同：</target>
        </trans-unit>
        <trans-unit id="b9a69673a48bf9c65937988bc581b8dc380dd048" translate="yes" xml:space="preserve">
          <source>Another example would be a backend that only handles writing to files. In this case, you would not need to implement any of the above methods.</source>
          <target state="translated">另一个例子是一个只处理向文件写入的后端。在这种情况下,你不需要实现上述任何方法。</target>
        </trans-unit>
        <trans-unit id="dedf5ccdeb6bf446ef7cfb01d8db4c4b042b2078" translate="yes" xml:space="preserve">
          <source>Another example:</source>
          <target state="translated">另一个例子:</target>
        </trans-unit>
        <trans-unit id="4986e55d85710f6d524794428b573b2ea0944346" translate="yes" xml:space="preserve">
          <source>Another feature &lt;code&gt;{% blocktrans %}&lt;/code&gt; supports is the &lt;code&gt;trimmed&lt;/code&gt; option. This option will remove newline characters from the beginning and the end of the content of the &lt;code&gt;{% blocktrans %}&lt;/code&gt; tag, replace any whitespace at the beginning and end of a line and merge all lines into one using a space character to separate them. This is quite useful for indenting the content of a &lt;code&gt;{%
blocktrans %}&lt;/code&gt; tag without having the indentation characters end up in the corresponding entry in the PO file, which makes the translation process easier.</source>
          <target state="translated">另一个特点 &lt;code&gt;{% blocktrans %}&lt;/code&gt; 支持是 &lt;code&gt;trimmed&lt;/code&gt; 选项。此选项将从 &lt;code&gt;{% blocktrans %}&lt;/code&gt; 标签内容的开头和结尾删除换行符，替换行首和结尾的所有空格，并使用空格字符将所有行合并为一个空格。这对于缩进 &lt;code&gt;{% blocktrans %}&lt;/code&gt; 标签的内容非常有用，而缩进字符不会出现在PO文件中的相应条目中，这使翻译过程更加容易。</target>
        </trans-unit>
        <trans-unit id="42720cdbeb26755545dc879495f797069e58d4ab" translate="yes" xml:space="preserve">
          <source>Another feature &lt;code&gt;{% blocktranslate %}&lt;/code&gt; supports is the &lt;code&gt;trimmed&lt;/code&gt; option. This option will remove newline characters from the beginning and the end of the content of the &lt;code&gt;{% blocktranslate %}&lt;/code&gt; tag, replace any whitespace at the beginning and end of a line and merge all lines into one using a space character to separate them. This is quite useful for indenting the content of a &lt;code&gt;{% blocktranslate %}&lt;/code&gt; tag without having the indentation characters end up in the corresponding entry in the PO file, which makes the translation process easier.</source>
          <target state="translated">另一个特点 &lt;code&gt;{% blocktranslate %}&lt;/code&gt; 支持是 &lt;code&gt;trimmed&lt;/code&gt; 选项。此选项将从 &lt;code&gt;{% blocktranslate %}&lt;/code&gt; 标签内容的开头和结尾删除换行符，替换行首和结尾的所有空格，并使用空格字符将所有行合并为一个空格。这对于缩进 &lt;code&gt;{% blocktranslate %}&lt;/code&gt; 标记的内容而没有缩进字符最终出现在PO文件中的相应条目中非常有用，这使翻译过程更加容易。</target>
        </trans-unit>
        <trans-unit id="f6f38b8bf22ce33d0915eebda059aeb43f57443f" translate="yes" xml:space="preserve">
          <source>Another option is to add the required hosts to &lt;a href=&quot;../../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt;&lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;&lt;/a&gt; using &lt;a href=&quot;tools#django.test.override_settings&quot;&gt;&lt;code&gt;override_settings()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;tools#django.test.SimpleTestCase.modify_settings&quot;&gt;&lt;code&gt;modify_settings()&lt;/code&gt;&lt;/a&gt;. This option may be preferable in standalone apps that can&amp;rsquo;t package their own settings file or for projects where the list of domains is not static (e.g., subdomains for multitenancy). For example, you could write a test for the domain &lt;code&gt;http://otherserver/&lt;/code&gt; as follows:</source>
          <target state="translated">另一种选择是使用&lt;a href=&quot;tools#django.test.override_settings&quot;&gt; &lt;code&gt;override_settings()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;tools#django.test.SimpleTestCase.modify_settings&quot;&gt; &lt;code&gt;modify_settings()&lt;/code&gt; &lt;/a&gt;将所需的主机添加到&lt;a href=&quot;../../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt; &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; 中&lt;/a&gt;。在不能打包自己的设置文件的独立应用程序中，或者对于域列表不是静态的项目（例如，多租户的子域），该选项可能更可取。例如，您可以为域 &lt;code&gt;http://otherserver/&lt;/code&gt; 编写测试，如下所示：</target>
        </trans-unit>
        <trans-unit id="86cbfa1018d17aad7dbbe0a2952b209be21563af" translate="yes" xml:space="preserve">
          <source>Another option is to configure class attributes as keyword arguments to the &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt;&lt;code&gt;as_view()&lt;/code&gt;&lt;/a&gt; call in the URLconf:</source>
          <target state="translated">另一种选择是将类属性配置为URLconf中&lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt; &lt;code&gt;as_view()&lt;/code&gt; &lt;/a&gt;调用的关键字参数：</target>
        </trans-unit>
        <trans-unit id="0e2072ae951398dc6d033749ffe3f4ec2a9529ef" translate="yes" xml:space="preserve">
          <source>Another option is to use &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.namedtuple&quot;&gt;&lt;code&gt;collections.namedtuple()&lt;/code&gt;&lt;/a&gt; from the Python standard library. A &lt;code&gt;namedtuple&lt;/code&gt; is a tuple-like object that has fields accessible by attribute lookup; it&amp;rsquo;s also indexable and iterable. Results are immutable and accessible by field names or indices, which might be useful:</source>
          <target state="translated">另一个选择是使用Python标准库中的&lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.namedtuple&quot;&gt; &lt;code&gt;collections.namedtuple()&lt;/code&gt; &lt;/a&gt;。甲 &lt;code&gt;namedtuple&lt;/code&gt; 是一个元组状物体，其具有由属性查找可用的字段; 它也是可索引和可​​迭代的。结果是不变的，可以通过字段名称或索引访问，这可能会有用：</target>
        </trans-unit>
        <trans-unit id="b600586952a903b98a1e51daa4f184b2a654da9b" translate="yes" xml:space="preserve">
          <source>Another option is to use the &lt;code&gt;init_command&lt;/code&gt; option for MySQLdb prior to creating your tables:</source>
          <target state="translated">另一种选择是在创建表之前对MySQLdb 使用 &lt;code&gt;init_command&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="4c3275efd45f8519667225b74be1bee3394ee839" translate="yes" xml:space="preserve">
          <source>Another option is to use the constructor for the specific geometry type that you wish to create. For example, a &lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt; object may be created by passing in the X and Y coordinates into its constructor:</source>
          <target state="translated">另一种选择是将构造函数用于要创建的特定几何类型。例如，可以通过将X和Y坐标传入其构造函数来创建&lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt; &lt;code&gt;Point&lt;/code&gt; &lt;/a&gt;对象：</target>
        </trans-unit>
        <trans-unit id="5712178c1bd67ebd8b516f654132f1288bddf9c3" translate="yes" xml:space="preserve">
          <source>Another option is to wrap each &lt;code&gt;QuerySet&lt;/code&gt; using server-side cursors in an &lt;a href=&quot;../topics/db/transactions#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; block, because it disables &lt;code&gt;autocommit&lt;/code&gt; for the duration of the transaction. This way, the server-side cursor will only live for the duration of the transaction.</source>
          <target state="translated">另一个选择是使用服务器端游标将每个 &lt;code&gt;QuerySet&lt;/code&gt; 包装在&lt;a href=&quot;../topics/db/transactions#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt;块中，因为它在事务期间禁用 &lt;code&gt;autocommit&lt;/code&gt; 。这样，服务器端游标将仅在事务期间有效。</target>
        </trans-unit>
        <trans-unit id="5a4aa7df42c54947c30745a80b3d8f27cb3b16d7" translate="yes" xml:space="preserve">
          <source>Another possibility is to include additional URL patterns by using a list of &lt;a href=&quot;../../ref/urls#django.urls.path&quot;&gt;&lt;code&gt;path()&lt;/code&gt;&lt;/a&gt; instances. For example, consider this URLconf:</source>
          <target state="translated">另一种可能性是通过使用&lt;a href=&quot;../../ref/urls#django.urls.path&quot;&gt; &lt;code&gt;path()&lt;/code&gt; &lt;/a&gt;实例列表包括其他URL模式。例如，考虑以下URLconf：</target>
        </trans-unit>
        <trans-unit id="8351180c3ac17f96e32412d210d1d3655c0a4ab4" translate="yes" xml:space="preserve">
          <source>Another possible attack would be if &lt;code&gt;good.example.com&lt;/code&gt; sets its &lt;a href=&quot;../../ref/settings#std:setting-SESSION_COOKIE_DOMAIN&quot;&gt;&lt;code&gt;SESSION_COOKIE_DOMAIN&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;&quot;example.com&quot;&lt;/code&gt; which would cause session cookies from that site to be sent to &lt;code&gt;bad.example.com&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;good.example.com&lt;/code&gt; 将其&lt;a href=&quot;../../ref/settings#std:setting-SESSION_COOKIE_DOMAIN&quot;&gt; &lt;code&gt;SESSION_COOKIE_DOMAIN&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;&quot;example.com&quot;&lt;/code&gt; ，则可能会导致来自该站点的会话Cookie发送到 &lt;code&gt;bad.example.com&lt;/code&gt; ，这是另一种可能的攻击方式。</target>
        </trans-unit>
        <trans-unit id="634ae931c8918bb787c1ab614abd3ba33818e955" translate="yes" xml:space="preserve">
          <source>Another side effect of using &lt;code&gt;commit=False&lt;/code&gt; is seen when your model has a many-to-many relation with another model. If your model has a many-to-many relation and you specify &lt;code&gt;commit=False&lt;/code&gt; when you save a form, Django cannot immediately save the form data for the many-to-many relation. This is because it isn&amp;rsquo;t possible to save many-to-many data for an instance until the instance exists in the database.</source>
          <target state="translated">当您的模型与另一个模型具有多对多关系时，会看到使用 &lt;code&gt;commit=False&lt;/code&gt; 的另一个副作用。如果您的模型具有多对多关系，并且在保存表单时指定了 &lt;code&gt;commit=False&lt;/code&gt; ，则Django无法立即为多对多关系保存表单数据。这是因为在实例存在于数据库中之前，无法保存该实例的多对多数据。</target>
        </trans-unit>
        <trans-unit id="19a769a5876c833200ddb5a61c4aac99cdd61a35" translate="yes" xml:space="preserve">
          <source>Another solution is to sort the data in the template using the &lt;a href=&quot;#std:templatefilter-dictsort&quot;&gt;&lt;code&gt;dictsort&lt;/code&gt;&lt;/a&gt; filter, if your data is in a list of dictionaries:</source>
          <target state="translated">另一个解决方案是，如果您的数据在词典列表中，则使用&lt;a href=&quot;#std:templatefilter-dictsort&quot;&gt; &lt;code&gt;dictsort&lt;/code&gt; &lt;/a&gt;过滤器对模板中的数据进行排序：</target>
        </trans-unit>
        <trans-unit id="e2bcb7bd2a2294b9fd69bcc472db817498190e7c" translate="yes" xml:space="preserve">
          <source>Another thing to note about this example is that &lt;code&gt;Manager&lt;/code&gt; methods can access &lt;code&gt;self.model&lt;/code&gt; to get the model class to which they&amp;rsquo;re attached.</source>
          <target state="translated">关于此示例的另一件事要注意的是， &lt;code&gt;Manager&lt;/code&gt; 方法可以访问 &lt;code&gt;self.model&lt;/code&gt; 以获得它们所附加的模型类。</target>
        </trans-unit>
        <trans-unit id="c24ed1973db71e4a285cbe24ded0d0a7d1fac1f2" translate="yes" xml:space="preserve">
          <source>Another useful benefit of &lt;code&gt;F()&lt;/code&gt; is that having the database - rather than Python - update a field&amp;rsquo;s value avoids a &lt;em&gt;race condition&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;F()&lt;/code&gt; 的另一个有用的好处是让数据库（而不是Python）更新字段的值避免了&lt;em&gt;竞争情况&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="350b06198d36b009231e64363f3cd68696d2c3fb" translate="yes" xml:space="preserve">
          <source>Another way to access the same information is by querying the &lt;a href=&quot;queries#m2m-reverse-relationships&quot;&gt;many-to-many reverse relationship&lt;/a&gt; from a &lt;code&gt;Person&lt;/code&gt; object:</source>
          <target state="translated">访问同一信息的另一种方式是通过查询&lt;a href=&quot;queries#m2m-reverse-relationships&quot;&gt;许多一对多相反的关系&lt;/a&gt;从 &lt;code&gt;Person&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="c6720499a689b825b3931c9adad686693b94d7ca" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; that is associated with an object (as with &lt;code&gt;Car.photo&lt;/code&gt;, below) will also have a couple of extra methods:</source>
          <target state="translated">与对象关联的任何&lt;a href=&quot;#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;（如下面的 &lt;code&gt;Car.photo&lt;/code&gt; 一样）还将具有几个额外的方法：</target>
        </trans-unit>
        <trans-unit id="259f07ccd997e3ebbc7533171ea4ac71a43f828b" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;Car&lt;/code&gt; instance will have a &lt;code&gt;photo&lt;/code&gt; attribute that you can use to get at the details of the attached photo:</source>
          <target state="translated">任何 &lt;code&gt;Car&lt;/code&gt; 实例都将具有 &lt;code&gt;photo&lt;/code&gt; 属性，可用于获取附件照片的详细信息：</target>
        </trans-unit>
        <trans-unit id="82f12e18262dfa08be2fd8dc34797d2dadcfa0eb" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;choices&lt;/code&gt; attribute set on the formfield will be limited to the form field only. If the corresponding field on the model has choices set, the choices provided to the form must be a valid subset of those choices, otherwise the form submission will fail with a &lt;a href=&quot;../../exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; when the model itself is validated before saving.</source>
          <target state="translated">任何 &lt;code&gt;choices&lt;/code&gt; 在formfield设置属性将仅限于表单字段。如果模型上的相应字段设置了选项，则提供给表单的选项必须是这些选项的有效子集，否则在保存之前&lt;a href=&quot;../../exceptions#django.core.exceptions.ValidationError&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; &lt;/a&gt;模型本身时，表单提交将失败，并带有ValidationError。</target>
        </trans-unit>
        <trans-unit id="3cfcbfb5e16e8c8b294fbb366355136915411066" translate="yes" xml:space="preserve">
          <source>Any Django field</source>
          <target state="translated">任何Django字段</target>
        </trans-unit>
        <trans-unit id="f52c2bd963740dcc4cc74100e5cb34b31d2ff1f6" translate="yes" xml:space="preserve">
          <source>Any arguments following a &lt;code&gt;--&lt;/code&gt; divider will be passed on to the underlying command-line client. For example, with PostgreSQL you can use the &lt;code&gt;psql&lt;/code&gt; command&amp;rsquo;s &lt;code&gt;-c&lt;/code&gt; flag to execute a raw SQL query directly:</source>
          <target state="translated">&lt;code&gt;--&lt;/code&gt; 分隔符之后的所有参数都将传递给基础命令行客户端。例如，对于PostgreSQL，您可以使用 &lt;code&gt;psql&lt;/code&gt; 命令的 &lt;code&gt;-c&lt;/code&gt; 标志直接执行原始SQL查询：</target>
        </trans-unit>
        <trans-unit id="0943bcec768321ce586e2262a98b924049a43318" translate="yes" xml:space="preserve">
          <source>Any arguments passed to &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt;&lt;code&gt;as_view()&lt;/code&gt;&lt;/a&gt; will override attributes set on the class. In this example, we set &lt;code&gt;template_name&lt;/code&gt; on the &lt;code&gt;TemplateView&lt;/code&gt;. A similar overriding pattern can be used for the &lt;code&gt;url&lt;/code&gt; attribute on &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.RedirectView&quot;&gt;&lt;code&gt;RedirectView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">传递给&lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt; &lt;code&gt;as_view()&lt;/code&gt; 的&lt;/a&gt;任何参数都将覆盖在类上设置的属性。在此示例中，我们在 &lt;code&gt;TemplateView&lt;/code&gt; 上设置 &lt;code&gt;template_name&lt;/code&gt; 。类似的覆盖模式可以用于&lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.RedirectView&quot;&gt; &lt;code&gt;RedirectView&lt;/code&gt; &lt;/a&gt;上的 &lt;code&gt;url&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="2b95e74b82f7912fd5a57b4159d009906620dcdd" translate="yes" xml:space="preserve">
          <source>Any cached relations are cleared from the reloaded instance.</source>
          <target state="translated">任何缓存的关系都会从重新加载的实例中清除。</target>
        </trans-unit>
        <trans-unit id="87ad20ba32653e2c8263b7d56b8e2b1f508d28d2" translate="yes" xml:space="preserve">
          <source>Any class reference (must be in module&amp;rsquo;s top-level scope)</source>
          <target state="translated">任何类引用（必须在模块的顶级范围内）</target>
        </trans-unit>
        <trans-unit id="d7cfbb9e6237b5e4d9536ebf29c5cc594bad4538" translate="yes" xml:space="preserve">
          <source>Any extra keyword arguments you pass to &lt;code&gt;__init__&lt;/code&gt; will be stored in &lt;code&gt;self.feed&lt;/code&gt; for use with &lt;a href=&quot;#custom-feed-generators&quot;&gt;custom feed generators&lt;/a&gt;.</source>
          <target state="translated">您传递给 &lt;code&gt;__init__&lt;/code&gt; 的所有其他关键字参数都将存储在 &lt;code&gt;self.feed&lt;/code&gt; 中，以便与&lt;a href=&quot;#custom-feed-generators&quot;&gt;自定义feed生成器一起使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e8de9d3cf5f05073aa258263f2473c8604fc0dd" translate="yes" xml:space="preserve">
          <source>Any extra keyword arguments you pass to &lt;code&gt;__init__&lt;/code&gt; will be stored in &lt;code&gt;self.feed&lt;/code&gt;.</source>
          <target state="translated">您传递给 &lt;code&gt;__init__&lt;/code&gt; 的所有其他关键字参数都将存储在 &lt;code&gt;self.feed&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="eaa1bdee468ee233f3d4bef58a335623ca9709d4" translate="yes" xml:space="preserve">
          <source>Any field in &lt;code&gt;list_editable&lt;/code&gt; must also be in &lt;code&gt;list_display&lt;/code&gt;. You can&amp;rsquo;t edit a field that&amp;rsquo;s not displayed!</source>
          <target state="translated">&lt;code&gt;list_editable&lt;/code&gt; 中的任何字段也必须在 &lt;code&gt;list_display&lt;/code&gt; 中。您无法编辑未显示的字段！</target>
        </trans-unit>
        <trans-unit id="bc2c1f8f4f91fd73109d4df0901557ed01d4acba" translate="yes" xml:space="preserve">
          <source>Any fields not included in a form by the above logic will not be set by the form&amp;rsquo;s &lt;code&gt;save()&lt;/code&gt; method. Also, if you manually add the excluded fields back to the form, they will not be initialized from the model instance.</source>
          <target state="translated">上面的逻辑未包含在表单中的任何字段都不会被表单的 &lt;code&gt;save()&lt;/code&gt; 方法设置。此外，如果您手动将排除的字段添加回表单，则不会从模型实例中对其进行初始化。</target>
        </trans-unit>
        <trans-unit id="d0f265b427e58215ab20a4d836d7f8c516eb4a51" translate="yes" xml:space="preserve">
          <source>Any fields that are stored with &lt;code&gt;VARCHAR&lt;/code&gt; column types have their &lt;code&gt;max_length&lt;/code&gt; restricted to 255 characters if you are using &lt;code&gt;unique=True&lt;/code&gt; for the field. This affects &lt;a href=&quot;models/fields#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;models/fields#django.db.models.SlugField&quot;&gt;&lt;code&gt;SlugField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您对字段使用 &lt;code&gt;unique=True&lt;/code&gt; ，则使用 &lt;code&gt;VARCHAR&lt;/code&gt; 列类型存储的任何字段的 &lt;code&gt;max_length&lt;/code&gt; 限制为255个字符。这会影响&lt;a href=&quot;models/fields#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;models/fields#django.db.models.SlugField&quot;&gt; &lt;code&gt;SlugField&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="361ed15fdbee1edcf82d9d0eaab3f6d9d5c09eb3" translate="yes" xml:space="preserve">
          <source>Any fields that are stored with &lt;code&gt;VARCHAR&lt;/code&gt; column types may have their &lt;code&gt;max_length&lt;/code&gt; restricted to 255 characters if you are using &lt;code&gt;unique=True&lt;/code&gt; for the field. This affects &lt;a href=&quot;models/fields#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;models/fields#django.db.models.SlugField&quot;&gt;&lt;code&gt;SlugField&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/create-index.html#create-index-column-prefixes&quot;&gt;the MySQL documentation&lt;/a&gt; for more details.</source>
          <target state="translated">如果您对字段使用 &lt;code&gt;unique=True&lt;/code&gt; ，则使用 &lt;code&gt;VARCHAR&lt;/code&gt; 列类型存储的任何字段的 &lt;code&gt;max_length&lt;/code&gt; 都可能限制为255个字符。这会影响&lt;a href=&quot;models/fields#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;models/fields#django.db.models.SlugField&quot;&gt; &lt;code&gt;SlugField&lt;/code&gt; &lt;/a&gt;。有关更多详细信息，请参见&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/create-index.html#create-index-column-prefixes&quot;&gt;MySQL文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23d9acd68c46ec11121d32d169fe6c012befed6e" translate="yes" xml:space="preserve">
          <source>Any fields used in an &lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt; call are included in the SQL &lt;code&gt;SELECT&lt;/code&gt; columns. This can sometimes lead to unexpected results when used in conjunction with &lt;code&gt;distinct()&lt;/code&gt;. If you order by fields from a related model, those fields will be added to the selected columns and they may make otherwise duplicate rows appear to be distinct. Since the extra columns don&amp;rsquo;t appear in the returned results (they are only there to support ordering), it sometimes looks like non-distinct results are being returned.</source>
          <target state="translated">在使用的任何字段&lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt; &lt;code&gt;order_by()&lt;/code&gt; &lt;/a&gt;调用包括在SQL &lt;code&gt;SELECT&lt;/code&gt; 列。与 &lt;code&gt;distinct()&lt;/code&gt; 结合使用时，有时可能会导致意外结果。如果按相关模型中的字段排序，则这些字段将添加到选定的列中，否则它们可能使重复的行看起来是不同的。由于多余的列不会出现在返回的结果中（它们仅在此处用于支持排序），因此有时看起来好像正在返回不明显的结果。</target>
        </trans-unit>
        <trans-unit id="389de725feff980095e919bb4630a4b7aa4cbedb" translate="yes" xml:space="preserve">
          <source>Any function or method reference (e.g. &lt;code&gt;datetime.datetime.today&lt;/code&gt;) (must be in module&amp;rsquo;s top-level scope)</source>
          <target state="translated">任何函数或方法引用（例如 &lt;code&gt;datetime.datetime.today&lt;/code&gt; ）（必须在模块的顶级范围内）</target>
        </trans-unit>
        <trans-unit id="340f6cd4cdae6a9fe26ccc2c1321f21a7a65b64b" translate="yes" xml:space="preserve">
          <source>Any help text that has been associated with the field.</source>
          <target state="translated">与该字段相关联的任何帮助文本。</target>
        </trans-unit>
        <trans-unit id="a4d976c10e6d33bf9091130ca4635d6f2a79ca77" translate="yes" xml:space="preserve">
          <source>Any initial data loaded in migrations will only be available in &lt;code&gt;TestCase&lt;/code&gt; tests and not in &lt;code&gt;TransactionTestCase&lt;/code&gt; tests, and additionally only on backends where transactions are supported (the most important exception being MyISAM). This is also true for tests which rely on &lt;code&gt;TransactionTestCase&lt;/code&gt; such as &lt;a href=&quot;tools#django.test.LiveServerTestCase&quot;&gt;&lt;code&gt;LiveServerTestCase&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/contrib/staticfiles#django.contrib.staticfiles.testing.StaticLiveServerTestCase&quot;&gt;&lt;code&gt;StaticLiveServerTestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">迁移中加载的所有初始数据仅在 &lt;code&gt;TestCase&lt;/code&gt; 测试中可用，而在 &lt;code&gt;TransactionTestCase&lt;/code&gt; 测试中不可用，此外，仅在支持事务的后端上可用（最重要的例外是MyISAM）。对于依赖 &lt;code&gt;TransactionTestCase&lt;/code&gt; 的测试（例如&lt;a href=&quot;tools#django.test.LiveServerTestCase&quot;&gt; &lt;code&gt;LiveServerTestCase&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ref/contrib/staticfiles#django.contrib.staticfiles.testing.StaticLiveServerTestCase&quot;&gt; &lt;code&gt;StaticLiveServerTestCase&lt;/code&gt; &lt;/a&gt;），也是如此。</target>
        </trans-unit>
        <trans-unit id="9f7538d5b082eb7ff86214f434df9e9db4b7599c" translate="yes" xml:space="preserve">
          <source>Any items in the &lt;code&gt;OPTIONS&lt;/code&gt; in &lt;a href=&quot;../../ref/settings#std:setting-AUTH_PASSWORD_VALIDATORS&quot;&gt;&lt;code&gt;AUTH_PASSWORD_VALIDATORS&lt;/code&gt;&lt;/a&gt; for your validator will be passed to the constructor. All constructor arguments should have a default value.</source>
          <target state="translated">验证者在&lt;a href=&quot;../../ref/settings#std:setting-AUTH_PASSWORD_VALIDATORS&quot;&gt; &lt;code&gt;AUTH_PASSWORD_VALIDATORS&lt;/code&gt; &lt;/a&gt;中的 &lt;code&gt;OPTIONS&lt;/code&gt; 中的任何项目都将传递给构造函数。所有构造函数参数都应具有默认值。</target>
        </trans-unit>
        <trans-unit id="269822aff3cab02690efcc28e3a2fadd4d2d5a67" translate="yes" xml:space="preserve">
          <source>Any keyword arguments passed to &lt;code&gt;get_or_create()&lt;/code&gt; &amp;mdash; &lt;em&gt;except&lt;/em&gt; an optional one called &lt;code&gt;defaults&lt;/code&gt; &amp;mdash; will be used in a &lt;a href=&quot;#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; call. If an object is found, &lt;code&gt;get_or_create()&lt;/code&gt; returns a tuple of that object and &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">传递给任何关键字参数 &lt;code&gt;get_or_create()&lt;/code&gt; - &lt;em&gt;除&lt;/em&gt;可选一个名为 &lt;code&gt;defaults&lt;/code&gt; -将被用&lt;a href=&quot;#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; 方法&lt;/a&gt;调用。如果找到对象，则 &lt;code&gt;get_or_create()&lt;/code&gt; 返回该对象的元组和 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa00f3f233bd76654fd4c34e32d4e0293431a21f" translate="yes" xml:space="preserve">
          <source>Any migration can be reverted with &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; by using the number of previous migrations:</source>
          <target state="translated">通过使用先前的迁移次数，可以通过&lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;还原任何迁移：</target>
        </trans-unit>
        <trans-unit id="206cfa10cfb7598b7f46150d0b397fbd96ad0e5a" translate="yes" xml:space="preserve">
          <source>Any object that has a URL that uniquely identifies it should define this method.</source>
          <target state="translated">任何具有唯一标识它的URL的对象都应该定义这个方法。</target>
        </trans-unit>
        <trans-unit id="bff4e22bfefe56190b6103de76226c38c3154301" translate="yes" xml:space="preserve">
          <source>Any option passed to the &lt;code&gt;startapp&lt;/code&gt; command (among the command&amp;rsquo;s supported options)</source>
          <target state="translated">传递给 &lt;code&gt;startapp&lt;/code&gt; 命令的任何选项（在命令的受支持选项中）</target>
        </trans-unit>
        <trans-unit id="9e138beee32bdd3845314ecab39ac8b6f36c0256" translate="yes" xml:space="preserve">
          <source>Any option passed to the &lt;code&gt;startproject&lt;/code&gt; command (among the command&amp;rsquo;s supported options)</source>
          <target state="translated">传递给 &lt;code&gt;startproject&lt;/code&gt; 命令的任何选项（在命令的受支持选项中）</target>
        </trans-unit>
        <trans-unit id="5723036376b87299a4b70f4866a921fb58935b0c" translate="yes" xml:space="preserve">
          <source>Any other day is formatted according to given argument or the &lt;a href=&quot;../settings#std:setting-DATE_FORMAT&quot;&gt;&lt;code&gt;DATE_FORMAT&lt;/code&gt;&lt;/a&gt; setting if no argument is given.</source>
          <target state="translated">如果未提供任何参数，则根据给定的参数或&lt;a href=&quot;../settings#std:setting-DATE_FORMAT&quot;&gt; &lt;code&gt;DATE_FORMAT&lt;/code&gt; &lt;/a&gt;设置格式化其他任何一天。</target>
        </trans-unit>
        <trans-unit id="ab61e75123334a3ff03ee2353a6d3605bcdc00e5" translate="yes" xml:space="preserve">
          <source>Any request that could be used to change the state of the system - for example, a request that makes changes in the database - should use &lt;code&gt;POST&lt;/code&gt;. &lt;code&gt;GET&lt;/code&gt; should be used only for requests that do not affect the state of the system.</source>
          <target state="translated">可以用于更改系统状态的任何请求（例如，对数据库进行更改的请求）都应使用 &lt;code&gt;POST&lt;/code&gt; 。 &lt;code&gt;GET&lt;/code&gt; 仅应用于不影响系统状态的请求。</target>
        </trans-unit>
        <trans-unit id="016a35f4da2b589350ad00d87184ff46d26ee10f" translate="yes" xml:space="preserve">
          <source>Any usage of &lt;a href=&quot;../topics/signing&quot;&gt;cryptographic signing&lt;/a&gt;, unless a different key is provided.</source>
          <target state="translated">&lt;a href=&quot;../topics/signing&quot;&gt;密码签名的&lt;/a&gt;任何用法，除非提供了不同的密钥。</target>
        </trans-unit>
        <trans-unit id="1cef5f901bb8067b01d106ba21a0409d9d05625a" translate="yes" xml:space="preserve">
          <source>Any valid &lt;code&gt;Cache-Control&lt;/code&gt; response directive is valid in &lt;code&gt;cache_control()&lt;/code&gt;. Here are some more examples:</source>
          <target state="translated">任何有效的 &lt;code&gt;Cache-Control&lt;/code&gt; 响应指令在 &lt;code&gt;cache_control()&lt;/code&gt; 中均有效。这里还有更多示例：</target>
        </trans-unit>
        <trans-unit id="08019805145fd9728fd9fa82951bfad51124fe4e" translate="yes" xml:space="preserve">
          <source>Any valid template lookup is a legal grouping attribute for the regroup tag, including methods, attributes, dictionary keys and list items. For example, if the &amp;ldquo;country&amp;rdquo; field is a foreign key to a class with an attribute &amp;ldquo;description,&amp;rdquo; you could use:</source>
          <target state="translated">任何有效的模板查找都是regroup标签的合法分组属性，包括方法，属性，字典键和列表项。例如，如果&amp;ldquo;国家&amp;rdquo;字段是具有属性&amp;ldquo;描述&amp;rdquo;的类的外键，则可以使用：</target>
        </trans-unit>
        <trans-unit id="a547bb66aef536c1758d075687b8c3c012333d15" translate="yes" xml:space="preserve">
          <source>Any variable set in the context will only be available in the same &lt;code&gt;block&lt;/code&gt; of the template in which it was assigned. This behavior is intentional; it provides a scope for variables so that they don&amp;rsquo;t conflict with context in other blocks.</source>
          <target state="translated">上下文中设置的任何变量将仅在分配了该变量的模板的同 &lt;code&gt;block&lt;/code&gt; 中可用。这种行为是故意的；它提供了变量的作用域，以使它们不会与其他块中的上下文冲突。</target>
        </trans-unit>
        <trans-unit id="b921f6c9cdbfc0bbe655c78b4cff9c39227a8ad1" translate="yes" xml:space="preserve">
          <source>Any variables from &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.get_context_data&quot;&gt;&lt;code&gt;get_context_data()&lt;/code&gt;&lt;/a&gt; take precedence over context variables from &lt;a href=&quot;../templates/api#subclassing-context-requestcontext&quot;&gt;context processors&lt;/a&gt;. For example, if your view sets the &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.model&quot;&gt;&lt;code&gt;model&lt;/code&gt;&lt;/a&gt; attribute to &lt;a href=&quot;../contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt;, the default context object name of &lt;code&gt;user&lt;/code&gt; would override the &lt;code&gt;user&lt;/code&gt; variable from the &lt;a href=&quot;../templates/api#django.contrib.auth.context_processors.auth&quot;&gt;&lt;code&gt;django.contrib.auth.context_processors.auth()&lt;/code&gt;&lt;/a&gt; context processor. Use &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.get_context_object_name&quot;&gt;&lt;code&gt;get_context_object_name()&lt;/code&gt;&lt;/a&gt; to avoid a clash.</source>
          <target state="translated">&lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.get_context_data&quot;&gt; &lt;code&gt;get_context_data()&lt;/code&gt; 中的&lt;/a&gt;任何变量都优先于&lt;a href=&quot;../templates/api#subclassing-context-requestcontext&quot;&gt;上下文处理器中的&lt;/a&gt;上下文变量。例如，如果你的视图设置&lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.model&quot;&gt; &lt;code&gt;model&lt;/code&gt; &lt;/a&gt;属性到&lt;a href=&quot;../contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;，默认上下文对象名 &lt;code&gt;user&lt;/code&gt; 将覆盖 &lt;code&gt;user&lt;/code&gt; 从可变&lt;a href=&quot;../templates/api#django.contrib.auth.context_processors.auth&quot;&gt; &lt;code&gt;django.contrib.auth.context_processors.auth()&lt;/code&gt; &lt;/a&gt;上下文处理器。使用&lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.get_context_object_name&quot;&gt; &lt;code&gt;get_context_object_name()&lt;/code&gt; &lt;/a&gt;避免冲突。</target>
        </trans-unit>
        <trans-unit id="b3a7f61859d620559f076dde253a47afc056d542" translate="yes" xml:space="preserve">
          <source>Any view can be declared async by making the callable part of it return a coroutine - commonly, this is done using &lt;code&gt;async def&lt;/code&gt;. For a function-based view, this means declaring the whole view using &lt;code&gt;async def&lt;/code&gt;. For a class-based view, this means making its &lt;code&gt;__call__()&lt;/code&gt; method an &lt;code&gt;async def&lt;/code&gt; (not its &lt;code&gt;__init__()&lt;/code&gt; or &lt;code&gt;as_view()&lt;/code&gt;).</source>
          <target state="translated">通过使视图的可调用部分返回协程，可以将任何视图声明为异步-通常，这是使用 &lt;code&gt;async def&lt;/code&gt; 完成的。对于基于函数的视图，这意味着使用 &lt;code&gt;async def&lt;/code&gt; 声明整个视图。对于基于类的视图，这意味着使其 &lt;code&gt;__call__()&lt;/code&gt; 方法成为 &lt;code&gt;async def&lt;/code&gt; （而不是其 &lt;code&gt;__init__()&lt;/code&gt; 或 &lt;code&gt;as_view()&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="33fdeb58433575a49dc08ea16ba42eea7ffe5d40" translate="yes" xml:space="preserve">
          <source>Any view you render that uses the admin templates, or extends the base admin template, should set &lt;code&gt;request.current_app&lt;/code&gt; before rendering the template. It should be set to either &lt;code&gt;self.name&lt;/code&gt; if your view is on an &lt;code&gt;AdminSite&lt;/code&gt; or &lt;code&gt;self.admin_site.name&lt;/code&gt; if your view is on a &lt;code&gt;ModelAdmin&lt;/code&gt;.</source>
          <target state="translated">您呈现的使用管理模板或扩展基本管理模板的任何视图都应在呈现模板之前设置 &lt;code&gt;request.current_app&lt;/code&gt; 。应设置为 &lt;code&gt;self.name&lt;/code&gt; 如果你的观点是上 &lt;code&gt;AdminSite&lt;/code&gt; 或 &lt;code&gt;self.admin_site.name&lt;/code&gt; 如果你的观点是对 &lt;code&gt;ModelAdmin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c61ae39f874e4c3fea92eacfe4842fbe9d061b82" translate="yes" xml:space="preserve">
          <source>Any website which allows users to log in should enforce site-wide HTTPS to avoid transmitting access tokens in clear. In Django, access tokens include the login/password, the session cookie, and password reset tokens. (You can&amp;rsquo;t do much to protect password reset tokens if you&amp;rsquo;re sending them by email.)</source>
          <target state="translated">任何允许用户登录的网站都应实施站点范围的HTTPS，以避免明文传输访问令牌。在Django中，访问令牌包括登录名/密码，会话cookie和密码重置令牌。（如果要通过电子邮件发送密码重置令牌，则无法做很多事情来保护它们。）</target>
        </trans-unit>
        <trans-unit id="482767877854b0eb1336580862dfd1a6bcdc6520" translate="yes" xml:space="preserve">
          <source>Anything with a custom &lt;code&gt;deconstruct()&lt;/code&gt; method (&lt;a href=&quot;#custom-deconstruct-method&quot;&gt;see below&lt;/a&gt;)</source>
          <target state="translated">带有自定义 &lt;code&gt;deconstruct()&lt;/code&gt; 方法的所有内容（&lt;a href=&quot;#custom-deconstruct-method&quot;&gt;请参见下文&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="63593d0d5d435dfe384aa50d6b9d31230859491f" translate="yes" xml:space="preserve">
          <source>App names</source>
          <target state="translated">应用名称</target>
        </trans-unit>
        <trans-unit id="bd830f06d5852ef2c9dc8bcccf701902da95053b" translate="yes" xml:space="preserve">
          <source>Appends an item to the internal list associated with key.</source>
          <target state="translated">将一个项目添加到与键相关联的内部列表中。</target>
        </trans-unit>
        <trans-unit id="aa63e6b9e38d910d3df41e7a8cac3f1bb7e475e3" translate="yes" xml:space="preserve">
          <source>Application &lt;a href=&quot;applications#django.apps.AppConfig.label&quot;&gt;&lt;code&gt;labels&lt;/code&gt;&lt;/a&gt; &amp;mdash; by default the final part of the name &amp;mdash; must be unique too. For example, you can&amp;rsquo;t include both &lt;code&gt;django.contrib.auth&lt;/code&gt; and &lt;code&gt;myproject.auth&lt;/code&gt;. However, you can relabel an application with a custom configuration that defines a different &lt;a href=&quot;applications#django.apps.AppConfig.label&quot;&gt;&lt;code&gt;label&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">应用程序&lt;a href=&quot;applications#django.apps.AppConfig.label&quot;&gt; &lt;code&gt;labels&lt;/code&gt; &lt;/a&gt;（默认情况下为名称的最后部分）也必须是唯一的。例如，不能同时包含 &lt;code&gt;django.contrib.auth&lt;/code&gt; 和 &lt;code&gt;myproject.auth&lt;/code&gt; 。但是，您可以使用定义了另一个&lt;a href=&quot;applications#django.apps.AppConfig.label&quot;&gt; &lt;code&gt;label&lt;/code&gt; &lt;/a&gt;的自定义配置来重新标记应用程序。</target>
        </trans-unit>
        <trans-unit id="cce177b4ed99f13272552802e5efb7cd98ca52c8" translate="yes" xml:space="preserve">
          <source>Application &lt;a href=&quot;applications#django.apps.AppConfig.name&quot;&gt;&lt;code&gt;names&lt;/code&gt;&lt;/a&gt; &amp;mdash; the dotted Python path to the application package &amp;mdash; must be unique. There is no way to include the same application twice, short of duplicating its code under another name.</source>
          <target state="translated">应用程序&lt;a href=&quot;applications#django.apps.AppConfig.name&quot;&gt; &lt;code&gt;names&lt;/code&gt; &lt;/a&gt;（应用程序包的虚线Python路径）必须唯一。没有办法两次包含相同的应用程序，除非用另一个名称复制其代码。</target>
        </trans-unit>
        <trans-unit id="1ce84d4d04cdd60bd8ab75207bda952026831b49" translate="yes" xml:space="preserve">
          <source>Application configuration</source>
          <target state="translated">应用配置</target>
        </trans-unit>
        <trans-unit id="2d00cf03fc5959163a7822755887dc62e3a89d38" translate="yes" xml:space="preserve">
          <source>Application configuration objects store metadata for an application. Some attributes can be configured in &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; subclasses. Others are set by Django and read-only.</source>
          <target state="translated">应用程序配置对象存储应用程序的元数据。可以在&lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt;子类中配置某些属性。其他设置由Django设置且为只读。</target>
        </trans-unit>
        <trans-unit id="02814f34a196dfe9c70486833f53df2ac42d4ff8" translate="yes" xml:space="preserve">
          <source>Application index page</source>
          <target state="translated">报名索引页</target>
        </trans-unit>
        <trans-unit id="1fba94f3256e26835d76c00860685efd830812bb" translate="yes" xml:space="preserve">
          <source>Application labels (that is, the final part of the dotted path to application packages) &lt;em&gt;must&lt;/em&gt; be unique in &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;. Avoid using the same label as any of the Django &lt;a href=&quot;../ref/contrib/index&quot;&gt;contrib packages&lt;/a&gt;, for example &lt;code&gt;auth&lt;/code&gt;, &lt;code&gt;admin&lt;/code&gt;, or &lt;code&gt;messages&lt;/code&gt;.</source>
          <target state="translated">应用程序标签（即，应用程序包的虚线路径的最后一部分）在&lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 中&lt;/a&gt;&lt;em&gt;必须&lt;/em&gt;唯一。避免使用与任何Django &lt;a href=&quot;../ref/contrib/index&quot;&gt;contrib软件包&lt;/a&gt;相同的标签，例如 &lt;code&gt;auth&lt;/code&gt; ， &lt;code&gt;admin&lt;/code&gt; 或 &lt;code&gt;messages&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb450da0c07754aedf67cd45c88b1558ac1cd645" translate="yes" xml:space="preserve">
          <source>Application names and labels must be unique in &lt;a href=&quot;#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">应用程序名称和标签在&lt;a href=&quot;#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 中&lt;/a&gt;必须唯一</target>
        </trans-unit>
        <trans-unit id="07f619ff555df81b21d8f81b05235ca1997f69ce" translate="yes" xml:space="preserve">
          <source>Application namespaces of included URLconfs can be specified in two ways.</source>
          <target state="translated">可以通过两种方式指定包含URLconfs的应用程序名称空间。</target>
        </trans-unit>
        <trans-unit id="751084ce854ca0846d5944c04c858023f5b8c71c" translate="yes" xml:space="preserve">
          <source>Application registry</source>
          <target state="translated">申请登记处</target>
        </trans-unit>
        <trans-unit id="76c74bd071dd73f01696fddbbffc77712a479faf" translate="yes" xml:space="preserve">
          <source>Applications</source>
          <target state="translated">Applications</target>
        </trans-unit>
        <trans-unit id="2d95a17e385a3c2fb23081cac8c9295e5d6e462d" translate="yes" xml:space="preserve">
          <source>Applications can register their own actions with &lt;code&gt;manage.py&lt;/code&gt;. For example, you might want to add a &lt;code&gt;manage.py&lt;/code&gt; action for a Django app that you&amp;rsquo;re distributing. In this document, we will be building a custom &lt;code&gt;closepoll&lt;/code&gt; command for the &lt;code&gt;polls&lt;/code&gt; application from the &lt;a href=&quot;../intro/tutorial01&quot;&gt;tutorial&lt;/a&gt;.</source>
          <target state="translated">应用程序可以向 &lt;code&gt;manage.py&lt;/code&gt; 注册自己的操作。例如，您可能想为您要分发的Django应用添加 &lt;code&gt;manage.py&lt;/code&gt; 操作。在本文档中，我们将从&lt;a href=&quot;../intro/tutorial01&quot;&gt;教程中&lt;/a&gt;为 &lt;code&gt;polls&lt;/code&gt; 应用程序构建自定义 &lt;code&gt;closepoll&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="b33e5c91a312fb3c95a81e0182e2a5529ab4d2d6" translate="yes" xml:space="preserve">
          <source>Applications include some combination of models, views, templates, template tags, static files, URLs, middleware, etc. They&amp;rsquo;re generally wired into projects with the &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting and optionally with other mechanisms such as URLconfs, the &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting, or template inheritance.</source>
          <target state="translated">应用程序包括模型，视图，模板，模板标签，静态文件，URL，中间件等的某种组合。它们通常通过&lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置以及可选的其他机制（例如URLconf，&lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt;设置或模板继承）连接到项目中。。</target>
        </trans-unit>
        <trans-unit id="fcf5bca7c1c28b2d4896a4ad439584b5047d4594" translate="yes" xml:space="preserve">
          <source>Applies HTML escaping to a string (see the &lt;a href=&quot;#std:templatefilter-escape&quot;&gt;&lt;code&gt;escape&lt;/code&gt;&lt;/a&gt; filter for details). This filter is applied &lt;em&gt;immediately&lt;/em&gt; and returns a new, escaped string. This is useful in the rare cases where you need multiple escaping or want to apply other filters to the escaped results. Normally, you want to use the &lt;a href=&quot;#std:templatefilter-escape&quot;&gt;&lt;code&gt;escape&lt;/code&gt;&lt;/a&gt; filter.</source>
          <target state="translated">将HTML转义应用于字符串（有关详细信息，请参见&lt;a href=&quot;#std:templatefilter-escape&quot;&gt; &lt;code&gt;escape&lt;/code&gt; &lt;/a&gt;过滤器）。此过滤器将&lt;em&gt;立即&lt;/em&gt;应用并返回一个新的转义字符串。在极少数需要多次转义或想对转义结果应用其他过滤器的情况下，这很有用。通常，您要使用&lt;a href=&quot;#std:templatefilter-escape&quot;&gt; &lt;code&gt;escape&lt;/code&gt; &lt;/a&gt;过滤器。</target>
        </trans-unit>
        <trans-unit id="84df2e98f0fb6b4a2a7a0e18e64e0533759512be" translate="yes" xml:space="preserve">
          <source>Applies NFKC Unicode normalization to usernames so that visually identical characters with different Unicode code points are considered identical.</source>
          <target state="translated">将NFKC Unicode归一化应用到用户名中,使不同Unicode码点的视觉上相同的字符被认为是相同的。</target>
        </trans-unit>
        <trans-unit id="97651a1b0d977cf8ff25a459e82fee2dcd0fc103" translate="yes" xml:space="preserve">
          <source>Applies the &lt;a href=&quot;#std:templatefilter-safe&quot;&gt;&lt;code&gt;safe&lt;/code&gt;&lt;/a&gt; filter to each element of a sequence. Useful in conjunction with other filters that operate on sequences, such as &lt;a href=&quot;#std:templatefilter-join&quot;&gt;&lt;code&gt;join&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">将&lt;a href=&quot;#std:templatefilter-safe&quot;&gt; &lt;code&gt;safe&lt;/code&gt; &lt;/a&gt;过滤器应用于序列的每个元素。与对序列进行操作的其他过滤器结合使用，例如&lt;a href=&quot;#std:templatefilter-join&quot;&gt; &lt;code&gt;join&lt;/code&gt; &lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="1e90ac2f737d779a01b5c20e7cefbbc501e3d3c1" translate="yes" xml:space="preserve">
          <source>Applying &lt;code&gt;escape&lt;/code&gt; to a variable that would normally have auto-escaping applied to the result will only result in one round of escaping being done. So it is safe to use this function even in auto-escaping environments. If you want multiple escaping passes to be applied, use the &lt;a href=&quot;#std:templatefilter-force_escape&quot;&gt;&lt;code&gt;force_escape&lt;/code&gt;&lt;/a&gt; filter.</source>
          <target state="translated">应用 &lt;code&gt;escape&lt;/code&gt; 给一个变量，通常会具有自动转义应用于结果只会造成一轮逃离正在做的。因此，即使在自动转义的环境中也可以安全使用此功能。如果要应用多次转义，请使用&lt;a href=&quot;#std:templatefilter-force_escape&quot;&gt; &lt;code&gt;force_escape&lt;/code&gt; &lt;/a&gt;过滤器。</target>
        </trans-unit>
        <trans-unit id="71fb7e3800ea4bff489d57465f1ad69f7ab2a7ce" translate="yes" xml:space="preserve">
          <source>Applying ASGI middleware</source>
          <target state="translated">应用ASGI中间件</target>
        </trans-unit>
        <trans-unit id="0ae8ad953facfec96824ae104e86374b11f31f03" translate="yes" xml:space="preserve">
          <source>Applying WSGI middleware</source>
          <target state="translated">应用WSGI中间件</target>
        </trans-unit>
        <trans-unit id="9bab876cb9ceac2f91928039efab65ebe5cbf56f" translate="yes" xml:space="preserve">
          <source>Applying a &amp;ldquo;plain&amp;rdquo; migration that adds a unique non-nullable field to a table with existing rows will raise an error because the value used to populate existing rows is generated only once, thus breaking the unique constraint.</source>
          <target state="translated">将&amp;ldquo;普通&amp;rdquo;迁移应用于具有现有行的表中添加唯一的不可为空的字段将引发错误，因为用于填充现有行的值仅生成一次，因此打破了唯一性约束。</target>
        </trans-unit>
        <trans-unit id="4fb043dc44486291dc3527759033c8e5b635a5ce" translate="yes" xml:space="preserve">
          <source>Applying further encoding (such as &lt;a href=&quot;https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote&quot;&gt;&lt;code&gt;urllib.parse.quote()&lt;/code&gt;&lt;/a&gt;) to the output of &lt;code&gt;reverse()&lt;/code&gt; may produce undesirable results.</source>
          <target state="translated">将更多的编码（例如&lt;a href=&quot;https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote&quot;&gt; &lt;code&gt;urllib.parse.quote()&lt;/code&gt; &lt;/a&gt;）应用于 &lt;code&gt;reverse()&lt;/code&gt; 的输出可能会产生不良结果。</target>
        </trans-unit>
        <trans-unit id="1fb0e010e8f9e5d7e29b766c8e457da1478cbaa4" translate="yes" xml:space="preserve">
          <source>Appropriate use of field types.</source>
          <target state="translated">适当使用外地类型;</target>
        </trans-unit>
        <trans-unit id="ab3c3c1852b7964fa4b3a4d4233e6676835a9dae" translate="yes" xml:space="preserve">
          <source>Apps &lt;a href=&quot;overview#test-case-serialized-rollback&quot;&gt;will not see their data reloaded&lt;/a&gt;; if you need this functionality (for example, third-party apps should enable this) you can set &lt;code&gt;serialized_rollback = True&lt;/code&gt; inside the &lt;code&gt;TestCase&lt;/code&gt; body.</source>
          <target state="translated">应用程序&lt;a href=&quot;overview#test-case-serialized-rollback&quot;&gt;将不会看到其数据被重新加载&lt;/a&gt;；如果需要此功能（例如，第三方应用程序应启用此功能），则可以在 &lt;code&gt;TestCase&lt;/code&gt; 主体内设置 &lt;code&gt;serialized_rollback = True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a272d52149333fb6693bfc9f661e41c2ea99cab6" translate="yes" xml:space="preserve">
          <source>Apps without migrations are also listed, but have &lt;code&gt;(no migrations)&lt;/code&gt; printed under them.</source>
          <target state="translated">还列出了没有迁移的应用程序，但是在它们下面打印 &lt;code&gt;(no migrations)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40df94333b003783fd4708f6c30ce7e977931fb2" translate="yes" xml:space="preserve">
          <source>Apps without migrations must not have relations (&lt;code&gt;ForeignKey&lt;/code&gt;, &lt;code&gt;ManyToManyField&lt;/code&gt;, etc.) to apps with migrations. Sometimes it may work, but it&amp;rsquo;s not supported.</source>
          <target state="translated">不进行迁移的应用程序不得与进行迁移的应用程序建立关系（ &lt;code&gt;ForeignKey&lt;/code&gt; ， &lt;code&gt;ManyToManyField&lt;/code&gt; 等）。有时可能会起作用，但是不支持。</target>
        </trans-unit>
        <trans-unit id="3a448e7c70834c89c84d512849750974b243b0c1" translate="yes" xml:space="preserve">
          <source>Arbitrary class instances (e.g. &lt;code&gt;MyClass(4.3, 5.7)&lt;/code&gt;)</source>
          <target state="translated">任意类实例（例如 &lt;code&gt;MyClass(4.3, 5.7)&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b7921b5d129746e8520dbca543895e37d9e3c2ad" translate="yes" xml:space="preserve">
          <source>Arbitrary keyword arguments can be passed in a dictionary to the target view. We aren&amp;rsquo;t going to use this feature of Django in the tutorial.</source>
          <target state="translated">可以在字典中将任意关键字参数传递给目标视图。在本教程中，我们将不使用Django的此功能。</target>
        </trans-unit>
        <trans-unit id="4538085594fa71765ec146351dc02cd2a62a49b6" translate="yes" xml:space="preserve">
          <source>Are marked as &amp;ldquo;internal&amp;rdquo; (as opposed to &amp;ldquo;EXTERNAL&amp;rdquo;) in &lt;a href=&quot;../topics/logging#django.utils.log.AdminEmailHandler&quot;&gt;&lt;code&gt;AdminEmailHandler&lt;/code&gt;&lt;/a&gt; emails.</source>
          <target state="translated">在&lt;a href=&quot;../topics/logging#django.utils.log.AdminEmailHandler&quot;&gt; &lt;code&gt;AdminEmailHandler&lt;/code&gt; &lt;/a&gt;电子邮件中被标记为&amp;ldquo;内部&amp;rdquo;（而不是&amp;ldquo;外部&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="0a712e2d33d70b1022cfdcb9a2ae180418d15103" translate="yes" xml:space="preserve">
          <source>Are you new to Django or to programming? This is the place to start!</source>
          <target state="translated">你是Django或编程新手吗?这里就是你开始的地方</target>
        </trans-unit>
        <trans-unit id="3ede565cc656a4a577574a466fa3c9ef2c776096" translate="yes" xml:space="preserve">
          <source>Argon2</source>
          <target state="translated">Argon2</target>
        </trans-unit>
        <trans-unit id="2b8852ca2366a97e55c0d2d71ee2669e30845b41" translate="yes" xml:space="preserve">
          <source>Argon2 has three attributes that can be customized:</source>
          <target state="translated">Argon2有三个属性可以定制。</target>
        </trans-unit>
        <trans-unit id="ce5e5792e97fe5c7861d6ae9b29cf5a25cc0e70a" translate="yes" xml:space="preserve">
          <source>Argument</source>
          <target state="translated">Argument</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="67c7d44f963dd2bd2d457a711009398a73deb55b" translate="yes" xml:space="preserve">
          <source>Arguments &lt;code&gt;formset&lt;/code&gt;, &lt;code&gt;extra&lt;/code&gt;, &lt;code&gt;can_delete&lt;/code&gt;, &lt;code&gt;can_order&lt;/code&gt;, &lt;code&gt;max_num&lt;/code&gt;, &lt;code&gt;validate_max&lt;/code&gt;, &lt;code&gt;min_num&lt;/code&gt;, and &lt;code&gt;validate_min&lt;/code&gt; are passed through to &lt;a href=&quot;formsets#django.forms.formsets.formset_factory&quot;&gt;&lt;code&gt;formset_factory()&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;../../topics/forms/formsets&quot;&gt;formsets&lt;/a&gt; for details.</source>
          <target state="translated">参数 &lt;code&gt;formset&lt;/code&gt; ， &lt;code&gt;extra&lt;/code&gt; ， &lt;code&gt;can_delete&lt;/code&gt; ， &lt;code&gt;can_order&lt;/code&gt; ， &lt;code&gt;max_num&lt;/code&gt; ， &lt;code&gt;validate_max&lt;/code&gt; ， &lt;code&gt;min_num&lt;/code&gt; 和 &lt;code&gt;validate_min&lt;/code&gt; 传递给&lt;a href=&quot;formsets#django.forms.formsets.formset_factory&quot;&gt; &lt;code&gt;formset_factory()&lt;/code&gt; &lt;/a&gt;。有关详细信息，请参见&lt;a href=&quot;../../topics/forms/formsets&quot;&gt;表单集&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58197fa61986afbdda62ef537066c9d7d284ce51" translate="yes" xml:space="preserve">
          <source>Arguments &lt;code&gt;formset&lt;/code&gt;, &lt;code&gt;extra&lt;/code&gt;, &lt;code&gt;max_num&lt;/code&gt;, &lt;code&gt;can_order&lt;/code&gt;, &lt;code&gt;can_delete&lt;/code&gt; and &lt;code&gt;validate_max&lt;/code&gt; are passed through to &lt;a href=&quot;formsets#django.forms.formsets.formset_factory&quot;&gt;&lt;code&gt;formset_factory()&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;../../topics/forms/formsets&quot;&gt;formsets&lt;/a&gt; for details.</source>
          <target state="translated">参数 &lt;code&gt;formset&lt;/code&gt; ， &lt;code&gt;extra&lt;/code&gt; ， &lt;code&gt;max_num&lt;/code&gt; ， &lt;code&gt;can_order&lt;/code&gt; ， &lt;code&gt;can_delete&lt;/code&gt; 和 &lt;code&gt;validate_max&lt;/code&gt; 传递给&lt;a href=&quot;formsets#django.forms.formsets.formset_factory&quot;&gt; &lt;code&gt;formset_factory()&lt;/code&gt; &lt;/a&gt;。有关详细信息，请参见&lt;a href=&quot;../../topics/forms/formsets&quot;&gt;表单集&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8034fbe6240dce8c15d34b6c1adfb6d842f7d740" translate="yes" xml:space="preserve">
          <source>Arguments &lt;code&gt;model&lt;/code&gt;, &lt;code&gt;form&lt;/code&gt;, &lt;code&gt;fields&lt;/code&gt;, &lt;code&gt;exclude&lt;/code&gt;, &lt;code&gt;formfield_callback&lt;/code&gt;, &lt;code&gt;widgets&lt;/code&gt;, &lt;code&gt;localized_fields&lt;/code&gt;, &lt;code&gt;labels&lt;/code&gt;, &lt;code&gt;help_texts&lt;/code&gt;, &lt;code&gt;error_messages&lt;/code&gt;, and &lt;code&gt;field_classes&lt;/code&gt; are all passed through to &lt;a href=&quot;#django.forms.models.modelform_factory&quot;&gt;&lt;code&gt;modelform_factory()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">参数 &lt;code&gt;model&lt;/code&gt; ， &lt;code&gt;form&lt;/code&gt; ， &lt;code&gt;fields&lt;/code&gt; ， &lt;code&gt;exclude&lt;/code&gt; ， &lt;code&gt;formfield_callback&lt;/code&gt; ， &lt;code&gt;widgets&lt;/code&gt; ， &lt;code&gt;localized_fields&lt;/code&gt; ， &lt;code&gt;labels&lt;/code&gt; ， &lt;code&gt;help_texts&lt;/code&gt; ， &lt;code&gt;error_messages&lt;/code&gt; 和 &lt;code&gt;field_classes&lt;/code&gt; 都传递给modelform_factory &lt;a href=&quot;#django.forms.models.modelform_factory&quot;&gt; &lt;code&gt;modelform_factory()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d1cff7b9a2f029cdb3903bd7fc9052c131b2a51" translate="yes" xml:space="preserve">
          <source>Arguments passed into &lt;a href=&quot;base#django.views.generic.base.View.as_view&quot;&gt;&lt;code&gt;as_view()&lt;/code&gt;&lt;/a&gt; will be assigned onto the instance that is used to service a request. Using the previous example, this means that every request on &lt;code&gt;MyView&lt;/code&gt; is able to use &lt;code&gt;self.size&lt;/code&gt;. Arguments must correspond to attributes that already exist on the class (return &lt;code&gt;True&lt;/code&gt; on a &lt;code&gt;hasattr&lt;/code&gt; check).</source>
          <target state="translated">传递给&lt;a href=&quot;base#django.views.generic.base.View.as_view&quot;&gt; &lt;code&gt;as_view()&lt;/code&gt; 的&lt;/a&gt;参数将分配给用于服务请求的实例。使用前面的示例，这意味着 &lt;code&gt;MyView&lt;/code&gt; 上的每个请求都可以使用 &lt;code&gt;self.size&lt;/code&gt; 。参数必须与类中已经存在的属性相对应（在 &lt;code&gt;hasattr&lt;/code&gt; 检查中返回 &lt;code&gt;True&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f078c1fdd22e76807380df315056c024853f7857" translate="yes" xml:space="preserve">
          <source>Arguments passed to a view are shared between every instance of a view. This means that you shouldn&amp;rsquo;t use a list, dictionary, or any other mutable object as an argument to a view. If you do and the shared object is modified, the actions of one user visiting your view could have an effect on subsequent users visiting the same view.</source>
          <target state="translated">传递给视图的参数在视图的每个实例之间共享。这意味着您不应将列表，字典或任何其他可变对象用作视图的参数。如果您这样做并修改了共享库，则一个用户访问您的视图的操作可能会对随后访问同一视图的用户产生影响。</target>
        </trans-unit>
        <trans-unit id="b605e3fad4f4e7cae16a126b8f64ee64d9e62bd8" translate="yes" xml:space="preserve">
          <source>Arguments sent with this signal:</source>
          <target state="translated">用此信号发送的参数。</target>
        </trans-unit>
        <trans-unit id="88fea68375f653adcd5dce7d298e6094ef9a8491" translate="yes" xml:space="preserve">
          <source>Arguments that are sent with this signal:</source>
          <target state="translated">用此信号发送的参数。</target>
        </trans-unit>
        <trans-unit id="77a319939251fa1d350565160d40ce342e3a2bdc" translate="yes" xml:space="preserve">
          <source>Arithmetic with &lt;code&gt;DurationField&lt;/code&gt; works in most cases. However on all databases other than PostgreSQL, comparing the value of a &lt;code&gt;DurationField&lt;/code&gt; to arithmetic on &lt;code&gt;DateTimeField&lt;/code&gt; instances will not work as expected.</source>
          <target state="translated">在大多数情况下，使用 &lt;code&gt;DurationField&lt;/code&gt; 进行算术运算即可。但是，在除PostgreSQL以外的所有数据库上，将 &lt;code&gt;DurationField&lt;/code&gt; 的值与 &lt;code&gt;DateTimeField&lt;/code&gt; 实例上的算术进行比较将无法按预期进行。</target>
        </trans-unit>
        <trans-unit id="fd9b41cfd3e7dff29518994e0b9851065abeabf4" translate="yes" xml:space="preserve">
          <source>Article objects have access to their related Reporter objects:</source>
          <target state="translated">文章对象可以访问其相关的Reporter对象。</target>
        </trans-unit>
        <trans-unit id="803ebeca0014020157039a56b7c955bf6bab52e0" translate="yes" xml:space="preserve">
          <source>As Python&amp;rsquo;s normal &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt; class implements assertion methods such as &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertTrue&quot;&gt;&lt;code&gt;assertTrue()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt;, Django&amp;rsquo;s custom &lt;a href=&quot;#django.test.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; class provides a number of custom assertion methods that are useful for testing Web applications:</source>
          <target state="translated">就像Python的普通&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt;类实现断言方法（如&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertTrue&quot;&gt; &lt;code&gt;assertTrue()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; )一样&lt;/a&gt;，Django的自定义&lt;a href=&quot;#django.test.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;类提供了许多自定义断言方法，这些方法可用于测试Web应用程序：</target>
        </trans-unit>
        <trans-unit id="a91d2631645bc3353f670fdb4233c68c7ae8c704" translate="yes" xml:space="preserve">
          <source>As a consequence, if you&amp;rsquo;re using PostgreSQL, you can switch between &lt;code&gt;USE_TZ
= False&lt;/code&gt; and &lt;code&gt;USE_TZ = True&lt;/code&gt; freely. The database connection&amp;rsquo;s time zone will be set to &lt;a href=&quot;../../ref/settings#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;UTC&lt;/code&gt; respectively, so that Django obtains correct datetimes in all cases. You don&amp;rsquo;t need to perform any data conversions.</source>
          <target state="translated">因此，如果您使用的是PostgreSQL，则可以在 &lt;code&gt;USE_TZ = False&lt;/code&gt; 和 &lt;code&gt;USE_TZ = True&lt;/code&gt; 自由切换。数据库连接的时区将分别设置为&lt;a href=&quot;../../ref/settings#std:setting-TIME_ZONE&quot;&gt; &lt;code&gt;TIME_ZONE&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;UTC&lt;/code&gt; ，以便Django在所有情况下都能获取正确的日期时间。您不需要执行任何数据转换。</target>
        </trans-unit>
        <trans-unit id="4cb03d8e9a6467edf4c13eac5fd28360a8fcfcb1" translate="yes" xml:space="preserve">
          <source>As a contributor, you can help us keep the Django community open and inclusive. Please read and follow our &lt;a href=&quot;https://www.djangoproject.com/conduct/&quot;&gt;Code of Conduct&lt;/a&gt;.</source>
          <target state="translated">作为贡献者，您可以帮助我们保持Django社区开放和包容。请阅读并遵守我们&lt;a href=&quot;https://www.djangoproject.com/conduct/&quot;&gt;的行为准则&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd4ac7c4d6c742fe78034f36f942a1b187ad4bf2" translate="yes" xml:space="preserve">
          <source>As a convenience when no lookup type is provided (like in &lt;code&gt;Entry.objects.get(id=14)&lt;/code&gt;) the lookup type is assumed to be &lt;a href=&quot;#std:fieldlookup-exact&quot;&gt;&lt;code&gt;exact&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当没有查找类型提供了一种方便（在像 &lt;code&gt;Entry.objects.get(id=14)&lt;/code&gt; ）的查找类型假定为&lt;a href=&quot;#std:fieldlookup-exact&quot;&gt; &lt;code&gt;exact&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d5d3a6963dda7727f66b10430d291ec5d9a69966" translate="yes" xml:space="preserve">
          <source>As a convenience, Django comes with a view, &lt;a href=&quot;#django.views.i18n.set_language&quot;&gt;&lt;code&gt;django.views.i18n.set_language()&lt;/code&gt;&lt;/a&gt;, that sets a user&amp;rsquo;s language preference and redirects to a given URL or, by default, back to the previous page.</source>
          <target state="translated">为方便起见，Django附带了一个视图&lt;a href=&quot;#django.views.i18n.set_language&quot;&gt; &lt;code&gt;django.views.i18n.set_language()&lt;/code&gt; &lt;/a&gt;，该视图设置用户的语言首选项，并重定向到给定的URL，或者默认情况下，重定向到上一页。</target>
        </trans-unit>
        <trans-unit id="a148d3a8c6ce021a1fb375d505172fcf07511531" translate="yes" xml:space="preserve">
          <source>As a convenience, Django provides a way to test whether the user&amp;rsquo;s browser accepts cookies. Call the &lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase.set_test_cookie&quot;&gt;&lt;code&gt;set_test_cookie()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;request.session&lt;/code&gt; in a view, and call &lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase.test_cookie_worked&quot;&gt;&lt;code&gt;test_cookie_worked()&lt;/code&gt;&lt;/a&gt; in a subsequent view &amp;ndash; not in the same view call.</source>
          <target state="translated">为方便起见，Django提供了一种方法来测试用户的浏览器是否接受cookie。在视图中调用 &lt;code&gt;request.session&lt;/code&gt; 的&lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase.set_test_cookie&quot;&gt; &lt;code&gt;set_test_cookie()&lt;/code&gt; &lt;/a&gt;方法，然后在后续视图中（而不是在同一视图中&lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase.test_cookie_worked&quot;&gt; &lt;code&gt;test_cookie_worked()&lt;/code&gt; &lt;/a&gt;调用test_cookie_worked（）。</target>
        </trans-unit>
        <trans-unit id="f2fac89610d998a78384559c126919b128271b4f" translate="yes" xml:space="preserve">
          <source>As a convenience, each message includes, in the form of a comment line prefixed with &lt;code&gt;#&lt;/code&gt; and located above the &lt;code&gt;msgid&lt;/code&gt; line, the filename and line number from which the translation string was gleaned.</source>
          <target state="translated">为方便起见，每条消息都以以 &lt;code&gt;#&lt;/code&gt; 开头并位于 &lt;code&gt;msgid&lt;/code&gt; 行上方的注释行的形式包括文件名和行号，从中收集了翻译字符串。</target>
        </trans-unit>
        <trans-unit id="64031d0a37856a43f293b7ae4f2de01aeeaebdd4" translate="yes" xml:space="preserve">
          <source>As a convenience, the &lt;code&gt;HttpRequest&lt;/code&gt; object is passed to the &lt;code&gt;lookups&lt;/code&gt; and &lt;code&gt;queryset&lt;/code&gt; methods, for example:</source>
          <target state="translated">为方便起见，将 &lt;code&gt;HttpRequest&lt;/code&gt; 对象传递给 &lt;code&gt;lookups&lt;/code&gt; 和 &lt;code&gt;queryset&lt;/code&gt; 方法，例如：</target>
        </trans-unit>
        <trans-unit id="55ecd310b00d3a2bedf330c88278908e0dba94f8" translate="yes" xml:space="preserve">
          <source>As a custom field author, you don&amp;rsquo;t need to care about the first two values; the base &lt;code&gt;Field&lt;/code&gt; class has all the code to work out the field&amp;rsquo;s attribute name and import path. You do, however, have to care about the positional and keyword arguments, as these are likely the things you are changing.</source>
          <target state="translated">作为自定义领域的作者，您无需关心前两个值。基本的 &lt;code&gt;Field&lt;/code&gt; 类具有所有代码，可以计算出字段的属性名称和导入路径。但是，您确实必须关心位置和关键字参数，因为这些可能是您要更改的事情。</target>
        </trans-unit>
        <trans-unit id="d5d0254c52feffc267681ce4c32d47c81002ce3c" translate="yes" xml:space="preserve">
          <source>As a general rule, &lt;code&gt;to_python()&lt;/code&gt; should deal gracefully with any of the following arguments:</source>
          <target state="translated">通常， &lt;code&gt;to_python()&lt;/code&gt; 应该妥善处理以下任何参数：</target>
        </trans-unit>
        <trans-unit id="162f6d794632acfbba6013b0fb22a35fd35d7af3" translate="yes" xml:space="preserve">
          <source>As a general rule, if you can provide functions to compute &lt;em&gt;both&lt;/em&gt; the ETag and the last modified time, you should do so. You don&amp;rsquo;t know which headers any given HTTP client will send you, so be prepared to handle both. However, sometimes only one value is easy to compute and Django provides decorators that handle only ETag or only last-modified computations.</source>
          <target state="translated">作为一般规则，如果你能提供的功能来计算&lt;em&gt;两个&lt;/em&gt; ETag的和最后修改时间，你应该这样做。您不知道任何给定的HTTP客户端将向您发送哪些标头，因此请准备好处理这两个标头。但是，有时仅一个值易于计算，而Django提供仅处理ETag或仅最后修改的计算的装饰器。</target>
        </trans-unit>
        <trans-unit id="b4c7b21bf36c481e9159296ec7557ce258ac1e99" translate="yes" xml:space="preserve">
          <source>As a result, each &lt;code&gt;Entry&lt;/code&gt; object will have an extra attribute, &lt;code&gt;is_recent&lt;/code&gt;, a boolean representing whether the entry&amp;rsquo;s &lt;code&gt;pub_date&lt;/code&gt; is greater than Jan. 1, 2006.</source>
          <target state="translated">结果，每个 &lt;code&gt;Entry&lt;/code&gt; 对象将具有一个额外的属性 &lt;code&gt;is_recent&lt;/code&gt; ，它是一个布尔值，表示该条目的 &lt;code&gt;pub_date&lt;/code&gt; 是否大于2006年1月1日。</target>
        </trans-unit>
        <trans-unit id="e8b143dadf99761dc7a79ebf9d0877018fc623ba" translate="yes" xml:space="preserve">
          <source>As a rule of thumb, only capture the values the view needs to work with and use non-capturing arguments when the regular expression needs an argument but the view ignores it.</source>
          <target state="translated">作为一个经验法则,只捕获视图需要使用的值,当正则表达式需要一个参数但视图忽略它时,使用非捕获参数。</target>
        </trans-unit>
        <trans-unit id="f9c9f4b6a6f224e6e33f22feaf9223aac12b41e7" translate="yes" xml:space="preserve">
          <source>As a security measure, Django will &lt;em&gt;not&lt;/em&gt; include settings that might be sensitive, such as &lt;a href=&quot;#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt;. Specifically, it will exclude any setting whose name includes any of the following:</source>
          <target state="translated">作为安全措施，Django将&lt;em&gt;不&lt;/em&gt;包括可能敏感的设置，例如&lt;a href=&quot;#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; &lt;/a&gt;。具体来说，它将排除名称包括以下任何内容的任何设置：</target>
        </trans-unit>
        <trans-unit id="84cae640195b75a5b531e4722d3e827ad162687b" translate="yes" xml:space="preserve">
          <source>As a shortcut, the default cache is available as &lt;code&gt;django.core.cache.cache&lt;/code&gt;:</source>
          <target state="translated">作为快捷方式，默认缓存可作为 &lt;code&gt;django.core.cache.cache&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d14d8992d9e997382b4e9e188ab3c54a0fe914b1" translate="yes" xml:space="preserve">
          <source>As a shortcut, you can use the convenient &lt;a href=&quot;#django.contrib.auth.decorators.login_required&quot;&gt;&lt;code&gt;login_required()&lt;/code&gt;&lt;/a&gt; decorator:</source>
          <target state="translated">作为快捷方式，您可以使用方便的&lt;a href=&quot;#django.contrib.auth.decorators.login_required&quot;&gt; &lt;code&gt;login_required()&lt;/code&gt; &lt;/a&gt;装饰器：</target>
        </trans-unit>
        <trans-unit id="65dec2b26adfff7621033fdea8385bf825f6f9f8" translate="yes" xml:space="preserve">
          <source>As a shortcut, you can use the convenient &lt;code&gt;user_passes_test&lt;/code&gt; decorator which performs a redirect when the callable returns &lt;code&gt;False&lt;/code&gt;:</source>
          <target state="translated">作为快捷方式，您可以使用方便的 &lt;code&gt;user_passes_test&lt;/code&gt; 装饰器，该装饰器在可调用对象返回 &lt;code&gt;False&lt;/code&gt; 时执行重定向：</target>
        </trans-unit>
        <trans-unit id="3282f21de03e9905c2d09d969f11529dd59351e4" translate="yes" xml:space="preserve">
          <source>As a special case, you are also permitted to use &lt;code&gt;last&lt;/code&gt; as a value for &lt;code&gt;page&lt;/code&gt;:</source>
          <target state="translated">在特殊情况下，还允许您将 &lt;code&gt;last&lt;/code&gt; 用作 &lt;code&gt;page&lt;/code&gt; 的值：</target>
        </trans-unit>
        <trans-unit id="060ec047b1ef0821812a28018949722fd546d7a8" translate="yes" xml:space="preserve">
          <source>As above, it is recommended to pass a list of &lt;code&gt;ValidationError&lt;/code&gt; instances with &lt;code&gt;code&lt;/code&gt;s and &lt;code&gt;params&lt;/code&gt; but a list of strings will also work:</source>
          <target state="translated">如上所述，建议传递带有 &lt;code&gt;code&lt;/code&gt; s和 &lt;code&gt;params&lt;/code&gt; 的 &lt;code&gt;ValidationError&lt;/code&gt; 实例列表，但字符串列表也可以使用：</target>
        </trans-unit>
        <trans-unit id="1f50ad2b65a9d524066daa50cc71bac67fe4f013" translate="yes" xml:space="preserve">
          <source>As above: the class of the user that just logged out or &lt;code&gt;None&lt;/code&gt; if the user was not authenticated.</source>
          <target state="translated">如上所述：刚刚注销的用户的类；如果未通过身份验证，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8bb130c31241b060e083cd4e48479a7cdb3daa85" translate="yes" xml:space="preserve">
          <source>As above: the model class that just had an instance created.</source>
          <target state="translated">如上:刚刚创建了一个实例的模型类。</target>
        </trans-unit>
        <trans-unit id="e9b3807dca5d7355faf6db7cfede8eab86a99e6a" translate="yes" xml:space="preserve">
          <source>As always, you should document your field type, so users will know what it is. In addition to providing a docstring for it, which is useful for developers, you can also allow users of the admin app to see a short description of the field type via the &lt;a href=&quot;../ref/contrib/admin/admindocs&quot;&gt;django.contrib.admindocs&lt;/a&gt; application. To do this provide descriptive text in a &lt;a href=&quot;../ref/models/fields#django.db.models.Field.description&quot;&gt;&lt;code&gt;description&lt;/code&gt;&lt;/a&gt; class attribute of your custom field. In the above example, the description displayed by the &lt;code&gt;admindocs&lt;/code&gt; application for a &lt;code&gt;HandField&lt;/code&gt; will be &amp;lsquo;A hand of cards (bridge style)&amp;rsquo;.</source>
          <target state="translated">与往常一样，您应该记录您的字段类型，以便用户知道它是什么。除了提供对开发人员有用的文档字符串外，您还可以允许admin应用程序的用户通过&lt;a href=&quot;../ref/contrib/admin/admindocs&quot;&gt;django.contrib.admindocs&lt;/a&gt;应用程序查看字段类型的简短描述。为此，请在您的自定义字段的&lt;a href=&quot;../ref/models/fields#django.db.models.Field.description&quot;&gt; &lt;code&gt;description&lt;/code&gt; &lt;/a&gt;类属性中提供描述性文本。在上面的例子中，描述显示在由 &lt;code&gt;admindocs&lt;/code&gt; 用于应用 &lt;code&gt;HandField&lt;/code&gt; 将&amp;ldquo;的卡（桥式）一种手&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="4483ceedafba3827803d0c6b7e6be9eb9bd58787" translate="yes" xml:space="preserve">
          <source>As an example, let&amp;rsquo;s make an operation that loads PostgreSQL extensions (which contain some of PostgreSQL&amp;rsquo;s more exciting features). Since there&amp;rsquo;s no model state changes, all it does is run one command:</source>
          <target state="translated">例如，让我们做一个加载PostgreSQL扩展的操作（其中包含PostgreSQL的一些更令人兴奋的功能）。由于没有更改模型状态，因此只需执行一个命令即可：</target>
        </trans-unit>
        <trans-unit id="a2f0ca9775bd19abb637e2e3b74d35f61538732e" translate="yes" xml:space="preserve">
          <source>As an example, the login form for the Django admin contains several &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements: one of &lt;code&gt;type=&quot;text&quot;&lt;/code&gt; for the username, one of &lt;code&gt;type=&quot;password&quot;&lt;/code&gt; for the password, and one of &lt;code&gt;type=&quot;submit&quot;&lt;/code&gt; for the &amp;ldquo;Log in&amp;rdquo; button. It also contains some hidden text fields that the user doesn&amp;rsquo;t see, which Django uses to determine what to do next.</source>
          <target state="translated">作为一个例子，对于Django管理登录表单包含几个 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 元素：一个 &lt;code&gt;type=&quot;text&quot;&lt;/code&gt; 的用户名，一个 &lt;code&gt;type=&quot;password&quot;&lt;/code&gt; 的密码，和一个 &lt;code&gt;type=&quot;submit&quot;&lt;/code&gt; 为&amp;ldquo;登录&amp;rdquo;按钮。它还包含一些用户看不到的隐藏文本字段，Django使用这些文本字段来确定下一步要做的事情。</target>
        </trans-unit>
        <trans-unit id="7bbf58fa832a1ed4496f565aefc0d8b472ea5042" translate="yes" xml:space="preserve">
          <source>As an example, though, here&amp;rsquo;s what a fixture for a &lt;code&gt;Person&lt;/code&gt; model might look like in JSON:</source>
          <target state="translated">不过，作为示例，这是用于 &lt;code&gt;Person&lt;/code&gt; 模型的固定装置在JSON中的样子：</target>
        </trans-unit>
        <trans-unit id="5c2023817dac1207534202df5e2018211834ce8f" translate="yes" xml:space="preserve">
          <source>As an optimization, Django only flushes the &lt;code&gt;default&lt;/code&gt; database at the start of each test run. If your setup contains multiple databases, and you have a test that requires every database to be clean, you can use the &lt;code&gt;databases&lt;/code&gt; attribute on the test suite to request extra databases to be flushed.</source>
          <target state="translated">作为一种优化，Django仅在每次测试运行开始时才刷新 &lt;code&gt;default&lt;/code&gt; 数据库。如果您的设置包含多个数据库，并且您有一个要求清洁每个数据库的测试，则可以使用测试套件上的 &lt;code&gt;databases&lt;/code&gt; 属性来请求刷新其他数据库。</target>
        </trans-unit>
        <trans-unit id="cc354dd23505586b5af6774ee796c5ecb636150c" translate="yes" xml:space="preserve">
          <source>As currently implemented, setting &lt;code&gt;auto_now&lt;/code&gt; or &lt;code&gt;auto_now_add&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt; will cause the field to have &lt;code&gt;editable=False&lt;/code&gt; and &lt;code&gt;blank=True&lt;/code&gt; set.</source>
          <target state="translated">按照当前的实现，将 &lt;code&gt;auto_now&lt;/code&gt; 或 &lt;code&gt;auto_now_add&lt;/code&gt; 设置为 &lt;code&gt;True&lt;/code&gt; 将导致该字段设置为 &lt;code&gt;editable=False&lt;/code&gt; 和 &lt;code&gt;blank=True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65a69528a8ff360aa751b0174a6a42ab5e776f10" translate="yes" xml:space="preserve">
          <source>As described above in &lt;a href=&quot;#django.db.models.query.QuerySet.get_or_create&quot;&gt;&lt;code&gt;get_or_create()&lt;/code&gt;&lt;/a&gt;, this method is prone to a race-condition which can result in multiple rows being inserted simultaneously if uniqueness is not enforced at the database level.</source>
          <target state="translated">如上文在&lt;a href=&quot;#django.db.models.query.QuerySet.get_or_create&quot;&gt; &lt;code&gt;get_or_create()&lt;/code&gt; 中所述&lt;/a&gt;，此方法易于出现竞争条件，如果在数据库级别未强制唯一性，则可能导致同时插入多行。</target>
        </trans-unit>
        <trans-unit id="c71ae107d635a60941fd857f322a439c4135e3ff" translate="yes" xml:space="preserve">
          <source>As described in the previous section, if a test run is forcefully interrupted, the test database may not be destroyed. On the next run, you&amp;rsquo;ll be asked whether you want to reuse or destroy the database. Use the &lt;a href=&quot;../../ref/django-admin#cmdoption-test-noinput&quot;&gt;&lt;code&gt;test
--noinput&lt;/code&gt;&lt;/a&gt; option to suppress that prompt and automatically destroy the database. This can be useful when running tests on a continuous integration server where tests may be interrupted by a timeout, for example.</source>
          <target state="translated">如上一节所述，如果强行中断了测试运行，则可能不会破坏测试数据库。在下一次运行时，系统将询问您是否要重用或破坏数据库。使用&lt;a href=&quot;../../ref/django-admin#cmdoption-test-noinput&quot;&gt; &lt;code&gt;test --noinput&lt;/code&gt; &lt;/a&gt;选项抑制该提示并自动销毁数据库。例如，当在连续集成服务器上运行测试时，该测试可能会因超时而中断，这很有用。</target>
        </trans-unit>
        <trans-unit id="797408375ed7da94f4e17bb1cfa01a5cf8e7ef8d" translate="yes" xml:space="preserve">
          <source>As described in the previous two sections, the cache key provided by a user is not used verbatim &amp;ndash; it is combined with the cache prefix and key version to provide a final cache key. By default, the three parts are joined using colons to produce a final string:</source>
          <target state="translated">如前两节所述，用户未逐字使用用户提供的缓存密钥，而是将其与缓存前缀和密钥版本结合使用以提供最终的缓存密钥。默认情况下，这三个部分使用冒号连接起来以生成最终字符串：</target>
        </trans-unit>
        <trans-unit id="4b7ec2ed3acca43c13049b422fb538687f6f7ecb" translate="yes" xml:space="preserve">
          <source>As discussed in &lt;a href=&quot;../security#sql-injection-protection&quot;&gt;SQL injection protection&lt;/a&gt;, using the &lt;code&gt;params&lt;/code&gt; argument and leaving the placeholders unquoted protects you from &lt;a href=&quot;https://en.wikipedia.org/wiki/SQL_injection&quot;&gt;SQL injection attacks&lt;/a&gt;, a common exploit where attackers inject arbitrary SQL into your database. If you use string interpolation or quote the placeholder, you&amp;rsquo;re at risk for SQL injection.</source>
          <target state="translated">如在&lt;a href=&quot;../security#sql-injection-protection&quot;&gt;SQL注入保护中&lt;/a&gt;所讨论的，使用 &lt;code&gt;params&lt;/code&gt; 参数并保留占位符不加引号可保护您免受&lt;a href=&quot;https://en.wikipedia.org/wiki/SQL_injection&quot;&gt;SQL注入攻击&lt;/a&gt;，这是攻击者将任意SQL注入数据库的一种常见漏洞。如果您使用字符串插值或使用占位符，则存在SQL注入的风险。</target>
        </trans-unit>
        <trans-unit id="20b88726251efae057f2600361cd15353b9aefaf" translate="yes" xml:space="preserve">
          <source>As discussed in &lt;a href=&quot;../topics/migrations#migrations-removing-model-fields&quot;&gt;removing fields&lt;/a&gt;, you must retain the original &lt;code&gt;CustomCharField&lt;/code&gt; class as long as you have migrations that reference it.</source>
          <target state="translated">如&lt;a href=&quot;../topics/migrations#migrations-removing-model-fields&quot;&gt;删除字段中所述&lt;/a&gt;，只要您有引用它的迁移，就必须保留原始 &lt;code&gt;CustomCharField&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="41bf8726ebe535d8ba58d750aa07cec91ebd0cc7" translate="yes" xml:space="preserve">
          <source>As explained in &amp;ldquo;Outputting forms as HTML&amp;rdquo; above, the default label for a &lt;code&gt;Field&lt;/code&gt; is generated from the field name by converting all underscores to spaces and upper-casing the first letter. Specify &lt;code&gt;label&lt;/code&gt; if that default behavior doesn&amp;rsquo;t result in an adequate label.</source>
          <target state="translated">如上面的&amp;ldquo;将表单输出为HTML&amp;rdquo;中所述，通过将所有下划线转换为空格并将首字母大写，可以从字段名称生成 &lt;code&gt;Field&lt;/code&gt; 的默认标签。指定 &lt;code&gt;label&lt;/code&gt; 如果默认行为不以适当的标签产生。</target>
        </trans-unit>
        <trans-unit id="8befa0db1dba58966a2414b9768c2deffe876e03" translate="yes" xml:space="preserve">
          <source>As explained in the documentation of &lt;a href=&quot;../../ref/settings#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt;, Django sets environment variables so that its process runs in the default time zone. This happens regardless of the value of &lt;a href=&quot;../../ref/settings#std:setting-USE_TZ&quot;&gt;&lt;code&gt;USE_TZ&lt;/code&gt;&lt;/a&gt; and of the current time zone.</source>
          <target state="translated">如&lt;a href=&quot;../../ref/settings#std:setting-TIME_ZONE&quot;&gt; &lt;code&gt;TIME_ZONE&lt;/code&gt; &lt;/a&gt;的文档所述，Django设置了环境变量，以便其进程在默认时区运行。无论&lt;a href=&quot;../../ref/settings#std:setting-USE_TZ&quot;&gt; &lt;code&gt;USE_TZ&lt;/code&gt; &lt;/a&gt;的值和当前时区如何，都会发生这种情况。</target>
        </trans-unit>
        <trans-unit id="5ed84b5ba0ead8c1fa04f36e7e7bc74c3791dacc" translate="yes" xml:space="preserve">
          <source>As general programming practice, this goes without saying. Find out &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/faq/models/#faq-see-raw-sql-queries&quot;&gt;what queries you are doing and what they are costing you&lt;/a&gt;. Use &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.explain&quot;&gt;&lt;code&gt;QuerySet.explain()&lt;/code&gt;&lt;/a&gt; to understand how specific &lt;code&gt;QuerySet&lt;/code&gt;s are executed by your database. You may also want to use an external project like &lt;a href=&quot;https://github.com/jazzband/django-debug-toolbar/&quot;&gt;django-debug-toolbar&lt;/a&gt;, or a tool that monitors your database directly.</source>
          <target state="translated">作为一般的编程实践，这毋庸置疑。找出&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/faq/models/#faq-see-raw-sql-queries&quot;&gt;您正在执行的查询以及这些查询使您付出了什么&lt;/a&gt;。使用&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.explain&quot;&gt; &lt;code&gt;QuerySet.explain()&lt;/code&gt; &lt;/a&gt;了解数据库如何执行特定的 &lt;code&gt;QuerySet&lt;/code&gt; 。您可能还想使用外部项目，例如&lt;a href=&quot;https://github.com/jazzband/django-debug-toolbar/&quot;&gt;django-debug-toolbar&lt;/a&gt;，或直接监视数据库的工具。</target>
        </trans-unit>
        <trans-unit id="20b8321f6b1815504a56e2446d229dc3a5cdf1c5" translate="yes" xml:space="preserve">
          <source>As general programming practice, this goes without saying. Find out &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/models/#faq-see-raw-sql-queries&quot;&gt;what queries you are doing and what they are costing you&lt;/a&gt;. Use &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.explain&quot;&gt;&lt;code&gt;QuerySet.explain()&lt;/code&gt;&lt;/a&gt; to understand how specific &lt;code&gt;QuerySet&lt;/code&gt;s are executed by your database. You may also want to use an external project like &lt;a href=&quot;https://github.com/jazzband/django-debug-toolbar/&quot;&gt;django-debug-toolbar&lt;/a&gt;, or a tool that monitors your database directly.</source>
          <target state="translated">作为一般的编程实践，这毋庸置疑。找出&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/models/#faq-see-raw-sql-queries&quot;&gt;您正在执行的查询以及这些查询使您付出了什么&lt;/a&gt;。使用&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.explain&quot;&gt; &lt;code&gt;QuerySet.explain()&lt;/code&gt; &lt;/a&gt;了解数据库如何执行特定的 &lt;code&gt;QuerySet&lt;/code&gt; 。您可能还想使用外部项目，例如&lt;a href=&quot;https://github.com/jazzband/django-debug-toolbar/&quot;&gt;django-debug-toolbar&lt;/a&gt;，或直接监视数据库的工具。</target>
        </trans-unit>
        <trans-unit id="96991b8ac8856522132d360631369f91573de2f0" translate="yes" xml:space="preserve">
          <source>As in the &lt;a href=&quot;#django.contrib.auth.decorators.login_required&quot;&gt;&lt;code&gt;login_required()&lt;/code&gt;&lt;/a&gt; decorator, &lt;code&gt;login_url&lt;/code&gt; defaults to &lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt;&lt;code&gt;settings.LOGIN_URL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">就像在&lt;a href=&quot;#django.contrib.auth.decorators.login_required&quot;&gt; &lt;code&gt;login_required()&lt;/code&gt; &lt;/a&gt;装饰器中一样， &lt;code&gt;login_url&lt;/code&gt; 默认为&lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt; &lt;code&gt;settings.LOGIN_URL&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da9fe3df0ac51ceac9db719eba0178803cb06518" translate="yes" xml:space="preserve">
          <source>As in the previous example, we&amp;rsquo;ll use &lt;code&gt;parser.parse()&lt;/code&gt;. But this time, we pass the resulting &lt;code&gt;nodelist&lt;/code&gt; to the &lt;code&gt;Node&lt;/code&gt;:</source>
          <target state="translated">与前面的示例一样，我们将使用 &lt;code&gt;parser.parse()&lt;/code&gt; 。但是这次，我们将结果 &lt;code&gt;nodelist&lt;/code&gt; 传递给 &lt;code&gt;Node&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="fd1a31b1b353515241d23397568df73c392b1bb5" translate="yes" xml:space="preserve">
          <source>As long as all of the arguments to your class&amp;rsquo; constructor are themselves serializable, you can use the &lt;code&gt;@deconstructible&lt;/code&gt; class decorator from &lt;code&gt;django.utils.deconstruct&lt;/code&gt; to add the &lt;code&gt;deconstruct()&lt;/code&gt; method:</source>
          <target state="translated">只要类的构造函数的所有参数本身都可序列化，就可以使用 &lt;code&gt;@deconstructible&lt;/code&gt; 类装饰器添加 &lt;code&gt;django.utils.deconstruct&lt;/code&gt; &lt;code&gt;deconstruct()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="e600596bc5c873450b656d74b175877787ab3b6f" translate="yes" xml:space="preserve">
          <source>As long as the names match, the model instances will be created correctly.</source>
          <target state="translated">只要名称匹配,模型实例就会被正确创建。</target>
        </trans-unit>
        <trans-unit id="0fde90f7d4164594d56ad64de71511cd1675ba34" translate="yes" xml:space="preserve">
          <source>As long as your tests are properly isolated, you can run them in parallel to gain a speed up on multi-core hardware. See &lt;a href=&quot;../../ref/django-admin#cmdoption-test-parallel&quot;&gt;&lt;code&gt;test --parallel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">只要测试正确隔离，您就可以并行运行它们以加快多核硬件的速度。参见&lt;a href=&quot;../../ref/django-admin#cmdoption-test-parallel&quot;&gt; &lt;code&gt;test --parallel&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d3c70acb93c6e5c1218f6c1395e14e58b7f5c205" translate="yes" xml:space="preserve">
          <source>As long as your tests are sensibly arranged, they won&amp;rsquo;t become unmanageable. Good rules-of-thumb include having:</source>
          <target state="translated">只要您的测试合理安排，它们就不会变得难以管理。好的经验法则包括：</target>
        </trans-unit>
        <trans-unit id="ff98741fa13b2a84ea85722bce2d6ba0fe6eb0c8" translate="yes" xml:space="preserve">
          <source>As mentioned above, an example of a wrapper is a query execution blocker. It could look like this:</source>
          <target state="translated">如上所述,包装器的一个例子是一个查询执行阻止器。它可以是这样的。</target>
        </trans-unit>
        <trans-unit id="1b370539c468c4dfb8aa0c2d9330c6f649435a7a" translate="yes" xml:space="preserve">
          <source>As mentioned in &lt;a href=&quot;tutorial03&quot;&gt;Tutorial 3&lt;/a&gt;, &lt;code&gt;request&lt;/code&gt; is an &lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; object. For more on &lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; objects, see the &lt;a href=&quot;../ref/request-response&quot;&gt;request and response documentation&lt;/a&gt;.</source>
          <target state="translated">如&lt;a href=&quot;tutorial03&quot;&gt;教程3中所述&lt;/a&gt;， &lt;code&gt;request&lt;/code&gt; 是一个&lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;对象。有关&lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;对象的更多信息，请参见&lt;a href=&quot;../ref/request-response&quot;&gt;请求和响应文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4d95c5bf0cefa9c9545e31ef3d2005a5c070fd4d" translate="yes" xml:space="preserve">
          <source>As mentioned, Django will automatically create a &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; linking your child class back to any non-abstract parent models. If you want to control the name of the attribute linking back to the parent, you can create your own &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; and set &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField.parent_link&quot;&gt;&lt;code&gt;parent_link=True&lt;/code&gt;&lt;/a&gt; to indicate that your field is the link back to the parent class.</source>
          <target state="translated">如前所述，Django将自动创建一个&lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; ,&lt;/a&gt;将您的子类链接回任何非抽象的父模型。如果要控制链接回父级的属性的名称，则可以创建自己的&lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt;并设置&lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField.parent_link&quot;&gt; &lt;code&gt;parent_link=True&lt;/code&gt; &lt;/a&gt;以指示您的字段是指向父级类的链接。</target>
        </trans-unit>
        <trans-unit id="d4b79767de4ca41245f3982197bcd1108401cb20" translate="yes" xml:space="preserve">
          <source>As mentioned, any of these methods can raise a &lt;code&gt;ValidationError&lt;/code&gt;. For any field, if the &lt;code&gt;Field.clean()&lt;/code&gt; method raises a &lt;code&gt;ValidationError&lt;/code&gt;, any field-specific cleaning method is not called. However, the cleaning methods for all remaining fields are still executed.</source>
          <target state="translated">如前所述，任何这些方法都可以引发 &lt;code&gt;ValidationError&lt;/code&gt; 。对于任何字段，如果 &lt;code&gt;Field.clean()&lt;/code&gt; 方法引发 &lt;code&gt;ValidationError&lt;/code&gt; ，则不会调用任何特定于字段的清理方法。但是，仍然执行所有剩余字段的清理方法。</target>
        </trans-unit>
        <trans-unit id="c5537608bf329c234a50e1e6bf69edb69274b89a" translate="yes" xml:space="preserve">
          <source>As noted &lt;a href=&quot;#emptying-test-outbox&quot;&gt;previously&lt;/a&gt;, the test outbox is emptied at the start of every test in a Django &lt;code&gt;*TestCase&lt;/code&gt;. To empty the outbox manually, assign the empty list to &lt;code&gt;mail.outbox&lt;/code&gt;:</source>
          <target state="translated">如前所述&lt;a href=&quot;#emptying-test-outbox&quot;&gt;以前&lt;/a&gt;，测试发件箱在每个测试在Django开始清空 &lt;code&gt;*TestCase&lt;/code&gt; 。要手动清空发件箱，请将空列表分配给 &lt;code&gt;mail.outbox&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="11567f9b2cb4749058f2ee08859ac819cbb887ba" translate="yes" xml:space="preserve">
          <source>As noted in the warning at the top of this section, Django stores all SQL queries when &lt;code&gt;DEBUG=True&lt;/code&gt;. Set &lt;code&gt;DEBUG=False&lt;/code&gt; in your settings, and this should stop excessive memory use when running &lt;code&gt;LayerMapping&lt;/code&gt; scripts.</source>
          <target state="translated">如本节顶部的警告所述，当 &lt;code&gt;DEBUG=True&lt;/code&gt; 时，Django将存储所有SQL查询。在设置中设置 &lt;code&gt;DEBUG=False&lt;/code&gt; ，这将在运行 &lt;code&gt;LayerMapping&lt;/code&gt; 脚本时停止过多的内存使用。</target>
        </trans-unit>
        <trans-unit id="b24969d3792077ea0404a1157efaffa2850972af" translate="yes" xml:space="preserve">
          <source>As part of the validation process, &lt;code&gt;ModelForm&lt;/code&gt; will call the &lt;code&gt;clean()&lt;/code&gt; method of each field on your model that has a corresponding field on your form. If you have excluded any model fields, validation will not be run on those fields. See the &lt;a href=&quot;../../ref/forms/validation&quot;&gt;form validation&lt;/a&gt; documentation for more on how field cleaning and validation work.</source>
          <target state="translated">作为验证过程的一部分， &lt;code&gt;ModelForm&lt;/code&gt; 将调用模型上具有表单对应字段的每个字段的 &lt;code&gt;clean()&lt;/code&gt; 方法。如果您排除了任何模型字段，那么将不会在这些字段上运行验证。有关字段清理和验证如何工作的更多信息，请参见&lt;a href=&quot;../../ref/forms/validation&quot;&gt;表单验证&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="6f8ea1ba8d0d9e453e5627c48418ee9fcf732126" translate="yes" xml:space="preserve">
          <source>As per &lt;a href=&quot;https://www.python.org/dev/peps/pep-3134&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3134&lt;/strong&gt;&lt;/a&gt;, a &lt;code&gt;__cause__&lt;/code&gt; attribute is set with the original (underlying) database exception, allowing access to any additional information provided.</source>
          <target state="translated">根据&lt;a href=&quot;https://www.python.org/dev/peps/pep-3134&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3134&lt;/strong&gt;&lt;/a&gt;，使用原始（基础）数据库异常设置 &lt;code&gt;__cause__&lt;/code&gt; 属性，从而允许访问提供的任何其他信息。</target>
        </trans-unit>
        <trans-unit id="4a975be9a69e196fd48d57d72a02baaad0186cb2" translate="yes" xml:space="preserve">
          <source>As previously discussed, you may need to linearize migrations manually when two development branches are joined. While editing migration dependencies, you can inadvertently create an inconsistent history state where a migration has been applied but some of its dependencies haven&amp;rsquo;t. This is a strong indication that the dependencies are incorrect, so Django will refuse to run migrations or make new migrations until it&amp;rsquo;s fixed. When using multiple databases, you can use the &lt;a href=&quot;db/multi-db#allow_migrate&quot;&gt;&lt;code&gt;allow_migrate()&lt;/code&gt;&lt;/a&gt; method of &lt;a href=&quot;db/multi-db#topics-db-multi-db-routing&quot;&gt;database routers&lt;/a&gt; to control which databases &lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; checks for consistent history.</source>
          <target state="translated">如前所述，当两个开发分支合并时，您可能需要手动线性化迁移。在编辑迁移依赖关系时，您可能会无意中创建一个不一致的历史记录状态，在该状态下已应用了迁移，但其中一些依赖关系却没有。这有力地表明了依赖关系是不正确的，因此Django将拒绝运行迁移或进行新迁移，直到修复为止。使用多个数据库时，可以使用&lt;a href=&quot;db/multi-db#topics-db-multi-db-routing&quot;&gt;数据库路由器&lt;/a&gt;的&lt;a href=&quot;db/multi-db#allow_migrate&quot;&gt; &lt;code&gt;allow_migrate()&lt;/code&gt; &lt;/a&gt;方法来控制进行&lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt;数据库检查历史记录的一致性。</target>
        </trans-unit>
        <trans-unit id="34fd3226d75f12bed342a63f13cbfb1d23154cae" translate="yes" xml:space="preserve">
          <source>As some examples have already demonstrated, when using a callable, a model method, or a &lt;code&gt;ModelAdmin&lt;/code&gt; method, you can customize the column&amp;rsquo;s title by adding a &lt;code&gt;short_description&lt;/code&gt; attribute to the callable.</source>
          <target state="translated">如一些示例所示，在使用可调用方法，模型方法或 &lt;code&gt;ModelAdmin&lt;/code&gt; 方法时，可以通过将 &lt;code&gt;short_description&lt;/code&gt; 属性添加到可调用方法来自定义列标题。</target>
        </trans-unit>
        <trans-unit id="2561f19164b49d25174c86ee7483f65e053b31b2" translate="yes" xml:space="preserve">
          <source>As stated earlier, you can override the default queryset used by the model formset:</source>
          <target state="translated">如前所述,您可以覆盖模型表单集使用的默认查询集。</target>
        </trans-unit>
        <trans-unit id="e45703de797a79b14a59e52d99d9dea8a4938b96" translate="yes" xml:space="preserve">
          <source>As the Python comment above points out, you should always return an &lt;a href=&quot;../ref/request-response#django.http.HttpResponseRedirect&quot;&gt;&lt;code&gt;HttpResponseRedirect&lt;/code&gt;&lt;/a&gt; after successfully dealing with POST data. This tip isn&amp;rsquo;t specific to Django; it&amp;rsquo;s good Web development practice in general.</source>
          <target state="translated">正如上面的Python注释所指出的那样，在成功处理POST数据后，您应该始终返回&lt;a href=&quot;../ref/request-response#django.http.HttpResponseRedirect&quot;&gt; &lt;code&gt;HttpResponseRedirect&lt;/code&gt; &lt;/a&gt;。本技巧并非特定于Django；一般来说，这是良好的Web开发实践。</target>
        </trans-unit>
        <trans-unit id="8a4e0f05200f4e3bd790c9fcec0b86c5782a9738" translate="yes" xml:space="preserve">
          <source>As the current site is stored in the database, each call to &lt;code&gt;Site.objects.get_current()&lt;/code&gt; could result in a database query. But Django is a little cleverer than that: on the first request, the current site is cached, and any subsequent call returns the cached data instead of hitting the database.</source>
          <target state="translated">由于当前站点存储在数据库中，因此对 &lt;code&gt;Site.objects.get_current()&lt;/code&gt; 的每次调用都可能导致数据库查询。但是Django比这聪明一点：在第一个请求上，当前站点被缓存，并且任何后续调用都将返回缓存的数据，而不是访问数据库。</target>
        </trans-unit>
        <trans-unit id="1f4099ae5355f2d5fb266cbbd62c197aa3fbf97a" translate="yes" xml:space="preserve">
          <source>As the name suggests the dummy backend does nothing with your messages. To specify this backend, put the following in your settings:</source>
          <target state="translated">顾名思义,虚拟后台对你的消息不做任何处理。要指定这个后台,请在你的设置中加入以下内容。</target>
        </trans-unit>
        <trans-unit id="b2d24c8e355d23d5cc3828d2e2775a8d9e8611a3" translate="yes" xml:space="preserve">
          <source>As the reverse name for a field should be unique, be careful if you intend to subclass your model. To work around name collisions, part of the name should contain &lt;code&gt;'%(app_label)s'&lt;/code&gt; and &lt;code&gt;'%(model_name)s'&lt;/code&gt;, which are replaced respectively by the name of the application the model is in, and the name of the model, both lowercased. See the paragraph on &lt;a href=&quot;../../topics/db/models#abstract-related-name&quot;&gt;related names for abstract models&lt;/a&gt;.</source>
          <target state="translated">由于字段的反向名称应该唯一，因此如果要对模型进行子类化，请小心。要解决名称冲突，名称的一部分应包含 &lt;code&gt;'%(app_label)s'&lt;/code&gt; 和 &lt;code&gt;'%(model_name)s'&lt;/code&gt; ，分别用模型所在的应用程序的名称和模型的名称替换，两者均小写。有关&lt;a href=&quot;../../topics/db/models#abstract-related-name&quot;&gt;抽象模型，&lt;/a&gt;请参见有关名称的段落。</target>
        </trans-unit>
        <trans-unit id="4f01c1b15fa03baf75efdacb0fbf90b5fd8345d1" translate="yes" xml:space="preserve">
          <source>As this example shows, the same datetime has a different date, depending on the time zone in which it is represented. But the real problem is more fundamental.</source>
          <target state="translated">正如这个例子所显示的那样,同一个日期时间有不同的日期,这取决于它所代表的时区。但真正的问题是更根本的。</target>
        </trans-unit>
        <trans-unit id="a4703cede843d60da3b461a023a621276dff45e4" translate="yes" xml:space="preserve">
          <source>As this example suggests, you can instantiate &lt;code&gt;Client&lt;/code&gt; from within a session of the Python interactive interpreter.</source>
          <target state="translated">如该示例所示，您可以在Python交互式解释器的会话中实例化 &lt;code&gt;Client&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="502899b59d7f16acbbec8754d2d17b6c9dfe74f9" translate="yes" xml:space="preserve">
          <source>As users create new sessions on your website, session data can accumulate in your session store. If you&amp;rsquo;re using the database backend, the &lt;code&gt;django_session&lt;/code&gt; database table will grow. If you&amp;rsquo;re using the file backend, your temporary directory will contain an increasing number of files.</source>
          <target state="translated">当用户在您的网站上创建新会话时，会话数据会累积在您的会话存储中。如果您使用的是数据库后端，则 &lt;code&gt;django_session&lt;/code&gt; 数据库表将会增长。如果您使用的是文件后端，则您的临时目录将包含越来越多的文件。</target>
        </trans-unit>
        <trans-unit id="83a34f76469cc0136158fd2b4197ba5b321cd9c2" translate="yes" xml:space="preserve">
          <source>As we can see, &lt;code&gt;formset.errors&lt;/code&gt; is a list whose entries correspond to the forms in the formset. Validation was performed for each of the two forms, and the expected error message appears for the second item.</source>
          <target state="translated">如我们所见， &lt;code&gt;formset.errors&lt;/code&gt; 是一个列表，其条目与表单集中的表单相对应。对两种形式中的每一种都进行了验证，第二项出现了预期的错误消息。</target>
        </trans-unit>
        <trans-unit id="536eb63644b98260775a8d5bdac6172bde9f8ea8" translate="yes" xml:space="preserve">
          <source>As we mentioned earlier, filter arguments can be strings:</source>
          <target state="translated">正如我们前面提到的,过滤器的参数可以是字符串。</target>
        </trans-unit>
        <trans-unit id="d97e9a7198203ff3683051dde6ca2dc19c4acf85" translate="yes" xml:space="preserve">
          <source>As well as WSGI, Django also supports deploying on &lt;a href=&quot;https://asgi.readthedocs.io/en/latest/&quot;&gt;ASGI&lt;/a&gt;, the emerging Python standard for asynchronous web servers and applications.</source>
          <target state="translated">与WSGI一样，Django还支持在&lt;a href=&quot;https://asgi.readthedocs.io/en/latest/&quot;&gt;ASGI上进行&lt;/a&gt;部署，ASGI是用于异步Web服务器和应用程序的新兴Python标准。</target>
        </trans-unit>
        <trans-unit id="e2585fab4aa7d69fceb35ff4ec7ebeb9b8c671c6" translate="yes" xml:space="preserve">
          <source>As well as being synchronous functions, views can also be asynchronous (&amp;ldquo;async&amp;rdquo;) functions, normally defined using Python&amp;rsquo;s &lt;code&gt;async def&lt;/code&gt; syntax. Django will automatically detect these and run them in an async context. However, you will need to use an async server based on ASGI to get their performance benefits.</source>
          <target state="translated">视图不仅是同步函数，还可以是异步（&amp;ldquo; async&amp;rdquo;）函数，通常使用Python的 &lt;code&gt;async def&lt;/code&gt; 语法定义。Django将自动检测它们并在异步上下文中运行它们。但是，您将需要使用基于ASGI的异步服务器来获得其性能优势。</target>
        </trans-unit>
        <trans-unit id="3389aa26160872fdc1ff800062f3da9f89662bf3" translate="yes" xml:space="preserve">
          <source>As well as being used in operations on single instances as above, &lt;code&gt;F()&lt;/code&gt; can be used on &lt;code&gt;QuerySets&lt;/code&gt; of object instances, with &lt;code&gt;update()&lt;/code&gt;. This reduces the two queries we were using above - the &lt;code&gt;get()&lt;/code&gt; and the &lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; - to just one:</source>
          <target state="translated">&lt;code&gt;F()&lt;/code&gt; 不仅可以在单个实例的操作中使用，而且还可以通过 &lt;code&gt;update()&lt;/code&gt; 在对象实例的 &lt;code&gt;QuerySets&lt;/code&gt; 上使用。这将我们上面使用的两个查询 &lt;code&gt;get()&lt;/code&gt; 和&lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; )减少&lt;/a&gt;到一个：</target>
        </trans-unit>
        <trans-unit id="4b32c9168863a30b185a6576d29e12334bee3290" translate="yes" xml:space="preserve">
          <source>As well as caching of the whole &lt;code&gt;QuerySet&lt;/code&gt;, there is caching of the result of attributes on ORM objects. In general, attributes that are not callable will be cached. For example, assuming the &lt;a href=&quot;queries#queryset-model-example&quot;&gt;example Weblog models&lt;/a&gt;:</source>
          <target state="translated">除了缓存整个 &lt;code&gt;QuerySet&lt;/code&gt; 之外，还缓存ORM对象上的属性结果。通常，不可调用的属性将被缓存。例如，假设&lt;a href=&quot;queries#queryset-model-example&quot;&gt;示例Weblog模型&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f07fcd9b4fddeadcbcc6d4ab96f71f5ab157dc76" translate="yes" xml:space="preserve">
          <source>As well as changing the database schema, you can also use migrations to change the data in the database itself, in conjunction with the schema if you want.</source>
          <target state="translated">除了改变数据库模式外,你还可以使用迁移来改变数据库本身的数据,如果你想的话,还可以结合模式来改变。</target>
        </trans-unit>
        <trans-unit id="fb9aab9ad8871c655982b7b13ec479d3f5d6959c" translate="yes" xml:space="preserve">
          <source>As well as its &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements, a form must specify two things:</source>
          <target state="translated">表单及其 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 元素还必须指定两件事：</target>
        </trans-unit>
        <trans-unit id="a6abd1f01d13e5e8325182af83c6feb5563a04b9" translate="yes" xml:space="preserve">
          <source>As well as offering potential performance advantages, &lt;code&gt;@cached_property&lt;/code&gt; can ensure that an attribute&amp;rsquo;s value does not change unexpectedly over the life of an instance. This could occur with a method whose computation is based on &lt;code&gt;datetime.now()&lt;/code&gt;, or if a change were saved to the database by some other process in the brief interval between subsequent invocations of a method on the same instance.</source>
          <target state="translated">除了提供潜在的性能优势外， &lt;code&gt;@cached_property&lt;/code&gt; 还可以确保属性值在实例的生命周期内不会发生意外更改。这可能发生在其计算基于 &lt;code&gt;datetime.now()&lt;/code&gt; 的方法上，或者如果在同一实例的方法的后续调用之间的短暂间隔内其他某个进程将更改保存到数据库中，则可能会发生这种情况。</target>
        </trans-unit>
        <trans-unit id="ebe8b7ef5f360037fb3404468afcd52377e7e74f" translate="yes" xml:space="preserve">
          <source>As well as the named group syntax, e.g. &lt;code&gt;(?P&amp;lt;year&amp;gt;[0-9]{4})&lt;/code&gt;, you can also use the shorter unnamed group, e.g. &lt;code&gt;([0-9]{4})&lt;/code&gt;.</source>
          <target state="translated">除了命名组语法，例如 &lt;code&gt;(?P&amp;lt;year&amp;gt;[0-9]{4})&lt;/code&gt; ，还可以使用较短的未命名组，例如 &lt;code&gt;([0-9]{4})&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e6561daa7eafe8b31858f977bd4b5a102fd1e7c" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;#urlize&quot;&gt;urlize&lt;/a&gt;, this filter should only be applied to plain text.</source>
          <target state="translated">与&lt;a href=&quot;#urlize&quot;&gt;urlize一样&lt;/a&gt;，此过滤器应仅应用于纯文本。</target>
        </trans-unit>
        <trans-unit id="195bc7afc75bee63d50df5ca12d3cc6ac1d43324" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;../../ref/models/fields#recursive-relationships&quot;&gt;recursive relationship&lt;/a&gt; can be defined and &lt;a href=&quot;../../ref/models/fields#lazy-relationships&quot;&gt;references to as-yet undefined models&lt;/a&gt; can be made.</source>
          <target state="translated">与&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; 一样&lt;/a&gt;，可以定义&lt;a href=&quot;../../ref/models/fields#recursive-relationships&quot;&gt;递归关系，&lt;/a&gt;并且&lt;a href=&quot;../../ref/models/fields#lazy-relationships&quot;&gt;可以引用尚未定义的模型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d12d0262217934e05bda9cb843bd23a7b0971aca" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, you can also create &lt;a href=&quot;../../ref/models/fields#recursive-relationships&quot;&gt;recursive relationships&lt;/a&gt; (an object with a many-to-many relationship to itself) and &lt;a href=&quot;../../ref/models/fields#lazy-relationships&quot;&gt;relationships to models not yet defined&lt;/a&gt;.</source>
          <target state="translated">与&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; 一样&lt;/a&gt;，您也可以创建&lt;a href=&quot;../../ref/models/fields#recursive-relationships&quot;&gt;递归关系&lt;/a&gt;（一个与自身具有多对多关系的对象）和&lt;a href=&quot;../../ref/models/fields#lazy-relationships&quot;&gt;与尚未定义的模型的关系&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e8c6e392099eca6c7e281f29671628ef8d61549b" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;aggregate()&lt;/code&gt;, the name for the annotation is automatically derived from the name of the aggregate function and the name of the field being aggregated. You can override this default name by providing an alias when you specify the annotation:</source>
          <target state="translated">与 &lt;code&gt;aggregate()&lt;/code&gt; ，批注的名称自动从聚合函数的名称和要聚合的字段的名称派生。指定注释时，可以通过提供别名来覆盖此默认名称：</target>
        </trans-unit>
        <trans-unit id="5d5177c681d3236422cff8cca56cf926bb1d7cc5" translate="yes" xml:space="preserve">
          <source>As with a &lt;code&gt;ModelForm&lt;/code&gt;, you can save the data as a model object. This is done with the formset&amp;rsquo;s &lt;code&gt;save()&lt;/code&gt; method:</source>
          <target state="translated">与 &lt;code&gt;ModelForm&lt;/code&gt; 一样，您可以将数据另存为模型对象。这是通过formset的 &lt;code&gt;save()&lt;/code&gt; 方法完成的：</target>
        </trans-unit>
        <trans-unit id="f72eeb211b45f63562fd3611d19742bd0f2e3757" translate="yes" xml:space="preserve">
          <source>As with all deployment tasks, the devil&amp;rsquo;s in the details. Every production setup will be a bit different, so you&amp;rsquo;ll need to adapt the basic outline to fit your needs. Below are a few common patterns that might help.</source>
          <target state="translated">与所有部署任务一样，细节中包含魔鬼。每个生产设置都会有所不同，因此您需要调整基本轮廓以适合您的需求。以下是一些可能有用的常见模式。</target>
        </trans-unit>
        <trans-unit id="d344166e704cbb21a3a3d2b39d35983e33095843" translate="yes" xml:space="preserve">
          <source>As with basic forms, you can extend and reuse &lt;code&gt;ModelForms&lt;/code&gt; by inheriting them. This is useful if you need to declare extra fields or extra methods on a parent class for use in a number of forms derived from models. For example, using the previous &lt;code&gt;ArticleForm&lt;/code&gt; class:</source>
          <target state="translated">与基本表单一样，您可以通过继承来扩展和重用 &lt;code&gt;ModelForms&lt;/code&gt; 。如果您需要在父类上声明额外的字段或额外的方法以用于从模型派生的多种形式中，这将非常有用。例如，使用以前的 &lt;code&gt;ArticleForm&lt;/code&gt; 类：</target>
        </trans-unit>
        <trans-unit id="b8a6cb2344f9d9208fd7d7b21b208a1b9b466d30" translate="yes" xml:space="preserve">
          <source>As with filter registration, it is also possible to use this as a decorator:</source>
          <target state="translated">与过滤器注册一样,也可以将其用作装饰器。</target>
        </trans-unit>
        <trans-unit id="7f84614669e2fdbcc38582abe3003d63a2433a52" translate="yes" xml:space="preserve">
          <source>As with other HTTP headers in &lt;code&gt;request.META&lt;/code&gt;, the header name received from the server is normalized by converting all characters to uppercase, replacing any hyphens with underscores, and adding an &lt;code&gt;'HTTP_'&lt;/code&gt; prefix to the name. For example, if your client sends a &lt;code&gt;'X-XSRF-TOKEN'&lt;/code&gt; header, the setting should be &lt;code&gt;'HTTP_X_XSRF_TOKEN'&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;request.META&lt;/code&gt; 中的其他HTTP头一样，通过将所有字符都转换为大写字母，用下划线替换所有连字符，并在名称中添加一个 &lt;code&gt;'HTTP_'&lt;/code&gt; 前缀，来规范化从服务器接收到的头名称。例如，如果您的客户端发送 &lt;code&gt;'X-XSRF-TOKEN'&lt;/code&gt; 标头，则设置应为 &lt;code&gt;'HTTP_X_XSRF_TOKEN'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d5eeeb534d86f8c229f540d1e439534abcf6637" translate="yes" xml:space="preserve">
          <source>As with other PostgreSQL fields, there are three standard containment operators: &lt;code&gt;contains&lt;/code&gt;, &lt;code&gt;contained_by&lt;/code&gt; and &lt;code&gt;overlap&lt;/code&gt;, using the SQL operators &lt;code&gt;@&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;@&lt;/code&gt;, and &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; respectively.</source>
          <target state="translated">如同其它的PostgreSQL领域中，有三个标准遏制操作符： &lt;code&gt;contains&lt;/code&gt; ， &lt;code&gt;contained_by&lt;/code&gt; 和 &lt;code&gt;overlap&lt;/code&gt; ，使用SQL操作 &lt;code&gt;@&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;@&lt;/code&gt; ,和 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 分别。</target>
        </trans-unit>
        <trans-unit id="ba0b4d8b02f8406aeb52d3f8ee5150ce47d68b9e" translate="yes" xml:space="preserve">
          <source>As with other fields, storing &lt;code&gt;None&lt;/code&gt; as the field&amp;rsquo;s value will store it as SQL &lt;code&gt;NULL&lt;/code&gt;. While not recommended, it is possible to store JSON scalar &lt;code&gt;null&lt;/code&gt; instead of SQL &lt;code&gt;NULL&lt;/code&gt; by using &lt;a href=&quot;../../ref/models/expressions#django.db.models.Value&quot;&gt;&lt;code&gt;Value('null')&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">与其他字段一样，将 &lt;code&gt;None&lt;/code&gt; 存储为该字段的值会将其存储为SQL &lt;code&gt;NULL&lt;/code&gt; 。虽然不建议使用，但可以使用&lt;a href=&quot;../../ref/models/expressions#django.db.models.Value&quot;&gt; &lt;code&gt;Value('null')&lt;/code&gt; &lt;/a&gt;来存储JSON标量 &lt;code&gt;null&lt;/code&gt; 而不是SQL &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e64144e886b411ea54b8b392eef0caf07cb6cef" translate="yes" xml:space="preserve">
          <source>As with regular forms, it&amp;rsquo;s possible to specify initial data for forms by specifying an &lt;code&gt;initial&lt;/code&gt; parameter when instantiating the form. Initial values provided this way will override both initial values from the form field and values from an attached model instance. For example:</source>
          <target state="translated">与常规表单一样，可以在实例化表单时通过指定 &lt;code&gt;initial&lt;/code&gt; 参数来为表单指定初始数据。通过这种方式提供的初始值将覆盖来自表单字段的初始值和来自附加模型实例的值。例如：</target>
        </trans-unit>
        <trans-unit id="ffe99c485c3dc0ce533f1043d34823610c27123f" translate="yes" xml:space="preserve">
          <source>As with regular formsets, it&amp;rsquo;s possible to &lt;a href=&quot;formsets#formsets-initial-data&quot;&gt;specify initial data&lt;/a&gt; for forms in the formset by specifying an &lt;code&gt;initial&lt;/code&gt; parameter when instantiating the model formset class returned by &lt;a href=&quot;../../ref/forms/models#django.forms.models.modelformset_factory&quot;&gt;&lt;code&gt;modelformset_factory()&lt;/code&gt;&lt;/a&gt;. However, with model formsets, the initial values only apply to extra forms, those that aren&amp;rsquo;t attached to an existing model instance. If the length of &lt;code&gt;initial&lt;/code&gt; exceeds the number of extra forms, the excess initial data is ignored. If the extra forms with initial data aren&amp;rsquo;t changed by the user, they won&amp;rsquo;t be validated or saved.</source>
          <target state="translated">与常规表单集一样，可以在实例化由&lt;a href=&quot;../../ref/forms/models#django.forms.models.modelformset_factory&quot;&gt; &lt;code&gt;modelformset_factory()&lt;/code&gt; &lt;/a&gt;返回的模型formset类时，通过指定 &lt;code&gt;initial&lt;/code&gt; 参数来为表单集中的表单&lt;a href=&quot;formsets#formsets-initial-data&quot;&gt;指定初始数据&lt;/a&gt;。但是，对于模型表单集，初始值仅适用于额外的表单，那些未附加到现有模型实例的表单。如果 &lt;code&gt;initial&lt;/code&gt; 的长度超过额外形式的数量，则多余的初始数据将被忽略。如果用户不更改带有初始数据的额外表格，则不会对其进行验证或保存。</target>
        </trans-unit>
        <trans-unit id="527f8cf0e286007c370fc877419357e189a4595a" translate="yes" xml:space="preserve">
          <source>As with regular formsets, you can use the &lt;code&gt;max_num&lt;/code&gt; and &lt;code&gt;extra&lt;/code&gt; parameters to &lt;a href=&quot;../../ref/forms/models#django.forms.models.modelformset_factory&quot;&gt;&lt;code&gt;modelformset_factory()&lt;/code&gt;&lt;/a&gt; to limit the number of extra forms displayed.</source>
          <target state="translated">与常规表单集一样，可以使用 &lt;code&gt;max_num&lt;/code&gt; 和 &lt;code&gt;extra&lt;/code&gt; 参数对modelformset_factory &lt;a href=&quot;../../ref/forms/models#django.forms.models.modelformset_factory&quot;&gt; &lt;code&gt;modelformset_factory()&lt;/code&gt; &lt;/a&gt;进行限制，以限制显示的额外表单的数量。</target>
        </trans-unit>
        <trans-unit id="1d5de867c1639776d4da6c2f4f2d7cb718667f07" translate="yes" xml:space="preserve">
          <source>As with the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.fields&quot;&gt;&lt;code&gt;fields&lt;/code&gt;&lt;/a&gt; option, to display multiple fields on the same line, wrap those fields in their own tuple. In this example, the &lt;code&gt;first_name&lt;/code&gt; and &lt;code&gt;last_name&lt;/code&gt; fields will display on the same line:</source>
          <target state="translated">与&lt;a href=&quot;#django.contrib.admin.ModelAdmin.fields&quot;&gt; &lt;code&gt;fields&lt;/code&gt; &lt;/a&gt;选项一样，要在同一行上显示多个字段，请将这些字段包装在自己的元组中。在此示例中， &lt;code&gt;first_name&lt;/code&gt; 和 &lt;code&gt;last_name&lt;/code&gt; 字段将显示在同一行上：</target>
        </trans-unit>
        <trans-unit id="2234be373123e78349407666595d653e39152ca6" translate="yes" xml:space="preserve">
          <source>As with the &lt;code&gt;filter()&lt;/code&gt; clause, the order in which &lt;code&gt;annotate()&lt;/code&gt; and &lt;code&gt;values()&lt;/code&gt; clauses are applied to a query is significant. If the &lt;code&gt;values()&lt;/code&gt; clause precedes the &lt;code&gt;annotate()&lt;/code&gt;, the annotation will be computed using the grouping described by the &lt;code&gt;values()&lt;/code&gt; clause.</source>
          <target state="translated">与 &lt;code&gt;filter()&lt;/code&gt; 子句一样，将 &lt;code&gt;annotate()&lt;/code&gt; 和 &lt;code&gt;values()&lt;/code&gt; 子句应用于查询的顺序也很重要。如果 &lt;code&gt;values()&lt;/code&gt; 子句位于 &lt;code&gt;annotate()&lt;/code&gt; 之前，则将使用 &lt;code&gt;values()&lt;/code&gt; 子句描述的分组来计算注释。</target>
        </trans-unit>
        <trans-unit id="9d604729c5ccc31017088443f69517e4b2a49494" translate="yes" xml:space="preserve">
          <source>As with the filter class, you may control which exception reporter class to use within any given view by setting the &lt;code&gt;HttpRequest&lt;/code&gt;&amp;rsquo;s &lt;code&gt;exception_reporter_class&lt;/code&gt; attribute:</source>
          <target state="translated">与过滤器类一样，您可以通过设置 &lt;code&gt;HttpRequest&lt;/code&gt; 的 &lt;code&gt;exception_reporter_class&lt;/code&gt; 属性来控制在任何给定视图中使用哪个异常报告器类：</target>
        </trans-unit>
        <trans-unit id="9fba9371114d62d3639b4d42414a8a9aa5814a71" translate="yes" xml:space="preserve">
          <source>As you are using an intermediate model, you can also query on its attributes:</source>
          <target state="translated">由于你使用的是中间模型,你也可以对其属性进行查询。</target>
        </trans-unit>
        <trans-unit id="cc048712e6598211018ab15fc4c4e5d7705ea164" translate="yes" xml:space="preserve">
          <source>As you can see it only displayed one empty form. The number of empty forms that is displayed is controlled by the &lt;code&gt;extra&lt;/code&gt; parameter. By default, &lt;a href=&quot;../../ref/forms/formsets#django.forms.formsets.formset_factory&quot;&gt;&lt;code&gt;formset_factory()&lt;/code&gt;&lt;/a&gt; defines one extra form; the following example will create a formset class to display two blank forms:</source>
          <target state="translated">如您所见，它只显示一个空表格。显示的空白表格数量由 &lt;code&gt;extra&lt;/code&gt; 参数控制。默认情况下，&lt;a href=&quot;../../ref/forms/formsets#django.forms.formsets.formset_factory&quot;&gt; &lt;code&gt;formset_factory()&lt;/code&gt; &lt;/a&gt;定义了一种额外的形式。下面的示例将创建一个formset类以显示两个空白表单：</target>
        </trans-unit>
        <trans-unit id="879c04f43647cd15cb5b4809e41772fd4186faf1" translate="yes" xml:space="preserve">
          <source>As you can see, &lt;code&gt;SlugField&lt;/code&gt; is a &lt;code&gt;CharField&lt;/code&gt; with a customized validator that validates that submitted text obeys to some character rules. This can also be done on field definition so:</source>
          <target state="translated">如您所见， &lt;code&gt;SlugField&lt;/code&gt; 是具有自定义验证器的 &lt;code&gt;CharField&lt;/code&gt; ，该验证器验证提交的文本服从某些字符规则。这也可以在字段定义上完成，这样：</target>
        </trans-unit>
        <trans-unit id="67c02b659fb85b72e2371888efd652ce146dfaa7" translate="yes" xml:space="preserve">
          <source>As you can see, the &lt;code&gt;deserialize&lt;/code&gt; function takes the same format argument as &lt;code&gt;serialize&lt;/code&gt;, a string or stream of data, and returns an iterator.</source>
          <target state="translated">如您所见， &lt;code&gt;deserialize&lt;/code&gt; 函数采用与 &lt;code&gt;serialize&lt;/code&gt; 相同的format参数，即字符串或数据流，并返回一个迭代器。</target>
        </trans-unit>
        <trans-unit id="71345e5bba220323ebb78dd2c42b60e93d3002a3" translate="yes" xml:space="preserve">
          <source>As you can see, the &lt;code&gt;if&lt;/code&gt; tag may take one or several &lt;code&gt;{% elif %}&lt;/code&gt; clauses, as well as an &lt;code&gt;{% else %}&lt;/code&gt; clause that will be displayed if all previous conditions fail. These clauses are optional.</source>
          <target state="translated">如您所见， &lt;code&gt;if&lt;/code&gt; 标记可能包含一个或多个 &lt;code&gt;{% elif %}&lt;/code&gt; 子句，以及一个 &lt;code&gt;{% else %}&lt;/code&gt; 子句，如果所有先前条件都失败，则将显示该子句。这些子句是可选的。</target>
        </trans-unit>
        <trans-unit id="f8915f71d46f96a37ab702d1b08b5f5deda8900e" translate="yes" xml:space="preserve">
          <source>As you can see, the action is rather short; all the complex logic would belong in your export view. This would need to deal with objects of any type, hence the business with the &lt;code&gt;ContentType&lt;/code&gt;.</source>
          <target state="translated">如您所见，动作很短；所有复杂的逻辑都将属于您的导出视图。这将需要处理任何类型的对象，因此需要处理 &lt;code&gt;ContentType&lt;/code&gt; 的业务。</target>
        </trans-unit>
        <trans-unit id="0ba5fb948174a296eee1bc5ce8a1d74a772bd21b" translate="yes" xml:space="preserve">
          <source>As you can see, the view logic of a model formset isn&amp;rsquo;t drastically different than that of a &amp;ldquo;normal&amp;rdquo; formset. The only difference is that we call &lt;code&gt;formset.save()&lt;/code&gt; to save the data into the database. (This was described above, in &lt;a href=&quot;#saving-objects-in-the-formset&quot;&gt;Saving objects in the formset&lt;/a&gt;.)</source>
          <target state="translated">如您所见，模型表单集的视图逻辑与&amp;ldquo;普通&amp;rdquo;表单集的视图逻辑没有太大不同。唯一的区别是我们调用 &lt;code&gt;formset.save()&lt;/code&gt; 将数据保存到数据库中。（上面在&amp;ldquo; &lt;a href=&quot;#saving-objects-in-the-formset&quot;&gt;保存表单&lt;/a&gt;集中的对象&amp;rdquo;中对此进行了描述。）</target>
        </trans-unit>
        <trans-unit id="de0f25a2104a49777d9ee597d14852fc1ff51dce" translate="yes" xml:space="preserve">
          <source>As you might expect, the &lt;code&gt;ForeignKey&lt;/code&gt; and &lt;code&gt;ManyToManyField&lt;/code&gt; model field types are special cases:</source>
          <target state="translated">如您所料， &lt;code&gt;ForeignKey&lt;/code&gt; 和 &lt;code&gt;ManyToManyField&lt;/code&gt; 模型字段类型是特殊情况：</target>
        </trans-unit>
        <trans-unit id="cbdc9cb77dc9cc6e2126127526db5ead30982a19" translate="yes" xml:space="preserve">
          <source>As you might expect, the created models will have an attribute for every field in the table. Note that &lt;code&gt;inspectdb&lt;/code&gt; has a few special cases in its field-name output:</source>
          <target state="translated">如您所料，创建的模型将为表中的每个字段都具有一个属性。请注意， &lt;code&gt;inspectdb&lt;/code&gt; 在其字段名输出中有一些特殊情况：</target>
        </trans-unit>
        <trans-unit id="b982efad890175e01516b81e3f537fb6d8014461" translate="yes" xml:space="preserve">
          <source>Aside from strings and bytestrings, there&amp;rsquo;s a third type of string-like object you may encounter when using Django. The framework&amp;rsquo;s internationalization features introduce the concept of a &amp;ldquo;lazy translation&amp;rdquo; &amp;ndash; a string that has been marked as translated but whose actual translation result isn&amp;rsquo;t determined until the object is used in a string. This feature is useful in cases where the translation locale is unknown until the string is used, even though the string might have originally been created when the code was first imported.</source>
          <target state="translated">除了字符串和字节串，使用Django时可能还会遇到第三种类似字符串的对象。该框架的国际化功能引入了&amp;ldquo;惰性翻译&amp;rdquo;的概念-一个已被标记为已翻译但未确定实际翻译结果的字符串，直到在字符串中使用该对象为止。此功能在以下情况下很有用：即使在首次使用代码时可能最初创建的字符串中，直到使用字符串之前，翻译语言环境都是未知的。</target>
        </trans-unit>
        <trans-unit id="73bf916809eadb87e354ae61d91f8d7fada6f240" translate="yes" xml:space="preserve">
          <source>Aside from the HTML generated by the server, web applications generally need to serve additional files &amp;mdash; such as images, JavaScript, or CSS &amp;mdash; necessary to render the complete web page. In Django, we refer to these files as &amp;ldquo;static files&amp;rdquo;.</source>
          <target state="translated">除了服务器生成的HTML外，Web应用程序通常还需要提供其他文件（例如图像，JavaScript或CSS），这些文件是呈现整个Web页面所必需的。在Django中，我们将这些文件称为&amp;ldquo;静态文件&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="801335ff891c76c3f61153e82fc7e76f405d1de3" translate="yes" xml:space="preserve">
          <source>Aside from using a separate database, the test runner will otherwise use all of the same database settings you have in your settings file: &lt;a href=&quot;../../ref/settings#std:setting-DATABASE-ENGINE&quot;&gt;&lt;code&gt;ENGINE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/settings#std:setting-USER&quot;&gt;&lt;code&gt;USER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/settings#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt;, etc. The test database is created by the user specified by &lt;a href=&quot;../../ref/settings#std:setting-USER&quot;&gt;&lt;code&gt;USER&lt;/code&gt;&lt;/a&gt;, so you&amp;rsquo;ll need to make sure that the given user account has sufficient privileges to create a new database on the system.</source>
          <target state="translated">除了使用单独的数据库之外，测试运行程序还将使用设置文件中的所有相同数据库设置：&lt;a href=&quot;../../ref/settings#std:setting-DATABASE-ENGINE&quot;&gt; &lt;code&gt;ENGINE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../ref/settings#std:setting-USER&quot;&gt; &lt;code&gt;USER&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../ref/settings#std:setting-HOST&quot;&gt; &lt;code&gt;HOST&lt;/code&gt; &lt;/a&gt;等。测试数据库由&lt;a href=&quot;../../ref/settings#std:setting-USER&quot;&gt; &lt;code&gt;USER&lt;/code&gt; &lt;/a&gt;指定的用户创建，因此您将需要确保给定的用户帐户具有足够的特权才能在系统上创建新数据库。</target>
        </trans-unit>
        <trans-unit id="a3e68cd197fc11a427c01118c11dbb487de2b2c1" translate="yes" xml:space="preserve">
          <source>Ask a question in the &lt;a href=&quot;irc://irc.freenode.net/django&quot;&gt;#django IRC channel&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;irc://irc.freenode.net/django&quot;&gt;#django IRC频道中&lt;/a&gt;提问。</target>
        </trans-unit>
        <trans-unit id="7eb1f68e967a33147b40021bee5c44bbf8c067e4" translate="yes" xml:space="preserve">
          <source>Ask your question on the &lt;a href=&quot;https://groups.google.com/d/forum/geodjango&quot;&gt;GeoDjango&lt;/a&gt; mailing list.</source>
          <target state="translated">在&lt;a href=&quot;https://groups.google.com/d/forum/geodjango&quot;&gt;GeoDjango&lt;/a&gt;邮件列表中提问。</target>
        </trans-unit>
        <trans-unit id="49bf55dc112eb3597726ba8ecf785a4fae4cbce0" translate="yes" xml:space="preserve">
          <source>Assertions</source>
          <target state="translated">Assertions</target>
        </trans-unit>
        <trans-unit id="3c3ab385220f6b65aa5032ebca76349ce0988bbe" translate="yes" xml:space="preserve">
          <source>Asserts that a &lt;code&gt;Response&lt;/code&gt; instance produced the given &lt;code&gt;status_code&lt;/code&gt; and that &lt;code&gt;text&lt;/code&gt; appears in the content of the response. If &lt;code&gt;count&lt;/code&gt; is provided, &lt;code&gt;text&lt;/code&gt; must occur exactly &lt;code&gt;count&lt;/code&gt; times in the response.</source>
          <target state="translated">断言 &lt;code&gt;Response&lt;/code&gt; 实例产生了给定的 &lt;code&gt;status_code&lt;/code&gt; ,并且该 &lt;code&gt;text&lt;/code&gt; 出现在响应的内容中。如果提供了 &lt;code&gt;count&lt;/code&gt; ，则 &lt;code&gt;text&lt;/code&gt; 必须在响应中精确地出现 &lt;code&gt;count&lt;/code&gt; 时间。</target>
        </trans-unit>
        <trans-unit id="463c066a0ef6fd410a35e951dd7b3b5877e69f1f" translate="yes" xml:space="preserve">
          <source>Asserts that a &lt;code&gt;Response&lt;/code&gt; instance produced the given &lt;code&gt;status_code&lt;/code&gt; and that &lt;code&gt;text&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; appear in the content of the response.</source>
          <target state="translated">断言一个 &lt;code&gt;Response&lt;/code&gt; 实例产生给定 &lt;code&gt;status_code&lt;/code&gt; 和 &lt;code&gt;text&lt;/code&gt; 并&lt;em&gt;没有&lt;/em&gt;出现在响应的内容。</target>
        </trans-unit>
        <trans-unit id="0fd5de239fdc9bd26df8c09eab928a6817abad4f" translate="yes" xml:space="preserve">
          <source>Asserts that a field on a form raises the provided list of errors when rendered on the form.</source>
          <target state="translated">断言表单中的某个字段在表单中呈现时,会引发所提供的错误列表。</target>
        </trans-unit>
        <trans-unit id="42c441e6d48fad10619b9628fd6668cb1e216b3a" translate="yes" xml:space="preserve">
          <source>Asserts that a form field behaves correctly with various inputs.</source>
          <target state="translated">断言表单字段在不同的输入情况下表现正确。</target>
        </trans-unit>
        <trans-unit id="c16ebaf667ff8d9be17b8441be73f7c3b07fcbff" translate="yes" xml:space="preserve">
          <source>Asserts that a queryset &lt;code&gt;qs&lt;/code&gt; returns a particular list of values &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">断言queryset &lt;code&gt;qs&lt;/code&gt; 返回值 &lt;code&gt;values&lt;/code&gt; 的特定列表。</target>
        </trans-unit>
        <trans-unit id="7d04d0343979b42c4abb311c3aa9e3d89b870915" translate="yes" xml:space="preserve">
          <source>Asserts that execution of &lt;code&gt;callable&lt;/code&gt; raises &lt;code&gt;expected_exception&lt;/code&gt; and that &lt;code&gt;expected_message&lt;/code&gt; is found in the exception&amp;rsquo;s message. Any other outcome is reported as a failure. It&amp;rsquo;s a simpler version of &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaisesRegex&quot;&gt;&lt;code&gt;unittest.TestCase.assertRaisesRegex()&lt;/code&gt;&lt;/a&gt; with the difference that &lt;code&gt;expected_message&lt;/code&gt; isn&amp;rsquo;t treated as a regular expression.</source>
          <target state="translated">断言的执行 &lt;code&gt;callable&lt;/code&gt; 加薪 &lt;code&gt;expected_exception&lt;/code&gt; 和 &lt;code&gt;expected_message&lt;/code&gt; 是异常的消息中找到。任何其他结果都报告为失败。这是一个简单的版本&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaisesRegex&quot;&gt; &lt;code&gt;unittest.TestCase.assertRaisesRegex()&lt;/code&gt; &lt;/a&gt;与区别 &lt;code&gt;expected_message&lt;/code&gt; 不作为正则表达式处理。</target>
        </trans-unit>
        <trans-unit id="d6161ea697a7c27f8a9591827bd5e9b9c1efba2e" translate="yes" xml:space="preserve">
          <source>Asserts that the &lt;code&gt;formset&lt;/code&gt; raises the provided list of errors when rendered.</source>
          <target state="translated">断言的 &lt;code&gt;formset&lt;/code&gt; 渲染时引发的错误提供的列表。</target>
        </trans-unit>
        <trans-unit id="ff59a197649a85d7611947dbf66400822fd3fd57" translate="yes" xml:space="preserve">
          <source>Asserts that the HTML fragment &lt;code&gt;needle&lt;/code&gt; is contained in the &lt;code&gt;haystack&lt;/code&gt; one.</source>
          <target state="translated">断言HTML片段 &lt;code&gt;needle&lt;/code&gt; 包含在 &lt;code&gt;haystack&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72cfd60eeafd9e065c5cb6d7c2c4205bb79b91ee" translate="yes" xml:space="preserve">
          <source>Asserts that the JSON fragments &lt;code&gt;raw&lt;/code&gt; and &lt;code&gt;expected_data&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; equal. See &lt;a href=&quot;#django.test.SimpleTestCase.assertJSONEqual&quot;&gt;&lt;code&gt;assertJSONEqual()&lt;/code&gt;&lt;/a&gt; for further details.</source>
          <target state="translated">断言，JSON片段 &lt;code&gt;raw&lt;/code&gt; 和 &lt;code&gt;expected_data&lt;/code&gt; 是&lt;em&gt;不&lt;/em&gt;相等的。有关更多详细信息，请参见&lt;a href=&quot;#django.test.SimpleTestCase.assertJSONEqual&quot;&gt; &lt;code&gt;assertJSONEqual()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="85e70bc6e665bfcc530f2833752ea8a330e09608" translate="yes" xml:space="preserve">
          <source>Asserts that the JSON fragments &lt;code&gt;raw&lt;/code&gt; and &lt;code&gt;expected_data&lt;/code&gt; are equal. Usual JSON non-significant whitespace rules apply as the heavyweight is delegated to the &lt;a href=&quot;https://docs.python.org/3/library/json.html#module-json&quot;&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt; library.</source>
          <target state="translated">断言， &lt;code&gt;raw&lt;/code&gt; 和 &lt;code&gt;expected_data&lt;/code&gt; 的JSON片段相等。由于重量级委托给&lt;a href=&quot;https://docs.python.org/3/library/json.html#module-json&quot;&gt; &lt;code&gt;json&lt;/code&gt; &lt;/a&gt;库，因此通常使用JSON非有效空白规则。</target>
        </trans-unit>
        <trans-unit id="04e2a1c4987747529f25e1ccd3d7e5bcbf9496bb" translate="yes" xml:space="preserve">
          <source>Asserts that the response returned a &lt;code&gt;status_code&lt;/code&gt; redirect status, redirected to &lt;code&gt;expected_url&lt;/code&gt; (including any &lt;code&gt;GET&lt;/code&gt; data), and that the final page was received with &lt;code&gt;target_status_code&lt;/code&gt;.</source>
          <target state="translated">断言响应返回 &lt;code&gt;status_code&lt;/code&gt; 重定向状态，重定向到 &lt;code&gt;expected_url&lt;/code&gt; （包括任何 &lt;code&gt;GET&lt;/code&gt; 的数据），而最后一页用收到 &lt;code&gt;target_status_code&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10ab43696f727131a6cc76c15936e9e996766dfb" translate="yes" xml:space="preserve">
          <source>Asserts that the strings &lt;code&gt;html1&lt;/code&gt; and &lt;code&gt;html2&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; equal. The comparison is based on HTML semantics. See &lt;a href=&quot;#django.test.SimpleTestCase.assertHTMLEqual&quot;&gt;&lt;code&gt;assertHTMLEqual()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">断言字符串 &lt;code&gt;html1&lt;/code&gt; 和 &lt;code&gt;html2&lt;/code&gt; 是&lt;em&gt;不&lt;/em&gt;相等的。比较是基于HTML语义的。有关详细信息，请参见&lt;a href=&quot;#django.test.SimpleTestCase.assertHTMLEqual&quot;&gt; &lt;code&gt;assertHTMLEqual()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="62ddcb768dff0ff64abf8e34d084b990dac6d090" translate="yes" xml:space="preserve">
          <source>Asserts that the strings &lt;code&gt;html1&lt;/code&gt; and &lt;code&gt;html2&lt;/code&gt; are equal. The comparison is based on HTML semantics. The comparison takes following things into account:</source>
          <target state="translated">断言字符串 &lt;code&gt;html1&lt;/code&gt; 和 &lt;code&gt;html2&lt;/code&gt; 相等。比较是基于HTML语义的。比较考虑以下因素：</target>
        </trans-unit>
        <trans-unit id="09bb4880b10bf0be7916cea611cb80f9ba9d0a6f" translate="yes" xml:space="preserve">
          <source>Asserts that the strings &lt;code&gt;xml1&lt;/code&gt; and &lt;code&gt;xml2&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; equal. The comparison is based on XML semantics. See &lt;a href=&quot;#django.test.SimpleTestCase.assertXMLEqual&quot;&gt;&lt;code&gt;assertXMLEqual()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">断言字符串 &lt;code&gt;xml1&lt;/code&gt; 和 &lt;code&gt;xml2&lt;/code&gt; 是&lt;em&gt;不&lt;/em&gt;相等的。比较是基于XML语义的。有关详细信息，请参见&lt;a href=&quot;#django.test.SimpleTestCase.assertXMLEqual&quot;&gt; &lt;code&gt;assertXMLEqual()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0f3ac14ce90af9e23f5ed205d1f3feb60e5cb4d4" translate="yes" xml:space="preserve">
          <source>Asserts that the strings &lt;code&gt;xml1&lt;/code&gt; and &lt;code&gt;xml2&lt;/code&gt; are equal. The comparison is based on XML semantics. Similarly to &lt;a href=&quot;#django.test.SimpleTestCase.assertHTMLEqual&quot;&gt;&lt;code&gt;assertHTMLEqual()&lt;/code&gt;&lt;/a&gt;, the comparison is made on parsed content, hence only semantic differences are considered, not syntax differences. When invalid XML is passed in any parameter, an &lt;code&gt;AssertionError&lt;/code&gt; is always raised, even if both string are identical.</source>
          <target state="translated">断言字符串 &lt;code&gt;xml1&lt;/code&gt; 和 &lt;code&gt;xml2&lt;/code&gt; 相等。比较是基于XML语义的。与&lt;a href=&quot;#django.test.SimpleTestCase.assertHTMLEqual&quot;&gt; &lt;code&gt;assertHTMLEqual()&lt;/code&gt; &lt;/a&gt;类似，对已解析的内容进行比较，因此仅考虑语义差异，而不考虑语法差异。在任何参数中传递无效XML时，即使两个字符串相同，也会始终引发 &lt;code&gt;AssertionError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5856790d3201ec10ff0abec0598ba4b7d6ac3315" translate="yes" xml:space="preserve">
          <source>Asserts that the strings &lt;code&gt;xml1&lt;/code&gt; and &lt;code&gt;xml2&lt;/code&gt; are equal. The comparison is based on XML semantics. Similarly to &lt;a href=&quot;#django.test.SimpleTestCase.assertHTMLEqual&quot;&gt;&lt;code&gt;assertHTMLEqual()&lt;/code&gt;&lt;/a&gt;, the comparison is made on parsed content, hence only semantic differences are considered, not syntax differences. When invalid XML is passed in any parameter, an &lt;code&gt;AssertionError&lt;/code&gt; is always raised, even if both strings are identical.</source>
          <target state="translated">断言字符串 &lt;code&gt;xml1&lt;/code&gt; 和 &lt;code&gt;xml2&lt;/code&gt; 相等。比较是基于XML语义的。与&lt;a href=&quot;#django.test.SimpleTestCase.assertHTMLEqual&quot;&gt; &lt;code&gt;assertHTMLEqual()&lt;/code&gt; &lt;/a&gt;类似，对已解析的内容进行比较，因此仅考虑语义差异，而不考虑语法差异。当在任何参数中传递无效的XML时，即使两个字符串相同，也会始终引发 &lt;code&gt;AssertionError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2f1524535e73d36ad269e12fefb6d8f92b80612e" translate="yes" xml:space="preserve">
          <source>Asserts that the template with the given name was &lt;em&gt;not&lt;/em&gt; used in rendering the response.</source>
          <target state="translated">断言在渲染响应时&lt;em&gt;未&lt;/em&gt;使用具有给定名称的模板。</target>
        </trans-unit>
        <trans-unit id="0bcd878feb16c89a31efac7d1f686961eb4e9018" translate="yes" xml:space="preserve">
          <source>Asserts that the template with the given name was used in rendering the response.</source>
          <target state="translated">证明给定名称的模板被用于渲染响应。</target>
        </trans-unit>
        <trans-unit id="af9f8e52fffda162a5c29828d54ce8db12a7288f" translate="yes" xml:space="preserve">
          <source>Asserts that two URLs are the same, ignoring the order of query string parameters except for parameters with the same name. For example, &lt;code&gt;/path/?x=1&amp;amp;y=2&lt;/code&gt; is equal to &lt;code&gt;/path/?y=2&amp;amp;x=1&lt;/code&gt;, but &lt;code&gt;/path/?a=1&amp;amp;a=2&lt;/code&gt; isn&amp;rsquo;t equal to &lt;code&gt;/path/?a=2&amp;amp;a=1&lt;/code&gt;.</source>
          <target state="translated">断言两个URL相同，忽略具有相同名称的参数之外的查询字符串参数的顺序。例如， &lt;code&gt;/path/?x=1&amp;amp;y=2&lt;/code&gt; 等于 &lt;code&gt;/path/?y=2&amp;amp;x=1&lt;/code&gt; ，但 &lt;code&gt;/path/?a=1&amp;amp;a=2&lt;/code&gt; 不等于 &lt;code&gt;/path/?a=2&amp;amp;a=1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="236be22124ed0d7fa04be050a132e368d177a148" translate="yes" xml:space="preserve">
          <source>Asserts that when &lt;code&gt;func&lt;/code&gt; is called with &lt;code&gt;*args&lt;/code&gt; and &lt;code&gt;**kwargs&lt;/code&gt; that &lt;code&gt;num&lt;/code&gt; database queries are executed.</source>
          <target state="translated">断言当使用 &lt;code&gt;*args&lt;/code&gt; 和 &lt;code&gt;**kwargs&lt;/code&gt; 调用 &lt;code&gt;func&lt;/code&gt; 时，将执行 &lt;code&gt;num&lt;/code&gt; 个数据库查询。</target>
        </trans-unit>
        <trans-unit id="ba1117e518e5f60b947e1eb3cbc96a3a0de81d79" translate="yes" xml:space="preserve">
          <source>Assets and Django Admin</source>
          <target state="translated">资产和Django管理</target>
        </trans-unit>
        <trans-unit id="ee7a87f125429d68fd6a5d90f091a081608f015c" translate="yes" xml:space="preserve">
          <source>Assets as a static definition</source>
          <target state="translated">作为静态定义的资产</target>
        </trans-unit>
        <trans-unit id="3f461fa34176c4b47a012aabf643fc1615d7d901" translate="yes" xml:space="preserve">
          <source>Associate the &lt;code&gt;Article&lt;/code&gt; with a &lt;code&gt;Publication&lt;/code&gt;:</source>
          <target state="translated">将 &lt;code&gt;Article&lt;/code&gt; 与 &lt;code&gt;Publication&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="604f2861391a4966f134874defeeccf87347ea1b" translate="yes" xml:space="preserve">
          <source>Associating content with a single site</source>
          <target state="translated">将内容与单一网站关联</target>
        </trans-unit>
        <trans-unit id="160af382fad84f01ed5831a3e803426a07248982" translate="yes" xml:space="preserve">
          <source>Associating content with multiple sites</source>
          <target state="translated">将内容与多个网站关联</target>
        </trans-unit>
        <trans-unit id="596ea1966975c3b5e427a0286ede76cada93b872" translate="yes" xml:space="preserve">
          <source>Assuming &lt;code&gt;author&lt;/code&gt; is a &lt;code&gt;ForeignKey&lt;/code&gt; to a &lt;code&gt;User&lt;/code&gt; model, this will limit the &lt;code&gt;list_filter&lt;/code&gt; choices to the users who have written a book instead of listing all users.</source>
          <target state="translated">假设 &lt;code&gt;author&lt;/code&gt; 是一个 &lt;code&gt;ForeignKey&lt;/code&gt; 的一个 &lt;code&gt;User&lt;/code&gt; 模式，这将限制 &lt;code&gt;list_filter&lt;/code&gt; 选择，谁写的，而不是列出所有用户一本书的用户。</target>
        </trans-unit>
        <trans-unit id="67cb6d59d5bd23a55c32da92b2e5f481aaf089de" translate="yes" xml:space="preserve">
          <source>Assuming an existing Employee Fred Smith who has both a User and Employee model, you can access the related information using Django&amp;rsquo;s standard related model conventions:</source>
          <target state="translated">假设既有User模型又有Employee模型的现有Employee Fred Smith，则可以使用Django的标准相关模型约定来访问相关信息：</target>
        </trans-unit>
        <trans-unit id="185a5c0fe2f8a27d76d5b4ea8cbea1d6724b2c74" translate="yes" xml:space="preserve">
          <source>Assuming both models have a &lt;code&gt;length&lt;/code&gt; field, to find posts where the post length is greater than the total length of all combined comments:</source>
          <target state="translated">假设两个模型都有一个 &lt;code&gt;length&lt;/code&gt; 字段，以查找帖子长度大于所有合并注释的总长度的帖子：</target>
        </trans-unit>
        <trans-unit id="e9fe69b31f449015f041b355315b24ddf7359871" translate="yes" xml:space="preserve">
          <source>Assuming models live in a file &lt;code&gt;mysite/blog/models.py&lt;/code&gt;, here&amp;rsquo;s an example:</source>
          <target state="translated">假设模型位于 &lt;code&gt;mysite/blog/models.py&lt;/code&gt; 文件中，下面是一个示例：</target>
        </trans-unit>
        <trans-unit id="a43372f88213dad295044509b366e98b21109371" translate="yes" xml:space="preserve">
          <source>Assuming rows of 10-20 columns with a mix of textual and numeric data, 2000 is going to fetch less than 100KB of data, which seems a good compromise between the number of rows transferred and the data discarded if the loop is exited early.</source>
          <target state="translated">假设行数为10-20列,文字数据和数字数据混合,2000要取不到100KB的数据,这似乎是一个很好的折中方案,在传输的行数和提前退出循环时丢弃的数据之间。</target>
        </trans-unit>
        <trans-unit id="6365343a740bba2824b80576a3bf0941694912be" translate="yes" xml:space="preserve">
          <source>Assuming that &lt;a href=&quot;../settings#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt; and &lt;a href=&quot;../settings#std:setting-LANGUAGE_CODE&quot;&gt;&lt;code&gt;LANGUAGE_CODE&lt;/code&gt;&lt;/a&gt; is, for example, &lt;code&gt;&quot;de&quot;&lt;/code&gt;, then for:</source>
          <target state="translated">假设&lt;a href=&quot;../settings#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;True&lt;/code&gt; ,而&lt;a href=&quot;../settings#std:setting-LANGUAGE_CODE&quot;&gt; &lt;code&gt;LANGUAGE_CODE&lt;/code&gt; &lt;/a&gt;例如为 &lt;code&gt;&quot;de&quot;&lt;/code&gt; ，则用于：</target>
        </trans-unit>
        <trans-unit id="7a9b104a6162d8533d6966d8db536a2936bbdb5f" translate="yes" xml:space="preserve">
          <source>Assuming that &lt;a href=&quot;../settings#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt; and &lt;a href=&quot;../settings#std:setting-LANGUAGE_CODE&quot;&gt;&lt;code&gt;LANGUAGE_CODE&lt;/code&gt;&lt;/a&gt; is, for example, &lt;code&gt;&quot;es&quot;&lt;/code&gt;, then for:</source>
          <target state="translated">假设&lt;a href=&quot;../settings#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;True&lt;/code&gt; ,而&lt;a href=&quot;../settings#std:setting-LANGUAGE_CODE&quot;&gt; &lt;code&gt;LANGUAGE_CODE&lt;/code&gt; &lt;/a&gt;例如为 &lt;code&gt;&quot;es&quot;&lt;/code&gt; ，则用于：</target>
        </trans-unit>
        <trans-unit id="e859c14e91e44380de99cb3733de849b3d0bf3ca" translate="yes" xml:space="preserve">
          <source>Assuming the settings above were in a &lt;code&gt;postgis.py&lt;/code&gt; file in the same directory as &lt;code&gt;runtests.py&lt;/code&gt;, then all Django and GeoDjango tests would be performed when executing the command:</source>
          <target state="translated">假设以上设置位于与 &lt;code&gt;runtests.py&lt;/code&gt; 相同目录中的 &lt;code&gt;postgis.py&lt;/code&gt; 文件中，则在执行命令时将执行所有Django和GeoDjango测试：</target>
        </trans-unit>
        <trans-unit id="15d9d44a1a13ae4c3c09865d41e5911a0d169d65" translate="yes" xml:space="preserve">
          <source>Assuming you have an application with an &lt;a href=&quot;../../ref/models/options#django.db.models.Options.app_label&quot;&gt;&lt;code&gt;app_label&lt;/code&gt;&lt;/a&gt;&lt;code&gt;foo&lt;/code&gt; and a model named &lt;code&gt;Bar&lt;/code&gt;, to test for basic permissions you should use:</source>
          <target state="translated">假设您有一个带有&lt;a href=&quot;../../ref/models/options#django.db.models.Options.app_label&quot;&gt; &lt;code&gt;app_label&lt;/code&gt; &lt;/a&gt; &lt;code&gt;foo&lt;/code&gt; 和名为 &lt;code&gt;Bar&lt;/code&gt; 的模型的应用程序，以测试基本权限，则应使用：</target>
        </trans-unit>
        <trans-unit id="24ffd2b9ba150c77f60a52bfae4dd953b7b74828" translate="yes" xml:space="preserve">
          <source>Astute readers will ask: But if &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt; was empty by default, how was Django finding the default admin templates? The answer is that, since &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt;&lt;code&gt;APP_DIRS&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;, Django automatically looks for a &lt;code&gt;templates/&lt;/code&gt; subdirectory within each application package, for use as a fallback (don&amp;rsquo;t forget that &lt;code&gt;django.contrib.admin&lt;/code&gt; is an application).</source>
          <target state="translated">精明的读者会问：但是，如果&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-DIRS&quot;&gt; &lt;code&gt;DIRS&lt;/code&gt; &lt;/a&gt;默认为空，那么Django如何找到默认的管理模板？答案是，由于&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt; &lt;code&gt;APP_DIRS&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; ，Django会自动在每个应用程序包中查找 &lt;code&gt;templates/&lt;/code&gt; 子目录，以用作备用（不要忘记 &lt;code&gt;django.contrib.admin&lt;/code&gt; 是一个应用程序）。</target>
        </trans-unit>
        <trans-unit id="d51be43ea19d89d11eab90783eb916d16ff1ec98" translate="yes" xml:space="preserve">
          <source>Async adapter functions</source>
          <target state="translated">异步适配器功能</target>
        </trans-unit>
        <trans-unit id="081067c393edf8e5b59a8477f8ccf9941c80fd91" translate="yes" xml:space="preserve">
          <source>Async safety</source>
          <target state="translated">异步安全</target>
        </trans-unit>
        <trans-unit id="247f00368a6e34b379015dfe32b1cba6c325ba87" translate="yes" xml:space="preserve">
          <source>Async views</source>
          <target state="translated">异步浏览</target>
        </trans-unit>
        <trans-unit id="ce6652834c4009b903e89f99e020f920dd5b16ab" translate="yes" xml:space="preserve">
          <source>Async-safety</source>
          <target state="translated">Async-safety</target>
        </trans-unit>
        <trans-unit id="c05a9d33e7b51e553fd3606ad1076a07a3f0e7b8" translate="yes" xml:space="preserve">
          <source>AsyncRequestFactory</source>
          <target state="translated">AsyncRequestFactory</target>
        </trans-unit>
        <trans-unit id="a3e3a088b1b429408c27d37377c0f5fbb7e78544" translate="yes" xml:space="preserve">
          <source>Asynchronous support</source>
          <target state="translated">异步支持</target>
        </trans-unit>
        <trans-unit id="becc4b8b4fde1f67917d72e71ac9f0397a752159" translate="yes" xml:space="preserve">
          <source>At a certain point you are bound to look at your tests and wonder whether your code is suffering from test bloat, which brings us to:</source>
          <target state="translated">到了一定程度,你一定会审视你的测试,并怀疑你的代码是否受到测试膨胀的影响,这就涉及到了。</target>
        </trans-unit>
        <trans-unit id="b07648c0929cd0231e4f9c7354122d36df0feb38" translate="yes" xml:space="preserve">
          <source>At any point, your &lt;code&gt;urlpatterns&lt;/code&gt; can &amp;ldquo;include&amp;rdquo; other URLconf modules. This essentially &amp;ldquo;roots&amp;rdquo; a set of URLs below other ones.</source>
          <target state="translated">在任何时候，您的 &lt;code&gt;urlpatterns&lt;/code&gt; 都可以&amp;ldquo;包括&amp;rdquo;其他URLconf模块。实质上，这会将&amp;ldquo; URL&amp;rdquo;&amp;ldquo;植根&amp;rdquo;在其他URL之下。</target>
        </trans-unit>
        <trans-unit id="4fb6bc9538b157b5311479759837c5d348f05677" translate="yes" xml:space="preserve">
          <source>At first, this seems like a harmless way to display a user&amp;rsquo;s name, but consider what would happen if the user entered their name as this:</source>
          <target state="translated">最初，这似乎是显示用户名的一种无害方法，但是请考虑如果用户以这种方式输入他们的姓名会发生什么：</target>
        </trans-unit>
        <trans-unit id="5c7e592441c168f09fb7eebbe767a10d6bcec63c" translate="yes" xml:space="preserve">
          <source>At its core, a class-based view allows you to respond to different HTTP request methods with different class instance methods, instead of with conditionally branching code inside a single view function.</source>
          <target state="translated">其核心是,基于类的视图允许你用不同的类实例方法来响应不同的HTTP请求方法,而不是在一个视图函数里面有条件的分支代码。</target>
        </trans-unit>
        <trans-unit id="9c3be719804e367e8aea431959dce605a3f6cb0b" translate="yes" xml:space="preserve">
          <source>At present, the only hint that will be provided is &lt;code&gt;instance&lt;/code&gt;, an object instance that is related to the read or write operation that is underway. This might be the instance that is being saved, or it might be an instance that is being added in a many-to-many relation. In some cases, no instance hint will be provided at all. The router checks for the existence of an instance hint, and determine if that hint should be used to alter routing behavior.</source>
          <target state="translated">当前，将提供的唯一提示是 &lt;code&gt;instance&lt;/code&gt; ，它是与正在进行的读取或写入操作相关的对象实例。这可能是正在保存的实例，也可能是正在以多对多关系添加的实例。在某些情况下，将完全不提供实例提示。路由器检查是否存在实例提示，并确定是否应使用该提示来更改路由行为。</target>
        </trans-unit>
        <trans-unit id="829ecd1b52e49d4303ad554db77d3eafc6207a1a" translate="yes" xml:space="preserve">
          <source>At runtime, Django builds an in-memory unified catalog of literals-translations. To achieve this it looks for translations by following this algorithm regarding the order in which it examines the different file paths to load the compiled &lt;a href=&quot;index#term-message-file&quot;&gt;message files&lt;/a&gt; (&lt;code&gt;.mo&lt;/code&gt;) and the precedence of multiple translations for the same literal:</source>
          <target state="translated">在运行时，Django会在内存中构建原义翻译的统一目录。为了实现这一点，它遵循以下算法来寻找翻译，该算法涉及检查不同文件路径以加载已编译&lt;a href=&quot;index#term-message-file&quot;&gt;消息文件&lt;/a&gt;（ &lt;code&gt;.mo&lt;/code&gt; ）的顺序以及同一文字的多次翻译的优先级：</target>
        </trans-unit>
        <trans-unit id="8a89ebae1007e121e4006edfa5c170f6cee641b3" translate="yes" xml:space="preserve">
          <source>At that point, the template engine will notice the three &lt;a href=&quot;builtins#std:templatetag-block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; tags in &lt;code&gt;base.html&lt;/code&gt; and replace those blocks with the contents of the child template. Depending on the value of &lt;code&gt;blog_entries&lt;/code&gt;, the output might look like:</source>
          <target state="translated">届时，模板引擎将注意到 &lt;code&gt;base.html&lt;/code&gt; 中的三个&lt;a href=&quot;builtins#std:templatetag-block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;标记，并用子模板的内容替换这些块。根据 &lt;code&gt;blog_entries&lt;/code&gt; 的值，输出可能类似于：</target>
        </trans-unit>
        <trans-unit id="77cfb22bf021959ce50588c2fc80c01976cdb6a4" translate="yes" xml:space="preserve">
          <source>At the beginning of each request, Django closes the connection if it has reached its maximum age. If your database terminates idle connections after some time, you should set &lt;a href=&quot;settings#std:setting-CONN_MAX_AGE&quot;&gt;&lt;code&gt;CONN_MAX_AGE&lt;/code&gt;&lt;/a&gt; to a lower value, so that Django doesn&amp;rsquo;t attempt to use a connection that has been terminated by the database server. (This problem may only affect very low traffic sites.)</source>
          <target state="translated">在每个请求的开始，如果Django已达到最大使用期限，则会关闭该连接。如果您的数据库在一段时间后终止了空闲连接，则应将&lt;a href=&quot;settings#std:setting-CONN_MAX_AGE&quot;&gt; &lt;code&gt;CONN_MAX_AGE&lt;/code&gt; &lt;/a&gt;设置为较低的值，以便Django不会尝试使用已由数据库服务器终止的连接。（此问题可能只影响流量非常小的站点。）</target>
        </trans-unit>
        <trans-unit id="7585cf05112053b01eb73497ef6e6dfe3dfa8b5a" translate="yes" xml:space="preserve">
          <source>At the end of each request, Django closes the connection if it has reached its maximum age or if it is in an unrecoverable error state. If any database errors have occurred while processing the requests, Django checks whether the connection still works, and closes it if it doesn&amp;rsquo;t. Thus, database errors affect at most one request; if the connection becomes unusable, the next request gets a fresh connection.</source>
          <target state="translated">在每个请求结束时，如果Django已达到其最大使用期限或处于不可恢复的错误状态，则它将关闭连接。如果在处理请求时发生任何数据库错误，则Django会检查连接是否仍然有效，如果没有，则将其关闭。因此，数据库错误最多影响一个请求。如果连接变得不可用，则下一个请求将获得新的连接。</target>
        </trans-unit>
        <trans-unit id="5d1991088e173e325b34bee658329e011aaa91e8" translate="yes" xml:space="preserve">
          <source>At the end of the three current slots you will find an &amp;ldquo;Add another Choice&amp;rdquo; link. If you click on it, a new slot will be added. If you want to remove the added slot, you can click on the X to the top right of the added slot. Note that you can&amp;rsquo;t remove the original three slots. This image shows an added slot:</source>
          <target state="translated">在当前三个插槽的末尾，您将找到&amp;ldquo;添加其他选择&amp;rdquo;链接。如果单击它，将添加一个新插槽。如果要删除添加的插槽，可以单击添加的插槽右上方的X。请注意，您无法删除原始的三个插槽。此图显示了一个添加的插槽：</target>
        </trans-unit>
        <trans-unit id="189124accca7c04c0f44767f105be012dfc11d09" translate="yes" xml:space="preserve">
          <source>At the heart of the contenttypes application is the &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; model, which lives at &lt;code&gt;django.contrib.contenttypes.models.ContentType&lt;/code&gt;. Instances of &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; represent and store information about the models installed in your project, and new instances of &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; are automatically created whenever new models are installed.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; s&lt;/a&gt;应用程序的核心是ContentType模型，该模型位于 &lt;code&gt;django.contrib.contenttypes.models.ContentType&lt;/code&gt; 中。&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;实例表示并存储有关项目中安装的模型的信息，每当安装新模型时，都会自动创建&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; 的&lt;/a&gt;新实例。</target>
        </trans-unit>
        <trans-unit id="eb21848242712cb52d07267f0c869a17ef5ee284" translate="yes" xml:space="preserve">
          <source>At the heart of this system of components is Django&amp;rsquo;s &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; class. In much the same way that a Django model describes the logical structure of an object, its behavior, and the way its parts are represented to us, a &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; class describes a form and determines how it works and appears.</source>
          <target state="translated">该组件系统的核心是Django的&lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;类。就像Django模型描述对象的逻辑结构，其行为以及向我们表示其部分的方式一样，&lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;类描述表单并确定其工作方式和外观。</target>
        </trans-unit>
        <trans-unit id="c74271cae7a8a63a2cd5fb403d3d02546e9dd5b6" translate="yes" xml:space="preserve">
          <source>At the highest level, you can serialize data like this:</source>
          <target state="translated">在最高级别,你可以这样序列化数据。</target>
        </trans-unit>
        <trans-unit id="1644e5cc2b98ba7a4722587d8f99ea04893a79ef" translate="yes" xml:space="preserve">
          <source>At the most basic level, use &lt;a href=&quot;../../ref/models/querysets#queryset-api&quot;&gt;filter and exclude&lt;/a&gt; to do filtering in the database.</source>
          <target state="translated">在最基本的级别上，使用&lt;a href=&quot;../../ref/models/querysets#queryset-api&quot;&gt;filter和exclude&lt;/a&gt;在数据库中进行过滤。</target>
        </trans-unit>
        <trans-unit id="d1ca0bd847e379e96f7fd3a9732e92c9726b4d7c" translate="yes" xml:space="preserve">
          <source>At the start of each test, before &lt;code&gt;setUp()&lt;/code&gt; is run, Django will flush the database, returning the database to the state it was in directly after &lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; was called.</source>
          <target state="translated">在每次测试开始时，在运行 &lt;code&gt;setUp()&lt;/code&gt; 之前，Django都会刷新数据库，将数据库恢复为调用&lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;后直接处于的状态。</target>
        </trans-unit>
        <trans-unit id="d5ea45b8b50778db88aebff1341f87e398f338dd" translate="yes" xml:space="preserve">
          <source>At this point it&amp;rsquo;s much easier to get Django to do most of this work for us.</source>
          <target state="translated">在这一点上，让Django为我们完成大部分工作要容易得多。</target>
        </trans-unit>
        <trans-unit id="1d3d271c0b51bfb091b47dcdc7750c2825e9b7ea" translate="yes" xml:space="preserve">
          <source>At this point it&amp;rsquo;s natural to reach for a &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; to encapsulate the information sent from the user&amp;rsquo;s browser to Django. Say also that we&amp;rsquo;re heavily invested in &lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;REST&lt;/a&gt;, so we want to use the same URL for displaying the author as for capturing the message from the user. Let&amp;rsquo;s rewrite our &lt;code&gt;AuthorDetailView&lt;/code&gt; to do that.</source>
          <target state="translated">在这一点上，很自然需要一个&lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;来封装从用户浏览器发送到Django的信息。还要说我们在&lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;REST上&lt;/a&gt;投入了巨资，因此我们想使用与显示从用户那里捕获消息相同的URL来显示作者。让我们重写我们的 &lt;code&gt;AuthorDetailView&lt;/code&gt; 来做到这一点。</target>
        </trans-unit>
        <trans-unit id="90c41d5fe4f42710c126fb73e78fd7dfc79715aa" translate="yes" xml:space="preserve">
          <source>At this time 3D support is limited to the PostGIS and SpatiaLite backends.</source>
          <target state="translated">目前,3D支持仅限于PostGIS和SpatiaLite后端。</target>
        </trans-unit>
        <trans-unit id="ba6166c252b5f3de38513da17ca78e12d2d37fbe" translate="yes" xml:space="preserve">
          <source>At worst, as you continue developing, you might find that you have some tests that are now redundant. Even that&amp;rsquo;s not a problem; in testing redundancy is a &lt;em&gt;good&lt;/em&gt; thing.</source>
          <target state="translated">最糟糕的是，随着您继续开发，您可能会发现有些测试现在是多余的。即使那样也不是问题。在测试中的冗余是一个&lt;em&gt;很好的&lt;/em&gt;事情。</target>
        </trans-unit>
        <trans-unit id="9be5bc386eecce030df49a1fa6668e0b4cbebbaf" translate="yes" xml:space="preserve">
          <source>Atom feeds require a &lt;code&gt;&amp;lt;link rel=&quot;self&quot;&amp;gt;&lt;/code&gt; that defines the feed&amp;rsquo;s current location. The syndication framework populates this automatically, using the domain of the current site according to the &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt;&lt;code&gt;SITE_ID&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">Atom提要需要一个 &lt;code&gt;&amp;lt;link rel=&quot;self&quot;&amp;gt;&lt;/code&gt; 来定义提要的当前位置。联合框架会根据&lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt; &lt;code&gt;SITE_ID&lt;/code&gt; &lt;/a&gt;设置，使用当前站点的域自动填充它。</target>
        </trans-unit>
        <trans-unit id="b90ff34b6a9489024350085d4eb6b735977a0a57" translate="yes" xml:space="preserve">
          <source>Atomicity is the defining property of database transactions. &lt;code&gt;atomic&lt;/code&gt; allows us to create a block of code within which the atomicity on the database is guaranteed. If the block of code is successfully completed, the changes are committed to the database. If there is an exception, the changes are rolled back.</source>
          <target state="translated">原子性是数据库事务的定义属性。 &lt;code&gt;atomic&lt;/code&gt; 允许我们创建一个代码块，在其中保证数据库的原子性。如果代码块成功完成，则更改将提交给数据库。如果有异常，则更改将回滚。</target>
        </trans-unit>
        <trans-unit id="6dcbf3ddd9b69ace301044258cc096b7ab7406f4" translate="yes" xml:space="preserve">
          <source>Attribute lookup. Example: &lt;code&gt;foo.bar&lt;/code&gt;</source>
          <target state="translated">属性查询。示例： &lt;code&gt;foo.bar&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c55f8f4ff4b77e0b477555d903221859914f758b" translate="yes" xml:space="preserve">
          <source>Attribute or method lookup</source>
          <target state="translated">属性或方法查询</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="edc8a446f5933031f7f093676869a8b07a4eb854" translate="yes" xml:space="preserve">
          <source>Attributes for fields</source>
          <target state="translated">字段的属性</target>
        </trans-unit>
        <trans-unit id="3c0023632c2c11e1b27921f86d99a10bac174095" translate="yes" xml:space="preserve">
          <source>Attributes for fields with relations</source>
          <target state="translated">有关系的字段的属性</target>
        </trans-unit>
        <trans-unit id="dd6d67bb1ba246f3e978a406d1c86519dde7af4e" translate="yes" xml:space="preserve">
          <source>Attributes of &lt;code&gt;BoundField&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BoundField&lt;/code&gt; 的属性</target>
        </trans-unit>
        <trans-unit id="993fe975317384740fde5b696d0e0475c75b8515" translate="yes" xml:space="preserve">
          <source>Attributes set by application code</source>
          <target state="translated">应用程序代码设置的属性</target>
        </trans-unit>
        <trans-unit id="d0a488eccef6df802ff85932b4c6929619c28d72" translate="yes" xml:space="preserve">
          <source>Attributes set by middleware</source>
          <target state="translated">中间件设置的属性</target>
        </trans-unit>
        <trans-unit id="6f04a43b920a1e48fb45a6c179cdc2084ecebf1a" translate="yes" xml:space="preserve">
          <source>Attributes without an argument are equal to attributes that equal in name and value (see the examples).</source>
          <target state="translated">没有参数的属性等于名称和值相等的属性(见示例)。</target>
        </trans-unit>
        <trans-unit id="35d0f5fbca4b84a0ac3992970ff0119954a9281f" translate="yes" xml:space="preserve">
          <source>Auth</source>
          <target state="translated">Auth</target>
        </trans-unit>
        <trans-unit id="fd9c4ff0e3b6b88e4e4dc570b6c34789d2a1e482" translate="yes" xml:space="preserve">
          <source>Authenticate access to a &lt;a href=&quot;https://subversion.apache.org/&quot;&gt;Subversion&lt;/a&gt; repository against Django users with a certain permission.</source>
          <target state="translated">拥有一定权限的Django用户可以验证对&lt;a href=&quot;https://subversion.apache.org/&quot;&gt;Subversion&lt;/a&gt;存储库的访问权限。</target>
        </trans-unit>
        <trans-unit id="6337477691f18524a224e218ab6eaa20e4031637" translate="yes" xml:space="preserve">
          <source>Authenticating against Django&amp;rsquo;s user database from Apache</source>
          <target state="translated">从Apache对Django的用户数据库进行身份验证</target>
        </trans-unit>
        <trans-unit id="0ac3a9f2d16fbe183a3d2e9a6f8ff0841176ff51" translate="yes" xml:space="preserve">
          <source>Authenticating against Django’s user database from Apache</source>
          <target state="translated">从Apache中对Django的用户数据库进行验证。</target>
        </trans-unit>
        <trans-unit id="e97f1991db31b26ac8a9363240aa4d3ec0615f5c" translate="yes" xml:space="preserve">
          <source>Authenticating users</source>
          <target state="translated">认证用户</target>
        </trans-unit>
        <trans-unit id="ed14dcd0fbc726381cb35622dd153753cdb041ca" translate="yes" xml:space="preserve">
          <source>Authentication Views</source>
          <target state="translated">认证意见</target>
        </trans-unit>
        <trans-unit id="c4983997c1873796ebbede4e16561236e028f0a9" translate="yes" xml:space="preserve">
          <source>Authentication against third-parties (OAuth, for example)</source>
          <target state="translated">针对第三方的认证(例如OAuth)。</target>
        </trans-unit>
        <trans-unit id="c38992e4692a0d7975f058861174b5e44159613e" translate="yes" xml:space="preserve">
          <source>Authentication backends</source>
          <target state="translated">认证后端</target>
        </trans-unit>
        <trans-unit id="f0da0e5cb0ab6921e6b41fbc41b1d18be2795467" translate="yes" xml:space="preserve">
          <source>Authentication data in templates</source>
          <target state="translated">模板中的认证数据</target>
        </trans-unit>
        <trans-unit id="f9e0ae3d7a1f59d5610b13b4e0795fe4f6eeae90" translate="yes" xml:space="preserve">
          <source>Authentication in Web requests</source>
          <target state="translated">网络请求中的认证</target>
        </trans-unit>
        <trans-unit id="dbf83e500df5ca166953c47d5fd41f5df535f927" translate="yes" xml:space="preserve">
          <source>Authentication in web requests</source>
          <target state="translated">网络请求中的认证</target>
        </trans-unit>
        <trans-unit id="8fd5affdb2596beda05dcf367629948f7af5fdac" translate="yes" xml:space="preserve">
          <source>Authentication middleware</source>
          <target state="translated">认证中间件</target>
        </trans-unit>
        <trans-unit id="4dfefff9469de419af848d00af520745ea8a4c6b" translate="yes" xml:space="preserve">
          <source>Authentication support is bundled as a Django contrib module in &lt;code&gt;django.contrib.auth&lt;/code&gt;. By default, the required configuration is already included in the &lt;code&gt;settings.py&lt;/code&gt; generated by &lt;a href=&quot;../../ref/django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;django-admin
startproject&lt;/code&gt;&lt;/a&gt;, these consist of two items listed in your &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="translated">身份验证支持作为 &lt;code&gt;django.contrib.auth&lt;/code&gt; 中的Django contrib模块捆绑在一起。默认情况下，所需的配置已经包含在 &lt;code&gt;settings.py&lt;/code&gt; 所产生&lt;a href=&quot;../../ref/django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;django-admin startproject&lt;/code&gt; &lt;/a&gt;，这些包括在你列出的两个项目&lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置：</target>
        </trans-unit>
        <trans-unit id="28abf6b352445a849a8ed1ac4abaedc6f68a13c8" translate="yes" xml:space="preserve">
          <source>Authentication using &lt;code&gt;REMOTE_USER&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;REMOTE_USER&lt;/code&gt; 进行身份验证</target>
        </trans-unit>
        <trans-unit id="da5b697f1b93b20c027315397a08a6d47e1b7a2a" translate="yes" xml:space="preserve">
          <source>Authentication using REMOTE_USER</source>
          <target state="translated">使用REMOTE_USER进行认证。</target>
        </trans-unit>
        <trans-unit id="9cb23f99177d8d154483c5dea174d94d6eb5ca7b" translate="yes" xml:space="preserve">
          <source>Authentication with &lt;code&gt;mod_wsgi&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;mod_wsgi&lt;/code&gt; 进行身份验证</target>
        </trans-unit>
        <trans-unit id="212ec648f9cab319ad23c113e8368944db9a13b4" translate="yes" xml:space="preserve">
          <source>Authorization for anonymous users</source>
          <target state="translated">匿名用户的授权</target>
        </trans-unit>
        <trans-unit id="deebdf5e7d673f1085d509c1b58594d399c3632d" translate="yes" xml:space="preserve">
          <source>Authorization for inactive users</source>
          <target state="translated">非活跃用户的授权</target>
        </trans-unit>
        <trans-unit id="c3c77cf7e085536fe4f642640a0a0f676bb2d395" translate="yes" xml:space="preserve">
          <source>Authorization with &lt;code&gt;mod_wsgi&lt;/code&gt; and Django groups</source>
          <target state="translated">使用 &lt;code&gt;mod_wsgi&lt;/code&gt; 和Django组进行授权</target>
        </trans-unit>
        <trans-unit id="a5d0ea80bfa024e6d10cf0c5e2149c9e5030bdd7" translate="yes" xml:space="preserve">
          <source>Authors with multiple entries appear multiple times and authors without any entries have &lt;code&gt;None&lt;/code&gt; for the entry headline.</source>
          <target state="translated">具有多个条目的作者会出现多次，而没有任何条目的作者的条目标题将为&amp;ldquo; &lt;code&gt;None&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="55f9e784343673164bbb195a41119d309f4c90e6" translate="yes" xml:space="preserve">
          <source>Auto-escaping considerations</source>
          <target state="translated">自动逃逸的考虑</target>
        </trans-unit>
        <trans-unit id="ade49e65aa2d499a314989d73b7a5087ffe5df44" translate="yes" xml:space="preserve">
          <source>Auto-generate the models</source>
          <target state="translated">自动生成模型</target>
        </trans-unit>
        <trans-unit id="960a275624ec1eca722f7e66870b2a9f99cfac4d" translate="yes" xml:space="preserve">
          <source>Auto-incrementing primary keys</source>
          <target state="translated">自动递增主键</target>
        </trans-unit>
        <trans-unit id="8453dfc709bd717007fa35256ab12791696925f8" translate="yes" xml:space="preserve">
          <source>Autocommit</source>
          <target state="translated">Autocommit</target>
        </trans-unit>
        <trans-unit id="84cf5f8413204d40a8f95216ba5d5526d11ffeaf" translate="yes" xml:space="preserve">
          <source>Autocommit is initially turned on. If you turn it off, it&amp;rsquo;s your responsibility to restore it.</source>
          <target state="translated">自动提交最初处于打开状态。如果关闭它，则有责任还原它。</target>
        </trans-unit>
        <trans-unit id="a943f8638c8dcc1ad157c95e08768cc1250e25d7" translate="yes" xml:space="preserve">
          <source>Automated testing is an extremely useful bug-killing tool for the modern Web developer. You can use a collection of tests &amp;ndash; a &lt;strong&gt;test suite&lt;/strong&gt; &amp;ndash; to solve, or avoid, a number of problems:</source>
          <target state="translated">对于现代Web开发人员而言，自动化测试是一种非常有用的Bug杀害工具。您可以使用一组测试（一个&lt;strong&gt;测试套件&lt;/strong&gt;）来解决或避免许多问题：</target>
        </trans-unit>
        <trans-unit id="27e49177e9807d73541f916f6c05979f97b85ba4" translate="yes" xml:space="preserve">
          <source>Automatic HTML escaping</source>
          <target state="translated">自动HTML转义</target>
        </trans-unit>
        <trans-unit id="61fa92d56d11b7919bb8da95ce33a7ad7110c3eb" translate="yes" xml:space="preserve">
          <source>Automatic Spatial Transformations</source>
          <target state="translated">自动空间变换</target>
        </trans-unit>
        <trans-unit id="c0ca671cba6e070d7b0566fe1ba785b6645d5a0c" translate="yes" xml:space="preserve">
          <source>Automatic database routing</source>
          <target state="translated">自动数据库路由</target>
        </trans-unit>
        <trans-unit id="2daa6540a46502f028c3d359454675fd27347edd" translate="yes" xml:space="preserve">
          <source>Automatic primary key fields</source>
          <target state="translated">自动主键字段</target>
        </trans-unit>
        <trans-unit id="7d8ad18befa397a93cf4e3a8b465b236689355f7" translate="yes" xml:space="preserve">
          <source>Automatic reloading of &lt;a href=&quot;../ref/django-admin#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">自动重新加载&lt;a href=&quot;../ref/django-admin#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1394ea568cf8a61e49123ff400b9295452be4554" translate="yes" xml:space="preserve">
          <source>Automatic typecasting can cause unexpected results</source>
          <target state="translated">自动排版会造成意想不到的结果</target>
        </trans-unit>
        <trans-unit id="8a5b7c843454a5b2b1e845bfbf336ce8a6a2428f" translate="yes" xml:space="preserve">
          <source>Automatically generate a mapping dictionary for use with &lt;a href=&quot;layermapping#django.contrib.gis.utils.LayerMapping&quot;&gt;&lt;code&gt;LayerMapping&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">自动生成用于&lt;a href=&quot;layermapping#django.contrib.gis.utils.LayerMapping&quot;&gt; &lt;code&gt;LayerMapping&lt;/code&gt; &lt;/a&gt;的映射字典。</target>
        </trans-unit>
        <trans-unit id="348a1bbe32f1a6d151804e3d0e2a998d171cfd50" translate="yes" xml:space="preserve">
          <source>Automatically set the field to now every time the object is saved. Useful for &amp;ldquo;last-modified&amp;rdquo; timestamps. Note that the current date is &lt;em&gt;always&lt;/em&gt; used; it&amp;rsquo;s not just a default value that you can override.</source>
          <target state="translated">每次保存对象时自动将字段设置为现在。对于&amp;ldquo;最后修改的&amp;rdquo;时间戳有用。请注意，&lt;em&gt;始终&lt;/em&gt;使用当前日期。它不仅是您可以覆盖的默认值。</target>
        </trans-unit>
        <trans-unit id="e1eb3738429a66a56ba42aade58f3873fec71c49" translate="yes" xml:space="preserve">
          <source>Automatically set the field to now when the object is first created. Useful for creation of timestamps. Note that the current date is &lt;em&gt;always&lt;/em&gt; used; it&amp;rsquo;s not just a default value that you can override. So even if you set a value for this field when creating the object, it will be ignored. If you want to be able to modify this field, set the following instead of &lt;code&gt;auto_now_add=True&lt;/code&gt;:</source>
          <target state="translated">首次创建对象时，将字段自动设置为现在。对于创建时间戳很有用。请注意，&lt;em&gt;始终&lt;/em&gt;使用当前日期。它不仅是您可以覆盖的默认值。因此，即使您在创建对象时为此字段设置了一个值，也会将其忽略。如果您希望能够修改此字段，请设置以下内容而不是 &lt;code&gt;auto_now_add=True&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0c56f5d1cbaa3e3798d943d9e0c7e14536b2ace4" translate="yes" xml:space="preserve">
          <source>Available &lt;code&gt;Meta&lt;/code&gt; options</source>
          <target state="translated">可用的 &lt;code&gt;Meta&lt;/code&gt; 选项</target>
        </trans-unit>
        <trans-unit id="749dcc6931e997fce0e6000d53dab329edee9e45" translate="yes" xml:space="preserve">
          <source>Available authentication backends</source>
          <target state="translated">可用的认证后端</target>
        </trans-unit>
        <trans-unit id="8022dbeab0ead822466c6e95e26e7dc7892483ad" translate="yes" xml:space="preserve">
          <source>Available commands</source>
          <target state="translated">可用的命令</target>
        </trans-unit>
        <trans-unit id="005b1caaecf7a5e7e239831f844db54f7fb44385" translate="yes" xml:space="preserve">
          <source>Available format strings:</source>
          <target state="translated">可用的格式字符串。</target>
        </trans-unit>
        <trans-unit id="66149627d8cbb08e48e77e67a8c900cf6f8e757f" translate="yes" xml:space="preserve">
          <source>Available formats are:</source>
          <target state="translated">可用的格式有:</target>
        </trans-unit>
        <trans-unit id="9329e10e25582241a54c6a10908254870af37224" translate="yes" xml:space="preserve">
          <source>Available middleware</source>
          <target state="translated">可用的中间件</target>
        </trans-unit>
        <trans-unit id="277a0831ffa6dd7df99804a3bbb855b456ec1f81" translate="yes" xml:space="preserve">
          <source>Available settings</source>
          <target state="translated">可用的设置</target>
        </trans-unit>
        <trans-unit id="feb8fbc77cb1d6f4edc7d323a43667ba938321aa" translate="yes" xml:space="preserve">
          <source>Available values for &lt;code&gt;allowed_permissions&lt;/code&gt; and the corresponding method checks are:</source>
          <target state="translated">&lt;code&gt;allowed_permissions&lt;/code&gt; 和相应的方法检查的可用值为：</target>
        </trans-unit>
        <trans-unit id="1e196c09ba87bfb3b1ca68e7701b13e4fdceeae7" translate="yes" xml:space="preserve">
          <source>Avoid anything more complex</source>
          <target state="translated">避免更复杂的事情</target>
        </trans-unit>
        <trans-unit id="f080a09173571088fa9d223a4573d550fffb2f30" translate="yes" xml:space="preserve">
          <source>Avoid catching exceptions inside &lt;code&gt;atomic&lt;/code&gt;!</source>
          <target state="translated">避免在 &lt;code&gt;atomic&lt;/code&gt; 内捕获异常！</target>
        </trans-unit>
        <trans-unit id="6e0e214b2855516f39cd3567c046d6d06b5c7dad" translate="yes" xml:space="preserve">
          <source>Avoid using &lt;a href=&quot;#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; on string-based fields such as &lt;a href=&quot;#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.TextField&quot;&gt;&lt;code&gt;TextField&lt;/code&gt;&lt;/a&gt;. If a string-based field has &lt;code&gt;null=True&lt;/code&gt;, that means it has two possible values for &amp;ldquo;no data&amp;rdquo;: &lt;code&gt;NULL&lt;/code&gt;, and the empty string. In most cases, it&amp;rsquo;s redundant to have two possible values for &amp;ldquo;no data;&amp;rdquo; the Django convention is to use the empty string, not &lt;code&gt;NULL&lt;/code&gt;. One exception is when a &lt;a href=&quot;#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; has both &lt;code&gt;unique=True&lt;/code&gt; and &lt;code&gt;blank=True&lt;/code&gt; set. In this situation, &lt;code&gt;null=True&lt;/code&gt; is required to avoid unique constraint violations when saving multiple objects with blank values.</source>
          <target state="translated">避免在基于字符串的字段（例如&lt;a href=&quot;#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.db.models.TextField&quot;&gt; &lt;code&gt;TextField&lt;/code&gt; )&lt;/a&gt;上使用&lt;a href=&quot;#django.db.models.Field.null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;。如果基于字符串的字段具有 &lt;code&gt;null=True&lt;/code&gt; ，则意味着它具有&amp;ldquo;无数据&amp;rdquo;的两个可能值： &lt;code&gt;NULL&lt;/code&gt; 和空字符串。在大多数情况下，为&amp;ldquo;无数据&amp;rdquo;使用两个可能的值是多余的； Django约定是使用空字符串，而不是 &lt;code&gt;NULL&lt;/code&gt; 。一个例外是当&lt;a href=&quot;#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;同时设置了 &lt;code&gt;unique=True&lt;/code&gt; 和 &lt;code&gt;blank=True&lt;/code&gt; 时。在这种情况下，当使用空值保存多个对象时，需要 &lt;code&gt;null=True&lt;/code&gt; 以避免唯一约束冲突。</target>
        </trans-unit>
        <trans-unit id="c2c4addd555a2578588f134a04c414a8bfc5cd8d" translate="yes" xml:space="preserve">
          <source>Avoid using the &lt;code&gt;filter&lt;/code&gt; argument with a single annotation or aggregation. It&amp;rsquo;s more efficient to use &lt;code&gt;QuerySet.filter()&lt;/code&gt; to exclude rows. The aggregation &lt;code&gt;filter&lt;/code&gt; argument is only useful when using two or more aggregations over the same relations with different conditionals.</source>
          <target state="translated">避免将 &lt;code&gt;filter&lt;/code&gt; 参数与单个注释或聚合一起使用。使用 &lt;code&gt;QuerySet.filter()&lt;/code&gt; 排除行更有效。仅当在具有不同条件的相同关系上使用两个或多个聚合时，聚合 &lt;code&gt;filter&lt;/code&gt; 参数才有用。</target>
        </trans-unit>
        <trans-unit id="94d7b19f9decbb77a74552061d2a7e28ff16c911" translate="yes" xml:space="preserve">
          <source>Avoiding SQL injection</source>
          <target state="translated">避免SQL注入</target>
        </trans-unit>
        <trans-unit id="9410dc97d2c72692ef59e83fd28566db94c67883" translate="yes" xml:space="preserve">
          <source>Avoiding XSS vulnerabilities when reusing built-in filters</source>
          <target state="translated">避免重用内置过滤器时的XSS漏洞</target>
        </trans-unit>
        <trans-unit id="65a8d185f4de4fa2986100dd5bc5fd9f71b4dd53" translate="yes" xml:space="preserve">
          <source>Avoiding race conditions using &lt;code&gt;F()&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;F()&lt;/code&gt; 避免竞争条件</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="d3995b2b37b0a9d72d4c1f4df49540d8b2f1d7ac" translate="yes" xml:space="preserve">
          <source>B, C</source>
          <target state="translated">B,C</target>
        </trans-unit>
        <trans-unit id="49d16c123e63cae0aa2ecdd12be80bdb56763577" translate="yes" xml:space="preserve">
          <source>Babel provides similar features to &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;makemessages&lt;/code&gt;&lt;/a&gt;, can replace it in general, and doesn&amp;rsquo;t depend on &lt;code&gt;gettext&lt;/code&gt;. For more information, read its documentation about &lt;a href=&quot;http://babel.pocoo.org/en/latest/messages.html&quot;&gt;working with message catalogs&lt;/a&gt;.</source>
          <target state="translated">Babel提供了与&lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt; &lt;code&gt;makemessages&lt;/code&gt; &lt;/a&gt;类似的功能，可以整体替换它，并且不依赖于 &lt;code&gt;gettext&lt;/code&gt; 。有关更多信息，请阅读其有关&lt;a href=&quot;http://babel.pocoo.org/en/latest/messages.html&quot;&gt;使用消息目录的&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="022a7f167d95521de1acf21e27e11c487396593f" translate="yes" xml:space="preserve">
          <source>Back to the &lt;code&gt;detail()&lt;/code&gt; view for our poll application. Given the context variable &lt;code&gt;question&lt;/code&gt;, here&amp;rsquo;s what the &lt;code&gt;polls/detail.html&lt;/code&gt; template might look like:</source>
          <target state="translated">返回我们的民意调查应用程序的 &lt;code&gt;detail()&lt;/code&gt; 视图。给定上下文变量 &lt;code&gt;question&lt;/code&gt; ，这是 &lt;code&gt;polls/detail.html&lt;/code&gt; 模板的外观：</target>
        </trans-unit>
        <trans-unit id="e758ca64563fdd62965a2b97b76d555b1a70d938" translate="yes" xml:space="preserve">
          <source>Backend</source>
          <target state="translated">Backend</target>
        </trans-unit>
        <trans-unit id="907a75668b7e03c4659947b3193d65847d1a8f35" translate="yes" xml:space="preserve">
          <source>Backend Support</source>
          <target state="translated">后台支持</target>
        </trans-unit>
        <trans-unit id="64dd60fe1a049fe6db3eb1369dec2e42bf428e21" translate="yes" xml:space="preserve">
          <source>Background</source>
          <target state="translated">Background</target>
        </trans-unit>
        <trans-unit id="138b85f239e58f9bda1316136aa82c90e7878d7f" translate="yes" xml:space="preserve">
          <source>Background theory</source>
          <target state="translated">背景理论</target>
        </trans-unit>
        <trans-unit id="8fd78925dba59eef91afba0cdabe923520e5ee69" translate="yes" xml:space="preserve">
          <source>Backwards compatibility</source>
          <target state="translated">向后兼容性</target>
        </trans-unit>
        <trans-unit id="b1ff57d696aa3ec09bd76c88944e1a7097ee37a3" translate="yes" xml:space="preserve">
          <source>Bad:</source>
          <target state="translated">Bad:</target>
        </trans-unit>
        <trans-unit id="02fb997b61900c1aeca6956107b15ab95765ea07" translate="yes" xml:space="preserve">
          <source>Bad: &lt;code&gt;'example.com/foo/bar/'&lt;/code&gt;</source>
          <target state="translated">错误： &lt;code&gt;'example.com/foo/bar/'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc163b02e6955ecbd0ac6fa7a6c224b77e0f614b" translate="yes" xml:space="preserve">
          <source>Bad: &lt;code&gt;'https://example.com/foo/bar/'&lt;/code&gt;</source>
          <target state="translated">错误： &lt;code&gt;'https://example.com/foo/bar/'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5400b30a122881d47fdeb120840f94c91748df48" translate="yes" xml:space="preserve">
          <source>Base class for all syndication feeds. Subclasses should provide write().</source>
          <target state="translated">所有聚合feeds的基础类。子类应该提供write()。</target>
        </trans-unit>
        <trans-unit id="5a98533d4533777678a2826b595332b97d370e7d" translate="yes" xml:space="preserve">
          <source>Base class for form range fields.</source>
          <target state="translated">表格范围字段的基类。</target>
        </trans-unit>
        <trans-unit id="694691a2cdd7f3264022193ea43da2dc86d47851" translate="yes" xml:space="preserve">
          <source>Base class for model range fields.</source>
          <target state="translated">模型范围字段的基类。</target>
        </trans-unit>
        <trans-unit id="33498e9763de95f98078b83846fb61dc566837f8" translate="yes" xml:space="preserve">
          <source>Base class restrictions</source>
          <target state="translated">基础类限制</target>
        </trans-unit>
        <trans-unit id="1327df53c1a32ce9abfbbd3212f5272b0617455c" translate="yes" xml:space="preserve">
          <source>Base class-based views can be thought of as &lt;em&gt;parent&lt;/em&gt; views, which can be used by themselves or inherited from. They may not provide all the capabilities required for projects, in which case there are Mixins which extend what base views can do.</source>
          <target state="translated">可以将基于基类的视图视为&lt;em&gt;父&lt;/em&gt;视图，这些视图可以自己使用或从其继承。它们可能无法提供项目所需的全部功能，在这种情况下，有些Mixins可以扩展基本视图的功能。</target>
        </trans-unit>
        <trans-unit id="22ad5eb083aa4a8059d54f5bd8ea8049a7a5258c" translate="yes" xml:space="preserve">
          <source>Base directory to where GeoIP data is located or the full path to where the city or country data files (&lt;code&gt;.mmdb&lt;/code&gt;) are located. Assumes that both the city and country datasets are located in this directory; overrides the &lt;a href=&quot;#std:setting-GEOIP_PATH&quot;&gt;&lt;code&gt;GEOIP_PATH&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">GeoIP数据所在的基本目录，或城市或国家/地区数据文件（ &lt;code&gt;.mmdb&lt;/code&gt; ）的完整路径。假定城市和国家数据集都位于此目录中；覆盖&lt;a href=&quot;#std:setting-GEOIP_PATH&quot;&gt; &lt;code&gt;GEOIP_PATH&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="49f6341ab3962fe35e78e061dffd867a40acb8d9" translate="yes" xml:space="preserve">
          <source>Base managers</source>
          <target state="translated">基地管理人员</target>
        </trans-unit>
        <trans-unit id="524becf4956384aaf9401753f12a515f39814fae" translate="yes" xml:space="preserve">
          <source>Base managers aren&amp;rsquo;t used when querying on related models, or when &lt;a href=&quot;queries#backwards-related-objects&quot;&gt;accessing a one-to-many or many-to-many relationship&lt;/a&gt;. For example, if the &lt;code&gt;Question&lt;/code&gt; model &lt;a href=&quot;../../intro/tutorial02#creating-models&quot;&gt;from the tutorial&lt;/a&gt; had a &lt;code&gt;deleted&lt;/code&gt; field and a base manager that filters out instances with &lt;code&gt;deleted=True&lt;/code&gt;, a queryset like &lt;code&gt;Choice.objects.filter(question__name__startswith='What')&lt;/code&gt; would include choices related to deleted questions.</source>
          <target state="translated">在相关模型上进行查询或&lt;a href=&quot;queries#backwards-related-objects&quot;&gt;访问一对多或多对多关系&lt;/a&gt;时，不使用基本管理器。例如，如果 &lt;code&gt;Question&lt;/code&gt; 模型&lt;a href=&quot;../../intro/tutorial02#creating-models&quot;&gt;从教程&lt;/a&gt;有一个 &lt;code&gt;deleted&lt;/code&gt; 字段和基础管理器，过滤掉与实例 &lt;code&gt;deleted=True&lt;/code&gt; ，就像一个查询集 &lt;code&gt;Choice.objects.filter(question__name__startswith='What')&lt;/code&gt; 将包括有关删除问题的选择。</target>
        </trans-unit>
        <trans-unit id="27eb3e111fe45536ce06e4e05df628d6121d667c" translate="yes" xml:space="preserve">
          <source>Base managers aren&amp;rsquo;t used when querying on related models. For example, if the &lt;code&gt;Question&lt;/code&gt; model &lt;a href=&quot;../../intro/tutorial02#creating-models&quot;&gt;from the tutorial&lt;/a&gt; had a &lt;code&gt;deleted&lt;/code&gt; field and a base manager that filters out instances with &lt;code&gt;deleted=True&lt;/code&gt;, a queryset like &lt;code&gt;Choice.objects.filter(question__name__startswith='What')&lt;/code&gt; would include choices related to deleted questions.</source>
          <target state="translated">在相关模型上查询时，不使用基本管理器。例如，如果本&lt;a href=&quot;../../intro/tutorial02#creating-models&quot;&gt;教程中&lt;/a&gt;的 &lt;code&gt;Question&lt;/code&gt; 模型有一个 &lt;code&gt;deleted&lt;/code&gt; 字段和一个基本管理器，用于过滤出Deleted &lt;code&gt;deleted=True&lt;/code&gt; 实例，则 &lt;code&gt;Choice.objects.filter(question__name__startswith='What')&lt;/code&gt; 将包含与删除的问题相关的选项。</target>
        </trans-unit>
        <trans-unit id="a5ed205aa5fd703bcc3d50fb6437d7138a8d1c26" translate="yes" xml:space="preserve">
          <source>Base views</source>
          <target state="translated">基本观点</target>
        </trans-unit>
        <trans-unit id="13b83badb163e89e1591cbc1c77011d952c1640b" translate="yes" xml:space="preserve">
          <source>Base vs Generic views</source>
          <target state="translated">基本视图与通用视图</target>
        </trans-unit>
        <trans-unit id="a0ce6714ceb84d23825af929df33051d80afd8c9" translate="yes" xml:space="preserve">
          <source>Base widget classes</source>
          <target state="translated">基础小组件类</target>
        </trans-unit>
        <trans-unit id="cc1e70bb062910be7a643ca6e26ad21dd094cf82" translate="yes" xml:space="preserve">
          <source>Base widget classes &lt;a href=&quot;#django.forms.Widget&quot;&gt;&lt;code&gt;Widget&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.forms.MultiWidget&quot;&gt;&lt;code&gt;MultiWidget&lt;/code&gt;&lt;/a&gt; are subclassed by all the &lt;a href=&quot;#built-in-widgets&quot;&gt;built-in widgets&lt;/a&gt; and may serve as a foundation for custom widgets.</source>
          <target state="translated">基本窗口小部件类&lt;a href=&quot;#django.forms.Widget&quot;&gt; &lt;code&gt;Widget&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.forms.MultiWidget&quot;&gt; &lt;code&gt;MultiWidget&lt;/code&gt; &lt;/a&gt;被所有&lt;a href=&quot;#built-in-widgets&quot;&gt;内置窗口小部件&lt;/a&gt;子类化，并且可以用作自定义窗口小部件的基础。</target>
        </trans-unit>
        <trans-unit id="023ccd9b632124d69f29133e19fa531effbe1c65" translate="yes" xml:space="preserve">
          <source>Based on &lt;a href=&quot;../../forms/fields#django.forms.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt; and translates its input into &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.DateRange&quot;&gt;&lt;code&gt;DateRange&lt;/code&gt;&lt;/a&gt;. Default for &lt;a href=&quot;fields#django.contrib.postgres.fields.DateRangeField&quot;&gt;&lt;code&gt;DateRangeField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">基于&lt;a href=&quot;../../forms/fields#django.forms.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt;并将其输入转换为&lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.DateRange&quot;&gt; &lt;code&gt;DateRange&lt;/code&gt; &lt;/a&gt;。默认为&lt;a href=&quot;fields#django.contrib.postgres.fields.DateRangeField&quot;&gt; &lt;code&gt;DateRangeField&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="91cf6094cf7e99756e3d52b512c1ed523b74be07" translate="yes" xml:space="preserve">
          <source>Based on &lt;a href=&quot;../../forms/fields#django.forms.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt; and translates its input into &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.DateTimeTZRange&quot;&gt;&lt;code&gt;DateTimeTZRange&lt;/code&gt;&lt;/a&gt;. Default for &lt;a href=&quot;fields#django.contrib.postgres.fields.DateTimeRangeField&quot;&gt;&lt;code&gt;DateTimeRangeField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">基于&lt;a href=&quot;../../forms/fields#django.forms.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt;并将其输入转换为&lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.DateTimeTZRange&quot;&gt; &lt;code&gt;DateTimeTZRange&lt;/code&gt; &lt;/a&gt;。默认为&lt;a href=&quot;fields#django.contrib.postgres.fields.DateTimeRangeField&quot;&gt; &lt;code&gt;DateTimeRangeField&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d4dac139c2acb993f0cfb3295d29cf679450b8b" translate="yes" xml:space="preserve">
          <source>Based on &lt;a href=&quot;../../forms/fields#django.forms.DecimalField&quot;&gt;&lt;code&gt;DecimalField&lt;/code&gt;&lt;/a&gt; and translates its input into &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt;&lt;code&gt;NumericRange&lt;/code&gt;&lt;/a&gt;. Default for &lt;a href=&quot;fields#django.contrib.postgres.fields.DecimalRangeField&quot;&gt;&lt;code&gt;DecimalRangeField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">基于&lt;a href=&quot;../../forms/fields#django.forms.DecimalField&quot;&gt; &lt;code&gt;DecimalField&lt;/code&gt; &lt;/a&gt;并将其输入转换为&lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt; &lt;code&gt;NumericRange&lt;/code&gt; &lt;/a&gt;。默认为&lt;a href=&quot;fields#django.contrib.postgres.fields.DecimalRangeField&quot;&gt; &lt;code&gt;DecimalRangeField&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a2d5fc68b0e87ce589e5a7786b34368ef0034a1e" translate="yes" xml:space="preserve">
          <source>Based on &lt;a href=&quot;../../forms/fields#django.forms.FloatField&quot;&gt;&lt;code&gt;FloatField&lt;/code&gt;&lt;/a&gt; and translates its input into &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt;&lt;code&gt;NumericRange&lt;/code&gt;&lt;/a&gt;. Default for &lt;a href=&quot;fields#django.contrib.postgres.fields.FloatRangeField&quot;&gt;&lt;code&gt;FloatRangeField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">基于&lt;a href=&quot;../../forms/fields#django.forms.FloatField&quot;&gt; &lt;code&gt;FloatField&lt;/code&gt; &lt;/a&gt;并将其输入转换为&lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt; &lt;code&gt;NumericRange&lt;/code&gt; &lt;/a&gt;。默认为&lt;a href=&quot;fields#django.contrib.postgres.fields.FloatRangeField&quot;&gt; &lt;code&gt;FloatRangeField&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="593a52dc3c5e2722090dcbfa0ed8460ebad0bdd8" translate="yes" xml:space="preserve">
          <source>Based on &lt;a href=&quot;../../forms/fields#django.forms.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt; and translates its input into &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt;&lt;code&gt;NumericRange&lt;/code&gt;&lt;/a&gt;. Default for &lt;a href=&quot;fields#django.contrib.postgres.fields.IntegerRangeField&quot;&gt;&lt;code&gt;IntegerRangeField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fields#django.contrib.postgres.fields.BigIntegerRangeField&quot;&gt;&lt;code&gt;BigIntegerRangeField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">基于&lt;a href=&quot;../../forms/fields#django.forms.IntegerField&quot;&gt; &lt;code&gt;IntegerField&lt;/code&gt; &lt;/a&gt;并将其输入转换为&lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt; &lt;code&gt;NumericRange&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;fields#django.contrib.postgres.fields.IntegerRangeField&quot;&gt; &lt;code&gt;IntegerRangeField&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;fields#django.contrib.postgres.fields.BigIntegerRangeField&quot;&gt; &lt;code&gt;BigIntegerRangeField&lt;/code&gt; 的&lt;/a&gt;默认值。</target>
        </trans-unit>
        <trans-unit id="e63f51f7e5afad0c831b1acc1916d16e437f5b4a" translate="yes" xml:space="preserve">
          <source>Bash completion</source>
          <target state="translated">Bash完成</target>
        </trans-unit>
        <trans-unit id="36c41688b96ebca8546b978b079367e1aa359e74" translate="yes" xml:space="preserve">
          <source>Basic configuration</source>
          <target state="translated">基本配置</target>
        </trans-unit>
        <trans-unit id="4c8d5fdc5db9950cf7bea592d196bad4f803b3fb" translate="yes" xml:space="preserve">
          <source>Basic examples</source>
          <target state="translated">基本例子</target>
        </trans-unit>
        <trans-unit id="b5fbde77a176de1b8104d736377f8f9f6c7c45c5" translate="yes" xml:space="preserve">
          <source>Basic file uploads</source>
          <target state="translated">基本文件上传</target>
        </trans-unit>
        <trans-unit id="2c171ef65e06890e2659b070f8e8e3e962cb28bc" translate="yes" xml:space="preserve">
          <source>Basic forms</source>
          <target state="translated">基本形式</target>
        </trans-unit>
        <trans-unit id="d5f25c152bb6bc0e7fa0c6d19f0fd9ee0aaac6f7" translate="yes" xml:space="preserve">
          <source>Basic lookups keyword arguments take the form &lt;code&gt;field__lookuptype=value&lt;/code&gt;. (That&amp;rsquo;s a double-underscore). For example:</source>
          <target state="translated">基本lookups关键字参数的格式为 &lt;code&gt;field__lookuptype=value&lt;/code&gt; 。（这是双下划线）。例如：</target>
        </trans-unit>
        <trans-unit id="f5f6d1eff70850fa7cf94c4c89bc731b91ecc609" translate="yes" xml:space="preserve">
          <source>Basic testing strategies</source>
          <target state="translated">基本测试策略</target>
        </trans-unit>
        <trans-unit id="cb3a8802da5b3164771a468d78ff7995a249f08a" translate="yes" xml:space="preserve">
          <source>Basic usage</source>
          <target state="translated">基本用途</target>
        </trans-unit>
        <trans-unit id="722f99933cbd1a6d2ea10a0e75995a9b288cb431" translate="yes" xml:space="preserve">
          <source>Basically, the deployment of a GeoDjango application is not different from the deployment of a normal Django application. Please consult Django&amp;rsquo;s &lt;a href=&quot;../../../howto/deployment/index&quot;&gt;deployment documentation&lt;/a&gt;.</source>
          <target state="translated">基本上，GeoDjango应用程序的部署与普通Django应用程序的部署没有什么不同。请查阅Django的&lt;a href=&quot;../../../howto/deployment/index&quot;&gt;部署文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5fcebeefad3cdbbf8733aa928160dec7dc90c1a1" translate="yes" xml:space="preserve">
          <source>Basics</source>
          <target state="translated">Basics</target>
        </trans-unit>
        <trans-unit id="517dbf0b4b497174beda382d4dbff241d4173d30" translate="yes" xml:space="preserve">
          <source>Be aware that files created in this way are not automatically closed. The following approach may be used to close files automatically:</source>
          <target state="translated">要知道,以这种方式创建的文件是不会自动关闭的。可采用以下方法自动关闭文件。</target>
        </trans-unit>
        <trans-unit id="3ec8a16f0562ac16bec7f7eba4ff2610dedf37d0" translate="yes" xml:space="preserve">
          <source>Be aware that if all the passwords in your database aren&amp;rsquo;t encoded in the default hasher&amp;rsquo;s algorithm, you may be vulnerable to a user enumeration timing attack due to a difference between the duration of a login request for a user with a password encoded in a non-default algorithm and the duration of a login request for a nonexistent user (which runs the default hasher). You may be able to mitigate this by &lt;a href=&quot;#wrapping-password-hashers&quot;&gt;upgrading older password hashes&lt;/a&gt;.</source>
          <target state="translated">请注意，如果数据库中的所有密码均未使用默认的哈希算法进行编码，则由于用户登录请求的持续时间与密码中编码的用户的持续时间之间存在差异，因此您可能容易受到用户枚举计时攻击。非默认算法以及不存在的用户（运行默认哈希器）的登录请求的持续时间。您可以通过&lt;a href=&quot;#wrapping-password-hashers&quot;&gt;升级较旧的密码哈希&lt;/a&gt;来减轻这种情况。</target>
        </trans-unit>
        <trans-unit id="894fadfef402ddaec33f2601f2a9a2e3348e30d3" translate="yes" xml:space="preserve">
          <source>Be aware that not all Django output can be passed unmodified to &lt;a href=&quot;https://docs.python.org/3/library/json.html#module-json&quot;&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt;. For example, if you have some custom type in an object to be serialized, you&amp;rsquo;ll have to write a custom &lt;a href=&quot;https://docs.python.org/3/library/json.html#module-json&quot;&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt; encoder for it. Something like this will work:</source>
          <target state="translated">请注意，并非所有Django输出都可以未经修改地传递给&lt;a href=&quot;https://docs.python.org/3/library/json.html#module-json&quot;&gt; &lt;code&gt;json&lt;/code&gt; &lt;/a&gt;。例如，如果要序列化的对象中有一些自定义类型，则必须为其编写一个自定义&lt;a href=&quot;https://docs.python.org/3/library/json.html#module-json&quot;&gt; &lt;code&gt;json&lt;/code&gt; &lt;/a&gt;编码器。这样的事情会起作用：</target>
        </trans-unit>
        <trans-unit id="77345e4d4278d00200e1ee0b3d2293aa945623d3" translate="yes" xml:space="preserve">
          <source>Be aware that not all options set in the &lt;a href=&quot;settings#std:setting-OPTIONS&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt; part of your database configuration in &lt;a href=&quot;settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt; are passed to the command-line client, e.g. &lt;code&gt;'isolation_level'&lt;/code&gt;.</source>
          <target state="translated">请注意，并非在&lt;a href=&quot;settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt;中数据库配置的&lt;a href=&quot;settings#std:setting-OPTIONS&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; &lt;/a&gt;部分中设置的所有选项都传递给命令行客户端，例如 &lt;code&gt;'isolation_level'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="36e711b8e76ffd6eb7723f59093585eedc6d6a56" translate="yes" xml:space="preserve">
          <source>Be aware that sending an email costs extra time, hence you may be vulnerable to an email address enumeration timing attack due to a difference between the duration of a reset request for an existing email address and the duration of a reset request for a nonexistent email address. To reduce the overhead, you can use a 3rd party package that allows to send emails asynchronously, e.g. &lt;a href=&quot;https://pypi.org/project/django-mailer/&quot;&gt;django-mailer&lt;/a&gt;.</source>
          <target state="translated">请注意，发送电子邮件会花费额外的时间，因此，由于对现有电子邮件地址的重置请求的持续时间与对不存在的电子邮件地址的重置请求的持续时间之间存在差异，因此您可能容易受到电子邮件地址枚举定时攻击的攻击。为了减少开销，您可以使用允许异步发送电子邮件的第三方包，例如&lt;a href=&quot;https://pypi.org/project/django-mailer/&quot;&gt;django-mailer&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="79e3498394e017162e5dbcbada25f0d715476bfd" translate="yes" xml:space="preserve">
          <source>Be aware that the &lt;code&gt;update()&lt;/code&gt; method is converted directly to an SQL statement. It is a bulk operation for direct updates. It doesn&amp;rsquo;t run any &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; methods on your models, or emit the &lt;code&gt;pre_save&lt;/code&gt; or &lt;code&gt;post_save&lt;/code&gt; signals (which are a consequence of calling &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt;), or honor the &lt;a href=&quot;../../ref/models/fields#django.db.models.DateField.auto_now&quot;&gt;&lt;code&gt;auto_now&lt;/code&gt;&lt;/a&gt; field option. If you want to save every item in a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; and make sure that the &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; method is called on each instance, you don&amp;rsquo;t need any special function to handle that. Loop over them and call &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">请注意， &lt;code&gt;update()&lt;/code&gt; 方法直接转换为SQL语句。这是直接更新的批量操作。它不会在模型上运行任何&lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;方法，也不会发出 &lt;code&gt;pre_save&lt;/code&gt; 或 &lt;code&gt;post_save&lt;/code&gt; 信号（这是调用&lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; 的结果&lt;/a&gt;），也&lt;a href=&quot;../../ref/models/fields#django.db.models.DateField.auto_now&quot;&gt; &lt;code&gt;auto_now&lt;/code&gt; &lt;/a&gt;字段选项。如果要将每个项目保存在&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; 中&lt;/a&gt;，并确保在每个实例上都调用&lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;方法，则不需要任何特殊的函数来处理它。遍历它们并调用&lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="8e728258ab818b7ff5c26154c9afe0d25d494d28" translate="yes" xml:space="preserve">
          <source>Be aware that this migration will take on the order of several minutes for several thousand users, depending on the speed of your hardware.</source>
          <target state="translated">请注意,根据您的硬件速度,这种迁移对几千个用户来说需要几分钟的时间。</target>
        </trans-unit>
        <trans-unit id="bf4d63f2b9cfcfa220a03e6a26d997aa9e14d6d2" translate="yes" xml:space="preserve">
          <source>Be aware that this particular setup disables authentication with the default &lt;code&gt;ModelBackend&lt;/code&gt;. This means that if the &lt;code&gt;REMOTE_USER&lt;/code&gt; value is not set then the user is unable to log in, even using Django&amp;rsquo;s admin interface. Adding &lt;code&gt;'django.contrib.auth.backends.ModelBackend'&lt;/code&gt; to the &lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt; list will use &lt;code&gt;ModelBackend&lt;/code&gt; as a fallback if &lt;code&gt;REMOTE_USER&lt;/code&gt; is absent, which will solve these issues.</source>
          <target state="translated">请注意，此特定设置会禁用默认的 &lt;code&gt;ModelBackend&lt;/code&gt; 身份验证。这意味着，如果未设置 &lt;code&gt;REMOTE_USER&lt;/code&gt; 值，则即使使用Django的管理界面，用户也无法登录。如果不存在 &lt;code&gt;REMOTE_USER&lt;/code&gt; ，则将 &lt;code&gt;'django.contrib.auth.backends.ModelBackend'&lt;/code&gt; 添加到 &lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt; 列表将使用 &lt;code&gt;ModelBackend&lt;/code&gt; 作为后备，这将解决这些问题。</target>
        </trans-unit>
        <trans-unit id="8c45bcc820afa9ec7f09ab5e262d83093e9f5054" translate="yes" xml:space="preserve">
          <source>Be careful not to modify any objects created in &lt;code&gt;setUpTestData()&lt;/code&gt; in your test methods. Modifications to in-memory objects from setup work done at the class level will persist between test methods. If you do need to modify them, you could reload them in the &lt;code&gt;setUp()&lt;/code&gt; method with &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.refresh_from_db&quot;&gt;&lt;code&gt;refresh_from_db()&lt;/code&gt;&lt;/a&gt;, for example.</source>
          <target state="translated">注意不要在测试方法中修改在 &lt;code&gt;setUpTestData()&lt;/code&gt; 中创建的任何对象。在类级别完成的设置工作中对内存中对象的修改将在测试方法之间持续存在。如果确实需要修改它们，则可以使用例如&lt;a href=&quot;../../ref/models/instances#django.db.models.Model.refresh_from_db&quot;&gt; &lt;code&gt;refresh_from_db()&lt;/code&gt; &lt;/a&gt;在 &lt;code&gt;setUp()&lt;/code&gt; 方法中重新加载它们。</target>
        </trans-unit>
        <trans-unit id="4b6c803cd4cd7fb715766d27118b3711aba748cc" translate="yes" xml:space="preserve">
          <source>Be careful when deciding if your filter really does leave safe strings as safe. If you&amp;rsquo;re &lt;em&gt;removing&lt;/em&gt; characters, you might inadvertently leave unbalanced HTML tags or entities in the result. For example, removing a &lt;code&gt;&amp;gt;&lt;/code&gt; from the input might turn &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; into &lt;code&gt;&amp;lt;a&lt;/code&gt;, which would need to be escaped on output to avoid causing problems. Similarly, removing a semicolon (&lt;code&gt;;&lt;/code&gt;) can turn &lt;code&gt;&amp;amp;amp;&lt;/code&gt; into &lt;code&gt;&amp;amp;amp&lt;/code&gt;, which is no longer a valid entity and thus needs further escaping. Most cases won&amp;rsquo;t be nearly this tricky, but keep an eye out for any problems like that when reviewing your code.</source>
          <target state="translated">在确定过滤器是否确实将安全字符串留为安全时，请务必小心。如果要&lt;em&gt;删除&lt;/em&gt;字符，则可能会无意中在结果中留下不平衡的HTML标记或实体。例如，从输入中删除 &lt;code&gt;&amp;gt;&lt;/code&gt; 可能会将 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 变成 &lt;code&gt;&amp;lt;a&lt;/code&gt; ，需要在输出中对其进行转义以避免引起问题。同样，删除分号（ &lt;code&gt;;&lt;/code&gt; ）可能会导致 &lt;code&gt;&amp;amp;amp;&lt;/code&gt; 进入 &lt;code&gt;&amp;amp;amp&lt;/code&gt; ，它不再是有效实体，因此需要进一步转义。大多数情况下并不会很棘手，但是在检查代码时，请留意此类问题。</target>
        </trans-unit>
        <trans-unit id="eba0553e37be2c52b9440df03c21c723bfad622f" translate="yes" xml:space="preserve">
          <source>Be careful when reading template code - the template system does not allow use of parentheses, but will call callables automatically, hiding the above distinction.</source>
          <target state="translated">阅读模板代码时要注意--模板系统不允许使用括号,但会自动调用可调用的代码,隐藏上述区别。</target>
        </trans-unit>
        <trans-unit id="69691257ffe84235eced0129d9f45dba26cd9e72" translate="yes" xml:space="preserve">
          <source>Be careful when using the &lt;code&gt;tables&lt;/code&gt; parameter if you&amp;rsquo;re specifying tables that are already used in the query. When you add extra tables via the &lt;code&gt;tables&lt;/code&gt; parameter, Django assumes you want that table included an extra time, if it is already included. That creates a problem, since the table name will then be given an alias. If a table appears multiple times in an SQL statement, the second and subsequent occurrences must use aliases so the database can tell them apart. If you&amp;rsquo;re referring to the extra table you added in the extra &lt;code&gt;where&lt;/code&gt; parameter this is going to cause errors.</source>
          <target state="translated">如果要指定查询中已使用的表，请在使用 &lt;code&gt;tables&lt;/code&gt; 参数时要小心。当您通过 &lt;code&gt;tables&lt;/code&gt; 参数添加额外的表格时，Django会假设您希望该表格包括额外的时间（如果已经包含）。这就产生了一个问题，因为表名将被赋予别名。如果一个表在SQL语句中多次出现，则第二次及其后的出现必须使用别名，以便数据库可以区分它们。如果您引用的是多余的表，则在extra 参数中添加了多余的表 &lt;code&gt;where&lt;/code&gt; 这将导致错误。</target>
        </trans-unit>
        <trans-unit id="2bccc52da60358d2d264adb4897908ef269c5f82" translate="yes" xml:space="preserve">
          <source>Be careful when you override settings, especially when the default value is a non-empty list or dictionary, such as &lt;a href=&quot;#std:setting-STATICFILES_FINDERS&quot;&gt;&lt;code&gt;STATICFILES_FINDERS&lt;/code&gt;&lt;/a&gt;. Make sure you keep the components required by the features of Django you wish to use.</source>
          <target state="translated">覆盖设置时要特别小心，尤其是当默认值为非空列表或字典时，例如&lt;a href=&quot;#std:setting-STATICFILES_FINDERS&quot;&gt; &lt;code&gt;STATICFILES_FINDERS&lt;/code&gt; &lt;/a&gt;。确保保留希望使用的Django功能所需的组件。</target>
        </trans-unit>
        <trans-unit id="cd1ed2ef21e62a68037633065cc360f961c4e002" translate="yes" xml:space="preserve">
          <source>Be careful with &lt;code&gt;related_name&lt;/code&gt; and &lt;code&gt;related_query_name&lt;/code&gt;</source>
          <target state="translated">小心 &lt;code&gt;related_name&lt;/code&gt; 和 &lt;code&gt;related_query_name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5bdad25aa14bf675ac1781f25c4b227f57b0179" translate="yes" xml:space="preserve">
          <source>Be careful with the order of decorators</source>
          <target state="translated">要注意装修人员的顺序</target>
        </trans-unit>
        <trans-unit id="6d3f850c6cb2bd3b2b49588b50efb20bdb7e6cf3" translate="yes" xml:space="preserve">
          <source>Be careful with this attribute in subclasses.</source>
          <target state="translated">在子类中要注意这个属性。</target>
        </trans-unit>
        <trans-unit id="9bd60f39da97cb517c583ecc7dc05525327c66e5" translate="yes" xml:space="preserve">
          <source>Be careful with your own custom properties - it is up to you to implement caching when required, for example using the &lt;a href=&quot;../../ref/utils#django.utils.functional.cached_property&quot;&gt;&lt;code&gt;cached_property&lt;/code&gt;&lt;/a&gt; decorator.</source>
          <target state="translated">请谨慎使用自己的自定义属性-由您决定是否需要在必要时实现缓存，例如使用&lt;a href=&quot;../../ref/utils#django.utils.functional.cached_property&quot;&gt; &lt;code&gt;cached_property&lt;/code&gt; &lt;/a&gt;装饰器。</target>
        </trans-unit>
        <trans-unit id="cae78767c33d88536b3f71df5c5467f045e15884" translate="yes" xml:space="preserve">
          <source>Be careful, though. You need to do more than just mark the output as safe. You need to ensure it really &lt;em&gt;is&lt;/em&gt; safe, and what you do depends on whether auto-escaping is in effect. The idea is to write filters that can operate in templates where auto-escaping is either on or off in order to make things easier for your template authors.</source>
          <target state="translated">不过要小心。您需要做的不仅仅是将输出标记为安全。您需要确保它确实&lt;em&gt;是&lt;/em&gt;安全的，并且您的操作取决于自动转义是否有效。想法是编写可以在启用或禁用自动转义的模板中运行的过滤器，以使模板作者更轻松地进行操作。</target>
        </trans-unit>
        <trans-unit id="9843c5e6a04319a8b29711d8e625e85b3a246449" translate="yes" xml:space="preserve">
          <source>Be cautious about using nested queries and understand your database server&amp;rsquo;s performance characteristics (if in doubt, benchmark!). Some database backends, most notably MySQL, don&amp;rsquo;t optimize nested queries very well. It is more efficient, in those cases, to extract a list of values and then pass that into the second query. That is, execute two queries instead of one:</source>
          <target state="translated">在使用嵌套查询时要谨慎，并了解数据库服务器的性能特征（如有疑问，请进行基准测试！）。一些数据库后端（最著名的是MySQL）不能很好地优化嵌套查询。在这种情况下，提取值列表然后将其传递到第二个查询中会更有效。也就是说，执行两个查询而不是一个：</target>
        </trans-unit>
        <trans-unit id="cfeddad7d119eee7c62f567d08fe9d6b52683e9c" translate="yes" xml:space="preserve">
          <source>Be cautious when ordering by fields in related models if you are also using &lt;a href=&quot;#django.db.models.query.QuerySet.distinct&quot;&gt;&lt;code&gt;distinct()&lt;/code&gt;&lt;/a&gt;. See the note in &lt;a href=&quot;#django.db.models.query.QuerySet.distinct&quot;&gt;&lt;code&gt;distinct()&lt;/code&gt;&lt;/a&gt; for an explanation of how related model ordering can change the expected results.</source>
          <target state="translated">如果您还使用&lt;a href=&quot;#django.db.models.query.QuerySet.distinct&quot;&gt; &lt;code&gt;distinct()&lt;/code&gt; ,&lt;/a&gt;则在按相关模型中的字段进行排序时请务必谨慎。有关相关模型排序如何更改预期结果的说明，请参见&lt;a href=&quot;#django.db.models.query.QuerySet.distinct&quot;&gt; &lt;code&gt;distinct()&lt;/code&gt; &lt;/a&gt;中的注释。</target>
        </trans-unit>
        <trans-unit id="1016c4e42e4fadf15e517758fc4068d8d542bdce" translate="yes" xml:space="preserve">
          <source>Be cautious when updating this setting on a production site. If you update this setting to enable cross-domain cookies on a site that previously used standard domain cookies, existing user cookies that have the old domain will not be updated. This will result in site users being unable to switch the language as long as these cookies persist. The only safe and reliable option to perform the switch is to change the language cookie name permanently (via the &lt;a href=&quot;#std:setting-LANGUAGE_COOKIE_NAME&quot;&gt;&lt;code&gt;LANGUAGE_COOKIE_NAME&lt;/code&gt;&lt;/a&gt; setting) and to add a middleware that copies the value from the old cookie to a new one and then deletes the old one.</source>
          <target state="translated">在生产站点上更新此设置时请小心。如果您更新此设置以在以前使用标准域cookie的网站上启用跨域cookie，则具有旧域的现有用户cookie将不会更新。只要这些cookie持续存在，这将导致站点用户无法切换语言。进行切换的唯一安全可靠的方法是永久更改语言cookie名称（通过&lt;a href=&quot;#std:setting-LANGUAGE_COOKIE_NAME&quot;&gt; &lt;code&gt;LANGUAGE_COOKIE_NAME&lt;/code&gt; &lt;/a&gt;设置），并添加将中间件的值从旧cookie复制到新cookie，然后删除旧cookie的中间件。</target>
        </trans-unit>
        <trans-unit id="917d17d58fe2ef61dc24fb00cc8fb801f576cedc" translate="yes" xml:space="preserve">
          <source>Be cautious when updating this setting on a production site. If you update this setting to enable cross-domain cookies on a site that previously used standard domain cookies, existing user cookies will be set to the old domain. This may result in them being unable to log in as long as these cookies persist.</source>
          <target state="translated">在生产型网站上更新此设置时要谨慎。如果您更新此设置,在以前使用标准域cookie的网站上启用跨域cookie,现有用户cookie将被设置为旧域。这可能导致他们无法登录,只要这些cookie持续存在。</target>
        </trans-unit>
        <trans-unit id="61b4a3d60b793cba756caf46f3fdd82b2777e45d" translate="yes" xml:space="preserve">
          <source>Be cautious when updating this setting on a production site. If you update this setting to use a deeper path than it previously used, existing user cookies that have the old path will not be updated. This will result in site users being unable to switch the language as long as these cookies persist. The only safe and reliable option to perform the switch is to change the language cookie name permanently (via the &lt;a href=&quot;#std:setting-LANGUAGE_COOKIE_NAME&quot;&gt;&lt;code&gt;LANGUAGE_COOKIE_NAME&lt;/code&gt;&lt;/a&gt; setting), and to add a middleware that copies the value from the old cookie to a new one and then deletes the one.</source>
          <target state="translated">在生产站点上更新此设置时请小心。如果您更新此设置以使用比以前更深的路径，则具有旧路径的现有用户Cookie将不会更新。只要这些cookie持续存在，这将导致站点用户无法切换语言。进行切换的唯一安全可靠的方法是永久更改语言cookie名称（通过&lt;a href=&quot;#std:setting-LANGUAGE_COOKIE_NAME&quot;&gt; &lt;code&gt;LANGUAGE_COOKIE_NAME&lt;/code&gt; &lt;/a&gt;设置），并添加一个中间件，该中间件将值从旧cookie复制到新cookie，然后删除它。</target>
        </trans-unit>
        <trans-unit id="040e8be262282dccbf78f864cd1c6985021f4421" translate="yes" xml:space="preserve">
          <source>Be sure to account for Python&amp;rsquo;s behavior if an exception is raised during &lt;code&gt;setUpClass()&lt;/code&gt;. If that happens, neither the tests in the class nor &lt;code&gt;tearDownClass()&lt;/code&gt; are run. In the case of &lt;a href=&quot;#django.test.TestCase&quot;&gt;&lt;code&gt;django.test.TestCase&lt;/code&gt;&lt;/a&gt;, this will leak the transaction created in &lt;code&gt;super()&lt;/code&gt; which results in various symptoms including a segmentation fault on some platforms (reported on macOS). If you want to intentionally raise an exception such as &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.SkipTest&quot;&gt;&lt;code&gt;unittest.SkipTest&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;setUpClass()&lt;/code&gt;, be sure to do it before calling &lt;code&gt;super()&lt;/code&gt; to avoid this.</source>
          <target state="translated">如果在 &lt;code&gt;setUpClass()&lt;/code&gt; 期间引发了异常，请确保考虑到Python的行为。如果发生这种情况，则不会运行该类中的测试，也不会运行 &lt;code&gt;tearDownClass()&lt;/code&gt; 。在&lt;a href=&quot;#django.test.TestCase&quot;&gt; &lt;code&gt;django.test.TestCase&lt;/code&gt; &lt;/a&gt;的情况下，这将泄漏在 &lt;code&gt;super()&lt;/code&gt; 中创建的事务，从而导致各种症状，包括某些平台上的分段错误（在macOS上报告）。如果要在 &lt;code&gt;setUpClass()&lt;/code&gt; 中故意引发诸如&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.SkipTest&quot;&gt; &lt;code&gt;unittest.SkipTest&lt;/code&gt; 之类&lt;/a&gt;的异常，请务必在调用 &lt;code&gt;super()&lt;/code&gt; 之前进行此操作，以避免这种情况。</target>
        </trans-unit>
        <trans-unit id="ef293d4c285cf086b316ae959351a0cccfa79be9" translate="yes" xml:space="preserve">
          <source>Be thoughtful about how you allow users to manage permissions. If you give a non-superuser the ability to edit users, this is ultimately the same as giving them superuser status because they will be able to elevate permissions of users including themselves!</source>
          <target state="translated">要考虑如何让用户管理权限。如果你给了非超级用户编辑用户的能力,这最终等于给了他们超级用户的地位,因为他们将能够提升包括他们自己在内的用户的权限!</target>
        </trans-unit>
        <trans-unit id="beddae976d47ce08353a7d3f7a198e04d440ec69" translate="yes" xml:space="preserve">
          <source>Be very careful if using a &lt;code&gt;RemoteUserMiddleware&lt;/code&gt; subclass with a custom HTTP header. You must be sure that your front-end web server always sets or strips that header based on the appropriate authentication checks, never permitting an end-user to submit a fake (or &amp;ldquo;spoofed&amp;rdquo;) header value. Since the HTTP headers &lt;code&gt;X-Auth-User&lt;/code&gt; and &lt;code&gt;X-Auth_User&lt;/code&gt; (for example) both normalize to the &lt;code&gt;HTTP_X_AUTH_USER&lt;/code&gt; key in &lt;code&gt;request.META&lt;/code&gt;, you must also check that your web server doesn&amp;rsquo;t allow a spoofed header using underscores in place of dashes.</source>
          <target state="translated">如果将 &lt;code&gt;RemoteUserMiddleware&lt;/code&gt; 子类与自定义HTTP标头一起使用，请非常小心。您必须确保您的前端Web服务器始终根据适当的身份验证检查设置或剥离该标头，决不允许最终用户提交伪造（或&amp;ldquo;欺骗&amp;rdquo;）标头值。由于HTTP标头 &lt;code&gt;X-Auth-User&lt;/code&gt; 和 &lt;code&gt;X-Auth_User&lt;/code&gt; （例如）都标准化为 &lt;code&gt;request.META&lt;/code&gt; 中的 &lt;code&gt;HTTP_X_AUTH_USER&lt;/code&gt; 键，因此，您还必须检查Web服务器不允许使用下划线代替破折号的欺骗标头。</target>
        </trans-unit>
        <trans-unit id="67405c085c36ff7bf9e47c05c6ca9a8add17cdbf" translate="yes" xml:space="preserve">
          <source>Be very careful with marking views with the &lt;code&gt;csrf_exempt&lt;/code&gt; decorator unless it is absolutely necessary.</source>
          <target state="translated">除非绝对必要，否则请务必小心使用 &lt;code&gt;csrf_exempt&lt;/code&gt; 装饰器标记视图。</target>
        </trans-unit>
        <trans-unit id="436ebc6dd66c840a88bd7f4d5979b3039fbfbefe" translate="yes" xml:space="preserve">
          <source>Bear in mind that when reversed, this is actually adding a field to a model. The operation is reversible (apart from any data loss, which is irreversible) if the field is nullable or if it has a default value that can be used to populate the recreated column. If the field is not nullable and does not have a default value, the operation is irreversible.</source>
          <target state="translated">请记住,当反转时,这实际上是向模型添加一个字段。如果字段是可空的,或者它有一个默认值,可以用来填充重新创建的列,那么这个操作是可逆的(除了任何数据损失,这是不可逆的)。如果字段不可为空,也没有默认值,则该操作是不可逆的。</target>
        </trans-unit>
        <trans-unit id="463ef2f89f1e249a7b9be4618cd7fcd06a48a5af" translate="yes" xml:space="preserve">
          <source>Bear in mind that when reversed, this is actually adding a field to a model. The operation is reversible (apart from any data loss, which of course is irreversible) if the field is nullable or if it has a default value that can be used to populate the recreated column. If the field is not nullable and does not have a default value, the operation is irreversible.</source>
          <target state="translated">请记住,当反转时,这实际上是向模型添加一个字段。如果字段是空的,或者它有一个默认值可以用来填充重新创建的列,那么这个操作是可逆的(除了任何数据损失,当然是不可逆的)。如果该字段不可为空,也没有默认值,则操作是不可逆的。</target>
        </trans-unit>
        <trans-unit id="042ea8e5fddce26815628fa17044ba5d24eb96ab" translate="yes" xml:space="preserve">
          <source>Because 404 errors are by far the most common HTTP error, there&amp;rsquo;s an easier way to handle those errors.</source>
          <target state="translated">由于404错误是迄今为止最常见的HTTP错误，因此有一种更简单的方法来处理这些错误。</target>
        </trans-unit>
        <trans-unit id="d5c2d2c9e70508835a73ca5b22f9ada7d96afd08" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; attributes and reverse relations can have multiple related rows, including these can have a multiplier effect on the size of your result set. This will be especially pronounced if you include multiple such fields in your &lt;code&gt;values()&lt;/code&gt; query, in which case all possible combinations will be returned.</source>
          <target state="translated">因为&lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;属性和反向关系可以具有多个相关行，所以包括这些行可以对结果集的大小产生事半功倍的效果。如果您在 &lt;code&gt;values()&lt;/code&gt; 查询中包含多个此类字段，则将特别明显，在这种情况下，将返回所有可能的组合。</target>
        </trans-unit>
        <trans-unit id="d592166bd1deeeac277c740bfdfad7f1cfc9799b" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;get_queryset()&lt;/code&gt; returns a &lt;code&gt;QuerySet&lt;/code&gt; object, you can use &lt;code&gt;filter()&lt;/code&gt;, &lt;code&gt;exclude()&lt;/code&gt; and all the other &lt;code&gt;QuerySet&lt;/code&gt; methods on it. So these statements are all legal:</source>
          <target state="translated">由于 &lt;code&gt;get_queryset()&lt;/code&gt; 返回 &lt;code&gt;QuerySet&lt;/code&gt; 对象，因此可以在其上使用 &lt;code&gt;filter()&lt;/code&gt; ， &lt;code&gt;exclude()&lt;/code&gt; 以及所有其他 &lt;code&gt;QuerySet&lt;/code&gt; 方法。因此，这些声明都是合法的：</target>
        </trans-unit>
        <trans-unit id="732623fe54e2e13e287f4b043b432d7f9c00f9ec" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;order_with_respect_to&lt;/code&gt; adds a new database column, be sure to make and apply the appropriate migrations if you add or change &lt;code&gt;order_with_respect_to&lt;/code&gt; after your initial &lt;a href=&quot;../django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">由于 &lt;code&gt;order_with_respect_to&lt;/code&gt; 添加了新的数据库列，因此，如果在初始&lt;a href=&quot;../django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;之后添加或更改 &lt;code&gt;order_with_respect_to&lt;/code&gt; ，请确保进行并应用适当的迁移。</target>
        </trans-unit>
        <trans-unit id="b3f6262139a989927fabc6f1997f91059c06e8ee" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;{% regroup %}&lt;/code&gt; produces &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.namedtuple&quot;&gt;&lt;code&gt;namedtuple()&lt;/code&gt;&lt;/a&gt; objects, you can also write the previous example as:</source>
          <target state="translated">由于 &lt;code&gt;{% regroup %}&lt;/code&gt; 产生&lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.namedtuple&quot;&gt; &lt;code&gt;namedtuple()&lt;/code&gt; &lt;/a&gt;对象，因此您也可以将前面的示例编写为：</target>
        </trans-unit>
        <trans-unit id="f3c27e564d0e5f570e887ae09cb356cf5b1a7d16" translate="yes" xml:space="preserve">
          <source>Because Django intentionally limits the amount of logic processing available in the template language, it is not possible to pass arguments to method calls accessed from within templates. Data should be calculated in views, then passed to templates for display.</source>
          <target state="translated">由于Django有意限制了模板语言中可用的逻辑处理量,所以不可能将参数传递给从模板内访问的方法调用。数据应该在视图中计算,然后传递给模板显示。</target>
        </trans-unit>
        <trans-unit id="fc9cbe0ffd1fa8524ae9029257a68071ccaddc76" translate="yes" xml:space="preserve">
          <source>Because Django was developed in a fast-paced newsroom environment, it was designed to make common Web-development tasks fast and easy. Here&amp;rsquo;s an informal overview of how to write a database-driven Web app with Django.</source>
          <target state="translated">因为Django是在快节奏的新闻编辑室环境中开发的，所以它的设计目的是使普通的Web开发任务变得容易快捷。这是有关如何使用Django编写数据库驱动的Web应用的非正式概述。</target>
        </trans-unit>
        <trans-unit id="7073f6e15877a9af2f4c64844b792af6a94b35a7" translate="yes" xml:space="preserve">
          <source>Because Django&amp;rsquo;s URL resolver expects to send the request and associated arguments to a callable function, not a class, class-based views have an &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt;&lt;code&gt;as_view()&lt;/code&gt;&lt;/a&gt; class method which returns a function that can be called when a request arrives for a URL matching the associated pattern. The function creates an instance of the class, calls &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.setup&quot;&gt;&lt;code&gt;setup()&lt;/code&gt;&lt;/a&gt; to initialize its attributes, and then calls its &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.dispatch&quot;&gt;&lt;code&gt;dispatch()&lt;/code&gt;&lt;/a&gt; method. &lt;code&gt;dispatch&lt;/code&gt; looks at the request to determine whether it is a &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, etc, and relays the request to a matching method if one is defined, or raises &lt;a href=&quot;../../ref/request-response#django.http.HttpResponseNotAllowed&quot;&gt;&lt;code&gt;HttpResponseNotAllowed&lt;/code&gt;&lt;/a&gt; if not:</source>
          <target state="translated">因为Django的URL解析器希望将请求和关联的参数发送给可调用的函数（而不是类），所以基于类的视图具有&lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt; &lt;code&gt;as_view()&lt;/code&gt; &lt;/a&gt;类方法，该方法返回一个函数，该请求在到达与关联的URL匹配的请求时可以被调用模式。该函数创建该类的实例，调用&lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.setup&quot;&gt; &lt;code&gt;setup()&lt;/code&gt; &lt;/a&gt;初始化其属性，然后调用其&lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.dispatch&quot;&gt; &lt;code&gt;dispatch()&lt;/code&gt; &lt;/a&gt;方法。 &lt;code&gt;dispatch&lt;/code&gt; 会检查请求以确定它是否是 &lt;code&gt;GET&lt;/code&gt; ， &lt;code&gt;POST&lt;/code&gt; 等，如果定义了请求，则将请求中继到匹配方法；如果未定义，则引发&lt;a href=&quot;../../ref/request-response#django.http.HttpResponseNotAllowed&quot;&gt; &lt;code&gt;HttpResponseNotAllowed&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="d4114dc9d50278d2b36039acfff453d545e54801" translate="yes" xml:space="preserve">
          <source>Because GeoDjango has its own Python interface, the preceding instructions do not build GDAL&amp;rsquo;s own Python bindings. The bindings may be built by adding the &lt;code&gt;--with-python&lt;/code&gt; flag when running &lt;code&gt;configure&lt;/code&gt;. See &lt;a href=&quot;https://trac.osgeo.org/gdal/wiki/GdalOgrInPython&quot;&gt;GDAL/OGR In Python&lt;/a&gt; for more information on GDAL&amp;rsquo;s bindings.</source>
          <target state="translated">由于GeoDjango有其自己的Python接口，因此上述说明不会构建GDAL自己的Python绑定。可以通过在运行 &lt;code&gt;configure&lt;/code&gt; 时添加 &lt;code&gt;--with-python&lt;/code&gt; 标志来构建绑定。有关&lt;a href=&quot;https://trac.osgeo.org/gdal/wiki/GdalOgrInPython&quot;&gt;GDAL&lt;/a&gt;绑定的更多信息，请参见Python中的GDAL / OGR。</target>
        </trans-unit>
        <trans-unit id="eec5abbbc5a08b4bc4c34df5374fe6e6dfcdca67" translate="yes" xml:space="preserve">
          <source>Because GeoDjango is included with Django, please refer to Django&amp;rsquo;s &lt;a href=&quot;../../../../topics/install#installing-official-release&quot;&gt;installation instructions&lt;/a&gt; for details on how to install.</source>
          <target state="translated">由于Django随附了GeoDjango，因此请参阅Django的&lt;a href=&quot;../../../../topics/install#installing-official-release&quot;&gt;安装说明&lt;/a&gt;以获取有关如何安装的详细信息。</target>
        </trans-unit>
        <trans-unit id="6dbdfdb0d36449d54e4c454f3616ebdb6e2b91d5" translate="yes" xml:space="preserve">
          <source>Because GeoDjango takes advantage of the latest in the open source geospatial software technology, recent versions of the libraries are necessary. If binary packages aren&amp;rsquo;t available for your platform, installation from source may be required. When compiling the libraries from source, please follow the directions closely, especially if you&amp;rsquo;re a beginner.</source>
          <target state="translated">由于GeoDjango利用了最新的开源地理空间软件技术，因此需要最新版本的库。如果二进制软件包不适用于您的平台，则可能需要从源代码进行安装。从源代码编译库时，请严格按照说明进行操作，尤其是对于初学者而言。</target>
        </trans-unit>
        <trans-unit id="ba346e04a85337ab290c6223a629db6764aa3818" translate="yes" xml:space="preserve">
          <source>Because a settings file contains sensitive information, such as the database password, you should make every attempt to limit access to it. For example, change its file permissions so that only you and your Web server&amp;rsquo;s user can read it. This is especially important in a shared-hosting environment.</source>
          <target state="translated">因为设置文件包含敏感信息，例如数据库密码，所以您应尽一切努力限制对其的访问。例如，更改其文件权限，以便只有您和Web服务器的用户才能读取它。这在共享主机环境中尤其重要。</target>
        </trans-unit>
        <trans-unit id="0191f795bb5a539693858d5221eca789bfb06b55" translate="yes" xml:space="preserve">
          <source>Because a settings file is a Python module, the following apply:</source>
          <target state="translated">因为设置文件是一个Python模块,所以适用以下内容。</target>
        </trans-unit>
        <trans-unit id="aa97793ffa48e7799626ae1a3b81b880bdd406f6" translate="yes" xml:space="preserve">
          <source>Because all strings are returned from the database as &lt;code&gt;str&lt;/code&gt; objects, model fields that are character based (CharField, TextField, URLField, etc.) will contain Unicode values when Django retrieves data from the database. This is &lt;em&gt;always&lt;/em&gt; the case, even if the data could fit into an ASCII bytestring.</source>
          <target state="translated">由于所有字符串都作为 &lt;code&gt;str&lt;/code&gt; 对象从数据库返回，因此当Django从数据库检索数据时，基于字符的模型字段（CharField，TextField，URLField等）将包含Unicode值。这是&lt;em&gt;永远&lt;/em&gt;的情况下，即使数据可以融入一个ASCII字节字符串。</target>
        </trans-unit>
        <trans-unit id="27968fb82192cc6e4d325a0225a156067b99db0c" translate="yes" xml:space="preserve">
          <source>Because an enumeration with a concrete data type requires all values to match the type, overriding the &lt;a href=&quot;#field-choices-blank-label&quot;&gt;blank label&lt;/a&gt; cannot be achieved by creating a member with a value of &lt;code&gt;None&lt;/code&gt;. Instead, set the &lt;code&gt;__empty__&lt;/code&gt; attribute on the class:</source>
          <target state="translated">因为具有具体数据类型的枚举要求所有值都与该类型匹配，所以无法通过创建值为 &lt;code&gt;None&lt;/code&gt; 的成员来覆盖&lt;a href=&quot;#field-choices-blank-label&quot;&gt;空白标签&lt;/a&gt;。而是在类上设置 &lt;code&gt;__empty__&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="ebc3024b77f785efa1d4b0fbb10d4ee925ba8acb" translate="yes" xml:space="preserve">
          <source>Because auto-escaping is turned off in the base template, it will also be turned off in the child template, resulting in the following rendered HTML when the &lt;code&gt;greeting&lt;/code&gt; variable contains the string &lt;code&gt;&amp;lt;b&amp;gt;Hello!&amp;lt;/b&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">由于自动转义在基本模板中已关闭，因此也会在子模板中将其关闭，当 &lt;code&gt;greeting&lt;/code&gt; 变量包含字符串 &lt;code&gt;&amp;lt;b&amp;gt;Hello!&amp;lt;/b&amp;gt;&lt;/code&gt; 时，将生成以下呈现的HTML ：</target>
        </trans-unit>
        <trans-unit id="aa7b97b187e5272ee175067b7632a5cafe8eec2c" translate="yes" xml:space="preserve">
          <source>Because dictionary lookup happens first, that behavior kicks in and provides a default value instead of using the intended &lt;code&gt;.items()&lt;/code&gt; method. In this case, consider converting to a dictionary first.</source>
          <target state="translated">因为字典查找首先发生，所以该行为开始并提供默认值，而不是使用预期的 &lt;code&gt;.items()&lt;/code&gt; 方法。在这种情况下，请考虑先转换为字典。</target>
        </trans-unit>
        <trans-unit id="da72b29a6853c54fa30cdfd4198cbc4c6dd11319" translate="yes" xml:space="preserve">
          <source>Because even seemingly-secure web server configurations are susceptible to fake &lt;code&gt;Host&lt;/code&gt; headers, Django validates &lt;code&gt;Host&lt;/code&gt; headers against the &lt;a href=&quot;../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt;&lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;&lt;/a&gt; setting in the &lt;a href=&quot;../ref/request-response#django.http.HttpRequest.get_host&quot;&gt;&lt;code&gt;django.http.HttpRequest.get_host()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">因为即使看似安全的Web服务器配置也容易受到伪造的 &lt;code&gt;Host&lt;/code&gt; 标头的影响，所以Django会根据&lt;a href=&quot;../ref/request-response#django.http.HttpRequest.get_host&quot;&gt; &lt;code&gt;django.http.HttpRequest.get_host()&lt;/code&gt; &lt;/a&gt;方法中的&lt;a href=&quot;../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt; &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; &lt;/a&gt;设置来验证 &lt;code&gt;Host&lt;/code&gt; 标头。</target>
        </trans-unit>
        <trans-unit id="b14c385e9c068c17518da9eb24b790c994df9ab7" translate="yes" xml:space="preserve">
          <source>Because geography calculations involve more mathematics, only a subset of the PostGIS spatial lookups are available for the geography type. Practically, this means that in addition to the &lt;a href=&quot;geoquerysets#distance-lookups&quot;&gt;distance lookups&lt;/a&gt; only the following additional &lt;a href=&quot;geoquerysets#spatial-lookups&quot;&gt;spatial lookups&lt;/a&gt; are available for geography columns:</source>
          <target state="translated">因为地理计算涉及更多数学，所以只有PostGIS空间查找的子集可用于地理类型。实际上，这意味着除了&lt;a href=&quot;geoquerysets#distance-lookups&quot;&gt;距离查找&lt;/a&gt;之外，地理列还只能使用以下其他&lt;a href=&quot;geoquerysets#spatial-lookups&quot;&gt;空间查找&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="595a309749b3a496f49826a3190012c59dc15e12" translate="yes" xml:space="preserve">
          <source>Because it is possible for the developer to turn off the &lt;code&gt;CsrfViewMiddleware&lt;/code&gt;, all relevant views in contrib apps use the &lt;code&gt;csrf_protect&lt;/code&gt; decorator to ensure the security of these applications against CSRF. It is recommended that the developers of other reusable apps that want the same guarantees also use the &lt;code&gt;csrf_protect&lt;/code&gt; decorator on their views.</source>
          <target state="translated">因为开发人员可以关闭 &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; ，所以contrib应用程序中的所有相关视图都使用 &lt;code&gt;csrf_protect&lt;/code&gt; 装饰器来确保这些应用程序针对CSRF的安全性。建议其他希望获得相同保证的可重用应用程序的开发人员在其视图上也使用 &lt;code&gt;csrf_protect&lt;/code&gt; 装饰器。</target>
        </trans-unit>
        <trans-unit id="cbaffa73d9aa8e66279a76ef371ab49ef8c024dd" translate="yes" xml:space="preserve">
          <source>Because it&amp;rsquo;s convenient, let&amp;rsquo;s use Django&amp;rsquo;s own database API, which we covered in &lt;a href=&quot;tutorial02&quot;&gt;Tutorial 2&lt;/a&gt;. Here&amp;rsquo;s one stab at a new &lt;code&gt;index()&lt;/code&gt; view, which displays the latest 5 poll questions in the system, separated by commas, according to publication date:</source>
          <target state="translated">因为方便，所以让我们使用Django自己的数据库API，我们将在&lt;a href=&quot;tutorial02&quot;&gt;教程2中进行介绍&lt;/a&gt;。这是新 &lt;code&gt;index()&lt;/code&gt; 视图上的一个刺，它根据发布日期显示系统中最新的5个民意测验问题，以逗号分隔：</target>
        </trans-unit>
        <trans-unit id="db170df6f33cedcfecf70802e14df5bcdf21d2f3" translate="yes" xml:space="preserve">
          <source>Because it&amp;rsquo;s impossible to serialize arbitrary Python code, these historical models will not have any custom methods that you have defined. They will, however, have the same fields, relationships, managers (limited to those with &lt;code&gt;use_in_migrations = True&lt;/code&gt;) and &lt;code&gt;Meta&lt;/code&gt; options (also versioned, so they may be different from your current ones).</source>
          <target state="translated">因为不可能序列化任意Python代码，所以这些历史模型将没有您定义的任何自定义方法。但是，它们将具有相同的字段，关系，管理器（仅限于具有 &lt;code&gt;use_in_migrations = True&lt;/code&gt; 域），关系和管理器以及 &lt;code&gt;Meta&lt;/code&gt; 选项（也已版本化，因此它们可能与您当前的不同）。</target>
        </trans-unit>
        <trans-unit id="a576b7b74156d956bbdf99772743cf4d2872e210" translate="yes" xml:space="preserve">
          <source>Because migrations are stored in version control, you&amp;rsquo;ll occasionally come across situations where you and another developer have both committed a migration to the same app at the same time, resulting in two migrations with the same number.</source>
          <target state="translated">由于迁移存储在版本控制中，因此您和其他开发人员有时会同时将迁移提交到同一应用程序，导致两次迁移具有相同的数量。</target>
        </trans-unit>
        <trans-unit id="ecf48349c2e18001cd26b4d210fff49794438a69" translate="yes" xml:space="preserve">
          <source>Because multi-table inheritance uses an implicit &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; to link the child and the parent, it&amp;rsquo;s possible to move from the parent down to the child, as in the above example. However, this uses up the name that is the default &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt; value for &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; relations. If you are putting those types of relations on a subclass of the parent model, you &lt;strong&gt;must&lt;/strong&gt; specify the &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt; attribute on each such field. If you forget, Django will raise a validation error.</source>
          <target state="translated">由于多表继承使用隐式的&lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt;来链接子级和父级，因此可以从父级向下移动到子级，如上例所示。但是，这将占用作为&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;关系的默认&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt;值的名称。如果要将这些关系类型放在父模型的子类上，则&lt;strong&gt;必须&lt;/strong&gt;在每个此类字段上指定&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt;属性。如果您忘记了，Django将引发验证错误。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="07db482e681450eaf30c5a9a75feed11bd8fc0ec" translate="yes" xml:space="preserve">
          <source>Because of how &lt;code&gt;xgettext&lt;/code&gt; (used by &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;makemessages&lt;/code&gt;&lt;/a&gt;) works, only functions that take a single string argument can be imported as &lt;code&gt;_&lt;/code&gt;:</source>
          <target state="translated">由于 &lt;code&gt;xgettext&lt;/code&gt; （由&lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt; &lt;code&gt;makemessages&lt;/code&gt; &lt;/a&gt;所使用）如何工作，因此只能将带有单个字符串参数的函数导入为 &lt;code&gt;_&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="08b376685af40f9d58e48e32fc32aee5deed6a38" translate="yes" xml:space="preserve">
          <source>Because of the modular design of the admin templates, it is usually neither necessary nor advisable to replace an entire template. It is almost always better to override only the section of the template which you need to change.</source>
          <target state="translated">由于管理模板的模块化设计,通常没有必要也不建议更换整个模板。最好是只覆盖您需要更改的模板部分。</target>
        </trans-unit>
        <trans-unit id="713b60fca0bbcd7b6e58185e3d1bda5280526dde" translate="yes" xml:space="preserve">
          <source>Because of the nature of JSON (there is no native distinction between lists and tuples) if you pass in a tuple, you will get a list from &lt;code&gt;signing.loads(object)&lt;/code&gt;:</source>
          <target state="translated">由于JSON的特性（如果传入元组，则列表和元组之间没有本地区别），您将从 &lt;code&gt;signing.loads(object)&lt;/code&gt; 中获得一个列表：</target>
        </trans-unit>
        <trans-unit id="bba94ca23cad5e9236d4fe8e0f33ecc7d7ba1816" translate="yes" xml:space="preserve">
          <source>Because of the variety of packaging systems available for macOS, users have several different options for installing GeoDjango. These options are:</source>
          <target state="translated">由于macOS的打包系统多种多样,用户在安装GeoDjango时有几种不同的选择。这些选择是:</target>
        </trans-unit>
        <trans-unit id="4b50530b574b77078f31f6b85ffe2cb4b3381b5f" translate="yes" xml:space="preserve">
          <source>Because of the way that Python resolves method overloading, the call to &lt;code&gt;super().render_to_response(context)&lt;/code&gt; ends up calling the &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.render_to_response&quot;&gt;&lt;code&gt;render_to_response()&lt;/code&gt;&lt;/a&gt; implementation of &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt;&lt;code&gt;TemplateResponseMixin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">由于Python解决方法重载的方式，对 &lt;code&gt;super().render_to_response(context)&lt;/code&gt; 的&lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.render_to_response&quot;&gt; &lt;code&gt;render_to_response()&lt;/code&gt; &lt;/a&gt;最终调用了&lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt; &lt;code&gt;TemplateResponseMixin&lt;/code&gt; &lt;/a&gt;的render_to_response（）实现。</target>
        </trans-unit>
        <trans-unit id="2f7e10f96940de25853d507df6c9e0fad8db0d5e" translate="yes" xml:space="preserve">
          <source>Because of the way the &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#descriptor-invocation&quot;&gt;descriptor protocol&lt;/a&gt; works, using &lt;code&gt;del&lt;/code&gt; (or &lt;code&gt;delattr&lt;/code&gt;) on a &lt;code&gt;cached_property&lt;/code&gt; that hasn&amp;rsquo;t been accessed raises &lt;code&gt;AttributeError&lt;/code&gt;.</source>
          <target state="translated">由于&lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#descriptor-invocation&quot;&gt;描述符协议的&lt;/a&gt;工作方式，在尚未访问的 &lt;code&gt;cached_property&lt;/code&gt; 上使用 &lt;code&gt;del&lt;/code&gt; （或 &lt;code&gt;delattr&lt;/code&gt; ）会引发 &lt;code&gt;AttributeError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4edf1c60b9c9146737fc713b35918c556d71ae4" translate="yes" xml:space="preserve">
          <source>Because of this, &lt;code&gt;staticfiles&lt;/code&gt; ships its own &lt;a href=&quot;../../ref/contrib/staticfiles#django.contrib.staticfiles.testing.StaticLiveServerTestCase&quot;&gt;&lt;code&gt;django.contrib.staticfiles.testing.StaticLiveServerTestCase&lt;/code&gt;&lt;/a&gt;, a subclass of the built-in one that has the ability to transparently serve all the assets during execution of these tests in a way very similar to what we get at development time with &lt;code&gt;DEBUG = True&lt;/code&gt;, i.e. without having to collect them using &lt;a href=&quot;../../ref/contrib/staticfiles#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; first.</source>
          <target state="translated">因此， &lt;code&gt;staticfiles&lt;/code&gt; 附带了自己的&lt;a href=&quot;../../ref/contrib/staticfiles#django.contrib.staticfiles.testing.StaticLiveServerTestCase&quot;&gt; &lt;code&gt;django.contrib.staticfiles.testing.StaticLiveServerTestCase&lt;/code&gt; &lt;/a&gt;，它是内置对象的子类，它能够在执行这些测试期间以与我们得到的非常相似的方式透明地为所有资产提供服务。在开发时使用 &lt;code&gt;DEBUG = True&lt;/code&gt; ，即不必先使用&lt;a href=&quot;../../ref/contrib/staticfiles#django-admin-collectstatic&quot;&gt; &lt;code&gt;collectstatic&lt;/code&gt; &lt;/a&gt;收集它们。</target>
        </trans-unit>
        <trans-unit id="25ea53ad057f59936b93761f6edb3a935113ee48" translate="yes" xml:space="preserve">
          <source>Because some string operations come up again and again, Django ships with a few useful functions that should make working with string and bytestring objects a bit easier.</source>
          <target state="translated">因为有些字符串操作会反复出现,所以Django提供了一些有用的函数,这些函数可以使处理字符串和bytestring对象变得更加容易。</target>
        </trans-unit>
        <trans-unit id="506105669e8434900f8152c16f863fa603dac585" translate="yes" xml:space="preserve">
          <source>Because that would couple the model layer to the view layer. One of the foremost design goals of Django is to maintain loose coupling. Some controlled coupling is introduced in the &lt;a href=&quot;../topics/http/shortcuts#module-django.shortcuts&quot;&gt;&lt;code&gt;django.shortcuts&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">因为那样会将模型层耦合到视图层。Django的首要设计目标之一是保持松散耦合。&lt;a href=&quot;../topics/http/shortcuts#module-django.shortcuts&quot;&gt; &lt;code&gt;django.shortcuts&lt;/code&gt; &lt;/a&gt;模块中引入了一些受控耦合。</target>
        </trans-unit>
        <trans-unit id="cb2c9a0cdf89cda842c176d6dfe984045f57cf93" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt; is applied only after URL resolution has failed and produced a 404, the response it returns will not apply any &lt;a href=&quot;../../topics/http/middleware#view-middleware&quot;&gt;view middleware&lt;/a&gt; methods. Only requests which are successfully routed to a view via normal URL resolution apply view middleware.</source>
          <target state="translated">由于 &lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt; 仅在URL解析失败并产生404之后才应用，因此它返回的响应将不会应用任何&lt;a href=&quot;../../topics/http/middleware#view-middleware&quot;&gt;视图中间件&lt;/a&gt;方法。只有通过常规URL解析成功路由到视图的请求才应用视图中间件。</target>
        </trans-unit>
        <trans-unit id="28be2cf935e455cb809f1b408c0f959b8443b8cb" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;distance&lt;/code&gt; attribute is a &lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/a&gt; object, you can easily express the value in the units of your choice. For example, &lt;code&gt;city.distance.mi&lt;/code&gt; is the distance value in miles and &lt;code&gt;city.distance.km&lt;/code&gt; is the distance value in kilometers. See &lt;a href=&quot;measure&quot;&gt;Measurement Objects&lt;/a&gt; for usage details and the list of &lt;a href=&quot;measure#supported-units&quot;&gt;Supported units&lt;/a&gt;.</source>
          <target state="translated">由于 &lt;code&gt;distance&lt;/code&gt; 属性是一个&lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt; &lt;code&gt;Distance&lt;/code&gt; &lt;/a&gt;对象，因此您可以轻松以所选单位表示该值。例如， &lt;code&gt;city.distance.mi&lt;/code&gt; 是英里的距离值和 &lt;code&gt;city.distance.km&lt;/code&gt; 是公里的距离值。有关用法的详细信息和&lt;a href=&quot;measure#supported-units&quot;&gt;支持的单位&lt;/a&gt;列表，请参见&amp;ldquo; &lt;a href=&quot;measure&quot;&gt;测量对象&lt;/a&gt; &amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="e5b3e63b0f71b204654b3d2115213f5de20d372b" translate="yes" xml:space="preserve">
          <source>Because values are converted to Python before validators are run, you can even use the same validator with forms:</source>
          <target state="translated">因为在验证器运行之前,值会被转换为Python,所以你甚至可以在表单中使用相同的验证器。</target>
        </trans-unit>
        <trans-unit id="00e9ab899d3bca12dd35ac7aa67ab15be3a15c95" translate="yes" xml:space="preserve">
          <source>Because varying on cookie is so common, there&amp;rsquo;s a &lt;a href=&quot;http/decorators#django.views.decorators.vary.vary_on_cookie&quot;&gt;&lt;code&gt;django.views.decorators.vary.vary_on_cookie()&lt;/code&gt;&lt;/a&gt; decorator. These two views are equivalent:</source>
          <target state="translated">由于对Cookie的更改非常普遍，因此有一个&lt;a href=&quot;http/decorators#django.views.decorators.vary.vary_on_cookie&quot;&gt; &lt;code&gt;django.views.decorators.vary.vary_on_cookie()&lt;/code&gt; &lt;/a&gt;装饰器。这两个视图是等效的：</target>
        </trans-unit>
        <trans-unit id="af28755edcf5980a22b136cdea6613753af2c890" translate="yes" xml:space="preserve">
          <source>Before &lt;a href=&quot;#django.contrib.auth.middleware.RemoteUserMiddleware&quot;&gt;&lt;code&gt;RemoteUserMiddleware&lt;/code&gt;&lt;/a&gt;, or any other authentication middleware that may perform a login, and hence rotate the CSRF token, before calling down the middleware chain.</source>
          <target state="translated">在&lt;a href=&quot;#django.contrib.auth.middleware.RemoteUserMiddleware&quot;&gt; &lt;code&gt;RemoteUserMiddleware&lt;/code&gt; &lt;/a&gt;或可能执行登录并因此旋转CSRF令牌的任何其他身份验证中间件之前，在调用中间件链之前。</target>
        </trans-unit>
        <trans-unit id="30a79da2b8b5a03591499e3e59e4ae9b57b131b8" translate="yes" xml:space="preserve">
          <source>Before MySQL 5.6.1, spatial extensions only support bounding box operations (what MySQL calls minimum bounding rectangles, or MBR). Specifically, MySQL did not conform to the OGC standard. Django supports spatial functions operating on real geometries available in modern MySQL versions. However, the spatial functions are not as rich as other backends like PostGIS.</source>
          <target state="translated">在MySQL 5.6.1之前,空间扩展只支持边界框操作(MySQL称之为最小边界矩形,或MBR)。具体来说,MySQL不符合OGC标准。Django支持在现代MySQL版本中可用的真实几何体上操作的空间函数。然而,空间函数并不像PostGIS等其他后端那样丰富。</target>
        </trans-unit>
        <trans-unit id="e747f4b68ab596bd8ab1b7359d47a91efe16e3f6" translate="yes" xml:space="preserve">
          <source>Before a &lt;a href=&quot;#django.template.response.TemplateResponse&quot;&gt;&lt;code&gt;TemplateResponse&lt;/code&gt;&lt;/a&gt; instance can be returned to the client, it must be rendered. The rendering process takes the intermediate representation of template and context, and turns it into the final byte stream that can be served to the client.</source>
          <target state="translated">前&lt;a href=&quot;#django.template.response.TemplateResponse&quot;&gt; &lt;code&gt;TemplateResponse&lt;/code&gt; &lt;/a&gt;实例可以被返回给客户端，它必须被渲染。呈现过程采用模板和上下文的中间表示，并将其转换为可以提供给客户端的最终字节流。</target>
        </trans-unit>
        <trans-unit id="39a8ed35440f50154028026a9bd0d7bdf0ccc46f" translate="yes" xml:space="preserve">
          <source>Before any middleware that may change or use the response body.</source>
          <target state="translated">在任何可能改变或使用响应体的中间件之前。</target>
        </trans-unit>
        <trans-unit id="2b8caca6ca0dc3464c58f73d8b04f82a19d5e4a8" translate="yes" xml:space="preserve">
          <source>Before any middleware that may change the response (it sets the &lt;code&gt;Content-Length&lt;/code&gt; header). A middleware that appears before &lt;code&gt;CommonMiddleware&lt;/code&gt; and changes the response must reset &lt;code&gt;Content-Length&lt;/code&gt;.</source>
          <target state="translated">在任何可能更改响应的中间件之前（它设置 &lt;code&gt;Content-Length&lt;/code&gt; 标头）。在 &lt;code&gt;CommonMiddleware&lt;/code&gt; 之前出现并更改响应的中间件必须重置 &lt;code&gt;Content-Length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="335b3daca29ecf4cc845518aaab15798bfbefa79" translate="yes" xml:space="preserve">
          <source>Before any middleware that may change the response (it sets the &lt;code&gt;ETag&lt;/code&gt; header).</source>
          <target state="translated">在任何可能更改响应的中间件之前（它设置 &lt;code&gt;ETag&lt;/code&gt; 头）。</target>
        </trans-unit>
        <trans-unit id="ddc0fe43c53abb991ec3aef5669c18586af6055c" translate="yes" xml:space="preserve">
          <source>Before any middleware that may raise an an exception to trigger an error view (such as &lt;a href=&quot;exceptions#django.core.exceptions.PermissionDenied&quot;&gt;&lt;code&gt;PermissionDenied&lt;/code&gt;&lt;/a&gt;) if you&amp;rsquo;re using &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt;&lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您正在使用&lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt; &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt; &lt;/a&gt;，则在任何可能引发异常以触发错误视图的中间件之前（例如&lt;a href=&quot;exceptions#django.core.exceptions.PermissionDenied&quot;&gt; &lt;code&gt;PermissionDenied&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7b74f7147071597a78ab4aeb9e480f9503dbf00e" translate="yes" xml:space="preserve">
          <source>Before any middleware that may raise an exception to trigger an error view (such as &lt;a href=&quot;exceptions#django.core.exceptions.PermissionDenied&quot;&gt;&lt;code&gt;PermissionDenied&lt;/code&gt;&lt;/a&gt;) if you&amp;rsquo;re using &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt;&lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您正在使用&lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt; &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt; &lt;/a&gt;，则在任何可能引发异常以触发错误视图的中间件之前（例如&lt;a href=&quot;exceptions#django.core.exceptions.PermissionDenied&quot;&gt; &lt;code&gt;PermissionDenied&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="83e652eda1f9c39025a7134ac1e5f7d6f6ca91de" translate="yes" xml:space="preserve">
          <source>Before any view middleware that assumes that CSRF attacks have been dealt with.</source>
          <target state="translated">在任何假设CSRF攻击已经被处理的视图中间件之前。</target>
        </trans-unit>
        <trans-unit id="3bb8531e29d8b0d7e4de297fcbd58b12c5e7175c" translate="yes" xml:space="preserve">
          <source>Before making any changes, create a new branch for the ticket:</source>
          <target state="translated">在进行任何修改之前,为该票据创建一个新的分支。</target>
        </trans-unit>
        <trans-unit id="87c61853de29443906cf113351b191d8c3eceae6" translate="yes" xml:space="preserve">
          <source>Before running the test suite, install its dependencies by &lt;code&gt;cd&lt;/code&gt;-ing into the Django &lt;code&gt;tests/&lt;/code&gt; directory and then running:</source>
          <target state="translated">在运行测试套件之前，通过 &lt;code&gt;cd&lt;/code&gt; -ing进入Django &lt;code&gt;tests/&lt;/code&gt; 目录安装其依赖项，然后运行：</target>
        </trans-unit>
        <trans-unit id="46ff700820e6c9290efec4b221a3887fe7db92ef" translate="yes" xml:space="preserve">
          <source>Before the &lt;a href=&quot;https://www.ecma-international.org/ecma-262/5.1/index.html#sec-11.1.4&quot;&gt;5th edition of ECMAScript&lt;/a&gt; it was possible to poison the JavaScript &lt;code&gt;Array&lt;/code&gt; constructor. For this reason, Django does not allow passing non-dict objects to the &lt;a href=&quot;#django.http.JsonResponse&quot;&gt;&lt;code&gt;JsonResponse&lt;/code&gt;&lt;/a&gt; constructor by default. However, most modern browsers implement EcmaScript 5 which removes this attack vector. Therefore it is possible to disable this security precaution.</source>
          <target state="translated">在&lt;a href=&quot;https://www.ecma-international.org/ecma-262/5.1/index.html#sec-11.1.4&quot;&gt;第五版ECMAScript&lt;/a&gt;之前，可能会中毒JavaScript &lt;code&gt;Array&lt;/code&gt; 构造函数。因此，Django 默认情况下不允许将非字典对象传递给&lt;a href=&quot;#django.http.JsonResponse&quot;&gt; &lt;code&gt;JsonResponse&lt;/code&gt; &lt;/a&gt;构造函数。但是，大多数现代浏览器都实现了EcmaScript 5，它删除了这种攻击媒介。因此，可以禁用此安全预防措施。</target>
        </trans-unit>
        <trans-unit id="3482fc661487a504b5ead4f883ceae1521f0e887" translate="yes" xml:space="preserve">
          <source>Before those that modify the &lt;code&gt;Vary&lt;/code&gt; header (&lt;code&gt;SessionMiddleware&lt;/code&gt;, &lt;code&gt;GZipMiddleware&lt;/code&gt;, &lt;code&gt;LocaleMiddleware&lt;/code&gt;).</source>
          <target state="translated">在那些修改 &lt;code&gt;Vary&lt;/code&gt; 标头的地方（ &lt;code&gt;SessionMiddleware&lt;/code&gt; ， &lt;code&gt;GZipMiddleware&lt;/code&gt; ， &lt;code&gt;LocaleMiddleware&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c312fbdec5708b04fa2e14447f26928bb7d1ca25" translate="yes" xml:space="preserve">
          <source>Before upgrading, it&amp;rsquo;s a good idea to resolve any deprecation warnings raised by your project while using your current version of Django. Fixing these warnings before upgrading ensures that you&amp;rsquo;re informed about areas of the code that need altering.</source>
          <target state="translated">升级之前，最好解决使用当前版本的Django时项目引起的所有弃用警告。在升级之前修复这些警告可确保您了解需要更改的代码区域。</target>
        </trans-unit>
        <trans-unit id="b150695e7cea893935dbf9808598af414c22465e" translate="yes" xml:space="preserve">
          <source>Before using raw SQL, explore &lt;a href=&quot;index&quot;&gt;the ORM&lt;/a&gt;. Ask on &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/mailing-lists/#django-users-mailing-list&quot;&gt;django-users&lt;/a&gt; or the &lt;a href=&quot;irc://irc.freenode.net/django&quot;&gt;#django IRC channel&lt;/a&gt; to see if the ORM supports your use case.</source>
          <target state="translated">在使用原始SQL之前，请探索&lt;a href=&quot;index&quot;&gt;ORM&lt;/a&gt;。在&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/mailing-lists/#django-users-mailing-list&quot;&gt;django-users&lt;/a&gt;或&lt;a href=&quot;irc://irc.freenode.net/django&quot;&gt;#django IRC频道&lt;/a&gt;上询问，以了解ORM是否支持您的用例。</target>
        </trans-unit>
        <trans-unit id="10b0118703b6a2c0d78d5018c0196cd5c4017486" translate="yes" xml:space="preserve">
          <source>Before using raw SQL, explore &lt;a href=&quot;index&quot;&gt;the ORM&lt;/a&gt;. Ask on &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/mailing-lists/#django-users-mailing-list&quot;&gt;django-users&lt;/a&gt; or the &lt;a href=&quot;https://webchat.freenode.net/#django&quot;&gt;#django IRC channel&lt;/a&gt; to see if the ORM supports your use case.</source>
          <target state="translated">在使用原始SQL之前，请探索&lt;a href=&quot;index&quot;&gt;ORM&lt;/a&gt;。在&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/mailing-lists/#django-users-mailing-list&quot;&gt;django-users&lt;/a&gt;或&lt;a href=&quot;https://webchat.freenode.net/#django&quot;&gt;#django IRC频道&lt;/a&gt;上询问，以了解ORM是否支持您的用例。</target>
        </trans-unit>
        <trans-unit id="cf36f7df8cb66d43c619f2dbc972675dbd7510b7" translate="yes" xml:space="preserve">
          <source>Before using the database cache, you must create the cache table with this command:</source>
          <target state="translated">在使用数据库缓存之前,必须用这个命令创建缓存表。</target>
        </trans-unit>
        <trans-unit id="35936ffe9025a0f37c58cf19bdffd8c3833f7b58" translate="yes" xml:space="preserve">
          <source>Before we try to fix anything, let&amp;rsquo;s have a look at the tools at our disposal.</source>
          <target state="translated">在尝试修复任何问题之前，让我们看一下可供使用的工具。</target>
        </trans-unit>
        <trans-unit id="96e4edc0e1a30c2aee339e20d6a65cd6e9caa561" translate="yes" xml:space="preserve">
          <source>Before you can use Django, you&amp;rsquo;ll need to get it installed. We have a &lt;a href=&quot;../topics/install&quot;&gt;complete installation guide&lt;/a&gt; that covers all the possibilities; this guide will guide you to a minimal installation that&amp;rsquo;ll work while you walk through the introduction.</source>
          <target state="translated">在使用Django之前，您需要先安装它。我们有&lt;a href=&quot;../topics/install&quot;&gt;完整的安装指南&lt;/a&gt;，涵盖了所有可能性；本指南将指导您进行最小的安装，并逐步完成介绍。</target>
        </trans-unit>
        <trans-unit id="3319c838b49b9a8ad0454acd5932ea7e7a286b87" translate="yes" xml:space="preserve">
          <source>Before you get too into writing patches for Django, there&amp;rsquo;s a little more information on contributing that you should probably take a look at:</source>
          <target state="translated">在开始为Django编写补丁之前，有一些关于贡献的更多信息，您可能应该看看：</target>
        </trans-unit>
        <trans-unit id="5116dedc7de53fc4f4989aaba0cf94dc321d797e" translate="yes" xml:space="preserve">
          <source>Before you save uploaded files, the data needs to be stored somewhere.</source>
          <target state="translated">在保存上传的文件之前,需要将数据存储在某个地方。</target>
        </trans-unit>
        <trans-unit id="17aef405ad4670f8dce2fd1c4684c6d92449e710" translate="yes" xml:space="preserve">
          <source>Behaves like the standard Python &lt;code&gt;file.close()&lt;/code&gt; method and closes the file associated with this instance.</source>
          <target state="translated">行为类似于标准的Python &lt;code&gt;file.close()&lt;/code&gt; 方法，并关闭与此实例关联的文件。</target>
        </trans-unit>
        <trans-unit id="058c0a12a9e6a73336cf169899bbd67b58a2696e" translate="yes" xml:space="preserve">
          <source>Behaves the same way as &lt;a href=&quot;#django.db.models.Lookup.process_lhs&quot;&gt;&lt;code&gt;process_lhs()&lt;/code&gt;&lt;/a&gt;, for the right-hand side.</source>
          <target state="translated">对于右侧，其行为与&lt;a href=&quot;#django.db.models.Lookup.process_lhs&quot;&gt; &lt;code&gt;process_lhs()&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="bb28c8b66f1ee877886160ca0f703455045690d5" translate="yes" xml:space="preserve">
          <source>Behavior of contrib apps</source>
          <target state="translated">contrib应用程序的行为</target>
        </trans-unit>
        <trans-unit id="60b5147242d1edb8f92a770b1ec638025b54631a" translate="yes" xml:space="preserve">
          <source>Behavior of parallel requests</source>
          <target state="translated">并行请求的行为</target>
        </trans-unit>
        <trans-unit id="1334bd3587d4348b9da90cad653f4e01715be733" translate="yes" xml:space="preserve">
          <source>Behavior of unbound forms</source>
          <target state="translated">非约束形式的行为</target>
        </trans-unit>
        <trans-unit id="5bbe3ddff5d188e8a248228bc2152ed147d1b379" translate="yes" xml:space="preserve">
          <source>Behind the scenes</source>
          <target state="translated">幕后花絮</target>
        </trans-unit>
        <trans-unit id="2e0fdab6cf6d41997c57faa8163f6751db7574ee" translate="yes" xml:space="preserve">
          <source>Behind the scenes, Django appends &lt;code&gt;&quot;_id&quot;&lt;/code&gt; to the field name to create its database column name. In the above example, the database table for the &lt;code&gt;Car&lt;/code&gt; model will have a &lt;code&gt;manufacturer_id&lt;/code&gt; column. (You can change this explicitly by specifying &lt;a href=&quot;#django.db.models.Field.db_column&quot;&gt;&lt;code&gt;db_column&lt;/code&gt;&lt;/a&gt;) However, your code should never have to deal with the database column name, unless you write custom SQL. You&amp;rsquo;ll always deal with the field names of your model object.</source>
          <target state="translated">在幕后，Django 在字段名称后附加 &lt;code&gt;&quot;_id&quot;&lt;/code&gt; 以创建其数据库列名称。在上面的示例中， &lt;code&gt;Car&lt;/code&gt; 模型的数据库表将具有一个 &lt;code&gt;manufacturer_id&lt;/code&gt; ID列。 （您可以通过指定&lt;a href=&quot;#django.db.models.Field.db_column&quot;&gt; &lt;code&gt;db_column&lt;/code&gt; &lt;/a&gt;显式更改此设置。）但是，除非编写自定义SQL，否则您的代码永远不必处理数据库列名。您将始终处理模型对象的字段名称。</target>
        </trans-unit>
        <trans-unit id="67735357870cd4968ee69d9e4658542d8718d889" translate="yes" xml:space="preserve">
          <source>Behind the scenes, Django creates an intermediary join table to represent the many-to-many relationship. By default, this table name is generated using the name of the many-to-many field and the name of the table for the model that contains it. Since some databases don&amp;rsquo;t support table names above a certain length, these table names will be automatically truncated and a uniqueness hash will be used, e.g. &lt;code&gt;author_books_9cdf&lt;/code&gt;. You can manually provide the name of the join table using the &lt;a href=&quot;#django.db.models.ManyToManyField.db_table&quot;&gt;&lt;code&gt;db_table&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">在幕后，Django创建了一个中间联接表来表示多对多关系。默认情况下，该表名是使用&amp;ldquo;多对多&amp;rdquo;字段的名称和包含该表的模型的表名生成的。由于某些数据库不支持长度超过一定长度的表名，因此这些表名将被自动截断并使用唯一性哈希，例如 &lt;code&gt;author_books_9cdf&lt;/code&gt; 。您可以使用&lt;a href=&quot;#django.db.models.ManyToManyField.db_table&quot;&gt; &lt;code&gt;db_table&lt;/code&gt; &lt;/a&gt;选项手动提供联接表的名称。</target>
        </trans-unit>
        <trans-unit id="847ed7171a03f4ee94168580b2643b171022fd15" translate="yes" xml:space="preserve">
          <source>Behind the scenes, Django delegates decisions about how and where to store files to a file storage system. This is the object that actually understands things like file systems, opening and reading files, etc.</source>
          <target state="translated">在幕后,Django将如何存储文件和在哪里存储文件的决定权委托给了文件存储系统。这是实际理解文件系统、打开和读取文件等事情的对象。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
