<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="c230afc77e4e2c048214892543e0e0dba92c74b2" translate="yes" xml:space="preserve">
          <source>Whether to send the SMTP &lt;code&gt;Date&lt;/code&gt; header of email messages in the local time zone (&lt;code&gt;True&lt;/code&gt;) or in UTC (&lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">是在本地时区（ &lt;code&gt;True&lt;/code&gt; ）还是在UTC（ &lt;code&gt;False&lt;/code&gt; ）发送电子邮件的SMTP &lt;code&gt;Date&lt;/code&gt; 标头。</target>
        </trans-unit>
        <trans-unit id="dc1e42b820954197897da57aa1029b7141d260e7" translate="yes" xml:space="preserve">
          <source>Whether to store the CSRF token in the user&amp;rsquo;s session instead of in a cookie. It requires the use of &lt;a href=&quot;../topics/http/sessions#module-django.contrib.sessions&quot;&gt;&lt;code&gt;django.contrib.sessions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">是否将CSRF令牌存储在用户的会话中，而不是存储在cookie中。它需要使用&lt;a href=&quot;../topics/http/sessions#module-django.contrib.sessions&quot;&gt; &lt;code&gt;django.contrib.sessions&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c079c4554b51556bba08c60f024b5b03af786cb5" translate="yes" xml:space="preserve">
          <source>Whether to use &lt;code&gt;HttpOnly&lt;/code&gt; flag on the CSRF cookie. If this is set to &lt;code&gt;True&lt;/code&gt;, client-side JavaScript will not be able to access the CSRF cookie.</source>
          <target state="translated">是否在CSRF cookie上使用 &lt;code&gt;HttpOnly&lt;/code&gt; 标志。如果将其设置为 &lt;code&gt;True&lt;/code&gt; ，则客户端JavaScript将无法访问CSRF cookie。</target>
        </trans-unit>
        <trans-unit id="c52d23d9b26da97c8d9f367babd5994ea5aa9437" translate="yes" xml:space="preserve">
          <source>Whether to use &lt;code&gt;HttpOnly&lt;/code&gt; flag on the language cookie. If this is set to &lt;code&gt;True&lt;/code&gt;, client-side JavaScript will not be able to access the language cookie.</source>
          <target state="translated">是否在语言cookie上使用 &lt;code&gt;HttpOnly&lt;/code&gt; 标志。如果将其设置为 &lt;code&gt;True&lt;/code&gt; ，则客户端JavaScript将无法访问语言cookie。</target>
        </trans-unit>
        <trans-unit id="b8860a37a8b105e05edd83dd377bca6f7ffd0838" translate="yes" xml:space="preserve">
          <source>Whether to use &lt;code&gt;HttpOnly&lt;/code&gt; flag on the session cookie. If this is set to &lt;code&gt;True&lt;/code&gt;, client-side JavaScript will not be able to access the session cookie.</source>
          <target state="translated">是否在会话cookie上使用 &lt;code&gt;HttpOnly&lt;/code&gt; 标志。如果将其设置为 &lt;code&gt;True&lt;/code&gt; ，则客户端JavaScript将无法访问会话cookie。</target>
        </trans-unit>
        <trans-unit id="9aac0f8462dc8185262894647ee25cf268a09603" translate="yes" xml:space="preserve">
          <source>Whether to use a TLS (secure) connection when talking to the SMTP server. This is used for explicit TLS connections, generally on port 587. If you are experiencing hanging connections, see the implicit TLS setting &lt;a href=&quot;#std:setting-EMAIL_USE_SSL&quot;&gt;&lt;code&gt;EMAIL_USE_SSL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">与SMTP服务器通讯时是否使用TLS（安全）连接。这用于显式TLS连接，通常在端口587上。如果遇到挂起的连接，请参见隐式TLS设置&lt;a href=&quot;#std:setting-EMAIL_USE_SSL&quot;&gt; &lt;code&gt;EMAIL_USE_SSL&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c261409dce3008d3b091919da390431f4ea6ea8c" translate="yes" xml:space="preserve">
          <source>Whether to use a secure cookie for the CSRF cookie. If this is set to &lt;code&gt;True&lt;/code&gt;, the cookie will be marked as &amp;ldquo;secure&amp;rdquo;, which means browsers may ensure that the cookie is only sent with an HTTPS connection.</source>
          <target state="translated">是否对CSRF cookie使用安全cookie。如果将其设置为 &lt;code&gt;True&lt;/code&gt; ，则cookie将被标记为&amp;ldquo;安全&amp;rdquo;，这意味着浏览器可以确保仅通过HTTPS连接发送cookie。</target>
        </trans-unit>
        <trans-unit id="79c300f0f514e3c7ea395168f8c1c50973a04964" translate="yes" xml:space="preserve">
          <source>Whether to use a secure cookie for the language cookie. If this is set to &lt;code&gt;True&lt;/code&gt;, the cookie will be marked as &amp;ldquo;secure&amp;rdquo;, which means browsers may ensure that the cookie is only sent under an HTTPS connection.</source>
          <target state="translated">是否对语言cookie使用安全cookie。如果将其设置为 &lt;code&gt;True&lt;/code&gt; ，则cookie将被标记为&amp;ldquo;安全&amp;rdquo;，这意味着浏览器可以确保仅在HTTPS连接下发送cookie。</target>
        </trans-unit>
        <trans-unit id="439826a24f2e1d39d8ee81a7d4dfa81db02d2dfc" translate="yes" xml:space="preserve">
          <source>Whether to use a secure cookie for the session cookie. If this is set to &lt;code&gt;True&lt;/code&gt;, the cookie will be marked as &amp;ldquo;secure&amp;rdquo;, which means browsers may ensure that the cookie is only sent under an HTTPS connection.</source>
          <target state="translated">是否对会话cookie使用安全cookie。如果将其设置为 &lt;code&gt;True&lt;/code&gt; ，则cookie将被标记为&amp;ldquo;安全&amp;rdquo;，这意味着浏览器可以确保仅在HTTPS连接下发送cookie。</target>
        </trans-unit>
        <trans-unit id="b07c93b5a741115a7c7596e671b87e0d71c0fddd" translate="yes" xml:space="preserve">
          <source>Whether to use an implicit TLS (secure) connection when talking to the SMTP server. In most email documentation this type of TLS connection is referred to as SSL. It is generally used on port 465. If you are experiencing problems, see the explicit TLS setting &lt;a href=&quot;#std:setting-EMAIL_USE_TLS&quot;&gt;&lt;code&gt;EMAIL_USE_TLS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">与SMTP服务器通信时是否使用隐式TLS（安全）连接。在大多数电子邮件文档中，这种TLS连接类型称为SSL。通常在端口465上使用。如果遇到问题，请参阅显式TLS设置&lt;a href=&quot;#std:setting-EMAIL_USE_TLS&quot;&gt; &lt;code&gt;EMAIL_USE_TLS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="376234d99dc3a95e0722958abf3e5eb0b68178e1" translate="yes" xml:space="preserve">
          <source>Which JavaScript toolkit?</source>
          <target state="translated">哪个JavaScript工具包?</target>
        </trans-unit>
        <trans-unit id="bf329a9e741ad910179064d4bcef2f4b209b9bc9" translate="yes" xml:space="preserve">
          <source>Which host to use when connecting to the database. An empty string means localhost. Not used with SQLite.</source>
          <target state="translated">连接到数据库时使用的主机。空字符串表示本地主机。不用于SQLite。</target>
        </trans-unit>
        <trans-unit id="ffca8dc299cd5a5eb0951d97b6660e2dde043b4a" translate="yes" xml:space="preserve">
          <source>Which will be faster than the following which requires evaluating and iterating through the entire queryset:</source>
          <target state="translated">这将比下面需要对整个查询集进行评估和迭代的方法更快。</target>
        </trans-unit>
        <trans-unit id="328c17f197011d5407dc89a421a3da316c3aa8fb" translate="yes" xml:space="preserve">
          <source>Which will be faster than:</source>
          <target state="translated">哪个会比。</target>
        </trans-unit>
        <trans-unit id="6ba120d6484fd970c8037ce11cb73a6fcbb70129" translate="yes" xml:space="preserve">
          <source>Whichever of the values is stored, when retrieved from the database, the Python representation of the JSON scalar &lt;code&gt;null&lt;/code&gt; is the same as SQL &lt;code&gt;NULL&lt;/code&gt;, i.e. &lt;code&gt;None&lt;/code&gt;. Therefore, it can be hard to distinguish between them.</source>
          <target state="translated">无论存储哪个值，从数据库中检索时，JSON标量 &lt;code&gt;null&lt;/code&gt; 的Python表示形式都与SQL &lt;code&gt;NULL&lt;/code&gt; 相同，即 &lt;code&gt;None&lt;/code&gt; 。因此，可能很难区分它们。</target>
        </trans-unit>
        <trans-unit id="40333b2b4d00ce350b05c7dbba14a15c5cafbd8f" translate="yes" xml:space="preserve">
          <source>While &lt;a href=&quot;customizing#custom-permissions&quot;&gt;custom permissions&lt;/a&gt; can be defined within a model&amp;rsquo;s &lt;code&gt;Meta&lt;/code&gt; class, you can also create permissions directly. For example, you can create the &lt;code&gt;can_publish&lt;/code&gt; permission for a &lt;code&gt;BlogPost&lt;/code&gt; model in &lt;code&gt;myapp&lt;/code&gt;:</source>
          <target state="translated">尽管可以在模型的 &lt;code&gt;Meta&lt;/code&gt; 类中定义&lt;a href=&quot;customizing#custom-permissions&quot;&gt;自定义权限&lt;/a&gt;，但是您也可以直接创建权限。例如，您可以在 &lt;code&gt;myapp&lt;/code&gt; 中为 &lt;code&gt;BlogPost&lt;/code&gt; 模型创建 &lt;code&gt;can_publish&lt;/code&gt; 权限：</target>
        </trans-unit>
        <trans-unit id="9e112772455647f45523756c9a2d0e3a32d6b942" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;admindocs&lt;/code&gt; does not include a place to document templates by themselves, if you use the &lt;code&gt;:template:`path/to/template.html`&lt;/code&gt; syntax in a docstring the resulting page will verify the path of that template with Django&amp;rsquo;s &lt;a href=&quot;../../templates/api#template-loaders&quot;&gt;template loaders&lt;/a&gt;. This can be a handy way to check if the specified template exists and to show where on the filesystem that template is stored.</source>
          <target state="translated">虽然 &lt;code&gt;admindocs&lt;/code&gt; 没有单独放置模板的位置，但是如果您在文档字符串中使用 &lt;code&gt;:template:`path/to/template.html`&lt;/code&gt; 语法，则结果页面将使用Django的&lt;a href=&quot;../../templates/api#template-loaders&quot;&gt;模板加载器&lt;/a&gt;验证该模板的路径。这是检查指定模板是否存在并显示模板在文件系统上存储位置的便捷方法。</target>
        </trans-unit>
        <trans-unit id="fb7a0ed50264f4caeb1cefccb5e4015103378d8a" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;person.get_friends()&lt;/code&gt; will recompute the friends on each call, the value of the cached property will persist until you delete it as described above:</source>
          <target state="translated">尽管 &lt;code&gt;person.get_friends()&lt;/code&gt; 将在每次调用时重新计算朋友，但是缓存的属性的值将保持不变，直到您如上所述将其删除：</target>
        </trans-unit>
        <trans-unit id="65537ea137bfde5ca9eb175967f6b53591b10c82" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;prefetch_related&lt;/code&gt; supports prefetching &lt;code&gt;GenericForeignKey&lt;/code&gt; relationships, the number of queries will depend on the data. Since a &lt;code&gt;GenericForeignKey&lt;/code&gt; can reference data in multiple tables, one query per table referenced is needed, rather than one query for all the items. There could be additional queries on the &lt;code&gt;ContentType&lt;/code&gt; table if the relevant rows have not already been fetched.</source>
          <target state="translated">虽然 &lt;code&gt;prefetch_related&lt;/code&gt; 支持预取 &lt;code&gt;GenericForeignKey&lt;/code&gt; 关系，但查询数量将取决于数据。由于 &lt;code&gt;GenericForeignKey&lt;/code&gt; 可以引用多个表中的数据，因此每个引用的表都需要一个查询，而不是所有项目都需要一个查询。如果尚未获取相关行，则在 &lt;code&gt;ContentType&lt;/code&gt; 表上可能会有其他查询。</target>
        </trans-unit>
        <trans-unit id="a6ee0ce737a4a79a4c6019b63be335c554729803" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;string_if_invalid&lt;/code&gt; can be a useful debugging tool, it is a bad idea to turn it on as a &amp;lsquo;development default&amp;rsquo;.</source>
          <target state="translated">虽然 &lt;code&gt;string_if_invalid&lt;/code&gt; 可能是有用的调试工具，但将其作为&amp;ldquo;开发默认值&amp;rdquo;打开是一个坏主意。</target>
        </trans-unit>
        <trans-unit id="e1283fd95d654acac3eb495812e2bdbc42fe32e5" translate="yes" xml:space="preserve">
          <source>While Django can serialize most things, there are some things that we just can&amp;rsquo;t serialize out into a valid Python representation - there&amp;rsquo;s no Python standard for how a value can be turned back into code (&lt;code&gt;repr()&lt;/code&gt; only works for basic values, and doesn&amp;rsquo;t specify import paths).</source>
          <target state="translated">尽管Django可以序列化大多数事情，但是有些事情我们只是不能序列化为有效的Python表示形式-没有将值转换为代码的Python标准（ &lt;code&gt;repr()&lt;/code&gt; 仅适用于基本值，并且没有指定导入路径）。</target>
        </trans-unit>
        <trans-unit id="b819b684c05a74102a74d29e47e2e3b91c5b2c30" translate="yes" xml:space="preserve">
          <source>While Django includes support for a number of cache backends out-of-the-box, sometimes you might want to use a customized cache backend. To use an external cache backend with Django, use the Python import path as the &lt;a href=&quot;../ref/settings#std:setting-CACHES-BACKEND&quot;&gt;&lt;code&gt;BACKEND&lt;/code&gt;&lt;/a&gt; of the &lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt;&lt;code&gt;CACHES&lt;/code&gt;&lt;/a&gt; setting, like so:</source>
          <target state="translated">尽管Django开箱即用地支持许多缓存后端，但有时您可能希望使用自定义的缓存后端。要使用Django的外部缓存后端，使用Python导入路径作为&lt;a href=&quot;../ref/settings#std:setting-CACHES-BACKEND&quot;&gt; &lt;code&gt;BACKEND&lt;/code&gt; &lt;/a&gt;中的&lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt; &lt;code&gt;CACHES&lt;/code&gt; &lt;/a&gt;设置，如下所示：</target>
        </trans-unit>
        <trans-unit id="e5c4feb8da82ac191403f15d1c8bc5298fa7ca58" translate="yes" xml:space="preserve">
          <source>While Django is best suited for developing new applications, it&amp;rsquo;s quite possible to integrate it into legacy databases. Django includes a couple of utilities to automate as much of this process as possible.</source>
          <target state="translated">尽管Django最适合开发新应用程序，但很有可能将其集成到旧数据库中。Django包含几个实用程序，可自动执行此过程。</target>
        </trans-unit>
        <trans-unit id="fb03d5f18ab539d5324f858324f6c87cb4879d89" translate="yes" xml:space="preserve">
          <source>While Django provides a rich set of i18n tools for use in views and templates, it does not restrict the usage to Django-specific code. The Django translation mechanisms can be used to translate arbitrary texts to any language that is supported by Django (as long as an appropriate translation catalog exists, of course). You can load a translation catalog, activate it and translate text to language of your choice, but remember to switch back to original language, as activating a translation catalog is done on per-thread basis and such change will affect code running in the same thread.</source>
          <target state="translated">虽然Django提供了一套丰富的i18n工具供视图和模板使用,但它并没有将使用范围限制在Django特定的代码中。Django的翻译机制可以用来将任意文本翻译成任何Django支持的语言(当然,只要有合适的翻译目录存在)。你可以加载一个翻译目录,激活它并将文本翻译成你所选择的语言,但记得要切换回原语言,因为激活翻译目录是以每个线程为基础的,这样的改变会影响到在同一线程中运行的代码。</target>
        </trans-unit>
        <trans-unit id="b049dc7ef40873c5bb08aca5fbf10cf607001a5e" translate="yes" xml:space="preserve">
          <source>While Django provides good security protection out of the box, it is still important to properly deploy your application and take advantage of the security protection of the Web server, operating system and other components.</source>
          <target state="translated">虽然Django提供了良好的开箱即用的安全保护,但正确部署你的应用并利用Web服务器、操作系统和其他组件的安全保护还是很重要的。</target>
        </trans-unit>
        <trans-unit id="34cf6abdbd5ec94a4ddbaf1e762bfe77c50c8592" translate="yes" xml:space="preserve">
          <source>While Django&amp;rsquo;s default ASGI handler will run all your code in a synchronous thread, if you choose to run your own async handler you must be aware of async-safety.</source>
          <target state="translated">尽管Django的默认ASGI处理程序将在同步线程中运行所有代码，但是如果您选择运行自己的异步处理程序，则必须注意异步安全性。</target>
        </trans-unit>
        <trans-unit id="899e4cee0f9a64e876c21b82209eba4348985627" translate="yes" xml:space="preserve">
          <source>While Django&amp;rsquo;s test suite is running, you&amp;rsquo;ll see a stream of characters representing the status of each test as it completes. &lt;code&gt;E&lt;/code&gt; indicates that an error was raised during a test, and &lt;code&gt;F&lt;/code&gt; indicates that a test&amp;rsquo;s assertions failed. Both of these are considered to be test failures. Meanwhile, &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;s&lt;/code&gt; indicated expected failures and skipped tests, respectively. Dots indicate passing tests.</source>
          <target state="translated">在Django的测试套件运行时，您将看到一串代表每个测试完成状态的字符流。 &lt;code&gt;E&lt;/code&gt; 表示测试期间引发错误， &lt;code&gt;F&lt;/code&gt; 表示测试的断言失败。这些都被认为是测试失败。同时， &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;s&lt;/code&gt; 分别表示预期的失败和跳过的测试。点表示通过测试。</target>
        </trans-unit>
        <trans-unit id="631f249ec0a862c285f840855aa5319c50d4423f" translate="yes" xml:space="preserve">
          <source>While SQLite supports savepoints, a flaw in the design of the &lt;a href=&quot;https://docs.python.org/3/library/sqlite3.html#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module makes them hardly usable.</source>
          <target state="translated">尽管SQLite支持保存点，但&lt;a href=&quot;https://docs.python.org/3/library/sqlite3.html#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt;模块设计中的缺陷使它们几乎不可用。</target>
        </trans-unit>
        <trans-unit id="065e5b60e7cb3b39f47ddc276ad75d602561a364" translate="yes" xml:space="preserve">
          <source>While a minimal class-based view does not require any class attributes to perform its job, class attributes are useful in many class-based designs, and there are two ways to configure or set class attributes.</source>
          <target state="translated">虽然一个最小的基于类的视图不需要任何类属性来执行它的工作,但在许多基于类的设计中,类属性是很有用的,有两种方法可以配置或设置类属性。</target>
        </trans-unit>
        <trans-unit id="a7df68b20c04e29a83bc2d7b7977bd8ee9e34054" translate="yes" xml:space="preserve">
          <source>While all spatial lookups can be used with raster objects on both sides, not all underlying operators natively accept raster input. For cases where the operator expects geometry input, the raster is automatically converted to a geometry. It&amp;rsquo;s important to keep this in mind when interpreting the lookup results.</source>
          <target state="translated">虽然所有空间查找都可以在两侧都与栅格对象一起使用，但并非所有基础运算符本机都接受栅格输入。对于需要操作员输入几何图形的情况，栅格会自动转换为几何图形。在解释查询结果时，请记住这一点，这一点很重要。</target>
        </trans-unit>
        <trans-unit id="e246e71fedf351571698f5920052466ab1b2f548" translate="yes" xml:space="preserve">
          <source>While for a naive datetime, it isn&amp;rsquo;t:</source>
          <target state="translated">虽然天真的日期时间不是：</target>
        </trans-unit>
        <trans-unit id="6cffe2311eb1d1bb8515c4b0c9166729077e361b" translate="yes" xml:space="preserve">
          <source>While it can be a complex process at times, upgrading to the latest Django version has several benefits:</source>
          <target state="translated">虽然这有时是一个复杂的过程,但升级到最新的Django版本有几个好处。</target>
        </trans-unit>
        <trans-unit id="193d8e6e7114df4964300086f01c6b4768374149" translate="yes" xml:space="preserve">
          <source>While migrations are per-app, the tables and relationships implied by your models are too complex to be created for one app at a time. When you make a migration that requires something else to run - for example, you add a &lt;code&gt;ForeignKey&lt;/code&gt; in your &lt;code&gt;books&lt;/code&gt; app to your &lt;code&gt;authors&lt;/code&gt; app - the resulting migration will contain a dependency on a migration in &lt;code&gt;authors&lt;/code&gt;.</source>
          <target state="translated">尽管迁移是针对每个应用程序进行的，但模型所隐含的表和关系太复杂，无法一次为一个应用程序创建。进行需要其他操作的迁移时-例如，在您的 &lt;code&gt;books&lt;/code&gt; 应用程序中将 &lt;code&gt;ForeignKey&lt;/code&gt; 添加到 &lt;code&gt;authors&lt;/code&gt; 应用程序-结果迁移将包含对 &lt;code&gt;authors&lt;/code&gt; 迁移的依赖。</target>
        </trans-unit>
        <trans-unit id="181982987d13719ec0c945a54560f8a726490266" translate="yes" xml:space="preserve">
          <source>While most methods from the standard &lt;code&gt;QuerySet&lt;/code&gt; are accessible directly from the &lt;code&gt;Manager&lt;/code&gt;, this is only the case for the extra methods defined on a custom &lt;code&gt;QuerySet&lt;/code&gt; if you also implement them on the &lt;code&gt;Manager&lt;/code&gt;:</source>
          <target state="translated">虽然从标准的大多数方法 &lt;code&gt;QuerySet&lt;/code&gt; 都可以访问直接从 &lt;code&gt;Manager&lt;/code&gt; ，这只是一个自定义的额外方法的情况下 &lt;code&gt;QuerySet&lt;/code&gt; ，如果你还实现了他们的 &lt;code&gt;Manager&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7e6fb585b1590782f67cd9301a2b1723c167dc0d" translate="yes" xml:space="preserve">
          <source>While not recommended, if you are at the end of the validation chain (i.e. your form &lt;code&gt;clean()&lt;/code&gt; method) and you know you will &lt;em&gt;never&lt;/em&gt; need to override your error message you can still opt for the less verbose:</source>
          <target state="translated">尽管不建议这样做，但是如果您位于验证链的末尾（即，表单 &lt;code&gt;clean()&lt;/code&gt; 方法），并且您知道将&lt;em&gt;永远&lt;/em&gt;不需要覆盖错误消息，则仍然可以选择较不冗长的代码：</target>
        </trans-unit>
        <trans-unit id="83d533881f9a91c2a74157ddecbcdc46b72b4600" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;RESOURCE&lt;/code&gt; role has the required &lt;code&gt;CREATE TABLE&lt;/code&gt;, &lt;code&gt;CREATE SEQUENCE&lt;/code&gt;, &lt;code&gt;CREATE PROCEDURE&lt;/code&gt;, and &lt;code&gt;CREATE TRIGGER&lt;/code&gt; privileges, and a user granted &lt;code&gt;RESOURCE WITH ADMIN OPTION&lt;/code&gt; can grant &lt;code&gt;RESOURCE&lt;/code&gt;, such a user cannot grant the individual privileges (e.g. &lt;code&gt;CREATE TABLE&lt;/code&gt;), and thus &lt;code&gt;RESOURCE WITH ADMIN OPTION&lt;/code&gt; is not usually sufficient for running tests.</source>
          <target state="translated">尽管 &lt;code&gt;RESOURCE&lt;/code&gt; 角色具有必需的 &lt;code&gt;CREATE TABLE&lt;/code&gt; ， &lt;code&gt;CREATE SEQUENCE&lt;/code&gt; ， &lt;code&gt;CREATE PROCEDURE&lt;/code&gt; 和 &lt;code&gt;CREATE TRIGGER&lt;/code&gt; 特权，并且被授予 &lt;code&gt;RESOURCE WITH ADMIN OPTION&lt;/code&gt; 的用户可以授予 &lt;code&gt;RESOURCE&lt;/code&gt; ，但该用户无法授予个人特权（例如 &lt;code&gt;CREATE TABLE&lt;/code&gt; ），因此 &lt;code&gt;RESOURCE WITH ADMIN OPTION&lt;/code&gt; 通常不足以运行测试。</target>
        </trans-unit>
        <trans-unit id="bb4aa02c2fa2335eea36739030b3cbf1c0c19375" translate="yes" xml:space="preserve">
          <source>While the above example works, be aware that most template filters return strings, so mathematical comparisons using filters will generally not work as you expect. &lt;a href=&quot;builtins#std:templatefilter-length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; is an exception.</source>
          <target state="translated">尽管上面的示例有效，但是请注意大多数模板过滤器都会返回字符串，因此使用过滤器进行数学比较通常不会如您所愿。&lt;a href=&quot;builtins#std:templatefilter-length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;是一个例外。</target>
        </trans-unit>
        <trans-unit id="e3c62b5451709c2e8bedbe9f8589ce64588d6ad1" translate="yes" xml:space="preserve">
          <source>While the above method can be used for AJAX POST requests, it has some inconveniences: you have to remember to pass the CSRF token in as POST data with every POST request. For this reason, there is an alternative method: on each XMLHttpRequest, set a custom &lt;code&gt;X-CSRFToken&lt;/code&gt; header (as specified by the &lt;a href=&quot;settings#std:setting-CSRF_HEADER_NAME&quot;&gt;&lt;code&gt;CSRF_HEADER_NAME&lt;/code&gt;&lt;/a&gt; setting) to the value of the CSRF token. This is often easier because many JavaScript frameworks provide hooks that allow headers to be set on every request.</source>
          <target state="translated">虽然上述方法可用于AJAX POST请求，但它有一些不便之处：您必须记住在每次POST请求中都将CSRF令牌作为POST数据传递。因此，存在另一种方法：在每个XMLHttpRequest上，将自定义 &lt;code&gt;X-CSRFToken&lt;/code&gt; 标头（由&lt;a href=&quot;settings#std:setting-CSRF_HEADER_NAME&quot;&gt; &lt;code&gt;CSRF_HEADER_NAME&lt;/code&gt; &lt;/a&gt;设置指定）设置为CSRF令牌的值。这通常更容易，因为许多JavaScript框架提供了允许在每个请求上设置标头的钩子。</target>
        </trans-unit>
        <trans-unit id="7370d5d0cabcd6474c51daa270f7dc01cced68b9" translate="yes" xml:space="preserve">
          <source>While the first occurrence of &amp;ldquo;Welcome to our page&amp;rdquo; uses the current language, the second will always be in English.</source>
          <target state="translated">第一次出现的&amp;ldquo;欢迎使用我们的页面&amp;rdquo;使用的是当前语言，而第二次则始终使用英语。</target>
        </trans-unit>
        <trans-unit id="30e6c1821b12210cd89c7642bff43e1a73b2e026" translate="yes" xml:space="preserve">
          <source>While the previous examples have formatted the current time into a string and returned the string, suppose you wanted to pass in a &lt;a href=&quot;../ref/models/fields#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt; from an object and have the template tag format that date-time:</source>
          <target state="translated">尽管前面的示例已将当前时间格式化为字符串并返回了该字符串，但假设您想从一个对象中传入&lt;a href=&quot;../ref/models/fields#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt;，并具有该日期时间的模板标记格式：</target>
        </trans-unit>
        <trans-unit id="05ab51bd02ea0de931c3e36adc9520bb723d1351" translate="yes" xml:space="preserve">
          <source>While the simplicity of this transaction model is appealing, it also makes it inefficient when traffic increases. Opening a transaction for every view has some overhead. The impact on performance depends on the query patterns of your application and on how well your database handles locking.</source>
          <target state="translated">虽然这种事务模型的简单性很吸引人,但当流量增加时,它也使其效率低下。为每个视图打开一个事务有一定的开销。对性能的影响取决于你的应用程序的查询模式和你的数据库处理锁的情况。</target>
        </trans-unit>
        <trans-unit id="2c3266f7028f5b1063d846b757ad363b19861a58" translate="yes" xml:space="preserve">
          <source>While this code is correct and simple, it may not be the most portable way to to write this kind of method. The &lt;a href=&quot;../urlresolvers#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; function is usually the best approach.</source>
          <target state="translated">尽管此代码是正确且简单的，但它可能不是编写这种方法的最可移植的方法。在&lt;a href=&quot;../urlresolvers#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt;函数通常是最好的方法。</target>
        </trans-unit>
        <trans-unit id="694447cd06f3437b217a9a8c85f1d58a88abc503" translate="yes" xml:space="preserve">
          <source>While this view (and its subclasses) are executing, &lt;code&gt;self.object_list&lt;/code&gt; will contain the list of objects that the view is operating upon, and &lt;code&gt;self.date_list&lt;/code&gt; will contain the list of dates for which data is available.</source>
          <target state="translated">在执行此视图（及其子类）时， &lt;code&gt;self.object_list&lt;/code&gt; 将包含该视图所操作的对象的列表，而 &lt;code&gt;self.date_list&lt;/code&gt; 将包含可用数据的日期的列表。</target>
        </trans-unit>
        <trans-unit id="c821a57d14f6748f67104e0b7d173bb6e5dbb3e4" translate="yes" xml:space="preserve">
          <source>While this view is executing, &lt;code&gt;self.object&lt;/code&gt; will contain the object that the view is operating upon.</source>
          <target state="translated">在执行此视图时， &lt;code&gt;self.object&lt;/code&gt; 将包含该视图正在操作的对象。</target>
        </trans-unit>
        <trans-unit id="6f82b07f3ff91f1ae7689b01d5d543449245dec4" translate="yes" xml:space="preserve">
          <source>While this view is executing, &lt;code&gt;self.object_list&lt;/code&gt; will contain the list of objects (usually, but not necessarily a queryset) that the view is operating upon.</source>
          <target state="translated">在执行此视图时， &lt;code&gt;self.object_list&lt;/code&gt; 将包含该视图所操作的对象列表（通常，但不一定是查询集）。</target>
        </trans-unit>
        <trans-unit id="05428d17b1e05ecb53a8f14c722ab33b2a818f35" translate="yes" xml:space="preserve">
          <source>While uncommon, it&amp;rsquo;s possible to configure several instances of the same backend with different options. In that case you should define a unique &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt; for each engine.</source>
          <target state="translated">虽然不常见，但可以使用不同的选项配置同一后端的多个实例。在这种情况下，您应该为每个引擎定义一个唯一的&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3a5c5c9c651f18f5ab008faafd5f310f7927fcd8" translate="yes" xml:space="preserve">
          <source>While we&amp;rsquo;re here, we can further pin down the &lt;code&gt;was_published_recently()&lt;/code&gt; method; in fact, it would be positively embarrassing if in fixing one bug we had introduced another.</source>
          <target state="translated">在这里时，我们可以进一步固定 &lt;code&gt;was_published_recently()&lt;/code&gt; 方法；实际上，如果在修复一个错误时引入了另一个错误，将令人非常尴尬。</target>
        </trans-unit>
        <trans-unit id="3eb2c3ac3d1de54b1c3dbd2d5fa902a3564f8d2c" translate="yes" xml:space="preserve">
          <source>While you&amp;rsquo;re editing &lt;code&gt;mysite/settings.py&lt;/code&gt;, set &lt;a href=&quot;../ref/settings#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt; to your time zone.</source>
          <target state="translated">在编辑 &lt;code&gt;mysite/settings.py&lt;/code&gt; 时，请将&lt;a href=&quot;../ref/settings#std:setting-TIME_ZONE&quot;&gt; &lt;code&gt;TIME_ZONE&lt;/code&gt; &lt;/a&gt;设置为您的时区。</target>
        </trans-unit>
        <trans-unit id="00d2e45ae1a8e9eaba910c44effa857eddc9d358" translate="yes" xml:space="preserve">
          <source>While your class is instantiated for each request dispatched to it, class attributes set through the &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt;&lt;code&gt;as_view()&lt;/code&gt;&lt;/a&gt; entry point are configured only once at the time your URLs are imported.</source>
          <target state="translated">在为分配给它的每个请求实例化您的类时，通过&lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt; &lt;code&gt;as_view()&lt;/code&gt; &lt;/a&gt;入口点设置的类属性在导入URL时仅配置一次。</target>
        </trans-unit>
        <trans-unit id="ada227210c7d938fb3c2b334d694885135785e5b" translate="yes" xml:space="preserve">
          <source>Whilst &lt;a href=&quot;../ref/models/fields#django.db.models.ImageField&quot;&gt;&lt;code&gt;ImageField&lt;/code&gt;&lt;/a&gt; non-image data attributes, such as &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, and &lt;code&gt;size&lt;/code&gt; are available on the instance, the underlying image data cannot be used without reopening the image. For example:</source>
          <target state="translated">尽管实例上可以使用&lt;a href=&quot;../ref/models/fields#django.db.models.ImageField&quot;&gt; &lt;code&gt;ImageField&lt;/code&gt; 的&lt;/a&gt;非图像数据属性（例如 &lt;code&gt;height&lt;/code&gt; ， &lt;code&gt;width&lt;/code&gt; 和 &lt;code&gt;size&lt;/code&gt; )，但是如果不重新打开图像，则无法使用基础图像数据。例如：</target>
        </trans-unit>
        <trans-unit id="746160809dab1115509392d54f296c0adca09bea" translate="yes" xml:space="preserve">
          <source>Whitelist of email domains to allow. By default, a regular expression (the &lt;code&gt;domain_regex&lt;/code&gt; attribute) is used to validate whatever appears after the @ sign. However, if that string appears in the whitelist, this validation is bypassed. If not provided, the default whitelist is &lt;code&gt;['localhost']&lt;/code&gt;. Other domains that don&amp;rsquo;t contain a dot won&amp;rsquo;t pass validation, so you&amp;rsquo;d need to whitelist them as necessary.</source>
          <target state="translated">允许的电子邮件域白名单。默认情况下，正则表达式（ &lt;code&gt;domain_regex&lt;/code&gt; 属性）用于验证@符号后出现的内容。但是，如果该字符串出现在白名单中，则会绕过此验证。如果未提供，则默认白名单为 &lt;code&gt;['localhost']&lt;/code&gt; 。其他不包含点的域不会通过验证，因此您需要根据需要将其列入白名单。</target>
        </trans-unit>
        <trans-unit id="0df76ce9ba11d64d88060d7cda0c1f4adbcc42c0" translate="yes" xml:space="preserve">
          <source>Whitespace before and after HTML tags is ignored.</source>
          <target state="translated">HTML标签前后的空白会被忽略。</target>
        </trans-unit>
        <trans-unit id="987614b21e58e2d1847c4937309a2b59685c7cdd" translate="yes" xml:space="preserve">
          <source>Whitespace in most cases is ignored, and attribute ordering is not significant. The passed-in arguments must be valid HTML.</source>
          <target state="translated">在大多数情况下,空格会被忽略,属性的顺序也不重要。传入的参数必须是有效的HTML。</target>
        </trans-unit>
        <trans-unit id="5b5a1b43fc84dbf9538cfd1c73320ddadddd8f59" translate="yes" xml:space="preserve">
          <source>Who&amp;rsquo;s this tutorial for?</source>
          <target state="translated">本教程适用于谁？</target>
        </trans-unit>
        <trans-unit id="77278a0d438ff1776dc9f307bbab5cf7fb851b89" translate="yes" xml:space="preserve">
          <source>Why Django uses autocommit</source>
          <target state="translated">为什么Django使用自动提交</target>
        </trans-unit>
        <trans-unit id="92671a9eb4b94fff980153bd39e593270f308a3e" translate="yes" xml:space="preserve">
          <source>Why are my emails sent from a different address?</source>
          <target state="translated">为什么我的邮件从不同的地址发送?</target>
        </trans-unit>
        <trans-unit id="e2279d02d063d060e3dd4a3869ba503958427610" translate="yes" xml:space="preserve">
          <source>Why do we use a helper function &lt;a href=&quot;../topics/http/shortcuts#django.shortcuts.get_object_or_404&quot;&gt;&lt;code&gt;get_object_or_404()&lt;/code&gt;&lt;/a&gt; instead of automatically catching the &lt;a href=&quot;../ref/exceptions#django.core.exceptions.ObjectDoesNotExist&quot;&gt;&lt;code&gt;ObjectDoesNotExist&lt;/code&gt;&lt;/a&gt; exceptions at a higher level, or having the model API raise &lt;a href=&quot;../topics/http/views#django.http.Http404&quot;&gt;&lt;code&gt;Http404&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../ref/exceptions#django.core.exceptions.ObjectDoesNotExist&quot;&gt;&lt;code&gt;ObjectDoesNotExist&lt;/code&gt;&lt;/a&gt;?</source>
          <target state="translated">为什么我们使用辅助函数&lt;a href=&quot;../topics/http/shortcuts#django.shortcuts.get_object_or_404&quot;&gt; &lt;code&gt;get_object_or_404()&lt;/code&gt; &lt;/a&gt;而不是在更高级别上自动捕获&lt;a href=&quot;../ref/exceptions#django.core.exceptions.ObjectDoesNotExist&quot;&gt; &lt;code&gt;ObjectDoesNotExist&lt;/code&gt; &lt;/a&gt;异常，或者使模型API引发&lt;a href=&quot;../topics/http/views#django.http.Http404&quot;&gt; &lt;code&gt;Http404&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;../ref/exceptions#django.core.exceptions.ObjectDoesNotExist&quot;&gt; &lt;code&gt;ObjectDoesNotExist&lt;/code&gt; &lt;/a&gt;？</target>
        </trans-unit>
        <trans-unit id="e6585783edc6acd9083d646e9f414a4eab6c32c9" translate="yes" xml:space="preserve">
          <source>Why is the hierarchy important? Well, because loggers can be set to &lt;em&gt;propagate&lt;/em&gt; their logging calls to their parents. In this way, you can define a single set of handlers at the root of a logger tree, and capture all logging calls in the subtree of loggers. A logger defined in the &lt;code&gt;project&lt;/code&gt; namespace will catch all logging messages issued on the &lt;code&gt;project.interesting&lt;/code&gt; and &lt;code&gt;project.interesting.stuff&lt;/code&gt; loggers.</source>
          <target state="translated">为什么层次结构很重要？好吧，因为可以将记录器设置为&lt;em&gt;将&lt;/em&gt;其记录调用&lt;em&gt;传播&lt;/em&gt;给父母。这样，您可以在记录器树的根目录中定义一组处理程序，并在记录器的子树中捕获所有记录调用。在 &lt;code&gt;project&lt;/code&gt; 名称空间中定义的记录器将捕获在 &lt;code&gt;project.interesting&lt;/code&gt; 和 &lt;code&gt;project.interesting.stuff&lt;/code&gt; 记录器上发布的所有记录消息。</target>
        </trans-unit>
        <trans-unit id="f7e026d000a104e9e2549b9cc1098f5938098b9c" translate="yes" xml:space="preserve">
          <source>Why might a user encounter a CSRF validation failure after logging in?</source>
          <target state="translated">为什么用户登录后会遇到CSRF验证失败?</target>
        </trans-unit>
        <trans-unit id="c0c1a6e50126b8372ccf9a9573cca00f3dc0aff5" translate="yes" xml:space="preserve">
          <source>Why no rollback hook?</source>
          <target state="translated">为什么没有回滚钩?</target>
        </trans-unit>
        <trans-unit id="8fd136539769e691d7a4d79b4f142255c832444c" translate="yes" xml:space="preserve">
          <source>Why the code-shuffle?</source>
          <target state="translated">为什么要洗码?</target>
        </trans-unit>
        <trans-unit id="e51a93adaa2b9c163db5abed9f94cc8d4a6d1aa3" translate="yes" xml:space="preserve">
          <source>Why use a text-based template instead of an XML-based one (like Zope&amp;rsquo;s TAL)? We wanted Django&amp;rsquo;s template language to be usable for more than just XML/HTML templates. At World Online, we use it for emails, JavaScript and CSV. You can use the template language for any text-based format.</source>
          <target state="translated">为什么要使用基于文本的模板而不是基于XML的模板（例如Zope的TAL）？我们希望Django的模板语言不仅可以用于XML / HTML模板，还可以用于更多的语言。在世界在线，我们将其用于电子邮件，JavaScript和CSV。您可以将模板语言用于任何基于文本的格式。</target>
        </trans-unit>
        <trans-unit id="efd84d5c5990234c1d5729fbff9071152510fbc6" translate="yes" xml:space="preserve">
          <source>Why use a text-based template instead of an XML-based one (like Zope&amp;rsquo;s TAL)? We wanted Django&amp;rsquo;s template language to be usable for more than just XML/HTML templates. You can use the template language for any text-based format such as emails, JavaScript and CSV.</source>
          <target state="translated">为什么要使用基于文本的模板而不是基于XML的模板（例如Zope的TAL）？我们希望Django的模板语言不仅可以用于XML / HTML模板，而且还可以用于更多模板。您可以将模板语言用于任何基于文本的格式，例如电子邮件，JavaScript和CSV。</target>
        </trans-unit>
        <trans-unit id="2e10f1bf6c1a24b0656ac3d9f129fd19722bbc1c" translate="yes" xml:space="preserve">
          <source>Why would you use sites? It&amp;rsquo;s best explained through examples.</source>
          <target state="translated">您为什么要使用网站？最好通过示例进行解释。</target>
        </trans-unit>
        <trans-unit id="d2135e1f5ed41c1051fc0eff486d60fbe86e25b0" translate="yes" xml:space="preserve">
          <source>Why would you want to turn it off? Because sometimes, template variables contain data that you &lt;em&gt;intend&lt;/em&gt; to be rendered as raw HTML, in which case you don&amp;rsquo;t want their contents to be escaped. For example, you might store a blob of HTML in your database and want to embed that directly into your template. Or, you might be using Django&amp;rsquo;s template system to produce text that is &lt;em&gt;not&lt;/em&gt; HTML &amp;ndash; like an email message, for instance.</source>
          <target state="translated">您为什么要关闭它？因为有时模板变量包含您&lt;em&gt;打算&lt;/em&gt;呈现为原始HTML的数据，在这种情况下，您不希望转义其内容。例如，您可能在数据库中存储了HTML斑点，并希望将其直接嵌入模板中。或者，您可能正在使用Django的模板系统来生成&lt;em&gt;非&lt;/em&gt; HTML的文本，例如电子邮件。</target>
        </trans-unit>
        <trans-unit id="fba9323c0b374f7b48987bd09d658cc86e9143be" translate="yes" xml:space="preserve">
          <source>Why you need to create tests</source>
          <target state="translated">为什么你需要创建测试</target>
        </trans-unit>
        <trans-unit id="e1999eb963009172d97538240f024e9f140ce7b6" translate="yes" xml:space="preserve">
          <source>Widget attributes</source>
          <target state="translated">小工具属性</target>
        </trans-unit>
        <trans-unit id="99febd1d326a537ae88b32dd6c8f7845cf453118" translate="yes" xml:space="preserve">
          <source>Widget classes</source>
          <target state="translated">小工具类</target>
        </trans-unit>
        <trans-unit id="8b53682482102f30c4843fa0b855c58d40d29954" translate="yes" xml:space="preserve">
          <source>Widget templates receive a context from &lt;a href=&quot;widgets#django.forms.Widget.get_context&quot;&gt;&lt;code&gt;Widget.get_context()&lt;/code&gt;&lt;/a&gt;. By default, widgets receive a single value in the context, &lt;code&gt;widget&lt;/code&gt;. This is a dictionary that contains values like:</source>
          <target state="translated">&lt;a href=&quot;widgets#django.forms.Widget.get_context&quot;&gt; &lt;code&gt;Widget.get_context()&lt;/code&gt; &lt;/a&gt;小部件模板从Widget.get_context（）接收上下文。默认情况下，小部件在上下文中接收单个值 &lt;code&gt;widget&lt;/code&gt; 。这是一个字典，包含如下值：</target>
        </trans-unit>
        <trans-unit id="c748f934de54f111e6c4805824bae58d5d42de64" translate="yes" xml:space="preserve">
          <source>Widget used by all of the range fields. Based on &lt;a href=&quot;../../forms/widgets#django.forms.MultiWidget&quot;&gt;&lt;code&gt;MultiWidget&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所有范围字段使用的小部件。基于&lt;a href=&quot;../../forms/widgets#django.forms.MultiWidget&quot;&gt; &lt;code&gt;MultiWidget&lt;/code&gt; 的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bf8a6678a1e36e3d2c45861b80308b477e3345ac" translate="yes" xml:space="preserve">
          <source>Widgets</source>
          <target state="translated">Widgets</target>
        </trans-unit>
        <trans-unit id="0f70dd2e107f87991ffa75f0992c4dd33aa8d2c5" translate="yes" xml:space="preserve">
          <source>Widgets aren&amp;rsquo;t the only objects that can have &lt;code&gt;media&lt;/code&gt; definitions &amp;ndash; forms can also define &lt;code&gt;media&lt;/code&gt;. The rules for &lt;code&gt;media&lt;/code&gt; definitions on forms are the same as the rules for widgets: declarations can be static or dynamic; path and inheritance rules for those declarations are exactly the same.</source>
          <target state="translated">窗口小部件不是唯一具有 &lt;code&gt;media&lt;/code&gt; 定义的对象-表单也可以定义 &lt;code&gt;media&lt;/code&gt; 。对于规则的 &lt;code&gt;media&lt;/code&gt; 上的形式定义是一样的小部件的规则：声明可以是静态或动态的; 这些声明的路径和继承规则完全相同。</target>
        </trans-unit>
        <trans-unit id="0960dfecea279de44fadfcc27358e722f786094a" translate="yes" xml:space="preserve">
          <source>Widgets can specify custom template names.</source>
          <target state="translated">小工具可以指定自定义模板名称。</target>
        </trans-unit>
        <trans-unit id="19023cf1400f436f1bea98c5fc298c3154996c22" translate="yes" xml:space="preserve">
          <source>Widgets handling input of text</source>
          <target state="translated">处理文本输入的小工具</target>
        </trans-unit>
        <trans-unit id="b52f266518e398c7548600708df84144f8f2214d" translate="yes" xml:space="preserve">
          <source>Widgets inheriting from the &lt;a href=&quot;#django.forms.Select&quot;&gt;&lt;code&gt;Select&lt;/code&gt;&lt;/a&gt; widget deal with choices. They present the user with a list of options to choose from. The different widgets present this choice differently; the &lt;a href=&quot;#django.forms.Select&quot;&gt;&lt;code&gt;Select&lt;/code&gt;&lt;/a&gt; widget itself uses a &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; HTML list representation, while &lt;a href=&quot;#django.forms.RadioSelect&quot;&gt;&lt;code&gt;RadioSelect&lt;/code&gt;&lt;/a&gt; uses radio buttons.</source>
          <target state="translated">从&amp;ldquo; &lt;a href=&quot;#django.forms.Select&quot;&gt; &lt;code&gt;Select&lt;/code&gt; &lt;/a&gt;小部件继承的小部件处理选择。他们为用户提供了可供选择的选项列表。不同的小部件以不同的方式呈现此选择。&amp;ldquo; &lt;a href=&quot;#django.forms.Select&quot;&gt; &lt;code&gt;Select&lt;/code&gt; &lt;/a&gt;小部件本身使用 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; HTML列表表示形式，而&lt;a href=&quot;#django.forms.RadioSelect&quot;&gt; &lt;code&gt;RadioSelect&lt;/code&gt; &lt;/a&gt;使用单选按钮。</target>
        </trans-unit>
        <trans-unit id="13d672b823f4f412908b6f575527fa4d68135a2b" translate="yes" xml:space="preserve">
          <source>Widgets inheriting from the &lt;code&gt;Select&lt;/code&gt; widget</source>
          <target state="translated">从&amp;ldquo; &lt;code&gt;Select&lt;/code&gt; 小部件继承的小部件</target>
        </trans-unit>
        <trans-unit id="af8a0bf37f0e5af3e1fc739ac4fc803357e390cc" translate="yes" xml:space="preserve">
          <source>Widgets of required form fields have the &lt;code&gt;required&lt;/code&gt; HTML attribute. Set the &lt;a href=&quot;api#django.forms.Form.use_required_attribute&quot;&gt;&lt;code&gt;Form.use_required_attribute&lt;/code&gt;&lt;/a&gt; attribute to &lt;code&gt;False&lt;/code&gt; to disable it. The &lt;code&gt;required&lt;/code&gt; attribute isn&amp;rsquo;t included on forms of formsets because the browser validation may not be correct when adding and deleting formsets.</source>
          <target state="translated">必需的表单字段的小部件具有 &lt;code&gt;required&lt;/code&gt; HTML属性。将&lt;a href=&quot;api#django.forms.Form.use_required_attribute&quot;&gt; &lt;code&gt;Form.use_required_attribute&lt;/code&gt; &lt;/a&gt;属性设置为 &lt;code&gt;False&lt;/code&gt; 以禁用它。的 &lt;code&gt;required&lt;/code&gt; 属性不包含在表单集的形式，因为添加和删除表单集时，浏览器验证可能不正确。</target>
        </trans-unit>
        <trans-unit id="91f2175f00ef0547c92bb82668d2b8b9ac5cebc5" translate="yes" xml:space="preserve">
          <source>Widgets should not be confused with the &lt;a href=&quot;fields&quot;&gt;form fields&lt;/a&gt;. Form fields deal with the logic of input validation and are used directly in templates. Widgets deal with rendering of HTML form input elements on the web page and extraction of raw submitted data. However, widgets do need to be &lt;a href=&quot;#widget-to-field&quot;&gt;assigned&lt;/a&gt; to form fields.</source>
          <target state="translated">小部件不应与&lt;a href=&quot;fields&quot;&gt;表单字段&lt;/a&gt;混淆。表单字段处理输入验证的逻辑，并直接在模板中使用。小部件处理HTML表单输入元素在网页上的呈现以及原始提交数据的提取。但是，确实需要将小部件&lt;a href=&quot;#widget-to-field&quot;&gt;分配&lt;/a&gt;给表单字段。</target>
        </trans-unit>
        <trans-unit id="76af709f4a34c45a3c203ff55432ddd682a6bdd3" translate="yes" xml:space="preserve">
          <source>Widgets that render multiple choices have an &lt;code&gt;option_template_name&lt;/code&gt; attribute that specifies the template used to render each choice. For example, for the &lt;a href=&quot;#django.forms.Select&quot;&gt;&lt;code&gt;Select&lt;/code&gt;&lt;/a&gt; widget, &lt;code&gt;select_option.html&lt;/code&gt; renders the &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; for a &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">呈现多个选择的小部件具有 &lt;code&gt;option_template_name&lt;/code&gt; 属性，该属性指定用于呈现每个选择的模板。例如，对于&lt;a href=&quot;#django.forms.Select&quot;&gt; &lt;code&gt;Select&lt;/code&gt; &lt;/a&gt;小部件， &lt;code&gt;select_option.html&lt;/code&gt; 为 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 呈现 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; &amp;gt;。</target>
        </trans-unit>
        <trans-unit id="f1f9849d85404cf6cd6ea0d0e962f81f2553eff6" translate="yes" xml:space="preserve">
          <source>Widgets which offer a &lt;a href=&quot;#django.forms.Select.choices&quot;&gt;&lt;code&gt;choices&lt;/code&gt;&lt;/a&gt; attribute can however be used with fields which are not based on choice &amp;ndash; such as a &lt;a href=&quot;fields#django.forms.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; &amp;ndash; but it is recommended to use a &lt;a href=&quot;fields#django.forms.ChoiceField&quot;&gt;&lt;code&gt;ChoiceField&lt;/code&gt;&lt;/a&gt;-based field when the choices are inherent to the model and not just the representational widget.</source>
          <target state="translated">但是，提供&lt;a href=&quot;#django.forms.Select.choices&quot;&gt; &lt;code&gt;choices&lt;/code&gt; &lt;/a&gt;属性的窗口小部件可以用于不基于选择的字段（例如&lt;a href=&quot;fields#django.forms.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; )&lt;/a&gt;，但是，当选择是模型固有的，而不仅仅是代表性窗口小部件时，建议使用基于&lt;a href=&quot;fields#django.forms.ChoiceField&quot;&gt; &lt;code&gt;ChoiceField&lt;/code&gt; &lt;/a&gt;的字段。</target>
        </trans-unit>
        <trans-unit id="8b0831c2aecc7cab05b0760968fa0514c19c80f8" translate="yes" xml:space="preserve">
          <source>Width of the image in pixels.</source>
          <target state="translated">图像的宽度,单位为像素。</target>
        </trans-unit>
        <trans-unit id="1735ffac02eeccc67f3462cd5ef956719ce3ed1f" translate="yes" xml:space="preserve">
          <source>Width of the map, in pixels. Defaults to 600.</source>
          <target state="translated">地图的宽度,单位为像素。默认值为600。</target>
        </trans-unit>
        <trans-unit id="2be1d5c881ce8f3d9ed70e3fcf6b3480cbd72654" translate="yes" xml:space="preserve">
          <source>William Kyngesburye provides a number of &lt;a href=&quot;https://www.kyngchaos.com/software/frameworks&quot;&gt;geospatial library binary packages&lt;/a&gt; that help to get GeoDjango installed on macOS without compiling them from source. However, &lt;a href=&quot;https://developer.apple.com/xcode/&quot;&gt;Xcode&lt;/a&gt; is still necessary for compiling the Python database adapters &lt;a href=&quot;#psycopg2-kyngchaos&quot;&gt;psycopg2&lt;/a&gt; (for PostGIS).</source>
          <target state="translated">William Kyngesburye提供了许多&lt;a href=&quot;https://www.kyngchaos.com/software/frameworks&quot;&gt;地理空间库二进制软件包&lt;/a&gt;，这些软件包可帮助您在MacOS上安装GeoDjango，而无需从源代码进行编译。但是，仍然需要&lt;a href=&quot;https://developer.apple.com/xcode/&quot;&gt;Xcode&lt;/a&gt;来编译Python数据库适配器&lt;a href=&quot;#psycopg2-kyngchaos&quot;&gt;psycopg2&lt;/a&gt;（用于PostGIS）。</target>
        </trans-unit>
        <trans-unit id="cec65d78532248828b5443e4752a3df7fc4931aa" translate="yes" xml:space="preserve">
          <source>Window functions</source>
          <target state="translated">窗口功能</target>
        </trans-unit>
        <trans-unit id="49db405d8949ad08728f96c7887d0f3179391ffc" translate="yes" xml:space="preserve">
          <source>Window functions provide a way to apply functions on partitions. Unlike a normal aggregation function which computes a final result for each set defined by the group by, window functions operate on &lt;a href=&quot;#window-frames&quot;&gt;frames&lt;/a&gt; and partitions, and compute the result for each row.</source>
          <target state="translated">窗口函数提供了一种在分区上应用函数的方法。与正常的聚合函数不同，该函数为group by定义的每个集合计算最终结果，而窗口函数则对&lt;a href=&quot;#window-frames&quot;&gt;帧&lt;/a&gt;和分区进行运算，并为每一行计算结果。</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="21f3916bb144fa450bc17de4418890fb26b717e5" translate="yes" xml:space="preserve">
          <source>Wire these new views into the &lt;code&gt;polls.urls&lt;/code&gt; module by adding the following &lt;a href=&quot;../ref/urls#django.urls.path&quot;&gt;&lt;code&gt;path()&lt;/code&gt;&lt;/a&gt; calls:</source>
          <target state="translated">通过添加以下&lt;a href=&quot;../ref/urls#django.urls.path&quot;&gt; &lt;code&gt;path()&lt;/code&gt; &lt;/a&gt;调用，将这些新视图连接到 &lt;code&gt;polls.urls&lt;/code&gt; 模块中：</target>
        </trans-unit>
        <trans-unit id="bf6d547b4d9dc7045aafca1ca26b12f0214c830b" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt;&lt;code&gt;APP_DIRS&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;True&lt;/code&gt;, the template loader will look in the app&amp;rsquo;s templates directory and find the templates.</source>
          <target state="translated">将&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt; &lt;code&gt;APP_DIRS&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; ，模板加载器将在应用的模板目录中查找并找到模板。</target>
        </trans-unit>
        <trans-unit id="d15b3cc9e3d8bb4b722ed0d98bb95927c9a30d81" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;prefix_default_language=False&lt;/code&gt; and &lt;code&gt;LANGUAGE_CODE='en'&lt;/code&gt;, the URLs will be:</source>
          <target state="translated">使用 &lt;code&gt;prefix_default_language=False&lt;/code&gt; 和 &lt;code&gt;LANGUAGE_CODE='en'&lt;/code&gt; ，URL为：</target>
        </trans-unit>
        <trans-unit id="2f667e0f3a0b0b5f764d9d3eec354348cc4bd078" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;substring&lt;/code&gt; instead passed as a positional argument, it&amp;rsquo;ll be passed as a parameter in the database query.</source>
          <target state="translated">通过将 &lt;code&gt;substring&lt;/code&gt; 作为位置参数传递，它将在数据库查询中作为参数传递。</target>
        </trans-unit>
        <trans-unit id="169ef01ed496f2c3486a3afd6b1fbc8c6f1fbfe6" translate="yes" xml:space="preserve">
          <source>With a context of &lt;code&gt;{'django': 'the web framework for perfectionists with
deadlines'}&lt;/code&gt;, this template renders to:</source>
          <target state="translated">在 &lt;code&gt;{'django': 'the web framework for perfectionists with deadlines'}&lt;/code&gt; 的上下文中，此模板呈现为：</target>
        </trans-unit>
        <trans-unit id="2ce2eb807a2c38791b0c70f253e31aa065e6af6f" translate="yes" xml:space="preserve">
          <source>With a context of &lt;code&gt;{'first_name': 'John', 'last_name': 'Doe'}&lt;/code&gt;, this template renders to:</source>
          <target state="translated">使用 &lt;code&gt;{'first_name': 'John', 'last_name': 'Doe'}&lt;/code&gt; 的上下文，此模板呈现为：</target>
        </trans-unit>
        <trans-unit id="b83e9b6bb343b5b95268c96fa70fc484970977f7" translate="yes" xml:space="preserve">
          <source>With all of this, Django gives you an automatically-generated database-access API; see &lt;a href=&quot;queries&quot;&gt;Making queries&lt;/a&gt;.</source>
          <target state="translated">有了这些，Django为您提供了一个自动生成的数据库访问API。请参阅进行&lt;a href=&quot;queries&quot;&gt;查询&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1e0d80c47930c8edfef21a681fbbe240821e076d" translate="yes" xml:space="preserve">
          <source>With any geometry object, the &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.coords&quot;&gt;&lt;code&gt;GEOSGeometry.coords&lt;/code&gt;&lt;/a&gt; property may be used to get the geometry coordinates as a Python tuple:</source>
          <target state="translated">对于任何几何对象，可以使用&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.coords&quot;&gt; &lt;code&gt;GEOSGeometry.coords&lt;/code&gt; &lt;/a&gt;属性以Python元组的形式获取几何坐标：</target>
        </trans-unit>
        <trans-unit id="738fe89e67c8043fa2660ee5b692c8105242a2cd" translate="yes" xml:space="preserve">
          <source>With careful setting of &lt;a href=&quot;../../ref/models/options#django.db.models.Options.db_table&quot;&gt;&lt;code&gt;Meta.db_table&lt;/code&gt;&lt;/a&gt; you could create an unmanaged model that shadows an existing model and adds Python methods to it. However, that would be very repetitive and fragile as you need to keep both copies synchronized if you make any changes.</source>
          <target state="translated">通过仔细设置&lt;a href=&quot;../../ref/models/options#django.db.models.Options.db_table&quot;&gt; &lt;code&gt;Meta.db_table&lt;/code&gt; ,&lt;/a&gt;您可以创建一个不受管理的模型，该模型可以遮盖现有模型并向其中添加Python方法。但是，这将是非常重复且脆弱的，因为如果进行任何更改，则需要使两个副本保持同步。</target>
        </trans-unit>
        <trans-unit id="62904bca0049a3c884ede45e1c518c521b5a0ffc" translate="yes" xml:space="preserve">
          <source>With everything that follows, remember to profile after every change to ensure that the change is a benefit, and a big enough benefit given the decrease in readability of your code. &lt;strong&gt;All&lt;/strong&gt; of the suggestions below come with the caveat that in your circumstances the general principle might not apply, or might even be reversed.</source>
          <target state="translated">在接下来的所有工作中，请记住在每次更改后进行概要分析，以确保更改是有好处的，并且在代码可读性下降的情况下也有足够大的好处。&lt;strong&gt;以下所有&lt;/strong&gt;建议都带有警告，在您的情况下，一般性原则可能不适用，甚至可能被推翻。</target>
        </trans-unit>
        <trans-unit id="9b77daa194057f5e4662c2bcf38b5f5f280a8773" translate="yes" xml:space="preserve">
          <source>With luck, your Django project should now work correctly again. Run the server again to confirm this.</source>
          <target state="translated">运气好的话,你的Django项目现在应该又能正常工作了。再次运行服务器以确认这一点。</target>
        </trans-unit>
        <trans-unit id="9e442668fd797633e803c097aa305bee3edf5b87" translate="yes" xml:space="preserve">
          <source>With server-side cursors</source>
          <target state="translated">使用服务器端光标</target>
        </trans-unit>
        <trans-unit id="fafa8432aaa55fb4e9263d82c8ef29deb64d6fc9" translate="yes" xml:space="preserve">
          <source>With server-side cursors, the &lt;code&gt;chunk_size&lt;/code&gt; parameter specifies the number of results to cache at the database driver level. Fetching bigger chunks diminishes the number of round trips between the database driver and the database, at the expense of memory.</source>
          <target state="translated">对于服务器端游标， &lt;code&gt;chunk_size&lt;/code&gt; 参数指定要在数据库驱动程序级别缓存的结果数。获取较大的块会减少数据库驱动程序和数据库之间的往返次数，但会占用内存。</target>
        </trans-unit>
        <trans-unit id="ad1f5bc5a6ec34b141f574c5ec00a52fa0d7135a" translate="yes" xml:space="preserve">
          <source>With that &lt;code&gt;TabularInline&lt;/code&gt; (instead of &lt;code&gt;StackedInline&lt;/code&gt;), the related objects are displayed in a more compact, table-based format:</source>
          <target state="translated">使用该 &lt;code&gt;TabularInline&lt;/code&gt; （而不是 &lt;code&gt;StackedInline&lt;/code&gt; ），相关对象以更紧凑的基于表的格式显示：</target>
        </trans-unit>
        <trans-unit id="e56cb910598479eb4fb42fa76907c043d04a5411" translate="yes" xml:space="preserve">
          <source>With that ready, we can ask the client to do some work for us:</source>
          <target state="translated">准备好了这些,我们就可以请客户为我们做一些工作了。</target>
        </trans-unit>
        <trans-unit id="0f5e24cb3a7a96d792b15a4007309792477697eb" translate="yes" xml:space="preserve">
          <source>With that, you&amp;rsquo;ve got a free, and rich, &lt;a href=&quot;../topics/db/queries&quot;&gt;Python API&lt;/a&gt; to access your data. The API is created on the fly, no code generation necessary:</source>
          <target state="translated">这样，您就拥有了免费的，丰富的&lt;a href=&quot;../topics/db/queries&quot;&gt;Python API&lt;/a&gt;来访问数据。该API是动态创建的，无需代码生成：</target>
        </trans-unit>
        <trans-unit id="07b783fc8afc75fc87e46cd9a91c869a8286a4f3" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;admin#django.contrib.gis.admin.OSMGeoAdmin&quot;&gt;&lt;code&gt;OSMGeoAdmin&lt;/code&gt;&lt;/a&gt;, GeoDjango uses a &lt;a href=&quot;https://www.openstreetmap.org/&quot;&gt;Open Street Map&lt;/a&gt; layer in the admin. This provides more context (including street and thoroughfare details) than available with the &lt;a href=&quot;admin#django.contrib.gis.admin.GeoModelAdmin&quot;&gt;&lt;code&gt;GeoModelAdmin&lt;/code&gt;&lt;/a&gt; (which uses the &lt;a href=&quot;https://earth-info.nga.mil/publications/vmap0.html&quot;&gt;Vector Map Level 0&lt;/a&gt; WMS dataset hosted at &lt;a href=&quot;https://www.osgeo.org/&quot;&gt;OSGeo&lt;/a&gt;).</source>
          <target state="translated">通过&lt;a href=&quot;admin#django.contrib.gis.admin.OSMGeoAdmin&quot;&gt; &lt;code&gt;OSMGeoAdmin&lt;/code&gt; &lt;/a&gt;，GeoDjango 在管理员中使用了&lt;a href=&quot;https://www.openstreetmap.org/&quot;&gt;开放街道地图&lt;/a&gt;图层。与&lt;a href=&quot;admin#django.contrib.gis.admin.GeoModelAdmin&quot;&gt; &lt;code&gt;GeoModelAdmin&lt;/code&gt; &lt;/a&gt;（使用&lt;a href=&quot;https://www.osgeo.org/&quot;&gt;OSGeo&lt;/a&gt;托管的&lt;a href=&quot;https://earth-info.nga.mil/publications/vmap0.html&quot;&gt;Vector Map Level 0&lt;/a&gt; WMS数据集）相比，它提供的上下文（包括街道和通行详细信息）更多。</target>
        </trans-unit>
        <trans-unit id="cc51a5dcab30a442714ab67541d3b8b8547abe14" translate="yes" xml:space="preserve">
          <source>With the default manager class, it is the same as:</source>
          <target state="translated">用默认的经理类,它和。</target>
        </trans-unit>
        <trans-unit id="ff149737533c0bba9681cff2f90d2e468bcad178" translate="yes" xml:space="preserve">
          <source>With the exception of &lt;code&gt;CONTENT_LENGTH&lt;/code&gt; and &lt;code&gt;CONTENT_TYPE&lt;/code&gt;, as given above, any HTTP headers in the request are converted to &lt;code&gt;META&lt;/code&gt; keys by converting all characters to uppercase, replacing any hyphens with underscores and adding an &lt;code&gt;HTTP_&lt;/code&gt; prefix to the name. So, for example, a header called &lt;code&gt;X-Bender&lt;/code&gt; would be mapped to the &lt;code&gt;META&lt;/code&gt; key &lt;code&gt;HTTP_X_BENDER&lt;/code&gt;.</source>
          <target state="translated">除了上面给出的 &lt;code&gt;CONTENT_LENGTH&lt;/code&gt; 和 &lt;code&gt;CONTENT_TYPE&lt;/code&gt; 之外，通过将所有字符都转换为大写字母，用下划线替换所有连字符，并在名称中添加 &lt;code&gt;HTTP_&lt;/code&gt; 前缀，将请求中的所有HTTP标头转换为 &lt;code&gt;META&lt;/code&gt; 密钥。因此，例如，称为 &lt;code&gt;X-Bender&lt;/code&gt; 的标头将映射到 &lt;code&gt;META&lt;/code&gt; 密钥 &lt;code&gt;HTTP_X_BENDER&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6eafb38acfb691fbb0caaf415d8ea4dd48fa6f4b" translate="yes" xml:space="preserve">
          <source>With the following example:</source>
          <target state="translated">举例如下:</target>
        </trans-unit>
        <trans-unit id="338dabc240ad9424e18ac84ff8599b1b2c110d62" translate="yes" xml:space="preserve">
          <source>With these caveats in mind, you should be aware of:</source>
          <target state="translated">有了这些注意事项,你就应该知道。</target>
        </trans-unit>
        <trans-unit id="0ef35d5472fe507b145151e1f823f4ed965c0fab" translate="yes" xml:space="preserve">
          <source>With these models, the &lt;code&gt;ModelForm&lt;/code&gt; subclasses above would be roughly equivalent to this (the only difference being the &lt;code&gt;save()&lt;/code&gt; method, which we&amp;rsquo;ll discuss in a moment.):</source>
          <target state="translated">使用这些模型，上面的 &lt;code&gt;ModelForm&lt;/code&gt; 子类将与此大致等效（唯一的区别是 &lt;code&gt;save()&lt;/code&gt; 方法，我们将在稍后讨论）。</target>
        </trans-unit>
        <trans-unit id="30f874a8062ab7ae52b8048f4e9f7cd797555000" translate="yes" xml:space="preserve">
          <source>With these settings in place, running the command &lt;code&gt;manage.py migrate&lt;/code&gt; creates the necessary database tables for auth related models and permissions for any models defined in your installed apps.</source>
          <target state="translated">有了这些设置后，运行命令 &lt;code&gt;manage.py migrate&lt;/code&gt; 将为auth相关模型创建必要的数据库表，并为已安装的应用程序中定义的任何模型创建权限。</target>
        </trans-unit>
        <trans-unit id="425cae5f26a3fe623cc4b325c993d62dd42a4c55" translate="yes" xml:space="preserve">
          <source>With this example, you&amp;rsquo;d use &lt;code&gt;OpinionPoll.objects.with_counts()&lt;/code&gt; to return that list of &lt;code&gt;OpinionPoll&lt;/code&gt; objects with &lt;code&gt;num_responses&lt;/code&gt; attributes.</source>
          <target state="translated">在此示例中，您将使用 &lt;code&gt;OpinionPoll.objects.with_counts()&lt;/code&gt; 返回具有 &lt;code&gt;num_responses&lt;/code&gt; 属性的 &lt;code&gt;OpinionPoll&lt;/code&gt; 对象列表。</target>
        </trans-unit>
        <trans-unit id="86c312570ee6d0c22a5eba5243d3cea820e264f8" translate="yes" xml:space="preserve">
          <source>With this input for &lt;code&gt;cities&lt;/code&gt;, the example &lt;code&gt;{% regroup %}&lt;/code&gt; template code above would result in the following output:</source>
          <target state="translated">使用针对 &lt;code&gt;cities&lt;/code&gt; 输入，上面的示例 &lt;code&gt;{% regroup %}&lt;/code&gt; 模板代码将产生以下输出：</target>
        </trans-unit>
        <trans-unit id="d10ff10740718d4baa881425d36f9a787d2d721d" translate="yes" xml:space="preserve">
          <source>With this model, &lt;code&gt;Photo.objects.all()&lt;/code&gt; will return all &lt;code&gt;Photo&lt;/code&gt; objects in the database, but &lt;code&gt;Photo.on_site.all()&lt;/code&gt; will return only the &lt;code&gt;Photo&lt;/code&gt; objects associated with the current site, according to the &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt;&lt;code&gt;SITE_ID&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">使用此模型， &lt;code&gt;Photo.objects.all()&lt;/code&gt; 将返回数据库中的所有 &lt;code&gt;Photo&lt;/code&gt; 对象，但是根据&lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt; &lt;code&gt;SITE_ID&lt;/code&gt; &lt;/a&gt;设置， &lt;code&gt;Photo.on_site.all()&lt;/code&gt; 将仅返回与当前站点关联的 &lt;code&gt;Photo&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="c43597e4e70ecc7341fedb053c4f56d9baeb0390" translate="yes" xml:space="preserve">
          <source>With this name value, the template would be rendered as:</source>
          <target state="translated">有了这个名称值,模板就会呈现为:。</target>
        </trans-unit>
        <trans-unit id="7ee0c93f012f2660125c1340af18dd7acdc600c4" translate="yes" xml:space="preserve">
          <source>With this sample model, &lt;code&gt;Book.objects.all()&lt;/code&gt; will return all books in the database, but &lt;code&gt;Book.dahl_objects.all()&lt;/code&gt; will only return the ones written by Roald Dahl.</source>
          <target state="translated">使用此示例模型， &lt;code&gt;Book.objects.all()&lt;/code&gt; 将返回数据库中的所有书籍，而 &lt;code&gt;Book.dahl_objects.all()&lt;/code&gt; 将仅返回Roald Dahl编写的书籍。</target>
        </trans-unit>
        <trans-unit id="a569281bb74470239db3b27f6202c5f7adec0355" translate="yes" xml:space="preserve">
          <source>With this setup installed, and all databases migrated as per &lt;a href=&quot;#synchronizing-multiple-databases&quot;&gt;Synchronizing your databases&lt;/a&gt;, lets run some Django code:</source>
          <target state="translated">安装此设置后，按照&lt;a href=&quot;#synchronizing-multiple-databases&quot;&gt;同步&lt;/a&gt;数据库迁移所有数据库，让我们运行一些Django代码：</target>
        </trans-unit>
        <trans-unit id="2bb1df83373df7666462ed7dac48c9e73071e381" translate="yes" xml:space="preserve">
          <source>With this setup installed, lets run some Django code:</source>
          <target state="translated">安装好这个设置后,让我们运行一些Django代码。</target>
        </trans-unit>
        <trans-unit id="2fde5a9daf66e9ab154496d2d95b77550ecf55b5" translate="yes" xml:space="preserve">
          <source>With this setup, &lt;code&gt;RemoteUserMiddleware&lt;/code&gt; will detect the username in &lt;code&gt;request.META['REMOTE_USER']&lt;/code&gt; and will authenticate and auto-login that user using the &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.backends.RemoteUserBackend&quot;&gt;&lt;code&gt;RemoteUserBackend&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过此设置， &lt;code&gt;RemoteUserMiddleware&lt;/code&gt; 将检测 &lt;code&gt;request.META['REMOTE_USER']&lt;/code&gt; 的用户名，并使用&lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.backends.RemoteUserBackend&quot;&gt; &lt;code&gt;RemoteUserBackend&lt;/code&gt; &lt;/a&gt;验证并自动登录该用户。</target>
        </trans-unit>
        <trans-unit id="d0ea8e483994674d63b5c518f25cd64bebf68cdc" translate="yes" xml:space="preserve">
          <source>With widgets, it is possible to add assets (&lt;code&gt;css&lt;/code&gt; and &lt;code&gt;javascript&lt;/code&gt;) and more deeply customize their appearance and behavior.</source>
          <target state="translated">使用小部件，可以添加资产（ &lt;code&gt;css&lt;/code&gt; 和 &lt;code&gt;javascript&lt;/code&gt; ）并更深入地自定义其外观和行为。</target>
        </trans-unit>
        <trans-unit id="ba965b2e73a9857a93f7677b3a127cd582e8fe31" translate="yes" xml:space="preserve">
          <source>With your template loaders configured, you can extend a template using the &lt;a href=&quot;../ref/templates/builtins#std:templatetag-extends&quot;&gt;&lt;code&gt;{% extends %}&lt;/code&gt;&lt;/a&gt; template tag whilst at the same time overriding it. This can allow you to make small customizations without needing to reimplement the entire template.</source>
          <target state="translated">配置了模板加载器后，您可以使用&lt;a href=&quot;../ref/templates/builtins#std:templatetag-extends&quot;&gt; &lt;code&gt;{% extends %}&lt;/code&gt; &lt;/a&gt;模板标记来扩展模板，同时覆盖它。这可以让您进行小的自定义，而无需重新实现整个模板。</target>
        </trans-unit>
        <trans-unit id="86c4a61644ab2edf50d4da920e388176369b7eb4" translate="yes" xml:space="preserve">
          <source>Within such a migration, all operations are run without a transaction. It&amp;rsquo;s possible to execute parts of the migration inside a transaction using &lt;a href=&quot;../topics/db/transactions#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; or by passing &lt;code&gt;atomic=True&lt;/code&gt; to &lt;code&gt;RunPython&lt;/code&gt;.</source>
          <target state="translated">在这种迁移中，所有操作都无需事务即可运行。可以使用&lt;a href=&quot;../topics/db/transactions#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt;或通过将 &lt;code&gt;atomic=True&lt;/code&gt; 传递给 &lt;code&gt;RunPython&lt;/code&gt; 来执行事务内部的部分迁移。</target>
        </trans-unit>
        <trans-unit id="6dccd5509c0f1f271c08437befb3bf1c06db50e6" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;static&lt;/code&gt; directory you have just created, create another directory called &lt;code&gt;polls&lt;/code&gt; and within that create a file called &lt;code&gt;style.css&lt;/code&gt;. In other words, your stylesheet should be at &lt;code&gt;polls/static/polls/style.css&lt;/code&gt;. Because of how the &lt;code&gt;AppDirectoriesFinder&lt;/code&gt; staticfile finder works, you can refer to this static file in Django as &lt;code&gt;polls/style.css&lt;/code&gt;, similar to how you reference the path for templates.</source>
          <target state="translated">在您刚创建的 &lt;code&gt;static&lt;/code&gt; 目录中，创建另一个名为 &lt;code&gt;polls&lt;/code&gt; 的目录，并在其中创建一个名为 &lt;code&gt;style.css&lt;/code&gt; 的文件。换句话说，您的样式表应位于 &lt;code&gt;polls/static/polls/style.css&lt;/code&gt; 。由于 &lt;code&gt;AppDirectoriesFinder&lt;/code&gt; 静态文件查找器的工作方式，您可以在Django中将此静态文件称为 &lt;code&gt;polls/style.css&lt;/code&gt; ，类似于您引用模板路径的方式。</target>
        </trans-unit>
        <trans-unit id="d90214a20a57d631f322ecba2947da5c36983def" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;templates&lt;/code&gt; directory you have just created, create another directory called &lt;code&gt;polls&lt;/code&gt;, and within that create a file called &lt;code&gt;index.html&lt;/code&gt;. In other words, your template should be at &lt;code&gt;polls/templates/polls/index.html&lt;/code&gt;. Because of how the &lt;code&gt;app_directories&lt;/code&gt; template loader works as described above, you can refer to this template within Django as &lt;code&gt;polls/index.html&lt;/code&gt;.</source>
          <target state="translated">在您刚刚创建的 &lt;code&gt;templates&lt;/code&gt; 目录中，创建另一个名为 &lt;code&gt;polls&lt;/code&gt; 的目录，并在其中创建一个名为 &lt;code&gt;index.html&lt;/code&gt; 的文件。换句话说，您的模板应位于 &lt;code&gt;polls/templates/polls/index.html&lt;/code&gt; 。由于 &lt;code&gt;app_directories&lt;/code&gt; 模板加载器的工作方式，您可以在Django中将此模板称为 &lt;code&gt;polls/index.html&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="860f3f8136ad1b30aaed113d8fc7a05e68d5e190" translate="yes" xml:space="preserve">
          <source>Within this &lt;code&gt;admin&lt;/code&gt; directory, create sub-directories named after your app. Within these app subdirectories create sub-directories named after your models. Note, that the admin app will lowercase the model name when looking for the directory, so make sure you name the directory in all lowercase if you are going to run your app on a case-sensitive filesystem.</source>
          <target state="translated">在此 &lt;code&gt;admin&lt;/code&gt; 目录中，创建以您的应用程序命名的子目录。在这些应用程序子目录中，创建以模型命名的子目录。请注意，管理应用程序在查找目录时将小写型号名称，因此，如果要在区分大小写的文件系统上运行应用程序，请确保使用所有小写字母命名目录。</target>
        </trans-unit>
        <trans-unit id="4ca0d6e3b0362dd0b3d73a1fa76f30a90dcda587" translate="yes" xml:space="preserve">
          <source>Without passing &lt;code&gt;safe=False&lt;/code&gt;, a &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">如果不传递 &lt;code&gt;safe=False&lt;/code&gt; ，将&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f284bfae092e3b0361f7b1a82a5cc6fdd589d50e" translate="yes" xml:space="preserve">
          <source>Without server-side cursors</source>
          <target state="translated">没有服务器端光标</target>
        </trans-unit>
        <trans-unit id="a86dc2954ba50b0e94500dc269d92f5b9d22776e" translate="yes" xml:space="preserve">
          <source>Without tests, the purpose or intended behavior of an application might be rather opaque. Even when it&amp;rsquo;s your own code, you will sometimes find yourself poking around in it trying to find out what exactly it&amp;rsquo;s doing.</source>
          <target state="translated">如果没有测试，则应用程序的目的或预期行为可能会很不透明。即使是您自己的代码，有时您也会发现自己在四处查找，试图找出它到底在做什么。</target>
        </trans-unit>
        <trans-unit id="6eef4c92bb90c0d30ae8bf398ba7f74b5ec8257d" translate="yes" xml:space="preserve">
          <source>Work at the appropriate level</source>
          <target state="translated">适当级别的工作</target>
        </trans-unit>
        <trans-unit id="d7a484140f5f9f7f5427e1f2c44dbfc1d3ad9eea" translate="yes" xml:space="preserve">
          <source>Workflow</source>
          <target state="translated">Workflow</target>
        </trans-unit>
        <trans-unit id="cf0a3114c0fc19fbd07e4133015e8a2d9864d366" translate="yes" xml:space="preserve">
          <source>Working on Windows?</source>
          <target state="translated">在Windows上工作?</target>
        </trans-unit>
        <trans-unit id="ea2a843424161edf786985c720f3f8fb74c9cdcf" translate="yes" xml:space="preserve">
          <source>Working on a feature</source>
          <target state="translated">正在进行一项专题工作</target>
        </trans-unit>
        <trans-unit id="c4f3b7c87ff6119e5fa3e2d759974fa95309264e" translate="yes" xml:space="preserve">
          <source>Working with User objects</source>
          <target state="translated">使用用户对象</target>
        </trans-unit>
        <trans-unit id="38c38e0a2b96715f609ad36f347d5b4b204f5b03" translate="yes" xml:space="preserve">
          <source>Working with a model with two or more foreign keys to the same parent model</source>
          <target state="translated">使用有两个或更多外键到同一父模型的模型工作</target>
        </trans-unit>
        <trans-unit id="37711baf96d8b42949c354e70ad51d333cf6464d" translate="yes" xml:space="preserve">
          <source>Working with form templates</source>
          <target state="translated">使用表格模板</target>
        </trans-unit>
        <trans-unit id="6b9c32fb1ecf6ca317697bb483fbda64b55198f2" translate="yes" xml:space="preserve">
          <source>Working with forms</source>
          <target state="translated">使用表格</target>
        </trans-unit>
        <trans-unit id="263d5356a18c33fbc84ea99f9393971f194a22ab" translate="yes" xml:space="preserve">
          <source>Working with lazy translation objects</source>
          <target state="translated">使用懒惰的翻译对象</target>
        </trans-unit>
        <trans-unit id="bc1c623de2a5c76ef2f9416d9b9fcfd44c106169" translate="yes" xml:space="preserve">
          <source>Working with many-to-many intermediary models</source>
          <target state="translated">与多对多中介模式合作</target>
        </trans-unit>
        <trans-unit id="1f01e152465533ae5a972a35b6bbfbf28502cf01" translate="yes" xml:space="preserve">
          <source>Working with many-to-many models</source>
          <target state="translated">与多对多模型一起工作</target>
        </trans-unit>
        <trans-unit id="ddcb6b13f425070f529f4d11169bef8d874481dc" translate="yes" xml:space="preserve">
          <source>Works like &lt;a href=&quot;#django.db.models.query.QuerySet.first&quot;&gt;&lt;code&gt;first()&lt;/code&gt;&lt;/a&gt;, but returns the last object in the queryset.</source>
          <target state="translated">与&lt;a href=&quot;#django.db.models.query.QuerySet.first&quot;&gt; &lt;code&gt;first()&lt;/code&gt; &lt;/a&gt;相似，但返回查询集中的最后一个对象。</target>
        </trans-unit>
        <trans-unit id="34561367ffbe167dbfe530daabec78fdac33cdcf" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;as_sql()&lt;/code&gt; method. When an expression is compiled by &lt;code&gt;compiler.compile()&lt;/code&gt;, Django will first try to call &lt;code&gt;as_vendorname()&lt;/code&gt;, where &lt;code&gt;vendorname&lt;/code&gt; is the vendor name of the backend used for executing the query. The &lt;code&gt;vendorname&lt;/code&gt; is one of &lt;code&gt;postgresql&lt;/code&gt;, &lt;code&gt;oracle&lt;/code&gt;, &lt;code&gt;sqlite&lt;/code&gt;, or &lt;code&gt;mysql&lt;/code&gt; for Django&amp;rsquo;s built-in backends.</source>
          <target state="translated">像 &lt;code&gt;as_sql()&lt;/code&gt; 方法一样工作。当使用 &lt;code&gt;as_vendorname()&lt;/code&gt; &lt;code&gt;compiler.compile()&lt;/code&gt; 表达式时，Django首先会尝试调用as_vendorname（），其中 &lt;code&gt;vendorname&lt;/code&gt; 是用于执行查询的后端的供应商名称。供应商 &lt;code&gt;vendorname&lt;/code&gt; 是Django内置后端的 &lt;code&gt;postgresql&lt;/code&gt; ， &lt;code&gt;oracle&lt;/code&gt; ， &lt;code&gt;sqlite&lt;/code&gt; 或 &lt;code&gt;mysql&lt;/code&gt; 之一。</target>
        </trans-unit>
        <trans-unit id="c5ecd51ae5c4c7caed0dae2ab8030ca8198edf70" translate="yes" xml:space="preserve">
          <source>Works otherwise like &lt;a href=&quot;#django.db.models.query.QuerySet.latest&quot;&gt;&lt;code&gt;latest()&lt;/code&gt;&lt;/a&gt; except the direction is changed.</source>
          <target state="translated">除方向更改外，其他工作方式类似于&lt;a href=&quot;#django.db.models.query.QuerySet.latest&quot;&gt; &lt;code&gt;latest()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8991b2c73ed446411f13ca50f19e938b090cffc" translate="yes" xml:space="preserve">
          <source>World Borders</source>
          <target state="translated">世界边界</target>
        </trans-unit>
        <trans-unit id="1eb904c54c7b10a6925beddf1368b31095a72618" translate="yes" xml:space="preserve">
          <source>Would generate SQL along these lines:</source>
          <target state="translated">会按照这样的思路生成SQL。</target>
        </trans-unit>
        <trans-unit id="6401b988f8471df5a57e9c9a83961e7b9604a7ae" translate="yes" xml:space="preserve">
          <source>Would match a &lt;code&gt;Blog&lt;/code&gt; titled &lt;code&gt;&quot;Beatles Blog&quot;&lt;/code&gt;, &lt;code&gt;&quot;beatles blog&quot;&lt;/code&gt;, or even &lt;code&gt;&quot;BeAtlES blOG&quot;&lt;/code&gt;.</source>
          <target state="translated">将匹配一个 &lt;code&gt;Blog&lt;/code&gt; 名为 &lt;code&gt;&quot;Beatles Blog&quot;&lt;/code&gt; ， &lt;code&gt;&quot;beatles blog&quot;&lt;/code&gt; ，甚至是 &lt;code&gt;&quot;BeAtlES blOG&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6962ff8c9e27a68a644675d133701514aae2e762" translate="yes" xml:space="preserve">
          <source>Would output:</source>
          <target state="translated">会输出。</target>
        </trans-unit>
        <trans-unit id="67166998ac24e1858679f67fc83a1bdc460fff7b" translate="yes" xml:space="preserve">
          <source>Wrap the message with &lt;code&gt;gettext&lt;/code&gt; to enable translation:</source>
          <target state="translated">用 &lt;code&gt;gettext&lt;/code&gt; 包裹消息以启用翻译：</target>
        </trans-unit>
        <trans-unit id="4c08c2c2aff601756bcfcd16aeed4ec3ea7dbf9a" translate="yes" xml:space="preserve">
          <source>Wrapper (using &lt;a href=&quot;#django.forms.MultiWidget&quot;&gt;&lt;code&gt;MultiWidget&lt;/code&gt;&lt;/a&gt;) around two widgets: &lt;a href=&quot;#django.forms.DateInput&quot;&gt;&lt;code&gt;DateInput&lt;/code&gt;&lt;/a&gt; for the date, and &lt;a href=&quot;#django.forms.TimeInput&quot;&gt;&lt;code&gt;TimeInput&lt;/code&gt;&lt;/a&gt; for the time. Must be used with &lt;a href=&quot;fields#django.forms.SplitDateTimeField&quot;&gt;&lt;code&gt;SplitDateTimeField&lt;/code&gt;&lt;/a&gt; rather than &lt;a href=&quot;fields#django.forms.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">包装（使用&lt;a href=&quot;#django.forms.MultiWidget&quot;&gt; &lt;code&gt;MultiWidget&lt;/code&gt; &lt;/a&gt;）围绕两个小部件：&lt;a href=&quot;#django.forms.DateInput&quot;&gt; &lt;code&gt;DateInput&lt;/code&gt; &lt;/a&gt;作为日期，&lt;a href=&quot;#django.forms.TimeInput&quot;&gt; &lt;code&gt;TimeInput&lt;/code&gt; &lt;/a&gt;作为时间。必须与&lt;a href=&quot;fields#django.forms.SplitDateTimeField&quot;&gt; &lt;code&gt;SplitDateTimeField&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;fields#django.forms.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; 一起使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b7a6fc46dc6b50bb95bd6ccbfaa5bcf04a972b9" translate="yes" xml:space="preserve">
          <source>Wrapper around three &lt;a href=&quot;#django.forms.Select&quot;&gt;&lt;code&gt;Select&lt;/code&gt;&lt;/a&gt; widgets: one each for month, day, and year.</source>
          <target state="translated">包装三个&amp;ldquo; &lt;a href=&quot;#django.forms.Select&quot;&gt; &lt;code&gt;Select&lt;/code&gt; &lt;/a&gt;小部件：月，日和年各一个。</target>
        </trans-unit>
        <trans-unit id="4e3bc69181c58540083b70522b49708615621e5b" translate="yes" xml:space="preserve">
          <source>Wrapping &lt;code&gt;atomic&lt;/code&gt; in a try/except block allows for natural handling of integrity errors:</source>
          <target state="translated">在try / except块中包装 &lt;code&gt;atomic&lt;/code&gt; 可以自然处理完整性错误：</target>
        </trans-unit>
        <trans-unit id="eeb2378b4a939e60b2ba22f29d81d2bbf683ab8a" translate="yes" xml:space="preserve">
          <source>Wraps the tests within two nested &lt;a href=&quot;../db/transactions#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; blocks: one for the whole class and one for each test. Therefore, if you want to test some specific database transaction behavior, use &lt;a href=&quot;#django.test.TransactionTestCase&quot;&gt;&lt;code&gt;TransactionTestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将测试包装在两个嵌套的&lt;a href=&quot;../db/transactions#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt;块中：一个用于整个类，一个用于每个测试。因此，如果要测试某些特定的数据库事务行为，请使用&lt;a href=&quot;#django.test.TransactionTestCase&quot;&gt; &lt;code&gt;TransactionTestCase&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8f1af4224bf5c782c2c2c5df427fb018e1b12079" translate="yes" xml:space="preserve">
          <source>Wraps words at specified line length.</source>
          <target state="translated">以指定的行长包装文字。</target>
        </trans-unit>
        <trans-unit id="d95030187251f05f26dba7724a78f629481d6b82" translate="yes" xml:space="preserve">
          <source>Write a minimal form</source>
          <target state="translated">写一个最小的表格</target>
        </trans-unit>
        <trans-unit id="69f644f506729d32956c47b6af20b41508c872d3" translate="yes" xml:space="preserve">
          <source>Write views that actually do something</source>
          <target state="translated">写出真正有意义的观点</target>
        </trans-unit>
        <trans-unit id="9b7778ebda17369cfe0858b8e658b8e29e72e12c" translate="yes" xml:space="preserve">
          <source>Write your first view</source>
          <target state="translated">写下您的第一个观点</target>
        </trans-unit>
        <trans-unit id="ba89409cdbb719e520e537d4dc3c9fa66f953fe1" translate="yes" xml:space="preserve">
          <source>Write your own &lt;a href=&quot;sql&quot;&gt;custom SQL to retrieve data or populate models&lt;/a&gt;. Use &lt;code&gt;django.db.connection.queries&lt;/code&gt; to find out what Django is writing for you and start from there.</source>
          <target state="translated">编写自己的&lt;a href=&quot;sql&quot;&gt;自定义SQL来检索数据或填充模型&lt;/a&gt;。使用 &lt;code&gt;django.db.connection.queries&lt;/code&gt; 查找Django为您编写的内容，然后从那里开始。</target>
        </trans-unit>
        <trans-unit id="4516094b6c11867d7fd71bd2edcec64e519ad7f8" translate="yes" xml:space="preserve">
          <source>Write your own serializer</source>
          <target state="translated">编写自己的序列器</target>
        </trans-unit>
        <trans-unit id="593a593db2c2e8101ecc6716ddea21f8e36004c5" translate="yes" xml:space="preserve">
          <source>Write your view</source>
          <target state="translated">写下您的看法</target>
        </trans-unit>
        <trans-unit id="51fb5c4a36aefd820c0a4a2e727717e3a99e8e4e" translate="yes" xml:space="preserve">
          <source>Write your views</source>
          <target state="translated">写下您的看法</target>
        </trans-unit>
        <trans-unit id="335cbd7aaa63f61606a8ce6bfa9ddbc970e54241" translate="yes" xml:space="preserve">
          <source>Writer Objects</source>
          <target state="translated">编写对象</target>
        </trans-unit>
        <trans-unit id="ac5688fd5b9416a32c09412ae4319afcb4c746dc" translate="yes" xml:space="preserve">
          <source>Writes a list of lines to the response. Line separators are not added. This method makes an &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; instance a stream-like object.</source>
          <target state="translated">将行列表写入响应。不添加行分隔符。此方法使&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;实例成为类似流的对象。</target>
        </trans-unit>
        <trans-unit id="469b1f8873498de485e6c8f565f8f7d313eb6b92" translate="yes" xml:space="preserve">
          <source>Writing Documentation</source>
          <target state="translated">撰写文件</target>
        </trans-unit>
        <trans-unit id="0e4a6e0250dd5cea6b06e01b05fc4ec66b26a313" translate="yes" xml:space="preserve">
          <source>Writing Web applications can be monotonous, because we repeat certain patterns again and again. Django tries to take away some of that monotony at the model and template layers, but Web developers also experience this boredom at the view level.</source>
          <target state="translated">编写Web应用是很单调的,因为我们一次又一次地重复某些模式。Django试图在模型层和模板层消除这种单调性,但Web开发人员在视图层也会遇到这种无聊的情况。</target>
        </trans-unit>
        <trans-unit id="f5eea826a103a9e63aaa17bb8e08e0a850bed2d7" translate="yes" xml:space="preserve">
          <source>Writing a &lt;code&gt;FileField&lt;/code&gt; subclass</source>
          <target state="translated">编写 &lt;code&gt;FileField&lt;/code&gt; 子类</target>
        </trans-unit>
        <trans-unit id="442ecc5a1b124669e58f9d2b78fe24454b924167" translate="yes" xml:space="preserve">
          <source>Writing a custom field can be a tricky process, particularly if you&amp;rsquo;re doing complex conversions between your Python types and your database and serialization formats. Here are a couple of tips to make things go more smoothly:</source>
          <target state="translated">编写自定义字段可能是一个棘手的过程，尤其是如果您要在Python类型与数据库和序列化格式之间进行复杂的转换时，尤其如此。这里有一些技巧，可以使事情顺利进行：</target>
        </trans-unit>
        <trans-unit id="81cc6a1dc4905f3203cc2469c61dbd19a8ea56a2" translate="yes" xml:space="preserve">
          <source>Writing a custom storage system</source>
          <target state="translated">编写自定义存储系统</target>
        </trans-unit>
        <trans-unit id="3c77ee8057b170032f3fc2082d0bf5504d32ab58" translate="yes" xml:space="preserve">
          <source>Writing a field subclass</source>
          <target state="translated">编写一个字段子类</target>
        </trans-unit>
        <trans-unit id="28190efa607b31c7c24d9f5779e46c865e0a83fe" translate="yes" xml:space="preserve">
          <source>Writing a manager for a custom user model</source>
          <target state="translated">为自定义用户模型编写管理器</target>
        </trans-unit>
        <trans-unit id="4a95409945ba70d523b221bcfe69cd4acf48486d" translate="yes" xml:space="preserve">
          <source>Writing a test for ticket #99999</source>
          <target state="translated">为#99999号票写测试</target>
        </trans-unit>
        <trans-unit id="88ab807ab1b51b24fa926c7acfe234cde3fc1923" translate="yes" xml:space="preserve">
          <source>Writing a test for your patch.</source>
          <target state="translated">为你的补丁写一个测试。</target>
        </trans-unit>
        <trans-unit id="1af41d263686eb32d60e244754483e08b7554c16" translate="yes" xml:space="preserve">
          <source>Writing action functions</source>
          <target state="translated">编写动作函数</target>
        </trans-unit>
        <trans-unit id="7017aaee486b4a2f2f9818b5d2d33987237c62e3" translate="yes" xml:space="preserve">
          <source>Writing actions</source>
          <target state="translated">撰写行动</target>
        </trans-unit>
        <trans-unit id="dac7c061b7ede6561530907e3cac49d1154f3064" translate="yes" xml:space="preserve">
          <source>Writing alternative implementations for existing lookups</source>
          <target state="translated">为现有的查找编写替代的实现方法</target>
        </trans-unit>
        <trans-unit id="b632bd18a18b0ac82e8864d3ef7fbb3f13884779" translate="yes" xml:space="preserve">
          <source>Writing an authentication backend</source>
          <target state="translated">编写认证后端</target>
        </trans-unit>
        <trans-unit id="d240b9a5209cfc65c18ec9a484be5d142b0dc927" translate="yes" xml:space="preserve">
          <source>Writing an efficient &lt;code&gt;abs__lt&lt;/code&gt; lookup</source>
          <target state="translated">编写有效的 &lt;code&gt;abs__lt&lt;/code&gt; 查找</target>
        </trans-unit>
        <trans-unit id="ce09dc8b1630d5b6121f1680420853474009f4cd" translate="yes" xml:space="preserve">
          <source>Writing and running tests</source>
          <target state="translated">编写和运行测试</target>
        </trans-unit>
        <trans-unit id="a24e68be06da6f3453a917ef63dbe5a614d3b176" translate="yes" xml:space="preserve">
          <source>Writing custom &lt;code&gt;django-admin&lt;/code&gt; commands</source>
          <target state="translated">编写自定义 &lt;code&gt;django-admin&lt;/code&gt; 命令</target>
        </trans-unit>
        <trans-unit id="24078713b88a4bed8207f7f7de52445c32b30688" translate="yes" xml:space="preserve">
          <source>Writing custom django-admin commands</source>
          <target state="translated">编写自定义django-admin命令</target>
        </trans-unit>
        <trans-unit id="507357a9c46458552e9fd2b88f20b8166e5d93d6" translate="yes" xml:space="preserve">
          <source>Writing custom model fields</source>
          <target state="translated">编写自定义模型字段</target>
        </trans-unit>
        <trans-unit id="a1949cc5d14d30f1aa7e649edd0f81322fd1cfc1" translate="yes" xml:space="preserve">
          <source>Writing custom template filters</source>
          <target state="translated">编写自定义模板过滤器</target>
        </trans-unit>
        <trans-unit id="b6ae11c406299261bda61ef17f951bbbabdca2c9" translate="yes" xml:space="preserve">
          <source>Writing custom template tags</source>
          <target state="translated">编写自定义模板标签</target>
        </trans-unit>
        <trans-unit id="a60d853a4f6c3f84ca86f63adef876cfbd4da6c3" translate="yes" xml:space="preserve">
          <source>Writing custom upload handlers</source>
          <target state="translated">编写自定义上传处理程序</target>
        </trans-unit>
        <trans-unit id="968e60d1fab1b7f1dde5b50a54cbd1107b9490c9" translate="yes" xml:space="preserve">
          <source>Writing database migrations</source>
          <target state="translated">编写数据库迁移程序</target>
        </trans-unit>
        <trans-unit id="c6d07e9abc215c0341de92ee7a969a93141c2181" translate="yes" xml:space="preserve">
          <source>Writing inclusion tags is probably best demonstrated by example. Let&amp;rsquo;s write a tag that outputs a list of choices for a given &lt;code&gt;Poll&lt;/code&gt; object, such as was created in the &lt;a href=&quot;../intro/tutorial02#creating-models&quot;&gt;tutorials&lt;/a&gt;. We&amp;rsquo;ll use the tag like this:</source>
          <target state="translated">编写包含标签可能是最好的例子。让我们编写一个标签，该标签输出给定 &lt;code&gt;Poll&lt;/code&gt; 对象的选择列表，例如在&lt;a href=&quot;../intro/tutorial02#creating-models&quot;&gt;教程&lt;/a&gt;中创建的。我们将使用如下标记：</target>
        </trans-unit>
        <trans-unit id="f67410572b6948ee1c5ab1efb2fad3ffe185721a" translate="yes" xml:space="preserve">
          <source>Writing more views</source>
          <target state="translated">撰写更多意见</target>
        </trans-unit>
        <trans-unit id="4c607be4256339b1e317fd7c1af8dc620bafeb19" translate="yes" xml:space="preserve">
          <source>Writing our first test</source>
          <target state="translated">编写我们的第一个测试</target>
        </trans-unit>
        <trans-unit id="91333aac1156b58854cc4d86be5d81f2e2a0c3c6" translate="yes" xml:space="preserve">
          <source>Writing some tests for your ticket</source>
          <target state="translated">为您的票据编写一些测试</target>
        </trans-unit>
        <trans-unit id="ab2816d4bb9622be7220e5163963f6a9c487ee4d" translate="yes" xml:space="preserve">
          <source>Writing tests</source>
          <target state="translated">编写测试</target>
        </trans-unit>
        <trans-unit id="b8c9449f7653b86092e8d2020b473b30f62baabd" translate="yes" xml:space="preserve">
          <source>Writing the code for your patch.</source>
          <target state="translated">为你的补丁写代码。</target>
        </trans-unit>
        <trans-unit id="91a690a4062b317f7e9d899541dec3e3d0b44596" translate="yes" xml:space="preserve">
          <source>Writing the code for your ticket</source>
          <target state="translated">为您的票据编写代码</target>
        </trans-unit>
        <trans-unit id="8fb4ac090b5f7d8a78b7e4615d3248bdf40f8a59" translate="yes" xml:space="preserve">
          <source>Writing the compilation function</source>
          <target state="translated">编写编译函数</target>
        </trans-unit>
        <trans-unit id="378ff51957d0646d75fadf471b9bf71be736c5af" translate="yes" xml:space="preserve">
          <source>Writing the renderer</source>
          <target state="translated">编写渲染器</target>
        </trans-unit>
        <trans-unit id="10f53db1537ba910dc5bfce9768080ea1b76b397" translate="yes" xml:space="preserve">
          <source>Writing the translations and local formats. Usually done by translators.</source>
          <target state="translated">编写译文和地方格式。通常由翻译人员完成。</target>
        </trans-unit>
        <trans-unit id="f118dea57ae8fd0d617376a99b1f7f6e97195a00" translate="yes" xml:space="preserve">
          <source>Writing this view is left as an exercise to the reader.</source>
          <target state="translated">写这个观点,就留给读者去练习。</target>
        </trans-unit>
        <trans-unit id="a34619be35d84072a7d650382a097d8599d0e818" translate="yes" xml:space="preserve">
          <source>Writing validators</source>
          <target state="translated">编写验证器</target>
        </trans-unit>
        <trans-unit id="2b8a469310befbd0ea7d884e9716de6afafcb480" translate="yes" xml:space="preserve">
          <source>Writing views</source>
          <target state="translated">撰写意见</target>
        </trans-unit>
        <trans-unit id="cad8a42e973822a174ddd51ae033e62b808dbf51" translate="yes" xml:space="preserve">
          <source>Writing your first Django app, part 1</source>
          <target state="translated">编写你的第一个Django应用,第一部分</target>
        </trans-unit>
        <trans-unit id="7071265c988154509c7d511c8542976bc0435aed" translate="yes" xml:space="preserve">
          <source>Writing your first Django app, part 2</source>
          <target state="translated">编写你的第一个Django应用,第二部分</target>
        </trans-unit>
        <trans-unit id="52b435ea36d5aff0f2e26bf95a33727b217b1077" translate="yes" xml:space="preserve">
          <source>Writing your first Django app, part 3</source>
          <target state="translated">编写你的第一个Django应用,第3部分。</target>
        </trans-unit>
        <trans-unit id="1130d84b977b0fbfc3567312868ad4ad75d8526b" translate="yes" xml:space="preserve">
          <source>Writing your first Django app, part 4</source>
          <target state="translated">编写你的第一个Django应用,第4部分。</target>
        </trans-unit>
        <trans-unit id="019df1e846c9adfba2f2f0acefe8fa3f53f4f7ba" translate="yes" xml:space="preserve">
          <source>Writing your first Django app, part 5</source>
          <target state="translated">编写你的第一个Django应用,第5部分。</target>
        </trans-unit>
        <trans-unit id="820ec49eb1d1304ae4da7db8d62b55ff5b588ecc" translate="yes" xml:space="preserve">
          <source>Writing your first Django app, part 6</source>
          <target state="translated">编写你的第一个Django应用,第6部分。</target>
        </trans-unit>
        <trans-unit id="db8b208576928d0e127ca8e15eaf858569cb627f" translate="yes" xml:space="preserve">
          <source>Writing your first Django app, part 7</source>
          <target state="translated">编写你的第一个Django应用,第7部分。</target>
        </trans-unit>
        <trans-unit id="5371286899fc4b6e246355721348e53e6030932b" translate="yes" xml:space="preserve">
          <source>Writing your first patch for Django</source>
          <target state="translated">为Django编写第一个补丁</target>
        </trans-unit>
        <trans-unit id="5e03a1ed4788149883fbc8f2954297f7f07446f5" translate="yes" xml:space="preserve">
          <source>Writing your own</source>
          <target state="translated">撰写自己的</target>
        </trans-unit>
        <trans-unit id="c00321d5b11ab75c2ff8f121a719cfc906d0aa11" translate="yes" xml:space="preserve">
          <source>Writing your own Query Expressions</source>
          <target state="translated">撰写自己的查询表达式</target>
        </trans-unit>
        <trans-unit id="4a0fc27e1e76c7b07c1a175a4fe442911047f461" translate="yes" xml:space="preserve">
          <source>Writing your own checks</source>
          <target state="translated">自己开具支票</target>
        </trans-unit>
        <trans-unit id="fc29bf2e85b7e479f76ba5215f43e004feb25120" translate="yes" xml:space="preserve">
          <source>Writing your own context processors</source>
          <target state="translated">编写自己的上下文处理器</target>
        </trans-unit>
        <trans-unit id="e206dc975fa788215609b841c99e5a6c734c7df3" translate="yes" xml:space="preserve">
          <source>Writing your own hasher</source>
          <target state="translated">编写自己的哈希</target>
        </trans-unit>
        <trans-unit id="5a95f9f8dbae7e584e4c94d5da5667a4cc4dcb65" translate="yes" xml:space="preserve">
          <source>Writing your own middleware</source>
          <target state="translated">编写自己的中间件</target>
        </trans-unit>
        <trans-unit id="03d8af8eb1554272f5280b9631be754629efb742" translate="yes" xml:space="preserve">
          <source>Writing your own validator</source>
          <target state="translated">编写自己的验证器</target>
        </trans-unit>
        <trans-unit id="c032adc1ff629c9b66f22749ad667e6beadf144b" translate="yes" xml:space="preserve">
          <source>X</source>
          <target state="translated">X</target>
        </trans-unit>
        <trans-unit id="492faa8c7fb1e4982d75c9e8a40141a28ba34bf2" translate="yes" xml:space="preserve">
          <source>X (&amp;ge; 10.2.4)</source>
          <target state="translated">X（&amp;ge;10.2.4）</target>
        </trans-unit>
        <trans-unit id="5169085b86b81a3a71bbe0fe57a138087370a97c" translate="yes" xml:space="preserve">
          <source>X (&amp;ge; 5.7.5)</source>
          <target state="translated">X（&amp;ge;5.7.5）</target>
        </trans-unit>
        <trans-unit id="4a3104bb7914fdb7c22e205c4cd815388af17412" translate="yes" xml:space="preserve">
          <source>X (&amp;ge;10.3)</source>
          <target state="translated">X（&amp;ge;10.3）</target>
        </trans-unit>
        <trans-unit id="46fc78ee1944c50714396aadc1e176e5ea09c911" translate="yes" xml:space="preserve">
          <source>X (&amp;ge;8.0.1)</source>
          <target state="translated">X（&amp;ge;8.0.1）</target>
        </trans-unit>
        <trans-unit id="89fdc352a9eea99e0bef83f9a6cdc077894a6831" translate="yes" xml:space="preserve">
          <source>X (LWGEOM)</source>
          <target state="translated">X (LWGEOM)</target>
        </trans-unit>
        <trans-unit id="13cc13c68e22cba1e7d0bc0fe950d8d9b6beea90" translate="yes" xml:space="preserve">
          <source>X and Y sizes to snap the grid to.</source>
          <target state="translated">X和Y大小的网格。</target>
        </trans-unit>
        <trans-unit id="211e20ce1b59817a4400300639d4d1e39f47fd96" translate="yes" xml:space="preserve">
          <source>X, Y sizes and the corresponding X, Y origins.</source>
          <target state="translated">X、Y大小及相应的X、Y产地。</target>
        </trans-unit>
        <trans-unit id="09752649f6a0071adcb25a852740840060d5cb7b" translate="yes" xml:space="preserve">
          <source>XE not supported.</source>
          <target state="translated">不支持XE。</target>
        </trans-unit>
        <trans-unit id="c0aa9ef764d832b80428d756a731a94251b0e3a1" translate="yes" xml:space="preserve">
          <source>XML</source>
          <target state="translated">XML</target>
        </trans-unit>
        <trans-unit id="e8930cc11d019911e67cd36f7208b613455e2838" translate="yes" xml:space="preserve">
          <source>XML declaration, document type, and comments are ignored. Only the root element and its children are compared.</source>
          <target state="translated">忽略XML声明、文档类型和注释。只有根元素和它的子元素被比较。</target>
        </trans-unit>
        <trans-unit id="878f97ccf2157488a9b155fb4211c6fcdcab69c3" translate="yes" xml:space="preserve">
          <source>XML declaration, document type, processing instructions, and comments are ignored. Only the root element and its children are compared.</source>
          <target state="translated">忽略XML声明、文档类型、处理指令和注释。只有根元素和它的子元素被比较。</target>
        </trans-unit>
        <trans-unit id="5ac9ea4dedfb364c35a3e3e09c7e833b9fe5b05e" translate="yes" xml:space="preserve">
          <source>XSS attacks allow a user to inject client side scripts into the browsers of other users. This is usually achieved by storing the malicious scripts in the database where it will be retrieved and displayed to other users, or by getting users to click a link which will cause the attacker&amp;rsquo;s JavaScript to be executed by the user&amp;rsquo;s browser. However, XSS attacks can originate from any untrusted source of data, such as cookies or Web services, whenever the data is not sufficiently sanitized before including in a page.</source>
          <target state="translated">XSS攻击使用户可以将客户端脚本注入其他用户的浏览器中。通常，这是通过将恶意脚本存储在数据库中来进行检索并将其显示给其他用户，或者通过使用户单击链接来使攻击者的JavaScript由用户的浏览器执行来实现的。但是，只要未在包含在页面中之前对数据进行足够的清理，XSS攻击就可以源自任何不受信任的数据源，例如cookie或Web服务。</target>
        </trans-unit>
        <trans-unit id="10bbdd6485adccb62cf72b3b064fbc310a638bac" translate="yes" xml:space="preserve">
          <source>XSS attacks are mitigated by escaping the characters &amp;ldquo;&amp;lt;&amp;rdquo;, &amp;ldquo;&amp;gt;&amp;rdquo; and &amp;ldquo;&amp;amp;&amp;rdquo;. For example if &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;{'hello': 'world&amp;lt;/script&amp;gt;&amp;amp;amp;'}&lt;/code&gt;, the output is:</source>
          <target state="translated">通过转义字符&amp;ldquo; &amp;lt;&amp;rdquo;，&amp;ldquo;&amp;gt;&amp;rdquo;和&amp;ldquo;＆&amp;rdquo;来缓解XSS攻击。例如，如果 &lt;code&gt;value&lt;/code&gt; 为 &lt;code&gt;{'hello': 'world&amp;lt;/script&amp;gt;&amp;amp;amp;'}&lt;/code&gt; ，则输出为：</target>
        </trans-unit>
        <trans-unit id="ffbcb202b09db426bae56cf2ffb88f18594f2258" translate="yes" xml:space="preserve">
          <source>YAML</source>
          <target state="translated">YAML</target>
        </trans-unit>
        <trans-unit id="c6bbff28a9f2ee0de8903b9e1f1de7d1d03a98e1" translate="yes" xml:space="preserve">
          <source>YAML serialization looks quite similar to JSON. The object list is serialized as a sequence mappings with the keys &amp;ldquo;pk&amp;rdquo;, &amp;ldquo;model&amp;rdquo; and &amp;ldquo;fields&amp;rdquo;. Each field is again a mapping with the key being name of the field and the value the value:</source>
          <target state="translated">YAML序列化看起来与JSON非常相似。对象列表通过键&amp;ldquo; pk&amp;rdquo;，&amp;ldquo;模型&amp;rdquo;和&amp;ldquo;字段&amp;rdquo;序列化为序列映射。每个字段还是一个映射，键为字段名称，值为值：</target>
        </trans-unit>
        <trans-unit id="313a9e1956e25fb6aaf235ae9f81979ef5e2530a" translate="yes" xml:space="preserve">
          <source>Yahoo&amp;rsquo;s Yslow</source>
          <target state="translated">雅虎的Yslow</target>
        </trans-unit>
        <trans-unit id="0637a8c214de05478d2f80caa89292ae204313c1" translate="yes" xml:space="preserve">
          <source>Yard</source>
          <target state="translated">Yard</target>
        </trans-unit>
        <trans-unit id="fee934ee081d372e08a790ccc20076f29e4289ca" translate="yes" xml:space="preserve">
          <source>Yard (Sears)</source>
          <target state="translated">院子(西尔斯)</target>
        </trans-unit>
        <trans-unit id="982392780b169519763bccb155f22790b4b7fba2" translate="yes" xml:space="preserve">
          <source>Year, 2 digits.</source>
          <target state="translated">年,2位数。</target>
        </trans-unit>
        <trans-unit id="f10724d68e74c8eb7b80bebd41bf35ea9ebc156d" translate="yes" xml:space="preserve">
          <source>Year, 4 digits.</source>
          <target state="translated">年,4位数。</target>
        </trans-unit>
        <trans-unit id="5dc228ae5d7c2f4293618af9ea7e7e0ae8d5ac4c" translate="yes" xml:space="preserve">
          <source>Year-based archive page &amp;ndash; displays all months with entries in the given year.</source>
          <target state="translated">基于年份的存档页面&amp;ndash;显示给定年份中所有条目的月份。</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="9bf7dbbdc997273e01073d8fdc7cb7779d77d25f" translate="yes" xml:space="preserve">
          <source>Yes (PostgreSQL and SQLite only)</source>
          <target state="translated">是 (只适用于PostgreSQL和SQLite)</target>
        </trans-unit>
        <trans-unit id="08b2c1c800667fd09eb187617f64b3626365e8c2" translate="yes" xml:space="preserve">
          <source>Yes (PostgreSQL only)</source>
          <target state="translated">是 (只适用于PostgreSQL)</target>
        </trans-unit>
        <trans-unit id="832e444c5e13b4f30a5ba161fa5711d7a4e208bc" translate="yes" xml:space="preserve">
          <source>Yes (SQLite only)</source>
          <target state="translated">是(仅SQLite)</target>
        </trans-unit>
        <trans-unit id="1e75bdac7485b5b2a93fabe59147a5e53ea0124f" translate="yes" xml:space="preserve">
          <source>Yes. When time zone support is enabled, Django uses a more accurate model of local time. This shields you from subtle and unreproducible bugs around Daylight Saving Time (DST) transitions.</source>
          <target state="translated">是的,当启用时区支持时,Django使用了更精确的本地时间模型。当启用时区支持时,Django会使用更精确的本地时间模型。这将使你避免在夏令时(DST)转换过程中出现微妙的、不可复制的错误。</target>
        </trans-unit>
        <trans-unit id="772cd52d5f4ebd48e018f1a521c966938e27bdc7" translate="yes" xml:space="preserve">
          <source>Yet.</source>
          <target state="translated">Yet.</target>
        </trans-unit>
        <trans-unit id="02de1c240c0d0c552be777ae102835b4f88a9a39" translate="yes" xml:space="preserve">
          <source>Yields (&lt;code&gt;FormSet&lt;/code&gt;, &lt;a href=&quot;#django.contrib.admin.InlineModelAdmin&quot;&gt;&lt;code&gt;InlineModelAdmin&lt;/code&gt;&lt;/a&gt;) pairs for use in admin add and change views.</source>
          <target state="translated">用于admin添加和更改视图的收益（ &lt;code&gt;FormSet&lt;/code&gt; ，&lt;a href=&quot;#django.contrib.admin.InlineModelAdmin&quot;&gt; &lt;code&gt;InlineModelAdmin&lt;/code&gt; &lt;/a&gt;）对。</target>
        </trans-unit>
        <trans-unit id="fff9b282d0b4e65bec82bd173a4256070a29756c" translate="yes" xml:space="preserve">
          <source>Yields 2-tuple choices, in the &lt;code&gt;(value, label)&lt;/code&gt; format used by &lt;a href=&quot;#django.forms.ChoiceField.choices&quot;&gt;&lt;code&gt;ChoiceField.choices&lt;/code&gt;&lt;/a&gt;. The first &lt;code&gt;value&lt;/code&gt; element is a &lt;a href=&quot;#django.forms.ModelChoiceIteratorValue&quot;&gt;&lt;code&gt;ModelChoiceIteratorValue&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">以&lt;a href=&quot;#django.forms.ChoiceField.choices&quot;&gt; &lt;code&gt;ChoiceField.choices&lt;/code&gt; &lt;/a&gt;使用的 &lt;code&gt;(value, label)&lt;/code&gt; 格式产生2元组的选择。第一个 &lt;code&gt;value&lt;/code&gt; 元素是&lt;a href=&quot;#django.forms.ModelChoiceIteratorValue&quot;&gt; &lt;code&gt;ModelChoiceIteratorValue&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="a25a54faec9117915765945c0a92c7319022672c" translate="yes" xml:space="preserve">
          <source>You also have to change the renderer to retrieve the actual contents of the &lt;code&gt;date_updated&lt;/code&gt; property of the &lt;code&gt;blog_entry&lt;/code&gt; object. This can be accomplished by using the &lt;code&gt;Variable()&lt;/code&gt; class in &lt;code&gt;django.template&lt;/code&gt;.</source>
          <target state="translated">您还必须更改渲染器以检索 &lt;code&gt;blog_entry&lt;/code&gt; 对象的 &lt;code&gt;date_updated&lt;/code&gt; 属性的实际内容。这可以通过使用 &lt;code&gt;django.template&lt;/code&gt; 中的 &lt;code&gt;Variable()&lt;/code&gt; 类来完成。</target>
        </trans-unit>
        <trans-unit id="3bfd84f2c19dcb8ddec1e0c67018144dc07be341" translate="yes" xml:space="preserve">
          <source>You also must not quote placeholders in the SQL string. This example is vulnerable to SQL injection because of the quotes around &lt;code&gt;%s&lt;/code&gt;:</source>
          <target state="translated">您也不得在SQL字符串中引用占位符。由于 &lt;code&gt;%s&lt;/code&gt; 周围的引号，此示例容易受到SQL注入的攻击：</target>
        </trans-unit>
        <trans-unit id="e2958e24aad130a5d596d95c744eb0bd091ae3b2" translate="yes" xml:space="preserve">
          <source>You are able to use more than one formset in a view if you like. Formsets borrow much of its behavior from forms. With that said you are able to use &lt;code&gt;prefix&lt;/code&gt; to prefix formset form field names with a given value to allow more than one formset to be sent to a view without name clashing. Let&amp;rsquo;s take a look at how this might be accomplished:</source>
          <target state="translated">如果愿意，您可以在一个视图中使用多个表单集。表单集从表单中借用了很多行为。这样，您就可以使用 &lt;code&gt;prefix&lt;/code&gt; 为表单集表单字段名称添加给定值，以允许将多个表单集发送到视图而不会发生名称冲突。让我们看一下如何实现：</target>
        </trans-unit>
        <trans-unit id="0cf503b49f17edca85b6bf6461c3251be1a249ec" translate="yes" xml:space="preserve">
          <source>You are advised to write the code as a separate function above the &lt;code&gt;Migration&lt;/code&gt; class in the migration file, and pass it to &lt;code&gt;RunPython&lt;/code&gt;. Here&amp;rsquo;s an example of using &lt;code&gt;RunPython&lt;/code&gt; to create some initial objects on a &lt;code&gt;Country&lt;/code&gt; model:</source>
          <target state="translated">建议您将代码作为单独的函数编写在迁移文件中的 &lt;code&gt;Migration&lt;/code&gt; 类上方，然后将其传递给 &lt;code&gt;RunPython&lt;/code&gt; 。这是一个使用 &lt;code&gt;RunPython&lt;/code&gt; 在 &lt;code&gt;Country&lt;/code&gt; 模型上创建一些初始对象的示例：</target>
        </trans-unit>
        <trans-unit id="2e2927c114e2274367c91d0068c7d9f1b02e8fb9" translate="yes" xml:space="preserve">
          <source>You are encouraged to make migrations freely and not worry about how many you have; the migration code is optimized to deal with hundreds at a time without much slowdown. However, eventually you will want to move back from having several hundred migrations to just a few, and that&amp;rsquo;s where squashing comes in.</source>
          <target state="translated">我们鼓励您自由进行迁移，而不必担心您有多少迁移；迁移代码经过优化，可以一次处理数百个，而不会降低速度。但是，最终您将希望从进行数百次迁移回到仅进行几次迁移，这就是压榨的结果。</target>
        </trans-unit>
        <trans-unit id="d2e5cf76f8f2f31d181c7b619e609db9e2f36c53" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;#extending-user&quot;&gt;extend&lt;/a&gt; the default &lt;code&gt;User&lt;/code&gt; model, or &lt;a href=&quot;#auth-custom-user&quot;&gt;substitute&lt;/a&gt; a completely customized model.</source>
          <target state="translated">您可以&lt;a href=&quot;#extending-user&quot;&gt;扩展&lt;/a&gt;默认的 &lt;code&gt;User&lt;/code&gt; 模型，或&lt;a href=&quot;#auth-custom-user&quot;&gt;替换&lt;/a&gt;为完全自定义的模型。</target>
        </trans-unit>
        <trans-unit id="d8c15e0beefedc1d0b291e74d5f081c724c2d03f" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.annotate&quot;&gt;&lt;code&gt;annotate&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;aggregation&quot;&gt;aggregate&lt;/a&gt; using many built-in &lt;a href=&quot;../../ref/models/database-functions&quot;&gt;database functions&lt;/a&gt;. Beyond those, you can create &lt;a href=&quot;../../ref/models/expressions&quot;&gt;custom query expressions&lt;/a&gt;.</source>
          <target state="translated">您可以使用许多内置&lt;a href=&quot;../../ref/models/database-functions&quot;&gt;数据库功能&lt;/a&gt;进行&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.annotate&quot;&gt; &lt;code&gt;annotate&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;aggregation&quot;&gt;汇总&lt;/a&gt;。除此之外，您还可以创建&lt;a href=&quot;../../ref/models/expressions&quot;&gt;自定义查询表达式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9265bcca4a9ea85791d5d3bd618a765cf886f463" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/create-database.html&quot;&gt;create your database&lt;/a&gt; using the command-line tools and this SQL:</source>
          <target state="translated">您可以使用命令行工具和以下SQL &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/create-database.html&quot;&gt;创建数据库&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="ae4e63c409a1a1e2c74d44c22f44ab5c079d00a8" translate="yes" xml:space="preserve">
          <source>You can access &lt;a href=&quot;#django.forms.Form.errors&quot;&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/a&gt; without having to call &lt;a href=&quot;#django.forms.Form.is_valid&quot;&gt;&lt;code&gt;is_valid()&lt;/code&gt;&lt;/a&gt; first. The form&amp;rsquo;s data will be validated the first time either you call &lt;a href=&quot;#django.forms.Form.is_valid&quot;&gt;&lt;code&gt;is_valid()&lt;/code&gt;&lt;/a&gt; or access &lt;a href=&quot;#django.forms.Form.errors&quot;&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您可以访问&lt;a href=&quot;#django.forms.Form.errors&quot;&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/a&gt;而不&lt;a href=&quot;#django.forms.Form.is_valid&quot;&gt; &lt;code&gt;is_valid()&lt;/code&gt; &lt;/a&gt;调用is_valid（）。第一次调用&lt;a href=&quot;#django.forms.Form.is_valid&quot;&gt; &lt;code&gt;is_valid()&lt;/code&gt; &lt;/a&gt;或访问&lt;a href=&quot;#django.forms.Form.errors&quot;&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/a&gt;时，将验证表单的数据。</target>
        </trans-unit>
        <trans-unit id="4220ad7fc8a6abb61ba1dacb574863f342fc101a" translate="yes" xml:space="preserve">
          <source>You can access the caches configured in the &lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt;&lt;code&gt;CACHES&lt;/code&gt;&lt;/a&gt; setting through a dict-like object: &lt;code&gt;django.core.cache.caches&lt;/code&gt;. Repeated requests for the same alias in the same thread will return the same object.</source>
          <target state="translated">您可以通过类似dict的对象 &lt;code&gt;django.core.cache.caches&lt;/code&gt; 访问在&lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt; &lt;code&gt;CACHES&lt;/code&gt; &lt;/a&gt;设置中配置的缓存。在同一线程中重复请求相同的别名将返回相同的对象。</target>
        </trans-unit>
        <trans-unit id="18847e3a62e8f5bc8cf77c4fc117cf59ba9eb466" translate="yes" xml:space="preserve">
          <source>You can access the fields of &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; instance from its &lt;code&gt;fields&lt;/code&gt; attribute:</source>
          <target state="translated">您可以从&lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;实例的 &lt;code&gt;fields&lt;/code&gt; 属性访问其字段：</target>
        </trans-unit>
        <trans-unit id="966e78a36f90dc41f84710259a9e1473b873d7cc" translate="yes" xml:space="preserve">
          <source>You can acquire the token like this:</source>
          <target state="translated">你可以通过这样的方式获得代币。</target>
        </trans-unit>
        <trans-unit id="db1fd64b347378f25b6e879e50af5202e6fb08c6" translate="yes" xml:space="preserve">
          <source>You can add a password reset feature to the admin site by adding a few lines to your URLconf. Specifically, add these four patterns:</source>
          <target state="translated">你可以在你的URLconf中添加几行文字,就可以在管理网站中添加密码重置功能。具体来说,添加以下四种模式。</target>
        </trans-unit>
        <trans-unit id="26dc0ce58675ca8cc58915ff4d5f01e106814e85" translate="yes" xml:space="preserve">
          <source>You can add an explicit subquery to a &lt;code&gt;QuerySet&lt;/code&gt; using the &lt;code&gt;Subquery&lt;/code&gt; expression.</source>
          <target state="translated">您可以使用 &lt;code&gt;Subquery&lt;/code&gt; 表达式将显式子查询添加到 &lt;code&gt;QuerySet&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="2881d5a6c8193381aae6edc428d3d579d5fd9314" translate="yes" xml:space="preserve">
          <source>You can add the &lt;code&gt;--depth 1&lt;/code&gt; argument to &lt;code&gt;git clone&lt;/code&gt; to skip downloading all of Django&amp;rsquo;s commit history, which reduces data transfer from ~250 MB to ~70 MB.</source>
          <target state="translated">您可以在 &lt;code&gt;git clone&lt;/code&gt; 中添加 &lt;code&gt;--depth 1&lt;/code&gt; 参数来跳过下载所有Django的提交历史记录，从而将数据传输从〜250 MB减少到〜70 MB。</target>
        </trans-unit>
        <trans-unit id="34e92aec10982c584e80ddee8ec0605781bc3e92" translate="yes" xml:space="preserve">
          <source>You can add this to a model field via the field&amp;rsquo;s &lt;a href=&quot;models/fields#django.db.models.Field.validators&quot;&gt;&lt;code&gt;validators&lt;/code&gt;&lt;/a&gt; argument:</source>
          <target state="translated">您可以通过字段的&lt;a href=&quot;models/fields#django.db.models.Field.validators&quot;&gt; &lt;code&gt;validators&lt;/code&gt; &lt;/a&gt;参数将其添加到模型字段中：</target>
        </trans-unit>
        <trans-unit id="27300ac14808ad55ca8248da04940034b1d7eb6f" translate="yes" xml:space="preserve">
          <source>You can adjust class-based views by decorating the result of the &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt;&lt;code&gt;as_view()&lt;/code&gt;&lt;/a&gt; method. The easiest place to do this is in the URLconf where you deploy your view:</source>
          <target state="translated">您可以通过装饰&lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt; &lt;code&gt;as_view()&lt;/code&gt; &lt;/a&gt;方法的结果来调整基于类的视图。最简单的方法是在部署视图的URLconf中：</target>
        </trans-unit>
        <trans-unit id="9720c39901f30ead4b2fb9e4964adc4ff8fe9d36" translate="yes" xml:space="preserve">
          <source>You can also &lt;a href=&quot;#defining-and-sending-signals&quot;&gt;define and send your own custom signals&lt;/a&gt;; see below.</source>
          <target state="translated">您还可以&lt;a href=&quot;#defining-and-sending-signals&quot;&gt;定义和发送自己的自定义信号&lt;/a&gt;；见下文。</target>
        </trans-unit>
        <trans-unit id="96444e47d536222f6be64c09cab886bff9182a64" translate="yes" xml:space="preserve">
          <source>You can also access methods you&amp;rsquo;ve explicitly defined on your own models:</source>
          <target state="translated">您还可以访问在自己的模型上明确定义的方法：</target>
        </trans-unit>
        <trans-unit id="3ba1c194241c425816f14f9e37c9bed65f90c07b" translate="yes" xml:space="preserve">
          <source>You can also add context using the &lt;a href=&quot;mixins-simple#django.views.generic.base.ContextMixin.extra_context&quot;&gt;&lt;code&gt;extra_context&lt;/code&gt;&lt;/a&gt; keyword argument for &lt;a href=&quot;#django.views.generic.base.View.as_view&quot;&gt;&lt;code&gt;as_view()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您还可以使用&lt;a href=&quot;#django.views.generic.base.View.as_view&quot;&gt; &lt;code&gt;as_view()&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;mixins-simple#django.views.generic.base.ContextMixin.extra_context&quot;&gt; &lt;code&gt;extra_context&lt;/code&gt; &lt;/a&gt;关键字参数添加上下文。</target>
        </trans-unit>
        <trans-unit id="9376e10d78ac9a6074bba1777563a711fe6ee24b" translate="yes" xml:space="preserve">
          <source>You can also add custom validation of data in the admin. The automatic admin interface reuses &lt;a href=&quot;../../forms/api#module-django.forms&quot;&gt;&lt;code&gt;django.forms&lt;/code&gt;&lt;/a&gt;, and the &lt;code&gt;ModelAdmin&lt;/code&gt; class gives you the ability define your own form:</source>
          <target state="translated">您也可以在管理员中添加数据的自定义验证。自动管理界面会重用&lt;a href=&quot;../../forms/api#module-django.forms&quot;&gt; &lt;code&gt;django.forms&lt;/code&gt; &lt;/a&gt;，而 &lt;code&gt;ModelAdmin&lt;/code&gt; 类使您能够定义自己的表单：</target>
        </trans-unit>
        <trans-unit id="dc30af1f69189bb86934c9b1b8a60d570b0b78fa" translate="yes" xml:space="preserve">
          <source>You can also assign the prefetched result to a custom attribute with the optional &lt;code&gt;to_attr&lt;/code&gt; argument. The result will be stored directly in a list.</source>
          <target state="translated">您还可以使用可选的 &lt;code&gt;to_attr&lt;/code&gt; 参数将预取结果分配给自定义属性。结果将直接存储在列表中。</target>
        </trans-unit>
        <trans-unit id="a4c73f7f0019c6f5f3ff09d430d593b0ef70d61a" translate="yes" xml:space="preserve">
          <source>You can also change a password programmatically, using &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.set_password&quot;&gt;&lt;code&gt;set_password()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">您还可以使用&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.set_password&quot;&gt; &lt;code&gt;set_password()&lt;/code&gt; &lt;/a&gt;以编程方式更改密码：</target>
        </trans-unit>
        <trans-unit id="0258bb265ce3f55122c75a4aa0e08d7d5bd72f9a" translate="yes" xml:space="preserve">
          <source>You can also choose the latest based on several fields. For example, to select the &lt;code&gt;Entry&lt;/code&gt; with the earliest &lt;code&gt;expire_date&lt;/code&gt; when two entries have the same &lt;code&gt;pub_date&lt;/code&gt;:</source>
          <target state="translated">您还可以根据多个字段选择最新的。例如，当两个条目具有相同的 &lt;code&gt;pub_date&lt;/code&gt; 时，选择最早的 &lt;code&gt;expire_date&lt;/code&gt; 的 &lt;code&gt;Entry&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1a352d82d08178ba10926da835112ef7fb71c486" translate="yes" xml:space="preserve">
          <source>You can also collect your available choices into named groups that can be used for organizational purposes:</source>
          <target state="translated">您还可以将您的可用选择收集到可用于组织目的的命名组中。</target>
        </trans-unit>
        <trans-unit id="008ce2487c49e342362fd6c9a89f73104086a010" translate="yes" xml:space="preserve">
          <source>You can also create &lt;a href=&quot;../../ref/models/fields#recursive-relationships&quot;&gt;recursive relationships&lt;/a&gt; (an object with a many-to-one relationship to itself) and &lt;a href=&quot;../../ref/models/fields#lazy-relationships&quot;&gt;relationships to models not yet defined&lt;/a&gt;; see &lt;a href=&quot;../../ref/models/fields#ref-foreignkey&quot;&gt;the model field reference&lt;/a&gt; for details.</source>
          <target state="translated">您也可以创建 &lt;a href=&quot;../../ref/models/fields#recursive-relationships&quot;&gt;递归关系&lt;/a&gt;（一个与自身具有多对一关系的对象）和&lt;a href=&quot;../../ref/models/fields#lazy-relationships&quot;&gt;与尚未定义的模型的关系&lt;/a&gt;；有关详细信息，请参见&lt;a href=&quot;../../ref/models/fields#ref-foreignkey&quot;&gt;模型字段参考&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d91af020c29e969dedfe526c9bc47b587ce3974b" translate="yes" xml:space="preserve">
          <source>You can also create your own custom template filters; see &lt;a href=&quot;../../howto/custom-template-tags&quot;&gt;Custom template tags and filters&lt;/a&gt;.</source>
          <target state="translated">您还可以创建自己的自定义模板过滤器；请参阅&lt;a href=&quot;../../howto/custom-template-tags&quot;&gt;自定义模板标签和过滤器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="18ff26327460effed0b34362d94610ec3dc6ef23" translate="yes" xml:space="preserve">
          <source>You can also create your own custom template tags; see &lt;a href=&quot;../../howto/custom-template-tags&quot;&gt;Custom template tags and filters&lt;/a&gt;.</source>
          <target state="translated">您还可以创建自己的自定义模板标签；请参阅&lt;a href=&quot;../../howto/custom-template-tags&quot;&gt;自定义模板标签和过滤器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="52f655d9be3e88117e1aff19e4796af692ddb268" translate="yes" xml:space="preserve">
          <source>You can also customize how a field will be accessed by overriding &lt;a href=&quot;api#django.forms.Field.get_bound_field&quot;&gt;&lt;code&gt;get_bound_field()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您还可以自定义如何通过覆盖访问字段 &lt;a href=&quot;api#django.forms.Field.get_bound_field&quot;&gt; &lt;code&gt;get_bound_field()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="94e65aba749c40ee3d106755279dd959b8abd401" translate="yes" xml:space="preserve">
          <source>You can also customize the SQL using the &lt;code&gt;template&lt;/code&gt; parameter of &lt;code&gt;as_sql()&lt;/code&gt;.</source>
          <target state="translated">您也可以使用 &lt;code&gt;template&lt;/code&gt; 自定义SQL &lt;code&gt;as_sql()&lt;/code&gt; 参数来自。</target>
        </trans-unit>
        <trans-unit id="94b18a51eaa9089911df581f8b05ccea7757e39a" translate="yes" xml:space="preserve">
          <source>You can also customize the colors that are used. Django specifies a number of roles in which color is used:</source>
          <target state="translated">你也可以自定义使用的颜色。Django指定了一些使用颜色的角色。</target>
        </trans-unit>
        <trans-unit id="9eeb08eee06a8956dffdffb9ff101b758e055eb6" translate="yes" xml:space="preserve">
          <source>You can also customize the model manager by subclassing &lt;a href=&quot;#django.contrib.sessions.base_session.BaseSessionManager&quot;&gt;&lt;code&gt;BaseSessionManager&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">您还可以通过子类化来定制模型管理器 &lt;a href=&quot;#django.contrib.sessions.base_session.BaseSessionManager&quot;&gt; &lt;code&gt;BaseSessionManager&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="3aef1d0fa321b60cf35a6780f2809a97312555de" translate="yes" xml:space="preserve">
          <source>You can also delete objects in bulk. Every &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; has a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method, which deletes all members of that &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您也可以批量删除对象。每个&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;都有一个&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt;方法，该方法将删除该方法的所有成员。&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; 的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="189491d81e1028711d62d91262b0538b195ce131" translate="yes" xml:space="preserve">
          <source>You can also designate a specific closing tag, allowing the use of &lt;code&gt;{% endverbatim %}&lt;/code&gt; as part of the unrendered contents:</source>
          <target state="translated">您还可以指定一个特定的结束标记，允许将 &lt;code&gt;{% endverbatim %}&lt;/code&gt; 用作未呈现内容的一部分：</target>
        </trans-unit>
        <trans-unit id="cb35003efe9e82769fd7d8a5e0ee023bf3bbbf91" translate="yes" xml:space="preserve">
          <source>You can also do more complicated things like:</source>
          <target state="translated">你还可以做更复杂的事情,比如。</target>
        </trans-unit>
        <trans-unit id="ee8be544ce1bce75dce6e73ab0104d7bc199d38b" translate="yes" xml:space="preserve">
          <source>You can also enable template caching with some custom template loaders using settings like this:</source>
          <target state="translated">你也可以使用一些自定义模板加载器启用模板缓存,使用这样的设置。</target>
        </trans-unit>
        <trans-unit id="e116f8b7e4c0795a9377faf998ea4d1a00e17fc5" translate="yes" xml:space="preserve">
          <source>You can also exclude tests by tag. To run core tests if they are not slow:</source>
          <target state="translated">你也可以通过标签来排除测试。如果核心测试运行速度不慢,要运行核心测试。</target>
        </trans-unit>
        <trans-unit id="089c599e76796f75d93fdb2194c09a28d7ea8e60" translate="yes" xml:space="preserve">
          <source>You can also execute queries containing fields that aren&amp;rsquo;t defined on the model. For example, we could use &lt;a href=&quot;https://www.postgresql.org/docs/current/functions-datetime.html&quot;&gt;PostgreSQL&amp;rsquo;s age() function&lt;/a&gt; to get a list of people with their ages calculated by the database:</source>
          <target state="translated">您还可以执行包含模型未定义的字段的查询。例如，我们可以使用&lt;a href=&quot;https://www.postgresql.org/docs/current/functions-datetime.html&quot;&gt;PostgreSQL的age（）函数&lt;/a&gt;来获取一个由数据库计算其年龄的人员列表：</target>
        </trans-unit>
        <trans-unit id="58f630a421444363965d01dae6bed5a39aac1e79" translate="yes" xml:space="preserve">
          <source>You can also filter on a combination of fields and on related models:</source>
          <target state="translated">您还可以根据字段组合和相关模型进行筛选。</target>
        </trans-unit>
        <trans-unit id="d8d1ed87f5dfcf51acf2741769d74c92ece52133" translate="yes" xml:space="preserve">
          <source>You can also generate an aggregate on the result of an annotation. When you define an &lt;code&gt;aggregate()&lt;/code&gt; clause, the aggregates you provide can reference any alias defined as part of an &lt;code&gt;annotate()&lt;/code&gt; clause in the query.</source>
          <target state="translated">您还可以根据注释结果生成汇总。定义 &lt;code&gt;aggregate()&lt;/code&gt; 子句时，您提供的聚合可以引用定义为查询中的 &lt;code&gt;annotate()&lt;/code&gt; 子句一部分的任何别名。</target>
        </trans-unit>
        <trans-unit id="100e9ee5d64e8b7c9c54faef7813e88203b085d6" translate="yes" xml:space="preserve">
          <source>You can also implement &lt;code&gt;password_changed(password, user=None&lt;/code&gt;), which will be called after a successful password change. That can be used to prevent password reuse, for example. However, if you decide to store a user&amp;rsquo;s previous passwords, you should never do so in clear text.</source>
          <target state="translated">您还可以实现 &lt;code&gt;password_changed(password, user=None&lt;/code&gt; ），在成功更改密码后将调用它。例如，这可以用来防止密码重用。但是，如果您决定存储用户以前的密码，则绝对不要以明文形式存储。</target>
        </trans-unit>
        <trans-unit id="d2ee2500cb1ce408d6114724f67ed763dd936a3a" translate="yes" xml:space="preserve">
          <source>You can also import this signal from &lt;code&gt;django.core.signals&lt;/code&gt; to avoid importing from &lt;code&gt;django.test&lt;/code&gt; in non-test situations.</source>
          <target state="translated">您也可以从 &lt;code&gt;django.core.signals&lt;/code&gt; 导入此信号，以避免在非测试情况下从 &lt;code&gt;django.test&lt;/code&gt; 导入。</target>
        </trans-unit>
        <trans-unit id="b2ce1354ae918d65aa80a0e60f39b48066fd0c95" translate="yes" xml:space="preserve">
          <source>You can also increment or decrement a key that already exists using the &lt;code&gt;incr()&lt;/code&gt; or &lt;code&gt;decr()&lt;/code&gt; methods, respectively. By default, the existing cache value will be incremented or decremented by 1. Other increment/decrement values can be specified by providing an argument to the increment/decrement call. A ValueError will be raised if you attempt to increment or decrement a nonexistent cache key.:</source>
          <target state="translated">您还可以分别使用 &lt;code&gt;incr()&lt;/code&gt; 或 &lt;code&gt;decr()&lt;/code&gt; 方法递增或递减已存在的键。默认情况下，现有的高速缓存值将递增或递减1。可以通过为递增/递减调用提供参数来指定其他递增/递减值。如果您尝试增加或减少不存在的缓存键，将引发ValueError：</target>
        </trans-unit>
        <trans-unit id="9bd38cfb7d04b98cb7f66dfa985bb8294ec45339" translate="yes" xml:space="preserve">
          <source>You can also modify a widget in the form definition:</source>
          <target state="translated">您也可以在表单定义中修改一个小部件。</target>
        </trans-unit>
        <trans-unit id="9f2a914dce164bfb67650dbeff3bf67e59be97fa" translate="yes" xml:space="preserve">
          <source>You can also order by &lt;a href=&quot;expressions&quot;&gt;query expressions&lt;/a&gt; by calling &lt;a href=&quot;expressions#django.db.models.Expression.asc&quot;&gt;&lt;code&gt;asc()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;expressions#django.db.models.Expression.desc&quot;&gt;&lt;code&gt;desc()&lt;/code&gt;&lt;/a&gt; on the expression:</source>
          <target state="translated">您还可以通过在&lt;a href=&quot;expressions&quot;&gt;表达式上&lt;/a&gt;调用&lt;a href=&quot;expressions#django.db.models.Expression.asc&quot;&gt; &lt;code&gt;asc()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;expressions#django.db.models.Expression.desc&quot;&gt; &lt;code&gt;desc()&lt;/code&gt; &lt;/a&gt;来按查询表达式进行排序：</target>
        </trans-unit>
        <trans-unit id="bb827d0c965869de530f9d1e4ff61e09c9f47487" translate="yes" xml:space="preserve">
          <source>You can also override &lt;code&gt;'DIRS'&lt;/code&gt; and specify specific directories for a particular filesystem loader:</source>
          <target state="translated">您还可以覆盖 &lt;code&gt;'DIRS'&lt;/code&gt; 并为特定的文件系统加载程序指定特定的目录：</target>
        </trans-unit>
        <trans-unit id="49553709dac5a97c267b8d655fc1db794297b211" translate="yes" xml:space="preserve">
          <source>You can also override &lt;code&gt;empty_value_display&lt;/code&gt; for all admin pages with &lt;a href=&quot;#django.contrib.admin.AdminSite.empty_value_display&quot;&gt;&lt;code&gt;AdminSite.empty_value_display&lt;/code&gt;&lt;/a&gt;, or for specific fields like this:</source>
          <target state="translated">您还可以使用 &lt;code&gt;empty_value_display&lt;/code&gt; 覆盖所有管理页面的&lt;a href=&quot;#django.contrib.admin.AdminSite.empty_value_display&quot;&gt; &lt;code&gt;AdminSite.empty_value_display&lt;/code&gt; &lt;/a&gt;，或类似这样的特定字段：</target>
        </trans-unit>
        <trans-unit id="d3ae6ce73cb41b7c6ddeba93d1a55bbbb1a31231" translate="yes" xml:space="preserve">
          <source>You can also override the &lt;code&gt;get_test_func()&lt;/code&gt; method to have the mixin use a differently named function for its checks (instead of &lt;a href=&quot;#django.contrib.auth.mixins.UserPassesTestMixin.test_func&quot;&gt;&lt;code&gt;test_func()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">您还可以覆盖 &lt;code&gt;get_test_func()&lt;/code&gt; 方法，以使mixin使用其他命名的函数进行检查（而不是&lt;a href=&quot;#django.contrib.auth.mixins.UserPassesTestMixin.test_func&quot;&gt; &lt;code&gt;test_func()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="03a9a4d8f89dd34062b11b538549f13b1ec2eae9" translate="yes" xml:space="preserve">
          <source>You can also override the cache prefix on a per-view basis. &lt;code&gt;cache_page&lt;/code&gt; takes an optional keyword argument, &lt;code&gt;key_prefix&lt;/code&gt;, which works in the same way as the &lt;a href=&quot;../ref/settings#std:setting-CACHE_MIDDLEWARE_KEY_PREFIX&quot;&gt;&lt;code&gt;CACHE_MIDDLEWARE_KEY_PREFIX&lt;/code&gt;&lt;/a&gt; setting for the middleware. It can be used like this:</source>
          <target state="translated">您还可以基于每个视图覆盖缓存前缀。 &lt;code&gt;cache_page&lt;/code&gt; 带有一个可选的关键字参数 &lt;code&gt;key_prefix&lt;/code&gt; ，其工作方式与中间件的&lt;a href=&quot;../ref/settings#std:setting-CACHE_MIDDLEWARE_KEY_PREFIX&quot;&gt; &lt;code&gt;CACHE_MIDDLEWARE_KEY_PREFIX&lt;/code&gt; &lt;/a&gt;设置相同。可以这样使用：</target>
        </trans-unit>
        <trans-unit id="a5714dd521c27f3ca379ad758cb9f6364b28ced6" translate="yes" xml:space="preserve">
          <source>You can also pass &lt;code&gt;kwargs&lt;/code&gt; instead of &lt;code&gt;args&lt;/code&gt;. For example:</source>
          <target state="translated">您也可以传递 &lt;code&gt;kwargs&lt;/code&gt; 而不是 &lt;code&gt;args&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="e0c70c1bafa63fd1f362eba97220240d2d031891" translate="yes" xml:space="preserve">
          <source>You can also pass a list of strings or 2-tuples. The latter is used for passing queries and parameters in the same way as &lt;a href=&quot;../topics/db/sql#executing-custom-sql&quot;&gt;cursor.execute()&lt;/a&gt;. These three operations are equivalent:</source>
          <target state="translated">您还可以传递字符串或2元组的列表。后者用于传递查询和参数，方式与&lt;a href=&quot;../topics/db/sql#executing-custom-sql&quot;&gt;cursor.execute（）&lt;/a&gt;相同。这三个操作是等效的：</target>
        </trans-unit>
        <trans-unit id="bc860d872dd41451b6454404413ac31dab6726b2" translate="yes" xml:space="preserve">
          <source>You can also pass any callable as a &lt;em&gt;default&lt;/em&gt; value:</source>
          <target state="translated">您还可以将任何callable传递为&lt;em&gt;默认&lt;/em&gt;值：</target>
        </trans-unit>
        <trans-unit id="287bba86c0bfd4302553b74b6f78e8611bd63d7a" translate="yes" xml:space="preserve">
          <source>You can also pass code in on standard input to execute it. For example:</source>
          <target state="translated">你也可以在标准输入上传入代码来执行。例如</target>
        </trans-unit>
        <trans-unit id="3afff0c1d5553587433be427c08633ef8697c846" translate="yes" xml:space="preserve">
          <source>You can also prevent saving:</source>
          <target state="translated">你也可以防止保存。</target>
        </trans-unit>
        <trans-unit id="eafb1123e92af7700ddbebd945c460232df607ae" translate="yes" xml:space="preserve">
          <source>You can also provide a custom renderer by setting the &lt;a href=&quot;api#django.forms.Form.default_renderer&quot;&gt;&lt;code&gt;Form.default_renderer&lt;/code&gt;&lt;/a&gt; attribute or by using the &lt;code&gt;renderer&lt;/code&gt; argument of &lt;a href=&quot;widgets#django.forms.Widget.render&quot;&gt;&lt;code&gt;Widget.render()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您还可以通过设置&lt;a href=&quot;api#django.forms.Form.default_renderer&quot;&gt; &lt;code&gt;Form.default_renderer&lt;/code&gt; &lt;/a&gt;属性或使用&lt;a href=&quot;widgets#django.forms.Widget.render&quot;&gt; &lt;code&gt;Widget.render()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;renderer&lt;/code&gt; 参数来提供自定义渲染器。</target>
        </trans-unit>
        <trans-unit id="63c59091d5816a9459b64989925bd75c669a1da5" translate="yes" xml:space="preserve">
          <source>You can also provide a path to a directory to discover tests below that directory:</source>
          <target state="translated">你也可以提供一个目录的路径来发现该目录下的测试。</target>
        </trans-unit>
        <trans-unit id="00a16dc3ef85bc8b861723686a179616db4ce669" translate="yes" xml:space="preserve">
          <source>You can also provide data using fixtures, however, this data isn&amp;rsquo;t loaded automatically, except if you use &lt;a href=&quot;../topics/testing/tools#django.test.TransactionTestCase.fixtures&quot;&gt;&lt;code&gt;TransactionTestCase.fixtures&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您也可以使用Fixture提供数据，但是不会自动加载此数据，除非您使用&lt;a href=&quot;../topics/testing/tools#django.test.TransactionTestCase.fixtures&quot;&gt; &lt;code&gt;TransactionTestCase.fixtures&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ba675a780ed6423b07763dd377d5a8afe074350" translate="yes" xml:space="preserve">
          <source>You can also provide hints that will be passed to the &lt;a href=&quot;../topics/db/multi-db#allow_migrate&quot;&gt;&lt;code&gt;allow_migrate()&lt;/code&gt;&lt;/a&gt; method of database routers as &lt;code&gt;**hints&lt;/code&gt;:</source>
          <target state="translated">您还可以提供提示，这些提示将通过 &lt;code&gt;**hints&lt;/code&gt; 传递给数据库路由器的&lt;a href=&quot;../topics/db/multi-db#allow_migrate&quot;&gt; &lt;code&gt;allow_migrate()&lt;/code&gt; &lt;/a&gt;方法：</target>
        </trans-unit>
        <trans-unit id="022452b885dbb9b16de88b23507ad2fb75c15c67" translate="yes" xml:space="preserve">
          <source>You can also put &lt;a href=&quot;formatting#custom-format-files&quot;&gt;custom format files&lt;/a&gt; in the &lt;a href=&quot;../../ref/settings#std:setting-LOCALE_PATHS&quot;&gt;&lt;code&gt;LOCALE_PATHS&lt;/code&gt;&lt;/a&gt; directories if you also set &lt;a href=&quot;../../ref/settings#std:setting-FORMAT_MODULE_PATH&quot;&gt;&lt;code&gt;FORMAT_MODULE_PATH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果还设置&lt;a href=&quot;../../ref/settings#std:setting-FORMAT_MODULE_PATH&quot;&gt; &lt;code&gt;FORMAT_MODULE_PATH&lt;/code&gt; ,&lt;/a&gt;则还可以将&lt;a href=&quot;formatting#custom-format-files&quot;&gt;自定义格式文件&lt;/a&gt;放在&lt;a href=&quot;../../ref/settings#std:setting-LOCALE_PATHS&quot;&gt; &lt;code&gt;LOCALE_PATHS&lt;/code&gt; &lt;/a&gt;目录中。</target>
        </trans-unit>
        <trans-unit id="55281fa3982d9fbb9e9494b3e9b1de38366197c8" translate="yes" xml:space="preserve">
          <source>You can also read from an &lt;code&gt;HttpRequest&lt;/code&gt; using a file-like interface with &lt;a href=&quot;#django.http.HttpRequest.read&quot;&gt;&lt;code&gt;HttpRequest.read()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.http.HttpRequest.readline&quot;&gt;&lt;code&gt;HttpRequest.readline()&lt;/code&gt;&lt;/a&gt;. Accessing the &lt;code&gt;body&lt;/code&gt; attribute &lt;em&gt;after&lt;/em&gt; reading the request with either of these I/O stream methods will produce a &lt;code&gt;RawPostDataException&lt;/code&gt;.</source>
          <target state="translated">您还可以使用带有&lt;a href=&quot;#django.http.HttpRequest.read&quot;&gt; &lt;code&gt;HttpRequest.read()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#django.http.HttpRequest.readline&quot;&gt; &lt;code&gt;HttpRequest.readline()&lt;/code&gt; &lt;/a&gt;的类似文件的接口从 &lt;code&gt;HttpRequest&lt;/code&gt; 中读取内容。使用这些I / O流方法之一读取请求&lt;em&gt;后&lt;/em&gt;访问 &lt;code&gt;body&lt;/code&gt; 属性将产生 &lt;code&gt;RawPostDataException&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="59abebaf879fa69011494146b9b03ae4df2f1656" translate="yes" xml:space="preserve">
          <source>You can also read from an &lt;code&gt;HttpRequest&lt;/code&gt; using a file-like interface. See &lt;a href=&quot;#django.http.HttpRequest.read&quot;&gt;&lt;code&gt;HttpRequest.read()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您也可以使用类似文件的接口从 &lt;code&gt;HttpRequest&lt;/code&gt; 中读取内容。参见&lt;a href=&quot;#django.http.HttpRequest.read&quot;&gt; &lt;code&gt;HttpRequest.read()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="358e1e016f4c5e1b216d58f6b3d2487adfdda693" translate="yes" xml:space="preserve">
          <source>You can also refer to fields on related models with reverse relations through &lt;code&gt;OneToOneField&lt;/code&gt;, &lt;code&gt;ForeignKey&lt;/code&gt; and &lt;code&gt;ManyToManyField&lt;/code&gt; attributes:</source>
          <target state="translated">您还可以通过 &lt;code&gt;OneToOneField&lt;/code&gt; ， &lt;code&gt;ForeignKey&lt;/code&gt; 和 &lt;code&gt;ManyToManyField&lt;/code&gt; 属性引用具有反向关系的相关模型上的字段：</target>
        </trans-unit>
        <trans-unit id="cf74419deb96981bf331ae641c3c209169209cda" translate="yes" xml:space="preserve">
          <source>You can also refer to the reverse direction of a &lt;a href=&quot;fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; in the list of fields passed to &lt;code&gt;select_related&lt;/code&gt; &amp;mdash; that is, you can traverse a &lt;a href=&quot;fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; back to the object on which the field is defined. Instead of specifying the field name, use the &lt;a href=&quot;fields#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt; for the field on the related object.</source>
          <target state="translated">您还可以在传递给 &lt;code&gt;select_related&lt;/code&gt; 的字段列表中引用&lt;a href=&quot;fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt;的相反方向-也就是说，您可以将&lt;a href=&quot;fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt;遍历回到定义该字段的对象。不用指定字段名称，而是将&lt;a href=&quot;fields#django.db.models.ForeignKey.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt;用作相关对象上的字段。</target>
        </trans-unit>
        <trans-unit id="44d64a225b94d82e49720387903fe28b5e41e7c8" translate="yes" xml:space="preserve">
          <source>You can also reset named cycle tags:</source>
          <target state="translated">您还可以重置命名的循环标签。</target>
        </trans-unit>
        <trans-unit id="72bb22034fc55d9fe7fcd59f7f5f498d6fb8b8c0" translate="yes" xml:space="preserve">
          <source>You can also retrieve information about any of the available languages using provided template tags and filters. To get information about a single language, use the &lt;code&gt;{% get_language_info %}&lt;/code&gt; tag:</source>
          <target state="translated">您还可以使用提供的模板标签和过滤器检索有关任何可用语言的信息。要获取有关一种语言的信息，请使用 &lt;code&gt;{% get_language_info %}&lt;/code&gt; 标签：</target>
        </trans-unit>
        <trans-unit id="5d35b9d06ae5e0278f2dffa00f370855a8c09a40" translate="yes" xml:space="preserve">
          <source>You can also run &lt;a href=&quot;../../ref/django-admin#django-admin-compilemessages&quot;&gt;&lt;code&gt;django-admin compilemessages
--settings=path.to.settings&lt;/code&gt;&lt;/a&gt; to make the compiler process all the directories in your &lt;a href=&quot;../../ref/settings#std:setting-LOCALE_PATHS&quot;&gt;&lt;code&gt;LOCALE_PATHS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">您还可以运行&lt;a href=&quot;../../ref/django-admin#django-admin-compilemessages&quot;&gt; &lt;code&gt;django-admin compilemessages --settings=path.to.settings&lt;/code&gt; &lt;/a&gt;以使编译器处理&lt;a href=&quot;../../ref/settings#std:setting-LOCALE_PATHS&quot;&gt; &lt;code&gt;LOCALE_PATHS&lt;/code&gt; &lt;/a&gt;设置中的所有目录。</target>
        </trans-unit>
        <trans-unit id="a3668ee8fd39c171dbcf0d60d880fc823aabfbbe" translate="yes" xml:space="preserve">
          <source>You can also selectively load individual filters or tags from a library, using the &lt;code&gt;from&lt;/code&gt; argument. In this example, the template tags/filters named &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt; will be loaded from &lt;code&gt;somelibrary&lt;/code&gt;:</source>
          <target state="translated">您还可以使用 &lt;code&gt;from&lt;/code&gt; 参数有选择地从库中加载单个过滤器或标签。在此示例中，将从 &lt;code&gt;somelibrary&lt;/code&gt; 加载名为 &lt;code&gt;foo&lt;/code&gt; 和 &lt;code&gt;bar&lt;/code&gt; 的模板标签/过滤器：</target>
        </trans-unit>
        <trans-unit id="92863574021638c7bcb6f1974c94a6214152819d" translate="yes" xml:space="preserve">
          <source>You can also set it up as a &amp;ldquo;catchall&amp;rdquo; pattern. In this case, it is important to place the pattern at the end of the other urlpatterns:</source>
          <target state="translated">您还可以将其设置为&amp;ldquo;大杂烩&amp;rdquo;模式。在这种情况下，将模式放置在其他urlpattern的末尾很重要：</target>
        </trans-unit>
        <trans-unit id="ae24ab21edd0927b8ad705db372cf9e9acabb24c" translate="yes" xml:space="preserve">
          <source>You can also set the HTML &lt;code&gt;id&lt;/code&gt; using &lt;a href=&quot;#django.forms.Widget.attrs&quot;&gt;&lt;code&gt;attrs&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;api#django.forms.BoundField.id_for_label&quot;&gt;&lt;code&gt;BoundField.id_for_label&lt;/code&gt;&lt;/a&gt; for an example.</source>
          <target state="translated">您还可以使用&lt;a href=&quot;#django.forms.Widget.attrs&quot;&gt; &lt;code&gt;attrs&lt;/code&gt; &lt;/a&gt;设置HTML &lt;code&gt;id&lt;/code&gt; 。有关示例，请参见&lt;a href=&quot;api#django.forms.BoundField.id_for_label&quot;&gt; &lt;code&gt;BoundField.id_for_label&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c904338b5060462340e638720b0634cbfaf131e9" translate="yes" xml:space="preserve">
          <source>You can also set this setting to a list of Python paths, for example:</source>
          <target state="translated">您也可以将此设置为Python路径的列表,例如。</target>
        </trans-unit>
        <trans-unit id="8798d55b20978ca71bab3f3bfcd53fa8861acaf0" translate="yes" xml:space="preserve">
          <source>You can also set up custom error reporting by writing a custom piece of &lt;a href=&quot;../topics/http/middleware#exception-middleware&quot;&gt;exception middleware&lt;/a&gt;. If you do write custom error handling, it&amp;rsquo;s a good idea to emulate Django&amp;rsquo;s built-in error handling and only report/log errors if &lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">您还可以通过编写自定义的&lt;a href=&quot;../topics/http/middleware#exception-middleware&quot;&gt;异常中间件&lt;/a&gt;来设置自定义错误报告。如果您确实编写了自定义错误处理，则最好模拟Django的内置错误处理，并且仅当&lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;False&lt;/code&gt; 时才报告/记录错误。</target>
        </trans-unit>
        <trans-unit id="41aa798c4da90dde5e8c060f8494397a792b523d" translate="yes" xml:space="preserve">
          <source>You can also simulate the absence of a setting by deleting it after settings have been overridden, like this:</source>
          <target state="translated">你也可以在设置被覆盖后,通过删除设置来模拟没有设置,比如这样。</target>
        </trans-unit>
        <trans-unit id="43c07ff8b0836ac9263317c191091192caf4b694" translate="yes" xml:space="preserve">
          <source>You can also specify &lt;code&gt;field_classes&lt;/code&gt; to customize the type of fields instantiated by the form.</source>
          <target state="translated">您还可以指定 &lt;code&gt;field_classes&lt;/code&gt; 以自定义表单实例化的字段的类型。</target>
        </trans-unit>
        <trans-unit id="c549e10dfe9791756dd36d8d5b86be228acf9be8" translate="yes" xml:space="preserve">
          <source>You can also specify a field on a related model using the &lt;code&gt;__&lt;/code&gt; lookup, for example:</source>
          <target state="translated">您还可以使用 &lt;code&gt;__&lt;/code&gt; 查找在相关模型上指定字段，例如：</target>
        </trans-unit>
        <trans-unit id="a885d5a64f8e3a531a2b9f54ca9c9e742e9f4f1d" translate="yes" xml:space="preserve">
          <source>You can also specify the name of the &lt;code&gt;GET&lt;/code&gt; field which contains the URL to redirect to after login using &lt;code&gt;redirect_field_name&lt;/code&gt;. By default, the field is called &lt;code&gt;next&lt;/code&gt;.</source>
          <target state="translated">您也可以使用 &lt;code&gt;redirect_field_name&lt;/code&gt; 指定 &lt;code&gt;GET&lt;/code&gt; 字段的名称，该字段包含登录后重定向到的URL 。默认情况下，该字段称为 &lt;code&gt;next&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f817c1b7f8c8bcf34b6be49c17c0a179f220823c" translate="yes" xml:space="preserve">
          <source>You can also subclass the parent&amp;rsquo;s &lt;code&gt;Meta&lt;/code&gt; inner class if you want to change the &lt;code&gt;Meta.fields&lt;/code&gt; or &lt;code&gt;Meta.exclude&lt;/code&gt; lists:</source>
          <target state="translated">如果要更改 &lt;code&gt;Meta.fields&lt;/code&gt; 或 &lt;code&gt;Meta.exclude&lt;/code&gt; 列表，还可以将父级的 &lt;code&gt;Meta&lt;/code&gt; 内部类作为子类：</target>
        </trans-unit>
        <trans-unit id="6c6d25b27cc69dd2e2c3a9f5cbaaafb25be182cb" translate="yes" xml:space="preserve">
          <source>You can also tag a test case:</source>
          <target state="translated">你也可以标记一个测试用例。</target>
        </trans-unit>
        <trans-unit id="8fe3c9ea96e4f329355114544732535cf293f7aa" translate="yes" xml:space="preserve">
          <source>You can also tell your users to put &lt;code&gt;'rock_n_roll.apps.RockNRollConfig'&lt;/code&gt; in their &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting. You can even provide several different &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; subclasses with different behaviors and allow your users to choose one via their &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">您还可以告诉用户将 &lt;code&gt;'rock_n_roll.apps.RockNRollConfig'&lt;/code&gt; 放入其&lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置中。您甚至可以提供几种具有不同行为的不同&lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt;子类，并允许您的用户通过其&lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置选择一个。</target>
        </trans-unit>
        <trans-unit id="3aed1f1e80c18818b95809ab7b8b096ea8cc81dc" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;#django.contrib.admin.ModelAdmin.empty_value_display&quot;&gt;&lt;code&gt;ModelAdmin.empty_value_display&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">您还可以使用&lt;a href=&quot;#django.contrib.admin.ModelAdmin.empty_value_display&quot;&gt; &lt;code&gt;ModelAdmin.empty_value_display&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="d7fc4f43e190c819b98e2217d0857811ccdddccf" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;../../ref/models/relations#django.db.models.fields.related.RelatedManager&quot;&gt;&lt;code&gt;related managers&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">您也可以使用&lt;a href=&quot;../../ref/models/relations#django.db.models.fields.related.RelatedManager&quot;&gt; &lt;code&gt;related managers&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="8cecb326474394ac8769b6a995d7527cdd5fb041" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;../../ref/models/relations#django.db.models.fields.related.RelatedManager.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/models/relations#django.db.models.fields.related.RelatedManager.create&quot;&gt;&lt;code&gt;create()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../../ref/models/relations#django.db.models.fields.related.RelatedManager.set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; to create relationships, as long as you specify &lt;code&gt;through_defaults&lt;/code&gt; for any required fields:</source>
          <target state="translated">您还可以使用&lt;a href=&quot;../../ref/models/relations#django.db.models.fields.related.RelatedManager.add&quot;&gt; &lt;code&gt;add()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../ref/models/relations#django.db.models.fields.related.RelatedManager.create&quot;&gt; &lt;code&gt;create()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../ref/models/relations#django.db.models.fields.related.RelatedManager.set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;创建关系，只要您为任何必填字段指定 &lt;code&gt;through_defaults&lt;/code&gt; 即可：</target>
        </trans-unit>
        <trans-unit id="fe75806a45034a4e626d3ce3c58483059030ccfd" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;expressions&quot;&gt;query expressions&lt;/a&gt;. To order by &lt;code&gt;author&lt;/code&gt; ascending and make null values sort last, use this:</source>
          <target state="translated">您也可以使用&lt;a href=&quot;expressions&quot;&gt;查询表达式&lt;/a&gt;。要按 &lt;code&gt;author&lt;/code&gt; 升序排序并使空值最后排序，请使用以下命令：</target>
        </trans-unit>
        <trans-unit id="79322b11048685016f38757a96634f288bd6e405" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;add()&lt;/code&gt;, &lt;code&gt;create()&lt;/code&gt;, or &lt;code&gt;set()&lt;/code&gt; to create relationships, as long as you specify &lt;code&gt;through_defaults&lt;/code&gt; for any required fields:</source>
          <target state="translated">您还可以使用 &lt;code&gt;add()&lt;/code&gt; ， &lt;code&gt;create()&lt;/code&gt; 或 &lt;code&gt;set()&lt;/code&gt; 创建关系，只要您为任何必填字段指定 &lt;code&gt;through_defaults&lt;/code&gt; 即可：</target>
        </trans-unit>
        <trans-unit id="19c10f05097ad75f7340aeb97dff0a1ba5904bd2" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;add()&lt;/code&gt;, &lt;code&gt;create()&lt;/code&gt;, or &lt;code&gt;set()&lt;/code&gt; to create relationships:</source>
          <target state="translated">您还可以使用 &lt;code&gt;add()&lt;/code&gt; ， &lt;code&gt;create()&lt;/code&gt; 或 &lt;code&gt;set()&lt;/code&gt; 创建关系：</target>
        </trans-unit>
        <trans-unit id="5afab11dde67165486704e54a389fa37903229e9" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;hasattr&lt;/code&gt; to avoid the need for exception catching:</source>
          <target state="translated">您还可以使用 &lt;code&gt;hasattr&lt;/code&gt; 来避免捕获异常：</target>
        </trans-unit>
        <trans-unit id="01d552b55aed661c54c14351dad565f1b1411217" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;push()&lt;/code&gt; as a context manager to ensure a matching &lt;code&gt;pop()&lt;/code&gt; is called.</source>
          <target state="translated">您还可以 &lt;code&gt;push()&lt;/code&gt; 用作上下文管理器，以确保调用了匹配的 &lt;code&gt;pop()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e324c7f6a64be2f1ddb903f3a3ee32eb3031229" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;register&lt;/code&gt; as a function rather than a decorator by passing a callable object (usually a function) as the first argument to &lt;code&gt;register&lt;/code&gt;.</source>
          <target state="translated">您还可以通过将可调用对象（通常是函数）作为 &lt;code&gt;register&lt;/code&gt; 的第一个参数，来将 &lt;code&gt;register&lt;/code&gt; 用作函数而不是装饰器。</target>
        </trans-unit>
        <trans-unit id="7a808b5087972e519c99fcea19d1c7b0acdf7bef" translate="yes" xml:space="preserve">
          <source>You can also use a class with a &lt;code&gt;__call__()&lt;/code&gt; method for more complex or configurable validators. &lt;a href=&quot;#django.core.validators.RegexValidator&quot;&gt;&lt;code&gt;RegexValidator&lt;/code&gt;&lt;/a&gt;, for example, uses this technique. If a class-based validator is used in the &lt;a href=&quot;models/fields#django.db.models.Field.validators&quot;&gt;&lt;code&gt;validators&lt;/code&gt;&lt;/a&gt; model field option, you should make sure it is &lt;a href=&quot;../topics/migrations#migration-serializing&quot;&gt;serializable by the migration framework&lt;/a&gt; by adding &lt;a href=&quot;../topics/migrations#custom-deconstruct-method&quot;&gt;deconstruct()&lt;/a&gt; and &lt;code&gt;__eq__()&lt;/code&gt; methods.</source>
          <target state="translated">您也可以将类与 &lt;code&gt;__call__()&lt;/code&gt; 方法一起使用，以使用更复杂或可配置的验证器。例如，&lt;a href=&quot;#django.core.validators.RegexValidator&quot;&gt; &lt;code&gt;RegexValidator&lt;/code&gt; &lt;/a&gt;使用此技术。如果在&lt;a href=&quot;models/fields#django.db.models.Field.validators&quot;&gt; &lt;code&gt;validators&lt;/code&gt; &lt;/a&gt;模型字段选项中使用了基于类的验证器，则应通过添加&lt;a href=&quot;../topics/migrations#custom-deconstruct-method&quot;&gt;deconstruct（）&lt;/a&gt;和 &lt;code&gt;__eq__()&lt;/code&gt; 方法来确保它可&lt;a href=&quot;../topics/migrations#migration-serializing&quot;&gt;被迁移框架序列化&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fe2c7a8880f6fdf7f01673abb9c7f76f4e8b6ac0" translate="yes" xml:space="preserve">
          <source>You can also use a helper function, &lt;a href=&quot;../ref/utils#django.utils.cache.patch_vary_headers&quot;&gt;&lt;code&gt;django.utils.cache.patch_vary_headers()&lt;/code&gt;&lt;/a&gt;, directly. This function sets, or adds to, the &lt;code&gt;Vary header&lt;/code&gt;. For example:</source>
          <target state="translated">您也可以直接使用辅助函数&lt;a href=&quot;../ref/utils#django.utils.cache.patch_vary_headers&quot;&gt; &lt;code&gt;django.utils.cache.patch_vary_headers()&lt;/code&gt; &lt;/a&gt;。此函数设置或添加到 &lt;code&gt;Vary header&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="3d9b8c21c69e2afc2cf0a806ba25fbcaed001c3d" translate="yes" xml:space="preserve">
          <source>You can also use a literal string as a fallback value in case all passed variables are False:</source>
          <target state="translated">你也可以使用一个字符串作为后备值,以防所有传递的变量都是False。</target>
        </trans-unit>
        <trans-unit id="061480c11a61e35a4959517d5c293ae50fd12467" translate="yes" xml:space="preserve">
          <source>You can also use a queryset instead of a literal list of instances:</source>
          <target state="translated">你也可以使用一个查询集来代替实例的文字列表。</target>
        </trans-unit>
        <trans-unit id="aab5fb5e804a3558a8ca88184a13f9f9761369b6" translate="yes" xml:space="preserve">
          <source>You can also use a queryset to dynamically evaluate the list of values instead of providing a list of literal values:</source>
          <target state="translated">你也可以使用一个查询集来动态评估值列表,而不是提供一个字面值列表。</target>
        </trans-unit>
        <trans-unit id="407bccaeb0f1845fe4166ca14fdc9fe392fcf74d" translate="yes" xml:space="preserve">
          <source>You can also use a serializer object directly:</source>
          <target state="translated">你也可以直接使用序列器对象。</target>
        </trans-unit>
        <trans-unit id="4b8df8582741947a4b0df83aac95428948297715" translate="yes" xml:space="preserve">
          <source>You can also use any &lt;em&gt;other&lt;/em&gt; Python test framework; Django provides an API and tools for that kind of integration. They are described in the &lt;a href=&quot;advanced#other-testing-frameworks&quot;&gt;Using different testing frameworks&lt;/a&gt; section of &lt;a href=&quot;advanced&quot;&gt;Advanced testing topics&lt;/a&gt;.</source>
          <target state="translated">您还可以使用任何&lt;em&gt;其他&lt;/em&gt; Python测试框架；Django提供了用于此类集成的API和工具。在&lt;a href=&quot;advanced&quot;&gt;高级测试主题&lt;/a&gt;的&amp;ldquo; &lt;a href=&quot;advanced#other-testing-frameworks&quot;&gt;使用不同的测试框架&amp;rdquo;&lt;/a&gt;部分中对它们进行了描述。</target>
        </trans-unit>
        <trans-unit id="bb43f78892131ec4008839168f4425ddcd2544f2" translate="yes" xml:space="preserve">
          <source>You can also use dictionary syntax on the response object to query the value of any settings in the HTTP headers. For example, you could determine the content type of a response using &lt;code&gt;response['Content-Type']&lt;/code&gt;.</source>
          <target state="translated">您还可以在响应对象上使用字典语法来查询HTTP标头中任何设置的值。例如，您可以使用 &lt;code&gt;response['Content-Type']&lt;/code&gt; 确定响应的内容类型。</target>
        </trans-unit>
        <trans-unit id="915daf7ba6487f5348a344feb3ffeab0c47e4f2b" translate="yes" xml:space="preserve">
          <source>You can also use enumeration classes to define &lt;code&gt;choices&lt;/code&gt; in a concise way:</source>
          <target state="translated">您还可以使用枚举类以简洁的方式定义 &lt;code&gt;choices&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0c8e322ad3d53e47c9a6419c8ec89125946a4832" translate="yes" xml:space="preserve">
          <source>You can also use filters and various operators in the &lt;a href=&quot;builtins#std:templatetag-if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; tag:</source>
          <target state="translated">您还可以在&lt;a href=&quot;builtins#std:templatetag-if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt;标记中使用过滤器和各种运算符：</target>
        </trans-unit>
        <trans-unit id="79f174bff460472400f76494769bc2b18e659388" translate="yes" xml:space="preserve">
          <source>You can also use filters in the &lt;a href=&quot;#std:templatetag-if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; expression. For example:</source>
          <target state="translated">您也可以在&lt;a href=&quot;#std:templatetag-if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt;表达式中使用过滤器。例如：</target>
        </trans-unit>
        <trans-unit id="1878669a19b656591f023883ce2494fa4eee5261" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;Form.field_order&lt;/code&gt; argument to a &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; to override the field order. If a &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; defines &lt;a href=&quot;#django.forms.Form.field_order&quot;&gt;&lt;code&gt;field_order&lt;/code&gt;&lt;/a&gt;&lt;em&gt;and&lt;/em&gt; you include &lt;code&gt;field_order&lt;/code&gt; when instantiating the &lt;code&gt;Form&lt;/code&gt;, then the latter &lt;code&gt;field_order&lt;/code&gt; will have precedence.</source>
          <target state="translated">您还可以对&lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;使用 &lt;code&gt;Form.field_order&lt;/code&gt; 参数来覆盖字段顺序。如果&lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;定义了&lt;a href=&quot;#django.forms.Form.field_order&quot;&gt; &lt;code&gt;field_order&lt;/code&gt; ,&lt;/a&gt;&lt;em&gt;并且&lt;/em&gt;在实例化 &lt;code&gt;Form&lt;/code&gt; 时包括了 &lt;code&gt;field_order&lt;/code&gt; ，则后一个 &lt;code&gt;field_order&lt;/code&gt; 将具有优先级。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="719e57a410fcf037849d22b4f6b16cf1b497ead8" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;{% get_language_info_list %}&lt;/code&gt; template tag to retrieve information for a list of languages (e.g. active languages as specified in &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt;). See &lt;a href=&quot;#set-language-redirect-view&quot;&gt;the section about the set_language redirect view&lt;/a&gt; for an example of how to display a language selector using &lt;code&gt;{% get_language_info_list %}&lt;/code&gt;.</source>
          <target state="translated">您还可以使用 &lt;code&gt;{% get_language_info_list %}&lt;/code&gt; 模板标记来检索语言列表的信息（例如，&lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt; &lt;code&gt;LANGUAGES&lt;/code&gt; 中&lt;/a&gt;指定的活动语言）。有关如何使用 &lt;code&gt;{% get_language_info_list %}&lt;/code&gt; 显示语言选择器的示例，请参见&lt;a href=&quot;#set-language-redirect-view&quot;&gt;有关set_language重定向视图的部分&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="99dfd6b05badaa8259fb0f5a4631065e390bf071" translate="yes" xml:space="preserve">
          <source>You can also use the double underscore notation to span relationships in an &lt;code&gt;F()&lt;/code&gt; object. An &lt;code&gt;F()&lt;/code&gt; object with a double underscore will introduce any joins needed to access the related object. For example, to retrieve all the entries where the author&amp;rsquo;s name is the same as the blog name, we could issue the query:</source>
          <target state="translated">您还可以使用双下划线符号来扩展 &lt;code&gt;F()&lt;/code&gt; 对象中的关系。具有双下划线的 &lt;code&gt;F()&lt;/code&gt; 对象将引入访问相关对象所需的任何联接。例如，要检索作者姓名与博客名称相同的所有条目，我们可以发出查询：</target>
        </trans-unit>
        <trans-unit id="e437d37bcf26c1bc682e415f71c90111d63af291" translate="yes" xml:space="preserve">
          <source>You can also use the normal join syntax to do related fields of related fields. Suppose we have an additional model to the example above:</source>
          <target state="translated">你也可以用普通的join语法来做相关字段的相关字段。假设我们在上面的例子中多了一个模型。</target>
        </trans-unit>
        <trans-unit id="8f0f7ac5cacbee7e47f189389f677aa6e33df35e" translate="yes" xml:space="preserve">
          <source>You can also use the syntax &lt;code&gt;{% now &quot;Y&quot; as current_year %}&lt;/code&gt; to store the output (as a string) inside a variable. This is useful if you want to use &lt;code&gt;{% now %}&lt;/code&gt; inside a template tag like &lt;a href=&quot;../../topics/i18n/translation#std:templatetag-blocktrans&quot;&gt;&lt;code&gt;blocktrans&lt;/code&gt;&lt;/a&gt; for example:</source>
          <target state="translated">您还可以使用语法 &lt;code&gt;{% now &quot;Y&quot; as current_year %}&lt;/code&gt; 将输出（作为字符串）存储在变量中。如果您想在模板标记（例如&lt;a href=&quot;../../topics/i18n/translation#std:templatetag-blocktrans&quot;&gt; &lt;code&gt;blocktrans&lt;/code&gt; )中&lt;/a&gt;使用 &lt;code&gt;{% now %}&lt;/code&gt; 这将非常有用：</target>
        </trans-unit>
        <trans-unit id="21f9d81b57f650966410d0cd08b39499c63e5ba0" translate="yes" xml:space="preserve">
          <source>You can also use the syntax &lt;code&gt;{% now &quot;Y&quot; as current_year %}&lt;/code&gt; to store the output (as a string) inside a variable. This is useful if you want to use &lt;code&gt;{% now %}&lt;/code&gt; inside a template tag like &lt;a href=&quot;../../topics/i18n/translation#std:templatetag-blocktranslate&quot;&gt;&lt;code&gt;blocktranslate&lt;/code&gt;&lt;/a&gt; for example:</source>
          <target state="translated">您还可以使用语法 &lt;code&gt;{% now &quot;Y&quot; as current_year %}&lt;/code&gt; 将输出（作为字符串）存储在变量中。如果您想在模板标签（例如&lt;a href=&quot;../../topics/i18n/translation#std:templatetag-blocktranslate&quot;&gt; &lt;code&gt;blocktranslate&lt;/code&gt; )中&lt;/a&gt;使用 &lt;code&gt;{% now %}&lt;/code&gt; 这将非常有用：</target>
        </trans-unit>
        <trans-unit id="5f8f9f6f308e487b229068a0d7574221665759bd" translate="yes" xml:space="preserve">
          <source>You can also use this as a context manager:</source>
          <target state="translated">你也可以将其用作上下文管理器。</target>
        </trans-unit>
        <trans-unit id="539d0fd25379972d55bb4b005a6355f0a5760a1e" translate="yes" xml:space="preserve">
          <source>You can also wrap your function in a lambda:</source>
          <target state="translated">你也可以用一个lambda来包装你的函数。</target>
        </trans-unit>
        <trans-unit id="6d9b8be27ab8cf9bde126b29514e8f0805d80f88" translate="yes" xml:space="preserve">
          <source>You can alter the field of &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; instance to change the way it is presented in the form:</source>
          <target state="translated">您可以更改&lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;实例的字段以更改其在表单中的显示方式：</target>
        </trans-unit>
        <trans-unit id="b80b98b8e2f0458f83eabc27e89367d8e27b27a9" translate="yes" xml:space="preserve">
          <source>You can apply GZip compression to individual views using the &lt;a href=&quot;../topics/http/decorators#django.views.decorators.gzip.gzip_page&quot;&gt;&lt;code&gt;gzip_page()&lt;/code&gt;&lt;/a&gt; decorator.</source>
          <target state="translated">您可以使用&lt;a href=&quot;../topics/http/decorators#django.views.decorators.gzip.gzip_page&quot;&gt; &lt;code&gt;gzip_page()&lt;/code&gt; &lt;/a&gt;装饰器将GZip压缩应用于单个视图。</target>
        </trans-unit>
        <trans-unit id="50acaeb7e86f73ac244d307d6a2263e8cc094337" translate="yes" xml:space="preserve">
          <source>You can assign more than one context variable:</source>
          <target state="translated">你可以指定多个上下文变量。</target>
        </trans-unit>
        <trans-unit id="43196f9b7eac3499bdcec9d1f3f9a827687a23d9" translate="yes" xml:space="preserve">
          <source>You can avoid such problems by casting &lt;code&gt;gettext_lazy()&lt;/code&gt; objects to text strings before passing them to non-Django code:</source>
          <target state="translated">您可以通过将 &lt;code&gt;gettext_lazy()&lt;/code&gt; 对象转换为文本字符串，然后再将其传递给非Django代码来避免此类问题：</target>
        </trans-unit>
        <trans-unit id="6706fd13335b8bd87e76dab0718b94c997a7d24f" translate="yes" xml:space="preserve">
          <source>You can avoid this in two ways. First, you can clear the primary key of the instance. If an object has no primary key, Django will treat it as a new object, avoiding any loss of data on the &lt;code&gt;second&lt;/code&gt; database:</source>
          <target state="translated">您可以通过两种方式避免这种情况。首先，您可以清除实例的主键。如果对象没有主键，Django会将其视为新对象，从而避免 &lt;code&gt;second&lt;/code&gt; 数据库上的任何数据丢失：</target>
        </trans-unit>
        <trans-unit id="19a7a87f5a666a186ac0158177dc9b981201c278" translate="yes" xml:space="preserve">
          <source>You can chain other lookups after key lookups:</source>
          <target state="translated">你可以在键查找后连锁其他查找。</target>
        </trans-unit>
        <trans-unit id="2d9c09d15553a53d0014d2ed7192e21b1e5a76b5" translate="yes" xml:space="preserve">
          <source>You can chain together as many filters as you&amp;rsquo;d like. You can write &lt;a href=&quot;../howto/custom-template-tags#howto-writing-custom-template-filters&quot;&gt;custom template filters&lt;/a&gt;. You can write &lt;a href=&quot;../howto/custom-template-tags&quot;&gt;custom template tags&lt;/a&gt;, which run custom Python code behind the scenes.</source>
          <target state="translated">您可以将任意多个过滤器链接在一起。您可以编写&lt;a href=&quot;../howto/custom-template-tags#howto-writing-custom-template-filters&quot;&gt;自定义模板过滤器&lt;/a&gt;。您可以编写&lt;a href=&quot;../howto/custom-template-tags&quot;&gt;自定义模板标签&lt;/a&gt;，该标签在幕后运行自定义Python代码。</target>
        </trans-unit>
        <trans-unit id="dba7e37adc3d08b8c45f79733c61c31a8b1a14d5" translate="yes" xml:space="preserve">
          <source>You can change it, though, using Django&amp;rsquo;s template system. The Django admin is powered by Django itself, and its interfaces use Django&amp;rsquo;s own template system.</source>
          <target state="translated">不过，您可以使用Django的模板系统进行更改。Django管理员由Django本身提供支持，其界面使用Django自己的模板系统。</target>
        </trans-unit>
        <trans-unit id="093fe940f0a4b1ed2c2a05f718d5c2f36fab8ae5" translate="yes" xml:space="preserve">
          <source>You can change the &lt;a href=&quot;../request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; classes used by the middleware by creating a subclass of &lt;a href=&quot;#django.contrib.redirects.middleware.RedirectFallbackMiddleware&quot;&gt;&lt;code&gt;RedirectFallbackMiddleware&lt;/code&gt;&lt;/a&gt; and overriding &lt;code&gt;response_gone_class&lt;/code&gt; and/or &lt;code&gt;response_redirect_class&lt;/code&gt;.</source>
          <target state="translated">您可以通过创建&lt;a href=&quot;#django.contrib.redirects.middleware.RedirectFallbackMiddleware&quot;&gt; &lt;code&gt;RedirectFallbackMiddleware&lt;/code&gt; &lt;/a&gt;的子类并覆盖 &lt;code&gt;response_gone_class&lt;/code&gt; 和/或 &lt;code&gt;response_redirect_class&lt;/code&gt; 来更改中间件使用的&lt;a href=&quot;../request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="889560ddac7621d7cafd51a2c950065e94cfcbe0" translate="yes" xml:space="preserve">
          <source>You can check if the path is set up correctly by typing &lt;code&gt;which psql&lt;/code&gt; at a terminal prompt.</source>
          <target state="translated">您可以通过在终端提示符下键入 &lt;code&gt;which psql&lt;/code&gt; 来检查路径是否正确设置。</target>
        </trans-unit>
        <trans-unit id="9a62480e400cce13d0cba19b67a1dbb0a6cf407e" translate="yes" xml:space="preserve">
          <source>You can choose any name that you want for the branch, &amp;ldquo;ticket_99999&amp;rdquo; is an example. All changes made in this branch will be specific to the ticket and won&amp;rsquo;t affect the main copy of the code that we cloned earlier.</source>
          <target state="translated">您可以为分支选择任何名称，例如&amp;ldquo; ticket_99999&amp;rdquo;。在此分支中进行的所有更改将特定于故障单，并且不会影响我们之前克隆的代码的主副本。</target>
        </trans-unit>
        <trans-unit id="1385467693f36ee016826cbb9453576407fb1f03" translate="yes" xml:space="preserve">
          <source>You can click on the column headers to sort by those values &amp;ndash; except in the case of the &lt;code&gt;was_published_recently&lt;/code&gt; header, because sorting by the output of an arbitrary method is not supported. Also note that the column header for &lt;code&gt;was_published_recently&lt;/code&gt; is, by default, the name of the method (with underscores replaced with spaces), and that each line contains the string representation of the output.</source>
          <target state="translated">您可以单击列标题以这些值进行排序 &lt;code&gt;was_published_recently&lt;/code&gt; 标题除外，因为不支持按任意方法的输出进行排序。还要注意，默认情况下， &lt;code&gt;was_published_recently&lt;/code&gt; 的列标题是方法的名称（下划线用空格替换），并且每一行都包含输出的字符串表示形式。</target>
        </trans-unit>
        <trans-unit id="5b2c34a81955b60f681a3dd23cc8775f5827bfb2" translate="yes" xml:space="preserve">
          <source>You can close the connection to your cache with &lt;code&gt;close()&lt;/code&gt; if implemented by the cache backend.</source>
          <target state="translated">如果由缓存后端实现，则可以使用 &lt;code&gt;close()&lt;/code&gt; 关闭与缓存的连接。</target>
        </trans-unit>
        <trans-unit id="7500502860ca0816c9c1bef96579a9e9f8be1fb1" translate="yes" xml:space="preserve">
          <source>You can combine &lt;code&gt;date&lt;/code&gt; with the &lt;a href=&quot;#std:templatefilter-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; filter to render a full representation of a &lt;code&gt;datetime&lt;/code&gt; value. E.g.:</source>
          <target state="translated">您可以将 &lt;code&gt;date&lt;/code&gt; 与&lt;a href=&quot;#std:templatefilter-time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;过滤器渲染的完整表示 &lt;code&gt;datetime&lt;/code&gt; 值。例如：</target>
        </trans-unit>
        <trans-unit id="f1e17fbfbcc022d918835fb90481ebf453c5ac8f" translate="yes" xml:space="preserve">
          <source>You can compose statements of arbitrary complexity by combining &lt;code&gt;Q&lt;/code&gt; objects with the &lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;|&lt;/code&gt; operators and use parenthetical grouping. Also, &lt;code&gt;Q&lt;/code&gt; objects can be negated using the &lt;code&gt;~&lt;/code&gt; operator, allowing for combined lookups that combine both a normal query and a negated (&lt;code&gt;NOT&lt;/code&gt;) query:</source>
          <target state="translated">通过将 &lt;code&gt;Q&lt;/code&gt; 对象与 &lt;code&gt;&amp;amp;&lt;/code&gt; 和 &lt;code&gt;|&lt;/code&gt; 组合在一起，可以组成任意复杂度的语句。运算符并使用括号分组。同样，可以使用 &lt;code&gt;~&lt;/code&gt; 运算符来否定 &lt;code&gt;Q&lt;/code&gt; 对象，从而允许结合了常规查询和否定（ &lt;code&gt;NOT&lt;/code&gt; ）查询的组合查找：</target>
        </trans-unit>
        <trans-unit id="49e3ab471c0e0783a0461541ebe6cb5ad7731f68" translate="yes" xml:space="preserve">
          <source>You can control downstream caches in other ways as well (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7234.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 7234&lt;/strong&gt;&lt;/a&gt; for details on HTTP caching). For example, even if you don&amp;rsquo;t use Django&amp;rsquo;s server-side cache framework, you can still tell clients to cache a view for a certain amount of time with the &lt;a href=&quot;https://tools.ietf.org/html/rfc7234.html#section-5.2.2.8&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;max-age&lt;/strong&gt;&lt;/a&gt; directive:</source>
          <target state="translated">您还可以通过其他方式控制下游缓存（有关HTTP缓存的详细信息，请参阅&lt;a href=&quot;https://tools.ietf.org/html/rfc7234.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 7234&lt;/strong&gt;&lt;/a&gt;）。例如，即使您不使用Django的服务器端缓存框架，您仍然可以使用&lt;a href=&quot;https://tools.ietf.org/html/rfc7234.html#section-5.2.2.8&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;max-age&lt;/strong&gt;&lt;/a&gt;指令告诉客户端将视图缓存一定的时间：</target>
        </trans-unit>
        <trans-unit id="1b0a89971ceb8dbe845fd755418d85e0cbd0748f" translate="yes" xml:space="preserve">
          <source>You can control whether the session framework uses browser-length sessions vs. persistent sessions with the &lt;a href=&quot;../../ref/settings#std:setting-SESSION_EXPIRE_AT_BROWSER_CLOSE&quot;&gt;&lt;code&gt;SESSION_EXPIRE_AT_BROWSER_CLOSE&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">您可以通过&lt;a href=&quot;../../ref/settings#std:setting-SESSION_EXPIRE_AT_BROWSER_CLOSE&quot;&gt; &lt;code&gt;SESSION_EXPIRE_AT_BROWSER_CLOSE&lt;/code&gt; &lt;/a&gt;设置控制会话框架是使用浏览器长度会话还是持久性会话。</target>
        </trans-unit>
        <trans-unit id="0a19292a876da906a003668fec46a95e9991ae8b" translate="yes" xml:space="preserve">
          <source>You can convert a normal &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt; to any of the subclasses: change the base class of your test from &lt;code&gt;unittest.TestCase&lt;/code&gt; to the subclass. All of the standard Python unit test functionality will be available, and it will be augmented with some useful additions as described in each section below.</source>
          <target state="translated">您可以将普通的&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt;转换为任何子类：将测试的基类从 &lt;code&gt;unittest.TestCase&lt;/code&gt; 更改为子类。所有标准的Python单元测试功能都将可用，并将通过一些有用的补充来增强功能，如以下各节所述。</target>
        </trans-unit>
        <trans-unit id="3f48c825823a39977b7ea9acac5fc4e84256a021" translate="yes" xml:space="preserve">
          <source>You can create a PostgreSQL extension in your database using a migration file. This example creates an hstore extension, but the same principles apply for other extensions.</source>
          <target state="translated">你可以使用迁移文件在数据库中创建一个PostgreSQL扩展。这个例子创建了一个hstore扩展,但同样的原理也适用于其他扩展。</target>
        </trans-unit>
        <trans-unit id="b4758528db78afc5b414299c5a85a46a2e40cc56" translate="yes" xml:space="preserve">
          <source>You can create a pull request by visiting the &lt;a href=&quot;https://github.com/django/django/&quot;&gt;Django GitHub page&lt;/a&gt;. You&amp;rsquo;ll see your branch under &amp;ldquo;Your recently pushed branches&amp;rdquo;. Click &amp;ldquo;Compare &amp;amp; pull request&amp;rdquo; next to it.</source>
          <target state="translated">您可以通过访问&lt;a href=&quot;https://github.com/django/django/&quot;&gt;Django GitHub页面&lt;/a&gt;创建拉取请求。您将在&amp;ldquo;您最近推送的分支&amp;rdquo;下看到您的分支。点击旁边的&amp;ldquo;比较并提取请求&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="d392e5b287166675248a1fa4972a37d1f7842ce0" translate="yes" xml:space="preserve">
          <source>You can create forms from a given model using the standalone function &lt;a href=&quot;../../ref/forms/models#django.forms.models.modelform_factory&quot;&gt;&lt;code&gt;modelform_factory()&lt;/code&gt;&lt;/a&gt;, instead of using a class definition. This may be more convenient if you do not have many customizations to make:</source>
          <target state="translated">您可以使用独立函数&lt;a href=&quot;../../ref/forms/models#django.forms.models.modelform_factory&quot;&gt; &lt;code&gt;modelform_factory()&lt;/code&gt; &lt;/a&gt;从给定模型创建表单，而不是使用类定义。如果您没有太多自定义项，这可能会更方便：</target>
        </trans-unit>
        <trans-unit id="06a429c724a3a8d6fdc8d61c747bc54012b518e5" translate="yes" xml:space="preserve">
          <source>You can create multiple instances of the admin site on the same Django-powered website. Create multiple instances of &lt;code&gt;AdminSite&lt;/code&gt; and place each one at a different URL.</source>
          <target state="translated">您可以在同一Django支持的网站上创建管理网站的多个实例。创建 &lt;code&gt;AdminSite&lt;/code&gt; 的多个实例，并将每个实例放置在不同的URL。</target>
        </trans-unit>
        <trans-unit id="ee639f0e42c79c1a2da9a4df90ab790ddc8839dd" translate="yes" xml:space="preserve">
          <source>You can create your own aggregate functions, too. At a minimum, you need to define &lt;code&gt;function&lt;/code&gt;, but you can also completely customize the SQL that is generated. Here&amp;rsquo;s a brief example:</source>
          <target state="translated">您也可以创建自己的聚合函数。至少需要定义 &lt;code&gt;function&lt;/code&gt; ，但是您也可以完全自定义生成的SQL。这是一个简单的示例：</target>
        </trans-unit>
        <trans-unit id="348f56868c2e0df997214174e22691a59b7dffc9" translate="yes" xml:space="preserve">
          <source>You can customize the instance by overriding this method and calling &lt;code&gt;super()&lt;/code&gt; with &lt;code&gt;kwargs&lt;/code&gt; of &lt;a href=&quot;https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; parameters.</source>
          <target state="translated">您可以通过重写此方法并调用定制实例 &lt;code&gt;super()&lt;/code&gt; 与 &lt;code&gt;kwargs&lt;/code&gt; 的&lt;a href=&quot;https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;参数。</target>
        </trans-unit>
        <trans-unit id="8aab006c176a2f246d1125662ae3d3baf13e4ddd" translate="yes" xml:space="preserve">
          <source>You can defer loading of fields in related models (if the related models are loading via &lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt;&lt;code&gt;select_related()&lt;/code&gt;&lt;/a&gt;) by using the standard double-underscore notation to separate related fields:</source>
          <target state="translated">您可以通过使用标准的双下划线符号分隔相关字段来推迟相关模型中字段的加载（如果相关模型是通过&lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt; &lt;code&gt;select_related()&lt;/code&gt; &lt;/a&gt;加载的）：</target>
        </trans-unit>
        <trans-unit id="c1b6fcbea6fba504fba8d70201ab01d4cb2c7880" translate="yes" xml:space="preserve">
          <source>You can define explicit SQL &lt;code&gt;WHERE&lt;/code&gt; clauses &amp;mdash; perhaps to perform non-explicit joins &amp;mdash; by using &lt;code&gt;where&lt;/code&gt;. You can manually add tables to the SQL &lt;code&gt;FROM&lt;/code&gt; clause by using &lt;code&gt;tables&lt;/code&gt;.</source>
          <target state="translated">您可以定义明确的SQL &lt;code&gt;WHERE&lt;/code&gt; 子句-也许是为了执行非明确连接-通过使用 &lt;code&gt;where&lt;/code&gt; 。您可以使用 &lt;code&gt;tables&lt;/code&gt; 将表手动添加到SQL &lt;code&gt;FROM&lt;/code&gt; 子句中。</target>
        </trans-unit>
        <trans-unit id="9d6038d95e0541d471bca8d806ccd964cfcc57b5" translate="yes" xml:space="preserve">
          <source>You can delete keys explicitly with &lt;code&gt;delete()&lt;/code&gt; to clear the cache for a particular object:</source>
          <target state="translated">您可以使用 &lt;code&gt;delete()&lt;/code&gt; 显式删除键，以清除特定对象的缓存：</target>
        </trans-unit>
        <trans-unit id="c71bc46c7446b75662ea4d1f8d3cd3cf2603d7a4" translate="yes" xml:space="preserve">
          <source>You can delete using a JOIN in the query:</source>
          <target state="translated">你可以在查询中使用JOIN删除。</target>
        </trans-unit>
        <trans-unit id="c732b1e46aed4b370654d212e2ddf3852efee55a" translate="yes" xml:space="preserve">
          <source>You can deliberately choose the &lt;em&gt;same URL name&lt;/em&gt; as another application if you want to override a view. For example, a common use case is to override the &lt;a href=&quot;../auth/default#django.contrib.auth.views.LoginView&quot;&gt;&lt;code&gt;LoginView&lt;/code&gt;&lt;/a&gt;. Parts of Django and most third-party apps assume that this view has a URL pattern with the name &lt;code&gt;login&lt;/code&gt;. If you have a custom login view and give its URL the name &lt;code&gt;login&lt;/code&gt;, &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; will find your custom view as long as it&amp;rsquo;s in &lt;code&gt;urlpatterns&lt;/code&gt; after &lt;code&gt;django.contrib.auth.urls&lt;/code&gt; is included (if that&amp;rsquo;s included at all).</source>
          <target state="translated">如果要覆盖视图，可以故意选择&lt;em&gt;与&lt;/em&gt;另一个应用程序&lt;em&gt;相同的URL名称&lt;/em&gt;。例如，一个常见的用例是覆盖&lt;a href=&quot;../auth/default#django.contrib.auth.views.LoginView&quot;&gt; &lt;code&gt;LoginView&lt;/code&gt; &lt;/a&gt;。 Django和大多数第三方应用程序的某些部分假定此视图具有名称为 &lt;code&gt;login&lt;/code&gt; 的URL模式。如果你有一个自定义登录查看，并给它的URL的名字 &lt;code&gt;login&lt;/code&gt; ，&lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt;会发现您的自定义视图，只要它在 &lt;code&gt;urlpatterns&lt;/code&gt; 后 &lt;code&gt;django.contrib.auth.urls&lt;/code&gt; 包括（如果这是包含在所有）。</target>
        </trans-unit>
        <trans-unit id="3a0060243dcf3009d5ef444a5e7fd808f173cb9b" translate="yes" xml:space="preserve">
          <source>You can disable the creation of savepoints for inner blocks by setting the &lt;code&gt;savepoint&lt;/code&gt; argument to &lt;code&gt;False&lt;/code&gt;. If an exception occurs, Django will perform the rollback when exiting the first parent block with a savepoint if there is one, and the outermost block otherwise. Atomicity is still guaranteed by the outer transaction. This option should only be used if the overhead of savepoints is noticeable. It has the drawback of breaking the error handling described above.</source>
          <target state="translated">您可以通过将 &lt;code&gt;savepoint&lt;/code&gt; 参数设置为 &lt;code&gt;False&lt;/code&gt; 来禁用内部块的保存点的创建。如果发生异常，当退出带有保存点的第一个父块时，Django将执行回滚，否则返回最外层的块。外部交易仍可确保原子性。仅当保存点的开销明显时，才应使用此选项。它具有破坏上述错误处理的缺点。</target>
        </trans-unit>
        <trans-unit id="2fb1f1cc32d452424b94a5732876b07d598ec9d7" translate="yes" xml:space="preserve">
          <source>You can do it like this:</source>
          <target state="translated">你可以这样做。</target>
        </trans-unit>
        <trans-unit id="5a52e51f45dd5899727849babae2a0ddb38658bc" translate="yes" xml:space="preserve">
          <source>You can do so by wrapping the view function with &lt;code&gt;cache_page&lt;/code&gt; when you refer to it in the URLconf. Here&amp;rsquo;s the old URLconf from earlier:</source>
          <target state="translated">您可以通过在URLconf中引用视图函数时将其与 &lt;code&gt;cache_page&lt;/code&gt; 包装在一起来实现。这是之前的旧版URLconf：</target>
        </trans-unit>
        <trans-unit id="0d835da88c5d179d0b2c5d75c54dec8645abae4c" translate="yes" xml:space="preserve">
          <source>You can edit the books authored by an author on the author page. You add inlines to a model by specifying them in a &lt;code&gt;ModelAdmin.inlines&lt;/code&gt;:</source>
          <target state="translated">您可以在作者页面上编辑作者创作的书籍。您可以通过在 &lt;code&gt;ModelAdmin.inlines&lt;/code&gt; 中指定内联线来向模型添加内联线：</target>
        </trans-unit>
        <trans-unit id="3016db5eb19544d025be1a8b7268ea97ec20a0c2" translate="yes" xml:space="preserve">
          <source>You can enable this loader by setting &lt;a href=&quot;../settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt;&lt;code&gt;APP_DIRS&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt;:</source>
          <target state="translated">您可以通过将&lt;a href=&quot;../settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt; &lt;code&gt;APP_DIRS&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; 来启用此加载程序：</target>
        </trans-unit>
        <trans-unit id="de79d0b2607f7d5a145f930159362536d7b65111" translate="yes" xml:space="preserve">
          <source>You can evaluate a &lt;code&gt;QuerySet&lt;/code&gt; in the following ways:</source>
          <target state="translated">您可以通过以下方式评估 &lt;code&gt;QuerySet&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="da1b0330bf3f3cef0c75fc37e89d40294848a6fc" translate="yes" xml:space="preserve">
          <source>You can even change the encoding after having accessed &lt;code&gt;request.GET&lt;/code&gt; or &lt;code&gt;request.POST&lt;/code&gt;, and all subsequent accesses will use the new encoding.</source>
          <target state="translated">您甚至可以在访问 &lt;code&gt;request.GET&lt;/code&gt; 或 &lt;code&gt;request.POST&lt;/code&gt; 之后更改编码，并且所有后续访问都将使用新的编码。</target>
        </trans-unit>
        <trans-unit id="d713cfacd8ce578e0d97c05dc6d3052dc947a818" translate="yes" xml:space="preserve">
          <source>You can even pre-generate the JavaScript catalog as part of your deployment procedure and serve it as a static file. This radical technique is implemented in &lt;a href=&quot;https://django-statici18n.readthedocs.io/en/latest/&quot;&gt;django-statici18n&lt;/a&gt;.</source>
          <target state="translated">您甚至可以在部署过程中预先生成JavaScript目录，并将其作为静态文件使用。此基本技术在&lt;a href=&quot;https://django-statici18n.readthedocs.io/en/latest/&quot;&gt;django-statici18n中实现&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9f8472285bb51c529d792962f29746b546a94cfc" translate="yes" xml:space="preserve">
          <source>You can extend the session engines, but doing so with database-backed session engines generally requires some extra effort (see the next section for details).</source>
          <target state="translated">你可以扩展会话引擎,但使用数据库支持的会话引擎这样做通常需要一些额外的努力(详见下一节)。</target>
        </trans-unit>
        <trans-unit id="eeac7675dab6dd869a12c235b67469ee8b5c363a" translate="yes" xml:space="preserve">
          <source>You can filter empty values using &lt;code&gt;EmptyFieldListFilter&lt;/code&gt;, which can filter on both empty strings and nulls, depending on what the field allows to store:</source>
          <target state="translated">您可以使用 &lt;code&gt;EmptyFieldListFilter&lt;/code&gt; 过滤空值，该字段可以过滤空字符串和空值，具体取决于字段允许存储的内容：</target>
        </trans-unit>
        <trans-unit id="7f749123281393780ec0d8e9612ffc235641f0b1" translate="yes" xml:space="preserve">
          <source>You can follow foreign keys in a similar way to querying them. If you have the following models:</source>
          <target state="translated">你可以用类似于查询外键的方式来跟踪外键。如果你有以下模型。</target>
        </trans-unit>
        <trans-unit id="13aae5d47e0aedbc3d374d151cbf104b7f4aa090" translate="yes" xml:space="preserve">
          <source>You can get and set via a foreign-key attribute. As you may expect, changes to the foreign key aren&amp;rsquo;t saved to the database until you call &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt;. Example:</source>
          <target state="translated">您可以通过外键属性获取和设置。如您所料，对外键的更改不会保存到数据库中，直到您调用&lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;为止。例：</target>
        </trans-unit>
        <trans-unit id="2cd47eeef091e44d00c6f4e3584f8f6843712304" translate="yes" xml:space="preserve">
          <source>You can get the name of the current time zone using the &lt;code&gt;get_current_timezone&lt;/code&gt; tag:</source>
          <target state="translated">您可以使用 &lt;code&gt;get_current_timezone&lt;/code&gt; 标记获取当前时区的名称：</target>
        </trans-unit>
        <trans-unit id="cf4b95e934f3445d9539d37663d1a45d3a94ba5a" translate="yes" xml:space="preserve">
          <source>You can get/set geometry components using standard Python indexing techniques. However, what is returned depends on the geometry type of the object. For example, indexing on a &lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt;&lt;code&gt;LineString&lt;/code&gt;&lt;/a&gt; returns a coordinate tuple:</source>
          <target state="translated">您可以使用标准Python索引技术来获取/设置几何图形组件。但是，返回的内容取决于对象的几何类型。例如，在&lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt; &lt;code&gt;LineString&lt;/code&gt; &lt;/a&gt;上建立索引将返回一个坐标元组：</target>
        </trans-unit>
        <trans-unit id="d4974682a1670f11df5f908a7d73b594d9b3ae98" translate="yes" xml:space="preserve">
          <source>You can give your models &lt;a href=&quot;#custom-permissions&quot;&gt;custom permissions&lt;/a&gt; that can be checked through Django&amp;rsquo;s authorization system.</source>
          <target state="translated">您可以为模型赋予&lt;a href=&quot;#custom-permissions&quot;&gt;自定义权限&lt;/a&gt;，可以通过Django的授权系统对其进行检查。</target>
        </trans-unit>
        <trans-unit id="139a20bc99bb7c4946c169f1f4a8666882a75cc4" translate="yes" xml:space="preserve">
          <source>You can hook into the CSV-generation API by passing &lt;code&gt;response&lt;/code&gt; as the first argument to &lt;code&gt;csv.writer&lt;/code&gt;. The &lt;code&gt;csv.writer&lt;/code&gt; function expects a file-like object, and &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; objects fit the bill.</source>
          <target state="translated">您可以通过将 &lt;code&gt;response&lt;/code&gt; 作为第一个参数传递给 &lt;code&gt;csv.writer&lt;/code&gt; 来加入 CSV代API 。该 &lt;code&gt;csv.writer&lt;/code&gt; 函数需要一个类似文件的对象，&lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; 对象&lt;/a&gt;对象符合该法案。</target>
        </trans-unit>
        <trans-unit id="1a4b42d8da6932419fcfd15e761c94f69a7ce968" translate="yes" xml:space="preserve">
          <source>You can hook into the ReportLab API: The same buffer passed as the first argument to &lt;code&gt;canvas.Canvas&lt;/code&gt; can be fed to the &lt;a href=&quot;../ref/request-response#django.http.FileResponse&quot;&gt;&lt;code&gt;FileResponse&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">您可以连接到ReportLab API：与 &lt;code&gt;canvas.Canvas&lt;/code&gt; 的第一个参数传递的缓冲区相同。可以将Canvas馈送到&lt;a href=&quot;../ref/request-response#django.http.FileResponse&quot;&gt; &lt;code&gt;FileResponse&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="7477188d83fde163e14417b378688bdfc8ad014a" translate="yes" xml:space="preserve">
          <source>You can improve that by giving that method (in &lt;code&gt;polls/models.py&lt;/code&gt;) a few attributes, as follows:</source>
          <target state="translated">您可以通过为该方法（在 &lt;code&gt;polls/models.py&lt;/code&gt; 中）提供一些属性来改进该属性，如下所示：</target>
        </trans-unit>
        <trans-unit id="e446d0bbe429da1de16972b0d90351fb95e14c7d" translate="yes" xml:space="preserve">
          <source>You can install Daphne with &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="translated">您可以使用 &lt;code&gt;pip&lt;/code&gt; 安装Daphne ：</target>
        </trans-unit>
        <trans-unit id="b2310ee32fcbb242051d9e068080c227f45a6e65" translate="yes" xml:space="preserve">
          <source>You can install Hypercorn with &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="translated">您可以使用 &lt;code&gt;pip&lt;/code&gt; 安装Hypercorn ：</target>
        </trans-unit>
        <trans-unit id="0ced5f834fe207cad8796a0c5f9bce4fc0c7824d" translate="yes" xml:space="preserve">
          <source>You can install Uvicorn with &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="translated">您可以使用 &lt;code&gt;pip&lt;/code&gt; 安装Uvicorn ：</target>
        </trans-unit>
        <trans-unit id="e4e6d32ee1c0a89d36e6b394a7235b5e4d4c0977" translate="yes" xml:space="preserve">
          <source>You can iterate over each feature in the layer and extract information from both the feature&amp;rsquo;s geometry (accessed via the &lt;code&gt;geom&lt;/code&gt; attribute) as well as the feature&amp;rsquo;s attribute fields (whose &lt;strong&gt;values&lt;/strong&gt; are accessed via &lt;code&gt;get()&lt;/code&gt; method):</source>
          <target state="translated">您可以遍历图层中的每个要素，并从要素的几何图形（通过 &lt;code&gt;geom&lt;/code&gt; 属性访问）以及要素的属性字段（其&lt;strong&gt;值&lt;/strong&gt;通过 &lt;code&gt;get()&lt;/code&gt; 方法访问）中提取信息：</target>
        </trans-unit>
        <trans-unit id="af948b7bb1614ab40380826ee1759eec1f009079" translate="yes" xml:space="preserve">
          <source>You can let Django serialize your own custom class instances by giving the class a &lt;code&gt;deconstruct()&lt;/code&gt; method. It takes no arguments, and should return a tuple of three things &lt;code&gt;(path, args, kwargs)&lt;/code&gt;:</source>
          <target state="translated">您可以让Django通过给类提供 &lt;code&gt;deconstruct()&lt;/code&gt; 方法来序列化自己的自定义类实例。它不带任何参数，并且应返回三元组 &lt;code&gt;(path, args, kwargs)&lt;/code&gt; 的元组：</target>
        </trans-unit>
        <trans-unit id="e19a618750a1bfdfaca84da0a4ed31ecc99e1d7e" translate="yes" xml:space="preserve">
          <source>You can limit the choices of a related model to the objects involved in that relation using &lt;code&gt;RelatedOnlyFieldListFilter&lt;/code&gt;:</source>
          <target state="translated">您可以使用 &lt;code&gt;RelatedOnlyFieldListFilter&lt;/code&gt; 将相关模型的选择限制为该关系中涉及的对象：</target>
        </trans-unit>
        <trans-unit id="5e26888aebe44ae43040f2f0ee6b1cea71855186" translate="yes" xml:space="preserve">
          <source>You can load data by calling &lt;a href=&quot;../ref/django-admin#django-admin-loaddata&quot;&gt;&lt;code&gt;manage.py loaddata&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;fixturename&amp;gt;&lt;/code&gt;, where &lt;code&gt;&amp;lt;fixturename&amp;gt;&lt;/code&gt; is the name of the fixture file you&amp;rsquo;ve created. Each time you run &lt;a href=&quot;../ref/django-admin#django-admin-loaddata&quot;&gt;&lt;code&gt;loaddata&lt;/code&gt;&lt;/a&gt;, the data will be read from the fixture and re-loaded into the database. Note this means that if you change one of the rows created by a fixture and then run &lt;a href=&quot;../ref/django-admin#django-admin-loaddata&quot;&gt;&lt;code&gt;loaddata&lt;/code&gt;&lt;/a&gt; again, you&amp;rsquo;ll wipe out any changes you&amp;rsquo;ve made.</source>
          <target state="translated">您可以通过调用&lt;a href=&quot;../ref/django-admin#django-admin-loaddata&quot;&gt; &lt;code&gt;manage.py loaddata&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;fixturename&amp;gt;&lt;/code&gt; 来加载数据，其中 &lt;code&gt;&amp;lt;fixturename&amp;gt;&lt;/code&gt; 是您创建的夹具文件的名称。每次运行&lt;a href=&quot;../ref/django-admin#django-admin-loaddata&quot;&gt; &lt;code&gt;loaddata&lt;/code&gt; 时&lt;/a&gt;，将从夹具读取数据并将其重新加载到数据库中。请注意，这意味着，如果您更改了灯具创建的行之一，然后再次运行&lt;a href=&quot;../ref/django-admin#django-admin-loaddata&quot;&gt; &lt;code&gt;loaddata&lt;/code&gt; &lt;/a&gt;，则将清除所做的所有更改。</target>
        </trans-unit>
        <trans-unit id="420a1320795aacabf4e4de6b076180923d6b7cf0" translate="yes" xml:space="preserve">
          <source>You can loop over a list in reverse by using &lt;code&gt;{% for obj in list reversed %}&lt;/code&gt;.</source>
          <target state="translated">您可以使用 &lt;code&gt;{% for obj in list reversed %}&lt;/code&gt; 反向列表％}中的obj来反向循环列表。</target>
        </trans-unit>
        <trans-unit id="9f5cf279c4a4bf7339b672230bf9d06ccea15d42" translate="yes" xml:space="preserve">
          <source>You can make cached properties of methods. For example, if you had an expensive &lt;code&gt;get_friends()&lt;/code&gt; method and wanted to allow calling it without retrieving the cached value, you could write:</source>
          <target state="translated">您可以使方法的缓存属性。例如，如果您有一个昂贵的 &lt;code&gt;get_friends()&lt;/code&gt; 方法，并且希望允许在不获取缓存值的情况下调用它，则可以编写：</target>
        </trans-unit>
        <trans-unit id="a3ff5361619ce05e3d87a3f55f22011f8578a826" translate="yes" xml:space="preserve">
          <source>You can make multiple calls to &lt;code&gt;defer()&lt;/code&gt;. Each call adds new fields to the deferred set:</source>
          <target state="translated">您可以多次调用 &lt;code&gt;defer()&lt;/code&gt; 。每个调用都将新字段添加到延迟集中：</target>
        </trans-unit>
        <trans-unit id="cbfb8f4570c91455e3ae3834d574bfede153ffb2" translate="yes" xml:space="preserve">
          <source>You can make your application load this &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; subclass by default as follows:</source>
          <target state="translated">您可以默认使您的应用程序加载此&lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt;子类，如下所示：</target>
        </trans-unit>
        <trans-unit id="224e2acbf4aa7ffde6671659276aedd929e463bb" translate="yes" xml:space="preserve">
          <source>You can mark names of &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; relationship as translatable by using their &lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name&quot;&gt;&lt;code&gt;verbose_name&lt;/code&gt;&lt;/a&gt; options:</source>
          <target state="translated">您可以使用它们的&lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name&quot;&gt; &lt;code&gt;verbose_name&lt;/code&gt; &lt;/a&gt;选项将&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt;关系的名称标记为可翻译的：</target>
        </trans-unit>
        <trans-unit id="613dab5dcda6b04d0f7b6d9fd5e14cedd25f0f0f" translate="yes" xml:space="preserve">
          <source>You can mix variables and strings:</source>
          <target state="translated">你可以混合变量和字符串。</target>
        </trans-unit>
        <trans-unit id="22edb8e58a24accde9832180b7aa1332d5b84538" translate="yes" xml:space="preserve">
          <source>You can modify variables for display by using &lt;strong&gt;filters&lt;/strong&gt;.</source>
          <target state="translated">您可以使用&lt;strong&gt;过滤器&lt;/strong&gt;修改变量以进行显示。</target>
        </trans-unit>
        <trans-unit id="0f665266c7c2e31fa4886dc01a85ee285a5ce5f6" translate="yes" xml:space="preserve">
          <source>You can namespace static assets in &lt;a href=&quot;../../ref/settings#std:setting-STATICFILES_DIRS&quot;&gt;&lt;code&gt;STATICFILES_DIRS&lt;/code&gt;&lt;/a&gt; by specifying &lt;a href=&quot;../../ref/settings#staticfiles-dirs-prefixes&quot;&gt;prefixes&lt;/a&gt;.</source>
          <target state="translated">您可以通过指定&lt;a href=&quot;../../ref/settings#staticfiles-dirs-prefixes&quot;&gt;前缀&lt;/a&gt;在&lt;a href=&quot;../../ref/settings#std:setting-STATICFILES_DIRS&quot;&gt; &lt;code&gt;STATICFILES_DIRS&lt;/code&gt; 中&lt;/a&gt;为静态资产命名空间。</target>
        </trans-unit>
        <trans-unit id="7a590f6904fd512449629ea5b9a8ab9c65d5503a" translate="yes" xml:space="preserve">
          <source>You can obtain these in template code by using:</source>
          <target state="translated">你可以通过使用模板代码获得这些。</target>
        </trans-unit>
        <trans-unit id="4f51988e5c5475b42b6ab865943dac273a8ddf38" translate="yes" xml:space="preserve">
          <source>You can of course pass through keyword arguments to &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt;&lt;code&gt;as_view()&lt;/code&gt;&lt;/a&gt; in the same way you would in your URLconf, such as if you wanted the &lt;code&gt;AuthorInterest&lt;/code&gt; behavior to also appear at another URL but using a different template:</source>
          <target state="translated">当然，您可以以与在URLconf中相同的方式，将关键字参数传递给&lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt; &lt;code&gt;as_view()&lt;/code&gt; &lt;/a&gt;，例如，如果您希望 &lt;code&gt;AuthorInterest&lt;/code&gt; 行为也出现在另一个URL上，但使用不同的模板：</target>
        </trans-unit>
        <trans-unit id="c70cc7d82849c2eb5eebc8b89af49e3f450e636e" translate="yes" xml:space="preserve">
          <source>You can often avoid using raw SQL to compute annotations by instead using a &lt;a href=&quot;../../ref/models/expressions#func-expressions&quot;&gt;Func() expression&lt;/a&gt;.</source>
          <target state="translated">您通常可以通过使用&lt;a href=&quot;../../ref/models/expressions#func-expressions&quot;&gt;Func（）表达式&lt;/a&gt;来避免使用原始SQL来计算注释。</target>
        </trans-unit>
        <trans-unit id="51213ada893073432329bdb30fdc9f0b199b7d62" translate="yes" xml:space="preserve">
          <source>You can only modify upload handlers &lt;em&gt;before&lt;/em&gt; accessing &lt;code&gt;request.POST&lt;/code&gt; or &lt;code&gt;request.FILES&lt;/code&gt; &amp;ndash; it doesn&amp;rsquo;t make sense to change upload handlers after upload handling has already started. If you try to modify &lt;code&gt;request.upload_handlers&lt;/code&gt; after reading from &lt;code&gt;request.POST&lt;/code&gt; or &lt;code&gt;request.FILES&lt;/code&gt; Django will throw an error.</source>
          <target state="translated">您只能&lt;em&gt;在&lt;/em&gt;访问 &lt;code&gt;request.POST&lt;/code&gt; 或 &lt;code&gt;request.FILES&lt;/code&gt; &lt;em&gt;之前&lt;/em&gt;修改上载处理程序&amp;ndash;在开始上载处理后更改上载处理程序是没有意义的。如果您在从 &lt;code&gt;request.POST&lt;/code&gt; 或 &lt;code&gt;request.FILES&lt;/code&gt; 读取后尝试修改 &lt;code&gt;request.upload_handlers&lt;/code&gt; ，Django将抛出错误。</target>
        </trans-unit>
        <trans-unit id="0d89a6ccbcbf552ebaa698cb09951780654c0abf" translate="yes" xml:space="preserve">
          <source>You can only set non-relation fields and &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; fields using this method. To update a non-relation field, provide the new value as a constant. To update &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; fields, set the new value to be the new model instance you want to point to. For example:</source>
          <target state="translated">您只能使用此方法设置非关系字段和&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;字段。要更新非关系字段，请提供新值作为常量。要更新&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;字段，请将新值设置为要指向的新模型实例。例如：</target>
        </trans-unit>
        <trans-unit id="59db4ce18104e7b407855d2ba1a84eec8fa33e1d" translate="yes" xml:space="preserve">
          <source>You can only use this technique to opt out from a field defined declaratively by a parent class; it won&amp;rsquo;t prevent the &lt;code&gt;ModelForm&lt;/code&gt; metaclass from generating a default field. To opt-out from default fields, see &lt;a href=&quot;#modelforms-selecting-fields&quot;&gt;Selecting the fields to use&lt;/a&gt;.</source>
          <target state="translated">您只能使用此技术来退出由父类声明性定义的字段；它不会阻止 &lt;code&gt;ModelForm&lt;/code&gt; 元类生成默认字段。要退出默认字段，请参阅&lt;a href=&quot;#modelforms-selecting-fields&quot;&gt;选择要使用的字段&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a0844d979b163332d72b1574f31bc03c690fd9e" translate="yes" xml:space="preserve">
          <source>You can optionally serialize managers into migrations and have them available in &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt; operations. This is done by defining a &lt;code&gt;use_in_migrations&lt;/code&gt; attribute on the manager class:</source>
          <target state="translated">您可以选择将管理器序列化为迁移，并使它们在&lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt;操作中可用。这是通过在管理器类上定义 &lt;code&gt;use_in_migrations&lt;/code&gt; 属性来完成的：</target>
        </trans-unit>
        <trans-unit id="15a184147a4d588e8e21c17a7686b96a3cc7684f" translate="yes" xml:space="preserve">
          <source>You can order by a field converted to lowercase with &lt;a href=&quot;database-functions#django.db.models.functions.Lower&quot;&gt;&lt;code&gt;Lower&lt;/code&gt;&lt;/a&gt; which will achieve case-consistent ordering:</source>
          <target state="translated">您可以通过使用&lt;a href=&quot;database-functions#django.db.models.functions.Lower&quot;&gt; &lt;code&gt;Lower&lt;/code&gt; &lt;/a&gt;转换为小写的字段进行排序，这将实现大小写一致的排序：</target>
        </trans-unit>
        <trans-unit id="b66b1573d137a299dd06177068779747de5bf2c6" translate="yes" xml:space="preserve">
          <source>You can override a &lt;code&gt;Manager&lt;/code&gt;&amp;rsquo;s base &lt;code&gt;QuerySet&lt;/code&gt; by overriding the &lt;code&gt;Manager.get_queryset()&lt;/code&gt; method. &lt;code&gt;get_queryset()&lt;/code&gt; should return a &lt;code&gt;QuerySet&lt;/code&gt; with the properties you require.</source>
          <target state="translated">您可以通过覆盖 &lt;code&gt;Manager.get_queryset()&lt;/code&gt; 方法来覆盖 &lt;code&gt;Manager&lt;/code&gt; 的基本 &lt;code&gt;QuerySet&lt;/code&gt; 。 &lt;code&gt;get_queryset()&lt;/code&gt; 应该返回带有所需属性的 &lt;code&gt;QuerySet&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="774e634f057ed8b775fac695366c721f3f9c6525" translate="yes" xml:space="preserve">
          <source>You can override many of the templates which the admin module uses to generate the various pages of an admin site. You can even override a few of these templates for a specific app, or a specific model.</source>
          <target state="translated">您可以覆盖许多模板,管理模块用于生成管理网站的各种页面。您甚至可以为特定的应用程序或特定的模型覆盖其中的一些模板。</target>
        </trans-unit>
        <trans-unit id="63a27f70ce0617425edda98c2158399717afcac1" translate="yes" xml:space="preserve">
          <source>You can override that field by declaring your own &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField.parent_link&quot;&gt;&lt;code&gt;parent_link=True&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;Restaurant&lt;/code&gt;.</source>
          <target state="translated">您可以通过在 &lt;code&gt;Restaurant&lt;/code&gt; 上使用&lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField.parent_link&quot;&gt; &lt;code&gt;parent_link=True&lt;/code&gt; &lt;/a&gt;声明自己的&lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt;来覆盖该字段。</target>
        </trans-unit>
        <trans-unit id="57ea21375a48e21320717250461c64e73f3c91e6" translate="yes" xml:space="preserve">
          <source>You can override that in a subclass:</source>
          <target state="translated">你可以在子类中覆盖它。</target>
        </trans-unit>
        <trans-unit id="e37300ab5cd8c3d829305fa943233de31550de77" translate="yes" xml:space="preserve">
          <source>You can override the &lt;code&gt;FOO_set&lt;/code&gt; name by setting the &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt; parameter in the &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; definition. For example, if the &lt;code&gt;Entry&lt;/code&gt; model was altered to &lt;code&gt;blog = ForeignKey(Blog, on_delete=models.CASCADE,
related_name='entries')&lt;/code&gt;, the above example code would look like this:</source>
          <target state="translated">您可以覆盖 &lt;code&gt;FOO_set&lt;/code&gt; 通过设置名称&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt;在参数&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; 的&lt;/a&gt;定义。例如，如果将 &lt;code&gt;Entry&lt;/code&gt; 模型更改为 &lt;code&gt;blog = ForeignKey(Blog, on_delete=models.CASCADE, related_name='entries')&lt;/code&gt; ，则上面的示例代码将如下所示：</target>
        </trans-unit>
        <trans-unit id="f8be738042bfdf451f6592d77fa6448d649e025d" translate="yes" xml:space="preserve">
          <source>You can override the &lt;code&gt;clean()&lt;/code&gt; method on a model form to provide additional validation in the same way you can on a normal form.</source>
          <target state="translated">您可以覆盖模型表单上的 &lt;code&gt;clean()&lt;/code&gt; 方法，以提供与普通表单相同的方式进行其他验证。</target>
        </trans-unit>
        <trans-unit id="982cb28ccc3520c7cc96e4b32a3866e196759fb2" translate="yes" xml:space="preserve">
          <source>You can override the default &lt;code&gt;django.contrib.admin.site&lt;/code&gt; by setting the &lt;a href=&quot;#django.contrib.admin.apps.SimpleAdminConfig.default_site&quot;&gt;&lt;code&gt;default_site&lt;/code&gt;&lt;/a&gt; attribute of a custom &lt;code&gt;AppConfig&lt;/code&gt; to the dotted import path of either a &lt;code&gt;AdminSite&lt;/code&gt; subclass or a callable that returns a site instance.</source>
          <target state="translated">通过将自定义 &lt;code&gt;AppConfig&lt;/code&gt; 的&lt;a href=&quot;#django.contrib.admin.apps.SimpleAdminConfig.default_site&quot;&gt; &lt;code&gt;default_site&lt;/code&gt; &lt;/a&gt;属性设置为 &lt;code&gt;AdminSite&lt;/code&gt; 子类或返回站点实例的可调用项的点状导入路径，可以覆盖默认的 &lt;code&gt;django.contrib.admin.site&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48efda1242365670d336d236b15a8da4caa644ab" translate="yes" xml:space="preserve">
          <source>You can override the error messages from &lt;code&gt;NON_FIELD_ERRORS&lt;/code&gt; raised by model validation by adding the &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.NON_FIELD_ERRORS&quot;&gt;&lt;code&gt;NON_FIELD_ERRORS&lt;/code&gt;&lt;/a&gt; key to the &lt;code&gt;error_messages&lt;/code&gt; dictionary of the &lt;code&gt;ModelForm&lt;/code&gt;&amp;rsquo;s inner &lt;code&gt;Meta&lt;/code&gt; class:</source>
          <target state="translated">您可以覆盖从错误信息 &lt;code&gt;NON_FIELD_ERRORS&lt;/code&gt; 通过将通过模型验证提出&lt;a href=&quot;../../ref/exceptions#django.core.exceptions.NON_FIELD_ERRORS&quot;&gt; &lt;code&gt;NON_FIELD_ERRORS&lt;/code&gt; &lt;/a&gt;的关键 &lt;code&gt;error_messages&lt;/code&gt; 字典进行 &lt;code&gt;ModelForm&lt;/code&gt; 的内在 &lt;code&gt;Meta&lt;/code&gt; 类：</target>
        </trans-unit>
        <trans-unit id="dccb03bfb15ccac5a6bcfdb49eefcb6c9d88db33" translate="yes" xml:space="preserve">
          <source>You can pass &lt;code&gt;named=True&lt;/code&gt; to get results as a &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.namedtuple&quot;&gt;&lt;code&gt;namedtuple()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">您可以传递 &lt;code&gt;named=True&lt;/code&gt; 作为&lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.namedtuple&quot;&gt; &lt;code&gt;namedtuple()&lt;/code&gt; &lt;/a&gt;获得结果：</target>
        </trans-unit>
        <trans-unit id="931e39961f290733a5369292c07bec95d65d8aef" translate="yes" xml:space="preserve">
          <source>You can pass a second callable to &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt; to run whatever logic you want executed when migrating backwards. If this callable is omitted, migrating backwards will raise an exception.</source>
          <target state="translated">您可以向&lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt;传递第二个可调用项，以运行向后迁移时要执行的任何逻辑。如果忽略此可调用项，则向后迁移将引发异常。</target>
        </trans-unit>
        <trans-unit id="670e6640c54c0a96047b07fe15722e593447c0a2" translate="yes" xml:space="preserve">
          <source>You can pass additional context to the template using keyword arguments:</source>
          <target state="translated">您可以使用关键字参数向模板传递额外的上下文。</target>
        </trans-unit>
        <trans-unit id="f6ba219abd6ddac3bfd5adc72addcf1efe76d284" translate="yes" xml:space="preserve">
          <source>You can pass as many tags to &lt;code&gt;register&lt;/code&gt; as you want in order to label your check. Tagging checks is useful since it allows you to run only a certain group of checks. For example, to register a compatibility check, you would make the following call:</source>
          <target state="translated">您可以传递任意数量的标签进行 &lt;code&gt;register&lt;/code&gt; ，以标记支票。标记检查很有用，因为它仅允许您运行特定的检查组。例如，要注册兼容性检查，请进行以下调用：</target>
        </trans-unit>
        <trans-unit id="17cee0b9238b611eecf7805f75927cfcc2150db6" translate="yes" xml:space="preserve">
          <source>You can pass in bytestrings when creating a model or populating a field, and Django will convert it to strings when it needs to.</source>
          <target state="translated">你可以在创建模型或填充字段时传入bytestrings,Django会在需要时将其转换为字符串。</target>
        </trans-unit>
        <trans-unit id="34d28ab790c6f4c880e7c1c6bc008f6f83e00571" translate="yes" xml:space="preserve">
          <source>You can pass in either an integer or a string representation of an integer.</source>
          <target state="translated">你可以传入一个整数或整数的字符串表示。</target>
        </trans-unit>
        <trans-unit id="b9872a25b8b51c0012c0d49a1272ab262fd71b72" translate="yes" xml:space="preserve">
          <source>You can pass it a single argument that is a &lt;a href=&quot;https://docs.python.org/3/library/email.mime.html#email.mime.base.MIMEBase&quot;&gt;&lt;code&gt;MIMEBase&lt;/code&gt;&lt;/a&gt; instance. This will be inserted directly into the resulting message.</source>
          <target state="translated">您可以为它传递一个作为&lt;a href=&quot;https://docs.python.org/3/library/email.mime.html#email.mime.base.MIMEBase&quot;&gt; &lt;code&gt;MIMEBase&lt;/code&gt; &lt;/a&gt;实例的参数。这将直接插入到结果消息中。</target>
        </trans-unit>
        <trans-unit id="91c8a0f9176d92ec480ff94d40ce3c2bc7b067b9" translate="yes" xml:space="preserve">
          <source>You can pass multiple headers to &lt;code&gt;vary_on_headers()&lt;/code&gt;:</source>
          <target state="translated">您可以将多个标头传递给 &lt;code&gt;vary_on_headers()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="23546d2c51be2774546341f5c24f0723e84a867d" translate="yes" xml:space="preserve">
          <source>You can pass the &lt;a href=&quot;../../ref/models/indexes#django.db.models.Index.db_tablespace&quot;&gt;&lt;code&gt;db_tablespace&lt;/code&gt;&lt;/a&gt; option to an &lt;code&gt;Index&lt;/code&gt; constructor to specify the name of a tablespace to use for the index. For single field indexes, you can pass the &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.db_tablespace&quot;&gt;&lt;code&gt;db_tablespace&lt;/code&gt;&lt;/a&gt; option to a &lt;code&gt;Field&lt;/code&gt; constructor to specify an alternate tablespace for the field&amp;rsquo;s column index. If the column doesn&amp;rsquo;t have an index, the option is ignored.</source>
          <target state="translated">您可以将&lt;a href=&quot;../../ref/models/indexes#django.db.models.Index.db_tablespace&quot;&gt; &lt;code&gt;db_tablespace&lt;/code&gt; &lt;/a&gt;选项传递给 &lt;code&gt;Index&lt;/code&gt; 构造函数，以指定用于索引的表空间的名称。对于单字段索引，可以将&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.db_tablespace&quot;&gt; &lt;code&gt;db_tablespace&lt;/code&gt; &lt;/a&gt;选项传递给 &lt;code&gt;Field&lt;/code&gt; 构造函数，以为该字段的列索引指定备用表空间。如果该列没有索引，则该选项将被忽略。</target>
        </trans-unit>
        <trans-unit id="696013ddbf9404eb192127942108626354d78cc5" translate="yes" xml:space="preserve">
          <source>You can pass through keyword arguments to &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt;&lt;code&gt;as_view()&lt;/code&gt;&lt;/a&gt; in the same way you would in your URLconf, such as if you wanted the &lt;code&gt;AuthorInterest&lt;/code&gt; behavior to also appear at another URL but using a different template:</source>
          <target state="translated">您可以以与在URLconf中相同的方式，将关键字参数传递给&lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt; &lt;code&gt;as_view()&lt;/code&gt; &lt;/a&gt;，例如，是否希望 &lt;code&gt;AuthorInterest&lt;/code&gt; 行为也出现在另一个URL上，但使用不同的模板：</target>
        </trans-unit>
        <trans-unit id="92443aff0b39a25683edc59a3ce62d5f795c64f5" translate="yes" xml:space="preserve">
          <source>You can pass widget attributes in the same manner that for any other Django widget. For example:</source>
          <target state="translated">你可以用与其他Django widget相同的方式传递widget属性。例如,你可以通过以下方式传递widget属性</target>
        </trans-unit>
        <trans-unit id="e2f531ef9673186b49268ec6b53238b7258d01ad" translate="yes" xml:space="preserve">
          <source>You can prevent a migration from running in a transaction by setting the &lt;code&gt;atomic&lt;/code&gt; attribute to &lt;code&gt;False&lt;/code&gt;. For example:</source>
          <target state="translated">通过将 &lt;code&gt;atomic&lt;/code&gt; 属性设置为 &lt;code&gt;False&lt;/code&gt; ,可以防止迁移在事务中运行。例如：</target>
        </trans-unit>
        <trans-unit id="965718ab3a2564492a95eef223ce3fe8d81449d5" translate="yes" xml:space="preserve">
          <source>You can prevent the test databases from being destroyed by using the &lt;a href=&quot;../../ref/django-admin#cmdoption-test-keepdb&quot;&gt;&lt;code&gt;test --keepdb&lt;/code&gt;&lt;/a&gt; option. This will preserve the test database between runs. If the database does not exist, it will first be created. Any migrations will also be applied in order to keep it up to date.</source>
          <target state="translated">您可以使用&lt;a href=&quot;../../ref/django-admin#cmdoption-test-keepdb&quot;&gt; &lt;code&gt;test --keepdb&lt;/code&gt; &lt;/a&gt;选项防止测试数据库被破坏。这将在两次运行之间保留测试数据库。如果数据库不存在，将首先创建它。任何迁移都将被应用，以使其保持最新状态。</target>
        </trans-unit>
        <trans-unit id="3f960c83765c6fa258c621db47a733f1fe7326a6" translate="yes" xml:space="preserve">
          <source>You can provide a custom queryset with the optional &lt;code&gt;queryset&lt;/code&gt; argument. This can be used to change the default ordering of the queryset:</source>
          <target state="translated">您可以提供带有可选 &lt;code&gt;queryset&lt;/code&gt; 参数的自定义queryset 。这可以用来更改查询集的默认顺序：</target>
        </trans-unit>
        <trans-unit id="d403090539383aca8c29f118eb6e954db66e5cc5" translate="yes" xml:space="preserve">
          <source>You can provide an IPv6 address surrounded by brackets (e.g. &lt;code&gt;[200a::1]:8000&lt;/code&gt;). This will automatically enable IPv6 support.</source>
          <target state="translated">您可以提供一个用方括号括起来的IPv6地址（例如 &lt;code&gt;[200a::1]:8000&lt;/code&gt; ）。这将自动启用IPv6支持。</target>
        </trans-unit>
        <trans-unit id="28f785ebff11fac1bf22b546e08435462913a002" translate="yes" xml:space="preserve">
          <source>You can provide an arbitrary &lt;code&gt;filename&lt;/code&gt; parameter. It&amp;rsquo;ll be used by browsers in the &amp;ldquo;Save as&amp;hellip;&amp;rdquo; dialog.</source>
          <target state="translated">您可以提供一个任意的 &lt;code&gt;filename&lt;/code&gt; 参数。浏览器将在&amp;ldquo;另存为...&amp;rdquo;对话框中使用它。</target>
        </trans-unit>
        <trans-unit id="9f8c5e86d2b05b60d3980730fa3cab0d534f0419" translate="yes" xml:space="preserve">
          <source>You can provide the &lt;code&gt;contents&lt;/code&gt; parameter which will replace the auto-generated label tag. An &lt;code&gt;attrs&lt;/code&gt; dictionary may contain additional attributes for the &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">您可以提供 &lt;code&gt;contents&lt;/code&gt; 参数，它将替换自动生成的标签标记。一个 &lt;code&gt;attrs&lt;/code&gt; 字典可以包含用于附加属性 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 标记。</target>
        </trans-unit>
        <trans-unit id="8fd4dd6bc02fc2361f4a709f1a89880ada7b1249" translate="yes" xml:space="preserve">
          <source>You can put several Django forms inside one &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag. To give each &lt;code&gt;Form&lt;/code&gt; its own namespace, use the &lt;code&gt;prefix&lt;/code&gt; keyword argument:</source>
          <target state="translated">您可以将多个Django表单放入一个 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 标签中。要为每个 &lt;code&gt;Form&lt;/code&gt; 提供自己的名称空间，请使用 &lt;code&gt;prefix&lt;/code&gt; 关键字参数：</target>
        </trans-unit>
        <trans-unit id="905c055ea0c0a8fac58caf477491c6c82816e40a" translate="yes" xml:space="preserve">
          <source>You can query the models using &lt;a href=&quot;../queries#lookups-that-span-relationships&quot;&gt;lookups across relationships&lt;/a&gt;:</source>
          <target state="translated">您可以使用&lt;a href=&quot;../queries#lookups-that-span-relationships&quot;&gt;跨关系的&lt;/a&gt;查询来查询模型：</target>
        </trans-unit>
        <trans-unit id="a6158165209b75aad2ecda3dd1359a11d208703c" translate="yes" xml:space="preserve">
          <source>You can query using &lt;code&gt;NOT EXISTS&lt;/code&gt; with &lt;code&gt;~Exists()&lt;/code&gt;.</source>
          <target state="translated">您可以将 &lt;code&gt;NOT EXISTS&lt;/code&gt; 与 &lt;code&gt;~Exists()&lt;/code&gt; 一起使用进行查询。</target>
        </trans-unit>
        <trans-unit id="b54949453b6875cdd12a7ff721e232c2d609c96c" translate="yes" xml:space="preserve">
          <source>You can read it and write to &lt;code&gt;request.session&lt;/code&gt; at any point in your view. You can edit it multiple times.</source>
          <target state="translated">您可以在视图中的任何位置阅读并写入 &lt;code&gt;request.session&lt;/code&gt; 。您可以对其进行多次编辑。</target>
        </trans-unit>
        <trans-unit id="81e89926ebf9d245d5f1c739ecdb107d7005e8ef" translate="yes" xml:space="preserve">
          <source>You can read more about Django&amp;rsquo;s async support, and how to best use async views, in &lt;a href=&quot;../async&quot;&gt;Asynchronous support&lt;/a&gt;.</source>
          <target state="translated">你可以阅读更多关于Django的异步支持，以及如何最好地利用异步的意见，在&lt;a href=&quot;../async&quot;&gt;异步支持&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a4b76971af65f1c0e55092c8ed64537f556879a1" translate="yes" xml:space="preserve">
          <source>You can read more about how Django&amp;rsquo;s &lt;a href=&quot;../../topics/security#sql-injection-protection&quot;&gt;SQL injection protection&lt;/a&gt; works.</source>
          <target state="translated">您可以阅读有关Django的&lt;a href=&quot;../../topics/security#sql-injection-protection&quot;&gt;SQL注入保护&lt;/a&gt;如何工作的更多信息。</target>
        </trans-unit>
        <trans-unit id="3b26134b83e870a522a8bc339238b2d4a3d69701" translate="yes" xml:space="preserve">
          <source>You can refer to any &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; relation in the list of fields passed to &lt;code&gt;select_related()&lt;/code&gt;.</source>
          <target state="translated">您可以在传递给 &lt;code&gt;select_related()&lt;/code&gt; 的字段列表中引用任何&lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt;关系。</target>
        </trans-unit>
        <trans-unit id="a33d9de60d4eb8f1f9de39af6345b2aec9fdf096" translate="yes" xml:space="preserve">
          <source>You can regenerate fixtures with &lt;a href=&quot;../../ref/django-admin#django-admin-loaddata&quot;&gt;&lt;code&gt;loaddata&lt;/code&gt;&lt;/a&gt; then &lt;a href=&quot;../../ref/django-admin#django-admin-dumpdata&quot;&gt;&lt;code&gt;dumpdata&lt;/code&gt;&lt;/a&gt;. Or, if they&amp;rsquo;re small enough, you can edit them to add the UTC offset that matches your &lt;a href=&quot;../../ref/settings#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt; to each serialized datetime.</source>
          <target state="translated">您可以使用&lt;a href=&quot;../../ref/django-admin#django-admin-loaddata&quot;&gt; &lt;code&gt;loaddata&lt;/code&gt; &lt;/a&gt;然后使用&lt;a href=&quot;../../ref/django-admin#django-admin-dumpdata&quot;&gt; &lt;code&gt;dumpdata&lt;/code&gt; &lt;/a&gt;重新生成灯具。或者，如果它们足够小，则可以对其进行编辑，以将与&lt;a href=&quot;../../ref/settings#std:setting-TIME_ZONE&quot;&gt; &lt;code&gt;TIME_ZONE&lt;/code&gt; &lt;/a&gt;相匹配的UTC偏移量添加到每个序列化的日期时间。</target>
        </trans-unit>
        <trans-unit id="e2071fd90afaabab45286500be81adf02f6054ae" translate="yes" xml:space="preserve">
          <source>You can register &amp;ldquo;deployment checks&amp;rdquo; that are only relevant to a production settings file like this:</source>
          <target state="translated">您可以注册仅与生产设置文件相关的&amp;ldquo;部署检查&amp;rdquo;，如下所示：</target>
        </trans-unit>
        <trans-unit id="d70dadf64bde4a6bec05e260856f7199ba140d7f" translate="yes" xml:space="preserve">
          <source>You can relate another model to &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; as a way of tying instances of it to particular model classes, and use these methods to get access to those model classes.</source>
          <target state="translated">您可以将另一个模型与&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;相关联，以作为将其实例绑定到特定模型类的方式，并使用这些方法来访问这些模型类。</target>
        </trans-unit>
        <trans-unit id="036ff31d530dbdc9b869a1c7d8d0cce781e0803a" translate="yes" xml:space="preserve">
          <source>You can run as many concurrent servers as you want, as long as they&amp;rsquo;re on separate ports by executing &lt;code&gt;django-admin runserver&lt;/code&gt; more than once.</source>
          <target state="translated">只要多次执行 &lt;code&gt;django-admin runserver&lt;/code&gt; ，就可以运行任意数量的并发服务器，只要它们在单独的端口上即可。</target>
        </trans-unit>
        <trans-unit id="12dab32ef6c022beed9b139b7353994de66572eb" translate="yes" xml:space="preserve">
          <source>You can run your test on &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.user&quot;&gt;&lt;code&gt;request.user&lt;/code&gt;&lt;/a&gt; in the view directly. For example, this view checks to make sure the user has an email in the desired domain and if not, redirects to the login page:</source>
          <target state="translated">您可以直接在视图中对&lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.user&quot;&gt; &lt;code&gt;request.user&lt;/code&gt; &lt;/a&gt;运行测试。例如，此视图检查以确保用户在所需域中有一封电子邮件，如果没有，则重定向到登录页面：</target>
        </trans-unit>
        <trans-unit id="a39a539980e786758e98c063cad4b364be08f899" translate="yes" xml:space="preserve">
          <source>You can see the current list of database engines by looking in &lt;a href=&quot;https://github.com/django/django/blob/master/django/db/backends&quot;&gt;django/db/backends&lt;/a&gt;.</source>
          <target state="translated">您可以通过查看&lt;a href=&quot;https://github.com/django/django/blob/master/django/db/backends&quot;&gt;django / db / backends&lt;/a&gt;来查看当前数据库引擎列表。</target>
        </trans-unit>
        <trans-unit id="309cec0ef3b9fd023f686aa4c8696480e1c8eddc" translate="yes" xml:space="preserve">
          <source>You can see the default logging configuration by looking in &lt;a href=&quot;https://github.com/django/django/blob/master/django/utils/log.py&quot;&gt;django/utils/log.py&lt;/a&gt;.</source>
          <target state="translated">您可以通过在&lt;a href=&quot;https://github.com/django/django/blob/master/django/utils/log.py&quot;&gt;django / utils / log.py中&lt;/a&gt;查看默认的日志记录配置。</target>
        </trans-unit>
        <trans-unit id="87aced28eb8031ef87ae67afdabfb18afd642339" translate="yes" xml:space="preserve">
          <source>You can see the layer&amp;rsquo;s geometry type and how many features it contains:</source>
          <target state="translated">您可以查看图层的几何类型以及包含的要素数量：</target>
        </trans-unit>
        <trans-unit id="c9d02acb6089e872f7d78ab7c8a2b70cc653f87b" translate="yes" xml:space="preserve">
          <source>You can see the results of deconstruction by looking in migrations that include the field, and you can test deconstruction in unit tests by deconstructing and reconstructing the field:</source>
          <target state="translated">你可以在包含字段的迁移中查看解构的结果,你可以在单元测试中通过解构和重建字段来测试解构。</target>
        </trans-unit>
        <trans-unit id="3cdc0fbf6631f0e54c0a04cf79589ae311bb4a50" translate="yes" xml:space="preserve">
          <source>You can select the database for a &lt;code&gt;QuerySet&lt;/code&gt; at any point in the &lt;code&gt;QuerySet&lt;/code&gt; &amp;ldquo;chain.&amp;rdquo; Call &lt;code&gt;using()&lt;/code&gt; on the &lt;code&gt;QuerySet&lt;/code&gt; to get another &lt;code&gt;QuerySet&lt;/code&gt; that uses the specified database.</source>
          <target state="translated">您可以在 &lt;code&gt;QuerySet&lt;/code&gt; &amp;ldquo;链&amp;rdquo; 中的任何时候为 &lt;code&gt;QuerySet&lt;/code&gt; 选择数据库。在 &lt;code&gt;QuerySet&lt;/code&gt; 上调用 &lt;code&gt;using()&lt;/code&gt; 以获取另一个使用指定数据库的 &lt;code&gt;QuerySet&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="092cedc051fa6e8dcd5721a6dced9e638959ad6d" translate="yes" xml:space="preserve">
          <source>You can serialize other types by writing a custom serializer. For example, if Django didn&amp;rsquo;t serialize &lt;a href=&quot;https://docs.python.org/3/library/decimal.html#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; by default, you could do this:</source>
          <target state="translated">您可以通过编写自定义序列化器来序列化其他类型。例如，如果Django 默认未序列化&lt;a href=&quot;https://docs.python.org/3/library/decimal.html#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;，则可以执行以下操作：</target>
        </trans-unit>
        <trans-unit id="3fd2259af408558ccbe6a2dee60269decfef26ee" translate="yes" xml:space="preserve">
          <source>You can set any of the parameters of &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin&quot;&gt;&lt;code&gt;AccessMixin&lt;/code&gt;&lt;/a&gt; to customize the handling of unauthorized users.</source>
          <target state="translated">您可以设置&lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin&quot;&gt; &lt;code&gt;AccessMixin&lt;/code&gt; 的&lt;/a&gt;任何参数来自定义对未授权用户的处理。</target>
        </trans-unit>
        <trans-unit id="f07f689f5b53c5edccfb755d5a2d08e8904abb51" translate="yes" xml:space="preserve">
          <source>You can set any of the parameters of &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin&quot;&gt;&lt;code&gt;AccessMixin&lt;/code&gt;&lt;/a&gt; to customize the handling of unauthorized users:</source>
          <target state="translated">您可以设置&lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin&quot;&gt; &lt;code&gt;AccessMixin&lt;/code&gt; 的&lt;/a&gt;任何参数来自定义对未授权用户的处理：</target>
        </trans-unit>
        <trans-unit id="95c0b6d75c49bab1e4f2a9276c13acaeed98b505" translate="yes" xml:space="preserve">
          <source>You can set this as a class attribute when declaring your form or use the &lt;code&gt;renderer&lt;/code&gt; argument to &lt;code&gt;Form.__init__()&lt;/code&gt;. For example:</source>
          <target state="translated">您可以在声明表单时将此属性设置为类属性，也可以使用 &lt;code&gt;Form.__init__()&lt;/code&gt; 的 &lt;code&gt;renderer&lt;/code&gt; 参数。例如：</target>
        </trans-unit>
        <trans-unit id="a52fc98c7d55a8a33c57dae3137be34cfc014620" translate="yes" xml:space="preserve">
          <source>You can specify a custom default manager using &lt;a href=&quot;../../ref/models/options#django.db.models.Options.default_manager_name&quot;&gt;&lt;code&gt;Meta.default_manager_name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您可以使用&lt;a href=&quot;../../ref/models/options#django.db.models.Options.default_manager_name&quot;&gt; &lt;code&gt;Meta.default_manager_name&lt;/code&gt; &lt;/a&gt;指定自定义默认管理器。</target>
        </trans-unit>
        <trans-unit id="5c8cddf4215c456f82bf6c72826a9411dc05acc9" translate="yes" xml:space="preserve">
          <source>You can specify a custom filename pattern match using the &lt;code&gt;-p&lt;/code&gt; (or &lt;code&gt;--pattern&lt;/code&gt;) option, if your test files are named differently from the &lt;code&gt;test*.py&lt;/code&gt; pattern:</source>
          <target state="translated">如果测试文件的名称与 &lt;code&gt;test*.py&lt;/code&gt; 模式的名称不同，则可以使用 &lt;code&gt;-p&lt;/code&gt; （或 &lt;code&gt;--pattern&lt;/code&gt; ）选项指定自定义文件名模式匹配：</target>
        </trans-unit>
        <trans-unit id="6c8063ce398794b8f44d5be5cf245b12ea6caa86" translate="yes" xml:space="preserve">
          <source>You can specify any other value as long as you implement a corresponding &lt;code&gt;has_&amp;lt;value&amp;gt;_permission(self, request)&lt;/code&gt; method on the &lt;code&gt;ModelAdmin&lt;/code&gt;.</source>
          <target state="translated">您可以指定任何其他值，只要在 &lt;code&gt;has_&amp;lt;value&amp;gt;_permission(self, request)&lt;/code&gt; 实现相应的has_ &amp;lt;value&amp;gt; _permission（self，request）方法 &lt;code&gt;ModelAdmin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b82ade4d1cd1cdd806b2e02c9598a91a60ba50c" translate="yes" xml:space="preserve">
          <source>You can specify more complex conditions for the retrieved object by chaining &lt;code&gt;get_or_create()&lt;/code&gt; with &lt;code&gt;filter()&lt;/code&gt; and using &lt;a href=&quot;#django.db.models.Q&quot;&gt;&lt;code&gt;Q objects&lt;/code&gt;&lt;/a&gt;. For example, to retrieve Robert or Bob Marley if either exists, and create the latter otherwise:</source>
          <target state="translated">您可以通过将 &lt;code&gt;get_or_create()&lt;/code&gt; 与 &lt;code&gt;filter()&lt;/code&gt; 链接并使用&lt;a href=&quot;#django.db.models.Q&quot;&gt; &lt;code&gt;Q objects&lt;/code&gt; &lt;/a&gt;来为检索到的对象指定更复杂的条件。例如，检索存在的Robert或Bob Marley，否则创建后者：</target>
        </trans-unit>
        <trans-unit id="91391bf2eb7d951b7a6ee6506a2ba2d361001f7e" translate="yes" xml:space="preserve">
          <source>You can specify multiple windows in the same query which in Django ORM would be equivalent to including multiple expressions in a &lt;a href=&quot;../../topics/db/aggregation&quot;&gt;QuerySet.annotate()&lt;/a&gt; call. The ORM doesn&amp;rsquo;t make use of named windows, instead they are part of the selected columns.</source>
          <target state="translated">您可以在同一查询中指定多个窗口，这在Django ORM中等同于在&lt;a href=&quot;../../topics/db/aggregation&quot;&gt;QuerySet.annotate（）&lt;/a&gt;调用中包含多个表达式。ORM不使用命名窗口，而是它们是所选列的一部分。</target>
        </trans-unit>
        <trans-unit id="56d421f39dda0634f8e184beb7fb6f5d5f2ca348" translate="yes" xml:space="preserve">
          <source>You can specify one or many fields. As long as the fields appear in &lt;code&gt;list_display&lt;/code&gt;, Django doesn&amp;rsquo;t care how many (or how few) fields are linked. The only requirement is that if you want to use &lt;code&gt;list_display_links&lt;/code&gt; in this fashion, you must define &lt;code&gt;list_display&lt;/code&gt;.</source>
          <target state="translated">您可以指定一个或多个字段。只要这些字段出现在 &lt;code&gt;list_display&lt;/code&gt; 中，Django就不会在意链接了多少个字段。唯一的要求是，如果要以这种方式使用 &lt;code&gt;list_display_links&lt;/code&gt; ，则必须定义 &lt;code&gt;list_display&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35ecf15f0771f201019bb5af3205df2f1b2d5102" translate="yes" xml:space="preserve">
          <source>You can specify particular tests to run by supplying any number of &amp;ldquo;test labels&amp;rdquo; to &lt;code&gt;./manage.py test&lt;/code&gt;. Each test label can be a full Python dotted path to a package, module, &lt;code&gt;TestCase&lt;/code&gt; subclass, or test method. For instance:</source>
          <target state="translated">您可以通过向 &lt;code&gt;./manage.py test&lt;/code&gt; 提供任意数量的&amp;ldquo;测试标签&amp;rdquo;来指定要运行的特定测试。每个测试标签可以是包，模块， &lt;code&gt;TestCase&lt;/code&gt; 子类或测试方法的完整Python点缀路径。例如：</target>
        </trans-unit>
        <trans-unit id="b7b466a3fa9f0cb9cf1064b1a79c26e0119e6295" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;config&lt;/code&gt; attribute to a &lt;a href=&quot;#django.contrib.postgres.search.SearchVector&quot;&gt;&lt;code&gt;SearchVector&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.postgres.search.SearchQuery&quot;&gt;&lt;code&gt;SearchQuery&lt;/code&gt;&lt;/a&gt; to use a different search configuration. This allows using different language parsers and dictionaries as defined by the database:</source>
          <target state="translated">您可以为&lt;a href=&quot;#django.contrib.postgres.search.SearchVector&quot;&gt; &lt;code&gt;SearchVector&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.contrib.postgres.search.SearchQuery&quot;&gt; &lt;code&gt;SearchQuery&lt;/code&gt; &lt;/a&gt;指定 &lt;code&gt;config&lt;/code&gt; 属性，以使用其他搜索配置。这允许使用数据库定义的不同语言解析器和词典：</target>
        </trans-unit>
        <trans-unit id="6897d991898879286a043e5f7548985f2d21c3c8" translate="yes" xml:space="preserve">
          <source>You can speed up test execution times by &lt;a href=&quot;https://www.postgresql.org/docs/current/non-durability.html&quot;&gt;configuring PostgreSQL to be non-durable&lt;/a&gt;.</source>
          <target state="translated">您可以通过&lt;a href=&quot;https://www.postgresql.org/docs/current/non-durability.html&quot;&gt;将PostgreSQL配置为非持久性&lt;/a&gt;来加快测试执行时间。</target>
        </trans-unit>
        <trans-unit id="a05553a75f717b1588fdb95a7c94885e65761787" translate="yes" xml:space="preserve">
          <source>You can still access the unvalidated data directly from &lt;code&gt;request.POST&lt;/code&gt; at this point, but the validated data is better.</source>
          <target state="translated">此时，您仍然可以直接从 &lt;code&gt;request.POST&lt;/code&gt; 访问未验证的数据，但是经过验证的数据更好。</target>
        </trans-unit>
        <trans-unit id="fdc9e7c72f624c15502ee7d57ee9395416ef3b35" translate="yes" xml:space="preserve">
          <source>You can subclass the management command and override &lt;code&gt;get_input_data()&lt;/code&gt; if you want to customize data input and validation. Consult the source code for details on the existing implementation and the method&amp;rsquo;s parameters. For example, it could be useful if you have a &lt;code&gt;ForeignKey&lt;/code&gt; in &lt;a href=&quot;../topics/auth/customizing#django.contrib.auth.models.CustomUser.REQUIRED_FIELDS&quot;&gt;&lt;code&gt;REQUIRED_FIELDS&lt;/code&gt;&lt;/a&gt; and want to allow creating an instance instead of entering the primary key of an existing instance.</source>
          <target state="translated">如果要自定义数据输入和验证，则可以 &lt;code&gt;get_input_data()&lt;/code&gt; 管理命令的子类并覆盖get_input_data（）。请查阅源代码，以获取有关现有实现和方法参数的详细信息。例如，如果您在&lt;a href=&quot;../topics/auth/customizing#django.contrib.auth.models.CustomUser.REQUIRED_FIELDS&quot;&gt; &lt;code&gt;REQUIRED_FIELDS&lt;/code&gt; 中&lt;/a&gt;有一个 &lt;code&gt;ForeignKey&lt;/code&gt; 并希望允许创建一个实例而不是输入现有实例的主键，则可能会很有用。</target>
        </trans-unit>
        <trans-unit id="f907140bd8767e6daf8262b05e591364a914f18e" translate="yes" xml:space="preserve">
          <source>You can tag your tests so you can easily run a particular subset. For example, you might label fast or slow tests:</source>
          <target state="translated">你可以给你的测试打上标签,这样你就可以轻松地运行一个特定的子集。例如,你可以标记快速或慢速测试。</target>
        </trans-unit>
        <trans-unit id="812ccce0053a52db1e91a4fc74c29d2c5bf702e9" translate="yes" xml:space="preserve">
          <source>You can take this template and work from it, though we suggest looking at the built-in Django operations in &lt;code&gt;django.db.migrations.operations&lt;/code&gt; - they cover a lot of the example usage of semi-internal aspects of the migration framework like &lt;code&gt;ProjectState&lt;/code&gt; and the patterns used to get historical models, as well as &lt;code&gt;ModelState&lt;/code&gt; and the patterns used to mutate historical models in &lt;code&gt;state_forwards()&lt;/code&gt;.</source>
          <target state="translated">尽管我们建议您查看 &lt;code&gt;django.db.migrations.operations&lt;/code&gt; 中的内置Django操作，但是您可以使用此模板并从中进行操作-它们涵盖了迁移框架的半内部方面的许多示例用法，例如 &lt;code&gt;ProjectState&lt;/code&gt; 和用于获取历史模型的模式以及 &lt;code&gt;ModelState&lt;/code&gt; 以及用于对 &lt;code&gt;state_forwards()&lt;/code&gt; 中的历史模型进行突变的模式。</target>
        </trans-unit>
        <trans-unit id="1de3756aa96fb6cbd680a56380165e102fecb105" translate="yes" xml:space="preserve">
          <source>You can tell Django to stop reporting particular 404s by tweaking the &lt;a href=&quot;../ref/settings#std:setting-IGNORABLE_404_URLS&quot;&gt;&lt;code&gt;IGNORABLE_404_URLS&lt;/code&gt;&lt;/a&gt; setting. It should be a list of compiled regular expression objects. For example:</source>
          <target state="translated">您可以通过调整&lt;a href=&quot;../ref/settings#std:setting-IGNORABLE_404_URLS&quot;&gt; &lt;code&gt;IGNORABLE_404_URLS&lt;/code&gt; &lt;/a&gt;设置来告诉Django停止报告特定的404 。它应该是已编译的正则表达式对象的列表。例如：</target>
        </trans-unit>
        <trans-unit id="0e3e303be9a4cd40124164cb34233e70806b99f3" translate="yes" xml:space="preserve">
          <source>You can tell if a query is ordered or not by checking the &lt;a href=&quot;#django.db.models.query.QuerySet.ordered&quot;&gt;&lt;code&gt;QuerySet.ordered&lt;/code&gt;&lt;/a&gt; attribute, which will be &lt;code&gt;True&lt;/code&gt; if the &lt;code&gt;QuerySet&lt;/code&gt; has been ordered in any way.</source>
          <target state="translated">您可以通过检查&lt;a href=&quot;#django.db.models.query.QuerySet.ordered&quot;&gt; &lt;code&gt;QuerySet.ordered&lt;/code&gt; &lt;/a&gt;属性来 &lt;code&gt;True&lt;/code&gt; 是否已排序，如果以任何方式对 &lt;code&gt;QuerySet&lt;/code&gt; 进行了排序，则为True。</target>
        </trans-unit>
        <trans-unit id="888768c5fd9cb9c3e096081e8cea51831286a338" translate="yes" xml:space="preserve">
          <source>You can tell them apart with &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.is_authenticated&quot;&gt;&lt;code&gt;is_authenticated&lt;/code&gt;&lt;/a&gt;, like so:</source>
          <target state="translated">您可以使用&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.is_authenticated&quot;&gt; &lt;code&gt;is_authenticated&lt;/code&gt; &lt;/a&gt;区分它们，如下所示：</target>
        </trans-unit>
        <trans-unit id="8c0835e3b02322a1decf64d4c2a47ca8f1477794" translate="yes" xml:space="preserve">
          <source>You can then access the information:</source>
          <target state="translated">你就可以访问信息。</target>
        </trans-unit>
        <trans-unit id="af8c07adb559066031e8cd600dff22f9b1dd1da2" translate="yes" xml:space="preserve">
          <source>You can then pass &lt;code&gt;cls=LazyEncoder&lt;/code&gt; to the &lt;code&gt;serializers.serialize()&lt;/code&gt; function:</source>
          <target state="translated">然后，您可以将 &lt;code&gt;cls=LazyEncoder&lt;/code&gt; 传递给 &lt;code&gt;serializers.serialize()&lt;/code&gt; 函数：</target>
        </trans-unit>
        <trans-unit id="b81dc7998c894011f7c7a1d8246cd1c2f73155d4" translate="yes" xml:space="preserve">
          <source>You can then use this function to provide early detection of an unchanged page for your front page view:</source>
          <target state="translated">然后,您可以使用此功能为您的前台页面视图提供未更改页面的早期检测。</target>
        </trans-unit>
        <trans-unit id="4fd6a1b4bcfb6335cfd76b7bb123defb85d6dffd" translate="yes" xml:space="preserve">
          <source>You can think of it like an onion: each middleware class is a &amp;ldquo;layer&amp;rdquo; that wraps the view, which is in the core of the onion. If the request passes through all the layers of the onion (each one calls &lt;code&gt;get_response&lt;/code&gt; to pass the request in to the next layer), all the way to the view at the core, the response will then pass through every layer (in reverse order) on the way back out.</source>
          <target state="translated">您可以将其视为一个洋葱：每个中间件类都是一个封装视图的&amp;ldquo;层&amp;rdquo;，它位于洋葱的核心。如果请求通过洋葱的所有层（每个调用 &lt;code&gt;get_response&lt;/code&gt; 将请求传递到下一层），一直到达核心视图，则响应将通过每个层（以相反的顺序）在返回的途中。</target>
        </trans-unit>
        <trans-unit id="9a835bd2da4e964a5f26fbbb0fd80ad01e4401a2" translate="yes" xml:space="preserve">
          <source>You can think of this as meaning &amp;ldquo;this filter is safe &amp;ndash; it doesn&amp;rsquo;t introduce any possibility of unsafe HTML.&amp;rdquo;</source>
          <target state="translated">您可以将其理解为&amp;ldquo;此过滤器很安全-不会引入任何不安全HTML的可能性&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="6a161eae2808c94876b23f5f330fd094ee057243" translate="yes" xml:space="preserve">
          <source>You can totally disable Django&amp;rsquo;s transaction management for a given database by setting &lt;a href=&quot;../../ref/settings#std:setting-DATABASE-AUTOCOMMIT&quot;&gt;&lt;code&gt;AUTOCOMMIT&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt; in its configuration. If you do this, Django won&amp;rsquo;t enable autocommit, and won&amp;rsquo;t perform any commits. You&amp;rsquo;ll get the regular behavior of the underlying database library.</source>
          <target state="translated">通过在配置中将&lt;a href=&quot;../../ref/settings#std:setting-DATABASE-AUTOCOMMIT&quot;&gt; &lt;code&gt;AUTOCOMMIT&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;False&lt;/code&gt; ，可以完全禁用给定数据库的Django事务管理。如果执行此操作，则Django将不会启用自动提交，也不会执行任何提交。您将获得基础数据库库的常规行为。</target>
        </trans-unit>
        <trans-unit id="eb6ebdab16edb84c1f844a6200be6f0fedbae645" translate="yes" xml:space="preserve">
          <source>You can translate string literals passed as arguments to tags and filters by using the familiar &lt;code&gt;_()&lt;/code&gt; syntax:</source>
          <target state="translated">您可以使用熟悉的 &lt;code&gt;_()&lt;/code&gt; 语法将作为参数传递的字符串文字转换为标签和过滤器：</target>
        </trans-unit>
        <trans-unit id="73410d6b42081a908a47095816e006320cfb1c77" translate="yes" xml:space="preserve">
          <source>You can update multiple fields &amp;mdash; there&amp;rsquo;s no limit on how many. For example, here we update the &lt;code&gt;comments_on&lt;/code&gt; and &lt;code&gt;headline&lt;/code&gt; fields:</source>
          <target state="translated">您可以更新多个字段-数量没有限制。例如，这里我们更新 &lt;code&gt;comments_on&lt;/code&gt; 和 &lt;code&gt;headline&lt;/code&gt; 字段：</target>
        </trans-unit>
        <trans-unit id="4403ba726940360705c2efa515fc3e84bbf483d5" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;#django.template.loader.select_template&quot;&gt;&lt;code&gt;select_template()&lt;/code&gt;&lt;/a&gt; for flexible template loading. For example, if you&amp;rsquo;ve written a news story and want some stories to have custom templates, use something like &lt;code&gt;select_template(['story_%s_detail.html' % story.id,
'story_detail.html'])&lt;/code&gt;. That&amp;rsquo;ll allow you to use a custom template for an individual story, with a fallback template for stories that don&amp;rsquo;t have custom templates.</source>
          <target state="translated">您可以使用&lt;a href=&quot;#django.template.loader.select_template&quot;&gt; &lt;code&gt;select_template()&lt;/code&gt; &lt;/a&gt;进行灵活的模板加载。例如，如果您编写了一个新闻故事，并且希望某些故事具有自定义模板，请使用诸如 &lt;code&gt;select_template(['story_%s_detail.html' % story.id, 'story_detail.html'])&lt;/code&gt; 。这样一来，您就可以针对单个故事使用自定义模板，而对于没有自定义模板的故事可以使用后备模板。</target>
        </trans-unit>
        <trans-unit id="f08498ffef56a3800e3cdec0ae335ebb912a8f60" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;#topics-db-transactions-savepoints&quot;&gt;savepoints&lt;/a&gt; to control the extent of a rollback. Before performing a database operation that could fail, you can set or update the savepoint; that way, if the operation fails, you can roll back the single offending operation, rather than the entire transaction. For example:</source>
          <target state="translated">您可以使用&lt;a href=&quot;#topics-db-transactions-savepoints&quot;&gt;保存点&lt;/a&gt;来控制回滚的程度。在执行可能失败的数据库操作之前，您可以设置或更新保存点；这样，如果操作失败，则可以回滚单个有问题的操作，而不是整个事务。例如：</target>
        </trans-unit>
        <trans-unit id="47d6d982e39d3d8fb4f1fffbfa17a318f4d336af" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.backends.AllowAllUsersModelBackend&quot;&gt;&lt;code&gt;AllowAllUsersModelBackend&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.backends.AllowAllUsersRemoteUserBackend&quot;&gt;&lt;code&gt;AllowAllUsersRemoteUserBackend&lt;/code&gt;&lt;/a&gt; if you want to allow inactive users to authenticate.</source>
          <target state="translated">如果要允许不活动的用户进行身份验证，则可以使用&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.backends.AllowAllUsersModelBackend&quot;&gt; &lt;code&gt;AllowAllUsersModelBackend&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.backends.AllowAllUsersRemoteUserBackend&quot;&gt; &lt;code&gt;AllowAllUsersRemoteUserBackend&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b54d6695350a984925ddbd1de8aa40aea02c1d13" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;../../ref/utils#django.utils.timezone.is_aware&quot;&gt;&lt;code&gt;is_aware()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/utils#django.utils.timezone.is_naive&quot;&gt;&lt;code&gt;is_naive()&lt;/code&gt;&lt;/a&gt; to determine whether datetimes are aware or naive.</source>
          <target state="translated">您可以使用&lt;a href=&quot;../../ref/utils#django.utils.timezone.is_aware&quot;&gt; &lt;code&gt;is_aware()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ref/utils#django.utils.timezone.is_naive&quot;&gt; &lt;code&gt;is_naive()&lt;/code&gt; &lt;/a&gt;来确定日期时间是否可用。</target>
        </trans-unit>
        <trans-unit id="0c9affcab154d4ecc3ac443415274affb762e500" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;get_or_create()&lt;/code&gt; through &lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; attributes and reverse relations. In that case you will restrict the queries inside the context of that relation. That could lead you to some integrity problems if you don&amp;rsquo;t use it consistently.</source>
          <target state="translated">您可以通过&lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;属性和反向关系使用 &lt;code&gt;get_or_create()&lt;/code&gt; 。在这种情况下，您将把查询限制在该关系的上下文中。如果不始终使用它，可能会导致一些完整性问题。</target>
        </trans-unit>
        <trans-unit id="b7fbbeded9db897d702094f94467d43da5fa6fde" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;get_or_create()&lt;/code&gt; through Book&amp;rsquo;s chapters field, but it only fetches inside the context of that book:</source>
          <target state="translated">您可以通过Book的 &lt;code&gt;get_or_create()&lt;/code&gt; 字段使用get_or_create（），但它只能在该书的上下文中获取：</target>
        </trans-unit>
        <trans-unit id="2bfa54faf2f4bce3b2e113765acb2507fc87e7c6" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;range&lt;/code&gt; anywhere you can use &lt;code&gt;BETWEEN&lt;/code&gt; in SQL &amp;mdash; for dates, numbers and even characters.</source>
          <target state="translated">您可以在SQL中可以在 &lt;code&gt;BETWEEN&lt;/code&gt; 中使用的任何位置使用 &lt;code&gt;range&lt;/code&gt; -用于日期，数字甚至字符。</target>
        </trans-unit>
        <trans-unit id="46e6f2287019cd1ebb69a5deba8817a6840aa214" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;register.filter()&lt;/code&gt; as a decorator instead:</source>
          <target state="translated">您可以使用 &lt;code&gt;register.filter()&lt;/code&gt; 作为装饰器：</target>
        </trans-unit>
        <trans-unit id="ec31e72a07e2e771a0fcf5d32bbdce14b2044f81" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;select_related()&lt;/code&gt; with any queryset of objects:</source>
          <target state="translated">您可以将 &lt;code&gt;select_related()&lt;/code&gt; 与任何对象的查询集一起使用：</target>
        </trans-unit>
        <trans-unit id="37d5d32fdc21c22a509f8d00832e07221fe72b7d" translate="yes" xml:space="preserve">
          <source>You can use a &lt;a href=&quot;widgets#django.forms.Select&quot;&gt;&lt;code&gt;Select&lt;/code&gt;&lt;/a&gt; widget subclass to include the value of &lt;code&gt;Topping.price&lt;/code&gt; as the HTML attribute &lt;code&gt;data-price&lt;/code&gt; for each &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; element:</source>
          <target state="translated">您可以使用&lt;a href=&quot;widgets#django.forms.Select&quot;&gt; &lt;code&gt;Select&lt;/code&gt; &lt;/a&gt;小部件子类将 &lt;code&gt;Topping.price&lt;/code&gt; 的值作为每个 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 元素的HTML属性 &lt;code&gt;data-price&lt;/code&gt; 包括在内：</target>
        </trans-unit>
        <trans-unit id="8309b5dc9f338fe8fecdc812735f2c678e848f76" translate="yes" xml:space="preserve">
          <source>You can use a cache backend that doesn&amp;rsquo;t ship with Django by setting &lt;a href=&quot;#std:setting-CACHES-BACKEND&quot;&gt;&lt;code&gt;BACKEND&lt;/code&gt;&lt;/a&gt; to a fully-qualified path of a cache backend class (i.e. &lt;code&gt;mypackage.backends.whatever.WhateverCache&lt;/code&gt;).</source>
          <target state="translated">您可以通过将&lt;a href=&quot;#std:setting-CACHES-BACKEND&quot;&gt; &lt;code&gt;BACKEND&lt;/code&gt; &lt;/a&gt;设置为缓存后端类的标准路径（即 &lt;code&gt;mypackage.backends.whatever.WhateverCache&lt;/code&gt; ）来使用Django不附带的缓存后端。</target>
        </trans-unit>
        <trans-unit id="f9d3d87d19448fb184fb6330840b87adc6d64a11" translate="yes" xml:space="preserve">
          <source>You can use a callable as the &lt;a href=&quot;../ref/models/fields#django.db.models.FileField.storage&quot;&gt;&lt;code&gt;storage&lt;/code&gt;&lt;/a&gt; parameter for &lt;a href=&quot;../ref/models/fields#django.db.models.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../ref/models/fields#django.db.models.ImageField&quot;&gt;&lt;code&gt;ImageField&lt;/code&gt;&lt;/a&gt;. This allows you to modify the used storage at runtime, selecting different storages for different environments, for example.</source>
          <target state="translated">您可以将callable用作&lt;a href=&quot;../ref/models/fields#django.db.models.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../ref/models/fields#django.db.models.ImageField&quot;&gt; &lt;code&gt;ImageField&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;../ref/models/fields#django.db.models.FileField.storage&quot;&gt; &lt;code&gt;storage&lt;/code&gt; &lt;/a&gt;参数。这样，您可以在运行时修改已使用的存储，例如为不同的环境选择不同的存储。</target>
        </trans-unit>
        <trans-unit id="d9363603813a47ce689f417bbae24e5402db294f" translate="yes" xml:space="preserve">
          <source>You can use a custom &lt;code&gt;Manager&lt;/code&gt; in a particular model by extending the base &lt;code&gt;Manager&lt;/code&gt; class and instantiating your custom &lt;code&gt;Manager&lt;/code&gt; in your model.</source>
          <target state="translated">您可以使用自定义的 &lt;code&gt;Manager&lt;/code&gt; 通过扩展底座在一个特定的模式 &lt;code&gt;Manager&lt;/code&gt; 类和实例化您的自定义 &lt;code&gt;Manager&lt;/code&gt; 中的模型。</target>
        </trans-unit>
        <trans-unit id="f1874bd4b0498de0ed45fe4c1de53bb5df5495d1" translate="yes" xml:space="preserve">
          <source>You can use a dash as the fixture name to load input from &lt;code&gt;sys.stdin&lt;/code&gt;. For example:</source>
          <target state="translated">您可以使用破折号作为灯具名称，以从 &lt;code&gt;sys.stdin&lt;/code&gt; 加载输入。例如：</target>
        </trans-unit>
        <trans-unit id="8d66330598459b81e8cc893c5068340b91787a38" translate="yes" xml:space="preserve">
          <source>You can use a data migration to move data from one third-party application to another.</source>
          <target state="translated">您可以使用数据迁移将数据从一个第三方应用程序移动到另一个。</target>
        </trans-unit>
        <trans-unit id="dd10d3b7cb53ccb059f512ef65b6c3bf3e810f0c" translate="yes" xml:space="preserve">
          <source>You can use a database backend that doesn&amp;rsquo;t ship with Django by setting &lt;code&gt;ENGINE&lt;/code&gt; to a fully-qualified path (i.e. &lt;code&gt;mypackage.backends.whatever&lt;/code&gt;).</source>
          <target state="translated">通过将 &lt;code&gt;ENGINE&lt;/code&gt; 设置为完全限定的路径（即 &lt;code&gt;mypackage.backends.whatever&lt;/code&gt; ），可以使用Django不附带的数据库后端。</target>
        </trans-unit>
        <trans-unit id="92f7a4fec207fc65777e5b8f2da8d3495ae65736" translate="yes" xml:space="preserve">
          <source>You can use a template backend that doesn&amp;rsquo;t ship with Django by setting &lt;code&gt;BACKEND&lt;/code&gt; to a fully-qualified path (i.e. &lt;code&gt;'mypackage.whatever.Backend'&lt;/code&gt;).</source>
          <target state="translated">通过将 &lt;code&gt;BACKEND&lt;/code&gt; 设置为标准路径（即 &lt;code&gt;'mypackage.whatever.Backend'&lt;/code&gt; ），可以使用Django 随附的模板后端。</target>
        </trans-unit>
        <trans-unit id="92cba064a30e47fb09c650e1f175f126be54f156" translate="yes" xml:space="preserve">
          <source>You can use an optional first positional argument to a &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; to designate a human-readable name. That&amp;rsquo;s used in a couple of introspective parts of Django, and it doubles as documentation. If this field isn&amp;rsquo;t provided, Django will use the machine-readable name. In this example, we&amp;rsquo;ve only defined a human-readable name for &lt;code&gt;Question.pub_date&lt;/code&gt;. For all other fields in this model, the field&amp;rsquo;s machine-readable name will suffice as its human-readable name.</source>
          <target state="translated">您可以对&lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;使用可选的第一个位置参数，以指定易于理解的名称。在Django的一些自省部分中使用了该功能，并且它还作为文档使用。如果未提供此字段，则Django将使用机器可读的名称。在此示例中，我们仅为 &lt;code&gt;Question.pub_date&lt;/code&gt; 定义了易于理解的名称。对于此模型中的所有其他字段，该字段的机器可读名称将足以作为其人类可读的名称。</target>
        </trans-unit>
        <trans-unit id="16498e9acb4d62e77f98c34f264514c3d9399778" translate="yes" xml:space="preserve">
          <source>You can use any number of values in a &lt;code&gt;cycle&lt;/code&gt; tag, separated by spaces. Values enclosed in single quotes (&lt;code&gt;'&lt;/code&gt;) or double quotes (&lt;code&gt;&quot;&lt;/code&gt;) are treated as string literals, while values without quotes are treated as template variables.</source>
          <target state="translated">您可以在 &lt;code&gt;cycle&lt;/code&gt; 标签中使用任意数量的值，并用空格分隔。用单引号（ &lt;code&gt;'&lt;/code&gt; ）或双引号（ &lt;code&gt;&quot;&lt;/code&gt; ）括起来的值被视为字符串文字，而不带引号的值被视为模板变量。</target>
        </trans-unit>
        <trans-unit id="7a510751e8de252935f1e10125bdb70fb8b2bc4d" translate="yes" xml:space="preserve">
          <source>You can use any query expression with &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;, just like with &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; - again, see &lt;a href=&quot;#field-lookups&quot;&gt;Field lookups&lt;/a&gt; below.</source>
          <target state="translated">您可以将任何查询表达式与&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; 一起使用&lt;/a&gt;，就像与&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; 一样&lt;/a&gt; -再次，请参见下面的&lt;a href=&quot;#field-lookups&quot;&gt;字段查找&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc093be4c02d7dab18dd23a966a46095f254728c" translate="yes" xml:space="preserve">
          <source>You can use as many levels of inheritance as needed. One common way of using inheritance is the following three-level approach:</source>
          <target state="translated">你可以根据需要使用任意层次的继承。一种常见的使用继承的方式是以下三层方法。</target>
        </trans-unit>
        <trans-unit id="65ead1eb400f55082b5200b9418a0461a320acd1" translate="yes" xml:space="preserve">
          <source>You can use built-in and &lt;a href=&quot;../../howto/custom-lookups&quot;&gt;custom lookups&lt;/a&gt; in ordering. For example:</source>
          <target state="translated">您可以在排序中使用内置和&lt;a href=&quot;../../howto/custom-lookups&quot;&gt;自定义查找&lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="2c747bc94aa66ef2b8020c71d5ea1f11d1d42c7c" translate="yes" xml:space="preserve">
          <source>You can use multiple expressions inside a single &lt;code&gt;blocktrans&lt;/code&gt; tag:</source>
          <target state="translated">您可以在单个 &lt;code&gt;blocktrans&lt;/code&gt; 标记内使用多个表达式：</target>
        </trans-unit>
        <trans-unit id="5943da48bac38cfbbe9fec4f1952495d57d24af3" translate="yes" xml:space="preserve">
          <source>You can use multiple expressions inside a single &lt;code&gt;blocktranslate&lt;/code&gt; tag:</source>
          <target state="translated">您可以在单个 &lt;code&gt;blocktranslate&lt;/code&gt; 标记内使用多个表达式：</target>
        </trans-unit>
        <trans-unit id="426890af953c8a409be95fb629f99d9331b23fb3" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;#django.db.models.Prefetch&quot;&gt;&lt;code&gt;Prefetch&lt;/code&gt;&lt;/a&gt; object to further control the prefetch operation.</source>
          <target state="translated">您可以使用&lt;a href=&quot;#django.db.models.Prefetch&quot;&gt; &lt;code&gt;Prefetch&lt;/code&gt; &lt;/a&gt;对象进一步控制预取操作。</target>
        </trans-unit>
        <trans-unit id="2f28e11974e8d8a1c96ddaa4a7ec75ebbc4037d8" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;#django.shortcuts.redirect&quot;&gt;&lt;code&gt;redirect()&lt;/code&gt;&lt;/a&gt; function in a number of ways.</source>
          <target state="translated">您可以通过多种方式使用&lt;a href=&quot;#django.shortcuts.redirect&quot;&gt; &lt;code&gt;redirect()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="6e2b78a4b391e2973b737fd00b1e1115c2a5f6c2" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;#std:templatetag-resetcycle&quot;&gt;&lt;code&gt;resetcycle&lt;/code&gt;&lt;/a&gt; tag to make a &lt;code&gt;{% cycle %}&lt;/code&gt; tag restart from its first value when it&amp;rsquo;s next encountered.</source>
          <target state="translated">您可以使用&lt;a href=&quot;#std:templatetag-resetcycle&quot;&gt; &lt;code&gt;resetcycle&lt;/code&gt; &lt;/a&gt;标记使 &lt;code&gt;{% cycle %}&lt;/code&gt; 标记在下一次遇到时从其第一个值重新启动。</target>
        </trans-unit>
        <trans-unit id="1d0449373cf27dd818622e912858de34ba12fbf6" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;../../ref/settings#std:setting-DEFAULT_INDEX_TABLESPACE&quot;&gt;&lt;code&gt;DEFAULT_INDEX_TABLESPACE&lt;/code&gt;&lt;/a&gt; setting to specify a default value for &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.db_tablespace&quot;&gt;&lt;code&gt;db_tablespace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您可以使用&lt;a href=&quot;../../ref/settings#std:setting-DEFAULT_INDEX_TABLESPACE&quot;&gt; &lt;code&gt;DEFAULT_INDEX_TABLESPACE&lt;/code&gt; &lt;/a&gt;设置为&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.db_tablespace&quot;&gt; &lt;code&gt;db_tablespace&lt;/code&gt; &lt;/a&gt;指定默认值。</target>
        </trans-unit>
        <trans-unit id="08c89f5efb2d40fcad2a988500e78309972fc0d4" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;../../ref/settings#std:setting-DEFAULT_TABLESPACE&quot;&gt;&lt;code&gt;DEFAULT_TABLESPACE&lt;/code&gt;&lt;/a&gt; setting to specify a default value for &lt;a href=&quot;../../ref/models/options#django.db.models.Options.db_tablespace&quot;&gt;&lt;code&gt;db_tablespace&lt;/code&gt;&lt;/a&gt;. This is useful for setting a tablespace for the built-in Django apps and other applications whose code you cannot control.</source>
          <target state="translated">您可以使用&lt;a href=&quot;../../ref/settings#std:setting-DEFAULT_TABLESPACE&quot;&gt; &lt;code&gt;DEFAULT_TABLESPACE&lt;/code&gt; &lt;/a&gt;设置为&lt;a href=&quot;../../ref/models/options#django.db.models.Options.db_tablespace&quot;&gt; &lt;code&gt;db_tablespace&lt;/code&gt; &lt;/a&gt;指定默认值。这对于为内置Django应用程序和其他无法控制其代码的应用程序设置表空间很有用。</target>
        </trans-unit>
        <trans-unit id="72d328e099ddb36a6f5dc24d94c7cab7c045829f" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;settings#std:setting-TEST_TEMPLATE&quot;&gt;&lt;code&gt;TEST['TEMPLATE']&lt;/code&gt;&lt;/a&gt; setting to specify a &lt;a href=&quot;https://www.postgresql.org/docs/current/sql-createdatabase.html&quot;&gt;template&lt;/a&gt; (e.g. &lt;code&gt;'template0'&lt;/code&gt;) from which to create a test database.</source>
          <target state="translated">您可以使用&lt;a href=&quot;settings#std:setting-TEST_TEMPLATE&quot;&gt; &lt;code&gt;TEST['TEMPLATE']&lt;/code&gt; &lt;/a&gt;设置来指定用于创建测试数据库的&lt;a href=&quot;https://www.postgresql.org/docs/current/sql-createdatabase.html&quot;&gt;模板&lt;/a&gt;（例如 &lt;code&gt;'template0'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="95899140984bdaa5cae252354b88cc43e2e92f91" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;bulk=False&lt;/code&gt; argument to instead have the related manager perform the update by calling &lt;code&gt;e.save()&lt;/code&gt;.</source>
          <target state="translated">您可以使用 &lt;code&gt;bulk=False&lt;/code&gt; 参数来使相关管理器通过调用 &lt;code&gt;e.save()&lt;/code&gt; 来执行更新。</target>
        </trans-unit>
        <trans-unit id="209e9c0d4a7c935b74e9fb9acec70104eb829bf8" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;{% regroup %}&lt;/code&gt; tag to group the list of cities by country. The following snippet of template code would accomplish this:</source>
          <target state="translated">您可以使用 &lt;code&gt;{% regroup %}&lt;/code&gt; 标记按国家对城市列表进行分组。下面的模板代码片段将完成此任务：</target>
        </trans-unit>
        <trans-unit id="f1b572a2a9ea7d5dd723326b29e0f83956f9f8cf" translate="yes" xml:space="preserve">
          <source>You can use the sites framework in your Django views to do particular things based on the site in which the view is being called. For example:</source>
          <target state="translated">你可以在你的Django视图中使用sites框架,根据视图被调用的站点来做特定的事情。比如说,你可以在Django视图中使用sites框架来做特定的事情。</target>
        </trans-unit>
        <trans-unit id="251336f55968d8e025e0e36ec03bddb07ba457d7" translate="yes" xml:space="preserve">
          <source>You can use the syntax &lt;code&gt;{% firstof var1 var2 var3 as value %}&lt;/code&gt; to store the output inside a variable.</source>
          <target state="translated">您可以使用语法 &lt;code&gt;{% firstof var1 var2 var3 as value %}&lt;/code&gt; 将输出存储在变量中。</target>
        </trans-unit>
        <trans-unit id="9d325ffc1ec9a701c69a81ed10a8a4b4f68813eb" translate="yes" xml:space="preserve">
          <source>You can use this as a context manager in the same way as &lt;a href=&quot;#django.test.SimpleTestCase.assertTemplateUsed&quot;&gt;&lt;code&gt;assertTemplateUsed()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您可以将其用作上下文管理器，方法与&lt;a href=&quot;#django.test.SimpleTestCase.assertTemplateUsed&quot;&gt; &lt;code&gt;assertTemplateUsed()&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="3ca321ccfc124d908ed220e9eda36cad1dd4391b" translate="yes" xml:space="preserve">
          <source>You can use this as a context manager, like this:</source>
          <target state="translated">你可以把它作为一个上下文管理器,像这样。</target>
        </trans-unit>
        <trans-unit id="0a0eedbcab7eccf98f4dadd0b73d3d91ce97149f" translate="yes" xml:space="preserve">
          <source>You can use this option in your local development environment, but since your local development settings module may not have many of your production settings, you will probably want to point the &lt;code&gt;check&lt;/code&gt; command at a different settings module, either by setting the &lt;a href=&quot;../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-3&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt; environment variable, or by passing the &lt;code&gt;--settings&lt;/code&gt; option:</source>
          <target state="translated">您可以在本地开发环境中使用此选项，但是由于本地开发设置模块可能没有很多生产设置，因此您可能希望将 &lt;code&gt;check&lt;/code&gt; 命令指向其他设置模块，方法是设置&lt;a href=&quot;../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-3&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt;环境变量，或通过 &lt;code&gt;--settings&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="c267c6ba35e69caf89748cf4ad7e49b13d1da483" translate="yes" xml:space="preserve">
          <source>You can use this option in your local development environment, but since your local development settings module may not have many of your production settings, you will probably want to point the &lt;code&gt;check&lt;/code&gt; command at a different settings module, either by setting the &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; environment variable, or by passing the &lt;code&gt;--settings&lt;/code&gt; option:</source>
          <target state="translated">您可以在本地开发环境中使用此选项，但是由于本地开发设置模块可能没有很多生产设置，因此您可能需要将 &lt;code&gt;check&lt;/code&gt; 命令指向其他设置模块，方法是设置 &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; 环境变量，或通过传递 &lt;code&gt;--settings&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="ce2b3d34ed02acb1079c75e9f163e6de461c128b" translate="yes" xml:space="preserve">
          <source>You can use variables, too. For example, if you have two template variables, &lt;code&gt;rowvalue1&lt;/code&gt; and &lt;code&gt;rowvalue2&lt;/code&gt;, you can alternate between their values like this:</source>
          <target state="translated">您也可以使用变量。例如，如果您有两个模板变量 &lt;code&gt;rowvalue1&lt;/code&gt; 和 &lt;code&gt;rowvalue2&lt;/code&gt; ，则可以在它们的值之间进行交替，如下所示：</target>
        </trans-unit>
        <trans-unit id="02fdc517f3e5877e6f4c38ffa3c5d60dfb73b921" translate="yes" xml:space="preserve">
          <source>You can verify that Python is installed by typing &lt;code&gt;python&lt;/code&gt; from your shell; you should see something like:</source>
          <target state="translated">您可以通过在shell中键入 &lt;code&gt;python&lt;/code&gt; 来验证是否已安装Python；您应该看到类似以下内容：</target>
        </trans-unit>
        <trans-unit id="0e501e227fbc3a22ca04992047d93d3c82059d52" translate="yes" xml:space="preserve">
          <source>You can write code to perform validation for particular form fields (based on their name) or for the form as a whole (considering combinations of various fields). More information about this is in &lt;a href=&quot;validation&quot;&gt;Form and field validation&lt;/a&gt;.</source>
          <target state="translated">您可以编写代码以对特定表单字段（基于其名称）或整个表单（考虑各种字段的组合）执行验证。有关此的更多信息，请参见&amp;ldquo; &lt;a href=&quot;validation&quot;&gt;表单和字段验证&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e3e47c817004954dc2f2abe011ef241182d9bad2" translate="yes" xml:space="preserve">
          <source>You can write custom handlers that customize how Django handles files. You could, for example, use custom handlers to enforce user-level quotas, compress data on the fly, render progress bars, and even send data to another storage location directly without storing it locally. See &lt;a href=&quot;../../ref/files/uploads#custom-upload-handlers&quot;&gt;Writing custom upload handlers&lt;/a&gt; for details on how you can customize or completely replace upload behavior.</source>
          <target state="translated">您可以编写自定义处理程序，以自定义Django处理文件的方式。例如，您可以使用自定义处理程序强制执行用户级别的配额，动态压缩数据，渲染进度条，甚至直接将数据发送到另一个存储位置而无需将其存储在本地。有关如何自定义或完全替换上载行为的详细信息，请参见&lt;a href=&quot;../../ref/files/uploads#custom-upload-handlers&quot;&gt;编写自定义上载处理程序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6f37750faa7077c3292896a56ed8763d5e4e92aa" translate="yes" xml:space="preserve">
          <source>You can write your own query expression classes that use, and can integrate with, other query expressions. Let&amp;rsquo;s step through an example by writing an implementation of the &lt;code&gt;COALESCE&lt;/code&gt; SQL function, without using the built-in &lt;a href=&quot;#func-expressions&quot;&gt;Func() expressions&lt;/a&gt;.</source>
          <target state="translated">您可以编写自己的查询表达式类，这些类可以使用其他查询表达式并与之集成。让我们通过编写 &lt;code&gt;COALESCE&lt;/code&gt; SQL函数的实现而不使用内置的&lt;a href=&quot;#func-expressions&quot;&gt;Func（）表达式来&lt;/a&gt;逐步介绍一个示例。</target>
        </trans-unit>
        <trans-unit id="6a964ba2ad729c6a51ecce903c432ce1f04d0782" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t associate it with a &lt;code&gt;Publication&lt;/code&gt; until it&amp;rsquo;s been saved:</source>
          <target state="translated">在将其保存之前，您无法将其与 &lt;code&gt;Publication&lt;/code&gt; 关联：</target>
        </trans-unit>
        <trans-unit id="e8cd32dd116d4cd6d590d9d6b528ea0872397650" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t change the base class of a custom field because Django won&amp;rsquo;t detect the change and make a migration for it. For example, if you start with:</source>
          <target state="translated">您无法更改自定义字段的基类，因为Django不会检测到更改并对其进行迁移。例如，如果您以：</target>
        </trans-unit>
        <trans-unit id="261d136004c4760d61ed98f67aabd718fcfe476a" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t modify the number of positional arguments in an already migrated custom field without raising a &lt;code&gt;TypeError&lt;/code&gt;. The old migration will call the modified &lt;code&gt;__init__&lt;/code&gt; method with the old signature. So if you need a new argument, please create a keyword argument and add something like &lt;code&gt;assert 'argument_name' in kwargs&lt;/code&gt; in the constructor.</source>
          <target state="translated">您必须在未引发 &lt;code&gt;TypeError&lt;/code&gt; 的情况下修改已迁移的自定义字段中的位置参数的数量。旧的迁移将使用旧的签名调用经过修改的 &lt;code&gt;__init__&lt;/code&gt; 方法。因此，如果您需要一个新的参数，请创建一个关键字参数，并在构造函数的 &lt;code&gt;assert 'argument_name' in kwargs&lt;/code&gt; 中添加诸如assert'argument_name'之类的内容。</target>
        </trans-unit>
        <trans-unit id="2f49fa07049c2554197c14f0ca88f806095de6f5" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t raise validation errors in &lt;code&gt;Model.clean()&lt;/code&gt; for fields that don&amp;rsquo;t appear in a model form (a form may limit its fields using &lt;code&gt;Meta.fields&lt;/code&gt; or &lt;code&gt;Meta.exclude&lt;/code&gt;). Doing so will raise a &lt;code&gt;ValueError&lt;/code&gt; because the validation error won&amp;rsquo;t be able to be associated with the excluded field.</source>
          <target state="translated">您不能在 &lt;code&gt;Model.clean()&lt;/code&gt; 中引发针对未以模型形式出现的字段的验证错误（表单可以使用 &lt;code&gt;Meta.fields&lt;/code&gt; 或 &lt;code&gt;Meta.exclude&lt;/code&gt; 限制其字段）。这样做将引发 &lt;code&gt;ValueError&lt;/code&gt; ,因为验证错误将无法与排除字段相关联。</target>
        </trans-unit>
        <trans-unit id="f5409fd32a7a1f3c8cd7346620244124cab24880" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t share pickles between versions</source>
          <target state="translated">您不能在版本之间共享泡菜</target>
        </trans-unit>
        <trans-unit id="51f44ae00b668fc97d295787bb60e31fd6f56dad" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t use &lt;code&gt;select_for_update()&lt;/code&gt; on nullable relations:</source>
          <target state="translated">您不能在可为空的关系上使用 &lt;code&gt;select_for_update()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="54e00fe4e1e12c069a095ed7a158bac5fb7768a9" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t use this decorator if you have to reference your model admin class in its &lt;code&gt;__init__()&lt;/code&gt; method, e.g. &lt;code&gt;super(PersonAdmin, self).__init__(*args, **kwargs)&lt;/code&gt;. You can use &lt;code&gt;super().__init__(*args, **kwargs)&lt;/code&gt;.</source>
          <target state="translated">如果必须在其 &lt;code&gt;__init__()&lt;/code&gt; 方法中引用模型管理类，例如 &lt;code&gt;super(PersonAdmin, self).__init__(*args, **kwargs)&lt;/code&gt; 则不能使用此装饰器。您可以使用 &lt;code&gt;super().__init__(*args, **kwargs)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f085bc2eb94c1604d080dae51c94a463c39b3239" translate="yes" xml:space="preserve">
          <source>You cannot access its content, except by iterating the response object itself. This should only occur when the response is returned to the client.</source>
          <target state="translated">你不能访问它的内容,除非通过迭代响应对象本身。这只应该发生在响应返回给客户端的时候。</target>
        </trans-unit>
        <trans-unit id="3c8498e8f25a7f447e9929038228e4d96f246de6" translate="yes" xml:space="preserve">
          <source>You cannot call &lt;code&gt;update()&lt;/code&gt; on a &lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; that has had a slice taken or can otherwise no longer be filtered.</source>
          <target state="translated">您不能在已获取切片的&lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;上调用 &lt;code&gt;update()&lt;/code&gt; ，否则将无法对其进行过滤。</target>
        </trans-unit>
        <trans-unit id="78bb94d409df824482a53bc7e81de3dfe9a3423f" translate="yes" xml:space="preserve">
          <source>You cannot change the AUTH_USER_MODEL setting during the lifetime of a project (i.e. once you have made and migrated models that depend on it) without serious effort. It is intended to be set at the project start, and the model it refers to must be available in the first migration of the app that it lives in. See &lt;a href=&quot;../topics/auth/customizing#auth-custom-user&quot;&gt;Substituting a custom User model&lt;/a&gt; for more details.</source>
          <target state="translated">在项目的生命周期内（即一旦创建并迁移了依赖于该模型的模型），就不能费力地更改AUTH_USER_MODEL设置。它打算在项目开始时设置，并且它所引用的模型必须在其所驻留的应用程序的首次迁移中可用。有关更多详细信息，请参见&lt;a href=&quot;../topics/auth/customizing#auth-custom-user&quot;&gt;替换自定义用户模型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cba994d43826bcdb6ed9c4bfdd6f3950a34ee012" translate="yes" xml:space="preserve">
          <source>You cannot update the model&amp;rsquo;s primary key.</source>
          <target state="translated">您无法更新模型的主键。</target>
        </trans-unit>
        <trans-unit id="8217a785da4a9dc66aee01efce1e6ce9c03b6982" translate="yes" xml:space="preserve">
          <source>You cannot use the file-like object &lt;code&gt;tell()&lt;/code&gt; or &lt;code&gt;write()&lt;/code&gt; methods. Doing so will raise an exception.</source>
          <target state="translated">您不能使用类似文件的对象 &lt;code&gt;tell()&lt;/code&gt; 或 &lt;code&gt;write()&lt;/code&gt; 方法。这样做将引发异常。</target>
        </trans-unit>
        <trans-unit id="f45e6848161d20051f9a51c412b1ea42edae72e0" translate="yes" xml:space="preserve">
          <source>You compile template code into a &lt;a href=&quot;#django.template.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您将模板代码编译为&lt;a href=&quot;#django.template.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8728c7f0793ed0fa9268f8764d9434855704f172" translate="yes" xml:space="preserve">
          <source>You configure an &lt;a href=&quot;#django.template.Engine&quot;&gt;&lt;code&gt;Engine&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您配置&lt;a href=&quot;#django.template.Engine&quot;&gt; &lt;code&gt;Engine&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f470cc7bd442decd6abeaa6592829738482a1229" translate="yes" xml:space="preserve">
          <source>You configure the cached template loader with a list of other loaders that it should wrap. The wrapped loaders are used to locate unknown templates when they&amp;rsquo;re first encountered. The cached loader then stores the compiled &lt;code&gt;Template&lt;/code&gt; in memory. The cached &lt;code&gt;Template&lt;/code&gt; instance is returned for subsequent requests to load the same template.</source>
          <target state="translated">您为缓存的模板加载器配置了应包装的其他加载器列表。打包的加载器用于在首次遇到未知模板时定位它们。然后，缓存的加载器会将编译后的 &lt;code&gt;Template&lt;/code&gt; 存储在内存中。返回缓存的 &lt;code&gt;Template&lt;/code&gt; 实例，以供后续请求加载同一模板。</target>
        </trans-unit>
        <trans-unit id="c55858f293a03dd3465f279c7ceeda39fb6b1187" translate="yes" xml:space="preserve">
          <source>You could also replace the Django WSGI application with a custom WSGI application that later delegates to the Django WSGI application, if you want to combine a Django application with a WSGI application of another framework.</source>
          <target state="translated">如果你想把Django应用和其他框架的WSGI应用结合起来,你也可以用一个自定义的WSGI应用来代替Django WSGI应用,之后再委托给Django WSGI应用。</target>
        </trans-unit>
        <trans-unit id="3e53873100eef59aeaa65665224b03c0d96d9443" translate="yes" xml:space="preserve">
          <source>You could also use a proxy model to define a different default ordering on a model. You might not always want to order the &lt;code&gt;Person&lt;/code&gt; model, but regularly order by the &lt;code&gt;last_name&lt;/code&gt; attribute when you use the proxy:</source>
          <target state="translated">您还可以使用代理模型在模型上定义不同的默认顺序。您可能并不总是想要订购 &lt;code&gt;Person&lt;/code&gt; 模型，而是在使用代理时按 &lt;code&gt;last_name&lt;/code&gt; 属性定期订购：</target>
        </trans-unit>
        <trans-unit id="0f892d8929adacf77c4968c7ca64bf7c76769036" translate="yes" xml:space="preserve">
          <source>You could also write a decorator to encapsulate this logic:</source>
          <target state="translated">你也可以写一个装饰器来封装这个逻辑。</target>
        </trans-unit>
        <trans-unit id="b6bc7cb9e336c1ee005f32cab8ef58a51a272e42" translate="yes" xml:space="preserve">
          <source>You could code this without using the alias. This example is identical to the previous one:</source>
          <target state="translated">你可以不使用别名来编写这个代码。这个例子与前一个例子相同。</target>
        </trans-unit>
        <trans-unit id="74aac055ee7d1bffca12f28ed7344eaaeb81b9d3" translate="yes" xml:space="preserve">
          <source>You could then execute custom SQL like so:</source>
          <target state="translated">然后你可以像这样执行自定义SQL。</target>
        </trans-unit>
        <trans-unit id="d54b22f73e1c12af3870583f3dcbc1fda80a9478" translate="yes" xml:space="preserve">
          <source>You couldn&amp;rsquo;t use the &lt;a href=&quot;#std:templatefilter-safe&quot;&gt;&lt;code&gt;safe&lt;/code&gt;&lt;/a&gt; filter directly in this case, as it would first convert the variable into a string, rather than working with the individual elements of the sequence.</source>
          <target state="translated">在这种情况下，您不能直接使用&lt;a href=&quot;#std:templatefilter-safe&quot;&gt; &lt;code&gt;safe&lt;/code&gt; &lt;/a&gt;过滤器，因为它会首先将变量转换为字符串，而不是使用序列中的各个元素。</target>
        </trans-unit>
        <trans-unit id="08e6af68ea58ba1bc89e0c1071a0c4608e557f5c" translate="yes" xml:space="preserve">
          <source>You create and update the message files the same way as the other Django message files &amp;ndash; with the &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;django-admin makemessages&lt;/code&gt;&lt;/a&gt; tool. The only difference is you need to explicitly specify what in gettext parlance is known as a domain in this case the &lt;code&gt;djangojs&lt;/code&gt; domain, by providing a &lt;code&gt;-d
djangojs&lt;/code&gt; parameter, like this:</source>
          <target state="translated">您可以使用&lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt; &lt;code&gt;django-admin makemessages&lt;/code&gt; &lt;/a&gt;工具以与其他Django消息文件相同的方式创建和更新消息文件。唯一的区别是，您需要通过提供 &lt;code&gt;-d djangojs&lt;/code&gt; 参数，以gettext的方式明确指定在此情况下称为 &lt;code&gt;djangojs&lt;/code&gt; 域的域：</target>
        </trans-unit>
        <trans-unit id="f2b091b34ea7a9184c43a21e2e20961d81d439cf" translate="yes" xml:space="preserve">
          <source>You created &lt;code&gt;mysite/templates&lt;/code&gt; in &lt;a href=&quot;tutorial07&quot;&gt;Tutorial 7&lt;/a&gt;, and &lt;code&gt;polls/templates&lt;/code&gt; in &lt;a href=&quot;tutorial03&quot;&gt;Tutorial 3&lt;/a&gt;. Now perhaps it is clearer why we chose to have separate template directories for the project and application: everything that is part of the polls application is in &lt;code&gt;polls&lt;/code&gt;. It makes the application self-contained and easier to drop into a new project.</source>
          <target state="translated">您创建 &lt;code&gt;mysite/templates&lt;/code&gt; 在&lt;a href=&quot;tutorial07&quot;&gt;教程7&lt;/a&gt;，和 &lt;code&gt;polls/templates&lt;/code&gt; 在&lt;a href=&quot;tutorial03&quot;&gt;教程3&lt;/a&gt;。现在也许更清楚了，为什么我们选择为项目和应用程序使用单独的模板目录：polls应用程序中的所有内容都在 &lt;code&gt;polls&lt;/code&gt; 中。它使应用程序自包含，并且更容易放入新项目中。</target>
        </trans-unit>
        <trans-unit id="f8a44d79854f96dfc976d73e8ed62a2ded1b15e8" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t even need to provide a &lt;code&gt;success_url&lt;/code&gt; for &lt;a href=&quot;../../ref/class-based-views/generic-editing#django.views.generic.edit.CreateView&quot;&gt;&lt;code&gt;CreateView&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../ref/class-based-views/generic-editing#django.views.generic.edit.UpdateView&quot;&gt;&lt;code&gt;UpdateView&lt;/code&gt;&lt;/a&gt; - they will use &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_absolute_url&quot;&gt;&lt;code&gt;get_absolute_url()&lt;/code&gt;&lt;/a&gt; on the model object if available.</source>
          <target state="translated">你甚至都不需要提供 &lt;code&gt;success_url&lt;/code&gt; 为&lt;a href=&quot;../../ref/class-based-views/generic-editing#django.views.generic.edit.CreateView&quot;&gt; &lt;code&gt;CreateView&lt;/code&gt; 的&lt;/a&gt;或&lt;a href=&quot;../../ref/class-based-views/generic-editing#django.views.generic.edit.UpdateView&quot;&gt; &lt;code&gt;UpdateView&lt;/code&gt; &lt;/a&gt; -他们会用&lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_absolute_url&quot;&gt; &lt;code&gt;get_absolute_url()&lt;/code&gt; &lt;/a&gt;如果可用的模型对象。</target>
        </trans-unit>
        <trans-unit id="4160cc196a512037d0beacbaa320a530aa20025f" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t have to do anything to activate the default routing scheme &amp;ndash; it is provided &amp;lsquo;out of the box&amp;rsquo; on every Django project. However, if you want to implement more interesting database allocation behaviors, you can define and install your own database routers.</source>
          <target state="translated">您无需执行任何操作即可激活默认的路由方案-每个Django项目都&amp;ldquo;开箱即用&amp;rdquo;提供了该方案。但是，如果要实现更有趣的数据库分配行为，则可以定义并安装自己的数据库路由器。</target>
        </trans-unit>
        <trans-unit id="a9a85fc22ac1c3259ffeeb003148fac94cb0494c" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t have to log to the console. Here&amp;rsquo;s a configuration which writes all logging from the &lt;a href=&quot;#django-logger&quot;&gt;django&lt;/a&gt; named logger to a local file:</source>
          <target state="translated">您不必登录到控制台。这是一个配置，它将所有日志从名为logger的&lt;a href=&quot;#django-logger&quot;&gt;django&lt;/a&gt;写入本地文件：</target>
        </trans-unit>
        <trans-unit id="e4c07a3cd038188df0776dea92c657f155d41211" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t need to define both &lt;code&gt;natural_key()&lt;/code&gt; and &lt;code&gt;get_by_natural_key()&lt;/code&gt;. If you don&amp;rsquo;t want Django to output natural keys during serialization, but you want to retain the ability to load natural keys, then you can opt to not implement the &lt;code&gt;natural_key()&lt;/code&gt; method.</source>
          <target state="translated">您无需同时定义 &lt;code&gt;natural_key()&lt;/code&gt; 和 &lt;code&gt;get_by_natural_key()&lt;/code&gt; 。如果您不希望Django在序列化过程中输出自然键，但希望保留加载自然键的功能，则可以选择不实现 &lt;code&gt;natural_key()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="83eb1a4f6ac0c32ceb1abc635578c2cc75703a04" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t need to explicitly render responses &amp;ndash; responses will be automatically rendered once all template response middleware has been called.</source>
          <target state="translated">您无需显式呈现响应-调用所有模板响应中间件后，响应将自动呈现。</target>
        </trans-unit>
        <trans-unit id="54630aef1ba79d8e3bbb2f9c8dfd20c2056e06e0" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t need to learn too much about &lt;code&gt;ProjectState&lt;/code&gt; to write migrations; just know that it has an &lt;code&gt;apps&lt;/code&gt; property that gives access to an app registry (which you can then call &lt;code&gt;get_model&lt;/code&gt; on).</source>
          <target state="translated">您无需了解太多有关 &lt;code&gt;ProjectState&lt;/code&gt; 的知识即可编写迁移。只需知道它具有 &lt;code&gt;apps&lt;/code&gt; 属性即可访问应用程序注册表（然后可以将其调用 &lt;code&gt;get_model&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="160dd44c01feea323b804baf3dd9f87e86d2b58f" translate="yes" xml:space="preserve">
          <source>You find many &lt;code&gt;TypeError&lt;/code&gt; or &lt;code&gt;AttributeError&lt;/code&gt; exceptions filling your Web server&amp;rsquo;s log files. This generally means that you are creating GEOS objects at the top level of some of your Python modules. Then, due to a race condition in the garbage collector, your module is garbage collected before the GEOS object. To prevent this, create &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; objects inside the local scope of your functions/methods.</source>
          <target state="translated">您会发现许多 &lt;code&gt;TypeError&lt;/code&gt; 或 &lt;code&gt;AttributeError&lt;/code&gt; 异常填充了Web服务器的日志文件。通常，这意味着您将在某些Python模块的顶层创建GEOS对象。然后，由于垃圾收集器中的竞争状况，您的模块将在GEOS对象之前被垃圾收集。为防止这种情况，请在函数/方法的本地范围内创建&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="f7f87b8aba8eaa1962a0aac79270b5cad62722e0" translate="yes" xml:space="preserve">
          <source>You generally shouldn&amp;rsquo;t have to set or change that attribute which should be setup depending on the field class. It matches the OpenGIS standard geometry name.</source>
          <target state="translated">通常，您不必设置或更改应根据字段类设置的属性。它与OpenGIS标准几何名称匹配。</target>
        </trans-unit>
        <trans-unit id="15b3f03c81a824320c03807b92eb7044b21a3445" translate="yes" xml:space="preserve">
          <source>You get a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; by using your model&amp;rsquo;s &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt;. Each model has at least one &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt;, and it&amp;rsquo;s called &lt;a href=&quot;../../ref/models/class#django.db.models.Model.objects&quot;&gt;&lt;code&gt;objects&lt;/code&gt;&lt;/a&gt; by default. Access it directly via the model class, like so:</source>
          <target state="translated">您可以使用模型的&lt;a href=&quot;managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt;获得&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;。每个模型都有至少一个&lt;a href=&quot;managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt;，默认情况下称为&lt;a href=&quot;../../ref/models/class#django.db.models.Model.objects&quot;&gt; &lt;code&gt;objects&lt;/code&gt; &lt;/a&gt;。通过模型类直接访问它，如下所示：</target>
        </trans-unit>
        <trans-unit id="a583c85f0934f0425292a79bacce3da9955d3da1" translate="yes" xml:space="preserve">
          <source>You have legacy data that is not valid.</source>
          <target state="translated">你的遗留数据是无效的。</target>
        </trans-unit>
        <trans-unit id="77004c1ae190913508fc2d85735e470a24aadb04" translate="yes" xml:space="preserve">
          <source>You have not changed your models since you made their tables. For migrations to work, you must make the initial migration &lt;em&gt;first&lt;/em&gt; and then make changes, as Django compares changes against migration files, not the database.</source>
          <target state="translated">自制作表格以来，您尚未更改模型。对于迁移工作，你必须使初始迁移&lt;em&gt;第一&lt;/em&gt;，然后进行更改，如Django的比较反对迁移文件，而不是数据库的变化。</target>
        </trans-unit>
        <trans-unit id="9f88ddf1dfc56d7ca15858fd4b410a107a196f7d" translate="yes" xml:space="preserve">
          <source>You have not manually edited your database - Django won&amp;rsquo;t be able to detect that your database doesn&amp;rsquo;t match your models, you&amp;rsquo;ll just get errors when migrations try to modify those tables.</source>
          <target state="translated">您尚未手动编辑数据库-Django无法检测到您的数据库与您的模型不匹配，在迁移尝试修改这些表时，您只会得到错误。</target>
        </trans-unit>
        <trans-unit id="67721fac704c1d5aba66d47dc56365c6ab845fe7" translate="yes" xml:space="preserve">
          <source>You have now wired an &lt;code&gt;index&lt;/code&gt; view into the URLconf. Verify it&amp;rsquo;s working with the following command:</source>
          <target state="translated">现在，您已将 &lt;code&gt;index&lt;/code&gt; 视图连接到URLconf中。验证它是否与以下命令一起使用：</target>
        </trans-unit>
        <trans-unit id="0e8060483f7d78af7b76ca8b043ee86d94236f1f" translate="yes" xml:space="preserve">
          <source>You have the choice of using &lt;code&gt;HORIZONTAL&lt;/code&gt; or &lt;code&gt;VERTICAL&lt;/code&gt; from the &lt;code&gt;django.contrib.admin&lt;/code&gt; module.</source>
          <target state="translated">您可以从 &lt;code&gt;django.contrib.admin&lt;/code&gt; 模块中选择使用 &lt;code&gt;HORIZONTAL&lt;/code&gt; 或 &lt;code&gt;VERTICAL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4400b934f42e5a6e1a3db47127dc89ecdf59962f" translate="yes" xml:space="preserve">
          <source>You have to activate the virtual environment whenever you open a new terminal window.</source>
          <target state="translated">每当你打开一个新的终端窗口时,你必须激活虚拟环境。</target>
        </trans-unit>
        <trans-unit id="29c4d7420e828bca5f878283b9d9f51de0f3aa5c" translate="yes" xml:space="preserve">
          <source>You have to activate the virtual environment whenever you open a new terminal window. &lt;a href=&quot;https://virtualenvwrapper.readthedocs.io/en/latest/&quot;&gt;virtualenvwrapper&lt;/a&gt; is a useful tool for making this more convenient.</source>
          <target state="translated">每当您打开新的终端窗口时，都必须激活虚拟环境。&lt;a href=&quot;https://virtualenvwrapper.readthedocs.io/en/latest/&quot;&gt;virtualenvwrapper&lt;/a&gt;是使此操作更加方便的有用工具。</target>
        </trans-unit>
        <trans-unit id="8f8f5299434f4ae865769ea1aeedc0ccfaede4d2" translate="yes" xml:space="preserve">
          <source>You have to override the &lt;code&gt;test_func()&lt;/code&gt; method of the class to provide the test that is performed. Furthermore, you can set any of the parameters of &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin&quot;&gt;&lt;code&gt;AccessMixin&lt;/code&gt;&lt;/a&gt; to customize the handling of unauthorized users:</source>
          <target state="translated">您必须重写 &lt;code&gt;test_func()&lt;/code&gt; 方法以提供所执行的测试。此外，您可以设置&lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin&quot;&gt; &lt;code&gt;AccessMixin&lt;/code&gt; 的&lt;/a&gt;任何参数来自定义对未授权用户的处理：</target>
        </trans-unit>
        <trans-unit id="a947145b5cc7e10486a8cd7eedd2aaea5b655937" translate="yes" xml:space="preserve">
          <source>You may also control in a more granular way which filter to use within any given view by setting the &lt;code&gt;HttpRequest&lt;/code&gt;&amp;rsquo;s &lt;code&gt;exception_reporter_filter&lt;/code&gt; attribute:</source>
          <target state="translated">您还可以通过设置 &lt;code&gt;HttpRequest&lt;/code&gt; 的 &lt;code&gt;exception_reporter_filter&lt;/code&gt; 属性，以更精细的方式控制在任何给定视图中使用的过滤器：</target>
        </trans-unit>
        <trans-unit id="a40a0ae1dbcf6b762ab5005fd312e209c5e1fdb1" translate="yes" xml:space="preserve">
          <source>You may also find signing useful for the following:</source>
          <target state="translated">您可能也会发现签名对以下方面有用。</target>
        </trans-unit>
        <trans-unit id="94bd9a9d908e28c73a16c2636ae8570b71b1faf2" translate="yes" xml:space="preserve">
          <source>You may also override these methods:</source>
          <target state="translated">你也可以覆盖这些方法。</target>
        </trans-unit>
        <trans-unit id="7b686047278192f3cfbc95cb5941598d89e00285" translate="yes" xml:space="preserve">
          <source>You may also provide any file-like object (e.g., &lt;a href=&quot;https://docs.python.org/3/library/io.html#io.StringIO&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3/library/io.html#io.BytesIO&quot;&gt;&lt;code&gt;BytesIO&lt;/code&gt;&lt;/a&gt;) as a file handle. If you&amp;rsquo;re uploading to an &lt;a href=&quot;../../ref/models/fields#django.db.models.ImageField&quot;&gt;&lt;code&gt;ImageField&lt;/code&gt;&lt;/a&gt;, the object needs a &lt;code&gt;name&lt;/code&gt; attribute that passes the &lt;a href=&quot;../../ref/validators#django.core.validators.validate_image_file_extension&quot;&gt;&lt;code&gt;validate_image_file_extension&lt;/code&gt;&lt;/a&gt; validator. For example:</source>
          <target state="translated">您还可以提供任何类似文件的对象（例如&lt;a href=&quot;https://docs.python.org/3/library/io.html#io.StringIO&quot;&gt; &lt;code&gt;StringIO&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://docs.python.org/3/library/io.html#io.BytesIO&quot;&gt; &lt;code&gt;BytesIO&lt;/code&gt; &lt;/a&gt;）作为文件句柄。如果您要上传到&lt;a href=&quot;../../ref/models/fields#django.db.models.ImageField&quot;&gt; &lt;code&gt;ImageField&lt;/code&gt; &lt;/a&gt;，则该对象需要一个 &lt;code&gt;name&lt;/code&gt; 属性，该属性可以通过&lt;a href=&quot;../../ref/validators#django.core.validators.validate_image_file_extension&quot;&gt; &lt;code&gt;validate_image_file_extension&lt;/code&gt; 验证&lt;/a&gt;器。例如：</target>
        </trans-unit>
        <trans-unit id="cb6e68b44ecfc93bcb3f44a1a1bff9bbb3cd86d9" translate="yes" xml:space="preserve">
          <source>You may also return a custom &lt;a href=&quot;../../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt; class directly.</source>
          <target state="translated">您也可以直接返回自定义&lt;a href=&quot;../../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="8b48d7a6f28c9ccacc5b69a814f7420c27186a65" translate="yes" xml:space="preserve">
          <source>You may also store the generated class into a variable:</source>
          <target state="translated">你也可以将生成的类存储到一个变量中。</target>
        </trans-unit>
        <trans-unit id="5a1fee0442ccfccabc73d150ec370338cad3d6f2" translate="yes" xml:space="preserve">
          <source>You may also use &lt;code&gt;gettext&lt;/code&gt; binaries you have obtained elsewhere, so long as the &lt;code&gt;xgettext --version&lt;/code&gt; command works properly. Do not attempt to use Django translation utilities with a &lt;code&gt;gettext&lt;/code&gt; package if the command &lt;code&gt;xgettext
--version&lt;/code&gt; entered at a Windows command prompt causes a popup window saying &amp;ldquo;xgettext.exe has generated errors and will be closed by Windows&amp;rdquo;.</source>
          <target state="translated">只要 &lt;code&gt;xgettext --version&lt;/code&gt; 命令可以正常工作，您还可以使用从其他地方获得的 &lt;code&gt;gettext&lt;/code&gt; 二进制文件。如果在Windows命令提示符下输入的命令 &lt;code&gt;xgettext --version&lt;/code&gt; 导致弹出窗口显示&amp;ldquo; xgettext.exe产生错误并将被Windows关闭&amp;rdquo;，则不要尝试将Django翻译实用程序与 &lt;code&gt;gettext&lt;/code&gt; 包一起使用。</target>
        </trans-unit>
        <trans-unit id="7e24b5bf6616683461293274f379ea23fdf4f22a" translate="yes" xml:space="preserve">
          <source>You may also use the same name for multiple URL patterns if they differ in their arguments. In addition to the URL name, &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; matches the number of arguments and the names of the keyword arguments.</source>
          <target state="translated">如果多个URL模式的参数不同，也可以使用相同的名称。除了URL名称外，&lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; 还&lt;/a&gt;匹配参数的数量和关键字参数的名称。</target>
        </trans-unit>
        <trans-unit id="8245d35db5c96f09afa15af0bfd2bcee9ce7d3e5" translate="yes" xml:space="preserve">
          <source>You may also use the same name for multiple URL patterns if they differ in their arguments. In addition to the URL name, &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; matches the number of arguments and the names of the keyword arguments. Path converters can also raise &lt;code&gt;ValueError&lt;/code&gt; to indicate no match, see &lt;a href=&quot;#registering-custom-path-converters&quot;&gt;Registering custom path converters&lt;/a&gt; for details.</source>
          <target state="translated">如果多个URL模式的参数不同，也可以使用相同的名称。除了URL名称外，&lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; 还&lt;/a&gt;匹配参数的数量和关键字参数的名称。路径转换器还可以引发 &lt;code&gt;ValueError&lt;/code&gt; 以指示不匹配，有关详细信息，请参见&lt;a href=&quot;#registering-custom-path-converters&quot;&gt;注册自定义路径转换器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="88b486a6c99f0c2bc027cf435e187f739b8540d6" translate="yes" xml:space="preserve">
          <source>You may also want to change the &lt;code&gt;Paginator&lt;/code&gt; on very large tables as the default paginator always performs a &lt;code&gt;count()&lt;/code&gt; query. For example, you could override the default implementation of the &lt;code&gt;Paginator.count&lt;/code&gt; property.</source>
          <target state="translated">您可能还需要改变 &lt;code&gt;Paginator&lt;/code&gt; 上非常大的表作为默认的分页程序总是执行 &lt;code&gt;count()&lt;/code&gt; 查询。例如，您可以覆盖 &lt;code&gt;Paginator.count&lt;/code&gt; 属性的默认实现。</target>
        </trans-unit>
        <trans-unit id="3a71fafe1bfd3bf736955c25bbb5d468f6279867" translate="yes" xml:space="preserve">
          <source>You may be tempted to customize the model by overriding the &lt;code&gt;__init__&lt;/code&gt; method. If you do so, however, take care not to change the calling signature as any change may prevent the model instance from being saved. Rather than overriding &lt;code&gt;__init__&lt;/code&gt;, try using one of these approaches:</source>
          <target state="translated">您可能会想通过覆盖 &lt;code&gt;__init__&lt;/code&gt; 方法来定制模型。但是，如果这样做，请注意不要更改调用签名，因为任何更改都可能阻止保存模型实例。而不是重写 &lt;code&gt;__init__&lt;/code&gt; ，请尝试使用以下方法之一：</target>
        </trans-unit>
        <trans-unit id="56eff54a746cee6e060c5420721b742dd6ab0815" translate="yes" xml:space="preserve">
          <source>You may be thinking, why not just pass a dictionary of the initial values as data when displaying the form? Well, if you do that, you&amp;rsquo;ll trigger validation, and the HTML output will include any validation errors:</source>
          <target state="translated">您可能在想，为什么在显示表单时不仅仅将初始值的字典作为数据传递？好吧，如果这样做，您将触发验证，并且HTML输出将包括所有验证错误：</target>
        </trans-unit>
        <trans-unit id="6854deb176977301dd2b21405dbe328a03e39f7b" translate="yes" xml:space="preserve">
          <source>You may choose what tables or views to inspect by passing their names as arguments. If no arguments are provided, models are created for views only if the &lt;a href=&quot;#cmdoption-inspectdb-include-views&quot;&gt;&lt;code&gt;--include-views&lt;/code&gt;&lt;/a&gt; option is used. Models for partition tables are created on PostgreSQL if the &lt;a href=&quot;#cmdoption-inspectdb-include-partitions&quot;&gt;&lt;code&gt;--include-partitions&lt;/code&gt;&lt;/a&gt; option is used.</source>
          <target state="translated">您可以通过传递名称作为参数来选择要检查的表或视图。如果未提供任何参数，则仅在使用&lt;a href=&quot;#cmdoption-inspectdb-include-views&quot;&gt; &lt;code&gt;--include-views&lt;/code&gt; &lt;/a&gt;选项时为视图创建模型。如果使用&lt;a href=&quot;#cmdoption-inspectdb-include-partitions&quot;&gt; &lt;code&gt;--include-partitions&lt;/code&gt; &lt;/a&gt;选项，则会在PostgreSQL上创建分区表的模型。</target>
        </trans-unit>
        <trans-unit id="02fa82ccb7c4019948f06cd8692babf59715288e" translate="yes" xml:space="preserve">
          <source>You may directly test the &lt;code&gt;get_context_data()&lt;/code&gt; method by first instantiating the view, then passing a &lt;code&gt;request&lt;/code&gt; to &lt;code&gt;setup()&lt;/code&gt;, before proceeding with your test&amp;rsquo;s code:</source>
          <target state="translated">您可以通过首先实例化视图，然后将 &lt;code&gt;request&lt;/code&gt; 传递给 &lt;code&gt;setup()&lt;/code&gt; 来直接测试 &lt;code&gt;get_context_data()&lt;/code&gt; 方法，然后继续进行测试代码：</target>
        </trans-unit>
        <trans-unit id="4cf1343190279ce14e2470605f5526d3e4a6f692" translate="yes" xml:space="preserve">
          <source>You may feel that you have quite enough on your plate just learning Python/Django, and having yet another thing to learn and do may seem overwhelming and perhaps unnecessary. After all, our polls application is working quite happily now; going through the trouble of creating automated tests is not going to make it work any better. If creating the polls application is the last bit of Django programming you will ever do, then true, you don&amp;rsquo;t need to know how to create automated tests. But, if that&amp;rsquo;s not the case, now is an excellent time to learn.</source>
          <target state="translated">您可能会觉得自己刚开始学习Python / Django时就已经掌握了足够的知识，而又有另一件事需要学习和做，这似乎令人不知所措，也许是不必要的。毕竟，我们的民意调查应用程序现在运行起来非常愉快。麻烦的是创建自动化测试并不会使其工作更好。如果创建民意调查应用程序是您要做的Django编程的最后一部分，那么确实如此，您不需要知道如何创建自动化测试。但是，如果不是这样，那么现在是学习的绝佳时机。</target>
        </trans-unit>
        <trans-unit id="19bec61bca4b0b3b2c80e1d3429d2ce7f336ba00" translate="yes" xml:space="preserve">
          <source>You may find it easier to move any ORM code into its own function and call that entire function using &lt;a href=&quot;#asgiref.sync.sync_to_async&quot;&gt;&lt;code&gt;sync_to_async()&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">您可能会发现将任何ORM代码移入其自己的函数并使用&lt;a href=&quot;#asgiref.sync.sync_to_async&quot;&gt; &lt;code&gt;sync_to_async()&lt;/code&gt; &lt;/a&gt;调用整个函数会更容易。例如：</target>
        </trans-unit>
        <trans-unit id="6af1665180aa409ea9406af6b9f5bcde4e3e9ba8" translate="yes" xml:space="preserve">
          <source>You may have another version of Django installed.</source>
          <target state="translated">你可能安装了另一个版本的Django。</target>
        </trans-unit>
        <trans-unit id="3f4eb425b2d8c2399ac03cc2c14ed5206121733d" translate="yes" xml:space="preserve">
          <source>You may have noticed Django database objects use the same &lt;code&gt;save()&lt;/code&gt; method for creating and changing objects. Django abstracts the need to use &lt;code&gt;INSERT&lt;/code&gt; or &lt;code&gt;UPDATE&lt;/code&gt; SQL statements. Specifically, when you call &lt;code&gt;save()&lt;/code&gt; and the object&amp;rsquo;s primary key attribute does &lt;strong&gt;not&lt;/strong&gt; define a &lt;a href=&quot;fields#django.db.models.Field.default&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;, Django follows this algorithm:</source>
          <target state="translated">您可能已经注意到Django数据库对象使用相同的 &lt;code&gt;save()&lt;/code&gt; 方法创建和更改对象。 Django提取了使用 &lt;code&gt;INSERT&lt;/code&gt; 或 &lt;code&gt;UPDATE&lt;/code&gt; SQL语句的需求。特别是，当你调用 &lt;code&gt;save()&lt;/code&gt; 和对象的主键属性并&lt;strong&gt;没有&lt;/strong&gt;定义&lt;a href=&quot;fields#django.db.models.Field.default&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;，Django会遵循此算法：</target>
        </trans-unit>
        <trans-unit id="26336779b9015e557a947ead0b96e34fa1199d26" translate="yes" xml:space="preserve">
          <source>You may have noticed the additional data (&lt;code&gt;form-TOTAL_FORMS&lt;/code&gt;, &lt;code&gt;form-INITIAL_FORMS&lt;/code&gt; and &lt;code&gt;form-MAX_NUM_FORMS&lt;/code&gt;) that was required in the formset&amp;rsquo;s data above. This data is required for the &lt;code&gt;ManagementForm&lt;/code&gt;. This form is used by the formset to manage the collection of forms contained in the formset. If you don&amp;rsquo;t provide this management data, an exception will be raised:</source>
          <target state="translated">您可能已经注意到上面 &lt;code&gt;form-TOTAL_FORMS&lt;/code&gt; 数据中需要其他数据（form-TOTAL_FORMS， &lt;code&gt;form-INITIAL_FORMS&lt;/code&gt; 和 &lt;code&gt;form-MAX_NUM_FORMS&lt;/code&gt; ）。该数据对于 &lt;code&gt;ManagementForm&lt;/code&gt; 是必需的。表单集使用此表单来管理表单集中包含的表单的集合。如果您不提供此管理数据，则会引发异常：</target>
        </trans-unit>
        <trans-unit id="b56ba5c574a3163b58704ec42ea7d47854f4c64b" translate="yes" xml:space="preserve">
          <source>You may have to manually add this if you change the model&amp;rsquo;s name and quite a few of its fields at once; to the autodetector, this will look like you deleted a model with the old name and added a new one with a different name, and the migration it creates will lose any data in the old table.</source>
          <target state="translated">如果您同时更改模型的名称和许多字段，则可能必须手动添加它。到自动检测器，就好像您删除了一个具有旧名称的模型并添加了一个具有不同名称的新模型一样，它创建的迁移将丢失旧表中的所有数据。</target>
        </trans-unit>
        <trans-unit id="a0d11f33feaf555c09fc5cacb314df6d9065c465" translate="yes" xml:space="preserve">
          <source>You may need this if authentication for your application takes place against an existing external source such as an LDAP directory.</source>
          <target state="translated">如果您的应用程序的身份验证是针对现有的外部源(如LDAP目录)进行的,您可能需要这个功能。</target>
        </trans-unit>
        <trans-unit id="f455f91efcc3a71eda279b9bf01d2cfa44960629" translate="yes" xml:space="preserve">
          <source>You may need to &lt;a href=&quot;../howto/static-files/index#serving-static-files-in-development&quot;&gt;configure these files to be served in development&lt;/a&gt; and will definitely need to do so &lt;a href=&quot;../howto/static-files/deployment&quot;&gt;in production&lt;/a&gt;.</source>
          <target state="translated">您可能需要将&lt;a href=&quot;../howto/static-files/index#serving-static-files-in-development&quot;&gt;这些文件配置为在开发中使用，&lt;/a&gt;并且绝对需要&lt;a href=&quot;../howto/static-files/deployment&quot;&gt;在生产中使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1bc6411b3a159e40ff132362b3f7dfe3b68d5b1d" translate="yes" xml:space="preserve">
          <source>You may need to manually revert model state when rolling back a transaction.</source>
          <target state="translated">当回滚事务时,您可能需要手动恢复模型状态。</target>
        </trans-unit>
        <trans-unit id="339765a279aee9e12dfe832a485f655246d658ae" translate="yes" xml:space="preserve">
          <source>You may perform subtransactions using savepoints in your view code, typically with the &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; context manager. However, at the end of the view, either all or none of the changes will be committed.</source>
          <target state="translated">您可以使用视图代码中的保存点来执行子事务，通常是使用&lt;a href=&quot;#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt;上下文管理器。但是，在视图末尾，所有更改或全部更改都不会提交。</target>
        </trans-unit>
        <trans-unit id="c04d0d9278d9640a6910e0d1c65f3d56f01ccc38" translate="yes" xml:space="preserve">
          <source>You may prefer to create instances of the intermediate model directly.</source>
          <target state="translated">您可能更喜欢直接创建中间模型的实例。</target>
        </trans-unit>
        <trans-unit id="5b887dde94430be9cd697621f622fc550e36c385" translate="yes" xml:space="preserve">
          <source>You may provide a dictionary in order to specify custom suffixes for the &lt;code&gt;name&lt;/code&gt; attribute on each subwidget. In this case, for each &lt;code&gt;(key, widget)&lt;/code&gt; pair, the key will be appended to the &lt;code&gt;name&lt;/code&gt; of the widget in order to generate the attribute value. You may provide the empty string (&lt;code&gt;''&lt;/code&gt;) for a single key, in order to suppress the suffix for one widget. For example:</source>
          <target state="translated">您可以提供一个字典，以便为每个子小部件的 &lt;code&gt;name&lt;/code&gt; 属性指定自定义后缀。在这种情况下，对于每个 &lt;code&gt;(key, widget)&lt;/code&gt; 对，将密钥附加到窗口小部件的 &lt;code&gt;name&lt;/code&gt; 上以生成属性值。您可以提供空字符串（ &lt;code&gt;''&lt;/code&gt; ）的一个键，为了抑制后缀为一个部件。例如：</target>
        </trans-unit>
        <trans-unit id="11ba422a4dc98de7bc271b34faee2e4af605dcb7" translate="yes" xml:space="preserve">
          <source>You may rearrange the fields any time using &lt;code&gt;order_fields()&lt;/code&gt; with a list of field names as in &lt;a href=&quot;#django.forms.Form.field_order&quot;&gt;&lt;code&gt;field_order&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您可以使用重新排列字段的任何时间 &lt;code&gt;order_fields()&lt;/code&gt; 与在字段名称列表&lt;a href=&quot;#django.forms.Form.field_order&quot;&gt; &lt;code&gt;field_order&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="732b5282696edf868e2850f9998f369779079e92" translate="yes" xml:space="preserve">
          <source>You may reverse the execution order inside groups using the &lt;a href=&quot;../../ref/django-admin#cmdoption-test-reverse&quot;&gt;&lt;code&gt;test
--reverse&lt;/code&gt;&lt;/a&gt; option. This can help with ensuring your tests are independent from each other.</source>
          <target state="translated">您可以使用&lt;a href=&quot;../../ref/django-admin#cmdoption-test-reverse&quot;&gt; &lt;code&gt;test --reverse&lt;/code&gt; &lt;/a&gt;选项反转组内的执行顺序。这可以帮助确保您的测试彼此独立。</target>
        </trans-unit>
        <trans-unit id="0cb75b1461e0c958241e976230aa1bb161ce5684" translate="yes" xml:space="preserve">
          <source>You may still be forced to run sync code from an async context. For example, if the requirement is forced on you by an external environment, such as in a &lt;a href=&quot;https://jupyter.org/&quot;&gt;Jupyter&lt;/a&gt; notebook. If you are sure there is no chance of the code being run concurrently, and you &lt;em&gt;absolutely&lt;/em&gt; need to run this sync code from an async context, then you can disable the warning by setting the &lt;a href=&quot;#envvar-DJANGO_ALLOW_ASYNC_UNSAFE&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;DJANGO_ALLOW_ASYNC_UNSAFE&lt;/code&gt;&lt;/a&gt; environment variable to any value.</source>
          <target state="translated">您可能仍然被迫从异步上下文中运行同步代码。例如，如果外部环境（例如&lt;a href=&quot;https://jupyter.org/&quot;&gt;Jupyter&lt;/a&gt;笔记本电脑）强加了您的要求。如果您确定不可能同时运行代码，并且&lt;em&gt;绝对&lt;/em&gt;需要从异步上下文中运行此同步代码，那么可以通过将&lt;a href=&quot;#envvar-DJANGO_ALLOW_ASYNC_UNSAFE&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;DJANGO_ALLOW_ASYNC_UNSAFE&lt;/code&gt; &lt;/a&gt;环境变量设置为任何值来禁用警告。</target>
        </trans-unit>
        <trans-unit id="1b8ed97bd4374093c1f301126fd2d159aafa77f2" translate="yes" xml:space="preserve">
          <source>You may use &lt;code&gt;atomic&lt;/code&gt; when autocommit is turned off. It will only use savepoints, even for the outermost block.</source>
          <target state="translated">自动提交关闭时，您可以使用 &lt;code&gt;atomic&lt;/code&gt; 。即使对于最外层的块，它也将仅使用保存点。</target>
        </trans-unit>
        <trans-unit id="7ff74a8b0986f1f4c6bc11ccb3a7e86715c25e14" translate="yes" xml:space="preserve">
          <source>You may use any key function you want, as long as it has the same argument signature.</source>
          <target state="translated">你可以使用任何你想要的密钥函数,只要它有相同的参数签名。</target>
        </trans-unit>
        <trans-unit id="f48aa6e947b9723448c0d95c2aecb5c115eb7de5" translate="yes" xml:space="preserve">
          <source>You may want to &amp;ldquo;ping&amp;rdquo; Google when your sitemap changes, to let it know to reindex your site. The sitemaps framework provides a function to do just that: &lt;a href=&quot;#django.contrib.sitemaps.ping_google&quot;&gt;&lt;code&gt;django.contrib.sitemaps.ping_google()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您可能希望在站点地图更改时对Google进行&amp;ldquo; ping&amp;rdquo;操作，以使其重新索引您的网站。Sitemaps框架提供了一个用于执行此操作的功能：&lt;a href=&quot;#django.contrib.sitemaps.ping_google&quot;&gt; &lt;code&gt;django.contrib.sitemaps.ping_google()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="801144c9dd9512d51ae3abec349303657effc771" translate="yes" xml:space="preserve">
          <source>You may want to apply multiple expressions over the same window, i.e., the same partition and frame. For example, you could modify the previous example to also include the best and worst rating in each movie&amp;rsquo;s group (same studio, genre, and release year) by using three window functions in the same query. The partition and ordering from the previous example is extracted into a dictionary to reduce repetition:</source>
          <target state="translated">您可能希望在同一窗口（即同一分区和框架）上应用多个表达式。例如，您可以通过在同一查询中使用三个窗口函数来修改前面的示例，以在每部电影的组（相同的制片厂，类型和发行年份）中也包括最佳和最差评级。将上一个示例中的分区和顺序提取到字典中以减少重复：</target>
        </trans-unit>
        <trans-unit id="d609ea8c389a2367222c644e9fbaf629dc6aef52" translate="yes" xml:space="preserve">
          <source>You may want to execute some JavaScript when an inline form is added or removed in the admin change form. The &lt;code&gt;formset:added&lt;/code&gt; and &lt;code&gt;formset:removed&lt;/code&gt; jQuery events allow this. The event handler is passed three arguments:</source>
          <target state="translated">在管理员更改表单中添加或删除嵌入式表单时，您可能需要执行一些JavaScript。该 &lt;code&gt;formset:added&lt;/code&gt; 和 &lt;code&gt;formset:removed&lt;/code&gt; jQuery的事件，让这一点。事件处理程序传递了三个参数：</target>
        </trans-unit>
        <trans-unit id="e81c29eb387859fe0f013f1d69e1d67247e3253c" translate="yes" xml:space="preserve">
          <source>You may want to filter out null values:</source>
          <target state="translated">你可能想过滤掉空值。</target>
        </trans-unit>
        <trans-unit id="41437276669e5e66b3eb938c491a5f93bcf47735" translate="yes" xml:space="preserve">
          <source>You may want to provide a view that allows a user to edit the related objects of a model. Here&amp;rsquo;s how you can do that:</source>
          <target state="translated">您可能需要提供一个视图，该视图允许用户编辑模型的相关对象。这是您可以执行的操作：</target>
        </trans-unit>
        <trans-unit id="c1fd17cc5bd3d8424dba4f577f339af234fef71e" translate="yes" xml:space="preserve">
          <source>You may want to set the active language for the current session explicitly. Perhaps a user&amp;rsquo;s language preference is retrieved from another system, for example. You&amp;rsquo;ve already been introduced to &lt;a href=&quot;../../ref/utils#django.utils.translation.activate&quot;&gt;&lt;code&gt;django.utils.translation.activate()&lt;/code&gt;&lt;/a&gt;. That applies to the current thread only. To persist the language for the entire session in a cookie, set the &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGE_COOKIE_NAME&quot;&gt;&lt;code&gt;LANGUAGE_COOKIE_NAME&lt;/code&gt;&lt;/a&gt; cookie on the response:</source>
          <target state="translated">您可能要显式设置当前会话的活动语言。例如，也许从另一个系统中检索了用户的语言偏好。已经向您介绍了&lt;a href=&quot;../../ref/utils#django.utils.translation.activate&quot;&gt; &lt;code&gt;django.utils.translation.activate()&lt;/code&gt; &lt;/a&gt;。这仅适用于当前线程。要将整个会话的语言保留在cookie中，请在响应上设置&lt;a href=&quot;../../ref/settings#std:setting-LANGUAGE_COOKIE_NAME&quot;&gt; &lt;code&gt;LANGUAGE_COOKIE_NAME&lt;/code&gt; &lt;/a&gt; cookie：</target>
        </trans-unit>
        <trans-unit id="4db55f6630189b7992bc7e0f151c09e44813b1d1" translate="yes" xml:space="preserve">
          <source>You might also think you should write your query like this (with quotes around &lt;code&gt;%s&lt;/code&gt;):</source>
          <target state="translated">您可能还认为您应该这样编写查询（用 &lt;code&gt;%s&lt;/code&gt; 引起来的引号）：</target>
        </trans-unit>
        <trans-unit id="4539068330413d036e679bf9032317886bb834f0" translate="yes" xml:space="preserve">
          <source>You might also want to set the &lt;a href=&quot;../../ref/settings#std:setting-SESSION_FILE_PATH&quot;&gt;&lt;code&gt;SESSION_FILE_PATH&lt;/code&gt;&lt;/a&gt; setting (which defaults to output from &lt;code&gt;tempfile.gettempdir()&lt;/code&gt;, most likely &lt;code&gt;/tmp&lt;/code&gt;) to control where Django stores session files. Be sure to check that your Web server has permissions to read and write to this location.</source>
          <target state="translated">您可能还需要设置&lt;a href=&quot;../../ref/settings#std:setting-SESSION_FILE_PATH&quot;&gt; &lt;code&gt;SESSION_FILE_PATH&lt;/code&gt; &lt;/a&gt;设置（默认设置为 &lt;code&gt;tempfile.gettempdir()&lt;/code&gt; 的输出，很可能是 &lt;code&gt;/tmp&lt;/code&gt; ），以控制Django在何处存储会话文件。确保检查您的Web服务器是否具有读写此位置的权限。</target>
        </trans-unit>
        <trans-unit id="7ecc1d70193b6349c9ced0c5d841ca670276f28c" translate="yes" xml:space="preserve">
          <source>You might have created a brilliant piece of software, but you will find that many other developers will refuse to look at it because it lacks tests; without tests, they won&amp;rsquo;t trust it. Jacob Kaplan-Moss, one of Django&amp;rsquo;s original developers, says &amp;ldquo;Code without tests is broken by design.&amp;rdquo;</source>
          <target state="translated">您可能已经创建了一款出色的软件，但是您会发现许多其他开发人员会因为缺乏测试而拒绝查看该软件。没有测试，他们将不会信任它。Django的原始开发人员之一Jacob Kaplan-Moss说：&amp;ldquo;没有测试的代码被设计破坏了。&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="3d7354ee4a59c1b8ace60237987f021aaf045f11" translate="yes" xml:space="preserve">
          <source>You might have noticed that our sample publisher list template stores all the publishers in a variable named &lt;code&gt;object_list&lt;/code&gt;. While this works just fine, it isn&amp;rsquo;t all that &amp;ldquo;friendly&amp;rdquo; to template authors: they have to &amp;ldquo;just know&amp;rdquo; that they&amp;rsquo;re dealing with publishers here.</source>
          <target state="translated">您可能已经注意到，我们的示例发布者列表模板将所有发布者存储在名为 &lt;code&gt;object_list&lt;/code&gt; 的变量中。尽管这很好用，但对模板作者并不是那么&amp;ldquo;友好&amp;rdquo;：他们必须&amp;ldquo;只是知道&amp;rdquo;他们在这里与发布者打交道。</target>
        </trans-unit>
        <trans-unit id="9ccb114fa8900ae025e63f95c15867e74d28b2c9" translate="yes" xml:space="preserve">
          <source>You might only be wanting to take advantage of custom database column types and deal with the data as standard Python types in your models; strings, or floats, for example. This case is similar to our &lt;code&gt;Hand&lt;/code&gt; example and we&amp;rsquo;ll note any differences as we go along.</source>
          <target state="translated">您可能只想利用自定义数据库列类型，并在模型中将数据作为标准Python类型进行处理。例如字符串或浮点数。这种情况类似于我们的 &lt;code&gt;Hand&lt;/code&gt; 示例，我们会注意到所有不同之处。</target>
        </trans-unit>
        <trans-unit id="f1cd426938b8e4dee2615a64be51e7f4aeb72c6c" translate="yes" xml:space="preserve">
          <source>You might reasonably ask why Django doesn&amp;rsquo;t remove the extraneous columns for you. The main reason is consistency with &lt;code&gt;distinct()&lt;/code&gt; and other places: Django &lt;strong&gt;never&lt;/strong&gt; removes ordering constraints that you have specified (and we can&amp;rsquo;t change those other methods&amp;rsquo; behavior, as that would violate our &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/misc/api-stability/&quot;&gt;API stability&lt;/a&gt; policy).</source>
          <target state="translated">您可能会合理地问，为什么Django不为您删除多余的列。主要原因是与 &lt;code&gt;distinct()&lt;/code&gt; 和其他地方保持一致：Django &lt;strong&gt;从不&lt;/strong&gt;删除您指定的排序约束（并且我们无法更改其他方法的行为，因为这会违反我们的&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/misc/api-stability/&quot;&gt;API稳定性&lt;/a&gt;政策）。</target>
        </trans-unit>
        <trans-unit id="789998b42ae697629d8fa817fb3fb7acba5acf84" translate="yes" xml:space="preserve">
          <source>You might reasonably ask why Django doesn&amp;rsquo;t remove the extraneous columns for you. The main reason is consistency with &lt;code&gt;distinct()&lt;/code&gt; and other places: Django &lt;strong&gt;never&lt;/strong&gt; removes ordering constraints that you have specified (and we can&amp;rsquo;t change those other methods&amp;rsquo; behavior, as that would violate our &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/misc/api-stability/&quot;&gt;API stability&lt;/a&gt; policy).</source>
          <target state="translated">您可能会合理地问，为什么Django不为您删除多余的列。主要原因是与 &lt;code&gt;distinct()&lt;/code&gt; 和其他地方的一致性：Django&lt;strong&gt;永远不会&lt;/strong&gt;删除您指定的排序约束（并且我们无法更改其他方法的行为，因为这会违反我们的&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/misc/api-stability/&quot;&gt;API稳定性&lt;/a&gt;政策）。</target>
        </trans-unit>
        <trans-unit id="356e09fde192dd1d3f3155d4c1e5f816c83ab00d" translate="yes" xml:space="preserve">
          <source>You might see implementations of &lt;code&gt;references_model&lt;/code&gt; on the built-in operations; this is part of the autodetection code and does not matter for custom operations.</source>
          <target state="translated">您可能会在内置操作中看到 &lt;code&gt;references_model&lt;/code&gt; 的实现；这是自动检测代码的一部分，与自定义操作无关紧要。</target>
        </trans-unit>
        <trans-unit id="b36c10c8a2f91500e757734fa74394d6dfbc7307" translate="yes" xml:space="preserve">
          <source>You might want to allow the user to create several articles at once. To create a formset out of an &lt;code&gt;ArticleForm&lt;/code&gt; you would do:</source>
          <target state="translated">您可能希望允许用户一次创建多篇文章。要从ArticleForm创建 &lt;code&gt;ArticleForm&lt;/code&gt; 您可以执行以下操作：</target>
        </trans-unit>
        <trans-unit id="e42bf980dcf58ca5406f6fefb7866aa26e3b1a84" translate="yes" xml:space="preserve">
          <source>You must always specify a unique name for an index. As such, you cannot normally specify a partial index on an abstract base class, since the &lt;a href=&quot;options#django.db.models.Options.indexes&quot;&gt;&lt;code&gt;Meta.indexes&lt;/code&gt;&lt;/a&gt; option is inherited by subclasses, with exactly the same values for the attributes (including &lt;code&gt;name&lt;/code&gt;) each time. To work around name collisions, part of the name may contain &lt;code&gt;'%(app_label)s'&lt;/code&gt; and &lt;code&gt;'%(class)s'&lt;/code&gt;, which are replaced, respectively, by the lowercased app label and class name of the concrete model. For example &lt;code&gt;Index(fields=['title'],
name='%(app_label)s_%(class)s_title_index')&lt;/code&gt;.</source>
          <target state="translated">您必须始终为索引指定唯一的名称。因此，您通常不能在抽象基类上指定局部索引，因为&lt;a href=&quot;options#django.db.models.Options.indexes&quot;&gt; &lt;code&gt;Meta.indexes&lt;/code&gt; &lt;/a&gt;选项由子类继承，并且每次属性（包括 &lt;code&gt;name&lt;/code&gt; ）的值都完全相同。要解决名称冲突，部分名称可能包含 &lt;code&gt;'%(app_label)s'&lt;/code&gt; 和 &lt;code&gt;'%(class)s'&lt;/code&gt; ，它们分别由小写的应用程序标签和具体模型的类名替换。例如 &lt;code&gt;Index(fields=['title'], name='%(app_label)s_%(class)s_title_index')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b72aba4eb002de1688571ff9e5e66cefdacdda7" translate="yes" xml:space="preserve">
          <source>You must always specify a unique name for the constraint. As such, you cannot normally specify a constraint on an abstract base class, since the &lt;a href=&quot;options#django.db.models.Options.constraints&quot;&gt;&lt;code&gt;Meta.constraints&lt;/code&gt;&lt;/a&gt; option is inherited by subclasses, with exactly the same values for the attributes (including &lt;code&gt;name&lt;/code&gt;) each time. To work around name collisions, part of the name may contain &lt;code&gt;'%(app_label)s'&lt;/code&gt; and &lt;code&gt;'%(class)s'&lt;/code&gt;, which are replaced, respectively, by the lowercased app label and class name of the concrete model. For example &lt;code&gt;CheckConstraint(check=Q(age__gte=18),
name='%(app_label)s_%(class)s_is_adult')&lt;/code&gt;.</source>
          <target state="translated">您必须始终为约束指定一个唯一的名称。因此，您通常不能在抽象基类上指定约束，因为&lt;a href=&quot;options#django.db.models.Options.constraints&quot;&gt; &lt;code&gt;Meta.constraints&lt;/code&gt; &lt;/a&gt;选项由子类继承，并且每次属性（包括 &lt;code&gt;name&lt;/code&gt; ）的值都完全相同。要解决名称冲突，部分名称可能包含 &lt;code&gt;'%(app_label)s'&lt;/code&gt; 和 &lt;code&gt;'%(class)s'&lt;/code&gt; ，它们分别由小写的应用程序标签和具体模型的类名替换。例如 &lt;code&gt;CheckConstraint(check=Q(age__gte=18), name='%(app_label)s_%(class)s_is_adult')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91e875f84f2d8540fe9ce858804ecae6d3cdd02e" translate="yes" xml:space="preserve">
          <source>You must define &lt;a href=&quot;#django.contrib.admin.ModelAdmin.search_fields&quot;&gt;&lt;code&gt;search_fields&lt;/code&gt;&lt;/a&gt; on the related object&amp;rsquo;s &lt;code&gt;ModelAdmin&lt;/code&gt; because the autocomplete search uses it.</source>
          <target state="translated">您必须在相关对象的 &lt;code&gt;ModelAdmin&lt;/code&gt; 上定义&lt;a href=&quot;#django.contrib.admin.ModelAdmin.search_fields&quot;&gt; &lt;code&gt;search_fields&lt;/code&gt; &lt;/a&gt;，因为自动完成搜索会使用它。</target>
        </trans-unit>
        <trans-unit id="a6819eee635c61f85691485c55210495e639ff32" translate="yes" xml:space="preserve">
          <source>You must define or import all models in your application&amp;rsquo;s &lt;code&gt;models.py&lt;/code&gt; or &lt;code&gt;models/__init__.py&lt;/code&gt;. Otherwise, the application registry may not be fully populated at this point, which could cause the ORM to malfunction.</source>
          <target state="translated">您必须在应用程序的 &lt;code&gt;models.py&lt;/code&gt; 或 &lt;code&gt;models/__init__.py&lt;/code&gt; 中定义或导入所有模型。否则，此时应用程序注册表可能尚未完全填充，这可能导致ORM出现故障。</target>
        </trans-unit>
        <trans-unit id="abdb42ce69b1716b81d56e39d311a64ebe662e4a" translate="yes" xml:space="preserve">
          <source>You must ensure that no transaction is active, usually by issuing a &lt;a href=&quot;#django.db.transaction.commit&quot;&gt;&lt;code&gt;commit()&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;#django.db.transaction.rollback&quot;&gt;&lt;code&gt;rollback()&lt;/code&gt;&lt;/a&gt;, before turning autocommit back on.</source>
          <target state="translated">您必须确保没有活动处于活动状态，通常是通过发出&lt;a href=&quot;#django.db.transaction.commit&quot;&gt; &lt;code&gt;commit()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#django.db.transaction.rollback&quot;&gt; &lt;code&gt;rollback()&lt;/code&gt; &lt;/a&gt;，然后再打开自动提交。</target>
        </trans-unit>
        <trans-unit id="99370f48affa6aeb3ef9ebe9faee5abc55b1b273" translate="yes" xml:space="preserve">
          <source>You must ensure that the type of the form field can be used to set the contents of the corresponding model field. When they are not compatible, you will get a &lt;code&gt;ValueError&lt;/code&gt; as no implicit conversion takes place.</source>
          <target state="translated">您必须确保可以使用表单字段的类型来设置相应模型字段的内容。当它们不兼容时，您将收到 &lt;code&gt;ValueError&lt;/code&gt; ,因为不会进行任何隐式转换。</target>
        </trans-unit>
        <trans-unit id="396683b1621509589025dbdf03e7b223a05f1e10" translate="yes" xml:space="preserve">
          <source>You must include the &lt;a href=&quot;#django.apps.AppConfig.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; attribute for Django to determine which application this configuration applies to. You can define any attributes documented in the &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; API reference.</source>
          <target state="translated">您必须包括Django 的&lt;a href=&quot;#django.apps.AppConfig.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;属性，以确定此配置适用于哪个应用程序。您可以定义&lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt; API参考中记录的任何属性。</target>
        </trans-unit>
        <trans-unit id="c97b1558be92350215d9c99da8da9338def3e801" translate="yes" xml:space="preserve">
          <source>You must pass the index as an integer rather than a string. The following produce empty output:</source>
          <target state="translated">你必须以整数而不是字符串的形式传递索引。以下内容会产生空的输出。</target>
        </trans-unit>
        <trans-unit id="74be6804469b4bece07e97691a4610eb1e246449" translate="yes" xml:space="preserve">
          <source>You must provide &lt;code&gt;ct_field&lt;/code&gt; and &lt;code&gt;fk_field&lt;/code&gt; if they are different from the defaults, &lt;code&gt;content_type&lt;/code&gt; and &lt;code&gt;object_id&lt;/code&gt; respectively. Other parameters are similar to those documented in &lt;a href=&quot;../forms/models#django.forms.models.modelformset_factory&quot;&gt;&lt;code&gt;modelformset_factory()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../forms/models#django.forms.models.inlineformset_factory&quot;&gt;&lt;code&gt;inlineformset_factory()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果它们分别与默认值 &lt;code&gt;content_type&lt;/code&gt; 和 &lt;code&gt;object_id&lt;/code&gt; 不同，则必须提供 &lt;code&gt;ct_field&lt;/code&gt; 和 &lt;code&gt;fk_field&lt;/code&gt; 。其它参数类似于中记录&lt;a href=&quot;../forms/models#django.forms.models.modelformset_factory&quot;&gt; &lt;code&gt;modelformset_factory()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../forms/models#django.forms.models.inlineformset_factory&quot;&gt; &lt;code&gt;inlineformset_factory()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca86748665b7205d8fba09889c3de5da66f31711" translate="yes" xml:space="preserve">
          <source>You must provide the list of fields explicitly, either via keyword arguments &lt;code&gt;fields&lt;/code&gt; or &lt;code&gt;exclude&lt;/code&gt;, or the corresponding attributes on the form&amp;rsquo;s inner &lt;code&gt;Meta&lt;/code&gt; class. See &lt;a href=&quot;../../topics/forms/modelforms#modelforms-selecting-fields&quot;&gt;Selecting the fields to use&lt;/a&gt; for more information. Omitting any definition of the fields to use will result in an &lt;a href=&quot;../exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt;&lt;code&gt;ImproperlyConfigured&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">您必须通过关键字参数 &lt;code&gt;fields&lt;/code&gt; 或 &lt;code&gt;exclude&lt;/code&gt; 或表单内部 &lt;code&gt;Meta&lt;/code&gt; 类上的相应属性来显式提供字段列表。有关更多信息，请参见&lt;a href=&quot;../../topics/forms/modelforms#modelforms-selecting-fields&quot;&gt;选择要使用的字段&lt;/a&gt;。忽略要使用的字段的任何定义都将导致&lt;a href=&quot;../exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt; &lt;code&gt;ImproperlyConfigured&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="09a667795b3ba070e317c269028935f58ad387b0" translate="yes" xml:space="preserve">
          <source>You must then transition the squashed migration to a normal migration by:</source>
          <target state="translated">然后你必须通过以下方式将被压扁的迁移过渡到正常的迁移。</target>
        </trans-unit>
        <trans-unit id="a7a7855e18419aa39b294d712a5cbf8d4e1debec" translate="yes" xml:space="preserve">
          <source>You need a GDAL-supported data source, like a shapefile (here we&amp;rsquo;re using a simple polygon shapefile, &lt;code&gt;test_poly.shp&lt;/code&gt;, with three features):</source>
          <target state="translated">您需要一个受GDAL支持的数据源，例如shapefile（这里我们使用一个简单的多边形shapefile &lt;code&gt;test_poly.shp&lt;/code&gt; ，具有三个功能）：</target>
        </trans-unit>
        <trans-unit id="bb7bb74d459e38d2e549dc9322d129b43eff3e65" translate="yes" xml:space="preserve">
          <source>You now have created a formset class named &lt;code&gt;ArticleFormSet&lt;/code&gt;. Instantiating the formset gives you the ability to iterate over the forms in the formset and display them as you would with a regular form:</source>
          <target state="translated">现在，您已经创建了一个名为 &lt;code&gt;ArticleFormSet&lt;/code&gt; 的表单集类。实例化表单集使您能够遍历表单集中的表单，并像使用常规表单一样显示它们：</target>
        </trans-unit>
        <trans-unit id="ffbbcc55b8126a9465980c594aaba0de22656574" translate="yes" xml:space="preserve">
          <source>You only need the &lt;code&gt;name&lt;/code&gt; argument for Python &amp;lt; 3.6 support.</source>
          <target state="translated">对于Python &amp;lt;3.6支持，只需要 &lt;code&gt;name&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="5d9121908c068a213622317909ad3ac9eee3cb80" translate="yes" xml:space="preserve">
          <source>You only want to override this to be &lt;code&gt;False&lt;/code&gt; if you are sure your model should always point towards the swapped-in model - for example, if it is a profile model designed specifically for your custom user model.</source>
          <target state="translated">仅当确定模型始终指向交换的模型时，才想将其覆盖为 &lt;code&gt;False&lt;/code&gt; （例如，如果它是专门为自定义用户模型设计的配置文件模型）。</target>
        </trans-unit>
        <trans-unit id="ce5fca793f625af0b0d00973e8fc7c514669c490" translate="yes" xml:space="preserve">
          <source>You probably won&amp;rsquo;t need to do this very often, but, when you do, it&amp;rsquo;s possible.</source>
          <target state="translated">您可能不需要经常执行此操作，但是当您执行此操作时，这是可能的。</target>
        </trans-unit>
        <trans-unit id="247a1e09807317da3914713c9ae0485198b2d0fd" translate="yes" xml:space="preserve">
          <source>You render the template with a &lt;a href=&quot;#django.template.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您使用&lt;a href=&quot;#django.template.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;渲染模板。</target>
        </trans-unit>
        <trans-unit id="462105b87f5a92bee1c1653abf00d1c7bf34e954" translate="yes" xml:space="preserve">
          <source>You select a palette by setting a &lt;a href=&quot;#envvar-DJANGO_COLORS&quot; id=&quot;index-10&quot;&gt;&lt;code&gt;DJANGO_COLORS&lt;/code&gt;&lt;/a&gt; environment variable to specify the palette you want to use. For example, to specify the &lt;code&gt;light&lt;/code&gt; palette under a Unix or OS/X BASH shell, you would run the following at a command prompt:</source>
          <target state="translated">您可以通过设置&lt;a href=&quot;#envvar-DJANGO_COLORS&quot; id=&quot;index-10&quot;&gt; &lt;code&gt;DJANGO_COLORS&lt;/code&gt; &lt;/a&gt;环境变量来选择一个调色板，以指定要使用的调色板。例如，以指定 &lt;code&gt;light&lt;/code&gt; 下一个Unix或OS / X BASH壳调色板，可以运行在提示命令以下：</target>
        </trans-unit>
        <trans-unit id="a280aeb4730ad2f7fcdf0636d8d1039c5c735ab6" translate="yes" xml:space="preserve">
          <source>You select a palette by setting a &lt;code&gt;DJANGO_COLORS&lt;/code&gt; environment variable to specify the palette you want to use. For example, to specify the &lt;code&gt;light&lt;/code&gt; palette under a Unix or OS/X BASH shell, you would run the following at a command prompt:</source>
          <target state="translated">您可以通过设置 &lt;code&gt;DJANGO_COLORS&lt;/code&gt; 环境变量来选择一个调色板，以指定要使用的调色板。例如，以指定 &lt;code&gt;light&lt;/code&gt; 下一个Unix或OS / X BASH壳调色板，可以运行在提示命令以下：</target>
        </trans-unit>
        <trans-unit id="c9c758e888791dae24206bee6c29b7afdbd2eddc" translate="yes" xml:space="preserve">
          <source>You should &lt;em&gt;only&lt;/em&gt; set this setting if you control your proxy or have some other guarantee that it sets/strips this header appropriately.</source>
          <target state="translated">&lt;em&gt;仅&lt;/em&gt;当您控制代理服务器或有其他保证可以正确设置/剥离此标头时，才应设置此设置。</target>
        </trans-unit>
        <trans-unit id="a8a4af02dd1016b3dd1c459c9754646e5d5340be" translate="yes" xml:space="preserve">
          <source>You should also be very careful when storing HTML in the database, especially when that HTML is retrieved and displayed.</source>
          <target state="translated">在数据库中存储HTML时也应该非常小心,尤其是在检索和显示这些HTML时。</target>
        </trans-unit>
        <trans-unit id="8b08c9398ae469447bdf5f66e2d40c1143366f89" translate="yes" xml:space="preserve">
          <source>You should also configure the Web server that sits in front of Django to validate the host. It should respond with a static error page or ignore requests for incorrect hosts instead of forwarding the request to Django. This way you&amp;rsquo;ll avoid spurious errors in your Django logs (or emails if you have error reporting configured that way). For example, on nginx you might setup a default server to return &amp;ldquo;444 No Response&amp;rdquo; on an unrecognized host:</source>
          <target state="translated">您还应该配置位于Django前面的Web服务器以验证主机。它应该以静态错误页面响应或忽略对不正确主机的请求，而不是将请求转发给Django。这样，您将避免在Django日志（或电子邮件（如果您以这种方式配置了错误报告）中）出现虚假错误。例如，在nginx上，您可以设置默认服务器以在无法识别的主机上返回&amp;ldquo; 444 No Response&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="028d34fd7c49670972cddf293ef8d8605bc04da4" translate="yes" xml:space="preserve">
          <source>You should also consider how you will handle &lt;a href=&quot;../static-files/deployment&quot;&gt;static files&lt;/a&gt; for your application, and how to handle &lt;a href=&quot;../error-reporting&quot;&gt;error reporting&lt;/a&gt;.</source>
          <target state="translated">您还应该考虑如何处理应用程序的&lt;a href=&quot;../static-files/deployment&quot;&gt;静态文件&lt;/a&gt;，以及如何处理&lt;a href=&quot;../error-reporting&quot;&gt;错误报告&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="932f5e4af8c5c6b827d2bf9d49584ad14c09c56e" translate="yes" xml:space="preserve">
          <source>You should also define a custom manager for your user model. If your user model defines &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;, &lt;code&gt;is_staff&lt;/code&gt;, &lt;code&gt;is_active&lt;/code&gt;, &lt;code&gt;is_superuser&lt;/code&gt;, &lt;code&gt;last_login&lt;/code&gt;, and &lt;code&gt;date_joined&lt;/code&gt; fields the same as Django&amp;rsquo;s default user, you can install Django&amp;rsquo;s &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.UserManager&quot;&gt;&lt;code&gt;UserManager&lt;/code&gt;&lt;/a&gt;; however, if your user model defines different fields, you&amp;rsquo;ll need to define a custom manager that extends &lt;a href=&quot;#django.contrib.auth.models.BaseUserManager&quot;&gt;&lt;code&gt;BaseUserManager&lt;/code&gt;&lt;/a&gt; providing two additional methods:</source>
          <target state="translated">您还应该为用户模型定义一个定制管理器。如果您的用户模型与Django的默认用户相同，定义了 &lt;code&gt;username&lt;/code&gt; ， &lt;code&gt;email&lt;/code&gt; ， &lt;code&gt;is_staff&lt;/code&gt; ， &lt;code&gt;is_active&lt;/code&gt; ， &lt;code&gt;is_superuser&lt;/code&gt; ， &lt;code&gt;last_login&lt;/code&gt; 和 &lt;code&gt;date_joined&lt;/code&gt; 字段，则可以安装Django的&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.UserManager&quot;&gt; &lt;code&gt;UserManager&lt;/code&gt; &lt;/a&gt;；但是，如果用户模型定义了不同的字段，则需要定义一个自定义管理器，该管理器扩展了&lt;a href=&quot;#django.contrib.auth.models.BaseUserManager&quot;&gt; &lt;code&gt;BaseUserManager&lt;/code&gt; ,&lt;/a&gt;提供了两个附加方法：</target>
        </trans-unit>
        <trans-unit id="72c0958ead6a84d572abd5f082464d659c497c77" translate="yes" xml:space="preserve">
          <source>You should also ensure that the file is opened in a way that allows the data to be read. If your file contains binary data such as an image, this means you will need to open the file in &lt;code&gt;rb&lt;/code&gt; (read binary) mode.</source>
          <target state="translated">您还应确保以允许读取数据的方式打开文件。如果您的文件包含二进制数据（例如图像），则意味着您需要以 &lt;code&gt;rb&lt;/code&gt; （读取二进制）模式打开文件。</target>
        </trans-unit>
        <trans-unit id="c88f9c01e7b011ba85a3b5b2cc271e98bde146a9" translate="yes" xml:space="preserve">
          <source>You should also note that &lt;code&gt;average_rating&lt;/code&gt; has been explicitly included in the list of values to be returned. This is required because of the ordering of the &lt;code&gt;values()&lt;/code&gt; and &lt;code&gt;annotate()&lt;/code&gt; clause.</source>
          <target state="translated">您还应注意， &lt;code&gt;average_rating&lt;/code&gt; 已明确包含在要返回的值列表中。这是必需的，因为 &lt;code&gt;values()&lt;/code&gt; 和 &lt;code&gt;annotate()&lt;/code&gt; 子句的顺序。</target>
        </trans-unit>
        <trans-unit id="d48f669ffa23de1cab01074e761dd89ed8839667" translate="yes" xml:space="preserve">
          <source>You should always use &lt;code&gt;include()&lt;/code&gt; when you include other URL patterns. &lt;code&gt;admin.site.urls&lt;/code&gt; is the only exception to this.</source>
          <target state="translated">包含其他URL模式时，应始终使用 &lt;code&gt;include()&lt;/code&gt; 。 &lt;code&gt;admin.site.urls&lt;/code&gt; 是唯一的例外。</target>
        </trans-unit>
        <trans-unit id="98e20224b08f868211c1c8c2a874b5dd3aa8de2e" translate="yes" xml:space="preserve">
          <source>You should avoid building the URL from unvalidated user input, in order to reduce possibilities of link or redirect poisoning:</source>
          <target state="translated">你应该避免从未经验证的用户输入中建立URL,以减少链接或重定向中毒的可能性。</target>
        </trans-unit>
        <trans-unit id="142d7154c9f884082392a8ad9e44bf2573279596" translate="yes" xml:space="preserve">
          <source>You should be very careful whenever you use &lt;code&gt;extra()&lt;/code&gt;. Every time you use it, you should escape any parameters that the user can control by using &lt;code&gt;params&lt;/code&gt; in order to protect against SQL injection attacks.</source>
          <target state="translated">每当使用 &lt;code&gt;extra()&lt;/code&gt; 时，都应该非常小心。每次使用它时，都应转义用户可以使用 &lt;code&gt;params&lt;/code&gt; 控制的任何参数，以防止受到SQL注入攻击。</target>
        </trans-unit>
        <trans-unit id="3054fcb02edb64c0e0371f3702359f0f871a847f" translate="yes" xml:space="preserve">
          <source>You should be very careful whenever you write raw SQL. Every time you use it, you should properly escape any parameters that the user can control by using &lt;code&gt;params&lt;/code&gt; in order to protect against SQL injection attacks. Please read more about &lt;a href=&quot;../security#sql-injection-protection&quot;&gt;SQL injection protection&lt;/a&gt;.</source>
          <target state="translated">每当编写原始SQL时，您都应该非常小心。每次使用它时，都应正确转义用户可以使用 &lt;code&gt;params&lt;/code&gt; 控制的任何参数，以防止受到SQL注入攻击。请阅读有关&lt;a href=&quot;../security#sql-injection-protection&quot;&gt;SQL注入保护的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit id="4adde1f72f5edef86b43e4e42e48c42bd21074e5" translate="yes" xml:space="preserve">
          <source>You should choose the most appropriate tool for your particular problem here. If you have a way to compute ETags and modification times quickly and if some view takes a while to generate the content, you should consider using the &lt;code&gt;condition&lt;/code&gt; decorator described in this document. If everything already runs fairly quickly, stick to using the middleware and the amount of network traffic sent back to the clients will still be reduced if the view hasn&amp;rsquo;t changed.</source>
          <target state="translated">您应该在此处选择最适合您特定问题的工具。如果您有一种快速计算ETag和修改时间的方法，并且如果某些视图需要花费一些时间来生成内容，则应考虑使用本文档中描述的 &lt;code&gt;condition&lt;/code&gt; 装饰器。如果一切都已经相当快地运行，请坚持使用中间件，并且如果视图不变，发送回客户端的网络流量仍然会减少。</target>
        </trans-unit>
        <trans-unit id="34b552291a5d0af9f07252db673dc9c7dd031618" translate="yes" xml:space="preserve">
          <source>You should create an index file if one of your sitemaps has more than 50,000 URLs. In this case, Django will automatically paginate the sitemap, and the index will reflect that.</source>
          <target state="translated">如果你的一个网站地图有超过50,000个URL,你应该创建一个索引文件。在这种情况下,Django会自动对网站地图进行分页,索引也会反映出来。</target>
        </trans-unit>
        <trans-unit id="a60b727771b2515a2e32eea2d11082c8bbfe5851" translate="yes" xml:space="preserve">
          <source>You should do your own performance testing to see what effect ASGI versus WSGI has on your code. In some cases, there may be a performance increase even for a purely synchronous codebase under ASGI because the request-handling code is still all running asynchronously. In general you will only want to enable ASGI mode if you have asynchronous code in your project.</source>
          <target state="translated">你应该自己进行性能测试,看看ASGI与WSGI对你的代码有什么影响。在某些情况下,即使是纯同步的代码库在ASGI下也可能会有性能提升,因为请求处理代码仍然都是异步运行的。一般来说,只有当你的项目中有异步代码时,你才会想要启用ASGI模式。</target>
        </trans-unit>
        <trans-unit id="897f71ba073fce09bd4a02735f44b8b013e4d945" translate="yes" xml:space="preserve">
          <source>You should either supply both &lt;a href=&quot;settings#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;settings#std:setting-PORT&quot;&gt;&lt;code&gt;PORT&lt;/code&gt;&lt;/a&gt;, or leave both as empty strings. Django will use a different connect descriptor depending on that choice.</source>
          <target state="translated">您应该同时提供&lt;a href=&quot;settings#std:setting-HOST&quot;&gt; &lt;code&gt;HOST&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;settings#std:setting-PORT&quot;&gt; &lt;code&gt;PORT&lt;/code&gt; &lt;/a&gt;，或者都保留为空字符串。Django将根据该选择使用其他连接描述符。</target>
        </trans-unit>
        <trans-unit id="cc8387d999dd301787736bf8136ae5f90a487f5c" translate="yes" xml:space="preserve">
          <source>You should instead use:</source>
          <target state="translated">你应该用。</target>
        </trans-unit>
        <trans-unit id="93a06c54ef456c8816145b06329aa3c85a3ee8b6" translate="yes" xml:space="preserve">
          <source>You should keep the field&amp;rsquo;s methods that are required for it to operate in database migrations such as &lt;code&gt;__init__()&lt;/code&gt;, &lt;code&gt;deconstruct()&lt;/code&gt;, and &lt;code&gt;get_internal_type()&lt;/code&gt;. Keep this stub field for as long as any migrations which reference the field exist. For example, after squashing migrations and removing the old ones, you should be able to remove the field completely.</source>
          <target state="translated">你应该记住这为它在数据库迁移等操作都需要该字段的方法 &lt;code&gt;__init__()&lt;/code&gt; ， &lt;code&gt;deconstruct()&lt;/code&gt; ，和 &lt;code&gt;get_internal_type()&lt;/code&gt; 。保留此存根字段的时间，只要存在任何引用该字段的迁移。例如，在压缩迁移并删除旧迁移之后，您应该能够完全删除该字段。</target>
        </trans-unit>
        <trans-unit id="4db361a8283e8c02bcb4d5be59408e25e7dd7c0a" translate="yes" xml:space="preserve">
          <source>You should know basic math before you start using a calculator.</source>
          <target state="translated">在开始使用计算器之前,你应该知道基本的数学知识。</target>
        </trans-unit>
        <trans-unit id="c9d80ecf0aa88819e490c1abc6bceafda36f056d" translate="yes" xml:space="preserve">
          <source>You should make sure to read Django&amp;rsquo;s documentation on &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/submitting-patches/&quot;&gt;claiming tickets and submitting patches&lt;/a&gt;. It covers Trac etiquette, how to claim tickets for yourself, expected coding style for patches, and many other important details.</source>
          <target state="translated">您应该确保阅读Django的有关&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/submitting-patches/&quot;&gt;索取票证和提交补丁&lt;/a&gt;的文档。它涵盖了Trac礼节，如何为自己索取票证，补丁的预期编码风格以及许多其他重要细节。</target>
        </trans-unit>
        <trans-unit id="a543ba6071047d288828a8e188d7a0ea32ca9fb6" translate="yes" xml:space="preserve">
          <source>You should make sure to read Django&amp;rsquo;s documentation on &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-code/submitting-patches/&quot;&gt;claiming tickets and submitting patches&lt;/a&gt;. It covers Trac etiquette, how to claim tickets for yourself, expected coding style for patches, and many other important details.</source>
          <target state="translated">您应该确保阅读Django的有关&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-code/submitting-patches/&quot;&gt;索取票证和提交补丁&lt;/a&gt;的文档。它涵盖了Trac礼节，如何为自己索取票证，补丁的预期编码风格以及许多其他重要细节。</target>
        </trans-unit>
        <trans-unit id="2919b3e1b4a33312738817a7fac30c1507afbced" translate="yes" xml:space="preserve">
          <source>You should never include automatically generated objects in a fixture or other serialized data. By chance, the primary keys in the fixture may match those in the database and loading the fixture will have no effect. In the more likely case that they don&amp;rsquo;t match, the fixture loading will fail with an &lt;a href=&quot;../ref/exceptions#django.db.IntegrityError&quot;&gt;&lt;code&gt;IntegrityError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">绝对不要在灯具或其他序列化数据中包含自动生成的对象。偶然地，灯具中的主键可能与数据库中的主键匹配，并且加载灯具将无效。如果它们不匹配的可能性更大，则夹具加载将失败，并显示&lt;a href=&quot;../ref/exceptions#django.db.IntegrityError&quot;&gt; &lt;code&gt;IntegrityError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="20c617a6dd64ff60389b054f34e5b12969924a42" translate="yes" xml:space="preserve">
          <source>You should only use cache-based sessions if you&amp;rsquo;re using the Memcached cache backend. The local-memory cache backend doesn&amp;rsquo;t retain data long enough to be a good choice, and it&amp;rsquo;ll be faster to use file or database sessions directly instead of sending everything through the file or database cache backends. Additionally, the local-memory cache backend is NOT multi-process safe, therefore probably not a good choice for production environments.</source>
          <target state="translated">如果您使用的是Memcached缓存后端，则仅应使用基于缓存的会话。本地内存缓存后端不能保留足够长的数据，因此不是一个很好的选择，并且直接使用文件或数据库会话比通过文件或数据库缓存后端发送所有内容会更快。此外，本地内存缓存后端不是多进程安全的，因此对于生产环境而言可能不是一个好的选择。</target>
        </trans-unit>
        <trans-unit id="ff765e60e4b2d673523c4bd60d97b3b4215bc67f" translate="yes" xml:space="preserve">
          <source>You should only use local time when you&amp;rsquo;re interacting with humans, and the template layer provides &lt;a href=&quot;#time-zones-in-templates&quot;&gt;filters and tags&lt;/a&gt; to convert datetimes to the time zone of your choice.</source>
          <target state="translated">与人互动时，您仅应使用当地时间，并且模板层提供了&lt;a href=&quot;#time-zones-in-templates&quot;&gt;过滤器和标签&lt;/a&gt;，可将日期时间转换为您选择的时区。</target>
        </trans-unit>
        <trans-unit id="e90fc2b42738e102271084d767c08ccab07b6d9d" translate="yes" xml:space="preserve">
          <source>You should only use raw queries when you know exactly what you&amp;rsquo;re doing.</source>
          <target state="translated">仅当您完全知道自己在做什么时，才应使用原始查询。</target>
        </trans-unit>
        <trans-unit id="77f782c8b1b53cc179a71c4f886d3b89c6e33fe2" translate="yes" xml:space="preserve">
          <source>You should prefer the &lt;a href=&quot;#std:templatetag-static&quot;&gt;&lt;code&gt;static&lt;/code&gt;&lt;/a&gt; template tag, but if you need more control over exactly where and how &lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; is injected into the template, you can use the &lt;a href=&quot;#std:templatetag-get_static_prefix&quot;&gt;&lt;code&gt;get_static_prefix&lt;/code&gt;&lt;/a&gt; template tag:</source>
          <target state="translated">您应该首选&lt;a href=&quot;#std:templatetag-static&quot;&gt; &lt;code&gt;static&lt;/code&gt; &lt;/a&gt;模板标记，但是如果您需要对将&lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt;确切地注入到模板中的方式以及如何进行更多控制，则可以使用&lt;a href=&quot;#std:templatetag-get_static_prefix&quot;&gt; &lt;code&gt;get_static_prefix&lt;/code&gt; &lt;/a&gt;模板标记：</target>
        </trans-unit>
        <trans-unit id="66c739ef64f70682d272bfd32af7a2a417a95db1" translate="yes" xml:space="preserve">
          <source>You should rarely, if ever, need to edit migration files by hand, but it&amp;rsquo;s entirely possible to write them manually if you need to. Some of the more complex operations are not autodetectable and are only available via a hand-written migration, so don&amp;rsquo;t be scared about editing them if you have to.</source>
          <target state="translated">您几乎很少需要手动编辑迁移文件，但是如果需要，完全可以手动编写它们。有些较复杂的操作无法自动检测，只能通过手写迁移来使用，因此不必害怕对其进行编辑。</target>
        </trans-unit>
        <trans-unit id="7b56cb42555ebd4ac554de601db3451197f28914" translate="yes" xml:space="preserve">
          <source>You should see a few types of editable content: groups and users. They are provided by &lt;a href=&quot;../topics/auth/index#module-django.contrib.auth&quot;&gt;&lt;code&gt;django.contrib.auth&lt;/code&gt;&lt;/a&gt;, the authentication framework shipped by Django.</source>
          <target state="translated">您应该看到几种类型的可编辑内容：组和用户。它们由&lt;a href=&quot;../topics/auth/index#module-django.contrib.auth&quot;&gt; &lt;code&gt;django.contrib.auth&lt;/code&gt; &lt;/a&gt;提供，这是Django附带的身份验证框架。</target>
        </trans-unit>
        <trans-unit id="aa1f94b82f29a4b8b6bac38f8cba3db86b543876" translate="yes" xml:space="preserve">
          <source>You should see a link to &amp;ldquo;Users&amp;rdquo; in the &amp;ldquo;Auth&amp;rdquo; section of the main admin index page. The &amp;ldquo;Add user&amp;rdquo; admin page is different than standard admin pages in that it requires you to choose a username and password before allowing you to edit the rest of the user&amp;rsquo;s fields.</source>
          <target state="translated">您应该在管理员索引主页面的&amp;ldquo;身份验证&amp;rdquo;部分中看到指向&amp;ldquo;用户&amp;rdquo;的链接。&amp;ldquo;添加用户&amp;rdquo;管理页面不同于标准管理页面，因为它要求您选择用户名和密码，然后才能编辑其余用户字段。</target>
        </trans-unit>
        <trans-unit id="1691581fb43b72914b1f78777fc6b6ce6c8c700c" translate="yes" xml:space="preserve">
          <source>You should see something similar to the following (we&amp;rsquo;ve reformatted it for readability):</source>
          <target state="translated">您应该看到类似以下内容的内容（为了便于阅读，我们对其进行了重新格式化）：</target>
        </trans-unit>
        <trans-unit id="454bdb9cf9fe423dc5c2124ae6f948a26d119378" translate="yes" xml:space="preserve">
          <source>You should see something similar to the following:</source>
          <target state="translated">你应该看到类似于下面的东西。</target>
        </trans-unit>
        <trans-unit id="a3b98e1b31ac088b373403181bc12f1cf5fea49a" translate="yes" xml:space="preserve">
          <source>You should set the current time zone to the end user&amp;rsquo;s actual time zone with &lt;a href=&quot;../../ref/utils#django.utils.timezone.activate&quot;&gt;&lt;code&gt;activate()&lt;/code&gt;&lt;/a&gt;. Otherwise, the default time zone is used.</source>
          <target state="translated">您应该使用&lt;a href=&quot;../../ref/utils#django.utils.timezone.activate&quot;&gt; &lt;code&gt;activate()&lt;/code&gt; &lt;/a&gt;将当前时区设置为最终用户的实际时区。否则，将使用默认时区。</target>
        </trans-unit>
        <trans-unit id="5f8bd1c83ab80f9197fc83be402343a4d3f545f7" translate="yes" xml:space="preserve">
          <source>You should think of migrations as a version control system for your database schema. &lt;code&gt;makemigrations&lt;/code&gt; is responsible for packaging up your model changes into individual migration files - analogous to commits - and &lt;code&gt;migrate&lt;/code&gt; is responsible for applying those to your database.</source>
          <target state="translated">您应该将迁移视为数据库架构的版本控制系统。 &lt;code&gt;makemigrations&lt;/code&gt; 负责将模型更改打包到单个迁移文件中（类似于提交），而 &lt;code&gt;migrate&lt;/code&gt; 负责将这些更改应用于数据库。</target>
        </trans-unit>
        <trans-unit id="03820a1270244013582124a0643692bc25423dae" translate="yes" xml:space="preserve">
          <source>You shouldn&amp;rsquo;t alter settings in your applications at runtime. For example, don&amp;rsquo;t do this in a view:</source>
          <target state="translated">您不应在运行时更改应用程序中的设置。例如，不要在视图中执行此操作：</target>
        </trans-unit>
        <trans-unit id="7500a54703d8bfeda02d7a220a1ade466104249c" translate="yes" xml:space="preserve">
          <source>You shouldn&amp;rsquo;t go over the top with string interpolation, though: this is still JavaScript, so the code has to make repeated regular-expression substitutions. This isn&amp;rsquo;t as fast as string interpolation in Python, so keep it to those cases where you really need it (for example, in conjunction with &lt;code&gt;ngettext&lt;/code&gt; to produce proper pluralizations).</source>
          <target state="translated">但是，您不应该使用字符串插值来解决问题：这仍然是JavaScript，因此代码必须进行重复的正则表达式替换。这不像Python中的字符串插值那样快，因此请确保在您确实需要它的情况下使用（例如，与 &lt;code&gt;ngettext&lt;/code&gt; 结合使用以产生适当的复数形式）。</target>
        </trans-unit>
        <trans-unit id="5f3b3ec814a2f1b1cb9acf2492341f6af1aa4422" translate="yes" xml:space="preserve">
          <source>You use this framework on your own, for lower-level feed generation. You can also create custom feed generator subclasses for use with the &lt;code&gt;feed_type&lt;/code&gt;&lt;code&gt;Feed&lt;/code&gt; option.</source>
          <target state="translated">您可以单独使用此框架来生成较低级别的提要。您还可以创建自定义供稿生成器子类，以供 &lt;code&gt;feed_type&lt;/code&gt; &lt;code&gt;Feed&lt;/code&gt; 选项使用。</target>
        </trans-unit>
        <trans-unit id="7b12803007d5326f9ce249abaccf576d4ee6e370" translate="yes" xml:space="preserve">
          <source>You use two views in your URLconf: &lt;a href=&quot;#django.contrib.sitemaps.views.index&quot;&gt;&lt;code&gt;django.contrib.sitemaps.views.index()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.sitemaps.views.sitemap&quot;&gt;&lt;code&gt;django.contrib.sitemaps.views.sitemap()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您在URLconf中使用两个视图：&lt;a href=&quot;#django.contrib.sitemaps.views.index&quot;&gt; &lt;code&gt;django.contrib.sitemaps.views.index()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.contrib.sitemaps.views.sitemap&quot;&gt; &lt;code&gt;django.contrib.sitemaps.views.sitemap()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d87af48be9ed9bce8529d8ce0003667a05e1ee92" translate="yes" xml:space="preserve">
          <source>You usually won&amp;rsquo;t construct &lt;code&gt;Page&lt;/code&gt; objects by hand &amp;ndash; you&amp;rsquo;ll get them by iterating &lt;a href=&quot;#django.core.paginator.Paginator&quot;&gt;&lt;code&gt;Paginator&lt;/code&gt;&lt;/a&gt;, or by using &lt;a href=&quot;#django.core.paginator.Paginator.page&quot;&gt;&lt;code&gt;Paginator.page()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通常，您不会手动构造 &lt;code&gt;Page&lt;/code&gt; 对象，而是通过迭代&lt;a href=&quot;#django.core.paginator.Paginator&quot;&gt; &lt;code&gt;Paginator&lt;/code&gt; &lt;/a&gt;或使用&lt;a href=&quot;#django.core.paginator.Paginator.page&quot;&gt; &lt;code&gt;Paginator.page()&lt;/code&gt; &lt;/a&gt;来获取它们。</target>
        </trans-unit>
        <trans-unit id="99668dc339f9629f6b61dad3f7a3b2a87c621bea" translate="yes" xml:space="preserve">
          <source>You usually won&amp;rsquo;t construct &lt;code&gt;Page&lt;/code&gt; objects by hand &amp;ndash; you&amp;rsquo;ll get them using &lt;a href=&quot;#django.core.paginator.Paginator.page&quot;&gt;&lt;code&gt;Paginator.page()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通常，您不会手动构造 &lt;code&gt;Page&lt;/code&gt; 对象&amp;ndash;您将使用&lt;a href=&quot;#django.core.paginator.Paginator.page&quot;&gt; &lt;code&gt;Paginator.page()&lt;/code&gt; &lt;/a&gt;获得它们。</target>
        </trans-unit>
        <trans-unit id="1aee42ad8de444f885e3a2ba328cd79b07bc1fdd" translate="yes" xml:space="preserve">
          <source>You want to prefetch only a subset of the related objects.</source>
          <target state="translated">你想只预取相关对象的一个子集。</target>
        </trans-unit>
        <trans-unit id="64b0c7e6892abd7b9e75592d3cffbb0c82900a48" translate="yes" xml:space="preserve">
          <source>You want to use a &lt;code&gt;QuerySet&lt;/code&gt; that performs further prefetching on related models.</source>
          <target state="translated">您想使用对相关模型执行进一步预取的 &lt;code&gt;QuerySet&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3fa7e2731c526fe5bc633cacc40d27a99bb579eb" translate="yes" xml:space="preserve">
          <source>You want to use performance optimization techniques like &lt;a href=&quot;#django.db.models.query.QuerySet.defer&quot;&gt;&lt;code&gt;deferred fields&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">您想使用性能优化技术，例如&lt;a href=&quot;#django.db.models.query.QuerySet.defer&quot;&gt; &lt;code&gt;deferred fields&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="95cc768d7b9938e3b0067137eb755b28e1489989" translate="yes" xml:space="preserve">
          <source>You will also have to modify the &lt;code&gt;PATH&lt;/code&gt; in your &lt;code&gt;.profile&lt;/code&gt; so that the MacPorts programs are accessible from the command-line:</source>
          <target state="translated">您还必须在 &lt;code&gt;.profile&lt;/code&gt; 中修改 &lt;code&gt;PATH&lt;/code&gt; ，以便可以从命令行访问MacPorts程序：</target>
        </trans-unit>
        <trans-unit id="bfb36d78d0e7d2f0faef2b1973b311ec1267aa94" translate="yes" xml:space="preserve">
          <source>You will also need to register your custom user model with the admin. If your custom user model extends &lt;code&gt;django.contrib.auth.models.AbstractUser&lt;/code&gt;, you can use Django&amp;rsquo;s existing &lt;code&gt;django.contrib.auth.admin.UserAdmin&lt;/code&gt; class. However, if your user model extends &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser&quot;&gt;&lt;code&gt;AbstractBaseUser&lt;/code&gt;&lt;/a&gt;, you&amp;rsquo;ll need to define a custom &lt;code&gt;ModelAdmin&lt;/code&gt; class. It may be possible to subclass the default &lt;code&gt;django.contrib.auth.admin.UserAdmin&lt;/code&gt;; however, you&amp;rsquo;ll need to override any of the definitions that refer to fields on &lt;code&gt;django.contrib.auth.models.AbstractUser&lt;/code&gt; that aren&amp;rsquo;t on your custom user class.</source>
          <target state="translated">您还需要向管理员注册自定义用户模型。如果您的自定义用户模型扩展了 &lt;code&gt;django.contrib.auth.models.AbstractUser&lt;/code&gt; ，则可以使用Django现有的 &lt;code&gt;django.contrib.auth.admin.UserAdmin&lt;/code&gt; 类。但是，如果您的用户模型扩展了&lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser&quot;&gt; &lt;code&gt;AbstractBaseUser&lt;/code&gt; &lt;/a&gt;，则需要定义一个自定义 &lt;code&gt;ModelAdmin&lt;/code&gt; 类。可能可以 &lt;code&gt;django.contrib.auth.admin.UserAdmin&lt;/code&gt; 默认的django.contrib.auth.admin.UserAdmin ;但是，您将需要覆盖自定义用户类上未引用 &lt;code&gt;django.contrib.auth.models.AbstractUser&lt;/code&gt; 上引用字段的任何定义。</target>
        </trans-unit>
        <trans-unit id="5927c8a107c0310ccb1baa29bff741de5105d371" translate="yes" xml:space="preserve">
          <source>You will be prompted for a password. After you enter one, the user will be created immediately. If you leave off the &lt;a href=&quot;../../ref/django-admin#cmdoption-createsuperuser-username&quot;&gt;&lt;code&gt;--username&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../ref/django-admin#cmdoption-createsuperuser-email&quot;&gt;&lt;code&gt;--email&lt;/code&gt;&lt;/a&gt; options, it will prompt you for those values.</source>
          <target state="translated">系统将提示您输入密码。输入一个后，将立即创建用户。如果不使用&lt;a href=&quot;../../ref/django-admin#cmdoption-createsuperuser-username&quot;&gt; &lt;code&gt;--username&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../ref/django-admin#cmdoption-createsuperuser-email&quot;&gt; &lt;code&gt;--email&lt;/code&gt; &lt;/a&gt;选项，它将提示您输入这些值。</target>
        </trans-unit>
        <trans-unit id="71d0cff2c2bedd5d4d20fb82cf2eca85b0f3367e" translate="yes" xml:space="preserve">
          <source>You will be prompted to enter your &lt;code&gt;postgres&lt;/code&gt; database superuser password in the &amp;lsquo;Database Connection Information&amp;rsquo; dialog.</source>
          <target state="translated">系统将提示您在&amp;ldquo;数据库连接信息&amp;rdquo;对话框中输入 &lt;code&gt;postgres&lt;/code&gt; 数据库超级用户密码。</target>
        </trans-unit>
        <trans-unit id="ee79800e9637ea75957aa1025048fd84c6b65cfa" translate="yes" xml:space="preserve">
          <source>You will need to modify the &lt;code&gt;PATH&lt;/code&gt; environment variable in your &lt;code&gt;.profile&lt;/code&gt; file so that the new version of Python is used when &lt;code&gt;python&lt;/code&gt; is entered at the command-line:</source>
          <target state="translated">您将需要在 &lt;code&gt;.profile&lt;/code&gt; 文件中修改 &lt;code&gt;PATH&lt;/code&gt; 环境变量，以便在命令行输入 &lt;code&gt;python&lt;/code&gt; 时使用新版本的Python ：</target>
        </trans-unit>
        <trans-unit id="11d6891e90041ed2793e79d26e1081945af067be" translate="yes" xml:space="preserve">
          <source>You will only get the benefits of a fully-asynchronous request stack if you have &lt;em&gt;no synchronous middleware&lt;/em&gt; loaded into your site. If there is a piece of synchronous middleware, then Django must use a thread per request to safely emulate a synchronous environment for it.</source>
          <target state="translated">如果您的站点中&lt;em&gt;未&lt;/em&gt;加载&lt;em&gt;任何同步中间件，&lt;/em&gt;则只有完全异步请求栈才能带来好处。如果有一个同步中间件，那么Django必须为每个请求使用一个线程来安全地为其模拟同步环境。</target>
        </trans-unit>
        <trans-unit id="1ea91a496e4c0af9b478f843098ea31c5aaf0085" translate="yes" xml:space="preserve">
          <source>You will rarely need to use &lt;code&gt;Value()&lt;/code&gt; directly. When you write the expression &lt;code&gt;F('field') + 1&lt;/code&gt;, Django implicitly wraps the &lt;code&gt;1&lt;/code&gt; in a &lt;code&gt;Value()&lt;/code&gt;, allowing simple values to be used in more complex expressions. You will need to use &lt;code&gt;Value()&lt;/code&gt; when you want to pass a string to an expression. Most expressions interpret a string argument as the name of a field, like &lt;code&gt;Lower('name')&lt;/code&gt;.</source>
          <target state="translated">您几乎不需要直接使用 &lt;code&gt;Value()&lt;/code&gt; 。当您编写表达式 &lt;code&gt;F('field') + 1&lt;/code&gt; ，Django会将 &lt;code&gt;1&lt;/code&gt; 隐式包装在 &lt;code&gt;Value()&lt;/code&gt; 中，从而允许在更复杂的表达式中使用简单的值。要将字符串传递给表达式时，将需要使用 &lt;code&gt;Value()&lt;/code&gt; 。大多数表达式将字符串参数解释为字段名称，例如 &lt;code&gt;Lower('name')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8369816f2f4034f90fde135a121b80925a946899" translate="yes" xml:space="preserve">
          <source>You will then be prompted for your desired email address:</source>
          <target state="translated">然后,系统会提示您输入所需的电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="27b63b6da10286dd6ec41b55d9e753ee0791e1fc" translate="yes" xml:space="preserve">
          <source>You won&amp;rsquo;t be able to run multiple versions of this package (or others with the same name).</source>
          <target state="translated">您将无法运行此软件包的多个版本（或其他具有相同名称的版本）。</target>
        </trans-unit>
        <trans-unit id="5115d78f94006e99038594089a118ec896264bf6" translate="yes" xml:space="preserve">
          <source>You would get an error when running &lt;a href=&quot;../../ref/django-admin#django-admin-compilemessages&quot;&gt;&lt;code&gt;django-admin
compilemessages&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">运行&lt;a href=&quot;../../ref/django-admin#django-admin-compilemessages&quot;&gt; &lt;code&gt;django-admin compilemessages&lt;/code&gt; &lt;/a&gt;时会出现错误：</target>
        </trans-unit>
        <trans-unit id="c6fcb1843b28d6f834a65c102a61edf14950b635" translate="yes" xml:space="preserve">
          <source>You would then define &lt;code&gt;get_coordinate_lookup&lt;/code&gt; appropriately to return a &lt;code&gt;Lookup&lt;/code&gt; subclass which handles the relevant value of &lt;code&gt;dimension&lt;/code&gt;.</source>
          <target state="translated">然后，您将适当地定义 &lt;code&gt;get_coordinate_lookup&lt;/code&gt; 以返回一个 &lt;code&gt;Lookup&lt;/code&gt; 子类，该子类处理 &lt;code&gt;dimension&lt;/code&gt; 的相关值。</target>
        </trans-unit>
        <trans-unit id="041f52de97c5661e544d025f1a45df0999c5e4d3" translate="yes" xml:space="preserve">
          <source>You would then render the formsets as normal. It is important to point out that you need to pass &lt;code&gt;prefix&lt;/code&gt; on both the POST and non-POST cases so that it is rendered and processed correctly.</source>
          <target state="translated">然后，您将正常渲染表单集。重要的是要指出，您需要在POST和非POST情况下都传递 &lt;code&gt;prefix&lt;/code&gt; ，以便正确呈现和处理它。</target>
        </trans-unit>
        <trans-unit id="5dbcb2becca7f99b77ed99fbf650e148770c5948" translate="yes" xml:space="preserve">
          <source>You would typically want to use both: &lt;a href=&quot;../../ref/utils#django.utils.translation.activate&quot;&gt;&lt;code&gt;django.utils.translation.activate()&lt;/code&gt;&lt;/a&gt; changes the language for this thread, and setting the cookie makes this preference persist in future requests.</source>
          <target state="translated">您通常会同时使用两者：&lt;a href=&quot;../../ref/utils#django.utils.translation.activate&quot;&gt; &lt;code&gt;django.utils.translation.activate()&lt;/code&gt; &lt;/a&gt;更改该线程的语言，并且设置cookie会使此首选项在以后的请求中保持不变。</target>
        </trans-unit>
        <trans-unit id="3843f3177cea20b325a99a2ffc65a41305f1f27b" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;d probably want to use &lt;code&gt;list.insert()&lt;/code&gt; in this case (instead of &lt;code&gt;append()&lt;/code&gt;) because a progress bar handler would need to run &lt;em&gt;before&lt;/em&gt; any other handlers. Remember, the upload handlers are processed in order.</source>
          <target state="translated">在这种情况下，您可能想使用 &lt;code&gt;list.insert()&lt;/code&gt; （而不是 &lt;code&gt;append()&lt;/code&gt; ），因为进度条处理程序将需要&lt;em&gt;在&lt;/em&gt;其他处理程序&lt;em&gt;之前&lt;/em&gt;运行。请记住，上传处理程序是按顺序处理的。</target>
        </trans-unit>
        <trans-unit id="4824fad39b41ec8f22e6d18f4beed583fc22b87a" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll also usually want to use hooks specifically designed for custom storage objects. These are:</source>
          <target state="translated">您通常还需要使用专门为自定义存储对象设计的挂钩。这些是：</target>
        </trans-unit>
        <trans-unit id="541244e521c3af06e699839c56026971312d328e" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll always want to define this method; the default isn&amp;rsquo;t very helpful at all.</source>
          <target state="translated">您将始终想要定义此方法；默认值不是很有帮助。</target>
        </trans-unit>
        <trans-unit id="27d2836d3a2911117c3d7fb103903b0f279eda21" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll follow this pattern &amp;ndash; create a model admin class, then pass it as the second argument to &lt;code&gt;admin.site.register()&lt;/code&gt; &amp;ndash; any time you need to change the admin options for a model.</source>
          <target state="translated">您将遵循这种模式&amp;ndash;创建模型admin类，然后将其作为第二个参数传递给 &lt;code&gt;admin.site.register()&lt;/code&gt; &amp;ndash; 每次需要更改模型的admin选项时。</target>
        </trans-unit>
        <trans-unit id="7475bb89cd3aa1541f42be4a4618e61c815cd06b" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll get a validation error if either of these rules are broken.</source>
          <target state="translated">如果这些规则中的任何一个被破坏，您都会收到验证错误。</target>
        </trans-unit>
        <trans-unit id="b96c1a56eac092b24930fb74ff268cf34965c69a" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll need a view that renders the template containing the HTML form, and that can supply the &lt;code&gt;current_name&lt;/code&gt; field as appropriate.</source>
          <target state="translated">您将需要一个视图来呈现包含HTML表单的模板，并且可以提供适当的 &lt;code&gt;current_name&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="17f96d9d09bfced05906e6b83fbb545d0eac2647" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll need to avoid naming projects after built-in Python or Django components. In particular, this means you should avoid using names like &lt;code&gt;django&lt;/code&gt; (which will conflict with Django itself) or &lt;code&gt;test&lt;/code&gt; (which conflicts with a built-in Python package).</source>
          <target state="translated">您需要避免使用内置的Python或Django组件来命名项目。特别是，这意味着您应该避免使用诸如 &lt;code&gt;django&lt;/code&gt; （将与Django本身冲突）或 &lt;code&gt;test&lt;/code&gt; （与内置Python程序包冲突）之类的名称。</target>
        </trans-unit>
        <trans-unit id="777f94b648ca4ae77d9bff4a91246e29cb2d1180" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll need to tell Django what your database connection parameters are, and what the name of the database is. Do that by editing the &lt;a href=&quot;../ref/settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt; setting and assigning values to the following keys for the &lt;code&gt;'default'&lt;/code&gt; connection:</source>
          <target state="translated">您需要告诉Django您的数据库连接参数是什么，数据库的名称是什么。为此，请编辑&lt;a href=&quot;../ref/settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt;设置并将值分配给 &lt;code&gt;'default'&lt;/code&gt; 连接的以下键：</target>
        </trans-unit>
        <trans-unit id="5dfb0f2eaf3bfd77f71721e03c29d8dd9105f4e3" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll probably want to automate this process, especially if you&amp;rsquo;ve got multiple web servers.</source>
          <target state="translated">您可能希望自动化此过程，尤其是当您有多个Web服务器时。</target>
        </trans-unit>
        <trans-unit id="ca40649028be7ca4e24500574daec80581811fa7" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll see an error like &lt;code&gt;can't adapt type 'dict'&lt;/code&gt; if you skip the first step, or &lt;code&gt;type &quot;hstore&quot; does not exist&lt;/code&gt; if you skip the second.</source>
          <target state="translated">如果您跳过第一步，将看到类似 &lt;code&gt;can't adapt type 'dict'&lt;/code&gt; 的错误，或者，如果您跳过第二步，则 &lt;code&gt;type &quot;hstore&quot; does not exist&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffde5f8a67008b861ca255755b9d695093b429a6" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll see the following output on the command line:</source>
          <target state="translated">您将在命令行上看到以下输出：</target>
        </trans-unit>
        <trans-unit id="1bfd04696fa05a962f4b68788f6ea449edd84ecc" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll store this data in a &lt;code&gt;fixtures&lt;/code&gt; directory inside your app.</source>
          <target state="translated">您会将这些数据存储在应用程序内的 &lt;code&gt;fixtures&lt;/code&gt; 目录中。</target>
        </trans-unit>
        <trans-unit id="4e336e8bd2a1256538f0a9ac1b425523455070ae" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re certainly developing your project with &lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG = True&lt;/code&gt;&lt;/a&gt;, since this enables handy features like full tracebacks in your browser.</source>
          <target state="translated">当然，您正在使用&lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG = True&lt;/code&gt; &lt;/a&gt;开发项目，因为这将启用方便的功能，例如浏览器中的完整回溯。</target>
        </trans-unit>
        <trans-unit id="ea5dd3c4a1ec2c486cf0580c10ea965890f53b95" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re free to override these methods (and any other model method) to alter behavior.</source>
          <target state="translated">您可以随意覆盖这些方法（和任何其他模型方法）来更改行为。</target>
        </trans-unit>
        <trans-unit id="66b12535581a32d807a5914676d575f63e52c396" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re sharding your database.</source>
          <target state="translated">您正在分片数据库。</target>
        </trans-unit>
        <trans-unit id="7a56f46d4f0adf7de976daee72a9819ce14ff3ac" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve got three options to install Django:</source>
          <target state="translated">您有三种选择来安装Django：</target>
        </trans-unit>
        <trans-unit id="642ebedbd999bf41d8d32d99363e9be1989a6bdd" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve started the Django development server, a lightweight Web server written purely in Python. We&amp;rsquo;ve included this with Django so you can develop things rapidly, without having to deal with configuring a production server &amp;ndash; such as Apache &amp;ndash; until you&amp;rsquo;re ready for production.</source>
          <target state="translated">您已经启动了Django开发服务器，这是一个纯粹用Python编写的轻量级Web服务器。我们已经将它包含在Django中，因此您可以快速进行开发，而无需准备配置生产服务器（例如Apache），直到您准备好进行生产为止。</target>
        </trans-unit>
        <trans-unit id="521883294a770c020d24fc3530c31fab242abb45" translate="yes" xml:space="preserve">
          <source>Your &lt;a href=&quot;../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting includes &lt;a href=&quot;../ref/middleware#django.middleware.common.BrokenLinkEmailsMiddleware&quot;&gt;&lt;code&gt;django.middleware.common.BrokenLinkEmailsMiddleware&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您的&lt;a href=&quot;../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt;设置包括&lt;a href=&quot;../ref/middleware#django.middleware.common.BrokenLinkEmailsMiddleware&quot;&gt; &lt;code&gt;django.middleware.common.BrokenLinkEmailsMiddleware&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bb5e96453c72d1c9b41ca1c58121ae43c36e82e3" translate="yes" xml:space="preserve">
          <source>Your Django app is behind a proxy.</source>
          <target state="translated">你的Django应用在代理服务器后面。</target>
        </trans-unit>
        <trans-unit id="6ead75f50857d1ee21c78ff01b852953a340bd26" translate="yes" xml:space="preserve">
          <source>Your Django website may sit behind a &lt;em&gt;proxy cache&lt;/em&gt;, such as Squid Web Proxy Cache (&lt;a href=&quot;http://www.squid-cache.org/&quot;&gt;http://www.squid-cache.org/&lt;/a&gt;), that caches pages for performance. In this case, each request first would be handled by the proxy, and it would be passed to your application only if needed.</source>
          <target state="translated">您的Django网站可能位于&lt;em&gt;代理缓存&lt;/em&gt;（例如Squid Web代理缓存（&lt;a href=&quot;http://www.squid-cache.org/&quot;&gt;http://www.squid-cache.org/&lt;/a&gt;））之后，该缓存可以缓存页面以提高性能。在这种情况下，每个请求首先将由代理处理，并且仅在需要时才将其传递给您的应用程序。</target>
        </trans-unit>
        <trans-unit id="154c03d98a50e7a79e2b93fa58dd088c6309421e" translate="yes" xml:space="preserve">
          <source>Your ISP may cache certain pages, so if you requested a page from &lt;a href=&quot;https://example.com/&quot;&gt;https://example.com/&lt;/a&gt;, your ISP would send you the page without having to access example.com directly. The maintainers of example.com have no knowledge of this caching; the ISP sits between example.com and your Web browser, handling all of the caching transparently.</source>
          <target state="translated">您的ISP可能会缓存某些页面，因此，如果您从&lt;a href=&quot;https://example.com/&quot;&gt;https://example.com/&lt;/a&gt;请求页面，则ISP会将页面发送给您，而无需直接访问example.com。example.com的维护者不了解这种缓存。ISP位于example.com和您的Web浏览器之间，透明地处理所有缓存。</target>
        </trans-unit>
        <trans-unit id="7775de4ff87516298ac9f5966088472728cbc51e" translate="yes" xml:space="preserve">
          <source>Your Web browser caches pages, too. If a Web page sends out the appropriate headers, your browser will use the local cached copy for subsequent requests to that page, without even contacting the Web page again to see whether it has changed.</source>
          <target state="translated">你的网页浏览器也会缓存网页。如果一个网页发送了相应的头文件,您的浏览器将在随后对该网页的请求中使用本地缓存副本,甚至不需要再次联系该网页以查看其是否发生了变化。</target>
        </trans-unit>
        <trans-unit id="5b702ee97960a5da03d973d7daa7af569414e918" translate="yes" xml:space="preserve">
          <source>Your applications can take advantage of the signal infrastructure and provide its own signals.</source>
          <target state="translated">您的应用程序可以利用信号基础设施并提供自己的信号。</target>
        </trans-unit>
        <trans-unit id="f1aace49a81f531e7acdf786e36badd42cf21b8c" translate="yes" xml:space="preserve">
          <source>Your apps can live anywhere on your &lt;a href=&quot;https://docs.python.org/3/tutorial/modules.html#tut-searchpath&quot;&gt;Python path&lt;/a&gt;. In this tutorial, we&amp;rsquo;ll create our poll app in the same directory as your &lt;code&gt;manage.py&lt;/code&gt; file so that it can be imported as its own top-level module, rather than a submodule of &lt;code&gt;mysite&lt;/code&gt;.</source>
          <target state="translated">您的应用程序可以放在&lt;a href=&quot;https://docs.python.org/3/tutorial/modules.html#tut-searchpath&quot;&gt;Python路径&lt;/a&gt;上的任何位置。在本教程中，我们将在与 &lt;code&gt;manage.py&lt;/code&gt; 文件相同的目录中创建轮询应用程序，以便可以将其导入为自己的顶级模块，而不是 &lt;code&gt;mysite&lt;/code&gt; 的子模块。</target>
        </trans-unit>
        <trans-unit id="3f228106f753fbca94aa295b0c67389e63164f55" translate="yes" xml:space="preserve">
          <source>Your apps can live anywhere on your &lt;a href=&quot;https://docs.python.org/3/tutorial/modules.html#tut-searchpath&quot;&gt;Python path&lt;/a&gt;. In this tutorial, we&amp;rsquo;ll create our poll app right next to your &lt;code&gt;manage.py&lt;/code&gt; file so that it can be imported as its own top-level module, rather than a submodule of &lt;code&gt;mysite&lt;/code&gt;.</source>
          <target state="translated">您的应用程序可以放在&lt;a href=&quot;https://docs.python.org/3/tutorial/modules.html#tut-searchpath&quot;&gt;Python路径&lt;/a&gt;上的任何位置。在本教程中，我们将在您的 &lt;code&gt;manage.py&lt;/code&gt; 文件旁边创建轮询应用程序，以便可以将其导入为自己的顶级模块，而不是 &lt;code&gt;mysite&lt;/code&gt; 的子模块。</target>
        </trans-unit>
        <trans-unit id="6e62349a6655168c01b0910450ddc722907db5cf" translate="yes" xml:space="preserve">
          <source>Your cache preference goes in the &lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt;&lt;code&gt;CACHES&lt;/code&gt;&lt;/a&gt; setting in your settings file. Here&amp;rsquo;s an explanation of all available values for &lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt;&lt;code&gt;CACHES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您的缓存首选项进入设置文件中的&lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt; &lt;code&gt;CACHES&lt;/code&gt; &lt;/a&gt;设置。这是&lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt; &lt;code&gt;CACHES&lt;/code&gt; &lt;/a&gt;的所有可用值的解释。</target>
        </trans-unit>
        <trans-unit id="8b4eb407de420a87e28a34fdd88a67c8c6756439" translate="yes" xml:space="preserve">
          <source>Your callable will be evaluated when your models classes are loaded, and must return an instance of &lt;a href=&quot;../ref/files/storage#django.core.files.storage.Storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">调用模型类时，将评估您的callable，并且必须返回&lt;a href=&quot;../ref/files/storage#django.core.files.storage.Storage&quot;&gt; &lt;code&gt;Storage&lt;/code&gt; &lt;/a&gt;的实例。</target>
        </trans-unit>
        <trans-unit id="e758b054d41eaca0aca4e7fc1c8709332a18ba2d" translate="yes" xml:space="preserve">
          <source>Your callbacks are executed &lt;em&gt;after&lt;/em&gt; a successful commit, so a failure in a callback will not cause the transaction to roll back. They are executed conditionally upon the success of the transaction, but they are not &lt;em&gt;part&lt;/em&gt; of the transaction. For the intended use cases (mail notifications, Celery tasks, etc.), this should be fine. If it&amp;rsquo;s not (if your follow-up action is so critical that its failure should mean the failure of the transaction itself), then you don&amp;rsquo;t want to use the &lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt;&lt;code&gt;on_commit()&lt;/code&gt;&lt;/a&gt; hook. Instead, you may want &lt;a href=&quot;https://en.wikipedia.org/wiki/Two-phase_commit_protocol&quot;&gt;two-phase commit&lt;/a&gt; such as the &lt;a href=&quot;https://www.psycopg.org/docs/usage.html#tpc&quot;&gt;psycopg Two-Phase Commit protocol support&lt;/a&gt; and the &lt;a href=&quot;https://www.python.org/dev/peps/pep-0249#optional-two-phase-commit-extensions&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;optional Two-Phase Commit Extensions in the Python DB-API specification&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">您的回调将&lt;em&gt;在&lt;/em&gt;成功提交&lt;em&gt;后&lt;/em&gt;执行，因此回调失败不会导致事务回滚。它们在事务成功时有条件地执行，但它们不是事务的&lt;em&gt;一部分&lt;/em&gt;。对于预期的用例（邮件通知，Celery任务等），应该没问题。如果不是这样（如果您的后续操作非常重要，以至于失败应表示事务本身失败），那么您就不想使用&lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt; &lt;code&gt;on_commit()&lt;/code&gt; &lt;/a&gt;挂钩。相反，您可能需要&lt;a href=&quot;https://en.wikipedia.org/wiki/Two-phase_commit_protocol&quot;&gt;两阶段提交，&lt;/a&gt;例如&lt;a href=&quot;https://www.psycopg.org/docs/usage.html#tpc&quot;&gt;psycopg两阶段提交协议支持&lt;/a&gt;和&lt;a href=&quot;https://www.python.org/dev/peps/pep-0249#optional-two-phase-commit-extensions&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;Python DB-API规范中&lt;/strong&gt;&lt;/a&gt;的&lt;strong&gt;可选两阶段提交扩展&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="7487082dfb3e807a80698d0970aa81b008596701" translate="yes" xml:space="preserve">
          <source>Your callbacks are executed &lt;em&gt;after&lt;/em&gt; a successful commit, so a failure in a callback will not cause the transaction to roll back. They are executed conditionally upon the success of the transaction, but they are not &lt;em&gt;part&lt;/em&gt; of the transaction. For the intended use cases (mail notifications, Celery tasks, etc.), this should be fine. If it&amp;rsquo;s not (if your follow-up action is so critical that its failure should mean the failure of the transaction itself), then you don&amp;rsquo;t want to use the &lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt;&lt;code&gt;on_commit()&lt;/code&gt;&lt;/a&gt; hook. Instead, you may want &lt;a href=&quot;https://en.wikipedia.org/wiki/Two-phase_commit_protocol&quot;&gt;two-phase commit&lt;/a&gt; such as the &lt;a href=&quot;https://www.psycopg.org/docs/usage.html#tpc&quot;&gt;psycopg Two-Phase Commit protocol support&lt;/a&gt; and the &lt;a href=&quot;https://www.python.org/dev/peps/pep-0249/#optional-two-phase-commit-extensions&quot;&gt;optional Two-Phase Commit Extensions in the Python DB-API specification&lt;/a&gt;.</source>
          <target state="translated">您的回调将&lt;em&gt;在&lt;/em&gt;成功提交&lt;em&gt;后&lt;/em&gt;执行，因此回调失败将不会导致事务回滚。它们在事务成功时有条件地执行，但它们不是事务的&lt;em&gt;一部分&lt;/em&gt;。对于预期的用例（邮件通知，Celery任务等），应该没问题。如果不是这样（如果您的后续操作非常重要，以至于失败应表示事务本身失败），那么您就不想使用&lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt; &lt;code&gt;on_commit()&lt;/code&gt; &lt;/a&gt;挂钩。相反，您可能需要&lt;a href=&quot;https://en.wikipedia.org/wiki/Two-phase_commit_protocol&quot;&gt;两阶段提交，&lt;/a&gt;例如&lt;a href=&quot;https://www.psycopg.org/docs/usage.html#tpc&quot;&gt;psycopg两阶段提交协议支持&lt;/a&gt;和&lt;a href=&quot;https://www.python.org/dev/peps/pep-0249/#optional-two-phase-commit-extensions&quot;&gt;Python DB-API规范中&lt;/a&gt;的可选两阶段提交扩展。</target>
        </trans-unit>
        <trans-unit id="c669b09b4f5cb93380760ab71ad8660dda0671fa" translate="yes" xml:space="preserve">
          <source>Your code should never access &lt;a href=&quot;#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; directly. Use &lt;a href=&quot;applications#django.apps.apps&quot;&gt;&lt;code&gt;django.apps.apps&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">您的代码绝对不能直接访问&lt;a href=&quot;#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;。请改用&lt;a href=&quot;applications#django.apps.apps&quot;&gt; &lt;code&gt;django.apps.apps&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="abac493cdb652a664b28350a9536e44f9a9be5a6" translate="yes" xml:space="preserve">
          <source>Your custom filter class needs to inherit from &lt;a href=&quot;#django.views.debug.SafeExceptionReporterFilter&quot;&gt;&lt;code&gt;django.views.debug.SafeExceptionReporterFilter&lt;/code&gt;&lt;/a&gt; and may override the following attributes and methods:</source>
          <target state="translated">您的自定义过滤器类需要从&lt;a href=&quot;#django.views.debug.SafeExceptionReporterFilter&quot;&gt; &lt;code&gt;django.views.debug.SafeExceptionReporterFilter&lt;/code&gt; &lt;/a&gt;继承，并且可以覆盖以下属性和方法：</target>
        </trans-unit>
        <trans-unit id="2607be8e60ba91a580a043da9698fea2af0a30ed" translate="yes" xml:space="preserve">
          <source>Your custom filter class needs to inherit from &lt;a href=&quot;#django.views.debug.SafeExceptionReporterFilter&quot;&gt;&lt;code&gt;django.views.debug.SafeExceptionReporterFilter&lt;/code&gt;&lt;/a&gt; and may override the following methods:</source>
          <target state="translated">您的自定义过滤器类需要从&lt;a href=&quot;#django.views.debug.SafeExceptionReporterFilter&quot;&gt; &lt;code&gt;django.views.debug.SafeExceptionReporterFilter&lt;/code&gt; &lt;/a&gt;继承，并且可以覆盖以下方法：</target>
        </trans-unit>
        <trans-unit id="11af07b54f827ebedb8df9042812ee176dc4da81" translate="yes" xml:space="preserve">
          <source>Your custom reporter class needs to inherit from &lt;a href=&quot;#django.views.debug.ExceptionReporter&quot;&gt;&lt;code&gt;django.views.debug.ExceptionReporter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您的自定义报告程序类需要从&lt;a href=&quot;#django.views.debug.ExceptionReporter&quot;&gt; &lt;code&gt;django.views.debug.ExceptionReporter&lt;/code&gt; &lt;/a&gt;继承。</target>
        </trans-unit>
        <trans-unit id="4582372aa23126546d8043ee3f25fc9fd8855add" translate="yes" xml:space="preserve">
          <source>Your custom storage system must be a subclass of &lt;code&gt;django.core.files.storage.Storage&lt;/code&gt;:</source>
          <target state="translated">您的自定义存储系统必须是 &lt;code&gt;django.core.files.storage.Storage&lt;/code&gt; 的子类：</target>
        </trans-unit>
        <trans-unit id="e3cefb807c878c56d1faf28965b78efdd7cd67af" translate="yes" xml:space="preserve">
          <source>Your custom tags and filters will live in a module inside the &lt;code&gt;templatetags&lt;/code&gt; directory. The name of the module file is the name you&amp;rsquo;ll use to load the tags later, so be careful to pick a name that won&amp;rsquo;t clash with custom tags and filters in another app.</source>
          <target state="translated">您的自定义标签和过滤器将位于 &lt;code&gt;templatetags&lt;/code&gt; 目录内的模块中。模块文件的名称是您以后用于加载标签的名称，因此请小心选择一个不会与其他应用程序中的自定义标签和过滤器冲突的名称。</target>
        </trans-unit>
        <trans-unit id="186f1cfbdfd23f7189b43603d10389fc99cdcce6" translate="yes" xml:space="preserve">
          <source>Your filter does not introduce any HTML-unsafe characters (&lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;'&lt;/code&gt;, &lt;code&gt;&quot;&lt;/code&gt; or &lt;code&gt;&amp;amp;&lt;/code&gt;) into the result that were not already present. In this case, you can let Django take care of all the auto-escaping handling for you. All you need to do is set the &lt;code&gt;is_safe&lt;/code&gt; flag to &lt;code&gt;True&lt;/code&gt; when you register your filter function, like so:</source>
          <target state="translated">您的过滤器不会在结果中不引入任何HTML不安全字符（ &lt;code&gt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;gt;&lt;/code&gt; ， &lt;code&gt;'&lt;/code&gt; ， &lt;code&gt;&quot;&lt;/code&gt; 或 &lt;code&gt;&amp;amp;&lt;/code&gt; ），在这种情况下，您可以让Django为您处理所有自动转义处理。您需要做的就是在注册过滤器功能时将 &lt;code&gt;is_safe&lt;/code&gt; 标志设置为 &lt;code&gt;True&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="82fca4d10504438a92b6d12cd6c6cadbfa863790" translate="yes" xml:space="preserve">
          <source>Your intermediate model must contain one - and &lt;em&gt;only&lt;/em&gt; one - foreign key to the source model (this would be &lt;code&gt;Group&lt;/code&gt; in our example), or you must explicitly specify the foreign keys Django should use for the relationship using &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField.through_fields&quot;&gt;&lt;code&gt;ManyToManyField.through_fields&lt;/code&gt;&lt;/a&gt;. If you have more than one foreign key and &lt;code&gt;through_fields&lt;/code&gt; is not specified, a validation error will be raised. A similar restriction applies to the foreign key to the target model (this would be &lt;code&gt;Person&lt;/code&gt; in our example).</source>
          <target state="translated">您的中间模型必须包含一个至源模型的&lt;em&gt;唯一&lt;/em&gt;外键（在我们的示例中为 &lt;code&gt;Group&lt;/code&gt; ），或者您必须使用&lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField.through_fields&quot;&gt; &lt;code&gt;ManyToManyField.through_fields&lt;/code&gt; &lt;/a&gt;明确指定Django用于关系的外键。如果您有多个外键，并且未指定 &lt;code&gt;through_fields&lt;/code&gt; ，则会引发验证错误。类似的限制适用于目标模型的外键（在我们的示例中为 &lt;code&gt;Person&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e9d3fd950b3aba4145e99f59e8fa814afd44c6fe" translate="yes" xml:space="preserve">
          <source>Your models will be scanned and compared to the versions currently contained in your migration files, and then a new set of migrations will be written out. Make sure to read the output to see what &lt;code&gt;makemigrations&lt;/code&gt; thinks you have changed - it&amp;rsquo;s not perfect, and for complex changes it might not be detecting what you expect.</source>
          <target state="translated">将扫描模型并将其与迁移文件中当前包含的版本进行比较，然后将写出一组新的迁移。确保阅读输出以查看 &lt;code&gt;makemigrations&lt;/code&gt; 认为您已更改的内容-这并不完美，对于复杂的更改，它可能无法检测到您的期望。</target>
        </trans-unit>
        <trans-unit id="a2f909199452c8d0c9082e212b7c94f3eb525b1b" translate="yes" xml:space="preserve">
          <source>Your project and your reusable app</source>
          <target state="translated">你的项目和你的可重复使用的应用程序</target>
        </trans-unit>
        <trans-unit id="0fe9affe7a6c59487fbb557ebc8a0bb7248a09d6" translate="yes" xml:space="preserve">
          <source>Your project will probably also have static assets that aren&amp;rsquo;t tied to a particular app. In addition to using a &lt;code&gt;static/&lt;/code&gt; directory inside your apps, you can define a list of directories (&lt;a href=&quot;../../ref/settings#std:setting-STATICFILES_DIRS&quot;&gt;&lt;code&gt;STATICFILES_DIRS&lt;/code&gt;&lt;/a&gt;) in your settings file where Django will also look for static files. For example:</source>
          <target state="translated">您的项目可能还会有与特定应用程序无关的静态资产。除了在应用程序内部使用 &lt;code&gt;static/&lt;/code&gt; 目录之外，您还可以在设置文件中定义目录列表（&lt;a href=&quot;../../ref/settings#std:setting-STATICFILES_DIRS&quot;&gt; &lt;code&gt;STATICFILES_DIRS&lt;/code&gt; &lt;/a&gt;），Django还将在其中查找静态文件。例如：</target>
        </trans-unit>
        <trans-unit id="d538712ca89c1fdbdb8ffa4ed96a85150b8d7af3" translate="yes" xml:space="preserve">
          <source>Your project&amp;rsquo;s &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting describes how Django will load and render templates. The default settings file configures a &lt;code&gt;DjangoTemplates&lt;/code&gt; backend whose &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt;&lt;code&gt;APP_DIRS&lt;/code&gt;&lt;/a&gt; option is set to &lt;code&gt;True&lt;/code&gt;. By convention &lt;code&gt;DjangoTemplates&lt;/code&gt; looks for a &amp;ldquo;templates&amp;rdquo; subdirectory in each of the &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">项目的&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;设置描述了Django如何加载和呈现模板。默认设置文件配置 &lt;code&gt;DjangoTemplates&lt;/code&gt; 后端，其&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt; &lt;code&gt;APP_DIRS&lt;/code&gt; &lt;/a&gt;选项设置为 &lt;code&gt;True&lt;/code&gt; 。按照惯例， &lt;code&gt;DjangoTemplates&lt;/code&gt; 在每个&lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 中&lt;/a&gt;寻找一个&amp;ldquo; templates&amp;rdquo;子目录。</target>
        </trans-unit>
        <trans-unit id="342ece2a4ed462604b588597beab24c86478817c" translate="yes" xml:space="preserve">
          <source>Your proxy sets the &lt;code&gt;X-Forwarded-Proto&lt;/code&gt; header and sends it to Django, but only for requests that originally come in via HTTPS.</source>
          <target state="translated">您的代理设置 &lt;code&gt;X-Forwarded-Proto&lt;/code&gt; 标头并将其发送到Django，但仅适用于最初通过HTTPS传入的请求。</target>
        </trans-unit>
        <trans-unit id="d0181e47c5df19b41a87db9e5c9ab20af49f0bc5" translate="yes" xml:space="preserve">
          <source>Your proxy strips the &lt;code&gt;X-Forwarded-Proto&lt;/code&gt; header from all incoming requests. In other words, if end users include that header in their requests, the proxy will discard it.</source>
          <target state="translated">您的代理会从所有传入请求中 &lt;code&gt;X-Forwarded-Proto&lt;/code&gt; 标头。换句话说，如果最终用户在请求中包含该标头，则代理将丢弃它。</target>
        </trans-unit>
        <trans-unit id="ec6e8e0cc8d7aa25898348285aeeff877f0e0356" translate="yes" xml:space="preserve">
          <source>Your serializer class must implement two methods, &lt;code&gt;dumps(self, obj)&lt;/code&gt; and &lt;code&gt;loads(self, data)&lt;/code&gt;, to serialize and deserialize the dictionary of session data, respectively.</source>
          <target state="translated">您的序列化程序类必须实现两个方法， &lt;code&gt;dumps(self, obj)&lt;/code&gt; 和 &lt;code&gt;loads(self, data)&lt;/code&gt; ，以分别序列化和反序列化会话数据字典。</target>
        </trans-unit>
        <trans-unit id="45336c5a09177d971594412e3b54a53bfa2ab040" translate="yes" xml:space="preserve">
          <source>Your storage class must be &lt;a href=&quot;../topics/migrations#custom-deconstruct-method&quot;&gt;deconstructible&lt;/a&gt; so it can be serialized when it&amp;rsquo;s used on a field in a migration. As long as your field has arguments that are themselves &lt;a href=&quot;../topics/migrations#migration-serializing&quot;&gt;serializable&lt;/a&gt;, you can use the &lt;code&gt;django.utils.deconstruct.deconstructible&lt;/code&gt; class decorator for this (that&amp;rsquo;s what Django uses on FileSystemStorage).</source>
          <target state="translated">您的存储类必须是&lt;a href=&quot;../topics/migrations#custom-deconstruct-method&quot;&gt;可分解的，&lt;/a&gt;以便在迁移中的字段上使用时可以序列化。只要您的字段具有本身可&lt;a href=&quot;../topics/migrations#migration-serializing&quot;&gt;序列化的&lt;/a&gt;参数，就可以 &lt;code&gt;django.utils.deconstruct.deconstructible&lt;/code&gt; 使用django.utils.deconstruct.deconstructible类装饰器（这是Django在FileSystemStorage上使用的装饰器）。</target>
        </trans-unit>
        <trans-unit id="05e3770a2c4252cfa20bfa05b921289ab8ed460a" translate="yes" xml:space="preserve">
          <source>Your storage class must implement the &lt;a href=&quot;#django.core.files.storage._open&quot;&gt;&lt;code&gt;_open()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.core.files.storage._save&quot;&gt;&lt;code&gt;_save()&lt;/code&gt;&lt;/a&gt; methods, along with any other methods appropriate to your storage class. See below for more on these methods.</source>
          <target state="translated">您的存储类必须实现&lt;a href=&quot;#django.core.files.storage._open&quot;&gt; &lt;code&gt;_open()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.core.files.storage._save&quot;&gt; &lt;code&gt;_save()&lt;/code&gt; &lt;/a&gt;方法，以及适用于您的存储类的任何其他方法。有关这些方法的更多信息，请参见下文。</target>
        </trans-unit>
        <trans-unit id="6446b2f31846a5dbac76ab4050077dd2c8544531" translate="yes" xml:space="preserve">
          <source>Your templates can go anywhere you want, as long as the directories and templates are readable by the Web server. They can have any extension you want, such as &lt;code&gt;.html&lt;/code&gt; or &lt;code&gt;.txt&lt;/code&gt;, or they can have no extension at all.</source>
          <target state="translated">只要目录和模板可被Web服务器读取，您的模板就可以放在您想要的任何位置。它们可以具有所需的任何扩展名，例如 &lt;code&gt;.html&lt;/code&gt; 或 &lt;code&gt;.txt&lt;/code&gt; ，也可以完全没有扩展名。</target>
        </trans-unit>
        <trans-unit id="126e0677cb0d036d94b7ece5ab0a1ba05b090425" translate="yes" xml:space="preserve">
          <source>Your test runner may also define additional command-line options. Create or override an &lt;code&gt;add_arguments(cls, parser)&lt;/code&gt; class method and add custom arguments by calling &lt;code&gt;parser.add_argument()&lt;/code&gt; inside the method, so that the &lt;a href=&quot;../../ref/django-admin#django-admin-test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; command will be able to use those arguments.</source>
          <target state="translated">测试运行程序还可以定义其他命令行选项。创建或覆盖 &lt;code&gt;add_arguments(cls, parser)&lt;/code&gt; 类方法，并通过在方法内部调用 &lt;code&gt;parser.add_argument()&lt;/code&gt; 来添加自定义参数，以便&lt;a href=&quot;../../ref/django-admin#django-admin-test&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt;命令将能够使用这些参数。</target>
        </trans-unit>
        <trans-unit id="66534fe28baecde291440d1601c256f394fe5c56" translate="yes" xml:space="preserve">
          <source>Your view can read records from a database, or not. It can use a template system such as Django&amp;rsquo;s &amp;ndash; or a third-party Python template system &amp;ndash; or not. It can generate a PDF file, output XML, create a ZIP file on the fly, anything you want, using whatever Python libraries you want.</source>
          <target state="translated">您的视图是否可以从数据库中读取记录。它可以使用Django等模板系统，也可以不使用第三方Python模板系统。它可以使用所需的任何Python库生成PDF文件，输出XML，即时创建ZIP文件。</target>
        </trans-unit>
        <trans-unit id="4d15dd1a6eff3fe899f5f4a214e6329106f0b39d" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; corresponding to the spatial data in the file</source>
          <target state="translated">对应于文件中空间数据的&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="706650edfdad47d78e876ed3f60fac64b36a8968" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; corresponding to the spatial data in the string</source>
          <target state="translated">与字符串中的空间数据相对应的&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5633070c0d5605cf8d4bc901909b869eacdb78d" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;ContentType&lt;/code&gt; for each model (including those not stored in that database),</source>
          <target state="translated">每个模型（包括未存储在该数据库中的模型）的 &lt;code&gt;ContentType&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="ae9f4a2aeedaaa5e2cbda832b26457c441627c8c" translate="yes" xml:space="preserve">
          <source>a class inheriting from &lt;code&gt;django.contrib.admin.SimpleListFilter&lt;/code&gt;, which you need to provide the &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;parameter_name&lt;/code&gt; attributes to and override the &lt;code&gt;lookups&lt;/code&gt; and &lt;code&gt;queryset&lt;/code&gt; methods, e.g.:</source>
          <target state="translated">从 &lt;code&gt;django.contrib.admin.SimpleListFilter&lt;/code&gt; 继承的类，您需要向其提供 &lt;code&gt;title&lt;/code&gt; 和 &lt;code&gt;parameter_name&lt;/code&gt; 属性并覆盖 &lt;code&gt;lookups&lt;/code&gt; 和 &lt;code&gt;queryset&lt;/code&gt; 方法，例如：</target>
        </trans-unit>
        <trans-unit id="632bfa546ff317df34edcd0952b1544a09e39344" translate="yes" xml:space="preserve">
          <source>a datetime generated by your code, which is naive (or you wouldn&amp;rsquo;t be reading this).</source>
          <target state="translated">由您的代码生成的日期时间，该日期时间太幼稚了（否则您将不会阅读）。</target>
        </trans-unit>
        <trans-unit id="61c1642991dc0c3d6e3a730407c02a242b02998d" translate="yes" xml:space="preserve">
          <source>a datetime provided by Django &amp;ndash; for instance, a value read from a form or a model field. Since you enabled time zone support, it&amp;rsquo;s aware.</source>
          <target state="translated">Django提供的日期时间-例如，从表单或模型字段读取的值。由于启用了时区支持，因此可以知道。</target>
        </trans-unit>
        <trans-unit id="3143bfabc9efee23e9b15bad9c023733030232c7" translate="yes" xml:space="preserve">
          <source>a default &lt;code&gt;Site&lt;/code&gt;,</source>
          <target state="translated">默认 &lt;code&gt;Site&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="c92dd7d435daa8a71f5126218aba1db7bc754172" translate="yes" xml:space="preserve">
          <source>a field name, where the specified field should be either a &lt;code&gt;BooleanField&lt;/code&gt;, &lt;code&gt;CharField&lt;/code&gt;, &lt;code&gt;DateField&lt;/code&gt;, &lt;code&gt;DateTimeField&lt;/code&gt;, &lt;code&gt;IntegerField&lt;/code&gt;, &lt;code&gt;ForeignKey&lt;/code&gt; or &lt;code&gt;ManyToManyField&lt;/code&gt;, for example:</source>
          <target state="translated">字段名称，其中指定字段应为 &lt;code&gt;BooleanField&lt;/code&gt; ， &lt;code&gt;CharField&lt;/code&gt; ， &lt;code&gt;DateField&lt;/code&gt; ， &lt;code&gt;DateTimeField&lt;/code&gt; ， &lt;code&gt;IntegerField&lt;/code&gt; ， &lt;code&gt;ForeignKey&lt;/code&gt; 或 &lt;code&gt;ManyToManyField&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="12b23a7f139880ad78626b913255755c03939b98" translate="yes" xml:space="preserve">
          <source>a list of arguments accepted by the command. Arguments are passed to the argument parser, so you can use the same style as you would on the command line. For example, &lt;code&gt;call_command('flush', '--verbosity=0')&lt;/code&gt;.</source>
          <target state="translated">命令接受的参数列表。参数传递到参数解析器，因此您可以使用与命令行相同的样式。例如 &lt;code&gt;call_command('flush', '--verbosity=0')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a947b00f57c082ac65026a7ba785dfea20ba0951" translate="yes" xml:space="preserve">
          <source>a package containing an application.</source>
          <target state="translated">包含应用程序的包。</target>
        </trans-unit>
        <trans-unit id="dc779a8e0fa7a22ab09f80b16f211c08efa09e39" translate="yes" xml:space="preserve">
          <source>a separate &lt;code&gt;TestClass&lt;/code&gt; for each model or view</source>
          <target state="translated">每个模型或视图都有一个单独的 &lt;code&gt;TestClass&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb7aaf461c012dfd6c6abe570b9d0251b343aa07" translate="yes" xml:space="preserve">
          <source>a separate test method for each set of conditions you want to test</source>
          <target state="translated">为您要测试的每一组条件单独制定测试方法。</target>
        </trans-unit>
        <trans-unit id="9985eddf03a0c87890ba34473f141e960e6fd714" translate="yes" xml:space="preserve">
          <source>a tuple, where the first element is a field name and the second element is a class inheriting from &lt;code&gt;django.contrib.admin.FieldListFilter&lt;/code&gt;, for example:</source>
          <target state="translated">一个元组，其中第一个元素是字段名称，第二个元素是从 &lt;code&gt;django.contrib.admin.FieldListFilter&lt;/code&gt; 继承的类，例如：</target>
        </trans-unit>
        <trans-unit id="d62b1a8a4a92a0a6044fc394d033aa89c8bdff1f" translate="yes" xml:space="preserve">
          <source>accounts/hashers.py</source>
          <target state="translated">accounts/hashers.py</target>
        </trans-unit>
        <trans-unit id="0f6d0b8c14dfbc6af3d140c22bf6ab39cc301b47" translate="yes" xml:space="preserve">
          <source>accounts/migrations/0002_migrate_sha1_passwords.py</source>
          <target state="translated">accounts/migrations/0002_migrate_sha1_passwords.py</target>
        </trans-unit>
        <trans-unit id="148d1dd378f1b8310115945d16bc362d942772b3" translate="yes" xml:space="preserve">
          <source>add: &lt;code&gt;user.has_perm('foo.add_bar')&lt;/code&gt;</source>
          <target state="translated">添加： &lt;code&gt;user.has_perm('foo.add_bar')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19fa2a7ff76c1775861f064231fb10f04a5ec076" translate="yes" xml:space="preserve">
          <source>admin.AdminSite</source>
          <target state="translated">admin.AdminSite</target>
        </trans-unit>
        <trans-unit id="ef2a9b657f21dcbb281b4fec05ae4c5f0b64e595" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.add_action()</source>
          <target state="translated">admin.AdminSite.add_action()</target>
        </trans-unit>
        <trans-unit id="49638da466d2123fadc75b1d9e66c6a9076b7f41" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.app_index_template</source>
          <target state="translated">admin.AdminSite.app_index_template</target>
        </trans-unit>
        <trans-unit id="360dac1802004886fc4a55d07c86e42f633a2495" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.disable_action()</source>
          <target state="translated">admin.AdminSite.disable_action()</target>
        </trans-unit>
        <trans-unit id="72d2561bdb4c53dd5c93d2a684d148d343810fb5" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.each_context()</source>
          <target state="translated">admin.AdminSite.each_context()</target>
        </trans-unit>
        <trans-unit id="c5a495dadf76bbb29b5cb7eb3815e585316a85f3" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.empty_value_display</source>
          <target state="translated">admin.AdminSite.empty_value_display</target>
        </trans-unit>
        <trans-unit id="6efc3acbb015c30b3a0c995b300b2174bc6fa5d5" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.enable_nav_sidebar</source>
          <target state="translated">admin.AdminSite.enable_nav_sidebar</target>
        </trans-unit>
        <trans-unit id="7997b6193a579ac159116c7e030689bc680b2f5c" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.has_permission()</source>
          <target state="translated">admin.AdminSite.has_permission()</target>
        </trans-unit>
        <trans-unit id="9571d6dc8f803b744b78c9d70765f6fbf922b4fb" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.index_template</source>
          <target state="translated">admin.AdminSite.index_template</target>
        </trans-unit>
        <trans-unit id="2bb3e78f7bd4b09dd287a00297f909239152cab7" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.index_title</source>
          <target state="translated">admin.AdminSite.index_title</target>
        </trans-unit>
        <trans-unit id="fe60d2e11713bbcf11f416f33249bbd7663419c0" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.login_form</source>
          <target state="translated">admin.AdminSite.login_form</target>
        </trans-unit>
        <trans-unit id="c4e554bea055f6125f332cf2543804ace8c1b26b" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.login_template</source>
          <target state="translated">admin.AdminSite.login_template</target>
        </trans-unit>
        <trans-unit id="2ab2c0c21faad4688648e631c62afb801d714955" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.logout_template</source>
          <target state="translated">admin.AdminSite.logout_template</target>
        </trans-unit>
        <trans-unit id="072afd9c3a2cf4447c4f481084eb12dca7b9f76a" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.password_change_done_template</source>
          <target state="translated">admin.AdminSite.password_change_done_template</target>
        </trans-unit>
        <trans-unit id="caf86d531bd116d68d54dd54d083405820ad5de4" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.password_change_template</source>
          <target state="translated">admin.AdminSite.password_change_template</target>
        </trans-unit>
        <trans-unit id="54fdb16644441a6b826870420d3fc4c054a3502a" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.register()</source>
          <target state="translated">admin.AdminSite.register()</target>
        </trans-unit>
        <trans-unit id="15bad84f33bda8fc958d17acc7f74b8b46131ef6" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.site_header</source>
          <target state="translated">admin.AdminSite.site_header</target>
        </trans-unit>
        <trans-unit id="d11942f8f704749aabb508b5afaa0974b6e8f4f7" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.site_title</source>
          <target state="translated">admin.AdminSite.site_title</target>
        </trans-unit>
        <trans-unit id="d8bb04f2165713048afb39051d10d9bdc2439e07" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.site_url</source>
          <target state="translated">admin.AdminSite.site_url</target>
        </trans-unit>
        <trans-unit id="e8881f9f87c476f31787126a0ab9ddaf3c0c18d7" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin</source>
          <target state="translated">admin.InlineModelAdmin</target>
        </trans-unit>
        <trans-unit id="bd48ddfed7c30e9259f596149ed38d17c76d867f" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.can_delete</source>
          <target state="translated">admin.InlineModelAdmin.can_delete</target>
        </trans-unit>
        <trans-unit id="e1efe950d9182c07e171ad00d5ff52421339a364" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.classes</source>
          <target state="translated">admin.InlineModelAdmin.classes</target>
        </trans-unit>
        <trans-unit id="1ecf8f7c25ed4b23bca35865ba776cfd9d665e1a" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.extra</source>
          <target state="translated">admin.InlineModelAdmin.extra</target>
        </trans-unit>
        <trans-unit id="560e520cd3d389dd65f5f3090d8855d26ca62783" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.fk_name</source>
          <target state="translated">admin.InlineModelAdmin.fk_name</target>
        </trans-unit>
        <trans-unit id="aefad253bdc78e3979db55a44046fcd5b943bb95" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.form</source>
          <target state="translated">admin.InlineModelAdmin.form</target>
        </trans-unit>
        <trans-unit id="f5f19a14481777158b3e37424f069c9ede29062f" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.formset</source>
          <target state="translated">admin.InlineModelAdmin.formset</target>
        </trans-unit>
        <trans-unit id="82b366daf468a6ee7968e7dc51e7b495c4791de5" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.get_extra()</source>
          <target state="translated">admin.InlineModelAdmin.get_extra()</target>
        </trans-unit>
        <trans-unit id="58cc757cf49e5ff479a9d1a9dee11469f0a16ee3" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.get_formset()</source>
          <target state="translated">admin.InlineModelAdmin.get_formset()</target>
        </trans-unit>
        <trans-unit id="ecb5a8da149b9435a30039d3ad8d9c5ff25d601a" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.get_max_num()</source>
          <target state="translated">admin.InlineModelAdmin.get_max_num()</target>
        </trans-unit>
        <trans-unit id="7ed3bfa47dc235a15662ab70caf0bf71f6f10e7f" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.get_min_num()</source>
          <target state="translated">admin.InlineModelAdmin.get_min_num()</target>
        </trans-unit>
        <trans-unit id="cb589b63bcc801924fc9d88a2636301dcb997fa2" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.has_add_permission()</source>
          <target state="translated">admin.InlineModelAdmin.has_add_permission()</target>
        </trans-unit>
        <trans-unit id="22fd9dc751d70fa2fe1c49032ce1a1e2a50b5357" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.has_change_permission()</source>
          <target state="translated">admin.InlineModelAdmin.has_change_permission()</target>
        </trans-unit>
        <trans-unit id="8e07194673ed772b8f05d7771beb15eea4a2a65f" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.has_delete_permission()</source>
          <target state="translated">admin.InlineModelAdmin.has_delete_permission()</target>
        </trans-unit>
        <trans-unit id="108695aa6e880b82dd6d2cfaddbdd1fd862c04a7" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.max_num</source>
          <target state="translated">admin.InlineModelAdmin.max_num</target>
        </trans-unit>
        <trans-unit id="7b42685f5c14f277bf0579e40c079855c9648a1a" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.min_num</source>
          <target state="translated">admin.InlineModelAdmin.min_num</target>
        </trans-unit>
        <trans-unit id="c96c19b374fce721771bf4130de27f5b154ceb59" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.model</source>
          <target state="translated">admin.InlineModelAdmin.model</target>
        </trans-unit>
        <trans-unit id="d4fd31d3248469636efcfff2d665a4b56f306163" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.raw_id_fields</source>
          <target state="translated">admin.InlineModelAdmin.raw_id_fields</target>
        </trans-unit>
        <trans-unit id="1f9dcce010cd84d40f7978b8ff8bd4e88b0d2b1c" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.show_change_link</source>
          <target state="translated">admin.InlineModelAdmin.show_change_link</target>
        </trans-unit>
        <trans-unit id="bf4e14ab1547849f0f2943851539514cdf88f5d2" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.template</source>
          <target state="translated">admin.InlineModelAdmin.template</target>
        </trans-unit>
        <trans-unit id="5dc63e6c56745af576bcdd3b6949fd6465e9b629" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.verbose_name</source>
          <target state="translated">admin.InlineModelAdmin.verbose_name</target>
        </trans-unit>
        <trans-unit id="bd96804de51eb11525b8403a53246d0b3ce0f087" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.verbose_name_plural</source>
          <target state="translated">admin.InlineModelAdmin.verbose_name_plural</target>
        </trans-unit>
        <trans-unit id="515310c13f05a39b86038b17b500fc410e2ef1e9" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin</source>
          <target state="translated">admin.ModelAdmin</target>
        </trans-unit>
        <trans-unit id="10323e8496304b7323da43a534cdcca4bbe40c3b" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.actions</source>
          <target state="translated">admin.ModelAdmin.actions</target>
        </trans-unit>
        <trans-unit id="9a10793b7f7cd601e7d5f851bc02bd362afc8e6c" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.actions_on_bottom</source>
          <target state="translated">admin.ModelAdmin.actions_on_bottom</target>
        </trans-unit>
        <trans-unit id="8fb7d31136ce75d3ebfc53e59e64c82de89f35d3" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.actions_on_top</source>
          <target state="translated">admin.ModelAdmin.actions_on_top</target>
        </trans-unit>
        <trans-unit id="98d00dbe24ec12505bc68c762de95369c0ab4eda" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.actions_selection_counter</source>
          <target state="translated">admin.ModelAdmin.actions_selection_counter</target>
        </trans-unit>
        <trans-unit id="28d07e42512a3df18184000d1492dc38a39ca02b" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.add_form_template</source>
          <target state="translated">admin.ModelAdmin.add_form_template</target>
        </trans-unit>
        <trans-unit id="d7fd21730723f37895588d920f0d95ab6274d082" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.add_view()</source>
          <target state="translated">admin.ModelAdmin.add_view()</target>
        </trans-unit>
        <trans-unit id="9b73116862ae836a2df6173ae153384c15364301" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.autocomplete_fields</source>
          <target state="translated">admin.ModelAdmin.autocomplete_fields</target>
        </trans-unit>
        <trans-unit id="18736d73435877b62407e87aa1b476bfcf627212" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.change_form_template</source>
          <target state="translated">admin.ModelAdmin.change_form_template</target>
        </trans-unit>
        <trans-unit id="d9f0d4e3d0364a9f1dfeb307aac29ba50025f658" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.change_list_template</source>
          <target state="translated">admin.ModelAdmin.change_list_template</target>
        </trans-unit>
        <trans-unit id="e526d5f6094f9cdc4dd14885014289b10ec7b980" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.change_view()</source>
          <target state="translated">admin.ModelAdmin.change_view()</target>
        </trans-unit>
        <trans-unit id="d414e6406a983136e190dc7a07fd8a2c96750dfe" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.changelist_view()</source>
          <target state="translated">admin.ModelAdmin.changelist_view()</target>
        </trans-unit>
        <trans-unit id="3dc030c51fc765cfbd870017ad5d8b0b948f481b" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.date_hierarchy</source>
          <target state="translated">admin.ModelAdmin.date_hierarchy</target>
        </trans-unit>
        <trans-unit id="386c160d160335a6ac2a7c49bdc8ca054519497a" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.delete_confirmation_template</source>
          <target state="translated">admin.ModelAdmin.delete_confirmation_template</target>
        </trans-unit>
        <trans-unit id="eeb04318e25a77a327e833cdd70b15e9b15e9cb9" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.delete_model()</source>
          <target state="translated">admin.ModelAdmin.delete_model()</target>
        </trans-unit>
        <trans-unit id="e821552354256eb083e101ac09e22eb68168a6b0" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.delete_queryset()</source>
          <target state="translated">admin.ModelAdmin.delete_queryset()</target>
        </trans-unit>
        <trans-unit id="3d38b8122710752e32b9b1ea25ce515a232c6ef5" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.delete_selected_confirmation_template</source>
          <target state="translated">admin.ModelAdmin.delete_selected_confirmation_template</target>
        </trans-unit>
        <trans-unit id="f87ace7e2e6072486bf1035fc6ad811a0a500ca1" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.delete_view()</source>
          <target state="translated">admin.ModelAdmin.delete_view()</target>
        </trans-unit>
        <trans-unit id="98c1074d8ce17190d374186911a3b2b54b07a8d3" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.empty_value_display</source>
          <target state="translated">admin.ModelAdmin.empty_value_display</target>
        </trans-unit>
        <trans-unit id="70082f2170a9d52ded2284b628f5cbeacf92a3e5" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.exclude</source>
          <target state="translated">admin.ModelAdmin.exclude</target>
        </trans-unit>
        <trans-unit id="a58601cd1779b989bd014aa80812123e23e20780" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.fields</source>
          <target state="translated">admin.ModelAdmin.fields</target>
        </trans-unit>
        <trans-unit id="6992c21f5dec76a6ca9ce3e0011d0fc88518e3e8" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.fieldsets</source>
          <target state="translated">admin.ModelAdmin.fieldsets</target>
        </trans-unit>
        <trans-unit id="8cfb9e69cf778b626d3d75e23e1227ff78ce5541" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.filter_horizontal</source>
          <target state="translated">admin.ModelAdmin.filter_horizontal</target>
        </trans-unit>
        <trans-unit id="677bca52a7e23db19b6a51e66f29d0343cfb1e8b" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.filter_vertical</source>
          <target state="translated">admin.ModelAdmin.filter_vertical</target>
        </trans-unit>
        <trans-unit id="c31c650b761bf8666b77efa1b8e60aa9bcd9d1b7" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.form</source>
          <target state="translated">admin.ModelAdmin.form</target>
        </trans-unit>
        <trans-unit id="4d1bb828ed5ce95d580cccbb3f56ac14def14eb9" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.formfield_for_choice_field()</source>
          <target state="translated">admin.ModelAdmin.formfield_for_choice_field()</target>
        </trans-unit>
        <trans-unit id="4127df903c77ee5a6d67efa526294009131ac26e" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.formfield_for_foreignkey()</source>
          <target state="translated">admin.ModelAdmin.formfield_for_foreignkey()</target>
        </trans-unit>
        <trans-unit id="360e9f010bfa61799a1a6b0b9064279f0462a8a1" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.formfield_for_manytomany()</source>
          <target state="translated">admin.ModelAdmin.formfield_for_manytomany()</target>
        </trans-unit>
        <trans-unit id="c44d47564fdfd6332cab5587ed83c76f7880ba16" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.formfield_overrides</source>
          <target state="translated">admin.ModelAdmin.formfield_overrides</target>
        </trans-unit>
        <trans-unit id="dff578ba305d73fb43adf8644bc7436dd84e9d4f" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_actions()</source>
          <target state="translated">admin.ModelAdmin.get_actions()</target>
        </trans-unit>
        <trans-unit id="1748092081402aa0d7bd6c930ed5e489d18fc2ac" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_autocomplete_fields()</source>
          <target state="translated">admin.ModelAdmin.get_autocomplete_fields()</target>
        </trans-unit>
        <trans-unit id="11ec3f8638cb42eb1a132d9cdd347b82b24bb482" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_changeform_initial_data()</source>
          <target state="translated">admin.ModelAdmin.get_changeform_initial_data()</target>
        </trans-unit>
        <trans-unit id="2d4004904c51185bb5386749923e35dd901a01cb" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_changelist()</source>
          <target state="translated">admin.ModelAdmin.get_changelist()</target>
        </trans-unit>
        <trans-unit id="eeaf455162fc0dd56ff670a4fabf219c3182d42a" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_changelist_form()</source>
          <target state="translated">admin.ModelAdmin.get_changelist_form()</target>
        </trans-unit>
        <trans-unit id="4647a0dc2c8baaa7d98e2799fb46d3a7686b5404" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_changelist_formset()</source>
          <target state="translated">admin.ModelAdmin.get_changelist_formset()</target>
        </trans-unit>
        <trans-unit id="86091850517c4268b8f2f9b6f9f8a065bea53b79" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_deleted_objects()</source>
          <target state="translated">admin.ModelAdmin.get_deleted_objects()</target>
        </trans-unit>
        <trans-unit id="d0aa2c89b17f5717e8e1406e36d742f8d414b690" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_exclude()</source>
          <target state="translated">admin.ModelAdmin.get_exclude()</target>
        </trans-unit>
        <trans-unit id="65b8808f4d9bb3879739ee661bf3e8dc03dd333c" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_fields()</source>
          <target state="translated">admin.ModelAdmin.get_fields()</target>
        </trans-unit>
        <trans-unit id="e1f5ce78c0cb66c0a1a48a2a01f2c113e9781a0b" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_fieldsets()</source>
          <target state="translated">admin.ModelAdmin.get_fieldsets()</target>
        </trans-unit>
        <trans-unit id="682046f6acc2bbfb77bdc16c367aff4ca91d7e20" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_form()</source>
          <target state="translated">admin.ModelAdmin.get_form()</target>
        </trans-unit>
        <trans-unit id="9245dc2355ab9ef13f016b44260744abcd5cd03e" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_formsets_with_inlines()</source>
          <target state="translated">admin.ModelAdmin.get_formsets_with_inlines()</target>
        </trans-unit>
        <trans-unit id="8f61e73298655d043921243b68c475a50a8b4042" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_inline_instances()</source>
          <target state="translated">admin.ModelAdmin.get_inline_instances()</target>
        </trans-unit>
        <trans-unit id="c38f1afe2ba95edbde728474a8736fd6e01942ff" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_inlines()</source>
          <target state="translated">admin.ModelAdmin.get_inlines()</target>
        </trans-unit>
        <trans-unit id="371bd02049e6f885eb8fbf0ddfa7aa321219d8ad" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_list_display()</source>
          <target state="translated">admin.ModelAdmin.get_list_display()</target>
        </trans-unit>
        <trans-unit id="d8ec9e631a46958e96713597966551dbbc8a8f39" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_list_display_links()</source>
          <target state="translated">admin.ModelAdmin.get_list_display_links()</target>
        </trans-unit>
        <trans-unit id="b991670e4b39a4d4a94ace71ccac658b1c232729" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_list_filter()</source>
          <target state="translated">admin.ModelAdmin.get_list_filter()</target>
        </trans-unit>
        <trans-unit id="eaa5c8f3f07e534709f034e7d77c4bcd40423f23" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_list_select_related()</source>
          <target state="translated">admin.ModelAdmin.get_list_select_related()</target>
        </trans-unit>
        <trans-unit id="a2ba3e5cdf370daa54add2d4b04ae43eedf1c822" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_ordering()</source>
          <target state="translated">admin.ModelAdmin.get_ordering()</target>
        </trans-unit>
        <trans-unit id="4dffca8dfd4243e5724ba2986efd597a2e38f655" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_paginator()</source>
          <target state="translated">admin.ModelAdmin.get_paginator()</target>
        </trans-unit>
        <trans-unit id="cccb0f80ae24ac3168f4be1a4b6d1612b07b2382" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_prepopulated_fields()</source>
          <target state="translated">admin.ModelAdmin.get_prepopulated_fields()</target>
        </trans-unit>
        <trans-unit id="345bef5c3bf84ff54a129d273f253e769e03ffa2" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_queryset()</source>
          <target state="translated">admin.ModelAdmin.get_queryset()</target>
        </trans-unit>
        <trans-unit id="3e04fe886cafd3ab6212841c5c8f78c9f0aeef54" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_readonly_fields()</source>
          <target state="translated">admin.ModelAdmin.get_readonly_fields()</target>
        </trans-unit>
        <trans-unit id="36b3cb93f6e736e6291536eb0d8292f5553507e6" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_search_fields()</source>
          <target state="translated">admin.ModelAdmin.get_search_fields()</target>
        </trans-unit>
        <trans-unit id="27d024518e99ccc0d569dbe33017926dc6b280e3" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_search_results()</source>
          <target state="translated">admin.ModelAdmin.get_search_results()</target>
        </trans-unit>
        <trans-unit id="f06d5595205a7abec0643102c0afa013f04259cb" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_sortable_by()</source>
          <target state="translated">admin.ModelAdmin.get_sortable_by()</target>
        </trans-unit>
        <trans-unit id="f4ae7ce666ecc325f47c4c7d3691cb9d1a82d8f6" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_urls()</source>
          <target state="translated">admin.ModelAdmin.get_urls()</target>
        </trans-unit>
        <trans-unit id="89b6fdba7c819621100541c215a96d613b8c8bf7" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.has_add_permission()</source>
          <target state="translated">admin.ModelAdmin.has_add_permission()</target>
        </trans-unit>
        <trans-unit id="87b15d6ce3ae58256c49f7abe7a050ae70839677" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.has_change_permission()</source>
          <target state="translated">admin.ModelAdmin.has_change_permission()</target>
        </trans-unit>
        <trans-unit id="6ac0d81e6437a0f35406d90b3795f636e43021d1" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.has_delete_permission()</source>
          <target state="translated">admin.ModelAdmin.has_delete_permission()</target>
        </trans-unit>
        <trans-unit id="869f41467d7eb8062cd8c1dcbaa1acf8fd092dbf" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.has_module_permission()</source>
          <target state="translated">admin.ModelAdmin.has_module_permission()</target>
        </trans-unit>
        <trans-unit id="24ce86b27f112ca90f3cb4e63c612974277aa941" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.has_view_permission()</source>
          <target state="translated">admin.ModelAdmin.has_view_permission()</target>
        </trans-unit>
        <trans-unit id="3f7b9cc079d4bd512547e0aa9b9b1deecf54b1ff" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.history_view()</source>
          <target state="translated">admin.ModelAdmin.history_view()</target>
        </trans-unit>
        <trans-unit id="c1003b0dcf44f080df52f1ec08b2d3069d79fd34" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.inlines</source>
          <target state="translated">admin.ModelAdmin.inlines</target>
        </trans-unit>
        <trans-unit id="1363c662c09279fa048fd805fff686d2c43e26f6" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.list_display</source>
          <target state="translated">admin.ModelAdmin.list_display</target>
        </trans-unit>
        <trans-unit id="93d27480dcd686fe98b39b2331bf33bb7a0a914a" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.list_display_links</source>
          <target state="translated">admin.ModelAdmin.list_display_links</target>
        </trans-unit>
        <trans-unit id="fe0124949cba95a344f701f984dda75b9469594f" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.list_editable</source>
          <target state="translated">admin.ModelAdmin.list_editable</target>
        </trans-unit>
        <trans-unit id="5d076473adc2f30b33d2007b750b7d8c6acc851d" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.list_filter</source>
          <target state="translated">admin.ModelAdmin.list_filter</target>
        </trans-unit>
        <trans-unit id="f87da645f148549fa2b441adf8579dda86a89f72" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.list_max_show_all</source>
          <target state="translated">admin.ModelAdmin.list_max_show_all</target>
        </trans-unit>
        <trans-unit id="4298648f0dc31076aa00e77403161a309f3ef266" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.list_per_page</source>
          <target state="translated">admin.ModelAdmin.list_per_page</target>
        </trans-unit>
        <trans-unit id="38a42d294ec00fbdf4c41dd9606e9387f93a838e" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.list_select_related</source>
          <target state="translated">admin.ModelAdmin.list_select_related</target>
        </trans-unit>
        <trans-unit id="baa4996c856956dad5c1cfd20e063b959b3f8f5a" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.lookup_allowed()</source>
          <target state="translated">admin.ModelAdmin.lookup_allowed()</target>
        </trans-unit>
        <trans-unit id="c797ba34e0d0e8056d559734cffcd09267685b93" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.message_user()</source>
          <target state="translated">admin.ModelAdmin.message_user()</target>
        </trans-unit>
        <trans-unit id="0e06c32a838101bc4f492f2b86b9c11b3512c7d2" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.object_history_template</source>
          <target state="translated">admin.ModelAdmin.object_history_template</target>
        </trans-unit>
        <trans-unit id="9f214f2b5d52736c57222aeeb6e0979ec825c631" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.ordering</source>
          <target state="translated">admin.ModelAdmin.ordering</target>
        </trans-unit>
        <trans-unit id="8901524b611d9d8d8c9434ed1d37c196c44493a8" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.paginator</source>
          <target state="translated">admin.ModelAdmin.paginator</target>
        </trans-unit>
        <trans-unit id="32aeaeb297857d2c4eef4eb80921308fd46074c1" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.popup_response_template</source>
          <target state="translated">admin.ModelAdmin.popup_response_template</target>
        </trans-unit>
        <trans-unit id="7b26552a2d8776126fa2d25ca34f2d8e203ba913" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.prepopulated_fields</source>
          <target state="translated">admin.ModelAdmin.prepopulated_fields</target>
        </trans-unit>
        <trans-unit id="a770bc8457a0f65f6f8a3ddb41e33c686607a7e5" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.preserve_filters</source>
          <target state="translated">admin.ModelAdmin.preserve_filters</target>
        </trans-unit>
        <trans-unit id="79d8e0c9eaee54190ae8de66afcdee05ba59a457" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.radio_fields</source>
          <target state="translated">admin.ModelAdmin.radio_fields</target>
        </trans-unit>
        <trans-unit id="c47f44d903c90a13f80df30199f6208d6bcd5303" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.raw_id_fields</source>
          <target state="translated">admin.ModelAdmin.raw_id_fields</target>
        </trans-unit>
        <trans-unit id="08ece98341e65cebd59a1fd42ea1579cc4236ef3" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.readonly_fields</source>
          <target state="translated">admin.ModelAdmin.readonly_fields</target>
        </trans-unit>
        <trans-unit id="790ddcaeedb9a9cfc49345830f5f2ebb4d985175" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.response_add()</source>
          <target state="translated">admin.ModelAdmin.response_add()</target>
        </trans-unit>
        <trans-unit id="2091cff95e093e7091cf0aa61b3ea2fb960d0f90" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.response_change()</source>
          <target state="translated">admin.ModelAdmin.response_change()</target>
        </trans-unit>
        <trans-unit id="31cdf3d180a2ed2452fd6cd9483b8d3f83dec732" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.response_delete()</source>
          <target state="translated">admin.ModelAdmin.response_delete()</target>
        </trans-unit>
        <trans-unit id="cdec2a05a1e1335e02a7adc8699a5066932dea30" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.save_as</source>
          <target state="translated">admin.ModelAdmin.save_as</target>
        </trans-unit>
        <trans-unit id="59646490ffcb8c914e478450da955e151c9f58f9" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.save_as_continue</source>
          <target state="translated">admin.ModelAdmin.save_as_continue</target>
        </trans-unit>
        <trans-unit id="809f3c1003a169eda79828ee1df6308193106799" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.save_formset()</source>
          <target state="translated">admin.ModelAdmin.save_formset()</target>
        </trans-unit>
        <trans-unit id="6f55143c7a96f865f2ead83a0ec836e072eec535" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.save_model()</source>
          <target state="translated">admin.ModelAdmin.save_model()</target>
        </trans-unit>
        <trans-unit id="bff5a4660d94da7d29e26c14e5237549c5a71f1a" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.save_on_top</source>
          <target state="translated">admin.ModelAdmin.save_on_top</target>
        </trans-unit>
        <trans-unit id="a392b186450c2c5fd5393dee4edb3469375d28b5" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.save_related()</source>
          <target state="translated">admin.ModelAdmin.save_related()</target>
        </trans-unit>
        <trans-unit id="f6dd364e52c424f7cf99fd585ae0c60f96f7c534" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.search_fields</source>
          <target state="translated">admin.ModelAdmin.search_fields</target>
        </trans-unit>
        <trans-unit id="0a14c787c79088856949b6016c48835714280cc3" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.show_full_result_count</source>
          <target state="translated">admin.ModelAdmin.show_full_result_count</target>
        </trans-unit>
        <trans-unit id="3c13c26fff9340b7e54741640674df28f02b4d3a" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.sortable_by</source>
          <target state="translated">admin.ModelAdmin.sortable_by</target>
        </trans-unit>
        <trans-unit id="ed03a983df511ecca511ec88536eba917556e78f" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.view_on_site</source>
          <target state="translated">admin.ModelAdmin.view_on_site</target>
        </trans-unit>
        <trans-unit id="0a0d391b556ede5b504eae74ac97c7c541a9d6dc" translate="yes" xml:space="preserve">
          <source>admin.StackedInline</source>
          <target state="translated">admin.StackedInline</target>
        </trans-unit>
        <trans-unit id="fec5805bb823dde06c633bda8f82b1c3fa4bada4" translate="yes" xml:space="preserve">
          <source>admin.TabularInline</source>
          <target state="translated">admin.TabularInline</target>
        </trans-unit>
        <trans-unit id="7bdbb4a38c87e0b094dcd1b5dfe4949238c61733" translate="yes" xml:space="preserve">
          <source>admin.apps.AdminConfig</source>
          <target state="translated">admin.apps.AdminConfig</target>
        </trans-unit>
        <trans-unit id="5da053a4a99299870c68445bc1ffc0b7e0aa6ebf" translate="yes" xml:space="preserve">
          <source>admin.apps.SimpleAdminConfig</source>
          <target state="translated">admin.apps.SimpleAdminConfig</target>
        </trans-unit>
        <trans-unit id="cbfbf70b3ac4ee4e5d35575551173af11b7d54f9" translate="yes" xml:space="preserve">
          <source>admin.apps.SimpleAdminConfig.default_site</source>
          <target state="translated">admin.apps.SimpleAdminConfig.default_site</target>
        </trans-unit>
        <trans-unit id="31d560a2ea739d69c7fdad7ba9364b73e15d5d12" translate="yes" xml:space="preserve">
          <source>admin.autodiscover()</source>
          <target state="translated">admin.autodiscover()</target>
        </trans-unit>
        <trans-unit id="6d2edf5c981aa07e5744f3d70d8de280ba3d2121" translate="yes" xml:space="preserve">
          <source>admin.models.LogEntry</source>
          <target state="translated">admin.models.LogEntry</target>
        </trans-unit>
        <trans-unit id="eaa842dffce16859d100cc16147287f3ccaaa0a6" translate="yes" xml:space="preserve">
          <source>admin.models.LogEntry.action_flag</source>
          <target state="translated">admin.models.LogEntry.action_flag</target>
        </trans-unit>
        <trans-unit id="9a1a5b3b7d45572296167f56d6aafca5710e59ff" translate="yes" xml:space="preserve">
          <source>admin.models.LogEntry.action_time</source>
          <target state="translated">admin.models.LogEntry.action_time</target>
        </trans-unit>
        <trans-unit id="2f97562fb50c2314ad54d104f97cbfbd24707604" translate="yes" xml:space="preserve">
          <source>admin.models.LogEntry.change_message</source>
          <target state="translated">admin.models.LogEntry.change_message</target>
        </trans-unit>
        <trans-unit id="296b0904f0a779b3447d07b2ddf024e55157821d" translate="yes" xml:space="preserve">
          <source>admin.models.LogEntry.content_type</source>
          <target state="translated">admin.models.LogEntry.content_type</target>
        </trans-unit>
        <trans-unit id="28d4b4b6a8034e207eac434e21fa3fe85c4bf103" translate="yes" xml:space="preserve">
          <source>admin.models.LogEntry.get_change_message()</source>
          <target state="translated">admin.models.LogEntry.get_change_message()</target>
        </trans-unit>
        <trans-unit id="93610534067ff3d7e629942da864c2ce580119ea" translate="yes" xml:space="preserve">
          <source>admin.models.LogEntry.get_edited_object()</source>
          <target state="translated">admin.models.LogEntry.get_edited_object()</target>
        </trans-unit>
        <trans-unit id="fbd8516a3bc5512289552d93dd57b29537801236" translate="yes" xml:space="preserve">
          <source>admin.models.LogEntry.object_id</source>
          <target state="translated">admin.models.LogEntry.object_id</target>
        </trans-unit>
        <trans-unit id="29d8b2e5019026534a3c3d1eba2138ff51ae72d4" translate="yes" xml:space="preserve">
          <source>admin.models.LogEntry.object_repr</source>
          <target state="translated">admin.models.LogEntry.object_repr</target>
        </trans-unit>
        <trans-unit id="3b332cb4843d8fc63730e662f0a6551637b6b8f6" translate="yes" xml:space="preserve">
          <source>admin.models.LogEntry.user</source>
          <target state="translated">admin.models.LogEntry.user</target>
        </trans-unit>
        <trans-unit id="df719e48e7b8592821cee0721ad82e2e74955642" translate="yes" xml:space="preserve">
          <source>admin.register()</source>
          <target state="translated">admin.register()</target>
        </trans-unit>
        <trans-unit id="b1334d0174c894b2a2da59747831c8fbc80a5299" translate="yes" xml:space="preserve">
          <source>admin.views.decorators.staff_member_required()</source>
          <target state="translated">admin.views.decorators.staff_member_required()</target>
        </trans-unit>
        <trans-unit id="eada6c330e39eaa38e999e8bc4f9f23990d0b7b3" translate="yes" xml:space="preserve">
          <source>an application configuration class (preferred), or</source>
          <target state="translated">应用配置类(首选),或</target>
        </trans-unit>
        <trans-unit id="8a7549e19903d19b07ae4daf508a8023b84b9aa3" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;NumericRange&lt;/code&gt;:</source>
          <target state="translated">和 &lt;code&gt;NumericRange&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5146a95ec0b449286e8e3fbe21699dfff7d49725" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;first&lt;/code&gt; is &lt;code&gt;[1, 2, 3]&lt;/code&gt; and &lt;code&gt;second&lt;/code&gt; is &lt;code&gt;[4, 5, 6]&lt;/code&gt;, then the output will be &lt;code&gt;[1, 2, 3, 4, 5, 6]&lt;/code&gt;.</source>
          <target state="translated">并且 &lt;code&gt;first&lt;/code&gt; 是 &lt;code&gt;[1, 2, 3]&lt;/code&gt; ， &lt;code&gt;second&lt;/code&gt; 是 &lt;code&gt;[4, 5, 6]&lt;/code&gt; ，那么输出将是 &lt;code&gt;[1, 2, 3, 4, 5, 6]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9cfa2bc1b74e1644aec2ba9146cb116433d4aa25" translate="yes" xml:space="preserve">
          <source>and as a &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt;:</source>
          <target state="translated">并作为&lt;a href=&quot;https://docs.python.org/3/glossary.html#term-context-manager&quot;&gt;上下文管理器&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="c237451df30e0bf5b737e2ba68b4dfdfafcb4dbb" translate="yes" xml:space="preserve">
          <source>and in the template:</source>
          <target state="translated">并在模板中。</target>
        </trans-unit>
        <trans-unit id="e330d626c3205dcaf2d8691a74bc7707d2c2f112" translate="yes" xml:space="preserve">
          <source>and run the test again:</source>
          <target state="translated">并再次运行测试。</target>
        </trans-unit>
        <trans-unit id="ff8d5da4de452dd86c28c3ad0b3c21015c483ee3" translate="yes" xml:space="preserve">
          <source>and run:</source>
          <target state="translated">和运行。</target>
        </trans-unit>
        <trans-unit id="3f4f8cb99b447af280c73c7a94e50d83e0e8730d" translate="yes" xml:space="preserve">
          <source>and set the &lt;code&gt;'environment'&lt;/code&gt; option to &lt;code&gt;'myproject.jinja2.environment'&lt;/code&gt;.</source>
          <target state="translated">并将 &lt;code&gt;'environment'&lt;/code&gt; 选项设置为 &lt;code&gt;'myproject.jinja2.environment'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57a9410f84114ae9a2c8f69401fa6bb699522f5b" translate="yes" xml:space="preserve">
          <source>and several subclasses:</source>
          <target state="translated">和几个子类。</target>
        </trans-unit>
        <trans-unit id="473bc01d0b4ec979636438f45b437b19a3a59db6" translate="yes" xml:space="preserve">
          <source>and the settings file includes a list of the domains supported by the project:</source>
          <target state="translated">和设置文件包括项目支持的域列表。</target>
        </trans-unit>
        <trans-unit id="89a8941fa222a4f815482fb1d1642a5b2a7d8441" translate="yes" xml:space="preserve">
          <source>and then add it to your logging config:</source>
          <target state="translated">然后将其添加到你的日志配置中。</target>
        </trans-unit>
        <trans-unit id="fc465fb48838c898c6c6a90f7ca858f1489fa769" translate="yes" xml:space="preserve">
          <source>and then decide that you want to use &lt;code&gt;TextField&lt;/code&gt; instead, you can&amp;rsquo;t change the subclass like this:</source>
          <target state="translated">然后决定要使用 &lt;code&gt;TextField&lt;/code&gt; ，则不能像这样更改子类：</target>
        </trans-unit>
        <trans-unit id="548cb6737f36f052297db887219e99957155a457" translate="yes" xml:space="preserve">
          <source>and then did something like this:</source>
          <target state="translated">然后做了这样的事情。</target>
        </trans-unit>
        <trans-unit id="1578c5952706addd98d229e9890dfaf2a8535ecd" translate="yes" xml:space="preserve">
          <source>and then we must amend the &lt;code&gt;get_queryset&lt;/code&gt; method like so:</source>
          <target state="translated">然后我们必须修改 &lt;code&gt;get_queryset&lt;/code&gt; 方法，如下所示：</target>
        </trans-unit>
        <trans-unit id="fa267738dee3a980032e6181739addc33d8c7fc6" translate="yes" xml:space="preserve">
          <source>and these items in your &lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="translated">以及&lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt;设置中的这些项目：</target>
        </trans-unit>
        <trans-unit id="c88dd1843a27b6ff725e7a97906bc64d61059ddb" translate="yes" xml:space="preserve">
          <source>and using the template above, would render something like:</source>
          <target state="translated">并使用上面的模板,会呈现出这样的效果。</target>
        </trans-unit>
        <trans-unit id="81d5f03b0e2e9408628642e07cb4f5b92994a301" translate="yes" xml:space="preserve">
          <source>and we&amp;rsquo;ll create a shortcut function to create questions as well as a new test class:</source>
          <target state="translated">我们将创建一个快捷方式函数来创建问题以及一个新的测试类：</target>
        </trans-unit>
        <trans-unit id="c467f76566a0efffa8c5eaabfb0eafd296655b35" translate="yes" xml:space="preserve">
          <source>and you want to do some custom validation for &lt;code&gt;headline&lt;/code&gt;, while keeping the &lt;code&gt;blank&lt;/code&gt; and &lt;code&gt;help_text&lt;/code&gt; values as specified, you might define &lt;code&gt;ArticleForm&lt;/code&gt; like this:</source>
          <target state="translated">你想要做一些自定义的验证 &lt;code&gt;headline&lt;/code&gt; ，同时保持 &lt;code&gt;blank&lt;/code&gt; 和 &lt;code&gt;help_text&lt;/code&gt; 值规定，可以定义 &lt;code&gt;ArticleForm&lt;/code&gt; 这样的：</target>
        </trans-unit>
        <trans-unit id="d7cdf5e19422782b9f71d4e417fe5cdca580769e" translate="yes" xml:space="preserve">
          <source>and you&amp;rsquo;ll see something like:</source>
          <target state="translated">然后您会看到类似以下内容：</target>
        </trans-unit>
        <trans-unit id="a5230bf3ac1fc697c044aa12dc9e2fb2c6ea3dcf" translate="yes" xml:space="preserve">
          <source>and:</source>
          <target state="translated">and:</target>
        </trans-unit>
        <trans-unit id="4e28bbc16fb90604cad5f10f3d0a312c7f9d6bd4" translate="yes" xml:space="preserve">
          <source>app/static/app/formset_handlers.js</source>
          <target state="translated">app/static/app/formset_handlers.js</target>
        </trans-unit>
        <trans-unit id="836ea883e2888f94ff10c5060664f0069db27b99" translate="yes" xml:space="preserve">
          <source>app/static/app/unregistered_handlers.js</source>
          <target state="translated">app/static/app/unregistered_handlers.js</target>
        </trans-unit>
        <trans-unit id="186d8cfc16ac0f964ae62660f1bc2aea83ccb5b9" translate="yes" xml:space="preserve">
          <source>apps.AppConfig</source>
          <target state="translated">apps.AppConfig</target>
        </trans-unit>
        <trans-unit id="7b0ea27b3ea2050f9a693a4c47c5d9c2b18b75e1" translate="yes" xml:space="preserve">
          <source>apps.AppConfig.get_model()</source>
          <target state="translated">apps.AppConfig.get_model()</target>
        </trans-unit>
        <trans-unit id="21aed2e32d7d541ba4dbebc9ec56110c07d52989" translate="yes" xml:space="preserve">
          <source>apps.AppConfig.get_models()</source>
          <target state="translated">apps.AppConfig.get_models()</target>
        </trans-unit>
        <trans-unit id="4cc0bc30f4e3e35d0445176c706f34ccce008612" translate="yes" xml:space="preserve">
          <source>apps.AppConfig.label</source>
          <target state="translated">apps.AppConfig.label</target>
        </trans-unit>
        <trans-unit id="3e4deb170e49b59688d90475d096b5f844a72627" translate="yes" xml:space="preserve">
          <source>apps.AppConfig.models_module</source>
          <target state="translated">apps.AppConfig.models_module</target>
        </trans-unit>
        <trans-unit id="207affb6bd5b50ec98136878c93646ad68d01d05" translate="yes" xml:space="preserve">
          <source>apps.AppConfig.module</source>
          <target state="translated">apps.AppConfig.module</target>
        </trans-unit>
        <trans-unit id="b93bb2f4d2554d9b6555fd547a4c0dda5198b477" translate="yes" xml:space="preserve">
          <source>apps.AppConfig.name</source>
          <target state="translated">apps.AppConfig.name</target>
        </trans-unit>
        <trans-unit id="81b0d4e47bfbd3ebe16370a451f2341553cad22e" translate="yes" xml:space="preserve">
          <source>apps.AppConfig.path</source>
          <target state="translated">apps.AppConfig.path</target>
        </trans-unit>
        <trans-unit id="0bbf1341650a0a4bbabd0fcd19ba6284c2bcb4c2" translate="yes" xml:space="preserve">
          <source>apps.AppConfig.ready()</source>
          <target state="translated">apps.AppConfig.ready()</target>
        </trans-unit>
        <trans-unit id="a6892233cbc8002456e004651942aa05dae10f08" translate="yes" xml:space="preserve">
          <source>apps.AppConfig.verbose_name</source>
          <target state="translated">apps.AppConfig.verbose_name</target>
        </trans-unit>
        <trans-unit id="5c3b899f89537e717d54cf310f47eba56c28b426" translate="yes" xml:space="preserve">
          <source>apps.apps</source>
          <target state="translated">apps.apps</target>
        </trans-unit>
        <trans-unit id="9b1f4d3a9907f81fadd2156645aa71f51c0b2903" translate="yes" xml:space="preserve">
          <source>apps.apps.get_app_config()</source>
          <target state="translated">apps.apps.get_app_config()</target>
        </trans-unit>
        <trans-unit id="70b32b72ab36d0eb4654349707d9b2a2de2d7209" translate="yes" xml:space="preserve">
          <source>apps.apps.get_app_configs()</source>
          <target state="translated">apps.apps.get_app_configs()</target>
        </trans-unit>
        <trans-unit id="9a9dbd572ac775808c6643983ab054cb1e6073e6" translate="yes" xml:space="preserve">
          <source>apps.apps.get_model()</source>
          <target state="translated">apps.apps.get_model()</target>
        </trans-unit>
        <trans-unit id="d13cc16aecfa9d0a7dca13ca17a21b1b76089342" translate="yes" xml:space="preserve">
          <source>apps.apps.is_installed()</source>
          <target state="translated">apps.apps.is_installed()</target>
        </trans-unit>
        <trans-unit id="4903928a1d1203e0b3a3688b82966db690437580" translate="yes" xml:space="preserve">
          <source>apps.apps.ready</source>
          <target state="translated">apps.apps.ready</target>
        </trans-unit>
        <trans-unit id="4cfb615092d10bb0cd9fb588a118b954b778d512" translate="yes" xml:space="preserve">
          <source>are equivalent to:</source>
          <target state="translated">相当于:</target>
        </trans-unit>
        <trans-unit id="e92e297a095229e3f96eb7b8a2c0f594650ed356" translate="yes" xml:space="preserve">
          <source>are equivalent.</source>
          <target state="translated">是等价的。</target>
        </trans-unit>
        <trans-unit id="c36fd5bc6628b52732ed5aa352d9a5a6a82f4f1d" translate="yes" xml:space="preserve">
          <source>are expected to be different in each environment;</source>
          <target state="translated">预计在每个环境中都会有所不同。</target>
        </trans-unit>
        <trans-unit id="32fd221d4cfd9b92a120a26ee8117ebf1fe736a2" translate="yes" xml:space="preserve">
          <source>auth.authenticate()</source>
          <target state="translated">auth.authenticate()</target>
        </trans-unit>
        <trans-unit id="bafcf7cb4a32677970322bb7fa9cb6cd905d14b0" translate="yes" xml:space="preserve">
          <source>auth.backends.AllowAllUsersModelBackend</source>
          <target state="translated">auth.backends.AllowAllUsersModelBackend</target>
        </trans-unit>
        <trans-unit id="116f071074723caddb5795a3147c9d9659735d7e" translate="yes" xml:space="preserve">
          <source>auth.backends.AllowAllUsersRemoteUserBackend</source>
          <target state="translated">auth.backends.AllowAllUsersRemoteUserBackend</target>
        </trans-unit>
        <trans-unit id="92ce89aac198afe5025c52e23b1be8f37ea9870b" translate="yes" xml:space="preserve">
          <source>auth.backends.BaseBackend</source>
          <target state="translated">auth.backends.BaseBackend</target>
        </trans-unit>
        <trans-unit id="213a969e4b5f6f8c00e338c61e939a95df72a9e0" translate="yes" xml:space="preserve">
          <source>auth.backends.BaseBackend.get_all_permissions()</source>
          <target state="translated">auth.backends.BaseBackend.get_all_permissions()</target>
        </trans-unit>
        <trans-unit id="111d6b3e82026e7a88a279909970cf10fb7104e4" translate="yes" xml:space="preserve">
          <source>auth.backends.BaseBackend.get_group_permissions()</source>
          <target state="translated">auth.backends.BaseBackend.get_group_permissions()</target>
        </trans-unit>
        <trans-unit id="f99687ed6eab1a584e02f4c9990cdd7e4cd3f0a0" translate="yes" xml:space="preserve">
          <source>auth.backends.BaseBackend.get_user_permissions()</source>
          <target state="translated">auth.backends.BaseBackend.get_user_permissions()</target>
        </trans-unit>
        <trans-unit id="15fd70d13ab6557646dcbef12d8a256f4c935ef9" translate="yes" xml:space="preserve">
          <source>auth.backends.BaseBackend.has_perm()</source>
          <target state="translated">auth.backends.BaseBackend.has_perm()</target>
        </trans-unit>
        <trans-unit id="e9cb627858bf708ad6fbdabefaae1242280c5118" translate="yes" xml:space="preserve">
          <source>auth.backends.ModelBackend</source>
          <target state="translated">auth.backends.ModelBackend</target>
        </trans-unit>
        <trans-unit id="fd2c9e6c35d72cb4c2d2b210d8f5732db1827d40" translate="yes" xml:space="preserve">
          <source>auth.backends.ModelBackend.authenticate()</source>
          <target state="translated">auth.backends.ModelBackend.authenticate()</target>
        </trans-unit>
        <trans-unit id="b4bb4421d1d599af7cd9b673b430670746e74557" translate="yes" xml:space="preserve">
          <source>auth.backends.ModelBackend.get_all_permissions()</source>
          <target state="translated">auth.backends.ModelBackend.get_all_permissions()</target>
        </trans-unit>
        <trans-unit id="f779fb4641fafc731f65aa1195b57d8f472b703a" translate="yes" xml:space="preserve">
          <source>auth.backends.ModelBackend.get_group_permissions()</source>
          <target state="translated">auth.backends.ModelBackend.get_group_permissions()</target>
        </trans-unit>
        <trans-unit id="a01cae58ce4e35fb85f5fcb54f0942050b1fc8fb" translate="yes" xml:space="preserve">
          <source>auth.backends.ModelBackend.get_user_permissions()</source>
          <target state="translated">auth.backends.ModelBackend.get_user_permissions()</target>
        </trans-unit>
        <trans-unit id="0a739e54262dfa892930c49e5b5219b9d3973dc5" translate="yes" xml:space="preserve">
          <source>auth.backends.ModelBackend.has_module_perms()</source>
          <target state="translated">auth.backends.ModelBackend.has_module_perms()</target>
        </trans-unit>
        <trans-unit id="eeedf897aad69d9fd0ad1034fb09eb2a8adfcebf" translate="yes" xml:space="preserve">
          <source>auth.backends.ModelBackend.has_perm()</source>
          <target state="translated">auth.backends.ModelBackend.has_perm()</target>
        </trans-unit>
        <trans-unit id="6057a7a8a9934f9e979e100359da11322bbc3c7b" translate="yes" xml:space="preserve">
          <source>auth.backends.ModelBackend.user_can_authenticate()</source>
          <target state="translated">auth.backends.ModelBackend.user_can_authenticate()</target>
        </trans-unit>
        <trans-unit id="646913615b963687335b36daf9c241baef6e8425" translate="yes" xml:space="preserve">
          <source>auth.backends.ModelBackend.with_perm()</source>
          <target state="translated">auth.backends.ModelBackend.with_perm()</target>
        </trans-unit>
        <trans-unit id="b6c345eacc38926221671c4c1c2d7b6c5693bb4f" translate="yes" xml:space="preserve">
          <source>auth.backends.RemoteUserBackend</source>
          <target state="translated">auth.backends.RemoteUserBackend</target>
        </trans-unit>
        <trans-unit id="900ff236714293728554cb5e1f4224d7bb3be445" translate="yes" xml:space="preserve">
          <source>auth.backends.RemoteUserBackend.authenticate()</source>
          <target state="translated">auth.backends.RemoteUserBackend.authenticate()</target>
        </trans-unit>
        <trans-unit id="e90406e8e34907e5513dad88ed2a217fb0d9d0fe" translate="yes" xml:space="preserve">
          <source>auth.backends.RemoteUserBackend.clean_username()</source>
          <target state="translated">auth.backends.RemoteUserBackend.clean_username()</target>
        </trans-unit>
        <trans-unit id="d1ffa026a2a6b7b29b3b4999073b330a61255fc9" translate="yes" xml:space="preserve">
          <source>auth.backends.RemoteUserBackend.configure_user()</source>
          <target state="translated">auth.backends.RemoteUserBackend.configure_user()</target>
        </trans-unit>
        <trans-unit id="6cd7e5c7c4030e0a0bb5646da9bc4cce77278e5a" translate="yes" xml:space="preserve">
          <source>auth.backends.RemoteUserBackend.create_unknown_user</source>
          <target state="translated">auth.backends.RemoteUserBackend.create_unknown_user</target>
        </trans-unit>
        <trans-unit id="f025d91ff98d58c95c655464571aa7cba15091d7" translate="yes" xml:space="preserve">
          <source>auth.backends.RemoteUserBackend.user_can_authenticate()</source>
          <target state="translated">auth.backends.RemoteUserBackend.user_can_authenticate()</target>
        </trans-unit>
        <trans-unit id="761b62bb3de420c394349755299091e464185a61" translate="yes" xml:space="preserve">
          <source>auth.context_processors.auth()</source>
          <target state="translated">auth.context_processors.auth()</target>
        </trans-unit>
        <trans-unit id="af5f7bcf2dedbe59cbf1804b062e1f0b56c1a487" translate="yes" xml:space="preserve">
          <source>auth.decorators.login_required()</source>
          <target state="translated">auth.decorators.login_required()</target>
        </trans-unit>
        <trans-unit id="36fde936b1e008ee030c4106d47ed8e197875338" translate="yes" xml:space="preserve">
          <source>auth.decorators.permission_required()</source>
          <target state="translated">auth.decorators.permission_required()</target>
        </trans-unit>
        <trans-unit id="2872bbbe51cc93f1389ee65bda05c5f6fb92f19c" translate="yes" xml:space="preserve">
          <source>auth.decorators.user_passes_test()</source>
          <target state="translated">auth.decorators.user_passes_test()</target>
        </trans-unit>
        <trans-unit id="abfcfcc48f05e484e25ee3460473b00aac51eed8" translate="yes" xml:space="preserve">
          <source>auth.forms.AdminPasswordChangeForm</source>
          <target state="translated">auth.forms.AdminPasswordChangeForm</target>
        </trans-unit>
        <trans-unit id="71e277409e21d1924d7ec2b05efab251d73bfcc5" translate="yes" xml:space="preserve">
          <source>auth.forms.AuthenticationForm</source>
          <target state="translated">auth.forms.AuthenticationForm</target>
        </trans-unit>
        <trans-unit id="42cfbdf85026b817e83b7eee765a98bcd7e03449" translate="yes" xml:space="preserve">
          <source>auth.forms.AuthenticationForm.confirm_login_allowed()</source>
          <target state="translated">auth.forms.AuthenticationForm.confirm_login_allowed()</target>
        </trans-unit>
        <trans-unit id="743358f32fb1252fb17898287d6f8e7b702ce711" translate="yes" xml:space="preserve">
          <source>auth.forms.PasswordChangeForm</source>
          <target state="translated">auth.forms.PasswordChangeForm</target>
        </trans-unit>
        <trans-unit id="415811f56845c56c438e7e31d55584324eb7b490" translate="yes" xml:space="preserve">
          <source>auth.forms.PasswordResetForm</source>
          <target state="translated">auth.forms.PasswordResetForm</target>
        </trans-unit>
        <trans-unit id="f16faabdff8cc2a42c98a8baef1c5cb8b4d26c4c" translate="yes" xml:space="preserve">
          <source>auth.forms.PasswordResetForm.send_mail()</source>
          <target state="translated">auth.forms.PasswordResetForm.send_mail()</target>
        </trans-unit>
        <trans-unit id="2405b2ff87ba0d7ae551e80b85e639dd5d37fc45" translate="yes" xml:space="preserve">
          <source>auth.forms.SetPasswordForm</source>
          <target state="translated">auth.forms.SetPasswordForm</target>
        </trans-unit>
        <trans-unit id="0eb58a46756710383c74b1936bd287cdd3c4bbd6" translate="yes" xml:space="preserve">
          <source>auth.forms.UserChangeForm</source>
          <target state="translated">auth.forms.UserChangeForm</target>
        </trans-unit>
        <trans-unit id="83232b1b3fa0d90c6c7b20b86d98b3f93a6632fa" translate="yes" xml:space="preserve">
          <source>auth.forms.UserCreationForm</source>
          <target state="translated">auth.forms.UserCreationForm</target>
        </trans-unit>
        <trans-unit id="860a014fd5e983e5ff94ab97b4aa90ddb4d198a5" translate="yes" xml:space="preserve">
          <source>auth.get_user()</source>
          <target state="translated">auth.get_user()</target>
        </trans-unit>
        <trans-unit id="e92c67c0170fb8a8f999e56fabad3c3c70ff7b67" translate="yes" xml:space="preserve">
          <source>auth.get_user_model()</source>
          <target state="translated">auth.get_user_model()</target>
        </trans-unit>
        <trans-unit id="a32a9832b63b21873478bc7de520ce3715edf975" translate="yes" xml:space="preserve">
          <source>auth.hashers.check_password()</source>
          <target state="translated">auth.hashers.check_password()</target>
        </trans-unit>
        <trans-unit id="9308f2a7dda27ca105b3ec21cd52834d580ca5a5" translate="yes" xml:space="preserve">
          <source>auth.hashers.is_password_usable()</source>
          <target state="translated">auth.hashers.is_password_usable()</target>
        </trans-unit>
        <trans-unit id="9df32704fe31d24a07dc63f64626498111494727" translate="yes" xml:space="preserve">
          <source>auth.hashers.make_password()</source>
          <target state="translated">auth.hashers.make_password()</target>
        </trans-unit>
        <trans-unit id="06219a8ba67f122371555ad424c66682ee2d8768" translate="yes" xml:space="preserve">
          <source>auth.is_active</source>
          <target state="translated">auth.is_active</target>
        </trans-unit>
        <trans-unit id="6443035268e2fa640d57becfafe89bc431373331" translate="yes" xml:space="preserve">
          <source>auth.is_staff</source>
          <target state="translated">auth.is_staff</target>
        </trans-unit>
        <trans-unit id="f9595017a0555f9ab5c4b44514793c961b484d6d" translate="yes" xml:space="preserve">
          <source>auth.login()</source>
          <target state="translated">auth.login()</target>
        </trans-unit>
        <trans-unit id="c6b5f83ed23d8a03aaf48ec962f7af32ba52ec42" translate="yes" xml:space="preserve">
          <source>auth.logout()</source>
          <target state="translated">auth.logout()</target>
        </trans-unit>
        <trans-unit id="8dad7e9bc7a0f75c772d6ca811f05f1034047011" translate="yes" xml:space="preserve">
          <source>auth.middleware.AuthenticationMiddleware</source>
          <target state="translated">auth.middleware.AuthenticationMiddleware</target>
        </trans-unit>
        <trans-unit id="5af2e5a2eeaed2d4ac49ba2525019bf52e2b685d" translate="yes" xml:space="preserve">
          <source>auth.middleware.PersistentRemoteUserMiddleware</source>
          <target state="translated">auth.middleware.PersistentRemoteUserMiddleware</target>
        </trans-unit>
        <trans-unit id="4024ce4edd862517157435efd75bc074adabe2b4" translate="yes" xml:space="preserve">
          <source>auth.middleware.RemoteUserMiddleware</source>
          <target state="translated">auth.middleware.RemoteUserMiddleware</target>
        </trans-unit>
        <trans-unit id="818914a3b7216a6678ca42f5c16a21a2c7065bc2" translate="yes" xml:space="preserve">
          <source>auth.mixins.AccessMixin</source>
          <target state="translated">auth.mixins.AccessMixin</target>
        </trans-unit>
        <trans-unit id="d5ba2063d1cde5ea80b4554348485bd665f8f5f4" translate="yes" xml:space="preserve">
          <source>auth.mixins.AccessMixin.get_login_url()</source>
          <target state="translated">auth.mixins.AccessMixin.get_login_url()</target>
        </trans-unit>
        <trans-unit id="66caa530f7cadfe08607ceb176546ba6908654e6" translate="yes" xml:space="preserve">
          <source>auth.mixins.AccessMixin.get_permission_denied_message()</source>
          <target state="translated">auth.mixins.AccessMixin.get_permission_denied_message()</target>
        </trans-unit>
        <trans-unit id="59035258263e7469d145382d52e6dac2c2c1493a" translate="yes" xml:space="preserve">
          <source>auth.mixins.AccessMixin.get_redirect_field_name()</source>
          <target state="translated">auth.mixins.AccessMixin.get_redirect_field_name()</target>
        </trans-unit>
        <trans-unit id="73dc2a6175a5f85fda8f6023bbe35bc76c1dfb55" translate="yes" xml:space="preserve">
          <source>auth.mixins.AccessMixin.handle_no_permission()</source>
          <target state="translated">auth.mixins.AccessMixin.handle_no_permission()</target>
        </trans-unit>
        <trans-unit id="9b40594fc3c1ee340b704ec050435de9a97fe922" translate="yes" xml:space="preserve">
          <source>auth.mixins.AccessMixin.login_url</source>
          <target state="translated">auth.mixins.AccessMixin.login_url</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
