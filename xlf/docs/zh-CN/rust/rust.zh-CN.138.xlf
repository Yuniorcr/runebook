<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="08cd4d7276034ce4fb54ef404f77f04a4bf925e3" translate="yes" xml:space="preserve">
          <source>Listing 14-3: An &lt;code&gt;art&lt;/code&gt; library with items organized into &lt;code&gt;kinds&lt;/code&gt; and &lt;code&gt;utils&lt;/code&gt; modules</source>
          <target state="translated">代码清单14-3：一个 &lt;code&gt;art&lt;/code&gt; 库，其中的项目按 &lt;code&gt;kinds&lt;/code&gt; 和 &lt;code&gt;utils&lt;/code&gt; 模块进行组织</target>
        </trans-unit>
        <trans-unit id="18652571126ad8386cecac32ff97a3b38f9bc500" translate="yes" xml:space="preserve">
          <source>Listing 14-4: A crate using the &lt;code&gt;art&lt;/code&gt; crate&amp;rsquo;s items with its internal structure exported</source>
          <target state="translated">清单14-4：一个使用 &lt;code&gt;art&lt;/code&gt; 箱中的物品及其内部结构导出的箱子</target>
        </trans-unit>
        <trans-unit id="6a570b6b6186a46bce3ac4aacbabe088d013d0f3" translate="yes" xml:space="preserve">
          <source>Listing 14-5: Adding &lt;code&gt;pub use&lt;/code&gt; statements to re-export items</source>
          <target state="translated">清单14-5：添加 &lt;code&gt;pub use&lt;/code&gt; 语句以重新导出项目</target>
        </trans-unit>
        <trans-unit id="d6312f93c5be154192161b883eed38925109f013" translate="yes" xml:space="preserve">
          <source>Listing 14-6: A program using the re-exported items from the &lt;code&gt;art&lt;/code&gt; crate</source>
          <target state="translated">清单14-6：一个程序使用 &lt;code&gt;art&lt;/code&gt; 包装箱中的重新导出的物品</target>
        </trans-unit>
        <trans-unit id="0fb0cc53aeca164991b29eb0d8ab6b1af71d3326" translate="yes" xml:space="preserve">
          <source>Listing 14-7: Using the &lt;code&gt;add-one&lt;/code&gt; library crate from the &lt;code&gt;adder&lt;/code&gt; crate</source>
          <target state="translated">清单14-7：使用 &lt;code&gt;adder&lt;/code&gt; 板条箱中的 &lt;code&gt;add-one&lt;/code&gt; 库板条箱</target>
        </trans-unit>
        <trans-unit id="d17fa866aef39e9d7d0c17f7358038f314c318c1" translate="yes" xml:space="preserve">
          <source>Listing 15-1 shows how to use a box to store an &lt;code&gt;i32&lt;/code&gt; value on the heap:</source>
          <target state="translated">清单15-1显示了如何使用一个盒子在堆上存储 &lt;code&gt;i32&lt;/code&gt; 值：</target>
        </trans-unit>
        <trans-unit id="0d4242924fb6c785f162a09bc5d2fe1ca847e116" translate="yes" xml:space="preserve">
          <source>Listing 15-10: Implementing &lt;code&gt;Deref&lt;/code&gt; on &lt;code&gt;MyBox&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">清单15-10：在 &lt;code&gt;MyBox&amp;lt;T&amp;gt;&lt;/code&gt; 上实现 &lt;code&gt;Deref&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a37d11ccc3798c8adeb9d5bd2484dc552c633d9" translate="yes" xml:space="preserve">
          <source>Listing 15-11: A &lt;code&gt;hello&lt;/code&gt; function that has the parameter &lt;code&gt;name&lt;/code&gt; of type &lt;code&gt;&amp;amp;str&lt;/code&gt;</source>
          <target state="translated">清单15-11：一个 &lt;code&gt;hello&lt;/code&gt; 函数，其参数 &lt;code&gt;name&lt;/code&gt; 为 &lt;code&gt;&amp;amp;str&lt;/code&gt; 类型</target>
        </trans-unit>
        <trans-unit id="5568aa245c3ca44a1e76ee65f95d3578696c3468" translate="yes" xml:space="preserve">
          <source>Listing 15-12: Calling &lt;code&gt;hello&lt;/code&gt; with a reference to a &lt;code&gt;MyBox&amp;lt;String&amp;gt;&lt;/code&gt; value, which works because of deref coercion</source>
          <target state="translated">清单15-12：调用带有 &lt;code&gt;MyBox&amp;lt;String&amp;gt;&lt;/code&gt; 值的引用的 &lt;code&gt;hello&lt;/code&gt; ，由于deref强制，该值起作用</target>
        </trans-unit>
        <trans-unit id="6c024965fb7532f846db55d2fce103e6ef71bc94" translate="yes" xml:space="preserve">
          <source>Listing 15-13: The code we would have to write if Rust didn&amp;rsquo;t have deref coercion</source>
          <target state="translated">清单15-13：如果Rust没有deref强制，我们将必须编写的代码</target>
        </trans-unit>
        <trans-unit id="adff6d0cc3f4fa1a4ed3e66ddcf814db60a02d4f" translate="yes" xml:space="preserve">
          <source>Listing 15-14 shows a &lt;code&gt;CustomSmartPointer&lt;/code&gt; struct whose only custom functionality is that it will print &lt;code&gt;Dropping CustomSmartPointer!&lt;/code&gt; when the instance goes out of scope. This example demonstrates when Rust runs the &lt;code&gt;drop&lt;/code&gt; function.</source>
          <target state="translated">清单15-14显示了一个 &lt;code&gt;CustomSmartPointer&lt;/code&gt; 结构，其唯一的自定义功能是它将打印出 &lt;code&gt;Dropping CustomSmartPointer!&lt;/code&gt; 当实例超出范围时。此示例演示Rust运行何时 &lt;code&gt;drop&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="52d47c448cdc64e5a91e1c4aca16ea47ef0beae3" translate="yes" xml:space="preserve">
          <source>Listing 15-14: A &lt;code&gt;CustomSmartPointer&lt;/code&gt; struct that implements the &lt;code&gt;Drop&lt;/code&gt; trait where we would put our cleanup code</source>
          <target state="translated">清单15-14：一个实现了 &lt;code&gt;Drop&lt;/code&gt; 特性的 &lt;code&gt;CustomSmartPointer&lt;/code&gt; 结构，该特性将我们放置清理代码的位置</target>
        </trans-unit>
        <trans-unit id="ec4aa44fb09e06c7ceb13b695dde967f5f1ef075" translate="yes" xml:space="preserve">
          <source>Listing 15-15: Attempting to call the &lt;code&gt;drop&lt;/code&gt; method from the &lt;code&gt;Drop&lt;/code&gt; trait manually to clean up early</source>
          <target state="translated">清单15-15：尝试从 &lt;code&gt;Drop&lt;/code&gt; trait手动调用 &lt;code&gt;drop&lt;/code&gt; 方法来提早清理</target>
        </trans-unit>
        <trans-unit id="2f40ac96f3ccd291a6c6fe1c9540aec6b3f9c290" translate="yes" xml:space="preserve">
          <source>Listing 15-16: Calling &lt;code&gt;std::mem::drop&lt;/code&gt; to explicitly drop a value before it goes out of scope</source>
          <target state="translated">清单15-16：调用 &lt;code&gt;std::mem::drop&lt;/code&gt; 可以在超出范围之前显式删除值</target>
        </trans-unit>
        <trans-unit id="5329453e171ad9ee51b2ac0e7343fd6536e1d7d4" translate="yes" xml:space="preserve">
          <source>Listing 15-17: Demonstrating we&amp;rsquo;re not allowed to have two lists using &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; that try to share ownership of a third list</source>
          <target state="translated">清单15-17：演示我们不允许使用 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 拥有两个试图共享第三个列表的所有权的列表</target>
        </trans-unit>
        <trans-unit id="c433ad64df45e2defd53333d59e3199258515577" translate="yes" xml:space="preserve">
          <source>Listing 15-18: A definition of &lt;code&gt;List&lt;/code&gt; that uses &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">清单15-18：使用 &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 的 &lt;code&gt;List&lt;/code&gt; 的定义</target>
        </trans-unit>
        <trans-unit id="d261e75633f42f6dc65090559e1101742762de87" translate="yes" xml:space="preserve">
          <source>Listing 15-19: Printing the reference count</source>
          <target state="translated">清单 15-19:打印参考数</target>
        </trans-unit>
        <trans-unit id="93277309dd71d80340ae8cdbc4d8dcde0239642c" translate="yes" xml:space="preserve">
          <source>Listing 15-1: Storing an &lt;code&gt;i32&lt;/code&gt; value on the heap using a box</source>
          <target state="translated">清单15-1：使用一个盒子在堆上存储一个 &lt;code&gt;i32&lt;/code&gt; 值</target>
        </trans-unit>
        <trans-unit id="97eb3e5299e49169210e147956f4d2e6505373a4" translate="yes" xml:space="preserve">
          <source>Listing 15-2 contains an enum definition for a cons list. Note that this code won&amp;rsquo;t compile yet because the &lt;code&gt;List&lt;/code&gt; type doesn&amp;rsquo;t have a known size, which we&amp;rsquo;ll demonstrate.</source>
          <target state="translated">清单15-2包含一个cons列表的枚举定义。请注意，由于 &lt;code&gt;List&lt;/code&gt; 类型的大小未知，因此该代码尚未编译，我们将对其进行演示。</target>
        </trans-unit>
        <trans-unit id="eb67b3e6a05499f9fa0c058da14b25fa79ce9ca2" translate="yes" xml:space="preserve">
          <source>Listing 15-20: A library to keep track of how close a value is to a maximum value and warn when the value is at certain levels</source>
          <target state="translated">清单15-20。一个库,用来跟踪一个值与最大值的接近程度,并在该值达到一定水平时发出警告。</target>
        </trans-unit>
        <trans-unit id="141fe822d1303f26d8ebe1f7c46b8da90b350088" translate="yes" xml:space="preserve">
          <source>Listing 15-21: An attempt to implement a &lt;code&gt;MockMessenger&lt;/code&gt; that isn&amp;rsquo;t allowed by the borrow checker</source>
          <target state="translated">代码清单15-21：尝试实现借阅检查器不允许的 &lt;code&gt;MockMessenger&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dfe14058820e9ed9b4226d26f07c498f5696cf00" translate="yes" xml:space="preserve">
          <source>Listing 15-22: Using &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; to mutate an inner value while the outer value is considered immutable</source>
          <target state="translated">清单15-22：使用 &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; 改变内部值，而外部值被认为是不可变的</target>
        </trans-unit>
        <trans-unit id="266fca035b941bba83ca32885d5d4117eab995c6" translate="yes" xml:space="preserve">
          <source>Listing 15-23: Creating two mutable references in the same scope to see that &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; will panic</source>
          <target state="translated">清单15-23：在同一作用域中创建两个可变引用，以查看 &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; 会死机</target>
        </trans-unit>
        <trans-unit id="d6cf153a700dd2365ffdecaf10f183c9db90ffbd" translate="yes" xml:space="preserve">
          <source>Listing 15-24: Using &lt;code&gt;Rc&amp;lt;RefCell&amp;lt;i32&amp;gt;&amp;gt;&lt;/code&gt; to create a &lt;code&gt;List&lt;/code&gt; that we can mutate</source>
          <target state="translated">清单15-24：使用 &lt;code&gt;Rc&amp;lt;RefCell&amp;lt;i32&amp;gt;&amp;gt;&lt;/code&gt; 创建一个我们可以变异的 &lt;code&gt;List&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6af6872cc0a942bf5139e47e216845b27497ede4" translate="yes" xml:space="preserve">
          <source>Listing 15-25: A cons list definition that holds a &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; so we can modify what a &lt;code&gt;Cons&lt;/code&gt; variant is referring to</source>
          <target state="translated">清单15-25：一个包含 &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; cons列表定义，因此我们可以修改 &lt;code&gt;Cons&lt;/code&gt; 变量所指的内容</target>
        </trans-unit>
        <trans-unit id="3a094be147b7c64eca30f8e42d1612142f388e50" translate="yes" xml:space="preserve">
          <source>Listing 15-26: Creating a reference cycle of two &lt;code&gt;List&lt;/code&gt; values pointing to each other</source>
          <target state="translated">清单15-26：创建两个互相指向的 &lt;code&gt;List&lt;/code&gt; 值的参考循环</target>
        </trans-unit>
        <trans-unit id="2b292b9e3cc1d351a84971007501fea9cfdf3e8b" translate="yes" xml:space="preserve">
          <source>Listing 15-27: Creating a &lt;code&gt;leaf&lt;/code&gt; node with no children and a &lt;code&gt;branch&lt;/code&gt; node with &lt;code&gt;leaf&lt;/code&gt; as one of its children</source>
          <target state="translated">清单15-27：创建一个没有子节点的 &lt;code&gt;leaf&lt;/code&gt; 节点和一个以 &lt;code&gt;leaf&lt;/code&gt; 作为其子节点之一的 &lt;code&gt;branch&lt;/code&gt; 节点</target>
        </trans-unit>
        <trans-unit id="4850f36c959e35928aff734682b70b668ef71d6d" translate="yes" xml:space="preserve">
          <source>Listing 15-28: A &lt;code&gt;leaf&lt;/code&gt; node with a weak reference to its parent node &lt;code&gt;branch&lt;/code&gt;</source>
          <target state="translated">清单15-28：对父节点 &lt;code&gt;branch&lt;/code&gt; 具有弱引用的 &lt;code&gt;leaf&lt;/code&gt; 节点</target>
        </trans-unit>
        <trans-unit id="25aad53c5c945f94794c65dc3226cacbda5a3baf" translate="yes" xml:space="preserve">
          <source>Listing 15-29: Creating &lt;code&gt;branch&lt;/code&gt; in an inner scope and examining strong and weak reference counts</source>
          <target state="translated">清单15-29：在内部范围内创建 &lt;code&gt;branch&lt;/code&gt; 并检查强引用计数和弱引用计数</target>
        </trans-unit>
        <trans-unit id="c6497eba51055bb620a815c36e345353e4a2ed22" translate="yes" xml:space="preserve">
          <source>Listing 15-2: The first attempt at defining an enum to represent a cons list data structure of &lt;code&gt;i32&lt;/code&gt; values</source>
          <target state="translated">清单15-2：第一次尝试定义一个代表 &lt;code&gt;i32&lt;/code&gt; 值的cons列表数据结构的枚举</target>
        </trans-unit>
        <trans-unit id="18a28eccb4368989461114ac735559ffeda1ae5d" translate="yes" xml:space="preserve">
          <source>Listing 15-3: Using the &lt;code&gt;List&lt;/code&gt; enum to store the list &lt;code&gt;1, 2, 3&lt;/code&gt;</source>
          <target state="translated">清单15-3：使用 &lt;code&gt;List&lt;/code&gt; 枚举存储列表 &lt;code&gt;1, 2, 3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8c9e2eacb25fd51c5f9aa6cab37ed11e4904210" translate="yes" xml:space="preserve">
          <source>Listing 15-4: The error we get when attempting to define a recursive enum</source>
          <target state="translated">清单15-4:当我们试图定义一个递归枚举时得到的错误信息</target>
        </trans-unit>
        <trans-unit id="9b95eec03025f86a4b7c65652e8650c21c75dcf1" translate="yes" xml:space="preserve">
          <source>Listing 15-5: Definition of &lt;code&gt;List&lt;/code&gt; that uses &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; in order to have a known size</source>
          <target state="translated">清单15-5：使用 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 以便具有已知大小的 &lt;code&gt;List&lt;/code&gt; 的定义</target>
        </trans-unit>
        <trans-unit id="db518804f21a5ed0346fef393226cf0ad66acbbb" translate="yes" xml:space="preserve">
          <source>Listing 15-6: Using the dereference operator to follow a reference to an &lt;code&gt;i32&lt;/code&gt; value</source>
          <target state="translated">清单15-6：使用解引用运算符跟随对 &lt;code&gt;i32&lt;/code&gt; 值的引用</target>
        </trans-unit>
        <trans-unit id="8c02623422daee0586c70cf6a359e0861d9f1b06" translate="yes" xml:space="preserve">
          <source>Listing 15-7: Using the dereference operator on a &lt;code&gt;Box&amp;lt;i32&amp;gt;&lt;/code&gt;</source>
          <target state="translated">清单15-7：在 &lt;code&gt;Box&amp;lt;i32&amp;gt;&lt;/code&gt; 上使用解引用运算符</target>
        </trans-unit>
        <trans-unit id="fa36d540c04da6649b5d6b1c22bcef700a30ebdf" translate="yes" xml:space="preserve">
          <source>Listing 15-8: Defining a &lt;code&gt;MyBox&amp;lt;T&amp;gt;&lt;/code&gt; type</source>
          <target state="translated">清单15-8：定义 &lt;code&gt;MyBox&amp;lt;T&amp;gt;&lt;/code&gt; 类型</target>
        </trans-unit>
        <trans-unit id="d36831d626698b1a2a5afad342468e8d5abc296e" translate="yes" xml:space="preserve">
          <source>Listing 15-9: Attempting to use &lt;code&gt;MyBox&amp;lt;T&amp;gt;&lt;/code&gt; in the same way we used references and &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">清单15-9：尝试以与使用引用和 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 相同的方式使用 &lt;code&gt;MyBox&amp;lt;T&amp;gt;&lt;/code&gt; &amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d143c5026e771bdcccc60743806891ca08f66e55" translate="yes" xml:space="preserve">
          <source>Listing 16-10: Sending multiple messages and pausing between each</source>
          <target state="translated">清单 16-10:发送多条信息并在每条信息之间暂停</target>
        </trans-unit>
        <trans-unit id="3eef54e3734b51cf6e6ecfea094438d79e4e019b" translate="yes" xml:space="preserve">
          <source>Listing 16-11: Sending multiple messages from multiple producers</source>
          <target state="translated">清单16-11:从多个生产者发送多条信息。</target>
        </trans-unit>
        <trans-unit id="19b196c633c201dfd93feaef8a0419886e1e93ac" translate="yes" xml:space="preserve">
          <source>Listing 16-12: Exploring the API of &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; in a single-threaded context for simplicity</source>
          <target state="translated">清单16-12：为简单起见，在单线程上下文中探索 &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; 的API</target>
        </trans-unit>
        <trans-unit id="d56dbf3e369ad2af3540bb140a7f2f160cce5bd9" translate="yes" xml:space="preserve">
          <source>Listing 16-13: Ten threads each increment a counter guarded by a &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">清单16-13：十个线程各增加一个由 &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; 保护的计数器</target>
        </trans-unit>
        <trans-unit id="e59ce5d5fc1d8f6572bb99a6381037738df73f26" translate="yes" xml:space="preserve">
          <source>Listing 16-14: Attempting to use &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; to allow multiple threads to own the &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">清单16-14：尝试使用 &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 允许多个线程拥有 &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e895f072015f06fead0b93e19086e73b96613c3" translate="yes" xml:space="preserve">
          <source>Listing 16-15: Using an &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; to wrap the &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; to be able to share ownership across multiple threads</source>
          <target state="translated">清单16-15：使用 &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; 包装 &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; 以便能够在多个线程之间共享所有权</target>
        </trans-unit>
        <trans-unit id="57b4aee93626458741b433d91d9361d5dad177bd" translate="yes" xml:space="preserve">
          <source>Listing 16-1: Creating a new thread to print one thing while the main thread prints something else</source>
          <target state="translated">清单16-1:创建一个新的线程来打印一件事,而主线程则打印另一件事。</target>
        </trans-unit>
        <trans-unit id="12b5c01907f295f047c10aa39f8c1176ebcbef5e" translate="yes" xml:space="preserve">
          <source>Listing 16-2: Saving a &lt;code&gt;JoinHandle&lt;/code&gt; from &lt;code&gt;thread::spawn&lt;/code&gt; to guarantee the thread is run to completion</source>
          <target state="translated">清单16-2：从 &lt;code&gt;thread::spawn&lt;/code&gt; 保存一个 &lt;code&gt;JoinHandle&lt;/code&gt; 以确保该线程运行完毕</target>
        </trans-unit>
        <trans-unit id="0e4bc84471eecfbbd51f5d5fcb65303d39e0056a" translate="yes" xml:space="preserve">
          <source>Listing 16-3: Attempting to use a vector created by the main thread in another thread</source>
          <target state="translated">清单16-3:尝试在另一个线程中使用主线程创建的向量。</target>
        </trans-unit>
        <trans-unit id="3f4840d59493ebbe6c316eb6dc48412a423666ec" translate="yes" xml:space="preserve">
          <source>Listing 16-4 provides a scenario that&amp;rsquo;s more likely to have a reference to &lt;code&gt;v&lt;/code&gt; that won&amp;rsquo;t be valid:</source>
          <target state="translated">清单16-4提供了一个场景，该场景更有可能引用对 &lt;code&gt;v&lt;/code&gt; 无效的引用：</target>
        </trans-unit>
        <trans-unit id="2f52a1d931528f94a1108b3ee0c94c630b939635" translate="yes" xml:space="preserve">
          <source>Listing 16-4: A thread with a closure that attempts to capture a reference to &lt;code&gt;v&lt;/code&gt; from a main thread that drops &lt;code&gt;v&lt;/code&gt;</source>
          <target state="translated">代码清单16-4：带有闭包的线程尝试从删除 &lt;code&gt;v&lt;/code&gt; 的主线程中捕获对 &lt;code&gt;v&lt;/code&gt; 的引用</target>
        </trans-unit>
        <trans-unit id="68f36abd65cb9617fabc96bec1214eb384c2e559" translate="yes" xml:space="preserve">
          <source>Listing 16-5: Using the &lt;code&gt;move&lt;/code&gt; keyword to force a closure to take ownership of the values it uses</source>
          <target state="translated">清单16-5：使用 &lt;code&gt;move&lt;/code&gt; 关键字强制闭包对其使用的值拥有所有权</target>
        </trans-unit>
        <trans-unit id="65c3c68257b787d358e1d7e814f67e1c00947c24" translate="yes" xml:space="preserve">
          <source>Listing 16-6: Creating a channel and assigning the two halves to &lt;code&gt;tx&lt;/code&gt; and &lt;code&gt;rx&lt;/code&gt;</source>
          <target state="translated">清单16-6：创建一个通道并将两个半部分分配给 &lt;code&gt;tx&lt;/code&gt; 和 &lt;code&gt;rx&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b1b5995d0b3553dd50483e1b1dd727985f856aa6" translate="yes" xml:space="preserve">
          <source>Listing 16-7: Moving &lt;code&gt;tx&lt;/code&gt; to a spawned thread and sending &amp;ldquo;hi&amp;rdquo;</source>
          <target state="translated">清单16-7：将 &lt;code&gt;tx&lt;/code&gt; 移至生成的线程并发送&amp;ldquo; hi&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="1c6ea482518596009c65da1decd55a62b5a09488" translate="yes" xml:space="preserve">
          <source>Listing 16-8: Receiving the value &amp;ldquo;hi&amp;rdquo; in the main thread and printing it</source>
          <target state="translated">清单16-8：在主线程中接收值&amp;ldquo; hi&amp;rdquo;并打印</target>
        </trans-unit>
        <trans-unit id="1321b4024ee76a7d19ba0581eab40c25717ed32c" translate="yes" xml:space="preserve">
          <source>Listing 16-9: Attempting to use &lt;code&gt;val&lt;/code&gt; after we&amp;rsquo;ve sent it down the channel</source>
          <target state="translated">清单16-9：在将其发送到通道后尝试使用 &lt;code&gt;val&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f53b0bfbe1f71798882606e57ac86baae11de72" translate="yes" xml:space="preserve">
          <source>Listing 17-10: Attempting to use a type that doesn&amp;rsquo;t implement the trait object&amp;rsquo;s trait</source>
          <target state="translated">清单17-10：尝试使用没有实现trait对象的trait的类型</target>
        </trans-unit>
        <trans-unit id="616b6032949e86e604e03baeb242990f1a755bad" translate="yes" xml:space="preserve">
          <source>Listing 17-11 showed that we want to be able to call a method named &lt;code&gt;add_text&lt;/code&gt; and pass it a &lt;code&gt;&amp;amp;str&lt;/code&gt; that is then added to the text content of the blog post. We implement this as a method rather than exposing the &lt;code&gt;content&lt;/code&gt; field as &lt;code&gt;pub&lt;/code&gt;. This means we can implement a method later that will control how the &lt;code&gt;content&lt;/code&gt; field&amp;rsquo;s data is read. The &lt;code&gt;add_text&lt;/code&gt; method is pretty straightforward, so let&amp;rsquo;s add the implementation in Listing 17-13 to the &lt;code&gt;impl Post&lt;/code&gt; block:</source>
          <target state="translated">清单17-11显示了我们希望能够调用一个名为 &lt;code&gt;add_text&lt;/code&gt; 的方法并将其传递给 &lt;code&gt;&amp;amp;str&lt;/code&gt; ，然后将其添加到博客文章的文本内容中。我们将其实现为一种方法，而不是将 &lt;code&gt;content&lt;/code&gt; 字段公开为 &lt;code&gt;pub&lt;/code&gt; 。这意味着我们以后可以实现一种方法，该方法将控制如何读取 &lt;code&gt;content&lt;/code&gt; 字段的数据。该 &lt;code&gt;add_text&lt;/code&gt; 方法是相当简单的，让我们清单17-13在实施添加到 &lt;code&gt;impl Post&lt;/code&gt; 块：</target>
        </trans-unit>
        <trans-unit id="9146f8d1f83432c6766686b385badbf73153717d" translate="yes" xml:space="preserve">
          <source>Listing 17-11 shows this workflow in code form: this is an example usage of the API we&amp;rsquo;ll implement in a library crate named &lt;code&gt;blog&lt;/code&gt;. This won&amp;rsquo;t compile yet because we haven&amp;rsquo;t implemented the &lt;code&gt;blog&lt;/code&gt; crate yet.</source>
          <target state="translated">清单17-11以代码形式显示了此工作流：这是我们将在名为 &lt;code&gt;blog&lt;/code&gt; 的库箱中实现的API的示例用法。由于我们尚未实现 &lt;code&gt;blog&lt;/code&gt; 箱，因此尚无法编译。</target>
        </trans-unit>
        <trans-unit id="e503a37b208823b1fe53cabe8334c7ca42c80dba" translate="yes" xml:space="preserve">
          <source>Listing 17-11: Code that demonstrates the desired behavior we want our &lt;code&gt;blog&lt;/code&gt; crate to have</source>
          <target state="translated">清单17-11：演示我们希望 &lt;code&gt;blog&lt;/code&gt; 箱具有的预期行为的代码</target>
        </trans-unit>
        <trans-unit id="f1620b3de9e638fc5e39afeef2145569e6847def" translate="yes" xml:space="preserve">
          <source>Listing 17-12: Definition of a &lt;code&gt;Post&lt;/code&gt; struct and a &lt;code&gt;new&lt;/code&gt; function that creates a new &lt;code&gt;Post&lt;/code&gt; instance, a &lt;code&gt;State&lt;/code&gt; trait, and a &lt;code&gt;Draft&lt;/code&gt; struct</source>
          <target state="translated">清单17-12： &lt;code&gt;Post&lt;/code&gt; 结构的定义和一个 &lt;code&gt;new&lt;/code&gt; 函数，该函数创建一个新的 &lt;code&gt;Post&lt;/code&gt; 实例，一个 &lt;code&gt;State&lt;/code&gt; trait和一个 &lt;code&gt;Draft&lt;/code&gt; 结构</target>
        </trans-unit>
        <trans-unit id="771eeb1af445ce7599b9b49829f583fe06060e94" translate="yes" xml:space="preserve">
          <source>Listing 17-13: Implementing the &lt;code&gt;add_text&lt;/code&gt; method to add text to a post&amp;rsquo;s &lt;code&gt;content&lt;/code&gt;</source>
          <target state="translated">清单17-13：实现 &lt;code&gt;add_text&lt;/code&gt; 方法以将文本添加到帖子的 &lt;code&gt;content&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7247d1c523b6527219b67cc4b27e57c78e329f65" translate="yes" xml:space="preserve">
          <source>Listing 17-14: Adding a placeholder implementation for the &lt;code&gt;content&lt;/code&gt; method on &lt;code&gt;Post&lt;/code&gt; that always returns an empty string slice</source>
          <target state="translated">清单17-14：为 &lt;code&gt;Post&lt;/code&gt; 的 &lt;code&gt;content&lt;/code&gt; 方法添加一个占位符实现，该实现始终返回一个空字符串切片</target>
        </trans-unit>
        <trans-unit id="7e2baf957d0f7561fcdd554cf11ea8c05c575b7f" translate="yes" xml:space="preserve">
          <source>Listing 17-15: Implementing &lt;code&gt;request_review&lt;/code&gt; methods on &lt;code&gt;Post&lt;/code&gt; and the &lt;code&gt;State&lt;/code&gt; trait</source>
          <target state="translated">清单17-15：在 &lt;code&gt;Post&lt;/code&gt; 和 &lt;code&gt;State&lt;/code&gt; trait 上实现 &lt;code&gt;request_review&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="cdbb4624526d447f365d0c2c9d058213c72af6f1" translate="yes" xml:space="preserve">
          <source>Listing 17-16: Implementing the &lt;code&gt;approve&lt;/code&gt; method on &lt;code&gt;Post&lt;/code&gt; and the &lt;code&gt;State&lt;/code&gt; trait</source>
          <target state="translated">清单17-16：在 &lt;code&gt;Post&lt;/code&gt; 和 &lt;code&gt;State&lt;/code&gt; 特质上实现 &lt;code&gt;approve&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="7f4eb5c03e760160f8826b08a4d43cdb29409364" translate="yes" xml:space="preserve">
          <source>Listing 17-17: Updating the &lt;code&gt;content&lt;/code&gt; method on &lt;code&gt;Post&lt;/code&gt; to delegate to a &lt;code&gt;content&lt;/code&gt; method on &lt;code&gt;State&lt;/code&gt;</source>
          <target state="translated">清单17-17：更新 &lt;code&gt;Post&lt;/code&gt; 上的 &lt;code&gt;content&lt;/code&gt; 方法以委托给 &lt;code&gt;State&lt;/code&gt; 上的 &lt;code&gt;content&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="a326b346b73e4afdc2a1733c02f0e9fd20e8b7d5" translate="yes" xml:space="preserve">
          <source>Listing 17-18: Adding the &lt;code&gt;content&lt;/code&gt; method to the &lt;code&gt;State&lt;/code&gt; trait</source>
          <target state="translated">清单17-18：将 &lt;code&gt;content&lt;/code&gt; 方法添加到 &lt;code&gt;State&lt;/code&gt; 特征</target>
        </trans-unit>
        <trans-unit id="a7b8a363eb5ab143105af7e7ab0e366d9e8e76c3" translate="yes" xml:space="preserve">
          <source>Listing 17-19: A &lt;code&gt;Post&lt;/code&gt; with a &lt;code&gt;content&lt;/code&gt; method and a &lt;code&gt;DraftPost&lt;/code&gt; without a &lt;code&gt;content&lt;/code&gt; method</source>
          <target state="translated">清单17-19：具有 &lt;code&gt;content&lt;/code&gt; 方法的 &lt;code&gt;Post&lt;/code&gt; 和不具有 &lt;code&gt;content&lt;/code&gt; 方法的 &lt;code&gt;DraftPost&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20fae4c7b40d2fe79a0f2f5ecda0ff6fbf94e76b" translate="yes" xml:space="preserve">
          <source>Listing 17-1: An &lt;code&gt;AveragedCollection&lt;/code&gt; struct that maintains a list of integers and the average of the items in the collection</source>
          <target state="translated">清单17-1： &lt;code&gt;AveragedCollection&lt;/code&gt; 结构，该结构维护整数列表和集合中各项的平均值</target>
        </trans-unit>
        <trans-unit id="b1b1a0c2ff1d0c5537eceea61cc356e7c360c7f4" translate="yes" xml:space="preserve">
          <source>Listing 17-20: A &lt;code&gt;PendingReviewPost&lt;/code&gt; that gets created by calling &lt;code&gt;request_review&lt;/code&gt; on &lt;code&gt;DraftPost&lt;/code&gt; and an &lt;code&gt;approve&lt;/code&gt; method that turns a &lt;code&gt;PendingReviewPost&lt;/code&gt; into a published &lt;code&gt;Post&lt;/code&gt;</source>
          <target state="translated">清单17-20：通过在 &lt;code&gt;DraftPost&lt;/code&gt; 上调用 &lt;code&gt;request_review&lt;/code&gt; 创建的 &lt;code&gt;PendingReviewPost&lt;/code&gt; 和将 &lt;code&gt;PendingReviewPost&lt;/code&gt; 转换为已发布 &lt;code&gt;Post&lt;/code&gt; 的 &lt;code&gt;approve&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="58dea3744e2c0be352925a0e7cd74ffdedb9028f" translate="yes" xml:space="preserve">
          <source>Listing 17-21: Modifications to &lt;code&gt;main&lt;/code&gt; to use the new implementation of the blog post workflow</source>
          <target state="translated">清单17-21：修改为 &lt;code&gt;main&lt;/code&gt; 使用博客文章工作流程的新实现</target>
        </trans-unit>
        <trans-unit id="834ba7425b4ceae322feab13f35479b714e61ef1" translate="yes" xml:space="preserve">
          <source>Listing 17-2: Implementations of the public methods &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, and &lt;code&gt;average&lt;/code&gt; on &lt;code&gt;AveragedCollection&lt;/code&gt;</source>
          <target state="translated">清单17-2：在 &lt;code&gt;AveragedCollection&lt;/code&gt; 上公共方法 &lt;code&gt;add&lt;/code&gt; ， &lt;code&gt;remove&lt;/code&gt; 和 &lt;code&gt;average&lt;/code&gt; 的实现</target>
        </trans-unit>
        <trans-unit id="af397fd71809e54f0083b7e608d6c0b4c9b0bf08" translate="yes" xml:space="preserve">
          <source>Listing 17-3 shows how to define a trait named &lt;code&gt;Draw&lt;/code&gt; with one method named &lt;code&gt;draw&lt;/code&gt;:</source>
          <target state="translated">清单17-3显示了如何使用一个名为 &lt;code&gt;draw&lt;/code&gt; 的方法来定义名为 &lt;code&gt;Draw&lt;/code&gt; 的特征：</target>
        </trans-unit>
        <trans-unit id="4f10326f38470efd1f683c6be6bac4e63a3ff831" translate="yes" xml:space="preserve">
          <source>Listing 17-3: Definition of the &lt;code&gt;Draw&lt;/code&gt; trait</source>
          <target state="translated">清单17-3： &lt;code&gt;Draw&lt;/code&gt; 特性的定义</target>
        </trans-unit>
        <trans-unit id="53f4d30f17cd4871bb579fc6d6ab9fa64fdf9e11" translate="yes" xml:space="preserve">
          <source>Listing 17-4: Definition of the &lt;code&gt;Screen&lt;/code&gt; struct with a &lt;code&gt;components&lt;/code&gt; field holding a vector of trait objects that implement the &lt;code&gt;Draw&lt;/code&gt; trait</source>
          <target state="translated">清单17-4： &lt;code&gt;Screen&lt;/code&gt; 结构的定义，其中的 &lt;code&gt;components&lt;/code&gt; 字段包含实现 &lt;code&gt;Draw&lt;/code&gt; trait 的trait对象的向量</target>
        </trans-unit>
        <trans-unit id="b367bafd62da00b39f0f29178ba139044ac6e392" translate="yes" xml:space="preserve">
          <source>Listing 17-5: A &lt;code&gt;run&lt;/code&gt; method on &lt;code&gt;Screen&lt;/code&gt; that calls the &lt;code&gt;draw&lt;/code&gt; method on each component</source>
          <target state="translated">清单17-5： &lt;code&gt;Screen&lt;/code&gt; 上的 &lt;code&gt;run&lt;/code&gt; 方法，它在每个组件上调用 &lt;code&gt;draw&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="deeebbdce767d8f16391b9fb2bdfc0e4741a956c" translate="yes" xml:space="preserve">
          <source>Listing 17-6: An alternate implementation of the &lt;code&gt;Screen&lt;/code&gt; struct and its &lt;code&gt;run&lt;/code&gt; method using generics and trait bounds</source>
          <target state="translated">清单17-6：使用泛型和特征边界的 &lt;code&gt;Screen&lt;/code&gt; 结构及其 &lt;code&gt;run&lt;/code&gt; 方法的替代实现</target>
        </trans-unit>
        <trans-unit id="b8a2b70499d48a841aff1d4e0201a4639e08dfd3" translate="yes" xml:space="preserve">
          <source>Listing 17-7: A &lt;code&gt;Button&lt;/code&gt; struct that implements the &lt;code&gt;Draw&lt;/code&gt; trait</source>
          <target state="translated">清单17-7：实现 &lt;code&gt;Draw&lt;/code&gt; 特性的 &lt;code&gt;Button&lt;/code&gt; 结构</target>
        </trans-unit>
        <trans-unit id="f85ea6c0e85c436b267fdc78309b821b846f93e5" translate="yes" xml:space="preserve">
          <source>Listing 17-8: Another crate using &lt;code&gt;gui&lt;/code&gt; and implementing the &lt;code&gt;Draw&lt;/code&gt; trait on a &lt;code&gt;SelectBox&lt;/code&gt; struct</source>
          <target state="translated">清单17-8：另一个使用 &lt;code&gt;gui&lt;/code&gt; 的板条箱，并在 &lt;code&gt;SelectBox&lt;/code&gt; 结构上实现了 &lt;code&gt;Draw&lt;/code&gt; 特征</target>
        </trans-unit>
        <trans-unit id="cc429d3edf954109de11b803bc39958b6b784d5b" translate="yes" xml:space="preserve">
          <source>Listing 17-9: Using trait objects to store values of different types that implement the same trait</source>
          <target state="translated">清单 17-9:使用特质对象来存储实现同一特质的不同类型的值。</target>
        </trans-unit>
        <trans-unit id="ddfe1c7f701b93852d2a31044c55db0f52b05397" translate="yes" xml:space="preserve">
          <source>Listing 18-1 shows that it&amp;rsquo;s also possible to mix and match &lt;code&gt;if let&lt;/code&gt;, &lt;code&gt;else if&lt;/code&gt;, and &lt;code&gt;else if let&lt;/code&gt; expressions. Doing so gives us more flexibility than a &lt;code&gt;match&lt;/code&gt; expression in which we can express only one value to compare with the patterns. Also, the conditions in a series of &lt;code&gt;if let&lt;/code&gt;, &lt;code&gt;else if&lt;/code&gt;, &lt;code&gt;else if let&lt;/code&gt; arms aren&amp;rsquo;t required to relate to each other.</source>
          <target state="translated">清单18-1显示，还可以混合 &lt;code&gt;if let&lt;/code&gt; ， &lt;code&gt;else if&lt;/code&gt; 和 &lt;code&gt;else if let&lt;/code&gt; 表达式。 &lt;code&gt;match&lt;/code&gt; 表达式相比，匹配表达式给我们提供了更大的灵活性，在匹配表达式中，我们只能表达一个值以与模式进行比较。此外，在一系列条件 &lt;code&gt;if let&lt;/code&gt; ， &lt;code&gt;else if&lt;/code&gt; ， &lt;code&gt;else if let&lt;/code&gt; 不需要武器之间的相互关系。</target>
        </trans-unit>
        <trans-unit id="6144661c623085286d9e6c1f25f8fba184c50d92" translate="yes" xml:space="preserve">
          <source>Listing 18-10: Attempting to use an irrefutable pattern with &lt;code&gt;if let&lt;/code&gt;</source>
          <target state="translated">清单18-10：尝试在 &lt;code&gt;if let&lt;/code&gt; 中使用不可辩驳的模式</target>
        </trans-unit>
        <trans-unit id="4fb327bd75f9cb8728aaf90ca3b872fcf04c7b03" translate="yes" xml:space="preserve">
          <source>Listing 18-11: A &lt;code&gt;match&lt;/code&gt; expression with an arm that introduces a shadowed variable &lt;code&gt;y&lt;/code&gt;</source>
          <target state="translated">代码清单18-11：带有手臂的 &lt;code&gt;match&lt;/code&gt; 表达式，其中引入了阴影变量 &lt;code&gt;y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c2b55120c0d8dc746b9a11845e36ee6b0454a61" translate="yes" xml:space="preserve">
          <source>Listing 18-12 shows a &lt;code&gt;Point&lt;/code&gt; struct with two fields, &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, that we can break apart using a pattern with a &lt;code&gt;let&lt;/code&gt; statement.</source>
          <target state="translated">清单18-12显示了一个具有两个字段 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的 &lt;code&gt;Point&lt;/code&gt; 结构，我们可以使用带有 &lt;code&gt;let&lt;/code&gt; 语句的模式进行分解。</target>
        </trans-unit>
        <trans-unit id="8fcd90b374859cce38828ebaf8d6bead41442a33" translate="yes" xml:space="preserve">
          <source>Listing 18-12: Destructuring a struct&amp;rsquo;s fields into separate variables</source>
          <target state="translated">清单18-12：将结构的字段分解为单独的变量</target>
        </trans-unit>
        <trans-unit id="4ffbbc6877a6d05b9d9c472765b5d7903d9e7479" translate="yes" xml:space="preserve">
          <source>Listing 18-13: Destructuring struct fields using struct field shorthand</source>
          <target state="translated">清单 18-13:使用结构字段速记来重构结构字段</target>
        </trans-unit>
        <trans-unit id="11235cfa0778ac436ff2f043900aa97ca456308b" translate="yes" xml:space="preserve">
          <source>Listing 18-14 shows a &lt;code&gt;match&lt;/code&gt; expression that separates &lt;code&gt;Point&lt;/code&gt; values into three cases: points that lie directly on the &lt;code&gt;x&lt;/code&gt; axis (which is true when &lt;code&gt;y = 0&lt;/code&gt;), on the &lt;code&gt;y&lt;/code&gt; axis (&lt;code&gt;x = 0&lt;/code&gt;), or neither.</source>
          <target state="translated">清单18-14显示了一个 &lt;code&gt;match&lt;/code&gt; 表达式，该表达式将 &lt;code&gt;Point&lt;/code&gt; 值分为三种情况：直接位于 &lt;code&gt;x&lt;/code&gt; 轴上的点（在 &lt;code&gt;y = 0&lt;/code&gt; 时为true ），在 &lt;code&gt;y&lt;/code&gt; 轴上（ &lt;code&gt;x = 0&lt;/code&gt; ）或两者都不存在。</target>
        </trans-unit>
        <trans-unit id="fb8ab1d9675afe7b1be1ae05d4ffa8df574bad5c" translate="yes" xml:space="preserve">
          <source>Listing 18-14: Destructuring and matching literal values in one pattern</source>
          <target state="translated">清单18-14:在一个模式中分解和匹配字面值。</target>
        </trans-unit>
        <trans-unit id="2c53ca816acb5a98311e74b746cebc27259ca9cd" translate="yes" xml:space="preserve">
          <source>Listing 18-15: Destructuring enum variants that hold different kinds of values</source>
          <target state="translated">清单 18-15:构建持有不同类型值的枚举变体。</target>
        </trans-unit>
        <trans-unit id="8d017024ad074a5a0b7ed0110f548b4814b94a7f" translate="yes" xml:space="preserve">
          <source>Listing 18-16: Matching on nested enums</source>
          <target state="translated">清单 18-16:嵌套枚举的匹配</target>
        </trans-unit>
        <trans-unit id="f6f8fe0574320b6bc647539f95a9151cef4615db" translate="yes" xml:space="preserve">
          <source>Listing 18-17: Using &lt;code&gt;_&lt;/code&gt; in a function signature</source>
          <target state="translated">清单18-17：在函数签名中使用 &lt;code&gt;_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8578bd30c83decb05fa742779b0e3e4b88f7c284" translate="yes" xml:space="preserve">
          <source>Listing 18-18: Using an underscore within patterns that match &lt;code&gt;Some&lt;/code&gt; variants when we don&amp;rsquo;t need to use the value inside the &lt;code&gt;Some&lt;/code&gt;</source>
          <target state="translated">清单18-18：当我们不需要使用 &lt;code&gt;Some&lt;/code&gt; 中的值时，在匹配 &lt;code&gt;Some&lt;/code&gt; 变体的模式中使用下划线</target>
        </trans-unit>
        <trans-unit id="37c8915871f50b9721bed2e69eaf1a05338e87bd" translate="yes" xml:space="preserve">
          <source>Listing 18-19: Ignoring multiple parts of a tuple</source>
          <target state="translated">清单 18-19:忽略一个元组的多个部分</target>
        </trans-unit>
        <trans-unit id="04e7b01d790581aedba062883153a4872da1e4bc" translate="yes" xml:space="preserve">
          <source>Listing 18-1: Mixing &lt;code&gt;if let&lt;/code&gt;, &lt;code&gt;else if&lt;/code&gt;, &lt;code&gt;else if let&lt;/code&gt;, and &lt;code&gt;else&lt;/code&gt;</source>
          <target state="translated">清单18-1：混合 &lt;code&gt;if let&lt;/code&gt; ， &lt;code&gt;else if&lt;/code&gt; ， &lt;code&gt;else if let&lt;/code&gt; 和 &lt;code&gt;else&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0192d0fe46e2149dd08840da1d83030a4ae539d" translate="yes" xml:space="preserve">
          <source>Listing 18-20: Starting a variable name with an underscore to avoid getting unused variable warnings</source>
          <target state="translated">清单18-20:用下划线开始一个变量名,以避免得到未使用的变量警告。</target>
        </trans-unit>
        <trans-unit id="b01ab99d779b491e654cdd969c4904697cb0151a" translate="yes" xml:space="preserve">
          <source>Listing 18-21: An unused variable starting with an underscore still binds the value, which might take ownership of the value</source>
          <target state="translated">清单 18-21:一个以下划线开头的未使用的变量仍然会绑定数值,它可能会拥有数值的所有权。</target>
        </trans-unit>
        <trans-unit id="02ba42be73f9aaf4aecf0fb121bd2897610211e9" translate="yes" xml:space="preserve">
          <source>Listing 18-22: Using an underscore does not bind the value</source>
          <target state="translated">清单18-22:使用下划线并不绑定值。</target>
        </trans-unit>
        <trans-unit id="84f4057dde8da9e2423dedf021ccca0489c6ac8b" translate="yes" xml:space="preserve">
          <source>Listing 18-23: Ignoring all fields of a &lt;code&gt;Point&lt;/code&gt; except for &lt;code&gt;x&lt;/code&gt; by using &lt;code&gt;..&lt;/code&gt;</source>
          <target state="translated">代码清单18-23：使用 &lt;code&gt;..&lt;/code&gt; 忽略 &lt;code&gt;Point&lt;/code&gt; 的除 &lt;code&gt;x&lt;/code&gt; 以外的所有字段</target>
        </trans-unit>
        <trans-unit id="3275bf1924f1fbc7d62858e211ba0873cc0669da" translate="yes" xml:space="preserve">
          <source>Listing 18-24: Matching only the first and last values in a tuple and ignoring all other values</source>
          <target state="translated">清单 18-24:只匹配元组中的第一个和最后一个值,而忽略所有其他值。</target>
        </trans-unit>
        <trans-unit id="0e55fccc60bd6fc7526f10678d21072747686831" translate="yes" xml:space="preserve">
          <source>Listing 18-25: An attempt to use &lt;code&gt;..&lt;/code&gt; in an ambiguous way</source>
          <target state="translated">清单18-25：尝试以不明确的方式使用 &lt;code&gt;..&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="97cebea2424bf45c8bf6c663a2503dbf6d8034ad" translate="yes" xml:space="preserve">
          <source>Listing 18-26: Adding a match guard to a pattern</source>
          <target state="translated">清单 18-26:在模式中添加匹配保护</target>
        </trans-unit>
        <trans-unit id="f95d9bacb005429d46b172980ece5949fe65c37d" translate="yes" xml:space="preserve">
          <source>Listing 18-27: Using a match guard to test for equality with an outer variable</source>
          <target state="translated">清单 18-27:使用匹配后卫测试外部变量的平等性。</target>
        </trans-unit>
        <trans-unit id="0704830d46f846b74b5397dfd28e0cc52ee3748c" translate="yes" xml:space="preserve">
          <source>Listing 18-28: Combining multiple patterns with a match guard</source>
          <target state="translated">清单 18-28:用火柴防护罩组合多种模式</target>
        </trans-unit>
        <trans-unit id="7e4e4163a76cf16ed52305f58c5002629978394b" translate="yes" xml:space="preserve">
          <source>Listing 18-29: Using &lt;code&gt;@&lt;/code&gt; to bind to a value in a pattern while also testing it</source>
          <target state="translated">清单18-29：使用 &lt;code&gt;@&lt;/code&gt; 绑定到模式中的值，同时还要对其进行测试</target>
        </trans-unit>
        <trans-unit id="23efe349dec0a7214e63201a66162129b04c6e4c" translate="yes" xml:space="preserve">
          <source>Listing 18-2: Using a &lt;code&gt;while let&lt;/code&gt; loop to print values for as long as &lt;code&gt;stack.pop()&lt;/code&gt; returns &lt;code&gt;Some&lt;/code&gt;</source>
          <target state="translated">清单18-2：只要 &lt;code&gt;stack.pop()&lt;/code&gt; 返回 &lt;code&gt;Some&lt;/code&gt; 使用 &lt;code&gt;while let&lt;/code&gt; 循环打印值</target>
        </trans-unit>
        <trans-unit id="442e4a943f8db50a444be69278c2e7871bcc0a79" translate="yes" xml:space="preserve">
          <source>Listing 18-3 demonstrates how to use a pattern in a &lt;code&gt;for&lt;/code&gt; loop to destructure, or break apart, a tuple as part of the &lt;code&gt;for&lt;/code&gt; loop.</source>
          <target state="translated">清单18-3演示了如何在 &lt;code&gt;for&lt;/code&gt; 循环中使用模式来分解或拆分元组，作为 &lt;code&gt;for&lt;/code&gt; 循环的一部分。</target>
        </trans-unit>
        <trans-unit id="50a3b88c90e0ff821d1a59ab4a6da154261b1017" translate="yes" xml:space="preserve">
          <source>Listing 18-3: Using a pattern in a &lt;code&gt;for&lt;/code&gt; loop to destructure a tuple</source>
          <target state="translated">清单18-3：在 &lt;code&gt;for&lt;/code&gt; 循环中使用模式来分解元组</target>
        </trans-unit>
        <trans-unit id="e1d043e4088371824844d59ed215594c594ada98" translate="yes" xml:space="preserve">
          <source>Listing 18-4: Using a pattern to destructure a tuple and create three variables at once</source>
          <target state="translated">清单18-4:使用模式来重构一个元组并同时创建三个变量。</target>
        </trans-unit>
        <trans-unit id="e661b97edf1bb133ffbc7fc27e8a7bb308aef2f6" translate="yes" xml:space="preserve">
          <source>Listing 18-5: Incorrectly constructing a pattern whose variables don&amp;rsquo;t match the number of elements in the tuple</source>
          <target state="translated">清单18-5：错误地构造了一个模式，该模式的变量与元组中的元素数不匹配</target>
        </trans-unit>
        <trans-unit id="a385d299c12c18dc1cff0477057573295b51144e" translate="yes" xml:space="preserve">
          <source>Listing 18-6: A function signature uses patterns in the parameters</source>
          <target state="translated">清单 18-6:函数签名在参数中使用模式</target>
        </trans-unit>
        <trans-unit id="d3aee3d1bb78e1ecec2ead5910893a0623b90b19" translate="yes" xml:space="preserve">
          <source>Listing 18-7: A function with parameters that destructure a tuple</source>
          <target state="translated">清单 18-7:一个带参数的函数,可以反构一个元组。</target>
        </trans-unit>
        <trans-unit id="21e573f160e40fcf18eb94c2061a631cb291a5f6" translate="yes" xml:space="preserve">
          <source>Listing 18-8: Attempting to use a refutable pattern with &lt;code&gt;let&lt;/code&gt;</source>
          <target state="translated">清单18-8：尝试对 &lt;code&gt;let&lt;/code&gt; 使用可重用模式</target>
        </trans-unit>
        <trans-unit id="675529134474b9f9be7b4829f297213ca94319fa" translate="yes" xml:space="preserve">
          <source>Listing 18-9: Using &lt;code&gt;if let&lt;/code&gt; and a block with refutable patterns instead of &lt;code&gt;let&lt;/code&gt;</source>
          <target state="translated">清单18-9：使用 &lt;code&gt;if let&lt;/code&gt; 和带有可重提模式的块代替 &lt;code&gt;let&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf63cbd65b20995fab2c3177f0bdf18c81ec5bba" translate="yes" xml:space="preserve">
          <source>Listing 19-1 shows how to create an immutable and a mutable raw pointer from references.</source>
          <target state="translated">清单19-1显示了如何从引用中创建一个不可变和可变的原始指针。</target>
        </trans-unit>
        <trans-unit id="1c28635772518e1ad661ea27fce0ffdf6d63713e" translate="yes" xml:space="preserve">
          <source>Listing 19-10: Reading from or writing to a mutable static variable is unsafe</source>
          <target state="translated">清单 19-10:向可变静态变量读写是不安全的。</target>
        </trans-unit>
        <trans-unit id="9e5c9abfc65b6f4d1aa6e66f7ef07fe278c65c7d" translate="yes" xml:space="preserve">
          <source>Listing 19-11: Defining and implementing an unsafe trait</source>
          <target state="translated">清单 19-11:定义和实施不安全特性</target>
        </trans-unit>
        <trans-unit id="97e7d182f69683a4f3a68c22cc9d9c54c17d0703" translate="yes" xml:space="preserve">
          <source>Listing 19-12: The definition of the &lt;code&gt;Iterator&lt;/code&gt; trait that has an associated type &lt;code&gt;Item&lt;/code&gt;</source>
          <target state="translated">清单19-12：具有关联类型 &lt;code&gt;Item&lt;/code&gt; 的 &lt;code&gt;Iterator&lt;/code&gt; 特征的定义</target>
        </trans-unit>
        <trans-unit id="4e26c92b1d14183f38e41790c29afe868e637f42" translate="yes" xml:space="preserve">
          <source>Listing 19-13: A hypothetical definition of the &lt;code&gt;Iterator&lt;/code&gt; trait using generics</source>
          <target state="translated">清单19-13：使用泛型的 &lt;code&gt;Iterator&lt;/code&gt; 特质的假想定义</target>
        </trans-unit>
        <trans-unit id="a6225ec091be9ac5ca264bd8b927cc4c37328abc" translate="yes" xml:space="preserve">
          <source>Listing 19-14: Implementing the &lt;code&gt;Add&lt;/code&gt; trait to overload the &lt;code&gt;+&lt;/code&gt; operator for &lt;code&gt;Point&lt;/code&gt; instances</source>
          <target state="translated">清单19-14：实现 &lt;code&gt;Add&lt;/code&gt; 特性以重载 &lt;code&gt;Point&lt;/code&gt; 实例的 &lt;code&gt;+&lt;/code&gt; 运算符</target>
        </trans-unit>
        <trans-unit id="8e21c1e69cc727098d370a83f01461649e24252b" translate="yes" xml:space="preserve">
          <source>Listing 19-15: Implementing the &lt;code&gt;Add&lt;/code&gt; trait on &lt;code&gt;Millimeters&lt;/code&gt; to add &lt;code&gt;Millimeters&lt;/code&gt; to &lt;code&gt;Meters&lt;/code&gt;</source>
          <target state="translated">清单19-15：在&amp;ldquo; &lt;code&gt;Millimeters&lt;/code&gt; 上实现&amp;ldquo; &lt;code&gt;Add&lt;/code&gt; 特征以将 &lt;code&gt;Millimeters&lt;/code&gt; 添加到 &lt;code&gt;Meters&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8cfa717336348c447e94e7f1e44c3038c63118f" translate="yes" xml:space="preserve">
          <source>Listing 19-16: Two traits are defined to have a &lt;code&gt;fly&lt;/code&gt; method and are implemented on the &lt;code&gt;Human&lt;/code&gt; type, and a &lt;code&gt;fly&lt;/code&gt; method is implemented on &lt;code&gt;Human&lt;/code&gt; directly</source>
          <target state="translated">清单19-16：两个特征被定义为具有 &lt;code&gt;fly&lt;/code&gt; 方法并在 &lt;code&gt;Human&lt;/code&gt; 类型上实现， &lt;code&gt;fly&lt;/code&gt; 方法直接在 &lt;code&gt;Human&lt;/code&gt; 上实现</target>
        </trans-unit>
        <trans-unit id="db633a5a017661e7a7146fde17cdac691e8db4a1" translate="yes" xml:space="preserve">
          <source>Listing 19-17: Calling &lt;code&gt;fly&lt;/code&gt; on an instance of &lt;code&gt;Human&lt;/code&gt;</source>
          <target state="translated">清单19-17：在 &lt;code&gt;Human&lt;/code&gt; 实例上调用 &lt;code&gt;fly&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="23834c33f73df40768a1dd5e5beec6df8bf7b48e" translate="yes" xml:space="preserve">
          <source>Listing 19-18: Specifying which trait&amp;rsquo;s &lt;code&gt;fly&lt;/code&gt; method we want to call</source>
          <target state="translated">清单19-18：指定我们要调用的特征的 &lt;code&gt;fly&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="0a1f4647a45d92385555a03bf4ecb4d0623b48a1" translate="yes" xml:space="preserve">
          <source>Listing 19-19: A trait with an associated function and a type with an associated function of the same name that also implements the trait</source>
          <target state="translated">清单 19-19.一个带有关联函数的特质和一个带有同名关联函数的类型,也实现了特质。带有相关函数的特质和带有同名相关函数的类型,该类型也实现了该特质。</target>
        </trans-unit>
        <trans-unit id="192efdc88660736ee00124c16674e9b849c2f715" translate="yes" xml:space="preserve">
          <source>Listing 19-1: Creating raw pointers from references</source>
          <target state="translated">清单19-1:从引用创建原始指针</target>
        </trans-unit>
        <trans-unit id="8d83b1ebdf623a809ae1dbc744f5cfb736315160" translate="yes" xml:space="preserve">
          <source>Listing 19-20: Attempting to call the &lt;code&gt;baby_name&lt;/code&gt; function from the &lt;code&gt;Animal&lt;/code&gt; trait, but Rust doesn&amp;rsquo;t know which implementation to use</source>
          <target state="translated">清单19-20：尝试从 &lt;code&gt;Animal&lt;/code&gt; 特性中调用 &lt;code&gt;baby_name&lt;/code&gt; 函数，但是Rust不知道要使用哪个实现</target>
        </trans-unit>
        <trans-unit id="ac581d7a4053cba32c760b99f0af0222300b5bb1" translate="yes" xml:space="preserve">
          <source>Listing 19-21: Using fully qualified syntax to specify that we want to call the &lt;code&gt;baby_name&lt;/code&gt; function from the &lt;code&gt;Animal&lt;/code&gt; trait as implemented on &lt;code&gt;Dog&lt;/code&gt;</source>
          <target state="translated">清单19-21：使用完全限定的语法来指定我们要从 &lt;code&gt;Dog&lt;/code&gt; 上实现的 &lt;code&gt;Animal&lt;/code&gt; 特性中调用 &lt;code&gt;baby_name&lt;/code&gt; 函数</target>
        </trans-unit>
        <trans-unit id="8205ecf7d4f5d4f3830c5045853af8331fa47133" translate="yes" xml:space="preserve">
          <source>Listing 19-22: Implementing the &lt;code&gt;OutlinePrint&lt;/code&gt; trait that requires the functionality from &lt;code&gt;Display&lt;/code&gt;</source>
          <target state="translated">清单19-22：实现需要 &lt;code&gt;Display&lt;/code&gt; 的功能的 &lt;code&gt;OutlinePrint&lt;/code&gt; 特征</target>
        </trans-unit>
        <trans-unit id="c5e43e2c666b627080372728cabf0cc1d1c6ff63" translate="yes" xml:space="preserve">
          <source>Listing 19-23: Creating a &lt;code&gt;Wrapper&lt;/code&gt; type around &lt;code&gt;Vec&amp;lt;String&amp;gt;&lt;/code&gt; to implement &lt;code&gt;Display&lt;/code&gt;</source>
          <target state="translated">清单19-23：在 &lt;code&gt;Vec&amp;lt;String&amp;gt;&lt;/code&gt; 周围创建 &lt;code&gt;Wrapper&lt;/code&gt; 类型以实现 &lt;code&gt;Display&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1131b7eb93a0bacee5469c6f2b5469b17091340d" translate="yes" xml:space="preserve">
          <source>Listing 19-24: Using a long type in many places</source>
          <target state="translated">清单19-24:在许多地方使用长类型</target>
        </trans-unit>
        <trans-unit id="1987562b13a9a144a67a61660918cc709b89a4d7" translate="yes" xml:space="preserve">
          <source>Listing 19-25: Introducing a type alias &lt;code&gt;Thunk&lt;/code&gt; to reduce repetition</source>
          <target state="translated">清单19-25：介绍类型别名 &lt;code&gt;Thunk&lt;/code&gt; 以减少重复</target>
        </trans-unit>
        <trans-unit id="ad147945642e08a211cbe9d3bd11a5fcd950dc97" translate="yes" xml:space="preserve">
          <source>Listing 19-26: A &lt;code&gt;match&lt;/code&gt; with an arm that ends in &lt;code&gt;continue&lt;/code&gt;</source>
          <target state="translated">清单19-26：一条手臂以 &lt;code&gt;continue&lt;/code&gt; 结尾的 &lt;code&gt;match&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="66fc36103a8a4f76e0bc69209e8f9d1bde9445a7" translate="yes" xml:space="preserve">
          <source>Listing 19-27: Using the &lt;code&gt;fn&lt;/code&gt; type to accept a function pointer as an argument</source>
          <target state="translated">清单19-27：使用 &lt;code&gt;fn&lt;/code&gt; 类型接受函数指针作为参数</target>
        </trans-unit>
        <trans-unit id="769c84eb503c23780b93699d2159e4cf8959b7f5" translate="yes" xml:space="preserve">
          <source>Listing 19-28 shows a slightly simplified definition of the &lt;code&gt;vec!&lt;/code&gt; macro.</source>
          <target state="translated">清单19-28显示了 &lt;code&gt;vec!&lt;/code&gt; 的稍微简化的定义！宏。</target>
        </trans-unit>
        <trans-unit id="60ab4c545d5a0a14c36d0f048ed889fbad1b867a" translate="yes" xml:space="preserve">
          <source>Listing 19-28: A simplified version of the &lt;code&gt;vec!&lt;/code&gt; macro definition</source>
          <target state="translated">清单19-28： &lt;code&gt;vec!&lt;/code&gt; 简化版本！宏定义</target>
        </trans-unit>
        <trans-unit id="97631e592572572bb56effe84f77bb58203d289e" translate="yes" xml:space="preserve">
          <source>Listing 19-29: An example of using a procedural macro</source>
          <target state="translated">清单 19-29:使用程序性宏的一个例子</target>
        </trans-unit>
        <trans-unit id="83ea168fb44a9c48159cac238fc94515fe3427d1" translate="yes" xml:space="preserve">
          <source>Listing 19-2: Creating a raw pointer to an arbitrary memory address</source>
          <target state="translated">清单19-2:创建一个指向任意内存地址的原始指针。</target>
        </trans-unit>
        <trans-unit id="eb0cf59c32c33cd655b69f707870bf310b1c110b" translate="yes" xml:space="preserve">
          <source>Listing 19-30: The code a user of our crate will be able to write when using our procedural macro</source>
          <target state="translated">清单 19-30:当使用我们的程序性宏时,我们的箱子的用户将能够写出的代码</target>
        </trans-unit>
        <trans-unit id="3c1a2c71019296d6475855f5967a82c656b5e4de" translate="yes" xml:space="preserve">
          <source>Listing 19-31: Code that most procedural macro crates will require in order to process Rust code</source>
          <target state="translated">清单19-31。大多数程序化宏箱需要的代码,以便处理Rust代码。</target>
        </trans-unit>
        <trans-unit id="e7d6f9e676482d1db15035f09578f137f1526cbb" translate="yes" xml:space="preserve">
          <source>Listing 19-32: The &lt;code&gt;DeriveInput&lt;/code&gt; instance we get when parsing the code that has the macro&amp;rsquo;s attribute in Listing 19-30</source>
          <target state="translated">清单19-32：解析清单19-30中具有宏属性的代码时得到的 &lt;code&gt;DeriveInput&lt;/code&gt; 实例</target>
        </trans-unit>
        <trans-unit id="4397782d319dbdc638cec0fd47d1fda0eee85db9" translate="yes" xml:space="preserve">
          <source>Listing 19-33: Implementing the &lt;code&gt;HelloMacro&lt;/code&gt; trait using the parsed Rust code</source>
          <target state="translated">清单19-33：使用已解析的Rust代码实现 &lt;code&gt;HelloMacro&lt;/code&gt; 特征</target>
        </trans-unit>
        <trans-unit id="d539ea03dc90a8cca36f3eccb659307c38fa618f" translate="yes" xml:space="preserve">
          <source>Listing 19-3: Dereferencing raw pointers within an &lt;code&gt;unsafe&lt;/code&gt; block</source>
          <target state="translated">清单19-3：在 &lt;code&gt;unsafe&lt;/code&gt; 块中取消引用原始指针</target>
        </trans-unit>
        <trans-unit id="e1edf730fefc0104cc30acf2b246856d97d9d073" translate="yes" xml:space="preserve">
          <source>Listing 19-4: Using the safe &lt;code&gt;split_at_mut&lt;/code&gt; function</source>
          <target state="translated">清单19-4：使用安全的 &lt;code&gt;split_at_mut&lt;/code&gt; 函数</target>
        </trans-unit>
        <trans-unit id="f23a70c40857b6360828ef033504db89b40caa91" translate="yes" xml:space="preserve">
          <source>Listing 19-5: An attempted implementation of &lt;code&gt;split_at_mut&lt;/code&gt; using only safe Rust</source>
          <target state="translated">清单19-5：仅使用安全Rust 的 &lt;code&gt;split_at_mut&lt;/code&gt; 的尝试实现</target>
        </trans-unit>
        <trans-unit id="b16487162d78fe10005b7a33219b8cdbf681490c" translate="yes" xml:space="preserve">
          <source>Listing 19-6 shows how to use an &lt;code&gt;unsafe&lt;/code&gt; block, a raw pointer, and some calls to unsafe functions to make the implementation of &lt;code&gt;split_at_mut&lt;/code&gt; work.</source>
          <target state="translated">清单19-6显示了如何使用 &lt;code&gt;unsafe&lt;/code&gt; 块，原始指针以及对不安全的函数的一些调用来使 &lt;code&gt;split_at_mut&lt;/code&gt; 的实现正常工作。</target>
        </trans-unit>
        <trans-unit id="7c4d157139d16d96be67cd8da8488a5e81f88057" translate="yes" xml:space="preserve">
          <source>Listing 19-6: Using unsafe code in the implementation of the &lt;code&gt;split_at_mut&lt;/code&gt; function</source>
          <target state="translated">清单19-6：在 &lt;code&gt;split_at_mut&lt;/code&gt; 函数的实现中使用不安全的代码</target>
        </trans-unit>
        <trans-unit id="64cec9a7a8da122e95db8329b6350a018c6c3b45" translate="yes" xml:space="preserve">
          <source>Listing 19-7: Creating a slice from an arbitrary memory location</source>
          <target state="translated">清单19-7:从一个任意的内存位置创建一个分片。</target>
        </trans-unit>
        <trans-unit id="b7c3d4646ff2dd9b36dc16b78f39d822eb6a30ba" translate="yes" xml:space="preserve">
          <source>Listing 19-8 demonstrates how to set up an integration with the &lt;code&gt;abs&lt;/code&gt; function from the C standard library. Functions declared within &lt;code&gt;extern&lt;/code&gt; blocks are always unsafe to call from Rust code. The reason is that other languages don&amp;rsquo;t enforce Rust&amp;rsquo;s rules and guarantees, and Rust can&amp;rsquo;t check them, so responsibility falls on the programmer to ensure safety.</source>
          <target state="translated">清单19-8演示了如何与C标准库中的 &lt;code&gt;abs&lt;/code&gt; 函数建立集成。在 &lt;code&gt;extern&lt;/code&gt; 块中声明的函数始终不安全，无法从Rust代码进行调用。原因是其他语言不执行Rust的规则和保证，Rust无法检查它们，因此程序员有责任确保安全。</target>
        </trans-unit>
        <trans-unit id="1d7de98a6e48ac42520eafd23cc5b99e287c6f4c" translate="yes" xml:space="preserve">
          <source>Listing 19-8: Declaring and calling an &lt;code&gt;extern&lt;/code&gt; function defined in another language</source>
          <target state="translated">清单19-8：声明和调用用另一种语言定义的 &lt;code&gt;extern&lt;/code&gt; 函数</target>
        </trans-unit>
        <trans-unit id="02f5f37df24f5c7f8252fdc4fd720c05520b5ccb" translate="yes" xml:space="preserve">
          <source>Listing 19-9: Defining and using an immutable static variable</source>
          <target state="translated">清单19-9:定义和使用不可变的静态变量</target>
        </trans-unit>
        <trans-unit id="906850d60d2bfc7a434b9df477636efeaef160de" translate="yes" xml:space="preserve">
          <source>Listing 2-1: Code that gets a guess from the user and prints it</source>
          <target state="translated">清单2-1:从用户那里得到一个猜测并打印出来的代码。</target>
        </trans-unit>
        <trans-unit id="e55456b745b2d799b62d95f492ba0fa4228d6a0d" translate="yes" xml:space="preserve">
          <source>Listing 2-2: The output from running &lt;code&gt;cargo build&lt;/code&gt; after adding the rand crate as a dependency</source>
          <target state="translated">清单2-2：将rand crate添加为依赖项后，运行 &lt;code&gt;cargo build&lt;/code&gt; 的输出</target>
        </trans-unit>
        <trans-unit id="a5914c0d7edb00b8b1ca144c272f874cd675df48" translate="yes" xml:space="preserve">
          <source>Listing 2-3: Adding code to generate a random number</source>
          <target state="translated">清单2-3:添加代码生成一个随机数。</target>
        </trans-unit>
        <trans-unit id="af8d17e9229f2c43969b2a69094d2f3e5fe3e655" translate="yes" xml:space="preserve">
          <source>Listing 2-4: Handling the possible return values of comparing two numbers</source>
          <target state="translated">清单2-4:处理比较两个数字的可能返回值。</target>
        </trans-unit>
        <trans-unit id="33a15234f088792400d37a594c696c9143e6c6ec" translate="yes" xml:space="preserve">
          <source>Listing 2-5: Ignoring a non-number guess and asking for another guess instead of crashing the program</source>
          <target state="translated">清单2-5:忽略一个非数字的猜测,并要求另一个猜测,而不是让程序崩溃。</target>
        </trans-unit>
        <trans-unit id="0d0918b00c7ec6bb184545ca63e60fa4939bef0d" translate="yes" xml:space="preserve">
          <source>Listing 2-6: Complete guessing game code</source>
          <target state="translated">清单2-6:完整的猜谜游戏代码</target>
        </trans-unit>
        <trans-unit id="6186619545c6ee347071e7ca7d304239cefd9d87" translate="yes" xml:space="preserve">
          <source>Listing 20-10: Simulating a slow request by recognizing &lt;em&gt;/sleep&lt;/em&gt; and sleeping for 5 seconds</source>
          <target state="translated">清单20-10：通过识别&lt;em&gt;/ sleep&lt;/em&gt;和休眠5秒来模拟一个缓慢的请求</target>
        </trans-unit>
        <trans-unit id="c77c5f9f8216534967e6aa65016f2ce1e522d44b" translate="yes" xml:space="preserve">
          <source>Listing 20-11: Spawning a new thread for each stream</source>
          <target state="translated">清单20-11:为每个流生成一个新线程。</target>
        </trans-unit>
        <trans-unit id="490b74dd78fbac67e3686c02aa9503e4dfb82b08" translate="yes" xml:space="preserve">
          <source>Listing 20-12: Our ideal &lt;code&gt;ThreadPool&lt;/code&gt; interface</source>
          <target state="translated">清单20-12：我们理想的 &lt;code&gt;ThreadPool&lt;/code&gt; 接口</target>
        </trans-unit>
        <trans-unit id="2522ba33dbd20be373e69103631f87861291c162" translate="yes" xml:space="preserve">
          <source>Listing 20-13: Implementing &lt;code&gt;ThreadPool::new&lt;/code&gt; to panic if &lt;code&gt;size&lt;/code&gt; is zero</source>
          <target state="translated">清单20-13：如果 &lt;code&gt;size&lt;/code&gt; 为零，则使 &lt;code&gt;ThreadPool::new&lt;/code&gt; 恐慌</target>
        </trans-unit>
        <trans-unit id="17f32c438999cbe2243fdcfe5e366cb33ba2affa" translate="yes" xml:space="preserve">
          <source>Listing 20-14: Creating a vector for &lt;code&gt;ThreadPool&lt;/code&gt; to hold the threads</source>
          <target state="translated">清单20-14：为 &lt;code&gt;ThreadPool&lt;/code&gt; 创建一个向量来保存线程</target>
        </trans-unit>
        <trans-unit id="9da4f1d3e6c1f786010f397f2fd75fddc7491385" translate="yes" xml:space="preserve">
          <source>Listing 20-15: Modifying &lt;code&gt;ThreadPool&lt;/code&gt; to hold &lt;code&gt;Worker&lt;/code&gt; instances instead of holding threads directly</source>
          <target state="translated">清单20-15：修改 &lt;code&gt;ThreadPool&lt;/code&gt; 以保存 &lt;code&gt;Worker&lt;/code&gt; 实例，而不是直接保存线程</target>
        </trans-unit>
        <trans-unit id="56fbc0b9cc0275a64d6a40c9a37ce081653cc6f5" translate="yes" xml:space="preserve">
          <source>Listing 20-16: Modifying &lt;code&gt;ThreadPool&lt;/code&gt; to store the sending end of a channel that sends &lt;code&gt;Job&lt;/code&gt; instances</source>
          <target state="translated">清单20-16：修改 &lt;code&gt;ThreadPool&lt;/code&gt; 以存储发送 &lt;code&gt;Job&lt;/code&gt; 实例的通道的发送端</target>
        </trans-unit>
        <trans-unit id="f85cb389f568fb1fa76f6154929625041a887ad1" translate="yes" xml:space="preserve">
          <source>Listing 20-17: Passing the receiving end of the channel to the workers</source>
          <target state="translated">清单20-17:将通道的接收端传给工人。</target>
        </trans-unit>
        <trans-unit id="d30a183ff11a61e9b38867b8a86d78ca2fa07d93" translate="yes" xml:space="preserve">
          <source>Listing 20-18: Sharing the receiving end of the channel among the workers using &lt;code&gt;Arc&lt;/code&gt; and &lt;code&gt;Mutex&lt;/code&gt;</source>
          <target state="translated">清单20-18：使用 &lt;code&gt;Arc&lt;/code&gt; 和 &lt;code&gt;Mutex&lt;/code&gt; 在工作人员之间共享通道的接收端</target>
        </trans-unit>
        <trans-unit id="841cf9bc324d23f260e6d9ec8f63c8e66b6e6aae" translate="yes" xml:space="preserve">
          <source>Listing 20-19: Creating a &lt;code&gt;Job&lt;/code&gt; type alias for a &lt;code&gt;Box&lt;/code&gt; that holds each closure and then sending the job down the channel</source>
          <target state="translated">清单20-19：为保存每个闭包的 &lt;code&gt;Box&lt;/code&gt; 创建 &lt;code&gt;Job&lt;/code&gt; 类型别名，然后将其发送到通道</target>
        </trans-unit>
        <trans-unit id="0a2d9c3b8202a9c489e5874aab92dcbb628c7914" translate="yes" xml:space="preserve">
          <source>Listing 20-1: Listening for incoming streams and printing a message when we receive a stream</source>
          <target state="translated">清单20-1:当我们收到一个流时,监听传入的流并打印一条消息。</target>
        </trans-unit>
        <trans-unit id="4d16d200911e1c27e67c19a6df63099563502faf" translate="yes" xml:space="preserve">
          <source>Listing 20-20: Receiving and executing the jobs in the worker&amp;rsquo;s thread</source>
          <target state="translated">清单20-20：在工作线程中接收和执行作业</target>
        </trans-unit>
        <trans-unit id="647644f5eafb20cf48cea22601269ed2b77605f4" translate="yes" xml:space="preserve">
          <source>Listing 20-21: Adding a new trait &lt;code&gt;FnBox&lt;/code&gt; to work around the current limitations of &lt;code&gt;Box&amp;lt;FnOnce()&amp;gt;&lt;/code&gt;</source>
          <target state="translated">清单20-21：添加新特征 &lt;code&gt;FnBox&lt;/code&gt; 来解决 &lt;code&gt;Box&amp;lt;FnOnce()&amp;gt;&lt;/code&gt; 当前的局限性</target>
        </trans-unit>
        <trans-unit id="b7ce8f7a4b9223ab75f3a0d79b7b0cfb48ad0809" translate="yes" xml:space="preserve">
          <source>Listing 20-21: An alternative implementation of &lt;code&gt;Worker::new&lt;/code&gt; using &lt;code&gt;while let&lt;/code&gt;</source>
          <target state="translated">清单20-21：使用 &lt;code&gt;while let&lt;/code&gt; 的 &lt;code&gt;Worker::new&lt;/code&gt; 的替代实现</target>
        </trans-unit>
        <trans-unit id="9951af4e66c939c862100b93f3e377ad1bab764f" translate="yes" xml:space="preserve">
          <source>Listing 20-22: An alternative implementation of &lt;code&gt;Worker::new&lt;/code&gt; using &lt;code&gt;while let&lt;/code&gt;</source>
          <target state="translated">清单20-22：使用 &lt;code&gt;while let&lt;/code&gt; 的 &lt;code&gt;Worker::new&lt;/code&gt; 的替代实现</target>
        </trans-unit>
        <trans-unit id="2d09a00b2f6c7708a05aff5e7b9697cffa40d67f" translate="yes" xml:space="preserve">
          <source>Listing 20-22: Joining each thread when the thread pool goes out of scope</source>
          <target state="translated">清单20-22:当线程池超出范围时加入每个线程。</target>
        </trans-unit>
        <trans-unit id="a296253ebec40fe8302bfd2243313af4f8547a4e" translate="yes" xml:space="preserve">
          <source>Listing 20-23: Joining each thread when the thread pool goes out of scope</source>
          <target state="translated">清单20-23:当线程池超出范围时加入每个线程</target>
        </trans-unit>
        <trans-unit id="9b22686838aacbc9e57545b76a48f6eb54b3fbbe" translate="yes" xml:space="preserve">
          <source>Listing 20-23: Sending and receiving &lt;code&gt;Message&lt;/code&gt; values and exiting the loop if a &lt;code&gt;Worker&lt;/code&gt; receives &lt;code&gt;Message::Terminate&lt;/code&gt;</source>
          <target state="translated">清单20-23：发送和接收 &lt;code&gt;Message&lt;/code&gt; 值，如果 &lt;code&gt;Worker&lt;/code&gt; 收到 &lt;code&gt;Message::Terminate&lt;/code&gt; ，则退出循环</target>
        </trans-unit>
        <trans-unit id="21ba4cb1a9d207e86986a91e29b5c0edb2efd0c3" translate="yes" xml:space="preserve">
          <source>Listing 20-24: Sending &lt;code&gt;Message::Terminate&lt;/code&gt; to the workers before calling &lt;code&gt;join&lt;/code&gt; on each worker thread</source>
          <target state="translated">清单20-24：在每个工作线程上调用 &lt;code&gt;join&lt;/code&gt; 之前，向工作线程发送 &lt;code&gt;Message::Terminate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4ce0ae841f01e7178673adbbf0ad07461277ddc" translate="yes" xml:space="preserve">
          <source>Listing 20-24: Sending and receiving &lt;code&gt;Message&lt;/code&gt; values and exiting the loop if a &lt;code&gt;Worker&lt;/code&gt; receives &lt;code&gt;Message::Terminate&lt;/code&gt;</source>
          <target state="translated">清单20-24：发送和接收 &lt;code&gt;Message&lt;/code&gt; 值，如果 &lt;code&gt;Worker&lt;/code&gt; 收到 &lt;code&gt;Message::Terminate&lt;/code&gt; ，则退出循环</target>
        </trans-unit>
        <trans-unit id="29d2ea0bbc5319f33a55cd0b85d771dffd7474e4" translate="yes" xml:space="preserve">
          <source>Listing 20-25: Sending &lt;code&gt;Message::Terminate&lt;/code&gt; to the workers before calling &lt;code&gt;join&lt;/code&gt; on each worker thread</source>
          <target state="translated">清单20-25：在每个工作线程上调用 &lt;code&gt;join&lt;/code&gt; 之前，向工作线程发送 &lt;code&gt;Message::Terminate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae8cc5a7cf07b2270161c49e58dcfe19c9ee4304" translate="yes" xml:space="preserve">
          <source>Listing 20-25: Shut down the server after serving two requests by exiting the loop</source>
          <target state="translated">清单 20-25:在服务两个请求后退出循环,关闭服务器。</target>
        </trans-unit>
        <trans-unit id="e608ac3da55b751debf169a89c8e9a8691843148" translate="yes" xml:space="preserve">
          <source>Listing 20-26: Shut down the server after serving two requests by exiting the loop</source>
          <target state="translated">清单20-26:在服务两个请求后退出循环关闭服务器</target>
        </trans-unit>
        <trans-unit id="f173c615ede21211278d9807de835c93a5e1f4ea" translate="yes" xml:space="preserve">
          <source>Listing 20-2: Reading from the &lt;code&gt;TcpStream&lt;/code&gt; and printing the data</source>
          <target state="translated">清单20-2：从 &lt;code&gt;TcpStream&lt;/code&gt; 读取并打印数据</target>
        </trans-unit>
        <trans-unit id="fd05c1361038c612312e8cc1d37b42ca715be238" translate="yes" xml:space="preserve">
          <source>Listing 20-3: Writing a tiny successful HTTP response to the stream</source>
          <target state="translated">清单20-3:编写一个微小的成功的HTTP响应流</target>
        </trans-unit>
        <trans-unit id="a8a7e3303b2df74786cd8877ab67f397f5337c03" translate="yes" xml:space="preserve">
          <source>Listing 20-4: A sample HTML file to return in a response</source>
          <target state="translated">清单20-4:在响应中返回的HTML文件示例</target>
        </trans-unit>
        <trans-unit id="00ae38e218c5bb3f97a75cad8df12e9b0d020593" translate="yes" xml:space="preserve">
          <source>Listing 20-5: Sending the contents of &lt;em&gt;hello.html&lt;/em&gt; as the body of the response</source>
          <target state="translated">清单20-5：发送&lt;em&gt;hello.html&lt;/em&gt;的内容作为响应的主体</target>
        </trans-unit>
        <trans-unit id="9d1f02cb4b09980a87d79d0547c49358fc614eb0" translate="yes" xml:space="preserve">
          <source>Listing 20-6: Matching the request and handling requests to &lt;em&gt;/&lt;/em&gt; differently from other requests</source>
          <target state="translated">清单20-6：匹配请求和处理请求&lt;em&gt;/&lt;/em&gt;从其他请求不同</target>
        </trans-unit>
        <trans-unit id="f8348546992791302bf0d85900165079b1714256" translate="yes" xml:space="preserve">
          <source>Listing 20-7: Responding with status code 404 and an error page if anything other than &lt;em&gt;/&lt;/em&gt; was requested</source>
          <target state="translated">清单20-7：如果请求了&lt;em&gt;/&lt;/em&gt;以外的其他内容，则返回状态码404和错误页面</target>
        </trans-unit>
        <trans-unit id="b07ae72c083b1a899a2a424356f010f0e77e0f78" translate="yes" xml:space="preserve">
          <source>Listing 20-8: Sample content for the page to send back with any 404 response</source>
          <target state="translated">清单20-8:任何404响应的页面发回的内容样本。</target>
        </trans-unit>
        <trans-unit id="979c0bf09be8b693a0b7eb5bf1b313cf1df5527a" translate="yes" xml:space="preserve">
          <source>Listing 20-9: Refactoring the &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt; blocks to contain only the code that differs between the two cases</source>
          <target state="translated">清单20-9：重构 &lt;code&gt;if&lt;/code&gt; 和 &lt;code&gt;else&lt;/code&gt; 块，使其仅包含两种情况之间不同的代码</target>
        </trans-unit>
        <trans-unit id="9b9fceb9eb03a3f9c4e1d74cfa6029d7dcce46bb" translate="yes" xml:space="preserve">
          <source>Listing 3-1: A &lt;code&gt;main&lt;/code&gt; function declaration containing one statement</source>
          <target state="translated">清单3-1：包含一个语句的 &lt;code&gt;main&lt;/code&gt; 函数声明</target>
        </trans-unit>
        <trans-unit id="e6d53ab22ffb27dcb257a8700d46cbd5dfced9fc" translate="yes" xml:space="preserve">
          <source>Listing 3-2: Assigning the result of an &lt;code&gt;if&lt;/code&gt; expression to a variable</source>
          <target state="translated">清单3-2：将 &lt;code&gt;if&lt;/code&gt; 表达式的结果分配给变量</target>
        </trans-unit>
        <trans-unit id="ff679afd5d6d867cbcc39b449d2a998a25435cd2" translate="yes" xml:space="preserve">
          <source>Listing 3-3: Using a &lt;code&gt;while&lt;/code&gt; loop to run code while a condition holds true</source>
          <target state="translated">清单3-3：在条件成立的情况下使用 &lt;code&gt;while&lt;/code&gt; 循环运行代码</target>
        </trans-unit>
        <trans-unit id="583d2039afeb95cdf5c7e0b2a32879f9b935cc5f" translate="yes" xml:space="preserve">
          <source>Listing 3-4: Looping through each element of a collection using a &lt;code&gt;while&lt;/code&gt; loop</source>
          <target state="translated">清单3-4：使用 &lt;code&gt;while&lt;/code&gt; 循环遍历集合的每个元素</target>
        </trans-unit>
        <trans-unit id="87438bb574a616fffd251f60fd596f3c3d541ee3" translate="yes" xml:space="preserve">
          <source>Listing 3-5: Looping through each element of a collection using a &lt;code&gt;for&lt;/code&gt; loop</source>
          <target state="translated">清单3-5：使用 &lt;code&gt;for&lt;/code&gt; 循环遍历集合的每个元素</target>
        </trans-unit>
        <trans-unit id="071776e108222090fe7e34b6b12a0635af1ea613" translate="yes" xml:space="preserve">
          <source>Listing 4-1: A variable and the scope in which it is valid</source>
          <target state="translated">清单 4-1:变量和它的有效范围</target>
        </trans-unit>
        <trans-unit id="a8bd4a8ada8ca53b2cd329e28cf012af8595d26c" translate="yes" xml:space="preserve">
          <source>Listing 4-2: Assigning the integer value of variable &lt;code&gt;x&lt;/code&gt; to &lt;code&gt;y&lt;/code&gt;</source>
          <target state="translated">清单4-2：分配变量的整数值 &lt;code&gt;x&lt;/code&gt; 到 &lt;code&gt;y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f80135eeedb7d42bfb604d43634f10e56b9276d8" translate="yes" xml:space="preserve">
          <source>Listing 4-3: Functions with ownership and scope annotated</source>
          <target state="translated">清单4-3:带有所有权和范围注释的函数</target>
        </trans-unit>
        <trans-unit id="08743211367b36a2bf28bc72aee62ce3d8e0a427" translate="yes" xml:space="preserve">
          <source>Listing 4-4: Transferring ownership of return values</source>
          <target state="translated">清单4-4:转移返回值的所有权</target>
        </trans-unit>
        <trans-unit id="c4cdffa6571f231b7e6fd5e7bf3f5073aceb67af" translate="yes" xml:space="preserve">
          <source>Listing 4-5: Returning ownership of parameters</source>
          <target state="translated">清单4-5:返回参数的所有权</target>
        </trans-unit>
        <trans-unit id="3222eb0c315d3632f2a93aa2c946727b3f3aa187" translate="yes" xml:space="preserve">
          <source>Listing 4-6: Attempting to modify a borrowed value</source>
          <target state="translated">清单4-6:尝试修改借贷价值。</target>
        </trans-unit>
        <trans-unit id="e224cd6b255dc9146281f3ef7b7408c55d16c747" translate="yes" xml:space="preserve">
          <source>Listing 4-7: The &lt;code&gt;first_word&lt;/code&gt; function that returns a byte index value into the &lt;code&gt;String&lt;/code&gt; parameter</source>
          <target state="translated">清单4-7： &lt;code&gt;first_word&lt;/code&gt; 函数，该函数将字节索引值返回到 &lt;code&gt;String&lt;/code&gt; 参数中</target>
        </trans-unit>
        <trans-unit id="5d0609b7dcfd67002e143a43f1ddecb06483b85d" translate="yes" xml:space="preserve">
          <source>Listing 4-8: Storing the result from calling the &lt;code&gt;first_word&lt;/code&gt; function and then changing the &lt;code&gt;String&lt;/code&gt; contents</source>
          <target state="translated">清单4-8：存储调用 &lt;code&gt;first_word&lt;/code&gt; 函数然后更改 &lt;code&gt;String&lt;/code&gt; 内容的结果</target>
        </trans-unit>
        <trans-unit id="87c1cb4aabafa6069efb32d5af61cd0fb08e6796" translate="yes" xml:space="preserve">
          <source>Listing 4-9: Improving the &lt;code&gt;first_word&lt;/code&gt; function by using a string slice for the type of the &lt;code&gt;s&lt;/code&gt; parameter</source>
          <target state="translated">清单4-9：通过使用字符串切片作为 &lt;code&gt;s&lt;/code&gt; 参数的类型来改进 &lt;code&gt;first_word&lt;/code&gt; 函数</target>
        </trans-unit>
        <trans-unit id="f5936c4459ffd7d02b56c5c0e59e5f7deb06c81b" translate="yes" xml:space="preserve">
          <source>Listing 5-10: Defining a &lt;code&gt;Rectangle&lt;/code&gt; struct</source>
          <target state="translated">清单5-10：定义 &lt;code&gt;Rectangle&lt;/code&gt; 结构</target>
        </trans-unit>
        <trans-unit id="215d7b48452bb1a7e4e29de9b63af2a7536d6502" translate="yes" xml:space="preserve">
          <source>Listing 5-11: Attempting to print a &lt;code&gt;Rectangle&lt;/code&gt; instance</source>
          <target state="translated">清单5-11：尝试打印一个 &lt;code&gt;Rectangle&lt;/code&gt; 实例</target>
        </trans-unit>
        <trans-unit id="51e4581a0a69246f469790078df639c28316484a" translate="yes" xml:space="preserve">
          <source>Listing 5-12: Adding the annotation to derive the &lt;code&gt;Debug&lt;/code&gt; trait and printing the &lt;code&gt;Rectangle&lt;/code&gt; instance using debug formatting</source>
          <target state="translated">清单5-12：添加注释以派生 &lt;code&gt;Debug&lt;/code&gt; 特性，并使用debug格式打印 &lt;code&gt;Rectangle&lt;/code&gt; 实例</target>
        </trans-unit>
        <trans-unit id="699bc91c771ab1aa757989a11761198687ddb028" translate="yes" xml:space="preserve">
          <source>Listing 5-13: Defining an &lt;code&gt;area&lt;/code&gt; method on the &lt;code&gt;Rectangle&lt;/code&gt; struct</source>
          <target state="translated">清单5-13：在 &lt;code&gt;Rectangle&lt;/code&gt; 结构上定义一个 &lt;code&gt;area&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="a7947d12bdeedd386158963338c53b8bc7ffe517" translate="yes" xml:space="preserve">
          <source>Listing 5-14: Using the as-yet-unwritten &lt;code&gt;can_hold&lt;/code&gt; method</source>
          <target state="translated">清单5-14：使用尚未 &lt;code&gt;can_hold&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="ac5804944047dd0d4d02603d3156bc632d3eb2b1" translate="yes" xml:space="preserve">
          <source>Listing 5-15: Implementing the &lt;code&gt;can_hold&lt;/code&gt; method on &lt;code&gt;Rectangle&lt;/code&gt; that takes another &lt;code&gt;Rectangle&lt;/code&gt; instance as a parameter</source>
          <target state="translated">清单5-15：在 &lt;code&gt;Rectangle&lt;/code&gt; 上实现 &lt;code&gt;can_hold&lt;/code&gt; 方法，该方法将另一个 &lt;code&gt;Rectangle&lt;/code&gt; 实例作为参数</target>
        </trans-unit>
        <trans-unit id="c33d8fdde14f54cb5966c1287889cdff4840627d" translate="yes" xml:space="preserve">
          <source>Listing 5-16: Rewriting Listing 5-15 using multiple &lt;code&gt;impl&lt;/code&gt; blocks</source>
          <target state="translated">清单5-16：使用多个 &lt;code&gt;impl&lt;/code&gt; 块重写清单5-15</target>
        </trans-unit>
        <trans-unit id="0d520975db988eb4fce4d70d69c7071a6ef03266" translate="yes" xml:space="preserve">
          <source>Listing 5-1: A &lt;code&gt;User&lt;/code&gt; struct definition</source>
          <target state="translated">清单5-1： &lt;code&gt;User&lt;/code&gt; 结构定义</target>
        </trans-unit>
        <trans-unit id="8977673d81d2f7d288e8671e5db4e29f849d9ecf" translate="yes" xml:space="preserve">
          <source>Listing 5-2: Creating an instance of the &lt;code&gt;User&lt;/code&gt; struct</source>
          <target state="translated">清单5-2：创建 &lt;code&gt;User&lt;/code&gt; 结构的实例</target>
        </trans-unit>
        <trans-unit id="1f41e38c696b4c7289ac53c56e434aedcaeb6f66" translate="yes" xml:space="preserve">
          <source>Listing 5-3: Changing the value in the &lt;code&gt;email&lt;/code&gt; field of a &lt;code&gt;User&lt;/code&gt; instance</source>
          <target state="translated">清单5-3：更改 &lt;code&gt;User&lt;/code&gt; 实例的 &lt;code&gt;email&lt;/code&gt; 字段中的值</target>
        </trans-unit>
        <trans-unit id="db94d7ba29205268f6081fc57937619cd38d7b59" translate="yes" xml:space="preserve">
          <source>Listing 5-4 shows a &lt;code&gt;build_user&lt;/code&gt; function that returns a &lt;code&gt;User&lt;/code&gt; instance with the given email and username. The &lt;code&gt;active&lt;/code&gt; field gets the value of &lt;code&gt;true&lt;/code&gt;, and the &lt;code&gt;sign_in_count&lt;/code&gt; gets a value of &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">清单5-4显示了一个 &lt;code&gt;build_user&lt;/code&gt; 函数，该函数返回具有给定电子邮件和用户名的 &lt;code&gt;User&lt;/code&gt; 实例。该 &lt;code&gt;active&lt;/code&gt; 场得到的值 &lt;code&gt;true&lt;/code&gt; ，并且 &lt;code&gt;sign_in_count&lt;/code&gt; 得到的值 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6180049bbfd730536060167de16372ef8ac3e4b9" translate="yes" xml:space="preserve">
          <source>Listing 5-4: A &lt;code&gt;build_user&lt;/code&gt; function that takes an email and username and returns a &lt;code&gt;User&lt;/code&gt; instance</source>
          <target state="translated">清单5-4：一个 &lt;code&gt;build_user&lt;/code&gt; 函数，该函数接受电子邮件和用户名并返回一个 &lt;code&gt;User&lt;/code&gt; 实例</target>
        </trans-unit>
        <trans-unit id="34728d882e237dc7414c13bed692d3b4929c4000" translate="yes" xml:space="preserve">
          <source>Listing 5-5: A &lt;code&gt;build_user&lt;/code&gt; function that uses field init shorthand because the &lt;code&gt;email&lt;/code&gt; and &lt;code&gt;username&lt;/code&gt; parameters have the same name as struct fields</source>
          <target state="translated">清单5-5： &lt;code&gt;build_user&lt;/code&gt; 函数使用字段init的简写形式，因为 &lt;code&gt;email&lt;/code&gt; 和 &lt;code&gt;username&lt;/code&gt; 参数的名称与struct字段的名称相同</target>
        </trans-unit>
        <trans-unit id="ec811ef73f249a9f5effaa4a387e2b4034ee1f33" translate="yes" xml:space="preserve">
          <source>Listing 5-6: Creating a new &lt;code&gt;User&lt;/code&gt; instance using some of the values from &lt;code&gt;user1&lt;/code&gt;</source>
          <target state="translated">清单5-6：使用 &lt;code&gt;user1&lt;/code&gt; 中的某些值创建一个新的 &lt;code&gt;User&lt;/code&gt; 实例</target>
        </trans-unit>
        <trans-unit id="b1042745496de77683494947cb9ddb8ceed34b79" translate="yes" xml:space="preserve">
          <source>Listing 5-7: Using struct update syntax to set new &lt;code&gt;email&lt;/code&gt; and &lt;code&gt;username&lt;/code&gt; values for a &lt;code&gt;User&lt;/code&gt; instance but use the rest of the values from the fields of the instance in the &lt;code&gt;user1&lt;/code&gt; variable</source>
          <target state="translated">清单5-7：使用结构更新语法为 &lt;code&gt;User&lt;/code&gt; 实例设置新的 &lt;code&gt;email&lt;/code&gt; 和 &lt;code&gt;username&lt;/code&gt; 值，但使用 &lt;code&gt;user1&lt;/code&gt; 变量中实例字段的其余值</target>
        </trans-unit>
        <trans-unit id="e14121427e21bb563614dab69325b3429a192108" translate="yes" xml:space="preserve">
          <source>Listing 5-8: Calculating the area of a rectangle specified by separate width and height variables</source>
          <target state="translated">清单 5-8:计算由单独的宽度和高度变量指定的矩形的面积。</target>
        </trans-unit>
        <trans-unit id="7bbfc498e81af47ae5c6d73043fae00ce626556b" translate="yes" xml:space="preserve">
          <source>Listing 5-9 shows another version of our program that uses tuples.</source>
          <target state="translated">清单5-9显示了我们程序的另一个使用元组的版本。</target>
        </trans-unit>
        <trans-unit id="6a953b763de90df2dde4e24bf54ab976b248c596" translate="yes" xml:space="preserve">
          <source>Listing 5-9: Specifying the width and height of the rectangle with a tuple</source>
          <target state="translated">清单5-9:用元组指定矩形的宽度和高度。</target>
        </trans-unit>
        <trans-unit id="317a48edaf28b6e0bc990dd7fdac683d53540196" translate="yes" xml:space="preserve">
          <source>Listing 6-1: Storing the data and &lt;code&gt;IpAddrKind&lt;/code&gt; variant of an IP address using a &lt;code&gt;struct&lt;/code&gt;</source>
          <target state="translated">清单6-1：使用 &lt;code&gt;struct&lt;/code&gt; 存储IP地址的数据和 &lt;code&gt;IpAddrKind&lt;/code&gt; 变体</target>
        </trans-unit>
        <trans-unit id="1601efc6142f63b762ff62527eea307503181b6a" translate="yes" xml:space="preserve">
          <source>Listing 6-2: A &lt;code&gt;Message&lt;/code&gt; enum whose variants each store different amounts and types of values</source>
          <target state="translated">清单6-2：一个 &lt;code&gt;Message&lt;/code&gt; 枚举，其变体每个都存储不同数量和类型的值</target>
        </trans-unit>
        <trans-unit id="bb2eab7c4a0535ef9e635c657b2617ba75b207b2" translate="yes" xml:space="preserve">
          <source>Listing 6-3: An enum and a &lt;code&gt;match&lt;/code&gt; expression that has the variants of the enum as its patterns</source>
          <target state="translated">清单6-3：一个枚举和一个 &lt;code&gt;match&lt;/code&gt; 表达式，以该枚举的变体作为其模式</target>
        </trans-unit>
        <trans-unit id="d6c517233a50d5aa0d34c931713369f59c96a142" translate="yes" xml:space="preserve">
          <source>Listing 6-4: A &lt;code&gt;Coin&lt;/code&gt; enum in which the &lt;code&gt;Quarter&lt;/code&gt; variant also holds a &lt;code&gt;UsState&lt;/code&gt; value</source>
          <target state="translated">清单6-4：一个 &lt;code&gt;Coin&lt;/code&gt; 枚举，其中 &lt;code&gt;Quarter&lt;/code&gt; 变体也包含 &lt;code&gt;UsState&lt;/code&gt; 值</target>
        </trans-unit>
        <trans-unit id="366c8a5cb8f6569790b9502993e020f80e58e7d9" translate="yes" xml:space="preserve">
          <source>Listing 6-5: A function that uses a &lt;code&gt;match&lt;/code&gt; expression on an &lt;code&gt;Option&amp;lt;i32&amp;gt;&lt;/code&gt;</source>
          <target state="translated">清单6-5：在 &lt;code&gt;Option&amp;lt;i32&amp;gt;&lt;/code&gt; 上使用 &lt;code&gt;match&lt;/code&gt; 表达式的函数</target>
        </trans-unit>
        <trans-unit id="b44856bc0b2ade67a9a9034ba41c6088eb8b5876" translate="yes" xml:space="preserve">
          <source>Listing 6-6: A &lt;code&gt;match&lt;/code&gt; that only cares about executing code when the value is &lt;code&gt;Some(3)&lt;/code&gt;</source>
          <target state="translated">清单6-6：仅当值是 &lt;code&gt;Some(3)&lt;/code&gt; 时才关心执行代码的 &lt;code&gt;match&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9aea56a1642523d4f586445bbbe1e6df04bda515" translate="yes" xml:space="preserve">
          <source>Listing 7-10: Designating an enum as public makes all its variants public</source>
          <target state="translated">清单 7-10:将一个枚举指定为公共的,它的所有变体都是公共的。</target>
        </trans-unit>
        <trans-unit id="bf59002e067b4260f78026ae1cbff2f4c945bcd3" translate="yes" xml:space="preserve">
          <source>Listing 7-11: Bringing a module into scope with &lt;code&gt;use&lt;/code&gt;</source>
          <target state="translated">代码清单7-11：将模块纳入 &lt;code&gt;use&lt;/code&gt; 范围</target>
        </trans-unit>
        <trans-unit id="627f0fb141903559b8c35dc9a30c45aa787531ae" translate="yes" xml:space="preserve">
          <source>Listing 7-12: Bringing a module into scope with &lt;code&gt;use&lt;/code&gt; and a relative path</source>
          <target state="translated">清单7-12：通过 &lt;code&gt;use&lt;/code&gt; 和相对路径将模块引入作用域</target>
        </trans-unit>
        <trans-unit id="2eaa640be3385f0ca9c0fa9e7ba534043bef56b3" translate="yes" xml:space="preserve">
          <source>Listing 7-12: Bringing a module into scope with &lt;code&gt;use&lt;/code&gt; and a relative path starting with &lt;code&gt;self&lt;/code&gt;</source>
          <target state="translated">清单7-12：将模块放入 &lt;code&gt;use&lt;/code&gt; 范围，并以 &lt;code&gt;self&lt;/code&gt; 开头的相对路径</target>
        </trans-unit>
        <trans-unit id="7307f72b192d3253733cf7ac65bc967e5201e698" translate="yes" xml:space="preserve">
          <source>Listing 7-13: Bringing the &lt;code&gt;add_to_waitlist&lt;/code&gt; function into scope with &lt;code&gt;use&lt;/code&gt;, which is unidiomatic</source>
          <target state="translated">清单7-13： &lt;code&gt;use&lt;/code&gt; 将 &lt;code&gt;add_to_waitlist&lt;/code&gt; 函数引入作用域，这很简单</target>
        </trans-unit>
        <trans-unit id="4bfe10f5f56827d0c30e6d426efc295cb82f3011" translate="yes" xml:space="preserve">
          <source>Listing 7-14: Bringing &lt;code&gt;HashMap&lt;/code&gt; into scope in an idiomatic way</source>
          <target state="translated">清单7-14：以惯用的方式将 &lt;code&gt;HashMap&lt;/code&gt; 纳入范围</target>
        </trans-unit>
        <trans-unit id="13cc4e98f442cfec3a674fc14b744bd81731e983" translate="yes" xml:space="preserve">
          <source>Listing 7-15: Bringing two types with the same name into the same scope requires using their parent modules.</source>
          <target state="translated">清单 7-15.将两个同名的类型带入同一作用域需要使用它们的父模块。将两个同名的类型带入同一个作用域,需要使用它们的父模块。</target>
        </trans-unit>
        <trans-unit id="84d695a06193ab052dbc08a9625b8eec61fc744f" translate="yes" xml:space="preserve">
          <source>Listing 7-16: Renaming a type when it&amp;rsquo;s brought into scope with the &lt;code&gt;as&lt;/code&gt; keyword</source>
          <target state="translated">清单7-16：使用 &lt;code&gt;as&lt;/code&gt; 关键字将类型带入范围时重命名</target>
        </trans-unit>
        <trans-unit id="b9a4845143b70c35aeb28053a3eeca0d2c48207c" translate="yes" xml:space="preserve">
          <source>Listing 7-17 shows the code in Listing 7-11 with &lt;code&gt;use&lt;/code&gt; in the root module changed to &lt;code&gt;pub use&lt;/code&gt;.</source>
          <target state="translated">清单7-17所示的代码清单7-11与 &lt;code&gt;use&lt;/code&gt; 根模块中变更为 &lt;code&gt;pub use&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5775bbe7f173f5b092d3b5595e5501b634454927" translate="yes" xml:space="preserve">
          <source>Listing 7-17: Making a name available for any code to use from a new scope with &lt;code&gt;pub use&lt;/code&gt;</source>
          <target state="translated">清单7-17：通过 &lt;code&gt;pub use&lt;/code&gt; 在新作用域中使名称可用于任何代码</target>
        </trans-unit>
        <trans-unit id="912681010ae055ad4a4e14893b49ef9e67bf7a57" translate="yes" xml:space="preserve">
          <source>Listing 7-18: Specifying a nested path to bring multiple items with the same prefix into scope</source>
          <target state="translated">清单 7-18:指定一个嵌套路径,将具有相同前缀的多个项目纳入作用域中</target>
        </trans-unit>
        <trans-unit id="7929ee4086c93140005baff67b15092af266a6f9" translate="yes" xml:space="preserve">
          <source>Listing 7-19: Two &lt;code&gt;use&lt;/code&gt; statements where one is a subpath of the other</source>
          <target state="translated">清单7-19：两个 &lt;code&gt;use&lt;/code&gt; 语句，其中一个是另一个的子路径</target>
        </trans-unit>
        <trans-unit id="a2aaaa4b01d1723ea36359ddbffb4df019af229b" translate="yes" xml:space="preserve">
          <source>Listing 7-1: A &lt;code&gt;front_of_house&lt;/code&gt; module containing other modules that then contain functions</source>
          <target state="translated">清单7-1：一个 &lt;code&gt;front_of_house&lt;/code&gt; 模块，其中包含随后包含功能的其他模块</target>
        </trans-unit>
        <trans-unit id="7ace7d42180fea41417a89f31ff66a7a735c654d" translate="yes" xml:space="preserve">
          <source>Listing 7-2 shows the module tree for the structure in Listing 7-1.</source>
          <target state="translated">清单7-2显示了清单7-1中结构的模块树。</target>
        </trans-unit>
        <trans-unit id="5cce3b1fe3cef4127713826e0a1511402930e99e" translate="yes" xml:space="preserve">
          <source>Listing 7-20: Combining the paths in Listing 7-19 into one &lt;code&gt;use&lt;/code&gt; statement</source>
          <target state="translated">清单7-20：将清单7-19中的路径合并为一个 &lt;code&gt;use&lt;/code&gt; 语句</target>
        </trans-unit>
        <trans-unit id="0657fcf2cf161292e1ede5fad919e1df2f0ae319" translate="yes" xml:space="preserve">
          <source>Listing 7-21: Declaring the &lt;code&gt;front_of_house&lt;/code&gt; module whose body will be in &lt;em&gt;src/front_of_house.rs&lt;/em&gt;</source>
          <target state="translated">清单7-21：声明其主体将在&lt;em&gt;src / front_of_house.rs中&lt;/em&gt;的 &lt;code&gt;front_of_house&lt;/code&gt; 模块&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="12fed27a189eb7e953d8431926a31688a62084bf" translate="yes" xml:space="preserve">
          <source>Listing 7-22: Definitions inside the &lt;code&gt;front_of_house&lt;/code&gt; module in &lt;em&gt;src/front_of_house.rs&lt;/em&gt;</source>
          <target state="translated">清单7-22：&lt;em&gt;src / front_of_house.rs中&lt;/em&gt;的 &lt;code&gt;front_of_house&lt;/code&gt; 模块内部的定义&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c69834f077cc0ac84e532ef8edf36827562c8532" translate="yes" xml:space="preserve">
          <source>Listing 7-2: The module tree for the code in Listing 7-1</source>
          <target state="translated">清单7-2:清单7-1中代码的模块树。</target>
        </trans-unit>
        <trans-unit id="17c05eb6de82b1aab0786252e0e077ec97ff008c" translate="yes" xml:space="preserve">
          <source>Listing 7-3: Calling the &lt;code&gt;add_to_waitlist&lt;/code&gt; function using absolute and relative paths</source>
          <target state="translated">清单7-3：使用绝对路径和相对路径调用 &lt;code&gt;add_to_waitlist&lt;/code&gt; 函数</target>
        </trans-unit>
        <trans-unit id="138953296933de5b725582f9130d0b608bf9580f" translate="yes" xml:space="preserve">
          <source>Listing 7-4: Compiler errors from building the code in Listing 7-3</source>
          <target state="translated">清单7-4:在清单7-3中构建代码时的编译器错误。</target>
        </trans-unit>
        <trans-unit id="5358874765e3618db092d71798863b6af357d074" translate="yes" xml:space="preserve">
          <source>Listing 7-5: Declaring the &lt;code&gt;hosting&lt;/code&gt; module as &lt;code&gt;pub&lt;/code&gt; to use it from &lt;code&gt;eat_at_restaurant&lt;/code&gt;</source>
          <target state="translated">清单7-5：从 &lt;code&gt;eat_at_restaurant&lt;/code&gt; 中将 &lt;code&gt;hosting&lt;/code&gt; 模块声明为 &lt;code&gt;pub&lt;/code&gt; 以使用它</target>
        </trans-unit>
        <trans-unit id="dbd4236a7438fe70ec1b7611b01adfc75ff00c6f" translate="yes" xml:space="preserve">
          <source>Listing 7-6: Compiler errors from building the code in Listing 7-5</source>
          <target state="translated">清单7-6:在清单7-5中构建代码的编译器错误。</target>
        </trans-unit>
        <trans-unit id="c3941587d9eaf9be7f1ce3c3583d7701dc52a95d" translate="yes" xml:space="preserve">
          <source>Listing 7-7: Adding the &lt;code&gt;pub&lt;/code&gt; keyword to &lt;code&gt;mod hosting&lt;/code&gt; and &lt;code&gt;fn add_to_waitlist&lt;/code&gt; lets us call the function from &lt;code&gt;eat_at_restaurant&lt;/code&gt;</source>
          <target state="translated">清单7-7：将 &lt;code&gt;pub&lt;/code&gt; 关键字添加到 &lt;code&gt;mod hosting&lt;/code&gt; 和 &lt;code&gt;fn add_to_waitlist&lt;/code&gt; 中,使我们可以从 &lt;code&gt;eat_at_restaurant&lt;/code&gt; 调用该函数</target>
        </trans-unit>
        <trans-unit id="a76fe093faad5f27e1a067c78c0aafcf4b039312" translate="yes" xml:space="preserve">
          <source>Listing 7-8: Calling a function using a relative path starting with &lt;code&gt;super&lt;/code&gt;</source>
          <target state="translated">清单7-8：使用以 &lt;code&gt;super&lt;/code&gt; 开头的相对路径调用函数</target>
        </trans-unit>
        <trans-unit id="26a8780dbfd1610ed031bd14769f19fc17e857a7" translate="yes" xml:space="preserve">
          <source>Listing 7-9: A struct with some public fields and some private fields</source>
          <target state="translated">清单7-9:一个包含一些公共字段和一些私有字段的结构。</target>
        </trans-unit>
        <trans-unit id="ec9e6adb30859e7e4f29693403f451b5e7def42d" translate="yes" xml:space="preserve">
          <source>Listing 8-10: Defining an &lt;code&gt;enum&lt;/code&gt; to store values of different types in one vector</source>
          <target state="translated">清单8-10：定义一个 &lt;code&gt;enum&lt;/code&gt; 以在一个向量中存储不同类型的值</target>
        </trans-unit>
        <trans-unit id="cea93b472282b28767ac501d12597afbe6576f40" translate="yes" xml:space="preserve">
          <source>Listing 8-11: Creating a new, empty &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">清单8-11：创建一个新的空 &lt;code&gt;String&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="449bcdecf538f70bac98718626559a9dec686219" translate="yes" xml:space="preserve">
          <source>Listing 8-12: Using the &lt;code&gt;to_string&lt;/code&gt; method to create a &lt;code&gt;String&lt;/code&gt; from a string literal</source>
          <target state="translated">清单8-12：使用 &lt;code&gt;to_string&lt;/code&gt; 方法来创建一个 &lt;code&gt;String&lt;/code&gt; 从一个字符串文字</target>
        </trans-unit>
        <trans-unit id="525ec57ebd9d64b742269ef80a5a9e1a1645f7b6" translate="yes" xml:space="preserve">
          <source>Listing 8-13: Using the &lt;code&gt;String::from&lt;/code&gt; function to create a &lt;code&gt;String&lt;/code&gt; from a string literal</source>
          <target state="translated">清单8-13：使用 &lt;code&gt;String::from&lt;/code&gt; 函数创建一个 &lt;code&gt;String&lt;/code&gt; 从一个字符串文字</target>
        </trans-unit>
        <trans-unit id="d906213ccce95be9469d5e7e1272b3c261eb636e" translate="yes" xml:space="preserve">
          <source>Listing 8-14: Storing greetings in different languages in strings</source>
          <target state="translated">清单8-14:将不同语言的问候语存储在字符串中。</target>
        </trans-unit>
        <trans-unit id="4e16d57b32c6bb58e6e98758f0d5544954c88fbe" translate="yes" xml:space="preserve">
          <source>Listing 8-15: Appending a string slice to a &lt;code&gt;String&lt;/code&gt; using the &lt;code&gt;push_str&lt;/code&gt; method</source>
          <target state="translated">清单8-15：使用 &lt;code&gt;push_str&lt;/code&gt; 方法将字符串切片附加到 &lt;code&gt;String&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="895983d0f0dfd6b316691d0a283fc6f26b14574d" translate="yes" xml:space="preserve">
          <source>Listing 8-16: Using a string slice after appending its contents to a &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">清单8-16：追加其内容的使用后的字符串切片 &lt;code&gt;String&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be1c3cc71d267147b47e57349e732c62e6e14554" translate="yes" xml:space="preserve">
          <source>Listing 8-17: Adding one character to a &lt;code&gt;String&lt;/code&gt; value using &lt;code&gt;push&lt;/code&gt;</source>
          <target state="translated">清单8-17：使用 &lt;code&gt;push&lt;/code&gt; 向 &lt;code&gt;String&lt;/code&gt; 值添加一个字符</target>
        </trans-unit>
        <trans-unit id="8e49cdf5a7dd6bf63cd0813321de49b8b65881bd" translate="yes" xml:space="preserve">
          <source>Listing 8-18: Using the &lt;code&gt;+&lt;/code&gt; operator to combine two &lt;code&gt;String&lt;/code&gt; values into a new &lt;code&gt;String&lt;/code&gt; value</source>
          <target state="translated">清单8-18：使用 &lt;code&gt;+&lt;/code&gt; 运算符将两个 &lt;code&gt;String&lt;/code&gt; 值组合成一个新的 &lt;code&gt;String&lt;/code&gt; 值</target>
        </trans-unit>
        <trans-unit id="5330837200303e59f08e75f294793b7ee402fe39" translate="yes" xml:space="preserve">
          <source>Listing 8-19: Attempting to use indexing syntax with a String</source>
          <target state="translated">清单 8-19:尝试使用String的索引语法。</target>
        </trans-unit>
        <trans-unit id="223eba8ee062db2b78f2b0de95ae46f68365d0b3" translate="yes" xml:space="preserve">
          <source>Listing 8-1: Creating a new, empty vector to hold values of type &lt;code&gt;i32&lt;/code&gt;</source>
          <target state="translated">清单8-1：创建一个新的空向量来保存 &lt;code&gt;i32&lt;/code&gt; 类型的值</target>
        </trans-unit>
        <trans-unit id="74238a9658332d19668b2827615b25fb5c8271c5" translate="yes" xml:space="preserve">
          <source>Listing 8-20: Creating a new hash map and inserting some keys and values</source>
          <target state="translated">清单 8-20:创建一个新的哈希图并插入一些键和值。</target>
        </trans-unit>
        <trans-unit id="05be5b643eed350dd5cafe3fdd6536c472f47ed7" translate="yes" xml:space="preserve">
          <source>Listing 8-21: Creating a hash map from a list of teams and a list of scores</source>
          <target state="translated">清单 8-21:从队伍和分数列表中创建一个哈希图。</target>
        </trans-unit>
        <trans-unit id="c1972681fe611d0dc8b4a05a054a71a52a976fa0" translate="yes" xml:space="preserve">
          <source>Listing 8-22: Showing that keys and values are owned by the hash map once they&amp;rsquo;re inserted</source>
          <target state="translated">清单8-22：显示键和值一旦插入就由哈希映射拥有</target>
        </trans-unit>
        <trans-unit id="e3917d0559c741a7086f2a76463784d8190476d3" translate="yes" xml:space="preserve">
          <source>Listing 8-23: Accessing the score for the Blue team stored in the hash map</source>
          <target state="translated">清单 8-23:访问存储在哈希图中的蓝队的得分。</target>
        </trans-unit>
        <trans-unit id="2c2c2fb6f8789b4a667ac47de037219e5bfa607d" translate="yes" xml:space="preserve">
          <source>Listing 8-24: Replacing a value stored with a particular key</source>
          <target state="translated">清单 8-24:用一个特定的键替换一个存储的值</target>
        </trans-unit>
        <trans-unit id="da51f9790954bb7ba88a08baf3bbfb3c719c031b" translate="yes" xml:space="preserve">
          <source>Listing 8-25: Using the &lt;code&gt;entry&lt;/code&gt; method to only insert if the key does not already have a value</source>
          <target state="translated">清单8-25：仅在键没有值的情况下，使用 &lt;code&gt;entry&lt;/code&gt; 方法插入</target>
        </trans-unit>
        <trans-unit id="0728ab93b8e476a6cb26b8c39bda73e6af7fad94" translate="yes" xml:space="preserve">
          <source>Listing 8-26: Counting occurrences of words using a hash map that stores words and counts</source>
          <target state="translated">清单 8-26:使用存储单词和计数的哈希图来计算单词的出现次数</target>
        </trans-unit>
        <trans-unit id="5b801284224f3b692ce8aba962be2604afe8af86" translate="yes" xml:space="preserve">
          <source>Listing 8-2: Creating a new vector containing values</source>
          <target state="translated">清单 8-2:创建一个包含值的新向量</target>
        </trans-unit>
        <trans-unit id="5ec25985edb7d257137523f2e85542597e022b7c" translate="yes" xml:space="preserve">
          <source>Listing 8-3: Using the &lt;code&gt;push&lt;/code&gt; method to add values to a vector</source>
          <target state="translated">清单8-3：使用 &lt;code&gt;push&lt;/code&gt; 方法向向量添加值</target>
        </trans-unit>
        <trans-unit id="156f483c8c709fefaaa433516c634cc9665e65bd" translate="yes" xml:space="preserve">
          <source>Listing 8-4: Showing where the vector and its elements are dropped</source>
          <target state="translated">清单8-4:显示向量及其元素被丢弃的位置。</target>
        </trans-unit>
        <trans-unit id="f15358ebeb06032f8545e418cd9bf9d9b52e722b" translate="yes" xml:space="preserve">
          <source>Listing 8-5 shows both methods of accessing a value in a vector, either with indexing syntax or the &lt;code&gt;get&lt;/code&gt; method.</source>
          <target state="translated">清单8-5展示了两种使用索引语法或 &lt;code&gt;get&lt;/code&gt; 方法访问向量中值的方法。</target>
        </trans-unit>
        <trans-unit id="475e3ef70b582308fcd81d0204ad1d386df12e13" translate="yes" xml:space="preserve">
          <source>Listing 8-5: Using indexing syntax or the &lt;code&gt;get&lt;/code&gt; method to access an item in a vector</source>
          <target state="translated">清单8-5：使用索引语法或 &lt;code&gt;get&lt;/code&gt; 方法访问向量中的项</target>
        </trans-unit>
        <trans-unit id="b50a442cace32e79598ac4b4608fcfde6c143dd2" translate="yes" xml:space="preserve">
          <source>Listing 8-6: Attempting to access the element at index 100 in a vector containing five elements</source>
          <target state="translated">清单8-6:试图访问包含五个元素的向量中索引100的元素。</target>
        </trans-unit>
        <trans-unit id="bb8bfe9b988191756b3150651d6052a13005b6d8" translate="yes" xml:space="preserve">
          <source>Listing 8-7: Attempting to add an element to a vector while holding a reference to an item</source>
          <target state="translated">清单8-7:在持有对项目的引用时,试图将一个元素添加到一个向量中。</target>
        </trans-unit>
        <trans-unit id="4f50ef1e57a7d65ae00af617aaadd291853ff28f" translate="yes" xml:space="preserve">
          <source>Listing 8-8: Printing each element in a vector by iterating over the elements using a &lt;code&gt;for&lt;/code&gt; loop</source>
          <target state="translated">清单8-8：通过使用 &lt;code&gt;for&lt;/code&gt; 循环遍历元素来打印向量中的每个元素</target>
        </trans-unit>
        <trans-unit id="dca8580f66c3e936ba07ecc234ef4bdeafdcb3eb" translate="yes" xml:space="preserve">
          <source>Listing 8-9: Iterating over mutable references to elements in a vector</source>
          <target state="translated">清单8-9:对向量中元素的可变引用进行迭代。</target>
        </trans-unit>
        <trans-unit id="6cc132939bab570f42d87e47a7642c3f25c61e61" translate="yes" xml:space="preserve">
          <source>Listing 9-10: A &lt;code&gt;Guess&lt;/code&gt; type that will only continue with values between 1 and 100</source>
          <target state="translated">清单9-10： &lt;code&gt;Guess&lt;/code&gt; 类型，其值将只能继续在1到100之间</target>
        </trans-unit>
        <trans-unit id="4c2e59eaf97a41a1a63401fdbff79c890dd98f4e" translate="yes" xml:space="preserve">
          <source>Listing 9-1: Attempting to access an element beyond the end of a vector, which will cause a call to &lt;code&gt;panic!&lt;/code&gt;</source>
          <target state="translated">清单9-1：尝试在向量的末尾访问元素，这将导致调用 &lt;code&gt;panic!&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="582171a62a2171fac9838d42c4fd1d2f090cbd88" translate="yes" xml:space="preserve">
          <source>Listing 9-2: The backtrace generated by a call to &lt;code&gt;panic!&lt;/code&gt; displayed when the environment variable &lt;code&gt;RUST_BACKTRACE&lt;/code&gt; is set</source>
          <target state="translated">代码清单9-2：调用 &lt;code&gt;panic!&lt;/code&gt; 生成的回溯 设置环境变量 &lt;code&gt;RUST_BACKTRACE&lt;/code&gt; 时显示</target>
        </trans-unit>
        <trans-unit id="036c67bd6abf8505561ce1f6632e697e4db21dff" translate="yes" xml:space="preserve">
          <source>Listing 9-3: Opening a file</source>
          <target state="translated">清单9-3:打开一个文件</target>
        </trans-unit>
        <trans-unit id="564e77476cbfc201bd8532f0aa35b867559d7dc1" translate="yes" xml:space="preserve">
          <source>Listing 9-4: Using a &lt;code&gt;match&lt;/code&gt; expression to handle the &lt;code&gt;Result&lt;/code&gt; variants that might be returned</source>
          <target state="translated">清单9-4：使用 &lt;code&gt;match&lt;/code&gt; 表达式来处理可能返回的 &lt;code&gt;Result&lt;/code&gt; 变量</target>
        </trans-unit>
        <trans-unit id="f7ff4b6392fc3709756a7aad7bdbd5c0684d1e92" translate="yes" xml:space="preserve">
          <source>Listing 9-5: Handling different kinds of errors in different ways</source>
          <target state="translated">清单9-5:用不同的方式处理不同类型的错误。</target>
        </trans-unit>
        <trans-unit id="9fc8faf439c8af703e6a0f9b1214df4e47fbaae9" translate="yes" xml:space="preserve">
          <source>Listing 9-6: A function that returns errors to the calling code using &lt;code&gt;match&lt;/code&gt;</source>
          <target state="translated">清单9-6：使用 &lt;code&gt;match&lt;/code&gt; 将错误返回到调用代码的函数</target>
        </trans-unit>
        <trans-unit id="45a1042ad1f9e9c0e92fd770a77a7ce6f879369b" translate="yes" xml:space="preserve">
          <source>Listing 9-7 shows an implementation of &lt;code&gt;read_username_from_file&lt;/code&gt; that has the same functionality as it had in Listing 9-6, but this implementation uses the &lt;code&gt;?&lt;/code&gt; operator.</source>
          <target state="translated">清单9-7显示了 &lt;code&gt;read_username_from_file&lt;/code&gt; 的实现，该实现具有与清单9-6相同的功能，但是该实现使用 &lt;code&gt;?&lt;/code&gt; 操作员。</target>
        </trans-unit>
        <trans-unit id="1b41b326b2c47edfb23652f3a3e5c56b62eebefe" translate="yes" xml:space="preserve">
          <source>Listing 9-7: A function that returns errors to the calling code using the &lt;code&gt;?&lt;/code&gt; operator</source>
          <target state="translated">清单9-7：一个使用 &lt;code&gt;?&lt;/code&gt; 将错误返回到调用代码的函数 算子</target>
        </trans-unit>
        <trans-unit id="90eaec2e8c17e57c827774a3de0679e7b72594d6" translate="yes" xml:space="preserve">
          <source>Listing 9-8: Chaining method calls after the &lt;code&gt;?&lt;/code&gt; operator</source>
          <target state="translated">代码清单9-8：在 &lt;code&gt;?&lt;/code&gt; 之后的链接方法调用 算子</target>
        </trans-unit>
        <trans-unit id="c49300b204d24f4d50d859027f56937d5db530ef" translate="yes" xml:space="preserve">
          <source>Listing 9-9: Using &lt;code&gt;fs::read_to_string&lt;/code&gt; instead of opening and then reading the file</source>
          <target state="translated">清单9-9：使用 &lt;code&gt;fs::read_to_string&lt;/code&gt; 而不是打开然后读取文件</target>
        </trans-unit>
        <trans-unit id="927a3229b33488046e185d2eb8d7db010dbdbc8a" translate="yes" xml:space="preserve">
          <source>Literal Examples:</source>
          <target state="translated">字面例子:</target>
        </trans-unit>
        <trans-unit id="9919907746fd6b7c7a456650766c572064bd9e4b" translate="yes" xml:space="preserve">
          <source>Literal expressions</source>
          <target state="translated">字面表达</target>
        </trans-unit>
        <trans-unit id="7f5a73aa50395bb3fad4e850b2c352c0ecd8a3f6" translate="yes" xml:space="preserve">
          <source>Literal expressions in meta items must not include integer or float type suffixes.</source>
          <target state="translated">元项中的字面表达式不得包含整数或浮动类型后缀。</target>
        </trans-unit>
        <trans-unit id="c0ba27c437e0ce3b461bf46459f4604a52e37849" translate="yes" xml:space="preserve">
          <source>Literal patterns</source>
          <target state="translated">字面模式</target>
        </trans-unit>
        <trans-unit id="82e462e8f97c8bdd6276f4b5c373ba583b4f9370" translate="yes" xml:space="preserve">
          <source>Literal patterns are always refutable.</source>
          <target state="translated">字面模式总是可以反驳的。</target>
        </trans-unit>
        <trans-unit id="c7ba7dcf662374aafe652b03d75cb8f6024519d9" translate="yes" xml:space="preserve">
          <source>Literals</source>
          <target state="translated">Literals</target>
        </trans-unit>
        <trans-unit id="9bbdaa21e6555e891cb763804578f26091a26229" translate="yes" xml:space="preserve">
          <source>Literals in attributes are new and largely unsupported in built-in attributes. Work to support literals where appropriate is ongoing. Try using an unquoted name instead:</source>
          <target state="translated">属性中的文字是新的,在内置属性中基本不支持。在适当的地方支持字元的工作正在进行中。尝试使用未引号的名称。</target>
        </trans-unit>
        <trans-unit id="dbc8c5decc9f83fed394247a86e8a4ca9e1d7d8b" translate="yes" xml:space="preserve">
          <source>Loading content...</source>
          <target state="translated">正在加载内容...</target>
        </trans-unit>
        <trans-unit id="7febd461607e330888c39c4c3dd6d9b42a80af25" translate="yes" xml:space="preserve">
          <source>Loads a value from the atomic integer.</source>
          <target state="translated">从原子整数中加载一个值。</target>
        </trans-unit>
        <trans-unit id="fb84f17c620d261c4856d3c111914ab16da7ffce" translate="yes" xml:space="preserve">
          <source>Loads a value from the bool.</source>
          <target state="translated">从bool中加载一个值。</target>
        </trans-unit>
        <trans-unit id="7943a687e92d5ccd3fba97225b68ef38f3dab8b9" translate="yes" xml:space="preserve">
          <source>Loads a value from the pointer.</source>
          <target state="translated">从指针中加载一个值。</target>
        </trans-unit>
        <trans-unit id="499843b110d742760d4d0c2a5bdb0fce66483737" translate="yes" xml:space="preserve">
          <source>Loads the current value of the pointer.</source>
          <target state="translated">载入指针的当前值。</target>
        </trans-unit>
        <trans-unit id="547dc7d8078ab1ae5287beebc8050b70c988e773" translate="yes" xml:space="preserve">
          <source>Loads the current value of the pointer. The stabilized version of this intrinsic is available on the &lt;code&gt;std::sync::atomic&lt;/code&gt; types via the &lt;code&gt;load&lt;/code&gt; method by passing &lt;a href=&quot;../sync/atomic/enum.ordering&quot;&gt;&lt;code&gt;Ordering::Acquire&lt;/code&gt;&lt;/a&gt; as the &lt;code&gt;order&lt;/code&gt;. For example, &lt;a href=&quot;../sync/atomic/struct.atomicbool#method.load&quot;&gt;&lt;code&gt;AtomicBool::load&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">加载指针的当前值。通过将&lt;a href=&quot;../sync/atomic/enum.ordering&quot;&gt; &lt;code&gt;Ordering::Acquire&lt;/code&gt; &lt;/a&gt;传递为 &lt;code&gt;order&lt;/code&gt; ，可以通过 &lt;code&gt;load&lt;/code&gt; 方法在 &lt;code&gt;std::sync::atomic&lt;/code&gt; 类型上使用此内在函数的稳定版本。例如，&lt;a href=&quot;../sync/atomic/struct.atomicbool#method.load&quot;&gt; &lt;code&gt;AtomicBool::load&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3dae14c51da8e1782cd500b2c3aa7b9a70d4fafd" translate="yes" xml:space="preserve">
          <source>Loads the current value of the pointer. The stabilized version of this intrinsic is available on the &lt;code&gt;std::sync::atomic&lt;/code&gt; types via the &lt;code&gt;load&lt;/code&gt; method by passing &lt;a href=&quot;../sync/atomic/enum.ordering&quot;&gt;&lt;code&gt;Ordering::Relaxed&lt;/code&gt;&lt;/a&gt; as the &lt;code&gt;order&lt;/code&gt;. For example, &lt;a href=&quot;../sync/atomic/struct.atomicbool#method.load&quot;&gt;&lt;code&gt;AtomicBool::load&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">加载指针的当前值。通过将&lt;a href=&quot;../sync/atomic/enum.ordering&quot;&gt; &lt;code&gt;Ordering::Relaxed&lt;/code&gt; &lt;/a&gt;作为 &lt;code&gt;order&lt;/code&gt; ，可以通过 &lt;code&gt;load&lt;/code&gt; 方法在 &lt;code&gt;std::sync::atomic&lt;/code&gt; 类型上使用此内在函数的稳定版本。例如，&lt;a href=&quot;../sync/atomic/struct.atomicbool#method.load&quot;&gt; &lt;code&gt;AtomicBool::load&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="af1bca8bbc6e2d920e534d675597f2249024f02b" translate="yes" xml:space="preserve">
          <source>Loads the current value of the pointer. The stabilized version of this intrinsic is available on the &lt;code&gt;std::sync::atomic&lt;/code&gt; types via the &lt;code&gt;load&lt;/code&gt; method by passing &lt;a href=&quot;../sync/atomic/enum.ordering&quot;&gt;&lt;code&gt;Ordering::SeqCst&lt;/code&gt;&lt;/a&gt; as the &lt;code&gt;order&lt;/code&gt;. For example, &lt;a href=&quot;../sync/atomic/struct.atomicbool#method.load&quot;&gt;&lt;code&gt;AtomicBool::load&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">加载指针的当前值。通过将&lt;a href=&quot;../sync/atomic/enum.ordering&quot;&gt; &lt;code&gt;Ordering::SeqCst&lt;/code&gt; &lt;/a&gt;作为 &lt;code&gt;order&lt;/code&gt; ，可以通过 &lt;code&gt;load&lt;/code&gt; 方法在 &lt;code&gt;std::sync::atomic&lt;/code&gt; 类型上使用此内在函数的稳定版本。例如，&lt;a href=&quot;../sync/atomic/struct.atomicbool#method.load&quot;&gt; &lt;code&gt;AtomicBool::load&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="941e9ffed9c95e1ea8344edfe59e65e40e4aeabc" translate="yes" xml:space="preserve">
          <source>Local Documentation</source>
          <target state="translated">当地文件</target>
        </trans-unit>
        <trans-unit id="16eb226bdb0b2f8a9b4b77740cac4ee8957c3268" translate="yes" xml:space="preserve">
          <source>Local trait</source>
          <target state="translated">本地特征</target>
        </trans-unit>
        <trans-unit id="7875c6daf8bab38e1a44c86ed1d0cfff1fb46f2c" translate="yes" xml:space="preserve">
          <source>Local type</source>
          <target state="translated">本地类型</target>
        </trans-unit>
        <trans-unit id="d41199dfcb8b15e548fa69da859ee2a75aebcf49" translate="yes" xml:space="preserve">
          <source>Local variables are immutable unless declared otherwise. For example: &lt;code&gt;let mut x = ...&lt;/code&gt;.</source>
          <target state="translated">除非另行声明，否则局部变量是不可变的。例如： &lt;code&gt;let mut x = ...&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75b5802818ead588f51a1f91daa65fd2c4a74ea9" translate="yes" xml:space="preserve">
          <source>Local variables are not initialized when allocated. Instead, the entire frame worth of local variables are allocated, on frame-entry, in an uninitialized state. Subsequent statements within a function may or may not initialize the local variables. Local variables can be used only after they have been initialized through all reachable control flow paths.</source>
          <target state="translated">局部变量在分配时不被初始化。相反,整个帧值的局部变量在进入帧时是以未初始化的状态分配的。一个函数中的后续语句可能会也可能不会初始化局部变量。局部变量只有在通过所有可到达的控制流路径被初始化后才能使用。</target>
        </trans-unit>
        <trans-unit id="296cfd3580dfd613671d291555e1c1698e02ce35" translate="yes" xml:space="preserve">
          <source>Local variables declared in a &lt;code&gt;let&lt;/code&gt; statement are associated to the scope of the block that contains the &lt;code&gt;let&lt;/code&gt; statement. Local variables declared in a &lt;code&gt;match&lt;/code&gt; expression are associated to the arm scope of the &lt;code&gt;match&lt;/code&gt; arm that they are declared in.</source>
          <target state="translated">在 &lt;code&gt;let&lt;/code&gt; 语句中声明的局部变量与包含 &lt;code&gt;let&lt;/code&gt; 语句的块的范围相关联。在 &lt;code&gt;match&lt;/code&gt; 表达式中声明的局部变量与声明它们的 &lt;code&gt;match&lt;/code&gt; arm的arm范围相关联。</target>
        </trans-unit>
        <trans-unit id="24db2be24235176cea7a6a0080946e9e4814f0fd" translate="yes" xml:space="preserve">
          <source>Local variables, function parameters and temporaries are all dropped before the end of the function body. So a reference to them cannot be returned.</source>
          <target state="translated">局部变量、函数参数和临时变量都会在函数体结束前被删除。所以不能返回对它们的引用。</target>
        </trans-unit>
        <trans-unit id="b57f356d98e7b91fbe063da29276cb354247c06a" translate="yes" xml:space="preserve">
          <source>LocalKey</source>
          <target state="translated">LocalKey</target>
        </trans-unit>
        <trans-unit id="1a79b2e2221bebfe90a3ef9537c59ac43612dcbe" translate="yes" xml:space="preserve">
          <source>LocalKey::borrow</source>
          <target state="translated">LocalKey::borrow</target>
        </trans-unit>
        <trans-unit id="3b9417d916bc3a3d747f53586258cc56e7c849f2" translate="yes" xml:space="preserve">
          <source>LocalKey::borrow_mut</source>
          <target state="translated">LocalKey::borrow_mut</target>
        </trans-unit>
        <trans-unit id="768de79806df1b58e4582bceae4a562c725b710a" translate="yes" xml:space="preserve">
          <source>LocalKey::fmt</source>
          <target state="translated">LocalKey::fmt</target>
        </trans-unit>
        <trans-unit id="04db5bfa62eafd4f90e1a16ca6df970a09ea95bf" translate="yes" xml:space="preserve">
          <source>LocalKey::from</source>
          <target state="translated">LocalKey::from</target>
        </trans-unit>
        <trans-unit id="66396cd5cf67dc7801926e9745215b0456deef7b" translate="yes" xml:space="preserve">
          <source>LocalKey::into</source>
          <target state="translated">LocalKey::into</target>
        </trans-unit>
        <trans-unit id="cc21a18a97944363056d0fa4e6071c4bb8782051" translate="yes" xml:space="preserve">
          <source>LocalKey::try_from</source>
          <target state="translated">LocalKey::try_from</target>
        </trans-unit>
        <trans-unit id="e500db7b861442f8600e95f67099831683ceec87" translate="yes" xml:space="preserve">
          <source>LocalKey::try_into</source>
          <target state="translated">LocalKey::try_into</target>
        </trans-unit>
        <trans-unit id="309bb438f79f8e518c86850c1b3d05f00f6bafd1" translate="yes" xml:space="preserve">
          <source>LocalKey::try_with</source>
          <target state="translated">LocalKey::try_with</target>
        </trans-unit>
        <trans-unit id="3817b1685d6cc5c6708aa6297cac9391932b8ae0" translate="yes" xml:space="preserve">
          <source>LocalKey::type_id</source>
          <target state="translated">LocalKey::type_id</target>
        </trans-unit>
        <trans-unit id="4247f14d0fda1ef40e2b23dbb4fcb4e5a24deebc" translate="yes" xml:space="preserve">
          <source>LocalKey::with</source>
          <target state="translated">LocalKey::with</target>
        </trans-unit>
        <trans-unit id="b9fc941160f1b0396956bfd39853ec712bd8d1fb" translate="yes" xml:space="preserve">
          <source>Localization</source>
          <target state="translated">Localization</target>
        </trans-unit>
        <trans-unit id="d219c68101f532de10add2cf42fb9dbeca73d3be" translate="yes" xml:space="preserve">
          <source>Location</source>
          <target state="translated">Location</target>
        </trans-unit>
        <trans-unit id="de8e3479056d230460e3d065cadbbb3e88b9e0a1" translate="yes" xml:space="preserve">
          <source>Location::borrow</source>
          <target state="translated">Location::borrow</target>
        </trans-unit>
        <trans-unit id="1d9e53c65b573e90d70ad87be11180d0ded0def9" translate="yes" xml:space="preserve">
          <source>Location::borrow_mut</source>
          <target state="translated">Location::borrow_mut</target>
        </trans-unit>
        <trans-unit id="06f7857fae6348ebddb7925de15be023ff302293" translate="yes" xml:space="preserve">
          <source>Location::column</source>
          <target state="translated">Location::column</target>
        </trans-unit>
        <trans-unit id="9fb181d2c69e2035b76e3ee310eed5924685b399" translate="yes" xml:space="preserve">
          <source>Location::file</source>
          <target state="translated">Location::file</target>
        </trans-unit>
        <trans-unit id="ec687275a890211ca3e866f1220c998706144cc6" translate="yes" xml:space="preserve">
          <source>Location::fmt</source>
          <target state="translated">Location::fmt</target>
        </trans-unit>
        <trans-unit id="60120cb59b875444b733ef5f228a29149ea9b6c5" translate="yes" xml:space="preserve">
          <source>Location::from</source>
          <target state="translated">Location::from</target>
        </trans-unit>
        <trans-unit id="b6980837efc63ab1c2ec1f3155219869677cee35" translate="yes" xml:space="preserve">
          <source>Location::into</source>
          <target state="translated">Location::into</target>
        </trans-unit>
        <trans-unit id="efa58fc8c7e3ad70a14072fba0190415c7dbb3ad" translate="yes" xml:space="preserve">
          <source>Location::line</source>
          <target state="translated">Location::line</target>
        </trans-unit>
        <trans-unit id="9c9f6004c28a00f9a92ccf386a3208c153f86d7b" translate="yes" xml:space="preserve">
          <source>Location::to_string</source>
          <target state="translated">Location::to_string</target>
        </trans-unit>
        <trans-unit id="efab285ec70c363438a49f6d908e951d125ddf5c" translate="yes" xml:space="preserve">
          <source>Location::try_from</source>
          <target state="translated">Location::try_from</target>
        </trans-unit>
        <trans-unit id="84e4f49094e8dfe9c876d276615f6aa496dc6c2b" translate="yes" xml:space="preserve">
          <source>Location::try_into</source>
          <target state="translated">Location::try_into</target>
        </trans-unit>
        <trans-unit id="5ebbd6025914da908b121a8e402d26c288533b08" translate="yes" xml:space="preserve">
          <source>Location::type_id</source>
          <target state="translated">Location::type_id</target>
        </trans-unit>
        <trans-unit id="1240d9496629774bebbf2088261a9f110654375b" translate="yes" xml:space="preserve">
          <source>LockResult</source>
          <target state="translated">LockResult</target>
        </trans-unit>
        <trans-unit id="973f5f3e39546b3553d2987086d61fa219ab8dac" translate="yes" xml:space="preserve">
          <source>Locks this handle and reads a line of input into the specified buffer.</source>
          <target state="translated">锁定该句柄,并将一行输入读入指定的缓冲区。</target>
        </trans-unit>
        <trans-unit id="3b8eda572be35f6bbbdfd0a9fcbf5c187366d189" translate="yes" xml:space="preserve">
          <source>Locks this handle and reads a line of input, appending it to the specified buffer.</source>
          <target state="translated">锁定该句柄并读取一行输入,将其追加到指定的缓冲区。</target>
        </trans-unit>
        <trans-unit id="1ad4d3a2b606aa7060e1a91cf488d094b1348484" translate="yes" xml:space="preserve">
          <source>Locks this handle to the standard error stream, returning a writable guard.</source>
          <target state="translated">将此句柄锁定在标准错误流上,返回一个可写的守卫。</target>
        </trans-unit>
        <trans-unit id="15f06fe991e3f223535bf849d1c1cc252a2456f8" translate="yes" xml:space="preserve">
          <source>Locks this handle to the standard input stream, returning a readable guard.</source>
          <target state="translated">将此句柄锁定在标准输入流上,返回一个可读的守卫。</target>
        </trans-unit>
        <trans-unit id="782ff8719cb8b6960732a41787ca938c115b040f" translate="yes" xml:space="preserve">
          <source>Locks this handle to the standard output stream, returning a writable guard.</source>
          <target state="translated">将此句柄锁定在标准输出流上,返回一个可写的守护。</target>
        </trans-unit>
        <trans-unit id="0c8592e141df4b4bfc0222b0946f49bc89c81c2d" translate="yes" xml:space="preserve">
          <source>Locks this rwlock with exclusive write access, blocking the current thread until it can be acquired.</source>
          <target state="translated">用独占的写权限锁定这个rwlock,阻塞当前线程,直到它可以被获取。</target>
        </trans-unit>
        <trans-unit id="597e7ee91c82cf5999ea71d9dea5b733c88212bd" translate="yes" xml:space="preserve">
          <source>Locks this rwlock with shared read access, blocking the current thread until it can be acquired.</source>
          <target state="translated">用共享读取权限锁定这个rwlock,阻塞当前线程,直到它可以被获取。</target>
        </trans-unit>
        <trans-unit id="db804819fe316197c87a07887ca38ba5bc608df0" translate="yes" xml:space="preserve">
          <source>Logging errors before discarding them:</source>
          <target state="translated">在丢弃错误之前记录错误。</target>
        </trans-unit>
        <trans-unit id="ee9e48c47419cad9fed4445a06222f604e817eeb" translate="yes" xml:space="preserve">
          <source>Logical &quot;and&quot; with a boolean value.</source>
          <target state="translated">具有布尔值的逻辑 &quot;和&quot;。</target>
        </trans-unit>
        <trans-unit id="f9d91b6f27e396f96bc7e4d5c176995f52cb3df3" translate="yes" xml:space="preserve">
          <source>Logical &quot;nand&quot; with a boolean value.</source>
          <target state="translated">具有布尔值的逻辑 &quot;nand&quot;。</target>
        </trans-unit>
        <trans-unit id="c80813e42e08f1c9f8127158014a106210689d6f" translate="yes" xml:space="preserve">
          <source>Logical &quot;or&quot; with a boolean value.</source>
          <target state="translated">具有布尔值的逻辑 &quot;或&quot;。</target>
        </trans-unit>
        <trans-unit id="99150192e85afda9231de9dfbcc0991931e0b296" translate="yes" xml:space="preserve">
          <source>Logical &quot;xor&quot; with a boolean value.</source>
          <target state="translated">具有布尔值的逻辑 &quot;xor&quot;。</target>
        </trans-unit>
        <trans-unit id="c5d5c5fb2a8798e4f962780fba63386de96b07b6" translate="yes" xml:space="preserve">
          <source>Logical AND</source>
          <target state="translated">逻辑和</target>
        </trans-unit>
        <trans-unit id="e7e803ba6df9ebf5f542bc2b7ce91db2dc559f7e" translate="yes" xml:space="preserve">
          <source>Logical NOT</source>
          <target state="translated">逻辑非</target>
        </trans-unit>
        <trans-unit id="e9b0aefdf7ed2c67abbfc572bbc5743979450674" translate="yes" xml:space="preserve">
          <source>Logical OR</source>
          <target state="translated">逻辑OR</target>
        </trans-unit>
        <trans-unit id="93425a1fb1ee61afdd5c8bde53ad3e437fa5c378" translate="yes" xml:space="preserve">
          <source>Logical XOR</source>
          <target state="translated">逻辑XOR</target>
        </trans-unit>
        <trans-unit id="7fe7fed5d2180339a03ebc2bbe54c97c8777625e" translate="yes" xml:space="preserve">
          <source>Logically &lt;code&gt;true&lt;/code&gt; is not equal to &lt;a href=&quot;keyword.false&quot;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从逻辑上讲， &lt;code&gt;true&lt;/code&gt; 不等于&lt;a href=&quot;keyword.false&quot;&gt; &lt;code&gt;false&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a94122f802a61cca6ca880b82b748cd175aece3a" translate="yes" xml:space="preserve">
          <source>Longer code examples are in a syntax highlighted box that has controls for copying, executing, and showing hidden lines in the top right corner.</source>
          <target state="translated">较长的代码示例在语法高亮框中,右上角有复制、执行和显示隐藏行的控件。</target>
        </trans-unit>
        <trans-unit id="aa73733853589d673d333c74fe5abae906356928" translate="yes" xml:space="preserve">
          <source>Look at the generated &lt;em&gt;Cargo.toml&lt;/em&gt; file:</source>
          <target state="translated">查看生成的&lt;em&gt;Cargo.toml&lt;/em&gt;文件：</target>
        </trans-unit>
        <trans-unit id="f85711ffe46c9fb58f69ce5d1973d7acbb710f52" translate="yes" xml:space="preserve">
          <source>Looking at the request line data we received from running our program so far, we see that &lt;code&gt;GET&lt;/code&gt; is the method, &lt;em&gt;/&lt;/em&gt; is the request URI, and &lt;code&gt;HTTP/1.1&lt;/code&gt; is the version.</source>
          <target state="translated">看到目前为止我们从运行程序中收到的请求行数据，我们看到 &lt;code&gt;GET&lt;/code&gt; 是方法，&lt;em&gt;/&lt;/em&gt;是请求URI，而 &lt;code&gt;HTTP/1.1&lt;/code&gt; 是版本。</target>
        </trans-unit>
        <trans-unit id="52462e9d8cfe0534f0c444d216cecaa174866ab3" translate="yes" xml:space="preserve">
          <source>Looks good! Now let&amp;rsquo;s introduce a bug in our code by removing the condition that the &lt;code&gt;new&lt;/code&gt; function will panic if the value is greater than 100:</source>
          <target state="translated">看起来挺好的！现在，让我们在代码中引入一个错误，方法是删除值大于100时 &lt;code&gt;new&lt;/code&gt; 函数将出现恐慌的条件：</target>
        </trans-unit>
        <trans-unit id="ab842a980e44426037703edaca40e816d1bc12c6" translate="yes" xml:space="preserve">
          <source>Looks like that still works! Now, let&amp;rsquo;s run the program with &lt;code&gt;CASE_INSENSITIVE&lt;/code&gt; set to &lt;code&gt;1&lt;/code&gt; but with the same query &lt;code&gt;to&lt;/code&gt;.</source>
          <target state="translated">看起来仍然有效！现在，让我们运行该程序 &lt;code&gt;CASE_INSENSITIVE&lt;/code&gt; 设置为 &lt;code&gt;1&lt;/code&gt; ，但具有相同的查询 &lt;code&gt;to&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="02c45b0f7d3c1dd9b57ad06eaf274c8641f5e41b" translate="yes" xml:space="preserve">
          <source>Looks up a series of four elements in a slice of pairs sorted by their second elements. The first is found, with a uniquely determined position; the second and third are not found; the fourth could match any position in &lt;code&gt;[1, 4]&lt;/code&gt;.</source>
          <target state="translated">在成对的切片中按其第二个元素排序的一系列四个元素中查找。找到第一个，具有唯一确定的位置；找不到第二和第三；第四位可以匹配 &lt;code&gt;[1, 4]&lt;/code&gt; 中的任何位置。</target>
        </trans-unit>
        <trans-unit id="fe6ce8703b6504f9854c260e42a417c77143b940" translate="yes" xml:space="preserve">
          <source>Looks up a series of four elements. The first is found, with a uniquely determined position; the second and third are not found; the fourth could match any position in &lt;code&gt;[1, 4]&lt;/code&gt;.</source>
          <target state="translated">查找一系列四个元素。找到第一个，具有唯一确定的位置；找不到第二和第三；第四位可以匹配 &lt;code&gt;[1, 4]&lt;/code&gt; 中的任何位置。</target>
        </trans-unit>
        <trans-unit id="f34585a43eb20d762a66a3fa82814993a65ae4f4" translate="yes" xml:space="preserve">
          <source>Loop bodies (&lt;a href=&quot;loop-expr#infinite-loops&quot;&gt;&lt;code&gt;loop&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;loop-expr#predicate-loops&quot;&gt;&lt;code&gt;while&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;loop-expr#predicate-pattern-loops&quot;&gt;&lt;code&gt;while let&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;loop-expr#iterator-loops&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">循环主体（&lt;a href=&quot;loop-expr#infinite-loops&quot;&gt; &lt;code&gt;loop&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;loop-expr#predicate-loops&quot;&gt; &lt;code&gt;while&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;loop-expr#predicate-pattern-loops&quot;&gt; &lt;code&gt;while let&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;loop-expr#iterator-loops&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="146e4f6cadda9361ba6dd2659cb14c387bbabff7" translate="yes" xml:space="preserve">
          <source>Loop indefinitely.</source>
          <target state="translated">无限期循环。</target>
        </trans-unit>
        <trans-unit id="910baeda8a78b7fdbccdb9b95411cc6f09c93072" translate="yes" xml:space="preserve">
          <source>Loop label</source>
          <target state="translated">循环标签</target>
        </trans-unit>
        <trans-unit id="8ceed8c250a89a0eef89445e73e6213e28957b27" translate="yes" xml:space="preserve">
          <source>Loop labels</source>
          <target state="translated">循环标签</target>
        </trans-unit>
        <trans-unit id="67f6007e968fdc453361267f6ef12b769dbb1f4d" translate="yes" xml:space="preserve">
          <source>Loop while a condition is upheld.</source>
          <target state="translated">循环,同时坚持一个条件。</target>
        </trans-unit>
        <trans-unit id="983e951f3609eb8366a28b4678803cdb5faf2344" translate="yes" xml:space="preserve">
          <source>Looping Through a Collection with &lt;code id=&quot;looping-through-a-collection-with-for&quot;&gt;for&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code id=&quot;looping-through-a-collection-with-for&quot;&gt;for&lt;/code&gt; 遍历一个集合</target>
        </trans-unit>
        <trans-unit id="02720f9d38bf4f35e84ed5228689898bee176418" translate="yes" xml:space="preserve">
          <source>Loops</source>
          <target state="translated">Loops</target>
        </trans-unit>
        <trans-unit id="82f9a94d3567f8b48be0a89547b5a502496697d3" translate="yes" xml:space="preserve">
          <source>Loops that dynamically terminate.</source>
          <target state="translated">动态终止的循环。</target>
        </trans-unit>
        <trans-unit id="7a10d86424203ece50b876ab703fbf8511a44eb3" translate="yes" xml:space="preserve">
          <source>Low level implementations of things like collections, which need to manually drop their data, should use this function to avoid unnecessarily trying to drop all their contents when they are destroyed. This might not make a difference in release builds (where a loop that has no side-effects is easily detected and eliminated), but is often a big win for debug builds.</source>
          <target state="translated">像集合这样需要手动丢弃数据的低级实现,应该使用这个函数来避免在销毁它们时不必要地尝试丢弃所有内容。这在发行版构建中可能不会有什么不同(在那里,一个没有副作用的循环很容易被发现和消除),但对于调试构建来说,往往是一个很大的胜利。</target>
        </trans-unit>
        <trans-unit id="4c4c04816367b618249cf624dd23204ea48a2ca0" translate="yes" xml:space="preserve">
          <source>Low-intensity workout plans will recommend a number of push-ups and sit-ups based on the complex algorithm we&amp;rsquo;re simulating.</source>
          <target state="translated">低强度锻炼计划会根据我们正在模拟的复杂算法，推荐许多俯卧撑和仰卧起坐。</target>
        </trans-unit>
        <trans-unit id="6b1ede9bf060e1ecd9cc0282a8fdc16b5797d80a" translate="yes" xml:space="preserve">
          <source>LowerExp</source>
          <target state="translated">LowerExp</target>
        </trans-unit>
        <trans-unit id="e465df3a2e8bac6e03c650115f311c8cf3119812" translate="yes" xml:space="preserve">
          <source>LowerExp::fmt</source>
          <target state="translated">LowerExp::fmt</target>
        </trans-unit>
        <trans-unit id="5d91084dfc80f601e5d058842fda3944bfa31f05" translate="yes" xml:space="preserve">
          <source>LowerHex</source>
          <target state="translated">LowerHex</target>
        </trans-unit>
        <trans-unit id="6487af46ece97a6dff859b02884a2d7af105ba28" translate="yes" xml:space="preserve">
          <source>LowerHex::fmt</source>
          <target state="translated">LowerHex::fmt</target>
        </trans-unit>
        <trans-unit id="f41a055096fba2f5ebbddc8916d81727739dbdb3" translate="yes" xml:space="preserve">
          <source>Lt</source>
          <target state="translated">Lt</target>
        </trans-unit>
        <trans-unit id="da61d0dd8b2c285f06eeb2dd41678c18a2b332e0" translate="yes" xml:space="preserve">
          <source>Luckily, Rust has a solution to this problem: string slices.</source>
          <target state="translated">幸运的是,Rust有一个解决这个问题的方法:字符串切片。</target>
        </trans-unit>
        <trans-unit id="e6ceaa126b03ac34bb0e0b13dff478218c35e1e0" translate="yes" xml:space="preserve">
          <source>M matches &amp;beta;,</source>
          <target state="translated">M匹配&amp;beta;，</target>
        </trans-unit>
        <trans-unit id="213da531ac0923945abaf2dc2942d501e202b6c8" translate="yes" xml:space="preserve">
          <source>MAIN_SEPARATOR</source>
          <target state="translated">MAIN_SEPARATOR</target>
        </trans-unit>
        <trans-unit id="eee9360f4b93f57def5c15bd6ae691f1478ff551" translate="yes" xml:space="preserve">
          <source>MANTISSA_DIGITS</source>
          <target state="translated">MANTISSA_DIGITS</target>
        </trans-unit>
        <trans-unit id="7b186e235f284107df6b4dbe6060d2b6a5d9f1e5" translate="yes" xml:space="preserve">
          <source>MAX</source>
          <target state="translated">MAX</target>
        </trans-unit>
        <trans-unit id="6968182b7ddb75495db1d95a77b0e45847ee26f5" translate="yes" xml:space="preserve">
          <source>MAX_10_EXP</source>
          <target state="translated">MAX_10_EXP</target>
        </trans-unit>
        <trans-unit id="a339add390e7a87f01f39970f8d80d34d56891c9" translate="yes" xml:space="preserve">
          <source>MAX_EXP</source>
          <target state="translated">MAX_EXP</target>
        </trans-unit>
        <trans-unit id="04e66352aa8f9c4c5f26b71bf380973ada994760" translate="yes" xml:space="preserve">
          <source>MIN</source>
          <target state="translated">MIN</target>
        </trans-unit>
        <trans-unit id="3a02ac2670621244b8a3fc445809cf4d21c72fca" translate="yes" xml:space="preserve">
          <source>MIN_10_EXP</source>
          <target state="translated">MIN_10_EXP</target>
        </trans-unit>
        <trans-unit id="cb4eece303b67f51c9c2c8b3e7de70d833dfe224" translate="yes" xml:space="preserve">
          <source>MIN_EXP</source>
          <target state="translated">MIN_EXP</target>
        </trans-unit>
        <trans-unit id="a0bd516b99da79f578eb0a04fc4a312b707a19ff" translate="yes" xml:space="preserve">
          <source>MIN_POSITIVE</source>
          <target state="translated">MIN_POSITIVE</target>
        </trans-unit>
        <trans-unit id="c13543311f46a50ff427d8868b100b68e78eb3ab" translate="yes" xml:space="preserve">
          <source>ML Kit, Cyclone: region based memory management</source>
          <target state="translated">ML套件,Cyclone:基于区域的内存管理。</target>
        </trans-unit>
        <trans-unit id="24bdfb38558728e0acc797866530efdca1ba0bef" translate="yes" xml:space="preserve">
          <source>Machine-dependent integer types</source>
          <target state="translated">依赖机器的整数类型</target>
        </trans-unit>
        <trans-unit id="2659290a82d88237585af5f472bc1ac313e43ce0" translate="yes" xml:space="preserve">
          <source>Macro Invocation</source>
          <target state="translated">宏程序调用</target>
        </trans-unit>
        <trans-unit id="9e730842d2f7a25329bbe5cfb07dcdf0d39c81ff" translate="yes" xml:space="preserve">
          <source>Macro attributes</source>
          <target state="translated">宏观属性</target>
        </trans-unit>
        <trans-unit id="b1e739693999a37495960fe83d99415a95be52b3" translate="yes" xml:space="preserve">
          <source>Macro authors need to be careful to ensure their macros work in as many contexts as possible given this limitation. This often includes using absolute paths to items in libraries (for example, &lt;code&gt;::std::option::Option&lt;/code&gt; instead of &lt;code&gt;Option&lt;/code&gt;) or by ensuring that generated functions have names that are unlikely to clash with other functions (like &lt;code&gt;__internal_foo&lt;/code&gt; instead of &lt;code&gt;foo&lt;/code&gt;).</source>
          <target state="translated">鉴于此限制，宏作者需要小心以确保其宏在尽可能多的上下文中工作。这通常包括使用库中项目的绝对路径（例如， &lt;code&gt;::std::option::Option&lt;/code&gt; 而不是 &lt;code&gt;Option&lt;/code&gt; ），或者通过确保生成的函数具有不大可能与其他函数冲突的名称（例如 &lt;code&gt;__internal_foo&lt;/code&gt; 而不是 &lt;code&gt;foo&lt;/code&gt; ）来实现。 。</target>
        </trans-unit>
        <trans-unit id="3c67805f00d2045185be06759bad2344ffccbcb7" translate="yes" xml:space="preserve">
          <source>Macro capture</source>
          <target state="translated">微距捕捉</target>
        </trans-unit>
        <trans-unit id="a44b5f0e39bbc761353368be4a96890b94a75063" translate="yes" xml:space="preserve">
          <source>Macro expansion</source>
          <target state="translated">宏观扩张</target>
        </trans-unit>
        <trans-unit id="ae933d8a4781e5105243afefc15101f8a2c8287f" translate="yes" xml:space="preserve">
          <source>Macro import declaration was malformed.</source>
          <target state="translated">巨集导入声明有误。</target>
        </trans-unit>
        <trans-unit id="41a72c642fcf8114343e8c949ed168a43b64c413" translate="yes" xml:space="preserve">
          <source>Macro import declarations were malformed.</source>
          <target state="translated">宏程序导入声明是畸形的。</target>
        </trans-unit>
        <trans-unit id="bd9aa77628f4b1ec118826262de0ca28626e59d7" translate="yes" xml:space="preserve">
          <source>Macro invocation</source>
          <target state="translated">宏程序调用</target>
        </trans-unit>
        <trans-unit id="433dbd0aed916c8f4209de792ed63fa554a2240d" translate="yes" xml:space="preserve">
          <source>Macro placeholders</source>
          <target state="translated">宏占位符</target>
        </trans-unit>
        <trans-unit id="6f9585989499055c950f0a1cea9ea35eab211a07" translate="yes" xml:space="preserve">
          <source>Macro repetition</source>
          <target state="translated">宏观重复</target>
        </trans-unit>
        <trans-unit id="6bf8e1253f5bfdd2b376a7a473244315ed08859d" translate="yes" xml:space="preserve">
          <source>Macro std::asm</source>
          <target state="translated">宏 std::asm</target>
        </trans-unit>
        <trans-unit id="11f058360dbba18a3c9f77a849989539cec6306a" translate="yes" xml:space="preserve">
          <source>Macro std::assert</source>
          <target state="translated">宏 std::assert</target>
        </trans-unit>
        <trans-unit id="f000aa0f88374a6c56665c06a8c607808c0582af" translate="yes" xml:space="preserve">
          <source>Macro std::assert_eq</source>
          <target state="translated">宏std::assert_eq</target>
        </trans-unit>
        <trans-unit id="26ec6afffddbd2b766331235eb12a65ccaed119d" translate="yes" xml:space="preserve">
          <source>Macro std::assert_ne</source>
          <target state="translated">宏 std::assert_ne</target>
        </trans-unit>
        <trans-unit id="0a6f62a4d46be57d97ef44f55d11e47c88244874" translate="yes" xml:space="preserve">
          <source>Macro std::cfg</source>
          <target state="translated">宏 std::cfg</target>
        </trans-unit>
        <trans-unit id="5b1da2fc3d6c63a8a94a2c677e11168ebecb51d6" translate="yes" xml:space="preserve">
          <source>Macro std::clone::Clone</source>
          <target state="translated">宏 std::clone::Clone</target>
        </trans-unit>
        <trans-unit id="c39772ee2d9f0c0278ec923084cb041e5da952b3" translate="yes" xml:space="preserve">
          <source>Macro std::cmp::Eq</source>
          <target state="translated">宏 std::cmp::Eq</target>
        </trans-unit>
        <trans-unit id="e877ae1439ca9c726ebd135e649f5b7ca4c7b811" translate="yes" xml:space="preserve">
          <source>Macro std::cmp::Ord</source>
          <target state="translated">宏 std::cmp::Ord</target>
        </trans-unit>
        <trans-unit id="1e425e67e8014b07972fbe5912e9c5c6b80f20cc" translate="yes" xml:space="preserve">
          <source>Macro std::cmp::PartialEq</source>
          <target state="translated">宏 std::cmp::PartialEq</target>
        </trans-unit>
        <trans-unit id="00e2b89b994cff94c4b95827866a952752d72fe3" translate="yes" xml:space="preserve">
          <source>Macro std::cmp::PartialOrd</source>
          <target state="translated">宏 std::cmp::PartialOrd</target>
        </trans-unit>
        <trans-unit id="bfc3353d435f62be42330b50878e3da5db2c0ebf" translate="yes" xml:space="preserve">
          <source>Macro std::column</source>
          <target state="translated">宏 std::column</target>
        </trans-unit>
        <trans-unit id="8269c763b50aa38775a2c7cb4b26145e32e4874c" translate="yes" xml:space="preserve">
          <source>Macro std::compile_error</source>
          <target state="translated">宏 std::compile_error</target>
        </trans-unit>
        <trans-unit id="15c727a0d120c4960a5206dfd7af2c20bdd517dc" translate="yes" xml:space="preserve">
          <source>Macro std::concat</source>
          <target state="translated">宏 std::concat</target>
        </trans-unit>
        <trans-unit id="df9ffe481ee3d242913fbac3b2dc97e3be05c8cc" translate="yes" xml:space="preserve">
          <source>Macro std::concat_idents</source>
          <target state="translated">宏 std::concat_idents</target>
        </trans-unit>
        <trans-unit id="1d922e73017d104fe46ceb5c4220f8ea3271a322" translate="yes" xml:space="preserve">
          <source>Macro std::dbg</source>
          <target state="translated">宏 std::dbg</target>
        </trans-unit>
        <trans-unit id="a90c90eae394db424024f268470fa895b3873ccd" translate="yes" xml:space="preserve">
          <source>Macro std::debug_assert</source>
          <target state="translated">宏 std::debug_assert</target>
        </trans-unit>
        <trans-unit id="8e74b5bd11d5d45437c1c09fd22f126276ff08d6" translate="yes" xml:space="preserve">
          <source>Macro std::debug_assert_eq</source>
          <target state="translated">宏 std::debug_assert_eq</target>
        </trans-unit>
        <trans-unit id="4dc1eec2b9f87d8b7da901765d50ea403fdbf99b" translate="yes" xml:space="preserve">
          <source>Macro std::debug_assert_ne</source>
          <target state="translated">宏 std::debug_assert_ne</target>
        </trans-unit>
        <trans-unit id="ba169214991fc2e32da613dd8e35cb373c6ba0dc" translate="yes" xml:space="preserve">
          <source>Macro std::default::Default</source>
          <target state="translated">宏 std::default::Default</target>
        </trans-unit>
        <trans-unit id="cf29f83996c4fac331e1f5ba5b531aba1c1c6d23" translate="yes" xml:space="preserve">
          <source>Macro std::env</source>
          <target state="translated">宏 std::env</target>
        </trans-unit>
        <trans-unit id="aba939d2bf68b43edae33ec09ebbd714b2d6987c" translate="yes" xml:space="preserve">
          <source>Macro std::eprint</source>
          <target state="translated">宏 std::eprint</target>
        </trans-unit>
        <trans-unit id="6ffb1f04cc34f8411495e5f8ebb85e8a15409308" translate="yes" xml:space="preserve">
          <source>Macro std::eprintln</source>
          <target state="translated">宏 std::eprintln</target>
        </trans-unit>
        <trans-unit id="c6bfe7e4fa137ef90068b684e50c67e41d606764" translate="yes" xml:space="preserve">
          <source>Macro std::file</source>
          <target state="translated">宏 std::file</target>
        </trans-unit>
        <trans-unit id="491c90c3bda044306071e14b9c8a4fa10b1e7782" translate="yes" xml:space="preserve">
          <source>Macro std::fmt::Debug</source>
          <target state="translated">宏 std::fmt::Debug</target>
        </trans-unit>
        <trans-unit id="e14394b9c26c15c0b3312ed06d14291ed3726b29" translate="yes" xml:space="preserve">
          <source>Macro std::format</source>
          <target state="translated">宏 std::format</target>
        </trans-unit>
        <trans-unit id="dd107af8410c93f9885e0bcf221cd750b3983786" translate="yes" xml:space="preserve">
          <source>Macro std::format_args</source>
          <target state="translated">宏 std::format_args</target>
        </trans-unit>
        <trans-unit id="9b2f7ae3773485eb4a95ce3b2d9d979e1397281b" translate="yes" xml:space="preserve">
          <source>Macro std::format_args_nl</source>
          <target state="translated">宏 std::format_args_nl</target>
        </trans-unit>
        <trans-unit id="72b78145ec9d014d9f3be2b89cc19c2819319afb" translate="yes" xml:space="preserve">
          <source>Macro std::global_asm</source>
          <target state="translated">宏 std::global_asm</target>
        </trans-unit>
        <trans-unit id="f1f0f0276731bf5a943740728b2a4d9e8d9311ea" translate="yes" xml:space="preserve">
          <source>Macro std::hash::Hash</source>
          <target state="translated">宏 std::hash::Hash</target>
        </trans-unit>
        <trans-unit id="2b4f30c9cc31a223b1f4745e8265d159c78f6d54" translate="yes" xml:space="preserve">
          <source>Macro std::include</source>
          <target state="translated">宏 std::include</target>
        </trans-unit>
        <trans-unit id="f78f89f7fc1bec378f1151165dbb68895d22a8c6" translate="yes" xml:space="preserve">
          <source>Macro std::include_bytes</source>
          <target state="translated">宏 std::include_bytes</target>
        </trans-unit>
        <trans-unit id="7bd0028a712b614e4315a9416e07d5bcac8d4159" translate="yes" xml:space="preserve">
          <source>Macro std::include_str</source>
          <target state="translated">宏 std::include_str</target>
        </trans-unit>
        <trans-unit id="537e36d2d2ad3fbbb990e6d081f9a1f6bfb6c7ee" translate="yes" xml:space="preserve">
          <source>Macro std::is_aarch64_feature_detected</source>
          <target state="translated">宏 std::is_aarch64_feature_detected</target>
        </trans-unit>
        <trans-unit id="1709caf08a9d4114d479c826e9f270f25a4438cf" translate="yes" xml:space="preserve">
          <source>Macro std::is_arm_feature_detected</source>
          <target state="translated">宏 std::is_arm_feature_detected。</target>
        </trans-unit>
        <trans-unit id="444bc0075b65384ad493e53d06b947d0a6982b9f" translate="yes" xml:space="preserve">
          <source>Macro std::is_mips64_feature_detected</source>
          <target state="translated">宏 std::is_mips64_feature_detected</target>
        </trans-unit>
        <trans-unit id="15cb20dbc2a3ff0fed9508f4bc148aa082229773" translate="yes" xml:space="preserve">
          <source>Macro std::is_mips_feature_detected</source>
          <target state="translated">宏 std::is_mips_feature_detected。</target>
        </trans-unit>
        <trans-unit id="37b5ae59c5f1ef8a3b8e22937bb56921b20a8ca3" translate="yes" xml:space="preserve">
          <source>Macro std::is_powerpc64_feature_detected</source>
          <target state="translated">宏 std::is_powerpc64_feature_detected。</target>
        </trans-unit>
        <trans-unit id="155e3dbc931dc2bf21378e8d9285a8e305f3f1e6" translate="yes" xml:space="preserve">
          <source>Macro std::is_powerpc_feature_detected</source>
          <target state="translated">宏 std::is_powerpc_feature_detected。</target>
        </trans-unit>
        <trans-unit id="c0fd68c1457055c7bddcb10c03ea35839bdace1d" translate="yes" xml:space="preserve">
          <source>Macro std::is_x86_feature_detected</source>
          <target state="translated">宏 std::is_x86_feature_detected。</target>
        </trans-unit>
        <trans-unit id="39ce5d75824d32f564b1ccd0dea600d21e870a23" translate="yes" xml:space="preserve">
          <source>Macro std::line</source>
          <target state="translated">宏 std::line</target>
        </trans-unit>
        <trans-unit id="38f4201b011987c888b975ac8bae265607691cd4" translate="yes" xml:space="preserve">
          <source>Macro std::llvm_asm</source>
          <target state="translated">宏 std::llvm_asm</target>
        </trans-unit>
        <trans-unit id="e5ebce41e30105a7e8b0bb180fd3ef13677f6073" translate="yes" xml:space="preserve">
          <source>Macro std::log_syntax</source>
          <target state="translated">宏 std::log_syntax</target>
        </trans-unit>
        <trans-unit id="0c26c6abfa84b03c939f7a1ab38ac24077e0391e" translate="yes" xml:space="preserve">
          <source>Macro std::marker::Copy</source>
          <target state="translated">宏 std::marker::Copy</target>
        </trans-unit>
        <trans-unit id="66b9aaef0eccf3e0af6f2d1d5e113ee16766123b" translate="yes" xml:space="preserve">
          <source>Macro std::matches</source>
          <target state="translated">宏 std::matches</target>
        </trans-unit>
        <trans-unit id="8f90aa7d77c7e0afa2f4b43c2ff5e0b6df3b9c86" translate="yes" xml:space="preserve">
          <source>Macro std::module_path</source>
          <target state="translated">宏 std::module_path</target>
        </trans-unit>
        <trans-unit id="3d2ebea8fd7f8696f7403dfb7d8b231c68a49d1b" translate="yes" xml:space="preserve">
          <source>Macro std::option_env</source>
          <target state="translated">宏 std::option_env</target>
        </trans-unit>
        <trans-unit id="6f4c465e8a552f41ced3b86d9467af7400898ea0" translate="yes" xml:space="preserve">
          <source>Macro std::panic</source>
          <target state="translated">宏 std::panic</target>
        </trans-unit>
        <trans-unit id="d7c5619ee3c7e37065c6348f596afee18812e904" translate="yes" xml:space="preserve">
          <source>Macro std::print</source>
          <target state="translated">宏 std::print</target>
        </trans-unit>
        <trans-unit id="204a418c0077187d8cc0f577443c7e7fa541ff0e" translate="yes" xml:space="preserve">
          <source>Macro std::println</source>
          <target state="translated">宏 std::println</target>
        </trans-unit>
        <trans-unit id="49b5cd28b30251f10af2a2a90db5636dbc06c78f" translate="yes" xml:space="preserve">
          <source>Macro std::ptr::raw_const</source>
          <target state="translated">宏 std::ptr::raw_const</target>
        </trans-unit>
        <trans-unit id="94efa33950d8639a2632508a96f54528f0f4892f" translate="yes" xml:space="preserve">
          <source>Macro std::ptr::raw_mut</source>
          <target state="translated">宏 std::ptr::raw_mut</target>
        </trans-unit>
        <trans-unit id="f96af0500399ede902072159d4a56f1154cec983" translate="yes" xml:space="preserve">
          <source>Macro std::stringify</source>
          <target state="translated">宏 std::stringify</target>
        </trans-unit>
        <trans-unit id="0046668cc33f70012c2ac60da4e82f57bc0eae5c" translate="yes" xml:space="preserve">
          <source>Macro std::task::ready</source>
          <target state="translated">宏 std::task::ready</target>
        </trans-unit>
        <trans-unit id="68d6e8f0ed1c6779a250baacf32ce34713bc747e" translate="yes" xml:space="preserve">
          <source>Macro std::thread_local</source>
          <target state="translated">宏 std::thread_local</target>
        </trans-unit>
        <trans-unit id="9baf7587c5afbc5de300cb0d4bf1a784ace4fa43" translate="yes" xml:space="preserve">
          <source>Macro std::todo</source>
          <target state="translated">宏 std::todo</target>
        </trans-unit>
        <trans-unit id="8235c2be6e7598983a06912a0f7475d0ca841096" translate="yes" xml:space="preserve">
          <source>Macro std::trace_macros</source>
          <target state="translated">宏 std::trace_macros</target>
        </trans-unit>
        <trans-unit id="45339975a30497b8aa678e5782dd85d0d6524c52" translate="yes" xml:space="preserve">
          <source>Macro std::try</source>
          <target state="translated">宏 std::try</target>
        </trans-unit>
        <trans-unit id="30819b013032d5b56dd171479c78004eb8506424" translate="yes" xml:space="preserve">
          <source>Macro std::unimplemented</source>
          <target state="translated">宏 std::unimplemented .</target>
        </trans-unit>
        <trans-unit id="af90d4d175741e7c682c9a76c40bcbf22e038351" translate="yes" xml:space="preserve">
          <source>Macro std::unreachable</source>
          <target state="translated">宏 std::unreachable</target>
        </trans-unit>
        <trans-unit id="6cb76d941b106a5984361c746233e091f3eb7268" translate="yes" xml:space="preserve">
          <source>Macro std::vec</source>
          <target state="translated">宏 std::vec</target>
        </trans-unit>
        <trans-unit id="7dfa6a5a74afbe5370bea7ee37dfc0cf4b7a5b7a" translate="yes" xml:space="preserve">
          <source>Macro std::write</source>
          <target state="translated">宏 std::write</target>
        </trans-unit>
        <trans-unit id="6a165588c7cdc25e45e0ccfbbb1e4233fccbef59" translate="yes" xml:space="preserve">
          <source>Macro std::writeln</source>
          <target state="translated">宏 std::writeln</target>
        </trans-unit>
        <trans-unit id="fc574c4feb9eb58a0dcac94d6fe7f033e148ad50" translate="yes" xml:space="preserve">
          <source>Macro substitution</source>
          <target state="translated">宏观替代</target>
        </trans-unit>
        <trans-unit id="899bd694d29ace1be956ab35177075021977560b" translate="yes" xml:space="preserve">
          <source>Macros</source>
          <target state="translated">Macros</target>
        </trans-unit>
        <trans-unit id="ea985fb52970be4df72a617484744fdc16a5c018" translate="yes" xml:space="preserve">
          <source>Macros By Example</source>
          <target state="translated">例子中的宏</target>
        </trans-unit>
        <trans-unit id="890c8b86dee76287900f5de49ded629e47a1eff2" translate="yes" xml:space="preserve">
          <source>Macros can be declared and used locally inside functions as well, and work similarly:</source>
          <target state="translated">宏也可以在函数内部本地声明和使用,工作原理类似。</target>
        </trans-unit>
        <trans-unit id="99213c2eae5f4b5b5261d6ead8683782ce8b74da" translate="yes" xml:space="preserve">
          <source>Macros labeled with &lt;code&gt;#[macro_export]&lt;/code&gt; are always &lt;code&gt;pub&lt;/code&gt; and can be referred to by other crates, either by path or by &lt;code&gt;#[macro_use]&lt;/code&gt; as described above.</source>
          <target state="translated">&lt;code&gt;#[macro_export]&lt;/code&gt; 标有＃[macro_export]的宏始终是 &lt;code&gt;pub&lt;/code&gt; ,并且可以由其他板条箱按路径或 &lt;code&gt;#[macro_use]&lt;/code&gt; 引用。</target>
        </trans-unit>
        <trans-unit id="92e8814276dffd676e7f646da635908018045437" translate="yes" xml:space="preserve">
          <source>Macros to be imported with &lt;code&gt;#[macro_use]&lt;/code&gt; must be exported with &lt;code&gt;#[macro_export]&lt;/code&gt;, which is described below.</source>
          <target state="translated">与导入宏 &lt;code&gt;#[macro_use]&lt;/code&gt; 必须被导出 &lt;code&gt;#[macro_export]&lt;/code&gt; ，这将在下面描述。</target>
        </trans-unit>
        <trans-unit id="1c9a2176dfeeea79d9e3e32de9c2c5a99269809e" translate="yes" xml:space="preserve">
          <source>Macros: ways to define code that defines more code at compile time</source>
          <target state="translated">宏:定义代码的方法,在编译时定义更多的代码。</target>
        </trans-unit>
        <trans-unit id="cd76d64707087c171bdd458df7294e3865fa1eaf" translate="yes" xml:space="preserve">
          <source>Magic intrinsic that derives its meaning from attributes attached to the function.</source>
          <target state="translated">魔法本体,其意义来自于函数所附带的属性。</target>
        </trans-unit>
        <trans-unit id="d0ddf4609657c9fc7a5a760b623591e2b8c06955" translate="yes" xml:space="preserve">
          <source>Main Functions</source>
          <target state="translated">主要功能</target>
        </trans-unit>
        <trans-unit id="65915636886ad9b418e5053522e9bb186aaffa57" translate="yes" xml:space="preserve">
          <source>Major version.</source>
          <target state="translated">主要版本。</target>
        </trans-unit>
        <trans-unit id="f56204cba2ee3c4f2fb7f50188e73508c869d62b" translate="yes" xml:space="preserve">
          <source>Make an item visible to others.</source>
          <target state="translated">让别人看到一个项目。</target>
        </trans-unit>
        <trans-unit id="5c4b994a73f6ca91c56b5e39a0519626ed63946d" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;break value;&lt;/code&gt; statements only occur in &lt;code&gt;loop&lt;/code&gt; loops:</source>
          <target state="translated">确保 &lt;code&gt;break value;&lt;/code&gt; 语句仅在 &lt;code&gt;loop&lt;/code&gt; 循环中发生：</target>
        </trans-unit>
        <trans-unit id="7ea8a95eb24800ac0c84a828db1e4421635b78f0" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;impl Trait&lt;/code&gt; only appears in return-type position.</source>
          <target state="translated">确保 &lt;code&gt;impl Trait&lt;/code&gt; 仅出现在返回类型的位置。</target>
        </trans-unit>
        <trans-unit id="0ba401c0c9cfac171b760a1ce41525fd66059bdc" translate="yes" xml:space="preserve">
          <source>Make sure that you have defined the associated type in the trait body. Also, verify that you used the right trait or you didn't misspell the associated type name. Example:</source>
          <target state="translated">确保你已经在trait主体中定义了相关类型。另外,请确认你使用了正确的特质,或者你没有拼错相关的类型名称。例如</target>
        </trans-unit>
        <trans-unit id="13ea5ceb8177b1d40f0f669f0ff85244195769c5" translate="yes" xml:space="preserve">
          <source>Make sure the crate has been added as a dependency in &lt;code&gt;Cargo.toml&lt;/code&gt;.</source>
          <target state="translated">确保将箱子添加为 &lt;code&gt;Cargo.toml&lt;/code&gt; 中的依赖项。</target>
        </trans-unit>
        <trans-unit id="785fdbeb8403e3c205c309d50d0c4627b6a13510" translate="yes" xml:space="preserve">
          <source>Make sure to always label the &lt;code&gt;break&lt;/code&gt;:</source>
          <target state="translated">确保始终标记 &lt;code&gt;break&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="03635492e49dd51aa8427fce3fe33f477a9049d7" translate="yes" xml:space="preserve">
          <source>Make sure you're using one of the supported options:</source>
          <target state="translated">确保你使用的是支持的选项之一。</target>
        </trans-unit>
        <trans-unit id="74f86a9c8187dd0e3d1a42a2d66b7afdce31f0bd" translate="yes" xml:space="preserve">
          <source>Make the changes in Listing 20-12 to &lt;em&gt;src/main.rs&lt;/em&gt;, and then let&amp;rsquo;s use the compiler errors from &lt;code&gt;cargo check&lt;/code&gt; to drive our development. Here is the first error we get:</source>
          <target state="translated">在清单20-12中对&lt;em&gt;src / main.rs&lt;/em&gt;进行更改，然后让我们使用 &lt;code&gt;cargo check&lt;/code&gt; 的编译器错误来推动开发。这是我们得到的第一个错误：</target>
        </trans-unit>
        <trans-unit id="f4e82ef8f9077ff004c9fab509d5821910979336" translate="yes" xml:space="preserve">
          <source>Make the item public:</source>
          <target state="translated">将该项目公开。</target>
        </trans-unit>
        <trans-unit id="d06ec9954ea419a6b38edc1bf1a2a6dcc02a5258" translate="yes" xml:space="preserve">
          <source>Make the variable binding mutable:</source>
          <target state="translated">使变量绑定可以突变。</target>
        </trans-unit>
        <trans-unit id="bc48084236d12cb5600cc26b44a2d290edf453b1" translate="yes" xml:space="preserve">
          <source>Makes a clone of the &lt;code&gt;Arc&lt;/code&gt; pointer.</source>
          <target state="translated">克隆 &lt;code&gt;Arc&lt;/code&gt; 指针。</target>
        </trans-unit>
        <trans-unit id="0c4e31ca7d1bf4da5b4f8ddc228662ab3f004b62" translate="yes" xml:space="preserve">
          <source>Makes a clone of the &lt;code&gt;Rc&lt;/code&gt; pointer.</source>
          <target state="translated">克隆 &lt;code&gt;Rc&lt;/code&gt; 指针。</target>
        </trans-unit>
        <trans-unit id="594571d4a3af8b84956baaf9ead2a966c2e5f3b0" translate="yes" xml:space="preserve">
          <source>Makes a clone of the &lt;code&gt;Weak&lt;/code&gt; pointer that points to the same allocation.</source>
          <target state="translated">克隆指向相同分配的 &lt;code&gt;Weak&lt;/code&gt; 指针。</target>
        </trans-unit>
        <trans-unit id="da0d43f1a301c05257ea292524b54ea56af3ec64" translate="yes" xml:space="preserve">
          <source>Makes a clone of the &lt;code&gt;Weak&lt;/code&gt; pointer that points to the same value.</source>
          <target state="translated">克隆指向相同值的 &lt;code&gt;Weak&lt;/code&gt; 指针。</target>
        </trans-unit>
        <trans-unit id="95e1b1bca3d2f7d7acb2f9c78011570f45ba8b35" translate="yes" xml:space="preserve">
          <source>Makes a copy of the value in its ASCII lower case equivalent.</source>
          <target state="translated">拷贝一个ASCII小写的等价值。</target>
        </trans-unit>
        <trans-unit id="c2f78dac175677e088f8d9587c48e1e5deed4b7e" translate="yes" xml:space="preserve">
          <source>Makes a copy of the value in its ASCII lower case equivalent. &lt;a href=&quot;ascii/trait.asciiext#tymethod.to_ascii_lowercase&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">以等效的ASCII小写形式复制值。&lt;a href=&quot;ascii/trait.asciiext#tymethod.to_ascii_lowercase&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a98184763dce8b9abdd98e8311b0e6e7ba1eb23" translate="yes" xml:space="preserve">
          <source>Makes a copy of the value in its ASCII upper case equivalent.</source>
          <target state="translated">拷贝一个ASCII大写等值的值。</target>
        </trans-unit>
        <trans-unit id="4d3c8e93f271e4b9119862f73dd68d30760c691b" translate="yes" xml:space="preserve">
          <source>Makes a copy of the value in its ASCII upper case equivalent. &lt;a href=&quot;ascii/trait.asciiext#tymethod.to_ascii_uppercase&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">以等效的ASCII大写形式复制值。&lt;a href=&quot;ascii/trait.asciiext#tymethod.to_ascii_uppercase&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b21b449d04022c2cb71ab03b6cb465f521b25f3f" translate="yes" xml:space="preserve">
          <source>Makes a mutable reference into the given &lt;code&gt;Arc&lt;/code&gt;.</source>
          <target state="translated">对给定的 &lt;code&gt;Arc&lt;/code&gt; 进行可变引用。</target>
        </trans-unit>
        <trans-unit id="c80eeefe8e089abbe6fc15570a328083977a6eae" translate="yes" xml:space="preserve">
          <source>Makes a mutable reference into the given &lt;code&gt;Rc&lt;/code&gt;.</source>
          <target state="translated">对给定的 &lt;code&gt;Rc&lt;/code&gt; 进行可变引用。</target>
        </trans-unit>
        <trans-unit id="6b45ab7ad58abf01267fb6d691762feb9e77a2f6" translate="yes" xml:space="preserve">
          <source>Makes a new &lt;code&gt;BTreeSet&lt;/code&gt; with a reasonable choice of B.</source>
          <target state="translated">使用合理的B值制作一个新的 &lt;code&gt;BTreeSet&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a781f5d796d1c37fbc01362e95835e22088ff170" translate="yes" xml:space="preserve">
          <source>Makes a new &lt;code&gt;Ref&lt;/code&gt; for a component of the borrowed data.</source>
          <target state="translated">为借入数据的一部分创建新的 &lt;code&gt;Ref&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="278e1cc774975411f6e08d7aebe6c4b4e9c25568" translate="yes" xml:space="preserve">
          <source>Makes a new &lt;code&gt;RefMut&lt;/code&gt; for a component of the borrowed data, e.g., an enum variant.</source>
          <target state="translated">为借用数据的一部分（例如，枚举变量）创建新的 &lt;code&gt;RefMut&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="283aa1fed88c10ebb8edc51655bd6a83920089a2" translate="yes" xml:space="preserve">
          <source>Makes a new empty BTreeMap with a reasonable choice for B.</source>
          <target state="translated">使一个新的空BTreeMap与B的合理选择。</target>
        </trans-unit>
        <trans-unit id="540d9e49b40fedaea8393e2653dc20ecf4dc809a" translate="yes" xml:space="preserve">
          <source>Makes a new empty BTreeMap.</source>
          <target state="translated">创建一个新的空BTreeMap。</target>
        </trans-unit>
        <trans-unit id="edde01f6a4b5f1312a7262cef981ed1114e0076e" translate="yes" xml:space="preserve">
          <source>Makes a new, empty &lt;code&gt;BTreeMap&lt;/code&gt;.</source>
          <target state="translated">生成一个新的空 &lt;code&gt;BTreeMap&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4151fd28b8674ccc304f000820c74d1089644f4d" translate="yes" xml:space="preserve">
          <source>Makes a new, empty &lt;code&gt;BTreeSet&lt;/code&gt;.</source>
          <target state="translated">生成一个新的空 &lt;code&gt;BTreeSet&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2185704ef8fdb0964925f4ab6a6fcc6a90f32392" translate="yes" xml:space="preserve">
          <source>Makes an empty &lt;code&gt;BTreeSet&amp;lt;T&amp;gt;&lt;/code&gt; with a reasonable choice of B.</source>
          <target state="translated">使用合理的B来创建一个空的 &lt;code&gt;BTreeSet&amp;lt;T&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa4f9a96a9969672dc553ff0f59ac09bc8fd1d4b" translate="yes" xml:space="preserve">
          <source>Making Code Clearer with Iterator Adaptors</source>
          <target state="translated">使用迭代器适配器让代码更清晰。</target>
        </trans-unit>
        <trans-unit id="0be549adec6c4078f9192f2037937c6ed7dc4414" translate="yes" xml:space="preserve">
          <source>Making Structs and Enums Public</source>
          <target state="translated">公开结构和枚举</target>
        </trans-unit>
        <trans-unit id="f726c18b4c7efce9ac3b84c7741581c3646b1ec5" translate="yes" xml:space="preserve">
          <source>Making Useful Documentation Comments</source>
          <target state="translated">制作有用的文件评论</target>
        </trans-unit>
        <trans-unit id="1c3b5a5bc06c23419d77d273dc1f5cd6abe50ac2" translate="yes" xml:space="preserve">
          <source>Making programmers annotate the types in these small, anonymous functions would be annoying and largely redundant with the information the compiler already has available.</source>
          <target state="translated">让程序员对这些小的匿名函数中的类型进行注释会很麻烦,而且与编译器已有的信息相比基本上是多余的。</target>
        </trans-unit>
        <trans-unit id="f3cb970fe3641fbfc89185e2ed186cc580150a10" translate="yes" xml:space="preserve">
          <source>Making your own:</source>
          <target state="translated">自己做。</target>
        </trans-unit>
        <trans-unit id="d14d90edf49e39f5bd2a9db025048da3c7bdc65a" translate="yes" xml:space="preserve">
          <source>Malformed inline assembly rejected by LLVM.</source>
          <target state="translated">畸形的在线装配被LLVM拒绝。</target>
        </trans-unit>
        <trans-unit id="fa459cf08953bcf4efc4e2de46a7eb88331c909b" translate="yes" xml:space="preserve">
          <source>Management of mutexes can be incredibly tricky to get right, which is why so many people are enthusiastic about channels. However, thanks to Rust&amp;rsquo;s type system and ownership rules, you can&amp;rsquo;t get locking and unlocking wrong.</source>
          <target state="translated">互斥锁的管理很难正确，这就是为什么这么多人热衷于渠道的原因。但是，由于Rust的类型系统和所有权规则，您不会出现锁定和解锁错误的情况。</target>
        </trans-unit>
        <trans-unit id="32669800cbcfbb3c25b1d2dca7e0647a969d2310" translate="yes" xml:space="preserve">
          <source>Managing Growing Projects with Packages, Crates, and Modules</source>
          <target state="translated">使用软件包、板条箱和模块管理成长中的项目</target>
        </trans-unit>
        <trans-unit id="bac0c6db61c690d85ce8891466d311628def1204" translate="yes" xml:space="preserve">
          <source>Manual cleanup by explicitly running the destructor and deallocating the memory:</source>
          <target state="translated">通过显式运行析构器并重新分配内存进行手动清理。</target>
        </trans-unit>
        <trans-unit id="4bb0f5664832e7d5b5156b1f9a49ed8f9963a4c6" translate="yes" xml:space="preserve">
          <source>Manually create a &lt;code&gt;Box&lt;/code&gt; from scratch by using the global allocator:</source>
          <target state="translated">使用全局分配器从头开始手动创建 &lt;code&gt;Box&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="95b428f28bdeb53004768b2b632b7999a8e7e2ed" translate="yes" xml:space="preserve">
          <source>Manually create a &lt;code&gt;Box&lt;/code&gt; from scratch by using the system allocator:</source>
          <target state="translated">使用系统分配器从头开始手动创建 &lt;code&gt;Box&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5ae74603719e41d33e01446b92c34f34abab1e8d" translate="yes" xml:space="preserve">
          <source>Manually drops the contained value.</source>
          <target state="translated">手动放弃包含的值。</target>
        </trans-unit>
        <trans-unit id="fb7bce2897ed79f90e7bc1c68e59dd547267e3cf" translate="yes" xml:space="preserve">
          <source>Manually drops the contained value. This is exactly equivalent to calling &lt;a href=&quot;../ptr/fn.drop_in_place&quot;&gt;&lt;code&gt;ptr::drop_in_place&lt;/code&gt;&lt;/a&gt; with a pointer to the contained value. As such, unless the contained value is a packed struct, the destructor will be called in-place without moving the value, and thus can be used to safely drop &lt;a href=&quot;../pin/index&quot;&gt;pinned&lt;/a&gt; data.</source>
          <target state="translated">手动删除包含的值。这完全等效于使用指向所包含值的指针调用&lt;a href=&quot;../ptr/fn.drop_in_place&quot;&gt; &lt;code&gt;ptr::drop_in_place&lt;/code&gt; &lt;/a&gt;。这样，除非所包含的值是打包的结构，否则析构函数将在不移动值的情况下就地调用，因此可用于安全地删除&lt;a href=&quot;../pin/index&quot;&gt;固定的&lt;/a&gt;数据。</target>
        </trans-unit>
        <trans-unit id="d5d3e558818238f853cd41590676e6b0ae84ca10" translate="yes" xml:space="preserve">
          <source>Manually implement &lt;a href=&quot;../mem/fn.swap&quot;&gt;&lt;code&gt;mem::swap&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">手动实现&lt;a href=&quot;../mem/fn.swap&quot;&gt; &lt;code&gt;mem::swap&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="81e1d8d8d28791b682c9dd5fafecf45c98c894b0" translate="yes" xml:space="preserve">
          <source>Manually implement &lt;a href=&quot;../vec/struct.vec#method.append&quot;&gt;&lt;code&gt;Vec::append&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">手动实现&lt;a href=&quot;../vec/struct.vec#method.append&quot;&gt; &lt;code&gt;Vec::append&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="540ff29bf252e98c28d525edf6412a6a1783a89f" translate="yes" xml:space="preserve">
          <source>Manually implementing these traits involves implementing unsafe Rust code. We&amp;rsquo;ll talk about using unsafe Rust code in Chapter 19; for now, the important information is that building new concurrent types not made up of &lt;code&gt;Send&lt;/code&gt; and &lt;code&gt;Sync&lt;/code&gt; parts requires careful thought to uphold the safety guarantees. &lt;a href=&quot;https://doc.rust-lang.org/nomicon/index.html&quot;&gt;&amp;ldquo;The Rustonomicon&amp;rdquo;&lt;/a&gt; has more information about these guarantees and how to uphold them.</source>
          <target state="translated">手动实现这些特征涉及实现不安全的Rust代码。我们将在第19章中讨论使用不安全的Rust代码。目前，重要的信息是，构建新的并发类型而不是由&amp;ldquo; &lt;code&gt;Send&lt;/code&gt; 和&amp;ldquo; &lt;code&gt;Sync&lt;/code&gt; 部分组成时，需要仔细考虑以确保安全性。&lt;a href=&quot;https://doc.rust-lang.org/nomicon/index.html&quot;&gt;&amp;ldquo; Rustonomicon&amp;rdquo;&lt;/a&gt;具有有关这些保证以及如何维持这些保证的更多信息。</target>
        </trans-unit>
        <trans-unit id="3fef3e11606bd60261d9a5caddcd97763d588f6c" translate="yes" xml:space="preserve">
          <source>Manually implementing these traits involves implementing unsafe Rust code. We&amp;rsquo;ll talk about using unsafe Rust code in Chapter 19; for now, the important information is that building new concurrent types not made up of &lt;code&gt;Send&lt;/code&gt; and &lt;code&gt;Sync&lt;/code&gt; parts requires careful thought to uphold the safety guarantees. &lt;a href=&quot;https://doc.rust-lang.org/stable/nomicon/index.html&quot;&gt;The Rustonomicon&lt;/a&gt; has more information about these guarantees and how to uphold them.</source>
          <target state="translated">手动实现这些特征涉及实现不安全的Rust代码。我们将在第19章中讨论使用不安全的Rust代码。目前，重要的信息是，构建新的并发类型而不由&amp;ldquo; &lt;code&gt;Send&lt;/code&gt; 和&amp;ldquo; &lt;code&gt;Sync&lt;/code&gt; 部分组成时，需要仔细考虑以确保安全性。&lt;a href=&quot;https://doc.rust-lang.org/stable/nomicon/index.html&quot;&gt;Rustonomicon&lt;/a&gt;拥有有关这些保证以及如何维持这些保证的更多信息。</target>
        </trans-unit>
        <trans-unit id="6875772c5ce142246241ada5c6db0fbc4121917a" translate="yes" xml:space="preserve">
          <source>Manually implementing:</source>
          <target state="translated">手动执行。</target>
        </trans-unit>
        <trans-unit id="c76cf1bc5487111c7ff7f07658b0600d36759821" translate="yes" xml:space="preserve">
          <source>Manually manage memory through raw pointers.</source>
          <target state="translated">通过原始指针手动管理内存。</target>
        </trans-unit>
        <trans-unit id="bb52de8f06ed1791910717e6e139f7255684bfa4" translate="yes" xml:space="preserve">
          <source>Manually remove the last item from a vector:</source>
          <target state="translated">手动从一个向量中删除最后一项。</target>
        </trans-unit>
        <trans-unit id="75a5eb8b2241198d901330cf1baaeb049af418bb" translate="yes" xml:space="preserve">
          <source>ManuallyDrop</source>
          <target state="translated">ManuallyDrop</target>
        </trans-unit>
        <trans-unit id="0ff49992553914f35e95f678e4651c519531be19" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::borrow</source>
          <target state="translated">ManuallyDrop::borrow</target>
        </trans-unit>
        <trans-unit id="e5866233ecb81d35fc4c06e7aa867877316062f7" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::borrow_mut</source>
          <target state="translated">ManuallyDrop::borrow_mut</target>
        </trans-unit>
        <trans-unit id="bb4bc8cef32d3dd1adb9b671371b51ee97a7372a" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::clamp</source>
          <target state="translated">ManuallyDrop::clamp</target>
        </trans-unit>
        <trans-unit id="a258f3620afb6729be4732891e11a8c3a4960b35" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::clone</source>
          <target state="translated">ManuallyDrop::clone</target>
        </trans-unit>
        <trans-unit id="05e63ab6d29a7a5ebd15711613d2e33238d33c5c" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::clone_from</source>
          <target state="translated">ManuallyDrop::clone_from</target>
        </trans-unit>
        <trans-unit id="27ce3992f06bab23ef7ecdc00e69e69c64222ba5" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::clone_into</source>
          <target state="translated">ManuallyDrop::clone_into</target>
        </trans-unit>
        <trans-unit id="9aea997c1c52a9eb2bb803351c7dca247a166a2f" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::cmp</source>
          <target state="translated">ManuallyDrop::cmp</target>
        </trans-unit>
        <trans-unit id="747a3b572684b844c2a4c3556b8949e29fea34ec" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::default</source>
          <target state="translated">ManuallyDrop::default</target>
        </trans-unit>
        <trans-unit id="79d46a552813ce7815952b600c48e5b93c95ef87" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::deref</source>
          <target state="translated">ManuallyDrop::deref</target>
        </trans-unit>
        <trans-unit id="5d9d451b9a7433a5c92ed5e5b380480b0f9132bd" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::deref_mut</source>
          <target state="translated">ManuallyDrop::deref_mut</target>
        </trans-unit>
        <trans-unit id="3401a5ca235ecfd9ff38182608c65bbd70928805" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::drop</source>
          <target state="translated">ManuallyDrop::drop</target>
        </trans-unit>
        <trans-unit id="cffffdcd791ba0dfd910260ec733c70393dfc2cc" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::eq</source>
          <target state="translated">ManuallyDrop::eq</target>
        </trans-unit>
        <trans-unit id="4c085ca90dbc1eab8ccf43a0009f0ab3086cb5f8" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::fmt</source>
          <target state="translated">ManuallyDrop::fmt</target>
        </trans-unit>
        <trans-unit id="9825f9a0deb90ddba8b0dd90214596371285c92a" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::from</source>
          <target state="translated">ManuallyDrop::from</target>
        </trans-unit>
        <trans-unit id="342b69fedd01afaf0f1b87bab9d8cee14185af05" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::ge</source>
          <target state="translated">ManuallyDrop::ge</target>
        </trans-unit>
        <trans-unit id="2dfb7a4c123b39c58646c84396fae274126ca87a" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::gt</source>
          <target state="translated">ManuallyDrop::gt</target>
        </trans-unit>
        <trans-unit id="2f7911193372b76c4c437a07fe7c1a80f89642c6" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::hash</source>
          <target state="translated">ManuallyDrop::hash</target>
        </trans-unit>
        <trans-unit id="307abb97d7a83c9cd8613613885c4d1695a785af" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::hash_slice</source>
          <target state="translated">ManuallyDrop::hash_slice</target>
        </trans-unit>
        <trans-unit id="58c2a06e97cbbfc5ea6ad890b23262056bc15050" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::into</source>
          <target state="translated">ManuallyDrop::into</target>
        </trans-unit>
        <trans-unit id="e49ff403586f091fb5a7449bf767effb956ba0cf" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::into_inner</source>
          <target state="translated">ManuallyDrop::into_inner</target>
        </trans-unit>
        <trans-unit id="84250d05114c51d17952cb262ee0278e1a84a8a5" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::le</source>
          <target state="translated">ManuallyDrop::le</target>
        </trans-unit>
        <trans-unit id="9d64d7de989098ce0554a7c48ed7c5bfe51622e8" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::lt</source>
          <target state="translated">ManuallyDrop::lt</target>
        </trans-unit>
        <trans-unit id="14e565f729cf4f2941482964c6f3f00d9b8a29b7" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::max</source>
          <target state="translated">ManuallyDrop::max</target>
        </trans-unit>
        <trans-unit id="05d11d60a8ff6f9820cc7d4611b2a51f3cb4d4a4" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::min</source>
          <target state="translated">ManuallyDrop::min</target>
        </trans-unit>
        <trans-unit id="a790ef37ec80d8b2ad924d14b5d7e2e5176578ec" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::ne</source>
          <target state="translated">ManuallyDrop::ne</target>
        </trans-unit>
        <trans-unit id="dec7845815f60658c15281c1f79fb29a12700422" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::new</source>
          <target state="translated">ManuallyDrop::new</target>
        </trans-unit>
        <trans-unit id="1687c7f86ad3a66dcfa37560f79c6f09e76e7e01" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::partial_cmp</source>
          <target state="translated">ManuallyDrop::partial_cmp</target>
        </trans-unit>
        <trans-unit id="ac4a9c56d7567f613d40ab18d47ec612a4a7257a" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::take</source>
          <target state="translated">ManuallyDrop::take</target>
        </trans-unit>
        <trans-unit id="3745dcb1c49b08d18b087f92e1e6a66b6b2bd928" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::to_owned</source>
          <target state="translated">ManuallyDrop::to_owned</target>
        </trans-unit>
        <trans-unit id="c5ff516c9244a2f6aff068058ab94e3870f6da6e" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::try_from</source>
          <target state="translated">ManuallyDrop::try_from</target>
        </trans-unit>
        <trans-unit id="4e9b867ee8ca49c0141fa4c441ec1d6b64d20709" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::try_into</source>
          <target state="translated">ManuallyDrop::try_into</target>
        </trans-unit>
        <trans-unit id="d032a4ae2e222fee9a81b0c504905787d1cffc97" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::type_id</source>
          <target state="translated">ManuallyDrop::type_id</target>
        </trans-unit>
        <trans-unit id="0484839de4fe3406648b41928f1dde69deca9b74" translate="yes" xml:space="preserve">
          <source>Many &lt;a href=&quot;trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;s don't know how many times they will iterate, but some do. If an iterator knows how many times it can iterate, providing access to that information can be useful. For example, if you want to iterate backwards, a good start is to know where the end is.</source>
          <target state="translated">许多&lt;a href=&quot;trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;不知道它们将迭代多少次，但是有些迭代器知道。如果迭代器知道可以迭代多少次，则提供对该信息的访问可能会很有用。例如，如果要向后迭代，一个好的开始就是知道终点在哪里。</target>
        </trans-unit>
        <trans-unit id="c0580adef286548602a7c6b76f2902b81639f53c" translate="yes" xml:space="preserve">
          <source>Many I/O functions throughout the standard library are documented to indicate what various library or syscalls they are delegated to. This is done to help applications both understand what's happening under the hood as well as investigate any possibly unclear semantics. Note, however, that this is informative, not a binding contract. The implementation of many of these functions are subject to change over time and may call fewer or more syscalls/library functions.</source>
          <target state="translated">在整个标准库中,许多I/O函数都被记录下来,以表明它们被委托给了哪些不同的库或syscall。这样做的目的是为了帮助应用程序理解在引擎下发生的事情,以及调查任何可能不明确的语义。但是,请注意,这只是提供信息,而不是一个有约束力的合同。这些函数中的许多函数的实现会随着时间的推移而改变,可能会调用更少或更多的syscall/library函数。</target>
        </trans-unit>
        <trans-unit id="bc24a04fe684f5f353db22858c0879621d2c150e" translate="yes" xml:space="preserve">
          <source>Many collections provide several constructors and methods that refer to &quot;capacity&quot;. These collections are generally built on top of an array. Optimally, this array would be exactly the right size to fit only the elements stored in the collection, but for the collection to do this would be very inefficient. If the backing array was exactly the right size at all times, then every time an element is inserted, the collection would have to grow the array to fit it. Due to the way memory is allocated and managed on most computers, this would almost surely require allocating an entirely new array and copying every single element from the old one into the new one. Hopefully you can see that this wouldn't be very efficient to do on every operation.</source>
          <target state="translated">许多集合都提供了几个引用 &quot;容量 &quot;的构造函数和方法。这些集合一般都是建立在一个数组之上的。最理想的情况是,这个数组的大小完全正确,只适合存储在集合中的元素,但是对于集合来说,这样做的效率会非常低。如果后盾数组在任何时候都是完全正确的大小,那么每次插入一个元素,集合就必须增长数组来适应它。由于大多数计算机的内存分配和管理方式,这几乎肯定需要分配一个全新的数组,并将旧数组中的每一个元素复制到新数组中。希望你能看到,这样做并不是每次操作都很有效率。</target>
        </trans-unit>
        <trans-unit id="76b19e79175576e6cab7093093e0ddb1fd52809f" translate="yes" xml:space="preserve">
          <source>Many functions in this module take raw pointers as arguments and read from or write to them. For this to be safe, these pointers must be &lt;em&gt;valid&lt;/em&gt;. Whether a pointer is valid depends on the operation it is used for (read or write), and the extent of the memory that is accessed (i.e., how many bytes are read/written). Most functions use &lt;code&gt;*mut T&lt;/code&gt; and &lt;code&gt;*const T&lt;/code&gt; to access only a single value, in which case the documentation omits the size and implicitly assumes it to be &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</source>
          <target state="translated">该模块中的许多函数都将原始指针作为参数，并从中读取或写入它们。为了安全起见，这些指针必须&lt;em&gt;有效&lt;/em&gt;。指针是否有效取决于指针用于（读取或写入）的操作以及访问的内存范围（即，读取/写入多少字节）。大多数函数使用 &lt;code&gt;*mut T&lt;/code&gt; 和 &lt;code&gt;*const T&lt;/code&gt; 来访问单个值，在这种情况下，文档将忽略该大小，并隐式假定该大小为 &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; 字节。</target>
        </trans-unit>
        <trans-unit id="13d014fff5ec1912fa9a9184bedfeb8068f9c08d" translate="yes" xml:space="preserve">
          <source>Many languages are dogmatic about the solutions they offer for handling concurrent problems. For example, Erlang has elegant functionality for message-passing concurrency but has only obscure ways to share state between threads. Supporting only a subset of possible solutions is a reasonable strategy for higher-level languages, because a higher-level language promises benefits from giving up some control to gain abstractions. However, lower-level languages are expected to provide the solution with the best performance in any given situation and have fewer abstractions over the hardware. Therefore, Rust offers a variety of tools for modeling problems in whatever way is appropriate for your situation and requirements.</source>
          <target state="translated">许多语言对于它们提供的处理并发问题的解决方案都很教条。例如,Erlang有优雅的消息传递并发功能,但只有晦涩的线程间共享状态的方法。对于更高级别的语言来说,只支持可能的解决方案的子集是一个合理的策略,因为更高级别的语言承诺通过放弃一些控制来获得抽象的好处。然而,低级语言有望在任何给定情况下提供性能最佳的解决方案,并且对硬件的抽象较少。因此,Rust提供了各种工具,以任何适合你的情况和要求的方式对问题进行建模。</target>
        </trans-unit>
        <trans-unit id="d4c938f1a7f4caf7f410216dbf9505989bc2be65" translate="yes" xml:space="preserve">
          <source>Many of the following operators and expressions can also be overloaded for other types using traits in &lt;code&gt;std::ops&lt;/code&gt; or &lt;code&gt;std::cmp&lt;/code&gt;. These traits also exist in &lt;code&gt;core::ops&lt;/code&gt; and &lt;code&gt;core::cmp&lt;/code&gt; with the same names.</source>
          <target state="translated">对于 &lt;code&gt;std::ops&lt;/code&gt; 或 &lt;code&gt;std::cmp&lt;/code&gt; trait，以下类型的许多运算符和表达式也可以重载为其他类型。这些特征还存在于具有相同名称的 &lt;code&gt;core::ops&lt;/code&gt; 和 &lt;code&gt;core::cmp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b90bc029a171633a89b2034a09fb0706d49bed6" translate="yes" xml:space="preserve">
          <source>Many of the operators take their operands by value. In non-generic contexts involving built-in types, this is usually not a problem. However, using these operators in generic code, requires some attention if values have to be reused as opposed to letting the operators consume them. One option is to occasionally use &lt;a href=&quot;../clone/trait.clone#tymethod.clone&quot;&gt;&lt;code&gt;clone&lt;/code&gt;&lt;/a&gt;. Another option is to rely on the types involved providing additional operator implementations for references. For example, for a user-defined type &lt;code&gt;T&lt;/code&gt; which is supposed to support addition, it is probably a good idea to have both &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;&amp;amp;T&lt;/code&gt; implement the traits &lt;a href=&quot;trait.add&quot;&gt;&lt;code&gt;Add&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.add&quot;&gt;&lt;code&gt;Add&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt;&lt;/a&gt; so that generic code can be written without unnecessary cloning.</source>
          <target state="translated">许多运算符按值取其操作数。在涉及内置类型的非泛型上下文中，这通常不是问题。但是，在通用代码中使用这些运算符时，如果必须重用值而不是让运算符使用它们，则需要引起注意。一种选择是偶尔使用&lt;a href=&quot;../clone/trait.clone#tymethod.clone&quot;&gt; &lt;code&gt;clone&lt;/code&gt; &lt;/a&gt;。另一个选择是依靠所涉及的类型来提供其他操作员实现以供参考。例如，对于应该支持加法的用户定义类型 &lt;code&gt;T&lt;/code&gt; ，让 &lt;code&gt;T&lt;/code&gt; 和 &lt;code&gt;&amp;amp;T&lt;/code&gt; 都实现特征&lt;a href=&quot;trait.add&quot;&gt; &lt;code&gt;Add&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;trait.add&quot;&gt; &lt;code&gt;Add&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; &lt;/a&gt;可能是一个好主意，这样就可以编写通用代码而无需不必要的操作克隆。</target>
        </trans-unit>
        <trans-unit id="068d0085110695f778d351f46b177f0bbabef680" translate="yes" xml:space="preserve">
          <source>Many of the same operations available with &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; are available with &lt;code&gt;String&lt;/code&gt; as well, starting with the &lt;code&gt;new&lt;/code&gt; function to create a string, shown in Listing 8-11.</source>
          <target state="translated">&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; 可用的许多相同操作也可用于 &lt;code&gt;String&lt;/code&gt; ，从创建字符串的 &lt;code&gt;new&lt;/code&gt; 函数开始，如清单8-11所示。</target>
        </trans-unit>
        <trans-unit id="3254468e9df291d0c506cf9f47d3052afb8cf80e" translate="yes" xml:space="preserve">
          <source>Many programming languages provide their own special implementation of threads. Programming language-provided threads are known as &lt;em&gt;green&lt;/em&gt; threads, and languages that use these green threads will execute them in the context of a different number of operating system threads. For this reason, the green-threaded model is called the &lt;em&gt;M:N&lt;/em&gt; model: there are &lt;code&gt;M&lt;/code&gt; green threads per &lt;code&gt;N&lt;/code&gt; operating system threads, where &lt;code&gt;M&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt; are not necessarily the same number.</source>
          <target state="translated">许多编程语言提供了自己的特殊线程实现。编程语言提供的线程被称为&lt;em&gt;绿色&lt;/em&gt;线程，使用这些绿色线程的语言将在不同数量的操作系统线程的上下文中执行它们。因此，绿色线程模型称为&lt;em&gt;M：N&lt;/em&gt;模型：每 &lt;code&gt;N&lt;/code&gt; 个操作系统线程有 &lt;code&gt;M&lt;/code&gt; 个绿色线程，其中 &lt;code&gt;M&lt;/code&gt; 和 &lt;code&gt;N&lt;/code&gt; 不必相同。</target>
        </trans-unit>
        <trans-unit id="8963e190dad9b5c2c0a517c43746d1a72fc75e7c" translate="yes" xml:space="preserve">
          <source>Many shared smart pointer types, including &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt;, provide containers that can be cloned and shared between multiple parties. Because the contained values may be multiply-aliased, they can only be borrowed with &lt;code&gt;&amp;amp;&lt;/code&gt;, not &lt;code&gt;&amp;amp;mut&lt;/code&gt;. Without cells it would be impossible to mutate data inside of these smart pointers at all.</source>
          <target state="translated">许多共享的智能指针类型，包括 &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 和 &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; ，都提供了可以在多方之间克隆和共享的容器。因为所包含的值可以乘以别名，所以只能通过 &lt;code&gt;&amp;amp;&lt;/code&gt; 借用，不能通过 &lt;code&gt;&amp;amp;mut&lt;/code&gt; 借用。没有单元，根本不可能在这些智能指针中对数据进行突变。</target>
        </trans-unit>
        <trans-unit id="08c077e60b3acb5d875cec7cb9d6d59f52db0053" translate="yes" xml:space="preserve">
          <source>Many threads may call &lt;code&gt;get_or_init&lt;/code&gt; concurrently with different initializing functions, but it is guaranteed that only one function will be executed.</source>
          <target state="translated">许多线程可能会使用不同的初始化函数同时调用 &lt;code&gt;get_or_init&lt;/code&gt; ，但可以保证仅执行一个函数。</target>
        </trans-unit>
        <trans-unit id="360c8791842766a3afd1e2bb160420977a6612f7" translate="yes" xml:space="preserve">
          <source>Many types are always freely movable, even when pinned, because they do not rely on having a stable address. This includes all the basic types (like &lt;a href=&quot;../primitive.bool&quot;&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../primitive.i32&quot;&gt;&lt;code&gt;i32&lt;/code&gt;&lt;/a&gt;, and references) as well as types consisting solely of these types. Types that do not care about pinning implement the &lt;a href=&quot;../marker/trait.unpin&quot;&gt;&lt;code&gt;Unpin&lt;/code&gt;&lt;/a&gt; auto-trait, which cancels the effect of &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt;&lt;/a&gt;. For &lt;code&gt;T: Unpin&lt;/code&gt;, &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; and &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; function identically, as do &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;amp;mut T&lt;/code&gt;.</source>
          <target state="translated">即使不固定，许多类型也始终可以自由移动，因为它们不依赖于具有稳定的地址。这包括所有基本类型（如&lt;a href=&quot;../primitive.bool&quot;&gt; &lt;code&gt;bool&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../primitive.i32&quot;&gt; &lt;code&gt;i32&lt;/code&gt; &lt;/a&gt;和reference）以及仅由这些类型组成的类型。不需要固定的类型将实现&lt;a href=&quot;../marker/trait.unpin&quot;&gt; &lt;code&gt;Unpin&lt;/code&gt; &lt;/a&gt;自动特征，这会取消&lt;a href=&quot;struct.pin&quot;&gt; &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; &lt;/a&gt;。对于 &lt;code&gt;T: Unpin&lt;/code&gt; ，&lt;a href=&quot;struct.pin&quot;&gt; &lt;code&gt;Pin&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 和&lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt;功能相同，&lt;a href=&quot;struct.pin&quot;&gt; &lt;code&gt;Pin&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;amp;mut T&lt;/code&gt; 的功能也相同。</target>
        </trans-unit>
        <trans-unit id="96524e6fb50cd6e78bd3a49b9cef3f18568b875d" translate="yes" xml:space="preserve">
          <source>Many types are always freely movable, even when pinned, because they do not rely on having a stable address. This includes all the basic types (like &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;i32&lt;/code&gt;, and references) as well as types consisting solely of these types. Types that do not care about pinning implement the &lt;a href=&quot;../marker/trait.unpin&quot;&gt;&lt;code&gt;Unpin&lt;/code&gt;&lt;/a&gt; auto-trait, which cancels the effect of &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt;&lt;/a&gt;. For &lt;code&gt;T: Unpin&lt;/code&gt;, &lt;code&gt;Pin&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; function identically, as do &lt;code&gt;Pin&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;amp;mut T&lt;/code&gt;.</source>
          <target state="translated">即使不固定，许多类型也始终可以自由移动，因为它们不依赖于具有稳定的地址。这包括所有基本类型（如 &lt;code&gt;bool&lt;/code&gt; ， &lt;code&gt;i32&lt;/code&gt; 和reference）以及仅由这些类型组成的类型。不需要固定的类型将实现&lt;a href=&quot;../marker/trait.unpin&quot;&gt; &lt;code&gt;Unpin&lt;/code&gt; &lt;/a&gt;自动特征，这会取消&lt;a href=&quot;struct.pin&quot;&gt; &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; &lt;/a&gt;。对于 &lt;code&gt;T: Unpin&lt;/code&gt; ， &lt;code&gt;Pin&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 和 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 功能相同， &lt;code&gt;Pin&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;amp;mut T&lt;/code&gt; 的功能也相同。</target>
        </trans-unit>
        <trans-unit id="ab478f3efc840eebab919dff1b9512286f70c10c" translate="yes" xml:space="preserve">
          <source>Map</source>
          <target state="translated">Map</target>
        </trans-unit>
        <trans-unit id="df29122b53f448bfbd8df7d684e45a356a48d53a" translate="yes" xml:space="preserve">
          <source>Map a &lt;code&gt;Bound&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; to a &lt;code&gt;Bound&amp;lt;T&amp;gt;&lt;/code&gt; by cloning the contents of the bound.</source>
          <target state="translated">通过克隆绑定的内容，将 &lt;code&gt;Bound&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; 映射到 &lt;code&gt;Bound&amp;lt;T&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a58a81fddddcc9b42869ed27a566238e1a8c6d5" translate="yes" xml:space="preserve">
          <source>Map::all</source>
          <target state="translated">Map::all</target>
        </trans-unit>
        <trans-unit id="03a745f35f9d4e2b9b8920e51c8b975225024525" translate="yes" xml:space="preserve">
          <source>Map::any</source>
          <target state="translated">Map::any</target>
        </trans-unit>
        <trans-unit id="e27fd38da04382eeb1d09c2169581e27980d8965" translate="yes" xml:space="preserve">
          <source>Map::borrow</source>
          <target state="translated">Map::borrow</target>
        </trans-unit>
        <trans-unit id="8008fa72e2540ba9977ec160e11c30c29db689ee" translate="yes" xml:space="preserve">
          <source>Map::borrow_mut</source>
          <target state="translated">Map::borrow_mut</target>
        </trans-unit>
        <trans-unit id="630e5d943b1b99e5b6e1c5dde655dc59ab5ead67" translate="yes" xml:space="preserve">
          <source>Map::by_ref</source>
          <target state="translated">Map::by_ref</target>
        </trans-unit>
        <trans-unit id="f9153e36a7758a4c6c8165b792439aca160eae94" translate="yes" xml:space="preserve">
          <source>Map::chain</source>
          <target state="translated">Map::chain</target>
        </trans-unit>
        <trans-unit id="88f217332993f3ef5853b6036404a9b04eb5d0ac" translate="yes" xml:space="preserve">
          <source>Map::clone</source>
          <target state="translated">Map::clone</target>
        </trans-unit>
        <trans-unit id="b396fbb67f91e6a12e22a206a5dfb999efbc0df4" translate="yes" xml:space="preserve">
          <source>Map::clone_from</source>
          <target state="translated">Map::clone_from</target>
        </trans-unit>
        <trans-unit id="e76e1d2031241d6c1bfa8fbbd9d13afe6324ebf9" translate="yes" xml:space="preserve">
          <source>Map::clone_into</source>
          <target state="translated">Map::clone_into</target>
        </trans-unit>
        <trans-unit id="b4397f4a58cb5d1944076bd352733820732697bd" translate="yes" xml:space="preserve">
          <source>Map::cloned</source>
          <target state="translated">Map::cloned</target>
        </trans-unit>
        <trans-unit id="db371665e696808903fcf4889430504c79ae21fc" translate="yes" xml:space="preserve">
          <source>Map::cmp</source>
          <target state="translated">Map::cmp</target>
        </trans-unit>
        <trans-unit id="f8b2a982a2812ec678253c38d1d30209727e2bc7" translate="yes" xml:space="preserve">
          <source>Map::collect</source>
          <target state="translated">Map::collect</target>
        </trans-unit>
        <trans-unit id="f1c1d9b76187baf3d0320022636c2f0e5e69889f" translate="yes" xml:space="preserve">
          <source>Map::copied</source>
          <target state="translated">Map::copied</target>
        </trans-unit>
        <trans-unit id="4a1e3f85e9de5cc61392d0a34fa79e32ccb95b3e" translate="yes" xml:space="preserve">
          <source>Map::count</source>
          <target state="translated">Map::count</target>
        </trans-unit>
        <trans-unit id="72b2b5c0b54a8363747a5badec2258979b6f7450" translate="yes" xml:space="preserve">
          <source>Map::cycle</source>
          <target state="translated">Map::cycle</target>
        </trans-unit>
        <trans-unit id="75eb992b5af7c74e94707b08a42500a0bdbe5987" translate="yes" xml:space="preserve">
          <source>Map::enumerate</source>
          <target state="translated">Map::enumerate</target>
        </trans-unit>
        <trans-unit id="993d6a08bb24f1190f8b7dde7f20470f1c97017c" translate="yes" xml:space="preserve">
          <source>Map::eq</source>
          <target state="translated">Map::eq</target>
        </trans-unit>
        <trans-unit id="a9e5ac2366e118220418421b0caa9bee4fba383a" translate="yes" xml:space="preserve">
          <source>Map::filter</source>
          <target state="translated">Map::filter</target>
        </trans-unit>
        <trans-unit id="b442c2b2361ea72b048219f3e26a5f18e537332f" translate="yes" xml:space="preserve">
          <source>Map::filter_map</source>
          <target state="translated">Map::filter_map</target>
        </trans-unit>
        <trans-unit id="f63418aeba4241d5162fbcce56cc0644c14f1d1c" translate="yes" xml:space="preserve">
          <source>Map::find</source>
          <target state="translated">Map::find</target>
        </trans-unit>
        <trans-unit id="f6144d3320c6dfea791d10217e3e8079952c660e" translate="yes" xml:space="preserve">
          <source>Map::find_map</source>
          <target state="translated">Map::find_map</target>
        </trans-unit>
        <trans-unit id="635fe84f8ddb9aa9bafea1e6c25c86a9ed0e9b4b" translate="yes" xml:space="preserve">
          <source>Map::flat_map</source>
          <target state="translated">Map::flat_map</target>
        </trans-unit>
        <trans-unit id="df8c7d56d90eb915ddece209e0ed60e910cf5810" translate="yes" xml:space="preserve">
          <source>Map::flatten</source>
          <target state="translated">Map::flatten</target>
        </trans-unit>
        <trans-unit id="741d7f7e9bdb0a0542cd59e99d6a8f4cdaf7f84d" translate="yes" xml:space="preserve">
          <source>Map::fmt</source>
          <target state="translated">Map::fmt</target>
        </trans-unit>
        <trans-unit id="ae44712f04dab2122840dd77dd590fa9b454de37" translate="yes" xml:space="preserve">
          <source>Map::fold</source>
          <target state="translated">Map::fold</target>
        </trans-unit>
        <trans-unit id="112cae751955c6b50967e1a0a3cc5f382a9d83ef" translate="yes" xml:space="preserve">
          <source>Map::for_each</source>
          <target state="translated">Map::for_each</target>
        </trans-unit>
        <trans-unit id="34c8999abc6581153960b6dc7ac11211aeeb887f" translate="yes" xml:space="preserve">
          <source>Map::from</source>
          <target state="translated">Map::from</target>
        </trans-unit>
        <trans-unit id="8c3b295e4b4bb67a51c785cb5890d343a0fe3a35" translate="yes" xml:space="preserve">
          <source>Map::fuse</source>
          <target state="translated">Map::fuse</target>
        </trans-unit>
        <trans-unit id="bb5c0aa6766f65baaad20d564cd25d5b3652c7c5" translate="yes" xml:space="preserve">
          <source>Map::ge</source>
          <target state="translated">Map::ge</target>
        </trans-unit>
        <trans-unit id="148bbbf71d9210e5c6e2d74d7b37d6a4959732ae" translate="yes" xml:space="preserve">
          <source>Map::gt</source>
          <target state="translated">Map::gt</target>
        </trans-unit>
        <trans-unit id="59a3caad759408198d5ff6b63ffab02c7f0d0109" translate="yes" xml:space="preserve">
          <source>Map::inspect</source>
          <target state="translated">Map::inspect</target>
        </trans-unit>
        <trans-unit id="0c414c474aadfea661298e12c8c1893a0877e27f" translate="yes" xml:space="preserve">
          <source>Map::into</source>
          <target state="translated">Map::into</target>
        </trans-unit>
        <trans-unit id="be46558bc25fe8b488a966057d9a20b90705b693" translate="yes" xml:space="preserve">
          <source>Map::into_iter</source>
          <target state="translated">Map::into_iter</target>
        </trans-unit>
        <trans-unit id="aa4767aede3957f624bc911847b8de1f51f6759c" translate="yes" xml:space="preserve">
          <source>Map::is_empty</source>
          <target state="translated">Map::is_empty</target>
        </trans-unit>
        <trans-unit id="06ac53014021288c74158a733397c0235d2512ac" translate="yes" xml:space="preserve">
          <source>Map::is_sorted</source>
          <target state="translated">Map::is_sorted</target>
        </trans-unit>
        <trans-unit id="adebe865ede9926f64d1d6ed334e7f319bb11f62" translate="yes" xml:space="preserve">
          <source>Map::is_sorted_by</source>
          <target state="translated">Map::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="ce8087aab9316ebfe810681e115dc046b013c6b0" translate="yes" xml:space="preserve">
          <source>Map::is_sorted_by_key</source>
          <target state="translated">Map::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="fddd4a9e9f359e6b02a370e6da729aa214300ae4" translate="yes" xml:space="preserve">
          <source>Map::last</source>
          <target state="translated">Map::last</target>
        </trans-unit>
        <trans-unit id="3794995c0f5bba6ab4b90ce6c82a5e83207a1571" translate="yes" xml:space="preserve">
          <source>Map::le</source>
          <target state="translated">Map::le</target>
        </trans-unit>
        <trans-unit id="26586aaae30ff20d50715692987bf1a4d7716e8c" translate="yes" xml:space="preserve">
          <source>Map::len</source>
          <target state="translated">Map::len</target>
        </trans-unit>
        <trans-unit id="25ef7d621a5ac63c0fda76bac9dd97d2d2700cd6" translate="yes" xml:space="preserve">
          <source>Map::lt</source>
          <target state="translated">Map::lt</target>
        </trans-unit>
        <trans-unit id="40cac0b5fd45dddd282e0ee446680c17c5c623d7" translate="yes" xml:space="preserve">
          <source>Map::map</source>
          <target state="translated">Map::map</target>
        </trans-unit>
        <trans-unit id="48b5b8f8f6251126a880cc4ab4b3b2011c64448b" translate="yes" xml:space="preserve">
          <source>Map::max</source>
          <target state="translated">Map::max</target>
        </trans-unit>
        <trans-unit id="6fb150f3d87aa0a6ddb9c71c96b522bb70871171" translate="yes" xml:space="preserve">
          <source>Map::max_by</source>
          <target state="translated">Map::max_by</target>
        </trans-unit>
        <trans-unit id="5e6536c48e7829b8ff885ec31d8681a3ced9a901" translate="yes" xml:space="preserve">
          <source>Map::max_by_key</source>
          <target state="translated">Map::max_by_key</target>
        </trans-unit>
        <trans-unit id="68233d057ba78c0b7a8e0a61b6680d3717ba4150" translate="yes" xml:space="preserve">
          <source>Map::min</source>
          <target state="translated">Map::min</target>
        </trans-unit>
        <trans-unit id="8a9341a8b777321cda6d7fcd4082aa0671c4fe1b" translate="yes" xml:space="preserve">
          <source>Map::min_by</source>
          <target state="translated">Map::min_by</target>
        </trans-unit>
        <trans-unit id="921c6c43f49d77c68b806d0e548ee1cef1a992ec" translate="yes" xml:space="preserve">
          <source>Map::min_by_key</source>
          <target state="translated">Map::min_by_key</target>
        </trans-unit>
        <trans-unit id="4d8988fbd101fbf8e6c94aa5288cf45fab81e964" translate="yes" xml:space="preserve">
          <source>Map::ne</source>
          <target state="translated">Map::ne</target>
        </trans-unit>
        <trans-unit id="bd95bbe906046a49dc9810190d741e1bd68bbc39" translate="yes" xml:space="preserve">
          <source>Map::next</source>
          <target state="translated">Map::next</target>
        </trans-unit>
        <trans-unit id="39e2008f43536663d0ca35066c739e6e3ebadc47" translate="yes" xml:space="preserve">
          <source>Map::next_back</source>
          <target state="translated">Map::next_back</target>
        </trans-unit>
        <trans-unit id="bc8224e378d580c52513c9c59784964d8f54fe1a" translate="yes" xml:space="preserve">
          <source>Map::nth</source>
          <target state="translated">Map::nth</target>
        </trans-unit>
        <trans-unit id="ce0694a97b324829d9ed31f3b6e2cc31e3a513e0" translate="yes" xml:space="preserve">
          <source>Map::nth_back</source>
          <target state="translated">Map::nth_back</target>
        </trans-unit>
        <trans-unit id="6dc78fd299f1bfef5c724073e84810a0ebf43ea3" translate="yes" xml:space="preserve">
          <source>Map::partial_cmp</source>
          <target state="translated">Map::partial_cmp</target>
        </trans-unit>
        <trans-unit id="fd07c390ff46f9dcd32482c98f66d65c6fddcc9e" translate="yes" xml:space="preserve">
          <source>Map::partition</source>
          <target state="translated">Map::partition</target>
        </trans-unit>
        <trans-unit id="37114f4f80d49293573e7c92509d712b2a2e49ba" translate="yes" xml:space="preserve">
          <source>Map::peekable</source>
          <target state="translated">Map::peekable</target>
        </trans-unit>
        <trans-unit id="9b4d7af93bb9bdf0426605707f0b34a9ff7e2daa" translate="yes" xml:space="preserve">
          <source>Map::position</source>
          <target state="translated">Map::position</target>
        </trans-unit>
        <trans-unit id="3d27eb47b8bdd3a8842e3f21315f7117954ca629" translate="yes" xml:space="preserve">
          <source>Map::product</source>
          <target state="translated">Map::product</target>
        </trans-unit>
        <trans-unit id="47c5c4644d5a03d1a05f0fbb573d4f9546fc7eda" translate="yes" xml:space="preserve">
          <source>Map::rev</source>
          <target state="translated">Map::rev</target>
        </trans-unit>
        <trans-unit id="98eeaa4cd728ab7a6cea0c95712fbc4770918b02" translate="yes" xml:space="preserve">
          <source>Map::rfind</source>
          <target state="translated">Map::rfind</target>
        </trans-unit>
        <trans-unit id="7f3aad1b4b83a46d17d2320a509b0bca35196ddc" translate="yes" xml:space="preserve">
          <source>Map::rfold</source>
          <target state="translated">Map::rfold</target>
        </trans-unit>
        <trans-unit id="602b0edc5518aae4fa0c05975ed09058fc128538" translate="yes" xml:space="preserve">
          <source>Map::rposition</source>
          <target state="translated">Map::rposition</target>
        </trans-unit>
        <trans-unit id="c6c10105cff31b60a7f7d97985eee0e40ee6b580" translate="yes" xml:space="preserve">
          <source>Map::scan</source>
          <target state="translated">Map::scan</target>
        </trans-unit>
        <trans-unit id="6600c2d56964d5ec64f83bb9495bd9cb7812154f" translate="yes" xml:space="preserve">
          <source>Map::size_hint</source>
          <target state="translated">Map::size_hint</target>
        </trans-unit>
        <trans-unit id="923e99f72130f5a97cac9c41715a3476d75c8951" translate="yes" xml:space="preserve">
          <source>Map::skip</source>
          <target state="translated">Map::skip</target>
        </trans-unit>
        <trans-unit id="9611218973349584a7bfbfb37c26e1ef38fb218f" translate="yes" xml:space="preserve">
          <source>Map::skip_while</source>
          <target state="translated">Map::skip_while</target>
        </trans-unit>
        <trans-unit id="37f15143aefd854a8af3e39ab55c70a5a192f8d8" translate="yes" xml:space="preserve">
          <source>Map::step_by</source>
          <target state="translated">Map::step_by</target>
        </trans-unit>
        <trans-unit id="7f04c8c1b54f17f3163e839e0042fa9006757120" translate="yes" xml:space="preserve">
          <source>Map::sum</source>
          <target state="translated">Map::sum</target>
        </trans-unit>
        <trans-unit id="87a9e6e637b04e1927a2c2eeae5ce601d8133256" translate="yes" xml:space="preserve">
          <source>Map::take</source>
          <target state="translated">Map::take</target>
        </trans-unit>
        <trans-unit id="f840d3533ded62863a4a0980e694e739563fdcc6" translate="yes" xml:space="preserve">
          <source>Map::take_while</source>
          <target state="translated">Map::take_while</target>
        </trans-unit>
        <trans-unit id="b22c8ca3fc8de8258f5c9cd3b2dc713ff6fcfb77" translate="yes" xml:space="preserve">
          <source>Map::to_owned</source>
          <target state="translated">Map::to_owned</target>
        </trans-unit>
        <trans-unit id="e9e6303270d6b2a52a8c06e6ea872d1081d4b3d0" translate="yes" xml:space="preserve">
          <source>Map::try_fold</source>
          <target state="translated">Map::try_fold</target>
        </trans-unit>
        <trans-unit id="2f933b05d507f1d3229a0fe286c9a34e8d46fa7c" translate="yes" xml:space="preserve">
          <source>Map::try_for_each</source>
          <target state="translated">Map::try_for_each</target>
        </trans-unit>
        <trans-unit id="bcd71f7fed78903d5ba372cc2b24eff4b81cfb7c" translate="yes" xml:space="preserve">
          <source>Map::try_from</source>
          <target state="translated">Map::try_from</target>
        </trans-unit>
        <trans-unit id="377418caebd9f1c884f3b21ab42fefd1a732ed86" translate="yes" xml:space="preserve">
          <source>Map::try_into</source>
          <target state="translated">Map::try_into</target>
        </trans-unit>
        <trans-unit id="39f1bb6fc690aefbc861e9a1fcc04ae870ca5342" translate="yes" xml:space="preserve">
          <source>Map::try_rfold</source>
          <target state="translated">Map::try_rfold</target>
        </trans-unit>
        <trans-unit id="7981573889b59d44592e7cd96024ff52ab0f2d02" translate="yes" xml:space="preserve">
          <source>Map::type_id</source>
          <target state="translated">Map::type_id</target>
        </trans-unit>
        <trans-unit id="28a8fad3b6d7b8e3263b1c130ee318dddf630612" translate="yes" xml:space="preserve">
          <source>Map::unzip</source>
          <target state="translated">Map::unzip</target>
        </trans-unit>
        <trans-unit id="0c9357ee56278da444fa47d2152d6415837f2772" translate="yes" xml:space="preserve">
          <source>Map::zip</source>
          <target state="translated">Map::zip</target>
        </trans-unit>
        <trans-unit id="e756756cc8409d6509546ae5d3bd850bcef76291" translate="yes" xml:space="preserve">
          <source>MapWhile</source>
          <target state="translated">MapWhile</target>
        </trans-unit>
        <trans-unit id="83cefc6377d7fddbe40b4eec70dcd5e0779d80d1" translate="yes" xml:space="preserve">
          <source>Mapping and then flattening:</source>
          <target state="translated">摸底,然后再进行扁平化处理。</target>
        </trans-unit>
        <trans-unit id="80071cd75107cd5c4afdb2571725ea6733631038" translate="yes" xml:space="preserve">
          <source>Maps</source>
          <target state="translated">Maps</target>
        </trans-unit>
        <trans-unit id="14641b96d419633d95de2065c3d26825c594b3f9" translate="yes" xml:space="preserve">
          <source>Maps &lt;code&gt;ControlFlow&amp;lt;B, C&amp;gt;&lt;/code&gt; to &lt;code&gt;ControlFlow&amp;lt;T, C&amp;gt;&lt;/code&gt; by applying a function to the break value in case it exists.</source>
          <target state="translated">通过将函数应用于中断值（如果存在），将 &lt;code&gt;ControlFlow&amp;lt;B, C&amp;gt;&lt;/code&gt; 映射到 &lt;code&gt;ControlFlow&amp;lt;T, C&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7dfca1c39dc2005ffa58f05878051dfb7ab133c0" translate="yes" xml:space="preserve">
          <source>Maps a &lt;code&gt;Result&amp;lt;&amp;amp;T, E&amp;gt;&lt;/code&gt; to a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; by cloning the contents of the &lt;code&gt;Ok&lt;/code&gt; part.</source>
          <target state="translated">通过克隆 &lt;code&gt;Ok&lt;/code&gt; 部分的内容，将 &lt;code&gt;Result&amp;lt;&amp;amp;T, E&amp;gt;&lt;/code&gt; 映射到 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d25505fbe1870538ccc1572575cda9f420028758" translate="yes" xml:space="preserve">
          <source>Maps a &lt;code&gt;Result&amp;lt;&amp;amp;T, E&amp;gt;&lt;/code&gt; to a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; by copying the contents of the &lt;code&gt;Ok&lt;/code&gt; part.</source>
          <target state="translated">通过复制 &lt;code&gt;Ok&lt;/code&gt; 部件的内容，将 &lt;code&gt;Result&amp;lt;&amp;amp;T, E&amp;gt;&lt;/code&gt; 映射到 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26ddf84303b0a1a0f206dd98bc1ca95bc7fd61f9" translate="yes" xml:space="preserve">
          <source>Maps a &lt;code&gt;Result&amp;lt;&amp;amp;mut T, E&amp;gt;&lt;/code&gt; to a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; by cloning the contents of the &lt;code&gt;Ok&lt;/code&gt; part.</source>
          <target state="translated">通过克隆 &lt;code&gt;Ok&lt;/code&gt; 部分的内容，将 &lt;code&gt;Result&amp;lt;&amp;amp;mut T, E&amp;gt;&lt;/code&gt; 映射到 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75078b53df865555f845fe3a893c127ababf9294" translate="yes" xml:space="preserve">
          <source>Maps a &lt;code&gt;Result&amp;lt;&amp;amp;mut T, E&amp;gt;&lt;/code&gt; to a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; by copying the contents of the &lt;code&gt;Ok&lt;/code&gt; part.</source>
          <target state="translated">通过复制 &lt;code&gt;Ok&lt;/code&gt; 部分的内容，将 &lt;code&gt;Result&amp;lt;&amp;amp;mut T, E&amp;gt;&lt;/code&gt; 映射到 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="734564b861ed03b0aefe58885560fbc7857a1738" translate="yes" xml:space="preserve">
          <source>Maps a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; to &lt;code&gt;Result&amp;lt;T, F&amp;gt;&lt;/code&gt; by applying a function to a contained &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; value, leaving an &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; value untouched.</source>
          <target state="translated">通过将函数应用于所包含的&lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt;值，将 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 映射到 &lt;code&gt;Result&amp;lt;T, F&amp;gt;&lt;/code&gt; ，保持&lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt;值不变。</target>
        </trans-unit>
        <trans-unit id="ad065da187875e2c9f2477c5e59a007924643b31" translate="yes" xml:space="preserve">
          <source>Maps a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; to &lt;code&gt;Result&amp;lt;U, E&amp;gt;&lt;/code&gt; by applying a function to a contained &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; value, leaving an &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; value untouched.</source>
          <target state="translated">通过对包含的&lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt;值应用函数，将 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 映射到 &lt;code&gt;Result&amp;lt;U, E&amp;gt;&lt;/code&gt; ，而保持&lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt;值不变。</target>
        </trans-unit>
        <trans-unit id="f936d32399d16bbfe67702c38935926ed5468164" translate="yes" xml:space="preserve">
          <source>Maps a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; to &lt;code&gt;U&lt;/code&gt; by applying a function to a contained &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; value, or a fallback function to a contained &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="translated">通过将函数应用于包含的&lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt;值，或将后备函数应用于包含的&lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt;值，将 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 映射到 &lt;code&gt;U&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="797fbd17d80382efa5086a8df9508fbdca0a1060" translate="yes" xml:space="preserve">
          <source>Maps a byte in 0x00..=0xFF to a &lt;code&gt;char&lt;/code&gt; whose code point has the same value, in U+0000..=U+00FF.</source>
          <target state="translated">将0x00 .. = 0xFF中的字节映射到其代码点具有相同值的 &lt;code&gt;char&lt;/code&gt; ，格式为U + 0000 .. = U + 00FF。</target>
        </trans-unit>
        <trans-unit id="2e352145a0cdb19a335300b9369b89fbd8a25ef7" translate="yes" xml:space="preserve">
          <source>Maps an &lt;code&gt;Option&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; to an &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; by cloning the contents of the option.</source>
          <target state="translated">通过克隆选项的内容将 &lt;code&gt;Option&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; 映射到 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93de5376733896baa45e538f72efc3d420f82590" translate="yes" xml:space="preserve">
          <source>Maps an &lt;code&gt;Option&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; to an &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; by copying the contents of the option.</source>
          <target state="translated">通过复制选项的内容将 &lt;code&gt;Option&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; 映射到 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="489e927771bbcdbcf304af0a46f6f0a2cfc0e463" translate="yes" xml:space="preserve">
          <source>Maps an &lt;code&gt;Option&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; to an &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; by cloning the contents of the option.</source>
          <target state="translated">通过克隆选项的内容，将 &lt;code&gt;Option&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; 映射到 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c891415b6b09551729b3ef9fb44bbf6a6f502c69" translate="yes" xml:space="preserve">
          <source>Maps an &lt;code&gt;Option&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; to an &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; by copying the contents of the option.</source>
          <target state="translated">通过复制选项的内容将 &lt;code&gt;Option&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; 映射到 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6625245129c5cc0b5428454a5f4ec750a28d7f63" translate="yes" xml:space="preserve">
          <source>Maps an &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; to &lt;code&gt;Option&amp;lt;U&amp;gt;&lt;/code&gt; by applying a function to a contained value.</source>
          <target state="translated">通过将函数应用于包含的值，将 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 映射到 &lt;code&gt;Option&amp;lt;U&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce763bb51ba6bc3f09a0b1b9904ceb8306ffe54d" translate="yes" xml:space="preserve">
          <source>Maps: &lt;a href=&quot;hash_map/struct.hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.btreemap&quot;&gt;&lt;code&gt;BTreeMap&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">地图：&lt;a href=&quot;hash_map/struct.hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;struct.btreemap&quot;&gt; &lt;code&gt;BTreeMap&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e0db9965b9d8c070fe6ab5a20105fd94f41e462" translate="yes" xml:space="preserve">
          <source>Maps: &lt;a href=&quot;struct.hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.btreemap&quot;&gt;&lt;code&gt;BTreeMap&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">地图：&lt;a href=&quot;struct.hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;struct.btreemap&quot;&gt; &lt;code&gt;BTreeMap&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d25037497682a833510188b5ecdcc39064438926" translate="yes" xml:space="preserve">
          <source>Marking elements as &lt;code&gt;unsafe&lt;/code&gt;</source>
          <target state="translated">将元素标记为 &lt;code&gt;unsafe&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="799115430a273023c28ac0e7dc5ce0b69eca5421" translate="yes" xml:space="preserve">
          <source>Marks the struct as non-exhaustive, indicating to the reader that there are some other fields that are not shown in the debug representation.</source>
          <target state="translated">将该结构标记为非穷举性结构,向读者表明还有一些其他字段没有显示在调试表示中。</target>
        </trans-unit>
        <trans-unit id="5d2cb06099639fbea64185538fa2f9ba651babda" translate="yes" xml:space="preserve">
          <source>Match arms can accept &lt;em&gt;match guards&lt;/em&gt; to further refine the criteria for matching a case. Pattern guards appear after the pattern and consist of a &lt;code&gt;bool&lt;/code&gt;-typed expression following the &lt;code&gt;if&lt;/code&gt; keyword.</source>
          <target state="translated">比赛&lt;em&gt;队&lt;/em&gt;可以接受&lt;em&gt;比赛后卫，&lt;/em&gt;以进一步完善&lt;em&gt;比赛&lt;/em&gt;案例的标准。模式防护出现在模式之后，并由 &lt;code&gt;if&lt;/code&gt; 关键字后面的 &lt;code&gt;bool&lt;/code&gt; 型表达式组成。</target>
        </trans-unit>
        <trans-unit id="c7ef7934adf8c801d44bf69adf1806707e1b590a" translate="yes" xml:space="preserve">
          <source>Match arms can accept &lt;em&gt;match guards&lt;/em&gt; to further refine the criteria for matching a case. Pattern guards appear after the pattern and consist of a bool-typed expression following the &lt;code&gt;if&lt;/code&gt; keyword. A pattern guard may refer to the variables bound within the pattern they follow.</source>
          <target state="translated">比赛&lt;em&gt;队&lt;/em&gt;可以接受&lt;em&gt;比赛后卫，&lt;/em&gt;以进一步完善&lt;em&gt;比赛&lt;/em&gt;案例的标准。模式防护出现在模式之后，并由 &lt;code&gt;if&lt;/code&gt; 关键字后的布尔型表达式组成。模式后卫可以引用绑定在它们遵循的模式内的变量。</target>
        </trans-unit>
        <trans-unit id="82dbbba4b754bd91fe25a2303476d2bbf40a1588" translate="yes" xml:space="preserve">
          <source>Match arms with guard conditions.</source>
          <target state="translated">与警卫条件相匹配的武器。</target>
        </trans-unit>
        <trans-unit id="705c230fc6ae75bfa567a56930852133f1ba462b" translate="yes" xml:space="preserve">
          <source>Match arms:</source>
          <target state="translated">匹配武器。</target>
        </trans-unit>
        <trans-unit id="29c22bededda367b5ee4a04d29831608c006bc68" translate="yes" xml:space="preserve">
          <source>Match condition</source>
          <target state="translated">匹配条件</target>
        </trans-unit>
        <trans-unit id="0282881bf64b96224fa36c4b271c429100fee5e9" translate="yes" xml:space="preserve">
          <source>Match guards</source>
          <target state="translated">火柴护卫队</target>
        </trans-unit>
        <trans-unit id="442ae912e5bf400cd7a06fdbd1cc99f277c5045b" translate="yes" xml:space="preserve">
          <source>Match inside the loop instead:</source>
          <target state="translated">在循环内匹配代替。</target>
        </trans-unit>
        <trans-unit id="3739f6f123a862ea5412abd3d0679f165957e53c" translate="yes" xml:space="preserve">
          <source>MatchIndices</source>
          <target state="translated">MatchIndices</target>
        </trans-unit>
        <trans-unit id="7c0c01a14aad4ca86387f3507273def6a3cf0b5d" translate="yes" xml:space="preserve">
          <source>MatchIndices::all</source>
          <target state="translated">MatchIndices::all</target>
        </trans-unit>
        <trans-unit id="6b76c9e862a027cab6fcec93f08aebfc4d529237" translate="yes" xml:space="preserve">
          <source>MatchIndices::any</source>
          <target state="translated">MatchIndices::any</target>
        </trans-unit>
        <trans-unit id="02aeeb6f73d6644372f844a5d08ae7c1ad25533b" translate="yes" xml:space="preserve">
          <source>MatchIndices::borrow</source>
          <target state="translated">MatchIndices::borrow</target>
        </trans-unit>
        <trans-unit id="b0b39a03296952fb25f2b50c8b6722eebfb7261f" translate="yes" xml:space="preserve">
          <source>MatchIndices::borrow_mut</source>
          <target state="translated">MatchIndices::borrow_mut</target>
        </trans-unit>
        <trans-unit id="2f345fb24654ed82e91d8ac8467f8f30c4bc0bef" translate="yes" xml:space="preserve">
          <source>MatchIndices::by_ref</source>
          <target state="translated">MatchIndices::by_ref</target>
        </trans-unit>
        <trans-unit id="7bcbb5083968690c1ca1cc9942df87127b2049fd" translate="yes" xml:space="preserve">
          <source>MatchIndices::chain</source>
          <target state="translated">MatchIndices::chain</target>
        </trans-unit>
        <trans-unit id="c701a3c91470a2cb8c46024cd84462cdb941eff5" translate="yes" xml:space="preserve">
          <source>MatchIndices::clone</source>
          <target state="translated">MatchIndices::clone</target>
        </trans-unit>
        <trans-unit id="b0db6347a398c0d36c24c5e5f31ef74d6bf115ca" translate="yes" xml:space="preserve">
          <source>MatchIndices::clone_from</source>
          <target state="translated">MatchIndices::clone_from</target>
        </trans-unit>
        <trans-unit id="9075b3ad377aae3bdb3b83754cfb1468e97248e7" translate="yes" xml:space="preserve">
          <source>MatchIndices::clone_into</source>
          <target state="translated">MatchIndices::clone_into</target>
        </trans-unit>
        <trans-unit id="757c60bfbfeda7ff54ff552a04999ace62a28ddb" translate="yes" xml:space="preserve">
          <source>MatchIndices::cloned</source>
          <target state="translated">MatchIndices::cloned</target>
        </trans-unit>
        <trans-unit id="74bc1bc3ac32f736e9ea21ac4deeb6498b8d7799" translate="yes" xml:space="preserve">
          <source>MatchIndices::cmp</source>
          <target state="translated">MatchIndices::cmp</target>
        </trans-unit>
        <trans-unit id="f4bb5929c6110cfa542fbadab3093a0794871a1f" translate="yes" xml:space="preserve">
          <source>MatchIndices::collect</source>
          <target state="translated">MatchIndices::collect</target>
        </trans-unit>
        <trans-unit id="9fb056458d0be8f451f5aeda3cd7b8ceb8b0f74a" translate="yes" xml:space="preserve">
          <source>MatchIndices::copied</source>
          <target state="translated">MatchIndices::copied</target>
        </trans-unit>
        <trans-unit id="930e8200a6895bbc7e075dc0a7fd4f9d44780000" translate="yes" xml:space="preserve">
          <source>MatchIndices::count</source>
          <target state="translated">MatchIndices::count</target>
        </trans-unit>
        <trans-unit id="143eb1f700da8cf5aae0dd4a729b79290ec10b2b" translate="yes" xml:space="preserve">
          <source>MatchIndices::cycle</source>
          <target state="translated">MatchIndices::cycle</target>
        </trans-unit>
        <trans-unit id="39fccef48dab1f3fc05706219bfd31fd34f04217" translate="yes" xml:space="preserve">
          <source>MatchIndices::enumerate</source>
          <target state="translated">MatchIndices::enumerate</target>
        </trans-unit>
        <trans-unit id="83dd639bfdfbf1b4e77bd2d8087dd98ee30fd7e2" translate="yes" xml:space="preserve">
          <source>MatchIndices::eq</source>
          <target state="translated">MatchIndices::eq</target>
        </trans-unit>
        <trans-unit id="259b55c869ea052cb365e557e96672d0213d2b93" translate="yes" xml:space="preserve">
          <source>MatchIndices::filter</source>
          <target state="translated">MatchIndices::filter</target>
        </trans-unit>
        <trans-unit id="4ed78bfae8f63df5c8348a6634e914e2623500d4" translate="yes" xml:space="preserve">
          <source>MatchIndices::filter_map</source>
          <target state="translated">MatchIndices::filter_map</target>
        </trans-unit>
        <trans-unit id="b452e8e82fa71eb809418b8c3d82a85ac8e7f300" translate="yes" xml:space="preserve">
          <source>MatchIndices::find</source>
          <target state="translated">MatchIndices::find</target>
        </trans-unit>
        <trans-unit id="5066cb793c580d5e99d9f3e72076420df852a3ce" translate="yes" xml:space="preserve">
          <source>MatchIndices::find_map</source>
          <target state="translated">MatchIndices::find_map</target>
        </trans-unit>
        <trans-unit id="32f41be00b97eddbee56f06e0cc743acc0fa1781" translate="yes" xml:space="preserve">
          <source>MatchIndices::flat_map</source>
          <target state="translated">MatchIndices::flat_map</target>
        </trans-unit>
        <trans-unit id="b44aed96a3a677020d0c5e466d55940493f6a771" translate="yes" xml:space="preserve">
          <source>MatchIndices::flatten</source>
          <target state="translated">MatchIndices::flatten</target>
        </trans-unit>
        <trans-unit id="be9072fce8c1c8b1d608e2a6376a42143199290b" translate="yes" xml:space="preserve">
          <source>MatchIndices::fmt</source>
          <target state="translated">MatchIndices::fmt</target>
        </trans-unit>
        <trans-unit id="59f5816f4df1065953ab5e8e96de08a2f5b8c0af" translate="yes" xml:space="preserve">
          <source>MatchIndices::fold</source>
          <target state="translated">MatchIndices::fold</target>
        </trans-unit>
        <trans-unit id="b31fa990a3df79fb105a5e710721d9f935c9c97b" translate="yes" xml:space="preserve">
          <source>MatchIndices::for_each</source>
          <target state="translated">MatchIndices::for_each</target>
        </trans-unit>
        <trans-unit id="3b2b8851365c2d9263607ae5431ceb335c33430c" translate="yes" xml:space="preserve">
          <source>MatchIndices::from</source>
          <target state="translated">MatchIndices::from</target>
        </trans-unit>
        <trans-unit id="f0cb1d25b686f277b736f73628eadc3976c50e30" translate="yes" xml:space="preserve">
          <source>MatchIndices::fuse</source>
          <target state="translated">MatchIndices::fuse</target>
        </trans-unit>
        <trans-unit id="eb595e7b82cb227143f7d4c2a48acdc7fbae9b38" translate="yes" xml:space="preserve">
          <source>MatchIndices::ge</source>
          <target state="translated">MatchIndices::ge</target>
        </trans-unit>
        <trans-unit id="14c10296be221ae8bcda163e2cac0af0fda7612f" translate="yes" xml:space="preserve">
          <source>MatchIndices::gt</source>
          <target state="translated">MatchIndices::gt</target>
        </trans-unit>
        <trans-unit id="76ec672bbeb01f886568824d13941fb70441a5af" translate="yes" xml:space="preserve">
          <source>MatchIndices::inspect</source>
          <target state="translated">MatchIndices::inspect</target>
        </trans-unit>
        <trans-unit id="1b9f739731ad3a5d5d8f1ba65f8f102b3c42b9e3" translate="yes" xml:space="preserve">
          <source>MatchIndices::into</source>
          <target state="translated">MatchIndices::into</target>
        </trans-unit>
        <trans-unit id="aead44f955338c2dea3080f6f046288cf282389c" translate="yes" xml:space="preserve">
          <source>MatchIndices::into_iter</source>
          <target state="translated">MatchIndices::into_iter</target>
        </trans-unit>
        <trans-unit id="aaca048678ac9cb09d17b6f19dccfa3f8cbd8a68" translate="yes" xml:space="preserve">
          <source>MatchIndices::is_sorted</source>
          <target state="translated">MatchIndices::is_sorted</target>
        </trans-unit>
        <trans-unit id="494ccebc2573bc8ae8e822653128501799daee31" translate="yes" xml:space="preserve">
          <source>MatchIndices::is_sorted_by</source>
          <target state="translated">MatchIndices::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="10969064cde7db281b3bf5ae0d8074ddbe5b2057" translate="yes" xml:space="preserve">
          <source>MatchIndices::is_sorted_by_key</source>
          <target state="translated">MatchIndices::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="b207e7a0e0f65362244472856341f08e7b5f968e" translate="yes" xml:space="preserve">
          <source>MatchIndices::last</source>
          <target state="translated">MatchIndices::last</target>
        </trans-unit>
        <trans-unit id="1f0c1804be730a595793157eee0b5899468a57fe" translate="yes" xml:space="preserve">
          <source>MatchIndices::le</source>
          <target state="translated">MatchIndices::le</target>
        </trans-unit>
        <trans-unit id="714c1040165e446023bdb25a0d7a5b62b88a2827" translate="yes" xml:space="preserve">
          <source>MatchIndices::lt</source>
          <target state="translated">MatchIndices::lt</target>
        </trans-unit>
        <trans-unit id="c2c7317c42e1128c61257980f67d6e48c552e06e" translate="yes" xml:space="preserve">
          <source>MatchIndices::map</source>
          <target state="translated">MatchIndices::map</target>
        </trans-unit>
        <trans-unit id="aee4229db0b745c9bce9e251b061d1df09093478" translate="yes" xml:space="preserve">
          <source>MatchIndices::max</source>
          <target state="translated">MatchIndices::max</target>
        </trans-unit>
        <trans-unit id="fa0986e2f1af3e5f1bc0450062f53561e6c81ddd" translate="yes" xml:space="preserve">
          <source>MatchIndices::max_by</source>
          <target state="translated">MatchIndices::max_by</target>
        </trans-unit>
        <trans-unit id="9f23e12ae79451b15c7c916bd3225e0027c45e8a" translate="yes" xml:space="preserve">
          <source>MatchIndices::max_by_key</source>
          <target state="translated">MatchIndices::max_by_key</target>
        </trans-unit>
        <trans-unit id="2e39560ff99878ffc39fd296cda924c5b2c03981" translate="yes" xml:space="preserve">
          <source>MatchIndices::min</source>
          <target state="translated">MatchIndices::min</target>
        </trans-unit>
        <trans-unit id="92f4db568851f93dab54705599c319ed015f3650" translate="yes" xml:space="preserve">
          <source>MatchIndices::min_by</source>
          <target state="translated">MatchIndices::min_by</target>
        </trans-unit>
        <trans-unit id="65abf9fc033ef993ad3616561604bc6168d2ccbe" translate="yes" xml:space="preserve">
          <source>MatchIndices::min_by_key</source>
          <target state="translated">MatchIndices::min_by_key</target>
        </trans-unit>
        <trans-unit id="07fc13c698bd94933a040c5a662601d3baa2e9fe" translate="yes" xml:space="preserve">
          <source>MatchIndices::ne</source>
          <target state="translated">MatchIndices::ne</target>
        </trans-unit>
        <trans-unit id="310938ae31ecec7a264e7277687593734d44568f" translate="yes" xml:space="preserve">
          <source>MatchIndices::next</source>
          <target state="translated">MatchIndices::next</target>
        </trans-unit>
        <trans-unit id="c31cf9fcd888382ae0ea7f383f70a3b44d3ec196" translate="yes" xml:space="preserve">
          <source>MatchIndices::next_back</source>
          <target state="translated">MatchIndices::next_back</target>
        </trans-unit>
        <trans-unit id="96ef6e6af4fd7d98ef4e1e43a8b441ed1e0c34cc" translate="yes" xml:space="preserve">
          <source>MatchIndices::nth</source>
          <target state="translated">MatchIndices::nth</target>
        </trans-unit>
        <trans-unit id="7d368eba8c884cae30ca39ce974f4608867e96d3" translate="yes" xml:space="preserve">
          <source>MatchIndices::nth_back</source>
          <target state="translated">MatchIndices::nth_back</target>
        </trans-unit>
        <trans-unit id="ab962565ed9fafac9d7ff2b1a2e63f1fd3710d5e" translate="yes" xml:space="preserve">
          <source>MatchIndices::partial_cmp</source>
          <target state="translated">MatchIndices::partial_cmp</target>
        </trans-unit>
        <trans-unit id="57254eb362bbbf8b679504cfd2a2d5e3ec1f0dfa" translate="yes" xml:space="preserve">
          <source>MatchIndices::partition</source>
          <target state="translated">MatchIndices::partition</target>
        </trans-unit>
        <trans-unit id="1e7e9422949dcdc28a75d0836c9aebd087900b8c" translate="yes" xml:space="preserve">
          <source>MatchIndices::peekable</source>
          <target state="translated">MatchIndices::peekable</target>
        </trans-unit>
        <trans-unit id="12be4b9a10cadd68ecaf54663c00f4a34b5f4ecc" translate="yes" xml:space="preserve">
          <source>MatchIndices::position</source>
          <target state="translated">MatchIndices::position</target>
        </trans-unit>
        <trans-unit id="348fe66eb091edea41f27fba3b3e350602376bed" translate="yes" xml:space="preserve">
          <source>MatchIndices::product</source>
          <target state="translated">MatchIndices::product</target>
        </trans-unit>
        <trans-unit id="1963aa77d2e51a1cd8995d3a7783963289df1dfa" translate="yes" xml:space="preserve">
          <source>MatchIndices::rev</source>
          <target state="translated">MatchIndices::rev</target>
        </trans-unit>
        <trans-unit id="0a8c8a9860d2936ff3103a39728b1f7122a37be7" translate="yes" xml:space="preserve">
          <source>MatchIndices::rfind</source>
          <target state="translated">MatchIndices::rfind</target>
        </trans-unit>
        <trans-unit id="f68b89eb92b49e5293f3bc6009baae718e58a00e" translate="yes" xml:space="preserve">
          <source>MatchIndices::rfold</source>
          <target state="translated">MatchIndices::rfold</target>
        </trans-unit>
        <trans-unit id="315b4220cbd8e0c545f07547765f5832a9c86221" translate="yes" xml:space="preserve">
          <source>MatchIndices::rposition</source>
          <target state="translated">MatchIndices::rposition</target>
        </trans-unit>
        <trans-unit id="2ab2384d0375db50c9c56dc9c650d7a18fc9cfca" translate="yes" xml:space="preserve">
          <source>MatchIndices::scan</source>
          <target state="translated">MatchIndices::scan</target>
        </trans-unit>
        <trans-unit id="2b77624dba127ee70a08d8deb81afce43d4451ff" translate="yes" xml:space="preserve">
          <source>MatchIndices::size_hint</source>
          <target state="translated">MatchIndices::size_hint</target>
        </trans-unit>
        <trans-unit id="e11016fd82a8ae6b1cc4431c096024383cd55289" translate="yes" xml:space="preserve">
          <source>MatchIndices::skip</source>
          <target state="translated">MatchIndices::skip</target>
        </trans-unit>
        <trans-unit id="66537225c0c97f9b5ed8f0b1d276134fb031158a" translate="yes" xml:space="preserve">
          <source>MatchIndices::skip_while</source>
          <target state="translated">MatchIndices::skip_while</target>
        </trans-unit>
        <trans-unit id="ea0d009d45cb6d7e6d3bb7b20ed5bcea6fc3295b" translate="yes" xml:space="preserve">
          <source>MatchIndices::step_by</source>
          <target state="translated">MatchIndices::step_by</target>
        </trans-unit>
        <trans-unit id="a281813e58bcc4fe4ecfc5f52608eaa03bea658a" translate="yes" xml:space="preserve">
          <source>MatchIndices::sum</source>
          <target state="translated">MatchIndices::sum</target>
        </trans-unit>
        <trans-unit id="096f4326ed06e3754c6af15c4a48de95d9807c80" translate="yes" xml:space="preserve">
          <source>MatchIndices::take</source>
          <target state="translated">MatchIndices::take</target>
        </trans-unit>
        <trans-unit id="dd509dc4aa10cbf86aa0cedca0fb11bb8d228ba4" translate="yes" xml:space="preserve">
          <source>MatchIndices::take_while</source>
          <target state="translated">MatchIndices::take_while</target>
        </trans-unit>
        <trans-unit id="7ba6b4d532f5fe105f4c17cfa277856ecc93cc91" translate="yes" xml:space="preserve">
          <source>MatchIndices::to_owned</source>
          <target state="translated">MatchIndices::to_owned</target>
        </trans-unit>
        <trans-unit id="d53bd53761ca88b3d4f96c0e1da7e805ecc1a162" translate="yes" xml:space="preserve">
          <source>MatchIndices::try_fold</source>
          <target state="translated">MatchIndices::try_fold</target>
        </trans-unit>
        <trans-unit id="e55d2c69102746bda08c66c4290fa28c373fe4d1" translate="yes" xml:space="preserve">
          <source>MatchIndices::try_for_each</source>
          <target state="translated">MatchIndices::try_for_each</target>
        </trans-unit>
        <trans-unit id="ce0fcc30049ca458576119cb2101ceaf48da4b9a" translate="yes" xml:space="preserve">
          <source>MatchIndices::try_from</source>
          <target state="translated">MatchIndices::try_from</target>
        </trans-unit>
        <trans-unit id="591ae842ca203ad1f776a040ba0ef67aa76a60e1" translate="yes" xml:space="preserve">
          <source>MatchIndices::try_into</source>
          <target state="translated">MatchIndices::try_into</target>
        </trans-unit>
        <trans-unit id="f087c03238f8f86bc47404dfad613d4c63b4e2e0" translate="yes" xml:space="preserve">
          <source>MatchIndices::try_rfold</source>
          <target state="translated">MatchIndices::try_rfold</target>
        </trans-unit>
        <trans-unit id="5ce0bb4829d8b7bbb7369d2b9ae77a51efbf54f6" translate="yes" xml:space="preserve">
          <source>MatchIndices::type_id</source>
          <target state="translated">MatchIndices::type_id</target>
        </trans-unit>
        <trans-unit id="52c4c724db47afc62f2fdf9a014929e13ed5bbba" translate="yes" xml:space="preserve">
          <source>MatchIndices::unzip</source>
          <target state="translated">MatchIndices::unzip</target>
        </trans-unit>
        <trans-unit id="a0fd217e64097f5938d4a8d5755e5fced6da54a0" translate="yes" xml:space="preserve">
          <source>MatchIndices::zip</source>
          <target state="translated">MatchIndices::zip</target>
        </trans-unit>
        <trans-unit id="ee2dbd5d6d82d0833069b07e7dd2848d3bf4d83a" translate="yes" xml:space="preserve">
          <source>Matches</source>
          <target state="translated">Matches</target>
        </trans-unit>
        <trans-unit id="5cc6987e7ed2a2b2e62c548b42089341976209aa" translate="yes" xml:space="preserve">
          <source>Matches Are Exhaustive</source>
          <target state="translated">匹配是详尽的</target>
        </trans-unit>
        <trans-unit id="3a0d932544aa8e3d9374e99e6710f8a85f6c0c7d" translate="yes" xml:space="preserve">
          <source>Matches::all</source>
          <target state="translated">Matches::all</target>
        </trans-unit>
        <trans-unit id="16fb890dd8ce7dfcb5a0e63ba8978c2471f380a3" translate="yes" xml:space="preserve">
          <source>Matches::any</source>
          <target state="translated">Matches::any</target>
        </trans-unit>
        <trans-unit id="5e4f547e5a9c68b04b7459d87531f3392cef812c" translate="yes" xml:space="preserve">
          <source>Matches::borrow</source>
          <target state="translated">Matches::borrow</target>
        </trans-unit>
        <trans-unit id="eb7a33e738fd491a8440d0e486d0da0f4b7357df" translate="yes" xml:space="preserve">
          <source>Matches::borrow_mut</source>
          <target state="translated">Matches::borrow_mut</target>
        </trans-unit>
        <trans-unit id="442cbd680df62a68364c435a1bb0ae46b79a7eac" translate="yes" xml:space="preserve">
          <source>Matches::by_ref</source>
          <target state="translated">Matches::by_ref</target>
        </trans-unit>
        <trans-unit id="20dfc02cc86de67d6fdaf58ce4461b2fd5815f11" translate="yes" xml:space="preserve">
          <source>Matches::chain</source>
          <target state="translated">Matches::chain</target>
        </trans-unit>
        <trans-unit id="e26629789994660e4224d4cebf44f28566fa8954" translate="yes" xml:space="preserve">
          <source>Matches::clone</source>
          <target state="translated">Matches::clone</target>
        </trans-unit>
        <trans-unit id="4c01d6dc1417a885eff4cea68ae3c49c30339c23" translate="yes" xml:space="preserve">
          <source>Matches::clone_from</source>
          <target state="translated">Matches::clone_from</target>
        </trans-unit>
        <trans-unit id="908070155acaacd57ea50bc0c693a8d4d38e9084" translate="yes" xml:space="preserve">
          <source>Matches::clone_into</source>
          <target state="translated">Matches::clone_into</target>
        </trans-unit>
        <trans-unit id="f1039a5bd9dd87408160a7bc89f5aee247baed0e" translate="yes" xml:space="preserve">
          <source>Matches::cloned</source>
          <target state="translated">Matches::cloned</target>
        </trans-unit>
        <trans-unit id="19c9fd0279baa24b411e3947534ec46f6b80b29b" translate="yes" xml:space="preserve">
          <source>Matches::cmp</source>
          <target state="translated">Matches::cmp</target>
        </trans-unit>
        <trans-unit id="b28a79700065ba26a75e2535566b0111e766961d" translate="yes" xml:space="preserve">
          <source>Matches::collect</source>
          <target state="translated">Matches::collect</target>
        </trans-unit>
        <trans-unit id="23a42c659f214505d85c65acf90795a53cbbd9c7" translate="yes" xml:space="preserve">
          <source>Matches::copied</source>
          <target state="translated">Matches::copied</target>
        </trans-unit>
        <trans-unit id="8ddc41164c9c903c75ffabc4216778ab2b92a07b" translate="yes" xml:space="preserve">
          <source>Matches::count</source>
          <target state="translated">Matches::count</target>
        </trans-unit>
        <trans-unit id="c5bb9e45a2d04384d39504bf8fed06af4eb949f4" translate="yes" xml:space="preserve">
          <source>Matches::cycle</source>
          <target state="translated">Matches::cycle</target>
        </trans-unit>
        <trans-unit id="25d821be5ab0c31669a0c65bee52e76ca6e2dfda" translate="yes" xml:space="preserve">
          <source>Matches::enumerate</source>
          <target state="translated">Matches::enumerate</target>
        </trans-unit>
        <trans-unit id="8fe87f5ab4c69eee8b3e42d4ef7d3f0bc9b6bd46" translate="yes" xml:space="preserve">
          <source>Matches::eq</source>
          <target state="translated">Matches::eq</target>
        </trans-unit>
        <trans-unit id="bd6c3e4a09141a6b1687bc6edcbc4725f14d6e9b" translate="yes" xml:space="preserve">
          <source>Matches::filter</source>
          <target state="translated">Matches::filter</target>
        </trans-unit>
        <trans-unit id="f28215c08cf52a08c1113104ff10156614b2d4dc" translate="yes" xml:space="preserve">
          <source>Matches::filter_map</source>
          <target state="translated">Matches::filter_map</target>
        </trans-unit>
        <trans-unit id="7e979d935feb5504226bf8fd99bc7ddddbae73ed" translate="yes" xml:space="preserve">
          <source>Matches::find</source>
          <target state="translated">Matches::find</target>
        </trans-unit>
        <trans-unit id="f417888fb6c581ab01ae22da17789e08d5d30a43" translate="yes" xml:space="preserve">
          <source>Matches::find_map</source>
          <target state="translated">Matches::find_map</target>
        </trans-unit>
        <trans-unit id="aac48d806deb17c5fb6f87226315aa3b6f58319d" translate="yes" xml:space="preserve">
          <source>Matches::flat_map</source>
          <target state="translated">Matches::flat_map</target>
        </trans-unit>
        <trans-unit id="0721b37fe4fd2773176992136934d02d73295f86" translate="yes" xml:space="preserve">
          <source>Matches::flatten</source>
          <target state="translated">Matches::flatten</target>
        </trans-unit>
        <trans-unit id="a82571e1d46a7c4bd3c2adc55d5ec1e13ef469b7" translate="yes" xml:space="preserve">
          <source>Matches::fmt</source>
          <target state="translated">Matches::fmt</target>
        </trans-unit>
        <trans-unit id="81d2cf00372eb5d8702e03ec8c630dd8ec00c4bb" translate="yes" xml:space="preserve">
          <source>Matches::fold</source>
          <target state="translated">Matches::fold</target>
        </trans-unit>
        <trans-unit id="1fbe90aeae0d2764bf797ea002efc575a587c806" translate="yes" xml:space="preserve">
          <source>Matches::for_each</source>
          <target state="translated">Matches::for_each</target>
        </trans-unit>
        <trans-unit id="b935cf9ba4ffa6f06d97d64621e3d2de0895f4ba" translate="yes" xml:space="preserve">
          <source>Matches::from</source>
          <target state="translated">Matches::from</target>
        </trans-unit>
        <trans-unit id="4d32cbce51a48f695b8fea902b09c284a29cde2e" translate="yes" xml:space="preserve">
          <source>Matches::fuse</source>
          <target state="translated">Matches::fuse</target>
        </trans-unit>
        <trans-unit id="9b2e7ede1acc6f67900d4a4d3ab2c98e1aaad7f8" translate="yes" xml:space="preserve">
          <source>Matches::ge</source>
          <target state="translated">Matches::ge</target>
        </trans-unit>
        <trans-unit id="31fe4a3fccced0fe0c71960e54c70b3121c12d76" translate="yes" xml:space="preserve">
          <source>Matches::gt</source>
          <target state="translated">Matches::gt</target>
        </trans-unit>
        <trans-unit id="9a91adab19d2f651b421bcb0b782f148955b87df" translate="yes" xml:space="preserve">
          <source>Matches::inspect</source>
          <target state="translated">Matches::inspect</target>
        </trans-unit>
        <trans-unit id="cdaa2f6866b152ff52f54f63d328297e95ffefc9" translate="yes" xml:space="preserve">
          <source>Matches::into</source>
          <target state="translated">Matches::into</target>
        </trans-unit>
        <trans-unit id="fbfdb405e53ca49b4f0a6aa96e0707e0b10af640" translate="yes" xml:space="preserve">
          <source>Matches::into_iter</source>
          <target state="translated">Matches::into_iter</target>
        </trans-unit>
        <trans-unit id="b86a1a91695e60a826f9cbcbe7744cdd9377aa24" translate="yes" xml:space="preserve">
          <source>Matches::is_sorted</source>
          <target state="translated">Matches::is_sorted</target>
        </trans-unit>
        <trans-unit id="88b5d9a696f322ca51982376a518e086721e6020" translate="yes" xml:space="preserve">
          <source>Matches::is_sorted_by</source>
          <target state="translated">Matches::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="3af6013a8cdc222cc7dcf468759ca7a196ae2a35" translate="yes" xml:space="preserve">
          <source>Matches::is_sorted_by_key</source>
          <target state="translated">Matches::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="19db6decfee88589fa49e71164a6c424bfab43c4" translate="yes" xml:space="preserve">
          <source>Matches::last</source>
          <target state="translated">Matches::last</target>
        </trans-unit>
        <trans-unit id="2b3c79eaacf0da1aceb94340410e1bf3e66ed35d" translate="yes" xml:space="preserve">
          <source>Matches::le</source>
          <target state="translated">Matches::le</target>
        </trans-unit>
        <trans-unit id="dc89550af976d29f1cd838ad118281c1c59ff27c" translate="yes" xml:space="preserve">
          <source>Matches::lt</source>
          <target state="translated">Matches::lt</target>
        </trans-unit>
        <trans-unit id="82f4602ea6fb73360443d9745b09df18459d58b6" translate="yes" xml:space="preserve">
          <source>Matches::map</source>
          <target state="translated">Matches::map</target>
        </trans-unit>
        <trans-unit id="c8d9d7e742cfadc7e42da43df1666f94b32c56dd" translate="yes" xml:space="preserve">
          <source>Matches::max</source>
          <target state="translated">Matches::max</target>
        </trans-unit>
        <trans-unit id="381ae5d9564473d6e8dd9a2749230d133255ad00" translate="yes" xml:space="preserve">
          <source>Matches::max_by</source>
          <target state="translated">Matches::max_by</target>
        </trans-unit>
        <trans-unit id="eb15db6391ca1dcfb4eb7997be38ea7ac31e86d5" translate="yes" xml:space="preserve">
          <source>Matches::max_by_key</source>
          <target state="translated">Matches::max_by_key</target>
        </trans-unit>
        <trans-unit id="2a7f00fe010cb33ba0a91dd9c43d06d20c3144c3" translate="yes" xml:space="preserve">
          <source>Matches::min</source>
          <target state="translated">Matches::min</target>
        </trans-unit>
        <trans-unit id="0511629eee2ebb309e8d692bfafa7146e73ab99a" translate="yes" xml:space="preserve">
          <source>Matches::min_by</source>
          <target state="translated">Matches::min_by</target>
        </trans-unit>
        <trans-unit id="92b4e0376aa22e37c9b2a710dfa2ea1a89fb5ad8" translate="yes" xml:space="preserve">
          <source>Matches::min_by_key</source>
          <target state="translated">Matches::min_by_key</target>
        </trans-unit>
        <trans-unit id="d1e00a92c27dc4a08ef517bcbb3c16d1d7c73fa2" translate="yes" xml:space="preserve">
          <source>Matches::ne</source>
          <target state="translated">Matches::ne</target>
        </trans-unit>
        <trans-unit id="80100501d955233d0aad678a7a0522b50d083d41" translate="yes" xml:space="preserve">
          <source>Matches::next</source>
          <target state="translated">Matches::next</target>
        </trans-unit>
        <trans-unit id="f87ed28aa3c643fcff8c2a323261a5ab3c47af41" translate="yes" xml:space="preserve">
          <source>Matches::next_back</source>
          <target state="translated">Matches::next_back</target>
        </trans-unit>
        <trans-unit id="06e8a5ed4403652966532401d85cecb2a059ab86" translate="yes" xml:space="preserve">
          <source>Matches::nth</source>
          <target state="translated">Matches::nth</target>
        </trans-unit>
        <trans-unit id="2d97ef2f69ba88eadeb3c0a353560d47aa8d892d" translate="yes" xml:space="preserve">
          <source>Matches::nth_back</source>
          <target state="translated">Matches::nth_back</target>
        </trans-unit>
        <trans-unit id="1e59a6c73ae29a25bdcf2a99e065e71f8bb68764" translate="yes" xml:space="preserve">
          <source>Matches::partial_cmp</source>
          <target state="translated">Matches::partial_cmp</target>
        </trans-unit>
        <trans-unit id="10bc67bf25acda7fdf7709fb020ef7093757f048" translate="yes" xml:space="preserve">
          <source>Matches::partition</source>
          <target state="translated">Matches::partition</target>
        </trans-unit>
        <trans-unit id="ca97a164faa6e48e7f0155c295145750469b483d" translate="yes" xml:space="preserve">
          <source>Matches::peekable</source>
          <target state="translated">Matches::peekable</target>
        </trans-unit>
        <trans-unit id="cb6e62672281dd6247bc9a5dfdecde19ffbc8916" translate="yes" xml:space="preserve">
          <source>Matches::position</source>
          <target state="translated">Matches::position</target>
        </trans-unit>
        <trans-unit id="8541181e1bc4494e2d6b28d4f7775de0da6559c4" translate="yes" xml:space="preserve">
          <source>Matches::product</source>
          <target state="translated">Matches::product</target>
        </trans-unit>
        <trans-unit id="7aa9e259d1203fa5740a53d399d7183277702354" translate="yes" xml:space="preserve">
          <source>Matches::rev</source>
          <target state="translated">Matches::rev</target>
        </trans-unit>
        <trans-unit id="e02709763e2207e61e4d933e858c99b7a28d8bcb" translate="yes" xml:space="preserve">
          <source>Matches::rfind</source>
          <target state="translated">Matches::rfind</target>
        </trans-unit>
        <trans-unit id="a9cc66b976865799bd4716ff397f93b4a843b5ae" translate="yes" xml:space="preserve">
          <source>Matches::rfold</source>
          <target state="translated">Matches::rfold</target>
        </trans-unit>
        <trans-unit id="04c297da099729a5b43001f9d0063ee6a901e844" translate="yes" xml:space="preserve">
          <source>Matches::rposition</source>
          <target state="translated">Matches::rposition</target>
        </trans-unit>
        <trans-unit id="91a658d8a0294b7bd18e5d0570dba1b46dc2ddb4" translate="yes" xml:space="preserve">
          <source>Matches::scan</source>
          <target state="translated">Matches::scan</target>
        </trans-unit>
        <trans-unit id="bff98e95d244b87dfd471f3aa1b0b9776052e73a" translate="yes" xml:space="preserve">
          <source>Matches::size_hint</source>
          <target state="translated">Matches::size_hint</target>
        </trans-unit>
        <trans-unit id="ea769d36db0ecdf9a449becbbea0e918770b1961" translate="yes" xml:space="preserve">
          <source>Matches::skip</source>
          <target state="translated">Matches::skip</target>
        </trans-unit>
        <trans-unit id="96627df75057a48d2e0d9c40c523b84e3b33c7af" translate="yes" xml:space="preserve">
          <source>Matches::skip_while</source>
          <target state="translated">Matches::skip_while</target>
        </trans-unit>
        <trans-unit id="4ca4138e4a3268a198c5cdc5a737a6380795549e" translate="yes" xml:space="preserve">
          <source>Matches::step_by</source>
          <target state="translated">Matches::step_by</target>
        </trans-unit>
        <trans-unit id="721b319e30617315060e55781f7380c841c6ace9" translate="yes" xml:space="preserve">
          <source>Matches::sum</source>
          <target state="translated">Matches::sum</target>
        </trans-unit>
        <trans-unit id="f9e758615e71ff38d6f7a5c65eecde2590e23098" translate="yes" xml:space="preserve">
          <source>Matches::take</source>
          <target state="translated">Matches::take</target>
        </trans-unit>
        <trans-unit id="af24995f9c4fd5dd2457e65743d9a60e9e9ffcde" translate="yes" xml:space="preserve">
          <source>Matches::take_while</source>
          <target state="translated">Matches::take_while</target>
        </trans-unit>
        <trans-unit id="1565bfd09bd2f23c0095b4606ab9e834a51712c8" translate="yes" xml:space="preserve">
          <source>Matches::to_owned</source>
          <target state="translated">Matches::to_owned</target>
        </trans-unit>
        <trans-unit id="50cf72084a8dfa7ad581505a5ddcd33faf655fa9" translate="yes" xml:space="preserve">
          <source>Matches::try_fold</source>
          <target state="translated">Matches::try_fold</target>
        </trans-unit>
        <trans-unit id="549e63df22456e9fa5caee460202dea317cd527f" translate="yes" xml:space="preserve">
          <source>Matches::try_for_each</source>
          <target state="translated">Matches::try_for_each</target>
        </trans-unit>
        <trans-unit id="91833652262591b5f00ea537d289de5b67c4c727" translate="yes" xml:space="preserve">
          <source>Matches::try_from</source>
          <target state="translated">Matches::try_from</target>
        </trans-unit>
        <trans-unit id="c0c530573a1f2dab2a0a124a457144714f1af70b" translate="yes" xml:space="preserve">
          <source>Matches::try_into</source>
          <target state="translated">Matches::try_into</target>
        </trans-unit>
        <trans-unit id="1d6807a096cceb3f086a98b72caed6864b350d48" translate="yes" xml:space="preserve">
          <source>Matches::try_rfold</source>
          <target state="translated">Matches::try_rfold</target>
        </trans-unit>
        <trans-unit id="4ed84d268d517902f1ee835907ba616731437e78" translate="yes" xml:space="preserve">
          <source>Matches::type_id</source>
          <target state="translated">Matches::type_id</target>
        </trans-unit>
        <trans-unit id="82df0ef498c0500087358c2ad708f2591ff13a74" translate="yes" xml:space="preserve">
          <source>Matches::unzip</source>
          <target state="translated">Matches::unzip</target>
        </trans-unit>
        <trans-unit id="4f51ed1bb8aedce5983b27a82ba200a62553b0de" translate="yes" xml:space="preserve">
          <source>Matches::zip</source>
          <target state="translated">Matches::zip</target>
        </trans-unit>
        <trans-unit id="50c7753425f81366ad955ad648ef1402bbd0bdcd" translate="yes" xml:space="preserve">
          <source>Matching Literals</source>
          <target state="translated">匹配字数</target>
        </trans-unit>
        <trans-unit id="a4b76dc421c21dad908aceac8ef24107ed076e94" translate="yes" xml:space="preserve">
          <source>Matching Named Variables</source>
          <target state="translated">匹配命名变量</target>
        </trans-unit>
        <trans-unit id="116c1a129c8dd758e30ed686c4946011c26b8dc1" translate="yes" xml:space="preserve">
          <source>Matching Ranges of Values with &lt;code id=&quot;matching-ranges-of-values-with-&quot;&gt;...&lt;/code&gt;</source>
          <target state="translated">匹配值范围与 &lt;code id=&quot;matching-ranges-of-values-with-&quot;&gt;...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="85dbe67c3ce6228be02004258ed55391b9cbf81e" translate="yes" xml:space="preserve">
          <source>Matching Ranges of Values with &lt;code id=&quot;matching-ranges-of-values-with-&quot;&gt;..=&lt;/code&gt;</source>
          <target state="translated">与 &lt;code id=&quot;matching-ranges-of-values-with-&quot;&gt;..=&lt;/code&gt; 的值的匹配范围</target>
        </trans-unit>
        <trans-unit id="d07b8ccde1bae5f429be81f6528205564b8930b4" translate="yes" xml:space="preserve">
          <source>Matching on Different Errors</source>
          <target state="translated">不同错误的匹配</target>
        </trans-unit>
        <trans-unit id="3ac1a688c9f9a53fc22834e447e836a1464d2897" translate="yes" xml:space="preserve">
          <source>Matching on unions</source>
          <target state="translated">匹配工会</target>
        </trans-unit>
        <trans-unit id="5c23b58f42105349394b72c44a9e0c8e30cfb1c7" translate="yes" xml:space="preserve">
          <source>Matching with &lt;code id=&quot;matching-with-optiont&quot;&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">与 &lt;code id=&quot;matching-with-optiont&quot;&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 匹配</target>
        </trans-unit>
        <trans-unit id="6746eb65af6871e0e05e248c440e5aefea8b6fc2" translate="yes" xml:space="preserve">
          <source>Matching with the wrong number of fields has no sensible interpretation:</source>
          <target state="translated">匹配错误的字段数没有合理的解释。</target>
        </trans-unit>
        <trans-unit id="e962ad60673258d2f89e18021a55117503f9d972" translate="yes" xml:space="preserve">
          <source>Mathematically significant numbers are provided in the &lt;code&gt;consts&lt;/code&gt; sub-module.</source>
          <target state="translated">&lt;code&gt;consts&lt;/code&gt; 子模块中提供了数学上有效的数字。</target>
        </trans-unit>
        <trans-unit id="a8df2fec28d8948a0326722029c7492b88ee4fbe" translate="yes" xml:space="preserve">
          <source>Maximum</source>
          <target state="translated">Maximum</target>
        </trans-unit>
        <trans-unit id="24ecf2527de68fa30e51892809349a8c5974beff" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 10 exponent.</source>
          <target state="translated">10指数的最大可能功率。</target>
        </trans-unit>
        <trans-unit id="9b80b0220e2a1cfba556bc68a3ae18dd04ca555f" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 10 exponent. Use &lt;a href=&quot;../primitive.f32#associatedconstant.MAX_10_EXP&quot;&gt;&lt;code&gt;f32::MAX_10_EXP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">最大可能幂为10指数。请改用&lt;a href=&quot;../primitive.f32#associatedconstant.MAX_10_EXP&quot;&gt; &lt;code&gt;f32::MAX_10_EXP&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="14a9a3e421ae4adf1ac38d3d026e245423621fd6" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 10 exponent. Use &lt;a href=&quot;../primitive.f64#associatedconstant.MAX_10_EXP&quot;&gt;&lt;code&gt;f64::MAX_10_EXP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">最大可能幂为10指数。请改用&lt;a href=&quot;../primitive.f64#associatedconstant.MAX_10_EXP&quot;&gt; &lt;code&gt;f64::MAX_10_EXP&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="86392c8e5a7e87515616425adb01dd9226d9dffe" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 2 exponent.</source>
          <target state="translated">2指数的最大可能功率。</target>
        </trans-unit>
        <trans-unit id="9aa9636d9f2be0da47be065e0c7d353d7567c7eb" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 2 exponent. Use &lt;a href=&quot;../primitive.f32#associatedconstant.MAX_EXP&quot;&gt;&lt;code&gt;f32::MAX_EXP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">2指数的最大可能乘方。请改用&lt;a href=&quot;../primitive.f32#associatedconstant.MAX_EXP&quot;&gt; &lt;code&gt;f32::MAX_EXP&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b256bdd9a7e1cdc07523395c526401d41fbaa024" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 2 exponent. Use &lt;a href=&quot;../primitive.f64#associatedconstant.MAX_EXP&quot;&gt;&lt;code&gt;f64::MAX_EXP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">2指数的最大可能乘方。请改用&lt;a href=&quot;../primitive.f64#associatedconstant.MAX_EXP&quot;&gt; &lt;code&gt;f64::MAX_EXP&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="766be5e052191ff8eba5c2e3f2b1a1b838f4d50a" translate="yes" xml:space="preserve">
          <source>Maximum with the current value using a signed comparison.</source>
          <target state="translated">最大与当前值使用签名比较。</target>
        </trans-unit>
        <trans-unit id="9351d4078eb47c9b5544bef45a78aaa02d855e4e" translate="yes" xml:space="preserve">
          <source>Maximum with the current value using an unsigned comparison.</source>
          <target state="translated">最大与当前值使用无符号比较。</target>
        </trans-unit>
        <trans-unit id="f7750430a3882e92eb8337af201fa180c2fbb566" translate="yes" xml:space="preserve">
          <source>Maximum with the current value.</source>
          <target state="translated">最大与当前值。</target>
        </trans-unit>
        <trans-unit id="f19c24c7e8b87604106489a66b28772b598f6b35" translate="yes" xml:space="preserve">
          <source>Maybe you just misspelled the lint name or the lint doesn't exist anymore. Either way, try to update/remove it in order to fix the error.</source>
          <target state="translated">也许你只是拼错了lint的名字,或者lint不存在了。不管是哪种情况,请尝试更新/删除它以修复错误。</target>
        </trans-unit>
        <trans-unit id="22c5a738f61d1560d21875d83c8951314a7f1948" translate="yes" xml:space="preserve">
          <source>MaybeUninit</source>
          <target state="translated">MaybeUninit</target>
        </trans-unit>
        <trans-unit id="a44ab7dbe0cde09757fb1b4dd939c97aee493195" translate="yes" xml:space="preserve">
          <source>MaybeUninit::as_mut_ptr</source>
          <target state="translated">MaybeUninit::as_mut_ptr</target>
        </trans-unit>
        <trans-unit id="2e8f9abe8f0c08c924ac4559ea36a2868edf193c" translate="yes" xml:space="preserve">
          <source>MaybeUninit::as_ptr</source>
          <target state="translated">MaybeUninit::as_ptr</target>
        </trans-unit>
        <trans-unit id="e1dd151013280c4f30271f0f104514aec380c95c" translate="yes" xml:space="preserve">
          <source>MaybeUninit::assume_init</source>
          <target state="translated">MaybeUninit::assume_init</target>
        </trans-unit>
        <trans-unit id="b1d1838a31c2c75fa59b89a7ab49435bba63a56d" translate="yes" xml:space="preserve">
          <source>MaybeUninit::borrow</source>
          <target state="translated">MaybeUninit::borrow</target>
        </trans-unit>
        <trans-unit id="a4bd23ea05be7819a23ca240934851baaf368f66" translate="yes" xml:space="preserve">
          <source>MaybeUninit::borrow_mut</source>
          <target state="translated">MaybeUninit::borrow_mut</target>
        </trans-unit>
        <trans-unit id="00da197228ec4cbebb9a48bf7d0d5d3897d0f688" translate="yes" xml:space="preserve">
          <source>MaybeUninit::clone</source>
          <target state="translated">MaybeUninit::clone</target>
        </trans-unit>
        <trans-unit id="796164cb8ea5a1c4d0c3e89dc0dfc3140435eea9" translate="yes" xml:space="preserve">
          <source>MaybeUninit::clone_from</source>
          <target state="translated">MaybeUninit::clone_from</target>
        </trans-unit>
        <trans-unit id="19917792b095268faeb706604925e2b6e4601cdc" translate="yes" xml:space="preserve">
          <source>MaybeUninit::clone_into</source>
          <target state="translated">MaybeUninit::clone_into</target>
        </trans-unit>
        <trans-unit id="6aaeccae7a8603cf84871ff7d9f6d72bbae00843" translate="yes" xml:space="preserve">
          <source>MaybeUninit::first_ptr</source>
          <target state="translated">MaybeUninit::first_ptr</target>
        </trans-unit>
        <trans-unit id="b2731997cc044a29850216c34ed7b2af6f757272" translate="yes" xml:space="preserve">
          <source>MaybeUninit::first_ptr_mut</source>
          <target state="translated">MaybeUninit::first_ptr_mut</target>
        </trans-unit>
        <trans-unit id="ee80e55e0462f555d62ecf479729778c2792940a" translate="yes" xml:space="preserve">
          <source>MaybeUninit::from</source>
          <target state="translated">MaybeUninit::from</target>
        </trans-unit>
        <trans-unit id="68ed3d2ac72b021d64280ccfce1d512f796b7866" translate="yes" xml:space="preserve">
          <source>MaybeUninit::get_mut</source>
          <target state="translated">MaybeUninit::get_mut</target>
        </trans-unit>
        <trans-unit id="f1a2a1267ae897ec9afd26b0801711626f42622c" translate="yes" xml:space="preserve">
          <source>MaybeUninit::get_ref</source>
          <target state="translated">MaybeUninit::get_ref</target>
        </trans-unit>
        <trans-unit id="b7ce4c445d543adc399f6af5ed234119732fcd7d" translate="yes" xml:space="preserve">
          <source>MaybeUninit::into</source>
          <target state="translated">MaybeUninit::into</target>
        </trans-unit>
        <trans-unit id="bdcb34ac76eeb0b6ab305cf39705377f28d916a3" translate="yes" xml:space="preserve">
          <source>MaybeUninit::new</source>
          <target state="translated">MaybeUninit::new</target>
        </trans-unit>
        <trans-unit id="7134280ee1359eff29bec32e4670d803b9181af9" translate="yes" xml:space="preserve">
          <source>MaybeUninit::read</source>
          <target state="translated">MaybeUninit::read</target>
        </trans-unit>
        <trans-unit id="a887e0697a801d5760dd067e4907b33cac927028" translate="yes" xml:space="preserve">
          <source>MaybeUninit::to_owned</source>
          <target state="translated">MaybeUninit::to_owned</target>
        </trans-unit>
        <trans-unit id="7dc9f792640725a6cecb6f81a4e42e83461a6abe" translate="yes" xml:space="preserve">
          <source>MaybeUninit::try_from</source>
          <target state="translated">MaybeUninit::try_from</target>
        </trans-unit>
        <trans-unit id="8b12b56b9f617d5d7f3945aef0bc3328d56d0391" translate="yes" xml:space="preserve">
          <source>MaybeUninit::try_into</source>
          <target state="translated">MaybeUninit::try_into</target>
        </trans-unit>
        <trans-unit id="5e34c0cc0c05d1c11d92d758dfd9eb546ac718be" translate="yes" xml:space="preserve">
          <source>MaybeUninit::type_id</source>
          <target state="translated">MaybeUninit::type_id</target>
        </trans-unit>
        <trans-unit id="6d196fc5db7278a9d9758ce0ec7ef03ec5379e9c" translate="yes" xml:space="preserve">
          <source>MaybeUninit::uninit</source>
          <target state="translated">MaybeUninit::uninit</target>
        </trans-unit>
        <trans-unit id="2f8fd2d121ed93f168b51c2d802af7d29e8bc671" translate="yes" xml:space="preserve">
          <source>MaybeUninit::write</source>
          <target state="translated">MaybeUninit::write</target>
        </trans-unit>
        <trans-unit id="be630dd4779c289571757af988e536f8c58f8978" translate="yes" xml:space="preserve">
          <source>MaybeUninit::zeroed</source>
          <target state="translated">MaybeUninit::zeroed</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="d880b0db33396f09e94ad458e37bf499710140d0" translate="yes" xml:space="preserve">
          <source>Member access</source>
          <target state="translated">成员访问</target>
        </trans-unit>
        <trans-unit id="711aeb171229297561befc7fcf7c64be1c7bad67" translate="yes" xml:space="preserve">
          <source>Members of the Rust community have made many packages available at &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt;, and pulling any of them into your package involves these same steps: listing them in your package&amp;rsquo;s &lt;em&gt;Cargo.toml&lt;/em&gt; file and using &lt;code&gt;use&lt;/code&gt; to bring items from their crates into scope.</source>
          <target state="translated">锈社区的成员一直在提供很多的包&lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt;，并拉动它们中的任何进入你的包涉及这些相同的步骤：列出它们在你的包的&lt;em&gt;Cargo.toml&lt;/em&gt;文件并使用 &lt;code&gt;use&lt;/code&gt; ，使项目从他们的箱子到范围。</target>
        </trans-unit>
        <trans-unit id="146533db3fc38f7b706b77ba72e7df0357d2e39f" translate="yes" xml:space="preserve">
          <source>Members of the Rust community have made many packages available at &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt;, and pulling any of them into your package involves these same steps: listing them in your package&amp;rsquo;s &lt;em&gt;Cargo.toml&lt;/em&gt; file and using &lt;code&gt;use&lt;/code&gt; to bring items into scope.</source>
          <target state="translated">锈社区的成员一直在提供很多的包&lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt;，并拉动它们中的任何进入你的包涉及这些相同的步骤：列出它们在你的包的&lt;em&gt;Cargo.toml&lt;/em&gt;文件，并利用 &lt;code&gt;use&lt;/code&gt; ，使物品进入范围。</target>
        </trans-unit>
        <trans-unit id="2d6f4ca6e81d6132b393ed23c50a82522bb4eb19" translate="yes" xml:space="preserve">
          <source>Memory accesses will never be reordered across this barrier by the compiler, but no instructions will be emitted for it. This is appropriate for operations on the same thread that may be preempted, such as when interacting with signal handlers.</source>
          <target state="translated">内存访问永远不会被编译器重新排序穿过这个障碍,但不会为此发出任何指令。这适用于同一线程上可能被抢占的操作,如与信号处理程序交互时。</target>
        </trans-unit>
        <trans-unit id="b6bee5018a7e72cff7d1df71077553bda7588c2a" translate="yes" xml:space="preserve">
          <source>Memory allocation APIs</source>
          <target state="translated">内存分配API</target>
        </trans-unit>
        <trans-unit id="cde66bb647521e32ce185032147ad253c9aee7da" translate="yes" xml:space="preserve">
          <source>Memory allocation APIs.</source>
          <target state="translated">内存分配API。</target>
        </trans-unit>
        <trans-unit id="9be755c16f3fbdbf43ec9463cafab25c253fea10" translate="yes" xml:space="preserve">
          <source>Memory allocation and lifetime</source>
          <target state="translated">内存分配和寿命</target>
        </trans-unit>
        <trans-unit id="78f88c2700a9711b2514c20dff02f5f5982c250e" translate="yes" xml:space="preserve">
          <source>Memory and Allocation</source>
          <target state="translated">内存和分配</target>
        </trans-unit>
        <trans-unit id="bf742dc53a39d7b88626c322f9ed405b349b0ec4" translate="yes" xml:space="preserve">
          <source>Memory blocks returned from an allocator must point to valid memory and retain their validity until the instance and all of its clones are dropped,</source>
          <target state="translated">从分配器返回的内存块必须指向有效的内存,并保持其有效性,直到实例及其所有克隆被放弃。</target>
        </trans-unit>
        <trans-unit id="ec9a362f08612fb77b9f0b713369a332f48651a9" translate="yes" xml:space="preserve">
          <source>Memory can be &quot;invalidated&quot; by deallocation, but also by replacing a &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt;&lt;code&gt;Some(v)&lt;/code&gt;&lt;/a&gt; by &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, or calling &lt;a href=&quot;../vec/struct.vec#method.set_len&quot;&gt;&lt;code&gt;Vec::set_len&lt;/code&gt;&lt;/a&gt; to &quot;kill&quot; some elements off of a vector. It can be repurposed by using &lt;a href=&quot;../ptr/fn.write&quot;&gt;&lt;code&gt;ptr::write&lt;/code&gt;&lt;/a&gt; to overwrite it without calling the destructor first. None of this is allowed for pinned data without calling &lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">存储器可以是&amp;ldquo;无效&amp;rdquo;，由解除分配，而且通过更换&lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt; &lt;code&gt;Some(v)&lt;/code&gt; &lt;/a&gt;由&lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;，或调用&lt;a href=&quot;../vec/struct.vec#method.set_len&quot;&gt; &lt;code&gt;Vec::set_len&lt;/code&gt; &lt;/a&gt; &amp;ldquo;杀死&amp;rdquo;一些元件断开的载体。可以通过使用&lt;a href=&quot;../ptr/fn.write&quot;&gt; &lt;code&gt;ptr::write&lt;/code&gt; &lt;/a&gt;来重新设置它的用途，而无需先调用析构函数。在不调用&lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt; &lt;code&gt;drop&lt;/code&gt; 的&lt;/a&gt;情况下，不允许对固定的数据进行任何操作。</target>
        </trans-unit>
        <trans-unit id="6537b839fc70c4da7309dad24d6cd1a0b7bfff39" translate="yes" xml:space="preserve">
          <source>Memory fitting</source>
          <target state="translated">记忆配件</target>
        </trans-unit>
        <trans-unit id="475bc2651561a3c3ff5fe7691308be8b459d93e5" translate="yes" xml:space="preserve">
          <source>Memory layout</source>
          <target state="translated">内存布局</target>
        </trans-unit>
        <trans-unit id="ab97ff6f2dba5d3f1cd5aeb9b43d517c7ff39baa" translate="yes" xml:space="preserve">
          <source>Memory model</source>
          <target state="translated">记忆模型</target>
        </trans-unit>
        <trans-unit id="64f050cf8ce861fb451d8ebe7ed180d3e0b08ad3" translate="yes" xml:space="preserve">
          <source>Memory orderings specify the way atomic operations synchronize memory. In its weakest &lt;a href=&quot;#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, only the memory directly touched by the operation is synchronized. On the other hand, a store-load pair of &lt;a href=&quot;#variant.SeqCst&quot;&gt;&lt;code&gt;SeqCst&lt;/code&gt;&lt;/a&gt; operations synchronize other memory while additionally preserving a total order of such operations across all threads.</source>
          <target state="translated">内存顺序指定原子操作同步内存的方式。在其最弱的&lt;a href=&quot;#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; 中&lt;/a&gt;，仅同步操作直接触摸的内存。另一方面，存储对&lt;a href=&quot;#variant.SeqCst&quot;&gt; &lt;code&gt;SeqCst&lt;/code&gt; &lt;/a&gt;操作对将其他内存进行同步，同时还保留了所有线程中此类操作的总顺序。</target>
        </trans-unit>
        <trans-unit id="03e2538c8eaa31e61eba2183330660d56415ebcf" translate="yes" xml:space="preserve">
          <source>Memory orderings specify the way atomic operations synchronize memory. In its weakest &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Ordering::Relaxed&lt;/code&gt;&lt;/a&gt;, only the memory directly touched by the operation is synchronized. On the other hand, a store-load pair of &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt;&lt;code&gt;Ordering::SeqCst&lt;/code&gt;&lt;/a&gt; operations synchronize other memory while additionally preserving a total order of such operations across all threads.</source>
          <target state="translated">内存顺序指定原子操作同步内存的方式。在其最弱的&lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Ordering::Relaxed&lt;/code&gt; &lt;/a&gt;，仅同步操作直接触摸的内存。另一方面，一对&lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt; &lt;code&gt;Ordering::SeqCst&lt;/code&gt; &lt;/a&gt;操作的存储负载对同步其他内存，同时还保留了所有线程中此类操作的总顺序。</target>
        </trans-unit>
        <trans-unit id="22c02bdcac42d16560e88c9cdab7cac8538ffbcb" translate="yes" xml:space="preserve">
          <source>Memory ownership</source>
          <target state="translated">内存所有权</target>
        </trans-unit>
        <trans-unit id="b70cefd0a9c3186fc3ad2fca9d8f59f0972163e5" translate="yes" xml:space="preserve">
          <source>Message passing is a fine way of handling concurrency, but it&amp;rsquo;s not the only one. Consider this part of the slogan from the Go language documentation again: &amp;ldquo;communicate by sharing memory.&amp;rdquo;</source>
          <target state="translated">消息传递是处理并发的一种好方法，但它不是唯一的方法。再次考虑Go语言文档中口号的这一部分：&amp;ldquo;通过共享内存进行通信&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a03a90d59c75d716e1941e5fb5b8746472062e0e" translate="yes" xml:space="preserve">
          <source>Message passing is a fine way of handling concurrency, but it&amp;rsquo;s not the only one. Consider this part of the slogan from the Go language documentation again: &amp;ldquo;do not communicate by sharing memory.&amp;rdquo;</source>
          <target state="translated">消息传递是处理并发的一种好方法，但它不是唯一的一种。再次考虑Go语言文档中口号的这一部分：&amp;ldquo;不要通过共享内存进行通信。&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="f1702b4686278becffc88baabe6f4b7a8355532c" translate="yes" xml:space="preserve">
          <source>Messages</source>
          <target state="translated">Messages</target>
        </trans-unit>
        <trans-unit id="d47924059f378f859c3137ecc92f3018c8554c48" translate="yes" xml:space="preserve">
          <source>Messages can be sent through this channel with &lt;a href=&quot;struct.sender#method.send&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以使用send通过此通道&lt;a href=&quot;struct.sender#method.send&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d56b67df96e3223775707154a8618c734f2b8a7b" translate="yes" xml:space="preserve">
          <source>Messages can be sent through this channel with &lt;a href=&quot;struct.syncsender#method.send&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;struct.syncsender#method.try_send&quot;&gt;&lt;code&gt;try_send&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以使用&lt;a href=&quot;struct.syncsender#method.send&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;struct.syncsender#method.try_send&quot;&gt; &lt;code&gt;try_send&lt;/code&gt; &lt;/a&gt;通过此通道发送消息。</target>
        </trans-unit>
        <trans-unit id="e5fc413e41d8882a3983a228d24cde55dfc6fca3" translate="yes" xml:space="preserve">
          <source>Messages sent to the channel can be retrieved using &lt;a href=&quot;struct.receiver#method.recv&quot;&gt;&lt;code&gt;recv&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以使用&lt;a href=&quot;struct.receiver#method.recv&quot;&gt; &lt;code&gt;recv&lt;/code&gt; &lt;/a&gt;检索发送到该通道的消息。</target>
        </trans-unit>
        <trans-unit id="f57866593059968e971f86172293e7f4c20bbf7f" translate="yes" xml:space="preserve">
          <source>Meta Item Attribute Syntax</source>
          <target state="translated">元项目属性语法</target>
        </trans-unit>
        <trans-unit id="073695a20c371f27457f6aab051f26f7536b49bf" translate="yes" xml:space="preserve">
          <source>Meta items are the key-value pairs inside of an attribute. Each key may only be used once in each attribute.</source>
          <target state="translated">元项是属性内部的键值对。每个键在每个属性中只能使用一次。</target>
        </trans-unit>
        <trans-unit id="da50cb07b82024b80368e7f1d0d9ee941c6a68a0" translate="yes" xml:space="preserve">
          <source>Meta items are the key-value pairs inside of an attribute. The keys provided must be one of the valid keys for the specified attribute.</source>
          <target state="translated">元项是属性中的键值对。提供的键必须是指定属性的有效键之一。</target>
        </trans-unit>
        <trans-unit id="ded036d51fe4b3fb3eddc611d6778ba8e4dcef98" translate="yes" xml:space="preserve">
          <source>Meta items are the key-value pairs inside of an attribute. To fix these issues you need to give required key-value pairs.</source>
          <target state="translated">元项是一个属性里面的键值对。为了解决这些问题,你需要给出所需的键值对。</target>
        </trans-unit>
        <trans-unit id="fda66a74788b36b4a9cc97c2d88181628e7d03cd" translate="yes" xml:space="preserve">
          <source>Meta items are the key-value pairs inside of an attribute. To fix this issue, you need to give a value to the &lt;code&gt;note&lt;/code&gt; key. Example:</source>
          <target state="translated">元项目是属性内部的键/值对。要解决此问题，您需要为 &lt;code&gt;note&lt;/code&gt; 键赋予一个值。例子：</target>
        </trans-unit>
        <trans-unit id="251edc0eb5a820646bda4e103f0f007fd55321f3" translate="yes" xml:space="preserve">
          <source>Metadata</source>
          <target state="translated">Metadata</target>
        </trans-unit>
        <trans-unit id="6fbea655dc155b182628eb902f62724120a1efca" translate="yes" xml:space="preserve">
          <source>Metadata information about a file.</source>
          <target state="translated">文件的元数据信息。</target>
        </trans-unit>
        <trans-unit id="084830b6199879b13e88117f115361f568aadfed" translate="yes" xml:space="preserve">
          <source>Metadata::accessed</source>
          <target state="translated">Metadata::accessed</target>
        </trans-unit>
        <trans-unit id="ea03a6d8c078cad675d89ba6e750f9418bc0c495" translate="yes" xml:space="preserve">
          <source>Metadata::as_raw_stat</source>
          <target state="translated">Metadata::as_raw_stat</target>
        </trans-unit>
        <trans-unit id="c0545109dd814c2f2913abc28479e6d94ee0114d" translate="yes" xml:space="preserve">
          <source>Metadata::atime</source>
          <target state="translated">Metadata::atime</target>
        </trans-unit>
        <trans-unit id="50367585ad74ed80fa1cbe2b541c19bd0b2de90e" translate="yes" xml:space="preserve">
          <source>Metadata::atime_nsec</source>
          <target state="translated">Metadata::atime_nsec</target>
        </trans-unit>
        <trans-unit id="a680da2613a5aedd0f376ab10667b053d5d40a97" translate="yes" xml:space="preserve">
          <source>Metadata::blksize</source>
          <target state="translated">Metadata::blksize</target>
        </trans-unit>
        <trans-unit id="233007abda8ced2d64fc02c99f7a9b937493f947" translate="yes" xml:space="preserve">
          <source>Metadata::blocks</source>
          <target state="translated">Metadata::blocks</target>
        </trans-unit>
        <trans-unit id="0c9cb348d31160eb04b04dc9d0a8c9a6c7bb3082" translate="yes" xml:space="preserve">
          <source>Metadata::borrow</source>
          <target state="translated">Metadata::borrow</target>
        </trans-unit>
        <trans-unit id="fb7e7385698a1d59ac894814c418b5e972ac017f" translate="yes" xml:space="preserve">
          <source>Metadata::borrow_mut</source>
          <target state="translated">Metadata::borrow_mut</target>
        </trans-unit>
        <trans-unit id="81bdb5794047e85d36b507a5703800ac21e7b116" translate="yes" xml:space="preserve">
          <source>Metadata::clone</source>
          <target state="translated">Metadata::clone</target>
        </trans-unit>
        <trans-unit id="6063837d957ee30e1e495b46a1c85b6125b18ecc" translate="yes" xml:space="preserve">
          <source>Metadata::clone_from</source>
          <target state="translated">Metadata::clone_from</target>
        </trans-unit>
        <trans-unit id="9e01066e110fc02d3274390539e97c3ce87be38e" translate="yes" xml:space="preserve">
          <source>Metadata::clone_into</source>
          <target state="translated">Metadata::clone_into</target>
        </trans-unit>
        <trans-unit id="24bc22c259e7b47fee155cccf102870ea5319289" translate="yes" xml:space="preserve">
          <source>Metadata::created</source>
          <target state="translated">Metadata::created</target>
        </trans-unit>
        <trans-unit id="0a5fa59a9bdd4af484124f7b881a605786b1c5fc" translate="yes" xml:space="preserve">
          <source>Metadata::creation_time</source>
          <target state="translated">Metadata::creation_time</target>
        </trans-unit>
        <trans-unit id="eb8ad0815aeb8f84922c1ba42934ea060392d848" translate="yes" xml:space="preserve">
          <source>Metadata::ctime</source>
          <target state="translated">Metadata::ctime</target>
        </trans-unit>
        <trans-unit id="34107d78458895bc36cb2a586370e9a33f001d4e" translate="yes" xml:space="preserve">
          <source>Metadata::ctime_nsec</source>
          <target state="translated">Metadata::ctime_nsec</target>
        </trans-unit>
        <trans-unit id="4de93a5e1be0a62280e753f74aead534158e32fa" translate="yes" xml:space="preserve">
          <source>Metadata::dev</source>
          <target state="translated">Metadata::dev</target>
        </trans-unit>
        <trans-unit id="1ddf7b6dcaac670ecb58c655d7c29e7efcc7b976" translate="yes" xml:space="preserve">
          <source>Metadata::file_attributes</source>
          <target state="translated">Metadata::file_attributes</target>
        </trans-unit>
        <trans-unit id="d0242558abd414a74f34089244fa5d62391b4237" translate="yes" xml:space="preserve">
          <source>Metadata::file_size</source>
          <target state="translated">Metadata::file_size</target>
        </trans-unit>
        <trans-unit id="a80334eec47f4ec592f2356b1c15e66616fe6d79" translate="yes" xml:space="preserve">
          <source>Metadata::file_type</source>
          <target state="translated">Metadata::file_type</target>
        </trans-unit>
        <trans-unit id="8c5b2aa68de07863010f75c33869a67231d8a86c" translate="yes" xml:space="preserve">
          <source>Metadata::fmt</source>
          <target state="translated">Metadata::fmt</target>
        </trans-unit>
        <trans-unit id="22c4729ff6931a968eb928ba73151ec865e539bd" translate="yes" xml:space="preserve">
          <source>Metadata::from</source>
          <target state="translated">Metadata::from</target>
        </trans-unit>
        <trans-unit id="9aecb9b26fb5e2f5ecf3ae7fec8ad1913791d4fb" translate="yes" xml:space="preserve">
          <source>Metadata::gid</source>
          <target state="translated">Metadata::gid</target>
        </trans-unit>
        <trans-unit id="2dfe494860d779fdeab8e4a5d4ab49c9979a2c22" translate="yes" xml:space="preserve">
          <source>Metadata::ino</source>
          <target state="translated">Metadata::ino</target>
        </trans-unit>
        <trans-unit id="36d9dbdaea92dec9fd9a367943daf11c2968a4d9" translate="yes" xml:space="preserve">
          <source>Metadata::into</source>
          <target state="translated">Metadata::into</target>
        </trans-unit>
        <trans-unit id="29f1788d2917dee377c894e5f697e2f775dbe3c2" translate="yes" xml:space="preserve">
          <source>Metadata::is_dir</source>
          <target state="translated">Metadata::is_dir</target>
        </trans-unit>
        <trans-unit id="3aa539a19a6b3e2c584510ba64204dfdd9773023" translate="yes" xml:space="preserve">
          <source>Metadata::is_file</source>
          <target state="translated">Metadata::is_file</target>
        </trans-unit>
        <trans-unit id="afa64cd752db362df2a19d1dc5a178b5cc2f28bb" translate="yes" xml:space="preserve">
          <source>Metadata::last_access_time</source>
          <target state="translated">Metadata::last_access_time</target>
        </trans-unit>
        <trans-unit id="eaad95ea1d9df1f852c79a83a750592a287faefd" translate="yes" xml:space="preserve">
          <source>Metadata::last_write_time</source>
          <target state="translated">Metadata::last_write_time</target>
        </trans-unit>
        <trans-unit id="f9881c504082a9c98f72732ac253d46ddfcdd091" translate="yes" xml:space="preserve">
          <source>Metadata::len</source>
          <target state="translated">Metadata::len</target>
        </trans-unit>
        <trans-unit id="a1e80cdaa5a7c4b60866de711876b3a869fae063" translate="yes" xml:space="preserve">
          <source>Metadata::mode</source>
          <target state="translated">Metadata::mode</target>
        </trans-unit>
        <trans-unit id="7ccfeed6204cf299fd71093fa88a387e2f40cf29" translate="yes" xml:space="preserve">
          <source>Metadata::modified</source>
          <target state="translated">Metadata::modified</target>
        </trans-unit>
        <trans-unit id="fed36d469e25519f5d756495cbef355ed7e91ebc" translate="yes" xml:space="preserve">
          <source>Metadata::mtime</source>
          <target state="translated">Metadata::mtime</target>
        </trans-unit>
        <trans-unit id="f89d0ee281fc80e82b34a04d9ec5669992f853fe" translate="yes" xml:space="preserve">
          <source>Metadata::mtime_nsec</source>
          <target state="translated">Metadata::mtime_nsec</target>
        </trans-unit>
        <trans-unit id="7ea3185afb2cc66c1d1c43bb7e0c9431a71d5c0f" translate="yes" xml:space="preserve">
          <source>Metadata::nlink</source>
          <target state="translated">Metadata::nlink</target>
        </trans-unit>
        <trans-unit id="af6dc5bc6a15bc877f1b97832fdbaad7638e9e01" translate="yes" xml:space="preserve">
          <source>Metadata::permissions</source>
          <target state="translated">Metadata::permissions</target>
        </trans-unit>
        <trans-unit id="b8f0501a86acbf9b1c6ecec7d4736817cdf817cd" translate="yes" xml:space="preserve">
          <source>Metadata::rdev</source>
          <target state="translated">Metadata::rdev</target>
        </trans-unit>
        <trans-unit id="4d6596297451f34a3f748901f33eeaf5ca1ce581" translate="yes" xml:space="preserve">
          <source>Metadata::size</source>
          <target state="translated">Metadata::size</target>
        </trans-unit>
        <trans-unit id="e9067cb7fc933272c2ee73372bde8b5d793cec95" translate="yes" xml:space="preserve">
          <source>Metadata::st_atime</source>
          <target state="translated">Metadata::st_atime</target>
        </trans-unit>
        <trans-unit id="340d2deeb996099feda8b2e71ceee4746a54e895" translate="yes" xml:space="preserve">
          <source>Metadata::st_atime_nsec</source>
          <target state="translated">Metadata::st_atime_nsec</target>
        </trans-unit>
        <trans-unit id="0ae9039ec88beb8fc2f0f3bd1bb8ef8e5c525cab" translate="yes" xml:space="preserve">
          <source>Metadata::st_blksize</source>
          <target state="translated">Metadata::st_blksize</target>
        </trans-unit>
        <trans-unit id="a25bdcb2eb0e69a91b6e2eff09a462eca581884d" translate="yes" xml:space="preserve">
          <source>Metadata::st_blocks</source>
          <target state="translated">Metadata::st_blocks</target>
        </trans-unit>
        <trans-unit id="e8b580c6f030ddce2f3b41279b8814a4d974c39d" translate="yes" xml:space="preserve">
          <source>Metadata::st_ctime</source>
          <target state="translated">Metadata::st_ctime</target>
        </trans-unit>
        <trans-unit id="fdbb925376f8fb42348d70bd8f7efc024fe60076" translate="yes" xml:space="preserve">
          <source>Metadata::st_ctime_nsec</source>
          <target state="translated">Metadata::st_ctime_nsec</target>
        </trans-unit>
        <trans-unit id="b757b695e74311ba3c6e636e55b5ad9fdd73dd6b" translate="yes" xml:space="preserve">
          <source>Metadata::st_dev</source>
          <target state="translated">Metadata::st_dev</target>
        </trans-unit>
        <trans-unit id="6105b8b71960b47bdcdea43e0b8e7952849ef7c3" translate="yes" xml:space="preserve">
          <source>Metadata::st_gid</source>
          <target state="translated">Metadata::st_gid</target>
        </trans-unit>
        <trans-unit id="3db7b256e8dd1ff1c7ca3b4ec363649b620ce482" translate="yes" xml:space="preserve">
          <source>Metadata::st_ino</source>
          <target state="translated">Metadata::st_ino</target>
        </trans-unit>
        <trans-unit id="ccf6656b53d7732815f828000bde9df01154c5f7" translate="yes" xml:space="preserve">
          <source>Metadata::st_mode</source>
          <target state="translated">Metadata::st_mode</target>
        </trans-unit>
        <trans-unit id="a4761c3748e8e19cc614ab97572a55d03b74ded1" translate="yes" xml:space="preserve">
          <source>Metadata::st_mtime</source>
          <target state="translated">Metadata::st_mtime</target>
        </trans-unit>
        <trans-unit id="577eec1f21e7645e8b3ba3b96112265814eaab93" translate="yes" xml:space="preserve">
          <source>Metadata::st_mtime_nsec</source>
          <target state="translated">Metadata::st_mtime_nsec</target>
        </trans-unit>
        <trans-unit id="4af1b80839dea5a20a8f02919825911bfcfe6451" translate="yes" xml:space="preserve">
          <source>Metadata::st_nlink</source>
          <target state="translated">Metadata::st_nlink</target>
        </trans-unit>
        <trans-unit id="69d962fce72392be8edddc9a53681e0f08b9b69f" translate="yes" xml:space="preserve">
          <source>Metadata::st_rdev</source>
          <target state="translated">Metadata::st_rdev</target>
        </trans-unit>
        <trans-unit id="5faa5088298b4ae9ae7b08b3962a9a150635dfec" translate="yes" xml:space="preserve">
          <source>Metadata::st_size</source>
          <target state="translated">Metadata::st_size</target>
        </trans-unit>
        <trans-unit id="f4f89d23b5f0cd7c330566cf669e3a00205d72a7" translate="yes" xml:space="preserve">
          <source>Metadata::st_uid</source>
          <target state="translated">Metadata::st_uid</target>
        </trans-unit>
        <trans-unit id="1db7c9309be564ff6bf65531b173171534332f43" translate="yes" xml:space="preserve">
          <source>Metadata::to_owned</source>
          <target state="translated">Metadata::to_owned</target>
        </trans-unit>
        <trans-unit id="6732c96994bf6d2c0e20506c4bb4e662b9256862" translate="yes" xml:space="preserve">
          <source>Metadata::try_from</source>
          <target state="translated">Metadata::try_from</target>
        </trans-unit>
        <trans-unit id="73fe4168a94e1f02fc1b289a25908017bcf2159f" translate="yes" xml:space="preserve">
          <source>Metadata::try_into</source>
          <target state="translated">Metadata::try_into</target>
        </trans-unit>
        <trans-unit id="a718e80ede3faf1769107826f6fe239c5ded8be3" translate="yes" xml:space="preserve">
          <source>Metadata::type_id</source>
          <target state="translated">Metadata::type_id</target>
        </trans-unit>
        <trans-unit id="1d7387a664bb0cc1f5c78326600bd1342e97632f" translate="yes" xml:space="preserve">
          <source>Metadata::uid</source>
          <target state="translated">Metadata::uid</target>
        </trans-unit>
        <trans-unit id="1a9ddfb0caa33f4742d361d8a2f00bef568db02a" translate="yes" xml:space="preserve">
          <source>MetadataExt</source>
          <target state="translated">MetadataExt</target>
        </trans-unit>
        <trans-unit id="40b8dd00df3d6447af8e9e83e083a7745c1c189d" translate="yes" xml:space="preserve">
          <source>Metaprogramming is useful for reducing the amount of code you have to write and maintain, which is also one of the roles of functions. However, macros have some additional powers that functions don&amp;rsquo;t.</source>
          <target state="translated">元编程对于减少必须编写和维护的代码量很有用，这也是函数的作用之一。但是，宏具有功能所没有的其他功能。</target>
        </trans-unit>
        <trans-unit id="7cbf3f8dcb1e2f43e65d88ac0f8a6b93a1658631" translate="yes" xml:space="preserve">
          <source>Metavariables</source>
          <target state="translated">Metavariables</target>
        </trans-unit>
        <trans-unit id="076edf57211eeac67aa1aad417b7d7a1ffc8d699" translate="yes" xml:space="preserve">
          <source>Method Syntax</source>
          <target state="translated">方法语法</target>
        </trans-unit>
        <trans-unit id="aa23ba323c11de2437b737ae399da090864345e1" translate="yes" xml:space="preserve">
          <source>Method calls</source>
          <target state="translated">方法调用</target>
        </trans-unit>
        <trans-unit id="db3e2af666e649fa244ecde8200f6f3e54c8deaf" translate="yes" xml:space="preserve">
          <source>Method has generic type parameters</source>
          <target state="translated">方法有通用类型参数</target>
        </trans-unit>
        <trans-unit id="9fe2b64db1642155c9d0f52ba05e45faefa0cb4b" translate="yes" xml:space="preserve">
          <source>Method has no receiver</source>
          <target state="translated">该方法没有接收器</target>
        </trans-unit>
        <trans-unit id="9fbefc33104f8433b35bf7c08d6416988a59e97a" translate="yes" xml:space="preserve">
          <source>Method references the &lt;code&gt;Self&lt;/code&gt; type in its arguments or return type</source>
          <target state="translated">方法在其参数或返回类型中引用 &lt;code&gt;Self&lt;/code&gt; 类型</target>
        </trans-unit>
        <trans-unit id="2e20e820f64e959b3049d8c2e89b632aa89d87d7" translate="yes" xml:space="preserve">
          <source>Method references the &lt;code&gt;Self&lt;/code&gt; type in its parameters or return type</source>
          <target state="translated">方法在其参数或返回类型中引用 &lt;code&gt;Self&lt;/code&gt; 类型</target>
        </trans-unit>
        <trans-unit id="4caa5dd0258db2dcd504dc2546dbae39450d3d76" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by &quot;summing up&quot; the items.</source>
          <target state="translated">该方法采用迭代器并通过&amp;ldquo;汇总&amp;rdquo;项目从元素生成 &lt;code&gt;Self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0bfbad119f3cf91e8a3caba0dfc0e91aabd256df" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by &quot;summing up&quot; the items. &lt;a href=&quot;../iter/trait.sum#tymethod.sum&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">该方法采用迭代器并通过&amp;ldquo;汇总&amp;rdquo;项目从元素生成 &lt;code&gt;Self&lt;/code&gt; 。&lt;a href=&quot;../iter/trait.sum#tymethod.sum&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a49c93b99f5d6fa2929221bf68c97c440d6e08d7" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by &quot;summing up&quot; the items. &lt;a href=&quot;iter/trait.sum#tymethod.sum&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">该方法采用迭代器并通过&amp;ldquo;汇总&amp;rdquo;项目从元素生成 &lt;code&gt;Self&lt;/code&gt; 。&lt;a href=&quot;iter/trait.sum#tymethod.sum&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea69507e1801650f83f78a153ac7b6a2ad0138d3" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by multiplying the items.</source>
          <target state="translated">该方法采用迭代器并通过乘以项目从元素生成 &lt;code&gt;Self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73a5734b7c8ee797666395ff82c8551e1baecbfd" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by multiplying the items. &lt;a href=&quot;../iter/trait.product#tymethod.product&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">该方法采用迭代器并通过乘以项目从元素生成 &lt;code&gt;Self&lt;/code&gt; 。&lt;a href=&quot;../iter/trait.product#tymethod.product&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05e078fee77d9f52059120342f63434db6b130d7" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by multiplying the items. &lt;a href=&quot;iter/trait.product#tymethod.product&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">该方法采用迭代器并通过乘以项目从元素生成 &lt;code&gt;Self&lt;/code&gt; 。&lt;a href=&quot;iter/trait.product#tymethod.product&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a92d08f589c40b54496b3a1fbc8d96e770e0ced7" translate="yes" xml:space="preserve">
          <source>Method-call expressions</source>
          <target state="translated">方法调用表达式</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="ee8ca348ec57b6e6b019969d4eed66807417ce83" translate="yes" xml:space="preserve">
          <source>Methods can be chained on it in order to configure it.</source>
          <target state="translated">可以对其进行方法链,以便对其进行配置。</target>
        </trans-unit>
        <trans-unit id="b021a05f7c2a7c30d999e3a3dbfdfbb325ce5b50" translate="yes" xml:space="preserve">
          <source>Methods for Iterating Over Strings</source>
          <target state="translated">迭代字符串的方法</target>
        </trans-unit>
        <trans-unit id="00dd2d8a3c6af309cfff5d80bf81a66f5911b4af" translate="yes" xml:space="preserve">
          <source>Methods for string slices.</source>
          <target state="translated">字符串切片的方法。</target>
        </trans-unit>
        <trans-unit id="c07aa4ee0c7df87d7696c4013a8c13bb9865c6c1" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = CStr&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = CStr&amp;gt;中的方法</target>
        </trans-unit>
        <trans-unit id="52ba76ad3be01e9c1922f800d6dd033b03df424a" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = OsStr&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = OsStr&amp;gt;中的方法</target>
        </trans-unit>
        <trans-unit id="2c4d2afb0c4f85edb3758b4b74f07ed37559c41d" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = Path&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = Path&amp;gt;中的方法</target>
        </trans-unit>
        <trans-unit id="4fe785a58d64e13b3eb4b5b3048abd19034b85d5" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = VaListImpl&amp;lt;'f&amp;gt;&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = VaListImpl &amp;lt;'f &amp;gt;&amp;gt;中的方法</target>
        </trans-unit>
        <trans-unit id="886ed7558512e092a63227354a168c0f7c713bf8" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = [T]&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = [T]&amp;gt;中的方法</target>
        </trans-unit>
        <trans-unit id="aeaea61088adeb05abf57ffbd37dfaa9942f2c9c" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = [u8]&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = [u8]&amp;gt;中的方法</target>
        </trans-unit>
        <trans-unit id="2d000ac3199600cab3d62328aab7e663fe156377" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = str&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = str&amp;gt;中的方法</target>
        </trans-unit>
        <trans-unit id="15acf73029decb61b9edc8c57e095d1568d02f80" translate="yes" xml:space="preserve">
          <source>Methods take a special first parameter, of which there are three variants: &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;&amp;amp;self&lt;/code&gt;, and &lt;code&gt;&amp;amp;mut self&lt;/code&gt;. These are syntactic sugar for &lt;code&gt;self: Self&lt;/code&gt;, &lt;code&gt;self: &amp;amp;Self&lt;/code&gt;, and &lt;code&gt;self: &amp;amp;mut Self&lt;/code&gt; respectively.</source>
          <target state="translated">方法采用特殊的第一个参数，其中有三个变体： &lt;code&gt;self&lt;/code&gt; ， &lt;code&gt;&amp;amp;self&lt;/code&gt; 和 &lt;code&gt;&amp;amp;mut self&lt;/code&gt; 。它们分别是 &lt;code&gt;self: Self&lt;/code&gt; 语法糖：Self， &lt;code&gt;self: &amp;amp;Self&lt;/code&gt; 和 &lt;code&gt;self: &amp;amp;mut Self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fe4104ca2fabda0b7616f0224304804e72d4ac2a" translate="yes" xml:space="preserve">
          <source>Methods that Consume the Iterator</source>
          <target state="translated">消耗迭代器的方法</target>
        </trans-unit>
        <trans-unit id="043d81030ec2d2447aaee9862fecf17f9a5197d0" translate="yes" xml:space="preserve">
          <source>Methods that Produce Other Iterators</source>
          <target state="translated">产生其他迭代器的方法</target>
        </trans-unit>
        <trans-unit id="679313b3ec5d9213f11610dd488f1716be31fd55" translate="yes" xml:space="preserve">
          <source>Methods that call &lt;code&gt;next&lt;/code&gt; are called &lt;em&gt;consuming adaptors&lt;/em&gt;, because calling them uses up the iterator. One example is the &lt;code&gt;sum&lt;/code&gt; method, which takes ownership of the iterator and iterates through the items by repeatedly calling &lt;code&gt;next&lt;/code&gt;, thus consuming the iterator. As it iterates through, it adds each item to a running total and returns the total when iteration is complete. Listing 13-16 has a test illustrating a use of the &lt;code&gt;sum&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;next&lt;/code&gt; 调用的方法称为&lt;em&gt;使用适配器&lt;/em&gt;，因为调用它们会&lt;em&gt;消耗&lt;/em&gt;迭代器。一个示例是 &lt;code&gt;sum&lt;/code&gt; 方法，该方法获取迭代器的所有权，并通过重复调用 &lt;code&gt;next&lt;/code&gt; 来遍历项，从而消耗了迭代器。在迭代过程中，它将每个项目添加到运行总计中，并在迭代完成时返回总计。清单13-16有一个测试，说明了 &lt;code&gt;sum&lt;/code&gt; 方法的用法：</target>
        </trans-unit>
        <trans-unit id="3ee9e7dcc3b812dd7c3d130ea59dea4e2ffafdfc" translate="yes" xml:space="preserve">
          <source>Methods that do not take a &lt;code&gt;self&lt;/code&gt; parameter can't be called since there won't be a way to get a pointer to the method table for them.</source>
          <target state="translated">没有 &lt;code&gt;self&lt;/code&gt; 变量的方法不能被调用，因为没有办法为它们获取指向方法表的指针。</target>
        </trans-unit>
        <trans-unit id="ae3a1f0113af9f3ea9e116941ce0ea3243f869f0" translate="yes" xml:space="preserve">
          <source>Methods which take no arguments, like &lt;a href=&quot;../../std/default/trait.default#tymethod.default&quot;&gt;&lt;code&gt;default()&lt;/code&gt;&lt;/a&gt;, and return properties of a type, like &lt;a href=&quot;../../std/mem/fn.size_of&quot;&gt;&lt;code&gt;size_of()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">不带参数的方法&lt;a href=&quot;../../std/default/trait.default#tymethod.default&quot;&gt; &lt;code&gt;default()&lt;/code&gt; &lt;/a&gt;如default（））并返回类型的属性（如&lt;a href=&quot;../../std/mem/fn.size_of&quot;&gt; &lt;code&gt;size_of()&lt;/code&gt; )的方法&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f508ce51136df60a01c2c9efd3801fc4a432141c" translate="yes" xml:space="preserve">
          <source>Methods which take no arguments, like &lt;code&gt;default()&lt;/code&gt;, and return properties of a type, like &lt;code&gt;size_of()&lt;/code&gt;</source>
          <target state="translated">不带参数的方法 &lt;code&gt;default()&lt;/code&gt; 如default（））并返回类型的属性（如 &lt;code&gt;size_of()&lt;/code&gt; )的方法</target>
        </trans-unit>
        <trans-unit id="511541816029367d0abeb46600cba6c7968497a0" translate="yes" xml:space="preserve">
          <source>Methods with More Parameters</source>
          <target state="translated">有更多参数的方法</target>
        </trans-unit>
        <trans-unit id="802461e6fd7e65d5e9a22bd62f94115d8960193a" translate="yes" xml:space="preserve">
          <source>Micro (or Update) version.</source>
          <target state="translated">微(或更新)版。</target>
        </trans-unit>
        <trans-unit id="1d43f011780167b829f8c795b301b234700476ad" translate="yes" xml:space="preserve">
          <source>Might panic if the index of the element overflows a &lt;code&gt;usize&lt;/code&gt;.</source>
          <target state="translated">如果元素的索引溢出 &lt;code&gt;usize&lt;/code&gt; ，则可能会感到恐慌。</target>
        </trans-unit>
        <trans-unit id="0bb10d4d5a8dbd1865d2894f56f1c7c91d1e068f" translate="yes" xml:space="preserve">
          <source>Migrating to &lt;code&gt;compare_exchange&lt;/code&gt; and &lt;code&gt;compare_exchange_weak&lt;/code&gt;</source>
          <target state="translated">迁移到 &lt;code&gt;compare_exchange&lt;/code&gt; 和 &lt;code&gt;compare_exchange_weak&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="779f4caecdf181b1f5c98a94586ba57d3d722311" translate="yes" xml:space="preserve">
          <source>Min-heap</source>
          <target state="translated">Min-heap</target>
        </trans-unit>
        <trans-unit id="5d398eef3ecc3ea6a161734581d0bd3d920b64d8" translate="yes" xml:space="preserve">
          <source>Minimum</source>
          <target state="translated">Minimum</target>
        </trans-unit>
        <trans-unit id="9686035ca169e7d2c603263a9dbe434de5abc91a" translate="yes" xml:space="preserve">
          <source>Minimum possible normal power of 10 exponent.</source>
          <target state="translated">10指数的最小可能正常功率。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
