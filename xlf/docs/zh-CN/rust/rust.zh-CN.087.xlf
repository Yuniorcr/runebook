<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="78a25e5b990fcd1740e4efa791bdb025c393c864" translate="yes" xml:space="preserve">
          <source>In some situations, some strings that should create a valid float instead return an error. See &lt;a href=&quot;https://github.com/rust-lang/rust/issues/31407&quot;&gt;issue #31407&lt;/a&gt; for details.</source>
          <target state="translated">在某些情况下，某些应创建有效浮点数的字符串将返回错误。有关详细信息，请参见&lt;a href=&quot;https://github.com/rust-lang/rust/issues/31407&quot;&gt;问题＃31407&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e28b9cfae095cd08e8afd62032026a0b23bc39f7" translate="yes" xml:space="preserve">
          <source>In statements like &lt;code&gt;let x = 5;&lt;/code&gt; with a variable name in the &lt;code&gt;PATTERN&lt;/code&gt; slot, the variable name is just a particularly simple form of a pattern. Rust compares the expression against the pattern and assigns any names it finds. So in the &lt;code&gt;let x = 5;&lt;/code&gt; example, &lt;code&gt;x&lt;/code&gt; is a pattern that means &amp;ldquo;bind what matches here to the variable &lt;code&gt;x&lt;/code&gt;.&amp;rdquo; Because the name &lt;code&gt;x&lt;/code&gt; is the whole pattern, this pattern effectively means &amp;ldquo;bind everything to the variable &lt;code&gt;x&lt;/code&gt;, whatever the value is.&amp;rdquo;</source>
          <target state="translated">在语句中， &lt;code&gt;let x = 5;&lt;/code&gt; 在 &lt;code&gt;PATTERN&lt;/code&gt; 插槽中有一个变量名，变量名只是模式的一种特别简单的形式。Rust将表达式与模式进行比较，并分配它找到的任何名称。因此， &lt;code&gt;let x = 5;&lt;/code&gt; 例如， &lt;code&gt;x&lt;/code&gt; 是一种模式，表示&amp;ldquo;将此处匹配的内容绑定到变量 &lt;code&gt;x&lt;/code&gt; &amp;rdquo;。因为名称 &lt;code&gt;x&lt;/code&gt; 是整个模式，所以该模式实际上意味着&amp;ldquo;将所有值绑定到变量 &lt;code&gt;x&lt;/code&gt; ，无论值是多少&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="ab76c75fb8be2531be195781f70554fa526d2349" translate="yes" xml:space="preserve">
          <source>In such a case, the compiler cannot predict the return type of &lt;code&gt;foo()&lt;/code&gt; in a situation like the following:</source>
          <target state="translated">在这种情况下，编译器无法在以下情况下预测 &lt;code&gt;foo()&lt;/code&gt; 的返回类型：</target>
        </trans-unit>
        <trans-unit id="a84c028b3015af78e467c76bddbf22405a6992e9" translate="yes" xml:space="preserve">
          <source>In sum, here are the steps we took to change the code from Listing 10-2 to Listing 10-3:</source>
          <target state="translated">总而言之,以下是我们将清单10-2的代码改为清单10-3的步骤。</target>
        </trans-unit>
        <trans-unit id="b66a6766ec59e5aa720a0c750a221736c0a524da" translate="yes" xml:space="preserve">
          <source>In terms of &lt;a href=&quot;../sync/atomic/index&quot;&gt;atomic memory orderings&lt;/a&gt;, the completion of the associated thread synchronizes with this function returning. In other words, all operations performed by that thread are ordered before all operations that happen after &lt;code&gt;join&lt;/code&gt; returns.</source>
          <target state="translated">在&lt;a href=&quot;../sync/atomic/index&quot;&gt;原子内存排序方面&lt;/a&gt;，关联线程的完成与此函数返回同步。换句话说，该线程执行的所有操作在 &lt;code&gt;join&lt;/code&gt; 返回之后发生的所有操作之前被排序。</target>
        </trans-unit>
        <trans-unit id="49ebdf4d886162df5d53e77b9ab0d51282c8c87c" translate="yes" xml:space="preserve">
          <source>In the 2015 edition parameters pattern where not needed for traits:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb4dfd79140995a00d7f2f4a091910c0bb3584f" translate="yes" xml:space="preserve">
          <source>In the 2015 edition, &lt;a href=&quot;types/trait-object&quot;&gt;&lt;code&gt;dyn&lt;/code&gt;&lt;/a&gt; is a keyword when used in a type position followed by a path that does not start with &lt;code&gt;::&lt;/code&gt;.</source>
          <target state="translated">在2015版中，&lt;a href=&quot;types/trait-object&quot;&gt; &lt;code&gt;dyn&lt;/code&gt; &lt;/a&gt;在类型位置后跟不是以 &lt;code&gt;::&lt;/code&gt; 开头的路径时是关键字。</target>
        </trans-unit>
        <trans-unit id="e5c533200fa356e0f6f01942ecd077fd12144d48" translate="yes" xml:space="preserve">
          <source>In the 2015 edition, the pattern for a trait function or method parameter is optional:</source>
          <target state="translated">在2015版中,性状函数或方法参数的模式是可选的。</target>
        </trans-unit>
        <trans-unit id="ead217a846b182b1c7c3895bb636fcdc53cf3da8" translate="yes" xml:space="preserve">
          <source>In the 2018 edition, if an in-scope item has the same name as an external crate, then &lt;code&gt;use&lt;/code&gt; of that crate name requires a leading &lt;code&gt;::&lt;/code&gt; to unambiguously select the crate name. This is to retain compatibility with potential future changes.</source>
          <target state="translated">在2018年版中，如果范围内的商品与外部包装箱具有相同的名称，则 &lt;code&gt;use&lt;/code&gt; 该包装箱名称需要使用前导 &lt;code&gt;::&lt;/code&gt; 来明确选择包装箱名称。这是为了保持与将来可能发生的更改的兼容性。</target>
        </trans-unit>
        <trans-unit id="a3999cf3a0362f5c3017eea167e996c61b1004cc" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://www.unicode.org/versions/latest/&quot;&gt;Unicode Standard&lt;/a&gt;, Chapter 4 (Character Properties) discusses case mapping in general and Chapter 3 (Conformance) discusses the default algorithm for case conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8c3e671a7bc9e2a3ca26713c444ad82025ac40" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;index&quot;&gt;module level docs&lt;/a&gt;, we implemented an &lt;a href=&quot;trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;Counter&lt;/code&gt;. Let's implement &lt;code&gt;ExactSizeIterator&lt;/code&gt; for it as well:</source>
          <target state="translated">在&lt;a href=&quot;index&quot;&gt;模块级文档&lt;/a&gt;中，我们实施了一个&lt;a href=&quot;trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;Counter&lt;/code&gt; 。让我们也为其实现 &lt;code&gt;ExactSizeIterator&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="542be6c89aa5ea78dd9931c09f1fa338c6d41b0e" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;User&lt;/code&gt; struct definition in Listing 5-1, we used the owned &lt;code&gt;String&lt;/code&gt; type rather than the &lt;code&gt;&amp;amp;str&lt;/code&gt; string slice type. This is a deliberate choice because we want instances of this struct to own all of its data and for that data to be valid for as long as the entire struct is valid.</source>
          <target state="translated">在清单5-1中的 &lt;code&gt;User&lt;/code&gt; struct定义中，我们使用了拥有的 &lt;code&gt;String&lt;/code&gt; 类型而不是 &lt;code&gt;&amp;amp;str&lt;/code&gt; 字符串切片类型。这是一个有意的选择，因为我们希望该结构的实例拥有其所有数据，并且只要整个结构有效，该数据就一直有效。</target>
        </trans-unit>
        <trans-unit id="86f5e9e4af3e5d42db41973d9449d9469f700ef8" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;handle_connection&lt;/code&gt; function, we&amp;rsquo;ve made the &lt;code&gt;stream&lt;/code&gt; parameter mutable. The reason is that the &lt;code&gt;TcpStream&lt;/code&gt; instance keeps track of what data it returns to us internally. It might read more data than we asked for and save that data for the next time we ask for data. It therefore needs to be &lt;code&gt;mut&lt;/code&gt; because its internal state might change; usually, we think of &amp;ldquo;reading&amp;rdquo; as not needing mutation, but in this case we need the &lt;code&gt;mut&lt;/code&gt; keyword.</source>
          <target state="translated">在 &lt;code&gt;handle_connection&lt;/code&gt; 函数中，我们使 &lt;code&gt;stream&lt;/code&gt; 参数可变。原因是 &lt;code&gt;TcpStream&lt;/code&gt; 实例跟踪它在内部返回给我们的数据。它读取的数据可能会超过我们的要求，并在下次我们要求数据时保存该数据。因此，它需要 &lt;code&gt;mut&lt;/code&gt; 因为其内部状态可能会改变;通常，我们认为&amp;ldquo;阅读&amp;rdquo;不需要突变，但是在这种情况下，我们需要 &lt;code&gt;mut&lt;/code&gt; 关键字。</target>
        </trans-unit>
        <trans-unit id="41e5d381e8adcfa53c11fefa07fcde5916d77703" translate="yes" xml:space="preserve">
          <source>In the &lt;em&gt;Cargo.toml&lt;/em&gt; file, everything that follows a header is part of a section that continues until another section starts. The &lt;code&gt;[dependencies]&lt;/code&gt; section is where you tell Cargo which external crates your project depends on and which versions of those crates you require. In this case, we&amp;rsquo;ll specify the &lt;code&gt;rand&lt;/code&gt; crate with the semantic version specifier &lt;code&gt;0.3.14&lt;/code&gt;. Cargo understands &lt;a href=&quot;http://semver.org&quot;&gt;Semantic Versioning&lt;/a&gt; (sometimes called &lt;em&gt;SemVer&lt;/em&gt;), which is a standard for writing version numbers. The number &lt;code&gt;0.3.14&lt;/code&gt; is actually shorthand for &lt;code&gt;^0.3.14&lt;/code&gt;, which means &amp;ldquo;any version that has a public API compatible with version 0.3.14.&amp;rdquo;</source>
          <target state="translated">在&lt;em&gt;Cargo.toml&lt;/em&gt;文件中，标头后的所有内容都是该节的一部分，该节一直持续到另一个节开始。在 &lt;code&gt;[dependencies]&lt;/code&gt; 部分中，您可以告诉Cargo项目所依赖的外部包装箱以及所需的这些包装箱的版本。在这种情况下，我们将使用语义版本说明符 &lt;code&gt;0.3.14&lt;/code&gt; 指定 &lt;code&gt;rand&lt;/code&gt; crate 。 Cargo理解&lt;a href=&quot;http://semver.org&quot;&gt;语义版本控制&lt;/a&gt;（有时称为&lt;em&gt;SemVer&lt;/em&gt;），这是编写版本号的标准。数字 &lt;code&gt;0.3.14&lt;/code&gt; 实际上是 &lt;code&gt;^0.3.14&lt;/code&gt; 简写，表示&amp;ldquo;具有与0.3.14版本兼容的公共API的任何版本。&amp;rdquo;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ba414d8766c29269cba8897672efd77d70e901b9" translate="yes" xml:space="preserve">
          <source>In the &lt;em&gt;Cargo.toml&lt;/em&gt; file, everything that follows a header is part of a section that continues until another section starts. The &lt;code&gt;[dependencies]&lt;/code&gt; section is where you tell Cargo which external crates your project depends on and which versions of those crates you require. In this case, we&amp;rsquo;ll specify the &lt;code&gt;rand&lt;/code&gt; crate with the semantic version specifier &lt;code&gt;0.5.5&lt;/code&gt;. Cargo understands &lt;a href=&quot;http://semver.org&quot;&gt;Semantic Versioning&lt;/a&gt; (sometimes called &lt;em&gt;SemVer&lt;/em&gt;), which is a standard for writing version numbers. The number &lt;code&gt;0.5.5&lt;/code&gt; is actually shorthand for &lt;code&gt;^0.5.5&lt;/code&gt;, which means &amp;ldquo;any version that has a public API compatible with version 0.5.5.&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7177f5dba94e8e93990faf2d2454fb646d49847" translate="yes" xml:space="preserve">
          <source>In the &lt;em&gt;add-one/src/lib.rs&lt;/em&gt; file, let&amp;rsquo;s add an &lt;code&gt;add_one&lt;/code&gt; function:</source>
          <target state="translated">在&lt;em&gt;add-one / src / lib.rs&lt;/em&gt;文件中，我们添加一个 &lt;code&gt;add_one&lt;/code&gt; 函数：</target>
        </trans-unit>
        <trans-unit id="3da0b39e8b4dc5e8ab87b83cc0f936c2b1215ca7" translate="yes" xml:space="preserve">
          <source>In the above example &lt;code&gt;T&lt;/code&gt; is unknowable by the compiler. To fix this you must bind &lt;code&gt;T&lt;/code&gt; to a concrete type such as &lt;code&gt;String&lt;/code&gt; so that a generator can then be constructed:</source>
          <target state="translated">在上面的示例中，编译器无法知道 &lt;code&gt;T&lt;/code&gt; 。要解决此问题，您必须将 &lt;code&gt;T&lt;/code&gt; 绑定到具体类型（例如 &lt;code&gt;String&lt;/code&gt; ),以便可以构造生成器：</target>
        </trans-unit>
        <trans-unit id="dac108bef6e0aa0c5a3c87c1e1dd002eec20cb12" translate="yes" xml:space="preserve">
          <source>In the absolute path, we start with &lt;code&gt;crate&lt;/code&gt;, the root of our crate&amp;rsquo;s module tree. Then the &lt;code&gt;front_of_house&lt;/code&gt; module is defined in the crate root. The &lt;code&gt;front_of_house&lt;/code&gt; module isn&amp;rsquo;t public, but because the &lt;code&gt;eat_at_restaurant&lt;/code&gt; function is defined in the same module as &lt;code&gt;front_of_house&lt;/code&gt; (that is, &lt;code&gt;eat_at_restaurant&lt;/code&gt; and &lt;code&gt;front_of_house&lt;/code&gt; are siblings), we can refer to &lt;code&gt;front_of_house&lt;/code&gt; from &lt;code&gt;eat_at_restaurant&lt;/code&gt;. Next is the &lt;code&gt;hosting&lt;/code&gt; module marked with &lt;code&gt;pub&lt;/code&gt;. We can access the parent module of &lt;code&gt;hosting&lt;/code&gt;, so we can access &lt;code&gt;hosting&lt;/code&gt;. Finally, the &lt;code&gt;add_to_waitlist&lt;/code&gt; function is marked with &lt;code&gt;pub&lt;/code&gt; and we can access its parent module, so this function call works!</source>
          <target state="translated">在绝对路径中，我们从 &lt;code&gt;crate&lt;/code&gt; 开始，这是crate的模块树的根。然后在 &lt;code&gt;front_of_house&lt;/code&gt; 中定义front_of_house模块。该 &lt;code&gt;front_of_house&lt;/code&gt; 模块是不公开的，但由于 &lt;code&gt;eat_at_restaurant&lt;/code&gt; 功能是一样的模块定义 &lt;code&gt;front_of_house&lt;/code&gt; （即 &lt;code&gt;eat_at_restaurant&lt;/code&gt; 和 &lt;code&gt;front_of_house&lt;/code&gt; 是兄弟），大家可以参考 &lt;code&gt;front_of_house&lt;/code&gt; 从 &lt;code&gt;eat_at_restaurant&lt;/code&gt; 。接下来是标有 &lt;code&gt;pub&lt;/code&gt; 的 &lt;code&gt;hosting&lt;/code&gt; 模块。我们可以访问 &lt;code&gt;hosting&lt;/code&gt; 的父模块，因此我们可以访问 &lt;code&gt;hosting&lt;/code&gt; 。最后，将 &lt;code&gt;add_to_waitlist&lt;/code&gt; 函数标记为 &lt;code&gt;pub&lt;/code&gt; ，我们可以访问其父模块，因此此函数调用有效！</target>
        </trans-unit>
        <trans-unit id="e8a74d26ff6bb6812e6769b94696470ac83d32c8" translate="yes" xml:space="preserve">
          <source>In the body of &lt;code&gt;largest&lt;/code&gt; we wanted to compare two values of type &lt;code&gt;T&lt;/code&gt; using the greater than (&lt;code&gt;&amp;gt;&lt;/code&gt;) operator. Because that operator is defined as a default method on the standard library trait &lt;code&gt;std::cmp::PartialOrd&lt;/code&gt;, we need to specify &lt;code&gt;PartialOrd&lt;/code&gt; in the trait bounds for &lt;code&gt;T&lt;/code&gt; so the &lt;code&gt;largest&lt;/code&gt; function can work on slices of any type that we can compare. We don&amp;rsquo;t need to bring &lt;code&gt;PartialOrd&lt;/code&gt; into scope because it&amp;rsquo;s in the prelude. Change the signature of &lt;code&gt;largest&lt;/code&gt; to look like this:</source>
          <target state="translated">在 &lt;code&gt;largest&lt;/code&gt; 的正文中，我们想使用大于（ &lt;code&gt;&amp;gt;&lt;/code&gt; ）运算符比较两个类型 &lt;code&gt;T&lt;/code&gt; 的值。因为该运算符被定义为标准库特征 &lt;code&gt;std::cmp::PartialOrd&lt;/code&gt; 的默认方法，所以我们需要在 &lt;code&gt;T&lt;/code&gt; 的特征范围中指定 &lt;code&gt;PartialOrd&lt;/code&gt; ，以便 &lt;code&gt;largest&lt;/code&gt; 函数可以作用于我们可以比较的任何类型的切片。我们不需要把 &lt;code&gt;PartialOrd&lt;/code&gt; 纳入范围，因为它处于序幕中。更改 &lt;code&gt;largest&lt;/code&gt; 的签名，如下所示：</target>
        </trans-unit>
        <trans-unit id="9eeb876353faccbcba2ce19feeb7d0dafe4faead" translate="yes" xml:space="preserve">
          <source>In the body of &lt;code&gt;shoes_in_my_size&lt;/code&gt;, we call &lt;code&gt;into_iter&lt;/code&gt; to create an iterator that takes ownership of the vector. Then we call &lt;code&gt;filter&lt;/code&gt; to adapt that iterator into a new iterator that only contains elements for which the closure returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;shoes_in_my_size&lt;/code&gt; 的主体中，我们调用 &lt;code&gt;into_iter&lt;/code&gt; 创建一个迭代器，该迭代器获取向量的所有权。然后，我们调用 &lt;code&gt;filter&lt;/code&gt; 使该迭代器适应新的迭代器，该迭代器仅包含闭包为其返回 &lt;code&gt;true&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="ccc28c109f469220d7a0f86ba3d92af7a489d690" translate="yes" xml:space="preserve">
          <source>In the body of a generic function, methods from &lt;code&gt;Trait&lt;/code&gt; can be called on &lt;code&gt;Ty&lt;/code&gt; values. Likewise associated constants on the &lt;code&gt;Trait&lt;/code&gt; can be used.</source>
          <target state="translated">在泛型函数的主体中，可以对 &lt;code&gt;Ty&lt;/code&gt; 值调用 &lt;code&gt;Trait&lt;/code&gt; 中的方法。同样，可以使用 &lt;code&gt;Trait&lt;/code&gt; 上的关联常量。</target>
        </trans-unit>
        <trans-unit id="ed9b56a6d3a5e9ebb3e76d9359071c31eee0aecc" translate="yes" xml:space="preserve">
          <source>In the case a &lt;code&gt;loop&lt;/code&gt; has an associated &lt;code&gt;break&lt;/code&gt;, it is not considered diverging, and the &lt;code&gt;loop&lt;/code&gt; must have a type compatible with each &lt;code&gt;break&lt;/code&gt; expression. &lt;code&gt;break&lt;/code&gt; without an expression is considered identical to &lt;code&gt;break&lt;/code&gt; with expression &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;loop&lt;/code&gt; 具有关联的 &lt;code&gt;break&lt;/code&gt; ，则不认为它是发散的，并且 &lt;code&gt;loop&lt;/code&gt; 必须具有与每个 &lt;code&gt;break&lt;/code&gt; 表达式兼容的类型。没有表达式的 &lt;code&gt;break&lt;/code&gt; 被认为与带有表达式 &lt;code&gt;()&lt;/code&gt; 的 &lt;code&gt;break&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="5e9ac885fce76186450b96a37f179bf757255fd6" translate="yes" xml:space="preserve">
          <source>In the case of a &lt;a href=&quot;expressions/block-expr&quot;&gt;block expression&lt;/a&gt;, the scope for the block and the expression are the same scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57fe262eb9d9754ab04dac149861a78ef7f9cbdf" translate="yes" xml:space="preserve">
          <source>In the case of a string literal, we know the contents at compile time, so the text is hardcoded directly into the final executable. This is why string literals are fast and efficient. But these properties only come from the string literal&amp;rsquo;s immutability. Unfortunately, we can&amp;rsquo;t put a blob of memory into the binary for each piece of text whose size is unknown at compile time and whose size might change while running the program.</source>
          <target state="translated">对于字符串文字，我们在编译时就知道内容，因此文本直接硬编码到最终的可执行文件中。这就是为什么字符串文字快速高效的原因。但是这些属性仅来自字符串文字的不变性。不幸的是，对于在编译时大小未知并且运行程序时大小可能会改变的每段文本，我们无法在二进制文件中放入一滴内存。</target>
        </trans-unit>
        <trans-unit id="174ee51902d80b0fa89335cd9be3f224ff39dd4c" translate="yes" xml:space="preserve">
          <source>In the case of implicitly-wrapped overflow, implementations must provide well-defined (even if still considered erroneous) results by using two's complement overflow conventions.</source>
          <target state="translated">在隐式包装溢出的情况下,实现必须通过使用两个的补码溢出惯例来提供定义明确的(即使仍然被认为是错误的)结果。</target>
        </trans-unit>
        <trans-unit id="ad072c8ebb70bdab55dbb950bf9d58e7b04bb9e3" translate="yes" xml:space="preserve">
          <source>In the case where &lt;code&gt;File::open&lt;/code&gt; succeeds, the value in the variable &lt;code&gt;f&lt;/code&gt; will be an instance of &lt;code&gt;Ok&lt;/code&gt; that contains a file handle. In the case where it fails, the value in &lt;code&gt;f&lt;/code&gt; will be an instance of &lt;code&gt;Err&lt;/code&gt; that contains more information about the kind of error that happened.</source>
          <target state="translated">如果 &lt;code&gt;File::open&lt;/code&gt; 成功，则变量 &lt;code&gt;f&lt;/code&gt; 中的值将是 &lt;code&gt;Ok&lt;/code&gt; 的实例，其中包含文件句柄。在失败的情况下， &lt;code&gt;f&lt;/code&gt; 中的值将是 &lt;code&gt;Err&lt;/code&gt; 的实例，其中包含有关发生的错误类型的更多信息。</target>
        </trans-unit>
        <trans-unit id="98ff22c3c9a8db90c4e7212603caadebf4d948d5" translate="yes" xml:space="preserve">
          <source>In the code above, the function is returning data borrowed from either &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt;, but the &lt;code&gt;'a&lt;/code&gt; annotation indicates that it is returning data only from &lt;code&gt;x&lt;/code&gt;. To fix the error, the signature and the body must be made to match. Typically, this is done by updating the function signature. So, in this case, we change the type of &lt;code&gt;y&lt;/code&gt; to &lt;code&gt;&amp;amp;'a i32&lt;/code&gt;, like so:</source>
          <target state="translated">在上面的代码中，该函数正在返回从 &lt;code&gt;x&lt;/code&gt; 或 &lt;code&gt;y&lt;/code&gt; 借来的数据，但是 &lt;code&gt;'a&lt;/code&gt; 批注表明它仅从 &lt;code&gt;x&lt;/code&gt; 返回数据。要纠正错误，必须使签名和正文匹配。通常，这是通过更新功能签名来完成的。因此，在这种情况下，我们将 &lt;code&gt;y&lt;/code&gt; 的类型更改为 &lt;code&gt;&amp;amp;'a i32&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="47d276ce9763d36114b6391e5e3702972a6d1fd2" translate="yes" xml:space="preserve">
          <source>In the context of Listing 9-7, the &lt;code&gt;?&lt;/code&gt; at the end of the &lt;code&gt;File::open&lt;/code&gt; call will return the value inside an &lt;code&gt;Ok&lt;/code&gt; to the variable &lt;code&gt;f&lt;/code&gt;. If an error occurs, the &lt;code&gt;?&lt;/code&gt; operator will return early out of the whole function and give any &lt;code&gt;Err&lt;/code&gt; value to the calling code. The same thing applies to the &lt;code&gt;?&lt;/code&gt; at the end of the &lt;code&gt;read_to_string&lt;/code&gt; call.</source>
          <target state="translated">在清单9-7的上下文中， &lt;code&gt;?&lt;/code&gt; 在 &lt;code&gt;File::open&lt;/code&gt; 调用的末尾，会将 &lt;code&gt;Ok&lt;/code&gt; 内的值返回给变量 &lt;code&gt;f&lt;/code&gt; 。如果发生错误，则 &lt;code&gt;?&lt;/code&gt; 运算符将在整个函数中尽早返回并为调用代码提供任何 &lt;code&gt;Err&lt;/code&gt; 值。同样的事情适用于 &lt;code&gt;?&lt;/code&gt; 在 &lt;code&gt;read_to_string&lt;/code&gt; 调用的末尾。</target>
        </trans-unit>
        <trans-unit id="c49979de4803e07d7682a6dac88ad65cf9bdcef3" translate="yes" xml:space="preserve">
          <source>In the end, this means that you may need to pair &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; with some sort of &lt;a href=&quot;index&quot;&gt;&lt;code&gt;std::sync&lt;/code&gt;&lt;/a&gt; type, usually &lt;a href=&quot;struct.mutex&quot;&gt;&lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最后，这意味着您可能需要将 &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; 与某种&lt;a href=&quot;index&quot;&gt; &lt;code&gt;std::sync&lt;/code&gt; &lt;/a&gt;类型配对，通常是&lt;a href=&quot;struct.mutex&quot;&gt; &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5a1b716ed41677dd2be556cd6b10193bd9fd8fb5" translate="yes" xml:space="preserve">
          <source>In the erroneous code example above, the wrong name was provided, so changing to a correct one it will fix the error. Example:</source>
          <target state="translated">在上面的错误代码例子中,提供了错误的名称,所以改成正确的名称就可以解决这个错误。例子。</target>
        </trans-unit>
        <trans-unit id="a13ba9220a713242d839758de54b6d6a213f5d7c" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;code&gt;closure&lt;/code&gt; is an &lt;code&gt;FnOnce&lt;/code&gt; closure whereas the &lt;code&gt;bar&lt;/code&gt; function expected an &lt;code&gt;Fn&lt;/code&gt; closure. In this case, it's simple to fix the issue, you just have to implement &lt;code&gt;Copy&lt;/code&gt; and &lt;code&gt;Clone&lt;/code&gt; traits on &lt;code&gt;struct X&lt;/code&gt; and it'll be ok:</source>
          <target state="translated">在上面的示例中， &lt;code&gt;closure&lt;/code&gt; 为 &lt;code&gt;FnOnce&lt;/code&gt; 闭包，而 &lt;code&gt;bar&lt;/code&gt; 函数期望为 &lt;code&gt;Fn&lt;/code&gt; 闭包。在这种情况下，解决问题很简单，您只需要在 &lt;code&gt;struct X&lt;/code&gt; 上实现 &lt;code&gt;Copy&lt;/code&gt; 和 &lt;code&gt;Clone&lt;/code&gt; 特征即可，这可以：</target>
        </trans-unit>
        <trans-unit id="c4e63cece27f012d6cb0c3b410a4800e38cdde84" translate="yes" xml:space="preserve">
          <source>In the example below, we implement a &lt;code&gt;Point&lt;/code&gt; type. Because it only stores two integers, we opt-out of ownership semantics with &lt;code&gt;Copy&lt;/code&gt;. Then we can &lt;code&gt;let p2 = p1&lt;/code&gt; without &lt;code&gt;p1&lt;/code&gt; being moved.</source>
          <target state="translated">在下面的示例中，我们实现了 &lt;code&gt;Point&lt;/code&gt; 类型。因为它只存储两个整数，所以我们选择使用 &lt;code&gt;Copy&lt;/code&gt; 退出所有权语义。然后我们可以 &lt;code&gt;let p2 = p1&lt;/code&gt; 而不移动 &lt;code&gt;p1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c1f21adbe43e342921b2cfef575b2b17bbbed822" translate="yes" xml:space="preserve">
          <source>In the example, the type cannot have a well-defined size, because it needs to be arbitrarily large (since we would be able to nest &lt;code&gt;ListNode&lt;/code&gt;s to any depth). Specifically,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce7e71b1b63c6637f941a4911789744e653ecbd" translate="yes" xml:space="preserve">
          <source>In the first case, the output lifetime is inferred to be the same as the unique input lifetime. In the second case, the lifetime is instead inferred to be the same as the lifetime on &lt;code&gt;&amp;amp;self&lt;/code&gt; or &lt;code&gt;&amp;amp;mut self&lt;/code&gt;.</source>
          <target state="translated">在第一种情况下，推断出输出寿命与唯一输入寿命相同。在第二种情况下，生存期被推断为 &lt;code&gt;&amp;amp;self&lt;/code&gt; 或 &lt;code&gt;&amp;amp;mut self&lt;/code&gt; 上的生存期相同。</target>
        </trans-unit>
        <trans-unit id="3fd5720ef4de3e0fbc4e279820c08cbec7f12fa8" translate="yes" xml:space="preserve">
          <source>In the first code example, the compiler cannot infer what the type of &lt;code&gt;x&lt;/code&gt; should be: &lt;code&gt;Vec&amp;lt;char&amp;gt;&lt;/code&gt; and &lt;code&gt;String&lt;/code&gt; are both suitable candidates. To specify which type to use, you can use a type annotation on &lt;code&gt;x&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874b3aefadd7a8d78fd78ecf2f3f7b20564e4f86" translate="yes" xml:space="preserve">
          <source>In the first example, the lowercased string is represented &lt;code&gt;&quot;cafe\u{301}&quot;&lt;/code&gt; (the last character is an acute accent &lt;a href=&quot;https://en.wikipedia.org/wiki/Combining_character&quot;&gt;combining character&lt;/a&gt;). Unlike the other characters in the string, the combining character will not get mapped to an uppercase variant, resulting in &lt;code&gt;&quot;CAFE\u{301}&quot;&lt;/code&gt;. In the second example, the lowercased string is represented &lt;code&gt;&quot;caf\u{e9}&quot;&lt;/code&gt; (the last character is a single Unicode character representing an 'e' with an acute accent). Since the last character is defined outside the scope of ASCII, it will not get mapped to an uppercase variant, resulting in &lt;code&gt;&quot;CAF\u{e9}&quot;&lt;/code&gt;.</source>
          <target state="translated">在第一个示例中，小写的字符串表示为 &lt;code&gt;&quot;cafe\u{301}&quot;&lt;/code&gt; （最后一个字符是尖音&lt;a href=&quot;https://en.wikipedia.org/wiki/Combining_character&quot;&gt;组合字符&lt;/a&gt;）。与字符串中的其他字符不同，合并字符不会映射到大写变体，从而导致 &lt;code&gt;&quot;CAFE\u{301}&quot;&lt;/code&gt; 。在第二个示例中，小写的字符串表示为 &lt;code&gt;&quot;caf\u{e9}&quot;&lt;/code&gt; （最后一个字符是单个Unicode字符，表示带有重音符的&amp;ldquo; e&amp;rdquo;）。由于最后一个字符是在ASCII范围之外定义的，因此不会将其映射为大写变体，从而导致 &lt;code&gt;&quot;CAF\u{e9}&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e492b1a4744d12effe76c9a0dc29e53bf345ccf" translate="yes" xml:space="preserve">
          <source>In the first match expression, the value is copied (or moved). In the second match, a reference to the same memory location is bound to the variable value. This syntax is needed because in destructuring subpatterns the &lt;code&gt;&amp;amp;&lt;/code&gt; operator can't be applied to the value's fields. For example, the following is not valid:</source>
          <target state="translated">在第一个匹配表达式中，将值复制（或移动）。在第二个匹配中，对相同存储位置的引用绑定到变量值。之所以需要这种语法，是因为在分解子模式时， &lt;code&gt;&amp;amp;&lt;/code&gt; 运算符不能应用于值的字段。例如，以下无效：</target>
        </trans-unit>
        <trans-unit id="963b4be1c96ed23abf1f14a5ca37f0831c8c64ef" translate="yes" xml:space="preserve">
          <source>In the following example, we make the &lt;code&gt;call_from_c&lt;/code&gt; function accessible from C code, after it&amp;rsquo;s compiled to a shared library and linked from C:</source>
          <target state="translated">在以下示例中，在将 &lt;code&gt;call_from_c&lt;/code&gt; 函数编译到共享库并从C链接之后，我们使C语言可以访问call_from_c函数：</target>
        </trans-unit>
        <trans-unit id="ab9b978885ac92b130a921c64c6e0cb297ec938c" translate="yes" xml:space="preserve">
          <source>In the general case, collecting into &lt;code&gt;Arc&amp;lt;[T]&amp;gt;&lt;/code&gt; is done by first collecting into a &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;. That is, when writing the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="068c8963b2ca078d181d2b0a51e8af10dd52ecbb" translate="yes" xml:space="preserve">
          <source>In the general case, collecting into &lt;code&gt;Rc&amp;lt;[T]&amp;gt;&lt;/code&gt; is done by first collecting into a &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;. That is, when writing the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acbd16055f21eb6fdaf455bf26541bd9198ef8ac" translate="yes" xml:space="preserve">
          <source>In the implementation of &lt;code&gt;outline_print&lt;/code&gt;, we want to use the &lt;code&gt;Display&lt;/code&gt; trait&amp;rsquo;s functionality. Therefore, we need to specify that the &lt;code&gt;OutlinePrint&lt;/code&gt; trait will work only for types that also implement &lt;code&gt;Display&lt;/code&gt; and provide the functionality that &lt;code&gt;OutlinePrint&lt;/code&gt; needs. We can do that in the trait definition by specifying &lt;code&gt;OutlinePrint: Display&lt;/code&gt;. This technique is similar to adding a trait bound to the trait. Listing 19-22 shows an implementation of the &lt;code&gt;OutlinePrint&lt;/code&gt; trait.</source>
          <target state="translated">在执行 &lt;code&gt;outline_print&lt;/code&gt; 的过程中，我们要使用 &lt;code&gt;Display&lt;/code&gt; trait的功能。因此，我们需要指定 &lt;code&gt;OutlinePrint&lt;/code&gt; 特征仅适用于还实现 &lt;code&gt;Display&lt;/code&gt; 并提供 &lt;code&gt;OutlinePrint&lt;/code&gt; 所需功能的类型。我们可以通过指定 &lt;code&gt;OutlinePrint: Display&lt;/code&gt; 在特征定义中做到这一点。此技术类似于添加绑定到该特性的特性。清单19-22显示了 &lt;code&gt;OutlinePrint&lt;/code&gt; 特征的实现。</target>
        </trans-unit>
        <trans-unit id="81a422714f2fa87b38ce332890d1f64c8678f1a7" translate="yes" xml:space="preserve">
          <source>In the last arm, where we&amp;rsquo;ve specified a variable without a range, we do have the value available to use in the arm&amp;rsquo;s code in a variable named &lt;code&gt;id&lt;/code&gt;. The reason is that we&amp;rsquo;ve used the struct field shorthand syntax. But we haven&amp;rsquo;t applied any test to the value in the &lt;code&gt;id&lt;/code&gt; field in this arm, as we did with the first two arms: any value would match this pattern.</source>
          <target state="translated">在最后一个分支中，我们指定了一个不带范围的变量，我们确实在一个名为 &lt;code&gt;id&lt;/code&gt; 的变量中具有可用于分支代码中的值。原因是我们使用了struct字段的简写语法。但是，我们没有像前两个手臂那样对此分支的 &lt;code&gt;id&lt;/code&gt; 字段中的值进行任何测试：任何值都将与此模式匹配。</target>
        </trans-unit>
        <trans-unit id="8a42fbeac9d5cd28add8db6a4c34d47e67684d80" translate="yes" xml:space="preserve">
          <source>In the main thread, we collect all the join handles. Then, as we did in Listing 16-2, we call &lt;code&gt;join&lt;/code&gt; on each handle to make sure all the threads finish. At that point, the main thread will acquire the lock and print the result of this program.</source>
          <target state="translated">在主线程中，我们收集所有联接句柄。然后，如清单16-2所示，我们在每个句柄上调用 &lt;code&gt;join&lt;/code&gt; 以确保所有线程完成。此时，主线程将获取该锁并打印该程序的结果。</target>
        </trans-unit>
        <trans-unit id="04da7f268aa71a2c6ae0063d0f79d0cc060f8123" translate="yes" xml:space="preserve">
          <source>In the main thread, we&amp;rsquo;re not calling the &lt;code&gt;recv&lt;/code&gt; function explicitly anymore: instead, we&amp;rsquo;re treating &lt;code&gt;rx&lt;/code&gt; as an iterator. For each value received, we&amp;rsquo;re printing it. When the channel is closed, iteration will end.</source>
          <target state="translated">在主线程中，我们不再显式调用 &lt;code&gt;recv&lt;/code&gt; 函数：相反，我们将 &lt;code&gt;rx&lt;/code&gt; 视为迭代器。对于收到的每个值，我们都在打印它。当通道关闭时，迭代将结束。</target>
        </trans-unit>
        <trans-unit id="6a6bd022f18026c156e26cea87623c8cec496bfa" translate="yes" xml:space="preserve">
          <source>In the majority of cases, ownership is clear: you know exactly which variable owns a given value. However, there are cases when a single value might have multiple owners. For example, in graph data structures, multiple edges might point to the same node, and that node is conceptually owned by all of the edges that point to it. A node shouldn&amp;rsquo;t be cleaned up unless it doesn&amp;rsquo;t have any edges pointing to it.</source>
          <target state="translated">在大多数情况下，所有权很明确：您确切知道哪个变量拥有给定值。但是，在某些情况下，单个值可能具有多个所有者。例如，在图形数据结构中，多个边可能指向同一个节点，并且从概念上讲，该节点归指向该节点的所有边所有。除非没有任何指向它的边缘，否则不应该清除该节点。</target>
        </trans-unit>
        <trans-unit id="b4fe9ca25f444c9952c260922e7715e70a50aab9" translate="yes" xml:space="preserve">
          <source>In the match expression for this code, we add a variable called &lt;code&gt;state&lt;/code&gt; to the pattern that matches values of the variant &lt;code&gt;Coin::Quarter&lt;/code&gt;. When a &lt;code&gt;Coin::Quarter&lt;/code&gt; matches, the &lt;code&gt;state&lt;/code&gt; variable will bind to the value of that quarter&amp;rsquo;s state. Then we can use &lt;code&gt;state&lt;/code&gt; in the code for that arm, like so:</source>
          <target state="translated">在此代码的match表达式中，我们向模式添加一个名为 &lt;code&gt;state&lt;/code&gt; 的变量，以匹配变体 &lt;code&gt;Coin::Quarter&lt;/code&gt; 。当 &lt;code&gt;Coin::Quarter&lt;/code&gt; 匹配时， &lt;code&gt;state&lt;/code&gt; 变量将绑定到该季度状态的值。然后，我们可以在代码中为该支路使用 &lt;code&gt;state&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="37676c5799bfd02feed7afe648d55c20c391e411" translate="yes" xml:space="preserve">
          <source>In the matcher, &lt;code&gt;$&lt;/code&gt;&lt;em&gt;name&lt;/em&gt;&lt;code&gt;:&lt;/code&gt;&lt;em&gt;fragment-specifier&lt;/em&gt; matches a Rust syntax fragment of the kind specified and binds it to the metavariable &lt;code&gt;$&lt;/code&gt;&lt;em&gt;name&lt;/em&gt;. Valid fragment specifiers are:</source>
          <target state="translated">在匹配器中， &lt;code&gt;$&lt;/code&gt; &lt;em&gt;name &lt;/em&gt; &lt;code&gt;:&lt;/code&gt; &lt;em&gt;fragment-specifier&lt;/em&gt;匹配&lt;em&gt;指定类型&lt;/em&gt;的Rust语法片段，并将其绑定到元变量 &lt;code&gt;$&lt;/code&gt; &lt;em&gt;name&lt;/em&gt;。有效的片段说明符是：</target>
        </trans-unit>
        <trans-unit id="963b3e8473b4ab06c6410ca4e20e74e946590848" translate="yes" xml:space="preserve">
          <source>In the next chapter, we&amp;rsquo;ll look at some collection data structures in the standard library that you can use in your neatly organized code.</source>
          <target state="translated">在下一章中，我们将研究标准库中的一些集合数据结构，您可以在整洁的代码中使用它们。</target>
        </trans-unit>
        <trans-unit id="62f755e3daa908e0af290719bd4bb3bcad378eef" translate="yes" xml:space="preserve">
          <source>In the output in Listing 9-2, line 12 of the backtrace points to the line in our project that&amp;rsquo;s causing the problem: line 4 of &lt;em&gt;src/main.rs&lt;/em&gt;. If we don&amp;rsquo;t want our program to panic, the location pointed to by the first line mentioning a file we wrote is where we should start investigating. In Listing 9-1, where we deliberately wrote code that would panic in order to demonstrate how to use backtraces, the way to fix the panic is to not request an element at index 99 from a vector that only contains 3 items. When your code panics in the future, you&amp;rsquo;ll need to figure out what action the code is taking with what values to cause the panic and what the code should do instead.</source>
          <target state="translated">在清单9-2的输出中，回溯的第12行指向导致问题的项目中的行：&lt;em&gt;src / main.rs的&lt;/em&gt;第4行。如果我们不希望我们的程序崩溃，那么第一行提到我们编写的文件所指向的位置就是我们应该开始调查的地方。在清单9-1中，我们故意编写了会恐慌的代码以演示如何使用回溯，解决恐慌的方法是不从仅包含3个项的向量中请求索引99的元素。将来当您的代码出现紧急情况时，您需要弄清楚该代码正在采取什么措施以及导致该紧急情况的值以及应该执行的操作。</target>
        </trans-unit>
        <trans-unit id="c97b14b94a5006f9b4ef147bf12f463db5d6141e" translate="yes" xml:space="preserve">
          <source>In the output in Listing 9-2, line 17 of the backtrace points to the line in our project that&amp;rsquo;s causing the problem: line 4 of &lt;em&gt;src/main.rs&lt;/em&gt;. If we don&amp;rsquo;t want our program to panic, the location pointed to by the first line mentioning a file we wrote is where we should start investigating. In Listing 9-1, where we deliberately wrote code that would panic in order to demonstrate how to use backtraces, the way to fix the panic is to not request an element at index 99 from a vector that only contains 3 items. When your code panics in the future, you&amp;rsquo;ll need to figure out what action the code is taking with what values to cause the panic and what the code should do instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1955a5e30929ce37102fab2f4935897b292825" translate="yes" xml:space="preserve">
          <source>In the previous section, we looked at how the &lt;code&gt;IpAddr&lt;/code&gt; enum let us use Rust&amp;rsquo;s type system to encode more information than just the data into our program. This section explores a case study of &lt;code&gt;Option&lt;/code&gt;, which is another enum defined by the standard library. The &lt;code&gt;Option&lt;/code&gt; type is used in many places because it encodes the very common scenario in which a value could be something or it could be nothing. Expressing this concept in terms of the type system means the compiler can check whether you&amp;rsquo;ve handled all the cases you should be handling; this functionality can prevent bugs that are extremely common in other programming languages.</source>
          <target state="translated">在上一节中，我们研究了 &lt;code&gt;IpAddr&lt;/code&gt; 枚举如何使我们使用Rust的类型系统来编码更多信息，而不仅仅是将数据编码到程序中。本节探讨 &lt;code&gt;Option&lt;/code&gt; 的案例研究，Option是标准库定义的另一个枚举。该 &lt;code&gt;Option&lt;/code&gt; 类型在很多地方使用，因为它编码中的值可能会是很常见的情况，也可能什么都不是。用类型系统来表达这个概念意味着编译器可以检查您是否已经处理了所有您应该处理的情况。此功能可以防止其他编程语言中极为常见的错误。</target>
        </trans-unit>
        <trans-unit id="7166e371e82ca092dfca006916f5e7d27ed3dcc0" translate="yes" xml:space="preserve">
          <source>In the previous section, we wanted to get the inner &lt;code&gt;T&lt;/code&gt; value out of the &lt;code&gt;Some&lt;/code&gt; case when using &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;; we can also handle &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; using &lt;code&gt;match&lt;/code&gt; as we did with the &lt;code&gt;Coin&lt;/code&gt; enum! Instead of comparing coins, we&amp;rsquo;ll compare the variants of &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;, but the way that the &lt;code&gt;match&lt;/code&gt; expression works remains the same.</source>
          <target state="translated">在上一节中，我们希望使用 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 时从 &lt;code&gt;Some&lt;/code&gt; case中获得内部 &lt;code&gt;T&lt;/code&gt; 值；我们也可以像使用 &lt;code&gt;Coin&lt;/code&gt; 枚举一样使用 &lt;code&gt;match&lt;/code&gt; 处理 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; ！除了比较硬币以外，我们将比较 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 的变体，但是 &lt;code&gt;match&lt;/code&gt; 表达式的工作方式保持不变。</target>
        </trans-unit>
        <trans-unit id="021531d5da5d15cfe5b7187998d391941c64c620" translate="yes" xml:space="preserve">
          <source>In the relative path, the logic is the same as the absolute path except for the first step: rather than starting from the crate root, the path starts from &lt;code&gt;front_of_house&lt;/code&gt;. The &lt;code&gt;front_of_house&lt;/code&gt; module is defined within the same module as &lt;code&gt;eat_at_restaurant&lt;/code&gt;, so the relative path starting from the module in which &lt;code&gt;eat_at_restaurant&lt;/code&gt; is defined works. Then, because &lt;code&gt;hosting&lt;/code&gt; and &lt;code&gt;add_to_waitlist&lt;/code&gt; are marked with &lt;code&gt;pub&lt;/code&gt;, the rest of the path works, and this function call is valid!</source>
          <target state="translated">在相对路径中，除了第一步外，逻辑与绝对路径相同：路径不是从板条箱根开始， &lt;code&gt;front_of_house&lt;/code&gt; 从front_of_house开始。所述 &lt;code&gt;front_of_house&lt;/code&gt; 模块相同的模块中定义的 &lt;code&gt;eat_at_restaurant&lt;/code&gt; ，所以相对的路径从该模块开始 &lt;code&gt;eat_at_restaurant&lt;/code&gt; 定义作品。然后，因为 &lt;code&gt;hosting&lt;/code&gt; 和 &lt;code&gt;add_to_waitlist&lt;/code&gt; 都标有 &lt;code&gt;pub&lt;/code&gt; ，路径工程的其余部分，而这个函数调用是有效的！</target>
        </trans-unit>
        <trans-unit id="34eddaeb0b0b8fe0265b13cd54b792a68e5d0a8d" translate="yes" xml:space="preserve">
          <source>In the restaurant industry, some parts of a restaurant are referred to as &lt;em&gt;front of house&lt;/em&gt; and others as &lt;em&gt;back of house&lt;/em&gt;. Front of house is where customers are; this is where hosts seat customers, servers take orders and payment, and bartenders make drinks. Back of house is where the chefs and cooks work in the kitchen, dishwashers clean up, and managers do administrative work.</source>
          <target state="translated">在餐饮业中，餐厅的某些部分称为&lt;em&gt;房屋前部，&lt;/em&gt;而其他部分称为&lt;em&gt;房屋后部&lt;/em&gt;。屋前就是顾客的所在。主机在这里招待客户，服务器在接受订单和付款，调酒师在这里喝酒。屋后是厨师在厨房工作，洗碗碟机，经理进行行政工作的地方。</target>
        </trans-unit>
        <trans-unit id="d2fbd57442ab7172a121e226a86228020af2eb14" translate="yes" xml:space="preserve">
          <source>In the second &lt;code&gt;use&lt;/code&gt; statement, we chose the new name &lt;code&gt;IoResult&lt;/code&gt; for the &lt;code&gt;std::io::Result&lt;/code&gt; type, which won&amp;rsquo;t conflict with the &lt;code&gt;Result&lt;/code&gt; from &lt;code&gt;std::fmt&lt;/code&gt; that we&amp;rsquo;ve also brought into scope. Listing 7-15 and Listing 7-16 are considered idiomatic, so the choice is up to you!</source>
          <target state="translated">在第二个 &lt;code&gt;use&lt;/code&gt; 的语句，我们选择了新名称 &lt;code&gt;IoResult&lt;/code&gt; 为 &lt;code&gt;std::io::Result&lt;/code&gt; 类型，将与不冲突 &lt;code&gt;Result&lt;/code&gt; 从 &lt;code&gt;std::fmt&lt;/code&gt; ，我们也已经纳入范围。清单7-15和清单7-16被认为是惯用的，因此选择取决于您！</target>
        </trans-unit>
        <trans-unit id="adc1d9d12c1d2bddf332118061c6c7cd3ce7bb85" translate="yes" xml:space="preserve">
          <source>In the second arm, where we only have a range specified in the pattern, the code associated with the arm doesn&amp;rsquo;t have a variable that contains the actual value of the &lt;code&gt;id&lt;/code&gt; field. The &lt;code&gt;id&lt;/code&gt; field&amp;rsquo;s value could have been 10, 11, or 12, but the code that goes with that pattern doesn&amp;rsquo;t know which it is. The pattern code isn&amp;rsquo;t able to use the value from the &lt;code&gt;id&lt;/code&gt; field, because we haven&amp;rsquo;t saved the &lt;code&gt;id&lt;/code&gt; value in a variable.</source>
          <target state="translated">在第二个分支中，我们只有模式中指定的范围，与该分支关联的代码没有包含 &lt;code&gt;id&lt;/code&gt; 字段实际值的变量。该 &lt;code&gt;id&lt;/code&gt; 字段的值可能是10，11或12，但与该模式而来的代码不知道它是。模式代码无法使用 &lt;code&gt;id&lt;/code&gt; 字段中的值，因为我们尚未将 &lt;code&gt;id&lt;/code&gt; 值保存在变量中。</target>
        </trans-unit>
        <trans-unit id="555ee2d5bf80e581edd3155ac1632a3804b80f34" translate="yes" xml:space="preserve">
          <source>In the second case, it mentions that a private item &quot;can be accessed&quot; by the current module and its descendants, but the exact meaning of accessing an item depends on what the item is. Accessing a module, for example, would mean looking inside of it (to import more items). On the other hand, accessing a function would mean that it is invoked. Additionally, path expressions and import statements are considered to access an item in the sense that the import/expression is only valid if the destination is in the current visibility scope.</source>
          <target state="translated">在第二种情况下,它提到一个私有项目 &quot;可以被当前的模块及其后代访问&quot;,但访问一个项目的确切含义取决于该项目是什么。例如,访问一个模块,就意味着在它的内部寻找(导入更多的项目)。另一方面,访问一个函数将意味着它被调用。此外,路径表达式和导入语句被认为是访问一个项目,因为导入/表达式只有在目标在当前可见范围内才有效。</target>
        </trans-unit>
        <trans-unit id="16e34afb2acb9f1c8b1247e4ecd62d975388d5ff" translate="yes" xml:space="preserve">
          <source>In the second error, we tried to bind the &lt;code&gt;Jak&lt;/code&gt; enum directly, which is not possible: you can only bind one of its variants. To do so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75974ca9e444bb30cc1d72502f982a23696566b5" translate="yes" xml:space="preserve">
          <source>In the second error, you can't implement something on an item, only on types. We would need to create a new type if we wanted to do something similar:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e1b0f0f7f1d23b0a9789a638c11ce7f83e6698" translate="yes" xml:space="preserve">
          <source>In the second you can do it by simply removing &lt;code&gt;'b&lt;/code&gt; so they both use &lt;code&gt;'a&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde08af4b5bbaaf0718281f4cc2fdcf3ef098583" translate="yes" xml:space="preserve">
          <source>In the signature for &lt;code&gt;area&lt;/code&gt;, we use &lt;code&gt;&amp;amp;self&lt;/code&gt; instead of &lt;code&gt;rectangle: &amp;amp;Rectangle&lt;/code&gt; because Rust knows the type of &lt;code&gt;self&lt;/code&gt; is &lt;code&gt;Rectangle&lt;/code&gt; due to this method&amp;rsquo;s being inside the &lt;code&gt;impl Rectangle&lt;/code&gt; context. Note that we still need to use the &lt;code&gt;&amp;amp;&lt;/code&gt; before &lt;code&gt;self&lt;/code&gt;, just as we did in &lt;code&gt;&amp;amp;Rectangle&lt;/code&gt;. Methods can take ownership of &lt;code&gt;self&lt;/code&gt;, borrow &lt;code&gt;self&lt;/code&gt; immutably as we&amp;rsquo;ve done here, or borrow &lt;code&gt;self&lt;/code&gt; mutably, just as they can any other parameter.</source>
          <target state="translated">在 &lt;code&gt;area&lt;/code&gt; 的签名中，我们使用 &lt;code&gt;&amp;amp;self&lt;/code&gt; 而不是 &lt;code&gt;rectangle: &amp;amp;Rectangle&lt;/code&gt; 因为Rust知道 &lt;code&gt;self&lt;/code&gt; 的类型是 &lt;code&gt;Rectangle&lt;/code&gt; ,因为该方法位于 &lt;code&gt;impl Rectangle&lt;/code&gt; 上下文中。需要注意的是，我们仍然需要使用 &lt;code&gt;&amp;amp;&lt;/code&gt; 之前 &lt;code&gt;self&lt;/code&gt; ，就像我们在做 &lt;code&gt;&amp;amp;Rectangle&lt;/code&gt; 。方法可以取得 &lt;code&gt;self&lt;/code&gt; 所有权，像我们在这里所做的那样，不可变地借用 &lt;code&gt;self&lt;/code&gt; ，或者可变地借用 &lt;code&gt;self&lt;/code&gt; ，就像它们可以使用任何其他参数一样。</target>
        </trans-unit>
        <trans-unit id="15bf74e663ebaabe244e5b40c6c296178b0d40e8" translate="yes" xml:space="preserve">
          <source>In the standard library, pointer types generally do not have structural pinning, and thus they do not offer pinning projections. This is why &lt;code&gt;Box&amp;lt;T&amp;gt;: Unpin&lt;/code&gt; holds for all &lt;code&gt;T&lt;/code&gt;. It makes sense to do this for pointer types, because moving the &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; does not actually move the &lt;code&gt;T&lt;/code&gt;: the &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; can be freely movable (aka &lt;code&gt;Unpin&lt;/code&gt;) even if the &lt;code&gt;T&lt;/code&gt; is not. In fact, even &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; and &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; are always &lt;a href=&quot;../marker/trait.unpin&quot;&gt;&lt;code&gt;Unpin&lt;/code&gt;&lt;/a&gt; themselves, for the same reason: their contents (the &lt;code&gt;T&lt;/code&gt;) are pinned, but the pointers themselves can be moved without moving the pinned data. For both &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;, whether the content is pinned is entirely independent of whether the pointer is pinned, meaning pinning is &lt;em&gt;not&lt;/em&gt; structural.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01eb539066ab2d6a68111a77de7d3391be1abdf" translate="yes" xml:space="preserve">
          <source>In the standard library, pointer types generally do not have structural pinning, and thus they do not offer pinning projections. This is why &lt;code&gt;Box&amp;lt;T&amp;gt;: Unpin&lt;/code&gt; holds for all &lt;code&gt;T&lt;/code&gt;. It makes sense to do this for pointer types, because moving the &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; does not actually move the &lt;code&gt;T&lt;/code&gt;: the &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; can be freely movable (aka &lt;code&gt;Unpin&lt;/code&gt;) even if the &lt;code&gt;T&lt;/code&gt; is not. In fact, even &lt;code&gt;Pin&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;Pin&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; are always &lt;code&gt;Unpin&lt;/code&gt; themselves, for the same reason: their contents (the &lt;code&gt;T&lt;/code&gt;) are pinned, but the pointers themselves can be moved without moving the pinned data. For both &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;Pin&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;, whether the content is pinned is entirely independent of whether the pointer is pinned, meaning pinning is &lt;em&gt;not&lt;/em&gt; structural.</source>
          <target state="translated">在标准库中，指针类型通常不具有结构固定，因此它们不提供固定投影。这就是 &lt;code&gt;Box&amp;lt;T&amp;gt;: Unpin&lt;/code&gt; 固定所有 &lt;code&gt;T&lt;/code&gt; 的原因。这是有道理的为指针类型做到这一点，因为移动 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 实际上并不移动 &lt;code&gt;T&lt;/code&gt; ：该 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 可以自由移动（又名 &lt;code&gt;Unpin&lt;/code&gt; ），即使 &lt;code&gt;T&lt;/code&gt; 不是。实际上，即使 &lt;code&gt;Pin&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 和 &lt;code&gt;Pin&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; 总是总是自己 &lt;code&gt;Unpin&lt;/code&gt; 钉扎，原因相同：它们的内容（ &lt;code&gt;T&lt;/code&gt; ）被钉扎，但是指针本身可以移动而无需移动钉扎的数据。对彼此而言 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 和 &lt;code&gt;Pin&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; ，是否固定内容与指针是否固定完全无关，这意味着固定&lt;em&gt;不是&lt;/em&gt;结构化的。</target>
        </trans-unit>
        <trans-unit id="69a1bd27469eb2f59075cae2a36951b2f4c30b0e" translate="yes" xml:space="preserve">
          <source>In the test, we&amp;rsquo;re testing what happens when the &lt;code&gt;LimitTracker&lt;/code&gt; is told to set &lt;code&gt;value&lt;/code&gt; to something that is more than 75 percent of the &lt;code&gt;max&lt;/code&gt; value. First, we create a new &lt;code&gt;MockMessenger&lt;/code&gt;, which will start with an empty list of messages. Then we create a new &lt;code&gt;LimitTracker&lt;/code&gt; and give it a reference to the new &lt;code&gt;MockMessenger&lt;/code&gt; and a &lt;code&gt;max&lt;/code&gt; value of 100. We call the &lt;code&gt;set_value&lt;/code&gt; method on the &lt;code&gt;LimitTracker&lt;/code&gt; with a value of 80, which is more than 75 percent of 100. Then we assert that the list of messages that the &lt;code&gt;MockMessenger&lt;/code&gt; is keeping track of should now have one message in it.</source>
          <target state="translated">在测试中，我们正在测试 &lt;code&gt;LimitTracker&lt;/code&gt; 被告知将 &lt;code&gt;value&lt;/code&gt; 设置为 &lt;code&gt;max&lt;/code&gt; 75％以上时发生的情况。首先，我们创建一个新的 &lt;code&gt;MockMessenger&lt;/code&gt; ，它将以一个空消息列表开始。然后，我们创建一个新的 &lt;code&gt;LimitTracker&lt;/code&gt; 并为其提供对新 &lt;code&gt;MockMessenger&lt;/code&gt; 的引用，且 &lt;code&gt;max&lt;/code&gt; 为100。我们在 &lt;code&gt;LimitTracker&lt;/code&gt; 上调用 &lt;code&gt;set_value&lt;/code&gt; 方法，该方法的值为80，该值大于100的75％。 &lt;code&gt;MockMessenger&lt;/code&gt; 跟踪的消息列表现在应该包含一条消息。</target>
        </trans-unit>
        <trans-unit id="adba8ce512afb3223e0e44bbc4efd34311d66e90" translate="yes" xml:space="preserve">
          <source>In the third case, we tried to only expect one variant of the &lt;code&gt;Wizard&lt;/code&gt; enum, which is not possible. To make this work, we need to using pattern matching over the &lt;code&gt;Wizard&lt;/code&gt; enum:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe4d3d8b095874ffa846390a6fba933c59176e6" translate="yes" xml:space="preserve">
          <source>In the transcriber, metavariables are referred to simply by &lt;code&gt;$&lt;/code&gt;&lt;em&gt;name&lt;/em&gt;, since the fragment kind is specified in the matcher. Metavariables are replaced with the syntax element that matched them. The keyword metavariable &lt;code&gt;$crate&lt;/code&gt; can be used to refer to the current crate; see &lt;a href=&quot;#hygiene&quot;&gt;Hygiene&lt;/a&gt; below. Metavariables can be transcribed more than once or not at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474cfc53c29ed4a7f5438f6a16ce96a820777966" translate="yes" xml:space="preserve">
          <source>In the transcriber, metavariables are referred to simply by &lt;code&gt;$&lt;/code&gt;&lt;em&gt;name&lt;/em&gt;, since the fragment kind is specified in the matcher. Metavariables are replaced with the syntax element that matched them. The keyword metavariable &lt;code&gt;$crate&lt;/code&gt; can be used to refer to the current crate; see &lt;a href=&quot;macros-by-example#hygiene&quot;&gt;Hygiene&lt;/a&gt; below. Metavariables can be transcribed more than once or not at all.</source>
          <target state="translated">在转录器中，由于片段&lt;em&gt;名称&lt;/em&gt;是在匹配器中指定的，因此 &lt;code&gt;$&lt;/code&gt; 变量仅用$ &lt;em&gt;name&lt;/em&gt;来引用。将元变量替换为与它们匹配的语法元素。关键字metavariable &lt;code&gt;$crate&lt;/code&gt; 可用于引用当前的板条箱；参见下面的&lt;a href=&quot;macros-by-example#hygiene&quot;&gt;卫生&lt;/a&gt;。元变量可以被转录多次或完全不被转录。</target>
        </trans-unit>
        <trans-unit id="fc28b1beae2c194779de6e426a53754bfb37f82e" translate="yes" xml:space="preserve">
          <source>In the workout generator example, we only used closures as inline anonymous functions. However, closures have an additional capability that functions don&amp;rsquo;t have: they can capture their environment and access variables from the scope in which they&amp;rsquo;re defined.</source>
          <target state="translated">在锻炼生成器示例中，我们仅将闭包用作嵌入式匿名函数。但是，闭包具有函数所没有的其他功能：它们可以捕获其环境并从定义它们的作用域访问变量。</target>
        </trans-unit>
        <trans-unit id="402986500120f551bc8e41d90bdabaccacec9185" translate="yes" xml:space="preserve">
          <source>In the worst case, the algorithm allocates temporary storage in a &lt;code&gt;Vec&amp;lt;(K, usize)&amp;gt;&lt;/code&gt; the length of the slice.</source>
          <target state="translated">在最坏的情况下，该算法以切片长度 &lt;code&gt;Vec&amp;lt;(K, usize)&amp;gt;&lt;/code&gt; 分配临时存储。</target>
        </trans-unit>
        <trans-unit id="9bc14d5532165c49508408bd484b7e97e6ac2646" translate="yes" xml:space="preserve">
          <source>In this appendix, we provide a reference of all the traits in the standard library that you can use with &lt;code&gt;derive&lt;/code&gt;. Each section covers:</source>
          <target state="translated">在本附录中，我们提供了标准库中可与 &lt;code&gt;derive&lt;/code&gt; 一起使用的所有特征的参考。每个部分包括：</target>
        </trans-unit>
        <trans-unit id="0046a6cf07943993e17ce12f3c78298391a2264f" translate="yes" xml:space="preserve">
          <source>In this appendix, we talk about some useful development tools that the Rust project provides. We&amp;rsquo;ll look at automatic formatting, quick ways to apply warning fixes, a linter, and integrating with IDEs.</source>
          <target state="translated">在本附录中，我们讨论了Rust项目提供的一些有用的开发工具。我们将研究自动格式化，应用警告修复的快速方法，lint和与IDE集成。</target>
        </trans-unit>
        <trans-unit id="ac9b1080783742689a97db16c3344339516e90c0" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;Foo&lt;/code&gt; is undefined, so it inherently isn't anything, and definitely not a struct.</source>
          <target state="translated">在这种情况下， &lt;code&gt;Foo&lt;/code&gt; 是未定义的，因此它本质上不是任何东西，并且绝对不是结构。</target>
        </trans-unit>
        <trans-unit id="afe608724d7fcb6b165ca3da57f4af8c6e2f8834" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;Question&lt;/code&gt; would need to implement the &lt;code&gt;std::ops::Not&lt;/code&gt; trait in order to be able to use &lt;code&gt;!&lt;/code&gt; on it. Let's implement it:</source>
          <target state="translated">在这种情况下， &lt;code&gt;Question&lt;/code&gt; 将需要实现 &lt;code&gt;std::ops::Not&lt;/code&gt; trait才能使用 &lt;code&gt;!&lt;/code&gt; 在上面。让我们实现它：</target>
        </trans-unit>
        <trans-unit id="4b7473dc279144e44448cca5746abb04e0fa8694" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;c_double&lt;/code&gt; has the same size as &lt;code&gt;f64&lt;/code&gt; so we can use it directly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b4ba6190447ccb2a7d84efd7c0391f36cf1b3c" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;foo&lt;/code&gt; is defined, but is not a struct, so Rust can't use it as one.</source>
          <target state="translated">在这种情况下，定义了 &lt;code&gt;foo&lt;/code&gt; ，但它不是一个结构，因此Rust不能将其用作一个。</target>
        </trans-unit>
        <trans-unit id="e3897adfb1b49645b05c0b83e391e1fc19ac894e" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;len&lt;/code&gt; will be 4, which means the vector storing the string &amp;ldquo;Hola&amp;rdquo; is 4 bytes long. Each of these letters takes 1 byte when encoded in UTF-8. But what about the following line? (Note that this string begins with the capital Cyrillic letter Ze, not the Arabic number 3.)</source>
          <target state="translated">在这种情况下， &lt;code&gt;len&lt;/code&gt; 将为4，这意味着存储字符串&amp;ldquo; Hola&amp;rdquo;的向量为4个字节长。以UTF-8编码时，这些字母中的每个字母都占用1个字节。但是下一行呢？ （请注意，此字符串以大写的西里尔字母Ze开头，而不是阿拉伯数字3。）</target>
        </trans-unit>
        <trans-unit id="8561b972a9830d06a3e257ff13fef28acb8d1808" translate="yes" xml:space="preserve">
          <source>In this case, borrowing &lt;code&gt;x&lt;/code&gt; mutably is not possible, because &lt;code&gt;x&lt;/code&gt; is not &lt;code&gt;mut&lt;/code&gt;. But at the same time, borrowing &lt;code&gt;x&lt;/code&gt; immutably would make the assignment illegal, because a &lt;code&gt;&amp;amp; &amp;amp;mut&lt;/code&gt; reference may not be unique, so it cannot safely be used to modify a value. So a unique immutable borrow is used: it borrows &lt;code&gt;x&lt;/code&gt; immutably, but like a mutable borrow, it must be unique. In the above example, uncommenting the declaration of &lt;code&gt;y&lt;/code&gt; will produce an error because it would violate the uniqueness of the closure's borrow of &lt;code&gt;x&lt;/code&gt;; the declaration of z is valid because the closure's lifetime has expired at the end of the block, releasing the borrow.</source>
          <target state="translated">在这种情况下，因为 &lt;code&gt;x&lt;/code&gt; 不是 &lt;code&gt;mut&lt;/code&gt; ，所以无法可变地借用 &lt;code&gt;x&lt;/code&gt; 。但是同时，一成不变地借用 &lt;code&gt;x&lt;/code&gt; 会使赋值非法，因为 &lt;code&gt;&amp;amp; &amp;amp;mut&lt;/code&gt; 引用可能不是唯一的，因此不能安全地用于修改值。因此，使用了唯一的不可变借位：它不可变地借入 &lt;code&gt;x&lt;/code&gt; ，但像可变借位一样，它必须是唯一的。在上面的示例中，取消对 &lt;code&gt;y&lt;/code&gt; 声明的注释将产生错误，因为它将违反闭包的 &lt;code&gt;x&lt;/code&gt; 借位的唯一性； z的声明是有效的，因为闭包的生存期已在该块的末尾到期，从而释放了借位。</target>
        </trans-unit>
        <trans-unit id="bf5da830ba52c31b3f48f71542b74085fca253da" translate="yes" xml:space="preserve">
          <source>In this case, right after we create the reference cycle, the program ends. The consequences of this cycle aren&amp;rsquo;t very dire. However, if a more complex program allocated lots of memory in a cycle and held onto it for a long time, the program would use more memory than it needed and might overwhelm the system, causing it to run out of available memory.</source>
          <target state="translated">在这种情况下，在创建参考循环之后，程序立即结束。这个周期的后果不是很可怕。但是，如果一个更复杂的程序在一个周期内分配了很多内存并保留了很长时间，则该程序将使用比所需数量更多的内存，并且可能使系统不堪重负，从而导致可用内存不足。</target>
        </trans-unit>
        <trans-unit id="94ade146c6864efc0d837c6a05c5b82eb67849f1" translate="yes" xml:space="preserve">
          <source>In this case, the compiler cannot infer what the type of &lt;code&gt;x&lt;/code&gt; should be: &lt;code&gt;Vec&amp;lt;char&amp;gt;&lt;/code&gt; and &lt;code&gt;String&lt;/code&gt; are both suitable candidates. To specify which type to use, you can use a type annotation on &lt;code&gt;x&lt;/code&gt;:</source>
          <target state="translated">在这种情况下，编译器无法推断 &lt;code&gt;x&lt;/code&gt; 的类型： &lt;code&gt;Vec&amp;lt;char&amp;gt;&lt;/code&gt; 和 &lt;code&gt;String&lt;/code&gt; 都是合适的候选者。要指定使用哪种类型，可以在 &lt;code&gt;x&lt;/code&gt; 上使用类型注释：</target>
        </trans-unit>
        <trans-unit id="f275640cc613a55c1aac0d980097965aad345a42" translate="yes" xml:space="preserve">
          <source>In this case, the line indicated is part of our code, and if we go to that line, we see the &lt;code&gt;panic!&lt;/code&gt; macro call. In other cases, the &lt;code&gt;panic!&lt;/code&gt; call might be in code that our code calls, and the filename and line number reported by the error message will be someone else&amp;rsquo;s code where the &lt;code&gt;panic!&lt;/code&gt; macro is called, not the line of our code that eventually led to the &lt;code&gt;panic!&lt;/code&gt; call. We can use the backtrace of the functions the &lt;code&gt;panic!&lt;/code&gt; call came from to figure out the part of our code that is causing the problem. We&amp;rsquo;ll discuss what a backtrace is in more detail next.</source>
          <target state="translated">在这种情况下，指示的行是代码的一部分，如果转到该行，我们会感到 &lt;code&gt;panic!&lt;/code&gt; 宏调用。在其他情况下， &lt;code&gt;panic!&lt;/code&gt; 调用可能是在我们的代码调用的代码中，而错误消息报告的文件名和行号将是其他人的代码，因此 &lt;code&gt;panic!&lt;/code&gt; 宏被调用，而不是最终导致 &lt;code&gt;panic!&lt;/code&gt; 代码行！呼叫。我们可以使用函数的回溯来 &lt;code&gt;panic!&lt;/code&gt; 调用来自于找出导致问题的代码部分。接下来，我们将详细讨论回溯。</target>
        </trans-unit>
        <trans-unit id="a03c0650d25cf706ca4c711a0b4fa0c7cdd46367" translate="yes" xml:space="preserve">
          <source>In this case, you need to implement the &lt;code&gt;chocolate&lt;/code&gt; method to fix the error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dfdeb564b13d0de24ae4a70c8a6c9f64176934b" translate="yes" xml:space="preserve">
          <source>In this chapter and throughout the book, we&amp;rsquo;ll show some commands used in the terminal. Lines that you should enter in a terminal all start with &lt;code&gt;$&lt;/code&gt;. You don&amp;rsquo;t need to type in the &lt;code&gt;$&lt;/code&gt; character; it indicates the start of each command. Lines that don&amp;rsquo;t start with &lt;code&gt;$&lt;/code&gt; typically show the output of the previous command. Additionally, PowerShell-specific examples will use &lt;code&gt;&amp;gt;&lt;/code&gt; rather than &lt;code&gt;$&lt;/code&gt;.</source>
          <target state="translated">在本章以及整本书中，我们将展示一些在终端中使用的命令。您应在终端中输入的行均以 &lt;code&gt;$&lt;/code&gt; 开头。您无需输入 &lt;code&gt;$&lt;/code&gt; 字符；它指示每个命令的开始。不以 &lt;code&gt;$&lt;/code&gt; 开头的行通常显示前一个命令的输出。此外，特定于PowerShell的示例将使用 &lt;code&gt;&amp;gt;&lt;/code&gt; 而不是 &lt;code&gt;$&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0f1d6f9bd53aa4df418aa201b887fdd6df55aeab" translate="yes" xml:space="preserve">
          <source>In this chapter we&amp;rsquo;ll look at &lt;em&gt;enumerations&lt;/em&gt;, also referred to as &lt;em&gt;enums&lt;/em&gt;. Enums allow you to define a type by enumerating its possible &lt;em&gt;variants&lt;/em&gt;. First, we&amp;rsquo;ll define and use an enum to show how an enum can encode meaning along with data. Next, we&amp;rsquo;ll explore a particularly useful enum, called &lt;code&gt;Option&lt;/code&gt;, which expresses that a value can be either something or nothing. Then we&amp;rsquo;ll look at how pattern matching in the &lt;code&gt;match&lt;/code&gt; expression makes it easy to run different code for different values of an enum. Finally, we&amp;rsquo;ll cover how the &lt;code&gt;if let&lt;/code&gt; construct is another convenient and concise idiom available to you to handle enums in your code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511940d9b79e52eebc6c566f728bbaeb0dd1dd34" translate="yes" xml:space="preserve">
          <source>In this chapter we&amp;rsquo;ll look at &lt;em&gt;enumerations&lt;/em&gt;, also referred to as &lt;em&gt;enums&lt;/em&gt;. Enums allow you to define a type by enumerating its possible values. First, we&amp;rsquo;ll define and use an enum to show how an enum can encode meaning along with data. Next, we&amp;rsquo;ll explore a particularly useful enum, called &lt;code&gt;Option&lt;/code&gt;, which expresses that a value can be either something or nothing. Then we&amp;rsquo;ll look at how pattern matching in the &lt;code&gt;match&lt;/code&gt; expression makes it easy to run different code for different values of an enum. Finally, we&amp;rsquo;ll cover how the &lt;code&gt;if let&lt;/code&gt; construct is another convenient and concise idiom available to you to handle enums in your code.</source>
          <target state="translated">在这一章中，我们将研究&lt;em&gt;枚举&lt;/em&gt;，也称为&lt;em&gt;枚举&lt;/em&gt;。枚举允许您通过枚举可能的值来定义类型。首先，我们将定义并使用一个枚举来显示枚举如何将含义与数据一起编码。接下来，我们将探讨一个名为 &lt;code&gt;Option&lt;/code&gt; 的特别有用的枚举，该枚举表示一个值可以是某些东西或什么都可以。然后，我们将研究 &lt;code&gt;match&lt;/code&gt; 表达式中的模式匹配如何使为枚举的不同值运行不同的代码变得容易。最后，我们将介绍 &lt;code&gt;if let&lt;/code&gt; 构造如何为您提供另一个方便且简洁的惯用法来处理代码中的枚举。</target>
        </trans-unit>
        <trans-unit id="54bfe40f65e4baf089b3fdf58b27393a8784f4c8" translate="yes" xml:space="preserve">
          <source>In this chapter, we won&amp;rsquo;t debate the issue of what functional programming is or isn&amp;rsquo;t but will instead discuss some features of Rust that are similar to features in many languages often referred to as functional.</source>
          <target state="translated">在本章中，我们将不讨论什么是函数编程或什么不是函数编程的问题，而将讨论Rust的某些功能，这些功能与许多语言（通常称为函数）的功能相似。</target>
        </trans-unit>
        <trans-unit id="1a7486659e0b2248f370c5b62acbfa92d0246aa8" translate="yes" xml:space="preserve">
          <source>In this chapter, we&amp;rsquo;ll cover all these features, discuss how they interact, and explain how to use them to manage scope. By the end, you should have a solid understanding of the module system and be able to work with scopes like a pro!</source>
          <target state="translated">在本章中，我们将介绍所有这些功能，讨论它们如何交互，并解释如何使用它们来管理范围。最后，您应该对模块系统有深入的了解，并且能够像专业人士一样使用示波器！</target>
        </trans-unit>
        <trans-unit id="323ae7b14fd96e68551f003142bf4b84170544d5" translate="yes" xml:space="preserve">
          <source>In this chapter, we&amp;rsquo;ll cover:</source>
          <target state="translated">在本章中，我们将介绍：</target>
        </trans-unit>
        <trans-unit id="a4639a7fb71c7cc2724cbe31da70376d99c56baa" translate="yes" xml:space="preserve">
          <source>In this code, the first and last value are matched with &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt;. The &lt;code&gt;..&lt;/code&gt; will match and ignore everything in the middle.</source>
          <target state="translated">在此代码中，第一个和最后一个值与 &lt;code&gt;first&lt;/code&gt; 和 &lt;code&gt;last&lt;/code&gt; 匹配。该 &lt;code&gt;..&lt;/code&gt; 将匹配而忽略中间的一切。</target>
        </trans-unit>
        <trans-unit id="145a83e849a55e3baebf66ad497473ddcd7f5f55" translate="yes" xml:space="preserve">
          <source>In this code, the same thing happens as in the &lt;code&gt;match&lt;/code&gt; in Listing 19-26: Rust sees that &lt;code&gt;val&lt;/code&gt; has the type &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;panic!&lt;/code&gt; has the type &lt;code&gt;!&lt;/code&gt;, so the result of the overall &lt;code&gt;match&lt;/code&gt; expression is &lt;code&gt;T&lt;/code&gt;. This code works because &lt;code&gt;panic!&lt;/code&gt; doesn&amp;rsquo;t produce a value; it ends the program. In the &lt;code&gt;None&lt;/code&gt; case, we won&amp;rsquo;t be returning a value from &lt;code&gt;unwrap&lt;/code&gt;, so this code is valid.</source>
          <target state="translated">在这段代码中，发生了 &lt;code&gt;match&lt;/code&gt; 清单19-26 中的匹配相同的事情：Rust看到 &lt;code&gt;val&lt;/code&gt; 具有类型 &lt;code&gt;T&lt;/code&gt; 和 &lt;code&gt;panic!&lt;/code&gt; 有类型 &lt;code&gt;!&lt;/code&gt; ，所以整体的结果 &lt;code&gt;match&lt;/code&gt; 表达式是 &lt;code&gt;T&lt;/code&gt; 。该代码有效，因为出现了 &lt;code&gt;panic!&lt;/code&gt; 没有产生价值；它结束程序。在 &lt;code&gt;None&lt;/code&gt; 的情况下，我们不会从 &lt;code&gt;unwrap&lt;/code&gt; 返回值，因此此代码有效。</target>
        </trans-unit>
        <trans-unit id="844247dc89592da735fc5622f72eb35876e2a2a2" translate="yes" xml:space="preserve">
          <source>In this code, you have two ways to solve this issue:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5f63902ac52a2fdb77ae9b0aaf168362307239" translate="yes" xml:space="preserve">
          <source>In this context, by &lt;em&gt;runtime&lt;/em&gt; we mean code that is included by the language in every binary. This code can be large or small depending on the language, but every non-assembly language will have some amount of runtime code. For that reason, colloquially when people say a language has &amp;ldquo;no runtime,&amp;rdquo; they often mean &amp;ldquo;small runtime.&amp;rdquo; Smaller runtimes have fewer features but have the advantage of resulting in smaller binaries, which make it easier to combine the language with other languages in more contexts. Although many languages are okay with increasing the runtime size in exchange for more features, Rust needs to have nearly no runtime and cannot compromise on being able to call into C to maintain performance.</source>
          <target state="translated">在这种情况下，在&lt;em&gt;运行时中，&lt;/em&gt;我们指的是语言包含在每个二进制文件中的代码。取决于语言，此代码可以大可小，但是每种非汇编语言都将具有一定数量的运行时代码。因此，通常人们在说一种语言&amp;ldquo;没有运行时&amp;rdquo;时，通常是指&amp;ldquo;小型运行时&amp;rdquo;。较小的运行时具有较少的功能，但具有产生较小二进制文件的优势，这使得在更多上下文中更轻松地将语言与其他语言结合在一起。尽管许多语言可以通过增加运行时大小来换取更多功能，但是Rust几乎不需要运行时，并且不能折衷使用C来保持性能。</target>
        </trans-unit>
        <trans-unit id="3f10f5106c28699182d72488c5b199580b51f515" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;2&lt;/code&gt; is destroyed right after the assignment, which means that &lt;code&gt;ptr&lt;/code&gt; now points to an unavailable location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ee00cd14e3198e4bb4ed77351c13a68c4d2964" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;BoxCar&lt;/code&gt; has two super-traits: &lt;code&gt;Vehicle&lt;/code&gt; and &lt;code&gt;Box&lt;/code&gt;. Both of these traits define an associated type &lt;code&gt;Color&lt;/code&gt;. &lt;code&gt;BoxCar&lt;/code&gt; inherits two types with that name from both super-traits. Because of this, we need to use the fully qualified path syntax to refer to the appropriate &lt;code&gt;Color&lt;/code&gt; associated type, either &lt;code&gt;&amp;lt;BoxCar as Vehicle&amp;gt;::Color&lt;/code&gt; or &lt;code&gt;&amp;lt;BoxCar as Box&amp;gt;::Color&lt;/code&gt;, but this syntax is not allowed to be used in a function signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0ee0316ee57e8497270b5ce77464ecb56adca2" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;Cat&lt;/code&gt; is a &lt;em&gt;struct-like enum variant&lt;/em&gt;, whereas &lt;code&gt;Dog&lt;/code&gt; is simply called an enum variant. Each enum instance has a &lt;em&gt;discriminant&lt;/em&gt; which is an integer associated to it that is used to determine which variant it holds. An opaque reference to this discriminant can be obtained with the &lt;a href=&quot;../../std/mem/fn.discriminant&quot;&gt;&lt;code&gt;mem::discriminant&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">在此示例中， &lt;code&gt;Cat&lt;/code&gt; 是类似&lt;em&gt;struct的枚举变量&lt;/em&gt;，而 &lt;code&gt;Dog&lt;/code&gt; 简称为枚举变量。每个枚举实例都有一个&lt;em&gt;判别式&lt;/em&gt;，该&lt;em&gt;判别式&lt;/em&gt;是与之关联的整数，用于确定其拥有哪个变体。可以使用&lt;a href=&quot;../../std/mem/fn.discriminant&quot;&gt; &lt;code&gt;mem::discriminant&lt;/code&gt; &lt;/a&gt;函数获得对该判别式的不透明引用。</target>
        </trans-unit>
        <trans-unit id="7bb9799e70052b9e454a954f47a55d73983d300f" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;Foo&lt;/code&gt; defines an associated type &lt;code&gt;A&lt;/code&gt;. &lt;code&gt;Bar&lt;/code&gt; inherits that type from &lt;code&gt;Foo&lt;/code&gt;, and defines another associated type of the same name. As a result, when we attempt to use &lt;code&gt;Self::A&lt;/code&gt;, it's ambiguous whether we mean the &lt;code&gt;A&lt;/code&gt; defined by &lt;code&gt;Foo&lt;/code&gt; or the one defined by &lt;code&gt;Bar&lt;/code&gt;.</source>
          <target state="translated">在此实例中， &lt;code&gt;Foo&lt;/code&gt; 定义的关联类型 &lt;code&gt;A&lt;/code&gt; 。 &lt;code&gt;Bar&lt;/code&gt; 从 &lt;code&gt;Foo&lt;/code&gt; 继承该类型，并定义了另一个具有相同名称的关联类型。结果，当我们尝试使用 &lt;code&gt;Self::A&lt;/code&gt; ，是指由 &lt;code&gt;Foo&lt;/code&gt; 定义的 &lt;code&gt;A&lt;/code&gt; 还是由 &lt;code&gt;Bar&lt;/code&gt; 定义的A都是不明确的。</target>
        </trans-unit>
        <trans-unit id="8cedc14f701bbdf96ac8102b9f064b1dca2f26cb" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;Y&lt;/code&gt; cannot refer to &lt;code&gt;X&lt;/code&gt; here. To fix this, the value can be extracted as a const and then used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4ed47b5eac4878ae970fa360382b182707dcb9" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;string1&lt;/code&gt; is valid until the end of the outer scope, &lt;code&gt;string2&lt;/code&gt; is valid until the end of the inner scope, and &lt;code&gt;result&lt;/code&gt; references something that is valid until the end of the inner scope. Run this code, and you&amp;rsquo;ll see that the borrow checker approves of this code; it will compile and print &lt;code&gt;The longest string is long string is long&lt;/code&gt;.</source>
          <target state="translated">在此示例中， &lt;code&gt;string1&lt;/code&gt; 在外部作用域结束之前一直有效， &lt;code&gt;string2&lt;/code&gt; 在内部作用域结束之前一直有效，并且 &lt;code&gt;result&lt;/code&gt; 引用的有效范围直到内部作用域结束为止。运行此代码，您将看到借用检查器批准了该代码；它将编译并打印 &lt;code&gt;The longest string is long string is long&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a21a4f7cf44738665bcf722c117e87d97dd2b44" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;value&lt;/code&gt; is mutably borrowed by &lt;code&gt;borrow&lt;/code&gt; and cannot be used to calculate &lt;code&gt;sum&lt;/code&gt;. This is not possible because this would violate Rust's mutability rules.</source>
          <target state="translated">在这个例子中， &lt;code&gt;value&lt;/code&gt; 是由性情不定地借用 &lt;code&gt;borrow&lt;/code&gt; 并且不能被用于计算 &lt;code&gt;sum&lt;/code&gt; 。这是不可能的，因为这会违反Rust的可变性规则。</target>
        </trans-unit>
        <trans-unit id="ee5fd415a36736dbb42604438d3e115f3ef63293" translate="yes" xml:space="preserve">
          <source>In this example, if &lt;code&gt;x&lt;/code&gt; matches the pattern &lt;code&gt;(0, _)&lt;/code&gt;, the second field is set to &lt;code&gt;y&lt;/code&gt;. If it matches &lt;code&gt;(_, 0)&lt;/code&gt;, the first field is set to &lt;code&gt;y&lt;/code&gt;; so in all cases &lt;code&gt;y&lt;/code&gt; is set to some value.</source>
          <target state="translated">在此示例中，如果 &lt;code&gt;x&lt;/code&gt; 与模式 &lt;code&gt;(0, _)&lt;/code&gt; 匹配，则第二个字段设置为 &lt;code&gt;y&lt;/code&gt; 。如果匹配 &lt;code&gt;(_, 0)&lt;/code&gt; ，则第一个字段设置为 &lt;code&gt;y&lt;/code&gt; ；因此在所有情况下 &lt;code&gt;y&lt;/code&gt; 都设置为某个值。</target>
        </trans-unit>
        <trans-unit id="7fe9cc71a505a06c66b5d9f57153a2d3327a9165" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;'SnowWhite&lt;/code&gt; lifetime is supposed to outlive the &lt;code&gt;'kiss&lt;/code&gt; lifetime but the declaration of the &lt;code&gt;Prince&lt;/code&gt; struct doesn't enforce it. To fix this issue, you need to specify it:</source>
          <target state="translated">在此示例中， &lt;code&gt;'SnowWhite&lt;/code&gt; 生存期应该超过 &lt;code&gt;'kiss&lt;/code&gt; 生存期，但是 &lt;code&gt;Prince&lt;/code&gt; 结构的声明并未强制执行。要解决此问题，您需要指定它：</target>
        </trans-unit>
        <trans-unit id="5793bd2e6d3c5293d83c901c5867d17a61fb1b7b" translate="yes" xml:space="preserve">
          <source>In this example, the closure does not satisfy the &lt;code&gt;'static&lt;/code&gt; lifetime constraint. To fix this error, you need to double check the lifetime of the type. Here, we can fix this problem by giving &lt;code&gt;s&lt;/code&gt; a static lifetime:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61f98e2cee2baaabf8be1956ffb960bd279fb24" translate="yes" xml:space="preserve">
          <source>In this example, the module &lt;code&gt;quux&lt;/code&gt; re-exports two public names defined in &lt;code&gt;foo&lt;/code&gt;.</source>
          <target state="translated">在此示例中，模块 &lt;code&gt;quux&lt;/code&gt; 重新导出 &lt;code&gt;foo&lt;/code&gt; 中定义的两个公用名。</target>
        </trans-unit>
        <trans-unit id="4350bf464e116b6d57c761b20a820cb5925c37d3" translate="yes" xml:space="preserve">
          <source>In this example, the spawned thread is &quot;detached&quot; from the current thread. This means that it can outlive its parent (the thread that spawned it), unless this parent is the main thread.</source>
          <target state="translated">在这个例子中,被产卵的线程是 &quot;脱离 &quot;于当前线程的,这意味着它的寿命可以超过它的父线程(产卵的线程),除非这个父线程是主线程。这意味着它的寿命可以超过它的父线程(产生它的线程),除非这个父线程是主线程。</target>
        </trans-unit>
        <trans-unit id="adb1f627c4f5f533a368664ad1bfd6b52635fef6" translate="yes" xml:space="preserve">
          <source>In this example, the trait &lt;code&gt;Foo&lt;/code&gt; and the trait method &lt;code&gt;do_something_else&lt;/code&gt; both define a type parameter &lt;code&gt;T&lt;/code&gt;. This is not allowed: if the method wishes to define a type parameter, it must use a different name for it.</source>
          <target state="translated">在这个例子中，所述性状 &lt;code&gt;Foo&lt;/code&gt; 和性状方法 &lt;code&gt;do_something_else&lt;/code&gt; 的都定义了类型参数 &lt;code&gt;T&lt;/code&gt; 。这是不允许的：如果该方法希望定义类型参数，则必须为其使用不同的名称。</target>
        </trans-unit>
        <trans-unit id="5106de7dace445aa59aa82effd4989b6c9358ae0" translate="yes" xml:space="preserve">
          <source>In this example, the trait &lt;code&gt;Printable&lt;/code&gt; occurs as a trait object in both the type signature of &lt;code&gt;print&lt;/code&gt;, and the cast expression in &lt;code&gt;main&lt;/code&gt;.</source>
          <target state="translated">在此示例中，特征 &lt;code&gt;Printable&lt;/code&gt; 在 &lt;code&gt;print&lt;/code&gt; 的类型签名和 &lt;code&gt;main&lt;/code&gt; 中的强制类型转换表达式中均作为特征对象出现。</target>
        </trans-unit>
        <trans-unit id="2c7b2451157bfe66dfc5ae3bcc7df818cb052f87" translate="yes" xml:space="preserve">
          <source>In this example, the value &lt;code&gt;p&lt;/code&gt; matches the second arm by virtue of &lt;code&gt;x&lt;/code&gt; containing a 0, so this code will print &lt;code&gt;On the y axis at 7&lt;/code&gt;.</source>
          <target state="translated">在此示例中，值 &lt;code&gt;p&lt;/code&gt; 由于 &lt;code&gt;x&lt;/code&gt; 包含0 而与第二条臂匹配，因此此代码将 &lt;code&gt;On the y axis at 7&lt;/code&gt; 打印。</target>
        </trans-unit>
        <trans-unit id="76e376bb135f5c25de32c031f91a381023081f30" translate="yes" xml:space="preserve">
          <source>In this example, the variable named &lt;code&gt;first&lt;/code&gt; will get the value &lt;code&gt;1&lt;/code&gt;, because that is the value at index &lt;code&gt;[0]&lt;/code&gt; in the array. The variable named &lt;code&gt;second&lt;/code&gt; will get the value &lt;code&gt;2&lt;/code&gt; from index &lt;code&gt;[1]&lt;/code&gt; in the array.</source>
          <target state="translated">在此示例中，名为 &lt;code&gt;first&lt;/code&gt; 的变量将获得值 &lt;code&gt;1&lt;/code&gt; ，因为它是数组中索引 &lt;code&gt;[0]&lt;/code&gt; 处的值。名为 &lt;code&gt;second&lt;/code&gt; 的变量将从数组中的索引 &lt;code&gt;[1]&lt;/code&gt; 获取值 &lt;code&gt;2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db1c89f552fe6cd5046ff6bd0d230e80deb004f6" translate="yes" xml:space="preserve">
          <source>In this example, we are asserting that the destructor for &lt;code&gt;Foo&lt;/code&gt; will not access any data of type &lt;code&gt;X&lt;/code&gt;, and require this assertion to be true for overall safety in our program. The compiler does not currently attempt to verify this assertion; therefore we must tag this &lt;code&gt;impl&lt;/code&gt; as unsafe.</source>
          <target state="translated">在此示例中，我们断言 &lt;code&gt;Foo&lt;/code&gt; 的析构函数将不会访问 &lt;code&gt;X&lt;/code&gt; 类型的任何数据，并且要求此断言对我们程序的整体安全性为true。编译器当前不尝试验证此断言。因此，我们必须将此 &lt;code&gt;impl&lt;/code&gt; 标签标记为不安全。</target>
        </trans-unit>
        <trans-unit id="5b639017ef60ffaf0981282e4da6c27fcdd578e1" translate="yes" xml:space="preserve">
          <source>In this example, we define a function &lt;code&gt;ten_times&lt;/code&gt; that takes a higher-order function argument, and we then call it with a closure expression as an argument, followed by a closure expression that moves values from its environment.</source>
          <target state="translated">在此示例中，我们定义一个函数 &lt;code&gt;ten_times&lt;/code&gt; ，该函数接受一个高阶函数参数，然后以闭包表达式作为参数来调用它，然后是一个从环境中移出值的闭包表达式。</target>
        </trans-unit>
        <trans-unit id="9be8015724a60f5a7de7fc8be3cf3fbc9130aa82" translate="yes" xml:space="preserve">
          <source>In this example, we tried to set a value with an incompatible lifetime to another one (&lt;code&gt;'long&lt;/code&gt; is unrelated to &lt;code&gt;'short&lt;/code&gt;). We can solve this issue in two different ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8385385b7c5acae88f390fa2486165f8a8931f92" translate="yes" xml:space="preserve">
          <source>In this example, we tried to use the non-existent associated type &lt;code&gt;You&lt;/code&gt; of the &lt;code&gt;Hello&lt;/code&gt; trait. To fix this error, use an existing associated type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bbce52117883bf5718cfbbb01cfe64f9309a2ae" translate="yes" xml:space="preserve">
          <source>In this example, we&amp;rsquo;ve specified a lifetime parameter &lt;code&gt;'a&lt;/code&gt; for the parameter &lt;code&gt;x&lt;/code&gt; and the return type, but not for the parameter &lt;code&gt;y&lt;/code&gt;, because the lifetime of &lt;code&gt;y&lt;/code&gt; does not have any relationship with the lifetime of &lt;code&gt;x&lt;/code&gt; or the return value.</source>
          <target state="translated">在此示例中，我们为参数 &lt;code&gt;x&lt;/code&gt; 和返回类型指定了寿命参数 &lt;code&gt;'a&lt;/code&gt; ，但没有为参数 &lt;code&gt;y&lt;/code&gt; 指定寿命参数，因为 &lt;code&gt;y&lt;/code&gt; 的寿命与 &lt;code&gt;x&lt;/code&gt; 的寿命或返回值没有任何关系。</target>
        </trans-unit>
        <trans-unit id="2185efdb59ae63a632adf24d45f191ffee2411df" translate="yes" xml:space="preserve">
          <source>In this example, when we assign the integer value 5 to &lt;code&gt;x&lt;/code&gt;, we let the compiler know that the generic type &lt;code&gt;T&lt;/code&gt; will be an integer for this instance of &lt;code&gt;Point&amp;lt;T&amp;gt;&lt;/code&gt;. Then when we specify 4.0 for &lt;code&gt;y&lt;/code&gt;, which we&amp;rsquo;ve defined to have the same type as &lt;code&gt;x&lt;/code&gt;, we&amp;rsquo;ll get a type mismatch error like this:</source>
          <target state="translated">在此示例中，当我们将整数值5分配给 &lt;code&gt;x&lt;/code&gt; 时，我们让编译器知道，对于 &lt;code&gt;Point&amp;lt;T&amp;gt;&lt;/code&gt; 此实例，泛型 &lt;code&gt;T&lt;/code&gt; 将为整数。然后，当我们为 &lt;code&gt;y&lt;/code&gt; 指定4.0时，我们将其定义为与 &lt;code&gt;x&lt;/code&gt; 具有相同的类型，我们将得到如下类型不匹配错误：</target>
        </trans-unit>
        <trans-unit id="af5f4c7efbea71694085e036fb3fca287f7c1342" translate="yes" xml:space="preserve">
          <source>In this example, you can see that &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; enables mutation inside an immutable struct. In other words, it enables &quot;interior mutability&quot;.</source>
          <target state="translated">在此示例中，您可以看到 &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; 启用了不可变结构内的突变。换句话说，它实现了&amp;ldquo;内部可变性&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="28ad91d98b4c69b8725ca2927cbfaca53b3c5e8d" translate="yes" xml:space="preserve">
          <source>In this implementation, the &lt;code&gt;to_string&lt;/code&gt; method panics if the &lt;code&gt;Display&lt;/code&gt; implementation returns an error. This indicates an incorrect &lt;code&gt;Display&lt;/code&gt; implementation since &lt;code&gt;fmt::Write for String&lt;/code&gt; never returns an error itself.</source>
          <target state="translated">在此实现中，如果 &lt;code&gt;Display&lt;/code&gt; 实现返回错误，则 &lt;code&gt;to_string&lt;/code&gt; 方法会感到恐慌。这表明 &lt;code&gt;Display&lt;/code&gt; 实现不正确，因为 &lt;code&gt;fmt::Write for String&lt;/code&gt; 永远不会返回错误。</target>
        </trans-unit>
        <trans-unit id="7cf45f5e676953372bb64ede268b0f879c84bec0" translate="yes" xml:space="preserve">
          <source>In this listing, we&amp;rsquo;ve used a method we haven&amp;rsquo;t covered before: &lt;code&gt;unwrap_or_else&lt;/code&gt;, which is defined on &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; by the standard library. Using &lt;code&gt;unwrap_or_else&lt;/code&gt; allows us to define some custom, non-&lt;code&gt;panic!&lt;/code&gt; error handling. If the &lt;code&gt;Result&lt;/code&gt; is an &lt;code&gt;Ok&lt;/code&gt; value, this method&amp;rsquo;s behavior is similar to &lt;code&gt;unwrap&lt;/code&gt;: it returns the inner value &lt;code&gt;Ok&lt;/code&gt; is wrapping. However, if the value is an &lt;code&gt;Err&lt;/code&gt; value, this method calls the code in the &lt;em&gt;closure&lt;/em&gt;, which is an anonymous function we define and pass as an argument to &lt;code&gt;unwrap_or_else&lt;/code&gt;. We&amp;rsquo;ll cover closures in more detail in &lt;a href=&quot;ch13-00-functional-features&quot;&gt;Chapter 13&lt;/a&gt;. For now, you just need to know that &lt;code&gt;unwrap_or_else&lt;/code&gt; will pass the inner value of the &lt;code&gt;Err&lt;/code&gt;, which in this case is the static string &lt;code&gt;not enough arguments&lt;/code&gt; that we added in Listing 12-9, to our closure in the argument &lt;code&gt;err&lt;/code&gt; that appears between the vertical pipes. The code in the closure can then use the &lt;code&gt;err&lt;/code&gt; value when it runs.</source>
          <target state="translated">在此清单中，我们使用了之前未涉及的方法： &lt;code&gt;unwrap_or_else&lt;/code&gt; ，它是由标准库在 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 上定义的。使用 &lt;code&gt;unwrap_or_else&lt;/code&gt; 可让我们定义一些自定义的，非 &lt;code&gt;panic!&lt;/code&gt; 错误处理。如果 &lt;code&gt;Result&lt;/code&gt; 是 &lt;code&gt;Ok&lt;/code&gt; 值，则此方法的行为类似于 &lt;code&gt;unwrap&lt;/code&gt; ：它返回 &lt;code&gt;Ok&lt;/code&gt; 正在包装的内部值。但是，如果值是 &lt;code&gt;Err&lt;/code&gt; 值，则此方法将调用&lt;em&gt;闭包中&lt;/em&gt;的代码，这是我们定义的匿名函数，并将其作为参数传递给 &lt;code&gt;unwrap_or_else&lt;/code&gt; 。我们将在下面详细介绍闭包&lt;a href=&quot;ch13-00-functional-features&quot;&gt;第13章&lt;/a&gt;。现在，您只需要知道 &lt;code&gt;unwrap_or_else&lt;/code&gt; 将传递 &lt;code&gt;Err&lt;/code&gt; 的内部值（在本例中是静态字符串， &lt;code&gt;not enough arguments&lt;/code&gt; 清单12-9中没有添加足够的参数）将其传递给在 &lt;code&gt;err&lt;/code&gt; 之间出现的参数err中的闭包。垂直管道。然后，闭包中的代码在运行时可以使用 &lt;code&gt;err&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="bd1efd0f88f5695bb09cde72e8a0904d7ad1c207" translate="yes" xml:space="preserve">
          <source>In this more complex example, we use &lt;a href=&quot;../macro.format_args&quot;&gt;&lt;code&gt;format_args!&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;.debug_set()&lt;/code&gt; to build a list of match arms:</source>
          <target state="translated">在这个更复杂的示例中，我们使用&lt;a href=&quot;../macro.format_args&quot;&gt; &lt;code&gt;format_args!&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;.debug_set()&lt;/code&gt; 构建匹配臂列表：</target>
        </trans-unit>
        <trans-unit id="b03c6712fd2fec1eec14a91751691024a72c4d16" translate="yes" xml:space="preserve">
          <source>In this next example, &lt;code&gt;init_after_if&lt;/code&gt; is initialized after the &lt;a href=&quot;expressions/if-expr#if-expressions&quot;&gt;&lt;code&gt;if&lt;/code&gt; expression&lt;/a&gt; while &lt;code&gt;uninit_after_if&lt;/code&gt; is not because it is not initialized in the &lt;code&gt;else&lt;/code&gt; case.</source>
          <target state="translated">在下一个示例中， &lt;code&gt;init_after_if&lt;/code&gt; 在&lt;a href=&quot;expressions/if-expr#if-expressions&quot;&gt; &lt;code&gt;if&lt;/code&gt; 表达式&lt;/a&gt;之后初始化，而 &lt;code&gt;uninit_after_if&lt;/code&gt; 则不是，因为在 &lt;code&gt;else&lt;/code&gt; 情况下未初始化。</target>
        </trans-unit>
        <trans-unit id="8c69b4c18cf4fe1c7e28ef21ab7b9243778f0c95" translate="yes" xml:space="preserve">
          <source>In this process, the compiler does the opposite of the steps we used to create the generic function in Listing 10-5: the compiler looks at all the places where generic code is called and generates code for the concrete types the generic code is called with.</source>
          <target state="translated">在这个过程中,编译器所做的与我们在清单10-5中用来创建泛型函数的步骤相反:编译器查看所有调用泛型代码的地方,并为泛型代码被调用的具体类型生成代码。</target>
        </trans-unit>
        <trans-unit id="9b2eecf1196adab0e0b7bc0dd52bfa9ea4118939" translate="yes" xml:space="preserve">
          <source>In this section, we&amp;rsquo;ll add the searching logic to the &lt;code&gt;minigrep&lt;/code&gt; program by using the Test-driven development (TDD) process. This software development technique follows these steps:</source>
          <target state="translated">在本节中，我们将使用测试驱动的开发（TDD）流程将搜索逻辑添加到 &lt;code&gt;minigrep&lt;/code&gt; 程序中。此软件开发技术遵循以下步骤：</target>
        </trans-unit>
        <trans-unit id="35594ca80fb0c4ca7018f39776903a474d1cfb0f" translate="yes" xml:space="preserve">
          <source>In this section, we&amp;rsquo;ll talk about modules and other parts of the module system, namely &lt;em&gt;paths&lt;/em&gt; that allow you to name items; the &lt;code&gt;use&lt;/code&gt; keyword that brings a path into scope; and the &lt;code&gt;pub&lt;/code&gt; keyword to make items public. We&amp;rsquo;ll also discuss the &lt;code&gt;as&lt;/code&gt; keyword, external packages, and the glob operator. For now, let&amp;rsquo;s focus on modules!</source>
          <target state="translated">在本节中，我们将讨论模块和模块系统的其他部分，即允许您命名项目的&lt;em&gt;路径&lt;/em&gt;。在 &lt;code&gt;use&lt;/code&gt; 关键字带来的路径进入范围; 和 &lt;code&gt;pub&lt;/code&gt; 关键字来公开商品。我们还将讨论 &lt;code&gt;as&lt;/code&gt; 关键字，外部包和glob运算符。现在，让我们专注于模块！</target>
        </trans-unit>
        <trans-unit id="b9ddbf2b08f89e10bfeee4884b118c18fb0ff1c3" translate="yes" xml:space="preserve">
          <source>In this situation, even the &lt;code&gt;ref&lt;/code&gt; keyword cannot solve it, since borrowed content cannot be moved. This problem cannot be solved generally. If the value can be cloned, here is a not-so-specific solution:</source>
          <target state="translated">在这种情况下，即使 &lt;code&gt;ref&lt;/code&gt; 关键字也无法解决它，因为借用的内容无法移动。这个问题一般无法解决。如果可以克隆该值，则这是一个不太明确的解决方案：</target>
        </trans-unit>
        <trans-unit id="66f6d7f6d5b6dce217f5225ca67e0e2ff88fca0a" translate="yes" xml:space="preserve">
          <source>In this specific case there's a good chance that the transmute is harmless (but this is not guaranteed by Rust). However, when alignment and enum optimizations come into the picture, it's quite likely that the sizes may or may not match with different type parameter substitutions. It's not possible to check this for &lt;em&gt;all&lt;/em&gt; possible types, so &lt;code&gt;transmute()&lt;/code&gt; simply only accepts types without any unsubstituted type parameters.</source>
          <target state="translated">在这种情况下，转换很有可能是无害的（但是Rust不能保证）。但是，当对齐和枚举优化出现在图中时，大小很可能与不同的类型参数替换匹配或不匹配。不可能检查&lt;em&gt;所有&lt;/em&gt;可能的类型，因此 &lt;code&gt;transmute()&lt;/code&gt; 仅接受没有任何未替换类型参数的类型。</target>
        </trans-unit>
        <trans-unit id="fe9b2052803d3d7b3dd78aa5085c8137d21478b8" translate="yes" xml:space="preserve">
          <source>In this suggestion, &amp;ldquo;indirection&amp;rdquo; means that instead of storing a value directly, we&amp;rsquo;ll change the data structure to store the value indirectly by storing a pointer to the value instead.</source>
          <target state="translated">在此建议中，&amp;ldquo;间接&amp;rdquo;表示不直接存储值，而是通过存储指向值的指针来更改数据结构以间接存储值。</target>
        </trans-unit>
        <trans-unit id="ace1483441c50f77553551974f43198070533a0e" translate="yes" xml:space="preserve">
          <source>In this way, the structure of expressions dictates the structure of execution. Blocks are just another kind of expression, so blocks, statements, expressions, and blocks again can recursively nest inside each other to an arbitrary depth.</source>
          <target state="translated">这样一来,表达式的结构就决定了执行的结构。块只是另一种表达式,所以块、语句、表达式、块又可以相互递归嵌套在内部,达到任意深度。</target>
        </trans-unit>
        <trans-unit id="3c64ce605c02c94d28e3d47caa98671818a3b2ae" translate="yes" xml:space="preserve">
          <source>In those cases, you need to provide the type explicitly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f60575dd030bfd74d0c69219e41591057c41df3" translate="yes" xml:space="preserve">
          <source>In trait declarations as &lt;a href=&quot;items/traits#supertraits&quot;&gt;supertraits&lt;/a&gt;: &lt;code&gt;trait Circle : Shape {}&lt;/code&gt; is equivalent to &lt;code&gt;trait Circle where Self : Shape {}&lt;/code&gt;.</source>
          <target state="translated">在特质声明中作为&lt;a href=&quot;items/traits#supertraits&quot;&gt;超&lt;/a&gt; &lt;code&gt;trait Circle : Shape {}&lt;/code&gt; ：特质Circle：Shape {}等同于 &lt;code&gt;trait Circle where Self : Shape {}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4f93075a116db72d1570a79e9e24585b192c4ef" translate="yes" xml:space="preserve">
          <source>In trait declarations as bounds on &lt;a href=&quot;items/associated-items#associated-types&quot;&gt;associated types&lt;/a&gt;: &lt;code&gt;trait A { type B: Copy; }&lt;/code&gt; is equivalent to &lt;code&gt;trait A where Self::B: Copy { type B; }&lt;/code&gt;.</source>
          <target state="translated">在特质声明中，以&lt;a href=&quot;items/associated-items#associated-types&quot;&gt;关联类型&lt;/a&gt;为界： &lt;code&gt;trait A { type B: Copy; }&lt;/code&gt; 等同于 &lt;code&gt;trait A where Self::B: Copy { type B; }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d593169be70ffe063ab15f461603b04fb19d3943" translate="yes" xml:space="preserve">
          <source>In traits, &lt;code&gt;type&lt;/code&gt; is used to declare an &lt;a href=&quot;../reference/items/associated-items#associated-types&quot;&gt;associated type&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d52c1f8837d60baebd5fe1bd8acd4770d12408" translate="yes" xml:space="preserve">
          <source>In types, the &lt;code&gt;+&lt;/code&gt; type operator has low precedence, so it is often necessary to use parentheses.</source>
          <target state="translated">在类型中， &lt;code&gt;+&lt;/code&gt; 类型运算符的优先级较低，因此通常需要使用括号。</target>
        </trans-unit>
        <trans-unit id="f9490ac1bbc7d37c9f2c0e3e394c8775ef19ff65" translate="yes" xml:space="preserve">
          <source>In types, the &lt;code&gt;+&lt;/code&gt; type operator has low precedence, so it is often necessary to use parentheses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd1daf40491a926084464e0388144e6ba829d637" translate="yes" xml:space="preserve">
          <source>In various places in the book, we&amp;rsquo;ve discussed the &lt;code&gt;derive&lt;/code&gt; attribute, which you can apply to a struct or enum definition. The &lt;code&gt;derive&lt;/code&gt; attribute generates code that will implement a trait with its own default implementation on the type you&amp;rsquo;ve annotated with the &lt;code&gt;derive&lt;/code&gt; syntax.</source>
          <target state="translated">在本书的不同地方，我们讨论了 &lt;code&gt;derive&lt;/code&gt; 属性，您可以将其应用于结构或枚举定义。该 &lt;code&gt;derive&lt;/code&gt; 属性生成的代码将实现与您所使用的注解类型自身的默认实现一个特点 &lt;code&gt;derive&lt;/code&gt; 语法。</target>
        </trans-unit>
        <trans-unit id="0cebe38e502b4e0d3a49a067f9739636c8c7567e" translate="yes" xml:space="preserve">
          <source>In very rare edge cases, this may happen when loading &lt;code&gt;core&lt;/code&gt; or &lt;code&gt;std&lt;/code&gt; twice, once with &lt;code&gt;check&lt;/code&gt; metadata and once with &lt;code&gt;build&lt;/code&gt; metadata. For more information, see &lt;a href=&quot;https://github.com/rust-lang/rust/pull/75176#issuecomment-683234468&quot;&gt;#75176&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fcacf884bdd57e38c179c26c2a445daf0a3b88d" translate="yes" xml:space="preserve">
          <source>In-band lifetimes cannot be mixed with explicit lifetime binders. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c1253e722ca01693911433634c27b9199fbe1b5" translate="yes" xml:space="preserve">
          <source>In-band lifetimes cannot be used in &lt;code&gt;fn&lt;/code&gt;/&lt;code&gt;Fn&lt;/code&gt; syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0307fb1316fe032b75c2eab1c02683137e89f74" translate="yes" xml:space="preserve">
          <source>In-band lifetimes were mixed with explicit lifetime binders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71195f6d729d094826e987475aa2b83d4c3354c6" translate="yes" xml:space="preserve">
          <source>InPlaceIterable</source>
          <target state="translated">InPlaceIterable</target>
        </trans-unit>
        <trans-unit id="0d84c9de7449d934ab38cca665ee24ab8d418e04" translate="yes" xml:space="preserve">
          <source>Includes a UTF-8 encoded file as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e257e75b3e4fa6d9e9989f973afa801a9a03f0" translate="yes" xml:space="preserve">
          <source>Includes a file as a reference to a byte array.</source>
          <target state="translated">包含一个文件作为对字节数组的引用。</target>
        </trans-unit>
        <trans-unit id="9c140715e3185328a980b4bc60a18b0febc51520" translate="yes" xml:space="preserve">
          <source>Includes a utf8-encoded file as a string.</source>
          <target state="translated">包含一个utf8编码的文件作为一个字符串。</target>
        </trans-unit>
        <trans-unit id="0c11e0c644b5890be96bab7620a548663254f1f7" translate="yes" xml:space="preserve">
          <source>Includes all extension traits, and some important type definitions.</source>
          <target state="translated">包括所有扩展特征,以及一些重要的类型定义。</target>
        </trans-unit>
        <trans-unit id="a9c615b9e833ee226ac08cb33f93df17a615ca30" translate="yes" xml:space="preserve">
          <source>Incoming</source>
          <target state="translated">Incoming</target>
        </trans-unit>
        <trans-unit id="805a014cffe854e2c811b260ab089d2eda0bbeb7" translate="yes" xml:space="preserve">
          <source>Incoming::all</source>
          <target state="translated">Incoming::all</target>
        </trans-unit>
        <trans-unit id="83bd443d175b9e89de0c8b8872961ea2816dcfb6" translate="yes" xml:space="preserve">
          <source>Incoming::any</source>
          <target state="translated">Incoming::any</target>
        </trans-unit>
        <trans-unit id="f9822b9a823019e577bdfe3ac98493f3aa60473c" translate="yes" xml:space="preserve">
          <source>Incoming::borrow</source>
          <target state="translated">Incoming::borrow</target>
        </trans-unit>
        <trans-unit id="db57c16634c0af16618401e02b9b1b14cfb90675" translate="yes" xml:space="preserve">
          <source>Incoming::borrow_mut</source>
          <target state="translated">Incoming::borrow_mut</target>
        </trans-unit>
        <trans-unit id="909a090d9b0ea3ec427658ae73388b50d4bfbc1f" translate="yes" xml:space="preserve">
          <source>Incoming::by_ref</source>
          <target state="translated">Incoming::by_ref</target>
        </trans-unit>
        <trans-unit id="6d7e9108e413d8a837bb790d96b999eaae29b3f2" translate="yes" xml:space="preserve">
          <source>Incoming::chain</source>
          <target state="translated">Incoming::chain</target>
        </trans-unit>
        <trans-unit id="30254dbd6651bc8d2ce9a6489cb59513c462d366" translate="yes" xml:space="preserve">
          <source>Incoming::cloned</source>
          <target state="translated">Incoming::cloned</target>
        </trans-unit>
        <trans-unit id="8a2bf20be5038460f2e5f09718d4cb6a21fb4c03" translate="yes" xml:space="preserve">
          <source>Incoming::cmp</source>
          <target state="translated">Incoming::cmp</target>
        </trans-unit>
        <trans-unit id="5ed0bcc65453a7978586b3e2016dacfbc14352fe" translate="yes" xml:space="preserve">
          <source>Incoming::collect</source>
          <target state="translated">Incoming::collect</target>
        </trans-unit>
        <trans-unit id="e70d0d30256802ac0658826bed8a56d75ffa6c45" translate="yes" xml:space="preserve">
          <source>Incoming::copied</source>
          <target state="translated">Incoming::copied</target>
        </trans-unit>
        <trans-unit id="a1ce4c03ba198d6862609c9bca7b4fdfd0e790c1" translate="yes" xml:space="preserve">
          <source>Incoming::count</source>
          <target state="translated">Incoming::count</target>
        </trans-unit>
        <trans-unit id="445c24f8aeffb804abbe66eac8d728adfa6384c3" translate="yes" xml:space="preserve">
          <source>Incoming::cycle</source>
          <target state="translated">Incoming::cycle</target>
        </trans-unit>
        <trans-unit id="c7373d860bdcd6bd00f58afd7287948921f2cf3d" translate="yes" xml:space="preserve">
          <source>Incoming::enumerate</source>
          <target state="translated">Incoming::enumerate</target>
        </trans-unit>
        <trans-unit id="422e90f2e0427cea81726aa22dde243c959e3442" translate="yes" xml:space="preserve">
          <source>Incoming::eq</source>
          <target state="translated">Incoming::eq</target>
        </trans-unit>
        <trans-unit id="d82ad0962be1b645dba4415057b56c8c71d2db6c" translate="yes" xml:space="preserve">
          <source>Incoming::filter</source>
          <target state="translated">Incoming::filter</target>
        </trans-unit>
        <trans-unit id="f2d060b73d6c431a592011fdcaf80f72c4327ea7" translate="yes" xml:space="preserve">
          <source>Incoming::filter_map</source>
          <target state="translated">Incoming::filter_map</target>
        </trans-unit>
        <trans-unit id="ec24aef48051e0d66dfbf513fbece0b535e8173a" translate="yes" xml:space="preserve">
          <source>Incoming::find</source>
          <target state="translated">Incoming::find</target>
        </trans-unit>
        <trans-unit id="9f1745b317ce967f0969bdd91f79615c9788ba14" translate="yes" xml:space="preserve">
          <source>Incoming::find_map</source>
          <target state="translated">Incoming::find_map</target>
        </trans-unit>
        <trans-unit id="57ed09c2ac8fbae367da14cf88b9a1cf3a0b0f16" translate="yes" xml:space="preserve">
          <source>Incoming::flat_map</source>
          <target state="translated">Incoming::flat_map</target>
        </trans-unit>
        <trans-unit id="aa8cfa9877df81bdf6f3e26ae8c327e4f18e7ca7" translate="yes" xml:space="preserve">
          <source>Incoming::flatten</source>
          <target state="translated">Incoming::flatten</target>
        </trans-unit>
        <trans-unit id="f534c99639d2a7b60622d67e3da268c1b2dbd8a2" translate="yes" xml:space="preserve">
          <source>Incoming::fmt</source>
          <target state="translated">Incoming::fmt</target>
        </trans-unit>
        <trans-unit id="7bf954d9f452b8f0bff229d58d17ebe667b8bdaa" translate="yes" xml:space="preserve">
          <source>Incoming::fold</source>
          <target state="translated">Incoming::fold</target>
        </trans-unit>
        <trans-unit id="f45d04534657562b3b8e1ac8b93f0995c4f52ffc" translate="yes" xml:space="preserve">
          <source>Incoming::for_each</source>
          <target state="translated">Incoming::for_each</target>
        </trans-unit>
        <trans-unit id="146d704978de3d221c4a8b538e653f767ff7d0cc" translate="yes" xml:space="preserve">
          <source>Incoming::from</source>
          <target state="translated">Incoming::from</target>
        </trans-unit>
        <trans-unit id="8d00e730beb7664120c689b2165fe55c7e43696b" translate="yes" xml:space="preserve">
          <source>Incoming::fuse</source>
          <target state="translated">Incoming::fuse</target>
        </trans-unit>
        <trans-unit id="d6f3fa46377ae997728223371f8e2928bbcd46ee" translate="yes" xml:space="preserve">
          <source>Incoming::ge</source>
          <target state="translated">Incoming::ge</target>
        </trans-unit>
        <trans-unit id="ed38c0b5ef84ea5163b2da693e4b72183ddee0ec" translate="yes" xml:space="preserve">
          <source>Incoming::gt</source>
          <target state="translated">Incoming::gt</target>
        </trans-unit>
        <trans-unit id="b1345261a277f185321d6adb9b350bcb58cd599e" translate="yes" xml:space="preserve">
          <source>Incoming::inspect</source>
          <target state="translated">Incoming::inspect</target>
        </trans-unit>
        <trans-unit id="59abb681c116c064869e4b015c6b1cd16fb45598" translate="yes" xml:space="preserve">
          <source>Incoming::into</source>
          <target state="translated">Incoming::into</target>
        </trans-unit>
        <trans-unit id="95a20422d3926772d9c359f121355edbd8f745f9" translate="yes" xml:space="preserve">
          <source>Incoming::into_iter</source>
          <target state="translated">Incoming::into_iter</target>
        </trans-unit>
        <trans-unit id="77b7ce153ce8067d29a7d019ff3fcc043c2fdd8e" translate="yes" xml:space="preserve">
          <source>Incoming::is_sorted</source>
          <target state="translated">Incoming::is_sorted</target>
        </trans-unit>
        <trans-unit id="4dfdf545d2798411e8ee50244269b54395d86c9a" translate="yes" xml:space="preserve">
          <source>Incoming::is_sorted_by</source>
          <target state="translated">Incoming::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="d90a5dfb897aff5c068a0a4a12a54de5b9bdf1da" translate="yes" xml:space="preserve">
          <source>Incoming::is_sorted_by_key</source>
          <target state="translated">Incoming::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="f1c770fca353b885ee610fe1f519139cdebcc0ee" translate="yes" xml:space="preserve">
          <source>Incoming::last</source>
          <target state="translated">Incoming::last</target>
        </trans-unit>
        <trans-unit id="f5c79843bca5e97321f55d85100e1ac93d537dd7" translate="yes" xml:space="preserve">
          <source>Incoming::le</source>
          <target state="translated">Incoming::le</target>
        </trans-unit>
        <trans-unit id="41753aa4086d7645034ac6f543870deca487abbb" translate="yes" xml:space="preserve">
          <source>Incoming::lt</source>
          <target state="translated">Incoming::lt</target>
        </trans-unit>
        <trans-unit id="42262cd6a3c45e0c4ccd2f403ab3dde4f31c999d" translate="yes" xml:space="preserve">
          <source>Incoming::map</source>
          <target state="translated">Incoming::map</target>
        </trans-unit>
        <trans-unit id="b14fbc258acb1391be68964dacf06c868d0223ee" translate="yes" xml:space="preserve">
          <source>Incoming::max</source>
          <target state="translated">Incoming::max</target>
        </trans-unit>
        <trans-unit id="e598cfd5a561805bab3a055536a7ce8d4cbc0d87" translate="yes" xml:space="preserve">
          <source>Incoming::max_by</source>
          <target state="translated">Incoming::max_by</target>
        </trans-unit>
        <trans-unit id="02e8830cd577c40509d7ca817740c861b52c07c0" translate="yes" xml:space="preserve">
          <source>Incoming::max_by_key</source>
          <target state="translated">Incoming::max_by_key</target>
        </trans-unit>
        <trans-unit id="e522553048356a9c7e3aafb53205e73c814823fd" translate="yes" xml:space="preserve">
          <source>Incoming::min</source>
          <target state="translated">Incoming::min</target>
        </trans-unit>
        <trans-unit id="8b1b84ed0cee495bc315c75dc85c4916ce7f680f" translate="yes" xml:space="preserve">
          <source>Incoming::min_by</source>
          <target state="translated">Incoming::min_by</target>
        </trans-unit>
        <trans-unit id="94a6455843a6def08f4247ddbcf5a373aff6a12c" translate="yes" xml:space="preserve">
          <source>Incoming::min_by_key</source>
          <target state="translated">Incoming::min_by_key</target>
        </trans-unit>
        <trans-unit id="af6f0e0d448b8971f8088a94ecfe2c2c28074b20" translate="yes" xml:space="preserve">
          <source>Incoming::ne</source>
          <target state="translated">Incoming::ne</target>
        </trans-unit>
        <trans-unit id="ad9f2df7e05588db669a49fe0bfa35787281e257" translate="yes" xml:space="preserve">
          <source>Incoming::next</source>
          <target state="translated">Incoming::next</target>
        </trans-unit>
        <trans-unit id="15fdadbdf731ff5f14bd01d14581b0031b5aa856" translate="yes" xml:space="preserve">
          <source>Incoming::nth</source>
          <target state="translated">Incoming::nth</target>
        </trans-unit>
        <trans-unit id="f584fdb6a022a6b9c2041ae0049adb844c00af0a" translate="yes" xml:space="preserve">
          <source>Incoming::partial_cmp</source>
          <target state="translated">Incoming::partial_cmp</target>
        </trans-unit>
        <trans-unit id="d6e7347d2f13179a0246ad8c2f8f8c42d5ea1e8b" translate="yes" xml:space="preserve">
          <source>Incoming::partition</source>
          <target state="translated">Incoming::partition</target>
        </trans-unit>
        <trans-unit id="d15dc3a739c395fba4cdef1bb3db41863ef399f5" translate="yes" xml:space="preserve">
          <source>Incoming::peekable</source>
          <target state="translated">Incoming::peekable</target>
        </trans-unit>
        <trans-unit id="cab06ddc3af8abd52b92e45544310b0faa110219" translate="yes" xml:space="preserve">
          <source>Incoming::position</source>
          <target state="translated">Incoming::position</target>
        </trans-unit>
        <trans-unit id="bb23c8eb76a6d68dfc63c6d32849abe960c1b856" translate="yes" xml:space="preserve">
          <source>Incoming::product</source>
          <target state="translated">Incoming::product</target>
        </trans-unit>
        <trans-unit id="b3d90889f7b30454426b3ed4e11228f5d9d8ee9f" translate="yes" xml:space="preserve">
          <source>Incoming::rev</source>
          <target state="translated">Incoming::rev</target>
        </trans-unit>
        <trans-unit id="d662587d11104ca4324befe21e5aaa1cf3ed3fa3" translate="yes" xml:space="preserve">
          <source>Incoming::rposition</source>
          <target state="translated">Incoming::rposition</target>
        </trans-unit>
        <trans-unit id="6b42372525b119239ec4bd20dc7bf69a1a105a08" translate="yes" xml:space="preserve">
          <source>Incoming::scan</source>
          <target state="translated">Incoming::scan</target>
        </trans-unit>
        <trans-unit id="c1399e28a107bc4249663ed0d2b97e798127c9c6" translate="yes" xml:space="preserve">
          <source>Incoming::size_hint</source>
          <target state="translated">Incoming::size_hint</target>
        </trans-unit>
        <trans-unit id="85ee70ca43a998ef206f4a945f59006b6f40ddfa" translate="yes" xml:space="preserve">
          <source>Incoming::skip</source>
          <target state="translated">Incoming::skip</target>
        </trans-unit>
        <trans-unit id="fdd32c3e0206952202e83705e9d627eb48f607e6" translate="yes" xml:space="preserve">
          <source>Incoming::skip_while</source>
          <target state="translated">Incoming::skip_while</target>
        </trans-unit>
        <trans-unit id="5a589e1b9602c4ff48aa22e65968275507ea9485" translate="yes" xml:space="preserve">
          <source>Incoming::step_by</source>
          <target state="translated">Incoming::step_by</target>
        </trans-unit>
        <trans-unit id="d9ed48df44b20a36de8b0990f9b0c9b964475772" translate="yes" xml:space="preserve">
          <source>Incoming::sum</source>
          <target state="translated">Incoming::sum</target>
        </trans-unit>
        <trans-unit id="bcf6381c826c50e1aaea7423243d1529dca214b8" translate="yes" xml:space="preserve">
          <source>Incoming::take</source>
          <target state="translated">Incoming::take</target>
        </trans-unit>
        <trans-unit id="981c1e08f556e3870dd2af3a144f3176473200b7" translate="yes" xml:space="preserve">
          <source>Incoming::take_while</source>
          <target state="translated">Incoming::take_while</target>
        </trans-unit>
        <trans-unit id="2f0356552ebde5f1c3f3f3ad37fa03b3d1bf90bd" translate="yes" xml:space="preserve">
          <source>Incoming::try_fold</source>
          <target state="translated">Incoming::try_fold</target>
        </trans-unit>
        <trans-unit id="5c1f1df01cacdbf861258e63eb2cb8581f88d043" translate="yes" xml:space="preserve">
          <source>Incoming::try_for_each</source>
          <target state="translated">Incoming::try_for_each</target>
        </trans-unit>
        <trans-unit id="9a58299e31b9803379553db37123ab15774b671d" translate="yes" xml:space="preserve">
          <source>Incoming::try_from</source>
          <target state="translated">Incoming::try_from</target>
        </trans-unit>
        <trans-unit id="fff541a38a97a609e5012c516e4164326cfb79eb" translate="yes" xml:space="preserve">
          <source>Incoming::try_into</source>
          <target state="translated">Incoming::try_into</target>
        </trans-unit>
        <trans-unit id="946f55dc3e1af640cd291f2aaa8528234e768102" translate="yes" xml:space="preserve">
          <source>Incoming::type_id</source>
          <target state="translated">Incoming::type_id</target>
        </trans-unit>
        <trans-unit id="bf46b8f3bb432660f79899dee66baf3e9f087f95" translate="yes" xml:space="preserve">
          <source>Incoming::unzip</source>
          <target state="translated">Incoming::unzip</target>
        </trans-unit>
        <trans-unit id="96a8cde7e0e4c52965055072fd39e0d341071072" translate="yes" xml:space="preserve">
          <source>Incoming::zip</source>
          <target state="translated">Incoming::zip</target>
        </trans-unit>
        <trans-unit id="bcbf83cd2f0ed89c4d2689129dde9ed148866efc" translate="yes" xml:space="preserve">
          <source>Incorrect bytes:</source>
          <target state="translated">错误的字节。</target>
        </trans-unit>
        <trans-unit id="2a70492a6aefdfa404f3b9ac0c6d0448b88be337" translate="yes" xml:space="preserve">
          <source>Incorrect usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7c0e61e47d8d76b1fdbcd2b9644ebc448b482b" translate="yes" xml:space="preserve">
          <source>Increments the strong reference count on the &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; associated with the provided pointer by one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2df9b932637fe9d32a0f16da1c11873398f873d" translate="yes" xml:space="preserve">
          <source>Index</source>
          <target state="translated">Index</target>
        </trans-unit>
        <trans-unit id="52cb15ca8d9c1e4b950b26ef1f32246271f50339" translate="yes" xml:space="preserve">
          <source>Index expressions on arrays and slices</source>
          <target state="translated">数组和切片的索引表达式</target>
        </trans-unit>
        <trans-unit id="361d6f89c121ce39bb2ed14f7085cd248645d21b" translate="yes" xml:space="preserve">
          <source>Index expressions, &lt;a href=&quot;expressions/array-expr#array-and-slice-indexing-expressions&quot;&gt;array indexing&lt;/a&gt; or &lt;a href=&quot;types/slice&quot;&gt;slice&lt;/a&gt; with a &lt;code&gt;usize&lt;/code&gt;.</source>
          <target state="translated">索引表达式，&lt;a href=&quot;expressions/array-expr#array-and-slice-indexing-expressions&quot;&gt;数组索引&lt;/a&gt;或带有 &lt;code&gt;usize&lt;/code&gt; 的&lt;a href=&quot;types/slice&quot;&gt;切片&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="528b0ff12e28b750b5aeda40648664d5f6804c7c" translate="yes" xml:space="preserve">
          <source>Index::index</source>
          <target state="translated">Index::index</target>
        </trans-unit>
        <trans-unit id="21d657443793a7fc6c319cfc186e761fac77191e" translate="yes" xml:space="preserve">
          <source>IndexMut</source>
          <target state="translated">IndexMut</target>
        </trans-unit>
        <trans-unit id="24f9ef47b9bb8985e28653af23b1accbf6cd2d9b" translate="yes" xml:space="preserve">
          <source>IndexMut::index_mut</source>
          <target state="translated">IndexMut::index_mut</target>
        </trans-unit>
        <trans-unit id="bda8e2dcef8324d4ce1ba450c4e2e0cae96a9a4a" translate="yes" xml:space="preserve">
          <source>Indexes must be within bounds of the original slice;</source>
          <target state="translated">索引必须在原始切片的范围内。</target>
        </trans-unit>
        <trans-unit id="fa74cb6623de227628f45b4ae93159daddea90b3" translate="yes" xml:space="preserve">
          <source>Indexes must lie on UTF-8 sequence boundaries.</source>
          <target state="translated">索引必须位于UTF-8序列边界上。</target>
        </trans-unit>
        <trans-unit id="9951861c21df18489a5872209655d6f9039b5e2a" translate="yes" xml:space="preserve">
          <source>Indexing</source>
          <target state="translated">Indexing</target>
        </trans-unit>
        <trans-unit id="8e33bba2a2fe8c945dee904cfed37743c8dd2807" translate="yes" xml:space="preserve">
          <source>Indexing into Strings</source>
          <target state="translated">索引到字符串中</target>
        </trans-unit>
        <trans-unit id="bc1a7f445eecf9a21ddaa6928da85497c3f808d7" translate="yes" xml:space="preserve">
          <source>Indexing into a string is often a bad idea because it&amp;rsquo;s not clear what the return type of the string-indexing operation should be: a byte value, a character, a grapheme cluster, or a string slice. Therefore, Rust asks you to be more specific if you really need to use indices to create string slices. To be more specific in your indexing and indicate that you want a string slice, rather than indexing using &lt;code&gt;[]&lt;/code&gt; with a single number, you can use &lt;code&gt;[]&lt;/code&gt; with a range to create a string slice containing particular bytes:</source>
          <target state="translated">索引到字符串通常不是一个好主意，因为尚不清楚字符串索引操作的返回类型应该是什么：字节值，字符，字形簇或字符串切片。因此，Rust要求您更具体地说明是否真的需要使用索引来创建字符串切片。为了更具体地指示索引并指示您要使用字符串切片，而不是使用带有单个数字的 &lt;code&gt;[]&lt;/code&gt; 进行索引，可以将 &lt;code&gt;[]&lt;/code&gt; 与范围结合使用以创建包含特定字节的字符串切片：</target>
        </trans-unit>
        <trans-unit id="6b92d7c5b5fd6e80ddd2c2e71ae6f53dabf14469" translate="yes" xml:space="preserve">
          <source>Indexing is intended to be a constant-time operation, but UTF-8 encoding does not allow us to do this. Furthermore, it's not clear what sort of thing the index should return: a byte, a codepoint, or a grapheme cluster. The &lt;a href=&quot;#method.bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#method.chars&quot;&gt;&lt;code&gt;chars&lt;/code&gt;&lt;/a&gt; methods return iterators over the first two, respectively.</source>
          <target state="translated">索引旨在进行恒定时间操作，但是UTF-8编码不允许我们执行此操作。此外，尚不清楚索引应返回哪种类型：字节，代码点或字素簇。该&lt;a href=&quot;#method.bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#method.chars&quot;&gt; &lt;code&gt;chars&lt;/code&gt; &lt;/a&gt;的方法分别返回迭代器比前两个。</target>
        </trans-unit>
        <trans-unit id="ceeb8ddb5f53fcb5614444876f148bbebee79484" translate="yes" xml:space="preserve">
          <source>Indexing is intended to be a constant-time operation, but UTF-8 encoding does not allow us to do this. Furthermore, it's not clear what sort of thing the index should return: a byte, a codepoint, or a grapheme cluster. The &lt;a href=&quot;../primitive.str#method.bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../primitive.str#method.chars&quot;&gt;&lt;code&gt;chars&lt;/code&gt;&lt;/a&gt; methods return iterators over the first two, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aba4d1ffc3e50a35d8e6bb2627a9921d36e96c9" translate="yes" xml:space="preserve">
          <source>Indexing outside of the bounds of an object with &lt;a href=&quot;../std/primitive.pointer#method.offset&quot;&gt;&lt;code&gt;offset&lt;/code&gt;&lt;/a&gt; with the exception of one byte past the end of the object.</source>
          <target state="translated">用&lt;a href=&quot;../std/primitive.pointer#method.offset&quot;&gt; &lt;code&gt;offset&lt;/code&gt; &lt;/a&gt;在对象边界之外进行索引，但要超出对象末尾一个字节。</target>
        </trans-unit>
        <trans-unit id="27caa1fa7c65a4437e649a4888fe129281a79568" translate="yes" xml:space="preserve">
          <source>Indicates if a buffer should be initialized.</source>
          <target state="translated">表示是否需要初始化缓冲区。</target>
        </trans-unit>
        <trans-unit id="c4c4786e638c55c48e8eb353954207ab6043189e" translate="yes" xml:space="preserve">
          <source>Indicates that directories should be created recursively, creating all parent directories. Parents that do not exist are created with the same security and permissions settings.</source>
          <target state="translated">表示应递归创建目录,创建所有父目录。不存在的父目录将以相同的安全和权限设置创建。</target>
        </trans-unit>
        <trans-unit id="4856479107baf14ea55cfdf8d4985b8807716a64" translate="yes" xml:space="preserve">
          <source>Indicates the manner in which a thread exited.</source>
          <target state="translated">表示线程退出的方式。</target>
        </trans-unit>
        <trans-unit id="075cfaf01d924967ba4b76beb1cc86c1b8ffbe22" translate="yes" xml:space="preserve">
          <source>Indicates the time-to-live value of outgoing multicast packets for this socket. The default value is 1 which means that multicast packets don't leave the local network unless explicitly requested.</source>
          <target state="translated">表示该套接字的外发组播数据包的存活时间值,默认值为1,表示除非明确要求,否则组播数据包不会离开本地网络。默认值是1,表示除非有明确的要求,否则多播数据包不会离开本地网络。</target>
        </trans-unit>
        <trans-unit id="888a497d6d0feb54c4bc51c8bbfa14e4db0f048b" translate="yes" xml:space="preserve">
          <source>Indicates unfinished code.</source>
          <target state="translated">表示未完成的代码。</target>
        </trans-unit>
        <trans-unit id="35472c24a202b583e18e139d3d561c6674911e84" translate="yes" xml:space="preserve">
          <source>Indicates unimplemented code by panicking with a message of &quot;not implemented&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4862445239fb7cd37f48e6ace7775dcd354d2d14" translate="yes" xml:space="preserve">
          <source>Indicates unreachable code.</source>
          <target state="translated">表示无法到达的代码。</target>
        </trans-unit>
        <trans-unit id="cd5cea6e94489fba68a0399bcc4d11feffb0cbe4" translate="yes" xml:space="preserve">
          <source>Indicates whether a value is available or if the current task has been scheduled to receive a wakeup instead.</source>
          <target state="translated">表示是否有值可用,或者当前任务是否已被安排接收唤醒。</target>
        </trans-unit>
        <trans-unit id="a5d9b716629f981c5e75c2880c16718258347eb9" translate="yes" xml:space="preserve">
          <source>Indication that contents should be center-aligned.</source>
          <target state="translated">表示内容应居中对齐。</target>
        </trans-unit>
        <trans-unit id="582259f836deeb40225aa78333ee7027acddbdbe" translate="yes" xml:space="preserve">
          <source>Indication that contents should be left-aligned.</source>
          <target state="translated">表示内容应左对齐。</target>
        </trans-unit>
        <trans-unit id="30524864694504eb9866802047ab21c114fa2091" translate="yes" xml:space="preserve">
          <source>Indication that contents should be right-aligned.</source>
          <target state="translated">表示内容应右对齐。</target>
        </trans-unit>
        <trans-unit id="f2cd68a3153c21de89ed40993772ed6007b02a6f" translate="yes" xml:space="preserve">
          <source>Indices are zero-based for arrays and slices. Array access is a &lt;a href=&quot;../const_eval#constant-expressions&quot;&gt;constant expression&lt;/a&gt;, so bounds can be checked at compile-time with a constant index value. Otherwise a check will be performed at run-time that will put the thread in a &lt;em&gt;panicked state&lt;/em&gt; if it fails.</source>
          <target state="translated">数组和切片的索引从零开始。数组访问是一个&lt;a href=&quot;../const_eval#constant-expressions&quot;&gt;常量表达式&lt;/a&gt;，因此可以在编译时使用常量索引值检查范围。否则，将在运行时执行检查，如果检查失败，该检查会将线程置于&lt;em&gt;紧急状态&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e7d8ee4a5140f0e6e32c94f9ff32453c7e40a4a3" translate="yes" xml:space="preserve">
          <source>Inequality for two &lt;code&gt;Arc&lt;/code&gt;s.</source>
          <target state="translated">两个 &lt;code&gt;Arc&lt;/code&gt; 的不等式。</target>
        </trans-unit>
        <trans-unit id="8aa90054db987f32eec9e62690e9b9862d6f642a" translate="yes" xml:space="preserve">
          <source>Inequality for two &lt;code&gt;Rc&lt;/code&gt;s.</source>
          <target state="translated">两个 &lt;code&gt;Rc&lt;/code&gt; 不等式。</target>
        </trans-unit>
        <trans-unit id="5d55264281a8b8357477a0b1f6f6a4a72582a08d" translate="yes" xml:space="preserve">
          <source>Inert helper attributes used by procedural macro attributes applied to items are also allowed but be careful to not include these inert attributes in your final &lt;code&gt;TokenStream&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32565cc43897d204c904c25aeddc29a5a2fe5f4d" translate="yes" xml:space="preserve">
          <source>Infallible</source>
          <target state="translated">Infallible</target>
        </trans-unit>
        <trans-unit id="327440953e8036a6b78b97c190dedc5d1ddc1d6f" translate="yes" xml:space="preserve">
          <source>Infallible errors</source>
          <target state="translated">无懈可击的错误</target>
        </trans-unit>
        <trans-unit id="379d563f62e4c026be425a08a60de86e8b28b34e" translate="yes" xml:space="preserve">
          <source>Infallible::borrow</source>
          <target state="translated">Infallible::borrow</target>
        </trans-unit>
        <trans-unit id="ffd9adf91cadc5963cf564501d6440dfcb9953d6" translate="yes" xml:space="preserve">
          <source>Infallible::borrow_mut</source>
          <target state="translated">Infallible::borrow_mut</target>
        </trans-unit>
        <trans-unit id="d5161b5d2a0dd973c7749267f912225db6f86b3c" translate="yes" xml:space="preserve">
          <source>Infallible::clamp</source>
          <target state="translated">Infallible::clamp</target>
        </trans-unit>
        <trans-unit id="f9dfe17efa7693fd64ca4bce650f4693dec46e6a" translate="yes" xml:space="preserve">
          <source>Infallible::clone</source>
          <target state="translated">Infallible::clone</target>
        </trans-unit>
        <trans-unit id="7c7c7505a3bdd3e6bbbfabe3c0aa36eea42c2f97" translate="yes" xml:space="preserve">
          <source>Infallible::clone_from</source>
          <target state="translated">Infallible::clone_from</target>
        </trans-unit>
        <trans-unit id="6af6b86ef345c274a60c49262dbedb50a8323471" translate="yes" xml:space="preserve">
          <source>Infallible::clone_into</source>
          <target state="translated">Infallible::clone_into</target>
        </trans-unit>
        <trans-unit id="3f4e892d27a40b0bfaf9fee7ba4a2719e5f0e03b" translate="yes" xml:space="preserve">
          <source>Infallible::cmp</source>
          <target state="translated">Infallible::cmp</target>
        </trans-unit>
        <trans-unit id="465ca79819acd2f64e9c25bd2a18d141db20f7e4" translate="yes" xml:space="preserve">
          <source>Infallible::eq</source>
          <target state="translated">Infallible::eq</target>
        </trans-unit>
        <trans-unit id="7b0120f9faa0f0e51d2f41f2228ccb58415bb901" translate="yes" xml:space="preserve">
          <source>Infallible::fmt</source>
          <target state="translated">Infallible::fmt</target>
        </trans-unit>
        <trans-unit id="7699715e87167505521e297f0cc5acf9571073ba" translate="yes" xml:space="preserve">
          <source>Infallible::from</source>
          <target state="translated">Infallible::from</target>
        </trans-unit>
        <trans-unit id="9ed64ca1536a61aeb71e791f8b0cd35996768800" translate="yes" xml:space="preserve">
          <source>Infallible::ge</source>
          <target state="translated">Infallible::ge</target>
        </trans-unit>
        <trans-unit id="6bc6944b5c980e7843d508d02dcd2bfaf58a503d" translate="yes" xml:space="preserve">
          <source>Infallible::gt</source>
          <target state="translated">Infallible::gt</target>
        </trans-unit>
        <trans-unit id="be25a1605cddc636f6f076ea8d21d97812f2aa85" translate="yes" xml:space="preserve">
          <source>Infallible::into</source>
          <target state="translated">Infallible::into</target>
        </trans-unit>
        <trans-unit id="acae0cd14002a94fe132d6ca88f1fdd5ca563403" translate="yes" xml:space="preserve">
          <source>Infallible::le</source>
          <target state="translated">Infallible::le</target>
        </trans-unit>
        <trans-unit id="2b7d09de5fbcd932797ca9cc160818ef628164b0" translate="yes" xml:space="preserve">
          <source>Infallible::lt</source>
          <target state="translated">Infallible::lt</target>
        </trans-unit>
        <trans-unit id="d981e531de4db6af3fa624928233a62cc48506b0" translate="yes" xml:space="preserve">
          <source>Infallible::max</source>
          <target state="translated">Infallible::max</target>
        </trans-unit>
        <trans-unit id="4e77b6f968c067dfd00c877ce693a33816232a84" translate="yes" xml:space="preserve">
          <source>Infallible::min</source>
          <target state="translated">Infallible::min</target>
        </trans-unit>
        <trans-unit id="1b9bdf4c04b01562bf66a579b3902b4d24df2814" translate="yes" xml:space="preserve">
          <source>Infallible::ne</source>
          <target state="translated">Infallible::ne</target>
        </trans-unit>
        <trans-unit id="593cf3934010f07d135bbd81984d0e7b07060f05" translate="yes" xml:space="preserve">
          <source>Infallible::partial_cmp</source>
          <target state="translated">Infallible::partial_cmp</target>
        </trans-unit>
        <trans-unit id="171d7fff4d94e2b47d18a78e5a1c94a683078c15" translate="yes" xml:space="preserve">
          <source>Infallible::to_owned</source>
          <target state="translated">Infallible::to_owned</target>
        </trans-unit>
        <trans-unit id="256be91884f5591734d76be10903ead44c9f209f" translate="yes" xml:space="preserve">
          <source>Infallible::to_string</source>
          <target state="translated">Infallible::to_string</target>
        </trans-unit>
        <trans-unit id="c3635403870a783a099eedcae587acfb8a52bc1f" translate="yes" xml:space="preserve">
          <source>Infallible::try_from</source>
          <target state="translated">Infallible::try_from</target>
        </trans-unit>
        <trans-unit id="3c8ee4706115d8499f3abf4d51e35db72e1ffd2e" translate="yes" xml:space="preserve">
          <source>Infallible::try_into</source>
          <target state="translated">Infallible::try_into</target>
        </trans-unit>
        <trans-unit id="9701bd213ca2d8e7962b353284539a737fba44f7" translate="yes" xml:space="preserve">
          <source>Infallible::type_id</source>
          <target state="translated">Infallible::type_id</target>
        </trans-unit>
        <trans-unit id="c548ca9534f0b8a6c18d5933d5460cae1f620bec" translate="yes" xml:space="preserve">
          <source>Inferred type</source>
          <target state="translated">推断类型</target>
        </trans-unit>
        <trans-unit id="85dc47997d86458573535c2b6419f71eaedb8bec" translate="yes" xml:space="preserve">
          <source>Infinite iterators like &lt;code&gt;repeat()&lt;/code&gt; are often used with adapters like &lt;a href=&quot;trait.iterator#method.take&quot;&gt;&lt;code&gt;Iterator::take()&lt;/code&gt;&lt;/a&gt;, in order to make them finite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b827f3090a9999d7251035ec3accdcd8d4fbe7d" translate="yes" xml:space="preserve">
          <source>Infinite iterators like &lt;code&gt;repeat()&lt;/code&gt; are often used with adapters like &lt;a href=&quot;trait.iterator#method.take&quot;&gt;&lt;code&gt;take&lt;/code&gt;&lt;/a&gt;, in order to make them finite.</source>
          <target state="translated">像 &lt;code&gt;repeat()&lt;/code&gt; 这样的无限迭代器通常与&lt;a href=&quot;trait.iterator#method.take&quot;&gt; &lt;code&gt;take&lt;/code&gt; 等&lt;/a&gt;适配器一起使用，以使它们变得有限。</target>
        </trans-unit>
        <trans-unit id="2872d343e29a3d0faf1e93a846c0ad3b8146eceb" translate="yes" xml:space="preserve">
          <source>Infinite iterators like &lt;code&gt;repeat_with()&lt;/code&gt; are often used with adapters like &lt;a href=&quot;trait.iterator#method.take&quot;&gt;&lt;code&gt;Iterator::take()&lt;/code&gt;&lt;/a&gt;, in order to make them finite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e414b3978173634ff311532d9eb1dc73109f5119" translate="yes" xml:space="preserve">
          <source>Infinite iterators like &lt;code&gt;repeat_with()&lt;/code&gt; are often used with adapters like &lt;a href=&quot;trait.iterator#method.take&quot;&gt;&lt;code&gt;take&lt;/code&gt;&lt;/a&gt;, in order to make them finite.</source>
          <target state="translated">无限重复器（如 &lt;code&gt;repeat_with()&lt;/code&gt; )经常与适配器（如&lt;a href=&quot;trait.iterator#method.take&quot;&gt; &lt;code&gt;take&lt;/code&gt; &lt;/a&gt;）一起使用，以使它们变得有限。</target>
        </trans-unit>
        <trans-unit id="a2550f47e7bda60f30b73b2126315e72f6a1181f" translate="yes" xml:space="preserve">
          <source>Infinite loops</source>
          <target state="translated">无限循环</target>
        </trans-unit>
        <trans-unit id="0219fd54bd5841008b18c414a5b2dea331bad1c5" translate="yes" xml:space="preserve">
          <source>Infinity</source>
          <target state="translated">Infinity</target>
        </trans-unit>
        <trans-unit id="2caa9882f0053ecda17ba6be06a5251c1ec2645f" translate="yes" xml:space="preserve">
          <source>Infinity (&amp;infin;).</source>
          <target state="translated">无穷大（&amp;infin;）。</target>
        </trans-unit>
        <trans-unit id="87a3bea62fc4aac2370741613d6bad23fc5e7898" translate="yes" xml:space="preserve">
          <source>Infinity (&amp;infin;). Use &lt;a href=&quot;../primitive.f32#associatedconstant.INFINITY&quot;&gt;&lt;code&gt;f32::INFINITY&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5889ff563c59beba5ff715c644770f8c520445a" translate="yes" xml:space="preserve">
          <source>Infinity (&amp;infin;). Use &lt;a href=&quot;../primitive.f64#associatedconstant.INFINITY&quot;&gt;&lt;code&gt;f64::INFINITY&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584304393b0ea6955cb4308163835ca022286a68" translate="yes" xml:space="preserve">
          <source>Influences</source>
          <target state="translated">Influences</target>
        </trans-unit>
        <trans-unit id="d42473cc429103c815ee41c99ce227e6800bc064" translate="yes" xml:space="preserve">
          <source>Informally:</source>
          <target state="translated">Informally:</target>
        </trans-unit>
        <trans-unit id="50473fcaee3f0826f522b7d9bde1dee298665a6b" translate="yes" xml:space="preserve">
          <source>Informs the compiler that this point in the code is not reachable, enabling further optimizations.</source>
          <target state="translated">告知编译器,代码中的这一点是无法达到的,以便进一步优化。</target>
        </trans-unit>
        <trans-unit id="da26edc8a2a6b051f930b8dc35ea3b2d2eb04a3f" translate="yes" xml:space="preserve">
          <source>Informs the optimizer that a condition is always true. If the condition is false, the behavior is undefined.</source>
          <target state="translated">告知优化器一个条件始终为真。如果条件为假,则行为未定义。</target>
        </trans-unit>
        <trans-unit id="7ae97ac101c4619f2cdd3e3df7584b679394eca7" translate="yes" xml:space="preserve">
          <source>Inhabited</source>
          <target state="translated">Inhabited</target>
        </trans-unit>
        <trans-unit id="b07b5b517980bf88c19321ee29f23f8a21e0b4de" translate="yes" xml:space="preserve">
          <source>Inherent Implementations</source>
          <target state="translated">固有实施</target>
        </trans-unit>
        <trans-unit id="bf73ea65fd18a78a9021507f0c11c78ed2ec5124" translate="yes" xml:space="preserve">
          <source>Inherent associated types were part of &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0195-associated-items.md&quot;&gt;RFC 195&lt;/a&gt; but are not yet implemented. See &lt;a href=&quot;https://github.com/rust-lang/rust/issues/8995&quot;&gt;the tracking issue&lt;/a&gt; for the status of this implementation.</source>
          <target state="translated">固有的关联类型是&lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0195-associated-items.md&quot;&gt;RFC 195的&lt;/a&gt;一部分，但尚未实现。有关此实现的状态，请参见&lt;a href=&quot;https://github.com/rust-lang/rust/issues/8995&quot;&gt;跟踪问题&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f47cc0e78be269b94ff1fbb506eefabb2d14cd1d" translate="yes" xml:space="preserve">
          <source>Inherent implementation</source>
          <target state="translated">固有的执行</target>
        </trans-unit>
        <trans-unit id="89d8c2e2efc6fafd98f5603953f0cb702613d6d3" translate="yes" xml:space="preserve">
          <source>Inherent implementations (one that do not implement a trait but provide methods associated with a type) are always safe because they are not implementing an unsafe trait. Removing the &lt;code&gt;unsafe&lt;/code&gt; keyword from the inherent implementation will resolve this error.</source>
          <target state="translated">固有的实现（不实现特征但提供与类型关联的方法的实现）始终是安全的，因为它们没有实现不安全的特征。从固有实现中删除 &lt;code&gt;unsafe&lt;/code&gt; 关键字将解决此错误。</target>
        </trans-unit>
        <trans-unit id="02407dbce9ca24cc02710598fc24ae8f49c07a7e" translate="yes" xml:space="preserve">
          <source>Inherent implementations associate the contained items to the implementing type. Inherent implementations can contain &lt;a href=&quot;associated-items#associated-functions-and-methods&quot;&gt;associated functions&lt;/a&gt; (including methods) and &lt;a href=&quot;associated-items#associated-constants&quot;&gt;associated constants&lt;/a&gt;. They cannot contain associated type aliases.</source>
          <target state="translated">固有的实现将所包含的项目与实现类型相关联。固有的实现可以包含&lt;a href=&quot;associated-items#associated-functions-and-methods&quot;&gt;关联的函数&lt;/a&gt;（包括方法）和&lt;a href=&quot;associated-items#associated-constants&quot;&gt;关联的常量&lt;/a&gt;。它们不能包含关联的类型别名。</target>
        </trans-unit>
        <trans-unit id="4ccb704ced0ac70357d35287cb1c67388f967d06" translate="yes" xml:space="preserve">
          <source>Inherent method</source>
          <target state="translated">固有方法</target>
        </trans-unit>
        <trans-unit id="c7a774bf3dce2aac99ad48347458653bbd55d325" translate="yes" xml:space="preserve">
          <source>Inherit stdin/stdout/stderr for &lt;code&gt;spawn&lt;/code&gt; or &lt;code&gt;status&lt;/code&gt;, but create pipes for &lt;code&gt;output&lt;/code&gt;</source>
          <target state="translated">继承stdin / stdout / stderr &lt;code&gt;spawn&lt;/code&gt; 或 &lt;code&gt;status&lt;/code&gt; ，但创建管道 &lt;code&gt;output&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f4e94fb7b802199fb91e731b50847b79d9607c1" translate="yes" xml:space="preserve">
          <source>Inherit the current process's environment</source>
          <target state="translated">继承当前进程的环境</target>
        </trans-unit>
        <trans-unit id="44c348c84d3785ac5adb30ee3d2d10f68e971317" translate="yes" xml:space="preserve">
          <source>Inherit the current process's working directory</source>
          <target state="translated">继承当前进程的工作目录。</target>
        </trans-unit>
        <trans-unit id="6325b69277e854d2ebda5c6558b946870708063a" translate="yes" xml:space="preserve">
          <source>Inheritance as a Type System and as Code Sharing</source>
          <target state="translated">作为类型系统和代码共享的继承性</target>
        </trans-unit>
        <trans-unit id="c561edc4e8c488ada0373bbdca70237bf7b2c36a" translate="yes" xml:space="preserve">
          <source>Inheritance has recently fallen out of favor as a programming design solution in many programming languages because it&amp;rsquo;s often at risk of sharing more code than necessary. Subclasses shouldn&amp;rsquo;t always share all characteristics of their parent class but will do so with inheritance. This can make a program&amp;rsquo;s design less flexible. It also introduces the possibility of calling methods on subclasses that don&amp;rsquo;t make sense or that cause errors because the methods don&amp;rsquo;t apply to the subclass. In addition, some languages will only allow a subclass to inherit from one class, further restricting the flexibility of a program&amp;rsquo;s design.</source>
          <target state="translated">继承最近在许多编程语言中不再是编程设计解决方案的首选，因为继承经常有共享不必要代码的风险。子类不应该总是共享其父类的所有特征，而应该通过继承来共享。这会使程序的设计不灵活。它还引入了在子类上调用没有意义或会导致错误的子类的可能性，因为这些方法不适用于子类。另外，某些语言仅允许子类从一个类继承，从而进一步限制了程序设计的灵活性。</target>
        </trans-unit>
        <trans-unit id="2e8b04bb573d36dddf2182bf5af08f053f087e52" translate="yes" xml:space="preserve">
          <source>Initial values</source>
          <target state="translated">初始值</target>
        </trans-unit>
        <trans-unit id="c904b3e1f2d0c5d733b728b7a681f23a1ee75fda" translate="yes" xml:space="preserve">
          <source>Initialization and Destruction</source>
          <target state="translated">初始化和销毁</target>
        </trans-unit>
        <trans-unit id="13d802cdbafe0031cbe0ff944c50f80b718c2135" translate="yes" xml:space="preserve">
          <source>Initialization invariant</source>
          <target state="translated">初始化不变性</target>
        </trans-unit>
        <trans-unit id="e4de29eb027f99abd844645c1796c2a7a7d72482" translate="yes" xml:space="preserve">
          <source>Initialization is dynamically performed on the first call to &lt;a href=&quot;struct.localkey#method.with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; within a thread, and values that implement &lt;a href=&quot;../ops/trait.drop&quot;&gt;&lt;code&gt;Drop&lt;/code&gt;&lt;/a&gt; get destructed when a thread exits. Some caveats apply, which are explained below.</source>
          <target state="translated">初始化是在线程中对&lt;a href=&quot;struct.localkey#method.with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;的第一次调用中动态执行的，并且在线程退出时，实现&lt;a href=&quot;../ops/trait.drop&quot;&gt; &lt;code&gt;Drop&lt;/code&gt; 的&lt;/a&gt;值将被破坏。一些注意事项适用，下面将进行说明。</target>
        </trans-unit>
        <trans-unit id="b12d9d28ca06ab166730d1a0be67505b54f2b263" translate="yes" xml:space="preserve">
          <source>Initialization of a union</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db21316277d9b77e6330bd9b3d2303f36118171f" translate="yes" xml:space="preserve">
          <source>Initialization value for static &lt;a href=&quot;struct.once&quot;&gt;&lt;code&gt;Once&lt;/code&gt;&lt;/a&gt; values.</source>
          <target state="translated">静态&lt;a href=&quot;struct.once&quot;&gt; &lt;code&gt;Once&lt;/code&gt; &lt;/a&gt;值的初始化值。</target>
        </trans-unit>
        <trans-unit id="777041461872120636aa50d7bf36c832a7f4df98" translate="yes" xml:space="preserve">
          <source>Initialize a result to &lt;a href=&quot;enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; before a loop:</source>
          <target state="translated">在循环之前将结果初始化为&lt;a href=&quot;enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="26ac5e37d496de00bf60e19d042275381e3527b3" translate="yes" xml:space="preserve">
          <source>Initialized</source>
          <target state="translated">Initialized</target>
        </trans-unit>
        <trans-unit id="0c55ba13e2bd9dbfd35641ebe93792c6061e39cd" translate="yes" xml:space="preserve">
          <source>Initializer</source>
          <target state="translated">Initializer</target>
        </trans-unit>
        <trans-unit id="cb5407ce66e9cc74c7b9cdad45d317b358a42346" translate="yes" xml:space="preserve">
          <source>Initializer::borrow</source>
          <target state="translated">Initializer::borrow</target>
        </trans-unit>
        <trans-unit id="9329992da7e67d3d87b950443458d66c568d4935" translate="yes" xml:space="preserve">
          <source>Initializer::borrow_mut</source>
          <target state="translated">Initializer::borrow_mut</target>
        </trans-unit>
        <trans-unit id="8b338b461eda8eab3ac52c21c7ba950b55ddab77" translate="yes" xml:space="preserve">
          <source>Initializer::fmt</source>
          <target state="translated">Initializer::fmt</target>
        </trans-unit>
        <trans-unit id="370ad1ce33d717e00bfed251c3d4bf09120c4049" translate="yes" xml:space="preserve">
          <source>Initializer::from</source>
          <target state="translated">Initializer::from</target>
        </trans-unit>
        <trans-unit id="26ef6fd69d6de0da79344847b51c3c8c83e2b8cc" translate="yes" xml:space="preserve">
          <source>Initializer::initialize</source>
          <target state="translated">Initializer::initialize</target>
        </trans-unit>
        <trans-unit id="bdae64fb5268754bb9cc8ae6c8db2ab2a08fdbc3" translate="yes" xml:space="preserve">
          <source>Initializer::into</source>
          <target state="translated">Initializer::into</target>
        </trans-unit>
        <trans-unit id="a79949e93a459b7f8ca5406e877e55f5660e5c75" translate="yes" xml:space="preserve">
          <source>Initializer::nop</source>
          <target state="translated">Initializer::nop</target>
        </trans-unit>
        <trans-unit id="dcb257db32b009bda392da62101575610abd1f91" translate="yes" xml:space="preserve">
          <source>Initializer::should_initialize</source>
          <target state="translated">Initializer::should_initialize</target>
        </trans-unit>
        <trans-unit id="bcab8cf375f63f790f0ce8e05777079bda310ea7" translate="yes" xml:space="preserve">
          <source>Initializer::try_from</source>
          <target state="translated">Initializer::try_from</target>
        </trans-unit>
        <trans-unit id="1ce33c3dc308ea20a9c3e23385d3fd4e6cdbc2f0" translate="yes" xml:space="preserve">
          <source>Initializer::try_into</source>
          <target state="translated">Initializer::try_into</target>
        </trans-unit>
        <trans-unit id="7015bd93154feb364c2957b0fc2cdb3fe5bb0863" translate="yes" xml:space="preserve">
          <source>Initializer::type_id</source>
          <target state="translated">Initializer::type_id</target>
        </trans-unit>
        <trans-unit id="38d15bea38cc632ed42db7368869a2581cd9ac0d" translate="yes" xml:space="preserve">
          <source>Initializer::zeroing</source>
          <target state="translated">Initializer::zeroing</target>
        </trans-unit>
        <trans-unit id="b02eff8ddabee28d5ce99312e8bd3930e76e09a5" translate="yes" xml:space="preserve">
          <source>Initializes a buffer if necessary.</source>
          <target state="translated">必要时初始化一个缓冲区。</target>
        </trans-unit>
        <trans-unit id="c1014a628ca9687c4db754c43f3628d84e3050c5" translate="yes" xml:space="preserve">
          <source>Initializing a struct field-by-field</source>
          <target state="translated">逐字段初始化一个结构</target>
        </trans-unit>
        <trans-unit id="6d9d88d804a2b918f6a240e649b5e1a2aa5a1b6e" translate="yes" xml:space="preserve">
          <source>Initializing an array element-by-element</source>
          <target state="translated">逐元素初始化一个数组</target>
        </trans-unit>
        <trans-unit id="e30e79f506a4a7b48aa6bd2ea1d1c98586736d96" translate="yes" xml:space="preserve">
          <source>Initially, the Rust team thought that ensuring memory safety and preventing concurrency problems were two separate challenges to be solved with different methods. Over time, the team discovered that the ownership and type systems are a powerful set of tools to help manage memory safety &lt;em&gt;and&lt;/em&gt; concurrency problems! By leveraging ownership and type checking, many concurrency errors are compile-time errors in Rust rather than runtime errors. Therefore, rather than making you spend lots of time trying to reproduce the exact circumstances under which a runtime concurrency bug occurs, incorrect code will refuse to compile and present an error explaining the problem. As a result, you can fix your code while you&amp;rsquo;re working on it rather than potentially after it has been shipped to production. We&amp;rsquo;ve nicknamed this aspect of Rust &lt;em&gt;fearless&lt;/em&gt;&lt;em&gt;concurrency&lt;/em&gt;. Fearless concurrency allows you to write code that is free of subtle bugs and is easy to refactor without introducing new bugs.</source>
          <target state="translated">最初，Rust团队认为确保内存安全和防止并发问题是要用不同方法解决的两个独立挑战。随着时间的推移，该团队发现所有权和类型系统是一组功能强大的工具，可帮助管理内存安全&lt;em&gt;和&lt;/em&gt;并发问题！通过所有权和类型检查，许多并发错误是Rust中的编译时错误，而不是运行时错误。因此，错误的代码将拒绝编译并呈现一个解释问题的错误，而不是使您花费大量时间尝试重现运行时并发错误发生的确切情况。因此，您可以在处理代码时对其进行修复，而不是在将代码交付生产后进行修复。我们已经将Rust &lt;em&gt;无畏&lt;/em&gt;&lt;em&gt;并发的&lt;/em&gt;这一方面称为&amp;ldquo; &lt;em&gt;无畏&amp;rdquo;&lt;/em&gt;。无所畏惧的并发性使您可以编写无细微错误且易于重构的代码，而不会引入新的错误。</target>
        </trans-unit>
        <trans-unit id="377c3360b199ab4bedae33ce6d834fe07f041fe6" translate="yes" xml:space="preserve">
          <source>Inline assembly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a13c17feda3ff04e933d53202cd41c94dace05" translate="yes" xml:space="preserve">
          <source>Inner attribute</source>
          <target state="translated">内在属性</target>
        </trans-unit>
        <trans-unit id="565c802152b12c7dd9aea0fe59ebaacf3d1a82a3" translate="yes" xml:space="preserve">
          <source>Inner block doc comment</source>
          <target state="translated">内块文档注释</target>
        </trans-unit>
        <trans-unit id="af507067e5f2cec421f889124df4ee46c1a92bbf" translate="yes" xml:space="preserve">
          <source>Inner document can only be used before items. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca5fb7f033a9d40e84c1a1a0c29b149dc2c2561" translate="yes" xml:space="preserve">
          <source>Inner functions do not have access to their containing environment. To fix this error, you can replace the function with a closure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10264f133a74f365cfab7999c77a7091803d2786" translate="yes" xml:space="preserve">
          <source>Inner items do not inherit type or const parameters from the functions they are embedded in.</source>
          <target state="translated">内项不继承它们所嵌入的函数的类型或常量参数。</target>
        </trans-unit>
        <trans-unit id="6909dc9a044dcde9a4fe7603daf0a9a52557aba3" translate="yes" xml:space="preserve">
          <source>Inner line doc comment</source>
          <target state="translated">内行文档注释</target>
        </trans-unit>
        <trans-unit id="1b77a7f4983f9ce773f466c761a7f6e9771bf925" translate="yes" xml:space="preserve">
          <source>Input format</source>
          <target state="translated">输入格式</target>
        </trans-unit>
        <trans-unit id="daf107c7f6d6d3a06676862d762621e314a3de24" translate="yes" xml:space="preserve">
          <source>Insert and complex keys</source>
          <target state="translated">插入键和复合键</target>
        </trans-unit>
        <trans-unit id="3d9eeb934e6164d2c24b6394e6758d068509ccb2" translate="yes" xml:space="preserve">
          <source>Insertion and popping the largest element have &lt;code&gt;O(log n)&lt;/code&gt; time complexity. Checking the largest element is &lt;code&gt;O(1)&lt;/code&gt;. Converting a vector to a binary heap can be done in-place, and has &lt;code&gt;O(n)&lt;/code&gt; complexity. A binary heap can also be converted to a sorted vector in-place, allowing it to be used for an &lt;code&gt;O(n log n)&lt;/code&gt; in-place heapsort.</source>
          <target state="translated">插入和弹出最大元素的时间复杂度为 &lt;code&gt;O(log n)&lt;/code&gt; 。检查最大的元素是 &lt;code&gt;O(1)&lt;/code&gt; 。将向量转换为二进制堆可以就地完成，并且复杂度为 &lt;code&gt;O(n)&lt;/code&gt; 。二进制堆也可以就地转换为排序向量，从而可以将其用于 &lt;code&gt;O(n log n)&lt;/code&gt; 就地堆排序。</target>
        </trans-unit>
        <trans-unit id="e3054fc5d210400311e9f74c38361908c7518246" translate="yes" xml:space="preserve">
          <source>Insertion and popping the largest element have &lt;em&gt;O&lt;/em&gt;(log(&lt;em&gt;n&lt;/em&gt;)) time complexity. Checking the largest element is &lt;em&gt;O&lt;/em&gt;(1). Converting a vector to a binary heap can be done in-place, and has &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt;) complexity. A binary heap can also be converted to a sorted vector in-place, allowing it to be used for an &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt; * log(&lt;em&gt;n&lt;/em&gt;)) in-place heapsort.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b51cb1a3f7392b32f519dbb88d97e332d11c69" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;v&lt;/code&gt; into the option if it is &lt;a href=&quot;#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, then returns a mutable reference to the contained value.</source>
          <target state="translated">插入 &lt;code&gt;v&lt;/code&gt; 入选项，如果它是&lt;a href=&quot;#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;，然后返回一个可变参考包含的值。</target>
        </trans-unit>
        <trans-unit id="ea064b5e532406cd5efbee55897b1c3c1824866f" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;v&lt;/code&gt; into the option if it is &lt;a href=&quot;enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, then returns a mutable reference to the contained value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633ef776ac14fc1a5ba3722ac27ba6e3e9e74927" translate="yes" xml:space="preserve">
          <source>Inserts a character into this &lt;code&gt;String&lt;/code&gt; at a byte position.</source>
          <target state="translated">在此 &lt;code&gt;String&lt;/code&gt; 中的字节位置插入一个字符。</target>
        </trans-unit>
        <trans-unit id="0a96531a2ad16ab4c68e8dd30a04fcb8b88d0c9e" translate="yes" xml:space="preserve">
          <source>Inserts a key-value pair into the map.</source>
          <target state="translated">在地图中插入键值对。</target>
        </trans-unit>
        <trans-unit id="6f07650e645ae306862b323d418b09fad3b7f7a0" translate="yes" xml:space="preserve">
          <source>Inserts a string slice into this &lt;code&gt;String&lt;/code&gt; at a byte position.</source>
          <target state="translated">将一个字符串切片插入此 &lt;code&gt;String&lt;/code&gt; 中某个字节的位置。</target>
        </trans-unit>
        <trans-unit id="7d8655d30bbaeaee48aa3f55378c0fe2a4d62e4c" translate="yes" xml:space="preserve">
          <source>Inserts a value computed from &lt;code&gt;f&lt;/code&gt; into the option if it is &lt;a href=&quot;#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, then returns a mutable reference to the contained value.</source>
          <target state="translated">如果从 &lt;code&gt;f&lt;/code&gt; 计算的值插入&lt;a href=&quot;#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;，则将其插入选项，然后返回对包含值的可变引用。</target>
        </trans-unit>
        <trans-unit id="cf859e7e91bd94533ccef650a59dbaf129cf0d1c" translate="yes" xml:space="preserve">
          <source>Inserts a value computed from &lt;code&gt;f&lt;/code&gt; into the option if it is &lt;a href=&quot;enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, then returns a mutable reference to the contained value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd878e1d7609b46228a7e1a93fb6e8fa8ab178e1" translate="yes" xml:space="preserve">
          <source>Inserts a value computed from &lt;code&gt;f&lt;/code&gt; into the set if the given &lt;code&gt;value&lt;/code&gt; is not present, then returns a reference to the value in the set.</source>
          <target state="translated">如果给定 &lt;code&gt;value&lt;/code&gt; 不存在，则将从 &lt;code&gt;f&lt;/code&gt; 计算的值插入到集合中，然后返回对该集合中值的引用。</target>
        </trans-unit>
        <trans-unit id="e4c367e5c15ba31d0f216cb7099e2418408fa476" translate="yes" xml:space="preserve">
          <source>Inserts all new key-values from the iterator and replaces values with existing keys with new values returned from the iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033e5469d3495f120ca34f88432068fa89f314f7" translate="yes" xml:space="preserve">
          <source>Inserts an element at &lt;code&gt;index&lt;/code&gt; within the &lt;code&gt;VecDeque&lt;/code&gt;, shifting all elements with indices greater than or equal to &lt;code&gt;index&lt;/code&gt; towards the back.</source>
          <target state="translated">在 &lt;code&gt;VecDeque&lt;/code&gt; 中的 &lt;code&gt;index&lt;/code&gt; 处插入一个元素，将索引大于或等于 &lt;code&gt;index&lt;/code&gt; 的所有元素向后移动。</target>
        </trans-unit>
        <trans-unit id="12d5beb4f208ab2afd01a906d06c0928be9bf9f4" translate="yes" xml:space="preserve">
          <source>Inserts an element at position &lt;code&gt;index&lt;/code&gt; within the vector, shifting all elements after it to the right.</source>
          <target state="translated">在向量中的位置 &lt;code&gt;index&lt;/code&gt; 处插入一个元素，将其后的所有元素向右移动。</target>
        </trans-unit>
        <trans-unit id="9bb4759e4324e0dbf38962bc28c2aed1b8022c83" translate="yes" xml:space="preserve">
          <source>Inserts an owned copy of the given &lt;code&gt;value&lt;/code&gt; into the set if it is not present, then returns a reference to the value in the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32004441f1f355a905cf795d20839963739fd9b1" translate="yes" xml:space="preserve">
          <source>Inserts or updates an environment variable mapping.</source>
          <target state="translated">插入或更新环境变量映射。</target>
        </trans-unit>
        <trans-unit id="ec935fc4eff4c401230b5e9494768220ac04ae85" translate="yes" xml:space="preserve">
          <source>Inserts the given &lt;code&gt;value&lt;/code&gt; into the set if it is not present, then returns a reference to the value in the set.</source>
          <target state="translated">如果给定 &lt;code&gt;value&lt;/code&gt; 不存在，则将其插入集合中，然后返回对该集合中值的引用。</target>
        </trans-unit>
        <trans-unit id="10a95bea4ce01379ab8d7b752bb3fe35f6abf8b1" translate="yes" xml:space="preserve">
          <source>Inserts the given element just after the element most recently returned by &lt;code&gt;.next()&lt;/code&gt;. The inserted element does not appear in the iteration.</source>
          <target state="translated">在 &lt;code&gt;.next()&lt;/code&gt; 最近返回的元素之后插入给定元素。插入的元素不会出现在迭代中。</target>
        </trans-unit>
        <trans-unit id="af470e35471ccbf3c83cd6c715dc2e1540c10617" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;for&lt;/code&gt; loop, we search for the byte that represents the space by using the byte literal syntax. If we find a space, we return the position. Otherwise, we return the length of the string by using &lt;code&gt;s.len()&lt;/code&gt;:</source>
          <target state="translated">在 &lt;code&gt;for&lt;/code&gt; 循环内，我们使用字节文字语法搜索表示空间的字节。如果找到空间，则返回该位置。否则，我们使用 &lt;code&gt;s.len()&lt;/code&gt; 返回字符串的长度：</target>
        </trans-unit>
        <trans-unit id="49f499d15e7cb0aca0c18bf8de68e4d96c591f23" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;main&lt;/code&gt; function is the following code:</source>
          <target state="translated">在 &lt;code&gt;main&lt;/code&gt; 函数内部是以下代码：</target>
        </trans-unit>
        <trans-unit id="743099d758832aebc06d09f96504a2db95574113" translate="yes" xml:space="preserve">
          <source>Inside the function signature and body, the name of the type parameter can be used as a type name. &lt;a href=&quot;traits&quot;&gt;Trait&lt;/a&gt; bounds can be specified for type parameters to allow methods with that trait to be called on values of that type. This is specified using the &lt;code&gt;where&lt;/code&gt; syntax:</source>
          <target state="translated">在函数签名和主体内部，可以将type参数的名称用作类型名称。可以为类型参数指定&lt;a href=&quot;traits&quot;&gt;特征&lt;/a&gt;范围，以允许对该类型的值调用具有该特征的方法。这是使用 &lt;code&gt;where&lt;/code&gt; 语法指定的：</target>
        </trans-unit>
        <trans-unit id="18ca87afec4298d9de864e32b4eeb6a31786e496" translate="yes" xml:space="preserve">
          <source>Inspect</source>
          <target state="translated">Inspect</target>
        </trans-unit>
        <trans-unit id="82ab79e7a84c19ee615f55de9576c57f6039cbaf" translate="yes" xml:space="preserve">
          <source>Inspect::all</source>
          <target state="translated">Inspect::all</target>
        </trans-unit>
        <trans-unit id="af62c7ee7c236c7e17a30a78c2b4fcf9f79c0b4b" translate="yes" xml:space="preserve">
          <source>Inspect::any</source>
          <target state="translated">Inspect::any</target>
        </trans-unit>
        <trans-unit id="b077905231123238f4a7bb9fcc60ce75f6089a93" translate="yes" xml:space="preserve">
          <source>Inspect::borrow</source>
          <target state="translated">Inspect::borrow</target>
        </trans-unit>
        <trans-unit id="dac186ed9d0b7d57d599f5ce890d1950aca83d7e" translate="yes" xml:space="preserve">
          <source>Inspect::borrow_mut</source>
          <target state="translated">Inspect::borrow_mut</target>
        </trans-unit>
        <trans-unit id="eff030734cfa782924c1060ba45ae2c9617ddff7" translate="yes" xml:space="preserve">
          <source>Inspect::by_ref</source>
          <target state="translated">Inspect::by_ref</target>
        </trans-unit>
        <trans-unit id="c6e04f66ee740f870c7db51ddce5c394c1f5b366" translate="yes" xml:space="preserve">
          <source>Inspect::chain</source>
          <target state="translated">Inspect::chain</target>
        </trans-unit>
        <trans-unit id="af5a3161569b3cc4b1af16e096368ee36af988fd" translate="yes" xml:space="preserve">
          <source>Inspect::clone</source>
          <target state="translated">Inspect::clone</target>
        </trans-unit>
        <trans-unit id="4b8f1150495fa883babb18b3738d6b381ca35719" translate="yes" xml:space="preserve">
          <source>Inspect::clone_from</source>
          <target state="translated">Inspect::clone_from</target>
        </trans-unit>
        <trans-unit id="f20fee187ea64cd2682fd76ef634f46c65ea7337" translate="yes" xml:space="preserve">
          <source>Inspect::clone_into</source>
          <target state="translated">Inspect::clone_into</target>
        </trans-unit>
        <trans-unit id="91d60f6fbbeb3649b6191055cd46e14268f30490" translate="yes" xml:space="preserve">
          <source>Inspect::cloned</source>
          <target state="translated">Inspect::cloned</target>
        </trans-unit>
        <trans-unit id="85a2573bc9e0fcf94624c4b800d4b5742004e819" translate="yes" xml:space="preserve">
          <source>Inspect::cmp</source>
          <target state="translated">Inspect::cmp</target>
        </trans-unit>
        <trans-unit id="bb80987b9610829409c7cf311bd83c99cafb9358" translate="yes" xml:space="preserve">
          <source>Inspect::collect</source>
          <target state="translated">Inspect::collect</target>
        </trans-unit>
        <trans-unit id="6c4755e22c04a1a561bd40c8f7ed7cc9e14afdd5" translate="yes" xml:space="preserve">
          <source>Inspect::copied</source>
          <target state="translated">Inspect::copied</target>
        </trans-unit>
        <trans-unit id="d91465c1eb8c20ff2aaf256018f191b4b51027db" translate="yes" xml:space="preserve">
          <source>Inspect::count</source>
          <target state="translated">Inspect::count</target>
        </trans-unit>
        <trans-unit id="f6a3530affc366af3c3031653f04c92d94544c6f" translate="yes" xml:space="preserve">
          <source>Inspect::cycle</source>
          <target state="translated">Inspect::cycle</target>
        </trans-unit>
        <trans-unit id="2ef8727649c440036fbfd895887f256337974360" translate="yes" xml:space="preserve">
          <source>Inspect::enumerate</source>
          <target state="translated">Inspect::enumerate</target>
        </trans-unit>
        <trans-unit id="90d29ac40ce8f2f13585d9242b559870d571b0d2" translate="yes" xml:space="preserve">
          <source>Inspect::eq</source>
          <target state="translated">Inspect::eq</target>
        </trans-unit>
        <trans-unit id="3c8af74b0f8d034e93cc2689eb1582aea35cd194" translate="yes" xml:space="preserve">
          <source>Inspect::filter</source>
          <target state="translated">Inspect::filter</target>
        </trans-unit>
        <trans-unit id="0c1d967d962d5542a61729409b6700ebf061e41a" translate="yes" xml:space="preserve">
          <source>Inspect::filter_map</source>
          <target state="translated">Inspect::filter_map</target>
        </trans-unit>
        <trans-unit id="ef11d99b08eee4456cbbcf30c8d5eaf30c8a59bd" translate="yes" xml:space="preserve">
          <source>Inspect::find</source>
          <target state="translated">Inspect::find</target>
        </trans-unit>
        <trans-unit id="de75c9aaf20b405a1c60fd94f4dbe93e04bb79b9" translate="yes" xml:space="preserve">
          <source>Inspect::find_map</source>
          <target state="translated">Inspect::find_map</target>
        </trans-unit>
        <trans-unit id="4bdd706bdfb04e01d1c9af213d5586e2748a2444" translate="yes" xml:space="preserve">
          <source>Inspect::flat_map</source>
          <target state="translated">Inspect::flat_map</target>
        </trans-unit>
        <trans-unit id="adc62575b9ec6c48f327e8e73d67dd12a37fd54f" translate="yes" xml:space="preserve">
          <source>Inspect::flatten</source>
          <target state="translated">Inspect::flatten</target>
        </trans-unit>
        <trans-unit id="bf64f53f8ddafacb88390ac8654fa5e287a73a7c" translate="yes" xml:space="preserve">
          <source>Inspect::fmt</source>
          <target state="translated">Inspect::fmt</target>
        </trans-unit>
        <trans-unit id="e1203b82ecf5e7d86eeb57728448c3072c4d31ca" translate="yes" xml:space="preserve">
          <source>Inspect::fold</source>
          <target state="translated">Inspect::fold</target>
        </trans-unit>
        <trans-unit id="e36f213246f9d2f573670ffad6151bd06e3fa586" translate="yes" xml:space="preserve">
          <source>Inspect::for_each</source>
          <target state="translated">Inspect::for_each</target>
        </trans-unit>
        <trans-unit id="e7c3f5132be9e5287630addcdee29ef7865ef06d" translate="yes" xml:space="preserve">
          <source>Inspect::from</source>
          <target state="translated">Inspect::from</target>
        </trans-unit>
        <trans-unit id="fe4bfacc82f6be56fbd2cbdacbd9f9c98dbeb4d0" translate="yes" xml:space="preserve">
          <source>Inspect::fuse</source>
          <target state="translated">Inspect::fuse</target>
        </trans-unit>
        <trans-unit id="18e6f5734f2efd739f3505c74a0c0d087a45dc44" translate="yes" xml:space="preserve">
          <source>Inspect::ge</source>
          <target state="translated">Inspect::ge</target>
        </trans-unit>
        <trans-unit id="51b9499c2f6bcf728ec327afb3eadb4e80054ef7" translate="yes" xml:space="preserve">
          <source>Inspect::gt</source>
          <target state="translated">Inspect::gt</target>
        </trans-unit>
        <trans-unit id="df78def6e9a15f9326fc866aa7162363317dfe3c" translate="yes" xml:space="preserve">
          <source>Inspect::inspect</source>
          <target state="translated">Inspect::inspect</target>
        </trans-unit>
        <trans-unit id="cde84bc6a1ac6acfa3ca27e39148f1683f7a639a" translate="yes" xml:space="preserve">
          <source>Inspect::into</source>
          <target state="translated">Inspect::into</target>
        </trans-unit>
        <trans-unit id="0c85f8b299a3868a074eadb647478881cca1f5f2" translate="yes" xml:space="preserve">
          <source>Inspect::into_iter</source>
          <target state="translated">Inspect::into_iter</target>
        </trans-unit>
        <trans-unit id="93bdbca2f9e35d0382950f48be8119f4c4cd8c39" translate="yes" xml:space="preserve">
          <source>Inspect::is_empty</source>
          <target state="translated">Inspect::is_empty</target>
        </trans-unit>
        <trans-unit id="6cb061e34832197156e0eae9b796318c52eae21c" translate="yes" xml:space="preserve">
          <source>Inspect::is_sorted</source>
          <target state="translated">Inspect::is_sorted</target>
        </trans-unit>
        <trans-unit id="0b700978aa9715e5aeabd053030f7e06e5dfdbe8" translate="yes" xml:space="preserve">
          <source>Inspect::is_sorted_by</source>
          <target state="translated">Inspect::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="01522e5b03123c9816813cfbecb670d36dcf9bae" translate="yes" xml:space="preserve">
          <source>Inspect::is_sorted_by_key</source>
          <target state="translated">Inspect::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="97c7968340cdbfc55e6279e63210f8319602c3b1" translate="yes" xml:space="preserve">
          <source>Inspect::last</source>
          <target state="translated">Inspect::last</target>
        </trans-unit>
        <trans-unit id="1641c5ab204a86bd76b52647b967fa3844ee555e" translate="yes" xml:space="preserve">
          <source>Inspect::le</source>
          <target state="translated">Inspect::le</target>
        </trans-unit>
        <trans-unit id="8fedbf984d9131a9c32910d0dd8cd507c9ae41f1" translate="yes" xml:space="preserve">
          <source>Inspect::len</source>
          <target state="translated">Inspect::len</target>
        </trans-unit>
        <trans-unit id="2aae13f70bf251eedf4d622e3c8e8d7ebe509466" translate="yes" xml:space="preserve">
          <source>Inspect::lt</source>
          <target state="translated">Inspect::lt</target>
        </trans-unit>
        <trans-unit id="3c10daeba2bb0af4fb652f56b13c4f712081ee60" translate="yes" xml:space="preserve">
          <source>Inspect::map</source>
          <target state="translated">Inspect::map</target>
        </trans-unit>
        <trans-unit id="d7ab985e5175dcb4007a24ad2073cd92e1ee725b" translate="yes" xml:space="preserve">
          <source>Inspect::max</source>
          <target state="translated">Inspect::max</target>
        </trans-unit>
        <trans-unit id="5548cb84f4f36e68e97b0766437c90e71bec388e" translate="yes" xml:space="preserve">
          <source>Inspect::max_by</source>
          <target state="translated">Inspect::max_by</target>
        </trans-unit>
        <trans-unit id="dce539004497e98e80382919f2b44ac4f343a42e" translate="yes" xml:space="preserve">
          <source>Inspect::max_by_key</source>
          <target state="translated">Inspect::max_by_key</target>
        </trans-unit>
        <trans-unit id="588f749d074427554e4d2614e02fff13ad9cd053" translate="yes" xml:space="preserve">
          <source>Inspect::min</source>
          <target state="translated">Inspect::min</target>
        </trans-unit>
        <trans-unit id="60fe678c3fd98d803d7a0a967cf63b451cdaf79c" translate="yes" xml:space="preserve">
          <source>Inspect::min_by</source>
          <target state="translated">Inspect::min_by</target>
        </trans-unit>
        <trans-unit id="2487d43ef493a331b1b717bc22f40361c1ef635a" translate="yes" xml:space="preserve">
          <source>Inspect::min_by_key</source>
          <target state="translated">Inspect::min_by_key</target>
        </trans-unit>
        <trans-unit id="ffc55c77a0a3cf78936319f186df9927df3e0ccd" translate="yes" xml:space="preserve">
          <source>Inspect::ne</source>
          <target state="translated">Inspect::ne</target>
        </trans-unit>
        <trans-unit id="a43fcb5b031c0ce3926f10977d7f6a10a43f6208" translate="yes" xml:space="preserve">
          <source>Inspect::next</source>
          <target state="translated">Inspect::next</target>
        </trans-unit>
        <trans-unit id="6febe3467ee6ea45f701752f64651a80fe8404ab" translate="yes" xml:space="preserve">
          <source>Inspect::next_back</source>
          <target state="translated">Inspect::next_back</target>
        </trans-unit>
        <trans-unit id="0f9d290f3781cb4ac95ed05a1829eb899359b7f9" translate="yes" xml:space="preserve">
          <source>Inspect::nth</source>
          <target state="translated">Inspect::nth</target>
        </trans-unit>
        <trans-unit id="633dbdd78d8cdd2854d53a34adbb447ab4e90331" translate="yes" xml:space="preserve">
          <source>Inspect::nth_back</source>
          <target state="translated">Inspect::nth_back</target>
        </trans-unit>
        <trans-unit id="fc4ec8ac3236397826a770a15ac100842f901223" translate="yes" xml:space="preserve">
          <source>Inspect::partial_cmp</source>
          <target state="translated">Inspect::partial_cmp</target>
        </trans-unit>
        <trans-unit id="40853e163585e56c8285d38aa5808ca70dc06c35" translate="yes" xml:space="preserve">
          <source>Inspect::partition</source>
          <target state="translated">Inspect::partition</target>
        </trans-unit>
        <trans-unit id="9434c28e5a571fffcf6e901ec452b5ae6a98ab38" translate="yes" xml:space="preserve">
          <source>Inspect::peekable</source>
          <target state="translated">Inspect::peekable</target>
        </trans-unit>
        <trans-unit id="43968189a660c3e4fac603b379bde0cd86ad697c" translate="yes" xml:space="preserve">
          <source>Inspect::position</source>
          <target state="translated">Inspect::position</target>
        </trans-unit>
        <trans-unit id="89b4972ffab1f05ea2fbde1d69c01d599123b156" translate="yes" xml:space="preserve">
          <source>Inspect::product</source>
          <target state="translated">Inspect::product</target>
        </trans-unit>
        <trans-unit id="0443653aa8a5d69a1b0d33c9f17e2c9254f5f5d7" translate="yes" xml:space="preserve">
          <source>Inspect::rev</source>
          <target state="translated">Inspect::rev</target>
        </trans-unit>
        <trans-unit id="7cb21ca083cda72535e929cef63f871b4f3cf651" translate="yes" xml:space="preserve">
          <source>Inspect::rfind</source>
          <target state="translated">Inspect::rfind</target>
        </trans-unit>
        <trans-unit id="f79e10ec84996051e8312ada6ac965fccb6846de" translate="yes" xml:space="preserve">
          <source>Inspect::rfold</source>
          <target state="translated">Inspect::rfold</target>
        </trans-unit>
        <trans-unit id="f78976291c9758ab5955ca36b2caedb636e425a2" translate="yes" xml:space="preserve">
          <source>Inspect::rposition</source>
          <target state="translated">Inspect::rposition</target>
        </trans-unit>
        <trans-unit id="2392835414c1e0b5afa2ace3b96de2ef5ff9083c" translate="yes" xml:space="preserve">
          <source>Inspect::scan</source>
          <target state="translated">Inspect::scan</target>
        </trans-unit>
        <trans-unit id="3e468495e996e3f520360765bb1983040761bf4d" translate="yes" xml:space="preserve">
          <source>Inspect::size_hint</source>
          <target state="translated">Inspect::size_hint</target>
        </trans-unit>
        <trans-unit id="65d5d88728cb3772dee70aa6ae26fe906858cdfa" translate="yes" xml:space="preserve">
          <source>Inspect::skip</source>
          <target state="translated">Inspect::skip</target>
        </trans-unit>
        <trans-unit id="e4df02a7fa585f7bf67e2c2e7620ec2b27bf223a" translate="yes" xml:space="preserve">
          <source>Inspect::skip_while</source>
          <target state="translated">Inspect::skip_while</target>
        </trans-unit>
        <trans-unit id="81611aac4ee662fdf8e1bb6309a5396db2852250" translate="yes" xml:space="preserve">
          <source>Inspect::step_by</source>
          <target state="translated">Inspect::step_by</target>
        </trans-unit>
        <trans-unit id="333ad3419c346fac8b8d3c0fd4cc6a07785ed3a9" translate="yes" xml:space="preserve">
          <source>Inspect::sum</source>
          <target state="translated">Inspect::sum</target>
        </trans-unit>
        <trans-unit id="07c4846ffa005c2b497a796ecdc14a564003a4a8" translate="yes" xml:space="preserve">
          <source>Inspect::take</source>
          <target state="translated">Inspect::take</target>
        </trans-unit>
        <trans-unit id="4f28a1534dff8b2e2c944f0bfaafe96286e1baaa" translate="yes" xml:space="preserve">
          <source>Inspect::take_while</source>
          <target state="translated">Inspect::take_while</target>
        </trans-unit>
        <trans-unit id="2a423ad3eae2fec9385b69311ba93e53244f0ad5" translate="yes" xml:space="preserve">
          <source>Inspect::to_owned</source>
          <target state="translated">Inspect::to_owned</target>
        </trans-unit>
        <trans-unit id="a6362c52c757937e435b1eeef2d9ab055596b389" translate="yes" xml:space="preserve">
          <source>Inspect::try_fold</source>
          <target state="translated">Inspect::try_fold</target>
        </trans-unit>
        <trans-unit id="b44f87043be8c6e37fe81b5e52b558de6e2af9af" translate="yes" xml:space="preserve">
          <source>Inspect::try_for_each</source>
          <target state="translated">Inspect::try_for_each</target>
        </trans-unit>
        <trans-unit id="2933e22002dc23a223d51ac3b5541e6507691dd0" translate="yes" xml:space="preserve">
          <source>Inspect::try_from</source>
          <target state="translated">Inspect::try_from</target>
        </trans-unit>
        <trans-unit id="b21cad5abb074d64e5dc5deb026a557335ea6176" translate="yes" xml:space="preserve">
          <source>Inspect::try_into</source>
          <target state="translated">Inspect::try_into</target>
        </trans-unit>
        <trans-unit id="1fd81bf07a71bc1209ac8f8b1e33f27ed1378a45" translate="yes" xml:space="preserve">
          <source>Inspect::try_rfold</source>
          <target state="translated">Inspect::try_rfold</target>
        </trans-unit>
        <trans-unit id="0e9b8b3f317cc849ace42df081dd27ff57c0541e" translate="yes" xml:space="preserve">
          <source>Inspect::type_id</source>
          <target state="translated">Inspect::type_id</target>
        </trans-unit>
        <trans-unit id="41140164c66c290cc48804ad982a4e7115e22da9" translate="yes" xml:space="preserve">
          <source>Inspect::unzip</source>
          <target state="translated">Inspect::unzip</target>
        </trans-unit>
        <trans-unit id="fe0d4b72621d75d8a76f592b0efd07f85c74dca9" translate="yes" xml:space="preserve">
          <source>Inspect::zip</source>
          <target state="translated">Inspect::zip</target>
        </trans-unit>
        <trans-unit id="8a955d8f62cddda7e4b47eb2772b795f5ac4e929" translate="yes" xml:space="preserve">
          <source>Inspecting a foreign C string:</source>
          <target state="translated">检查一个外来的C字符串。</target>
        </trans-unit>
        <trans-unit id="24c028aad5e4f71eb7323a7fdf907c77523124b6" translate="yes" xml:space="preserve">
          <source>Inspection and manipulation of the process's environment.</source>
          <target state="translated">对工艺环境的检查和操纵。</target>
        </trans-unit>
        <trans-unit id="2cc2859dfe537be8955a457d12a963c9483cf55a" translate="yes" xml:space="preserve">
          <source>Inspects an environment variable at compile time.</source>
          <target state="translated">在编译时检查环境变量。</target>
        </trans-unit>
        <trans-unit id="da805945f5409d032b925fa086323fea9942dc3f" translate="yes" xml:space="preserve">
          <source>Install binaries from &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt;</source>
          <target state="translated">从&lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt;安装二进制文件</target>
        </trans-unit>
        <trans-unit id="27807feadc6086bb00cc2f2fc11c34f918ce0b35" translate="yes" xml:space="preserve">
          <source>Install the latest stable version of Rust using &lt;code&gt;rustup&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;rustup&lt;/code&gt; 安装最新的稳定版Rust</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="8bc95ab544ffc801a72a650102cb1b4b0031b02c" translate="yes" xml:space="preserve">
          <source>Installing &lt;code id=&quot;installing-rustup-on-linux-or-macos&quot;&gt;rustup&lt;/code&gt; on Linux or macOS</source>
          <target state="translated">在Linux或macOS上安装 &lt;code id=&quot;installing-rustup-on-linux-or-macos&quot;&gt;rustup&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d41546865affb2f20149c73fe77f1fc24d402ca2" translate="yes" xml:space="preserve">
          <source>Installing &lt;code id=&quot;installing-rustup-on-windows&quot;&gt;rustup&lt;/code&gt; on Windows</source>
          <target state="translated">在Windows上安装 &lt;code id=&quot;installing-rustup-on-windows&quot;&gt;rustup&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e19f38815d4acff6e4f527222a8aef2789228129" translate="yes" xml:space="preserve">
          <source>Installing Binaries from Crates.io with &lt;code id=&quot;installing-binaries-from-cratesio-with-cargo-install&quot;&gt;cargo install&lt;/code&gt;</source>
          <target state="translated">从Crates.io与安装二进制文件 &lt;code id=&quot;installing-binaries-from-cratesio-with-cargo-install&quot;&gt;cargo install&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b810516d3307cdf27a35ee79c057d48b6aa21230" translate="yes" xml:space="preserve">
          <source>Installing Rust on Linux, macOS, and Windows</source>
          <target state="translated">在Linux、macOS和Windows上安装Rust。</target>
        </trans-unit>
        <trans-unit id="2c30b9b10b587e1e4e3853ef85ec4740848abbd7" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;Fn&lt;/code&gt; can be called repeatedly without mutating state.</source>
          <target state="translated">&lt;code&gt;Fn&lt;/code&gt; 的实例可以重复调用而不改变状态。</target>
        </trans-unit>
        <trans-unit id="1322a032825805d3a73d3fe7e3a12985cf1de692" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;FnMut&lt;/code&gt; can be called repeatedly and may mutate state.</source>
          <target state="translated">&lt;code&gt;FnMut&lt;/code&gt; 的实例可以重复调用，并且可以改变状态。</target>
        </trans-unit>
        <trans-unit id="b9bc8df98d67671ea9af2ebbd9472094277d62c7" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;FnOnce&lt;/code&gt; can be called, but might not be callable multiple times. Because of this, if the only thing known about a type is that it implements &lt;code&gt;FnOnce&lt;/code&gt;, it can only be called once.</source>
          <target state="translated">可以调用 &lt;code&gt;FnOnce&lt;/code&gt; 的实例，但可能无法多次调用。因此，如果关于类型的唯一已知信息是它实现 &lt;code&gt;FnOnce&lt;/code&gt; ，则只能调用一次。</target>
        </trans-unit>
        <trans-unit id="5b9d31413b772c5dc3e318115ee395c8ad114636" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;Hasher&lt;/code&gt; usually represent state that is changed while hashing data.</source>
          <target state="translated">&lt;code&gt;Hasher&lt;/code&gt; 的实例通常表示在对数据进行哈希处理时更改的状态。</target>
        </trans-unit>
        <trans-unit id="21ec3e515a993282791572f7098d9de91b54a575" translate="yes" xml:space="preserve">
          <source>Instances of this &lt;code&gt;struct&lt;/code&gt; can be obtained by matching against the &lt;a href=&quot;enum.component#variant.Prefix&quot;&gt;&lt;code&gt;Prefix&lt;/code&gt; variant&lt;/a&gt; on &lt;a href=&quot;enum.component&quot;&gt;&lt;code&gt;Component&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以通过与&lt;a href=&quot;enum.component&quot;&gt; &lt;code&gt;Component&lt;/code&gt; &lt;/a&gt;上的&lt;a href=&quot;enum.component#variant.Prefix&quot;&gt; &lt;code&gt;Prefix&lt;/code&gt; &lt;/a&gt;变体匹配来获得此 &lt;code&gt;struct&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="e5dd7083ff5f07cec7b9b34c02884013f777ac05" translate="yes" xml:space="preserve">
          <source>Instant</source>
          <target state="translated">Instant</target>
        </trans-unit>
        <trans-unit id="b5ac78fce22209b999309e8a7436e97b10622104" translate="yes" xml:space="preserve">
          <source>Instant::add</source>
          <target state="translated">Instant::add</target>
        </trans-unit>
        <trans-unit id="e5c83578445bb46f2191fb87fb2e970bfde98993" translate="yes" xml:space="preserve">
          <source>Instant::add_assign</source>
          <target state="translated">Instant::add_assign</target>
        </trans-unit>
        <trans-unit id="0c8c3b63eb155a52c73bfac3155d0197dd1a085d" translate="yes" xml:space="preserve">
          <source>Instant::borrow</source>
          <target state="translated">Instant::borrow</target>
        </trans-unit>
        <trans-unit id="f0f79568d43ec6cff172ef06950242a1e38ab9d4" translate="yes" xml:space="preserve">
          <source>Instant::borrow_mut</source>
          <target state="translated">Instant::borrow_mut</target>
        </trans-unit>
        <trans-unit id="2e29432f378f62b734e945a4acd41b7defd436d4" translate="yes" xml:space="preserve">
          <source>Instant::checked_add</source>
          <target state="translated">Instant::checked_add</target>
        </trans-unit>
        <trans-unit id="eb4f8d11d037399c427f9a46cdb4e74b0b9fb310" translate="yes" xml:space="preserve">
          <source>Instant::checked_duration_since</source>
          <target state="translated">Instant::checked_duration_since</target>
        </trans-unit>
        <trans-unit id="f623e63718dd7f5e08fc4822d3ea1e552e483468" translate="yes" xml:space="preserve">
          <source>Instant::checked_sub</source>
          <target state="translated">Instant::checked_sub</target>
        </trans-unit>
        <trans-unit id="f7961f96937c07d9b42758cbb78758eeb1202726" translate="yes" xml:space="preserve">
          <source>Instant::clamp</source>
          <target state="translated">Instant::clamp</target>
        </trans-unit>
        <trans-unit id="a221c46ded2b61b64dcb1f60bfcb2b2993a3a5c9" translate="yes" xml:space="preserve">
          <source>Instant::clone</source>
          <target state="translated">Instant::clone</target>
        </trans-unit>
        <trans-unit id="0e4e4ec37ffa30c7418b3d4c01f925199339bd78" translate="yes" xml:space="preserve">
          <source>Instant::clone_from</source>
          <target state="translated">Instant::clone_from</target>
        </trans-unit>
        <trans-unit id="8b5bc24c2667bb02ad8d0c988c0c260c44857a92" translate="yes" xml:space="preserve">
          <source>Instant::clone_into</source>
          <target state="translated">Instant::clone_into</target>
        </trans-unit>
        <trans-unit id="e2495f5ad07793d7e77643dd4f486d02627866e1" translate="yes" xml:space="preserve">
          <source>Instant::cmp</source>
          <target state="translated">Instant::cmp</target>
        </trans-unit>
        <trans-unit id="5bb91176ea9d1de93e298e46888f1699788ffa0c" translate="yes" xml:space="preserve">
          <source>Instant::duration_since</source>
          <target state="translated">Instant::duration_since</target>
        </trans-unit>
        <trans-unit id="afcae638aa376f5908f1f30bd28087f8ac6046bd" translate="yes" xml:space="preserve">
          <source>Instant::elapsed</source>
          <target state="translated">Instant::elapsed</target>
        </trans-unit>
        <trans-unit id="243a247fce13eeb9a4a84c1d5fb1dac67574f6d1" translate="yes" xml:space="preserve">
          <source>Instant::eq</source>
          <target state="translated">Instant::eq</target>
        </trans-unit>
        <trans-unit id="c0e9c53ccf6d3d28525b5acc190c32004eb85ec8" translate="yes" xml:space="preserve">
          <source>Instant::fmt</source>
          <target state="translated">Instant::fmt</target>
        </trans-unit>
        <trans-unit id="91e13bb77c7e58f374e2d3daa91a9fc513ccb0bb" translate="yes" xml:space="preserve">
          <source>Instant::from</source>
          <target state="translated">Instant::from</target>
        </trans-unit>
        <trans-unit id="666400c2a2e214fcba1e53bc6d351d576dedbf88" translate="yes" xml:space="preserve">
          <source>Instant::ge</source>
          <target state="translated">Instant::ge</target>
        </trans-unit>
        <trans-unit id="e1545f7a496f8f598ffee1a4b219bdc08ac325eb" translate="yes" xml:space="preserve">
          <source>Instant::gt</source>
          <target state="translated">Instant::gt</target>
        </trans-unit>
        <trans-unit id="41c216d5664a8a7e6d226c8c88076fb379772e86" translate="yes" xml:space="preserve">
          <source>Instant::hash</source>
          <target state="translated">Instant::hash</target>
        </trans-unit>
        <trans-unit id="754e2486a3657aa16f85c8a3399792e46fc3859e" translate="yes" xml:space="preserve">
          <source>Instant::hash_slice</source>
          <target state="translated">Instant::hash_slice</target>
        </trans-unit>
        <trans-unit id="77b8dcf93181fdfb9c2ccd019961362f091bc10d" translate="yes" xml:space="preserve">
          <source>Instant::into</source>
          <target state="translated">Instant::into</target>
        </trans-unit>
        <trans-unit id="27c580d98c20ea09e90f23c4e7129dd284f1e540" translate="yes" xml:space="preserve">
          <source>Instant::le</source>
          <target state="translated">Instant::le</target>
        </trans-unit>
        <trans-unit id="077dca8f66a9fddef8fd3afcd25ba70cba946a7c" translate="yes" xml:space="preserve">
          <source>Instant::lt</source>
          <target state="translated">Instant::lt</target>
        </trans-unit>
        <trans-unit id="5f279b9b945d564222473676176af94a42a66352" translate="yes" xml:space="preserve">
          <source>Instant::max</source>
          <target state="translated">Instant::max</target>
        </trans-unit>
        <trans-unit id="1fef472f05cd2b320ab2c2019b4644689c5cb2f0" translate="yes" xml:space="preserve">
          <source>Instant::min</source>
          <target state="translated">Instant::min</target>
        </trans-unit>
        <trans-unit id="2607167b08c7b923c8543daeccd1a89c638f791c" translate="yes" xml:space="preserve">
          <source>Instant::ne</source>
          <target state="translated">Instant::ne</target>
        </trans-unit>
        <trans-unit id="2e89ed9eeb6e6fedfd76e029598f95d52ac89e9c" translate="yes" xml:space="preserve">
          <source>Instant::now</source>
          <target state="translated">Instant::now</target>
        </trans-unit>
        <trans-unit id="ef217fe283814eb7e0d5fb84203270e40f97b8d2" translate="yes" xml:space="preserve">
          <source>Instant::partial_cmp</source>
          <target state="translated">Instant::partial_cmp</target>
        </trans-unit>
        <trans-unit id="bf1b8520fb2822b3f5cb83bccfd646a516fffcbf" translate="yes" xml:space="preserve">
          <source>Instant::saturating_duration_since</source>
          <target state="translated">Instant::saturating_duration_since</target>
        </trans-unit>
        <trans-unit id="9ed1ccf1a589fe42420c89b940730dc8b7982f7d" translate="yes" xml:space="preserve">
          <source>Instant::sub</source>
          <target state="translated">Instant::sub</target>
        </trans-unit>
        <trans-unit id="57ade0b6d4dcc1517fdb9cf85b73a61857e80559" translate="yes" xml:space="preserve">
          <source>Instant::sub_assign</source>
          <target state="translated">Instant::sub_assign</target>
        </trans-unit>
        <trans-unit id="bdec0c97db20d86ebdd661571569d5a69a65be45" translate="yes" xml:space="preserve">
          <source>Instant::to_owned</source>
          <target state="translated">Instant::to_owned</target>
        </trans-unit>
        <trans-unit id="0901e5a9482040c503269599b849e7e300181ba0" translate="yes" xml:space="preserve">
          <source>Instant::try_from</source>
          <target state="translated">Instant::try_from</target>
        </trans-unit>
        <trans-unit id="5df3e1f653d0b4e8c037a1c9641f59e6a8cbc24c" translate="yes" xml:space="preserve">
          <source>Instant::try_into</source>
          <target state="translated">Instant::try_into</target>
        </trans-unit>
        <trans-unit id="69f76dc23d56db8a52e6e54a74ec2db10116eb78" translate="yes" xml:space="preserve">
          <source>Instant::type_id</source>
          <target state="translated">Instant::type_id</target>
        </trans-unit>
        <trans-unit id="001172aad080d8306d5d4d1b5dc437b8d68f3a48" translate="yes" xml:space="preserve">
          <source>Instantiating enum variants involves explicitly using the enum's name as its namespace, followed by one of its variants. &lt;code&gt;SimpleEnum::SecondVariant&lt;/code&gt; would be an example from above. When data follows along with a variant, such as with rust's built-in &lt;a href=&quot;option/enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt; type, the data is added as the type describes, for example &lt;code&gt;Option::Some(123)&lt;/code&gt;. The same follows with struct-like variants, with things looking like &lt;code&gt;ComplexEnum::LotsOfThings { usual_struct_stuff: true, blah: &quot;hello!&quot;.to_string(), }&lt;/code&gt;. Empty Enums are similar to () in that they cannot be instantiated at all, and are used mainly to mess with the type system in interesting ways.</source>
          <target state="translated">实例化枚举变量涉及显式地使用枚举的名称作为其命名空间，后跟一个变量。 &lt;code&gt;SimpleEnum::SecondVariant&lt;/code&gt; 将是上面的一个示例。当数据跟随一个变体（例如rust的内置&lt;a href=&quot;option/enum.option&quot;&gt; &lt;code&gt;Option&lt;/code&gt; &lt;/a&gt;类型）时，数据将按照类型描述添加，例如 &lt;code&gt;Option::Some(123)&lt;/code&gt; 。类似结构的变体也是如此，事情看起来像 &lt;code&gt;ComplexEnum::LotsOfThings { usual_struct_stuff: true, blah: &quot;hello!&quot;.to_string(), }&lt;/code&gt; 。空枚举与（）相似，因为它们根本无法实例化，并且主要用于以有趣的方式弄乱类型系统。</target>
        </trans-unit>
        <trans-unit id="89d417c0066da918ab986006990b8c13e4a1c9d4" translate="yes" xml:space="preserve">
          <source>Instantiation</source>
          <target state="translated">Instantiation</target>
        </trans-unit>
        <trans-unit id="b9d10d744d3b830949e2bf595c80e084be4f440a" translate="yes" xml:space="preserve">
          <source>Instantiations of struct or variant fields</source>
          <target state="translated">结构或变体字段的实例化</target>
        </trans-unit>
        <trans-unit id="052f953d4dc163101293e43033ca426c81cc5b70" translate="yes" xml:space="preserve">
          <source>Instantiations of struct, union, or enum variant fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b4faec33775d5b4afedfc919179e22bbcfd3c9" translate="yes" xml:space="preserve">
          <source>Instants are always guaranteed to be no less than any previously measured instant when created, and are often useful for tasks such as measuring benchmarks or timing how long an operation takes.</source>
          <target state="translated">瞬时总是保证在创建时不低于任何先前测量的瞬时,并且通常对测量基准或对操作所需时间进行计时等任务非常有用。</target>
        </trans-unit>
        <trans-unit id="283f4073d67eb71b9aee283558af89f84e2066b3" translate="yes" xml:space="preserve">
          <source>Instants are opaque types that can only be compared to one another. There is no method to get &quot;the number of seconds&quot; from an instant. Instead, it only allows measuring the duration between two instants (or comparing two instants).</source>
          <target state="translated">瞬时是不透明的类型,只能相互比较。没有任何方法可以从一个瞬时中获得 &quot;秒数&quot;,而只允许测量两个瞬时之间的持续时间(或比较两个瞬时)。相反,它只允许测量两个瞬时之间的持续时间(或比较两个瞬时)。</target>
        </trans-unit>
        <trans-unit id="61804bc8442fc7d7bb4e71e306aef5c0aea1b60a" translate="yes" xml:space="preserve">
          <source>Instead it is used to prevent moves through the type system, by controlling the behavior of pointers &lt;code&gt;P&lt;/code&gt; wrapped in the &lt;a href=&quot;../pin/struct.pin&quot;&gt;&lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt;&lt;/a&gt; wrapper, which &quot;pin&quot; the type in place by not allowing it to be moved out of them. See the &lt;a href=&quot;../pin/index&quot;&gt;&lt;code&gt;pin module&lt;/code&gt;&lt;/a&gt; documentation for more information on pinning.</source>
          <target state="translated">而是通过控制包装在&lt;a href=&quot;../pin/struct.pin&quot;&gt; &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; &lt;/a&gt;包装器中的指针 &lt;code&gt;P&lt;/code&gt; 的行为来防止在类型系统中移动，该包装器通过不允许将其移出类型而将其&amp;ldquo;固定&amp;rdquo;在适当的位置。有关固定的更多信息，请参见&lt;a href=&quot;../pin/index&quot;&gt; &lt;code&gt;pin module&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="3589fb3ebd4ad6821bd6d9b7e8dfdf86bb935287" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;ok&lt;/code&gt;, the line &lt;code&gt;test tests::another&lt;/code&gt; shows &lt;code&gt;FAILED&lt;/code&gt;. Two new sections appear between the individual results and the summary: the first section displays the detailed reason for each test failure. In this case, &lt;code&gt;another&lt;/code&gt; failed because it &lt;code&gt;panicked at 'Make this test fail'&lt;/code&gt;, which happened on line 10 in the &lt;em&gt;src/lib.rs&lt;/em&gt; file. The next section lists just the names of all the failing tests, which is useful when there are lots of tests and lots of detailed failing test output. We can use the name of a failing test to run just that test to more easily debug it; we&amp;rsquo;ll talk more about ways to run tests in the &lt;a href=&quot;ch11-02-running-tests#controlling-how-tests-are-run&quot;&gt;&amp;ldquo;Controlling How Tests Are Run&amp;rdquo;&lt;/a&gt; section.</source>
          <target state="translated">而不是 &lt;code&gt;ok&lt;/code&gt; ，行 &lt;code&gt;test tests::another&lt;/code&gt; 显示 &lt;code&gt;FAILED&lt;/code&gt; 。各个结果和摘要之间会出现两个新部分：第一部分显示每个测试失败的详细原因。在这种情况下， &lt;code&gt;another&lt;/code&gt; 失败，因为它对&lt;em&gt;src / lib.rs&lt;/em&gt;文件中的第10行发生了 &lt;code&gt;panicked at 'Make this test fail'&lt;/code&gt; 。下一节仅列出所有失败测试的名称，这在有大量测试和大量详细的失败测试输出时很有用。我们可以使用失败测试的名称来运行该测试，以便更轻松地对其进行调试。我们将在&lt;a href=&quot;ch11-02-running-tests#controlling-how-tests-are-run&quot;&gt;&amp;ldquo;控制测试的运行方式&amp;rdquo;&lt;/a&gt;部分中详细讨论运行测试的方式。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1a520d0103dd9e1e65d5d07eb5562a910a387f00" translate="yes" xml:space="preserve">
          <source>Instead of a concrete type for the &lt;code&gt;item&lt;/code&gt; parameter, we specify the &lt;code&gt;impl&lt;/code&gt; keyword and the trait name. This parameter accepts any type that implements the specified trait. In the body of &lt;code&gt;notify&lt;/code&gt;, we can call any methods on &lt;code&gt;item&lt;/code&gt; that come from the &lt;code&gt;Summary&lt;/code&gt; trait, such as &lt;code&gt;summarize&lt;/code&gt;. We can call &lt;code&gt;notify&lt;/code&gt; and pass in any instance of &lt;code&gt;NewsArticle&lt;/code&gt; or &lt;code&gt;Tweet&lt;/code&gt;. Code that calls the function with any other type, such as a &lt;code&gt;String&lt;/code&gt; or an &lt;code&gt;i32&lt;/code&gt;, won&amp;rsquo;t compile because those types don&amp;rsquo;t implement &lt;code&gt;Summary&lt;/code&gt;.</source>
          <target state="translated">我们指定了 &lt;code&gt;impl&lt;/code&gt; 关键字和特征名称，而不是 &lt;code&gt;item&lt;/code&gt; 参数的具体类型。此参数接受实现指定特征的任何类型。在身体 &lt;code&gt;notify&lt;/code&gt; ，我们可以调用任何方法 &lt;code&gt;item&lt;/code&gt; 是来自 &lt;code&gt;Summary&lt;/code&gt; 特质，如 &lt;code&gt;summarize&lt;/code&gt; 。我们可以在 &lt;code&gt;NewsArticle&lt;/code&gt; 或 &lt;code&gt;Tweet&lt;/code&gt; 的任何情况下致电 &lt;code&gt;notify&lt;/code&gt; 和pass 。用其他任何类型（例如 &lt;code&gt;String&lt;/code&gt; 或 &lt;code&gt;i32&lt;/code&gt; )调用该函数的代码都不会编译，因为这些类型没有实现 &lt;code&gt;Summary&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c586c2da19eaf29595cd7783a0bdd1aaa4af1f4c" translate="yes" xml:space="preserve">
          <source>Instead of adding the &lt;code&gt;assert!&lt;/code&gt; macro as we&amp;rsquo;ve done here, we could make &lt;code&gt;new&lt;/code&gt; return a &lt;code&gt;Result&lt;/code&gt; like we did with &lt;code&gt;Config::new&lt;/code&gt; in the I/O project in Listing 12-9. But we&amp;rsquo;ve decided in this case that trying to create a thread pool without any threads should be an unrecoverable error. If you&amp;rsquo;re feeling ambitious, try to write a version of &lt;code&gt;new&lt;/code&gt; with the following signature to compare both versions:</source>
          <target state="translated">而不是添加 &lt;code&gt;assert!&lt;/code&gt; 宏，就像清单12-9中I / O项目中的 &lt;code&gt;Config::new&lt;/code&gt; 一样，可以使 &lt;code&gt;new&lt;/code&gt; 返回 &lt;code&gt;Result&lt;/code&gt; 。但是在这种情况下，我们已经决定，尝试创建没有任何线程的线程池应该是不可恢复的错误。如果您有雄心壮志，请尝试编写带有以下签名的 &lt;code&gt;new&lt;/code&gt; 版本以比较两个版本：</target>
        </trans-unit>
        <trans-unit id="9745bfc2f2927dceb9288ed29cf395b852078f44" translate="yes" xml:space="preserve">
          <source>Instead of always calling the &lt;code&gt;simulated_expensive_calculation&lt;/code&gt; function before the &lt;code&gt;if&lt;/code&gt; blocks, we can define a closure and store the &lt;em&gt;closure&lt;/em&gt; in a variable rather than storing the result of the function call, as shown in Listing 13-5. We can actually move the whole body of &lt;code&gt;simulated_expensive_calculation&lt;/code&gt; within the closure we&amp;rsquo;re introducing here.</source>
          <target state="translated">而不是总是调用 &lt;code&gt;simulated_expensive_calculation&lt;/code&gt; 的功能之前 &lt;code&gt;if&lt;/code&gt; 块，我们可以定义一个封闭和存储&lt;em&gt;封闭&lt;/em&gt;在一个变量，而不是存储函数调用的结果，如清单13-5英寸 实际上，我们可以在此处介绍的闭包内移动整个 &lt;code&gt;simulated_expensive_calculation&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae67e98f84394870dad9c2dee4383fa199b41a3d" translate="yes" xml:space="preserve">
          <source>Instead of comparing the iterator's elements directly, this function compares the keys of the elements, as determined by &lt;code&gt;f&lt;/code&gt;. Apart from that, it's equivalent to &lt;a href=&quot;trait.iterator#method.is_sorted&quot;&gt;&lt;code&gt;is_sorted&lt;/code&gt;&lt;/a&gt;; see its documentation for more information.</source>
          <target state="translated">此函数不是直接比较迭代器的元素，而是比较元素的键（由 &lt;code&gt;f&lt;/code&gt; 确定）。除此之外，它等效于&lt;a href=&quot;trait.iterator#method.is_sorted&quot;&gt; &lt;code&gt;is_sorted&lt;/code&gt; &lt;/a&gt; ; 请参阅其文档以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="3f4a03c266892c8db13bbe1ed2f70b65c01aa093" translate="yes" xml:space="preserve">
          <source>Instead of comparing the slice's elements directly, this function compares the keys of the elements, as determined by &lt;code&gt;f&lt;/code&gt;. Apart from that, it's equivalent to &lt;a href=&quot;#method.is_sorted&quot;&gt;&lt;code&gt;is_sorted&lt;/code&gt;&lt;/a&gt;; see its documentation for more information.</source>
          <target state="translated">此函数不是直接比较切片的元素，而是比较元素的键（由 &lt;code&gt;f&lt;/code&gt; 确定）。除此之外，它等效于&lt;a href=&quot;#method.is_sorted&quot;&gt; &lt;code&gt;is_sorted&lt;/code&gt; &lt;/a&gt; ; 请参阅其文档以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="ab414c3f0e8d06ac0d388f321dffd0ec64ba1540" translate="yes" xml:space="preserve">
          <source>Instead of defining an inherent implementation on a reference, you could also move the reference inside the implementation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf669630673f131e83096baf2080a7fff2853dbb" translate="yes" xml:space="preserve">
          <source>Instead of saving the closure in a variable directly, we save a new instance of &lt;code&gt;Cacher&lt;/code&gt; that holds the closure. Then, in each place we want the result, we call the &lt;code&gt;value&lt;/code&gt; method on the &lt;code&gt;Cacher&lt;/code&gt; instance. We can call the &lt;code&gt;value&lt;/code&gt; method as many times as we want, or not call it at all, and the expensive calculation will be run a maximum of once.</source>
          <target state="translated">与其直接将闭包保存在变量中， &lt;code&gt;Cacher&lt;/code&gt; 保存一个保存闭包的新Cacher实例。然后，在每个需要结果的地方，我们在 &lt;code&gt;Cacher&lt;/code&gt; 实例上调用 &lt;code&gt;value&lt;/code&gt; 方法。我们可以根据需要多次调用 &lt;code&gt;value&lt;/code&gt; 方法，或者根本不调用它，而昂贵的计算最多可以运行一次。</target>
        </trans-unit>
        <trans-unit id="007ce9d48190918926ae8e5decfb3ba7fb1ee115" translate="yes" xml:space="preserve">
          <source>Instead of saving the result of the build in the same directory as our code, Cargo stores it in the &lt;em&gt;target/debug&lt;/em&gt; directory.</source>
          <target state="translated">Cargo并未将构建结果与我们的代码保存在同一目录中，而是将其存储在&lt;em&gt;target / debug&lt;/em&gt;目录中。</target>
        </trans-unit>
        <trans-unit id="12c9e09de719f2e7a3f500e0f9b7335d3a4a658d" translate="yes" xml:space="preserve">
          <source>Instead of stopping at &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, the iterator will instead start again, from the beginning. After iterating again, it will start at the beginning again. And again. And again. Forever.</source>
          <target state="translated">相反，在停止&lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;，迭代器都将改为重新开始，从一开始。再次迭代后，它将再次从头开始。然后再次。然后再次。永远。</target>
        </trans-unit>
        <trans-unit id="57207c003495c85f3158cd50928c0d6b80c8565c" translate="yes" xml:space="preserve">
          <source>Instead of storing a vector of &lt;code&gt;JoinHandle&amp;lt;()&amp;gt;&lt;/code&gt; instances in the thread pool, we&amp;rsquo;ll store instances of the &lt;code&gt;Worker&lt;/code&gt; struct. Each &lt;code&gt;Worker&lt;/code&gt; will store a single &lt;code&gt;JoinHandle&amp;lt;()&amp;gt;&lt;/code&gt; instance. Then we&amp;rsquo;ll implement a method on &lt;code&gt;Worker&lt;/code&gt; that will take a closure of code to run and send it to the already running thread for execution. We&amp;rsquo;ll also give each worker an &lt;code&gt;id&lt;/code&gt; so we can distinguish between the different workers in the pool when logging or debugging.</source>
          <target state="translated">而不是在线程池中存储 &lt;code&gt;JoinHandle&amp;lt;()&amp;gt;&lt;/code&gt; 实例的向量，我们将存储 &lt;code&gt;Worker&lt;/code&gt; 结构的实例。每个 &lt;code&gt;Worker&lt;/code&gt; 将存储一个单独的 &lt;code&gt;JoinHandle&amp;lt;()&amp;gt;&lt;/code&gt; 实例。然后，我们将在 &lt;code&gt;Worker&lt;/code&gt; 上实现一个方法，该方法将关闭代码以运行并将其发送到已运行的线程中以执行。我们还将为每个工作人员提供一个 &lt;code&gt;id&lt;/code&gt; 以便在记录或调试时可以区分池中的不同工作人员。</target>
        </trans-unit>
        <trans-unit id="e496da216bd15fab37b8868b5d0249983379dbc2" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;code&gt;PartialOrd::partial_cmp&lt;/code&gt;, this function uses the given &lt;code&gt;compare&lt;/code&gt; function to determine the ordering of two elements. Apart from that, it's equivalent to &lt;a href=&quot;#method.is_sorted&quot;&gt;&lt;code&gt;is_sorted&lt;/code&gt;&lt;/a&gt;; see its documentation for more information.</source>
          <target state="translated">代替使用 &lt;code&gt;PartialOrd::partial_cmp&lt;/code&gt; ，此函数使用给定的 &lt;code&gt;compare&lt;/code&gt; 函数确定两个元素的顺序。除此之外，它等效于&lt;a href=&quot;#method.is_sorted&quot;&gt; &lt;code&gt;is_sorted&lt;/code&gt; &lt;/a&gt; ;请参阅其文档以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="c10b23d92f193b5b7c4a31db6e9dd35bde4c84df" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;code&gt;PartialOrd::partial_cmp&lt;/code&gt;, this function uses the given &lt;code&gt;compare&lt;/code&gt; function to determine the ordering of two elements. Apart from that, it's equivalent to &lt;a href=&quot;trait.iterator#method.is_sorted&quot;&gt;&lt;code&gt;is_sorted&lt;/code&gt;&lt;/a&gt;; see its documentation for more information.</source>
          <target state="translated">代替使用 &lt;code&gt;PartialOrd::partial_cmp&lt;/code&gt; ，此函数使用给定的 &lt;code&gt;compare&lt;/code&gt; 函数确定两个元素的顺序。除此之外，它等效于&lt;a href=&quot;trait.iterator#method.is_sorted&quot;&gt; &lt;code&gt;is_sorted&lt;/code&gt; &lt;/a&gt; ;请参阅其文档以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="78836dae939176c5518d6cb16a8bc88f88e60ed0" translate="yes" xml:space="preserve">
          <source>Instead, the &lt;code&gt;get&lt;/code&gt; method is generic over the type of the underlying key data, called &lt;code&gt;Q&lt;/code&gt; in the method signature above. It states that &lt;code&gt;K&lt;/code&gt; borrows as a &lt;code&gt;Q&lt;/code&gt; by requiring that &lt;code&gt;K: Borrow&amp;lt;Q&amp;gt;&lt;/code&gt;. By additionally requiring &lt;code&gt;Q: Hash + Eq&lt;/code&gt;, it signals the requirement that &lt;code&gt;K&lt;/code&gt; and &lt;code&gt;Q&lt;/code&gt; have implementations of the &lt;code&gt;Hash&lt;/code&gt; and &lt;code&gt;Eq&lt;/code&gt; traits that produce identical results.</source>
          <target state="translated">相反， &lt;code&gt;get&lt;/code&gt; 方法在基础密钥数据的类型上是通用的，在上面的方法签名中称为 &lt;code&gt;Q&lt;/code&gt; 。它通过要求 &lt;code&gt;K: Borrow&amp;lt;Q&amp;gt;&lt;/code&gt; 声明 &lt;code&gt;K&lt;/code&gt; 作为 &lt;code&gt;Q&lt;/code&gt; 借入。通过额外要求 &lt;code&gt;Q: Hash + Eq&lt;/code&gt; ，它表示要求 &lt;code&gt;K&lt;/code&gt; 和 &lt;code&gt;Q&lt;/code&gt; 具有实现相同结果的 &lt;code&gt;Hash&lt;/code&gt; 和 &lt;code&gt;Eq&lt;/code&gt; 特征的实现。</target>
        </trans-unit>
        <trans-unit id="878f7237ad30bf50b95fb9667897fe778bbcf6bb" translate="yes" xml:space="preserve">
          <source>Instead, we can make a new type and put the validations in a function to create an instance of the type rather than repeating the validations everywhere. That way, it&amp;rsquo;s safe for functions to use the new type in their signatures and confidently use the values they receive. Listing 9-10 shows one way to define a &lt;code&gt;Guess&lt;/code&gt; type that will only create an instance of &lt;code&gt;Guess&lt;/code&gt; if the &lt;code&gt;new&lt;/code&gt; function receives a value between 1 and 100.</source>
          <target state="translated">相反，我们可以创建一个新类型并将验证放入函数中以创建该类型的实例，而不是在所有地方重复进行验证。这样，函数在签名中使用新类型并放心使用其接收的值是安全的。清单9-10显示了一种定义 &lt;code&gt;Guess&lt;/code&gt; 类型的方法，该方法仅在 &lt;code&gt;new&lt;/code&gt; 函数接收到1到100之间的值时才创建 &lt;code&gt;Guess&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="4262f2636f484912c23478cb754110e371d9c5c5" translate="yes" xml:space="preserve">
          <source>Instead, we can use nested paths to bring the same items into scope in one line. We do this by specifying the common part of the path, followed by two colons, and then curly brackets around a list of the parts of the paths that differ, as shown in Listing 7-18.</source>
          <target state="translated">相反,我们可以使用嵌套路径,在一行中把相同的项目纳入作用域。我们可以通过指定路径的共同部分,后面跟两个冒号,然后在路径的不同部分列表周围加上大括号来实现,如清单 7-18 所示。</target>
        </trans-unit>
        <trans-unit id="5890f5912d1fb9403515b5a5574c224c2a726c72" translate="yes" xml:space="preserve">
          <source>Instead, we could write this in a shorter way using &lt;code&gt;if let&lt;/code&gt;. The following code behaves the same as the &lt;code&gt;match&lt;/code&gt; in Listing 6-6:</source>
          <target state="translated">相反，我们可以使用 &lt;code&gt;if let&lt;/code&gt; 以更短的方式编写此代码。以下代码的行为 &lt;code&gt;match&lt;/code&gt; 清单6-6中的匹配项相同：</target>
        </trans-unit>
        <trans-unit id="f97c87a1b2b6afb4bd47b58a7850a17ba4dcea9b" translate="yes" xml:space="preserve">
          <source>Instead, we get the following error that talks about lifetimes:</source>
          <target state="translated">相反,我们得到的是下面的错误,说的是寿命。</target>
        </trans-unit>
        <trans-unit id="e71162b50e657665aeaa9b501b8264cb1685df94" translate="yes" xml:space="preserve">
          <source>Instead, we&amp;rsquo;ll change our definition of &lt;code&gt;List&lt;/code&gt; to use &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; in place of &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;, as shown in Listing 15-18. Each &lt;code&gt;Cons&lt;/code&gt; variant will now hold a value and an &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; pointing to a &lt;code&gt;List&lt;/code&gt;. When we create &lt;code&gt;b&lt;/code&gt;, instead of taking ownership of &lt;code&gt;a&lt;/code&gt;, we&amp;rsquo;ll clone the &lt;code&gt;Rc&amp;lt;List&amp;gt;&lt;/code&gt; that &lt;code&gt;a&lt;/code&gt; is holding, thereby increasing the number of references from one to two and letting &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; share ownership of the data in that &lt;code&gt;Rc&amp;lt;List&amp;gt;&lt;/code&gt;. We&amp;rsquo;ll also clone &lt;code&gt;a&lt;/code&gt; when creating &lt;code&gt;c&lt;/code&gt;, increasing the number of references from two to three. Every time we call &lt;code&gt;Rc::clone&lt;/code&gt;, the reference count to the data within the &lt;code&gt;Rc&amp;lt;List&amp;gt;&lt;/code&gt; will increase, and the data won&amp;rsquo;t be cleaned up unless there are zero references to it.</source>
          <target state="translated">相反，我们将 &lt;code&gt;List&lt;/code&gt; 的定义更改为使用 &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 代替 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; ，如清单15-18所示。现在，每个 &lt;code&gt;Cons&lt;/code&gt; 变体将包含一个值和一个指向 &lt;code&gt;List&lt;/code&gt; 的 &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 。当我们创建 &lt;code&gt;b&lt;/code&gt; ，而不是采取的所有权， &lt;code&gt;a&lt;/code&gt; ，我们将克隆 &lt;code&gt;Rc&amp;lt;List&amp;gt;&lt;/code&gt; 是 &lt;code&gt;a&lt;/code&gt; 持有，从而增加了引用的数量从一个增加到两个，让 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 的数据的股权在 &lt;code&gt;Rc&amp;lt;List&amp;gt;&lt;/code&gt; 。我们还将在创建 &lt;code&gt;c&lt;/code&gt; 时克隆 &lt;code&gt;a&lt;/code&gt; ，将引用的数量从两个增加到三个。每次我们调用 &lt;code&gt;Rc::clone&lt;/code&gt; ，对 &lt;code&gt;Rc&amp;lt;List&amp;gt;&lt;/code&gt; 数据的引用计数都会增加，除非对该数据的引用为零，否则不会清除该数据。</target>
        </trans-unit>
        <trans-unit id="2890fe24db6f7388a46470ac6834b80784db6337" translate="yes" xml:space="preserve">
          <source>Instructions can execute in a different order from the one we define, due to various reasons:</source>
          <target state="translated">由于各种原因,指令的执行顺序可能与我们定义的顺序不同。</target>
        </trans-unit>
        <trans-unit id="b74294f827b0d4541ba12662271114a470d6d7a4" translate="yes" xml:space="preserve">
          <source>IntErrorKind</source>
          <target state="translated">IntErrorKind</target>
        </trans-unit>
        <trans-unit id="80fb7220d8146322b259aee21dfef8944e427bb7" translate="yes" xml:space="preserve">
          <source>IntErrorKind::borrow</source>
          <target state="translated">IntErrorKind::borrow</target>
        </trans-unit>
        <trans-unit id="bb7aa40e4b4db6e736d2b09e30f31443f1c9b44c" translate="yes" xml:space="preserve">
          <source>IntErrorKind::borrow_mut</source>
          <target state="translated">IntErrorKind::borrow_mut</target>
        </trans-unit>
        <trans-unit id="86f2a2b8f3ab0b9d3e18ee8e7279ac3646f5e5b6" translate="yes" xml:space="preserve">
          <source>IntErrorKind::clone</source>
          <target state="translated">IntErrorKind::clone</target>
        </trans-unit>
        <trans-unit id="dd987594d4a6731556fb4db2a25b883f8e6e834a" translate="yes" xml:space="preserve">
          <source>IntErrorKind::clone_from</source>
          <target state="translated">IntErrorKind::clone_from</target>
        </trans-unit>
        <trans-unit id="8f1809c6588a2cc665ccd543289e14a938828a70" translate="yes" xml:space="preserve">
          <source>IntErrorKind::clone_into</source>
          <target state="translated">IntErrorKind::clone_into</target>
        </trans-unit>
        <trans-unit id="a5e2ed2cdfa8d2140437ae0a8783a450793b17a2" translate="yes" xml:space="preserve">
          <source>IntErrorKind::eq</source>
          <target state="translated">IntErrorKind::eq</target>
        </trans-unit>
        <trans-unit id="92fce40d27d225b47d39433e8ff156d8c2c93e18" translate="yes" xml:space="preserve">
          <source>IntErrorKind::fmt</source>
          <target state="translated">IntErrorKind::fmt</target>
        </trans-unit>
        <trans-unit id="cd16b5df7c131824209cf18f2e5abfbebb79b75a" translate="yes" xml:space="preserve">
          <source>IntErrorKind::from</source>
          <target state="translated">IntErrorKind::from</target>
        </trans-unit>
        <trans-unit id="e6625420510ba7fab278784b2593fb38c7566390" translate="yes" xml:space="preserve">
          <source>IntErrorKind::into</source>
          <target state="translated">IntErrorKind::into</target>
        </trans-unit>
        <trans-unit id="9d0115c16bd4f87138d516953bbe461d1bf9ec02" translate="yes" xml:space="preserve">
          <source>IntErrorKind::ne</source>
          <target state="translated">IntErrorKind::ne</target>
        </trans-unit>
        <trans-unit id="14958c3a69f5e70cdde8bcf9555c598ab9bb336b" translate="yes" xml:space="preserve">
          <source>IntErrorKind::to_owned</source>
          <target state="translated">IntErrorKind::to_owned</target>
        </trans-unit>
        <trans-unit id="6415d36e18efe91e53b209d52b6293cb58ff6bfa" translate="yes" xml:space="preserve">
          <source>IntErrorKind::try_from</source>
          <target state="translated">IntErrorKind::try_from</target>
        </trans-unit>
        <trans-unit id="03f332b4c41b3659819ff1f646ef37a2e67d10fd" translate="yes" xml:space="preserve">
          <source>IntErrorKind::try_into</source>
          <target state="translated">IntErrorKind::try_into</target>
        </trans-unit>
        <trans-unit id="b726776952bee36d5bafae04149385980bc0b309" translate="yes" xml:space="preserve">
          <source>IntErrorKind::type_id</source>
          <target state="translated">IntErrorKind::type_id</target>
        </trans-unit>
        <trans-unit id="9edcffff4461c9083fbff857f8dcee0f0769cbd4" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="translated">Integer</target>
        </trans-unit>
        <trans-unit id="65424b5083b7bb599ce3d3b760be23e671c074b2" translate="yes" xml:space="preserve">
          <source>Integer Overflow</source>
          <target state="translated">整数溢出</target>
        </trans-unit>
        <trans-unit id="dee2f95e5c81fdaa601cb7ca5b7396c9d7532488" translate="yes" xml:space="preserve">
          <source>Integer Types</source>
          <target state="translated">整数类型</target>
        </trans-unit>
        <trans-unit id="6977c92d9e82d5b8f471a2623681e1d1d400b4fb" translate="yes" xml:space="preserve">
          <source>Integer and floating point literals are stringified in order to be concatenated.</source>
          <target state="translated">整数和浮点字元被串联起来,以便进行连接。</target>
        </trans-unit>
        <trans-unit id="eea9a8e4af8d6805a657b383a298ba05a67ec8a4" translate="yes" xml:space="preserve">
          <source>Integer is too large to store in target integer type.</source>
          <target state="translated">Integer太大了,无法存储在目标整型中。</target>
        </trans-unit>
        <trans-unit id="25419a68a3cc357926618f13c044ff7b1347aa8b" translate="yes" xml:space="preserve">
          <source>Integer is too small to store in target integer type.</source>
          <target state="translated">Integer太小,无法存储在目标整型中。</target>
        </trans-unit>
        <trans-unit id="13c9f1f069c2155e025409b7880e9bda6c11b765" translate="yes" xml:space="preserve">
          <source>Integer literals</source>
          <target state="translated">整数字数</target>
        </trans-unit>
        <trans-unit id="f64049bb9bdfd33c50813111908ece46c327c630" translate="yes" xml:space="preserve">
          <source>Integer operators will panic when they overflow when compiled in debug mode. The &lt;code&gt;-C debug-assertions&lt;/code&gt; and &lt;code&gt;-C overflow-checks&lt;/code&gt; compiler flags can be used to control this more directly. The following things are considered to be overflow:</source>
          <target state="translated">在调试模式下进行编译时，整数运算符在溢出时会感到恐慌。的 &lt;code&gt;-C debug-assertions&lt;/code&gt; 和 &lt;code&gt;-C overflow-checks&lt;/code&gt; 编译器标记可用于更直接地控制此。以下内容被认为是溢出的：</target>
        </trans-unit>
        <trans-unit id="16d3c89b38e84e433e4fbd3b3a5bad55571258af" translate="yes" xml:space="preserve">
          <source>Integer or Float type</source>
          <target state="translated">整数或浮点型</target>
        </trans-unit>
        <trans-unit id="3a26a4e37ae1b89c4b86a6d96e9ccef63b9ca764" translate="yes" xml:space="preserve">
          <source>Integer overflow</source>
          <target state="translated">整数溢出</target>
        </trans-unit>
        <trans-unit id="60c11385ec83a73512788efd527bda9740331202" translate="yes" xml:space="preserve">
          <source>Integer suffixes</source>
          <target state="translated">整数后缀</target>
        </trans-unit>
        <trans-unit id="f59b20cbbdd5ddf3c9bd85fd552a52f66ae334d9" translate="yes" xml:space="preserve">
          <source>Integer type</source>
          <target state="translated">整数型</target>
        </trans-unit>
        <trans-unit id="876569ad85ebaf17d9149dea5706aba22e882fe8" translate="yes" xml:space="preserve">
          <source>Integer types</source>
          <target state="translated">整数类型</target>
        </trans-unit>
        <trans-unit id="19f28971f5db0ac7dee3fee9af716d1da8917af3" translate="yes" xml:space="preserve">
          <source>Integer types (u8, i8, u16, i16, usize, isize, etc.).</source>
          <target state="translated">整数类型(u8、i8、u16、i16、usize、isize等)。</target>
        </trans-unit>
        <trans-unit id="a83667e8fbc7d07069b4ce287d78c06adec56630" translate="yes" xml:space="preserve">
          <source>Integers and other types implementing &lt;a href=&quot;../marker/trait.copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt; are unaffected by &lt;code&gt;drop&lt;/code&gt;.</source>
          <target state="translated">实施&lt;a href=&quot;../marker/trait.copy&quot;&gt; &lt;code&gt;Copy&lt;/code&gt; 的&lt;/a&gt;整数和其他类型不受 &lt;code&gt;drop&lt;/code&gt; 的影响。</target>
        </trans-unit>
        <trans-unit id="036a5d47efaf84af91b96bca27d0e3394108b032" translate="yes" xml:space="preserve">
          <source>Integration Tests</source>
          <target state="translated">集成测试</target>
        </trans-unit>
        <trans-unit id="d9b3c69227b8b09ee6557a63d6eadc1309909958" translate="yes" xml:space="preserve">
          <source>Integration Tests for Binary Crates</source>
          <target state="translated">二进制周转箱的集成测试</target>
        </trans-unit>
        <trans-unit id="22d0f1d4f5d8a4b65c3ed4d1e121eaf3dc6e87d2" translate="yes" xml:space="preserve">
          <source>Intended for use for errors not exposed to the user, where allocating onto the heap (for normal construction via Error::new) is too costly.</source>
          <target state="translated">用于不暴露给用户的错误,在这种情况下,分配到堆上(通过Error::new进行正常构造)的成本太高。</target>
        </trans-unit>
        <trans-unit id="8b67f9d330a2d3ef64e53c30ab32b2a3ac9f06b6" translate="yes" xml:space="preserve">
          <source>Intense! In effect, this error message means that Rust doesn&amp;rsquo;t understand how to add an &lt;code&gt;i8&lt;/code&gt; and an &lt;code&gt;Option&amp;lt;i8&amp;gt;&lt;/code&gt;, because they&amp;rsquo;re different types. When we have a value of a type like &lt;code&gt;i8&lt;/code&gt; in Rust, the compiler will ensure that we always have a valid value. We can proceed confidently without having to check for null before using that value. Only when we have an &lt;code&gt;Option&amp;lt;i8&amp;gt;&lt;/code&gt; (or whatever type of value we&amp;rsquo;re working with) do we have to worry about possibly not having a value, and the compiler will make sure we handle that case before using the value.</source>
          <target state="translated">激烈！实际上，此错误消息表示Rust不了解如何添加 &lt;code&gt;i8&lt;/code&gt; 和 &lt;code&gt;Option&amp;lt;i8&amp;gt;&lt;/code&gt; ，因为它们是不同的类型。当我们在Rust 中具有 &lt;code&gt;i8&lt;/code&gt; 之类的值时，编译器将确保我们始终具有有效值。我们可以放心地进行操作，而不必在使用该值之前检查null。只有当我们有一个 &lt;code&gt;Option&amp;lt;i8&amp;gt;&lt;/code&gt; （或我们正在使用的任何类型的值）时，我们才需要担心可能没有值，并且编译器将确保我们在使用该值之前会处理这种情况。</target>
        </trans-unit>
        <trans-unit id="ffafe2f71610dfdf28d74f6f54bc9015fbb24203" translate="yes" xml:space="preserve">
          <source>Interestingly, the Rust language has &lt;em&gt;very&lt;/em&gt; few concurrency features. Almost every concurrency feature we&amp;rsquo;ve talked about so far in this chapter has been part of the standard library, not the language. Your options for handling concurrency are not limited to the language or the standard library; you can write your own concurrency features or use those written by others.</source>
          <target state="translated">有趣的是，Rust语言&lt;em&gt;几乎&lt;/em&gt;没有并发功能。到目前为止，我们在本章中讨论的几乎所有并发功能都是标准库的一部分，而不是语言的一部分。您处理并发性的选项不仅限于语言或标准库。您可以编写自己的并发功能或使用其他人编写的并发功能。</target>
        </trans-unit>
        <trans-unit id="21bdfe87f76bf3a6413dde02708bb83e04770512" translate="yes" xml:space="preserve">
          <source>Interior Mutability</source>
          <target state="translated">内部突变性</target>
        </trans-unit>
        <trans-unit id="88bf37967a115d0f3e4ede63c58d62ebf4f74d5a" translate="yes" xml:space="preserve">
          <source>Interior Mutability: A Mutable Borrow to an Immutable Value</source>
          <target state="translated">内部互变性。可变的借贷到不可变的价值。</target>
        </trans-unit>
        <trans-unit id="bb56d65f2c6cb59165a8429fad875c4b21a44fc9" translate="yes" xml:space="preserve">
          <source>Interior mutability is required.</source>
          <target state="translated">内部突变性是必须的。</target>
        </trans-unit>
        <trans-unit id="ca7ba6473fcf9f5318db96e54bb8153323ab66d4" translate="yes" xml:space="preserve">
          <source>Internal Representation</source>
          <target state="translated">内部代表</target>
        </trans-unit>
        <trans-unit id="951194525a57d9119eb003c4910a0f82fea56f08" translate="yes" xml:space="preserve">
          <source>Internally uses an alias to &lt;a href=&quot;trait.ord#method.max&quot;&gt;&lt;code&gt;Ord::max&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf9ba348896a745b094371c98fa0f28a4195e87" translate="yes" xml:space="preserve">
          <source>Internally uses an alias to &lt;a href=&quot;trait.ord#method.min&quot;&gt;&lt;code&gt;Ord::min&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e983bc961f2f79520b6f7bb3705df394320c6d" translate="yes" xml:space="preserve">
          <source>Internally uses an alias to &lt;code&gt;Ord::max&lt;/code&gt;.</source>
          <target state="translated">内部使用 &lt;code&gt;Ord::max&lt;/code&gt; 的别名。</target>
        </trans-unit>
        <trans-unit id="944d65bab4f9ee9f9e2c120271148593d01f1819" translate="yes" xml:space="preserve">
          <source>Internally uses an alias to &lt;code&gt;Ord::min&lt;/code&gt;.</source>
          <target state="translated">内部使用别名 &lt;code&gt;Ord::min&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="068003ac53324bf3f0b64c29929ac10bbe1c05ab" translate="yes" xml:space="preserve">
          <source>Internet socket addresses consist of an &lt;a href=&quot;enum.ipaddr&quot;&gt;IP address&lt;/a&gt;, a 16-bit port number, as well as possibly some version-dependent additional information. See &lt;a href=&quot;struct.socketaddrv4&quot;&gt;&lt;code&gt;SocketAddrV4&lt;/code&gt;&lt;/a&gt;'s and &lt;a href=&quot;struct.socketaddrv6&quot;&gt;&lt;code&gt;SocketAddrV6&lt;/code&gt;&lt;/a&gt;'s respective documentation for more details.</source>
          <target state="translated">Internet套接字地址由&lt;a href=&quot;enum.ipaddr&quot;&gt;IP地址&lt;/a&gt;，16位端口号以及一些与版本有关的附加信息组成。有关更多详细信息，请参见&lt;a href=&quot;struct.socketaddrv4&quot;&gt; &lt;code&gt;SocketAddrV4&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;struct.socketaddrv6&quot;&gt; &lt;code&gt;SocketAddrV6&lt;/code&gt; &lt;/a&gt;的相应文档。</target>
        </trans-unit>
        <trans-unit id="ff358fd17c71b9310a296d32bf0fad9d3ef93b34" translate="yes" xml:space="preserve">
          <source>Interprets &lt;code&gt;src&lt;/code&gt; as having type &lt;code&gt;&amp;amp;U&lt;/code&gt;, and then reads &lt;code&gt;src&lt;/code&gt; without moving the contained value.</source>
          <target state="translated">将 &lt;code&gt;src&lt;/code&gt; 解释为 &lt;code&gt;&amp;amp;U&lt;/code&gt; 类型，然后读取 &lt;code&gt;src&lt;/code&gt; 而不移动包含的值。</target>
        </trans-unit>
        <trans-unit id="6a36b9396eb19f7860ffbd9cb812832709b1a0ee" translate="yes" xml:space="preserve">
          <source>Interrupted operations can typically be retried.</source>
          <target state="translated">被打断的操作通常可以重试。</target>
        </trans-unit>
        <trans-unit id="d0f596ba112a353008597117b57b10b067fc620b" translate="yes" xml:space="preserve">
          <source>Intersection</source>
          <target state="translated">Intersection</target>
        </trans-unit>
        <trans-unit id="d937d21f811516b74380ee512b99e31251a84531" translate="yes" xml:space="preserve">
          <source>Into</source>
          <target state="translated">Into</target>
        </trans-unit>
        <trans-unit id="5bfe78f7766048c0532cc66994c73d1126acb835" translate="yes" xml:space="preserve">
          <source>Into::into</source>
          <target state="translated">Into::into</target>
        </trans-unit>
        <trans-unit id="44f9db19d74f7cdef0547d820fed0d75c60f0beb" translate="yes" xml:space="preserve">
          <source>IntoFuture</source>
          <target state="translated">IntoFuture</target>
        </trans-unit>
        <trans-unit id="77f5dd8de42c3fb03062223e3c47c92129133f82" translate="yes" xml:space="preserve">
          <source>IntoInnerError</source>
          <target state="translated">IntoInnerError</target>
        </trans-unit>
        <trans-unit id="3f3157b39d55c6291f5fe8213b30cc7d15253d48" translate="yes" xml:space="preserve">
          <source>IntoInnerError::borrow</source>
          <target state="translated">IntoInnerError::borrow</target>
        </trans-unit>
        <trans-unit id="8dfa8d9b4ac06c1a6626ce8031f10e6de0dc0387" translate="yes" xml:space="preserve">
          <source>IntoInnerError::borrow_mut</source>
          <target state="translated">IntoInnerError::borrow_mut</target>
        </trans-unit>
        <trans-unit id="7c332dec4b157cd5d25efcbb73292737fbcafa2a" translate="yes" xml:space="preserve">
          <source>IntoInnerError::cause</source>
          <target state="translated">IntoInnerError::cause</target>
        </trans-unit>
        <trans-unit id="824ab9811aae7de9a48a47b240a825897e788412" translate="yes" xml:space="preserve">
          <source>IntoInnerError::description</source>
          <target state="translated">IntoInnerError::description</target>
        </trans-unit>
        <trans-unit id="83d6a8f5f81bfae0852073773b72a21c220d1541" translate="yes" xml:space="preserve">
          <source>IntoInnerError::error</source>
          <target state="translated">IntoInnerError::error</target>
        </trans-unit>
        <trans-unit id="b1804b3db5a18e0f8ea6f6cff9edd76e45db12ed" translate="yes" xml:space="preserve">
          <source>IntoInnerError::fmt</source>
          <target state="translated">IntoInnerError::fmt</target>
        </trans-unit>
        <trans-unit id="74ec382ed3daa2186fca394930d62ea36a8c17d2" translate="yes" xml:space="preserve">
          <source>IntoInnerError::from</source>
          <target state="translated">IntoInnerError::from</target>
        </trans-unit>
        <trans-unit id="f77ca8c3b2a09378cb7ab11a7034bfe301502366" translate="yes" xml:space="preserve">
          <source>IntoInnerError::into</source>
          <target state="translated">IntoInnerError::into</target>
        </trans-unit>
        <trans-unit id="b64935fe113c6776466d9f925b72b58f10a95d0a" translate="yes" xml:space="preserve">
          <source>IntoInnerError::into_inner</source>
          <target state="translated">IntoInnerError::into_inner</target>
        </trans-unit>
        <trans-unit id="b98cd1e7eff5f2d406e34cac12fb4fec6a0205d4" translate="yes" xml:space="preserve">
          <source>IntoInnerError::source</source>
          <target state="translated">IntoInnerError::source</target>
        </trans-unit>
        <trans-unit id="b27666ff3803b78aee0d747dc0d776b1f36b641a" translate="yes" xml:space="preserve">
          <source>IntoInnerError::to_string</source>
          <target state="translated">IntoInnerError::to_string</target>
        </trans-unit>
        <trans-unit id="0b54c908cc8363881d303f189af2d3a384fbe644" translate="yes" xml:space="preserve">
          <source>IntoInnerError::try_from</source>
          <target state="translated">IntoInnerError::try_from</target>
        </trans-unit>
        <trans-unit id="496358b49c2805d5e6526e43d48129b6eb94e5f4" translate="yes" xml:space="preserve">
          <source>IntoInnerError::try_into</source>
          <target state="translated">IntoInnerError::try_into</target>
        </trans-unit>
        <trans-unit id="b48124715dd42f1aa190750b7aa9535327b5b2db" translate="yes" xml:space="preserve">
          <source>IntoInnerError::type_id</source>
          <target state="translated">IntoInnerError::type_id</target>
        </trans-unit>
        <trans-unit id="d5bc3a63a8bde6cc5fb0c0c11c8f6e6a2d150f75" translate="yes" xml:space="preserve">
          <source>IntoIter</source>
          <target state="translated">IntoIter</target>
        </trans-unit>
        <trans-unit id="169272921e3355905d2215419cf69783d5e1115d" translate="yes" xml:space="preserve">
          <source>IntoIter::all</source>
          <target state="translated">IntoIter::all</target>
        </trans-unit>
        <trans-unit id="a15574f60107e9d0464eff7cacee4bccf74dd72e" translate="yes" xml:space="preserve">
          <source>IntoIter::any</source>
          <target state="translated">IntoIter::any</target>
        </trans-unit>
        <trans-unit id="51c36bf4138559f11f65b74500f686e06c1f07c6" translate="yes" xml:space="preserve">
          <source>IntoIter::as_mut_slice</source>
          <target state="translated">IntoIter::as_mut_slice</target>
        </trans-unit>
        <trans-unit id="375d884ce90ecd76e63b6eebc5d52f38165f98ea" translate="yes" xml:space="preserve">
          <source>IntoIter::as_slice</source>
          <target state="translated">IntoIter::as_slice</target>
        </trans-unit>
        <trans-unit id="945728e84b93878ccde99bc6b6c902e3add25ce9" translate="yes" xml:space="preserve">
          <source>IntoIter::borrow</source>
          <target state="translated">IntoIter::borrow</target>
        </trans-unit>
        <trans-unit id="4db752fa4ec7a9c0d095aaf0baac141df030f531" translate="yes" xml:space="preserve">
          <source>IntoIter::borrow_mut</source>
          <target state="translated">IntoIter::borrow_mut</target>
        </trans-unit>
        <trans-unit id="aaf973384105c3d31f532c4ad4e6dc925ca8038e" translate="yes" xml:space="preserve">
          <source>IntoIter::by_ref</source>
          <target state="translated">IntoIter::by_ref</target>
        </trans-unit>
        <trans-unit id="bcd8f637007c65386e7e2794c338143218170c6f" translate="yes" xml:space="preserve">
          <source>IntoIter::chain</source>
          <target state="translated">IntoIter::chain</target>
        </trans-unit>
        <trans-unit id="4b7971718173fafccbf11a50c2db440035e10f18" translate="yes" xml:space="preserve">
          <source>IntoIter::clone</source>
          <target state="translated">IntoIter::clone</target>
        </trans-unit>
        <trans-unit id="cdb70f02920a7096b80eae8222a39e9acc9946ce" translate="yes" xml:space="preserve">
          <source>IntoIter::clone_from</source>
          <target state="translated">IntoIter::clone_from</target>
        </trans-unit>
        <trans-unit id="a82a0721b8481c0815dcd502e84574a2073e6632" translate="yes" xml:space="preserve">
          <source>IntoIter::clone_into</source>
          <target state="translated">IntoIter::clone_into</target>
        </trans-unit>
        <trans-unit id="50371856061d6c57455d0ce1dfd33e8f9cb33e2b" translate="yes" xml:space="preserve">
          <source>IntoIter::cloned</source>
          <target state="translated">IntoIter::cloned</target>
        </trans-unit>
        <trans-unit id="e8ad516621215eb3804081635021e01bb0d15b51" translate="yes" xml:space="preserve">
          <source>IntoIter::cmp</source>
          <target state="translated">IntoIter::cmp</target>
        </trans-unit>
        <trans-unit id="8fbe1060e2b348d75cd8e260134f4152fb629580" translate="yes" xml:space="preserve">
          <source>IntoIter::collect</source>
          <target state="translated">IntoIter::collect</target>
        </trans-unit>
        <trans-unit id="49b1597675bf50c85b1e156757a3fba15d6379b2" translate="yes" xml:space="preserve">
          <source>IntoIter::copied</source>
          <target state="translated">IntoIter::copied</target>
        </trans-unit>
        <trans-unit id="1b07d7fdfbcbc77dd6f739fc3349c3f2c936082e" translate="yes" xml:space="preserve">
          <source>IntoIter::count</source>
          <target state="translated">IntoIter::count</target>
        </trans-unit>
        <trans-unit id="abc24391b60331e5b16547b639bace5c08a577cf" translate="yes" xml:space="preserve">
          <source>IntoIter::cycle</source>
          <target state="translated">IntoIter::cycle</target>
        </trans-unit>
        <trans-unit id="076c1a1b603e193e4eb4e0757f8c8cf292b8dfb5" translate="yes" xml:space="preserve">
          <source>IntoIter::drop</source>
          <target state="translated">IntoIter::drop</target>
        </trans-unit>
        <trans-unit id="c4d617218636a45df4ca846f67499ffba56d0009" translate="yes" xml:space="preserve">
          <source>IntoIter::enumerate</source>
          <target state="translated">IntoIter::enumerate</target>
        </trans-unit>
        <trans-unit id="203a6dcfb8a13fd0add782bc832058504307c28c" translate="yes" xml:space="preserve">
          <source>IntoIter::eq</source>
          <target state="translated">IntoIter::eq</target>
        </trans-unit>
        <trans-unit id="c908d336a9125db6fbd5e895b62999e14ef83fab" translate="yes" xml:space="preserve">
          <source>IntoIter::filter</source>
          <target state="translated">IntoIter::filter</target>
        </trans-unit>
        <trans-unit id="dffdf83b64aeaec0f8093868f1a7bbb32780e9ca" translate="yes" xml:space="preserve">
          <source>IntoIter::filter_map</source>
          <target state="translated">IntoIter::filter_map</target>
        </trans-unit>
        <trans-unit id="ab410a5d7b7cbc92b7134e524269b1fa848fc30b" translate="yes" xml:space="preserve">
          <source>IntoIter::find</source>
          <target state="translated">IntoIter::find</target>
        </trans-unit>
        <trans-unit id="27ee1265a09c796da003def69a36560ceff2b181" translate="yes" xml:space="preserve">
          <source>IntoIter::find_map</source>
          <target state="translated">IntoIter::find_map</target>
        </trans-unit>
        <trans-unit id="eddd95067e023ebec6158e4fd0749c395bbce3b5" translate="yes" xml:space="preserve">
          <source>IntoIter::flat_map</source>
          <target state="translated">IntoIter::flat_map</target>
        </trans-unit>
        <trans-unit id="24f22711986263a8d0e02c113bb93328c331ce4c" translate="yes" xml:space="preserve">
          <source>IntoIter::flatten</source>
          <target state="translated">IntoIter::flatten</target>
        </trans-unit>
        <trans-unit id="e538b5a92b4ad8916bfeef8710693a5e5266e987" translate="yes" xml:space="preserve">
          <source>IntoIter::fmt</source>
          <target state="translated">IntoIter::fmt</target>
        </trans-unit>
        <trans-unit id="d818332c13e9dac3c39cfd50a50265cfaea983ac" translate="yes" xml:space="preserve">
          <source>IntoIter::fold</source>
          <target state="translated">IntoIter::fold</target>
        </trans-unit>
        <trans-unit id="ebce24dad77f86422316868125c1ce1b1376c47d" translate="yes" xml:space="preserve">
          <source>IntoIter::for_each</source>
          <target state="translated">IntoIter::for_each</target>
        </trans-unit>
        <trans-unit id="63d5fee827e27caa7f9e5b809ff35ace75693193" translate="yes" xml:space="preserve">
          <source>IntoIter::from</source>
          <target state="translated">IntoIter::from</target>
        </trans-unit>
        <trans-unit id="d10213dec7222893569b1e32a4313a41a6aaecb0" translate="yes" xml:space="preserve">
          <source>IntoIter::fuse</source>
          <target state="translated">IntoIter::fuse</target>
        </trans-unit>
        <trans-unit id="2c8a9a1c31b0f9b10030a7c20db1f8dae0614589" translate="yes" xml:space="preserve">
          <source>IntoIter::ge</source>
          <target state="translated">IntoIter::ge</target>
        </trans-unit>
        <trans-unit id="104a30acd770869920244c22e6c1a727cdee6dae" translate="yes" xml:space="preserve">
          <source>IntoIter::gt</source>
          <target state="translated">IntoIter::gt</target>
        </trans-unit>
        <trans-unit id="ab8d2e8c457b63ffae7769711a00e1a87b2a56eb" translate="yes" xml:space="preserve">
          <source>IntoIter::inspect</source>
          <target state="translated">IntoIter::inspect</target>
        </trans-unit>
        <trans-unit id="c0c222348756fc6dca4ff42b109916a4d5aa1041" translate="yes" xml:space="preserve">
          <source>IntoIter::into</source>
          <target state="translated">IntoIter::into</target>
        </trans-unit>
        <trans-unit id="00014741248dda82e6a92af65524e8bc527d5270" translate="yes" xml:space="preserve">
          <source>IntoIter::into_iter</source>
          <target state="translated">IntoIter::into_iter</target>
        </trans-unit>
        <trans-unit id="5136432030a36a1b23033a0d753895604b4149ac" translate="yes" xml:space="preserve">
          <source>IntoIter::is_empty</source>
          <target state="translated">IntoIter::is_empty</target>
        </trans-unit>
        <trans-unit id="cf791dcb18f1b7d93faf9bdd64add013d8076499" translate="yes" xml:space="preserve">
          <source>IntoIter::is_sorted</source>
          <target state="translated">IntoIter::is_sorted</target>
        </trans-unit>
        <trans-unit id="5c6daaffe95fe047d7827bfe50f3fd317d40c563" translate="yes" xml:space="preserve">
          <source>IntoIter::is_sorted_by</source>
          <target state="translated">IntoIter::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="9f7c1ed14fd6d8b0ea5624c99850ff1ba4ac8f4c" translate="yes" xml:space="preserve">
          <source>IntoIter::is_sorted_by_key</source>
          <target state="translated">IntoIter::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="e39349aed40aa6fcfd458252b9c0e111206b7d16" translate="yes" xml:space="preserve">
          <source>IntoIter::last</source>
          <target state="translated">IntoIter::last</target>
        </trans-unit>
        <trans-unit id="965a66efe77546764045f5f96e42028dbb177b19" translate="yes" xml:space="preserve">
          <source>IntoIter::le</source>
          <target state="translated">IntoIter::le</target>
        </trans-unit>
        <trans-unit id="22be990e0e582b87c69cd8c67de2cfd9920d77cd" translate="yes" xml:space="preserve">
          <source>IntoIter::len</source>
          <target state="translated">IntoIter::len</target>
        </trans-unit>
        <trans-unit id="8440a9053eaee6916d3cec75da248b9b8410507f" translate="yes" xml:space="preserve">
          <source>IntoIter::lt</source>
          <target state="translated">IntoIter::lt</target>
        </trans-unit>
        <trans-unit id="e3e2d404675aba8735567f55b57c588d0c0c351a" translate="yes" xml:space="preserve">
          <source>IntoIter::map</source>
          <target state="translated">IntoIter::map</target>
        </trans-unit>
        <trans-unit id="181026e325e14528b026dfe68716b7b26ecd2d2d" translate="yes" xml:space="preserve">
          <source>IntoIter::max</source>
          <target state="translated">IntoIter::max</target>
        </trans-unit>
        <trans-unit id="dd9a47d87f8a0e2db21c65ae146ddcfdf6e0f952" translate="yes" xml:space="preserve">
          <source>IntoIter::max_by</source>
          <target state="translated">IntoIter::max_by</target>
        </trans-unit>
        <trans-unit id="32723c1a1514dde11ed20c922fc56eff6425fcc8" translate="yes" xml:space="preserve">
          <source>IntoIter::max_by_key</source>
          <target state="translated">IntoIter::max_by_key</target>
        </trans-unit>
        <trans-unit id="c528958b5dc23955203383c2f66331a5a91f6f86" translate="yes" xml:space="preserve">
          <source>IntoIter::min</source>
          <target state="translated">IntoIter::min</target>
        </trans-unit>
        <trans-unit id="390fd21e220a5da046b34c827add37c65b895f97" translate="yes" xml:space="preserve">
          <source>IntoIter::min_by</source>
          <target state="translated">IntoIter::min_by</target>
        </trans-unit>
        <trans-unit id="05a738d3c9912a808e8d6c464d2a7c6d5e602efc" translate="yes" xml:space="preserve">
          <source>IntoIter::min_by_key</source>
          <target state="translated">IntoIter::min_by_key</target>
        </trans-unit>
        <trans-unit id="6cc5e0ff9437accb5f5b72fc20bbf3b3985983ae" translate="yes" xml:space="preserve">
          <source>IntoIter::ne</source>
          <target state="translated">IntoIter::ne</target>
        </trans-unit>
        <trans-unit id="95d68245f80704a894c91867b96e64891330dc8f" translate="yes" xml:space="preserve">
          <source>IntoIter::next</source>
          <target state="translated">IntoIter::next</target>
        </trans-unit>
        <trans-unit id="c4df8bce742e0396e8452ed5481fe551b8b2badd" translate="yes" xml:space="preserve">
          <source>IntoIter::next_back</source>
          <target state="translated">IntoIter::next_back</target>
        </trans-unit>
        <trans-unit id="489c39625b1b427238a77aa99c56a91ae04c9c31" translate="yes" xml:space="preserve">
          <source>IntoIter::nth</source>
          <target state="translated">IntoIter::nth</target>
        </trans-unit>
        <trans-unit id="54146217e0f00a76ac06385e197cdac1011f680c" translate="yes" xml:space="preserve">
          <source>IntoIter::nth_back</source>
          <target state="translated">IntoIter::nth_back</target>
        </trans-unit>
        <trans-unit id="2a293f8986446751513826e2a6e67042070d4889" translate="yes" xml:space="preserve">
          <source>IntoIter::partial_cmp</source>
          <target state="translated">IntoIter::partial_cmp</target>
        </trans-unit>
        <trans-unit id="7432ba6416e1cdf63a74ea8f79c2559a3d61d6f5" translate="yes" xml:space="preserve">
          <source>IntoIter::partition</source>
          <target state="translated">IntoIter::partition</target>
        </trans-unit>
        <trans-unit id="a2c1d18ee38c61b94c1e15afa12302f3d7a18c8a" translate="yes" xml:space="preserve">
          <source>IntoIter::peekable</source>
          <target state="translated">IntoIter::peekable</target>
        </trans-unit>
        <trans-unit id="7240e01f5d7115ce4d05e7b2faa4a077b8d81625" translate="yes" xml:space="preserve">
          <source>IntoIter::position</source>
          <target state="translated">IntoIter::position</target>
        </trans-unit>
        <trans-unit id="0fd92308f15c7b0abf6973b7defdbd676ab073f7" translate="yes" xml:space="preserve">
          <source>IntoIter::product</source>
          <target state="translated">IntoIter::product</target>
        </trans-unit>
        <trans-unit id="87be344797cbbbf8b5139732e88f449d1b5cc284" translate="yes" xml:space="preserve">
          <source>IntoIter::rev</source>
          <target state="translated">IntoIter::rev</target>
        </trans-unit>
        <trans-unit id="cb35ac9eaac8868683280e1dd8b84b76dcd5253c" translate="yes" xml:space="preserve">
          <source>IntoIter::rfind</source>
          <target state="translated">IntoIter::rfind</target>
        </trans-unit>
        <trans-unit id="7231cdd22fc5f767b74f59229681b2cb27b3a8a9" translate="yes" xml:space="preserve">
          <source>IntoIter::rfold</source>
          <target state="translated">IntoIter::rfold</target>
        </trans-unit>
        <trans-unit id="fc4f91f7bc50fd166afe9eee868201d382ba4b60" translate="yes" xml:space="preserve">
          <source>IntoIter::rposition</source>
          <target state="translated">IntoIter::rposition</target>
        </trans-unit>
        <trans-unit id="5298f16d195003a5ea725c4a2f787c36fc2ecf95" translate="yes" xml:space="preserve">
          <source>IntoIter::scan</source>
          <target state="translated">IntoIter::scan</target>
        </trans-unit>
        <trans-unit id="e2c872b5440e3714483ceb31004f10b634f3b596" translate="yes" xml:space="preserve">
          <source>IntoIter::size_hint</source>
          <target state="translated">IntoIter::size_hint</target>
        </trans-unit>
        <trans-unit id="8da43de95b9fb617735c0b5f05ce1971df79ae91" translate="yes" xml:space="preserve">
          <source>IntoIter::skip</source>
          <target state="translated">IntoIter::skip</target>
        </trans-unit>
        <trans-unit id="7cdd555373586d1cc526b91787520022c1b5802f" translate="yes" xml:space="preserve">
          <source>IntoIter::skip_while</source>
          <target state="translated">IntoIter::skip_while</target>
        </trans-unit>
        <trans-unit id="661cf4b069d769b36d7e4adf5b8fb0aa4c3dd29f" translate="yes" xml:space="preserve">
          <source>IntoIter::step_by</source>
          <target state="translated">IntoIter::step_by</target>
        </trans-unit>
        <trans-unit id="98bf1ddbdcb82a855ba5cfa0a55bb46fec337f4b" translate="yes" xml:space="preserve">
          <source>IntoIter::sum</source>
          <target state="translated">IntoIter::sum</target>
        </trans-unit>
        <trans-unit id="d4618f74f9d5d75a0acca06e8a09c073539a2aef" translate="yes" xml:space="preserve">
          <source>IntoIter::take</source>
          <target state="translated">IntoIter::take</target>
        </trans-unit>
        <trans-unit id="9fe22ceb1381a9edace4e35f2d28c23142f99a56" translate="yes" xml:space="preserve">
          <source>IntoIter::take_while</source>
          <target state="translated">IntoIter::take_while</target>
        </trans-unit>
        <trans-unit id="2b34db4df91a1ac8be037bcd7eb58942819d00ad" translate="yes" xml:space="preserve">
          <source>IntoIter::to_owned</source>
          <target state="translated">IntoIter::to_owned</target>
        </trans-unit>
        <trans-unit id="772750fa37f6b74b4e6358710cdb957bddeb44ce" translate="yes" xml:space="preserve">
          <source>IntoIter::try_fold</source>
          <target state="translated">IntoIter::try_fold</target>
        </trans-unit>
        <trans-unit id="edf3daf75af0e05f2d21875b7c094720775d11c5" translate="yes" xml:space="preserve">
          <source>IntoIter::try_for_each</source>
          <target state="translated">IntoIter::try_for_each</target>
        </trans-unit>
        <trans-unit id="d6b9806fe0a7d9fecc2d3de823bae6fd8502edb8" translate="yes" xml:space="preserve">
          <source>IntoIter::try_from</source>
          <target state="translated">IntoIter::try_from</target>
        </trans-unit>
        <trans-unit id="c651b804d75adc612d6c4b9e3a2f3139ff83b4ef" translate="yes" xml:space="preserve">
          <source>IntoIter::try_into</source>
          <target state="translated">IntoIter::try_into</target>
        </trans-unit>
        <trans-unit id="0dba2be6b9f4b004d4e321a351df358b821e2637" translate="yes" xml:space="preserve">
          <source>IntoIter::try_rfold</source>
          <target state="translated">IntoIter::try_rfold</target>
        </trans-unit>
        <trans-unit id="b656b4334602090068cb0e3af82bcfe6e99000c6" translate="yes" xml:space="preserve">
          <source>IntoIter::type_id</source>
          <target state="translated">IntoIter::type_id</target>
        </trans-unit>
        <trans-unit id="93d7a5a1be00e631699c6d0e8f2b9a469d7682df" translate="yes" xml:space="preserve">
          <source>IntoIter::unzip</source>
          <target state="translated">IntoIter::unzip</target>
        </trans-unit>
        <trans-unit id="2ead629bd91db49e5e289d4a9d83aa966e2aef76" translate="yes" xml:space="preserve">
          <source>IntoIter::zip</source>
          <target state="translated">IntoIter::zip</target>
        </trans-unit>
        <trans-unit id="5a9e582d9690319d0718e51b09f69686a20f0e41" translate="yes" xml:space="preserve">
          <source>IntoIterSorted</source>
          <target state="translated">IntoIterSorted</target>
        </trans-unit>
        <trans-unit id="7ec61d625cdf338b6e7eefc1b7f35fb136a21981" translate="yes" xml:space="preserve">
          <source>IntoIterator</source>
          <target state="translated">IntoIterator</target>
        </trans-unit>
        <trans-unit id="6c78f7b3978fea56c0f5ff4073e20eca741514bf" translate="yes" xml:space="preserve">
          <source>IntoIterator::into_iter</source>
          <target state="translated">IntoIterator::into_iter</target>
        </trans-unit>
        <trans-unit id="d9576fb0c66590a804264acb28dd47a3fb023c22" translate="yes" xml:space="preserve">
          <source>IntoKeys</source>
          <target state="translated">IntoKeys</target>
        </trans-unit>
        <trans-unit id="16b2c49e47a9cdd1e65117e3f6dfb4bcbee6f387" translate="yes" xml:space="preserve">
          <source>IntoRawFd</source>
          <target state="translated">IntoRawFd</target>
        </trans-unit>
        <trans-unit id="a365631ab12e53b287fe74345a1899c6e331c741" translate="yes" xml:space="preserve">
          <source>IntoRawHandle</source>
          <target state="translated">IntoRawHandle</target>
        </trans-unit>
        <trans-unit id="9d9a97edc4ce8e9862f860071c09a9c14a518af1" translate="yes" xml:space="preserve">
          <source>IntoRawSocket</source>
          <target state="translated">IntoRawSocket</target>
        </trans-unit>
        <trans-unit id="7f11e8cc7632bcc87c94b5a2c9b1b74de01004d8" translate="yes" xml:space="preserve">
          <source>IntoStringError</source>
          <target state="translated">IntoStringError</target>
        </trans-unit>
        <trans-unit id="50d9b93fcfc23141a5ffff21c34c9750d4a3c933" translate="yes" xml:space="preserve">
          <source>IntoStringError::borrow</source>
          <target state="translated">IntoStringError::borrow</target>
        </trans-unit>
        <trans-unit id="1966c3cf239a5f29a297fcc1a9db02fe5893217d" translate="yes" xml:space="preserve">
          <source>IntoStringError::borrow_mut</source>
          <target state="translated">IntoStringError::borrow_mut</target>
        </trans-unit>
        <trans-unit id="4452bc0fb43159ff656d4a93c8618a42c0393734" translate="yes" xml:space="preserve">
          <source>IntoStringError::cause</source>
          <target state="translated">IntoStringError::cause</target>
        </trans-unit>
        <trans-unit id="311fc7dd5db9e933c2a85125d79440050ba91ace" translate="yes" xml:space="preserve">
          <source>IntoStringError::clone</source>
          <target state="translated">IntoStringError::clone</target>
        </trans-unit>
        <trans-unit id="170ddc74179150ba05b86b24f4fbc1d6aa2d52e0" translate="yes" xml:space="preserve">
          <source>IntoStringError::clone_from</source>
          <target state="translated">IntoStringError::clone_from</target>
        </trans-unit>
        <trans-unit id="e4500a75c8a08379e11e639eff9a48d27a0ae646" translate="yes" xml:space="preserve">
          <source>IntoStringError::clone_into</source>
          <target state="translated">IntoStringError::clone_into</target>
        </trans-unit>
        <trans-unit id="e6d3177264e5419002ca6b90870d84f6de5318ae" translate="yes" xml:space="preserve">
          <source>IntoStringError::description</source>
          <target state="translated">IntoStringError::description</target>
        </trans-unit>
        <trans-unit id="5bb48ecdc95fe61110fc679d446ff8bfb8efd2a3" translate="yes" xml:space="preserve">
          <source>IntoStringError::eq</source>
          <target state="translated">IntoStringError::eq</target>
        </trans-unit>
        <trans-unit id="2de62132572699348da4c1486645acbfe65816f7" translate="yes" xml:space="preserve">
          <source>IntoStringError::fmt</source>
          <target state="translated">IntoStringError::fmt</target>
        </trans-unit>
        <trans-unit id="371ee3a8925c033093eb47daab1eaf52038293a7" translate="yes" xml:space="preserve">
          <source>IntoStringError::from</source>
          <target state="translated">IntoStringError::from</target>
        </trans-unit>
        <trans-unit id="7701464be4ef893fc2c5c3f4c5145f545fd69bc7" translate="yes" xml:space="preserve">
          <source>IntoStringError::into</source>
          <target state="translated">IntoStringError::into</target>
        </trans-unit>
        <trans-unit id="582c82615bdad453dc78b3b7161f1c2e89500049" translate="yes" xml:space="preserve">
          <source>IntoStringError::into_cstring</source>
          <target state="translated">IntoStringError::into_cstring</target>
        </trans-unit>
        <trans-unit id="72c3a4bc2137cb67b0ad93a2e5391da1fc022c51" translate="yes" xml:space="preserve">
          <source>IntoStringError::ne</source>
          <target state="translated">IntoStringError::ne</target>
        </trans-unit>
        <trans-unit id="44a66cffe02ce75fc4e71dc95ab13d91cdba6c61" translate="yes" xml:space="preserve">
          <source>IntoStringError::source</source>
          <target state="translated">IntoStringError::source</target>
        </trans-unit>
        <trans-unit id="ad03af038caae21639f90297a46d2ffcd2596ee4" translate="yes" xml:space="preserve">
          <source>IntoStringError::to_owned</source>
          <target state="translated">IntoStringError::to_owned</target>
        </trans-unit>
        <trans-unit id="c09f10ab1dd9b0342f7fb1dad4fc7e2096345bb9" translate="yes" xml:space="preserve">
          <source>IntoStringError::to_string</source>
          <target state="translated">IntoStringError::to_string</target>
        </trans-unit>
        <trans-unit id="5c3026fa186ad1f8d938dd92384c9db9e3dc865e" translate="yes" xml:space="preserve">
          <source>IntoStringError::try_from</source>
          <target state="translated">IntoStringError::try_from</target>
        </trans-unit>
        <trans-unit id="9fba74ad721f87d025ad8e718482da5c76958744" translate="yes" xml:space="preserve">
          <source>IntoStringError::try_into</source>
          <target state="translated">IntoStringError::try_into</target>
        </trans-unit>
        <trans-unit id="99cffcb47b8ca60f8f0bb7b29b56b473ac510576" translate="yes" xml:space="preserve">
          <source>IntoStringError::type_id</source>
          <target state="translated">IntoStringError::type_id</target>
        </trans-unit>
        <trans-unit id="0bd993d0b67ac388c683b5e901ee7503442bb940" translate="yes" xml:space="preserve">
          <source>IntoStringError::utf8_error</source>
          <target state="translated">IntoStringError::utf8_error</target>
        </trans-unit>
        <trans-unit id="8c734a51383a161298950f1bdab61a8852ba0f3c" translate="yes" xml:space="preserve">
          <source>IntoValues</source>
          <target state="translated">IntoValues</target>
        </trans-unit>
        <trans-unit id="54ac30147bd72e0bc1ea9316f36c7e85df3ce9ba" translate="yes" xml:space="preserve">
          <source>Introducing mutability 'inside' of something immutable</source>
          <target state="translated">在不可改变的事物中引入可变性。</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="633ae22a8ea65542349f4c6d8bd195a50bd29e7d" translate="yes" xml:space="preserve">
          <source>Invalid ABI (Application Binary Interface) used in the code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f8a82c86c42154fb0095cbe44eb1389b3549a5" translate="yes" xml:space="preserve">
          <source>Invalid Array Element Access</source>
          <target state="translated">无效的阵列元素访问</target>
        </trans-unit>
        <trans-unit id="b05fe7935b939bfbbf85104eb2c338970f3d02f1" translate="yes" xml:space="preserve">
          <source>Invalid metadata in a wide reference, &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;, or raw pointer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d246a9d199c00b56fdfcde8fcd1cd5c6d94b9a1b" translate="yes" xml:space="preserve">
          <source>Invalid monomorphization of an intrinsic function was used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ebb476b87cd60f48ebf50a0407b351c5107cec" translate="yes" xml:space="preserve">
          <source>Invalid monomorphization of an intrinsic function was used. Erroneous code example:</source>
          <target state="translated">使用了无效的固有函数单态化。错误的代码示例。</target>
        </trans-unit>
        <trans-unit id="5ede6c63a691e01ee97efae352db5386371736a5" translate="yes" xml:space="preserve">
          <source>Invalid values for a type with a custom definition of invalid values. In the standard library, this affects &lt;a href=&quot;https://doc.rust-lang.org/core/ptr/struct.NonNull.html&quot;&gt;&lt;code&gt;NonNull&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://doc.rust-lang.org/core/num/index.html&quot;&gt;&lt;code&gt;NonZero*&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2724bdaef4601c56db3d05244277ab05b35a54b3" translate="yes" xml:space="preserve">
          <source>Invalid values in primitive types, even in private fields and locals:</source>
          <target state="translated">基元类型中的无效值,即使是在私有字段和局部类型中。</target>
        </trans-unit>
        <trans-unit id="3390616cafac7ff314d6aadaf20e48034cbb3314" translate="yes" xml:space="preserve">
          <source>Invariants</source>
          <target state="translated">Invariants</target>
        </trans-unit>
        <trans-unit id="556ef6bf1ce64fe45a2cdf7c095ee4ab45ecf2bc" translate="yes" xml:space="preserve">
          <source>Inverse hyperbolic cosine function.</source>
          <target state="translated">反双曲余弦函数。</target>
        </trans-unit>
        <trans-unit id="6ed8d04de38ff90d141bd8e28a751473d8b5e58a" translate="yes" xml:space="preserve">
          <source>Inverse hyperbolic sine function.</source>
          <target state="translated">反双曲正弦函数。</target>
        </trans-unit>
        <trans-unit id="93d434c1339f113d603c470280ae15d6ba4069dd" translate="yes" xml:space="preserve">
          <source>Inverse hyperbolic tangent function.</source>
          <target state="translated">反双曲正切函数。</target>
        </trans-unit>
        <trans-unit id="88febe0c5bd47bdcaa24fa407c931736c9254d02" translate="yes" xml:space="preserve">
          <source>Invokes &lt;a href=&quot;../ffi/struct.osstring#method.capacity&quot;&gt;&lt;code&gt;capacity&lt;/code&gt;&lt;/a&gt; on the underlying instance of &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt;的基础实例上调用&lt;a href=&quot;../ffi/struct.osstring#method.capacity&quot;&gt; &lt;code&gt;capacity&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bf466fb0852d7cebcba10b12dd881c0dd0bb5daa" translate="yes" xml:space="preserve">
          <source>Invokes &lt;a href=&quot;../ffi/struct.osstring#method.clear&quot;&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/a&gt; on the underlying instance of &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">调用&lt;a href=&quot;../ffi/struct.osstring#method.clear&quot;&gt; &lt;code&gt;clear&lt;/code&gt; &lt;/a&gt;对底层的实例&lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="84ecde704d4d279fa7d2d406323e14c8fdc0fdc9" translate="yes" xml:space="preserve">
          <source>Invokes &lt;a href=&quot;../ffi/struct.osstring#method.reserve&quot;&gt;&lt;code&gt;reserve&lt;/code&gt;&lt;/a&gt; on the underlying instance of &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">调用&lt;a href=&quot;../ffi/struct.osstring#method.reserve&quot;&gt; &lt;code&gt;reserve&lt;/code&gt; &lt;/a&gt;在&lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt;的基础实例上。</target>
        </trans-unit>
        <trans-unit id="19bb4e6602e1786c18a6b52f8a0bcf8a73adf2a7" translate="yes" xml:space="preserve">
          <source>Invokes &lt;a href=&quot;../ffi/struct.osstring#method.reserve_exact&quot;&gt;&lt;code&gt;reserve_exact&lt;/code&gt;&lt;/a&gt; on the underlying instance of &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt;的基础实例上调用&lt;a href=&quot;../ffi/struct.osstring#method.reserve_exact&quot;&gt; &lt;code&gt;reserve_exact&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="17f17310b62ca98a66dacbef4b44348c04ea8919" translate="yes" xml:space="preserve">
          <source>Invokes &lt;a href=&quot;../ffi/struct.osstring#method.shrink_to&quot;&gt;&lt;code&gt;shrink_to&lt;/code&gt;&lt;/a&gt; on the underlying instance of &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;../ffi/struct.osstring#method.shrink_to&quot;&gt; &lt;code&gt;shrink_to&lt;/code&gt; &lt;/a&gt;的基础实例上调用&lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc1a66892291a57859c285b1511e4adb63b718ef" translate="yes" xml:space="preserve">
          <source>Invokes &lt;a href=&quot;../ffi/struct.osstring#method.shrink_to_fit&quot;&gt;&lt;code&gt;shrink_to_fit&lt;/code&gt;&lt;/a&gt; on the underlying instance of &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;../ffi/struct.osstring#method.shrink_to_fit&quot;&gt; &lt;code&gt;shrink_to_fit&lt;/code&gt; &lt;/a&gt;的基础实例上调用&lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="33939d473461270530bee40f4613f194eeb624e1" translate="yes" xml:space="preserve">
          <source>Invokes a closure, capturing the cause of an unwinding panic if one occurs.</source>
          <target state="translated">引发闭合,在发生解套恐慌时捕捉原因。</target>
        </trans-unit>
        <trans-unit id="0dc0bc0c16d89f8a26d9f8e8e27b63f4e79127b2" translate="yes" xml:space="preserve">
          <source>Invokes memset on the specified pointer, setting &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes of memory starting at &lt;code&gt;self&lt;/code&gt; to &lt;code&gt;val&lt;/code&gt;.</source>
          <target state="translated">调用指定指针上的memset，将 &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; 个字节的内存从 &lt;code&gt;self&lt;/code&gt; 设置为 &lt;code&gt;val&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7edb4f958e67ccc2ebdef5e59be5a3705d1b5984" translate="yes" xml:space="preserve">
          <source>Invoking the macro on an expression moves and takes ownership of it before returning the evaluated expression unchanged. If the type of the expression does not implement &lt;code&gt;Copy&lt;/code&gt; and you don't want to give up ownership, you can instead borrow with &lt;code&gt;dbg!(&amp;amp;expr)&lt;/code&gt; for some expression &lt;code&gt;expr&lt;/code&gt;.</source>
          <target state="translated">调用表达式上的宏会移动并获取它的所有权，然后再返回不变的求值表达式。如果表达式的类型没有实现 &lt;code&gt;Copy&lt;/code&gt; ,并且您不想放弃所有权，则可以使用 &lt;code&gt;dbg!(&amp;amp;expr)&lt;/code&gt; 借用某些表达式 &lt;code&gt;expr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a14686f3a91a872040e4db2ac1c21bf4f904c92" translate="yes" xml:space="preserve">
          <source>Invoking undefined behavior via compiler intrinsics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85319a9242521d1b81154c86dbb76178cda35d2" translate="yes" xml:space="preserve">
          <source>Invoking undefined behavior via compiler intrinsics:</source>
          <target state="translated">通过编译器内在调用未定义行为。</target>
        </trans-unit>
        <trans-unit id="8ea7ba835c096df0008ad44cff1240d3b0866ef1" translate="yes" xml:space="preserve">
          <source>IoSlice</source>
          <target state="translated">IoSlice</target>
        </trans-unit>
        <trans-unit id="bf69b8681dc713cd673b4744a6a18884b73addc1" translate="yes" xml:space="preserve">
          <source>IoSlice::align_to</source>
          <target state="translated">IoSlice::align_to</target>
        </trans-unit>
        <trans-unit id="b6ecef449d7c716925f5b7b0b49d082a4bdbc2b8" translate="yes" xml:space="preserve">
          <source>IoSlice::as_ptr</source>
          <target state="translated">IoSlice::as_ptr</target>
        </trans-unit>
        <trans-unit id="77a5c4c2b1cbe6822957872bc631e9dc81a97b7a" translate="yes" xml:space="preserve">
          <source>IoSlice::binary_search</source>
          <target state="translated">IoSlice::binary_search</target>
        </trans-unit>
        <trans-unit id="b99305714a884d4e67d7225ef67c1aaace3a0d2a" translate="yes" xml:space="preserve">
          <source>IoSlice::binary_search_by</source>
          <target state="translated">IoSlice::binary_search_by</target>
        </trans-unit>
        <trans-unit id="b2b7e6c0a986e61ca591420616fe6966a129fdad" translate="yes" xml:space="preserve">
          <source>IoSlice::binary_search_by_key</source>
          <target state="translated">IoSlice::binary_search_by_key</target>
        </trans-unit>
        <trans-unit id="69d111c0972ec5963c7284b91c7aebfcec55891b" translate="yes" xml:space="preserve">
          <source>IoSlice::borrow</source>
          <target state="translated">IoSlice::borrow</target>
        </trans-unit>
        <trans-unit id="e0220b06a9a728a2ee453fdb0bf48c89e6024a6b" translate="yes" xml:space="preserve">
          <source>IoSlice::borrow_mut</source>
          <target state="translated">IoSlice::borrow_mut</target>
        </trans-unit>
        <trans-unit id="67dc23a0402757984c60ce5b402f95252eb22d87" translate="yes" xml:space="preserve">
          <source>IoSlice::chunks</source>
          <target state="translated">IoSlice::chunks</target>
        </trans-unit>
        <trans-unit id="a3056337e95e295361e36fae2d3ac55a93aa581c" translate="yes" xml:space="preserve">
          <source>IoSlice::chunks_exact</source>
          <target state="translated">IoSlice::chunks_exact</target>
        </trans-unit>
        <trans-unit id="911fd13cfc35bda5552744aea0451f85b09933ce" translate="yes" xml:space="preserve">
          <source>IoSlice::contains</source>
          <target state="translated">IoSlice::contains</target>
        </trans-unit>
        <trans-unit id="1bff3dd00133bd3cfb286f3bea310ac0cf1421c3" translate="yes" xml:space="preserve">
          <source>IoSlice::deref</source>
          <target state="translated">IoSlice::deref</target>
        </trans-unit>
        <trans-unit id="48072cbda243e3b9e179d39ee1a7cc128d1a937f" translate="yes" xml:space="preserve">
          <source>IoSlice::ends_with</source>
          <target state="translated">IoSlice::ends_with</target>
        </trans-unit>
        <trans-unit id="12d21cc5f8a9a9ed66a9f121aa2ba7dcd992afa2" translate="yes" xml:space="preserve">
          <source>IoSlice::eq_ignore_ascii_case</source>
          <target state="translated">IoSlice::eq_ignore_ascii_case</target>
        </trans-unit>
        <trans-unit id="cd8d733f91433d04a8ce7781e52e70e7dfffd99f" translate="yes" xml:space="preserve">
          <source>IoSlice::first</source>
          <target state="translated">IoSlice::first</target>
        </trans-unit>
        <trans-unit id="df6126ce38880e35ce060ff0c854c8309a24ac0e" translate="yes" xml:space="preserve">
          <source>IoSlice::fmt</source>
          <target state="translated">IoSlice::fmt</target>
        </trans-unit>
        <trans-unit id="ff7211a4daabf521e93261511880baae217efac4" translate="yes" xml:space="preserve">
          <source>IoSlice::from</source>
          <target state="translated">IoSlice::from</target>
        </trans-unit>
        <trans-unit id="3f81ad3ba2d6f6e75b1565f7d95b6aaa063cf60a" translate="yes" xml:space="preserve">
          <source>IoSlice::get</source>
          <target state="translated">IoSlice::get</target>
        </trans-unit>
        <trans-unit id="ddd8c6f234cd7ab0c552da1f27123df012711db7" translate="yes" xml:space="preserve">
          <source>IoSlice::get_unchecked</source>
          <target state="translated">IoSlice::get_unchecked</target>
        </trans-unit>
        <trans-unit id="fea55d08cc2b49f13f05547189186a4dc8d60ff9" translate="yes" xml:space="preserve">
          <source>IoSlice::into</source>
          <target state="translated">IoSlice::into</target>
        </trans-unit>
        <trans-unit id="fa82db2f2b2c313a4de2311d7bc8d4baf4a421fa" translate="yes" xml:space="preserve">
          <source>IoSlice::is_ascii</source>
          <target state="translated">IoSlice::is_ascii</target>
        </trans-unit>
        <trans-unit id="ff882761d48529351ae9d206494e3bec2c600ee5" translate="yes" xml:space="preserve">
          <source>IoSlice::is_empty</source>
          <target state="translated">IoSlice::is_empty</target>
        </trans-unit>
        <trans-unit id="3545e77f51efa1c6b8286f04bc4e0b2470be417b" translate="yes" xml:space="preserve">
          <source>IoSlice::is_sorted</source>
          <target state="translated">IoSlice::is_sorted</target>
        </trans-unit>
        <trans-unit id="4701fb2e410ad6e71f1f087266f993194c134f7b" translate="yes" xml:space="preserve">
          <source>IoSlice::is_sorted_by</source>
          <target state="translated">IoSlice::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="9472b8d8f8511079fc16e702ed084b2b7f7e6016" translate="yes" xml:space="preserve">
          <source>IoSlice::is_sorted_by_key</source>
          <target state="translated">IoSlice::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="2f0762847dd7e3fd1491b336362b18393b1a6965" translate="yes" xml:space="preserve">
          <source>IoSlice::iter</source>
          <target state="translated">IoSlice::iter</target>
        </trans-unit>
        <trans-unit id="f1c33c515a4f6f2a77787f9f8b1800fc0cb7392a" translate="yes" xml:space="preserve">
          <source>IoSlice::last</source>
          <target state="translated">IoSlice::last</target>
        </trans-unit>
        <trans-unit id="71b526ef1019bf4f73ee807254105381336e4d1c" translate="yes" xml:space="preserve">
          <source>IoSlice::len</source>
          <target state="translated">IoSlice::len</target>
        </trans-unit>
        <trans-unit id="967dd07a6e0c5576e4280dec2d30d45df16ac291" translate="yes" xml:space="preserve">
          <source>IoSlice::new</source>
          <target state="translated">IoSlice::new</target>
        </trans-unit>
        <trans-unit id="e9562dd3a5978f42d06066035675f397acce1c2b" translate="yes" xml:space="preserve">
          <source>IoSlice::rchunks</source>
          <target state="translated">IoSlice::rchunks</target>
        </trans-unit>
        <trans-unit id="af30963d5b4c2c7628a5afb93f5a9d3130eaa545" translate="yes" xml:space="preserve">
          <source>IoSlice::rchunks_exact</source>
          <target state="translated">IoSlice::rchunks_exact</target>
        </trans-unit>
        <trans-unit id="5006a78909ddbf7c8e9227d27186ddd35dae6459" translate="yes" xml:space="preserve">
          <source>IoSlice::repeat</source>
          <target state="translated">IoSlice::repeat</target>
        </trans-unit>
        <trans-unit id="055c2496baa6ae3bd9b33d660b588e6f2ebf5d4c" translate="yes" xml:space="preserve">
          <source>IoSlice::rsplit</source>
          <target state="translated">IoSlice::rsplit</target>
        </trans-unit>
        <trans-unit id="d3df5856ba5180f3260fca40514105630ea1ae9a" translate="yes" xml:space="preserve">
          <source>IoSlice::rsplitn</source>
          <target state="translated">IoSlice::rsplitn</target>
        </trans-unit>
        <trans-unit id="4e9115a3db6b0c099ecf94ffba746840b9b61e39" translate="yes" xml:space="preserve">
          <source>IoSlice::split</source>
          <target state="translated">IoSlice::split</target>
        </trans-unit>
        <trans-unit id="69853953f39b08c8104a39f89f6c888f20cccdf6" translate="yes" xml:space="preserve">
          <source>IoSlice::split_at</source>
          <target state="translated">IoSlice::split_at</target>
        </trans-unit>
        <trans-unit id="49a1324d962da721e4be986803d84827537c7170" translate="yes" xml:space="preserve">
          <source>IoSlice::split_first</source>
          <target state="translated">IoSlice::split_first</target>
        </trans-unit>
        <trans-unit id="05538b404adac2961d7e5bc92bef01b019825cd6" translate="yes" xml:space="preserve">
          <source>IoSlice::split_last</source>
          <target state="translated">IoSlice::split_last</target>
        </trans-unit>
        <trans-unit id="019564e811a7ef239d682e135b0fc68c251b133b" translate="yes" xml:space="preserve">
          <source>IoSlice::splitn</source>
          <target state="translated">IoSlice::splitn</target>
        </trans-unit>
        <trans-unit id="f61e9cda20345736621059e982beaf04c366b19b" translate="yes" xml:space="preserve">
          <source>IoSlice::starts_with</source>
          <target state="translated">IoSlice::starts_with</target>
        </trans-unit>
        <trans-unit id="843f9a3f4aeba9de52f81c21b641623650a4f908" translate="yes" xml:space="preserve">
          <source>IoSlice::to_ascii_lowercase</source>
          <target state="translated">IoSlice::to_ascii_lowercase</target>
        </trans-unit>
        <trans-unit id="1000adb40178bc3812fa5c878bdbe59eab225ef9" translate="yes" xml:space="preserve">
          <source>IoSlice::to_ascii_uppercase</source>
          <target state="translated">IoSlice::to_ascii_uppercase</target>
        </trans-unit>
        <trans-unit id="8a40698597eb46430e06c8ca37e19cc35bf7670e" translate="yes" xml:space="preserve">
          <source>IoSlice::to_vec</source>
          <target state="translated">IoSlice::to_vec</target>
        </trans-unit>
        <trans-unit id="790cec74306c7f07e3a27b8f7dfb0bbb3794bb65" translate="yes" xml:space="preserve">
          <source>IoSlice::try_from</source>
          <target state="translated">IoSlice::try_from</target>
        </trans-unit>
        <trans-unit id="43f5e13ccc6bae71b7f6204f1727c50f3248e591" translate="yes" xml:space="preserve">
          <source>IoSlice::try_into</source>
          <target state="translated">IoSlice::try_into</target>
        </trans-unit>
        <trans-unit id="ba54fa43762f26b417d2b3603b107780cf506264" translate="yes" xml:space="preserve">
          <source>IoSlice::type_id</source>
          <target state="translated">IoSlice::type_id</target>
        </trans-unit>
        <trans-unit id="4e3b2ad4c2f16ac0767ead9ab2125e9d33ceee8e" translate="yes" xml:space="preserve">
          <source>IoSlice::windows</source>
          <target state="translated">IoSlice::windows</target>
        </trans-unit>
        <trans-unit id="3095e84a9c9bc332f4091ce90417e2f7cc01182f" translate="yes" xml:space="preserve">
          <source>IoSliceMut</source>
          <target state="translated">IoSliceMut</target>
        </trans-unit>
        <trans-unit id="edc61764332d50536dc632bf3e42031b6220229f" translate="yes" xml:space="preserve">
          <source>IoSliceMut::align_to</source>
          <target state="translated">IoSliceMut::align_to</target>
        </trans-unit>
        <trans-unit id="6165ce93f6a343b1b6974bf63a9dc441cfa9b855" translate="yes" xml:space="preserve">
          <source>IoSliceMut::align_to_mut</source>
          <target state="translated">IoSliceMut::align_to_mut</target>
        </trans-unit>
        <trans-unit id="756ce08f67d32fb2870a7d27c2cf0b5d1fdceeda" translate="yes" xml:space="preserve">
          <source>IoSliceMut::as_mut_ptr</source>
          <target state="translated">IoSliceMut::as_mut_ptr</target>
        </trans-unit>
        <trans-unit id="53eec41d853d1cd27e3aa8594d9ca519a6e70256" translate="yes" xml:space="preserve">
          <source>IoSliceMut::as_ptr</source>
          <target state="translated">IoSliceMut::as_ptr</target>
        </trans-unit>
        <trans-unit id="feee017bcb491b872bb0c7e0e011449a0d2fba5b" translate="yes" xml:space="preserve">
          <source>IoSliceMut::binary_search</source>
          <target state="translated">IoSliceMut::binary_search</target>
        </trans-unit>
        <trans-unit id="91d068e145a8703aa2b53040a33e0633d07ae322" translate="yes" xml:space="preserve">
          <source>IoSliceMut::binary_search_by</source>
          <target state="translated">IoSliceMut::binary_search_by</target>
        </trans-unit>
        <trans-unit id="cf8c8086f089d2efa99d956c60331c0cffaba94a" translate="yes" xml:space="preserve">
          <source>IoSliceMut::binary_search_by_key</source>
          <target state="translated">IoSliceMut::binary_search_by_key</target>
        </trans-unit>
        <trans-unit id="814009b2627b9eb1414d1db129d496de87b90dee" translate="yes" xml:space="preserve">
          <source>IoSliceMut::borrow</source>
          <target state="translated">IoSliceMut::borrow</target>
        </trans-unit>
        <trans-unit id="caeb2fb6619a9691d7ba27f727be8e220bf3a927" translate="yes" xml:space="preserve">
          <source>IoSliceMut::borrow_mut</source>
          <target state="translated">IoSliceMut::borrow_mut</target>
        </trans-unit>
        <trans-unit id="b1cb059b24c754db0743f290cc8e416acdc4078d" translate="yes" xml:space="preserve">
          <source>IoSliceMut::chunks</source>
          <target state="translated">IoSliceMut::chunks</target>
        </trans-unit>
        <trans-unit id="4ea089981896b2968abb410d369893430efed500" translate="yes" xml:space="preserve">
          <source>IoSliceMut::chunks_exact</source>
          <target state="translated">IoSliceMut::chunks_exact</target>
        </trans-unit>
        <trans-unit id="f1be8473de9a8d39d4f075d887ea01ff1f9161e0" translate="yes" xml:space="preserve">
          <source>IoSliceMut::chunks_exact_mut</source>
          <target state="translated">IoSliceMut::chunks_exact_mut</target>
        </trans-unit>
        <trans-unit id="767b916694743c2e64a1c234e5dd646ac41ca1fc" translate="yes" xml:space="preserve">
          <source>IoSliceMut::chunks_mut</source>
          <target state="translated">IoSliceMut::chunks_mut</target>
        </trans-unit>
        <trans-unit id="f404069508d8888d6af514f87922bc8d40f10f6c" translate="yes" xml:space="preserve">
          <source>IoSliceMut::clone_from_slice</source>
          <target state="translated">IoSliceMut::clone_from_slice</target>
        </trans-unit>
        <trans-unit id="c7c55fc22e698b053cd4550732c2746b176f44ba" translate="yes" xml:space="preserve">
          <source>IoSliceMut::contains</source>
          <target state="translated">IoSliceMut::contains</target>
        </trans-unit>
        <trans-unit id="dbb130c545841944c9cc0b6c9e692b48dc327a1e" translate="yes" xml:space="preserve">
          <source>IoSliceMut::copy_from_slice</source>
          <target state="translated">IoSliceMut::copy_from_slice</target>
        </trans-unit>
        <trans-unit id="71a3fdfdbafc2bc43ba47f9382fcc293b92c46e3" translate="yes" xml:space="preserve">
          <source>IoSliceMut::copy_within</source>
          <target state="translated">IoSliceMut::copy_within</target>
        </trans-unit>
        <trans-unit id="890c0786efc8a468ffebc08fb5498cda52cf33fb" translate="yes" xml:space="preserve">
          <source>IoSliceMut::deref</source>
          <target state="translated">IoSliceMut::deref</target>
        </trans-unit>
        <trans-unit id="4a7f6590300a48130f1f500865046f4da8307d95" translate="yes" xml:space="preserve">
          <source>IoSliceMut::deref_mut</source>
          <target state="translated">IoSliceMut::deref_mut</target>
        </trans-unit>
        <trans-unit id="4c937a77491635e4e51ece3d6794e05ccebd811b" translate="yes" xml:space="preserve">
          <source>IoSliceMut::ends_with</source>
          <target state="translated">IoSliceMut::ends_with</target>
        </trans-unit>
        <trans-unit id="80baa7923010134c30d45ede26ebcb72f4ec4c94" translate="yes" xml:space="preserve">
          <source>IoSliceMut::eq_ignore_ascii_case</source>
          <target state="translated">IoSliceMut::eq_ignore_ascii_case</target>
        </trans-unit>
        <trans-unit id="00978c0ce0b22335f6482ceca143e772ce778265" translate="yes" xml:space="preserve">
          <source>IoSliceMut::first</source>
          <target state="translated">IoSliceMut::first</target>
        </trans-unit>
        <trans-unit id="efca655b88011a830e591bfe2b1493cadaf05e46" translate="yes" xml:space="preserve">
          <source>IoSliceMut::first_mut</source>
          <target state="translated">IoSliceMut::first_mut</target>
        </trans-unit>
        <trans-unit id="087659858c5fbd32d8ce660c5d447d432b4a58f9" translate="yes" xml:space="preserve">
          <source>IoSliceMut::fmt</source>
          <target state="translated">IoSliceMut::fmt</target>
        </trans-unit>
        <trans-unit id="cb369e3527c8a515f146f114fa20da06fa0105bd" translate="yes" xml:space="preserve">
          <source>IoSliceMut::from</source>
          <target state="translated">IoSliceMut::from</target>
        </trans-unit>
        <trans-unit id="1a4874b1746a7812e40b2ffd5ecaf8ee17040c73" translate="yes" xml:space="preserve">
          <source>IoSliceMut::get</source>
          <target state="translated">IoSliceMut::get</target>
        </trans-unit>
        <trans-unit id="87cf1ba0087efc43ee27e77bd516e6bc62235196" translate="yes" xml:space="preserve">
          <source>IoSliceMut::get_mut</source>
          <target state="translated">IoSliceMut::get_mut</target>
        </trans-unit>
        <trans-unit id="9224459dc771cd1e571acc3f60ac5030d6506ad4" translate="yes" xml:space="preserve">
          <source>IoSliceMut::get_unchecked</source>
          <target state="translated">IoSliceMut::get_unchecked</target>
        </trans-unit>
        <trans-unit id="6c84cb3392dfcb3ebc95e49bec2c9a2caf890b70" translate="yes" xml:space="preserve">
          <source>IoSliceMut::get_unchecked_mut</source>
          <target state="translated">IoSliceMut::get_unchecked_mut</target>
        </trans-unit>
        <trans-unit id="87175e203ab3ff1feb03a30f6abb72b0c78f325f" translate="yes" xml:space="preserve">
          <source>IoSliceMut::into</source>
          <target state="translated">IoSliceMut::into</target>
        </trans-unit>
        <trans-unit id="4501fdbbbb28747f7aaad7c1a5b8a44782077179" translate="yes" xml:space="preserve">
          <source>IoSliceMut::is_ascii</source>
          <target state="translated">IoSliceMut::is_ascii</target>
        </trans-unit>
        <trans-unit id="9838cb25545f83e047044f3c84c1e510152c5e9a" translate="yes" xml:space="preserve">
          <source>IoSliceMut::is_empty</source>
          <target state="translated">IoSliceMut::is_empty</target>
        </trans-unit>
        <trans-unit id="f055a512eb3e13e97c7f4986f75a28be49709162" translate="yes" xml:space="preserve">
          <source>IoSliceMut::is_sorted</source>
          <target state="translated">IoSliceMut::is_sorted</target>
        </trans-unit>
        <trans-unit id="3e5f350240631bbb82c3ccc7b63b75f7ef3cff06" translate="yes" xml:space="preserve">
          <source>IoSliceMut::is_sorted_by</source>
          <target state="translated">IoSliceMut::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="f2e9454f22d864a0c455e41dc7fb5b7ca6dd2c05" translate="yes" xml:space="preserve">
          <source>IoSliceMut::is_sorted_by_key</source>
          <target state="translated">IoSliceMut::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="fb1e214569f94fc95d9751c93230dfe38c28f64d" translate="yes" xml:space="preserve">
          <source>IoSliceMut::iter</source>
          <target state="translated">IoSliceMut::iter</target>
        </trans-unit>
        <trans-unit id="d77e5889908e5866350ffeb826e0ee4b302306d1" translate="yes" xml:space="preserve">
          <source>IoSliceMut::iter_mut</source>
          <target state="translated">IoSliceMut::iter_mut</target>
        </trans-unit>
        <trans-unit id="8934e61161bd86f368fc145fd636e2c155d1529f" translate="yes" xml:space="preserve">
          <source>IoSliceMut::last</source>
          <target state="translated">IoSliceMut::last</target>
        </trans-unit>
        <trans-unit id="e110df4ba897b60ee2d225cbfc465e2c2376e128" translate="yes" xml:space="preserve">
          <source>IoSliceMut::last_mut</source>
          <target state="translated">IoSliceMut::last_mut</target>
        </trans-unit>
        <trans-unit id="2ae8d8c5611aee438f8d894e9883dff2fd658f4e" translate="yes" xml:space="preserve">
          <source>IoSliceMut::len</source>
          <target state="translated">IoSliceMut::len</target>
        </trans-unit>
        <trans-unit id="47113547b6123b6a9b0c2bd9c5c02e4ace6bda06" translate="yes" xml:space="preserve">
          <source>IoSliceMut::make_ascii_lowercase</source>
          <target state="translated">IoSliceMut::make_ascii_lowercase</target>
        </trans-unit>
        <trans-unit id="1368789df63815a8365adaaa916b097c47ee6bf0" translate="yes" xml:space="preserve">
          <source>IoSliceMut::make_ascii_uppercase</source>
          <target state="translated">IoSliceMut::make_ascii_uppercase</target>
        </trans-unit>
        <trans-unit id="2bfeef33af972135cd4201fd40a799693a598545" translate="yes" xml:space="preserve">
          <source>IoSliceMut::new</source>
          <target state="translated">IoSliceMut::new</target>
        </trans-unit>
        <trans-unit id="d0fc0d6411d4a1c6e3b5edaf08263c19c66688b7" translate="yes" xml:space="preserve">
          <source>IoSliceMut::partition_at_index</source>
          <target state="translated">IoSliceMut::partition_at_index</target>
        </trans-unit>
        <trans-unit id="7e77416a3b99e33c3ca80e12413b2d6db2066eb0" translate="yes" xml:space="preserve">
          <source>IoSliceMut::partition_at_index_by</source>
          <target state="translated">IoSliceMut::partition_at_index_by</target>
        </trans-unit>
        <trans-unit id="9259876e720033ee87d32732200d6400132c625e" translate="yes" xml:space="preserve">
          <source>IoSliceMut::partition_at_index_by_key</source>
          <target state="translated">IoSliceMut::partition_at_index_by_key</target>
        </trans-unit>
        <trans-unit id="d3b05480abbc9116759faebf47e681f0d773c97b" translate="yes" xml:space="preserve">
          <source>IoSliceMut::partition_dedup</source>
          <target state="translated">IoSliceMut::partition_dedup</target>
        </trans-unit>
        <trans-unit id="aa55cd0eb794711175af2dd5d3f07714f2510500" translate="yes" xml:space="preserve">
          <source>IoSliceMut::partition_dedup_by</source>
          <target state="translated">IoSliceMut::partition_dedup_by</target>
        </trans-unit>
        <trans-unit id="c9023248e90bdb829d7846b404b7dd00c8e2f1d8" translate="yes" xml:space="preserve">
          <source>IoSliceMut::partition_dedup_by_key</source>
          <target state="translated">IoSliceMut::partition_dedup_by_key</target>
        </trans-unit>
        <trans-unit id="112858cc757d2ee696d5fd19edd29a07e86a60dd" translate="yes" xml:space="preserve">
          <source>IoSliceMut::rchunks</source>
          <target state="translated">IoSliceMut::rchunks</target>
        </trans-unit>
        <trans-unit id="27c3a585495b862cd5953b14b62627eb2b786e7e" translate="yes" xml:space="preserve">
          <source>IoSliceMut::rchunks_exact</source>
          <target state="translated">IoSliceMut::rchunks_exact</target>
        </trans-unit>
        <trans-unit id="0bbc4b799ee0750c9670f7268648fc24ec698bf5" translate="yes" xml:space="preserve">
          <source>IoSliceMut::rchunks_exact_mut</source>
          <target state="translated">IoSliceMut::rchunks_exact_mut</target>
        </trans-unit>
        <trans-unit id="e0079c5e5007cbcfdd4a4ec3cdc15f0f595b4eb9" translate="yes" xml:space="preserve">
          <source>IoSliceMut::rchunks_mut</source>
          <target state="translated">IoSliceMut::rchunks_mut</target>
        </trans-unit>
        <trans-unit id="5a1db3383ef35f1e9a609af596c49764b468ecc0" translate="yes" xml:space="preserve">
          <source>IoSliceMut::repeat</source>
          <target state="translated">IoSliceMut::repeat</target>
        </trans-unit>
        <trans-unit id="4b00bcb936857777cddfc030b90dd94af33aab6f" translate="yes" xml:space="preserve">
          <source>IoSliceMut::reverse</source>
          <target state="translated">IoSliceMut::reverse</target>
        </trans-unit>
        <trans-unit id="b8383f8b3071a37ca80d4fd630b68ae5d6407f25" translate="yes" xml:space="preserve">
          <source>IoSliceMut::rotate_left</source>
          <target state="translated">IoSliceMut::rotate_left</target>
        </trans-unit>
        <trans-unit id="b81b7fa90aa18a998eac27394adb8adaba8589f1" translate="yes" xml:space="preserve">
          <source>IoSliceMut::rotate_right</source>
          <target state="translated">IoSliceMut::rotate_right</target>
        </trans-unit>
        <trans-unit id="8b5984b3aa27e1db968a75d1458662d4356f394f" translate="yes" xml:space="preserve">
          <source>IoSliceMut::rsplit</source>
          <target state="translated">IoSliceMut::rsplit</target>
        </trans-unit>
        <trans-unit id="7b014f737bfafc775e4b112ac7ec11323e2824e1" translate="yes" xml:space="preserve">
          <source>IoSliceMut::rsplit_mut</source>
          <target state="translated">IoSliceMut::rsplit_mut</target>
        </trans-unit>
        <trans-unit id="79948d326e7daffd00109bebcfe6ec92b09222ad" translate="yes" xml:space="preserve">
          <source>IoSliceMut::rsplitn</source>
          <target state="translated">IoSliceMut::rsplitn</target>
        </trans-unit>
        <trans-unit id="8a0545746595f7e4171cebd930e38c4c6d0fd3e8" translate="yes" xml:space="preserve">
          <source>IoSliceMut::rsplitn_mut</source>
          <target state="translated">IoSliceMut::rsplitn_mut</target>
        </trans-unit>
        <trans-unit id="ddb129b041939c14d352bbf67329eeecf7260e65" translate="yes" xml:space="preserve">
          <source>IoSliceMut::sort</source>
          <target state="translated">IoSliceMut::sort</target>
        </trans-unit>
        <trans-unit id="35ba78eb5cd736c963cfc215217c45c8dda10d3b" translate="yes" xml:space="preserve">
          <source>IoSliceMut::sort_by</source>
          <target state="translated">IoSliceMut::sort_by</target>
        </trans-unit>
        <trans-unit id="aee0fff21b9514e212d22c64b39409165b2cab64" translate="yes" xml:space="preserve">
          <source>IoSliceMut::sort_by_cached_key</source>
          <target state="translated">IoSliceMut::sort_by_cached_key</target>
        </trans-unit>
        <trans-unit id="994f7e09e5d80ef5dd812336bcb0a176a31ef6c1" translate="yes" xml:space="preserve">
          <source>IoSliceMut::sort_by_key</source>
          <target state="translated">IoSliceMut::sort_by_key</target>
        </trans-unit>
        <trans-unit id="69a01417bee9fe016be3925f4d1c6f53bb4316b9" translate="yes" xml:space="preserve">
          <source>IoSliceMut::sort_unstable</source>
          <target state="translated">IoSliceMut::sort_unstable</target>
        </trans-unit>
        <trans-unit id="26d86d6c065cff24f16e866215162e8197db89a2" translate="yes" xml:space="preserve">
          <source>IoSliceMut::sort_unstable_by</source>
          <target state="translated">IoSliceMut::sort_unstable_by</target>
        </trans-unit>
        <trans-unit id="1591d811a42faf0c27290c61c13962a9d52e6883" translate="yes" xml:space="preserve">
          <source>IoSliceMut::sort_unstable_by_key</source>
          <target state="translated">IoSliceMut::sort_unstable_by_key</target>
        </trans-unit>
        <trans-unit id="ca126408cfc67455e487ee1930ca11c397f8f21f" translate="yes" xml:space="preserve">
          <source>IoSliceMut::split</source>
          <target state="translated">IoSliceMut::split</target>
        </trans-unit>
        <trans-unit id="9ce7dd2f993172516d076ad5208aaaaaed4be576" translate="yes" xml:space="preserve">
          <source>IoSliceMut::split_at</source>
          <target state="translated">IoSliceMut::split_at</target>
        </trans-unit>
        <trans-unit id="a9f4775f9c968b1b54abb603239e2832c3960bcd" translate="yes" xml:space="preserve">
          <source>IoSliceMut::split_at_mut</source>
          <target state="translated">IoSliceMut::split_at_mut</target>
        </trans-unit>
        <trans-unit id="04f41bcdd653cbc93653f91796e5a60801b9293d" translate="yes" xml:space="preserve">
          <source>IoSliceMut::split_first</source>
          <target state="translated">IoSliceMut::split_first</target>
        </trans-unit>
        <trans-unit id="d88487ea6f16bda2b38a613374cc839f837e50ee" translate="yes" xml:space="preserve">
          <source>IoSliceMut::split_first_mut</source>
          <target state="translated">IoSliceMut::split_first_mut</target>
        </trans-unit>
        <trans-unit id="e077fdea55bf605bea57cd6afeaf715ca83c0ad3" translate="yes" xml:space="preserve">
          <source>IoSliceMut::split_last</source>
          <target state="translated">IoSliceMut::split_last</target>
        </trans-unit>
        <trans-unit id="c8e20234f7bea859d7664b1b7bb3eed2bc4a51d5" translate="yes" xml:space="preserve">
          <source>IoSliceMut::split_last_mut</source>
          <target state="translated">IoSliceMut::split_last_mut</target>
        </trans-unit>
        <trans-unit id="f6235363d8f27f1e8c28bf4df2329fcbc4ace1a1" translate="yes" xml:space="preserve">
          <source>IoSliceMut::split_mut</source>
          <target state="translated">IoSliceMut::split_mut</target>
        </trans-unit>
        <trans-unit id="9dbada99c8a947eba3daeff4a3521f91bb81bd90" translate="yes" xml:space="preserve">
          <source>IoSliceMut::splitn</source>
          <target state="translated">IoSliceMut::splitn</target>
        </trans-unit>
        <trans-unit id="3cf2674726ff6b7045de0b3e635d0a1f7df50615" translate="yes" xml:space="preserve">
          <source>IoSliceMut::splitn_mut</source>
          <target state="translated">IoSliceMut::splitn_mut</target>
        </trans-unit>
        <trans-unit id="aa18548ad4490c3366a3bab22827f88c2eb93f27" translate="yes" xml:space="preserve">
          <source>IoSliceMut::starts_with</source>
          <target state="translated">IoSliceMut::starts_with</target>
        </trans-unit>
        <trans-unit id="53e5e19d65bb8030c09ed2572e8e551a619bb85a" translate="yes" xml:space="preserve">
          <source>IoSliceMut::swap</source>
          <target state="translated">IoSliceMut::swap</target>
        </trans-unit>
        <trans-unit id="a645fa50fbb5c37388df17709c852c50b89ea8d6" translate="yes" xml:space="preserve">
          <source>IoSliceMut::swap_with_slice</source>
          <target state="translated">IoSliceMut::swap_with_slice</target>
        </trans-unit>
        <trans-unit id="ae3bf6a739be497a693a36ed80d558bbb3918541" translate="yes" xml:space="preserve">
          <source>IoSliceMut::to_ascii_lowercase</source>
          <target state="translated">IoSliceMut::to_ascii_lowercase</target>
        </trans-unit>
        <trans-unit id="e376283217440eef63b94cd987da83cb40aede71" translate="yes" xml:space="preserve">
          <source>IoSliceMut::to_ascii_uppercase</source>
          <target state="translated">IoSliceMut::to_ascii_uppercase</target>
        </trans-unit>
        <trans-unit id="391fa7871165db3ac0f05870f2a5050056f7916a" translate="yes" xml:space="preserve">
          <source>IoSliceMut::to_vec</source>
          <target state="translated">IoSliceMut::to_vec</target>
        </trans-unit>
        <trans-unit id="8376010efc59358ba141cb428936bf23451c7d6e" translate="yes" xml:space="preserve">
          <source>IoSliceMut::try_from</source>
          <target state="translated">IoSliceMut::try_from</target>
        </trans-unit>
        <trans-unit id="ce50ba5cdfbc273da4c72a3e73ca855ed6cf6df0" translate="yes" xml:space="preserve">
          <source>IoSliceMut::try_into</source>
          <target state="translated">IoSliceMut::try_into</target>
        </trans-unit>
        <trans-unit id="b83dd87d2ec2e898db655ae58a7cd873ea0d8d2e" translate="yes" xml:space="preserve">
          <source>IoSliceMut::type_id</source>
          <target state="translated">IoSliceMut::type_id</target>
        </trans-unit>
        <trans-unit id="0677fc2bcad3ffd6e1f3e2e468b03f8e0639f7c7" translate="yes" xml:space="preserve">
          <source>IoSliceMut::windows</source>
          <target state="translated">IoSliceMut::windows</target>
        </trans-unit>
        <trans-unit id="80c7dd22517caabb4b80ff90fceda4a6879202d3" translate="yes" xml:space="preserve">
          <source>IpAddr</source>
          <target state="translated">IpAddr</target>
        </trans-unit>
        <trans-unit id="18dcf7a25bc74232fd1ef06e66f66a9b58a15594" translate="yes" xml:space="preserve">
          <source>IpAddr::borrow</source>
          <target state="translated">IpAddr::borrow</target>
        </trans-unit>
        <trans-unit id="8ccc863c2cc929b895a9a7a5f36b4ffd6dacfefb" translate="yes" xml:space="preserve">
          <source>IpAddr::borrow_mut</source>
          <target state="translated">IpAddr::borrow_mut</target>
        </trans-unit>
        <trans-unit id="1d22b0fa46381b2fee190440340df7db25bbaab4" translate="yes" xml:space="preserve">
          <source>IpAddr::clamp</source>
          <target state="translated">IpAddr::clamp</target>
        </trans-unit>
        <trans-unit id="c5b49df3db406820aae7446426b53c486eb09ed2" translate="yes" xml:space="preserve">
          <source>IpAddr::clone</source>
          <target state="translated">IpAddr::clone</target>
        </trans-unit>
        <trans-unit id="df8040dfc89ba7aed1f5bb9fb38c981ae8013245" translate="yes" xml:space="preserve">
          <source>IpAddr::clone_from</source>
          <target state="translated">IpAddr::clone_from</target>
        </trans-unit>
        <trans-unit id="2e231a5b1670e66fd9b295e66c9b487760ec0cd5" translate="yes" xml:space="preserve">
          <source>IpAddr::clone_into</source>
          <target state="translated">IpAddr::clone_into</target>
        </trans-unit>
        <trans-unit id="ccf0a20beed4bfb31ab7de41f2fe72887b3afef1" translate="yes" xml:space="preserve">
          <source>IpAddr::cmp</source>
          <target state="translated">IpAddr::cmp</target>
        </trans-unit>
        <trans-unit id="1e451c2048ce103ce5a1fdc80f143226ee3ac738" translate="yes" xml:space="preserve">
          <source>IpAddr::eq</source>
          <target state="translated">IpAddr::eq</target>
        </trans-unit>
        <trans-unit id="de15dc7014bcddec35489eab12ccb7de4e61f814" translate="yes" xml:space="preserve">
          <source>IpAddr::fmt</source>
          <target state="translated">IpAddr::fmt</target>
        </trans-unit>
        <trans-unit id="cd82d20eb5adef0621b03b67c04075c8e8d22c13" translate="yes" xml:space="preserve">
          <source>IpAddr::from</source>
          <target state="translated">IpAddr::from</target>
        </trans-unit>
        <trans-unit id="1b18f811dcd6bd2be2da6af78c6da2512cea431f" translate="yes" xml:space="preserve">
          <source>IpAddr::from_str</source>
          <target state="translated">IpAddr::from_str</target>
        </trans-unit>
        <trans-unit id="fe7270d2fc646cf2e120c74e60b44f6fe3226fb1" translate="yes" xml:space="preserve">
          <source>IpAddr::ge</source>
          <target state="translated">IpAddr::ge</target>
        </trans-unit>
        <trans-unit id="596bc315329df27bdada6bfc4c172ea14c6cc583" translate="yes" xml:space="preserve">
          <source>IpAddr::gt</source>
          <target state="translated">IpAddr::gt</target>
        </trans-unit>
        <trans-unit id="7b43ebda452f32a749f28cf341479b33fad4fd8f" translate="yes" xml:space="preserve">
          <source>IpAddr::hash</source>
          <target state="translated">IpAddr::hash</target>
        </trans-unit>
        <trans-unit id="a6c626e9d203c303fe8bdf8bd02befa7941a60f6" translate="yes" xml:space="preserve">
          <source>IpAddr::hash_slice</source>
          <target state="translated">IpAddr::hash_slice</target>
        </trans-unit>
        <trans-unit id="bc0a2a089760008263e0c7d196dcda76407f2e2f" translate="yes" xml:space="preserve">
          <source>IpAddr::into</source>
          <target state="translated">IpAddr::into</target>
        </trans-unit>
        <trans-unit id="6aea05c2bb7a6ec19799f8ccd09371123895bffd" translate="yes" xml:space="preserve">
          <source>IpAddr::is_documentation</source>
          <target state="translated">IpAddr::is_documentation</target>
        </trans-unit>
        <trans-unit id="35e750aa8facebec148e21174f1b11f8f102ac1e" translate="yes" xml:space="preserve">
          <source>IpAddr::is_global</source>
          <target state="translated">IpAddr::is_global</target>
        </trans-unit>
        <trans-unit id="6d3064eb468b3aa541c1ebcbb93937383d1b5ce2" translate="yes" xml:space="preserve">
          <source>IpAddr::is_ipv4</source>
          <target state="translated">IpAddr::is_ipv4</target>
        </trans-unit>
        <trans-unit id="7cdffbf0a370fd55a0c2a72fa5c73de1a7e9c8ae" translate="yes" xml:space="preserve">
          <source>IpAddr::is_ipv6</source>
          <target state="translated">IpAddr::is_ipv6</target>
        </trans-unit>
        <trans-unit id="f1b5ba9a40c1d77558e70ec390b97ec0113d8759" translate="yes" xml:space="preserve">
          <source>IpAddr::is_loopback</source>
          <target state="translated">IpAddr::is_loopback</target>
        </trans-unit>
        <trans-unit id="e91ac24fb68aad99d2dea251365431ba20a3867b" translate="yes" xml:space="preserve">
          <source>IpAddr::is_multicast</source>
          <target state="translated">IpAddr::is_multicast</target>
        </trans-unit>
        <trans-unit id="a457140fd4bc4739b6888b5fa4fd5a528a1e87d7" translate="yes" xml:space="preserve">
          <source>IpAddr::is_unspecified</source>
          <target state="translated">IpAddr::is_unspecified</target>
        </trans-unit>
        <trans-unit id="075a86319470dde568dd6a068923e786ff41b626" translate="yes" xml:space="preserve">
          <source>IpAddr::le</source>
          <target state="translated">IpAddr::le</target>
        </trans-unit>
        <trans-unit id="2ee565a162a01a379da7271dca98ac34c1b3d062" translate="yes" xml:space="preserve">
          <source>IpAddr::lt</source>
          <target state="translated">IpAddr::lt</target>
        </trans-unit>
        <trans-unit id="21475b86807c525401acbad46b0d285b86f77c6c" translate="yes" xml:space="preserve">
          <source>IpAddr::max</source>
          <target state="translated">IpAddr::max</target>
        </trans-unit>
        <trans-unit id="6c19c9fa1118c738451a2a0ccab1e063e8453279" translate="yes" xml:space="preserve">
          <source>IpAddr::min</source>
          <target state="translated">IpAddr::min</target>
        </trans-unit>
        <trans-unit id="80516dd8787ef4ff1f53fd45e6539ecc0557944c" translate="yes" xml:space="preserve">
          <source>IpAddr::ne</source>
          <target state="translated">IpAddr::ne</target>
        </trans-unit>
        <trans-unit id="5ac433ae6b88b3faf0bab89b49547e507f3c5dbe" translate="yes" xml:space="preserve">
          <source>IpAddr::partial_cmp</source>
          <target state="translated">IpAddr::partial_cmp</target>
        </trans-unit>
        <trans-unit id="a66331ad09004ffc11c6bc336cec3dd2c1058851" translate="yes" xml:space="preserve">
          <source>IpAddr::to_owned</source>
          <target state="translated">IpAddr::to_owned</target>
        </trans-unit>
        <trans-unit id="c266c72106f541c9d079787ece667b3b71aa633c" translate="yes" xml:space="preserve">
          <source>IpAddr::to_string</source>
          <target state="translated">IpAddr::to_string</target>
        </trans-unit>
        <trans-unit id="310b4b19006f132dcc381f1e6408fe062644a5dc" translate="yes" xml:space="preserve">
          <source>IpAddr::try_from</source>
          <target state="translated">IpAddr::try_from</target>
        </trans-unit>
        <trans-unit id="6de54fb276669395f791daae14b60bdb8bb9ecab" translate="yes" xml:space="preserve">
          <source>IpAddr::try_into</source>
          <target state="translated">IpAddr::try_into</target>
        </trans-unit>
        <trans-unit id="76655a5dcdc7c4b7a1f489495625902f75957be4" translate="yes" xml:space="preserve">
          <source>IpAddr::type_id</source>
          <target state="translated">IpAddr::type_id</target>
        </trans-unit>
        <trans-unit id="9576adee9505e0e642c8cf6d8f843a2b00527190" translate="yes" xml:space="preserve">
          <source>Ipv4Addr</source>
          <target state="translated">Ipv4Addr</target>
        </trans-unit>
        <trans-unit id="c0670c429f8a4f4f07ef0b7f2b4e03d5be7cdc5b" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::borrow</source>
          <target state="translated">Ipv4Addr::borrow</target>
        </trans-unit>
        <trans-unit id="66fc34d63836dd285320b9e7805a0993e253d053" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::borrow_mut</source>
          <target state="translated">Ipv4Addr::borrow_mut</target>
        </trans-unit>
        <trans-unit id="87a2ad02487f9ecff09754664875f3fbf92e1aab" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::clamp</source>
          <target state="translated">Ipv4Addr::clamp</target>
        </trans-unit>
        <trans-unit id="86447e7e8694086d5dc29cbcf6bbc43172b77513" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::clone</source>
          <target state="translated">Ipv4Addr::clone</target>
        </trans-unit>
        <trans-unit id="f49b0fda7799a12b9106e653f8817c29e74a2242" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::clone_from</source>
          <target state="translated">Ipv4Addr::clone_from</target>
        </trans-unit>
        <trans-unit id="70d0f414add20ac85a1ac45856f7ef5006e570d8" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::clone_into</source>
          <target state="translated">Ipv4Addr::clone_into</target>
        </trans-unit>
        <trans-unit id="dc9773a4bf1673daf97b49a6b852c1d09da0533a" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::cmp</source>
          <target state="translated">Ipv4Addr::cmp</target>
        </trans-unit>
        <trans-unit id="9e8900c91f9869e1bd25bdeb1f480c627ddad7c1" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::eq</source>
          <target state="translated">Ipv4Addr::eq</target>
        </trans-unit>
        <trans-unit id="4cd7a35503bdc79c8a6d2eb2e96d19bb1d13b386" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::fmt</source>
          <target state="translated">Ipv4Addr::fmt</target>
        </trans-unit>
        <trans-unit id="96f1af7ae9368105392d9cc46e3fcdf5512b5c86" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::from</source>
          <target state="translated">Ipv4Addr::from</target>
        </trans-unit>
        <trans-unit id="c9814a89a183d677ccaba791ca610f1dbd9966e0" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::from_str</source>
          <target state="translated">Ipv4Addr::from_str</target>
        </trans-unit>
        <trans-unit id="a99258bd17a7b9473a9733d0d8cefdf5f6718002" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::ge</source>
          <target state="translated">Ipv4Addr::ge</target>
        </trans-unit>
        <trans-unit id="17edfcb10f49b77c9d0c9872e17c35b5128a4660" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::gt</source>
          <target state="translated">Ipv4Addr::gt</target>
        </trans-unit>
        <trans-unit id="8d9673e9e9140d616d250a1c2fd05b32e727f0bd" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::hash</source>
          <target state="translated">Ipv4Addr::hash</target>
        </trans-unit>
        <trans-unit id="33d72bb730a0f4415706682897a4dbeca937097e" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::hash_slice</source>
          <target state="translated">Ipv4Addr::hash_slice</target>
        </trans-unit>
        <trans-unit id="a0a5624897c7561cf8904fb1069326cac7d4849a" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::into</source>
          <target state="translated">Ipv4Addr::into</target>
        </trans-unit>
        <trans-unit id="a28162edd246e58c591efd6d2f7e0f95677a17b4" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::is_benchmarking</source>
          <target state="translated">Ipv4Addr::is_benchmarking</target>
        </trans-unit>
        <trans-unit id="e6c68f36a0501dd1c101e1de3fe289267ab116d7" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::is_broadcast</source>
          <target state="translated">Ipv4Addr::is_broadcast</target>
        </trans-unit>
        <trans-unit id="d1c44235068a67cbe1de6fa7f1ecd5c62159b7eb" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::is_documentation</source>
          <target state="translated">Ipv4Addr::is_documentation</target>
        </trans-unit>
        <trans-unit id="490980e7baecbdb16df4c536ff701a4b9c6f3a87" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::is_global</source>
          <target state="translated">Ipv4Addr::is_global</target>
        </trans-unit>
        <trans-unit id="7dc9db6b00fed2f3a364f1abbeb6b19c6a865b8c" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::is_ietf_protocol_assignment</source>
          <target state="translated">Ipv4Addr::is_ietf_protocol_assignment</target>
        </trans-unit>
        <trans-unit id="bcc94df664112964d43eabb2d514303df1ec2159" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::is_link_local</source>
          <target state="translated">Ipv4Addr::is_link_local</target>
        </trans-unit>
        <trans-unit id="cfe2080acebd57083f5209b2051ccd19002609f2" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::is_loopback</source>
          <target state="translated">Ipv4Addr::is_loopback</target>
        </trans-unit>
        <trans-unit id="28b9c1629dd15420ecafb39f3dfbae73a4ea518c" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::is_multicast</source>
          <target state="translated">Ipv4Addr::is_multicast</target>
        </trans-unit>
        <trans-unit id="3763f7c2e4d81cf18a61fa9d1039122b09d3f6af" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::is_private</source>
          <target state="translated">Ipv4Addr::is_private</target>
        </trans-unit>
        <trans-unit id="ded22ef0151f56687869efa355fc02ddba31b8da" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::is_reserved</source>
          <target state="translated">Ipv4Addr::is_reserved</target>
        </trans-unit>
        <trans-unit id="af8e482daade31f5216d01b0acb05b1f1a06363a" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::is_shared</source>
          <target state="translated">Ipv4Addr::is_shared</target>
        </trans-unit>
        <trans-unit id="94fd19fb5c77bb66f1dd4e3ea2bd66c0cd328221" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::is_unspecified</source>
          <target state="translated">Ipv4Addr::is_unspecified</target>
        </trans-unit>
        <trans-unit id="6f06522a0d23f3ce3fb7a7bbcf5b64422c03cab1" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::le</source>
          <target state="translated">Ipv4Addr::le</target>
        </trans-unit>
        <trans-unit id="7ddb9be2edc96e85ada95865505918fe2c31c08c" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::lt</source>
          <target state="translated">Ipv4Addr::lt</target>
        </trans-unit>
        <trans-unit id="588e3a62e403b2acaff68c35f34372111ff7475b" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::max</source>
          <target state="translated">Ipv4Addr::max</target>
        </trans-unit>
        <trans-unit id="f0f6703268f715e35b633ffa8e701e62eda903f0" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::min</source>
          <target state="translated">Ipv4Addr::min</target>
        </trans-unit>
        <trans-unit id="8752da42e18e3890559177c1610168a779a113cf" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::ne</source>
          <target state="translated">Ipv4Addr::ne</target>
        </trans-unit>
        <trans-unit id="dda7ca845b881cbb8bdf3787be6ee9ac1fc45b41" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::new</source>
          <target state="translated">Ipv4Addr::new</target>
        </trans-unit>
        <trans-unit id="507f23cd2f1d898fa8d18a4f56faa306c969539d" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::octets</source>
          <target state="translated">Ipv4Addr::octets</target>
        </trans-unit>
        <trans-unit id="ae2ee18a4ab1872b9c91e8a1e83866fd664e6feb" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::partial_cmp</source>
          <target state="translated">Ipv4Addr::partial_cmp</target>
        </trans-unit>
        <trans-unit id="05bbaef82cf48bd89cdb234db3e68e898269d87a" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::to_ipv6_compatible</source>
          <target state="translated">Ipv4Addr::to_ipv6_compatible</target>
        </trans-unit>
        <trans-unit id="2136b09c14369a3b7d334fb003b5f0a2b70ab6f8" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::to_ipv6_mapped</source>
          <target state="translated">Ipv4Addr::to_ipv6_mapped</target>
        </trans-unit>
        <trans-unit id="fdcf5dff54d1f120adbacb5e658048c222d56c54" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::to_owned</source>
          <target state="translated">Ipv4Addr::to_owned</target>
        </trans-unit>
        <trans-unit id="269c08b4181e19fd8b66cea4812bd4bd7ea2af16" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::to_string</source>
          <target state="translated">Ipv4Addr::to_string</target>
        </trans-unit>
        <trans-unit id="412e053ce749bb8025b592e2499a7d73749e6fbe" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::try_from</source>
          <target state="translated">Ipv4Addr::try_from</target>
        </trans-unit>
        <trans-unit id="3e4b53822154707283b1d82871537a4148878b64" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::try_into</source>
          <target state="translated">Ipv4Addr::try_into</target>
        </trans-unit>
        <trans-unit id="29c219582f8e2fb59bc91723bc9968e9e558d78a" translate="yes" xml:space="preserve">
          <source>Ipv4Addr::type_id</source>
          <target state="translated">Ipv4Addr::type_id</target>
        </trans-unit>
        <trans-unit id="0d8606594389e9bf1434e5e041fc45b49d2d89fb" translate="yes" xml:space="preserve">
          <source>Ipv6Addr</source>
          <target state="translated">Ipv6Addr</target>
        </trans-unit>
        <trans-unit id="d70b655b95a966bf32c7e29d4eb302d94d537409" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::borrow</source>
          <target state="translated">Ipv6Addr::borrow</target>
        </trans-unit>
        <trans-unit id="5bcfe843497d7c0d0e1435cd2a4e6d7c081bbbc0" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::borrow_mut</source>
          <target state="translated">Ipv6Addr::borrow_mut</target>
        </trans-unit>
        <trans-unit id="f7dd13e8c27649fb7974784c22309d13f14d3cb8" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::clamp</source>
          <target state="translated">Ipv6Addr::clamp</target>
        </trans-unit>
        <trans-unit id="75d479dee6aa25b111b95de4fe2ff9431fd40236" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::clone</source>
          <target state="translated">Ipv6Addr::clone</target>
        </trans-unit>
        <trans-unit id="23bca06a900c89dfaa4d74bf597a4b4d7db14dd8" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::clone_from</source>
          <target state="translated">Ipv6Addr::clone_from</target>
        </trans-unit>
        <trans-unit id="a1b88b248e8ee4b5b484c234c2ecfbe7dbfdd996" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::clone_into</source>
          <target state="translated">Ipv6Addr::clone_into</target>
        </trans-unit>
        <trans-unit id="dc97ee1fb759cbf2f49863623e2495bd92e0cc2d" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::cmp</source>
          <target state="translated">Ipv6Addr::cmp</target>
        </trans-unit>
        <trans-unit id="92b52ce5c0ec7c8283a07b53ad7860ec0014b4c9" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::eq</source>
          <target state="translated">Ipv6Addr::eq</target>
        </trans-unit>
        <trans-unit id="3b311d466c72a6b513175602e48a797929f3d67d" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::fmt</source>
          <target state="translated">Ipv6Addr::fmt</target>
        </trans-unit>
        <trans-unit id="8026446e621a4f6612c20cfc5e55af6998493a0a" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::from</source>
          <target state="translated">Ipv6Addr::from</target>
        </trans-unit>
        <trans-unit id="3b0a22d0bf352f30e40cf12cf400d0bcc3d4fbeb" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::from_str</source>
          <target state="translated">Ipv6Addr::from_str</target>
        </trans-unit>
        <trans-unit id="1b12986f3c342df0da012478446d35bc1e25adff" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::ge</source>
          <target state="translated">Ipv6Addr::ge</target>
        </trans-unit>
        <trans-unit id="cfefe2f3000d50064ee292bedfc9212d2af9fa6d" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::gt</source>
          <target state="translated">Ipv6Addr::gt</target>
        </trans-unit>
        <trans-unit id="76f36f887e858b436e8356c4db0f8649f4a0fa39" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::hash</source>
          <target state="translated">Ipv6Addr::hash</target>
        </trans-unit>
        <trans-unit id="2266f98ea937ce9e92f9c74b16810ce281c5f688" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::hash_slice</source>
          <target state="translated">Ipv6Addr::hash_slice</target>
        </trans-unit>
        <trans-unit id="45ed8315dcbcb3116b3eb8b57c7b03b534df4ade" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::into</source>
          <target state="translated">Ipv6Addr::into</target>
        </trans-unit>
        <trans-unit id="100022f73659e9325e7ac2e452d9737325bc6205" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::is_documentation</source>
          <target state="translated">Ipv6Addr::is_documentation</target>
        </trans-unit>
        <trans-unit id="779fa2a92533a376818cec5898176281cf38b662" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::is_global</source>
          <target state="translated">Ipv6Addr::is_global</target>
        </trans-unit>
        <trans-unit id="9ea19eb6e650cc597cabc4d80c14f0f132c8c23d" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::is_loopback</source>
          <target state="translated">Ipv6Addr::is_loopback</target>
        </trans-unit>
        <trans-unit id="674f4cff3c09e352444adb1edda7bff67e73c3d6" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::is_multicast</source>
          <target state="translated">Ipv6Addr::is_multicast</target>
        </trans-unit>
        <trans-unit id="53343e7e3d105f1a44ebe32d0eefc791089badc8" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::is_unicast_global</source>
          <target state="translated">Ipv6Addr::is_unicast_global</target>
        </trans-unit>
        <trans-unit id="ef3d5cf9b22cff3832f46ef32799dfbc2d0e5d23" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::is_unicast_link_local</source>
          <target state="translated">Ipv6Addr::is_unicast_link_local</target>
        </trans-unit>
        <trans-unit id="a210d1d3c529f4648ccb8a6d5d259a6a6d471504" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::is_unicast_link_local_strict</source>
          <target state="translated">Ipv6Addr::is_unicast_link_local_strict</target>
        </trans-unit>
        <trans-unit id="fa85561c123be7bf6016020f1992fd1b205fb3ab" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::is_unicast_site_local</source>
          <target state="translated">Ipv6Addr::is_unicast_site_local</target>
        </trans-unit>
        <trans-unit id="f214d60d9ab8bf7117df211486c37f22952d790b" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::is_unique_local</source>
          <target state="translated">Ipv6Addr::is_unique_local</target>
        </trans-unit>
        <trans-unit id="a8d6c989ec571a72320733615b69d2c07fcb0ba9" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::is_unspecified</source>
          <target state="translated">Ipv6Addr::is_unspecified</target>
        </trans-unit>
        <trans-unit id="02c8fce30d5a32465175cbe3879c69259c312ded" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::le</source>
          <target state="translated">Ipv6Addr::le</target>
        </trans-unit>
        <trans-unit id="297e749932b92e4808241fddcb9b960c1bbefb12" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::lt</source>
          <target state="translated">Ipv6Addr::lt</target>
        </trans-unit>
        <trans-unit id="1f93180931140e8587a275013dfcfce7f8b6490e" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::max</source>
          <target state="translated">Ipv6Addr::max</target>
        </trans-unit>
        <trans-unit id="50eb114b333cecae538ca6ad284c88fab52f336e" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::min</source>
          <target state="translated">Ipv6Addr::min</target>
        </trans-unit>
        <trans-unit id="183f35750e05512d0c059a06dbccd93abd3349c7" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::multicast_scope</source>
          <target state="translated">Ipv6Addr::multicast_scope</target>
        </trans-unit>
        <trans-unit id="e51b9303d310ea2cd79b483b6689ac80fe75fbd6" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::ne</source>
          <target state="translated">Ipv6Addr::ne</target>
        </trans-unit>
        <trans-unit id="f1d4f467002e9522e65e198bfa78a0a6829f670e" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::new</source>
          <target state="translated">Ipv6Addr::new</target>
        </trans-unit>
        <trans-unit id="d61c56e79ee209a5c274b6372f7bfb67e409ab7e" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::octets</source>
          <target state="translated">Ipv6Addr::octets</target>
        </trans-unit>
        <trans-unit id="17e1469eab47bf29477cd18cccbbb0cde2f23783" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::partial_cmp</source>
          <target state="translated">Ipv6Addr::partial_cmp</target>
        </trans-unit>
        <trans-unit id="b7b98dc05081d889b0f5f7de6c80a3ae378cf699" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::segments</source>
          <target state="translated">Ipv6Addr::segments</target>
        </trans-unit>
        <trans-unit id="c35cdbb386870b8f97c03a67a421ae849b3268f9" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::to_ipv4</source>
          <target state="translated">Ipv6Addr::to_ipv4</target>
        </trans-unit>
        <trans-unit id="33aea393ab3dab6c3a68e6f00c689810fe9bd799" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::to_owned</source>
          <target state="translated">Ipv6Addr::to_owned</target>
        </trans-unit>
        <trans-unit id="744da9f6f868ba8486c07d001e1497f4af409a6c" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::to_string</source>
          <target state="translated">Ipv6Addr::to_string</target>
        </trans-unit>
        <trans-unit id="e7906ea8de471e39df4e64193a59ad6753c407ea" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::try_from</source>
          <target state="translated">Ipv6Addr::try_from</target>
        </trans-unit>
        <trans-unit id="57e4d786e8cd27bd0e1a73e9af4d39fca767500d" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::try_into</source>
          <target state="translated">Ipv6Addr::try_into</target>
        </trans-unit>
        <trans-unit id="fb2fe802e9fb2190aa9429082c672e39e9fa6875" translate="yes" xml:space="preserve">
          <source>Ipv6Addr::type_id</source>
          <target state="translated">Ipv6Addr::type_id</target>
        </trans-unit>
        <trans-unit id="88a82ca1333481fb3a1f5fa852a0e945500824b1" translate="yes" xml:space="preserve">
          <source>Ipv6MulticastScope</source>
          <target state="translated">Ipv6MulticastScope</target>
        </trans-unit>
        <trans-unit id="e84c27e16f953494b556166d8f312c91254c12d0" translate="yes" xml:space="preserve">
          <source>Ipv6MulticastScope::borrow</source>
          <target state="translated">Ipv6MulticastScope::borrow</target>
        </trans-unit>
        <trans-unit id="677ee6c513806ce0784ec7fe2a00a0d6bca85485" translate="yes" xml:space="preserve">
          <source>Ipv6MulticastScope::borrow_mut</source>
          <target state="translated">Ipv6MulticastScope::borrow_mut</target>
        </trans-unit>
        <trans-unit id="dcf68f3ffbb91cc5040a7613640f04ad758b23a4" translate="yes" xml:space="preserve">
          <source>Ipv6MulticastScope::clone</source>
          <target state="translated">Ipv6MulticastScope::clone</target>
        </trans-unit>
        <trans-unit id="61fd8492371c7f4b111966fae5d5fe08c4b97229" translate="yes" xml:space="preserve">
          <source>Ipv6MulticastScope::clone_from</source>
          <target state="translated">Ipv6MulticastScope::clone_from</target>
        </trans-unit>
        <trans-unit id="134ebe2c42587c3ca82d7925389e251db2163a7b" translate="yes" xml:space="preserve">
          <source>Ipv6MulticastScope::clone_into</source>
          <target state="translated">Ipv6MulticastScope::clone_into</target>
        </trans-unit>
        <trans-unit id="390d22aa747105ced3c5976e7e0b509871c131ca" translate="yes" xml:space="preserve">
          <source>Ipv6MulticastScope::eq</source>
          <target state="translated">Ipv6MulticastScope::eq</target>
        </trans-unit>
        <trans-unit id="608099f9c2565ad9310942c2ab375a0a27d03555" translate="yes" xml:space="preserve">
          <source>Ipv6MulticastScope::fmt</source>
          <target state="translated">Ipv6MulticastScope::fmt</target>
        </trans-unit>
        <trans-unit id="3ba69289a058c4abe74375992c848e97e5c3e1f0" translate="yes" xml:space="preserve">
          <source>Ipv6MulticastScope::from</source>
          <target state="translated">Ipv6MulticastScope::from</target>
        </trans-unit>
        <trans-unit id="50dbeef4e426d6a1662be73f3b710581f45f5726" translate="yes" xml:space="preserve">
          <source>Ipv6MulticastScope::hash</source>
          <target state="translated">Ipv6MulticastScope::hash</target>
        </trans-unit>
        <trans-unit id="d937291039e717d6b72ac61199880b756bb71cc6" translate="yes" xml:space="preserve">
          <source>Ipv6MulticastScope::hash_slice</source>
          <target state="translated">Ipv6MulticastScope::hash_slice</target>
        </trans-unit>
        <trans-unit id="72c69d6697741a6839af11bc528c0219d8f51a86" translate="yes" xml:space="preserve">
          <source>Ipv6MulticastScope::into</source>
          <target state="translated">Ipv6MulticastScope::into</target>
        </trans-unit>
        <trans-unit id="f19d929ae7f3905c1d7f61ba332bba83b3ee1713" translate="yes" xml:space="preserve">
          <source>Ipv6MulticastScope::ne</source>
          <target state="translated">Ipv6MulticastScope::ne</target>
        </trans-unit>
        <trans-unit id="1ae2897866e78e1fede7326722ae13d5ef68df29" translate="yes" xml:space="preserve">
          <source>Ipv6MulticastScope::to_owned</source>
          <target state="translated">Ipv6MulticastScope::to_owned</target>
        </trans-unit>
        <trans-unit id="0446e23a43371fe0f94b03f56d1bb98116018284" translate="yes" xml:space="preserve">
          <source>Ipv6MulticastScope::try_from</source>
          <target state="translated">Ipv6MulticastScope::try_from</target>
        </trans-unit>
        <trans-unit id="f9b3de0a7b333e261fdc7c4ad1a32806dd360521" translate="yes" xml:space="preserve">
          <source>Ipv6MulticastScope::try_into</source>
          <target state="translated">Ipv6MulticastScope::try_into</target>
        </trans-unit>
        <trans-unit id="54bb08375bed2835d5a0ef191ec626eeb541ad77" translate="yes" xml:space="preserve">
          <source>Ipv6MulticastScope::type_id</source>
          <target state="translated">Ipv6MulticastScope::type_id</target>
        </trans-unit>
        <trans-unit id="1ded365c250b74bea186557cb8382c1ec7f7a2ef" translate="yes" xml:space="preserve">
          <source>Is called to get the representation of the value as status code. This status code is returned to the operating system.</source>
          <target state="translated">被调用以获得状态码的值的表示。这个状态码会返回给操作系统。</target>
        </trans-unit>
        <trans-unit id="59458c2be32dcdeda9fe0621a635d170f4b150d0" translate="yes" xml:space="preserve">
          <source>Is called to get the representation of the value as status code. This status code is returned to the operating system. &lt;a href=&quot;../process/trait.termination#tymethod.report&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">被调用以获取值的表示形式作为状态码。此状态码将返回到操作系统。&lt;a href=&quot;../process/trait.termination#tymethod.report&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5992205e7f17c7190fe09ef40bc9950c869d373e" translate="yes" xml:space="preserve">
          <source>Is called to get the representation of the value as status code. This status code is returned to the operating system. &lt;a href=&quot;process/trait.termination#tymethod.report&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">被调用以获取值的表示形式作为状态码。此状态码将返回到操作系统。&lt;a href=&quot;process/trait.termination#tymethod.report&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="680b4746f2d256076239ed1e9dc02c5c4926c34a" translate="yes" xml:space="preserve">
          <source>Is called to get the representation of the value as status code. This status code is returned to the operating system. &lt;a href=&quot;trait.termination#tymethod.report&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">被调用以获取值的表示形式作为状态码。此状态码将返回到操作系统。&lt;a href=&quot;trait.termination#tymethod.report&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51ca310768b85e8610e7fa8789046380b05cedd2" translate="yes" xml:space="preserve">
          <source>Isolated CRs (&lt;code&gt;\r&lt;/code&gt;), i.e. not followed by LF (&lt;code&gt;\n&lt;/code&gt;), are not allowed in doc comments.</source>
          <target state="translated">doc注释中不允许使用孤立的CR（ &lt;code&gt;\r&lt;/code&gt; ），即不跟随LF（ &lt;code&gt;\n&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="21d9ab30a1c1e374b953d4ada2aa7c7ea2c3447d" translate="yes" xml:space="preserve">
          <source>It appears as if some variables stored in memory are changed, an addition is performed, result is stored in &lt;code&gt;A&lt;/code&gt; and the variable &lt;code&gt;C&lt;/code&gt; is modified twice.</source>
          <target state="translated">看起来好像存储在存储器中的某些变量发生了更改，执行了加法运算，结果存储在 &lt;code&gt;A&lt;/code&gt; 中，并且变量 &lt;code&gt;C&lt;/code&gt; 被修改了两次。</target>
        </trans-unit>
        <trans-unit id="bec31df4330e5539ca332e9180d08b7d0285868d" translate="yes" xml:space="preserve">
          <source>It avoids the need to allocate mutexes and condvars when building new synchronization primitives; the threads already provide basic blocking/signaling.</source>
          <target state="translated">它避免了在构建新的同步基元时分配mutexes和condvars的需要;线程已经提供了基本的阻塞/信号传递。</target>
        </trans-unit>
        <trans-unit id="03d3e7d539855e7b059008a40edfba81dc44ce33" translate="yes" xml:space="preserve">
          <source>It can also be fixed by using a type with interior mutability, such as &lt;code&gt;Cell&lt;/code&gt; or &lt;code&gt;RefCell&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8b452f4173e1504b134fc7f377b9484d0800b0" translate="yes" xml:space="preserve">
          <source>It can also be used directly to allocate memory independently of whatever global allocator has been selected for a Rust program. For example if a Rust program opts in to using jemalloc as the global allocator, &lt;code&gt;System&lt;/code&gt; will still allocate memory using &lt;code&gt;malloc&lt;/code&gt; and &lt;code&gt;HeapAlloc&lt;/code&gt;.</source>
          <target state="translated">它也可以直接用于独立于Rust程序选择的全局分配器来分配内存。例如，如果Rust程序选择使用jemalloc作为全局分配器，那么 &lt;code&gt;System&lt;/code&gt; 仍将使用 &lt;code&gt;malloc&lt;/code&gt; 和 &lt;code&gt;HeapAlloc&lt;/code&gt; 分配内存。</target>
        </trans-unit>
        <trans-unit id="00660b666c533a7c559c2ecac031a0dd6fae7e81" translate="yes" xml:space="preserve">
          <source>It can also be useful to check if a pointer to an element refers to an element of this slice:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310caca6a04a9d8a72a66083548cffe2c3deb96f" translate="yes" xml:space="preserve">
          <source>It can also initialize each element of a &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; with a given value. This may be more efficient than performing allocation and initialization in separate steps, especially when initializing a vector of zeros:</source>
          <target state="translated">它还可以使用给定值初始化 &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; 每个元素。这可能比在单独的步骤中执行分配和初始化更为有效，尤其是在初始化零向量时：</target>
        </trans-unit>
        <trans-unit id="190277fdc267c49497782df2cc44dfe65d610086" translate="yes" xml:space="preserve">
          <source>It can be confusing whether or not you should use a constant item or a static item. Constants should, in general, be preferred over statics unless one of the following are true:</source>
          <target state="translated">你可能会对是否应该使用常量项或静态项感到困惑。一般来说,常量项应该比静态项更受欢迎,除非下列情况之一为真。</target>
        </trans-unit>
        <trans-unit id="0bd32cfa263bd1bf213225174ecd4ec323617bbd" translate="yes" xml:space="preserve">
          <source>It can be excessively inefficient to work directly with a &lt;a href=&quot;trait.read&quot;&gt;&lt;code&gt;Read&lt;/code&gt;&lt;/a&gt; instance. For example, every call to &lt;a href=&quot;../net/struct.tcpstream#method.read&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; on &lt;a href=&quot;../net/struct.tcpstream&quot;&gt;&lt;code&gt;TcpStream&lt;/code&gt;&lt;/a&gt; results in a system call. A &lt;code&gt;BufReader&lt;/code&gt; performs large, infrequent reads on the underlying &lt;a href=&quot;trait.read&quot;&gt;&lt;code&gt;Read&lt;/code&gt;&lt;/a&gt; and maintains an in-memory buffer of the results.</source>
          <target state="translated">直接使用&lt;a href=&quot;trait.read&quot;&gt; &lt;code&gt;Read&lt;/code&gt; &lt;/a&gt;实例可能会非常低效。例如，每次对&lt;a href=&quot;../net/struct.tcpstream&quot;&gt; &lt;code&gt;TcpStream&lt;/code&gt; &lt;/a&gt;进行&lt;a href=&quot;../net/struct.tcpstream#method.read&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;调用都会导致系统调用。甲 &lt;code&gt;BufReader&lt;/code&gt; 执行大，不频繁读取基础上&lt;a href=&quot;trait.read&quot;&gt; &lt;code&gt;Read&lt;/code&gt; &lt;/a&gt;和保存的结果的存储器内的缓冲区。</target>
        </trans-unit>
        <trans-unit id="a53c30292449f5c65f658f1ab5f787257b2ab97a" translate="yes" xml:space="preserve">
          <source>It can be excessively inefficient to work directly with a &lt;a href=&quot;trait.read&quot;&gt;&lt;code&gt;Read&lt;/code&gt;&lt;/a&gt; instance. For example, every call to &lt;a href=&quot;trait.read#tymethod.read&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; on &lt;a href=&quot;../net/struct.tcpstream&quot;&gt;&lt;code&gt;TcpStream&lt;/code&gt;&lt;/a&gt; results in a system call. A &lt;code&gt;BufReader&amp;lt;R&amp;gt;&lt;/code&gt; performs large, infrequent reads on the underlying &lt;a href=&quot;trait.read&quot;&gt;&lt;code&gt;Read&lt;/code&gt;&lt;/a&gt; and maintains an in-memory buffer of the results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b4e83780a18771dd321f0082a8c599b84b0325" translate="yes" xml:space="preserve">
          <source>It can be excessively inefficient to work directly with something that implements &lt;a href=&quot;trait.write&quot;&gt;&lt;code&gt;Write&lt;/code&gt;&lt;/a&gt;. For example, every call to &lt;a href=&quot;../net/struct.tcpstream#method.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; on &lt;a href=&quot;../net/struct.tcpstream&quot;&gt;&lt;code&gt;TcpStream&lt;/code&gt;&lt;/a&gt; results in a system call. A &lt;code&gt;BufWriter&lt;/code&gt; keeps an in-memory buffer of data and writes it to an underlying writer in large, infrequent batches.</source>
          <target state="translated">直接与实现&lt;a href=&quot;trait.write&quot;&gt; &lt;code&gt;Write&lt;/code&gt; 的&lt;/a&gt;东西一起工作可能会非常低效。例如，每次在&lt;a href=&quot;../net/struct.tcpstream&quot;&gt; &lt;code&gt;TcpStream&lt;/code&gt; &lt;/a&gt;上&lt;a href=&quot;../net/struct.tcpstream#method.write&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;调用都会导致系统调用。甲 &lt;code&gt;BufWriter&lt;/code&gt; 保持数据的内存中的缓冲液和它在大，不频繁的批次写入到底层作家。</target>
        </trans-unit>
        <trans-unit id="c37fef9993e5a7b5cdbbe83955b856b6da5daba4" translate="yes" xml:space="preserve">
          <source>It can be excessively inefficient to work directly with something that implements &lt;a href=&quot;trait.write&quot;&gt;&lt;code&gt;Write&lt;/code&gt;&lt;/a&gt;. For example, every call to &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; on &lt;a href=&quot;../net/struct.tcpstream&quot;&gt;&lt;code&gt;TcpStream&lt;/code&gt;&lt;/a&gt; results in a system call. A &lt;code&gt;BufWriter&amp;lt;W&amp;gt;&lt;/code&gt; keeps an in-memory buffer of data and writes it to an underlying writer in large, infrequent batches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9005a41b0a5154d7a83abaf469c6cbf2455196bc" translate="yes" xml:space="preserve">
          <source>It can be fixed by adjusting the trait bound like this:</source>
          <target state="translated">可以通过这样调整特质绑定来解决。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
