<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="07082323caa609052dde906dbd2a21a1ab51cf54" translate="yes" xml:space="preserve">
          <source>For the mutable counterpart see &lt;a href=&quot;struct.nonnull#method.as_mut&quot;&gt;&lt;code&gt;as_mut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d924fe0e8c1a5d61d0c3d9dd1c49bf7a0308ea" translate="yes" xml:space="preserve">
          <source>For the mutable counterpart see &lt;a href=&quot;struct.nonnull#method.as_uninit_mut&quot;&gt;&lt;code&gt;as_uninit_mut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd7465e0cdaff95e9a716e4a710191845a70f5d" translate="yes" xml:space="preserve">
          <source>For the mutable counterpart see &lt;a href=&quot;struct.nonnull#method.as_uninit_slice_mut&quot;&gt;&lt;code&gt;as_uninit_slice_mut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c42187d149ce3b9fc55c3ad6f30f4360a292d3" translate="yes" xml:space="preserve">
          <source>For the platform's canonical successful and unsuccessful codes, see the &lt;a href=&quot;#associatedconstant.SUCCESS&quot;&gt;&lt;code&gt;SUCCESS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#associatedconstant.FAILURE&quot;&gt;&lt;code&gt;FAILURE&lt;/code&gt;&lt;/a&gt; associated items.</source>
          <target state="translated">有关平台的规范成功和失败代码，请参见&lt;a href=&quot;#associatedconstant.SUCCESS&quot;&gt; &lt;code&gt;SUCCESS&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#associatedconstant.FAILURE&quot;&gt; &lt;code&gt;FAILURE&lt;/code&gt; &lt;/a&gt;关联项目。</target>
        </trans-unit>
        <trans-unit id="75db543c6e1cfda586f4db237fb2c670d25637f5" translate="yes" xml:space="preserve">
          <source>For the platform's canonical successful and unsuccessful codes, see the &lt;a href=&quot;struct.exitcode#associatedconstant.SUCCESS&quot;&gt;&lt;code&gt;SUCCESS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.exitcode#associatedconstant.FAILURE&quot;&gt;&lt;code&gt;FAILURE&lt;/code&gt;&lt;/a&gt; associated items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0af3f991c9f15f8f69d15c2eea87200f2b169c" translate="yes" xml:space="preserve">
          <source>For the reason why this trait is marked unsafe, see them parent trait &lt;a href=&quot;trait.searcher&quot;&gt;&lt;code&gt;Searcher&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9754d4ead8c14d2fd33aefe3de619c365fcc229c" translate="yes" xml:space="preserve">
          <source>For the reason why this trait is marked unsafe, see them parent trait &lt;code&gt;Searcher&lt;/code&gt;.</source>
          <target state="translated">由于此特征被标记为不安全的原因，请参阅父特征 &lt;code&gt;Searcher&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="317df28410901f8510f7434f828ef3205b9a7b8a" translate="yes" xml:space="preserve">
          <source>For the shared counterpart see &lt;a href=&quot;#method.as_ref-1&quot;&gt;&lt;code&gt;as_ref&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be46a34ce569130657543d5be99d0ffccac5f531" translate="yes" xml:space="preserve">
          <source>For the shared counterpart see &lt;a href=&quot;#method.as_uninit_ref-1&quot;&gt;&lt;code&gt;as_uninit_ref&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c7d626908c572a51181ace97075c3c7c164cf4" translate="yes" xml:space="preserve">
          <source>For the shared counterpart see &lt;a href=&quot;#method.as_uninit_slice-1&quot;&gt;&lt;code&gt;as_uninit_slice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d048329557c415195915c976f34b9b3ebb4d30b" translate="yes" xml:space="preserve">
          <source>For the shared counterpart see &lt;a href=&quot;struct.nonnull#method.as_ref&quot;&gt;&lt;code&gt;as_ref&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbea4cb29a600931bdca0544ec0671b19cb48983" translate="yes" xml:space="preserve">
          <source>For the shared counterpart see &lt;a href=&quot;struct.nonnull#method.as_uninit_ref&quot;&gt;&lt;code&gt;as_uninit_ref&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddf9342b49f23e6ec0f7fb2b4028f00c98f3be6" translate="yes" xml:space="preserve">
          <source>For the shared counterpart see &lt;a href=&quot;struct.nonnull#method.as_uninit_slice&quot;&gt;&lt;code&gt;as_uninit_slice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e95ec06cdfac6e068dc9366f7700758986e2c5a" translate="yes" xml:space="preserve">
          <source>For the third example, when you match, all patterns must have the same type as the type you're matching on. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0fe8928fd32097dac9b918311b6eac0fcf339ce" translate="yes" xml:space="preserve">
          <source>For these reasons, Rust takes a different approach, using trait objects instead of inheritance. Let&amp;rsquo;s look at how trait objects enable polymorphism in Rust.</source>
          <target state="translated">由于这些原因，Rust采用了​​一种不同的方法，即使用特征对象而不是继承。让我们看一下特征对象如何在Rust中实现多态性。</target>
        </trans-unit>
        <trans-unit id="4710b0aeb278b541ab02b2df0abed515f474e4d8" translate="yes" xml:space="preserve">
          <source>For this reason, match arms must use refutable patterns, except for the last arm, which should match any remaining values with an irrefutable pattern. Rust allows us to use an irrefutable pattern in a &lt;code&gt;match&lt;/code&gt; with only one arm, but this syntax isn&amp;rsquo;t particularly useful and could be replaced with a simpler &lt;code&gt;let&lt;/code&gt; statement.</source>
          <target state="translated">因此，匹配臂必须使用可重复使用的模式，但最后一个手臂除外，后者应将任何剩余值与不可重复的模式匹配。Rust允许我们仅用一只手臂就可以在 &lt;code&gt;match&lt;/code&gt; 使用不可辩驳的模式，但是这种语法并不是特别有用，可以用更简单的 &lt;code&gt;let&lt;/code&gt; 语句代替。</target>
        </trans-unit>
        <trans-unit id="adfc989e88bb9c8c7181782f55b50dfadfa83f21" translate="yes" xml:space="preserve">
          <source>For this to work, some note must be specified. An empty attribute will not do anything, please remove the attribute or add some helpful note for users of the trait.</source>
          <target state="translated">为了使其发挥作用,必须指定一些说明。空属性不会有任何作用,请删除该属性或为该特征的用户添加一些有用的说明。</target>
        </trans-unit>
        <trans-unit id="04f657de0e5284c90b3775d6f50f0f7a8ada21dc" translate="yes" xml:space="preserve">
          <source>For this, the impl of &lt;a href=&quot;trait.searcher&quot;&gt;&lt;code&gt;Searcher&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.reversesearcher&quot;&gt;&lt;code&gt;ReverseSearcher&lt;/code&gt;&lt;/a&gt; need to follow these conditions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd561ec2ce563662749407f0433b939f5ebe794d" translate="yes" xml:space="preserve">
          <source>For this, the impl of &lt;code&gt;Searcher&lt;/code&gt; and &lt;code&gt;ReverseSearcher&lt;/code&gt; need to follow these conditions:</source>
          <target state="translated">为此， &lt;code&gt;Searcher&lt;/code&gt; 和 &lt;code&gt;ReverseSearcher&lt;/code&gt; 的隐含需要满足以下条件：</target>
        </trans-unit>
        <trans-unit id="97ccae7172bda964374e1bc586c6572634aaa703" translate="yes" xml:space="preserve">
          <source>For those developing Rust, a new edition provides a rallying point for the project as a whole.</source>
          <target state="translated">对于开发Rust的人来说,新版为整个项目提供了一个集结点。</target>
        </trans-unit>
        <trans-unit id="2fec446383d5f779e4c9aee400f1c7e1dddccd01" translate="yes" xml:space="preserve">
          <source>For those familiar with pointers, a reference is just a pointer that is assumed to be aligned, not null, and pointing to memory containing a valid value of &lt;code&gt;T&lt;/code&gt; - for example, &lt;code&gt;&amp;amp;bool&lt;/code&gt; can only point to an allocation containing the integer values &lt;code&gt;1&lt;/code&gt; (&lt;code&gt;true&lt;/code&gt;) or &lt;code&gt;0&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;), but creating a &lt;code&gt;&amp;amp;bool&lt;/code&gt; that points to an allocation containing the value &lt;code&gt;3&lt;/code&gt; causes undefined behaviour. In fact, &lt;code&gt;Option&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; has the same memory representation as a nullable but aligned pointer, and can be passed across FFI boundaries as such.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ace4ab9caa4dbb7631dba10e9c44e719dfc96f" translate="yes" xml:space="preserve">
          <source>For those familiar with pointers, a reference is just a pointer that is assumed to not be null. In fact, &lt;code&gt;Option&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; has the same memory representation as a nullable pointer, and can be passed across FFI boundaries as such.</source>
          <target state="translated">对于那些熟悉指针的人，引用只是一个假定为不为null的指针。实际上， &lt;code&gt;Option&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; 具有与可为空的指针相同的内存表示，并且可以像这样跨FFI边界传递。</target>
        </trans-unit>
        <trans-unit id="9aa62047cd03d84d541773dd2bfd34515672a0a9" translate="yes" xml:space="preserve">
          <source>For tuple-like enum variants, like &lt;code&gt;Message::Write&lt;/code&gt; that holds a tuple with one element and &lt;code&gt;Message::ChangeColor&lt;/code&gt; that holds a tuple with three elements, the pattern is similar to the pattern we specify to match tuples. The number of variables in the pattern must match the number of elements in the variant we&amp;rsquo;re matching.</source>
          <target state="translated">对于类似于元组的枚举变体，例如 &lt;code&gt;Message::Write&lt;/code&gt; 包含一个具有一个元素的元组，而 &lt;code&gt;Message::ChangeColor&lt;/code&gt; 包含一个具有三个元素的元组，该模式类似于我们为匹配元组指定的模式。模式中的变量数量必须与我们要匹配的变量中的元素数量匹配。</target>
        </trans-unit>
        <trans-unit id="aafd656a28f0a9eb0c651ab2742e994b8d5c6d74" translate="yes" xml:space="preserve">
          <source>For types that implement &lt;code&gt;Copy&lt;/code&gt;, the &lt;code&gt;get&lt;/code&gt; method retrieves the current interior value.</source>
          <target state="translated">对于实现类型的 &lt;code&gt;Copy&lt;/code&gt; ，则 &lt;code&gt;get&lt;/code&gt; 方法检索当前的内在价值。</target>
        </trans-unit>
        <trans-unit id="ec453568d8f91af81c4edd923841e5de4ffcf536" translate="yes" xml:space="preserve">
          <source>For types that implement &lt;code&gt;Default&lt;/code&gt;, the &lt;code&gt;take&lt;/code&gt; method replaces the current interior value with &lt;code&gt;Default::default()&lt;/code&gt; and returns the replaced value.</source>
          <target state="translated">对于实现类型的 &lt;code&gt;Default&lt;/code&gt; ，则 &lt;code&gt;take&lt;/code&gt; 方法替换当前内部值 &lt;code&gt;Default::default()&lt;/code&gt; 并返回替换值。</target>
        </trans-unit>
        <trans-unit id="4574e9c5392d2a058aa0fe0986ed5ef30945f81c" translate="yes" xml:space="preserve">
          <source>For types that implement the &lt;code&gt;Copy&lt;/code&gt; trait, like &lt;code&gt;i32&lt;/code&gt;, the values are copied into the hash map. For owned values like &lt;code&gt;String&lt;/code&gt;, the values will be moved and the hash map will be the owner of those values, as demonstrated in Listing 8-22.</source>
          <target state="translated">对于实现 &lt;code&gt;Copy&lt;/code&gt; 特征的类型，例如 &lt;code&gt;i32&lt;/code&gt; ，将值复制到哈希图中。对于诸如 &lt;code&gt;String&lt;/code&gt; 之类的拥有的值，这些值将被移动，并且哈希映射将成为这些值的所有者，如清单8-22所示。</target>
        </trans-unit>
        <trans-unit id="bbf61af8911febf6c19fe2a100148eac8f5a6b3d" translate="yes" xml:space="preserve">
          <source>For zero-sized &lt;code&gt;T&lt;/code&gt; or &lt;code&gt;n == 0&lt;/code&gt;, may return either of &lt;code&gt;Ok&lt;/code&gt; or &lt;code&gt;Err&lt;/code&gt;, but will &lt;em&gt;not&lt;/em&gt; yield undefined behavior.</source>
          <target state="translated">对于零大小的 &lt;code&gt;T&lt;/code&gt; 或 &lt;code&gt;n == 0&lt;/code&gt; ，可以返回 &lt;code&gt;Ok&lt;/code&gt; 或 &lt;code&gt;Err&lt;/code&gt; 之一，但&lt;em&gt;不会&lt;/em&gt;产生未定义的行为。</target>
        </trans-unit>
        <trans-unit id="af9ebebeac598bb279c7f6871c1d2e5ff692e690" translate="yes" xml:space="preserve">
          <source>For zero-sized &lt;code&gt;T&lt;/code&gt; or &lt;code&gt;n_new == 0&lt;/code&gt;, may return either of &lt;code&gt;Ok&lt;/code&gt; or &lt;code&gt;Err&lt;/code&gt;, but will &lt;em&gt;not&lt;/em&gt; yield undefined behavior.</source>
          <target state="translated">对于零大小的 &lt;code&gt;T&lt;/code&gt; 或 &lt;code&gt;n_new == 0&lt;/code&gt; ，可以返回 &lt;code&gt;Ok&lt;/code&gt; 或 &lt;code&gt;Err&lt;/code&gt; 之一，但&lt;em&gt;不会&lt;/em&gt;产生未定义的行为。</target>
        </trans-unit>
        <trans-unit id="d17558f17d3ddd4a1525907aa24c803b6d14144e" translate="yes" xml:space="preserve">
          <source>For zero-sized &lt;code&gt;T&lt;/code&gt;, may return either of &lt;code&gt;Ok&lt;/code&gt; or &lt;code&gt;Err&lt;/code&gt;, but will &lt;em&gt;not&lt;/em&gt; yield undefined behavior.</source>
          <target state="translated">对于零大小的 &lt;code&gt;T&lt;/code&gt; ，可以返回 &lt;code&gt;Ok&lt;/code&gt; 或 &lt;code&gt;Err&lt;/code&gt; 之一，但&lt;em&gt;不会&lt;/em&gt;产生未定义的行为。</target>
        </trans-unit>
        <trans-unit id="ff122858fad706f1ffd37eb8ed4d2f766a5f5467" translate="yes" xml:space="preserve">
          <source>Forces the child process to exit. If the child has already exited, an &lt;a href=&quot;../io/enum.errorkind#variant.InvalidInput&quot;&gt;&lt;code&gt;InvalidInput&lt;/code&gt;&lt;/a&gt; error is returned.</source>
          <target state="translated">强制退出子进程。如果孩子已经退出，则返回&lt;a href=&quot;../io/enum.errorkind#variant.InvalidInput&quot;&gt; &lt;code&gt;InvalidInput&lt;/code&gt; &lt;/a&gt;错误。</target>
        </trans-unit>
        <trans-unit id="6018bb8b2d8928af0c1e3c1dd75506aa08720534" translate="yes" xml:space="preserve">
          <source>Forces the evaluation of this lazy value and returns a reference to result. This is equivalent to the &lt;code&gt;Deref&lt;/code&gt; impl, but is explicit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978264598af5c4bf8957f52229b3577a194aae8b" translate="yes" xml:space="preserve">
          <source>Forces the evaluation of this lazy value and returns a reference to the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60cb66cd46faeac62256677171f90f9aab99b37" translate="yes" xml:space="preserve">
          <source>Forces the length of the vector to &lt;code&gt;new_len&lt;/code&gt;.</source>
          <target state="translated">将向量的长度强制为 &lt;code&gt;new_len&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d9370d24ba125a97c3acc14af7d6d55608591f2" translate="yes" xml:space="preserve">
          <source>Forcibly captures a disabled backtrace, regardless of environment variable configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b736a57c50ca69a743556a035e80056efa69db13" translate="yes" xml:space="preserve">
          <source>Forcibly captures a full backtrace, regardless of environment variable configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a683f099c5cd32d972be2f3a92f5a845ceb5fd5" translate="yes" xml:space="preserve">
          <source>Foreword</source>
          <target state="translated">Foreword</target>
        </trans-unit>
        <trans-unit id="863ae1b2291a228e3b8c16c150fe043e32bd712d" translate="yes" xml:space="preserve">
          <source>Formally, the equality must be (for all &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;):</source>
          <target state="translated">形式上，等式必须为（对于所有 &lt;code&gt;a&lt;/code&gt; ， &lt;code&gt;b&lt;/code&gt; 和 &lt;code&gt;c&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="f923413c464f494d3946508ce5aa107762608185" translate="yes" xml:space="preserve">
          <source>Format the program and arguments of a Command for display. Any non-utf8 data is lossily converted using the utf8 replacement character.</source>
          <target state="translated">对命令的程序和参数进行格式化显示。任何非utf8数据都会使用utf8替换字符进行损失转换。</target>
        </trans-unit>
        <trans-unit id="140d331380e094ef881c81486bb2b41687984370" translate="yes" xml:space="preserve">
          <source>Format trait for an empty format, &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="translated">空格式 &lt;code&gt;{}&lt;/code&gt; 的格式特征。</target>
        </trans-unit>
        <trans-unit id="6eb3be022b65dd3036c2394343c5d04639125d42" translate="yes" xml:space="preserve">
          <source>Formats the value using the given formatter.</source>
          <target state="translated">使用给定的格式器对值进行格式化。</target>
        </trans-unit>
        <trans-unit id="5e15b9e7259e75f0fde9e02ca48db7008320ae92" translate="yes" xml:space="preserve">
          <source>Formats the value using the given formatter. &lt;a href=&quot;../../../fmt/trait.debug#tymethod.fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">使用给定的格式化程序格式化该值。&lt;a href=&quot;../../../fmt/trait.debug#tymethod.fmt&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3864f640d862bc0209e506aa2fd5d8114b920b88" translate="yes" xml:space="preserve">
          <source>Formats the value using the given formatter. &lt;a href=&quot;../../fmt/trait.debug#tymethod.fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">使用给定的格式化程序格式化该值。&lt;a href=&quot;../../fmt/trait.debug#tymethod.fmt&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="891ad2cdac8c5121fa8020663e91799426bda036" translate="yes" xml:space="preserve">
          <source>Formats the value using the given formatter. &lt;a href=&quot;../../fmt/trait.display#tymethod.fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">使用给定的格式化程序格式化该值。&lt;a href=&quot;../../fmt/trait.display#tymethod.fmt&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22b050e95494640f18b8653fa928145e7860a473" translate="yes" xml:space="preserve">
          <source>Formats the value using the given formatter. &lt;a href=&quot;../fmt/trait.debug#tymethod.fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">使用给定的格式化程序格式化该值。&lt;a href=&quot;../fmt/trait.debug#tymethod.fmt&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce70014ec2bb51274cea17fec1b3f94b02c50aa6" translate="yes" xml:space="preserve">
          <source>Formats the value using the given formatter. &lt;a href=&quot;../fmt/trait.display#tymethod.fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">使用给定的格式化程序格式化该值。&lt;a href=&quot;../fmt/trait.display#tymethod.fmt&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fdf24f4d118b813631e61dbcdfc4c5c165a520a0" translate="yes" xml:space="preserve">
          <source>Formats the value using the given formatter. &lt;a href=&quot;fmt/trait.debug#tymethod.fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">使用给定的格式化程序格式化该值。&lt;a href=&quot;fmt/trait.debug#tymethod.fmt&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87c49f82e8dbca91bb2bb8879fec94750d470c75" translate="yes" xml:space="preserve">
          <source>Formats the value using the given formatter. &lt;a href=&quot;fmt/trait.display#tymethod.fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">使用给定的格式化程序格式化该值。&lt;a href=&quot;fmt/trait.display#tymethod.fmt&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5cc6401fc7f1f08cc68b76776fcc845c5120ae5" translate="yes" xml:space="preserve">
          <source>Formats the value using the given formatter. &lt;a href=&quot;trait.debug#tymethod.fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">使用给定的格式化程序格式化该值。&lt;a href=&quot;trait.debug#tymethod.fmt&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="67729135661825a254f0d83fb3dccb9f72a3be19" translate="yes" xml:space="preserve">
          <source>Formats the value using the given formatter. &lt;a href=&quot;trait.display#tymethod.fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">使用给定的格式化程序格式化该值。&lt;a href=&quot;trait.display#tymethod.fmt&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ae42b52d64655839743c546b646a36f423ad845" translate="yes" xml:space="preserve">
          <source>Formatter</source>
          <target state="translated">Formatter</target>
        </trans-unit>
        <trans-unit id="5f8152f579616a1e2e7f90e547a18b826268e31e" translate="yes" xml:space="preserve">
          <source>Formatter::align</source>
          <target state="translated">Formatter::align</target>
        </trans-unit>
        <trans-unit id="9a6def787783ae143ee16edccd5c0a001ed91243" translate="yes" xml:space="preserve">
          <source>Formatter::alternate</source>
          <target state="translated">Formatter::alternate</target>
        </trans-unit>
        <trans-unit id="4ff01afb51f457cc2d85ff4291e6511c069e18e7" translate="yes" xml:space="preserve">
          <source>Formatter::borrow</source>
          <target state="translated">Formatter::borrow</target>
        </trans-unit>
        <trans-unit id="5d337fb59b434ef65405e46b43dd9298cf7d28ce" translate="yes" xml:space="preserve">
          <source>Formatter::borrow_mut</source>
          <target state="translated">Formatter::borrow_mut</target>
        </trans-unit>
        <trans-unit id="423e00ac2e2adbcb9bbef0b2b89bfd31aee767fd" translate="yes" xml:space="preserve">
          <source>Formatter::debug_list</source>
          <target state="translated">Formatter::debug_list</target>
        </trans-unit>
        <trans-unit id="2d2789bd6c0bf82cab25262ef760ac2db9d9dd87" translate="yes" xml:space="preserve">
          <source>Formatter::debug_map</source>
          <target state="translated">Formatter::debug_map</target>
        </trans-unit>
        <trans-unit id="a9ccdf007c23e02e293201f75e9a5c875ae07f89" translate="yes" xml:space="preserve">
          <source>Formatter::debug_set</source>
          <target state="translated">Formatter::debug_set</target>
        </trans-unit>
        <trans-unit id="71c2bd0a8b48dfeec742af4daf6fb65d4f40ffc9" translate="yes" xml:space="preserve">
          <source>Formatter::debug_struct</source>
          <target state="translated">Formatter::debug_struct</target>
        </trans-unit>
        <trans-unit id="00c1bd1d6a90da612560b76c5bf3d45e6291fc98" translate="yes" xml:space="preserve">
          <source>Formatter::debug_tuple</source>
          <target state="translated">Formatter::debug_tuple</target>
        </trans-unit>
        <trans-unit id="6fc7f1045521e6b9d4ff4360c00a2593331911c9" translate="yes" xml:space="preserve">
          <source>Formatter::fill</source>
          <target state="translated">Formatter::fill</target>
        </trans-unit>
        <trans-unit id="993174c205f2615b87f6bd9b99a1f83db77e9d92" translate="yes" xml:space="preserve">
          <source>Formatter::flags</source>
          <target state="translated">Formatter::flags</target>
        </trans-unit>
        <trans-unit id="1de3e4496f08f380dafc2f2099cb602dae373966" translate="yes" xml:space="preserve">
          <source>Formatter::from</source>
          <target state="translated">Formatter::from</target>
        </trans-unit>
        <trans-unit id="f20f7b5d51f57e44b5ca6cd8ab62bf45261e1970" translate="yes" xml:space="preserve">
          <source>Formatter::into</source>
          <target state="translated">Formatter::into</target>
        </trans-unit>
        <trans-unit id="8d6e0f2524599a9851fc44585f5a2d817e72ae6d" translate="yes" xml:space="preserve">
          <source>Formatter::pad</source>
          <target state="translated">Formatter::pad</target>
        </trans-unit>
        <trans-unit id="ac6ba2e959a06c5071bcc16b886f8d5d6cd7965f" translate="yes" xml:space="preserve">
          <source>Formatter::pad_integral</source>
          <target state="translated">Formatter::pad_integral</target>
        </trans-unit>
        <trans-unit id="2403b952317411744ba831a429e9297ab1c0e3b2" translate="yes" xml:space="preserve">
          <source>Formatter::precision</source>
          <target state="translated">Formatter::precision</target>
        </trans-unit>
        <trans-unit id="1f3d9e3d7faa47d0e222f72c63a039a75dc5c805" translate="yes" xml:space="preserve">
          <source>Formatter::sign_aware_zero_pad</source>
          <target state="translated">Formatter::sign_aware_zero_pad</target>
        </trans-unit>
        <trans-unit id="4177fcc3cea65ad6e0c1467fe2213bc4804199f2" translate="yes" xml:space="preserve">
          <source>Formatter::sign_minus</source>
          <target state="translated">Formatter::sign_minus</target>
        </trans-unit>
        <trans-unit id="29a954cef5d969b0ffeda4cda9b1e514ed59e128" translate="yes" xml:space="preserve">
          <source>Formatter::sign_plus</source>
          <target state="translated">Formatter::sign_plus</target>
        </trans-unit>
        <trans-unit id="4109341d852a7ae64ee2861415e3d2d47fd3985d" translate="yes" xml:space="preserve">
          <source>Formatter::try_from</source>
          <target state="translated">Formatter::try_from</target>
        </trans-unit>
        <trans-unit id="c7ea88c068c207062576e99264d8fe9db762e2ba" translate="yes" xml:space="preserve">
          <source>Formatter::try_into</source>
          <target state="translated">Formatter::try_into</target>
        </trans-unit>
        <trans-unit id="0770a06c1590caabbc6a280181ab045268a48d8b" translate="yes" xml:space="preserve">
          <source>Formatter::type_id</source>
          <target state="translated">Formatter::type_id</target>
        </trans-unit>
        <trans-unit id="0513c6c9a8b654eb3c836130d1141c065212130f" translate="yes" xml:space="preserve">
          <source>Formatter::width</source>
          <target state="translated">Formatter::width</target>
        </trans-unit>
        <trans-unit id="784e355bd41c9f5795702e1d4aa5cf5a90fcf70e" translate="yes" xml:space="preserve">
          <source>Formatter::write_char</source>
          <target state="translated">Formatter::write_char</target>
        </trans-unit>
        <trans-unit id="75462a0bc374b0c8071f850b3b54b93abf9106a0" translate="yes" xml:space="preserve">
          <source>Formatter::write_fmt</source>
          <target state="translated">Formatter::write_fmt</target>
        </trans-unit>
        <trans-unit id="b1c405b0e91eb401eaac8c2242a8de1a2f4c813d" translate="yes" xml:space="preserve">
          <source>Formatter::write_str</source>
          <target state="translated">Formatter::write_str</target>
        </trans-unit>
        <trans-unit id="177933136546eb5ae389ea27da971803b35a5e96" translate="yes" xml:space="preserve">
          <source>Formatting Parameters</source>
          <target state="translated">格式化参数</target>
        </trans-unit>
        <trans-unit id="0e705959b12f9001f69d3fd6ef3e8868e1a3fcac" translate="yes" xml:space="preserve">
          <source>Formatting traits</source>
          <target state="translated">格式化特征</target>
        </trans-unit>
        <trans-unit id="210abaf17ff3ec5eb2c7af6e5b16de32d6e6ae30" translate="yes" xml:space="preserve">
          <source>Forms a raw slice from a pointer and a length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea94791ea16dd8ff76446a6806bef950d2a35dda" translate="yes" xml:space="preserve">
          <source>Forms a slice from a pointer and a length.</source>
          <target state="translated">从一个指针和一个长度形成一个切片。</target>
        </trans-unit>
        <trans-unit id="06be2fafa00fc2fe5a6c9c357e8e8125e9d52b63" translate="yes" xml:space="preserve">
          <source>Forms of conditional compilation</source>
          <target state="translated">有条件的汇编形式</target>
        </trans-unit>
        <trans-unit id="95db96d50ddd63cc755c744c881b8149aa6240cb" translate="yes" xml:space="preserve">
          <source>Fortunately, &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt;&lt;em&gt;is&lt;/em&gt; a type like &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; that is safe to use in concurrent situations. The &lt;em&gt;a&lt;/em&gt; stands for &lt;em&gt;atomic&lt;/em&gt;, meaning it&amp;rsquo;s an &lt;em&gt;atomically reference counted&lt;/em&gt; type. Atomics are an additional kind of concurrency primitive that we won&amp;rsquo;t cover in detail here: see the standard library documentation for &lt;a href=&quot;../std/sync/atomic/index&quot;&gt;&lt;code&gt;std::sync::atomic&lt;/code&gt;&lt;/a&gt; for more details. At this point, you just need to know that atomics work like primitive types but are safe to share across threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d73377b70640496419f6407086a0d313c7e7ff8" translate="yes" xml:space="preserve">
          <source>Fortunately, &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt;&lt;em&gt;is&lt;/em&gt; a type like &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; that is safe to use in concurrent situations. The &lt;em&gt;a&lt;/em&gt; stands for &lt;em&gt;atomic&lt;/em&gt;, meaning it&amp;rsquo;s an &lt;em&gt;atomically reference counted&lt;/em&gt; type. Atomics are an additional kind of concurrency primitive that we won&amp;rsquo;t cover in detail here: see the standard library documentation for &lt;code&gt;std::sync::atomic&lt;/code&gt; for more details. At this point, you just need to know that atomics work like primitive types but are safe to share across threads.</source>
          <target state="translated">幸运的是， &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; &lt;em&gt;是&lt;/em&gt;类似于 &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 的类型，可以在并发情况下安全使用。的&lt;em&gt;一个&lt;/em&gt;代表&lt;em&gt;原子&lt;/em&gt;，这意味着它是一个&lt;em&gt;原子引用计数&lt;/em&gt;类型。原子是并发原语的另一种类型，我们在这里不做详细介绍：有关更多详细信息，请参见 &lt;code&gt;std::sync::atomic&lt;/code&gt; 的标准库文档。此时，您只需要知道原子就像原始类型一样工作，但是可以安全地在线程之间共享。</target>
        </trans-unit>
        <trans-unit id="666085c7aedfa1058109fb338307fe9135fa126f" translate="yes" xml:space="preserve">
          <source>Fortunately, Rust provides another, more reliable way to break out of a loop. You can place the &lt;code&gt;break&lt;/code&gt; keyword within the loop to tell the program when to stop executing the loop. Recall that we did this in the guessing game in the &lt;a href=&quot;ch02-00-guessing-game-tutorial#quitting-after-a-correct-guess&quot;&gt;&amp;ldquo;Quitting After a Correct Guess&amp;rdquo;&lt;/a&gt; section of Chapter 2 to exit the program when the user won the game by guessing the correct number.</source>
          <target state="translated">幸运的是，Rust提供了另一种更可靠的突破循环的方法。您可以将 &lt;code&gt;break&lt;/code&gt; 关键字放入循环中，以告知程序何时停止执行循环。回想一下，我们是在第2章&lt;a href=&quot;ch02-00-guessing-game-tutorial#quitting-after-a-correct-guess&quot;&gt;&amp;ldquo;在正确的猜测后退出&amp;rdquo;&lt;/a&gt;部分的猜测游戏中执行此操作的，以在用户通过猜测正确的数字赢得游戏时退出程序。</target>
        </trans-unit>
        <trans-unit id="2cb7a99620b68db8c37724516fdd41d698381b5f" translate="yes" xml:space="preserve">
          <source>Fortunately, another solution is available to us. We can create a struct that will hold the closure and the resulting value of calling the closure. The struct will execute the closure only if we need the resulting value, and it will cache the resulting value so the rest of our code doesn&amp;rsquo;t have to be responsible for saving and reusing the result. You may know this pattern as &lt;em&gt;memoization&lt;/em&gt; or &lt;em&gt;lazy evaluation&lt;/em&gt;.</source>
          <target state="translated">幸运的是，我们可以使用另一种解决方案。我们可以创建一个结构，该结构将保存闭包以及调用闭包的结果值。该结构仅在需要结果值时才执行闭包，并且将缓存结果值，因此我们的其余代码不必负责保存和重用结果。您可能将此模式称为&lt;em&gt;记忆&lt;/em&gt;或&lt;em&gt;惰性评估&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f7a735d42f1842468e27de670a61d95c695c7d77" translate="yes" xml:space="preserve">
          <source>Fortunately, you can access elements in a string in other ways.</source>
          <target state="translated">幸运的是,你可以用其他方式访问字符串中的元素。</target>
        </trans-unit>
        <trans-unit id="26c62d0f8742a3291654c368905359570c6ea25b" translate="yes" xml:space="preserve">
          <source>Forwards to the method defined on the type &lt;code&gt;Any&lt;/code&gt;.</source>
          <target state="translated">转发到类型 &lt;code&gt;Any&lt;/code&gt; 上定义的方法。</target>
        </trans-unit>
        <trans-unit id="24cfeaa5136f131a42d0f730ceb00f25ca26cc8d" translate="yes" xml:space="preserve">
          <source>Forwards to the method defined on the type &lt;code&gt;dyn Error&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0679572252c2b655ac576ff11e583e4913c131ee" translate="yes" xml:space="preserve">
          <source>Fourth, we end the line with a semicolon (&lt;code&gt;;&lt;/code&gt;), which indicates that this expression is over and the next one is ready to begin. Most lines of Rust code end with a semicolon.</source>
          <target state="translated">第四，我们以分号（ &lt;code&gt;;&lt;/code&gt; ）结束该行，这表明该表达式已结束，下一个表达式已准备好开始。Rust代码的大多数行以分号结尾。</target>
        </trans-unit>
        <trans-unit id="e91e4dcc96ac0d3266337d9de8422f466122555f" translate="yes" xml:space="preserve">
          <source>Fourth, we use &lt;code&gt;expect&lt;/code&gt; repeatedly to handle different errors, and if the user runs our program without specifying enough arguments, they&amp;rsquo;ll get an &lt;code&gt;index out of bounds&lt;/code&gt; error from Rust that doesn&amp;rsquo;t clearly explain the problem. It would be best if all the error-handling code were in one place so future maintainers had only one place to consult in the code if the error-handling logic needed to change. Having all the error-handling code in one place will also ensure that we&amp;rsquo;re printing messages that will be meaningful to our end users.</source>
          <target state="translated">第四，我们反复使用 &lt;code&gt;expect&lt;/code&gt; 处理不同的错误，如果用户在未指定足够参数的情况下运行我们的程序，则他们将从Rust中获得无法明确解释问题的 &lt;code&gt;index out of bounds&lt;/code&gt; 错误。最好将所有错误处理代码都放在一个位置，这样如果需要更改错误处理逻辑，将来的维护者只能在代码中查询一个位置。将所有错误处理代码都放在一个地方还可以确保我们打印出对最终用户有意义的消息。</target>
        </trans-unit>
        <trans-unit id="ed80c9c6442c4ef597a2552dbc33ed2f6b8de23a" translate="yes" xml:space="preserve">
          <source>FpCategory</source>
          <target state="translated">FpCategory</target>
        </trans-unit>
        <trans-unit id="c5c59edf4deff28b67b52b7a2d8ad2d144fc15b7" translate="yes" xml:space="preserve">
          <source>FpCategory::borrow</source>
          <target state="translated">FpCategory::borrow</target>
        </trans-unit>
        <trans-unit id="d23597cd1aa75ec546253dcec332bbc22c760f94" translate="yes" xml:space="preserve">
          <source>FpCategory::borrow_mut</source>
          <target state="translated">FpCategory::borrow_mut</target>
        </trans-unit>
        <trans-unit id="751583c9571b8ec42bb13ab3d996f5382f516c44" translate="yes" xml:space="preserve">
          <source>FpCategory::clone</source>
          <target state="translated">FpCategory::clone</target>
        </trans-unit>
        <trans-unit id="e4a9c0c7fcd7d91e6ce8dc4a84468c8dff226fb5" translate="yes" xml:space="preserve">
          <source>FpCategory::clone_from</source>
          <target state="translated">FpCategory::clone_from</target>
        </trans-unit>
        <trans-unit id="b09dd4eed7eb664a0468a101965945f86157a4f7" translate="yes" xml:space="preserve">
          <source>FpCategory::clone_into</source>
          <target state="translated">FpCategory::clone_into</target>
        </trans-unit>
        <trans-unit id="e5a224baf80bccef6b2c64c70bf061c66d0be643" translate="yes" xml:space="preserve">
          <source>FpCategory::eq</source>
          <target state="translated">FpCategory::eq</target>
        </trans-unit>
        <trans-unit id="77d96d469c7820ed9e8e2550859bf5e231b036bf" translate="yes" xml:space="preserve">
          <source>FpCategory::fmt</source>
          <target state="translated">FpCategory::fmt</target>
        </trans-unit>
        <trans-unit id="d3c55faf6a766af5731aad29ee9bd29b2c453928" translate="yes" xml:space="preserve">
          <source>FpCategory::from</source>
          <target state="translated">FpCategory::from</target>
        </trans-unit>
        <trans-unit id="69b2c07f9aa6d8ad6d30706f48ef52d237b2ba0a" translate="yes" xml:space="preserve">
          <source>FpCategory::into</source>
          <target state="translated">FpCategory::into</target>
        </trans-unit>
        <trans-unit id="f38a3329d567847d1d7020b8f9012bbd294a84cd" translate="yes" xml:space="preserve">
          <source>FpCategory::ne</source>
          <target state="translated">FpCategory::ne</target>
        </trans-unit>
        <trans-unit id="e71fe5458996e5a849fc677ae5804fc42c3dccda" translate="yes" xml:space="preserve">
          <source>FpCategory::to_owned</source>
          <target state="translated">FpCategory::to_owned</target>
        </trans-unit>
        <trans-unit id="54a1083e9a89cf3ecfe165675d7e0ab953ccd2ff" translate="yes" xml:space="preserve">
          <source>FpCategory::try_from</source>
          <target state="translated">FpCategory::try_from</target>
        </trans-unit>
        <trans-unit id="bbaf3ef7ecd842bc58b2772d5b932f8c39fd8488" translate="yes" xml:space="preserve">
          <source>FpCategory::try_into</source>
          <target state="translated">FpCategory::try_into</target>
        </trans-unit>
        <trans-unit id="ccefd29d45a4e40d6e9d86bb94af58e1a57d4c4b" translate="yes" xml:space="preserve">
          <source>FpCategory::type_id</source>
          <target state="translated">FpCategory::type_id</target>
        </trans-unit>
        <trans-unit id="a9d589b62118d02ae561f6231ff20e78ff11bc84" translate="yes" xml:space="preserve">
          <source>Fran&amp;ccedil;ais</source>
          <target state="translated">Fran&amp;ccedil;ais</target>
        </trans-unit>
        <trans-unit id="b358be1e7ac10187955efc826d6d6dee79296909" translate="yes" xml:space="preserve">
          <source>Free item</source>
          <target state="translated">免费项目</target>
        </trans-unit>
        <trans-unit id="3f66052a107eaf9bae7cad0f61fb462f47ec2c47" translate="yes" xml:space="preserve">
          <source>From</source>
          <target state="translated">From</target>
        </trans-unit>
        <trans-unit id="594a1d99ee61c47df541cb8769ebf939c8303d7b" translate="yes" xml:space="preserve">
          <source>From &lt;code&gt;&amp;amp;T&lt;/code&gt; to &lt;code&gt;&amp;amp;U&lt;/code&gt; when &lt;code&gt;T: Deref&amp;lt;Target=U&amp;gt;&lt;/code&gt;</source>
          <target state="translated">当 &lt;code&gt;T: Deref&amp;lt;Target=U&amp;gt;&lt;/code&gt; 时从 &lt;code&gt;&amp;amp;T&lt;/code&gt; 到 &lt;code&gt;&amp;amp;U&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="08bb11df769057fd0b8c167b5ec397162b1aeadb" translate="yes" xml:space="preserve">
          <source>From &lt;code&gt;&amp;amp;mut T&lt;/code&gt; to &lt;code&gt;&amp;amp;U&lt;/code&gt; when &lt;code&gt;T: Deref&amp;lt;Target=U&amp;gt;&lt;/code&gt;</source>
          <target state="translated">当 &lt;code&gt;T: Deref&amp;lt;Target=U&amp;gt;&lt;/code&gt; 时从 &lt;code&gt;&amp;amp;mut T&lt;/code&gt; 到 &lt;code&gt;&amp;amp;U&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e62732420027526966136d3f7e0dfec52557b634" translate="yes" xml:space="preserve">
          <source>From &lt;code&gt;&amp;amp;mut T&lt;/code&gt; to &lt;code&gt;&amp;amp;mut U&lt;/code&gt; when &lt;code&gt;T: DerefMut&amp;lt;Target=U&amp;gt;&lt;/code&gt;</source>
          <target state="translated">当 &lt;code&gt;T: DerefMut&amp;lt;Target=U&amp;gt;&lt;/code&gt; 时从 &lt;code&gt;&amp;amp;mut T&lt;/code&gt; 到 &lt;code&gt;&amp;amp;mut U&lt;/code&gt; ：DerefMut &amp;lt;Target = U&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5cc6d703e34af866105ca191df0b36dc89356e81" translate="yes" xml:space="preserve">
          <source>From there, clearly FIRST(M) can include any token from SEP_SET(M) or ALPHA_SET(M), and if the complex NT match is nonempty, then any token starting FIRST(&lt;code&gt;tt ...&lt;/code&gt;) could work too. The last piece to consider is &amp;epsilon;. SEP_SET(M) and FIRST(&lt;code&gt;tt ...&lt;/code&gt;) \ {&amp;epsilon;} cannot contain &amp;epsilon;, but ALPHA_SET(M) could. Hence, this definition allows M to accept &amp;epsilon; if and only if &amp;epsilon; &amp;isin; ALPHA_SET(M) does. This is correct because for M to accept &amp;epsilon; in the complex NT case, both the complex NT and &amp;alpha; must accept it. If OP = &lt;code&gt;+&lt;/code&gt;, meaning that the complex NT cannot be empty, then by definition &amp;epsilon; &amp;notin; ALPHA_SET(M). Otherwise, the complex NT can accept zero repetitions, and then ALPHA_SET(M) = FOLLOW(&lt;code&gt;&amp;alpha;&lt;/code&gt;). So this definition is correct with respect to \varepsilon as well.</source>
          <target state="translated">从那里开始，显然FIRST（M）可以包含SEP_SET（M）或ALPHA_SET（M）中的任何令牌，并且如果复杂的NT匹配为非空，那么任何以FIRST（ &lt;code&gt;tt ...&lt;/code&gt; ）开头的令牌也可以工作。最后要考虑的是&amp;epsilon;。 SEP_SET（M）和FIRST（ &lt;code&gt;tt ...&lt;/code&gt; ）\ {&amp;epsilon;}不能包含&amp;epsilon;，但是ALPHA_SET（M）可以。因此，当且仅当&amp;epsilon;&amp;isin;ALPHA_SET（M）接受时，此定义才允许M接受&amp;epsilon;。这是正确的，因为要使M在复数NT情况下接受&amp;epsilon;，​​复数NT和&amp;alpha;都必须接受它。如果OP = &lt;code&gt;+&lt;/code&gt; ，则意味着复数NT不能为空，则根据定义&amp;epsilon;&amp;notin;ALPHA_SET（M）。否则，复数NT可以接受零个重复，然后ALPHA_SET（M）= FOLLOW（ &lt;code&gt;&amp;alpha;&lt;/code&gt; ）。因此，此定义对于\ varepsilon也是正确的。</target>
        </trans-unit>
        <trans-unit id="6307b5e07877494d1ce0b104a2d8b0a5b885f84f" translate="yes" xml:space="preserve">
          <source>From these, you can see that the first argument is a format string. It is required by the compiler for this to be a string literal; it cannot be a variable passed in (in order to perform validity checking). The compiler will then parse the format string and determine if the list of arguments provided is suitable to pass to this format string.</source>
          <target state="translated">从这些可以看出,第一个参数是一个格式字符串。编译器要求这是一个字符串文字,它不能是一个传递进来的变量(为了进行有效性检查)。然后,编译器将对格式字符串进行解析,并确定所提供的参数列表是否适合传递给这个格式字符串。</target>
        </trans-unit>
        <trans-unit id="636e988ae72ddba156e347bc59d0f315352542a2" translate="yes" xml:space="preserve">
          <source>From::from</source>
          <target state="translated">From::from</target>
        </trans-unit>
        <trans-unit id="08e29d1fb00c3b7e4f55ea6c2152be52cb9cffd5" translate="yes" xml:space="preserve">
          <source>FromBytesWithNulError</source>
          <target state="translated">FromBytesWithNulError</target>
        </trans-unit>
        <trans-unit id="0fa886d5bcda7ff44295308c06a19bb9f2ca1ef2" translate="yes" xml:space="preserve">
          <source>FromBytesWithNulError::borrow</source>
          <target state="translated">FromBytesWithNulError::borrow</target>
        </trans-unit>
        <trans-unit id="227e72c0ed27fb7c2db4228bdeaa7f1e2f4fbb2b" translate="yes" xml:space="preserve">
          <source>FromBytesWithNulError::borrow_mut</source>
          <target state="translated">FromBytesWithNulError::borrow_mut</target>
        </trans-unit>
        <trans-unit id="917a76dd8d5ce07b2b32608e4fac2c07d85334ec" translate="yes" xml:space="preserve">
          <source>FromBytesWithNulError::cause</source>
          <target state="translated">FromBytesWithNulError::cause</target>
        </trans-unit>
        <trans-unit id="d333ff8aac4bcb0b21149b90dd779023c26f7273" translate="yes" xml:space="preserve">
          <source>FromBytesWithNulError::clone</source>
          <target state="translated">FromBytesWithNulError::clone</target>
        </trans-unit>
        <trans-unit id="da349bb088fcf13b909128e597aea220053fe70a" translate="yes" xml:space="preserve">
          <source>FromBytesWithNulError::clone_from</source>
          <target state="translated">FromBytesWithNulError::clone_from</target>
        </trans-unit>
        <trans-unit id="e43ad4a91a8891363b5526c6aac70021b8e8b9f4" translate="yes" xml:space="preserve">
          <source>FromBytesWithNulError::clone_into</source>
          <target state="translated">FromBytesWithNulError::clone_into</target>
        </trans-unit>
        <trans-unit id="fdc34d9df46754c7b93341a3863f600ff88ad5cd" translate="yes" xml:space="preserve">
          <source>FromBytesWithNulError::description</source>
          <target state="translated">FromBytesWithNulError::description</target>
        </trans-unit>
        <trans-unit id="5258a1a84a0930cb189c0d18cfff3f7a1eb6f915" translate="yes" xml:space="preserve">
          <source>FromBytesWithNulError::eq</source>
          <target state="translated">FromBytesWithNulError::eq</target>
        </trans-unit>
        <trans-unit id="b27518c7b2442b78dc66650a48141386af70ddd9" translate="yes" xml:space="preserve">
          <source>FromBytesWithNulError::fmt</source>
          <target state="translated">FromBytesWithNulError::fmt</target>
        </trans-unit>
        <trans-unit id="69e350f5eddef56ca7534154dcbe130775e89c37" translate="yes" xml:space="preserve">
          <source>FromBytesWithNulError::from</source>
          <target state="translated">FromBytesWithNulError::from</target>
        </trans-unit>
        <trans-unit id="830e5d4f61a30595ce8e6e3f78c6591c5a9b7752" translate="yes" xml:space="preserve">
          <source>FromBytesWithNulError::into</source>
          <target state="translated">FromBytesWithNulError::into</target>
        </trans-unit>
        <trans-unit id="6b9fdbfff68a5cffa6a5604dd67451bcca2d12ad" translate="yes" xml:space="preserve">
          <source>FromBytesWithNulError::ne</source>
          <target state="translated">FromBytesWithNulError::ne</target>
        </trans-unit>
        <trans-unit id="2e862184199a6c230f9f2243d8e321f0f31557e5" translate="yes" xml:space="preserve">
          <source>FromBytesWithNulError::source</source>
          <target state="translated">FromBytesWithNulError::source</target>
        </trans-unit>
        <trans-unit id="54f826f0c977e84bbff8ed219c9607014ac9fd7e" translate="yes" xml:space="preserve">
          <source>FromBytesWithNulError::to_owned</source>
          <target state="translated">FromBytesWithNulError::to_owned</target>
        </trans-unit>
        <trans-unit id="d83ad93be5deca6785c67b79fcb106d01b5a7e60" translate="yes" xml:space="preserve">
          <source>FromBytesWithNulError::to_string</source>
          <target state="translated">FromBytesWithNulError::to_string</target>
        </trans-unit>
        <trans-unit id="36df31fcad872818b05aba9f12c079035a34e814" translate="yes" xml:space="preserve">
          <source>FromBytesWithNulError::try_from</source>
          <target state="translated">FromBytesWithNulError::try_from</target>
        </trans-unit>
        <trans-unit id="d7d718854b40de2a9cbbf7938bd184275c5fbb3b" translate="yes" xml:space="preserve">
          <source>FromBytesWithNulError::try_into</source>
          <target state="translated">FromBytesWithNulError::try_into</target>
        </trans-unit>
        <trans-unit id="1bc03244b37f99bdcf813bff54e53e08450612a6" translate="yes" xml:space="preserve">
          <source>FromBytesWithNulError::type_id</source>
          <target state="translated">FromBytesWithNulError::type_id</target>
        </trans-unit>
        <trans-unit id="aeea3b1e1e881ee75f416d42b6a41418a5524277" translate="yes" xml:space="preserve">
          <source>FromFn</source>
          <target state="translated">FromFn</target>
        </trans-unit>
        <trans-unit id="c8518b8fb7e55cb8991e5e6afc3e72d086748ed8" translate="yes" xml:space="preserve">
          <source>FromFn::all</source>
          <target state="translated">FromFn::all</target>
        </trans-unit>
        <trans-unit id="ee215b3f9bdf8dee097ae6be066d5141a74c4422" translate="yes" xml:space="preserve">
          <source>FromFn::any</source>
          <target state="translated">FromFn::any</target>
        </trans-unit>
        <trans-unit id="ccf5f67c540d5b91e0949ed126f30addc417daf6" translate="yes" xml:space="preserve">
          <source>FromFn::borrow</source>
          <target state="translated">FromFn::borrow</target>
        </trans-unit>
        <trans-unit id="e13f389bbae0dab5ea909e4eb43686476caf7c83" translate="yes" xml:space="preserve">
          <source>FromFn::borrow_mut</source>
          <target state="translated">FromFn::borrow_mut</target>
        </trans-unit>
        <trans-unit id="ac215cf840365da8e5c15c7bdaf15be9e7bb130d" translate="yes" xml:space="preserve">
          <source>FromFn::by_ref</source>
          <target state="translated">FromFn::by_ref</target>
        </trans-unit>
        <trans-unit id="9395f4718e1c738177a77570adb7ed3222bbacab" translate="yes" xml:space="preserve">
          <source>FromFn::chain</source>
          <target state="translated">FromFn::chain</target>
        </trans-unit>
        <trans-unit id="b9afae70b69d87da33ee72ad265f7577a8b521f0" translate="yes" xml:space="preserve">
          <source>FromFn::clone</source>
          <target state="translated">FromFn::clone</target>
        </trans-unit>
        <trans-unit id="f5d858a83a4b11765ad648f861ff5231f437bd27" translate="yes" xml:space="preserve">
          <source>FromFn::clone_from</source>
          <target state="translated">FromFn::clone_from</target>
        </trans-unit>
        <trans-unit id="b1269311c4f13149e8a6a84d90f870800d694c44" translate="yes" xml:space="preserve">
          <source>FromFn::clone_into</source>
          <target state="translated">FromFn::clone_into</target>
        </trans-unit>
        <trans-unit id="bb6aa8a11de5554807803affb28dee3aaf938492" translate="yes" xml:space="preserve">
          <source>FromFn::cloned</source>
          <target state="translated">FromFn::cloned</target>
        </trans-unit>
        <trans-unit id="9e2de70acc9938a364a71db569d88dd7084bb122" translate="yes" xml:space="preserve">
          <source>FromFn::cmp</source>
          <target state="translated">FromFn::cmp</target>
        </trans-unit>
        <trans-unit id="5dc944d29ed685b0903453522c86c34ab231d0d9" translate="yes" xml:space="preserve">
          <source>FromFn::collect</source>
          <target state="translated">FromFn::collect</target>
        </trans-unit>
        <trans-unit id="d23fcdf7cbb91c0e0f62994569131c297c4ddefc" translate="yes" xml:space="preserve">
          <source>FromFn::copied</source>
          <target state="translated">FromFn::copied</target>
        </trans-unit>
        <trans-unit id="3a168b114945b66f27edc167ced99723dbcea667" translate="yes" xml:space="preserve">
          <source>FromFn::count</source>
          <target state="translated">FromFn::count</target>
        </trans-unit>
        <trans-unit id="0f1dba887057a79ecd9d75a789118b1a760f1bf9" translate="yes" xml:space="preserve">
          <source>FromFn::cycle</source>
          <target state="translated">FromFn::cycle</target>
        </trans-unit>
        <trans-unit id="364eebc33448cd890e813a37012795c1cb46e143" translate="yes" xml:space="preserve">
          <source>FromFn::enumerate</source>
          <target state="translated">FromFn::enumerate</target>
        </trans-unit>
        <trans-unit id="25ecbb4825daa1bf477051b32ed08a14a60adb4e" translate="yes" xml:space="preserve">
          <source>FromFn::eq</source>
          <target state="translated">FromFn::eq</target>
        </trans-unit>
        <trans-unit id="893cabc068144c0b9718092e7068a32de2da2fab" translate="yes" xml:space="preserve">
          <source>FromFn::filter</source>
          <target state="translated">FromFn::filter</target>
        </trans-unit>
        <trans-unit id="c428a70eed23c8748e97d7b52c53163675f55635" translate="yes" xml:space="preserve">
          <source>FromFn::filter_map</source>
          <target state="translated">FromFn::filter_map</target>
        </trans-unit>
        <trans-unit id="93846947c2b596c22bfad404c3e09fd4600173a4" translate="yes" xml:space="preserve">
          <source>FromFn::find</source>
          <target state="translated">FromFn::find</target>
        </trans-unit>
        <trans-unit id="c2fa8bbc9e75620bd3f52ec77812c683d5720689" translate="yes" xml:space="preserve">
          <source>FromFn::find_map</source>
          <target state="translated">FromFn::find_map</target>
        </trans-unit>
        <trans-unit id="c247400a7e94cb47ecf9ec277ef05328b6da39a7" translate="yes" xml:space="preserve">
          <source>FromFn::flat_map</source>
          <target state="translated">FromFn::flat_map</target>
        </trans-unit>
        <trans-unit id="b8e395dd0daa535ba3a1b2d30ce2a2297e2749c0" translate="yes" xml:space="preserve">
          <source>FromFn::flatten</source>
          <target state="translated">FromFn::flatten</target>
        </trans-unit>
        <trans-unit id="291d5ac05a71cd905fd11a3c926116e9910a0f32" translate="yes" xml:space="preserve">
          <source>FromFn::fmt</source>
          <target state="translated">FromFn::fmt</target>
        </trans-unit>
        <trans-unit id="1d6bc4438b3ee6de07c8226628c01c605cc2c12f" translate="yes" xml:space="preserve">
          <source>FromFn::fold</source>
          <target state="translated">FromFn::fold</target>
        </trans-unit>
        <trans-unit id="b0cc978eb55c645b04d4748225713d097a016c16" translate="yes" xml:space="preserve">
          <source>FromFn::for_each</source>
          <target state="translated">FromFn::for_each</target>
        </trans-unit>
        <trans-unit id="696126195e64358c186e7c8c9ba70300c1a54795" translate="yes" xml:space="preserve">
          <source>FromFn::from</source>
          <target state="translated">FromFn::from</target>
        </trans-unit>
        <trans-unit id="9422f31b3fdd3444d7d9a657e431cfc6bf368554" translate="yes" xml:space="preserve">
          <source>FromFn::fuse</source>
          <target state="translated">FromFn::fuse</target>
        </trans-unit>
        <trans-unit id="f0898886063e02add23e81048db80e14869522c9" translate="yes" xml:space="preserve">
          <source>FromFn::ge</source>
          <target state="translated">FromFn::ge</target>
        </trans-unit>
        <trans-unit id="938bc9b27931508db8e9ec4ee7e2ecfffcce85a9" translate="yes" xml:space="preserve">
          <source>FromFn::gt</source>
          <target state="translated">FromFn::gt</target>
        </trans-unit>
        <trans-unit id="5f5242ca11d2be4a93763ad44cf5a1901bba1038" translate="yes" xml:space="preserve">
          <source>FromFn::inspect</source>
          <target state="translated">FromFn::inspect</target>
        </trans-unit>
        <trans-unit id="8b24481c5fe21f0d4eefc523e12c42563a9349cf" translate="yes" xml:space="preserve">
          <source>FromFn::into</source>
          <target state="translated">FromFn::into</target>
        </trans-unit>
        <trans-unit id="ae4f0c406ba5ce7367ef7c9f2f0ff1d657965af3" translate="yes" xml:space="preserve">
          <source>FromFn::into_iter</source>
          <target state="translated">FromFn::into_iter</target>
        </trans-unit>
        <trans-unit id="afff9a10d69a5add7ba160fd8944e5721b2448b0" translate="yes" xml:space="preserve">
          <source>FromFn::is_sorted</source>
          <target state="translated">FromFn::is_sorted</target>
        </trans-unit>
        <trans-unit id="65555425c11972ea9a43c73ece4221af77b37aac" translate="yes" xml:space="preserve">
          <source>FromFn::is_sorted_by</source>
          <target state="translated">FromFn::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="e962a84a22ee3e8286deb98ec6a05dc09fb7c1da" translate="yes" xml:space="preserve">
          <source>FromFn::is_sorted_by_key</source>
          <target state="translated">FromFn::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="8ce1a710f4a70c6d10a044e276250699320aaf07" translate="yes" xml:space="preserve">
          <source>FromFn::last</source>
          <target state="translated">FromFn::last</target>
        </trans-unit>
        <trans-unit id="84d790ccc1d625773ad60ff7dbafd9719b2c1e60" translate="yes" xml:space="preserve">
          <source>FromFn::le</source>
          <target state="translated">FromFn::le</target>
        </trans-unit>
        <trans-unit id="1d494ff0f71cf64264c61f3a0d0064224ba064b9" translate="yes" xml:space="preserve">
          <source>FromFn::lt</source>
          <target state="translated">FromFn::lt</target>
        </trans-unit>
        <trans-unit id="751b0a3e001bca29a735704d123f59f147dc51fa" translate="yes" xml:space="preserve">
          <source>FromFn::map</source>
          <target state="translated">FromFn::map</target>
        </trans-unit>
        <trans-unit id="9557f4915531898d81c94e1b4775a41a6bfc887c" translate="yes" xml:space="preserve">
          <source>FromFn::max</source>
          <target state="translated">FromFn::max</target>
        </trans-unit>
        <trans-unit id="773497baa5bf74230ff0d338cc91e10ae9beefb2" translate="yes" xml:space="preserve">
          <source>FromFn::max_by</source>
          <target state="translated">FromFn::max_by</target>
        </trans-unit>
        <trans-unit id="a9eb1b7e1e1ef9f1ccc894fc973f5685bd2ee298" translate="yes" xml:space="preserve">
          <source>FromFn::max_by_key</source>
          <target state="translated">FromFn::max_by_key</target>
        </trans-unit>
        <trans-unit id="4a3bb54490abbe7310741d5e0d22f11e79c14bac" translate="yes" xml:space="preserve">
          <source>FromFn::min</source>
          <target state="translated">FromFn::min</target>
        </trans-unit>
        <trans-unit id="21f309276fd1f5ad2886f9f09f747d01a840db3c" translate="yes" xml:space="preserve">
          <source>FromFn::min_by</source>
          <target state="translated">FromFn::min_by</target>
        </trans-unit>
        <trans-unit id="2d400ed7d58d506ce1a2d1a6674024793a847641" translate="yes" xml:space="preserve">
          <source>FromFn::min_by_key</source>
          <target state="translated">FromFn::min_by_key</target>
        </trans-unit>
        <trans-unit id="de781dccfea9f050f774daaef74a4dfd4b3cebfc" translate="yes" xml:space="preserve">
          <source>FromFn::ne</source>
          <target state="translated">FromFn::ne</target>
        </trans-unit>
        <trans-unit id="3e9810f0bdab4291492baf74a6bfa30aa21a77bd" translate="yes" xml:space="preserve">
          <source>FromFn::next</source>
          <target state="translated">FromFn::next</target>
        </trans-unit>
        <trans-unit id="5ec257b2ca69cb089b12e30887e2681f5aac401e" translate="yes" xml:space="preserve">
          <source>FromFn::nth</source>
          <target state="translated">FromFn::nth</target>
        </trans-unit>
        <trans-unit id="f77021ba879adead1d2e4228d87ef2663943b655" translate="yes" xml:space="preserve">
          <source>FromFn::partial_cmp</source>
          <target state="translated">FromFn::partial_cmp</target>
        </trans-unit>
        <trans-unit id="288b8538ae0f2879d43bf94297be3c6133a5f820" translate="yes" xml:space="preserve">
          <source>FromFn::partition</source>
          <target state="translated">FromFn::partition</target>
        </trans-unit>
        <trans-unit id="6ef8b8fdd33b9e08d9b7b53fc44edd140535fa87" translate="yes" xml:space="preserve">
          <source>FromFn::peekable</source>
          <target state="translated">FromFn::peekable</target>
        </trans-unit>
        <trans-unit id="9fd5da570ca929f5692e6716a06272746f0fa1d8" translate="yes" xml:space="preserve">
          <source>FromFn::position</source>
          <target state="translated">FromFn::position</target>
        </trans-unit>
        <trans-unit id="9fd628265dd15f36a0898f2dbb30e35b39ee8fc7" translate="yes" xml:space="preserve">
          <source>FromFn::product</source>
          <target state="translated">FromFn::product</target>
        </trans-unit>
        <trans-unit id="f309b4b73dbc1c831c32217194b232a41056a729" translate="yes" xml:space="preserve">
          <source>FromFn::rev</source>
          <target state="translated">FromFn::rev</target>
        </trans-unit>
        <trans-unit id="a0c49b380c128a9bc5de2c3faa4da44b9fc8bbc6" translate="yes" xml:space="preserve">
          <source>FromFn::rposition</source>
          <target state="translated">FromFn::rposition</target>
        </trans-unit>
        <trans-unit id="19e6db953101ebb606b1b19e2f9d1a4a26b6809c" translate="yes" xml:space="preserve">
          <source>FromFn::scan</source>
          <target state="translated">FromFn::scan</target>
        </trans-unit>
        <trans-unit id="5d0d63065b04c4b09f0aa2957112e2fe0f225430" translate="yes" xml:space="preserve">
          <source>FromFn::size_hint</source>
          <target state="translated">FromFn::size_hint</target>
        </trans-unit>
        <trans-unit id="38e4d5016859cd612a773350539b8a8f8ed4f69e" translate="yes" xml:space="preserve">
          <source>FromFn::skip</source>
          <target state="translated">FromFn::skip</target>
        </trans-unit>
        <trans-unit id="12a7c70e2490eae42133b8d79eb74bbc281ed3c1" translate="yes" xml:space="preserve">
          <source>FromFn::skip_while</source>
          <target state="translated">FromFn::skip_while</target>
        </trans-unit>
        <trans-unit id="b8e40ee23c90dfe55dc2adc6eb4e1fa68a56d3f2" translate="yes" xml:space="preserve">
          <source>FromFn::step_by</source>
          <target state="translated">FromFn::step_by</target>
        </trans-unit>
        <trans-unit id="b3529c28fcc7f21d0e3ae52857e07c43bb6c8013" translate="yes" xml:space="preserve">
          <source>FromFn::sum</source>
          <target state="translated">FromFn::sum</target>
        </trans-unit>
        <trans-unit id="6daa93fa94eca065b7334c99d285abb621f9ead1" translate="yes" xml:space="preserve">
          <source>FromFn::take</source>
          <target state="translated">FromFn::take</target>
        </trans-unit>
        <trans-unit id="156bad7396ba706178e8ea89088365ae093fa7cd" translate="yes" xml:space="preserve">
          <source>FromFn::take_while</source>
          <target state="translated">FromFn::take_while</target>
        </trans-unit>
        <trans-unit id="9839051411a51874292b5e676a817c3565f4cdb7" translate="yes" xml:space="preserve">
          <source>FromFn::to_owned</source>
          <target state="translated">FromFn::to_owned</target>
        </trans-unit>
        <trans-unit id="ea08cb40922d3bbf69b931ce4241edaff08bba49" translate="yes" xml:space="preserve">
          <source>FromFn::try_fold</source>
          <target state="translated">FromFn::try_fold</target>
        </trans-unit>
        <trans-unit id="bd6c17792affbcc25b9cd6f9d78ae20bb6d8b440" translate="yes" xml:space="preserve">
          <source>FromFn::try_for_each</source>
          <target state="translated">FromFn::try_for_each</target>
        </trans-unit>
        <trans-unit id="599426d9bfd33f5d58f1c89e6fe9a710264c9a4f" translate="yes" xml:space="preserve">
          <source>FromFn::try_from</source>
          <target state="translated">FromFn::try_from</target>
        </trans-unit>
        <trans-unit id="171a8267d3eee4bfef7510e89b3fcd5c1ca50a99" translate="yes" xml:space="preserve">
          <source>FromFn::try_into</source>
          <target state="translated">FromFn::try_into</target>
        </trans-unit>
        <trans-unit id="5dbbcba7b3548c91e4ba3998b160d580ba16ca70" translate="yes" xml:space="preserve">
          <source>FromFn::type_id</source>
          <target state="translated">FromFn::type_id</target>
        </trans-unit>
        <trans-unit id="aa009f7a09e21b409ed71bd642c5fa986b90aa2e" translate="yes" xml:space="preserve">
          <source>FromFn::unzip</source>
          <target state="translated">FromFn::unzip</target>
        </trans-unit>
        <trans-unit id="efab3519b36c349c534fa71bff1cf729099859a4" translate="yes" xml:space="preserve">
          <source>FromFn::zip</source>
          <target state="translated">FromFn::zip</target>
        </trans-unit>
        <trans-unit id="32b4bf2ef95e2d2aec7397ff0647d8babccdf02c" translate="yes" xml:space="preserve">
          <source>FromIterator</source>
          <target state="translated">FromIterator</target>
        </trans-unit>
        <trans-unit id="e1870c89bb148edb105f129409fab48efce69f62" translate="yes" xml:space="preserve">
          <source>FromIterator::from_iter</source>
          <target state="translated">FromIterator::from_iter</target>
        </trans-unit>
        <trans-unit id="4bad9f9fcb9b55d2910b83906b94cb3131b43c5d" translate="yes" xml:space="preserve">
          <source>FromRawFd</source>
          <target state="translated">FromRawFd</target>
        </trans-unit>
        <trans-unit id="a56a062331e31ac1c2b5a5dac0da0b0abb9d6001" translate="yes" xml:space="preserve">
          <source>FromRawHandle</source>
          <target state="translated">FromRawHandle</target>
        </trans-unit>
        <trans-unit id="c37ec0040cdbff3d1d305c56421552ddc2489011" translate="yes" xml:space="preserve">
          <source>FromRawSocket</source>
          <target state="translated">FromRawSocket</target>
        </trans-unit>
        <trans-unit id="4dd00b66acc9fd438c18fe918918688eac4eb0c2" translate="yes" xml:space="preserve">
          <source>FromStr</source>
          <target state="translated">FromStr</target>
        </trans-unit>
        <trans-unit id="dab7a59717331bdfe8b7ab641211c67a9dfb50eb" translate="yes" xml:space="preserve">
          <source>FromStr::from_str</source>
          <target state="translated">FromStr::from_str</target>
        </trans-unit>
        <trans-unit id="95bb1cb5923a9cd972fc547c7b002fc5ba2ce7a2" translate="yes" xml:space="preserve">
          <source>FromUtf16Error</source>
          <target state="translated">FromUtf16Error</target>
        </trans-unit>
        <trans-unit id="fcb0d72a120d0c67f17203436ea5960146d62ec2" translate="yes" xml:space="preserve">
          <source>FromUtf16Error::borrow</source>
          <target state="translated">FromUtf16Error::borrow</target>
        </trans-unit>
        <trans-unit id="113c351153f138ad8e550bd5bc87e5b5707c2ec9" translate="yes" xml:space="preserve">
          <source>FromUtf16Error::borrow_mut</source>
          <target state="translated">FromUtf16Error::borrow_mut</target>
        </trans-unit>
        <trans-unit id="97836107e76f8ba4b690e740298dc374f5970b10" translate="yes" xml:space="preserve">
          <source>FromUtf16Error::cause</source>
          <target state="translated">FromUtf16Error::cause</target>
        </trans-unit>
        <trans-unit id="e94e007d11f3b1dda24c2465e9cb38303e308e73" translate="yes" xml:space="preserve">
          <source>FromUtf16Error::description</source>
          <target state="translated">FromUtf16Error::description</target>
        </trans-unit>
        <trans-unit id="2c32d02e6ae646045db166c707624569fdae72d4" translate="yes" xml:space="preserve">
          <source>FromUtf16Error::fmt</source>
          <target state="translated">FromUtf16Error::fmt</target>
        </trans-unit>
        <trans-unit id="ba0c3d406513bc34fdc41eb68be8108d0b00395d" translate="yes" xml:space="preserve">
          <source>FromUtf16Error::from</source>
          <target state="translated">FromUtf16Error::from</target>
        </trans-unit>
        <trans-unit id="d5575256ab625def6f4f6cc664052c3b6a58df9c" translate="yes" xml:space="preserve">
          <source>FromUtf16Error::into</source>
          <target state="translated">FromUtf16Error::into</target>
        </trans-unit>
        <trans-unit id="1037656b64535df6ad944739d9fe0fdcb97622a8" translate="yes" xml:space="preserve">
          <source>FromUtf16Error::source</source>
          <target state="translated">FromUtf16Error::source</target>
        </trans-unit>
        <trans-unit id="b3d3ba376b016c98e88ee83c7eef33115c996117" translate="yes" xml:space="preserve">
          <source>FromUtf16Error::to_string</source>
          <target state="translated">FromUtf16Error::to_string</target>
        </trans-unit>
        <trans-unit id="245023bdaeff4ddeb623b54723ef50f0ab4c73b2" translate="yes" xml:space="preserve">
          <source>FromUtf16Error::try_from</source>
          <target state="translated">FromUtf16Error::try_from</target>
        </trans-unit>
        <trans-unit id="01065c5d7bcef1fc490d7e58b90a6f4dca50e4fb" translate="yes" xml:space="preserve">
          <source>FromUtf16Error::try_into</source>
          <target state="translated">FromUtf16Error::try_into</target>
        </trans-unit>
        <trans-unit id="7abd332163a5c3ec4a4d4c52373ebd061517082b" translate="yes" xml:space="preserve">
          <source>FromUtf16Error::type_id</source>
          <target state="translated">FromUtf16Error::type_id</target>
        </trans-unit>
        <trans-unit id="f9cdf743b2bfb7c8f355315fba316a0105bfe790" translate="yes" xml:space="preserve">
          <source>FromUtf8Error</source>
          <target state="translated">FromUtf8Error</target>
        </trans-unit>
        <trans-unit id="748acfd665ce8fa3a2ec94e5db04d35258af238a" translate="yes" xml:space="preserve">
          <source>FromUtf8Error::as_bytes</source>
          <target state="translated">FromUtf8Error::as_bytes</target>
        </trans-unit>
        <trans-unit id="67756ec60a16d0349c2bef1bfd6a9c4327f5ce92" translate="yes" xml:space="preserve">
          <source>FromUtf8Error::borrow</source>
          <target state="translated">FromUtf8Error::borrow</target>
        </trans-unit>
        <trans-unit id="f2d6dcca426a9ff1031f09b28e7a3c7e7e95cac7" translate="yes" xml:space="preserve">
          <source>FromUtf8Error::borrow_mut</source>
          <target state="translated">FromUtf8Error::borrow_mut</target>
        </trans-unit>
        <trans-unit id="934a60e32f54920b868089cc1b73dc891da641c4" translate="yes" xml:space="preserve">
          <source>FromUtf8Error::cause</source>
          <target state="translated">FromUtf8Error::cause</target>
        </trans-unit>
        <trans-unit id="6102ea0bc31df9b0bd54ca8c6f45681afdc7f3be" translate="yes" xml:space="preserve">
          <source>FromUtf8Error::description</source>
          <target state="translated">FromUtf8Error::description</target>
        </trans-unit>
        <trans-unit id="db9d99b90918d37a2499587faaadf8cc4c5ba1e8" translate="yes" xml:space="preserve">
          <source>FromUtf8Error::fmt</source>
          <target state="translated">FromUtf8Error::fmt</target>
        </trans-unit>
        <trans-unit id="24fe7f678b98dc8e8766a2bc4809afc6de8f2446" translate="yes" xml:space="preserve">
          <source>FromUtf8Error::from</source>
          <target state="translated">FromUtf8Error::from</target>
        </trans-unit>
        <trans-unit id="a6ad7612f0b82b4e8c1334c223cd16ae09fe7950" translate="yes" xml:space="preserve">
          <source>FromUtf8Error::into</source>
          <target state="translated">FromUtf8Error::into</target>
        </trans-unit>
        <trans-unit id="b7463c02515f737098afa25500af32760dfea53f" translate="yes" xml:space="preserve">
          <source>FromUtf8Error::into_bytes</source>
          <target state="translated">FromUtf8Error::into_bytes</target>
        </trans-unit>
        <trans-unit id="436ef25551c663c53e58d3b69c8eb9dcb10d3235" translate="yes" xml:space="preserve">
          <source>FromUtf8Error::source</source>
          <target state="translated">FromUtf8Error::source</target>
        </trans-unit>
        <trans-unit id="e878d23af1cc95debb68e1cd9e006909c66b66ff" translate="yes" xml:space="preserve">
          <source>FromUtf8Error::to_string</source>
          <target state="translated">FromUtf8Error::to_string</target>
        </trans-unit>
        <trans-unit id="4fbc2f11f0a6ae5317111c17fe4fc467bfab1283" translate="yes" xml:space="preserve">
          <source>FromUtf8Error::try_from</source>
          <target state="translated">FromUtf8Error::try_from</target>
        </trans-unit>
        <trans-unit id="6ffa2b38a64b65974d8f8259323056cadca3d2ba" translate="yes" xml:space="preserve">
          <source>FromUtf8Error::try_into</source>
          <target state="translated">FromUtf8Error::try_into</target>
        </trans-unit>
        <trans-unit id="240101bf524733a6227bf7410764c0c88b68ac25" translate="yes" xml:space="preserve">
          <source>FromUtf8Error::type_id</source>
          <target state="translated">FromUtf8Error::type_id</target>
        </trans-unit>
        <trans-unit id="1520b6f9dab555ff5f00e3142608c852624a5bdc" translate="yes" xml:space="preserve">
          <source>FromUtf8Error::utf8_error</source>
          <target state="translated">FromUtf8Error::utf8_error</target>
        </trans-unit>
        <trans-unit id="66c90b064569c220f974a737cea488bb020847ab" translate="yes" xml:space="preserve">
          <source>FromVecWithNulError</source>
          <target state="translated">FromVecWithNulError</target>
        </trans-unit>
        <trans-unit id="c6a1521589825282f50a8f81cbc487bceb136c94" translate="yes" xml:space="preserve">
          <source>Fully Qualified Syntax for Disambiguation: Calling Methods with the Same Name</source>
          <target state="translated">完全限定的语法来消除歧义。调用同名方法</target>
        </trans-unit>
        <trans-unit id="5c898364acf0b0ec642107ce708180420a68b11c" translate="yes" xml:space="preserve">
          <source>Fully qualified paths allow for disambiguating the path for &lt;a href=&quot;items/implementations#trait-implementations&quot;&gt;trait implementations&lt;/a&gt; and for specifying &lt;a href=&quot;#canonical-paths&quot;&gt;canonical paths&lt;/a&gt;. When used in a type specification, it supports using the type syntax specified below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627268cbc7ba4357c2bec7566f1dd46e677125cd" translate="yes" xml:space="preserve">
          <source>Fully qualified paths allow for disambiguating the path for &lt;a href=&quot;items/implementations#trait-implementations&quot;&gt;trait implementations&lt;/a&gt; and for specifying &lt;a href=&quot;paths#canonical-paths&quot;&gt;canonical paths&lt;/a&gt;. When used in a type specification, it supports using the type syntax specified below.</source>
          <target state="translated">完全限定的路径可以消除&lt;a href=&quot;items/implementations#trait-implementations&quot;&gt;特征实现&lt;/a&gt;的路径歧义，并可以指定&lt;a href=&quot;paths#canonical-paths&quot;&gt;规范的路径&lt;/a&gt;。在类型规范中使用时，它支持使用下面指定的类型语法。</target>
        </trans-unit>
        <trans-unit id="b6327f489e8e1ede1c999c25b8f597a08dc5e5e7" translate="yes" xml:space="preserve">
          <source>Function Bodies Contain Statements and Expressions</source>
          <target state="translated">函数体包含语句和表达式</target>
        </trans-unit>
        <trans-unit id="cec90ffa8d067cfb33c2b7e5ea59f57a4ab51f07" translate="yes" xml:space="preserve">
          <source>Function Parameters</source>
          <target state="translated">功能参数</target>
        </trans-unit>
        <trans-unit id="fa21ce3153a0bf08e0da8f6a18de7da525121cc9" translate="yes" xml:space="preserve">
          <source>Function Pointers</source>
          <target state="translated">功能指针</target>
        </trans-unit>
        <trans-unit id="691f82dd99cc6e11c5ba71e42753b5f300e68086" translate="yes" xml:space="preserve">
          <source>Function and closure return type</source>
          <target state="translated">功能和关闭返回类型</target>
        </trans-unit>
        <trans-unit id="d289dd66334349d57b2378d89d1ba44a53f0a66f" translate="yes" xml:space="preserve">
          <source>Function bodies are made up of a series of statements optionally ending in an expression. So far, we&amp;rsquo;ve only covered functions without an ending expression, but you have seen an expression as part of a statement. Because Rust is an expression-based language, this is an important distinction to understand. Other languages don&amp;rsquo;t have the same distinctions, so let&amp;rsquo;s look at what statements and expressions are and how their differences affect the bodies of functions.</source>
          <target state="translated">函数体由一系列可选地以表达式结尾的语句组成。到目前为止，我们仅介绍了没有结尾表达式的函数，但是您已经将表达式视为语句的一部分。由于Rust是一种基于表达式的语言，因此这是需要理解的重要区别。其他语言没有相同的区别，因此让我们看看什么是语句和表达式以及它们的差异如何影响函数体。</target>
        </trans-unit>
        <trans-unit id="36ed99d43dd98e906de43534c86aaa6329bc9711" translate="yes" xml:space="preserve">
          <source>Function call expression; also used to initialize tuple &lt;code&gt;struct&lt;/code&gt;s and tuple &lt;code&gt;enum&lt;/code&gt; variants</source>
          <target state="translated">函数调用表达式；也用于初始化元组 &lt;code&gt;struct&lt;/code&gt; 和元组 &lt;code&gt;enum&lt;/code&gt; 变量</target>
        </trans-unit>
        <trans-unit id="dd4883aafb3cdb86f14e39e1c7d1f7edcb15ec04" translate="yes" xml:space="preserve">
          <source>Function calls, array indexing</source>
          <target state="translated">函数调用,数组索引</target>
        </trans-unit>
        <trans-unit id="03a2a2fdcb8604503eda22208a226681c6707089" translate="yes" xml:space="preserve">
          <source>Function definitions are also statements; the entire preceding example is a statement in itself.</source>
          <target state="translated">函数定义也是语句,整个前面的例子本身就是一个语句。</target>
        </trans-unit>
        <trans-unit id="19f4a1aef809a484c5ab3c0d1a7708464ac28c08" translate="yes" xml:space="preserve">
          <source>Function definitions in Rust start with &lt;code&gt;fn&lt;/code&gt; and have a set of parentheses after the function name. The curly brackets tell the compiler where the function body begins and ends.</source>
          <target state="translated">Rust中的函数定义以 &lt;code&gt;fn&lt;/code&gt; 开头，并在函数名称后带有一组括号。大括号告诉编译器函数体的开始和结束位置。</target>
        </trans-unit>
        <trans-unit id="f527034de868b518981c857b1101b4a224d018cd" translate="yes" xml:space="preserve">
          <source>Function item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da36bbe9a85b3247538cc3fec803f4a226bb9238" translate="yes" xml:space="preserve">
          <source>Function item to address cast</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52aa3d6cb40fdb90563de7ef5199bdc225e74e20" translate="yes" xml:space="preserve">
          <source>Function item to function pointer cast</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac11f9c060fdae4134739658017e8fe749dedfd5" translate="yes" xml:space="preserve">
          <source>Function item to pointer cast</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2c99db471758809fdfaf0b8a6e27088636a20c" translate="yes" xml:space="preserve">
          <source>Function item types</source>
          <target state="translated">功能项目类型</target>
        </trans-unit>
        <trans-unit id="63984dbadb9d453a95bc957d9bd90bb4979166b9" translate="yes" xml:space="preserve">
          <source>Function item types (i.e., the distinct types defined for each function)</source>
          <target state="translated">函数项目类型(即为每个函数定义的不同类型)。</target>
        </trans-unit>
        <trans-unit id="2a993beecec2e700f82f799b3535fa3479b4141d" translate="yes" xml:space="preserve">
          <source>Function item types and function pointers automatically implement the trait.</source>
          <target state="translated">函数项类型和函数指针自动实现该特性。</target>
        </trans-unit>
        <trans-unit id="112c129d1e3d14e754ce4eeea68853b281f78ee9" translate="yes" xml:space="preserve">
          <source>Function or method declarations without a body only allow &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; or &lt;code&gt;_&lt;/code&gt;&lt;a href=&quot;../patterns#wildcard-pattern&quot;&gt;wild card&lt;/a&gt; patterns. &lt;code&gt;mut&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; is currently allowed, but it is deprecated and will become a hard error in the future.</source>
          <target state="translated">没有主体的函数或方法声明仅允许&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;或 &lt;code&gt;_&lt;/code&gt; &lt;a href=&quot;../patterns#wildcard-pattern&quot;&gt;通配符&lt;/a&gt;模式。目前允许使用 &lt;code&gt;mut&lt;/code&gt; &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;，但已不建议使用mut IDENTIFIER，将来它将成为硬错误。</target>
        </trans-unit>
        <trans-unit id="e3cf1b82dd9028df4aba63ebe0d8e6f3637f2b6a" translate="yes" xml:space="preserve">
          <source>Function parameters are immutable unless declared with &lt;code&gt;mut&lt;/code&gt;. The &lt;code&gt;mut&lt;/code&gt; keyword applies only to the following parameter. For example: &lt;code&gt;|mut x, y|&lt;/code&gt; and &lt;code&gt;fn f(mut x: Box&amp;lt;i32&amp;gt;, y: Box&amp;lt;i32&amp;gt;)&lt;/code&gt; declare one mutable variable &lt;code&gt;x&lt;/code&gt; and one immutable variable &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">除非使用 &lt;code&gt;mut&lt;/code&gt; 声明，否则函数参数是不可变的。该 &lt;code&gt;mut&lt;/code&gt; 关键字仅适用于以下参数。例如： &lt;code&gt;|mut x, y|&lt;/code&gt; 和 &lt;code&gt;fn f(mut x: Box&amp;lt;i32&amp;gt;, y: Box&amp;lt;i32&amp;gt;)&lt;/code&gt; 声明一个可变变量 &lt;code&gt;x&lt;/code&gt; 和一个不可变变量 &lt;code&gt;y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4604d097c2775f4db1df4742036b1ee376e32c38" translate="yes" xml:space="preserve">
          <source>Function parameters can also be patterns. The code in Listing 18-6, which declares a function named &lt;code&gt;foo&lt;/code&gt; that takes one parameter named &lt;code&gt;x&lt;/code&gt; of type &lt;code&gt;i32&lt;/code&gt;, should by now look familiar.</source>
          <target state="translated">功能参数也可以是模式。清单18-6中的代码声明了一个名为 &lt;code&gt;foo&lt;/code&gt; 的函数，该函数带有一个名为 &lt;code&gt;i32&lt;/code&gt; 类型的 &lt;code&gt;x&lt;/code&gt; 的参数，现在应该看起来很熟悉。</target>
        </trans-unit>
        <trans-unit id="ec08d670fef2800f4026355b26b0c2e7326f8889" translate="yes" xml:space="preserve">
          <source>Function parameters, &lt;code&gt;let&lt;/code&gt; statements, and &lt;code&gt;for&lt;/code&gt; loops can only accept irrefutable patterns, because the program cannot do anything meaningful when values don&amp;rsquo;t match. The &lt;code&gt;if let&lt;/code&gt; and &lt;code&gt;while let&lt;/code&gt; expressions accept refutable and irrefutable patterns, but the compiler warns against irrefutable patterns because by definition they&amp;rsquo;re intended to handle possible failure: the functionality of a conditional is in its ability to perform differently depending on success or failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="803b8d98596aa720a921c36dc97486686404539d" translate="yes" xml:space="preserve">
          <source>Function parameters, &lt;code&gt;let&lt;/code&gt; statements, and &lt;code&gt;for&lt;/code&gt; loops can only accept irrefutable patterns, because the program cannot do anything meaningful when values don&amp;rsquo;t match. The &lt;code&gt;if let&lt;/code&gt; and &lt;code&gt;while let&lt;/code&gt; expressions only accept refutable patterns, because by definition they&amp;rsquo;re intended to handle possible failure: the functionality of a conditional is in its ability to perform differently depending on success or failure.</source>
          <target state="translated">函数参数， &lt;code&gt;let&lt;/code&gt; 语句和 &lt;code&gt;for&lt;/code&gt; 循环只能接受不可辩驳的模式，因为当值不匹配时，程序无法做任何有意义的事情。的 &lt;code&gt;if let&lt;/code&gt; 与 &lt;code&gt;while let&lt;/code&gt; 的表达只接受证伪的模式，因为根据定义，他们打算处理可能失败：有条件的功能是其取决于成功或失败来执行不同的能力。</target>
        </trans-unit>
        <trans-unit id="0262efe3a9e70538318d9f40b5d5c3aee785392d" translate="yes" xml:space="preserve">
          <source>Function pointer</source>
          <target state="translated">函数指针</target>
        </trans-unit>
        <trans-unit id="3a6ad7fb74590fbb0ac18b89a46012671173169c" translate="yes" xml:space="preserve">
          <source>Function pointer to address cast</source>
          <target state="translated">地址投向的函数指针</target>
        </trans-unit>
        <trans-unit id="2ea9417e46d243404ec3c296058e12f5458be748" translate="yes" xml:space="preserve">
          <source>Function pointer to pointer cast</source>
          <target state="translated">函数指针投向指针</target>
        </trans-unit>
        <trans-unit id="aff25779a650561f51919916715a331dbe79e151" translate="yes" xml:space="preserve">
          <source>Function pointer types</source>
          <target state="translated">函数指针类型</target>
        </trans-unit>
        <trans-unit id="45d7a4aae060a99add3462979349c03f64926590" translate="yes" xml:space="preserve">
          <source>Function pointer types (e.g., &lt;code&gt;fn() -&amp;gt; i32&lt;/code&gt;)</source>
          <target state="translated">函数指针类型（例如 &lt;code&gt;fn() -&amp;gt; i32&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b24ffbdb9339fdeaf0aa7876f8b677a6e93905b1" translate="yes" xml:space="preserve">
          <source>Function pointer types, written using the &lt;code&gt;fn&lt;/code&gt; keyword, refer to a function whose identity is not necessarily known at compile-time. They can be created via a coercion from both &lt;a href=&quot;function-item&quot;&gt;function items&lt;/a&gt; and non-capturing &lt;a href=&quot;closure&quot;&gt;closures&lt;/a&gt;.</source>
          <target state="translated">使用 &lt;code&gt;fn&lt;/code&gt; 关键字编写的函数指针类型指向其身份在编译时不一定已知的函数。可以通过强制从&lt;a href=&quot;function-item&quot;&gt;功能项&lt;/a&gt;和非捕获&lt;a href=&quot;closure&quot;&gt;闭包&lt;/a&gt;创建它们。</target>
        </trans-unit>
        <trans-unit id="d6054df2c54398efbf27ace21713f95c0a24cb59" translate="yes" xml:space="preserve">
          <source>Function pointers</source>
          <target state="translated">功能指针</target>
        </trans-unit>
        <trans-unit id="fbcf7edbb2c6d77dc22438afcec72a59e2993480" translate="yes" xml:space="preserve">
          <source>Function pointers are pointers that point to &lt;em&gt;code&lt;/em&gt;, not data. They can be called just like functions. Like references, function pointers are, among other things, assumed to not be null, so if you want to pass a function pointer over FFI and be able to accommodate null pointers, make your type &lt;code&gt;Option&amp;lt;fn()&amp;gt;&lt;/code&gt; with your required signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15cdfd633c5d7b0c70793f7c9489a755e1d6379f" translate="yes" xml:space="preserve">
          <source>Function pointers implement all three of the closure traits (&lt;code&gt;Fn&lt;/code&gt;, &lt;code&gt;FnMut&lt;/code&gt;, and &lt;code&gt;FnOnce&lt;/code&gt;), so you can always pass a function pointer as an argument for a function that expects a closure. It&amp;rsquo;s best to write functions using a generic type and one of the closure traits so your functions can accept either functions or closures.</source>
          <target state="translated">函数指针实现了所有三个闭包特征（ &lt;code&gt;Fn&lt;/code&gt; ， &lt;code&gt;FnMut&lt;/code&gt; 和 &lt;code&gt;FnOnce&lt;/code&gt; ），因此您始终可以将函数指针作为需要闭包的函数的参数传递。最好使用泛型类型和闭包特征之一编写函数，以便您的函数可以接受函数或闭包。</target>
        </trans-unit>
        <trans-unit id="e715fbc2788b68f15adb3e2fe42db1f1b3eb63be" translate="yes" xml:space="preserve">
          <source>Function pointers implement the following traits:</source>
          <target state="translated">函数指针实现以下特征。</target>
        </trans-unit>
        <trans-unit id="99b2ae8582343bc9c462a6f08e79b5d728c91e61" translate="yes" xml:space="preserve">
          <source>Function pointers, like &lt;code&gt;fn(usize) -&amp;gt; bool&lt;/code&gt;.</source>
          <target state="translated">函数指针，例如 &lt;code&gt;fn(usize) -&amp;gt; bool&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a456906988ca1f218d8ec9026e2b7d0d28b99d1f" translate="yes" xml:space="preserve">
          <source>Function results&amp;mdash;either the final line of a block if it is not semicolon-terminated or any expression in a &lt;code&gt;return&lt;/code&gt; statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a229e02f3fc60bc509ebb974aa38b72eb187af" translate="yes" xml:space="preserve">
          <source>Function results, either the final line of a block if it is not semicolon-terminated or any expression in a &lt;code&gt;return&lt;/code&gt; statement</source>
          <target state="translated">函数结果，如果不是分号结尾的块的最后一行，或者 &lt;code&gt;return&lt;/code&gt; 语句中的任何表达式</target>
        </trans-unit>
        <trans-unit id="29f4f46b2b3a18a824f7e4d35e9bedb57b1f2175" translate="yes" xml:space="preserve">
          <source>Function std::alloc::alloc</source>
          <target state="translated">函数 std::alloc::alloc</target>
        </trans-unit>
        <trans-unit id="c194290249edf0618f600e420e211418fd7ea58d" translate="yes" xml:space="preserve">
          <source>Function std::alloc::alloc_zeroed</source>
          <target state="translated">函数 std::alloc::alloc_zeroed。</target>
        </trans-unit>
        <trans-unit id="c55dc24d1719cca7c04e3e54ee8524fba6daf3ee" translate="yes" xml:space="preserve">
          <source>Function std::alloc::dealloc</source>
          <target state="translated">函数 std::alloc::dealloc</target>
        </trans-unit>
        <trans-unit id="f0a706cc72c3f62f4ea5f25a2d577f9c7dcb0b9c" translate="yes" xml:space="preserve">
          <source>Function std::alloc::handle_alloc_error</source>
          <target state="translated">函数 std::alloc::handle_alloc_error 的作用。</target>
        </trans-unit>
        <trans-unit id="5107e49cfb1f88cc3e2a0a8f7ef7e8b1243aeff1" translate="yes" xml:space="preserve">
          <source>Function std::alloc::realloc</source>
          <target state="translated">函数 std::alloc::realloc</target>
        </trans-unit>
        <trans-unit id="cdfb037e537e5020acc31cc65ff942f2e9f7206e" translate="yes" xml:space="preserve">
          <source>Function std::alloc::set_alloc_error_hook</source>
          <target state="translated">函数 std::alloc::set_alloc_error_hook</target>
        </trans-unit>
        <trans-unit id="d3914accafdbce71005fb9461f231fd4f5ddabd1" translate="yes" xml:space="preserve">
          <source>Function std::alloc::take_alloc_error_hook</source>
          <target state="translated">函数 std::alloc::take_alloc_error_hook</target>
        </trans-unit>
        <trans-unit id="08a3d4cf4b8c828b9ff65c00bd6f11e8584bca6c" translate="yes" xml:space="preserve">
          <source>Function std::any::type_name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9a0c79fb1d3fd234f23de7c5b34911cfa81b34" translate="yes" xml:space="preserve">
          <source>Function std::any::type_name_of_val</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1768a755f4322f02560111cf18bb88f2cde355" translate="yes" xml:space="preserve">
          <source>Function std::array::from_mut</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679f5406945109bebe64c531eab400a32406f941" translate="yes" xml:space="preserve">
          <source>Function std::array::from_ref</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02460030ea5749077815712a0ec7615c21f8abed" translate="yes" xml:space="preserve">
          <source>Function std::ascii::escape_default</source>
          <target state="translated">函数 std::ascii::escape_default</target>
        </trans-unit>
        <trans-unit id="7c07dd33165ae734e5190fd9441a0896193554d6" translate="yes" xml:space="preserve">
          <source>Function std::char::decode_utf16</source>
          <target state="translated">函数 std::char::decode_utf16</target>
        </trans-unit>
        <trans-unit id="4247dc6a69dffc51becd83114cd73f82d393cde9" translate="yes" xml:space="preserve">
          <source>Function std::char::from_digit</source>
          <target state="translated">函数 std::char::from_digit</target>
        </trans-unit>
        <trans-unit id="01947a1ff576a2d0100c1951a0c5226b70685cd8" translate="yes" xml:space="preserve">
          <source>Function std::char::from_u32</source>
          <target state="translated">函数 std::char::from_u32</target>
        </trans-unit>
        <trans-unit id="6dfcd96fdbe2623e4e1d282ca8990e4d07c57639" translate="yes" xml:space="preserve">
          <source>Function std::char::from_u32_unchecked</source>
          <target state="translated">函数 std::char::from_u32_unchecked。</target>
        </trans-unit>
        <trans-unit id="966fc7af79edea1b5d808685aa0ece42863cd0bd" translate="yes" xml:space="preserve">
          <source>Function std::cmp::max</source>
          <target state="translated">函数 std::cmp::max</target>
        </trans-unit>
        <trans-unit id="654964706bd0b6371d33c88bca792ab7df2ef84f" translate="yes" xml:space="preserve">
          <source>Function std::cmp::max_by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f49de713bede186b9e8e2bc75f0b938238fb79" translate="yes" xml:space="preserve">
          <source>Function std::cmp::max_by_key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81416a60431cc075bb472188b6b7e44301f4309" translate="yes" xml:space="preserve">
          <source>Function std::cmp::min</source>
          <target state="translated">函数 std::cmp::min</target>
        </trans-unit>
        <trans-unit id="4afe34f5a20d5be4f51e18e6a974860d77547753" translate="yes" xml:space="preserve">
          <source>Function std::cmp::min_by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd40a1b936bdc62e359c5776f5de1a7197f73d1" translate="yes" xml:space="preserve">
          <source>Function std::cmp::min_by_key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e137b166d99decd00ae7a0d041b9dad569ce9b9" translate="yes" xml:space="preserve">
          <source>Function std::convert::identity</source>
          <target state="translated">函数 std::convert::identity</target>
        </trans-unit>
        <trans-unit id="0a18c6fd4283d782572219c61b78adc0f284163d" translate="yes" xml:space="preserve">
          <source>Function std::default::default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef3f6086da2cb5d3c82ba307db11b82bdd500e4" translate="yes" xml:space="preserve">
          <source>Function std::env::args</source>
          <target state="translated">函数 std::env::args</target>
        </trans-unit>
        <trans-unit id="a7011b47e8ac03fcbd9255878cf4c2155deab1f8" translate="yes" xml:space="preserve">
          <source>Function std::env::args_os</source>
          <target state="translated">函数 std::env::args_os</target>
        </trans-unit>
        <trans-unit id="fb6d2bc291dd13ab649f3064189f28948f498c90" translate="yes" xml:space="preserve">
          <source>Function std::env::current_dir</source>
          <target state="translated">函数 std::env::current_dir</target>
        </trans-unit>
        <trans-unit id="33c219e274f54fd4c2901cadeb8cb8a1716b07ee" translate="yes" xml:space="preserve">
          <source>Function std::env::current_exe</source>
          <target state="translated">函数 std::env::current_exe</target>
        </trans-unit>
        <trans-unit id="93bdb0baaee9eb9479f683bb8e51de0bf9436845" translate="yes" xml:space="preserve">
          <source>Function std::env::home_dir</source>
          <target state="translated">函数 std::env::home_dir</target>
        </trans-unit>
        <trans-unit id="dc6d846e434726288d053c67c7f123047bc5b25a" translate="yes" xml:space="preserve">
          <source>Function std::env::join_paths</source>
          <target state="translated">函数 std::env::join_paths</target>
        </trans-unit>
        <trans-unit id="bbe13942873b051106118872ceff377d6414cbd0" translate="yes" xml:space="preserve">
          <source>Function std::env::remove_var</source>
          <target state="translated">函数 std::env::remove_var</target>
        </trans-unit>
        <trans-unit id="a0ef2707df0c48fd4a3170eabef1fe897798e008" translate="yes" xml:space="preserve">
          <source>Function std::env::set_current_dir</source>
          <target state="translated">函数 std::env::set_current_dir</target>
        </trans-unit>
        <trans-unit id="40c0dc02c3e18407f97eaa7464d7aab31d55dfea" translate="yes" xml:space="preserve">
          <source>Function std::env::set_var</source>
          <target state="translated">函数 std::env::set_var</target>
        </trans-unit>
        <trans-unit id="59db75e19e909089d5b25a261bb16556aafffc1d" translate="yes" xml:space="preserve">
          <source>Function std::env::split_paths</source>
          <target state="translated">函数 std::env::split_paths</target>
        </trans-unit>
        <trans-unit id="c9d56410023af3d25f02f24fd607ad8d19e28e03" translate="yes" xml:space="preserve">
          <source>Function std::env::temp_dir</source>
          <target state="translated">函数 std::env::temp_dir</target>
        </trans-unit>
        <trans-unit id="b44ade5af9baa85bddb409115f11d8a3c50eb27b" translate="yes" xml:space="preserve">
          <source>Function std::env::var</source>
          <target state="translated">函数 std::env::var</target>
        </trans-unit>
        <trans-unit id="515bff141b585b0fb43f2fd81c4ab54894f59b00" translate="yes" xml:space="preserve">
          <source>Function std::env::var_os</source>
          <target state="translated">函数 std::env::var_os</target>
        </trans-unit>
        <trans-unit id="50d6f97705009dc1e9db00019a283d41dc6945fd" translate="yes" xml:space="preserve">
          <source>Function std::env::vars</source>
          <target state="translated">函数 std::env::vars</target>
        </trans-unit>
        <trans-unit id="d0827162d968005e34a0d42ba5ac51aa36efcf56" translate="yes" xml:space="preserve">
          <source>Function std::env::vars_os</source>
          <target state="translated">函数 std::env::vars_os</target>
        </trans-unit>
        <trans-unit id="797538d7608a17a03d5648866da9d6b3f078ba33" translate="yes" xml:space="preserve">
          <source>Function std::fmt::format</source>
          <target state="translated">函数 std::fmt::format</target>
        </trans-unit>
        <trans-unit id="76a06aa8251b2d9f167fedfb35746c3cf97e2ac8" translate="yes" xml:space="preserve">
          <source>Function std::fmt::write</source>
          <target state="translated">函数 std::fmt::write</target>
        </trans-unit>
        <trans-unit id="7fdb91a20cf7c4148e5350b6228d741645e0e6c4" translate="yes" xml:space="preserve">
          <source>Function std::fs::canonicalize</source>
          <target state="translated">函数 std::fs::canonicalize</target>
        </trans-unit>
        <trans-unit id="44ca34ff0e7fcde3369397bebf2cb450b447625e" translate="yes" xml:space="preserve">
          <source>Function std::fs::copy</source>
          <target state="translated">函数 std::fs::copy</target>
        </trans-unit>
        <trans-unit id="79b6cf93dfdb5969925a9bbf30fbc1a32165b6cc" translate="yes" xml:space="preserve">
          <source>Function std::fs::create_dir</source>
          <target state="translated">函数 std::fs::create_dir</target>
        </trans-unit>
        <trans-unit id="649c1df373944ba216c813f37e0990377d5a6ab3" translate="yes" xml:space="preserve">
          <source>Function std::fs::create_dir_all</source>
          <target state="translated">函数 std::fs::create_dir_all</target>
        </trans-unit>
        <trans-unit id="aec64a3774022c217f50a9076ac42b9fb6d48ec2" translate="yes" xml:space="preserve">
          <source>Function std::fs::hard_link</source>
          <target state="translated">函数 std::fs::hard_link</target>
        </trans-unit>
        <trans-unit id="2e6dfe4827a34c58684389da7b0164086c1599e4" translate="yes" xml:space="preserve">
          <source>Function std::fs::metadata</source>
          <target state="translated">函数 std::fs::metadata</target>
        </trans-unit>
        <trans-unit id="257ab42da62059ca592eb29ecce0ba6bb9f767ea" translate="yes" xml:space="preserve">
          <source>Function std::fs::read</source>
          <target state="translated">函数 std::fs::read</target>
        </trans-unit>
        <trans-unit id="488209597226b1646d1224bfbda57c84f45dc7d2" translate="yes" xml:space="preserve">
          <source>Function std::fs::read_dir</source>
          <target state="translated">函数 std::fs::read_dir</target>
        </trans-unit>
        <trans-unit id="0f7c945a8871e4c87b4c07b8880a2b36fc0ce855" translate="yes" xml:space="preserve">
          <source>Function std::fs::read_link</source>
          <target state="translated">函数 std::fs::read_link</target>
        </trans-unit>
        <trans-unit id="28b8da08cde6c3f8ae6f6e98d4dd66e03f939569" translate="yes" xml:space="preserve">
          <source>Function std::fs::read_to_string</source>
          <target state="translated">函数 std::fs::read_to_string</target>
        </trans-unit>
        <trans-unit id="1069c1141b6eaeb5de5bd2c0a071bfa97d894617" translate="yes" xml:space="preserve">
          <source>Function std::fs::remove_dir</source>
          <target state="translated">函数 std::fs::remove_dir</target>
        </trans-unit>
        <trans-unit id="c3cdc1eed161b18d3222b0df7bb2a073cb3a3c45" translate="yes" xml:space="preserve">
          <source>Function std::fs::remove_dir_all</source>
          <target state="translated">函数 std::fs::remove_dir_all</target>
        </trans-unit>
        <trans-unit id="cbcb0bbc9d59dd97c42d329740ea7f8f01cc1fb7" translate="yes" xml:space="preserve">
          <source>Function std::fs::remove_file</source>
          <target state="translated">函数 std::fs::remove_file</target>
        </trans-unit>
        <trans-unit id="af4b065e7ab7d2238b740f9812576377e5cd02d1" translate="yes" xml:space="preserve">
          <source>Function std::fs::rename</source>
          <target state="translated">函数 std::fs::rename</target>
        </trans-unit>
        <trans-unit id="62954bd39f77dcd80b31f5a005cdf3185851bf80" translate="yes" xml:space="preserve">
          <source>Function std::fs::set_permissions</source>
          <target state="translated">函数 std::fs::set_permissions</target>
        </trans-unit>
        <trans-unit id="b73007edcf070db673623f198d05db893c057abf" translate="yes" xml:space="preserve">
          <source>Function std::fs::soft_link</source>
          <target state="translated">函数 std::fs::soft_link</target>
        </trans-unit>
        <trans-unit id="c1609b2e48046eeca39f684e9f2c1c5ab0e14c04" translate="yes" xml:space="preserve">
          <source>Function std::fs::symlink_metadata</source>
          <target state="translated">函数 std::fs::symlink_metadata</target>
        </trans-unit>
        <trans-unit id="42a53d0022af817a39762880cd798efaddb33270" translate="yes" xml:space="preserve">
          <source>Function std::fs::write</source>
          <target state="translated">函数 std::fs::write</target>
        </trans-unit>
        <trans-unit id="62fd296f6f9b7133ed05bfd466c7521be0878aa1" translate="yes" xml:space="preserve">
          <source>Function std::future::pending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6699b0ab5f182e75bd293dd09c4b93781b378dbb" translate="yes" xml:space="preserve">
          <source>Function std::future::ready</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b1ca263375f3e80c5d474d85e7edb549b59317" translate="yes" xml:space="preserve">
          <source>Function std::hint::black_box</source>
          <target state="translated">函数 std::hint::black_box</target>
        </trans-unit>
        <trans-unit id="23fd76dd636e9b48c8e0406a01f4377257e851c2" translate="yes" xml:space="preserve">
          <source>Function std::hint::spin_loop</source>
          <target state="translated">函数 std::hint::spin_loop</target>
        </trans-unit>
        <trans-unit id="c1dcca4e40039d28eec49d9f033066ddf377892d" translate="yes" xml:space="preserve">
          <source>Function std::hint::unreachable_unchecked</source>
          <target state="translated">函数 std::hint::unreachable_unchecked</target>
        </trans-unit>
        <trans-unit id="c04a12aeb32eb6ee408f0172379e7189d04f7fa7" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::abort</source>
          <target state="translated">函数 std::intrinsics::abort</target>
        </trans-unit>
        <trans-unit id="083951e2b60b4a5d3ecc13ab8a8c68c9bcb5e379" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::add_with_overflow</source>
          <target state="translated">函数 std::intrinsics::add_with_overflow</target>
        </trans-unit>
        <trans-unit id="9576b2752f5e3b22d5d58bfbf2ee067369a00927" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::arith_offset</source>
          <target state="translated">函数 std::intrinsics::arith_offset</target>
        </trans-unit>
        <trans-unit id="d1ebe0c7b1746455b6d7f17b0dad2bb65a6220bc" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::assert_inhabited</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f408cd1d9ec75e6daddf85e169dfa1b0b29c8cdd" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::assert_uninit_valid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ee7c75a0303f4182be7832e7932f58a4cf0a1c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::assert_zero_valid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e9043125ea3a71432799ddbd5b5de5c59e4507" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::assume</source>
          <target state="translated">函数 std::intrinsics::assume</target>
        </trans-unit>
        <trans-unit id="97bd81f0aecc23f2c1c6e2f2556a8a5a193fa85e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_and</source>
          <target state="translated">函数 std::intrinsics::atomic_and</target>
        </trans-unit>
        <trans-unit id="83db485cd65a9c1d60ee6553eeb93464c015dcd6" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_and_acq</source>
          <target state="translated">函数 std::intrinsics::atomic_and_acq</target>
        </trans-unit>
        <trans-unit id="2a136fca51e5841f60fee7bd01c6763f69802dd1" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_and_acqrel</source>
          <target state="translated">函数 std::intrinsics::atomic_and_acqrel</target>
        </trans-unit>
        <trans-unit id="de28434a57082bbad9e31bcf13a493f64eeed44c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_and_rel</source>
          <target state="translated">函数 std::intrinsics::atomic_and_rel</target>
        </trans-unit>
        <trans-unit id="35b947f77ad8b80a16f2858b7963283c7447f554" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_and_relaxed</source>
          <target state="translated">函数std::intrinsics::atomic_and_relaxed</target>
        </trans-unit>
        <trans-unit id="a85031e9d18ed4fd2273a2554abf20d5d0e04d42" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg</source>
          <target state="translated">函数 std::intrinsics::atomic_cxchg</target>
        </trans-unit>
        <trans-unit id="21bafabb725c8d186f53d9a39873b76562515d5e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_acq</source>
          <target state="translated">函数 std::intrinsics::atomic_cxchg_acq</target>
        </trans-unit>
        <trans-unit id="9956c269fbb5ef5958060b15ea303e7f003fbf56" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_acq_failrelaxed</source>
          <target state="translated">函数 std::intrinsics::atomic_cxchg_acq_failrelaxed 的作用。</target>
        </trans-unit>
        <trans-unit id="e1a505536784b5179da9f68a2284af4a99c45b36" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_acqrel</source>
          <target state="translated">函数 std::intrinsics::atomic_cxchg_acqrel</target>
        </trans-unit>
        <trans-unit id="192a1cc6826d7c91266da1d6cb911584811f7a90" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_acqrel_failrelaxed</source>
          <target state="translated">函数 std::intrinsics::atomic_cxchg_acqrel_failrelaxed 的作用。</target>
        </trans-unit>
        <trans-unit id="0156b2ddfed79dfb74958e12504cd6470faf5b91" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_failacq</source>
          <target state="translated">函数 std::intrinsics::atomic_cxchg_failacq</target>
        </trans-unit>
        <trans-unit id="55409e6ca1ad5c432b928eb8ce23a904c33f647f" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_failrelaxed</source>
          <target state="translated">函数std::intrinsics::atomic_cxchg_failrelaxed</target>
        </trans-unit>
        <trans-unit id="39f0c4bec736294fa36eea7dac60d5fa82a8a97d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_rel</source>
          <target state="translated">函数 std::intrinsics::atomic_cxchg_rel</target>
        </trans-unit>
        <trans-unit id="eaaab3b78d863b2e9f71342b771707d5b6ede81a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_relaxed</source>
          <target state="translated">函数 std::intrinsics::atomic_cxchg_relaxed 的作用。</target>
        </trans-unit>
        <trans-unit id="23a2de8b090010417f7343ed9f647e4c4638c9fe" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak</source>
          <target state="translated">函数 std::intrinsics::atomic_cxchgweak</target>
        </trans-unit>
        <trans-unit id="d32ebae9ccacf8b7aaf5dcdd672e08c3462188de" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_acq</source>
          <target state="translated">函数 std::intrinsics::atomic_cxchgweak_acq</target>
        </trans-unit>
        <trans-unit id="a0d6493411c30c055a9bbf2189993ff6cb18a401" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_acq_failrelaxed</source>
          <target state="translated">函数 std::intrinsics::atomic_cxchgweak_acq_failrelaxed 的作用。</target>
        </trans-unit>
        <trans-unit id="84d51cb5de7124a1441c5850c06600665e87afbf" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_acqrel</source>
          <target state="translated">函数 std::intrinsics::atomic_cxchgweak_acqrel</target>
        </trans-unit>
        <trans-unit id="be384c57178230ae73b1a71a2f45edbcd29561cb" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_acqrel_failrelaxed</source>
          <target state="translated">函数 std::intrinsics::atomic_cxchgweak_acqrel_failrelaxed 的作用。</target>
        </trans-unit>
        <trans-unit id="1cae0c31481303abd7d3122fbbb4550b4b0fe2ae" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_failacq</source>
          <target state="translated">函数 std::intrinsics::atomic_cxchgweak_failacq</target>
        </trans-unit>
        <trans-unit id="b2a3b45d3b55aecacb1cf5ad3f42130bd04b90ee" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_failrelaxed</source>
          <target state="translated">函数std::intrinsics::atomic_cxchgweak_failrelaxed。</target>
        </trans-unit>
        <trans-unit id="dbdc85ce325264420dee74eb369011abf2328c62" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_rel</source>
          <target state="translated">函数 std::intrinsics::atomic_cxchgweak_rel</target>
        </trans-unit>
        <trans-unit id="dfea14fc309810b18b76b8d8d9eea0624c669c56" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_relaxed</source>
          <target state="translated">函数 std::intrinsics::atomic_cxchgweak_relaxed</target>
        </trans-unit>
        <trans-unit id="93e77549e8c09b3d6a47e1aae1153a3c86f218d6" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_fence</source>
          <target state="translated">函数 std::intrinsics::atomic_fence</target>
        </trans-unit>
        <trans-unit id="9e80e29f5375e2b133e83fcec9042440ad13c3ab" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_fence_acq</source>
          <target state="translated">函数 std::intrinsics::atomic_fence_acq</target>
        </trans-unit>
        <trans-unit id="e276f5f0bdfe137b7fb724ce874c30180445d419" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_fence_acqrel</source>
          <target state="translated">函数 std::intrinsics::atomic_fence_acqrel</target>
        </trans-unit>
        <trans-unit id="5e0c13004af1995e4249efaadcf55bab23d8b1f0" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_fence_rel</source>
          <target state="translated">函数 std::intrinsics::atomic_fence_rel</target>
        </trans-unit>
        <trans-unit id="fa5f8c9ce76fefde99e7d3efd807ca1a43f8ab6c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_load</source>
          <target state="translated">函数 std::intrinsics::atomic_load</target>
        </trans-unit>
        <trans-unit id="12a79df9539f7af796dbd45e1c54ed05f27b0df6" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_load_acq</source>
          <target state="translated">函数 std::intrinsics::atomic_load_acq</target>
        </trans-unit>
        <trans-unit id="e773d44fb21e58e51b7c05a644c45d38cd9ed277" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_load_relaxed</source>
          <target state="translated">函数 std::intrinsics::atomic_load_relaxed。</target>
        </trans-unit>
        <trans-unit id="44d5fbea38425f45c85b674130abc87f20105c47" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_load_unordered</source>
          <target state="translated">函数 std::intrinsics::atomic_load_unordered</target>
        </trans-unit>
        <trans-unit id="76f39339c62e3cc8ba58c9228348d006ee9dc8cb" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_max</source>
          <target state="translated">函数 std::intrinsics::atomic_max</target>
        </trans-unit>
        <trans-unit id="adfa1e651df3ca8dba7602e63cea98a1124a3cd4" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_max_acq</source>
          <target state="translated">函数 std::intrinsics::atomic_max_acq</target>
        </trans-unit>
        <trans-unit id="a3b4665a7942063ce1a70d83d46c8633384f998d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_max_acqrel</source>
          <target state="translated">函数 std::intrinsics::atomic_max_acqrel</target>
        </trans-unit>
        <trans-unit id="ac0d6a9ff3e4081282044c1c5ed630f732b0b4ef" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_max_rel</source>
          <target state="translated">函数 std::intrinsics::atomic_max_rel</target>
        </trans-unit>
        <trans-unit id="68181ba12e9fcb9131b0368bcff2f202617a904e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_max_relaxed</source>
          <target state="translated">函数 std::intrinsics::atomic_max_relaxed</target>
        </trans-unit>
        <trans-unit id="03d60645d9fdf40f0cdeadc9c62a66beccce73b2" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_min</source>
          <target state="translated">函数 std::intrinsics::atomic_min</target>
        </trans-unit>
        <trans-unit id="f412529642bae09c91a2918ae76b0083cdd116a8" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_min_acq</source>
          <target state="translated">函数 std::intrinsics::atomic_min_acq</target>
        </trans-unit>
        <trans-unit id="4f0129fd24c052c26d2cff0213021ffaa5a26141" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_min_acqrel</source>
          <target state="translated">函数 std::intrinsics::atomic_min_acqrel</target>
        </trans-unit>
        <trans-unit id="accc88f6c6162721f5f1f08f16e77b97f84e8136" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_min_rel</source>
          <target state="translated">函数 std::intrinsics::atomic_min_rel</target>
        </trans-unit>
        <trans-unit id="1a894d7d0ff97fe3d1bff6f23c3876e0e8d5cf01" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_min_relaxed</source>
          <target state="translated">函数std::intrinsics::atomic_min_relaxed</target>
        </trans-unit>
        <trans-unit id="2d5cfe1e0da2c8b604a13fb0c4d5def3bcc0fe05" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_nand</source>
          <target state="translated">函数 std::intrinsics::atomic_nand</target>
        </trans-unit>
        <trans-unit id="20cb0e70c7eab21657d6b9196e100e7a7268e389" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_nand_acq</source>
          <target state="translated">函数 std::intrinsics::atomic_nand_acq</target>
        </trans-unit>
        <trans-unit id="d829c3f5e5c25cd5f078e02412ed8b497893e505" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_nand_acqrel</source>
          <target state="translated">函数 std::intrinsics::atomic_nand_acqrel</target>
        </trans-unit>
        <trans-unit id="51745bee93cb553dd515cd26d97a744e50b00f88" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_nand_rel</source>
          <target state="translated">函数 std::intrinsics::atomic_nand_rel</target>
        </trans-unit>
        <trans-unit id="8f2184a53d3faf2dfbc8096bda41da42742d4b11" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_nand_relaxed</source>
          <target state="translated">函数std::intrinsics::atomic_nand_relaxed。</target>
        </trans-unit>
        <trans-unit id="e15a1fa056a17ed12cc0ca7d799d64f4b13ff6b8" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_or</source>
          <target state="translated">函数 std::intrinsics::atomic_or</target>
        </trans-unit>
        <trans-unit id="b9d93151e4115df6ee3345d8dd3e7a0481a98842" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_or_acq</source>
          <target state="translated">函数std::intrinsics::atomic_or_acq</target>
        </trans-unit>
        <trans-unit id="aa3340aafd6e5592ddd2e22891c16b56b7d9e0a8" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_or_acqrel</source>
          <target state="translated">函数 std::intrinsics::atomic_or_acqrel</target>
        </trans-unit>
        <trans-unit id="c8119dff5e090cc7f4cf0747a6a6c6d4b63325b3" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_or_rel</source>
          <target state="translated">函数 std::intrinsics::atomic_or_rel</target>
        </trans-unit>
        <trans-unit id="dc81e065a9758719576edcdd6d60fa47c707097e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_or_relaxed</source>
          <target state="translated">函数 std::intrinsics::atomic_or_relaxed</target>
        </trans-unit>
        <trans-unit id="e81aaceb1658f487c55b38d935c756ae401295c3" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_singlethreadfence</source>
          <target state="translated">函数 std::intrinsics::atomic_singlethreadfence</target>
        </trans-unit>
        <trans-unit id="4402db0d845f0af53cd4059d26807a4df5d6498c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_singlethreadfence_acq</source>
          <target state="translated">函数 std::intrinsics::atomic_singlethreadfence_acq</target>
        </trans-unit>
        <trans-unit id="9ebbf7f70d332b8ce126f2b6c1afe34a6b19b914" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_singlethreadfence_acqrel</source>
          <target state="translated">函数 std::intrinsics::atomic_singlethreadfence_acqrel</target>
        </trans-unit>
        <trans-unit id="ffd7f5b2ce700d60a15d682ab64dd10cccc20ad4" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_singlethreadfence_rel</source>
          <target state="translated">函数 std::intrinsics::atomic_singlethreadfence_rel</target>
        </trans-unit>
        <trans-unit id="0c2a81d047c561e9cb87fb39f4b1b32eebbf8ca8" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_store</source>
          <target state="translated">函数 std::intrinsics::atomic_store</target>
        </trans-unit>
        <trans-unit id="2ee549969e877c7b27baf516286ad29d8db0c0dc" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_store_rel</source>
          <target state="translated">函数 std::intrinsics::atomic_store_rel</target>
        </trans-unit>
        <trans-unit id="590261a38bfb6fc19deeb0e18f6328d56154e62c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_store_relaxed</source>
          <target state="translated">函数 std::intrinsics::atomic_store_relaxed。</target>
        </trans-unit>
        <trans-unit id="709a5314326fee461b3fe825b79f13e4bbc51906" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_store_unordered</source>
          <target state="translated">函数 std::intrinsics::atomic_store_unordered</target>
        </trans-unit>
        <trans-unit id="2f05d15ea8839ab0a5f6a982beb914d4cd94497f" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umax</source>
          <target state="translated">函数 std::intrinsics::atomic_umax</target>
        </trans-unit>
        <trans-unit id="58caab0e44c28da818bfa8b21fb1e0a3854275db" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umax_acq</source>
          <target state="translated">函数 std::intrinsics::atomic_umax_acq</target>
        </trans-unit>
        <trans-unit id="485410d09deb7d4db9b4294336198ec95c5aac38" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umax_acqrel</source>
          <target state="translated">函数 std::intrinsics::atomic_umax_acqrel</target>
        </trans-unit>
        <trans-unit id="e7d030aa6897ab0c8e4b57031c7be08644c7d4a4" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umax_rel</source>
          <target state="translated">函数 std::intrinsics::atomic_umax_rel</target>
        </trans-unit>
        <trans-unit id="1c60325138a8d36005ec6ea575e5ea16dc74339b" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umax_relaxed</source>
          <target state="translated">函数 std::intrinsics::atomic_umax_relaxed。</target>
        </trans-unit>
        <trans-unit id="b5cd699b1fc54fbec84c2a134a8833717d98009a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umin</source>
          <target state="translated">函数 std::intrinsics::atomic_umin</target>
        </trans-unit>
        <trans-unit id="f66c3e7aa0946f69185ad6161b3e2b5d1c7c0360" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umin_acq</source>
          <target state="translated">函数 std::intrinsics::atomic_umin_acq</target>
        </trans-unit>
        <trans-unit id="6e3486c411158f0476ad8b3eb187ad36f8e05522" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umin_acqrel</source>
          <target state="translated">函数 std::intrinsics::atomic_umin_acqrel</target>
        </trans-unit>
        <trans-unit id="e8b768c6a791e83dfbc74046b1f169cc0824883d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umin_rel</source>
          <target state="translated">函数 std::intrinsics::atomic_umin_rel</target>
        </trans-unit>
        <trans-unit id="8152554e0ce02fe3689452d05678c8a75c70e6cb" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umin_relaxed</source>
          <target state="translated">函数 std::intrinsics::atomic_umin_relaxed 的作用。</target>
        </trans-unit>
        <trans-unit id="2c9460022df088a0a553484dcfacf73c4d2c6c49" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xadd</source>
          <target state="translated">函数 std::intrinsics::atomic_xadd</target>
        </trans-unit>
        <trans-unit id="bbfbb2d9fa5b20d2d0a52f974a74a8be7d1250a3" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xadd_acq</source>
          <target state="translated">函数 std::intrinsics::atomic_xadd_acq</target>
        </trans-unit>
        <trans-unit id="80a5c9fa25e8dacd29916af7a7876806c0c7b801" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xadd_acqrel</source>
          <target state="translated">函数 std::intrinsics::atomic_xadd_acqrel</target>
        </trans-unit>
        <trans-unit id="2681580a518ae1108079209ad3e87c09ac578238" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xadd_rel</source>
          <target state="translated">函数 std::intrinsics::atomic_xadd_rel</target>
        </trans-unit>
        <trans-unit id="a6632774d34b6d8bdf98921289f3bf98305b65c3" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xadd_relaxed</source>
          <target state="translated">函数 std::intrinsics::atomic_xadd_relaxed。</target>
        </trans-unit>
        <trans-unit id="680cf8b973773ce9f5cb5d5e143980ef48d38f83" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xchg</source>
          <target state="translated">函数 std::intrinsics::atomic_xchg</target>
        </trans-unit>
        <trans-unit id="06fa06a9a882944323a8537e5812f44de2b15574" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xchg_acq</source>
          <target state="translated">函数 std::intrinsics::atomic_xchg_acq</target>
        </trans-unit>
        <trans-unit id="514738ba82bccec7209c92dc3e542667c9f46aa0" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xchg_acqrel</source>
          <target state="translated">函数 std::intrinsics::atomic_xchg_acqrel</target>
        </trans-unit>
        <trans-unit id="e7e8b533420ea0deb98c9b6023dbdbf8c22178a5" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xchg_rel</source>
          <target state="translated">函数 std::intrinsics::atomic_xchg_rel</target>
        </trans-unit>
        <trans-unit id="b92febd7f8f2a2256f778fadeb825e82008c19e9" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xchg_relaxed</source>
          <target state="translated">函数 std::intrinsics::atomic_xchg_relaxed。</target>
        </trans-unit>
        <trans-unit id="2ea2937587ac1814222761b67af1039837c7653d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xor</source>
          <target state="translated">函数 std::intrinsics::atomic_xor</target>
        </trans-unit>
        <trans-unit id="707de9981acd22a67a9431dbb504cf4159395ac2" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xor_acq</source>
          <target state="translated">函数 std::intrinsics::atomic_xor_acq</target>
        </trans-unit>
        <trans-unit id="833e4418ab431a17a9d91675e43ac8138046eb6d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xor_acqrel</source>
          <target state="translated">函数 std::intrinsics::atomic_xor_acqrel</target>
        </trans-unit>
        <trans-unit id="35ec5057adba987f011914a33d5a6c2d44c7e8e4" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xor_rel</source>
          <target state="translated">函数 std::intrinsics::atomic_xor_rel</target>
        </trans-unit>
        <trans-unit id="b44cf1a28973fbd20f73163fe499efb58d6f607f" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xor_relaxed</source>
          <target state="translated">函数 std::intrinsics::atomic_xor_relaxed。</target>
        </trans-unit>
        <trans-unit id="3b36393cd0aa9496b4ae784a4407d76dc0812c10" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xsub</source>
          <target state="translated">函数 std::intrinsics::atomic_xsub</target>
        </trans-unit>
        <trans-unit id="0e05edf4266ca38cec129d7cbea17e2b5615af9c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xsub_acq</source>
          <target state="translated">函数 std::intrinsics::atomic_xsub_acq</target>
        </trans-unit>
        <trans-unit id="ec5065f3f0f50521d5a5dce38c88ff20b63d0fa5" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xsub_acqrel</source>
          <target state="translated">函数 std::intrinsics::atomic_xsub_acqrel</target>
        </trans-unit>
        <trans-unit id="8ef37695d8e866884c3d116d76da8d567f0eb2b0" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xsub_rel</source>
          <target state="translated">函数 std::intrinsics::atomic_xsub_rel</target>
        </trans-unit>
        <trans-unit id="9535a9ea988c35b98c9a100edb8dbbfcdb21cc0a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xsub_relaxed</source>
          <target state="translated">函数 std::intrinsics::atomic_xsub_relaxed。</target>
        </trans-unit>
        <trans-unit id="0260761aac2d147168334337babec7c746cf1e11" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::bitreverse</source>
          <target state="translated">函数 std::intrinsics::bitreverse</target>
        </trans-unit>
        <trans-unit id="349680778834fca16f9d706876d86fef2c5f6a4d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::breakpoint</source>
          <target state="translated">函数 std::intrinsics::breakpoint</target>
        </trans-unit>
        <trans-unit id="44a50e7b9e7f8cceb58990743bc9f61879dd5383" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::bswap</source>
          <target state="translated">函数 std::intrinsics::bswap</target>
        </trans-unit>
        <trans-unit id="ae109593fcee3317c44f07c366f8e95547100492" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::caller_location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a2bd170e3a75454c4f05d5bbcb8639c2aa54ff" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::ceilf32</source>
          <target state="translated">函数 std::intrinsics::ceilf32</target>
        </trans-unit>
        <trans-unit id="976747cd2c5e09a74b339fc0666d68d4cfde0c5e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::ceilf64</source>
          <target state="translated">函数 std::intrinsics::ceilf64</target>
        </trans-unit>
        <trans-unit id="faffd8585027515ddae4f1331689122329742d1c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::copy</source>
          <target state="translated">函数 std::intrinsics::copy</target>
        </trans-unit>
        <trans-unit id="7f8aef550653229ec93aa002745a05a7de864fc8" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::copy_nonoverlapping</source>
          <target state="translated">函数 std::intrinsics::copy_nonoverlapping</target>
        </trans-unit>
        <trans-unit id="b1913a2055a535ce3e7b5d8fcdb5564f85606921" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::copysignf32</source>
          <target state="translated">函数 std::intrinsics::copysignf32</target>
        </trans-unit>
        <trans-unit id="137086a9e3acf79d7f58e815b9cf53cf5c487284" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::copysignf64</source>
          <target state="translated">函数 std::intrinsics::copysignf64</target>
        </trans-unit>
        <trans-unit id="ba20d643ea9b3e1f178eae70ce17f616603801ed" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::cosf32</source>
          <target state="translated">函数 std::intrinsics::cosf32</target>
        </trans-unit>
        <trans-unit id="7844690936abbf209a7dc3fedfccc3bbd90ec9cc" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::cosf64</source>
          <target state="translated">函数 std::intrinsics::cosf64</target>
        </trans-unit>
        <trans-unit id="545d20596e2a8383e286ad517cc0ec75c2f9ab02" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::ctlz</source>
          <target state="translated">函数 std::intrinsics::ctlz</target>
        </trans-unit>
        <trans-unit id="586da9633fdd054b9e8a48419276b9ebfe15778d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::ctlz_nonzero</source>
          <target state="translated">函数 std::intrinsics::ctlz_nonzero</target>
        </trans-unit>
        <trans-unit id="78aa0af231e9d9cdb012b5f501d915f806f6f319" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::ctpop</source>
          <target state="translated">函数 std::intrinsics::ctpop</target>
        </trans-unit>
        <trans-unit id="8e1aff64d8386fcb240654511fcd6b1efe27e021" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::cttz</source>
          <target state="translated">函数 std::intrinsics::cttz</target>
        </trans-unit>
        <trans-unit id="8203326fe691f7f3a7d6ceb9fbe41c6aa246d5ad" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::cttz_nonzero</source>
          <target state="translated">函数std::intrinsics::cttz_nonzero</target>
        </trans-unit>
        <trans-unit id="3cafd9582dca45d45f6436f5c5cc310e40a2e757" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::discriminant_value</source>
          <target state="translated">函数 std::intrinsics::discriminant_value</target>
        </trans-unit>
        <trans-unit id="310254651639c9db365ac028773fcd16703837c0" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::drop_in_place</source>
          <target state="translated">函数 std::intrinsics::drop_in_place</target>
        </trans-unit>
        <trans-unit id="6504fb6abec53cb5ae5ba0d14dc3bbdc1460d019" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::exact_div</source>
          <target state="translated">函数 std::intrinsics::exact_div</target>
        </trans-unit>
        <trans-unit id="82932dd085b91a4d031ba681d9948195cde3cd38" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::exp2f32</source>
          <target state="translated">函数 std::intrinsics::exp2f32</target>
        </trans-unit>
        <trans-unit id="e028afe12378e9a7dec9c17ebc90e34a8dc9600f" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::exp2f64</source>
          <target state="translated">函数 std::intrinsics::exp2f64</target>
        </trans-unit>
        <trans-unit id="18af580843073152f816810c9976eb7720febbca" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::expf32</source>
          <target state="translated">函数 std::intrinsics::expf32</target>
        </trans-unit>
        <trans-unit id="a487e6b4e2e45873fc4f641e5c506c952d1524af" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::expf64</source>
          <target state="translated">函数 std::intrinsics::expf64</target>
        </trans-unit>
        <trans-unit id="a8adaa7a58d666f4fbdf1e5525dfd0c198e51252" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fabsf32</source>
          <target state="translated">函数 std::intrinsics::fabsf32</target>
        </trans-unit>
        <trans-unit id="7629eebcb33c16f80571048ef86b1dfdd1a0f885" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fabsf64</source>
          <target state="translated">函数 std::intrinsics::fabsf64</target>
        </trans-unit>
        <trans-unit id="69b4f3a5e06eb557862c2a57da3d1fc73419e30a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fadd_fast</source>
          <target state="translated">函数 std::intrinsics::fadd_fast</target>
        </trans-unit>
        <trans-unit id="c7a18d7f11ba26cb1ed1051c2e9c904a9165cd84" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fdiv_fast</source>
          <target state="translated">函数 std::intrinsics::fdiv_fast</target>
        </trans-unit>
        <trans-unit id="728738500bc610f4175ce66f13bc4fc3cdc7d6d4" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::float_to_int_unchecked</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53805e4a6d094a1ed0fc8ae314253cf3d18e4925" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::floorf32</source>
          <target state="translated">函数 std::intrinsics::floorf32</target>
        </trans-unit>
        <trans-unit id="5087cca6667fde2e528e02304268dd29727f68d5" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::floorf64</source>
          <target state="translated">函数 std::intrinsics::floorf64</target>
        </trans-unit>
        <trans-unit id="6d9e80778a8a8bb7b076af29d264cc6ac4d31464" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fmaf32</source>
          <target state="translated">函数 std::intrinsics::fmaf32</target>
        </trans-unit>
        <trans-unit id="69ccf507111b23d6b5f24105fccac6844e451347" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fmaf64</source>
          <target state="translated">函数 std::intrinsics::fmaf64</target>
        </trans-unit>
        <trans-unit id="2349408da65549dbec5bb73465311981246bbf97" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fmul_fast</source>
          <target state="translated">函数 std::intrinsics::fmul_fast</target>
        </trans-unit>
        <trans-unit id="cceed86fa20f56a919cf803345dd9b828df9674a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::forget</source>
          <target state="translated">函数 std::intrinsics::getting</target>
        </trans-unit>
        <trans-unit id="86f07f2b4a1330c776c20237c7c64e5350fe7a5e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::frem_fast</source>
          <target state="translated">函数 std::intrinsics::frem_fast</target>
        </trans-unit>
        <trans-unit id="231639afbfa8bf549bf19aa8a5784f9d60021d98" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fsub_fast</source>
          <target state="translated">函数 std::intrinsics::fsub_fast</target>
        </trans-unit>
        <trans-unit id="ed9c4a8ed619340f92e2a9df5452869c312b0de1" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::init</source>
          <target state="translated">函数std::intrinsics::init</target>
        </trans-unit>
        <trans-unit id="7c1b33d44ee817a1195ff1ae434f17a8c881520d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::likely</source>
          <target state="translated">函数 std::intrinsics::likely</target>
        </trans-unit>
        <trans-unit id="9c1a2ccf1bde488fbc644dc3f8f44d65849caac1" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::log10f32</source>
          <target state="translated">函数 std::intrinsics::log10f32</target>
        </trans-unit>
        <trans-unit id="20d4bfb5aa64df87eaa6900cf1beefc654cf4a7a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::log10f64</source>
          <target state="translated">函数 std::intrinsics::log10f64。</target>
        </trans-unit>
        <trans-unit id="c6b24066c8aa075221162eedd883f8b99c6e7962" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::log2f32</source>
          <target state="translated">函数 std::intrinsics::log2f32</target>
        </trans-unit>
        <trans-unit id="9727143de27fc62370d2a1b5926f675d501a3b4d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::log2f64</source>
          <target state="translated">函数 std::intrinsics::log2f64</target>
        </trans-unit>
        <trans-unit id="8932c55ef33afa4acde60b583c83ca8dc7bb2b5d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::logf32</source>
          <target state="translated">函数 std::intrinsics::logf32</target>
        </trans-unit>
        <trans-unit id="7f22cdc0fa2dacd7415fc7e9d0a094184c3cb950" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::logf64</source>
          <target state="translated">函数 std::intrinsics::logf64</target>
        </trans-unit>
        <trans-unit id="5d69b377a76975ef03024043cab2db73bb7cfd6e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::maxnumf32</source>
          <target state="translated">函数 std::intrinsics::maxnumf32。</target>
        </trans-unit>
        <trans-unit id="a61de5d98ba89ecd434c9fa3a3ec1e6ad271b371" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::maxnumf64</source>
          <target state="translated">函数 std::intrinsics::maxnumf64</target>
        </trans-unit>
        <trans-unit id="88db98a255bac3fca6c1a7aded0061f0c5ffb992" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::min_align_of</source>
          <target state="translated">函数 std::intrinsics::min_align_of</target>
        </trans-unit>
        <trans-unit id="247c74b0f39ff5d9c9103b8959e5632c25d36333" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::min_align_of_val</source>
          <target state="translated">函数 std::intrinsics::min_align_of_val。</target>
        </trans-unit>
        <trans-unit id="4e255574eb58b5b232e8ca21b4231687388852a6" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::minnumf32</source>
          <target state="translated">函数 std::intrinsics::minnumf32。</target>
        </trans-unit>
        <trans-unit id="4cb1c4535cd483762169b7280f6b0d67d38dc715" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::minnumf64</source>
          <target state="translated">函数 std::intrinsics::minnumf64</target>
        </trans-unit>
        <trans-unit id="64b7dd1362cd90b88d2e4cf4ba5b57fb272d0e86" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::move_val_init</source>
          <target state="translated">函数 std::intrinsics::move_val_init</target>
        </trans-unit>
        <trans-unit id="ba6b9dc8d20816d73a44eae1ff702793043a6c6b" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::mul_with_overflow</source>
          <target state="translated">函数 std::intrinsics::mul_with_overflow</target>
        </trans-unit>
        <trans-unit id="cc363bbfcaf0ddc1c5ccc5d4bf6c45a506adf48e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::nearbyintf32</source>
          <target state="translated">函数 std::intrinsics::nearlyintf32。</target>
        </trans-unit>
        <trans-unit id="0e1ee55cf307484318085364bbe8e054ff2d4b2c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::nearbyintf64</source>
          <target state="translated">函数 std::intrinsics::nearlyintf64</target>
        </trans-unit>
        <trans-unit id="d28a1a5c27c1207609e01cd087a0b7734625a4b6" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::needs_drop</source>
          <target state="translated">函数 std::intrinsics::needs_drop</target>
        </trans-unit>
        <trans-unit id="cb650b3e42edf7fc293ce90a39e6cb676d382183" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::nontemporal_store</source>
          <target state="translated">函数 std::intrinsics::nontemporal_store</target>
        </trans-unit>
        <trans-unit id="fafa1c6d37c3693abf8f4f9d868d6f55012eb92f" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::offset</source>
          <target state="translated">函数 std::intrinsics::offset</target>
        </trans-unit>
        <trans-unit id="5a22426f8e762b657e9fc40aeb64ce5e6c72d064" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::overflowing_add</source>
          <target state="translated">函数 std::intrinsics::overflowing_add</target>
        </trans-unit>
        <trans-unit id="4df7d5cfb3e78f525f98823f4fdfc3f1b6a232d3" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::overflowing_mul</source>
          <target state="translated">函数 std::intrinsics::overflowing_mul</target>
        </trans-unit>
        <trans-unit id="cfd20a808c9a3a59059a78ac374417c18c147162" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::overflowing_sub</source>
          <target state="translated">函数 std::intrinsics::overflowing_sub</target>
        </trans-unit>
        <trans-unit id="8aab4244d4cb857730352617a712962fe12596d7" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::panic_if_uninhabited</source>
          <target state="translated">函数 std::intrinsics::panic_if_uninhabited</target>
        </trans-unit>
        <trans-unit id="c0aa024e255736ab35130f77373eafc270b53271" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::powf32</source>
          <target state="translated">函数 std::intrinsics::powf32</target>
        </trans-unit>
        <trans-unit id="01ed7bdb862e4b6b2be4dd8a79730895bdce1811" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::powf64</source>
          <target state="translated">函数 std::intrinsics::powf64</target>
        </trans-unit>
        <trans-unit id="687108b30d40e0e24c3c047502aa9ccd4b054f8d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::powif32</source>
          <target state="translated">函数 std::intrinsics::powif32</target>
        </trans-unit>
        <trans-unit id="1ac5843df07be2dac60ad62b042b4211533da2e6" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::powif64</source>
          <target state="translated">函数 std::intrinsics::powif64</target>
        </trans-unit>
        <trans-unit id="0a6e8570156d01a735127c81e305ad49d4e17077" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::pref_align_of</source>
          <target state="translated">函数 std::intrinsics::pref_align_of</target>
        </trans-unit>
        <trans-unit id="12a6591a462d811e6218d01e0da3c4ce046e4577" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::prefetch_read_data</source>
          <target state="translated">函数 std::intrinsics::prefetch_read_data</target>
        </trans-unit>
        <trans-unit id="b612cc839b74b18def501a5c39142a31d05c3251" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::prefetch_read_instruction</source>
          <target state="translated">函数 std::intrinsics::prefetch_read_instruction</target>
        </trans-unit>
        <trans-unit id="7cc4fef16b4e3346cf3e97a3bcfa63f4965a73fb" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::prefetch_write_data</source>
          <target state="translated">函数 std::intrinsics::prefetch_write_data</target>
        </trans-unit>
        <trans-unit id="98446d47acd3b1adcc37c4e4edac6c4d5d410bc1" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::prefetch_write_instruction</source>
          <target state="translated">函数 std::intrinsics::prefetch_write_instruction</target>
        </trans-unit>
        <trans-unit id="b78b0dde74d565e691e47d568598c8a5f9e96e8d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::ptr_guaranteed_eq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7cfb34571d6cf78d023ca56021226516b0af6e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::ptr_guaranteed_ne</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ccd968a4d5bc256abbd4d44ad47fe68c6ab584" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::ptr_offset_from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3635ca7a4ece00d22e8745333a108e09321070e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::rintf32</source>
          <target state="translated">函数 std::intrinsics::rintf32</target>
        </trans-unit>
        <trans-unit id="b52123f2feab6d81200c8b6c82009aa05af9d5e8" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::rintf64</source>
          <target state="translated">函数 std::intrinsics::rintf64</target>
        </trans-unit>
        <trans-unit id="5d25a2d6ed8eb295f10db9229d10b9b801b62aac" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::rotate_left</source>
          <target state="translated">函数 std::intrinsics::rotate_left</target>
        </trans-unit>
        <trans-unit id="6f64a0f1e08ebc04835dfcafc082dfa995ecca65" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::rotate_right</source>
          <target state="translated">函数 std::intrinsics::rotate_right</target>
        </trans-unit>
        <trans-unit id="01761bc7b91f5d00e064051e941086db75bc64eb" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::roundf32</source>
          <target state="translated">函数 std::intrinsics::roundf32</target>
        </trans-unit>
        <trans-unit id="e3f3c017ce47d7b4613d489a7dfa5c51d99c122a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::roundf64</source>
          <target state="translated">函数 std::intrinsics::roundf64</target>
        </trans-unit>
        <trans-unit id="56592ea3364203da6002bb091c8b5ada90dd06be" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::rustc_peek</source>
          <target state="translated">函数 std::intrinsics::rustc_peek</target>
        </trans-unit>
        <trans-unit id="4b62ddf100ee5e23c3b1e9f82f34aa6e7bbce1af" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::saturating_add</source>
          <target state="translated">函数 std::intrinsics::saturating_add</target>
        </trans-unit>
        <trans-unit id="c47d89e89860bbcd6e10cd71fc55d76f9c148c16" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::saturating_sub</source>
          <target state="translated">函数 std::intrinsics::saturating_sub</target>
        </trans-unit>
        <trans-unit id="a2f910e6e38dfbab9f3fe62488dc49c833f38693" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::sinf32</source>
          <target state="translated">函数 std::intrinsics::sinf32</target>
        </trans-unit>
        <trans-unit id="5b619a447d74b5fd6738770896593b7fe76db6ca" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::sinf64</source>
          <target state="translated">函数 std::intrinsics::sinf64</target>
        </trans-unit>
        <trans-unit id="602d9a20834ba884f5b93e6b43af744d53b52e84" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::size_of</source>
          <target state="translated">函数 std::intrinsics::size_of</target>
        </trans-unit>
        <trans-unit id="d932ae577dbc34467190ebf5837932cf7fbb0e16" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::size_of_val</source>
          <target state="translated">函数 std::intrinsics::size_of_val</target>
        </trans-unit>
        <trans-unit id="d08e2158f5b8cfa3eab183618a77ec54b076b30a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::sqrtf32</source>
          <target state="translated">函数 std::intrinsics::sqrtf32</target>
        </trans-unit>
        <trans-unit id="8dbb591c1397f0ba91c7f236b0a614975c326f6a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::sqrtf64</source>
          <target state="translated">函数 std::intrinsics::sqrtf64</target>
        </trans-unit>
        <trans-unit id="740c5394484a39f579e83b184235503d95960198" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::sub_with_overflow</source>
          <target state="translated">函数 std::intrinsics::sub_with_overflow</target>
        </trans-unit>
        <trans-unit id="393e4373d62b400801116f27af3199376f6e2ca1" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::transmute</source>
          <target state="translated">函数 std::intrinsics::transmute</target>
        </trans-unit>
        <trans-unit id="1226c6bc2b3fcfeb6f782c3e8390b9416f380d57" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::truncf32</source>
          <target state="translated">函数 std::intrinsics::truncf32</target>
        </trans-unit>
        <trans-unit id="edb587d16baed0c03c665836869638e3d11d6f56" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::truncf64</source>
          <target state="translated">函数 std::intrinsics::truncf64</target>
        </trans-unit>
        <trans-unit id="a57d356a02b0ff34ec68a387e9131952f056f9aa" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::try</source>
          <target state="translated">函数 std::intrinsics::try</target>
        </trans-unit>
        <trans-unit id="048a5087acf80c0faff9b518dcc85010ea41ae06" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::type_id</source>
          <target state="translated">函数 std::intrinsics::type_id</target>
        </trans-unit>
        <trans-unit id="e75acaff03c74f3f8ac169c744a94d8a2861e33a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::type_name</source>
          <target state="translated">函数 std::intrinsics::type_name</target>
        </trans-unit>
        <trans-unit id="187c861d5662a2fda8a4bf5846d843bd0201c65a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unaligned_volatile_load</source>
          <target state="translated">函数 std::intrinsics::unaligned_volatile_load。</target>
        </trans-unit>
        <trans-unit id="e8eb96d3a4cd10e2625c8223b4805c89ed68cf61" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unaligned_volatile_store</source>
          <target state="translated">函数 std::intrinsics::unaligned_volatile_store</target>
        </trans-unit>
        <trans-unit id="93c26151cb053ed2646156176f682b5a446e90f0" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unchecked_add</source>
          <target state="translated">函数 std::intrinsics::unchecked_add</target>
        </trans-unit>
        <trans-unit id="4e47211d92e063ddfd83890496af3139cde8fc16" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unchecked_div</source>
          <target state="translated">函数 std::intrinsics::unchecked_div</target>
        </trans-unit>
        <trans-unit id="ad08da36331e84c72eea9029948dfa845c72a90e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unchecked_mul</source>
          <target state="translated">函数 std::intrinsics::unchecked_mul</target>
        </trans-unit>
        <trans-unit id="b2134ce439c68a3e1c68abdd0075fe3ce7125860" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unchecked_rem</source>
          <target state="translated">函数 std::intrinsics::unchecked_rem</target>
        </trans-unit>
        <trans-unit id="4c92ba0932c92f93ec0a719533727714b58b0697" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unchecked_shl</source>
          <target state="translated">函数 std::intrinsics::unchecked_shl</target>
        </trans-unit>
        <trans-unit id="ba6d2658ad2136cb3776c0d405847fb2996a7b26" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unchecked_shr</source>
          <target state="translated">函数std::intrinsics::unchecked_shr</target>
        </trans-unit>
        <trans-unit id="3d1d1be087221db7a4bfc8d7ed23b90aa230d61e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unchecked_sub</source>
          <target state="translated">函数 std::intrinsics::unchecked_sub</target>
        </trans-unit>
        <trans-unit id="5a775a1f84e4e5935e7a1fa50f24f474b2f2ece9" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::uninit</source>
          <target state="translated">函数 std::intrinsics::uninit</target>
        </trans-unit>
        <trans-unit id="ac3412d8fdd72040d3536bb26f45818e160ddc4a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unlikely</source>
          <target state="translated">函数 std::intrinsics::unlikely</target>
        </trans-unit>
        <trans-unit id="bedb934a4c63e4e31201c35f9bd36ac2036acf4c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unreachable</source>
          <target state="translated">函数 std::intrinsics::unreachable</target>
        </trans-unit>
        <trans-unit id="13131be8bd373e055dd1cdba09cc15d8b667e96c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::variant_count</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345df5921d118e19bbbe36d890c957478b05ad24" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::volatile_copy_memory</source>
          <target state="translated">函数 std::intrinsics::volatile_copy_memory</target>
        </trans-unit>
        <trans-unit id="d15cadb9febd1bff809e35db3daeb66b7188a917" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::volatile_copy_nonoverlapping_memory</source>
          <target state="translated">函数 std::intrinsics::volatile_copy_nonoverlapping_memory</target>
        </trans-unit>
        <trans-unit id="07c6d83d44a425af2f32ab2dd74d20f7a63f96d4" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::volatile_load</source>
          <target state="translated">函数 std::intrinsics::volatile_load</target>
        </trans-unit>
        <trans-unit id="c9412efc461309c92b831fdd57c484471b4f3eea" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::volatile_set_memory</source>
          <target state="translated">函数 std::intrinsics::volatile_set_memory</target>
        </trans-unit>
        <trans-unit id="1eb394e96696e1469e03dd3a669f002772e46b9a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::volatile_store</source>
          <target state="translated">函数 std::intrinsics::volatile_store</target>
        </trans-unit>
        <trans-unit id="bb6344dfce8c3f3f3acf3313bad2be221b6611e8" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::wrapping_add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22514a7749b9bbbaf53c9706225dfc3714b3d78b" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::wrapping_mul</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb76adfcef09944b7694dbf0862b1566ce5b4820" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::wrapping_sub</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb898dc02fd331bafb306f521470ae8500576f2" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::write_bytes</source>
          <target state="translated">函数 std::intrinsics::write_bytes</target>
        </trans-unit>
        <trans-unit id="1462d4d75a2c1721ae019391a3145504468f86be" translate="yes" xml:space="preserve">
          <source>Function std::io::copy</source>
          <target state="translated">函数 std::io::copy</target>
        </trans-unit>
        <trans-unit id="9d322972ffb0afbe003983c33a48b9602bb2f27f" translate="yes" xml:space="preserve">
          <source>Function std::io::empty</source>
          <target state="translated">函数 std::io::empty</target>
        </trans-unit>
        <trans-unit id="0e44261c77f2a9a37128f44301117effed40f1c3" translate="yes" xml:space="preserve">
          <source>Function std::io::repeat</source>
          <target state="translated">函数 std::io::repeat</target>
        </trans-unit>
        <trans-unit id="c29e5e3e5ed19f15f59bfadf33f1b68ff0bcec24" translate="yes" xml:space="preserve">
          <source>Function std::io::sink</source>
          <target state="translated">函数 std::io::sink</target>
        </trans-unit>
        <trans-unit id="f05871015518914000f1553345c9cdc1aacee082" translate="yes" xml:space="preserve">
          <source>Function std::io::stderr</source>
          <target state="translated">函数 std::io::stderr</target>
        </trans-unit>
        <trans-unit id="9f387e200f166807748357421615ad6cd24836ef" translate="yes" xml:space="preserve">
          <source>Function std::io::stdin</source>
          <target state="translated">函数 std::io::stdin</target>
        </trans-unit>
        <trans-unit id="08deee2644283017a2d65fbd802faf47f51890da" translate="yes" xml:space="preserve">
          <source>Function std::io::stdout</source>
          <target state="translated">函数 std::io::stdout</target>
        </trans-unit>
        <trans-unit id="3db86c4bbed75ef0f573f856b5cce7f9cf2ceefb" translate="yes" xml:space="preserve">
          <source>Function std::iter::empty</source>
          <target state="translated">函数 std::iter::empty</target>
        </trans-unit>
        <trans-unit id="66b49fad94d10ec92ebc41d1cee4b7f8d9b3b8fd" translate="yes" xml:space="preserve">
          <source>Function std::iter::from_fn</source>
          <target state="translated">函数 std::iter::from_fn</target>
        </trans-unit>
        <trans-unit id="dff51980c0868fb23253f76a41dc563a29201f61" translate="yes" xml:space="preserve">
          <source>Function std::iter::once</source>
          <target state="translated">函数 std::iter::once</target>
        </trans-unit>
        <trans-unit id="3d48207de32201be75ffe9021e62b76b7d2e78dd" translate="yes" xml:space="preserve">
          <source>Function std::iter::once_with</source>
          <target state="translated">函数 std::iter::once_with</target>
        </trans-unit>
        <trans-unit id="a2b35eb94e24a9505503301e6633d676822bef0c" translate="yes" xml:space="preserve">
          <source>Function std::iter::repeat</source>
          <target state="translated">函数 std::iter::repeak</target>
        </trans-unit>
        <trans-unit id="87a88047b36d48b765b5020959d507cb5f244ac7" translate="yes" xml:space="preserve">
          <source>Function std::iter::repeat_with</source>
          <target state="translated">函数 std::iter::repeat_with</target>
        </trans-unit>
        <trans-unit id="5ef587525044407aa0b4094d8f081edd2daddc8e" translate="yes" xml:space="preserve">
          <source>Function std::iter::successors</source>
          <target state="translated">函数 std::iter::successors</target>
        </trans-unit>
        <trans-unit id="e69ba0a2b2f3ad4e91cf8a195f315895ae885650" translate="yes" xml:space="preserve">
          <source>Function std::mem::align_of</source>
          <target state="translated">函数 std::mem::align_of</target>
        </trans-unit>
        <trans-unit id="f925a0568c240c6dd15386b07765248dacabf3db" translate="yes" xml:space="preserve">
          <source>Function std::mem::align_of_val</source>
          <target state="translated">函数 std::mem::align_of_val</target>
        </trans-unit>
        <trans-unit id="7b7c4699b803f66c38cc6d513902404f9aca8258" translate="yes" xml:space="preserve">
          <source>Function std::mem::align_of_val_raw</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e95f4da151ab2a40c7e9698a17adc132df0f46" translate="yes" xml:space="preserve">
          <source>Function std::mem::discriminant</source>
          <target state="translated">函数 std::mem::discriminant</target>
        </trans-unit>
        <trans-unit id="6475a81fa7667dcc4953d17a2ae5fd2196a16c35" translate="yes" xml:space="preserve">
          <source>Function std::mem::drop</source>
          <target state="translated">函数 std::mem::drop</target>
        </trans-unit>
        <trans-unit id="34977281a088ed668126c16ffced4c672d9ee045" translate="yes" xml:space="preserve">
          <source>Function std::mem::forget</source>
          <target state="translated">函数 std::mem::forget</target>
        </trans-unit>
        <trans-unit id="93c2b9571818c664355ea5a0dcd917eacf555574" translate="yes" xml:space="preserve">
          <source>Function std::mem::forget_unsized</source>
          <target state="translated">函数 std::mem::getting_unsized</target>
        </trans-unit>
        <trans-unit id="6ddede8e9373838661e83d5e49c5870ddfc635d4" translate="yes" xml:space="preserve">
          <source>Function std::mem::min_align_of</source>
          <target state="translated">函数 std::mem::min_align_of</target>
        </trans-unit>
        <trans-unit id="22810ad4b80752b76f6272e78e7f24408c71745f" translate="yes" xml:space="preserve">
          <source>Function std::mem::min_align_of_val</source>
          <target state="translated">函数 std::mem::min_align_of_val。</target>
        </trans-unit>
        <trans-unit id="e1b2757db0555bef1a5af563113bea383ea658f1" translate="yes" xml:space="preserve">
          <source>Function std::mem::needs_drop</source>
          <target state="translated">函数 std::mem::needs_drop</target>
        </trans-unit>
        <trans-unit id="1d250c3f7215728aec0a7bfa6379b0d693c87c55" translate="yes" xml:space="preserve">
          <source>Function std::mem::replace</source>
          <target state="translated">函数 std::mem::replace</target>
        </trans-unit>
        <trans-unit id="273ddf6ee92bb4e40157a902d61bcf24a9c611ad" translate="yes" xml:space="preserve">
          <source>Function std::mem::size_of</source>
          <target state="translated">函数 std::mem::size_of</target>
        </trans-unit>
        <trans-unit id="f9365fb71c6db7ab8823f257068c1fa0c61895c4" translate="yes" xml:space="preserve">
          <source>Function std::mem::size_of_val</source>
          <target state="translated">函数 std::mem::size_of_val。</target>
        </trans-unit>
        <trans-unit id="15eebd1032b9272993d22267fe558eea496dce70" translate="yes" xml:space="preserve">
          <source>Function std::mem::size_of_val_raw</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf15dfcadccab356db41c543e7d2dd0719bc54b" translate="yes" xml:space="preserve">
          <source>Function std::mem::swap</source>
          <target state="translated">函数 std::mem::swap</target>
        </trans-unit>
        <trans-unit id="a9a358b3691976e722e4f46966a0191a117318e2" translate="yes" xml:space="preserve">
          <source>Function std::mem::take</source>
          <target state="translated">函数 std::mem::take</target>
        </trans-unit>
        <trans-unit id="8000c51bce3358a180dec44b363d021f765dee13" translate="yes" xml:space="preserve">
          <source>Function std::mem::transmute</source>
          <target state="translated">函数 std::mem::transmute</target>
        </trans-unit>
        <trans-unit id="a34058ce750ce0e9d7fea1e2756db0e58fabdb12" translate="yes" xml:space="preserve">
          <source>Function std::mem::transmute_copy</source>
          <target state="translated">函数 std::mem::transmute_copy</target>
        </trans-unit>
        <trans-unit id="e2168cf325d9fdb4bb40acb9002e87cae0a35230" translate="yes" xml:space="preserve">
          <source>Function std::mem::uninitialized</source>
          <target state="translated">函数 std::mem::uninitialized</target>
        </trans-unit>
        <trans-unit id="15b394955bbf59e3eb4f917be40b00478ba00bad" translate="yes" xml:space="preserve">
          <source>Function std::mem::variant_count</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6aee94a962f29ccad67cacb5695c37eb2e57120" translate="yes" xml:space="preserve">
          <source>Function std::mem::zeroed</source>
          <target state="translated">函数 std::mem::zeroed</target>
        </trans-unit>
        <trans-unit id="9fbabcc1415c98e197c63a5df4d5f8ec75a6fd2b" translate="yes" xml:space="preserve">
          <source>Function std::os::unix::fs::symlink</source>
          <target state="translated">函数 std::os::unix::fs::symlink</target>
        </trans-unit>
        <trans-unit id="0cb9d4491f67786e23110780ee139d285c647816" translate="yes" xml:space="preserve">
          <source>Function std::os::unix::process::parent_id</source>
          <target state="translated">函数 std::os::unix::process::parent_id</target>
        </trans-unit>
        <trans-unit id="4beb8a255740f5d07c6a59d5ae0917e17fc96853" translate="yes" xml:space="preserve">
          <source>Function std::os::unix::ucred::impl_linux::peer_cred</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221a56598ab4f515f7d1f48325b921251a1a8097" translate="yes" xml:space="preserve">
          <source>Function std::os::unix::ucred::peer_cred</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955a8b38ef9ca7cc74dba342165900b733f89c71" translate="yes" xml:space="preserve">
          <source>Function std::os::windows::fs::symlink_dir</source>
          <target state="translated">函数 std::os::windows::fs::symlink_dir</target>
        </trans-unit>
        <trans-unit id="7030c8af6886acb93aefd94038042b18937920ce" translate="yes" xml:space="preserve">
          <source>Function std::os::windows::fs::symlink_file</source>
          <target state="translated">函数 std::os::windows::fs::symlink_file</target>
        </trans-unit>
        <trans-unit id="8561ba72a9691a11d16234536f898f0406c41e4b" translate="yes" xml:space="preserve">
          <source>Function std::panic::catch_unwind</source>
          <target state="translated">函数 std::panic::catch_unwind</target>
        </trans-unit>
        <trans-unit id="7db95b5853cd8e6470615625e376f10fb77b365a" translate="yes" xml:space="preserve">
          <source>Function std::panic::panic_any</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b54652683b0f081f3c450fac3c724be97e0e07" translate="yes" xml:space="preserve">
          <source>Function std::panic::resume_unwind</source>
          <target state="translated">函数 std::panic::resume_unwind</target>
        </trans-unit>
        <trans-unit id="39271975d3373b9cea19608740e1ec82ed2ae6b7" translate="yes" xml:space="preserve">
          <source>Function std::panic::set_hook</source>
          <target state="translated">函数 std::panic::set_hook</target>
        </trans-unit>
        <trans-unit id="bbe33939a3aefba77a1076ac9c7e64784a3a15b1" translate="yes" xml:space="preserve">
          <source>Function std::panic::take_hook</source>
          <target state="translated">函数 std::panic::take_hook</target>
        </trans-unit>
        <trans-unit id="25a8c22b45e0de0551522051b0461b2b6ab3b0ee" translate="yes" xml:space="preserve">
          <source>Function std::path::is_separator</source>
          <target state="translated">函数 std::path::is_separator</target>
        </trans-unit>
        <trans-unit id="f5cf3f4b834aa36120f315ecc6215ba2718045a8" translate="yes" xml:space="preserve">
          <source>Function std::process::abort</source>
          <target state="translated">函数 std::process::abort</target>
        </trans-unit>
        <trans-unit id="91cb6a8fd57a0224ea3dfbfbdf9c471db4732292" translate="yes" xml:space="preserve">
          <source>Function std::process::exit</source>
          <target state="translated">函数 std::process::exit</target>
        </trans-unit>
        <trans-unit id="64d60f6bf21bdc40c4034158a74b2e2029d72d52" translate="yes" xml:space="preserve">
          <source>Function std::process::id</source>
          <target state="translated">函数 std::process::id</target>
        </trans-unit>
        <trans-unit id="fde6de7146b98e72342b68e2f087fb2c0df102c7" translate="yes" xml:space="preserve">
          <source>Function std::ptr::copy</source>
          <target state="translated">函数 std::ptr::copy</target>
        </trans-unit>
        <trans-unit id="a761215fdab6c66c0e836d73083b80b5919290f7" translate="yes" xml:space="preserve">
          <source>Function std::ptr::copy_nonoverlapping</source>
          <target state="translated">函数 std::ptr::copy_nonoverlapping</target>
        </trans-unit>
        <trans-unit id="e5cd973501b571a40a9d66363842f4e1f61d69db" translate="yes" xml:space="preserve">
          <source>Function std::ptr::drop_in_place</source>
          <target state="translated">函数 std::ptr::drop_in_place</target>
        </trans-unit>
        <trans-unit id="7d8139ca630c43a21993cd3cc28785c5944a7309" translate="yes" xml:space="preserve">
          <source>Function std::ptr::eq</source>
          <target state="translated">函数 std::ptr::eq</target>
        </trans-unit>
        <trans-unit id="9f66565ab45d94ff05fc6926dcfe0bbd68272b62" translate="yes" xml:space="preserve">
          <source>Function std::ptr::hash</source>
          <target state="translated">函数 std::ptr::hash</target>
        </trans-unit>
        <trans-unit id="a03cdb32dfba992c5ba308341a9ecf47921cafcd" translate="yes" xml:space="preserve">
          <source>Function std::ptr::null</source>
          <target state="translated">函数 std::ptr::null</target>
        </trans-unit>
        <trans-unit id="4c7d5ac57a6bf5a7b544b85794d87b81e4bab2bb" translate="yes" xml:space="preserve">
          <source>Function std::ptr::null_mut</source>
          <target state="translated">函数 std::ptr::null_mut</target>
        </trans-unit>
        <trans-unit id="c850fed4a12786c6b64cf8983a8b4ed6836f871b" translate="yes" xml:space="preserve">
          <source>Function std::ptr::read</source>
          <target state="translated">函数 std::ptr::read</target>
        </trans-unit>
        <trans-unit id="b5627f9e5c58db99606464fa93bdcc9942395ffe" translate="yes" xml:space="preserve">
          <source>Function std::ptr::read_unaligned</source>
          <target state="translated">函数 std::ptr::read_unaligned</target>
        </trans-unit>
        <trans-unit id="cfe13a6b31ec05872aa7514cbd914f1bb5861485" translate="yes" xml:space="preserve">
          <source>Function std::ptr::read_volatile</source>
          <target state="translated">函数 std::ptr::read_volatile。</target>
        </trans-unit>
        <trans-unit id="d039612bde4c6048992efb15148a025858e32b3b" translate="yes" xml:space="preserve">
          <source>Function std::ptr::replace</source>
          <target state="translated">函数 std::ptr::replace</target>
        </trans-unit>
        <trans-unit id="d248267b6dd81ea6d45a36bf72ea24089aebcfc9" translate="yes" xml:space="preserve">
          <source>Function std::ptr::slice_from_raw_parts</source>
          <target state="translated">函数std::ptr::slice_from_raw_parts</target>
        </trans-unit>
        <trans-unit id="993ad2b27084f4ef376400115cc16edac21caa44" translate="yes" xml:space="preserve">
          <source>Function std::ptr::slice_from_raw_parts_mut</source>
          <target state="translated">函数std::ptr::slice_from_raw_parts_mut。</target>
        </trans-unit>
        <trans-unit id="9d32d4c811c372eac376d6b3bdbf406666808400" translate="yes" xml:space="preserve">
          <source>Function std::ptr::swap</source>
          <target state="translated">函数 std::ptr::swap</target>
        </trans-unit>
        <trans-unit id="ddca334754be5ad5ccbbcff1fdd2a964723a383a" translate="yes" xml:space="preserve">
          <source>Function std::ptr::swap_nonoverlapping</source>
          <target state="translated">函数std::ptr::swap_nonoverlapping</target>
        </trans-unit>
        <trans-unit id="0a29c6829aba2904ca27c5fa1c9fe49944ebe1c7" translate="yes" xml:space="preserve">
          <source>Function std::ptr::write</source>
          <target state="translated">函数 std::ptr::write</target>
        </trans-unit>
        <trans-unit id="6f751c45c330611925cbdc91328104f0d8563329" translate="yes" xml:space="preserve">
          <source>Function std::ptr::write_bytes</source>
          <target state="translated">函数 std::ptr::write_bytes</target>
        </trans-unit>
        <trans-unit id="1fda9527bc74f49c29a63948c2c6dbd1ab94b1f4" translate="yes" xml:space="preserve">
          <source>Function std::ptr::write_unaligned</source>
          <target state="translated">函数 std::ptr::write_unaligned</target>
        </trans-unit>
        <trans-unit id="6144b17aff45708885f2b21a0ccd281ad4b03511" translate="yes" xml:space="preserve">
          <source>Function std::ptr::write_volatile</source>
          <target state="translated">函数 std::ptr::write_volatile</target>
        </trans-unit>
        <trans-unit id="a2b7a6ea0f1d928fd925aaf7a8ce4d41592caaba" translate="yes" xml:space="preserve">
          <source>Function std::slice::from_mut</source>
          <target state="translated">函数 std::slice::from_mut</target>
        </trans-unit>
        <trans-unit id="c9b1f099f247a42a47b176a483889ae2efb191a9" translate="yes" xml:space="preserve">
          <source>Function std::slice::from_raw_parts</source>
          <target state="translated">函数 std::slice::from_raw_parts</target>
        </trans-unit>
        <trans-unit id="1572930120c6eeb9d2f52363340245d3c52eeaa2" translate="yes" xml:space="preserve">
          <source>Function std::slice::from_raw_parts_mut</source>
          <target state="translated">函数 std::slice::from_raw_parts_mut</target>
        </trans-unit>
        <trans-unit id="ec11607378374baf49258a7deea8633da5e2c00f" translate="yes" xml:space="preserve">
          <source>Function std::slice::from_ref</source>
          <target state="translated">函数 std::slice::from_ref</target>
        </trans-unit>
        <trans-unit id="5f10d43fc04f417378de60595b6a08287404fc58" translate="yes" xml:space="preserve">
          <source>Function std::str::from_boxed_utf8_unchecked</source>
          <target state="translated">函数 std::str::from_boxed_utf8_unchecked。</target>
        </trans-unit>
        <trans-unit id="b3494167f42728c01d009e107c9996379772b067" translate="yes" xml:space="preserve">
          <source>Function std::str::from_utf8</source>
          <target state="translated">函数 std::str::from_utf8</target>
        </trans-unit>
        <trans-unit id="8ab808fea002d56433d1a4c8010bde81eaf0bafe" translate="yes" xml:space="preserve">
          <source>Function std::str::from_utf8_mut</source>
          <target state="translated">函数 std::str::from_utf8_mut</target>
        </trans-unit>
        <trans-unit id="c9eb986ba9ada7c0b92ddab5aeb8be6542adebfb" translate="yes" xml:space="preserve">
          <source>Function std::str::from_utf8_unchecked</source>
          <target state="translated">函数 std::str::from_utf8_unchecked。</target>
        </trans-unit>
        <trans-unit id="ff6fb073e193843ab8761db003fa3d1397bde0ae" translate="yes" xml:space="preserve">
          <source>Function std::str::from_utf8_unchecked_mut</source>
          <target state="translated">函数 std::str::from_utf8_unchecked_mut。</target>
        </trans-unit>
        <trans-unit id="426edab7099b267d5c0fadbf655008d3c3071033" translate="yes" xml:space="preserve">
          <source>Function std::sync::atomic::compiler_fence</source>
          <target state="translated">函数 std::sync::atomic::compiler_fence</target>
        </trans-unit>
        <trans-unit id="746c3ced7e8fb5967d8a30871aeec3190755754d" translate="yes" xml:space="preserve">
          <source>Function std::sync::atomic::fence</source>
          <target state="translated">函数 std::sync::atomic::fence</target>
        </trans-unit>
        <trans-unit id="417c1f03a8782ffed0046f05147205a5928d2325" translate="yes" xml:space="preserve">
          <source>Function std::sync::atomic::spin_loop_hint</source>
          <target state="translated">函数 std::sync::atomic::spin_loop_hint</target>
        </trans-unit>
        <trans-unit id="ca876872e4c8a255561392341646d67ae0b513b3" translate="yes" xml:space="preserve">
          <source>Function std::sync::mpsc::channel</source>
          <target state="translated">函数 std::sync::mpsc::channel</target>
        </trans-unit>
        <trans-unit id="ed61e6291293ba5e6efc025a526a4ca0aeef12a5" translate="yes" xml:space="preserve">
          <source>Function std::sync::mpsc::sync_channel</source>
          <target state="translated">函数 std::sync::mpsc::sync_channel</target>
        </trans-unit>
        <trans-unit id="3113841f2a77c8762bb099b6ff3c3fa1652320a5" translate="yes" xml:space="preserve">
          <source>Function std::thread::available_concurrency</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af550e5e373712dc2a979ef83bfd2ff92a021a5" translate="yes" xml:space="preserve">
          <source>Function std::thread::current</source>
          <target state="translated">函数 std::thread::current</target>
        </trans-unit>
        <trans-unit id="fe9807edb6332c001f6afe09456d514679fa63c2" translate="yes" xml:space="preserve">
          <source>Function std::thread::panicking</source>
          <target state="translated">函数 std::thread::panicking</target>
        </trans-unit>
        <trans-unit id="9315e3ef8d5452c0247f62dbf54f7a6f10da132d" translate="yes" xml:space="preserve">
          <source>Function std::thread::park</source>
          <target state="translated">函数 std::thread::park</target>
        </trans-unit>
        <trans-unit id="fcab5565f3d2f6769e2d47ead2f243674b5700e5" translate="yes" xml:space="preserve">
          <source>Function std::thread::park_timeout</source>
          <target state="translated">函数 std::线程::park_timeout</target>
        </trans-unit>
        <trans-unit id="2f1f8ca90cd667cbf91c70fd5328d42118f543d6" translate="yes" xml:space="preserve">
          <source>Function std::thread::park_timeout_ms</source>
          <target state="translated">函数 std::thread::park_timeout_ms</target>
        </trans-unit>
        <trans-unit id="11ae6d9580fb9910ca48b8e032535befd540831c" translate="yes" xml:space="preserve">
          <source>Function std::thread::sleep</source>
          <target state="translated">函数 std::thread::sleep</target>
        </trans-unit>
        <trans-unit id="1f22ee1120ba93e964441735b057a58abda65aa0" translate="yes" xml:space="preserve">
          <source>Function std::thread::sleep_ms</source>
          <target state="translated">函数 std::thread::sleep_ms</target>
        </trans-unit>
        <trans-unit id="659b9896115b8a757c17153932bb710d0018ce8b" translate="yes" xml:space="preserve">
          <source>Function std::thread::spawn</source>
          <target state="translated">函数 std::thread::spawn</target>
        </trans-unit>
        <trans-unit id="e317cb6f0697f119f701c359a0df2074f48a4962" translate="yes" xml:space="preserve">
          <source>Function std::thread::yield_now</source>
          <target state="translated">函数 std::thread::yield_now</target>
        </trans-unit>
        <trans-unit id="6cd47a4c3bb4392119be7e20d333f200330e1d43" translate="yes" xml:space="preserve">
          <source>Function types:</source>
          <target state="translated">功能类型:</target>
        </trans-unit>
        <trans-unit id="2e3030f5a7f048cef8382d50828336e71bb753d2" translate="yes" xml:space="preserve">
          <source>Function-like macros</source>
          <target state="translated">功能类宏</target>
        </trans-unit>
        <trans-unit id="2a9fd93daca58d7ebff71d8a39637cdf3ce39fd8" translate="yes" xml:space="preserve">
          <source>Function-like macros define macros that look like function calls. Similarly to &lt;code&gt;macro_rules!&lt;/code&gt; macros, they&amp;rsquo;re more flexible than functions; for example, they can take an unknown number of arguments. However, &lt;code&gt;macro_rules!&lt;/code&gt; macros can be defined only using the match-like syntax we discussed in the section &lt;a href=&quot;#declarative-macros-with-macro_rules-for-general-metaprogramming&quot;&gt;&amp;ldquo;Declarative Macros with &lt;code&gt;macro_rules!&lt;/code&gt; for General Metaprogramming&amp;rdquo;&lt;/a&gt; earlier. Function-like macros take a &lt;code&gt;TokenStream&lt;/code&gt; parameter and their definition manipulates that &lt;code&gt;TokenStream&lt;/code&gt; using Rust code as the other two types of procedural macros do. An example of a function-like macro is an &lt;code&gt;sql!&lt;/code&gt; macro that might be called like so:</source>
          <target state="translated">类函数宏定义看起来像函数调用的宏。类似于 &lt;code&gt;macro_rules!&lt;/code&gt; 宏，它们比函数更灵活；例如，它们可以接受未知数量的参数。但是， &lt;code&gt;macro_rules!&lt;/code&gt; 只能使用我们在&lt;a href=&quot;#declarative-macros-with-macro_rules-for-general-metaprogramming&quot;&gt;&amp;ldquo;带有 &lt;code&gt;macro_rules!&lt;/code&gt; 声明性宏！ &amp;rdquo;&lt;/a&gt;部分中讨论的类似于匹配的语法来定义宏。通用元编程&amp;rdquo;。类似函数的宏带有 &lt;code&gt;TokenStream&lt;/code&gt; 参数，并且它们的定义使用Rust代码像其他两种类型的过程宏一样操作 &lt;code&gt;TokenStream&lt;/code&gt; 。类似于函数的宏的一个示例是 &lt;code&gt;sql!&lt;/code&gt; 可以这样调用的宏：</target>
        </trans-unit>
        <trans-unit id="13e701d0c602544129b90642819e8ce654632b4a" translate="yes" xml:space="preserve">
          <source>Function-like macros that look like function calls but operate on the tokens specified as their argument</source>
          <target state="translated">类似函数的宏,看起来像函数调用,但操作的是作为其参数指定的标记。</target>
        </trans-unit>
        <trans-unit id="08300f312a4ed1b5c2034356b30682b98bac9713" translate="yes" xml:space="preserve">
          <source>Function-like procedural macros</source>
          <target state="translated">类似函数的程序宏</target>
        </trans-unit>
        <trans-unit id="f7211ee113b9788f705f277792fadeeb3dfa5aa3" translate="yes" xml:space="preserve">
          <source>Function-like procedural macros may be invoked in any macro invocation position, which includes &lt;a href=&quot;statements&quot;&gt;statements&lt;/a&gt;, &lt;a href=&quot;expressions&quot;&gt;expressions&lt;/a&gt;, &lt;a href=&quot;patterns&quot;&gt;patterns&lt;/a&gt;, &lt;a href=&quot;types#type-expressions&quot;&gt;type expressions&lt;/a&gt;, &lt;a href=&quot;items&quot;&gt;item&lt;/a&gt; positions, including items in &lt;a href=&quot;items/external-blocks&quot;&gt;&lt;code&gt;extern&lt;/code&gt; blocks&lt;/a&gt;, inherent and trait &lt;a href=&quot;items/implementations&quot;&gt;implementations&lt;/a&gt;, and &lt;a href=&quot;items/traits&quot;&gt;trait definitions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ee21bcc50578b01a326947473e22f8250802dc" translate="yes" xml:space="preserve">
          <source>Functional Language Features: Iterators and Closures</source>
          <target state="translated">功能性语言特性。迭代器和闭包</target>
        </trans-unit>
        <trans-unit id="4e21f7bee8221a74639e92992dc14d632a7c8af0" translate="yes" xml:space="preserve">
          <source>Functional update syntax</source>
          <target state="translated">功能更新语法</target>
        </trans-unit>
        <trans-unit id="1a08f42a1b56e730c49367ca1e924228662ea26b" translate="yes" xml:space="preserve">
          <source>Functionality for ordering and comparison.</source>
          <target state="translated">订货和比较的功能。</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="79a1ec8a61d65a41557e7d6041585e466687237c" translate="yes" xml:space="preserve">
          <source>Functions and consts can both be defined in an implementation. A function defined in an &lt;code&gt;impl&lt;/code&gt; block can be standalone, meaning it would be called like &lt;code&gt;Foo::bar()&lt;/code&gt;. If the function takes &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;&amp;amp;self&lt;/code&gt;, or &lt;code&gt;&amp;amp;mut self&lt;/code&gt; as its first argument, it can also be called using method-call syntax, a familiar feature to any object oriented programmer, like &lt;code&gt;foo.bar()&lt;/code&gt;.</source>
          <target state="translated">函数和const都可以在实现中定义。在 &lt;code&gt;impl&lt;/code&gt; 块中定义的函数可以是独立的，这意味着它将像 &lt;code&gt;Foo::bar()&lt;/code&gt; 那样被调用。如果函数以 &lt;code&gt;self&lt;/code&gt; ， &lt;code&gt;&amp;amp;self&lt;/code&gt; 或 &lt;code&gt;&amp;amp;mut self&lt;/code&gt; 作为其第一个参数，则也可以使用方法调用语法来调用它，这是任何面向对象的程序员都熟悉的功能，例如 &lt;code&gt;foo.bar()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="349871b1a6efea930aaaf0ae51e6d8084ba76744" translate="yes" xml:space="preserve">
          <source>Functions are pervasive in Rust code. You&amp;rsquo;ve already seen one of the most important functions in the language: the &lt;code&gt;main&lt;/code&gt; function, which is the entry point of many programs. You&amp;rsquo;ve also seen the &lt;code&gt;fn&lt;/code&gt; keyword, which allows you to declare new functions.</source>
          <target state="translated">Rust代码中普遍存在函数。您已经看到了该语言中最重要的功能之一： &lt;code&gt;main&lt;/code&gt; 函数，它是许多程序的入口。您还看到了 &lt;code&gt;fn&lt;/code&gt; 关键字，该关键字使您可以声明新功能。</target>
        </trans-unit>
        <trans-unit id="ec13d42591018f6323f28c9a51bc9ae1f1e62226" translate="yes" xml:space="preserve">
          <source>Functions are the primary way code is executed within Rust. Function blocks, usually just called functions, can be defined in a variety of different places and be assigned many different attributes and modifiers.</source>
          <target state="translated">函数是Rust中执行代码的主要方式。函数块,通常只是被称为函数,可以在不同的地方被定义,并被分配许多不同的属性和修饰符。</target>
        </trans-unit>
        <trans-unit id="0c9b40f565c06060c423846265af5229e6fca5a3" translate="yes" xml:space="preserve">
          <source>Functions can also be defined to have &lt;em&gt;parameters&lt;/em&gt;, which are special variables that are part of a function&amp;rsquo;s signature. When a function has parameters, you can provide it with concrete values for those parameters. Technically, the concrete values are called &lt;em&gt;arguments&lt;/em&gt;, but in casual conversation, people tend to use the words &lt;em&gt;parameter&lt;/em&gt; and &lt;em&gt;argument&lt;/em&gt; interchangeably for either the variables in a function&amp;rsquo;s definition or the concrete values passed in when you call a function.</source>
          <target state="translated">也可以将函数定义为具有&lt;em&gt;参数&lt;/em&gt;，这些&lt;em&gt;参数&lt;/em&gt;是作为函数签名一部分的特殊变量。当函数具有参数时，可以为其提供这些参数的具体值。从技术上讲，具体值称为自&lt;em&gt;变量&lt;/em&gt;，但是在随意的交谈中，人们倾向于将&lt;em&gt;参数&lt;/em&gt;和自&lt;em&gt;变量&lt;/em&gt;一词交替用于函数定义中的变量或调用函数时传递的具体值。</target>
        </trans-unit>
        <trans-unit id="f7772489f6a9ea8bcb945930292f262cd76d7056" translate="yes" xml:space="preserve">
          <source>Functions can declare an argument to be an anonymous type parameter where the callee must provide a type that has the bounds declared by the anonymous type parameter and the function can only use the methods available by the trait bounds of the anonymous type parameter.</source>
          <target state="translated">函数可以将一个参数声明为匿名类型参数,被调用者必须提供一个具有匿名类型参数所声明的边界的类型,函数只能使用匿名类型参数的特征边界所提供的方法。</target>
        </trans-unit>
        <trans-unit id="6e06e07a734b3acc49e3963f1c74ffeae667ea5a" translate="yes" xml:space="preserve">
          <source>Functions can return values to the code that calls them. We don&amp;rsquo;t name return values, but we do declare their type after an arrow (&lt;code&gt;-&amp;gt;&lt;/code&gt;). In Rust, the return value of the function is synonymous with the value of the final expression in the block of the body of a function. You can return early from a function by using the &lt;code&gt;return&lt;/code&gt; keyword and specifying a value, but most functions return the last expression implicitly. Here&amp;rsquo;s an example of a function that returns a value:</source>
          <target state="translated">函数可以将值返回到调用它们的代码中。我们没有命名返回值，但确实在箭头（ &lt;code&gt;-&amp;gt;&lt;/code&gt; ）之后声明了它们的类型。在Rust中，函数的返回值与函数主体块中最终表达式的值同义。您可以通过使用 &lt;code&gt;return&lt;/code&gt; 关键字并指定一个值从函数中提前返回，但是大多数函数隐式返回最后一个表达式。这是一个返回值的函数的示例：</target>
        </trans-unit>
        <trans-unit id="8578e1edc63515b51db6bed787869c23c34bb35c" translate="yes" xml:space="preserve">
          <source>Functions do not capture local variables. To fix this error, you can replace the function with a closure:</source>
          <target state="translated">函数不能捕获局部变量。要解决这个错误,你可以用一个闭包来代替函数。</target>
        </trans-unit>
        <trans-unit id="2a188df8eec44f8cdac6c18fd47adbe486ec7642" translate="yes" xml:space="preserve">
          <source>Functions in Rust can be called by foreign code, and using an ABI that differs from Rust allows, for example, to provide functions that can be called from other programming languages like C:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c048b3feb011016ec1af315c1f0d26b938c26a99" translate="yes" xml:space="preserve">
          <source>Functions in this module will block the current &lt;strong&gt;thread&lt;/strong&gt; of execution and are bindings to system-provided condition variables where possible. Note that this module places one additional restriction over the system condition variables: each condvar can be used with precisely one mutex at runtime. Any attempt to use multiple mutexes on the same condition variable will result in a runtime panic. If this is not desired, then the unsafe primitives in &lt;code&gt;sys&lt;/code&gt; do not have this restriction but may result in undefined behavior.</source>
          <target state="translated">该模块中的函数将阻止当前执行&lt;strong&gt;线程&lt;/strong&gt;，并在可能的情况下绑定到系统提供的条件变量。请注意，此模块对系统条件变量有一个附加限制：每个condvar在运行时可以与一个互斥体一起使用。任何试图在同一条件变量上使用多个互斥锁的尝试都将导致运行时恐慌。如果不希望这样做，则 &lt;code&gt;sys&lt;/code&gt; 中的不安全原语没有此限制，但可能导致未定义的行为。</target>
        </trans-unit>
        <trans-unit id="19486dfa520b69c11a03500cb78fcde335f9a159" translate="yes" xml:space="preserve">
          <source>Functions in this module will block the current &lt;strong&gt;thread&lt;/strong&gt; of execution. Note that any attempt to use multiple mutexes on the same condition variable may result in a runtime panic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a797a5b3b54d57d908332f50a0ff14a598f923ef" translate="yes" xml:space="preserve">
          <source>Functions marked with &lt;code&gt;target_feature&lt;/code&gt; are not inlined into a context that does not support the given features. The &lt;code&gt;#[inline(always)]&lt;/code&gt; attribute may not be used with a &lt;code&gt;target_feature&lt;/code&gt; attribute.</source>
          <target state="translated">标有 &lt;code&gt;target_feature&lt;/code&gt; 的函数未内联到不支持给定功能的上下文中。的 &lt;code&gt;#[inline(always)]&lt;/code&gt; 属性可以不与一个使用 &lt;code&gt;target_feature&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="0500c980225aaa328a97ddd71516215766d4d2c7" translate="yes" xml:space="preserve">
          <source>Functions may be qualified as async, and this can also be combined with the &lt;code&gt;unsafe&lt;/code&gt; qualifier:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ba2d6d6d2c4bf90e78758d9ffb195fa04a9907" translate="yes" xml:space="preserve">
          <source>Functions qualified with the &lt;code&gt;const&lt;/code&gt; keyword are &lt;a href=&quot;../const_eval#const-functions&quot;&gt;const functions&lt;/a&gt;, as are &lt;a href=&quot;structs&quot;&gt;tuple struct&lt;/a&gt; and &lt;a href=&quot;enumerations&quot;&gt;tuple variant&lt;/a&gt; constructors. &lt;em&gt;Const functions&lt;/em&gt; can be called from within &lt;a href=&quot;../const_eval#const-context&quot;&gt;const context&lt;/a&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="debf8c3aa1da35922894a71fde41ce5baca3e6ad" translate="yes" xml:space="preserve">
          <source>Functions qualified with the &lt;code&gt;const&lt;/code&gt; keyword are const functions. &lt;em&gt;Const functions&lt;/em&gt; can be called from within &lt;a href=&quot;../const_eval#const-context&quot;&gt;const context&lt;/a&gt;s. When called from a const context, the function is interpreted by the compiler at compile time. The interpretation happens in the environment of the compilation target and not the host. So &lt;code&gt;usize&lt;/code&gt; is &lt;code&gt;32&lt;/code&gt; bits if you are compiling against a &lt;code&gt;32&lt;/code&gt; bit system, irrelevant of whether you are building on a &lt;code&gt;64&lt;/code&gt; bit or a &lt;code&gt;32&lt;/code&gt; bit system.</source>
          <target state="translated">用 &lt;code&gt;const&lt;/code&gt; 关键字限定的函数是const函数。&lt;em&gt;const函数&lt;/em&gt;可以在&lt;a href=&quot;../const_eval#const-context&quot;&gt;const上下文中&lt;/a&gt;调用。从const上下文调用时，编译器会在编译时解释该函数。解释发生在编译目标而不是宿主的环境中。因此，如果您是针对 &lt;code&gt;32&lt;/code&gt; 位系统进行编译，则 &lt;code&gt;usize&lt;/code&gt; 是 &lt;code&gt;32&lt;/code&gt; 位，而与您是在 &lt;code&gt;64&lt;/code&gt; 位系统还是 &lt;code&gt;32&lt;/code&gt; 位系统上进行构建无关。</target>
        </trans-unit>
        <trans-unit id="27716c2844ef6662e00babc6885a69e2dec63380" translate="yes" xml:space="preserve">
          <source>Functions return &lt;a href=&quot;enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; whenever errors are expected and recoverable. In the &lt;code&gt;std&lt;/code&gt; crate, &lt;a href=&quot;enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; is most prominently used for &lt;a href=&quot;../io/index&quot;&gt;I/O&lt;/a&gt;.</source>
          <target state="translated">只要预期到错误并且可以恢复，函数就会返回&lt;a href=&quot;enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt;。在 &lt;code&gt;std&lt;/code&gt; 箱子，&lt;a href=&quot;enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt;是最显着的用于&lt;a href=&quot;../io/index&quot;&gt;I / O&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9ba4110fcc3e4c930df9cd4a44d4369d4a726954" translate="yes" xml:space="preserve">
          <source>Functions which take an &lt;a href=&quot;trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; and return another &lt;a href=&quot;trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; are often called 'iterator adapters', as they're a form of the 'adapter pattern'.</source>
          <target state="translated">带有&lt;a href=&quot;trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;并返回另一个&lt;a href=&quot;trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;的函数通常称为&amp;ldquo;迭代器适配器&amp;rdquo;，因为它们是&amp;ldquo;适配器模式&amp;rdquo;的一种形式。</target>
        </trans-unit>
        <trans-unit id="e3428425ba667eae06c3ff2021c3de7d88b772af" translate="yes" xml:space="preserve">
          <source>Functions with Return Values</source>
          <target state="translated">带返回值的函数</target>
        </trans-unit>
        <trans-unit id="b18578d36545499a01a7076ba62b48fa01f0c848" translate="yes" xml:space="preserve">
          <source>Functions with an ABI that differs from &lt;code&gt;&quot;Rust&quot;&lt;/code&gt; do not support unwinding in the exact same way that Rust does. Therefore, unwinding past the end of functions with such ABIs causes the process to abort.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92807c856bd111462699f9e06c09bb56c14702fe" translate="yes" xml:space="preserve">
          <source>Functions within external blocks are declared in the same way as other Rust functions, with the exception that they may not have a body and are instead terminated by a semicolon. Patterns are not allowed in parameters, only &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; or &lt;code&gt;_&lt;/code&gt; may be used.</source>
          <target state="translated">外部块中的函数与其他Rust函数的声明方式相同，不同之处在于它们可能没有主体，而是由分号终止。参数中不允许使用模式，只能使用&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;或 &lt;code&gt;_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc77dcb074f08a32cc87de1996bea238f078997a" translate="yes" xml:space="preserve">
          <source>Functions within external blocks may be called by Rust code, just like functions defined in Rust. The Rust compiler automatically translates between the Rust ABI and the foreign ABI.</source>
          <target state="translated">外部块中的函数可以被Rust代码调用,就像Rust中定义的函数一样。Rust编译器会自动在Rust ABI和外部ABI之间进行翻译。</target>
        </trans-unit>
        <trans-unit id="255f924e1ffd5da6e3f850e0ae72ac4d9101aff6" translate="yes" xml:space="preserve">
          <source>Functions within external blocks may be variadic by specifying &lt;code&gt;...&lt;/code&gt; after one or more named arguments in the argument list:</source>
          <target state="translated">通过在参数列表中的一个或多个命名参数之后指定 &lt;code&gt;...&lt;/code&gt; ，可以在外部块中使用各种函数：</target>
        </trans-unit>
        <trans-unit id="559bba4281b9cbb5285ad035b18e638f9254aa96" translate="yes" xml:space="preserve">
          <source>Functions, except for associated trait functions, can return an abstract return type. These types stand in for another concrete type where the use-site may only use the trait methods declared by the trait bounds of the type.</source>
          <target state="translated">除了相关的特质函数,函数可以返回一个抽象的返回类型。这些类型是另一个具体类型的代名词,在这个类型中,使用方只能使用该类型的特质边界所声明的特质方法。</target>
        </trans-unit>
        <trans-unit id="5234ca15ccfb340b3c32fd38f23a4ff8df3cca57" translate="yes" xml:space="preserve">
          <source>Functions, type aliases, structs, enumerations, unions, traits and implementations may be &lt;em&gt;parameterized&lt;/em&gt; by types and lifetimes. These parameters are listed in angle brackets (&lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt;), usually immediately after the name of the item and before its definition. For implementations, which don't have a name, they come directly after &lt;code&gt;impl&lt;/code&gt;. Lifetime parameters must be declared before type parameters. Some examples of items with type and lifetime parameters:</source>
          <target state="translated">函数，类型别名，结构，枚举，联合，特征和实现可以通过类型和生存期进行&lt;em&gt;参数化&lt;/em&gt;。这些参数在尖括号（ &lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt; ）中列出，通常在项目名称之后和定义之前。对于没有名称的实现，它们直接在 &lt;code&gt;impl&lt;/code&gt; 之后出现。生命周期参数必须在类型参数之前声明。具有类型和生存期参数的项目的一些示例：</target>
        </trans-unit>
        <trans-unit id="d83a6029c4947c75a3d349d25be545ca402bff11" translate="yes" xml:space="preserve">
          <source>Functions, type aliases, structs, enumerations, unions, traits, and implementations may be &lt;em&gt;parameterized&lt;/em&gt; by types and lifetimes. These parameters are listed in angle brackets (&lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt;), usually immediately after the name of the item and before its definition. For implementations, which don't have a name, they come directly after &lt;code&gt;impl&lt;/code&gt;. Lifetime parameters must be declared before type parameters. Some examples of items with type and lifetime parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57878d0751d3ab5ce8210b78147f1fbca3e0b4a" translate="yes" xml:space="preserve">
          <source>Fundamental traits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e006ca099899d227345d125f7604094fb4ac496" translate="yes" xml:space="preserve">
          <source>Fundamental type constructors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0f9166454ea8a2d6c4817bb65ab3b4f20a8394" translate="yes" xml:space="preserve">
          <source>Fundamentally, macros are a way of writing code that writes other code, which is known as &lt;em&gt;metaprogramming&lt;/em&gt;. In Appendix C, we discuss the &lt;code&gt;derive&lt;/code&gt; attribute, which generates an implementation of various traits for you. We&amp;rsquo;ve also used the &lt;code&gt;println!&lt;/code&gt; and &lt;code&gt;vec!&lt;/code&gt; macros throughout the book. All of these macros &lt;em&gt;expand&lt;/em&gt; to produce more code than the code you&amp;rsquo;ve written manually.</source>
          <target state="translated">从根本上讲，宏是一种编写代码的方法，该代码可以编写其他代码，这称为&lt;em&gt;元编程&lt;/em&gt;。在附录C中，我们讨论 &lt;code&gt;derive&lt;/code&gt; 属性，它产生的各种性状您的实现。我们还使用了 &lt;code&gt;println!&lt;/code&gt; 和 &lt;code&gt;vec!&lt;/code&gt; 全书中的宏。所有这些宏都可以&lt;em&gt;扩展&lt;/em&gt;以产生比您手动编写的代码更多的代码。</target>
        </trans-unit>
        <trans-unit id="33aa27b63995ba1fcb3ce7d14470a2ebda4e9afb" translate="yes" xml:space="preserve">
          <source>Further examples</source>
          <target state="translated">其他例子</target>
        </trans-unit>
        <trans-unit id="d09598b8462cb55fafc0925eb6b3707aebcdffff" translate="yes" xml:space="preserve">
          <source>Further methods that return iterators are &lt;a href=&quot;../primitive.slice#method.split&quot;&gt;&lt;code&gt;.split&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../primitive.slice#method.splitn&quot;&gt;&lt;code&gt;.splitn&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../primitive.slice#method.chunks&quot;&gt;&lt;code&gt;.chunks&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../primitive.slice#method.windows&quot;&gt;&lt;code&gt;.windows&lt;/code&gt;&lt;/a&gt; and more.</source>
          <target state="translated">返回迭代器的其他方法是&lt;a href=&quot;../primitive.slice#method.split&quot;&gt; &lt;code&gt;.split&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../primitive.slice#method.splitn&quot;&gt; &lt;code&gt;.splitn&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../primitive.slice#method.chunks&quot;&gt; &lt;code&gt;.chunks&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../primitive.slice#method.windows&quot;&gt; &lt;code&gt;.windows&lt;/code&gt; &lt;/a&gt;等。</target>
        </trans-unit>
        <trans-unit id="1ca30366a5d0ab34525f2208365c1ca94a1f8b77" translate="yes" xml:space="preserve">
          <source>Further, when providing implementations for additional traits, it needs to be considered whether they should behave identical to those of the underlying type as a consequence of acting as a representation of that underlying type. Generic code typically uses &lt;code&gt;Borrow&amp;lt;T&amp;gt;&lt;/code&gt; when it relies on the identical behavior of these additional trait implementations. These traits will likely appear as additional trait bounds.</source>
          <target state="translated">此外，在提供其他特征的实现时，需要考虑由于充当该基础类型的表示而导致它们是否应与基础类型的行为相同。当通用代码依赖于这些附加特征实现的相同行为时，通常会使用 &lt;code&gt;Borrow&amp;lt;T&amp;gt;&lt;/code&gt; 。这些特征可能会显示为其他特征界限。</target>
        </trans-unit>
        <trans-unit id="cb1960550ff747636004d7c48533ff64eb2c7cb0" translate="yes" xml:space="preserve">
          <source>Furthermore, &lt;code&gt;usize&lt;/code&gt; and &lt;code&gt;isize&lt;/code&gt; have the same size.</source>
          <target state="translated">此外， &lt;code&gt;usize&lt;/code&gt; 和 &lt;code&gt;isize&lt;/code&gt; 具有相同的大小。</target>
        </trans-unit>
        <trans-unit id="cdc25e51f3bd03cefd6c886e6015dd4e5ab94438" translate="yes" xml:space="preserve">
          <source>Fuse</source>
          <target state="translated">Fuse</target>
        </trans-unit>
        <trans-unit id="5b5bb3bd654173bbe0ca32ea3cdd799fc39be7e0" translate="yes" xml:space="preserve">
          <source>Fuse::all</source>
          <target state="translated">Fuse::all</target>
        </trans-unit>
        <trans-unit id="be234633fcc19983cf10e500a6cea263759de0ec" translate="yes" xml:space="preserve">
          <source>Fuse::any</source>
          <target state="translated">Fuse::any</target>
        </trans-unit>
        <trans-unit id="fb657f6faeb38bdc2196ebc9819c5d95fe340748" translate="yes" xml:space="preserve">
          <source>Fuse::borrow</source>
          <target state="translated">Fuse::borrow</target>
        </trans-unit>
        <trans-unit id="8f3044155e9d5c84cd57e23debc6442d0e4670b3" translate="yes" xml:space="preserve">
          <source>Fuse::borrow_mut</source>
          <target state="translated">Fuse::borrow_mut</target>
        </trans-unit>
        <trans-unit id="1d289dac98b2c0ee8af0ae119550bb75a8647436" translate="yes" xml:space="preserve">
          <source>Fuse::by_ref</source>
          <target state="translated">Fuse::by_ref</target>
        </trans-unit>
        <trans-unit id="831eb7c4481fb4be2c2082f7b1da24d8f9f757ec" translate="yes" xml:space="preserve">
          <source>Fuse::chain</source>
          <target state="translated">Fuse::chain</target>
        </trans-unit>
        <trans-unit id="438fd4561c9ccfadcfc75a150d349251bb6bad15" translate="yes" xml:space="preserve">
          <source>Fuse::clone</source>
          <target state="translated">Fuse::clone</target>
        </trans-unit>
        <trans-unit id="1430674975c3f47c8efafda98d99fb2a28139d1d" translate="yes" xml:space="preserve">
          <source>Fuse::clone_from</source>
          <target state="translated">Fuse::clone_from</target>
        </trans-unit>
        <trans-unit id="9be81b457f16a4af2ac97486a4694037294d9f73" translate="yes" xml:space="preserve">
          <source>Fuse::clone_into</source>
          <target state="translated">Fuse::clone_into</target>
        </trans-unit>
        <trans-unit id="98f760afb80a8eff0c0ef367859e40f090d49189" translate="yes" xml:space="preserve">
          <source>Fuse::cloned</source>
          <target state="translated">Fuse::cloned</target>
        </trans-unit>
        <trans-unit id="6da9651643728cd0c44496dee9b4303124cabbfa" translate="yes" xml:space="preserve">
          <source>Fuse::cmp</source>
          <target state="translated">Fuse::cmp</target>
        </trans-unit>
        <trans-unit id="0c4f37e97803f9d70993fa59d61809aea7d9011a" translate="yes" xml:space="preserve">
          <source>Fuse::collect</source>
          <target state="translated">Fuse::collect</target>
        </trans-unit>
        <trans-unit id="ddc6005989b65675ac3ce7404f4341aa3e45bd46" translate="yes" xml:space="preserve">
          <source>Fuse::copied</source>
          <target state="translated">Fuse::copied</target>
        </trans-unit>
        <trans-unit id="6086889f4261af2a35bbde15545aa2b38e286eb0" translate="yes" xml:space="preserve">
          <source>Fuse::count</source>
          <target state="translated">Fuse::count</target>
        </trans-unit>
        <trans-unit id="2c7439b70ce0f07bef285135b6810c8416ce3ceb" translate="yes" xml:space="preserve">
          <source>Fuse::cycle</source>
          <target state="translated">Fuse::cycle</target>
        </trans-unit>
        <trans-unit id="1d21878382d8db3eef5c3ccb0162b537561d5fe1" translate="yes" xml:space="preserve">
          <source>Fuse::enumerate</source>
          <target state="translated">Fuse::enumerate</target>
        </trans-unit>
        <trans-unit id="823d811ae87865a3afe81991f5b1ce5c5d3e05fb" translate="yes" xml:space="preserve">
          <source>Fuse::eq</source>
          <target state="translated">Fuse::eq</target>
        </trans-unit>
        <trans-unit id="bd7cbe6bf9c8e8d0dbf1a520e5d8f393c41d5e76" translate="yes" xml:space="preserve">
          <source>Fuse::filter</source>
          <target state="translated">Fuse::filter</target>
        </trans-unit>
        <trans-unit id="ff249feec5a8ff44c09ac4d58cf0c46bc03c2e27" translate="yes" xml:space="preserve">
          <source>Fuse::filter_map</source>
          <target state="translated">Fuse::filter_map</target>
        </trans-unit>
        <trans-unit id="d65f3a653005a9aca1a47f1daa9574aadcf81146" translate="yes" xml:space="preserve">
          <source>Fuse::find</source>
          <target state="translated">Fuse::find</target>
        </trans-unit>
        <trans-unit id="92189ce0a3d924bfcfe5daafee0096f97e345e8a" translate="yes" xml:space="preserve">
          <source>Fuse::find_map</source>
          <target state="translated">Fuse::find_map</target>
        </trans-unit>
        <trans-unit id="1cf8f29dde6618a7c7a45ae0ed611ea18dc6d814" translate="yes" xml:space="preserve">
          <source>Fuse::flat_map</source>
          <target state="translated">Fuse::flat_map</target>
        </trans-unit>
        <trans-unit id="9f855deea4a227b1c412204b1b500286ca9898ff" translate="yes" xml:space="preserve">
          <source>Fuse::flatten</source>
          <target state="translated">Fuse::flatten</target>
        </trans-unit>
        <trans-unit id="27bca4d23d19f854df553c1f82824f7edd33ecdd" translate="yes" xml:space="preserve">
          <source>Fuse::fmt</source>
          <target state="translated">Fuse::fmt</target>
        </trans-unit>
        <trans-unit id="8293be1030013adbfbddb7413ab47a9d5713fbb2" translate="yes" xml:space="preserve">
          <source>Fuse::fold</source>
          <target state="translated">Fuse::fold</target>
        </trans-unit>
        <trans-unit id="d70e6b78ab1bfb6ecef7e95f085adfaeb6422f4a" translate="yes" xml:space="preserve">
          <source>Fuse::for_each</source>
          <target state="translated">Fuse::for_each</target>
        </trans-unit>
        <trans-unit id="c637a607309c42c80a08d11fa1900890151225d1" translate="yes" xml:space="preserve">
          <source>Fuse::from</source>
          <target state="translated">Fuse::from</target>
        </trans-unit>
        <trans-unit id="3f4b35dca4545ef8a3669e274f565d795f26df61" translate="yes" xml:space="preserve">
          <source>Fuse::fuse</source>
          <target state="translated">Fuse::fuse</target>
        </trans-unit>
        <trans-unit id="d32ae472a05f042237f60672a294af6e0f780002" translate="yes" xml:space="preserve">
          <source>Fuse::ge</source>
          <target state="translated">Fuse::ge</target>
        </trans-unit>
        <trans-unit id="db14a349561c9657cb02ec4378f0041d394de512" translate="yes" xml:space="preserve">
          <source>Fuse::gt</source>
          <target state="translated">Fuse::gt</target>
        </trans-unit>
        <trans-unit id="8e137668bb3688ae855ccc5853810b47754a3872" translate="yes" xml:space="preserve">
          <source>Fuse::inspect</source>
          <target state="translated">Fuse::inspect</target>
        </trans-unit>
        <trans-unit id="5cfef3b06c43a18ed973402f005ed7cd09e8c04c" translate="yes" xml:space="preserve">
          <source>Fuse::into</source>
          <target state="translated">Fuse::into</target>
        </trans-unit>
        <trans-unit id="f0ca9438fb188b5b8dad26c6bf148f9659520041" translate="yes" xml:space="preserve">
          <source>Fuse::into_iter</source>
          <target state="translated">Fuse::into_iter</target>
        </trans-unit>
        <trans-unit id="391ea300511ad72ed0c52d931ec32f9ad0fd9c6f" translate="yes" xml:space="preserve">
          <source>Fuse::is_empty</source>
          <target state="translated">Fuse::is_empty</target>
        </trans-unit>
        <trans-unit id="dbc1aa11443b40a7ec81e5ce0dd280ae99df5395" translate="yes" xml:space="preserve">
          <source>Fuse::is_sorted</source>
          <target state="translated">Fuse::is_sorted</target>
        </trans-unit>
        <trans-unit id="6de34202c0045be112d2ee0f948bb537aa9be637" translate="yes" xml:space="preserve">
          <source>Fuse::is_sorted_by</source>
          <target state="translated">Fuse::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="6e5a92b697e11f4f97be1cb92bf8a2c8203571cd" translate="yes" xml:space="preserve">
          <source>Fuse::is_sorted_by_key</source>
          <target state="translated">Fuse::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="c01cf3c78cdbb7fdd9e68eeecd85fe4f5fc5bcc7" translate="yes" xml:space="preserve">
          <source>Fuse::last</source>
          <target state="translated">Fuse::last</target>
        </trans-unit>
        <trans-unit id="fca9c9805a04224315e282c3be9b6a888b5ed9a1" translate="yes" xml:space="preserve">
          <source>Fuse::le</source>
          <target state="translated">Fuse::le</target>
        </trans-unit>
        <trans-unit id="53bec7ede087d7f3b55b0287278a68b38404a6d6" translate="yes" xml:space="preserve">
          <source>Fuse::len</source>
          <target state="translated">Fuse::len</target>
        </trans-unit>
        <trans-unit id="7b4183ba0f386cd9443aa4992eba62aa3b6deb95" translate="yes" xml:space="preserve">
          <source>Fuse::lt</source>
          <target state="translated">Fuse::lt</target>
        </trans-unit>
        <trans-unit id="5c262325339cd3156152addc6dd873caf49ad2b7" translate="yes" xml:space="preserve">
          <source>Fuse::map</source>
          <target state="translated">Fuse::map</target>
        </trans-unit>
        <trans-unit id="f34722d429c594a066614633112c87b369af6d10" translate="yes" xml:space="preserve">
          <source>Fuse::max</source>
          <target state="translated">Fuse::max</target>
        </trans-unit>
        <trans-unit id="74cd81b2b264540f6cf86176ce650c3ace7df66c" translate="yes" xml:space="preserve">
          <source>Fuse::max_by</source>
          <target state="translated">Fuse::max_by</target>
        </trans-unit>
        <trans-unit id="6363e416dfff32dea4b85f002985261e301ff120" translate="yes" xml:space="preserve">
          <source>Fuse::max_by_key</source>
          <target state="translated">Fuse::max_by_key</target>
        </trans-unit>
        <trans-unit id="ea71fbd8ca048cb3a4327bc3c665fd836b260d15" translate="yes" xml:space="preserve">
          <source>Fuse::min</source>
          <target state="translated">Fuse::min</target>
        </trans-unit>
        <trans-unit id="3e45b43694c4d735e3284df51fc1d5afa72689a1" translate="yes" xml:space="preserve">
          <source>Fuse::min_by</source>
          <target state="translated">Fuse::min_by</target>
        </trans-unit>
        <trans-unit id="460a4dae2436a52e10ab6fe47215192d0d2cc26c" translate="yes" xml:space="preserve">
          <source>Fuse::min_by_key</source>
          <target state="translated">Fuse::min_by_key</target>
        </trans-unit>
        <trans-unit id="fdbe92dea6e61847df85f41bba1c90d74049ae28" translate="yes" xml:space="preserve">
          <source>Fuse::ne</source>
          <target state="translated">Fuse::ne</target>
        </trans-unit>
        <trans-unit id="5230c2613200a1d46de34a7083facac940e009ab" translate="yes" xml:space="preserve">
          <source>Fuse::next</source>
          <target state="translated">Fuse::next</target>
        </trans-unit>
        <trans-unit id="51b95d33641283d83b2d3ca707d3b05b32955f7c" translate="yes" xml:space="preserve">
          <source>Fuse::next_back</source>
          <target state="translated">Fuse::next_back</target>
        </trans-unit>
        <trans-unit id="732184abb4e4b26b7896c98d0f1f6fb79face59a" translate="yes" xml:space="preserve">
          <source>Fuse::nth</source>
          <target state="translated">Fuse::nth</target>
        </trans-unit>
        <trans-unit id="ecf2d99b326b90bba4e5e94a2cfcb8fca5d36bf8" translate="yes" xml:space="preserve">
          <source>Fuse::nth_back</source>
          <target state="translated">Fuse::nth_back</target>
        </trans-unit>
        <trans-unit id="645b953e826c63fc9e513fa454ed5315f66f63e7" translate="yes" xml:space="preserve">
          <source>Fuse::partial_cmp</source>
          <target state="translated">Fuse::partial_cmp</target>
        </trans-unit>
        <trans-unit id="909f5215d0717af781bec722f3b0dd010a16016b" translate="yes" xml:space="preserve">
          <source>Fuse::partition</source>
          <target state="translated">Fuse::partition</target>
        </trans-unit>
        <trans-unit id="01e3171662432979d4756fdb5c7d60d5e3d3688a" translate="yes" xml:space="preserve">
          <source>Fuse::peekable</source>
          <target state="translated">Fuse::peekable</target>
        </trans-unit>
        <trans-unit id="6b80140311ab3ce2aaec8ebfd30dcf2e8f274077" translate="yes" xml:space="preserve">
          <source>Fuse::position</source>
          <target state="translated">Fuse::position</target>
        </trans-unit>
        <trans-unit id="cdf77414329bacb067e1a8328f80ce08984f20c6" translate="yes" xml:space="preserve">
          <source>Fuse::product</source>
          <target state="translated">Fuse::product</target>
        </trans-unit>
        <trans-unit id="8ef76fc13b788c76e379230ed857338ce665522c" translate="yes" xml:space="preserve">
          <source>Fuse::rev</source>
          <target state="translated">Fuse::rev</target>
        </trans-unit>
        <trans-unit id="c6ceda460157839498baef5d44fcbf90dfa55a4d" translate="yes" xml:space="preserve">
          <source>Fuse::rfind</source>
          <target state="translated">Fuse::rfind</target>
        </trans-unit>
        <trans-unit id="d330c64599fdb09d15b95c557b4d7892f68af3e1" translate="yes" xml:space="preserve">
          <source>Fuse::rfold</source>
          <target state="translated">Fuse::rfold</target>
        </trans-unit>
        <trans-unit id="4b3396affd9754021af0b44df2dd12d80df33ae6" translate="yes" xml:space="preserve">
          <source>Fuse::rposition</source>
          <target state="translated">Fuse::rposition</target>
        </trans-unit>
        <trans-unit id="ab43bd0b883653041efa0ea7cc154b6bf9af47c1" translate="yes" xml:space="preserve">
          <source>Fuse::scan</source>
          <target state="translated">Fuse::scan</target>
        </trans-unit>
        <trans-unit id="1b8b4c672f99a52b32d55c7bb8972a6f72ece7cf" translate="yes" xml:space="preserve">
          <source>Fuse::size_hint</source>
          <target state="translated">Fuse::size_hint</target>
        </trans-unit>
        <trans-unit id="d347c87cd849d9a01c9a979b0311dbcf96965bae" translate="yes" xml:space="preserve">
          <source>Fuse::skip</source>
          <target state="translated">Fuse::skip</target>
        </trans-unit>
        <trans-unit id="ecd51b0feeb4bb83cc2ee12bb364791884b19e9f" translate="yes" xml:space="preserve">
          <source>Fuse::skip_while</source>
          <target state="translated">Fuse::skip_while</target>
        </trans-unit>
        <trans-unit id="31f474af09ad27dc8cad30dd87438f396efab185" translate="yes" xml:space="preserve">
          <source>Fuse::step_by</source>
          <target state="translated">Fuse::step_by</target>
        </trans-unit>
        <trans-unit id="a8a56103bdd56576e7451868c2de237a02390598" translate="yes" xml:space="preserve">
          <source>Fuse::sum</source>
          <target state="translated">Fuse::sum</target>
        </trans-unit>
        <trans-unit id="29656f53c0fe5965acddeba06fd4f327a57a6b22" translate="yes" xml:space="preserve">
          <source>Fuse::take</source>
          <target state="translated">Fuse::take</target>
        </trans-unit>
        <trans-unit id="70ed5974147d5d5c47345358f79e9fe42830a0e2" translate="yes" xml:space="preserve">
          <source>Fuse::take_while</source>
          <target state="translated">Fuse::take_while</target>
        </trans-unit>
        <trans-unit id="c61f9148a2472fccbc543adcedcaef00ebc36916" translate="yes" xml:space="preserve">
          <source>Fuse::to_owned</source>
          <target state="translated">Fuse::to_owned</target>
        </trans-unit>
        <trans-unit id="9b8e9e88c43c584957c03c4a9790125c18a326dc" translate="yes" xml:space="preserve">
          <source>Fuse::try_fold</source>
          <target state="translated">Fuse::try_fold</target>
        </trans-unit>
        <trans-unit id="019976673022e8a2538f04e41619085b0509b968" translate="yes" xml:space="preserve">
          <source>Fuse::try_for_each</source>
          <target state="translated">Fuse::try_for_each</target>
        </trans-unit>
        <trans-unit id="fe419dd037d95472b807e093d3ea02ccb57032fd" translate="yes" xml:space="preserve">
          <source>Fuse::try_from</source>
          <target state="translated">Fuse::try_from</target>
        </trans-unit>
        <trans-unit id="f05020a71bfc101fbe84356da0aa7b927615342b" translate="yes" xml:space="preserve">
          <source>Fuse::try_into</source>
          <target state="translated">Fuse::try_into</target>
        </trans-unit>
        <trans-unit id="c841af43e247c2928b1064e08f72070c26de3b92" translate="yes" xml:space="preserve">
          <source>Fuse::try_rfold</source>
          <target state="translated">Fuse::try_rfold</target>
        </trans-unit>
        <trans-unit id="5d8927e5ec76098e5f2f5c0d2886eb49af8b8071" translate="yes" xml:space="preserve">
          <source>Fuse::type_id</source>
          <target state="translated">Fuse::type_id</target>
        </trans-unit>
        <trans-unit id="11c88abe9b80924ead19e08c32a0e7d6ff055afa" translate="yes" xml:space="preserve">
          <source>Fuse::unzip</source>
          <target state="translated">Fuse::unzip</target>
        </trans-unit>
        <trans-unit id="6e1886d4b16f1cab13382140a5a4f1a5275134bc" translate="yes" xml:space="preserve">
          <source>Fuse::zip</source>
          <target state="translated">Fuse::zip</target>
        </trans-unit>
        <trans-unit id="9c86bce2cc6fe0fed1d906293dbdc3155ee68bd1" translate="yes" xml:space="preserve">
          <source>Fused multiply-add. Computes &lt;code&gt;(self * a) + b&lt;/code&gt; with only one rounding error, yielding a more accurate result than an unfused multiply-add.</source>
          <target state="translated">融合乘法加法。仅以一个舍入误差计算 &lt;code&gt;(self * a) + b&lt;/code&gt; 与未融合的乘法加法相比，得出的结果更准确。</target>
        </trans-unit>
        <trans-unit id="b5bb5c0c622a64179c02df6d378fd9fe00019e5d" translate="yes" xml:space="preserve">
          <source>FusedIterator</source>
          <target state="translated">FusedIterator</target>
        </trans-unit>
        <trans-unit id="047ca54032a1756c098d3bc1a941a0ed8e583df8" translate="yes" xml:space="preserve">
          <source>Future</source>
          <target state="translated">Future</target>
        </trans-unit>
        <trans-unit id="34f9f68cc95c47f600ff51f98b51efdc1e4973b7" translate="yes" xml:space="preserve">
          <source>Future compatibility</source>
          <target state="translated">未来的兼容性</target>
        </trans-unit>
        <trans-unit id="fe870fd01f0abd72a18fbaf5c5cbed77f351525a" translate="yes" xml:space="preserve">
          <source>Future::poll</source>
          <target state="translated">Future::poll</target>
        </trans-unit>
        <trans-unit id="5404be636a9f63c6aa8f665b2d42ad260f8e8dfb" translate="yes" xml:space="preserve">
          <source>Futures alone are &lt;em&gt;inert&lt;/em&gt;; they must be &lt;em&gt;actively&lt;/em&gt;&lt;code&gt;poll&lt;/code&gt;ed to make progress, meaning that each time the current task is woken up, it should actively re-&lt;code&gt;poll&lt;/code&gt; pending futures that it still has an interest in.</source>
          <target state="translated">期货本身是&lt;em&gt;惰性的&lt;/em&gt; ; 必须&lt;em&gt;积极地&lt;/em&gt; &lt;code&gt;poll&lt;/code&gt; 它们以取得进展，这意味着每次唤醒当前任务时，它都应该主动重新 &lt;code&gt;poll&lt;/code&gt; 仍对其感兴趣的未决期货。</target>
        </trans-unit>
        <trans-unit id="271eac5352b0f5dcc6b36ba90bfc074be7357d5e" translate="yes" xml:space="preserve">
          <source>Futures created through this function are functionally similar to those created through &lt;code&gt;async {}&lt;/code&gt;. The main difference is that futures created through this function are named and implement &lt;code&gt;Unpin&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170618a3c56100e7f9817b28534dee7fda36bd36" translate="yes" xml:space="preserve">
          <source>GNU C library Bugzilla</source>
          <target state="translated">GNU C 库 Bugzilla</target>
        </trans-unit>
        <trans-unit id="ae44bdb1ff1d7f62acdd7de8bfa0f16c08c76789" translate="yes" xml:space="preserve">
          <source>Gain a reference to the underlying &lt;code&gt;stat&lt;/code&gt; structure which contains the raw information returned by the OS.</source>
          <target state="translated">获取对基础 &lt;code&gt;stat&lt;/code&gt; 结构的引用，其中包含操作系统返回的原始信息。</target>
        </trans-unit>
        <trans-unit id="28e18309d45539def481f7786d4cc8d73b9f5aec" translate="yes" xml:space="preserve">
          <source>Gain a reference to the underlying &lt;code&gt;stat&lt;/code&gt; structure which contains the raw information returned by the OS. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.as_raw_stat&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">获取对基础 &lt;code&gt;stat&lt;/code&gt; 结构的引用，其中包含操作系统返回的原始信息。&lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.as_raw_stat&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5023fde21a93efcc45f3ef1278a03020db274d7f" translate="yes" xml:space="preserve">
          <source>Ge</source>
          <target state="translated">Ge</target>
        </trans-unit>
        <trans-unit id="826e54d9f3341da0639215d591e03f7d7c85bcf1" translate="yes" xml:space="preserve">
          <source>Generalizing the latter case, any type implementing &lt;a href=&quot;../ops/trait.drop&quot;&gt;&lt;code&gt;Drop&lt;/code&gt;&lt;/a&gt; can't be &lt;code&gt;Copy&lt;/code&gt;, because it's managing some resource besides its own &lt;a href=&quot;../mem/fn.size_of&quot;&gt;&lt;code&gt;size_of::&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; bytes.</source>
          <target state="translated">概括后一种情况，实现&lt;a href=&quot;../ops/trait.drop&quot;&gt; &lt;code&gt;Drop&lt;/code&gt; 的&lt;/a&gt;任何类型都不能为 &lt;code&gt;Copy&lt;/code&gt; ，因为它除了管理自己的&lt;a href=&quot;../mem/fn.size_of&quot;&gt; &lt;code&gt;size_of::&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt;字节外还管理某些资源。</target>
        </trans-unit>
        <trans-unit id="b3f505d3f65e19757f523841da2ceb51bc20ba3c" translate="yes" xml:space="preserve">
          <source>Generally speaking, if your type &lt;em&gt;can&lt;/em&gt; implement &lt;code&gt;Copy&lt;/code&gt;, it should. Keep in mind, though, that implementing &lt;code&gt;Copy&lt;/code&gt; is part of the public API of your type. If the type might become non-&lt;code&gt;Copy&lt;/code&gt; in the future, it could be prudent to omit the &lt;code&gt;Copy&lt;/code&gt; implementation now, to avoid a breaking API change.</source>
          <target state="translated">一般来说，如果您的类型&lt;em&gt;可以&lt;/em&gt;实现 &lt;code&gt;Copy&lt;/code&gt; ，则应该实现。但是请记住，实现 &lt;code&gt;Copy&lt;/code&gt; 是您类型的公共API的一部分。如果该类型将来可能变为非 &lt;code&gt;Copy&lt;/code&gt; ，则最好现在省略 &lt;code&gt;Copy&lt;/code&gt; 实现，以免API发生重大更改。</target>
        </trans-unit>
        <trans-unit id="5f188724c393355d9852c11495e877635da2c7cf" translate="yes" xml:space="preserve">
          <source>Generally speaking, when using &lt;code&gt;OpenOptions&lt;/code&gt;, you'll first call &lt;a href=&quot;struct.openoptions#method.new&quot;&gt;&lt;code&gt;OpenOptions::new&lt;/code&gt;&lt;/a&gt;, then chain calls to methods to set each option, then call &lt;a href=&quot;struct.openoptions#method.open&quot;&gt;&lt;code&gt;OpenOptions::open&lt;/code&gt;&lt;/a&gt;, passing the path of the file you're trying to open. This will give you a &lt;a href=&quot;../io/type.result&quot;&gt;&lt;code&gt;io::Result&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;struct.file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; inside that you can further operate on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f413a99b90fcebaf815708bcac6bf2c609712621" translate="yes" xml:space="preserve">
          <source>Generally speaking, when using &lt;code&gt;OpenOptions&lt;/code&gt;, you'll first call &lt;a href=&quot;struct.openoptions#method.new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;, then chain calls to methods to set each option, then call &lt;a href=&quot;struct.openoptions#method.open&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt;, passing the path of the file you're trying to open. This will give you a &lt;a href=&quot;../io/type.result&quot;&gt;&lt;code&gt;io::Result&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;struct.file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; inside that you can further operate on.</source>
          <target state="translated">一般来说，使用 &lt;code&gt;OpenOptions&lt;/code&gt; 时，您将首先调用&lt;a href=&quot;struct.openoptions#method.new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;，然后将调用链接到方法以设置每个选项，然后调用&lt;a href=&quot;struct.openoptions#method.open&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;，并传递您要打开的文件的路径。这将为您提供&lt;a href=&quot;../io/type.result&quot;&gt; &lt;code&gt;io::Result&lt;/code&gt; &lt;/a&gt;其中包含一个&lt;a href=&quot;struct.file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;，您可以进一步对其进行操作。</target>
        </trans-unit>
        <trans-unit id="ef7a9d88d07b5708f08d417b4551f7e7322bf0bc" translate="yes" xml:space="preserve">
          <source>Generally speaking, you should just &lt;code&gt;derive&lt;/code&gt; a &lt;code&gt;Debug&lt;/code&gt; implementation.</source>
          <target state="translated">一般来说，你应该 &lt;code&gt;derive&lt;/code&gt; 一个 &lt;code&gt;Debug&lt;/code&gt; 的实现。</target>
        </trans-unit>
        <trans-unit id="732f11f2232d28d3cd17a16f8d12c4158ae671a2" translate="yes" xml:space="preserve">
          <source>Generally, &lt;code&gt;Self: Sized&lt;/code&gt; is used to indicate that the trait should not be used as a trait object. If the trait comes from your own crate, consider removing this restriction.</source>
          <target state="translated">通常， &lt;code&gt;Self: Sized&lt;/code&gt; 用于表示不应将特征用作特征对象。如果特征来自您自己的箱子，请考虑删除此限制。</target>
        </trans-unit>
        <trans-unit id="4e2b4a1c449efa70704f19e5e57263ca0c4ffc22" translate="yes" xml:space="preserve">
          <source>Generally, for smart pointers you will implement &lt;code&gt;CoerceUnsized&amp;lt;Ptr&amp;lt;U&amp;gt;&amp;gt; for Ptr&amp;lt;T&amp;gt; where T: Unsize&amp;lt;U&amp;gt;, U: ?Sized&lt;/code&gt;, with an optional &lt;code&gt;?Sized&lt;/code&gt; bound on &lt;code&gt;T&lt;/code&gt; itself. For wrapper types that directly embed &lt;code&gt;T&lt;/code&gt; like &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;, you can directly implement &lt;code&gt;CoerceUnsized&amp;lt;Wrap&amp;lt;U&amp;gt;&amp;gt; for Wrap&amp;lt;T&amp;gt; where T: CoerceUnsized&amp;lt;U&amp;gt;&lt;/code&gt;. This will let coercions of types like &lt;code&gt;Cell&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; work.</source>
          <target state="translated">通常，对于智能指针，您将为 &lt;code&gt;CoerceUnsized&amp;lt;Ptr&amp;lt;U&amp;gt;&amp;gt; for Ptr&amp;lt;T&amp;gt; where T: Unsize&amp;lt;U&amp;gt;, U: ?Sized&lt;/code&gt; 实现CoerceUnsize &amp;lt;Ptr &amp;lt;U &amp;gt;&amp;gt;，其中T：Unsize &amp;lt;U&amp;gt;，U：？Sized，对 &lt;code&gt;T&lt;/code&gt; 本身绑定可选的 &lt;code&gt;?Sized&lt;/code&gt; 。对于直接嵌入 &lt;code&gt;T&lt;/code&gt; 的包装器类型（如 &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; 和 &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; ，您可以直接 &lt;code&gt;CoerceUnsized&amp;lt;Wrap&amp;lt;U&amp;gt;&amp;gt; for Wrap&amp;lt;T&amp;gt; where T: CoerceUnsized&amp;lt;U&amp;gt;&lt;/code&gt; 实现CoerceUnsize &amp;lt;Wrap &amp;lt;U &amp;gt;&amp;gt;，其中T：CoerceUnsized &amp;lt;U&amp;gt;。这将使像 &lt;code&gt;Cell&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 之类的强制转换起作用。</target>
        </trans-unit>
        <trans-unit id="5a24acc6c6f1f6f5fa4a70e0c8ec97be7ad2c8f4" translate="yes" xml:space="preserve">
          <source>Generate the nth Fibonacci number.</source>
          <target state="translated">产生第n个斐波那契数。</target>
        </trans-unit>
        <trans-unit id="4055bcedf4ef42a40655c354d55e695956e52c99" translate="yes" xml:space="preserve">
          <source>Generates a wide character sequence for potentially ill-formed UTF-16.</source>
          <target state="translated">为潜在的不规则UTF-16生成一个宽字符序列。</target>
        </trans-unit>
        <trans-unit id="2358686f35ad9babf41475908fbf7fb94c7fb8f0" translate="yes" xml:space="preserve">
          <source>Generates the base configuration for spawning a thread, from which configuration methods can be chained.</source>
          <target state="translated">生成用于产卵线程的基本配置,配置方法可以从这个配置方法中链起来。</target>
        </trans-unit>
        <trans-unit id="4eed3f4ef0910be56eecb5b88bc01f17517c6c08" translate="yes" xml:space="preserve">
          <source>Generating a Random Number</source>
          <target state="translated">生成一个随机数</target>
        </trans-unit>
        <trans-unit id="4344ed85b4c6edaff3d6a74283da67d4030e7149" translate="yes" xml:space="preserve">
          <source>Generating a Secret Number</source>
          <target state="translated">生成一个秘密号码</target>
        </trans-unit>
        <trans-unit id="1d20de03126b297e05c13a7d280f33e24c72c537" translate="yes" xml:space="preserve">
          <source>Generator</source>
          <target state="translated">Generator</target>
        </trans-unit>
        <trans-unit id="be3352ebf40a7e8e4b021ce3ac0440a124629bf5" translate="yes" xml:space="preserve">
          <source>Generator::resume</source>
          <target state="translated">Generator::resume</target>
        </trans-unit>
        <trans-unit id="8a05177b6fef574c9007b27a5b9c1d6d147b496c" translate="yes" xml:space="preserve">
          <source>GeneratorState</source>
          <target state="translated">GeneratorState</target>
        </trans-unit>
        <trans-unit id="d04f291cf43bb98ceb2d5124b4e75aa6ba1544d4" translate="yes" xml:space="preserve">
          <source>GeneratorState::borrow</source>
          <target state="translated">GeneratorState::borrow</target>
        </trans-unit>
        <trans-unit id="e237a5c5d934ed2bcc036a7ec579e8363436fa8f" translate="yes" xml:space="preserve">
          <source>GeneratorState::borrow_mut</source>
          <target state="translated">GeneratorState::borrow_mut</target>
        </trans-unit>
        <trans-unit id="2502b2db43ac135d156ec67093f193a1d551ada7" translate="yes" xml:space="preserve">
          <source>GeneratorState::clamp</source>
          <target state="translated">GeneratorState::clamp</target>
        </trans-unit>
        <trans-unit id="14c55996161a4d9905bb442a79bebdda60c0a770" translate="yes" xml:space="preserve">
          <source>GeneratorState::clone</source>
          <target state="translated">GeneratorState::clone</target>
        </trans-unit>
        <trans-unit id="3f7f8fe2855b988679d6469ba23b116c95fb7f94" translate="yes" xml:space="preserve">
          <source>GeneratorState::clone_from</source>
          <target state="translated">GeneratorState::clone_from</target>
        </trans-unit>
        <trans-unit id="80b100a3f0da64d40e398e415f7da34b79e8c141" translate="yes" xml:space="preserve">
          <source>GeneratorState::clone_into</source>
          <target state="translated">GeneratorState::clone_into</target>
        </trans-unit>
        <trans-unit id="e257c93690e4d8869ec57678eef2e65d13e430ee" translate="yes" xml:space="preserve">
          <source>GeneratorState::cmp</source>
          <target state="translated">GeneratorState::cmp</target>
        </trans-unit>
        <trans-unit id="8a2e0ed5e7b43d7400dac081e69edcd39c918c34" translate="yes" xml:space="preserve">
          <source>GeneratorState::eq</source>
          <target state="translated">GeneratorState::eq</target>
        </trans-unit>
        <trans-unit id="89c2703dea761c8c48ffa4254fb375381596d10f" translate="yes" xml:space="preserve">
          <source>GeneratorState::fmt</source>
          <target state="translated">GeneratorState::fmt</target>
        </trans-unit>
        <trans-unit id="eda2eb9f12fc2973fa0ac082be186f3fadfe23bd" translate="yes" xml:space="preserve">
          <source>GeneratorState::from</source>
          <target state="translated">GeneratorState::from</target>
        </trans-unit>
        <trans-unit id="a10861d2a70c2a97bea18ae69516399a36bee43f" translate="yes" xml:space="preserve">
          <source>GeneratorState::ge</source>
          <target state="translated">GeneratorState::ge</target>
        </trans-unit>
        <trans-unit id="72a246cb6eeb7bd47306411db8d35d82c5c697bd" translate="yes" xml:space="preserve">
          <source>GeneratorState::gt</source>
          <target state="translated">GeneratorState::gt</target>
        </trans-unit>
        <trans-unit id="f47d401161e51de0bd3708a6aa6b0162f13c3a4d" translate="yes" xml:space="preserve">
          <source>GeneratorState::hash</source>
          <target state="translated">GeneratorState::hash</target>
        </trans-unit>
        <trans-unit id="0d2cf74073e99ac2f7b4a8d84ac45a2dec7d63a3" translate="yes" xml:space="preserve">
          <source>GeneratorState::hash_slice</source>
          <target state="translated">GeneratorState::hash_slice</target>
        </trans-unit>
        <trans-unit id="d362c3c3176b8bb099ef83d916f2d082b1a7c9b7" translate="yes" xml:space="preserve">
          <source>GeneratorState::into</source>
          <target state="translated">GeneratorState::into</target>
        </trans-unit>
        <trans-unit id="b756ce5dda7c46f9d07b0d1aca348d701a969f8c" translate="yes" xml:space="preserve">
          <source>GeneratorState::le</source>
          <target state="translated">GeneratorState::le</target>
        </trans-unit>
        <trans-unit id="93e42bf71e3b440df1059a94e8e0dc45070ae52f" translate="yes" xml:space="preserve">
          <source>GeneratorState::lt</source>
          <target state="translated">GeneratorState::lt</target>
        </trans-unit>
        <trans-unit id="6d1cac78c83d7c9a11d1fbbd289720c9f3206ab7" translate="yes" xml:space="preserve">
          <source>GeneratorState::max</source>
          <target state="translated">GeneratorState::max</target>
        </trans-unit>
        <trans-unit id="37560d6c837e27a56cbfe576d408ec65983cd14a" translate="yes" xml:space="preserve">
          <source>GeneratorState::min</source>
          <target state="translated">GeneratorState::min</target>
        </trans-unit>
        <trans-unit id="3549d5021f412f184a2ec1f2eb1ad44c8d1d5469" translate="yes" xml:space="preserve">
          <source>GeneratorState::ne</source>
          <target state="translated">GeneratorState::ne</target>
        </trans-unit>
        <trans-unit id="eaf2826ae0eabec3e56edf7fd20219fdbd1719d8" translate="yes" xml:space="preserve">
          <source>GeneratorState::partial_cmp</source>
          <target state="translated">GeneratorState::partial_cmp</target>
        </trans-unit>
        <trans-unit id="bc63dfa2c5dc307fd7de8a64413574342399b682" translate="yes" xml:space="preserve">
          <source>GeneratorState::to_owned</source>
          <target state="translated">GeneratorState::to_owned</target>
        </trans-unit>
        <trans-unit id="50328fd3c1aba2c5f8f065dcd6362c0cc51dfd2c" translate="yes" xml:space="preserve">
          <source>GeneratorState::try_from</source>
          <target state="translated">GeneratorState::try_from</target>
        </trans-unit>
        <trans-unit id="98ea27a003d07dda294e378b634a2c17ba4c3a3e" translate="yes" xml:space="preserve">
          <source>GeneratorState::try_into</source>
          <target state="translated">GeneratorState::try_into</target>
        </trans-unit>
        <trans-unit id="87741a9ed7c3b2106ba319e6c46fba99b623309a" translate="yes" xml:space="preserve">
          <source>GeneratorState::type_id</source>
          <target state="translated">GeneratorState::type_id</target>
        </trans-unit>
        <trans-unit id="7f39e996a867af2cbe188c7b44ecc3d06e5acc04" translate="yes" xml:space="preserve">
          <source>Generators, also commonly referred to as coroutines, are currently an experimental language feature in Rust. Added in &lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/2033&quot;&gt;RFC 2033&lt;/a&gt; generators are currently intended to primarily provide a building block for async/await syntax but will likely extend to also providing an ergonomic definition for iterators and other primitives.</source>
          <target state="translated">生成器，通常也称为协程，目前是Rust中的一种实验语言功能。&lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/2033&quot;&gt;RFC 2033中&lt;/a&gt;添加的生成器目前主要用于为异步/等待语法提供构造块，但可能会扩展为还为迭代器和其他原语提供符合人体工程学的定义。</target>
        </trans-unit>
        <trans-unit id="326f639e29705946500c3f82d8731c2e1774c768" translate="yes" xml:space="preserve">
          <source>Generic &lt;a href=&quot;types/parameters&quot;&gt;type parameters&lt;/a&gt;.</source>
          <target state="translated">通用&lt;a href=&quot;types/parameters&quot;&gt;类型参数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1807cc787d281913c23f12bd3560541d8f00b032" translate="yes" xml:space="preserve">
          <source>Generic Data Types</source>
          <target state="translated">通用数据类型</target>
        </trans-unit>
        <trans-unit id="98f64976fc4f70ae5ee15f3bc5b13a2d6b9d672a" translate="yes" xml:space="preserve">
          <source>Generic Implementations</source>
          <target state="translated">通用实施</target>
        </trans-unit>
        <trans-unit id="f072da836e4d916032d518ff0f18fd650d4581ad" translate="yes" xml:space="preserve">
          <source>Generic Lifetimes in Functions</source>
          <target state="translated">函数中的通用寿命</target>
        </trans-unit>
        <trans-unit id="27eeb642b1a0c27c15bf839571b69f7e44c24936" translate="yes" xml:space="preserve">
          <source>Generic Traits</source>
          <target state="translated">通用特征</target>
        </trans-unit>
        <trans-unit id="efb89da0fe84fb1c10e0e67f29f7eeede9f0ba20" translate="yes" xml:space="preserve">
          <source>Generic Type Parameters, Trait Bounds, and Lifetimes Together</source>
          <target state="translated">通用类型参数、特质边界和寿命的结合。</target>
        </trans-unit>
        <trans-unit id="9cd42050d57736e2d4fca7655d0893381fa92cbb" translate="yes" xml:space="preserve">
          <source>Generic Types, Traits, and Lifetimes</source>
          <target state="translated">通用类型、特征和寿命</target>
        </trans-unit>
        <trans-unit id="8d490f5f674a359f8f4f73405d1a00a44fb2ed0a" translate="yes" xml:space="preserve">
          <source>Generic arguments were not provided in the same order as the corresponding generic parameters are declared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f5365cdbef14515226dcd384583192170cc525" translate="yes" xml:space="preserve">
          <source>Generic functions</source>
          <target state="translated">通用功能</target>
        </trans-unit>
        <trans-unit id="1f4659089d7ab3bbc1fbc01f1bd9729f123901fd" translate="yes" xml:space="preserve">
          <source>Generic functions and generic structs can use traits to constrain, or bound, the types they accept.</source>
          <target state="translated">通用函数和通用结构可以使用特征来约束,或者说约束它们所接受的类型。</target>
        </trans-unit>
        <trans-unit id="eae8cd46084865929b442cf8ea6d11173b23b60b" translate="yes" xml:space="preserve">
          <source>Generic functions and types with a &lt;code&gt;T: Trait&lt;/code&gt; bounds can be used with &lt;code&gt;Ty&lt;/code&gt; being used for &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">通用功能和类型与 &lt;code&gt;T: Trait&lt;/code&gt; 界限可与使用 &lt;code&gt;Ty&lt;/code&gt; 被用于 &lt;code&gt;T&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4bcab43ed4f07d581db4e91c1af83663a27b91de" translate="yes" xml:space="preserve">
          <source>Generic hashing support.</source>
          <target state="translated">通用哈希支持。</target>
        </trans-unit>
        <trans-unit id="5c44d31fa6749df8167db78b7f69c1e6b8112cff" translate="yes" xml:space="preserve">
          <source>Generic items may use traits as &lt;a href=&quot;../trait-bounds&quot;&gt;bounds&lt;/a&gt; on their type parameters.</source>
          <target state="translated">泛型项目可以将特征用作其类型参数的&lt;a href=&quot;../trait-bounds&quot;&gt;界限&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="910a23e27585722660fb101574581723e9023985" translate="yes" xml:space="preserve">
          <source>Generic lifetime &lt;code&gt;'b&lt;/code&gt; must outlive lifetime &lt;code&gt;'a&lt;/code&gt;</source>
          <target state="translated">通用寿命 &lt;code&gt;'b&lt;/code&gt; 必须寿命超过寿命 &lt;code&gt;'a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7374523f7aaffe9d327555dcc2269e6002424197" translate="yes" xml:space="preserve">
          <source>Generic lifetime and type parameters allow &lt;a href=&quot;../attributes&quot;&gt;attributes&lt;/a&gt; on them. There are no built-in attributes that do anything in this position, although custom derive attributes may give meaning to it.</source>
          <target state="translated">通用生存期和类型参数允许使用&lt;a href=&quot;../attributes&quot;&gt;属性&lt;/a&gt;。尽管自定义派生属性可能为其赋予了含义，但没有内置属性可以在此位置执行任何操作。</target>
        </trans-unit>
        <trans-unit id="070d7b64bfe57bcc62addca63e2c1cff8dd83211" translate="yes" xml:space="preserve">
          <source>Generic parameter &lt;code&gt;T&lt;/code&gt; constrained to types that implement &lt;code&gt;U&lt;/code&gt;</source>
          <target state="translated">通用参数 &lt;code&gt;T&lt;/code&gt; 限制为实现 &lt;code&gt;U&lt;/code&gt; 的类型</target>
        </trans-unit>
        <trans-unit id="358eed37fa63fd6b1e5193acd34abc17d6db4cd2" translate="yes" xml:space="preserve">
          <source>Generic parameters are implicit with &lt;code&gt;Self&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0662e93a0c0518f55b130b80b54fb79df0d0c94" translate="yes" xml:space="preserve">
          <source>Generic type &lt;code&gt;T&lt;/code&gt; contains no borrowed references other than &lt;code&gt;'static&lt;/code&gt; ones</source>
          <target state="translated">通用型 &lt;code&gt;T&lt;/code&gt; 不包含借用其他参考比 &lt;code&gt;'static&lt;/code&gt; 者</target>
        </trans-unit>
        <trans-unit id="aff0c7dbfb36e71d34305b173306f472b0221612" translate="yes" xml:space="preserve">
          <source>Generic type &lt;code&gt;T&lt;/code&gt; must outlive lifetime &lt;code&gt;'a&lt;/code&gt; (meaning the type cannot transitively contain any references with lifetimes shorter than &lt;code&gt;'a&lt;/code&gt;)</source>
          <target state="translated">通用类型 &lt;code&gt;T&lt;/code&gt; 必须超过生存期 &lt;code&gt;'a&lt;/code&gt; （这意味着该类型不能可传递地包含任何生存期短于 &lt;code&gt;'a&lt;/code&gt; 的引用）</target>
        </trans-unit>
        <trans-unit id="e6e64547108bd126e5d53a717612fe87ff383d16" translate="yes" xml:space="preserve">
          <source>Generic type parameters in a struct definition aren&amp;rsquo;t always the same as those you use in that struct&amp;rsquo;s method signatures. For example, Listing 10-11 defines the method &lt;code&gt;mixup&lt;/code&gt; on the &lt;code&gt;Point&amp;lt;T, U&amp;gt;&lt;/code&gt; struct from Listing 10-8. The method takes another &lt;code&gt;Point&lt;/code&gt; as a parameter, which might have different types from the &lt;code&gt;self&lt;/code&gt;&lt;code&gt;Point&lt;/code&gt; we&amp;rsquo;re calling &lt;code&gt;mixup&lt;/code&gt; on. The method creates a new &lt;code&gt;Point&lt;/code&gt; instance with the &lt;code&gt;x&lt;/code&gt; value from the &lt;code&gt;self&lt;/code&gt;&lt;code&gt;Point&lt;/code&gt; (of type &lt;code&gt;T&lt;/code&gt;) and the &lt;code&gt;y&lt;/code&gt; value from the passed-in &lt;code&gt;Point&lt;/code&gt; (of type &lt;code&gt;W&lt;/code&gt;).</source>
          <target state="translated">结构定义中的泛型类型参数并不总是与该结构的方法签名中使用的参数相同。例如，清单10-11在清单10-8中的 &lt;code&gt;Point&amp;lt;T, U&amp;gt;&lt;/code&gt; 结构上定义了方法 &lt;code&gt;mixup&lt;/code&gt; 。该方法将另一个 &lt;code&gt;Point&lt;/code&gt; 用作参数，该类型可能与我们在其上调用 &lt;code&gt;mixup&lt;/code&gt; 的 &lt;code&gt;self&lt;/code&gt; &lt;code&gt;Point&lt;/code&gt; 的类型不同。该方法使用来自 &lt;code&gt;self&lt;/code&gt; &lt;code&gt;Point&lt;/code&gt; 的 &lt;code&gt;x&lt;/code&gt; 值（类型 &lt;code&gt;T&lt;/code&gt; ）和来自传入的 &lt;code&gt;Point&lt;/code&gt; 的 &lt;code&gt;y&lt;/code&gt; 值（类型 &lt;code&gt;W&lt;/code&gt; ）创建一个新的 &lt;code&gt;Point&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="24a4c08697368c16f5fbbfbba45a86f6181cd53e" translate="yes" xml:space="preserve">
          <source>Generics have been used on an auto trait.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0504e570433bf881c8e4f524e7865541e64b7072" translate="yes" xml:space="preserve">
          <source>Get a pinned mutable reference from a static mutable reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb95181a8c4c34e71821bcb5b2d547968b70fff0" translate="yes" xml:space="preserve">
          <source>Get a pinned reference from a static reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be352f47b5e6ad288f45c1ffb564c03acea5928" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut bool&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6a3b4e003eb4b0da26051861e6a8afd27a77f2" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut i16&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfaa4b24fd6ed6fa9005fce55a46cedaf4873afb" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut i32&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0fbe251cddfe77d2382a7fe1ddccda6727f7dc" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut i64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94480ecfd23dbc87f67caa39256ed88bbd75535" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut i8&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995c7f0c6e5302e5c0b1595c6739a6650e6aa199" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut isize&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec51732ae25a09c8ca12e18b2914268b7138ae43" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut u16&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be052f4c09cb9e78d37bcccedbd0ef6b81373d25" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut u32&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64feb94dc70a119380d14818e3261d6eef2ff01" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut u64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c9e695d154c5f3dd3abe64bcd503125f1a6943" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut u8&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1606b3b4a9988dd96e8df625d37ad2f352009b53" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut usize&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d022441dfa4197ede9226c6cd05c31e113bcb1" translate="yes" xml:space="preserve">
          <source>Get atomic access to a pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf81408f02d917373b6c30a23d98790dc9a5d471" translate="yes" xml:space="preserve">
          <source>Get the formatted string, if it has no arguments to be formatted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5cd7c90099ca5a967101e4cfad667e3decbf3d" translate="yes" xml:space="preserve">
          <source>Gets a handle to the thread that invokes it.</source>
          <target state="translated">获取调用它的线程的句柄。</target>
        </trans-unit>
        <trans-unit id="76d4e2388fe5518e4d670520e3733f09619ee790" translate="yes" xml:space="preserve">
          <source>Gets a mutable (unique) reference to the contained value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82a8f0547b098b3e15a8465f846472c994e131e" translate="yes" xml:space="preserve">
          <source>Gets a mutable iterator over the entries of the map, sorted by key.</source>
          <target state="translated">获取一个按键排序的地图条目的可变迭器。</target>
        </trans-unit>
        <trans-unit id="1ac6a489d416bd5c5ef9fe3e6c54e36610970d42" translate="yes" xml:space="preserve">
          <source>Gets a mutable iterator over the values of the map, in order by key.</source>
          <target state="translated">获取映射值的可变迭器,按键的顺序排列。</target>
        </trans-unit>
        <trans-unit id="c387218a90a9bb1918a7924816b86e529b82f080" translate="yes" xml:space="preserve">
          <source>Gets a mutable pointer to the contained value. Reading from this pointer or turning it into a reference is undefined behavior unless the &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; is initialized.</source>
          <target state="translated">获取指向包含值的可变指针。除非初始化 &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; 否则从该指针读取或将其转换为引用是未定义的行为。</target>
        </trans-unit>
        <trans-unit id="b569ba746c83e8a3f0560e8c5640e4d7d0cf471a" translate="yes" xml:space="preserve">
          <source>Gets a mutable pointer to the first element of the array.</source>
          <target state="translated">获取一个指向数组中第一个元素的可变指针。</target>
        </trans-unit>
        <trans-unit id="93221faf609cb53b66eed583ddd8ff4650ad1090" translate="yes" xml:space="preserve">
          <source>Gets a mutable pointer to the wrapped value.</source>
          <target state="translated">获取一个指向封装值的可变指针。</target>
        </trans-unit>
        <trans-unit id="1afb8b1fa7a141c132899f91a60cb50d53c480a9" translate="yes" xml:space="preserve">
          <source>Gets a mutable pointer to the wrapped value. The difference to &lt;a href=&quot;#method.get&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; is that this function accepts a raw pointer, which is useful to avoid the creation of temporary references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7b2240ef54c761d6faa307793ba693f884b564" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the contained value.</source>
          <target state="translated">获取对包含的值的可变引用。</target>
        </trans-unit>
        <trans-unit id="baa6d6ef07f8226c5636c761217972d8dab55984" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the data inside of this &lt;code&gt;Pin&lt;/code&gt;.</source>
          <target state="translated">获取对此 &lt;code&gt;Pin&lt;/code&gt; 内部数据的可变引用。</target>
        </trans-unit>
        <trans-unit id="be59995f2e9c7b5e3f2085e347793a76d09f5142" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the key and value in the entry.</source>
          <target state="translated">获取条目中键和值的可变引用。</target>
        </trans-unit>
        <trans-unit id="392a07775c4cbc76c6f5c44ba9a3213fc2da81fd" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the key in the entry.</source>
          <target state="translated">获取条目中键的可变引用。</target>
        </trans-unit>
        <trans-unit id="5011a90347126d03d01127126a86107c5208ff3e" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the underlying reader.</source>
          <target state="translated">获取对底层读者的可变更引用。</target>
        </trans-unit>
        <trans-unit id="f2e7f5b6ab637a03072f9c7e9b6f73027700454e" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the underlying value in this cursor.</source>
          <target state="translated">获取对该游标底层值的可变引用。</target>
        </trans-unit>
        <trans-unit id="dec4b0e863c4ca94f197dad1d6d087c7c4489b09" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the underlying writer.</source>
          <target state="translated">获取对底层写作者的可变引用。</target>
        </trans-unit>
        <trans-unit id="46ecc0b581f4368e77b78de6bcf33878428bee2b" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the value in the entry.</source>
          <target state="translated">获取对条目中的值的可变引用。</target>
        </trans-unit>
        <trans-unit id="325584547464337b8a139f4e032f2c9235b63738" translate="yes" xml:space="preserve">
          <source>Gets a pinned mutable reference from this pinned pointer.</source>
          <target state="translated">从这个被钉住的指针中获取一个被钉住的可变引用。</target>
        </trans-unit>
        <trans-unit id="b99a2e7f3dd3f0850a631d924a0f85ceb5ab793c" translate="yes" xml:space="preserve">
          <source>Gets a pinned shared reference from this pinned pointer.</source>
          <target state="translated">从这个钉住的指针中获取一个钉住的共享引用。</target>
        </trans-unit>
        <trans-unit id="4518638a3643d66963581854e8f287c3740674d7" translate="yes" xml:space="preserve">
          <source>Gets a pointer to the contained value. Reading from this pointer or turning it into a reference is undefined behavior unless the &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; is initialized. Writing to memory that this pointer (non-transitively) points to is undefined behavior (except inside an &lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">获取指向包含值的指针。除非初始化 &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; 否则从该指针读取或将其转换为引用是未定义的行为。写入此指针（非传递性地）指向的内存是未定义的行为（ &lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt; 内部除外）。</target>
        </trans-unit>
        <trans-unit id="df26339f7815b59c7db8559b2dc091cf260e6a95" translate="yes" xml:space="preserve">
          <source>Gets a pointer to the first element of the array.</source>
          <target state="translated">获取一个指向数组中第一个元素的指针。</target>
        </trans-unit>
        <trans-unit id="51fc3b713ce675163511b6b7c0001b3242a0e070" translate="yes" xml:space="preserve">
          <source>Gets a reference to a static &lt;code&gt;Location&lt;/code&gt; indicating where it was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0b41d5362a52c7e2047db8d30137b1ccf260d5" translate="yes" xml:space="preserve">
          <source>Gets a reference to the contained value.</source>
          <target state="translated">获取对包含值的引用。</target>
        </trans-unit>
        <trans-unit id="cff65263d72903c422d0a7597523c0375366ab3b" translate="yes" xml:space="preserve">
          <source>Gets a reference to the key and value in the entry.</source>
          <target state="translated">获取对条目中的键和值的引用。</target>
        </trans-unit>
        <trans-unit id="a73b6b64fba7c9a4c0709973dbffd936a0e9fbd2" translate="yes" xml:space="preserve">
          <source>Gets a reference to the key in the entry.</source>
          <target state="translated">获取条目中钥匙的引用。</target>
        </trans-unit>
        <trans-unit id="feddda07d6595d79eeaf54c555c5ae797d32fafa" translate="yes" xml:space="preserve">
          <source>Gets a reference to the key that would be used when inserting a value through the &lt;code&gt;VacantEntry&lt;/code&gt;.</source>
          <target state="translated">获取对通过 &lt;code&gt;VacantEntry&lt;/code&gt; 插入值时将使用的键的引用。</target>
        </trans-unit>
        <trans-unit id="7ec6e3eeb0b6ad5023996187968d591cae5085ca" translate="yes" xml:space="preserve">
          <source>Gets a reference to the key that would be used when inserting a value through the VacantEntry.</source>
          <target state="translated">获取通过VacantEntry插入一个值时使用的键的引用。</target>
        </trans-unit>
        <trans-unit id="cf505aa88d1d27b7fd7210fea3eb5f424893e421" translate="yes" xml:space="preserve">
          <source>Gets a reference to the underlying reader.</source>
          <target state="translated">获取对底层读者的引用。</target>
        </trans-unit>
        <trans-unit id="bcf7058743e55a29769e9f52c6d7eb995745282c" translate="yes" xml:space="preserve">
          <source>Gets a reference to the underlying value in this cursor.</source>
          <target state="translated">获取这个游标的基础值的引用。</target>
        </trans-unit>
        <trans-unit id="cb7cc9508e37a0159bd3a7b3b0845509f330a592" translate="yes" xml:space="preserve">
          <source>Gets a reference to the underlying writer.</source>
          <target state="translated">获取对底层作者的引用。</target>
        </trans-unit>
        <trans-unit id="a9eb138b06bc622e04583407ce48c73c001c324e" translate="yes" xml:space="preserve">
          <source>Gets a reference to the value in the entry.</source>
          <target state="translated">获取对条目中数值的引用。</target>
        </trans-unit>
        <trans-unit id="bf39c650c88ad522e7aa25fef3aa0cf8f15445c4" translate="yes" xml:space="preserve">
          <source>Gets a shared reference out of a pin.</source>
          <target state="translated">从引脚中获取一个共享引用。</target>
        </trans-unit>
        <trans-unit id="c8d67ec62dc724790a39413d95104cb2f25712dc" translate="yes" xml:space="preserve">
          <source>Gets a shared reference to the contained value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7979bb5a2e24a20633426914599d65cc13e380ce" translate="yes" xml:space="preserve">
          <source>Gets a static string slice containing the name of a type.</source>
          <target state="translated">获取一个包含类型名称的静态字符串片断。</target>
        </trans-unit>
        <trans-unit id="a1f0dbc00515171edea6468d519fe0276ba8e73e" translate="yes" xml:space="preserve">
          <source>Gets an approximation of the number of &lt;code&gt;Weak&lt;/code&gt; pointers pointing to this allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe0c54b937e7b93e8f39dc4887850e732a02eae2" translate="yes" xml:space="preserve">
          <source>Gets an approximation of the number of &lt;code&gt;Weak&lt;/code&gt; pointers pointing to this value.</source>
          <target state="translated">获取指向该值的 &lt;code&gt;Weak&lt;/code&gt; 指针数量的近似值。</target>
        </trans-unit>
        <trans-unit id="234ebcadb6ac6bb0def6ad4173e0e189daeb1439" translate="yes" xml:space="preserve">
          <source>Gets an identifier which is globally unique to the specified type. This function will return the same value for a type regardless of whichever crate it is invoked in.</source>
          <target state="translated">获取指定类型的全局唯一标识符。无论在哪个箱子中调用,这个函数都会返回相同的值。</target>
        </trans-unit>
        <trans-unit id="77e393eb1ab1f3573f4cc8c8d9a6214bd3e5808e" translate="yes" xml:space="preserve">
          <source>Gets an iterator for moving out the &lt;code&gt;BTreeSet&lt;/code&gt;'s contents.</source>
          <target state="translated">获取用于移出 &lt;code&gt;BTreeSet&lt;/code&gt; 的内容的迭代器。</target>
        </trans-unit>
        <trans-unit id="11b43ebc9818fa3526a8e800dba2a829340904c9" translate="yes" xml:space="preserve">
          <source>Gets an iterator over the entries of the map, sorted by key.</source>
          <target state="translated">获取地图中按键排序的迭代器。</target>
        </trans-unit>
        <trans-unit id="4282f4ebb370a2d3e37842bf8bea7691a93cc17f" translate="yes" xml:space="preserve">
          <source>Gets an iterator over the keys of the map, in sorted order.</source>
          <target state="translated">获取地图中键的迭代器,按顺序排列。</target>
        </trans-unit>
        <trans-unit id="88cd2b443e0410f773c3db3b4b02c30273a29587" translate="yes" xml:space="preserve">
          <source>Gets an iterator over the values of the map, in order by key.</source>
          <target state="translated">获取一个迭代器,按照键的顺序遍历map的值。</target>
        </trans-unit>
        <trans-unit id="f7d58dcf7a90c88a6dd8d8e2a936de88caad9b01" translate="yes" xml:space="preserve">
          <source>Gets an iterator that visits the values in the &lt;code&gt;BTreeSet&lt;/code&gt; in ascending order.</source>
          <target state="translated">获取一个迭代器，该迭代器以升序访问 &lt;code&gt;BTreeSet&lt;/code&gt; 中的值。</target>
        </trans-unit>
        <trans-unit id="bf50547bde43305eadfc81da6c51963036f0b0bc" translate="yes" xml:space="preserve">
          <source>Gets mutable references to the underlying readers in this &lt;code&gt;Chain&lt;/code&gt;.</source>
          <target state="translated">获取对该 &lt;code&gt;Chain&lt;/code&gt; 中基础读者的可变引用。</target>
        </trans-unit>
        <trans-unit id="c5d75c4c07b578c3182dd1391a22f0515f568828" translate="yes" xml:space="preserve">
          <source>Gets references to the underlying readers in this &lt;code&gt;Chain&lt;/code&gt;.</source>
          <target state="translated">获取此 &lt;code&gt;Chain&lt;/code&gt; 中基础读者的引用。</target>
        </trans-unit>
        <trans-unit id="4099d19a8a1a54e1ad72f73ecdd2402a0b7a3136" translate="yes" xml:space="preserve">
          <source>Gets the &lt;code&gt;TypeId&lt;/code&gt; of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">获取 &lt;code&gt;TypeId&lt;/code&gt; 的 &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41602bda251eaed54ccea25679c0483e128331bf" translate="yes" xml:space="preserve">
          <source>Gets the &lt;code&gt;TypeId&lt;/code&gt; of &lt;code&gt;self&lt;/code&gt;. &lt;a href=&quot;../../../any/trait.any#tymethod.type_id&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">获取 &lt;code&gt;TypeId&lt;/code&gt; 的 &lt;code&gt;self&lt;/code&gt; 。&lt;a href=&quot;../../../any/trait.any#tymethod.type_id&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7397491fe536b6ab323bc3962fba8e1fb15e1948" translate="yes" xml:space="preserve">
          <source>Gets the &lt;code&gt;TypeId&lt;/code&gt; of &lt;code&gt;self&lt;/code&gt;. &lt;a href=&quot;../../any/trait.any#tymethod.type_id&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">获取 &lt;code&gt;TypeId&lt;/code&gt; 的 &lt;code&gt;self&lt;/code&gt; 。&lt;a href=&quot;../../any/trait.any#tymethod.type_id&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0958a5367c67c57557138ce54a3c5f59d233668" translate="yes" xml:space="preserve">
          <source>Gets the &lt;code&gt;TypeId&lt;/code&gt; of &lt;code&gt;self&lt;/code&gt;. &lt;a href=&quot;../any/trait.any#tymethod.type_id&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">获取 &lt;code&gt;TypeId&lt;/code&gt; 的 &lt;code&gt;self&lt;/code&gt; 。&lt;a href=&quot;../any/trait.any#tymethod.type_id&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0dc7f61a814ccb0f4c7bc6d983b16e56f33b8b7" translate="yes" xml:space="preserve">
          <source>Gets the &lt;code&gt;TypeId&lt;/code&gt; of &lt;code&gt;self&lt;/code&gt;. &lt;a href=&quot;any/trait.any#tymethod.type_id&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">获取 &lt;code&gt;TypeId&lt;/code&gt; 的 &lt;code&gt;self&lt;/code&gt; 。&lt;a href=&quot;any/trait.any#tymethod.type_id&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6053452902f00975747e0db67cb9da5bcc78254" translate="yes" xml:space="preserve">
          <source>Gets the &lt;code&gt;TypeId&lt;/code&gt; of &lt;code&gt;self&lt;/code&gt;. &lt;a href=&quot;trait.any#tymethod.type_id&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">获取 &lt;code&gt;TypeId&lt;/code&gt; 的 &lt;code&gt;self&lt;/code&gt; 。&lt;a href=&quot;trait.any#tymethod.type_id&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d07cea866f98bd65675b9dd23738ccd196ac1cc2" translate="yes" xml:space="preserve">
          <source>Gets the contents of the cell, initializing it with &lt;code&gt;f&lt;/code&gt; if the cell was empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab174bccc0a148e51be9702f79ce415dcabcb9d" translate="yes" xml:space="preserve">
          <source>Gets the contents of the cell, initializing it with &lt;code&gt;f&lt;/code&gt; if the cell was empty. If the cell was empty and &lt;code&gt;f&lt;/code&gt; failed, an error is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3d8aeac371c3726d0823d3e47870ae432d791d1" translate="yes" xml:space="preserve">
          <source>Gets the entire contents of the &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; as an array, if its size exactly matches that of the requested array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfed0516ca0cceacbef295ac249aa061f2675ee1" translate="yes" xml:space="preserve">
          <source>Gets the given key's corresponding entry in the map for in-place manipulation.</source>
          <target state="translated">获取给定的键在地图中的对应条目,进行原地操作。</target>
        </trans-unit>
        <trans-unit id="a6710692fb74181ac5da470b1ed946b91a9cf3b9" translate="yes" xml:space="preserve">
          <source>Gets the mutable reference to the underlying value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c299d04fef3ac60e871ddceb7fed1d58a4373a4" translate="yes" xml:space="preserve">
          <source>Gets the number of &lt;a href=&quot;struct.weak&quot;&gt;&lt;code&gt;Weak&lt;/code&gt;&lt;/a&gt; pointers to this allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82785258c5148ac429e819aa10802824ac7d2a46" translate="yes" xml:space="preserve">
          <source>Gets the number of &lt;a href=&quot;struct.weak&quot;&gt;&lt;code&gt;Weak&lt;/code&gt;&lt;/a&gt; pointers to this value.</source>
          <target state="translated">获取指向该值的&lt;a href=&quot;struct.weak&quot;&gt; &lt;code&gt;Weak&lt;/code&gt; &lt;/a&gt;指针的数量。</target>
        </trans-unit>
        <trans-unit id="ea2a4acdf77bc69347663f277f505d5ad15cc026" translate="yes" xml:space="preserve">
          <source>Gets the number of &lt;code&gt;Weak&lt;/code&gt; pointers pointing to this allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6bb90de6f3314e5b0aa7676e3fa2574049a5b1" translate="yes" xml:space="preserve">
          <source>Gets the number of &lt;code&gt;Weak&lt;/code&gt; pointers pointing to this value.</source>
          <target state="translated">获取指向该值的 &lt;code&gt;Weak&lt;/code&gt; 指针的数量。</target>
        </trans-unit>
        <trans-unit id="266325732ccd237fd7f26bfdb76bb89eb62a4114" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Arc&lt;/code&gt;) pointers pointing to this allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f33a15ae6da7b8fd099c7f81c55a8c43992a9c" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Arc&lt;/code&gt;) pointers pointing to this value.</source>
          <target state="translated">获取指向此值的强（ &lt;code&gt;Arc&lt;/code&gt; ）指针的数量。</target>
        </trans-unit>
        <trans-unit id="acc981beee8d18e67fc3a5059aa645efdb5cb013" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Arc&lt;/code&gt;) pointers to this allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9d8a68862d17ae50fe9b2191b4bc755a3b2c57" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Arc&lt;/code&gt;) pointers to this value.</source>
          <target state="translated">获取指向此值的强（ &lt;code&gt;Arc&lt;/code&gt; ）指针的数量。</target>
        </trans-unit>
        <trans-unit id="86df16ff86121c6f4046474b56b37a148e7c840c" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Rc&lt;/code&gt;) pointers pointing to this allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dfd6b399c6a7a5e5c213f4220d6a406180d8d29" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Rc&lt;/code&gt;) pointers pointing to this value.</source>
          <target state="translated">获取指向此值的强（ &lt;code&gt;Rc&lt;/code&gt; ）指针的数量。</target>
        </trans-unit>
        <trans-unit id="86da648c891a7c42ebdf312b33a4ab9ada05ef68" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Rc&lt;/code&gt;) pointers to this allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62256e04434cb17270e60d73bd90064ac287c70a" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Rc&lt;/code&gt;) pointers to this value.</source>
          <target state="translated">获取指向此值的强（ &lt;code&gt;Rc&lt;/code&gt; ）指针的数量。</target>
        </trans-unit>
        <trans-unit id="7b980936990012ea161b866d1758615b20bb0b9e" translate="yes" xml:space="preserve">
          <source>Gets the peer credentials for this Unix domain socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3996e0805427dc73c97f253744be6821d4757b9" translate="yes" xml:space="preserve">
          <source>Gets the reference to the underlying value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a803af3c996a7aeaae26131be70879a8de1e8ca" translate="yes" xml:space="preserve">
          <source>Gets the thread's name.</source>
          <target state="translated">获取线程的名称。</target>
        </trans-unit>
        <trans-unit id="49ee03c4c760e66b9e940fbfa2d32f04a888601b" translate="yes" xml:space="preserve">
          <source>Gets the thread's unique identifier.</source>
          <target state="translated">获取线程的唯一标识符。</target>
        </trans-unit>
        <trans-unit id="e80f24c5e15d0db75eb52ca4f146d8328ad163c8" translate="yes" xml:space="preserve">
          <source>Gets the underlying byte view of the &lt;a href=&quot;../../../ffi/struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; slice.</source>
          <target state="translated">获取&lt;a href=&quot;../../../ffi/struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt;切片的基础字节视图。</target>
        </trans-unit>
        <trans-unit id="7d3e5946e7ecbe9a325741ceead9ec7679286f06" translate="yes" xml:space="preserve">
          <source>Gets the underlying byte view of the &lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; slice. &lt;a href=&quot;../os/unix/ffi/trait.osstrext#tymethod.as_bytes&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce976fab972b71cb3689e58f2c81f4c1b2c23c3" translate="yes" xml:space="preserve">
          <source>Gets the underlying byte view of the [&lt;code&gt;OsStr&lt;/code&gt;] slice. &lt;a href=&quot;../os/unix/ffi/trait.osstrext#tymethod.as_bytes&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">获取[ &lt;code&gt;OsStr&lt;/code&gt; ] slice 的基础字节视图。&lt;a href=&quot;../os/unix/ffi/trait.osstrext#tymethod.as_bytes&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b70bb73da43a0dacb273f9c29de1ad90c047f9b2" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;code&gt;IPV6_MULTICAST_LOOP&lt;/code&gt; option for this socket.</source>
          <target state="translated">获取此套接字的 &lt;code&gt;IPV6_MULTICAST_LOOP&lt;/code&gt; 选项的值。</target>
        </trans-unit>
        <trans-unit id="541e09715c0e448d9ee0ceae38a6c62a42e062e7" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;code&gt;IP_MULTICAST_LOOP&lt;/code&gt; option for this socket.</source>
          <target state="translated">获取此套接字的 &lt;code&gt;IP_MULTICAST_LOOP&lt;/code&gt; 选项的值。</target>
        </trans-unit>
        <trans-unit id="ee99abd672fa0bc29c2f53bc51cd2022f7fe6174" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;code&gt;IP_MULTICAST_TTL&lt;/code&gt; option for this socket.</source>
          <target state="translated">获取此套接字的 &lt;code&gt;IP_MULTICAST_TTL&lt;/code&gt; 选项的值。</target>
        </trans-unit>
        <trans-unit id="ca264fa81bb9d68241254fa46d7aa2c2cda498bc" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;code&gt;IP_TTL&lt;/code&gt; option for this socket.</source>
          <target state="translated">获取此套接字的 &lt;code&gt;IP_TTL&lt;/code&gt; 选项的值。</target>
        </trans-unit>
        <trans-unit id="081675c2121b5c0eba69352ff7f20ab17e65e3d1" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;code&gt;SO_BROADCAST&lt;/code&gt; option for this socket.</source>
          <target state="translated">获取此套接字的 &lt;code&gt;SO_BROADCAST&lt;/code&gt; 选项的值。</target>
        </trans-unit>
        <trans-unit id="0f6a73f5b7aaab6427c36574dc2e96dbd9e394ff" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;code&gt;SO_ERROR&lt;/code&gt; option on this socket.</source>
          <target state="translated">获取此套接字上的 &lt;code&gt;SO_ERROR&lt;/code&gt; 选项的值。</target>
        </trans-unit>
        <trans-unit id="fd9694065ed8ce77dc78229e63dba85fa8ab43e4" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;code&gt;TCP_NODELAY&lt;/code&gt; option on this socket.</source>
          <target state="translated">获取此套接字上的 &lt;code&gt;TCP_NODELAY&lt;/code&gt; 选项的值。</target>
        </trans-unit>
        <trans-unit id="a351f54361bf1111912e96b2243de3d3ba2e710e" translate="yes" xml:space="preserve">
          <source>Getter for the underlying string to be searched in</source>
          <target state="translated">要搜索的底层字符串的获取器。</target>
        </trans-unit>
        <trans-unit id="946249472d59c612c049bc459ef794710e06ea0f" translate="yes" xml:space="preserve">
          <source>Getter for the underlying string to be searched in &lt;a href=&quot;trait.searcher#tymethod.haystack&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">在要搜索getter方法基础字符串&lt;a href=&quot;trait.searcher#tymethod.haystack&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">入门</target>
        </trans-unit>
        <trans-unit id="5995d36c171cb98f5012509471c6af75ae9b7b83" translate="yes" xml:space="preserve">
          <source>Getting a handle to the current thread with &lt;code&gt;thread::current()&lt;/code&gt;:</source>
          <target state="translated">使用 &lt;code&gt;thread::current()&lt;/code&gt; 获取当前线程的句柄：</target>
        </trans-unit>
        <trans-unit id="18ecec4eaf70488e9516f42f4c700b0d3f3801c9" translate="yes" xml:space="preserve">
          <source>Getting grapheme clusters from strings is complex, so this functionality is not provided by the standard library. Crates are available on &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt; if this is the functionality you need.</source>
          <target state="translated">从字符串获取字素簇很复杂，因此标准库不提供此功能。如果您需要此功能，则可在&lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt;上使用板条箱。</target>
        </trans-unit>
        <trans-unit id="40b8f0b0dd8c757df38c0efb486cc65a37413fd0" translate="yes" xml:space="preserve">
          <source>Getting immutable access to the contiguous slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce1a3d0561d101c4db29f248d240d379840a525" translate="yes" xml:space="preserve">
          <source>Give it text interactively by running the executable directly, in which case it will wait for the Enter key to be pressed before continuing</source>
          <target state="translated">通过直接运行可执行文件给它交互式的文本,在这种情况下,它将等待按下回车键后再继续运行。</target>
        </trans-unit>
        <trans-unit id="81432d4fe569ad1c70c83fd457057f8aff028c0e" translate="yes" xml:space="preserve">
          <source>Given &lt;code&gt;impl&amp;lt;P1..=Pn&amp;gt; Trait&amp;lt;T1..=Tn&amp;gt; for T0&lt;/code&gt;, an &lt;code&gt;impl&lt;/code&gt; is valid only if at least one of the following is true:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c541ca5b28906f0b0b887376717739a6ff63fa9" translate="yes" xml:space="preserve">
          <source>Given a function, or closure, there are drop scopes for:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460459e684630e18d67dce5af60c9aa1a9d7fe48" translate="yes" xml:space="preserve">
          <source>Given a list of integers, use a vector and return the mean (the average value), median (when sorted, the value in the middle position), and mode (the value that occurs most often; a hash map will be helpful here) of the list.</source>
          <target state="translated">给定一个整数列表,使用一个向量,并返回列表的平均值(平均值)、中位数(排序时,中间位置的值)和模式(出现频率最高的值;这里的哈希图会有帮助)。</target>
        </trans-unit>
        <trans-unit id="ea3d2794af8f5c0a103590ed2dfa3cbed7263acb" translate="yes" xml:space="preserve">
          <source>Given a path, query the file system to get information about a file, directory, etc.</source>
          <target state="translated">给定一个路径,查询文件系统以获取文件、目录等信息。</target>
        </trans-unit>
        <trans-unit id="caef16517cee4d24248fc21d836a1a72f7d7936b" translate="yes" xml:space="preserve">
          <source>Given an element the closure must return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. The returned iterator will yield only the elements for which the closure returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30386826e248fa1c007d69f26e43a06ce7da9de9" translate="yes" xml:space="preserve">
          <source>Given that a &lt;a href=&quot;../macro.panic&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt; will call &lt;code&gt;drop&lt;/code&gt; as it unwinds, any &lt;a href=&quot;../macro.panic&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt; in a &lt;code&gt;drop&lt;/code&gt; implementation will likely abort.</source>
          <target state="translated">鉴于&lt;a href=&quot;../macro.panic&quot;&gt; &lt;code&gt;panic!&lt;/code&gt; &lt;/a&gt;放松时会叫 &lt;code&gt;drop&lt;/code&gt; ，任何&lt;a href=&quot;../macro.panic&quot;&gt; &lt;code&gt;panic!&lt;/code&gt; &lt;/a&gt;在 &lt;code&gt;drop&lt;/code&gt; 实现中可能会中止。</target>
        </trans-unit>
        <trans-unit id="6263eb5ed7ee7fa0481696a92c8f43d9efb00e4c" translate="yes" xml:space="preserve">
          <source>Given that a &lt;a href=&quot;https://doc.rust-lang.org/core/macro.panic.html&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt; will call &lt;code&gt;drop&lt;/code&gt; as it unwinds, any &lt;a href=&quot;https://doc.rust-lang.org/core/macro.panic.html&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt; in a &lt;code&gt;drop&lt;/code&gt; implementation will likely abort.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e523f1998c41a0b9adf80292e1554bbf7101fb13" translate="yes" xml:space="preserve">
          <source>Given that the &lt;code&gt;String&lt;/code&gt; is empty, this will not allocate any initial buffer. While that means that this initial operation is very inexpensive, it may cause excessive allocation later when you add data. If you have an idea of how much data the &lt;code&gt;String&lt;/code&gt; will hold, consider the &lt;a href=&quot;#method.with_capacity&quot;&gt;&lt;code&gt;with_capacity&lt;/code&gt;&lt;/a&gt; method to prevent excessive re-allocation.</source>
          <target state="translated">假设 &lt;code&gt;String&lt;/code&gt; 为空，则不会分配任何初始缓冲区。虽然这意味着该初始操作非常便宜，但在以后添加数据时可能会导致过多的分配。如果您对 &lt;code&gt;String&lt;/code&gt; 可以容纳多少数据有所了解，请考虑使用&lt;a href=&quot;#method.with_capacity&quot;&gt; &lt;code&gt;with_capacity&lt;/code&gt; &lt;/a&gt;方法来防止过多的重新分配。</target>
        </trans-unit>
        <trans-unit id="a59bf69ea093a125173bce72323495b1305959b6" translate="yes" xml:space="preserve">
          <source>Given that the &lt;code&gt;String&lt;/code&gt; is empty, this will not allocate any initial buffer. While that means that this initial operation is very inexpensive, it may cause excessive allocation later when you add data. If you have an idea of how much data the &lt;code&gt;String&lt;/code&gt; will hold, consider the &lt;a href=&quot;struct.string#method.with_capacity&quot;&gt;&lt;code&gt;with_capacity&lt;/code&gt;&lt;/a&gt; method to prevent excessive re-allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad539d6fb0976a5b2b95b62832510a1f84220951" translate="yes" xml:space="preserve">
          <source>Given that the smart pointer pattern is a general design pattern used frequently in Rust, this chapter won&amp;rsquo;t cover every existing smart pointer. Many libraries have their own smart pointers, and you can even write your own. We&amp;rsquo;ll cover the most common smart pointers in the standard library:</source>
          <target state="translated">鉴于智能指针模式是Rust中经常使用的通用设计模式，因此本章不会涵盖所有现有的智能指针。许多库都有自己的智能指针，您甚至可以编写自己的指针。我们将介绍标准库中最常见的智能指针：</target>
        </trans-unit>
        <trans-unit id="4a31e9d96bd27c24e6fc00ba6a064634849de284" translate="yes" xml:space="preserve">
          <source>Given that we don't know what type the pointer is, and there's potential ambiguity for some types, we disallow calling methods on raw pointers when the type is unknown.</source>
          <target state="translated">考虑到我们不知道指针是什么类型,而且对某些类型有潜在的歧义,我们不允许在未知类型时调用原始指针上的方法。</target>
        </trans-unit>
        <trans-unit id="5f1184f7df96c5928092ad9c6b550699bf887826" translate="yes" xml:space="preserve">
          <source>Global</source>
          <target state="translated">Global</target>
        </trans-unit>
        <trans-unit id="597030c6c4f56fe393a1ab438473028f6c480a3f" translate="yes" xml:space="preserve">
          <source>Global::alloc</source>
          <target state="translated">Global::alloc</target>
        </trans-unit>
        <trans-unit id="bc8440f1b0fd5e4f27413dbc2c9588f0ac4b35e6" translate="yes" xml:space="preserve">
          <source>Global::alloc_array</source>
          <target state="translated">Global::alloc_array</target>
        </trans-unit>
        <trans-unit id="286809b4d3acafb6b79ba2357ef09d081752bcd8" translate="yes" xml:space="preserve">
          <source>Global::alloc_excess</source>
          <target state="translated">Global::alloc_excess</target>
        </trans-unit>
        <trans-unit id="055e192998c987cc2408347852310a7d777d50b2" translate="yes" xml:space="preserve">
          <source>Global::alloc_one</source>
          <target state="translated">Global::alloc_one</target>
        </trans-unit>
        <trans-unit id="4916367e840ff297f5f655976deb8d56431c82b1" translate="yes" xml:space="preserve">
          <source>Global::alloc_zeroed</source>
          <target state="translated">Global::alloc_zeroed</target>
        </trans-unit>
        <trans-unit id="422dfaa437889aa6a38e0ce319516d4e1aa7ccbe" translate="yes" xml:space="preserve">
          <source>Global::borrow</source>
          <target state="translated">Global::borrow</target>
        </trans-unit>
        <trans-unit id="7a0370da6de58c97a35cfc99cd0bed7729121756" translate="yes" xml:space="preserve">
          <source>Global::borrow_mut</source>
          <target state="translated">Global::borrow_mut</target>
        </trans-unit>
        <trans-unit id="f77b715da0c371e387a1c0cabbb0d1af068041af" translate="yes" xml:space="preserve">
          <source>Global::clone</source>
          <target state="translated">Global::clone</target>
        </trans-unit>
        <trans-unit id="50d4c87192aeed0b09b4440b16be390f6a750a2f" translate="yes" xml:space="preserve">
          <source>Global::clone_from</source>
          <target state="translated">Global::clone_from</target>
        </trans-unit>
        <trans-unit id="9cfb69614980015da407f6e7048f1148f4930023" translate="yes" xml:space="preserve">
          <source>Global::clone_into</source>
          <target state="translated">Global::clone_into</target>
        </trans-unit>
        <trans-unit id="7b2c4b961ebce1561e240a7194da73b5841efb82" translate="yes" xml:space="preserve">
          <source>Global::dealloc</source>
          <target state="translated">Global::dealloc</target>
        </trans-unit>
        <trans-unit id="1a080a708cdd5439e5302ec1934574d59cf90d7d" translate="yes" xml:space="preserve">
          <source>Global::dealloc_array</source>
          <target state="translated">Global::dealloc_array</target>
        </trans-unit>
        <trans-unit id="d428b88cec77fa2bb91fead3f27848981c76580d" translate="yes" xml:space="preserve">
          <source>Global::dealloc_one</source>
          <target state="translated">Global::dealloc_one</target>
        </trans-unit>
        <trans-unit id="995b6ad6ac004f90a18a104ffb9147bf847cb8d1" translate="yes" xml:space="preserve">
          <source>Global::default</source>
          <target state="translated">Global::default</target>
        </trans-unit>
        <trans-unit id="76169c6a841dcf12cff8e0b09058ec8d2b45201d" translate="yes" xml:space="preserve">
          <source>Global::fmt</source>
          <target state="translated">Global::fmt</target>
        </trans-unit>
        <trans-unit id="5c3cece4620e1e6edac7a400fcf912adfe0d27cb" translate="yes" xml:space="preserve">
          <source>Global::from</source>
          <target state="translated">Global::from</target>
        </trans-unit>
        <trans-unit id="a59d2fc290a04b6f0c31c9e50dafd716b2e306ed" translate="yes" xml:space="preserve">
          <source>Global::grow_in_place</source>
          <target state="translated">Global::grow_in_place</target>
        </trans-unit>
        <trans-unit id="25a7d5ad4d365ca4c966f334f3295d6b1ceaaf1d" translate="yes" xml:space="preserve">
          <source>Global::into</source>
          <target state="translated">Global::into</target>
        </trans-unit>
        <trans-unit id="ce7a411799e0b5091e1cb6d261729a98fde69476" translate="yes" xml:space="preserve">
          <source>Global::realloc</source>
          <target state="translated">Global::realloc</target>
        </trans-unit>
        <trans-unit id="55cd704a6f196baec10e6f8fc46f13be6be1a4da" translate="yes" xml:space="preserve">
          <source>Global::realloc_array</source>
          <target state="translated">Global::realloc_array</target>
        </trans-unit>
        <trans-unit id="2dc3bca035c872b5fad904a8f47f338aa69c712d" translate="yes" xml:space="preserve">
          <source>Global::realloc_excess</source>
          <target state="translated">Global::realloc_excess</target>
        </trans-unit>
        <trans-unit id="2eba0652c97a930f2bb92b95f7d1bce1986c871b" translate="yes" xml:space="preserve">
          <source>Global::shrink_in_place</source>
          <target state="translated">Global::shrink_in_place</target>
        </trans-unit>
        <trans-unit id="736720c59f4f431a038c46cc3aa525e5758a39ba" translate="yes" xml:space="preserve">
          <source>Global::to_owned</source>
          <target state="translated">Global::to_owned</target>
        </trans-unit>
        <trans-unit id="8ce6860d43ee49cdb5334bdd351c1035cc8ff38c" translate="yes" xml:space="preserve">
          <source>Global::try_from</source>
          <target state="translated">Global::try_from</target>
        </trans-unit>
        <trans-unit id="617366a681bd521ad66de932f01b46a609e71cb1" translate="yes" xml:space="preserve">
          <source>Global::try_into</source>
          <target state="translated">Global::try_into</target>
        </trans-unit>
        <trans-unit id="a23ee2c26cf33d2d9d02972f8660c76e5304674f" translate="yes" xml:space="preserve">
          <source>Global::type_id</source>
          <target state="translated">Global::type_id</target>
        </trans-unit>
        <trans-unit id="af4b996fed7b58c24cbe5ab00c833b6e42a8a4d4" translate="yes" xml:space="preserve">
          <source>Global::usable_size</source>
          <target state="translated">Global::usable_size</target>
        </trans-unit>
        <trans-unit id="240acfbbf20ecc23d32a755b89f3059599c547b8" translate="yes" xml:space="preserve">
          <source>GlobalAlloc</source>
          <target state="translated">GlobalAlloc</target>
        </trans-unit>
        <trans-unit id="fc670f003f08164e69bb95fb98d8c6ed228f9f51" translate="yes" xml:space="preserve">
          <source>GlobalAlloc::alloc</source>
          <target state="translated">GlobalAlloc::alloc</target>
        </trans-unit>
        <trans-unit id="90c20880262c918bb85b13b512a72e9595a71d28" translate="yes" xml:space="preserve">
          <source>GlobalAlloc::alloc_zeroed</source>
          <target state="translated">GlobalAlloc::alloc_zeroed</target>
        </trans-unit>
        <trans-unit id="aebfa8de2c70a18e38a89cd348582fe45986c6b2" translate="yes" xml:space="preserve">
          <source>GlobalAlloc::dealloc</source>
          <target state="translated">GlobalAlloc::dealloc</target>
        </trans-unit>
        <trans-unit id="fe2c144d895a892ee23f306ecdb0f1fde3f96ad7" translate="yes" xml:space="preserve">
          <source>GlobalAlloc::realloc</source>
          <target state="translated">GlobalAlloc::realloc</target>
        </trans-unit>
        <trans-unit id="7427cf697be16a4ec1d916910128a59d920125e7" translate="yes" xml:space="preserve">
          <source>Glossary</source>
          <target state="translated">Glossary</target>
        </trans-unit>
        <trans-unit id="2514908c36408ef2ed4444834c9f5ccbe93b670b" translate="yes" xml:space="preserve">
          <source>Glue for usage of the &lt;a href=&quot;../macro.write&quot;&gt;&lt;code&gt;write!&lt;/code&gt;&lt;/a&gt; macro with implementors of this trait.</source>
          <target state="translated">胶水的用法&lt;a href=&quot;../macro.write&quot;&gt; &lt;code&gt;write!&lt;/code&gt; &lt;/a&gt;具有此特征的实现者的宏。</target>
        </trans-unit>
        <trans-unit id="3a1c017ccb35f05e8443d7a3eddb7ce45674e092" translate="yes" xml:space="preserve">
          <source>Glue for usage of the &lt;a href=&quot;../macro.write&quot;&gt;&lt;code&gt;write!&lt;/code&gt;&lt;/a&gt; macro with implementors of this trait. &lt;a href=&quot;../fmt/trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1dbe04d6160f33e99282ce3fd010eb4fb67bcb2" translate="yes" xml:space="preserve">
          <source>Glue for usage of the &lt;a href=&quot;../macro.write&quot;&gt;&lt;code&gt;write!&lt;/code&gt;&lt;/a&gt; macro with implementors of this trait. &lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801bded4f0d6ed0381cd90ad308e8e87612227ff" translate="yes" xml:space="preserve">
          <source>Glue for usage of the &lt;a href=&quot;macro.write&quot;&gt;&lt;code&gt;write!&lt;/code&gt;&lt;/a&gt; macro with implementors of this trait. &lt;a href=&quot;fmt/trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f9aa2e6d4ad074b5cfe6a907121a6231effb73" translate="yes" xml:space="preserve">
          <source>Glue for usage of the [&lt;code&gt;write!&lt;/code&gt;] macro with implementors of this trait. &lt;a href=&quot;../fmt/trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">胶水用于[ &lt;code&gt;write!&lt;/code&gt; ]宏以及该特性的实现者。&lt;a href=&quot;../fmt/trait.write#method.write_fmt&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34773aa1db362e995011ad93000d8b9d338dfdd1" translate="yes" xml:space="preserve">
          <source>Glue for usage of the [&lt;code&gt;write!&lt;/code&gt;] macro with implementors of this trait. &lt;a href=&quot;fmt/trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">胶水用于[ &lt;code&gt;write!&lt;/code&gt; ]宏以及该特性的实现者。&lt;a href=&quot;fmt/trait.write#method.write_fmt&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bbef5a72f8aabf3ae93fcc57e62c0a0223a518e5" translate="yes" xml:space="preserve">
          <source>Glue for usage of the [&lt;code&gt;write!&lt;/code&gt;] macro with implementors of this trait. &lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">胶水用于[ &lt;code&gt;write!&lt;/code&gt; ]宏以及该特性的实现者。&lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="103e6499a37e08740be45a6eeb4c1b026a8ac079" translate="yes" xml:space="preserve">
          <source>Go into the &lt;em&gt;hello_cargo&lt;/em&gt; directory and list the files. You&amp;rsquo;ll see that Cargo has generated two files and one directory for us: a &lt;em&gt;Cargo.toml&lt;/em&gt; file and a &lt;em&gt;src&lt;/em&gt; directory with a &lt;em&gt;main.rs&lt;/em&gt; file inside.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
