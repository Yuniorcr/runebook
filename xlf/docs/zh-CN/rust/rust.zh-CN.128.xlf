<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="88640dffcf207b874bdca27192e40ad25f550caf" translate="yes" xml:space="preserve">
          <source>Returns the read timeout of this socket.</source>
          <target state="translated">返回该套接字的读取超时时间。</target>
        </trans-unit>
        <trans-unit id="5ea8cd21e899dde4ef3730be8e94fce1fe13c572" translate="yes" xml:space="preserve">
          <source>Returns the remainder of an unchecked division, resulting in undefined behavior where y = 0 or x = &lt;code&gt;T::MIN&lt;/code&gt; and y = -1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ef261a1b92a9a4b088c4c70c49986d741571ac" translate="yes" xml:space="preserve">
          <source>Returns the remainder of an unchecked division, resulting in undefined behavior where y = 0 or x = &lt;code&gt;T::min_value()&lt;/code&gt; and y = -1</source>
          <target state="translated">返回未经检查的除法的其余部分，从而导致未定义的行为，其中y = 0或x = &lt;code&gt;T::min_value()&lt;/code&gt; 且y = -1</target>
        </trans-unit>
        <trans-unit id="806d06dcbf92ab05dcfe63d70b146835efc0932e" translate="yes" xml:space="preserve">
          <source>Returns the remainder of the original slice that is not going to be returned by the iterator. The returned slice has at most &lt;code&gt;N-1&lt;/code&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc5f23684b71c80bcea64e7b07dfcd58a70e8023" translate="yes" xml:space="preserve">
          <source>Returns the remainder of the original slice that is not going to be returned by the iterator. The returned slice has at most &lt;code&gt;chunk_size-1&lt;/code&gt; elements.</source>
          <target state="translated">返回迭代器将不会返回的原始切片的其余部分。返回的切片最多具有 &lt;code&gt;chunk_size-1&lt;/code&gt; 个元素。</target>
        </trans-unit>
        <trans-unit id="fd0dfb5ec6eaddd847ec72cc05e6d88b1bed5b75" translate="yes" xml:space="preserve">
          <source>Returns the remaining (sub)string of this iterator as a slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a157d0e715a8c9d1c559dc1fad65fa0f8ba1d9" translate="yes" xml:space="preserve">
          <source>Returns the remaining items of this iterator as a mutable slice.</source>
          <target state="translated">返回迭代器中剩余的项目,作为一个可变分片。</target>
        </trans-unit>
        <trans-unit id="027545cdbb69dd8feabe3057b3d85880ce87cfaf" translate="yes" xml:space="preserve">
          <source>Returns the remaining items of this iterator as a slice.</source>
          <target state="translated">以分片的形式返回这个迭代器的剩余项目。</target>
        </trans-unit>
        <trans-unit id="5ab3aa67dfc786bc08d01fb6227be4aea4004418" translate="yes" xml:space="preserve">
          <source>Returns the remaining spare capacity of the vector as a slice of &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abbc1df3f511a61b305b46fcb9fdb889f766936b" translate="yes" xml:space="preserve">
          <source>Returns the result of an unchecked addition, resulting in undefined behavior when &lt;code&gt;x + y &amp;gt; T::MAX&lt;/code&gt; or &lt;code&gt;x + y &amp;lt; T::MIN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70fc3f0c75305aeeca36c3927e9f1404a9e09390" translate="yes" xml:space="preserve">
          <source>Returns the result of an unchecked addition, resulting in undefined behavior when &lt;code&gt;x + y &amp;gt; T::max_value()&lt;/code&gt; or &lt;code&gt;x + y &amp;lt; T::min_value()&lt;/code&gt;.</source>
          <target state="translated">返回未经检查的加法结果，当 &lt;code&gt;x + y &amp;gt; T::max_value()&lt;/code&gt; 或 &lt;code&gt;x + y &amp;lt; T::min_value()&lt;/code&gt; 时，导致未定义的行为。</target>
        </trans-unit>
        <trans-unit id="b5737e2a90e952931b3da37731b673f06fdd1624" translate="yes" xml:space="preserve">
          <source>Returns the result of an unchecked multiplication, resulting in undefined behavior when &lt;code&gt;x * y &amp;gt; T::MAX&lt;/code&gt; or &lt;code&gt;x * y &amp;lt; T::MIN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9745bee6c80d896cf8f39d7600119e7d9e0b6e6" translate="yes" xml:space="preserve">
          <source>Returns the result of an unchecked multiplication, resulting in undefined behavior when &lt;code&gt;x * y &amp;gt; T::max_value()&lt;/code&gt; or &lt;code&gt;x * y &amp;lt; T::min_value()&lt;/code&gt;.</source>
          <target state="translated">返回未经检查的乘法的结果，当 &lt;code&gt;x * y &amp;gt; T::max_value()&lt;/code&gt; 或 &lt;code&gt;x * y &amp;lt; T::min_value()&lt;/code&gt; 时，导致不确定的行为。</target>
        </trans-unit>
        <trans-unit id="de414e90ec1393c95c07a4e47e5e93f614417b18" translate="yes" xml:space="preserve">
          <source>Returns the result of an unchecked substraction, resulting in undefined behavior when &lt;code&gt;x - y &amp;gt; T::max_value()&lt;/code&gt; or &lt;code&gt;x - y &amp;lt; T::min_value()&lt;/code&gt;.</source>
          <target state="translated">返回未经检查的减法的结果，当 &lt;code&gt;x - y &amp;gt; T::max_value()&lt;/code&gt; 或 &lt;code&gt;x - y &amp;lt; T::min_value()&lt;/code&gt; 时，导致不确定的行为。</target>
        </trans-unit>
        <trans-unit id="64c4926926f86f33410ade9b87a59fa898e299fa" translate="yes" xml:space="preserve">
          <source>Returns the result of an unchecked subtraction, resulting in undefined behavior when &lt;code&gt;x - y &amp;gt; T::MAX&lt;/code&gt; or &lt;code&gt;x - y &amp;lt; T::MIN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae3db5fb2b9f920328b0a1c07245a941fda453a" translate="yes" xml:space="preserve">
          <source>Returns the rights applied to this file.</source>
          <target state="translated">返回应用于该文件的权限。</target>
        </trans-unit>
        <trans-unit id="fa0c068d11859365b18192e20c77088112832e94" translate="yes" xml:space="preserve">
          <source>Returns the rights applied to this file. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.mode&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">返回应用于此文件的权限。&lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.mode&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee530c291660835f1f45ef41a5ab581ece61ca13" translate="yes" xml:space="preserve">
          <source>Returns the scope ID associated with this address.</source>
          <target state="translated">返回与此地址相关联的作用域ID。</target>
        </trans-unit>
        <trans-unit id="678c9b03c50c34623a2e47a9879f160e0a560b4f" translate="yes" xml:space="preserve">
          <source>Returns the second argument if the comparison determines them to be equal.</source>
          <target state="translated">如果比较确定它们相等,则返回第二个参数。</target>
        </trans-unit>
        <trans-unit id="ff680bbab3415d4c9f332372b7218874374e1ad6" translate="yes" xml:space="preserve">
          <source>Returns the sine of an &lt;code&gt;f32&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;f32&lt;/code&gt; 的正弦值。</target>
        </trans-unit>
        <trans-unit id="488db317dfe78ab272e32db4af358f727947f930" translate="yes" xml:space="preserve">
          <source>Returns the sine of an &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;f64&lt;/code&gt; 的正弦值。</target>
        </trans-unit>
        <trans-unit id="893ab8c9895f0365c4b58fcc52206bd9e9ee20c1" translate="yes" xml:space="preserve">
          <source>Returns the sixteen eight-bit integers the IPv6 address consists of.</source>
          <target state="translated">返回IPv6地址所包含的16个8位整数。</target>
        </trans-unit>
        <trans-unit id="7ad6de0505e79afe733be59c25c78e77748c9ec6" translate="yes" xml:space="preserve">
          <source>Returns the size of a type in bytes.</source>
          <target state="translated">返回类型的大小,单位为字节。</target>
        </trans-unit>
        <trans-unit id="4ab55a093c4d747f70a70ca22d5f574fecd8954f" translate="yes" xml:space="preserve">
          <source>Returns the size of the file (if it is a regular file or a symbolic link) in bytes.</source>
          <target state="translated">返回文件的大小(如果是常规文件或符号链接),单位为字节。</target>
        </trans-unit>
        <trans-unit id="ab6857e7ad65f594a548e2232b4c32d4c45dc30a" translate="yes" xml:space="preserve">
          <source>Returns the size of the file (if it is a regular file or a symbolic link) in bytes. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_size&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">返回文件的大小（如果是常规文件或符号链接），以字节为单位。&lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_size&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="596ea0232a4d065a64fde2f486071c2a597a139d" translate="yes" xml:space="preserve">
          <source>Returns the size of the file, in bytes, this metadata is for.</source>
          <target state="translated">返回该元数据的文件大小,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="e3c2387c476eb088dd4a2b997b29073bc3408f87" translate="yes" xml:space="preserve">
          <source>Returns the size of the pointed-to value in bytes.</source>
          <target state="translated">返回指向值的大小,单位为字节。</target>
        </trans-unit>
        <trans-unit id="32bf033f7107839197600c893b817513a6c17e0d" translate="yes" xml:space="preserve">
          <source>Returns the smallest integer greater than or equal to a number.</source>
          <target state="translated">返回大于或等于一个数字的最小整数。</target>
        </trans-unit>
        <trans-unit id="b59a3f2aa87e88bf5431631e4df52338b23c8902" translate="yes" xml:space="preserve">
          <source>Returns the smallest integer greater than or equal to an &lt;code&gt;f32&lt;/code&gt;.</source>
          <target state="translated">返回大于或等于 &lt;code&gt;f32&lt;/code&gt; 的最小整数。</target>
        </trans-unit>
        <trans-unit id="28bd143b890a1dd19b9c42465e4a4e0673681aeb" translate="yes" xml:space="preserve">
          <source>Returns the smallest integer greater than or equal to an &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="translated">返回大于或等于 &lt;code&gt;f64&lt;/code&gt; 的最小整数。</target>
        </trans-unit>
        <trans-unit id="b7e460cb206a1385113e4f9b7160a6a8e71b5cd3" translate="yes" xml:space="preserve">
          <source>Returns the smallest power of two greater than or equal to &lt;code&gt;n&lt;/code&gt;. If the next power of two is greater than the type's maximum value, &lt;code&gt;None&lt;/code&gt; is returned, otherwise the power of two is wrapped in &lt;code&gt;Some&lt;/code&gt;.</source>
          <target state="translated">返回大于或等于 &lt;code&gt;n&lt;/code&gt; 的2的最小幂。如果下一个2的幂大于该类型的最大值，则返回 &lt;code&gt;None&lt;/code&gt; ，否则将2的幂包装在 &lt;code&gt;Some&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="9c18590c98b090fd7b97738ceeb4be855663893a" translate="yes" xml:space="preserve">
          <source>Returns the smallest power of two greater than or equal to &lt;code&gt;n&lt;/code&gt;. If the next power of two is greater than the type's maximum value, the return value is wrapped to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">返回大于或等于 &lt;code&gt;n&lt;/code&gt; 的2的最小幂。如果下一个2的幂大于类型的最大值，则将返回值包装为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4cd3eec23838310ec32b907db88edb3cc932a796" translate="yes" xml:space="preserve">
          <source>Returns the smallest power of two greater than or equal to &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">返回大于或等于 &lt;code&gt;self&lt;/code&gt; 的2的最小幂。</target>
        </trans-unit>
        <trans-unit id="a7ad453b16957fdb2bb77c37c31544afecd12301" translate="yes" xml:space="preserve">
          <source>Returns the smallest value that can be represented by this integer type.</source>
          <target state="translated">返回该整数类型所能代表的最小值。</target>
        </trans-unit>
        <trans-unit id="290cdc5140b6389d4b43579e0a84d62136cf1260" translate="yes" xml:space="preserve">
          <source>Returns the socket address of the local half of this TCP connection.</source>
          <target state="translated">返回该TCP连接的本地一半的套接字地址。</target>
        </trans-unit>
        <trans-unit id="8c7f1ae8ae82d29fa352423e4b438aa08dc9cba8" translate="yes" xml:space="preserve">
          <source>Returns the socket address of the local half of this connection.</source>
          <target state="translated">返回该连接的本地半部分的套接字地址。</target>
        </trans-unit>
        <trans-unit id="006b46ce56639d41f45e56bf9edb9ba2eea62e08" translate="yes" xml:space="preserve">
          <source>Returns the socket address of the remote half of this connection.</source>
          <target state="translated">返回该连接的远端一半的套接字地址。</target>
        </trans-unit>
        <trans-unit id="3356af1c420785b78b73f03cb8b8639ef4169753" translate="yes" xml:space="preserve">
          <source>Returns the socket address of the remote peer of this TCP connection.</source>
          <target state="translated">返回该TCP连接的远程对等体的套接字地址。</target>
        </trans-unit>
        <trans-unit id="be0156fe45dd769b5dac60a507d422d80dac537b" translate="yes" xml:space="preserve">
          <source>Returns the socket address of the remote peer this socket was connected to.</source>
          <target state="translated">返回该套接字所连接的远程对等体的套接字地址。</target>
        </trans-unit>
        <trans-unit id="95355a6d70618c715f149c9a5ebd25a9a16c9ce9" translate="yes" xml:space="preserve">
          <source>Returns the socket address that this socket was created from.</source>
          <target state="translated">返回该套接字的创建地址。</target>
        </trans-unit>
        <trans-unit id="91ccde3304769ed5877c00e052aec5a0535d7ea9" translate="yes" xml:space="preserve">
          <source>Returns the source location of the caller of this function. If that function's caller is annotated then its call location will be returned, and so on up the stack to the first call within a non-tracked function body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d91af5a12b9cefb8820321cc141efdd296d7610c" translate="yes" xml:space="preserve">
          <source>Returns the square root of a number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460cfbdbb3f494bb341f4d449e902bb3420d8045" translate="yes" xml:space="preserve">
          <source>Returns the square root of an &lt;code&gt;f32&lt;/code&gt;</source>
          <target state="translated">返回 &lt;code&gt;f32&lt;/code&gt; 的平方根</target>
        </trans-unit>
        <trans-unit id="bd0e705be2c1897c62ebbdeff195d246b2dda06d" translate="yes" xml:space="preserve">
          <source>Returns the square root of an &lt;code&gt;f64&lt;/code&gt;</source>
          <target state="translated">返回 &lt;code&gt;f64&lt;/code&gt; 的平方根</target>
        </trans-unit>
        <trans-unit id="6a1843677592374dc17851134c3d54d3f7223126" translate="yes" xml:space="preserve">
          <source>Returns the start value as a &lt;code&gt;Bound&lt;/code&gt;.</source>
          <target state="translated">以 &lt;code&gt;Bound&lt;/code&gt; 形式返回起始值。</target>
        </trans-unit>
        <trans-unit id="116a6689c371cfd5ef6c7093fabfdfa749dde9ca" translate="yes" xml:space="preserve">
          <source>Returns the status of this backtrace, indicating whether this backtrace request was unsupported, disabled, or a stack trace was actually captured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b86a33bd5aa1ecdb4f8e9a240ff20d86b527ec" translate="yes" xml:space="preserve">
          <source>Returns the symmetric difference of &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; as a new &lt;code&gt;BTreeSet&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;self&lt;/code&gt; 和 &lt;code&gt;rhs&lt;/code&gt; 的对称差作为新的 &lt;code&gt;BTreeSet&amp;lt;T&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc1aaf74dc56c8a619e913235e8c7aa762c9a44d" translate="yes" xml:space="preserve">
          <source>Returns the symmetric difference of &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; as a new &lt;code&gt;HashSet&amp;lt;T, S&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;self&lt;/code&gt; 和 &lt;code&gt;rhs&lt;/code&gt; 的对称差作为新的 &lt;code&gt;HashSet&amp;lt;T, S&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21d51347b12d3977a2076de884aca1ad5ba99d04" translate="yes" xml:space="preserve">
          <source>Returns the system time corresponding to &quot;now&quot;.</source>
          <target state="translated">返回 &quot;现在 &quot;对应的系统时间。</target>
        </trans-unit>
        <trans-unit id="afe3d9242e2d934af6d07a4b1dac82abbdabeb6a" translate="yes" xml:space="preserve">
          <source>Returns the total number of nanoseconds contained by this &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">返回此 &lt;code&gt;Duration&lt;/code&gt; 所包含的纳秒总数。</target>
        </trans-unit>
        <trans-unit id="b247e92aea7b5cee1ffa599a624b89bcad6f6857" translate="yes" xml:space="preserve">
          <source>Returns the total number of whole microseconds contained by this &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">返回此 &lt;code&gt;Duration&lt;/code&gt; 包含的总微秒数。</target>
        </trans-unit>
        <trans-unit id="b345394e3cbbefe1c77de3c579ece46340bb34f8" translate="yes" xml:space="preserve">
          <source>Returns the total number of whole milliseconds contained by this &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">返回此 &lt;code&gt;Duration&lt;/code&gt; 包含的总毫秒数。</target>
        </trans-unit>
        <trans-unit id="ed5f25a2b2709329320e75ee032e7a629d1410c5" translate="yes" xml:space="preserve">
          <source>Returns the total size of this file in bytes.</source>
          <target state="translated">返回该文件的总大小,单位为字节。</target>
        </trans-unit>
        <trans-unit id="8622948abb4c3129687690dd304247bb6571bcc2" translate="yes" xml:space="preserve">
          <source>Returns the total size of this file in bytes. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.size&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">返回此文件的总大小（以字节为单位）。&lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.size&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4040f71366469bc690c4ccd7ecefc49d3e076068" translate="yes" xml:space="preserve">
          <source>Returns the two raw pointers spanning the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea66515e0299f048802d6c53a06e60586e915e7" translate="yes" xml:space="preserve">
          <source>Returns the two unsafe mutable pointers spanning the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c25cff868d33e26c28d926991fe9caa5cb98d81" translate="yes" xml:space="preserve">
          <source>Returns the underlying &lt;code&gt;d_ino&lt;/code&gt; field in the contained &lt;code&gt;dirent&lt;/code&gt; structure.</source>
          <target state="translated">返回所包含的 &lt;code&gt;dirent&lt;/code&gt; 结构中的基础 &lt;code&gt;d_ino&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="b89f96114e1ef82606c3f4d6bfbaaa27228d7362" translate="yes" xml:space="preserve">
          <source>Returns the underlying &lt;code&gt;d_ino&lt;/code&gt; field in the contained &lt;code&gt;dirent&lt;/code&gt; structure. &lt;a href=&quot;../os/unix/fs/trait.direntryext#tymethod.ino&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">返回所包含的 &lt;code&gt;dirent&lt;/code&gt; 结构中的基础 &lt;code&gt;d_ino&lt;/code&gt; 字段。&lt;a href=&quot;../os/unix/fs/trait.direntryext#tymethod.ino&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="71b833977f125414585afe78c2a30e982ea7a3c2" translate="yes" xml:space="preserve">
          <source>Returns the underlying raw &lt;code&gt;st_mode&lt;/code&gt; bits that contain the standard Unix permissions for this file.</source>
          <target state="translated">返回包含此文件的标准Unix权限的基础原始 &lt;code&gt;st_mode&lt;/code&gt; 位。</target>
        </trans-unit>
        <trans-unit id="e0e96412d993c2edb28c5bf3ea18e69b86632385" translate="yes" xml:space="preserve">
          <source>Returns the underlying raw &lt;code&gt;st_mode&lt;/code&gt; bits that contain the standard Unix permissions for this file. &lt;a href=&quot;../os/unix/fs/trait.permissionsext#tymethod.mode&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">返回包含此文件的标准Unix权限的基础原始 &lt;code&gt;st_mode&lt;/code&gt; 位。&lt;a href=&quot;../os/unix/fs/trait.permissionsext#tymethod.mode&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0e272c3d22ad5b5acb84c6c9e56981705ea1a81" translate="yes" xml:space="preserve">
          <source>Returns the union of &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; as a new &lt;code&gt;BTreeSet&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;self&lt;/code&gt; 和 &lt;code&gt;rhs&lt;/code&gt; 的并集作为新的 &lt;code&gt;BTreeSet&amp;lt;T&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="334d0670ad0fa6aca1264ca018365740fad472eb" translate="yes" xml:space="preserve">
          <source>Returns the union of &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; as a new &lt;code&gt;HashSet&amp;lt;T, S&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;self&lt;/code&gt; 和 &lt;code&gt;rhs&lt;/code&gt; 的并集作为新的 &lt;code&gt;HashSet&amp;lt;T, S&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d905f4d6997cd1a5fd676b9c358c17f6454381c4" translate="yes" xml:space="preserve">
          <source>Returns the unpaired surrogate which caused this error.</source>
          <target state="translated">返回导致该错误的未配对代孕。</target>
        </trans-unit>
        <trans-unit id="d89ba898545e92c59008e3e9e9e9e2ca5c4c79b6" translate="yes" xml:space="preserve">
          <source>Returns the upper bound of the range (inclusive).</source>
          <target state="translated">返回范围的上界(含)。</target>
        </trans-unit>
        <trans-unit id="99d0f8c4096bad66de3f1182c097eca425647b98" translate="yes" xml:space="preserve">
          <source>Returns the uppercase equivalent of this string slice, as a new &lt;a href=&quot;string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以新的&lt;a href=&quot;string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; 形式&lt;/a&gt;返回此字符串切片的大写形式。</target>
        </trans-unit>
        <trans-unit id="101c75b29fcce7c17fe86967d0f82bfb6bee7742" translate="yes" xml:space="preserve">
          <source>Returns the uppercase equivalent of this string slice, as a new &lt;a href=&quot;struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489a80d3875efc73c9834c732a48c5d439a2a33b" translate="yes" xml:space="preserve">
          <source>Returns the user ID of the file owner.</source>
          <target state="translated">返回文件所有者的用户ID。</target>
        </trans-unit>
        <trans-unit id="a2fd3d78d551c5bf85a307804e004ebbb3d4322f" translate="yes" xml:space="preserve">
          <source>Returns the user ID of the file owner. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_uid&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">返回文件所有者的用户标识。&lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_uid&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="abc0b77fc35d749ebc9192e80bcc0edc4e827a6a" translate="yes" xml:space="preserve">
          <source>Returns the user ID of the owner of this file.</source>
          <target state="translated">返回此文件所有者的用户ID。</target>
        </trans-unit>
        <trans-unit id="a7f382c8ce378856de3a313aabb11958470a144d" translate="yes" xml:space="preserve">
          <source>Returns the user ID of the owner of this file. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.uid&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">返回此文件所有者的用户标识。&lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.uid&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="938f665fa2f6e8ca3e23318a1ecb7d846f60d130" translate="yes" xml:space="preserve">
          <source>Returns the value as a primitive type.</source>
          <target state="translated">返回一个基元类型的值。</target>
        </trans-unit>
        <trans-unit id="d96c8a0ebc9847b35c0e2a2a28868ecaf96fbf28" translate="yes" xml:space="preserve">
          <source>Returns the value of the 'HOME' environment variable if it is set (including to an empty string).</source>
          <target state="translated">如果设置了'HOME'环境变量(包括空字符串),返回其值。</target>
        </trans-unit>
        <trans-unit id="40325bf8bdeef6e2f82bd584359925e59eeee6af" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;SO_ERROR&lt;/code&gt; option.</source>
          <target state="translated">返回 &lt;code&gt;SO_ERROR&lt;/code&gt; 选项的值。</target>
        </trans-unit>
        <trans-unit id="a764c124837649c50395d3b1b211f5a4c46e3f3b" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;TMPDIR&lt;/code&gt; environment variable if it is set, otherwise for non-Android it returns &lt;code&gt;/tmp&lt;/code&gt;. If Android, since there is no global temporary folder (it is usually allocated per-app), it returns &lt;code&gt;/data/local/tmp&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;TMPDIR&lt;/code&gt; 环境变量的值（如果已设置），否则返回 &lt;code&gt;/tmp&lt;/code&gt; (对于非Android）。如果是Android，则由于没有全局临时文件夹（通常是按应用分配的），因此它将返回 &lt;code&gt;/data/local/tmp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5adecd48691250a49a6bd206b4e6fcc12d6525bb" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;dwFileAttributes&lt;/code&gt; field of this metadata.</source>
          <target state="translated">返回此元数据的 &lt;code&gt;dwFileAttributes&lt;/code&gt; 字段的值。</target>
        </trans-unit>
        <trans-unit id="eb6bb8145f27615c9229db90c0fe499b900ef0ea" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;dwFileAttributes&lt;/code&gt; field of this metadata. &lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.file_attributes&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">返回此元数据的 &lt;code&gt;dwFileAttributes&lt;/code&gt; 字段的值。&lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.file_attributes&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92c89ad0443d60c2d2d860a665d8f99956fad746" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;dwVolumeSerialNumber&lt;/code&gt; field of this metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc2dcbb3b4c800dce7f5527955c1d938dd6f017b" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;dwVolumeSerialNumber&lt;/code&gt; field of this metadata. &lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.volume_serial_number&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f909ba283b06a81bab19947ad469aad37c5efd" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;ftCreationTime&lt;/code&gt; field of this metadata.</source>
          <target state="translated">返回此元数据的 &lt;code&gt;ftCreationTime&lt;/code&gt; 字段的值。</target>
        </trans-unit>
        <trans-unit id="4f356ec43deb2e4831bb93733877a52e387ecf9d" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;ftCreationTime&lt;/code&gt; field of this metadata. &lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.creation_time&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">返回此元数据的 &lt;code&gt;ftCreationTime&lt;/code&gt; 字段的值。&lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.creation_time&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56a140ac2b221e638070ae238ebc2bdf5c096e84" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;ftLastAccessTime&lt;/code&gt; field of this metadata.</source>
          <target state="translated">返回此元数据的 &lt;code&gt;ftLastAccessTime&lt;/code&gt; 字段的值。</target>
        </trans-unit>
        <trans-unit id="dcadee8deeeed464b969afc782db57ebcafd4549" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;ftLastAccessTime&lt;/code&gt; field of this metadata. &lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.last_access_time&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">返回此元数据的 &lt;code&gt;ftLastAccessTime&lt;/code&gt; 字段的值。&lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.last_access_time&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1622e337a803cf23bc08cec15d271a505df66512" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;ftLastWriteTime&lt;/code&gt; field of this metadata.</source>
          <target state="translated">返回此元数据的 &lt;code&gt;ftLastWriteTime&lt;/code&gt; 字段的值。</target>
        </trans-unit>
        <trans-unit id="5ebe4f26442072092bdd9babe655a0f41b85b722" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;ftLastWriteTime&lt;/code&gt; field of this metadata. &lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.last_write_time&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">返回此元数据的 &lt;code&gt;ftLastWriteTime&lt;/code&gt; 字段的值。&lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.last_write_time&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86848c8c28c9c755c8dca8d6501fd14db86b7db5" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;nFileIndex{Low,High}&lt;/code&gt; fields of this metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00c41e7ccae89f6778864a834d489d285339736" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;nFileIndex{Low,High}&lt;/code&gt; fields of this metadata. &lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.file_index&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5649276827c26014c5e106c3e981ac3641c878b8" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;nFileSize{High,Low}&lt;/code&gt; fields of this metadata.</source>
          <target state="translated">返回此元数据的 &lt;code&gt;nFileSize{High,Low}&lt;/code&gt; 字段的值。</target>
        </trans-unit>
        <trans-unit id="0fd27516b70428468d6098230117b2dc0a8b22af" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;nFileSize{High,Low}&lt;/code&gt; fields of this metadata. &lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.file_size&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">返回此元数据的 &lt;code&gt;nFileSize{High,Low}&lt;/code&gt; 字段的值。&lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.file_size&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dffd4114a3206536e7e9263202c4210aa1b2b397" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;nNumberOfLinks&lt;/code&gt; field of this metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb52e882245afc361d616ab9c767b7235abaa798" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;nNumberOfLinks&lt;/code&gt; field of this metadata. &lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.number_of_links&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828c16ee28a67cc49cb771d93b72e813c86e66af" translate="yes" xml:space="preserve">
          <source>Returns the value of the discriminant for the variant in 'v', cast to a &lt;code&gt;u64&lt;/code&gt;; if &lt;code&gt;T&lt;/code&gt; has no discriminant, returns 0.</source>
          <target state="translated">返回'v'中变量的判别式的值， &lt;code&gt;u64&lt;/code&gt; 转换为u64；如果 &lt;code&gt;T&lt;/code&gt; 没有判别，则返回0。</target>
        </trans-unit>
        <trans-unit id="6d250788706415d21292031499161c1e7e5e50ae" translate="yes" xml:space="preserve">
          <source>Returns the value of type &lt;code&gt;T&lt;/code&gt; represented by the all-zero byte-pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce4c05888323014bf6fe3b384ec95b46c0f3d51" translate="yes" xml:space="preserve">
          <source>Returns the value of, in order, the &lt;code&gt;TMP&lt;/code&gt;, &lt;code&gt;TEMP&lt;/code&gt;, &lt;code&gt;USERPROFILE&lt;/code&gt; environment variable if any are set and not the empty string. Otherwise, &lt;code&gt;temp_dir&lt;/code&gt; returns the path of the Windows directory. This behavior is identical to that of &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-gettemppatha&quot;&gt;&lt;code&gt;GetTempPath&lt;/code&gt;&lt;/a&gt;, which this function uses internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a219748648d60dfa73d595fe4f723347de2ea15" translate="yes" xml:space="preserve">
          <source>Returns the value of, in order, the &lt;code&gt;TMP&lt;/code&gt;, &lt;code&gt;TEMP&lt;/code&gt;, &lt;code&gt;USERPROFILE&lt;/code&gt; environment variable if any are set and not the empty string. Otherwise, &lt;code&gt;temp_dir&lt;/code&gt; returns the path of the Windows directory. This behavior is identical to that of &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa364992(v=vs.85).aspx&quot;&gt;&lt;code&gt;GetTempPath&lt;/code&gt;&lt;/a&gt;, which this function uses internally.</source>
          <target state="translated">按顺序返回 &lt;code&gt;TMP&lt;/code&gt; ， &lt;code&gt;TEMP&lt;/code&gt; 和 &lt;code&gt;USERPROFILE&lt;/code&gt; 环境变量的值（如果已设置），而不是空字符串。否则， &lt;code&gt;temp_dir&lt;/code&gt; 返回Windows目录的路径。此行为与此函数在内部使用的&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa364992(v=vs.85).aspx&quot;&gt; &lt;code&gt;GetTempPath&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="9572733b23def3bda923317c53e2462509fdef4f" translate="yes" xml:space="preserve">
          <source>Returns the value that would be obtained by taking the &lt;em&gt;predecessor&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt;&lt;code&gt;count&lt;/code&gt; times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403367a2c73e6abb177e2cafc577b6dc88e29ebe" translate="yes" xml:space="preserve">
          <source>Returns the value that would be obtained by taking the &lt;em&gt;predecessor&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt;&lt;code&gt;count&lt;/code&gt; times. &lt;a href=&quot;iter/trait.step#method.backward&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df4381fa032c7f3be63e70b1bb68a16ea9a6c33" translate="yes" xml:space="preserve">
          <source>Returns the value that would be obtained by taking the &lt;em&gt;predecessor&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt;&lt;code&gt;count&lt;/code&gt; times. &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9466d5ae5f2ed727012926d1a526795f93812c" translate="yes" xml:space="preserve">
          <source>Returns the value that would be obtained by taking the &lt;em&gt;successor&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt;&lt;code&gt;count&lt;/code&gt; times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63a2e27926b3ea97136c2cbeae2a696f26714a4c" translate="yes" xml:space="preserve">
          <source>Returns the value that would be obtained by taking the &lt;em&gt;successor&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt;&lt;code&gt;count&lt;/code&gt; times. &lt;a href=&quot;iter/trait.step#method.forward&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="943537b7ccdeae46a9e14e22e0be87747384997b" translate="yes" xml:space="preserve">
          <source>Returns the value that would be obtained by taking the &lt;em&gt;successor&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt;&lt;code&gt;count&lt;/code&gt; times. &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180c7bc8bee0b2996a708179ca2a1339202ef346" translate="yes" xml:space="preserve">
          <source>Returns the value that would be obtained by taking the &lt;em&gt;successor&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt;&lt;code&gt;count&lt;/code&gt; times. &lt;a href=&quot;iter/trait.step#tymethod.backward_checked&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee676444ff6fb19214e9757a17a060a2fb301a6" translate="yes" xml:space="preserve">
          <source>Returns the value that would be obtained by taking the &lt;em&gt;successor&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt;&lt;code&gt;count&lt;/code&gt; times. &lt;a href=&quot;iter/trait.step#tymethod.forward_checked&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b1bd9a4882eef9e73cc693287c83649ea87c4eb" translate="yes" xml:space="preserve">
          <source>Returns the working directory for the child process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67b8ba6d2c094a98d9d77b92a4224f63a9b3a0a" translate="yes" xml:space="preserve">
          <source>Returns the write timeout of this socket.</source>
          <target state="translated">返回该套接字的写入超时时间。</target>
        </trans-unit>
        <trans-unit id="8caec21be10402429ae482b8b4f054e8779889c5" translate="yes" xml:space="preserve">
          <source>Returns this &lt;code&gt;String&lt;/code&gt;'s capacity, in bytes.</source>
          <target state="translated">返回此 &lt;code&gt;String&lt;/code&gt; 的容量，以字节为单位。</target>
        </trans-unit>
        <trans-unit id="308a7c84947e79b1e736191bfde42d8448c456e8" translate="yes" xml:space="preserve">
          <source>Returns true if the data is borrowed, i.e. if &lt;code&gt;to_mut&lt;/code&gt; would require additional work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e745d96228426bb4c41181e369568fe5b8ee672" translate="yes" xml:space="preserve">
          <source>Returns true if the data is owned, i.e. if &lt;code&gt;to_mut&lt;/code&gt; would be a no-op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eebdc50ab4275c0509d65d8f6e232f5ca9d4782" translate="yes" xml:space="preserve">
          <source>Returns true if this &lt;code&gt;Duration&lt;/code&gt; spans no time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c916f27ab0290429e470d20dd116e3f85dc9cc" translate="yes" xml:space="preserve">
          <source>Returns two &lt;code&gt;UnixDatagrams&lt;/code&gt;s which are connected to each other.</source>
          <target state="translated">返回两个相互连接的 &lt;code&gt;UnixDatagrams&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1997def92c07aa40771a479b14582d7c9199601a" translate="yes" xml:space="preserve">
          <source>Returns two &lt;code&gt;UnixStream&lt;/code&gt;s which are connected to each other.</source>
          <target state="translated">返回两个相互连接的 &lt;code&gt;UnixStream&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58b5908caa858b790207e758925108c2f9bb59b2" translate="yes" xml:space="preserve">
          <source>Returns two slices. The first contains no consecutive repeated elements. The second contains all the duplicates in no specified order.</source>
          <target state="translated">返回两个片断。第一个片断不包含连续重复的元素。第二片包含所有重复的元素,没有指定顺序。</target>
        </trans-unit>
        <trans-unit id="a705988224286fd86b2b12e8e04c9bf23cfd2249" translate="yes" xml:space="preserve">
          <source>Returns whether the given expression matches any of the given patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b01afed4877df00cb2e26656f68975f1855f4a" translate="yes" xml:space="preserve">
          <source>Returns whether two pointers are guaranteed to be equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e478b8166bf08569ea56ce3a1298383c77bc647" translate="yes" xml:space="preserve">
          <source>Returns whether two pointers are guaranteed to be unequal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7c2bb1bfe446ed32e1ab9672cc673aa173f1ca" translate="yes" xml:space="preserve">
          <source>Rev</source>
          <target state="translated">Rev</target>
        </trans-unit>
        <trans-unit id="1b23bbd2e4082fee5f5c745e3cbf4bdcf5bca02f" translate="yes" xml:space="preserve">
          <source>Rev::all</source>
          <target state="translated">Rev::all</target>
        </trans-unit>
        <trans-unit id="ea75cddccbdebb8689380f055fe25d5c97e641e8" translate="yes" xml:space="preserve">
          <source>Rev::any</source>
          <target state="translated">Rev::any</target>
        </trans-unit>
        <trans-unit id="8cc8e88e690bc6681b64607317f27b5ce469bacf" translate="yes" xml:space="preserve">
          <source>Rev::borrow</source>
          <target state="translated">Rev::borrow</target>
        </trans-unit>
        <trans-unit id="e2c9f6498ab8be3ec1160607f061244988a68069" translate="yes" xml:space="preserve">
          <source>Rev::borrow_mut</source>
          <target state="translated">Rev::borrow_mut</target>
        </trans-unit>
        <trans-unit id="73dedb69b68b627e1da0fa0ad68f89639ea0dc58" translate="yes" xml:space="preserve">
          <source>Rev::by_ref</source>
          <target state="translated">Rev::by_ref</target>
        </trans-unit>
        <trans-unit id="6de60f5aa1ad60301b61eeb377b5ccf5c544536c" translate="yes" xml:space="preserve">
          <source>Rev::chain</source>
          <target state="translated">Rev::chain</target>
        </trans-unit>
        <trans-unit id="e4d458e0e8c6b2df185803f6fa9e267ace7c591d" translate="yes" xml:space="preserve">
          <source>Rev::clone</source>
          <target state="translated">Rev::clone</target>
        </trans-unit>
        <trans-unit id="8404df5a18edcc0d8879c9cf2b77a33bf8b7dcef" translate="yes" xml:space="preserve">
          <source>Rev::clone_from</source>
          <target state="translated">Rev::clone_from</target>
        </trans-unit>
        <trans-unit id="1e0d93f9be1c00147e833a50c4a743cb53a3ee55" translate="yes" xml:space="preserve">
          <source>Rev::clone_into</source>
          <target state="translated">Rev::clone_into</target>
        </trans-unit>
        <trans-unit id="7b0e62b62cf92f3958926fdad9beac39623add70" translate="yes" xml:space="preserve">
          <source>Rev::cloned</source>
          <target state="translated">Rev::cloned</target>
        </trans-unit>
        <trans-unit id="4587b57f8345a4a3e332998677d7623ed93892bf" translate="yes" xml:space="preserve">
          <source>Rev::cmp</source>
          <target state="translated">Rev::cmp</target>
        </trans-unit>
        <trans-unit id="6c408188f25a62347600f9f6f7efc47d107ffba5" translate="yes" xml:space="preserve">
          <source>Rev::collect</source>
          <target state="translated">Rev::collect</target>
        </trans-unit>
        <trans-unit id="0a4354f5e33fdf26d7b5b515676d4cb202a571e7" translate="yes" xml:space="preserve">
          <source>Rev::copied</source>
          <target state="translated">Rev::copied</target>
        </trans-unit>
        <trans-unit id="fa1132674a1131c0a0397182fa3fd35714b88c64" translate="yes" xml:space="preserve">
          <source>Rev::count</source>
          <target state="translated">Rev::count</target>
        </trans-unit>
        <trans-unit id="e7f33ff3b18fb0f96be20642157a1c5b94d511be" translate="yes" xml:space="preserve">
          <source>Rev::cycle</source>
          <target state="translated">Rev::cycle</target>
        </trans-unit>
        <trans-unit id="7d9d010b059a96e262ac8e5a6cdaab5542ee4687" translate="yes" xml:space="preserve">
          <source>Rev::enumerate</source>
          <target state="translated">Rev::enumerate</target>
        </trans-unit>
        <trans-unit id="bf2b839bd26ba50d8e6e5fedcd66fb40e0954dbb" translate="yes" xml:space="preserve">
          <source>Rev::eq</source>
          <target state="translated">Rev::eq</target>
        </trans-unit>
        <trans-unit id="e7db1b47702a233fc622c97b15e840fcf2355811" translate="yes" xml:space="preserve">
          <source>Rev::filter</source>
          <target state="translated">Rev::filter</target>
        </trans-unit>
        <trans-unit id="c0636967a7dd6c6b5fee9571848c89e0e6b37fa4" translate="yes" xml:space="preserve">
          <source>Rev::filter_map</source>
          <target state="translated">Rev::filter_map</target>
        </trans-unit>
        <trans-unit id="7e246913ec9f2d6ac5302634f16110029ac885b8" translate="yes" xml:space="preserve">
          <source>Rev::find</source>
          <target state="translated">Rev::find</target>
        </trans-unit>
        <trans-unit id="0190e76cc1988765fc2380f700844d31a354a7bb" translate="yes" xml:space="preserve">
          <source>Rev::find_map</source>
          <target state="translated">Rev::find_map</target>
        </trans-unit>
        <trans-unit id="9ec5179cd3ca49c74bb4e760048b7220f38d9284" translate="yes" xml:space="preserve">
          <source>Rev::flat_map</source>
          <target state="translated">Rev::flat_map</target>
        </trans-unit>
        <trans-unit id="225d34652551554f3a89a77e062a7a155988bda8" translate="yes" xml:space="preserve">
          <source>Rev::flatten</source>
          <target state="translated">Rev::flatten</target>
        </trans-unit>
        <trans-unit id="62575efece92a283feda80baa61c2a97054001e2" translate="yes" xml:space="preserve">
          <source>Rev::fmt</source>
          <target state="translated">Rev::fmt</target>
        </trans-unit>
        <trans-unit id="7d95ad31053fb338311f4d08c6d297a8a283a2b6" translate="yes" xml:space="preserve">
          <source>Rev::fold</source>
          <target state="translated">Rev::fold</target>
        </trans-unit>
        <trans-unit id="1593c69705065114910fc862fec9b3464e7a1e61" translate="yes" xml:space="preserve">
          <source>Rev::for_each</source>
          <target state="translated">Rev::for_each</target>
        </trans-unit>
        <trans-unit id="a39bffcf3500f02b5b324ace604d5f73f4508502" translate="yes" xml:space="preserve">
          <source>Rev::from</source>
          <target state="translated">Rev::from</target>
        </trans-unit>
        <trans-unit id="cbd60e5ba280b4f4324145a1adda2da6a971136b" translate="yes" xml:space="preserve">
          <source>Rev::fuse</source>
          <target state="translated">Rev::fuse</target>
        </trans-unit>
        <trans-unit id="873cbd9880d26c0cdf87aa55ef6d401f65c26c7f" translate="yes" xml:space="preserve">
          <source>Rev::ge</source>
          <target state="translated">Rev::ge</target>
        </trans-unit>
        <trans-unit id="25fe417873e9bf8d09530ff11b2a90f30504e382" translate="yes" xml:space="preserve">
          <source>Rev::gt</source>
          <target state="translated">Rev::gt</target>
        </trans-unit>
        <trans-unit id="f92c8c41775902f0d18700f58581689338de0da4" translate="yes" xml:space="preserve">
          <source>Rev::inspect</source>
          <target state="translated">Rev::inspect</target>
        </trans-unit>
        <trans-unit id="de43a1487bfa1f9ce9ac44d597b981808c53d44e" translate="yes" xml:space="preserve">
          <source>Rev::into</source>
          <target state="translated">Rev::into</target>
        </trans-unit>
        <trans-unit id="41b12c6f490ca67e5c059f82cd7f389f81691d0d" translate="yes" xml:space="preserve">
          <source>Rev::into_iter</source>
          <target state="translated">Rev::into_iter</target>
        </trans-unit>
        <trans-unit id="78dc9bcc5c42dbf0e33ca10baa365d630a987c3b" translate="yes" xml:space="preserve">
          <source>Rev::is_empty</source>
          <target state="translated">Rev::is_empty</target>
        </trans-unit>
        <trans-unit id="ee1895eadacc62b4170b5e3c9dc596b78a2e596b" translate="yes" xml:space="preserve">
          <source>Rev::is_sorted</source>
          <target state="translated">Rev::is_sorted</target>
        </trans-unit>
        <trans-unit id="0b14e8596fb406e0e5a02fb4edae19c0c0f50bf8" translate="yes" xml:space="preserve">
          <source>Rev::is_sorted_by</source>
          <target state="translated">Rev::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="a0339aa17e6fee4a535dfa746c5ebffcbbc064ff" translate="yes" xml:space="preserve">
          <source>Rev::is_sorted_by_key</source>
          <target state="translated">Rev::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="69271a231d2a43f1ce9b3323a711616c3ae5178e" translate="yes" xml:space="preserve">
          <source>Rev::last</source>
          <target state="translated">Rev::last</target>
        </trans-unit>
        <trans-unit id="62a279d095cd31928b407efcc98deec091e8388e" translate="yes" xml:space="preserve">
          <source>Rev::le</source>
          <target state="translated">Rev::le</target>
        </trans-unit>
        <trans-unit id="9d8b8b5216a3192ea158a98424a34191c93833cd" translate="yes" xml:space="preserve">
          <source>Rev::len</source>
          <target state="translated">Rev::len</target>
        </trans-unit>
        <trans-unit id="8e9ac96d4de2466ecd316c1f91603ec27b26f6dc" translate="yes" xml:space="preserve">
          <source>Rev::lt</source>
          <target state="translated">Rev::lt</target>
        </trans-unit>
        <trans-unit id="a309ff1b530a86315f29996f8e5e95f42d96df65" translate="yes" xml:space="preserve">
          <source>Rev::map</source>
          <target state="translated">Rev::map</target>
        </trans-unit>
        <trans-unit id="13fc0b5b7e4061cfabc93fd97e77df45f8bf14de" translate="yes" xml:space="preserve">
          <source>Rev::max</source>
          <target state="translated">Rev::max</target>
        </trans-unit>
        <trans-unit id="f2a8f41d4959a1a4b0b54bf592703f38eda6e0cc" translate="yes" xml:space="preserve">
          <source>Rev::max_by</source>
          <target state="translated">Rev::max_by</target>
        </trans-unit>
        <trans-unit id="3a57fc722077bd36001915718274271fa4c84941" translate="yes" xml:space="preserve">
          <source>Rev::max_by_key</source>
          <target state="translated">Rev::max_by_key</target>
        </trans-unit>
        <trans-unit id="ae572218c9ac7eef60e456cb22b794f75d7e0ca3" translate="yes" xml:space="preserve">
          <source>Rev::min</source>
          <target state="translated">Rev::min</target>
        </trans-unit>
        <trans-unit id="717b07a4d2d09558b9eeb735fd03732d28942baf" translate="yes" xml:space="preserve">
          <source>Rev::min_by</source>
          <target state="translated">Rev::min_by</target>
        </trans-unit>
        <trans-unit id="b635b9d188dc18da9a1c7e703b8e4a520ac3c126" translate="yes" xml:space="preserve">
          <source>Rev::min_by_key</source>
          <target state="translated">Rev::min_by_key</target>
        </trans-unit>
        <trans-unit id="09141d32e008f2b05aadaf1044ecf1a4840592ce" translate="yes" xml:space="preserve">
          <source>Rev::ne</source>
          <target state="translated">Rev::ne</target>
        </trans-unit>
        <trans-unit id="9c639ae7e696436752695f9128ab7443996d43be" translate="yes" xml:space="preserve">
          <source>Rev::next</source>
          <target state="translated">Rev::next</target>
        </trans-unit>
        <trans-unit id="68086698a40e9aec1c5dec320ad4b73283d254df" translate="yes" xml:space="preserve">
          <source>Rev::next_back</source>
          <target state="translated">Rev::next_back</target>
        </trans-unit>
        <trans-unit id="05d6eba031162aff3541fcb21f99e39a85d56d67" translate="yes" xml:space="preserve">
          <source>Rev::nth</source>
          <target state="translated">Rev::nth</target>
        </trans-unit>
        <trans-unit id="a81bfd09b0b8a63e11fb54e6a20098189b515425" translate="yes" xml:space="preserve">
          <source>Rev::nth_back</source>
          <target state="translated">Rev::nth_back</target>
        </trans-unit>
        <trans-unit id="49153ede378f17d37a9c87e1ca317129d8b017a1" translate="yes" xml:space="preserve">
          <source>Rev::partial_cmp</source>
          <target state="translated">Rev::partial_cmp</target>
        </trans-unit>
        <trans-unit id="170d9a09a9560f1dd862ddfcb40722d73ffda2fb" translate="yes" xml:space="preserve">
          <source>Rev::partition</source>
          <target state="translated">Rev::partition</target>
        </trans-unit>
        <trans-unit id="c5affa24edae4f7086a827c7943e67c9ad19eca7" translate="yes" xml:space="preserve">
          <source>Rev::peekable</source>
          <target state="translated">Rev::peekable</target>
        </trans-unit>
        <trans-unit id="746df81e7e44e4774446265edbe5fdc1b8168630" translate="yes" xml:space="preserve">
          <source>Rev::position</source>
          <target state="translated">Rev::position</target>
        </trans-unit>
        <trans-unit id="06891f0cbd66b42213b0a521d231f478938da958" translate="yes" xml:space="preserve">
          <source>Rev::product</source>
          <target state="translated">Rev::product</target>
        </trans-unit>
        <trans-unit id="61b3079d136894c7e064b5b52e1d2ad981672e74" translate="yes" xml:space="preserve">
          <source>Rev::rev</source>
          <target state="translated">Rev::rev</target>
        </trans-unit>
        <trans-unit id="606dc7c354c4c3f0a918e0dd90f032f63a4d96ea" translate="yes" xml:space="preserve">
          <source>Rev::rfind</source>
          <target state="translated">Rev::rfind</target>
        </trans-unit>
        <trans-unit id="d93e6da3d5fa06554cb27eecda1ab00a2639f4ca" translate="yes" xml:space="preserve">
          <source>Rev::rfold</source>
          <target state="translated">Rev::rfold</target>
        </trans-unit>
        <trans-unit id="69887a513371a72a506e9e2b72d6574e1a006ab7" translate="yes" xml:space="preserve">
          <source>Rev::rposition</source>
          <target state="translated">Rev::rposition</target>
        </trans-unit>
        <trans-unit id="2ac558d4958028cac5d050c97576307d3b0c7e90" translate="yes" xml:space="preserve">
          <source>Rev::scan</source>
          <target state="translated">Rev::scan</target>
        </trans-unit>
        <trans-unit id="32bf46d57176ec58a7308c23938fc7a8a6065450" translate="yes" xml:space="preserve">
          <source>Rev::size_hint</source>
          <target state="translated">Rev::size_hint</target>
        </trans-unit>
        <trans-unit id="745daae6d469e14032d310fcbbe039b267f61011" translate="yes" xml:space="preserve">
          <source>Rev::skip</source>
          <target state="translated">Rev::skip</target>
        </trans-unit>
        <trans-unit id="dc68a43da7c6b96a30d49d1450c76f344182303e" translate="yes" xml:space="preserve">
          <source>Rev::skip_while</source>
          <target state="translated">Rev::skip_while</target>
        </trans-unit>
        <trans-unit id="054143a0994b6cd5dd1b483213f5a6c9b1c0b2d1" translate="yes" xml:space="preserve">
          <source>Rev::step_by</source>
          <target state="translated">Rev::step_by</target>
        </trans-unit>
        <trans-unit id="d9663cdc74ad7a47d90d5d997ca949efed24b49c" translate="yes" xml:space="preserve">
          <source>Rev::sum</source>
          <target state="translated">Rev::sum</target>
        </trans-unit>
        <trans-unit id="544a9b94c47ffe3adf4fb88e67c57140817601d9" translate="yes" xml:space="preserve">
          <source>Rev::take</source>
          <target state="translated">Rev::take</target>
        </trans-unit>
        <trans-unit id="7ef936397559c6de4b345f55afcfa6da8c20a28c" translate="yes" xml:space="preserve">
          <source>Rev::take_while</source>
          <target state="translated">Rev::take_while</target>
        </trans-unit>
        <trans-unit id="db658a06bd7f55c9638ea4ee61d0f929584e7346" translate="yes" xml:space="preserve">
          <source>Rev::to_owned</source>
          <target state="translated">Rev::to_owned</target>
        </trans-unit>
        <trans-unit id="4a55fa5472997f719fcb65ca32e38a9494c590c7" translate="yes" xml:space="preserve">
          <source>Rev::try_fold</source>
          <target state="translated">Rev::try_fold</target>
        </trans-unit>
        <trans-unit id="cd736368392119bec6e68191bd957a8b923eac5e" translate="yes" xml:space="preserve">
          <source>Rev::try_for_each</source>
          <target state="translated">Rev::try_for_each</target>
        </trans-unit>
        <trans-unit id="dbeb577d71ccd2a54b3e5a954ded27049870aadb" translate="yes" xml:space="preserve">
          <source>Rev::try_from</source>
          <target state="translated">Rev::try_from</target>
        </trans-unit>
        <trans-unit id="966fc760987fd15f6fba61c00189cc38fffafabd" translate="yes" xml:space="preserve">
          <source>Rev::try_into</source>
          <target state="translated">Rev::try_into</target>
        </trans-unit>
        <trans-unit id="e03bbf2925edcd0e55fbf87c143dcf7214a33801" translate="yes" xml:space="preserve">
          <source>Rev::try_rfold</source>
          <target state="translated">Rev::try_rfold</target>
        </trans-unit>
        <trans-unit id="4866aacf5f321e53501fb39991d7e92a23530109" translate="yes" xml:space="preserve">
          <source>Rev::type_id</source>
          <target state="translated">Rev::type_id</target>
        </trans-unit>
        <trans-unit id="d40b36de24f921fb9d83203737a9d9313e304ed4" translate="yes" xml:space="preserve">
          <source>Rev::unzip</source>
          <target state="translated">Rev::unzip</target>
        </trans-unit>
        <trans-unit id="d26061185131ee794acff98f8cdee42eb789c3a8" translate="yes" xml:space="preserve">
          <source>Rev::zip</source>
          <target state="translated">Rev::zip</target>
        </trans-unit>
        <trans-unit id="57f9933768794f845d000833d367d5698393211d" translate="yes" xml:space="preserve">
          <source>Reverse</source>
          <target state="translated">Reverse</target>
        </trans-unit>
        <trans-unit id="855b7acdf3d35ac4f2adcc88572889dbbd152c8d" translate="yes" xml:space="preserve">
          <source>Reverse::borrow</source>
          <target state="translated">Reverse::borrow</target>
        </trans-unit>
        <trans-unit id="b2b7d426909b05c0abe69fafc7ad9a3373457083" translate="yes" xml:space="preserve">
          <source>Reverse::borrow_mut</source>
          <target state="translated">Reverse::borrow_mut</target>
        </trans-unit>
        <trans-unit id="ae49fc0d147862750a761b423bb48bdac7aea4ed" translate="yes" xml:space="preserve">
          <source>Reverse::clamp</source>
          <target state="translated">Reverse::clamp</target>
        </trans-unit>
        <trans-unit id="e018a9a3e3f5e4a17f25be205ffa5619450a465e" translate="yes" xml:space="preserve">
          <source>Reverse::clone</source>
          <target state="translated">Reverse::clone</target>
        </trans-unit>
        <trans-unit id="1acbb09e0fd503239dfba6d9885e42b30ce68ef2" translate="yes" xml:space="preserve">
          <source>Reverse::clone_from</source>
          <target state="translated">Reverse::clone_from</target>
        </trans-unit>
        <trans-unit id="6fae25f3227a651fa4dab3d82eae4c6d090bf5f7" translate="yes" xml:space="preserve">
          <source>Reverse::clone_into</source>
          <target state="translated">Reverse::clone_into</target>
        </trans-unit>
        <trans-unit id="3576dde77728ccb6dac97f18c9329186fcd25b47" translate="yes" xml:space="preserve">
          <source>Reverse::cmp</source>
          <target state="translated">Reverse::cmp</target>
        </trans-unit>
        <trans-unit id="87d225b7af09dcef297be52eee959d2c55588a88" translate="yes" xml:space="preserve">
          <source>Reverse::default</source>
          <target state="translated">Reverse::default</target>
        </trans-unit>
        <trans-unit id="a524d78b7983211c5e0bd0dfb57a20e67c068d6b" translate="yes" xml:space="preserve">
          <source>Reverse::eq</source>
          <target state="translated">Reverse::eq</target>
        </trans-unit>
        <trans-unit id="27d1dc581d53e247cf1e2bafb5f52a5822dffafb" translate="yes" xml:space="preserve">
          <source>Reverse::fmt</source>
          <target state="translated">Reverse::fmt</target>
        </trans-unit>
        <trans-unit id="ec878d46af0f49ce6792c30cd0b6e1b7235b1958" translate="yes" xml:space="preserve">
          <source>Reverse::from</source>
          <target state="translated">Reverse::from</target>
        </trans-unit>
        <trans-unit id="7c6d0cd9a450b5ac7a9861f8ecd935be369486df" translate="yes" xml:space="preserve">
          <source>Reverse::ge</source>
          <target state="translated">Reverse::ge</target>
        </trans-unit>
        <trans-unit id="ce7cdbde47d875eaad55efb2ef9ffe90f4a03ed4" translate="yes" xml:space="preserve">
          <source>Reverse::gt</source>
          <target state="translated">Reverse::gt</target>
        </trans-unit>
        <trans-unit id="ff3888b2d1d36cd518958cda6a06bbafd40ca557" translate="yes" xml:space="preserve">
          <source>Reverse::hash</source>
          <target state="translated">Reverse::hash</target>
        </trans-unit>
        <trans-unit id="0132646776d34a7463118179e279a28498b7466b" translate="yes" xml:space="preserve">
          <source>Reverse::hash_slice</source>
          <target state="translated">Reverse::hash_slice</target>
        </trans-unit>
        <trans-unit id="e9e019daf91ab04cdc269196e09f2db10403fa64" translate="yes" xml:space="preserve">
          <source>Reverse::into</source>
          <target state="translated">Reverse::into</target>
        </trans-unit>
        <trans-unit id="d9b1e02561cb84eb59fa254f199d5e53c05c8368" translate="yes" xml:space="preserve">
          <source>Reverse::le</source>
          <target state="translated">Reverse::le</target>
        </trans-unit>
        <trans-unit id="4d9a8bfcbe29163526e5bc5a1ad6df0efaa28d68" translate="yes" xml:space="preserve">
          <source>Reverse::lt</source>
          <target state="translated">Reverse::lt</target>
        </trans-unit>
        <trans-unit id="fce2114bbd923c0c4b66d5fbd541e6a46db8b2b1" translate="yes" xml:space="preserve">
          <source>Reverse::max</source>
          <target state="translated">Reverse::max</target>
        </trans-unit>
        <trans-unit id="744f7afa0a87464baa627359381d12071537458e" translate="yes" xml:space="preserve">
          <source>Reverse::min</source>
          <target state="translated">Reverse::min</target>
        </trans-unit>
        <trans-unit id="2947ceb046e4341b0a7b1b01d461498d6d47d77c" translate="yes" xml:space="preserve">
          <source>Reverse::ne</source>
          <target state="translated">Reverse::ne</target>
        </trans-unit>
        <trans-unit id="1a0af82a6b449d1fc4be8050ad565202d480b99c" translate="yes" xml:space="preserve">
          <source>Reverse::partial_cmp</source>
          <target state="translated">Reverse::partial_cmp</target>
        </trans-unit>
        <trans-unit id="dfc38fb2b46e97d4339fe9223ac9e35b911966f9" translate="yes" xml:space="preserve">
          <source>Reverse::to_owned</source>
          <target state="translated">Reverse::to_owned</target>
        </trans-unit>
        <trans-unit id="6b9dbc8067fbcb99860916ed4280269ddf4b0187" translate="yes" xml:space="preserve">
          <source>Reverse::try_from</source>
          <target state="translated">Reverse::try_from</target>
        </trans-unit>
        <trans-unit id="4198456beaa5540ba8be310ee2d5cc7d8f48ea67" translate="yes" xml:space="preserve">
          <source>Reverse::try_into</source>
          <target state="translated">Reverse::try_into</target>
        </trans-unit>
        <trans-unit id="6860559d5fa051e4b834b6077771242282766826" translate="yes" xml:space="preserve">
          <source>Reverse::type_id</source>
          <target state="translated">Reverse::type_id</target>
        </trans-unit>
        <trans-unit id="de938e717e63356d75f69d3afd8292bf2f96a32f" translate="yes" xml:space="preserve">
          <source>ReverseSearcher</source>
          <target state="translated">ReverseSearcher</target>
        </trans-unit>
        <trans-unit id="8d7236df59f914f9071c6e16648b2ef0addf66a1" translate="yes" xml:space="preserve">
          <source>Reverses an iterator's direction.</source>
          <target state="translated">逆转迭代器的方向。</target>
        </trans-unit>
        <trans-unit id="eb8aead23318719eb265935da0734b397d74d732" translate="yes" xml:space="preserve">
          <source>Reverses an iterator's direction. &lt;a href=&quot;../../../iter/trait.iterator#method.rev&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">反转迭代器的方向。&lt;a href=&quot;../../../iter/trait.iterator#method.rev&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da5c53b657810a4cbe93c7e2f2fa480619340afb" translate="yes" xml:space="preserve">
          <source>Reverses an iterator's direction. &lt;a href=&quot;../../iter/trait.iterator#method.rev&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">反转迭代器的方向。&lt;a href=&quot;../../iter/trait.iterator#method.rev&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a52ff52ba0845d9c1a9b2c750fd96d9a3a6a3c27" translate="yes" xml:space="preserve">
          <source>Reverses an iterator's direction. &lt;a href=&quot;../iter/trait.iterator#method.rev&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">反转迭代器的方向。&lt;a href=&quot;../iter/trait.iterator#method.rev&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f9284c1c2c9fd85ba7767c59c99017b534d9eee9" translate="yes" xml:space="preserve">
          <source>Reverses an iterator's direction. &lt;a href=&quot;iter/trait.iterator#method.rev&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">反转迭代器的方向。&lt;a href=&quot;iter/trait.iterator#method.rev&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="729ff069e224b910aab08299c613befadec11121" translate="yes" xml:space="preserve">
          <source>Reverses an iterator's direction. &lt;a href=&quot;trait.iterator#method.rev&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">反转迭代器的方向。&lt;a href=&quot;trait.iterator#method.rev&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42ebe1d1b22b768e5e0a52d253bd9764dab488b1" translate="yes" xml:space="preserve">
          <source>Reverses the &lt;code&gt;Ordering&lt;/code&gt;.</source>
          <target state="translated">逆序 &lt;code&gt;Ordering&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bd561cb07cd33c0a2ed2162929bc80a36033f08" translate="yes" xml:space="preserve">
          <source>Reverses the bit pattern of the integer.</source>
          <target state="translated">反转整数的位模式。</target>
        </trans-unit>
        <trans-unit id="c045f20a6ee66e7b7d06320153c9befa95e70b3f" translate="yes" xml:space="preserve">
          <source>Reverses the bits in an integer type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">反转整数类型 &lt;code&gt;T&lt;/code&gt; 中的位。</target>
        </trans-unit>
        <trans-unit id="79e3db360b190aa279792f3cec009bf516b1404c" translate="yes" xml:space="preserve">
          <source>Reverses the byte order of the integer.</source>
          <target state="translated">颠倒整数的字节顺序。</target>
        </trans-unit>
        <trans-unit id="64b09f1db72cf0ec7ade643d2317db8963d83387" translate="yes" xml:space="preserve">
          <source>Reverses the bytes in an integer type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">反转整数类型 &lt;code&gt;T&lt;/code&gt; 中的字节。</target>
        </trans-unit>
        <trans-unit id="4ba3654366e538ecbe6a202e08718e335edbe9a1" translate="yes" xml:space="preserve">
          <source>Reverses the order of bits in the integer. The least significant bit becomes the most significant bit, second least-significant bit becomes second most-significant bit, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb94381be35515f566147dc309094fe9e5f3b42c" translate="yes" xml:space="preserve">
          <source>Reverses the order of elements in the slice, in place.</source>
          <target state="translated">将片中元素的顺序颠倒过来,就地取材。</target>
        </trans-unit>
        <trans-unit id="043399b4f9587dfd6e880bb527cf9885c51d0675" translate="yes" xml:space="preserve">
          <source>Rewrite the expression without functional record update syntax:</source>
          <target state="translated">重写没有功能记录更新语法的表达式。</target>
        </trans-unit>
        <trans-unit id="5c8afd877c560b80edb72541a6eaea0dba68d13a" translate="yes" xml:space="preserve">
          <source>Right Shift**</source>
          <target state="translated">右移**</target>
        </trans-unit>
        <trans-unit id="9ef3e151188d7e4dfc0cdde88b74ac2276235a35" translate="yes" xml:space="preserve">
          <source>Right now, our web server will return the HTML in the file no matter what the client requested. Let&amp;rsquo;s add functionality to check that the browser is requesting &lt;em&gt;/&lt;/em&gt; before returning the HTML file and return an error if the browser requests anything else. For this we need to modify &lt;code&gt;handle_connection&lt;/code&gt;, as shown in Listing 20-6. This new code checks the content of the request received against what we know a request for &lt;em&gt;/&lt;/em&gt; looks like and adds &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt; blocks to treat requests differently.</source>
          <target state="translated">现在，无论客户端请求什么，我们的Web服务器都将返回文件中的HTML。让我们添加一些功能，以在返回HTML文件之前检查浏览器是否在请求&lt;em&gt;/&lt;/em&gt;，如果浏览器要求其他内容，则返回错误。为此，我们需要修改 &lt;code&gt;handle_connection&lt;/code&gt; ，如清单20-6所示。此新代码将对照我们知道的对&lt;em&gt;/&lt;/em&gt;的请求的内容检查接收到的请求的内容，并添加 &lt;code&gt;if&lt;/code&gt; 和 &lt;code&gt;else&lt;/code&gt; 块以不同方式对待请求。</target>
        </trans-unit>
        <trans-unit id="18ab96a1810297bde0b9141142db3dfb5bb9d2bc" translate="yes" xml:space="preserve">
          <source>Right now, the program generated by &lt;code&gt;cargo new&lt;/code&gt; cannot process arguments we give it. Some existing libraries on &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt; can help with writing a program that accepts command line arguments, but because you&amp;rsquo;re just learning this concept, let&amp;rsquo;s implement this capability ourselves.</source>
          <target state="translated">目前，由 &lt;code&gt;cargo new&lt;/code&gt; 生成的程序无法处理我们提供的参数。&lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt;上的某些现有库可以帮助编写接受命令行参数的程序，但是由于您只是在学习此概念，所以让我们自己实现此功能。</target>
        </trans-unit>
        <trans-unit id="7b9dbd2a05c55e3ec29e51c514e9c4050f82aedb" translate="yes" xml:space="preserve">
          <source>Right now, the server will process each request in turn, meaning it won&amp;rsquo;t process a second connection until the first is finished processing. If the server received more and more requests, this serial execution would be less and less optimal. If the server receives a request that takes a long time to process, subsequent requests will have to wait until the long request is finished, even if the new requests can be processed quickly. We&amp;rsquo;ll need to fix this, but first, we&amp;rsquo;ll look at the problem in action.</source>
          <target state="translated">现在，服务器将依次处理每个请求，这意味着直到第一个连接完成处理后，服务器才会处理第二个连接。如果服务器接收到越来越多的请求，则该串行执行将越来越不理想。如果服务器收到处理时间很长的请求，则即使可以快速处理新请求，后续请求也必须等到长请求完成为止。我们需要解决此问题，但首先，我们要研究实际的问题。</target>
        </trans-unit>
        <trans-unit id="c480af39db009c0318ae7e74d0323b0c502a0fd5" translate="yes" xml:space="preserve">
          <source>Right-exclusive range literal</source>
          <target state="translated">右排范围文字</target>
        </trans-unit>
        <trans-unit id="59325f597d1c37aeeec754c26100e96a2e30be66" translate="yes" xml:space="preserve">
          <source>Right-inclusive range literal</source>
          <target state="translated">右旋范围的字面意思</target>
        </trans-unit>
        <trans-unit id="9b48ae49c811eaa74c51d9a2c4444bab2f4e6c28" translate="yes" xml:space="preserve">
          <source>Right-shift</source>
          <target state="translated">Right-shift</target>
        </trans-unit>
        <trans-unit id="f367c94b8369cb645d39410fa6aec58a35c66b87" translate="yes" xml:space="preserve">
          <source>Right-shift and assignment</source>
          <target state="translated">右移和分配</target>
        </trans-unit>
        <trans-unit id="87ab4fb697063b10dcdc96979db348b5d934b10e" translate="yes" xml:space="preserve">
          <source>Rotate a subslice:</source>
          <target state="translated">旋转一个子片。</target>
        </trans-unit>
        <trans-unit id="e2e2300fcc3d5d8ec414a7eaacdbbcb51bb451c4" translate="yes" xml:space="preserve">
          <source>Rotates &lt;code&gt;len() - k&lt;/code&gt; places to the left.</source>
          <target state="translated">向左旋转 &lt;code&gt;len() - k&lt;/code&gt; 位置。</target>
        </trans-unit>
        <trans-unit id="ce3f746edcfb3b9e0b1137f1b27b633f9dbc1e06" translate="yes" xml:space="preserve">
          <source>Rotates &lt;code&gt;len() - mid&lt;/code&gt; places to the right.</source>
          <target state="translated">将 &lt;code&gt;len() - mid&lt;/code&gt; 旋转到右侧的中间位置。</target>
        </trans-unit>
        <trans-unit id="96b03b8904b0a15cce1085562454a38f8c416656" translate="yes" xml:space="preserve">
          <source>Rotates item &lt;code&gt;mid&lt;/code&gt; into the first position.</source>
          <target state="translated">将项目 &lt;code&gt;mid&lt;/code&gt; 旋转到第一个位置。</target>
        </trans-unit>
        <trans-unit id="435514cee1befe7c5f78629addaceeb41d851af0" translate="yes" xml:space="preserve">
          <source>Rotates the double-ended queue &lt;code&gt;k&lt;/code&gt; places to the right.</source>
          <target state="translated">将双端队列 &lt;code&gt;k&lt;/code&gt; 位置向右旋转。</target>
        </trans-unit>
        <trans-unit id="f6e0de855ccd5f7c0b8c806d3b9f3e85016db057" translate="yes" xml:space="preserve">
          <source>Rotates the double-ended queue &lt;code&gt;mid&lt;/code&gt; places to the left.</source>
          <target state="translated">将双头队列 &lt;code&gt;mid&lt;/code&gt; 位置向左旋转。</target>
        </trans-unit>
        <trans-unit id="a3eb1eddf6dbbb2384431fa9dbaf6f2680d9416d" translate="yes" xml:space="preserve">
          <source>Rotates the first item into position &lt;code&gt;k&lt;/code&gt;.</source>
          <target state="translated">将第一个项目旋转到位置 &lt;code&gt;k&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ed009359b30c6f889c504f86a394c588c0f7b7a" translate="yes" xml:space="preserve">
          <source>Rotates the slice in-place such that the first &lt;code&gt;mid&lt;/code&gt; elements of the slice move to the end while the last &lt;code&gt;self.len() - mid&lt;/code&gt; elements move to the front. After calling &lt;code&gt;rotate_left&lt;/code&gt;, the element previously at index &lt;code&gt;mid&lt;/code&gt; will become the first element in the slice.</source>
          <target state="translated">就地旋转切片，以使切片的第一个 &lt;code&gt;mid&lt;/code&gt; 元素移到末尾，而最后一个 &lt;code&gt;self.len() - mid&lt;/code&gt; 元素移到前面。调用 &lt;code&gt;rotate_left&lt;/code&gt; 之后，先前位于索引 &lt;code&gt;mid&lt;/code&gt; 的元素将成为切片中的第一个元素。</target>
        </trans-unit>
        <trans-unit id="04b7ac171ea5b32f47f9900517a2fadf3a9c0d83" translate="yes" xml:space="preserve">
          <source>Rotates the slice in-place such that the first &lt;code&gt;self.len() - k&lt;/code&gt; elements of the slice move to the end while the last &lt;code&gt;k&lt;/code&gt; elements move to the front. After calling &lt;code&gt;rotate_right&lt;/code&gt;, the element previously at index &lt;code&gt;self.len() - k&lt;/code&gt; will become the first element in the slice.</source>
          <target state="translated">就地旋转切片，以使切片的第一个 &lt;code&gt;self.len() - k&lt;/code&gt; 元素移到末尾，而最后 &lt;code&gt;k&lt;/code&gt; 个元素移到前面。调用 &lt;code&gt;rotate_right&lt;/code&gt; 之后，先前位于索引 &lt;code&gt;self.len() - k&lt;/code&gt; 的元素将成为切片中的第一个元素。</target>
        </trans-unit>
        <trans-unit id="5c601ca5828939fb30e1667600554d785890002f" translate="yes" xml:space="preserve">
          <source>Rotating a subslice:</source>
          <target state="translated">旋转一个子片。</target>
        </trans-unit>
        <trans-unit id="4e37bfdd52117be2c062494638d3e5c44c84094a" translate="yes" xml:space="preserve">
          <source>Round up the current size to the nearest multiple of the next field's &lt;a href=&quot;fn.align_of&quot;&gt;alignment&lt;/a&gt;.</source>
          <target state="translated">将当前大小四舍五入到下一个字段的&lt;a href=&quot;fn.align_of&quot;&gt;alignment&lt;/a&gt;的最接近倍数。</target>
        </trans-unit>
        <trans-unit id="50e5426091a53777b8711a517e2b93745535294e" translate="yes" xml:space="preserve">
          <source>Rounds toward zero and converts to any primitive integer type, assuming that the value is finite and fits in that type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58cf18a9ecd627eed5f1c04bd8628968731bb80a" translate="yes" xml:space="preserve">
          <source>Ruby: &lt;strike&gt;block syntax&lt;/strike&gt;</source>
          <target state="translated">Ruby：&lt;strike&gt;块语法&lt;/strike&gt;</target>
        </trans-unit>
        <trans-unit id="ecf5f644a238902f7f393f69b82ea575cf5c3b7f" translate="yes" xml:space="preserve">
          <source>Ruby: closure syntax, &lt;strike&gt;block syntax&lt;/strike&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b36b4e006f637aa6590232050c05151c7ad67ec" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;cargo publish&lt;/code&gt; command again. It should succeed now:</source>
          <target state="translated">再次运行 &lt;code&gt;cargo publish&lt;/code&gt; 命令。现在应该成功了：</target>
        </trans-unit>
        <trans-unit id="923b0697706f694d4ca0d13f16f9a1afd423c9a4" translate="yes" xml:space="preserve">
          <source>Run the code with this change. Drat! We still get an error:</source>
          <target state="translated">运行这个改动后的代码。糟糕! 我们仍然得到一个错误。</target>
        </trans-unit>
        <trans-unit id="3f16915758c73edf89a7ea497581557bcdd0d1f8" translate="yes" xml:space="preserve">
          <source>Run the code you want to test.</source>
          <target state="translated">运行你要测试的代码。</target>
        </trans-unit>
        <trans-unit id="e196a338a67e0d1bafa6837b0b8c2270766eed56" translate="yes" xml:space="preserve">
          <source>Run the program again, and look at the output:</source>
          <target state="translated">再运行程序,看看输出。</target>
        </trans-unit>
        <trans-unit id="fab2784a99af076ad38bcd6561c56938260806b6" translate="yes" xml:space="preserve">
          <source>Run the tests again using &lt;code&gt;cargo test&lt;/code&gt;. The output should look like Listing 11-4, which shows that our &lt;code&gt;exploration&lt;/code&gt; test passed and &lt;code&gt;another&lt;/code&gt; failed.</source>
          <target state="translated">使用 &lt;code&gt;cargo test&lt;/code&gt; 测试再次运行测试。输出应类似于清单11-4，该清单表明我们的 &lt;code&gt;exploration&lt;/code&gt; 测试通过了，而 &lt;code&gt;another&lt;/code&gt; 失败了。</target>
        </trans-unit>
        <trans-unit id="d0d45a5d41408cca9fc6eeaa7d959b93e0fc34a3" translate="yes" xml:space="preserve">
          <source>Run the tests again:</source>
          <target state="translated">再次运行测试。</target>
        </trans-unit>
        <trans-unit id="513c6246dbce19675f37c27f2bbb4ac8a4d4b4e2" translate="yes" xml:space="preserve">
          <source>Run this code now and request &lt;em&gt;127.0.0.1:7878&lt;/em&gt;; you should get the HTML in &lt;em&gt;hello.html&lt;/em&gt;. If you make any other request, such as &lt;em&gt;127.0.0.1:7878/something-else&lt;/em&gt;, you&amp;rsquo;ll get a connection error like those you saw when running the code in Listing 20-1 and Listing 20-2.</source>
          <target state="translated">立即运行此代码并请求&lt;em&gt;127.0.0.1:7878&lt;/em&gt; ; 您应该在&lt;em&gt;hello.html中&lt;/em&gt;获取HTML 。如果发出任何其他请求，例如&lt;em&gt;127.0.0.1:7878/something-else&lt;/em&gt;，则将出现连接错误，就像运行清单20-1和清单20-2中的代码时看到的一样。</target>
        </trans-unit>
        <trans-unit id="e35c6b16535d8da5f5670a5eab95ccaf77d4012a" translate="yes" xml:space="preserve">
          <source>Run this code with &lt;code&gt;cargo run&lt;/code&gt; and load &lt;em&gt;127.0.0.1:7878&lt;/em&gt; in your browser; you should see your HTML rendered!</source>
          <target state="translated">运行该代码与 &lt;code&gt;cargo run&lt;/code&gt; 和负载&lt;em&gt;127.0.0.1:7878&lt;/em&gt;在您的浏览器; 您应该看到呈现的HTML！</target>
        </trans-unit>
        <trans-unit id="23437fed19097bdfdfbe0b8267f38604c310de83" translate="yes" xml:space="preserve">
          <source>Run this test with the &lt;code&gt;Cacher&lt;/code&gt; implementation in Listing 13-9 and Listing 13-10, and the test will fail on the &lt;code&gt;assert_eq!&lt;/code&gt; with this message:</source>
          <target state="translated">使用清单13-9和清单13-10中的 &lt;code&gt;Cacher&lt;/code&gt; 实现运行此测试，该测试将在 &lt;code&gt;assert_eq!&lt;/code&gt; 上失败！与此消息：</target>
        </trans-unit>
        <trans-unit id="d3d8bf74c1c629197f4536b35815a9f7a259419d" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;cargo clippy&lt;/code&gt; on this project results in this error:</source>
          <target state="translated">在此项目上运行 &lt;code&gt;cargo clippy&lt;/code&gt; 导致以下错误：</target>
        </trans-unit>
        <trans-unit id="f395b53628f20c5c4b3bbd548137966e23fc9dab" translate="yes" xml:space="preserve">
          <source>Running Code on Cleanup with the &lt;code id=&quot;running-code-on-cleanup-with-the-drop-trait&quot;&gt;Drop&lt;/code&gt; Trait</source>
          <target state="translated">使用 &lt;code id=&quot;running-code-on-cleanup-with-the-drop-trait&quot;&gt;Drop&lt;/code&gt; Trait 运行清理代码</target>
        </trans-unit>
        <trans-unit id="564030da0f34d36e19aa75d7720530ab88c94b03" translate="yes" xml:space="preserve">
          <source>Running Single Tests</source>
          <target state="translated">运行单项测试</target>
        </trans-unit>
        <trans-unit id="e69e378bddb35dc41b1601835b2e69f3cbc1a82e" translate="yes" xml:space="preserve">
          <source>Running Tests in Parallel or Consecutively</source>
          <target state="translated">平行或连续运行测试</target>
        </trans-unit>
        <trans-unit id="1e1d8cbafc2cddc28df09bc7a99cf83551dd23e4" translate="yes" xml:space="preserve">
          <source>Running a Subset of Tests by Name</source>
          <target state="translated">按名称运行测试的子集</target>
        </trans-unit>
        <trans-unit id="103fa497687d08956605ccfefaf1c40f881c8239" translate="yes" xml:space="preserve">
          <source>Running the code in Listing 8-25 will print &lt;code&gt;{&quot;Yellow&quot;: 50, &quot;Blue&quot;: 10}&lt;/code&gt;. The first call to &lt;code&gt;entry&lt;/code&gt; will insert the key for the Yellow team with the value 50 because the Yellow team doesn&amp;rsquo;t have a value already. The second call to &lt;code&gt;entry&lt;/code&gt; will not change the hash map because the Blue team already has the value 10.</source>
          <target state="translated">运行清单8-25中的代码将显示 &lt;code&gt;{&quot;Yellow&quot;: 50, &quot;Blue&quot;: 10}&lt;/code&gt; 。第一次 &lt;code&gt;entry&lt;/code&gt; 电话将为Yellow团队插入密钥，该密钥的值为50，因为Yellow团队还没有值。第二次调用 &lt;code&gt;entry&lt;/code&gt; 不会更改哈希映射，因为Blue团队已经具有值10。</target>
        </trans-unit>
        <trans-unit id="1c9add0452877e9f24dc2bf7d578c6ed2f3e1d8b" translate="yes" xml:space="preserve">
          <source>Running the tests now produces the following:</source>
          <target state="translated">现在运行测试会产生以下结果。</target>
        </trans-unit>
        <trans-unit id="f25b19c8b9c8cd64ad4a2e8f5f7c3c28f70fa2a3" translate="yes" xml:space="preserve">
          <source>Running this code prints the following:</source>
          <target state="translated">运行这段代码会打印出以下内容。</target>
        </trans-unit>
        <trans-unit id="1e3c357826826fa11f1cba26866e53be103107ea" translate="yes" xml:space="preserve">
          <source>Running this code using &lt;code&gt;cargo run&lt;/code&gt; produces the following result:</source>
          <target state="translated">使用 &lt;code&gt;cargo run&lt;/code&gt; 运行该代码将产生以下结果：</target>
        </trans-unit>
        <trans-unit id="c569a779f618ce9a2967d5affac56fe27ca64ca3" translate="yes" xml:space="preserve">
          <source>Running this code will print &lt;code&gt;*waving arms furiously*&lt;/code&gt;, showing that Rust called the &lt;code&gt;fly&lt;/code&gt; method implemented on &lt;code&gt;Human&lt;/code&gt; directly.</source>
          <target state="translated">运行此代码将&amp;ldquo; &lt;code&gt;*waving arms furiously*&lt;/code&gt; ，表明Rust调用了直接在 &lt;code&gt;Human&lt;/code&gt; 上实现的 &lt;code&gt;fly&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="050611088b4215f09f3ddc0798cae6177d1f772f" translate="yes" xml:space="preserve">
          <source>Running this code will print &lt;code&gt;The value of x is: 6&lt;/code&gt;. But if we place a semicolon at the end of the line containing &lt;code&gt;x + 1&lt;/code&gt;, changing it from an expression to a statement, we&amp;rsquo;ll get an error.</source>
          <target state="translated">运行此代码将打印 &lt;code&gt;The value of x is: 6&lt;/code&gt; 。但是，如果我们在包含 &lt;code&gt;x + 1&lt;/code&gt; 的行的末尾放置分号，将其从表达式更改为语句，则会出现错误。</target>
        </trans-unit>
        <trans-unit id="0cf90b9dd90262dc86c7e18ab1cd2e79c2411dea" translate="yes" xml:space="preserve">
          <source>Running this code will print &lt;code&gt;number was something other than zero&lt;/code&gt;.</source>
          <target state="translated">运行此代码将打印 &lt;code&gt;number was something other than zero&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3da00eed1960155f07dbe554383fc0ea4f0b115" translate="yes" xml:space="preserve">
          <source>Running this code will print the following:</source>
          <target state="translated">运行这段代码将打印以下内容。</target>
        </trans-unit>
        <trans-unit id="e4fcdd04ec6ff3e0b0277e41acfba1bf839f5a18" translate="yes" xml:space="preserve">
          <source>Running this command reformats all the Rust code in the current crate. This should only change the code style, not the code semantics. For more information on &lt;code&gt;rustfmt&lt;/code&gt;, see &lt;a href=&quot;https://github.com/rust-lang/rustfmt&quot;&gt;its documentation&lt;/a&gt;.</source>
          <target state="translated">运行此命令会重新格式化当前板条箱中的所有Rust代码。这仅应更改代码样式，而不更改代码语义。有关 &lt;code&gt;rustfmt&lt;/code&gt; 的更多信息，请参&lt;a href=&quot;https://github.com/rust-lang/rustfmt&quot;&gt;见其文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7d1170a5c907c3d621f9e3318eb8f67085d5957f" translate="yes" xml:space="preserve">
          <source>Running this test produces the following:</source>
          <target state="translated">运行这个测试会产生以下结果。</target>
        </trans-unit>
        <trans-unit id="c4740e4ca28c9c8d6a8447aef5c33425e6de4802" translate="yes" xml:space="preserve">
          <source>Runtime</source>
          <target state="translated">Runtime</target>
        </trans-unit>
        <trans-unit id="5359eea6ab0e87db9479836bb9761e7ad6a157fe" translate="yes" xml:space="preserve">
          <source>Runtime characteristics</source>
          <target state="translated">运行时特点</target>
        </trans-unit>
        <trans-unit id="581d4fec52b7eb5bd873dc892c1ee2b7004ec350" translate="yes" xml:space="preserve">
          <source>Runtime checks are present to ensure there is only one nul byte in the &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;, its last element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ae20d9ae7fcacb605c03c198e0a1c51d446f50" translate="yes" xml:space="preserve">
          <source>Rust</source>
          <target state="translated">Rust</target>
        </trans-unit>
        <trans-unit id="1fc5c6604c5a3ad4a813390059fa989765293b6c" translate="yes" xml:space="preserve">
          <source>Rust 2015 does not permit the use of &lt;code&gt;async fn&lt;/code&gt;.</source>
          <target state="translated">Rust 2015不允许使用 &lt;code&gt;async fn&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a577c02cc01ad8b1a35ad9c0d2cad0f98a6cf0b5" translate="yes" xml:space="preserve">
          <source>Rust &lt;em&gt;does&lt;/em&gt; include functionality to print out debugging information, but we have to explicitly opt in to make that functionality available for our struct. To do that, we add the annotation &lt;code&gt;#[derive(Debug)]&lt;/code&gt; just before the struct definition, as shown in Listing 5-12.</source>
          <target state="translated">Rust &lt;em&gt;确实&lt;/em&gt;包含用于打印调试信息的功能，但是我们必须明确选择启用该功能以用于我们的结构。为此，我们在结构定义之前添加注释 &lt;code&gt;#[derive(Debug)]&lt;/code&gt; ，如清单5-12所示。</target>
        </trans-unit>
        <trans-unit id="2c33a40099b2ccd85bf32fbbe3e68ef69581fe7f" translate="yes" xml:space="preserve">
          <source>Rust &lt;em&gt;infers&lt;/em&gt; how to capture &lt;code&gt;v&lt;/code&gt;, and because &lt;code&gt;println!&lt;/code&gt; only needs a reference to &lt;code&gt;v&lt;/code&gt;, the closure tries to borrow &lt;code&gt;v&lt;/code&gt;. However, there&amp;rsquo;s a problem: Rust can&amp;rsquo;t tell how long the spawned thread will run, so it doesn&amp;rsquo;t know if the reference to &lt;code&gt;v&lt;/code&gt; will always be valid.</source>
          <target state="translated">Rust &lt;em&gt;推断出&lt;/em&gt;如何捕获 &lt;code&gt;v&lt;/code&gt; ，因为 &lt;code&gt;println!&lt;/code&gt; 只需要引用 &lt;code&gt;v&lt;/code&gt; ，闭包尝试借用 &lt;code&gt;v&lt;/code&gt; 。但是，这里有一个问题：Rust无法告知生成的线程将运行多长时间，因此它不知道对 &lt;code&gt;v&lt;/code&gt; 的引用是否始终有效。</target>
        </trans-unit>
        <trans-unit id="a0209ede66a299d6f835fa4fdb4f3764cda36010" translate="yes" xml:space="preserve">
          <source>Rust Compiler Error Index</source>
          <target state="translated">Rust编译器错误索引</target>
        </trans-unit>
        <trans-unit id="e86e2f7e2be516ce0300d8b3591468341035e99b" translate="yes" xml:space="preserve">
          <source>Rust Documentation</source>
          <target state="translated">Rust文档</target>
        </trans-unit>
        <trans-unit id="bdda1ab5e01f657b125db05f2df30c737c186ccb" translate="yes" xml:space="preserve">
          <source>Rust accomplishes this by performing monomorphization of the code that is using generics at compile time. &lt;em&gt;Monomorphization&lt;/em&gt; is the process of turning generic code into specific code by filling in the concrete types that are used when compiled.</source>
          <target state="translated">Rust通过在编译时对使用泛型的代码进行单态化来实现这一点。&lt;em&gt;单色化&lt;/em&gt;是通过填充编译时使用的具体类型，将通用代码转换为特定代码的过程。</target>
        </trans-unit>
        <trans-unit id="effe1b768c4ce9dd07e450e0add6036006e9bc1f" translate="yes" xml:space="preserve">
          <source>Rust actually makes it somewhat difficult to produce this loop in the first place. In order to end up with two values that point at each other, one of them needs to be mutable. This is difficult because &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt; enforces memory safety by only giving out shared references to the value it wraps, and these don't allow direct mutation. We need to wrap the part of the value we wish to mutate in a &lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&lt;/code&gt;&lt;/a&gt;, which provides &lt;em&gt;interior mutability&lt;/em&gt;: a method to achieve mutability through a shared reference. &lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&lt;/code&gt;&lt;/a&gt; enforces Rust's borrowing rules at runtime.</source>
          <target state="translated">实际上，Rust实际上使得在某种程度上很难产生此循环。为了最终得到两个指向彼此的值，其中之一需要是可变的。这很困难，因为&lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt;通过仅给出对其包装的值的共享引用来增强内存安全性，而这些引用不允许直接突变。我们需要将希望突变的部分值包装在&lt;a href=&quot;../cell/struct.refcell&quot;&gt; &lt;code&gt;RefCell&lt;/code&gt; 中&lt;/a&gt;，该单元提供&lt;em&gt;内部可变性&lt;/em&gt;：一种通过共享引用实现可变性的方法。&lt;a href=&quot;../cell/struct.refcell&quot;&gt; &lt;code&gt;RefCell&lt;/code&gt; &lt;/a&gt;在运行时强制执行Rust的借用规则。</target>
        </trans-unit>
        <trans-unit id="ae0d2b578d61b694ca8792ea668e7a392f999440" translate="yes" xml:space="preserve">
          <source>Rust allows publicly re-exporting items through a &lt;code&gt;pub use&lt;/code&gt; directive. Because this is a public directive, this allows the item to be used in the current module through the rules above. It essentially allows public access into the re-exported item. For example, this program is valid:</source>
          <target state="translated">Rust允许通过 &lt;code&gt;pub use&lt;/code&gt; 指令公开重新导出项目。由于这是一个公共指令，因此可以通过上述规则在当前模块中使用该项目。从本质上讲，它允许公共访问重新出口的物品。例如，此程序有效：</target>
        </trans-unit>
        <trans-unit id="4985d4ad4c4fe1e9dd624f9f2f34b2f73c6ed42b" translate="yes" xml:space="preserve">
          <source>Rust also brings contemporary developer tools to the systems programming world:</source>
          <target state="translated">Rust还为系统编程世界带来了当代的开发者工具。</target>
        </trans-unit>
        <trans-unit id="5dd2b7d9e5548848e20c79e786ff2b0d3869e782" translate="yes" xml:space="preserve">
          <source>Rust also has a pattern we can use when we don&amp;rsquo;t want to list all possible values. For example, a &lt;code&gt;u8&lt;/code&gt; can have valid values of 0 through 255. If we only care about the values 1, 3, 5, and 7, we don&amp;rsquo;t want to have to list out 0, 2, 4, 6, 8, 9 all the way up to 255. Fortunately, we don&amp;rsquo;t have to: we can use the special pattern &lt;code&gt;_&lt;/code&gt; instead:</source>
          <target state="translated">当我们不想列出所有可能的值时，Rust也可以使用一种模式。例如，一个 &lt;code&gt;u8&lt;/code&gt; 可以具有0到255的有效值。如果我们只关心值1、3、5和7，我们就不必列出0、2、4、6、8。 9一直到255。幸运的是，我们不必：我们可以使用特殊模式 &lt;code&gt;_&lt;/code&gt; 代替：</target>
        </trans-unit>
        <trans-unit id="e19038a4b8947e67e71fb4a5db45a42bb503b2ee" translate="yes" xml:space="preserve">
          <source>Rust also has another kind of comment, documentation comments, which we&amp;rsquo;ll discuss in the &amp;ldquo;Publishing a Crate to Crates.io&amp;rdquo; section of Chapter 14.</source>
          <target state="translated">Rust还具有另一种注释，即文档注释，我们将在第14章的&amp;ldquo;将板条箱发布到Crates.io&amp;rdquo;部分中进行讨论。</target>
        </trans-unit>
        <trans-unit id="bbdbd64aac3d17c7509c8b7d6b785d5bd17d6f9e" translate="yes" xml:space="preserve">
          <source>Rust also has two primitive types for &lt;em&gt;floating-point numbers&lt;/em&gt;, which are numbers with decimal points. Rust&amp;rsquo;s floating-point types are &lt;code&gt;f32&lt;/code&gt; and &lt;code&gt;f64&lt;/code&gt;, which are 32 bits and 64 bits in size, respectively. The default type is &lt;code&gt;f64&lt;/code&gt; because on modern CPUs it&amp;rsquo;s roughly the same speed as &lt;code&gt;f32&lt;/code&gt; but is capable of more precision.</source>
          <target state="translated">Rust对于&lt;em&gt;浮点数&lt;/em&gt;也有两种原始类型，即带小数点的数字。Rust的浮点类型为 &lt;code&gt;f32&lt;/code&gt; 和 &lt;code&gt;f64&lt;/code&gt; ，大小分别为32位和64位。默认类型为 &lt;code&gt;f64&lt;/code&gt; ,因为在现代CPU上，它的速度与 &lt;code&gt;f32&lt;/code&gt; 大致相同，但精度更高。</target>
        </trans-unit>
        <trans-unit id="29c1f1ea8c701993d0c6c3c7c3f0fda1a6673205" translate="yes" xml:space="preserve">
          <source>Rust and Cargo have features that help make your published package easier for people to use and to find in the first place. We&amp;rsquo;ll talk about some of these features next and then explain how to publish a package.</source>
          <target state="translated">Rust和Cargo的功能有助于使您发布的程序包更易于人们使用和查找。接下来，我们将讨论其中一些功能，然后说明如何发布程序包。</target>
        </trans-unit>
        <trans-unit id="7f3133698a0220ad7c68f52e85cdd6fbb05996b0" translate="yes" xml:space="preserve">
          <source>Rust attempts to mitigate the negative effects of using threads, but programming in a multithreaded context still takes careful thought and requires a code structure that is different from that in programs running in a single thread.</source>
          <target state="translated">Rust试图减轻使用线程的负面影响,但在多线程背景下的编程仍然需要仔细思考,并且需要与单线程运行的程序不同的代码结构。</target>
        </trans-unit>
        <trans-unit id="c689ed78369011848abbd3ac8af6ba4c0ea496a6" translate="yes" xml:space="preserve">
          <source>Rust automatically called &lt;code&gt;drop&lt;/code&gt; for us when our instances went out of scope, calling the code we specified. Variables are dropped in the reverse order of their creation, so &lt;code&gt;d&lt;/code&gt; was dropped before &lt;code&gt;c&lt;/code&gt;. This example gives you a visual guide to how the &lt;code&gt;drop&lt;/code&gt; method works; usually you would specify the cleanup code that your type needs to run rather than a print message.</source>
          <target state="translated">当我们的实例超出范围时，Rust自动为我们调用 &lt;code&gt;drop&lt;/code&gt; ，并调用我们指定的代码。变量以创建时的相反顺序删除，因此 &lt;code&gt;d&lt;/code&gt; 在 &lt;code&gt;c&lt;/code&gt; 之前删除。该示例为您提供了 &lt;code&gt;drop&lt;/code&gt; 方法如何工作的直观指南。通常，您将指定类型需要运行的清除代码，而不是打印消息。</target>
        </trans-unit>
        <trans-unit id="cb4fa52344abf16e13622ef8bb3c3893fe286a01" translate="yes" xml:space="preserve">
          <source>Rust breaks down these barriers by eliminating the old pitfalls and providing a friendly, polished set of tools to help you along the way. Programmers who need to &amp;ldquo;dip down&amp;rdquo; into lower-level control can do so with Rust, without taking on the customary risk of crashes or security holes, and without having to learn the fine points of a fickle toolchain. Better yet, the language is designed to guide you naturally towards reliable code that is efficient in terms of speed and memory usage.</source>
          <target state="translated">Rust消除了旧的陷阱，并提供了一套友好，精致的工具来帮助您一路突破这些障碍。那些需要&amp;ldquo;深入&amp;rdquo;到较低层控制的程序员可以使用Rust做到这一点，而不必承担崩溃或出现安全漏洞的惯常风险，也不必学习易变的工具链的精髓。更好的是，该语言旨在引导您自然地转向在速度和内存使用方面高效的可靠代码。</target>
        </trans-unit>
        <trans-unit id="cdaf4a6bf131d48ffa2af0a612ccc9c24734bcff" translate="yes" xml:space="preserve">
          <source>Rust can tell that &lt;code&gt;c&lt;/code&gt; is within the first pattern&amp;rsquo;s range and prints &lt;code&gt;early ASCII letter&lt;/code&gt;.</source>
          <target state="translated">Rust可以判断 &lt;code&gt;c&lt;/code&gt; 在第一个模式的范围内，并打印 &lt;code&gt;early ASCII letter&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0aa4b6eb356ff042802f189c6b9ce9b6d9bb7f5" translate="yes" xml:space="preserve">
          <source>Rust can&amp;rsquo;t figure out how much space to allocate for recursively defined types, so the compiler gives the error in Listing 15-4. But the error does include this helpful suggestion:</source>
          <target state="translated">Rust无法弄清楚为递归定义的类型分配多少空间，因此编译器在清单15-4中给出了错误。但是错误确实包含以下有用的建议：</target>
        </trans-unit>
        <trans-unit id="9cb61601ebccc0f0be25f7b4aa2fa6eed3577955" translate="yes" xml:space="preserve">
          <source>Rust can&amp;rsquo;t possibly know which of the two arguments we need, so we need to tell it. Because &lt;code&gt;contents&lt;/code&gt; is the argument that contains all of our text and we want to return the parts of that text that match, we know &lt;code&gt;contents&lt;/code&gt; is the argument that should be connected to the return value using the lifetime syntax.</source>
          <target state="translated">Rust可能无法知道我们需要两个参数中的哪一个，因此我们需要告诉它。因为 &lt;code&gt;contents&lt;/code&gt; 是包含我们所有文本的参数，并且我们想返回文本中匹配的部分，所以我们知道 &lt;code&gt;contents&lt;/code&gt; 应该使用生命周期语法连接到返回值的参数。</target>
        </trans-unit>
        <trans-unit id="51a6c6ddffe8c70b5e18c5cd678688a6e33bff5b" translate="yes" xml:space="preserve">
          <source>Rust chose to have the module system function this way so that hiding inner implementation details is the default. That way, you know which parts of the inner code you can change without breaking outer code. But you can expose inner parts of child modules code to outer ancestor modules by using the &lt;code&gt;pub&lt;/code&gt; keyword to make an item public.</source>
          <target state="translated">Rust选择以这种方式使模块系统起作用，以便默认隐藏内部实现细节。这样，您就知道可以更改内部代码的哪些部分而不会破坏外部代码。但是，您可以使用 &lt;code&gt;pub&lt;/code&gt; 关键字将项目公开，从而将子模块代码的内部部分公开给外部祖先模块。</target>
        </trans-unit>
        <trans-unit id="b4ffd6d9ef1384aeb9bcafe5fc321bee1c46b8a9" translate="yes" xml:space="preserve">
          <source>Rust chose to have the module system function this way so that hiding inner implementation details is the default. That way, you know which parts of the inner code you can change without breaking outer code. But you can expose inner parts of child modules' code to outer ancestor modules by using the &lt;code&gt;pub&lt;/code&gt; keyword to make an item public.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed85801e6aa03885ea34ff196d1f5d07d63ebd2" translate="yes" xml:space="preserve">
          <source>Rust code is incorrect if it exhibits any of the behaviors in the following list. This includes code within &lt;code&gt;unsafe&lt;/code&gt; blocks and &lt;code&gt;unsafe&lt;/code&gt; functions. &lt;code&gt;unsafe&lt;/code&gt; only means that avoiding undefined behavior is on the programmer; it does not change anything about the fact that Rust programs must never cause undefined behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e084b33e4de65ea0dae7e0617381c6117a4a157d" translate="yes" xml:space="preserve">
          <source>Rust code uses &lt;em&gt;snake case&lt;/em&gt; as the conventional style for function and variable names. In snake case, all letters are lowercase and underscores separate words. Here&amp;rsquo;s a program that contains an example function definition:</source>
          <target state="translated">Rust代码使用&lt;em&gt;蛇形大小写&lt;/em&gt;作为函数和变量名的常规样式。在蛇形情况下，所有字母均为小写字母，并在下划线下划线。这是一个包含示例函数定义的程序：</target>
        </trans-unit>
        <trans-unit id="e2a256ae150c413740aa7cd085658b2d9a62fbaa" translate="yes" xml:space="preserve">
          <source>Rust code, including within &lt;code&gt;unsafe&lt;/code&gt; blocks and &lt;code&gt;unsafe&lt;/code&gt; functions is incorrect if it exhibits any of the behaviors in the following list. It is the programmer's responsibility when writing &lt;code&gt;unsafe&lt;/code&gt; code that it is not possible to let &lt;code&gt;safe&lt;/code&gt; code exhibit these behaviors.</source>
          <target state="translated">如果Rust代码表现出以下列表中的任何行为，则包括 &lt;code&gt;unsafe&lt;/code&gt; 块和 &lt;code&gt;unsafe&lt;/code&gt; 功能在内的Rust代码均不正确。编写 &lt;code&gt;unsafe&lt;/code&gt; 代码是程序员的责任，不可能让 &lt;code&gt;safe&lt;/code&gt; 代码表现出这些行为。</target>
        </trans-unit>
        <trans-unit id="267e97a30b8e7e2b82eb0bd15c0545ae0f9ce0a2" translate="yes" xml:space="preserve">
          <source>Rust comes with a variety of things in its standard library. However, if you had to manually import every single thing that you used, it would be very verbose. But importing a lot of things that a program never uses isn't good either. A balance needs to be struck.</source>
          <target state="translated">Rust的标准库中自带了各种东西。但是,如果你要手动导入每一个你用过的东西,那就会很啰嗦。但是导入很多程序从来不用的东西也不好。需要取得一个平衡。</target>
        </trans-unit>
        <trans-unit id="30050a292030028105b725a80cfd11137e292a84" translate="yes" xml:space="preserve">
          <source>Rust complains that it doesn&amp;rsquo;t make sense to use &lt;code&gt;if let&lt;/code&gt; with an irrefutable pattern:</source>
          <target state="translated">Rust抱怨说， &lt;code&gt;if let&lt;/code&gt; 使用不可辩驳的模式来使用，那是没有意义的：</target>
        </trans-unit>
        <trans-unit id="151a36819a9041707f7a83143365261d69ad15c3" translate="yes" xml:space="preserve">
          <source>Rust de-sugars this into:</source>
          <target state="translated">锈去糖这成。</target>
        </trans-unit>
        <trans-unit id="7f9478ac9f9f1e9c53d0bbd8f2f29a740e10b88f" translate="yes" xml:space="preserve">
          <source>Rust development operates on a &lt;em&gt;train schedule&lt;/em&gt;. That is, all development is done on the &lt;code&gt;master&lt;/code&gt; branch of the Rust repository. Releases follow a software release train model, which has been used by Cisco IOS and other software projects. There are three &lt;em&gt;release channels&lt;/em&gt; for Rust:</source>
          <target state="translated">防锈剂的开发按&lt;em&gt;时间表进行&lt;/em&gt;。也就是说，所有开发都在Rust存储库的 &lt;code&gt;master&lt;/code&gt; 分支上完成。版本遵循软件发布流程模型，Cisco IOS和其他软件项目已使用该模型。Rust 共有三种&lt;em&gt;发布渠道&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="c1ceba7cafe03c43c23515eea22061c0156f8ee3" translate="yes" xml:space="preserve">
          <source>Rust divides keywords into three categories:</source>
          <target state="translated">Rust将关键词分为三类。</target>
        </trans-unit>
        <trans-unit id="520af2b0caca1d9f181466e2056d3f0b0b57619e" translate="yes" xml:space="preserve">
          <source>Rust does deref coercion when it finds types and trait implementations in three cases:</source>
          <target state="translated">Rust在三种情况下找到类型和trait实现时,会进行deref胁迫。</target>
        </trans-unit>
        <trans-unit id="44dd2f2386da2c0cdd5e7d3c775c2fc5131419be" translate="yes" xml:space="preserve">
          <source>Rust does not currently have a rigorously and formally defined memory model, so the precise semantics of what &quot;volatile&quot; means here is subject to change over time. That being said, the semantics will almost always end up pretty similar to &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf&quot;&gt;C11's definition of volatile&lt;/a&gt;.</source>
          <target state="translated">Rust目前没有严格和正式定义的内存模型，因此&amp;ldquo; volatile&amp;rdquo;在这里所指的确切语义会随时间而变化。话虽这么说，语义几乎总是与&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf&quot;&gt;C11的volatile定义&lt;/a&gt;非常相似。</target>
        </trans-unit>
        <trans-unit id="fbbe7c11a19a771711fe824dd3e7ec32cef70acb" translate="yes" xml:space="preserve">
          <source>Rust does not currently support this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f345e86ce4bdfb609568cfe8dcd5b348d517588" translate="yes" xml:space="preserve">
          <source>Rust does not permit a closure to directly reference its own type, either through an argument (as in the example above) or by capturing itself through its environment. This restriction helps keep closure inference tractable.</source>
          <target state="translated">Rust 不允许闭包直接引用自己的类型,无论是通过一个参数(如上面的例子)还是通过环境捕获自己。这个限制有助于保持闭包推理的可操作性。</target>
        </trans-unit>
        <trans-unit id="e25c8c25102888075b13676dc7cdde6255be9b8e" translate="yes" xml:space="preserve">
          <source>Rust does not yet have a defined memory model. Various academics and industry are working on various proposals, but for now, this is an under-defined place in the language.</source>
          <target state="translated">Rust还没有一个定义的内存模型。各个学术界和工业界都在研究各种建议,但目前,这在语言中是一个未被定义的地方。</target>
        </trans-unit>
        <trans-unit id="0eb864e233b19fcb363897f43533f05fca7a7717" translate="yes" xml:space="preserve">
          <source>Rust does not yet have a defined memory model. Various academics and industry professionals are working on various proposals, but for now, this is an under-defined place in the language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f3af8d8ef49dee8de54e673fbeb4ddba63eab4" translate="yes" xml:space="preserve">
          <source>Rust doesn&amp;rsquo;t allow you to create your own operators or overload arbitrary operators. But you can overload the operations and corresponding traits listed in &lt;code&gt;std::ops&lt;/code&gt; by implementing the traits associated with the operator. For example, in Listing 19-14 we overload the &lt;code&gt;+&lt;/code&gt; operator to add two &lt;code&gt;Point&lt;/code&gt; instances together. We do this by implementing the &lt;code&gt;Add&lt;/code&gt; trait on a &lt;code&gt;Point&lt;/code&gt; struct:</source>
          <target state="translated">Rust不允许您创建自己的运算符或重载任意运算符。但是，您可以通过实现与运算符关联的特征来重载 &lt;code&gt;std::ops&lt;/code&gt; 列出的操作和相应特征。例如，在清单19-14中，我们重载了 &lt;code&gt;+&lt;/code&gt; 运算符以将两个 &lt;code&gt;Point&lt;/code&gt; 实例加在一起。我们通过在 &lt;code&gt;Point&lt;/code&gt; 结构上实现 &lt;code&gt;Add&lt;/code&gt; trait来做到这一点：</target>
        </trans-unit>
        <trans-unit id="c421a151bfbb2f6d54a7d626539462864b68cd48" translate="yes" xml:space="preserve">
          <source>Rust doesn&amp;rsquo;t have an equivalent to the &lt;code&gt;-&amp;gt;&lt;/code&gt; operator; instead, Rust has a feature called &lt;em&gt;automatic referencing and dereferencing&lt;/em&gt;. Calling methods is one of the few places in Rust that has this behavior.</source>
          <target state="translated">Rust没有等效于 &lt;code&gt;-&amp;gt;&lt;/code&gt; 运算符；相反，Rust具有称为&lt;em&gt;自动引用和取消引用的功能&lt;/em&gt;。调用方法是Rust少数具有这种行为的地方之一。</target>
        </trans-unit>
        <trans-unit id="5b42e515beb4780bad0d430e54e0d456e0ed5719" translate="yes" xml:space="preserve">
          <source>Rust doesn&amp;rsquo;t have objects in the same sense as other languages have objects, and Rust doesn&amp;rsquo;t have mock object functionality built into the standard library as some other languages do. However, you can definitely create a struct that will serve the same purposes as a mock object.</source>
          <target state="translated">Rust没有像其他语言一样具有对象，而Rust没有像其他某些语言一样具有内置于标准库中的模拟对象功能。但是，您绝对可以创建一个结构，该结构的作用与模拟对象相同。</target>
        </trans-unit>
        <trans-unit id="742db479bb4771b176a5e708d26cf5692112a273" translate="yes" xml:space="preserve">
          <source>Rust doesn&amp;rsquo;t let us call &lt;code&gt;drop&lt;/code&gt; explicitly because Rust would still automatically call &lt;code&gt;drop&lt;/code&gt; on the value at the end of &lt;code&gt;main&lt;/code&gt;. This would be a &lt;em&gt;double free&lt;/em&gt; error because Rust would be trying to clean up the same value twice.</source>
          <target state="translated">Rust不允许我们显式调用 &lt;code&gt;drop&lt;/code&gt; ,因为Rust仍会自动在 &lt;code&gt;main&lt;/code&gt; 末尾的值上调用 &lt;code&gt;drop&lt;/code&gt; 。这将是一个&lt;em&gt;双重释放&lt;/em&gt;错误，因为Rust会尝试两次清除相同的值。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a5ddfc059c10a99d099217277479972f1dff9d9d" translate="yes" xml:space="preserve">
          <source>Rust enforces that there can only be one mutable reference to a particular piece of data in a particular scope. Because of this, attempting to use &lt;code&gt;swap_with_slice&lt;/code&gt; on a single slice will result in a compile failure:</source>
          <target state="translated">Rust强制说，在特定范围内，对一个特定的数据只能有一个可变的引用。因此，尝试在单个片上使用 &lt;code&gt;swap_with_slice&lt;/code&gt; 将导致编译失败：</target>
        </trans-unit>
        <trans-unit id="b8796c82063dd394ca7b901b43bcdd5623524f60" translate="yes" xml:space="preserve">
          <source>Rust enforces that there can only be one mutable reference with no immutable references to a particular piece of data in a particular scope. Because of this, attempting to use &lt;code&gt;clone_from_slice&lt;/code&gt; on a single slice will result in a compile failure:</source>
          <target state="translated">Rust强制说，只有一个可变引用，而对特定范围内的特定数据没有不变的引用。因此，尝试在单个片上使用 &lt;code&gt;clone_from_slice&lt;/code&gt; 将导致编译失败：</target>
        </trans-unit>
        <trans-unit id="706c743ee2c8c57c9cf12e956040ea8994faeb61" translate="yes" xml:space="preserve">
          <source>Rust enforces that there can only be one mutable reference with no immutable references to a particular piece of data in a particular scope. Because of this, attempting to use &lt;code&gt;copy_from_slice&lt;/code&gt; on a single slice will result in a compile failure:</source>
          <target state="translated">Rust强制说，只有一个可变引用，而对特定范围内的特定数据没有不变的引用。因此，尝试在单个片上使用 &lt;code&gt;copy_from_slice&lt;/code&gt; 将导致编译失败：</target>
        </trans-unit>
        <trans-unit id="89181f89a95db183f5b3d8303bfdfb2bc964fac0" translate="yes" xml:space="preserve">
          <source>Rust groups errors into two major categories: &lt;em&gt;recoverable&lt;/em&gt; and &lt;em&gt;unrecoverable&lt;/em&gt; errors. For a recoverable error, such as a file not found error, it&amp;rsquo;s reasonable to report the problem to the user and retry the operation. Unrecoverable errors are always symptoms of bugs, like trying to access a location beyond the end of an array.</source>
          <target state="translated">Rust将错误分为两大类：&lt;em&gt;可恢复&lt;/em&gt;错误和&lt;em&gt;不可恢复&lt;/em&gt;错误。对于可恢复的错误，例如找不到文件错误，可以合理地将问题报告给用户并重试该操作。不可恢复的错误始终是错误的征兆，例如试图访问数组末尾以外的位置。</target>
        </trans-unit>
        <trans-unit id="946b8888318bdae2b8d175a0fe4086722fd4b5fc" translate="yes" xml:space="preserve">
          <source>Rust guarantees to optimize the following types &lt;code&gt;T&lt;/code&gt; such that &lt;a href=&quot;enum.option&quot;&gt;&lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; has the same size as &lt;code&gt;T&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48061a332738260059547f58be5cc62d50260cf9" translate="yes" xml:space="preserve">
          <source>Rust guarantees to optimize the following types &lt;code&gt;T&lt;/code&gt; such that [&lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;] has the same size as &lt;code&gt;T&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17426c688445460fafbc02d6e3ab0f35fb6f21ba" translate="yes" xml:space="preserve">
          <source>Rust has a helpful method to handle line-by-line iteration of strings, conveniently named &lt;code&gt;lines&lt;/code&gt;, that works as shown in Listing 12-17. Note this won&amp;rsquo;t compile yet.</source>
          <target state="translated">Rust有一个有用的方法来处理字符串的逐行迭代，方便地命名为 &lt;code&gt;lines&lt;/code&gt; ，其工作如清单12-17所示。请注意，这尚未编译。</target>
        </trans-unit>
        <trans-unit id="1d698a54ce65a1a8a252d0c52823bbef706cfe2a" translate="yes" xml:space="preserve">
          <source>Rust has a number of features that allow you to manage your code&amp;rsquo;s organization, including which details are exposed, which details are private, and what names are in each scope in your programs. These features, sometimes collectively referred to as the &lt;em&gt;module system&lt;/em&gt;, and include:</source>
          <target state="translated">Rust具有许多功能，可让您管理代码的组织，包括哪些细节被公开，哪些细节是私有的以及程序中每个作用域中的名字。这些功能（有时统称为&lt;em&gt;模块系统&lt;/em&gt;）包括：</target>
        </trans-unit>
        <trans-unit id="d0ae5edd5a8810915e1c78a72e4cc1021a8ebd40" translate="yes" xml:space="preserve">
          <source>Rust has a number of features that allow you to manage your code&amp;rsquo;s organization, including which details are exposed, which details are private, and what names are in each scope in your programs. These features, sometimes collectively referred to as the &lt;em&gt;module system&lt;/em&gt;, include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49935161924130a0652e8dffafd8b2c317e5e61b" translate="yes" xml:space="preserve">
          <source>Rust has a special annotation called the &lt;code&gt;Copy&lt;/code&gt; trait that we can place on types like integers that are stored on the stack (we&amp;rsquo;ll talk more about traits in Chapter 10). If a type has the &lt;code&gt;Copy&lt;/code&gt; trait, an older variable is still usable after assignment. Rust won&amp;rsquo;t let us annotate a type with the &lt;code&gt;Copy&lt;/code&gt; trait if the type, or any of its parts, has implemented the &lt;code&gt;Drop&lt;/code&gt; trait. If the type needs something special to happen when the value goes out of scope and we add the &lt;code&gt;Copy&lt;/code&gt; annotation to that type, we&amp;rsquo;ll get a compile-time error. To learn about how to add the &lt;code&gt;Copy&lt;/code&gt; annotation to your type, see &lt;a href=&quot;appendix-03-derivable-traits&quot;&gt;&amp;ldquo;Derivable Traits&amp;rdquo;&lt;/a&gt; in Appendix C.</source>
          <target state="translated">Rust有一个特殊的注释，称为 &lt;code&gt;Copy&lt;/code&gt; 特征，我们可以将其放置在存储在堆栈中的整数之类的类型上（我们将在第10章中进一步讨论特征）。如果类型具有&amp;ldquo; &lt;code&gt;Copy&lt;/code&gt; 特征，则分配后仍然可以使用较旧的变量。如果类型或其任何部分实现了 &lt;code&gt;Drop&lt;/code&gt; 特性，Rust将不允许我们使用 &lt;code&gt;Copy&lt;/code&gt; 特性来注释该类型。如果在值超出范围时该类型需要特殊处理，并向该类型添加 &lt;code&gt;Copy&lt;/code&gt; 批注，则会收到编译时错误。要了解如何将 &lt;code&gt;Copy&lt;/code&gt; 注释添加到您的类型中，请参阅附录C中的&lt;a href=&quot;appendix-03-derivable-traits&quot;&gt;&amp;ldquo;可导出特征&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eb74ed2b9f402bf372b86ede78b5b956776b5eac" translate="yes" xml:space="preserve">
          <source>Rust has a special type named &lt;code&gt;!&lt;/code&gt; that&amp;rsquo;s known in type theory lingo as the &lt;em&gt;empty type&lt;/em&gt; because it has no values. We prefer to call it the &lt;em&gt;never type&lt;/em&gt; because it stands in the place of the return type when a function will never return. Here is an example:</source>
          <target state="translated">Rust有一个特殊的类型，叫做 &lt;code&gt;!&lt;/code&gt; 在类型论术语中被称为&lt;em&gt;空类型，&lt;/em&gt;因为它没有值。我们更喜欢将其称为&amp;ldquo; &lt;em&gt;永不&amp;rdquo;类型，&lt;/em&gt;因为当函数永不返回时，它会代替&amp;ldquo;返回&amp;rdquo;类型。这是一个例子：</target>
        </trans-unit>
        <trans-unit id="706acaa256465c2dcf2f521cfbdce1b8adb60b94" translate="yes" xml:space="preserve">
          <source>Rust has a well-defined &lt;a href=&quot;../../reference/destructors&quot;&gt;drop order&lt;/a&gt; of values. To make sure that fields or locals are dropped in a specific order, reorder the declarations such that the implicit drop order is the correct one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20f831507fc3015fa4b5f62f8ae95078cffc507" translate="yes" xml:space="preserve">
          <source>Rust has an extremely powerful control flow operator called &lt;code&gt;match&lt;/code&gt; that allows you to compare a value against a series of patterns and then execute code based on which pattern matches. Patterns can be made up of literal values, variable names, wildcards, and many other things; Chapter 18 covers all the different kinds of patterns and what they do. The power of &lt;code&gt;match&lt;/code&gt; comes from the expressiveness of the patterns and the fact that the compiler confirms that all possible cases are handled.</source>
          <target state="translated">Rust具有一个非常强大的控制流运算符，称为 &lt;code&gt;match&lt;/code&gt; ，它使您可以将值与一系列模式进行比较，然后根据匹配的模式执行代码。模式可以由文字值，变量名，通配符和许多其他内容组成；第18章介绍了所有不同类型的模式及其作用。 &lt;code&gt;match&lt;/code&gt; 的力量来自模式的表现力以及编译器确认已处理所有可能情况的事实。</target>
        </trans-unit>
        <trans-unit id="274075ef85f35df55435242c1d906ad5d8960c88" translate="yes" xml:space="preserve">
          <source>Rust has provided a number of traits for us to use with the &lt;code&gt;derive&lt;/code&gt; annotation that can add useful behavior to our custom types. Those traits and their behaviors are listed in Appendix C. We&amp;rsquo;ll cover how to implement these traits with custom behavior as well as how to create your own traits in Chapter 10.</source>
          <target state="translated">Rust为我们提供了许多特征，可以与 &lt;code&gt;derive&lt;/code&gt; 注释一起使用，这些特征可以为我们的自定义类型添加有用的行为。这些特征及其行为列在附录C中。我们将在第10章中介绍如何通过自定义行为实现这些特征，以及如何创建自己的特征。</target>
        </trans-unit>
        <trans-unit id="9abfc06989ca660b27a8bdfcf34e581735c33394" translate="yes" xml:space="preserve">
          <source>Rust has rules that allow lifetimes to be elided in various places where the compiler can infer a sensible default choice.</source>
          <target state="translated">Rust有规则,允许在各种地方省略寿命,编译器可以推断出一个合理的默认选择。</target>
        </trans-unit>
        <trans-unit id="f8345bc804bda40bffec95786aae64fa77a56f07" translate="yes" xml:space="preserve">
          <source>Rust has three kinds of loops: &lt;code&gt;loop&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, and &lt;code&gt;for&lt;/code&gt;. Let&amp;rsquo;s try each one.</source>
          <target state="translated">Rust具有三种循环： &lt;code&gt;loop&lt;/code&gt; ， &lt;code&gt;while&lt;/code&gt; 和 &lt;code&gt;for&lt;/code&gt; 。让我们尝试每个。</target>
        </trans-unit>
        <trans-unit id="69ac847beaa0b2c5daa7fb301847708a789caa24" translate="yes" xml:space="preserve">
          <source>Rust has two kinds of statement: &lt;a href=&quot;#declaration-statements&quot;&gt;declaration statements&lt;/a&gt; and &lt;a href=&quot;#expression-statements&quot;&gt;expression statements&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4b07d2a6fb6a7fe95444fa2c7afda8086fcf0c" translate="yes" xml:space="preserve">
          <source>Rust has two kinds of statement: &lt;a href=&quot;statements#declaration-statements&quot;&gt;declaration statements&lt;/a&gt; and &lt;a href=&quot;statements#expression-statements&quot;&gt;expression statements&lt;/a&gt;.</source>
          <target state="translated">Rust有两种语句：&lt;a href=&quot;statements#declaration-statements&quot;&gt;声明语句&lt;/a&gt;和&lt;a href=&quot;statements#expression-statements&quot;&gt;表达式语句&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="005babc4bad22226436a0f4a1424db5097b9ced6" translate="yes" xml:space="preserve">
          <source>Rust has two ways to reference an element so you can choose how the program behaves when you try to use an index value that the vector doesn&amp;rsquo;t have an element for. As an example, let&amp;rsquo;s see what a program will do if it has a vector that holds five elements and then tries to access an element at index 100, as shown in Listing 8-6.</source>
          <target state="translated">Rust有两种引用元素的方法，因此您可以选择在尝试使用向量没有元素的索引值时程序的行为。作为示例，让我们看看程序具有一个包含五个元素的向量，然后尝试访问索引为100的元素时的操作，如清单8-6所示。</target>
        </trans-unit>
        <trans-unit id="8024edbf38de66c89e3d81c184c687bc31f1dd00" translate="yes" xml:space="preserve">
          <source>Rust input is interpreted as a sequence of Unicode code points encoded in UTF-8.</source>
          <target state="translated">Rust输入被解释为以UTF-8编码的Unicode码点序列。</target>
        </trans-unit>
        <trans-unit id="c8cbae13f648a692e7452cc98631131e1d6323f2" translate="yes" xml:space="preserve">
          <source>Rust instead uses generics to abstract over different possible types and trait bounds to impose constraints on what those types must provide. This is sometimes called &lt;em&gt;bounded parametric polymorphism&lt;/em&gt;.</source>
          <target state="translated">相反，Rust使用泛型对不同的可能类型和特征范围进行抽象，以对这些类型必须提供的内容施加约束。这有时称为&lt;em&gt;有界参数多态性&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b1053cabf6d03bc378398388561e05d76d497e05" translate="yes" xml:space="preserve">
          <source>Rust is &lt;em&gt;primarily&lt;/em&gt; an expression language. This means that most forms of value-producing or effect-causing evaluation are directed by the uniform syntax category of &lt;em&gt;expressions&lt;/em&gt;. Each kind of expression can typically &lt;em&gt;nest&lt;/em&gt; within each other kind of expression, and rules for evaluation of expressions involve specifying both the value produced by the expression and the order in which its sub-expressions are themselves evaluated.</source>
          <target state="translated">Rust &lt;em&gt;主要是&lt;/em&gt;一种表达语言。这意味着大多数形式的价值产生或影响评估均由&lt;em&gt;表达式&lt;/em&gt;的统一语法类别指导。每种类型的表达式通常可以&lt;em&gt;嵌套&lt;/em&gt;在彼此的另一种类型的表达式中，并且表达式的评估规则包括指定由表达式产生的值和对其子表达式本身求值的顺序。</target>
        </trans-unit>
        <trans-unit id="5db5878515e4389bbf8421d74fcb5d667d66d9ab" translate="yes" xml:space="preserve">
          <source>Rust is a &quot;free-form&quot; language, meaning that all forms of whitespace serve only to separate &lt;em&gt;tokens&lt;/em&gt; in the grammar, and have no semantic significance.</source>
          <target state="translated">Rust是一种&amp;ldquo;自由格式&amp;rdquo;语言，表示所有形式的空格仅用于分隔语法中的&lt;em&gt;标记&lt;/em&gt;，而没有语义上的意义。</target>
        </trans-unit>
        <trans-unit id="3cea4d3df9c4c79e41064c918cdf547361978c7e" translate="yes" xml:space="preserve">
          <source>Rust is for people who crave speed and stability in a language. By speed, we mean the speed of the programs that you can create with Rust and the speed at which Rust lets you write them. The Rust compiler&amp;rsquo;s checks ensure stability through feature additions and refactoring. This is in contrast to the brittle legacy code in languages without these checks, which developers are often afraid to modify. By striving for zero-cost abstractions, higher-level features that compile to lower-level code as fast as code written manually, Rust endeavors to make safe code be fast code as well.</source>
          <target state="translated">Rust适用于渴望使用某种语言的速度和稳定性的人。所谓速度，是指您可以用Rust创建的程序的速度，以及Rust使您编写程序的速度。Rust编译器的检查通过添加功能和重构来确保稳定性。这与没有进行这些检查的语言中易碎的旧代码相反，开发人员通常不敢对其进行修改。通过努力实现零成本抽象，将高级功能编译为低级代码的速度与手动编写的代码一样快，Rust努力使安全代码也成为快速代码。</target>
        </trans-unit>
        <trans-unit id="7bf10b5f2d62512e2d305590c2208014f45470d4" translate="yes" xml:space="preserve">
          <source>Rust is for people who want to build the Rust programming language, community, developer tools, and libraries. We&amp;rsquo;d love to have you contribute to the Rust language.</source>
          <target state="translated">Rust适用于想要构建Rust编程语言，社区，开发人员工具和库的人。我们希望您能为Rust语言做出贡献。</target>
        </trans-unit>
        <trans-unit id="2dd06888c30776a4c25d59c7d1262374011d3d0b" translate="yes" xml:space="preserve">
          <source>Rust is for students and those who are interested in learning about systems concepts. Using Rust, many people have learned about topics like operating systems development. The community is very welcoming and happy to answer student questions. Through efforts such as this book, the Rust teams want to make systems concepts more accessible to more people, especially those new to programming.</source>
          <target state="translated">Rust是为学生和对学习系统概念感兴趣的人准备的。使用Rust,很多人都了解了操作系统开发等话题。社区非常欢迎并乐意回答学生的问题。通过本书等努力,Rust团队希望让更多的人,尤其是那些编程新手,能够了解系统概念。</target>
        </trans-unit>
        <trans-unit id="fe5a0dfe919ae890cb83e73c25365cbc5b82b5b4" translate="yes" xml:space="preserve">
          <source>Rust is ideal for many people for a variety of reasons. Let&amp;rsquo;s look at a few of the most important groups.</source>
          <target state="translated">由于多种原因，Rust是许多人的理想选择。让我们看一些最重要的小组。</target>
        </trans-unit>
        <trans-unit id="42421e785d37bc9b73d820b74a50d1fba537bea2" translate="yes" xml:space="preserve">
          <source>Rust is not a particularly original language, with design elements coming from a wide range of sources. Some of these are listed below (including elements that have since been removed):</source>
          <target state="translated">Rust并不是一种特别原始的语言,其设计元素的来源非常广泛。下面列出了其中的一些(包括后来被删除的元素)。</target>
        </trans-unit>
        <trans-unit id="b44eb4eed4591a2484384d8f13e00b4678784a52" translate="yes" xml:space="preserve">
          <source>Rust is proving to be a productive tool for collaborating among large teams of developers with varying levels of systems programming knowledge. Low-level code is prone to a variety of subtle bugs, which in most other languages can be caught only through extensive testing and careful code review by experienced developers. In Rust, the compiler plays a gatekeeper role by refusing to compile code with these elusive bugs, including concurrency bugs. By working alongside the compiler, the team can spend their time focusing on the program&amp;rsquo;s logic rather than chasing down bugs.</source>
          <target state="translated">事实证明，Rust是用于在具有不同级别的系统编程知识的大型开发人员团队之间进行协作的高效工具。低级代码容易产生各种细微的错误，在大多数其他语言中，只有经过经验丰富的开发人员进行广泛的测试和仔细的代码审查才能发现这些错误。在Rust中，编译器通过拒绝使用这些难以捉摸的错误（包括并发错误）来编译代码，从而起到了看门人的作用。通过与编译器并肩工作，团队可以将时间花在专注于程序的逻辑上，而不是寻找错误。</target>
        </trans-unit>
        <trans-unit id="e7fcfa2c0e9d01cf1bef3a319720c713bacd4522" translate="yes" xml:space="preserve">
          <source>Rust is still a work in progress with places where the compiler could be improved, but in the future, the code in Listing 20-20 should work just fine. People just like you are working to fix this and other issues! After you&amp;rsquo;ve finished this book, we would love for you to join in.</source>
          <target state="translated">在需要改进编译器的地方，Rust仍在进行中，但将来，清单20-20中的代码应该可以正常工作。像您一样的人正在努力解决此问题和其他问题！读完这本书后，我们希望您能加入。</target>
        </trans-unit>
        <trans-unit id="414ef5b7fed42f865260a7cd152d3f2a763ca163" translate="yes" xml:space="preserve">
          <source>Rust itself does not have a Python-like equivalent of named parameters to a function, but the &lt;a href=&quot;../macro.format&quot;&gt;&lt;code&gt;format!&lt;/code&gt;&lt;/a&gt; macro is a syntax extension that allows it to leverage named parameters. Named parameters are listed at the end of the argument list and have the syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009bd344314f5929e591a576862f0addd792ad2d" translate="yes" xml:space="preserve">
          <source>Rust itself does not have a Python-like equivalent of named parameters to a function, but the &lt;a href=&quot;../macro.format&quot;&gt;&lt;code&gt;format!&lt;/code&gt;&lt;/a&gt; macro is a syntax extension which allows it to leverage named parameters. Named parameters are listed at the end of the argument list and have the syntax:</source>
          <target state="translated">Rust本身没有像函数一样的类Python命名参数，而是&lt;a href=&quot;../macro.format&quot;&gt; &lt;code&gt;format!&lt;/code&gt; &lt;/a&gt;宏是一种语法扩展，它可以利用命名参数。命名参数列在参数列表的末尾，并具有以下语法：</target>
        </trans-unit>
        <trans-unit id="2f45412f8a16ab817b5f0812176d720466554450" translate="yes" xml:space="preserve">
          <source>Rust itself has no notion of immovable types, and considers moves (e.g., through assignment or &lt;a href=&quot;../mem/fn.replace&quot;&gt;&lt;code&gt;mem::replace&lt;/code&gt;&lt;/a&gt;) to always be safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf73204b9a4eab7a093c6de5aa1aad6f2361e93a" translate="yes" xml:space="preserve">
          <source>Rust knows that we didn&amp;rsquo;t cover every possible case and even knows which pattern we forgot! Matches in Rust are &lt;em&gt;exhaustive&lt;/em&gt;: we must exhaust every last possibility in order for the code to be valid. Especially in the case of &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;, when Rust prevents us from forgetting to explicitly handle the &lt;code&gt;None&lt;/code&gt; case, it protects us from assuming that we have a value when we might have null, thus making the billion-dollar mistake discussed earlier impossible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5773a78f91f6dd61a894f54aca9217a3e2589f2c" translate="yes" xml:space="preserve">
          <source>Rust knows that we didn&amp;rsquo;t cover every possible case and even knows which pattern we forgot! Matches in Rust are &lt;em&gt;exhaustive&lt;/em&gt;: we must exhaust every last possibility in order for the code to be valid. Especially in the case of &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;, when Rust prevents us from forgetting to explicitly handle the &lt;code&gt;None&lt;/code&gt; case, it protects us from assuming that we have a value when we might have null, thus making the billion-dollar mistake discussed earlier.</source>
          <target state="translated">Rust知道我们没有涵盖所有可能的情况，甚至知道我们忘记了哪种模式！Rust中的匹配非常&lt;em&gt;详尽&lt;/em&gt;：为了使代码有效，我们必须尽一切可能。特别是在 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 的情况下，当Rust阻止我们忘记显式处理 &lt;code&gt;None&lt;/code&gt; 情况时，它可以防止我们假设我们有一个可能为null的值，从而犯了前面讨论的数十亿美元的错误。</target>
        </trans-unit>
        <trans-unit id="6037ceeea4fb74411f6b08d6b6645ce5f8d0bdce" translate="yes" xml:space="preserve">
          <source>Rust lets you organize your packages into crates and your crates into modules so you can refer to items defined in one module from another module. You can do this by specifying absolute or relative paths. These paths can be brought into scope with a &lt;code&gt;use&lt;/code&gt; statement so you can use a shorter path for multiple uses of the item in that scope. Module code is private by default, but you can make definitions public by adding the &lt;code&gt;pub&lt;/code&gt; keyword.</source>
          <target state="translated">Rust使您可以将包装分为板条箱和板条箱模块，以便您可以从另一个模块引用一个模块中定义的项目。您可以通过指定绝对或相对路径来做到这一点。可以 &lt;code&gt;use&lt;/code&gt; 语句将这些路径纳入范围，因此您可以在该范围内对项目的多次使用使用较短的路径。默认情况下，模块代码是私有的，但是您可以通过添加 &lt;code&gt;pub&lt;/code&gt; 关键字来公开定义。</target>
        </trans-unit>
        <trans-unit id="a48891d4f88805e4179ad3fd74a5e413f7ca1c9b" translate="yes" xml:space="preserve">
          <source>Rust lets you split a package into multiple crates and a crate into modules so you can refer to items defined in one module from another module. You can do this by specifying absolute or relative paths. These paths can be brought into scope with a &lt;code&gt;use&lt;/code&gt; statement so you can use a shorter path for multiple uses of the item in that scope. Module code is private by default, but you can make definitions public by adding the &lt;code&gt;pub&lt;/code&gt; keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3bfbc1a861d0c5db39d3370b938cda066a42dac" translate="yes" xml:space="preserve">
          <source>Rust memory safety is based on this rule: Given an object &lt;code&gt;T&lt;/code&gt;, it is only possible to have one of the following:</source>
          <target state="translated">Rust内存安全性基于以下规则：给定对象 &lt;code&gt;T&lt;/code&gt; ，则只能具有以下之一：</target>
        </trans-unit>
        <trans-unit id="86b4aec68c04f34ea15c657bcbc637e9391e2aab" translate="yes" xml:space="preserve">
          <source>Rust needs to know how much memory to allocate for any value of a particular type, and all values of a type must use the same amount of memory. If Rust allowed us to write this code, these two &lt;code&gt;str&lt;/code&gt; values would need to take up the same amount of space. But they have different lengths: &lt;code&gt;s1&lt;/code&gt; needs 12 bytes of storage and &lt;code&gt;s2&lt;/code&gt; needs 15. This is why it&amp;rsquo;s not possible to create a variable holding a dynamically sized type.</source>
          <target state="translated">Rust需要知道为特定类型的任何值分配多少内存，并且类型的所有值必须使用相同数量的内存。如果Rust允许我们编写此代码，则这两个 &lt;code&gt;str&lt;/code&gt; 值将需要占用相同的空间。但是它们具有不同的长度： &lt;code&gt;s1&lt;/code&gt; 需要12个字节的存储空间，而 &lt;code&gt;s2&lt;/code&gt; 需要15 个字节的存储空间。这就是为什么无法创建包含动态大小类型的变量的原因。</target>
        </trans-unit>
        <trans-unit id="1b76d3101d775a50daedde876a1dc0606265c7b7" translate="yes" xml:space="preserve">
          <source>Rust needs to know what types will be in the vector at compile time so it knows exactly how much memory on the heap will be needed to store each element. A secondary advantage is that we can be explicit about what types are allowed in this vector. If Rust allowed a vector to hold any type, there would be a chance that one or more of the types would cause errors with the operations performed on the elements of the vector. Using an enum plus a &lt;code&gt;match&lt;/code&gt; expression means that Rust will ensure at compile time that every possible case is handled, as discussed in Chapter 6.</source>
          <target state="translated">Rust需要知道在编译时向量中的类型，因此Rust确切知道要存储每个元素需要多少内存。第二个优点是，我们可以明确说明此向量允许哪些类型。如果Rust允许向量保留任何类型，则一个或多个类型可能会导致对向量元素执行的操作出错。使用枚举加上 &lt;code&gt;match&lt;/code&gt; 表达式意味着Rust将确保在编译时处理所有可能的情况，如第6章所述。</target>
        </trans-unit>
        <trans-unit id="2c1cfd45b3ac0b28a948d8b4a2f4de2f8d870925" translate="yes" xml:space="preserve">
          <source>Rust only looks at the signature of the called function, as such it must already specify all requirements that will be used for every type parameter.</source>
          <target state="translated">Rust只看被调用函数的签名,因此它必须已经指定了所有将用于每个类型参数的要求。</target>
        </trans-unit>
        <trans-unit id="1ed887a173c68a2fae7555ba7b47d26cdae56e96" translate="yes" xml:space="preserve">
          <source>Rust only supports variadic parameters for interoperability with C code in its FFI. As such, variadic parameters can only be used with functions which are using the C ABI. Examples of erroneous code:</source>
          <target state="translated">Rust 只支持变量参数,以便在其 FFI 中与 C 代码互操作。因此,可变参数只能用于使用C ABI的函数。错误代码的例子。</target>
        </trans-unit>
        <trans-unit id="8006f3ad63420cf97d2756a811368615cb17cc79" translate="yes" xml:space="preserve">
          <source>Rust only supports variadic parameters for interoperability with C code in its FFI. As such, variadic parameters can only be used with functions which are using the C ABI. To fix such code, put them in an extern &quot;C&quot; block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d6720314fd90db94a4f0505ed35c899b634d9a" translate="yes" xml:space="preserve">
          <source>Rust provides different ways of interpreting the raw string data that computers store so that each program can choose the interpretation it needs, no matter what human language the data is in.</source>
          <target state="translated">Rust提供了不同的方法来解释计算机存储的原始字符串数据,这样每个程序都可以选择它所需要的解释,无论数据是用什么人类语言。</target>
        </trans-unit>
        <trans-unit id="1a9d1ac483b5a0d5a30d4a6b20b099a21ce7d1ed" translate="yes" xml:space="preserve">
          <source>Rust releases every six weeks, like clockwork. If you know the date of one Rust release, you can know the date of the next one: it&amp;rsquo;s six weeks later. A nice aspect of having releases scheduled every six weeks is that the next train is coming soon. If a feature happens to miss a particular release, there&amp;rsquo;s no need to worry: another one is happening in a short time! This helps reduce pressure to sneak possibly unpolished features in close to the release deadline.</source>
          <target state="translated">Rust像发条一样每六周发布一次。如果您知道一个Rust版本的发布日期，那么您可以知道下一个Rust版本的发布日期：六个星期后。每六周安排发布的一个不错的方面是下一列火车即将推出。如果某个功能恰巧错过了某个特定的发行版，则无需担心：另一个功能正在短期内发生！这有助于减少在发布截止日期之前潜入可能未打磨的功能的压力。</target>
        </trans-unit>
        <trans-unit id="14633826285dcf815682cf46efd1f87adcad6f15" translate="yes" xml:space="preserve">
          <source>Rust represents owned strings with the &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; type, and borrowed slices of strings with the &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; primitive. Both are always in UTF-8 encoding, and may contain nul bytes in the middle, i.e., if you look at the bytes that make up the string, there may be a &lt;code&gt;\0&lt;/code&gt; among them. Both &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;str&lt;/code&gt; store their length explicitly; there are no nul terminators at the end of strings like in C.</source>
          <target state="translated">Rust用&lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;类型表示拥有的字符串，并用&lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;原语表示借用的字符串切片。两者始终都是UTF-8编码，中间可能包含nul个字节，即，如果您查看组成字符串的字节，则其中可能有一个 &lt;code&gt;\0&lt;/code&gt; 。 &lt;code&gt;String&lt;/code&gt; 和 &lt;code&gt;str&lt;/code&gt; 都明确存储其长度；像C中的字符串末尾没有nul终止符。</target>
        </trans-unit>
        <trans-unit id="b115ba9be271d9cb748571eff2d355ec3f4582c1" translate="yes" xml:space="preserve">
          <source>Rust represents owned strings with the &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; type, and borrowed slices of strings with the &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; primitive. Both are always in UTF-8 encoding, and may contain nul bytes in the middle, i.e., if you look at the bytes that make up the string, there may be a &lt;code&gt;\0&lt;/code&gt; among them. Both &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;str&lt;/code&gt; store their length explicitly; there are no nul terminators at the end of strings like in C.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1035dbea9907a4eef978b13fc5c640f49f6ff75" translate="yes" xml:space="preserve">
          <source>Rust substitutes the &lt;code&gt;*&lt;/code&gt; operator with a call to the &lt;code&gt;deref&lt;/code&gt; method and then a plain dereference so we don&amp;rsquo;t have to think about whether or not we need to call the &lt;code&gt;deref&lt;/code&gt; method. This Rust feature lets us write code that functions identically whether we have a regular reference or a type that implements &lt;code&gt;Deref&lt;/code&gt;.</source>
          <target state="translated">Rust用 &lt;code&gt;*&lt;/code&gt; 运算符代替了对 &lt;code&gt;deref&lt;/code&gt; 方法的调用，然后进行了普通的解除引用，因此我们不必考虑是否需要调用 &lt;code&gt;deref&lt;/code&gt; 方法。有了Rust功能，无论我们是常规引用还是实现 &lt;code&gt;Deref&lt;/code&gt; 的类型，我们都可以编写功能相同的代码。</target>
        </trans-unit>
        <trans-unit id="aef02265ae4e5b20b25f7169f2eb182b32c41901" translate="yes" xml:space="preserve">
          <source>Rust supports four loop expressions:</source>
          <target state="translated">Rust支持四种循环表达方式。</target>
        </trans-unit>
        <trans-unit id="39846c5622487afb1918e636190776d3ba8814ed" translate="yes" xml:space="preserve">
          <source>Rust supports the basic mathematical operations you&amp;rsquo;d expect for all of the number types: addition, subtraction, multiplication, division, and remainder. The following code shows how you&amp;rsquo;d use each one in a &lt;code&gt;let&lt;/code&gt; statement:</source>
          <target state="translated">Rust支持所有数字类型的基本数学运算：加，减，乘，除和余数。以下代码显示了如何在 &lt;code&gt;let&lt;/code&gt; 语句中使用每个代码：</target>
        </trans-unit>
        <trans-unit id="f198f3079c114496b224a182d1c6f07406996d50" translate="yes" xml:space="preserve">
          <source>Rust takes a different path: the memory is automatically returned once the variable that owns it goes out of scope. Here&amp;rsquo;s a version of our scope example from Listing 4-1 using a &lt;code&gt;String&lt;/code&gt; instead of a string literal:</source>
          <target state="translated">Rust采取了另一条路径：拥有内存的变量超出范围后，内存将自动返回。这是清单4-1中范围示例的一个版本，使用 &lt;code&gt;String&lt;/code&gt; 而不是字符串文字：</target>
        </trans-unit>
        <trans-unit id="995e5bc0763da76eea3b582149feb3d425499836" translate="yes" xml:space="preserve">
          <source>Rust tells us that our code ignored the &lt;code&gt;Result&lt;/code&gt; value and the &lt;code&gt;Result&lt;/code&gt; value might indicate that an error occurred. But we&amp;rsquo;re not checking to see whether or not there was an error, and the compiler reminds us that we probably meant to have some error-handling code here! Let&amp;rsquo;s rectify that problem now.</source>
          <target state="translated">Rust告诉我们，我们的代码忽略了 &lt;code&gt;Result&lt;/code&gt; 值，并且 &lt;code&gt;Result&lt;/code&gt; 值可能表明发生了错误。但是我们没有检查是否有错误，编译器提醒我们我们可能打算在这里添加一些错误处理代码！让我们现在纠正这个问题。</target>
        </trans-unit>
        <trans-unit id="703d493ad79917201eb0acd3b321d61700389d3a" translate="yes" xml:space="preserve">
          <source>Rust treats all function calls as sugar for a more explicit, &lt;a href=&quot;../paths#qualified-paths&quot;&gt;fully-qualified syntax&lt;/a&gt;. Upon compilation, Rust will desugar all function calls into the explicit form. Rust may sometimes require you to qualify function calls with trait, depending on the ambiguity of a call in light of in-scope items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438b72da10259b8d5d86767186b4d727d3dbea23" translate="yes" xml:space="preserve">
          <source>Rust treats all function calls as sugar for a more explicit, fully-qualified syntax. Upon compilation, Rust will desugar all function calls into the explicit form. Rust may sometimes require you to qualify function calls with trait, depending on the ambiguity of a call in light of in-scope items.</source>
          <target state="translated">Rust 将所有的函数调用视为糖,以获得更明确、完全限定的语法。编译时,Rust 会将所有函数调用去糖化为显式形式。Rust 有时可能会要求你用 trait 来限定函数调用,这取决于调用在范围内项中的模糊性。</target>
        </trans-unit>
        <trans-unit id="d2dc323b3d2c25d779075b9140a6d1e2c6e50939" translate="yes" xml:space="preserve">
          <source>Rust types can be classified in various useful ways according to their intrinsic properties. These classifications are represented as traits.</source>
          <target state="translated">锈蚀类型可以根据其内在属性以各种有用的方式进行分类。这些分类用性状来表示。</target>
        </trans-unit>
        <trans-unit id="f77a840183554b84c65d125ee38f75c043f2f8d3" translate="yes" xml:space="preserve">
          <source>Rust uses the WhatWG Infra Standard's &lt;a href=&quot;https://infra.spec.whatwg.org/#ascii-whitespace&quot;&gt;definition of ASCII whitespace&lt;/a&gt;. There are several other definitions in wide use. For instance, &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap07.html#tag_07_03_01&quot;&gt;the POSIX locale&lt;/a&gt; includes U+000B VERTICAL TAB as well as all the above characters, but&amp;mdash;from the very same specification&amp;mdash;&lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_05&quot;&gt;the default rule for &quot;field splitting&quot; in the Bourne shell&lt;/a&gt; considers &lt;em&gt;only&lt;/em&gt; SPACE, HORIZONTAL TAB, and LINE FEED as whitespace.</source>
          <target state="translated">Rust使用WhatWG Infra Standard的&lt;a href=&quot;https://infra.spec.whatwg.org/#ascii-whitespace&quot;&gt;ASCII空格定义&lt;/a&gt;。还有其他几种广泛使用的定义。例如，&lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap07.html#tag_07_03_01&quot;&gt;POSIX语言环境&lt;/a&gt;包括U + 000B VERTICAL TAB以及所有上述字符，但是-从相同的规范来看&lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_05&quot;&gt;-Bourne Shell中&amp;ldquo;字段拆分&amp;rdquo;的默认规则&lt;/a&gt;&lt;em&gt;仅&lt;/em&gt;考虑SPACE，HORIZONTAL TAB和LINE FEED作为空白。</target>
        </trans-unit>
        <trans-unit id="80250cb612ec2f012c7bb709a162afa7cc99b219" translate="yes" xml:space="preserve">
          <source>Rust warns that you haven&amp;rsquo;t used the &lt;code&gt;Result&lt;/code&gt; value returned from &lt;code&gt;read_line&lt;/code&gt;, indicating that the program hasn&amp;rsquo;t handled a possible error.</source>
          <target state="translated">Rust警告您尚未使用 &lt;code&gt;read_line&lt;/code&gt; 返回的 &lt;code&gt;Result&lt;/code&gt; 值，表明该程序尚未处理可能的错误。</target>
        </trans-unit>
        <trans-unit id="63dc74fc48d1edb7e36f8812dc661ae955f4d16d" translate="yes" xml:space="preserve">
          <source>Rust will first call &lt;code&gt;Drop::drop&lt;/code&gt; for &lt;code&gt;_x&lt;/code&gt; and then for both &lt;code&gt;_x.one&lt;/code&gt; and &lt;code&gt;_x.two&lt;/code&gt;, meaning that running this will print</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99846f3671ba325d4d0a5778686542964bf3788a" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s &lt;code&gt;char&lt;/code&gt; type is four bytes in size and represents a Unicode Scalar Value, which means it can represent a lot more than just ASCII. Accented letters; Chinese, Japanese, and Korean characters; emoji; and zero-width spaces are all valid &lt;code&gt;char&lt;/code&gt; values in Rust. Unicode Scalar Values range from &lt;code&gt;U+0000&lt;/code&gt; to &lt;code&gt;U+D7FF&lt;/code&gt; and &lt;code&gt;U+E000&lt;/code&gt; to &lt;code&gt;U+10FFFF&lt;/code&gt; inclusive. However, a &amp;ldquo;character&amp;rdquo; isn&amp;rsquo;t really a concept in Unicode, so your human intuition for what a &amp;ldquo;character&amp;rdquo; is may not match up with what a &lt;code&gt;char&lt;/code&gt; is in Rust. We&amp;rsquo;ll discuss this topic in detail in &lt;a href=&quot;ch08-02-strings#storing-utf-8-encoded-text-with-strings&quot;&gt;&amp;ldquo;Storing UTF-8 Encoded Text with Strings&amp;rdquo;&lt;/a&gt; in Chapter 8.</source>
          <target state="translated">Rust的 &lt;code&gt;char&lt;/code&gt; 类型大小为4个字节，代表Unicode标量值，这意味着它可以代表的不仅仅是ASCII。重音字母；中文，日文和韩文字符；表情符号和零宽度空格在Rust 中都是有效的 &lt;code&gt;char&lt;/code&gt; 值。 Unicode标 &lt;code&gt;U+D7FF&lt;/code&gt; 范围从 &lt;code&gt;U+0000&lt;/code&gt; 到U + D7FF，从 &lt;code&gt;U+E000&lt;/code&gt; 到 &lt;code&gt;U+10FFFF&lt;/code&gt; (含）。但是，&amp;ldquo;字符&amp;rdquo;在Unicode中并不是真正的概念，因此您对&amp;ldquo;字符&amp;rdquo;是什么的直觉可能与Rust中的 &lt;code&gt;char&lt;/code&gt; 不匹配。我们将在第8章的&lt;a href=&quot;ch08-02-strings#storing-utf-8-encoded-text-with-strings&quot;&gt;&amp;ldquo;使用字符串存储UTF-8编码文本&amp;rdquo;&lt;/a&gt;中详细讨论该主题。</target>
        </trans-unit>
        <trans-unit id="a5a4edf491f9a6786fd28bf09333db3dadc399c0" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s borrow checker can&amp;rsquo;t understand that we&amp;rsquo;re borrowing different parts of the slice; it only knows that we&amp;rsquo;re borrowing from the same slice twice. Borrowing different parts of a slice is fundamentally okay because the two slices aren&amp;rsquo;t overlapping, but Rust isn&amp;rsquo;t smart enough to know this. When we know code is okay, but Rust doesn&amp;rsquo;t, it&amp;rsquo;s time to reach for unsafe code.</source>
          <target state="translated">Rust的借阅检查器无法理解我们要借用切片的不同部分。它只知道我们从同一个切片中借了两次。从根本上可以借用切片的不同部分，因为这两个切片没有重叠，但是Rust不够聪明，无法知道这一点。当我们知道代码可以，但是Rust不能，现在是时候获取不安全的代码了。</target>
        </trans-unit>
        <trans-unit id="8c55a2a82b7377101f0771c9bcd044aae6cf6540" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s central feature is &lt;em&gt;ownership&lt;/em&gt;. Although the feature is straightforward to explain, it has deep implications for the rest of the language.</source>
          <target state="translated">Rust的主要特征是&lt;em&gt;所有权&lt;/em&gt;。尽管该功能易于解释，但对其他语言有深远的影响。</target>
        </trans-unit>
        <trans-unit id="5d2271b00baf8fce0728901fd42c87e83d55abd0" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s closures are anonymous functions you can save in a variable or pass as arguments to other functions. You can create the closure in one place and then call the closure to evaluate it in a different context. Unlike functions, closures can capture values from the scope in which they&amp;rsquo;re defined. We&amp;rsquo;ll demonstrate how these closure features allow for code reuse and behavior customization.</source>
          <target state="translated">Rust的闭包是匿名函数，您可以将其保存在变量中或作为参数传递给其他函数。您可以在一个地方创建闭包，然后调用该闭包以在不同的上下文中对其进行评估。与函数不同，闭包可以从定义它们的范围中捕获值。我们将演示这些闭包功能如何实现代码重用和行为自定义。</target>
        </trans-unit>
        <trans-unit id="fd4c91ef23d0c1a58d5181596522ff41f1f360e9" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s commitment to reliability extends to error handling. Errors are a fact of life in software, so Rust has a number of features for handling situations in which something goes wrong. In many cases, Rust requires you to acknowledge the possibility of an error and take some action before your code will compile. This requirement makes your program more robust by ensuring that you&amp;rsquo;ll discover errors and handle them appropriately before you&amp;rsquo;ve deployed your code to production!</source>
          <target state="translated">Rust对可靠性的承诺扩展到错误处理。错误是软件中不可或缺的事实，因此Rust具有许多功能来处理出现问题的情况。在许多情况下，Rust要求您确认错误的可能性，并在编译代码之前采取一些措施。通过确保在将代码部署到生产环境之前发现并正确处理错误，此要求使您的程序更加健壮！</target>
        </trans-unit>
        <trans-unit id="50fd346e441893c513c7336bf8c9281fb59b1c1a" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s design has taken inspiration from many existing languages and techniques, and one significant influence is &lt;em&gt;functional programming&lt;/em&gt;. Programming in a functional style often includes using functions as values by passing them in arguments, returning them from other functions, assigning them to variables for later execution, and so forth.</source>
          <target state="translated">Rust的设计从许多现有的语言和技术中汲取了灵感，其中一个重要的影响是&lt;em&gt;函数式编程&lt;/em&gt;。以功能风格进行编程通常包括将功能用作值，方法是将其传入参数，从其他函数返回它们，将其分配给变量以供以后执行等。</target>
        </trans-unit>
        <trans-unit id="4cc35a990ff86bc53c3ee8555d1b3d65805dc72a" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s error handling features are designed to help you write more robust code. The &lt;code&gt;panic!&lt;/code&gt; macro signals that your program is in a state it can&amp;rsquo;t handle and lets you tell the process to stop instead of trying to proceed with invalid or incorrect values. The &lt;code&gt;Result&lt;/code&gt; enum uses Rust&amp;rsquo;s type system to indicate that operations might fail in a way that your code could recover from. You can use &lt;code&gt;Result&lt;/code&gt; to tell code that calls your code that it needs to handle potential success or failure as well. Using &lt;code&gt;panic!&lt;/code&gt; and &lt;code&gt;Result&lt;/code&gt; in the appropriate situations will make your code more reliable in the face of inevitable problems.</source>
          <target state="translated">Rust的错误处理功能旨在帮助您编写更强大的代码。在 &lt;code&gt;panic!&lt;/code&gt; 宏表示您的程序处于无法处理的状态，可让您告诉进程停止，而不是尝试使用无效或不正确的值进行处理。该 &lt;code&gt;Result&lt;/code&gt; 枚举使用锈病的类型系统来指示操作可能的方式，你的代码可以从恢复失败。您可以使用 &lt;code&gt;Result&lt;/code&gt; 来告诉调用您的代码的代码也需要处理潜在的成功或失败。使用 &lt;code&gt;panic!&lt;/code&gt; 在适当的情况下， &lt;code&gt;Result&lt;/code&gt; 将使您的代码在遇到不可避免的问题时更加可靠。</target>
        </trans-unit>
        <trans-unit id="0978df93a2cae0fac3519f383fbc09538259dfbb" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s memory safety guarantees make it difficult, but not impossible, to accidentally create memory that is never cleaned up (known as a &lt;em&gt;memory leak&lt;/em&gt;). Preventing memory leaks entirely is not one of Rust&amp;rsquo;s guarantees in the same way that disallowing data races at compile time is, meaning memory leaks are memory safe in Rust. We can see that Rust allows memory leaks by using &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;: it&amp;rsquo;s possible to create references where items refer to each other in a cycle. This creates memory leaks because the reference count of each item in the cycle will never reach 0, and the values will never be dropped.</source>
          <target state="translated">Rust的内存安全性保证使偶然创建从未清除过的内存变得困难，但并非并非不可能（称为&lt;em&gt;内存泄漏&lt;/em&gt;）。完全防止内存泄漏不是Rust的保证之一，就像在编译时禁止数据竞争一样，这意味着内存泄漏在Rust中是内存安全的。我们可以看到Rust通过使用 &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 和 &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; 允许内存泄漏：可以创建引用，其中项目在一个周期中相互引用。这会导致内存泄漏，因为循环中每个项目的引用计数永远不会达到0，并且这些值也永远不会被丢弃。</target>
        </trans-unit>
        <trans-unit id="c83ae6d5141700914f4870b9a16bff718d75b311" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s ownership rules have saved us again! We got an error from the code in Listing 16-3 because Rust was being conservative and only borrowing &lt;code&gt;v&lt;/code&gt; for the thread, which meant the main thread could theoretically invalidate the spawned thread&amp;rsquo;s reference. By telling Rust to move ownership of &lt;code&gt;v&lt;/code&gt; to the spawned thread, we&amp;rsquo;re guaranteeing Rust that the main thread won&amp;rsquo;t use &lt;code&gt;v&lt;/code&gt; anymore. If we change Listing 16-4 in the same way, we&amp;rsquo;re then violating the ownership rules when we try to use &lt;code&gt;v&lt;/code&gt; in the main thread. The &lt;code&gt;move&lt;/code&gt; keyword overrides Rust&amp;rsquo;s conservative default of borrowing; it doesn&amp;rsquo;t let us violate the ownership rules.</source>
          <target state="translated">Rust的所有权规则再次拯救了我们！清单16-3中的代码给了我们一个错误，因为Rust很保守，只为线程借用了 &lt;code&gt;v&lt;/code&gt; ，这意味着从理论上讲主线程会使生成的线程的引用无效。通过告诉Rust将 &lt;code&gt;v&lt;/code&gt; 的所有权移至产生的线程，我们保证Rust不再使用 &lt;code&gt;v&lt;/code&gt; 。如果我们以相同的方式更改清单16-4，则在尝试在主线程中使用 &lt;code&gt;v&lt;/code&gt; 时，就会违反所有权规则。该 &lt;code&gt;move&lt;/code&gt; 借款的关键字覆盖锈病的保守的默认;它不会让我们违反所有权规则。</target>
        </trans-unit>
        <trans-unit id="acb5b5af69714850a9eaace832e90521d0ab51b4" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s patterns are very useful in that they help distinguish between different kinds of data. When used in &lt;code&gt;match&lt;/code&gt; expressions, Rust ensures your patterns cover every possible value, or your program won&amp;rsquo;t compile. Patterns in &lt;code&gt;let&lt;/code&gt; statements and function parameters make those constructs more useful, enabling the destructuring of values into smaller parts at the same time as assigning to variables. We can create simple or complex patterns to suit our needs.</source>
          <target state="translated">Rust的模式非常有用，因为它们有助于区分不同类型的数据。当在 &lt;code&gt;match&lt;/code&gt; 表达式中使用时，Rust确保您的模式覆盖所有可能的值，否则程序将无法编译。在模式 &lt;code&gt;let&lt;/code&gt; 语句和函数参数，使这些结构更加有用，使价值的拆解成更小的部分在同一时间分配给变量。我们可以创建简单或复杂的模式来满足我们的需求。</target>
        </trans-unit>
        <trans-unit id="dce982e836868a2e5286452911eb980f53708aba" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s speed, safety, single binary output, and cross-platform support make it an ideal language for creating command line tools, so for our project, we&amp;rsquo;ll make our own version of the classic command line tool &lt;code&gt;grep&lt;/code&gt; (&lt;strong&gt;g&lt;/strong&gt;lobally search a &lt;strong&gt;r&lt;/strong&gt;egular &lt;strong&gt;e&lt;/strong&gt;xpression and &lt;strong&gt;p&lt;/strong&gt;rint). In the simplest use case, &lt;code&gt;grep&lt;/code&gt; searches a specified file for a specified string. To do so, &lt;code&gt;grep&lt;/code&gt; takes as its arguments a filename and a string. Then it reads the file, finds lines in that file that contain the string argument, and prints those lines.</source>
          <target state="translated">Rust的速度，安全性，单个二进制输出和跨平台支持使其成为创建命令行工具的理想语言，因此对于我们的项目，我们将制作自己的经典命令行工具 &lt;code&gt;grep&lt;/code&gt; 版本（&lt;strong&gt;g&lt;/strong&gt;逐句搜索&lt;strong&gt;r&lt;/strong&gt; egular &lt;strong&gt;&amp;Euml;&lt;/strong&gt; XPRESSION和&lt;strong&gt;p&lt;/strong&gt; RINT）。在最简单的用例中， &lt;code&gt;grep&lt;/code&gt; 在指定的文件中搜索指定的字符串。为此， &lt;code&gt;grep&lt;/code&gt; 将文件名和字符串作为其参数。然后，它读取文件，在该文件中查找包含string参数的行，并打印这些行。</target>
        </trans-unit>
        <trans-unit id="c6ca1c192ffb4864e88d3222cca77235e6772b0f" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s standard library also includes a number of other string types, such as &lt;code&gt;OsString&lt;/code&gt;, &lt;code&gt;OsStr&lt;/code&gt;, &lt;code&gt;CString&lt;/code&gt;, and &lt;code&gt;CStr&lt;/code&gt;. Library crates can provide even more options for storing string data. See how those names all end in &lt;code&gt;String&lt;/code&gt; or &lt;code&gt;Str&lt;/code&gt;? They refer to owned and borrowed variants, just like the &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;str&lt;/code&gt; types you&amp;rsquo;ve seen previously. These string types can store text in different encodings or be represented in memory in a different way, for example. We won&amp;rsquo;t discuss these other string types in this chapter; see their API documentation for more about how to use them and when each is appropriate.</source>
          <target state="translated">Rust的标准库还包括许多其他字符串类型，例如 &lt;code&gt;OsString&lt;/code&gt; ， &lt;code&gt;OsStr&lt;/code&gt; ， &lt;code&gt;CString&lt;/code&gt; 和 &lt;code&gt;CStr&lt;/code&gt; 。图书馆包装箱可以提供更多的选项来存储字符串数据。看看这些名称如何都以 &lt;code&gt;String&lt;/code&gt; 或 &lt;code&gt;Str&lt;/code&gt; 结尾？它们引用拥有和借用的变体，就像您之前看到的 &lt;code&gt;String&lt;/code&gt; 和 &lt;code&gt;str&lt;/code&gt; 类型一样。例如，这些字符串类型可以用不同的编码存储文本，或者以不同的方式在内存中表示。在本章中，我们不会讨论其他字符串类型。有关如何使用它们以及何时使用它们的更多信息，请参见其API文档。</target>
        </trans-unit>
        <trans-unit id="aa9ff7a849c1640cd4cc865fda33cc9c81cac848" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s standard library includes a number of very useful data structures called &lt;em&gt;collections&lt;/em&gt;. Most other data types represent one specific value, but collections can contain multiple values. Unlike the built-in array and tuple types, the data these collections point to is stored on the heap, which means the amount of data does not need to be known at compile time and can grow or shrink as the program runs. Each kind of collection has different capabilities and costs, and choosing an appropriate one for your current situation is a skill you&amp;rsquo;ll develop over time. In this chapter, we&amp;rsquo;ll discuss three collections that are used very often in Rust programs:</source>
          <target state="translated">Rust的标准库包括许多非常有用的数据结构，称为&lt;em&gt;collections&lt;/em&gt;。大多数其他数据类型表示一个特定值，但是集合可以包含多个值。与内置数组和元组类型不同，这些集合指向的数据存储在堆上，这意味着在编译时不需要知道数据量，并且可以在程序运行时增长或收缩。每种收藏品都有不同的功能和成本，并且随着时间的推移选择合适的收藏品是您将逐渐发展的一项技能。在本章中，我们将讨论在Rust程序中经常使用的三个集合：</target>
        </trans-unit>
        <trans-unit id="98e2048971bf413ef392b0aef43b635b310936b3" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s testing features provide a way to specify how code should function to ensure it continues to work as you expect, even as you make changes. Unit tests exercise different parts of a library separately and can test private implementation details. Integration tests check that many parts of the library work together correctly, and they use the library&amp;rsquo;s public API to test the code in the same way external code will use it. Even though Rust&amp;rsquo;s type system and ownership rules help prevent some kinds of bugs, tests are still important to reduce logic bugs having to do with how your code is expected to behave.</source>
          <target state="translated">Rust的测试功能提供了一种方法，可以指定代码应如何发挥作用，以确保即使您进行更改，代码也可以按预期工作。单元测试分别行使库的不同部分，并且可以测试私有实现细节。集成测试检查库的许多部分是否可以正常协同工作，并且它们使用库的公共API来测试代码，就像外部代码使用它的方式一样。尽管Rust的类型系统和所有权规则有助于防止某些类型的错误，但是测试对于减少与期望代码行为有关的逻辑错误仍然很重要。</target>
        </trans-unit>
        <trans-unit id="acb8e83983bd289d54829daf197d511dbb760356" translate="yes" xml:space="preserve">
          <source>Rust's &quot;try catch&quot; construct which invokes the function pointer &lt;code&gt;f&lt;/code&gt; with the data pointer &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="translated">Rust的&amp;ldquo; try catch&amp;rdquo;构造使用数据指针 &lt;code&gt;data&lt;/code&gt; 调用函数指针 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="560fa4c9da40b172f0797c154c93d28849453df3" translate="yes" xml:space="preserve">
          <source>Rust's &quot;try catch&quot; construct which invokes the function pointer &lt;code&gt;try_fn&lt;/code&gt; with the data pointer &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbe1f8233c456628e66e6df4dd93fab7b6e6c9e" translate="yes" xml:space="preserve">
          <source>Rust's &lt;code&gt;for&lt;/code&gt; loop syntax is actually sugar for iterators. Here's a basic example of &lt;code&gt;for&lt;/code&gt;:</source>
          <target state="translated">Rust的 &lt;code&gt;for&lt;/code&gt; 循环语法实际上是迭代器的糖。这是 &lt;code&gt;for&lt;/code&gt; 的基本示例：</target>
        </trans-unit>
        <trans-unit id="c2b907ea71a52b75f8ec4f141b77e18171f372ef" translate="yes" xml:space="preserve">
          <source>Rust's collections can be grouped into four major categories:</source>
          <target state="translated">Rust的收藏可以分为四大类。</target>
        </trans-unit>
        <trans-unit id="3518a40c6313dc64fda74604f5d48c205fe14878" translate="yes" xml:space="preserve">
          <source>Rust's memory orderings are &lt;a href=&quot;https://en.cppreference.com/w/cpp/atomic/memory_order&quot;&gt;the same as those of C++20&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66232bbafcf2029b1b02f4fd6262d62c2d92282a" translate="yes" xml:space="preserve">
          <source>Rust's memory orderings are &lt;a href=&quot;https://llvm.org/docs/LangRef.html#memory-model-for-concurrent-operations&quot;&gt;the same as LLVM's&lt;/a&gt;.</source>
          <target state="translated">Rust的内存顺序&lt;a href=&quot;https://llvm.org/docs/LangRef.html#memory-model-for-concurrent-operations&quot;&gt;与LLVM的&lt;/a&gt;顺序相同。</target>
        </trans-unit>
        <trans-unit id="a7ab800f18895158ef3a0e63fde445a7b639f33a" translate="yes" xml:space="preserve">
          <source>Rust's name resolution operates on a global hierarchy of namespaces. Each level in the hierarchy can be thought of as some item. The items are one of those mentioned above, but also include external crates. Declaring or defining a new module can be thought of as inserting a new tree into the hierarchy at the location of the definition.</source>
          <target state="translated">Rust的名称解析是在全局的名称空间层次结构上运行的。层次结构中的每一个层次都可以被认为是一些项目。这些项目是上面提到的那些项目之一,但也包括外部的箱子。声明或定义一个新的模块可以认为是在定义的位置向层次结构中插入一棵新树。</target>
        </trans-unit>
        <trans-unit id="319f62fa60443741e4ab911db14f80e727aef59a" translate="yes" xml:space="preserve">
          <source>Rust's pointer types must always point to a valid location; there are no &quot;null&quot; pointers. Instead, Rust has &lt;em&gt;optional&lt;/em&gt; pointers, like the optional owned box, &lt;a href=&quot;enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Rust的指针类型必须始终指向有效位置。没有&amp;ldquo;空&amp;rdquo;指针。相反，Rust具有&lt;em&gt;可选的&lt;/em&gt;指针，例如可选的拥有框&lt;a href=&quot;enum.option&quot;&gt; &lt;code&gt;Option&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f768c498112456486bf63d48fcb7291968abac38" translate="yes" xml:space="preserve">
          <source>Rust's pointer types must always point to a valid location; there are no &quot;null&quot; references. Instead, Rust has &lt;em&gt;optional&lt;/em&gt; pointers, like the optional owned box, &lt;a href=&quot;enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6e2726524f65a330ec27f3f5f1fe94fb053aa0" translate="yes" xml:space="preserve">
          <source>Rust's semantics obey a &lt;em&gt;phase distinction&lt;/em&gt; between compile-time and run-time.&lt;sup&gt;&lt;a href=&quot;#phase-distinction&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; Semantic rules that have a &lt;em&gt;static interpretation&lt;/em&gt; govern the success or failure of compilation, while semantic rules that have a &lt;em&gt;dynamic interpretation&lt;/em&gt; govern the behavior of the program at run-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2aff2ec84d10e9cd75ff34f3e37a6ab05271846" translate="yes" xml:space="preserve">
          <source>Rust's semantics obey a &lt;em&gt;phase distinction&lt;/em&gt; between compile-time and run-time.&lt;sup&gt;&lt;a href=&quot;crates-and-source-files#phase-distinction&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; Semantic rules that have a &lt;em&gt;static interpretation&lt;/em&gt; govern the success or failure of compilation, while semantic rules that have a &lt;em&gt;dynamic interpretation&lt;/em&gt; govern the behavior of the program at run-time.</source>
          <target state="translated">Rust的语义遵守编译时和运行时之间的&lt;em&gt;阶段区别&lt;/em&gt;。&lt;sup&gt;&lt;a href=&quot;crates-and-source-files#phase-distinction&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;具有&lt;em&gt;静态解释的&lt;/em&gt;语义规则控制编译的成功或失败，而具有&lt;em&gt;动态解释的&lt;/em&gt;语义规则控制运行时程序的行为。</target>
        </trans-unit>
        <trans-unit id="54f00e0c31d6eace7a6ea3416d8819187abd4302" translate="yes" xml:space="preserve">
          <source>Rust's standard collection library provides efficient implementations of the most common general purpose programming data structures. By using the standard implementations, it should be possible for two libraries to communicate without significant data conversion.</source>
          <target state="translated">Rust的标准集合库提供了最常见的通用编程数据结构的高效实现。通过使用标准实现,两个库应该可以在不进行大量数据转换的情况下进行通信。</target>
        </trans-unit>
        <trans-unit id="ab17aa57ae62fb04a69af0b7a8f3f507e272a3c7" translate="yes" xml:space="preserve">
          <source>Rust's type system is a conservative approximation of the dynamic safety requirements, so in some cases there is a performance cost to using safe code. For example, a doubly-linked list is not a tree structure and can only be represented with reference-counted pointers in safe code. By using &lt;code&gt;unsafe&lt;/code&gt; blocks to represent the reverse links as raw pointers, it can be implemented with only boxes.</source>
          <target state="translated">Rust的类型系统是动态安全要求的保守估计，因此在某些情况下使用安全代码会降低性能。例如，双向链接列表不是树结构，只能用安全代码中的引用计数指针表示。通过使用 &lt;code&gt;unsafe&lt;/code&gt; 块将反向链接表示为原始指针，可以仅使用框来实现它。</target>
        </trans-unit>
        <trans-unit id="95599064eb377b63b994bbd7ad3f097bbf8eb92c" translate="yes" xml:space="preserve">
          <source>Rustfmt ensures a consistent coding style across developers.</source>
          <target state="translated">Rustfmt确保了各个开发人员的编码风格一致。</target>
        </trans-unit>
        <trans-unit id="7b00c77b80323c6107761b3476057383a88402b5" translate="yes" xml:space="preserve">
          <source>Rustup and the Role of Rust Nightly</source>
          <target state="translated">Rustup与Rust Nightly的作用</target>
        </trans-unit>
        <trans-unit id="baf8407c83848beb2a63399a672432e0718f8d96" translate="yes" xml:space="preserve">
          <source>Rustup makes it easy to change between different release channels of Rust, on a global or per-project basis. By default, you&amp;rsquo;ll have stable Rust installed. To install nightly, for example:</source>
          <target state="translated">通过Rustup，可以轻松地在全局或每个项目的基础上在Rust的不同发行渠道之间进行更改。默认情况下，您将安装稳定的Rust。要每晚安装，例如：</target>
        </trans-unit>
        <trans-unit id="d6a79be61e4215763db3baff3a7d68db38c8b2c3" translate="yes" xml:space="preserve">
          <source>RwLock</source>
          <target state="translated">RwLock</target>
        </trans-unit>
        <trans-unit id="3365fb12186db42cf39d5ce267adfc330507d4c2" translate="yes" xml:space="preserve">
          <source>RwLock::borrow</source>
          <target state="translated">RwLock::borrow</target>
        </trans-unit>
        <trans-unit id="bb95ca5081bbeb594b1afea186814e0d4f3253b7" translate="yes" xml:space="preserve">
          <source>RwLock::borrow_mut</source>
          <target state="translated">RwLock::borrow_mut</target>
        </trans-unit>
        <trans-unit id="032d2409c530ffd60c7c9c9f5aca0a52823fe35c" translate="yes" xml:space="preserve">
          <source>RwLock::default</source>
          <target state="translated">RwLock::default</target>
        </trans-unit>
        <trans-unit id="9f88cff40297be1aa94fa7e0823c98c7da6761a9" translate="yes" xml:space="preserve">
          <source>RwLock::drop</source>
          <target state="translated">RwLock::drop</target>
        </trans-unit>
        <trans-unit id="6eb75710cfca86f6ddcbd36cc0b480fab516efae" translate="yes" xml:space="preserve">
          <source>RwLock::fmt</source>
          <target state="translated">RwLock::fmt</target>
        </trans-unit>
        <trans-unit id="c39d1dd0d486dff9ebac4064c7f836672e22c020" translate="yes" xml:space="preserve">
          <source>RwLock::from</source>
          <target state="translated">RwLock::from</target>
        </trans-unit>
        <trans-unit id="f7459df51d92ce400094c19b830db9351fd1b575" translate="yes" xml:space="preserve">
          <source>RwLock::get_mut</source>
          <target state="translated">RwLock::get_mut</target>
        </trans-unit>
        <trans-unit id="dd170c316defa574a85c99622fe930a63bdba387" translate="yes" xml:space="preserve">
          <source>RwLock::into</source>
          <target state="translated">RwLock::into</target>
        </trans-unit>
        <trans-unit id="eb5fe8aa0193d0a1e704de4241f5c0a52119717b" translate="yes" xml:space="preserve">
          <source>RwLock::into_inner</source>
          <target state="translated">RwLock::into_inner</target>
        </trans-unit>
        <trans-unit id="597790ef6ee26d29fd19484b562c98ca7fe22839" translate="yes" xml:space="preserve">
          <source>RwLock::is_poisoned</source>
          <target state="translated">RwLock::is_poisoned</target>
        </trans-unit>
        <trans-unit id="b30631b8ae7fdfb2874a8151b77ee5739805b2a2" translate="yes" xml:space="preserve">
          <source>RwLock::new</source>
          <target state="translated">RwLock::new</target>
        </trans-unit>
        <trans-unit id="4524aac3589f9c6e93e60d12fae19353e0443eda" translate="yes" xml:space="preserve">
          <source>RwLock::read</source>
          <target state="translated">RwLock::read</target>
        </trans-unit>
        <trans-unit id="10894ce864637dc75066a6e702be6357e58a0ade" translate="yes" xml:space="preserve">
          <source>RwLock::try_from</source>
          <target state="translated">RwLock::try_from</target>
        </trans-unit>
        <trans-unit id="3c79ebfc0ddf697963209773c64e4debde0a15e5" translate="yes" xml:space="preserve">
          <source>RwLock::try_into</source>
          <target state="translated">RwLock::try_into</target>
        </trans-unit>
        <trans-unit id="27f9f9706495b3fa597d7283c5f6d5aa96cad168" translate="yes" xml:space="preserve">
          <source>RwLock::try_read</source>
          <target state="translated">RwLock::try_read</target>
        </trans-unit>
        <trans-unit id="2cc72c47f44da367af1f6c95ad58fcbe7aabe9f8" translate="yes" xml:space="preserve">
          <source>RwLock::try_write</source>
          <target state="translated">RwLock::try_write</target>
        </trans-unit>
        <trans-unit id="51d4ce46fd209b39c881192d2c4a306b0c6af7e1" translate="yes" xml:space="preserve">
          <source>RwLock::type_id</source>
          <target state="translated">RwLock::type_id</target>
        </trans-unit>
        <trans-unit id="75bc0e47bce9b9726f4994afdff85b10cc3177b6" translate="yes" xml:space="preserve">
          <source>RwLock::write</source>
          <target state="translated">RwLock::write</target>
        </trans-unit>
        <trans-unit id="1eaef0c1b72634db80d0da04d80181a719336691" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard</source>
          <target state="translated">RwLockReadGuard</target>
        </trans-unit>
        <trans-unit id="0a54fda840526b11982d5a172884305a72f1ca53" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::borrow</source>
          <target state="translated">RwLockReadGuard::borrow</target>
        </trans-unit>
        <trans-unit id="c10f603294158a203e3030a16eeb77610e66012d" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::borrow_mut</source>
          <target state="translated">RwLockReadGuard::borrow_mut</target>
        </trans-unit>
        <trans-unit id="480c8174e6d098df5d439363919b8fc988424a6a" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::deref</source>
          <target state="translated">RwLockReadGuard::deref</target>
        </trans-unit>
        <trans-unit id="96929e2bf6e62cb9881175383a8c72f54d7b407d" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::drop</source>
          <target state="translated">RwLockReadGuard::drop</target>
        </trans-unit>
        <trans-unit id="0630cc72c5534d080bc3a4d09dfe50c25c31af45" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::fmt</source>
          <target state="translated">RwLockReadGuard::fmt</target>
        </trans-unit>
        <trans-unit id="71fd112b2871ddf5eac0a9570c1f499e0f71e75c" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::from</source>
          <target state="translated">RwLockReadGuard::from</target>
        </trans-unit>
        <trans-unit id="9c60a6eeb95abf755a1eead5ad53991ff0cb74d1" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::into</source>
          <target state="translated">RwLockReadGuard::into</target>
        </trans-unit>
        <trans-unit id="74ee51ebc9a6d12c966b59ef0ecb6343b0e0c6eb" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::to_string</source>
          <target state="translated">RwLockReadGuard::to_string</target>
        </trans-unit>
        <trans-unit id="0ee2730589747bc1dcb5c453d764648feefc433d" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::try_from</source>
          <target state="translated">RwLockReadGuard::try_from</target>
        </trans-unit>
        <trans-unit id="2f498acbf30669bd7f472bd5abfc012da4c81500" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::try_into</source>
          <target state="translated">RwLockReadGuard::try_into</target>
        </trans-unit>
        <trans-unit id="a25712e2a0bf4758e52e5eff9b33eef96baad24b" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::type_id</source>
          <target state="translated">RwLockReadGuard::type_id</target>
        </trans-unit>
        <trans-unit id="9646cc55e4cc9faafa8ece87c06c08f6b888f1fd" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard</source>
          <target state="translated">RwLockWriteGuard</target>
        </trans-unit>
        <trans-unit id="baedc99a4037b217d239bb9bc2bebea8bc2c7b05" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::borrow</source>
          <target state="translated">RwLockWriteGuard::borrow</target>
        </trans-unit>
        <trans-unit id="0c8f19451559b2d3e5a6164478662b652678e260" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::borrow_mut</source>
          <target state="translated">RwLockWriteGuard::borrow_mut</target>
        </trans-unit>
        <trans-unit id="630e28276d78c2514d28310665f4fbd77b887ea3" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::deref</source>
          <target state="translated">RwLockWriteGuard::deref</target>
        </trans-unit>
        <trans-unit id="39d9907938496daf9bc33b22be826e596782bce1" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::deref_mut</source>
          <target state="translated">RwLockWriteGuard::deref_mut</target>
        </trans-unit>
        <trans-unit id="79f1ca0d2c6b0fad41ae7415d45c5eb9a7acfbb9" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::drop</source>
          <target state="translated">RwLockWriteGuard::drop</target>
        </trans-unit>
        <trans-unit id="fde0bc83a3fb9bf572594f7ed1454a2e150083e6" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::fmt</source>
          <target state="translated">RwLockWriteGuard::fmt</target>
        </trans-unit>
        <trans-unit id="2c0a3448edb216dbb966834cc4ad56db6eb11560" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::from</source>
          <target state="translated">RwLockWriteGuard::from</target>
        </trans-unit>
        <trans-unit id="3193eae71ac8c5c78d9a237c77ce0e37b3805579" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::into</source>
          <target state="translated">RwLockWriteGuard::into</target>
        </trans-unit>
        <trans-unit id="8c6e6d90fe4c368b63537f92416cb8aaff689f72" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::to_string</source>
          <target state="translated">RwLockWriteGuard::to_string</target>
        </trans-unit>
        <trans-unit id="5f6159162b69b6697a022b81d0b5f2b64a1c0cb9" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::try_from</source>
          <target state="translated">RwLockWriteGuard::try_from</target>
        </trans-unit>
        <trans-unit id="6959809c31f98cada5a72df18f7f305cf5bec8cb" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::try_into</source>
          <target state="translated">RwLockWriteGuard::try_into</target>
        </trans-unit>
        <trans-unit id="701e18958d5f1087e9d3ad9d6157e1b774a80327" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::type_id</source>
          <target state="translated">RwLockWriteGuard::type_id</target>
        </trans-unit>
        <trans-unit id="e9366a47f607b6f46c1a48c0cd690894f0ebbadb" translate="yes" xml:space="preserve">
          <source>SGX</source>
          <target state="translated">SGX</target>
        </trans-unit>
        <trans-unit id="725c79ab8f9df970d196bb5d5f72df4504fce381" translate="yes" xml:space="preserve">
          <source>SHEBANG : &lt;code&gt;#!&lt;/code&gt; ~&lt;code&gt;\n&lt;/code&gt;&lt;sup&gt;+&lt;/sup&gt;&lt;a href=&quot;#shebang&quot;&gt;&amp;dagger;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a6ea37b53bc27138b60916fd0439bdf3ab78ec1" translate="yes" xml:space="preserve">
          <source>SHEBANG : &lt;code&gt;#!&lt;/code&gt; ~[&lt;code&gt;[&lt;/code&gt;&lt;code&gt;\n&lt;/code&gt;] ~&lt;code&gt;\n&lt;/code&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">雪邦： &lt;code&gt;#!&lt;/code&gt; 〜[ &lt;code&gt;[&lt;/code&gt; &lt;code&gt;\n&lt;/code&gt; ]〜 &lt;code&gt;\n&lt;/code&gt; &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3c4b26856c9be2e3649537787b8c0e28472a0786" translate="yes" xml:space="preserve">
          <source>SHEBANG&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">SHEBANG&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6de691384f5963f51651150662473268acfe159d" translate="yes" xml:space="preserve">
          <source>SIMD</source>
          <target state="translated">SIMD</target>
        </trans-unit>
        <trans-unit id="22eeb276e780b6ff6b8c438850d1f60bc7878e9e" translate="yes" xml:space="preserve">
          <source>SML, OCaml: algebraic data types, pattern matching, type inference, semicolon statement separation</source>
          <target state="translated">SML、OCaml:代数数据类型、模式匹配、类型推理、分号语句分离。</target>
        </trans-unit>
        <trans-unit id="1de58b523ce999eba59e4751ca7a7e72e85af4e7" translate="yes" xml:space="preserve">
          <source>SOCKET</source>
          <target state="translated">SOCKET</target>
        </trans-unit>
        <trans-unit id="f648fd3aed746e2278113a2f8a9ee9de6ce669d2" translate="yes" xml:space="preserve">
          <source>SQRT_2</source>
          <target state="translated">SQRT_2</target>
        </trans-unit>
        <trans-unit id="e417c0c14e2d13af7eccbb6839d6c2e941c30381" translate="yes" xml:space="preserve">
          <source>STRING_CONTINUE :</source>
          <target state="translated">STRING_CONTINUE :</target>
        </trans-unit>
        <trans-unit id="920882e835fec2971971f3c5aa2aa60559e73a5f" translate="yes" xml:space="preserve">
          <source>STRING_LITERAL :</source>
          <target state="translated">STRING_LITERAL :</target>
        </trans-unit>
        <trans-unit id="b78310097f7848cdd92f6380a2ed0c9ed3dd8c55" translate="yes" xml:space="preserve">
          <source>Safe traits should not have unsafe implementations, therefore marking an implementation for a safe trait unsafe will cause a compiler error. Removing the unsafe marker on the trait noted in the error will resolve this problem.</source>
          <target state="translated">安全性状不应该有不安全的实现,因此将一个安全性状的实现标记为不安全将导致编译器错误。移除错误中提到的特质上的不安全标记将解决这个问题。</target>
        </trans-unit>
        <trans-unit id="6758124b257320aba8b357219dd55b902618ce28" translate="yes" xml:space="preserve">
          <source>Safe traits should not have unsafe implementations, therefore marking an implementation for a safe trait unsafe will cause a compiler error. Removing the unsafe marker on the trait noted in the error will resolve this problem:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3638107f2c733ebae270af45af8092f6fb19ef0a" translate="yes" xml:space="preserve">
          <source>Safe wrappers for this intrinsic are available on the integer primitives via the &lt;code&gt;checked_div&lt;/code&gt; method. For example, &lt;a href=&quot;../primitive.u32#method.checked_div&quot;&gt;&lt;code&gt;u32::checked_div&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcbced17202ea49cef90383c30f1c92012e82c83" translate="yes" xml:space="preserve">
          <source>Safe wrappers for this intrinsic are available on the integer primitives via the &lt;code&gt;checked_rem&lt;/code&gt; method. For example, &lt;a href=&quot;../primitive.u32#method.checked_rem&quot;&gt;&lt;code&gt;u32::checked_rem&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1add6a43fe6ea1b39bbf1a37130e2c55f3cd481c" translate="yes" xml:space="preserve">
          <source>Safe wrappers for this intrinsic are available on the integer primitives via the &lt;code&gt;checked_shl&lt;/code&gt; method. For example, &lt;a href=&quot;../primitive.u32#method.checked_shl&quot;&gt;&lt;code&gt;u32::checked_shl&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d924e081d2fe23775f79251bd6628bfebb9f15f" translate="yes" xml:space="preserve">
          <source>Safe wrappers for this intrinsic are available on the integer primitives via the &lt;code&gt;checked_shr&lt;/code&gt; method. For example, &lt;a href=&quot;../primitive.u32#method.checked_shr&quot;&gt;&lt;code&gt;u32::checked_shr&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6e7e410412f58574f766c3911f49badd42beca" translate="yes" xml:space="preserve">
          <source>Safety</source>
          <target state="translated">Safety</target>
        </trans-unit>
        <trans-unit id="c73f4568bd312963e8efa5d1ebe757bec11ce99e" translate="yes" xml:space="preserve">
          <source>Safety is guaranteed by requiring a mutable reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6527d5e90816a6b0e07f8bdbc358e99dffa1bdc" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;format_args&lt;/code&gt;, but adds a newline in the end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b8fb7a6bc8b245138411045130aa3d0bdb87c5" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;to_ascii_lowercase(a) == to_ascii_lowercase(b)&lt;/code&gt;, but without allocating and copying temporaries.</source>
          <target state="translated">与 &lt;code&gt;to_ascii_lowercase(a) == to_ascii_lowercase(b)&lt;/code&gt; ，但不分配和复制临时对象。</target>
        </trans-unit>
        <trans-unit id="59d1427a10dfc5dee5a89b2eda66ab1e83377430" translate="yes" xml:space="preserve">
          <source>Saturating &lt;code&gt;Duration&lt;/code&gt; addition. Computes &lt;code&gt;self + other&lt;/code&gt;, returning &lt;a href=&quot;struct.duration#associatedconstant.MAX&quot;&gt;&lt;code&gt;Duration::MAX&lt;/code&gt;&lt;/a&gt; if overflow occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2be18c955cc49c826816b30bcfc290c616c5960" translate="yes" xml:space="preserve">
          <source>Saturating &lt;code&gt;Duration&lt;/code&gt; multiplication. Computes &lt;code&gt;self * other&lt;/code&gt;, returning &lt;a href=&quot;struct.duration#associatedconstant.MAX&quot;&gt;&lt;code&gt;Duration::MAX&lt;/code&gt;&lt;/a&gt; if overflow occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6bf815786dcb43a5074e0c164ed807d841df425" translate="yes" xml:space="preserve">
          <source>Saturating &lt;code&gt;Duration&lt;/code&gt; subtraction. Computes &lt;code&gt;self - other&lt;/code&gt;, returning &lt;a href=&quot;struct.duration#associatedconstant.MIN&quot;&gt;&lt;code&gt;Duration::MIN&lt;/code&gt;&lt;/a&gt; if the result would be negative or if overflow occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8138311aec0a35834542daea416fa9678b0d1cab" translate="yes" xml:space="preserve">
          <source>Saturating &lt;code&gt;Duration&lt;/code&gt; subtraction. Computes &lt;code&gt;self - other&lt;/code&gt;, returning &lt;a href=&quot;struct.duration#associatedconstant.ZERO&quot;&gt;&lt;code&gt;Duration::ZERO&lt;/code&gt;&lt;/a&gt; if the result would be negative or if overflow occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03bf99c5e921d67f76a77fc0f90dc0a457c4266" translate="yes" xml:space="preserve">
          <source>Saturating absolute value. Computes &lt;code&gt;self.abs()&lt;/code&gt;, returning &lt;code&gt;MAX&lt;/code&gt; if &lt;code&gt;self == MIN&lt;/code&gt; instead of overflowing.</source>
          <target state="translated">饱和绝对值。计算 &lt;code&gt;self.abs()&lt;/code&gt; ，如果 &lt;code&gt;self == MIN&lt;/code&gt; 则返回 &lt;code&gt;MAX&lt;/code&gt; 而不是溢出。</target>
        </trans-unit>
        <trans-unit id="109dd1091641bc8ecebd701747ce54878af442b0" translate="yes" xml:space="preserve">
          <source>Saturating integer addition. Computes &lt;code&gt;self + rhs&lt;/code&gt;, saturating at the numeric bounds instead of overflowing.</source>
          <target state="translated">饱和整数加法。计算 &lt;code&gt;self + rhs&lt;/code&gt; ，在数字范围内饱和而不溢出。</target>
        </trans-unit>
        <trans-unit id="57c9631709dc7db15f7aaacb3d3f0fcd0d500a59" translate="yes" xml:space="preserve">
          <source>Saturating integer exponentiation. Computes &lt;code&gt;self.pow(exp)&lt;/code&gt;, saturating at the numeric bounds instead of overflowing.</source>
          <target state="translated">饱和整数幂。计算 &lt;code&gt;self.pow(exp)&lt;/code&gt; ，在数字范围内饱和，而不是溢出。</target>
        </trans-unit>
        <trans-unit id="6a26ed5271afaadaf17f7bb99258598a883dbde5" translate="yes" xml:space="preserve">
          <source>Saturating integer multiplication. Computes &lt;code&gt;self * rhs&lt;/code&gt;, saturating at the numeric bounds instead of overflowing.</source>
          <target state="translated">饱和整数乘法。计算 &lt;code&gt;self * rhs&lt;/code&gt; ，在数字范围内饱和而不溢出。</target>
        </trans-unit>
        <trans-unit id="4e9045498e8f92673c01343fe3158929d9ad0d53" translate="yes" xml:space="preserve">
          <source>Saturating integer negation. Computes &lt;code&gt;-self&lt;/code&gt;, returning &lt;code&gt;MAX&lt;/code&gt; if &lt;code&gt;self == MIN&lt;/code&gt; instead of overflowing.</source>
          <target state="translated">饱和整数求反。计算 &lt;code&gt;-self&lt;/code&gt; ，如果 &lt;code&gt;self == MIN&lt;/code&gt; 则返回 &lt;code&gt;MAX&lt;/code&gt; 而不是溢出。</target>
        </trans-unit>
        <trans-unit id="bba0f92a2b8115b3e1c85e5395b32ac513ceaf4c" translate="yes" xml:space="preserve">
          <source>Saturating integer subtraction. Computes &lt;code&gt;self - rhs&lt;/code&gt;, saturating at the numeric bounds instead of overflowing.</source>
          <target state="translated">饱和整数减法。计算 &lt;code&gt;self - rhs&lt;/code&gt; ，在数字范围内饱和而不溢出。</target>
        </trans-unit>
        <trans-unit id="94d7918aa6bb0576d26a84c1d4e645527e1b43b1" translate="yes" xml:space="preserve">
          <source>Save and run the program using &lt;code&gt;cargo run&lt;/code&gt;. You should receive an error message, as shown in this output:</source>
          <target state="translated">使用 &lt;code&gt;cargo run&lt;/code&gt; 保存并运行程序。您应该收到一条错误消息，如以下输出所示：</target>
        </trans-unit>
        <trans-unit id="f699547c1a083d346822dc0ad796b31a9ab59d87" translate="yes" xml:space="preserve">
          <source>Save the file and go back to your terminal window. On Linux or macOS, enter the following commands to compile and run the file:</source>
          <target state="translated">保存文件并回到终端窗口。在Linux或macOS上,输入以下命令来编译和运行该文件。</target>
        </trans-unit>
        <trans-unit id="a78cbddc900d04991e91d2fb8a0c3d608d5fa9d3" translate="yes" xml:space="preserve">
          <source>Saving the Argument Values in Variables</source>
          <target state="translated">保存变量中的参数值</target>
        </trans-unit>
        <trans-unit id="4aa91b74ad835b979f38d439d43f44e254945a4d" translate="yes" xml:space="preserve">
          <source>Say we have a trait &lt;code&gt;Foo&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce8f737a0ce307980f869c94d0a5ceba9f4cfab" translate="yes" xml:space="preserve">
          <source>Scalar Types</source>
          <target state="translated">Scalar类型</target>
        </trans-unit>
        <trans-unit id="28cba55d2aadf568463a9e7e645f8c7b1eed5e8b" translate="yes" xml:space="preserve">
          <source>Scan</source>
          <target state="translated">Scan</target>
        </trans-unit>
        <trans-unit id="a83428f0f19b6d4372010255ff2ef9ab272578d1" translate="yes" xml:space="preserve">
          <source>Scan::all</source>
          <target state="translated">Scan::all</target>
        </trans-unit>
        <trans-unit id="fdda2ce8b15a6d2075229afe525b7e8a55d35d11" translate="yes" xml:space="preserve">
          <source>Scan::any</source>
          <target state="translated">Scan::any</target>
        </trans-unit>
        <trans-unit id="8ae964ef6b78e951ac3b26e79dfd44bec458e86b" translate="yes" xml:space="preserve">
          <source>Scan::borrow</source>
          <target state="translated">Scan::borrow</target>
        </trans-unit>
        <trans-unit id="1d1fa2d81c469a644938a10e857fd20595b68115" translate="yes" xml:space="preserve">
          <source>Scan::borrow_mut</source>
          <target state="translated">Scan::borrow_mut</target>
        </trans-unit>
        <trans-unit id="dcdbeb94289a891920ae7362a81de3677cc1e082" translate="yes" xml:space="preserve">
          <source>Scan::by_ref</source>
          <target state="translated">Scan::by_ref</target>
        </trans-unit>
        <trans-unit id="44a5d113010b539112c7aebbe1efadf9df2440bf" translate="yes" xml:space="preserve">
          <source>Scan::chain</source>
          <target state="translated">Scan::chain</target>
        </trans-unit>
        <trans-unit id="7c3cbcfdfe9b063409170df12dc8d39dc6dc99d3" translate="yes" xml:space="preserve">
          <source>Scan::clone</source>
          <target state="translated">Scan::clone</target>
        </trans-unit>
        <trans-unit id="c6db19d8a19119f74425bfa04127af8420e4efc4" translate="yes" xml:space="preserve">
          <source>Scan::clone_from</source>
          <target state="translated">Scan::clone_from</target>
        </trans-unit>
        <trans-unit id="ac3ef15de8d0ee0bec5955a3a3ab25a55df08f3a" translate="yes" xml:space="preserve">
          <source>Scan::clone_into</source>
          <target state="translated">Scan::clone_into</target>
        </trans-unit>
        <trans-unit id="2ee78a8b1e01eb5cb984ff82e377950705941cbe" translate="yes" xml:space="preserve">
          <source>Scan::cloned</source>
          <target state="translated">Scan::cloned</target>
        </trans-unit>
        <trans-unit id="1d217f90eb9953f90f7cee01645024cf8b353e47" translate="yes" xml:space="preserve">
          <source>Scan::cmp</source>
          <target state="translated">Scan::cmp</target>
        </trans-unit>
        <trans-unit id="f624c4e941292af5212a257f7d7e45e1f746c610" translate="yes" xml:space="preserve">
          <source>Scan::collect</source>
          <target state="translated">Scan::collect</target>
        </trans-unit>
        <trans-unit id="140d6d7c8506b513cdbb183e0de556d84140332b" translate="yes" xml:space="preserve">
          <source>Scan::copied</source>
          <target state="translated">Scan::copied</target>
        </trans-unit>
        <trans-unit id="37be80a9aeac96c59cb970c7ab59d3d0750db5f5" translate="yes" xml:space="preserve">
          <source>Scan::count</source>
          <target state="translated">Scan::count</target>
        </trans-unit>
        <trans-unit id="6ba6c8f1417e8d7b7f648fd7ce48940adf9144f3" translate="yes" xml:space="preserve">
          <source>Scan::cycle</source>
          <target state="translated">Scan::cycle</target>
        </trans-unit>
        <trans-unit id="7ec31279e2f8b96943422c4871166206fb63dfed" translate="yes" xml:space="preserve">
          <source>Scan::enumerate</source>
          <target state="translated">Scan::enumerate</target>
        </trans-unit>
        <trans-unit id="25a5e40162d5f49695e798626fd7358037ea86f6" translate="yes" xml:space="preserve">
          <source>Scan::eq</source>
          <target state="translated">Scan::eq</target>
        </trans-unit>
        <trans-unit id="bba6fdabd86b647187c140d88b617db38d432ecc" translate="yes" xml:space="preserve">
          <source>Scan::filter</source>
          <target state="translated">Scan::filter</target>
        </trans-unit>
        <trans-unit id="22b9545f456094f84f04af42526f62045be3f6e5" translate="yes" xml:space="preserve">
          <source>Scan::filter_map</source>
          <target state="translated">Scan::filter_map</target>
        </trans-unit>
        <trans-unit id="ec6b0559d3037a1ec9affdf74744f00da3bcd772" translate="yes" xml:space="preserve">
          <source>Scan::find</source>
          <target state="translated">Scan::find</target>
        </trans-unit>
        <trans-unit id="ce8589a77e6e6f30ec5a666a8478289269d79b74" translate="yes" xml:space="preserve">
          <source>Scan::find_map</source>
          <target state="translated">Scan::find_map</target>
        </trans-unit>
        <trans-unit id="1dba7e901c826e550e1d530ba916001117fa283f" translate="yes" xml:space="preserve">
          <source>Scan::flat_map</source>
          <target state="translated">Scan::flat_map</target>
        </trans-unit>
        <trans-unit id="5ba5682fc67c867be5c841cec5f95757e352b127" translate="yes" xml:space="preserve">
          <source>Scan::flatten</source>
          <target state="translated">Scan::flatten</target>
        </trans-unit>
        <trans-unit id="54d858c081c6321abe7f407a8a917413095b9e98" translate="yes" xml:space="preserve">
          <source>Scan::fmt</source>
          <target state="translated">Scan::fmt</target>
        </trans-unit>
        <trans-unit id="ee544b0cc856e0647a04c15e5aa58914fff7d3dd" translate="yes" xml:space="preserve">
          <source>Scan::fold</source>
          <target state="translated">Scan::fold</target>
        </trans-unit>
        <trans-unit id="877effb4069116cb008b7b02185836741deeb1bd" translate="yes" xml:space="preserve">
          <source>Scan::for_each</source>
          <target state="translated">Scan::for_each</target>
        </trans-unit>
        <trans-unit id="d596133dfad2ba2eb63caf025a1006ba5d46cdbe" translate="yes" xml:space="preserve">
          <source>Scan::from</source>
          <target state="translated">Scan::from</target>
        </trans-unit>
        <trans-unit id="05f2371a703b3bb956c34eefeb2778aa851dc375" translate="yes" xml:space="preserve">
          <source>Scan::fuse</source>
          <target state="translated">Scan::fuse</target>
        </trans-unit>
        <trans-unit id="5c5199789fc91ccfc059a9513dde8cc16dc76c24" translate="yes" xml:space="preserve">
          <source>Scan::ge</source>
          <target state="translated">Scan::ge</target>
        </trans-unit>
        <trans-unit id="b10b247c902a2bfa3e7132b61f9fc779d22e5f18" translate="yes" xml:space="preserve">
          <source>Scan::gt</source>
          <target state="translated">Scan::gt</target>
        </trans-unit>
        <trans-unit id="02d37e0f76b525bbfed8d07b3144e6b3574d8747" translate="yes" xml:space="preserve">
          <source>Scan::inspect</source>
          <target state="translated">Scan::inspect</target>
        </trans-unit>
        <trans-unit id="e77e489028848d463f401f4c49d8009a9ef763fb" translate="yes" xml:space="preserve">
          <source>Scan::into</source>
          <target state="translated">Scan::into</target>
        </trans-unit>
        <trans-unit id="8f74006cbeb828113f5fc9538a8101d864393fe2" translate="yes" xml:space="preserve">
          <source>Scan::into_iter</source>
          <target state="translated">Scan::into_iter</target>
        </trans-unit>
        <trans-unit id="97aceb0807e7408fc95fa9e8207b84bd8085b8c9" translate="yes" xml:space="preserve">
          <source>Scan::is_sorted</source>
          <target state="translated">Scan::is_sorted</target>
        </trans-unit>
        <trans-unit id="7ee340cb30ed71bb397fabe21931f6dab7264f46" translate="yes" xml:space="preserve">
          <source>Scan::is_sorted_by</source>
          <target state="translated">Scan::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="58036d9ce660f7aef80fc0b987f4b2d1d619f2fd" translate="yes" xml:space="preserve">
          <source>Scan::is_sorted_by_key</source>
          <target state="translated">Scan::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="8f663c380aa3d6bda22377b6769b2cb7e3745f74" translate="yes" xml:space="preserve">
          <source>Scan::last</source>
          <target state="translated">Scan::last</target>
        </trans-unit>
        <trans-unit id="62a5c990f54f0366a46db77c2e2b1ef1c18f7174" translate="yes" xml:space="preserve">
          <source>Scan::le</source>
          <target state="translated">Scan::le</target>
        </trans-unit>
        <trans-unit id="cfa5cf71030074646966407091c6fa5aa1ba85eb" translate="yes" xml:space="preserve">
          <source>Scan::lt</source>
          <target state="translated">Scan::lt</target>
        </trans-unit>
        <trans-unit id="44e4a34744c1e0cdc7555d5c68d6d19573656894" translate="yes" xml:space="preserve">
          <source>Scan::map</source>
          <target state="translated">Scan::map</target>
        </trans-unit>
        <trans-unit id="f2a07a63439a0ebcde98f43e8b3fbb80d4952811" translate="yes" xml:space="preserve">
          <source>Scan::max</source>
          <target state="translated">Scan::max</target>
        </trans-unit>
        <trans-unit id="3cfafd3b9dad17f4287fad1302263c256bdb9da2" translate="yes" xml:space="preserve">
          <source>Scan::max_by</source>
          <target state="translated">Scan::max_by</target>
        </trans-unit>
        <trans-unit id="c65b07c42c554193abc8eceb99ec17650b947d6e" translate="yes" xml:space="preserve">
          <source>Scan::max_by_key</source>
          <target state="translated">Scan::max_by_key</target>
        </trans-unit>
        <trans-unit id="75992f861a2f69a877ca4c109354b275b180bd95" translate="yes" xml:space="preserve">
          <source>Scan::min</source>
          <target state="translated">Scan::min</target>
        </trans-unit>
        <trans-unit id="b26db00332d6adb34cd1adc934b3dc8b34c8f9dc" translate="yes" xml:space="preserve">
          <source>Scan::min_by</source>
          <target state="translated">Scan::min_by</target>
        </trans-unit>
        <trans-unit id="8bd0f12b39a926d27ef33306910f880301f2454a" translate="yes" xml:space="preserve">
          <source>Scan::min_by_key</source>
          <target state="translated">Scan::min_by_key</target>
        </trans-unit>
        <trans-unit id="29d50c77efde6dbc085b208d7c218943a0ea0714" translate="yes" xml:space="preserve">
          <source>Scan::ne</source>
          <target state="translated">Scan::ne</target>
        </trans-unit>
        <trans-unit id="1ab71f992ffe8596c0341900bef028b3308973f8" translate="yes" xml:space="preserve">
          <source>Scan::next</source>
          <target state="translated">Scan::next</target>
        </trans-unit>
        <trans-unit id="c5850266e5e6c46cb795904dd076371082aa08f3" translate="yes" xml:space="preserve">
          <source>Scan::nth</source>
          <target state="translated">Scan::nth</target>
        </trans-unit>
        <trans-unit id="ff5105bc82f317b54ad32741845c344dd57225c9" translate="yes" xml:space="preserve">
          <source>Scan::partial_cmp</source>
          <target state="translated">Scan::partial_cmp</target>
        </trans-unit>
        <trans-unit id="23ebf388b9af419edd8a10316e92a28cdcc54ea5" translate="yes" xml:space="preserve">
          <source>Scan::partition</source>
          <target state="translated">Scan::partition</target>
        </trans-unit>
        <trans-unit id="78ca9808b2d539ab3576f5e1204530b9bd1adc02" translate="yes" xml:space="preserve">
          <source>Scan::peekable</source>
          <target state="translated">Scan::peekable</target>
        </trans-unit>
        <trans-unit id="2b0d89811cd472d52b60e91c8231f7ff0add786d" translate="yes" xml:space="preserve">
          <source>Scan::position</source>
          <target state="translated">Scan::position</target>
        </trans-unit>
        <trans-unit id="d8e52b56df09d900a46a0d11405db4d163939745" translate="yes" xml:space="preserve">
          <source>Scan::product</source>
          <target state="translated">Scan::product</target>
        </trans-unit>
        <trans-unit id="f564b9f823c397c793d11fee1b39b46f01f0e5a0" translate="yes" xml:space="preserve">
          <source>Scan::rev</source>
          <target state="translated">Scan::rev</target>
        </trans-unit>
        <trans-unit id="2b6ef2d07d09325ad0a4156fe82830daa7c2000c" translate="yes" xml:space="preserve">
          <source>Scan::rposition</source>
          <target state="translated">Scan::rposition</target>
        </trans-unit>
        <trans-unit id="e16bad2125996665ff244f29435a894ef4dd3342" translate="yes" xml:space="preserve">
          <source>Scan::scan</source>
          <target state="translated">Scan::scan</target>
        </trans-unit>
        <trans-unit id="7948a9c7ae9eaead157d3b15d36b95efb521f5d8" translate="yes" xml:space="preserve">
          <source>Scan::size_hint</source>
          <target state="translated">Scan::size_hint</target>
        </trans-unit>
        <trans-unit id="e80e6e3937516c92e418a5fe916bfac2e483b066" translate="yes" xml:space="preserve">
          <source>Scan::skip</source>
          <target state="translated">Scan::skip</target>
        </trans-unit>
        <trans-unit id="242d9090f46800125c301ef29b2906cc536d0877" translate="yes" xml:space="preserve">
          <source>Scan::skip_while</source>
          <target state="translated">Scan::skip_while</target>
        </trans-unit>
        <trans-unit id="9f63e26973be9f3afb89ae3f4e2ed85606b635af" translate="yes" xml:space="preserve">
          <source>Scan::step_by</source>
          <target state="translated">Scan::step_by</target>
        </trans-unit>
        <trans-unit id="6b16e51cd58da3de9d5f7eea0e0f07ca046d979c" translate="yes" xml:space="preserve">
          <source>Scan::sum</source>
          <target state="translated">Scan::sum</target>
        </trans-unit>
        <trans-unit id="a7282175f1d0da9413967d85f69c6e868558487e" translate="yes" xml:space="preserve">
          <source>Scan::take</source>
          <target state="translated">Scan::take</target>
        </trans-unit>
        <trans-unit id="a150dc4d16df56db4605174e979cea6899d1ad9c" translate="yes" xml:space="preserve">
          <source>Scan::take_while</source>
          <target state="translated">Scan::take_while</target>
        </trans-unit>
        <trans-unit id="13a823d246b96299ec57e999197efc7fa9ae0a31" translate="yes" xml:space="preserve">
          <source>Scan::to_owned</source>
          <target state="translated">Scan::to_owned</target>
        </trans-unit>
        <trans-unit id="3ef6fcb77ca31a6f969ff19b4b3aa9051300806f" translate="yes" xml:space="preserve">
          <source>Scan::try_fold</source>
          <target state="translated">Scan::try_fold</target>
        </trans-unit>
        <trans-unit id="db1f0815536f2e7e0fccb46f579eb7c1f5f467fc" translate="yes" xml:space="preserve">
          <source>Scan::try_for_each</source>
          <target state="translated">Scan::try_for_each</target>
        </trans-unit>
        <trans-unit id="e3ca0918eba1feb0dd819a8739d918a22b7a106d" translate="yes" xml:space="preserve">
          <source>Scan::try_from</source>
          <target state="translated">Scan::try_from</target>
        </trans-unit>
        <trans-unit id="bd50714b4294891b30df26cd83bd683f7dc15be8" translate="yes" xml:space="preserve">
          <source>Scan::try_into</source>
          <target state="translated">Scan::try_into</target>
        </trans-unit>
        <trans-unit id="046b6bc008c7041f8edf76e7602802d827d08367" translate="yes" xml:space="preserve">
          <source>Scan::type_id</source>
          <target state="translated">Scan::type_id</target>
        </trans-unit>
        <trans-unit id="569da91365c91b5131222d7de125089d3f265484" translate="yes" xml:space="preserve">
          <source>Scan::unzip</source>
          <target state="translated">Scan::unzip</target>
        </trans-unit>
        <trans-unit id="e947a087f9ad656a226215379de2667c1377de6e" translate="yes" xml:space="preserve">
          <source>Scan::zip</source>
          <target state="translated">Scan::zip</target>
        </trans-unit>
        <trans-unit id="fb63302c6f22a6965dfa609e8e20a66d7199f9dd" translate="yes" xml:space="preserve">
          <source>Schedules a closure to be run just before the &lt;code&gt;exec&lt;/code&gt; function is invoked.</source>
          <target state="translated">计划在调用 &lt;code&gt;exec&lt;/code&gt; 函数之前运行闭包。</target>
        </trans-unit>
        <trans-unit id="c21507c1a91d893abdec9840fa9ae19963c02140" translate="yes" xml:space="preserve">
          <source>Schedules a closure to be run just before the &lt;code&gt;exec&lt;/code&gt; function is invoked. &lt;a href=&quot;../os/unix/process/trait.commandext#method.before_exec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">计划在调用 &lt;code&gt;exec&lt;/code&gt; 函数之前运行闭包。&lt;a href=&quot;../os/unix/process/trait.commandext#method.before_exec&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3828bb2307999d77ee3cc9989b1f128ccf8cc518" translate="yes" xml:space="preserve">
          <source>Schedules a closure to be run just before the &lt;code&gt;exec&lt;/code&gt; function is invoked. &lt;a href=&quot;../os/unix/process/trait.commandext#tymethod.pre_exec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">计划在调用 &lt;code&gt;exec&lt;/code&gt; 函数之前运行闭包。&lt;a href=&quot;../os/unix/process/trait.commandext#tymethod.pre_exec&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99d69565bd3ab366d37906300f1bf9bb70804a55" translate="yes" xml:space="preserve">
          <source>Scheme: hygienic macros</source>
          <target state="translated">计划:卫生宏</target>
        </trans-unit>
        <trans-unit id="1649d47e247b7878486f68b1541b0892af4985f8" translate="yes" xml:space="preserve">
          <source>Scopes of function parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5279c09b56d10415b7fbdf488ada570b3a82608c" translate="yes" xml:space="preserve">
          <source>Scopes of local variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f869c7563d63df9f222d947a975a45138e95b942" translate="yes" xml:space="preserve">
          <source>Scoping, Exporting, and Importing</source>
          <target state="translated">确定范围、出口和进口</target>
        </trans-unit>
        <trans-unit id="d908d24ab618c48e6ae073715a0ab05f7bb4153e" translate="yes" xml:space="preserve">
          <source>Scripts without case are not changed:</source>
          <target state="translated">没有大小写的脚本是不会改变的。</target>
        </trans-unit>
        <trans-unit id="92f5c17a4180087f0927972817e9d930fd2be3b1" translate="yes" xml:space="preserve">
          <source>Scrutinee</source>
          <target state="translated">Scrutinee</target>
        </trans-unit>
        <trans-unit id="057c00f982acbbd131543e7b48e94d17da16d57d" translate="yes" xml:space="preserve">
          <source>SearchStep</source>
          <target state="translated">SearchStep</target>
        </trans-unit>
        <trans-unit id="3373ce77abd3e6c254656b5ae418e3b5a03551cc" translate="yes" xml:space="preserve">
          <source>Searcher</source>
          <target state="translated">Searcher</target>
        </trans-unit>
        <trans-unit id="b1094720881ccb3d2dd5eb17b06070402b7b9239" translate="yes" xml:space="preserve">
          <source>Searches for &lt;a href=&quot;../../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s that match the given predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11363ade1d3d6a9830725b9ee63abd37a1ea1520" translate="yes" xml:space="preserve">
          <source>Searches for an element in an iterator from the right, returning its index.</source>
          <target state="translated">在迭代器中从右边搜索一个元素,返回其索引。</target>
        </trans-unit>
        <trans-unit id="ea94f8f1fd65b3e808118ecb3c6a64d1be80abc0" translate="yes" xml:space="preserve">
          <source>Searches for an element in an iterator from the right, returning its index. &lt;a href=&quot;../../../iter/trait.iterator#method.rposition&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">从右侧搜索迭代器中的元素，并返回其索引。&lt;a href=&quot;../../../iter/trait.iterator#method.rposition&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a32b846472e7629b89337b736deb7cba8899702b" translate="yes" xml:space="preserve">
          <source>Searches for an element in an iterator from the right, returning its index. &lt;a href=&quot;../../iter/trait.iterator#method.rposition&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">从右侧搜索迭代器中的元素，并返回其索引。&lt;a href=&quot;../../iter/trait.iterator#method.rposition&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2fbabe20f2ae80e8b4000f5a8fda30a8bcd233af" translate="yes" xml:space="preserve">
          <source>Searches for an element in an iterator from the right, returning its index. &lt;a href=&quot;../iter/trait.iterator#method.rposition&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">从右侧搜索迭代器中的元素，并返回其索引。&lt;a href=&quot;../iter/trait.iterator#method.rposition&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="58a6f63decee1650a72cc8d3d4b0dc8ae926d3ea" translate="yes" xml:space="preserve">
          <source>Searches for an element in an iterator from the right, returning its index. &lt;a href=&quot;iter/trait.iterator#method.rposition&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">从右侧搜索迭代器中的元素，并返回其索引。&lt;a href=&quot;iter/trait.iterator#method.rposition&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fe2da068b1383ba78d78179215e20384ebd856f5" translate="yes" xml:space="preserve">
          <source>Searches for an element in an iterator from the right, returning its index. &lt;a href=&quot;trait.iterator#method.rposition&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">从右侧搜索迭代器中的元素，并返回其索引。&lt;a href=&quot;trait.iterator#method.rposition&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="888aace1ecfca3a664f3926fcdf9d9c8737ed80d" translate="yes" xml:space="preserve">
          <source>Searches for an element in an iterator, returning its index.</source>
          <target state="translated">在迭代器中搜索一个元素,返回其索引。</target>
        </trans-unit>
        <trans-unit id="b1e4dd5c105e14ff5ce136025420dedeece55e5c" translate="yes" xml:space="preserve">
          <source>Searches for an element in an iterator, returning its index. &lt;a href=&quot;../../../iter/trait.iterator#method.position&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">在迭代器中搜索元素，并返回其索引。&lt;a href=&quot;../../../iter/trait.iterator#method.position&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5cf7f1d717e2cb1cdd88f6ee856563d8c126e03" translate="yes" xml:space="preserve">
          <source>Searches for an element in an iterator, returning its index. &lt;a href=&quot;../../iter/trait.iterator#method.position&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">在迭代器中搜索元素，并返回其索引。&lt;a href=&quot;../../iter/trait.iterator#method.position&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="898fb33cb492658409d014bf819e485b96a05d7f" translate="yes" xml:space="preserve">
          <source>Searches for an element in an iterator, returning its index. &lt;a href=&quot;../iter/trait.iterator#method.position&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">在迭代器中搜索元素，并返回其索引。&lt;a href=&quot;../iter/trait.iterator#method.position&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1eb70845c5eb53f54ffe500cb5ff9dd1a042ee65" translate="yes" xml:space="preserve">
          <source>Searches for an element in an iterator, returning its index. &lt;a href=&quot;iter/trait.iterator#method.position&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">在迭代器中搜索元素，并返回其索引。&lt;a href=&quot;iter/trait.iterator#method.position&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="736c00e0587ecd076f8c2f0471322e982b180ef4" translate="yes" xml:space="preserve">
          <source>Searches for an element in an iterator, returning its index. &lt;a href=&quot;trait.iterator#method.position&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">在迭代器中搜索元素，并返回其索引。&lt;a href=&quot;trait.iterator#method.position&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d823a12940ddccec2fac026ab8506ebd4fce1ad" translate="yes" xml:space="preserve">
          <source>Searches for an element of an iterator from the back that satisfies a predicate.</source>
          <target state="translated">从后面搜索迭代器中满足谓词的元素。</target>
        </trans-unit>
        <trans-unit id="532083e20b7883df5506427bdf3897cf9c69ee57" translate="yes" xml:space="preserve">
          <source>Searches for an element of an iterator from the back that satisfies a predicate. &lt;a href=&quot;../../iter/trait.doubleendediterator#method.rfind&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">从背面搜索满足谓词的迭代器元素。&lt;a href=&quot;../../iter/trait.doubleendediterator#method.rfind&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="746936471fbd43113547a89d6d3b931297227e42" translate="yes" xml:space="preserve">
          <source>Searches for an element of an iterator from the back that satisfies a predicate. &lt;a href=&quot;../iter/trait.doubleendediterator#method.rfind&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">从背面搜索满足谓词的迭代器元素。&lt;a href=&quot;../iter/trait.doubleendediterator#method.rfind&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="85288c4b67b128aa63ce0cba0a0f6c128e49b4a1" translate="yes" xml:space="preserve">
          <source>Searches for an element of an iterator from the back that satisfies a predicate. &lt;a href=&quot;iter/trait.doubleendediterator#method.rfind&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">从背面搜索满足谓词的迭代器元素。&lt;a href=&quot;iter/trait.doubleendediterator#method.rfind&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65a626fe71f749af973dfce0d72fd7e24c3b262a" translate="yes" xml:space="preserve">
          <source>Searches for an element of an iterator from the back that satisfies a predicate. &lt;a href=&quot;trait.doubleendediterator#method.rfind&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">从背面搜索满足谓词的迭代器元素。&lt;a href=&quot;trait.doubleendediterator#method.rfind&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b5689009b2419d56c677d881fa744acad45be906" translate="yes" xml:space="preserve">
          <source>Searches for an element of an iterator that satisfies a predicate.</source>
          <target state="translated">在迭代器中搜索满足谓词的元素。</target>
        </trans-unit>
        <trans-unit id="b92e1c9d3102e3784e7bf1b1ae13ecbed92601c8" translate="yes" xml:space="preserve">
          <source>Searches for an element of an iterator that satisfies a predicate. &lt;a href=&quot;../../../iter/trait.iterator#method.find&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">搜索满足谓词的迭代器的元素。&lt;a href=&quot;../../../iter/trait.iterator#method.find&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3cdaab1b181a213143c872a425525e5ad8e5466c" translate="yes" xml:space="preserve">
          <source>Searches for an element of an iterator that satisfies a predicate. &lt;a href=&quot;../../iter/trait.iterator#method.find&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">搜索满足谓词的迭代器的元素。&lt;a href=&quot;../../iter/trait.iterator#method.find&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf92031246f6c4823820728ce733391b75632750" translate="yes" xml:space="preserve">
          <source>Searches for an element of an iterator that satisfies a predicate. &lt;a href=&quot;../iter/trait.iterator#method.find&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">搜索满足谓词的迭代器的元素。&lt;a href=&quot;../iter/trait.iterator#method.find&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f547a648c4bbc4e82d48e90d04b24d4601646c0" translate="yes" xml:space="preserve">
          <source>Searches for an element of an iterator that satisfies a predicate. &lt;a href=&quot;iter/trait.iterator#method.find&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">搜索满足谓词的迭代器的元素。&lt;a href=&quot;iter/trait.iterator#method.find&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87ac7333a913b0c4084d8e023b09ac4cdffe8559" translate="yes" xml:space="preserve">
          <source>Searches for an element of an iterator that satisfies a predicate. &lt;a href=&quot;trait.iterator#method.find&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">搜索满足谓词的迭代器的元素。&lt;a href=&quot;trait.iterator#method.find&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c42de42bc1907a5a1b52e8ec0a64dca1b9461a58" translate="yes" xml:space="preserve">
          <source>Searches for chars that are equal to a given &lt;a href=&quot;../../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39893e15426279064c0dd333dd4107082c8ca7bc" translate="yes" xml:space="preserve">
          <source>Searches for chars that are equal to a given &lt;a href=&quot;primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333fc641daf7d2737df9c4e746769731b83136e8" translate="yes" xml:space="preserve">
          <source>Searches for chars that are equal to a given char</source>
          <target state="translated">搜索等于给定字符的字符。</target>
        </trans-unit>
        <trans-unit id="b8a402e814cd46ffe3e7a6aaa73558922c84e3c1" translate="yes" xml:space="preserve">
          <source>Searches for chars that are equal to any of the &lt;a href=&quot;../../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s in the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75af8b18236695d52f22ca858507f8eedc4a8e0c" translate="yes" xml:space="preserve">
          <source>Searches for chars that are equal to any of the &lt;a href=&quot;primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s in the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702c314d5b30f1accfdbb832ab87fbb0b341a336" translate="yes" xml:space="preserve">
          <source>Searches for chars that are equal to any of the chars in the array</source>
          <target state="translated">搜索等于数组中任何一个字符的字符。</target>
        </trans-unit>
        <trans-unit id="ba66da2741c0ff78a37e961a37db7788a9edb5a8" translate="yes" xml:space="preserve">
          <source>Searches for chars that match the given predicate</source>
          <target state="translated">搜索符合给定谓词的字符。</target>
        </trans-unit>
        <trans-unit id="f79707c4ffd13504e8a620181e79d250b74fd521" translate="yes" xml:space="preserve">
          <source>Searching Each Line for the Query</source>
          <target state="translated">搜索查询的每一行</target>
        </trans-unit>
        <trans-unit id="554e5e25f0d86fc7d48da5b753f3b192e04d6a22" translate="yes" xml:space="preserve">
          <source>Second example:</source>
          <target state="translated">第二个例子:</target>
        </trans-unit>
        <trans-unit id="ddb8f6a409190e926fb7592f2d1a6011c5f9d5bd" translate="yes" xml:space="preserve">
          <source>Second, &lt;code&gt;println!&lt;/code&gt; calls a Rust macro. If it called a function instead, it would be entered as &lt;code&gt;println&lt;/code&gt; (without the &lt;code&gt;!&lt;/code&gt;). We&amp;rsquo;ll discuss Rust macros in more detail in Chapter 19. For now, you just need to know that using a &lt;code&gt;!&lt;/code&gt; means that you&amp;rsquo;re calling a macro instead of a normal function.</source>
          <target state="translated">第二， &lt;code&gt;println!&lt;/code&gt; 调用Rust宏。如果改为调用函数，则将其作为 &lt;code&gt;println&lt;/code&gt; 输入（不带 &lt;code&gt;!&lt;/code&gt; ）。我们将在第19章中更详细地讨论Rust宏。现在，您只需要知道使用 &lt;code&gt;!&lt;/code&gt; 即可。表示您正在调用宏而不是普通函数。</target>
        </trans-unit>
        <trans-unit id="e0edb499b1c552b3dc16b17f7114852ca1f2a36c" translate="yes" xml:space="preserve">
          <source>Second, each repetition in the transcriber must contain at least one metavariable to decide now many times to expand it. If multiple metavariables appear in the same repetition, they must be bound to the same number of fragments. For instance, &lt;code&gt;( $( $i:ident ),* ; $( $j:ident ),* ) =&amp;gt; ( $( ($i,$j) ),*&lt;/code&gt; must bind the same number of &lt;code&gt;$i&lt;/code&gt; fragments as &lt;code&gt;$j&lt;/code&gt; fragments. This means that invoking the macro with &lt;code&gt;(a, b, c; d, e, f&lt;/code&gt;) is legal and expands to &lt;code&gt;((a,d), (b,e), c,f))&lt;/code&gt;, but &lt;code&gt;(a, b, c; d, e)&lt;/code&gt; is illegal because it does not have the same number. This requirement applies to every layer of nested repetitions.</source>
          <target state="translated">其次，转录器中的每个重复都必须至少包含一个元变量，以便现在多次决定扩展它。如果多个元变量以相同的重复出现，则它们必须绑定到相同数量的片段。例如， &lt;code&gt;( $( $i:ident ),* ; $( $j:ident ),* ) =&amp;gt; ( $( ($i,$j) ),*&lt;/code&gt; 必须结合相同数目的 &lt;code&gt;$i&lt;/code&gt; 片段作为 &lt;code&gt;$j&lt;/code&gt; 片段。这意味着用 &lt;code&gt;(a, b, c; d, e, f&lt;/code&gt; ）调用宏是合法的，并且扩展为 &lt;code&gt;((a,d), (b,e), c,f))&lt;/code&gt; ，但是 &lt;code&gt;(a, b, c; d, e)&lt;/code&gt; 是非法的，因为它没有相同的编号。此要求适用于嵌套重复的每一层。</target>
        </trans-unit>
        <trans-unit id="9a073c305891d074dfc05591aefc3b14e4c5555c" translate="yes" xml:space="preserve">
          <source>Second, implicit methods on &lt;a href=&quot;../book/ch03-02-data-types&quot;&gt;primitive types&lt;/a&gt; are documented here. This can be a source of confusion for two reasons:</source>
          <target state="translated">其次，此处记录了&lt;a href=&quot;../book/ch03-02-data-types&quot;&gt;原始类型的&lt;/a&gt;隐式方法。造成混淆的原因有两个：</target>
        </trans-unit>
        <trans-unit id="cc4af03ac46d7dd2d589609d8142afb265cb45e5" translate="yes" xml:space="preserve">
          <source>Second, it can be used to import macros from another crate, by attaching it to an &lt;code&gt;extern crate&lt;/code&gt; declaration appearing in the crate's root module. Macros imported this way are imported into the prelude of the crate, not textually, which means that they can be shadowed by any other name. While macros imported by &lt;code&gt;#[macro_use]&lt;/code&gt; can be used before the import statement, in case of a conflict, the last macro imported wins. Optionally, a list of macros to import can be specified using the &lt;a href=&quot;attributes#meta-item-attribute-syntax&quot;&gt;&lt;em&gt;MetaListIdents&lt;/em&gt;&lt;/a&gt; syntax; this is not supported when &lt;code&gt;#[macro_use]&lt;/code&gt; is applied to a module.</source>
          <target state="translated">其次，通过将其附加到出现在包装箱根模块中的 &lt;code&gt;extern crate&lt;/code&gt; 声明中，可以将其用于从其他包装箱导入宏。以这种方式导入的宏被导入到条板箱的前奏中，而不是从文本上导入，这意味着它们可以被任何其他名称遮盖。虽然可以在导入语句之前使用由 &lt;code&gt;#[macro_use]&lt;/code&gt; 导入的宏，但是如果发生冲突，则最后一个导入的宏将获胜。（可选）可以使用&lt;a href=&quot;attributes#meta-item-attribute-syntax&quot;&gt;&lt;em&gt;MetaListIdents&lt;/em&gt;&lt;/a&gt;语法指定要导入的宏列表。将 &lt;code&gt;#[macro_use]&lt;/code&gt; 应用于模块时，不支持此功能。</target>
        </trans-unit>
        <trans-unit id="97208cc673dd09ce82f68d9602b8fe562c39c03b" translate="yes" xml:space="preserve">
          <source>Second, the &lt;code&gt;five&lt;/code&gt; function has no parameters and defines the type of the return value, but the body of the function is a lonely &lt;code&gt;5&lt;/code&gt; with no semicolon because it&amp;rsquo;s an expression whose value we want to return.</source>
          <target state="translated">第二，这 &lt;code&gt;five&lt;/code&gt; 函数没有参数，并且定义了返回值的类型，但是函数的主体是一个孤独的 &lt;code&gt;5&lt;/code&gt; ，没有分号，因为它是我们要返回其值的表达式。</target>
        </trans-unit>
        <trans-unit id="4edacf5668ae7bc8aecc8dd49a240019787fb54c" translate="yes" xml:space="preserve">
          <source>Second, we can see in the signature that &lt;code&gt;add&lt;/code&gt; takes ownership of &lt;code&gt;self&lt;/code&gt;, because &lt;code&gt;self&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; have an &lt;code&gt;&amp;amp;&lt;/code&gt;. This means &lt;code&gt;s1&lt;/code&gt; in Listing 8-18 will be moved into the &lt;code&gt;add&lt;/code&gt; call and no longer be valid after that. So although &lt;code&gt;let s3 = s1 + &amp;amp;s2;&lt;/code&gt; looks like it will copy both strings and create a new one, this statement actually takes ownership of &lt;code&gt;s1&lt;/code&gt;, appends a copy of the contents of &lt;code&gt;s2&lt;/code&gt;, and then returns ownership of the result. In other words, it looks like it&amp;rsquo;s making a lot of copies but isn&amp;rsquo;t; the implementation is more efficient than copying.</source>
          <target state="translated">其次，我们可以在签名看到 &lt;code&gt;add&lt;/code&gt; 需要的所有权 &lt;code&gt;self&lt;/code&gt; ，因为 &lt;code&gt;self&lt;/code&gt; 并&lt;em&gt;不能&lt;/em&gt;有一个 &lt;code&gt;&amp;amp;&lt;/code&gt; 。这意味着清单8-18中的 &lt;code&gt;s1&lt;/code&gt; 将被移到 &lt;code&gt;add&lt;/code&gt; 调用中，之后将不再有效。因此，尽管 &lt;code&gt;let s3 = s1 + &amp;amp;s2;&lt;/code&gt; 看起来它将复制两个字符串并创建一个新字符串，此语句实际上获得 &lt;code&gt;s1&lt;/code&gt; 的所有权，追加 &lt;code&gt;s2&lt;/code&gt; 内容的副本，然后返回结果的所有权。换句话说，它看起来正在制作大量副本，但不是。实现比复制更有效。</target>
        </trans-unit>
        <trans-unit id="945d69a3e9b1262e6a65728582125632ae46e284" translate="yes" xml:space="preserve">
          <source>Second, we convert the bytes in the buffer to a string and print that string. The &lt;code&gt;String::from_utf8_lossy&lt;/code&gt; function takes a &lt;code&gt;&amp;amp;[u8]&lt;/code&gt; and produces a &lt;code&gt;String&lt;/code&gt; from it. The &amp;ldquo;lossy&amp;rdquo; part of the name indicates the behavior of this function when it sees an invalid UTF-8 sequence: it will replace the invalid sequence with &lt;code&gt;�&lt;/code&gt;, the &lt;code&gt;U+FFFD REPLACEMENT CHARACTER&lt;/code&gt;. You might see replacement characters for characters in the buffer that aren&amp;rsquo;t filled by request data.</source>
          <target state="translated">其次，我们将缓冲区中的字节转换为字符串并打印该字符串。的 &lt;code&gt;String::from_utf8_lossy&lt;/code&gt; 函数采用一个 &lt;code&gt;&amp;amp;[u8]&lt;/code&gt; ，并产生一个 &lt;code&gt;String&lt;/code&gt; 从它。名称的&amp;ldquo;有损&amp;rdquo;部分表示这个函数的行为，当它看到一个无效的UTF-8序列：它会替换无效的序列 &lt;code&gt;�&lt;/code&gt; 中， &lt;code&gt;U+FFFD REPLACEMENT CHARACTER&lt;/code&gt; 。您可能会看到缓冲区中未被请求数据填充的字符的替换字符。</target>
        </trans-unit>
        <trans-unit id="9e79dfeb52515135908df7ef8a4402c9cf237457" translate="yes" xml:space="preserve">
          <source>Second, we&amp;rsquo;ve removed the call to &lt;code&gt;expect&lt;/code&gt; in favor of the &lt;code&gt;?&lt;/code&gt; operator, as we talked about in &lt;a href=&quot;ch09-02-recoverable-errors-with-result#a-shortcut-for-propagating-errors-the--operator&quot;&gt;Chapter 9&lt;/a&gt;. Rather than &lt;code&gt;panic!&lt;/code&gt; on an error, &lt;code&gt;?&lt;/code&gt; will return the error value from the current function for the caller to handle.</source>
          <target state="translated">其次，我们删除了 &lt;code&gt;expect&lt;/code&gt; 以支持 &lt;code&gt;?&lt;/code&gt; 的电话。运算符，如&lt;a href=&quot;ch09-02-recoverable-errors-with-result#a-shortcut-for-propagating-errors-the--operator&quot;&gt;第9章所述&lt;/a&gt;。而不是 &lt;code&gt;panic!&lt;/code&gt; 出现错误， &lt;code&gt;?&lt;/code&gt; 将从当前函数返回错误值，以供调用者处理。</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="a08ef173524e85733e2fbdcb76c18c7d0fe1cb13" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method.as_mut_ptr&quot;&gt;&lt;code&gt;as_mut_ptr&lt;/code&gt;&lt;/a&gt; for warnings on using these pointers. The end pointer requires extra caution, as it does not point to a valid element in the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7b9eb9b1f619eda6273cca2a8eb01bfee4bdc8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method.as_ptr&quot;&gt;&lt;code&gt;as_ptr&lt;/code&gt;&lt;/a&gt; for warnings on using these pointers. The end pointer requires extra caution, as it does not point to a valid element in the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a13fe09bb6db614bb3789b1ed210e6989bc7612" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method.chunks&quot;&gt;&lt;code&gt;chunks&lt;/code&gt;&lt;/a&gt; for a variant of this iterator that also returns the remainder as a smaller chunk, and &lt;a href=&quot;#method.rchunks_exact&quot;&gt;&lt;code&gt;rchunks_exact&lt;/code&gt;&lt;/a&gt; for the same iterator but starting at the end of the slice.</source>
          <target state="translated">有关此迭代器的变体，请参见&lt;a href=&quot;#method.chunks&quot;&gt; &lt;code&gt;chunks&lt;/code&gt; &lt;/a&gt;，该变体还以较小的块的形式返回其余部分，对于相同的迭代器，&lt;a href=&quot;#method.rchunks_exact&quot;&gt; &lt;code&gt;rchunks_exact&lt;/code&gt; &lt;/a&gt;返回，但从切片的末尾开始。</target>
        </trans-unit>
        <trans-unit id="ad53b94a6533ff2d11534623a32f3e1cf407ac05" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method.chunks_exact&quot;&gt;&lt;code&gt;chunks_exact&lt;/code&gt;&lt;/a&gt; for a variant of this iterator that returns chunks of always exactly &lt;code&gt;chunk_size&lt;/code&gt; elements, and &lt;a href=&quot;#method.rchunks&quot;&gt;&lt;code&gt;rchunks&lt;/code&gt;&lt;/a&gt; for the same iterator but starting at the end of the slice of the slice.</source>
          <target state="translated">请参阅&lt;a href=&quot;#method.chunks_exact&quot;&gt; &lt;code&gt;chunks_exact&lt;/code&gt; ,&lt;/a&gt;获取此迭代器的一种变体，该变体返回始终完全为 &lt;code&gt;chunk_size&lt;/code&gt; 元素的块，并为同一迭代器返回&lt;a href=&quot;#method.rchunks&quot;&gt; &lt;code&gt;rchunks&lt;/code&gt; &lt;/a&gt;，但从分片的末尾开始。</target>
        </trans-unit>
        <trans-unit id="7331f140b489d73bbe09f65e667098eb66b0b425" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method.chunks_exact&quot;&gt;&lt;code&gt;chunks_exact&lt;/code&gt;&lt;/a&gt; for a variant of this iterator that returns chunks of always exactly &lt;code&gt;chunk_size&lt;/code&gt; elements, and &lt;a href=&quot;#method.rchunks&quot;&gt;&lt;code&gt;rchunks&lt;/code&gt;&lt;/a&gt; for the same iterator but starting at the end of the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a301ebf0252ab69de735b799a6daa8fd205fac9a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method.chunks_exact_mut&quot;&gt;&lt;code&gt;chunks_exact_mut&lt;/code&gt;&lt;/a&gt; for a variant of this iterator that returns chunks of always exactly &lt;code&gt;chunk_size&lt;/code&gt; elements, and &lt;a href=&quot;#method.rchunks_mut&quot;&gt;&lt;code&gt;rchunks_mut&lt;/code&gt;&lt;/a&gt; for the same iterator but starting at the end of the slice of the slice.</source>
          <target state="translated">请参阅&lt;a href=&quot;#method.chunks_exact_mut&quot;&gt; &lt;code&gt;chunks_exact_mut&lt;/code&gt; &lt;/a&gt;，以获取此迭代器的一种变体，该变体将返回始终完全为 &lt;code&gt;chunk_size&lt;/code&gt; 元素的块，并为&lt;a href=&quot;#method.rchunks_mut&quot;&gt; &lt;code&gt;rchunks_mut&lt;/code&gt; &lt;/a&gt;返回相同的迭代器，但从切片的末尾开始。</target>
        </trans-unit>
        <trans-unit id="4a01c2cfedaa79a1ad54d5b4fd46b6cab923e1b8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method.chunks_exact_mut&quot;&gt;&lt;code&gt;chunks_exact_mut&lt;/code&gt;&lt;/a&gt; for a variant of this iterator that returns chunks of always exactly &lt;code&gt;chunk_size&lt;/code&gt; elements, and &lt;a href=&quot;#method.rchunks_mut&quot;&gt;&lt;code&gt;rchunks_mut&lt;/code&gt;&lt;/a&gt; for the same iterator but starting at the end of the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edaf8a9ebbe2ba6f933b491ded7f7c453a863e8c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method.chunks_mut&quot;&gt;&lt;code&gt;chunks_mut&lt;/code&gt;&lt;/a&gt; for a variant of this iterator that also returns the remainder as a smaller chunk, and &lt;a href=&quot;#method.rchunks_exact_mut&quot;&gt;&lt;code&gt;rchunks_exact_mut&lt;/code&gt;&lt;/a&gt; for the same iterator but starting at the end of the slice of the slice.</source>
          <target state="translated">有关此迭代器的变体，请参见&lt;a href=&quot;#method.chunks_mut&quot;&gt; &lt;code&gt;chunks_mut&lt;/code&gt; &lt;/a&gt;，该变体还以较小的块的形式返回余数，对于相同的迭代器，但从切片的末尾开始，返回&lt;a href=&quot;#method.rchunks_exact_mut&quot;&gt; &lt;code&gt;rchunks_exact_mut&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="13ac2320700c36fa95f13d8b9f03ffb61022a898" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method.chunks_mut&quot;&gt;&lt;code&gt;chunks_mut&lt;/code&gt;&lt;/a&gt; for a variant of this iterator that also returns the remainder as a smaller chunk, and &lt;a href=&quot;#method.rchunks_exact_mut&quot;&gt;&lt;code&gt;rchunks_exact_mut&lt;/code&gt;&lt;/a&gt; for the same iterator but starting at the end of the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7214a0c4565a2b79c37054fc238c92ff1ed1713c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method.is_absolute&quot;&gt;&lt;code&gt;is_absolute&lt;/code&gt;&lt;/a&gt;'s documentation for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;#method.is_absolute&quot;&gt; &lt;code&gt;is_absolute&lt;/code&gt; &lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="b50f34b335847aa8295f6b01826574d74bbc15e2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method.rchunks&quot;&gt;&lt;code&gt;rchunks&lt;/code&gt;&lt;/a&gt; for a variant of this iterator that also returns the remainder as a smaller chunk, and &lt;a href=&quot;#method.chunks_exact&quot;&gt;&lt;code&gt;chunks_exact&lt;/code&gt;&lt;/a&gt; for the same iterator but starting at the beginning of the slice.</source>
          <target state="translated">有关此迭代器的变体，请参见&lt;a href=&quot;#method.rchunks&quot;&gt; &lt;code&gt;rchunks&lt;/code&gt; &lt;/a&gt;，该变体还以较小的块形式返回其余部分，对于相同的迭代器，&lt;a href=&quot;#method.chunks_exact&quot;&gt; &lt;code&gt;chunks_exact&lt;/code&gt; &lt;/a&gt;块的开头开始返回chunks_exact。</target>
        </trans-unit>
        <trans-unit id="9979021bccd2efc766458b56892f3b499ecbd6ef" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method.rchunks_exact&quot;&gt;&lt;code&gt;rchunks_exact&lt;/code&gt;&lt;/a&gt; for a variant of this iterator that returns chunks of always exactly &lt;code&gt;chunk_size&lt;/code&gt; elements, and &lt;a href=&quot;#method.chunks&quot;&gt;&lt;code&gt;chunks&lt;/code&gt;&lt;/a&gt; for the same iterator but starting at the beginning of the slice.</source>
          <target state="translated">有关此迭代器的变体，请参见&lt;a href=&quot;#method.rchunks_exact&quot;&gt; &lt;code&gt;rchunks_exact&lt;/code&gt; &lt;/a&gt;，该变体返回始终完全为 &lt;code&gt;chunk_size&lt;/code&gt; 元素的&lt;a href=&quot;#method.chunks&quot;&gt; &lt;code&gt;chunks&lt;/code&gt; &lt;/a&gt;，并为相同的迭代器返回块，但从切片的开头开始。</target>
        </trans-unit>
        <trans-unit id="aff7ed3f854512f12d681629cf01f859b8f4ed24" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method.rchunks_exact_mut&quot;&gt;&lt;code&gt;rchunks_exact_mut&lt;/code&gt;&lt;/a&gt; for a variant of this iterator that returns chunks of always exactly &lt;code&gt;chunk_size&lt;/code&gt; elements, and &lt;a href=&quot;#method.chunks_mut&quot;&gt;&lt;code&gt;chunks_mut&lt;/code&gt;&lt;/a&gt; for the same iterator but starting at the beginning of the slice.</source>
          <target state="translated">有关此迭代器的变体，请参见&lt;a href=&quot;#method.rchunks_exact_mut&quot;&gt; &lt;code&gt;rchunks_exact_mut&lt;/code&gt; &lt;/a&gt;，该变体返回始终精确地为 &lt;code&gt;chunk_size&lt;/code&gt; 元素的块，对于相同的迭代器，则返回&lt;a href=&quot;#method.chunks_mut&quot;&gt; &lt;code&gt;chunks_mut&lt;/code&gt; &lt;/a&gt;，但从切片的开头开始。</target>
        </trans-unit>
        <trans-unit id="7e05e55b1d4fcd0ae7cfc2ecc3606e1d31985ac7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method.rchunks_mut&quot;&gt;&lt;code&gt;rchunks_mut&lt;/code&gt;&lt;/a&gt; for a variant of this iterator that also returns the remainder as a smaller chunk, and &lt;a href=&quot;#method.chunks_exact_mut&quot;&gt;&lt;code&gt;chunks_exact_mut&lt;/code&gt;&lt;/a&gt; for the same iterator but starting at the beginning of the slice.</source>
          <target state="translated">有关此迭代器的变体，请参见&lt;a href=&quot;#method.rchunks_mut&quot;&gt; &lt;code&gt;rchunks_mut&lt;/code&gt; &lt;/a&gt;，该变体也将剩余部分作为较小的块返回，而对于相同的迭代器，&lt;a href=&quot;#method.chunks_exact_mut&quot;&gt; &lt;code&gt;chunks_exact_mut&lt;/code&gt; &lt;/a&gt;块的开头开始返回chunks_exact_mut。</target>
        </trans-unit>
        <trans-unit id="30b44f2b97828c5798bd74c5cb56ed3adcd6cab6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method.read_to_end&quot;&gt;&lt;code&gt;read_to_end&lt;/code&gt;&lt;/a&gt; for other error semantics.</source>
          <target state="translated">有关其他错误语义，请参见&lt;a href=&quot;#method.read_to_end&quot;&gt; &lt;code&gt;read_to_end&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb8374b4383c115aa6bb93fe476933ce8d82c2c3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#variant.Read&quot;&gt;&lt;code&gt;Shutdown::Read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#variant.Write&quot;&gt;&lt;code&gt;Shutdown::Write&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;#variant.Read&quot;&gt; &lt;code&gt;Shutdown::Read&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#variant.Write&quot;&gt; &lt;code&gt;Shutdown::Write&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="04eb879e476542c9d6688cad0ed5c27155fc0106" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../mem/union.maybeuninit#method.zeroed&quot;&gt;&lt;code&gt;MaybeUninit::zeroed&lt;/code&gt;&lt;/a&gt; for examples of correct and incorrect usage of this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a22e1a0e367e3204d83a4c4ea76f0342d3fb7a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../reference/expressions/loop-expr#continue-expressions&quot;&gt;continue expressions&lt;/a&gt; from the reference for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409331ea9c5566f36765b941c91e09355dd2b84b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../struct.btreemap&quot;&gt;&lt;code&gt;BTreeMap&lt;/code&gt;&lt;/a&gt;'s documentation for a detailed discussion of this collection's performance benefits and drawbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd02ad7b79cb810db76f32ac11a1d341441c6c18" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;enum.ipaddr&quot;&gt;&lt;code&gt;IpAddr&lt;/code&gt;&lt;/a&gt; for a type encompassing both IPv4 and IPv6 addresses.</source>
          <target state="translated">有关同时包含IPv4和IPv6地址的类型，请参见&lt;a href=&quot;enum.ipaddr&quot;&gt; &lt;code&gt;IpAddr&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d0d20fe1b5c6691e296fc4ad9d04188bc107d2e9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;enum.prefix&quot;&gt;&lt;code&gt;Prefix&lt;/code&gt;&lt;/a&gt;'s documentation for more information on the different kinds of prefixes.</source>
          <target state="translated">有关各种&lt;a href=&quot;enum.prefix&quot;&gt; &lt;code&gt;Prefix&lt;/code&gt; &lt;/a&gt;的更多信息，请参见Prefix的文档。</target>
        </trans-unit>
        <trans-unit id="43f84a643e49bae1b13c6849a2d13e25d575392c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;enum.shutdown#variant.Read&quot;&gt;&lt;code&gt;Shutdown::Read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;enum.shutdown#variant.Write&quot;&gt;&lt;code&gt;Shutdown::Write&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f023fba6e8d14455766073d8c5d21b58e5464b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;enum.socketaddr&quot;&gt;&lt;code&gt;SocketAddr&lt;/code&gt;&lt;/a&gt; for a type encompassing both IPv4 and IPv6 socket addresses.</source>
          <target state="translated">有关包含IPv4和IPv6套接字地址的类型，请参见&lt;a href=&quot;enum.socketaddr&quot;&gt; &lt;code&gt;SocketAddr&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="70683490ae88162ba5317936bdeb81eac5791fbb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;fmt/index&quot;&gt;&lt;code&gt;std::fmt&lt;/code&gt;&lt;/a&gt; for more information on the format string syntax.</source>
          <target state="translated">有关格式字符串语法的更多信息，请参见&lt;a href=&quot;fmt/index&quot;&gt; &lt;code&gt;std::fmt&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="29f60592601875cc5a5ce38cc10ec59d5cbb6de7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;fn.remove_file&quot;&gt;&lt;code&gt;fs::remove_file&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fn.remove_dir&quot;&gt;&lt;code&gt;fs::remove_dir&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;fn.remove_file&quot;&gt; &lt;code&gt;fs::remove_file&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;fn.remove_dir&quot;&gt; &lt;code&gt;fs::remove_dir&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="27fa9b008bf74c8f9891483f29a0ddfd4a23c5bc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://doc.rust-lang.org/core/fmt/index.html&quot;&gt;&lt;code&gt;std::fmt&lt;/code&gt;&lt;/a&gt; for more information on the format string syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c18a8a03336ae70998b8592562c66c653cc40cd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://doc.rust-lang.org/nomicon/send-and-sync.html&quot;&gt;the Nomicon&lt;/a&gt; for more details about &lt;code&gt;Sync&lt;/code&gt;.</source>
          <target state="translated">有关 &lt;code&gt;Sync&lt;/code&gt; 更多详细信息，请参见&lt;a href=&quot;https://doc.rust-lang.org/nomicon/send-and-sync.html&quot;&gt;Nomicon&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f5ba25b4491615c19d3722047fc94b7603c652f7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://doc.rust-lang.org/nomicon/send-and-sync.html&quot;&gt;the Nomicon&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;https://doc.rust-lang.org/nomicon/send-and-sync.html&quot;&gt;Nomicon&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="44ad661c6b55136293e0c7164c35451a0e3281e1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0560-integer-overflow.md&quot;&gt;RFC 560&lt;/a&gt; for error conditions, rationale, and more details about integer overflow.</source>
          <target state="translated">有关错误条件，基本原理以及有关整数溢出的更多详细信息，请参见&lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0560-integer-overflow.md&quot;&gt;RFC 560&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1fd8b0e5025ea999368357669eb9e615d24ce186" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0911-const-fn.md&quot;&gt;RFC 911&lt;/a&gt; for more details on the design of &lt;code&gt;const fn&lt;/code&gt;s.</source>
          <target state="translated">有关 &lt;code&gt;const fn&lt;/code&gt; s 设计的更多详细信息，请参见&lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0911-const-fn.md&quot;&gt;RFC 911&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f0f7f73bb841f9097f2099a2bd26bd89ec57269c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/1522-conservative-impl-trait.md&quot;&gt;RFC 1522&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/1522-conservative-impl-trait.md&quot;&gt;RFC 1522&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="341ee4f18b96b94d5f3913f41221f7474b554168" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;notation&quot;&gt;Notation&lt;/a&gt; for more detail.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;notation&quot;&gt;符号&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="972bae082186c64fbfd97c0611f966d97e0f3bbc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ptr/fn.copy&quot;&gt;&lt;code&gt;ptr::copy&lt;/code&gt;&lt;/a&gt; for safety concerns and examples.</source>
          <target state="translated">有关安全性问题和示例，请参见&lt;a href=&quot;ptr/fn.copy&quot;&gt; &lt;code&gt;ptr::copy&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4a2efa607c2f9efd05c8f4fb3dd65f5a178fe36d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ptr/fn.copy_nonoverlapping&quot;&gt;&lt;code&gt;ptr::copy_nonoverlapping&lt;/code&gt;&lt;/a&gt; for safety concerns and examples.</source>
          <target state="translated">有关安全问题和示例，请参见&lt;a href=&quot;ptr/fn.copy_nonoverlapping&quot;&gt; &lt;code&gt;ptr::copy_nonoverlapping&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="851c43367302bcceb8d84cadb6759ffc4492d6b7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ptr/fn.drop_in_place&quot;&gt;&lt;code&gt;ptr::drop_in_place&lt;/code&gt;&lt;/a&gt; for safety concerns and examples.</source>
          <target state="translated">有关安全问题和示例，请参见&lt;a href=&quot;ptr/fn.drop_in_place&quot;&gt; &lt;code&gt;ptr::drop_in_place&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="69b1154db3deb834a573304ef00619edd7738644" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ptr/fn.read&quot;&gt;&lt;code&gt;ptr::read&lt;/code&gt;&lt;/a&gt; for safety concerns and examples.</source>
          <target state="translated">有关安全性问题和示例，请参见&lt;a href=&quot;ptr/fn.read&quot;&gt; &lt;code&gt;ptr::read&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2b430283b5482aede759e6433b387eba9aad4d05" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ptr/fn.read_unaligned&quot;&gt;&lt;code&gt;ptr::read_unaligned&lt;/code&gt;&lt;/a&gt; for safety concerns and examples.</source>
          <target state="translated">有关安全性问题和示例，请参见&lt;a href=&quot;ptr/fn.read_unaligned&quot;&gt; &lt;code&gt;ptr::read_unaligned&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2f1c66be6a57de6ea3f7a9900acf0b07472d4c4c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ptr/fn.read_volatile&quot;&gt;&lt;code&gt;ptr::read_volatile&lt;/code&gt;&lt;/a&gt; for safety concerns and examples.</source>
          <target state="translated">有关安全问题和示例，请参见&lt;a href=&quot;ptr/fn.read_volatile&quot;&gt; &lt;code&gt;ptr::read_volatile&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ecaa8597e3a5f6f0bc305f4dcaf26239ba18209" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ptr/fn.replace&quot;&gt;&lt;code&gt;ptr::replace&lt;/code&gt;&lt;/a&gt; for safety concerns and examples.</source>
          <target state="translated">有关安全性问题和示例，请参见&lt;a href=&quot;ptr/fn.replace&quot;&gt; &lt;code&gt;ptr::replace&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="41ca19c37c44e13e4783ee2c86e6f12bcec2190c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ptr/fn.swap&quot;&gt;&lt;code&gt;ptr::swap&lt;/code&gt;&lt;/a&gt; for safety concerns and examples.</source>
          <target state="translated">有关安全问题和示例，请参见&lt;a href=&quot;ptr/fn.swap&quot;&gt; &lt;code&gt;ptr::swap&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc13b3c74118eea647adf7d6c3a290dd62768d26" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ptr/fn.write&quot;&gt;&lt;code&gt;ptr::write&lt;/code&gt;&lt;/a&gt; for safety concerns and examples.</source>
          <target state="translated">有关安全问题和示例，请参见&lt;a href=&quot;ptr/fn.write&quot;&gt; &lt;code&gt;ptr::write&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="76ef5570f01a9fbfe90fdfe1fba5407ca8b93791" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ptr/fn.write_bytes&quot;&gt;&lt;code&gt;ptr::write_bytes&lt;/code&gt;&lt;/a&gt; for safety concerns and examples.</source>
          <target state="translated">有关安全性问题和示例，请参见&lt;a href=&quot;ptr/fn.write_bytes&quot;&gt; &lt;code&gt;ptr::write_bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="24eec72977711be501e6f3e1bb69cc5e2891626c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ptr/fn.write_unaligned&quot;&gt;&lt;code&gt;ptr::write_unaligned&lt;/code&gt;&lt;/a&gt; for safety concerns and examples.</source>
          <target state="translated">有关安全性问题和示例，请参见&lt;a href=&quot;ptr/fn.write_unaligned&quot;&gt; &lt;code&gt;ptr::write_unaligned&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1bce77a7b346a67606634ba24ac27755ce56c7ed" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ptr/fn.write_volatile&quot;&gt;&lt;code&gt;ptr::write_volatile&lt;/code&gt;&lt;/a&gt; for safety concerns and examples.</source>
          <target state="translated">有关安全问题和示例，请参见&lt;a href=&quot;ptr/fn.write_volatile&quot;&gt; &lt;code&gt;ptr::write_volatile&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78df71e316ba5edeeca33937d63fcf6d54758758" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;struct.btreemap&quot;&gt;&lt;code&gt;BTreeMap&lt;/code&gt;&lt;/a&gt;'s documentation for a detailed discussion of this collection's performance benefits and drawbacks.</source>
          <target state="translated">有关此集合的性能&lt;a href=&quot;struct.btreemap&quot;&gt; &lt;code&gt;BTreeMap&lt;/code&gt; &lt;/a&gt;的详细讨论，请参见BTreeMap的文档。</target>
        </trans-unit>
        <trans-unit id="b7b5e3bf058d23bd60805c25bebece5bf3a99b97" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;struct.path#method.is_absolute&quot;&gt;&lt;code&gt;is_absolute&lt;/code&gt;&lt;/a&gt;'s documentation for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd6a1a0288002d86b6069fd21311e5cbd0663b77" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;struct.pathbuf#method.push&quot;&gt;&lt;code&gt;PathBuf::push&lt;/code&gt;&lt;/a&gt; for more details on what it means to adjoin a path.</source>
          <target state="translated">有关&lt;a href=&quot;struct.pathbuf#method.push&quot;&gt; &lt;code&gt;PathBuf::push&lt;/code&gt; &lt;/a&gt;的更多详细信息，请参见PathBuf :: push。</target>
        </trans-unit>
        <trans-unit id="94c21296e1f6ae9d012718f5863687c9e8dc55c1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;struct.pathbuf#method.set_extension&quot;&gt;&lt;code&gt;PathBuf::set_extension&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;struct.pathbuf#method.set_extension&quot;&gt; &lt;code&gt;PathBuf::set_extension&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dfa7b26a3f4db66a464bece31851b8d86818f7f8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;struct.pathbuf#method.set_file_name&quot;&gt;&lt;code&gt;PathBuf::set_file_name&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;struct.pathbuf#method.set_file_name&quot;&gt; &lt;code&gt;PathBuf::set_file_name&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c5b513b630e2729ba5f63b01baaa7c10086123db" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;struct.socketaddrv6#method.flowinfo&quot;&gt;&lt;code&gt;SocketAddrV6::flowinfo&lt;/code&gt;&lt;/a&gt;'s documentation for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d331ca852b3d7c7663d2f660fe9799e1576d7fb9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;struct.socketaddrv6#method.scope_id&quot;&gt;&lt;code&gt;SocketAddrV6::scope_id&lt;/code&gt;&lt;/a&gt;'s documentation for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f7275b9d5f14c0872aca5702c25ef924c7a7f5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;struct.syncsender#method.send&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt; for notes about guarantees of whether the receiver has received the data or not if this function is successful.</source>
          <target state="translated">有关确保此功能成功后接收方是否已接收数据的保证，请参阅&lt;a href=&quot;struct.syncsender#method.send&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt;注释。</target>
        </trans-unit>
        <trans-unit id="5f6fda69f1497d8ba3de92a1bcf68c8ba9af3309" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;thread/struct.localkey&quot;&gt;&lt;code&gt;LocalKey&lt;/code&gt; documentation&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a905795e30477334aa445a9647e2b9062f6913" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;thread/struct.localkey&quot;&gt;LocalKey documentation&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;thread/struct.localkey&quot;&gt;LocalKey文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6b900f7c84247513b4423008ec6a08ea2c7fe610" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;trait.globalalloc#method.alloc_zeroed&quot;&gt;&lt;code&gt;GlobalAlloc::alloc_zeroed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;trait.globalalloc#method.alloc_zeroed&quot;&gt; &lt;code&gt;GlobalAlloc::alloc_zeroed&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e2b18ce9d95985463bc331652e45e3e90f73ff9a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;trait.globalalloc#method.realloc&quot;&gt;&lt;code&gt;GlobalAlloc::realloc&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;trait.globalalloc#method.realloc&quot;&gt; &lt;code&gt;GlobalAlloc::realloc&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9164fd30a08331605d710758de24a8ef25138219" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;trait.globalalloc#tymethod.alloc&quot;&gt;&lt;code&gt;GlobalAlloc::alloc&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;trait.globalalloc#tymethod.alloc&quot;&gt; &lt;code&gt;GlobalAlloc::alloc&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2bdc617001eb4f1263d54b0f93b73343a8b5f305" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;trait.globalalloc#tymethod.dealloc&quot;&gt;&lt;code&gt;GlobalAlloc::dealloc&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;trait.globalalloc#tymethod.dealloc&quot;&gt; &lt;code&gt;GlobalAlloc::dealloc&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="49e809f67cd789183663f48fd4e91265ea068b30" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;trait.read#method.read_to_end&quot;&gt;&lt;code&gt;read_to_end&lt;/code&gt;&lt;/a&gt; for other error semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a86ba0292af4fa02f7d1d2fc126212b338bc798d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;trait.seek&quot;&gt;&lt;code&gt;std::io::Seek&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;trait.seek&quot;&gt; &lt;code&gt;std::io::Seek&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e0a3710bdea3af01a290862468d9af89cb76eaa9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;union.maybeuninit#method.assume_init_mut&quot;&gt;&lt;code&gt;assume_init_mut&lt;/code&gt;&lt;/a&gt; for more details and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8166eab45cb7542c0a1ee511bc39280f71da297" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;union.maybeuninit#method.assume_init_ref&quot;&gt;&lt;code&gt;assume_init_ref&lt;/code&gt;&lt;/a&gt; for more details and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118dc710e74fc36d342f3a8191784163ef5e4d91" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;OsString&lt;/code&gt; introduction for information about encoding.</source>
          <target state="translated">有关编码的信息，请参见 &lt;code&gt;OsString&lt;/code&gt; 简介。</target>
        </trans-unit>
        <trans-unit id="a76df453b90814b857b917897c5a54c5c0335cae" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;from_bits&lt;/code&gt; for some discussion of the portability of this operation (there are almost no issues).</source>
          <target state="translated">有关此操作的可移植性的讨论，请参见 &lt;code&gt;from_bits&lt;/code&gt; （几乎没有问题）。</target>
        </trans-unit>
        <trans-unit id="2e5cf5f20a4559eb76238f8844eda1a075fc7736" translate="yes" xml:space="preserve">
          <source>See &lt;em&gt;&lt;a href=&quot;items/functions#extern-function-qualifier&quot;&gt;extern functions&lt;/a&gt;&lt;/em&gt; for information on specifying the ABI for exporting functions. See &lt;em&gt;&lt;a href=&quot;items/external-blocks&quot;&gt;external blocks&lt;/a&gt;&lt;/em&gt; for information on specifying the ABI for linking external libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06e3277392bda59f92ee25a953e14ab2862ecba" translate="yes" xml:space="preserve">
          <source>See &lt;em&gt;&lt;a href=&quot;items/functions#extern-functions&quot;&gt;extern functions&lt;/a&gt;&lt;/em&gt; for information on specifying the ABI for exporting functions. See &lt;em&gt;&lt;a href=&quot;items/external-blocks&quot;&gt;external blocks&lt;/a&gt;&lt;/em&gt; for information on specifying the ABI for linking external libraries.</source>
          <target state="translated">有关指定导出功能的ABI的信息，请参见&lt;em&gt;&lt;a href=&quot;items/functions#extern-functions&quot;&gt;外部&lt;/a&gt;&lt;/em&gt;函数。有关指定用于链接外部库的ABI的信息，请参见&lt;em&gt;&lt;a href=&quot;items/external-blocks&quot;&gt;外部块&lt;/a&gt;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="67373bb92cd7ecbf243edb9d60ad6f00f86a6052" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另见</target>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">另见</target>
        </trans-unit>
        <trans-unit id="6db215b954f737d274df792c7ae091f8f0b3e26a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../slice/fn.from_raw_parts&quot;&gt;&lt;code&gt;slice::from_raw_parts&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4083d2dbd51616b52046258ff9bc488166f12988" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../slice/fn.from_raw_parts_mut&quot;&gt;&lt;code&gt;slice::from_raw_parts_mut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c84ac42290f1c39af3a495925f298df5ee8e135" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://github.com/rust-lang/rust/issues/14587&quot;&gt;Issue 14587&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb8bf66b2416daae763b4f6167577e698f82342" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;slice/fn.from_raw_parts&quot;&gt;&lt;code&gt;slice::from_raw_parts&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf5d049d15310cdc527996c8d364fc5baf4f2b4" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;slice/fn.from_raw_parts_mut&quot;&gt;&lt;code&gt;slice::from_raw_parts_mut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8edc55a72fd9336940d69577e0d565708a4d95f6" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;struct.arc#method.get_mut&quot;&gt;&lt;code&gt;get_mut&lt;/code&gt;&lt;/a&gt;, which is safe and does appropriate checks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b76a65569e44a672110c944b0a48a3fe458998" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;struct.arc#method.get_mut&quot;&gt;&lt;code&gt;get_mut&lt;/code&gt;&lt;/a&gt;, which will fail rather than cloning.</source>
          <target state="translated">另请参见&lt;a href=&quot;struct.arc#method.get_mut&quot;&gt; &lt;code&gt;get_mut&lt;/code&gt; &lt;/a&gt;，它将失败而不是克隆。</target>
        </trans-unit>
        <trans-unit id="0fe20fa068742b872ec033cf4f0aec8c1d3869be" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;struct.arc#method.make_mut&quot;&gt;&lt;code&gt;make_mut&lt;/code&gt;&lt;/a&gt;, which will &lt;a href=&quot;../clone/trait.clone#tymethod.clone&quot;&gt;&lt;code&gt;clone&lt;/code&gt;&lt;/a&gt; the inner value when it's shared.</source>
          <target state="translated">另请参见&lt;a href=&quot;struct.arc#method.make_mut&quot;&gt; &lt;code&gt;make_mut&lt;/code&gt; &lt;/a&gt;，它将在共享内部值时&lt;a href=&quot;../clone/trait.clone#tymethod.clone&quot;&gt; &lt;code&gt;clone&lt;/code&gt; &lt;/a&gt;内部值。</target>
        </trans-unit>
        <trans-unit id="0d4171060776685cbcb51ee6ee6bbdcf1879291e" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;struct.arc#method.make_mut&quot;&gt;&lt;code&gt;make_mut&lt;/code&gt;&lt;/a&gt;, which will &lt;a href=&quot;../clone/trait.clone#tymethod.clone&quot;&gt;&lt;code&gt;clone&lt;/code&gt;&lt;/a&gt; the inner value when there are other pointers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e157ed1ad15cf2fe69af48041bac811535f09cc4" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;struct.rc#method.get_mut&quot;&gt;&lt;code&gt;get_mut&lt;/code&gt;&lt;/a&gt;, which is safe and does appropriate checks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8386281089e89688f659aff2a942789b811c16c4" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;struct.rc#method.get_mut&quot;&gt;&lt;code&gt;get_mut&lt;/code&gt;&lt;/a&gt;, which will fail rather than cloning.</source>
          <target state="translated">另请参见&lt;a href=&quot;struct.rc#method.get_mut&quot;&gt; &lt;code&gt;get_mut&lt;/code&gt; &lt;/a&gt;，它将失败而不是克隆。</target>
        </trans-unit>
        <trans-unit id="9e5afe237adccc0b69c648652691604f2a2ed0f8" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;struct.rc#method.make_mut&quot;&gt;&lt;code&gt;make_mut&lt;/code&gt;&lt;/a&gt;, which will &lt;a href=&quot;../clone/trait.clone#tymethod.clone&quot;&gt;&lt;code&gt;clone&lt;/code&gt;&lt;/a&gt; the inner value when it's shared.</source>
          <target state="translated">另请参见&lt;a href=&quot;struct.rc#method.make_mut&quot;&gt; &lt;code&gt;make_mut&lt;/code&gt; &lt;/a&gt;，它将在共享内部值时&lt;a href=&quot;../clone/trait.clone#tymethod.clone&quot;&gt; &lt;code&gt;clone&lt;/code&gt; &lt;/a&gt;内部值。</target>
        </trans-unit>
        <trans-unit id="6fce7aa52daeacb9a59530fc3f752b9c4992304b" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;struct.rc#method.make_mut&quot;&gt;&lt;code&gt;make_mut&lt;/code&gt;&lt;/a&gt;, which will &lt;a href=&quot;../clone/trait.clone#tymethod.clone&quot;&gt;&lt;code&gt;clone&lt;/code&gt;&lt;/a&gt; the inner value when there are other pointers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4790e0c59d5b307e081e9a6ad9818293be7ea77" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;trait.iterator#method.is_partitioned&quot;&gt;&lt;code&gt;is_partitioned()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.iterator#method.partition&quot;&gt;&lt;code&gt;partition()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1220fc1c761c30835988be551110c8601cd12a7b" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;trait.iterator#method.is_partitioned&quot;&gt;&lt;code&gt;is_partitioned()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.iterator#method.partition_in_place&quot;&gt;&lt;code&gt;partition_in_place()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58652a24603bb4cf696a8d8073610c55ebc28699" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;trait.iterator#method.partition&quot;&gt;&lt;code&gt;partition()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.iterator#method.partition_in_place&quot;&gt;&lt;code&gt;partition_in_place()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6bfb5e1e36a59642f91de9994e8882f47dda82d" translate="yes" xml:space="preserve">
          <source>See also https://doc.rust-lang.org/book/ch19-01-unsafe-rust.html</source>
          <target state="translated">另见https://doc.rust-lang.org/book/ch19-01-unsafe-rust.html</target>
        </trans-unit>
        <trans-unit id="e5c3885bb44ac46bcc02b68414219a472b58219b" translate="yes" xml:space="preserve">
          <source>See also https://github.com/rust-lang/rust/issues/14587</source>
          <target state="translated">另见https://github.com/rust-lang/rust/issues/14587</target>
        </trans-unit>
        <trans-unit id="2e31deb3f0c049ecb5ab021719a2037c51025a75" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;../reference/patterns#identifier-patterns&quot;&gt;Reference&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7138b78c6c8108f90e5b4d89b6d8f41411790c0" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;https://doc.rust-lang.org/unstable-book/language-features/lang-items.html#writing-an-executable-without-stdlib&quot;&gt;unstable book&lt;/a&gt;.</source>
          <target state="translated">另请参阅&lt;a href=&quot;https://doc.rust-lang.org/unstable-book/language-features/lang-items.html#writing-an-executable-without-stdlib&quot;&gt;不稳定的书&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="469b531cefd41910b714616e2a95d3f5a71440d2" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/1445-restrict-constants-in-patterns.md&quot;&gt;structural match RFC&lt;/a&gt;, and &lt;a href=&quot;https://github.com/rust-lang/rust/issues/63438&quot;&gt;issue 63438&lt;/a&gt; which motivated migrating from attribute-based design to this trait.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f215ba916abc6b1359b435f2c9df9a30b6cd333" translate="yes" xml:space="preserve">
          <source>See also the error E0303.</source>
          <target state="translated">另见错误E0303。</target>
        </trans-unit>
        <trans-unit id="975331600721122c8b6c490b24b5a3194e20ba87" translate="yes" xml:space="preserve">
          <source>See also the macro &lt;a href=&quot;macro.compile_error&quot;&gt;&lt;code&gt;compile_error!&lt;/code&gt;&lt;/a&gt;, for raising errors during compilation.</source>
          <target state="translated">另请参见宏&lt;a href=&quot;macro.compile_error&quot;&gt; &lt;code&gt;compile_error!&lt;/code&gt; &lt;/a&gt;，用于在编译过程中引发错误。</target>
        </trans-unit>
        <trans-unit id="0c38fa3060947548f6786fc74f5ae06ea0102e4b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;http://www.unicode.org/versions/&quot;&gt;http://www.unicode.org/versions/&lt;/a&gt;</source>
          <target state="translated">另请参阅：&lt;a href=&quot;http://www.unicode.org/versions/&quot;&gt;http&lt;/a&gt; : //www.unicode.org/versions/</target>
        </trans-unit>
        <trans-unit id="7d3586da26e662ce0cee6add8b03cdee21890ba7" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;trait.fromiterator&quot;&gt;&lt;code&gt;FromIterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另请参阅：&lt;a href=&quot;trait.fromiterator&quot;&gt; &lt;code&gt;FromIterator&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a62291d237eff3d21aea8354620568e8d491d695" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;trait.intoiterator&quot;&gt;&lt;code&gt;IntoIterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另请参见：&lt;a href=&quot;trait.intoiterator&quot;&gt; &lt;code&gt;IntoIterator&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e5c735003b4afea93576dfa21fae095c5550e2f8" translate="yes" xml:space="preserve">
          <source>See documentation of &lt;code&gt;&amp;lt;*const T&amp;gt;::guaranteed_eq&lt;/code&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb7d0716f7a647423cf33ba23a913e777d35cbdc" translate="yes" xml:space="preserve">
          <source>See documentation of &lt;code&gt;&amp;lt;*const T&amp;gt;::guaranteed_ne&lt;/code&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7050f67d05962668629c2f45e77e4c602adb84b9" translate="yes" xml:space="preserve">
          <source>See documentation of &lt;code&gt;&amp;lt;*const T&amp;gt;::offset_from&lt;/code&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27904624b02c857ef930c02ca7dd19adc5875459" translate="yes" xml:space="preserve">
          <source>See each trait for usage examples.</source>
          <target state="translated">请看每个特质的使用实例。</target>
        </trans-unit>
        <trans-unit id="8d65150a5b476931ea1fddc837309bb4a8972134" translate="yes" xml:space="preserve">
          <source>See issue #34202 for more details.</source>
          <target state="translated">详见34202期。</target>
        </trans-unit>
        <trans-unit id="50733ac9f0546ca231f65aef305264ab0f8e0aa2" translate="yes" xml:space="preserve">
          <source>See main &lt;code&gt;OsString&lt;/code&gt; documentation information about encoding.</source>
          <target state="translated">请参阅有关编码的主要 &lt;code&gt;OsString&lt;/code&gt; 文档信息。</target>
        </trans-unit>
        <trans-unit id="b9a0ec6eef1339731cf9450ebf1dd6a57f4a99a0" translate="yes" xml:space="preserve">
          <source>See more: https://doc.rust-lang.org/reference/attributes.html#conditional-compilation</source>
          <target state="translated">查看更多:https://doc.rust-lang.org/reference/attributes.html#conditional-compilation</target>
        </trans-unit>
        <trans-unit id="4b9681d4bfaf16cd0e0426811f6e48d3e33f0138" translate="yes" xml:space="preserve">
          <source>See the 'Use Declarations' section of the reference for more information on this topic:</source>
          <target state="translated">有关此主题的更多信息,请参见参考文献的 &quot;使用声明 &quot;部分。</target>
        </trans-unit>
        <trans-unit id="48c0f59e4834bc04f6a3d35a7d5545c776d4b7da" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#method.flowinfo&quot;&gt;&lt;code&gt;flowinfo&lt;/code&gt;&lt;/a&gt; method's documentation for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;#method.flowinfo&quot;&gt; &lt;code&gt;flowinfo&lt;/code&gt; &lt;/a&gt;方法的文档。</target>
        </trans-unit>
        <trans-unit id="9516800e65f62b51b6a56f0f866db795a30d8df4" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#method.scope_id&quot;&gt;&lt;code&gt;scope_id&lt;/code&gt;&lt;/a&gt; method's documentation for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;#method.scope_id&quot;&gt; &lt;code&gt;scope_id&lt;/code&gt; &lt;/a&gt;方法的文档。</target>
        </trans-unit>
        <trans-unit id="a428edd5265ba0f8ae9ca0508b6e3d5fd3a0007e" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../book/ch13-01-closures&quot;&gt;chapter on closures in &lt;em&gt;The Rust Programming Language&lt;/em&gt;&lt;/a&gt; for some more information on this topic.</source>
          <target state="translated">有关此主题的更多信息，请参见&lt;a href=&quot;../../book/ch13-01-closures&quot;&gt;&lt;em&gt;Rust编程语言&lt;/em&gt;&lt;/a&gt;中有关闭包&lt;em&gt;&lt;/em&gt;的章节。</target>
        </trans-unit>
        <trans-unit id="4ebee77c95f1b3a0acd252551468cb0fbd79423b" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../std/macro.is_x86_feature_detected&quot;&gt;&lt;code&gt;is_x86_feature_detected&lt;/code&gt;&lt;/a&gt; macro in the standard library for runtime feature detection on the x86 platforms.</source>
          <target state="translated">请参阅标准库中的&lt;a href=&quot;../../std/macro.is_x86_feature_detected&quot;&gt; &lt;code&gt;is_x86_feature_detected&lt;/code&gt; &lt;/a&gt;宏，以在x86平台上检测运行时功能。</target>
        </trans-unit>
        <trans-unit id="9e0260d159aa7cecd714bae0af0cf22f55ca5a37" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../conditional-compilation#target_feature&quot;&gt;&lt;code&gt;target_feature&lt;/code&gt; conditional compilation option&lt;/a&gt; for selectively enabling or disabling compilation of code based on compile-time settings. Note that this option is not affected by the &lt;code&gt;target_feature&lt;/code&gt; attribute, and is only driven by the features enabled for the entire crate.</source>
          <target state="translated">请参阅&lt;a href=&quot;../conditional-compilation#target_feature&quot;&gt; &lt;code&gt;target_feature&lt;/code&gt; 条件编译选项&lt;/a&gt;，以基于编译时设置有选择地启用或禁用代码编译。请注意，此选项不受 &lt;code&gt;target_feature&lt;/code&gt; 属性的影响，仅由为整个包装箱启用的功能驱动。</target>
        </trans-unit>
        <trans-unit id="280b9d7e3c39fd798193927226a61441295094de" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../index&quot;&gt;module-level documentation&lt;/a&gt; for more.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;../index&quot;&gt;模块级文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="77819e23e11d803138b5021b64e03c091f7525a1" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../macro.panic&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt; macro for more information about panicking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b763e7812e448276ee1852643c6a5ff61d991c5" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../rc/index#examples&quot;&gt;&lt;code&gt;rc&lt;/code&gt; documentation&lt;/a&gt; for more examples of reference counting in general.</source>
          <target state="translated">有关常规参考计数的更多示例，请参见&lt;a href=&quot;../rc/index#examples&quot;&gt; &lt;code&gt;rc&lt;/code&gt; 文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c4b52dc6e2535e5cc3a0f0f307a94d940fd5fe91" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../reference/items/traits&quot;&gt;Reference&lt;/a&gt; for a lot more information on traits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1b75dc50c9e49c37dd39f6ad7b34e114f3f904" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../reference/items/unions&quot;&gt;Reference&lt;/a&gt; for more informations on &lt;code&gt;union&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e1e1652e618f9735d83c1a69d91c8ab430c7459" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../reference/paths#super&quot;&gt;Reference&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ad2e6ac922c8cd4ab5021b357a2ac578edcf3b" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../struct.hashmap#method.raw_entry&quot;&gt;&lt;code&gt;HashMap::raw_entry&lt;/code&gt;&lt;/a&gt; docs for usage examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c4dca4a797a11d392e2f32cd11cb7582efe048" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../struct.hashmap#method.raw_entry_mut&quot;&gt;&lt;code&gt;HashMap::raw_entry_mut&lt;/code&gt;&lt;/a&gt; docs for usage examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e882d9ce880f6d4a62fbf0ebd5db5c16e8211f3" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;attributes/codegen#the-target_feature-attribute&quot;&gt;&lt;code&gt;target_feature&lt;/code&gt; attribute&lt;/a&gt; for more details on the available features. An additional feature of &lt;code&gt;crt-static&lt;/code&gt; is available to the &lt;code&gt;target_feature&lt;/code&gt; option to indicate that a &lt;a href=&quot;linkage#static-and-dynamic-c-runtimes&quot;&gt;static C runtime&lt;/a&gt; is available.</source>
          <target state="translated">有关可用功能的更多详细信息，请参见&lt;a href=&quot;attributes/codegen#the-target_feature-attribute&quot;&gt; &lt;code&gt;target_feature&lt;/code&gt; 属性&lt;/a&gt;。 &lt;code&gt;crt-static&lt;/code&gt; 的附加功能可用于 &lt;code&gt;target_feature&lt;/code&gt; 选项，以指示&lt;a href=&quot;linkage#static-and-dynamic-c-runtimes&quot;&gt;静态C运行时&lt;/a&gt;可用。</target>
        </trans-unit>
        <trans-unit id="52a72562ebfc962274868d479722902891602de5" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;book/ch19-01-unsafe-rust&quot;&gt;unsafe section&lt;/a&gt; of the Book for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c007695fde0760a7ebeb4cd2fa6b3747cc0c62f" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;fn.discriminant&quot;&gt;&lt;code&gt;discriminant&lt;/code&gt;&lt;/a&gt; function in this module for more information.</source>
          <target state="translated">有关更多信息，请参&lt;a href=&quot;fn.discriminant&quot;&gt; &lt;code&gt;discriminant&lt;/code&gt; &lt;/a&gt;模块中的判别函数。</target>
        </trans-unit>
        <trans-unit id="d9d16f809cee6c899e4e1a7481ca3b74db7327fc" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;fn.park&quot;&gt;park documentation&lt;/a&gt; for more detail.</source>
          <target state="translated">有关更多详细信息，请参阅&lt;a href=&quot;fn.park&quot;&gt;公园文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c12c05e5acf344ed5eaf6e4291006a35cd23aed8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;fn.park&quot;&gt;park documentation&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参阅&lt;a href=&quot;fn.park&quot;&gt;公园文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="197ac0dc19929b8b8c3c7fbc7a7e6bf116ce71c7" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://doc.rust-lang.org/nomicon/index.html&quot;&gt;Rustnomicon&lt;/a&gt; and the &lt;a href=&quot;../reference/unsafety&quot;&gt;Reference&lt;/a&gt; for more informations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11109860147d417370969ceb98561a0db14c0fff" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0982-dst-coercion.md&quot;&gt;DST coercion RFC&lt;/a&gt; and &lt;a href=&quot;https://doc.rust-lang.org/nomicon/coercions.html&quot;&gt;the nomicon entry on coercion&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0982-dst-coercion.md&quot;&gt;DST强制RFC&lt;/a&gt;和&lt;a href=&quot;https://doc.rust-lang.org/nomicon/coercions.html&quot;&gt;有关强制的nomicon条目&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="31bd11ecb52f9fd7f2cc0aa62a69119b33f72284" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;index&quot;&gt;&lt;code&gt;std::result&lt;/code&gt;&lt;/a&gt; module documentation for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;index&quot;&gt; &lt;code&gt;std::result&lt;/code&gt; &lt;/a&gt;模块文档。</target>
        </trans-unit>
        <trans-unit id="f7ea19560d84b3ef4ffce35f6eba84e5855458c0" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;index&quot;&gt;module documentation&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2289374edb613ed6991996263eed3764bf58b17" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;index&quot;&gt;module-level documentation&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;index&quot;&gt;模块级文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ad5d942f0c74c3b958b3c6c1b82586522996d2cc" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;index&quot;&gt;module-level documentation&lt;/a&gt; for more.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;index&quot;&gt;模块级文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ea5ada2477a5b61be620058a92832da074e391de" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;index#conversions&quot;&gt;module's toplevel documentation about conversions&lt;/a&gt; for a discussion on the traits which &lt;code&gt;OsStr&lt;/code&gt; implements for &lt;a href=&quot;index#conversions&quot;&gt;conversions&lt;/a&gt; from/to native representations.</source>
          <target state="translated">有关 &lt;code&gt;OsStr&lt;/code&gt; 为实现从/到本机表示形式的&lt;a href=&quot;index#conversions&quot;&gt;转换&lt;/a&gt;实现的特征的讨论，请参见&lt;a href=&quot;index#conversions&quot;&gt;有关转换&lt;/a&gt;的模块顶级文档。</target>
        </trans-unit>
        <trans-unit id="633ea9d8c810b765d7660d1828dae99092c8a390" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;index#conversions&quot;&gt;module's toplevel documentation about conversions&lt;/a&gt; for a discussion on the traits which &lt;code&gt;OsString&lt;/code&gt; implements for &lt;a href=&quot;index#conversions&quot;&gt;conversions&lt;/a&gt; from/to native representations.</source>
          <target state="translated">有关 &lt;code&gt;OsString&lt;/code&gt; 为实现从/到本机表示形式的&lt;a href=&quot;index#conversions&quot;&gt;转换&lt;/a&gt;实现的特征的讨论，请参见&lt;a href=&quot;index#conversions&quot;&gt;模块有关转换的顶级文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d65bd0a3f006116d0578efbc8912be2a78be3142" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;reference/items/enumerations#custom-discriminant-values-for-field-less-enumerations&quot;&gt;Custom Discriminants&lt;/a&gt; section of the Reference for more information about setting custom integer types on fieldless enums using the &lt;a href=&quot;reference/type-layout#reprc-enums&quot;&gt;&lt;code&gt;repr&lt;/code&gt; attribute&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93458c809411bab874ed196d2fcc8efa88d1281f" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;reference/items/use-declarations&quot;&gt;Use Declarations&lt;/a&gt; section of the reference for more information on this topic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94406c436f7b99be56720cba09f1dbaa95c2d998" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;reference/statements#declaration-statements&quot;&gt;Declaration Statements&lt;/a&gt; section of the reference for more information about what constitutes an item declaration and what does not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3b336fe1366fd2448cd1418c2e1b02c0061749" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;struct.hashmap#method.raw_entry&quot;&gt;&lt;code&gt;HashMap::raw_entry&lt;/code&gt;&lt;/a&gt; docs for usage examples.</source>
          <target state="translated">有关用法示例，请参见&lt;a href=&quot;struct.hashmap#method.raw_entry&quot;&gt; &lt;code&gt;HashMap::raw_entry&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="0c4b480939fa0c71caf6300474692f45d9200737" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;struct.hashmap#method.raw_entry_mut&quot;&gt;&lt;code&gt;HashMap::raw_entry_mut&lt;/code&gt;&lt;/a&gt; docs for usage examples.</source>
          <target state="translated">有关用法示例，请参见&lt;a href=&quot;struct.hashmap#method.raw_entry_mut&quot;&gt; &lt;code&gt;HashMap::raw_entry_mut&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="c3d56a3f633834df5922d7bf3dc22a5c79b32390" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;struct.openoptions#method.new&quot;&gt;&lt;code&gt;OpenOptions::new&lt;/code&gt;&lt;/a&gt; function for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c3c7a1ca1e3b7e67385319fd0c1bdf6f7a99a2" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;struct.openoptions#method.open&quot;&gt;&lt;code&gt;OpenOptions::open&lt;/code&gt;&lt;/a&gt; function for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;struct.openoptions#method.open&quot;&gt; &lt;code&gt;OpenOptions::open&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="73c34259348cfb6ad56df7138ee496a1e7625262" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;struct.openoptions#method.open&quot;&gt;&lt;code&gt;OpenOptions::open&lt;/code&gt;&lt;/a&gt; method for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;struct.openoptions#method.open&quot;&gt; &lt;code&gt;OpenOptions::open&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="8cda6ebbfff7845946643b600b627a3b6b0d17c2" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;union.maybeuninit&quot;&gt;type-level documentation&lt;/a&gt; for some examples.</source>
          <target state="translated">有关某些示例，请参见&lt;a href=&quot;union.maybeuninit&quot;&gt;类型级别的文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="69de7fd488c1bed770c455c5d651418fbdd9cd29" translate="yes" xml:space="preserve">
          <source>See the Declaration Statements section of the reference for more information about what constitutes an Item declaration and what does not:</source>
          <target state="translated">关于什么构成项目声明和什么不构成项目声明,请参见参考资料中的声明声明部分。</target>
        </trans-unit>
        <trans-unit id="a6d66beca44a312c1d7ad072d4f4f25d4fa81573" translate="yes" xml:space="preserve">
          <source>See the docs for &lt;a href=&quot;struct.fromutf8error&quot;&gt;&lt;code&gt;FromUtf8Error&lt;/code&gt;&lt;/a&gt; for more details on what you can do with this error.</source>
          <target state="translated">有关此错误的详细信息，请参阅&lt;a href=&quot;struct.fromutf8error&quot;&gt; &lt;code&gt;FromUtf8Error&lt;/code&gt; &lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="582d71b0a7e1ec7d8d2e366b70d8107c5784ab5a" translate="yes" xml:space="preserve">
          <source>See the docs for &lt;a href=&quot;struct.utf8error&quot;&gt;&lt;code&gt;Utf8Error&lt;/code&gt;&lt;/a&gt; for more details on the kinds of errors that can be returned.</source>
          <target state="translated">有关可返回的错误类型的更多详细信息，请参阅docs中的&lt;a href=&quot;struct.utf8error&quot;&gt; &lt;code&gt;Utf8Error&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78b065d4cc11abcb243097f0f63add7a8b83feaa" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;#method.len_utf8&quot;&gt;&lt;code&gt;len_utf8&lt;/code&gt;&lt;/a&gt; for more explanation of this concept. This function is a mirror, but for UTF-16 instead of UTF-8.</source>
          <target state="translated">有关此概念的更多说明，请参见&lt;a href=&quot;#method.len_utf8&quot;&gt; &lt;code&gt;len_utf8&lt;/code&gt; &lt;/a&gt;的文档。此功能是一个镜像，但适用于UTF-16而不是UTF-8。</target>
        </trans-unit>
        <trans-unit id="0a60a3e0a7b14f3e8f9fdc56a48c52cdff845cc9" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;keyword.true&quot;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56fbf162180261886cdc02f3ec4ac93ec3f37b1b" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;struct.ipv4addr#method.is_documentation&quot;&gt;&lt;code&gt;Ipv4Addr::is_documentation()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.ipv6addr#method.is_documentation&quot;&gt;&lt;code&gt;Ipv6Addr::is_documentation()&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd25191940193341f958db537c36b0b248a6882" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;struct.ipv4addr#method.is_documentation&quot;&gt;&lt;code&gt;Ipv4Addr::is_documentation&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.ipv6addr#method.is_documentation&quot;&gt;&lt;code&gt;Ipv6Addr::is_documentation&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;struct.ipv4addr#method.is_documentation&quot;&gt; &lt;code&gt;Ipv4Addr::is_documentation&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;struct.ipv6addr#method.is_documentation&quot;&gt; &lt;code&gt;Ipv6Addr::is_documentation&lt;/code&gt; &lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="8b22d592686e223f3559f9bd6d20a9d26a5cd499" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;struct.ipv4addr#method.is_global&quot;&gt;&lt;code&gt;Ipv4Addr::is_global()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.ipv6addr#method.is_global&quot;&gt;&lt;code&gt;Ipv6Addr::is_global()&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed1f45214f9fb1ab65b3d9c5862ba392c986f08" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;struct.ipv4addr#method.is_global&quot;&gt;&lt;code&gt;Ipv4Addr::is_global&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.ipv6addr#method.is_global&quot;&gt;&lt;code&gt;Ipv6Addr::is_global&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;struct.ipv4addr#method.is_global&quot;&gt; &lt;code&gt;Ipv4Addr::is_global&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;struct.ipv6addr#method.is_global&quot;&gt; &lt;code&gt;Ipv6Addr::is_global&lt;/code&gt; &lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="4abcb8ec4030b866ec2f2e05c89a02e408e40ca6" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;struct.ipv4addr#method.is_loopback&quot;&gt;&lt;code&gt;Ipv4Addr::is_loopback()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.ipv6addr#method.is_loopback&quot;&gt;&lt;code&gt;Ipv6Addr::is_loopback()&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae56b84e07d1f99c8baf18c931552fe65fce5926" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;struct.ipv4addr#method.is_loopback&quot;&gt;&lt;code&gt;Ipv4Addr::is_loopback&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.ipv6addr#method.is_loopback&quot;&gt;&lt;code&gt;Ipv6Addr::is_loopback&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;struct.ipv4addr#method.is_loopback&quot;&gt; &lt;code&gt;Ipv4Addr::is_loopback&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;struct.ipv6addr#method.is_loopback&quot;&gt; &lt;code&gt;Ipv6Addr::is_loopback&lt;/code&gt; &lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="a91ec69c264104dc11ec59a2b9754810045ae2a3" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;struct.ipv4addr#method.is_multicast&quot;&gt;&lt;code&gt;Ipv4Addr::is_multicast()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.ipv6addr#method.is_multicast&quot;&gt;&lt;code&gt;Ipv6Addr::is_multicast()&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3615519e1cfb28c060666f204c8ad03a417dc12c" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;struct.ipv4addr#method.is_multicast&quot;&gt;&lt;code&gt;Ipv4Addr::is_multicast&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.ipv6addr#method.is_multicast&quot;&gt;&lt;code&gt;Ipv6Addr::is_multicast&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;struct.ipv4addr#method.is_multicast&quot;&gt; &lt;code&gt;Ipv4Addr::is_multicast&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;struct.ipv6addr#method.is_multicast&quot;&gt; &lt;code&gt;Ipv6Addr::is_multicast&lt;/code&gt; &lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="95c4155faf59b7a87a6196d78213a5a153edcab9" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;struct.ipv4addr#method.is_unspecified&quot;&gt;&lt;code&gt;Ipv4Addr::is_unspecified()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.ipv6addr#method.is_unspecified&quot;&gt;&lt;code&gt;Ipv6Addr::is_unspecified()&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7665c66fb62a1dc84142abaebd233d604592f0" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;struct.ipv4addr#method.is_unspecified&quot;&gt;&lt;code&gt;Ipv4Addr::is_unspecified&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.ipv6addr#method.is_unspecified&quot;&gt;&lt;code&gt;Ipv6Addr::is_unspecified&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;struct.ipv4addr#method.is_unspecified&quot;&gt; &lt;code&gt;Ipv4Addr::is_unspecified&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;struct.ipv6addr#method.is_unspecified&quot;&gt; &lt;code&gt;Ipv6Addr::is_unspecified&lt;/code&gt; &lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="59d420255aede65deb10ef2b925ffdbbeb151830" translate="yes" xml:space="preserve">
          <source>See the documentation for each trait for an example implementation.</source>
          <target state="translated">请参阅每个特质的文档,了解其实现示例。</target>
        </trans-unit>
        <trans-unit id="74b94fdb468ed97656de488b7ee63d2166bba4d1" translate="yes" xml:space="preserve">
          <source>See the documentation of &lt;a href=&quot;../slice/fn.from_raw_parts&quot;&gt;&lt;code&gt;from_raw_parts&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;../slice/fn.from_raw_parts&quot;&gt; &lt;code&gt;from_raw_parts&lt;/code&gt; &lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="c143ad09c3e3a3086ceea144028fb830f9f60b4d" translate="yes" xml:space="preserve">
          <source>See the documentation of &lt;a href=&quot;fn.from_raw_parts&quot;&gt;&lt;code&gt;from_raw_parts&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;fn.from_raw_parts&quot;&gt; &lt;code&gt;from_raw_parts&lt;/code&gt; &lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="d242610d9fffbf91392642c0c4e693e44a999089" translate="yes" xml:space="preserve">
          <source>See the documentation of &lt;a href=&quot;fn.slice_from_raw_parts&quot;&gt;&lt;code&gt;slice_from_raw_parts&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a001e86ce4bda930fd7737216e422bb6c5180d5" translate="yes" xml:space="preserve">
          <source>See the immutable version, &lt;a href=&quot;fn.from_utf8_unchecked&quot;&gt;&lt;code&gt;from_utf8_unchecked()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9630d5c32c08ed5f2adfedea80bdb2f04c78522" translate="yes" xml:space="preserve">
          <source>See the immutable version, &lt;a href=&quot;fn.from_utf8_unchecked&quot;&gt;&lt;code&gt;from_utf8_unchecked()&lt;/code&gt;&lt;/a&gt;, for more information.</source>
          <target state="translated">有关更多信息，请参见不可变版本&lt;a href=&quot;fn.from_utf8_unchecked&quot;&gt; &lt;code&gt;from_utf8_unchecked()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a684821bc55021a042524a8b4fe83274eada7c49" translate="yes" xml:space="preserve">
          <source>See the module docmentation for an example.</source>
          <target state="translated">请看模块文档中的例子。</target>
        </trans-unit>
        <trans-unit id="1785fd0d089789d4e6dda7b5b9550a9c2659d685" translate="yes" xml:space="preserve">
          <source>See the module documentation for an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66067589fef60b45adfcdd0be56cbd47ceb31861" translate="yes" xml:space="preserve">
          <source>See the safe version, &lt;a href=&quot;fn.from_utf8&quot;&gt;&lt;code&gt;from_utf8&lt;/code&gt;&lt;/a&gt;, for more information.</source>
          <target state="translated">有关更多信息，请参见安全版本&lt;a href=&quot;fn.from_utf8&quot;&gt; &lt;code&gt;from_utf8&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02797524d0407212d3c13196d668a1ec0b584c95" translate="yes" xml:space="preserve">
          <source>See the safe version, &lt;a href=&quot;struct.string#method.from_utf8&quot;&gt;&lt;code&gt;from_utf8&lt;/code&gt;&lt;/a&gt;, for more details.</source>
          <target state="translated">有关更多详细信息，请参见安全版本&lt;a href=&quot;struct.string#method.from_utf8&quot;&gt; &lt;code&gt;from_utf8&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5a380b25e8aec1bf4c0bb052091f04bb7475ba5d" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;https://131002.net/siphash/&quot;&gt;https://131002.net/siphash/&lt;/a&gt;</source>
          <target state="translated">参见：&lt;a href=&quot;https://131002.net/siphash/&quot;&gt;https&lt;/a&gt; : //131002.net/siphash/</target>
        </trans-unit>
        <trans-unit id="1ad08a39c58306085b282bedc81d14f73f8f8804" translate="yes" xml:space="preserve">
          <source>Seek</source>
          <target state="translated">Seek</target>
        </trans-unit>
        <trans-unit id="8cad73bf2364e24f55074dbda1f20524c7aa442a" translate="yes" xml:space="preserve">
          <source>Seek and BufRead</source>
          <target state="translated">搜索和阅读</target>
        </trans-unit>
        <trans-unit id="fe3553957a3c1946b9d7133bb39545773c745764" translate="yes" xml:space="preserve">
          <source>Seek to an offset, in bytes, in a stream.</source>
          <target state="translated">寻找流中的偏移量,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="924445c1672d1d6775d6c8f71c0bfeb6be4cc6c3" translate="yes" xml:space="preserve">
          <source>Seek to an offset, in bytes, in a stream. &lt;a href=&quot;../io/trait.seek#tymethod.seek&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">在流中寻找以字节为单位的偏移量。&lt;a href=&quot;../io/trait.seek#tymethod.seek&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1852a8e7cc8adbe4f70045cf88aac4234a34f29c" translate="yes" xml:space="preserve">
          <source>Seek to an offset, in bytes, in a stream. &lt;a href=&quot;io/trait.seek#tymethod.seek&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">在流中寻找以字节为单位的偏移量。&lt;a href=&quot;io/trait.seek#tymethod.seek&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78bc551723e7ee57fbfdb669abf732a9f2963f45" translate="yes" xml:space="preserve">
          <source>Seek to an offset, in bytes, in a stream. &lt;a href=&quot;trait.seek#tymethod.seek&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">在流中寻找以字节为单位的偏移量。&lt;a href=&quot;trait.seek#tymethod.seek&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3a1aaff6368ce2d4bcde1b13b8d780900df19ec" translate="yes" xml:space="preserve">
          <source>Seek to an offset, in bytes, in the underlying reader.</source>
          <target state="translated">在底层读卡器中寻找一个偏移量,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="782f434ab05191ad8dcf37f6402e80f067899a8f" translate="yes" xml:space="preserve">
          <source>Seek to the offset, in bytes, in the underlying writer.</source>
          <target state="translated">在底层写入器中寻找偏移量,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="ec171d003aaa6719b15e05123a04ab9032c9c7b3" translate="yes" xml:space="preserve">
          <source>Seek::seek</source>
          <target state="translated">Seek::seek</target>
        </trans-unit>
        <trans-unit id="1474abe7d1382971659ad860575c56839881b1fc" translate="yes" xml:space="preserve">
          <source>Seek::stream_len</source>
          <target state="translated">Seek::stream_len</target>
        </trans-unit>
        <trans-unit id="44ac8a5eab63412cc08c36851544baee81d6b123" translate="yes" xml:space="preserve">
          <source>Seek::stream_position</source>
          <target state="translated">Seek::stream_position</target>
        </trans-unit>
        <trans-unit id="fd510396cd5c0eab5e11482493ad588e4024cb70" translate="yes" xml:space="preserve">
          <source>SeekFrom</source>
          <target state="translated">SeekFrom</target>
        </trans-unit>
        <trans-unit id="427eb95bd1cd22558d933079e29c00dd37d72d4a" translate="yes" xml:space="preserve">
          <source>SeekFrom::borrow</source>
          <target state="translated">SeekFrom::borrow</target>
        </trans-unit>
        <trans-unit id="7ad79c009f36c63ae456cd688e9bf99703b65ceb" translate="yes" xml:space="preserve">
          <source>SeekFrom::borrow_mut</source>
          <target state="translated">SeekFrom::borrow_mut</target>
        </trans-unit>
        <trans-unit id="397dd4c0b4ce83e85eb5e83ad6cbd7e1291a52e2" translate="yes" xml:space="preserve">
          <source>SeekFrom::clone</source>
          <target state="translated">SeekFrom::clone</target>
        </trans-unit>
        <trans-unit id="c59e5f54f77f9b2a10aeabaa613f148a9c710494" translate="yes" xml:space="preserve">
          <source>SeekFrom::clone_from</source>
          <target state="translated">SeekFrom::clone_from</target>
        </trans-unit>
        <trans-unit id="37b1fe523d77193ab2ea28520f4816544f0379ec" translate="yes" xml:space="preserve">
          <source>SeekFrom::clone_into</source>
          <target state="translated">SeekFrom::clone_into</target>
        </trans-unit>
        <trans-unit id="75500845d36a29fe6122926b364563db80213be2" translate="yes" xml:space="preserve">
          <source>SeekFrom::eq</source>
          <target state="translated">SeekFrom::eq</target>
        </trans-unit>
        <trans-unit id="872a5d7d22f5f8275059aebcda452b8ca718f73b" translate="yes" xml:space="preserve">
          <source>SeekFrom::fmt</source>
          <target state="translated">SeekFrom::fmt</target>
        </trans-unit>
        <trans-unit id="182e03eead0de8ff70d9ea28f7c3f82a0f61861e" translate="yes" xml:space="preserve">
          <source>SeekFrom::from</source>
          <target state="translated">SeekFrom::from</target>
        </trans-unit>
        <trans-unit id="1f8cf9e3cc706bab03d7a56e94734740e227026d" translate="yes" xml:space="preserve">
          <source>SeekFrom::into</source>
          <target state="translated">SeekFrom::into</target>
        </trans-unit>
        <trans-unit id="8875d1fe13daed6b50b4b4189d74089d5d2f3a11" translate="yes" xml:space="preserve">
          <source>SeekFrom::ne</source>
          <target state="translated">SeekFrom::ne</target>
        </trans-unit>
        <trans-unit id="8ffdcc93187a1610d8bd75f706e4173ad5e1734d" translate="yes" xml:space="preserve">
          <source>SeekFrom::to_owned</source>
          <target state="translated">SeekFrom::to_owned</target>
        </trans-unit>
        <trans-unit id="a73a30ab7b54ddb1c73905159f71899b77c42ac6" translate="yes" xml:space="preserve">
          <source>SeekFrom::try_from</source>
          <target state="translated">SeekFrom::try_from</target>
        </trans-unit>
        <trans-unit id="fb695942bfd603a2603f4be02afdfa21f3f72031" translate="yes" xml:space="preserve">
          <source>SeekFrom::try_into</source>
          <target state="translated">SeekFrom::try_into</target>
        </trans-unit>
        <trans-unit id="d971512c7a548ec6b3ef2e746ac5d96e04b6fbd2" translate="yes" xml:space="preserve">
          <source>SeekFrom::type_id</source>
          <target state="translated">SeekFrom::type_id</target>
        </trans-unit>
        <trans-unit id="e1c0853e796113273bb7f9ad59dda032d01942b5" translate="yes" xml:space="preserve">
          <source>Seeking always discards the internal buffer, even if the seek position would otherwise fall within it. This guarantees that calling &lt;a href=&quot;struct.bufreader#method.into_inner&quot;&gt;&lt;code&gt;BufReader::into_inner()&lt;/code&gt;&lt;/a&gt; immediately after a seek yields the underlying reader at the same position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94fa27c4c8f72ef70c9f53dee8d71a248bfe38b" translate="yes" xml:space="preserve">
          <source>Seeking always discards the internal buffer, even if the seek position would otherwise fall within it. This guarantees that calling &lt;code&gt;.into_inner()&lt;/code&gt; immediately after a seek yields the underlying reader at the same position.</source>
          <target state="translated">搜寻总是会丢弃内部缓冲区，即使寻找位置本来会落在内部缓冲区内。这保证了在查找之后立即调用 &lt;code&gt;.into_inner()&lt;/code&gt; 会在相同位置产生基础阅读器。</target>
        </trans-unit>
        <trans-unit id="31109716dc13ddb7d5f6f990170f4796d7e99c79" translate="yes" xml:space="preserve">
          <source>Seeking always writes out the internal buffer before seeking.</source>
          <target state="translated">Seeking总是在寻求前写出内部缓冲区。</target>
        </trans-unit>
        <trans-unit id="924f937be2634763f41633daba31264f87f5680d" translate="yes" xml:space="preserve">
          <source>Seeking to a negative offset is considered an error.</source>
          <target state="translated">寻求负偏移被认为是错误的。</target>
        </trans-unit>
        <trans-unit id="2629798180cc3f6ffd83624c6b2bf1abe5169dc8" translate="yes" xml:space="preserve">
          <source>Seeks relative to the current position. If the new position lies within the buffer, the buffer will not be flushed, allowing for more efficient seeks. This method does not return the location of the underlying reader, so the caller must track this information themselves if it is required.</source>
          <target state="translated">相对于当前位置的搜索。如果新的位置位于缓冲区内,缓冲区将不会被刷新,允许更高效的查找。本方法不返回底层读卡器的位置,所以如果需要的话,调用者必须自己追踪这些信息。</target>
        </trans-unit>
        <trans-unit id="d94b8b9292d869d5680654530dc8da6a48edacc9" translate="yes" xml:space="preserve">
          <source>Seeks to a given position and reads a number of bytes.</source>
          <target state="translated">寻找到一个给定的位置并读取若干字节。</target>
        </trans-unit>
        <trans-unit id="7e1ba3cab33940d33de9b4f51e9bd8cb4d9b7632" translate="yes" xml:space="preserve">
          <source>Seeks to a given position and reads a number of bytes. &lt;a href=&quot;../os/windows/fs/trait.fileext#tymethod.seek_read&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">搜寻到给定位置并读取多个字节。&lt;a href=&quot;../os/windows/fs/trait.fileext#tymethod.seek_read&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4bafebf79da45b92d8f1c9f8c383607f5183cb6d" translate="yes" xml:space="preserve">
          <source>Seeks to a given position and writes a number of bytes.</source>
          <target state="translated">寻找到一个给定的位置并写入若干字节。</target>
        </trans-unit>
        <trans-unit id="bd6c2ecd4a4fa9835635d0bd224cad8f4129d5d2" translate="yes" xml:space="preserve">
          <source>Seeks to a given position and writes a number of bytes. &lt;a href=&quot;../os/windows/fs/trait.fileext#tymethod.seek_write&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">寻求给定位置并写入多个字节。&lt;a href=&quot;../os/windows/fs/trait.fileext#tymethod.seek_write&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e102517374a81d4e2f92c28774a0b02079ebacf4" translate="yes" xml:space="preserve">
          <source>Self</source>
          <target state="translated">Self</target>
        </trans-unit>
        <trans-unit id="fe03c3515833357d89e7094df960e757cae3bc1d" translate="yes" xml:space="preserve">
          <source>Semantics</source>
          <target state="translated">Semantics</target>
        </trans-unit>
        <trans-unit id="3210d8feaecd3e3c6262e3c74f346be6eadfe55f" translate="yes" xml:space="preserve">
          <source>Semi</source>
          <target state="translated">Semi</target>
        </trans-unit>
        <trans-unit id="9bc2575c3930437e80555f78757b783c842e8e66" translate="yes" xml:space="preserve">
          <source>Send</source>
          <target state="translated">Send</target>
        </trans-unit>
        <trans-unit id="54779295321c6e0a5194c3ef66c341fba0d404fb" translate="yes" xml:space="preserve">
          <source>SendError</source>
          <target state="translated">SendError</target>
        </trans-unit>
        <trans-unit id="17b874d289117b1353bc5080960074585aed4227" translate="yes" xml:space="preserve">
          <source>Sender</source>
          <target state="translated">Sender</target>
        </trans-unit>
        <trans-unit id="4e0a5e08d9f9bcae02371f3ba106ea3edcb24c9b" translate="yes" xml:space="preserve">
          <source>Sending Multiple Values and Seeing the Receiver Waiting</source>
          <target state="translated">发送多个值并看到接收方在等待。</target>
        </trans-unit>
        <trans-unit id="046ad62eccd114c9444fd7a6738d8f920b7d7369" translate="yes" xml:space="preserve">
          <source>Sending Requests to Threads via Channels</source>
          <target state="translated">通过通道向线程发送请求</target>
        </trans-unit>
        <trans-unit id="86838eeb9351f7893a6219c56be5576aec30fb22" translate="yes" xml:space="preserve">
          <source>Sends a value on this synchronous channel.</source>
          <target state="translated">在这个同步通道上发送一个值。</target>
        </trans-unit>
        <trans-unit id="875987b19366de0d72af6e8dc1274dcc3d9ce725" translate="yes" xml:space="preserve">
          <source>Sends data on the socket to the given address. On success, returns the number of bytes written.</source>
          <target state="translated">将套接字上的数据发送到给定地址。发送成功后,返回写入的字节数。</target>
        </trans-unit>
        <trans-unit id="30b360cb8d4554ed38340e6613a64788ed8447f1" translate="yes" xml:space="preserve">
          <source>Sends data on the socket to the remote address to which it is connected.</source>
          <target state="translated">将套接字上的数据发送到它所连接的远程地址。</target>
        </trans-unit>
        <trans-unit id="d73fae814c13c0f3a1cfe4339fec819242f46820" translate="yes" xml:space="preserve">
          <source>Sends data on the socket to the socket's peer.</source>
          <target state="translated">将套接字上的数据发送给套接字的对等体。</target>
        </trans-unit>
        <trans-unit id="f7ace41157173d82b5b14c021d27f646fa80ec18" translate="yes" xml:space="preserve">
          <source>Sends data on the socket to the specified address.</source>
          <target state="translated">将套接字上的数据发送到指定的地址。</target>
        </trans-unit>
        <trans-unit id="bb2ebdecf0afbd58ee653fe08097784770f3ad88" translate="yes" xml:space="preserve">
          <source>Separating Modules into Different Files</source>
          <target state="translated">将模块分离到不同的文件中</target>
        </trans-unit>
        <trans-unit id="eb68bb453a78e471b661f27a57ad46a70b7a8f79" translate="yes" xml:space="preserve">
          <source>Separation of Concerns for Binary Projects</source>
          <target state="translated">二元项目的关注点分离</target>
        </trans-unit>
        <trans-unit id="0333ded9cb11951aa9ed251144f6cd1c67d32585" translate="yes" xml:space="preserve">
          <source>Separators at the start or end of a string are neighbored by empty strings.</source>
          <target state="translated">字符串开头或结尾的分隔符与空字符串相邻。</target>
        </trans-unit>
        <trans-unit id="74f3eda32fc0025d1630d3e705ef4629c5affc16" translate="yes" xml:space="preserve">
          <source>Sequence types (&lt;a href=&quot;types/tuple&quot;&gt;tuple&lt;/a&gt;, &lt;a href=&quot;types/array&quot;&gt;array&lt;/a&gt;, &lt;a href=&quot;types/slice&quot;&gt;slice&lt;/a&gt;).</source>
          <target state="translated">序列类型（&lt;a href=&quot;types/tuple&quot;&gt;元组&lt;/a&gt;，&lt;a href=&quot;types/array&quot;&gt;数组&lt;/a&gt;，&lt;a href=&quot;types/slice&quot;&gt;切片&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="9a20643d87a8a338495f31251b121b1741b7ff7c" translate="yes" xml:space="preserve">
          <source>Sequence types:</source>
          <target state="translated">序列类型:</target>
        </trans-unit>
        <trans-unit id="b5fb636023abb67d347041d398442118f79ea091" translate="yes" xml:space="preserve">
          <source>Sequences</source>
          <target state="translated">Sequences</target>
        </trans-unit>
        <trans-unit id="5b018ff2e321cba1df1dcab575212a7a3b8da5b5" translate="yes" xml:space="preserve">
          <source>Sequences: &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.linkedlist&quot;&gt;&lt;code&gt;LinkedList&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">序列：&lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;struct.vecdeque&quot;&gt; &lt;code&gt;VecDeque&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;struct.linkedlist&quot;&gt; &lt;code&gt;LinkedList&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="832d2c638f42cd0e241118f709349a347318c42f" translate="yes" xml:space="preserve">
          <source>Sequentially consistent - sequentially consistent operations are guaranteed to happen in order. This is the standard mode for working with atomic types and is equivalent to Java's &lt;code&gt;volatile&lt;/code&gt;.</source>
          <target state="translated">顺序一致-确保顺序一致的操作按顺序进行。这是使用原子类型的标准模式，等效于Java的 &lt;code&gt;volatile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08daf45ab10abcae6be0fff2b6976fdc73bb76f9" translate="yes" xml:space="preserve">
          <source>Set Configuration Options</source>
          <target state="translated">设置配置选项</target>
        </trans-unit>
        <trans-unit id="a8a82e1c25a61b0b0fbad9a354be0abbfc1d27e6" translate="yes" xml:space="preserve">
          <source>Set executable argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc5cb6c706f4bd3a32f834ada1c49f669aabdb3" translate="yes" xml:space="preserve">
          <source>Set executable argument &lt;a href=&quot;../os/unix/process/trait.commandext#tymethod.arg0&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae96399e29b7b956dede96d462f45495b13a4b7" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;RUST_MIN_STACK&lt;/code&gt; environment variable to an integer representing the desired stack size (in bytes). Note that setting &lt;a href=&quot;struct.builder#method.stack_size&quot;&gt;&lt;code&gt;Builder::stack_size&lt;/code&gt;&lt;/a&gt; will override this.</source>
          <target state="translated">将 &lt;code&gt;RUST_MIN_STACK&lt;/code&gt; 环境变量设置为代表所需堆栈大小（以字节为单位）的整数。请注意，设置&lt;a href=&quot;struct.builder#method.stack_size&quot;&gt; &lt;code&gt;Builder::stack_size&lt;/code&gt; &lt;/a&gt;将覆盖此设置。</target>
        </trans-unit>
        <trans-unit id="51dd44e4b93ed157267953067415bbd676cce642" translate="yes" xml:space="preserve">
          <source>Set the field public:</source>
          <target state="translated">设置该字段为公共字段。</target>
        </trans-unit>
        <trans-unit id="0cae9f2a068b65d784d7ebde6b0fe925aa8902e7" translate="yes" xml:space="preserve">
          <source>Set the first process argument, &lt;code&gt;argv[0]&lt;/code&gt;, to something other than the default executable path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="404b96569bfb0a8f7adb51901316c79fcc86c80c" translate="yes" xml:space="preserve">
          <source>Set up any needed data or state.</source>
          <target state="translated">设置任何需要的数据或状态。</target>
        </trans-unit>
        <trans-unit id="22d71ea734ba02339845986ef6707923d879c259" translate="yes" xml:space="preserve">
          <source>Set when the crate being compiled is being compiled with the &lt;code&gt;proc_macro&lt;/code&gt;&lt;a href=&quot;linkage&quot;&gt;crate type&lt;/a&gt;.</source>
          <target state="translated">在使用 &lt;code&gt;proc_macro&lt;/code&gt; &lt;a href=&quot;linkage&quot;&gt;crate类型&lt;/a&gt;编译正在编译的板条箱时设置。</target>
        </trans-unit>
        <trans-unit id="056ba70bd63e725f8843ebaf5c09105c3eab8106" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes of memory starting at &lt;code&gt;dst&lt;/code&gt; to &lt;code&gt;val&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; 字节内存从 &lt;code&gt;dst&lt;/code&gt; 开始设置为 &lt;code&gt;val&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13cae555ad6ad3784458f93754f637cd378f2ac3" translate="yes" xml:space="preserve">
          <source>Sets extra flags for the &lt;code&gt;dwFileFlags&lt;/code&gt; argument to the call to &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfile2&quot;&gt;&lt;code&gt;CreateFile2&lt;/code&gt;&lt;/a&gt; to the specified value (or combines it with &lt;code&gt;attributes&lt;/code&gt; and &lt;code&gt;security_qos_flags&lt;/code&gt; to set the &lt;code&gt;dwFlagsAndAttributes&lt;/code&gt; for &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfilea&quot;&gt;&lt;code&gt;CreateFile&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e71d66985a89fcf72da574a7b8a270b0f10eba" translate="yes" xml:space="preserve">
          <source>Sets extra flags for the &lt;code&gt;dwFileFlags&lt;/code&gt; argument to the call to &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfile2&quot;&gt;&lt;code&gt;CreateFile2&lt;/code&gt;&lt;/a&gt; to the specified value (or combines it with &lt;code&gt;attributes&lt;/code&gt; and &lt;code&gt;security_qos_flags&lt;/code&gt; to set the &lt;code&gt;dwFlagsAndAttributes&lt;/code&gt; for &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfilea&quot;&gt;&lt;code&gt;CreateFile&lt;/code&gt;&lt;/a&gt;). &lt;a href=&quot;../os/windows/fs/trait.openoptionsext#tymethod.custom_flags&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1997c6c112c8704556cc0c7cef7f08de7459cd3" translate="yes" xml:space="preserve">
          <source>Sets extra flags for the &lt;code&gt;dwFileFlags&lt;/code&gt; argument to the call to &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/hh449422.aspx&quot;&gt;&lt;code&gt;CreateFile2&lt;/code&gt;&lt;/a&gt; to the specified value (or combines it with &lt;code&gt;attributes&lt;/code&gt; and &lt;code&gt;security_qos_flags&lt;/code&gt; to set the &lt;code&gt;dwFlagsAndAttributes&lt;/code&gt; for &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858.aspx&quot;&gt;&lt;code&gt;CreateFile&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">将 &lt;code&gt;dwFileFlags&lt;/code&gt; 参数的额外标志设置为对&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/hh449422.aspx&quot;&gt; &lt;code&gt;CreateFile2&lt;/code&gt; &lt;/a&gt;的调用，将其设置为指定值（或将其与 &lt;code&gt;attributes&lt;/code&gt; 和 &lt;code&gt;security_qos_flags&lt;/code&gt; 组合以设置 &lt;code&gt;dwFlagsAndAttributes&lt;/code&gt; 为&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858.aspx&quot;&gt; &lt;code&gt;CreateFile&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b2b2a84c201b69ee93f1779805a7ef6d5dba2dc7" translate="yes" xml:space="preserve">
          <source>Sets extra flags for the &lt;code&gt;dwFileFlags&lt;/code&gt; argument to the call to [&lt;code&gt;CreateFile2&lt;/code&gt;] to the specified value (or combines it with &lt;code&gt;attributes&lt;/code&gt; and &lt;code&gt;security_qos_flags&lt;/code&gt; to set the &lt;code&gt;dwFlagsAndAttributes&lt;/code&gt; for [&lt;code&gt;CreateFile&lt;/code&gt;]). &lt;a href=&quot;../os/windows/fs/trait.openoptionsext#tymethod.custom_flags&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;dwFileFlags&lt;/code&gt; [ &lt;code&gt;CreateFile2&lt;/code&gt; ] 的调用的dwFileFlags参数的额外标志设置为指定值（或将其与 &lt;code&gt;attributes&lt;/code&gt; 和 &lt;code&gt;security_qos_flags&lt;/code&gt; 组合以为[ &lt;code&gt;CreateFile&lt;/code&gt; ] 设置 &lt;code&gt;dwFlagsAndAttributes&lt;/code&gt; ）。&lt;a href=&quot;../os/windows/fs/trait.openoptionsext#tymethod.custom_flags&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0fba0b201372a856839f3a1d9d47e00f2558c4f0" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/procthread/process-creation-flags&quot;&gt;process creation flags&lt;/a&gt; to be passed to &lt;code&gt;CreateProcess&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7f860912f8484c14180dca285731a3758816f4" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/procthread/process-creation-flags&quot;&gt;process creation flags&lt;/a&gt; to be passed to &lt;code&gt;CreateProcess&lt;/code&gt;. &lt;a href=&quot;../os/windows/process/trait.commandext#tymethod.creation_flags&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8f12c8cb7cc24b4a8a0f0db06296cfa587f636" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/ms684863(v=vs.85).aspx&quot;&gt;process creation flags&lt;/a&gt; to be passed to &lt;code&gt;CreateProcess&lt;/code&gt;.</source>
          <target state="translated">设置要传递给 &lt;code&gt;CreateProcess&lt;/code&gt; 的&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/ms684863(v=vs.85).aspx&quot;&gt;流程创建标志&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a59f5e51c3b439ae27c5cdcfc80e3aafb158cade" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;dwFileAttributes&lt;/code&gt; argument to the call to &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfile2&quot;&gt;&lt;code&gt;CreateFile2&lt;/code&gt;&lt;/a&gt; to the specified value (or combines it with &lt;code&gt;custom_flags&lt;/code&gt; and &lt;code&gt;security_qos_flags&lt;/code&gt; to set the &lt;code&gt;dwFlagsAndAttributes&lt;/code&gt; for &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfilea&quot;&gt;&lt;code&gt;CreateFile&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f79c0b88c0b04acbdb2749429a0a095268264a" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;dwFileAttributes&lt;/code&gt; argument to the call to &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfile2&quot;&gt;&lt;code&gt;CreateFile2&lt;/code&gt;&lt;/a&gt; to the specified value (or combines it with &lt;code&gt;custom_flags&lt;/code&gt; and &lt;code&gt;security_qos_flags&lt;/code&gt; to set the &lt;code&gt;dwFlagsAndAttributes&lt;/code&gt; for &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfilea&quot;&gt;&lt;code&gt;CreateFile&lt;/code&gt;&lt;/a&gt;). &lt;a href=&quot;../os/windows/fs/trait.openoptionsext#tymethod.attributes&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7049d876eb8c7c61c52d531c4b19a0066ccd493e" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;dwFileAttributes&lt;/code&gt; argument to the call to &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/hh449422.aspx&quot;&gt;&lt;code&gt;CreateFile2&lt;/code&gt;&lt;/a&gt; to the specified value (or combines it with &lt;code&gt;custom_flags&lt;/code&gt; and &lt;code&gt;security_qos_flags&lt;/code&gt; to set the &lt;code&gt;dwFlagsAndAttributes&lt;/code&gt; for &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858.aspx&quot;&gt;&lt;code&gt;CreateFile&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">将 &lt;code&gt;dwFileAttributes&lt;/code&gt; 参数（用于对&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/hh449422.aspx&quot;&gt; &lt;code&gt;CreateFile2&lt;/code&gt; &lt;/a&gt;的调用）设置为指定值（或将其与 &lt;code&gt;custom_flags&lt;/code&gt; 和 &lt;code&gt;security_qos_flags&lt;/code&gt; 组合以设置 &lt;code&gt;dwFlagsAndAttributes&lt;/code&gt; for &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858.aspx&quot;&gt; &lt;code&gt;CreateFile&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="fbfe58dd4d4871e3f5efaa00ce9114bb2a23276c" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;dwFileAttributes&lt;/code&gt; argument to the call to [&lt;code&gt;CreateFile2&lt;/code&gt;] to the specified value (or combines it with &lt;code&gt;custom_flags&lt;/code&gt; and &lt;code&gt;security_qos_flags&lt;/code&gt; to set the &lt;code&gt;dwFlagsAndAttributes&lt;/code&gt; for [&lt;code&gt;CreateFile&lt;/code&gt;]). &lt;a href=&quot;../os/windows/fs/trait.openoptionsext#tymethod.attributes&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;dwFileAttributes&lt;/code&gt; [ &lt;code&gt;CreateFile2&lt;/code&gt; ] 的调用的dwFileAttributes参数设置为指定值（或将其与 &lt;code&gt;custom_flags&lt;/code&gt; 和 &lt;code&gt;security_qos_flags&lt;/code&gt; 组合以设置[ &lt;code&gt;CreateFile&lt;/code&gt; ] 的 &lt;code&gt;dwFlagsAndAttributes&lt;/code&gt; ）。&lt;a href=&quot;../os/windows/fs/trait.openoptionsext#tymethod.attributes&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb7995adce7a4e3564d7673e1b427792280a06bb" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;dwSecurityQosFlags&lt;/code&gt; argument to the call to &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfile2&quot;&gt;&lt;code&gt;CreateFile2&lt;/code&gt;&lt;/a&gt; to the specified value (or combines it with &lt;code&gt;custom_flags&lt;/code&gt; and &lt;code&gt;attributes&lt;/code&gt; to set the &lt;code&gt;dwFlagsAndAttributes&lt;/code&gt; for &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfilea&quot;&gt;&lt;code&gt;CreateFile&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c912d8f1d0154efe621164bbed181f4fa4f8b1c" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;dwSecurityQosFlags&lt;/code&gt; argument to the call to &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfile2&quot;&gt;&lt;code&gt;CreateFile2&lt;/code&gt;&lt;/a&gt; to the specified value (or combines it with &lt;code&gt;custom_flags&lt;/code&gt; and &lt;code&gt;attributes&lt;/code&gt; to set the &lt;code&gt;dwFlagsAndAttributes&lt;/code&gt; for &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfilea&quot;&gt;&lt;code&gt;CreateFile&lt;/code&gt;&lt;/a&gt;). &lt;a href=&quot;../os/windows/fs/trait.openoptionsext#tymethod.security_qos_flags&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c359e1959e15fb05ad53df0726c01f8bd34c1f" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;dwSecurityQosFlags&lt;/code&gt; argument to the call to &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/hh449422.aspx&quot;&gt;&lt;code&gt;CreateFile2&lt;/code&gt;&lt;/a&gt; to the specified value (or combines it with &lt;code&gt;custom_flags&lt;/code&gt; and &lt;code&gt;attributes&lt;/code&gt; to set the &lt;code&gt;dwFlagsAndAttributes&lt;/code&gt; for &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858.aspx&quot;&gt;&lt;code&gt;CreateFile&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;dwSecurityQosFlags&lt;/code&gt; &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/hh449422.aspx&quot;&gt; &lt;code&gt;CreateFile2&lt;/code&gt; &lt;/a&gt;的调用的dwSecurityQosFlags参数设置为指定的值（或将其与 &lt;code&gt;custom_flags&lt;/code&gt; 和 &lt;code&gt;attributes&lt;/code&gt; 组合以为&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858.aspx&quot;&gt; &lt;code&gt;CreateFile&lt;/code&gt; &lt;/a&gt;设置 &lt;code&gt;dwFlagsAndAttributes&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c9c08d809d7457fa9085725f05f2e7a3c7b3d518" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;dwSecurityQosFlags&lt;/code&gt; argument to the call to [&lt;code&gt;CreateFile2&lt;/code&gt;] to the specified value (or combines it with &lt;code&gt;custom_flags&lt;/code&gt; and &lt;code&gt;attributes&lt;/code&gt; to set the &lt;code&gt;dwFlagsAndAttributes&lt;/code&gt; for [&lt;code&gt;CreateFile&lt;/code&gt;]). &lt;a href=&quot;../os/windows/fs/trait.openoptionsext#tymethod.security_qos_flags&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;dwSecurityQosFlags&lt;/code&gt; [ &lt;code&gt;CreateFile2&lt;/code&gt; ] 的调用的dwSecurityQosFlags参数设置为指定值（或将其与 &lt;code&gt;custom_flags&lt;/code&gt; 和 &lt;code&gt;attributes&lt;/code&gt; 组合以为[ &lt;code&gt;CreateFile&lt;/code&gt; ] 设置 &lt;code&gt;dwFlagsAndAttributes&lt;/code&gt; ）。&lt;a href=&quot;../os/windows/fs/trait.openoptionsext#tymethod.security_qos_flags&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2661cce730a72f4d98c68c762bfe1b056ab79aca" translate="yes" xml:space="preserve">
          <source>Sets the [process creation flags][1] to be passed to &lt;code&gt;CreateProcess&lt;/code&gt;. &lt;a href=&quot;../os/windows/process/trait.commandext#tymethod.creation_flags&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">设置要传递给 &lt;code&gt;CreateProcess&lt;/code&gt; 的[流程创建标志] [1] 。&lt;a href=&quot;../os/windows/process/trait.commandext#tymethod.creation_flags&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce814bac4a4ff2457a43a54737b048c532a0aa20" translate="yes" xml:space="preserve">
          <source>Sets the child process's user ID. This translates to a &lt;code&gt;setuid&lt;/code&gt; call in the child process. Failure in the &lt;code&gt;setuid&lt;/code&gt; call will cause the spawn to fail.</source>
          <target state="translated">设置子进程的用户ID。这将转换为子进程中的 &lt;code&gt;setuid&lt;/code&gt; 调用。 &lt;code&gt;setuid&lt;/code&gt; 调用失败将导致生成失败。</target>
        </trans-unit>
        <trans-unit id="92c9734578513f6eb162eafc8f52f7e5c45af308" translate="yes" xml:space="preserve">
          <source>Sets the child process's user ID. This translates to a &lt;code&gt;setuid&lt;/code&gt; call in the child process. Failure in the &lt;code&gt;setuid&lt;/code&gt; call will cause the spawn to fail. &lt;a href=&quot;../os/unix/process/trait.commandext#tymethod.uid&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">设置子进程的用户ID。这将转换为子进程中的 &lt;code&gt;setuid&lt;/code&gt; 调用。 &lt;code&gt;setuid&lt;/code&gt; 调用失败将导致生成失败。&lt;a href=&quot;../os/unix/process/trait.commandext#tymethod.uid&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be925dac0770ceeb65dc7dab3c58942103c0193b" translate="yes" xml:space="preserve">
          <source>Sets the contained value.</source>
          <target state="translated">设置包含的值。</target>
        </trans-unit>
        <trans-unit id="bc3324d6caa3ad2e5f5690cf2637813883efdf23" translate="yes" xml:space="preserve">
          <source>Sets the contents of the cell to &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d422096139c1e9c772fb437582bdc8b93518038" translate="yes" xml:space="preserve">
          <source>Sets the contents of this cell to &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84421e00729f731b6dc5d7abdf2db4ceb9ad632e" translate="yes" xml:space="preserve">
          <source>Sets the environment variable &lt;code&gt;k&lt;/code&gt; to the value &lt;code&gt;v&lt;/code&gt; for the currently running process.</source>
          <target state="translated">将当前正在运行的进程的环境变量 &lt;code&gt;k&lt;/code&gt; 设置为值 &lt;code&gt;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4812769d4da90fe71d6f09aebd56ba76ad7c55c" translate="yes" xml:space="preserve">
          <source>Sets the mode bits that a new file will be created with.</source>
          <target state="translated">设置创建新文件的模式位。</target>
        </trans-unit>
        <trans-unit id="955aa039d64d79d9dad058215e85b20785d0e35e" translate="yes" xml:space="preserve">
          <source>Sets the mode bits that a new file will be created with. &lt;a href=&quot;../os/unix/fs/trait.openoptionsext#tymethod.mode&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">设置将用于创建新文件的模式位。&lt;a href=&quot;../os/unix/fs/trait.openoptionsext#tymethod.mode&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0cbebddda1d8a36d60c3bfc4c2f172a5dfd1cf1" translate="yes" xml:space="preserve">
          <source>Sets the mode to create new directories with. This option defaults to 0o777.</source>
          <target state="translated">设置创建新目录的模式。这个选项的默认值是0o777。</target>
        </trans-unit>
        <trans-unit id="160dff498214cf800fe8e6ed575a29543e73aa1e" translate="yes" xml:space="preserve">
          <source>Sets the mode to create new directories with. This option defaults to 0o777. &lt;a href=&quot;../os/unix/fs/trait.dirbuilderext#tymethod.mode&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">设置用于创建新目录的模式。此选项默认为0o777。&lt;a href=&quot;../os/unix/fs/trait.dirbuilderext#tymethod.mode&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e87b20d19230f415e2da9ee8d384e2e7f53a1338" translate="yes" xml:space="preserve">
          <source>Sets the number of bytes that can be read before this instance will return EOF. This is the same as constructing a new &lt;code&gt;Take&lt;/code&gt; instance, so the amount of bytes read and the previous limit value don't matter when calling this method.</source>
          <target state="translated">设置在此实例返回EOF之前可以读取的字节数。这与构造新的 &lt;code&gt;Take&lt;/code&gt; 实例相同，因此在调用此方法时，读取的字节数和先前的限制值无关紧要。</target>
        </trans-unit>
        <trans-unit id="24067d9725617c3bf841afad38e871ecdb2b8b7c" translate="yes" xml:space="preserve">
          <source>Sets the offset to the current position plus the specified number of bytes.</source>
          <target state="translated">设置偏移量为当前位置加上指定的字节数。</target>
        </trans-unit>
        <trans-unit id="f692318bc7ba083cabf3eab2161e8b8a3db450a8" translate="yes" xml:space="preserve">
          <source>Sets the offset to the provided number of bytes.</source>
          <target state="translated">将偏移量设置为所提供的字节数。</target>
        </trans-unit>
        <trans-unit id="8122e908afce6f0667699e3813f1e8d32970f72a" translate="yes" xml:space="preserve">
          <source>Sets the offset to the size of this object plus the specified number of bytes.</source>
          <target state="translated">设置偏移量为该对象的大小加上指定的字节数。</target>
        </trans-unit>
        <trans-unit id="d53bb0ea056c01fc83f1046964138b58730e3466" translate="yes" xml:space="preserve">
          <source>Sets the option for creating a new file.</source>
          <target state="translated">设置创建新文件的选项。</target>
        </trans-unit>
        <trans-unit id="a4ca2dc204930d580267421bba1b96fad30633e8" translate="yes" xml:space="preserve">
          <source>Sets the option for read access.</source>
          <target state="translated">设置读取权限的选项。</target>
        </trans-unit>
        <trans-unit id="a2430e3abe880986a68d19900b4421b33ba19eff" translate="yes" xml:space="preserve">
          <source>Sets the option for the append mode.</source>
          <target state="translated">设置追加模式的选项。</target>
        </trans-unit>
        <trans-unit id="17be9cfeb89520af373651100921b4bb71a1889a" translate="yes" xml:space="preserve">
          <source>Sets the option for truncating a previous file.</source>
          <target state="translated">设置截断前一个文件的选项。</target>
        </trans-unit>
        <trans-unit id="16c8143af49856abc8e90268804d7514a3d7528e" translate="yes" xml:space="preserve">
          <source>Sets the option for write access.</source>
          <target state="translated">设置写访问的选项。</target>
        </trans-unit>
        <trans-unit id="1b7621414a1f97229400fc9d3e514b0597043a44" translate="yes" xml:space="preserve">
          <source>Sets the option to always create a new file.</source>
          <target state="translated">设置总是创建新文件的选项。</target>
        </trans-unit>
        <trans-unit id="dc3ee685cf0f3ab31847e7d4fa3bdaeedef41cb0" translate="yes" xml:space="preserve">
          <source>Sets the option to create a new file, failing if it already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899ba2d9f77432ec08df84a0ac7da3d732ba3229" translate="yes" xml:space="preserve">
          <source>Sets the option to create a new file, or open it if it already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c327b9fa62cd31fb539540b1b1b4e44201b9c4" translate="yes" xml:space="preserve">
          <source>Sets the pointer value to &lt;code&gt;ptr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d46ba2f67ddfc3dff7f86a2a919aa5a23732a6e" translate="yes" xml:space="preserve">
          <source>Sets the position of this cursor.</source>
          <target state="translated">设置该光标的位置。</target>
        </trans-unit>
        <trans-unit id="b3da43878310bb987b12a2a789e4843007f193c6" translate="yes" xml:space="preserve">
          <source>Sets the read timeout for the socket.</source>
          <target state="translated">设置插座的读取超时。</target>
        </trans-unit>
        <trans-unit id="b7376de16de9b1d1e300186fc4fd48c1d1c5cd30" translate="yes" xml:space="preserve">
          <source>Sets the read timeout to the timeout specified.</source>
          <target state="translated">将读取超时设置为指定的超时。</target>
        </trans-unit>
        <trans-unit id="aa11b46378475b94c8efe9cda3223fb982804092" translate="yes" xml:space="preserve">
          <source>Sets the size of the stack (in bytes) for the new thread.</source>
          <target state="translated">设置新线程的堆栈大小(以字节为单位)。</target>
        </trans-unit>
        <trans-unit id="1c37ab19f8d28a8c744a9164fe95294a0c392d67" translate="yes" xml:space="preserve">
          <source>Sets the underlying raw bits for this set of permissions.</source>
          <target state="translated">设置这组权限的基本原始位。</target>
        </trans-unit>
        <trans-unit id="13ce1408fbaf53bac968b7533d7d2200354d74b1" translate="yes" xml:space="preserve">
          <source>Sets the underlying raw bits for this set of permissions. &lt;a href=&quot;../os/unix/fs/trait.permissionsext#tymethod.set_mode&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">设置此权限集的基础原始位。&lt;a href=&quot;../os/unix/fs/trait.permissionsext#tymethod.set_mode&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6247c67fdde05b90f2f61d79183aaa3b8c42a3b" translate="yes" xml:space="preserve">
          <source>Sets the value for the &lt;code&gt;IP_TTL&lt;/code&gt; option on this socket.</source>
          <target state="translated">设置此套接字上 &lt;code&gt;IP_TTL&lt;/code&gt; 选项的值。</target>
        </trans-unit>
        <trans-unit id="eba828773afb5d489ceb41078d353587693e2adb" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;code&gt;IPV6_MULTICAST_LOOP&lt;/code&gt; option for this socket.</source>
          <target state="translated">设置此套接字的 &lt;code&gt;IPV6_MULTICAST_LOOP&lt;/code&gt; 选项的值。</target>
        </trans-unit>
        <trans-unit id="2ab8f780b368dbeb7517ffd586ad48535186d012" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;code&gt;IP_MULTICAST_LOOP&lt;/code&gt; option for this socket.</source>
          <target state="translated">设置此套接字的 &lt;code&gt;IP_MULTICAST_LOOP&lt;/code&gt; 选项的值。</target>
        </trans-unit>
        <trans-unit id="e21680fb32b3995fb896d39033963adff3ef366d" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;code&gt;IP_MULTICAST_TTL&lt;/code&gt; option for this socket.</source>
          <target state="translated">设置此套接字的 &lt;code&gt;IP_MULTICAST_TTL&lt;/code&gt; 选项的值。</target>
        </trans-unit>
        <trans-unit id="741b26687f9044b8d9908692d6d3a66f63d46ab1" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt;. This overwrites any previous value without dropping it, so be careful not to use this twice unless you want to skip running the destructor. For your convenience, this also returns a mutable reference to the (now safely initialized) contents of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">设置 &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; 的值。这将覆盖任何先前的值而不将其删除，因此请注意不要重复使用此两次，除非您要跳过运行析构函数。为了您的方便，这还会返回对 &lt;code&gt;self&lt;/code&gt; 的（现已安全初始化）内容的可变引用。</target>
        </trans-unit>
        <trans-unit id="172ebb8097446a67c0c722df012162dce14f82c5" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;code&gt;SO_BROADCAST&lt;/code&gt; option for this socket.</source>
          <target state="translated">设置此套接字的 &lt;code&gt;SO_BROADCAST&lt;/code&gt; 选项的值。</target>
        </trans-unit>
        <trans-unit id="c7234a0198b456bcf2f71df391fadfb348fd3dd9" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;code&gt;TCP_NODELAY&lt;/code&gt; option on this socket.</source>
          <target state="translated">设置此套接字上的 &lt;code&gt;TCP_NODELAY&lt;/code&gt; 选项的值。</target>
        </trans-unit>
        <trans-unit id="48774c5ebac7053f3e138fc9e16b60e25a96813f" translate="yes" xml:space="preserve">
          <source>Sets the value of the entry with the &lt;code&gt;OccupiedEntry&lt;/code&gt;'s key, and returns the entry's old value.</source>
          <target state="translated">使用 &lt;code&gt;OccupiedEntry&lt;/code&gt; 的键设置条目的值，并返回条目的旧值。</target>
        </trans-unit>
        <trans-unit id="9a97e926f2854934263a3694fe0ee01cd600c728" translate="yes" xml:space="preserve">
          <source>Sets the value of the entry with the &lt;code&gt;VacantEntry&lt;/code&gt;'s key, and returns a mutable reference to it.</source>
          <target state="translated">使用 &lt;code&gt;VacantEntry&lt;/code&gt; 的键设置条目的值，并返回对其的可变引用。</target>
        </trans-unit>
        <trans-unit id="981e589453aa7f155c53bded824501cfd42b0b49" translate="yes" xml:space="preserve">
          <source>Sets the value of the entry with the VacantEntry's key, and returns a mutable reference to it.</source>
          <target state="translated">设置带有VacantEntry键的条目值,并返回它的可变引用。</target>
        </trans-unit>
        <trans-unit id="c0e4bb8bb1b11e453ee19b5669262edcd0233f71" translate="yes" xml:space="preserve">
          <source>Sets the value of the entry, and returns an &lt;code&gt;OccupiedEntry&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce614bc741b150546f3faf456c137627f4eb75a" translate="yes" xml:space="preserve">
          <source>Sets the value of the entry, and returns an OccupiedEntry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56aece52ed7de18f860194beff0c22badf73b565" translate="yes" xml:space="preserve">
          <source>Sets the value of the entry, and returns the entry's old value.</source>
          <target state="translated">设置条目的值,并返回条目的旧值。</target>
        </trans-unit>
        <trans-unit id="b28a94630a0acc7871fd1f9dbb549fc4e9500580" translate="yes" xml:space="preserve">
          <source>Sets the working directory for the child process.</source>
          <target state="translated">设置子进程的工作目录。</target>
        </trans-unit>
        <trans-unit id="30663c629c124008aabdc3b273cddf6652a105f6" translate="yes" xml:space="preserve">
          <source>Sets the write timeout for the socket.</source>
          <target state="translated">设置插座的写入超时。</target>
        </trans-unit>
        <trans-unit id="25c45219c7bdebc8bc195905393e683675912de8" translate="yes" xml:space="preserve">
          <source>Sets the write timeout to the timeout specified.</source>
          <target state="translated">将写入超时设置为指定的超时。</target>
        </trans-unit>
        <trans-unit id="2e0fb8d45f30de32cff3bc0c4111bea5168140bc" translate="yes" xml:space="preserve">
          <source>Sets: &lt;a href=&quot;struct.hashset&quot;&gt;&lt;code&gt;HashSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.btreeset&quot;&gt;&lt;code&gt;BTreeSet&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">集合：&lt;a href=&quot;struct.hashset&quot;&gt; &lt;code&gt;HashSet&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;struct.btreeset&quot;&gt; &lt;code&gt;BTreeSet&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f70c27ebb58d70f30f9995aec6d95a82b5ae2008" translate="yes" xml:space="preserve">
          <source>Setting Up a Crates.io Account</source>
          <target state="translated">设置一个Crates.io账户</target>
        </trans-unit>
        <trans-unit id="710d049d145a06ebbd1617ee838a19ad46dfc041" translate="yes" xml:space="preserve">
          <source>Setting Up a New Project</source>
          <target state="translated">设置一个新项目</target>
        </trans-unit>
        <trans-unit id="72f70b4118af352fd7668af0419df15bf165f323" translate="yes" xml:space="preserve">
          <source>Setting up any other configuration</source>
          <target state="translated">设置任何其他配置</target>
        </trans-unit>
        <trans-unit id="61104eb5b2de0f76a2dfb77a41d0b8cbdff3338b" translate="yes" xml:space="preserve">
          <source>Several methods on &lt;a href=&quot;struct.command&quot;&gt;&lt;code&gt;Command&lt;/code&gt;&lt;/a&gt;, such as &lt;a href=&quot;struct.command#method.spawn&quot;&gt;&lt;code&gt;spawn&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;struct.command#method.output&quot;&gt;&lt;code&gt;output&lt;/code&gt;&lt;/a&gt;, can be used to spawn a process. In particular, &lt;a href=&quot;struct.command#method.output&quot;&gt;&lt;code&gt;output&lt;/code&gt;&lt;/a&gt; spawns the child process and waits until the process terminates, while &lt;a href=&quot;struct.command#method.spawn&quot;&gt;&lt;code&gt;spawn&lt;/code&gt;&lt;/a&gt; will return a &lt;a href=&quot;struct.child&quot;&gt;&lt;code&gt;Child&lt;/code&gt;&lt;/a&gt; that represents the spawned child process.</source>
          <target state="translated">可使用&lt;a href=&quot;struct.command&quot;&gt; &lt;code&gt;Command&lt;/code&gt; &lt;/a&gt;上的几种方法（例如&lt;a href=&quot;struct.command#method.spawn&quot;&gt; &lt;code&gt;spawn&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;struct.command#method.output&quot;&gt; &lt;code&gt;output&lt;/code&gt; )&lt;/a&gt;来生成进程。特别是，&lt;a href=&quot;struct.command#method.output&quot;&gt; &lt;code&gt;output&lt;/code&gt; &lt;/a&gt;生成子进程并等待直到该进程终止，而&lt;a href=&quot;struct.command#method.spawn&quot;&gt; &lt;code&gt;spawn&lt;/code&gt; &lt;/a&gt;将返回一个代表所生成的子进程的&lt;a href=&quot;struct.child&quot;&gt; &lt;code&gt;Child&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0fe0c97b11d3f48d0ddcca6a1e2b141ec16967bf" translate="yes" xml:space="preserve">
          <source>Several of Rust's control structures will check for a &lt;code&gt;bool&lt;/code&gt; condition evaluating to &lt;strong&gt;true&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6dcd689827a17bf19ae0f14eca633d07f983509" translate="yes" xml:space="preserve">
          <source>Several of the other (forward) methods have default implementations in terms of this one, so try to implement this explicitly if it can do something better than the default &lt;code&gt;for&lt;/code&gt; loop implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5819bb82d7f59ef413ffed5a5f1abb2caad63ff" translate="yes" xml:space="preserve">
          <source>Several other collection methods also return iterators to yield a sequence of results but avoid allocating an entire collection to store the result in. This provides maximum flexibility as &lt;code&gt;collect&lt;/code&gt; or &lt;code&gt;extend&lt;/code&gt; can be called to &quot;pipe&quot; the sequence into any collection if desired. Otherwise, the sequence can be looped over with a &lt;code&gt;for&lt;/code&gt; loop. The iterator can also be discarded after partial use, preventing the computation of the unused items.</source>
          <target state="translated">其他几种收集方法也返回迭代器以产生结果序列，但避免分配整个集合来存储结果。这提供了最大的灵活性，因为可以根据需要调用 &lt;code&gt;collect&lt;/code&gt; 或 &lt;code&gt;extend&lt;/code&gt; 将序列&amp;ldquo;管道&amp;rdquo;到任何集合中。否则，可以使用 &lt;code&gt;for&lt;/code&gt; 循环将序列循环。迭代器在部分使用后也可以丢弃，从而避免了未使用项的计算。</target>
        </trans-unit>
        <trans-unit id="89615f01358699eaa4c024997d32b57e06506f92" translate="yes" xml:space="preserve">
          <source>Several rules determine what a package can contain. A package &lt;em&gt;must&lt;/em&gt; contain zero or one library crates, and no more. It can contain as many binary crates as you&amp;rsquo;d like, but it must contain at least one crate (either library or binary).</source>
          <target state="translated">几个规则确定软件包可以包含的内容。一个程序包&lt;em&gt;必须&lt;/em&gt;包含零个或一个库条板箱，并且不能包含更多。它可以包含任意数量的二进制板条箱，但必须至少包含一个板条箱（库或二进制）。</target>
        </trans-unit>
        <trans-unit id="08c2f3e4082ea69d621aae9852fccdc01e59f915" translate="yes" xml:space="preserve">
          <source>Several situations often occur which result in ambiguities about the receiver or referent of method or associated function calls. These situations may include:</source>
          <target state="translated">有几种情况经常发生,导致方法或相关函数调用的接收方或引用方不明确。这些情况可能包括:</target>
        </trans-unit>
        <trans-unit id="7331278fb5718617e233df649e90ba9b72bfb49e" translate="yes" xml:space="preserve">
          <source>Shadowing</source>
          <target state="translated">Shadowing</target>
        </trans-unit>
        <trans-unit id="2713f25473e60389b391aef93ff444fbbf771b5f" translate="yes" xml:space="preserve">
          <source>Shadowing is different from marking a variable as &lt;code&gt;mut&lt;/code&gt;, because we&amp;rsquo;ll get a compile-time error if we accidentally try to reassign to this variable without using the &lt;code&gt;let&lt;/code&gt; keyword. By using &lt;code&gt;let&lt;/code&gt;, we can perform a few transformations on a value but have the variable be immutable after those transformations have been completed.</source>
          <target state="translated">阴影不同于将变量标记为 &lt;code&gt;mut&lt;/code&gt; ，因为如果我们不小心尝试不使用 &lt;code&gt;let&lt;/code&gt; 关键字重新分配给该变量，就会收到编译时错误。通过使用 &lt;code&gt;let&lt;/code&gt; ，我们可以对一个值执行一些转换，但是在这些转换完成之后，变量是不可变的。</target>
        </trans-unit>
        <trans-unit id="bc84f8ef1f7ad8b864597d728a0025759b1dbefd" translate="yes" xml:space="preserve">
          <source>Shareable mutable containers exist to permit mutability in a controlled manner, even in the presence of aliasing. Both &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; allow doing this in a single-threaded way. However, neither &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; nor &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; are thread safe (they do not implement &lt;code&gt;Sync&lt;/code&gt;). If you need to do aliasing and mutation between multiple threads it is possible to use &lt;a href=&quot;../sync/struct.mutex&quot;&gt;&lt;code&gt;Mutex&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;&lt;code&gt;RwLock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://doc.rust-lang.org/core/sync/atomic/index.html&quot;&gt;&lt;code&gt;atomic&lt;/code&gt;&lt;/a&gt; types.</source>
          <target state="translated">存在可共享的可变容器，以允许以受控的方式进行可变性，即使存在混叠也是如此。两者 &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; 和 &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; 允许在单线程方式这样做。但是， &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; 和 &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; 都不是线程安全的（它们不实现 &lt;code&gt;Sync&lt;/code&gt; ）。如果需要在多个线程之间进行别名和突变，则可以使用&lt;a href=&quot;../sync/struct.mutex&quot;&gt; &lt;code&gt;Mutex&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../sync/struct.rwlock&quot;&gt; &lt;code&gt;RwLock&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://doc.rust-lang.org/core/sync/atomic/index.html&quot;&gt; &lt;code&gt;atomic&lt;/code&gt; &lt;/a&gt;类型。</target>
        </trans-unit>
        <trans-unit id="47055abd20bfa696eaa641c29ba59506a0723b3b" translate="yes" xml:space="preserve">
          <source>Shareable mutable containers.</source>
          <target state="translated">可共享的可变容器。</target>
        </trans-unit>
        <trans-unit id="6c0ab5121c59b8d5ea846df7afe17c324651264a" translate="yes" xml:space="preserve">
          <source>Shared &lt;a href=&quot;expressions/operator-expr#borrow-operators&quot;&gt;borrow&lt;/a&gt;s, except if applied to a type with &lt;a href=&quot;interior-mutability&quot;&gt;interior mutability&lt;/a&gt;.</source>
          <target state="translated">共享&lt;a href=&quot;expressions/operator-expr#borrow-operators&quot;&gt;借位&lt;/a&gt;，除非应用于具有&lt;a href=&quot;interior-mutability&quot;&gt;内部可变性&lt;/a&gt;的类型。</target>
        </trans-unit>
        <trans-unit id="efb0f6a277d017eb755bd966e4139004b6a0e92d" translate="yes" xml:space="preserve">
          <source>Shared references</source>
          <target state="translated">共同参考</target>
        </trans-unit>
        <trans-unit id="890634a9a47838094f8553b06761b5af82a745a4" translate="yes" xml:space="preserve">
          <source>Shared references (&lt;code id=&quot;shared-references-&quot;&gt;&amp;amp;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9034ede4e461b638eb9c97844c736d00fbd4d26b" translate="yes" xml:space="preserve">
          <source>Shared references (&lt;code&gt;&amp;amp;&lt;/code&gt;)</source>
          <target state="translated">共享参考（ &lt;code&gt;&amp;amp;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="cd9be75b780eb204356fa424db53959137c5a707" translate="yes" xml:space="preserve">
          <source>Shared references (&lt;code&gt;&amp;amp;T&lt;/code&gt;) are also &lt;code&gt;Copy&lt;/code&gt;, so a type can be &lt;code&gt;Copy&lt;/code&gt;, even when it holds shared references of types &lt;code&gt;T&lt;/code&gt; that are &lt;em&gt;not&lt;/em&gt;&lt;code&gt;Copy&lt;/code&gt;. Consider the following struct, which can implement &lt;code&gt;Copy&lt;/code&gt;, because it only holds a &lt;em&gt;shared reference&lt;/em&gt; to our non-&lt;code&gt;Copy&lt;/code&gt; type &lt;code&gt;PointList&lt;/code&gt; from above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abefad9ed979c9e0f107f7811801ce3cc57fbad2" translate="yes" xml:space="preserve">
          <source>Shared references can be cloned, but mutable references &lt;em&gt;cannot&lt;/em&gt;!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb15d87e708ed99874b210c4f1f798399d3fe6d" translate="yes" xml:space="preserve">
          <source>Shared references can be copied, but mutable references &lt;em&gt;cannot&lt;/em&gt;!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec6397e174c6e6916443049b1750f3bea34e58b" translate="yes" xml:space="preserve">
          <source>Shared references in Rust disallow mutation by default, and &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt; is no exception: you cannot generally obtain a mutable reference to something inside an &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;. If you need mutability, put a &lt;a href=&quot;../cell/struct.cell&quot;&gt;&lt;code&gt;Cell&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&lt;/code&gt;&lt;/a&gt; inside the &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;; see &lt;a href=&quot;../cell/index#introducing-mutability-inside-of-something-immutable&quot;&gt;an example of mutability inside an &lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46585726f307293b1800a9a3aa2d1ca0bd93a70c" translate="yes" xml:space="preserve">
          <source>Shared references in Rust disallow mutation by default, and &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt; is no exception: you cannot generally obtain a mutable reference to something inside an &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;. If you need mutability, put a &lt;a href=&quot;../cell/struct.cell&quot;&gt;&lt;code&gt;Cell&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&lt;/code&gt;&lt;/a&gt; inside the &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;; see &lt;a href=&quot;../cell/index#introducing-mutability-inside-of-something-immutable&quot;&gt;an example of mutability inside an Rc&lt;/a&gt;.</source>
          <target state="translated">默认情况下，Rust中的共享引用不允许更改，&lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt;也不例外：您通常无法获得对&lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt;内部内容的可变引用。如果需要可变性，可在&lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt;内放置一个&lt;a href=&quot;../cell/struct.cell&quot;&gt; &lt;code&gt;Cell&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../cell/struct.refcell&quot;&gt; &lt;code&gt;RefCell&lt;/code&gt; &lt;/a&gt;；请参阅&lt;a href=&quot;../cell/index#introducing-mutability-inside-of-something-immutable&quot;&gt;Rc内部的可变性示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="40a3598e8561b60a959aeb32086eff6075229cde" translate="yes" xml:space="preserve">
          <source>Shared references in Rust disallow mutation by default, and &lt;code&gt;Arc&lt;/code&gt; is no exception: you cannot generally obtain a mutable reference to something inside an &lt;code&gt;Arc&lt;/code&gt;. If you need to mutate through an &lt;code&gt;Arc&lt;/code&gt;, use &lt;a href=&quot;struct.mutex&quot;&gt;&lt;code&gt;Mutex&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.rwlock&quot;&gt;&lt;code&gt;RwLock&lt;/code&gt;&lt;/a&gt;, or one of the &lt;a href=&quot;atomic/index&quot;&gt;&lt;code&gt;Atomic&lt;/code&gt;&lt;/a&gt; types.</source>
          <target state="translated">默认情况下，Rust中的共享引用不允许更改，并且 &lt;code&gt;Arc&lt;/code&gt; 也不例外：您通常无法获得对 &lt;code&gt;Arc&lt;/code&gt; 内部内容的可变引用。如果需要通过 &lt;code&gt;Arc&lt;/code&gt; 进行突变，请使用&lt;a href=&quot;struct.mutex&quot;&gt; &lt;code&gt;Mutex&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;struct.rwlock&quot;&gt; &lt;code&gt;RwLock&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;atomic/index&quot;&gt; &lt;code&gt;Atomic&lt;/code&gt; &lt;/a&gt;类型之一。</target>
        </trans-unit>
        <trans-unit id="593db75233f83bf705ba47b80f89e77132b687a9" translate="yes" xml:space="preserve">
          <source>Shared usage:</source>
          <target state="translated">共同使用。</target>
        </trans-unit>
        <trans-unit id="673382c3c69cfed5a7912b68d101e6192c783dc6" translate="yes" xml:space="preserve">
          <source>Shared-State Concurrency</source>
          <target state="translated">共享状态并发</target>
        </trans-unit>
        <trans-unit id="6169a2056c60b167b8282bd75cdfe59b58d65bd5" translate="yes" xml:space="preserve">
          <source>Sharing a &lt;code id=&quot;sharing-a-mutext-between-multiple-threads&quot;&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; Between Multiple Threads</source>
          <target state="translated">在多个线程之间共享 &lt;code id=&quot;sharing-a-mutext-between-multiple-threads&quot;&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="324a15157bab42e3c53455c8f61c8f20832b2737" translate="yes" xml:space="preserve">
          <source>Sharing a mutable &lt;a href=&quot;atomic/struct.atomicusize&quot;&gt;&lt;code&gt;AtomicUsize&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">共享一个可变的&lt;a href=&quot;atomic/struct.atomicusize&quot;&gt; &lt;code&gt;AtomicUsize&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="82f15567a2685045ef8f40616c2d3738ec734a12" translate="yes" xml:space="preserve">
          <source>Sharing code with Cargo and &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt; is part of what makes the Rust ecosystem useful for many different tasks. Rust&amp;rsquo;s standard library is small and stable, but crates are easy to share, use, and improve on a timeline different from that of the language. Don&amp;rsquo;t be shy about sharing code that&amp;rsquo;s useful to you on &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt;; it&amp;rsquo;s likely that it will be useful to someone else as well!</source>
          <target state="translated">与Cargo和&lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt;共享代码是使Rust生态系统可用于许多不同任务的一部分。Rust的标准库虽小且稳定，但在与语言不同的时间轴上，易于共享，使用和改进包装。不要在&lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt;上共享对您有用的代码；可能对其他人也有用！</target>
        </trans-unit>
        <trans-unit id="67f17a5330dc55e4e9b3e034e07a772f7a33d885" translate="yes" xml:space="preserve">
          <source>Sharing some immutable data between threads:</source>
          <target state="translated">线程之间共享一些不可更改的数据。</target>
        </trans-unit>
        <trans-unit id="47683d3d6a99cce10a79a4a38dfd5ef160ca23cc" translate="yes" xml:space="preserve">
          <source>Shebang</source>
          <target state="translated">Shebang</target>
        </trans-unit>
        <trans-unit id="a73b9d910499d7e9122df15ec6a61f388b0cf770" translate="yes" xml:space="preserve">
          <source>Shift Left assignment</source>
          <target state="translated">左移任务</target>
        </trans-unit>
        <trans-unit id="9644be9a65880acda2805fe590f041d97c6eb267" translate="yes" xml:space="preserve">
          <source>Shifts self left by &lt;code&gt;rhs&lt;/code&gt; bits.</source>
          <target state="translated">将自身左移 &lt;code&gt;rhs&lt;/code&gt; 位。</target>
        </trans-unit>
        <trans-unit id="ad4f0f48c2b3202d71235b86b5a91bf878ce3107" translate="yes" xml:space="preserve">
          <source>Shifts self right by &lt;code&gt;rhs&lt;/code&gt; bits.</source>
          <target state="translated">将自身右移 &lt;code&gt;rhs&lt;/code&gt; 位。</target>
        </trans-unit>
        <trans-unit id="11e010168669b1cf7287a7252ba46dd7f3818df3" translate="yes" xml:space="preserve">
          <source>Shifts the bits to the left by a specified amount, &lt;code&gt;n&lt;/code&gt;, wrapping the truncated bits to the end of the resulting integer.</source>
          <target state="translated">将位左移指定的量 &lt;code&gt;n&lt;/code&gt; ，将截断的位包装到结果整数的末尾。</target>
        </trans-unit>
        <trans-unit id="5ac204c3b620b0da07df3a3a93bbbd9881603f4b" translate="yes" xml:space="preserve">
          <source>Shifts the bits to the right by a specified amount, &lt;code&gt;n&lt;/code&gt;, wrapping the truncated bits to the beginning of the resulting integer.</source>
          <target state="translated">将位右移指定的量 &lt;code&gt;n&lt;/code&gt; ，将截断的位包装到结果整数的开头。</target>
        </trans-unit>
        <trans-unit id="68dd94e15896ac518c15a989512e222f2ef6a32f" translate="yes" xml:space="preserve">
          <source>Shl</source>
          <target state="translated">Shl</target>
        </trans-unit>
        <trans-unit id="b4f7133227be359658e629e21e4d7212dd4c6630" translate="yes" xml:space="preserve">
          <source>Shl::shl</source>
          <target state="translated">Shl::shl</target>
        </trans-unit>
        <trans-unit id="fab36f0e94913cb82274aa118d6cd8b1cd309b24" translate="yes" xml:space="preserve">
          <source>ShlAssign</source>
          <target state="translated">ShlAssign</target>
        </trans-unit>
        <trans-unit id="187e5103f590efc111bcc28a740cf12d609481a8" translate="yes" xml:space="preserve">
          <source>ShlAssign::shl_assign</source>
          <target state="translated">ShlAssign::shl_assign</target>
        </trans-unit>
        <trans-unit id="08b4fdcfec7317f43094a61220b3895b503d45ba" translate="yes" xml:space="preserve">
          <source>ShlEq</source>
          <target state="translated">ShlEq</target>
        </trans-unit>
        <trans-unit id="db577c3b4343736633c47c71ae0faa9f9efceba9" translate="yes" xml:space="preserve">
          <source>Short-circuiting logical AND</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3016cc0964592fef3fe8ad16c63fbc0d418cf2d9" translate="yes" xml:space="preserve">
          <source>Short-circuiting logical OR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="970d3edc8ee6484f10b0dc33454ed8b18f501c9c" translate="yes" xml:space="preserve">
          <source>Short-circuiting:</source>
          <target state="translated">Short-circuiting:</target>
        </trans-unit>
        <trans-unit id="8ef804f3bc9be06d2d21c37f5a5cbf91e14b9120" translate="yes" xml:space="preserve">
          <source>Shortcuts for Panic on Error: &lt;code id=&quot;shortcuts-for-panic-on-error-unwrap-and-expect&quot;&gt;unwrap&lt;/code&gt; and &lt;code&gt;expect&lt;/code&gt;</source>
          <target state="translated">错误恐慌的捷径： &lt;code id=&quot;shortcuts-for-panic-on-error-unwrap-and-expect&quot;&gt;unwrap&lt;/code&gt; 并 &lt;code&gt;expect&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1519ba7b83f7f3dff24c0cd12128ef5a8f8e5854" translate="yes" xml:space="preserve">
          <source>Shortens the &lt;code&gt;VecDeque&lt;/code&gt;, dropping excess elements from the back.</source>
          <target state="translated">缩短 &lt;code&gt;VecDeque&lt;/code&gt; ，从后面放下多余的元素。</target>
        </trans-unit>
        <trans-unit id="7c1d0179f4d005740e4556fdf7ed22bae25b7e03" translate="yes" xml:space="preserve">
          <source>Shortens the &lt;code&gt;VecDeque&lt;/code&gt;, keeping the first &lt;code&gt;len&lt;/code&gt; elements and dropping the rest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbcf2a3caecdc661be199d600355577ff28f4f06" translate="yes" xml:space="preserve">
          <source>Shortens the vector, keeping the first &lt;code&gt;len&lt;/code&gt; elements and dropping the rest.</source>
          <target state="translated">缩短向量，保留前 &lt;code&gt;len&lt;/code&gt; 个元素，删除其余len个元素。</target>
        </trans-unit>
        <trans-unit id="ddd2f2ef3c60685bbea8a983f9758868186426bf" translate="yes" xml:space="preserve">
          <source>Shortens this &lt;code&gt;String&lt;/code&gt; to the specified length.</source>
          <target state="translated">将此 &lt;code&gt;String&lt;/code&gt; 缩短为指定的长度。</target>
        </trans-unit>
        <trans-unit id="5433cd73ac014316d0b32695693eab5029601309" translate="yes" xml:space="preserve">
          <source>Shorthand</source>
          <target state="translated">Shorthand</target>
        </trans-unit>
        <trans-unit id="cc23e4ff4c1d8e274c5ed8343ec98d723d9f8289" translate="yes" xml:space="preserve">
          <source>Shorthand syntax can be used without specifying a type, which have the following equivalents:</source>
          <target state="translated">可以在不指定类型的情况下使用速记语法,速记语法有以下等价物。</target>
        </trans-unit>
        <trans-unit id="3b952e9b07b3fe0b117ef7067ea04f65566f57e1" translate="yes" xml:space="preserve">
          <source>Shouldn't you fix the old borrow checker?</source>
          <target state="translated">你是不是应该修一下老的借贷检查器?</target>
        </trans-unit>
        <trans-unit id="ae48efbc4001279fcd3b5db13e51b3c64358a064" translate="yes" xml:space="preserve">
          <source>Showing Function Output</source>
          <target state="translated">显示功能输出</target>
        </trans-unit>
        <trans-unit id="dd82155a8b68da09dce5b73bc5ba683be2a2e6bb" translate="yes" xml:space="preserve">
          <source>Shown above are the three typical forms an &lt;code&gt;if&lt;/code&gt; block comes in. First is the usual kind of thing you'd see in many languages, with an optional &lt;code&gt;else&lt;/code&gt; block. Second uses &lt;code&gt;if&lt;/code&gt; as an expression, which is only possible if all branches return the same type. An &lt;code&gt;if&lt;/code&gt; expression can be used everywhere you'd expect. The third kind of &lt;code&gt;if&lt;/code&gt; block is an &lt;code&gt;if let&lt;/code&gt; block, which behaves similarly to using a &lt;code&gt;match&lt;/code&gt; expression:</source>
          <target state="translated">上面显示的是 &lt;code&gt;if&lt;/code&gt; 块进入的三种典型形式。第一种是您会在多种语言中看到的常见形式，带有一个可选的 &lt;code&gt;else&lt;/code&gt; 块。Second使用 &lt;code&gt;if&lt;/code&gt; 作为表达式，只有在所有分支都返回相同类型时才可能使用。一个 &lt;code&gt;if&lt;/code&gt; 表达式可以到处使用你所期望的。第三种 &lt;code&gt;if&lt;/code&gt; 块是 &lt;code&gt;if let&lt;/code&gt; 块，其行为类似于使用 &lt;code&gt;match&lt;/code&gt; 表达式：</target>
        </trans-unit>
        <trans-unit id="96b7fb4e78da868e0c9827ccb76f419e702be96d" translate="yes" xml:space="preserve">
          <source>Shr</source>
          <target state="translated">Shr</target>
        </trans-unit>
        <trans-unit id="f36c07d10a129025ed6f7de89f17c89f5fa79a78" translate="yes" xml:space="preserve">
          <source>Shr::shr</source>
          <target state="translated">Shr::shr</target>
        </trans-unit>
        <trans-unit id="3f1f217f4b2181edd79493260631c2539d4caaba" translate="yes" xml:space="preserve">
          <source>ShrAssign</source>
          <target state="translated">ShrAssign</target>
        </trans-unit>
        <trans-unit id="2255ac6ebcd241085e280eb2295078d441bdda79" translate="yes" xml:space="preserve">
          <source>ShrAssign::shr_assign</source>
          <target state="translated">ShrAssign::shr_assign</target>
        </trans-unit>
        <trans-unit id="182a6a62df03a168a7f6aa9aee943c5b1852df36" translate="yes" xml:space="preserve">
          <source>ShrEq</source>
          <target state="translated">ShrEq</target>
        </trans-unit>
        <trans-unit id="a2e8287961bf4d750e060a317afad9275baac758" translate="yes" xml:space="preserve">
          <source>Shrink or grow a block of memory to the given &lt;code&gt;new_size&lt;/code&gt;. The block is described by the given &lt;code&gt;ptr&lt;/code&gt; pointer and &lt;code&gt;layout&lt;/code&gt;.</source>
          <target state="translated">将内存块缩小或增加到给定的 &lt;code&gt;new_size&lt;/code&gt; 。该块由给定的 &lt;code&gt;ptr&lt;/code&gt; 指针和 &lt;code&gt;layout&lt;/code&gt; 描述。</target>
        </trans-unit>
        <trans-unit id="b4f3cd5485206277c6c062154ec892c9fa28a869" translate="yes" xml:space="preserve">
          <source>Shrink or grow a block of memory to the given &lt;code&gt;new_size&lt;/code&gt;. The block is described by the given &lt;code&gt;ptr&lt;/code&gt; pointer and &lt;code&gt;layout&lt;/code&gt;. &lt;a href=&quot;trait.globalalloc#method.realloc&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">将内存块缩小或增加到给定的 &lt;code&gt;new_size&lt;/code&gt; 。该块由给定的 &lt;code&gt;ptr&lt;/code&gt; 指针和 &lt;code&gt;layout&lt;/code&gt; 描述。&lt;a href=&quot;trait.globalalloc#method.realloc&quot;&gt;阅读更多&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c20b48c0ee956dcfaa9d46479585794f19c8eebb" translate="yes" xml:space="preserve">
          <source>Shrinks the capacity of the &lt;code&gt;OsString&lt;/code&gt; to match its length.</source>
          <target state="translated">缩小 &lt;code&gt;OsString&lt;/code&gt; 的容量以匹配其长度。</target>
        </trans-unit>
        <trans-unit id="1efdcc127416c637cab6f872bfd7932d82d4f999" translate="yes" xml:space="preserve">
          <source>Shrinks the capacity of the &lt;code&gt;OsString&lt;/code&gt; with a lower bound.</source>
          <target state="translated">使用下限缩小 &lt;code&gt;OsString&lt;/code&gt; 的容量。</target>
        </trans-unit>
        <trans-unit id="5375857e16ae324dfb1997e42702f7399cf86d21" translate="yes" xml:space="preserve">
          <source>Shrinks the capacity of the &lt;code&gt;VecDeque&lt;/code&gt; as much as possible.</source>
          <target state="translated">尽可能 &lt;code&gt;VecDeque&lt;/code&gt; 的容量。</target>
        </trans-unit>
        <trans-unit id="cf5ab0cc658b57dad7fbe1c6d97a13265747811a" translate="yes" xml:space="preserve">
          <source>Shrinks the capacity of the &lt;code&gt;VecDeque&lt;/code&gt; with a lower bound.</source>
          <target state="translated">降低 &lt;code&gt;VecDeque&lt;/code&gt; 的容量。</target>
        </trans-unit>
        <trans-unit id="f7e75e702aa678b2c8afd319c5f7d6e708e14fc4" translate="yes" xml:space="preserve">
          <source>Shrinks the capacity of the map as much as possible. It will drop down as much as possible while maintaining the internal rules and possibly leaving some space in accordance with the resize policy.</source>
          <target state="translated">尽可能的缩小地图的容量。在保持内部规则的前提下,会尽可能的往下掉,可能会按照调整大小的策略留下一些空间。</target>
        </trans-unit>
        <trans-unit id="a73d69b53df9ccbc822b8b0d7db2eb53f35372a9" translate="yes" xml:space="preserve">
          <source>Shrinks the capacity of the map with a lower limit. It will drop down no lower than the supplied limit while maintaining the internal rules and possibly leaving some space in accordance with the resize policy.</source>
          <target state="translated">缩小地图的容量,并设置下限。在保持内部规则的前提下,它的下限不会低于提供的下限,并可能根据调整大小的策略留下一些空间。</target>
        </trans-unit>
        <trans-unit id="f6a7222c172a077d372006fe5331fabe3d3a3bb9" translate="yes" xml:space="preserve">
          <source>Shrinks the capacity of the set as much as possible. It will drop down as much as possible while maintaining the internal rules and possibly leaving some space in accordance with the resize policy.</source>
          <target state="translated">尽可能的缩小集的容量。在保持内部规则的前提下,会尽量往下掉,可能会按照调整大小的策略留下一些空间。</target>
        </trans-unit>
        <trans-unit id="41858f7da9677542d00322810b88fc317754e30d" translate="yes" xml:space="preserve">
          <source>Shrinks the capacity of the set with a lower limit. It will drop down no lower than the supplied limit while maintaining the internal rules and possibly leaving some space in accordance with the resize policy.</source>
          <target state="translated">以下限收缩集的容量。在保持内部规则的同时,它的下限不会低于所提供的限制,并可能根据调整大小的策略留下一些空间。</target>
        </trans-unit>
        <trans-unit id="f2755abeb335e151fc605b5e1aa1b06db921994c" translate="yes" xml:space="preserve">
          <source>Shrinks the capacity of the vector as much as possible.</source>
          <target state="translated">尽可能的缩小矢量的容量。</target>
        </trans-unit>
        <trans-unit id="866f94bf32c3c6585c11a10955ec4880b640599a" translate="yes" xml:space="preserve">
          <source>Shrinks the capacity of the vector with a lower bound.</source>
          <target state="translated">以下限收缩向量的容量。</target>
        </trans-unit>
        <trans-unit id="884255f5ec002cc73e9d4491a38d215fe85e8f07" translate="yes" xml:space="preserve">
          <source>Shrinks the capacity of this &lt;code&gt;String&lt;/code&gt; to match its length.</source>
          <target state="translated">缩小此 &lt;code&gt;String&lt;/code&gt; 的容量以使其长度匹配。</target>
        </trans-unit>
        <trans-unit id="7729558eff0a7d6641a344899c70cf2659a69f1c" translate="yes" xml:space="preserve">
          <source>Shrinks the capacity of this &lt;code&gt;String&lt;/code&gt; with a lower bound.</source>
          <target state="translated">使用下限缩小此 &lt;code&gt;String&lt;/code&gt; 的容量。</target>
        </trans-unit>
        <trans-unit id="f16273e2258552ff78d0e39e1cd8d789c334fb49" translate="yes" xml:space="preserve">
          <source>Shut down the read, write, or both halves of this connection.</source>
          <target state="translated">关闭这个连接的读、写或两半。</target>
        </trans-unit>
        <trans-unit id="7fddb7d8d1d60b1eeefa9af01082e0811d4b484d" translate="yes" xml:space="preserve">
          <source>Shutdown</source>
          <target state="translated">Shutdown</target>
        </trans-unit>
        <trans-unit id="fabfdc53cc8b2f529866f21ba7c330d11cb0d9e3" translate="yes" xml:space="preserve">
          <source>Shutdown::borrow</source>
          <target state="translated">Shutdown::borrow</target>
        </trans-unit>
        <trans-unit id="5a9c75f496ce5fe9fb60bc9bcf25af7721cda69e" translate="yes" xml:space="preserve">
          <source>Shutdown::borrow_mut</source>
          <target state="translated">Shutdown::borrow_mut</target>
        </trans-unit>
        <trans-unit id="7f592764c49224c545a0438c226f21d982d4c009" translate="yes" xml:space="preserve">
          <source>Shutdown::clone</source>
          <target state="translated">Shutdown::clone</target>
        </trans-unit>
        <trans-unit id="e36a6bb7a2896af9fd3bebae97a483df5b95a5f7" translate="yes" xml:space="preserve">
          <source>Shutdown::clone_from</source>
          <target state="translated">Shutdown::clone_from</target>
        </trans-unit>
        <trans-unit id="a45f057caba64efa0a9d4675e1c38314b625f074" translate="yes" xml:space="preserve">
          <source>Shutdown::clone_into</source>
          <target state="translated">Shutdown::clone_into</target>
        </trans-unit>
        <trans-unit id="d813e9bf46e7c81fc5799513f15d5397083ba019" translate="yes" xml:space="preserve">
          <source>Shutdown::eq</source>
          <target state="translated">Shutdown::eq</target>
        </trans-unit>
        <trans-unit id="e80f887be13571a33861afe3c0e47bb311b6f4c9" translate="yes" xml:space="preserve">
          <source>Shutdown::fmt</source>
          <target state="translated">Shutdown::fmt</target>
        </trans-unit>
        <trans-unit id="4a8fa437b5bb408022ca927b5a21b3e3ae6559e4" translate="yes" xml:space="preserve">
          <source>Shutdown::from</source>
          <target state="translated">Shutdown::from</target>
        </trans-unit>
        <trans-unit id="f19f6cd7ccdb5181c93271062d07ff63717634e0" translate="yes" xml:space="preserve">
          <source>Shutdown::into</source>
          <target state="translated">Shutdown::into</target>
        </trans-unit>
        <trans-unit id="adbe53901f9e868771630cf338a14fad559e4103" translate="yes" xml:space="preserve">
          <source>Shutdown::ne</source>
          <target state="translated">Shutdown::ne</target>
        </trans-unit>
        <trans-unit id="a19a47443edf4ef55ec746d90cb8acc1aa93a945" translate="yes" xml:space="preserve">
          <source>Shutdown::to_owned</source>
          <target state="translated">Shutdown::to_owned</target>
        </trans-unit>
        <trans-unit id="8323a24a68d991e914c3f3df7846d2d7061b5328" translate="yes" xml:space="preserve">
          <source>Shutdown::try_from</source>
          <target state="translated">Shutdown::try_from</target>
        </trans-unit>
        <trans-unit id="16444bbdd0bcc5aef40242a6445faf40136e6cf5" translate="yes" xml:space="preserve">
          <source>Shutdown::try_into</source>
          <target state="translated">Shutdown::try_into</target>
        </trans-unit>
        <trans-unit id="4349539edfc1eb706cb0a1b24d07db1a042d53a3" translate="yes" xml:space="preserve">
          <source>Shutdown::type_id</source>
          <target state="translated">Shutdown::type_id</target>
        </trans-unit>
        <trans-unit id="77317819ad1195b76b8414b5deebf1e238ce5a9c" translate="yes" xml:space="preserve">
          <source>Shuts down the read, write, or both halves of this connection.</source>
          <target state="translated">关闭该连接的读、写或两半。</target>
        </trans-unit>
        <trans-unit id="ac15b088947f5be00e8e8573eba4c4a716935fa1" translate="yes" xml:space="preserve">
          <source>Sign/&lt;code&gt;#&lt;/code&gt;/&lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">Sign/&lt;code&gt;#&lt;/code&gt;/&lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ed1f48fc84cca9ffbe6a5cc1d6f3512080246462" translate="yes" xml:space="preserve">
          <source>Signaling to the Threads to Stop Listening for Jobs</source>
          <target state="translated">给线程发信号,让他不要再听工作了。</target>
        </trans-unit>
        <trans-unit id="1873c23eef44d368cb455909e4c7bf540ce35eef" translate="yes" xml:space="preserve">
          <source>Signals the processor that it is entering a busy-wait spin-loop.</source>
          <target state="translated">标志着处理器进入了一个繁忙等待的自旋循环。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
