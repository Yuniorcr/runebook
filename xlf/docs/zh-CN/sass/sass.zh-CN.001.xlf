<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="sass">
    <body>
      <group id="sass">
        <trans-unit id="9f6278f535575365d6ae2446c75999acd141c0e5" translate="yes" xml:space="preserve">
          <source>!default</source>
          <target state="translated">!default</target>
        </trans-unit>
        <trans-unit id="6116fd83c5f82a4ce8e4ad557bad39b37d183075" translate="yes" xml:space="preserve">
          <source>!optional</source>
          <target state="translated">!optional</target>
        </trans-unit>
        <trans-unit id="141c5f6cf6af9e5586d387e1f222e769c87da083" translate="yes" xml:space="preserve">
          <source>#always_check-option &lt;code&gt;:always_check&lt;/code&gt; : Whether a Sass template should be checked for updates every time a controller is accessed, as opposed to only when the server starts. If a Sass template has been updated, it will be recompiled and will overwrite the corresponding CSS file. Defaults to false in production mode, true otherwise. Only has meaning within Rack, Ruby on Rails, or Merb.</source>
          <target state="translated">＃always_check-option &lt;code&gt;:always_check&lt;/code&gt; ：每次访问控制器时（而不是仅在服务器启动时）是否应该检查Sass模板的更新。如果已经更新了Sass模板，它将被重新编译并覆盖相应的CSS文件。在生产模式下默认为false，否则为true。仅在Rack，Ruby on Rails或Merb中具有含义。</target>
        </trans-unit>
        <trans-unit id="6de5570f6ef43723ca3a057e19f33fa112691f02" translate="yes" xml:space="preserve">
          <source>#always_update-option &lt;code&gt;:always_update&lt;/code&gt; : Whether the CSS files should be updated every time a controller is accessed, as opposed to only when the template has been modified. Defaults to false. Only has meaning within Rack, Ruby on Rails, or Merb.</source>
          <target state="translated">＃always_update-option &lt;code&gt;:always_update&lt;/code&gt; ：每次访问控制器时是否应该更新CSS文件，而不是仅在修改模板后才更新。默认为false。仅在Rack，Ruby on Rails或Merb中具有含义。</target>
        </trans-unit>
        <trans-unit id="0a92e53e68d9430d141f0949edf00ddc030929c0" translate="yes" xml:space="preserve">
          <source>#cache-option &lt;code&gt;:cache&lt;/code&gt; : Whether parsed Sass files should be cached, allowing greater speed. Defaults to true.</source>
          <target state="translated">＃cache-option &lt;code&gt;:cache&lt;/code&gt; ：是否应缓存已解析的Sass文件，以提高速度。默认为true。</target>
        </trans-unit>
        <trans-unit id="96449c86b38d96310127d957ab001771b5822a03" translate="yes" xml:space="preserve">
          <source>#cache_location-option &lt;code&gt;:cache_location&lt;/code&gt; : The path where the cached &lt;code&gt;sassc&lt;/code&gt; files should be written to. Defaults to &lt;code&gt;&quot;./tmp/sass-cache&quot;&lt;/code&gt; in Rails and Merb, or &lt;code&gt;&quot;./.sass-cache&quot;&lt;/code&gt; otherwise. If the &lt;a href=&quot;#cache_location-option&quot;&gt;&lt;code&gt;:cache_store&lt;/code&gt; option&lt;/a&gt; is set, this is ignored.</source>
          <target state="translated">＃cache_location-option &lt;code&gt;:cache_location&lt;/code&gt; ：应该将缓存的 &lt;code&gt;sassc&lt;/code&gt; 文件写入的路径。在Rails和Merb中，默认值为 &lt;code&gt;&quot;./tmp/sass-cache&quot;&lt;/code&gt; ，否则为 &lt;code&gt;&quot;./.sass-cache&quot;&lt;/code&gt; 。如果设置&lt;a href=&quot;#cache_location-option&quot;&gt; &lt;code&gt;:cache_store&lt;/code&gt; 选项&lt;/a&gt;，则将其忽略。</target>
        </trans-unit>
        <trans-unit id="cebc8d08a3dde224143e938654f2fe4911d26fd2" translate="yes" xml:space="preserve">
          <source>#cache_store-option &lt;code&gt;:cache_store&lt;/code&gt; : If this is set to an instance of a subclass of &lt;a href=&quot;http://sass-lang.com/documentation/Sass/CacheStores/Base.html&quot;&gt;Sass::CacheStores::Base&lt;/a&gt;, that cache store will be used to store and retrieve cached compilation results. Defaults to a &lt;a href=&quot;http://sass-lang.com/documentation/Sass/CacheStores/Filesystem.html&quot;&gt;Sass::CacheStores::Filesystem&lt;/a&gt; that is initialized using the &lt;a href=&quot;#cache_location-option&quot;&gt;&lt;code&gt;:cache_location&lt;/code&gt; option&lt;/a&gt;.</source>
          <target state="translated">＃cache_store-option &lt;code&gt;:cache_store&lt;/code&gt; ：如果将其设置为&lt;a href=&quot;http://sass-lang.com/documentation/Sass/CacheStores/Base.html&quot;&gt;Sass :: CacheStores :: Base&lt;/a&gt;的子类的实例，则该缓存存储区将用于存储和检索缓存的编译结果。默认为使用&lt;a href=&quot;#cache_location-option&quot;&gt; &lt;code&gt;:cache_location&lt;/code&gt; &lt;/a&gt;选项初始化的&lt;a href=&quot;http://sass-lang.com/documentation/Sass/CacheStores/Filesystem.html&quot;&gt;Sass :: CacheStores :: Filesystem&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8553a0ce985fb3bb419f04ac3838b720df1d6db5" translate="yes" xml:space="preserve">
          <source>#css_location-option &lt;code&gt;:css_location&lt;/code&gt; : The path where CSS output should be written to. This option is ignored when &lt;code&gt;:template_location&lt;/code&gt; is a Hash. Defaults to &lt;code&gt;&quot;./public/stylesheets&quot;&lt;/code&gt;. Only has meaning within Rack, Ruby on Rails, or Merb.</source>
          <target state="translated">＃css_location-option &lt;code&gt;:css_location&lt;/code&gt; ：CSS输出应写入的路径。 &lt;code&gt;:template_location&lt;/code&gt; 为哈希值时，将忽略此选项。默认为 &lt;code&gt;&quot;./public/stylesheets&quot;&lt;/code&gt; 。仅在Rack，Ruby on Rails或Merb中具有含义。</target>
        </trans-unit>
        <trans-unit id="1d88905503b9764a7e3efc0cca83ca78a90310f6" translate="yes" xml:space="preserve">
          <source>#custom-option &lt;code&gt;:custom&lt;/code&gt; : An option that's available for individual applications to set to make data available to &lt;a href=&quot;sass/script/functions&quot;&gt;custom Sass functions&lt;/a&gt;.</source>
          <target state="translated">＃custom-option &lt;code&gt;:custom&lt;/code&gt; ：该选项可用于单个应用程序以设置为使数据可用于&lt;a href=&quot;sass/script/functions&quot;&gt;自定义Sass函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c168270c87ee1c2d0232794df74ecf578bbb5ec5" translate="yes" xml:space="preserve">
          <source>#debug_info-option &lt;code&gt;:debug_info&lt;/code&gt; : When set to true, causes the line number and file where a selector is defined to be emitted into the compiled CSS in a format that can be understood by the browser. Useful in conjunction with &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/103988&quot;&gt;the FireSass Firebug extension&lt;/a&gt; for displaying the Sass filename and line number. Automatically disabled when using the &lt;code&gt;:compressed&lt;/code&gt; output style.</source>
          <target state="translated">＃debug_info-option &lt;code&gt;:debug_info&lt;/code&gt; ：设置为true时，将以浏览器可以理解的格式将定义选择器的行号和文件发射到编译的CSS中。与&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/103988&quot;&gt;FireSass Firebug扩展程序&lt;/a&gt;结合使用，用于显示Sass文件名和行号。使用 &lt;code&gt;:compressed&lt;/code&gt; 输出样式时自动禁用。</target>
        </trans-unit>
        <trans-unit id="d15460d12b3e17b555dc5075e097ab929be4447b" translate="yes" xml:space="preserve">
          <source>#division-and-slash</source>
          <target state="translated">#division-and-slash</target>
        </trans-unit>
        <trans-unit id="233d126c1f91c71f6986c8eb8788b825e79151d3" translate="yes" xml:space="preserve">
          <source>#filename-option &lt;code&gt;:filename&lt;/code&gt; : The filename of the file being rendered. This is used solely for reporting errors, and is automatically set when using Rack, Rails, or Merb.</source>
          <target state="translated">＃filename-option &lt;code&gt;:filename&lt;/code&gt; ：正在渲染的文件的文件名。它仅用于报告错误，在使用Rack，Rails或Merb时会自动设置。</target>
        </trans-unit>
        <trans-unit id="2967d557baa920d640e2458c899b862bc0678414" translate="yes" xml:space="preserve">
          <source>#filesystem_importer-option &lt;code&gt;:filesystem_importer&lt;/code&gt; : A &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass::Importers::Base&lt;/a&gt; subclass used to handle plain string load paths. This should import files from the filesystem. It should be a Class object inheriting from &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass::Importers::Base&lt;/a&gt; with a constructor that takes a single string argument (the load path). Defaults to &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Filesystem.html&quot;&gt;Sass::Importers::Filesystem&lt;/a&gt;.</source>
          <target state="translated">＃filesystem_importer-option &lt;code&gt;:filesystem_importer&lt;/code&gt; ：一个&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass :: Importers :: Base&lt;/a&gt;子类，用于处理纯字符串加载路径。这应该从文件系统导入文件。它应该是一个继承自&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass :: Importers :: Base&lt;/a&gt;的Class对象，其构造函数采用单个字符串参数（加载路径）。默认为&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Filesystem.html&quot;&gt;Sass :: Importers :: Filesystem&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1ac422027191c7648b475ea43b06960ac13ba3c4" translate="yes" xml:space="preserve">
          <source>#full_exception-option &lt;code&gt;:full_exception&lt;/code&gt; : Whether an error in the Sass code should cause Sass to provide a detailed description within the generated CSS file. If set to true, the error will be displayed along with a line number and source snippet both as a comment in the CSS file and at the top of the page (in supported browsers). Otherwise, an exception will be raised in the Ruby code. Defaults to false in production mode, true otherwise.</source>
          <target state="translated">＃full_exception-option &lt;code&gt;:full_exception&lt;/code&gt; ：Sass代码中的错误是否应导致Sass在生成的CSS文件中提供详细描述。如果设置为true，则错误将与行号和源代码片段一起显示为CSS文件中和页面顶部（在受支持的浏览器中）的注释。否则，将在Ruby代码中引发异常。在生产模式下默认为false，否则为true。</target>
        </trans-unit>
        <trans-unit id="3d5cc64e06e6ce421caa10dc2115676b1e9ea44f" translate="yes" xml:space="preserve">
          <source>#interpolation_</source>
          <target state="translated">#interpolation_</target>
        </trans-unit>
        <trans-unit id="684155f2e92f3b646c7de53eb5126babf1092f73" translate="yes" xml:space="preserve">
          <source>#line-option &lt;code&gt;:line&lt;/code&gt; : The number of the first line of the Sass template. Used for reporting line numbers for errors. This is useful to set if the Sass template is embedded in a Ruby file.</source>
          <target state="translated">＃line-option &lt;code&gt;:line&lt;/code&gt; ：Sass模板第一行的编号。用于报告错误的行号。这对于设置Sass模板是否嵌入在Ruby文件中很有用。</target>
        </trans-unit>
        <trans-unit id="7fcd20bfac67fd4158191ee3b71b2ce93362fa1f" translate="yes" xml:space="preserve">
          <source>#line_numbers-option &lt;code&gt;:line_numbers&lt;/code&gt; : When set to true, causes the line number and file where a selector is defined to be emitted into the compiled CSS as a comment. Useful for debugging, especially when using imports and mixins. This option may also be called &lt;code&gt;:line_comments&lt;/code&gt;. Automatically disabled when using the &lt;code&gt;:compressed&lt;/code&gt; output style or the &lt;code&gt;:debug_info&lt;/code&gt;/&lt;code&gt;:trace_selectors&lt;/code&gt; options.</source>
          <target state="translated">＃line_numbers-option &lt;code&gt;:line_numbers&lt;/code&gt; ：设置为true时，将将定义选择器的行号和文件作为注释发送到已编译的CSS中。对于调试非常有用，尤其是在使用导入和混入时。此选项也可以称为 &lt;code&gt;:line_comments&lt;/code&gt; 。使用时自动禁用 &lt;code&gt;:compressed&lt;/code&gt; 输出样式或 &lt;code&gt;:debug_info&lt;/code&gt; / &lt;code&gt;:trace_selectors&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="f9c9a4c169deb174a5436923f245df12dcb0d579" translate="yes" xml:space="preserve">
          <source>#load_paths-option &lt;code&gt;:load_paths&lt;/code&gt; : An array of filesystem paths or importers which should be searched for Sass templates imported with the &lt;a href=&quot;#import&quot;&gt;&lt;code&gt;@import&lt;/code&gt;&lt;/a&gt; directive. These may be strings, &lt;code&gt;Pathname&lt;/code&gt; objects, or subclasses of &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass::Importers::Base&lt;/a&gt;. This defaults to the working directory and, in Rack, Rails, or Merb, whatever &lt;code&gt;:template_location&lt;/code&gt; is. The load path is also informed by &lt;a href=&quot;http://sass-lang.com/documentation/Sass.html#load_paths-class_method&quot;&gt;Sass.load_paths&lt;/a&gt; and the &lt;code&gt;SASS_PATH&lt;/code&gt; environment variable.</source>
          <target state="translated">＃load_paths-option &lt;code&gt;:load_paths&lt;/code&gt; ：应搜索文件系统路径或导入器的数组，以查找使用&lt;a href=&quot;#import&quot;&gt; &lt;code&gt;@import&lt;/code&gt; &lt;/a&gt;指令导入的Sass模板。这些可以是字符串， &lt;code&gt;Pathname&lt;/code&gt; 对象或&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass :: Importers :: Base的&lt;/a&gt;子类。默认为工作目录，在Rack，Rails或Merb中，无论 &lt;code&gt;:template_location&lt;/code&gt; 是什么。加载路径还由&lt;a href=&quot;http://sass-lang.com/documentation/Sass.html#load_paths-class_method&quot;&gt;Sass.load_paths&lt;/a&gt;和 &lt;code&gt;SASS_PATH&lt;/code&gt; 环境变量通知。</target>
        </trans-unit>
        <trans-unit id="8992043141768d709b549d5249a9a18d9394da2c" translate="yes" xml:space="preserve">
          <source>#never_update-option &lt;code&gt;:never_update&lt;/code&gt; : Whether the CSS files should never be updated, even if the template file changes. Setting this to true may give small performance gains. It always defaults to false. Only has meaning within Rack, Ruby on Rails, or Merb.</source>
          <target state="translated">＃never_update-option &lt;code&gt;:never_update&lt;/code&gt; ：即使模板文件发生更改，是否也不应更新CSS文件。将此设置为true可能会带来较小的性能提升。它始终默认为false。仅在Rack，Ruby on Rails或Merb中具有含义。</target>
        </trans-unit>
        <trans-unit id="d6c66337267a87b1c4ed6b9fca9b0cda5799a358" translate="yes" xml:space="preserve">
          <source>#poll-option &lt;code&gt;:poll&lt;/code&gt; : When true, always use the polling backend for &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Compiler.html#watch-instance_method&quot;&gt;Sass::Plugin::Compiler#watch&lt;/a&gt; rather than the native filesystem backend.</source>
          <target state="translated">＃poll-option &lt;code&gt;:poll&lt;/code&gt; ：为true时，请始终对&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Compiler.html#watch-instance_method&quot;&gt;Sass :: Plugin :: Compiler＃watch&lt;/a&gt;使用轮询后端，而不要使用本机文件系统后端。</target>
        </trans-unit>
        <trans-unit id="ee585d5eda346509bf46836bec08699193d3a1e2" translate="yes" xml:space="preserve">
          <source>#property_syntax-option &lt;code&gt;:property_syntax&lt;/code&gt; : Forces indented-syntax documents to use one syntax for properties. If the correct syntax isn't used, an error is thrown. &lt;code&gt;:new&lt;/code&gt; forces the use of a colon after the property name. For example: &lt;code&gt;color: #0f3&lt;/code&gt; or &lt;code&gt;width: $main_width&lt;/code&gt;. &lt;code&gt;:old&lt;/code&gt; forces the use of a colon before the property name. For example: &lt;code&gt;:color #0f3&lt;/code&gt; or &lt;code&gt;:width $main_width&lt;/code&gt;. By default, either syntax is valid. This has no effect on SCSS documents.</source>
          <target state="translated">＃property_syntax-option &lt;code&gt;:property_syntax&lt;/code&gt; ：强制缩进语法文件对属性使用一种语法。如果未使用正确的语法，则会引发错误。 &lt;code&gt;:new&lt;/code&gt; 强制在属性名称后使用冒号。例如： &lt;code&gt;color: #0f3&lt;/code&gt; 或 &lt;code&gt;width: $main_width&lt;/code&gt; 。 &lt;code&gt;:old&lt;/code&gt; 强制在属性名称前使用冒号。例如：： &lt;code&gt;:color #0f3&lt;/code&gt; 或 &lt;code&gt;:width $main_width&lt;/code&gt; 。默认情况下，这两种语法均有效。这对SCSS文档没有影响。</target>
        </trans-unit>
        <trans-unit id="cb5035eab7c9fa2b2eb85ae8f7a08c845134bfe9" translate="yes" xml:space="preserve">
          <source>#quiet-option &lt;code&gt;:quiet&lt;/code&gt; : When set to true, causes warnings to be disabled.</source>
          <target state="translated">＃quiet-option &lt;code&gt;:quiet&lt;/code&gt; ：设置为true时，将禁用警告。</target>
        </trans-unit>
        <trans-unit id="ae620e66b80bd00aa7f8e74e671c6335b559014e" translate="yes" xml:space="preserve">
          <source>#read_cache-option &lt;code&gt;:read_cache&lt;/code&gt; : If this is set and &lt;code&gt;:cache&lt;/code&gt; is not, only read the Sass cache if it exists, don't write to it if it doesn't.</source>
          <target state="translated">＃read_cache-option &lt;code&gt;:read_cache&lt;/code&gt; ：如果设置了该参数，而 &lt;code&gt;:cache&lt;/code&gt; 没有设置，则仅读取S​​ass缓存（如果存在），否则不写入。</target>
        </trans-unit>
        <trans-unit id="0fdf6d6e3af8c13933d2a757e38fd2716e9776b0" translate="yes" xml:space="preserve">
          <source>#sourcemap-option &lt;code&gt;:sourcemap&lt;/code&gt; : Controls how sourcemaps are generated. These sourcemaps tell the browser how to find the Sass styles that caused each CSS style to be generated. This has three valid values: &lt;strong&gt;&lt;code&gt;:auto&lt;/code&gt;** uses relative URIs where possible, assuming that that the source stylesheets will be made available on whatever server you're using, and that their relative location will be the same as it is on the local filesystem. If a relative URI is unavailable, a &quot;file:&quot; URI is used instead. **&lt;code&gt;:file&lt;/code&gt;** always uses &quot;file:&quot; URIs, which will work locally but can't be deployed to a remote server. **&lt;code&gt;:inline&lt;/code&gt;** includes the full source text in the sourcemap, which is maximally portable but can create very large sourcemap files. Finally, **&lt;code&gt;:none&lt;/code&gt;&lt;/strong&gt; causes no sourcemaps to be generated at all.</source>
          <target state="translated">＃sourcemap-option &lt;code&gt;:sourcemap&lt;/code&gt; ：控制如何生成源地图。这些源映射告诉浏览器如何找到导致生成每种CSS样式的Sass样式。它具有三个有效值&lt;strong&gt; &lt;code&gt;:auto&lt;/code&gt; **在可能的情况下使用相对URI，假定源样式表将在您使用的任何服务器上可用，并且它们的相对位置将与本地文件系统上的相同。 。如果相对URI不可用，则使用&amp;ldquo;文件：&amp;rdquo; URI代替。 ** &lt;code&gt;:file&lt;/code&gt; **始终使用&amp;ldquo; file：&amp;rdquo; URI，它将在本地运行，但不能部署到远程服务器。 ** &lt;code&gt;:inline&lt;/code&gt; **在源图中包含完整的源文本，这是最大的可移植性，但可以创建非常大的源图文件。最后，** &lt;code&gt;:none&lt;/code&gt; &lt;/strong&gt;根本不会生成任何源映射。</target>
        </trans-unit>
        <trans-unit id="c5d25032e70476f124aabc345d095918193a6df3" translate="yes" xml:space="preserve">
          <source>#style-option &lt;code&gt;:style&lt;/code&gt; : Sets the style of the CSS output. See &lt;a href=&quot;#output_style&quot;&gt;Output Style&lt;/a&gt;.</source>
          <target state="translated">＃style-option &lt;code&gt;:style&lt;/code&gt; ：设置CSS输出的样式。请参见&lt;a href=&quot;#output_style&quot;&gt;输出样式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dbaf6c23633f779db75c33dcebe15c6e3993fea6" translate="yes" xml:space="preserve">
          <source>#subtraction</source>
          <target state="translated">#subtraction</target>
        </trans-unit>
        <trans-unit id="269503caa16ee2d7c0ff1ee9f85bb37e9b687c77" translate="yes" xml:space="preserve">
          <source>#syntax-option &lt;code&gt;:syntax&lt;/code&gt; : The syntax of the input file, &lt;code&gt;:sass&lt;/code&gt; for the indented syntax and &lt;code&gt;:scss&lt;/code&gt; for the CSS-extension syntax. This is only useful when you're constructing &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Engine.html&quot;&gt;Sass::Engine&lt;/a&gt; instances yourself; it's automatically set properly when using &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin.html&quot;&gt;Sass::Plugin&lt;/a&gt;. Defaults to &lt;code&gt;:sass&lt;/code&gt;.</source>
          <target state="translated">＃syntax-option &lt;code&gt;:syntax&lt;/code&gt; ：输入文件的语法， &lt;code&gt;:sass&lt;/code&gt; 表示缩进语法，而 &lt;code&gt;:scss&lt;/code&gt; 表示CSS扩展语法。这仅在您自己构造&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Engine.html&quot;&gt;Sass :: Engine&lt;/a&gt;实例时才有用。使用&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin.html&quot;&gt;Sass :: Plugin&lt;/a&gt;时会自动正确设置。默认为 &lt;code&gt;:sass&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff5aa8b0e797ba28399be350087dd6975fae32a3" translate="yes" xml:space="preserve">
          <source>#template_location-option &lt;code&gt;:template_location&lt;/code&gt; : A path to the root sass template directory for your application. If a hash, &lt;code&gt;:css_location&lt;/code&gt; is ignored and this option designates a mapping between input and output directories. May also be given a list of 2-element lists, instead of a hash. Defaults to &lt;code&gt;css_location + &quot;/sass&quot;&lt;/code&gt;. Only has meaning within Rack, Ruby on Rails, or Merb. Note that if multiple template locations are specified, all of them are placed in the import path, allowing you to import between them. &lt;strong&gt;Note that due to the many possible formats it can take, this option should only be set directly, not accessed or modified. Use the &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#template_location_array-instance_method&quot;&gt;Sass::Plugin#template_location_array&lt;/a&gt;, &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#add_template_location-instance_method&quot;&gt;Sass::Plugin#add_template_location&lt;/a&gt;, and &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#remove_template_location-instance_method&quot;&gt;Sass::Plugin#remove_template_location&lt;/a&gt; methods instead&lt;/strong&gt;.</source>
          <target state="translated">＃template_location-option &lt;code&gt;:template_location&lt;/code&gt; ：应用程序的根sass模板目录的路径。如果是散列， &lt;code&gt;:css_location&lt;/code&gt; 将被忽略，并且此选项指定输入和输出目录之间的映射。也可能会给定2元素列表的列表，而不是哈希。默认为 &lt;code&gt;css_location + &quot;/sass&quot;&lt;/code&gt; 。仅在Rack，Ruby on Rails或Merb中具有含义。请注意，如果指定了多个模板位置，则将它们全部放置在导入路径中，从而允许您在它们之间进行导入。&lt;strong&gt;请注意，由于可能采用多种格式，因此只能直接设置此选项，不得访问或修改。使用&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#template_location_array-instance_method&quot;&gt;Sass :: Plugin＃template_location_array&lt;/a&gt;，&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#add_template_location-instance_method&quot;&gt;Sass :: Plugin＃add_template_location&lt;/a&gt;和&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#remove_template_location-instance_method&quot;&gt;Sass :: Plugin＃remove_template_location&lt;/a&gt;方法代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="d6fd77828774c07f57a00967cc8fa15a060d6fac" translate="yes" xml:space="preserve">
          <source>#trace_selectors-option &lt;code&gt;:trace_selectors&lt;/code&gt; : When set to true, emit a full trace of imports and mixins before each selector. This can be helpful for in-browser debugging of stylesheet imports and mixin includes. This option supersedes the &lt;code&gt;:line_comments&lt;/code&gt; option and is superseded by the &lt;code&gt;:debug_info&lt;/code&gt; option. Automatically disabled when using the &lt;code&gt;:compressed&lt;/code&gt; output style.</source>
          <target state="translated">＃trace_selectors-option &lt;code&gt;:trace_selectors&lt;/code&gt; ：设置为true时，在每个选择器之前发出完整的导入和混合信息。这对于样式表导入和mixin包含的浏览器内调试很有帮助。此选项将取代 &lt;code&gt;:line_comments&lt;/code&gt; 选项，并通过所取代 &lt;code&gt;:debug_info&lt;/code&gt; 选项。使用 &lt;code&gt;:compressed&lt;/code&gt; 输出样式时自动禁用。</target>
        </trans-unit>
        <trans-unit id="71aacad0d2906c2c0488c409f2837f3a5aa9fc8d" translate="yes" xml:space="preserve">
          <source>#unix_newlines-option &lt;code&gt;:unix_newlines&lt;/code&gt; : If true, use Unix-style newlines when writing files. Only has meaning on Windows, and only when Sass is writing the files (in Rack, Rails, or Merb, when using &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin.html&quot;&gt;Sass::Plugin&lt;/a&gt; directly, or when using the command-line executable).</source>
          <target state="translated">＃unix_newlines-option &lt;code&gt;:unix_newlines&lt;/code&gt; ：如果为true，则在写入文件时使用Unix风格的换行符。仅在Windows上具有意义，并且仅在Sass写入文件时（在Rack，Rails或Merb中，直接使用&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin.html&quot;&gt;Sass :: Plugin&lt;/a&gt;或使用命令行可执行文件时）才有意义。</target>
        </trans-unit>
        <trans-unit id="f37d5b2b8edbdb4f237f2eacb3f20c8966dc64ad" translate="yes" xml:space="preserve">
          <source>$alpha(Number)</source>
          <target state="translated">$alpha(Number)</target>
        </trans-unit>
        <trans-unit id="4d2412d42a769aac5124a82c3caf6c6cc4be9005" translate="yes" xml:space="preserve">
          <source>$alpha(Number) &amp;mdash; The adjustment to make on the alpha component, between -1 and 1 inclusive</source>
          <target state="translated">$ alpha（Number）&amp;mdash;对alpha分量进行的调整，介于-1和1之间</target>
        </trans-unit>
        <trans-unit id="e2e3a1f70a1472426d6407e0cd4015604b8fc122" translate="yes" xml:space="preserve">
          <source>$alpha(Number) &amp;mdash; The new alpha component for the color, within 0 and 1 inclusive</source>
          <target state="translated">$ alpha（Number）&amp;mdash;颜色的新alpha分量，在0和1之间（含0和1）</target>
        </trans-unit>
        <trans-unit id="498a6889d7a32497cba8d107624eec4236bdd2be" translate="yes" xml:space="preserve">
          <source>$alpha(Number) &amp;mdash; The new opacity of the color. Must be between 0 and 1 inclusive</source>
          <target state="translated">$ alpha（Number）&amp;mdash;颜色的新不透明度。必须介于0和1之间（含0和1）</target>
        </trans-unit>
        <trans-unit id="41c7a19b5fdd75c8955789523812ea7edb6dcc91" translate="yes" xml:space="preserve">
          <source>$alpha(Number) &amp;mdash; The opacity of the color. Must be between 0 and 1 inclusive</source>
          <target state="translated">$ alpha（Number）&amp;mdash;颜色的不透明度。必须介于0和1之间（含0和1）</target>
        </trans-unit>
        <trans-unit id="bea4ab0c6034d1493ad5fca08ec63de8e868527f" translate="yes" xml:space="preserve">
          <source>$alpha(Number) &amp;mdash; The opacity of the color. Must be between 0 and 1, inclusive</source>
          <target state="translated">$ alpha（Number）&amp;mdash;颜色的不透明度。必须介于0和1之间（含0和1）</target>
        </trans-unit>
        <trans-unit id="bb52e8e3817a52dca24cd68f41362fdc8e344407" translate="yes" xml:space="preserve">
          <source>$amount(Number) &amp;mdash; The amount to decrease the lightness by, between 0% and 100%</source>
          <target state="translated">$ amount（Number）&amp;mdash;降低亮度的量，介于0％和100％之间</target>
        </trans-unit>
        <trans-unit id="0b0e738163b7c2b99a9d5f4be6e7bdd356202b14" translate="yes" xml:space="preserve">
          <source>$amount(Number) &amp;mdash; The amount to decrease the opacity by, between 0 and 1</source>
          <target state="translated">$ amount（Number）&amp;mdash;将不透明度降低0到1之间的数量</target>
        </trans-unit>
        <trans-unit id="73e8003064bc746fdebdd78631c0d1c5ac695d4a" translate="yes" xml:space="preserve">
          <source>$amount(Number) &amp;mdash; The amount to decrease the saturation by, between 0% and 100%</source>
          <target state="translated">$ amount（Number）&amp;mdash;将饱和度降低0％至100％之间的量</target>
        </trans-unit>
        <trans-unit id="1678bb8f277a0af777ad1eb366d0b0519af66939" translate="yes" xml:space="preserve">
          <source>$amount(Number) &amp;mdash; The amount to increase the lightness by, between 0% and 100%</source>
          <target state="translated">$ amount（Number）&amp;mdash;增加亮度的量，介于0％和100％之间</target>
        </trans-unit>
        <trans-unit id="2112feebcd371935a5f8a5e9b7cdfc9ff311946c" translate="yes" xml:space="preserve">
          <source>$amount(Number) &amp;mdash; The amount to increase the opacity by, between 0 and 1</source>
          <target state="translated">$ amount（Number）&amp;mdash;增加不透明度的量，介于0和1之间</target>
        </trans-unit>
        <trans-unit id="1ebd4a14d431639849162a9890ef3737bae97cdd" translate="yes" xml:space="preserve">
          <source>$amount(Number) &amp;mdash; The amount to increase the saturation by, between 0% and 100%</source>
          <target state="translated">$ amount（Number）&amp;mdash;增加饱和度的量，介于0％和100％之间</target>
        </trans-unit>
        <trans-unit id="60b25254e299df6793897a24dc0e7b4b55d0e655" translate="yes" xml:space="preserve">
          <source>$args(ArgList)</source>
          <target state="translated">$args(ArgList)</target>
        </trans-unit>
        <trans-unit id="024be0f6c0d3776afb36b2419bb456298a8f56d9" translate="yes" xml:space="preserve">
          <source>$blue(Number)</source>
          <target state="translated">$blue(Number)</target>
        </trans-unit>
        <trans-unit id="0114bb074a63c8181e56b5fc30af5b5c63cb259d" translate="yes" xml:space="preserve">
          <source>$blue(Number) &amp;mdash; The adjustment to make on the blue component, between -255 and 255 inclusive</source>
          <target state="translated">$ blue（Number）&amp;mdash;对蓝色组件进行的调整，介于-255和255之间（含）</target>
        </trans-unit>
        <trans-unit id="44ae33eb52427bee57f7fcaec03ff51c77c2f313" translate="yes" xml:space="preserve">
          <source>$blue(Number) &amp;mdash; The amount of blue in the color. Must be between 0 and 255 inclusive or 0% and 100% inclusive</source>
          <target state="translated">$ blue（Number）&amp;mdash;颜色中蓝色的数量。必须介于0到255（含）之间或0％和100％（含）之间</target>
        </trans-unit>
        <trans-unit id="14edfb88615bca4634a51a2c1c2c8107c3a697f6" translate="yes" xml:space="preserve">
          <source>$blue(Number) &amp;mdash; The amount of blue in the color. Must be between 0 and 255 inclusive, or between 0% and 100% inclusive</source>
          <target state="translated">$ blue（Number）&amp;mdash;颜色中蓝色的数量。必须介于0到255之间（包括0和255之间）</target>
        </trans-unit>
        <trans-unit id="082ffd2500a9d40b19e0bca2105d3ea572caae06" translate="yes" xml:space="preserve">
          <source>$blue(Number) &amp;mdash; The new blue component for the color, within 0 and 255 inclusive</source>
          <target state="translated">$ blue（Number）&amp;mdash;颜色的新蓝色成分，介于0和255之间（含0和255）</target>
        </trans-unit>
        <trans-unit id="c87ea33099dabab9cf754daa742549f536f7b043" translate="yes" xml:space="preserve">
          <source>$bracketed(Base) &amp;mdash; Whether the resulting list will be bracketed. If this is auto (the default), the separator is determined as explained above.</source>
          <target state="translated">$ bracketed（Base）&amp;mdash;是否将结果列表放在括号中。如果这是自动的（默认设置），则如上所述确定分隔符。</target>
        </trans-unit>
        <trans-unit id="bc5ceb76a4d4fddbda5ca36bff305294cf1a14da" translate="yes" xml:space="preserve">
          <source>$color(Color)</source>
          <target state="translated">$color(Color)</target>
        </trans-unit>
        <trans-unit id="eaf19dcb4db0318c388250ee606692d0749116b1" translate="yes" xml:space="preserve">
          <source>$color(Color) &amp;mdash; The color whose opacity will be changed.</source>
          <target state="translated">$ color（Color）&amp;mdash;将更改其不透明度的颜色。</target>
        </trans-unit>
        <trans-unit id="51a39d43fde61f26e8b7babd823afde733c9c944" translate="yes" xml:space="preserve">
          <source>$color1(Color)</source>
          <target state="translated">$color1(Color)</target>
        </trans-unit>
        <trans-unit id="25baa0464e1e7e4ca9e04d7a9c7b75fe9a4ffdf0" translate="yes" xml:space="preserve">
          <source>$color2(Color)</source>
          <target state="translated">$color2(Color)</target>
        </trans-unit>
        <trans-unit id="ab99ee2657c3548adc7b8a1635ad3690071c2c86" translate="yes" xml:space="preserve">
          <source>$condition(Base) &amp;mdash; Whether the $if-true or $if-false will be returned</source>
          <target state="translated">$ condition（Base）&amp;mdash;将返回$ if-true还是$ if-false</target>
        </trans-unit>
        <trans-unit id="366fac1d8f8b212b06e80df2ca307929360e4505" translate="yes" xml:space="preserve">
          <source>$degrees(Number) &amp;mdash; The number of degrees to rotate the hue</source>
          <target state="translated">$ degrees（Number）&amp;mdash;旋转色调的度数</target>
        </trans-unit>
        <trans-unit id="65eb780e7c2faa67cd8dfaf280bb60c0b869d3eb" translate="yes" xml:space="preserve">
          <source>$end-at(Number) &amp;mdash; The index of the last character of the substring. If this is negative, it counts from the end of $string. Defaults to -1</source>
          <target state="translated">$ end-at（Number）&amp;mdash;子字符串的最后一个字符的索引。如果为负，则从$ string的末尾开始计数。默认为-1</target>
        </trans-unit>
        <trans-unit id="e9150635ec157a7b12d7ee33618c81b457705c65" translate="yes" xml:space="preserve">
          <source>$extendee(String, List) &amp;mdash; The selector being extended. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ extendee（String，List）-被扩展的选择器。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="a948ab2ebed2a0954c6b5259d4a58a9bb80f4bdd" translate="yes" xml:space="preserve">
          <source>$extender(String, List) &amp;mdash; The selector being injected into $selector. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ extender（String，List）&amp;mdash;将选择器注入到$ selector中。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="11042ef8c2f816db0196d98e767fdee4a7243460" translate="yes" xml:space="preserve">
          <source>$feature(String) &amp;mdash; The name of the feature</source>
          <target state="translated">$ feature（String）&amp;mdash;功能名称</target>
        </trans-unit>
        <trans-unit id="71b0659a8448f38ed067bac0170f24b0b12eb7de" translate="yes" xml:space="preserve">
          <source>$function(Function) &amp;mdash; The function to call.</source>
          <target state="translated">$ function（Function）&amp;mdash;要调用的函数。</target>
        </trans-unit>
        <trans-unit id="8cbcf8013203dcd00aae121f77487eb430108192" translate="yes" xml:space="preserve">
          <source>$green(Number)</source>
          <target state="translated">$green(Number)</target>
        </trans-unit>
        <trans-unit id="505c79e9d3a4333b83af3ed782f3d3d4d212b8bf" translate="yes" xml:space="preserve">
          <source>$green(Number) &amp;mdash; The adjustment to make on the green component, between -255 and 255 inclusive</source>
          <target state="translated">$ green（Number）&amp;mdash;对绿色组件进行的调整，介于-255和255之间（含）</target>
        </trans-unit>
        <trans-unit id="d3b5d8297fdba65df3111fde84ebaacc9f6eda5b" translate="yes" xml:space="preserve">
          <source>$green(Number) &amp;mdash; The amount of green in the color. Must be between 0 and 255 inclusive or 0% and 100% inclusive</source>
          <target state="translated">$ green（Number）&amp;mdash;颜色中绿色的数量。必须介于0到255（含）之间或0％和100％（含）之间</target>
        </trans-unit>
        <trans-unit id="99b86fdaaef98e7c8c7e0f6f252b4581a0b90add" translate="yes" xml:space="preserve">
          <source>$green(Number) &amp;mdash; The amount of green in the color. Must be between 0 and 255 inclusive, or between 0% and 100% inclusive</source>
          <target state="translated">$ green（Number）&amp;mdash;颜色中绿色的数量。必须介于0到255之间（包括0和255之间）</target>
        </trans-unit>
        <trans-unit id="5cf457660678f6560022cb06aca4d5db7149ab49" translate="yes" xml:space="preserve">
          <source>$green(Number) &amp;mdash; The new green component for the color, within 0 and 255 inclusive</source>
          <target state="translated">$ green（Number）&amp;mdash;颜色的新绿色分量，介于0和255之间（包括0和255）</target>
        </trans-unit>
        <trans-unit id="3601693c3505169da43a84db4c396682bfcf5d79" translate="yes" xml:space="preserve">
          <source>$hue(Number) &amp;mdash; The adjustment to make on the hue component, in degrees</source>
          <target state="translated">$ hue（Number）&amp;mdash;对色相分量进行的调整，以度为单位</target>
        </trans-unit>
        <trans-unit id="6a9ae64f50f4e8d0f647fd666a54ae4d4958847a" translate="yes" xml:space="preserve">
          <source>$hue(Number) &amp;mdash; The hue of the color. Should be between 0 and 360 degrees, inclusive</source>
          <target state="translated">$ hue（Number）&amp;mdash;颜色的色调。应该在0到360度之间（包括0和360度）</target>
        </trans-unit>
        <trans-unit id="1ca447c39c7fe544b3dcec73f5f0fc3e0f0adf3c" translate="yes" xml:space="preserve">
          <source>$hue(Number) &amp;mdash; The new hue component for the color, in degrees</source>
          <target state="translated">$ hue（Number）&amp;mdash;颜色的新色相分量，以度为单位</target>
        </trans-unit>
        <trans-unit id="30026b4a5d66ea78e57d12199d758a86d05e1206" translate="yes" xml:space="preserve">
          <source>$if-false(Tree::Node)</source>
          <target state="translated">$if-false(Tree::Node)</target>
        </trans-unit>
        <trans-unit id="d334cf4592c4206721ab58145b121c4d8b74efe7" translate="yes" xml:space="preserve">
          <source>$if-true(Tree::Node)</source>
          <target state="translated">$if-true(Tree::Node)</target>
        </trans-unit>
        <trans-unit id="3e2de723b98212f908d2b1751ef43e27928ba988" translate="yes" xml:space="preserve">
          <source>$index(Number) &amp;mdash; The position at which $insert will be inserted. Negative indices count from the end of $string. An index that's outside the bounds of the string will insert $insert at the front or back of the string</source>
          <target state="translated">$ index（Number）&amp;mdash;将插入$ insert的位置。负索引从$ string的末尾开始计数。超出字符串范围的索引将在字符串的前面或后面插入$ insert</target>
        </trans-unit>
        <trans-unit id="216cb08535c802f4d6c6857f6fce4c1cfbafbb12" translate="yes" xml:space="preserve">
          <source>$insert(String)</source>
          <target state="translated">$insert(String)</target>
        </trans-unit>
        <trans-unit id="aa89ac8049a528198da8a2a9ac15c80e0cb8c080" translate="yes" xml:space="preserve">
          <source>$key(Base)</source>
          <target state="translated">$key(Base)</target>
        </trans-unit>
        <trans-unit id="f92b0a77407f5cbd7b25a78ee6fa15421f84c529" translate="yes" xml:space="preserve">
          <source>$keys([Base])</source>
          <target state="translated">$keys([Base])</target>
        </trans-unit>
        <trans-unit id="787a07d7ddc2d84fb0c8f94d0573819a88e2a8a1" translate="yes" xml:space="preserve">
          <source>$lightness(Number)</source>
          <target state="translated">$lightness(Number)</target>
        </trans-unit>
        <trans-unit id="c889bc6b9f15bc626f62f2e07add6cd7d4a15035" translate="yes" xml:space="preserve">
          <source>$lightness(Number) &amp;mdash; The adjustment to make on the lightness component, between -100% and 100% inclusive</source>
          <target state="translated">$ lightness（Number）&amp;mdash;对亮度分量进行的调整，介于-100％和100％之间（含）</target>
        </trans-unit>
        <trans-unit id="e5e0b3215ad0ba293de15b21a34b34fb97584133" translate="yes" xml:space="preserve">
          <source>$lightness(Number) &amp;mdash; The lightness of the color. Must be between 0% and 100%, inclusive</source>
          <target state="translated">$ lightness（Number）&amp;mdash;颜色的亮度。必须介于0％和100％之间（含）</target>
        </trans-unit>
        <trans-unit id="27fa13b3de982b483f3b75deb9bd6c66a1ac77ad" translate="yes" xml:space="preserve">
          <source>$lightness(Number) &amp;mdash; The new lightness component for the color, within 0% and 100% inclusive</source>
          <target state="translated">$ lightness（Number）&amp;mdash;颜色的新亮度成分，介于0％和100％之间</target>
        </trans-unit>
        <trans-unit id="5d007df602604eaa1d62dd04a861dcba22893125" translate="yes" xml:space="preserve">
          <source>$limit(Number) &amp;mdash; The maximum of the random integer to be returned, a positive integer.</source>
          <target state="translated">$ limit（Number）&amp;mdash;要返回的随机整数的最大值，一个正整数。</target>
        </trans-unit>
        <trans-unit id="d7812c62ad89538b283d234e089e2a5b4d489134" translate="yes" xml:space="preserve">
          <source>$list(Base)</source>
          <target state="translated">$list(Base)</target>
        </trans-unit>
        <trans-unit id="41b5a0eda0d435b63c1ddc72ffc91bacbe056016" translate="yes" xml:space="preserve">
          <source>$list(Base) &amp;mdash; The list that will be copied, having the element at index $n changed.</source>
          <target state="translated">$ list（Base）&amp;mdash;将被复制的列表，其中索引$ n的元素已更改。</target>
        </trans-unit>
        <trans-unit id="f90fac986da16adb0688dea18db93bdef7e4d5ab" translate="yes" xml:space="preserve">
          <source>$list1(Base)</source>
          <target state="translated">$list1(Base)</target>
        </trans-unit>
        <trans-unit id="b254396051b0571d4ac5b7f1f4ee55f07052ab65" translate="yes" xml:space="preserve">
          <source>$list2(Base)</source>
          <target state="translated">$list2(Base)</target>
        </trans-unit>
        <trans-unit id="e69b8fd7c7927170c88ae27b0a9f413775fe63a0" translate="yes" xml:space="preserve">
          <source>$lists([Base])</source>
          <target state="translated">$lists([Base])</target>
        </trans-unit>
        <trans-unit id="355b962a782a7ab6bbfa67b14bf8029ba1ae9752" translate="yes" xml:space="preserve">
          <source>$map(Map)</source>
          <target state="translated">$map(Map)</target>
        </trans-unit>
        <trans-unit id="a83447a4a6654a52c1c0596e2141bb3f23fe6dc7" translate="yes" xml:space="preserve">
          <source>$map1(Map)</source>
          <target state="translated">$map1(Map)</target>
        </trans-unit>
        <trans-unit id="4cd4bda304a161300de4dd40ad6c1c03b9859083" translate="yes" xml:space="preserve">
          <source>$map2(Map)</source>
          <target state="translated">$map2(Map)</target>
        </trans-unit>
        <trans-unit id="c8b36fa18f3768d0870bcddee337699da854fc4b" translate="yes" xml:space="preserve">
          <source>$n(Number) &amp;mdash; The index of the item to get. Negative indices count from the end of the list.</source>
          <target state="translated">$ n（Number）&amp;mdash;要获取的项目的索引。负索引从列表的末尾开始计数。</target>
        </trans-unit>
        <trans-unit id="e6b81f8d12578a0b7ca0888ec96f4cf8a41b5f07" translate="yes" xml:space="preserve">
          <source>$n(Number) &amp;mdash; The index of the item to set. Negative indices count from the end of the list.</source>
          <target state="translated">$ n（Number）&amp;mdash;要设置的项目的索引。负索引从列表的末尾开始计数。</target>
        </trans-unit>
        <trans-unit id="91d32e65bb40b2f6a37607893d992cf9e36b6904" translate="yes" xml:space="preserve">
          <source>$name(String) &amp;mdash; The name of the variable to check. The name should not include the $.</source>
          <target state="translated">$ name（String）&amp;mdash;要检查的变量的名称。名称中不应包含$。</target>
        </trans-unit>
        <trans-unit id="02d1d576ed378076d11c4e57adf7e96286fd51e6" translate="yes" xml:space="preserve">
          <source>$number(Number)</source>
          <target state="translated">$number(Number)</target>
        </trans-unit>
        <trans-unit id="3e893f93841239b78a5907869d86b75f05018f6e" translate="yes" xml:space="preserve">
          <source>$number1(Number)</source>
          <target state="translated">$number1(Number)</target>
        </trans-unit>
        <trans-unit id="ce08017b63398252ee43106ce21141cb41ca1e98" translate="yes" xml:space="preserve">
          <source>$number2(Number)</source>
          <target state="translated">$number2(Number)</target>
        </trans-unit>
        <trans-unit id="43b2501e526fd09376391fcccda367400c380484" translate="yes" xml:space="preserve">
          <source>$numbers([Number])</source>
          <target state="translated">$numbers([Number])</target>
        </trans-unit>
        <trans-unit id="4051aafe487e73507bf5496131cf62779fa3ef5c" translate="yes" xml:space="preserve">
          <source>$original(String, List) &amp;mdash; The selector being replaced. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ original（String，List）-被替换的选择器。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="a57d0758f2cb91556ca4f467dfc429903943c5cf" translate="yes" xml:space="preserve">
          <source>$red(Number)</source>
          <target state="translated">$red(Number)</target>
        </trans-unit>
        <trans-unit id="798c3a805b8123984e273d68febb77ba25c13c6b" translate="yes" xml:space="preserve">
          <source>$red(Number) &amp;mdash; The adjustment to make on the red component, between -255 and 255 inclusive</source>
          <target state="translated">$ red（Number）&amp;mdash;对红色部分进行的调整，介于-255和255之间（含）</target>
        </trans-unit>
        <trans-unit id="92723f4144b34d094cc00a9673333b57fbc43ef1" translate="yes" xml:space="preserve">
          <source>$red(Number) &amp;mdash; The amount of red in the color. Must be between 0 and 255 inclusive or 0% and 100% inclusive</source>
          <target state="translated">$ red（Number）&amp;mdash;颜色中红色的数量。必须介于0到255（含）之间或0％和100％（含）之间</target>
        </trans-unit>
        <trans-unit id="41d73eede7db26451e2796a323ab3c322c42a6c1" translate="yes" xml:space="preserve">
          <source>$red(Number) &amp;mdash; The amount of red in the color. Must be between 0 and 255 inclusive, or between 0% and 100% inclusive</source>
          <target state="translated">$ red（Number）&amp;mdash;颜色中红色的数量。必须介于0到255之间（包括0和255之间）</target>
        </trans-unit>
        <trans-unit id="c9f01a8eca90071b747628ac46af03eb4fce7de6" translate="yes" xml:space="preserve">
          <source>$red(Number) &amp;mdash; The new red component for the color, within 0 and 255 inclusive</source>
          <target state="translated">$ red（Number）&amp;mdash;颜色的新红色分量，介于0和255之间（包括0和255）</target>
        </trans-unit>
        <trans-unit id="c1d604666547e844a97c584ca9376f2c4d36ee6b" translate="yes" xml:space="preserve">
          <source>$replacement(String, List) &amp;mdash; The selector that $original is being replaced with. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ replacement（String，List）&amp;mdash;用$ original替换的选择器。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="ce6106fb69799614ff596c8e316f01b7b3f946ef" translate="yes" xml:space="preserve">
          <source>$saturation(Number)</source>
          <target state="translated">$saturation(Number)</target>
        </trans-unit>
        <trans-unit id="291affa33ee07115b4bba6472c94ff847aa684a7" translate="yes" xml:space="preserve">
          <source>$saturation(Number) &amp;mdash; The adjustment to make on the saturation component, between -100% and 100% inclusive</source>
          <target state="translated">$ saturation（Number）&amp;mdash;对饱和度分量进行的调整，介于-100％和100％之间（含）</target>
        </trans-unit>
        <trans-unit id="9d180f3a53fc6a3bf73744f5a040453cacf280a5" translate="yes" xml:space="preserve">
          <source>$saturation(Number) &amp;mdash; The new saturation component for the color, between 0% and 100% inclusive</source>
          <target state="translated">$ saturation（Number）&amp;mdash;颜色的新饱和度分量，介于0％和100％之间（包括0和100％）</target>
        </trans-unit>
        <trans-unit id="0c08c7463650e99010c468991a17a126731ddd98" translate="yes" xml:space="preserve">
          <source>$saturation(Number) &amp;mdash; The saturation of the color. Must be between 0% and 100%, inclusive</source>
          <target state="translated">$ saturation（Number）&amp;mdash;颜色的饱和度。必须介于0％和100％之间（含）</target>
        </trans-unit>
        <trans-unit id="906a8fd2fe1083adbcb7832fd6f28ce7b5dc0b2b" translate="yes" xml:space="preserve">
          <source>$selector(String) &amp;mdash; The compound selector whose simple selectors will be extracted.</source>
          <target state="translated">$ selector（String）&amp;mdash;将提取其简单选择器的复合选择器。</target>
        </trans-unit>
        <trans-unit id="175ca91fcad6b59341ed535bf73d3a07476be10d" translate="yes" xml:space="preserve">
          <source>$selector(String, List) &amp;mdash; The selector to parse. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ selector（String，List）&amp;mdash;要解析的选择器。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="3053a1586bacba2a03898e61dd7f5f0ffd38a29c" translate="yes" xml:space="preserve">
          <source>$selector(String, List) &amp;mdash; The selector within which $extendee is extended with $extender. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ selector（String，List）&amp;mdash;使用$ extender扩展$ extendee的选择器。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="c4bd009e7d163201ef79d8985a477e51d952f4a9" translate="yes" xml:space="preserve">
          <source>$selector(String, List) &amp;mdash; The selector within which $original is replaced with $replacement. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ selector（String，List）&amp;mdash;用$ replacement替换$ original的选择器。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="5e8b84dd3acb7c4f8c1c63e2657d637e27f25571" translate="yes" xml:space="preserve">
          <source>$selector1(String, List) &amp;mdash; The first selector to be unified. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ selector1（String，List）&amp;mdash;第一个要统一的选择器。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="72013d9652b48742e23cc46a1ca9faf8a7af2722" translate="yes" xml:space="preserve">
          <source>$selector2(String, List) &amp;mdash; The second selector to be unified. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ selector2（String，List）-要统一的第二个选择器。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="0b2440e10188cbef3f6d81482b0f01901fcf948d" translate="yes" xml:space="preserve">
          <source>$selectors([String, List]) &amp;mdash; The selectors to append. At least one selector must be passed. Each of these can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ selectors（[String，List]）-要追加的选择器。必须至少传递一个选择器。其中的每一个可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="207ad637dbe90ccb2249c10e8120ea12c5c0902d" translate="yes" xml:space="preserve">
          <source>$selectors([String, List]) &amp;mdash; The selectors to nest. At least one selector must be passed. Each of these can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ selectors（[String，List]）&amp;mdash;要嵌套的选择器。必须至少传递一个选择器。其中的每一个可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="f1f6f8d10ba742a11fbf421da52f2c803af51e06" translate="yes" xml:space="preserve">
          <source>$separator(String) &amp;mdash; The list separator to use. If this is comma or space, that separator will be used. If this is auto (the default), the separator is determined as explained above.</source>
          <target state="translated">$ separator（String）&amp;mdash;要使用的列表分隔符。如果是逗号或空格，则将使用该分隔符。如果这是自动的（默认设置），则如上所述确定分隔符。</target>
        </trans-unit>
        <trans-unit id="7dcf8196b59c8052cf1dd930e6b38d362d6c4f4a" translate="yes" xml:space="preserve">
          <source>$start-at(Number) &amp;mdash; The index of the first character of the substring. If this is negative, it counts from the end of $string</source>
          <target state="translated">$ start-at（Number）&amp;mdash;子字符串的第一个字符的索引。如果为负，则从$ string的末尾开始计数</target>
        </trans-unit>
        <trans-unit id="3a56e6782813e0edce7da80613ff481aa3e07f98" translate="yes" xml:space="preserve">
          <source>$string(String)</source>
          <target state="translated">$string(String)</target>
        </trans-unit>
        <trans-unit id="b7882e9f45679cabd8885bccb1435aa6f2be6fc9" translate="yes" xml:space="preserve">
          <source>$sub(String, List) &amp;mdash; The potential subselector. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ sub（String，List）&amp;mdash;潜在的子选择器。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="86c6ff58d3029ae6a144ad65d31b59cb6e6e9a68" translate="yes" xml:space="preserve">
          <source>$substring(String)</source>
          <target state="translated">$substring(String)</target>
        </trans-unit>
        <trans-unit id="9e5a3b6cb469d5e8724fecfa38464a23b5035fb2" translate="yes" xml:space="preserve">
          <source>$super(String, List) &amp;mdash; The potential superselector. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ super（String，List）&amp;mdash;潜在的超级选择器。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="97aadf708863cd8ded82f9965f0d4e01d61f7850" translate="yes" xml:space="preserve">
          <source>$val(Base)</source>
          <target state="translated">$val(Base)</target>
        </trans-unit>
        <trans-unit id="ba3f47ff0a6f87d69cc4fcef875688433d150be2" translate="yes" xml:space="preserve">
          <source>$value(Base)</source>
          <target state="translated">$value(Base)</target>
        </trans-unit>
        <trans-unit id="d619da5f18b07a45fae50f3af46f8f3c9b0e53a6" translate="yes" xml:space="preserve">
          <source>$value(Base) &amp;mdash; The new value at index $n.</source>
          <target state="translated">$ value（Base）&amp;mdash;索引为$ n的新值。</target>
        </trans-unit>
        <trans-unit id="406f15245451684e3bc3de1deb497fb15e7b9bc2" translate="yes" xml:space="preserve">
          <source>$value(Base) &amp;mdash; The value to inspect</source>
          <target state="translated">$ value（Base）&amp;mdash;要检查的值</target>
        </trans-unit>
        <trans-unit id="7b24cc0c1eed124fecce2d53a5f8b0c0ae67c1b3" translate="yes" xml:space="preserve">
          <source>$value(Base) &amp;mdash; The value to inspect.</source>
          <target state="translated">$ value（Base）&amp;mdash;要检查的值。</target>
        </trans-unit>
        <trans-unit id="321a7e9f953ae1f002b9bb4cb945dd815481cd0c" translate="yes" xml:space="preserve">
          <source>$weight(Number) &amp;mdash; The relative weight of each color. Closer to 100% gives more weight to $color1, closer to 0% gives more weight to $color2</source>
          <target state="translated">$ weight（Number）&amp;mdash;每种颜色的相对权重。接近100％赋予$ color1更多的权重，接近0％赋予$ color2更多的权重</target>
        </trans-unit>
        <trans-unit id="0b722ab989a38e4f2d6eb165bbe03da1cc7f9428" translate="yes" xml:space="preserve">
          <source>$weight(Number) &amp;mdash; The relative weight of the color color's inverse</source>
          <target state="translated">$ weight（Number）&amp;mdash;颜色的倒数的相对权重</target>
        </trans-unit>
        <trans-unit id="ade264c74c289120840d7f70464dcbb2a962da40" translate="yes" xml:space="preserve">
          <source>%placeholder selector</source>
          <target state="translated">％占位符选择器</target>
        </trans-unit>
        <trans-unit id="6a0f24b1f24890ab19f8ab97584982ab5b00b91d" translate="yes" xml:space="preserve">
          <source>&amp;amp; in sassScript</source>
          <target state="translated">＆在sassScript中</target>
        </trans-unit>
        <trans-unit id="d0488cb3bf5655e2a4c1880ae9a380659c961585" translate="yes" xml:space="preserve">
          <source>&amp;amp; parent selector</source>
          <target state="translated">和父选择器</target>
        </trans-unit>
        <trans-unit id="242097204c2e06336514dab89f4cc581e13adf90" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2006&amp;ndash;2016 Hampton Catlin, Nathan Weizenbaum, and Chris Eppstein</source>
          <target state="translated">&amp;copy;2006&amp;ndash;2016 Hampton Catlin，Nathan Weizenbaum和Chris Eppstein</target>
        </trans-unit>
        <trans-unit id="52c8f8a2cd5797351d7b89c323cef61d9b8357e6" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2006&amp;ndash;2020 Hampton Catlin, Nathan Weizenbaum, and Chris Eppstein</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54fa0260345ff58931f0db3c6c2ffaa8f7159e2" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $alpha is out of bounds or either parameter is the wrong type</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ alpha超出范围或任一参数的类型错误</target>
        </trans-unit>
        <trans-unit id="e1b81ef6cf445c978cad23278c374aac690162b4" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $amount is out of bounds, or either parameter is the wrong type</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ amount超出范围，或者任何一个参数是错误的类型</target>
        </trans-unit>
        <trans-unit id="46f6fb168025c877f41a090e5ae0c03e6302310b" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $args isn't a variable argument list</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ args不是变量参数列表</target>
        </trans-unit>
        <trans-unit id="a6deb5c848f8161c0d015f81b7e177b27311652a" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $color isn't a color</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ color不是颜色</target>
        </trans-unit>
        <trans-unit id="e43c323144d5a98765a551319d6a45ca0bb93a30" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $color isn't a color or $weight isn't a percentage between 0% and 100%</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ color不是颜色或$ weight不是介于0％和100％之间的百分比</target>
        </trans-unit>
        <trans-unit id="c4bff3355dd2286e20d3da67a6e6b9ecd267bcc1" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $feature isn't a string</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ feature不是字符串</target>
        </trans-unit>
        <trans-unit id="bcafcf95213de1ac106629f316339d893aca92ce" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $map is not a map</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ map不是地图</target>
        </trans-unit>
        <trans-unit id="80caebfe127488f6e9d8b23ed6d2324f1c3e2676" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $n isn't an integer between 1 and the length of $list</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ n不是1到$ list长度之间的整数</target>
        </trans-unit>
        <trans-unit id="c3b658394b6faef361fabac36d0a43c629035bfe" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $number isn't a number</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ number不是数字</target>
        </trans-unit>
        <trans-unit id="3518a7a8ccb351b3802173336709457558caa570" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $number isn't a unitless number</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ number不是一个无单位数</target>
        </trans-unit>
        <trans-unit id="171ec8c0b8effabc24a66eef088cbe7c2c92a4e5" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $saturation or $lightness are out of bounds or any parameter is the wrong type</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ saturation或$ lightness超出范围或任何参数的类型错误</target>
        </trans-unit>
        <trans-unit id="2f52f9f750a0917524c32e9217f68c98474beced" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $saturation, $lightness, or $alpha are out of bounds or any parameter is the wrong type</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ saturation，$ lightness或$ alpha超出范围或任何参数的类型错误</target>
        </trans-unit>
        <trans-unit id="7c75d0ebe95b2fac4c53ce8b1b09199fbe3f7fcf" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $string isn't a string</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ string不是字符串</target>
        </trans-unit>
        <trans-unit id="3284ef50210ffade5065fb9d2f6b1ee12d21c670" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $weight is out of bounds or any parameter is the wrong type</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ weight超出范围或任何参数的类型错误</target>
        </trans-unit>
        <trans-unit id="768e36d7aa430ddd1b065f1676fadc3ce8c756d8" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if a selector could not be appended.</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果无法附加选择器。</target>
        </trans-unit>
        <trans-unit id="673dda1b8a0e4975fddc6b70b1a3024642c790c1" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if any argument isn't a number, or if not all of the arguments have comparable units</source>
          <target state="translated">（ArgumentError）-如果任何参数不是数字，或者不是所有参数都具有可比较的单位</target>
        </trans-unit>
        <trans-unit id="ca2e974ba89d223892bab2a252ad046934be97d1" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if any parameter is the wrong type</source>
          <target state="translated">（ArgumentError）-如果任何参数的类型错误</target>
        </trans-unit>
        <trans-unit id="027c57fa858e9aafe1ce4619a5441a9095e6f8df" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if any parameter is the wrong type or out of bounds</source>
          <target state="translated">（ArgumentError）-如果任何参数的类型错误或超出范围</target>
        </trans-unit>
        <trans-unit id="dc60a244c2021634cafa123207c2c0d029a3048c" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if any parameter is the wrong type or out-of bounds, or if RGB properties and HSL properties are adjusted at the same time</source>
          <target state="translated">（ArgumentError）-如果任何参数的类型错误或超出范围，或者同时调整了RGB属性和HSL属性</target>
        </trans-unit>
        <trans-unit id="dcb9bfc77c1e9f0c141f5e016f4816072bdd3456" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if either parameter is not a map</source>
          <target state="translated">（ArgumentError）-如果任一参数都不是地图</target>
        </trans-unit>
        <trans-unit id="a5e989041121cbe7f03cf63b315dc48588db2720" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if either parameter is the wrong type</source>
          <target state="translated">（ArgumentError）-如果任一参数的类型错误</target>
        </trans-unit>
        <trans-unit id="691b2dedf2eb8440d21f7621147afc4b29b13d2f" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if the $limit is not 1 or greater</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ limit不等于1或更大</target>
        </trans-unit>
        <trans-unit id="074e319448c3f3e3fbbe104ab373ac952b9dd24f" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if the extension fails</source>
          <target state="translated">（ArgumentError）-如果扩展失败</target>
        </trans-unit>
        <trans-unit id="c616cceb9428111e795eb79f1092387c3c2075b6" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if the replacement fails</source>
          <target state="translated">（ArgumentError）-如果替换失败</target>
        </trans-unit>
        <trans-unit id="bc31501c25d526ffb38aafac62998004cbd12253" translate="yes" xml:space="preserve">
          <source>(Base)</source>
          <target state="translated">(Base)</target>
        </trans-unit>
        <trans-unit id="84c492f5bba42c95939fad73c5276f48bc71cf2c" translate="yes" xml:space="preserve">
          <source>(Base) &amp;mdash; $if-true or $if-false</source>
          <target state="translated">（基础）-$ if-true或$ if-false</target>
        </trans-unit>
        <trans-unit id="66ad9a9aafd4f5694179598a848ce1a5270606c9" translate="yes" xml:space="preserve">
          <source>(Base) &amp;mdash; The value indexed by $key, or null if the map doesn't contain the given key</source>
          <target state="translated">（基础）&amp;mdash;由$ key索引的值；如果地图不包含给定的键，则返回null</target>
        </trans-unit>
        <trans-unit id="32da5f08bda277a5a9388d20de4d9872c4b6a951" translate="yes" xml:space="preserve">
          <source>(Bool)</source>
          <target state="translated">(Bool)</target>
        </trans-unit>
        <trans-unit id="d8e9b251e06fba7eff71457cabe4b7f32e2ba05a" translate="yes" xml:space="preserve">
          <source>(Bool) &amp;mdash; Whether $selector1 is a superselector of $selector2.</source>
          <target state="translated">（布尔）&amp;mdash; $ selector1是否是$ selector2的超选择器。</target>
        </trans-unit>
        <trans-unit id="32c233e222c33d346fad81bd186987a7de49c735" translate="yes" xml:space="preserve">
          <source>(Bool) &amp;mdash; Whether a content block was passed to the mixin.</source>
          <target state="translated">（布尔）-是否将内容块传递给mixin。</target>
        </trans-unit>
        <trans-unit id="3a44f746b5413a8a251e9109d746a49c7c7b00af" translate="yes" xml:space="preserve">
          <source>(Bool) &amp;mdash; Whether the feature is supported in this version of Sass</source>
          <target state="translated">（布尔）&amp;mdash;此版本的Sass中是否支持该功能</target>
        </trans-unit>
        <trans-unit id="2173969f0cb2ee0b5150bdd5c9a123d6cc80f49d" translate="yes" xml:space="preserve">
          <source>(Bool) &amp;mdash; Whether the function is defined.</source>
          <target state="translated">（布尔）&amp;mdash;是否定义了功能。</target>
        </trans-unit>
        <trans-unit id="3138d59eef729098510c0110878a0e391ee74666" translate="yes" xml:space="preserve">
          <source>(Bool) &amp;mdash; Whether the mixin is defined.</source>
          <target state="translated">（布尔）&amp;mdash;是否定义了混合。</target>
        </trans-unit>
        <trans-unit id="aa61df232f25261041e4c9e1b2fb2080f5c738f3" translate="yes" xml:space="preserve">
          <source>(Bool) &amp;mdash; Whether the variable is defined in the current scope.</source>
          <target state="translated">（布尔）&amp;mdash;变量是否在当前作用域中定义。</target>
        </trans-unit>
        <trans-unit id="55df750b45e3c9c35f8835dd77e0c5ff6b0a760b" translate="yes" xml:space="preserve">
          <source>(Bool) &amp;mdash; Whether the variable is defined in the global scope.</source>
          <target state="translated">（布尔）-变量是否在全局范围内定义。</target>
        </trans-unit>
        <trans-unit id="ef925c7f563b5909a57b310c9325327231e0f7bc" translate="yes" xml:space="preserve">
          <source>(Color)</source>
          <target state="translated">(Color)</target>
        </trans-unit>
        <trans-unit id="a21b102dd81b35461c87e52cea4e16d5fba884e5" translate="yes" xml:space="preserve">
          <source>(Function) &amp;mdash; A function reference.</source>
          <target state="translated">（功能）&amp;mdash;功能参考。</target>
        </trans-unit>
        <trans-unit id="84f4fb427edc66a9b51ed0213b399c87e7fdd1c5" translate="yes" xml:space="preserve">
          <source>(List)</source>
          <target state="translated">(List)</target>
        </trans-unit>
        <trans-unit id="ab00038088151a4dcb1b9f0ee0d449e41a73e4f9" translate="yes" xml:space="preserve">
          <source>(List) &amp;mdash; A list of lists of strings representing $selector. This is in the same format as a selector returned by &amp;amp;.</source>
          <target state="translated">（列表）&amp;mdash;代表$ selector的字符串列表的列表。该格式与＆返回的选择器格式相同。</target>
        </trans-unit>
        <trans-unit id="1e4b4886fdc101f8ece99629466f8a4b5958aca0" translate="yes" xml:space="preserve">
          <source>(List) &amp;mdash; A list of lists of strings representing the result of appending $selectors. This is in the same format as a selector returned by &amp;amp;.</source>
          <target state="translated">（列表）&amp;mdash;表示附加$ selector的结果的字符串列表的列表。该格式与＆返回的选择器格式相同。</target>
        </trans-unit>
        <trans-unit id="ca18bc5773467cc5195976b05842618893baac49" translate="yes" xml:space="preserve">
          <source>(List) &amp;mdash; A list of lists of strings representing the result of nesting $selectors. This is in the same format as a selector returned by &amp;amp;.</source>
          <target state="translated">（列表）&amp;mdash;表示嵌套$ selector的结果的字符串列表的列表。该格式与＆返回的选择器格式相同。</target>
        </trans-unit>
        <trans-unit id="f9d864db561a641b9c1908811edc1bb10dea0f68" translate="yes" xml:space="preserve">
          <source>(List) &amp;mdash; A list of lists of strings representing the result of the extension. This is in the same format as a selector returned by &amp;amp;.</source>
          <target state="translated">（列表）&amp;mdash;表示扩展结果的字符串列表的列表。该格式与＆返回的选择器格式相同。</target>
        </trans-unit>
        <trans-unit id="d5d5ff0ccb6470d28c775aa2ba468b0a6b2fe26c" translate="yes" xml:space="preserve">
          <source>(List) &amp;mdash; A list of simple selectors in the compound selector.</source>
          <target state="translated">（列表）&amp;mdash;复合选择器中的简单选择器列表。</target>
        </trans-unit>
        <trans-unit id="a4cea87eeae6fb88977c980adeec5a22a96c3d61" translate="yes" xml:space="preserve">
          <source>(List) &amp;mdash; the list of keys, comma-separated</source>
          <target state="translated">（列表）&amp;mdash;密钥列表，以逗号分隔</target>
        </trans-unit>
        <trans-unit id="58d884e25c2b1d5d7c7306d739f0cf83d8875411" translate="yes" xml:space="preserve">
          <source>(List) &amp;mdash; the list of values, comma-separated</source>
          <target state="translated">（列表）&amp;mdash;值列表，以逗号分隔</target>
        </trans-unit>
        <trans-unit id="3dd365b822385407b9c70f4cf2139845a0a81a0c" translate="yes" xml:space="preserve">
          <source>(List, Null) &amp;mdash; A list of lists of strings representing the result of the unification, or null if no unification exists. This is in the same format as a selector returned by &amp;amp;.</source>
          <target state="translated">（List，Null）-表示统一结果的字符串列表的列表；如果不存在统一，则为null。该格式与＆返回的选择器格式相同。</target>
        </trans-unit>
        <trans-unit id="f3c758fb4abbbe82c65d10abbb597bd43879f7d5" translate="yes" xml:space="preserve">
          <source>(Map)</source>
          <target state="translated">(Map)</target>
        </trans-unit>
        <trans-unit id="035ccc46631dd65fcb1c0851abd2f949716a382d" translate="yes" xml:space="preserve">
          <source>(Number)</source>
          <target state="translated">(Number)</target>
        </trans-unit>
        <trans-unit id="7a0a0346e56d9f22e65c13050307caf600e9e30a" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; A decimal value.</source>
          <target state="translated">（数字）-一个十进制值。</target>
        </trans-unit>
        <trans-unit id="fa1d9013a7b37c458dd94ae207834c0b6999d2e8" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; An integer.</source>
          <target state="translated">（数字）&amp;mdash;一个整数。</target>
        </trans-unit>
        <trans-unit id="7f36e59bee0af8613e6628e835f96a9ebb3c7a11" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; The alpha component, between 0 and 1</source>
          <target state="translated">（数字）-Alpha分量，介于0和1之间</target>
        </trans-unit>
        <trans-unit id="a6a0e9f9140b0b6657f85512d29e576fe823a749" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; The blue component, between 0 and 255 inclusive</source>
          <target state="translated">（数字）&amp;mdash;蓝色部分，介于0和255之间（包括0和255之间）</target>
        </trans-unit>
        <trans-unit id="928ea5d71cd0b1155dd18ba9283c0a2d243007b7" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; The green component, between 0 and 255 inclusive</source>
          <target state="translated">（数字）-绿色分量，介于0和255之间（包括0和255之间）</target>
        </trans-unit>
        <trans-unit id="59a027d953db15cf5ce5f2487f7b71422857710d" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; The hue component, between 0deg and 360deg</source>
          <target state="translated">（数字）&amp;mdash;色度分量，介于0deg和360deg之间</target>
        </trans-unit>
        <trans-unit id="309117e13f71ad11574547f925a19198f4efbfdc" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; The lightness component, between 0% and 100%</source>
          <target state="translated">（数字）&amp;mdash;亮度分量，介于0％和100％之间</target>
        </trans-unit>
        <trans-unit id="a3781fed14d7b9e81940ba7bffc59c7407c06e61" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; The red component, between 0 and 255 inclusive</source>
          <target state="translated">（数字）&amp;mdash;红色部分，介于0和255之间（包括0和255之间）</target>
        </trans-unit>
        <trans-unit id="66b3c7072b3d9d5dbe2f9f8da6644bcfd828f4cb" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; The saturation component, between 0% and 100%</source>
          <target state="translated">（数字）-饱和度分量，介于0％和100％之间</target>
        </trans-unit>
        <trans-unit id="8fb4a9e298e211b53c1777bced5b15239b9526e5" translate="yes" xml:space="preserve">
          <source>(Number, Null)</source>
          <target state="translated">（数字，空）</target>
        </trans-unit>
        <trans-unit id="78943f7aae0eca255fb81da9b6ae06868e64c32f" translate="yes" xml:space="preserve">
          <source>(Number, Null) &amp;mdash; The 1-based index of $value in $list, or null</source>
          <target state="translated">（数字，空）&amp;mdash; $ list中$ value的从1开始的索引，或者为null</target>
        </trans-unit>
        <trans-unit id="ca160e8fcc0d837a102bc8d0b7dd4018744cb2f8" translate="yes" xml:space="preserve">
          <source>(String)</source>
          <target state="translated">(String)</target>
        </trans-unit>
        <trans-unit id="9af1197073c44a7dd993d4c6d1acd10966e0052f" translate="yes" xml:space="preserve">
          <source>(String) &amp;mdash; A representation of the value as it would be written in Sass.</source>
          <target state="translated">（字符串）&amp;mdash;用Sass编写的值的表示形式。</target>
        </trans-unit>
        <trans-unit id="28b37f4825347fa03ae31f861df5119415bc35e0" translate="yes" xml:space="preserve">
          <source>(String) &amp;mdash; The IE-formatted string representation of the color</source>
          <target state="translated">（字符串）&amp;mdash;颜色的IE格式的字符串表示形式</target>
        </trans-unit>
        <trans-unit id="4a979e236b325a07046572b9cd815aab26c44bf3" translate="yes" xml:space="preserve">
          <source>(String) &amp;mdash; The result string. This will be quoted if and only if $string was quoted</source>
          <target state="translated">（字符串）-结果字符串。仅当引用$ string时才引用</target>
        </trans-unit>
        <trans-unit id="37e8f327469125b93408b3fca12714b58cc72903" translate="yes" xml:space="preserve">
          <source>(String) &amp;mdash; The substring. This will be quoted if and only if $string was quoted</source>
          <target state="translated">（字符串）&amp;mdash;子字符串。仅当引用$ string时才引用</target>
        </trans-unit>
        <trans-unit id="d1db760774961a315aa6be942b05536a64b3587d" translate="yes" xml:space="preserve">
          <source>(String) &amp;mdash; The unit(s) of the number, as a quoted string</source>
          <target state="translated">（字符串）&amp;mdash;数字的单位，带引号的字符串</target>
        </trans-unit>
        <trans-unit id="ebe205910840809edf252e53514dfd407b3eae0c" translate="yes" xml:space="preserve">
          <source>(String) &amp;mdash; The unquoted string name of the value's type</source>
          <target state="translated">（字符串）&amp;mdash;值类型的未引号的字符串名称</target>
        </trans-unit>
        <trans-unit id="3d1255224e8cdf7b565ec94191aaa4667a577020" translate="yes" xml:space="preserve">
          <source>(String) &amp;mdash; comma or space</source>
          <target state="translated">（字符串）-逗号或空格</target>
        </trans-unit>
        <trans-unit id="3bbbbc118923710ed46bbdeac7efac99094d6d20" translate="yes" xml:space="preserve">
          <source>...or by passing an options hash to &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Engine.html#initialize-instance_method&quot;&gt;Sass::Engine#initialize&lt;/a&gt;. All relevant options are also available via flags to the &lt;code&gt;sass&lt;/code&gt; and &lt;code&gt;scss&lt;/code&gt; command-line executables. Available options are:</source>
          <target state="translated">...或通过将选项哈希传递给&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Engine.html#initialize-instance_method&quot;&gt;Sass :: Engine＃initialize&lt;/a&gt;。所有相关选项也可以通过标志提供给 &lt;code&gt;sass&lt;/code&gt; 和 &lt;code&gt;scss&lt;/code&gt; 命令行可执行文件。可用的选项有：</target>
        </trans-unit>
        <trans-unit id="4bbb05d1b253167b77da50c1d1fcf4f8edcab069" translate="yes" xml:space="preserve">
          <source>...or by setting the &lt;code&gt;Merb::Plugin.config[:sass]&lt;/code&gt; hash in &lt;code&gt;init.rb&lt;/code&gt; in Merb...</source>
          <target state="translated">...或通过在 &lt;code&gt;Merb::Plugin.config[:sass]&lt;/code&gt; &lt;code&gt;init.rb&lt;/code&gt; 中设置Merb :: Plugin.config [：sass]哈希...</target>
        </trans-unit>
        <trans-unit id="18531e8b77b0ff841e0fd518e79f54f908b065fe" translate="yes" xml:space="preserve">
          <source>:compact</source>
          <target state="translated">:compact</target>
        </trans-unit>
        <trans-unit id="b387b5a70b59f32a0b2ff1a3e67f25bd7909dc8c" translate="yes" xml:space="preserve">
          <source>:compressed</source>
          <target state="translated">:compressed</target>
        </trans-unit>
        <trans-unit id="f5fb440ab0545653958cbc733de32344fc1d3a78" translate="yes" xml:space="preserve">
          <source>:expanded</source>
          <target state="translated">:expanded</target>
        </trans-unit>
        <trans-unit id="e72e10eca1eda8e1e0d53492174ca0d1d3ac9b89" translate="yes" xml:space="preserve">
          <source>:nested</source>
          <target state="translated">:nested</target>
        </trans-unit>
        <trans-unit id="c247920a7e829befb46a567a4fdf96a973f21e8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#adjust&quot;&gt;&lt;code&gt;color.adjust()&lt;/code&gt;&lt;/a&gt; for adjusting a color&amp;rsquo;s properties by fixed amounts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea895ea8ccf5fccd11e71baa115a73083ea124a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#adjust&quot;&gt;&lt;code&gt;color.adjust()&lt;/code&gt;&lt;/a&gt; for changing a color&amp;rsquo;s properties by fixed amounts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c70c45411d874e1ca4ef4776097d165c84c5f7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#alpha&quot;&gt;&lt;code&gt;color.alpha()&lt;/code&gt;&lt;/a&gt; for getting a color&amp;rsquo;s alpha channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2759946c958727d83bc9648ccc87877b321db42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#blackness&quot;&gt;&lt;code&gt;color.blackness()&lt;/code&gt;&lt;/a&gt; for getting a color&amp;rsquo;s blackness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5695881c2b1577477f9e0595f35342642e65d8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#blue&quot;&gt;&lt;code&gt;color.blue()&lt;/code&gt;&lt;/a&gt; for getting a color&amp;rsquo;s blue channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a95d3f435e2b19c21a07552149bfce63f31d3261" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#change&quot;&gt;&lt;code&gt;color.change()&lt;/code&gt;&lt;/a&gt; for setting a color&amp;rsquo;s properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f17cc4b0133eacd307d1a576047378fb3f6918" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#global-functions&quot;&gt;A few functions&lt;/a&gt; are &lt;em&gt;only&lt;/em&gt; available globally even in the new module system, either because they have special evaluation behavior (&lt;a href=&quot;#if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt;) or because they add extra behavior on top of built-in CSS functions (&lt;a href=&quot;#rgb&quot;&gt;&lt;code&gt;rgb()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#hsl&quot;&gt;&lt;code&gt;hsl()&lt;/code&gt;&lt;/a&gt;). These will not be deprecated and can be used freely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="334333a66038cf63f2c06fca12dfd3e156420aa6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#green&quot;&gt;&lt;code&gt;color.green()&lt;/code&gt;&lt;/a&gt; for getting a color&amp;rsquo;s green channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1857538ef7d95d3b08501df9ab7a80cf03d9f777" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#hue&quot;&gt;&lt;code&gt;color.hue()&lt;/code&gt;&lt;/a&gt; for getting a color&amp;rsquo;s hue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19e0f25d559ab178cd53165ee963cc1d8f38714" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#lightness&quot;&gt;&lt;code&gt;color.lightness()&lt;/code&gt;&lt;/a&gt; for getting a color&amp;rsquo;s lightness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c195b00fbfc17581824317b3aaf8a4d4da0125" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#red&quot;&gt;&lt;code&gt;color.red()&lt;/code&gt;&lt;/a&gt; for getting a color&amp;rsquo;s red channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7fe19a4653dfed1ceea1293317c5470f1b12afb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#saturation&quot;&gt;&lt;code&gt;color.saturation()&lt;/code&gt;&lt;/a&gt; for getting a color&amp;rsquo;s saturation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63bc28e9e60e872c9c7eccd7423fd2ee7f1b889c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#scale&quot;&gt;&lt;code&gt;color.scale()&lt;/code&gt;&lt;/a&gt; for fluidly scaling a color&amp;rsquo;s properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0946c5856a1c096b009948dca85591bef73be1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#whiteness&quot;&gt;&lt;code&gt;color.whiteness()&lt;/code&gt;&lt;/a&gt; for getting a color&amp;rsquo;s whiteness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625d982e90863def2387acdaf8874ce5eae5040b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../at-rules/control&quot;&gt;Flow control at-rules&lt;/a&gt;, like &lt;code&gt;@if&lt;/code&gt; and &lt;code&gt;@each&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e08a846a5e26af05a475f01d1a73d3b5b8a4fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../at-rules/css&quot;&gt;CSS at-rules&lt;/a&gt;, like &lt;code&gt;@media&lt;/code&gt; and &lt;code&gt;@font-face&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c6b95a2c0c73d02295b89d1bb05398a65fd132" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../at-rules/function&quot;&gt;Function calls&lt;/a&gt;, like &lt;code&gt;nth($list, 1)&lt;/code&gt; or &lt;code&gt;var(--main-bg-color)&lt;/code&gt;, which may call Sass core library functions or user-defined functions, or which may be compiled directly to CSS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bacf5813cb4dd29bc655fd8555a5f7fda335e26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../at-rules/function&quot;&gt;Function definitions&lt;/a&gt; using &lt;code&gt;@function&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5495fe51944afc409a708a8a26809264597732" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../at-rules/function&quot;&gt;Functions&lt;/a&gt; can be values too! You can&amp;rsquo;t directly write a function as a value, but you can pass a function&amp;rsquo;s name to the [&lt;code&gt;meta.get-function()&lt;/code&gt; function][] to get it as a value. Once you have a function value, you can pass it to the &lt;a href=&quot;../modules/meta#call&quot;&gt;&lt;code&gt;meta.call()&lt;/code&gt; function&lt;/a&gt; to call it. This is useful for writing &lt;em&gt;higher-order functions&lt;/em&gt; that call other functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b93d83f473408047a54d5c570601fbc28bc14a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../at-rules/import&quot;&gt;Imports&lt;/a&gt;, using &lt;code&gt;@import&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2742477784dc27a49fbbe77e447a2f006d20a80c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../at-rules/mixin&quot;&gt;Mixin definitions&lt;/a&gt; using &lt;code&gt;@mixin&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e193ae95dc03cf7504a9c08186a7489d7b6be6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../at-rules/mixin&quot;&gt;Mixin uses&lt;/a&gt; using &lt;code&gt;@include&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3c051e73d7234eb05f552440d4dea61052c936" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../at-rules/use&quot;&gt;Module loads&lt;/a&gt;, using &lt;code&gt;@use&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff0788af5e3f5e10d8ab757400e49142d0ee349" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../operators#parentheses&quot;&gt;&lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt;&lt;/a&gt; can be used to explicitly control the precedence order of operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ebec6a3229277633975402d229d30b75040b54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../operators/boolean&quot;&gt;&lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, and &lt;code&gt;not&lt;/code&gt;&lt;/a&gt; have the usual boolean behavior. Sass considers every value &amp;ldquo;true&amp;rdquo; except for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8d108f91561eec9dc0ea4b8fd020c5b73f05cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../operators/equality&quot;&gt;&lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;&lt;/a&gt; are used to check if two values are the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7cdc6b380da764bac86dbbba8e13747dd36614b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../operators/numeric&quot;&gt;&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, and &lt;code&gt;%&lt;/code&gt;&lt;/a&gt; have their usual mathematical meaning for numbers, with special behaviors for units that matches the use of units in scientific math.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c672ef4f3a2c7d70fd41ef3869726492599499" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../operators/relational&quot;&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;gt;=&lt;/code&gt;&lt;/a&gt; check whether two numbers are greater or less than one another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee40f9e5675c97c4d41f6fef2ca7b554e5559490" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../operators/string&quot;&gt;&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, and &lt;code&gt;/&lt;/code&gt;&lt;/a&gt; can be used to concatenate strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77fcfa3170827b544153ec6c763e2a53104c85a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../style-rules&quot;&gt;Style rules&lt;/a&gt;, like &lt;code&gt;h1 { /* ... */ }&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9002a45e95be3c1261be8c352184dff40adc4e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../style-rules/declarations&quot;&gt;Property declarations&lt;/a&gt; like &lt;code&gt;width: 100px&lt;/code&gt; may only be used within style rules and some CSS at-rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b5767f17e5e3af1f483104b38441be45b07edd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../style-rules/parent-selector&quot;&gt;The parent selector&lt;/a&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309522026b9b3cfb39613337ceb48bc45ac65a61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../values/booleans&quot;&gt;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../values/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; are only equal to themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd85cdd9ff738cc76a8cccf27843a9552a39538e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../values/colors&quot;&gt;Colors&lt;/a&gt; are equal if they have the same red, green, blue, and alpha values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bdd7557ace82a2f9e412aa622c9ac00d927183f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../values/colors&quot;&gt;Colors&lt;/a&gt;, which can be referred to by their hex representation or by name, like &lt;code&gt;#c6538c&lt;/code&gt; or &lt;code&gt;blue&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b600cc3aa497e8fb1a137115808ab84c1c152e0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../values/functions&quot;&gt;Functions&lt;/a&gt; are equal to the same function. Functions are compared &lt;em&gt;by reference&lt;/em&gt;, so even if two functions have the same name and definition they&amp;rsquo;re considered different if they aren&amp;rsquo;t defined in the same place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d864d41e3391182cab90ebfe5fae61e755e504" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../values/lists&quot;&gt;Lists of values&lt;/a&gt;, which may be separated by spaces or commas and which may be enclosed in square brackets or no brackets at all, like &lt;code&gt;1.5em 1em 0 2em&lt;/code&gt;, &lt;code&gt;Helvetica, Arial, sans-serif&lt;/code&gt;, or &lt;code&gt;[col1-start]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03fb6064c6c2fc2be5a0c18ac925e1d644bb26f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../values/lists&quot;&gt;Lists&lt;/a&gt; are equal if their contents are equal. Comma-separated lists aren&amp;rsquo;t equal to space-separated lists, and bracketed lists aren&amp;rsquo;t equal to unbracketed lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b72b3b9a917f2faba113c24e686f9c2fb3b14f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../values/maps&quot;&gt;Maps&lt;/a&gt; are equal if their keys and values are both equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747d03b29c503dff778d08042da5355ddc465e09" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../values/maps&quot;&gt;Maps&lt;/a&gt; that associate values with keys, like &lt;code&gt;(&quot;background&quot;: red, &quot;foreground&quot;: pink)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca2454799375d750f81e262506bb608ad16dd97b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../values/numbers&quot;&gt;Numbers&lt;/a&gt; are equal if they have the same value &lt;em&gt;and&lt;/em&gt; the same units, or if their values are equal when their units are converted between one another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9660ad2e2bfb0a8d544e4f6f5363c67899901278" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../values/numbers&quot;&gt;Numbers&lt;/a&gt;, which may or may not have units, like &lt;code&gt;12&lt;/code&gt; or &lt;code&gt;100px&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9468d38f34f74db552dc0cb519110995f9bdaf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../values/strings&quot;&gt;Strings&lt;/a&gt; are unusual in that &lt;a href=&quot;../values/strings#unquoted&quot;&gt;unquoted&lt;/a&gt; and &lt;a href=&quot;../values/strings#quoted&quot;&gt;quoted&lt;/a&gt; strings with the same contents are considered equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62a9950b969e28cd6c271540b11b858f59a6eca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../values/strings&quot;&gt;Strings&lt;/a&gt;, which may or may not have quotes, like &lt;code&gt;&quot;Helvetica Neue&quot;&lt;/code&gt; or &lt;code&gt;bold&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92e95631d9c3ef427d11d616da3a9e5298fc47d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variables&quot;&gt;Variable declarations&lt;/a&gt;, like &lt;code&gt;$var: value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aabd365aa902c5af2c0fdc3bb488bac0e3fcdde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variables&quot;&gt;Variables&lt;/a&gt;, like &lt;code&gt;$var&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff07061a232552eb02bbf0597d4a22a5cd489cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;at-rules/at-root&quot;&gt;&lt;code&gt;@at-root&lt;/code&gt;&lt;/a&gt; puts styles within it at the root of the CSS document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d6d7975aab23abb7da23a3aaf84e920ad710ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;at-rules/debug&quot;&gt;&lt;code&gt;@debug&lt;/code&gt;&lt;/a&gt; prints a message for debugging purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7ffcc109313e95ca696e63e17cc8d95959a915" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;at-rules/error&quot;&gt;&lt;code&gt;@error&lt;/code&gt;&lt;/a&gt; causes compilation to fail with an error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f394067ce4781feb5d43402f00fa929cef3247" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;at-rules/extend&quot;&gt;&lt;code&gt;@extend&lt;/code&gt;&lt;/a&gt; allows selectors to inherit styles from one another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d6cafbd73e1cd0c3ac4193264ce80835d65e4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;at-rules/forward&quot;&gt;&lt;code&gt;@forward&lt;/code&gt;&lt;/a&gt; loads a Sass stylesheet and makes its mixins, functions, and variables available when your stylesheet is loaded with the &lt;code&gt;@use&lt;/code&gt; rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0a940b49e9d71e58fd6acbd1470990bfcdcaf5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;at-rules/function&quot;&gt;&lt;code&gt;@function&lt;/code&gt;&lt;/a&gt; defines custom functions that can be used in &lt;a href=&quot;syntax/structure#expressions&quot;&gt;SassScript expressions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93de97f32495d260e7cd89eb81357d194a797f3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;at-rules/import&quot;&gt;&lt;code&gt;@import&lt;/code&gt;&lt;/a&gt; extends the CSS at-rule to load styles, mixins, functions, and variables from other stylesheets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c412a7ddf7aef006d50d6d5c67ae98ebfe7f6c7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;at-rules/mixin&quot;&gt;&lt;code&gt;@mixin&lt;/code&gt; and &lt;code&gt;@include&lt;/code&gt;&lt;/a&gt; makes it easy to re-use chunks of styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8acff6bd2f7c5eb81dc074b1331d6406c1499e16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;at-rules/use&quot;&gt;&lt;code&gt;@use&lt;/code&gt;&lt;/a&gt; loads mixins, functions, and variables from other Sass stylesheets, and combines CSS from multiple stylesheets together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c333bcadcf23636fe0308ea6d2588bb01ac0ac4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;at-rules/warn&quot;&gt;&lt;code&gt;@warn&lt;/code&gt;&lt;/a&gt; prints a warning without stopping compilation entirely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6f0065684b682dedf8d8921e83549cbe04eb947" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cli/dart-sass&quot;&gt;Dart Sass&lt;/a&gt; has the same command-line interface no matter how you &lt;a href=&quot;https://sass-lang.com/dart-sass&quot;&gt;install it&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6da7cad1ff794886932519a5bee9de372f4ca4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cli/ruby-sass&quot;&gt;Ruby Sass&lt;/a&gt; is &lt;a href=&quot;https://sass-lang.com/ruby-sass&quot;&gt;deprecated&lt;/a&gt;, and we recommend you move to a different implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e3870019c454d6c7e3bbed5b77bd108a174067" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;control/each&quot;&gt;&lt;code&gt;@each&lt;/code&gt;&lt;/a&gt; evaluates a block for each element in a &lt;a href=&quot;../values/lists&quot;&gt;list&lt;/a&gt; or each pair in a &lt;a href=&quot;../values/maps&quot;&gt;map&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505ee6af7795596a133894798b3f4547eed49e47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;control/for&quot;&gt;&lt;code&gt;@for&lt;/code&gt;&lt;/a&gt; evaluates a block a certain number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b441a08ec330814bb84f56c14387a9b8c7e74e20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;control/if&quot;&gt;&lt;code&gt;@if&lt;/code&gt;&lt;/a&gt; controls whether or not a block is evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33b8c2c3c4dc842a8ff6210bbc0453346fce01f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;control/while&quot;&gt;&lt;code&gt;@while&lt;/code&gt;&lt;/a&gt; evaluates a block until a certain condition is met.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f5cf443a612f7fdbc6adfec2b93b81ab30d7e5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;extend&quot;&gt;&lt;code&gt;@extend&lt;/code&gt; rules&lt;/a&gt; are also global, which makes it difficult to predict which style rules will be extended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d164837bd2960f310219081272637ef6b112c14f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://blogs.msdn.microsoft.com/ie/2008/10/16/ending-expressions/&quot;&gt;&lt;code&gt;expression()&lt;/code&gt;&lt;/a&gt; and functions beginning with &lt;a href=&quot;https://blogs.msdn.microsoft.com/ie/2009/02/19/the-css-corner-using-filters-in-ie8/&quot;&gt;&lt;code&gt;progid:&lt;/code&gt;&lt;/a&gt; are legacy Internet Explorer features that use non-standard syntax. Although they&amp;rsquo;re no longer supported by recent browsers, Sass continues to parse them for backwards compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0f2db0762f2cd95f52421d70c81e6f10edf19c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/--*&quot;&gt;CSS custom properties&lt;/a&gt;, also known as CSS variables, have an unusual declaration syntax: they allow almost any text at all in their declaration values. What&amp;rsquo;s more, those values are accessible to JavaScript, so any value might potentially be relevant to the user. This includes values that would normally be parsed as SassScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1835b7951cec6f31ac33b6ef3586660d0c62e05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#Color_keywords&quot;&gt;CSS color names&lt;/a&gt; are parsed as &lt;a href=&quot;colors&quot;&gt;colors&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b55b449d157d64aedb20422842e5c80a6e6b3a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://npmjs.com/package/node-sass&quot;&gt;Node Sass&lt;/a&gt; and &lt;a href=&quot;https://npmjs.com/package/sass&quot;&gt;Dart Sass on npm&lt;/a&gt; provide an &lt;a href=&quot;https://github.com/sass/node-sass#importer--v200---experimental&quot;&gt;&lt;code&gt;importer&lt;/code&gt; option&lt;/a&gt; as part of their JSAPI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5dba0c54bb41a9c6d6f39ae76c6cfbbff5d1f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pub.dartlang.org/packages/sass&quot;&gt;Dart Sass on pub&lt;/a&gt; provides an abstract &lt;a href=&quot;https://pub.dartlang.org/documentation/sass/latest/sass/Importer-class.html&quot;&gt;&lt;code&gt;Importer&lt;/code&gt; class&lt;/a&gt; that can be extended by a custom importer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7684953a350ef97d76dacc6c08e84b4c050bfb8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://sass-lang.com/blog/ruby-sass-is-unsupported&quot;&gt;Ruby Sass has reached end of life&lt;/a&gt; and is now totally unmaintained. Please switch to &lt;a href=&quot;https://sass-lang.com/dart-sass&quot;&gt;Dart Sass&lt;/a&gt; or &lt;a href=&quot;https://sass-lang.com/libsass&quot;&gt;LibSass&lt;/a&gt; at your earliest convenience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df0ac54e123ff508cb4149c4fac3d92e36968d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://sass-lang.com/ruby-sass&quot;&gt;Ruby Sass&lt;/a&gt; provides an abstract &lt;a href=&quot;https://www.rubydoc.info/gems/sass/Sass/Importers/Base&quot;&gt;&lt;code&gt;Importers::Base&lt;/code&gt; class&lt;/a&gt; that can be extended by a custom importer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806633cdf62f5cf75d632c2c64f8b44e90ac7b59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;operators/boolean&quot;&gt;&lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, and &lt;code&gt;not&lt;/code&gt;&lt;/a&gt; have the usual boolean behavior. Sass considers every value &amp;ldquo;true&amp;rdquo; except for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="178c71b9f395df4e79925d053a4e948fa2c69387" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;operators/equality&quot;&gt;&lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;&lt;/a&gt; are used to check if two values are the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61bae88ca894c69629b27ce6639123ace2d514a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;operators/numeric&quot;&gt;&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, and &lt;code&gt;%&lt;/code&gt;&lt;/a&gt; have their usual mathematical meaning for numbers, with special behaviors for units that matches the use of units in scientific math.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21cae4d25d3bc07d5456eb2ac76ae2babf878a7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;operators/relational&quot;&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;gt;=&lt;/code&gt;&lt;/a&gt; check whether two numbers are greater or less than one another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887750323f7e66ecfe692cb1cb76c7b839c5bdf2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;operators/string&quot;&gt;&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, and &lt;code&gt;/&lt;/code&gt;&lt;/a&gt; can be used to concatenate strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab17c967ce08b8304f3d9112669a6037ba0f3c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;special-functions&quot;&gt;Special functions&lt;/a&gt;, like &lt;code&gt;calc(1px + 100%)&lt;/code&gt; or &lt;code&gt;url(http://myapp.com/assets/logo.png)&lt;/code&gt;, that have their own unique parsing rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fcbb10281d86714191bb0bb66bf4b7be4d0db3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;values/colors&quot;&gt;Colors&lt;/a&gt;, which can be referred to by their hex representation or by name, like &lt;code&gt;#c6538c&lt;/code&gt; or &lt;code&gt;blue&lt;/code&gt;, or returned from functions, like &lt;code&gt;rgb(107, 113, 127)&lt;/code&gt; or &lt;code&gt;hsl(210, 100%, 20%)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18cd92066f6f9e25c15bdce977d39695af2d4cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;values/functions&quot;&gt;Function references&lt;/a&gt; returned by &lt;a href=&quot;modules/meta#get-function&quot;&gt;&lt;code&gt;get-function()&lt;/code&gt;&lt;/a&gt; and called with &lt;a href=&quot;modules/meta#call&quot;&gt;&lt;code&gt;call()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5747563047f53427bacfd77122f7a4b479acc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;values/lists&quot;&gt;Lists of values&lt;/a&gt;, which may be separated by spaces or commas and which may be enclosed in square brackets or no brackets at all, like &lt;code&gt;1.5em 1em 0 2em&lt;/code&gt;, &lt;code&gt;Helvetica, Arial, sans-serif&lt;/code&gt;, or &lt;code&gt;[col1-start]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6989b8ee603617a8794d8d9b6c232aef2f600878" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;values/maps&quot;&gt;Maps&lt;/a&gt; that associate values with keys, like &lt;code&gt;(&quot;background&quot;: red, &quot;foreground&quot;: pink)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf182c2c2dd7f3f710c68ae3013af41befb15ae8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;values/numbers&quot;&gt;Numbers&lt;/a&gt;, which may or may not have units, like &lt;code&gt;12&lt;/code&gt; or &lt;code&gt;100px&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0103abc16406ca7e1a7b35f78e4cb95374adf3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;values/strings&quot;&gt;Strings&lt;/a&gt;, which may or may not have quotes, like &lt;code&gt;&quot;Helvetica Neue&quot;&lt;/code&gt; or &lt;code&gt;bold&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ab4b2b0c00c8bff3cda1297e9849ad70eaeea6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;compressed&quot;&lt;/code&gt; removes as many extra characters as possible, and writes the entire stylesheet on a single line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bfcfe5af2af838633ef679417adf6fc511ac432" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;expanded&quot;&lt;/code&gt; (the default for Dart Sass) writes each selector and declaration on its own line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e98fc54dc39d858973e8163f107424c83cdff9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;nested&quot;&lt;/code&gt; (the default for Node Sass, not supported by Dart Sass) indents CSS rules to match the nesting of the Sass source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4780ee60581bf3de57ade61b9ef33bdc120c5e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$base&lt;/code&gt; and &lt;code&gt;$exponent&lt;/code&gt; must be unitless.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8133f771207a572432ecd2c503ab2bffd0d74c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$min&lt;/code&gt;, &lt;code&gt;$number&lt;/code&gt;, and &lt;code&gt;$max&lt;/code&gt; must have compatible units, or all be unitless.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092ae01ee620d781d8919e1d258d6dfc250215d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$number&lt;/code&gt; and &lt;code&gt;$base&lt;/code&gt; must be unitless.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246d5ba1927a859276e45a3cf9041845f90dcf4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$number&lt;/code&gt; must be an angle (its units must be compatible with &lt;code&gt;deg&lt;/code&gt;) or unitless. If &lt;code&gt;$number&lt;/code&gt; has no units, it is assumed to be in &lt;code&gt;rad&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642b4a449ff683179c627589fb94fe1bfa04bd67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$number&lt;/code&gt; must be unitless.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f91f23eb9062c96d9d8b11d7335863f9a31e80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$y&lt;/code&gt; and &lt;code&gt;$x&lt;/code&gt; must have compatible units or be unitless.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2290b226aeab33c5ce4b19775b7c8b51e299c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; in SassScript #parent-script</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; in SassScript＃父脚本</target>
        </trans-unit>
        <trans-unit id="db4484f04fa75658b7e989eea751639085279477" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; must appear at the beginning of a compound selector, but it can be followed by a suffix that will be added to the parent selector. For example:</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; 必须出现在复合选择器的开头，但是可以在其后跟一个后缀，该后缀将添加到父选择器中。例如：</target>
        </trans-unit>
        <trans-unit id="3be48b1b9c0b668f20f9edec84fb8d31b6f07933" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; will be replaced with the parent selector as it appears in the CSS. This means that if you have a deeply nested rule, the parent selector will be fully resolved before the &lt;code&gt;&amp;amp;&lt;/code&gt; is replaced. For example:</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; 将替换为CSS中出现的父选择器。这意味着，如果您具有深层嵌套的规则，则在替换 &lt;code&gt;&amp;amp;&lt;/code&gt; 之前，父选择器将被完全解析。例如：</target>
        </trans-unit>
        <trans-unit id="e74bb6cbb886274ba0c6509355cbfc7e789ff3f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;expression&amp;gt; % &amp;lt;expression&amp;gt;&lt;/code&gt; returns the remainder of the first &lt;a href=&quot;../syntax/structure#expressions&quot;&gt;expression&lt;/a&gt;&amp;rsquo;s value divided by the second&amp;rsquo;s. This is known as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Modulo_operation&quot;&gt;&lt;em&gt;modulo&lt;/em&gt; operator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8460dff940ce314ef20bb6b1bf79112b61e5a39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;expression&amp;gt; &amp;gt; &amp;lt;expression&amp;gt;&lt;/code&gt; returns whether the first &lt;a href=&quot;../syntax/structure#expressions&quot;&gt;expression&lt;/a&gt;&amp;rsquo;s value is greater than to the second&amp;rsquo;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c746c5610a52daad2de714f02b1db8e5e5cb2c48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;expression&amp;gt; &amp;gt;= &amp;lt;expression&amp;gt;&lt;/code&gt;, returns whether the first &lt;a href=&quot;../syntax/structure#expressions&quot;&gt;expression&lt;/a&gt;&amp;rsquo;s value is greater than or equal to the second&amp;rsquo;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f77af70741a4537c529d67b86d9b55d9b77d573" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;expression&amp;gt; &amp;lt; &amp;lt;expression&amp;gt;&lt;/code&gt; returns whether the first &lt;a href=&quot;../syntax/structure#expressions&quot;&gt;expression&lt;/a&gt;&amp;rsquo;s value is less than the second&amp;rsquo;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8118954e611a8cbc8f17461c92bd59770d02d2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;expression&amp;gt; &amp;lt;= &amp;lt;expression&amp;gt;&lt;/code&gt; returns whether the first &lt;a href=&quot;../syntax/structure#expressions&quot;&gt;expression&lt;/a&gt;&amp;rsquo;s value is less than or equal to the second&amp;rsquo;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a3b882e7f0d5a6665b5cb29ab9409e0595964b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;expression&amp;gt; * &amp;lt;expression&amp;gt;&lt;/code&gt; multiplies the first &lt;a href=&quot;../syntax/structure#expressions&quot;&gt;expression&lt;/a&gt;&amp;rsquo;s value by the second&amp;rsquo;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac6d5d757a27ca21500c05fccb03d9108d3f206" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;expression&amp;gt; + &amp;lt;expression&amp;gt;&lt;/code&gt; adds the first &lt;a href=&quot;../syntax/structure#expressions&quot;&gt;expression&lt;/a&gt;&amp;rsquo;s value to the second&amp;rsquo;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e525eedca65a6c0ff96c760f29d8c1c28382bc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;expression&amp;gt; + &amp;lt;expression&amp;gt;&lt;/code&gt; returns a string that contains both expressions&amp;rsquo; values. If the either value is a &lt;a href=&quot;../values/strings#quoted&quot;&gt;quoted string&lt;/a&gt;, the result will be quoted; otherwise, it will be unquoted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda5b45ae7fc0c0d375385fa443e3ca744d787a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;expression&amp;gt; - &amp;lt;expression&amp;gt;&lt;/code&gt; returns an unquoted string that contains both expressions&amp;rsquo; values, separated by &lt;code&gt;-&lt;/code&gt;. This is a legacy operator, and &lt;a href=&quot;../interpolation&quot;&gt;interpolation&lt;/a&gt; should generally be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff14987d984b351bf4b09e6203e7fe2483759ba7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;expression&amp;gt; - &amp;lt;expression&amp;gt;&lt;/code&gt; subtracts the first &lt;a href=&quot;../syntax/structure#expressions&quot;&gt;expression&lt;/a&gt;&amp;rsquo;s value from the second&amp;rsquo;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9b1cb49401363f413a0486d9aaa456639e787e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;expression&amp;gt; / &amp;lt;expression&amp;gt;&lt;/code&gt; divides the first &lt;a href=&quot;../syntax/structure#expressions&quot;&gt;expression&lt;/a&gt;&amp;rsquo;s value by the second&amp;rsquo;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a38687193d582ab6e3971258fb7e32b57b99b392" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;expression&amp;gt; / &amp;lt;expression&amp;gt;&lt;/code&gt; returns an unquoted string that contains both expressions&amp;rsquo; values, separated by &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f089d4664fa13c4e00982521c5358cde2dafab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;expression&amp;gt; and &amp;lt;expression&amp;gt;&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if &lt;em&gt;both&lt;/em&gt; expressions&amp;rsquo; values are &lt;code&gt;true&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt; if either is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add91db9549275cfcc1c0518c812463fbaf95d2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;expression&amp;gt; or &amp;lt;expression&amp;gt;&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if &lt;em&gt;either&lt;/em&gt; expression&amp;rsquo;s value is &lt;code&gt;true&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt; if both are &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0f3ded57168cfb543257ee060bd74c050e12dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;/code&gt; or &lt;code&gt;&quot;&lt;/code&gt;, whichever was used to define that string, which can be escaped as &lt;code&gt;\'&lt;/code&gt; or &lt;code&gt;\&quot;&lt;/code&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fddd60fb6733ac6d3e64b750593da7fcfbe766d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&amp;lt;expression&amp;gt;&lt;/code&gt; returns the expression&amp;rsquo;s value without changing it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27aa1b0e2e33a3722726a4b87a0a87681d1d3357" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&amp;lt;expression&amp;gt;&lt;/code&gt; returns an unquoted string starting with &lt;code&gt;-&lt;/code&gt; and followed by the expression&amp;rsquo;s value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2663eb2fba28098228c72f378d32c9ab1377f6a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&amp;lt;expression&amp;gt;&lt;/code&gt; returns the negative version of the expression&amp;rsquo;s value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7de07c1148566f94dff7bd7c549cac110ec8980" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt; as part of an identifier. The only exception are units; Sass normally allows any valid identifier to be used as an identifier, but units may not contain a hyphen followed by a digit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4412c26523b7984c3d3f93cb024c5d8f394d54af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt; at the beginning of a literal number, which is parsed as a negative number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ee21d0d931d6bca344ea29d2344ff7633dcc49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt; before a value other than a literal number, which is parsed as unary negation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094318e85503a6197d79b4bf39b86275662cdbdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt; between an expression and a literal number with no whitespace, which is parsed as subtraction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3034269c774a83e52a94621440e73b293e16604" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt; between two numbers regardless of whitespace, which is parsed as subtraction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45bbffa06887a2fd5954a5bdd885197e945f4cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/&amp;lt;expression&amp;gt;&lt;/code&gt; returns an unquoted string starting with &lt;code&gt;/&lt;/code&gt; and followed by the expression&amp;rsquo;s value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a2c5e53a3b872c472622e6bad2a4db48055e6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;/code&gt;-Rules and Directives #directives</source>
          <target state="translated">&lt;code&gt;@&lt;/code&gt; -规则和指令＃指令</target>
        </trans-unit>
        <trans-unit id="06d7120408826b63989db589015a5844679067f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@at-root (without: ...)&lt;/code&gt; and &lt;code&gt;@at-root (with: ...)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@at-root (without: ...)&lt;/code&gt; 和 &lt;code&gt;@at-root (with: ...)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c6d7f151be410aecc9c0cf086e43b40d5dc3eed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@at-root&lt;/code&gt; #at-root</source>
          <target state="translated">&lt;code&gt;@at-root&lt;/code&gt; ＃at-root</target>
        </trans-unit>
        <trans-unit id="337cff3f5971b6afd4311a912eb91bbf2763bb87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@each&lt;/code&gt; #each-directive</source>
          <target state="translated">&lt;code&gt;@each&lt;/code&gt; ＃每个指令</target>
        </trans-unit>
        <trans-unit id="41b96c9da605b44e04361598d79cd2f3791faf62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@extend&lt;/code&gt; #extend</source>
          <target state="translated">&lt;code&gt;@extend&lt;/code&gt; extend ＃扩展</target>
        </trans-unit>
        <trans-unit id="4792067a9d7b6cb233253ecefd3ff97ce2f58751" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@extend&lt;/code&gt; in Directives</source>
          <target state="translated">&lt;code&gt;@extend&lt;/code&gt; 指令中的@extend</target>
        </trans-unit>
        <trans-unit id="0c6fae8894825d87d5f8c7a64c8da6b31c2a1f26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@extend&lt;/code&gt; works by inserting the extending selector (e.g. &lt;code&gt;.seriousError&lt;/code&gt;) anywhere in the stylesheet that the extended selector (.e.g &lt;code&gt;.error&lt;/code&gt;) appears. Thus the example above:</source>
          <target state="translated">&lt;code&gt;@extend&lt;/code&gt; 通过将扩展选择器（例如 &lt;code&gt;.seriousError&lt;/code&gt; ）插入样式表中扩展选择器（例如 &lt;code&gt;.error&lt;/code&gt; ）出现的任何地方来工作。因此，上面的示例：</target>
        </trans-unit>
        <trans-unit id="07bc881dccbac1905e6edad5ffeb3d11a9e70dd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@extend&lt;/code&gt;-Only Selectors #placeholders</source>
          <target state="translated">&lt;code&gt;@extend&lt;/code&gt; -仅选择器＃占位符</target>
        </trans-unit>
        <trans-unit id="1e92b7a9ad6207d2228fe573e3830a130be1ac14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@extend&lt;/code&gt;s</source>
          <target state="translated">&lt;code&gt;@extend&lt;/code&gt;s</target>
        </trans-unit>
        <trans-unit id="f5bec91eb86dfe7a84a9c9b1835e5ed38fca0a55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@import&lt;/code&gt; #import</source>
          <target state="translated">&lt;code&gt;@import&lt;/code&gt; import＃导入</target>
        </trans-unit>
        <trans-unit id="d551fde893e65eb2fa23b14a2576a90d8ad51c27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@import&lt;/code&gt; makes all variables, mixins, and functions globally accessible. This makes it very difficult for people (or tools) to tell where anything is defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73658d95ac7977a485a3891afda7f38602ea4a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@import&lt;/code&gt; takes a filename to import. By default, it looks for a Sass file to import directly, but there are a few circumstances under which it will compile to a CSS &lt;code&gt;@import&lt;/code&gt; rule:</source>
          <target state="translated">&lt;code&gt;@import&lt;/code&gt; 需要导入文件名。默认情况下，它会查找直接导入的Sass文件，但是在某些情况下，它将编译为CSS &lt;code&gt;@import&lt;/code&gt; 规则：</target>
        </trans-unit>
        <trans-unit id="3a4cbef6ae19d980221cc7d92dacabb64fa9f2e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@media&lt;/code&gt; #media</source>
          <target state="translated">&lt;code&gt;@media&lt;/code&gt; #media</target>
        </trans-unit>
        <trans-unit id="e5bad2df7dc3925893a9d5eed424bfe121ac528b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@media&lt;/code&gt; directives in Sass behave just like they do in plain CSS, with one extra capability: they can be nested in CSS rules. If a &lt;code&gt;@media&lt;/code&gt; directive appears within a CSS rule, it will be bubbled up to the top level of the stylesheet, putting all the selectors on the way inside the rule. This makes it easy to add media-specific styles without having to repeat selectors or break the flow of the stylesheet. For example:</source>
          <target state="translated">&lt;code&gt;@media&lt;/code&gt; Sass中的@media指令的行为就像在普通CSS中一样，具有一项额外的功能：它们可以嵌套在CSS规则中。如果 &lt;code&gt;@media&lt;/code&gt; 指令出现在CSS规则内，它将冒泡到样式表的顶层，从而将所有选择器置于规则内。这样就可以轻松添加特定于媒体的样式，而不必重复选择器或中断样式表的流程。例如：</target>
        </trans-unit>
        <trans-unit id="0d3c576ea379cf576f223b9b071de41f6560ebe0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@media&lt;/code&gt; queries can also be nested within one another. The queries will then be combined using the &lt;code&gt;and&lt;/code&gt; operator. For example:</source>
          <target state="translated">&lt;code&gt;@media&lt;/code&gt; 查询也可以彼此嵌套。然后将使用 &lt;code&gt;and&lt;/code&gt; 运算符组合查询。例如：</target>
        </trans-unit>
        <trans-unit id="99ca1eb856fa1f57458a3aa81003af4c5bb7a39c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&lt;/code&gt;, which can be escaped as &lt;code&gt;\\&lt;/code&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce40f133130828d331e19a1104c7271e04657fde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;absolute&lt;/code&gt; uses the absolute &lt;a href=&quot;https://en.wikipedia.org/wiki/File_URI_scheme&quot;&gt;&lt;code&gt;file:&lt;/code&gt; URLs&lt;/a&gt; of the Sass source files. Note that absolute URLs will only work on the same computer that the CSS was compiled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f923df34a11f9f08fe5549bd7c0e64be2ee91b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt; forwards all members except those that started with &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;_&lt;/code&gt; in the original stylesheet, since that was commonly used to mark a package-private member before the module system was introduced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4edc761e294f59310288b68035b912c1b284d38f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt; refers to all at-rules &lt;em&gt;and&lt;/em&gt; style rules should be excluded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2385ae13a1a5e2e7af235ef143d57ffc199c3bab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;at-error&lt;/code&gt; indicates that the Sass &lt;code&gt;@error&lt;/code&gt; directive is supported.</source>
          <target state="translated">&lt;code&gt;at-error&lt;/code&gt; 表示支持Sass &lt;code&gt;@error&lt;/code&gt; 指令。</target>
        </trans-unit>
        <trans-unit id="869e6a2ef5f3caf9fd617a2226048d751d01eec6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;at-error&lt;/code&gt;, which means that the &lt;a href=&quot;../at-rules/error&quot;&gt;&lt;code&gt;@error&lt;/code&gt; rule&lt;/a&gt; is supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a95ea0016020ba3132fc94079d90171de01c53f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atan2($y, $x)&lt;/code&gt; is distinct from &lt;code&gt;atan($y / $x)&lt;/code&gt; because it preserves the quadrant of the point in question. For example, &lt;code&gt;atan2(1, -1)&lt;/code&gt; corresponds to the point &lt;code&gt;(-1, 1)&lt;/code&gt; and returns &lt;code&gt;135deg&lt;/code&gt;. In contrast, &lt;code&gt;atan(1 / -1)&lt;/code&gt; and &lt;code&gt;atan(-1 / 1)&lt;/code&gt; resolve first to &lt;code&gt;atan(-1)&lt;/code&gt;, so both return &lt;code&gt;-45deg&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449a4b8cfb58631454e1218dcf86f840f89c5ebd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto&lt;/code&gt; (the default) uses relative URLs to link from the source map to the Sass stylesheets where possible, and absolute &lt;a href=&quot;https://en.wikipedia.org/wiki/File_URI_scheme&quot;&gt;&lt;code&gt;file:&lt;/code&gt; URLs&lt;/a&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde8672dab99c2d6f4ee0c6305cd2b00d8b5d424" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;calc()&lt;/code&gt;, &lt;code&gt;element()&lt;/code&gt;, &lt;code&gt;progid:...()&lt;/code&gt;, and &lt;code&gt;expression()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e46e468f51253dd232b1db4fb4f65227f6e53c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compact&lt;/code&gt; (not supported by Dart Sass) puts each CSS rule on its own single line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1968478d5b1407ac1009ac75a7682eba5a2ddccc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compact&lt;/code&gt; puts each CSS rule on its own single line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394f4c49f242d9064ce59f30fbc9339a4b781d74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compressed&lt;/code&gt; removes as many extra characters as possible, and writes the entire stylesheet on a single line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec904574f8223592787d7d3496b5a99e35ecdb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cr&lt;/code&gt; (the default) uses U+000DCARRIAGERETURN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90da282ddd036b5623e83dd53b0cd644d67fcb10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crlf&lt;/code&gt; uses U+000DCARRIAGERETURN followed by U+000ALINEFEED.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b8f550fb59c6e7cbcca7f2f0c6d6de9ffd5c54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;custom-property&lt;/code&gt; indicates that the &lt;a href=&quot;https://www.w3.org/TR/css-variables-1/&quot;&gt;Custom Properties Level 1&lt;/a&gt; spec is supported. This means that custom properties are parsed statically, with only interpolation treated as SassScript.</source>
          <target state="translated">&lt;code&gt;custom-property&lt;/code&gt; 表示支持&amp;ldquo; &lt;a href=&quot;https://www.w3.org/TR/css-variables-1/&quot;&gt;自定义属性级别1&amp;rdquo;&lt;/a&gt;规范。这意味着自定义属性是静态解析的，只有插值被视为SassScript。</target>
        </trans-unit>
        <trans-unit id="efee39b330c8c8247cb65fa6ae384d12e6619d18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;custom-property&lt;/code&gt;, which means that &lt;a href=&quot;../style-rules/declarations#custom-properties&quot;&gt;custom property declaration&lt;/a&gt; values don&amp;rsquo;t support any &lt;a href=&quot;../syntax/structure#expressions&quot;&gt;expressions&lt;/a&gt; other than &lt;a href=&quot;../interpolation&quot;&gt;interpolation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eedaa5c03624b42ab70e79d7f96970698e7af54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expanded&lt;/code&gt; (the default) writes each selector and declaration on its own line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e669feb244a4d686d7dbf21f6f9e464e67c680" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expanded&lt;/code&gt; writes each selector and declaration on its own line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b49e8fd637e9898f905f5d8712420df43a8791" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extend-selector-pseudoclass&lt;/code&gt; indicates that &lt;code&gt;@extend&lt;/code&gt; will reach into selector pseudoclasses like &lt;code&gt;:not&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;extend-selector-pseudoclass&lt;/code&gt; &lt;code&gt;@extend&lt;/code&gt; 表示@extend将进入选择器伪类，如 &lt;code&gt;:not&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34f52af957eab919f2182bc80b43e57007b306ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extend-selector-pseudoclass&lt;/code&gt;, which means that the &lt;a href=&quot;../at-rules/extend&quot;&gt;&lt;code&gt;@extend&lt;/code&gt; rule&lt;/a&gt; will affect selectors nested in pseudo-classes like &lt;code&gt;:not()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a2a96f7bc6541082e5ba73e6ff6ebb20e8126a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file&lt;/code&gt; always uses absolute absolute &lt;code&gt;file:&lt;/code&gt; URLs to link from the source map to the Sass stylesheets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d786efc88702812f8288d5f1176e217bb454a8ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;global-variable-shadowing&lt;/code&gt; indicates that a local variable will shadow a global variable unless &lt;code&gt;!global&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;global-variable-shadowing&lt;/code&gt; 指示除非使用 &lt;code&gt;!global&lt;/code&gt; ,否则局部变量将对全局变量进行阴影处理。</target>
        </trans-unit>
        <trans-unit id="15e1c0be8d158504e1213040f37a9a46645059ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;global-variable-shadowing&lt;/code&gt;, which means that a local variable will &lt;a href=&quot;../variables#shadowing&quot;&gt;shadow&lt;/a&gt; a global variable unless it has the &lt;code&gt;!global&lt;/code&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca451d8778eb12a5a7885d44049990abd768d0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inline&lt;/code&gt; includes the text of the Sass stylehseets in the source map directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf9e61532794a6917cbd6f77e7da18429c600ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lf&lt;/code&gt; (the default) uses U+000ALINEFEED.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d1e20ee3a922fd48cd3412d45be47eb6742e19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lfcr&lt;/code&gt; uses U+000ALINEFEED followed by U+000DCARRIAGERETURN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a932aafbf27ea2266d8ad116d2c7816951cc8ac4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min()&lt;/code&gt; and &lt;code&gt;max()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93120b292c599fe615673aa7da6667cee4050b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nested&lt;/code&gt; (the default) indents CSS rules to match the nesting of the Sass source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1261768e29ac7634f52e91c166240ed5de22e59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;none&lt;/code&gt; (the default) doesn&amp;rsquo;t forward any members.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11bc41500f063fa8d21aa28f96fb8130fc4255a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;none&lt;/code&gt; doesn&amp;rsquo;t generate source maps at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5cd156802b44846f2883139e8ed4d662fa88e0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;not &amp;lt;expression&amp;gt;&lt;/code&gt; returns the opposite of the expression&amp;rsquo;s value: it turns &lt;code&gt;true&lt;/code&gt; into &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; into &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571a7b200df3270923fd0a659cf756f023894a8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;not&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt;, and &lt;code&gt;or&lt;/code&gt; are parsed as &lt;a href=&quot;../operators/boolean&quot;&gt;Boolean operators&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4816e01f3526e1f3abcaadad787d7209b27c97f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt; is also &lt;a href=&quot;../at-rules/control/if#truthiness-and-falsiness&quot;&gt;&lt;em&gt;falsey&lt;/em&gt;&lt;/a&gt;, which means it counts as &lt;code&gt;false&lt;/code&gt; for any rules or &lt;a href=&quot;../operators/boolean&quot;&gt;operators&lt;/a&gt; that take booleans. This makes it easy to use values that can be &lt;code&gt;null&lt;/code&gt; as conditions for &lt;a href=&quot;../at-rules/control/if&quot;&gt;&lt;code&gt;@if&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../modules#if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33bd5231d39e91eabb0acebbc193e842119c074f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt; is parsed as &lt;a href=&quot;null&quot;&gt;Sass&amp;rsquo;s &lt;code&gt;null&lt;/code&gt; value&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd0b031bfd8fee46d2ed61a4d9db6035ccc19d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt;, which indicates that it doesn&amp;rsquo;t recognize the URL and another importer should be tried instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd6f3044d622a112b899d9b53eb932259640f382" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prefixed&lt;/code&gt; forwards only members that begin with the prefix passed to the &lt;a href=&quot;#remove-prefix&quot;&gt;&lt;code&gt;--remove-prefix&lt;/code&gt; option&lt;/a&gt;. This option may only be used in conjunction with the &lt;code&gt;--remove-prefix&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804308cb7d88dfa0da7ba3de06f4120cf954ed98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;relative&lt;/code&gt; (the default) uses relative URLs from the location of the source map file to the locations of the Sass source file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e60d74f7d041b7181fd4847dfe5ff12667f6cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rule&lt;/code&gt; refers to style rules. For example, &lt;code&gt;@at-root (with: rule)&lt;/code&gt; excludes all at-rules but preserves style rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2117bbd9193c63d11f15084b334965a0feb2d09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; are parsed as &lt;a href=&quot;booleans&quot;&gt;Booleans&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb9fe82a9496f9cb031ec020ad5daee30964d6bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;units-level-3&lt;/code&gt; indicates full support for unit arithmetic using units defined in the &lt;a href=&quot;http://www.w3.org/TR/css3-values/&quot;&gt;Values and Units Level 3&lt;/a&gt; spec.</source>
          <target state="translated">&lt;code&gt;units-level-3&lt;/code&gt; 表示完全使用&lt;a href=&quot;http://www.w3.org/TR/css3-values/&quot;&gt;值和单位级别3&lt;/a&gt;规范中定义的单位支持单位算术。</target>
        </trans-unit>
        <trans-unit id="7efca854914ed67283c9bd65d91715a187f803c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;units-level3&lt;/code&gt;, which means that &lt;a href=&quot;../values/numbers#units&quot;&gt;unit arithmetic&lt;/a&gt; supports units defined in &lt;a href=&quot;http://www.w3.org/TR/css3-values&quot;&gt;CSS Values and Units Level 3&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d64575bbe4bc1e64b3d8e044b15668204d6e9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Like the &lt;a href=&quot;../at-rules/use&quot;&gt;&lt;code&gt;@use&lt;/code&gt; rule&lt;/a&gt;&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45779c95ed19a041e4fb7f80284d994cc7d95d0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Multi-line comments&lt;/strong&gt; start with &lt;code&gt;/*&lt;/code&gt; and end at the next &lt;code&gt;*/&lt;/code&gt;. If a multi-line comment is written somewhere that a &lt;a href=&quot;structure#statements&quot;&gt;statement&lt;/a&gt; is allowed, it&amp;rsquo;s compiled to a CSS comment. They&amp;rsquo;re also called &lt;strong&gt;loud comment&lt;/strong&gt;, by contrast with silent comments. A multi-line comment that&amp;rsquo;s compiled to CSS may contain &lt;a href=&quot;../interpolation&quot;&gt;interpolation&lt;/a&gt;, which will be evaluated before the comment is compiled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ce836227aa67152075180d778c697737a91f5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Control directives are an advanced feature, and are uncommon in day-to-day styling. They exist mainly for use in &lt;a href=&quot;#mixins&quot;&gt;mixins&lt;/a&gt;, particularly those that are part of libraries like &lt;a href=&quot;http://compass-style.org&quot;&gt;Compass&lt;/a&gt;, and so require substantial flexibility.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;控制指令是一项高级功能，在日常样式中并不常见。它们主要存在于&lt;a href=&quot;#mixins&quot;&gt;混合中&lt;/a&gt;，尤其是那些属于&lt;a href=&quot;http://compass-style.org&quot;&gt;Compass&lt;/a&gt;等库的部分，因此需要很大的灵活性。</target>
        </trans-unit>
        <trans-unit id="7b0abf7d13ed6600e5060e92a8002ebbbe4bde97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; when the &lt;code&gt;@content&lt;/code&gt; directive is specified more than once or in a loop, the style block will be duplicated with each invocation.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果多次或在循环中指定 &lt;code&gt;@content&lt;/code&gt; 指令，则每次调用都会复制样式块。</target>
        </trans-unit>
        <trans-unit id="b363fb07ba177bc687c9eb0ea342660e3b5c8bcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unlike the &lt;a href=&quot;../at-rules/use&quot;&gt;&lt;code&gt;@use&lt;/code&gt; rule&lt;/a&gt;&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69f3d4b2a24c8313bb3d0b8ac837324f88fbec6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;invert&lt;/strong&gt;($color)</source>
          <target state="translated">&lt;strong&gt;invert&lt;/strong&gt;($color)</target>
        </trans-unit>
        <trans-unit id="c2e960d8c4ea3c2d0a9c5b927c6c0d0a9b47333b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;invert&lt;/strong&gt;($color, $weight:100%)</source>
          <target state="translated">&lt;strong&gt;反转&lt;/strong&gt;（$ color，$ weight：100％）</target>
        </trans-unit>
        <trans-unit id="998affe96cc2d3023b43945fdc0a99e32417046f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;random&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;random&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="19ffd7f7c2300537f6f9cc55d276a344545c0c2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;random&lt;/strong&gt;($limit)</source>
          <target state="translated">&lt;strong&gt;random&lt;/strong&gt;($limit)</target>
        </trans-unit>
        <trans-unit id="c70b56739f39853ec65ee72a8ed5a083da4f0325" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;rgba&lt;/strong&gt;($color, $alpha)</source>
          <target state="translated">&lt;strong&gt;rgba&lt;/strong&gt;（$ color，$ alpha）</target>
        </trans-unit>
        <trans-unit id="3dd3a46979033a4aec6fa3d253ba74fa27b950cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;rgba&lt;/strong&gt;($red, $green, $blue, $alpha)</source>
          <target state="translated">&lt;strong&gt;rgba&lt;/strong&gt;（$ red，$ green，$ blue，$ alpha）</target>
        </trans-unit>
        <trans-unit id="99a4a91c622a325dee3b3b9470ea62dfa23377ad" translate="yes" xml:space="preserve">
          <source>@-Rules and Directives</source>
          <target state="translated">@-规则和指令</target>
        </trans-unit>
        <trans-unit id="dcba8815d4d15801ec2f4cefdd2c2a259ddc2acb" translate="yes" xml:space="preserve">
          <source>@at-root</source>
          <target state="translated">@at-root</target>
        </trans-unit>
        <trans-unit id="ef6708134fa7004b0a92f751de2d83b4b7a0e966" translate="yes" xml:space="preserve">
          <source>@debug</source>
          <target state="translated">@debug</target>
        </trans-unit>
        <trans-unit id="5a104720fd47e5de4a82907b888ca895f1310a23" translate="yes" xml:space="preserve">
          <source>@each</source>
          <target state="translated">@each</target>
        </trans-unit>
        <trans-unit id="e9c9fd1acea7e30473cf8113ced9f44be8a1146e" translate="yes" xml:space="preserve">
          <source>@error</source>
          <target state="translated">@error</target>
        </trans-unit>
        <trans-unit id="85c52d8d21850e2499104c8dfad08304983611d2" translate="yes" xml:space="preserve">
          <source>@extend</source>
          <target state="translated">@extend</target>
        </trans-unit>
        <trans-unit id="b34b4c62edd15ca6ff9a3f5bde83ca12f4b09cb6" translate="yes" xml:space="preserve">
          <source>@for</source>
          <target state="translated">@for</target>
        </trans-unit>
        <trans-unit id="86805e6f2fcb60d4f86c1627c79a888026a98484" translate="yes" xml:space="preserve">
          <source>@forward</source>
          <target state="translated">@forward</target>
        </trans-unit>
        <trans-unit id="db03425959b005474abd611af6ef5e3662b26739" translate="yes" xml:space="preserve">
          <source>@function</source>
          <target state="translated">@function</target>
        </trans-unit>
        <trans-unit id="1ec590e5d8fee38b6fdcd4ef72bfa95e6f0a4e2b" translate="yes" xml:space="preserve">
          <source>@if</source>
          <target state="translated">@if</target>
        </trans-unit>
        <trans-unit id="3589bf41a05d7b997773318634dd7f105c6b67ca" translate="yes" xml:space="preserve">
          <source>@if and @else</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685fc8fae398db6142746f337f47d2c9b98facef" translate="yes" xml:space="preserve">
          <source>@import</source>
          <target state="translated">@import</target>
        </trans-unit>
        <trans-unit id="15645e7890dae4357a8f002430138ef5ebf6eade" translate="yes" xml:space="preserve">
          <source>@include</source>
          <target state="translated">@include</target>
        </trans-unit>
        <trans-unit id="26e7f449aa5500e350b4c089e62efadfeb0ec524" translate="yes" xml:space="preserve">
          <source>@media</source>
          <target state="translated">@media</target>
        </trans-unit>
        <trans-unit id="4977549b85c2de13e3e29cf1d33aa5556514a430" translate="yes" xml:space="preserve">
          <source>@mixin</source>
          <target state="translated">@mixin</target>
        </trans-unit>
        <trans-unit id="299b001471d1f7a247e235a952ae7775745e4f42" translate="yes" xml:space="preserve">
          <source>@mixin and @include</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d98be8d2d2f06049301e3e3ae46d3d1a69d0d6e1" translate="yes" xml:space="preserve">
          <source>@use</source>
          <target state="translated">@use</target>
        </trans-unit>
        <trans-unit id="88aeecad57af8adb36e5a66acad8e77aa1196762" translate="yes" xml:space="preserve">
          <source>@warn</source>
          <target state="translated">@warn</target>
        </trans-unit>
        <trans-unit id="115c4f12d1e9aef02100c94ecff9d02d0bcb2b4f" translate="yes" xml:space="preserve">
          <source>@while</source>
          <target state="translated">@while</target>
        </trans-unit>
        <trans-unit id="a03e991150701c8cabbdbd9f6368af7501c1f54e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;-&lt;/code&gt; as part of an identifier. This means that &lt;code&gt;a-1&lt;/code&gt; is an unquoted string with value &lt;code&gt;&quot;a-1&quot;&lt;/code&gt;. The only exception are units; Sass normally allows any valid identifier to be used as an identifier, but identifiers may not contain a hyphen followed by a digit. This means that &lt;code&gt;5px-3px&lt;/code&gt; is the same as &lt;code&gt;5px - 3px&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;-&lt;/code&gt; 作为标识符的一部分。这意味着 &lt;code&gt;a-1&lt;/code&gt; 是值为 &lt;code&gt;&quot;a-1&quot;&lt;/code&gt; 的未引用字符串。唯一的例外是单位；Sass通常允许将任何有效的标识符用作标识符，但是标识符不能包含连字符和数字。这意味着， &lt;code&gt;5px-3px&lt;/code&gt; 是一样的 &lt;code&gt;5px - 3px&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="193cd471bd3b45edad177bfba5675a13de659093" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;-&lt;/code&gt; at the beginning of a literal number. This indicates a negative number, so &lt;code&gt;1 -2&lt;/code&gt; is a list containing &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;-2&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;-&lt;/code&gt; 在文字数量的开始。这表示为负数，因此 &lt;code&gt;1 -2&lt;/code&gt; 是包含 &lt;code&gt;1&lt;/code&gt; 和 &lt;code&gt;-2&lt;/code&gt; 的列表。</target>
        </trans-unit>
        <trans-unit id="8c1deda0d209cd7db92983b9dbbbdf6a99566671" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;-&lt;/code&gt; before a value. This indicates the unary negation operator; that is, the operator that takes a number and returns its negative.</source>
          <target state="translated">一个 &lt;code&gt;-&lt;/code&gt; 值之前。这表示一元否定运算符；也就是说，运算符接受一个数字并返回其负数。</target>
        </trans-unit>
        <trans-unit id="adeb8c58e4817b2c6d53c42899d92470ff609f68" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;-&lt;/code&gt; between two numbers regardless of whitespace. This indicates subtraction, so &lt;code&gt;1 -$var&lt;/code&gt; are the same as &lt;code&gt;1 - $var&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;-&lt;/code&gt; 不管空格的数字介于两者之间。这表示减法，因此 &lt;code&gt;1 -$var&lt;/code&gt; 与 &lt;code&gt;1 - $var&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="61f0e1893bc2b6cc14f2eca7c7f0fd2cc148ca52" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;-&lt;/code&gt; between two numbers with no whitespace. This indicates subtraction, so &lt;code&gt;1-2&lt;/code&gt; is the same as &lt;code&gt;1 - 2&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;-&lt;/code&gt; 没有空白两个数字之间。这表示减法，所以 &lt;code&gt;1-2&lt;/code&gt; 是相同的 &lt;code&gt;1 - 2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4135f4e800e8cf0df11e61aa1ceab4b19f9810b" translate="yes" xml:space="preserve">
          <source>A Sass stylesheet is made up of a series of &lt;em&gt;statements&lt;/em&gt;, which are evaluated in order to build the resulting CSS. Some statements may have &lt;em&gt;blocks&lt;/em&gt;, defined using &lt;code&gt;{&lt;/code&gt; and &lt;code&gt;}&lt;/code&gt;, which contain other statements. For example, a style rule is a statement with a block. That block contains other statements, such as property declarations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4feed6d0efd108e0de2bc2358d0520e83a1b4c" translate="yes" xml:space="preserve">
          <source>A Sass stylesheet is parsed from a sequence of Unicode code points. It's parsed directly, without first being converted to a token stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154fee1b2c14decf9b4de4c7e63a8439d6f45604" translate="yes" xml:space="preserve">
          <source>A common issue users encounter with named colors is that since Sass prefers the same output format as was typed in other output modes, a color interpolated into a selector becomes invalid syntax when compressed. To avoid this, always quote named colors if they are meant to be used in the construction of a selector.</source>
          <target state="translated">用户在使用命名颜色时遇到的一个常见问题是,由于Sass喜欢使用与其他输出模式相同的输出格式,因此在压缩时,插值到选择器中的颜色会变成无效的语法。为了避免这种情况,如果命名的颜色要用于构造选择器,那么总是引用它们。</target>
        </trans-unit>
        <trans-unit id="8436e26a10e958bbaaf1b501db967c13c0f4b81f" translate="yes" xml:space="preserve">
          <source>A content block is &lt;em&gt;lexically scoped&lt;/em&gt;, which means it can only see &lt;a href=&quot;../variables#scope&quot;&gt;local variables&lt;/a&gt; in the scope where the mixin is included. It can&amp;rsquo;t see any variables that are defined in the mixin it&amp;rsquo;s passed to, even if they&amp;rsquo;re defined before the content block is invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c08794f4c885aed53ec851f77ffefcbd088bd92" translate="yes" xml:space="preserve">
          <source>A few CSS properties support &lt;code&gt;/&lt;/code&gt; as a way of separating values. This means Sass has to disambiguate between &lt;code&gt;/&lt;/code&gt; as a property value and &lt;code&gt;/&lt;/code&gt; as division. In order to make this work, if two numbers are separated by &lt;code&gt;/&lt;/code&gt;, Sass will print the result as slash-separated instead of divided unless one of these conditions is met:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a805c2b59e7f653703455d5e5e4b4c2868958ac9" translate="yes" xml:space="preserve">
          <source>A few more are specific to Sass:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157cfd39cc5cf3a052d230d613a265d1ad77a7c8" translate="yes" xml:space="preserve">
          <source>A function reference is returned by &lt;code&gt;get-function($function-name)&lt;/code&gt;. The function can be passed to &lt;code&gt;call($function, $args...)&lt;/code&gt; and the function it refers to will be invoked. First class functions cannot be used directly as CSS output and any attempt to do so will result in an error.</source>
          <target state="translated">函数引用由 &lt;code&gt;get-function($function-name)&lt;/code&gt; 。该函数可以传递给 &lt;code&gt;call($function, $args...)&lt;/code&gt; 并且它所引用的函数将被调用。一流的函数不能直接用作CSS输出，任何尝试都会导致错误。</target>
        </trans-unit>
        <trans-unit id="959a516d152bc2914c2629a35138e01a7df75e69" translate="yes" xml:space="preserve">
          <source>A mixin can include multiple &lt;code&gt;@content&lt;/code&gt; at-rules. If it does, the content block will be included separately for each &lt;code&gt;@content&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6610c35326e616c356cdbaedfdc8abfd29146dd" translate="yes" xml:space="preserve">
          <source>A mixin can pass arguments to its content block the same way it would pass arguments to another mixin by writing &lt;code&gt;@content(&amp;lt;arguments...&amp;gt;)&lt;/code&gt;. The user writing the content block can accept arguments by writing &lt;code&gt;@include &amp;lt;name&amp;gt; using (&amp;lt;arguments...&amp;gt;)&lt;/code&gt;. The argument list for a content block works just like a mixin&amp;rsquo;s argument list, and the arguments passed to it by &lt;code&gt;@content&lt;/code&gt; work just like passing arguments to a mixin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14566534bc6941efc7521bc48d177472b90daa63" translate="yes" xml:space="preserve">
          <source>A property&amp;rsquo;s name can include &lt;a href=&quot;../interpolation&quot;&gt;interpolation&lt;/a&gt;, which makes it possible to dynamically generate properties as needed. You can even interpolate the entire property name!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d447a151cb881d0caf36f5a6221e92300eed60f3" translate="yes" xml:space="preserve">
          <source>A single selector can extend more than one selector. This means that it inherits the styles of all the extended selectors. For example:</source>
          <target state="translated">一个选择器可以扩展一个以上的选择器,这意味着它继承了所有扩展选择器的样式。这意味着它继承了所有扩展选择器的样式。例如:</target>
        </trans-unit>
        <trans-unit id="1c83362b08b433e6b28457a6d04854a38007c965" translate="yes" xml:space="preserve">
          <source>A string identifying for the stylesheet that contained the &lt;code&gt;@use&lt;/code&gt; or &lt;code&gt;@import&lt;/code&gt;. This identifier&amp;rsquo;s format depends on how that stylesheet was loaded:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d4510329d9c2a6cf53112129391163a99faaec" translate="yes" xml:space="preserve">
          <source>A string representation of the error. In &lt;a href=&quot;https://www.npmjs.com/package/node-sass&quot;&gt;Node Sass&lt;/a&gt;, this is more detailed than &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/toString&quot;&gt;&lt;code&gt;error.toString()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/message&quot;&gt;&lt;code&gt;error.message&lt;/code&gt;&lt;/a&gt;. In &lt;a href=&quot;https://sass-lang.com/dart-sass&quot;&gt;Dart Sass&lt;/a&gt;, it provides the same information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f29e0b81f2076c0abb7df32e619a94e3cc08b6" translate="yes" xml:space="preserve">
          <source>A stylesheet can define variables with the &lt;a href=&quot;../variables#default-values&quot;&gt;&lt;code&gt;!default&lt;/code&gt; flag&lt;/a&gt; to make them configurable. To load a module with configuration, write &lt;code&gt;@use &amp;lt;url&amp;gt; with (&amp;lt;variable&amp;gt;: &amp;lt;value&amp;gt;, &amp;lt;variable&amp;gt;: &amp;lt;value&amp;gt;)&lt;/code&gt;. The configured values will override the variables&amp;rsquo; default values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d936d1852bc4fa1a45f91f044db4e76301ff2b4b" translate="yes" xml:space="preserve">
          <source>A stylesheet trace will be printed out along with the message so that the user being warned can see where their styles caused the warning.</source>
          <target state="translated">一个样式表跟踪将和信息一起打印出来,这样被警告的用户就可以看到他们的样式在哪里引起了警告。</target>
        </trans-unit>
        <trans-unit id="cb60168a8edb97f0f76ea34bddd8a38d884bf54a" translate="yes" xml:space="preserve">
          <source>A stylesheet&amp;rsquo;s &lt;code&gt;@use&lt;/code&gt; rules must come before any rules other than &lt;code&gt;@forward&lt;/code&gt;, including &lt;a href=&quot;../style-rules&quot;&gt;style rules&lt;/a&gt;. However, you can declare variables before &lt;code&gt;@use&lt;/code&gt; rules to use when &lt;a href=&quot;#configuration&quot;&gt;configuring modules&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fabd764de80e6ba0a00f6534126b43b89e73865e" translate="yes" xml:space="preserve">
          <source>A variable declaration looks a lot like a &lt;a href=&quot;style-rules/declarations&quot;&gt;property declaration&lt;/a&gt;: it&amp;rsquo;s written &lt;code&gt;&amp;lt;variable&amp;gt;: &amp;lt;expression&amp;gt;&lt;/code&gt;. Unlike a property, which can only be declared in a style rule or at-rule, variables can be declared anywhere you want. To use a variable, just include it in a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="961b19d5837bc4c77202984ad673f886ea6cf2c8" translate="yes" xml:space="preserve">
          <source>Access an Element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcce87dbaca01b0232b7405ed4588b438f12fbba" translate="yes" xml:space="preserve">
          <source>Add quotes to a string if the string isn't quoted, or returns the same string if it is.</source>
          <target state="translated">如果字符串没有引号,则为其添加引号,如果添加了,则返回相同的字符串。</target>
        </trans-unit>
        <trans-unit id="dc62ab91087eadabb8c70ea5edd2d0ad49692252" translate="yes" xml:space="preserve">
          <source>Add to a List</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452040089a4c13fce221b994dee9e0a9fc95b24f" translate="yes" xml:space="preserve">
          <source>Add to a Map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1a01d4525826f0959b10ac8056f044da4c8e57" translate="yes" xml:space="preserve">
          <source>Adding Suffixes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354543363e0421283a9f2f580b16a2f4225bc56f" translate="yes" xml:space="preserve">
          <source>Adding a Prefix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b25f0b8c44858b615b411de775bd95f1b68a075" translate="yes" xml:space="preserve">
          <source>Adding namespaces to uses of members (variables, mixins, and functions) from other modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da7ba5219f5d10c93f2af0b2b78f98f0f1e8812" translate="yes" xml:space="preserve">
          <source>Adding new &lt;code&gt;@use&lt;/code&gt; rules to stylesheets that were using members without importing them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04291d822c581563dfd6a49a62547b404f34b725" translate="yes" xml:space="preserve">
          <source>Additionally, this makes it clear that the variables and mixins that are used within the passed block are related to the other styles around where the block is defined. For example:</source>
          <target state="translated">此外,这使得在传递的块内使用的变量和mixins与定义块的周围的其他样式有关。比如说</target>
        </trans-unit>
        <trans-unit id="a4938995a533e8aee99bfc121f77d79f6537bf4f" translate="yes" xml:space="preserve">
          <source>Adds the value passed for each keyword argument to the corresponding property of the color, and returns the adjusted color. It&amp;rsquo;s an error to specify an RGB property (&lt;code&gt;$red&lt;/code&gt;, &lt;code&gt;$green&lt;/code&gt;, and/or &lt;code&gt;$blue&lt;/code&gt;) at the same time as an HSL property (&lt;code&gt;$hue&lt;/code&gt;, &lt;code&gt;$saturation&lt;/code&gt;, and/or &lt;code&gt;$lightness&lt;/code&gt;), or either of those at the same time as an &lt;a href=&quot;https://en.wikipedia.org/wiki/HWB_color_model&quot;&gt;HWB&lt;/a&gt; property (&lt;code&gt;$hue&lt;/code&gt;, &lt;code&gt;$whiteness&lt;/code&gt;, and/or &lt;code&gt;$blackness&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0a6ea9de1da3f8a4e2c0d9a019dd51d7e5f81b" translate="yes" xml:space="preserve">
          <source>Advanced Nesting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a850889a3ba3339d6b06ab01818661d9e05f22f1" translate="yes" xml:space="preserve">
          <source>Advanced Variable Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba03095ed756d89545e8e4d45e68b6d6810f77b" translate="yes" xml:space="preserve">
          <source>Advanced features like &lt;a href=&quot;#control_directives__expressions&quot;&gt;control directives&lt;/a&gt; for libraries</source>
          <target state="translated">高级功能，例如库的&lt;a href=&quot;#control_directives__expressions&quot;&gt;控制指令&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7911182ec4d53b863eefa27287e7c9b8bae9c256" translate="yes" xml:space="preserve">
          <source>All Sass implementations allow users to provide &lt;em&gt;load paths&lt;/em&gt;: paths on the filesystem that Sass will look in when locating modules. For example, if you pass &lt;code&gt;node_modules/susy/sass&lt;/code&gt; as a load path, you can use &lt;code&gt;@use &quot;susy&quot;&lt;/code&gt; to load &lt;code&gt;node_modules/susy/sass/susy.scss&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57d1d0ad7016791547377edcce255d57050819c" translate="yes" xml:space="preserve">
          <source>All Sass implementations allow users to provide &lt;em&gt;load paths&lt;/em&gt;: paths on the filesystem that Sass will look in when resolving imports. For example, if you pass &lt;code&gt;node_modules/susy/sass&lt;/code&gt; as a load path, you can use &lt;code&gt;@import &quot;susy&quot;&lt;/code&gt; to load &lt;code&gt;node_modules/susy/sass/susy.scss&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1022f60b17161722b5acca06ec2816deffb16ad9" translate="yes" xml:space="preserve">
          <source>All Sass implementations provide a way to define custom importers, which control how &lt;code&gt;@import&lt;/code&gt;s locate stylesheets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86da38a7e2f5ae0508662defc52befe7da983407" translate="yes" xml:space="preserve">
          <source>All Sass strings support the standard CSS&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/string#Syntax&quot;&gt;escape codes&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c9f09fb34f12aa418f1467e869a64045c7dd88" translate="yes" xml:space="preserve">
          <source>All arithmetic operations are supported for color values, where they work piecewise. This means that the operation is performed on the red, green, and blue components in turn. For example:</source>
          <target state="translated">所有的算术运算都支持对颜色值的运算,其中它们的工作原理是分片的。即依次对红、绿、蓝三部分进行运算。比如说</target>
        </trans-unit>
        <trans-unit id="2fb5f1c390c19cff4a07a8235016fb2cb8c3adac" translate="yes" xml:space="preserve">
          <source>All files that are passed explicitly on the command line will forward members that are transitively loaded by those files using the &lt;code&gt;@import&lt;/code&gt; rule. Files loaded using the &lt;a href=&quot;#migrate-deps&quot;&gt;&lt;code&gt;--migrate-deps&lt;/code&gt; option&lt;/a&gt; will not forward any new members. This option is particularly useful when migrating a Sass library, because it ensures that users of that library will still be able to access all the members it defines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ef0650eba06f6bdf8bce7f7113415338daf79d" translate="yes" xml:space="preserve">
          <source>All importers can return synchronously, but importers passed to the asynchronous &lt;a href=&quot;#render&quot;&gt;&lt;code&gt;render()&lt;/code&gt; function&lt;/a&gt; can also take an additional callback to which they can asynchronously pass the result of the import once it&amp;rsquo;s complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df6db6efeb96a8512d0eca5d08ede45775ab4c8" translate="yes" xml:space="preserve">
          <source>All keys in the returned map that also appear in &lt;code&gt;$map1&lt;/code&gt; have the same order as in &lt;code&gt;$map1&lt;/code&gt;. New keys from &lt;code&gt;$map2&lt;/code&gt; appear at the end of the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac280ef7d6c3e0b4e951561c1a989b447c4ab88" translate="yes" xml:space="preserve">
          <source>All keys in the returned map that also appear in &lt;code&gt;$map1&lt;/code&gt; will have the same order as in &lt;code&gt;$map1&lt;/code&gt;. New keys from &lt;code&gt;$map2&lt;/code&gt; will be placed at the end of the map.</source>
          <target state="translated">在返回的映射的所有键也出现在 &lt;code&gt;$map1&lt;/code&gt; 将有相同的顺序在 &lt;code&gt;$map1&lt;/code&gt; 。来自 &lt;code&gt;$map2&lt;/code&gt; 新键将放置在地图的末尾。</target>
        </trans-unit>
        <trans-unit id="f8e302d4dbdd8c667306496c1d7b3c260859b606" translate="yes" xml:space="preserve">
          <source>All optional arguments must be numbers. The &lt;code&gt;$red&lt;/code&gt;, &lt;code&gt;$green&lt;/code&gt;, and &lt;code&gt;$blue&lt;/code&gt; arguments must be &lt;a href=&quot;../values/numbers#units&quot;&gt;unitless&lt;/a&gt; and between -255 and 255 (inclusive). The &lt;code&gt;$hue&lt;/code&gt; argument must have either the unit &lt;code&gt;deg&lt;/code&gt; or no unit. The &lt;code&gt;$saturation&lt;/code&gt;, &lt;code&gt;$lightness&lt;/code&gt;, &lt;code&gt;$whiteness&lt;/code&gt;, and &lt;code&gt;$blackness&lt;/code&gt; arguments must be between &lt;code&gt;-100%&lt;/code&gt; and &lt;code&gt;100%&lt;/code&gt; (inclusive), and may be unitless. The &lt;code&gt;$alpha&lt;/code&gt; argument must be unitless and between -1 and 1 (inclusive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb4a1f380fa5b3e0c403988c3dc97304da8b51d" translate="yes" xml:space="preserve">
          <source>All optional arguments must be numbers. The &lt;code&gt;$red&lt;/code&gt;, &lt;code&gt;$green&lt;/code&gt;, and &lt;code&gt;$blue&lt;/code&gt; arguments must be &lt;a href=&quot;../values/numbers#units&quot;&gt;unitless&lt;/a&gt; and between 0 and 255 (inclusive). The &lt;code&gt;$hue&lt;/code&gt; argument must have either the unit &lt;code&gt;deg&lt;/code&gt; or no unit. The &lt;code&gt;$saturation&lt;/code&gt;, &lt;code&gt;$lightness&lt;/code&gt;, &lt;code&gt;$whiteness&lt;/code&gt;, and &lt;code&gt;$blackness&lt;/code&gt; arguments must be between &lt;code&gt;0%&lt;/code&gt; and &lt;code&gt;100%&lt;/code&gt; (inclusive), and may be unitless. The &lt;code&gt;$alpha&lt;/code&gt; argument must be unitless and between -1 and 1 (inclusive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a43e8e47594b3afd03b0a150ad739fa90b6060b3" translate="yes" xml:space="preserve">
          <source>All properties are optional. You can't specify both RGB properties (&lt;code&gt;$red&lt;/code&gt;, &lt;code&gt;$green&lt;/code&gt;, &lt;code&gt;$blue&lt;/code&gt;) and HSL properties (&lt;code&gt;$hue&lt;/code&gt;, &lt;code&gt;$saturation&lt;/code&gt;, &lt;code&gt;$value&lt;/code&gt;) at the same time.</source>
          <target state="translated">所有属性都是可选的。您不能同时指定RGB属性（ &lt;code&gt;$red&lt;/code&gt; ， &lt;code&gt;$green&lt;/code&gt; ， &lt;code&gt;$blue&lt;/code&gt; ）和HSL属性（ &lt;code&gt;$hue&lt;/code&gt; ， &lt;code&gt;$saturation&lt;/code&gt; ， &lt;code&gt;$value&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="125bea08d893381e5572473ba0429c3294a3b5a5" translate="yes" xml:space="preserve">
          <source>All properties are optional. You can't specify both RGB properties (&lt;code&gt;$red&lt;/code&gt;, &lt;code&gt;$green&lt;/code&gt;, &lt;code&gt;$blue&lt;/code&gt;) and HSL properties (&lt;code&gt;$saturation&lt;/code&gt;, &lt;code&gt;$value&lt;/code&gt;) at the same time.</source>
          <target state="translated">所有属性都是可选的。您不能同时指定RGB属性（ &lt;code&gt;$red&lt;/code&gt; ， &lt;code&gt;$green&lt;/code&gt; ， &lt;code&gt;$blue&lt;/code&gt; ）和HSL属性（ &lt;code&gt;$saturation&lt;/code&gt; ， &lt;code&gt;$value&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="fe6cb7ea0921a92ae0f6e5d105fbf75a3e817b44" translate="yes" xml:space="preserve">
          <source>All types support equality operations (&lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;). In addition, each type has its own operations that it has special support for.</source>
          <target state="translated">所有类型都支持相等操作（ &lt;code&gt;==&lt;/code&gt; 和 &lt;code&gt;!=&lt;/code&gt; ）。此外，每种类型都有其自己的操作，并且有特殊的支持。</target>
        </trans-unit>
        <trans-unit id="7000f611a1efa9dfc7e5e4c2ceb5377619b5973f" translate="yes" xml:space="preserve">
          <source>All value types support methods that modify the value objects. Users are strongly discouraged from using these methods (except for the &lt;a href=&quot;#types-map&quot;&gt;&lt;code&gt;Map&lt;/code&gt; type&lt;/a&gt; and &lt;a href=&quot;#types-list&quot;&gt;&lt;code&gt;List&lt;/code&gt; type&lt;/a&gt; where they&amp;rsquo;re necessary to create new values), because they don&amp;rsquo;t match the general principle that Sass values are immutable. Users should construct new objects rather than modifying existing ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a89a472e733416f7997e4a14207a23ac998aaf64" translate="yes" xml:space="preserve">
          <source>All versions of Node Sass and Dart Sass otherwise support the &lt;code&gt;file&lt;/code&gt; option as described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9563d006efa2da1bb174774750cb43d3cc8d1f" translate="yes" xml:space="preserve">
          <source>All versions of Node Sass currently pass imports to importers before loading them relative to the file in which the &lt;code&gt;@import&lt;/code&gt; appears. This behavior is considered incorrect and should not be relied on because it violates the principle of &lt;em&gt;locality&lt;/em&gt;, which says that it should be possible to reason about a stylesheet without knowing everything about how the entire system is set up. If a user tries to import a stylesheet relative to another stylesheet, that import should &lt;em&gt;always&lt;/em&gt; work. It shouldn&amp;rsquo;t be possible for some configuration somewhere else to break it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c214f4deee3a8e775d5e7a2ca6e27f943cbcf0dc" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;@while&lt;/code&gt; is necessary for a few particularly complex stylesheets, you&amp;rsquo;re usually better of using either &lt;a href=&quot;each&quot;&gt;&lt;code&gt;@each&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;for&quot;&gt;&lt;code&gt;@for&lt;/code&gt;&lt;/a&gt; if either of them will work. They&amp;rsquo;re clearer for the reader, and often faster to compile as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ab007768606d060de8034461fb069a7bf9fd64" translate="yes" xml:space="preserve">
          <source>Although Sass imports can&amp;rsquo;t use &lt;a href=&quot;../interpolation&quot;&gt;interpolation&lt;/a&gt; (to make sure it&amp;rsquo;s always possible to tell where &lt;a href=&quot;mixin&quot;&gt;mixins&lt;/a&gt;, &lt;a href=&quot;function&quot;&gt;functions&lt;/a&gt;, and &lt;a href=&quot;../variables&quot;&gt;variables&lt;/a&gt; come from), plain CSS imports can. This makes it possible to dynamically generate imports, for example based on mixin parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86543bbb7632f613befb35c7c5a32aa40aba5a10" translate="yes" xml:space="preserve">
          <source>Although most of the time it's most useful to just have &lt;code&gt;@import&lt;/code&gt;s at the top level of the document, it is possible to include them within CSS rules and &lt;code&gt;@media&lt;/code&gt; rules. Like a base-level &lt;code&gt;@import&lt;/code&gt;, this includes the contents of the &lt;code&gt;@import&lt;/code&gt;ed file. However, the imported rules will be nested in the same place as the original &lt;code&gt;@import&lt;/code&gt;.</source>
          <target state="translated">尽管在大多数情况下，仅在文档的顶层使用 &lt;code&gt;@import&lt;/code&gt; 是最有用的，但可以将它们包含在CSS规则和 &lt;code&gt;@media&lt;/code&gt; 规则中。像基本级别的 &lt;code&gt;@import&lt;/code&gt; 一样，它包含 &lt;code&gt;@import&lt;/code&gt; ed文件的内容。但是，导入的规则将与原始 &lt;code&gt;@import&lt;/code&gt; 嵌套在同一位置。</target>
        </trans-unit>
        <trans-unit id="a608b14eba2288e2c695734f2e5da81c70252082" translate="yes" xml:space="preserve">
          <source>Although the default CSS style that Sass outputs is very nice and reflects the structure of the document, tastes and needs vary and so Sass supports several other styles.</source>
          <target state="translated">虽然Sass输出的默认CSS样式非常漂亮,反映了文档的结构,但口味和需求各不相同,所以Sass支持其他几种样式。</target>
        </trans-unit>
        <trans-unit id="63852c7e40c99e6886881e1f151a74e1263d7365" translate="yes" xml:space="preserve">
          <source>Always write spaces on both sides of &lt;code&gt;-&lt;/code&gt; when subtracting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075881f0d57c2e02627c2848f46e0b017952308f" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error&quot;&gt;&lt;code&gt;Error&lt;/code&gt; object&lt;/a&gt;, indicating that importing failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852bba6fe206abd4eef7a2d7a9a441d64828075c" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;@if&lt;/code&gt; rule can optionally be followed by an &lt;code&gt;@else&lt;/code&gt; rule, written &lt;code&gt;@else { ... }&lt;/code&gt;. This rule&amp;rsquo;s block is evaluated if the &lt;code&gt;@if&lt;/code&gt; expression returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b286a11fc52a7900c25d02bb358d8900e128ce09" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;expression&lt;/em&gt; is anything that goes on the right-hand side of a property or variable declaration. Each expression produces a &lt;em&gt;&lt;a href=&quot;../values&quot;&gt;value&lt;/a&gt;&lt;/em&gt;. Any valid CSS property value is also a Sass expression, but Sass expressions are much more powerful than plain CSS values. They&amp;rsquo;re passed as arguments to &lt;a href=&quot;../at-rules/mixin&quot;&gt;mixins&lt;/a&gt; and &lt;a href=&quot;../at-rules/function&quot;&gt;functions&lt;/a&gt;, used for control flow with the &lt;a href=&quot;../at-rules/control/if&quot;&gt;&lt;code&gt;@if&lt;/code&gt; rule&lt;/a&gt;, and manipulated using &lt;a href=&quot;../operators/numeric&quot;&gt;arithmetic&lt;/a&gt;. We call Sass&amp;rsquo;s expression syntax &lt;em&gt;SassScript&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4888718357063744aba1767e3d13fca77c954097" translate="yes" xml:space="preserve">
          <source>An API that makes sense for &lt;code&gt;@use&lt;/code&gt; might not make sense for &lt;code&gt;@import&lt;/code&gt;. For example, &lt;code&gt;@use&lt;/code&gt; adds a namespace to all members by default so you can safely use short names, but &lt;code&gt;@import&lt;/code&gt; doesn&amp;rsquo;t so you might need something longer. If you&amp;rsquo;re a library author, you may be concerned that if you update your library to use the new module system, your existing &lt;code&gt;@import&lt;/code&gt;-based users will break.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c5c04ae8229b8f2b909bd4bbccd0f57593efb4" translate="yes" xml:space="preserve">
          <source>An array of the absolute paths of all Sass files loaded during compilation. If a stylesheet was loaded from an &lt;a href=&quot;#importer&quot;&gt;importer&lt;/a&gt; that returned the stylesheet&amp;rsquo;s contents, the raw string of the &lt;code&gt;@use&lt;/code&gt; or &lt;code&gt;@import&lt;/code&gt; that loaded that stylesheet is included in this array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73fc85729493947c1ebeb513f85601b95f600f09" translate="yes" xml:space="preserve">
          <source>An object with the key &lt;code&gt;contents&lt;/code&gt; whose value is the contents of a stylesheet (in SCSS syntax). This causes Sass to load that stylesheet&amp;rsquo;s contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb2aaf212d123a813e14cea81882d3d19dcb8b7" translate="yes" xml:space="preserve">
          <source>An object with the key &lt;code&gt;file&lt;/code&gt; whose value is a path on disk. This causes Sass to load that file as though it had been imported directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c7b2caff14a4ce17e1878713a21b3e03395c01" translate="yes" xml:space="preserve">
          <source>And our styles like so:</source>
          <target state="translated">我们的风格也是如此。</target>
        </trans-unit>
        <trans-unit id="db27dd45d29e037a2764d34fc2ed6dd2c10bb8f6" translate="yes" xml:space="preserve">
          <source>Any CSS color expression returns a SassScript Color value. This includes &lt;a href=&quot;https://github.com/nex3/sass/blob/stable/lib/sass/script/value/color.rb#L28-L180&quot;&gt;a large number of named colors&lt;/a&gt; which are indistinguishable from unquoted strings.</source>
          <target state="translated">任何CSS颜色表达式都将返回SassScript Color值。这包括&lt;a href=&quot;https://github.com/nex3/sass/blob/stable/lib/sass/script/value/color.rb#L28-L180&quot;&gt;大量&lt;/a&gt;与未引用的字符串无法区分的命名颜色。</target>
        </trans-unit>
        <trans-unit id="bae911935767297b7c3a5f4ae28de73364ba2760" translate="yes" xml:space="preserve">
          <source>Any character can be included as part of a string by writing &lt;code&gt;\&lt;/code&gt; followed by its &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_Unicode_characters&quot;&gt;Unicode code point number&lt;/a&gt; written in &lt;a href=&quot;https://en.wikipedia.org/wiki/Hexadecimal&quot;&gt;hexadecimal&lt;/a&gt;. You can optionally include a space after the code point number to indicate where the Unicode number ends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47fc8d745915923ddce80d8f5b05fcf1e235471b" translate="yes" xml:space="preserve">
          <source>Any character other than a letter from A to F or a number from 0 to 9 (even a newline!) can be included as part of a string by writing &lt;code&gt;\&lt;/code&gt; in front of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c3ad5cc31e97d96126bef8347c9da71ce78b008" translate="yes" xml:space="preserve">
          <source>Any function call that&amp;rsquo;s not either a user-defined or &lt;a href=&quot;../modules&quot;&gt;built-in&lt;/a&gt; function is compiled to a plain CSS function (unless it uses &lt;a href=&quot;function#arguments&quot;&gt;Sass argument syntax&lt;/a&gt;). The arguments will be compiled to CSS and included as-is in the function call. This ensures that Sass supports all CSS functions without needing to release new versions every time a new one is added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d751c3928557bd8e58db571a4bf38ca8ef2652" translate="yes" xml:space="preserve">
          <source>Anywhere &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; are allowed, you can use other values as well. The values &lt;code&gt;false&lt;/code&gt; and &lt;a href=&quot;../../values/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; are &lt;em&gt;falsey&lt;/em&gt;, which means Sass considers them to indicate falsehood and cause conditions to fail. Every other value is considered &lt;em&gt;truthy&lt;/em&gt;, so Sass considers them to work like &lt;code&gt;true&lt;/code&gt; and cause conditions to succeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd9e30020306dbfd212cb56c5d7c4af9640fd0e" translate="yes" xml:space="preserve">
          <source>Anywhere &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; are allowed, you can use other values as well. The values &lt;code&gt;false&lt;/code&gt; and &lt;a href=&quot;../values/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; are &lt;em&gt;falsey&lt;/em&gt;, which means Sass considers them to indicate falsehood and cause conditions to fail. Every other value is considered &lt;em&gt;truthy&lt;/em&gt;, so Sass considers them to work like &lt;code&gt;true&lt;/code&gt; and cause conditions to succeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f6efd9defa463a9bc421c68911600f263a7bf1" translate="yes" xml:space="preserve">
          <source>Anywhere &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; are allowed, you can use other values as well. The values &lt;code&gt;false&lt;/code&gt; and &lt;a href=&quot;null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; are &lt;em&gt;falsey&lt;/em&gt;, which means Sass considers them to indicate falsehood and cause conditions to fail. Every other value is considered &lt;em&gt;truthy&lt;/em&gt;, so Sass considers them to work like &lt;code&gt;true&lt;/code&gt; and cause conditions to succeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be6e1118bd7462315e6716d0fbb6daeccd31965" translate="yes" xml:space="preserve">
          <source>Appends a single value onto the end of a list.</source>
          <target state="translated">在列表的末尾添加一个单值。</target>
        </trans-unit>
        <trans-unit id="8eab0ada095a6a397889beda2380f8af4828049c" translate="yes" xml:space="preserve">
          <source>Argument Lists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe76308372934376b61501ec53cea192114db69e" translate="yes" xml:space="preserve">
          <source>Argument lists can also be used to take arbitrary keyword arguments. The &lt;a href=&quot;../modules/meta#keywords&quot;&gt;&lt;code&gt;meta.keywords()&lt;/code&gt; function&lt;/a&gt; takes an argument list and returns any extra keywords that were passed to the function as a &lt;a href=&quot;../values/maps&quot;&gt;map&lt;/a&gt; from argument names (not including &lt;code&gt;$&lt;/code&gt;) to those arguments&amp;rsquo; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1a76ee5dbf3d8b75ac233b6b989fe06e33d30e" translate="yes" xml:space="preserve">
          <source>Argument lists can also be used to take arbitrary keyword arguments. The &lt;a href=&quot;../modules/meta#keywords&quot;&gt;&lt;code&gt;meta.keywords()&lt;/code&gt; function&lt;/a&gt; takes an argument list and returns any extra keywords that were passed to the mixin as a &lt;a href=&quot;../values/maps&quot;&gt;map&lt;/a&gt; from argument names (not including &lt;code&gt;$&lt;/code&gt;) to those arguments&amp;rsquo; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d77339b512cca9f6745753d86edfb0f994c82f" translate="yes" xml:space="preserve">
          <source>Argument lists can also have trailing commas! This can makes it easier to avoid syntax errors when refactoring your stylesheets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="cce2c3d65ec0dc7853ed2b80248b0b728a086f97" translate="yes" xml:space="preserve">
          <source>Arguments #mixin-arguments</source>
          <target state="translated">Arguments #mixin-arguments</target>
        </trans-unit>
        <trans-unit id="8247c012d6b29f5d8c4f857e6babcccf4e90202f" translate="yes" xml:space="preserve">
          <source>Arguments allow functions&amp;rsquo; behavior to be customized each time they&amp;rsquo;re called. The arguments are specified in the &lt;code&gt;@function&lt;/code&gt; rule after the function&amp;rsquo;s name, as a list of variable names surrounded by parentheses. The function must be called with the same number of arguments in the form of &lt;a href=&quot;../syntax/structure#expressions&quot;&gt;SassScript expressions&lt;/a&gt;. The values of these expression are available within the function&amp;rsquo;s body as the corresponding variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2269a199612acebe7dd279929b879be6d949bb79" translate="yes" xml:space="preserve">
          <source>Arithmetic operations also work between numbers and colors, also piecewise. For example:</source>
          <target state="translated">算术运算在数字和颜色之间也可以进行,也是分片计算。比如说</target>
        </trans-unit>
        <trans-unit id="552606e0d531c506e923df67158b2074342b881c" translate="yes" xml:space="preserve">
          <source>As a convention, Sass files that are only meant to be imported, not compiled on their own, begin with &lt;code&gt;_&lt;/code&gt; (as in &lt;code&gt;_code.scss&lt;/code&gt;). These are called &lt;em&gt;partials&lt;/em&gt;, and they tell Sass tools not to try to compile those files on their own. You can leave off the &lt;code&gt;_&lt;/code&gt; when importing a partial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e0e4076f96c5cd58b650382b14cdac0bac22cc" translate="yes" xml:space="preserve">
          <source>As a convention, Sass files that are only meant to be loaded as modules, not compiled on their own, begin with &lt;code&gt;_&lt;/code&gt; (as in &lt;code&gt;_code.scss&lt;/code&gt;). These are called &lt;em&gt;partials&lt;/em&gt;, and they tell Sass tools not to try to compile those files on their own. You can leave off the &lt;code&gt;_&lt;/code&gt; when importing a partial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6318e5ba00c9d35592dd9db6ae1bb00c7af23562" translate="yes" xml:space="preserve">
          <source>As a rule of thumb, extends are the best option when you&amp;rsquo;re expressing a relationship between semantic classes (or other semantic selectors). Because an element with class &lt;code&gt;.error--serious&lt;/code&gt;&lt;em&gt;is an&lt;/em&gt; error, it makes sense for it to extend &lt;code&gt;.error&lt;/code&gt;. But for non-semantic collections of styles, writing a mixin can avoid cascade headaches and make it easier to configure down the line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d60ed1083741ea6d120be39563dedc1210fa57b2" translate="yes" xml:space="preserve">
          <source>As a special case, this supports the Internet Explorer syntax &lt;code&gt;alpha(opacity=20)&lt;/code&gt;, for which it returns an &lt;a href=&quot;../values/strings#unquoted&quot;&gt;unquoted string&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3baa8258d862aba093f8d3b707aac4986aa954f2" translate="yes" xml:space="preserve">
          <source>As a stylesheet author, you may not want all the members you define to be available outside your stylesheet. Sass makes it easy to define a private member by starting its name with either &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;_&lt;/code&gt;. These members will work just like normal within the stylesheet that defines them, but they won&amp;rsquo;t be part of a module&amp;rsquo;s public API. That means stylesheets that load your module can&amp;rsquo;t see them!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47b1d7d0d87e16dbcef75d06049937e90048ea1" translate="yes" xml:space="preserve">
          <source>As in real-world unit calculations, if the numerator contains units that are compatible with units in the denominator (like &lt;code&gt;96px / 1in&lt;/code&gt;), they&amp;rsquo;ll cancel out. This makes it easy to define a ratio that you can use for converting between units. In the example below, we set the desired speed to one second per 50 pixels, and then multiply that by the number of pixels the transition covers to get the time it should take.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5618067f9273165ba4197092d7b80ae6148d2216" translate="yes" xml:space="preserve">
          <source>As with mixins, you can call Sass-defined functions using keyword arguments. In the above example we could have called the function like this:</source>
          <target state="translated">和 mixins 一样,你可以使用关键字参数来调用 Sass 定义的函数。在上面的例子中,我们可以这样调用函数。</target>
        </trans-unit>
        <trans-unit id="9dc163a318ec71495b41ecd8cab7d3c17ef17bba" translate="yes" xml:space="preserve">
          <source>As you can see functions can access any globally defined variables as well as accept arguments just like a mixin. A function may have several statements contained within it, and you must call &lt;code&gt;@return&lt;/code&gt; to set the return value of the function.</source>
          <target state="translated">如您所见，函数可以访问任何全局定义的变量，也可以像mixin一样接受参数。一个函数中可能包含多个语句，您必须调用 &lt;code&gt;@return&lt;/code&gt; 来设置函数的返回值。</target>
        </trans-unit>
        <trans-unit id="92b8bffd1acb819ebe66534f9fa53843ca6bd46f" translate="yes" xml:space="preserve">
          <source>Astute readers may note that an empty map, &lt;code&gt;()&lt;/code&gt;, is written the same as an empty list. That&amp;rsquo;s because it counts as both a map and a list. In fact, &lt;em&gt;all&lt;/em&gt; maps count as lists! Every map counts as a list that contains a two-element list for each key/value pair. For example, &lt;code&gt;(1: 2, 3: 4)&lt;/code&gt; counts as &lt;code&gt;(1 2, 3
4)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="becccb08ea9ed0799c491929b0e3f45c88d42f2e" translate="yes" xml:space="preserve">
          <source>At-Rules</source>
          <target state="translated">At-Rules</target>
        </trans-unit>
        <trans-unit id="a3cd41a09e21f9cdd2e4703b04c09e3052f5c4ae" translate="yes" xml:space="preserve">
          <source>Automatically removing &lt;code&gt;-&lt;/code&gt; and &lt;code&gt;_&lt;/code&gt; prefixes from members that are used from other files (because otherwise they&amp;rsquo;d be considered &lt;a href=&quot;../at-rules/use#private-members&quot;&gt;private&lt;/a&gt; and could only be used in the module they&amp;rsquo;re declared).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69533c53bba5b033b9500b8746ffd51b797b4c4" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;-&lt;/code&gt; can refer to both subtraction and unary negation, it can be confusing which is which in a space-separated list. To be safe:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ac11a5ef6d3e0fc4bf1207d5297b236e1ca936" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;@each&lt;/code&gt; supports destructuring and &lt;a href=&quot;../../values/maps&quot;&gt;maps count as lists of lists&lt;/a&gt;, &lt;code&gt;@each&lt;/code&gt;&amp;rsquo;s map support works without needing special support for maps in particular.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b1273a35b27fbfdc51d479806feba216e775d0" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;@extend&lt;/code&gt; updates style rules that contain the extended selector, their styles have precedence in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Cascade&quot;&gt;the cascade&lt;/a&gt; based on where the extended selector&amp;rsquo;s style rules appear, &lt;em&gt;not&lt;/em&gt; based on where the &lt;code&gt;@extend&lt;/code&gt; appears. This can be confusing, but just remember: this is the same precedence those rules would have if you added the extended class to your HTML!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51dd9306c40bae89f8b1dafcc581874ec6a66d9c" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;@import&lt;/code&gt; is also defined in CSS, Sass needs a way of compiling plain CSS&lt;code&gt;@import&lt;/code&gt;s without trying to import the files at compile time. To accomplish this, and to ensure SCSS is as much of a superset of CSS as possible, Sass will compile any &lt;code&gt;@import&lt;/code&gt;s with the following characteristics to plain CSS imports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a02ff1873415cefc4e6988ff5b6ef564ebbd11ae" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;@use&lt;/code&gt; adds namespaces to member names, it&amp;rsquo;s safe to choose very simple names like &lt;code&gt;$radius&lt;/code&gt; or &lt;code&gt;$width&lt;/code&gt; when writing a stylesheet. This is different from the old &lt;a href=&quot;import&quot;&gt;&lt;code&gt;@import&lt;/code&gt; rule&lt;/a&gt;, which encouraged that users write long names like &lt;code&gt;$mat-corner-radius&lt;/code&gt; to avoid conflicts with other libraries, and it helps keep your stylesheets clear and easy to read!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1235cef9b0721f70c40bdc248ed8c8e59ff763c5" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;adjust-hue()&lt;/code&gt; is redundant with &lt;a href=&quot;#adjust&quot;&gt;&lt;code&gt;adjust()&lt;/code&gt;&lt;/a&gt;, it&amp;rsquo;s not included directly in the new module system. Instead of &lt;code&gt;adjust-hue($color, $amount)&lt;/code&gt;, you can write &lt;a href=&quot;#adjust&quot;&gt;&lt;code&gt;color.adjust($color, $hue: $amount)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88517b4d9dcab30cc1912e2abb87fc87af3453d" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;darken()&lt;/code&gt; is usually not the best way to make a color darker, it&amp;rsquo;s not included directly in the new module system. However, if you have to preserve the existing behavior, &lt;code&gt;darken($color, $amount)&lt;/code&gt; can be written &lt;a href=&quot;#adjust&quot;&gt;&lt;code&gt;color.adjust($color, $lightness: -$amount)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad0786119ba2faebc11be4e516e4753d9a8ef77" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;desaturate()&lt;/code&gt; is usually not the best way to make a color less saturated, it&amp;rsquo;s not included directly in the new module system. However, if you have to preserve the existing behavior, &lt;code&gt;desaturate($color, $amount)&lt;/code&gt; can be written &lt;a href=&quot;#adjust&quot;&gt;&lt;code&gt;color.adjust($color, $saturation: -$amount)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f73d8429080287898714eda636e5693d359c17" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;lighten()&lt;/code&gt; is usually not the best way to make a color lighter, it&amp;rsquo;s not included directly in the new module system. However, if you have to preserve the existing behavior, &lt;code&gt;lighten($color, $amount)&lt;/code&gt; can be written &lt;a href=&quot;#adjust&quot;&gt;&lt;code&gt;adjust($color, $lightness: $amount)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747f4e5ac41edeec0ea95600f1a0b34ad6907512" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;opacify()&lt;/code&gt; is usually not the best way to make a color more opaque, it&amp;rsquo;s not included directly in the new module system. However, if you have to preserve the existing behavior, &lt;code&gt;opacify($color, $amount)&lt;/code&gt; can be written &lt;a href=&quot;#adjust&quot;&gt;&lt;code&gt;adjust($color, $alpha: -$amount)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6005f6887145725006c467909427e9db42aa05" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;saturate()&lt;/code&gt; is usually not the best way to make a color more saturated, it&amp;rsquo;s not included directly in the new module system. However, if you have to preserve the existing behavior, &lt;code&gt;saturate($color, $amount)&lt;/code&gt; can be written &lt;a href=&quot;#adjust&quot;&gt;&lt;code&gt;adjust($color, $saturation: $amount)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5511490d9cfa0080b2411d30dbc715adb577afb9" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;transparentize()&lt;/code&gt; is usually not the best way to make a color more transparent, it&amp;rsquo;s not included directly in the new module system. However, if you have to preserve the existing behavior, &lt;code&gt;transparentize($color, $amount)&lt;/code&gt; can be written &lt;a href=&quot;#adjust&quot;&gt;&lt;code&gt;color.adjust($color, $alpha: -$amount)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4123948e27a8488fe112c4865ccf8d63bab5fa3e" translate="yes" xml:space="preserve">
          <source>Because &lt;em&gt;any&lt;/em&gt; argument can be passed by name, be careful when renaming a function&amp;rsquo;s arguments&amp;hellip; it might break your users! It can be helpful to keep the old name around as an &lt;a href=&quot;#optional-arguments&quot;&gt;optional argument&lt;/a&gt; for a while and printing a &lt;a href=&quot;warn&quot;&gt;warning&lt;/a&gt; if anyone passes it, so they know to migrate to the new argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752037235a1e891bf7281246be90441cd1eeb45c" translate="yes" xml:space="preserve">
          <source>Because &lt;em&gt;any&lt;/em&gt; argument can be passed by name, be careful when renaming a mixin&amp;rsquo;s arguments&amp;hellip; it might break your users! It can be helpful to keep the old name around as an &lt;a href=&quot;#optional-arguments&quot;&gt;optional argument&lt;/a&gt; for a while and printing a &lt;a href=&quot;warn&quot;&gt;warning&lt;/a&gt; if anyone passes it, so they know to migrate to the new argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b0662bb7befe014dc099285744faae932a39653" translate="yes" xml:space="preserve">
          <source>Because CSS doesn&amp;rsquo;t support complex units like square pixels, using a number with complex units as a &lt;a href=&quot;../style-rules/declarations&quot;&gt;property value&lt;/a&gt; will produce an error. This is a feature in disguise, though; if you aren&amp;rsquo;t ending up with the right unit, it usually means that something&amp;rsquo;s wrong with your calculations! And remember, you can always use the &lt;a href=&quot;../at-rules/debug&quot;&gt;&lt;code&gt;@debug&lt;/code&gt; rule&lt;/a&gt; to check out the units of any variable or &lt;a href=&quot;../syntax/structure#expressions&quot;&gt;expression&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c703d73aad0b3c24a49ad1d688cef18833ab8e" translate="yes" xml:space="preserve">
          <source>Because an &lt;a href=&quot;../values/lists#argument-lists&quot;&gt;argument list&lt;/a&gt; keeps track of both positional and keyword arguments, you use it to pass both at once to another function. That makes it super easy to define an alias for a function!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b896733e014bdfdd94245415191a8039badd81" translate="yes" xml:space="preserve">
          <source>Because an &lt;a href=&quot;../values/lists#argument-lists&quot;&gt;argument list&lt;/a&gt; keeps track of both positional and keyword arguments, you use it to pass both at once to another mixin. That makes it super easy to define an alias for a mixin!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12ece01955cae06f0fa9ab0e267d495c36b2e91" translate="yes" xml:space="preserve">
          <source>Because any unknown function will be compiled to CSS, it&amp;rsquo;s easy to miss when you typo a function name. Consider running a &lt;a href=&quot;https://stylelint.io/&quot;&gt;CSS linter&lt;/a&gt; on your stylesheet&amp;rsquo;s output to be notified when this happens!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87ef066715eacd58f4bb5f0c41dff65e66e8dcd" translate="yes" xml:space="preserve">
          <source>Because everything&amp;rsquo;s global, libraries must prefix to all their members to avoid naming collisions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6740b0b4affa23c754494e2ad2888a59d39c24db" translate="yes" xml:space="preserve">
          <source>Because individual values count as single-element lists, it&amp;rsquo;s possible to use &lt;code&gt;list.join()&lt;/code&gt; to add a value to the end of a list. However, &lt;em&gt;this is not recommended&lt;/em&gt;, since if that value is a list it will be concatenated, which is probably not what you&amp;rsquo;re expecting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc661ba079ba0b854a75a1fdaad26d4439b9824" translate="yes" xml:space="preserve">
          <source>Because module members are usually used with &lt;a href=&quot;use#loading-members&quot;&gt;a namespace&lt;/a&gt;, short and simple names are usually the most readable option. But those names might not make sense outside the module they&amp;rsquo;re defined in, so &lt;code&gt;@forward&lt;/code&gt; has the option of adding an extra prefix to all the members it forwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6081f2265afbcdf57a79cadcf0fd37449ad09ae4" translate="yes" xml:space="preserve">
          <source>Because of this, Sass parses custom property declarations differently than other property declarations. All tokens, including those that look like SassScript, are passed through to CSS as-is. The only exception is &lt;a href=&quot;../interpolation&quot;&gt;interpolation&lt;/a&gt;, which is the only way to inject dynamic values into a custom property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf701f1998359d2fec8300a7796a61f6128b6f93" translate="yes" xml:space="preserve">
          <source>Because of this, it&amp;rsquo;s generally a good idea to write quoted strings unless you&amp;rsquo;re specifically writing the value of a CSS property that uses unquoted strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783964543829d3868ab91444a9d9f5d089f71d6a" translate="yes" xml:space="preserve">
          <source>Because the module migrator may need to modify both member definitions &lt;em&gt;and&lt;/em&gt; member names, it&amp;rsquo;s important to either run it with the &lt;a href=&quot;#migrate-deps&quot;&gt;&lt;code&gt;--migrate-deps&lt;/code&gt; option&lt;/a&gt; or ensure that you pass it all the stylesheets in your package or application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b563840811459b7aa322cec158378e0412b01099" translate="yes" xml:space="preserve">
          <source>Because the parent selector could be replaced by a type selector like &lt;code&gt;h1&lt;/code&gt;, it&amp;rsquo;s only allowed at the beginning of compound selectors where a type selector would also be allowed. For example, &lt;code&gt;span&amp;amp;&lt;/code&gt; is not allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e949293bb3141d39921183faafd54e8bcb4089c2" translate="yes" xml:space="preserve">
          <source>Becomes:</source>
          <target state="translated">Becomes:</target>
        </trans-unit>
        <trans-unit id="4a75b42a2e79313db46ef66e83810d3924010cf1" translate="yes" xml:space="preserve">
          <source>Before the Sass module system was introduced, all Sass functions were globally available at all times. Many functions still have global aliases (these are listed in their documentation). The Sass team discourages their use and will eventually deprecate them, but for now they remain available for compatibility with older Sass versions and with LibSass (which doesn&amp;rsquo;t support the module system yet).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5309911f70b9b38c4db00d0b1804988a1ab8dbd0" translate="yes" xml:space="preserve">
          <source>Beyond Style Rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807b1864fdb6805b8347ae2bc9a6c20e8e44cbff" translate="yes" xml:space="preserve">
          <source>Boolean Operations</source>
          <target state="translated">布尔运算</target>
        </trans-unit>
        <trans-unit id="04967741c4271ee06f12a1e39acd461f02a1a16a" translate="yes" xml:space="preserve">
          <source>Boolean Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d9ef559552bdd87313d89c8796d8136275e739" translate="yes" xml:space="preserve">
          <source>Boolean operations</source>
          <target state="translated">布尔运算</target>
        </trans-unit>
        <trans-unit id="0786cdff946e6084c50bb7df6cacd8ed965599fa" translate="yes" xml:space="preserve">
          <source>Booleans</source>
          <target state="translated">Booleans</target>
        </trans-unit>
        <trans-unit id="d321510c9c34cf5e3b9c585d865e4673f7520b7f" translate="yes" xml:space="preserve">
          <source>Booleans are the logical values &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;. In addition their literal forms, booleans are returned by &lt;a href=&quot;../operators/equality&quot;&gt;equality&lt;/a&gt; and &lt;a href=&quot;../operators/relational&quot;&gt;relational&lt;/a&gt; operators, as well as many built-in functions like &lt;a href=&quot;../modules/math#comparable&quot;&gt;&lt;code&gt;math.comparable()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../modules/map#has-key&quot;&gt;&lt;code&gt;map.has-key()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46dfec833eae7613ad201b7b636aeb927cc19bb1" translate="yes" xml:space="preserve">
          <source>Both major Sass implementations support the same JavaScript API. &lt;a href=&quot;https://sass-lang.com/dart-sass&quot;&gt;Dart Sass&lt;/a&gt; is distributed as the pure-Javascript &lt;a href=&quot;https://www.npmjs.com/package/sass&quot;&gt;&lt;code&gt;sass&lt;/code&gt; package&lt;/a&gt;, and &lt;a href=&quot;https://sass-lang.com/libsass&quot;&gt;LibSass&lt;/a&gt; is distributed as a native extension in the &lt;a href=&quot;https://www.npmjs.com/package/node-sass&quot;&gt;&lt;code&gt;node-sass&lt;/code&gt; package&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2336afba4dc6ac2e66953662cf6c96fe863cb0bf" translate="yes" xml:space="preserve">
          <source>Both the &lt;code&gt;$weight&lt;/code&gt; and the relative opacity of each color determines how much of each color is in the result. The &lt;code&gt;$weight&lt;/code&gt; must be a number between &lt;code&gt;0%&lt;/code&gt; and &lt;code&gt;100%&lt;/code&gt; (inclusive). A larger weight indicates that more of &lt;code&gt;$color1&lt;/code&gt; should be used, and a smaller weight indicates that more of &lt;code&gt;$color2&lt;/code&gt; should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14d0a2b4e1e94c41d3308c15ac1e1a5145f4e22" translate="yes" xml:space="preserve">
          <source>Bounding Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aaeedb59d7c28a348007b7773439ae8e9886ef7" translate="yes" xml:space="preserve">
          <source>Bracketed Lists</source>
          <target state="translated">括号内的列表</target>
        </trans-unit>
        <trans-unit id="f7e5116b89972a266f863a56426b58586a768d71" translate="yes" xml:space="preserve">
          <source>Broccoli uses the &lt;a href=&quot;https://www.npmjs.com/package/broccoli-sass-source-maps&quot;&gt;&lt;code&gt;broccoli-sass-source-maps&lt;/code&gt; package&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1a029d359444260fd92f30eeacbacee62cf526" translate="yes" xml:space="preserve">
          <source>Built-In Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d889487a418d8d26c32fb7eb96aab6780731d84d" translate="yes" xml:space="preserve">
          <source>Built-in Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84040886708ca3a7309b66cb1af7128ceac35f1" translate="yes" xml:space="preserve">
          <source>But Sass wants to make your life easier. Rather than repeating the same selectors over and over again, you can write one style rules inside another. Sass will automatically combine the outer rule&amp;rsquo;s selector with the inner rule&amp;rsquo;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f6a57b5a3f46981dddd10346050b6e06f08985" translate="yes" xml:space="preserve">
          <source>But this is an error:</source>
          <target state="translated">但这是一个错误。</target>
        </trans-unit>
        <trans-unit id="abce43ffefd078f9142d010888db83a79e434b11" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;@at-root&lt;/code&gt; just excludes selectors. However, it's also possible to use &lt;code&gt;@at-root&lt;/code&gt; to move outside of nested directives such as &lt;code&gt;@media&lt;/code&gt; as well. For example:</source>
          <target state="translated">默认情况下， &lt;code&gt;@at-root&lt;/code&gt; 仅排除选择器。但是，也可以使用 &lt;code&gt;@at-root&lt;/code&gt; 移到嵌套指令（例如 &lt;code&gt;@media&lt;/code&gt; )之外。例如：</target>
        </trans-unit>
        <trans-unit id="f629751333b45da0a29c1c90751df9267899a7ab" translate="yes" xml:space="preserve">
          <source>By default, LibSass handles plain CSS imports correctly. However, any &lt;a href=&quot;../js-api#importer&quot;&gt;custom importers&lt;/a&gt; will incorrectly apply to plain-CSS&lt;code&gt;@import&lt;/code&gt; rules, making it possible for those rules to load Sass files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe88cde95e84d01f471f4a3ab36323da21b80f2" translate="yes" xml:space="preserve">
          <source>By default, Sass caches compiled templates and &lt;a href=&quot;#partials&quot;&gt;partials&lt;/a&gt;. This dramatically speeds up re-compilation of large collections of Sass files, and works best if the Sass templates are split up into separate files that are all &lt;a href=&quot;#import&quot;&gt;&lt;code&gt;@import&lt;/code&gt;&lt;/a&gt;ed into one large file.</source>
          <target state="translated">默认情况下，Sass缓存已编译的模板和&lt;a href=&quot;#partials&quot;&gt;partials&lt;/a&gt;。这大大加快了上海社会科学院文件大集合重新编译，如果萨斯模板分成单独的文件都是最有效&lt;a href=&quot;#import&quot;&gt; &lt;code&gt;@import&lt;/code&gt; &lt;/a&gt;编辑成一个大文件。</target>
        </trans-unit>
        <trans-unit id="8facb5c4261494d47dbc00d22efa87849e06e3f0" translate="yes" xml:space="preserve">
          <source>By default, a module&amp;rsquo;s namespace is just the last component of its URL without a file extension. However, sometimes you might want to choose a different namespace&amp;mdash;you might want to use a shorter name for a module you refer to a lot, or you might be loading multiple modules with the same filename. You can do this by writing &lt;code&gt;@use &quot;&amp;lt;url&amp;gt;&quot; as &amp;lt;namespace&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49289eb02c90e3f513e0839b1d674a2bf83ec0a" translate="yes" xml:space="preserve">
          <source>By default, error CSS is enabled if you&amp;rsquo;re compiling to at least one file on disk (as opposed to standard output). You can pass &lt;code&gt;--error-css&lt;/code&gt; explicitly to enable it even when you&amp;rsquo;re compiling to standard out, or &lt;code&gt;--no-error-css&lt;/code&gt; to disable it everywhere. When it&amp;rsquo;s disabled, the &lt;a href=&quot;#update&quot;&gt;&lt;code&gt;--update&lt;/code&gt; flag&lt;/a&gt; and &lt;a href=&quot;#watch&quot;&gt;&lt;code&gt;--watch&lt;/code&gt; flag&lt;/a&gt; will delete CSS files instead when an error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052f3e4c4c42a6510daac6e1643c59d2771b0017" translate="yes" xml:space="preserve">
          <source>By default, if two values are placed next to one another, they are concatenated with a space:</source>
          <target state="translated">默认情况下,如果两个值相邻放置,它们会用空格连接。</target>
        </trans-unit>
        <trans-unit id="94fc2ba52348642435255b7f1b1168cbbc04340d" translate="yes" xml:space="preserve">
          <source>By default, multi-line comments be stripped from the compiled CSS in &lt;a href=&quot;../cli/dart-sass#style&quot;&gt;compressed mode&lt;/a&gt;. If a comment begins with &lt;code&gt;/*!&lt;/code&gt;, though, it will always be included in the CSS output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d151d5a4d364822a16b8d683dcc7d694dc98821" translate="yes" xml:space="preserve">
          <source>By default, the migrator will only change files that you explicitly pass on the command line. Passing the &lt;a href=&quot;#migrate-deps&quot;&gt;&lt;code&gt;--migrate-deps&lt;/code&gt; option&lt;/a&gt; tells the migrator to also change all the stylesheets that are loaded using the &lt;a href=&quot;../at-rules/use&quot;&gt;&lt;code&gt;@use&lt;/code&gt; rule&lt;/a&gt;, &lt;a href=&quot;../at-rules/forward&quot;&gt;&lt;code&gt;@forward&lt;/code&gt; rule&lt;/a&gt;, or &lt;a href=&quot;../at-rules/import&quot;&gt;&lt;code&gt;@import&lt;/code&gt; rule&lt;/a&gt;. And if you want to do a test run to see what changes will be made without actually saving them, you can pass &lt;code&gt;&lt;a href=&quot;#dry-run&quot;&gt;--dry-run&lt;/a&gt; &lt;a href=&quot;#verbose&quot;&gt;--verbose&lt;/a&gt;&lt;/code&gt; (or &lt;code&gt;-nv&lt;/code&gt; for short).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b291527e7a67caaab32cad2a92f724331de5de64" translate="yes" xml:space="preserve">
          <source>By default, this stylesheet is parsed as &lt;a href=&quot;syntax#scss&quot;&gt;SCSS&lt;/a&gt;. This can be controlled using the &lt;a href=&quot;#indentedsyntax&quot;&gt;&lt;code&gt;indentedSyntax&lt;/code&gt; option&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd91260635261acd2af62523bbdab5ad233f5a55" translate="yes" xml:space="preserve">
          <source>By default, this throws an error if &lt;code&gt;$name&lt;/code&gt; doesn&amp;rsquo;t refer to Sass function. However, if &lt;code&gt;$css&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, it instead returns a &lt;a href=&quot;../at-rules/function#plain-css-functions&quot;&gt;plain CSS function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194e13da720a1f025685e5d677eba8a1aff3860a" translate="yes" xml:space="preserve">
          <source>CSS</source>
          <target state="translated">CSS</target>
        </trans-unit>
        <trans-unit id="a8e3e330ff469df8d9ced4ade3cd48ed0d1b8160" translate="yes" xml:space="preserve">
          <source>CSS At-Rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f135828b4bad3068ebe91784e7665129f7d3105b" translate="yes" xml:space="preserve">
          <source>CSS Extensions</source>
          <target state="translated">CSS扩展</target>
        </trans-unit>
        <trans-unit id="075e2633a343fb1649024b20ec32c7ac9d2e197e" translate="yes" xml:space="preserve">
          <source>CSS Statements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc7ecfcb508340d4cb36eb5e463c97570d5695e" translate="yes" xml:space="preserve">
          <source>CSS added support for &lt;a href=&quot;https://drafts.csswg.org/css-values-4/#calc-notation&quot;&gt;&lt;code&gt;min()&lt;/code&gt; and &lt;code&gt;max()&lt;/code&gt; functions&lt;/a&gt; in Values and Units Level 4, from where they were quickly adopted by Safari &lt;a href=&quot;https://webkit.org/blog/7929/designing-websites-for-iphone-x/&quot;&gt;to support the iPhoneX&lt;/a&gt;. But Sass supported its own &lt;a href=&quot;../modules/math#min&quot;&gt;&lt;code&gt;min()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../modules/math#max&quot;&gt;&lt;code&gt;max()&lt;/code&gt;&lt;/a&gt; functions long before this, and it needed to be backwards-compatible with all those existing stylesheets. This led for the need for extra-special syntactic cleverness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c9caba726875048627b11ab3c9553ebeaae46d" translate="yes" xml:space="preserve">
          <source>CSS allows &lt;code&gt;/&lt;/code&gt; to appear in property values as a way of separating numbers. Since SassScript is an extension of the CSS property syntax, it must support this, while also allowing &lt;code&gt;/&lt;/code&gt; to be used for division. This means that by default, if two numbers are separated by &lt;code&gt;/&lt;/code&gt; in SassScript, then they will appear that way in the resulting CSS.</source>
          <target state="translated">CSS允许 &lt;code&gt;/&lt;/code&gt; 出现在属性值中，以分隔数字。由于SassScript是CSS属性语法的扩展，因此它必须支持它，同时还允许 &lt;code&gt;/&lt;/code&gt; 用于除法。这意味着默认情况下，如果两个数字在SassScript中由 &lt;code&gt;/&lt;/code&gt; 分隔，则它们将以这种方式出现在结果CSS中。</target>
        </trans-unit>
        <trans-unit id="74a32a1246349387e355ccb8cdd9416a4c8b73f6" translate="yes" xml:space="preserve">
          <source>CSS at-rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64951d188d0c8a95dc25c3a0d721be1e547efe15" translate="yes" xml:space="preserve">
          <source>CSS defines many functions, and most of them work just fine with Sass&amp;rsquo;s normal function syntax. They&amp;rsquo;re parsed as function calls, resolved to &lt;a href=&quot;../at-rules/function#plain-css-functions&quot;&gt;plain CSS functions&lt;/a&gt;, and compiled as-is to CSS. There are a few exceptions, though, which have special syntax that can&amp;rsquo;t just be parsed as a &lt;a href=&quot;structure#expressions&quot;&gt;SassScript expression&lt;/a&gt;. All special function calls return &lt;a href=&quot;../values/strings#unquoted&quot;&gt;unquoted strings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a1533fa629342ba0f432722f5227ceb3688476" translate="yes" xml:space="preserve">
          <source>CSS files imported by Sass don&amp;rsquo;t allow any special Sass features. In order to make sure authors don&amp;rsquo;t accidentally write Sass in their CSS, all Sass features that aren&amp;rsquo;t also valid CSS will produce errors. Otherwise, the CSS will be rendered as-is. It can even be &lt;a href=&quot;extend&quot;&gt;extended&lt;/a&gt;!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3625da63757bba60a9c867660fc7c7da4db30d8e" translate="yes" xml:space="preserve">
          <source>CSS files loaded as modules don&amp;rsquo;t allow any special Sass features and so can&amp;rsquo;t expose any Sass variables, functions, or mixins. In order to make sure authors don&amp;rsquo;t accidentally write Sass in their CSS, all Sass features that aren&amp;rsquo;t also valid CSS will produce errors. Otherwise, the CSS will be rendered as-is. It can even be &lt;a href=&quot;extend&quot;&gt;extended&lt;/a&gt;!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac47699f383ce904a07bcc3d54bbc96d883eb87a" translate="yes" xml:space="preserve">
          <source>CSS has &lt;a href=&quot;style-rules/declarations#custom-properties&quot;&gt;variables of its own&lt;/a&gt;, which are totally different than Sass variables. Know the differences!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1cdda9f66bf797708dfc5b937fc63323ce3238" translate="yes" xml:space="preserve">
          <source>CSS has quite a few properties that are in &quot;namespaces;&quot; for instance, &lt;code&gt;font-family&lt;/code&gt;, &lt;code&gt;font-size&lt;/code&gt;, and &lt;code&gt;font-weight&lt;/code&gt; are all in the &lt;code&gt;font&lt;/code&gt; namespace. In CSS, if you want to set a bunch of properties in the same namespace, you have to type it out each time. Sass provides a shortcut for this: just write the namespace once, then nest each of the sub-properties within it. For example:</source>
          <target state="translated">CSS具有&amp;ldquo;命名空间&amp;rdquo;中的许多属性。例如， &lt;code&gt;font-family&lt;/code&gt; ， &lt;code&gt;font-size&lt;/code&gt; 和 &lt;code&gt;font-weight&lt;/code&gt; 都在 &lt;code&gt;font&lt;/code&gt; 名称空间中。在CSS中，如果要在同一名称空间中设置一堆属性，则必须每次将其键入。 Sass为此提供了一个捷径：只需编写一次名称空间，然后在其中嵌套每个子属性。例如：</target>
        </trans-unit>
        <trans-unit id="ad57f67b80e922568da5789930eb46aea8f12fa9" translate="yes" xml:space="preserve">
          <source>CSS specifies two kinds of strings: those with quotes, such as &lt;code&gt;&quot;Lucida Grande&quot;&lt;/code&gt; or &lt;code&gt;'http://sass-lang.com'&lt;/code&gt;, and those without quotes, such as &lt;code&gt;sans-serif&lt;/code&gt; or &lt;code&gt;bold&lt;/code&gt;. SassScript recognizes both kinds, and in general if one kind of string is used in the Sass document, that kind of string will be used in the resulting CSS.</source>
          <target state="translated">CSS指定两种字符串：带引号的字符串（例如 &lt;code&gt;&quot;Lucida Grande&quot;&lt;/code&gt; 或 &lt;code&gt;'http://sass-lang.com'&lt;/code&gt; ）和不带引号的字符串（例如 &lt;code&gt;sans-serif&lt;/code&gt; 或 &lt;code&gt;bold&lt;/code&gt; )。SassScript可以识别两种类型，并且通常，如果在Sass文档中使用一种字符串，则在生成的CSS中将使用这种字符串。</target>
        </trans-unit>
        <trans-unit id="b1450669b3b96893a348ef2de899f222981a8184" translate="yes" xml:space="preserve">
          <source>CSS supports many different formats that can all represent the same color: its name, its hex code, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/color_value&quot;&gt;functional notation&lt;/a&gt;. Which format Sass chooses to compile a color to depends on the color itself, how it was written in the original stylesheet, and the current output mode. Because it can vary so much, stylesheet authors shouldn&amp;rsquo;t rely on any particular output format for colors they write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84a261113700b5252d2dd25b4e38677776c5c90" translate="yes" xml:space="preserve">
          <source>CSS variables can have different values for different elements, but Sass variables only have one value at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1133721a8c022238bccc194ce97bed010598bd2e" translate="yes" xml:space="preserve">
          <source>Cache Stores</source>
          <target state="translated">缓存库</target>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="8ee4ac719f02a701345f73f407fd4955dcf0daca" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;new sass.types.Boolean()&lt;/code&gt; is forbidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4533acc72820b50da57ecbfba0f6431b4fdc5705" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;new sass.types.Null()&lt;/code&gt; is forbidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c612fa492373c12b00ddfaacb6f97332482cb4" translate="yes" xml:space="preserve">
          <source>Chaining Extends</source>
          <target state="translated">链式延伸</target>
        </trans-unit>
        <trans-unit id="eca60043dfb6716b9d39e625e5782f9e5329b517" translate="yes" xml:space="preserve">
          <source>Changes one or more properties of a color. This can change the red, green, blue, hue, saturation, value, and alpha properties. The properties are specified as keyword arguments, and replace the color's current value for that property.</source>
          <target state="translated">改变一个颜色的一个或多个属性,可以改变红色、绿色、蓝色、色调、饱和度、数值和alpha属性。这可以改变红色、绿色、蓝色、色调、饱和度、值和 alpha 属性。这些属性是以关键字参数的形式指定的,并替换该属性的颜色的当前值。</target>
        </trans-unit>
        <trans-unit id="645b44959c6f608356871354280303d974b2e5af" translate="yes" xml:space="preserve">
          <source>Changes the hue of a color. Takes a color and a number of degrees (usually between &lt;code&gt;-360deg&lt;/code&gt; and &lt;code&gt;360deg&lt;/code&gt;), and returns a color with the hue rotated along the color wheel by that amount.</source>
          <target state="translated">更改颜色的色调。取一个颜色和一个度数（通常在 &lt;code&gt;-360deg&lt;/code&gt; 和 &lt;code&gt;360deg&lt;/code&gt; 之间），并返回一个颜色，其中色相沿着色轮旋转该量。</target>
        </trans-unit>
        <trans-unit id="f7b6149d4715f6744ca97dc7ad3c2bec411941c6" translate="yes" xml:space="preserve">
          <source>Check whether a function with the given name exists.</source>
          <target state="translated">检查给定名称的函数是否存在。</target>
        </trans-unit>
        <trans-unit id="7fd5ed60e2bc8ac95cbe2fb4d9d02b73628ad233" translate="yes" xml:space="preserve">
          <source>Check whether a mixin was passed a content block.</source>
          <target state="translated">检查是否有混杂物被传递到一个内容块中。</target>
        </trans-unit>
        <trans-unit id="865e1cb6215af49ad8e06d669d67e16d5b05998e" translate="yes" xml:space="preserve">
          <source>Check whether a mixin with the given name exists.</source>
          <target state="translated">检查是否存在给定名称的混音器。</target>
        </trans-unit>
        <trans-unit id="b27aa16101e76a160857d563e034631e0ebc471d" translate="yes" xml:space="preserve">
          <source>Check whether a variable with the given name exists in the current scope or in the global scope.</source>
          <target state="translated">检查给定名称的变量是否存在于当前作用域或全局作用域中。</target>
        </trans-unit>
        <trans-unit id="321d74d619f0473650227715ea1db5bdb208a376" translate="yes" xml:space="preserve">
          <source>Check whether a variable with the given name exists in the global scope (at the top level of the file).</source>
          <target state="translated">检查给定名称的变量是否存在于全局作用域中(在文件的顶层)。</target>
        </trans-unit>
        <trans-unit id="eef353195b233950ba63fa3a12be6d0adf5fd926" translate="yes" xml:space="preserve">
          <source>Chocolatey</source>
          <target state="translated">Chocolatey</target>
        </trans-unit>
        <trans-unit id="33070713568104d43f9cdc630c1b6d8aa7ee07d7" translate="yes" xml:space="preserve">
          <source>Choosing a Namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18d758687d5a06742caa4babacf7fd7e8df6eb7" translate="yes" xml:space="preserve">
          <source>Class selectors aren't the only things that can be extended. It's possible to extend any selector involving only a single element, such as &lt;code&gt;.special.cool&lt;/code&gt;, &lt;code&gt;a:hover&lt;/code&gt;, or &lt;code&gt;a.user[href^=&quot;http://&quot;]&lt;/code&gt;. For example:</source>
          <target state="translated">类选择器不是唯一可以扩展的东西。这是可能的延伸仅涉及单个元件，例如任何选择 &lt;code&gt;.special.cool&lt;/code&gt; ， &lt;code&gt;a:hover&lt;/code&gt; ，或 &lt;code&gt;a.user[href^=&quot;http://&quot;]&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="d6df5380103d61e08233c5e322a08284a4da07df" translate="yes" xml:space="preserve">
          <source>Color Operations</source>
          <target state="translated">颜色操作</target>
        </trans-unit>
        <trans-unit id="0d2162101a17d69e7f8570a0625cc4f64b705689" translate="yes" xml:space="preserve">
          <source>Color operations</source>
          <target state="translated">色彩操作</target>
        </trans-unit>
        <trans-unit id="88d5e4cac104ffc3f02dd54f2f0f1074fd33fd9b" translate="yes" xml:space="preserve">
          <source>Colors</source>
          <target state="translated">Colors</target>
        </trans-unit>
        <trans-unit id="ae9ef3e915dca9e8183e98f8025afd1a6d1eaa60" translate="yes" xml:space="preserve">
          <source>Colors can&amp;rsquo;t be used as the left-hand value, because they used to have &lt;a href=&quot;../operators&quot;&gt;their own operators&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19e09e517b383a8a02c37525f14694dbd1d3ff5" translate="yes" xml:space="preserve">
          <source>Combines &lt;code&gt;$selectors&lt;/code&gt; as though they were nested within one another in the stylesheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51768d595dc3727ec5ef756095b51879d5a19450" translate="yes" xml:space="preserve">
          <source>Combines &lt;code&gt;$selectors&lt;/code&gt; without &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Descendant_selectors&quot;&gt;descendant combinators&lt;/a&gt;&amp;mdash;that is, without whitespace between them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4b0d2c4b044f755f0939f94fde69d08c2dfffe" translate="yes" xml:space="preserve">
          <source>Combines every list in &lt;code&gt;$lists&lt;/code&gt; into a single list of sub-lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df455815e242c90c393d63858a2a2d31de4c507f" translate="yes" xml:space="preserve">
          <source>Combines several lists into a single multidimensional list. The nth value of the resulting list is a space separated list of the source lists' nth values.</source>
          <target state="translated">将多个列表合并成一个多维列表。结果列表的第n个值是源列表的第n个值的空格分隔列表。</target>
        </trans-unit>
        <trans-unit id="23acf758eac39d13ef4d0c29b8ee402b4213dc7d" translate="yes" xml:space="preserve">
          <source>Comma-separated lists may have a trailing comma. This is especially useful because it allows you to represent a single-element list. For example, &lt;code&gt;(1,)&lt;/code&gt; is a list containing &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;(1 2 3,)&lt;/code&gt; is a comma-separated list containing a space-separated list containing &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, and &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">逗号分隔的列表可能带有尾部逗号。这特别有用，因为它允许您表示一个单元素列表。例如， &lt;code&gt;(1,)&lt;/code&gt; 是含有列表 &lt;code&gt;1&lt;/code&gt; 和 &lt;code&gt;(1 2 3,)&lt;/code&gt; 是包含含有空格分隔列表中的逗号分隔的列表 &lt;code&gt;1&lt;/code&gt; ， &lt;code&gt;2&lt;/code&gt; ，和 &lt;code&gt;3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f9408856d6c43a487f24ed6c405a06b71bf79f69" translate="yes" xml:space="preserve">
          <source>Command-Line Interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="5587b89ef2f661400e95efcdcdd2e28ef35eceae" translate="yes" xml:space="preserve">
          <source>Comments can also be used within &lt;a href=&quot;structure#expressions&quot;&gt;expressions&lt;/a&gt; in the indented syntax. In this case, they have exactly the same syntax as they do in SCSS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b05e9b5cb26c069ce3d3c0a5fb1467c5736606" translate="yes" xml:space="preserve">
          <source>Comments in SCSS work similarly to comments in other languages like JavaScript. &lt;strong&gt;Single-line comments&lt;/strong&gt; start with &lt;code&gt;//&lt;/code&gt;, and go until the end of the line. Nothing in a single-line comment is emitted as CSS; as far as Sass is concerned, they may as well not exist. They&amp;rsquo;re also called &lt;strong&gt;silent comments&lt;/strong&gt;, because they don&amp;rsquo;t produce any CSS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b308cf717f3a5945dcef0f312bf4a5ab1b65cf" translate="yes" xml:space="preserve">
          <source>Comments in the indented syntax work a little differently: they&amp;rsquo;re indentation-based, just like the rest of the syntax. Like SCSS, silent comments written with &lt;code&gt;//&lt;/code&gt; are never emitted as CSS, but unlike SCSS everything indented beneath the opening &lt;code&gt;//&lt;/code&gt; is also commented out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a38ec729aeaa15df19be0178eaf0ecc948917a" translate="yes" xml:space="preserve">
          <source>Comments: &lt;code&gt;/* */&lt;/code&gt; and &lt;code&gt;//&lt;/code&gt; #comments</source>
          <target state="translated">注释： &lt;code&gt;/* */&lt;/code&gt; 和 &lt;code&gt;//&lt;/code&gt; #comments</target>
        </trans-unit>
        <trans-unit id="7de90a65241a6cdbd9ade485d777715d99285a1e" translate="yes" xml:space="preserve">
          <source>Common</source>
          <target state="translated">Common</target>
        </trans-unit>
        <trans-unit id="445e6645c6a9923c39870045b0cde9cb751b2f2a" translate="yes" xml:space="preserve">
          <source>Compact style takes up less space than Nested or Expanded. It also draws the focus more to the selectors than to their properties. Each CSS rule takes up only one line, with every property defined on that line. Nested rules are placed next to each other with no newline, while separate groups of rules have newlines between them. For example:</source>
          <target state="translated">紧凑型风格比嵌套式或扩展式风格占用的空间更小。它还将焦点更多地吸引到选择器上,而不是它们的属性上。每个CSS规则只占一行,每个属性都定义在这一行。嵌套的规则彼此相邻,没有换行,而单独的规则组之间有换行。例如</target>
        </trans-unit>
        <trans-unit id="bb5c371e9c5edeeace55173ec6e3e3ad2b75aa35" translate="yes" xml:space="preserve">
          <source>Compatibility ($whiteness and $blackness):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f09d9cecde1902e94b6ee29118d244b7f2a5b20d" translate="yes" xml:space="preserve">
          <source>Compatibility (10 Digit Default):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98edcccecc7fe35e07fc8cdc8555328ab217d0ff" translate="yes" xml:space="preserve">
          <source>Compatibility (Argument Type):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d1b9b26fa51a91ee8959d4ca4d7ad352703f95" translate="yes" xml:space="preserve">
          <source>Compatibility (Import order):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af23208849b0ee762bedf2f64629bd87fc41e7ec" translate="yes" xml:space="preserve">
          <source>Compatibility (Level 4 Syntax):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0dbacbe800704c1e02e71850c42049673a137d" translate="yes" xml:space="preserve">
          <source>Compatibility (Modern Syntax):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e5e38ee49bdf63a95236bd184dde3017d5286d" translate="yes" xml:space="preserve">
          <source>Compatibility (Name Interpolation):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf95bbc38ed2b365abd9812b60ee36f855312a85" translate="yes" xml:space="preserve">
          <source>Compatibility (No Compound Extensions):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e61205703854f69e816008b996cc481a507473" translate="yes" xml:space="preserve">
          <source>Compatibility (Normalization):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a80fd01739a6473e5e3191f70fc89aca6ffece" translate="yes" xml:space="preserve">
          <source>Compatibility (Percent Alpha):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f0fd197499535328e3cae0c80315e44e087bf9e" translate="yes" xml:space="preserve">
          <source>Compatibility (Plain CSS Files):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f010169ea4e10d71721a08af83821f9c98d7839" translate="yes" xml:space="preserve">
          <source>Compatibility (Range Syntax):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a35b9b2b782e762a7ed1ec68cd9019f6fe19bb" translate="yes" xml:space="preserve">
          <source>Compatibility (SASS_PATH):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5204188c94c10edae218a29ca078455cb3c21353" translate="yes" xml:space="preserve">
          <source>Compatibility (SassScript Syntax):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e18f0858d2e6013c5e3aa3aef804b093430a23c" translate="yes" xml:space="preserve">
          <source>Compatibility (Square Brackets):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8310a35fcfdc5bdbe332161ee002c2f890d42bc0" translate="yes" xml:space="preserve">
          <source>Compatibility (Unitless Equality):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93acf7103347170ded23fae68e7f68ab39f1f45" translate="yes" xml:space="preserve">
          <source>Compatibility:</source>
          <target state="translated">Compatibility:</target>
        </trans-unit>
        <trans-unit id="3485c75f6a3d9f536d10e39df4db2f9a0c62a6f9" translate="yes" xml:space="preserve">
          <source>Compiles to:</source>
          <target state="translated">编制为:</target>
        </trans-unit>
        <trans-unit id="d195432d0455b674e0118f308b2ff4629632f6fd" translate="yes" xml:space="preserve">
          <source>Compressed style takes up the minimum amount of space possible, having no whitespace except that necessary to separate selectors and a newline at the end of the file. It also includes some other minor compressions, such as choosing the smallest representation for colors. It's not meant to be human-readable. For example:</source>
          <target state="translated">压缩后的样式占用了尽可能少的空间,除了分隔选择符和文件末尾的换行之外,没有空白。它还包括一些其他的小压缩,比如为颜色选择最小的表示方式。它并不是要让人读懂的。比如说</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="08b9b2bbe3a5a9a0c3c38cdaf7bef4e2f04b8619" translate="yes" xml:space="preserve">
          <source>Configuring Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d5097aa3b41a7d683c2a08f320013b63c5610b" translate="yes" xml:space="preserve">
          <source>Configuring Modules Through Imports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06f03633a4f90ca098c601876b00970aa95c731" translate="yes" xml:space="preserve">
          <source>Configuring modules with &lt;code&gt;@use ... with&lt;/code&gt; can be very handy, especially when using libraries that were originally written to work with the &lt;a href=&quot;import&quot;&gt;&lt;code&gt;@import&lt;/code&gt; rule&lt;/a&gt;. But it&amp;rsquo;s not particularly flexible, and we don&amp;rsquo;t recommend it for more advanced use-cases. If you find yourself wanting to configure many variables at once, pass &lt;a href=&quot;../values/maps&quot;&gt;maps&lt;/a&gt; as configuration, or update the configuration after the module is loaded, consider writing a mixin to set your variables instead and another mixin to inject your styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d0b16dcff2ad339924784b660085f71a647b56" translate="yes" xml:space="preserve">
          <source>Content Blocks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9deed2c5337163a9ab591b313f5a7dac1113d5f4" translate="yes" xml:space="preserve">
          <source>Control Directives &amp;amp; Expressions</source>
          <target state="translated">控制指令和表达式</target>
        </trans-unit>
        <trans-unit id="77d22b8b5906697059a8a74e64de45b26f6821af" translate="yes" xml:space="preserve">
          <source>Controlling Visibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f154cd105e82b7c49288856cd86e0f5487913b" translate="yes" xml:space="preserve">
          <source>Convert a string to lower case,</source>
          <target state="translated">将一个字符串转换为小写。</target>
        </trans-unit>
        <trans-unit id="fca162e529858e2c0f4c1161197d8929de9d5c18" translate="yes" xml:space="preserve">
          <source>Converting &lt;a href=&quot;../at-rules/import#nesting&quot;&gt;nested imports&lt;/a&gt; to use the &lt;a href=&quot;../modules/meta#load-css&quot;&gt;&lt;code&gt;meta.load-css()&lt;/code&gt; mixin&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7435f6c02cb57b296d176ef78cb9cee56d1571" translate="yes" xml:space="preserve">
          <source>Converting overridden default variables to &lt;a href=&quot;../at-rules/use#configuration&quot;&gt;&lt;code&gt;with&lt;/code&gt; clauses&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b21d0486eeef03032c1d67a4ee9785b9fcf77f1" translate="yes" xml:space="preserve">
          <source>Converts a color into the format understood by IE filters.</source>
          <target state="translated">将颜色转换为IE过滤器理解的格式。</target>
        </trans-unit>
        <trans-unit id="9684475df202935931f04f410b2c1ea2483c0156" translate="yes" xml:space="preserve">
          <source>Converts a color to grayscale. This is identical to &lt;code&gt;desaturate(color, 100%)&lt;/code&gt;.</source>
          <target state="translated">将颜色转换为灰度。这与 &lt;code&gt;desaturate(color, 100%)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d457eedad5466b3ddfa4fb5c99c68fb4266c354d" translate="yes" xml:space="preserve">
          <source>Converts a string to upper case.</source>
          <target state="translated">将字符串转换为大写。</target>
        </trans-unit>
        <trans-unit id="6fba85d60ff1c6fc7c3a9eac7abeee1db75c34f8" translate="yes" xml:space="preserve">
          <source>Converts a unitless &lt;code&gt;$number&lt;/code&gt; (usually a decimal between 0 and 1) to a percentage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e624414019df20a7e07723ca59066175e66b4a1b" translate="yes" xml:space="preserve">
          <source>Converts a unitless number to a percentage.</source>
          <target state="translated">将无单位的数字转换为百分比。</target>
        </trans-unit>
        <trans-unit id="95fd9a2b31b0e500bf929d57f8003e0617580055" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;Color&lt;/a&gt; from hue, saturation, and lightness values. Uses the algorithm from the &lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;CSS3 spec&lt;/a&gt;.</source>
          <target state="translated">根据色相，饱和度和亮度值创建&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;颜色&lt;/a&gt;。使用&lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;CSS3规范中&lt;/a&gt;的算法。</target>
        </trans-unit>
        <trans-unit id="8ea63ea6358619ae5ecf5289b7c9c06781f8fc09" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;Color&lt;/a&gt; from hue, saturation, lightness, and alpha values. Uses the algorithm from the &lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;CSS3 spec&lt;/a&gt;.</source>
          <target state="translated">根据色相，饱和度，亮度和Alpha值创建&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;颜色&lt;/a&gt;。使用&lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;CSS3规范中&lt;/a&gt;的算法。</target>
        </trans-unit>
        <trans-unit id="ac28f39b37bdbc59a1b7e925d3c9cc4f9cf9f1b9" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;Color&lt;/a&gt; from red, green, blue, and alpha values.</source>
          <target state="translated">根据红色，绿色，蓝色和Alpha值创建&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;颜色&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2521a7b44a785bcadad1d6a4d169e3865eecb6c0" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;Color&lt;/a&gt; object from red, green, and blue values.</source>
          <target state="translated">根据红色，绿色和蓝色值创建一个&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;Color&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="4aea84dff0f041f9005543025fb8ea41f290b796" translate="yes" xml:space="preserve">
          <source>Creates a new Sass color with alpha, red, green, and blue channels taken from respective two-byte chunks of a hexidecimal number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e588ac8d0fb4e056b0f40ab70000c0abba79db0a" translate="yes" xml:space="preserve">
          <source>Creates a new Sass color with the given red, green, blue, and alpha channels. The red, green, and blue channels must be integers between 0 and 255 (inclusive), and alpha must be between 0 and 1 (inclusive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e9244c9259d624baa3a7514960f8aa5ea5c7cd" translate="yes" xml:space="preserve">
          <source>Creates a new Sass list with the given number of elements. If &lt;code&gt;comma&lt;/code&gt; is true, the list is comma-separated; otherwise, it&amp;rsquo;s space-separated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76331567bfce5914351236653ab8da39b81c15a" translate="yes" xml:space="preserve">
          <source>Creates a new Sass map with the given number of key/value pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219d39c56c20942f3697f31c7882ea060427173e" translate="yes" xml:space="preserve">
          <source>Creates a new Sass number with the given numeric value and string unit. &lt;a href=&quot;values/numbers#units&quot;&gt;Complex units&lt;/a&gt; are parsed from the unit string: numerator units are separated from denominators by a &lt;code&gt;/&lt;/code&gt;. Multiple numerator and/or denominator units may be separated by &lt;code&gt;*&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce24f30106110dd4b0696f7b92e76df8a9fb787" translate="yes" xml:space="preserve">
          <source>Creates a new unquoted Sass string with the given value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9d161b8d29bfcca25547a243af442d776ac7c9" translate="yes" xml:space="preserve">
          <source>Custom Importers</source>
          <target state="translated">定制进口商</target>
        </trans-unit>
        <trans-unit id="a3be231f25d3d591bc82af547598d58eb4cba0d8" translate="yes" xml:space="preserve">
          <source>Custom Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7f7e7eed0057bd616b57399367955cd8862792" translate="yes" xml:space="preserve">
          <source>Custom functions should respect Sass&amp;rsquo;s notion of &lt;a href=&quot;at-rules/control/if#truthiness-and-falsiness&quot;&gt;truthiness&lt;/a&gt; by treating &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt; as falsey and everything else as truthy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f021c14308183a2726c01603e81ac0a1ba7e8343" translate="yes" xml:space="preserve">
          <source>Custom property values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e31d4a19bde6c6e9520b415257ac8f75c3bb43b" translate="yes" xml:space="preserve">
          <source>Dart Sass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614b20ad080a7821cbd9558c26c2b0e34e9488a5" translate="yes" xml:space="preserve">
          <source>Dart Sass Command-Line Interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49d7a557e6d2306a732bef85039b345e3d5340e" translate="yes" xml:space="preserve">
          <source>Dart Sass currently &lt;em&gt;only&lt;/em&gt; supports the UTF-8 encoding. As such, it&amp;rsquo;s safest to encode all Sass stylesheets as UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33397e871be8dcbc5095ebdcfa9b843da77a65fc" translate="yes" xml:space="preserve">
          <source>Dart Sass generates source maps by default for every CSS file it emits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18842877f84be9bb3ae10673c4e60242f22c160" translate="yes" xml:space="preserve">
          <source>Data Types</source>
          <target state="translated">数据类型</target>
        </trans-unit>
        <trans-unit id="54e853e380fbb256af90f1b6701ddb337a923884" translate="yes" xml:space="preserve">
          <source>Default Values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785c0684363048eeeefcb49284ac589efae08612" translate="yes" xml:space="preserve">
          <source>Default values can be any SassScript expression, and they can even refer to earlier arguments!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898f9830669a73679909a1ae8342f80baaf665b8" translate="yes" xml:space="preserve">
          <source>Defining Custom Sass Functions</source>
          <target state="translated">定义自定义Sass函数</target>
        </trans-unit>
        <trans-unit id="8203cf8bdf7f782985420e4895696946c281640d" translate="yes" xml:space="preserve">
          <source>Defining a Mixin: &lt;code&gt;@mixin&lt;/code&gt; #defining_a_mixin</source>
          <target state="translated">定义一个mixin： &lt;code&gt;@mixin&lt;/code&gt; #defining_a_mixin</target>
        </trans-unit>
        <trans-unit id="55e600b541ce1d61c67158f05b3c693ab0930e76" translate="yes" xml:space="preserve">
          <source>Dependencies loaded from load paths are assumed to be third-party libraries, so the migrator will not migrate them even when the &lt;a href=&quot;#migrate-deps&quot;&gt;&lt;code&gt;--migrate-deps&lt;/code&gt; option&lt;/a&gt; is passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98804afb61fd735330c4881cf53184e0cc0aa62d" translate="yes" xml:space="preserve">
          <source>Despite the name, Sass does &lt;em&gt;not&lt;/em&gt; write the CSS output to this file. The caller must do that themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="077ef6bb7e9ca7a81dc6c9028d61cccdb0c255dd" translate="yes" xml:space="preserve">
          <source>Destructuring</source>
          <target state="translated">Destructuring</target>
        </trans-unit>
        <trans-unit id="71c2aba9e70bbcd137cacf494d3c0f46d7d004f2" translate="yes" xml:space="preserve">
          <source>Different implementations of Sass have different interfaces when using them from the command line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f18a03692136fa8859650df488eacf787582202" translate="yes" xml:space="preserve">
          <source>Directives that are only allowed at the base level of a document, like &lt;code&gt;@mixin&lt;/code&gt; or &lt;code&gt;@charset&lt;/code&gt;, are not allowed in files that are &lt;code&gt;@import&lt;/code&gt;ed in a nested context.</source>
          <target state="translated">在嵌套上下文中 &lt;code&gt;@import&lt;/code&gt; 的文件中不允许仅在文档的基础级别上使用的 &lt;code&gt;@mixin&lt;/code&gt; 指令，例如@mixin或 &lt;code&gt;@charset&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="852e77581a0b91ce845f5343ff8aa3feaeeab760" translate="yes" xml:space="preserve">
          <source>Disallowed Selectors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938004e21f3f3e82099132266fc1891a7f13de20" translate="yes" xml:space="preserve">
          <source>Distance Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8d766acf59d2fe96d62baada8ad0e3ad9012f6" translate="yes" xml:space="preserve">
          <source>Division and &lt;code&gt;/&lt;/code&gt;</source>
          <target state="translated">除法和 &lt;code&gt;/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="182962adc9b1595571c3bd6fc28deedd0a01aec8" translate="yes" xml:space="preserve">
          <source>Do Something for Every Element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec1753e2a3809b258717ffce6abdcb74a9d3012" translate="yes" xml:space="preserve">
          <source>Do Something for Every Pair</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="7ceb1bc39c07e6f3e294a5782801c6bc2eed4a03" translate="yes" xml:space="preserve">
          <source>Documentation Comments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab9ba45855dfdc64725e2c06a9c28ce4c113174" translate="yes" xml:space="preserve">
          <source>Documentation comments are silent comments, written with three slashes (&lt;code&gt;///&lt;/code&gt;) directly above the thing you&amp;rsquo;re documenting. SassDoc parses text in the comments as &lt;a href=&quot;https://www.markdownguide.org/getting-started&quot;&gt;Markdown&lt;/a&gt;, and supports many useful &lt;a href=&quot;http://sassdoc.com/annotations/&quot;&gt;annotations&lt;/a&gt; to describe it in detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e10ab59ae4fcb59a888f51ad37087162ea13962" translate="yes" xml:space="preserve">
          <source>Dynamically calls a function. This can call user-defined functions, built-in functions, or plain CSS functions. It will pass along all arguments, including keyword arguments, to the called function.</source>
          <target state="translated">动态调用一个函数。它可以调用用户定义的函数、内置函数或普通的CSS函数。它将把所有的参数,包括关键字参数,传递给被调用的函数。</target>
        </trans-unit>
        <trans-unit id="0747d7e60b46a088ce1f1a4775da0a3f1992244a" translate="yes" xml:space="preserve">
          <source>Each channel can be specified as either a &lt;a href=&quot;values/numbers#units&quot;&gt;unitless&lt;/a&gt; number between 0 and 255 (inclusive), or a percentage between &lt;code&gt;0%&lt;/code&gt; and &lt;code&gt;100%&lt;/code&gt; (inclusive). The alpha channel can be specified as either a unitless number between 0 and 1 (inclusive), or a percentage between &lt;code&gt;0%&lt;/code&gt; and &lt;code&gt;100%&lt;/code&gt; (inclusive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6af597ccd54c8a498593b2e8b8749711fb41a1" translate="yes" xml:space="preserve">
          <source>Each custom importer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8110170c40d5400e8954c466af252b65e7e368" translate="yes" xml:space="preserve">
          <source>Each element in the returned list contains all the elements at that position in &lt;code&gt;$lists&lt;/code&gt;. The returned list is as long as the shortest list in &lt;code&gt;$lists&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68392ce2960a57ba353d3f13ae7ee60e03e899f2" translate="yes" xml:space="preserve">
          <source>Each importer is in charge of a single load path (or whatever the corresponding notion is for the backend). Importers can be placed in the &lt;a href=&quot;file.sass_reference#load_paths-option&quot;&gt;&lt;code&gt;:load_paths&lt;/code&gt; array&lt;/a&gt; alongside normal filesystem paths.</source>
          <target state="translated">每个进口商负责单个加载路径（或后端的相应概念）。导入程序可以与常规文件系统路径一起放在&lt;a href=&quot;file.sass_reference#load_paths-option&quot;&gt; &lt;code&gt;:load_paths&lt;/code&gt; 数组中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="afa58b821a1f31fb85c38f4ab5c801541d4157f9" translate="yes" xml:space="preserve">
          <source>Each keyword argument must be a number between &lt;code&gt;-100%&lt;/code&gt; and &lt;code&gt;100%&lt;/code&gt; (inclusive). This indicates how far the corresponding property should be moved from its original position towards the maximum (if the argument is positive) or the minimum (if the argument is negative). This means that, for example, &lt;code&gt;$lightness: 50%&lt;/code&gt; will make all colors &lt;code&gt;50%&lt;/code&gt; closer to maximum lightness without making them fully white.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e45236c739ef3dda343ccda48c6df078058afa" translate="yes" xml:space="preserve">
          <source>Each load path in &lt;a href=&quot;#includepaths&quot;&gt;includePaths&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3012a41a6186d167b5a50c693c92c4e669585fc9" translate="yes" xml:space="preserve">
          <source>Each load path specified in the &lt;code&gt;SASS_PATH&lt;/code&gt; environment variable, which should be semicolon-separated on Windows and colon-separated elsewhere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f35b65298d299e9b398591e7fbe2327e1263a9" translate="yes" xml:space="preserve">
          <source>Each stylesheet is executed and its CSS emitted &lt;em&gt;every time&lt;/em&gt; it&amp;rsquo;s &lt;code&gt;@import&lt;/code&gt;ed, which increases compilation time and produces bloated output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c96253d366adbe2bd03f92870fc76b50d66006d" translate="yes" xml:space="preserve">
          <source>Earlier versions of Dart Sass and Node Sass didn&amp;rsquo;t support the &lt;code&gt;SASS_PATH&lt;/code&gt; environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3999ea0ab9f0c393ad3dcdde703ba303c842a513" translate="yes" xml:space="preserve">
          <source>Early on in Sass&amp;rsquo;s history, it added support for mathematical operations on &lt;a href=&quot;values/colors&quot;&gt;colors&lt;/a&gt;. These operations operated on each of the colors&amp;rsquo; RGB channels separately, so adding two colors would produce a color with the sum of their red channels as its red channel and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f362cb48c6ace665d4fe4708f2e50345cd3ef3c1" translate="yes" xml:space="preserve">
          <source>Either expression is anything other than a literal number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa8c43e978e9b266be22696d2cd1760984d3189" translate="yes" xml:space="preserve">
          <source>Either syntax can &lt;a href=&quot;#import&quot;&gt;import&lt;/a&gt; files written in the other. Files can be automatically converted from one syntax to the other using the &lt;code&gt;sass-convert&lt;/code&gt; command line tool:</source>
          <target state="translated">两种语法都可以&lt;a href=&quot;#import&quot;&gt;导入&lt;/a&gt;用另一种语法编写的文件。可以使用 &lt;code&gt;sass-convert&lt;/code&gt; 命令行工具将文件自动从一种语法转换为另一种语法：</target>
        </trans-unit>
        <trans-unit id="ebcff2a273750beb91287b75a04ff2fe821f1083" translate="yes" xml:space="preserve">
          <source>Ember uses the &lt;a href=&quot;https://www.npmjs.com/package/ember-cli-sass&quot;&gt;&lt;code&gt;ember-cli-sass&lt;/code&gt; package&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67bf7e34c1a4a31cae214ef8d7d01b73e57657ee" translate="yes" xml:space="preserve">
          <source>Empty lists without brackets aren&amp;rsquo;t valid CSS, so Sass won&amp;rsquo;t let you use one in a property value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92cec9351f14c94fac0e1528a1d5c3fe336e051c" translate="yes" xml:space="preserve">
          <source>Enables &lt;a href=&quot;#many-to-many-mode&quot;&gt;many-to-many mode&lt;/a&gt;, and causes Sass to stay open and continue compiling stylesheets whenever they or their dependencies change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e7aa89332b6cee8751327a9d69e3cd920f8ea8" translate="yes" xml:space="preserve">
          <source>Encodings</source>
          <target state="translated">Encodings</target>
        </trans-unit>
        <trans-unit id="45e627f52d19c66ed17ef676cd85fb90cea460ba" translate="yes" xml:space="preserve">
          <source>Equal to the value of the &lt;a href=&quot;https://en.wikipedia.org/wiki/E_(mathematical_constant)&quot;&gt;mathematical constant &lt;em&gt;e&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbaa235ea9d20ba6c30db7e698632eb69398e0d" translate="yes" xml:space="preserve">
          <source>Equal to the value of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Pi&quot;&gt;mathematical constant &lt;em&gt;&amp;pi;&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7264243f4aeaaab7fbb98bd7afd5e953b5900f7b" translate="yes" xml:space="preserve">
          <source>Equality Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b730515dc7952882983da0a589efdff1e44db9" translate="yes" xml:space="preserve">
          <source>Error Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93a4e0ef80150a1a033177365048c386c52720b" translate="yes" xml:space="preserve">
          <source>Escapes</source>
          <target state="translated">Escapes</target>
        </trans-unit>
        <trans-unit id="48eabc3be0e74fff6a14cf849737fefda0ff01d9" translate="yes" xml:space="preserve">
          <source>Even if the string was originally quoted, this will cause it to become unquoted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="579054b5c7668447dc3b53376cf13deb9fcdb730" translate="yes" xml:space="preserve">
          <source>Expanded is a more typical human-made CSS style, with each property and rule taking up one line. Properties are indented within the rules, but the rules aren't indented in any special way. For example:</source>
          <target state="translated">展开式是一种比较典型的人为制作的CSS样式,每个属性和规则都占一行。属性在规则中是缩进的,但规则没有任何特殊的缩进方式。比如说</target>
        </trans-unit>
        <trans-unit id="df68414b7f68f4ce629788201778e14f0a4a70ba" translate="yes" xml:space="preserve">
          <source>Exponential Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5fccd8dcd8fc317f8edfc8259af86cd2967a29" translate="yes" xml:space="preserve">
          <source>Expressions</source>
          <target state="translated">Expressions</target>
        </trans-unit>
        <trans-unit id="908d55d5cc6427c12dd97943a7fa8ebd4465aacf" translate="yes" xml:space="preserve">
          <source>Extend in &lt;code&gt;@media&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a229ec8a2034bfb253b92686ee4eca45cab34178" translate="yes" xml:space="preserve">
          <source>Extending Complex Selectors</source>
          <target state="translated">扩展复合选择器</target>
        </trans-unit>
        <trans-unit id="f46eaf9e68b3c7dd0746d876f8359452d6de2be3" translate="yes" xml:space="preserve">
          <source>Extending Sass</source>
          <target state="translated">扩展Sass</target>
        </trans-unit>
        <trans-unit id="4646c0202e45630c9e890663a2fdaefde82a7a66" translate="yes" xml:space="preserve">
          <source>Extends &lt;code&gt;$selector&lt;/code&gt; as with the &lt;a href=&quot;../at-rules/extend&quot;&gt;&lt;code&gt;@extend&lt;/code&gt; rule&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f63a98394fe1b740f200c47846317fc3a213c5" translate="yes" xml:space="preserve">
          <source>Extends and &lt;a href=&quot;mixin&quot;&gt;mixins&lt;/a&gt; are both ways of encapsulating and re-using styles in Sass, which naturally raises the question of when to use which one. Mixins are obviously necessary when you need to configure the styles using &lt;a href=&quot;mixin#arguments&quot;&gt;arguments&lt;/a&gt;, but what if they&amp;rsquo;re just a chunk of styles?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66beeec096907d5a2b187f4f514e1367996511c" translate="yes" xml:space="preserve">
          <source>Extends are resolved after the rest of your stylesheet is compiled. In particular, it happens after &lt;a href=&quot;../style-rules/parent-selector&quot;&gt;parent selectors&lt;/a&gt; are resolved. This means that if you &lt;code&gt;@extend .error&lt;/code&gt;, it won&amp;rsquo;t affect the inner selector in &lt;code&gt;.error { &amp;amp;__icon { ... } }&lt;/code&gt;. It also means that &lt;a href=&quot;../style-rules/parent-selector#in-sassscript&quot;&gt;parent selectors in SassScript&lt;/a&gt; can&amp;rsquo;t see the results of extend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7104fd4523e5c5aefb8e75cfbab4ef1ed3dd23e2" translate="yes" xml:space="preserve">
          <source>Extends or Mixins?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e5788db0996e487875ba49a0f819036dea7263" translate="yes" xml:space="preserve">
          <source>Extension Scope</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b805132d320883e0b2e079efff38915fa493e0" translate="yes" xml:space="preserve">
          <source>Extensions aren&amp;rsquo;t scoped at all if you&amp;rsquo;re using the &lt;a href=&quot;import&quot;&gt;&lt;code&gt;@import&lt;/code&gt; rule&lt;/a&gt;. Not only will they affect every stylesheet you import, they&amp;rsquo;ll affect every stylesheet that imports your stylesheet, everything else those stylesheets import, and so on. Without &lt;code&gt;@use&lt;/code&gt;, extensions are &lt;em&gt;global&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb05721565b72d093773ab35b705266f5964660" translate="yes" xml:space="preserve">
          <source>Extracts a substring from &lt;code&gt;$string&lt;/code&gt;. The substring will begin at index &lt;code&gt;$start-at&lt;/code&gt; and ends at index &lt;code&gt;$end-at&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;$string&lt;/code&gt; 提取一个子字符串。子字符串将在索引 &lt;code&gt;$start-at&lt;/code&gt; 并在索引 &lt;code&gt;$end-at&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="c37d5972b4dc90de530c696364f3eb68d358ac2f" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;@media&lt;/code&gt; queries can contain SassScript expressions (including variables, functions, and operators) in place of the feature names and feature values. For example:</source>
          <target state="translated">最后，@ &lt;code&gt;@media&lt;/code&gt; 查询可以包含SassScript表达式（包括变量，函数和运算符）来代替功能名称和功能值。例如：</target>
        </trans-unit>
        <trans-unit id="77bf4af83d4467daf1082e85e7698fae34f15ac5" translate="yes" xml:space="preserve">
          <source>Find an Element in a List</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e64731003e51fd9e74ec0e4878904fe2164211e6" translate="yes" xml:space="preserve">
          <source>Finding the File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f7909e3f2a0430fb0df9ea0777b40daf5bf95c" translate="yes" xml:space="preserve">
          <source>Finding the Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab7b11071cc2e100a0eb40417977bd5453399f6" translate="yes" xml:space="preserve">
          <source>Finds the maximum of several numbers. This function takes any number of arguments.</source>
          <target state="translated">查找多个数字的最大值。这个函数可以接受任何数量的参数。</target>
        </trans-unit>
        <trans-unit id="8f7afccca6862e4f42d2d8243dbed946daf04405" translate="yes" xml:space="preserve">
          <source>Finds the minimum of several numbers. This function takes any number of arguments.</source>
          <target state="translated">求几个数字的最小值。本函数接受任何数量的参数。</target>
        </trans-unit>
        <trans-unit id="b1ad7dec23f44c9e45424cbc973d96b8fc33c7bc" translate="yes" xml:space="preserve">
          <source>First Class Functions</source>
          <target state="translated">第一类功能</target>
        </trans-unit>
        <trans-unit id="f295a02cfc1ac05a365330f0ab2dcd53cb811377" translate="yes" xml:space="preserve">
          <source>First class functions</source>
          <target state="translated">第一类功能</target>
        </trans-unit>
        <trans-unit id="be978bc6e8dd501f72a460c6f52f264057dd35aa" translate="yes" xml:space="preserve">
          <source>Flow Control Rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a9850f40843aae4bd8b5142ed8afe509cc1b041" translate="yes" xml:space="preserve">
          <source>Flow Control Scope</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39f3616d398db57c4ec7d08ca2dd8402d6f6d42" translate="yes" xml:space="preserve">
          <source>Flow control rules like &lt;a href=&quot;at-rules/control/if&quot;&gt;&lt;code&gt;@if&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;at-rules/control/each&quot;&gt;&lt;code&gt;@each&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;at-rules/control/for&quot;&gt;&lt;code&gt;@for&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;at-rules/control/while&quot;&gt;&lt;code&gt;@while&lt;/code&gt;&lt;/a&gt; control whether or how many times styles are emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="943f4ffaa068545fe469fd8a8238c3954e4bd821" translate="yes" xml:space="preserve">
          <source>Fluidly scales one or more properties of &lt;code&gt;$color&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8873ae969e47de6d3bcc40a9120a04bb4e9a6fae" translate="yes" xml:space="preserve">
          <source>Fluidly scales one or more properties of a color. Unlike &lt;a href=&quot;#adjust_color-instance_method&quot;&gt;adjust-color&lt;/a&gt;, which changes a color's properties by fixed amounts, &lt;a href=&quot;#scale_color-instance_method&quot;&gt;scale-color&lt;/a&gt; fluidly changes them based on how high or low they already are. That means that lightening an already-light color with &lt;a href=&quot;#scale_color-instance_method&quot;&gt;scale-color&lt;/a&gt; won't change the lightness much, but lightening a dark color by the same amount will change it more dramatically. This has the benefit of making &lt;code&gt;scale-color($color, ...)&lt;/code&gt; have a similar effect regardless of what &lt;code&gt;$color&lt;/code&gt; is.</source>
          <target state="translated">流体缩放颜色的一种或多种属性。与&lt;a href=&quot;#adjust_color-instance_method&quot;&gt;Adjust-color&lt;/a&gt;（以固定量更改颜色的属性）不同，&lt;a href=&quot;#scale_color-instance_method&quot;&gt;scale-color&lt;/a&gt;会根据颜色的高低来流畅地更改颜色。这意味着用&lt;a href=&quot;#scale_color-instance_method&quot;&gt;标尺颜色&lt;/a&gt;加亮已经很浅的颜色不会显着改变亮度，但是加深相同量的暗色会使亮度更明显地变化。这具有使 &lt;code&gt;scale-color($color, ...)&lt;/code&gt; 具有类似效果的优点，而不管 &lt;code&gt;$color&lt;/code&gt; 是什么。</target>
        </trans-unit>
        <trans-unit id="2c48ff5d6805b89d3c4aaa185134ab64f0b1046f" translate="yes" xml:space="preserve">
          <source>For Rails 3, instead add the following line to the Gemfile:</source>
          <target state="translated">对于 Rails 3,可以在 Gemfile 中添加以下一行。</target>
        </trans-unit>
        <trans-unit id="d643b4193168a4c04a36ca2eb9057752b28d27d0" translate="yes" xml:space="preserve">
          <source>For characters that are allowed to appear in strings, writing the Unicode escape produces exactly the same string as writing the character itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="ac331b881723e49f27ce748fb2dad0be59116802" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;example.scss&lt;/code&gt; contains</source>
          <target state="translated">例如，如果 &lt;code&gt;example.scss&lt;/code&gt; 包含</target>
        </trans-unit>
        <trans-unit id="e17cea7416e1340372d0bdc634160ab4c993db5a" translate="yes" xml:space="preserve">
          <source>For example, if you want to check if a string contains a space, you can just write &lt;code&gt;string.index($string, &quot; &quot;)&lt;/code&gt;. The &lt;a href=&quot;../../modules/string#index&quot;&gt;&lt;code&gt;string.index()&lt;/code&gt; function&lt;/a&gt; returns &lt;code&gt;null&lt;/code&gt; if the string isn&amp;rsquo;t found and a number otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b934d872344c3726e8e6334d14ca3b3a5911d0" translate="yes" xml:space="preserve">
          <source>For example, if you want to check if a string contains a space, you can just write &lt;code&gt;string.index($string, &quot; &quot;)&lt;/code&gt;. The &lt;a href=&quot;../modules/string#index&quot;&gt;&lt;code&gt;string.index()&lt;/code&gt; function&lt;/a&gt; returns &lt;code&gt;null&lt;/code&gt; if the string isn&amp;rsquo;t found and a number otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102264f00b9979f76c33467585e66232512a2c79" translate="yes" xml:space="preserve">
          <source>For example, suppose you want to write a selector that matches the outer selector &lt;em&gt;and&lt;/em&gt; an element selector. You could write a mixin like this one that uses the &lt;a href=&quot;../modules/selector#unify&quot;&gt;&lt;code&gt;selector.unify()&lt;/code&gt; function&lt;/a&gt; to combine &lt;code&gt;&amp;amp;&lt;/code&gt; with a user&amp;rsquo;s selector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d001d78d7e45711489fe12fecf811f07435cabbe" translate="yes" xml:space="preserve">
          <source>For example, the following works fine:</source>
          <target state="translated">例如,下面的工作很好。</target>
        </trans-unit>
        <trans-unit id="86944ea7f56a5ba3ca7e79aea699124a755cc0e5" translate="yes" xml:space="preserve">
          <source>For example, the lightness of a color can be anywhere between &lt;code&gt;0%&lt;/code&gt; and &lt;code&gt;100%&lt;/code&gt;. If &lt;code&gt;scale-color($color, $lightness: 40%)&lt;/code&gt; is called, the resulting color's lightness will be 40% of the way between its original lightness and 100. If &lt;code&gt;scale-color($color, $lightness: -40%)&lt;/code&gt; is called instead, the lightness will be 40% of the way between the original and 0.</source>
          <target state="translated">例如，颜色的明度可以在 &lt;code&gt;0%&lt;/code&gt; 到 &lt;code&gt;100%&lt;/code&gt; 之间。如果调用 &lt;code&gt;scale-color($color, $lightness: 40%)&lt;/code&gt; ，则所得颜色的亮度将是其原始亮度与100之间的40％。如果 &lt;code&gt;scale-color($color, $lightness: -40%)&lt;/code&gt; 相反，称为，亮度将为原图和0之间的40％。</target>
        </trans-unit>
        <trans-unit id="10cad4394049680f152b554cb0f7c06dfe83b1ee" translate="yes" xml:space="preserve">
          <source>For example, you might have &lt;code&gt;_colors.scss&lt;/code&gt;. Then no &lt;code&gt;_colors.css&lt;/code&gt; file would be created, and you can do</source>
          <target state="translated">例如，您可能具有 &lt;code&gt;_colors.scss&lt;/code&gt; 。这样就不会创建 &lt;code&gt;_colors.css&lt;/code&gt; 文件，您可以</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="d152af6f002dbb35b0056bf7f32038a81dbffaa5" translate="yes" xml:space="preserve">
          <source>For historical reasons, Sass also supports &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;-&lt;/code&gt; as a unary operators which take only one value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b35b96c322efa489d8b3dfb175a4f21bf1664e" translate="yes" xml:space="preserve">
          <source>For historical reasons, function names (and all other Sass identifiers) can use hyphens and underscores interchangeably. For example, if you define a function called &lt;code&gt;grid-width&lt;/code&gt;, you can use it as &lt;code&gt;grid_width&lt;/code&gt;, and vice versa.</source>
          <target state="translated">由于历史原因，函数名称（和所有其他Sass标识符）可以互换使用连字符和下划线。例如，如果定义一个名为 &lt;code&gt;grid-width&lt;/code&gt; 的函数，则可以将其用作 &lt;code&gt;grid_width&lt;/code&gt; ，反之亦然。</target>
        </trans-unit>
        <trans-unit id="8f6155aa373f97a674fd5a39376b4cf46715cc48" translate="yes" xml:space="preserve">
          <source>For historical reasons, mixin names (and all other Sass identifiers) can use hyphens and underscores interchangeably. For example, if you define a mixin called &lt;code&gt;add-column&lt;/code&gt;, you can include it as &lt;code&gt;add_column&lt;/code&gt;, and vice versa.</source>
          <target state="translated">由于历史原因，mixin名称（以及所有其他Sass标识符）可以互换使用连字符和下划线。例如，如果定义一个名为 &lt;code&gt;add-column&lt;/code&gt; 的混合，则可以将其作为 &lt;code&gt;add_column&lt;/code&gt; 包含，反之亦然。</target>
        </trans-unit>
        <trans-unit id="e71f7fae1496938578d1bffe25a90b7430454708" translate="yes" xml:space="preserve">
          <source>For historical reasons, variable names (and all other Sass identifiers) can use hyphens and underscores interchangeably. For example, if you define a variable called &lt;code&gt;$main-width&lt;/code&gt;, you can access it as &lt;code&gt;$main_width&lt;/code&gt;, and vice versa.</source>
          <target state="translated">由于历史原因，变量名称（以及所有其他Sass标识符）可以互换使用连字符和下划线。例如，如果定义一个名为 &lt;code&gt;$main-width&lt;/code&gt; 的变量，则可以将其作为 &lt;code&gt;$main_width&lt;/code&gt; 进行访问，反之亦然。</target>
        </trans-unit>
        <trans-unit id="3288ff6e25c070899dd6e9558f26c596640163e4" translate="yes" xml:space="preserve">
          <source>For performance reasons, Dart Sass doesn&amp;rsquo;t allow its precision to be customized. It always supports 10 digits of numeric precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36b5fcbeb3efece896e55ba96ce45fca408340f" translate="yes" xml:space="preserve">
          <source>Fully CSS-compatible</source>
          <target state="translated">完全兼容CSS</target>
        </trans-unit>
        <trans-unit id="52ea1bd7ae433917355467b1a8a1723cd07cf273" translate="yes" xml:space="preserve">
          <source>Function Directives #function_directives</source>
          <target state="translated">功能指令 #function_directives</target>
        </trans-unit>
        <trans-unit id="b796fc717d146d23da79c891e78627d7c0a628ab" translate="yes" xml:space="preserve">
          <source>Function names, like all Sass identifiers, treat hyphens and underscores as identical. This means that &lt;code&gt;scale-color&lt;/code&gt; and &lt;code&gt;scale_color&lt;/code&gt; both refer to the same function. This is a historical holdover from the very early days of Sass, when it &lt;em&gt;only&lt;/em&gt; allowed underscores in identifier names. Once Sass added support for hyphens to match CSS&amp;rsquo;s syntax, the two were made equivalent to make migration easier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="08a2cc74d79c34ef53b7d2638f505edf430f7e85" translate="yes" xml:space="preserve">
          <source>Functions allow you to define complex operations on &lt;a href=&quot;../values&quot;&gt;SassScript values&lt;/a&gt; that you can re-use throughout your stylesheet. They make it easy to abstract out common formulas and behaviors in a readable way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a450aea4f1d0dba913f6993d1a78d2e32cbf697d" translate="yes" xml:space="preserve">
          <source>Functions are defined using the &lt;code&gt;@function&lt;/code&gt; at-rule, which is written &lt;code&gt;@function &amp;lt;name&amp;gt;(&amp;lt;arguments...&amp;gt;) { ... }&lt;/code&gt;. A function&amp;rsquo;s name can be any Sass identifier. It can only contain &lt;a href=&quot;../syntax/structure#universal-statements&quot;&gt;universal statements&lt;/a&gt;, as well as the &lt;a href=&quot;#return&quot;&gt;&lt;code&gt;@return&lt;/code&gt; at-rule&lt;/a&gt; which indicates the value to use as the result of the function call. Functions are called using the normal CSS function syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89776767980e66fad575be716f268d9cd73e55b8" translate="yes" xml:space="preserve">
          <source>Functions are passed JavaScript representations of &lt;a href=&quot;#value-types&quot;&gt;Sass value types&lt;/a&gt;, and must return the same. All functions can return synchronously, but functions passed to the asynchronous &lt;a href=&quot;#render&quot;&gt;&lt;code&gt;render()&lt;/code&gt; function&lt;/a&gt; can also take an additional callback to which they can asynchronously pass the result of the function when it&amp;rsquo;s complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0edb628a9542a14f813bd7de9f8386b56c8a58b5" translate="yes" xml:space="preserve">
          <source>Generates:</source>
          <target state="translated">Generates:</target>
        </trans-unit>
        <trans-unit id="22c2b6e6e7c73e06d286b50bcc91f51da4305652" translate="yes" xml:space="preserve">
          <source>Gets the blue component of a color. Calculated from HSL where necessary via &lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;this algorithm&lt;/a&gt;.</source>
          <target state="translated">获取颜色的蓝色分量。根据需要从HSL计算出&lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;此算法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4b1cdecf554174819ed0a33df5a40ed6d356045c" translate="yes" xml:space="preserve">
          <source>Gets the green component of a color. Calculated from HSL where necessary via &lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;this algorithm&lt;/a&gt;.</source>
          <target state="translated">获取颜色的绿色分量。根据需要从HSL计算出&lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;此算法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="54336be4927001c951acd2e597ce51a92ab12a03" translate="yes" xml:space="preserve">
          <source>Gets the nth item in a list.</source>
          <target state="translated">获取列表中的第N个项目。</target>
        </trans-unit>
        <trans-unit id="1acb7f9b6125cd4f7e7934397bb3ba177b8cc16d" translate="yes" xml:space="preserve">
          <source>Gets the red component of a color. Calculated from HSL where necessary via &lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;this algorithm&lt;/a&gt;.</source>
          <target state="translated">获取颜色的红色分量。根据需要从HSL计算出&lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;此算法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ae4f56ae4da16df74b3d2aeca8b4352281e7be45" translate="yes" xml:space="preserve">
          <source>Global Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97fa0a5d6f5cbf067a98b0bd198984e13706b234" translate="yes" xml:space="preserve">
          <source>Global Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c2bf86c036b846357a6f81787ee7609fba0095" translate="yes" xml:space="preserve">
          <source>Grunt uses the &lt;a href=&quot;https://www.npmjs.com/package/grunt-sass&quot;&gt;&lt;code&gt;grunt-sass&lt;/code&gt; package&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0692565ffd968be828478d2215b722f528da70" translate="yes" xml:space="preserve">
          <source>Gulp uses the &lt;a href=&quot;https://www.npmjs.com/package/gulp-sass&quot;&gt;&lt;code&gt;gulp-sass&lt;/code&gt; package&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d25c6d02710a135f8f721f90c0e1f7f7201f58" translate="yes" xml:space="preserve">
          <source>HTML Heuristics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8acec0a51555612d47a4fbe3cd8ef65da64f7da" translate="yes" xml:space="preserve">
          <source>Hidden Declarations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24cd4dd561003744f6839bba6f0b01af01e9c66" translate="yes" xml:space="preserve">
          <source>Homebrew</source>
          <target state="translated">Homebrew</target>
        </trans-unit>
        <trans-unit id="757559a4b51f1fff47d250a73d4a27c78590e13e" translate="yes" xml:space="preserve">
          <source>How Do I Migrate?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cecc82d72d68f9151cb0901cfe40eeac15bfca6" translate="yes" xml:space="preserve">
          <source>How It Works</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100cb0b9b76cf128bd36c57de623e9519f3f1a9c" translate="yes" xml:space="preserve">
          <source>How it Works</source>
          <target state="translated">它是如何工作的</target>
        </trans-unit>
        <trans-unit id="fa8c7bd845eb56a7623a51ddb2ac3965b3815ea0" translate="yes" xml:space="preserve">
          <source>However, placeholder selectors can be extended, just like classes and ids. The extended selectors will be generated, but the base placeholder selector will not. For example:</source>
          <target state="translated">然而,占位符选择器可以被扩展,就像类和id一样。扩展后的选择器将被生成,但基本的占位符选择器不会被生成。比如说</target>
        </trans-unit>
        <trans-unit id="f8ac34630c8bab65ab8e1c131c73e127e373d4fb" translate="yes" xml:space="preserve">
          <source>However, there are three situations where the &lt;code&gt;/&lt;/code&gt; will be interpreted as division. These cover the vast majority of cases where division is actually used. They are:</source>
          <target state="translated">但是，在三种情况下， &lt;code&gt;/&lt;/code&gt; 将被解释为除法。这些涵盖了绝大多数实际使用除法的情况。他们是：</target>
        </trans-unit>
        <trans-unit id="4b22f00f2bab73d2e075ca8e90f835b4deb9f334" translate="yes" xml:space="preserve">
          <source>IE filters require all colors include the alpha layer, and be in the strict format of #AABBCCDD. You can more easily convert the color using the &lt;a href=&quot;sass/script/functions#ie_hex_str-instance_method&quot;&gt;ie_hex_str&lt;/a&gt; function. For example:</source>
          <target state="translated">IE过滤器要求所有颜色都包括alpha层，并采用#AABBCCDD的严格格式。您可以使用&lt;a href=&quot;sass/script/functions#ie_hex_str-instance_method&quot;&gt;ie_hex_str&lt;/a&gt;函数更轻松地转换颜色。例如：</target>
        </trans-unit>
        <trans-unit id="56eb8a6ed83591fcf51ce5f7b97af432880fdaf7" translate="yes" xml:space="preserve">
          <source>Identical to &lt;a href=&quot;#merge&quot;&gt;&lt;code&gt;map.merge()&lt;/code&gt;&lt;/a&gt;, except that nested map values are &lt;em&gt;also&lt;/em&gt; recursively merged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b168f7972031c19f5a09dc550827fb01cd8400" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$bracketed&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the returned list has square brackets. If it&amp;rsquo;s &lt;code&gt;false&lt;/code&gt;, the returned list has no brackets. If it&amp;rsquo;s &lt;code&gt;auto&lt;/code&gt; (the default), the returned list will be bracketed if &lt;code&gt;$list1&lt;/code&gt; is. Other values aren&amp;rsquo;t allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f847c1d896b27207aaf0142c056fd719f44479b6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$color&lt;/code&gt; and &lt;code&gt;$alpha&lt;/code&gt; are passed, this returns &lt;code&gt;$color&lt;/code&gt; with the given &lt;code&gt;$alpha&lt;/code&gt; channel instead of its original alpha channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9ddd1f280dc2a3de8e258236641a618a9f9a59" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$css&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the function reference may refer to a function defined in your stylesheet or built-in to the host environment. If it's &lt;code&gt;true&lt;/code&gt; it will refer to a plain-CSS function.</source>
          <target state="translated">如果 &lt;code&gt;$css&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; ，则函数引用可能引用样式表中定义的函数或内置于主机环境的函数。如果为 &lt;code&gt;true&lt;/code&gt; ，则将引用纯CSS函数。</target>
        </trans-unit>
        <trans-unit id="3894615469a9baa97643ee79046d29ea0980620c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$keys&lt;/code&gt; are not passed, returns a copy of &lt;code&gt;$map&lt;/code&gt; with the value at &lt;code&gt;$key&lt;/code&gt; set to &lt;code&gt;$value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c3d65dcf3c7fbf470ac410d7b3edf068aae40b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$keys&lt;/code&gt; are passed, follows the &lt;code&gt;$keys&lt;/code&gt; to find the nested map targeted for updating. If any key in &lt;code&gt;$keys&lt;/code&gt; is missing from a map or references a value that is not a map, sets the value at that key to an empty map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98cdcc8fe19161ff4199d406b688824acc8481ef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$keys&lt;/code&gt; is empty, returns a copy of &lt;code&gt;$map&lt;/code&gt; without a value associated with &lt;code&gt;$key&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="206560d982a4c97174d9273c5eb30da0bc4b65fb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$keys&lt;/code&gt; is empty, returns the value in &lt;code&gt;$map&lt;/code&gt; associated with &lt;code&gt;$key&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a7647f7cf0eeab8eace4d3f6d2e9d5e6d2f32d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$keys&lt;/code&gt; is empty, returns whether &lt;code&gt;$map&lt;/code&gt; contains a value associated with &lt;code&gt;$key&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2552e3ae8e385a1d450c124071a5ce7ee08f1896" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$keys&lt;/code&gt; is not empty, follows the &lt;code&gt;$keys&lt;/code&gt; to find the nested map targeted for merging. If any key in &lt;code&gt;$keys&lt;/code&gt; is missing from a map or references a value that is not a map, sets the value at that key to an empty map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3efe977c03b1be0f80c2fcc27b17fe8a6780637" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$keys&lt;/code&gt; is not empty, follows the set of keys including &lt;code&gt;$key&lt;/code&gt; and excluding the last key in &lt;code&gt;$keys&lt;/code&gt;, from left to right, to find the nested map targeted for searching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108eba022e6c38ce80401784ca5a9927ff6dee82" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$keys&lt;/code&gt; is not empty, follows the set of keys including &lt;code&gt;$key&lt;/code&gt; and excluding the last key in &lt;code&gt;$keys&lt;/code&gt;, from left to right, to find the nested map targeted for updating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b2ca8be3cfc461d7aa761dd4a2384f9f8cb382" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$limit&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, returns a random decimal number between 0 and 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05e591f60f4eb8f2b554f0468a33d0aac71a1cd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$limit&lt;/code&gt; is a number greater than or equal to 1, returns a random whole number between 1 and &lt;code&gt;$limit&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55b04cc1c769c40834262f01e4b37806861e4c3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$list&lt;/code&gt; doesn&amp;rsquo;t have a separator, returns &lt;code&gt;space&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daec04afd37121a67f97bcc066d2418dc3ad01dd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$map&lt;/code&gt; doesn&amp;rsquo;t have a value associated with &lt;code&gt;$key&lt;/code&gt;, returns &lt;a href=&quot;../values/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e73160c160fba6546d8e63b954d1d5d99797eb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$module&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this returns the function named &lt;code&gt;$name&lt;/code&gt; without a namespace (including &lt;a href=&quot;../modules#global-functions&quot;&gt;global built-in functions&lt;/a&gt;). Otherwise, &lt;code&gt;$module&lt;/code&gt; must be a string matching the namespace of a &lt;a href=&quot;../at-rules/use&quot;&gt;&lt;code&gt;@use&lt;/code&gt; rule&lt;/a&gt; in the current file, in which case this returns the function in that module named &lt;code&gt;$name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbd433c732757400ed63e3976b8344add3e8cac" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$module&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this returns whether a mixin named &lt;code&gt;$name&lt;/code&gt; without a namespace exists. Otherwise, &lt;code&gt;$module&lt;/code&gt; must be a string matching the namespace of a &lt;a href=&quot;../at-rules/use&quot;&gt;&lt;code&gt;@use&lt;/code&gt; rule&lt;/a&gt; in the current file, in which case this returns whether that module has a mixin named &lt;code&gt;$name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17cf0ef5526fe07e94a0b0e89c382d4b020874a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$module&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this returns whether a variable named &lt;code&gt;$name&lt;/code&gt; without a namespace exists. Otherwise, &lt;code&gt;$module&lt;/code&gt; must be a string matching the namespace of a &lt;a href=&quot;../at-rules/use&quot;&gt;&lt;code&gt;@use&lt;/code&gt; rule&lt;/a&gt; in the current file, in which case this returns whether that module has a variable named &lt;code&gt;$name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7e14b78a4b525f064c4fd175f06677bf6c77b5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$n&lt;/code&gt; is negative, it counts from the end of &lt;code&gt;$list&lt;/code&gt;. Throws an error if there is no element at index &lt;code&gt;$n&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88fdb3ddc6816844ea97c505ee39f512aa21bc9f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$n&lt;/code&gt; is negative, it counts from the end of &lt;code&gt;$list&lt;/code&gt;. Throws an error if there is no existing element at index &lt;code&gt;$n&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6df4299227ffef4914d04421930500ddfc3881" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$red&lt;/code&gt;, &lt;code&gt;$green&lt;/code&gt;, &lt;code&gt;$blue&lt;/code&gt;, and optionally &lt;code&gt;$alpha&lt;/code&gt; are passed, returns a color with the given red, green, blue, and alpha channels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9492adffb1dc16d2e00fed359eabbe5fb42cb941" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$separator&lt;/code&gt; is &lt;code&gt;comma&lt;/code&gt;, the returned list is comma-separated. If it&amp;rsquo;s &lt;code&gt;space&lt;/code&gt;, the returned list is space-separated. If it&amp;rsquo;s &lt;code&gt;auto&lt;/code&gt; (the default), the returned list will use the same separator as &lt;code&gt;$list&lt;/code&gt; (or &lt;code&gt;space&lt;/code&gt; if &lt;code&gt;$list&lt;/code&gt; doesn&amp;rsquo;t have a separator). Other values aren&amp;rsquo;t allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ff26ad2cc24bb93c6b9daf84a32a93f7559366" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$separator&lt;/code&gt; is &lt;code&gt;comma&lt;/code&gt;, the returned list is comma-separted. If it&amp;rsquo;s &lt;code&gt;space&lt;/code&gt;, the returned list is space-separated. If it&amp;rsquo;s &lt;code&gt;auto&lt;/code&gt; (the default), the returned list will use the same separator as &lt;code&gt;$list1&lt;/code&gt; if it has a separator, or else &lt;code&gt;$list2&lt;/code&gt; if it has a separator, or else &lt;code&gt;space&lt;/code&gt;. Other values aren&amp;rsquo;t allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a6c54097708be37b395a3ea11a8054be43496bd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$url&lt;/code&gt; is relative, it&amp;rsquo;s interpreted as relative to the file in which &lt;code&gt;meta.load-css()&lt;/code&gt; is included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a45732ce4d5d5e22515c001e7b7922b25352d0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$value&lt;/code&gt; doesn&amp;rsquo;t appear in &lt;code&gt;$list&lt;/code&gt;, this returns &lt;a href=&quot;../values/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;$value&lt;/code&gt; appears multiple times in &lt;code&gt;$list&lt;/code&gt;, this returns the index of its first appearance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac13b3185fa434be2ce1ec4a008fa5a6fb3b081" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;lists&quot;&gt;list&lt;/a&gt; contains a &lt;code&gt;null&lt;/code&gt;, that &lt;code&gt;null&lt;/code&gt; is omitted from the generated CSS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97fb3cf0ae007f27d4687fbc6671061736bcaaa" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;min()&lt;/code&gt; or &lt;code&gt;max()&lt;/code&gt; function call is valid plain CSS, it will be compiled to a CSS&lt;code&gt;min()&lt;/code&gt; or &lt;code&gt;max()&lt;/code&gt; call. &amp;ldquo;Plain CSS&amp;rdquo; includes nested calls to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/calc&quot;&gt;&lt;code&gt;calc()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/env&quot;&gt;&lt;code&gt;env()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/var&quot;&gt;&lt;code&gt;var()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;min()&lt;/code&gt;, or &lt;code&gt;max()&lt;/code&gt;, as well as &lt;a href=&quot;../interpolation&quot;&gt;interpolation&lt;/a&gt;. As soon as any part of the call contains a SassScript feature like &lt;a href=&quot;../variables&quot;&gt;variables&lt;/a&gt; or &lt;a href=&quot;../at-rules/function&quot;&gt;function calls&lt;/a&gt;, though, it&amp;rsquo;s parsed as a call to Sass&amp;rsquo;s core &lt;code&gt;min()&lt;/code&gt; or &lt;code&gt;max()&lt;/code&gt; function instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9aa0033c810791d73f56e050f23bd7e50fb3e5f" translate="yes" xml:space="preserve">
          <source>If a CSS at-rule is nested within a style rule, the two automatically swap positions so that the at-rule is at the top level of the CSS output and the style rule is within it. This makes it easy to add conditional styling without having to rewrite the style rule&amp;rsquo;s selector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb4f192f2e9b86c24be5717928db3832a2e870c" translate="yes" xml:space="preserve">
          <source>If a function synchronously throws an error, that error is reported to the caller of the function and stylesheet compilation fails. There&amp;rsquo;s currently no way to asynchronously report an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748e82116ded18c907c2b950387f9622d8409346" translate="yes" xml:space="preserve">
          <source>If a key in &lt;code&gt;$keys&lt;/code&gt; doesn&amp;rsquo;t have an associated value in &lt;code&gt;$map&lt;/code&gt;, it&amp;rsquo;s ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6371181e8bdc7f574fb19ab432701dde92263f2" translate="yes" xml:space="preserve">
          <source>If a mixin passes arguments to its content block, that content block &lt;em&gt;must&lt;/em&gt; declare that it accepts those arguments. This means that it&amp;rsquo;s a good idea to only pass arguments by position (rather than by name), and it means that passing more arguments is a breaking change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae290d266c48ff7b3c829ffe5dd144aa119c88a" translate="yes" xml:space="preserve">
          <source>If a number is less than &lt;code&gt;0.0000000001&lt;/code&gt; away from an integer, it&amp;rsquo;s considered to be an integer for the purposes of functions like &lt;a href=&quot;../modules/list#nth&quot;&gt;&lt;code&gt;list.nth()&lt;/code&gt;&lt;/a&gt; that require integer arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a0d8f9745bafd6908fb798de73bdaf73b4e7021" translate="yes" xml:space="preserve">
          <source>If a property value is &lt;code&gt;null&lt;/code&gt;, that property is omitted entirely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79188dc8ef825d1839fdfd07bdefdc025485352" translate="yes" xml:space="preserve">
          <source>If an input file is passed without a corresponding output file, it&amp;rsquo;s compiled to a CSS file named after the input file, but with the extension replaced with &lt;code&gt;.css&lt;/code&gt;. If an input directory is passed without a corresponding output directory, all the Sass files within it are compiled to CSS files in the same directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115e74a7c7caf841eb6c11dbc8dc8d066868f6c3" translate="yes" xml:space="preserve">
          <source>If any selector in &lt;code&gt;$selectors&lt;/code&gt; is a selector list, each complex selector is combined separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1aad1611cff3faf589793d67bdd1e3f0d80eb9" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;$map1&lt;/code&gt; and &lt;code&gt;$map2&lt;/code&gt; have the same key, &lt;code&gt;$map2&lt;/code&gt;&amp;rsquo;s value takes precedence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90351ad3586faa3841ee81cb946199990895fddb" translate="yes" xml:space="preserve">
          <source>If both maps have the same keys, the second map&amp;rsquo;s values are used in the map that gets returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86257f73351ff241799b1f187df46bf4ad1c9fd" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s a printable character other than a newline or a tab, it&amp;rsquo;s included after a &lt;code&gt;\&lt;/code&gt;. For example, &lt;code&gt;\21&lt;/code&gt; returns the unquoted string &lt;code&gt;\!&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d8d395ad7ddbd70ee8d1a11bc1d174ff7bc425" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s a valid identifier character, it&amp;rsquo;s included unescaped in the unquoted string. For example, &lt;code&gt;\1F46D&lt;/code&gt; returns the unquoted string &lt;code&gt;👭&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b0f32c3682520a45114c2e802e85680de65b07" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;$keys&lt;/code&gt; are passed, returns a new map with all the keys and values from both &lt;code&gt;$map1&lt;/code&gt; and &lt;code&gt;$map2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b7ea2dba38d059635fab051890dffefb62fe0a" translate="yes" xml:space="preserve">
          <source>If none of the above conditions are met and the extension is &lt;code&gt;.scss&lt;/code&gt; or &lt;code&gt;.sass&lt;/code&gt;, then the named Sass or SCSS file will be imported. If there is no extension, Sass will try to find a file with that name and the &lt;code&gt;.scss&lt;/code&gt; or &lt;code&gt;.sass&lt;/code&gt; extension and import it.</source>
          <target state="translated">如果没有上述条件满足并且该扩展是 &lt;code&gt;.scss&lt;/code&gt; 或 &lt;code&gt;.sass&lt;/code&gt; ，然后命名萨斯或SCSS文件将被导入。如果没有扩展名，萨斯将尝试找到与该名字和文件 &lt;code&gt;.scss&lt;/code&gt; 或 &lt;code&gt;.sass&lt;/code&gt; 延伸和导入。</target>
        </trans-unit>
        <trans-unit id="36d6ee8c12a358c48367066cdf839ab36700e519" translate="yes" xml:space="preserve">
          <source>If of &lt;code&gt;$index&lt;/code&gt; is higher than the length of &lt;code&gt;$string&lt;/code&gt;, &lt;code&gt;$insert&lt;/code&gt; is added to the end. If &lt;code&gt;$index&lt;/code&gt; is smaller than the negative length of the string, &lt;code&gt;$insert&lt;/code&gt; is added to the beginning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8518b31773029626623f5231300a8c8880878321" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&amp;amp;&lt;/code&gt; expression is used outside any style rules, it returns &lt;code&gt;null&lt;/code&gt;. Since &lt;code&gt;null&lt;/code&gt; is &lt;a href=&quot;../at-rules/control/if#truthiness-and-falsiness&quot;&gt;falsey&lt;/a&gt;, this means you can easily use it to determine whether a mixin is being called in a style rule or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22b022311eeafa131ee2330ff0645aece51e29c8" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--no-source-map&lt;/code&gt; flag is passed, Sass won&amp;rsquo;t generate any source maps. it cannot be passed along with other source map options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c51926875c37c037de1d1e7b734382a8d30468" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--update&lt;/code&gt; flag is passed, Sass will only compile stylesheets whose dependencies have been modified more recently than the corresponding CSS file was generated. It will also print status messages when updating stylesheets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c5b65f55070d97a04b2a362dc1c166f404a286" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;@import&lt;/code&gt; has any media queries.</source>
          <target state="translated">如果 &lt;code&gt;@import&lt;/code&gt; 有任何媒体查询。</target>
        </trans-unit>
        <trans-unit id="749f4d2dcb9d4698cdaaabc65e94578ea987d270" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;file&lt;/code&gt; option and the &lt;a href=&quot;#data&quot;&gt;&lt;code&gt;data&lt;/code&gt; option&lt;/a&gt; are both passed, the &lt;code&gt;file&lt;/code&gt; option is used as the path of the stylesheet for error reporting, but the &lt;code&gt;data&lt;/code&gt; option is used as the contents of the stylesheet. In this case, the &lt;code&gt;file&lt;/code&gt; option&amp;rsquo;s extension is &lt;em&gt;not&lt;/em&gt; used to determine the syntax of the stylesheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66a78121f2578f211a8140fa73ac1bd66163164" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;url()&lt;/code&gt;&amp;rsquo;s argument is a valid unquoted URL, Sass parses it as-is, although &lt;a href=&quot;../interpolation&quot;&gt;interpolation&lt;/a&gt; may also be used to inject SassScript values. If it&amp;rsquo;s not a valid unquoted URL&amp;mdash;for example, if it contains &lt;a href=&quot;../variables&quot;&gt;variables&lt;/a&gt; or &lt;a href=&quot;../at-rules/function&quot;&gt;function calls&lt;/a&gt;&amp;mdash;it&amp;rsquo;s parsed as a normal &lt;a href=&quot;../at-rules/function#plain-css-functions&quot;&gt;plain CSS function call&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af27aa817841c40e0934e3809b663a6e2a6e3425" translate="yes" xml:space="preserve">
          <source>If the file's extension is &lt;code&gt;.css&lt;/code&gt;.</source>
          <target state="translated">如果文件的扩展名为 &lt;code&gt;.css&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="63b062ac18bca224410a58b1187ea6cb960be37e" translate="yes" xml:space="preserve">
          <source>If the filename begins with &lt;code&gt;http://&lt;/code&gt;.</source>
          <target state="translated">如果文件名以 &lt;code&gt;http://&lt;/code&gt; 开头。</target>
        </trans-unit>
        <trans-unit id="d45e0e538899f07f283860f3aa453ddded1fbbb4" translate="yes" xml:space="preserve">
          <source>If the filename is a &lt;code&gt;url()&lt;/code&gt;.</source>
          <target state="translated">如果文件名是 &lt;code&gt;url()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b837513b592c0bc737e08c4c2ce796f54aa897c" translate="yes" xml:space="preserve">
          <source>If the parent selector can't have a suffix applied, Sass will throw an error.</source>
          <target state="translated">如果父选择器不能应用后缀,Sass将抛出一个错误。</target>
        </trans-unit>
        <trans-unit id="4a2939e5df2ddc46efe8142ee331e3fea7b0c284" translate="yes" xml:space="preserve">
          <source>If the same stylesheet is imported more than once, it will be evaluated again each time. If it just defines functions and mixins, this usually isn&amp;rsquo;t a big deal, but if it contains style rules they&amp;rsquo;ll be compiled to CSS more than once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527d01b363583a36d756b580fff35a04ddf9a371" translate="yes" xml:space="preserve">
          <source>If the sequence of bytes begins with the UTF-8 or UTF-16 encoding of U+FEFFBYTEORDERMARK, the corresponding encoding is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1aa2397ab117dc8d49fdbaba40befa887a09ccc" translate="yes" xml:space="preserve">
          <source>If the sequence of bytes begins with the plain ASCII string &lt;code&gt;@charset&lt;/code&gt;, Sass determines the encoding using step 2 of the CSS algorithm for &lt;a href=&quot;https://drafts.csswg.org/css-syntax-3/#input-byte-stream&quot;&gt;determining the fallback encoding&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66525b9022632da819ef52e78923e96037281f8" translate="yes" xml:space="preserve">
          <source>If the stylesheet came from the &lt;a href=&quot;#data&quot;&gt;&lt;code&gt;data&lt;/code&gt; option&lt;/a&gt;, it&amp;rsquo;s the string &lt;code&gt;&quot;stdin&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52eebe5805b7668427ae8ad447928539bba710cc" translate="yes" xml:space="preserve">
          <source>If the stylesheet was loaded from an importer that returned its contents, it&amp;rsquo;s the URL of the &lt;code&gt;@use&lt;/code&gt; or &lt;code&gt;@import&lt;/code&gt; rule that loaded it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b719d894ba398814a9023fa15d61cfac16876d63" translate="yes" xml:space="preserve">
          <source>If the stylesheet was loaded from the filesystem, it&amp;rsquo;s the absolute path of its file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1698a3d0e06423e104c10e9958b92d40b5758697" translate="yes" xml:space="preserve">
          <source>If the two sequences do share some selectors, then those selectors will be merged together and only the differences (if any still exist) will alternate. In this example, both sequences contain the id &lt;code&gt;#admin&lt;/code&gt;, so the resulting selectors will merge those two ids:</source>
          <target state="translated">如果两个序列确实共享某些选择器，则这些选择器将合并在一起，并且只有差异（如果仍然存在）将交替出现。在此示例中，两个序列都包含ID &lt;code&gt;#admin&lt;/code&gt; ，因此生成的选择器将合并这两个ID：</target>
        </trans-unit>
        <trans-unit id="b9a139b35304edaae3e8aa905c71ee85f305af0f" translate="yes" xml:space="preserve">
          <source>If the value is surrounded by parentheses, unless those parentheses are outside a list and the value is inside.</source>
          <target state="translated">如果该值被括号包围,除非这些括号在列表外,而该值在列表内。</target>
        </trans-unit>
        <trans-unit id="994d90dd28d20ad4f20c0f14065886546d705224" translate="yes" xml:space="preserve">
          <source>If the value is used as part of another arithmetic expression.</source>
          <target state="translated">如果该值被用作另一个算术表达式的一部分。</target>
        </trans-unit>
        <trans-unit id="4eb961058bf498d1e67ded992c93f0218dadb05e" translate="yes" xml:space="preserve">
          <source>If the value isn&amp;rsquo;t in the list at all, &lt;code&gt;list.index()&lt;/code&gt; returns &lt;a href=&quot;null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;. Because &lt;code&gt;null&lt;/code&gt; is &lt;a href=&quot;../at-rules/control/if#truthiness-and-falsiness&quot;&gt;falsey&lt;/a&gt;, you can use &lt;code&gt;list.index()&lt;/code&gt; with &lt;a href=&quot;../at-rules/control/if&quot;&gt;&lt;code&gt;@if&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../modules#if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; to check whether a list does or doesn&amp;rsquo;t contain a given value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e43996a95a151623d109cf31022aea712f71951" translate="yes" xml:space="preserve">
          <source>If the value, or any part of it, is stored in a variable or returned by a function.</source>
          <target state="translated">如果该值或其任何部分被存储在一个变量中或由函数返回。</target>
        </trans-unit>
        <trans-unit id="89cbec1265cbf5346f0cd7043c62c079fc14e847" translate="yes" xml:space="preserve">
          <source>If there is no parent selector, the value of &lt;code&gt;&amp;amp;&lt;/code&gt; will be null. This means you can use it in a mixin to detect whether a parent selector exists:</source>
          <target state="translated">如果没有父选择器，则 &lt;code&gt;&amp;amp;&lt;/code&gt; 的值为空。这意味着您可以在mixin中使用它来检测是否存在父选择器：</target>
        </trans-unit>
        <trans-unit id="d23239bffec9fcb868197c2ec471255fff708157" translate="yes" xml:space="preserve">
          <source>If this option is &lt;code&gt;true&lt;/code&gt;, the path is assumed to be the &lt;code&gt;outFile&lt;/code&gt; option with &lt;code&gt;.map&lt;/code&gt; added to the end. If it&amp;rsquo;s &lt;code&gt;true&lt;/code&gt; and the &lt;code&gt;outFile&lt;/code&gt; option isn&amp;rsquo;t passed, it has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379a100087e244b63f4b8ffd8f97d624c1719b5e" translate="yes" xml:space="preserve">
          <source>If this option is a string, it&amp;rsquo;s the path that the source map is expected to be written to, which is used to link to the source map from the generated CSS and to link &lt;em&gt;from&lt;/em&gt; the source map to the Sass source files. Note that if the &lt;code&gt;sourceMap&lt;/code&gt; option is a string and the &lt;a href=&quot;#outfile&quot;&gt;&lt;code&gt;outFile&lt;/code&gt; option&lt;/a&gt; isn&amp;rsquo;t passed, Sass assumes that the CSS will be written to the same directory as the &lt;a href=&quot;#file&quot;&gt;&lt;code&gt;file&lt;/code&gt; option&lt;/a&gt; if it&amp;rsquo;s passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08247385aa5fab6fd33d69fc0659d3ffb834a15f" translate="yes" xml:space="preserve">
          <source>If this returns &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;$number1&lt;/code&gt; and &lt;code&gt;$number2&lt;/code&gt; can safely be &lt;a href=&quot;../operators/numeric&quot;&gt;added&lt;/a&gt;, &lt;a href=&quot;../operators/numeric&quot;&gt;subtracted&lt;/a&gt;, and &lt;a href=&quot;../operators/relational&quot;&gt;compared&lt;/a&gt;. Otherwise, doing so will produce errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc2992b2444144901cadf4d77815584945f2650" translate="yes" xml:space="preserve">
          <source>If you &lt;em&gt;do&lt;/em&gt; write both a &lt;code&gt;@forward&lt;/code&gt; and a &lt;code&gt;@use&lt;/code&gt; for the same module in the same file, it&amp;rsquo;s always a good idea to write the &lt;code&gt;@forward&lt;/code&gt; first. That way, if your users want to &lt;a href=&quot;use#configuration&quot;&gt;configure the forwarded module&lt;/a&gt;, that configuration will be applied to the &lt;code&gt;@forward&lt;/code&gt; before your &lt;code&gt;@use&lt;/code&gt; loads it without any configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7efc1ffcee4617763bb2720c511feb3ac842cb3d" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t ever pass an argument list to the &lt;a href=&quot;../modules/meta#keywords&quot;&gt;&lt;code&gt;meta.keywords()&lt;/code&gt; function&lt;/a&gt;, that argument list won&amp;rsquo;t allow extra keyword arguments. This helps callers of your function make sure they haven&amp;rsquo;t accidentally misspelled any argument names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28c3a38631d06d6e411a46f014e9a56111b4c7d" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t ever pass an argument list to the &lt;a href=&quot;../modules/meta#keywords&quot;&gt;&lt;code&gt;meta.keywords()&lt;/code&gt; function&lt;/a&gt;, that argument list won&amp;rsquo;t allow extra keyword arguments. This helps callers of your mixin make sure they haven&amp;rsquo;t accidentally misspelled any argument names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6eee271d4cf9df36a9f70a173deffdf9b4d740" translate="yes" xml:space="preserve">
          <source>If you have a SCSS or Sass file that you want to import but don't want to compile to a CSS file, you can add an underscore to the beginning of the filename. This will tell Sass not to compile it to a normal CSS file. You can then import these files without using the underscore.</source>
          <target state="translated">如果你有一个想导入的SCSS或Sass文件,但又不想编译成CSS文件,你可以在文件名的开头加一个下划线。这将告诉Sass不要把它编译成一个普通的CSS文件。然后你就可以不使用下划线来导入这些文件了。</target>
        </trans-unit>
        <trans-unit id="363b41473ea109078f9e707dc24a309d29c6c95c" translate="yes" xml:space="preserve">
          <source>If you have a directory with many Sass files, you can also tell Sass to watch the entire directory:</source>
          <target state="translated">如果你的目录中有很多Sass文件,你也可以告诉Sass观察整个目录。</target>
        </trans-unit>
        <trans-unit id="74e285695f5e6fe82b6815026d146423b831b61e" translate="yes" xml:space="preserve">
          <source>If you have a list of lists, you can use &lt;code&gt;@each&lt;/code&gt; to automatically assign variables to each of the values from the inner lists by writing it &lt;code&gt;@each &amp;lt;variable...&amp;gt; in &amp;lt;expression&amp;gt; { ... }&lt;/code&gt;. This is known as &lt;em&gt;destructuring&lt;/em&gt;, since the variables match the structure of the inner lists. Each variable name is assigned to the value at the corresponding position in the list, or &lt;a href=&quot;../../values/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; if the list doesn&amp;rsquo;t have enough values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1af149776a0bd0d929a36efdb88ca749f6ddca9" translate="yes" xml:space="preserve">
          <source>If you need to check if an element is in a list or figure out what index it&amp;rsquo;s at, use the &lt;a href=&quot;../modules/list#index&quot;&gt;&lt;code&gt;list.index($list, $value)&lt;/code&gt; function&lt;/a&gt;. This takes a list and a value to locate in that list, and returns the index of that value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e8d01aad4897e2dc186f6b1928034e53bafd65" translate="yes" xml:space="preserve">
          <source>If you need to set a global variable&amp;rsquo;s value from within a local scope (such as in a mixin), you can use the &lt;code&gt;!global&lt;/code&gt; flag. A variable declaration flagged as &lt;code&gt;!global&lt;/code&gt; will &lt;em&gt;always&lt;/em&gt; assign to the global scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4678c6c32bba34e14ee4b0e39992dca0bba9ca9c" translate="yes" xml:space="preserve">
          <source>If you use &lt;a href=&quot;https://brew.sh&quot;&gt;the Homebrew package manager&lt;/a&gt; for Mac OS X, you can install Dart Sass by running</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b588c1178a1f1ab7d76e587266e2aeed5158f8" translate="yes" xml:space="preserve">
          <source>If you use &lt;a href=&quot;https://chocolatey.org&quot;&gt;the Chocolatey package manager&lt;/a&gt; for Windows, you can install the Sass migrator by running</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0447ab6507a962ebb63c5d2e321a394ffc664f45" translate="yes" xml:space="preserve">
          <source>If you use Node.js, you can also install the Sass migrator using &lt;a href=&quot;https://www.npmjs.com&quot;&gt;npm&lt;/a&gt; by running</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521226ffc85e5201728e26a6b90879c648199f39" translate="yes" xml:space="preserve">
          <source>If you use a &lt;a href=&quot;../at-rules/use#load-paths&quot;&gt;load path&lt;/a&gt; when compiling your stylesheets, make sure to pass that to the migrator using the &lt;a href=&quot;#load-path&quot;&gt;&lt;code&gt;--load-path&lt;/code&gt; option&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c599191a7710edf0b08d3e7b545ee814898e053e" translate="yes" xml:space="preserve">
          <source>If you use normal classes for this, you end up creating a lot of extra CSS when the stylesheets are generated, and run the risk of colliding with other classes that are being used in the HTML. That's why Sass supports &quot;placeholder selectors&quot; (for example, &lt;code&gt;%foo&lt;/code&gt;).</source>
          <target state="translated">如果为此使用常规类，则最终在生成样式表时会创建大量额外的CSS，并冒与HTML中使用的其他类冲突的风险。这就是Sass支持&amp;ldquo;占位符选择器&amp;rdquo;（例如 &lt;code&gt;%foo&lt;/code&gt; ）的原因。</target>
        </trans-unit>
        <trans-unit id="f42977a6261aa8261fea3cbc9e8be6484b7f093d" translate="yes" xml:space="preserve">
          <source>If you want to be flexible in what information you pass to a content block, consider passing it a &lt;a href=&quot;../values/maps&quot;&gt;map&lt;/a&gt; that contains information it may need!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8181a6b0024bec2d3f9c1f30cae8ed7d9607ac8" translate="yes" xml:space="preserve">
          <source>If you want to do more with your nested style rules than just combine them in order with the descendant combinator (that is, a plain space) separating them, Sass has your back. See the &lt;a href=&quot;style-rules/parent-selector&quot;&gt;parent selector documentation&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab913bbcb20df33affdc9f3077c093c9873b328d" translate="yes" xml:space="preserve">
          <source>If you want to force &lt;code&gt;/&lt;/code&gt; to be used as a separator, you can write it as &lt;code&gt;#{&amp;lt;expression&amp;gt;} / #{&amp;lt;expression&amp;gt;}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0366407ee47b88dfc4c5ab1d370300276a6da0b5" translate="yes" xml:space="preserve">
          <source>If you want to look up a built-in Sass function, look no further than &lt;a href=&quot;modules&quot;&gt;the built-in module reference&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893d1897b527f40fe421272d8c49b4e859df8741" translate="yes" xml:space="preserve">
          <source>If you want to make a member private to an entire &lt;em&gt;package&lt;/em&gt; rather than just a single module, just don&amp;rsquo;t &lt;a href=&quot;forward&quot;&gt;forward its module&lt;/a&gt; from any of your package&amp;rsquo;s entrypoints (the stylesheets you tell your users to load to use your package). You can even &lt;a href=&quot;forward#controlling-visibility&quot;&gt;hide that member&lt;/a&gt; while forwarding the rest of its module!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1716800aeaf149f22debed68ce91b7091237cb87" translate="yes" xml:space="preserve">
          <source>If you want to specify which directives or rules to include, rather than listing which ones should be excluded, you can use &lt;code&gt;with&lt;/code&gt; instead of &lt;code&gt;without&lt;/code&gt;. For example, &lt;code&gt;@at-root (with: rule)&lt;/code&gt; will move outside of all directives, but will preserve any CSS rules.</source>
          <target state="translated">如果你想指定的指令或规则包括，而不是列出哪些应该被排除在外，你可以用 &lt;code&gt;with&lt;/code&gt; 代替 &lt;code&gt;without&lt;/code&gt; 。例如， &lt;code&gt;@at-root (with: rule)&lt;/code&gt; 将移出所有指令，但会保留所有CSS规则。</target>
        </trans-unit>
        <trans-unit id="ff22fba41840c1021d41c8a69cb72dc331a622da" translate="yes" xml:space="preserve">
          <source>If you want to use variables along with a plain CSS &lt;code&gt;/&lt;/code&gt;, you can use &lt;code&gt;#{}&lt;/code&gt; to insert them. For example:</source>
          <target state="translated">如果要将变量与纯CSS &lt;code&gt;/&lt;/code&gt; 一起使用，则可以使用 &lt;code&gt;#{}&lt;/code&gt; 插入它们。例如：</target>
        </trans-unit>
        <trans-unit id="79f336e640a0c30f3c0a644b870e12e27cfea0f9" translate="yes" xml:space="preserve">
          <source>If you write an &lt;code&gt;_index.scss&lt;/code&gt; or &lt;code&gt;_index.sass&lt;/code&gt; in a folder, the index file will be loaded automatically when you load the URL for the folder itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b60d692c6b470d7eae65cc5f35d1489f7087cdb" translate="yes" xml:space="preserve">
          <source>If you write an &lt;code&gt;_index.scss&lt;/code&gt; or &lt;code&gt;_index.sass&lt;/code&gt; in a folder, when the folder itself is imported that file will be loaded in its place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4322b7df9f2e263058aa61354534a8426456135e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re calling Sass from JavaScript, you may want the &lt;a href=&quot;https://github.com/sass/node-sass#usage&quot;&gt;JS API documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b4668b07e65ffcba1ef188746f72ba4157eb71" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re looking for an introduction to Sass, check out &lt;a href=&quot;https://sass-lang.com/guide&quot;&gt;the tutorial&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6a4114ecf4dab55eb47e0014930529039b7887" translate="yes" xml:space="preserve">
          <source>If you're using Windows, you may need to &lt;a href=&quot;http://rubyinstaller.org/download.html&quot;&gt;install Ruby&lt;/a&gt; first.</source>
          <target state="translated">如果您使用的是Windows，则可能需要先&lt;a href=&quot;http://rubyinstaller.org/download.html&quot;&gt;安装Ruby&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e4f4cae7f70380df45bdaf3b43f61eb02a23fd2" translate="yes" xml:space="preserve">
          <source>If your arithmetic gives you the wrong unit, you probably need to check your math. You may be leaving off units for a quantity that should have them! Staying unit-clean allows Sass to give you helpful errors when something isn&amp;rsquo;t right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70af22099196223b8485c95684bbf8824a9afa2b" translate="yes" xml:space="preserve">
          <source>Immutability</source>
          <target state="translated">Immutability</target>
        </trans-unit>
        <trans-unit id="88f34319d35c279b177f92177127b7a04a49031c" translate="yes" xml:space="preserve">
          <source>Import and Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887b6d3dfc469e331d266546b73388ad965fe749" translate="yes" xml:space="preserve">
          <source>Import-Only Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff01f230cf03dcf75123616c174eab32b2404ec" translate="yes" xml:space="preserve">
          <source>Importers must return one of the following types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49c6cf03bb51dc20c78959ce3252491044cf43a" translate="yes" xml:space="preserve">
          <source>Importing CSS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc0582141255fd8aa4ece477df030d7eecd006a" translate="yes" xml:space="preserve">
          <source>Importing a Module-System File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9d5c1731ae1bb1ca2e3d232476c30297e5c91c" translate="yes" xml:space="preserve">
          <source>Imports are resolved by trying, in order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4e095160ccab28b9fff7562e4de52c16d87881" translate="yes" xml:space="preserve">
          <source>Imports are usually written at the top level of a stylesheet, but they don&amp;rsquo;t have to be. They can nested within &lt;a href=&quot;../style-rules&quot;&gt;style rules&lt;/a&gt; or &lt;a href=&quot;css&quot;&gt;plain CSS at-rules&lt;/a&gt; as well. The imported CSS is nested in that context, which makes nested imports useful for scoping a chunk of CSS to a particular element or media query. Note that top-level &lt;a href=&quot;mixin&quot;&gt;mixins&lt;/a&gt;, &lt;a href=&quot;function&quot;&gt;functions&lt;/a&gt;, and &lt;a href=&quot;../variables&quot;&gt;variables&lt;/a&gt; defined in the nested import are still defined globally, though.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0c5a2945555a819952e103e567b6c9b3386836" translate="yes" xml:space="preserve">
          <source>Imports may contain &lt;code&gt;#{}&lt;/code&gt; interpolation, but only with certain restrictions. It's not possible to dynamically import a Sass file based on a variable; interpolation is only for CSS imports. As such, it only works with &lt;code&gt;url()&lt;/code&gt; imports. For example:</source>
          <target state="translated">导入可能包含 &lt;code&gt;#{}&lt;/code&gt; 插值，但只有某些限制。无法基于变量动态导入Sass文件。插值仅适用于CSS导入。因此，它仅适用于 &lt;code&gt;url()&lt;/code&gt; 导入。例如：</target>
        </trans-unit>
        <trans-unit id="dedb75fc8003973c5e3e3bf956e2cdc7da942863" translate="yes" xml:space="preserve">
          <source>Imports that have media queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d893e836210d609e2c877229060cebb6a0178b7" translate="yes" xml:space="preserve">
          <source>Imports where the URL begins &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44bd4370fd3e4e144a95cc5848f9eee20e9f478" translate="yes" xml:space="preserve">
          <source>Imports where the URL ends with &lt;code&gt;.css&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396ca39745df41a5327073392399280a96ce0819" translate="yes" xml:space="preserve">
          <source>Imports where the URL is written as a &lt;code&gt;url()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07bd91393d772cc5559120bc2a5727ef6308bc2b" translate="yes" xml:space="preserve">
          <source>Imports will always be resolved relative to the current file first, though. Load paths will only be used if no relative file exists that matches the import. This ensures that you can&amp;rsquo;t accidentally mess up your relative imports when you add a new library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf6e336170540c021e4a5fdcbf68fa20544b5ce" translate="yes" xml:space="preserve">
          <source>In SCSS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668fabb5f2e539c4ec6eac12ce4331dbdabba7d7" translate="yes" xml:space="preserve">
          <source>In SCSS, statements are separated by semicolons (which are optional if the statement uses a block). In the indented syntax, they&amp;rsquo;re just separated by newlines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090c4b9b045948c7964258683640bd0cface0e1d" translate="yes" xml:space="preserve">
          <source>In Sass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f5a2447846acd277f06591fc0ea94597ca4c8af" translate="yes" xml:space="preserve">
          <source>In Sass as in CSS, property declarations define how elements that match a selector are styled. But Sass adds extra features to make them easier to write and to automate. First and foremost, a declaration's value can be any &lt;a href=&quot;../syntax/structure#expressions&quot;&gt;SassScript expression&lt;/a&gt;, which will be evaluated and included in the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18108d15fd5782fa7b066b0a8e81203e648532f3" translate="yes" xml:space="preserve">
          <source>In Sass, every &lt;a href=&quot;../values/maps&quot;&gt;map&lt;/a&gt; counts as a list that contains a two-element list for each key/value pair. For example, &lt;code&gt;(1: 2, 3: 4)&lt;/code&gt; counts as &lt;code&gt;(1 2, 3 4)&lt;/code&gt;. So all these functions work for maps as well!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea44e5e72ef95bdaff094a107f501ed1471add4" translate="yes" xml:space="preserve">
          <source>In SassScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a769708c9963aedd4a1e0dd9c5c5fb77e092b32" translate="yes" xml:space="preserve">
          <source>In addition to containing simple values, lists can contain other lists. For example, &lt;code&gt;1px 2px, 5px 6px&lt;/code&gt; is a two-item list containing the list &lt;code&gt;1px 2px&lt;/code&gt; and the list &lt;code&gt;5px 6px&lt;/code&gt;. If the inner lists have the same separator as the outer list, you'll need to use parentheses to make it clear where the inner lists start and stop. For example, &lt;code&gt;(1px 2px) (5px 6px)&lt;/code&gt; is also a two-item list containing the list &lt;code&gt;1px 2px&lt;/code&gt; and the list &lt;code&gt;5px 6px&lt;/code&gt;. The difference is that the outer list is space-separated, where before it was comma-separated.</source>
          <target state="translated">列表除了包含简单值外，还可以包含其他列表。例如， &lt;code&gt;1px 2px, 5px 6px&lt;/code&gt; 是一个包含列表 &lt;code&gt;1px 2px&lt;/code&gt; 和列表 &lt;code&gt;5px 6px&lt;/code&gt; 的两个项目列表。如果内部列表与外部列表具有相同的分隔符，则需要使用括号将内部列表的开始和停止位置明确。例如， &lt;code&gt;(1px 2px) (5px 6px)&lt;/code&gt; 也是一个包含列表 &lt;code&gt;1px 2px&lt;/code&gt; 和列表 &lt;code&gt;5px 6px&lt;/code&gt; 的两个项目列表。区别在于外部列表是用空格隔开的，在此之前是逗号隔开的。</target>
        </trans-unit>
        <trans-unit id="e975026b38b0cea504aad1cba6833187b150d201" translate="yes" xml:space="preserve">
          <source>In addition to importing &lt;code&gt;.sass&lt;/code&gt; and &lt;code&gt;.scss&lt;/code&gt; files, Sass can import plain old &lt;code&gt;.css&lt;/code&gt; files. The only rule is that the import &lt;em&gt;must not&lt;/em&gt; explicitly include the &lt;code&gt;.css&lt;/code&gt; extension, because that&amp;rsquo;s used to indicate a &lt;a href=&quot;#plain-css-imports&quot;&gt;plain CSS &lt;code&gt;@import&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f1852fc6829309027731d92be1b322c2267f39" translate="yes" xml:space="preserve">
          <source>In addition to loading &lt;code&gt;.sass&lt;/code&gt; and &lt;code&gt;.scss&lt;/code&gt; files, Sass can load plain old &lt;code&gt;.css&lt;/code&gt; files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44bb81c691794196be55a192d39582ca39d5ff70" translate="yes" xml:space="preserve">
          <source>In addition to taking arguments, a mixin can take an entire block of styles, known as a &lt;em&gt;content block&lt;/em&gt;. A mixin can declare that it takes a content block by including the &lt;code&gt;@content&lt;/code&gt; at-rule in its body. The content block is passed in using curly braces like any other block in Sass, and it&amp;rsquo;s injected in place of the &lt;code&gt;@content&lt;/code&gt; rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6722705bfb98778c6a15f0f25eed98de19b1d932" translate="yes" xml:space="preserve">
          <source>In addition to the names of at-rules, there are two special values that can be used in queries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b2524ea62316a5a90c10f8618485a94cc47ae0" translate="yes" xml:space="preserve">
          <source>In addition to the plain CSS property syntax, Sass supports a small set of extensions called SassScript. SassScript allows properties to use variables, arithmetic, and extra functions. SassScript can be used in any property value.</source>
          <target state="translated">除了普通的CSS属性语法之外,Sass还支持一组名为SassScript的扩展。SassScript允许属性使用变量、算术和额外的函数。SassScript可以在任何属性值中使用。</target>
        </trans-unit>
        <trans-unit id="32c20c351fb22d2c85d0ff8bc3e60bed463f60fe" translate="yes" xml:space="preserve">
          <source>In addition to user-defined function, Sass provides a substantial &lt;a href=&quot;../modules&quot;&gt;core library&lt;/a&gt; of built-in functions that are always available to use. Sass implementations also make it possible to define &lt;a href=&quot;../js-api#functions&quot;&gt;custom functions&lt;/a&gt; in the host language. And of course, you can always call &lt;a href=&quot;#plain-css-functions&quot;&gt;plain CSS functions&lt;/a&gt; (even ones with &lt;a href=&quot;../syntax/special-functions&quot;&gt;weird syntax&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d2abb4bb0796d88ad72e0a0dab56d277868fc4" translate="yes" xml:space="preserve">
          <source>In compressed output mode, Sass will output the smallest CSS representation of a color. For example, &lt;code&gt;#FF0000&lt;/code&gt; will output as &lt;code&gt;red&lt;/code&gt; in compressed mode, but &lt;code&gt;blanchedalmond&lt;/code&gt; will output as &lt;code&gt;#FFEBCD&lt;/code&gt;.</source>
          <target state="translated">在压缩输出模式下，Sass将输出颜色的最小CSS表示。例如， &lt;code&gt;#FF0000&lt;/code&gt; 在压缩模式下将输出为 &lt;code&gt;red&lt;/code&gt; ，而 &lt;code&gt;blanchedalmond&lt;/code&gt; 将输出为 &lt;code&gt;#FFEBCD&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74dc3020e7b1fd50d9d2201e0aff28fcfb86aef4" translate="yes" xml:space="preserve">
          <source>In effect, every element with class &lt;code&gt;.seriousError&lt;/code&gt; also has class &lt;code&gt;.error&lt;/code&gt;&lt;em&gt;and&lt;/em&gt; class &lt;code&gt;.attention&lt;/code&gt;. Thus, the styles defined later in the document take precedence: &lt;code&gt;.seriousError&lt;/code&gt; has background color &lt;code&gt;#ff0&lt;/code&gt; rather than &lt;code&gt;#fdd&lt;/code&gt;, since &lt;code&gt;.attention&lt;/code&gt; is defined later than &lt;code&gt;.error&lt;/code&gt;.</source>
          <target state="translated">实际上，每个具有 &lt;code&gt;.seriousError&lt;/code&gt; 类的元素也具有 &lt;code&gt;.error&lt;/code&gt; 类&lt;em&gt;和&lt;/em&gt; &lt;code&gt;.attention&lt;/code&gt; 类。因此，本文稍后定义的样式优先： &lt;code&gt;.seriousError&lt;/code&gt; 具有背景颜色 &lt;code&gt;#ff0&lt;/code&gt; 而不是 &lt;code&gt;#fdd&lt;/code&gt; ，因为 &lt;code&gt;.attention&lt;/code&gt; 的定义晚于 &lt;code&gt;.error&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3c25f20ab211cfe1133b0da5ad1478c38bbd0e5" translate="yes" xml:space="preserve">
          <source>In fact, you can to chain as many &lt;code&gt;@else if&lt;/code&gt;s as you want after an &lt;code&gt;@if&lt;/code&gt;. The first block in the chain whose expression returns &lt;code&gt;true&lt;/code&gt; will be evaluated, and no others. If there&amp;rsquo;s a plain &lt;code&gt;@else&lt;/code&gt; at the end of the chain, its block will be evaluated if every other block fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36dd5c8959685d740a3ecf0e6042437edf3b6d1c" translate="yes" xml:space="preserve">
          <source>In general, any time you&amp;rsquo;d write curly braces in CSS or SCSS, you can just indent one level deeper in the indented syntax. And any time a line ends, that counts as a semicolon. There are also a few additional differences in the indented syntax that are noted throughout the reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1d7f30622558a7625d7b42bb56287e90b797e3" translate="yes" xml:space="preserve">
          <source>In most cases, interpolation injects the exact same text that would be used if the expression were used as a &lt;a href=&quot;style-rules/declarations&quot;&gt;property value&lt;/a&gt;. But there is one exception: the quotation marks around quoted strings are removed (even if those quoted strings are in lists). This makes it possible to write quoted strings that contain syntax that&amp;rsquo;s not allowed in SassScript (like selectors) and interpolate them into style rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ce62c031cfb4e1c6ca70200cab07978c001f66" translate="yes" xml:space="preserve">
          <source>In older versions of LibSass and Ruby Sass, the &lt;a href=&quot;../modules/meta#call&quot;&gt;&lt;code&gt;call()&lt;/code&gt; function&lt;/a&gt; took a string representing a function&amp;rsquo;s name. This was changed to take a function value instead in preparation for a new module system where functions are no longer global and so a given name may not always refer to the same function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473b7d78c7182de6cc4c70d30d3564f0fac25743" translate="yes" xml:space="preserve">
          <source>In older versions of LibSass and Ruby Sass, the &lt;a href=&quot;meta#call&quot;&gt;&lt;code&gt;call()&lt;/code&gt; function&lt;/a&gt; took a string representing a function&amp;rsquo;s name. This was changed to take a function value instead in preparation for a new module system where functions are no longer global and so a given name may not always refer to the same function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d62675a3fe8206b1d7bc12df3249332cb10a70" translate="yes" xml:space="preserve">
          <source>In order to keep the definition of &lt;code&gt;@extend&lt;/code&gt; straightforward and understandable, and to keep the implementation clean and efficient, that behavior is now deprecated and will be removed from future versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39d5dbbea3237774e8906bcd2a77bda5c487ab56" translate="yes" xml:space="preserve">
          <source>In order to support &lt;a href=&quot;#functions&quot;&gt;custom functions&lt;/a&gt;, Sass provides access to JavaScript wrappers for its various &lt;a href=&quot;values&quot;&gt;value types&lt;/a&gt;. These are all provided under the &lt;code&gt;types&lt;/code&gt; namespace in the main Sass module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e2e43d074611eefcb5ea3e0a1aec8d28a6bf50" translate="yes" xml:space="preserve">
          <source>In other words, replaces all instances of &lt;code&gt;$extendee&lt;/code&gt; in &lt;code&gt;$selector&lt;/code&gt; with &lt;code&gt;$extendee, $extender&lt;/code&gt;. If &lt;code&gt;$selector&lt;/code&gt; doesn&amp;rsquo;t contain &lt;code&gt;$extendee&lt;/code&gt;, returns it as-is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc86b493a76b8c7fafb6bff394d1b35cb06f1859" translate="yes" xml:space="preserve">
          <source>In practice, the actual arguments to &lt;code&gt;map.merge($map1, $keys..., $map2)&lt;/code&gt; are passed as &lt;code&gt;map.set($map1, $args...)&lt;/code&gt;. They are described here as &lt;code&gt;$map1,
$keys..., $map2&lt;/code&gt; for explanation purposes only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11bad43174c930cf27d706ed79ff29b2642c3b19" translate="yes" xml:space="preserve">
          <source>In practice, the actual arguments to &lt;code&gt;map.set($map, $keys..., $key, $value)&lt;/code&gt; are passed as &lt;code&gt;map.set($map, $args...)&lt;/code&gt;. They are described here as &lt;code&gt;$map,
$keys..., $key, $value&lt;/code&gt; for explanation purposes only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c09caa4cf59eecc46ded665539c592c67c9267" translate="yes" xml:space="preserve">
          <source>Including a Mixin: &lt;code&gt;@include&lt;/code&gt; #including_a_mixin</source>
          <target state="translated">包括一个混合： &lt;code&gt;@include&lt;/code&gt; #include_a_mixin</target>
        </trans-unit>
        <trans-unit id="ad4a156e32f3b8593d3516c7d9b762dbc0d53ed2" translate="yes" xml:space="preserve">
          <source>Increases or decreases &lt;code&gt;$color&lt;/code&gt;&amp;rsquo;s hue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f6d67178108f9a64103f0e323cf4c001443205" translate="yes" xml:space="preserve">
          <source>Increases or decreases one or more properties of &lt;code&gt;$color&lt;/code&gt; by fixed amounts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f495c6c06231ec9a12564cb05951839bbfb2f31" translate="yes" xml:space="preserve">
          <source>Increases or decreases one or more properties of a color. This can change the red, green, blue, hue, saturation, value, and alpha properties. The properties are specified as keyword arguments, and are added to or subtracted from the color's current value for that property.</source>
          <target state="translated">增加或减少颜色的一个或多个属性。这可以改变红、绿、蓝、色调、饱和度、值和 alpha 属性。属性是以关键字参数指定的,并从颜色的该属性的当前值中增加或减去。</target>
        </trans-unit>
        <trans-unit id="76b133dc20eec01c79cb6f4c19a22e0601fea77d" translate="yes" xml:space="preserve">
          <source>Indented Mixin Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689798b439171de48f4b264e33b15967a7b6976a" translate="yes" xml:space="preserve">
          <source>Indented syntax comments that start with &lt;code&gt;/*&lt;/code&gt; work with indentation the same way, except that they are compiled to CSS. Because the extend of the comment is based on indentation, the closing &lt;code&gt;*/&lt;/code&gt; is optional. Also like SCSS, &lt;code&gt;/*&lt;/code&gt; comments can contain &lt;a href=&quot;../interpolation&quot;&gt;interpolation&lt;/a&gt; and can start with &lt;code&gt;/*!&lt;/code&gt; to avoid being stripped in compressed mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68524c152d272c2a7eb7416e0af443e9ad19ca2a" translate="yes" xml:space="preserve">
          <source>Index Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f642ee196088372ea886186c6c617515599afd3f" translate="yes" xml:space="preserve">
          <source>Indexes</source>
          <target state="translated">Indexes</target>
        </trans-unit>
        <trans-unit id="9ad07197ed1a07030cf30840bd00381ac51f4ad4" translate="yes" xml:space="preserve">
          <source>Individual values also count as lists. All these functions treat &lt;code&gt;1px&lt;/code&gt; as a list that contains the value &lt;code&gt;1px&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b568d47f2e244743b1fd7472db836ef9769c21f8" translate="yes" xml:space="preserve">
          <source>Input</source>
          <target state="translated">Input</target>
        </trans-unit>
        <trans-unit id="12fad328720dc35c45a4c235f765a9f146b3cbeb" translate="yes" xml:space="preserve">
          <source>Input Encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9577c15a328d9dece0ed4eff29cd79ab3bd98953" translate="yes" xml:space="preserve">
          <source>Input and Output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4adab86912f57657f80ae9c741aad0a290c16cc" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;$insert&lt;/code&gt; into &lt;code&gt;$string&lt;/code&gt; at &lt;code&gt;$index&lt;/code&gt;.</source>
          <target state="translated">插入 &lt;code&gt;$insert&lt;/code&gt; 到 &lt;code&gt;$string&lt;/code&gt; 在 &lt;code&gt;$index&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="b7b2000eeb70ecf9fe37e0cd586b7a066d7de1b5" translate="yes" xml:space="preserve">
          <source>Instead of setting values one-by-one, you can also merge two existing maps using [&lt;code&gt;map.merge($map1, $map2)&lt;/code&gt;][].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7881cac6e64abca5eafd172df6eb31fe0b84c88" translate="yes" xml:space="preserve">
          <source>Integrations</source>
          <target state="translated">Integrations</target>
        </trans-unit>
        <trans-unit id="a61e1bb5fa9192131b395c208ac4f747981c7ea5" translate="yes" xml:space="preserve">
          <source>Interactive Shell</source>
          <target state="translated">交互式外壳</target>
        </trans-unit>
        <trans-unit id="6a9858c9bf3149456595f98943cf88e41039822e" translate="yes" xml:space="preserve">
          <source>Interpolation</source>
          <target state="translated">Interpolation</target>
        </trans-unit>
        <trans-unit id="7381a830115f6768d9812b6bd6f37fdc7851e184" translate="yes" xml:space="preserve">
          <source>Interpolation can be used almost anywhere in a Sass stylesheet to embed the result of a &lt;a href=&quot;syntax/structure#expressions&quot;&gt;SassScript expression&lt;/a&gt; into a chunk of CSS. Just wrap an expression in &lt;code&gt;#{}&lt;/code&gt; in any of the following places:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c1e4ffce261066ea51a0d5ad639b849a4404a0" translate="yes" xml:space="preserve">
          <source>Interpolation can be used in SassScript to inject SassScript into &lt;a href=&quot;values/strings#unquoted&quot;&gt;unquoted strings&lt;/a&gt;. This is particularly useful when dynamically generating names (for example for animations), or when using &lt;a href=&quot;operators/numeric#slash-separated-values&quot;&gt;slash-separated values&lt;/a&gt;. Note that interpolation in SassScript always returns an unquoted string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7a7488bba1a6b790761b3e1fa456508d1d85e4" translate="yes" xml:space="preserve">
          <source>Interpolation is useful for injecting values into strings, but other than that it&amp;rsquo;s rarely necessary in SassScript expressions. You definitely &lt;em&gt;don&amp;rsquo;t&lt;/em&gt; need it to just use a variable in a property value. Instead of writing &lt;code&gt;color: #{$accent}&lt;/code&gt;, you can just write &lt;code&gt;color: $accent&lt;/code&gt;!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d23777af55b7a3a1877a87c33f7f7083e78cba" translate="yes" xml:space="preserve">
          <source>Interpolation: &lt;code&gt;#{}&lt;/code&gt;</source>
          <target state="translated">插值： &lt;code&gt;#{}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d107038da3b886d8f6f2ec33a6f695345afe84e" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;$function&lt;/code&gt; with &lt;code&gt;$args&lt;/code&gt; and returns the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc4d290bfef52d73ec2d38ab787070c998fa292" translate="yes" xml:space="preserve">
          <source>Is compiled to:</source>
          <target state="translated">是编制为:</target>
        </trans-unit>
        <trans-unit id="c6864ef27652318803bd7aa8c29d26611d246377" translate="yes" xml:space="preserve">
          <source>It ensures that complex selectors are interleaved so that they work no matter which order the HTML elements are nested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a23df9ac4db72370b19df5c3611cfc4c62603f" translate="yes" xml:space="preserve">
          <source>It intelligently handles &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors#Combinators&quot;&gt;combinators&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Universal_selectors&quot;&gt;universal selectors&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:not&quot;&gt;pseudo-classes that contain selectors&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2991943482060e6e5857d308787bb961af276f" translate="yes" xml:space="preserve">
          <source>It is possible to define your own functions in sass and use them in any value or script context. For example:</source>
          <target state="translated">可以在sass中定义自己的函数,并在任何值或脚本上下文中使用它们。比如说</target>
        </trans-unit>
        <trans-unit id="d816ac5e5874c3d65c0a9974afc517491f364041" translate="yes" xml:space="preserve">
          <source>It is possible to pass a block of styles to the mixin for placement within the styles included by the mixin. The styles will appear at the location of any &lt;code&gt;@content&lt;/code&gt; directives found within the mixin. This makes it possible to define abstractions relating to the construction of selectors and directives.</source>
          <target state="translated">可以将样式块传递给mixin，以放置在mixin包含的样式中。样式将出现在mixin 中任何 &lt;code&gt;@content&lt;/code&gt; 指令的位置。这样就可以定义与选择器和指令的构造有关的抽象。</target>
        </trans-unit>
        <trans-unit id="8eefbbb01c8f85c4c989d2a04b258535745057b9" translate="yes" xml:space="preserve">
          <source>It is recommended that you prefix your functions to avoid naming conflicts and so that readers of your stylesheets know they are not part of Sass or CSS. For example, if you work for ACME Corp, you might have named the function above &lt;code&gt;-acme-grid-width&lt;/code&gt;.</source>
          <target state="translated">建议为函数添加前缀，以避免命名冲突，并使样式表的读者知道它们不属于Sass或CSS。例如，如果您为ACME Corp工作，则可能已在 &lt;code&gt;-acme-grid-width&lt;/code&gt; 上方命名该函数。</target>
        </trans-unit>
        <trans-unit id="9f5ac84cbd65a9cf0ce4313049b2161c9bf8e600" translate="yes" xml:space="preserve">
          <source>It knows when one selector matches everything another does, and can combine them together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9d79a34bffa0ef9d6d5be9c9d45ab0b4b4b43f" translate="yes" xml:space="preserve">
          <source>It never generates selectors like &lt;code&gt;#main#footer&lt;/code&gt; that can&amp;rsquo;t possibly match any elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2339171c75a7800cb34efdbe056d830610a86a9" translate="yes" xml:space="preserve">
          <source>It trims redundant selectors as much as possible, while still ensuring that the specificity is greater than or equal to that of the extender.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c18ee940b9912a744b66cfbad360aa2f84766c" translate="yes" xml:space="preserve">
          <source>It wouldn&amp;rsquo;t be any fun to write out absolute URLs for every stylesheet you import, so Sass&amp;rsquo;s algorithm for finding a file to import makes it a little easier. For starters, you don&amp;rsquo;t have to explicitly write out the extension of the file you want to import; &lt;code&gt;@import &quot;variables&quot;&lt;/code&gt; will automatically load &lt;code&gt;variables.scss&lt;/code&gt;, &lt;code&gt;variables.sass&lt;/code&gt;, or &lt;code&gt;variables.css&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2d21911040cf50f124e473437b7b72f0e527b9" translate="yes" xml:space="preserve">
          <source>It wouldn&amp;rsquo;t be any fun to write out absolute URLs for every stylesheet you load, so Sass&amp;rsquo;s algorithm for finding a module makes it a little easier. For starters, you don&amp;rsquo;t have to explicitly write out the extension of the file you want to load; &lt;code&gt;@use &quot;variables&quot;&lt;/code&gt; will automatically load &lt;code&gt;variables.scss&lt;/code&gt;, &lt;code&gt;variables.sass&lt;/code&gt;, or &lt;code&gt;variables.css&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52931406c6ae6fdb9871f922421441b15954cb54" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s almost always a bad idea to use interpolation with numbers. Interpolation returns unquoted strings that can&amp;rsquo;t be used for any further math, and it avoids Sass&amp;rsquo;s built-in safeguards to ensure that units are used correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec252c0e5764fdf8d3932ea42da0ba1ce284f63" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also useful to add elements to a list. The &lt;a href=&quot;../modules/list#append&quot;&gt;&lt;code&gt;list.append($list, $val)&lt;/code&gt; function&lt;/a&gt; takes a list and a value, and returns a copy of the list with the value added to the end. Note that because Sass lists are &lt;a href=&quot;#immutability&quot;&gt;immutable&lt;/a&gt;, it doesn&amp;rsquo;t modify the original list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d954c07f942a9a4cb63312b0e79fb27ec837383f" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also useful to add new pairs to a map, or to replace the value for an existing key. The &lt;a href=&quot;../modules/map#set&quot;&gt;&lt;code&gt;map.set($map, $key, $value)&lt;/code&gt; function&lt;/a&gt; does this: it returns a copy of &lt;code&gt;$map&lt;/code&gt; with the value at &lt;code&gt;$key&lt;/code&gt; set to &lt;code&gt;$value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607338917490824b326f65fda3b1fd84beb234c8" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s an error to specify an RGB property (&lt;code&gt;$red&lt;/code&gt;, &lt;code&gt;$green&lt;/code&gt;, and/or &lt;code&gt;$blue&lt;/code&gt;) at the same time as an HSL property (&lt;code&gt;$saturation&lt;/code&gt;, and/or &lt;code&gt;$lightness&lt;/code&gt;), or either of those at the same time as an &lt;a href=&quot;https://en.wikipedia.org/wiki/HWB_color_model&quot;&gt;HWB&lt;/a&gt; property (&lt;code&gt;$whiteness&lt;/code&gt;, and/or &lt;code&gt;$blackness&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4d0d48bf555c95f776ebb0b769e01718cfcc7e" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s often cleaner and clearer to use &lt;a href=&quot;../interpolation&quot;&gt;interpolation&lt;/a&gt; to create strings, rather than relying on this operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b8847632b8b5b9961572815a36f16251922c5d" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s often the case that a document is initially available only as a sequence of bytes, which must be decoded into Unicode. Sass performs this decoding as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7abfdcf20af9e97a47be163b41d76a414aef7fa" translate="yes" xml:space="preserve">
          <source>It's also possible to import multiple files in one &lt;code&gt;@import&lt;/code&gt;. For example:</source>
          <target state="translated">也可以在一个 &lt;code&gt;@import&lt;/code&gt; 中导入多个文件。例如：</target>
        </trans-unit>
        <trans-unit id="7535674e335e12f1e7f8c3eb63a432491bb999a7" translate="yes" xml:space="preserve">
          <source>It's also possible to use &lt;code&gt;#{}&lt;/code&gt; to put SassScript into property values. In most cases this isn't any better than using a variable, but using &lt;code&gt;#{}&lt;/code&gt; does mean that any operations near it will be treated as plain CSS. For example:</source>
          <target state="translated">也可以使用 &lt;code&gt;#{}&lt;/code&gt; 将SassScript放入属性值。在大多数情况下，这并不比使用变量更好，但是使用 &lt;code&gt;#{}&lt;/code&gt; 确实意味着将其附近的所有操作都视为纯CSS。例如：</target>
        </trans-unit>
        <trans-unit id="1886de0c5be428ee097d8bd10a6b179bedb91276" translate="yes" xml:space="preserve">
          <source>It's not possible to nest &lt;code&gt;@import&lt;/code&gt; within mixins or control directives.</source>
          <target state="translated">将 &lt;code&gt;@import&lt;/code&gt; 嵌套在mixins或控制指令中是不可能的。</target>
        </trans-unit>
        <trans-unit id="a8753b47a012a8c47aacfc01fec6cc4c372652eb" translate="yes" xml:space="preserve">
          <source>It's possible for one selector to extend another selector that in turn extends a third. For example:</source>
          <target state="translated">一个选择器可以扩展另一个选择器,而另一个选择器又可以扩展第三个选择器。例如:</target>
        </trans-unit>
        <trans-unit id="db3b264152fd8c6bbd70b61bcded2b12ab3255a7" translate="yes" xml:space="preserve">
          <source>JavaScript API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ab63913e701a6cd566f1ea2aa0fd07c2a42d47" translate="yes" xml:space="preserve">
          <source>Joins together two lists into one.</source>
          <target state="translated">将两个列表合并为一个。</target>
        </trans-unit>
        <trans-unit id="d026567969db4dd10be48abd8929db9e079f8467" translate="yes" xml:space="preserve">
          <source>Just like CSS, most Sass stylesheets are mainly made up of style rules that contain property declarations. But Sass stylesheets have many more features that can exist alongside these.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44c7ff43cc47ea60d7e8079d814a15a170de1f5" translate="yes" xml:space="preserve">
          <source>Just like argument lists allow functions to take arbitrary positional or keyword arguments, the same syntax can be used to &lt;em&gt;pass&lt;/em&gt; positional and keyword arguments to a function. If you pass a list followed by &lt;code&gt;...&lt;/code&gt; as the last argument of a function call, its elements will be treated as additional positional arguments. Similarly, a map followed by &lt;code&gt;...&lt;/code&gt; will be treated as additional keyword arguments. You can even pass both at once!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc545c408b0d995420305c66f6d25247299f579" translate="yes" xml:space="preserve">
          <source>Just like argument lists allow mixins to take arbitrary positional or keyword arguments, the same syntax can be used to &lt;em&gt;pass&lt;/em&gt; positional and keyword arguments to a mixin. If you pass a list followed by &lt;code&gt;...&lt;/code&gt; as the last argument of an include, its elements will be treated as additional positional arguments. Similarly, a map followed by &lt;code&gt;...&lt;/code&gt; will be treated as additional keyword arguments. You can even pass both at once!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db1c30955fc656f7f435f8f0d732c7d7aa93387" translate="yes" xml:space="preserve">
          <source>Just like when it's used &lt;a href=&quot;#parent-selector&quot;&gt;in selectors&lt;/a&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt; in SassScript refers to the current parent selector. It's a comma-separated list of space-separated lists. For example:</source>
          <target state="translated">就像&lt;a href=&quot;#parent-selector&quot;&gt;在选择器中&lt;/a&gt;使用它一样， &lt;code&gt;&amp;amp;&lt;/code&gt; 在SassScript中引用当前父选择器。这是一个用逗号分隔的列表，以空格分隔。例如：</target>
        </trans-unit>
        <trans-unit id="29bd5da518840fb49af9da42ab496c9be33aa274" translate="yes" xml:space="preserve">
          <source>Just like with &lt;code&gt;.error.intrusion&lt;/code&gt; above, any rule that uses &lt;code&gt;a:hover&lt;/code&gt; will also work for &lt;code&gt;.hoverlink&lt;/code&gt;, even if they have other selectors as well. For example:</source>
          <target state="translated">就像上面的 &lt;code&gt;.error.intrusion&lt;/code&gt; 一样，任何使用 &lt;code&gt;a:hover&lt;/code&gt; 的规则也适用于 &lt;code&gt;.hoverlink&lt;/code&gt; ，即使它们也具有其他选择器。例如：</target>
        </trans-unit>
        <trans-unit id="5d9b1fd33565590a942bfdfa06b2822414c2520e" translate="yes" xml:space="preserve">
          <source>Just like with classes, this means that all styles defined for &lt;code&gt;a:hover&lt;/code&gt; are also applied to &lt;code&gt;.hoverlink&lt;/code&gt;. For example:</source>
          <target state="translated">就像类一样，这意味着为 &lt;code&gt;a:hover&lt;/code&gt; 定义的所有样式也将应用于 &lt;code&gt;.hoverlink&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="db32172db3cd21ae36313d815fba0dd39bd7127a" translate="yes" xml:space="preserve">
          <source>Keyword Arguments</source>
          <target state="translated">關鍵字參數</target>
        </trans-unit>
        <trans-unit id="8bd5c96552367fe1f7d1f917e11688dbaf0e1f98" translate="yes" xml:space="preserve">
          <source>Language extensions such as variables, nesting, and mixins</source>
          <target state="translated">语言扩展,如变量、嵌套和混搭。</target>
        </trans-unit>
        <trans-unit id="f020cc48e0cdf057250d3233d2dfb907044bcee2" translate="yes" xml:space="preserve">
          <source>LibSass</source>
          <target state="translated">LibSass</target>
        </trans-unit>
        <trans-unit id="0eb87b5a030b6979773f1d5e64dc4c05e16e5f92" translate="yes" xml:space="preserve">
          <source>LibSass and Ruby Sass currently &lt;em&gt;always&lt;/em&gt; parse &lt;code&gt;min()&lt;/code&gt; and &lt;code&gt;max()&lt;/code&gt; as Sass functions. To create a plain CSS&lt;code&gt;min()&lt;/code&gt; or &lt;code&gt;max()&lt;/code&gt; call for those implementations, you can write something like &lt;code&gt;unquote(&quot;min(#{$padding},
env(safe-area-inset-left))&quot;)&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd328bd4049b4c2ea6be121849c40828e07df116" translate="yes" xml:space="preserve">
          <source>LibSass and Ruby Sass currently allow compound selectors like &lt;code&gt;.message.info&lt;/code&gt; to be extended. However, this behavior doesn&amp;rsquo;t match the definition of &lt;code&gt;@extend&lt;/code&gt;: instead of styling elements that match the extending selector as though it had &lt;code&gt;class=&quot;message info&quot;&lt;/code&gt;, which would be affected by style rules that included either &lt;code&gt;.message&lt;/code&gt;&lt;em&gt;or&lt;/em&gt;&lt;code&gt;.info&lt;/code&gt;, it only styled them with rules that included both &lt;code&gt;.message&lt;/code&gt;&lt;em&gt;and&lt;/em&gt;&lt;code&gt;info&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62aaadf028c5f6de3258526d4153e1e24ad7719d" translate="yes" xml:space="preserve">
          <source>LibSass and Ruby Sass currently use an older syntax for parsing interpolation in SassScript. For most practical purposes it works the same, but it can behave strangely around &lt;a href=&quot;operators&quot;&gt;operators&lt;/a&gt;. See &lt;a href=&quot;https://github.com/sass/language/blob/master/accepted/free-interpolation.md#old-interpolation-rules&quot;&gt;this document&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75aac6163f0f0331beebad2174ce7e1b5fcb9812" translate="yes" xml:space="preserve">
          <source>LibSass and Ruby Sass only support the following signatures:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffdd6a43c123a6d982197a4134b5e6728fdaaa92" translate="yes" xml:space="preserve">
          <source>LibSass and older versions of Dart Sass and Ruby Sass don&amp;rsquo;t support media queries with features written in a &lt;a href=&quot;https://www.w3.org/TR/mediaqueries-4/#mq-range-context&quot;&gt;range context&lt;/a&gt;. They do support other standard media queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba28cff76b2ef6e48fbac1da3b94ff67f53d9bb5" translate="yes" xml:space="preserve">
          <source>LibSass and older versions of Dart or Ruby Sass don&amp;rsquo;t support &lt;a href=&quot;https://drafts.csswg.org/css-color/#hex-notation&quot;&gt;hex colors with an alpha channel&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7b79ba0063fc774fa4cfbdf7e2fe1de7f3ebab" translate="yes" xml:space="preserve">
          <source>LibSass and older versions of Ruby Sass consider numbers without units to be equal to the same numbers with any units. This behavior was deprecated and has been removed from more recently releases because it violates &lt;a href=&quot;https://en.wikipedia.org/wiki/Transitive_relation&quot;&gt;transitivity&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4178a8a4299cfb79aa2d76140a925b3ea88fd7" translate="yes" xml:space="preserve">
          <source>LibSass and older versions of Ruby Sass default to 5 digits of numeric precision, but can be configured to use a different number. It&amp;rsquo;s recommended that users configure them for 10 digits for greater accuracy and forwards-compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6372ac06d6aaf468424e89eb86284b62361cf872" translate="yes" xml:space="preserve">
          <source>LibSass and older versions of Ruby Sass don&amp;rsquo;t support alpha values specified as percentages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20fa084b02e263a5a2e3b6598affdade7975fb20" translate="yes" xml:space="preserve">
          <source>LibSass supports importing files with the extension &lt;code&gt;.css&lt;/code&gt;, but contrary to the specification they&amp;rsquo;re treated as SCSS files rather than being parsed as CSS. This behavior has been deprecated, and an update is in the works to support the behavior described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94d8d744feb620697652c2258815851fc083fef" translate="yes" xml:space="preserve">
          <source>LibSass, Ruby Sass, and older versions of Dart Sass don&amp;rsquo;t normalize escapes in identifiers. Instead, the text in the unquoted string is the exact text the user wrote. For example, &lt;code&gt;\1F46D&lt;/code&gt; and &lt;code&gt;👭&lt;/code&gt; are not considered equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e38fd9c1d11093f5135710929ced2ac77335633" translate="yes" xml:space="preserve">
          <source>LibSass, Ruby Sass, and older versions of Dart Sass don&amp;rsquo;t support &lt;a href=&quot;../interpolation&quot;&gt;interpolation&lt;/a&gt; in at-rule names. They do support interpolation in values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">根据麻省理工学院许可证授权。</target>
        </trans-unit>
        <trans-unit id="a38bded1da65a4816f4bc063b65463672e27313a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;use#private-members&quot;&gt;module members&lt;/a&gt;, a placeholder selector can be marked private by starting its name with either &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;_&lt;/code&gt;. A private placeholder selector can only be extended within the stylesheet that defines it. To any other stylesheets, it will look as though that selector doesn&amp;rsquo;t exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1f2565d793394f279b5684dda922d205d53f57" translate="yes" xml:space="preserve">
          <source>Like all list functions, &lt;code&gt;append()&lt;/code&gt; returns a new list rather than modifying its argument in place.</source>
          <target state="translated">与所有列表函数一样， &lt;code&gt;append()&lt;/code&gt; 返回一个新列表，而不是就地修改其参数。</target>
        </trans-unit>
        <trans-unit id="c989d9be6d62a6dbaf62f789a98ea32f60b979a0" translate="yes" xml:space="preserve">
          <source>Like all list functions, &lt;code&gt;join()&lt;/code&gt; returns a new list rather than modifying its arguments in place.</source>
          <target state="translated">与所有列表函数一样， &lt;code&gt;join()&lt;/code&gt; 返回一个新列表，而不是就地修改其参数。</target>
        </trans-unit>
        <trans-unit id="215f0787d3f3354f140f85b96c6a6486a621c011" translate="yes" xml:space="preserve">
          <source>Like all map functions, &lt;code&gt;map-merge()&lt;/code&gt; returns a new map rather than modifying its arguments in place.</source>
          <target state="translated">与所有地图函数一样， &lt;code&gt;map-merge()&lt;/code&gt; 返回一个新地图，而不是就地修改其参数。</target>
        </trans-unit>
        <trans-unit id="9837ea88e8cf080cbcdf81d777f7dd9e345fddb1" translate="yes" xml:space="preserve">
          <source>Like lists, maps are mostly manipulated using &lt;a href=&quot;sass/script/functions#map-functions&quot;&gt;SassScript functions&lt;/a&gt;. The &lt;code&gt;map-get&lt;/code&gt; function looks up values in a map and the &lt;code&gt;map-merge&lt;/code&gt; function adds values to a map. The &lt;a href=&quot;#each-multi-assign&quot;&gt;&lt;code&gt;@each&lt;/code&gt; directive&lt;/a&gt; can be used to add styles for each key/value pair in a map. The order of pairs in a map is always the same as when the map was created.</source>
          <target state="translated">像列表一样，大多数地图都是使用&lt;a href=&quot;sass/script/functions#map-functions&quot;&gt;SassScript函数来处理的&lt;/a&gt;。该 &lt;code&gt;map-get&lt;/code&gt; 函数查找值的地图和 &lt;code&gt;map-merge&lt;/code&gt; 功能增加值的地图。所述&lt;a href=&quot;#each-multi-assign&quot;&gt; &lt;code&gt;@each&lt;/code&gt; 指令&lt;/a&gt;可用于添加样式用于在图中的每个键/值对。映射中的配对顺序始终与创建映射时的顺序相同。</target>
        </trans-unit>
        <trans-unit id="b66729fd37b8ff027f7f190bf90f7a46726c7a46" translate="yes" xml:space="preserve">
          <source>Like selectors generated by the &lt;a href=&quot;../at-rules/extend#html-heuristics&quot;&gt;&lt;code&gt;@extend&lt;/code&gt; rule&lt;/a&gt;, the returned selector isn&amp;rsquo;t guaranteed to match &lt;em&gt;all&lt;/em&gt; the elements matched by both &lt;code&gt;$selector1&lt;/code&gt; and &lt;code&gt;$selector2&lt;/code&gt; if they&amp;rsquo;re both complex selectors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b08bc5ae7176adfaba7cded950090b19ea2c01" translate="yes" xml:space="preserve">
          <source>Like the selector unification done for &lt;code&gt;@extend&lt;/code&gt;, this doesn't guarantee that the output selector will match &lt;em&gt;all&lt;/em&gt; elements matched by both input selectors. For example, if &lt;code&gt;.a .b&lt;/code&gt; is unified with &lt;code&gt;.x .y&lt;/code&gt;, &lt;code&gt;.a .x .b.y, .x .a .b.y&lt;/code&gt; will be returned, but &lt;code&gt;.a.x .b.y&lt;/code&gt; will not. This avoids exponential output size while matching all elements that are likely to exist in practice.</source>
          <target state="translated">就像对 &lt;code&gt;@extend&lt;/code&gt; 所做的选择器统一一样，这不能保证输出选择器将匹配两个输入选择器都匹配的&lt;em&gt;所有&lt;/em&gt;元素。例如，如果 &lt;code&gt;.a .b&lt;/code&gt; 与统一 &lt;code&gt;.x .y&lt;/code&gt; ， &lt;code&gt;.a .x .b.y, .x .a .b.y&lt;/code&gt; 将被退回，但 &lt;code&gt;.a.x .b.y&lt;/code&gt; 不会。这样可以避免指数输出大小，同时匹配实际上可能存在的所有元素。</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="751916204beb3a3955bb03e14586f45c600611fd" translate="yes" xml:space="preserve">
          <source>List Operations</source>
          <target state="translated">列表操作</target>
        </trans-unit>
        <trans-unit id="7094bd5e681efcce9038e6d995bf2d060fc85079" translate="yes" xml:space="preserve">
          <source>List operations</source>
          <target state="translated">列表操作</target>
        </trans-unit>
        <trans-unit id="57c9502a7d7d48fd4a86b45fefb2b163491c3ae1" translate="yes" xml:space="preserve">
          <source>Lists</source>
          <target state="translated">Lists</target>
        </trans-unit>
        <trans-unit id="fa382e946929803aa217f5846115b2bc89d380fa" translate="yes" xml:space="preserve">
          <source>Lists are how Sass represents the values of CSS declarations like &lt;code&gt;margin: 10px 15px 0 0&lt;/code&gt; or &lt;code&gt;font-face: Helvetica, Arial, sans-serif&lt;/code&gt;. Lists are just a series of other values, separated by either spaces or commas. In fact, individual values count as lists, too: they're just lists with one item.</source>
          <target state="translated">列出了Sass如何表示CSS声明的值，例如 &lt;code&gt;margin: 10px 15px 0 0&lt;/code&gt; 或 &lt;code&gt;font-face: Helvetica, Arial, sans-serif&lt;/code&gt; 。列表只是一系列其他值，用空格或逗号分隔。实际上，单个值也算作列表：它们只是带有一项的列表。</target>
        </trans-unit>
        <trans-unit id="d12ffda47b308af19a306c1df9574f65d4913a1a" translate="yes" xml:space="preserve">
          <source>Lists aren&amp;rsquo;t much use if you can&amp;rsquo;t get values out of them. You can use the &lt;a href=&quot;../modules/list#nth&quot;&gt;&lt;code&gt;list.nth($list, $n)&lt;/code&gt; function&lt;/a&gt; to get the element at a given index in a list. The first argument is the list itself, and the second is the index of the value you want to get out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f15e0d03eaee4a74cfe11c870ce37fc976cfb8" translate="yes" xml:space="preserve">
          <source>Lists can also be written with square brackets&amp;mdash;we call these bracketed lists. Bracketed lists containing are used as line names in &lt;a href=&quot;https://www.w3.org/TR/css-grid-1/&quot;&gt;CSS Grid Layout&lt;/a&gt;, but they can also be used in pure Sass code just like any other list. Bracketed lists can be comma- or space-separated.</source>
          <target state="translated">列表也可以用方括号括起来，我们称这些括号为列表。包含括号的列表在&lt;a href=&quot;https://www.w3.org/TR/css-grid-1/&quot;&gt;CSS Grid Layout&lt;/a&gt;中用作行名，但是它们也可以像其他列表一样用在纯Sass代码中。括号列表可以用逗号或空格分隔。</target>
        </trans-unit>
        <trans-unit id="8f75f5a1d192f2ecd7aa361370ed4ea2e77eec11" translate="yes" xml:space="preserve">
          <source>Lists can also have no items in them at all. These lists are represented as &lt;code&gt;()&lt;/code&gt; (which is also an empty &lt;a href=&quot;#maps&quot;&gt;map&lt;/a&gt;). They can't be output directly to CSS; if you try to do e.g. &lt;code&gt;font-family: ()&lt;/code&gt;, Sass will raise an error. If a list contains empty lists or null values, as in &lt;code&gt;1px 2px () 3px&lt;/code&gt; or &lt;code&gt;1px 2px null 3px&lt;/code&gt;, the empty lists and null values will be removed before the containing list is turned into CSS.</source>
          <target state="translated">列表中也可以完全没有项目。这些列表表示为 &lt;code&gt;()&lt;/code&gt; （也是一个空&lt;a href=&quot;#maps&quot;&gt;映射&lt;/a&gt;）。它们不能直接输出到CSS。如果您尝试执行例如 &lt;code&gt;font-family: ()&lt;/code&gt; ，则Sass会引发错误。如果列表包含空列表或空值，例如 &lt;code&gt;1px 2px () 3px&lt;/code&gt; 或 &lt;code&gt;1px 2px null 3px&lt;/code&gt; ，则在将包含列表变成CSS之前，将删除空列表和空值。</target>
        </trans-unit>
        <trans-unit id="d0c6303e94b86419203528250650957ae2a3da01" translate="yes" xml:space="preserve">
          <source>Lists contain a sequence of other values. In Sass, elements in lists can be separated by commas (&lt;code&gt;Helvetica, Arial, sans-serif&lt;/code&gt;) or by spaces (&lt;code&gt;10px 15px 0 0&lt;/code&gt;), as long as it&amp;rsquo;s consistent within the list. Unlike most other languages, lists in Sass don&amp;rsquo;t require special brackets; any &lt;a href=&quot;../syntax/structure#expressions&quot;&gt;expressions&lt;/a&gt; separated with spaces or commas count as a list. However, you&amp;rsquo;re allowed to write lists with square brackets (&lt;code&gt;[line1 line2]&lt;/code&gt;), which is useful when using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-columns&quot;&gt;&lt;code&gt;grid-template-columns&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d7cce1f583ff4beb456b479be604014eb41b2d" translate="yes" xml:space="preserve">
          <source>Lists don't support any special operations. Instead, they're manipulated using the &lt;a href=&quot;sass/script/functions#list-functions&quot;&gt;list functions&lt;/a&gt;.</source>
          <target state="translated">列表不支持任何特殊操作。而是使用&lt;a href=&quot;sass/script/functions#list-functions&quot;&gt;list函数&lt;/a&gt;对它们进行操作。</target>
        </trans-unit>
        <trans-unit id="03df25fd568f29835482e742ac7cb5ae4d4686e6" translate="yes" xml:space="preserve">
          <source>Lists in Sass are &lt;em&gt;immutable&lt;/em&gt;, which means that the contents of a list value never changes. Sass&amp;rsquo;s list functions all return new lists rather than modifying the originals. Immutability helps avoid lots of sneaky bugs that can creep in when the same list is shared across different parts of the stylesheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ba7dcf662374aafe652b03d75cb8f6024519d9" translate="yes" xml:space="preserve">
          <source>Literals</source>
          <target state="translated">Literals</target>
        </trans-unit>
        <trans-unit id="1ecc464766c3e269fd91c539861192335131bae3" translate="yes" xml:space="preserve">
          <source>Load Paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eecc6b57188ffad45d243afc138eb7235c8eda33" translate="yes" xml:space="preserve">
          <source>Load paths are also loaded from the &lt;code&gt;SASS_PATH&lt;/code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Environment_variable&quot;&gt;environment variable&lt;/a&gt;, if it&amp;rsquo;s set. This variable should be a list of paths separated by &lt;code&gt;;&lt;/code&gt; (on Windows) or &lt;code&gt;:&lt;/code&gt; (on other operating systems). Load paths from the &lt;code&gt;includePaths&lt;/code&gt; option take precedence over load paths from &lt;code&gt;SASS_PATH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30684671b27143a6c1093849c858e3b891c43bab" translate="yes" xml:space="preserve">
          <source>Load paths are also loaded from the &lt;code&gt;SASS_PATH&lt;/code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Environment_variable&quot;&gt;environment variable&lt;/a&gt;, if it&amp;rsquo;s set. This variable should be a list of paths separated by &lt;code&gt;;&lt;/code&gt; (on Windows) or &lt;code&gt;:&lt;/code&gt; (on other operating systems). Load paths on &lt;code&gt;SASS_PATH&lt;/code&gt; take precedence over load paths passed on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e683799b6440bfdb45ff32020713072b7ad918e" translate="yes" xml:space="preserve">
          <source>Loading CSS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c233b9b320ee3207a5894b6d700f8efacfae6cc2" translate="yes" xml:space="preserve">
          <source>Loading Dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d277ef82fd7646a0be9a84c6f00258f7d9a556" translate="yes" xml:space="preserve">
          <source>Loading Members</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9c839ccaaeb2907f455004770386d69de5b64e" translate="yes" xml:space="preserve">
          <source>Loading a Module That Contains Imports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60604c8e7ae055c1b180f711e636d94d4d21a7b3" translate="yes" xml:space="preserve">
          <source>Loading a file relative to the current working directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5838b71f7d80e9a2122e7a7702e54a04dc716138" translate="yes" xml:space="preserve">
          <source>Loading a file relative to the file in which the &lt;code&gt;@use&lt;/code&gt; or &lt;code&gt;@import&lt;/code&gt; appeared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad4684331c7eb29d9a5d8b206f7cde881e5e7f0" translate="yes" xml:space="preserve">
          <source>Loads the &lt;a href=&quot;../at-rules/use&quot;&gt;module&lt;/a&gt; at &lt;code&gt;$url&lt;/code&gt; and includes its CSS as though it were written as the contents of this mixin. The &lt;code&gt;$with&lt;/code&gt; parameter provides &lt;a href=&quot;../at-rules/use#configuration&quot;&gt;configuration&lt;/a&gt; for the modules; if it&amp;rsquo;s passed, it must be a map from variable names (without &lt;code&gt;$&lt;/code&gt;) to the values of those variables to use in the loaded module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e725ca1836238e9fe3438cfd20c88f18d3f50f24" translate="yes" xml:space="preserve">
          <source>Local variables can even be declared with the same name as a global variable. If this happens, there are actually two different variables with the same name: one local and one global. This helps ensure that an author writing a local variable doesn&amp;rsquo;t accidentally change the value of a global variable they aren&amp;rsquo;t even aware of.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e0b72fd69aed2d227a56660c8b630cf1723849" translate="yes" xml:space="preserve">
          <source>Look Up a Value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af85eeb6d49223154641e89b55d2001719ae0529" translate="yes" xml:space="preserve">
          <source>Loud comments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf18dd5e0700cb2eb2a5974a9d4cc9aac29d094" translate="yes" xml:space="preserve">
          <source>Makes &lt;code&gt;$color&lt;/code&gt; darker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9994ddc381c416cf9952c98de5c1eab1a7f0a9" translate="yes" xml:space="preserve">
          <source>Makes &lt;code&gt;$color&lt;/code&gt; less saturated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8acd70bf30e28475b9c520318b36ec5fd544e7bf" translate="yes" xml:space="preserve">
          <source>Makes &lt;code&gt;$color&lt;/code&gt; lighter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1244b28e148d5ed9d9c4dff4b509bb109a1cc0" translate="yes" xml:space="preserve">
          <source>Makes &lt;code&gt;$color&lt;/code&gt; more opaque.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b593be799606d631c7acc717084b6a2225ba6e" translate="yes" xml:space="preserve">
          <source>Makes &lt;code&gt;$color&lt;/code&gt; more saturated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a147bacc3262e1e09ec240bd34ad17f33057b4" translate="yes" xml:space="preserve">
          <source>Makes &lt;code&gt;$color&lt;/code&gt; more transparent.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
