<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="sass">
    <body>
      <group id="sass">
        <trans-unit id="9f6278f535575365d6ae2446c75999acd141c0e5" translate="yes" xml:space="preserve">
          <source>!default</source>
          <target state="translated">!default</target>
        </trans-unit>
        <trans-unit id="6116fd83c5f82a4ce8e4ad557bad39b37d183075" translate="yes" xml:space="preserve">
          <source>!optional</source>
          <target state="translated">!optional</target>
        </trans-unit>
        <trans-unit id="141c5f6cf6af9e5586d387e1f222e769c87da083" translate="yes" xml:space="preserve">
          <source>#always_check-option &lt;code&gt;:always_check&lt;/code&gt; : Whether a Sass template should be checked for updates every time a controller is accessed, as opposed to only when the server starts. If a Sass template has been updated, it will be recompiled and will overwrite the corresponding CSS file. Defaults to false in production mode, true otherwise. Only has meaning within Rack, Ruby on Rails, or Merb.</source>
          <target state="translated">＃always_check-option &lt;code&gt;:always_check&lt;/code&gt; ：每次访问控制器时（而不是仅在服务器启动时）是否应该检查Sass模板的更新。如果已经更新了Sass模板，它将被重新编译并覆盖相应的CSS文件。在生产模式下默认为false，否则为true。仅在Rack，Ruby on Rails或Merb中具有含义。</target>
        </trans-unit>
        <trans-unit id="6de5570f6ef43723ca3a057e19f33fa112691f02" translate="yes" xml:space="preserve">
          <source>#always_update-option &lt;code&gt;:always_update&lt;/code&gt; : Whether the CSS files should be updated every time a controller is accessed, as opposed to only when the template has been modified. Defaults to false. Only has meaning within Rack, Ruby on Rails, or Merb.</source>
          <target state="translated">＃always_update-option &lt;code&gt;:always_update&lt;/code&gt; ：每次访问控制器时是否应该更新CSS文件，而不是仅在修改模板后才更新。默认为false。仅在Rack，Ruby on Rails或Merb中具有含义。</target>
        </trans-unit>
        <trans-unit id="0a92e53e68d9430d141f0949edf00ddc030929c0" translate="yes" xml:space="preserve">
          <source>#cache-option &lt;code&gt;:cache&lt;/code&gt; : Whether parsed Sass files should be cached, allowing greater speed. Defaults to true.</source>
          <target state="translated">＃cache-option &lt;code&gt;:cache&lt;/code&gt; ：是否应缓存已解析的Sass文件，以提高速度。默认为true。</target>
        </trans-unit>
        <trans-unit id="96449c86b38d96310127d957ab001771b5822a03" translate="yes" xml:space="preserve">
          <source>#cache_location-option &lt;code&gt;:cache_location&lt;/code&gt; : The path where the cached &lt;code&gt;sassc&lt;/code&gt; files should be written to. Defaults to &lt;code&gt;&quot;./tmp/sass-cache&quot;&lt;/code&gt; in Rails and Merb, or &lt;code&gt;&quot;./.sass-cache&quot;&lt;/code&gt; otherwise. If the &lt;a href=&quot;#cache_location-option&quot;&gt;&lt;code&gt;:cache_store&lt;/code&gt; option&lt;/a&gt; is set, this is ignored.</source>
          <target state="translated">＃cache_location-option &lt;code&gt;:cache_location&lt;/code&gt; ：应该将缓存的 &lt;code&gt;sassc&lt;/code&gt; 文件写入的路径。在Rails和Merb中，默认值为 &lt;code&gt;&quot;./tmp/sass-cache&quot;&lt;/code&gt; ，否则为 &lt;code&gt;&quot;./.sass-cache&quot;&lt;/code&gt; 。如果设置&lt;a href=&quot;#cache_location-option&quot;&gt; &lt;code&gt;:cache_store&lt;/code&gt; 选项&lt;/a&gt;，则将其忽略。</target>
        </trans-unit>
        <trans-unit id="cebc8d08a3dde224143e938654f2fe4911d26fd2" translate="yes" xml:space="preserve">
          <source>#cache_store-option &lt;code&gt;:cache_store&lt;/code&gt; : If this is set to an instance of a subclass of &lt;a href=&quot;http://sass-lang.com/documentation/Sass/CacheStores/Base.html&quot;&gt;Sass::CacheStores::Base&lt;/a&gt;, that cache store will be used to store and retrieve cached compilation results. Defaults to a &lt;a href=&quot;http://sass-lang.com/documentation/Sass/CacheStores/Filesystem.html&quot;&gt;Sass::CacheStores::Filesystem&lt;/a&gt; that is initialized using the &lt;a href=&quot;#cache_location-option&quot;&gt;&lt;code&gt;:cache_location&lt;/code&gt; option&lt;/a&gt;.</source>
          <target state="translated">＃cache_store-option &lt;code&gt;:cache_store&lt;/code&gt; ：如果将其设置为&lt;a href=&quot;http://sass-lang.com/documentation/Sass/CacheStores/Base.html&quot;&gt;Sass :: CacheStores :: Base&lt;/a&gt;的子类的实例，则该缓存存储区将用于存储和检索缓存的编译结果。默认为使用&lt;a href=&quot;#cache_location-option&quot;&gt; &lt;code&gt;:cache_location&lt;/code&gt; &lt;/a&gt;选项初始化的&lt;a href=&quot;http://sass-lang.com/documentation/Sass/CacheStores/Filesystem.html&quot;&gt;Sass :: CacheStores :: Filesystem&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8553a0ce985fb3bb419f04ac3838b720df1d6db5" translate="yes" xml:space="preserve">
          <source>#css_location-option &lt;code&gt;:css_location&lt;/code&gt; : The path where CSS output should be written to. This option is ignored when &lt;code&gt;:template_location&lt;/code&gt; is a Hash. Defaults to &lt;code&gt;&quot;./public/stylesheets&quot;&lt;/code&gt;. Only has meaning within Rack, Ruby on Rails, or Merb.</source>
          <target state="translated">＃css_location-option &lt;code&gt;:css_location&lt;/code&gt; ：CSS输出应写入的路径。 &lt;code&gt;:template_location&lt;/code&gt; 为哈希值时，将忽略此选项。默认为 &lt;code&gt;&quot;./public/stylesheets&quot;&lt;/code&gt; 。仅在Rack，Ruby on Rails或Merb中具有含义。</target>
        </trans-unit>
        <trans-unit id="1d88905503b9764a7e3efc0cca83ca78a90310f6" translate="yes" xml:space="preserve">
          <source>#custom-option &lt;code&gt;:custom&lt;/code&gt; : An option that's available for individual applications to set to make data available to &lt;a href=&quot;sass/script/functions&quot;&gt;custom Sass functions&lt;/a&gt;.</source>
          <target state="translated">＃custom-option &lt;code&gt;:custom&lt;/code&gt; ：该选项可用于单个应用程序以设置为使数据可用于&lt;a href=&quot;sass/script/functions&quot;&gt;自定义Sass函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c168270c87ee1c2d0232794df74ecf578bbb5ec5" translate="yes" xml:space="preserve">
          <source>#debug_info-option &lt;code&gt;:debug_info&lt;/code&gt; : When set to true, causes the line number and file where a selector is defined to be emitted into the compiled CSS in a format that can be understood by the browser. Useful in conjunction with &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/103988&quot;&gt;the FireSass Firebug extension&lt;/a&gt; for displaying the Sass filename and line number. Automatically disabled when using the &lt;code&gt;:compressed&lt;/code&gt; output style.</source>
          <target state="translated">＃debug_info-option &lt;code&gt;:debug_info&lt;/code&gt; ：设置为true时，将以浏览器可以理解的格式将定义选择器的行号和文件发射到编译的CSS中。与&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/103988&quot;&gt;FireSass Firebug扩展程序&lt;/a&gt;结合使用，用于显示Sass文件名和行号。使用 &lt;code&gt;:compressed&lt;/code&gt; 输出样式时自动禁用。</target>
        </trans-unit>
        <trans-unit id="d15460d12b3e17b555dc5075e097ab929be4447b" translate="yes" xml:space="preserve">
          <source>#division-and-slash</source>
          <target state="translated">#division-and-slash</target>
        </trans-unit>
        <trans-unit id="233d126c1f91c71f6986c8eb8788b825e79151d3" translate="yes" xml:space="preserve">
          <source>#filename-option &lt;code&gt;:filename&lt;/code&gt; : The filename of the file being rendered. This is used solely for reporting errors, and is automatically set when using Rack, Rails, or Merb.</source>
          <target state="translated">＃filename-option &lt;code&gt;:filename&lt;/code&gt; ：正在渲染的文件的文件名。它仅用于报告错误，在使用Rack，Rails或Merb时会自动设置。</target>
        </trans-unit>
        <trans-unit id="2967d557baa920d640e2458c899b862bc0678414" translate="yes" xml:space="preserve">
          <source>#filesystem_importer-option &lt;code&gt;:filesystem_importer&lt;/code&gt; : A &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass::Importers::Base&lt;/a&gt; subclass used to handle plain string load paths. This should import files from the filesystem. It should be a Class object inheriting from &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass::Importers::Base&lt;/a&gt; with a constructor that takes a single string argument (the load path). Defaults to &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Filesystem.html&quot;&gt;Sass::Importers::Filesystem&lt;/a&gt;.</source>
          <target state="translated">＃filesystem_importer-option &lt;code&gt;:filesystem_importer&lt;/code&gt; ：一个&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass :: Importers :: Base&lt;/a&gt;子类，用于处理纯字符串加载路径。这应该从文件系统导入文件。它应该是一个继承自&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass :: Importers :: Base&lt;/a&gt;的Class对象，其构造函数采用单个字符串参数（加载路径）。默认为&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Filesystem.html&quot;&gt;Sass :: Importers :: Filesystem&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1ac422027191c7648b475ea43b06960ac13ba3c4" translate="yes" xml:space="preserve">
          <source>#full_exception-option &lt;code&gt;:full_exception&lt;/code&gt; : Whether an error in the Sass code should cause Sass to provide a detailed description within the generated CSS file. If set to true, the error will be displayed along with a line number and source snippet both as a comment in the CSS file and at the top of the page (in supported browsers). Otherwise, an exception will be raised in the Ruby code. Defaults to false in production mode, true otherwise.</source>
          <target state="translated">＃full_exception-option &lt;code&gt;:full_exception&lt;/code&gt; ：Sass代码中的错误是否应导致Sass在生成的CSS文件中提供详细描述。如果设置为true，则错误将与行号和源代码片段一起显示为CSS文件中和页面顶部（在受支持的浏览器中）的注释。否则，将在Ruby代码中引发异常。在生产模式下默认为false，否则为true。</target>
        </trans-unit>
        <trans-unit id="3d5cc64e06e6ce421caa10dc2115676b1e9ea44f" translate="yes" xml:space="preserve">
          <source>#interpolation_</source>
          <target state="translated">#interpolation_</target>
        </trans-unit>
        <trans-unit id="684155f2e92f3b646c7de53eb5126babf1092f73" translate="yes" xml:space="preserve">
          <source>#line-option &lt;code&gt;:line&lt;/code&gt; : The number of the first line of the Sass template. Used for reporting line numbers for errors. This is useful to set if the Sass template is embedded in a Ruby file.</source>
          <target state="translated">＃line-option &lt;code&gt;:line&lt;/code&gt; ：Sass模板第一行的编号。用于报告错误的行号。这对于设置Sass模板是否嵌入在Ruby文件中很有用。</target>
        </trans-unit>
        <trans-unit id="7fcd20bfac67fd4158191ee3b71b2ce93362fa1f" translate="yes" xml:space="preserve">
          <source>#line_numbers-option &lt;code&gt;:line_numbers&lt;/code&gt; : When set to true, causes the line number and file where a selector is defined to be emitted into the compiled CSS as a comment. Useful for debugging, especially when using imports and mixins. This option may also be called &lt;code&gt;:line_comments&lt;/code&gt;. Automatically disabled when using the &lt;code&gt;:compressed&lt;/code&gt; output style or the &lt;code&gt;:debug_info&lt;/code&gt;/&lt;code&gt;:trace_selectors&lt;/code&gt; options.</source>
          <target state="translated">＃line_numbers-option &lt;code&gt;:line_numbers&lt;/code&gt; ：设置为true时，将将定义选择器的行号和文件作为注释发送到已编译的CSS中。对于调试非常有用，尤其是在使用导入和混入时。此选项也可以称为 &lt;code&gt;:line_comments&lt;/code&gt; 。使用时自动禁用 &lt;code&gt;:compressed&lt;/code&gt; 输出样式或 &lt;code&gt;:debug_info&lt;/code&gt; / &lt;code&gt;:trace_selectors&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="f9c9a4c169deb174a5436923f245df12dcb0d579" translate="yes" xml:space="preserve">
          <source>#load_paths-option &lt;code&gt;:load_paths&lt;/code&gt; : An array of filesystem paths or importers which should be searched for Sass templates imported with the &lt;a href=&quot;#import&quot;&gt;&lt;code&gt;@import&lt;/code&gt;&lt;/a&gt; directive. These may be strings, &lt;code&gt;Pathname&lt;/code&gt; objects, or subclasses of &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass::Importers::Base&lt;/a&gt;. This defaults to the working directory and, in Rack, Rails, or Merb, whatever &lt;code&gt;:template_location&lt;/code&gt; is. The load path is also informed by &lt;a href=&quot;http://sass-lang.com/documentation/Sass.html#load_paths-class_method&quot;&gt;Sass.load_paths&lt;/a&gt; and the &lt;code&gt;SASS_PATH&lt;/code&gt; environment variable.</source>
          <target state="translated">＃load_paths-option &lt;code&gt;:load_paths&lt;/code&gt; ：应搜索文件系统路径或导入器的数组，以查找使用&lt;a href=&quot;#import&quot;&gt; &lt;code&gt;@import&lt;/code&gt; &lt;/a&gt;指令导入的Sass模板。这些可以是字符串， &lt;code&gt;Pathname&lt;/code&gt; 对象或&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass :: Importers :: Base的&lt;/a&gt;子类。默认为工作目录，在Rack，Rails或Merb中，无论 &lt;code&gt;:template_location&lt;/code&gt; 是什么。加载路径还由&lt;a href=&quot;http://sass-lang.com/documentation/Sass.html#load_paths-class_method&quot;&gt;Sass.load_paths&lt;/a&gt;和 &lt;code&gt;SASS_PATH&lt;/code&gt; 环境变量通知。</target>
        </trans-unit>
        <trans-unit id="8992043141768d709b549d5249a9a18d9394da2c" translate="yes" xml:space="preserve">
          <source>#never_update-option &lt;code&gt;:never_update&lt;/code&gt; : Whether the CSS files should never be updated, even if the template file changes. Setting this to true may give small performance gains. It always defaults to false. Only has meaning within Rack, Ruby on Rails, or Merb.</source>
          <target state="translated">＃never_update-option &lt;code&gt;:never_update&lt;/code&gt; ：即使模板文件发生更改，是否也不应更新CSS文件。将此设置为true可能会带来较小的性能提升。它始终默认为false。仅在Rack，Ruby on Rails或Merb中具有含义。</target>
        </trans-unit>
        <trans-unit id="d6c66337267a87b1c4ed6b9fca9b0cda5799a358" translate="yes" xml:space="preserve">
          <source>#poll-option &lt;code&gt;:poll&lt;/code&gt; : When true, always use the polling backend for &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Compiler.html#watch-instance_method&quot;&gt;Sass::Plugin::Compiler#watch&lt;/a&gt; rather than the native filesystem backend.</source>
          <target state="translated">＃poll-option &lt;code&gt;:poll&lt;/code&gt; ：为true时，请始终对&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Compiler.html#watch-instance_method&quot;&gt;Sass :: Plugin :: Compiler＃watch&lt;/a&gt;使用轮询后端，而不要使用本机文件系统后端。</target>
        </trans-unit>
        <trans-unit id="ee585d5eda346509bf46836bec08699193d3a1e2" translate="yes" xml:space="preserve">
          <source>#property_syntax-option &lt;code&gt;:property_syntax&lt;/code&gt; : Forces indented-syntax documents to use one syntax for properties. If the correct syntax isn't used, an error is thrown. &lt;code&gt;:new&lt;/code&gt; forces the use of a colon after the property name. For example: &lt;code&gt;color: #0f3&lt;/code&gt; or &lt;code&gt;width: $main_width&lt;/code&gt;. &lt;code&gt;:old&lt;/code&gt; forces the use of a colon before the property name. For example: &lt;code&gt;:color #0f3&lt;/code&gt; or &lt;code&gt;:width $main_width&lt;/code&gt;. By default, either syntax is valid. This has no effect on SCSS documents.</source>
          <target state="translated">＃property_syntax-option &lt;code&gt;:property_syntax&lt;/code&gt; ：强制缩进语法文件对属性使用一种语法。如果未使用正确的语法，则会引发错误。 &lt;code&gt;:new&lt;/code&gt; 强制在属性名称后使用冒号。例如： &lt;code&gt;color: #0f3&lt;/code&gt; 或 &lt;code&gt;width: $main_width&lt;/code&gt; 。 &lt;code&gt;:old&lt;/code&gt; 强制在属性名称前使用冒号。例如：： &lt;code&gt;:color #0f3&lt;/code&gt; 或 &lt;code&gt;:width $main_width&lt;/code&gt; 。默认情况下，这两种语法均有效。这对SCSS文档没有影响。</target>
        </trans-unit>
        <trans-unit id="cb5035eab7c9fa2b2eb85ae8f7a08c845134bfe9" translate="yes" xml:space="preserve">
          <source>#quiet-option &lt;code&gt;:quiet&lt;/code&gt; : When set to true, causes warnings to be disabled.</source>
          <target state="translated">＃quiet-option &lt;code&gt;:quiet&lt;/code&gt; ：设置为true时，将禁用警告。</target>
        </trans-unit>
        <trans-unit id="ae620e66b80bd00aa7f8e74e671c6335b559014e" translate="yes" xml:space="preserve">
          <source>#read_cache-option &lt;code&gt;:read_cache&lt;/code&gt; : If this is set and &lt;code&gt;:cache&lt;/code&gt; is not, only read the Sass cache if it exists, don't write to it if it doesn't.</source>
          <target state="translated">＃read_cache-option &lt;code&gt;:read_cache&lt;/code&gt; ：如果设置了该参数，而 &lt;code&gt;:cache&lt;/code&gt; 没有设置，则仅读取S​​ass缓存（如果存在），否则不写入。</target>
        </trans-unit>
        <trans-unit id="0fdf6d6e3af8c13933d2a757e38fd2716e9776b0" translate="yes" xml:space="preserve">
          <source>#sourcemap-option &lt;code&gt;:sourcemap&lt;/code&gt; : Controls how sourcemaps are generated. These sourcemaps tell the browser how to find the Sass styles that caused each CSS style to be generated. This has three valid values: &lt;strong&gt;&lt;code&gt;:auto&lt;/code&gt;** uses relative URIs where possible, assuming that that the source stylesheets will be made available on whatever server you're using, and that their relative location will be the same as it is on the local filesystem. If a relative URI is unavailable, a &quot;file:&quot; URI is used instead. **&lt;code&gt;:file&lt;/code&gt;** always uses &quot;file:&quot; URIs, which will work locally but can't be deployed to a remote server. **&lt;code&gt;:inline&lt;/code&gt;** includes the full source text in the sourcemap, which is maximally portable but can create very large sourcemap files. Finally, **&lt;code&gt;:none&lt;/code&gt;&lt;/strong&gt; causes no sourcemaps to be generated at all.</source>
          <target state="translated">＃sourcemap-option &lt;code&gt;:sourcemap&lt;/code&gt; ：控制如何生成源地图。这些源映射告诉浏览器如何找到导致生成每种CSS样式的Sass样式。它具有三个有效值&lt;strong&gt; &lt;code&gt;:auto&lt;/code&gt; **在可能的情况下使用相对URI，假定源样式表将在您使用的任何服务器上可用，并且它们的相对位置将与本地文件系统上的相同。 。如果相对URI不可用，则使用&amp;ldquo;文件：&amp;rdquo; URI代替。 ** &lt;code&gt;:file&lt;/code&gt; **始终使用&amp;ldquo; file：&amp;rdquo; URI，它将在本地运行，但不能部署到远程服务器。 ** &lt;code&gt;:inline&lt;/code&gt; **在源图中包含完整的源文本，这是最大的可移植性，但可以创建非常大的源图文件。最后，** &lt;code&gt;:none&lt;/code&gt; &lt;/strong&gt;根本不会生成任何源映射。</target>
        </trans-unit>
        <trans-unit id="c5d25032e70476f124aabc345d095918193a6df3" translate="yes" xml:space="preserve">
          <source>#style-option &lt;code&gt;:style&lt;/code&gt; : Sets the style of the CSS output. See &lt;a href=&quot;#output_style&quot;&gt;Output Style&lt;/a&gt;.</source>
          <target state="translated">＃style-option &lt;code&gt;:style&lt;/code&gt; ：设置CSS输出的样式。请参见&lt;a href=&quot;#output_style&quot;&gt;输出样式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dbaf6c23633f779db75c33dcebe15c6e3993fea6" translate="yes" xml:space="preserve">
          <source>#subtraction</source>
          <target state="translated">#subtraction</target>
        </trans-unit>
        <trans-unit id="269503caa16ee2d7c0ff1ee9f85bb37e9b687c77" translate="yes" xml:space="preserve">
          <source>#syntax-option &lt;code&gt;:syntax&lt;/code&gt; : The syntax of the input file, &lt;code&gt;:sass&lt;/code&gt; for the indented syntax and &lt;code&gt;:scss&lt;/code&gt; for the CSS-extension syntax. This is only useful when you're constructing &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Engine.html&quot;&gt;Sass::Engine&lt;/a&gt; instances yourself; it's automatically set properly when using &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin.html&quot;&gt;Sass::Plugin&lt;/a&gt;. Defaults to &lt;code&gt;:sass&lt;/code&gt;.</source>
          <target state="translated">＃syntax-option &lt;code&gt;:syntax&lt;/code&gt; ：输入文件的语法， &lt;code&gt;:sass&lt;/code&gt; 表示缩进语法，而 &lt;code&gt;:scss&lt;/code&gt; 表示CSS扩展语法。这仅在您自己构造&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Engine.html&quot;&gt;Sass :: Engine&lt;/a&gt;实例时才有用。使用&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin.html&quot;&gt;Sass :: Plugin&lt;/a&gt;时会自动正确设置。默认为 &lt;code&gt;:sass&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff5aa8b0e797ba28399be350087dd6975fae32a3" translate="yes" xml:space="preserve">
          <source>#template_location-option &lt;code&gt;:template_location&lt;/code&gt; : A path to the root sass template directory for your application. If a hash, &lt;code&gt;:css_location&lt;/code&gt; is ignored and this option designates a mapping between input and output directories. May also be given a list of 2-element lists, instead of a hash. Defaults to &lt;code&gt;css_location + &quot;/sass&quot;&lt;/code&gt;. Only has meaning within Rack, Ruby on Rails, or Merb. Note that if multiple template locations are specified, all of them are placed in the import path, allowing you to import between them. &lt;strong&gt;Note that due to the many possible formats it can take, this option should only be set directly, not accessed or modified. Use the &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#template_location_array-instance_method&quot;&gt;Sass::Plugin#template_location_array&lt;/a&gt;, &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#add_template_location-instance_method&quot;&gt;Sass::Plugin#add_template_location&lt;/a&gt;, and &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#remove_template_location-instance_method&quot;&gt;Sass::Plugin#remove_template_location&lt;/a&gt; methods instead&lt;/strong&gt;.</source>
          <target state="translated">＃template_location-option &lt;code&gt;:template_location&lt;/code&gt; ：应用程序的根sass模板目录的路径。如果是散列， &lt;code&gt;:css_location&lt;/code&gt; 将被忽略，并且此选项指定输入和输出目录之间的映射。也可能会给定2元素列表的列表，而不是哈希。默认为 &lt;code&gt;css_location + &quot;/sass&quot;&lt;/code&gt; 。仅在Rack，Ruby on Rails或Merb中具有含义。请注意，如果指定了多个模板位置，则将它们全部放置在导入路径中，从而允许您在它们之间进行导入。&lt;strong&gt;请注意，由于可能采用多种格式，因此只能直接设置此选项，不得访问或修改。使用&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#template_location_array-instance_method&quot;&gt;Sass :: Plugin＃template_location_array&lt;/a&gt;，&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#add_template_location-instance_method&quot;&gt;Sass :: Plugin＃add_template_location&lt;/a&gt;和&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#remove_template_location-instance_method&quot;&gt;Sass :: Plugin＃remove_template_location&lt;/a&gt;方法代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="d6fd77828774c07f57a00967cc8fa15a060d6fac" translate="yes" xml:space="preserve">
          <source>#trace_selectors-option &lt;code&gt;:trace_selectors&lt;/code&gt; : When set to true, emit a full trace of imports and mixins before each selector. This can be helpful for in-browser debugging of stylesheet imports and mixin includes. This option supersedes the &lt;code&gt;:line_comments&lt;/code&gt; option and is superseded by the &lt;code&gt;:debug_info&lt;/code&gt; option. Automatically disabled when using the &lt;code&gt;:compressed&lt;/code&gt; output style.</source>
          <target state="translated">＃trace_selectors-option &lt;code&gt;:trace_selectors&lt;/code&gt; ：设置为true时，在每个选择器之前发出完整的导入和混合信息。这对于样式表导入和mixin包含的浏览器内调试很有帮助。此选项将取代 &lt;code&gt;:line_comments&lt;/code&gt; 选项，并通过所取代 &lt;code&gt;:debug_info&lt;/code&gt; 选项。使用 &lt;code&gt;:compressed&lt;/code&gt; 输出样式时自动禁用。</target>
        </trans-unit>
        <trans-unit id="71aacad0d2906c2c0488c409f2837f3a5aa9fc8d" translate="yes" xml:space="preserve">
          <source>#unix_newlines-option &lt;code&gt;:unix_newlines&lt;/code&gt; : If true, use Unix-style newlines when writing files. Only has meaning on Windows, and only when Sass is writing the files (in Rack, Rails, or Merb, when using &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin.html&quot;&gt;Sass::Plugin&lt;/a&gt; directly, or when using the command-line executable).</source>
          <target state="translated">＃unix_newlines-option &lt;code&gt;:unix_newlines&lt;/code&gt; ：如果为true，则在写入文件时使用Unix风格的换行符。仅在Windows上具有意义，并且仅在Sass写入文件时（在Rack，Rails或Merb中，直接使用&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin.html&quot;&gt;Sass :: Plugin&lt;/a&gt;或使用命令行可执行文件时）才有意义。</target>
        </trans-unit>
        <trans-unit id="f37d5b2b8edbdb4f237f2eacb3f20c8966dc64ad" translate="yes" xml:space="preserve">
          <source>$alpha(Number)</source>
          <target state="translated">$alpha(Number)</target>
        </trans-unit>
        <trans-unit id="4d2412d42a769aac5124a82c3caf6c6cc4be9005" translate="yes" xml:space="preserve">
          <source>$alpha(Number) &amp;mdash; The adjustment to make on the alpha component, between -1 and 1 inclusive</source>
          <target state="translated">$ alpha（Number）&amp;mdash;对alpha分量进行的调整，介于-1和1之间</target>
        </trans-unit>
        <trans-unit id="e2e3a1f70a1472426d6407e0cd4015604b8fc122" translate="yes" xml:space="preserve">
          <source>$alpha(Number) &amp;mdash; The new alpha component for the color, within 0 and 1 inclusive</source>
          <target state="translated">$ alpha（Number）&amp;mdash;颜色的新alpha分量，在0和1之间（含0和1）</target>
        </trans-unit>
        <trans-unit id="498a6889d7a32497cba8d107624eec4236bdd2be" translate="yes" xml:space="preserve">
          <source>$alpha(Number) &amp;mdash; The new opacity of the color. Must be between 0 and 1 inclusive</source>
          <target state="translated">$ alpha（Number）&amp;mdash;颜色的新不透明度。必须介于0和1之间（含0和1）</target>
        </trans-unit>
        <trans-unit id="41c7a19b5fdd75c8955789523812ea7edb6dcc91" translate="yes" xml:space="preserve">
          <source>$alpha(Number) &amp;mdash; The opacity of the color. Must be between 0 and 1 inclusive</source>
          <target state="translated">$ alpha（Number）&amp;mdash;颜色的不透明度。必须介于0和1之间（含0和1）</target>
        </trans-unit>
        <trans-unit id="bea4ab0c6034d1493ad5fca08ec63de8e868527f" translate="yes" xml:space="preserve">
          <source>$alpha(Number) &amp;mdash; The opacity of the color. Must be between 0 and 1, inclusive</source>
          <target state="translated">$ alpha（Number）&amp;mdash;颜色的不透明度。必须介于0和1之间（含0和1）</target>
        </trans-unit>
        <trans-unit id="bb52e8e3817a52dca24cd68f41362fdc8e344407" translate="yes" xml:space="preserve">
          <source>$amount(Number) &amp;mdash; The amount to decrease the lightness by, between 0% and 100%</source>
          <target state="translated">$ amount（Number）&amp;mdash;降低亮度的量，介于0％和100％之间</target>
        </trans-unit>
        <trans-unit id="0b0e738163b7c2b99a9d5f4be6e7bdd356202b14" translate="yes" xml:space="preserve">
          <source>$amount(Number) &amp;mdash; The amount to decrease the opacity by, between 0 and 1</source>
          <target state="translated">$ amount（Number）&amp;mdash;将不透明度降低0到1之间的数量</target>
        </trans-unit>
        <trans-unit id="73e8003064bc746fdebdd78631c0d1c5ac695d4a" translate="yes" xml:space="preserve">
          <source>$amount(Number) &amp;mdash; The amount to decrease the saturation by, between 0% and 100%</source>
          <target state="translated">$ amount（Number）&amp;mdash;将饱和度降低0％至100％之间的量</target>
        </trans-unit>
        <trans-unit id="1678bb8f277a0af777ad1eb366d0b0519af66939" translate="yes" xml:space="preserve">
          <source>$amount(Number) &amp;mdash; The amount to increase the lightness by, between 0% and 100%</source>
          <target state="translated">$ amount（Number）&amp;mdash;增加亮度的量，介于0％和100％之间</target>
        </trans-unit>
        <trans-unit id="2112feebcd371935a5f8a5e9b7cdfc9ff311946c" translate="yes" xml:space="preserve">
          <source>$amount(Number) &amp;mdash; The amount to increase the opacity by, between 0 and 1</source>
          <target state="translated">$ amount（Number）&amp;mdash;增加不透明度的量，介于0和1之间</target>
        </trans-unit>
        <trans-unit id="1ebd4a14d431639849162a9890ef3737bae97cdd" translate="yes" xml:space="preserve">
          <source>$amount(Number) &amp;mdash; The amount to increase the saturation by, between 0% and 100%</source>
          <target state="translated">$ amount（Number）&amp;mdash;增加饱和度的量，介于0％和100％之间</target>
        </trans-unit>
        <trans-unit id="60b25254e299df6793897a24dc0e7b4b55d0e655" translate="yes" xml:space="preserve">
          <source>$args(ArgList)</source>
          <target state="translated">$args(ArgList)</target>
        </trans-unit>
        <trans-unit id="024be0f6c0d3776afb36b2419bb456298a8f56d9" translate="yes" xml:space="preserve">
          <source>$blue(Number)</source>
          <target state="translated">$blue(Number)</target>
        </trans-unit>
        <trans-unit id="0114bb074a63c8181e56b5fc30af5b5c63cb259d" translate="yes" xml:space="preserve">
          <source>$blue(Number) &amp;mdash; The adjustment to make on the blue component, between -255 and 255 inclusive</source>
          <target state="translated">$ blue（Number）&amp;mdash;对蓝色组件进行的调整，介于-255和255之间（含）</target>
        </trans-unit>
        <trans-unit id="44ae33eb52427bee57f7fcaec03ff51c77c2f313" translate="yes" xml:space="preserve">
          <source>$blue(Number) &amp;mdash; The amount of blue in the color. Must be between 0 and 255 inclusive or 0% and 100% inclusive</source>
          <target state="translated">$ blue（Number）&amp;mdash;颜色中蓝色的数量。必须介于0到255（含）之间或0％和100％（含）之间</target>
        </trans-unit>
        <trans-unit id="14edfb88615bca4634a51a2c1c2c8107c3a697f6" translate="yes" xml:space="preserve">
          <source>$blue(Number) &amp;mdash; The amount of blue in the color. Must be between 0 and 255 inclusive, or between 0% and 100% inclusive</source>
          <target state="translated">$ blue（Number）&amp;mdash;颜色中蓝色的数量。必须介于0到255之间（包括0和255之间）</target>
        </trans-unit>
        <trans-unit id="082ffd2500a9d40b19e0bca2105d3ea572caae06" translate="yes" xml:space="preserve">
          <source>$blue(Number) &amp;mdash; The new blue component for the color, within 0 and 255 inclusive</source>
          <target state="translated">$ blue（Number）&amp;mdash;颜色的新蓝色成分，介于0和255之间（含0和255）</target>
        </trans-unit>
        <trans-unit id="c87ea33099dabab9cf754daa742549f536f7b043" translate="yes" xml:space="preserve">
          <source>$bracketed(Base) &amp;mdash; Whether the resulting list will be bracketed. If this is auto (the default), the separator is determined as explained above.</source>
          <target state="translated">$ bracketed（Base）&amp;mdash;是否将结果列表放在括号中。如果这是自动的（默认设置），则如上所述确定分隔符。</target>
        </trans-unit>
        <trans-unit id="bc5ceb76a4d4fddbda5ca36bff305294cf1a14da" translate="yes" xml:space="preserve">
          <source>$color(Color)</source>
          <target state="translated">$color(Color)</target>
        </trans-unit>
        <trans-unit id="eaf19dcb4db0318c388250ee606692d0749116b1" translate="yes" xml:space="preserve">
          <source>$color(Color) &amp;mdash; The color whose opacity will be changed.</source>
          <target state="translated">$ color（Color）&amp;mdash;将更改其不透明度的颜色。</target>
        </trans-unit>
        <trans-unit id="51a39d43fde61f26e8b7babd823afde733c9c944" translate="yes" xml:space="preserve">
          <source>$color1(Color)</source>
          <target state="translated">$color1(Color)</target>
        </trans-unit>
        <trans-unit id="25baa0464e1e7e4ca9e04d7a9c7b75fe9a4ffdf0" translate="yes" xml:space="preserve">
          <source>$color2(Color)</source>
          <target state="translated">$color2(Color)</target>
        </trans-unit>
        <trans-unit id="ab99ee2657c3548adc7b8a1635ad3690071c2c86" translate="yes" xml:space="preserve">
          <source>$condition(Base) &amp;mdash; Whether the $if-true or $if-false will be returned</source>
          <target state="translated">$ condition（Base）&amp;mdash;将返回$ if-true还是$ if-false</target>
        </trans-unit>
        <trans-unit id="366fac1d8f8b212b06e80df2ca307929360e4505" translate="yes" xml:space="preserve">
          <source>$degrees(Number) &amp;mdash; The number of degrees to rotate the hue</source>
          <target state="translated">$ degrees（Number）&amp;mdash;旋转色调的度数</target>
        </trans-unit>
        <trans-unit id="65eb780e7c2faa67cd8dfaf280bb60c0b869d3eb" translate="yes" xml:space="preserve">
          <source>$end-at(Number) &amp;mdash; The index of the last character of the substring. If this is negative, it counts from the end of $string. Defaults to -1</source>
          <target state="translated">$ end-at（Number）&amp;mdash;子字符串的最后一个字符的索引。如果为负，则从$ string的末尾开始计数。默认为-1</target>
        </trans-unit>
        <trans-unit id="e9150635ec157a7b12d7ee33618c81b457705c65" translate="yes" xml:space="preserve">
          <source>$extendee(String, List) &amp;mdash; The selector being extended. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ extendee（String，List）-被扩展的选择器。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="a948ab2ebed2a0954c6b5259d4a58a9bb80f4bdd" translate="yes" xml:space="preserve">
          <source>$extender(String, List) &amp;mdash; The selector being injected into $selector. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ extender（String，List）&amp;mdash;将选择器注入到$ selector中。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="11042ef8c2f816db0196d98e767fdee4a7243460" translate="yes" xml:space="preserve">
          <source>$feature(String) &amp;mdash; The name of the feature</source>
          <target state="translated">$ feature（String）&amp;mdash;功能名称</target>
        </trans-unit>
        <trans-unit id="71b0659a8448f38ed067bac0170f24b0b12eb7de" translate="yes" xml:space="preserve">
          <source>$function(Function) &amp;mdash; The function to call.</source>
          <target state="translated">$ function（Function）&amp;mdash;要调用的函数。</target>
        </trans-unit>
        <trans-unit id="8cbcf8013203dcd00aae121f77487eb430108192" translate="yes" xml:space="preserve">
          <source>$green(Number)</source>
          <target state="translated">$green(Number)</target>
        </trans-unit>
        <trans-unit id="505c79e9d3a4333b83af3ed782f3d3d4d212b8bf" translate="yes" xml:space="preserve">
          <source>$green(Number) &amp;mdash; The adjustment to make on the green component, between -255 and 255 inclusive</source>
          <target state="translated">$ green（Number）&amp;mdash;对绿色组件进行的调整，介于-255和255之间（含）</target>
        </trans-unit>
        <trans-unit id="d3b5d8297fdba65df3111fde84ebaacc9f6eda5b" translate="yes" xml:space="preserve">
          <source>$green(Number) &amp;mdash; The amount of green in the color. Must be between 0 and 255 inclusive or 0% and 100% inclusive</source>
          <target state="translated">$ green（Number）&amp;mdash;颜色中绿色的数量。必须介于0到255（含）之间或0％和100％（含）之间</target>
        </trans-unit>
        <trans-unit id="99b86fdaaef98e7c8c7e0f6f252b4581a0b90add" translate="yes" xml:space="preserve">
          <source>$green(Number) &amp;mdash; The amount of green in the color. Must be between 0 and 255 inclusive, or between 0% and 100% inclusive</source>
          <target state="translated">$ green（Number）&amp;mdash;颜色中绿色的数量。必须介于0到255之间（包括0和255之间）</target>
        </trans-unit>
        <trans-unit id="5cf457660678f6560022cb06aca4d5db7149ab49" translate="yes" xml:space="preserve">
          <source>$green(Number) &amp;mdash; The new green component for the color, within 0 and 255 inclusive</source>
          <target state="translated">$ green（Number）&amp;mdash;颜色的新绿色分量，介于0和255之间（包括0和255）</target>
        </trans-unit>
        <trans-unit id="3601693c3505169da43a84db4c396682bfcf5d79" translate="yes" xml:space="preserve">
          <source>$hue(Number) &amp;mdash; The adjustment to make on the hue component, in degrees</source>
          <target state="translated">$ hue（Number）&amp;mdash;对色相分量进行的调整，以度为单位</target>
        </trans-unit>
        <trans-unit id="6a9ae64f50f4e8d0f647fd666a54ae4d4958847a" translate="yes" xml:space="preserve">
          <source>$hue(Number) &amp;mdash; The hue of the color. Should be between 0 and 360 degrees, inclusive</source>
          <target state="translated">$ hue（Number）&amp;mdash;颜色的色调。应该在0到360度之间（包括0和360度）</target>
        </trans-unit>
        <trans-unit id="1ca447c39c7fe544b3dcec73f5f0fc3e0f0adf3c" translate="yes" xml:space="preserve">
          <source>$hue(Number) &amp;mdash; The new hue component for the color, in degrees</source>
          <target state="translated">$ hue（Number）&amp;mdash;颜色的新色相分量，以度为单位</target>
        </trans-unit>
        <trans-unit id="30026b4a5d66ea78e57d12199d758a86d05e1206" translate="yes" xml:space="preserve">
          <source>$if-false(Tree::Node)</source>
          <target state="translated">$if-false(Tree::Node)</target>
        </trans-unit>
        <trans-unit id="d334cf4592c4206721ab58145b121c4d8b74efe7" translate="yes" xml:space="preserve">
          <source>$if-true(Tree::Node)</source>
          <target state="translated">$if-true(Tree::Node)</target>
        </trans-unit>
        <trans-unit id="3e2de723b98212f908d2b1751ef43e27928ba988" translate="yes" xml:space="preserve">
          <source>$index(Number) &amp;mdash; The position at which $insert will be inserted. Negative indices count from the end of $string. An index that's outside the bounds of the string will insert $insert at the front or back of the string</source>
          <target state="translated">$ index（Number）&amp;mdash;将插入$ insert的位置。负索引从$ string的末尾开始计数。超出字符串范围的索引将在字符串的前面或后面插入$ insert</target>
        </trans-unit>
        <trans-unit id="216cb08535c802f4d6c6857f6fce4c1cfbafbb12" translate="yes" xml:space="preserve">
          <source>$insert(String)</source>
          <target state="translated">$insert(String)</target>
        </trans-unit>
        <trans-unit id="aa89ac8049a528198da8a2a9ac15c80e0cb8c080" translate="yes" xml:space="preserve">
          <source>$key(Base)</source>
          <target state="translated">$key(Base)</target>
        </trans-unit>
        <trans-unit id="f92b0a77407f5cbd7b25a78ee6fa15421f84c529" translate="yes" xml:space="preserve">
          <source>$keys([Base])</source>
          <target state="translated">$keys([Base])</target>
        </trans-unit>
        <trans-unit id="787a07d7ddc2d84fb0c8f94d0573819a88e2a8a1" translate="yes" xml:space="preserve">
          <source>$lightness(Number)</source>
          <target state="translated">$lightness(Number)</target>
        </trans-unit>
        <trans-unit id="c889bc6b9f15bc626f62f2e07add6cd7d4a15035" translate="yes" xml:space="preserve">
          <source>$lightness(Number) &amp;mdash; The adjustment to make on the lightness component, between -100% and 100% inclusive</source>
          <target state="translated">$ lightness（Number）&amp;mdash;对亮度分量进行的调整，介于-100％和100％之间（含）</target>
        </trans-unit>
        <trans-unit id="e5e0b3215ad0ba293de15b21a34b34fb97584133" translate="yes" xml:space="preserve">
          <source>$lightness(Number) &amp;mdash; The lightness of the color. Must be between 0% and 100%, inclusive</source>
          <target state="translated">$ lightness（Number）&amp;mdash;颜色的亮度。必须介于0％和100％之间（含）</target>
        </trans-unit>
        <trans-unit id="27fa13b3de982b483f3b75deb9bd6c66a1ac77ad" translate="yes" xml:space="preserve">
          <source>$lightness(Number) &amp;mdash; The new lightness component for the color, within 0% and 100% inclusive</source>
          <target state="translated">$ lightness（Number）&amp;mdash;颜色的新亮度成分，介于0％和100％之间</target>
        </trans-unit>
        <trans-unit id="5d007df602604eaa1d62dd04a861dcba22893125" translate="yes" xml:space="preserve">
          <source>$limit(Number) &amp;mdash; The maximum of the random integer to be returned, a positive integer.</source>
          <target state="translated">$ limit（Number）&amp;mdash;要返回的随机整数的最大值，一个正整数。</target>
        </trans-unit>
        <trans-unit id="d7812c62ad89538b283d234e089e2a5b4d489134" translate="yes" xml:space="preserve">
          <source>$list(Base)</source>
          <target state="translated">$list(Base)</target>
        </trans-unit>
        <trans-unit id="41b5a0eda0d435b63c1ddc72ffc91bacbe056016" translate="yes" xml:space="preserve">
          <source>$list(Base) &amp;mdash; The list that will be copied, having the element at index $n changed.</source>
          <target state="translated">$ list（Base）&amp;mdash;将被复制的列表，其中索引$ n的元素已更改。</target>
        </trans-unit>
        <trans-unit id="f90fac986da16adb0688dea18db93bdef7e4d5ab" translate="yes" xml:space="preserve">
          <source>$list1(Base)</source>
          <target state="translated">$list1(Base)</target>
        </trans-unit>
        <trans-unit id="b254396051b0571d4ac5b7f1f4ee55f07052ab65" translate="yes" xml:space="preserve">
          <source>$list2(Base)</source>
          <target state="translated">$list2(Base)</target>
        </trans-unit>
        <trans-unit id="e69b8fd7c7927170c88ae27b0a9f413775fe63a0" translate="yes" xml:space="preserve">
          <source>$lists([Base])</source>
          <target state="translated">$lists([Base])</target>
        </trans-unit>
        <trans-unit id="355b962a782a7ab6bbfa67b14bf8029ba1ae9752" translate="yes" xml:space="preserve">
          <source>$map(Map)</source>
          <target state="translated">$map(Map)</target>
        </trans-unit>
        <trans-unit id="a83447a4a6654a52c1c0596e2141bb3f23fe6dc7" translate="yes" xml:space="preserve">
          <source>$map1(Map)</source>
          <target state="translated">$map1(Map)</target>
        </trans-unit>
        <trans-unit id="4cd4bda304a161300de4dd40ad6c1c03b9859083" translate="yes" xml:space="preserve">
          <source>$map2(Map)</source>
          <target state="translated">$map2(Map)</target>
        </trans-unit>
        <trans-unit id="c8b36fa18f3768d0870bcddee337699da854fc4b" translate="yes" xml:space="preserve">
          <source>$n(Number) &amp;mdash; The index of the item to get. Negative indices count from the end of the list.</source>
          <target state="translated">$ n（Number）&amp;mdash;要获取的项目的索引。负索引从列表的末尾开始计数。</target>
        </trans-unit>
        <trans-unit id="e6b81f8d12578a0b7ca0888ec96f4cf8a41b5f07" translate="yes" xml:space="preserve">
          <source>$n(Number) &amp;mdash; The index of the item to set. Negative indices count from the end of the list.</source>
          <target state="translated">$ n（Number）&amp;mdash;要设置的项目的索引。负索引从列表的末尾开始计数。</target>
        </trans-unit>
        <trans-unit id="91d32e65bb40b2f6a37607893d992cf9e36b6904" translate="yes" xml:space="preserve">
          <source>$name(String) &amp;mdash; The name of the variable to check. The name should not include the $.</source>
          <target state="translated">$ name（String）&amp;mdash;要检查的变量的名称。名称中不应包含$。</target>
        </trans-unit>
        <trans-unit id="02d1d576ed378076d11c4e57adf7e96286fd51e6" translate="yes" xml:space="preserve">
          <source>$number(Number)</source>
          <target state="translated">$number(Number)</target>
        </trans-unit>
        <trans-unit id="3e893f93841239b78a5907869d86b75f05018f6e" translate="yes" xml:space="preserve">
          <source>$number1(Number)</source>
          <target state="translated">$number1(Number)</target>
        </trans-unit>
        <trans-unit id="ce08017b63398252ee43106ce21141cb41ca1e98" translate="yes" xml:space="preserve">
          <source>$number2(Number)</source>
          <target state="translated">$number2(Number)</target>
        </trans-unit>
        <trans-unit id="43b2501e526fd09376391fcccda367400c380484" translate="yes" xml:space="preserve">
          <source>$numbers([Number])</source>
          <target state="translated">$numbers([Number])</target>
        </trans-unit>
        <trans-unit id="4051aafe487e73507bf5496131cf62779fa3ef5c" translate="yes" xml:space="preserve">
          <source>$original(String, List) &amp;mdash; The selector being replaced. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ original（String，List）-被替换的选择器。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="a57d0758f2cb91556ca4f467dfc429903943c5cf" translate="yes" xml:space="preserve">
          <source>$red(Number)</source>
          <target state="translated">$red(Number)</target>
        </trans-unit>
        <trans-unit id="798c3a805b8123984e273d68febb77ba25c13c6b" translate="yes" xml:space="preserve">
          <source>$red(Number) &amp;mdash; The adjustment to make on the red component, between -255 and 255 inclusive</source>
          <target state="translated">$ red（Number）&amp;mdash;对红色部分进行的调整，介于-255和255之间（含）</target>
        </trans-unit>
        <trans-unit id="92723f4144b34d094cc00a9673333b57fbc43ef1" translate="yes" xml:space="preserve">
          <source>$red(Number) &amp;mdash; The amount of red in the color. Must be between 0 and 255 inclusive or 0% and 100% inclusive</source>
          <target state="translated">$ red（Number）&amp;mdash;颜色中红色的数量。必须介于0到255（含）之间或0％和100％（含）之间</target>
        </trans-unit>
        <trans-unit id="41d73eede7db26451e2796a323ab3c322c42a6c1" translate="yes" xml:space="preserve">
          <source>$red(Number) &amp;mdash; The amount of red in the color. Must be between 0 and 255 inclusive, or between 0% and 100% inclusive</source>
          <target state="translated">$ red（Number）&amp;mdash;颜色中红色的数量。必须介于0到255之间（包括0和255之间）</target>
        </trans-unit>
        <trans-unit id="c9f01a8eca90071b747628ac46af03eb4fce7de6" translate="yes" xml:space="preserve">
          <source>$red(Number) &amp;mdash; The new red component for the color, within 0 and 255 inclusive</source>
          <target state="translated">$ red（Number）&amp;mdash;颜色的新红色分量，介于0和255之间（包括0和255）</target>
        </trans-unit>
        <trans-unit id="c1d604666547e844a97c584ca9376f2c4d36ee6b" translate="yes" xml:space="preserve">
          <source>$replacement(String, List) &amp;mdash; The selector that $original is being replaced with. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ replacement（String，List）&amp;mdash;用$ original替换的选择器。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="ce6106fb69799614ff596c8e316f01b7b3f946ef" translate="yes" xml:space="preserve">
          <source>$saturation(Number)</source>
          <target state="translated">$saturation(Number)</target>
        </trans-unit>
        <trans-unit id="291affa33ee07115b4bba6472c94ff847aa684a7" translate="yes" xml:space="preserve">
          <source>$saturation(Number) &amp;mdash; The adjustment to make on the saturation component, between -100% and 100% inclusive</source>
          <target state="translated">$ saturation（Number）&amp;mdash;对饱和度分量进行的调整，介于-100％和100％之间（含）</target>
        </trans-unit>
        <trans-unit id="9d180f3a53fc6a3bf73744f5a040453cacf280a5" translate="yes" xml:space="preserve">
          <source>$saturation(Number) &amp;mdash; The new saturation component for the color, between 0% and 100% inclusive</source>
          <target state="translated">$ saturation（Number）&amp;mdash;颜色的新饱和度分量，介于0％和100％之间（包括0和100％）</target>
        </trans-unit>
        <trans-unit id="0c08c7463650e99010c468991a17a126731ddd98" translate="yes" xml:space="preserve">
          <source>$saturation(Number) &amp;mdash; The saturation of the color. Must be between 0% and 100%, inclusive</source>
          <target state="translated">$ saturation（Number）&amp;mdash;颜色的饱和度。必须介于0％和100％之间（含）</target>
        </trans-unit>
        <trans-unit id="906a8fd2fe1083adbcb7832fd6f28ce7b5dc0b2b" translate="yes" xml:space="preserve">
          <source>$selector(String) &amp;mdash; The compound selector whose simple selectors will be extracted.</source>
          <target state="translated">$ selector（String）&amp;mdash;将提取其简单选择器的复合选择器。</target>
        </trans-unit>
        <trans-unit id="175ca91fcad6b59341ed535bf73d3a07476be10d" translate="yes" xml:space="preserve">
          <source>$selector(String, List) &amp;mdash; The selector to parse. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ selector（String，List）&amp;mdash;要解析的选择器。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="3053a1586bacba2a03898e61dd7f5f0ffd38a29c" translate="yes" xml:space="preserve">
          <source>$selector(String, List) &amp;mdash; The selector within which $extendee is extended with $extender. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ selector（String，List）&amp;mdash;使用$ extender扩展$ extendee的选择器。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="c4bd009e7d163201ef79d8985a477e51d952f4a9" translate="yes" xml:space="preserve">
          <source>$selector(String, List) &amp;mdash; The selector within which $original is replaced with $replacement. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ selector（String，List）&amp;mdash;用$ replacement替换$ original的选择器。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="5e8b84dd3acb7c4f8c1c63e2657d637e27f25571" translate="yes" xml:space="preserve">
          <source>$selector1(String, List) &amp;mdash; The first selector to be unified. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ selector1（String，List）&amp;mdash;第一个要统一的选择器。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="72013d9652b48742e23cc46a1ca9faf8a7af2722" translate="yes" xml:space="preserve">
          <source>$selector2(String, List) &amp;mdash; The second selector to be unified. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ selector2（String，List）-要统一的第二个选择器。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="0b2440e10188cbef3f6d81482b0f01901fcf948d" translate="yes" xml:space="preserve">
          <source>$selectors([String, List]) &amp;mdash; The selectors to append. At least one selector must be passed. Each of these can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ selectors（[String，List]）-要追加的选择器。必须至少传递一个选择器。其中的每一个可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="207ad637dbe90ccb2249c10e8120ea12c5c0902d" translate="yes" xml:space="preserve">
          <source>$selectors([String, List]) &amp;mdash; The selectors to nest. At least one selector must be passed. Each of these can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ selectors（[String，List]）&amp;mdash;要嵌套的选择器。必须至少传递一个选择器。其中的每一个可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="f1f6f8d10ba742a11fbf421da52f2c803af51e06" translate="yes" xml:space="preserve">
          <source>$separator(String) &amp;mdash; The list separator to use. If this is comma or space, that separator will be used. If this is auto (the default), the separator is determined as explained above.</source>
          <target state="translated">$ separator（String）&amp;mdash;要使用的列表分隔符。如果是逗号或空格，则将使用该分隔符。如果这是自动的（默认设置），则如上所述确定分隔符。</target>
        </trans-unit>
        <trans-unit id="7dcf8196b59c8052cf1dd930e6b38d362d6c4f4a" translate="yes" xml:space="preserve">
          <source>$start-at(Number) &amp;mdash; The index of the first character of the substring. If this is negative, it counts from the end of $string</source>
          <target state="translated">$ start-at（Number）&amp;mdash;子字符串的第一个字符的索引。如果为负，则从$ string的末尾开始计数</target>
        </trans-unit>
        <trans-unit id="3a56e6782813e0edce7da80613ff481aa3e07f98" translate="yes" xml:space="preserve">
          <source>$string(String)</source>
          <target state="translated">$string(String)</target>
        </trans-unit>
        <trans-unit id="b7882e9f45679cabd8885bccb1435aa6f2be6fc9" translate="yes" xml:space="preserve">
          <source>$sub(String, List) &amp;mdash; The potential subselector. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ sub（String，List）&amp;mdash;潜在的子选择器。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="86c6ff58d3029ae6a144ad65d31b59cb6e6e9a68" translate="yes" xml:space="preserve">
          <source>$substring(String)</source>
          <target state="translated">$substring(String)</target>
        </trans-unit>
        <trans-unit id="9e5a3b6cb469d5e8724fecfa38464a23b5035fb2" translate="yes" xml:space="preserve">
          <source>$super(String, List) &amp;mdash; The potential superselector. This can be either a string, a list of strings, or a list of lists of strings as returned by &amp;amp;.</source>
          <target state="translated">$ super（String，List）&amp;mdash;潜在的超级选择器。它可以是字符串，字符串列表，也可以是＆返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="97aadf708863cd8ded82f9965f0d4e01d61f7850" translate="yes" xml:space="preserve">
          <source>$val(Base)</source>
          <target state="translated">$val(Base)</target>
        </trans-unit>
        <trans-unit id="ba3f47ff0a6f87d69cc4fcef875688433d150be2" translate="yes" xml:space="preserve">
          <source>$value(Base)</source>
          <target state="translated">$value(Base)</target>
        </trans-unit>
        <trans-unit id="d619da5f18b07a45fae50f3af46f8f3c9b0e53a6" translate="yes" xml:space="preserve">
          <source>$value(Base) &amp;mdash; The new value at index $n.</source>
          <target state="translated">$ value（Base）&amp;mdash;索引为$ n的新值。</target>
        </trans-unit>
        <trans-unit id="406f15245451684e3bc3de1deb497fb15e7b9bc2" translate="yes" xml:space="preserve">
          <source>$value(Base) &amp;mdash; The value to inspect</source>
          <target state="translated">$ value（Base）&amp;mdash;要检查的值</target>
        </trans-unit>
        <trans-unit id="7b24cc0c1eed124fecce2d53a5f8b0c0ae67c1b3" translate="yes" xml:space="preserve">
          <source>$value(Base) &amp;mdash; The value to inspect.</source>
          <target state="translated">$ value（Base）&amp;mdash;要检查的值。</target>
        </trans-unit>
        <trans-unit id="321a7e9f953ae1f002b9bb4cb945dd815481cd0c" translate="yes" xml:space="preserve">
          <source>$weight(Number) &amp;mdash; The relative weight of each color. Closer to 100% gives more weight to $color1, closer to 0% gives more weight to $color2</source>
          <target state="translated">$ weight（Number）&amp;mdash;每种颜色的相对权重。接近100％赋予$ color1更多的权重，接近0％赋予$ color2更多的权重</target>
        </trans-unit>
        <trans-unit id="0b722ab989a38e4f2d6eb165bbe03da1cc7f9428" translate="yes" xml:space="preserve">
          <source>$weight(Number) &amp;mdash; The relative weight of the color color's inverse</source>
          <target state="translated">$ weight（Number）&amp;mdash;颜色的倒数的相对权重</target>
        </trans-unit>
        <trans-unit id="ade264c74c289120840d7f70464dcbb2a962da40" translate="yes" xml:space="preserve">
          <source>%placeholder selector</source>
          <target state="translated">％占位符选择器</target>
        </trans-unit>
        <trans-unit id="6a0f24b1f24890ab19f8ab97584982ab5b00b91d" translate="yes" xml:space="preserve">
          <source>&amp;amp; in sassScript</source>
          <target state="translated">＆在sassScript中</target>
        </trans-unit>
        <trans-unit id="d0488cb3bf5655e2a4c1880ae9a380659c961585" translate="yes" xml:space="preserve">
          <source>&amp;amp; parent selector</source>
          <target state="translated">和父选择器</target>
        </trans-unit>
        <trans-unit id="242097204c2e06336514dab89f4cc581e13adf90" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2006&amp;ndash;2016 Hampton Catlin, Nathan Weizenbaum, and Chris Eppstein</source>
          <target state="translated">&amp;copy;2006&amp;ndash;2016 Hampton Catlin，Nathan Weizenbaum和Chris Eppstein</target>
        </trans-unit>
        <trans-unit id="e54fa0260345ff58931f0db3c6c2ffaa8f7159e2" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $alpha is out of bounds or either parameter is the wrong type</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ alpha超出范围或任一参数的类型错误</target>
        </trans-unit>
        <trans-unit id="e1b81ef6cf445c978cad23278c374aac690162b4" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $amount is out of bounds, or either parameter is the wrong type</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ amount超出范围，或者任何一个参数是错误的类型</target>
        </trans-unit>
        <trans-unit id="46f6fb168025c877f41a090e5ae0c03e6302310b" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $args isn't a variable argument list</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ args不是变量参数列表</target>
        </trans-unit>
        <trans-unit id="a6deb5c848f8161c0d015f81b7e177b27311652a" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $color isn't a color</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ color不是颜色</target>
        </trans-unit>
        <trans-unit id="e43c323144d5a98765a551319d6a45ca0bb93a30" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $color isn't a color or $weight isn't a percentage between 0% and 100%</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ color不是颜色或$ weight不是介于0％和100％之间的百分比</target>
        </trans-unit>
        <trans-unit id="c4bff3355dd2286e20d3da67a6e6b9ecd267bcc1" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $feature isn't a string</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ feature不是字符串</target>
        </trans-unit>
        <trans-unit id="bcafcf95213de1ac106629f316339d893aca92ce" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $map is not a map</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ map不是地图</target>
        </trans-unit>
        <trans-unit id="80caebfe127488f6e9d8b23ed6d2324f1c3e2676" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $n isn't an integer between 1 and the length of $list</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ n不是1到$ list长度之间的整数</target>
        </trans-unit>
        <trans-unit id="c3b658394b6faef361fabac36d0a43c629035bfe" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $number isn't a number</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ number不是数字</target>
        </trans-unit>
        <trans-unit id="3518a7a8ccb351b3802173336709457558caa570" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $number isn't a unitless number</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ number不是一个无单位数</target>
        </trans-unit>
        <trans-unit id="171ec8c0b8effabc24a66eef088cbe7c2c92a4e5" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $saturation or $lightness are out of bounds or any parameter is the wrong type</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ saturation或$ lightness超出范围或任何参数的类型错误</target>
        </trans-unit>
        <trans-unit id="2f52f9f750a0917524c32e9217f68c98474beced" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $saturation, $lightness, or $alpha are out of bounds or any parameter is the wrong type</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ saturation，$ lightness或$ alpha超出范围或任何参数的类型错误</target>
        </trans-unit>
        <trans-unit id="7c75d0ebe95b2fac4c53ce8b1b09199fbe3f7fcf" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $string isn't a string</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ string不是字符串</target>
        </trans-unit>
        <trans-unit id="3284ef50210ffade5065fb9d2f6b1ee12d21c670" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if $weight is out of bounds or any parameter is the wrong type</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ weight超出范围或任何参数的类型错误</target>
        </trans-unit>
        <trans-unit id="768e36d7aa430ddd1b065f1676fadc3ce8c756d8" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if a selector could not be appended.</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果无法附加选择器。</target>
        </trans-unit>
        <trans-unit id="673dda1b8a0e4975fddc6b70b1a3024642c790c1" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if any argument isn't a number, or if not all of the arguments have comparable units</source>
          <target state="translated">（ArgumentError）-如果任何参数不是数字，或者不是所有参数都具有可比较的单位</target>
        </trans-unit>
        <trans-unit id="ca2e974ba89d223892bab2a252ad046934be97d1" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if any parameter is the wrong type</source>
          <target state="translated">（ArgumentError）-如果任何参数的类型错误</target>
        </trans-unit>
        <trans-unit id="027c57fa858e9aafe1ce4619a5441a9095e6f8df" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if any parameter is the wrong type or out of bounds</source>
          <target state="translated">（ArgumentError）-如果任何参数的类型错误或超出范围</target>
        </trans-unit>
        <trans-unit id="dc60a244c2021634cafa123207c2c0d029a3048c" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if any parameter is the wrong type or out-of bounds, or if RGB properties and HSL properties are adjusted at the same time</source>
          <target state="translated">（ArgumentError）-如果任何参数的类型错误或超出范围，或者同时调整了RGB属性和HSL属性</target>
        </trans-unit>
        <trans-unit id="dcb9bfc77c1e9f0c141f5e016f4816072bdd3456" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if either parameter is not a map</source>
          <target state="translated">（ArgumentError）-如果任一参数都不是地图</target>
        </trans-unit>
        <trans-unit id="a5e989041121cbe7f03cf63b315dc48588db2720" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if either parameter is the wrong type</source>
          <target state="translated">（ArgumentError）-如果任一参数的类型错误</target>
        </trans-unit>
        <trans-unit id="691b2dedf2eb8440d21f7621147afc4b29b13d2f" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if the $limit is not 1 or greater</source>
          <target state="translated">（ArgumentError）&amp;mdash;如果$ limit不等于1或更大</target>
        </trans-unit>
        <trans-unit id="074e319448c3f3e3fbbe104ab373ac952b9dd24f" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if the extension fails</source>
          <target state="translated">（ArgumentError）-如果扩展失败</target>
        </trans-unit>
        <trans-unit id="c616cceb9428111e795eb79f1092387c3c2075b6" translate="yes" xml:space="preserve">
          <source>(ArgumentError) &amp;mdash; if the replacement fails</source>
          <target state="translated">（ArgumentError）-如果替换失败</target>
        </trans-unit>
        <trans-unit id="bc31501c25d526ffb38aafac62998004cbd12253" translate="yes" xml:space="preserve">
          <source>(Base)</source>
          <target state="translated">(Base)</target>
        </trans-unit>
        <trans-unit id="84c492f5bba42c95939fad73c5276f48bc71cf2c" translate="yes" xml:space="preserve">
          <source>(Base) &amp;mdash; $if-true or $if-false</source>
          <target state="translated">（基础）-$ if-true或$ if-false</target>
        </trans-unit>
        <trans-unit id="66ad9a9aafd4f5694179598a848ce1a5270606c9" translate="yes" xml:space="preserve">
          <source>(Base) &amp;mdash; The value indexed by $key, or null if the map doesn't contain the given key</source>
          <target state="translated">（基础）&amp;mdash;由$ key索引的值；如果地图不包含给定的键，则返回null</target>
        </trans-unit>
        <trans-unit id="32da5f08bda277a5a9388d20de4d9872c4b6a951" translate="yes" xml:space="preserve">
          <source>(Bool)</source>
          <target state="translated">(Bool)</target>
        </trans-unit>
        <trans-unit id="d8e9b251e06fba7eff71457cabe4b7f32e2ba05a" translate="yes" xml:space="preserve">
          <source>(Bool) &amp;mdash; Whether $selector1 is a superselector of $selector2.</source>
          <target state="translated">（布尔）&amp;mdash; $ selector1是否是$ selector2的超选择器。</target>
        </trans-unit>
        <trans-unit id="32c233e222c33d346fad81bd186987a7de49c735" translate="yes" xml:space="preserve">
          <source>(Bool) &amp;mdash; Whether a content block was passed to the mixin.</source>
          <target state="translated">（布尔）-是否将内容块传递给mixin。</target>
        </trans-unit>
        <trans-unit id="3a44f746b5413a8a251e9109d746a49c7c7b00af" translate="yes" xml:space="preserve">
          <source>(Bool) &amp;mdash; Whether the feature is supported in this version of Sass</source>
          <target state="translated">（布尔）&amp;mdash;此版本的Sass中是否支持该功能</target>
        </trans-unit>
        <trans-unit id="2173969f0cb2ee0b5150bdd5c9a123d6cc80f49d" translate="yes" xml:space="preserve">
          <source>(Bool) &amp;mdash; Whether the function is defined.</source>
          <target state="translated">（布尔）&amp;mdash;是否定义了功能。</target>
        </trans-unit>
        <trans-unit id="3138d59eef729098510c0110878a0e391ee74666" translate="yes" xml:space="preserve">
          <source>(Bool) &amp;mdash; Whether the mixin is defined.</source>
          <target state="translated">（布尔）&amp;mdash;是否定义了混合。</target>
        </trans-unit>
        <trans-unit id="aa61df232f25261041e4c9e1b2fb2080f5c738f3" translate="yes" xml:space="preserve">
          <source>(Bool) &amp;mdash; Whether the variable is defined in the current scope.</source>
          <target state="translated">（布尔）&amp;mdash;变量是否在当前作用域中定义。</target>
        </trans-unit>
        <trans-unit id="55df750b45e3c9c35f8835dd77e0c5ff6b0a760b" translate="yes" xml:space="preserve">
          <source>(Bool) &amp;mdash; Whether the variable is defined in the global scope.</source>
          <target state="translated">（布尔）-变量是否在全局范围内定义。</target>
        </trans-unit>
        <trans-unit id="ef925c7f563b5909a57b310c9325327231e0f7bc" translate="yes" xml:space="preserve">
          <source>(Color)</source>
          <target state="translated">(Color)</target>
        </trans-unit>
        <trans-unit id="a21b102dd81b35461c87e52cea4e16d5fba884e5" translate="yes" xml:space="preserve">
          <source>(Function) &amp;mdash; A function reference.</source>
          <target state="translated">（功能）&amp;mdash;功能参考。</target>
        </trans-unit>
        <trans-unit id="84f4fb427edc66a9b51ed0213b399c87e7fdd1c5" translate="yes" xml:space="preserve">
          <source>(List)</source>
          <target state="translated">(List)</target>
        </trans-unit>
        <trans-unit id="ab00038088151a4dcb1b9f0ee0d449e41a73e4f9" translate="yes" xml:space="preserve">
          <source>(List) &amp;mdash; A list of lists of strings representing $selector. This is in the same format as a selector returned by &amp;amp;.</source>
          <target state="translated">（列表）&amp;mdash;代表$ selector的字符串列表的列表。该格式与＆返回的选择器格式相同。</target>
        </trans-unit>
        <trans-unit id="1e4b4886fdc101f8ece99629466f8a4b5958aca0" translate="yes" xml:space="preserve">
          <source>(List) &amp;mdash; A list of lists of strings representing the result of appending $selectors. This is in the same format as a selector returned by &amp;amp;.</source>
          <target state="translated">（列表）&amp;mdash;表示附加$ selector的结果的字符串列表的列表。该格式与＆返回的选择器格式相同。</target>
        </trans-unit>
        <trans-unit id="ca18bc5773467cc5195976b05842618893baac49" translate="yes" xml:space="preserve">
          <source>(List) &amp;mdash; A list of lists of strings representing the result of nesting $selectors. This is in the same format as a selector returned by &amp;amp;.</source>
          <target state="translated">（列表）&amp;mdash;表示嵌套$ selector的结果的字符串列表的列表。该格式与＆返回的选择器格式相同。</target>
        </trans-unit>
        <trans-unit id="f9d864db561a641b9c1908811edc1bb10dea0f68" translate="yes" xml:space="preserve">
          <source>(List) &amp;mdash; A list of lists of strings representing the result of the extension. This is in the same format as a selector returned by &amp;amp;.</source>
          <target state="translated">（列表）&amp;mdash;表示扩展结果的字符串列表的列表。该格式与＆返回的选择器格式相同。</target>
        </trans-unit>
        <trans-unit id="d5d5ff0ccb6470d28c775aa2ba468b0a6b2fe26c" translate="yes" xml:space="preserve">
          <source>(List) &amp;mdash; A list of simple selectors in the compound selector.</source>
          <target state="translated">（列表）&amp;mdash;复合选择器中的简单选择器列表。</target>
        </trans-unit>
        <trans-unit id="a4cea87eeae6fb88977c980adeec5a22a96c3d61" translate="yes" xml:space="preserve">
          <source>(List) &amp;mdash; the list of keys, comma-separated</source>
          <target state="translated">（列表）&amp;mdash;密钥列表，以逗号分隔</target>
        </trans-unit>
        <trans-unit id="58d884e25c2b1d5d7c7306d739f0cf83d8875411" translate="yes" xml:space="preserve">
          <source>(List) &amp;mdash; the list of values, comma-separated</source>
          <target state="translated">（列表）&amp;mdash;值列表，以逗号分隔</target>
        </trans-unit>
        <trans-unit id="3dd365b822385407b9c70f4cf2139845a0a81a0c" translate="yes" xml:space="preserve">
          <source>(List, Null) &amp;mdash; A list of lists of strings representing the result of the unification, or null if no unification exists. This is in the same format as a selector returned by &amp;amp;.</source>
          <target state="translated">（List，Null）-表示统一结果的字符串列表的列表；如果不存在统一，则为null。该格式与＆返回的选择器格式相同。</target>
        </trans-unit>
        <trans-unit id="f3c758fb4abbbe82c65d10abbb597bd43879f7d5" translate="yes" xml:space="preserve">
          <source>(Map)</source>
          <target state="translated">(Map)</target>
        </trans-unit>
        <trans-unit id="035ccc46631dd65fcb1c0851abd2f949716a382d" translate="yes" xml:space="preserve">
          <source>(Number)</source>
          <target state="translated">(Number)</target>
        </trans-unit>
        <trans-unit id="7a0a0346e56d9f22e65c13050307caf600e9e30a" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; A decimal value.</source>
          <target state="translated">（数字）-一个十进制值。</target>
        </trans-unit>
        <trans-unit id="fa1d9013a7b37c458dd94ae207834c0b6999d2e8" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; An integer.</source>
          <target state="translated">（数字）&amp;mdash;一个整数。</target>
        </trans-unit>
        <trans-unit id="7f36e59bee0af8613e6628e835f96a9ebb3c7a11" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; The alpha component, between 0 and 1</source>
          <target state="translated">（数字）-Alpha分量，介于0和1之间</target>
        </trans-unit>
        <trans-unit id="a6a0e9f9140b0b6657f85512d29e576fe823a749" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; The blue component, between 0 and 255 inclusive</source>
          <target state="translated">（数字）&amp;mdash;蓝色部分，介于0和255之间（包括0和255之间）</target>
        </trans-unit>
        <trans-unit id="928ea5d71cd0b1155dd18ba9283c0a2d243007b7" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; The green component, between 0 and 255 inclusive</source>
          <target state="translated">（数字）-绿色分量，介于0和255之间（包括0和255之间）</target>
        </trans-unit>
        <trans-unit id="59a027d953db15cf5ce5f2487f7b71422857710d" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; The hue component, between 0deg and 360deg</source>
          <target state="translated">（数字）&amp;mdash;色度分量，介于0deg和360deg之间</target>
        </trans-unit>
        <trans-unit id="309117e13f71ad11574547f925a19198f4efbfdc" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; The lightness component, between 0% and 100%</source>
          <target state="translated">（数字）&amp;mdash;亮度分量，介于0％和100％之间</target>
        </trans-unit>
        <trans-unit id="a3781fed14d7b9e81940ba7bffc59c7407c06e61" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; The red component, between 0 and 255 inclusive</source>
          <target state="translated">（数字）&amp;mdash;红色部分，介于0和255之间（包括0和255之间）</target>
        </trans-unit>
        <trans-unit id="66b3c7072b3d9d5dbe2f9f8da6644bcfd828f4cb" translate="yes" xml:space="preserve">
          <source>(Number) &amp;mdash; The saturation component, between 0% and 100%</source>
          <target state="translated">（数字）-饱和度分量，介于0％和100％之间</target>
        </trans-unit>
        <trans-unit id="8fb4a9e298e211b53c1777bced5b15239b9526e5" translate="yes" xml:space="preserve">
          <source>(Number, Null)</source>
          <target state="translated">（数字，空）</target>
        </trans-unit>
        <trans-unit id="78943f7aae0eca255fb81da9b6ae06868e64c32f" translate="yes" xml:space="preserve">
          <source>(Number, Null) &amp;mdash; The 1-based index of $value in $list, or null</source>
          <target state="translated">（数字，空）&amp;mdash; $ list中$ value的从1开始的索引，或者为null</target>
        </trans-unit>
        <trans-unit id="ca160e8fcc0d837a102bc8d0b7dd4018744cb2f8" translate="yes" xml:space="preserve">
          <source>(String)</source>
          <target state="translated">(String)</target>
        </trans-unit>
        <trans-unit id="9af1197073c44a7dd993d4c6d1acd10966e0052f" translate="yes" xml:space="preserve">
          <source>(String) &amp;mdash; A representation of the value as it would be written in Sass.</source>
          <target state="translated">（字符串）&amp;mdash;用Sass编写的值的表示形式。</target>
        </trans-unit>
        <trans-unit id="28b37f4825347fa03ae31f861df5119415bc35e0" translate="yes" xml:space="preserve">
          <source>(String) &amp;mdash; The IE-formatted string representation of the color</source>
          <target state="translated">（字符串）&amp;mdash;颜色的IE格式的字符串表示形式</target>
        </trans-unit>
        <trans-unit id="4a979e236b325a07046572b9cd815aab26c44bf3" translate="yes" xml:space="preserve">
          <source>(String) &amp;mdash; The result string. This will be quoted if and only if $string was quoted</source>
          <target state="translated">（字符串）-结果字符串。仅当引用$ string时才引用</target>
        </trans-unit>
        <trans-unit id="37e8f327469125b93408b3fca12714b58cc72903" translate="yes" xml:space="preserve">
          <source>(String) &amp;mdash; The substring. This will be quoted if and only if $string was quoted</source>
          <target state="translated">（字符串）&amp;mdash;子字符串。仅当引用$ string时才引用</target>
        </trans-unit>
        <trans-unit id="d1db760774961a315aa6be942b05536a64b3587d" translate="yes" xml:space="preserve">
          <source>(String) &amp;mdash; The unit(s) of the number, as a quoted string</source>
          <target state="translated">（字符串）&amp;mdash;数字的单位，带引号的字符串</target>
        </trans-unit>
        <trans-unit id="ebe205910840809edf252e53514dfd407b3eae0c" translate="yes" xml:space="preserve">
          <source>(String) &amp;mdash; The unquoted string name of the value's type</source>
          <target state="translated">（字符串）&amp;mdash;值类型的未引号的字符串名称</target>
        </trans-unit>
        <trans-unit id="3d1255224e8cdf7b565ec94191aaa4667a577020" translate="yes" xml:space="preserve">
          <source>(String) &amp;mdash; comma or space</source>
          <target state="translated">（字符串）-逗号或空格</target>
        </trans-unit>
        <trans-unit id="3bbbbc118923710ed46bbdeac7efac99094d6d20" translate="yes" xml:space="preserve">
          <source>...or by passing an options hash to &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Engine.html#initialize-instance_method&quot;&gt;Sass::Engine#initialize&lt;/a&gt;. All relevant options are also available via flags to the &lt;code&gt;sass&lt;/code&gt; and &lt;code&gt;scss&lt;/code&gt; command-line executables. Available options are:</source>
          <target state="translated">...或通过将选项哈希传递给&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Engine.html#initialize-instance_method&quot;&gt;Sass :: Engine＃initialize&lt;/a&gt;。所有相关选项也可以通过标志提供给 &lt;code&gt;sass&lt;/code&gt; 和 &lt;code&gt;scss&lt;/code&gt; 命令行可执行文件。可用的选项有：</target>
        </trans-unit>
        <trans-unit id="4bbb05d1b253167b77da50c1d1fcf4f8edcab069" translate="yes" xml:space="preserve">
          <source>...or by setting the &lt;code&gt;Merb::Plugin.config[:sass]&lt;/code&gt; hash in &lt;code&gt;init.rb&lt;/code&gt; in Merb...</source>
          <target state="translated">...或通过在 &lt;code&gt;Merb::Plugin.config[:sass]&lt;/code&gt; &lt;code&gt;init.rb&lt;/code&gt; 中设置Merb :: Plugin.config [：sass]哈希...</target>
        </trans-unit>
        <trans-unit id="18531e8b77b0ff841e0fd518e79f54f908b065fe" translate="yes" xml:space="preserve">
          <source>:compact</source>
          <target state="translated">:compact</target>
        </trans-unit>
        <trans-unit id="b387b5a70b59f32a0b2ff1a3e67f25bd7909dc8c" translate="yes" xml:space="preserve">
          <source>:compressed</source>
          <target state="translated">:compressed</target>
        </trans-unit>
        <trans-unit id="f5fb440ab0545653958cbc733de32344fc1d3a78" translate="yes" xml:space="preserve">
          <source>:expanded</source>
          <target state="translated">:expanded</target>
        </trans-unit>
        <trans-unit id="e72e10eca1eda8e1e0d53492174ca0d1d3ac9b89" translate="yes" xml:space="preserve">
          <source>:nested</source>
          <target state="translated">:nested</target>
        </trans-unit>
        <trans-unit id="0f2290b226aeab33c5ce4b19775b7c8b51e299c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; in SassScript #parent-script</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; in SassScript＃父脚本</target>
        </trans-unit>
        <trans-unit id="db4484f04fa75658b7e989eea751639085279477" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; must appear at the beginning of a compound selector, but it can be followed by a suffix that will be added to the parent selector. For example:</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; 必须出现在复合选择器的开头，但是可以在其后跟一个后缀，该后缀将添加到父选择器中。例如：</target>
        </trans-unit>
        <trans-unit id="3be48b1b9c0b668f20f9edec84fb8d31b6f07933" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; will be replaced with the parent selector as it appears in the CSS. This means that if you have a deeply nested rule, the parent selector will be fully resolved before the &lt;code&gt;&amp;amp;&lt;/code&gt; is replaced. For example:</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; 将替换为CSS中出现的父选择器。这意味着，如果您具有深层嵌套的规则，则在替换 &lt;code&gt;&amp;amp;&lt;/code&gt; 之前，父选择器将被完全解析。例如：</target>
        </trans-unit>
        <trans-unit id="65a2c5e53a3b872c472622e6bad2a4db48055e6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;/code&gt;-Rules and Directives #directives</source>
          <target state="translated">&lt;code&gt;@&lt;/code&gt; -规则和指令＃指令</target>
        </trans-unit>
        <trans-unit id="06d7120408826b63989db589015a5844679067f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@at-root (without: ...)&lt;/code&gt; and &lt;code&gt;@at-root (with: ...)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@at-root (without: ...)&lt;/code&gt; 和 &lt;code&gt;@at-root (with: ...)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c6d7f151be410aecc9c0cf086e43b40d5dc3eed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@at-root&lt;/code&gt; #at-root</source>
          <target state="translated">&lt;code&gt;@at-root&lt;/code&gt; ＃at-root</target>
        </trans-unit>
        <trans-unit id="337cff3f5971b6afd4311a912eb91bbf2763bb87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@each&lt;/code&gt; #each-directive</source>
          <target state="translated">&lt;code&gt;@each&lt;/code&gt; ＃每个指令</target>
        </trans-unit>
        <trans-unit id="41b96c9da605b44e04361598d79cd2f3791faf62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@extend&lt;/code&gt; #extend</source>
          <target state="translated">&lt;code&gt;@extend&lt;/code&gt; extend ＃扩展</target>
        </trans-unit>
        <trans-unit id="4792067a9d7b6cb233253ecefd3ff97ce2f58751" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@extend&lt;/code&gt; in Directives</source>
          <target state="translated">&lt;code&gt;@extend&lt;/code&gt; 指令中的@extend</target>
        </trans-unit>
        <trans-unit id="0c6fae8894825d87d5f8c7a64c8da6b31c2a1f26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@extend&lt;/code&gt; works by inserting the extending selector (e.g. &lt;code&gt;.seriousError&lt;/code&gt;) anywhere in the stylesheet that the extended selector (.e.g &lt;code&gt;.error&lt;/code&gt;) appears. Thus the example above:</source>
          <target state="translated">&lt;code&gt;@extend&lt;/code&gt; 通过将扩展选择器（例如 &lt;code&gt;.seriousError&lt;/code&gt; ）插入样式表中扩展选择器（例如 &lt;code&gt;.error&lt;/code&gt; ）出现的任何地方来工作。因此，上面的示例：</target>
        </trans-unit>
        <trans-unit id="07bc881dccbac1905e6edad5ffeb3d11a9e70dd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@extend&lt;/code&gt;-Only Selectors #placeholders</source>
          <target state="translated">&lt;code&gt;@extend&lt;/code&gt; -仅选择器＃占位符</target>
        </trans-unit>
        <trans-unit id="f5bec91eb86dfe7a84a9c9b1835e5ed38fca0a55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@import&lt;/code&gt; #import</source>
          <target state="translated">&lt;code&gt;@import&lt;/code&gt; import＃导入</target>
        </trans-unit>
        <trans-unit id="b73658d95ac7977a485a3891afda7f38602ea4a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@import&lt;/code&gt; takes a filename to import. By default, it looks for a Sass file to import directly, but there are a few circumstances under which it will compile to a CSS &lt;code&gt;@import&lt;/code&gt; rule:</source>
          <target state="translated">&lt;code&gt;@import&lt;/code&gt; 需要导入文件名。默认情况下，它会查找直接导入的Sass文件，但是在某些情况下，它将编译为CSS &lt;code&gt;@import&lt;/code&gt; 规则：</target>
        </trans-unit>
        <trans-unit id="3a4cbef6ae19d980221cc7d92dacabb64fa9f2e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@media&lt;/code&gt; #media</source>
          <target state="translated">&lt;code&gt;@media&lt;/code&gt; #media</target>
        </trans-unit>
        <trans-unit id="e5bad2df7dc3925893a9d5eed424bfe121ac528b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@media&lt;/code&gt; directives in Sass behave just like they do in plain CSS, with one extra capability: they can be nested in CSS rules. If a &lt;code&gt;@media&lt;/code&gt; directive appears within a CSS rule, it will be bubbled up to the top level of the stylesheet, putting all the selectors on the way inside the rule. This makes it easy to add media-specific styles without having to repeat selectors or break the flow of the stylesheet. For example:</source>
          <target state="translated">&lt;code&gt;@media&lt;/code&gt; Sass中的@media指令的行为就像在普通CSS中一样，具有一项额外的功能：它们可以嵌套在CSS规则中。如果 &lt;code&gt;@media&lt;/code&gt; 指令出现在CSS规则内，它将冒泡到样式表的顶层，从而将所有选择器置于规则内。这样就可以轻松添加特定于媒体的样式，而不必重复选择器或中断样式表的流程。例如：</target>
        </trans-unit>
        <trans-unit id="0d3c576ea379cf576f223b9b071de41f6560ebe0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@media&lt;/code&gt; queries can also be nested within one another. The queries will then be combined using the &lt;code&gt;and&lt;/code&gt; operator. For example:</source>
          <target state="translated">&lt;code&gt;@media&lt;/code&gt; 查询也可以彼此嵌套。然后将使用 &lt;code&gt;and&lt;/code&gt; 运算符组合查询。例如：</target>
        </trans-unit>
        <trans-unit id="2385ae13a1a5e2e7af235ef143d57ffc199c3bab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;at-error&lt;/code&gt; indicates that the Sass &lt;code&gt;@error&lt;/code&gt; directive is supported.</source>
          <target state="translated">&lt;code&gt;at-error&lt;/code&gt; 表示支持Sass &lt;code&gt;@error&lt;/code&gt; 指令。</target>
        </trans-unit>
        <trans-unit id="02b8f550fb59c6e7cbcca7f2f0c6d6de9ffd5c54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;custom-property&lt;/code&gt; indicates that the &lt;a href=&quot;https://www.w3.org/TR/css-variables-1/&quot;&gt;Custom Properties Level 1&lt;/a&gt; spec is supported. This means that custom properties are parsed statically, with only interpolation treated as SassScript.</source>
          <target state="translated">&lt;code&gt;custom-property&lt;/code&gt; 表示支持&amp;ldquo; &lt;a href=&quot;https://www.w3.org/TR/css-variables-1/&quot;&gt;自定义属性级别1&amp;rdquo;&lt;/a&gt;规范。这意味着自定义属性是静态解析的，只有插值被视为SassScript。</target>
        </trans-unit>
        <trans-unit id="08b49e8fd637e9898f905f5d8712420df43a8791" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extend-selector-pseudoclass&lt;/code&gt; indicates that &lt;code&gt;@extend&lt;/code&gt; will reach into selector pseudoclasses like &lt;code&gt;:not&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;extend-selector-pseudoclass&lt;/code&gt; &lt;code&gt;@extend&lt;/code&gt; 表示@extend将进入选择器伪类，如 &lt;code&gt;:not&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d786efc88702812f8288d5f1176e217bb454a8ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;global-variable-shadowing&lt;/code&gt; indicates that a local variable will shadow a global variable unless &lt;code&gt;!global&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;global-variable-shadowing&lt;/code&gt; 指示除非使用 &lt;code&gt;!global&lt;/code&gt; ,否则局部变量将对全局变量进行阴影处理。</target>
        </trans-unit>
        <trans-unit id="fb9fe82a9496f9cb031ec020ad5daee30964d6bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;units-level-3&lt;/code&gt; indicates full support for unit arithmetic using units defined in the &lt;a href=&quot;http://www.w3.org/TR/css3-values/&quot;&gt;Values and Units Level 3&lt;/a&gt; spec.</source>
          <target state="translated">&lt;code&gt;units-level-3&lt;/code&gt; 表示完全使用&lt;a href=&quot;http://www.w3.org/TR/css3-values/&quot;&gt;值和单位级别3&lt;/a&gt;规范中定义的单位支持单位算术。</target>
        </trans-unit>
        <trans-unit id="a6ce836227aa67152075180d778c697737a91f5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Control directives are an advanced feature, and are uncommon in day-to-day styling. They exist mainly for use in &lt;a href=&quot;#mixins&quot;&gt;mixins&lt;/a&gt;, particularly those that are part of libraries like &lt;a href=&quot;http://compass-style.org&quot;&gt;Compass&lt;/a&gt;, and so require substantial flexibility.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;控制指令是一项高级功能，在日常样式中并不常见。它们主要存在于&lt;a href=&quot;#mixins&quot;&gt;混合中&lt;/a&gt;，尤其是那些属于&lt;a href=&quot;http://compass-style.org&quot;&gt;Compass&lt;/a&gt;等库的部分，因此需要很大的灵活性。</target>
        </trans-unit>
        <trans-unit id="7b0abf7d13ed6600e5060e92a8002ebbbe4bde97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; when the &lt;code&gt;@content&lt;/code&gt; directive is specified more than once or in a loop, the style block will be duplicated with each invocation.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果多次或在循环中指定 &lt;code&gt;@content&lt;/code&gt; 指令，则每次调用都会复制样式块。</target>
        </trans-unit>
        <trans-unit id="d69f3d4b2a24c8313bb3d0b8ac837324f88fbec6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;invert&lt;/strong&gt;($color)</source>
          <target state="translated">&lt;strong&gt;invert&lt;/strong&gt;($color)</target>
        </trans-unit>
        <trans-unit id="c2e960d8c4ea3c2d0a9c5b927c6c0d0a9b47333b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;invert&lt;/strong&gt;($color, $weight:100%)</source>
          <target state="translated">&lt;strong&gt;反转&lt;/strong&gt;（$ color，$ weight：100％）</target>
        </trans-unit>
        <trans-unit id="998affe96cc2d3023b43945fdc0a99e32417046f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;random&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;random&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="19ffd7f7c2300537f6f9cc55d276a344545c0c2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;random&lt;/strong&gt;($limit)</source>
          <target state="translated">&lt;strong&gt;random&lt;/strong&gt;($limit)</target>
        </trans-unit>
        <trans-unit id="c70b56739f39853ec65ee72a8ed5a083da4f0325" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;rgba&lt;/strong&gt;($color, $alpha)</source>
          <target state="translated">&lt;strong&gt;rgba&lt;/strong&gt;（$ color，$ alpha）</target>
        </trans-unit>
        <trans-unit id="3dd3a46979033a4aec6fa3d253ba74fa27b950cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;rgba&lt;/strong&gt;($red, $green, $blue, $alpha)</source>
          <target state="translated">&lt;strong&gt;rgba&lt;/strong&gt;（$ red，$ green，$ blue，$ alpha）</target>
        </trans-unit>
        <trans-unit id="99a4a91c622a325dee3b3b9470ea62dfa23377ad" translate="yes" xml:space="preserve">
          <source>@-Rules and Directives</source>
          <target state="translated">@-规则和指令</target>
        </trans-unit>
        <trans-unit id="dcba8815d4d15801ec2f4cefdd2c2a259ddc2acb" translate="yes" xml:space="preserve">
          <source>@at-root</source>
          <target state="translated">@at-root</target>
        </trans-unit>
        <trans-unit id="ef6708134fa7004b0a92f751de2d83b4b7a0e966" translate="yes" xml:space="preserve">
          <source>@debug</source>
          <target state="translated">@debug</target>
        </trans-unit>
        <trans-unit id="5a104720fd47e5de4a82907b888ca895f1310a23" translate="yes" xml:space="preserve">
          <source>@each</source>
          <target state="translated">@each</target>
        </trans-unit>
        <trans-unit id="e9c9fd1acea7e30473cf8113ced9f44be8a1146e" translate="yes" xml:space="preserve">
          <source>@error</source>
          <target state="translated">@error</target>
        </trans-unit>
        <trans-unit id="85c52d8d21850e2499104c8dfad08304983611d2" translate="yes" xml:space="preserve">
          <source>@extend</source>
          <target state="translated">@extend</target>
        </trans-unit>
        <trans-unit id="b34b4c62edd15ca6ff9a3f5bde83ca12f4b09cb6" translate="yes" xml:space="preserve">
          <source>@for</source>
          <target state="translated">@for</target>
        </trans-unit>
        <trans-unit id="db03425959b005474abd611af6ef5e3662b26739" translate="yes" xml:space="preserve">
          <source>@function</source>
          <target state="translated">@function</target>
        </trans-unit>
        <trans-unit id="1ec590e5d8fee38b6fdcd4ef72bfa95e6f0a4e2b" translate="yes" xml:space="preserve">
          <source>@if</source>
          <target state="translated">@if</target>
        </trans-unit>
        <trans-unit id="685fc8fae398db6142746f337f47d2c9b98facef" translate="yes" xml:space="preserve">
          <source>@import</source>
          <target state="translated">@import</target>
        </trans-unit>
        <trans-unit id="15645e7890dae4357a8f002430138ef5ebf6eade" translate="yes" xml:space="preserve">
          <source>@include</source>
          <target state="translated">@include</target>
        </trans-unit>
        <trans-unit id="26e7f449aa5500e350b4c089e62efadfeb0ec524" translate="yes" xml:space="preserve">
          <source>@media</source>
          <target state="translated">@media</target>
        </trans-unit>
        <trans-unit id="4977549b85c2de13e3e29cf1d33aa5556514a430" translate="yes" xml:space="preserve">
          <source>@mixin</source>
          <target state="translated">@mixin</target>
        </trans-unit>
        <trans-unit id="88aeecad57af8adb36e5a66acad8e77aa1196762" translate="yes" xml:space="preserve">
          <source>@warn</source>
          <target state="translated">@warn</target>
        </trans-unit>
        <trans-unit id="115c4f12d1e9aef02100c94ecff9d02d0bcb2b4f" translate="yes" xml:space="preserve">
          <source>@while</source>
          <target state="translated">@while</target>
        </trans-unit>
        <trans-unit id="a03e991150701c8cabbdbd9f6368af7501c1f54e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;-&lt;/code&gt; as part of an identifier. This means that &lt;code&gt;a-1&lt;/code&gt; is an unquoted string with value &lt;code&gt;&quot;a-1&quot;&lt;/code&gt;. The only exception are units; Sass normally allows any valid identifier to be used as an identifier, but identifiers may not contain a hyphen followed by a digit. This means that &lt;code&gt;5px-3px&lt;/code&gt; is the same as &lt;code&gt;5px - 3px&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;-&lt;/code&gt; 作为标识符的一部分。这意味着 &lt;code&gt;a-1&lt;/code&gt; 是值为 &lt;code&gt;&quot;a-1&quot;&lt;/code&gt; 的未引用字符串。唯一的例外是单位；Sass通常允许将任何有效的标识符用作标识符，但是标识符不能包含连字符和数字。这意味着， &lt;code&gt;5px-3px&lt;/code&gt; 是一样的 &lt;code&gt;5px - 3px&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="193cd471bd3b45edad177bfba5675a13de659093" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;-&lt;/code&gt; at the beginning of a literal number. This indicates a negative number, so &lt;code&gt;1 -2&lt;/code&gt; is a list containing &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;-2&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;-&lt;/code&gt; 在文字数量的开始。这表示为负数，因此 &lt;code&gt;1 -2&lt;/code&gt; 是包含 &lt;code&gt;1&lt;/code&gt; 和 &lt;code&gt;-2&lt;/code&gt; 的列表。</target>
        </trans-unit>
        <trans-unit id="8c1deda0d209cd7db92983b9dbbbdf6a99566671" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;-&lt;/code&gt; before a value. This indicates the unary negation operator; that is, the operator that takes a number and returns its negative.</source>
          <target state="translated">一个 &lt;code&gt;-&lt;/code&gt; 值之前。这表示一元否定运算符；也就是说，运算符接受一个数字并返回其负数。</target>
        </trans-unit>
        <trans-unit id="adeb8c58e4817b2c6d53c42899d92470ff609f68" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;-&lt;/code&gt; between two numbers regardless of whitespace. This indicates subtraction, so &lt;code&gt;1 -$var&lt;/code&gt; are the same as &lt;code&gt;1 - $var&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;-&lt;/code&gt; 不管空格的数字介于两者之间。这表示减法，因此 &lt;code&gt;1 -$var&lt;/code&gt; 与 &lt;code&gt;1 - $var&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="61f0e1893bc2b6cc14f2eca7c7f0fd2cc148ca52" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;-&lt;/code&gt; between two numbers with no whitespace. This indicates subtraction, so &lt;code&gt;1-2&lt;/code&gt; is the same as &lt;code&gt;1 - 2&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;-&lt;/code&gt; 没有空白两个数字之间。这表示减法，所以 &lt;code&gt;1-2&lt;/code&gt; 是相同的 &lt;code&gt;1 - 2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="154fee1b2c14decf9b4de4c7e63a8439d6f45604" translate="yes" xml:space="preserve">
          <source>A common issue users encounter with named colors is that since Sass prefers the same output format as was typed in other output modes, a color interpolated into a selector becomes invalid syntax when compressed. To avoid this, always quote named colors if they are meant to be used in the construction of a selector.</source>
          <target state="translated">用户在使用命名颜色时遇到的一个常见问题是,由于Sass喜欢使用与其他输出模式相同的输出格式,因此在压缩时,插值到选择器中的颜色会变成无效的语法。为了避免这种情况,如果命名的颜色要用于构造选择器,那么总是引用它们。</target>
        </trans-unit>
        <trans-unit id="157cfd39cc5cf3a052d230d613a265d1ad77a7c8" translate="yes" xml:space="preserve">
          <source>A function reference is returned by &lt;code&gt;get-function($function-name)&lt;/code&gt;. The function can be passed to &lt;code&gt;call($function, $args...)&lt;/code&gt; and the function it refers to will be invoked. First class functions cannot be used directly as CSS output and any attempt to do so will result in an error.</source>
          <target state="translated">函数引用由 &lt;code&gt;get-function($function-name)&lt;/code&gt; 。该函数可以传递给 &lt;code&gt;call($function, $args...)&lt;/code&gt; 并且它所引用的函数将被调用。一流的函数不能直接用作CSS输出，任何尝试都会导致错误。</target>
        </trans-unit>
        <trans-unit id="d447a151cb881d0caf36f5a6221e92300eed60f3" translate="yes" xml:space="preserve">
          <source>A single selector can extend more than one selector. This means that it inherits the styles of all the extended selectors. For example:</source>
          <target state="translated">一个选择器可以扩展一个以上的选择器,这意味着它继承了所有扩展选择器的样式。这意味着它继承了所有扩展选择器的样式。例如:</target>
        </trans-unit>
        <trans-unit id="d936d1852bc4fa1a45f91f044db4e76301ff2b4b" translate="yes" xml:space="preserve">
          <source>A stylesheet trace will be printed out along with the message so that the user being warned can see where their styles caused the warning.</source>
          <target state="translated">一个样式表跟踪将和信息一起打印出来,这样被警告的用户就可以看到他们的样式在哪里引起了警告。</target>
        </trans-unit>
        <trans-unit id="fcce87dbaca01b0232b7405ed4588b438f12fbba" translate="yes" xml:space="preserve">
          <source>Add quotes to a string if the string isn't quoted, or returns the same string if it is.</source>
          <target state="translated">如果字符串没有引号,则为其添加引号,如果添加了,则返回相同的字符串。</target>
        </trans-unit>
        <trans-unit id="04291d822c581563dfd6a49a62547b404f34b725" translate="yes" xml:space="preserve">
          <source>Additionally, this makes it clear that the variables and mixins that are used within the passed block are related to the other styles around where the block is defined. For example:</source>
          <target state="translated">此外,这使得在传递的块内使用的变量和mixins与定义块的周围的其他样式有关。比如说</target>
        </trans-unit>
        <trans-unit id="5ba03095ed756d89545e8e4d45e68b6d6810f77b" translate="yes" xml:space="preserve">
          <source>Advanced features like &lt;a href=&quot;#control_directives__expressions&quot;&gt;control directives&lt;/a&gt; for libraries</source>
          <target state="translated">高级功能，例如库的&lt;a href=&quot;#control_directives__expressions&quot;&gt;控制指令&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66c9f09fb34f12aa418f1467e869a64045c7dd88" translate="yes" xml:space="preserve">
          <source>All arithmetic operations are supported for color values, where they work piecewise. This means that the operation is performed on the red, green, and blue components in turn. For example:</source>
          <target state="translated">所有的算术运算都支持对颜色值的运算,其中它们的工作原理是分片的。即依次对红、绿、蓝三部分进行运算。比如说</target>
        </trans-unit>
        <trans-unit id="7ac280ef7d6c3e0b4e951561c1a989b447c4ab88" translate="yes" xml:space="preserve">
          <source>All keys in the returned map that also appear in &lt;code&gt;$map1&lt;/code&gt; will have the same order as in &lt;code&gt;$map1&lt;/code&gt;. New keys from &lt;code&gt;$map2&lt;/code&gt; will be placed at the end of the map.</source>
          <target state="translated">在返回的映射的所有键也出现在 &lt;code&gt;$map1&lt;/code&gt; 将有相同的顺序在 &lt;code&gt;$map1&lt;/code&gt; 。来自 &lt;code&gt;$map2&lt;/code&gt; 新键将放置在地图的末尾。</target>
        </trans-unit>
        <trans-unit id="a43e8e47594b3afd03b0a150ad739fa90b6060b3" translate="yes" xml:space="preserve">
          <source>All properties are optional. You can't specify both RGB properties (&lt;code&gt;$red&lt;/code&gt;, &lt;code&gt;$green&lt;/code&gt;, &lt;code&gt;$blue&lt;/code&gt;) and HSL properties (&lt;code&gt;$hue&lt;/code&gt;, &lt;code&gt;$saturation&lt;/code&gt;, &lt;code&gt;$value&lt;/code&gt;) at the same time.</source>
          <target state="translated">所有属性都是可选的。您不能同时指定RGB属性（ &lt;code&gt;$red&lt;/code&gt; ， &lt;code&gt;$green&lt;/code&gt; ， &lt;code&gt;$blue&lt;/code&gt; ）和HSL属性（ &lt;code&gt;$hue&lt;/code&gt; ， &lt;code&gt;$saturation&lt;/code&gt; ， &lt;code&gt;$value&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="125bea08d893381e5572473ba0429c3294a3b5a5" translate="yes" xml:space="preserve">
          <source>All properties are optional. You can't specify both RGB properties (&lt;code&gt;$red&lt;/code&gt;, &lt;code&gt;$green&lt;/code&gt;, &lt;code&gt;$blue&lt;/code&gt;) and HSL properties (&lt;code&gt;$saturation&lt;/code&gt;, &lt;code&gt;$value&lt;/code&gt;) at the same time.</source>
          <target state="translated">所有属性都是可选的。您不能同时指定RGB属性（ &lt;code&gt;$red&lt;/code&gt; ， &lt;code&gt;$green&lt;/code&gt; ， &lt;code&gt;$blue&lt;/code&gt; ）和HSL属性（ &lt;code&gt;$saturation&lt;/code&gt; ， &lt;code&gt;$value&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="fe6cb7ea0921a92ae0f6e5d105fbf75a3e817b44" translate="yes" xml:space="preserve">
          <source>All types support equality operations (&lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;). In addition, each type has its own operations that it has special support for.</source>
          <target state="translated">所有类型都支持相等操作（ &lt;code&gt;==&lt;/code&gt; 和 &lt;code&gt;!=&lt;/code&gt; ）。此外，每种类型都有其自己的操作，并且有特殊的支持。</target>
        </trans-unit>
        <trans-unit id="86543bbb7632f613befb35c7c5a32aa40aba5a10" translate="yes" xml:space="preserve">
          <source>Although most of the time it's most useful to just have &lt;code&gt;@import&lt;/code&gt;s at the top level of the document, it is possible to include them within CSS rules and &lt;code&gt;@media&lt;/code&gt; rules. Like a base-level &lt;code&gt;@import&lt;/code&gt;, this includes the contents of the &lt;code&gt;@import&lt;/code&gt;ed file. However, the imported rules will be nested in the same place as the original &lt;code&gt;@import&lt;/code&gt;.</source>
          <target state="translated">尽管在大多数情况下，仅在文档的顶层使用 &lt;code&gt;@import&lt;/code&gt; 是最有用的，但可以将它们包含在CSS规则和 &lt;code&gt;@media&lt;/code&gt; 规则中。像基本级别的 &lt;code&gt;@import&lt;/code&gt; 一样，它包含 &lt;code&gt;@import&lt;/code&gt; ed文件的内容。但是，导入的规则将与原始 &lt;code&gt;@import&lt;/code&gt; 嵌套在同一位置。</target>
        </trans-unit>
        <trans-unit id="a608b14eba2288e2c695734f2e5da81c70252082" translate="yes" xml:space="preserve">
          <source>Although the default CSS style that Sass outputs is very nice and reflects the structure of the document, tastes and needs vary and so Sass supports several other styles.</source>
          <target state="translated">虽然Sass输出的默认CSS样式非常漂亮,反映了文档的结构,但口味和需求各不相同,所以Sass支持其他几种样式。</target>
        </trans-unit>
        <trans-unit id="51c7b2caff14a4ce17e1878713a21b3e03395c01" translate="yes" xml:space="preserve">
          <source>And our styles like so:</source>
          <target state="translated">我们的风格也是如此。</target>
        </trans-unit>
        <trans-unit id="db27dd45d29e037a2764d34fc2ed6dd2c10bb8f6" translate="yes" xml:space="preserve">
          <source>Any CSS color expression returns a SassScript Color value. This includes &lt;a href=&quot;https://github.com/nex3/sass/blob/stable/lib/sass/script/value/color.rb#L28-L180&quot;&gt;a large number of named colors&lt;/a&gt; which are indistinguishable from unquoted strings.</source>
          <target state="translated">任何CSS颜色表达式都将返回SassScript Color值。这包括&lt;a href=&quot;https://github.com/nex3/sass/blob/stable/lib/sass/script/value/color.rb#L28-L180&quot;&gt;大量&lt;/a&gt;与未引用的字符串无法区分的命名颜色。</target>
        </trans-unit>
        <trans-unit id="4be6e1118bd7462315e6716d0fbb6daeccd31965" translate="yes" xml:space="preserve">
          <source>Appends a single value onto the end of a list.</source>
          <target state="translated">在列表的末尾添加一个单值。</target>
        </trans-unit>
        <trans-unit id="cce2c3d65ec0dc7853ed2b80248b0b728a086f97" translate="yes" xml:space="preserve">
          <source>Arguments #mixin-arguments</source>
          <target state="translated">Arguments #mixin-arguments</target>
        </trans-unit>
        <trans-unit id="2269a199612acebe7dd279929b879be6d949bb79" translate="yes" xml:space="preserve">
          <source>Arithmetic operations also work between numbers and colors, also piecewise. For example:</source>
          <target state="translated">算术运算在数字和颜色之间也可以进行,也是分片计算。比如说</target>
        </trans-unit>
        <trans-unit id="5618067f9273165ba4197092d7b80ae6148d2216" translate="yes" xml:space="preserve">
          <source>As with mixins, you can call Sass-defined functions using keyword arguments. In the above example we could have called the function like this:</source>
          <target state="translated">和 mixins 一样,你可以使用关键字参数来调用 Sass 定义的函数。在上面的例子中,我们可以这样调用函数。</target>
        </trans-unit>
        <trans-unit id="9dc163a318ec71495b41ecd8cab7d3c17ef17bba" translate="yes" xml:space="preserve">
          <source>As you can see functions can access any globally defined variables as well as accept arguments just like a mixin. A function may have several statements contained within it, and you must call &lt;code&gt;@return&lt;/code&gt; to set the return value of the function.</source>
          <target state="translated">如您所见，函数可以访问任何全局定义的变量，也可以像mixin一样接受参数。一个函数中可能包含多个语句，您必须调用 &lt;code&gt;@return&lt;/code&gt; 来设置函数的返回值。</target>
        </trans-unit>
        <trans-unit id="e949293bb3141d39921183faafd54e8bcb4089c2" translate="yes" xml:space="preserve">
          <source>Becomes:</source>
          <target state="translated">Becomes:</target>
        </trans-unit>
        <trans-unit id="807b1864fdb6805b8347ae2bc9a6c20e8e44cbff" translate="yes" xml:space="preserve">
          <source>Boolean Operations</source>
          <target state="translated">布尔运算</target>
        </trans-unit>
        <trans-unit id="30d9ef559552bdd87313d89c8796d8136275e739" translate="yes" xml:space="preserve">
          <source>Boolean operations</source>
          <target state="translated">布尔运算</target>
        </trans-unit>
        <trans-unit id="3aaeedb59d7c28a348007b7773439ae8e9886ef7" translate="yes" xml:space="preserve">
          <source>Bracketed Lists</source>
          <target state="translated">括号内的列表</target>
        </trans-unit>
        <trans-unit id="a6f6a57b5a3f46981dddd10346050b6e06f08985" translate="yes" xml:space="preserve">
          <source>But this is an error:</source>
          <target state="translated">但这是一个错误。</target>
        </trans-unit>
        <trans-unit id="abce43ffefd078f9142d010888db83a79e434b11" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;@at-root&lt;/code&gt; just excludes selectors. However, it's also possible to use &lt;code&gt;@at-root&lt;/code&gt; to move outside of nested directives such as &lt;code&gt;@media&lt;/code&gt; as well. For example:</source>
          <target state="translated">默认情况下， &lt;code&gt;@at-root&lt;/code&gt; 仅排除选择器。但是，也可以使用 &lt;code&gt;@at-root&lt;/code&gt; 移到嵌套指令（例如 &lt;code&gt;@media&lt;/code&gt; )之外。例如：</target>
        </trans-unit>
        <trans-unit id="2fe88cde95e84d01f471f4a3ab36323da21b80f2" translate="yes" xml:space="preserve">
          <source>By default, Sass caches compiled templates and &lt;a href=&quot;#partials&quot;&gt;partials&lt;/a&gt;. This dramatically speeds up re-compilation of large collections of Sass files, and works best if the Sass templates are split up into separate files that are all &lt;a href=&quot;#import&quot;&gt;&lt;code&gt;@import&lt;/code&gt;&lt;/a&gt;ed into one large file.</source>
          <target state="translated">默认情况下，Sass缓存已编译的模板和&lt;a href=&quot;#partials&quot;&gt;partials&lt;/a&gt;。这大大加快了上海社会科学院文件大集合重新编译，如果萨斯模板分成单独的文件都是最有效&lt;a href=&quot;#import&quot;&gt; &lt;code&gt;@import&lt;/code&gt; &lt;/a&gt;编辑成一个大文件。</target>
        </trans-unit>
        <trans-unit id="052f3e4c4c42a6510daac6e1643c59d2771b0017" translate="yes" xml:space="preserve">
          <source>By default, if two values are placed next to one another, they are concatenated with a space:</source>
          <target state="translated">默认情况下,如果两个值相邻放置,它们会用空格连接。</target>
        </trans-unit>
        <trans-unit id="f135828b4bad3068ebe91784e7665129f7d3105b" translate="yes" xml:space="preserve">
          <source>CSS Extensions</source>
          <target state="translated">CSS扩展</target>
        </trans-unit>
        <trans-unit id="11c9caba726875048627b11ab3c9553ebeaae46d" translate="yes" xml:space="preserve">
          <source>CSS allows &lt;code&gt;/&lt;/code&gt; to appear in property values as a way of separating numbers. Since SassScript is an extension of the CSS property syntax, it must support this, while also allowing &lt;code&gt;/&lt;/code&gt; to be used for division. This means that by default, if two numbers are separated by &lt;code&gt;/&lt;/code&gt; in SassScript, then they will appear that way in the resulting CSS.</source>
          <target state="translated">CSS允许 &lt;code&gt;/&lt;/code&gt; 出现在属性值中，以分隔数字。由于SassScript是CSS属性语法的扩展，因此它必须支持它，同时还允许 &lt;code&gt;/&lt;/code&gt; 用于除法。这意味着默认情况下，如果两个数字在SassScript中由 &lt;code&gt;/&lt;/code&gt; 分隔，则它们将以这种方式出现在结果CSS中。</target>
        </trans-unit>
        <trans-unit id="ba1cdda9f66bf797708dfc5b937fc63323ce3238" translate="yes" xml:space="preserve">
          <source>CSS has quite a few properties that are in &quot;namespaces;&quot; for instance, &lt;code&gt;font-family&lt;/code&gt;, &lt;code&gt;font-size&lt;/code&gt;, and &lt;code&gt;font-weight&lt;/code&gt; are all in the &lt;code&gt;font&lt;/code&gt; namespace. In CSS, if you want to set a bunch of properties in the same namespace, you have to type it out each time. Sass provides a shortcut for this: just write the namespace once, then nest each of the sub-properties within it. For example:</source>
          <target state="translated">CSS具有&amp;ldquo;命名空间&amp;rdquo;中的许多属性。例如， &lt;code&gt;font-family&lt;/code&gt; ， &lt;code&gt;font-size&lt;/code&gt; 和 &lt;code&gt;font-weight&lt;/code&gt; 都在 &lt;code&gt;font&lt;/code&gt; 名称空间中。在CSS中，如果要在同一名称空间中设置一堆属性，则必须每次将其键入。 Sass为此提供了一个捷径：只需编写一次名称空间，然后在其中嵌套每个子属性。例如：</target>
        </trans-unit>
        <trans-unit id="ad57f67b80e922568da5789930eb46aea8f12fa9" translate="yes" xml:space="preserve">
          <source>CSS specifies two kinds of strings: those with quotes, such as &lt;code&gt;&quot;Lucida Grande&quot;&lt;/code&gt; or &lt;code&gt;'http://sass-lang.com'&lt;/code&gt;, and those without quotes, such as &lt;code&gt;sans-serif&lt;/code&gt; or &lt;code&gt;bold&lt;/code&gt;. SassScript recognizes both kinds, and in general if one kind of string is used in the Sass document, that kind of string will be used in the resulting CSS.</source>
          <target state="translated">CSS指定两种字符串：带引号的字符串（例如 &lt;code&gt;&quot;Lucida Grande&quot;&lt;/code&gt; 或 &lt;code&gt;'http://sass-lang.com'&lt;/code&gt; ）和不带引号的字符串（例如 &lt;code&gt;sans-serif&lt;/code&gt; 或 &lt;code&gt;bold&lt;/code&gt; )。SassScript可以识别两种类型，并且通常，如果在Sass文档中使用一种字符串，则在生成的CSS中将使用这种字符串。</target>
        </trans-unit>
        <trans-unit id="1133721a8c022238bccc194ce97bed010598bd2e" translate="yes" xml:space="preserve">
          <source>Cache Stores</source>
          <target state="translated">缓存库</target>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="73c612fa492373c12b00ddfaacb6f97332482cb4" translate="yes" xml:space="preserve">
          <source>Chaining Extends</source>
          <target state="translated">链式延伸</target>
        </trans-unit>
        <trans-unit id="eca60043dfb6716b9d39e625e5782f9e5329b517" translate="yes" xml:space="preserve">
          <source>Changes one or more properties of a color. This can change the red, green, blue, hue, saturation, value, and alpha properties. The properties are specified as keyword arguments, and replace the color's current value for that property.</source>
          <target state="translated">改变一个颜色的一个或多个属性,可以改变红色、绿色、蓝色、色调、饱和度、数值和alpha属性。这可以改变红色、绿色、蓝色、色调、饱和度、值和 alpha 属性。这些属性是以关键字参数的形式指定的,并替换该属性的颜色的当前值。</target>
        </trans-unit>
        <trans-unit id="645b44959c6f608356871354280303d974b2e5af" translate="yes" xml:space="preserve">
          <source>Changes the hue of a color. Takes a color and a number of degrees (usually between &lt;code&gt;-360deg&lt;/code&gt; and &lt;code&gt;360deg&lt;/code&gt;), and returns a color with the hue rotated along the color wheel by that amount.</source>
          <target state="translated">更改颜色的色调。取一个颜色和一个度数（通常在 &lt;code&gt;-360deg&lt;/code&gt; 和 &lt;code&gt;360deg&lt;/code&gt; 之间），并返回一个颜色，其中色相沿着色轮旋转该量。</target>
        </trans-unit>
        <trans-unit id="f7b6149d4715f6744ca97dc7ad3c2bec411941c6" translate="yes" xml:space="preserve">
          <source>Check whether a function with the given name exists.</source>
          <target state="translated">检查给定名称的函数是否存在。</target>
        </trans-unit>
        <trans-unit id="7fd5ed60e2bc8ac95cbe2fb4d9d02b73628ad233" translate="yes" xml:space="preserve">
          <source>Check whether a mixin was passed a content block.</source>
          <target state="translated">检查是否有混杂物被传递到一个内容块中。</target>
        </trans-unit>
        <trans-unit id="865e1cb6215af49ad8e06d669d67e16d5b05998e" translate="yes" xml:space="preserve">
          <source>Check whether a mixin with the given name exists.</source>
          <target state="translated">检查是否存在给定名称的混音器。</target>
        </trans-unit>
        <trans-unit id="b27aa16101e76a160857d563e034631e0ebc471d" translate="yes" xml:space="preserve">
          <source>Check whether a variable with the given name exists in the current scope or in the global scope.</source>
          <target state="translated">检查给定名称的变量是否存在于当前作用域或全局作用域中。</target>
        </trans-unit>
        <trans-unit id="321d74d619f0473650227715ea1db5bdb208a376" translate="yes" xml:space="preserve">
          <source>Check whether a variable with the given name exists in the global scope (at the top level of the file).</source>
          <target state="translated">检查给定名称的变量是否存在于全局作用域中(在文件的顶层)。</target>
        </trans-unit>
        <trans-unit id="d18d758687d5a06742caa4babacf7fd7e8df6eb7" translate="yes" xml:space="preserve">
          <source>Class selectors aren't the only things that can be extended. It's possible to extend any selector involving only a single element, such as &lt;code&gt;.special.cool&lt;/code&gt;, &lt;code&gt;a:hover&lt;/code&gt;, or &lt;code&gt;a.user[href^=&quot;http://&quot;]&lt;/code&gt;. For example:</source>
          <target state="translated">类选择器不是唯一可以扩展的东西。这是可能的延伸仅涉及单个元件，例如任何选择 &lt;code&gt;.special.cool&lt;/code&gt; ， &lt;code&gt;a:hover&lt;/code&gt; ，或 &lt;code&gt;a.user[href^=&quot;http://&quot;]&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="d6df5380103d61e08233c5e322a08284a4da07df" translate="yes" xml:space="preserve">
          <source>Color Operations</source>
          <target state="translated">颜色操作</target>
        </trans-unit>
        <trans-unit id="0d2162101a17d69e7f8570a0625cc4f64b705689" translate="yes" xml:space="preserve">
          <source>Color operations</source>
          <target state="translated">色彩操作</target>
        </trans-unit>
        <trans-unit id="88d5e4cac104ffc3f02dd54f2f0f1074fd33fd9b" translate="yes" xml:space="preserve">
          <source>Colors</source>
          <target state="translated">Colors</target>
        </trans-unit>
        <trans-unit id="df455815e242c90c393d63858a2a2d31de4c507f" translate="yes" xml:space="preserve">
          <source>Combines several lists into a single multidimensional list. The nth value of the resulting list is a space separated list of the source lists' nth values.</source>
          <target state="translated">将多个列表合并成一个多维列表。结果列表的第n个值是源列表的第n个值的空格分隔列表。</target>
        </trans-unit>
        <trans-unit id="23acf758eac39d13ef4d0c29b8ee402b4213dc7d" translate="yes" xml:space="preserve">
          <source>Comma-separated lists may have a trailing comma. This is especially useful because it allows you to represent a single-element list. For example, &lt;code&gt;(1,)&lt;/code&gt; is a list containing &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;(1 2 3,)&lt;/code&gt; is a comma-separated list containing a space-separated list containing &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, and &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">逗号分隔的列表可能带有尾部逗号。这特别有用，因为它允许您表示一个单元素列表。例如， &lt;code&gt;(1,)&lt;/code&gt; 是含有列表 &lt;code&gt;1&lt;/code&gt; 和 &lt;code&gt;(1 2 3,)&lt;/code&gt; 是包含含有空格分隔列表中的逗号分隔的列表 &lt;code&gt;1&lt;/code&gt; ， &lt;code&gt;2&lt;/code&gt; ，和 &lt;code&gt;3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a7a38ec729aeaa15df19be0178eaf0ecc948917a" translate="yes" xml:space="preserve">
          <source>Comments: &lt;code&gt;/* */&lt;/code&gt; and &lt;code&gt;//&lt;/code&gt; #comments</source>
          <target state="translated">注释： &lt;code&gt;/* */&lt;/code&gt; 和 &lt;code&gt;//&lt;/code&gt; #comments</target>
        </trans-unit>
        <trans-unit id="445e6645c6a9923c39870045b0cde9cb751b2f2a" translate="yes" xml:space="preserve">
          <source>Compact style takes up less space than Nested or Expanded. It also draws the focus more to the selectors than to their properties. Each CSS rule takes up only one line, with every property defined on that line. Nested rules are placed next to each other with no newline, while separate groups of rules have newlines between them. For example:</source>
          <target state="translated">紧凑型风格比嵌套式或扩展式风格占用的空间更小。它还将焦点更多地吸引到选择器上,而不是它们的属性上。每个CSS规则只占一行,每个属性都定义在这一行。嵌套的规则彼此相邻,没有换行,而单独的规则组之间有换行。例如</target>
        </trans-unit>
        <trans-unit id="3485c75f6a3d9f536d10e39df4db2f9a0c62a6f9" translate="yes" xml:space="preserve">
          <source>Compiles to:</source>
          <target state="translated">编制为:</target>
        </trans-unit>
        <trans-unit id="d195432d0455b674e0118f308b2ff4629632f6fd" translate="yes" xml:space="preserve">
          <source>Compressed style takes up the minimum amount of space possible, having no whitespace except that necessary to separate selectors and a newline at the end of the file. It also includes some other minor compressions, such as choosing the smallest representation for colors. It's not meant to be human-readable. For example:</source>
          <target state="translated">压缩后的样式占用了尽可能少的空间,除了分隔选择符和文件末尾的换行之外,没有空白。它还包括一些其他的小压缩,比如为颜色选择最小的表示方式。它并不是要让人读懂的。比如说</target>
        </trans-unit>
        <trans-unit id="9deed2c5337163a9ab591b313f5a7dac1113d5f4" translate="yes" xml:space="preserve">
          <source>Control Directives &amp;amp; Expressions</source>
          <target state="translated">控制指令和表达式</target>
        </trans-unit>
        <trans-unit id="71f154cd105e82b7c49288856cd86e0f5487913b" translate="yes" xml:space="preserve">
          <source>Convert a string to lower case,</source>
          <target state="translated">将一个字符串转换为小写。</target>
        </trans-unit>
        <trans-unit id="6b21d0486eeef03032c1d67a4ee9785b9fcf77f1" translate="yes" xml:space="preserve">
          <source>Converts a color into the format understood by IE filters.</source>
          <target state="translated">将颜色转换为IE过滤器理解的格式。</target>
        </trans-unit>
        <trans-unit id="9684475df202935931f04f410b2c1ea2483c0156" translate="yes" xml:space="preserve">
          <source>Converts a color to grayscale. This is identical to &lt;code&gt;desaturate(color, 100%)&lt;/code&gt;.</source>
          <target state="translated">将颜色转换为灰度。这与 &lt;code&gt;desaturate(color, 100%)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d457eedad5466b3ddfa4fb5c99c68fb4266c354d" translate="yes" xml:space="preserve">
          <source>Converts a string to upper case.</source>
          <target state="translated">将字符串转换为大写。</target>
        </trans-unit>
        <trans-unit id="e624414019df20a7e07723ca59066175e66b4a1b" translate="yes" xml:space="preserve">
          <source>Converts a unitless number to a percentage.</source>
          <target state="translated">将无单位的数字转换为百分比。</target>
        </trans-unit>
        <trans-unit id="95fd9a2b31b0e500bf929d57f8003e0617580055" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;Color&lt;/a&gt; from hue, saturation, and lightness values. Uses the algorithm from the &lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;CSS3 spec&lt;/a&gt;.</source>
          <target state="translated">根据色相，饱和度和亮度值创建&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;颜色&lt;/a&gt;。使用&lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;CSS3规范中&lt;/a&gt;的算法。</target>
        </trans-unit>
        <trans-unit id="8ea63ea6358619ae5ecf5289b7c9c06781f8fc09" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;Color&lt;/a&gt; from hue, saturation, lightness, and alpha values. Uses the algorithm from the &lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;CSS3 spec&lt;/a&gt;.</source>
          <target state="translated">根据色相，饱和度，亮度和Alpha值创建&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;颜色&lt;/a&gt;。使用&lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;CSS3规范中&lt;/a&gt;的算法。</target>
        </trans-unit>
        <trans-unit id="ac28f39b37bdbc59a1b7e925d3c9cc4f9cf9f1b9" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;Color&lt;/a&gt; from red, green, blue, and alpha values.</source>
          <target state="translated">根据红色，绿色，蓝色和Alpha值创建&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;颜色&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2521a7b44a785bcadad1d6a4d169e3865eecb6c0" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;Color&lt;/a&gt; object from red, green, and blue values.</source>
          <target state="translated">根据红色，绿色和蓝色值创建一个&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Script/Value/Color.html&quot;&gt;Color&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="4e9d161b8d29bfcca25547a243af442d776ac7c9" translate="yes" xml:space="preserve">
          <source>Custom Importers</source>
          <target state="translated">定制进口商</target>
        </trans-unit>
        <trans-unit id="c18842877f84be9bb3ae10673c4e60242f22c160" translate="yes" xml:space="preserve">
          <source>Data Types</source>
          <target state="translated">数据类型</target>
        </trans-unit>
        <trans-unit id="898f9830669a73679909a1ae8342f80baaf665b8" translate="yes" xml:space="preserve">
          <source>Defining Custom Sass Functions</source>
          <target state="translated">定义自定义Sass函数</target>
        </trans-unit>
        <trans-unit id="8203cf8bdf7f782985420e4895696946c281640d" translate="yes" xml:space="preserve">
          <source>Defining a Mixin: &lt;code&gt;@mixin&lt;/code&gt; #defining_a_mixin</source>
          <target state="translated">定义一个mixin： &lt;code&gt;@mixin&lt;/code&gt; #defining_a_mixin</target>
        </trans-unit>
        <trans-unit id="0f18a03692136fa8859650df488eacf787582202" translate="yes" xml:space="preserve">
          <source>Directives that are only allowed at the base level of a document, like &lt;code&gt;@mixin&lt;/code&gt; or &lt;code&gt;@charset&lt;/code&gt;, are not allowed in files that are &lt;code&gt;@import&lt;/code&gt;ed in a nested context.</source>
          <target state="translated">在嵌套上下文中 &lt;code&gt;@import&lt;/code&gt; 的文件中不允许仅在文档的基础级别上使用的 &lt;code&gt;@mixin&lt;/code&gt; 指令，例如@mixin或 &lt;code&gt;@charset&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc8d766acf59d2fe96d62baada8ad0e3ad9012f6" translate="yes" xml:space="preserve">
          <source>Division and &lt;code&gt;/&lt;/code&gt;</source>
          <target state="translated">除法和 &lt;code&gt;/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e10ab59ae4fcb59a888f51ad37087162ea13962" translate="yes" xml:space="preserve">
          <source>Dynamically calls a function. This can call user-defined functions, built-in functions, or plain CSS functions. It will pass along all arguments, including keyword arguments, to the called function.</source>
          <target state="translated">动态调用一个函数。它可以调用用户定义的函数、内置函数或普通的CSS函数。它将把所有的参数,包括关键字参数,传递给被调用的函数。</target>
        </trans-unit>
        <trans-unit id="68392ce2960a57ba353d3f13ae7ee60e03e899f2" translate="yes" xml:space="preserve">
          <source>Each importer is in charge of a single load path (or whatever the corresponding notion is for the backend). Importers can be placed in the &lt;a href=&quot;file.sass_reference#load_paths-option&quot;&gt;&lt;code&gt;:load_paths&lt;/code&gt; array&lt;/a&gt; alongside normal filesystem paths.</source>
          <target state="translated">每个进口商负责单个加载路径（或后端的相应概念）。导入程序可以与常规文件系统路径一起放在&lt;a href=&quot;file.sass_reference#load_paths-option&quot;&gt; &lt;code&gt;:load_paths&lt;/code&gt; 数组中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2fa8c43e978e9b266be22696d2cd1760984d3189" translate="yes" xml:space="preserve">
          <source>Either syntax can &lt;a href=&quot;#import&quot;&gt;import&lt;/a&gt; files written in the other. Files can be automatically converted from one syntax to the other using the &lt;code&gt;sass-convert&lt;/code&gt; command line tool:</source>
          <target state="translated">两种语法都可以&lt;a href=&quot;#import&quot;&gt;导入&lt;/a&gt;用另一种语法编写的文件。可以使用 &lt;code&gt;sass-convert&lt;/code&gt; 命令行工具将文件自动从一种语法转换为另一种语法：</target>
        </trans-unit>
        <trans-unit id="91e7aa89332b6cee8751327a9d69e3cd920f8ea8" translate="yes" xml:space="preserve">
          <source>Encodings</source>
          <target state="translated">Encodings</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="579054b5c7668447dc3b53376cf13deb9fcdb730" translate="yes" xml:space="preserve">
          <source>Expanded is a more typical human-made CSS style, with each property and rule taking up one line. Properties are indented within the rules, but the rules aren't indented in any special way. For example:</source>
          <target state="translated">展开式是一种比较典型的人为制作的CSS样式,每个属性和规则都占一行。属性在规则中是缩进的,但规则没有任何特殊的缩进方式。比如说</target>
        </trans-unit>
        <trans-unit id="a229ec8a2034bfb253b92686ee4eca45cab34178" translate="yes" xml:space="preserve">
          <source>Extending Complex Selectors</source>
          <target state="translated">扩展复合选择器</target>
        </trans-unit>
        <trans-unit id="f46eaf9e68b3c7dd0746d876f8359452d6de2be3" translate="yes" xml:space="preserve">
          <source>Extending Sass</source>
          <target state="translated">扩展Sass</target>
        </trans-unit>
        <trans-unit id="3fb05721565b72d093773ab35b705266f5964660" translate="yes" xml:space="preserve">
          <source>Extracts a substring from &lt;code&gt;$string&lt;/code&gt;. The substring will begin at index &lt;code&gt;$start-at&lt;/code&gt; and ends at index &lt;code&gt;$end-at&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;$string&lt;/code&gt; 提取一个子字符串。子字符串将在索引 &lt;code&gt;$start-at&lt;/code&gt; 并在索引 &lt;code&gt;$end-at&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="c37d5972b4dc90de530c696364f3eb68d358ac2f" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;@media&lt;/code&gt; queries can contain SassScript expressions (including variables, functions, and operators) in place of the feature names and feature values. For example:</source>
          <target state="translated">最后，@ &lt;code&gt;@media&lt;/code&gt; 查询可以包含SassScript表达式（包括变量，函数和运算符）来代替功能名称和功能值。例如：</target>
        </trans-unit>
        <trans-unit id="dab7b11071cc2e100a0eb40417977bd5453399f6" translate="yes" xml:space="preserve">
          <source>Finds the maximum of several numbers. This function takes any number of arguments.</source>
          <target state="translated">查找多个数字的最大值。这个函数可以接受任何数量的参数。</target>
        </trans-unit>
        <trans-unit id="8f7afccca6862e4f42d2d8243dbed946daf04405" translate="yes" xml:space="preserve">
          <source>Finds the minimum of several numbers. This function takes any number of arguments.</source>
          <target state="translated">求几个数字的最小值。本函数接受任何数量的参数。</target>
        </trans-unit>
        <trans-unit id="b1ad7dec23f44c9e45424cbc973d96b8fc33c7bc" translate="yes" xml:space="preserve">
          <source>First Class Functions</source>
          <target state="translated">第一类功能</target>
        </trans-unit>
        <trans-unit id="f295a02cfc1ac05a365330f0ab2dcd53cb811377" translate="yes" xml:space="preserve">
          <source>First class functions</source>
          <target state="translated">第一类功能</target>
        </trans-unit>
        <trans-unit id="8873ae969e47de6d3bcc40a9120a04bb4e9a6fae" translate="yes" xml:space="preserve">
          <source>Fluidly scales one or more properties of a color. Unlike &lt;a href=&quot;#adjust_color-instance_method&quot;&gt;adjust-color&lt;/a&gt;, which changes a color's properties by fixed amounts, &lt;a href=&quot;#scale_color-instance_method&quot;&gt;scale-color&lt;/a&gt; fluidly changes them based on how high or low they already are. That means that lightening an already-light color with &lt;a href=&quot;#scale_color-instance_method&quot;&gt;scale-color&lt;/a&gt; won't change the lightness much, but lightening a dark color by the same amount will change it more dramatically. This has the benefit of making &lt;code&gt;scale-color($color, ...)&lt;/code&gt; have a similar effect regardless of what &lt;code&gt;$color&lt;/code&gt; is.</source>
          <target state="translated">流体缩放颜色的一种或多种属性。与&lt;a href=&quot;#adjust_color-instance_method&quot;&gt;Adjust-color&lt;/a&gt;（以固定量更改颜色的属性）不同，&lt;a href=&quot;#scale_color-instance_method&quot;&gt;scale-color&lt;/a&gt;会根据颜色的高低来流畅地更改颜色。这意味着用&lt;a href=&quot;#scale_color-instance_method&quot;&gt;标尺颜色&lt;/a&gt;加亮已经很浅的颜色不会显着改变亮度，但是加深相同量的暗色会使亮度更明显地变化。这具有使 &lt;code&gt;scale-color($color, ...)&lt;/code&gt; 具有类似效果的优点，而不管 &lt;code&gt;$color&lt;/code&gt; 是什么。</target>
        </trans-unit>
        <trans-unit id="2c48ff5d6805b89d3c4aaa185134ab64f0b1046f" translate="yes" xml:space="preserve">
          <source>For Rails 3, instead add the following line to the Gemfile:</source>
          <target state="translated">对于 Rails 3,可以在 Gemfile 中添加以下一行。</target>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="ac331b881723e49f27ce748fb2dad0be59116802" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;example.scss&lt;/code&gt; contains</source>
          <target state="translated">例如，如果 &lt;code&gt;example.scss&lt;/code&gt; 包含</target>
        </trans-unit>
        <trans-unit id="d001d78d7e45711489fe12fecf811f07435cabbe" translate="yes" xml:space="preserve">
          <source>For example, the following works fine:</source>
          <target state="translated">例如,下面的工作很好。</target>
        </trans-unit>
        <trans-unit id="86944ea7f56a5ba3ca7e79aea699124a755cc0e5" translate="yes" xml:space="preserve">
          <source>For example, the lightness of a color can be anywhere between &lt;code&gt;0%&lt;/code&gt; and &lt;code&gt;100%&lt;/code&gt;. If &lt;code&gt;scale-color($color, $lightness: 40%)&lt;/code&gt; is called, the resulting color's lightness will be 40% of the way between its original lightness and 100. If &lt;code&gt;scale-color($color, $lightness: -40%)&lt;/code&gt; is called instead, the lightness will be 40% of the way between the original and 0.</source>
          <target state="translated">例如，颜色的明度可以在 &lt;code&gt;0%&lt;/code&gt; 到 &lt;code&gt;100%&lt;/code&gt; 之间。如果调用 &lt;code&gt;scale-color($color, $lightness: 40%)&lt;/code&gt; ，则所得颜色的亮度将是其原始亮度与100之间的40％。如果 &lt;code&gt;scale-color($color, $lightness: -40%)&lt;/code&gt; 相反，称为，亮度将为原图和0之间的40％。</target>
        </trans-unit>
        <trans-unit id="10cad4394049680f152b554cb0f7c06dfe83b1ee" translate="yes" xml:space="preserve">
          <source>For example, you might have &lt;code&gt;_colors.scss&lt;/code&gt;. Then no &lt;code&gt;_colors.css&lt;/code&gt; file would be created, and you can do</source>
          <target state="translated">例如，您可能具有 &lt;code&gt;_colors.scss&lt;/code&gt; 。这样就不会创建 &lt;code&gt;_colors.css&lt;/code&gt; 文件，您可以</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="d2b35b96c322efa489d8b3dfb175a4f21bf1664e" translate="yes" xml:space="preserve">
          <source>For historical reasons, function names (and all other Sass identifiers) can use hyphens and underscores interchangeably. For example, if you define a function called &lt;code&gt;grid-width&lt;/code&gt;, you can use it as &lt;code&gt;grid_width&lt;/code&gt;, and vice versa.</source>
          <target state="translated">由于历史原因，函数名称（和所有其他Sass标识符）可以互换使用连字符和下划线。例如，如果定义一个名为 &lt;code&gt;grid-width&lt;/code&gt; 的函数，则可以将其用作 &lt;code&gt;grid_width&lt;/code&gt; ，反之亦然。</target>
        </trans-unit>
        <trans-unit id="8f6155aa373f97a674fd5a39376b4cf46715cc48" translate="yes" xml:space="preserve">
          <source>For historical reasons, mixin names (and all other Sass identifiers) can use hyphens and underscores interchangeably. For example, if you define a mixin called &lt;code&gt;add-column&lt;/code&gt;, you can include it as &lt;code&gt;add_column&lt;/code&gt;, and vice versa.</source>
          <target state="translated">由于历史原因，mixin名称（以及所有其他Sass标识符）可以互换使用连字符和下划线。例如，如果定义一个名为 &lt;code&gt;add-column&lt;/code&gt; 的混合，则可以将其作为 &lt;code&gt;add_column&lt;/code&gt; 包含，反之亦然。</target>
        </trans-unit>
        <trans-unit id="e71f7fae1496938578d1bffe25a90b7430454708" translate="yes" xml:space="preserve">
          <source>For historical reasons, variable names (and all other Sass identifiers) can use hyphens and underscores interchangeably. For example, if you define a variable called &lt;code&gt;$main-width&lt;/code&gt;, you can access it as &lt;code&gt;$main_width&lt;/code&gt;, and vice versa.</source>
          <target state="translated">由于历史原因，变量名称（以及所有其他Sass标识符）可以互换使用连字符和下划线。例如，如果定义一个名为 &lt;code&gt;$main-width&lt;/code&gt; 的变量，则可以将其作为 &lt;code&gt;$main_width&lt;/code&gt; 进行访问，反之亦然。</target>
        </trans-unit>
        <trans-unit id="e36b5fcbeb3efece896e55ba96ce45fca408340f" translate="yes" xml:space="preserve">
          <source>Fully CSS-compatible</source>
          <target state="translated">完全兼容CSS</target>
        </trans-unit>
        <trans-unit id="52ea1bd7ae433917355467b1a8a1723cd07cf273" translate="yes" xml:space="preserve">
          <source>Function Directives #function_directives</source>
          <target state="translated">功能指令 #function_directives</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="0edb628a9542a14f813bd7de9f8386b56c8a58b5" translate="yes" xml:space="preserve">
          <source>Generates:</source>
          <target state="translated">Generates:</target>
        </trans-unit>
        <trans-unit id="22c2b6e6e7c73e06d286b50bcc91f51da4305652" translate="yes" xml:space="preserve">
          <source>Gets the blue component of a color. Calculated from HSL where necessary via &lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;this algorithm&lt;/a&gt;.</source>
          <target state="translated">获取颜色的蓝色分量。根据需要从HSL计算出&lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;此算法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4b1cdecf554174819ed0a33df5a40ed6d356045c" translate="yes" xml:space="preserve">
          <source>Gets the green component of a color. Calculated from HSL where necessary via &lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;this algorithm&lt;/a&gt;.</source>
          <target state="translated">获取颜色的绿色分量。根据需要从HSL计算出&lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;此算法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="54336be4927001c951acd2e597ce51a92ab12a03" translate="yes" xml:space="preserve">
          <source>Gets the nth item in a list.</source>
          <target state="translated">获取列表中的第N个项目。</target>
        </trans-unit>
        <trans-unit id="1acb7f9b6125cd4f7e7934397bb3ba177b8cc16d" translate="yes" xml:space="preserve">
          <source>Gets the red component of a color. Calculated from HSL where necessary via &lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;this algorithm&lt;/a&gt;.</source>
          <target state="translated">获取颜色的红色分量。根据需要从HSL计算出&lt;a href=&quot;http://www.w3.org/TR/css3-color/#hsl-color&quot;&gt;此算法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="100cb0b9b76cf128bd36c57de623e9519f3f1a9c" translate="yes" xml:space="preserve">
          <source>How it Works</source>
          <target state="translated">它是如何工作的</target>
        </trans-unit>
        <trans-unit id="fa8c7bd845eb56a7623a51ddb2ac3965b3815ea0" translate="yes" xml:space="preserve">
          <source>However, placeholder selectors can be extended, just like classes and ids. The extended selectors will be generated, but the base placeholder selector will not. For example:</source>
          <target state="translated">然而,占位符选择器可以被扩展,就像类和id一样。扩展后的选择器将被生成,但基本的占位符选择器不会被生成。比如说</target>
        </trans-unit>
        <trans-unit id="f8ac34630c8bab65ab8e1c131c73e127e373d4fb" translate="yes" xml:space="preserve">
          <source>However, there are three situations where the &lt;code&gt;/&lt;/code&gt; will be interpreted as division. These cover the vast majority of cases where division is actually used. They are:</source>
          <target state="translated">但是，在三种情况下， &lt;code&gt;/&lt;/code&gt; 将被解释为除法。这些涵盖了绝大多数实际使用除法的情况。他们是：</target>
        </trans-unit>
        <trans-unit id="4b22f00f2bab73d2e075ca8e90f835b4deb9f334" translate="yes" xml:space="preserve">
          <source>IE filters require all colors include the alpha layer, and be in the strict format of #AABBCCDD. You can more easily convert the color using the &lt;a href=&quot;sass/script/functions#ie_hex_str-instance_method&quot;&gt;ie_hex_str&lt;/a&gt; function. For example:</source>
          <target state="translated">IE过滤器要求所有颜色都包括alpha层，并采用#AABBCCDD的严格格式。您可以使用&lt;a href=&quot;sass/script/functions#ie_hex_str-instance_method&quot;&gt;ie_hex_str&lt;/a&gt;函数更轻松地转换颜色。例如：</target>
        </trans-unit>
        <trans-unit id="de9ddd1f280dc2a3de8e258236641a618a9f9a59" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$css&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the function reference may refer to a function defined in your stylesheet or built-in to the host environment. If it's &lt;code&gt;true&lt;/code&gt; it will refer to a plain-CSS function.</source>
          <target state="translated">如果 &lt;code&gt;$css&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; ，则函数引用可能引用样式表中定义的函数或内置于主机环境的函数。如果为 &lt;code&gt;true&lt;/code&gt; ，则将引用纯CSS函数。</target>
        </trans-unit>
        <trans-unit id="a8b7ea2dba38d059635fab051890dffefb62fe0a" translate="yes" xml:space="preserve">
          <source>If none of the above conditions are met and the extension is &lt;code&gt;.scss&lt;/code&gt; or &lt;code&gt;.sass&lt;/code&gt;, then the named Sass or SCSS file will be imported. If there is no extension, Sass will try to find a file with that name and the &lt;code&gt;.scss&lt;/code&gt; or &lt;code&gt;.sass&lt;/code&gt; extension and import it.</source>
          <target state="translated">如果没有上述条件满足并且该扩展是 &lt;code&gt;.scss&lt;/code&gt; 或 &lt;code&gt;.sass&lt;/code&gt; ，然后命名萨斯或SCSS文件将被导入。如果没有扩展名，萨斯将尝试找到与该名字和文件 &lt;code&gt;.scss&lt;/code&gt; 或 &lt;code&gt;.sass&lt;/code&gt; 延伸和导入。</target>
        </trans-unit>
        <trans-unit id="b4c5b65f55070d97a04b2a362dc1c166f404a286" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;@import&lt;/code&gt; has any media queries.</source>
          <target state="translated">如果 &lt;code&gt;@import&lt;/code&gt; 有任何媒体查询。</target>
        </trans-unit>
        <trans-unit id="af27aa817841c40e0934e3809b663a6e2a6e3425" translate="yes" xml:space="preserve">
          <source>If the file's extension is &lt;code&gt;.css&lt;/code&gt;.</source>
          <target state="translated">如果文件的扩展名为 &lt;code&gt;.css&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="63b062ac18bca224410a58b1187ea6cb960be37e" translate="yes" xml:space="preserve">
          <source>If the filename begins with &lt;code&gt;http://&lt;/code&gt;.</source>
          <target state="translated">如果文件名以 &lt;code&gt;http://&lt;/code&gt; 开头。</target>
        </trans-unit>
        <trans-unit id="d45e0e538899f07f283860f3aa453ddded1fbbb4" translate="yes" xml:space="preserve">
          <source>If the filename is a &lt;code&gt;url()&lt;/code&gt;.</source>
          <target state="translated">如果文件名是 &lt;code&gt;url()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b837513b592c0bc737e08c4c2ce796f54aa897c" translate="yes" xml:space="preserve">
          <source>If the parent selector can't have a suffix applied, Sass will throw an error.</source>
          <target state="translated">如果父选择器不能应用后缀,Sass将抛出一个错误。</target>
        </trans-unit>
        <trans-unit id="1698a3d0e06423e104c10e9958b92d40b5758697" translate="yes" xml:space="preserve">
          <source>If the two sequences do share some selectors, then those selectors will be merged together and only the differences (if any still exist) will alternate. In this example, both sequences contain the id &lt;code&gt;#admin&lt;/code&gt;, so the resulting selectors will merge those two ids:</source>
          <target state="translated">如果两个序列确实共享某些选择器，则这些选择器将合并在一起，并且只有差异（如果仍然存在）将交替出现。在此示例中，两个序列都包含ID &lt;code&gt;#admin&lt;/code&gt; ，因此生成的选择器将合并这两个ID：</target>
        </trans-unit>
        <trans-unit id="b9a139b35304edaae3e8aa905c71ee85f305af0f" translate="yes" xml:space="preserve">
          <source>If the value is surrounded by parentheses, unless those parentheses are outside a list and the value is inside.</source>
          <target state="translated">如果该值被括号包围,除非这些括号在列表外,而该值在列表内。</target>
        </trans-unit>
        <trans-unit id="994d90dd28d20ad4f20c0f14065886546d705224" translate="yes" xml:space="preserve">
          <source>If the value is used as part of another arithmetic expression.</source>
          <target state="translated">如果该值被用作另一个算术表达式的一部分。</target>
        </trans-unit>
        <trans-unit id="2e43996a95a151623d109cf31022aea712f71951" translate="yes" xml:space="preserve">
          <source>If the value, or any part of it, is stored in a variable or returned by a function.</source>
          <target state="translated">如果该值或其任何部分被存储在一个变量中或由函数返回。</target>
        </trans-unit>
        <trans-unit id="89cbec1265cbf5346f0cd7043c62c079fc14e847" translate="yes" xml:space="preserve">
          <source>If there is no parent selector, the value of &lt;code&gt;&amp;amp;&lt;/code&gt; will be null. This means you can use it in a mixin to detect whether a parent selector exists:</source>
          <target state="translated">如果没有父选择器，则 &lt;code&gt;&amp;amp;&lt;/code&gt; 的值为空。这意味着您可以在mixin中使用它来检测是否存在父选择器：</target>
        </trans-unit>
        <trans-unit id="ac6eee271d4cf9df36a9f70a173deffdf9b4d740" translate="yes" xml:space="preserve">
          <source>If you have a SCSS or Sass file that you want to import but don't want to compile to a CSS file, you can add an underscore to the beginning of the filename. This will tell Sass not to compile it to a normal CSS file. You can then import these files without using the underscore.</source>
          <target state="translated">如果你有一个想导入的SCSS或Sass文件,但又不想编译成CSS文件,你可以在文件名的开头加一个下划线。这将告诉Sass不要把它编译成一个普通的CSS文件。然后你就可以不使用下划线来导入这些文件了。</target>
        </trans-unit>
        <trans-unit id="363b41473ea109078f9e707dc24a309d29c6c95c" translate="yes" xml:space="preserve">
          <source>If you have a directory with many Sass files, you can also tell Sass to watch the entire directory:</source>
          <target state="translated">如果你的目录中有很多Sass文件,你也可以告诉Sass观察整个目录。</target>
        </trans-unit>
        <trans-unit id="c599191a7710edf0b08d3e7b545ee814898e053e" translate="yes" xml:space="preserve">
          <source>If you use normal classes for this, you end up creating a lot of extra CSS when the stylesheets are generated, and run the risk of colliding with other classes that are being used in the HTML. That's why Sass supports &quot;placeholder selectors&quot; (for example, &lt;code&gt;%foo&lt;/code&gt;).</source>
          <target state="translated">如果为此使用常规类，则最终在生成样式表时会创建大量额外的CSS，并冒与HTML中使用的其他类冲突的风险。这就是Sass支持&amp;ldquo;占位符选择器&amp;rdquo;（例如 &lt;code&gt;%foo&lt;/code&gt; ）的原因。</target>
        </trans-unit>
        <trans-unit id="1716800aeaf149f22debed68ce91b7091237cb87" translate="yes" xml:space="preserve">
          <source>If you want to specify which directives or rules to include, rather than listing which ones should be excluded, you can use &lt;code&gt;with&lt;/code&gt; instead of &lt;code&gt;without&lt;/code&gt;. For example, &lt;code&gt;@at-root (with: rule)&lt;/code&gt; will move outside of all directives, but will preserve any CSS rules.</source>
          <target state="translated">如果你想指定的指令或规则包括，而不是列出哪些应该被排除在外，你可以用 &lt;code&gt;with&lt;/code&gt; 代替 &lt;code&gt;without&lt;/code&gt; 。例如， &lt;code&gt;@at-root (with: rule)&lt;/code&gt; 将移出所有指令，但会保留所有CSS规则。</target>
        </trans-unit>
        <trans-unit id="ff22fba41840c1021d41c8a69cb72dc331a622da" translate="yes" xml:space="preserve">
          <source>If you want to use variables along with a plain CSS &lt;code&gt;/&lt;/code&gt;, you can use &lt;code&gt;#{}&lt;/code&gt; to insert them. For example:</source>
          <target state="translated">如果要将变量与纯CSS &lt;code&gt;/&lt;/code&gt; 一起使用，则可以使用 &lt;code&gt;#{}&lt;/code&gt; 插入它们。例如：</target>
        </trans-unit>
        <trans-unit id="3d6a4114ecf4dab55eb47e0014930529039b7887" translate="yes" xml:space="preserve">
          <source>If you're using Windows, you may need to &lt;a href=&quot;http://rubyinstaller.org/download.html&quot;&gt;install Ruby&lt;/a&gt; first.</source>
          <target state="translated">如果您使用的是Windows，则可能需要先&lt;a href=&quot;http://rubyinstaller.org/download.html&quot;&gt;安装Ruby&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9a0c5a2945555a819952e103e567b6c9b3386836" translate="yes" xml:space="preserve">
          <source>Imports may contain &lt;code&gt;#{}&lt;/code&gt; interpolation, but only with certain restrictions. It's not possible to dynamically import a Sass file based on a variable; interpolation is only for CSS imports. As such, it only works with &lt;code&gt;url()&lt;/code&gt; imports. For example:</source>
          <target state="translated">导入可能包含 &lt;code&gt;#{}&lt;/code&gt; 插值，但只有某些限制。无法基于变量动态导入Sass文件。插值仅适用于CSS导入。因此，它仅适用于 &lt;code&gt;url()&lt;/code&gt; 导入。例如：</target>
        </trans-unit>
        <trans-unit id="4a769708c9963aedd4a1e0dd9c5c5fb77e092b32" translate="yes" xml:space="preserve">
          <source>In addition to containing simple values, lists can contain other lists. For example, &lt;code&gt;1px 2px, 5px 6px&lt;/code&gt; is a two-item list containing the list &lt;code&gt;1px 2px&lt;/code&gt; and the list &lt;code&gt;5px 6px&lt;/code&gt;. If the inner lists have the same separator as the outer list, you'll need to use parentheses to make it clear where the inner lists start and stop. For example, &lt;code&gt;(1px 2px) (5px 6px)&lt;/code&gt; is also a two-item list containing the list &lt;code&gt;1px 2px&lt;/code&gt; and the list &lt;code&gt;5px 6px&lt;/code&gt;. The difference is that the outer list is space-separated, where before it was comma-separated.</source>
          <target state="translated">列表除了包含简单值外，还可以包含其他列表。例如， &lt;code&gt;1px 2px, 5px 6px&lt;/code&gt; 是一个包含列表 &lt;code&gt;1px 2px&lt;/code&gt; 和列表 &lt;code&gt;5px 6px&lt;/code&gt; 的两个项目列表。如果内部列表与外部列表具有相同的分隔符，则需要使用括号将内部列表的开始和停止位置明确。例如， &lt;code&gt;(1px 2px) (5px 6px)&lt;/code&gt; 也是一个包含列表 &lt;code&gt;1px 2px&lt;/code&gt; 和列表 &lt;code&gt;5px 6px&lt;/code&gt; 的两个项目列表。区别在于外部列表是用空格隔开的，在此之前是逗号隔开的。</target>
        </trans-unit>
        <trans-unit id="e4b2524ea62316a5a90c10f8618485a94cc47ae0" translate="yes" xml:space="preserve">
          <source>In addition to the plain CSS property syntax, Sass supports a small set of extensions called SassScript. SassScript allows properties to use variables, arithmetic, and extra functions. SassScript can be used in any property value.</source>
          <target state="translated">除了普通的CSS属性语法之外,Sass还支持一组名为SassScript的扩展。SassScript允许属性使用变量、算术和额外的函数。SassScript可以在任何属性值中使用。</target>
        </trans-unit>
        <trans-unit id="56d2abb4bb0796d88ad72e0a0dab56d277868fc4" translate="yes" xml:space="preserve">
          <source>In compressed output mode, Sass will output the smallest CSS representation of a color. For example, &lt;code&gt;#FF0000&lt;/code&gt; will output as &lt;code&gt;red&lt;/code&gt; in compressed mode, but &lt;code&gt;blanchedalmond&lt;/code&gt; will output as &lt;code&gt;#FFEBCD&lt;/code&gt;.</source>
          <target state="translated">在压缩输出模式下，Sass将输出颜色的最小CSS表示。例如， &lt;code&gt;#FF0000&lt;/code&gt; 在压缩模式下将输出为 &lt;code&gt;red&lt;/code&gt; ，而 &lt;code&gt;blanchedalmond&lt;/code&gt; 将输出为 &lt;code&gt;#FFEBCD&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74dc3020e7b1fd50d9d2201e0aff28fcfb86aef4" translate="yes" xml:space="preserve">
          <source>In effect, every element with class &lt;code&gt;.seriousError&lt;/code&gt; also has class &lt;code&gt;.error&lt;/code&gt;&lt;em&gt;and&lt;/em&gt; class &lt;code&gt;.attention&lt;/code&gt;. Thus, the styles defined later in the document take precedence: &lt;code&gt;.seriousError&lt;/code&gt; has background color &lt;code&gt;#ff0&lt;/code&gt; rather than &lt;code&gt;#fdd&lt;/code&gt;, since &lt;code&gt;.attention&lt;/code&gt; is defined later than &lt;code&gt;.error&lt;/code&gt;.</source>
          <target state="translated">实际上，每个具有 &lt;code&gt;.seriousError&lt;/code&gt; 类的元素也具有 &lt;code&gt;.error&lt;/code&gt; 类&lt;em&gt;和&lt;/em&gt; &lt;code&gt;.attention&lt;/code&gt; 类。因此，本文稍后定义的样式优先： &lt;code&gt;.seriousError&lt;/code&gt; 具有背景颜色 &lt;code&gt;#ff0&lt;/code&gt; 而不是 &lt;code&gt;#fdd&lt;/code&gt; ，因为 &lt;code&gt;.attention&lt;/code&gt; 的定义晚于 &lt;code&gt;.error&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="39c09caa4cf59eecc46ded665539c592c67c9267" translate="yes" xml:space="preserve">
          <source>Including a Mixin: &lt;code&gt;@include&lt;/code&gt; #including_a_mixin</source>
          <target state="translated">包括一个混合： &lt;code&gt;@include&lt;/code&gt; #include_a_mixin</target>
        </trans-unit>
        <trans-unit id="8f495c6c06231ec9a12564cb05951839bbfb2f31" translate="yes" xml:space="preserve">
          <source>Increases or decreases one or more properties of a color. This can change the red, green, blue, hue, saturation, value, and alpha properties. The properties are specified as keyword arguments, and are added to or subtracted from the color's current value for that property.</source>
          <target state="translated">增加或减少颜色的一个或多个属性。这可以改变红、绿、蓝、色调、饱和度、值和 alpha 属性。属性是以关键字参数指定的,并从颜色的该属性的当前值中增加或减去。</target>
        </trans-unit>
        <trans-unit id="c4adab86912f57657f80ae9c741aad0a290c16cc" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;$insert&lt;/code&gt; into &lt;code&gt;$string&lt;/code&gt; at &lt;code&gt;$index&lt;/code&gt;.</source>
          <target state="translated">插入 &lt;code&gt;$insert&lt;/code&gt; 到 &lt;code&gt;$string&lt;/code&gt; 在 &lt;code&gt;$index&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a61e1bb5fa9192131b395c208ac4f747981c7ea5" translate="yes" xml:space="preserve">
          <source>Interactive Shell</source>
          <target state="translated">交互式外壳</target>
        </trans-unit>
        <trans-unit id="45d23777af55b7a3a1877a87c33f7f7083e78cba" translate="yes" xml:space="preserve">
          <source>Interpolation: &lt;code&gt;#{}&lt;/code&gt;</source>
          <target state="translated">插值： &lt;code&gt;#{}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2cc4d290bfef52d73ec2d38ab787070c998fa292" translate="yes" xml:space="preserve">
          <source>Is compiled to:</source>
          <target state="translated">是编制为:</target>
        </trans-unit>
        <trans-unit id="6e2991943482060e6e5857d308787bb961af276f" translate="yes" xml:space="preserve">
          <source>It is possible to define your own functions in sass and use them in any value or script context. For example:</source>
          <target state="translated">可以在sass中定义自己的函数,并在任何值或脚本上下文中使用它们。比如说</target>
        </trans-unit>
        <trans-unit id="d816ac5e5874c3d65c0a9974afc517491f364041" translate="yes" xml:space="preserve">
          <source>It is possible to pass a block of styles to the mixin for placement within the styles included by the mixin. The styles will appear at the location of any &lt;code&gt;@content&lt;/code&gt; directives found within the mixin. This makes it possible to define abstractions relating to the construction of selectors and directives.</source>
          <target state="translated">可以将样式块传递给mixin，以放置在mixin包含的样式中。样式将出现在mixin 中任何 &lt;code&gt;@content&lt;/code&gt; 指令的位置。这样就可以定义与选择器和指令的构造有关的抽象。</target>
        </trans-unit>
        <trans-unit id="8eefbbb01c8f85c4c989d2a04b258535745057b9" translate="yes" xml:space="preserve">
          <source>It is recommended that you prefix your functions to avoid naming conflicts and so that readers of your stylesheets know they are not part of Sass or CSS. For example, if you work for ACME Corp, you might have named the function above &lt;code&gt;-acme-grid-width&lt;/code&gt;.</source>
          <target state="translated">建议为函数添加前缀，以避免命名冲突，并使样式表的读者知道它们不属于Sass或CSS。例如，如果您为ACME Corp工作，则可能已在 &lt;code&gt;-acme-grid-width&lt;/code&gt; 上方命名该函数。</target>
        </trans-unit>
        <trans-unit id="b7abfdcf20af9e97a47be163b41d76a414aef7fa" translate="yes" xml:space="preserve">
          <source>It's also possible to import multiple files in one &lt;code&gt;@import&lt;/code&gt;. For example:</source>
          <target state="translated">也可以在一个 &lt;code&gt;@import&lt;/code&gt; 中导入多个文件。例如：</target>
        </trans-unit>
        <trans-unit id="7535674e335e12f1e7f8c3eb63a432491bb999a7" translate="yes" xml:space="preserve">
          <source>It's also possible to use &lt;code&gt;#{}&lt;/code&gt; to put SassScript into property values. In most cases this isn't any better than using a variable, but using &lt;code&gt;#{}&lt;/code&gt; does mean that any operations near it will be treated as plain CSS. For example:</source>
          <target state="translated">也可以使用 &lt;code&gt;#{}&lt;/code&gt; 将SassScript放入属性值。在大多数情况下，这并不比使用变量更好，但是使用 &lt;code&gt;#{}&lt;/code&gt; 确实意味着将其附近的所有操作都视为纯CSS。例如：</target>
        </trans-unit>
        <trans-unit id="1886de0c5be428ee097d8bd10a6b179bedb91276" translate="yes" xml:space="preserve">
          <source>It's not possible to nest &lt;code&gt;@import&lt;/code&gt; within mixins or control directives.</source>
          <target state="translated">将 &lt;code&gt;@import&lt;/code&gt; 嵌套在mixins或控制指令中是不可能的。</target>
        </trans-unit>
        <trans-unit id="a8753b47a012a8c47aacfc01fec6cc4c372652eb" translate="yes" xml:space="preserve">
          <source>It's possible for one selector to extend another selector that in turn extends a third. For example:</source>
          <target state="translated">一个选择器可以扩展另一个选择器,而另一个选择器又可以扩展第三个选择器。例如:</target>
        </trans-unit>
        <trans-unit id="a8ab63913e701a6cd566f1ea2aa0fd07c2a42d47" translate="yes" xml:space="preserve">
          <source>Joins together two lists into one.</source>
          <target state="translated">将两个列表合并为一个。</target>
        </trans-unit>
        <trans-unit id="9db1c30955fc656f7f435f8f0d732c7d7aa93387" translate="yes" xml:space="preserve">
          <source>Just like when it's used &lt;a href=&quot;#parent-selector&quot;&gt;in selectors&lt;/a&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt; in SassScript refers to the current parent selector. It's a comma-separated list of space-separated lists. For example:</source>
          <target state="translated">就像&lt;a href=&quot;#parent-selector&quot;&gt;在选择器中&lt;/a&gt;使用它一样， &lt;code&gt;&amp;amp;&lt;/code&gt; 在SassScript中引用当前父选择器。这是一个用逗号分隔的列表，以空格分隔。例如：</target>
        </trans-unit>
        <trans-unit id="29bd5da518840fb49af9da42ab496c9be33aa274" translate="yes" xml:space="preserve">
          <source>Just like with &lt;code&gt;.error.intrusion&lt;/code&gt; above, any rule that uses &lt;code&gt;a:hover&lt;/code&gt; will also work for &lt;code&gt;.hoverlink&lt;/code&gt;, even if they have other selectors as well. For example:</source>
          <target state="translated">就像上面的 &lt;code&gt;.error.intrusion&lt;/code&gt; 一样，任何使用 &lt;code&gt;a:hover&lt;/code&gt; 的规则也适用于 &lt;code&gt;.hoverlink&lt;/code&gt; ，即使它们也具有其他选择器。例如：</target>
        </trans-unit>
        <trans-unit id="5d9b1fd33565590a942bfdfa06b2822414c2520e" translate="yes" xml:space="preserve">
          <source>Just like with classes, this means that all styles defined for &lt;code&gt;a:hover&lt;/code&gt; are also applied to &lt;code&gt;.hoverlink&lt;/code&gt;. For example:</source>
          <target state="translated">就像类一样，这意味着为 &lt;code&gt;a:hover&lt;/code&gt; 定义的所有样式也将应用于 &lt;code&gt;.hoverlink&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="db32172db3cd21ae36313d815fba0dd39bd7127a" translate="yes" xml:space="preserve">
          <source>Keyword Arguments</source>
          <target state="translated">關鍵字參數</target>
        </trans-unit>
        <trans-unit id="8bd5c96552367fe1f7d1f917e11688dbaf0e1f98" translate="yes" xml:space="preserve">
          <source>Language extensions such as variables, nesting, and mixins</source>
          <target state="translated">语言扩展,如变量、嵌套和混搭。</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">根据麻省理工学院许可证授权。</target>
        </trans-unit>
        <trans-unit id="df1f2565d793394f279b5684dda922d205d53f57" translate="yes" xml:space="preserve">
          <source>Like all list functions, &lt;code&gt;append()&lt;/code&gt; returns a new list rather than modifying its argument in place.</source>
          <target state="translated">与所有列表函数一样， &lt;code&gt;append()&lt;/code&gt; 返回一个新列表，而不是就地修改其参数。</target>
        </trans-unit>
        <trans-unit id="c989d9be6d62a6dbaf62f789a98ea32f60b979a0" translate="yes" xml:space="preserve">
          <source>Like all list functions, &lt;code&gt;join()&lt;/code&gt; returns a new list rather than modifying its arguments in place.</source>
          <target state="translated">与所有列表函数一样， &lt;code&gt;join()&lt;/code&gt; 返回一个新列表，而不是就地修改其参数。</target>
        </trans-unit>
        <trans-unit id="215f0787d3f3354f140f85b96c6a6486a621c011" translate="yes" xml:space="preserve">
          <source>Like all map functions, &lt;code&gt;map-merge()&lt;/code&gt; returns a new map rather than modifying its arguments in place.</source>
          <target state="translated">与所有地图函数一样， &lt;code&gt;map-merge()&lt;/code&gt; 返回一个新地图，而不是就地修改其参数。</target>
        </trans-unit>
        <trans-unit id="9837ea88e8cf080cbcdf81d777f7dd9e345fddb1" translate="yes" xml:space="preserve">
          <source>Like lists, maps are mostly manipulated using &lt;a href=&quot;sass/script/functions#map-functions&quot;&gt;SassScript functions&lt;/a&gt;. The &lt;code&gt;map-get&lt;/code&gt; function looks up values in a map and the &lt;code&gt;map-merge&lt;/code&gt; function adds values to a map. The &lt;a href=&quot;#each-multi-assign&quot;&gt;&lt;code&gt;@each&lt;/code&gt; directive&lt;/a&gt; can be used to add styles for each key/value pair in a map. The order of pairs in a map is always the same as when the map was created.</source>
          <target state="translated">像列表一样，大多数地图都是使用&lt;a href=&quot;sass/script/functions#map-functions&quot;&gt;SassScript函数来处理的&lt;/a&gt;。该 &lt;code&gt;map-get&lt;/code&gt; 函数查找值的地图和 &lt;code&gt;map-merge&lt;/code&gt; 功能增加值的地图。所述&lt;a href=&quot;#each-multi-assign&quot;&gt; &lt;code&gt;@each&lt;/code&gt; 指令&lt;/a&gt;可用于添加样式用于在图中的每个键/值对。映射中的配对顺序始终与创建映射时的顺序相同。</target>
        </trans-unit>
        <trans-unit id="70b08bc5ae7176adfaba7cded950090b19ea2c01" translate="yes" xml:space="preserve">
          <source>Like the selector unification done for &lt;code&gt;@extend&lt;/code&gt;, this doesn't guarantee that the output selector will match &lt;em&gt;all&lt;/em&gt; elements matched by both input selectors. For example, if &lt;code&gt;.a .b&lt;/code&gt; is unified with &lt;code&gt;.x .y&lt;/code&gt;, &lt;code&gt;.a .x .b.y, .x .a .b.y&lt;/code&gt; will be returned, but &lt;code&gt;.a.x .b.y&lt;/code&gt; will not. This avoids exponential output size while matching all elements that are likely to exist in practice.</source>
          <target state="translated">就像对 &lt;code&gt;@extend&lt;/code&gt; 所做的选择器统一一样，这不能保证输出选择器将匹配两个输入选择器都匹配的&lt;em&gt;所有&lt;/em&gt;元素。例如，如果 &lt;code&gt;.a .b&lt;/code&gt; 与统一 &lt;code&gt;.x .y&lt;/code&gt; ， &lt;code&gt;.a .x .b.y, .x .a .b.y&lt;/code&gt; 将被退回，但 &lt;code&gt;.a.x .b.y&lt;/code&gt; 不会。这样可以避免指数输出大小，同时匹配实际上可能存在的所有元素。</target>
        </trans-unit>
        <trans-unit id="751916204beb3a3955bb03e14586f45c600611fd" translate="yes" xml:space="preserve">
          <source>List Operations</source>
          <target state="translated">列表操作</target>
        </trans-unit>
        <trans-unit id="7094bd5e681efcce9038e6d995bf2d060fc85079" translate="yes" xml:space="preserve">
          <source>List operations</source>
          <target state="translated">列表操作</target>
        </trans-unit>
        <trans-unit id="57c9502a7d7d48fd4a86b45fefb2b163491c3ae1" translate="yes" xml:space="preserve">
          <source>Lists</source>
          <target state="translated">Lists</target>
        </trans-unit>
        <trans-unit id="fa382e946929803aa217f5846115b2bc89d380fa" translate="yes" xml:space="preserve">
          <source>Lists are how Sass represents the values of CSS declarations like &lt;code&gt;margin: 10px 15px 0 0&lt;/code&gt; or &lt;code&gt;font-face: Helvetica, Arial, sans-serif&lt;/code&gt;. Lists are just a series of other values, separated by either spaces or commas. In fact, individual values count as lists, too: they're just lists with one item.</source>
          <target state="translated">列出了Sass如何表示CSS声明的值，例如 &lt;code&gt;margin: 10px 15px 0 0&lt;/code&gt; 或 &lt;code&gt;font-face: Helvetica, Arial, sans-serif&lt;/code&gt; 。列表只是一系列其他值，用空格或逗号分隔。实际上，单个值也算作列表：它们只是带有一项的列表。</target>
        </trans-unit>
        <trans-unit id="20f15e0d03eaee4a74cfe11c870ce37fc976cfb8" translate="yes" xml:space="preserve">
          <source>Lists can also be written with square brackets&amp;mdash;we call these bracketed lists. Bracketed lists containing are used as line names in &lt;a href=&quot;https://www.w3.org/TR/css-grid-1/&quot;&gt;CSS Grid Layout&lt;/a&gt;, but they can also be used in pure Sass code just like any other list. Bracketed lists can be comma- or space-separated.</source>
          <target state="translated">列表也可以用方括号括起来，我们称这些括号为列表。包含括号的列表在&lt;a href=&quot;https://www.w3.org/TR/css-grid-1/&quot;&gt;CSS Grid Layout&lt;/a&gt;中用作行名，但是它们也可以像其他列表一样用在纯Sass代码中。括号列表可以用逗号或空格分隔。</target>
        </trans-unit>
        <trans-unit id="8f75f5a1d192f2ecd7aa361370ed4ea2e77eec11" translate="yes" xml:space="preserve">
          <source>Lists can also have no items in them at all. These lists are represented as &lt;code&gt;()&lt;/code&gt; (which is also an empty &lt;a href=&quot;#maps&quot;&gt;map&lt;/a&gt;). They can't be output directly to CSS; if you try to do e.g. &lt;code&gt;font-family: ()&lt;/code&gt;, Sass will raise an error. If a list contains empty lists or null values, as in &lt;code&gt;1px 2px () 3px&lt;/code&gt; or &lt;code&gt;1px 2px null 3px&lt;/code&gt;, the empty lists and null values will be removed before the containing list is turned into CSS.</source>
          <target state="translated">列表中也可以完全没有项目。这些列表表示为 &lt;code&gt;()&lt;/code&gt; （也是一个空&lt;a href=&quot;#maps&quot;&gt;映射&lt;/a&gt;）。它们不能直接输出到CSS。如果您尝试执行例如 &lt;code&gt;font-family: ()&lt;/code&gt; ，则Sass会引发错误。如果列表包含空列表或空值，例如 &lt;code&gt;1px 2px () 3px&lt;/code&gt; 或 &lt;code&gt;1px 2px null 3px&lt;/code&gt; ，则在将包含列表变成CSS之前，将删除空列表和空值。</target>
        </trans-unit>
        <trans-unit id="41d7cce1f583ff4beb456b479be604014eb41b2d" translate="yes" xml:space="preserve">
          <source>Lists don't support any special operations. Instead, they're manipulated using the &lt;a href=&quot;sass/script/functions#list-functions&quot;&gt;list functions&lt;/a&gt;.</source>
          <target state="translated">列表不支持任何特殊操作。而是使用&lt;a href=&quot;sass/script/functions#list-functions&quot;&gt;list函数&lt;/a&gt;对它们进行操作。</target>
        </trans-unit>
        <trans-unit id="851a2a27867c5ea0d06fb7ad6ca3007c1728423a" translate="yes" xml:space="preserve">
          <source>Makes a color darker. Takes a color and a number between 0% and 100%, and returns a color with the lightness decreased by that amount.</source>
          <target state="translated">使颜色变暗。取一个颜色和一个介于0%和100%之间的数字,并返回一个亮度降低的颜色。</target>
        </trans-unit>
        <trans-unit id="77ee8f07a8c8bad26149c6d0da1b59832f988738" translate="yes" xml:space="preserve">
          <source>Makes a color less saturated. Takes a color and a number between 0% and 100%, and returns a color with the saturation decreased by that value.</source>
          <target state="translated">使颜色的饱和度降低。取一个颜色和一个介于0%和100%之间的数字,并返回一个饱和度按该值降低的颜色。</target>
        </trans-unit>
        <trans-unit id="647de436b4025a40c3c05b643dfe7af49febeb1d" translate="yes" xml:space="preserve">
          <source>Makes a color lighter. Takes a color and a number between &lt;code&gt;0%&lt;/code&gt; and &lt;code&gt;100%&lt;/code&gt;, and returns a color with the lightness increased by that amount.</source>
          <target state="translated">使颜色变浅。接受一种颜色和一个介于 &lt;code&gt;0%&lt;/code&gt; 和 &lt;code&gt;100%&lt;/code&gt; 之间的数字，并返回一种亮度增加了该数量的颜色。</target>
        </trans-unit>
        <trans-unit id="1202144871a6d134734e77e6f3d6ff43dcdf0d0b" translate="yes" xml:space="preserve">
          <source>Makes a color more opaque. Takes a color and a number between 0 and 1, and returns a color with the opacity increased by that amount.</source>
          <target state="translated">使颜色更不透明。取一个颜色和一个介于0和1之间的数字,并返回一个不透明度增加的颜色。</target>
        </trans-unit>
        <trans-unit id="908e36df6b3e3510d087b869b3ee05a7946f3ab4" translate="yes" xml:space="preserve">
          <source>Makes a color more saturated. Takes a color and a number between 0% and 100%, and returns a color with the saturation increased by that amount.</source>
          <target state="translated">使颜色更加饱和。取一个颜色和一个介于0%和100%之间的数字,并返回一个饱和度增加的颜色。</target>
        </trans-unit>
        <trans-unit id="10e046f0668046295e6f040e6154687feaedeac3" translate="yes" xml:space="preserve">
          <source>Makes a color more transparent. Takes a color and a number between 0 and 1, and returns a color with the opacity decreased by that amount.</source>
          <target state="translated">使颜色更加透明。取一个颜色和一个介于0和1之间的数字,并返回一个不透明度降低的颜色。</target>
        </trans-unit>
        <trans-unit id="6c492e19352987aad4627ca16fec2584efdd4af1" translate="yes" xml:space="preserve">
          <source>Many &lt;a href=&quot;sass/script/functions&quot;&gt;useful functions&lt;/a&gt; for manipulating colors and other values</source>
          <target state="translated">用于处理颜色和其他值的许多&lt;a href=&quot;sass/script/functions&quot;&gt;有用功能&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80071cd75107cd5c4afdb2571725ea6733631038" translate="yes" xml:space="preserve">
          <source>Maps</source>
          <target state="translated">Maps</target>
        </trans-unit>
        <trans-unit id="7908a2bbd7a8ad31b242280b31b2c7d491579a76" translate="yes" xml:space="preserve">
          <source>Maps can also be used anywhere lists can. When used by a list function, a map is treated as a list of pairs. For example, &lt;code&gt;(key1: value1, key2: value2)&lt;/code&gt; would be treated as the nested list &lt;code&gt;key1 value1, key2 value2&lt;/code&gt; by list functions. Lists cannot be treated as maps, though, with the exception of the empty list. &lt;code&gt;()&lt;/code&gt; represents both a map with no key/value pairs and a list with no elements.</source>
          <target state="translated">地图也可以在列表可以使用的任何地方使用。当由列表功能使用时，映射被视为对列表。例如，列表函数会将 &lt;code&gt;(key1: value1, key2: value2)&lt;/code&gt; 视为嵌套列表 &lt;code&gt;key1 value1, key2 value2&lt;/code&gt; 。但是，除了空列表外，列表不能被视为地图。 &lt;code&gt;()&lt;/code&gt; 代表不包含键/值对的映射和不包含元素的列表。</target>
        </trans-unit>
        <trans-unit id="89e949ab7dcea4e2be5a81f1c90709f5ee38dbbd" translate="yes" xml:space="preserve">
          <source>Maps cannot be converted to plain CSS. Using one as the value of a variable or an argument to a CSS function will cause an error. Use the &lt;code&gt;inspect($value)&lt;/code&gt; function to produce an output string useful for debugging maps.</source>
          <target state="translated">地图无法转换为纯CSS。使用1作为CSS函数的变量或参数的值将导致错误。使用 &lt;code&gt;inspect($value)&lt;/code&gt; 函数产生可用于调试映射的输出字符串。</target>
        </trans-unit>
        <trans-unit id="18460ede0e77cbca4b62b2e50b96144bebae56ee" translate="yes" xml:space="preserve">
          <source>Maps represent an association between keys and values, where keys are used to look up values. They make it easy to collect values into named groups and access those groups dynamically. They have no direct parallel in CSS, although they're syntactically similar to media query expressions:</source>
          <target state="translated">地图代表了键和值之间的关联,其中键是用来查询值的。它们可以轻松地将值收集到命名的组中,并动态地访问这些组。它们在CSS中没有直接的平行关系,尽管它们在语法上类似于媒体查询表达式。</target>
        </trans-unit>
        <trans-unit id="266e0db2e6092e7da33438bebb8386fdab1f84e9" translate="yes" xml:space="preserve">
          <source>Merges two maps together into a new map. Keys in &lt;code&gt;$map2&lt;/code&gt; will take precedence over keys in &lt;code&gt;$map1&lt;/code&gt;.</source>
          <target state="translated">将两个地图合并到一个新地图中。在按键 &lt;code&gt;$map2&lt;/code&gt; 将优先于键 &lt;code&gt;$map1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51a9c2b299ed6b9e7a2c1942c4f2f202f049e8e3" translate="yes" xml:space="preserve">
          <source>Merging Selector Sequences</source>
          <target state="translated">合并选择器序列</target>
        </trans-unit>
        <trans-unit id="1a5d17590464c69e30696f59e46e452b8da18b54" translate="yes" xml:space="preserve">
          <source>Mixes two colors together. Specifically, takes the average of each of the RGB components, optionally weighted by the given percentage. The opacity of the colors is also considered when weighting the components.</source>
          <target state="translated">将两种颜色混合在一起。具体来说,取每个RGB分量的平均值,可选择按给定百分比加权。加权时还考虑了颜色的不透明度。</target>
        </trans-unit>
        <trans-unit id="3e03964482bfe1b1c6309d26cc15ab431a314d03" translate="yes" xml:space="preserve">
          <source>Mixin Directives #mixins</source>
          <target state="translated">Mixin指令#mixins</target>
        </trans-unit>
        <trans-unit id="12f1da765fb7717db8da107e51c52eb9c8a76e44" translate="yes" xml:space="preserve">
          <source>Mixin definitions can also include other mixins. For example:</source>
          <target state="translated">Mixin的定义也可以包括其他的混搭。例如:</target>
        </trans-unit>
        <trans-unit id="e55eee6e21d1bac315ca1a356e8d30a8a5b61967" translate="yes" xml:space="preserve">
          <source>Mixins allow you to define styles that can be re-used throughout the stylesheet without needing to resort to non-semantic classes like &lt;code&gt;.float-left&lt;/code&gt;. Mixins can also contain full CSS rules, and anything else allowed elsewhere in a Sass document. They can even take &lt;a href=&quot;#mixin-arguments&quot;&gt;arguments&lt;/a&gt; which allows you to produce a wide variety of styles with very few mixins.</source>
          <target state="translated">使用Mixins，您可以定义可以在整个样式表中重复使用的样式，而无需诉诸 &lt;code&gt;.float-left&lt;/code&gt; 之类的非语义类。Mixins还可以包含完整的CSS规则，以及Sass文档中其他位置允许的任何其他内容。他们甚至可以接受&lt;a href=&quot;#mixin-arguments&quot;&gt;参数&lt;/a&gt;，从而使您可以使用很少的mixin生成多种样式。</target>
        </trans-unit>
        <trans-unit id="644fdc872f40164f56f1c53cce947da35dec5fbf" translate="yes" xml:space="preserve">
          <source>Mixins are defined with the &lt;code&gt;@mixin&lt;/code&gt; directive. It's followed by the name of the mixin and optionally the &lt;a href=&quot;#mixin-arguments&quot;&gt;arguments&lt;/a&gt;, and a block containing the contents of the mixin. For example, the &lt;code&gt;large-text&lt;/code&gt; mixin is defined as follows:</source>
          <target state="translated">&lt;code&gt;@mixin&lt;/code&gt; 是使用@mixin指令定义的。其后是mixin的名称和可选的&lt;a href=&quot;#mixin-arguments&quot;&gt;参数&lt;/a&gt;，以及一个包含mixin内容的块。例如， &lt;code&gt;large-text&lt;/code&gt; 混合定义如下：</target>
        </trans-unit>
        <trans-unit id="8abeb939278636d23f3812346051fac3995b1507" translate="yes" xml:space="preserve">
          <source>Mixins are included in the document with the &lt;code&gt;@include&lt;/code&gt; directive. This takes the name of a mixin and optionally &lt;a href=&quot;#mixin-arguments&quot;&gt;arguments to pass to it&lt;/a&gt;, and includes the styles defined by that mixin into the current rule. For example:</source>
          <target state="translated">Mixins通过 &lt;code&gt;@include&lt;/code&gt; 指令包含在文档中。这将使用mixin的名称以及&lt;a href=&quot;#mixin-arguments&quot;&gt;传递给它的&lt;/a&gt;可选参数，并将该mixin定义的样式包括到当前规则中。例如：</target>
        </trans-unit>
        <trans-unit id="aa625b8e1fe09d8119662f87727f1fd539968fe6" translate="yes" xml:space="preserve">
          <source>Mixins can also be included using explicit keyword arguments. For instance, the above example could be written as:</source>
          <target state="translated">也可以使用显式关键字参数来包含mixins。例如,上面的例子可以写成。</target>
        </trans-unit>
        <trans-unit id="a5c96c9da9afb1e3ab9aeab4756923db18e85058" translate="yes" xml:space="preserve">
          <source>Mixins can also specify default values for their arguments using the normal variable-setting syntax. Then when the mixin is included, if it doesn't pass in that argument, the default value will be used instead. For example:</source>
          <target state="translated">Mixins也可以使用普通的变量设置语法为其参数指定默认值。然后,当 mixin 被包含时,如果它没有传入该参数,将使用默认值来代替。例如</target>
        </trans-unit>
        <trans-unit id="a89f1e192461e5943e97df4ea266b05de3cfe71b" translate="yes" xml:space="preserve">
          <source>Mixins can take SassScript values as arguments, which are given when the mixin is included and made available within the mixin as variables.</source>
          <target state="translated">Mixins可以接受SassScript的值作为参数,这些值在mixin被包含时给出,并在mixin中作为变量提供。</target>
        </trans-unit>
        <trans-unit id="2071f293bfe403300472d64fe85c7676303d0010" translate="yes" xml:space="preserve">
          <source>Mixins may also be included outside of any rule (that is, at the root of the document) as long as they don't directly define any properties or use any parent references. For example:</source>
          <target state="translated">只要不直接定义任何属性或使用任何父级引用,mixins也可以被包含在任何规则之外(即文档的根部)。例如</target>
        </trans-unit>
        <trans-unit id="1b75de159e94ab7dfa1b34d271e0ee2373620128" translate="yes" xml:space="preserve">
          <source>Mixins may also contain selectors, possibly mixed with properties. The selectors can even contain &lt;a href=&quot;#referencing_parent_selectors_&quot;&gt;parent references&lt;/a&gt;. For example:</source>
          <target state="translated">Mixins也可能包含选择器，可能与属性混合。选择器甚至可以包含&lt;a href=&quot;#referencing_parent_selectors_&quot;&gt;父引用&lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="2e0ba38fcb196c03060e6db7ef49eab994c721b6" translate="yes" xml:space="preserve">
          <source>Mixins may include themselves. This is different than the behavior of Sass versions prior to 3.3, where mixin recursion was forbidden.</source>
          <target state="translated">mixins可以包含自己。这与3.3之前的Sass版本的行为不同,在3.3之前的版本中,mixin递归是被禁止的。</target>
        </trans-unit>
        <trans-unit id="11ace01bca95506e406ba754b7248182fab3d1d8" translate="yes" xml:space="preserve">
          <source>Mixins that only define descendent selectors can be safely mixed into the top most level of a document.</source>
          <target state="translated">只定义子代选择器的mixins可以安全地混合到文档的最上层。</target>
        </trans-unit>
        <trans-unit id="d16a27d69c336f36f8b8c3be089eb20a3976fee1" translate="yes" xml:space="preserve">
          <source>Multiple Assignment #each-multi-assign</source>
          <target state="translated">多重作业#each-multi-assign(多重作业)</target>
        </trans-unit>
        <trans-unit id="e6f913e5657c2f46bca6d86b0b282bdb4e92d9bf" translate="yes" xml:space="preserve">
          <source>Multiple Extends</source>
          <target state="translated">多重扩展</target>
        </trans-unit>
        <trans-unit id="6b9c3fd36c58a4b311728f37c3faf47f2b86cda9" translate="yes" xml:space="preserve">
          <source>Multiple extends can also be written using a comma-separated list of selectors. For example, &lt;code&gt;@extend .error, .attention&lt;/code&gt; is the same as &lt;code&gt;@extend .error; @extend .attention&lt;/code&gt;.</source>
          <target state="translated">也可以使用逗号分隔的选择器列表来编写多个扩展。例如， &lt;code&gt;@extend .error, .attention&lt;/code&gt; 与 &lt;code&gt;@extend .error; @extend .attention&lt;/code&gt; 相同；@extend .attention。</target>
        </trans-unit>
        <trans-unit id="ba6f5c598a8196a3ad3093fcbf81e9ebc9a9bbaa" translate="yes" xml:space="preserve">
          <source>Named arguments can be passed in any order, and arguments with default values can be omitted. Since the named arguments are variable names, underscores and dashes can be used interchangeably.</source>
          <target state="translated">命名的参数可以按任何顺序传递,默认值的参数可以省略。由于命名的参数是变量名,下划线和破折号可以互换使用。</target>
        </trans-unit>
        <trans-unit id="d1f60bbdf9d3e6d11e707a834a9fa47911129fbc" translate="yes" xml:space="preserve">
          <source>Negative index values address elements in reverse order, starting with the last element in the list.</source>
          <target state="translated">负的索引值以反向顺序寻址元素,从列表中最后一个元素开始。</target>
        </trans-unit>
        <trans-unit id="2e21957ba8ac2ad32ca0fe1899ea29dd3dc4d523" translate="yes" xml:space="preserve">
          <source>Nested &lt;code&gt;@import&lt;/code&gt; #nested-import</source>
          <target state="translated">嵌套 &lt;code&gt;@import&lt;/code&gt; ＃嵌套进口</target>
        </trans-unit>
        <trans-unit id="ea53187d0b8860192e4cc973b4edf4179ca436b1" translate="yes" xml:space="preserve">
          <source>Nested Properties</source>
          <target state="translated">嵌套属性</target>
        </trans-unit>
        <trans-unit id="ecf40457f10c33b29daa2a84e20b485cd1d251d0" translate="yes" xml:space="preserve">
          <source>Nested Rules</source>
          <target state="translated">嵌套规则</target>
        </trans-unit>
        <trans-unit id="029abc8fcd094e12c6bd6cb1af59a9ff787923a7" translate="yes" xml:space="preserve">
          <source>Nested properties</source>
          <target state="translated">嵌套属性</target>
        </trans-unit>
        <trans-unit id="f0b610f173b363c6d397168ae6e235e8c6ca1741" translate="yes" xml:space="preserve">
          <source>Nested rules</source>
          <target state="translated">嵌套规则</target>
        </trans-unit>
        <trans-unit id="829996697cf657d3999063e276100b291e8b02d6" translate="yes" xml:space="preserve">
          <source>Nested style is the default Sass style, because it reflects the structure of the CSS styles and the HTML document they're styling. Each property has its own line, but the indentation isn't constant. Each rule is indented based on how deeply it's nested. For example:</source>
          <target state="translated">嵌套样式是默认的 Sass 样式,因为它反映了 CSS 样式的结构和它们所样式的 HTML 文档。每个属性都有自己的行,但缩进不是恒定的。每条规则的缩进都是基于它的嵌套深度。例如</target>
        </trans-unit>
        <trans-unit id="500e991d7263822a1c7bc95c88315929abd16088" translate="yes" xml:space="preserve">
          <source>Nested style is very useful when looking at large CSS files: it allows you to easily grasp the structure of the file without actually reading anything.</source>
          <target state="translated">嵌套样式在查看大型CSS文件时非常有用:它可以让你轻松掌握文件的结构,而无需实际阅读任何内容。</target>
        </trans-unit>
        <trans-unit id="f8b80d909c92f046f3dca9e5eef78526694d5082" translate="yes" xml:space="preserve">
          <source>Normally when you extend a selector, it's an error if that &lt;code&gt;@extend&lt;/code&gt; doesn't work. For example, if you write &lt;code&gt;a.important {@extend .notice}&lt;/code&gt;, it's an error if there are no selectors that contain &lt;code&gt;.notice&lt;/code&gt;. It's also an error if the only selector containing &lt;code&gt;.notice&lt;/code&gt; is &lt;code&gt;h1.notice&lt;/code&gt;, since &lt;code&gt;h1&lt;/code&gt; conflicts with &lt;code&gt;a&lt;/code&gt; and so no new selector would be generated.</source>
          <target state="translated">通常，当您扩展选择器时，如果该 &lt;code&gt;@extend&lt;/code&gt; 不起作用将是一个错误。例如，如果您编写一个 &lt;code&gt;a.important {@extend .notice}&lt;/code&gt; ，则如果没有包含 &lt;code&gt;.notice&lt;/code&gt; 的选择器，则会出现错误。如果唯一包含 &lt;code&gt;.notice&lt;/code&gt; 的选择器是 &lt;code&gt;h1.notice&lt;/code&gt; ，这也是一个错误，因为 &lt;code&gt;h1&lt;/code&gt; 与 &lt;code&gt;a&lt;/code&gt; 冲突，因此不会生成新的选择器。</target>
        </trans-unit>
        <trans-unit id="8a8ffe4eac13c64877326301c06fafbcccc8ae5e" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;$selector&lt;/code&gt;&lt;strong&gt;must be&lt;/strong&gt; a &lt;a href=&quot;http://dev.w3.org/csswg/selectors4/#compound&quot;&gt;compound selector&lt;/a&gt;. That means it cannot contain commas or spaces. It also means that unlike other selector functions, this takes only strings, not lists.</source>
          <target state="translated">请注意， &lt;code&gt;$selector&lt;/code&gt; &lt;strong&gt;必须是&lt;/strong&gt;一个&lt;a href=&quot;http://dev.w3.org/csswg/selectors4/#compound&quot;&gt;复合选择&lt;/a&gt;。这意味着它不能包含逗号或空格。这也意味着，与其他选择器函数不同的是，它仅接受字符串，而不包含列表。</target>
        </trans-unit>
        <trans-unit id="693df4e52e4ff8d7b0244ad166c78c841dadae76" translate="yes" xml:space="preserve">
          <source>Note that colors with an alpha channel (those created with the &lt;a href=&quot;sass/script/functions#rgba-instance_method&quot;&gt;rgba&lt;/a&gt; or &lt;a href=&quot;sass/script/functions#hsla-instance_method&quot;&gt;hsla&lt;/a&gt; functions) must have the same alpha value in order for color arithmetic to be done with them. The arithmetic doesn't affect the alpha value. For example:</source>
          <target state="translated">请注意，具有alpha通道的颜色（使用&lt;a href=&quot;sass/script/functions#rgba-instance_method&quot;&gt;rgba&lt;/a&gt;或&lt;a href=&quot;sass/script/functions#hsla-instance_method&quot;&gt;hsla&lt;/a&gt;函数创建的颜色）必须具有相同的alpha值，以便使用它们进行颜色算术。该算法不影响alpha值。例如：</target>
        </trans-unit>
        <trans-unit id="0de89687514028e280bf5b669d5f5d71ff81cee1" translate="yes" xml:space="preserve">
          <source>Note that if a quoted string is added to an unquoted string (that is, the quoted string is to the left of the &lt;code&gt;+&lt;/code&gt;), the result is a quoted string. Likewise, if an unquoted string is added to a quoted string (the unquoted string is to the left of the &lt;code&gt;+&lt;/code&gt;), the result is an unquoted string. For example:</source>
          <target state="translated">请注意，如果将带引号的字符串添加到未带引号的字符串（即，带引号的字符串在 &lt;code&gt;+&lt;/code&gt; 的左侧），则结果为带引号的字符串。同样，如果将未加引号的字符串添加到加引号的字符串（未加引号的字符串在 &lt;code&gt;+&lt;/code&gt; 的左侧），则结果为未加引号的字符串。例如：</target>
        </trans-unit>
        <trans-unit id="4a7263acabd39aa1aeb77388ab202b8bd00638a1" translate="yes" xml:space="preserve">
          <source>Note that map keys can be any Sass data type (even another map) and the syntax for declaring a map allows arbitrary SassScript expressions that will be evaluated to determine the key.</source>
          <target state="translated">请注意,map键可以是任何Sass数据类型(甚至是另一个map),而且声明map的语法允许任意的SassScript表达式,这些表达式将被评估以确定键。</target>
        </trans-unit>
        <trans-unit id="cbe4b8b6895d926247872a4e26c38d5715d96998" translate="yes" xml:space="preserve">
          <source>Note that this command does &lt;em&gt;not&lt;/em&gt; generate CSS files. For that, use the &lt;code&gt;sass&lt;/code&gt; command described elsewhere.</source>
          <target state="translated">请注意，这个命令不会&lt;em&gt;不&lt;/em&gt;生成CSS文件。为此，请使用其他地方介绍的 &lt;code&gt;sass&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="183963367a5b456c3047b44221867d6cef4d1e24" translate="yes" xml:space="preserve">
          <source>Note that unlike some languages, the first character in a Sass string is number 1, the second number 2, and so forth.</source>
          <target state="translated">请注意,与某些语言不同,Sass字符串中的第一个字符是数字1,第二个是数字2,以此类推。</target>
        </trans-unit>
        <trans-unit id="68ca367d5eae7afa2e54d9286cb52633f444a09d" translate="yes" xml:space="preserve">
          <source>Note that unlike some languages, the first item in a Sass list is number 1, the second number 2, and so forth.</source>
          <target state="translated">请注意,与某些语言不同,Sass列表中的第一项是1号,第二项是2号,以此类推。</target>
        </trans-unit>
        <trans-unit id="e7d5e88030367084f32b1e63e394a792c554cdc8" translate="yes" xml:space="preserve">
          <source>Note that you may not include a partial and a non-partial with the same name in the same directory. For example, &lt;code&gt;_colors.scss&lt;/code&gt; may not exist alongside &lt;code&gt;colors.scss&lt;/code&gt;.</source>
          <target state="translated">请注意，您不能在同一目录中包含具有相同名称的部分和非部分。例如， &lt;code&gt;_colors.scss&lt;/code&gt; 可能不与 &lt;code&gt;colors.scss&lt;/code&gt; 并存。</target>
        </trans-unit>
        <trans-unit id="f8e5b80cd153ea290fe80ec507174a87bc55c594" translate="yes" xml:space="preserve">
          <source>Now everything with class &lt;code&gt;.seriousError&lt;/code&gt; also has class &lt;code&gt;.error&lt;/code&gt;, and everything with class &lt;code&gt;.criticalError&lt;/code&gt; has class &lt;code&gt;.seriousError&lt;/code&gt;&lt;em&gt;and&lt;/em&gt; class &lt;code&gt;.error&lt;/code&gt;. It's compiled to:</source>
          <target state="translated">现在一切都用类 &lt;code&gt;.seriousError&lt;/code&gt; 也有类 &lt;code&gt;.error&lt;/code&gt; ，一切以阶级 &lt;code&gt;.criticalError&lt;/code&gt; 具有类 &lt;code&gt;.seriousError&lt;/code&gt; &lt;em&gt;和&lt;/em&gt;类 &lt;code&gt;.error&lt;/code&gt; 。它被编译为：</target>
        </trans-unit>
        <trans-unit id="ab0e1a3421b3343f3824ef813b9855587c7d9d08" translate="yes" xml:space="preserve">
          <source>Null values are treated as empty strings for string interpolation:</source>
          <target state="translated">空值在字符串插值时作为空字符串处理。</target>
        </trans-unit>
        <trans-unit id="e399d7ce3aaf6001026fc3298df535b4d6c80f77" translate="yes" xml:space="preserve">
          <source>Number Operations</source>
          <target state="translated">数字操作</target>
        </trans-unit>
        <trans-unit id="c0c3b5ef095430d85fb2cd85d4948d220c3f5146" translate="yes" xml:space="preserve">
          <source>Number operations</source>
          <target state="translated">数字运算</target>
        </trans-unit>
        <trans-unit id="9d8672fb5aad66a7b49f343531639b5bd3fc9fb1" translate="yes" xml:space="preserve">
          <source>Often it's more useful to use &lt;a href=&quot;sass/script/functions&quot;&gt;color functions&lt;/a&gt; than to try to use color arithmetic to achieve the same effect.</source>
          <target state="translated">通常，使用&lt;a href=&quot;sass/script/functions&quot;&gt;颜色函数&lt;/a&gt;比尝试使用颜色算术来达到相同的效果更有用。</target>
        </trans-unit>
        <trans-unit id="c1bb7de4e712a1102afa787f557e76b7b4a19cb6" translate="yes" xml:space="preserve">
          <source>On their own, lists don't do much, but the &lt;a href=&quot;sass/script/functions#list-functions&quot;&gt;SassScript list functions&lt;/a&gt; make them useful. The &lt;a href=&quot;sass/script/functions#nth-instance_method&quot;&gt;&lt;code&gt;nth&lt;/code&gt; function&lt;/a&gt; can access items in a list, the &lt;a href=&quot;sass/script/functions#join-instance_method&quot;&gt;&lt;code&gt;join&lt;/code&gt; function&lt;/a&gt; can join multiple lists together, and the &lt;a href=&quot;sass/script/functions#append-instance_method&quot;&gt;&lt;code&gt;append&lt;/code&gt; function&lt;/a&gt; can add items to lists. The &lt;a href=&quot;#each-directive&quot;&gt;&lt;code&gt;@each&lt;/code&gt; directive&lt;/a&gt; can also add styles for each item in a list.</source>
          <target state="translated">列表本身并没有多大作用，但是&lt;a href=&quot;sass/script/functions#list-functions&quot;&gt;SassScript列表功能&lt;/a&gt;使它们有用。第&lt;a href=&quot;sass/script/functions#nth-instance_method&quot;&gt; &lt;code&gt;nth&lt;/code&gt; 函数&lt;/a&gt;可以访问列表中的项目，&lt;a href=&quot;sass/script/functions#join-instance_method&quot;&gt; &lt;code&gt;join&lt;/code&gt; 函数&lt;/a&gt;可以将多个列表连接在一起，而&lt;a href=&quot;sass/script/functions#append-instance_method&quot;&gt; &lt;code&gt;append&lt;/code&gt; 函数&lt;/a&gt;可以将项目添加到列表中。该&lt;a href=&quot;#each-directive&quot;&gt; &lt;code&gt;@each&lt;/code&gt; 指令&lt;/a&gt;还可以添加样式列表中的每个项目。</target>
        </trans-unit>
        <trans-unit id="70b57e7b3d16bab3bdd24991cb5e543ffb1d4d18" translate="yes" xml:space="preserve">
          <source>On their own, without any use of &lt;code&gt;@extend&lt;/code&gt;, rulesets that use placeholder selectors will not be rendered to CSS.</source>
          <target state="translated">&lt;code&gt;@extend&lt;/code&gt; 它们自己，不使用任何@extend，使用占位符选择器的规则集将不会呈现给CSS。</target>
        </trans-unit>
        <trans-unit id="a1fdaa6b2a846c8fcf18d414bf8c61db610eda6a" translate="yes" xml:space="preserve">
          <source>Operations</source>
          <target state="translated">Operations</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="9d722ae6ba6a2a258f254b324106a2e548339c2b" translate="yes" xml:space="preserve">
          <source>Options can be set by setting the &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#options-instance_method&quot;&gt;Sass::Plugin#options&lt;/a&gt; hash in &lt;code&gt;environment.rb&lt;/code&gt; in Rails or &lt;code&gt;config.ru&lt;/code&gt; in Rack...</source>
          <target state="translated">可以通过在Rails的 &lt;code&gt;environment.rb&lt;/code&gt; 中或在Rack的 &lt;code&gt;config.ru&lt;/code&gt; 中设置&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Plugin/Configuration.html#options-instance_method&quot;&gt;Sass :: Plugin＃options&lt;/a&gt;哈希来设置选项。</target>
        </trans-unit>
        <trans-unit id="6f526dde77cafc7928204d8dac6318bed6f35f64" translate="yes" xml:space="preserve">
          <source>Or it can be used with a block containing multiple selectors:</source>
          <target state="translated">或者它可以与包含多个选择器的块一起使用。</target>
        </trans-unit>
        <trans-unit id="d4f2619ee691b00d4f190fa8da9ca100f4cc10ea" translate="yes" xml:space="preserve">
          <source>Other rules that use &lt;code&gt;.error&lt;/code&gt; will work for &lt;code&gt;.seriousError&lt;/code&gt; as well. For example, if we have special styles for errors caused by hackers:</source>
          <target state="translated">使用 &lt;code&gt;.error&lt;/code&gt; 的其他规则也适用于 &lt;code&gt;.seriousError&lt;/code&gt; 。例如，如果我们对由黑客引起的错误有特殊的样式：</target>
        </trans-unit>
        <trans-unit id="3aef76f8ba6fd4806d49ff4edaf1a4218d4bfc97" translate="yes" xml:space="preserve">
          <source>Output Style</source>
          <target state="translated">输出样式</target>
        </trans-unit>
        <trans-unit id="a2aaba6b325189ed96937a41610eb44a978a20f8" translate="yes" xml:space="preserve">
          <source>Output Styles</source>
          <target state="translated">输出样式</target>
        </trans-unit>
        <trans-unit id="2df118b905265e6c5d11e3b228c057a3b6eccb04" translate="yes" xml:space="preserve">
          <source>Overloads:</source>
          <target state="translated">Overloads:</target>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="f9627107a88876f4aaf6d7e0b0c19984c3a631ae" translate="yes" xml:space="preserve">
          <source>Parentheses</source>
          <target state="translated">Parentheses</target>
        </trans-unit>
        <trans-unit id="5a5d3ecaebab08de9a057833d6989aba76a6656a" translate="yes" xml:space="preserve">
          <source>Parentheses can be used to affect the order of operations:</source>
          <target state="translated">可以用括号来影响操作的顺序。</target>
        </trans-unit>
        <trans-unit id="475223ba441a6a2cbde2eba855bcbcf7b222ffeb" translate="yes" xml:space="preserve">
          <source>Parses a user-provided selector into a list of lists of strings as returned by &lt;code&gt;&amp;amp;&lt;/code&gt;.</source>
          <target state="translated">将用户提供的选择器解析为 &lt;code&gt;&amp;amp;&lt;/code&gt; 返回的字符串列表。</target>
        </trans-unit>
        <trans-unit id="382fe0b44eb7a4d065589fd8df9dba7c7e579df1" translate="yes" xml:space="preserve">
          <source>Partials #partials</source>
          <target state="translated">Partials #partials</target>
        </trans-unit>
        <trans-unit id="174507f368602cb47eca3dcf6a7c4744ce9c47f3" translate="yes" xml:space="preserve">
          <source>Passing Content Blocks to a Mixin #mixin-content</source>
          <target state="translated">传递内容块到mixin #mixin-content</target>
        </trans-unit>
        <trans-unit id="b8dbc970b1740db190bc80080356a5c06b33e85a" translate="yes" xml:space="preserve">
          <source>Placeholder Selectors: &lt;code&gt;%foo&lt;/code&gt;</source>
          <target state="translated">占位符选择器： &lt;code&gt;%foo&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0f1e4410b7c54d63bca94a5b0237017928759bd" translate="yes" xml:space="preserve">
          <source>Placeholder selectors look like class and id selectors, except the &lt;code&gt;#&lt;/code&gt; or &lt;code&gt;.&lt;/code&gt; is replaced by &lt;code&gt;%&lt;/code&gt;. They can be used anywhere a class or id could, and on their own they prevent rulesets from being rendered to CSS. For example:</source>
          <target state="translated">占位符选择器看起来像类和id选择器，除了 &lt;code&gt;#&lt;/code&gt; 或 &lt;code&gt;.&lt;/code&gt; 被 &lt;code&gt;%&lt;/code&gt; 代替。它们可以在类或id可以使用的任何地方使用，并且它们自己可以防止将规则集呈现给CSS。例如：</target>
        </trans-unit>
        <trans-unit id="919c02f72c8dc766a3ec88ccb258a30d50b18ab4" translate="yes" xml:space="preserve">
          <source>Rack/Rails/Merb Plugin</source>
          <target state="translated">Rack/Rails/Merb Plugin</target>
        </trans-unit>
        <trans-unit id="e0eb5268f437200e3ca42ec2d178bdfb80e8e252" translate="yes" xml:space="preserve">
          <source>Raises:</source>
          <target state="translated">Raises:</target>
        </trans-unit>
        <trans-unit id="c07be06a9d0942a578db072018d18f8a662503c6" translate="yes" xml:space="preserve">
          <source>Referencing Parent Selectors: &lt;code&gt;&amp;amp;&lt;/code&gt; #parent-selector</source>
          <target state="translated">引用父选择器： &lt;code&gt;&amp;amp;&lt;/code&gt; ＃parent-selector</target>
        </trans-unit>
        <trans-unit id="300d986e9c634e87b8a5acab34b704dc9f08b5e3" translate="yes" xml:space="preserve">
          <source>Relational operators (&lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;) are also supported for numbers, and equality operators (&lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;) are supported for all types.</source>
          <target state="translated">数字也支持关系运算符（ &lt;code&gt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;=&lt;/code&gt; 和 &lt;code&gt;&amp;gt;=&lt;/code&gt; ），所有类型均支持等号运算符（ &lt;code&gt;==&lt;/code&gt; ， &lt;code&gt;!=&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="670a1246f19c95ceec3dc72fea9216deb3b1e8e8" translate="yes" xml:space="preserve">
          <source>Removes quotes from a string. If the string is already unquoted, this will return it unmodified.</source>
          <target state="translated">删除字符串中的引号。如果字符串已经没有引号,则将返回未修改的字符串。</target>
        </trans-unit>
        <trans-unit id="1607356e597f16ff04732753955c924b6ac2187c" translate="yes" xml:space="preserve">
          <source>Replaces all instances of &lt;code&gt;$original&lt;/code&gt; with &lt;code&gt;$replacement&lt;/code&gt; in &lt;code&gt;$selector&lt;/code&gt;</source>
          <target state="translated">替换的所有实例 &lt;code&gt;$original&lt;/code&gt; 与 &lt;code&gt;$replacement&lt;/code&gt; 在 &lt;code&gt;$selector&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0a098796ce9c4464f246388db35938a4fb8e9e25" translate="yes" xml:space="preserve">
          <source>Return a decimal between 0 and 1, inclusive of 0 but not 1.</source>
          <target state="translated">返回0和1之间的小数,包括0但不包括1。</target>
        </trans-unit>
        <trans-unit id="ca697c9676025d695d9bb3bdfe66da3ae3200550" translate="yes" xml:space="preserve">
          <source>Return a new list, based on the list provided, but with the nth element changed to the value given.</source>
          <target state="translated">根据所提供的列表返回一个新的列表,但第n个元素的值被改为给定值。</target>
        </trans-unit>
        <trans-unit id="f6a62674270588e7988262fa17987874416e5829" translate="yes" xml:space="preserve">
          <source>Return a new selector with all selectors in &lt;code&gt;$selectors&lt;/code&gt; appended one another as though they had been nested in the stylesheet as &lt;code&gt;$selector1 { &amp;amp;$selector2 { ... } }&lt;/code&gt;.</source>
          <target state="translated">返回一个新选择器，其中 &lt;code&gt;$selectors&lt;/code&gt; 所有选择器都相互附加，就好像它们嵌套在样式表中一样是 &lt;code&gt;$selector1 { &amp;amp;$selector2 { ... } }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d786c6c7ee742054a909f7c1b81b3ba1b0385868" translate="yes" xml:space="preserve">
          <source>Return a new selector with all selectors in &lt;code&gt;$selectors&lt;/code&gt; nested beneath one another as though they had been nested in the stylesheet as &lt;code&gt;$selector1 { $selector2 { ... } }&lt;/code&gt;.</source>
          <target state="translated">返回一个新选择器，其中 &lt;code&gt;$selectors&lt;/code&gt; 所有选择器彼此嵌套，就好像它们在样式表中嵌套为 &lt;code&gt;$selector1 { $selector2 { ... } }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fecae0aae65cbb793f8b56a5e7bd50520734109b" translate="yes" xml:space="preserve">
          <source>Return a string containing the value as its Sass representation.</source>
          <target state="translated">返回一个包含Sass表示值的字符串。</target>
        </trans-unit>
        <trans-unit id="90e91a4bbe1cfd7eb6a7673ffd79bad43d456339" translate="yes" xml:space="preserve">
          <source>Return an integer between 1 and &lt;code&gt;$limit&lt;/code&gt;, inclusive of both 1 and &lt;code&gt;$limit&lt;/code&gt;.</source>
          <target state="translated">返回介于1和 &lt;code&gt;$limit&lt;/code&gt; 之间的整数，包括1和 &lt;code&gt;$limit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c07470b33157e00d0801cb59275e075b771c1ccb" translate="yes" xml:space="preserve">
          <source>Return the length of a list.</source>
          <target state="translated">返回列表的长度。</target>
        </trans-unit>
        <trans-unit id="8f6a052d8f52ede9829ca353baf2ad1fe25aef91" translate="yes" xml:space="preserve">
          <source>Returns A list of lists of strings representing &lt;code&gt;$selector&lt;/code&gt;. This is in the same format as a selector returned by &lt;code&gt;&amp;amp;&lt;/code&gt;.</source>
          <target state="translated">返回表示 &lt;code&gt;$selector&lt;/code&gt; 的字符串列表的列表。该格式 &lt;code&gt;&amp;amp;&lt;/code&gt; 返回的选择器格式相同。</target>
        </trans-unit>
        <trans-unit id="c8b878ae579da9409cf7d7baa8ef1f74d25be570" translate="yes" xml:space="preserve">
          <source>Returns A list of lists of strings representing the result of appending &lt;code&gt;$selectors&lt;/code&gt;. This is in the same format as a selector returned by &lt;code&gt;&amp;amp;&lt;/code&gt;.</source>
          <target state="translated">返回值表示附加 &lt;code&gt;$selectors&lt;/code&gt; 的结果的字符串列表的列表。该格式 &lt;code&gt;&amp;amp;&lt;/code&gt; 返回的选择器格式相同。</target>
        </trans-unit>
        <trans-unit id="681bf66491ff841a9a3ecda1364da535f5efc671" translate="yes" xml:space="preserve">
          <source>Returns A list of lists of strings representing the result of nesting &lt;code&gt;$selectors&lt;/code&gt;. This is in the same format as a selector returned by &lt;code&gt;&amp;amp;&lt;/code&gt;.</source>
          <target state="translated">返回值表示嵌套 &lt;code&gt;$selectors&lt;/code&gt; 结果的字符串列表的列表。该格式 &lt;code&gt;&amp;amp;&lt;/code&gt; 返回的选择器格式相同。</target>
        </trans-unit>
        <trans-unit id="cafdbbccfa855d711958927868096ff911afe9f8" translate="yes" xml:space="preserve">
          <source>Returns A list of lists of strings representing the result of the extension. This is in the same format as a selector returned by &lt;code&gt;&amp;amp;&lt;/code&gt;.</source>
          <target state="translated">返回值表示扩展结果的字符串列表的列表。该格式 &lt;code&gt;&amp;amp;&lt;/code&gt; 返回的选择器格式相同。</target>
        </trans-unit>
        <trans-unit id="cb3112dd58bcce2f656ec836bc0870940f3b7cb6" translate="yes" xml:space="preserve">
          <source>Returns A list of lists of strings representing the result of the unification, or null if no unification exists. This is in the same format as a selector returned by &lt;code&gt;&amp;amp;&lt;/code&gt;.</source>
          <target state="translated">返回值表示统一结果的字符串列表的列表；如果不存在统一，则返回null。该格式 &lt;code&gt;&amp;amp;&lt;/code&gt; 返回的选择器的格式相同。</target>
        </trans-unit>
        <trans-unit id="7fff605b99df76ab731c698f7cedf9a3671871f0" translate="yes" xml:space="preserve">
          <source>Returns A list of simple selectors in the compound selector.</source>
          <target state="translated">返回复合选择器中的简单选择器列表。</target>
        </trans-unit>
        <trans-unit id="7810bbd9c0fa87887e06262e239afdf0537d4582" translate="yes" xml:space="preserve">
          <source>Returns The substring. This will be quoted if and only if &lt;code&gt;$string&lt;/code&gt; was quoted</source>
          <target state="translated">返回子字符串。仅当引用 &lt;code&gt;$string&lt;/code&gt; 时才引用</target>
        </trans-unit>
        <trans-unit id="45122d96ce3cff3b4f36a0787a2f17262c4946d7" translate="yes" xml:space="preserve">
          <source>Returns Whether &lt;code&gt;$selector1&lt;/code&gt; is a superselector of &lt;code&gt;$selector2&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;$selector1&lt;/code&gt; 是否为$ selector2的超 &lt;code&gt;$selector2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f45056679ba8933cc8f58a15e532480b82589e48" translate="yes" xml:space="preserve">
          <source>Returns a list of all keys in a map.</source>
          <target state="translated">返回地图中所有键的列表。</target>
        </trans-unit>
        <trans-unit id="468e70b240f8d38fce4be5ca4f56db2f415dfc22" translate="yes" xml:space="preserve">
          <source>Returns a list of all values in a map. This list may include duplicate values, if multiple keys have the same value.</source>
          <target state="translated">返回一个地图中所有值的列表,如果多个键有相同的值,这个列表可能包括重复的值。如果多个键的值相同,这个列表可能包括重复的值。</target>
        </trans-unit>
        <trans-unit id="f6d643e2176a2ae6ca49ca4e54fd08bc70807b73" translate="yes" xml:space="preserve">
          <source>Returns a new map with keys removed.</source>
          <target state="translated">返回一个去掉键的新地图。</target>
        </trans-unit>
        <trans-unit id="aa71fec219d9e6da99bbca84041bb4d3e6acaaca" translate="yes" xml:space="preserve">
          <source>Returns a new version of &lt;code&gt;$selector&lt;/code&gt; with &lt;code&gt;$extendee&lt;/code&gt; extended with &lt;code&gt;$extender&lt;/code&gt;. This works just like the result of</source>
          <target state="translated">返回的新版本 &lt;code&gt;$selector&lt;/code&gt; 与 &lt;code&gt;$extendee&lt;/code&gt; 扩展了 &lt;code&gt;$extender&lt;/code&gt; 。就像...的结果一样</target>
        </trans-unit>
        <trans-unit id="79db0f86648abae15ff2e887d2f8b783c7aca591" translate="yes" xml:space="preserve">
          <source>Returns a reference to a function for later invocation with the &lt;code&gt;call()&lt;/code&gt; function.</source>
          <target state="translated">返回对该函数的引用，以供以后使用 &lt;code&gt;call()&lt;/code&gt; 函数调用。</target>
        </trans-unit>
        <trans-unit id="dd453ac892432e3a43f7f4574d7f4c8c32a37a86" translate="yes" xml:space="preserve">
          <source>Returns a unique CSS identifier. The identifier is returned as an unquoted string. The identifier returned is only guaranteed to be unique within the scope of a single Sass run.</source>
          <target state="translated">返回一个唯一的CSS标识符。返回的标识符是一个未加引号的字符串。返回的标识符只保证在单个Sass运行的范围内是唯一的。</target>
        </trans-unit>
        <trans-unit id="ebd04b66d30293595136a62cc8fac8b316642c0c" translate="yes" xml:space="preserve">
          <source>Returns one of two values, depending on whether or not &lt;code&gt;$condition&lt;/code&gt; is true. Just like in &lt;code&gt;@if&lt;/code&gt;, all values other than &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt; are considered to be true.</source>
          <target state="translated">返回两个值之一，具体取决于 &lt;code&gt;$condition&lt;/code&gt; 是否为true。就像 &lt;code&gt;@if&lt;/code&gt; 中一样，除 &lt;code&gt;false&lt;/code&gt; 和 &lt;code&gt;null&lt;/code&gt; 以外的所有其他值均被视为true。</target>
        </trans-unit>
        <trans-unit id="64badb95bd6e180f7ab47ec8541c943a1790de67" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;http://dev.w3.org/csswg/selectors4/#simple&quot;&gt;simple selectors&lt;/a&gt; that comprise the compound selector &lt;code&gt;$selector&lt;/code&gt;.</source>
          <target state="translated">返回组成复合选择器 &lt;code&gt;$selector&lt;/code&gt; 的&lt;a href=&quot;http://dev.w3.org/csswg/selectors4/#simple&quot;&gt;简单选择&lt;/a&gt;器。</target>
        </trans-unit>
        <trans-unit id="92873924a9d3752bf60b47c8caa32746f6f19e6a" translate="yes" xml:space="preserve">
          <source>Returns the absolute value of a number.</source>
          <target state="translated">返回一个数字的绝对值。</target>
        </trans-unit>
        <trans-unit id="f46b179b300313527135804bce4ea7f6a9606098" translate="yes" xml:space="preserve">
          <source>Returns the alpha component (opacity) of a color. This is 1 unless otherwise specified.</source>
          <target state="translated">返回颜色的alpha分量(不透明度)。除非另有规定,否则为1。</target>
        </trans-unit>
        <trans-unit id="12c86362af22b819d23c565553dc7874f1a4f890" translate="yes" xml:space="preserve">
          <source>Returns the complement of a color. This is identical to &lt;code&gt;adjust-hue(color, 180deg)&lt;/code&gt;.</source>
          <target state="translated">返回颜色的补码。这与 &lt;code&gt;adjust-hue(color, 180deg)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b714880704f4221e7c84d524db3b93d8c1914511" translate="yes" xml:space="preserve">
          <source>Returns the hue component of a color. See &lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;the CSS3 HSL specification&lt;/a&gt;. Calculated from RGB where necessary via &lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;this algorithm&lt;/a&gt;.</source>
          <target state="translated">返回颜色的色相分量。请参阅&lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;CSS3 HSL规范&lt;/a&gt;。根据需要通过&lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;此算法&lt;/a&gt;从RGB计算得出。</target>
        </trans-unit>
        <trans-unit id="6a86d40dc31663716b8dd230ca848ea8debb7627" translate="yes" xml:space="preserve">
          <source>Returns the index of the first occurrence of &lt;code&gt;$substring&lt;/code&gt; in &lt;code&gt;$string&lt;/code&gt;. If there is no such occurrence, returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">返回第一次出现的索引 &lt;code&gt;$substring&lt;/code&gt; 在 &lt;code&gt;$string&lt;/code&gt; 。如果没有这种情况，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b0f1c6f93d5d7d41e6d57ca82b7380bcf1c5f875" translate="yes" xml:space="preserve">
          <source>Returns the inverse (negative) of a color. The red, green, and blue values are inverted, while the opacity is left alone.</source>
          <target state="translated">返回一个颜色的反值(负值)。红、绿、蓝的值被反转,而不透明度则保持不变。</target>
        </trans-unit>
        <trans-unit id="dda555fb62111de0a6fb209830d06dd85ab5571c" translate="yes" xml:space="preserve">
          <source>Returns the lightness component of a color. See &lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;the CSS3 HSL specification&lt;/a&gt;. Calculated from RGB where necessary via &lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;this algorithm&lt;/a&gt;.</source>
          <target state="translated">返回颜色的明度分量。请参阅&lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;CSS3 HSL规范&lt;/a&gt;。根据需要通过&lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;此算法&lt;/a&gt;从RGB 计算。</target>
        </trans-unit>
        <trans-unit id="a4c72c1f0ec9a89d8e1d0dd82e563fd74978d2df" translate="yes" xml:space="preserve">
          <source>Returns the map of named arguments passed to a function or mixin that takes a variable argument list. The argument names are strings, and they do not contain the leading &lt;code&gt;$&lt;/code&gt;.</source>
          <target state="translated">返回传递给采用可变参数列表的函数或mixin的命名参数的映射。参数名称是字符串，并且不包含前导 &lt;code&gt;$&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e9d66a090772cb1ac29a4a909fc75131e66ec53a" translate="yes" xml:space="preserve">
          <source>Returns the number of characters in a string.</source>
          <target state="translated">返回字符串中的字符数。</target>
        </trans-unit>
        <trans-unit id="51adfc85d1372e7351711e3637b7302b4685ad67" translate="yes" xml:space="preserve">
          <source>Returns the position of a value within a list. If the value isn't found, returns &lt;code&gt;null&lt;/code&gt; instead.</source>
          <target state="translated">返回值在列表中的位置。如果找不到该值，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6cdad8aaddc6f132e2bab59fdb694bb44740b3e" translate="yes" xml:space="preserve">
          <source>Returns the saturation component of a color. See &lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;the CSS3 HSL specification&lt;/a&gt;. Calculated from RGB where necessary via &lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;this algorithm&lt;/a&gt;.</source>
          <target state="translated">返回颜色的饱和度分量。请参阅&lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;CSS3 HSL规范&lt;/a&gt;。根据需要通过&lt;a href=&quot;http://en.wikipedia.org/wiki/HSL_and_HSV#Conversion_from_RGB_to_HSL_or_HSV&quot;&gt;此算法&lt;/a&gt;从RGB计算得出。</target>
        </trans-unit>
        <trans-unit id="4f998c8bd6e3f467c292b5f896cdc1bfbad1e118" translate="yes" xml:space="preserve">
          <source>Returns the separator of a list. If the list doesn't have a separator due to having fewer than two elements, returns &lt;code&gt;space&lt;/code&gt;.</source>
          <target state="translated">返回列表的分隔符。如果列表由于少于两个元素而没有分隔符，则返回 &lt;code&gt;space&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e4dd2b713f992a8bd714d2b748a64683b9489dc1" translate="yes" xml:space="preserve">
          <source>Returns the type of a value.</source>
          <target state="translated">返回一个值的类型。</target>
        </trans-unit>
        <trans-unit id="52c8bae0dde8ae72c66d9780a9be60588342bc2f" translate="yes" xml:space="preserve">
          <source>Returns the unit(s) associated with a number. Complex units are sorted in alphabetical order by numerator and denominator.</source>
          <target state="translated">返回与一个数字相关联的单位。复数单位按分子和分母的字母顺序排列。</target>
        </trans-unit>
        <trans-unit id="01c83de52a2dca912d609d97b917f8b85561d97e" translate="yes" xml:space="preserve">
          <source>Returns the value in a map associated with the given key. If the map doesn't have such a key, returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">返回与给定键关联的映射中的值。如果地图没有这样的键，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a53ebaa01a91a951006e99359c0e5fcf7bd6b1c" translate="yes" xml:space="preserve">
          <source>Returns whether &lt;code&gt;$super&lt;/code&gt; is a superselector of &lt;code&gt;$sub&lt;/code&gt;. This means that &lt;code&gt;$super&lt;/code&gt; matches all the elements that &lt;code&gt;$sub&lt;/code&gt; matches, as well as possibly additional elements. In general, simpler selectors tend to be superselectors of more complex oned.</source>
          <target state="translated">返回 &lt;code&gt;$super&lt;/code&gt; 是否为 &lt;code&gt;$sub&lt;/code&gt; 的超选择器。这意味着 &lt;code&gt;$super&lt;/code&gt; 匹配 &lt;code&gt;$sub&lt;/code&gt; 匹配的所有元素，以及可能的其他元素。通常，更简单的选择器往往是更复杂的超级选择器。</target>
        </trans-unit>
        <trans-unit id="002cc08698af3245841b56580f4802889b222e9b" translate="yes" xml:space="preserve">
          <source>Returns whether a feature exists in the current Sass runtime.</source>
          <target state="translated">返回当前Sass运行时是否存在一个特性。</target>
        </trans-unit>
        <trans-unit id="9e1c1081c33d4ac1921a8fcefbe4187e66d4fcc4" translate="yes" xml:space="preserve">
          <source>Returns whether a list uses square brackets.</source>
          <target state="translated">返回列表是否使用方括号。</target>
        </trans-unit>
        <trans-unit id="b00d68d5169484005d39afdd83116fbb95e55a30" translate="yes" xml:space="preserve">
          <source>Returns whether a map has a value associated with a given key.</source>
          <target state="translated">返回一个地图是否有一个与给定键相关联的值。</target>
        </trans-unit>
        <trans-unit id="ede60bc210641adae890fb0f1eb3bd4419854021" translate="yes" xml:space="preserve">
          <source>Returns whether a number has units.</source>
          <target state="translated">返回一个数字是否有单位。</target>
        </trans-unit>
        <trans-unit id="513e5d1980899cec88f10b5fa101612d18128fb5" translate="yes" xml:space="preserve">
          <source>Returns whether two numbers can added, subtracted, or compared.</source>
          <target state="translated">返回两个数是否可以相加、相减或相比较。</target>
        </trans-unit>
        <trans-unit id="7749fcf802c472b6c2f5bd0556805e456ffd5674" translate="yes" xml:space="preserve">
          <source>Returns:</source>
          <target state="translated">Returns:</target>
        </trans-unit>
        <trans-unit id="ceac41cf1a3ce44c31141786b8378b18726d6760" translate="yes" xml:space="preserve">
          <source>Rounds a number down to the previous whole number.</source>
          <target state="translated">将一个数字四舍五入到前一个整数。</target>
        </trans-unit>
        <trans-unit id="76c0fc06f4f913113e6238495ff0b6e9310e1e71" translate="yes" xml:space="preserve">
          <source>Rounds a number to the nearest whole number.</source>
          <target state="translated">将一个数字四舍五入到最接近的整数。</target>
        </trans-unit>
        <trans-unit id="ec103be4593a89ce5a25e929fcd41f443602c66e" translate="yes" xml:space="preserve">
          <source>Rounds a number up to the next whole number.</source>
          <target state="translated">将一个数字向上舍入到下一个整数。</target>
        </trans-unit>
        <trans-unit id="b6eeeb3abd2a7bc179a6b6d5c56488b5f8c903a7" translate="yes" xml:space="preserve">
          <source>Sass</source>
          <target state="translated">Sass</target>
        </trans-unit>
        <trans-unit id="10f303be29e42d399e1affaea1a02b6e87b23864" translate="yes" xml:space="preserve">
          <source>Sass (Syntactically Awesome StyleSheets)</source>
          <target state="translated">Sass (Syntactically Awesome StyleSheets)</target>
        </trans-unit>
        <trans-unit id="341d3556acd434f0488bd651ce9f2aa58ae8059e" translate="yes" xml:space="preserve">
          <source>Sass Functions</source>
          <target state="translated">Sass函数</target>
        </trans-unit>
        <trans-unit id="12104abfe0a714244e52948eb45c8539279c98f2" translate="yes" xml:space="preserve">
          <source>Sass allows CSS rules to be nested within one another. The inner rule then only applies within the outer rule's selector. For example:</source>
          <target state="translated">Sass允许CSS规则相互嵌套。然后,内部规则只适用于外部规则的选择器。例如</target>
        </trans-unit>
        <trans-unit id="4c4356380b68b4f78ea663bc4f71a4efe353604b" translate="yes" xml:space="preserve">
          <source>Sass allows you to choose between four different output styles by setting the &lt;a href=&quot;#style-option&quot;&gt;&lt;code&gt;:style&lt;/code&gt; option&lt;/a&gt; or using the &lt;code&gt;--style&lt;/code&gt; command-line flag.</source>
          <target state="translated">Sass允许您通过设置&lt;a href=&quot;#style-option&quot;&gt; &lt;code&gt;:style&lt;/code&gt; 选项&lt;/a&gt;或使用 &lt;code&gt;--style&lt;/code&gt; 命令行标志在四种不同的输出样式之间进行选择。</target>
        </trans-unit>
        <trans-unit id="1fcecb417df186591f20e0217f21fc1287957cb4" translate="yes" xml:space="preserve">
          <source>Sass caches parsed documents so that they can be reused without parsing them again unless they have changed. By default, Sass will write these cache files to a location on the filesystem indicated by &lt;a href=&quot;#cache_location-option&quot;&gt;&lt;code&gt;:cache_location&lt;/code&gt;&lt;/a&gt;. If you cannot write to the filesystem or need to share cache across ruby processes or machines, then you can define your own cache store and set the&lt;a href=&quot;#cache_store-option&quot;&gt;&lt;code&gt;:cache_store&lt;/code&gt; option&lt;/a&gt;. For details on creating your own cache store, please see the &lt;a href=&quot;http://sass-lang.com/documentation/Sass/CacheStores/Base.html&quot;&gt;source documentation&lt;/a&gt;.</source>
          <target state="translated">Sass缓存已解析的文档，以便可以重新使用它们而无需再次解析它们，除非它们已更改。默认情况下，Sass会将这些缓存文件写入文件系统上的某个位置，该位置由&lt;a href=&quot;#cache_location-option&quot;&gt; &lt;code&gt;:cache_location&lt;/code&gt; &lt;/a&gt;指示。如果您无法写入文件系统或需要在ruby进程或机器之间共享缓存，则可以定义自己的缓存存储并设置&lt;a href=&quot;#cache_store-option&quot;&gt; &lt;code&gt;:cache_store&lt;/code&gt; 选项&lt;/a&gt;。有关创建自己的缓存存储区的详细信息，请参阅&lt;a href=&quot;http://sass-lang.com/documentation/Sass/CacheStores/Base.html&quot;&gt;源文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bfd8d49434b5dc18b7647e61d36eb01f1ddf972c" translate="yes" xml:space="preserve">
          <source>Sass can be used in three ways: as a command-line tool, as a standalone Ruby module, and as a plugin for any Rack-enabled framework, including Ruby on Rails and Merb. The first step for all of these is to install the Sass gem:</source>
          <target state="translated">Sass可以通过三种方式使用:作为一个命令行工具,作为一个独立的Ruby模块,以及作为任何Rack支持的框架的插件,包括Ruby on Rails和Merb。所有这些步骤的第一步是安装Sass gem。</target>
        </trans-unit>
        <trans-unit id="9785c4245593a2393e5e7772e6bebb5a19179df5" translate="yes" xml:space="preserve">
          <source>Sass extends the CSS &lt;code&gt;@import&lt;/code&gt; rule to allow it to import SCSS and Sass files. All imported SCSS and Sass files will be merged together into a single CSS output file. In addition, any variables or &lt;a href=&quot;#mixins&quot;&gt;mixins&lt;/a&gt; defined in imported files can be used in the main file.</source>
          <target state="translated">Sass扩展了CSS &lt;code&gt;@import&lt;/code&gt; 规则，以允许其导入SCSS和Sass文件。所有导入的SCSS和Sass文件都将合并到一个CSS输出文件中。此外，在导入文件中定义的任何变量或&lt;a href=&quot;#mixins&quot;&gt;混合&lt;/a&gt;可以在主文件中使用。</target>
        </trans-unit>
        <trans-unit id="5f61b7c2b219adb088c062ff92b89a8fd236d7b6" translate="yes" xml:space="preserve">
          <source>Sass functions can also be called using explicit keyword arguments. The above example can also be written as:</source>
          <target state="translated">Sass函数也可以使用显式关键字参数来调用。上面的例子也可以写成</target>
        </trans-unit>
        <trans-unit id="cfa9fc50eb1a1d181640003689cbe25d33fc0977" translate="yes" xml:space="preserve">
          <source>Sass importers are in charge of taking paths passed to &lt;code&gt;@import&lt;/code&gt; and finding the appropriate Sass code for those paths. By default, this code is loaded from the &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Filesystem.html&quot;&gt;filesystem&lt;/a&gt;, but importers could be added to load from a database, over HTTP, or use a different file naming scheme than what Sass expects.</source>
          <target state="translated">Sass进口商负责获取传递给 &lt;code&gt;@import&lt;/code&gt; 的路径，并为这些路径找到合适的Sass代码。默认情况下，此代码是从&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Filesystem.html&quot;&gt;文件系统&lt;/a&gt;加载的，但是可以添加导入器以通过HTTP从数据库加载，或者使用与Sass期望的文件命名方案不同的文件。</target>
        </trans-unit>
        <trans-unit id="55fbe07c7def3c112a3dd15dcf43d50ee3a3c5a8" translate="yes" xml:space="preserve">
          <source>Sass is an extension of CSS that adds power and elegance to the basic language. It allows you to use &lt;a href=&quot;#variables_&quot;&gt;variables&lt;/a&gt;, &lt;a href=&quot;#nested_rules&quot;&gt;nested rules&lt;/a&gt;, &lt;a href=&quot;#mixins&quot;&gt;mixins&lt;/a&gt;, &lt;a href=&quot;#import&quot;&gt;inline imports&lt;/a&gt;, and more, all with a fully CSS-compatible syntax. Sass helps keep large stylesheets well-organized, and get small stylesheets up and running quickly, particularly with the help of &lt;a href=&quot;http://compass-style.org&quot;&gt;the Compass style library&lt;/a&gt;.</source>
          <target state="translated">Sass是CSS的扩展，为基本语言增添了力量和优雅。它允许您使用&lt;a href=&quot;#variables_&quot;&gt;变量&lt;/a&gt;，&lt;a href=&quot;#nested_rules&quot;&gt;嵌套规则&lt;/a&gt;，&lt;a href=&quot;#mixins&quot;&gt;mixins&lt;/a&gt;，&lt;a href=&quot;#import&quot;&gt;内联导入等&lt;/a&gt;，并且全部使用与CSS完全兼容的语法。Sass帮助保持大型样式表的井井有条，并快速启动和运行小型样式表，尤其是&lt;a href=&quot;http://compass-style.org&quot;&gt;在Compass样式库&lt;/a&gt;的帮助下。</target>
        </trans-unit>
        <trans-unit id="6a69154c2b4acc4e55d312e10bb9b932ccfca243" translate="yes" xml:space="preserve">
          <source>Sass looks for other Sass files in the current directory, and the Sass file directory under Rack, Rails, or Merb. Additional search directories may be specified using the &lt;a href=&quot;#load_paths-option&quot;&gt;&lt;code&gt;:load_paths&lt;/code&gt;&lt;/a&gt; option, or the &lt;code&gt;--load-path&lt;/code&gt; option on the command line.</source>
          <target state="translated">Sass在当前目录以及Rack，Rails或Merb下的Sass文件目录中查找其他Sass文件。可以使用&lt;a href=&quot;#load_paths-option&quot;&gt; &lt;code&gt;:load_paths&lt;/code&gt; &lt;/a&gt;选项或命令行上的 &lt;code&gt;--load-path&lt;/code&gt; 选项指定其他搜索目录。</target>
        </trans-unit>
        <trans-unit id="b0009ffe7a96796da80e21fa04676bad52a846b6" translate="yes" xml:space="preserve">
          <source>Sass provides a number of advanced customizations for users with unique requirements. Using these features requires a strong understanding of Ruby.</source>
          <target state="translated">Sass为有独特需求的用户提供了许多高级定制功能。使用这些功能需要对Ruby有很强的理解。</target>
        </trans-unit>
        <trans-unit id="4025d3f80e1fb8425ab404ceb4a3d8a1c0ee9b9f" translate="yes" xml:space="preserve">
          <source>Sass stylesheets don't work the same as views. They don't contain dynamic content, so the CSS only needs to be generated when the Sass file has been updated. By default, &lt;code&gt;.sass&lt;/code&gt; and &lt;code&gt;.scss&lt;/code&gt; files are placed in public/stylesheets/sass (this can be customized with the &lt;a href=&quot;#template_location-option&quot;&gt;&lt;code&gt;:template_location&lt;/code&gt;&lt;/a&gt; option). Then, whenever necessary, they're compiled into corresponding CSS files in public/stylesheets. For instance, public/stylesheets/sass/main.scss would be compiled to public/stylesheets/main.css.</source>
          <target state="translated">Sass样式表与视图的工作方式不同。它们不包含动态内容，因此仅在更新Sass文件时才需要生成CSS。默认情况下， &lt;code&gt;.sass&lt;/code&gt; 和 &lt;code&gt;.scss&lt;/code&gt; 文件放置在公共/样式表/ SASS（这可以通过定制&lt;a href=&quot;#template_location-option&quot;&gt; &lt;code&gt;:template_location&lt;/code&gt; &lt;/a&gt;选项）。然后，在必要时将它们编译为public / stylesheets中的相应CSS文件。例如，public / stylesheets / sass / main.scss将被编译为public / stylesheets / main.css。</target>
        </trans-unit>
        <trans-unit id="a1d70054db4e1dfd0e0b67c3e7e01b1d3bfc6c9a" translate="yes" xml:space="preserve">
          <source>Sass supports a special type of selector called a &quot;placeholder selector&quot;. These look like class and id selectors, except the &lt;code&gt;#&lt;/code&gt; or &lt;code&gt;.&lt;/code&gt; is replaced by &lt;code&gt;%&lt;/code&gt;. They're meant to be used with the &lt;a href=&quot;#extend&quot;&gt;&lt;code&gt;@extend&lt;/code&gt; directive&lt;/a&gt;; for more information see &lt;a href=&quot;#placeholders&quot;&gt;&lt;code&gt;@extend&lt;/code&gt;-Only Selectors&lt;/a&gt;.</source>
          <target state="translated">Sass支持一种特殊的选择器，称为&amp;ldquo;占位符选择器&amp;rdquo;。除了 &lt;code&gt;#&lt;/code&gt; 或之外，它们看起来像类和id选择器 &lt;code&gt;.&lt;/code&gt; 被 &lt;code&gt;%&lt;/code&gt; 代替。它们应该与&lt;a href=&quot;#extend&quot;&gt; &lt;code&gt;@extend&lt;/code&gt; 指令&lt;/a&gt;一起使用；有关更多信息，请参见&lt;a href=&quot;#placeholders&quot;&gt; &lt;code&gt;@extend&lt;/code&gt; -Only Selectors&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2109347200ea29f2dbcac97a7a1a0cbae14f6ebb" translate="yes" xml:space="preserve">
          <source>Sass supports all CSS3 &lt;code&gt;@&lt;/code&gt;-rules, as well as some additional Sass-specific ones known as &quot;directives.&quot; These have various effects in Sass, detailed below. See also &lt;a href=&quot;#control_directives&quot;&gt;control directives&lt;/a&gt; and &lt;a href=&quot;#mixins&quot;&gt;mixin directives&lt;/a&gt;.</source>
          <target state="translated">Sass支持所有CSS3 &lt;code&gt;@&lt;/code&gt; -rules，以及一些其他特定于Sass的&amp;ldquo;指令&amp;rdquo;。这些在Sass中具有各种效果，下面将详细介绍。另请参见&lt;a href=&quot;#control_directives&quot;&gt;控制指令&lt;/a&gt;和&lt;a href=&quot;#mixins&quot;&gt;mixin指令&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9215ecc9de12de338c73b85746fafdaaf6b06e16" translate="yes" xml:space="preserve">
          <source>Sass supports standard multiline CSS comments with &lt;code&gt;/* */&lt;/code&gt;, as well as single-line comments with &lt;code&gt;//&lt;/code&gt;. The multiline comments are preserved in the CSS output where possible, while the single-line comments are removed. For example:</source>
          <target state="translated">Sass支持带 &lt;code&gt;/* */&lt;/code&gt; 标准多行CSS注释以及带 &lt;code&gt;//&lt;/code&gt; 的单行注释。多行注释将尽可能保留在CSS输出中，而单行注释将被删除。例如：</target>
        </trans-unit>
        <trans-unit id="86fc2e831482914e7d296b365a94c163b569e70a" translate="yes" xml:space="preserve">
          <source>Sass will always encode its output as UTF-8. It will include a &lt;code&gt;@charset&lt;/code&gt; declaration if and only if the output file contains non-ASCII characters. In compressed mode, a UTF-8 byte order mark is used in place of a &lt;code&gt;@charset&lt;/code&gt; declaration.</source>
          <target state="translated">Sass始终将其输出编码为UTF-8。当且仅当输出文件包含非ASCII字符时，它将包含 &lt;code&gt;@charset&lt;/code&gt; 声明。在压缩模式下，使用UTF-8字节顺序标记代替 &lt;code&gt;@charset&lt;/code&gt; 声明。</target>
        </trans-unit>
        <trans-unit id="9a029dc1ee662d27c405277aa39c5baecc4c4ef5" translate="yes" xml:space="preserve">
          <source>SassScript</source>
          <target state="translated">SassScript</target>
        </trans-unit>
        <trans-unit id="1e9e5f520b46482b7d78207fd2f87587cbd9101f" translate="yes" xml:space="preserve">
          <source>SassScript #sassscript</source>
          <target state="translated">SassScript #sassscript</target>
        </trans-unit>
        <trans-unit id="eddf0c34ceef208253270813e40998133922216a" translate="yes" xml:space="preserve">
          <source>SassScript also supports all other types of CSS property value, such as Unicode ranges and &lt;code&gt;!important&lt;/code&gt; declarations. However, it has no special handling for these types. They're treated just like unquoted strings.</source>
          <target state="translated">SassScript还支持所有其他类型的CSS属性值，例如Unicode范围和 &lt;code&gt;!important&lt;/code&gt; 声明。但是，对于这些类型没有特殊处理。它们就像未加引号的字符串一样被对待。</target>
        </trans-unit>
        <trans-unit id="30070efcd26bcdfe4438c8cf2d17f83b0465a179" translate="yes" xml:space="preserve">
          <source>SassScript can also be used to generate selectors and property names, which is useful when writing &lt;a href=&quot;#mixins&quot;&gt;mixins&lt;/a&gt;. This is done via &lt;a href=&quot;#interpolation_&quot;&gt;interpolation&lt;/a&gt;.</source>
          <target state="translated">SassScript也可以用于生成选择器和属性名称，这在编写&lt;a href=&quot;#mixins&quot;&gt;mixins&lt;/a&gt;时很有用。这是通过&lt;a href=&quot;#interpolation_&quot;&gt;插值&lt;/a&gt;完成的。</target>
        </trans-unit>
        <trans-unit id="596d9a884cf209787a0dc4c00e05192356951ab7" translate="yes" xml:space="preserve">
          <source>SassScript defines some useful functions that are called using the normal CSS function syntax:</source>
          <target state="translated">SassScript定义了一些有用的函数,这些函数使用普通的CSS函数语法来调用。</target>
        </trans-unit>
        <trans-unit id="6a72866c8b59f464530dbfd219c2c0c494590ba2" translate="yes" xml:space="preserve">
          <source>SassScript supports &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, and &lt;code&gt;not&lt;/code&gt; operators for boolean values.</source>
          <target state="translated">SassScript支持 &lt;code&gt;and&lt;/code&gt; ， &lt;code&gt;or&lt;/code&gt; ，而 &lt;code&gt;not&lt;/code&gt; 布尔值运算符。</target>
        </trans-unit>
        <trans-unit id="c989ac7fb0836232ff868fa3ef818e56620ba887" translate="yes" xml:space="preserve">
          <source>SassScript supports basic control directives and expressions for including styles only under some conditions or including the same style several times with variations.</source>
          <target state="translated">SassScript支持基本的控制指令和表达式,以便只在某些条件下包含样式,或者多次以不同的方式包含同一个样式。</target>
        </trans-unit>
        <trans-unit id="8bc453bdb705d2d310a2a0bf56ccd55390ab99d1" translate="yes" xml:space="preserve">
          <source>SassScript supports eight data types:</source>
          <target state="translated">SassScript支持八种数据类型。</target>
        </trans-unit>
        <trans-unit id="5719e48057100bfd7e91627b5815247b4ef02f26" translate="yes" xml:space="preserve">
          <source>SassScript supports the standard arithmetic operations on numbers (addition &lt;code&gt;+&lt;/code&gt;, subtraction &lt;code&gt;-&lt;/code&gt;, multiplication &lt;code&gt;*&lt;/code&gt;, division &lt;code&gt;/&lt;/code&gt;, and modulo &lt;code&gt;%&lt;/code&gt;). Sass math functions preserve units during arithmetic operations. This means that, just like in real life, you cannot work on numbers with incompatible units (such as adding a number with &lt;code&gt;px&lt;/code&gt; and &lt;code&gt;em&lt;/code&gt;) and two numbers with the same unit that are multiplied together will produce square units (&lt;code&gt;10px * 10px == 100px * px&lt;/code&gt;). &lt;strong&gt;Be Aware&lt;/strong&gt; that &lt;code&gt;px * px&lt;/code&gt; is an invalid CSS unit and you will get an error from Sass for attempting to use invalid units in CSS.</source>
          <target state="translated">SassScript支持对数字的标准算术运算（加法 &lt;code&gt;+&lt;/code&gt; ，减法 &lt;code&gt;-&lt;/code&gt; ，乘法 &lt;code&gt;*&lt;/code&gt; ，除法 &lt;code&gt;/&lt;/code&gt; 和模 &lt;code&gt;%&lt;/code&gt; ）。 Sass数学函数在算术运算期间保留单位。这意味着，就像在现实生活中一样，您不能处理具有不兼容单位的数字（例如将 &lt;code&gt;px&lt;/code&gt; 和 &lt;code&gt;em&lt;/code&gt; 相加的数字），并且两个具有相同单位的数字相乘将产生平方单位（ &lt;code&gt;10px * 10px == 100px * px&lt;/code&gt; ）。&lt;strong&gt;请注意&lt;/strong&gt;， &lt;code&gt;px * px&lt;/code&gt; 是无效的CSS单位，您将因尝试在CSS中使用无效的单位而从Sass收到错误消息。</target>
        </trans-unit>
        <trans-unit id="bd4881bdb25c2fafab7ffd312ea4c42d08299488" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;sass/script/functions&quot;&gt;Sass::Script::Functions&lt;/a&gt; for a full listing of Sass functions and their argument names, as well as instructions on defining your own in Ruby.</source>
          <target state="translated">有关&lt;a href=&quot;sass/script/functions&quot;&gt;Sass&lt;/a&gt;函数及其参数名称的完整列表，以及有关在Ruby中定义自己的说明，请参见Sass :: Script :: Functions。</target>
        </trans-unit>
        <trans-unit id="b3f9123bc3816ae829779a66a9e07ec9052ed653" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;sass/script/functions&quot;&gt;this page&lt;/a&gt; for a full list of available functions.</source>
          <target state="translated">有关可用功能的完整列表，请参&lt;a href=&quot;sass/script/functions&quot;&gt;见此页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="011a99b67cb875077910ef37dc00f4c9e77d86ba" translate="yes" xml:space="preserve">
          <source>Selector Sequences</source>
          <target state="translated">选择器序列</target>
        </trans-unit>
        <trans-unit id="f0c6b6a8a3a0d2a9f1359a91eb7e3caf91f383a3" translate="yes" xml:space="preserve">
          <source>Selector sequences, such as &lt;code&gt;.foo .bar&lt;/code&gt; or &lt;code&gt;.foo + .bar&lt;/code&gt;, currently can't be extended. However, it is possible for nested selectors themselves to use &lt;code&gt;@extend&lt;/code&gt;. For example:</source>
          <target state="translated">选择器序列，例如 &lt;code&gt;.foo .bar&lt;/code&gt; 或 &lt;code&gt;.foo + .bar&lt;/code&gt; ，目前无法扩展。但是，嵌套选择器本身也可以使用 &lt;code&gt;@extend&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="161391ae0530d71d60db033d508408f8310295b7" translate="yes" xml:space="preserve">
          <source>Sets the opacity of an existing color.</source>
          <target state="translated">设置现有颜色的不透明度。</target>
        </trans-unit>
        <trans-unit id="594ff1d40a265dff076fc1b134721daddcc676ed" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;#maps&quot;&gt;maps&lt;/a&gt; are treated as lists of pairs, multiple assignment works with them as well. For example:</source>
          <target state="translated">由于&lt;a href=&quot;#maps&quot;&gt;地图&lt;/a&gt;被视为对的列表，因此多重分配也适用于它们。例如：</target>
        </trans-unit>
        <trans-unit id="ae3ed84c656302ff446453d77e6e47fa6b24d100" translate="yes" xml:space="preserve">
          <source>Since multiline comments become part of the resulting CSS, interpolation within them is resolved. For example:</source>
          <target state="translated">由于多行注释成为了生成的CSS的一部分,因此可以解决其中的插值问题。例如</target>
        </trans-unit>
        <trans-unit id="08e4ee6af9721071a87baaed7a28bb29fafa67c5" translate="yes" xml:space="preserve">
          <source>Some mixins may require a passed content block or may have different behavior depending on whether a content block was passed. The &lt;a href=&quot;sass/script/functions#content_exists-instance_method&quot;&gt;&lt;code&gt;content-exists()&lt;/code&gt; function&lt;/a&gt; will return true when a content block is passed to the current mixin and can be used to implement such behaviors.</source>
          <target state="translated">某些混入可能需要传递的内容块，或者根据是否传递了内容块而具有不同的行为。当将内容块传递给当前的mixin时，&lt;a href=&quot;sass/script/functions#content_exists-instance_method&quot;&gt; &lt;code&gt;content-exists()&lt;/code&gt; 函数&lt;/a&gt;将返回true，并可用于实现此类行为。</target>
        </trans-unit>
        <trans-unit id="a6a2a3f264e74ed32785ea446916a7a5ec1a6004" translate="yes" xml:space="preserve">
          <source>Someday we hope to have &lt;code&gt;@extend&lt;/code&gt; supported natively in the browser, which will allow it to be used within &lt;code&gt;@media&lt;/code&gt; and other directives.</source>
          <target state="translated">希望有一天，我们希望在浏览器中本地支持 &lt;code&gt;@extend&lt;/code&gt; ，这将允许它在 &lt;code&gt;@media&lt;/code&gt; 和其他指令中使用。</target>
        </trans-unit>
        <trans-unit id="2360319b1a3c1bfdc51f2c01b1bb2ac6b9bb4efd" translate="yes" xml:space="preserve">
          <source>Sometimes a selector sequence extends another selector that appears in another sequence. In this case, the two sequences need to be merged. For example:</source>
          <target state="translated">有时,一个选择器序列扩展了另一个序列中出现的选择器。在这种情况下,需要将这两个序列合并。例如:</target>
        </trans-unit>
        <trans-unit id="5f95e9286fc3d862bc7f1f917870ab369becd35a" translate="yes" xml:space="preserve">
          <source>Sometimes it makes sense for a mixin or function to take an unknown number of arguments. For example, a mixin for creating box shadows might take any number of shadows as arguments. For these situations, Sass supports &quot;variable arguments,&quot; which are arguments at the end of a mixin or function declaration that take all leftover arguments and package them up as a &lt;a href=&quot;#lists&quot;&gt;list&lt;/a&gt;. These arguments look just like normal arguments, but are followed by &lt;code&gt;...&lt;/code&gt;. For example:</source>
          <target state="translated">有时，对于混入或函数采用未知数量的参数是有意义的。例如，用于创建框阴影的混合可以将任意数量的阴影作为参数。对于这些情况，Sass支持&amp;ldquo;变量参数&amp;rdquo;，即混合或函数声明末尾的参数，这些参数接受所有剩余的参数并将其打包为&lt;a href=&quot;#lists&quot;&gt;列表&lt;/a&gt;。这些论点看起来就像普通参数，但之后 &lt;code&gt;...&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="de837228c307548c576c781e6e2aace1352e73cd" translate="yes" xml:space="preserve">
          <source>Sometimes it's useful to use a nested rule's parent selector in other ways than the default. For instance, you might want to have special styles for when that selector is hovered over or for when the body element has a certain class. In these cases, you can explicitly specify where the parent selector should be inserted using the &lt;code&gt;&amp;amp;&lt;/code&gt; character. For example:</source>
          <target state="translated">有时以默认方式以外的其他方式使用嵌套规则的父选择器很有用。例如，当选择器悬停时或body元素具有特定类时，您可能希望具有特殊的样式。在这些情况下，您可以使用 &lt;code&gt;&amp;amp;&lt;/code&gt; 字符明确指定应在何处插入父选择器。例如：</target>
        </trans-unit>
        <trans-unit id="ea0845a8f1f700d1c042600138ed83f134ce0b65" translate="yes" xml:space="preserve">
          <source>Sometimes you'll write styles for a class that you only ever want to &lt;code&gt;@extend&lt;/code&gt;, and never want to use directly in your HTML. This is especially true when writing a Sass library, where you may provide styles for users to &lt;code&gt;@extend&lt;/code&gt; if they need and ignore if they don't.</source>
          <target state="translated">有时，您将为只希望 &lt;code&gt;@extend&lt;/code&gt; 的类编写样式，而永远不想直接在HTML中使用样式。在编写Sass库时尤其如此，您可以在其中提供样式，以便用户在需要时可以 &lt;code&gt;@extend&lt;/code&gt; ,在不需要时可以忽略。</target>
        </trans-unit>
        <trans-unit id="043702c4e4501889e7730a9fb7aa95851a7a377c" translate="yes" xml:space="preserve">
          <source>Sometimes, though, you want to allow an &lt;code&gt;@extend&lt;/code&gt; not to produce any new selectors. To do so, just add the &lt;code&gt;!optional&lt;/code&gt; flag after the selector. For example:</source>
          <target state="translated">但是，有时您希望允许 &lt;code&gt;@extend&lt;/code&gt; 不产生任何新的选择器。为此，只需在选择器后面添加 &lt;code&gt;!optional&lt;/code&gt; 标志。例如：</target>
        </trans-unit>
        <trans-unit id="905138067416afbda69a807c2dbf96fa6f2ae8dd" translate="yes" xml:space="preserve">
          <source>String Operations</source>
          <target state="translated">字符串操作</target>
        </trans-unit>
        <trans-unit id="766f45c1227c8c7d13e31b3c8218c7c441dc99b1" translate="yes" xml:space="preserve">
          <source>String operations</source>
          <target state="translated">字符串操作</target>
        </trans-unit>
        <trans-unit id="3816c4beac471c733eed1d91c213f8c2b6a29262" translate="yes" xml:space="preserve">
          <source>Strings</source>
          <target state="translated">Strings</target>
        </trans-unit>
        <trans-unit id="b36b4bf7e1749dda82b6b7f07a772067f3f1d4c8" translate="yes" xml:space="preserve">
          <source>Strings #sass-script-strings</source>
          <target state="translated">字符串 #sass-script-strings</target>
        </trans-unit>
        <trans-unit id="391aa759e0f627e3cb08a330a5127ac56b6fa86a" translate="yes" xml:space="preserve">
          <source>Subtraction, Negative Numbers, and &lt;code&gt;-&lt;/code&gt;</source>
          <target state="translated">减，负数和 &lt;code&gt;-&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="f58a1a1b995bb6193210ff877811ca67724e98f1" translate="yes" xml:space="preserve">
          <source>Syntax Selection</source>
          <target state="translated">语法选择</target>
        </trans-unit>
        <trans-unit id="3f97e42d9d5b69a774e97737b80e7f4c2688e12c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;!optional&lt;/code&gt; Flag</source>
          <target state="translated">该 &lt;code&gt;!optional&lt;/code&gt; 标志</target>
        </trans-unit>
        <trans-unit id="8d311629ed69e85e7c92883aa048934bd395d0f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;+&lt;/code&gt; operation can be used to concatenate strings:</source>
          <target state="translated">在 &lt;code&gt;+&lt;/code&gt; 操作可用于连接字符串：</target>
        </trans-unit>
        <trans-unit id="1c26608f553246175e669b6188f4f161a429a8ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@at-root&lt;/code&gt; directive causes one or more rules to be emitted at the root of the document, rather than being nested beneath their parent selectors. It can either be used with a single inline selector:</source>
          <target state="translated">的 &lt;code&gt;@at-root&lt;/code&gt; 指令导致一个或多个规则，以在文档的根发射，而不是被嵌套父选择器的下方。它可以与单个内联选择器一起使用：</target>
        </trans-unit>
        <trans-unit id="ac97b233f713059167f62c0586b91e0e4ff02b52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@debug&lt;/code&gt; directive prints the value of a SassScript expression to the standard error output stream. It's useful for debugging Sass files that have complicated SassScript going on. For example:</source>
          <target state="translated">所述 &lt;code&gt;@debug&lt;/code&gt; 指令打印SassScript表达的标准错误输出流的值。这对于调试包含复杂SassScript的Sass文件很有用。例如：</target>
        </trans-unit>
        <trans-unit id="6a8de215b1d2afff58e3e0991266e337bff2243e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@each&lt;/code&gt; directive can also use multiple variables, as in &lt;code&gt;@each $var1, $var2, ... in &amp;lt;list&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;list&amp;gt;&lt;/code&gt; is a list of lists, each element of the sub-lists is assigned to the respective variable. For example:</source>
          <target state="translated">该 &lt;code&gt;@each&lt;/code&gt; 指令也可以使用多个变量，如 &lt;code&gt;@each $var1, $var2, ... in &amp;lt;list&amp;gt;&lt;/code&gt; 。如果 &lt;code&gt;&amp;lt;list&amp;gt;&lt;/code&gt; 是列表列表，则子列表的每个元素都分配给相应的变量。例如：</target>
        </trans-unit>
        <trans-unit id="77189bcd5e4b0bc4e721a8a2a8712e0b92a9d123" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@each&lt;/code&gt; directive usually has the form &lt;code&gt;@each $var in &amp;lt;list or map&amp;gt;&lt;/code&gt;. &lt;code&gt;$var&lt;/code&gt; can be any variable name, like &lt;code&gt;$length&lt;/code&gt; or &lt;code&gt;$name&lt;/code&gt;, and &lt;code&gt;&amp;lt;list or map&amp;gt;&lt;/code&gt; is a SassScript expression that returns a list or a map.</source>
          <target state="translated">该 &lt;code&gt;@each&lt;/code&gt; 指令通常的形式是 &lt;code&gt;@each $var in &amp;lt;list or map&amp;gt;&lt;/code&gt; 。 &lt;code&gt;$var&lt;/code&gt; 可以是任何变量名，例如 &lt;code&gt;$length&lt;/code&gt; 或 &lt;code&gt;$name&lt;/code&gt; ，而 &lt;code&gt;&amp;lt;list or map&amp;gt;&lt;/code&gt; 是返回列表或映射的SassScript表达式。</target>
        </trans-unit>
        <trans-unit id="a5d3e0da53895d6c2ca9b6d7ddf835e8c137ddc4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@each&lt;/code&gt; rule sets &lt;code&gt;$var&lt;/code&gt; to each item in the list or map, then outputs the styles it contains using that value of &lt;code&gt;$var&lt;/code&gt;. For example:</source>
          <target state="translated">该 &lt;code&gt;@each&lt;/code&gt; 规则集 &lt;code&gt;$var&lt;/code&gt; 在列表或地图中的每个项目，然后输出它包含使用该值的风格 &lt;code&gt;$var&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="b8e8db811f079dead4aec85b222dc1cd538b7717" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@error&lt;/code&gt; directive throws the value of a SassScript expression as a fatal error, including a nice stack trace. It's useful for validating arguments to mixins and functions. For example:</source>
          <target state="translated">所述 &lt;code&gt;@error&lt;/code&gt; 指令抛出一个SassScript表达式作为致命错误，其中包括一个不错的堆栈跟踪的价值。这对于验证mixin和函数的参数很有用。例如：</target>
        </trans-unit>
        <trans-unit id="53f2c089e6de93b3ee7b8e635ec337c2a031aa8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@extend&lt;/code&gt; directive avoids these problems by telling Sass that one selector should inherit the styles of another selector. For example:</source>
          <target state="translated">该 &lt;code&gt;@extend&lt;/code&gt; 指令避免了告诉萨斯是一个选择应该继承的样式另一选择的这些问题。例如：</target>
        </trans-unit>
        <trans-unit id="dd24d6037176ab3406afa46dabd5e8fd0a66b44a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@for&lt;/code&gt; directive repeatedly outputs a set of styles. For each repetition, a counter variable is used to adjust the output. The directive has two forms: &lt;code&gt;@for $var from &amp;lt;start&amp;gt; through &amp;lt;end&amp;gt;&lt;/code&gt; and &lt;code&gt;@for $var from &amp;lt;start&amp;gt; to &amp;lt;end&amp;gt;&lt;/code&gt;. Note the difference in the keywords &lt;code&gt;through&lt;/code&gt; and &lt;code&gt;to&lt;/code&gt;. &lt;code&gt;$var&lt;/code&gt; can be any variable name, like &lt;code&gt;$i&lt;/code&gt;; &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;end&amp;gt;&lt;/code&gt; are SassScript expressions that should return integers. When &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt; is greater than &lt;code&gt;&amp;lt;end&amp;gt;&lt;/code&gt; the counter will decrement instead of increment.</source>
          <target state="translated">该 &lt;code&gt;@for&lt;/code&gt; 指令重复输出一组样式。对于每次重复，将使用一个计数器变量来调整输出。该指令有两种形式： &lt;code&gt;@for $var from &amp;lt;start&amp;gt; through &amp;lt;end&amp;gt;&lt;/code&gt; 和 &lt;code&gt;@for $var from &amp;lt;start&amp;gt; to &amp;lt;end&amp;gt;&lt;/code&gt; 。请注意 &lt;code&gt;through&lt;/code&gt; 和 &lt;code&gt;to&lt;/code&gt; 关键字之间的差异。 &lt;code&gt;$var&lt;/code&gt; 可以是任何变量名，例如 &lt;code&gt;$i&lt;/code&gt; ； &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;end&amp;gt;&lt;/code&gt; 是应该返回整数的SassScript表达式。当 &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt; 大于 &lt;code&gt;&amp;lt;end&amp;gt;&lt;/code&gt; 时，计数器将递减而不是递增。</target>
        </trans-unit>
        <trans-unit id="6a6cc80ba19e8e34770568d4790b64ef08713b73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@for&lt;/code&gt; statement sets &lt;code&gt;$var&lt;/code&gt; to each successive number in the specified range and each time outputs the nested styles using that value of &lt;code&gt;$var&lt;/code&gt;. For the form &lt;code&gt;from ... through&lt;/code&gt;, the range &lt;em&gt;includes&lt;/em&gt; the values of &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;end&amp;gt;&lt;/code&gt;, but the form &lt;code&gt;from ... to&lt;/code&gt; runs up to &lt;em&gt;but not including&lt;/em&gt; the value of &lt;code&gt;&amp;lt;end&amp;gt;&lt;/code&gt;. Using the &lt;code&gt;through&lt;/code&gt; syntax,</source>
          <target state="translated">该 &lt;code&gt;@for&lt;/code&gt; 语句将 &lt;code&gt;$var&lt;/code&gt; 到指定范围内的每一个连续的号码，每次使用该值输出嵌套样式 &lt;code&gt;$var&lt;/code&gt; 。对于具有以下形式 &lt;code&gt;from ... through&lt;/code&gt; ，范围&lt;em&gt;包括&lt;/em&gt;的值 &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;end&amp;gt;&lt;/code&gt; ，但形式 &lt;code&gt;from ... to&lt;/code&gt; 运行高达&lt;em&gt;但不包括&lt;/em&gt;的值 &lt;code&gt;&amp;lt;end&amp;gt;&lt;/code&gt; 。使用 &lt;code&gt;through&lt;/code&gt; 语法</target>
        </trans-unit>
        <trans-unit id="edae6f073c38434d3e207e7a5dafb837955a0007" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@if&lt;/code&gt; directive takes a SassScript expression and uses the styles nested beneath it if the expression returns anything other than &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">该 &lt;code&gt;@if&lt;/code&gt; 指令需要SassScript表达和使用嵌套在其下方，如果比其他表达式返回任何样式 &lt;code&gt;false&lt;/code&gt; 或 &lt;code&gt;null&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7b1bac589cac69a197e403f499df3a9993010d02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@if&lt;/code&gt; statement can be followed by several &lt;code&gt;@else if&lt;/code&gt; statements and one &lt;code&gt;@else&lt;/code&gt; statement. If the &lt;code&gt;@if&lt;/code&gt; statement fails, the &lt;code&gt;@else if&lt;/code&gt; statements are tried in order until one succeeds or the &lt;code&gt;@else&lt;/code&gt; is reached. For example:</source>
          <target state="translated">该 &lt;code&gt;@if&lt;/code&gt; 语句可以由几个 &lt;code&gt;@else if&lt;/code&gt; 语句和一个 &lt;code&gt;@else&lt;/code&gt; 声明。如果 &lt;code&gt;@if&lt;/code&gt; 语句失败， &lt;code&gt;@else if&lt;/code&gt; 顺序尝试@else if语句，直到成功或到达 &lt;code&gt;@else&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="cb66e645f955007af31d85000b8a746fec7c41a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@warn&lt;/code&gt; directive prints the value of a SassScript expression to the standard error output stream. It's useful for libraries that need to warn users of deprecations or recovering from minor mixin usage mistakes. There are two major distinctions between &lt;code&gt;@warn&lt;/code&gt; and &lt;code&gt;@debug&lt;/code&gt;:</source>
          <target state="translated">所述 &lt;code&gt;@warn&lt;/code&gt; 指令打印SassScript表达的标准错误输出流的值。对于需要警告用户已弃用或从轻微的mixin使用错误中恢复的库而言，它很有用。 &lt;code&gt;@warn&lt;/code&gt; 和 &lt;code&gt;@debug&lt;/code&gt; 之间有两个主要区别：</target>
        </trans-unit>
        <trans-unit id="036d9853511ea7f8a9eed6ee63043a942bfb4426" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@while&lt;/code&gt; directive takes a SassScript expression and repeatedly outputs the nested styles until the statement evaluates to &lt;code&gt;false&lt;/code&gt;. This can be used to achieve more complex looping than the &lt;code&gt;@for&lt;/code&gt; statement is capable of, although this is rarely necessary. For example:</source>
          <target state="translated">该 &lt;code&gt;@while&lt;/code&gt; 指令需要SassScript表达反复输出的嵌套样式，直至语句评估为 &lt;code&gt;false&lt;/code&gt; 。尽管 &lt;code&gt;@for&lt;/code&gt; 语句很少需要，但是它可以用来实现比@for语句更复杂的循环。例如：</target>
        </trans-unit>
        <trans-unit id="7dbd956ef12d159ddf033d9c2ae5230695500357" translate="yes" xml:space="preserve">
          <source>The Sass command-line tool will use the file extension to determine which syntax you are using, but there's not always a filename. The &lt;code&gt;sass&lt;/code&gt; command-line program defaults to the indented syntax but you can pass the &lt;code&gt;--scss&lt;/code&gt; option to it if the input should be interpreted as SCSS syntax. Alternatively, you can use the &lt;code&gt;scss&lt;/code&gt; command-line program which is exactly like the &lt;code&gt;sass&lt;/code&gt; program but it defaults to assuming the syntax is SCSS.</source>
          <target state="translated">Sass命令行工具将使用文件扩展名来确定您使用的语法，但是并不总是有文件名。在 &lt;code&gt;sass&lt;/code&gt; 命令行程序默认为缩进语法，但你可以通过 &lt;code&gt;--scss&lt;/code&gt; 选项，如果输入应该被解释为SCSS语法。另外，您可以使用 &lt;code&gt;scss&lt;/code&gt; 命令行程序，该程序与 &lt;code&gt;sass&lt;/code&gt; 程序完全相同，但默认情况下假定语法为SCSS。</target>
        </trans-unit>
        <trans-unit id="629ffa2442fc4371dc88961319dce02104a6b90d" translate="yes" xml:space="preserve">
          <source>The alpha channel of a color can be adjusted using the &lt;a href=&quot;sass/script/functions#opacify-instance_method&quot;&gt;opacify&lt;/a&gt; and &lt;a href=&quot;sass/script/functions#transparentize-instance_method&quot;&gt;transparentize&lt;/a&gt; functions. For example:</source>
          <target state="translated">一个颜色的alpha通道可以使用被调整&lt;a href=&quot;sass/script/functions#opacify-instance_method&quot;&gt;变得不透明&lt;/a&gt;和&lt;a href=&quot;sass/script/functions#transparentize-instance_method&quot;&gt;透明化&lt;/a&gt;的功能。例如：</target>
        </trans-unit>
        <trans-unit id="9f0c9af133a56cf709eabce5c6b2068a2f64a4ff" translate="yes" xml:space="preserve">
          <source>The block of content passed to a mixin are evaluated in the scope where the block is defined, not in the scope of the mixin. This means that variables local to the mixin &lt;strong&gt;cannot&lt;/strong&gt; be used within the passed style block and variables will resolve to the global value:</source>
          <target state="translated">传递给mixin的内容块是在定义块的范围内而不是mixin的范围内进行评估的。这意味着&lt;strong&gt;无法&lt;/strong&gt;在传递的样式块内使用mixin局部变量，并且变量将解析为全局值：</target>
        </trans-unit>
        <trans-unit id="1bcb97b641d09ebb9846d4a65721d499bc5f2c78" translate="yes" xml:space="preserve">
          <source>The built-in &lt;code&gt;if()&lt;/code&gt; function allows you to branch on a condition and returns only one of two possible outcomes. It can be used in any script context. The &lt;code&gt;if&lt;/code&gt; function only evaluates the argument corresponding to the one that it will return -- this allows you to refer to variables that may not be defined or to have calculations that would otherwise cause an error (E.g. divide by zero).</source>
          <target state="translated">内置的 &lt;code&gt;if()&lt;/code&gt; 函数允许您在条件上分支并仅返回两个可能结果之一。它可以在任何脚本上下文中使用。该 &lt;code&gt;if&lt;/code&gt; 函数只计算对应的一个，它会返回参数-这可以让你指的可能不被定义的变量或具有计算，否则会导致错误（例如，除以零）。</target>
        </trans-unit>
        <trans-unit id="bd67186bd98e8190eb31017e67db7ed517d63d54" translate="yes" xml:space="preserve">
          <source>The different meanings of &lt;code&gt;-&lt;/code&gt; take precedence in the following order:</source>
          <target state="translated">的不同含义 &lt;code&gt;-&lt;/code&gt; 优先的顺序如下：</target>
        </trans-unit>
        <trans-unit id="9b92a4c7223dc172f932e908e2fd37b99a3b5469" translate="yes" xml:space="preserve">
          <source>The following features are supported:</source>
          <target state="translated">支持以下功能:</target>
        </trans-unit>
        <trans-unit id="258da41117a38a10268ce6458531112c24def106" translate="yes" xml:space="preserve">
          <source>The length of the resulting list is the length of the shortest list.</source>
          <target state="translated">结果列表的长度就是最短列表的长度。</target>
        </trans-unit>
        <trans-unit id="06f9c260a7ec62319c981e555fd7eba4596789bb" translate="yes" xml:space="preserve">
          <source>The most straightforward way to use SassScript is to use variables. Variables begin with dollar signs, and are set like CSS properties:</source>
          <target state="translated">使用SassScript最直接的方法是使用变量。变量以美元符号开头,其设置方式就像CSS属性一样。</target>
        </trans-unit>
        <trans-unit id="6045ebfa783a9c7f7a09d4adea3c9f23c023f23d" translate="yes" xml:space="preserve">
          <source>The property namespace itself can also have a value. For example:</source>
          <target state="translated">属性命名空间本身也可以有一个值。例如:</target>
        </trans-unit>
        <trans-unit id="d4b2d6f15b257b97df1f0f2487bd98118e3ddbbe" translate="yes" xml:space="preserve">
          <source>The same mixins can be done in the &lt;code&gt;.sass&lt;/code&gt; shorthand syntax:</source>
          <target state="translated">可以使用 &lt;code&gt;.sass&lt;/code&gt; 速记语法完成相同的混合：</target>
        </trans-unit>
        <trans-unit id="1e43b849eba22e5bd20a341f09cad9fb44cd8782" translate="yes" xml:space="preserve">
          <source>The second and older syntax, known as the indented syntax (or sometimes just &quot;Sass&quot;), provides a more concise way of writing CSS. It uses indentation rather than brackets to indicate nesting of selectors, and newlines rather than semicolons to separate properties. Some people find this to be easier to read and quicker to write than SCSS. The indented syntax has all the same features, although some of them have slightly different syntax; this is described in &lt;a href=&quot;http://sass-lang.com/documentation/file.INDENTED_SYNTAX.html&quot;&gt;the indented syntax reference&lt;/a&gt;. Files using this syntax have the &lt;code&gt;.sass&lt;/code&gt; extension.</source>
          <target state="translated">第二种或更旧的语法称为缩进语法（有时也称为&amp;ldquo; Sass&amp;rdquo;），提供了一种更为简洁的CSS编写方式。它使用缩进而不是方括号来表示选择器的嵌套，并使用换行符而不是分号来分隔属性。有些人发现它比SCSS更易于阅读和编写。缩进语法具有所有相同的功能，尽管其中一些语法略有不同。&lt;a href=&quot;http://sass-lang.com/documentation/file.INDENTED_SYNTAX.html&quot;&gt;缩进语法参考中&lt;/a&gt;对此进行了描述。使用此语法的 &lt;code&gt;.sass&lt;/code&gt; 扩展名为.sass。</target>
        </trans-unit>
        <trans-unit id="d4369cb10498fe9fea655a2a3987028bc59e3d23" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;$selector&lt;/code&gt; is now &lt;code&gt;((&quot;.foo.bar&quot; &quot;.baz.bang&quot;), &quot;.bip.qux&quot;)&lt;/code&gt;. The compound selectors are quoted here to indicate that they're strings, but in reality they would be unquoted. Even if the parent selector doesn't contain a comma or a space, &lt;code&gt;&amp;amp;&lt;/code&gt; will always have two levels of nesting, so it can be accessed consistently.</source>
          <target state="translated">&lt;code&gt;$selector&lt;/code&gt; 的值现在是 &lt;code&gt;((&quot;.foo.bar&quot; &quot;.baz.bang&quot;), &quot;.bip.qux&quot;)&lt;/code&gt; 。复合选择器在此处被引号表示它们是字符串，但实际上它们将被取消引号。即使父选择器不包含逗号或空格， &lt;code&gt;&amp;amp;&lt;/code&gt; 也会始终具有两个嵌套级别，因此可以一致地对其进行访问。</target>
        </trans-unit>
        <trans-unit id="7b8a877b8636d49ac3f65f0bacf33bcb5a47ce42" translate="yes" xml:space="preserve">
          <source>The weight specifies the amount of the first color that should be included in the returned color. The default, &lt;code&gt;50%&lt;/code&gt;, means that half the first color and half the second color should be used. &lt;code&gt;25%&lt;/code&gt; means that a quarter of the first color and three quarters of the second color should be used.</source>
          <target state="translated">权重指定应包含在返回的颜色中的第一种颜色的数量。默认 &lt;code&gt;50%&lt;/code&gt; ，表示应使用第一颜色的一半和第二颜色的一半。 &lt;code&gt;25%&lt;/code&gt; 表示应使用第一种颜色的四分之一和第二种颜色的四分之三。</target>
        </trans-unit>
        <trans-unit id="177252848a5ac086129dcafe1bbac98faf2b4389" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;&amp;lt;div class=&quot;seriousError intrusion&quot;&amp;gt;&lt;/code&gt; will have the &lt;code&gt;hacked.png&lt;/code&gt; background image as well.</source>
          <target state="translated">然后 &lt;code&gt;&amp;lt;div class=&quot;seriousError intrusion&quot;&amp;gt;&lt;/code&gt; 也将具有 &lt;code&gt;hacked.png&lt;/code&gt; 背景图片。</target>
        </trans-unit>
        <trans-unit id="b6ab2aea6319171b326eb82c34f0565c2dbb0f73" translate="yes" xml:space="preserve">
          <source>There are a number of different things &lt;code&gt;-&lt;/code&gt; can mean in CSS and in Sass. It can be a subtraction operator (as in &lt;code&gt;5px - 3px&lt;/code&gt;), the beginning of a negative number (as in &lt;code&gt;-3px&lt;/code&gt;), a unary negation operator (as in &lt;code&gt;-$var&lt;/code&gt;), or part of an identifier (as in &lt;code&gt;font-weight&lt;/code&gt;). Most of the time, it's clear which is which, but there are some tricky cases. As a general rule, you're safest if:</source>
          <target state="translated">有很多不同的东西 &lt;code&gt;-&lt;/code&gt; 在CSS和Sass中可能意味着。它可以是减法运算符（如 &lt;code&gt;5px - 3px&lt;/code&gt; ），负数的开头（如 &lt;code&gt;-3px&lt;/code&gt; ），一元否定运算符（如 &lt;code&gt;-$var&lt;/code&gt; ）或标识符的一部分（如 &lt;code&gt;font-weight&lt;/code&gt; )）。大多数时候，很清楚哪个是哪个，但是有一些棘手的情况。一般而言，在以下情况下最安全：</target>
        </trans-unit>
        <trans-unit id="f7ab8877161595d185108311821356f071bb55a2" translate="yes" xml:space="preserve">
          <source>There are often cases when designing a page when one class should have all the styles of another class, as well as its own specific styles. The most common way of handling this is to use both the more general class and the more specific class in the HTML. For example, suppose we have a design for a normal error and also for a serious error. We might write our markup like so:</source>
          <target state="translated">在设计页面的时候,经常会遇到这样的情况:一个类应该拥有另一个类的所有样式,同时也应该拥有自己的特定样式。最常见的处理方式是在HTML中同时使用比较通用的类和比较特殊的类。例如,假设我们有一个普通错误的设计,也有一个严重错误的设计。我们可以这样写我们的标记。</target>
        </trans-unit>
        <trans-unit id="5462dc7a171bbf438178cd731b27497ccb08cbce" translate="yes" xml:space="preserve">
          <source>There are some restrictions on the use of &lt;code&gt;@extend&lt;/code&gt; within directives such as &lt;code&gt;@media&lt;/code&gt;. Sass is unable to make CSS rules outside of the &lt;code&gt;@media&lt;/code&gt; block apply to selectors inside it without creating a huge amount of stylesheet bloat by copying styles all over the place. This means that if you use &lt;code&gt;@extend&lt;/code&gt; within &lt;code&gt;@media&lt;/code&gt; (or other CSS directives), you may only extend selectors that appear within the same directive block.</source>
          <target state="translated">在 &lt;code&gt;@media&lt;/code&gt; 之类的指令中使用 &lt;code&gt;@extend&lt;/code&gt; 有一些限制。 Sass无法通过将 &lt;code&gt;@media&lt;/code&gt; 块之外的CSS规则应用于其中的选择器，而不会通过在各处复制样式而造成大量样式表膨胀。这意味着，如果在 &lt;code&gt;@media&lt;/code&gt; （或其他CSS指令）中使用 &lt;code&gt;@extend&lt;/code&gt; ，则只能扩展出现在同一指令块中的选择器。</target>
        </trans-unit>
        <trans-unit id="937ed733728f67555d53882c99fae9ce9823cc28" translate="yes" xml:space="preserve">
          <source>There are two special values you can pass to &lt;code&gt;@at-root&lt;/code&gt;. &quot;rule&quot; refers to normal CSS rules; &lt;code&gt;@at-root (without: rule)&lt;/code&gt; is the same as &lt;code&gt;@at-root&lt;/code&gt; with no query. &lt;code&gt;@at-root (without: all)&lt;/code&gt; means that the styles should be moved outside of &lt;em&gt;all&lt;/em&gt; directives and CSS rules.</source>
          <target state="translated">您可以将两个特殊值传递给 &lt;code&gt;@at-root&lt;/code&gt; 。 &amp;ldquo;规则&amp;rdquo;是指普通的CSS规则； &lt;code&gt;@at-root (without: rule)&lt;/code&gt; 与 &lt;code&gt;@at-root&lt;/code&gt; 相同，没有查询。 &lt;code&gt;@at-root (without: all)&lt;/code&gt; 表示样式应移至&lt;em&gt;所有&lt;/em&gt;指令和CSS规则之外。</target>
        </trans-unit>
        <trans-unit id="b519ebe4607dfda6aeda062897ebaecfe93b3483" translate="yes" xml:space="preserve">
          <source>There are two syntaxes available for Sass. The first, known as SCSS (Sassy CSS) and used throughout this reference, is an extension of the syntax of CSS. This means that every valid CSS stylesheet is a valid SCSS file with the same meaning. In addition, SCSS understands most CSS hacks and vendor-specific syntax, such as &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms530752.aspx&quot;&gt;IE's old &lt;code&gt;filter&lt;/code&gt; syntax&lt;/a&gt;. This syntax is enhanced with the Sass features described below. Files using this syntax have the &lt;code&gt;.scss&lt;/code&gt; extension.</source>
          <target state="translated">Sass有两种语法。第一个被称为SCSS（Sassy CSS），在本参考文献中一直使用，它是CSS语法的扩展。这意味着每个有效的CSS样式表都是具有相同含义的有效SCSS文件。此外，SCSS理解大多数CSS hack和特定于供应商的语法，例如&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms530752.aspx&quot;&gt;IE的旧 &lt;code&gt;filter&lt;/code&gt; 语法&lt;/a&gt;。下文描述的Sass功能增强了此语法。使用此语法的文件扩展名为 &lt;code&gt;.scss&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a26deaf0a9439c6e86ec39bb3fa8607ec5746ff" translate="yes" xml:space="preserve">
          <source>There is currently no way to catch errors.</source>
          <target state="translated">目前还没有办法发现错误。</target>
        </trans-unit>
        <trans-unit id="35e08781e208d3af3549928c34bda4ca6736f556" translate="yes" xml:space="preserve">
          <source>There is one exception to this, though: when using &lt;a href=&quot;#interpolation_&quot;&gt;&lt;code&gt;#{}&lt;/code&gt; interpolation&lt;/a&gt;, quoted strings are unquoted. This makes it easier to use e.g. selector names in &lt;a href=&quot;#mixins&quot;&gt;mixins&lt;/a&gt;. For example:</source>
          <target state="translated">但是，有一个例外：使用&lt;a href=&quot;#interpolation_&quot;&gt; &lt;code&gt;#{}&lt;/code&gt; 插值时&lt;/a&gt;，带引号的字符串不带引号。这样可以更轻松地在&lt;a href=&quot;#mixins&quot;&gt;mixins中&lt;/a&gt;使用例如选择器名称。例如：</target>
        </trans-unit>
        <trans-unit id="cdb80bd6c90ed216da3aefd940259e454d1d891f" translate="yes" xml:space="preserve">
          <source>This can change the red, green, blue, saturation, value, and alpha properties. The properties are specified as keyword arguments. All arguments should be percentages between &lt;code&gt;0%&lt;/code&gt; and &lt;code&gt;100%&lt;/code&gt;.</source>
          <target state="translated">这可以更改红色，绿色，蓝色，饱和度，值和Alpha属性。这些属性被指定为关键字参数。所有参数应为 &lt;code&gt;0%&lt;/code&gt; 到 &lt;code&gt;100%&lt;/code&gt; 之间的百分比。</target>
        </trans-unit>
        <trans-unit id="9e2c17d4304cc87c1fc694bbfd2c75778c87cdc6" translate="yes" xml:space="preserve">
          <source>This can return the nth pair in a map as well.</source>
          <target state="translated">这也可以返回地图中的第n对。</target>
        </trans-unit>
        <trans-unit id="7d5d8211da10fe571fd182677e98f081c6280cc4" translate="yes" xml:space="preserve">
          <source>This can return the number of pairs in a map as well.</source>
          <target state="translated">这也可以返回地图中的对数。</target>
        </trans-unit>
        <trans-unit id="a8071308e261c0171947c455efd036ab5b392e9a" translate="yes" xml:space="preserve">
          <source>This can return the position of a pair in a map as well.</source>
          <target state="translated">这也可以返回地图中一对的位置。</target>
        </trans-unit>
        <trans-unit id="dcba487e25a70112a116129dc10ffe7263d66e13" translate="yes" xml:space="preserve">
          <source>This function also supports the proprietary Microsoft &lt;code&gt;alpha(opacity=20)&lt;/code&gt; syntax as a special case.</source>
          <target state="translated">作为特殊情况，此函数还支持专有的Microsoft &lt;code&gt;alpha(opacity=20)&lt;/code&gt; 语法。</target>
        </trans-unit>
        <trans-unit id="6a3573a179a37f564a66c0924cf072b52d52b1fb" translate="yes" xml:space="preserve">
          <source>This function only exists as a workaround for IE7's &lt;a href=&quot;http://jes.st/2013/ie7s-css-breaking-content-counter-bug/&quot;&gt;&lt;code&gt;content: counter&lt;/code&gt; bug&lt;/a&gt;. It works identically to any other plain-CSS function, except it avoids adding spaces between the argument commas.</source>
          <target state="translated">此功能仅作为IE7 &lt;a href=&quot;http://jes.st/2013/ie7s-css-breaking-content-counter-bug/&quot;&gt; &lt;code&gt;content: counter&lt;/code&gt; &lt;/a&gt;的解决方法：counter bug。除了避免在参数逗号之间添加空格外，它与任何其他普通CSS函数的工作方式相同。</target>
        </trans-unit>
        <trans-unit id="becb36fdda822271a471a4076796d5427550c1dd" translate="yes" xml:space="preserve">
          <source>This helps avoid repetition of parent selectors, and makes complex CSS layouts with lots of nested selectors much simpler. For example:</source>
          <target state="translated">这有助于避免父级选择器的重复,并使具有大量嵌套选择器的复杂CSS布局变得更加简单。例如</target>
        </trans-unit>
        <trans-unit id="354efb4bef49ea8ecc4d2b7e5de75478212615f4" translate="yes" xml:space="preserve">
          <source>This is compiled to:</source>
          <target state="translated">这是编到。</target>
        </trans-unit>
        <trans-unit id="b35482a13bdb28379dcfca04aa43ea21461d0dd9" translate="yes" xml:space="preserve">
          <source>This is the best way to add new values to a map.</source>
          <target state="translated">这是在地图上添加新值的最好方法。</target>
        </trans-unit>
        <trans-unit id="c81188216579c60386c9bf463658b27afd3b16a4" translate="yes" xml:space="preserve">
          <source>This means that all styles defined for &lt;code&gt;.error&lt;/code&gt; are also applied to &lt;code&gt;.seriousError&lt;/code&gt;, in addition to the styles specific to &lt;code&gt;.seriousError&lt;/code&gt;. In effect, every element with class &lt;code&gt;.seriousError&lt;/code&gt; also has class &lt;code&gt;.error&lt;/code&gt;.</source>
          <target state="translated">这意味着，对于定义的所有样式 &lt;code&gt;.error&lt;/code&gt; 也适用于 &lt;code&gt;.seriousError&lt;/code&gt; ，除了样式具体到 &lt;code&gt;.seriousError&lt;/code&gt; 。实际上，每个类为 &lt;code&gt;.seriousError&lt;/code&gt; 的元素也都具有类 &lt;code&gt;.error&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b1a72864e0bd50d769e6dea5e5ce673bba1458c1" translate="yes" xml:space="preserve">
          <source>This works by using &lt;code&gt;@extend&lt;/code&gt; and throwing away the original selector. This means that it can be used to do very advanced replacements; see the examples below.</source>
          <target state="translated">这可以通过使用 &lt;code&gt;@extend&lt;/code&gt; 并丢弃原始选择器来实现。这意味着它可以用于进行非常高级的替换。请参阅下面的示例。</target>
        </trans-unit>
        <trans-unit id="e5cbb065759288edecad2c65efb1b31b56a60f88" translate="yes" xml:space="preserve">
          <source>To enable Sass in Merb, add the following line to &lt;code&gt;config/dependencies.rb&lt;/code&gt;:</source>
          <target state="translated">要在Merb中启用Sass，请将以下行添加到 &lt;code&gt;config/dependencies.rb&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5d0729184767803da147daf282f65d916eb3027e" translate="yes" xml:space="preserve">
          <source>To enable Sass in Rails versions before Rails 3, add the following line to &lt;code&gt;environment.rb&lt;/code&gt;:</source>
          <target state="translated">要在Rails 3之前的Rails版本中启用Sass，请将以下行添加到 &lt;code&gt;environment.rb&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="16af8bdd69375a45a6eaabb6d2429473b658ecb7" translate="yes" xml:space="preserve">
          <source>To enable Sass in a Rack application, add the following lines to &lt;code&gt;config.ru&lt;/code&gt;.</source>
          <target state="translated">要在Rack应用程序中启用Sass，请将以下行添加到 &lt;code&gt;config.ru&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="24104d743ce156119c7b4c8d0844608f2e0d9ad9" translate="yes" xml:space="preserve">
          <source>To explicitly specify the encoding of your stylesheet, use a &lt;code&gt;@charset&lt;/code&gt; declaration just like in CSS. Add &lt;code&gt;@charset &quot;encoding-name&quot;;&lt;/code&gt; at the beginning of the stylesheet (before any whitespace or comments) and Sass will interpret it as the given encoding. Note that whatever encoding you use, it must be convertible to Unicode.</source>
          <target state="translated">要显式指定样式表的编码，请像在CSS中一样使用 &lt;code&gt;@charset&lt;/code&gt; 声明。添加 &lt;code&gt;@charset &quot;encoding-name&quot;;&lt;/code&gt; 在样式表的开头（在任何空格或注释之前），Sass会将其解释为给定的编码。请注意，无论您使用哪种编码，它都必须可以转换为Unicode。</target>
        </trans-unit>
        <trans-unit id="de06f9c502e4b3a7ffd0a3aad024b2ec4db54a94" translate="yes" xml:space="preserve">
          <source>To run Sass from the command line, just use</source>
          <target state="translated">要从命令行运行Sass,只需使用</target>
        </trans-unit>
        <trans-unit id="7012e685210c7d03883f55753c7a5d74cf85f50a" translate="yes" xml:space="preserve">
          <source>Trailing Commas</source>
          <target state="translated">逗号</target>
        </trans-unit>
        <trans-unit id="800433e4e83820c982f054958922fa1bc7ca5d6b" translate="yes" xml:space="preserve">
          <source>Unfortunately, this means that we have to always remember to use &lt;code&gt;.error&lt;/code&gt; with &lt;code&gt;.seriousError&lt;/code&gt;. This is a maintenance burden, leads to tricky bugs, and can bring non-semantic style concerns into the markup.</source>
          <target state="translated">不幸的是，这意味着我们必须始终记住将 &lt;code&gt;.error&lt;/code&gt; 与 &lt;code&gt;.seriousError&lt;/code&gt; 一起使用。这是维护负担，导致棘手的错误，并且可能将非语义样式问题引入标记中。</target>
        </trans-unit>
        <trans-unit id="f9bcf9e83d2a79206f3f81d3f7ee3a998e877475" translate="yes" xml:space="preserve">
          <source>Unifies two selectors into a single selector that matches only elements matched by both input selectors. Returns &lt;code&gt;null&lt;/code&gt; if there is no such selector.</source>
          <target state="translated">将两个选择器统一为一个仅与两个输入选择器匹配的元素匹配的选择器。如果没有这样的选择器，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="872ca4c8eab59b0dd849420e210e766c26422591" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;$bracketed&lt;/code&gt; is passed, the resulting list is bracketed if the first parameter is.</source>
          <target state="translated">除非传递了 &lt;code&gt;$bracketed&lt;/code&gt; ，否则如果第一个参数通过，则结果列表将放在括号中。</target>
        </trans-unit>
        <trans-unit id="56dd328feb200abd01d0a7e6a97e6981481b2fe3" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;$separator&lt;/code&gt; is passed, if one list is comma-separated and one is space-separated, the first parameter's separator is used for the resulting list. If both lists have fewer than two items, spaces are used for the resulting list.</source>
          <target state="translated">除非传递 &lt;code&gt;$separator&lt;/code&gt; ，否则如果一个列表用逗号分隔，而一个用空格分隔，则第一个参数的分隔符将用于结果列表。如果两个列表的项目均少于两个，则将空格用于结果列表。</target>
        </trans-unit>
        <trans-unit id="1363117536b31421047d80acd67a6865cb2a2442" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;content-exists()&lt;/code&gt; is called directly from a mixin, an error will be raised.</source>
          <target state="translated">除非直接从mixin中调用 &lt;code&gt;content-exists()&lt;/code&gt; ，否则将引发错误。</target>
        </trans-unit>
        <trans-unit id="76ff0ed4ac7d80876eaa702113778227c4cc8f99" translate="yes" xml:space="preserve">
          <source>Unless the &lt;code&gt;$separator&lt;/code&gt; argument is passed, if the list had only one item, the resulting list will be space-separated.</source>
          <target state="translated">除非传递 &lt;code&gt;$separator&lt;/code&gt; 参数，否则如果列表只有一项，则结果列表将以空格分隔。</target>
        </trans-unit>
        <trans-unit id="0a6bc63d843eef7902dbce3c20323a9013b9c162" translate="yes" xml:space="preserve">
          <source>Unlike lists, maps must always be surrounded by parentheses and must always be comma-separated. Both the keys and values in maps can be any SassScript object. A map may only have one value associated with a given key (although that value may be a list). A given value may be associated with many keys, though.</source>
          <target state="translated">与列表不同的是,地图必须始终用括号包围,并且必须始终以逗号分隔。地图中的键和值都可以是任何SassScript对象。一个map只能有一个值与一个给定的键相关联 (尽管这个值可能是一个列表).不过,一个给定的值可以与许多键相关联。</target>
        </trans-unit>
        <trans-unit id="28201693f03d1e9150ecab32994e775dd9a12c3d" translate="yes" xml:space="preserve">
          <source>Unlike most selector functions, &lt;code&gt;selector-nest&lt;/code&gt; allows the parent selector &lt;code&gt;&amp;amp;&lt;/code&gt; to be used in any selector but the first.</source>
          <target state="translated">与大多数选择器功能不同， &lt;code&gt;selector-nest&lt;/code&gt; 可将父选择器 &lt;code&gt;&amp;amp;&lt;/code&gt; 用于除第一个选择器之外的任何选择器。</target>
        </trans-unit>
        <trans-unit id="9629fc5be7eebf84f66a1a4fe14d7eee29fbc498" translate="yes" xml:space="preserve">
          <source>Usage Example:</source>
          <target state="translated">用例。</target>
        </trans-unit>
        <trans-unit id="936edae5d2de4429a13dfc88fb76048edb5d8873" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;sass --help&lt;/code&gt; for full documentation.</source>
          <target state="translated">使用 &lt;code&gt;sass --help&lt;/code&gt; 获得完整文档。</target>
        </trans-unit>
        <trans-unit id="72a3ab63eb244754d6a277a8c18c9d671df5562a" translate="yes" xml:space="preserve">
          <source>User-created importers must inherit from &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass::Importers::Base&lt;/a&gt;.</source>
          <target state="translated">用户创建的进口商必须继承自&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Importers/Base.html&quot;&gt;Sass :: Importers :: Base&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f68d8b77e8f10448a25ffec622ba4c62ca6e4441" translate="yes" xml:space="preserve">
          <source>User-defined functions also support &lt;a href=&quot;#variable_arguments&quot;&gt;variable arguments&lt;/a&gt; in the same way as mixins.</source>
          <target state="translated">用户定义的函数也支持混合自&lt;a href=&quot;#variable_arguments&quot;&gt;变量的变量参数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f829b8497ac4cecc133647d21b9e7ab12512cc02" translate="yes" xml:space="preserve">
          <source>Users can define their own Sass functions using the Ruby API. For more information, see the &lt;a href=&quot;sass/script/functions#adding_custom_functions&quot;&gt;source documentation&lt;/a&gt;.</source>
          <target state="translated">用户可以使用Ruby API定义自己的Sass函数。有关更多信息，请参见&lt;a href=&quot;sass/script/functions#adding_custom_functions&quot;&gt;源文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a0ed3c8ffbb485bdcff1600b6b717d9db053867b" translate="yes" xml:space="preserve">
          <source>Using Sass</source>
          <target state="translated">使用Sass</target>
        </trans-unit>
        <trans-unit id="6c9f5242fbc04bc1bf0061d659bc4abf5c91fc15" translate="yes" xml:space="preserve">
          <source>Using Sass in Ruby code is very simple. After installing the Sass gem, you can use it by running &lt;code&gt;require &quot;sass&quot;&lt;/code&gt; and using &lt;a href=&quot;http://sass-lang.com/documentation/Sass/Engine.html&quot;&gt;Sass::Engine&lt;/a&gt; like so:</source>
          <target state="translated">在Ruby代码中使用Sass非常简单。安装Sass gem之后，可以通过运行 &lt;code&gt;require &quot;sass&quot;&lt;/code&gt; 并使用&lt;a href=&quot;http://sass-lang.com/documentation/Sass/Engine.html&quot;&gt;Sass :: Engine&lt;/a&gt;来使用它，如下所示：</target>
        </trans-unit>
        <trans-unit id="52941da9a3b3b2fc5e211993b41384faa81f65d4" translate="yes" xml:space="preserve">
          <source>Variable Arguments</source>
          <target state="translated">变量参数</target>
        </trans-unit>
        <trans-unit id="ca4cab7a39afeea82a57b9d1ddd82f67a9f0f9d8" translate="yes" xml:space="preserve">
          <source>Variable Defaults: &lt;code&gt;!default&lt;/code&gt;</source>
          <target state="translated">变量默认值： &lt;code&gt;!default&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2a993f0ecb978e6d4f6c3f1eca6b0e43b6692410" translate="yes" xml:space="preserve">
          <source>Variable Scope and Content Blocks</source>
          <target state="translated">可变范围和内容块</target>
        </trans-unit>
        <trans-unit id="34762da26e1639d54b003cb20434ff57de97fb21" translate="yes" xml:space="preserve">
          <source>Variable arguments also contain any keyword arguments passed to the mixin or function. These can be accessed using the &lt;a href=&quot;sass/script/functions#keywords-instance_method&quot;&gt;&lt;code&gt;keywords($args)&lt;/code&gt; function&lt;/a&gt;, which returns them as a map from strings (without &lt;code&gt;$&lt;/code&gt;) to values.</source>
          <target state="translated">变量参数还包含传递给mixin或函数的任何关键字参数。可以使用&lt;a href=&quot;sass/script/functions#keywords-instance_method&quot;&gt; &lt;code&gt;keywords($args)&lt;/code&gt; 函数&lt;/a&gt;访问它们，该函数将它们作为从字符串（没有 &lt;code&gt;$&lt;/code&gt; ）到值的映射返回。</target>
        </trans-unit>
        <trans-unit id="12bec1e6f5c7b6f13ec79c6d010470c778844034" translate="yes" xml:space="preserve">
          <source>Variable arguments can also be used when calling a mixin. Using the same syntax, you can expand a list of values so that each value is passed as a separate argument, or expand a map of values so that each pair is treated as a keyword argument. For example:</source>
          <target state="translated">调用 mixin 时也可以使用变量参数。使用同样的语法,你可以展开一个值的列表,使每个值作为一个单独的参数传递,或者展开一个值的映射,使每对值作为一个关键字参数处理。例如</target>
        </trans-unit>
        <trans-unit id="d8f6a1442eaa82ed2ef7bd36ce68687125894980" translate="yes" xml:space="preserve">
          <source>Variables are only available within the level of nested selectors where they're defined. If they're defined outside of any nested selectors, they're available everywhere. They can also be defined with the &lt;code&gt;!global&lt;/code&gt; flag, in which case they're also available everywhere. For example:</source>
          <target state="translated">变量仅在定义它们的嵌套选择器级别内可用。如果在任何嵌套选择器之外定义它们，那么它们随处可见。也可以使用 &lt;code&gt;!global&lt;/code&gt; 标志定义它们，在这种情况下，它们也随处可用。例如：</target>
        </trans-unit>
        <trans-unit id="1cb19cba9d55dde6587abe0c14c4d12a21eb6bd0" translate="yes" xml:space="preserve">
          <source>Variables with &lt;code&gt;null&lt;/code&gt; values are treated as unassigned by !default:</source>
          <target state="translated">具有 &lt;code&gt;null&lt;/code&gt; 值的变量被！default视为未分配：</target>
        </trans-unit>
        <trans-unit id="a26c9a48ab460ac1ce8cae1c7f4d0ff504a10df3" translate="yes" xml:space="preserve">
          <source>Variables: &lt;code&gt;$&lt;/code&gt; #variables_</source>
          <target state="translated">变量： &lt;code&gt;$&lt;/code&gt; #variables_</target>
        </trans-unit>
        <trans-unit id="fc476ae6c1bd15ef6c5cb340c03e844433c803d7" translate="yes" xml:space="preserve">
          <source>Well-formatted, customizable output</source>
          <target state="translated">格式良好、可定制的输出。</target>
        </trans-unit>
        <trans-unit id="45cf9995f3f3b0a0c2fc12ee09c79fc32d152015" translate="yes" xml:space="preserve">
          <source>When defining a mixin, the arguments are written as variable names separated by commas, all in parentheses after the name. Then when including the mixin, values can be passed in in the same manner. For example:</source>
          <target state="translated">当定义一个mixin时,参数写成变量名,用逗号隔开,所有的变量名后面都加括号。然后在包含mixin的时候,可以用同样的方式传递值。比如说</target>
        </trans-unit>
        <trans-unit id="8eaf0650b12f4b6e13c45da64d3aefa7b846ec82" translate="yes" xml:space="preserve">
          <source>When lists are turned into plain CSS, Sass doesn't add any parentheses, since CSS doesn't understand them. That means that &lt;code&gt;(1px 2px) (5px 6px)&lt;/code&gt; and &lt;code&gt;1px 2px 5px 6px&lt;/code&gt; will look the same when they become CSS. However, they aren't the same when they're Sass: the first is a list containing two lists, while the second is a list containing four numbers.</source>
          <target state="translated">当列表变成普通的CSS时，Sass不会添加任何括号，因为CSS无法理解它们。这意味着 &lt;code&gt;(1px 2px) (5px 6px)&lt;/code&gt; 和 &lt;code&gt;1px 2px 5px 6px&lt;/code&gt; 在变成CSS时将看起来相同。但是，当它们为Sass时，它们并不相同：第一个是包含两个列表的列表，第二个是包含四个数字的列表。</target>
        </trans-unit>
        <trans-unit id="5aad5437d7dfdab5e62318eefd2c6cfb001cf4fa" translate="yes" xml:space="preserve">
          <source>When merging selectors, &lt;code&gt;@extend&lt;/code&gt; is smart enough to avoid unnecessary duplication, so something like &lt;code&gt;.seriousError.seriousError&lt;/code&gt; gets translated to &lt;code&gt;.seriousError&lt;/code&gt;. In addition, it won't produce selectors that can't match anything, like &lt;code&gt;#main#footer&lt;/code&gt;.</source>
          <target state="translated">合并选择器时， &lt;code&gt;@extend&lt;/code&gt; 足够聪明，可以避免不必要的重复，因此将 &lt;code&gt;.seriousError&lt;/code&gt; 之类的 &lt;code&gt;.seriousError.seriousError&lt;/code&gt; 转换为.seriousError。此外，它不会产生无法匹配任何内容的选择器，例如 &lt;code&gt;#main#footer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ff3c92336d6818ffe06769d17b564b4cd912585" translate="yes" xml:space="preserve">
          <source>When resolving an &lt;code&gt;@import&lt;/code&gt;, Sass will go through the load paths looking for an importer that successfully imports the path. Once one is found, the imported file is used.</source>
          <target state="translated">解决 &lt;code&gt;@import&lt;/code&gt; 时，Sass会通过加载路径来寻找成功导入路径的导入器。找到一个文件后，将使用导入的文件。</target>
        </trans-unit>
        <trans-unit id="7c5f3ede65042880a9261966a2c4d5c41201709d" translate="yes" xml:space="preserve">
          <source>When running on Ruby 1.9 and later, Sass is aware of the character encoding of documents. Sass follows the &lt;a href=&quot;http://www.w3.org/TR/2013/WD-css-syntax-3-20130919/#determine-the-fallback-encoding&quot;&gt;CSS spec&lt;/a&gt; to determine the encoding of a stylesheet, and falls back to the Ruby string encoding. This means that it first checks the Unicode byte order mark, then the &lt;code&gt;@charset&lt;/code&gt; declaration, then the Ruby string encoding. If none of these are set, it will assume the document is in UTF-8.</source>
          <target state="translated">在Ruby 1.9和更高版本上运行时，Sass知道文档的字符编码。Sass遵循&lt;a href=&quot;http://www.w3.org/TR/2013/WD-css-syntax-3-20130919/#determine-the-fallback-encoding&quot;&gt;CSS规范&lt;/a&gt;来确定样式表的编码，然后回退到Ruby字符串编码。这意味着它首先检查Unicode字节顺序标记，然后检查 &lt;code&gt;@charset&lt;/code&gt; 声明，然后检查Ruby字符串编码。如果未设置这些选项，则将假定该文档位于UTF-8中。</target>
        </trans-unit>
        <trans-unit id="197dd69b8b83c74b1b436711b01fa575cee90c61" translate="yes" xml:space="preserve">
          <source>When the first letter of a multiline comment is &lt;code&gt;!&lt;/code&gt;, the comment will always rendered into css output even in compressed output modes. This is useful for adding Copyright notices to your generated CSS.</source>
          <target state="translated">多行注释的第一个字母是 &lt;code&gt;!&lt;/code&gt; ，即使在压缩输出模式下，注释也将始终呈现为css输出。这对于将版权声明添加到生成的CSS很有用。</target>
        </trans-unit>
        <trans-unit id="5e4fd8404dc61ca660bd2f2f308dbfe931e2758a" translate="yes" xml:space="preserve">
          <source>When the last argument to a mixin or function is a positional or keyword-style argument, that argument can be followed by a trailing comma. Some prefer this coding style as it can lead to more concise diffs and fewer syntax errors when refactoring.</source>
          <target state="translated">当一个 mixin 或函数的最后一个参数是位置式或关键字式的参数时,该参数后面可以加一个逗号。有些人喜欢这种编码风格,因为它可以使差异更简洁,重构时语法错误更少。</target>
        </trans-unit>
        <trans-unit id="cb17805af33bc17e9ee429b94eb2209b9ed1cc08" translate="yes" xml:space="preserve">
          <source>When the two sequences being merged have no selectors in common, then two new selectors are generated: one with the first sequence before the second, and one with the second sequence before the first. For example:</source>
          <target state="translated">当被合并的两个序列没有共同的选择符时,那么就会生成两个新的选择符:一个是第一个序列在第二个序列之前,一个是第二个序列在第一个序列之前。例如</target>
        </trans-unit>
        <trans-unit id="6a96355c77e9fc9e8cf8a12bb300b15d130381c5" translate="yes" xml:space="preserve">
          <source>Which would output the following:</source>
          <target state="translated">这将输出以下内容:</target>
        </trans-unit>
        <trans-unit id="4456171cd4cc8074d8af762f53b44a9a7090c527" translate="yes" xml:space="preserve">
          <source>Which would produce:</source>
          <target state="translated">这将产生:</target>
        </trans-unit>
        <trans-unit id="2275e024f14cc0973d14e354edc2110a6fa18663" translate="yes" xml:space="preserve">
          <source>While it would technically be possible to generate all selectors that could possibly match either sequence, this would make the stylesheet far too large. The simple example above, for instance, would require ten selectors. Instead, Sass generates only selectors that are likely to be useful.</source>
          <target state="translated">虽然从技术上讲,可以生成所有可能与任何一个序列相匹配的选择符,但这将使样式表过于庞大。比如上面的简单例子,就需要十个选择符。相反,Sass只生成可能有用的选择符。</target>
        </trans-unit>
        <trans-unit id="b04bfd229cc5abb3ff13094b511bec694aad932a" translate="yes" xml:space="preserve">
          <source>While this is less concise, it can make the stylesheet easier to read. It also allows functions to present more flexible interfaces, providing many arguments without becoming difficult to call.</source>
          <target state="translated">虽然这样做不太简洁,但它可以使样式表更容易阅读。它还可以让函数呈现更灵活的接口,提供许多参数,而不会变得难以调用。</target>
        </trans-unit>
        <trans-unit id="f5e3d812af01ef111586dd7e7cd455fe9cd8f748" translate="yes" xml:space="preserve">
          <source>Within a string of text, #{} style interpolation can be used to place dynamic values within the string:</source>
          <target state="translated">在一串文本中,可以使用#{}样式的插值来放置字符串中的动态值。</target>
        </trans-unit>
        <trans-unit id="5d86af3b87d3bc635839ced821182161d6b68ee4" translate="yes" xml:space="preserve">
          <source>Without a framework, Sass puts the cached templates in the &lt;code&gt;.sass-cache&lt;/code&gt; directory. In Rails and Merb, they go in &lt;code&gt;tmp/sass-cache&lt;/code&gt;. The directory can be customized with the &lt;a href=&quot;#cache_location-option&quot;&gt;&lt;code&gt;:cache_location&lt;/code&gt;&lt;/a&gt; option. If you don't want Sass to use caching at all, set the &lt;a href=&quot;#cache-option&quot;&gt;&lt;code&gt;:cache&lt;/code&gt;&lt;/a&gt; option to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果没有框架，Sass会将缓存的模板放在 &lt;code&gt;.sass-cache&lt;/code&gt; 目录中。在Rails和Merb中，它们位于 &lt;code&gt;tmp/sass-cache&lt;/code&gt; 中。可以使用&lt;a href=&quot;#cache_location-option&quot;&gt; &lt;code&gt;:cache_location&lt;/code&gt; &lt;/a&gt;选项自定义目录。如果您根本不希望Sass使用缓存，请将&lt;a href=&quot;#cache-option&quot;&gt; &lt;code&gt;:cache&lt;/code&gt; &lt;/a&gt;选项设置为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f56b7d1c084ebe4783cdd34797281e416c05826e" translate="yes" xml:space="preserve">
          <source>You always include spaces on both sides of &lt;code&gt;-&lt;/code&gt; when subtracting.</source>
          <target state="translated">减去时，总是在 &lt;code&gt;-&lt;/code&gt; 的两边都包含空格。</target>
        </trans-unit>
        <trans-unit id="81147456a5c44d6acef05640c6850187a2831f7b" translate="yes" xml:space="preserve">
          <source>You can also tell Sass to watch the file and update the CSS every time the Sass file changes:</source>
          <target state="translated">你也可以告诉Sass观察文件,每次Sass文件变化时更新CSS。</target>
        </trans-unit>
        <trans-unit id="c122ca56a2a3ed525462e2c06d796aee0409cb52" translate="yes" xml:space="preserve">
          <source>You can also use SassScript variables in selectors and property names using &lt;code&gt;#{}&lt;/code&gt; interpolation syntax:</source>
          <target state="translated">您还可以使用 &lt;code&gt;#{}&lt;/code&gt; 插值语法在选择器和属性名称中使用SassScript变量：</target>
        </trans-unit>
        <trans-unit id="13d13633a9f0660c0009224931f186514fc691b4" translate="yes" xml:space="preserve">
          <source>You can assign to variables if they aren't already assigned by adding the &lt;code&gt;!default&lt;/code&gt; flag to the end of the value. This means that if the variable has already been assigned to, it won't be re-assigned, but if it doesn't have a value yet, it will be given one.</source>
          <target state="translated">如果尚未分配变量，则可以通过在值的末尾添加 &lt;code&gt;!default&lt;/code&gt; 标志来分配它们。这意味着，如果变量已被分配给它，则不会被重新分配，但是如果它还没有值，它将被赋予一个值。</target>
        </trans-unit>
        <trans-unit id="9a523a74baa4d7c69d2164b235f4424055c471bb" translate="yes" xml:space="preserve">
          <source>You can easily experiment with SassScript using the interactive shell. To launch the shell run the sass command-line with the &lt;code&gt;-i&lt;/code&gt; option. At the prompt, enter any legal SassScript expression to have it evaluated and the result printed out for you:</source>
          <target state="translated">您可以使用交互式shell轻松地试用SassScript。要启动外壳程序，请使用 &lt;code&gt;-i&lt;/code&gt; 选项运行sass命令行。在提示符下，输入任何合法的SassScript表达式以对其求值并为您输出结果：</target>
        </trans-unit>
        <trans-unit id="a6efbecc96c755932cef7a5a3a542ce06278b05c" translate="yes" xml:space="preserve">
          <source>You can explicitly test for &lt;code&gt;$var == false&lt;/code&gt; or &lt;code&gt;$var == null&lt;/code&gt; if you want to distinguish between these.</source>
          <target state="translated">如果要区分 &lt;code&gt;$var == false&lt;/code&gt; 或 &lt;code&gt;$var == null&lt;/code&gt; 则可以显式测试。</target>
        </trans-unit>
        <trans-unit id="ba20eeb17ed1540c5890209e0bc6ad635fd905c9" translate="yes" xml:space="preserve">
          <source>You can pass both an argument list and a map as long as the list comes before the map, as in &lt;code&gt;@include colors($values..., $map...)&lt;/code&gt;.</source>
          <target state="translated">您可以传递参数列表和映射，只要列表位于映射之前即可，例如 &lt;code&gt;@include colors($values..., $map...)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76d731fd27bb0a6fc509aa34683c1c6e1d903eaa" translate="yes" xml:space="preserve">
          <source>You can then refer to them in properties:</source>
          <target state="translated">然后你可以在属性中引用它们。</target>
        </trans-unit>
        <trans-unit id="cf503cec47c517b787ea526c054cc2eb87d4090d" translate="yes" xml:space="preserve">
          <source>You can turn warnings off with the &lt;code&gt;--quiet&lt;/code&gt; command-line option or the &lt;code&gt;:quiet&lt;/code&gt; Sass option.</source>
          <target state="translated">您可以使用 &lt;code&gt;--quiet&lt;/code&gt; 命令行选项或 &lt;code&gt;:quiet&lt;/code&gt; Sass选项关闭警告。</target>
        </trans-unit>
        <trans-unit id="49feb5899497bef208a42fb48189e577100fd7aa" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;@at-root (without: ...)&lt;/code&gt; to move outside of any directive. You can also do it with multiple directives separated by a space: &lt;code&gt;@at-root (without: media supports)&lt;/code&gt; moves outside of both &lt;code&gt;@media&lt;/code&gt; and &lt;code&gt;@supports&lt;/code&gt; queries.</source>
          <target state="translated">您可以使用 &lt;code&gt;@at-root (without: ...)&lt;/code&gt; 将其移出任何指令。您也可以使用多个指令（用空格隔开）来完成此操作： &lt;code&gt;@at-root (without: media supports)&lt;/code&gt; 移动到 &lt;code&gt;@media&lt;/code&gt; 和 &lt;code&gt;@supports&lt;/code&gt; 查询之外。</target>
        </trans-unit>
        <trans-unit id="da2b2af53c24dbda3080a6658d2d65594b29bdb2" translate="yes" xml:space="preserve">
          <source>You can use variable arguments to wrap a mixin and add additional styles without changing the argument signature of the mixin. If you do, keyword arguments will get directly passed through to the wrapped mixin. For example:</source>
          <target state="translated">您可以使用变量参数来封装一个 mixin,并在不改变 mixin 的参数签名的情况下添加额外的样式。如果你这样做,关键字参数将直接传递到被包装的 mixin。例如</target>
        </trans-unit>
        <trans-unit id="214186f8652a0a9f83377311430be290c09851ce" translate="yes" xml:space="preserve">
          <source>You include a space before &lt;code&gt;-&lt;/code&gt; but not after for a negative number or a unary negation.</source>
          <target state="translated">您在数字前加一个空格 &lt;code&gt;-&lt;/code&gt; 但不能在其后加一个负数或一元负数。</target>
        </trans-unit>
        <trans-unit id="8816308f546f36ba1f2eb84b1922ab74be659ff1" translate="yes" xml:space="preserve">
          <source>You wrap a unary negation in parentheses if it's in a space-separated list, as in &lt;code&gt;10px (-$var)&lt;/code&gt;.</source>
          <target state="translated">如果用空格分隔的列表（如 &lt;code&gt;10px (-$var)&lt;/code&gt; 的一元负数，则将其括在括号中。</target>
        </trans-unit>
        <trans-unit id="82451b41fd7878180b6aa2b54e369cbec4e8032c" translate="yes" xml:space="preserve">
          <source>abs</source>
          <target state="translated">abs</target>
        </trans-unit>
        <trans-unit id="41314a88f904c4689277b5eb551576181f8b03de" translate="yes" xml:space="preserve">
          <source>abs($number)</source>
          <target state="translated">abs($number)</target>
        </trans-unit>
        <trans-unit id="13fb83ffcf44c21e90625b65560d2cb3b38b1c37" translate="yes" xml:space="preserve">
          <source>adjust_color</source>
          <target state="translated">adjust_color</target>
        </trans-unit>
        <trans-unit id="fcde6841d6d75d592f338b4773bb5cc3d554e840" translate="yes" xml:space="preserve">
          <source>adjust_color($color, [$red], [$green], [$blue], [$hue], [$saturation], [$lightness], [$alpha])</source>
          <target state="translated">adjust_color($color,[$red],[$green],[$blue],[$hue],[$saturation],[$lightness],[$alpha])</target>
        </trans-unit>
        <trans-unit id="9a48bad57d6bbbfcf761441534d9305586456562" translate="yes" xml:space="preserve">
          <source>adjust_hue</source>
          <target state="translated">adjust_hue</target>
        </trans-unit>
        <trans-unit id="a70422b686b9a2e20129773f335a21da1541c763" translate="yes" xml:space="preserve">
          <source>adjust_hue($color, $degrees)</source>
          <target state="translated">调整色调($color,$degrees)</target>
        </trans-unit>
        <trans-unit id="be76331b95dfc399cd776d2fc68021e0db03cc4f" translate="yes" xml:space="preserve">
          <source>alpha</source>
          <target state="translated">alpha</target>
        </trans-unit>
        <trans-unit id="97fe9c0e1b5011367b9777a98fe408db58713477" translate="yes" xml:space="preserve">
          <source>alpha($color)</source>
          <target state="translated">alpha($color)</target>
        </trans-unit>
        <trans-unit id="515f232e78ae2bf61209d0acf67620a08cf72b8f" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;_colors.scss&lt;/code&gt; would be imported.</source>
          <target state="translated">和 &lt;code&gt;_colors.scss&lt;/code&gt; 将被导入。</target>
        </trans-unit>
        <trans-unit id="db43bff34c78044870bc6b1ae2aa16902bb1bb8a" translate="yes" xml:space="preserve">
          <source>append</source>
          <target state="translated">append</target>
        </trans-unit>
        <trans-unit id="1f95e54ad17da9f7ddab05727617ccee32ba9d8b" translate="yes" xml:space="preserve">
          <source>append($list, $val, $separator:auto)</source>
          <target state="translated">append($list,$val,$separator:auto)</target>
        </trans-unit>
        <trans-unit id="4c9a82ce72ca2519f38d0af0abbb4cecb9fceca9" translate="yes" xml:space="preserve">
          <source>blue</source>
          <target state="translated">blue</target>
        </trans-unit>
        <trans-unit id="ab64ebf7ba79b4e2d077bfab54e1b739d4950074" translate="yes" xml:space="preserve">
          <source>blue($color)</source>
          <target state="translated">blue($color)</target>
        </trans-unit>
        <trans-unit id="e8f8fe62a522cc962a3179c2ef2f3161ee811ac5" translate="yes" xml:space="preserve">
          <source>booleans (e.g. &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">布尔值（例如 &lt;code&gt;true&lt;/code&gt; ， &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="bc8d8647b02deea0ab3e715c220d041ee78cc19d" translate="yes" xml:space="preserve">
          <source>call</source>
          <target state="translated">call</target>
        </trans-unit>
        <trans-unit id="20dd91e57ed7bf204330eea88147ed9b194a7d8b" translate="yes" xml:space="preserve">
          <source>call($function, $args...)</source>
          <target state="translated">调用($function,$args...)</target>
        </trans-unit>
        <trans-unit id="613af80c25dfbc9ef75ce605280571b9a518d632" translate="yes" xml:space="preserve">
          <source>ceil</source>
          <target state="translated">ceil</target>
        </trans-unit>
        <trans-unit id="780c60bd62c3b814b33370607671c80f0537384f" translate="yes" xml:space="preserve">
          <source>ceil($number)</source>
          <target state="translated">ceil($number)</target>
        </trans-unit>
        <trans-unit id="dc1b619e02e6d7ccbf209c87d6a683b6d399163a" translate="yes" xml:space="preserve">
          <source>change_color</source>
          <target state="translated">change_color</target>
        </trans-unit>
        <trans-unit id="38518de32ec42f346b3d323f9e208875a46949c1" translate="yes" xml:space="preserve">
          <source>change_color($color, [$red], [$green], [$blue], [$hue], [$saturation], [$lightness], [$alpha])</source>
          <target state="translated">change_color($color,[$red],[$green],[$blue],[$hue],[$saturation],[$lightness],[$alpha])</target>
        </trans-unit>
        <trans-unit id="1c04e58b4f0ee405df5a6e58ecfc03f4bb77f299" translate="yes" xml:space="preserve">
          <source>colors (e.g. &lt;code&gt;blue&lt;/code&gt;, &lt;code&gt;#04a3f9&lt;/code&gt;, &lt;code&gt;rgba(255, 0, 0, 0.5)&lt;/code&gt;)</source>
          <target state="translated">颜色（例如 &lt;code&gt;blue&lt;/code&gt; ， &lt;code&gt;#04a3f9&lt;/code&gt; ， &lt;code&gt;rgba(255, 0, 0, 0.5)&lt;/code&gt; 255，0，0，0.5 ））</target>
        </trans-unit>
        <trans-unit id="41dfc188a657086391d84f0d7d61638c451f41b5" translate="yes" xml:space="preserve">
          <source>comparable</source>
          <target state="translated">comparable</target>
        </trans-unit>
        <trans-unit id="a17ecb8b3662485fab6e4862ac7b6bb4a854fe32" translate="yes" xml:space="preserve">
          <source>comparable($number1, $number2)</source>
          <target state="translated">比较($number1,$number2)</target>
        </trans-unit>
        <trans-unit id="6d5c9dab960e525ed112945029e61215d50dbc52" translate="yes" xml:space="preserve">
          <source>complement</source>
          <target state="translated">complement</target>
        </trans-unit>
        <trans-unit id="b589ca7a7c989e0d901f5953e557459e953b843c" translate="yes" xml:space="preserve">
          <source>complement($color)</source>
          <target state="translated">complement($color)</target>
        </trans-unit>
        <trans-unit id="48f7116d514a7e1a200742892a25afba9684b2c2" translate="yes" xml:space="preserve">
          <source>computes &lt;code&gt;01 * 2 = 02&lt;/code&gt;, &lt;code&gt;02 * 2 = 04&lt;/code&gt;, and &lt;code&gt;03 * 2 = 06&lt;/code&gt;, and is compiled to:</source>
          <target state="translated">单位计算 &lt;code&gt;01 * 2 = 02&lt;/code&gt; ， &lt;code&gt;02 * 2 = 04&lt;/code&gt; ，和 &lt;code&gt;03 * 2 = 06&lt;/code&gt; ，和被编译成：</target>
        </trans-unit>
        <trans-unit id="5d144fff406c46e1c643e6341d2218f55a50f5ab" translate="yes" xml:space="preserve">
          <source>computes &lt;code&gt;01 + 04 = 05&lt;/code&gt;, &lt;code&gt;02 + 05 = 07&lt;/code&gt;, and &lt;code&gt;03 + 06 = 09&lt;/code&gt;, and is compiled to:</source>
          <target state="translated">单位计算 &lt;code&gt;01 + 04 = 05&lt;/code&gt; ， &lt;code&gt;02 + 05 = 07&lt;/code&gt; ，和 &lt;code&gt;03 + 06 = 09&lt;/code&gt; ，和被编译成：</target>
        </trans-unit>
        <trans-unit id="f18c929905ac2ff3971ff803fb0536e1135f7bd0" translate="yes" xml:space="preserve">
          <source>content_exists</source>
          <target state="translated">content_exists</target>
        </trans-unit>
        <trans-unit id="458796e4e963a163322319ba62d683315a930a09" translate="yes" xml:space="preserve">
          <source>counter</source>
          <target state="translated">counter</target>
        </trans-unit>
        <trans-unit id="823683510d4f10536d4a492b82ca2b1bc24f5fcb" translate="yes" xml:space="preserve">
          <source>counter($args...)</source>
          <target state="translated">counter($args...)</target>
        </trans-unit>
        <trans-unit id="9ef65378b90a121f4afd568ccf6ba8211b70ec73" translate="yes" xml:space="preserve">
          <source>counters</source>
          <target state="translated">counters</target>
        </trans-unit>
        <trans-unit id="9eaea663fc86510b9de7edd46ad9ca14dad1f321" translate="yes" xml:space="preserve">
          <source>counters($args...)</source>
          <target state="translated">counters($args...)</target>
        </trans-unit>
        <trans-unit id="e52f1f026347e253ce2eed323018bd1b14329d74" translate="yes" xml:space="preserve">
          <source>css(Bool) &amp;mdash; Whether to get a plain CSS function.</source>
          <target state="translated">css（Bool）-是否获取纯CSS函数。</target>
        </trans-unit>
        <trans-unit id="9d434f61af343dbcd39c63e84bbeee6944187977" translate="yes" xml:space="preserve">
          <source>darken</source>
          <target state="translated">darken</target>
        </trans-unit>
        <trans-unit id="8286568ef2f919cb3a12a1b2bfe6e62463c6f81b" translate="yes" xml:space="preserve">
          <source>darken($color, $amount)</source>
          <target state="translated">darken($color,$amount)</target>
        </trans-unit>
        <trans-unit id="6d5b4b9af4cabbe1e4882083c53be8a7f7344c86" translate="yes" xml:space="preserve">
          <source>desaturate</source>
          <target state="translated">desaturate</target>
        </trans-unit>
        <trans-unit id="c0827bd704098219bedc6b15f2fd5c64a9846b8d" translate="yes" xml:space="preserve">
          <source>desaturate($color, $amount)</source>
          <target state="translated">去饱和度($color,$amount)</target>
        </trans-unit>
        <trans-unit id="4addec3932ac055130662ca9b3b2926fcde4d2b1" translate="yes" xml:space="preserve">
          <source>feature_exists</source>
          <target state="translated">feature_exists</target>
        </trans-unit>
        <trans-unit id="84729169c70a4fa6f86b34577ef113554c52b4e8" translate="yes" xml:space="preserve">
          <source>feature_exists($feature)</source>
          <target state="translated">feature_exists($feature)</target>
        </trans-unit>
        <trans-unit id="3684c9d3c05e7bee19e2728c6a5b2bbccf0cd9c7" translate="yes" xml:space="preserve">
          <source>floor</source>
          <target state="translated">floor</target>
        </trans-unit>
        <trans-unit id="00dff11ab1e2ad6add8f49c93694d595233d86a8" translate="yes" xml:space="preserve">
          <source>floor($number)</source>
          <target state="translated">floor($number)</target>
        </trans-unit>
        <trans-unit id="cd5cb66563a5f1dd282896b4bd49e68528a39782" translate="yes" xml:space="preserve">
          <source>function references</source>
          <target state="translated">函数引用</target>
        </trans-unit>
        <trans-unit id="8b93d084be74d48f58fef2ec03bee143b1bd2e7e" translate="yes" xml:space="preserve">
          <source>function_exists</source>
          <target state="translated">function_exists</target>
        </trans-unit>
        <trans-unit id="73efae2687075416b181ef3fbdb71a8be3fb8c1d" translate="yes" xml:space="preserve">
          <source>function_exists($name)</source>
          <target state="translated">function_exists($name)</target>
        </trans-unit>
        <trans-unit id="9a810897a9090fd61a907f05d62146e8d95779e0" translate="yes" xml:space="preserve">
          <source>get_function</source>
          <target state="translated">get_function</target>
        </trans-unit>
        <trans-unit id="73a94d5898a6c4c7ff69ab7a3f58d514f0f4ea66" translate="yes" xml:space="preserve">
          <source>get_function($name, $css:false)</source>
          <target state="translated">get_function($name,$css:false)</target>
        </trans-unit>
        <trans-unit id="53db0bb67179b9cf1b228159b12f80aa5b9543fc" translate="yes" xml:space="preserve">
          <source>global_variable_exists</source>
          <target state="translated">global_variable_exists</target>
        </trans-unit>
        <trans-unit id="d39b5f765ea1ffd1ce3e03b8f259a057302d17cb" translate="yes" xml:space="preserve">
          <source>global_variable_exists($name)</source>
          <target state="translated">global_variable_exists($name)</target>
        </trans-unit>
        <trans-unit id="03183f3cbe8bd5f653fd0bbac0b1064f9f044000" translate="yes" xml:space="preserve">
          <source>grayscale</source>
          <target state="translated">grayscale</target>
        </trans-unit>
        <trans-unit id="7ae667bfb465c85c164d9dde3794686d6837ad90" translate="yes" xml:space="preserve">
          <source>grayscale($color)</source>
          <target state="translated">grayscale($color)</target>
        </trans-unit>
        <trans-unit id="bc74f4f071a5a33f00ab88a6d6385b5e6638b86c" translate="yes" xml:space="preserve">
          <source>green</source>
          <target state="translated">green</target>
        </trans-unit>
        <trans-unit id="8e34eb904663877e8206feed2c2719ae5d2814f9" translate="yes" xml:space="preserve">
          <source>green($color)</source>
          <target state="translated">green($color)</target>
        </trans-unit>
        <trans-unit id="212eef0d02164871e784ddbc4039eebfcafb155a" translate="yes" xml:space="preserve">
          <source>hsl</source>
          <target state="translated">hsl</target>
        </trans-unit>
        <trans-unit id="efdda5705bc9b361076109a16891d4ef6a25dcfc" translate="yes" xml:space="preserve">
          <source>hsl($hue, $saturation, $lightness)</source>
          <target state="translated">hsl($hue,$saturation,$lightness)</target>
        </trans-unit>
        <trans-unit id="12d92d0a32d83f045ea52ea43d03e560e2d7f6b6" translate="yes" xml:space="preserve">
          <source>hsla</source>
          <target state="translated">hsla</target>
        </trans-unit>
        <trans-unit id="d4ccd81201caecc7b11a68b5feb39dc9bb3bbf91" translate="yes" xml:space="preserve">
          <source>hsla($hue, $saturation, $lightness, $alpha)</source>
          <target state="translated">hsla($hue,$saturation,$lightness,$alpha)</target>
        </trans-unit>
        <trans-unit id="ae330fb416dcd1ec7a02099ff562bec4c0766695" translate="yes" xml:space="preserve">
          <source>hue</source>
          <target state="translated">hue</target>
        </trans-unit>
        <trans-unit id="33b311f2f1d8f765ed2d4a79de626e132cef11b3" translate="yes" xml:space="preserve">
          <source>hue($color)</source>
          <target state="translated">hue($color)</target>
        </trans-unit>
        <trans-unit id="e787935293b5d76e254bad9eea136b9708aadc05" translate="yes" xml:space="preserve">
          <source>ie_hex_str</source>
          <target state="translated">ie_hex_str</target>
        </trans-unit>
        <trans-unit id="767f3f4ea0dc63e75cba0b91444dfc94b0ab0bc8" translate="yes" xml:space="preserve">
          <source>ie_hex_str($color)</source>
          <target state="translated">ie_hex_str($color)</target>
        </trans-unit>
        <trans-unit id="958f57f57d72a30f329ee5538f21b0257a49a46e" translate="yes" xml:space="preserve">
          <source>if</source>
          <target state="translated">if</target>
        </trans-unit>
        <trans-unit id="c3d88335d43018c4da6cc8e05894fbc861c76260" translate="yes" xml:space="preserve">
          <source>if($condition, $if-true, $if-false)</source>
          <target state="translated">if($condition,$if-true,$if-false)</target>
        </trans-unit>
        <trans-unit id="e540cdd1328b2b21e29a95405c301b9313b7c346" translate="yes" xml:space="preserve">
          <source>index</source>
          <target state="translated">index</target>
        </trans-unit>
        <trans-unit id="04aa0aaf4988f164d7964b413cb9bae36eef0734" translate="yes" xml:space="preserve">
          <source>index($list, $value)</source>
          <target state="translated">index($list,$value)</target>
        </trans-unit>
        <trans-unit id="a1a2ae18fa153a52a05172a40a60c6c0848214e2" translate="yes" xml:space="preserve">
          <source>inspect</source>
          <target state="translated">inspect</target>
        </trans-unit>
        <trans-unit id="e318971301fd9c5a78e6d0289518b2dbdfddc97c" translate="yes" xml:space="preserve">
          <source>inspect($value)</source>
          <target state="translated">inspect($value)</target>
        </trans-unit>
        <trans-unit id="a1754a8aa1386d7939bfddd474cd0652882671b3" translate="yes" xml:space="preserve">
          <source>invert</source>
          <target state="translated">invert</target>
        </trans-unit>
        <trans-unit id="1093f40a478869199c6eebba5073a81d47e4178c" translate="yes" xml:space="preserve">
          <source>invert($color)  invert($color, $weight:100%)</source>
          <target state="translated">invert($color)invert($color,$weight:100%)</target>
        </trans-unit>
        <trans-unit id="e83e5d1b0a72a66d0c8109bdf229a13a30567c62" translate="yes" xml:space="preserve">
          <source>is compiled to</source>
          <target state="translated">编制为</target>
        </trans-unit>
        <trans-unit id="6b0d333fa91b7256720d61e3b723f862f3e9cd6a" translate="yes" xml:space="preserve">
          <source>is compiled to:</source>
          <target state="translated">被编译成:</target>
        </trans-unit>
        <trans-unit id="c89ab81b3a99ab7236dfba6067a7de5692479c90" translate="yes" xml:space="preserve">
          <source>is_bracketed</source>
          <target state="translated">is_bracketed</target>
        </trans-unit>
        <trans-unit id="c2425a294bd85dd21b4540ee2993705de304c23e" translate="yes" xml:space="preserve">
          <source>is_bracketed($list)</source>
          <target state="translated">is_bracketed($list)</target>
        </trans-unit>
        <trans-unit id="960afda7c138b0fdc7c9189154b9a9dda20847d6" translate="yes" xml:space="preserve">
          <source>is_superselector</source>
          <target state="translated">is_superselector</target>
        </trans-unit>
        <trans-unit id="0f6d742cafd47ee6b4d98e9a5541d8a438014f27" translate="yes" xml:space="preserve">
          <source>is_superselector($super, $sub)</source>
          <target state="translated">is_superselector($super,$sub)</target>
        </trans-unit>
        <trans-unit id="c455b38e076228392d1c751d14fe95da50519334" translate="yes" xml:space="preserve">
          <source>join</source>
          <target state="translated">join</target>
        </trans-unit>
        <trans-unit id="62c72ddce0c63c93c134e7c7409704886c5e8b6c" translate="yes" xml:space="preserve">
          <source>join($list1, $list2, $separator:auto, $bracketed:auto)</source>
          <target state="translated">join($list1,$list2,$separator:auto,$bracketed:auto)</target>
        </trans-unit>
        <trans-unit id="88fc09e54b17679b0028556344b50c9fe169bdb5" translate="yes" xml:space="preserve">
          <source>keywords</source>
          <target state="translated">keywords</target>
        </trans-unit>
        <trans-unit id="4cc5abd8d22e38478333b1c99f2d92f019daf2ae" translate="yes" xml:space="preserve">
          <source>keywords($args)</source>
          <target state="translated">keywords($args)</target>
        </trans-unit>
        <trans-unit id="3d54973f528b01019a58a52d34d518405a01b891" translate="yes" xml:space="preserve">
          <source>length</source>
          <target state="translated">length</target>
        </trans-unit>
        <trans-unit id="f9d79c382e061e1bea1eb7a7be81835f8174ac99" translate="yes" xml:space="preserve">
          <source>length($list)</source>
          <target state="translated">length($list)</target>
        </trans-unit>
        <trans-unit id="5974ecef824d882efe9a83098fe1d4a629f0c6fb" translate="yes" xml:space="preserve">
          <source>lighten</source>
          <target state="translated">lighten</target>
        </trans-unit>
        <trans-unit id="bb777cf8f90f68b02181b0b09a59418123601c57" translate="yes" xml:space="preserve">
          <source>lighten($color, $amount)</source>
          <target state="translated">lighten($color,$amount)</target>
        </trans-unit>
        <trans-unit id="1a1e39752e71eb993efb58f9a9d677538d3bc45c" translate="yes" xml:space="preserve">
          <source>lightness</source>
          <target state="translated">lightness</target>
        </trans-unit>
        <trans-unit id="bed7c58f216522535189528735ab9b41ad55fc54" translate="yes" xml:space="preserve">
          <source>lightness($color)</source>
          <target state="translated">lightness($color)</target>
        </trans-unit>
        <trans-unit id="8ef52782aebb7a5a5262c8f322288a5899165323" translate="yes" xml:space="preserve">
          <source>list_separator</source>
          <target state="translated">list_separator</target>
        </trans-unit>
        <trans-unit id="48e2fb2332e490230d5379b668c0c1c11f1305f5" translate="yes" xml:space="preserve">
          <source>list_separator($list)</source>
          <target state="translated">list_separator($list)</target>
        </trans-unit>
        <trans-unit id="95f69a800f0e853fd56e6b91c008f19a80c2c047" translate="yes" xml:space="preserve">
          <source>lists of values, separated by spaces or commas (e.g. &lt;code&gt;1.5em 1em 0 2em&lt;/code&gt;, &lt;code&gt;Helvetica, Arial, sans-serif&lt;/code&gt;)</source>
          <target state="translated">值列表，以空格或逗号分隔（例如 &lt;code&gt;1.5em 1em 0 2em&lt;/code&gt; ， &lt;code&gt;Helvetica, Arial, sans-serif&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="cb6d5ba86dad121baa49b3e29322e71fec188b44" translate="yes" xml:space="preserve">
          <source>map_get</source>
          <target state="translated">map_get</target>
        </trans-unit>
        <trans-unit id="e6ddca5af79ca8d165b942f7fda21cece8a1938f" translate="yes" xml:space="preserve">
          <source>map_get($map, $key)</source>
          <target state="translated">map_get($map,$key)</target>
        </trans-unit>
        <trans-unit id="0298e572e6674871479af9ec3d68d7cd55667476" translate="yes" xml:space="preserve">
          <source>map_has_key</source>
          <target state="translated">map_has_key</target>
        </trans-unit>
        <trans-unit id="6b4f7540a7da4d47b50597b505e7d5baac5ddf62" translate="yes" xml:space="preserve">
          <source>map_has_key($map, $key)</source>
          <target state="translated">map_has_key($map,$key)</target>
        </trans-unit>
        <trans-unit id="502345eafd7f1be4b169eaa1b2458417fc490ea7" translate="yes" xml:space="preserve">
          <source>map_keys</source>
          <target state="translated">map_keys</target>
        </trans-unit>
        <trans-unit id="344251ea05de4f296f502f732f9846b170ad8a8d" translate="yes" xml:space="preserve">
          <source>map_keys($map)</source>
          <target state="translated">map_keys($map)</target>
        </trans-unit>
        <trans-unit id="befe27e7493383353a36af48f356a4fb142f4423" translate="yes" xml:space="preserve">
          <source>map_merge</source>
          <target state="translated">map_merge</target>
        </trans-unit>
        <trans-unit id="f3becfc9368529ccc4976548a750995119ae483e" translate="yes" xml:space="preserve">
          <source>map_merge($map1, $map2)</source>
          <target state="translated">map_merge($map1,$map2)</target>
        </trans-unit>
        <trans-unit id="fcfd8a226656d2a48797630faf4f55c51fff5390" translate="yes" xml:space="preserve">
          <source>map_remove</source>
          <target state="translated">map_remove</target>
        </trans-unit>
        <trans-unit id="34b3845b9f35f17d67ad27d6eac0596e91ba87de" translate="yes" xml:space="preserve">
          <source>map_remove($map, $keys...)</source>
          <target state="translated">map_remove($map,$keys...)</target>
        </trans-unit>
        <trans-unit id="c914d6732e7a93c80b0f3f81a8db8ae51122b7df" translate="yes" xml:space="preserve">
          <source>map_values</source>
          <target state="translated">map_values</target>
        </trans-unit>
        <trans-unit id="b5ba6caa9fda9083a840683103d3268bb09ffdd5" translate="yes" xml:space="preserve">
          <source>map_values($map)</source>
          <target state="translated">map_values($map)</target>
        </trans-unit>
        <trans-unit id="2a7591048b98f64a4b5374174e7db75088596322" translate="yes" xml:space="preserve">
          <source>maps from one value to another (e.g. &lt;code&gt;(key1: value1, key2: value2)&lt;/code&gt;)</source>
          <target state="translated">从一个值映射到另一个（例如 &lt;code&gt;(key1: value1, key2: value2)&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="0706025b2bbcec1ed8d64822f4eccd96314938d0" translate="yes" xml:space="preserve">
          <source>max</source>
          <target state="translated">max</target>
        </trans-unit>
        <trans-unit id="c9a5ecc394ea62b65b941ab698a1700b521d4782" translate="yes" xml:space="preserve">
          <source>max($numbers...)</source>
          <target state="translated">max($numbers...)</target>
        </trans-unit>
        <trans-unit id="b6c935d4f3c7b220fa038613a1f9c1b56b255a86" translate="yes" xml:space="preserve">
          <source>min</source>
          <target state="translated">min</target>
        </trans-unit>
        <trans-unit id="dbd49320c2fe088ee31a2a011080df1068b8cd75" translate="yes" xml:space="preserve">
          <source>min($numbers...)</source>
          <target state="translated">min($numbers...)</target>
        </trans-unit>
        <trans-unit id="38743fbb4474f9888eeb292dd9b249a72c19fd24" translate="yes" xml:space="preserve">
          <source>mix</source>
          <target state="translated">mix</target>
        </trans-unit>
        <trans-unit id="b7621cd239b8ce993a7f16a87c1037b40830d64a" translate="yes" xml:space="preserve">
          <source>mix($color1, $color2, $weight:50%)</source>
          <target state="translated">mix($color1,$color2,$weight:50%)</target>
        </trans-unit>
        <trans-unit id="847c878c38456c539b4788642e1547577912b694" translate="yes" xml:space="preserve">
          <source>mixin_exists</source>
          <target state="translated">mixin_exists</target>
        </trans-unit>
        <trans-unit id="2d727331c8b3dcdb6f4e579e8848305656149a5b" translate="yes" xml:space="preserve">
          <source>mixin_exists($name)</source>
          <target state="translated">mixin_exists($name)</target>
        </trans-unit>
        <trans-unit id="0dcbb8c4fad22fde5877055fcbc6f1c550e3a00d" translate="yes" xml:space="preserve">
          <source>name(String) &amp;mdash; The name of the function being referenced.</source>
          <target state="translated">name（String）&amp;mdash;被引用的函数的名称。</target>
        </trans-unit>
        <trans-unit id="4fe2c45693c3e4172a1013cee892ec6832399cd2" translate="yes" xml:space="preserve">
          <source>name(String) &amp;mdash; The name of the function to check or a function reference.</source>
          <target state="translated">name（String）&amp;mdash;要检查的函数或函数引用的名称。</target>
        </trans-unit>
        <trans-unit id="66b6f54953f1932f968b74a9098f7f903f4a6f6c" translate="yes" xml:space="preserve">
          <source>name(String) &amp;mdash; The name of the mixin to check.</source>
          <target state="translated">name（String）&amp;mdash;要检查的混合的名称。</target>
        </trans-unit>
        <trans-unit id="60627985e724e945990d6d38cb32744cf01bc5a8" translate="yes" xml:space="preserve">
          <source>nth</source>
          <target state="translated">nth</target>
        </trans-unit>
        <trans-unit id="e663c3562d58e4926a1ba83ee4592a2246d82cf7" translate="yes" xml:space="preserve">
          <source>nth($list, $n)</source>
          <target state="translated">nth($list,$n)</target>
        </trans-unit>
        <trans-unit id="18e382acb8080a6ad2c7a89c7a62dc07635ca103" translate="yes" xml:space="preserve">
          <source>nulls (e.g. &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">空值（例如 &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="65d390296e9c59855f79f0cda2efc43c5cad36ed" translate="yes" xml:space="preserve">
          <source>numbers (e.g. &lt;code&gt;1.2&lt;/code&gt;, &lt;code&gt;13&lt;/code&gt;, &lt;code&gt;10px&lt;/code&gt;)</source>
          <target state="translated">数目（例如 &lt;code&gt;1.2&lt;/code&gt; ， &lt;code&gt;13&lt;/code&gt; ， &lt;code&gt;10px&lt;/code&gt; 的）</target>
        </trans-unit>
        <trans-unit id="1c2255d3789db4969aed37c41834b84d99564358" translate="yes" xml:space="preserve">
          <source>opacify</source>
          <target state="translated">opacify</target>
        </trans-unit>
        <trans-unit id="ae12e63a6d6d87b9ac67d74671ebe42206bd9b33" translate="yes" xml:space="preserve">
          <source>opacify($color, $amount) Also known as: &lt;span id=&quot;fade_in-instance_method&quot;&gt;fade_in&lt;/span&gt;</source>
          <target state="translated">opacify（$ color，$ amount）也称为：&lt;span id=&quot;fade_in-instance_method&quot;&gt;fade_in&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4546f429052ef53e58284834db4fffb7bd2975fd" translate="yes" xml:space="preserve">
          <source>opacity</source>
          <target state="translated">opacity</target>
        </trans-unit>
        <trans-unit id="7872ad224c8344872fbda4e0d94bfb0bf559082f" translate="yes" xml:space="preserve">
          <source>opacity($color)</source>
          <target state="translated">opacity($color)</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="485e0703f2e6eb15da7ef67b5be3629ae4f80277" translate="yes" xml:space="preserve">
          <source>outputs:</source>
          <target state="translated">outputs:</target>
        </trans-unit>
        <trans-unit id="5138292fdb5c5907fce2b5cd3dfae55ad7c5542f" translate="yes" xml:space="preserve">
          <source>percentage</source>
          <target state="translated">percentage</target>
        </trans-unit>
        <trans-unit id="8b09a777d1c5f089cf18a4373b3a8a93a01114a7" translate="yes" xml:space="preserve">
          <source>percentage($number)</source>
          <target state="translated">percentage($number)</target>
        </trans-unit>
        <trans-unit id="2bcec56171df3c6150684b60fb0f16c51e1923ed" translate="yes" xml:space="preserve">
          <source>produces:</source>
          <target state="translated">produces:</target>
        </trans-unit>
        <trans-unit id="f5d98dda084d28a169608dd73ae890b09c93e84f" translate="yes" xml:space="preserve">
          <source>quote</source>
          <target state="translated">quote</target>
        </trans-unit>
        <trans-unit id="4ac2e113c3fedeec09985bf4cd17afb2e0ce30c4" translate="yes" xml:space="preserve">
          <source>quote($string)</source>
          <target state="translated">quote($string)</target>
        </trans-unit>
        <trans-unit id="5a3df1bc9e5578d7313bf7b4b7e269c9f3fcdbc9" translate="yes" xml:space="preserve">
          <source>random  random</source>
          <target state="translated">乱七八糟</target>
        </trans-unit>
        <trans-unit id="2f71869c3c453683625085160a19776ce4265df6" translate="yes" xml:space="preserve">
          <source>random  random($limit)</source>
          <target state="translated">随机($limit)</target>
        </trans-unit>
        <trans-unit id="78988010b890ce6f4d2136481f392787ec6d6106" translate="yes" xml:space="preserve">
          <source>red</source>
          <target state="translated">red</target>
        </trans-unit>
        <trans-unit id="8f8b253e6fb11657920bc28fac381b02d132c65a" translate="yes" xml:space="preserve">
          <source>red($color)</source>
          <target state="translated">red($color)</target>
        </trans-unit>
        <trans-unit id="eb4b5bbb4a6cbf3468229148f167a307303eeb1f" translate="yes" xml:space="preserve">
          <source>rgb</source>
          <target state="translated">rgb</target>
        </trans-unit>
        <trans-unit id="0a73f8069faf6439b03a474be623471ea31d586f" translate="yes" xml:space="preserve">
          <source>rgb($red, $green, $blue)</source>
          <target state="translated">rgb($red,$green,$blue)</target>
        </trans-unit>
        <trans-unit id="aa8b8e5898d4e45de28553401a77e06459abebb3" translate="yes" xml:space="preserve">
          <source>rgba</source>
          <target state="translated">rgba</target>
        </trans-unit>
        <trans-unit id="de0244e48b69062fc2b12b02ce638645424e536d" translate="yes" xml:space="preserve">
          <source>rgba($red, $green, $blue, $alpha)  rgba($color, $alpha)</source>
          <target state="translated">rgba($red,$green,$blue,$alpha)rgba($color,$alpha)</target>
        </trans-unit>
        <trans-unit id="f0590a6dd3663be108ff31f58d16b829a1284be6" translate="yes" xml:space="preserve">
          <source>round</source>
          <target state="translated">round</target>
        </trans-unit>
        <trans-unit id="e6eaac36ca00e1246fa1f9008744d8744f1b59da" translate="yes" xml:space="preserve">
          <source>round($number)</source>
          <target state="translated">round($number)</target>
        </trans-unit>
        <trans-unit id="c7a2b59cfc07ac89acb3b335af1c0076f6a49b0e" translate="yes" xml:space="preserve">
          <source>saturate</source>
          <target state="translated">saturate</target>
        </trans-unit>
        <trans-unit id="6d546a758dbd6ac560ee5c0ccc700ed9c5adf8bb" translate="yes" xml:space="preserve">
          <source>saturate($color, $amount)</source>
          <target state="translated">饱和度($color,$amount)</target>
        </trans-unit>
        <trans-unit id="a9c3a1723405c0f9772744135fb727da79aba197" translate="yes" xml:space="preserve">
          <source>saturation</source>
          <target state="translated">saturation</target>
        </trans-unit>
        <trans-unit id="5f1c05eac512494e03390b221ddc5f1ca54149df" translate="yes" xml:space="preserve">
          <source>saturation($color)</source>
          <target state="translated">saturation($color)</target>
        </trans-unit>
        <trans-unit id="0241daa321b130dc9168782c0b3d708cb759cb36" translate="yes" xml:space="preserve">
          <source>scale_color</source>
          <target state="translated">scale_color</target>
        </trans-unit>
        <trans-unit id="1fc0db058542a8cb7a1b5bb7cab2c2d65f6be7dc" translate="yes" xml:space="preserve">
          <source>scale_color($color, [$red], [$green], [$blue], [$saturation], [$lightness], [$alpha])</source>
          <target state="translated">scale_color($color,[$red],[$green],[$blue],[$saturation],[$lightness],[$alpha])</target>
        </trans-unit>
        <trans-unit id="d34ce64e10006e23c09d4e1e4709658952236002" translate="yes" xml:space="preserve">
          <source>selector_append</source>
          <target state="translated">selector_append</target>
        </trans-unit>
        <trans-unit id="0c8df11484c72416872d45debe75f877774e93db" translate="yes" xml:space="preserve">
          <source>selector_append($selectors...)</source>
          <target state="translated">selector_append($selectors...)</target>
        </trans-unit>
        <trans-unit id="6450e6f006429bde4003e6ae44e12b90694d6cb9" translate="yes" xml:space="preserve">
          <source>selector_extend</source>
          <target state="translated">selector_extend</target>
        </trans-unit>
        <trans-unit id="78795dd92676883d77ea860e9297b2a007744598" translate="yes" xml:space="preserve">
          <source>selector_extend($selector, $extendee, $extender)</source>
          <target state="translated">selector_extend($selector,$extendee,$extender)</target>
        </trans-unit>
        <trans-unit id="b9cada06a04298328d80cc41b929c6e7b014f6a9" translate="yes" xml:space="preserve">
          <source>selector_nest</source>
          <target state="translated">selector_nest</target>
        </trans-unit>
        <trans-unit id="2a640f1de4d9cc378411d5b52b8ef148adad3ea0" translate="yes" xml:space="preserve">
          <source>selector_nest($selectors...)</source>
          <target state="translated">selector_nest($selectors...)</target>
        </trans-unit>
        <trans-unit id="643a1193b6ee148898ff9f68b7afcabda1c544d2" translate="yes" xml:space="preserve">
          <source>selector_parse</source>
          <target state="translated">selector_parse</target>
        </trans-unit>
        <trans-unit id="727e2e7f38e979a04ebede8fcf9ec649d50329d4" translate="yes" xml:space="preserve">
          <source>selector_parse($selector)</source>
          <target state="translated">selector_parse($selector)</target>
        </trans-unit>
        <trans-unit id="a59535d702a4123a562e56b77a8113b6687f3d8a" translate="yes" xml:space="preserve">
          <source>selector_replace</source>
          <target state="translated">selector_replace</target>
        </trans-unit>
        <trans-unit id="dd79ee20fe076665f2e65752cf1f4110a0786b57" translate="yes" xml:space="preserve">
          <source>selector_replace($selector, $original, $replacement)</source>
          <target state="translated">selector_replace($selector,$original,$replacement)</target>
        </trans-unit>
        <trans-unit id="85da23d571e5f6ebcc9a8bdf044aac57c585b78f" translate="yes" xml:space="preserve">
          <source>selector_unify</source>
          <target state="translated">selector_unify</target>
        </trans-unit>
        <trans-unit id="f9dfdf3c651c522bbe0355546429d3afcb68c6bb" translate="yes" xml:space="preserve">
          <source>selector_unify($selector1, $selector2)</source>
          <target state="translated">selector_unify($selector1,$selector2)</target>
        </trans-unit>
        <trans-unit id="65c10dc3549fe07424148a8a4790a3341ecbc253" translate="yes" xml:space="preserve">
          <source>set</source>
          <target state="translated">set</target>
        </trans-unit>
        <trans-unit id="c9eb0929ccf6defa0553d8c861ae20a322e6e28e" translate="yes" xml:space="preserve">
          <source>simple_selectors</source>
          <target state="translated">simple_selectors</target>
        </trans-unit>
        <trans-unit id="683b9b05d12881e0fdc543c4640cf7322e96d87d" translate="yes" xml:space="preserve">
          <source>simple_selectors($selector)</source>
          <target state="translated">simple_selectors($selector)</target>
        </trans-unit>
        <trans-unit id="893917b41124831b470497010d8e91756d137725" translate="yes" xml:space="preserve">
          <source>str_index</source>
          <target state="translated">str_index</target>
        </trans-unit>
        <trans-unit id="2c0550a8808293f957da5816f9b5ddec0c341a4e" translate="yes" xml:space="preserve">
          <source>str_index($string, $substring)</source>
          <target state="translated">str_index($string,$substring)</target>
        </trans-unit>
        <trans-unit id="569d99623f14df5535ad3a1e46888dd6b8b09897" translate="yes" xml:space="preserve">
          <source>str_insert</source>
          <target state="translated">str_insert</target>
        </trans-unit>
        <trans-unit id="8056408d97a646942bda36a44df7bdbc2b99fe9c" translate="yes" xml:space="preserve">
          <source>str_insert($string, $insert, $index)</source>
          <target state="translated">str_insert($string,$insert,$index)</target>
        </trans-unit>
        <trans-unit id="f999ae6eef02e1bd0d21875bd025ee4ca4459ac0" translate="yes" xml:space="preserve">
          <source>str_length</source>
          <target state="translated">str_length</target>
        </trans-unit>
        <trans-unit id="dd9bf59413096c78e08d0d4aa636a6e9254822ba" translate="yes" xml:space="preserve">
          <source>str_length($string)</source>
          <target state="translated">str_length($string)</target>
        </trans-unit>
        <trans-unit id="52ef63d462aad0e2003c418695e477840f4a3110" translate="yes" xml:space="preserve">
          <source>str_slice</source>
          <target state="translated">str_slice</target>
        </trans-unit>
        <trans-unit id="b0c6919a4f3e229c93f89dfd2b8f673756bcd088" translate="yes" xml:space="preserve">
          <source>str_slice($string, $start-at, $end-at:-1)</source>
          <target state="translated">str_slice($string,$start-at,$end-at:-1)</target>
        </trans-unit>
        <trans-unit id="4d3ff95c38738f4949939ff2e1e2cd2bfcfe1428" translate="yes" xml:space="preserve">
          <source>strings of text, with and without quotes (e.g. &lt;code&gt;&quot;foo&quot;&lt;/code&gt;, &lt;code&gt;'bar'&lt;/code&gt;, &lt;code&gt;baz&lt;/code&gt;)</source>
          <target state="translated">带有或不带引号的文本字符串（例如 &lt;code&gt;&quot;foo&quot;&lt;/code&gt; ， &lt;code&gt;'bar'&lt;/code&gt; ， &lt;code&gt;baz&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="6f8f8e9f767353d846d34ea5a451c83849c1b01b" translate="yes" xml:space="preserve">
          <source>then</source>
          <target state="translated">then</target>
        </trans-unit>
        <trans-unit id="784b0c5699caf287c4c10e51ab736c7db33f083d" translate="yes" xml:space="preserve">
          <source>to_lower_case</source>
          <target state="translated">to_lower_case</target>
        </trans-unit>
        <trans-unit id="6ca2b28d0016a783e948056dd014b3a18ac8044d" translate="yes" xml:space="preserve">
          <source>to_lower_case($string)</source>
          <target state="translated">to_lower_case($string)</target>
        </trans-unit>
        <trans-unit id="e6cddd58d526b31ea9c3de44358c3a4b0928eff2" translate="yes" xml:space="preserve">
          <source>to_upper_case</source>
          <target state="translated">to_upper_case</target>
        </trans-unit>
        <trans-unit id="92c4638b58036fab8b024d9f5c893bf14848139b" translate="yes" xml:space="preserve">
          <source>to_upper_case($string)</source>
          <target state="translated">to_upper_case($string)</target>
        </trans-unit>
        <trans-unit id="5301fefc4be67174f74e6b71ad0e693cfa9e08b9" translate="yes" xml:space="preserve">
          <source>transparentize</source>
          <target state="translated">transparentize</target>
        </trans-unit>
        <trans-unit id="d965446d704d591181f04588fd02b4e1f9bd2681" translate="yes" xml:space="preserve">
          <source>transparentize($color, $amount) Also known as: &lt;span id=&quot;fade_out-instance_method&quot;&gt;fade_out&lt;/span&gt;</source>
          <target state="translated">transparentize（$ color，$ amount）也称为：&lt;span id=&quot;fade_out-instance_method&quot;&gt;fade_out&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a55bbed6d69ed407ee020c8ea4932aee1d31bf0f" translate="yes" xml:space="preserve">
          <source>type_of</source>
          <target state="translated">type_of</target>
        </trans-unit>
        <trans-unit id="e91b16f481347515a280a7b54777e62fb5f88c56" translate="yes" xml:space="preserve">
          <source>type_of($value)</source>
          <target state="translated">type_of($value)</target>
        </trans-unit>
        <trans-unit id="4e93a407500afe6672140e9c41d6345b5641d311" translate="yes" xml:space="preserve">
          <source>unique_id</source>
          <target state="translated">unique_id</target>
        </trans-unit>
        <trans-unit id="0df9eea0bad5a55395db9ec290dfcf4a883d5d3e" translate="yes" xml:space="preserve">
          <source>unit</source>
          <target state="translated">unit</target>
        </trans-unit>
        <trans-unit id="ba0ca25ec56b4780353b05607057eeaef91474b1" translate="yes" xml:space="preserve">
          <source>unit($number)</source>
          <target state="translated">unit($number)</target>
        </trans-unit>
        <trans-unit id="fde4fbc4811960ddee8ae63d4172b277cae7a5f5" translate="yes" xml:space="preserve">
          <source>unitless</source>
          <target state="translated">unitless</target>
        </trans-unit>
        <trans-unit id="f009c404ef2c55f8ebfb893f7623ae2ee75120e5" translate="yes" xml:space="preserve">
          <source>unitless($number)</source>
          <target state="translated">unitless($number)</target>
        </trans-unit>
        <trans-unit id="3a3ba18672da162111fb95d1241e92df94145f05" translate="yes" xml:space="preserve">
          <source>unquote</source>
          <target state="translated">unquote</target>
        </trans-unit>
        <trans-unit id="1d0e40a39c57cc5a95f5058fe0512ffb6999daac" translate="yes" xml:space="preserve">
          <source>unquote($string)</source>
          <target state="translated">unquote($string)</target>
        </trans-unit>
        <trans-unit id="f0098f100c5c0132736e9593d53206299ed3f984" translate="yes" xml:space="preserve">
          <source>variable_exists</source>
          <target state="translated">variable_exists</target>
        </trans-unit>
        <trans-unit id="4787d89a5b4c7c620210cbdafa1fb990b6a0b73b" translate="yes" xml:space="preserve">
          <source>variable_exists($name)</source>
          <target state="translated">variable_exists($name)</target>
        </trans-unit>
        <trans-unit id="821eb74253ff5b3512f0a9a9385b98ad25d8b967" translate="yes" xml:space="preserve">
          <source>would all compile to</source>
          <target state="translated">皆为</target>
        </trans-unit>
        <trans-unit id="20ff756c76df61b4a681c9ab000baa5987c14066" translate="yes" xml:space="preserve">
          <source>would both import the file &lt;code&gt;foo.scss&lt;/code&gt;, whereas</source>
          <target state="translated">都将导入文件 &lt;code&gt;foo.scss&lt;/code&gt; ，而</target>
        </trans-unit>
        <trans-unit id="396678b99ce84e78543e622b44e8387f055bcc55" translate="yes" xml:space="preserve">
          <source>would compile to</source>
          <target state="translated">将编译为</target>
        </trans-unit>
        <trans-unit id="d9e5daf29acae97e1c5593ce09f0773d8f12d909" translate="yes" xml:space="preserve">
          <source>would import both the &lt;code&gt;rounded-corners&lt;/code&gt; and the &lt;code&gt;text-shadow&lt;/code&gt; files.</source>
          <target state="translated">会同时导入 &lt;code&gt;rounded-corners&lt;/code&gt; 和 &lt;code&gt;text-shadow&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="f13e27693c85aed522df8c3fcb0bb0110ca54e14" translate="yes" xml:space="preserve">
          <source>zip</source>
          <target state="translated">zip</target>
        </trans-unit>
        <trans-unit id="b26106fb91bcc3b7a2ad66a09ac9370066fe064d" translate="yes" xml:space="preserve">
          <source>zip($lists...)</source>
          <target state="translated">zip($lists...)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
