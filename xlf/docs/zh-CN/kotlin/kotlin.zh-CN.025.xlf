<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="kotlin">
    <body>
      <group id="kotlin">
        <trans-unit id="96cc0adbb4b7182534f77e31618367219cce24fb" translate="yes" xml:space="preserve">
          <source>SVGStringList</source>
          <target state="translated">SVGStringList</target>
        </trans-unit>
        <trans-unit id="dbd0f85b570b2e6cb96f48bcfa95b75709f5d9c7" translate="yes" xml:space="preserve">
          <source>SVGTests</source>
          <target state="translated">SVGTests</target>
        </trans-unit>
        <trans-unit id="73db65d727946903a60fb830bf93f19cff09feca" translate="yes" xml:space="preserve">
          <source>SVGTransform</source>
          <target state="translated">SVGTransform</target>
        </trans-unit>
        <trans-unit id="50a77c96703f19d3e21c2565c7bef13f1104b649" translate="yes" xml:space="preserve">
          <source>SVGTransformList</source>
          <target state="translated">SVGTransformList</target>
        </trans-unit>
        <trans-unit id="a00ead5aebead5cce77c59f5377fdf9dc6d6cef5" translate="yes" xml:space="preserve">
          <source>SVGURIReference</source>
          <target state="translated">SVGURIReference</target>
        </trans-unit>
        <trans-unit id="a96b5373b2add0692b9da4bb7efbd117f5655f5b" translate="yes" xml:space="preserve">
          <source>SVGUnitTypes</source>
          <target state="translated">SVGUnitTypes</target>
        </trans-unit>
        <trans-unit id="61b60095b917484c7e2e5672683057e8f6a66303" translate="yes" xml:space="preserve">
          <source>SVGZoomAndPan</source>
          <target state="translated">SVGZoomAndPan</target>
        </trans-unit>
        <trans-unit id="bbb1aa585c9e03b2c44704713e84f9f6f5f224cf" translate="yes" xml:space="preserve">
          <source>SYNCHRONIZED</source>
          <target state="translated">SYNCHRONIZED</target>
        </trans-unit>
        <trans-unit id="614df8dbc73c6c21e6f99cf5d8d09cb7a1f8e1c7" translate="yes" xml:space="preserve">
          <source>Sadly, Kotlin has inherited Java's limitation on generics: they are strictly a compile-time concept - the generic type information is &lt;em&gt;erased&lt;/em&gt; at runtime. Therefore, you can not say &lt;code&gt;T()&lt;/code&gt; to construct a new instance of a generic type; you can not at runtime check if an object is an instance of a generic type parameter; and if you try to cast between generic types, the compiler can't guarantee the correctness of it.</source>
          <target state="translated">可悲的是，Kotlin继承了Java对泛型的限制：严格来说，它们是一个编译时概念-泛型类型信息会在运行时&lt;em&gt;删除&lt;/em&gt;。因此，您不能说 &lt;code&gt;T()&lt;/code&gt; 构造泛型的新实例。您无法在运行时检查对象是否为通用类型参数的实例；并且如果您尝试在泛型类型之间进行转换，则编译器无法保证其正确性。</target>
        </trans-unit>
        <trans-unit id="bd1991ee28839ab911f3c0f74796e354ba930c67" translate="yes" xml:space="preserve">
          <source>Safe Calls</source>
          <target state="translated">安全呼叫</target>
        </trans-unit>
        <trans-unit id="156cc6875bb6df54a9cd7036f75735b35ec2ba37" translate="yes" xml:space="preserve">
          <source>Safe Casts</source>
          <target state="translated">安全浇注</target>
        </trans-unit>
        <trans-unit id="6018efd37eb740ca0ec00e5ec5acc3276f0387fb" translate="yes" xml:space="preserve">
          <source>Safe call operator</source>
          <target state="translated">安全呼叫运营商</target>
        </trans-unit>
        <trans-unit id="a9f3754fd176737446bb8466187176f508759a9b" translate="yes" xml:space="preserve">
          <source>Safe calls are useful in chains. For example, if Bob, an Employee, may be assigned to a Department (or not), that in turn may have another Employee as a department head, then to obtain the name of Bob's department head (if any), we write the following:</source>
          <target state="translated">安全呼叫在连锁中是有用的。例如,如果Bob,一个雇员,可能被分配到一个部门(或不),而这个部门又可能有另一个雇员作为部门主管,那么为了获得Bob的部门主管的名字(如果有的话),我们写下以下内容。</target>
        </trans-unit>
        <trans-unit id="966aa59c7450b291c4b250453d2462bf99f9e604" translate="yes" xml:space="preserve">
          <source>Safe mode checks if object is no longer used in passing worker, using memory-management specific algorithm (ARC implementation relies on trial deletion on object graph rooted in passed object), and throws an &lt;a href=&quot;../../kotlin/-illegal-state-exception/index#kotlin.IllegalStateException&quot;&gt;IllegalStateException&lt;/a&gt; if object graph rooted in transferred object is reachable by some other means,</source>
          <target state="translated">安全模式使用特定于内存管理的算法检查是否在传递的工作程序中不再使用对象（ARC实现依赖于对以传递的对象为根的对象图的尝试删除），并且如果某些人可以访问以传递的对象为根的对象图，则抛出&lt;a href=&quot;../../kotlin/-illegal-state-exception/index#kotlin.IllegalStateException&quot;&gt;IllegalStateException&lt;/a&gt;其他方式</target>
        </trans-unit>
        <trans-unit id="c19cc4ea964ba32c85f055c7833cf9088152ea1f" translate="yes" xml:space="preserve">
          <source>Same as for primitives, each of unsigned type has corresponding type that represents array, specialized for that unsigned type:</source>
          <target state="translated">和基元一样,每个无符号类型都有对应的类型,代表该无符号类型的数组。</target>
        </trans-unit>
        <trans-unit id="031c7b4b920d1195452edeaf34f89087ff67e169" translate="yes" xml:space="preserve">
          <source>Same as for signed integer arrays, they provide similar API to &lt;code&gt;Array&lt;/code&gt; class without boxing overhead.</source>
          <target state="translated">与有符号整数数组相同，它们提供与 &lt;code&gt;Array&lt;/code&gt; 类类似的API，而没有装箱开销。</target>
        </trans-unit>
        <trans-unit id="5266a2d634b1a2426245c1c34a13b11532b108db" translate="yes" xml:space="preserve">
          <source>Same for named objects:</source>
          <target state="translated">命名对象也一样。</target>
        </trans-unit>
        <trans-unit id="ebc6f4847f8d78964f85fb4e16bd713e286917e0" translate="yes" xml:space="preserve">
          <source>Sample projects</source>
          <target state="translated">示例项目</target>
        </trans-unit>
        <trans-unit id="61802d6ace0a202ff4d0478495ded15586e4530f" translate="yes" xml:space="preserve">
          <source>Satisfying the longstanding request, Kotlin 1.2 adds the &lt;code&gt;kotlin.math&lt;/code&gt; API for math operations that is common for JVM and JS and contains the following:</source>
          <target state="translated">为了满足长期的要求，Kotlin 1.2添加了用于数学运算的 &lt;code&gt;kotlin.math&lt;/code&gt; API，该API对JVM和JS来说是通用的，并且包含以下内容：</target>
        </trans-unit>
        <trans-unit id="50b5327838d4b6ae03d8aaed2a72dca6e69da509" translate="yes" xml:space="preserve">
          <source>Save the changes and run the application.</source>
          <target state="translated">保存更改并运行应用程序。</target>
        </trans-unit>
        <trans-unit id="26483ffc59e8f1047f34a909d3b8fd92382e949f" translate="yes" xml:space="preserve">
          <source>Save your changes to the file.</source>
          <target state="translated">保存你对文件的修改。</target>
        </trans-unit>
        <trans-unit id="0943c7b561572758ad2d8a0cadc36907a964dc92" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+java.util.Date%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; to be executed at the specified &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+java.util.Date%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Ftime&quot;&gt;time&lt;/a&gt;.</source>
          <target state="translated">计划要在指定&lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+java.util.Date%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Ftime&quot;&gt;时间&lt;/a&gt;执行的&lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+java.util.Date%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;动作&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b01fc548c716e3ffe235b52e80c7a9a5cd93fcca" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; to be executed periodically, starting at the specified &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Ftime&quot;&gt;time&lt;/a&gt; and with the interval of &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;period&lt;/a&gt; milliseconds between the end of the previous task and the start of the next one.</source>
          <target state="translated">日程表的一个&lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;动作&lt;/a&gt;被周期性地执行，开始在指定的&lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Ftime&quot;&gt;时间&lt;/a&gt;，并与间隔&lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;期间&lt;/a&gt;毫秒前一个任务的结束和下一个的开始之间。</target>
        </trans-unit>
        <trans-unit id="11314f455c67f6bb70dfbb13dc028bb3264a0b16" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; to be executed after the specified &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fdelay&quot;&gt;delay&lt;/a&gt; (expressed in milliseconds).</source>
          <target state="translated">计划在指定的&lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fdelay&quot;&gt;延迟&lt;/a&gt;（以毫秒为单位）后执行的&lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;操作&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2ee5813386f20d7ce29a786b10be36f337d23c30" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; to be executed periodically, starting after the specified &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fdelay&quot;&gt;delay&lt;/a&gt; (expressed in milliseconds) and with the interval of &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;period&lt;/a&gt; milliseconds between the end of the previous task and the start of the next one.</source>
          <target state="translated">日程表的一个&lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;动作&lt;/a&gt;被周期性地执行，在指定之后开始&lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fdelay&quot;&gt;的延迟&lt;/a&gt;（以毫秒为单位表示），随着间隔&lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;期间&lt;/a&gt;毫秒前一个任务的结束和下一个的开始之间。</target>
        </trans-unit>
        <trans-unit id="1ecfad5b2cbd7ee66af5fb7291019635c5a9eb34" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20java.util.Date,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; to be executed at the specified &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20java.util.Date,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/time&quot;&gt;time&lt;/a&gt;.</source>
          <target state="translated">计划要在指定&lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20java.util.Date,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/time&quot;&gt;时间&lt;/a&gt;执行的&lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20java.util.Date,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;动作&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="abcdbb04331ea0f330fe7f79d7573804a9aaf6a0" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; to be executed periodically, starting at the specified &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/time&quot;&gt;time&lt;/a&gt; and with the interval of &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;period&lt;/a&gt; milliseconds between the end of the previous task and the start of the next one.</source>
          <target state="translated">日程表的一个&lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;动作&lt;/a&gt;被周期性地执行，开始在指定的&lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/time&quot;&gt;时间&lt;/a&gt;，并与间隔&lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;期间&lt;/a&gt;毫秒前一个任务的结束和下一个的开始之间。</target>
        </trans-unit>
        <trans-unit id="beb03832c52bfff85f109ef27c2c3cec922a9a07" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; to be executed after the specified &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/delay&quot;&gt;delay&lt;/a&gt; (expressed in milliseconds).</source>
          <target state="translated">计划在指定的&lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/delay&quot;&gt;延迟&lt;/a&gt;（以毫秒为单位）后执行的&lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;操作&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dce63a5c72e5b01f125a3ba36acfa4d1bfdd6d82" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; to be executed periodically, starting after the specified &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/delay&quot;&gt;delay&lt;/a&gt; (expressed in milliseconds) and with the interval of &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;period&lt;/a&gt; milliseconds between the end of the previous task and the start of the next one.</source>
          <target state="translated">日程表的一个&lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;动作&lt;/a&gt;被周期性地执行，在指定之后开始&lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/delay&quot;&gt;的延迟&lt;/a&gt;（以毫秒为单位表示），随着间隔&lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;期间&lt;/a&gt;毫秒前一个任务的结束和下一个的开始之间。</target>
        </trans-unit>
        <trans-unit id="854ed8dc6977e5dc8514b171bf299dab9be61297" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; to be executed periodically, starting at the specified &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Ftime&quot;&gt;time&lt;/a&gt; and with the interval of &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;period&lt;/a&gt; milliseconds between the start of the previous task and the start of the next one.</source>
          <target state="translated">日程表的一个&lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;动作&lt;/a&gt;被周期性地执行，开始在指定的&lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Ftime&quot;&gt;时间&lt;/a&gt;，并与间隔&lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;期间&lt;/a&gt;毫秒前一个任务的开始和下一个的开始之间。</target>
        </trans-unit>
        <trans-unit id="aae2026484b67969b7af32af111d42477789a200" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; to be executed periodically, starting after the specified &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fdelay&quot;&gt;delay&lt;/a&gt; (expressed in milliseconds) and with the interval of &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;period&lt;/a&gt; milliseconds between the start of the previous task and the start of the next one.</source>
          <target state="translated">日程表的一个&lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;动作&lt;/a&gt;被周期性地执行，在指定之后开始&lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fdelay&quot;&gt;的延迟&lt;/a&gt;（以毫秒为单位表示），随着间隔&lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;期间&lt;/a&gt;毫秒前一个任务的开始和下一个的开始之间。</target>
        </trans-unit>
        <trans-unit id="78344eb3dcd3c1860c7ad11d57f12022b106486e" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; to be executed periodically, starting at the specified &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/time&quot;&gt;time&lt;/a&gt; and with the interval of &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;period&lt;/a&gt; milliseconds between the start of the previous task and the start of the next one.</source>
          <target state="translated">日程表的一个&lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;动作&lt;/a&gt;被周期性地执行，开始在指定的&lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/time&quot;&gt;时间&lt;/a&gt;，并与间隔&lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;期间&lt;/a&gt;毫秒前一个任务的开始和下一个的开始之间。</target>
        </trans-unit>
        <trans-unit id="6d1359e7d08528014628664ba45c6aef5915bd37" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; to be executed periodically, starting after the specified &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/delay&quot;&gt;delay&lt;/a&gt; (expressed in milliseconds) and with the interval of &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;period&lt;/a&gt; milliseconds between the start of the previous task and the start of the next one.</source>
          <target state="translated">日程表的一个&lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;动作&lt;/a&gt;被周期性地执行，在指定之后开始&lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/delay&quot;&gt;的延迟&lt;/a&gt;（以毫秒为单位表示），随着间隔&lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;期间&lt;/a&gt;毫秒前一个任务的开始和下一个的开始之间。</target>
        </trans-unit>
        <trans-unit id="0624fdd2427d042e3b66e82dc68cafe409477c29" translate="yes" xml:space="preserve">
          <source>Scope Functions</source>
          <target state="translated">范围功能</target>
        </trans-unit>
        <trans-unit id="578d9d905aeb1b3295b55af57220d2c4c8b15a3c" translate="yes" xml:space="preserve">
          <source>Scope builder</source>
          <target state="translated">范围建设者</target>
        </trans-unit>
        <trans-unit id="bdaf1c2c176cc5a56291b32bb9a9f31255883e4f" translate="yes" xml:space="preserve">
          <source>Scope control for implicit receivers in DSLs</source>
          <target state="translated">DSL中隐式接收器的范围控制。</target>
        </trans-unit>
        <trans-unit id="de8b8a16a2836f91a51e7b2ba6ade468fa5c4cb3" translate="yes" xml:space="preserve">
          <source>Scope control: @DslMarker (since 1.1)</source>
          <target state="translated">范围控制。@DslMarker(自1.1起)</target>
        </trans-unit>
        <trans-unit id="7a18b7c5e8ccabd019ef2c6d15d4663e3e91f3a1" translate="yes" xml:space="preserve">
          <source>Scope of Extensions</source>
          <target state="translated">延长期限的范围</target>
        </trans-unit>
        <trans-unit id="c37653ba0df9d91464090f9a5a506da5c714f757" translate="yes" xml:space="preserve">
          <source>Scope of extensions</source>
          <target state="translated">扩展的范围</target>
        </trans-unit>
        <trans-unit id="a3c7ea6a417d9f9119dee10e05101756a378dca6" translate="yes" xml:space="preserve">
          <source>Scope of variable, introduced in &lt;em&gt;when&lt;/em&gt; subject, is restricted to &lt;em&gt;when&lt;/em&gt; body.</source>
          <target state="translated">变量的范围是在&lt;em&gt;何时&lt;/em&gt;主体中引入的，限于&lt;em&gt;何时&lt;/em&gt;主体。</target>
        </trans-unit>
        <trans-unit id="a6d3d0c4e1a858a3fa9f5a4df0f73418117c4ee1" translate="yes" xml:space="preserve">
          <source>Scope-local pointers</source>
          <target state="translated">作用域-局部指针</target>
        </trans-unit>
        <trans-unit id="97f1a86f7ab5f0be4ff5d3e7432bd560cdd19728" translate="yes" xml:space="preserve">
          <source>Scoped resource usage</source>
          <target state="translated">范围内的资源使用情况</target>
        </trans-unit>
        <trans-unit id="528f1006f9e96ec54005f86bcd6d69843f8d623a" translate="yes" xml:space="preserve">
          <source>Scopes and naming</source>
          <target state="translated">范围和命名</target>
        </trans-unit>
        <trans-unit id="eed3742ad9a5e159197ed1bcf37ebfc8ca1dd07d" translate="yes" xml:space="preserve">
          <source>Scratches</source>
          <target state="translated">Scratches</target>
        </trans-unit>
        <trans-unit id="1e6860490b87b4d7d724681713dc41fcc73632bb" translate="yes" xml:space="preserve">
          <source>Scratches and worksheets</source>
          <target state="translated">划痕和工作表</target>
        </trans-unit>
        <trans-unit id="42b44b1f9e701ce8c27a0c095f2bf8c887d20641" translate="yes" xml:space="preserve">
          <source>Scratches let us create code drafts in the same IDE window as our project and run them on the fly. Scratches are not tied to projects; you can access and run all your scratches from any IntelliJ IDEA window on your OS.</source>
          <target state="translated">通过Scratch,我们可以在与项目相同的IDE窗口中创建代码草稿,并在运行中运行它们。Scratches不与项目挂钩;您可以从操作系统上的任何IntelliJ IDEA窗口访问和运行所有的scratches。</target>
        </trans-unit>
        <trans-unit id="cd6f6336f3f0e72cac9c322f2f07020d0a59b802" translate="yes" xml:space="preserve">
          <source>Scratches support</source>
          <target state="translated">支持划痕</target>
        </trans-unit>
        <trans-unit id="5cc847f94fce70460ef24ebed241931a778ccc62" translate="yes" xml:space="preserve">
          <source>Screen</source>
          <target state="translated">Screen</target>
        </trans-unit>
        <trans-unit id="90fefaf556542fb0f41ffdf64d5b534143f84b91" translate="yes" xml:space="preserve">
          <source>Script definition template classes. Use fully qualified class names and separate them with commas (&lt;strong&gt;,&lt;/strong&gt;).</source>
          <target state="translated">脚本定义模板类。使用完全合格的类名，并用逗号（&lt;strong&gt;，&lt;/strong&gt;）分隔。</target>
        </trans-unit>
        <trans-unit id="fc494af5ebddc3d1b12371d16f5f2468bcf4fdec" translate="yes" xml:space="preserve">
          <source>Scripting and REPL</source>
          <target state="translated">脚本和REPL</target>
        </trans-unit>
        <trans-unit id="cacf28b058e1a691f7edcc30d7817fbb50ce6945" translate="yes" xml:space="preserve">
          <source>Scripting update</source>
          <target state="translated">脚本更新</target>
        </trans-unit>
        <trans-unit id="27390b06513a3570fe709ad78946223c802bab9b" translate="yes" xml:space="preserve">
          <source>ScrollBehavior</source>
          <target state="translated">ScrollBehavior</target>
        </trans-unit>
        <trans-unit id="dcbe9652479d39fcd78e5f694c8801c01888a2bf" translate="yes" xml:space="preserve">
          <source>ScrollIntoViewOptions</source>
          <target state="translated">ScrollIntoViewOptions</target>
        </trans-unit>
        <trans-unit id="934ee2ddfa0881ae4cc6128bd63327c8c114e325" translate="yes" xml:space="preserve">
          <source>ScrollLogicalPosition</source>
          <target state="translated">ScrollLogicalPosition</target>
        </trans-unit>
        <trans-unit id="4cd79f1501a2a106cf2a19d68ab36f3b3241f365" translate="yes" xml:space="preserve">
          <source>ScrollOptions</source>
          <target state="translated">ScrollOptions</target>
        </trans-unit>
        <trans-unit id="3f4d6fe061dee45ce6beee17f849ee6e28ca95f1" translate="yes" xml:space="preserve">
          <source>ScrollRestoration</source>
          <target state="translated">ScrollRestoration</target>
        </trans-unit>
        <trans-unit id="5c12f863cb347ffadafc9a0e098ea48cc7c7eab1" translate="yes" xml:space="preserve">
          <source>ScrollToOptions</source>
          <target state="translated">ScrollToOptions</target>
        </trans-unit>
        <trans-unit id="ec43540170bebc62424368915c33dc1d0e8212a9" translate="yes" xml:space="preserve">
          <source>Sealed Classes</source>
          <target state="translated">封闭式班级</target>
        </trans-unit>
        <trans-unit id="2fe7b5a18fb68cd5f6f0da6e2eddccc8f49e2f73" translate="yes" xml:space="preserve">
          <source>Sealed and data classes</source>
          <target state="translated">密封类和数据类</target>
        </trans-unit>
        <trans-unit id="283d1e464991ba1df5720554a5fe2e8a9f70d4e0" translate="yes" xml:space="preserve">
          <source>Sealed classes</source>
          <target state="translated">封闭式班级</target>
        </trans-unit>
        <trans-unit id="0933e94c0ae168db00288a360a7d11b0a8916c99" translate="yes" xml:space="preserve">
          <source>Sealed classes are not allowed to have non-&lt;em&gt;private&lt;/em&gt; constructors (their constructors are &lt;em&gt;private&lt;/em&gt; by default).</source>
          <target state="translated">密封的类不允许具有非&lt;em&gt;私有的&lt;/em&gt;构造函数（默认情况下，它们的构造函数是&lt;em&gt;私有&lt;/em&gt;的）。</target>
        </trans-unit>
        <trans-unit id="1450a538096c14834e487a1a74f69ce32970cbd9" translate="yes" xml:space="preserve">
          <source>Sealed classes are used for representing restricted class hierarchies, when a value can have one of the types from a limited set, but cannot have any other type. They are, in a sense, an extension of enum classes: the set of values for an enum type is also restricted, but each enum constant exists only as a single instance, whereas a subclass of a sealed class can have multiple instances which can contain state.</source>
          <target state="translated">密封类用于表示受限类的层次结构,即一个值可以拥有有限集合中的一种类型,但不能拥有任何其他类型。从某种意义上说,它们是枚举类的扩展:枚举类型的值集也是受限制的,但每个枚举常量只作为一个实例存在,而一个密封类的子类可以有多个实例,其中可以包含状态。</target>
        </trans-unit>
        <trans-unit id="8006d1752be56412c26763fa327bd999a69458a1" translate="yes" xml:space="preserve">
          <source>Sealed classes in reflection</source>
          <target state="translated">反思中的密封班级</target>
        </trans-unit>
        <trans-unit id="69a3d949ccfc86b43db4e889e435ad9861a2ec1f" translate="yes" xml:space="preserve">
          <source>Search for class files in the specified paths. Separate elements of the classpath with system path separators (&lt;strong&gt;;&lt;/strong&gt; on Windows, &lt;strong&gt;:&lt;/strong&gt; on macOS/Linux). The classpath can contain file and directory paths, ZIP, or JAR files.</source>
          <target state="translated">在指定的路径中搜索类文件。用系统路径分隔类路径的分开的元件（&lt;strong&gt;;&lt;/strong&gt;在Windows， &lt;strong&gt;：&lt;/strong&gt;在MacOS / Linux）的。类路径可以包含文件和目录路径，ZIP或JAR文件。</target>
        </trans-unit>
        <trans-unit id="e37289ab149b8fd1490f324ea8883e6912d77447" translate="yes" xml:space="preserve">
          <source>Search paths for libraries added in the Kotlin/Native module in this way are obtained from properties of the Xcode projects configured by CocoaPods. Thus if the module uses CocoaPods libraries, it can be build &lt;strong&gt;only&lt;/strong&gt;&lt;strong&gt;from&lt;/strong&gt;&lt;strong&gt;Xcode&lt;/strong&gt;.</source>
          <target state="translated">从CocoaPods配置的Xcode项目的属性中获得以这种方式添加到Kotlin / Native模块中的库的搜索路径。因此，如果模块使用CocoaPods库，则&lt;strong&gt;只能&lt;/strong&gt;&lt;strong&gt;从&lt;/strong&gt;&lt;strong&gt;Xcode&lt;/strong&gt;构建。</target>
        </trans-unit>
        <trans-unit id="f7b381c62df37570cdf424d4ad3b5dd03475dcea" translate="yes" xml:space="preserve">
          <source>Searches for the specified element in this set.</source>
          <target state="translated">在此集合中搜索指定的元素。</target>
        </trans-unit>
        <trans-unit id="a0e155904628c91b4ae3286323b547eead84bdd4" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+java.util.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted according to the specified &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+java.util.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+java.util.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;元素&lt;/a&gt;。期望该数组根据指定的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+java.util.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;比较器&lt;/a&gt;进行排序，否则结果不确定。</target>
        </trans-unit>
        <trans-unit id="290e8a260e716db7327ee892dae2f04208af4347" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="32436b6e0db9570146d7ba448ba30967830f5018" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.ByteArray%2C+kotlin.Byte%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.ByteArray%2C+kotlin.Byte%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="35dba338afbb495b0a3fee48205b47c02d6cd17d" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.CharArray%2C+kotlin.Char%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.CharArray%2C+kotlin.Char%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="6a989bccedd50f460fec83c984ea086b5374cda2" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.DoubleArray%2C+kotlin.Double%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.DoubleArray%2C+kotlin.Double%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="4c8fe4f5da17ffe178b1da2e583954ae4db2fe02" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.FloatArray%2C+kotlin.Float%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.FloatArray%2C+kotlin.Float%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="da92a01c9fda1cc311a2b96f412edafd73b5d9ce" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.IntArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.IntArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="9b2d8c7078982603d4849627b2da7584b90f4aef" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.LongArray%2C+kotlin.Long%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.LongArray%2C+kotlin.Long%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="8233d1849f894965e253132c3f22ce05a679e787" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.ShortArray%2C+kotlin.Short%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.ShortArray%2C+kotlin.Short%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="98a42356a2fc1524a68749359c93c7974bced06d" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.UByteArray%2C+kotlin.UByte%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.UByteArray%2C+kotlin.UByte%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="b15b28923f6f04089e5f10f0f8358034bc1a1a4b" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.UIntArray%2C+kotlin.UInt%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.UIntArray%2C+kotlin.UInt%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="38ce4f5ae8801b01f36ab3663b86bb3e75d6d968" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.ULongArray%2C+kotlin.ULong%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.ULongArray%2C+kotlin.ULong%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="a34eb7ed0c21feb27df0998cef9c890f0f9c50df" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.UShortArray%2C+kotlin.UShort%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.UShortArray%2C+kotlin.UShort%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="8b65b9654b757dfe7b562973acd383e219516b05" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20java.util.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted according to the specified &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20java.util.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt;, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20java.util.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;元素&lt;/a&gt;。该数组应根据指定的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20java.util.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;比较器&lt;/a&gt;进行排序，否则结果不确定。</target>
        </trans-unit>
        <trans-unit id="172c1b2c3c91b08b1b92612a3a176f1e654bb599" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="208229a273e1f273a9b7a3dec32269ba6d7fbb8f" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.ByteArray,%20kotlin.Byte,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.ByteArray,%20kotlin.Byte,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="a1685fc27c49c67545d45d08837650f24ed74452" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.CharArray,%20kotlin.Char,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.CharArray,%20kotlin.Char,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="81722343aea65bbcada90dead76c02f5382fe1eb" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.DoubleArray,%20kotlin.Double,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.DoubleArray,%20kotlin.Double,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="5601b1518202867a8151751863fe6059f2dc4a18" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.FloatArray,%20kotlin.Float,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.FloatArray,%20kotlin.Float,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="711dbbdbe887baf9223b40bd00153d873e0e47c5" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.IntArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.IntArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="3c4da0a6500b232b3691bc97479a9a498a8e6cf0" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.LongArray,%20kotlin.Long,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.LongArray,%20kotlin.Long,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="b5df879c89f080b0dd7812f7399e0a06b542ac5c" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.ShortArray,%20kotlin.Short,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.ShortArray,%20kotlin.Short,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="0c2e52144683b6a08199e94c5fca2df35e2039d7" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.UByteArray,%20kotlin.UByte,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.UByteArray,%20kotlin.UByte,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="b231d4078642d7ddd64b1795cfb07cf71f737bfb" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.UIntArray,%20kotlin.UInt,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.UIntArray,%20kotlin.UInt,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="766e5e1d02d3fb8be9c197d17f0951b8dc0ce6fa" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.ULongArray,%20kotlin.ULong,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.ULongArray,%20kotlin.ULong,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="5da56c90ddf0e73a477026f3b3fb477285c71edf" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.UShortArray,%20kotlin.UShort,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.UShortArray,%20kotlin.UShort,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="21a995506be2a3f4f68fb294fc4196dcd093a45b" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+java.util.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted according to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+java.util.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+java.util.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;元素&lt;/a&gt;。期望该数组根据指定的&lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+java.util.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;比较器&lt;/a&gt;进行排序，否则结果不确定。</target>
        </trans-unit>
        <trans-unit id="afd7b9faa0ee57152595e952895219afe610e6b6" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="138a21c025d824bdcc6e5ebffea2a8c48d7c1cf2" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20java.util.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted according to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20java.util.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt;, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20java.util.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;元素&lt;/a&gt;。该数组应根据指定的&lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20java.util.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;比较器&lt;/a&gt;进行排序，否则结果不确定。</target>
        </trans-unit>
        <trans-unit id="0d8418eac91c114d8822322a651bd6c3cebfbbe0" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在数组或数组范围内搜索提供的&lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;元素&lt;/a&gt;。该数组应该被排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="ac08cbdac0791fdddb3eff14b0ee78f0339f0b9d" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for an element for which &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearch.T%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function returns zero using the binary search algorithm. The list is expected to be sorted into ascending order according to the provided &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearch.T%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt;, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在此列表或其范围内搜索&lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearch.T%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;比较&lt;/a&gt;功能返回零的元素。期望根据提供的&lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearch.T%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;比较&lt;/a&gt;将列表按升序排序，否则结果不确定。</target>
        </trans-unit>
        <trans-unit id="a12b773301b3c59bfccfe4d40f79324c71d5747a" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for an element for which &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearch.T%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function returns zero using the binary search algorithm. The list is expected to be sorted into ascending order according to the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearch.T%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt;, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在此列表或其范围内搜索&lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearch.T%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;比较&lt;/a&gt;功能返回零的元素。期望根据提供的&lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearch.T%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;比较&lt;/a&gt;将列表按升序排序，否则结果不确定。</target>
        </trans-unit>
        <trans-unit id="b4d8e8c3188c0cfbbe28544ddcf06c5d4196b4d9" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for an element for which the given &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearch.T,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function returns zero using the binary search algorithm.</source>
          <target state="translated">使用二进制搜索算法在此列表或其范围内搜索给定&lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearch.T,%20kotlin.Int)))/comparison&quot;&gt;比较&lt;/a&gt;函数返回零的元素。</target>
        </trans-unit>
        <trans-unit id="e7521243bd3483add004abe43f92d3e161af732b" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for an element for which the given &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearch.T,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function returns zero using the binary search algorithm.</source>
          <target state="translated">使用二进制搜索算法在此列表或其范围内搜索给定&lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearch.T,%20kotlin.Int)))/comparison&quot;&gt;比较&lt;/a&gt;函数返回零的元素。</target>
        </trans-unit>
        <trans-unit id="aa99a3299c671573dd13fd8f2f8528c837ca1867" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for an element having the key returned by the specified &lt;a href=&quot;../binary-search-by#kotlin.collections%24binarySearchBy%28kotlin.collections.List%28%28kotlin.collections.binarySearchBy.T%29%29%2C+kotlin.collections.binarySearchBy.K%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearchBy.T%2C+kotlin.collections.binarySearchBy.K%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function equal to the provided &lt;a href=&quot;../binary-search-by#kotlin.collections%24binarySearchBy%28kotlin.collections.List%28%28kotlin.collections.binarySearchBy.T%29%29%2C+kotlin.collections.binarySearchBy.K%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearchBy.T%2C+kotlin.collections.binarySearchBy.K%29%29%29%2Fkey&quot;&gt;key&lt;/a&gt; value using the binary search algorithm. The list is expected to be sorted into ascending order according to the Comparable natural ordering of keys of its elements. otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在此列表或其范围内搜索具有由指定&lt;a href=&quot;../binary-search-by#kotlin.collections%24binarySearchBy%28kotlin.collections.List%28%28kotlin.collections.binarySearchBy.T%29%29%2C+kotlin.collections.binarySearchBy.K%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearchBy.T%2C+kotlin.collections.binarySearchBy.K%29%29%29%2Fselector&quot;&gt;选择器&lt;/a&gt;函数返回的键等于提供的&lt;a href=&quot;../binary-search-by#kotlin.collections%24binarySearchBy%28kotlin.collections.List%28%28kotlin.collections.binarySearchBy.T%29%29%2C+kotlin.collections.binarySearchBy.K%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearchBy.T%2C+kotlin.collections.binarySearchBy.K%29%29%29%2Fkey&quot;&gt;键值&lt;/a&gt;的元素。预计该列表将根据其元素键的可比自然顺序以升序排序。否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="0f9ce46a44ee7bef83394d3c8cd839487191ee59" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for an element having the key returned by the specified &lt;a href=&quot;../binary-search-by#kotlin.collections%24binarySearchBy(kotlin.collections.List((kotlin.collections.binarySearchBy.T)),%20kotlin.collections.binarySearchBy.K?,%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearchBy.T,%20kotlin.collections.binarySearchBy.K?)))/selector&quot;&gt;selector&lt;/a&gt; function equal to the provided &lt;a href=&quot;../binary-search-by#kotlin.collections%24binarySearchBy(kotlin.collections.List((kotlin.collections.binarySearchBy.T)),%20kotlin.collections.binarySearchBy.K?,%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearchBy.T,%20kotlin.collections.binarySearchBy.K?)))/key&quot;&gt;key&lt;/a&gt; value using the binary search algorithm. The list is expected to be sorted into ascending order according to the Comparable natural ordering of keys of its elements. otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在此列表或其范围中搜索具有由指定&lt;a href=&quot;../binary-search-by#kotlin.collections%24binarySearchBy(kotlin.collections.List((kotlin.collections.binarySearchBy.T)),%20kotlin.collections.binarySearchBy.K?,%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearchBy.T,%20kotlin.collections.binarySearchBy.K?)))/selector&quot;&gt;选择器&lt;/a&gt;函数返回的键等于提供的&lt;a href=&quot;../binary-search-by#kotlin.collections%24binarySearchBy(kotlin.collections.List((kotlin.collections.binarySearchBy.T)),%20kotlin.collections.binarySearchBy.K?,%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearchBy.T,%20kotlin.collections.binarySearchBy.K?)))/key&quot;&gt;键值&lt;/a&gt;的元素。预计该列表将根据其元素键的可比自然顺序以升序排序。否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="ff73b47d31632246c6429f92dc75d01803e096bf" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for an element having the key returned by the specified &lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy%28kotlin.collections.List%28%28kotlin.collections.binarySearchBy.T%29%29%2C+kotlin.collections.binarySearchBy.K%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearchBy.T%2C+kotlin.collections.binarySearchBy.K%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function equal to the provided &lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy%28kotlin.collections.List%28%28kotlin.collections.binarySearchBy.T%29%29%2C+kotlin.collections.binarySearchBy.K%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearchBy.T%2C+kotlin.collections.binarySearchBy.K%29%29%29%2Fkey&quot;&gt;key&lt;/a&gt; value using the binary search algorithm. The list is expected to be sorted into ascending order according to the Comparable natural ordering of keys of its elements. otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在此列表或其范围内搜索具有由指定&lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy%28kotlin.collections.List%28%28kotlin.collections.binarySearchBy.T%29%29%2C+kotlin.collections.binarySearchBy.K%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearchBy.T%2C+kotlin.collections.binarySearchBy.K%29%29%29%2Fselector&quot;&gt;选择器&lt;/a&gt;函数返回的键等于提供的&lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy%28kotlin.collections.List%28%28kotlin.collections.binarySearchBy.T%29%29%2C+kotlin.collections.binarySearchBy.K%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearchBy.T%2C+kotlin.collections.binarySearchBy.K%29%29%29%2Fkey&quot;&gt;键值&lt;/a&gt;的元素。预计该列表将根据其元素键的可比自然顺序以升序排序。否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="f97f502c4471174a07a09380a5303b6fdff50a94" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for an element having the key returned by the specified &lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy(kotlin.collections.List((kotlin.collections.binarySearchBy.T)),%20kotlin.collections.binarySearchBy.K?,%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearchBy.T,%20kotlin.collections.binarySearchBy.K?)))/selector&quot;&gt;selector&lt;/a&gt; function equal to the provided &lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy(kotlin.collections.List((kotlin.collections.binarySearchBy.T)),%20kotlin.collections.binarySearchBy.K?,%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearchBy.T,%20kotlin.collections.binarySearchBy.K?)))/key&quot;&gt;key&lt;/a&gt; value using the binary search algorithm. The list is expected to be sorted into ascending order according to the Comparable natural ordering of keys of its elements. otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在此列表或其范围中搜索具有由指定&lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy(kotlin.collections.List((kotlin.collections.binarySearchBy.T)),%20kotlin.collections.binarySearchBy.K?,%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearchBy.T,%20kotlin.collections.binarySearchBy.K?)))/selector&quot;&gt;选择器&lt;/a&gt;函数返回的键等于提供的&lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy(kotlin.collections.List((kotlin.collections.binarySearchBy.T)),%20kotlin.collections.binarySearchBy.K?,%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearchBy.T,%20kotlin.collections.binarySearchBy.K?)))/key&quot;&gt;键值&lt;/a&gt;的元素。预计该列表将根据其元素键的可比自然顺序以升序排序。否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="b8c90155d71b1d5e676d2bf69cb0ebe47fe33198" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for the provided &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The list is expected to be sorted into ascending order according to the specified &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在此列表或其范围内搜索提供的&lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;元素&lt;/a&gt;。该列表应根据指定的&lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;比较器&lt;/a&gt;升序排列，否则结果不确定。</target>
        </trans-unit>
        <trans-unit id="4828bed591fb431643e0a003aeb6081854e0de78" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for the provided &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The list is expected to be sorted into ascending order according to the Comparable natural ordering of its elements, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在此列表或其范围内搜索提供的&lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;元素&lt;/a&gt;。预期该列表将根据其元素的可比自然顺序以升序排序，否则结果不确定。</target>
        </trans-unit>
        <trans-unit id="94a25e243789c157aae91bf65fbab646f46083df" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for the provided &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The list is expected to be sorted into ascending order according to the specified &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt;, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在此列表或其范围内搜索提供的&lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;元素&lt;/a&gt;。该列表应根据指定的&lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;比较器&lt;/a&gt;升序排序，否则结果不确定。</target>
        </trans-unit>
        <trans-unit id="e11720fc6bfa5af236f5b984ea8be1135cb12ab6" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for the provided &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T?)),%20kotlin.collections.binarySearch.T?,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The list is expected to be sorted into ascending order according to the Comparable natural ordering of its elements, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在此列表或其范围内搜索提供的&lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T?)),%20kotlin.collections.binarySearch.T?,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;元素&lt;/a&gt;。预期该列表将根据其元素的可比自然顺序以升序排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="f5eaf2f3013486a1bf776e47151f79e9ff0bdc24" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The list is expected to be sorted into ascending order according to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在此列表或其范围内搜索提供的&lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;元素&lt;/a&gt;。该列表应根据指定的&lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;比较器&lt;/a&gt;升序排列，否则结果不确定。</target>
        </trans-unit>
        <trans-unit id="58beecb82fb00ba9003803dd474114c838b212a6" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The list is expected to be sorted into ascending order according to the Comparable natural ordering of its elements, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在此列表或其范围内搜索提供的&lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;元素&lt;/a&gt;。预期该列表将根据其元素的可比自然顺序以升序排序，否则结果不确定。</target>
        </trans-unit>
        <trans-unit id="3ad10097b382c0b5ae463dfe7f3937285f41b299" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The list is expected to be sorted into ascending order according to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt;, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在此列表或其范围内搜索提供的&lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;元素&lt;/a&gt;。该列表应根据指定的&lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;比较器&lt;/a&gt;升序排序，否则结果不确定。</target>
        </trans-unit>
        <trans-unit id="e050ba4b8a15e2ce6ed2db4aef72faf98aee8f1b" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T?)),%20kotlin.collections.binarySearch.T?,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The list is expected to be sorted into ascending order according to the Comparable natural ordering of its elements, otherwise the result is undefined.</source>
          <target state="translated">使用二进制搜索算法在此列表或其范围内搜索提供的&lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T?)),%20kotlin.collections.binarySearch.T?,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;元素&lt;/a&gt;。预期该列表将根据其元素的可比自然顺序以升序排序，否则结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="d95aec9d6ab7d91b52bb78f16150beb3b6b1073e" translate="yes" xml:space="preserve">
          <source>Second value.</source>
          <target state="translated">第二个数值:</target>
        </trans-unit>
        <trans-unit id="29f551e9571570ec897249c876759cd9ed415d56" translate="yes" xml:space="preserve">
          <source>Secondary Constructors</source>
          <target state="translated">二级建造师</target>
        </trans-unit>
        <trans-unit id="d4a404bdc75bfb5e190100e5dc35001e7e33fa7a" translate="yes" xml:space="preserve">
          <source>Secondary constructors</source>
          <target state="translated">二级建造者</target>
        </trans-unit>
        <trans-unit id="020f017613b21165fbe56a9d4a71c300bd412724" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#flow-cancellation-checks&quot;&gt;Flow cancellation checks&lt;/a&gt; section for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;#flow-cancellation-checks&quot;&gt;流量取消检查&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="132cf7b279a03fe265ff92246a6376b881bf28a0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../-contract-builder/calls-in-place&quot;&gt;ContractBuilder.callsInPlace&lt;/a&gt; for the details of the call-in-place function contract.</source>
          <target state="translated">有关就地调用功能合同的详细信息，请参见&lt;a href=&quot;../-contract-builder/calls-in-place&quot;&gt;ContractBuilder.callsInPlace&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fa59c08b1cd4ad0c7fe4dab4d9693e8d90f1b7c9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;basic-types#string-templates&quot;&gt;String templates&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;basic-types#string-templates&quot;&gt;字符串模板&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7f8c0b5b1f472754e2583d323d7fb292fb40553d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;basic-types#string-templates&quot;&gt;String templates&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;basic-types#string-templates&quot;&gt;字符串模板&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8f8176ea3dfc7a2d7972fa8cbcaf12cbeec6b548" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;basic-types#unsigned-integers&quot;&gt;reference&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;basic-types#unsigned-integers&quot;&gt;参考&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="661cf18a1268814cbcef108aaf358e72333b0829" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;c_interop&quot;&gt;INTEROP.md&lt;/a&gt; for an example case where the library uses some plain C features (e.g. unsafe pointers, structs etc.).</source>
          <target state="translated">有关库使用某些普通C功能（例如，不安全的指针，结构等）的示例情况，请参见&lt;a href=&quot;c_interop&quot;&gt;INTEROP.md&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="356b070138822abfa47db60df37ecf9cf278f031" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;classes&quot;&gt;Classes&lt;/a&gt; and &lt;a href=&quot;typecasts&quot;&gt;Type casts&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;classes&quot;&gt;类&lt;/a&gt;和&lt;a href=&quot;typecasts&quot;&gt;类型强制转换&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="43368afc9c7d6c814b72a88bff8a1f083cbd8aab" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;classes&quot;&gt;classes&lt;/a&gt; and &lt;a href=&quot;object-declarations&quot;&gt;objects and instances&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;classes&quot;&gt;类&lt;/a&gt;，&lt;a href=&quot;object-declarations&quot;&gt;对象和实例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3d63182055a00b09bf44245935dcf2b86fba89e4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;classes#overriding-properties&quot;&gt;Overriding Properties&lt;/a&gt;</source>
          <target state="translated">请参见&lt;a href=&quot;classes#overriding-properties&quot;&gt;覆盖属性&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6045b199ca5c4a479e2bb6f0ff3afe72b0b53f8f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;collections-overview&quot;&gt;Collections overview&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;collections-overview&quot;&gt;收藏集概述&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6aed9c599c727e0e8968ecfe9ad5a2b6cf6f273c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;control-flow#for-loops&quot;&gt;for loop&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;control-flow#for-loops&quot;&gt;循环&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="af880e9532e7b2e3551633495b0f6473ff1fcae4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;control-flow#if-expression&quot;&gt;&lt;em&gt;if&lt;/em&gt;-expressions&lt;/a&gt;.</source>
          <target state="translated">查看&lt;a href=&quot;control-flow#if-expression&quot;&gt;&lt;em&gt;if&lt;/em&gt; -expressions&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e5eef267c081e03fc5772f23f897355c86390bc2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;control-flow#when-expression&quot;&gt;when expression&lt;/a&gt;.</source>
          <target state="translated">见&lt;a href=&quot;control-flow#when-expression&quot;&gt;何时表达&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e781e5c6b063591c11082b6bfe59976039aab905" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;control-flow#while-loops&quot;&gt;while loop&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;control-flow#while-loops&quot;&gt;while循环&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="72fdd1b4df9f030ac2e6eb827afe4048c030e9c8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions&quot;&gt;Functions&lt;/a&gt;.</source>
          <target state="translated">请参见&lt;a href=&quot;functions&quot;&gt;函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3822f4b6e3755d6c4150f688e9f8dd4601b2b43e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;getting-started&quot;&gt;Getting Started with IntelliJ IDEA&lt;/a&gt; on how to set up development environment for Kotlin. In competitive programming, a single project is usually created and each problem's solution is written in a single source file.</source>
          <target state="translated">有关如何为Kotlin设置开发环境，请参阅&lt;a href=&quot;getting-started&quot;&gt;IntelliJ IDEA入门&lt;/a&gt;。在竞争性编程中，通常创建一个项目，并将每个问题的解决方案写在一个源文件中。</target>
        </trans-unit>
        <trans-unit id="6d7a0c506dac9efc180dd3f27848ac388b3ed31a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/JetBrains/kotlin/tree/master/libraries/examples/kotlin-jsr223-local-example&quot;&gt;here&lt;/a&gt; for a larger example project using the API.</source>
          <target state="translated">有关使用API​​的大型示例项目，请参见&lt;a href=&quot;https://github.com/JetBrains/kotlin/tree/master/libraries/examples/kotlin-jsr223-local-example&quot;&gt;此处&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0fcdd2501312f55e8c300f1256aabc2886c584c3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/unsigned-types.md&quot;&gt;language proposal for unsigned types&lt;/a&gt; for technical details and further discussion.</source>
          <target state="translated">有关技术细节和进一步的讨论，请参阅&lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/unsigned-types.md&quot;&gt;无符号类型的语言建议&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="39862abac54383f5db77262fe8e95528586cbefb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://kotlinlang.org/lp/mobile/&quot;&gt;KMM features, case studies and examples&lt;/a&gt;</source>
          <target state="translated">查看&lt;a href=&quot;https://kotlinlang.org/lp/mobile/&quot;&gt;KMM功能，案例研究和示例&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7532039c08b50ced577b6205ef701be3283628d8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;inline-classes&quot;&gt;reference&lt;/a&gt; for inline classes for details.</source>
          <target state="translated">请参见&lt;a href=&quot;inline-classes&quot;&gt;参考&lt;/a&gt;内联类的细节。</target>
        </trans-unit>
        <trans-unit id="c9f672232b71ccbe3bcad54d8cfd048b541d715b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;jvm-get-started&quot;&gt;Getting Started with IntelliJ IDEA&lt;/a&gt; on how to set up development environment for Kotlin. In competitive programming, a single project is usually created and each problem's solution is written in a single source file.</source>
          <target state="translated">有关如何为Kotlin设置开发环境，请参阅&lt;a href=&quot;jvm-get-started&quot;&gt;IntelliJ IDEA入门&lt;/a&gt;。在竞争性编程中，通常创建一个项目，并将每个问题的解决方案写在一个源文件中。</target>
        </trans-unit>
        <trans-unit id="72d78c0e85a90eba65d587e0235fa9366f4f5b2e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;kotlin-doc&quot;&gt;Documenting Kotlin Code&lt;/a&gt; for information on the documentation comment syntax.</source>
          <target state="translated">有关文档注释语法的信息，请参见&lt;a href=&quot;kotlin-doc&quot;&gt;记录Kotlin代码&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8e0c42cf38ae5c881bc057bd395e1165e8a43a2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;lambdas&quot;&gt;Higher-order functions and Lambdas&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;lambdas&quot;&gt;高阶函数和Lambda&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="61c6924790d73d55cb25a2c74a3ac3834c60937b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;null-safety&quot;&gt;Null-safety&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;null-safety&quot;&gt;Null-safety&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb52711a4d210618f01364bb8923cb2cf2059296" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;packages&quot;&gt;Packages&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;packages&quot;&gt;软件包&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e11d1dd269d934fe14336d27089a06c861b622e8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;packages#imports&quot;&gt;Imports&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;packages#imports&quot;&gt;导入&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e80083b4cd5cae8fb0037b50cd120ea1dcca9d8a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ranges&quot;&gt;Ranges&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;ranges&quot;&gt;范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a33677e991fdf4152646891d03c1672e31759159" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;this-expressions&quot;&gt;Qualified &lt;em&gt;this&lt;/em&gt; expressions&lt;/a&gt; to learn about disambiguation of &lt;em&gt;this&lt;/em&gt; in inner classes.</source>
          <target state="translated">请参阅&lt;a href=&quot;this-expressions&quot;&gt;限定&lt;em&gt;此&lt;/em&gt;表达式&lt;/a&gt;以了解内部类&lt;em&gt;对此的&lt;/em&gt;歧义。</target>
        </trans-unit>
        <trans-unit id="49dc4f77dcd7817eb995e6e5a3ebc71a2c10d462" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;using-gradle#compiler-options&quot;&gt;Compiler options in Gradle&lt;/a&gt; for details. For &lt;a href=&quot;mpp-intro&quot;&gt;multiplatform projects&lt;/a&gt;, see &lt;a href=&quot;mpp-dsl-reference#language-settings&quot;&gt;language settings&lt;/a&gt;.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;using-gradle#compiler-options&quot;&gt;Gradle中的编译器选项&lt;/a&gt;。对于&lt;a href=&quot;mpp-intro&quot;&gt;多平台项目&lt;/a&gt;，请参阅&lt;a href=&quot;mpp-dsl-reference#language-settings&quot;&gt;语言设置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="94f57fb649679b58ce75a35d562414085cf87ebd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;using-gradle#compiler-options&quot;&gt;Compiler options in Gradle&lt;/a&gt; for details. For &lt;a href=&quot;whatsnew13#multiplatform-projects&quot;&gt;Multiplatform Projects&lt;/a&gt; settings, see &lt;a href=&quot;building-mpp-with-gradle#language-settings&quot;&gt;building Multiplatform Projects with Gradle&lt;/a&gt; section.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;using-gradle#compiler-options&quot;&gt;Gradle中的编译器选项&lt;/a&gt;。有关&amp;ldquo; &lt;a href=&quot;whatsnew13#multiplatform-projects&quot;&gt;多平台项目&amp;rdquo;&lt;/a&gt;设置，请参阅&amp;ldquo; &lt;a href=&quot;building-mpp-with-gradle#language-settings&quot;&gt;使用Gradle构建多平台项目&amp;rdquo;&lt;/a&gt;一节。</target>
        </trans-unit>
        <trans-unit id="7ed0bb70c421b45440cc0db209c02920f745d74c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;using-maven#specifying-compiler-options&quot;&gt;Compiler options in Maven&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;using-maven#specifying-compiler-options&quot;&gt;Maven中的编译器选项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b54c428be4abac9b8aa7be4ba584b46daabf19ab" translate="yes" xml:space="preserve">
          <source>See a full coroutine creation stack, as well as a call stack inside the coroutine. The stack includes all frames with variable values, even those that would be lost during standard debugging.</source>
          <target state="translated">查看完整的coroutine创建栈,以及coroutine内部的调用栈。该堆栈包括所有带有变量值的帧,甚至包括那些在标准调试中会丢失的帧。</target>
        </trans-unit>
        <trans-unit id="ce3978d67b7d1bd90a41b2181470928f80a9d834" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;properties&quot;&gt;Properties And Fields&lt;/a&gt;.</source>
          <target state="translated">另请参阅&lt;a href=&quot;properties&quot;&gt;属性和字段&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1927e1cd499f912b4e75aeea8d95fdabcc28792e" translate="yes" xml:space="preserve">
          <source>See also logarithm functions for common fixed bases: &lt;a href=&quot;ln#kotlin.math%24ln%28kotlin.Double%29&quot;&gt;ln&lt;/a&gt;, &lt;a href=&quot;log10#kotlin.math%24log10%28kotlin.Double%29&quot;&gt;log10&lt;/a&gt; and &lt;a href=&quot;log2#kotlin.math%24log2%28kotlin.Double%29&quot;&gt;log2&lt;/a&gt;.</source>
          <target state="translated">另请参见常用固定底数的对数函数：&lt;a href=&quot;ln#kotlin.math%24ln%28kotlin.Double%29&quot;&gt;ln&lt;/a&gt;，&lt;a href=&quot;log10#kotlin.math%24log10%28kotlin.Double%29&quot;&gt;log10&lt;/a&gt;和&lt;a href=&quot;log2#kotlin.math%24log2%28kotlin.Double%29&quot;&gt;log2&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="45bfbe918ee8b7efacf36711757200ecfce30435" translate="yes" xml:space="preserve">
          <source>See also logarithm functions for common fixed bases: &lt;a href=&quot;ln#kotlin.math%24ln(kotlin.Double)&quot;&gt;ln&lt;/a&gt;, &lt;a href=&quot;log10#kotlin.math%24log10(kotlin.Double)&quot;&gt;log10&lt;/a&gt; and &lt;a href=&quot;log2#kotlin.math%24log2(kotlin.Double)&quot;&gt;log2&lt;/a&gt;.</source>
          <target state="translated">另请参见常用固定底数的对数函数：&lt;a href=&quot;ln#kotlin.math%24ln(kotlin.Double)&quot;&gt;ln&lt;/a&gt;，&lt;a href=&quot;log10#kotlin.math%24log10(kotlin.Double)&quot;&gt;log10&lt;/a&gt;和&lt;a href=&quot;log2#kotlin.math%24log2(kotlin.Double)&quot;&gt;log2&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="446b6ef7aa0b302d8a46c4286a5d36536a09aea4" translate="yes" xml:space="preserve">
          <source>See also or Experimental API &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/experimental.md&quot;&gt;KEEP&lt;/a&gt; for technical details.</source>
          <target state="translated">另请参阅或实验性API &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/experimental.md&quot;&gt;KEEP&lt;/a&gt;以获取技术详细信息。</target>
        </trans-unit>
        <trans-unit id="c67250701d5ea315927e478928dbae47c640c4f8" translate="yes" xml:space="preserve">
          <source>See also the Opt-in Requirements API &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/experimental.md&quot;&gt;KEEP&lt;/a&gt; for technical details.</source>
          <target state="translated">另请参阅&amp;ldquo;加入要求API &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/experimental.md&quot;&gt;KEEP&amp;rdquo;&lt;/a&gt;以获取技术详细信息。</target>
        </trans-unit>
        <trans-unit id="b8d6677a32b4b229d038a3cbf6ebd226f8285a6a" translate="yes" xml:space="preserve">
          <source>See here for &lt;a href=&quot;https://github.com/Kotlin/kotlinx.serialization#current-project-status&quot;&gt;details&lt;/a&gt;.</source>
          <target state="translated">有关&lt;a href=&quot;https://github.com/Kotlin/kotlinx.serialization#current-project-status&quot;&gt;详细信息，&lt;/a&gt;请参见此处。</target>
        </trans-unit>
        <trans-unit id="89bb66da1bc1695c79bf8970be2a0382cfd44b8d" translate="yes" xml:space="preserve">
          <source>See more about native binaries declaration at the &lt;a href=&quot;../building-mpp-with-gradle#building-final-native-binaries&quot;&gt;corresponding page&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;../building-mpp-with-gradle#building-final-native-binaries&quot;&gt;相应页面上&lt;/a&gt;查看有关本机二进制文件声明的更多信息。</target>
        </trans-unit>
        <trans-unit id="c90337477f28c69e470160c1be3c415aaf92ce14" translate="yes" xml:space="preserve">
          <source>See more details in &lt;a href=&quot;c_interop&quot;&gt;INTEROP.md&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;c_interop&quot;&gt;INTEROP.md中&lt;/a&gt;查看更多详细信息</target>
        </trans-unit>
        <trans-unit id="452553878086517724efa33202a5a8964b0da5d2" translate="yes" xml:space="preserve">
          <source>See more info about dependencies at the &lt;a href=&quot;../building-mpp-with-gradle#adding-dependencies&quot;&gt;corresponding page&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;../building-mpp-with-gradle#adding-dependencies&quot;&gt;相应页面上&lt;/a&gt;查看有关依赖项的更多信息。</target>
        </trans-unit>
        <trans-unit id="d04fa7d9f4c04209951c47546bf6ec49100b9e3f" translate="yes" xml:space="preserve">
          <source>See no issues at all</source>
          <target state="translated">完全看不出任何问题</target>
        </trans-unit>
        <trans-unit id="d29a6437cf181b0af5ceacce4b0721019014ce77" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../../../../../docs/reference/generics#type-projections&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参阅&lt;a href=&quot;../../../../../../docs/reference/generics#type-projections&quot;&gt;Kotlin语言文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7b34fbd1aa7e811889de71121e06e6932f480175" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../../../../../docs/reference/generics#variance&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参阅&lt;a href=&quot;../../../../../../docs/reference/generics#variance&quot;&gt;Kotlin语言文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7240928f0149f9330e21b7d8c8473b408e9be2b5" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../../../../../docs/reference/java-to-kotlin-interop#handling-signature-clashes-with-jvmname&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参阅&lt;a href=&quot;../../../../../../docs/reference/java-to-kotlin-interop#handling-signature-clashes-with-jvmname&quot;&gt;Kotlin语言文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e56302902b6d7cf704d94dd232e74f328c57f2c" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../../../../../docs/reference/java-to-kotlin-interop#instance-fields&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参阅&lt;a href=&quot;../../../../../../docs/reference/java-to-kotlin-interop#instance-fields&quot;&gt;Kotlin语言文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a244dab269fec173abd1928c537d2e1eaaa4715" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../../../../../docs/reference/java-to-kotlin-interop#static-methods&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参阅&lt;a href=&quot;../../../../../../docs/reference/java-to-kotlin-interop#static-methods&quot;&gt;Kotlin语言文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f4cd375f16cd383b059d21dedc19c624ac2ba1de" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../../../../../docs/reference/reflection&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参阅&lt;a href=&quot;../../../../../../docs/reference/reflection&quot;&gt;Kotlin语言文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="72cdc4d6bee3414fe6381333369ed7a61965be83" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../../../../../docs/reference/visibility-modifiers&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参阅&lt;a href=&quot;../../../../../../docs/reference/visibility-modifiers&quot;&gt;Kotlin语言文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fe954a2bf9d471f5fdc94f16960bf5a878c05413" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../tutorials/javascript/getting-started-maven/getting-started-with-maven&quot;&gt;Getting Started with Kotlin and JavaScript with Maven&lt;/a&gt; tutorial for more information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;../tutorials/javascript/getting-started-maven/getting-started-with-maven&quot;&gt;Kotlin入门和Maven JavaScript&lt;/a&gt;教程。</target>
        </trans-unit>
        <trans-unit id="f69d353fcc18f1de1ac59cf0f9d284cc48a3cc84" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;http://kotlinlang.org/docs/reference/multiplatform.html&quot;&gt;documentation&lt;/a&gt; for details and steps to build a multiplatform project.</source>
          <target state="translated">有关建立多平台项目的详细信息和步骤，请参阅&lt;a href=&quot;http://kotlinlang.org/docs/reference/multiplatform.html&quot;&gt;文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1cf78243b69a4b33515a1514a8bc6cae4ef1f751" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#expressions&quot;&gt;Grammar reference&lt;/a&gt; for the complete operators precedence hierarchy.</source>
          <target state="translated">有关完整的运算符优先级层次结构，请参见&lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#expressions&quot;&gt;语法参考&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="04290a32dde94e5467a257f67d0dc228f0d14cc5" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#forStatement&quot;&gt;grammar for &lt;em&gt;for&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">见&lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#forStatement&quot;&gt;文法&lt;em&gt;的&lt;/em&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ee1dc8e8d13d83e997447435f9ba472f0cd009f8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#ifExpression&quot;&gt;grammar for &lt;em&gt;if&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">见&lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#ifExpression&quot;&gt;文法&lt;em&gt;如果&lt;/em&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4b285c0e86de8a581a61991ee7da4b754ae513e2" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#whenExpression&quot;&gt;grammar for &lt;em&gt;when&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">见&lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#whenExpression&quot;&gt;的语法&lt;em&gt;时&lt;/em&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dfb5b5177f3d4417b5b1aec6da0d268c7fb3dd0a" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#whileStatement&quot;&gt;grammar for &lt;em&gt;while&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#whileStatement&quot;&gt;语法&lt;em&gt;一会儿&lt;/em&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="60ba0bce9249dfae29c991593aa77efc05eed575" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://kotlinlang.org/docs/reference/multiplatform.html&quot;&gt;documentation&lt;/a&gt; for details and steps to build a multiplatform project.</source>
          <target state="translated">有关构建多平台项目的详细信息和步骤，请参阅&lt;a href=&quot;https://kotlinlang.org/docs/reference/multiplatform.html&quot;&gt;文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a8fd90bb289112ec8e23ddfe5c8921ddd13257e7" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;mpp-dsl-reference#compilation-parameters&quot;&gt;list of compilation parameters&lt;/a&gt; and &lt;a href=&quot;using-gradle#compiler-options&quot;&gt;compiler options&lt;/a&gt; available for all or specific targets.</source>
          <target state="translated">请参阅可用于所有或特定目标&lt;a href=&quot;mpp-dsl-reference#compilation-parameters&quot;&gt;的编译参数&lt;/a&gt;和&lt;a href=&quot;using-gradle#compiler-options&quot;&gt;编译器选项&lt;/a&gt;列表。</target>
        </trans-unit>
        <trans-unit id="4c142e485ce34a3edc749760733f1c02d73e19d6" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;type-aliases&quot;&gt;documentation&lt;/a&gt; and &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/type-aliases.md&quot;&gt;KEEP&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;type-aliases&quot;&gt;文档&lt;/a&gt;和&lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/type-aliases.md&quot;&gt;KEEP&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f2fd457da1c9c81b713223b897fbc1dac4ccfea7" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;samples/libcurl&lt;/code&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见 &lt;code&gt;samples/libcurl&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="767754af5228f0307a86fcff121d80c53957012a" translate="yes" xml:space="preserve">
          <source>See the description of &lt;a href=&quot;kapt&quot;&gt;Kotlin annotation processing tool&lt;/a&gt; (&lt;code&gt;kapt&lt;/code&gt;).</source>
          <target state="translated">请参阅&lt;a href=&quot;kapt&quot;&gt;Kotlin注释处理工具&lt;/a&gt;（ &lt;code&gt;kapt&lt;/code&gt; ）的描述。</target>
        </trans-unit>
        <trans-unit id="27d63786313d54e555bc147958b0f7758e49c1a7" translate="yes" xml:space="preserve">
          <source>See the details on the syntax as well as the compatibility notice in the &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/kotlin-contracts.md&quot;&gt;KEEP&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/kotlin-contracts.md&quot;&gt;KEEP中&lt;/a&gt;有关语法的详细信息以及兼容性声明。</target>
        </trans-unit>
        <trans-unit id="f0669c4a1b9c1fa53f605967964c505b80ee1bfd" translate="yes" xml:space="preserve">
          <source>See the following example that filters the even integers and maps them to strings:</source>
          <target state="translated">请看下面的例子,过滤偶数整数并将它们映射到字符串。</target>
        </trans-unit>
        <trans-unit id="cbd9ca0b72729429e57010990712d0ea028ea89a" translate="yes" xml:space="preserve">
          <source>See the other overload of &lt;a href=&quot;pow#kotlin.math%24pow%28kotlin.Double%2C+kotlin.Double%29&quot;&gt;pow&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见其他&lt;a href=&quot;pow#kotlin.math%24pow%28kotlin.Double%2C+kotlin.Double%29&quot;&gt;pow&lt;/a&gt;超载。</target>
        </trans-unit>
        <trans-unit id="49b5e929eef45ae74221a3da709cf4885c42bc36" translate="yes" xml:space="preserve">
          <source>See the other overload of &lt;a href=&quot;pow#kotlin.math%24pow(kotlin.Double,%20kotlin.Double)&quot;&gt;pow&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见其他&lt;a href=&quot;pow#kotlin.math%24pow(kotlin.Double,%20kotlin.Double)&quot;&gt;pow&lt;/a&gt;超载。</target>
        </trans-unit>
        <trans-unit id="1848d6eda12852059da4f468fd1210b532135f45" translate="yes" xml:space="preserve">
          <source>See the values of local and captured variables for both running and suspended coroutines.</source>
          <target state="translated">查看正在运行和暂停的coroutine的本地变量和捕获变量的值。</target>
        </trans-unit>
        <trans-unit id="cec7a60bb845fd7cb358ff67ea5861b283e96597" translate="yes" xml:space="preserve">
          <source>See this &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/inline-classes.md&quot;&gt;language proposal for inline classes&lt;/a&gt; for other technical details and discussion.</source>
          <target state="translated">有关其他技术细节和讨论，请参见&lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/inline-classes.md&quot;&gt;针对内联类的语言建议&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="002a4144c0bb875640ce6427eac3a179663115ca" translate="yes" xml:space="preserve">
          <source>See warnings about the upcoming change</source>
          <target state="translated">请看关于即将到来的变化的警告</target>
        </trans-unit>
        <trans-unit id="1101f7912326c1029e04e7437c99a5ed6370f18e" translate="yes" xml:space="preserve">
          <source>See what &lt;a href=&quot;#types-in-c-language&quot;&gt;Data Types are in C Language&lt;/a&gt;</source>
          <target state="translated">查看&lt;a href=&quot;#types-in-c-language&quot;&gt;C语言中的数据类型&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c9974e39c327f569bcd348b8b36f9140e4e7698" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;../tutorials/native/mpp-ios-android&quot;&gt;Multiplatform Project: iOS and Android&lt;/a&gt;</source>
          <target state="translated">请参阅：&lt;a href=&quot;../tutorials/native/mpp-ios-android&quot;&gt;多平台项目：iOS和Android&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88b2c3be971f78e0384a2f3914837a9187f5cb5a" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;basic-types#floating-point-numbers-comparison&quot;&gt;Floating Point Numbers Comparison&lt;/a&gt;.</source>
          <target state="translated">请参阅：&lt;a href=&quot;basic-types#floating-point-numbers-comparison&quot;&gt;浮点数比较&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d857f440c3aca0e9f922ba8b7d1eab5c56b025df" translate="yes" xml:space="preserve">
          <source>See: https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_modern_algorithm</source>
          <target state="translated">见:https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_modern_algorithm</target>
        </trans-unit>
        <trans-unit id="8ce4b6e4781457e2e238b0b0c70173b2e8bced13" translate="yes" xml:space="preserve">
          <source>Select &lt;em&gt;Use gradle 'wrapper' task configuration&lt;/em&gt; option in the Gradle import dialog to complete the import. For existing projects, which already have Gradle wrapper scripts, the &lt;em&gt;Use default Gradle wrapper&lt;/em&gt; option should be selected instead.</source>
          <target state="translated">在Gradle导入对话框中选择&lt;em&gt;Use gradle'wrapper'任务配置&lt;/em&gt;选项以完成导入。对于已经具有Gradle包装器脚本的现有项目，应改为选择&amp;ldquo; &lt;em&gt;使用默认Gradle包装器&amp;rdquo;&lt;/em&gt;选项。</target>
        </trans-unit>
        <trans-unit id="a4ba18808948e22b319e6ff3626179d0771172f8" translate="yes" xml:space="preserve">
          <source>Select &lt;strong&gt;Create New Virtual Device&lt;/strong&gt;.</source>
          <target state="translated">选择&lt;strong&gt;创建新的虚拟设备&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="88c60277524c424110cd90b4ac1140d679ec1101" translate="yes" xml:space="preserve">
          <source>Select &lt;strong&gt;File | New | Kotlin Project&lt;/strong&gt;.</source>
          <target state="translated">选择&lt;strong&gt;文件| 新增| 科特林项目&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="51bd6f5b8caa2312f65b66e14a10bd9e6861f7a0" translate="yes" xml:space="preserve">
          <source>Select Expression (experimental)</source>
          <target state="translated">选择表达(实验)</target>
        </trans-unit>
        <trans-unit id="547eecf41dc87556284adfa049756181373e8126" translate="yes" xml:space="preserve">
          <source>Select a device you like and click &lt;strong&gt;Next&lt;/strong&gt;.</source>
          <target state="translated">选择您喜欢的设备，然后单击&lt;strong&gt;下一步&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="fad43dbed6f4183aadf8692b1c2034452b1ca05d" translate="yes" xml:space="preserve">
          <source>Select a system version and download its image.</source>
          <target state="translated">选择一个系统版本并下载其镜像。</target>
        </trans-unit>
        <trans-unit id="d60a759340d40c46b0cebed4eb581fe0a6a3c493" translate="yes" xml:space="preserve">
          <source>Select an &lt;a href=&quot;https://developer.android.com/guide/components/activities/intro-activities&quot;&gt;activity&lt;/a&gt; that defines the behavior of your application. For your first &quot;Hello world&quot; application, select &lt;strong&gt;Empty Activity&lt;/strong&gt; that just shows a screen, and click &lt;strong&gt;Next&lt;/strong&gt;.</source>
          <target state="translated">选择一个定义应用程序行为的&lt;a href=&quot;https://developer.android.com/guide/components/activities/intro-activities&quot;&gt;活动&lt;/a&gt;。对于您的第一个&amp;ldquo; Hello world&amp;rdquo;应用程序，选择只显示一个屏幕的&lt;strong&gt;Empty Activity&lt;/strong&gt;，然后单击&lt;strong&gt;Next&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="4c32ac23bf57e6bef05946a26b1a0eabf8256266" translate="yes" xml:space="preserve">
          <source>Select expression (experimental)</source>
          <target state="translated">选择表达方式(实验)</target>
        </trans-unit>
        <trans-unit id="48956f92abeebca2ff71b62a0891686768c01f08" translate="yes" xml:space="preserve">
          <source>Select expression has &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-send-channel/on-send.html&quot;&gt;onSend&lt;/a&gt; clause that can be used for a great good in combination with a biased nature of selection.</source>
          <target state="translated">Select表达式具有&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-send-channel/on-send.html&quot;&gt;onSend&lt;/a&gt;子句，可以与选择的偏向性质结合使用，以达到极大的效果。</target>
        </trans-unit>
        <trans-unit id="b520be71b3c104ce563b6c593fde42be010adf49" translate="yes" xml:space="preserve">
          <source>Select expression makes it possible to await multiple suspending functions simultaneously and &lt;em&gt;select&lt;/em&gt; the first one that becomes available.</source>
          <target state="translated">通过选择表达式，可以同时等待多个挂起函数并&lt;em&gt;选择&lt;/em&gt;第一个可用的函数。</target>
        </trans-unit>
        <trans-unit id="8175e32b759e37e1a5d84ee3e91065f0c422b7eb" translate="yes" xml:space="preserve">
          <source>Select expressions are an experimental feature of &lt;code&gt;kotlinx.coroutines&lt;/code&gt;. Their API is expected to evolve in the upcoming updates of the &lt;code&gt;kotlinx.coroutines&lt;/code&gt; library with potentially breaking changes.</source>
          <target state="translated">选择表达式是 &lt;code&gt;kotlinx.coroutines&lt;/code&gt; 的实验功能。他们的API预计会在 &lt;code&gt;kotlinx.coroutines&lt;/code&gt; 库的即将进行的更新中发展，并且可能会有重大更改。</target>
        </trans-unit>
        <trans-unit id="4e17138b73e50b2628e9a8c0ab5d0c0711f6a229" translate="yes" xml:space="preserve">
          <source>Select only the distinct characters in your name using the &lt;a href=&quot;../../../api/latest/jvm/stdlib/kotlin.collections/distinct&quot;&gt;&lt;code&gt;distinct()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">使用&lt;a href=&quot;../../../api/latest/jvm/stdlib/kotlin.collections/distinct&quot;&gt; &lt;code&gt;distinct()&lt;/code&gt; &lt;/a&gt;函数仅选择名称中的不同字符。</target>
        </trans-unit>
        <trans-unit id="3fc0f4678c53c219cb3d0d546b87fed9cd3ee616" translate="yes" xml:space="preserve">
          <source>Select the Gradle DSL &amp;ndash; Kotlin or Groovy.</source>
          <target state="translated">选择Gradle DSL &amp;ndash; Kotlin或Groovy。</target>
        </trans-unit>
        <trans-unit id="3f9b887613813021fda7ae7e33587acc4bb4bc00" translate="yes" xml:space="preserve">
          <source>Select the execution environment:</source>
          <target state="translated">选择执行环境。</target>
        </trans-unit>
        <trans-unit id="42302b9a2abf4e35a9075aa892e7301f57141bf5" translate="yes" xml:space="preserve">
          <source>Selected documentation pages:</source>
          <target state="translated">部分文件页:</target>
        </trans-unit>
        <trans-unit id="02edbb0885c1f54bd5c812f1f6c21dd73b7b7752" translate="yes" xml:space="preserve">
          <source>Selecting deferred values</source>
          <target state="translated">选择递延值</target>
        </trans-unit>
        <trans-unit id="47d00ff46b20191dc1fea60073556feeb9737b6b" translate="yes" xml:space="preserve">
          <source>Selecting from channels</source>
          <target state="translated">从频道中选择</target>
        </trans-unit>
        <trans-unit id="aab3b9d16e09699ff2d802b15b20b5ecc4f06393" translate="yes" xml:space="preserve">
          <source>Selecting library headers</source>
          <target state="translated">选择库头</target>
        </trans-unit>
        <trans-unit id="fe050710fc31fb212b9d58e03ffb5ddf9227ff92" translate="yes" xml:space="preserve">
          <source>Selecting on close</source>
          <target state="translated">关闭时选择</target>
        </trans-unit>
        <trans-unit id="c21c0093c98c3f86a84809d41128aa9f9d516de1" translate="yes" xml:space="preserve">
          <source>Selecting to send</source>
          <target state="translated">选择发送</target>
        </trans-unit>
        <trans-unit id="c5d699ecb491cd74b07cd5d34e15b6457dcd4d77" translate="yes" xml:space="preserve">
          <source>SelectionMode</source>
          <target state="translated">SelectionMode</target>
        </trans-unit>
        <trans-unit id="e224d8a043bad355e811a889ebdd19946f0af63a" translate="yes" xml:space="preserve">
          <source>Self-contained Jar file</source>
          <target state="translated">自带的 Jar 文件</target>
        </trans-unit>
        <trans-unit id="deaa9959eee189b886b9fe0c02af7f02ee90f04a" translate="yes" xml:space="preserve">
          <source>Semantic difference between object expressions and declarations</source>
          <target state="translated">对象表达式和声明之间的语义区别</target>
        </trans-unit>
        <trans-unit id="1158dc6391ca1c282b0274da233e5b47974ab44c" translate="yes" xml:space="preserve">
          <source>Semicolons</source>
          <target state="translated">Semicolons</target>
        </trans-unit>
        <trans-unit id="5782c9162c716def6df9bf7e94748ad8c4334b5a" translate="yes" xml:space="preserve">
          <source>Send and receive operations to channels are &lt;em&gt;fair&lt;/em&gt; with respect to the order of their invocation from multiple coroutines. They are served in first-in first-out order, e.g. the first coroutine to invoke &lt;code&gt;receive&lt;/code&gt; gets the element. In the following example two coroutines &quot;ping&quot; and &quot;pong&quot; are receiving the &quot;ball&quot; object from the shared &quot;table&quot; channel.</source>
          <target state="translated">就从多个协程调用它们的顺序而言，对通道的发送和接收操作是&lt;em&gt;公平的&lt;/em&gt;。它们以先进先出的顺序提供，例如，调用 &lt;code&gt;receive&lt;/code&gt; 的第一个协程获取元素。在下面的示例中，两个协程&amp;ldquo; ping&amp;rdquo;和&amp;ldquo; pong&amp;rdquo;从共享的&amp;ldquo; table&amp;rdquo;通道接收&amp;ldquo; ball&amp;rdquo;对象。</target>
        </trans-unit>
        <trans-unit id="e54a83f10e5af4bee27d8c0ebfe4ed0592366f8d" translate="yes" xml:space="preserve">
          <source>Separate interfaces for read-only and mutable collections</source>
          <target state="translated">为只读和可更改的集合提供单独的接口。</target>
        </trans-unit>
        <trans-unit id="5c8f4e0e1a2281faf562976c2410f76c3d8fbc95" translate="yes" xml:space="preserve">
          <source>Sequence</source>
          <target state="translated">Sequence</target>
        </trans-unit>
        <trans-unit id="e5883c1a54bb1e68289417fbad3062b1a700027a" translate="yes" xml:space="preserve">
          <source>Sequence operations</source>
          <target state="translated">顺序操作</target>
        </trans-unit>
        <trans-unit id="c48d275d17f30d5b803ff437ae7b3ef803c29872" translate="yes" xml:space="preserve">
          <source>Sequence operations, like &lt;a href=&quot;../map&quot;&gt;Sequence.map&lt;/a&gt;, &lt;a href=&quot;../filter&quot;&gt;Sequence.filter&lt;/a&gt; etc, generally preserve that property of a sequence, and again it's documented for an operation if it doesn't.</source>
          <target state="translated">序列操作（例如&lt;a href=&quot;../map&quot;&gt;Sequence.map&lt;/a&gt;，&lt;a href=&quot;../filter&quot;&gt;Sequence.filter&lt;/a&gt;等）通常会保留序列的该属性，如果没有，则再次记录该序列的操作。</target>
        </trans-unit>
        <trans-unit id="64e6557fa694e5bc4d5214113f8e64a03eff042b" translate="yes" xml:space="preserve">
          <source>Sequence processing example</source>
          <target state="translated">序列处理示例</target>
        </trans-unit>
        <trans-unit id="17d31f0a79810867402ac04dc581a512a3e7b8e1" translate="yes" xml:space="preserve">
          <source>Sequence.groupingBy</source>
          <target state="translated">Sequence.groupingBy</target>
        </trans-unit>
        <trans-unit id="01f90824cbb43798e728c150fb0e61a7bc14e304" translate="yes" xml:space="preserve">
          <source>SequenceBuilder</source>
          <target state="translated">SequenceBuilder</target>
        </trans-unit>
        <trans-unit id="1ba425c731fb567f4a419699f797f9b17fbee2da" translate="yes" xml:space="preserve">
          <source>SequenceScope</source>
          <target state="translated">SequenceScope</target>
        </trans-unit>
        <trans-unit id="b5fb636023abb67d347041d398442118f79ea091" translate="yes" xml:space="preserve">
          <source>Sequences</source>
          <target state="translated">Sequences</target>
        </trans-unit>
        <trans-unit id="dd81a16031599be93f6dd81ca5d6238d53a6744e" translate="yes" xml:space="preserve">
          <source>Sequences can be iterated multiple times, however some sequence implementations might constrain themselves to be iterated only once. That is mentioned specifically in their documentation (e.g. &lt;a href=&quot;../generate-sequence&quot;&gt;generateSequence&lt;/a&gt; overload). The latter sequences throw an exception on an attempt to iterate them the second time.</source>
          <target state="translated">序列可以被迭代多次，但是某些序列实现可能会约束自己仅被迭代一次。他们的文档中特别提到了这一点（例如，&lt;a href=&quot;../generate-sequence&quot;&gt;generateSequence&lt;/a&gt;重载）。后面的序列在尝试第二次迭代时抛出异常。</target>
        </trans-unit>
        <trans-unit id="324bddccf0babf837f3e319e5e20b79516c0238f" translate="yes" xml:space="preserve">
          <source>Sequences can be iterated multiple times, however some sequence implementations might constrain themselves to be iterated only once. That is mentioned specifically in their documentation (e.g. &lt;a href=&quot;generate-sequence&quot;&gt;kotlin.sequences.generateSequence&lt;/a&gt; overload). The latter sequences throw an exception on an attempt to iterate them the second time.</source>
          <target state="translated">序列可以被迭代多次，但是某些序列实现可能会约束自己仅被迭代一次。他们的文档中特别提到了这一点（例如&lt;a href=&quot;generate-sequence&quot;&gt;kotlin.sequences.generateSequence&lt;/a&gt;重载）。后面的序列在尝试第二次迭代时抛出异常。</target>
        </trans-unit>
        <trans-unit id="7d6e9c12f8fb2b461fa680aec22b49a6b437317d" translate="yes" xml:space="preserve">
          <source>Sequences can be iterated multiple times; however some sequence implementations might constrain themselves to be iterated only once. That is mentioned specifically in their documentation.</source>
          <target state="translated">序列可以被多次迭代;但是一些序列实现可能会限制自己只被迭代一次。这在他们的文档中特别提到。</target>
        </trans-unit>
        <trans-unit id="633b854023bf60ecd3352dd58f1b60cddc507889" translate="yes" xml:space="preserve">
          <source>Sequential by default</source>
          <target state="translated">默认为顺序式</target>
        </trans-unit>
        <trans-unit id="89282363da677473acdbf45f0831bde9f4d3b6c4" translate="yes" xml:space="preserve">
          <source>Serialization</source>
          <target state="translated">Serialization</target>
        </trans-unit>
        <trans-unit id="cef85d46b644879ebb59d9edf7dca14d06924037" translate="yes" xml:space="preserve">
          <source>Serialization Compiler Plugin</source>
          <target state="translated">序列化编译器插件</target>
        </trans-unit>
        <trans-unit id="bfc1af3486233d86f9e4285f304ea90be870feae" translate="yes" xml:space="preserve">
          <source>Serialization Core Library</source>
          <target state="translated">序列化核心库</target>
        </trans-unit>
        <trans-unit id="f1f612371c661be3166a24f9dc10446222583cd3" translate="yes" xml:space="preserve">
          <source>Serialization plugin</source>
          <target state="translated">序列化插件</target>
        </trans-unit>
        <trans-unit id="8271ef44e36a997c2ae658d1924bd9cf6db40226" translate="yes" xml:space="preserve">
          <source>ServiceWorkerMessageEventInit</source>
          <target state="translated">ServiceWorkerMessageEventInit</target>
        </trans-unit>
        <trans-unit id="4413f0ab2dcf4624fe4b65b9e4d2332c78716f39" translate="yes" xml:space="preserve">
          <source>ServiceWorkerState</source>
          <target state="translated">ServiceWorkerState</target>
        </trans-unit>
        <trans-unit id="448ab73ba1c21e671e218fb91f2644c834f0c16f" translate="yes" xml:space="preserve">
          <source>Set</source>
          <target state="translated">Set</target>
        </trans-unit>
        <trans-unit id="40113801b18ce319e5c44850e1e658e055ba2004" translate="yes" xml:space="preserve">
          <source>Set Specific Operations</source>
          <target state="translated">设置具体操作</target>
        </trans-unit>
        <trans-unit id="7a6d35acbb020d05f22a086ba60e8f73f383445a" translate="yes" xml:space="preserve">
          <source>Set a breakpoint at the at the line where the &lt;code&gt;emit()&lt;/code&gt; function is called:</source>
          <target state="translated">在调用 &lt;code&gt;emit()&lt;/code&gt; 函数的行的处设置一个断点：</target>
        </trans-unit>
        <trans-unit id="43fa638b38fa3057dbf85563525061705d9f06b0" translate="yes" xml:space="preserve">
          <source>Set a callback &lt;a href=&quot;on-fail#kotlin.io.FileTreeWalk%24onFail%28kotlin.Function2%28%28java.io.File%2C+java.io.IOException%2C+kotlin.Unit%29%29%29%2Ffunction&quot;&gt;function&lt;/a&gt;, that is called on a directory when it's impossible to get its file list.</source>
          <target state="translated">设置一个回调&lt;a href=&quot;on-fail#kotlin.io.FileTreeWalk%24onFail%28kotlin.Function2%28%28java.io.File%2C+java.io.IOException%2C+kotlin.Unit%29%29%29%2Ffunction&quot;&gt;函数&lt;/a&gt;，在无法获取其文件列表时在目录上调用该函数。</target>
        </trans-unit>
        <trans-unit id="ceb94f72010eb7da9d200d0bc91d4363a00975f6" translate="yes" xml:space="preserve">
          <source>Set a callback &lt;a href=&quot;on-fail#kotlin.io.FileTreeWalk%24onFail(kotlin.Function2((java.io.File,%20java.io.IOException,%20kotlin.Unit)))/function&quot;&gt;function&lt;/a&gt;, that is called on a directory when it's impossible to get its file list.</source>
          <target state="translated">设置一个回调&lt;a href=&quot;on-fail#kotlin.io.FileTreeWalk%24onFail(kotlin.Function2((java.io.File,%20java.io.IOException,%20kotlin.Unit)))/function&quot;&gt;函数&lt;/a&gt;，在无法获取其文件列表时在目录上调用该函数。</target>
        </trans-unit>
        <trans-unit id="8fc8b5e4716f16948d6b45d67f5652a9ca20ac0c" translate="yes" xml:space="preserve">
          <source>Set a custom name for the generated &lt;code&gt;.kotlin_module&lt;/code&gt; file.</source>
          <target state="translated">为生成的 &lt;code&gt;.kotlin_module&lt;/code&gt; 文件设置自定义名称。</target>
        </trans-unit>
        <trans-unit id="f31f4c35915526a242633cf1e8c3f00933c4d361" translate="yes" xml:space="preserve">
          <source>Set a dependency on a kotlinx library</source>
          <target state="translated">设置对kotlinx库的依赖。</target>
        </trans-unit>
        <trans-unit id="6a9c2a3f5da8586287abac4ffc6a17d437b2fa01" translate="yes" xml:space="preserve">
          <source>Set a new breakpoint at &lt;code&gt;println(value)&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;println(value)&lt;/code&gt; 处设置一个新的断点。</target>
        </trans-unit>
        <trans-unit id="d911966079d78cb03073f49661297df0d86827c6" translate="yes" xml:space="preserve">
          <source>Set breakpoints at the lines with the &lt;code&gt;println()&lt;/code&gt; function call:</source>
          <target state="translated">使用 &lt;code&gt;println()&lt;/code&gt; 函数调用在行上设置断点：</target>
        </trans-unit>
        <trans-unit id="a44795ecba49c77354cc67979b537afb9bf65601" translate="yes" xml:space="preserve">
          <source>Set dependencies at the top level</source>
          <target state="translated">在顶层设置依赖关系</target>
        </trans-unit>
        <trans-unit id="485b7bd2d6be4000349673682360d0275c82f3c7" translate="yes" xml:space="preserve">
          <source>Set dependencies on test libraries</source>
          <target state="translated">设置对测试库的依赖性</target>
        </trans-unit>
        <trans-unit id="bb1d727da8b88fc1ac29ba6e5b761fe83a5d4420" translate="yes" xml:space="preserve">
          <source>Set hardware target. To see the list of available targets, use the &lt;a href=&quot;#-list-targets&quot;&gt;&lt;code&gt;-list-targets&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">设置硬件目标。要查看可用目标的列表，请使用&lt;a href=&quot;#-list-targets&quot;&gt; &lt;code&gt;-list-targets&lt;/code&gt; &lt;/a&gt;选项。</target>
        </trans-unit>
        <trans-unit id="b061e7ff7dc8605bd1d5a2dec3d93d192c52d826" translate="yes" xml:space="preserve">
          <source>Set the bit specified to the specified value.</source>
          <target state="translated">设置指定的位到指定的值。</target>
        </trans-unit>
        <trans-unit id="880db47b115c8ab604176015e936af627e986e44" translate="yes" xml:space="preserve">
          <source>Set the destination file for the compilation result. The value must be a path to a &lt;code&gt;.js&lt;/code&gt; file including its name.</source>
          <target state="translated">设置编译结果的目标文件。该值必须是包含其名称的 &lt;code&gt;.js&lt;/code&gt; 文件的路径。</target>
        </trans-unit>
        <trans-unit id="f25b16e787d8ed0de5689fe657be0a75ded1f31b" translate="yes" xml:space="preserve">
          <source>Set the library version.</source>
          <target state="translated">设置库的版本。</target>
        </trans-unit>
        <trans-unit id="4786c48c0847340df257cd77d620af5ddba1000f" translate="yes" xml:space="preserve">
          <source>Set the name for the output file.</source>
          <target state="translated">设置输出文件的名称。</target>
        </trans-unit>
        <trans-unit id="38b610e97dc4a86ed3152f5aad53acad8003c57f" translate="yes" xml:space="preserve">
          <source>Set up an IDE</source>
          <target state="translated">设置一个IDE</target>
        </trans-unit>
        <trans-unit id="64e5afea50d6b139bc71e06f74174e128e9d93a3" translate="yes" xml:space="preserve">
          <source>Set up targets manually</source>
          <target state="translated">手动设置目标</target>
        </trans-unit>
        <trans-unit id="9090f4dac9398caea18d500c177ae5d9eaaf87eb" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-char-at#kotlin.native%24setCharAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将&lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt;设置为指定索引&lt;a href=&quot;../../kotlin.native/set-char-at#kotlin.native%24setCharAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;index&lt;/a&gt;处的&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区</target>
        </trans-unit>
        <trans-unit id="246e048684268d842d2178c7526eb0fb7b532d94" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-char-at#kotlin.native%24setCharAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将&lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt;从指定的索引&lt;a href=&quot;../../kotlin.native/set-char-at#kotlin.native%24setCharAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt;的&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中取出</target>
        </trans-unit>
        <trans-unit id="edcc200bc12273c6272fafd06f2a5c60428e5419" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-double-at#kotlin.native%24setDoubleAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Double%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">在指定索引&lt;a href=&quot;../../kotlin.native/set-double-at#kotlin.native%24setDoubleAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Double%29%2Findex&quot;&gt;index&lt;/a&gt;的&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中设置&lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c21c7e45fe78866cb466cbf97aca0424240d7b4" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-double-at#kotlin.native%24setDoubleAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Double)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">在指定索引&lt;a href=&quot;../../kotlin.native/set-double-at#kotlin.native%24setDoubleAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Double)/index&quot;&gt;index&lt;/a&gt;的&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中设置&lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da515a45bf6a7b48f76d31bfdfc07e81c5e5b397" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-float-at#kotlin.native%24setFloatAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Float%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将&lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt;设置为在指定索引&lt;a href=&quot;../../kotlin.native/set-float-at#kotlin.native%24setFloatAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Float%29%2Findex&quot;&gt;index&lt;/a&gt;处的&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区之外</target>
        </trans-unit>
        <trans-unit id="14e7d29c9ba65b63626d1832ef3563cc3027cc9e" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-float-at#kotlin.native%24setFloatAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Float)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将&lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt;设置为在指定索引&lt;a href=&quot;../../kotlin.native/set-float-at#kotlin.native%24setFloatAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Float)/index&quot;&gt;index&lt;/a&gt;处的&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区之外</target>
        </trans-unit>
        <trans-unit id="6243aa097ace2f119715a9e02308e904fd46fa09" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-int-at#kotlin.native%24setIntAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">在指定索引&lt;a href=&quot;../../kotlin.native/set-int-at#kotlin.native%24setIntAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;的&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中设置&lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d7968c9395cc3f785c7fbad784256951eef4aeaa" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-int-at#kotlin.native%24setIntAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">在指定索引&lt;a href=&quot;../../kotlin.native/set-int-at#kotlin.native%24setIntAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;的&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中设置&lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e9fead8a733ff6e2f7c6229ab156b0be3c7aad8" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-long-at#kotlin.native%24setLongAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Long%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中的&lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt;设置为指定索引&lt;a href=&quot;../../kotlin.native/set-long-at#kotlin.native%24setLongAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Long%29%2Findex&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f2739f53f4e4c172abb388c4d9763395e85ec22" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-long-at#kotlin.native%24setLongAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Long)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">在指定索引&lt;a href=&quot;../../kotlin.native/set-long-at#kotlin.native%24setLongAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Long)/index&quot;&gt;index&lt;/a&gt;处将&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中的&lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt;设置为</target>
        </trans-unit>
        <trans-unit id="cd6198304f168018790866f8d5de90bd850068be" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-short-at#kotlin.native%24setShortAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Short%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中的&lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt;设置为指定索引&lt;a href=&quot;../../kotlin.native/set-short-at#kotlin.native%24setShortAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Short%29%2Findex&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a81ce63eb1f51f89792a8a960d7765ee7a768bb" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-short-at#kotlin.native%24setShortAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Short)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中的&lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt;设置为指定索引&lt;a href=&quot;../../kotlin.native/set-short-at#kotlin.native%24setShortAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Short)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="043a131ab8bde8809b5efb8cc71bececd6f0b920" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-char-at#kotlin.native%24setCharAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将&lt;a href=&quot;../kotlin/-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt;设置为指定索引&lt;a href=&quot;set-char-at#kotlin.native%24setCharAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;index&lt;/a&gt;处的&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区</target>
        </trans-unit>
        <trans-unit id="c450f95e4310f7aa69bef07dac69e4ffc5e2dc9d" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-char-at#kotlin.native%24setCharAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将&lt;a href=&quot;../kotlin/-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt;从指定的索引&lt;a href=&quot;set-char-at#kotlin.native%24setCharAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt;的&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中取出</target>
        </trans-unit>
        <trans-unit id="165ab1c79e9f7280a7ff5a7178cd42f19ee49e12" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-double-at#kotlin.native%24setDoubleAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Double%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">在指定索引&lt;a href=&quot;set-double-at#kotlin.native%24setDoubleAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Double%29%2Findex&quot;&gt;index&lt;/a&gt;的&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中设置&lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06545b219b3bcf3a4774c7a193e181e8a5dc0a17" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-double-at#kotlin.native%24setDoubleAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Double)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">在指定索引&lt;a href=&quot;set-double-at#kotlin.native%24setDoubleAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Double)/index&quot;&gt;index&lt;/a&gt;的&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中设置&lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66b277295ea869aa45f112638839d6a36ddd88a7" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-float-at#kotlin.native%24setFloatAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Float%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将&lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt;设置为在指定索引&lt;a href=&quot;set-float-at#kotlin.native%24setFloatAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Float%29%2Findex&quot;&gt;index&lt;/a&gt;处的&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区之外</target>
        </trans-unit>
        <trans-unit id="89cba5150a88c23ecf719b99337b394e1b101c4e" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-float-at#kotlin.native%24setFloatAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Float)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将&lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt;设置为在指定索引&lt;a href=&quot;set-float-at#kotlin.native%24setFloatAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Float)/index&quot;&gt;index&lt;/a&gt;处的&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区之外</target>
        </trans-unit>
        <trans-unit id="eeddfac7038244af25d78ade965c0d83befca8e5" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-int-at#kotlin.native%24setIntAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">在指定索引&lt;a href=&quot;set-int-at#kotlin.native%24setIntAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;的&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中设置&lt;a href=&quot;../kotlin/-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="edc54f575b056d527576804eb42f35a7a57e4e5c" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-int-at#kotlin.native%24setIntAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">在指定索引&lt;a href=&quot;set-int-at#kotlin.native%24setIntAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;的&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中设置&lt;a href=&quot;../kotlin/-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a5595b9f2b46318a666585b89bac1d7a504ef30" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-long-at#kotlin.native%24setLongAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Long%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中的&lt;a href=&quot;../kotlin/-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt;设置为指定索引&lt;a href=&quot;set-long-at#kotlin.native%24setLongAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Long%29%2Findex&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6ed8051bc57d0114b02204d54a88f06a18065698" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-long-at#kotlin.native%24setLongAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Long)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">在指定索引&lt;a href=&quot;set-long-at#kotlin.native%24setLongAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Long)/index&quot;&gt;index&lt;/a&gt;处将&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中的&lt;a href=&quot;../kotlin/-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt;设置为</target>
        </trans-unit>
        <trans-unit id="61468958fc1d048054f7da161eb41f9a095e74ff" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-short-at#kotlin.native%24setShortAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Short%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中的&lt;a href=&quot;../kotlin/-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt;设置为指定索引&lt;a href=&quot;set-short-at#kotlin.native%24setShortAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Short%29%2Findex&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd8bd4ea6807d9349c47929e568265a9f5aa283b" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-short-at#kotlin.native%24setShortAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Short)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中的&lt;a href=&quot;../kotlin/-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt;设置为指定索引&lt;a href=&quot;set-short-at#kotlin.native%24setShortAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Short)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1af430d4c7c33f49b906ac16225b3535913e1cd" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;ACC_SYNTHETIC&lt;/code&gt; flag on the annotated target in the Java bytecode.</source>
          <target state="translated">在Java字节码中带注释的目标上设置 &lt;code&gt;ACC_SYNTHETIC&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="d34e821a8392e5cf541ba4b173e3093815cd886a" translate="yes" xml:space="preserve">
          <source>Sets UByte out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-u-byte-at#kotlin.native%24setUByteAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UByte%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将UByte设置为指定索引&lt;a href=&quot;set-u-byte-at#kotlin.native%24setUByteAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UByte%29%2Findex&quot;&gt;index&lt;/a&gt;处的&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区</target>
        </trans-unit>
        <trans-unit id="e99756f6102d7e5ffdc14e2089ad3d3c005ea4a9" translate="yes" xml:space="preserve">
          <source>Sets UByte out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-u-byte-at#kotlin.native%24setUByteAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UByte)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将UByte从指定索引&lt;a href=&quot;set-u-byte-at#kotlin.native%24setUByteAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UByte)/index&quot;&gt;index&lt;/a&gt;的&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中设置</target>
        </trans-unit>
        <trans-unit id="4a5da7cc264882bdd0383657b09985b2b48c35af" translate="yes" xml:space="preserve">
          <source>Sets UByte out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-u-byte-at#kotlin.native%24setUByteAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UByte%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将UByte设置为指定索引&lt;a href=&quot;../../kotlin.native/set-u-byte-at#kotlin.native%24setUByteAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UByte%29%2Findex&quot;&gt;index&lt;/a&gt;处的&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区</target>
        </trans-unit>
        <trans-unit id="68844fe0de97af421ac92aac2a99a13416a47b01" translate="yes" xml:space="preserve">
          <source>Sets UByte out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-u-byte-at#kotlin.native%24setUByteAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UByte)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将UByte从指定索引&lt;a href=&quot;../../kotlin.native/set-u-byte-at#kotlin.native%24setUByteAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UByte)/index&quot;&gt;index&lt;/a&gt;的&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中设置</target>
        </trans-unit>
        <trans-unit id="5752ba22649c586941889dd2a62fae9914f91863" translate="yes" xml:space="preserve">
          <source>Sets UInt out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-u-int-at#kotlin.native%24setUIntAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UInt%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将UInt设置为指定索引&lt;a href=&quot;set-u-int-at#kotlin.native%24setUIntAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UInt%29%2Findex&quot;&gt;index&lt;/a&gt;处的&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区</target>
        </trans-unit>
        <trans-unit id="ed76a21791b8bd269f9560fee19c5e7c82a7d5ef" translate="yes" xml:space="preserve">
          <source>Sets UInt out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-u-int-at#kotlin.native%24setUIntAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UInt)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将UInt设置为指定索引&lt;a href=&quot;set-u-int-at#kotlin.native%24setUIntAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UInt)/index&quot;&gt;index&lt;/a&gt;处的&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区</target>
        </trans-unit>
        <trans-unit id="3cdc755ff5323ee1cc48907c601573c3854d5185" translate="yes" xml:space="preserve">
          <source>Sets UInt out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-u-int-at#kotlin.native%24setUIntAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UInt%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将UInt设置为指定索引&lt;a href=&quot;../../kotlin.native/set-u-int-at#kotlin.native%24setUIntAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UInt%29%2Findex&quot;&gt;index&lt;/a&gt;处的&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区</target>
        </trans-unit>
        <trans-unit id="b346529531c769085f80db88178aa54d57e059a2" translate="yes" xml:space="preserve">
          <source>Sets UInt out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-u-int-at#kotlin.native%24setUIntAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UInt)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将UInt设置为指定索引&lt;a href=&quot;../../kotlin.native/set-u-int-at#kotlin.native%24setUIntAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UInt)/index&quot;&gt;index&lt;/a&gt;处的&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区</target>
        </trans-unit>
        <trans-unit id="75425820919865f6e0a6f27b614d44e86b6f6faf" translate="yes" xml:space="preserve">
          <source>Sets ULong out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-u-long-at#kotlin.native%24setULongAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.ULong%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将ULong设置为指定索引&lt;a href=&quot;set-u-long-at#kotlin.native%24setULongAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.ULong%29%2Findex&quot;&gt;index&lt;/a&gt;处的&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区</target>
        </trans-unit>
        <trans-unit id="672b0c4b3472d5c2777049a28d446092dbc2aeb1" translate="yes" xml:space="preserve">
          <source>Sets ULong out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-u-long-at#kotlin.native%24setULongAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.ULong)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将ULong设置为指定索引&lt;a href=&quot;set-u-long-at#kotlin.native%24setULongAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.ULong)/index&quot;&gt;index&lt;/a&gt;处的&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区</target>
        </trans-unit>
        <trans-unit id="bb90a94951e0937badd2c5a974e39954d8e1c0fa" translate="yes" xml:space="preserve">
          <source>Sets ULong out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-u-long-at#kotlin.native%24setULongAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.ULong%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将ULong设置为指定索引&lt;a href=&quot;../../kotlin.native/set-u-long-at#kotlin.native%24setULongAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.ULong%29%2Findex&quot;&gt;index&lt;/a&gt;处的&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区</target>
        </trans-unit>
        <trans-unit id="c9a6e7c6757ff075cfb4baf97e9c29fd5abb1519" translate="yes" xml:space="preserve">
          <source>Sets ULong out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-u-long-at#kotlin.native%24setULongAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.ULong)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将ULong设置为指定索引&lt;a href=&quot;../../kotlin.native/set-u-long-at#kotlin.native%24setULongAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.ULong)/index&quot;&gt;index&lt;/a&gt;处的&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区</target>
        </trans-unit>
        <trans-unit id="7f67e637b58367e0b58957c4447941673cd92e71" translate="yes" xml:space="preserve">
          <source>Sets UShort out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-u-short-at#kotlin.native%24setUShortAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UShort%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将UShort从指定索引&lt;a href=&quot;set-u-short-at#kotlin.native%24setUShortAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UShort%29%2Findex&quot;&gt;index&lt;/a&gt;的&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中移出</target>
        </trans-unit>
        <trans-unit id="54a9a58fe67efd14af7738ce6cf03ed8501fc7ec" translate="yes" xml:space="preserve">
          <source>Sets UShort out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-u-short-at#kotlin.native%24setUShortAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UShort)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将UShort设置为指定索引&lt;a href=&quot;set-u-short-at#kotlin.native%24setUShortAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UShort)/index&quot;&gt;index&lt;/a&gt;处的&lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区之外</target>
        </trans-unit>
        <trans-unit id="728922f760b44c69e0b00d27282cd57c2b6e1fca" translate="yes" xml:space="preserve">
          <source>Sets UShort out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-u-short-at#kotlin.native%24setUShortAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UShort%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将UShort从指定索引&lt;a href=&quot;../../kotlin.native/set-u-short-at#kotlin.native%24setUShortAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UShort%29%2Findex&quot;&gt;index&lt;/a&gt;的&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区中移出</target>
        </trans-unit>
        <trans-unit id="887390d62637e60babb110b568eeec7307c21ddc" translate="yes" xml:space="preserve">
          <source>Sets UShort out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-u-short-at#kotlin.native%24setUShortAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UShort)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">将UShort设置为指定索引&lt;a href=&quot;../../kotlin.native/set-u-short-at#kotlin.native%24setUShortAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UShort)/index&quot;&gt;index&lt;/a&gt;处的&lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;字节缓冲区之外</target>
        </trans-unit>
        <trans-unit id="2900fbda2209cd97da96efa3c37d34a717e8828a" translate="yes" xml:space="preserve">
          <source>Sets a callback &lt;a href=&quot;on-leave#kotlin.io.FileTreeWalk%24onLeave%28kotlin.Function1%28%28java.io.File%2C+kotlin.Unit%29%29%29%2Ffunction&quot;&gt;function&lt;/a&gt;, that is called on any left directory after its files are visited and after it is visited itself.</source>
          <target state="translated">设置一个回调&lt;a href=&quot;on-leave#kotlin.io.FileTreeWalk%24onLeave%28kotlin.Function1%28%28java.io.File%2C+kotlin.Unit%29%29%29%2Ffunction&quot;&gt;函数&lt;/a&gt;，该函数在访问其文件之后以及在其自身访问之后在任何左目录中调用。</target>
        </trans-unit>
        <trans-unit id="7eb5a0750286bfc0bf889d4bf73533f7963fd1db" translate="yes" xml:space="preserve">
          <source>Sets a callback &lt;a href=&quot;on-leave#kotlin.io.FileTreeWalk%24onLeave(kotlin.Function1((java.io.File,%20kotlin.Unit)))/function&quot;&gt;function&lt;/a&gt;, that is called on any left directory after its files are visited and after it is visited itself.</source>
          <target state="translated">设置一个回调&lt;a href=&quot;on-leave#kotlin.io.FileTreeWalk%24onLeave(kotlin.Function1((java.io.File,%20kotlin.Unit)))/function&quot;&gt;函数&lt;/a&gt;，该函数在访问其文件之后以及在其自身访问之后在任何左目录中调用。</target>
        </trans-unit>
        <trans-unit id="b4931c0365ff304a815c6963d0bd7edb11b7c94c" translate="yes" xml:space="preserve">
          <source>Sets a predicate &lt;a href=&quot;on-enter#kotlin.io.FileTreeWalk%24onEnter%28kotlin.Function1%28%28java.io.File%2C+kotlin.Boolean%29%29%29%2Ffunction&quot;&gt;function&lt;/a&gt;, that is called on any entered directory before its files are visited and before it is visited itself.</source>
          <target state="translated">设置谓词&lt;a href=&quot;on-enter#kotlin.io.FileTreeWalk%24onEnter%28kotlin.Function1%28%28java.io.File%2C+kotlin.Boolean%29%29%29%2Ffunction&quot;&gt;函数&lt;/a&gt;，在访问任何文件及其自身之前，在任何输入的目录上都会调用它。</target>
        </trans-unit>
        <trans-unit id="cf976de53f8bfb250c57efca5d3bf77e7273c15d" translate="yes" xml:space="preserve">
          <source>Sets a predicate &lt;a href=&quot;on-enter#kotlin.io.FileTreeWalk%24onEnter(kotlin.Function1((java.io.File,%20kotlin.Boolean)))/function&quot;&gt;function&lt;/a&gt;, that is called on any entered directory before its files are visited and before it is visited itself.</source>
          <target state="translated">设置谓词&lt;a href=&quot;on-enter#kotlin.io.FileTreeWalk%24onEnter(kotlin.Function1((java.io.File,%20kotlin.Boolean)))/function&quot;&gt;函数&lt;/a&gt;，在访问其文件之前和访问其自身之前，在任何输入的目录上调用该函数。</target>
        </trans-unit>
        <trans-unit id="307c3b08228d209c4b76f0067076574f4a4d01fe" translate="yes" xml:space="preserve">
          <source>Sets all bits in the BitSet to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将BitSet中的所有位设置为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18c1c389ab129422cb72a224859d0ea272965e3c" translate="yes" xml:space="preserve">
          <source>Sets the array element at the specified &lt;a href=&quot;set#kotlin.Array%24set%28kotlin.Int%2C+kotlin.Array.T%29%2Findex&quot;&gt;index&lt;/a&gt; to the specified &lt;a href=&quot;set#kotlin.Array%24set%28kotlin.Int%2C+kotlin.Array.T%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将指定&lt;a href=&quot;set#kotlin.Array%24set%28kotlin.Int%2C+kotlin.Array.T%29%2Findex&quot;&gt;索引&lt;/a&gt;处的数组元素设置为指定&lt;a href=&quot;set#kotlin.Array%24set%28kotlin.Int%2C+kotlin.Array.T%29%2Fvalue&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="11bdf5a875cb31c1c56026618f4d6765e47fe713" translate="yes" xml:space="preserve">
          <source>Sets the array element at the specified &lt;a href=&quot;set#kotlin.Array%24set(kotlin.Int,%20kotlin.Array.T)/index&quot;&gt;index&lt;/a&gt; to the specified &lt;a href=&quot;set#kotlin.Array%24set(kotlin.Int,%20kotlin.Array.T)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将指定&lt;a href=&quot;set#kotlin.Array%24set(kotlin.Int,%20kotlin.Array.T)/index&quot;&gt;索引&lt;/a&gt;处的数组元素设置为指定&lt;a href=&quot;set#kotlin.Array%24set(kotlin.Int,%20kotlin.Array.T)/value&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="9d82a173af7eab575c81214cafeae19267b32c70" translate="yes" xml:space="preserve">
          <source>Sets the bits from the range specified to the specified value.</source>
          <target state="translated">将指定范围的位设置为指定的值。</target>
        </trans-unit>
        <trans-unit id="9899dc3d49007fa7979991a572ef97990d1ed640" translate="yes" xml:space="preserve">
          <source>Sets the bits with indices between &lt;a href=&quot;set#kotlin.native.BitSet%24set%28kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;set#kotlin.native.BitSet%24set%28kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fto&quot;&gt;to&lt;/a&gt; (exclusive) to the specified value.</source>
          <target state="translated">将索引&lt;a href=&quot;set#kotlin.native.BitSet%24set%28kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Ffrom&quot;&gt;从&lt;/a&gt;（包含）&lt;a href=&quot;set#kotlin.native.BitSet%24set%28kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fto&quot;&gt;到&lt;/a&gt;（至）之间的位设置为指定值。</target>
        </trans-unit>
        <trans-unit id="3e0a7e7a939d0ee954ab73be84ac31289295c49f" translate="yes" xml:space="preserve">
          <source>Sets the bits with indices between &lt;a href=&quot;set#kotlin.native.BitSet%24set(kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;set#kotlin.native.BitSet%24set(kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/to&quot;&gt;to&lt;/a&gt; (exclusive) to the specified value.</source>
          <target state="translated">将索引介于（&lt;a href=&quot;set#kotlin.native.BitSet%24set(kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/from&quot;&gt;从）&lt;/a&gt;（包括）&lt;a href=&quot;set#kotlin.native.BitSet%24set(kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/to&quot;&gt;到&lt;/a&gt;（从）之间的位设置为指定值。</target>
        </trans-unit>
        <trans-unit id="29eedbac3d423a05f8d6c883690bdaab95095996" translate="yes" xml:space="preserve">
          <source>Sets the character at the specified &lt;a href=&quot;../set#kotlin.text%24set%28kotlin.text.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;index&lt;/a&gt; to the specified &lt;a href=&quot;../set#kotlin.text%24set%28kotlin.text.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Fvalue&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">将指定&lt;a href=&quot;../set#kotlin.text%24set%28kotlin.text.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;索引&lt;/a&gt;处的字符设置为指定&lt;a href=&quot;../set#kotlin.text%24set%28kotlin.text.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Fvalue&quot;&gt;值&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bb0b8fa0b347b9b16fd63e06b5bd3a87260d83b6" translate="yes" xml:space="preserve">
          <source>Sets the character at the specified &lt;a href=&quot;set#kotlin.text%24set%28java.lang.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;index&lt;/a&gt; to the specified &lt;a href=&quot;set#kotlin.text%24set%28java.lang.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Fvalue&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">将指定&lt;a href=&quot;set#kotlin.text%24set%28java.lang.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;索引&lt;/a&gt;处的字符设置为指定&lt;a href=&quot;set#kotlin.text%24set%28java.lang.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Fvalue&quot;&gt;值&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="80c69316a95fe7e772cb32ac7444e561620116af" translate="yes" xml:space="preserve">
          <source>Sets the character at the specified &lt;a href=&quot;set#kotlin.text%24set%28kotlin.text.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;index&lt;/a&gt; to the specified &lt;a href=&quot;set#kotlin.text%24set%28kotlin.text.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Fvalue&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">将指定&lt;a href=&quot;set#kotlin.text%24set%28kotlin.text.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;索引&lt;/a&gt;处的字符设置为指定&lt;a href=&quot;set#kotlin.text%24set%28kotlin.text.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Fvalue&quot;&gt;值&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="10bce1fe2fc8e5fe524813204703e3ec81ffa10b" translate="yes" xml:space="preserve">
          <source>Sets the character at the specified &lt;a href=&quot;set#kotlin.text%24set(java.lang.StringBuilder,%20kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt; to the specified &lt;a href=&quot;set#kotlin.text%24set(java.lang.StringBuilder,%20kotlin.Int,%20kotlin.Char)/value&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">将指定&lt;a href=&quot;set#kotlin.text%24set(java.lang.StringBuilder,%20kotlin.Int,%20kotlin.Char)/index&quot;&gt;索引&lt;/a&gt;处的字符设置为指定&lt;a href=&quot;set#kotlin.text%24set(java.lang.StringBuilder,%20kotlin.Int,%20kotlin.Char)/value&quot;&gt;值&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0ec9235a99166a3395dbf987a29fd6263c5bc19f" translate="yes" xml:space="preserve">
          <source>Sets the character at the specified &lt;a href=&quot;set#kotlin.text%24set(kotlin.text.StringBuilder,%20kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt; to the specified &lt;a href=&quot;set#kotlin.text%24set(kotlin.text.StringBuilder,%20kotlin.Int,%20kotlin.Char)/value&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">将指定&lt;a href=&quot;set#kotlin.text%24set(kotlin.text.StringBuilder,%20kotlin.Int,%20kotlin.Char)/index&quot;&gt;索引&lt;/a&gt;处的字符设置为指定&lt;a href=&quot;set#kotlin.text%24set(kotlin.text.StringBuilder,%20kotlin.Int,%20kotlin.Char)/value&quot;&gt;值&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b414940d0d78a3695e15818127fbdab927ca87fa" translate="yes" xml:space="preserve">
          <source>Sets the character at the specified &lt;a href=&quot;set#kotlin.text.StringBuilder%24set(kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt; to the specified &lt;a href=&quot;set#kotlin.text.StringBuilder%24set(kotlin.Int,%20kotlin.Char)/value&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">将指定&lt;a href=&quot;set#kotlin.text.StringBuilder%24set(kotlin.Int,%20kotlin.Char)/index&quot;&gt;索引&lt;/a&gt;处的字符设置为指定&lt;a href=&quot;set#kotlin.text.StringBuilder%24set(kotlin.Int,%20kotlin.Char)/value&quot;&gt;值&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="185823a70e02396c0095a3ef140632cd0481c79c" translate="yes" xml:space="preserve">
          <source>Sets the content of this file as &lt;a href=&quot;write-text#kotlin.io%24writeText%28java.io.File%2C+kotlin.String%2C+java.nio.charset.Charset%29%2Ftext&quot;&gt;text&lt;/a&gt; encoded using UTF-8 or specified &lt;a href=&quot;write-text#kotlin.io%24writeText%28java.io.File%2C+kotlin.String%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;charset&lt;/a&gt;. If this file exists, it becomes overwritten.</source>
          <target state="translated">将此文件的内容设置为使用UTF-8或指定的&lt;a href=&quot;write-text#kotlin.io%24writeText%28java.io.File%2C+kotlin.String%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;charset&lt;/a&gt;编码的&lt;a href=&quot;write-text#kotlin.io%24writeText%28java.io.File%2C+kotlin.String%2C+java.nio.charset.Charset%29%2Ftext&quot;&gt;文本&lt;/a&gt;。如果该文件存在，它将被覆盖。</target>
        </trans-unit>
        <trans-unit id="1a4b3ac2c5e8ce3c7535a5909b9784f0c567beec" translate="yes" xml:space="preserve">
          <source>Sets the content of this file as &lt;a href=&quot;write-text#kotlin.io%24writeText(java.io.File,%20kotlin.String,%20java.nio.charset.Charset)/text&quot;&gt;text&lt;/a&gt; encoded using UTF-8 or specified &lt;a href=&quot;write-text#kotlin.io%24writeText(java.io.File,%20kotlin.String,%20java.nio.charset.Charset)/charset&quot;&gt;charset&lt;/a&gt;. If this file exists, it becomes overwritten.</source>
          <target state="translated">将此文件的内容设置为使用UTF-8或指定的&lt;a href=&quot;write-text#kotlin.io%24writeText(java.io.File,%20kotlin.String,%20java.nio.charset.Charset)/charset&quot;&gt;charset&lt;/a&gt;编码的&lt;a href=&quot;write-text#kotlin.io%24writeText(java.io.File,%20kotlin.String,%20java.nio.charset.Charset)/text&quot;&gt;文本&lt;/a&gt;。如果该文件存在，它将被覆盖。</target>
        </trans-unit>
        <trans-unit id="9941f1f77af3ee35fb2ffb4e3a7bcfed1b02697f" translate="yes" xml:space="preserve">
          <source>Sets the content of this file as an &lt;a href=&quot;write-bytes#kotlin.io%24writeBytes%28java.io.File%2C+kotlin.ByteArray%29%2Farray&quot;&gt;array&lt;/a&gt; of bytes. If this file already exists, it becomes overwritten.</source>
          <target state="translated">将此文件的内容设置为字节&lt;a href=&quot;write-bytes#kotlin.io%24writeBytes%28java.io.File%2C+kotlin.ByteArray%29%2Farray&quot;&gt;数组&lt;/a&gt;。如果该文件已经存在，它将被覆盖。</target>
        </trans-unit>
        <trans-unit id="ffb1528e31248e563182e4f87645cccb7efdf97a" translate="yes" xml:space="preserve">
          <source>Sets the content of this file as an &lt;a href=&quot;write-bytes#kotlin.io%24writeBytes(java.io.File,%20kotlin.ByteArray)/array&quot;&gt;array&lt;/a&gt; of bytes. If this file already exists, it becomes overwritten.</source>
          <target state="translated">将此文件的内容设置为字节&lt;a href=&quot;write-bytes#kotlin.io%24writeBytes(java.io.File,%20kotlin.ByteArray)/array&quot;&gt;数组&lt;/a&gt;。如果该文件已经存在，它将被覆盖。</target>
        </trans-unit>
        <trans-unit id="77e69f5b00ef9d6b815b0ece296a85d9aa969669" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.BooleanArray%24set%28kotlin.Int%2C+kotlin.Boolean%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.BooleanArray%24set%28kotlin.Int%2C+kotlin.Boolean%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.BooleanArray%24set%28kotlin.Int%2C+kotlin.Boolean%29%2Findex&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.BooleanArray%24set%28kotlin.Int%2C+kotlin.Boolean%29%2Fvalue&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="2babab390df5822c5686d7264a98269af33b3236" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.BooleanArray%24set(kotlin.Int,%20kotlin.Boolean)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.BooleanArray%24set(kotlin.Int,%20kotlin.Boolean)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.BooleanArray%24set(kotlin.Int,%20kotlin.Boolean)/index&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.BooleanArray%24set(kotlin.Int,%20kotlin.Boolean)/value&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="4baf2dc9994143edc877b925018d335cd4836753" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.ByteArray%24set%28kotlin.Int%2C+kotlin.Byte%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.ByteArray%24set%28kotlin.Int%2C+kotlin.Byte%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.ByteArray%24set%28kotlin.Int%2C+kotlin.Byte%29%2Findex&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.ByteArray%24set%28kotlin.Int%2C+kotlin.Byte%29%2Fvalue&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="4e5afa139eb5113571b275cd28884af1f5a7b8f8" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.ByteArray%24set(kotlin.Int,%20kotlin.Byte)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.ByteArray%24set(kotlin.Int,%20kotlin.Byte)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.ByteArray%24set(kotlin.Int,%20kotlin.Byte)/index&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.ByteArray%24set(kotlin.Int,%20kotlin.Byte)/value&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="4f10456289ed125c34024c96a9f3fced96e1084a" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.CharArray%24set%28kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.CharArray%24set%28kotlin.Int%2C+kotlin.Char%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.CharArray%24set%28kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.CharArray%24set%28kotlin.Int%2C+kotlin.Char%29%2Fvalue&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="7ed277fe7ec446ecc68bdeec6859d0dc9ea75c51" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.CharArray%24set(kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.CharArray%24set(kotlin.Int,%20kotlin.Char)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.CharArray%24set(kotlin.Int,%20kotlin.Char)/index&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.CharArray%24set(kotlin.Int,%20kotlin.Char)/value&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="9061b224d8142ce983f37941237124f97fb7de8c" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.DoubleArray%24set%28kotlin.Int%2C+kotlin.Double%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.DoubleArray%24set%28kotlin.Int%2C+kotlin.Double%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.DoubleArray%24set%28kotlin.Int%2C+kotlin.Double%29%2Findex&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.DoubleArray%24set%28kotlin.Int%2C+kotlin.Double%29%2Fvalue&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="71ba803373df6bddf59637e818448db310434892" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.DoubleArray%24set(kotlin.Int,%20kotlin.Double)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.DoubleArray%24set(kotlin.Int,%20kotlin.Double)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.DoubleArray%24set(kotlin.Int,%20kotlin.Double)/index&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.DoubleArray%24set(kotlin.Int,%20kotlin.Double)/value&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="ec29a002b4c8ae3cba11729f4f8d9d60c8ea931e" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.FloatArray%24set%28kotlin.Int%2C+kotlin.Float%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.FloatArray%24set%28kotlin.Int%2C+kotlin.Float%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.FloatArray%24set%28kotlin.Int%2C+kotlin.Float%29%2Findex&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.FloatArray%24set%28kotlin.Int%2C+kotlin.Float%29%2Fvalue&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="d5e1f3fd887a0b7cd039a2d88494a72ae355bfa9" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.FloatArray%24set(kotlin.Int,%20kotlin.Float)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.FloatArray%24set(kotlin.Int,%20kotlin.Float)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.FloatArray%24set(kotlin.Int,%20kotlin.Float)/index&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.FloatArray%24set(kotlin.Int,%20kotlin.Float)/value&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="6e8d5814f499c6b4da621128bc725e00fe86459f" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.IntArray%24set%28kotlin.Int%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.IntArray%24set%28kotlin.Int%2C+kotlin.Int%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.IntArray%24set%28kotlin.Int%2C+kotlin.Int%29%2Findex&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.IntArray%24set%28kotlin.Int%2C+kotlin.Int%29%2Fvalue&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="85c830ee1f7ab2755fc1c848357fc5ca665fc9d3" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.IntArray%24set(kotlin.Int,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.IntArray%24set(kotlin.Int,%20kotlin.Int)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.IntArray%24set(kotlin.Int,%20kotlin.Int)/index&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.IntArray%24set(kotlin.Int,%20kotlin.Int)/value&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="54f288bc8477e9a77bca52d3a82f8f513baf826b" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.LongArray%24set%28kotlin.Int%2C+kotlin.Long%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.LongArray%24set%28kotlin.Int%2C+kotlin.Long%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.LongArray%24set%28kotlin.Int%2C+kotlin.Long%29%2Findex&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.LongArray%24set%28kotlin.Int%2C+kotlin.Long%29%2Fvalue&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="1d81beb0538979a9f15a517d72744a8ba3c9935c" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.LongArray%24set(kotlin.Int,%20kotlin.Long)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.LongArray%24set(kotlin.Int,%20kotlin.Long)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.LongArray%24set(kotlin.Int,%20kotlin.Long)/index&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.LongArray%24set(kotlin.Int,%20kotlin.Long)/value&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="bba404ae951c063d7104d314046303877f1e90e3" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.ShortArray%24set%28kotlin.Int%2C+kotlin.Short%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.ShortArray%24set%28kotlin.Int%2C+kotlin.Short%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.ShortArray%24set%28kotlin.Int%2C+kotlin.Short%29%2Findex&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.ShortArray%24set%28kotlin.Int%2C+kotlin.Short%29%2Fvalue&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="39ef4889da43f0d166b015f1c98b37a9001291e0" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.ShortArray%24set(kotlin.Int,%20kotlin.Short)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.ShortArray%24set(kotlin.Int,%20kotlin.Short)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.ShortArray%24set(kotlin.Int,%20kotlin.Short)/index&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.ShortArray%24set(kotlin.Int,%20kotlin.Short)/value&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="2276370231d8bc10f6cfe6b1e5980d4b15dde8de" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.UByteArray%24set%28kotlin.Int%2C+kotlin.UByte%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.UByteArray%24set%28kotlin.Int%2C+kotlin.UByte%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.UByteArray%24set%28kotlin.Int%2C+kotlin.UByte%29%2Findex&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.UByteArray%24set%28kotlin.Int%2C+kotlin.UByte%29%2Fvalue&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="6305d64c448d1793da0e531c8323971bc8ab0254" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.UByteArray%24set(kotlin.Int,%20kotlin.UByte)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.UByteArray%24set(kotlin.Int,%20kotlin.UByte)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.UByteArray%24set(kotlin.Int,%20kotlin.UByte)/index&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.UByteArray%24set(kotlin.Int,%20kotlin.UByte)/value&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="242acce212e00f9853c222dc79085c2d4bf25a88" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.UIntArray%24set%28kotlin.Int%2C+kotlin.UInt%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.UIntArray%24set%28kotlin.Int%2C+kotlin.UInt%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.UIntArray%24set%28kotlin.Int%2C+kotlin.UInt%29%2Findex&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.UIntArray%24set%28kotlin.Int%2C+kotlin.UInt%29%2Fvalue&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="794e2cd772fa9942609b7071a82803d64ad03308" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.UIntArray%24set(kotlin.Int,%20kotlin.UInt)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.UIntArray%24set(kotlin.Int,%20kotlin.UInt)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.UIntArray%24set(kotlin.Int,%20kotlin.UInt)/index&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.UIntArray%24set(kotlin.Int,%20kotlin.UInt)/value&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="9c8d086faad98cba0d4d2474417843e8c2654c33" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.ULongArray%24set%28kotlin.Int%2C+kotlin.ULong%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.ULongArray%24set%28kotlin.Int%2C+kotlin.ULong%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.ULongArray%24set%28kotlin.Int%2C+kotlin.ULong%29%2Findex&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.ULongArray%24set%28kotlin.Int%2C+kotlin.ULong%29%2Fvalue&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="904a988924bb211f33eba0e9cd82c5d46493d1da" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.ULongArray%24set(kotlin.Int,%20kotlin.ULong)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.ULongArray%24set(kotlin.Int,%20kotlin.ULong)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.ULongArray%24set(kotlin.Int,%20kotlin.ULong)/index&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.ULongArray%24set(kotlin.Int,%20kotlin.ULong)/value&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="83d722d43b55121439e406624afd6b4f5e5e2bf2" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.UShortArray%24set%28kotlin.Int%2C+kotlin.UShort%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.UShortArray%24set%28kotlin.Int%2C+kotlin.UShort%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.UShortArray%24set%28kotlin.Int%2C+kotlin.UShort%29%2Findex&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.UShortArray%24set%28kotlin.Int%2C+kotlin.UShort%29%2Fvalue&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="fa76fc967017b032e8d1c2cdf69db3e8dfc8de3f" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.UShortArray%24set(kotlin.Int,%20kotlin.UShort)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.UShortArray%24set(kotlin.Int,%20kotlin.UShort)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">将给定&lt;a href=&quot;set#kotlin.UShortArray%24set(kotlin.Int,%20kotlin.UShort)/index&quot;&gt;索引&lt;/a&gt;处的元素设置为给定&lt;a href=&quot;set#kotlin.UShortArray%24set(kotlin.Int,%20kotlin.UShort)/value&quot;&gt;值&lt;/a&gt;。可以使用索引运算符调用此方法。</target>
        </trans-unit>
        <trans-unit id="9116fb48f18f595cee1aa0ef86a9704539523b3e" translate="yes" xml:space="preserve">
          <source>Sets the length of this string builder to the specified &lt;a href=&quot;set-length#kotlin.text.StringBuilder%24setLength(kotlin.Int)/newLength&quot;&gt;newLength&lt;/a&gt;.</source>
          <target state="translated">将此字符串生成器的长度设置为指定的&lt;a href=&quot;set-length#kotlin.text.StringBuilder%24setLength(kotlin.Int)/newLength&quot;&gt;newLength&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cdbfa1a2b3fcbca7289df75f3d9da6a49af783aa" translate="yes" xml:space="preserve">
          <source>Sets the maximum &lt;a href=&quot;max-depth#kotlin.io.FileTreeWalk%24maxDepth%28kotlin.Int%29%2Fdepth&quot;&gt;depth&lt;/a&gt; of a directory tree to traverse. By default there is no limit.</source>
          <target state="translated">设置要遍历的目录树的最大&lt;a href=&quot;max-depth#kotlin.io.FileTreeWalk%24maxDepth%28kotlin.Int%29%2Fdepth&quot;&gt;深度&lt;/a&gt;。默认情况下没有限制。</target>
        </trans-unit>
        <trans-unit id="67f6c7ce4f2baaa750ec29f2ef6b8526fae822b9" translate="yes" xml:space="preserve">
          <source>Sets the maximum &lt;a href=&quot;max-depth#kotlin.io.FileTreeWalk%24maxDepth(kotlin.Int)/depth&quot;&gt;depth&lt;/a&gt; of a directory tree to traverse. By default there is no limit.</source>
          <target state="translated">设置要遍历的目录树的最大&lt;a href=&quot;max-depth#kotlin.io.FileTreeWalk%24maxDepth(kotlin.Int)/depth&quot;&gt;深度&lt;/a&gt;。默认情况下没有限制。</target>
        </trans-unit>
        <trans-unit id="7f557c804ed296d322f4a5e5bfe00660a8f6e3a4" translate="yes" xml:space="preserve">
          <source>Sets the next value in the iteration, called from the &lt;a href=&quot;compute-next&quot;&gt;computeNext&lt;/a&gt; function</source>
          <target state="translated">设置迭代中的下一个值，从&lt;a href=&quot;compute-next&quot;&gt;computeNext&lt;/a&gt;函数调用</target>
        </trans-unit>
        <trans-unit id="4250580fbd524d1fd8d6ec08be759b582c4fb702" translate="yes" xml:space="preserve">
          <source>Sets the state to done so that the iteration terminates.</source>
          <target state="translated">将状态设置为 done,这样迭代就结束了。</target>
        </trans-unit>
        <trans-unit id="612c0835d62f2410d2f8de6e6d5fc77a9b31d932" translate="yes" xml:space="preserve">
          <source>Sets the value of the property for the given object.</source>
          <target state="translated">设置给定对象的属性值。</target>
        </trans-unit>
        <trans-unit id="9c35e499a0854cb5e1b033a2aea56399d4cfd894" translate="yes" xml:space="preserve">
          <source>Setter</source>
          <target state="translated">Setter</target>
        </trans-unit>
        <trans-unit id="da16c3cc3bfdcae6d86bd6879d30abd5784e4921" translate="yes" xml:space="preserve">
          <source>Setter of the property is a &lt;code&gt;set&lt;/code&gt; method declared alongside the property.</source>
          <target state="translated">属性的Setter是在属性旁边声明的 &lt;code&gt;set&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="2a57ff5fd34c53aa02935c137725d57e985fbf2e" translate="yes" xml:space="preserve">
          <source>Setters</source>
          <target state="translated">Setters</target>
        </trans-unit>
        <trans-unit id="795e6d53d5731fd7b921da0b1d365fac3636f285" translate="yes" xml:space="preserve">
          <source>Setters and getters</source>
          <target state="translated">设置器和获取器</target>
        </trans-unit>
        <trans-unit id="d099d87160d087f60ade9cb21fa5440ff2125280" translate="yes" xml:space="preserve">
          <source>Setting Up the Local Environment</source>
          <target state="translated">设置本地环境</target>
        </trans-unit>
        <trans-unit id="c44f26d2bfdb853b861ef2282603dadd2c943781" translate="yes" xml:space="preserve">
          <source>Setting this in a Gradle DSL:</source>
          <target state="translated">在Gradle DSL中设置这个。</target>
        </trans-unit>
        <trans-unit id="1d9561629ffffcf08f870d78c8cba9699aaf1728" translate="yes" xml:space="preserve">
          <source>Setting up Framework Dependency in Xcode</source>
          <target state="translated">在Xcode中设置框架依赖性</target>
        </trans-unit>
        <trans-unit id="601eff2654656e13db208f79616084dab833fb1f" translate="yes" xml:space="preserve">
          <source>Setting up Targets</source>
          <target state="translated">设置目标</target>
        </trans-unit>
        <trans-unit id="f27242b25e228df6b15975fcf5c1aed13839ea95" translate="yes" xml:space="preserve">
          <source>Setting up Xcode</source>
          <target state="translated">设置Xcode</target>
        </trans-unit>
        <trans-unit id="b715fad354473ecfc8fd7dc0beda3a90f35d6cae" translate="yes" xml:space="preserve">
          <source>Setting up a Kotlin/JS project</source>
          <target state="translated">设置一个Kotlin/JS项目</target>
        </trans-unit>
        <trans-unit id="729b164a15e1528ee04709ca227eb8126e79e0e9" translate="yes" xml:space="preserve">
          <source>Setting up a Multiplatform Project</source>
          <target state="translated">建立一个多平台项目</target>
        </trans-unit>
        <trans-unit id="4b75b737e7019beac88da840b9c4fa621cc15e9b" translate="yes" xml:space="preserve">
          <source>Setting up a project</source>
          <target state="translated">建立一个项目</target>
        </trans-unit>
        <trans-unit id="dfe5b993bb5b873cf296bfd1dec95400d302bb2f" translate="yes" xml:space="preserve">
          <source>Setting up the environment</source>
          <target state="translated">设置环境</target>
        </trans-unit>
        <trans-unit id="c676a8afec5bd640eea3d16f369b18ff86f79446" translate="yes" xml:space="preserve">
          <source>Setting up the local environment</source>
          <target state="translated">设置本地环境</target>
        </trans-unit>
        <trans-unit id="c7f73bb54d928922c3838bb789ee9fb8a5b1eb37" translate="yes" xml:space="preserve">
          <source>Settings</source>
          <target state="translated">Settings</target>
        </trans-unit>
        <trans-unit id="89a5ab56adeb4ad20f46a74711635d7a3b3c6f17" translate="yes" xml:space="preserve">
          <source>Setup Kotlin Compilation Step</source>
          <target state="translated">设置Kotlin编译步骤</target>
        </trans-unit>
        <trans-unit id="f7fd968c0a5ce680afda4eb915e615fd82b3a5d5" translate="yes" xml:space="preserve">
          <source>Setup Kotlin Compiler Fetching Step</source>
          <target state="translated">设置Kotlin编译器获取步骤</target>
        </trans-unit>
        <trans-unit id="1cd15bb14bf553822a7d00ea242fd63abf35e644" translate="yes" xml:space="preserve">
          <source>Setup for the whole project: Open File -&amp;gt; Settings, select &quot;Build, Execution, Deployment&quot; -&amp;gt; &quot;Compiler&quot; -&amp;gt; &quot;Kotlin compiler&quot;. Choose appropriate module system in &quot;Module kind&quot; field.</source>
          <target state="translated">整个项目的设置：打开文件-&amp;gt;设置，选择&amp;ldquo;构建，执行，部署&amp;rdquo;-&amp;gt;&amp;ldquo;编译器&amp;rdquo;-&amp;gt;&amp;ldquo; Kotlin编译器&amp;rdquo;。在&amp;ldquo;模块种类&amp;rdquo;字段中选择适当的模块系统。</target>
        </trans-unit>
        <trans-unit id="f0f08df8a582b1b5aaacc0eb420e8df1267b5d20" translate="yes" xml:space="preserve">
          <source>Setup per module: Open File -&amp;gt; Project Structure&amp;hellip;, find your module in Modules and select &quot;Kotlin&quot; facet under it. Choose appropriate module system in &quot;Module kind&quot; field.</source>
          <target state="translated">每个模块的设置：打开文件-&amp;gt;项目结构&amp;hellip;，在模块中找到您的模块，然后选择其下的&amp;ldquo; Kotlin&amp;rdquo;构面。在&amp;ldquo;模块种类&amp;rdquo;字段中选择适当的模块系统。</target>
        </trans-unit>
        <trans-unit id="e85ac6caafc3dc694f3d37ae03f6e0e397a05a87" translate="yes" xml:space="preserve">
          <source>Seven-bit ASCII, a.k.a. ISO646-US, a.k.a. the Basic Latin block of the Unicode character set.</source>
          <target state="translated">七位ASCII,也就是ISO646-US,也就是Unicode字符集的基本拉丁文块。</target>
        </trans-unit>
        <trans-unit id="49e3d1a9dab6c92ac188fd37739bbc3983030b47" translate="yes" xml:space="preserve">
          <source>Several JS targets</source>
          <target state="translated">几个JS目标</target>
        </trans-unit>
        <trans-unit id="b553225655b90bb7bd535a4dc077d2f9ca1a25fe" translate="yes" xml:space="preserve">
          <source>Several JVM targets</source>
          <target state="translated">几个JVM目标</target>
        </trans-unit>
        <trans-unit id="7b29b4dba7f56bc1e20beeabf8e2e4afde6e1578" translate="yes" xml:space="preserve">
          <source>Several examples</source>
          <target state="translated">几个例子</target>
        </trans-unit>
        <trans-unit id="64bd19ac1efdbed98cfdd136403a1a66f1e6da2a" translate="yes" xml:space="preserve">
          <source>Several functions now work on null receivers, for example:</source>
          <target state="translated">现在有几个功能可以在空接收机上使用,例如。</target>
        </trans-unit>
        <trans-unit id="6b48a6c117f5beb6359de584b0c0262c2f5ac127" translate="yes" xml:space="preserve">
          <source>Several last lists may have less elements than the given &lt;a href=&quot;windowed#kotlin.collections%24windowed%28kotlin.collections.Iterable%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">最后几个列表的元素可能少于给定的&lt;a href=&quot;windowed#kotlin.collections%24windowed%28kotlin.collections.Iterable%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5621b426f36585f7c27b3b195296e11573e93c66" translate="yes" xml:space="preserve">
          <source>Several last lists may have less elements than the given &lt;a href=&quot;windowed#kotlin.collections%24windowed(kotlin.collections.Iterable((kotlin.collections.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">最后几个列表的元素可能少于给定的&lt;a href=&quot;windowed#kotlin.collections%24windowed(kotlin.collections.Iterable((kotlin.collections.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3dc2911d06598db01df02e69e45148f8fafc2630" translate="yes" xml:space="preserve">
          <source>Several last lists may have less elements than the given &lt;a href=&quot;windowed#kotlin.sequences%24windowed%28kotlin.sequences.Sequence%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">最后几个列表的元素可能少于给定的&lt;a href=&quot;windowed#kotlin.sequences%24windowed%28kotlin.sequences.Sequence%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3caecaa64d53476eff29e5609bcb7cea54f8f926" translate="yes" xml:space="preserve">
          <source>Several last lists may have less elements than the given &lt;a href=&quot;windowed#kotlin.sequences%24windowed(kotlin.sequences.Sequence((kotlin.sequences.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">最后几个列表的元素可能少于给定的&lt;a href=&quot;windowed#kotlin.sequences%24windowed(kotlin.sequences.Sequence((kotlin.sequences.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6876468af6c5e87e9f6d208540b74e1e7a8befa7" translate="yes" xml:space="preserve">
          <source>Several last strings may have less characters than the given &lt;a href=&quot;windowed#kotlin.text%24windowed%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">最后几个字符串的字符数可能少于给定的&lt;a href=&quot;windowed#kotlin.text%24windowed%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="22493d5bafb3b925e08d997a0170c41745778cbf" translate="yes" xml:space="preserve">
          <source>Several last strings may have less characters than the given &lt;a href=&quot;windowed#kotlin.text%24windowed(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">最后几个字符串的字符数可能少于给定的&lt;a href=&quot;windowed#kotlin.text%24windowed(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ebb92729220424707666ea7db0750140ac89ed3f" translate="yes" xml:space="preserve">
          <source>Several last strings may have less characters than the given &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">最后几个字符串的字符数可能少于给定的&lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="90a09fd805b49360cc7fbddf97955799c8707c28" translate="yes" xml:space="preserve">
          <source>Several last strings may have less characters than the given &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">最后几个字符串的字符数可能少于给定的&lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="813a34b3a59a3ac492c103196888e0f76e842e38" translate="yes" xml:space="preserve">
          <source>Severity of the diagnostic that should be reported on usages of experimental API which did not explicitly accept the experimental aspect of that API either by using &lt;a href=&quot;../-use-experimental/index&quot;&gt;UseExperimental&lt;/a&gt; or by being annotated with the corresponding marker annotation.</source>
          <target state="translated">诊断的严重性，应针对使用实验API的使用情况进行报告，该诊断未通过使用&lt;a href=&quot;../-use-experimental/index&quot;&gt;UseExperimental&lt;/a&gt;或通过相应的标记注释进行注释而未明确接受该API的实验方面。</target>
        </trans-unit>
        <trans-unit id="d1099b140c2cdd7a815583675ff5a73a0c8b9ec7" translate="yes" xml:space="preserve">
          <source>Severity of the diagnostic that should be reported on usages of experimental API which did not explicitly accept the experimental aspect of that API either by using &lt;a href=&quot;../../-use-experimental/index&quot;&gt;UseExperimental&lt;/a&gt; or by being annotated with the corresponding marker annotation.</source>
          <target state="translated">诊断的严重性，应针对使用实验API的使用情况进行报告，该诊断未通过使用&lt;a href=&quot;../../-use-experimental/index&quot;&gt;UseExperimental&lt;/a&gt;或通过相应的标记注释进行注释而未明确接受该API的实验方面。</target>
        </trans-unit>
        <trans-unit id="f0b3e0d77c505ed2a04e6a558550e5efdad728ca" translate="yes" xml:space="preserve">
          <source>Severity of the diagnostic that should be reported on usages which did not explicitly opted into the API either by using &lt;a href=&quot;../-opt-in/index&quot;&gt;OptIn&lt;/a&gt; or by being annotated with the corresponding marker annotation.</source>
          <target state="translated">诊断的严重性，应针对通过使用&lt;a href=&quot;../-opt-in/index&quot;&gt;OptIn&lt;/a&gt;或通过使用相应的标记注释进行注释而未明确选择加入API的用法进行报告。</target>
        </trans-unit>
        <trans-unit id="775dffe79527314c57e2e64083571a108202d01c" translate="yes" xml:space="preserve">
          <source>Severity of the diagnostic that should be reported on usages which did not explicitly opted into the API either by using &lt;a href=&quot;../../-opt-in/index&quot;&gt;OptIn&lt;/a&gt; or by being annotated with the corresponding marker annotation.</source>
          <target state="translated">诊断的严重性，应针对通过使用&lt;a href=&quot;../../-opt-in/index&quot;&gt;OptIn&lt;/a&gt;或通过使用相应的标记注释进行注释而未明确选择加入API的用法进行报告。</target>
        </trans-unit>
        <trans-unit id="836b05c7633a1e30ae532de9ebb894d7f73b61c8" translate="yes" xml:space="preserve">
          <source>ShadowAnimation</source>
          <target state="translated">ShadowAnimation</target>
        </trans-unit>
        <trans-unit id="c52b8fac4d1546004d36036314634bdacdd53b08" translate="yes" xml:space="preserve">
          <source>ShadowRootInit</source>
          <target state="translated">ShadowRootInit</target>
        </trans-unit>
        <trans-unit id="a309f22f502741e5b5409272ba7d0d45e894ec55" translate="yes" xml:space="preserve">
          <source>ShadowRootMode</source>
          <target state="translated">ShadowRootMode</target>
        </trans-unit>
        <trans-unit id="4c3cc9f3e81e4b1cb4a6e8fc82a34e8fcfb6ffb2" translate="yes" xml:space="preserve">
          <source>Share code in libraries</source>
          <target state="translated">在库中共享代码</target>
        </trans-unit>
        <trans-unit id="ef2d45495b0615a3e7a06b0577495856255d2d11" translate="yes" xml:space="preserve">
          <source>Share code on all platforms</source>
          <target state="translated">在所有平台上共享代码</target>
        </trans-unit>
        <trans-unit id="7c5b714bfe6235530e184e90c84e004cfdefe6b2" translate="yes" xml:space="preserve">
          <source>Share code on multiple platforms</source>
          <target state="translated">在多个平台上共享代码</target>
        </trans-unit>
        <trans-unit id="9713e84f2aa340514e12218c73f167a4c8391d4d" translate="yes" xml:space="preserve">
          <source>Share code on platforms</source>
          <target state="translated">在平台上共享代码</target>
        </trans-unit>
        <trans-unit id="10222327bf9dc6ef067a70361984b816ef7cee06" translate="yes" xml:space="preserve">
          <source>Share code on similar platforms</source>
          <target state="translated">在类似平台上共享代码</target>
        </trans-unit>
        <trans-unit id="db79c07cf0a0cefafe30ccd1fc8c954e9f3aad6e" translate="yes" xml:space="preserve">
          <source>Shared Mutable State and Concurrency</source>
          <target state="translated">共享可互换状态和并发性</target>
        </trans-unit>
        <trans-unit id="99ab53cb0cb685208705861a69fff66a527d7f26" translate="yes" xml:space="preserve">
          <source>Shared library.</source>
          <target state="translated">共享图书馆。</target>
        </trans-unit>
        <trans-unit id="5aa53b857601ecf23027dcc72fd5e23b6e4d90ca" translate="yes" xml:space="preserve">
          <source>Shared mutable state and concurrency</source>
          <target state="translated">共享的可变状态和并发性</target>
        </trans-unit>
        <trans-unit id="34deab973b5850a0057d543d3df4b4e639f53a7e" translate="yes" xml:space="preserve">
          <source>Shared native library</source>
          <target state="translated">共享本地图书馆</target>
        </trans-unit>
        <trans-unit id="5ef7f5e4f7f5fcb21c29e25a4231957e0c1d6ca3" translate="yes" xml:space="preserve">
          <source>SharedImmutable</source>
          <target state="translated">SharedImmutable</target>
        </trans-unit>
        <trans-unit id="c7977120bf6bcc880df4fe01f7ce83934ed43158" translate="yes" xml:space="preserve">
          <source>Sharing Code between Platforms</source>
          <target state="translated">平台间共享代码</target>
        </trans-unit>
        <trans-unit id="dbe8ea8f6f902897a352043f04fbfba2b7660deb" translate="yes" xml:space="preserve">
          <source>Sharing Kotlin code between iOS and Android</source>
          <target state="translated">在iOS和Android之间共享Kotlin代码</target>
        </trans-unit>
        <trans-unit id="3f04d40398ebd1f6a2cabd19b6ba50ea2f6b3801" translate="yes" xml:space="preserve">
          <source>Sharing Kotlin library between JVM, JS and Native worlds</source>
          <target state="translated">在JVM、JS和Native世界之间共享Kotlin库。</target>
        </trans-unit>
        <trans-unit id="297325326f8f9abbd333d90d941d1753331ba09a" translate="yes" xml:space="preserve">
          <source>Sharing code between mobile platforms is one of the major Kotlin Multiplatform use cases, and it is now possible to build mobile applications with parts of the code, such as business logic, connectivity, and more, shared between Android and iOS.</source>
          <target state="translated">在移动平台之间共享代码是Kotlin多平台的主要用例之一,现在可以在Android和iOS之间共享部分代码,如业务逻辑、连接性等,构建移动应用。</target>
        </trans-unit>
        <trans-unit id="040aff8ea8ac51b983400c9879fd1997543e1034" translate="yes" xml:space="preserve">
          <source>Sharing code between mobile platforms is one of the major Kotlin Multiplatform use cases. With Kotlin Multiplatform Mobile (KMM), you can build multiplatform mobile applications sharing code, such as business logic, connectivity, and more, between Android and iOS.</source>
          <target state="translated">在移动平台之间共享代码是Kotlin Multiplatform的主要用例之一。通过Kotlin Multiplatform Mobile (KMM),您可以在Android和iOS之间构建多平台移动应用共享代码,如业务逻辑、连接性等。</target>
        </trans-unit>
        <trans-unit id="051c4d62ebae6a7b7b80ef891d89eb1bf6a2550d" translate="yes" xml:space="preserve">
          <source>Sharing code between platforms is a powerful technique, but it may be hard to accomplish without rich APIs that we have in Android, JVM, or iOS platforms. Multiplatform libraries can be used to fix that. They bring rich APIs directly in the common Kotlin code. There are several examples of such libraries:</source>
          <target state="translated">平台间的代码共享是一种强大的技术,但如果没有丰富的API,我们在Android、JVM或iOS平台上可能很难实现。多平台库可以用来解决这个问题。它们直接在普通的Kotlin代码中带来丰富的API。这种库有几个例子。</target>
        </trans-unit>
        <trans-unit id="ff97c9648486f6f9e0e420e818439aa99a44aac8" translate="yes" xml:space="preserve">
          <source>Sharing code in several targets with the hierarchical project structure</source>
          <target state="translated">用层次化的项目结构在多个目标中共享代码。</target>
        </trans-unit>
        <trans-unit id="1de7f8359460e124966f478d8ff0b1101ad84358" translate="yes" xml:space="preserve">
          <source>Shifts this value left by the &lt;a href=&quot;shl#kotlin%24shl%28java.math.BigInteger%2C+kotlin.Int%29%2Fn&quot;&gt;n&lt;/a&gt; number of bits.</source>
          <target state="translated">将此值左移&lt;a href=&quot;shl#kotlin%24shl%28java.math.BigInteger%2C+kotlin.Int%29%2Fn&quot;&gt;n&lt;/a&gt;位。</target>
        </trans-unit>
        <trans-unit id="e18c349d9d803dcdf12d6d95cc7a992d1e495967" translate="yes" xml:space="preserve">
          <source>Shifts this value left by the &lt;a href=&quot;shl#kotlin%24shl(java.math.BigInteger,%20kotlin.Int)/n&quot;&gt;n&lt;/a&gt; number of bits.</source>
          <target state="translated">将此值左移&lt;a href=&quot;shl#kotlin%24shl(java.math.BigInteger,%20kotlin.Int)/n&quot;&gt;n&lt;/a&gt;位。</target>
        </trans-unit>
        <trans-unit id="fa89bbf50fa31925246bd02a77f7c8660177c18c" translate="yes" xml:space="preserve">
          <source>Shifts this value left by the &lt;a href=&quot;shl#kotlin.Int%24shl%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">将此值左移&lt;a href=&quot;shl#kotlin.Int%24shl%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt;个位数。</target>
        </trans-unit>
        <trans-unit id="051aa5c8a217e0ec9d611e61f79ea0c7d2ce2986" translate="yes" xml:space="preserve">
          <source>Shifts this value left by the &lt;a href=&quot;shl#kotlin.Int%24shl(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">将此值左移&lt;a href=&quot;shl#kotlin.Int%24shl(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt;个位数。</target>
        </trans-unit>
        <trans-unit id="91a11dfe9061ef195b8867f7a99bdfcb07185b19" translate="yes" xml:space="preserve">
          <source>Shifts this value left by the &lt;a href=&quot;shl#kotlin.Long%24shl%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">将此值左移&lt;a href=&quot;shl#kotlin.Long%24shl%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt;个位数。</target>
        </trans-unit>
        <trans-unit id="b5c023ee929b72a1da0f01bf4beaaf2ef287ac6d" translate="yes" xml:space="preserve">
          <source>Shifts this value left by the &lt;a href=&quot;shl#kotlin.Long%24shl(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">将此值左移&lt;a href=&quot;shl#kotlin.Long%24shl(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt;个位数。</target>
        </trans-unit>
        <trans-unit id="55ad8fceb560e16ef264e86683f6269f57215026" translate="yes" xml:space="preserve">
          <source>Shifts this value left by the &lt;a href=&quot;shl#kotlin.UInt%24shl%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">将此值左移&lt;a href=&quot;shl#kotlin.UInt%24shl%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt;个位数。</target>
        </trans-unit>
        <trans-unit id="934a09c8634537e896c7984ad292f677367fa71f" translate="yes" xml:space="preserve">
          <source>Shifts this value left by the &lt;a href=&quot;shl#kotlin.UInt%24shl(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">将此值左移&lt;a href=&quot;shl#kotlin.UInt%24shl(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt;个位数。</target>
        </trans-unit>
        <trans-unit id="c5f970689157bbb4098e02ad8befbb51472db7a6" translate="yes" xml:space="preserve">
          <source>Shifts this value left by the &lt;a href=&quot;shl#kotlin.ULong%24shl%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">将此值左移&lt;a href=&quot;shl#kotlin.ULong%24shl%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt;个位数。</target>
        </trans-unit>
        <trans-unit id="2fc061c02031c8f176116c052cdfb7debc6f340a" translate="yes" xml:space="preserve">
          <source>Shifts this value left by the &lt;a href=&quot;shl#kotlin.ULong%24shl(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">将此值左移&lt;a href=&quot;shl#kotlin.ULong%24shl(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt;个位数。</target>
        </trans-unit>
        <trans-unit id="561765590bf462448174dfa2c676fabfb9613e7b" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;shr#kotlin%24shr%28java.math.BigInteger%2C+kotlin.Int%29%2Fn&quot;&gt;n&lt;/a&gt; number of bits, filling the leftmost bits with copies of the sign bit.</source>
          <target state="translated">向右移动此值&lt;a href=&quot;shr#kotlin%24shr%28java.math.BigInteger%2C+kotlin.Int%29%2Fn&quot;&gt;n&lt;/a&gt;个位数，用符号位的副本填充最左边的位。</target>
        </trans-unit>
        <trans-unit id="aadddb64dd479921e4755df0ea34e90fe382f413" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;shr#kotlin%24shr(java.math.BigInteger,%20kotlin.Int)/n&quot;&gt;n&lt;/a&gt; number of bits, filling the leftmost bits with copies of the sign bit.</source>
          <target state="translated">向右移动此值&lt;a href=&quot;shr#kotlin%24shr(java.math.BigInteger,%20kotlin.Int)/n&quot;&gt;n&lt;/a&gt;位，用符号位的副本填充最左边的位。</target>
        </trans-unit>
        <trans-unit id="cc68bba5cb4fdf70f538ef2cd32e3d9ca3a6f230" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;shr#kotlin.Int%24shr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with copies of the sign bit.</source>
          <target state="translated">将这个值右移&lt;a href=&quot;shr#kotlin.Int%24shr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt;个位数，用符号位的副本填充最左边的位。</target>
        </trans-unit>
        <trans-unit id="dafd852bc623b74f6fd053452c3c6439f19df874" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;shr#kotlin.Int%24shr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with copies of the sign bit.</source>
          <target state="translated">将该值右移&lt;a href=&quot;shr#kotlin.Int%24shr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt;个位数，用符号位的副本填充最左边的位。</target>
        </trans-unit>
        <trans-unit id="a3c9d6c2dfd7c1b329f5c2e52f9e86c783409844" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;shr#kotlin.Long%24shr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with copies of the sign bit.</source>
          <target state="translated">将这个值右移&lt;a href=&quot;shr#kotlin.Long%24shr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt;个位数，用符号位的副本填充最左边的位。</target>
        </trans-unit>
        <trans-unit id="6572cc2ffe76dea42378501dd3bba7f2258421c2" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;shr#kotlin.Long%24shr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with copies of the sign bit.</source>
          <target state="translated">将该值右移&lt;a href=&quot;shr#kotlin.Long%24shr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt;个位数，用符号位的副本填充最左边的位。</target>
        </trans-unit>
        <trans-unit id="205604884176d4ce45ddfadcf924ca5e75925d36" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;shr#kotlin.UInt%24shr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with zeros.</source>
          <target state="translated">将该值右移&lt;a href=&quot;shr#kotlin.UInt%24shr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt;个位数，用零填充最左边的位。</target>
        </trans-unit>
        <trans-unit id="8c4c0458171a3c19a67bce0f5307950efe019685" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;shr#kotlin.UInt%24shr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with zeros.</source>
          <target state="translated">将该值右移&lt;a href=&quot;shr#kotlin.UInt%24shr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt;个位数，用零填充最左边的位。</target>
        </trans-unit>
        <trans-unit id="975363933f601796162b5dcd9c49eefffe3d4646" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;shr#kotlin.ULong%24shr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with zeros.</source>
          <target state="translated">将该值右移&lt;a href=&quot;shr#kotlin.ULong%24shr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt;个位数，用零填充最左边的位。</target>
        </trans-unit>
        <trans-unit id="1fe7a4df7aa408c8541435b702bfe22549c0a3ff" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;shr#kotlin.ULong%24shr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with zeros.</source>
          <target state="translated">将该值右移&lt;a href=&quot;shr#kotlin.ULong%24shr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt;个位数，用零填充最左边的位。</target>
        </trans-unit>
        <trans-unit id="1320613fcb4e3ad05b5a1fb529d5aa02782a35b6" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;ushr#kotlin.Int%24ushr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with zeros.</source>
          <target state="translated">将该值右移&lt;a href=&quot;ushr#kotlin.Int%24ushr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt;个位数，用零填充最左边的位。</target>
        </trans-unit>
        <trans-unit id="7cbc62bc90122a4b2b6c0a5c4949e7918e7cb901" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;ushr#kotlin.Int%24ushr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with zeros.</source>
          <target state="translated">将该值右移&lt;a href=&quot;ushr#kotlin.Int%24ushr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt;个位数，用零填充最左边的位。</target>
        </trans-unit>
        <trans-unit id="de121cd2bd1ef2196f936dbff0fb5367f384adab" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;ushr#kotlin.Long%24ushr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with zeros.</source>
          <target state="translated">将该值右移&lt;a href=&quot;ushr#kotlin.Long%24ushr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt;个位数，用零填充最左边的位。</target>
        </trans-unit>
        <trans-unit id="b35b08bfc783731f0590e83b5330982c8de4b904" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;ushr#kotlin.Long%24ushr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with zeros.</source>
          <target state="translated">将该值右移&lt;a href=&quot;ushr#kotlin.Long%24ushr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt;个位数，用零填充最左边的位。</target>
        </trans-unit>
        <trans-unit id="0fe7d82f25a3015040a206e54f9c1d3a9717c4c4" translate="yes" xml:space="preserve">
          <source>Short</source>
          <target state="translated">Short</target>
        </trans-unit>
        <trans-unit id="f1be0a77e24659d844b1d829e319473c64b3d92c" translate="yes" xml:space="preserve">
          <source>Short comments can be placed on a single line:</source>
          <target state="translated">简短的注释可以放在单行上。</target>
        </trans-unit>
        <trans-unit id="bb95645acf79d381a75848afbb852798210eb222" translate="yes" xml:space="preserve">
          <source>ShortArray</source>
          <target state="translated">ShortArray</target>
        </trans-unit>
        <trans-unit id="6908df3352349f003ba7c1e2bdfd0ab1d663f541" translate="yes" xml:space="preserve">
          <source>ShortIterator</source>
          <target state="translated">ShortIterator</target>
        </trans-unit>
        <trans-unit id="daaa8e58fde19c5641d9f419edefbe96acf6a0fc" translate="yes" xml:space="preserve">
          <source>ShortVar</source>
          <target state="translated">ShortVar</target>
        </trans-unit>
        <trans-unit id="a18072aa811b8ffe818664ff6ba45b9d51d7c523" translate="yes" xml:space="preserve">
          <source>ShortVarOf</source>
          <target state="translated">ShortVarOf</target>
        </trans-unit>
        <trans-unit id="240898f9447d350a1c2443d35798203546e2999e" translate="yes" xml:space="preserve">
          <source>Shorter syntax for properties</source>
          <target state="translated">更短的属性语法</target>
        </trans-unit>
        <trans-unit id="af61674ca511f597dfdc94a24bcd892cf0f59c64" translate="yes" xml:space="preserve">
          <source>Should compiler generated code call the main function</source>
          <target state="translated">编译器生成的代码是否应该调用主函数</target>
        </trans-unit>
        <trans-unit id="bd3a4790f87213724ab01ea7106b01dcae4d3214" translate="yes" xml:space="preserve">
          <source>Show your name backwards</source>
          <target state="translated">向后显示你的名字</target>
        </trans-unit>
        <trans-unit id="ad81adfa3e182e6e5c1f09169b9e8963d98edb1b" translate="yes" xml:space="preserve">
          <source>Sign and absolute value:</source>
          <target state="translated">符号和绝对值。</target>
        </trans-unit>
        <trans-unit id="eb82e12ce844f585fa316d6e9d0d950c6bdedc17" translate="yes" xml:space="preserve">
          <source>Signals that the annotated annotation class is a marker of an API that requires an explicit opt-in.</source>
          <target state="translated">标志着被注解的注解类是一个需要显式选入的API的标记。</target>
        </trans-unit>
        <trans-unit id="9902ec5a921b75c5ce68e37cd519601a31d13da9" translate="yes" xml:space="preserve">
          <source>Signals that the annotated annotation class is a marker of an experimental API.</source>
          <target state="translated">标志着注解的注解类是一个实验性API的标记。</target>
        </trans-unit>
        <trans-unit id="1ee75f0144de04a179ae3bd74798db91b9c6ff71" translate="yes" xml:space="preserve">
          <source>Signatures of exported declarations must only contain &quot;exportable&quot; types:</source>
          <target state="translated">出口声明的签名必须只包含 &quot;可出口 &quot;类型。</target>
        </trans-unit>
        <trans-unit id="a0215479e9dd9a267a38a1be46680da42a198173" translate="yes" xml:space="preserve">
          <source>Signed, unsigned integral, and floating point types are mapped to their Kotlin counterpart with the same width.</source>
          <target state="translated">有符号、无符号积分和浮点类型被映射到它们的Kotlin对应类型上,宽度相同。</target>
        </trans-unit>
        <trans-unit id="6e0afd9e7082ae45a85cb3ea220f3007b52fa99c" translate="yes" xml:space="preserve">
          <source>Significant bits</source>
          <target state="translated">重要位</target>
        </trans-unit>
        <trans-unit id="9fe5273a06659605c10cb83e488938ef900a3591" translate="yes" xml:space="preserve">
          <source>Signifies that the annotated functional type represents an extension function.</source>
          <target state="translated">表示注释的功能类型代表一个扩展功能。</target>
        </trans-unit>
        <trans-unit id="9fcc4d0c21be05b877e2736e1dd7b56ceaaa4a1d" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;code&gt;Array&lt;/code&gt; constructor, there are now functions that create &lt;code&gt;List&lt;/code&gt; and &lt;code&gt;MutableList&lt;/code&gt; instances and initialize each element by calling a lambda:</source>
          <target state="translated">与 &lt;code&gt;Array&lt;/code&gt; 构造函数类似，现在有一些函数可以创建 &lt;code&gt;List&lt;/code&gt; 和 &lt;code&gt;MutableList&lt;/code&gt; 实例，并通过调用lambda来初始化每个元素：</target>
        </trans-unit>
        <trans-unit id="b696a41cbfc5d18be8eef6a404f46e79ece8b58f" translate="yes" xml:space="preserve">
          <source>Similar to when we're using &lt;a href=&quot;../getting-started-idea/getting-started-with-intellij-idea&quot;&gt;IntelliJ IDEA build system&lt;/a&gt; or the command line, we can have the compiler output JavaScript to comply with a specific module system such as AMD, CommonJS or UMD.</source>
          <target state="translated">与使用&lt;a href=&quot;../getting-started-idea/getting-started-with-intellij-idea&quot;&gt;IntelliJ IDEA构建系统&lt;/a&gt;或命令行时类似，我们可以使编译器输出JavaScript以符合特定的模块系统，例如AMD，CommonJS或UMD。</target>
        </trans-unit>
        <trans-unit id="c343ad89de5e3d2bda211b8f922e99f913bab352" translate="yes" xml:space="preserve">
          <source>Similarly to functions, Kotlin supports extension properties:</source>
          <target state="translated">与函数类似,Kotlin也支持扩展属性。</target>
        </trans-unit>
        <trans-unit id="4167cd56e3b5dcc5788a4fd7f543f645c15d01ed" translate="yes" xml:space="preserve">
          <source>Similarly, a library consumer may need to provide matching fallbacks for custom product flavors if some are missing in the library publications.</source>
          <target state="translated">同样,如果图书馆出版物中缺少某些产品口味,图书馆消费者可能需要为定制产品口味提供匹配的后备。</target>
        </trans-unit>
        <trans-unit id="d8d97cdf5dff7b50ad598a178d64b27d9f92c438" translate="yes" xml:space="preserve">
          <source>Similarly, a library consumer needs to provide matching fallbacks for custom product flavors if some are missing in the library publications.</source>
          <target state="translated">同样,图书馆消费者如果在图书馆出版物中缺少某些产品口味,也需要为定制产品口味提供匹配的后备方案。</target>
        </trans-unit>
        <trans-unit id="f536b6acdc9043c4a42d4d23229b44e979722a18" translate="yes" xml:space="preserve">
          <source>Similarly, when we assign to &lt;code&gt;p&lt;/code&gt;, the &lt;code&gt;setValue()&lt;/code&gt; function is called. The first two parameters are the same, and the third holds the value being assigned:</source>
          <target state="translated">同样，当我们分配给 &lt;code&gt;p&lt;/code&gt; 时，将调用 &lt;code&gt;setValue()&lt;/code&gt; 函数。前两个参数相同，第三个参数保存分配的值：</target>
        </trans-unit>
        <trans-unit id="3b895209bc0a4e4dfafeeb7fada6b857d595d852" translate="yes" xml:space="preserve">
          <source>Similarly, when you already have the type arguments of an instance checked statically (at compile time), you can make an &lt;em&gt;is&lt;/em&gt;-check or a cast that involves the non-generic part of the type. Note that angle brackets are omitted in this case:</source>
          <target state="translated">类似地，当已经（在编译时）静态检查了实例的类型参数时，可以进行&lt;em&gt;is&lt;/em&gt; -check或涉及类型的非泛型部分的强制转换。请注意在这种情况下省略了尖括号：</target>
        </trans-unit>
        <trans-unit id="373dea533a0d49a9c6fb1be2d9e503372df28cc1" translate="yes" xml:space="preserve">
          <source>Simple example</source>
          <target state="translated">简单的例子</target>
        </trans-unit>
        <trans-unit id="9fe6625e7fa70a75f441e66f48bbb12c8a2bda69" translate="yes" xml:space="preserve">
          <source>Simple example: Reachable Numbers problem</source>
          <target state="translated">简单的例子。可达到的数字问题</target>
        </trans-unit>
        <trans-unit id="460e0cbdf7f85b57fb0b9092f75f48e34791ec3e" translate="yes" xml:space="preserve">
          <source>Simple type</source>
          <target state="translated">简单型</target>
        </trans-unit>
        <trans-unit id="bf9fd8196e53917d432912e26e9c5f145f971f1d" translate="yes" xml:space="preserve">
          <source>SimpleEffect</source>
          <target state="translated">SimpleEffect</target>
        </trans-unit>
        <trans-unit id="88f3e69a016bfa62917ba09ac8781e377d36171f" translate="yes" xml:space="preserve">
          <source>Simplified management of CocoaPods dependencies</source>
          <target state="translated">简化了对CocoaPods依赖性的管理</target>
        </trans-unit>
        <trans-unit id="4cfc72a916b3634476578b39379dedee65189577" translate="yes" xml:space="preserve">
          <source>Simplify your build configuration</source>
          <target state="translated">简化您的构建配置</target>
        </trans-unit>
        <trans-unit id="1f88a84a3c3cc88b9e388323628cb3bfb002e0ea" translate="yes" xml:space="preserve">
          <source>Since 1.1, data classes may extend other classes (see &lt;a href=&quot;sealed-classes&quot;&gt;Sealed classes&lt;/a&gt; for examples).</source>
          <target state="translated">从1.1开始，数据类可以扩展其他类（有关示例，请参见&lt;a href=&quot;sealed-classes&quot;&gt;密封类&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c45af68c04ba0b57547d05c578aa8eba167797e0" translate="yes" xml:space="preserve">
          <source>Since 1.3.0 Kotlin has an experimental support for scripts customization, such as adding external properties, providing static or dynamic dependencies, and so on. Customizations are defined by so-called &lt;em&gt;Script definitions&lt;/em&gt; - annotated kotlin classes with appropriate support code. The script filename extension is used to select appropriate definition.</source>
          <target state="translated">从1.3.0版本开始，Kotlin对脚本自定义提供了实验性支持，例如添加外部属性，提供静态或动态依赖关系等。定制由所谓的&lt;em&gt;脚本定义&lt;/em&gt;（带有适当支持代码的带注释的kotlin类）&lt;em&gt;定义&lt;/em&gt;。脚本文件扩展名用于选择适当的定义。</target>
        </trans-unit>
        <trans-unit id="ae33bc2ca6c920991b37acb69fe39030237d1fda" translate="yes" xml:space="preserve">
          <source>Since 1.3.40, a separate Gradle plugin for Kotlin/Native is deprecated in favor of the &lt;code&gt;kotlin-multiplatform&lt;/code&gt; plugin. This plugin provides an IDE support along with support of the new multiplatform project model introduced in Kotlin 1.3.0. Below you can find a short list of differences between &lt;code&gt;kotlin-platform-native&lt;/code&gt; and &lt;code&gt;kotlin-muliplatform&lt;/code&gt; plugins. For more information see the &lt;code&gt;kotlin-muliplatform&lt;/code&gt;&lt;a href=&quot;../building-mpp-with-gradle&quot;&gt;documentation page&lt;/a&gt;. For &lt;code&gt;kotlin-platform-native&lt;/code&gt; reference see the &lt;a href=&quot;#kotlin-platform-native-reference&quot;&gt;corresponding section&lt;/a&gt;.</source>
          <target state="translated">从1.3.40开始，不推荐使用单独的Kotlin / Native Gradle插件，而推荐使用 &lt;code&gt;kotlin-multiplatform&lt;/code&gt; 插件。该插件提供了对IDE的支持以及对Kotlin 1.3.0中引入的新的多平台项目模型的支持。您可以在下面找到 &lt;code&gt;kotlin-platform-native&lt;/code&gt; 和 &lt;code&gt;kotlin-muliplatform&lt;/code&gt; 插件之间的区别的简短列表。有关更多信息，请参阅 &lt;code&gt;kotlin-muliplatform&lt;/code&gt; &lt;a href=&quot;../building-mpp-with-gradle&quot;&gt;文档页面&lt;/a&gt;。有关 &lt;code&gt;kotlin-platform-native&lt;/code&gt; 参考，请参见&lt;a href=&quot;#kotlin-platform-native-reference&quot;&gt;相应部分&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3f3503e86bffe0abaebb38725b3349da076c53cf" translate="yes" xml:space="preserve">
          <source>Since 1.3.40, test executables are represented by a separate binary type and have their own getter. To access the default test binary, use:</source>
          <target state="translated">从1.3.40开始,测试可执行文件由一个单独的二进制类型表示,并有自己的getter。要访问默认的测试二进制文件,请使用:</target>
        </trans-unit>
        <trans-unit id="2000cb745257a86ccbf6619c4d22a1cfa77b7910" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;simple().collect&lt;/code&gt; is called from the main thread, the body of &lt;code&gt;simple&lt;/code&gt;'s flow is also called in the main thread. This is the perfect default for fast-running or asynchronous code that does not care about the execution context and does not block the caller.</source>
          <target state="translated">由于 &lt;code&gt;simple().collect&lt;/code&gt; 是从主线程调用的，因此 &lt;code&gt;simple&lt;/code&gt; 的流程的主体也在主线程中调用。这是快速运行或异步代码的理想默认值，该代码不关心执行上下文并且不会阻塞调用者。</target>
        </trans-unit>
        <trans-unit id="74d2423e1b8ad654b09fa01e578cbe247dd6909a" translate="yes" xml:space="preserve">
          <source>Since Java has no way of marking methods for which it makes sense to use the operator syntax, Kotlin allows using any Java methods with the right name and signature as operator overloads and other conventions (&lt;code&gt;invoke()&lt;/code&gt; etc.) Calling Java methods using the infix call syntax is not allowed.</source>
          <target state="translated">由于Java无法标记使用操作符语法有意义的方法，因此Kotlin允许使用名称和签名正确的Java方法作为操作符重载和其他约定（ &lt;code&gt;invoke()&lt;/code&gt; 等）。使用infix调用Java方法不允许使用调用语法。</target>
        </trans-unit>
        <trans-unit id="b8398b1189e7866368709036da6ebf170a442288" translate="yes" xml:space="preserve">
          <source>Since Kotlin 1.1, it's possible to access the constants in an enum class in a generic way, using the &lt;code&gt;enumValues&amp;lt;T&amp;gt;()&lt;/code&gt; and &lt;code&gt;enumValueOf&amp;lt;T&amp;gt;()&lt;/code&gt; functions:</source>
          <target state="translated">从Kotlin 1.1开始，可以使用 &lt;code&gt;enumValues&amp;lt;T&amp;gt;()&lt;/code&gt; 和 &lt;code&gt;enumValueOf&amp;lt;T&amp;gt;()&lt;/code&gt; 函数以通用方式访问enum类中的常量：</target>
        </trans-unit>
        <trans-unit id="330983e4399baf0a2c9af16e30f769877d9bd0ed" translate="yes" xml:space="preserve">
          <source>Since Kotlin 1.1, you can omit the property type if it can be inferred from the getter:</source>
          <target state="translated">从Kotlin 1.1开始,如果可以从getter中推断出属性类型,可以省略。</target>
        </trans-unit>
        <trans-unit id="da701a88d5b6b6cb5f3f3cc5c091da6b746b52c6" translate="yes" xml:space="preserve">
          <source>Since Kotlin 1.1.50, &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/41091f1cc7045142181d8c89645059f4a15cc91a/proposals/jsr-305-custom-nullability-qualifiers.md&quot;&gt;custom nullability qualifiers (KEEP-79)&lt;/a&gt; are also supported (see below).</source>
          <target state="translated">从Kotlin 1.1.50开始，还支持&lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/41091f1cc7045142181d8c89645059f4a15cc91a/proposals/jsr-305-custom-nullability-qualifiers.md&quot;&gt;自定义可空性限定符（KEEP-79）&lt;/a&gt;（请参阅下文）。</target>
        </trans-unit>
        <trans-unit id="9ae7b7121257ecc4190400d88c65896582898044" translate="yes" xml:space="preserve">
          <source>Since Kotlin 1.2, explicitly specifying &lt;code&gt;this&lt;/code&gt; as the receiver is not necessary: &lt;code&gt;this::foo&lt;/code&gt; and &lt;code&gt;::foo&lt;/code&gt; are equivalent.</source>
          <target state="translated">由于科特林1.2，明确指定 &lt;code&gt;this&lt;/code&gt; 作为接收机是没有必要的： &lt;code&gt;this::foo&lt;/code&gt; 和 &lt;code&gt;::foo&lt;/code&gt; 的是等效的。</target>
        </trans-unit>
        <trans-unit id="8c4391f4af9d2a0c13ee2de02e3def8882dce4b0" translate="yes" xml:space="preserve">
          <source>Since Kotlin 1.3 use &lt;a href=&quot;../../kotlin.sequences/-sequence-scope/index&quot;&gt;kotlin.sequences.SequenceScope&lt;/a&gt; instead.</source>
          <target state="translated">自Kotlin 1.3起，请改用&lt;a href=&quot;../../kotlin.sequences/-sequence-scope/index&quot;&gt;kotlin.sequences.SequenceScope&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e80b0e98aee610d55a5c374cdbbf839bc8868cd2" translate="yes" xml:space="preserve">
          <source>Since Kotlin 1.3 use &lt;a href=&quot;../kotlin.sequences/iterator&quot;&gt;kotlin.sequences.iterator&lt;/a&gt; instead.</source>
          <target state="translated">从Kotlin 1.3开始，请改用&lt;a href=&quot;../kotlin.sequences/iterator&quot;&gt;kotlin.sequences.iterator&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="88ab4850745a2ab5ce313b43d12c199319889b1c" translate="yes" xml:space="preserve">
          <source>Since Kotlin 1.3 use &lt;a href=&quot;../kotlin.sequences/sequence&quot;&gt;kotlin.sequences.sequence&lt;/a&gt; instead.</source>
          <target state="translated">从Kotlin 1.3开始，请改用&lt;a href=&quot;../kotlin.sequences/sequence&quot;&gt;kotlin.sequences.sequence&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="405b74df55c0598869424e3cb858793a687c40ea" translate="yes" xml:space="preserve">
          <source>Since Kotlin 1.3, it is possible to capture &lt;em&gt;when&lt;/em&gt; subject in a variable using following syntax:</source>
          <target state="translated">由于科特林1.3，能够捕获&lt;em&gt;时&lt;/em&gt;使用以下语法对象在一个变量中：</target>
        </trans-unit>
        <trans-unit id="020966f8fc3e849e4a66f0a822c445794dfeed9a" translate="yes" xml:space="preserve">
          <source>Since Kotlin 1.4, a property can delegate its getter and setter to another property. Such delegation is available for both top-level and class properties (member and extension). The delegate property can be:</source>
          <target state="translated">自 Kotlin 1.4 起,一个属性可以将其 getter 和 setter 委托给另一个属性。这种委托对于顶层和类属性(成员和扩展)都是可用的。委托属性可以是:</target>
        </trans-unit>
        <trans-unit id="3fbe845c319d1f255cba489e3e87ac4a16b32315" translate="yes" xml:space="preserve">
          <source>Since Kotlin provides first-class interop with Java, you can also use Java libraries for data science in your Kotlin code. Here are some examples of such libraries:</source>
          <target state="translated">由于Kotlin提供了与Java的一流互操作,你也可以在Kotlin代码中使用Java库进行数据科学。下面是一些此类库的例子。</target>
        </trans-unit>
        <trans-unit id="2532680c8a54fc6cb1e66295181c704fef28df8d" translate="yes" xml:space="preserve">
          <source>Since Kotlin/JS projects are managed with the Kotlin/JS Gradle plugin, we will see how to run our project using the appropriate tasks. If we're starting with a blank project, let's ensure that we have some sample code to execute. We create the file &lt;code&gt;src/main/kotlin/App.kt&lt;/code&gt; and fill it with a small &quot;Hello, World&quot;-type code snippet:</source>
          <target state="translated">由于Kotlin / JS项目是通过Kotlin / JS Gradle插件管理的，因此我们将了解如何使用适当的任务运行项目。如果我们从一个空白项目开始，请确保我们有一些示例代码要执行。我们创建文件 &lt;code&gt;src/main/kotlin/App.kt&lt;/code&gt; ，并用一个小的&amp;ldquo; Hello，World&amp;rdquo;类型的代码片段填充它：</target>
        </trans-unit>
        <trans-unit id="efcc6bedd3b914eb31e0f75f655ecbdfda75ad9b" translate="yes" xml:space="preserve">
          <source>Since Kotlin/Native provides &lt;a href=&quot;native/c_interop&quot;&gt;interoperability with native languages&lt;/a&gt;, there is a DSL allowing one to configure this feature for a specific compilation.</source>
          <target state="translated">由于Kotlin / Native提供了&lt;a href=&quot;native/c_interop&quot;&gt;与本地语言的互操作性&lt;/a&gt;，因此存在一种DSL，允许人们为特定的编译配置此功能。</target>
        </trans-unit>
        <trans-unit id="8a7b2ebad239fb7a910fd79eab4f3372b29c79ee" translate="yes" xml:space="preserve">
          <source>Since all the dependencies required for Kotlin are defined in the Gradle file, nothing else needs to be configured specifically for Kotlin to run correctly.</source>
          <target state="translated">由于Kotlin所需的所有依赖关系都在Gradle文件中定义了,所以不需要为Kotlin的正确运行专门配置其他的东西。</target>
        </trans-unit>
        <trans-unit id="8de791302c96952201846f400a6083331bbe72a8" translate="yes" xml:space="preserve">
          <source>Since an anonymous class has no name, it can't be used as a return type - if you do return an anonymous object, the function's return type must be &lt;code&gt;Any&lt;/code&gt;.</source>
          <target state="translated">由于匿名类没有名称，因此不能将其用作返回类型-如果您确实返回了匿名对象，则该函数的返回类型必须为 &lt;code&gt;Any&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d293ea0c045033de8d8bd3af73aa0ea0b91a963" translate="yes" xml:space="preserve">
          <source>Since binaries compiled this way depend on the Kotlin runtime you should make sure the latter is present in the classpath whenever your compiled library is used.</source>
          <target state="translated">由于以这种方式编译的二进制文件依赖于Kotlin运行时,你应该确保后者在使用你的编译库时存在于classpath中。</target>
        </trans-unit>
        <trans-unit id="622c73b5fb8d14a132011c0334d390f1a510313f" translate="yes" xml:space="preserve">
          <source>Since cancellation is just an exception, all resources are closed in the usual way. You can wrap the code with timeout in a &lt;code&gt;try {...} catch (e: TimeoutCancellationException) {...}&lt;/code&gt; block if you need to do some additional action specifically on any kind of timeout or use the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/with-timeout-or-null.html&quot;&gt;withTimeoutOrNull&lt;/a&gt; function that is similar to &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/with-timeout.html&quot;&gt;withTimeout&lt;/a&gt; but returns &lt;code&gt;null&lt;/code&gt; on timeout instead of throwing an exception:</source>
          <target state="translated">由于取消只是一个例外，因此所有资源都以通常的方式关闭。如果您需要专门针对任何类型的超时采取一些其他措施，或者使用类似于以下内容的&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/with-timeout-or-null.html&quot;&gt;withTimeoutOrNull&lt;/a&gt;函数，则可以将带有超时的代码包装在 &lt;code&gt;try {...} catch (e: TimeoutCancellationException) {...}&lt;/code&gt; 块中&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/with-timeout.html&quot;&gt;withTimeout，&lt;/a&gt;但在超时时返回 &lt;code&gt;null&lt;/code&gt; 而不是引发异常：</target>
        </trans-unit>
        <trans-unit id="4e125d582c3c9f675a15d0038927e92dc5fb9b46" translate="yes" xml:space="preserve">
          <source>Since data classes automatically declare &lt;code&gt;componentN()&lt;/code&gt; functions, destructuring declarations work here.</source>
          <target state="translated">由于数据类会自动声明 &lt;code&gt;componentN()&lt;/code&gt; 函数，因此在这里可以使用解构声明。</target>
        </trans-unit>
        <trans-unit id="ab91ad24a43e16b80819fa3c7ccb13e2c89d3927" translate="yes" xml:space="preserve">
          <source>Since each enum is an instance of the enum class, they can be initialized as:</source>
          <target state="translated">由于每个枚举都是枚举类的一个实例,所以可以将它们初始化为。</target>
        </trans-unit>
        <trans-unit id="fccccbd7e91cba8ebb5a9e0230afa4e091b0cd00" translate="yes" xml:space="preserve">
          <source>Since inline classes are compiled to their underlying type, it may lead to various obscure errors, for example unexpected platform signature clashes:</source>
          <target state="translated">由于内联类是编译到其底层类型的,所以可能会导致各种不明显的错误,例如意外的平台签名冲突。</target>
        </trans-unit>
        <trans-unit id="90493c5a0e006c2eb80d1e75cd9d689e0f1392ea" translate="yes" xml:space="preserve">
          <source>Since the arrays are also mapped to &lt;code&gt;CPointer&amp;lt;T&amp;gt;&lt;/code&gt;, it supports the &lt;code&gt;[]&lt;/code&gt; operator for accessing values by index:</source>
          <target state="translated">由于数组也映射到 &lt;code&gt;CPointer&amp;lt;T&amp;gt;&lt;/code&gt; ，因此它支持 &lt;code&gt;[]&lt;/code&gt; 运算符，用于按索引访问值：</target>
        </trans-unit>
        <trans-unit id="4d7b853892431a18d65c0d328c4b6e037836cf2e" translate="yes" xml:space="preserve">
          <source>Since the available operators are hardcoded into the formal Kotlin syntax, you can not invent new operators, and overriding an operator does not affect its &lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#precedence&quot;&gt;precedence&lt;/a&gt;.</source>
          <target state="translated">由于可用的运算符被硬编码为正式的Kotlin语法，因此您无法发明新的运算符，并且覆盖运算符不会影响其&lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#precedence&quot;&gt;优先级&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="547f1377115a4466460ced0890bccf5f5f29432e" translate="yes" xml:space="preserve">
          <source>Since the body of &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/collect-latest.html&quot;&gt;collectLatest&lt;/a&gt; takes 300 ms, but new values are emitted every 100 ms, we see that the block is run on every value, but completes only for the last value:</source>
          <target state="translated">由于&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/collect-latest.html&quot;&gt;collectLatest&lt;/a&gt;的主体需要300毫秒，但是每100毫秒就会发出一个新值，因此我们可以看到该块在每个值上运行，但仅针对最后一个值才完成：</target>
        </trans-unit>
        <trans-unit id="fd0b229f654576b966a8840a049ffa6b928881c9" translate="yes" xml:space="preserve">
          <source>Since the entire anonymous function is self-executing, it will execute as soon as the code is loaded. Its argument will be the object &lt;code&gt;kotlin&lt;/code&gt; from &lt;code&gt;kotlin.js&lt;/code&gt;.</source>
          <target state="translated">由于整个匿名函数都是自执行的，因此它将在代码加载后立即执行。它的参数将成为对象 &lt;code&gt;kotlin&lt;/code&gt; 从 &lt;code&gt;kotlin.js&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99fc39de8ebf0847b1a608d5ecfdb8c433717d90" translate="yes" xml:space="preserve">
          <source>Since the order of parameters for an annotation written in Java is not defined, you can't use a regular function call syntax for passing the arguments. Instead, you need to use the named argument syntax:</source>
          <target state="translated">由于用Java编写的注解的参数顺序没有定义,所以不能使用常规函数调用语法来传递参数。相反,您需要使用命名参数语法。</target>
        </trans-unit>
        <trans-unit id="1d3e6156826d803abef978e9ca301cc858a7854d" translate="yes" xml:space="preserve">
          <source>Since the parameter types are not encoded as generic type parameters in &lt;code&gt;KFunction&amp;lt;V&amp;gt;&lt;/code&gt;, you won't get compile-time type validation of the parameters you pass. In order to encode the parameter types, use one of the subinterfaces &lt;code&gt;KFunction1&amp;lt;A, V&amp;gt;&lt;/code&gt;, &lt;code&gt;KFunction2&amp;lt;A, B, V&amp;gt;&lt;/code&gt;, &lt;code&gt;KFunction3&amp;lt;A, B, C, V&amp;gt;&lt;/code&gt;, and so on, depending on how many parameters the function has got. Keep in mind that if you are referencing a member function, the first generic type parameter is the receiver type. For example, &lt;code&gt;KFunction3&amp;lt;A, B, C, V&amp;gt;&lt;/code&gt; may reference either an ordinary function that takes &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, and &lt;code&gt;C&lt;/code&gt; as parameters and returns &lt;code&gt;V&lt;/code&gt;, or it may reference a member function on &lt;code&gt;A&lt;/code&gt; that takes &lt;code&gt;B&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; as parameters and returns &lt;code&gt;V&lt;/code&gt;. When you use any of these types, you can call the function through its reference as if the reference were a function, e.g. &lt;code&gt;function(a, b)&lt;/code&gt;, and this call will be type-safe.</source>
          <target state="translated">由于参数类型未在 &lt;code&gt;KFunction&amp;lt;V&amp;gt;&lt;/code&gt; 编码为通用类型参数，因此您将无法对传递的参数进行编译时类型验证。为了对参数类型进行编码，请使用子接口 &lt;code&gt;KFunction1&amp;lt;A, V&amp;gt;&lt;/code&gt; ， &lt;code&gt;KFunction2&amp;lt;A, B, V&amp;gt;&lt;/code&gt; ， &lt;code&gt;KFunction3&amp;lt;A, B, C, V&amp;gt;&lt;/code&gt; 等之一，具体取决于子接口的参数数量。功能已经得到。请记住，如果要引用成员函数，则第一个通用类型参数是接收器类型。例如， &lt;code&gt;KFunction3&amp;lt;A, B, C, V&amp;gt;&lt;/code&gt; 可以引用以 &lt;code&gt;A&lt;/code&gt; ， &lt;code&gt;B&lt;/code&gt; 和 &lt;code&gt;C&lt;/code&gt; 为参数并返回 &lt;code&gt;V&lt;/code&gt; 的普通函数。，或者它可以参考上的成员函数 &lt;code&gt;A&lt;/code&gt; 那取 &lt;code&gt;B&lt;/code&gt; 和 &lt;code&gt;C&lt;/code&gt; 作为参数并返回 &lt;code&gt;V&lt;/code&gt; 。使用这些类型中的任何一种时，都可以通过其引用来调用该函数，就像该引用是一个函数一样，例如 &lt;code&gt;function(a, b)&lt;/code&gt; ，此调用将是类型安全的。</target>
        </trans-unit>
        <trans-unit id="c8d2c0eaa40e46a8c6ea31321656b62533073742" translate="yes" xml:space="preserve">
          <source>Since version 1.1.4, Kotlin/JS includes a dead code elimination (DCE) tool. This tool allows to strip out unused properties, functions and classes from the generated JS. There are several ways you get unused declarations:</source>
          <target state="translated">从1.1.4版本开始,Kotlin/JS包含了一个消除死代码(DCE)工具。该工具允许从生成的JS中剥离出未使用的属性、函数和类。有几种方法可以获得未使用的声明。</target>
        </trans-unit>
        <trans-unit id="eb32719a3bf81b439295cec580621456d2ecbd8a" translate="yes" xml:space="preserve">
          <source>Since we'll be using the &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines&quot;&gt;&lt;code&gt;kotlinx.coroutines&lt;/code&gt;&lt;/a&gt;, let's add its recent version to our dependencies:</source>
          <target state="translated">由于我们将使用&lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines&quot;&gt; &lt;code&gt;kotlinx.coroutines&lt;/code&gt; &lt;/a&gt;，因此我们将其最新版本添加到我们的依赖项中：</target>
        </trans-unit>
        <trans-unit id="1a9dce84a0725c0b6c49a8e9dd94e932d53babd3" translate="yes" xml:space="preserve">
          <source>Since you can't modify built-in or third-party classes, you can't directly add functions or properties to them. If you can achieve what you want by only using the public members of a class, you can of course just write a function that takes an instance of the class as a parameter - but sometimes, you'd really like to be able to say &lt;code&gt;x.foo(y)&lt;/code&gt; instead of &lt;code&gt;foo(x, y)&lt;/code&gt;, especially if you want to make a chain of such calls or property lookups: &lt;code&gt;x.foo(y).bar().baz&lt;/code&gt; instead of &lt;code&gt;getBaz(bar(foo(x, y)))&lt;/code&gt;.</source>
          <target state="translated">由于您无法修改内置或第三方类，因此无法直接向其添加函数或属性。如果您仅通过使用类的公共成员就可以实现所需的功能，那么您当然可以编写一个将类的实例作为参数的函数-但有时，您真的想说 &lt;code&gt;x.foo(y)&lt;/code&gt; 而不是 &lt;code&gt;foo(x, y)&lt;/code&gt; ，尤其是当您要进行这样的调用或属性查找的链时： &lt;code&gt;x.foo(y).bar().baz&lt;/code&gt; 而不是 &lt;code&gt;getBaz(bar(foo(x, y)))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06def0138f09b8c0f949f07f4920634afdd6f7fb" translate="yes" xml:space="preserve">
          <source>SinceKotlin</source>
          <target state="translated">SinceKotlin</target>
        </trans-unit>
        <trans-unit id="c2499363e6a7b206721dbe6071ddba0631ff7592" translate="yes" xml:space="preserve">
          <source>Single-Expression functions</source>
          <target state="translated">单一表达式功能</target>
        </trans-unit>
        <trans-unit id="948bf8711c54b33e1c9d4a741ca29c920e235551" translate="yes" xml:space="preserve">
          <source>Single-expression functions</source>
          <target state="translated">单一表达式函数</target>
        </trans-unit>
        <trans-unit id="f4952f106d9d3b4bccd6d238d2f11b71e55ecb4c" translate="yes" xml:space="preserve">
          <source>Singletons</source>
          <target state="translated">Singletons</target>
        </trans-unit>
        <trans-unit id="ee6a091ca276835c16a3bfeac72a4361f88e2bf7" translate="yes" xml:space="preserve">
          <source>Sixteen-bit UCS Transformation Format, big-endian byte order.</source>
          <target state="translated">16位UCS转换格式,大二烯字节顺序。</target>
        </trans-unit>
        <trans-unit id="ee23d2f192966423edfb5a719af0092090fdca64" translate="yes" xml:space="preserve">
          <source>Sixteen-bit UCS Transformation Format, byte order identified by an optional byte-order mark.</source>
          <target state="translated">16位UCS转换格式,字节顺序由一个可选的字节顺序标记确定。</target>
        </trans-unit>
        <trans-unit id="ecc2e39f3a6f9988d872a59c8d23128ff9edbcfe" translate="yes" xml:space="preserve">
          <source>Sixteen-bit UCS Transformation Format, little-endian byte order.</source>
          <target state="translated">十六位UCS转换格式,小安迪字节顺序。</target>
        </trans-unit>
        <trans-unit id="1a6fd3d12a17734000a1a6160d6675df426f8980" translate="yes" xml:space="preserve">
          <source>Size (bits)</source>
          <target state="translated">大小(位)</target>
        </trans-unit>
        <trans-unit id="d1463955df382c8a9945d566689c91edc2c8c9b3" translate="yes" xml:space="preserve">
          <source>Size-limiting intermediate operators like &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/take.html&quot;&gt;take&lt;/a&gt; cancel the execution of the flow when the corresponding limit is reached. Cancellation in coroutines is always performed by throwing an exception, so that all the resource-management functions (like &lt;code&gt;try { ... } finally { ... }&lt;/code&gt; blocks) operate normally in case of cancellation:</source>
          <target state="translated">达到限制的中间运算符（如&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/take.html&quot;&gt;take）会&lt;/a&gt;在达到相应的限制时取消流程的执行。协程中的取消总是通过抛出异常来执行的，因此在取消的情况下，所有资源管理功能（例如 &lt;code&gt;try { ... } finally { ... }&lt;/code&gt; 块）都可以正常运行：</target>
        </trans-unit>
        <trans-unit id="a575c815da72681a6dca609f3c8fc74e82651da7" translate="yes" xml:space="preserve">
          <source>Size-limiting operators</source>
          <target state="translated">尺寸限制运算符</target>
        </trans-unit>
        <trans-unit id="f85dd4da6fcf55c2051ab8017fddbb6a18773e03" translate="yes" xml:space="preserve">
          <source>Skip reachibility check, can lead to mysterious crashes in an application. USE UNSAFE MODE ONLY IF ABSOLUTELY SURE WHAT YOU'RE DOING!!!</source>
          <target state="translated">跳过可达性检查,可能导致应用程序的神秘崩溃。只有在绝对确定你在做什么的情况下才使用UNSAFE模式!!!</target>
        </trans-unit>
        <trans-unit id="71b8e40a5867a69e273ec4b85f91eb799854cf9c" translate="yes" xml:space="preserve">
          <source>Skip this file and go to the next.</source>
          <target state="translated">跳过这个文件,进入下一个文件。</target>
        </trans-unit>
        <trans-unit id="430b38bf6daa7f9164b164b2ffd540b5a3afe2fd" translate="yes" xml:space="preserve">
          <source>Slack</source>
          <target state="translated">Slack</target>
        </trans-unit>
        <trans-unit id="0c8525a31f225d6db84222cdc68f43cb8c6c18bf" translate="yes" xml:space="preserve">
          <source>Slice</source>
          <target state="translated">Slice</target>
        </trans-unit>
        <trans-unit id="d4ba32e18a522523616ead4e04bba098b836f870" translate="yes" xml:space="preserve">
          <source>Slotable</source>
          <target state="translated">Slotable</target>
        </trans-unit>
        <trans-unit id="10fbb462857c0cba8ce2d0a30fb30be71bb9c668" translate="yes" xml:space="preserve">
          <source>Smaller changes</source>
          <target state="translated">较小的变化</target>
        </trans-unit>
        <trans-unit id="1962b7c27bd3945eb2943949ba4b088ed50789a2" translate="yes" xml:space="preserve">
          <source>Smart Casts</source>
          <target state="translated">智能铸件</target>
        </trans-unit>
        <trans-unit id="5d5e5c19860062429de60b61bb54ca023fa3667c" translate="yes" xml:space="preserve">
          <source>Smart cast improvements</source>
          <target state="translated">智能铸造的改进</target>
        </trans-unit>
        <trans-unit id="bcb3cbb48cb2ad564dda01b8a4d33886b1b4cae4" translate="yes" xml:space="preserve">
          <source>Smart casts</source>
          <target state="translated">智能铸件</target>
        </trans-unit>
        <trans-unit id="2921cea22f7734b6c2bb9988feed3773f9e3b22b" translate="yes" xml:space="preserve">
          <source>Smart casts for a lambda&amp;rsquo;s last expression</source>
          <target state="translated">聪明的演员为lambda的最后表达</target>
        </trans-unit>
        <trans-unit id="c403e941657e7010de72815f887fce9f5c99983c" translate="yes" xml:space="preserve">
          <source>Smart casts for callable references</source>
          <target state="translated">可调用引用的智能投递</target>
        </trans-unit>
        <trans-unit id="31522d97ace96f0c56defc6bbe0845e755f1d98b" translate="yes" xml:space="preserve">
          <source>Smartcasts on local delegated properties</source>
          <target state="translated">本地委托属性的智能广播</target>
        </trans-unit>
        <trans-unit id="a633eaa449ddacea57394a3e6ff86e18a93dfbee" translate="yes" xml:space="preserve">
          <source>So basically, we just put a string inside a tag body, but there is this little &lt;code&gt;+&lt;/code&gt; in front of it, so it is a function call that invokes a prefix &lt;code&gt;unaryPlus()&lt;/code&gt; operation. That operation is actually defined by an extension function &lt;code&gt;unaryPlus()&lt;/code&gt; that is a member of the &lt;code&gt;TagWithText&lt;/code&gt; abstract class (a parent of &lt;code&gt;Title&lt;/code&gt;):</source>
          <target state="translated">因此，基本上，我们只是将一个字符串放在标签主体内，但是它前面有这个小 &lt;code&gt;+&lt;/code&gt; ，因此它是一个调用前缀 &lt;code&gt;unaryPlus()&lt;/code&gt; 操作的函数调用。该操作实际上是由扩展函数 &lt;code&gt;unaryPlus()&lt;/code&gt; 定义的，该扩展函数是 &lt;code&gt;TagWithText&lt;/code&gt; 抽象类（ &lt;code&gt;Title&lt;/code&gt; 的父类）的成员：</target>
        </trans-unit>
        <trans-unit id="932e80ae659a0de90bc0dc75a6b10c120ab6dbb8" translate="yes" xml:space="preserve">
          <source>So equality would have been lost silently all over the place, not to mention identity.</source>
          <target state="translated">所以,平等本来就已经悄无声息地全军覆没了,更不用说身份了。</target>
        </trans-unit>
        <trans-unit id="340cc846b1010b4c35e2fbcb7140e394840ae586" translate="yes" xml:space="preserve">
          <source>So far, only the basic cases are supported:</source>
          <target state="translated">到目前为止,只支持基本情况。</target>
        </trans-unit>
        <trans-unit id="e96dd13ef1773945f266699aea438682e7ab3594" translate="yes" xml:space="preserve">
          <source>So in combination with the top level variable declared above, it can allow looking at the same memory from different threads and building traditional concurrent structures with platform-specific synchronization primitives.</source>
          <target state="translated">所以结合上面声明的顶层变量,它可以允许从不同的线程中查看同一内存,并使用平台特有的同步基元构建传统的并发结构。</target>
        </trans-unit>
        <trans-unit id="bc0acbaacdf27c7a450d9d610b6d7359119efc69" translate="yes" xml:space="preserve">
          <source>So is the following. The difference between &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;.&lt;/code&gt; is that &lt;code&gt;+&lt;/code&gt; can be a unary operator, but &lt;code&gt;.&lt;/code&gt; can't, so the only way to get the second line to parse is to join it with the preceding line:</source>
          <target state="translated">以下是。 &lt;code&gt;+&lt;/code&gt; 和的区别 &lt;code&gt;.&lt;/code&gt; 是 &lt;code&gt;+&lt;/code&gt; 可以是一元运算符，但是 &lt;code&gt;.&lt;/code&gt; 不能，因此要解析第二行的唯一方法是将其与上一行连接：</target>
        </trans-unit>
        <trans-unit id="4f0ac44318d35bdb0434bf4bda34bcf67e8a08bc" translate="yes" xml:space="preserve">
          <source>So let us see what happens:</source>
          <target state="translated">那就让我们拭目以待吧。</target>
        </trans-unit>
        <trans-unit id="b40f56bc16e78af71c3cc44cb5713393fe2d93cd" translate="yes" xml:space="preserve">
          <source>So you can freely use destructuring declarations in &lt;em&gt;for&lt;/em&gt;-loops with maps (as well as collections of data class instances etc).</source>
          <target state="translated">因此，您可以在带有地图的&lt;em&gt;for&lt;/em&gt;循环中自由使用解构声明（以及数据类实例的集合等）。</target>
        </trans-unit>
        <trans-unit id="a8703e28503d05aec067966bd9d7e146f04d7ce9" translate="yes" xml:space="preserve">
          <source>So you can import all synthetic properties for the &lt;code&gt;free/res/layout/activity_free.xml&lt;/code&gt; layout by adding this import:</source>
          <target state="translated">因此，您可以通过添加以下导入来导入 &lt;code&gt;free/res/layout/activity_free.xml&lt;/code&gt; 布局的所有综合属性：</target>
        </trans-unit>
        <trans-unit id="c3cd48eda4cfceda7505a2a71bde8fd157927016" translate="yes" xml:space="preserve">
          <source>So you can solve tasks:</source>
          <target state="translated">所以你可以解决任务。</target>
        </trans-unit>
        <trans-unit id="2048afe6ef578a9b8c02d8c1f2dc71ba4cc5e26a" translate="yes" xml:space="preserve">
          <source>So, Java prohibits such things in order to guarantee run-time safety. But this has some implications. For example, consider the &lt;code&gt;addAll()&lt;/code&gt; method from &lt;code&gt;Collection&lt;/code&gt; interface. What's the signature of this method? Intuitively, we'd put it this way:</source>
          <target state="translated">因此，Java禁止此类事情以保证运行时安全。但这有一些含义。例如，考虑 &lt;code&gt;Collection&lt;/code&gt; 接口中的 &lt;code&gt;addAll()&lt;/code&gt; 方法。这种方法的签名是什么？直观地讲，我们这样说：</target>
        </trans-unit>
        <trans-unit id="731f2fb9edfb154df16291f18645c60fce3f0081" translate="yes" xml:space="preserve">
          <source>So, by default, code in the &lt;code&gt;flow { ... }&lt;/code&gt; builder runs in the context that is provided by a collector of the corresponding flow. For example, consider the implementation of a &lt;code&gt;simple&lt;/code&gt; function that prints the thread it is called on and emits three numbers:</source>
          <target state="translated">因此，默认情况下， &lt;code&gt;flow { ... }&lt;/code&gt; 构建器中的代码在相应流的收集器提供的上下文中运行。例如，考虑一个 &lt;code&gt;simple&lt;/code&gt; 函数的实现，该函数打印被调用的线程并发出三个数字：</target>
        </trans-unit>
        <trans-unit id="a5ea33aab863f2ed16d025b58cd153fccbe69f68" translate="yes" xml:space="preserve">
          <source>So, first the resulting program prints &lt;code&gt;Start&lt;/code&gt;, then it runs a coroutine through &lt;code&gt;launch {}&lt;/code&gt;, then it runs another one through &lt;code&gt;runBlocking {}&lt;/code&gt; and blocks until it's done, then prints &lt;code&gt;Stop&lt;/code&gt;. Meanwhile the first coroutine completes and prints &lt;code&gt;Hello&lt;/code&gt;. Just like threads, we told you :)</source>
          <target state="translated">因此，首先生成的程序输出 &lt;code&gt;Start&lt;/code&gt; ，然后通过 &lt;code&gt;launch {}&lt;/code&gt; 运行一个协程，然后通过 &lt;code&gt;runBlocking {}&lt;/code&gt; 运行另一个协程并阻塞直到完成，然后输出 &lt;code&gt;Stop&lt;/code&gt; 。同时，第一个协程完成并打印 &lt;code&gt;Hello&lt;/code&gt; 。就像线程一样，我们告诉过您:)</target>
        </trans-unit>
        <trans-unit id="4790cb680e369e2465f78a22145ef3881f0b2cc4" translate="yes" xml:space="preserve">
          <source>So, here the two coroutines are defined but not executed as in the previous example, but the control is given to the programmer on when exactly to start the execution by calling &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/start.html&quot;&gt;start&lt;/a&gt;. We first start &lt;code&gt;one&lt;/code&gt;, then start &lt;code&gt;two&lt;/code&gt;, and then await for the individual coroutines to finish.</source>
          <target state="translated">因此，这里定义了两个协程，但是没有像上一个示例中那样执行，而是通过调用&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/start.html&quot;&gt;start&lt;/a&gt;将控制权交给程序员何时确切开始执行。我们首先开始 &lt;code&gt;one&lt;/code&gt; ，然后开始 &lt;code&gt;two&lt;/code&gt; ，然后等待各个协程完成。</target>
        </trans-unit>
        <trans-unit id="f87bb15bb23744f645dc6cdce384f45a5dda4f5f" translate="yes" xml:space="preserve">
          <source>So, how do we start a coroutine? Let's use the &lt;code&gt;launch {}&lt;/code&gt; function:</source>
          <target state="translated">那么，我们如何启动协程？让我们使用 &lt;code&gt;launch {}&lt;/code&gt; 函数：</target>
        </trans-unit>
        <trans-unit id="4e4f67678565baec8708cd041dbe11b31af3f570" translate="yes" xml:space="preserve">
          <source>So, now our functions are very simple:</source>
          <target state="translated">所以,现在我们的功能非常简单。</target>
        </trans-unit>
        <trans-unit id="5e798efb8bbb72d38198a7facef7f3b574f4636e" translate="yes" xml:space="preserve">
          <source>So, the coroutine that had inherited context of &lt;code&gt;runBlocking {...}&lt;/code&gt; continues to execute in the &lt;code&gt;main&lt;/code&gt; thread, while the unconfined one had resumed in the default executor thread that &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/delay.html&quot;&gt;delay&lt;/a&gt; function is using.</source>
          <target state="translated">因此，继承了 &lt;code&gt;runBlocking {...}&lt;/code&gt; 上下文的协程将继续在 &lt;code&gt;main&lt;/code&gt; 线程中执行，而无约束的协程将在&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/delay.html&quot;&gt;延迟&lt;/a&gt;函数正在使用的默认执行程序线程中恢复。</target>
        </trans-unit>
        <trans-unit id="fe711e1882424258793db49ea08a08e7857e8ec8" translate="yes" xml:space="preserve">
          <source>So, the coroutine with the context inherited from &lt;code&gt;runBlocking {...}&lt;/code&gt; continues to execute in the &lt;code&gt;main&lt;/code&gt; thread, while the unconfined one resumes in the default executor thread that the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/delay.html&quot;&gt;delay&lt;/a&gt; function is using.</source>
          <target state="translated">因此，具有从 &lt;code&gt;runBlocking {...}&lt;/code&gt; 继承的上下文的协程将继续在 &lt;code&gt;main&lt;/code&gt; 线程中执行，而不受约束的协程将在&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/delay.html&quot;&gt;延迟&lt;/a&gt;函数使用的默认执行程序线程中继续执行。</target>
        </trans-unit>
        <trans-unit id="814d4fe3deb12a77e531d852602495f8bdaa92a2" translate="yes" xml:space="preserve">
          <source>So, the example that prints the numbers from 1 to 3 from a flow can be written as:</source>
          <target state="translated">所以,从流程中打印1到3的数字的例子可以写成。</target>
        </trans-unit>
        <trans-unit id="7d211dfac10e36035423c9708a4f5505bb9c9ba2" translate="yes" xml:space="preserve">
          <source>So, the sequences let you avoid building results of intermediate steps, therefore improving the performance of the whole collection processing chain. However, the lazy nature of sequences adds some overhead which may be significant when processing smaller collections or doing simpler computations. Hence, you should consider both &lt;code&gt;Sequence&lt;/code&gt; and &lt;code&gt;Iterable&lt;/code&gt; and decide which one is better for your case.</source>
          <target state="translated">因此，这些序列可避免生成中间步骤的结果，从而提高了整个收集处理链的性能。但是，序列的延迟性质增加了一些开销，这些开销在处理较小的集合或进行更简单的计算时可能很重要。因此，您应该同时考虑 &lt;code&gt;Sequence&lt;/code&gt; 和可 &lt;code&gt;Iterable&lt;/code&gt; 并确定哪种情况更适合您的情况。</target>
        </trans-unit>
        <trans-unit id="d916356003ce204bc3a393ee9e159e33d7cd9b65" translate="yes" xml:space="preserve">
          <source>So, what does this call do? Let's look at the body of &lt;code&gt;html&lt;/code&gt; function as defined above. It creates a new instance of &lt;code&gt;HTML&lt;/code&gt;, then it initializes it by calling the function that is passed as an argument (in our example this boils down to calling &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt; on the &lt;code&gt;HTML&lt;/code&gt; instance), and then it returns this instance. This is exactly what a builder should do.</source>
          <target state="translated">那么，这个电话做什么？让我们看一下上面定义的 &lt;code&gt;html&lt;/code&gt; 函数的主体。它创建一个新的 &lt;code&gt;HTML&lt;/code&gt; 实例，然后通过调用作为参数传递的函数对其进行初始化（在我们的示例中，该过程归结为在 &lt;code&gt;HTML&lt;/code&gt; 实例上调用 &lt;code&gt;head&lt;/code&gt; 和 &lt;code&gt;body&lt;/code&gt; ），然后返回该实例。这正是建造者应该做的。</target>
        </trans-unit>
        <trans-unit id="52f3768098539882e0119dbb283e6497243cf386" translate="yes" xml:space="preserve">
          <source>So, what the prefix &lt;code&gt;+&lt;/code&gt; does here is wrapping a string into an instance of &lt;code&gt;TextElement&lt;/code&gt; and adding it to the &lt;code&gt;children&lt;/code&gt; collection, so that it becomes a proper part of the tag tree.</source>
          <target state="translated">因此，前缀 &lt;code&gt;+&lt;/code&gt; 在这里所做的就是将字符串包装到 &lt;code&gt;TextElement&lt;/code&gt; 的实例中并将其添加到 &lt;code&gt;children&lt;/code&gt; 集合中，从而使其成为标签树的适当部分。</target>
        </trans-unit>
        <trans-unit id="12b3ed6e021fd91320b5ceebbd0e6bd9c0002703" translate="yes" xml:space="preserve">
          <source>Soft Keywords</source>
          <target state="translated">软关键词</target>
        </trans-unit>
        <trans-unit id="bdc95e2fb559300105c53082291951a541edd345" translate="yes" xml:space="preserve">
          <source>Some &lt;strong&gt;libraries that rely on specific characteristics&lt;/strong&gt; of the default backend, such as &lt;code&gt;kotlin-wrappers&lt;/code&gt;, can display some problems. You can follow the investigation and progress &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-40525&quot;&gt;on YouTrack&lt;/a&gt;.</source>
          <target state="translated">一些&lt;strong&gt;依赖&lt;/strong&gt;默认后端&lt;strong&gt;特定特性&lt;/strong&gt;的&lt;strong&gt;库&lt;/strong&gt;，例如 &lt;code&gt;kotlin-wrappers&lt;/code&gt; ，可能会显示一些问题。您可以&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-40525&quot;&gt;在YouTrack上&lt;/a&gt;跟踪调查和进度。</target>
        </trans-unit>
        <trans-unit id="718385fd0c419503c70f82a093c83a84b1b25a04" translate="yes" xml:space="preserve">
          <source>Some Java issues addressed in Kotlin</source>
          <target state="translated">Kotlin中解决的一些Java问题</target>
        </trans-unit>
        <trans-unit id="7e9e412f994dd90c183c701ff78aacb2d95c5613" translate="yes" xml:space="preserve">
          <source>Some JavaScript libraries export packages (namespaces) instead of functions and classes. In terms of JavaScript, it's an &lt;em&gt;object&lt;/em&gt; that has &lt;em&gt;members&lt;/em&gt; that are classes, functions and properties. Importing these packages as Kotlin objects often looks unnatural. The compiler can map imported JavaScript packages to Kotlin packages, using the following notation:</source>
          <target state="translated">一些JavaScript库导出包（命名空间）而不是函数和类。在JavaScript方面，它是一个&lt;em&gt;对象&lt;/em&gt;有&lt;em&gt;成员&lt;/em&gt;是类，功能和性能。将这些包导入为Kotlin对象通常看起来很不自然。编译器可以使用以下符号将导入的JavaScript程序包映射到Kotlin程序包：</target>
        </trans-unit>
        <trans-unit id="1ee1ea35caa4a9087e54f63c24f82f4afae23440" translate="yes" xml:space="preserve">
          <source>Some JavaScript libraries export packages (namespaces) instead of functions and classes. In terms of JavaScript, it's an object that has members that &lt;em&gt;are&lt;/em&gt; classes, functions and properties. Importing these packages as Kotlin objects often looks unnatural. The compiler allows to map imported JavaScript packages to Kotlin packages, using the following notation:</source>
          <target state="translated">一些JavaScript库导出包（命名空间）而不是函数和类。就JavaScript而言，它是一个对象，其成员&lt;em&gt;包括&lt;/em&gt;类，函数和属性。将这些包作为Kotlin对象导入通常看起来很不自然。编译器允许使用以下表示法将导入的JavaScript程序包映射到Kotlin程序包：</target>
        </trans-unit>
        <trans-unit id="83979962da7157bf550804d4790b2d0a8835f807" translate="yes" xml:space="preserve">
          <source>Some algorithms require shared mutable references across the multiple workers, for example global mutable configuration could be implemented as an immutable instance of properties list atomically replaced with the new version on configuration update as the whole in a single transaction. This way no inconsistent configuration could be seen, and at the same time configuration could be updated as needed. To achieve such functionality Kotlin/Native runtime provides two related classes: &lt;code&gt;kotlin.native.concurrent.AtomicReference&lt;/code&gt; and &lt;code&gt;kotlin.native.concurrent.FreezableAtomicReference&lt;/code&gt;. Atomic reference holds reference to a frozen or immutable object, and its value could be updated by set or compare-and-swap operation. Thus, dedicated set of objects could be used to create mutable shared object graphs (of immutable objects). Cycles in the shared memory could be created using atomic references. Kotlin/Native runtime doesn't support garbage collecting cyclic data when reference cycle goes through &lt;code&gt;AtomicReference&lt;/code&gt; or frozen &lt;code&gt;FreezableAtomicReference&lt;/code&gt;. So to avoid memory leaks atomic references that are potentially parts of shared cyclic data should be zeroed out once no longer needed.</source>
          <target state="translated">一些算法需要跨多个工作程序共享共享的可变引用，例如，全局可变配置可以实现为属性列表的不可变实例，该属性列表在单个事务中整体上用配置更新上的新版本原子替换。这样就不会看到不一致的配置，并且同时可以根据需要更新配置。为了实现这种功能，Kotlin / Native运行时提供了两个相关的类： &lt;code&gt;kotlin.native.concurrent.AtomicReference&lt;/code&gt; 和 &lt;code&gt;kotlin.native.concurrent.FreezableAtomicReference&lt;/code&gt; 。原子引用保留对冻结或不可变对象的引用，并且可以通过设置或比较和交换操作来更新其值。因此，专用的对象集可用于创建（不可变对象的）可变的共享对象图。共享内存中的循环可以使用原子引用创建。当参考周期经过 &lt;code&gt;AtomicReference&lt;/code&gt; 或冻结的 &lt;code&gt;FreezableAtomicReference&lt;/code&gt; 时，Kotlin / Native运行时不支持垃圾收集周期数据。因此，为避免内存泄漏，一旦不再需要原子引用（可能是共享循环数据的一部分），应将其清零。</target>
        </trans-unit>
        <trans-unit id="b8c228912efad39ab27850e7078c0b0220142ce8" translate="yes" xml:space="preserve">
          <source>Some annotation processors (such as &lt;code&gt;AutoFactory&lt;/code&gt;) rely on precise types in declaration signatures. By default, Kapt replaces every unknown type (including types for the generated classes) to &lt;code&gt;NonExistentClass&lt;/code&gt;, but you can change this behavior. Add the additional flag to the &lt;code&gt;build.gradle&lt;/code&gt; file to enable error type inferring in stubs:</source>
          <target state="translated">一些注释处理器（例如 &lt;code&gt;AutoFactory&lt;/code&gt; ）依赖于声明签名中的精确类型。默认情况下，Kapt将所有未知类型（包括所生成类的类型）替换为 &lt;code&gt;NonExistentClass&lt;/code&gt; ，但是您可以更改此行为。将附加标志添加到 &lt;code&gt;build.gradle&lt;/code&gt; 文件中以在存根中启用错误类型推断：</target>
        </trans-unit>
        <trans-unit id="e9b0112a5ded4d6fc76de7c8757792375d1ef8b3" translate="yes" xml:space="preserve">
          <source>Some data inconsistency with regard to initialization, such as when:</source>
          <target state="translated">在初始化方面,有些数据不一致,比如当。</target>
        </trans-unit>
        <trans-unit id="3bfc8724364a1427c167bc6ff352a7b7a49e0abb" translate="yes" xml:space="preserve">
          <source>Some data serialization formats, such as &lt;a href=&quot;https://www.json.org/json-en.html&quot;&gt;JSON&lt;/a&gt; and &lt;a href=&quot;https://developers.google.com/protocol-buffers&quot;&gt;protocol buffers&lt;/a&gt; are particularly common. Being language-neutral and platform-neutral, they enable data exchange between systems written in any modern language.</source>
          <target state="translated">某些数据序列化格式（例如&lt;a href=&quot;https://www.json.org/json-en.html&quot;&gt;JSON&lt;/a&gt;和&lt;a href=&quot;https://developers.google.com/protocol-buffers&quot;&gt;协议缓冲区）&lt;/a&gt;特别常见。它们与语言无关并且与平台无关，因此可以在以任何现代语言编写的系统之间进行数据交换。</target>
        </trans-unit>
        <trans-unit id="2ec82937de14be8e97ca0c1e28319cd1f629f0ec" translate="yes" xml:space="preserve">
          <source>Some examples of what definitely isn't an incompatible change include</source>
          <target state="translated">一些绝对不是不兼容变化的例子包括</target>
        </trans-unit>
        <trans-unit id="c91a6c8d90495de25ebf0f023cdce334bde2cbe6" translate="yes" xml:space="preserve">
          <source>Some existing functions of &lt;code&gt;StringBuilder&lt;/code&gt; are available in the common library. Among them are &lt;code&gt;append()&lt;/code&gt;, &lt;code&gt;insert()&lt;/code&gt;, &lt;code&gt;substring()&lt;/code&gt;, &lt;code&gt;setLength()&lt;/code&gt;, and more.</source>
          <target state="translated">公共库中提供了 &lt;code&gt;StringBuilder&lt;/code&gt; 的一些现有功能。其中包括 &lt;code&gt;append()&lt;/code&gt; ， &lt;code&gt;insert()&lt;/code&gt; ， &lt;code&gt;substring()&lt;/code&gt; ， &lt;code&gt;setLength()&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="e95f2e174405bcc358621966d2d7302865740ca1" translate="yes" xml:space="preserve">
          <source>Some features of Kotlin programming language are not yet mapped into respective features of Objective-C or Swift. Currently, following features are not properly exposed in generated framework headers:</source>
          <target state="translated">Kotlin编程语言的一些特性还没有被映射到Objective-C或Swift的相应特性中。目前,在生成的框架头文件中,以下特征还没有正确地暴露出来。</target>
        </trans-unit>
        <trans-unit id="cb68483f5d41b2d8412528579f8201778d125468" translate="yes" xml:space="preserve">
          <source>Some libraries have proper &lt;code&gt;module.modulemap&lt;/code&gt; or &lt;code&gt;module.map&lt;/code&gt; files in its headers. For example, macOS and iOS system libraries and frameworks do. The &lt;a href=&quot;https://clang.llvm.org/docs/Modules.html#module-map-language&quot;&gt;module map file&lt;/a&gt; describes the correspondence between header files and modules. When the module maps are available, the headers from the modules that are not included directly can be filtered out using the experimental &lt;code&gt;excludeDependentModules&lt;/code&gt; option of the &lt;code&gt;.def&lt;/code&gt; file:</source>
          <target state="translated">一些库的标头中包含正确的 &lt;code&gt;module.modulemap&lt;/code&gt; 或 &lt;code&gt;module.map&lt;/code&gt; 文件。例如，macOS和iOS系统库和框架都可以。的&lt;a href=&quot;https://clang.llvm.org/docs/Modules.html#module-map-language&quot;&gt;模块映射文件&lt;/a&gt;描述的头文件和模块之间的对应关系。当模块映射可用时，可以使用 &lt;code&gt;.def&lt;/code&gt; 文件的实验 &lt;code&gt;excludeDependentModules&lt;/code&gt; 选项过滤掉未直接包含的模块头：</target>
        </trans-unit>
        <trans-unit id="ecbe5afd16b78f70120a5b12f258298956ff8d44" translate="yes" xml:space="preserve">
          <source>Some non-primitive built-in classes are also mapped:</source>
          <target state="translated">一些非原生的内置类也会被映射。</target>
        </trans-unit>
        <trans-unit id="8dee9b7120e2be75fc0bee01d923884834726ceb" translate="yes" xml:space="preserve">
          <source>Some of the Gradle built-in dependencies, like &lt;code&gt;gradleApi()&lt;/code&gt;, &lt;code&gt;localGroovy()&lt;/code&gt;, or &lt;code&gt;gradleTestKit()&lt;/code&gt; are not available in the source sets dependency DSL. You can, however, add them within the top-level dependency block, as shown above.</source>
          <target state="translated">源集合依赖项DSL中不提供某些Gradle内置依赖项，例如 &lt;code&gt;gradleApi()&lt;/code&gt; ， &lt;code&gt;localGroovy()&lt;/code&gt; 或 &lt;code&gt;gradleTestKit()&lt;/code&gt; 。但是，您可以将它们添加到顶级依赖项块中，如上所示。</target>
        </trans-unit>
        <trans-unit id="ca33e1fd8c377d86f53c24cb8d991d157f4d2294" translate="yes" xml:space="preserve">
          <source>Some of the Kotlin keywords are valid identifiers in Java: &lt;em&gt;in&lt;/em&gt;, &lt;em&gt;object&lt;/em&gt;, &lt;em&gt;is&lt;/em&gt;, etc. If a Java library uses a Kotlin keyword for a method, you can still call the method escaping it with the backtick (`) character:</source>
          <target state="translated">某些Kotlin关键字在Java中是有效的标识符：&lt;em&gt;in&lt;/em&gt;，&lt;em&gt;object&lt;/em&gt;，&lt;em&gt;is&lt;/em&gt;等。如果Java库将Kotlin关键字用作方法，您仍然可以调用该方法，并使用反引号（`）字符对其进行转义：</target>
        </trans-unit>
        <trans-unit id="6cec025139e5801ae5f90249c852e460ef019361" translate="yes" xml:space="preserve">
          <source>Some source sets are created and configured by default: &lt;code&gt;commonMain&lt;/code&gt;, &lt;code&gt;commonTest&lt;/code&gt;, and the default source sets for the compilations. See &lt;a href=&quot;#default-project-layout&quot;&gt;Default Project Layout&lt;/a&gt;.</source>
          <target state="translated">默认情况下会创建和配置一些源集： &lt;code&gt;commonMain&lt;/code&gt; ， &lt;code&gt;commonTest&lt;/code&gt; 和编译的默认源集。请参阅&lt;a href=&quot;#default-project-layout&quot;&gt;默认项目布局&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="46849402d48ce8fa8cf59b2eca7dbd26570c373a" translate="yes" xml:space="preserve">
          <source>Some superclasses are very useful as a grouping mechanism for related classes and for providing shared functions, but are so general that they're not useful on their own. &lt;code&gt;MotorVehicle&lt;/code&gt; seems to fit this description. Such a class should be declared &lt;em&gt;abstract&lt;/em&gt;, which will prevent the class from being instantiated directly:</source>
          <target state="translated">某些超类作为相关类的分组机制和提供共享功能非常有用，但是它们是如此笼统，以至于它们本身并没有用。 &lt;code&gt;MotorVehicle&lt;/code&gt; 似乎符合此描述。这样的类应声明为&lt;em&gt;abstract&lt;/em&gt;，这将防止直接实例化该类：</target>
        </trans-unit>
        <trans-unit id="a997931671767da7af31a971af570dea73db8ed8" translate="yes" xml:space="preserve">
          <source>Some targets may require additional configuration. For Android and iOS examples, see the &lt;a href=&quot;../tutorials/native/mpp-ios-android&quot;&gt;Multiplatform Project: iOS and Android&lt;/a&gt; tutorial.</source>
          <target state="translated">一些目标可能需要其他配置。有关Android和iOS的示例，请参见&lt;a href=&quot;../tutorials/native/mpp-ios-android&quot;&gt;Multiplatform Project：iOS和Android&lt;/a&gt;教程。</target>
        </trans-unit>
        <trans-unit id="032ac17975fab5e5d6859c4cde9edfb827035210" translate="yes" xml:space="preserve">
          <source>Some use cases for Kotlin/JS</source>
          <target state="translated">Kotlin/JS的一些用例</target>
        </trans-unit>
        <trans-unit id="63a9fbfe36ca16d1efe57c704a5a06f039c3e063" translate="yes" xml:space="preserve">
          <source>Sometimes it is beneficial to use &lt;a href=&quot;inline-functions&quot;&gt;inline functions&lt;/a&gt;, which provide flexible control flow, for higher-order functions.</source>
          <target state="translated">对于高阶&lt;a href=&quot;inline-functions&quot;&gt;函数&lt;/a&gt;，有时使用内联函数是有益的，它们可以提供灵活的控制流。</target>
        </trans-unit>
        <trans-unit id="b3c9f6d381eb6e20cbdde2643da759944b133d98" translate="yes" xml:space="preserve">
          <source>Sometimes it is convenient to &lt;em&gt;destructure&lt;/em&gt; an object into a number of variables, for example:</source>
          <target state="translated">有时是很方便的&lt;em&gt;解构&lt;/em&gt;对象插入许多变量，例如：</target>
        </trans-unit>
        <trans-unit id="33e9db01a2a661ab9be13fb9f8fffd72e0669fdd" translate="yes" xml:space="preserve">
          <source>Sometimes it is convenient to have an ability to pass some thread-local data to or between coroutines. However, since they are not bound to any particular thread, this will likely lead to boilerplate if done manually.</source>
          <target state="translated">有时,能够将一些线程本地数据传递给coroutine或在coroutine之间传递是很方便的。然而,由于它们不绑定到任何特定的线程,如果手动完成,很可能会导致模板化。</target>
        </trans-unit>
        <trans-unit id="302d682a26f0a7a9291ca67783bee5bced9328f3" translate="yes" xml:space="preserve">
          <source>Sometimes it is convenient to have an ability to pass some thread-local data, but, for coroutines, which are not bound to any particular thread, it is hard to achieve it manually without writing a lot of boilerplate.</source>
          <target state="translated">有的时候,如果能有传递一些线程本地数据的能力是很方便的,但是,对于那些不与任何特定线程绑定的coroutine来说,如果不写大量的模板,很难手动实现。</target>
        </trans-unit>
        <trans-unit id="043a7ce5b4e61465c0bfadb7f717902673e4e6dd" translate="yes" xml:space="preserve">
          <source>Sometimes it is more convenient to ship a static library with your product, rather than assume it is available within the user's environment. To include a static library into &lt;code&gt;.klib&lt;/code&gt; use &lt;code&gt;staticLibrary&lt;/code&gt; and &lt;code&gt;libraryPaths&lt;/code&gt; clauses. For example:</source>
          <target state="translated">有时，随产品一起提供静态库会更方便，而不是假定它在用户环境中可用。要将静态库包含到 &lt;code&gt;.klib&lt;/code&gt; 中,请使用 &lt;code&gt;staticLibrary&lt;/code&gt; 和 &lt;code&gt;libraryPaths&lt;/code&gt; 子句。例如：</target>
        </trans-unit>
        <trans-unit id="bda56f559bfdf285376cfe98c118c1fc0d45e476" translate="yes" xml:space="preserve">
          <source>Sometimes it is necessary for business logic to create a wrapper around some type. However, it introduces runtime overhead due to additional heap allocations. Moreover, if the wrapped type is primitive, the performance hit is terrible, because primitive types are usually heavily optimized by the runtime, while their wrappers don't get any special treatment.</source>
          <target state="translated">有时,业务逻辑有必要围绕某个类型创建一个封装器。然而,由于额外的堆分配,它会引入运行时开销。此外,如果被封装的类型是基元类型,那么对性能的打击是可怕的,因为基元类型通常会被运行时大量优化,而它们的封装器却没有得到任何特殊的处理。</target>
        </trans-unit>
        <trans-unit id="a1c252c20c0ca0a66522a4f37c8be9e2e7e0683f" translate="yes" xml:space="preserve">
          <source>Sometimes it is required to add custom C declarations to the library before generating bindings (e.g., for &lt;a href=&quot;#macros&quot;&gt;macros&lt;/a&gt;). Instead of creating an additional header file with these declarations, you can include them directly to the end of the &lt;code&gt;.def&lt;/code&gt; file, after a separating line, containing only the separator sequence &lt;code&gt;---&lt;/code&gt;:</source>
          <target state="translated">有时需要在生成绑定之前将自定义C声明添加到库中（例如，对于&lt;a href=&quot;#macros&quot;&gt;宏&lt;/a&gt;）。除了使用这些声明创建其他头文件之外，您还可以将它们直接包含在 &lt;code&gt;.def&lt;/code&gt; 文件的末尾，在分隔线之后，仅包含分隔符序列 &lt;code&gt;---&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="56ecfc8da440116471986a5f61a75f0ea7b94e9a" translate="yes" xml:space="preserve">
          <source>Sometimes it is required to override initializers, e.g. when subclassing &lt;code&gt;UIViewController&lt;/code&gt;. Initializers imported as Kotlin constructors can be overridden by Kotlin constructors marked with the &lt;code&gt;@OverrideInit&lt;/code&gt; annotation:</source>
          <target state="translated">有时需要重写初始化器，例如，在对 &lt;code&gt;UIViewController&lt;/code&gt; 进行子类化时。导入为Kotlin构造函数的初始化程序可以被标有 &lt;code&gt;@OverrideInit&lt;/code&gt; 批注的Kotlin构造函数覆盖：</target>
        </trans-unit>
        <trans-unit id="efdaae37e7bf4722447db8e7626c18f363241541" translate="yes" xml:space="preserve">
          <source>Sometimes the C libraries have function parameters or struct fields of a platform-dependent type, e.g. &lt;code&gt;long&lt;/code&gt; or &lt;code&gt;size_t&lt;/code&gt;. Kotlin itself doesn't provide neither implicit integer casts nor C-style integer casts (e.g. &lt;code&gt;(size_t) intValue&lt;/code&gt;), so to make writing portable code in such cases easier, the &lt;code&gt;convert&lt;/code&gt; method is provided:</source>
          <target state="translated">有时，C库具有函数参数或平台相关类型的struct字段，例如 &lt;code&gt;long&lt;/code&gt; 或 &lt;code&gt;size_t&lt;/code&gt; 。Kotlin本身既不提供隐式整数转换也不提供C风格的整数转换（例如 &lt;code&gt;(size_t) intValue&lt;/code&gt; ），因此为了使在这种情况下编写可移植代码更容易，提供了 &lt;code&gt;convert&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="c6d7d45f9a4bb2f105945868e1e4262dd631e65e" translate="yes" xml:space="preserve">
          <source>Sometimes we have a named function in Kotlin, for which we need a different JVM name in the byte code. The most prominent example happens due to &lt;em&gt;type erasure&lt;/em&gt;:</source>
          <target state="translated">有时，我们在Kotlin中有一个命名函数，为此，我们需要在字节码中使用另一个JVM名称。最明显的例子是由于&lt;em&gt;类型擦除&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="57bc7ebf1e9198008144108c9c1119ef8c7efcd8" translate="yes" xml:space="preserve">
          <source>Sometimes we need to access a type passed to us as a parameter:</source>
          <target state="translated">有时我们需要访问一个作为参数传递给我们的类型。</target>
        </trans-unit>
        <trans-unit id="d5900485f21e94ff8c4ddb23a5e9d44345914137" translate="yes" xml:space="preserve">
          <source>Sometimes we need to create an object of a slight modification of some class, without explicitly declaring a new subclass for it. Java handles this case with &lt;em&gt;anonymous inner classes&lt;/em&gt;. Kotlin slightly generalizes this concept with &lt;em&gt;object expressions&lt;/em&gt; and &lt;em&gt;object declarations&lt;/em&gt;.</source>
          <target state="translated">有时我们需要创建一个对某些类稍加修改的对象，而无需为其显式声明一个新的子类。Java用&lt;em&gt;匿名内部类&lt;/em&gt;处理这种情况。Kotlin用&lt;em&gt;对象表达式&lt;/em&gt;和&lt;em&gt;对象声明&lt;/em&gt;稍微概括了这个概念。</target>
        </trans-unit>
        <trans-unit id="a670d77086d7bf5aac8ce4af135b7004f29155cb" translate="yes" xml:space="preserve">
          <source>Sometimes we need to create an object of a slight modification of some class, without explicitly declaring a new subclass for it. Kotlin handles this case with &lt;em&gt;object expressions&lt;/em&gt; and &lt;em&gt;object declarations&lt;/em&gt;.</source>
          <target state="translated">有时我们需要创建一个对某些类稍加修改的对象，而无需为其显式声明一个新的子类。Kotlin用&lt;em&gt;对象表达式&lt;/em&gt;和&lt;em&gt;对象声明&lt;/em&gt;处理这种情况。</target>
        </trans-unit>
        <trans-unit id="b9b1fa0588f23ccc07f2af6fa910811f7863c7b9" translate="yes" xml:space="preserve">
          <source>Sometimes we need to define multiple elements for a coroutine context. We can use the &lt;code&gt;+&lt;/code&gt; operator for that. For example, we can launch a coroutine with an explicitly specified dispatcher and an explicitly specified name at the same time:</source>
          <target state="translated">有时我们需要为协程上下文定义多个元素。我们可以使用 &lt;code&gt;+&lt;/code&gt; 运算符。例如，我们可以同时使用显式指定的调度程序和显式指定的名称启动协程：</target>
        </trans-unit>
        <trans-unit id="c43bb60fb115adf5865cb0fa15a4f5e0748287e9" translate="yes" xml:space="preserve">
          <source>Sometimes we need to define multiple elements for coroutine context. We can use &lt;code&gt;+&lt;/code&gt; operator for that. For example, we can launch a coroutine with an explicitly specified dispatcher and an explicitly specified name at the same time:</source>
          <target state="translated">有时我们需要为协程上下文定义多个元素。我们可以使用 &lt;code&gt;+&lt;/code&gt; 运算符。例如，我们可以同时使用明确指定的调度程序和明确指定的名称启动协程：</target>
        </trans-unit>
        <trans-unit id="1310e09600b521eea851206fd94e82f8d190d5a5" translate="yes" xml:space="preserve">
          <source>Sometimes you are going to use a Kotlin declaration directly from JavaScript, and it's being stripped out by DCE. You may want to keep this declaration. To do so, you can use the following syntax in &lt;code&gt;build.gradle&lt;/code&gt;:</source>
          <target state="translated">有时您将直接从JavaScript使用Kotlin声明，而DCE会将其剥离。您可能需要保留此声明。为此，可以在 &lt;code&gt;build.gradle&lt;/code&gt; 中使用以下语法：</target>
        </trans-unit>
        <trans-unit id="2ac9b5cb701503646e0c16cf47968686ce844099" translate="yes" xml:space="preserve">
          <source>Sometimes you may need to keep a function or a class in the resulting JavaScript code even if you don't use it in your module, for example, if you're going to use it in the client JavaScript code.</source>
          <target state="translated">有时你可能需要在生成的JavaScript代码中保留一个函数或类,即使你不在你的模块中使用它,例如,如果你要在客户端JavaScript代码中使用它。</target>
        </trans-unit>
        <trans-unit id="701d6ffd47aa414cf9e4b9070e6ac69d9f907851" translate="yes" xml:space="preserve">
          <source>Sometimes you may need to quickly write and execute some code outside of a project or an application. This may be useful, for example, when learning Kotlin or evaluating expressions. Let's have a look through two handy ways to quickly run Kotlin code:</source>
          <target state="translated">有时,您可能需要在项目或应用程序之外快速编写和执行一些代码。例如,在学习Kotlin或评估表达式时,这可能很有用。让我们来看看快速运行Kotlin代码的两种便捷方法。</target>
        </trans-unit>
        <trans-unit id="b4425ac713740daf889b7cc088cbeb587776a728" translate="yes" xml:space="preserve">
          <source>Sometimes you need to call a Kotlin method with a parameter of type &lt;code&gt;KClass&lt;/code&gt;. There is no automatic conversion from &lt;code&gt;Class&lt;/code&gt; to &lt;code&gt;KClass&lt;/code&gt;, so you have to do it manually by invoking the equivalent of the &lt;code&gt;Class&amp;lt;T&amp;gt;.kotlin&lt;/code&gt; extension property:</source>
          <target state="translated">有时您需要使用类型为 &lt;code&gt;KClass&lt;/code&gt; 的参数调用Kotlin方法。没有从 &lt;code&gt;Class&lt;/code&gt; 到 &lt;code&gt;KClass&lt;/code&gt; 的自动转换，因此您必须通过调用等价的 &lt;code&gt;Class&amp;lt;T&amp;gt;.kotlin&lt;/code&gt; 扩展属性来手动进行转换：</target>
        </trans-unit>
        <trans-unit id="f7c6d9e07fb190279efd213b27af8a596256a8b2" translate="yes" xml:space="preserve">
          <source>Sometimes you want to say that you know nothing about the type argument, but still want to use it in a safe way. The safe way here is to define such a projection of the generic type, that every concrete instantiation of that generic type would be a subtype of that projection.</source>
          <target state="translated">有时你想说,你对类型参数一无所知,但还是想以一种安全的方式使用它。这里的安全方式是定义这样一个泛型的投影,该泛型的每一个具体实例都将是该投影的一个子类型。</target>
        </trans-unit>
        <trans-unit id="46f170a2459c0e42a18d65de64835d7772e9f851" translate="yes" xml:space="preserve">
          <source>Sometimes, you're in a situation where you have a value &lt;code&gt;x&lt;/code&gt; that you know is not null, but the compiler doesn't realize it. This can legitimately happen when you're interacting with Java code, but if it happens because your code's logic is more complicated than the compiler's ability to reason about it, you should probably restructure your code. If you can't convince the compiler, you can resort to saying &lt;code&gt;x!!&lt;/code&gt; to form an expression that produces the value of &lt;code&gt;x&lt;/code&gt;, but whose type is non-nullable:</source>
          <target state="translated">有时，您处于一个您知道不为null 的值 &lt;code&gt;x&lt;/code&gt; 的情况下，但是编译器没有意识到这一点。当您与Java代码进行交互时，这可以合法地发生，但是如果发生这种情况是因为代码的逻辑比编译器的推理能力更复杂，则您可能应该重组代码。如果您无法说服编译器，则可以诉诸 &lt;code&gt;x!!&lt;/code&gt; 形成一个表达式，该表达式产生 &lt;code&gt;x&lt;/code&gt; 的值，但其类型不可为空：</target>
        </trans-unit>
        <trans-unit id="378e9e163b7eecefadb4415cae533096e336c4ab" translate="yes" xml:space="preserve">
          <source>Sorting</source>
          <target state="translated">Sorting</target>
        </trans-unit>
        <trans-unit id="921e7c9357933042c013290bc34dab79354742a1" translate="yes" xml:space="preserve">
          <source>Sorts a range in the array in-place with the given &lt;a href=&quot;../../kotlin.collections/sort-with#kotlin.collections%24sortWith%28kotlin.Array%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">使用给定的&lt;a href=&quot;../../kotlin.collections/sort-with#kotlin.collections%24sortWith%28kotlin.Array%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;比较器&lt;/a&gt;在数组中对范围进行排序。</target>
        </trans-unit>
        <trans-unit id="7ab5ac4c7321bd5e96bb4ea59931e3aafdf22bba" translate="yes" xml:space="preserve">
          <source>Sorts a range in the array in-place with the given &lt;a href=&quot;../../kotlin.collections/sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">使用给定的&lt;a href=&quot;../../kotlin.collections/sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;比较器&lt;/a&gt;在数组中对范围进行排序。</target>
        </trans-unit>
        <trans-unit id="7a20d1597d8301c3cc3bcec0a63b03857c779e81" translate="yes" xml:space="preserve">
          <source>Sorts a range in the array in-place with the given &lt;a href=&quot;sort-with#kotlin.collections%24sortWith%28kotlin.Array%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">使用给定的&lt;a href=&quot;sort-with#kotlin.collections%24sortWith%28kotlin.Array%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;比较器&lt;/a&gt;在数组中对范围进行排序。</target>
        </trans-unit>
        <trans-unit id="9f29b8a3e32fc7d33d5032a0e7e2570dec8a50ce" translate="yes" xml:space="preserve">
          <source>Sorts a range in the array in-place with the given &lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">使用给定的&lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;比较器&lt;/a&gt;在数组中对范围进行排序。</target>
        </trans-unit>
        <trans-unit id="6f9c7763537514e3ae832c455c2613ffa3795678" translate="yes" xml:space="preserve">
          <source>Sorts a range in the array in-place with the given &lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20kotlin.Comparator((kotlin.collections.sortWith.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">使用给定的&lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20kotlin.Comparator((kotlin.collections.sortWith.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;比较器&lt;/a&gt;在数组中对范围进行排序。</target>
        </trans-unit>
        <trans-unit id="1d1e6b1aadd9cf85696a8efae6efd2f282221c3e" translate="yes" xml:space="preserve">
          <source>Sorts a range in the array in-place.</source>
          <target state="translated">对数组中的一个范围进行原地排序。</target>
        </trans-unit>
        <trans-unit id="10a2c137539a5db660667fa6576c28cd26e36ac6" translate="yes" xml:space="preserve">
          <source>Sorts elements in the array in-place according to natural sort order of the value returned by specified &lt;a href=&quot;../../kotlin.collections/sort-by#kotlin.collections%24sortBy%28kotlin.Array%28%28kotlin.collections.sortBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortBy.T%2C+kotlin.collections.sortBy.R%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">根据指定&lt;a href=&quot;../../kotlin.collections/sort-by#kotlin.collections%24sortBy%28kotlin.Array%28%28kotlin.collections.sortBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortBy.T%2C+kotlin.collections.sortBy.R%29%29%29%2Fselector&quot;&gt;选择器&lt;/a&gt;函数返回的值的自然排序顺序对数组中的元素进行排序。</target>
        </trans-unit>
        <trans-unit id="d614d5f803379f2eec6996f2ea55836ab718c0c6" translate="yes" xml:space="preserve">
          <source>Sorts elements in the array in-place according to natural sort order of the value returned by specified &lt;a href=&quot;../../kotlin.collections/sort-by#kotlin.collections%24sortBy(kotlin.Array((kotlin.collections.sortBy.T)),%20kotlin.Function1((kotlin.collections.sortBy.T,%20kotlin.collections.sortBy.R?)))/selector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">根据指定&lt;a href=&quot;../../kotlin.collections/sort-by#kotlin.collections%24sortBy(kotlin.Array((kotlin.collections.sortBy.T)),%20kotlin.Function1((kotlin.collections.sortBy.T,%20kotlin.collections.sortBy.R?)))/selector&quot;&gt;选择器&lt;/a&gt;函数返回的值的自然排序顺序对数组中的元素进行排序。</target>
        </trans-unit>
        <trans-unit id="07efbdad7d4d4a2414ba73adc668adade052ada0" translate="yes" xml:space="preserve">
          <source>Sorts elements in the array in-place according to natural sort order of the value returned by specified &lt;a href=&quot;sort-by#kotlin.collections%24sortBy%28kotlin.Array%28%28kotlin.collections.sortBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortBy.T%2C+kotlin.collections.sortBy.R%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">根据指定&lt;a href=&quot;sort-by#kotlin.collections%24sortBy%28kotlin.Array%28%28kotlin.collections.sortBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortBy.T%2C+kotlin.collections.sortBy.R%29%29%29%2Fselector&quot;&gt;选择器&lt;/a&gt;函数返回的值的自然排序顺序对数组中的元素进行排序。</target>
        </trans-unit>
        <trans-unit id="cb666ac48c0d59760a086d470c5a19d2b11c9178" translate="yes" xml:space="preserve">
          <source>Sorts elements in the array in-place according to natural sort order of the value returned by specified &lt;a href=&quot;sort-by#kotlin.collections%24sortBy(kotlin.Array((kotlin.collections.sortBy.T)),%20kotlin.Function1((kotlin.collections.sortBy.T,%20kotlin.collections.sortBy.R?)))/selector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">根据指定&lt;a href=&quot;sort-by#kotlin.collections%24sortBy(kotlin.Array((kotlin.collections.sortBy.T)),%20kotlin.Function1((kotlin.collections.sortBy.T,%20kotlin.collections.sortBy.R?)))/selector&quot;&gt;选择器&lt;/a&gt;函数返回的值的自然排序顺序对数组中的元素进行排序。</target>
        </trans-unit>
        <trans-unit id="bf0d525765ea180a93133271ef548eaa25ac7135" translate="yes" xml:space="preserve">
          <source>Sorts elements in the array in-place descending according to natural sort order of the value returned by specified &lt;a href=&quot;../../kotlin.collections/sort-by-descending#kotlin.collections%24sortByDescending%28kotlin.Array%28%28kotlin.collections.sortByDescending.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortByDescending.T%2C+kotlin.collections.sortByDescending.R%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">根据指定&lt;a href=&quot;../../kotlin.collections/sort-by-descending#kotlin.collections%24sortByDescending%28kotlin.Array%28%28kotlin.collections.sortByDescending.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortByDescending.T%2C+kotlin.collections.sortByDescending.R%29%29%29%2Fselector&quot;&gt;选择器&lt;/a&gt;函数返回的值的自然排序顺序对数组中的元素进行降序排序。</target>
        </trans-unit>
        <trans-unit id="524c437730f487654fb5f722d14a0d7c22cf7527" translate="yes" xml:space="preserve">
          <source>Sorts elements in the array in-place descending according to natural sort order of the value returned by specified &lt;a href=&quot;../../kotlin.collections/sort-by-descending#kotlin.collections%24sortByDescending(kotlin.Array((kotlin.collections.sortByDescending.T)),%20kotlin.Function1((kotlin.collections.sortByDescending.T,%20kotlin.collections.sortByDescending.R?)))/selector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">根据指定&lt;a href=&quot;../../kotlin.collections/sort-by-descending#kotlin.collections%24sortByDescending(kotlin.Array((kotlin.collections.sortByDescending.T)),%20kotlin.Function1((kotlin.collections.sortByDescending.T,%20kotlin.collections.sortByDescending.R?)))/selector&quot;&gt;选择器&lt;/a&gt;函数返回的值的自然排序顺序，对数组中的元素进行降序排序。</target>
        </trans-unit>
        <trans-unit id="fa27ec6d7341fe4cf77ef645e820323c332516f4" translate="yes" xml:space="preserve">
          <source>Sorts elements in the array in-place descending according to natural sort order of the value returned by specified &lt;a href=&quot;sort-by-descending#kotlin.collections%24sortByDescending%28kotlin.Array%28%28kotlin.collections.sortByDescending.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortByDescending.T%2C+kotlin.collections.sortByDescending.R%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">根据指定&lt;a href=&quot;sort-by-descending#kotlin.collections%24sortByDescending%28kotlin.Array%28%28kotlin.collections.sortByDescending.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortByDescending.T%2C+kotlin.collections.sortByDescending.R%29%29%29%2Fselector&quot;&gt;选择器&lt;/a&gt;函数返回的值的自然排序顺序对数组中的元素进行降序排序。</target>
        </trans-unit>
        <trans-unit id="7a32fc0d52dda597ec70a61cacc8a5671938c4a0" translate="yes" xml:space="preserve">
          <source>Sorts elements in the array in-place descending according to natural sort order of the value returned by specified &lt;a href=&quot;sort-by-descending#kotlin.collections%24sortByDescending(kotlin.Array((kotlin.collections.sortByDescending.T)),%20kotlin.Function1((kotlin.collections.sortByDescending.T,%20kotlin.collections.sortByDescending.R?)))/selector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">根据指定&lt;a href=&quot;sort-by-descending#kotlin.collections%24sortByDescending(kotlin.Array((kotlin.collections.sortByDescending.T)),%20kotlin.Function1((kotlin.collections.sortByDescending.T,%20kotlin.collections.sortByDescending.R?)))/selector&quot;&gt;选择器&lt;/a&gt;函数返回的值的自然排序顺序，对数组中的元素进行降序排序。</target>
        </trans-unit>
        <trans-unit id="80685ba332e950eb83904d1f4115777122edba8d" translate="yes" xml:space="preserve">
          <source>Sorts elements in the array in-place descending according to their natural sort order.</source>
          <target state="translated">根据数组中元素的自然排序顺序进行降序排序。</target>
        </trans-unit>
        <trans-unit id="3fa32beeb828e11e44487567ba158313d97575ec" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to natural sort order of the value returned by specified &lt;a href=&quot;../sort-by#kotlin.collections%24sortBy%28kotlin.collections.MutableList%28%28kotlin.collections.sortBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortBy.T%2C+kotlin.collections.sortBy.R%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">根据指定&lt;a href=&quot;../sort-by#kotlin.collections%24sortBy%28kotlin.collections.MutableList%28%28kotlin.collections.sortBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortBy.T%2C+kotlin.collections.sortBy.R%29%29%29%2Fselector&quot;&gt;选择器&lt;/a&gt;函数返回的值的自然排序顺序对列表中的元素进行就地排序。</target>
        </trans-unit>
        <trans-unit id="3eb7d662fababf9344b18ca7ba5f8a759432e4ef" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to natural sort order of the value returned by specified &lt;a href=&quot;../sort-by#kotlin.collections%24sortBy(kotlin.collections.MutableList((kotlin.collections.sortBy.T)),%20kotlin.Function1((kotlin.collections.sortBy.T,%20kotlin.collections.sortBy.R?)))/selector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">根据指定&lt;a href=&quot;../sort-by#kotlin.collections%24sortBy(kotlin.collections.MutableList((kotlin.collections.sortBy.T)),%20kotlin.Function1((kotlin.collections.sortBy.T,%20kotlin.collections.sortBy.R?)))/selector&quot;&gt;选择器&lt;/a&gt;函数返回的值的自然排序顺序对列表中的元素进行就地排序。</target>
        </trans-unit>
        <trans-unit id="a6a7a1bbadcee0fdc07b873d422460bcfcf63439" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to natural sort order of the value returned by specified &lt;a href=&quot;sort-by#kotlin.collections%24sortBy%28kotlin.collections.MutableList%28%28kotlin.collections.sortBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortBy.T%2C+kotlin.collections.sortBy.R%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">根据指定&lt;a href=&quot;sort-by#kotlin.collections%24sortBy%28kotlin.collections.MutableList%28%28kotlin.collections.sortBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortBy.T%2C+kotlin.collections.sortBy.R%29%29%29%2Fselector&quot;&gt;选择器&lt;/a&gt;函数返回的值的自然排序顺序对列表中的元素进行就地排序。</target>
        </trans-unit>
        <trans-unit id="1cc10c6d35be064c290d10ca48ea91be0492f9d7" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to natural sort order of the value returned by specified &lt;a href=&quot;sort-by#kotlin.collections%24sortBy(kotlin.collections.MutableList((kotlin.collections.sortBy.T)),%20kotlin.Function1((kotlin.collections.sortBy.T,%20kotlin.collections.sortBy.R?)))/selector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">根据指定&lt;a href=&quot;sort-by#kotlin.collections%24sortBy(kotlin.collections.MutableList((kotlin.collections.sortBy.T)),%20kotlin.Function1((kotlin.collections.sortBy.T,%20kotlin.collections.sortBy.R?)))/selector&quot;&gt;选择器&lt;/a&gt;函数返回的值的自然排序顺序对列表中的元素进行就地排序。</target>
        </trans-unit>
        <trans-unit id="016acc76aaf4b67ee4196bd0e6dd698c603f8a7f" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to the order specified with &lt;a href=&quot;../sort-with#kotlin.collections%24sortWith%28kotlin.collections.MutableList%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">根据&lt;a href=&quot;../sort-with#kotlin.collections%24sortWith%28kotlin.collections.MutableList%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;比较器&lt;/a&gt;指定的顺序就地对列表中的元素进行排序。</target>
        </trans-unit>
        <trans-unit id="7d3a9a30252022d98ff14ad32e68d6472da5d759" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to the order specified with &lt;a href=&quot;../sort-with#kotlin.collections%24sortWith(kotlin.collections.MutableList((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">根据&lt;a href=&quot;../sort-with#kotlin.collections%24sortWith(kotlin.collections.MutableList((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;比较器&lt;/a&gt;指定的顺序就地对列表中的元素进行排序。</target>
        </trans-unit>
        <trans-unit id="3bd3e4d90292d259ee01f75c87c74c625704e409" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to the order specified with &lt;a href=&quot;sort-with#kotlin.collections%24sortWith%28kotlin.collections.MutableList%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">根据&lt;a href=&quot;sort-with#kotlin.collections%24sortWith%28kotlin.collections.MutableList%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;比较器&lt;/a&gt;指定的顺序就地对列表中的元素进行排序。</target>
        </trans-unit>
        <trans-unit id="a27a30d98060067ccc92da7c7b7abd9184f7e85d" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to the order specified with &lt;a href=&quot;sort-with#kotlin.collections%24sortWith%28kotlin.collections.MutableList%28%28kotlin.collections.sortWith.T%29%29%2C+kotlin.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">根据&lt;a href=&quot;sort-with#kotlin.collections%24sortWith%28kotlin.collections.MutableList%28%28kotlin.collections.sortWith.T%29%29%2C+kotlin.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;比较器&lt;/a&gt;指定的顺序就地对列表中的元素进行排序。</target>
        </trans-unit>
        <trans-unit id="930e6c0e376a0ececcef9397828f3578ceab50b2" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to the order specified with &lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.collections.MutableList((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">根据&lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.collections.MutableList((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;比较器&lt;/a&gt;指定的顺序就地对列表中的元素进行排序。</target>
        </trans-unit>
        <trans-unit id="451f15947f12afae8573658bfb10d315dd72debd" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to the order specified with &lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.collections.MutableList((kotlin.collections.sortWith.T)),%20kotlin.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">根据&lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.collections.MutableList((kotlin.collections.sortWith.T)),%20kotlin.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;比较器&lt;/a&gt;指定的顺序就地对列表中的元素进行排序。</target>
        </trans-unit>
        <trans-unit id="08c50e4dcb5f1e790b3908c92dfd681b51af4fd6" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to their natural sort order.</source>
          <target state="translated">按照自然排序顺序对列表中的元素进行就地排序。</target>
        </trans-unit>
        <trans-unit id="518d2bf6df28c01bc5ce865b286b09bcb6bd8f57" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place descending according to natural sort order of the value returned by specified &lt;a href=&quot;../sort-by-descending#kotlin.collections%24sortByDescending%28kotlin.collections.MutableList%28%28kotlin.collections.sortByDescending.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortByDescending.T%2C+kotlin.collections.sortByDescending.R%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">根据指定&lt;a href=&quot;../sort-by-descending#kotlin.collections%24sortByDescending%28kotlin.collections.MutableList%28%28kotlin.collections.sortByDescending.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortByDescending.T%2C+kotlin.collections.sortByDescending.R%29%29%29%2Fselector&quot;&gt;选择器&lt;/a&gt;函数返回的值的自然排序顺序对列表中的元素进行降序排序。</target>
        </trans-unit>
        <trans-unit id="95b14134f87e11edfb507c62a0dc049983651cb2" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place descending according to natural sort order of the value returned by specified &lt;a href=&quot;../sort-by-descending#kotlin.collections%24sortByDescending(kotlin.collections.MutableList((kotlin.collections.sortByDescending.T)),%20kotlin.Function1((kotlin.collections.sortByDescending.T,%20kotlin.collections.sortByDescending.R?)))/selector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">根据指定&lt;a href=&quot;../sort-by-descending#kotlin.collections%24sortByDescending(kotlin.collections.MutableList((kotlin.collections.sortByDescending.T)),%20kotlin.Function1((kotlin.collections.sortByDescending.T,%20kotlin.collections.sortByDescending.R?)))/selector&quot;&gt;选择器&lt;/a&gt;函数返回的值的自然排序顺序，对列表中的元素进行降序排序。</target>
        </trans-unit>
        <trans-unit id="a90b16f5917d7428e33805718ad4902f7d836c1f" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place descending according to natural sort order of the value returned by specified &lt;a href=&quot;sort-by-descending#kotlin.collections%24sortByDescending%28kotlin.collections.MutableList%28%28kotlin.collections.sortByDescending.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortByDescending.T%2C+kotlin.collections.sortByDescending.R%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">根据指定&lt;a href=&quot;sort-by-descending#kotlin.collections%24sortByDescending%28kotlin.collections.MutableList%28%28kotlin.collections.sortByDescending.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortByDescending.T%2C+kotlin.collections.sortByDescending.R%29%29%29%2Fselector&quot;&gt;选择器&lt;/a&gt;函数返回的值的自然排序顺序对列表中的元素进行降序排序。</target>
        </trans-unit>
        <trans-unit id="7864ad53951825c4ba3b7854eddaf6b68d4f97be" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place descending according to natural sort order of the value returned by specified &lt;a href=&quot;sort-by-descending#kotlin.collections%24sortByDescending(kotlin.collections.MutableList((kotlin.collections.sortByDescending.T)),%20kotlin.Function1((kotlin.collections.sortByDescending.T,%20kotlin.collections.sortByDescending.R?)))/selector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">根据指定&lt;a href=&quot;sort-by-descending#kotlin.collections%24sortByDescending(kotlin.collections.MutableList((kotlin.collections.sortByDescending.T)),%20kotlin.Function1((kotlin.collections.sortByDescending.T,%20kotlin.collections.sortByDescending.R?)))/selector&quot;&gt;选择器&lt;/a&gt;函数返回的值的自然排序顺序，对列表中的元素进行降序排序。</target>
        </trans-unit>
        <trans-unit id="8d80c7611560449691efd4fd1165c90dfada93cf" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place descending according to their natural sort order.</source>
          <target state="translated">按照自然排序顺序对列表中的元素进行降序排序。</target>
        </trans-unit>
        <trans-unit id="33cd75f026ddd26de228ee011733f2d816ccf5a7" translate="yes" xml:space="preserve">
          <source>Sorts elements of the array in the specified range in-place. The elements are sorted descending according to their natural sort order.</source>
          <target state="translated">对指定范围内的数组元素进行原地排序。根据元素的自然排序顺序进行降序排序。</target>
        </trans-unit>
        <trans-unit id="286952b1c23000c7e96cb265d1597ee4be034d09" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the natural order of its elements.</source>
          <target state="translated">根据元素的自然顺序对数组进行就地排序。</target>
        </trans-unit>
        <trans-unit id="d8747f2faabc6c9d8057fc49ebee4065869ad5f8" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.Array%28%28kotlin.collections.sort.T%29%29%2C+kotlin.Function2%28%28kotlin.collections.sort.T%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">根据给定&lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.Array%28%28kotlin.collections.sort.T%29%29%2C+kotlin.Function2%28%28kotlin.collections.sort.T%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;比较&lt;/a&gt;函数指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="d1839449662e167b67669a9432e7e5b8cda47aee" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.ByteArray%2C+kotlin.Function2%28%28kotlin.Byte%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">根据给定&lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.ByteArray%2C+kotlin.Function2%28%28kotlin.Byte%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;比较&lt;/a&gt;函数指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="7d1ba7dd62c04c8e2b5a71936a2028b1fc09c095" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.CharArray%2C+kotlin.Function2%28%28kotlin.Char%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">根据给定&lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.CharArray%2C+kotlin.Function2%28%28kotlin.Char%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;比较&lt;/a&gt;函数指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="0768dfe6e47561708ff3dcc3e7544aaeba456f69" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.DoubleArray%2C+kotlin.Function2%28%28kotlin.Double%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">根据给定&lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.DoubleArray%2C+kotlin.Function2%28%28kotlin.Double%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;比较&lt;/a&gt;函数指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="c50febead4efd17d0d1e1a05393ce1b4d81939d6" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.FloatArray%2C+kotlin.Function2%28%28kotlin.Float%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">根据给定&lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.FloatArray%2C+kotlin.Function2%28%28kotlin.Float%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;比较&lt;/a&gt;函数指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="614045354e7f88dacd9beea842f592073eab2474" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.IntArray%2C+kotlin.Function2%28%28kotlin.Int%2C+%2C+%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">根据给定&lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.IntArray%2C+kotlin.Function2%28%28kotlin.Int%2C+%2C+%29%29%29%2Fcomparison&quot;&gt;比较&lt;/a&gt;函数指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="92757cae315a994755e0f14f54db5ba3c6d0198c" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.LongArray%2C+kotlin.Function2%28%28kotlin.Long%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">根据给定&lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.LongArray%2C+kotlin.Function2%28%28kotlin.Long%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;比较&lt;/a&gt;函数指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="66732bd072b25ed9a6c879f731965bd5869d1d8e" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.ShortArray%2C+kotlin.Function2%28%28kotlin.Short%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">根据给定&lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.ShortArray%2C+kotlin.Function2%28%28kotlin.Short%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;比较&lt;/a&gt;函数指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="91018bf823a42030e6a02cceb91f30bb23b4a3c0" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.Array((kotlin.collections.sort.T)),%20kotlin.Function2((kotlin.collections.sort.T,%20,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">根据给定&lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.Array((kotlin.collections.sort.T)),%20kotlin.Function2((kotlin.collections.sort.T,%20,%20kotlin.Int)))/comparison&quot;&gt;比较&lt;/a&gt;函数指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="45c4d8278b87d47b820ac64aa10b40a0666016d9" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.ByteArray,%20kotlin.Function2((kotlin.Byte,%20,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">根据给定&lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.ByteArray,%20kotlin.Function2((kotlin.Byte,%20,%20kotlin.Int)))/comparison&quot;&gt;比较&lt;/a&gt;函数指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="8d58f0c19f310d1e8a64af26ab6a55ccb19982af" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.CharArray,%20kotlin.Function2((kotlin.Char,%20,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">根据给定&lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.CharArray,%20kotlin.Function2((kotlin.Char,%20,%20kotlin.Int)))/comparison&quot;&gt;比较&lt;/a&gt;函数指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="fe7403a5f0d391d45b595ab43a3107f32e06e822" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.DoubleArray,%20kotlin.Function2((kotlin.Double,%20,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">根据给定&lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.DoubleArray,%20kotlin.Function2((kotlin.Double,%20,%20kotlin.Int)))/comparison&quot;&gt;比较&lt;/a&gt;函数指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="b2301cc5b5b314eaa58d9ee71dd9a9e964db0dc4" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.FloatArray,%20kotlin.Function2((kotlin.Float,%20,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">根据给定&lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.FloatArray,%20kotlin.Function2((kotlin.Float,%20,%20kotlin.Int)))/comparison&quot;&gt;比较&lt;/a&gt;函数指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="93bcc1eefdaf25d6723a4105199c0ed6bf596de2" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.IntArray,%20kotlin.Function2((kotlin.Int,%20,%20)))/comparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">根据给定&lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.IntArray,%20kotlin.Function2((kotlin.Int,%20,%20)))/comparison&quot;&gt;比较&lt;/a&gt;函数指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="e2c0f1af6fb67463fda31931682ae64c5c3cae23" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.LongArray,%20kotlin.Function2((kotlin.Long,%20,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">根据给定&lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.LongArray,%20kotlin.Function2((kotlin.Long,%20,%20kotlin.Int)))/comparison&quot;&gt;比较&lt;/a&gt;函数指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="227678b50ff9b8109437a8bbff4850e7049d5b30" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.ShortArray,%20kotlin.Function2((kotlin.Short,%20,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">根据给定&lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.ShortArray,%20kotlin.Function2((kotlin.Short,%20,%20kotlin.Int)))/comparison&quot;&gt;比较&lt;/a&gt;函数指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="026d2b0c0155084b25c8a6103dc14e9f42617ceb" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort-with#kotlin.collections%24sortWith%28kotlin.Array%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">根据给定&lt;a href=&quot;../../kotlin.collections/sort-with#kotlin.collections%24sortWith%28kotlin.Array%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;比较器&lt;/a&gt;指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="af92791ea6ee6d6d22da0220657548b203875847" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">根据给定&lt;a href=&quot;../../kotlin.collections/sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;比较器&lt;/a&gt;指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="6ceaa28ff8b5e20a64c1dd76210809e53340579a" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;sort#kotlin.collections%24sort%28kotlin.Array%28%28kotlin.collections.sort.T%29%29%2C+kotlin.Function2%28%28kotlin.collections.sort.T%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">根据给定&lt;a href=&quot;sort#kotlin.collections%24sort%28kotlin.Array%28%28kotlin.collections.sort.T%29%29%2C+kotlin.Function2%28%28kotlin.collections.sort.T%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;比较&lt;/a&gt;函数指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="dbb39b6e7209d703010d1dea803d9e9f184dfb3a" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;sort#kotlin.collections%24sort%28kotlin.ByteArray%2C+kotlin.Function2%28%28kotlin.Byte%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">根据给定&lt;a href=&quot;sort#kotlin.collections%24sort%28kotlin.ByteArray%2C+kotlin.Function2%28%28kotlin.Byte%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;比较&lt;/a&gt;函数指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="e363a91bc377e2dc1cd26c0f020a22cd2d9e7d60" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;sort#kotlin.collections%24sort(kotlin.Array((kotlin.collections.sort.T)),%20kotlin.Function2((kotlin.collections.sort.T,%20,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">根据给定&lt;a href=&quot;sort#kotlin.collections%24sort(kotlin.Array((kotlin.collections.sort.T)),%20kotlin.Function2((kotlin.collections.sort.T,%20,%20kotlin.Int)))/comparison&quot;&gt;比较&lt;/a&gt;函数指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="70a950e4b0a885649ef8eb42fd69f7d9fccd7744" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;sort#kotlin.collections%24sort(kotlin.ByteArray,%20kotlin.Function2((kotlin.Byte,%20,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">根据给定&lt;a href=&quot;sort#kotlin.collections%24sort(kotlin.ByteArray,%20kotlin.Function2((kotlin.Byte,%20,%20kotlin.Int)))/comparison&quot;&gt;比较&lt;/a&gt;函数指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="0fa5aed9839230cbb9bbcaa97445de61b613d5ee" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;sort-with#kotlin.collections%24sortWith%28kotlin.Array%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">根据给定&lt;a href=&quot;sort-with#kotlin.collections%24sortWith%28kotlin.Array%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;比较器&lt;/a&gt;指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="ae101b411aaa730dbbdac995beae34b884882ebe" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;sort-with#kotlin.collections%24sortWith%28kotlin.Array%28%28kotlin.collections.sortWith.T%29%29%2C+kotlin.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">根据给定&lt;a href=&quot;sort-with#kotlin.collections%24sortWith%28kotlin.Array%28%28kotlin.collections.sortWith.T%29%29%2C+kotlin.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;比较器&lt;/a&gt;指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="e9bb0004209ee2991798c36960e91ab537d041fe" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">根据给定&lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;比较器&lt;/a&gt;指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="1bbc6b3dbd2ee856625f928ed05caaadf58b1098" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20kotlin.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">根据给定&lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20kotlin.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;比较器&lt;/a&gt;指定的顺序对数组进行原位排序。</target>
        </trans-unit>
        <trans-unit id="4770f48b5aef319d4b83ff34a0f71504fb9289b9" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place.</source>
          <target state="translated">对数组进行就地排序。</target>
        </trans-unit>
        <trans-unit id="7ca4493ee7745c260d2545e5a7bcb290392c92d7" translate="yes" xml:space="preserve">
          <source>Source and binary compatibility may have different modes for the same component, e.g. the source language can reach full stability before the binary format stabilizes, or vice versa.</source>
          <target state="translated">源语言和二进制兼容性对同一组件可能有不同的模式,例如源语言可以在二进制格式稳定之前达到完全稳定,反之亦然。</target>
        </trans-unit>
        <trans-unit id="2dcfc2bd4a05ff58d81210efcb67bf27a9d1018d" translate="yes" xml:space="preserve">
          <source>Source code organization</source>
          <target state="translated">源代码组织</target>
        </trans-unit>
        <trans-unit id="91b779a28949d8daf60f28816366c445cff3b975" translate="yes" xml:space="preserve">
          <source>Source file names</source>
          <target state="translated">源文件名</target>
        </trans-unit>
        <trans-unit id="b8b646a7bd4b1ccfe7716e24991769415bb7ad29" translate="yes" xml:space="preserve">
          <source>Source file organization</source>
          <target state="translated">源文件组织</target>
        </trans-unit>
        <trans-unit id="ba5b3110bc5e4b2e8ea36f406acb0d11147c336c" translate="yes" xml:space="preserve">
          <source>Source management</source>
          <target state="translated">源头管理</target>
        </trans-unit>
        <trans-unit id="83330f3a77279d034f4be00739a614f19c8cd41b" translate="yes" xml:space="preserve">
          <source>Source management in the &lt;code&gt;kotlin.platform.native&lt;/code&gt; plugin is uniform with other Kotlin plugins and is based on source sets. A source set is a group of Kotlin/Native source which may contain both common and platform-specific code. The plugin provides a top-level script block &lt;code&gt;sourceSets&lt;/code&gt; allowing you to configure source sets. Also it creates the default source sets &lt;code&gt;main&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; (for production and test code respectively).</source>
          <target state="translated">&lt;code&gt;kotlin.platform.native&lt;/code&gt; 插件中的源代码管理与其他Kotlin插件相同，并且基于源集。来源集是一组Kotlin / Native来源，可能包含通用和特定于平台的代码。该插件提供了一个顶级脚本块 &lt;code&gt;sourceSets&lt;/code&gt; ,使您可以配置源集。它还会创建默认的源集 &lt;code&gt;main&lt;/code&gt; 和 &lt;code&gt;test&lt;/code&gt; （分别用于生产和测试代码）。</target>
        </trans-unit>
        <trans-unit id="5a04b704bdb00ffe1d818abc41c5dce1bdc2534c" translate="yes" xml:space="preserve">
          <source>Source maps generation</source>
          <target state="translated">源地图的生成</target>
        </trans-unit>
        <trans-unit id="3a1fb36854fc215c5a42ea8c907f8bd110153a70" translate="yes" xml:space="preserve">
          <source>Source set dependencies can also be declared in the top-level &lt;code&gt;dependencies&lt;/code&gt; block of the build script. In this case, their declarations follow the pattern &lt;code&gt;&amp;lt;sourceSetName&amp;gt;&amp;lt;DependencyKind&amp;gt;&lt;/code&gt;, for example, &lt;code&gt;commonMainApi&lt;/code&gt;.</source>
          <target state="translated">源集依赖关系也可以在构建脚本的顶级 &lt;code&gt;dependencies&lt;/code&gt; 块中声明。在这种情况下，它们的声明遵循 &lt;code&gt;&amp;lt;sourceSetName&amp;gt;&amp;lt;DependencyKind&amp;gt;&lt;/code&gt; 模式，例如 &lt;code&gt;commonMainApi&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0c84298e00352e684c651b8707f885d889884fa" translate="yes" xml:space="preserve">
          <source>Source set names are case sensitive.</source>
          <target state="translated">源集名称区分大小写。</target>
        </trans-unit>
        <trans-unit id="5f0f55d257ec2fab62cd95595ecdb3e0df948930" translate="yes" xml:space="preserve">
          <source>Source set parameters</source>
          <target state="translated">源设置参数</target>
        </trans-unit>
        <trans-unit id="15e41f4b17a880b8283a16b3a922b0eb072eb8ed" translate="yes" xml:space="preserve">
          <source>Source sets</source>
          <target state="translated">来源集</target>
        </trans-unit>
        <trans-unit id="df1f369fc3f5d0f6aefc546af4fc733b7da5ac83" translate="yes" xml:space="preserve">
          <source>Source sets are added to the &lt;code&gt;sourceSets&lt;/code&gt; block of the top-level &lt;code&gt;kotlin&lt;/code&gt; block.</source>
          <target state="translated">将源集添加到顶级 &lt;code&gt;sourceSets&lt;/code&gt; 块的 &lt;code&gt;kotlin&lt;/code&gt; 块中。</target>
        </trans-unit>
        <trans-unit id="708a466fe6dad98c570f231d1548d606e08ba67c" translate="yes" xml:space="preserve">
          <source>Source sets can now be shared between an arbitrary subset of platforms (for example, in a module that targets JS, Android and iOS, you can have a source set that is shared only between Android and iOS).</source>
          <target state="translated">源集现在可以在任意的平台子集之间共享(例如,在针对JS、Android和iOS的模块中,你可以拥有一个只在Android和iOS之间共享的源集)。</target>
        </trans-unit>
        <trans-unit id="a179b7b1706e0fe67d7be610c4d8dd1c8013e437" translate="yes" xml:space="preserve">
          <source>Source sets form a hierarchy, which is used for sharing the common code. In a source set shared among several targets, you can use the platform-specific language features and dependencies that are available for all these targets.</source>
          <target state="translated">源集形成了一个层次结构,它用于共享通用代码。在多个目标共享的源码集中,你可以使用所有这些目标都可以使用的平台特定语言特性和依赖性。</target>
        </trans-unit>
        <trans-unit id="7d81fa9338d2f277e93ab53d4e7c670340e5287f" translate="yes" xml:space="preserve">
          <source>Source sets participating in the compilation and their connections via &lt;code&gt;dependsOn()&lt;/code&gt;.</source>
          <target state="translated">参与编译的源集及其通过 &lt;code&gt;dependsOn()&lt;/code&gt; 的连接。</target>
        </trans-unit>
        <trans-unit id="8140a2e3acdf49cd3399aced21db07013d331e20" translate="yes" xml:space="preserve">
          <source>Source sets participating in the compilation.</source>
          <target state="translated">参加汇编的源集。</target>
        </trans-unit>
        <trans-unit id="2feb63b3ff19c42a8edc6ffc039220ef18a5c33f" translate="yes" xml:space="preserve">
          <source>Source: source-incompatible change stops code that used to compile fine (without errors or warnings) from compiling anymore</source>
          <target state="translated">源码:源码不兼容的改变使过去能正常编译的代码不再编译(没有错误或警告)。</target>
        </trans-unit>
        <trans-unit id="7ab8a35d5b56ed27ea2aeaf613f924074e07d76f" translate="yes" xml:space="preserve">
          <source>Sources of &lt;code&gt;jvmMain&lt;/code&gt; 'see' the declarations of &lt;code&gt;commonMain&lt;/code&gt;, including internal declarations, and also see the &lt;a href=&quot;mpp-add-dependencies&quot;&gt;dependencies&lt;/a&gt; of &lt;code&gt;commonMain&lt;/code&gt;, even those specified as &lt;code&gt;implementation&lt;/code&gt; dependencies.</source>
          <target state="translated">来源 &lt;code&gt;jvmMain&lt;/code&gt; &amp;ldquo;看&amp;rdquo;的声明 &lt;code&gt;commonMain&lt;/code&gt; ，包括内部声明，并且也看到了&lt;a href=&quot;mpp-add-dependencies&quot;&gt;依赖&lt;/a&gt;的 &lt;code&gt;commonMain&lt;/code&gt; ，即使是那些指定为 &lt;code&gt;implementation&lt;/code&gt; 依赖。</target>
        </trans-unit>
        <trans-unit id="44f1fc4c183f95acabbc53da2abac4d4f1206e1e" translate="yes" xml:space="preserve">
          <source>Special Cases:</source>
          <target state="translated">特殊情况:</target>
        </trans-unit>
        <trans-unit id="3e47d59ad303a035e3cd65578d432eefaa1b80ed" translate="yes" xml:space="preserve">
          <source>Special Identifiers</source>
          <target state="translated">特殊标识符</target>
        </trans-unit>
        <trans-unit id="da9712bd56acfa78d3913a233d114cc9c2158cd7" translate="yes" xml:space="preserve">
          <source>Special case:</source>
          <target state="translated">特殊情况。</target>
        </trans-unit>
        <trans-unit id="56064f3962c04c365c47471ff7513622d3ab0964" translate="yes" xml:space="preserve">
          <source>Special cases:</source>
          <target state="translated">特殊情况:</target>
        </trans-unit>
        <trans-unit id="c50a4829b036375e75f919f98b4f3fb6147ea678" translate="yes" xml:space="preserve">
          <source>Special cases: - &lt;code&gt;acos(x)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;, when &lt;code&gt;abs(x) &amp;gt; 1&lt;/code&gt; or x is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">特殊情况： &lt;code&gt;acos(x)&lt;/code&gt; 为 &lt;code&gt;NaN&lt;/code&gt; ，当 &lt;code&gt;abs(x) &amp;gt; 1&lt;/code&gt; 或x为 &lt;code&gt;NaN&lt;/code&gt; 时</target>
        </trans-unit>
        <trans-unit id="87ab084bbfabe196612e1b63be02ed62abd6f7a4" translate="yes" xml:space="preserve">
          <source>Special cases: - &lt;code&gt;asin(x)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;, when &lt;code&gt;abs(x) &amp;gt; 1&lt;/code&gt; or x is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">特殊情况： - &lt;code&gt;asin(x)&lt;/code&gt; 是 &lt;code&gt;NaN&lt;/code&gt; 的，当 &lt;code&gt;abs(x) &amp;gt; 1&lt;/code&gt; 或x为 &lt;code&gt;NaN&lt;/code&gt; 的</target>
        </trans-unit>
        <trans-unit id="80224f054ccac92a6dba14551f00788e44fb6cea" translate="yes" xml:space="preserve">
          <source>Special cases: - &lt;code&gt;x.IEEErem(y)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;, when &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; or &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;+Inf|-Inf&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt; is zero. - &lt;code&gt;x.IEEErem(y) == x&lt;/code&gt; when &lt;code&gt;x&lt;/code&gt; is finite and &lt;code&gt;y&lt;/code&gt; is infinite.</source>
          <target state="translated">特殊情况： &lt;code&gt;x.IEEErem(y)&lt;/code&gt; 为 &lt;code&gt;NaN&lt;/code&gt; ，当 &lt;code&gt;x&lt;/code&gt; 为 &lt;code&gt;NaN&lt;/code&gt; 或 &lt;code&gt;y&lt;/code&gt; 为 &lt;code&gt;NaN&lt;/code&gt; 或 &lt;code&gt;x&lt;/code&gt; 为 &lt;code&gt;+Inf|-Inf&lt;/code&gt; 或 &lt;code&gt;y&lt;/code&gt; 为零时。- &lt;code&gt;x.IEEErem(y) == x&lt;/code&gt; 时 &lt;code&gt;x&lt;/code&gt; 是有限的，并且 &lt;code&gt;y&lt;/code&gt; 是无限的。</target>
        </trans-unit>
        <trans-unit id="396f015dcc0a4c9a33dfce58b73cb0338669c047" translate="yes" xml:space="preserve">
          <source>Specialized classes</source>
          <target state="translated">专科班</target>
        </trans-unit>
        <trans-unit id="80214f6fe7568d1fe2eee4a6a25be91492189547" translate="yes" xml:space="preserve">
          <source>Specific return type. The return type moves away from the actual data that we need and instead returns a new type &lt;code&gt;Promise&lt;/code&gt; which has to be introspected.</source>
          <target state="translated">特定的返回类型。返回类型远离我们所需的实际数据，而是返回必须自省的新类型 &lt;code&gt;Promise&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10be766e1422f005154bcf107bfdb65683d40144" translate="yes" xml:space="preserve">
          <source>Specifies a code fragment that can be used to replace a deprecated function, property or class. Tools such as IDEs can automatically apply the replacements specified through this annotation.</source>
          <target state="translated">指定一个代码片段,可以用来替换一个废弃的函数、属性或类。IDE等工具可以自动应用通过此注解指定的替换。</target>
        </trans-unit>
        <trans-unit id="e79b774805d0e487b261afea40d86497adec80c0" translate="yes" xml:space="preserve">
          <source>Specifies build variants to publish. Learn more about &lt;a href=&quot;mpp-publish-lib#publish-an-android-library&quot;&gt;publishing Android libraries&lt;/a&gt;.</source>
          <target state="translated">指定要发布的构建变体。了解有关&lt;a href=&quot;mpp-publish-lib#publish-an-android-library&quot;&gt;发布Android库的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit id="f6bde6daa244f6b004cb3386a82fc9dfe647f4b6" translate="yes" xml:space="preserve">
          <source>Specifies how a &lt;a href=&quot;-lazy/index&quot;&gt;Lazy&lt;/a&gt; instance synchronizes initialization among multiple threads.</source>
          <target state="translated">指定&lt;a href=&quot;-lazy/index&quot;&gt;惰性&lt;/a&gt;实例如何在多个线程之间同步初始化。</target>
        </trans-unit>
        <trans-unit id="7a34891c3f008a377113c6728bb426ade078566a" translate="yes" xml:space="preserve">
          <source>Specifies how a &lt;a href=&quot;../-lazy/index&quot;&gt;Lazy&lt;/a&gt; instance synchronizes initialization among multiple threads.</source>
          <target state="translated">指定&lt;a href=&quot;../-lazy/index&quot;&gt;惰性&lt;/a&gt;实例如何在多个线程之间同步初始化。</target>
        </trans-unit>
        <trans-unit id="c4f0b89f9b2bcd589a457d848fb7af8fa36d078a" translate="yes" xml:space="preserve">
          <source>Specifies how many times a function invokes its function parameter in place.</source>
          <target state="translated">指定一个函数在原地调用其函数参数的次数。</target>
        </trans-unit>
        <trans-unit id="e23535d6faf71a1a72da5d8b0c47cb4ff5c68bd4" translate="yes" xml:space="preserve">
          <source>Specifies how the deprecated element usages are reported in code. See the &lt;a href=&quot;../-deprecation-level/index#kotlin.DeprecationLevel&quot;&gt;DeprecationLevel&lt;/a&gt; enum for the possible values.</source>
          <target state="translated">指定如何在代码中报告已弃用的元素用法。有关可能的值，请参见&lt;a href=&quot;../-deprecation-level/index#kotlin.DeprecationLevel&quot;&gt;DeprecationLevel&lt;/a&gt;枚举。</target>
        </trans-unit>
        <trans-unit id="1273973520fb373ff0923e2955fc0a8aa51d89ca" translate="yes" xml:space="preserve">
          <source>Specifies that a JVM default method should be generated for non-abstract Kotlin interface member.</source>
          <target state="translated">指定应该为非抽象的Kotlin接口成员生成一个JVM默认方法。</target>
        </trans-unit>
        <trans-unit id="0d858352b2faa2364259e1d1426fda7094887ac3" translate="yes" xml:space="preserve">
          <source>Specifies that a warning should be reported on incorrect usages of this API.</source>
          <target state="translated">指定在错误使用该API时应报告警告。</target>
        </trans-unit>
        <trans-unit id="1b608a06a3ef3e2f1977895180f9d7cd6dab326f" translate="yes" xml:space="preserve">
          <source>Specifies that a warning should be reported on incorrect usages of this experimental API.</source>
          <target state="translated">指定在不正确使用这个实验性API时应该报告一个警告。</target>
        </trans-unit>
        <trans-unit id="9ad2d2ca6b5a6cc26f2cb4f5defb3fa422218068" translate="yes" xml:space="preserve">
          <source>Specifies that an additional static method needs to be generated from this element if it's a function. If this element is a property, additional static getter/setter methods should be generated.</source>
          <target state="translated">指定如果这个元素是函数,需要从这个元素中生成额外的静态方法。如果这个元素是一个属性,则需要生成额外的静态getter/setter方法。</target>
        </trans-unit>
        <trans-unit id="065827239ea2e06c76078cee19213f416fe66445" translate="yes" xml:space="preserve">
          <source>Specifies that an error should be reported on incorrect usages of this API.</source>
          <target state="translated">指定在不正确使用该API时应报告的错误。</target>
        </trans-unit>
        <trans-unit id="41dca1654db714e11bbcbe786e5e6118d5a8481b" translate="yes" xml:space="preserve">
          <source>Specifies that an error should be reported on incorrect usages of this experimental API.</source>
          <target state="translated">指定在不正确使用该实验性API时应报告的错误。</target>
        </trans-unit>
        <trans-unit id="b8fb6a1c5d45c4db1467991d5c234e6ab817a1e3" translate="yes" xml:space="preserve">
          <source>Specifies that the function parameter &lt;a href=&quot;calls-in-place#kotlin.contracts.ContractBuilder%24callsInPlace%28kotlin.Function%28%28kotlin.contracts.ContractBuilder.callsInPlace.R%29%29%2C+kotlin.contracts.InvocationKind%29%2Flambda&quot;&gt;lambda&lt;/a&gt; is invoked in place.</source>
          <target state="translated">指定在适当位置调用函数参数&lt;a href=&quot;calls-in-place#kotlin.contracts.ContractBuilder%24callsInPlace%28kotlin.Function%28%28kotlin.contracts.ContractBuilder.callsInPlace.R%29%29%2C+kotlin.contracts.InvocationKind%29%2Flambda&quot;&gt;lambda&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ddc7e85b467ba745554b9fbe336e7c79ad8bfb02" translate="yes" xml:space="preserve">
          <source>Specifies that the function parameter &lt;a href=&quot;calls-in-place#kotlin.contracts.ContractBuilder%24callsInPlace(kotlin.Function((kotlin.contracts.ContractBuilder.callsInPlace.R)),%20kotlin.contracts.InvocationKind)/lambda&quot;&gt;lambda&lt;/a&gt; is invoked in place.</source>
          <target state="translated">指定在适当位置调用函数参数&lt;a href=&quot;calls-in-place#kotlin.contracts.ContractBuilder%24callsInPlace(kotlin.Function((kotlin.contracts.ContractBuilder.callsInPlace.R)),%20kotlin.contracts.InvocationKind)/lambda&quot;&gt;lambda&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9dbed9849f2069fc0d07922505e1643863d85c42" translate="yes" xml:space="preserve">
          <source>Specifies that this effect, when observed, guarantees &lt;a href=&quot;implies#kotlin.contracts.SimpleEffect%24implies%28kotlin.Boolean%29%2FbooleanExpression&quot;&gt;booleanExpression&lt;/a&gt; to be true.</source>
          <target state="translated">指定当观察到此效果时，保证&lt;a href=&quot;implies#kotlin.contracts.SimpleEffect%24implies%28kotlin.Boolean%29%2FbooleanExpression&quot;&gt;booleanExpression&lt;/a&gt;为true。</target>
        </trans-unit>
        <trans-unit id="0f0531ff91395c01803a017387912d23059522ce" translate="yes" xml:space="preserve">
          <source>Specifies that this effect, when observed, guarantees &lt;a href=&quot;implies#kotlin.contracts.SimpleEffect%24implies(kotlin.Boolean)/booleanExpression&quot;&gt;booleanExpression&lt;/a&gt; to be true.</source>
          <target state="translated">指定当观察到此效果时，保证&lt;a href=&quot;implies#kotlin.contracts.SimpleEffect%24implies(kotlin.Boolean)/booleanExpression&quot;&gt;booleanExpression&lt;/a&gt;为true。</target>
        </trans-unit>
        <trans-unit id="d54eb0bc950c7ef72bd2aa203d75cecf873009a2" translate="yes" xml:space="preserve">
          <source>Specifies the author of the element being documented.</source>
          <target state="translated">指定被记录的元素的作者。</target>
        </trans-unit>
        <trans-unit id="7439a2699ea30bac21819e499a0c348bf4db5a53" translate="yes" xml:space="preserve">
          <source>Specifies the contract of a function.</source>
          <target state="translated">指定函数的合同。</target>
        </trans-unit>
        <trans-unit id="668aabdaa85311d5948645d77876f75a16affd74" translate="yes" xml:space="preserve">
          <source>Specifies the first version of Kotlin where a declaration has appeared. Using the declaration and specifying an older API version (via the &lt;code&gt;-api-version&lt;/code&gt; command line option) will result in an error.</source>
          <target state="translated">指定出现声明的Kotlin的第一个版本。使用该声明并指定较旧的API版本（通过 &lt;code&gt;-api-version&lt;/code&gt; 命令行选项）将导致错误。</target>
        </trans-unit>
        <trans-unit id="2e19852d4c7f63b915b4f0748c65b97fb769383f" translate="yes" xml:space="preserve">
          <source>Specifies the name for the Java class or method which is generated from this element.</source>
          <target state="translated">指定从该元素生成的Java类或方法的名称。</target>
        </trans-unit>
        <trans-unit id="a687435bfccbdd96f3fa9d60bae94e072182829e" translate="yes" xml:space="preserve">
          <source>Specifies the version of the software in which the element being documented was introduced.</source>
          <target state="translated">指定引入被记录元素的软件版本。</target>
        </trans-unit>
        <trans-unit id="b880d1b1c120b168d2127299edae89e5755b3cb1" translate="yes" xml:space="preserve">
          <source>Specify a custom path to the Kotlin compiler used for the discovery of runtime libraries.</source>
          <target state="translated">指定用于发现运行时库的Kotlin编译器的自定义路径。</target>
        </trans-unit>
        <trans-unit id="37332e37dea33f02c76d57995c2bd4f40e5b356c" translate="yes" xml:space="preserve">
          <source>Specify a name for the compilation module. This option can also be used to specify a name prefix for the declarations exported to Objective-C: &lt;a href=&quot;native/faq#q-how-do-i-specify-a-custom-objective-c-prefixname-for-my-kotlin-framework&quot;&gt;How do I specify a custom Objective-C prefix/name for my Kotlin framework?&lt;/a&gt;</source>
          <target state="translated">指定编译模块的名称。此选项还可以用于为导出到Objective-C的声明指定名称前缀：&lt;a href=&quot;native/faq#q-how-do-i-specify-a-custom-objective-c-prefixname-for-my-kotlin-framework&quot;&gt;如何为我的Kotlin框架指定自定义的Objective-C前缀/名称？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b84ac24e6563e1493129c28f39a49827b92d10a" translate="yes" xml:space="preserve">
          <source>Specify output file kind:</source>
          <target state="translated">指定输出文件种类。</target>
        </trans-unit>
        <trans-unit id="dbd3aa74caa66aa1f9a263de8d4bb57fed5de21f" translate="yes" xml:space="preserve">
          <source>Specify the hierarchy of source sets using the &lt;code&gt;dependsOn&lt;/code&gt; relation.</source>
          <target state="translated">使用 &lt;code&gt;dependsOn&lt;/code&gt; 关系指定源集的层次结构。</target>
        </trans-unit>
        <trans-unit id="6a2ab35cdf92e0eb70a7b68a20b9148e819131c6" translate="yes" xml:space="preserve">
          <source>Specify the minimum target version for the Pod library.</source>
          <target state="translated">指定Pod库的最小目标版本。</target>
        </trans-unit>
        <trans-unit id="206bd3ec9809e234cc98c928ea2223ad7cd481ab" translate="yes" xml:space="preserve">
          <source>Specify the qualified entry point name.</source>
          <target state="translated">指定合格的入口点名称。</target>
        </trans-unit>
        <trans-unit id="ced3489c92d36759c06a259cd3cf15cca6e788e7" translate="yes" xml:space="preserve">
          <source>Specify the target version of the generated JVM bytecode. Possible values are &lt;code&gt;1.6&lt;/code&gt;, &lt;code&gt;1.8&lt;/code&gt;, &lt;code&gt;9&lt;/code&gt;, &lt;code&gt;10&lt;/code&gt;, &lt;code&gt;11&lt;/code&gt;, &lt;code&gt;12&lt;/code&gt;, &lt;code&gt;13&lt;/code&gt; and &lt;code&gt;14&lt;/code&gt;. The default value is &lt;code&gt;1.6&lt;/code&gt;.</source>
          <target state="translated">指定生成的JVM字节码的目标版本。可能的值是 &lt;code&gt;1.6&lt;/code&gt; ， &lt;code&gt;1.8&lt;/code&gt; ， &lt;code&gt;9&lt;/code&gt; ， &lt;code&gt;10&lt;/code&gt; ， &lt;code&gt;11&lt;/code&gt; ， &lt;code&gt;12&lt;/code&gt; ， &lt;code&gt;13&lt;/code&gt; 和 &lt;code&gt;14&lt;/code&gt; 。默认值为 &lt;code&gt;1.6&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ecfae74b60c500bf98eff24ffe25a09c3d987a3" translate="yes" xml:space="preserve">
          <source>Specifying compiler options</source>
          <target state="translated">指定编译器选项</target>
        </trans-unit>
        <trans-unit id="b2c93dc86ebcef72b0189e3954c689f2ede5ae2a" translate="yes" xml:space="preserve">
          <source>Specifying dependencies only once</source>
          <target state="translated">只指定一次依赖关系</target>
        </trans-unit>
        <trans-unit id="90792c6da71d4fa190c48e9cac79bf8247d8d33b" translate="yes" xml:space="preserve">
          <source>Specifying kotlinx dependencies only once</source>
          <target state="translated">只指定一次kotlinx的依赖关系。</target>
        </trans-unit>
        <trans-unit id="b480fdbc738e688b220525f44187624b8dee5660" translate="yes" xml:space="preserve">
          <source>Specifying the type explicitly</source>
          <target state="translated">明确指定类型</target>
        </trans-unit>
        <trans-unit id="746ebe7b30c04844a0a6acb84ceeeab7bfb3222b" translate="yes" xml:space="preserve">
          <source>Splits the &lt;a href=&quot;split#kotlin.text.Regex%24split%28kotlin.CharSequence%2C+kotlin.Int%29%2Finput&quot;&gt;input&lt;/a&gt; CharSequence around matches of this regular expression.</source>
          <target state="translated">将&lt;a href=&quot;split#kotlin.text.Regex%24split%28kotlin.CharSequence%2C+kotlin.Int%29%2Finput&quot;&gt;输入&lt;/a&gt; CharSequence 拆分为此正则表达式的匹配项。</target>
        </trans-unit>
        <trans-unit id="08699f935afbcbe3d27cfb1a9658ffde1d8c628f" translate="yes" xml:space="preserve">
          <source>Splits the &lt;a href=&quot;split#kotlin.text.Regex%24split(kotlin.CharSequence,%20kotlin.Int)/input&quot;&gt;input&lt;/a&gt; CharSequence around matches of this regular expression.</source>
          <target state="translated">将&lt;a href=&quot;split#kotlin.text.Regex%24split(kotlin.CharSequence,%20kotlin.Int)/input&quot;&gt;输入&lt;/a&gt;CharSequence拆分为此正则表达式的匹配项。</target>
        </trans-unit>
        <trans-unit id="889fa2d0788d1531abe076f806167d469446a8f8" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.Array%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.Array%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始数组拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.Array%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.Array%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="f8c682ed4a61277f6e6fef2ed839395919a64a6f" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始数组拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="6057dd4ee229b6bb485f8071e494d337b4c9c199" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始数组拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="36e78b5dbb516213087cd4a2cc82f8f5c89f375e" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始数组拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="188c266d70ce2d849ff0de3b5932cdf9da587e53" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始数组拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="2ff97334e8cd4ed34e1a92b3b104f2b5bdaf4fbb" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始数组拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="33204572ae494c8da3e3225aed2c1e38da7a21ec" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始数组拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="79b98ebd0576ac1d5b9a0ddfe5682da001dd4f39" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始数组拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="d84eb1d37eef2994f2317dd6d168249568c0d6e4" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始数组拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="469d1aaa39f881891fbb5aabfcc01cc364cb2742" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.Array((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.Array((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始数组拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.Array((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.Array((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="3dd8b830c86a4857797960f2d7d66dfaa7d2c971" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始数组拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="7c42fc7228361c2371d6a5ecd46c632501220f40" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始数组拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="1a5ec76d2caa29fdf8ddb75556d9d7d3e8a36bca" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始数组拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="ea7b25ae7c744cee7e75908d2f8155b496c3c347" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始数组拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="c271b78e2206b0f220d21e1f8e7eb71f71ea50eb" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始数组拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="43df9d3a9757b261b71c3d273263779c79744f23" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始数组拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="f3bc0c194fa72da2f88cd58e958441fa8e555a9c" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始数组拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="67234f2812035a75454135013d3423c4b4ce51a4" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始数组拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="b8083df548af87e3622d6abccfa8e78274a64c6f" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.collections%24partition%28kotlin.Array%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.collections%24partition%28kotlin.Array%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始数组拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;partition#kotlin.collections%24partition%28kotlin.Array%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;partition#kotlin.collections%24partition%28kotlin.Array%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="c6a7570726471ca0e60a15f1b62c162b494e7116" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.collections%24partition(kotlin.Array((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.collections%24partition(kotlin.Array((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始数组拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;partition#kotlin.collections%24partition(kotlin.Array((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;partition#kotlin.collections%24partition(kotlin.Array((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="d546386d2e87332d743bd4386df842ed3abe71a8" translate="yes" xml:space="preserve">
          <source>Splits the original char sequence into pair of char sequences, where &lt;em&gt;first&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始char序列拆分为char序列对，其中&lt;em&gt;第一个&lt;/em&gt; char序列包含其&lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的字符，而&lt;em&gt;第二个&lt;/em&gt; char序列包含其&lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的字符。</target>
        </trans-unit>
        <trans-unit id="f7187f16309f8fa5e58c1ffc82da217e3b650f8b" translate="yes" xml:space="preserve">
          <source>Splits the original char sequence into pair of char sequences, where &lt;em&gt;first&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始char序列拆分为char序列对，其中&lt;em&gt;第一个&lt;/em&gt;char序列包含其&lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的字符，而&lt;em&gt;第二个&lt;/em&gt;char序列包含其&lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的字符。</target>
        </trans-unit>
        <trans-unit id="3f2108aa3476d1886c05784b517af0f46f65dcce" translate="yes" xml:space="preserve">
          <source>Splits the original char sequence into pair of char sequences, where &lt;em&gt;first&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;../partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;../partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始char序列拆分为char序列对，其中&lt;em&gt;第一个&lt;/em&gt; char序列包含其&lt;a href=&quot;../partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的字符，而&lt;em&gt;第二个&lt;/em&gt; char序列包含其&lt;a href=&quot;../partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的字符。</target>
        </trans-unit>
        <trans-unit id="c0b0c9a3bd3b0ba50d4e7164b2759eee41ceeba2" translate="yes" xml:space="preserve">
          <source>Splits the original char sequence into pair of char sequences, where &lt;em&gt;first&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;../partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;../partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始char序列拆分为char序列对，其中&lt;em&gt;第一个&lt;/em&gt;char序列包含其&lt;a href=&quot;../partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的字符，而&lt;em&gt;第二个&lt;/em&gt;char序列包含其&lt;a href=&quot;../partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的字符。</target>
        </trans-unit>
        <trans-unit id="98cb77a4188cc584dfebb3134ca9b48a2ac72713" translate="yes" xml:space="preserve">
          <source>Splits the original char sequence into pair of char sequences, where &lt;em&gt;first&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始char序列拆分为char序列对，其中&lt;em&gt;第一个&lt;/em&gt; char序列包含其&lt;a href=&quot;partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的字符，而&lt;em&gt;第二个&lt;/em&gt; char序列包含其&lt;a href=&quot;partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的字符。</target>
        </trans-unit>
        <trans-unit id="445325f0067f6e88b5adebcf3569f7fceed68246" translate="yes" xml:space="preserve">
          <source>Splits the original char sequence into pair of char sequences, where &lt;em&gt;first&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始char序列拆分为char序列对，其中&lt;em&gt;第一个&lt;/em&gt;char序列包含其&lt;a href=&quot;partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的字符，而&lt;em&gt;第二个&lt;/em&gt;char序列包含其&lt;a href=&quot;partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的字符。</target>
        </trans-unit>
        <trans-unit id="abff32a9b2f4672bf7a49c903911bd3c805f10b9" translate="yes" xml:space="preserve">
          <source>Splits the original collection into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始集合拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="5e94fdcc1e6045991ea6e6a29e69f93e1dc2c8bc" translate="yes" xml:space="preserve">
          <source>Splits the original collection into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始集合拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="51351b50d1163f62c3cb23f2fcefe72a33c2e006" translate="yes" xml:space="preserve">
          <source>Splits the original collection into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始集合拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="185ca747627497f29774081a230018ffb2d10e8a" translate="yes" xml:space="preserve">
          <source>Splits the original collection into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始集合拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="a6229b291af2d23e4a0f09e0825f18914ab656ef" translate="yes" xml:space="preserve">
          <source>Splits the original collection into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始集合拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="b2fe8eb5efcb840e9f9b406f4e77592d61ba7a99" translate="yes" xml:space="preserve">
          <source>Splits the original collection into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始集合拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="eff78228133d9c510fcf60618ab7fbbe96384888" translate="yes" xml:space="preserve">
          <source>Splits the original sequence into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../partition#kotlin.sequences%24partition%28kotlin.sequences.Sequence%28%28kotlin.sequences.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../partition#kotlin.sequences%24partition%28kotlin.sequences.Sequence%28%28kotlin.sequences.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始序列拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../partition#kotlin.sequences%24partition%28kotlin.sequences.Sequence%28%28kotlin.sequences.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../partition#kotlin.sequences%24partition%28kotlin.sequences.Sequence%28%28kotlin.sequences.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="30f459632518f3e0c1251d867943b3f28b0cb50c" translate="yes" xml:space="preserve">
          <source>Splits the original sequence into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../partition#kotlin.sequences%24partition(kotlin.sequences.Sequence((kotlin.sequences.partition.T)),%20kotlin.Function1((kotlin.sequences.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../partition#kotlin.sequences%24partition(kotlin.sequences.Sequence((kotlin.sequences.partition.T)),%20kotlin.Function1((kotlin.sequences.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始序列拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;../partition#kotlin.sequences%24partition(kotlin.sequences.Sequence((kotlin.sequences.partition.T)),%20kotlin.Function1((kotlin.sequences.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;../partition#kotlin.sequences%24partition(kotlin.sequences.Sequence((kotlin.sequences.partition.T)),%20kotlin.Function1((kotlin.sequences.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="144bf3c5a2bc721c001b10a1ad55b094fadbc884" translate="yes" xml:space="preserve">
          <source>Splits the original sequence into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.sequences%24partition%28kotlin.sequences.Sequence%28%28kotlin.sequences.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.sequences%24partition%28kotlin.sequences.Sequence%28%28kotlin.sequences.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始序列拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;partition#kotlin.sequences%24partition%28kotlin.sequences.Sequence%28%28kotlin.sequences.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;partition#kotlin.sequences%24partition%28kotlin.sequences.Sequence%28%28kotlin.sequences.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="02ddac42f8baba3808675a7c681796c6c252ed55" translate="yes" xml:space="preserve">
          <source>Splits the original sequence into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.sequences%24partition(kotlin.sequences.Sequence((kotlin.sequences.partition.T)),%20kotlin.Function1((kotlin.sequences.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.sequences%24partition(kotlin.sequences.Sequence((kotlin.sequences.partition.T)),%20kotlin.Function1((kotlin.sequences.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始序列拆分为成对的列表，其中&lt;em&gt;第一个&lt;/em&gt;列表包含其&lt;a href=&quot;partition#kotlin.sequences%24partition(kotlin.sequences.Sequence((kotlin.sequences.partition.T)),%20kotlin.Function1((kotlin.sequences.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的元素，而&lt;em&gt;第二个&lt;/em&gt;列表包含其&lt;a href=&quot;partition#kotlin.sequences%24partition(kotlin.sequences.Sequence((kotlin.sequences.partition.T)),%20kotlin.Function1((kotlin.sequences.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="fc5ba51f56d3586a3ac3ee5a06dad5c2ce9a8a65" translate="yes" xml:space="preserve">
          <source>Splits the original string into pair of strings, where &lt;em&gt;first&lt;/em&gt; string contains characters for which &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition%28kotlin.String%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; string contains characters for which &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition%28kotlin.String%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始字符串拆分为成对的字符串，其中&lt;em&gt;第一个&lt;/em&gt;字符串包含其&lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition%28kotlin.String%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的字符，而&lt;em&gt;第二个&lt;/em&gt;字符串包含其&lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition%28kotlin.String%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的字符。</target>
        </trans-unit>
        <trans-unit id="4cebb621a8e6a5ace107fced6f73f50ce58b471c" translate="yes" xml:space="preserve">
          <source>Splits the original string into pair of strings, where &lt;em&gt;first&lt;/em&gt; string contains characters for which &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition(kotlin.String,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; string contains characters for which &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition(kotlin.String,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始字符串拆分为成对的字符串，其中&lt;em&gt;第一个&lt;/em&gt;字符串包含其&lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition(kotlin.String,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的字符，而&lt;em&gt;第二个&lt;/em&gt;字符串包含其&lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition(kotlin.String,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的字符。</target>
        </trans-unit>
        <trans-unit id="46b23954fe998387aff666df8efc6520995fc7cc" translate="yes" xml:space="preserve">
          <source>Splits the original string into pair of strings, where &lt;em&gt;first&lt;/em&gt; string contains characters for which &lt;a href=&quot;partition#kotlin.text%24partition%28kotlin.String%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; string contains characters for which &lt;a href=&quot;partition#kotlin.text%24partition%28kotlin.String%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始字符串拆分为成对的字符串，其中&lt;em&gt;第一个&lt;/em&gt;字符串包含其&lt;a href=&quot;partition#kotlin.text%24partition%28kotlin.String%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的字符，而&lt;em&gt;第二个&lt;/em&gt;字符串包含其&lt;a href=&quot;partition#kotlin.text%24partition%28kotlin.String%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的字符。</target>
        </trans-unit>
        <trans-unit id="0493f5f5f586a61090cd626f293081c3b16b8368" translate="yes" xml:space="preserve">
          <source>Splits the original string into pair of strings, where &lt;em&gt;first&lt;/em&gt; string contains characters for which &lt;a href=&quot;partition#kotlin.text%24partition(kotlin.String,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; string contains characters for which &lt;a href=&quot;partition#kotlin.text%24partition(kotlin.String,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将原始字符串拆分为成对的字符串，其中&lt;em&gt;第一个&lt;/em&gt;字符串包含其&lt;a href=&quot;partition#kotlin.text%24partition(kotlin.String,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;true&lt;/code&gt; 的字符，而&lt;em&gt;第二个&lt;/em&gt;字符串包含其&lt;a href=&quot;partition#kotlin.text%24partition(kotlin.String,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;谓词&lt;/a&gt;产生 &lt;code&gt;false&lt;/code&gt; 的字符。</target>
        </trans-unit>
        <trans-unit id="a9a50e34ca1a18e2bc366dc8b4f692ad42af93fc" translate="yes" xml:space="preserve">
          <source>Splits this char sequence around matches of the given regular expression.</source>
          <target state="translated">围绕给定的正则表达式的匹配项来分割这个字符串序列。</target>
        </trans-unit>
        <trans-unit id="9e611a3628d04640a979ef6c5b5e2ecc7f66cbfa" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a list of strings each not exceeding the given &lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此char序列拆分为字符串列表，每个字符串不超过给定的&lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4a62958cc9533cc8f8aeb2cbb2ff8f917130ca17" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a list of strings each not exceeding the given &lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此char序列拆分为字符串列表，每个字符串不超过给定的&lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ee551ba6b2c606bb6ab83b1a64bb7f625cc07a5b" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a list of strings each not exceeding the given &lt;a href=&quot;../chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此char序列拆分为字符串列表，每个字符串不超过给定的&lt;a href=&quot;../chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3939301f590bff32b3270f3f81dfb304f007d903" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a list of strings each not exceeding the given &lt;a href=&quot;../chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此char序列拆分为字符串列表，每个字符串不超过给定的&lt;a href=&quot;../chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eb121cc6174dd89d8c08cf61906842c082aba3c6" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a list of strings each not exceeding the given &lt;a href=&quot;chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此char序列拆分为字符串列表，每个字符串不超过给定的&lt;a href=&quot;chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3f40eb698178eb6db4ff5ee7651a1bf0dca0fde5" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a list of strings each not exceeding the given &lt;a href=&quot;chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此char序列拆分为字符串列表，每个字符串不超过给定的&lt;a href=&quot;chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="264b34f24f1a06b392a80cbea51e94a0fdc3938d" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a sequence of strings each not exceeding the given &lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此char序列拆分为字符串序列，每个字符串不超过给定的&lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e4cd050d753a79c2b581ae6b622710efaa7cae0e" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a sequence of strings each not exceeding the given &lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此char序列拆分为字符串序列，每个字符串不超过给定的&lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6da35fa6eec6e876ca4586b221b0baab3b5636c" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a sequence of strings each not exceeding the given &lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此char序列拆分为字符串序列，每个字符串不超过给定的&lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b08e8a3b3a3e0e3afabbec190106507b15fea7be" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a sequence of strings each not exceeding the given &lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此char序列拆分为字符串序列，每个字符串不超过给定的&lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a5ecdbe41629430b5e5cfb82fc1b4ad0586b6b35" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a sequence of strings each not exceeding the given &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此char序列拆分为字符串序列，每个字符串不超过给定的&lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f903975a8a7c6bb4653c30ed3b1ea55d7b1381c9" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a sequence of strings each not exceeding the given &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此char序列拆分为字符串序列，每个字符串不超过给定的&lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f7147b8b3ec6b68d6bd51082e0faaca2998e51d" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此char序列分成几个char序列，每个char序列不超过给定的&lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Fsize&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Ftransform&quot;&gt;转换&lt;/a&gt;函数应用于每个char序列。</target>
        </trans-unit>
        <trans-unit id="91d9f61349fd0e901bdb4c6d4509643f6e4fa84e" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此char序列分成几个char序列，每个char序列不超过给定的&lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/size&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/transform&quot;&gt;转换&lt;/a&gt;函数应用于每个char序列。</target>
        </trans-unit>
        <trans-unit id="63e385077425eafb77e9a40a51539c2d80eb2f51" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此char序列分成几个char序列，每个char序列不超过给定的&lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Fsize&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Ftransform&quot;&gt;转换&lt;/a&gt;函数应用于每个char序列。</target>
        </trans-unit>
        <trans-unit id="83ba8fd85fa8d5392667a68b253699a701d55ed7" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此char序列分成几个char序列，每个char序列不超过给定的&lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/size&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/transform&quot;&gt;转换&lt;/a&gt;函数应用于每个char序列。</target>
        </trans-unit>
        <trans-unit id="581a009720af973c365e2ace4d33cf5076877aca" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;../chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此char序列分成几个char序列，每个char序列不超过给定的&lt;a href=&quot;../chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Fsize&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;../chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Ftransform&quot;&gt;转换&lt;/a&gt;函数应用于每个char序列。</target>
        </trans-unit>
        <trans-unit id="9264227ba39c4b74ddc91913644e7a73ebfac8fd" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;../chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此char序列分成几个char序列，每个char序列不超过给定的&lt;a href=&quot;../chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/size&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;../chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/transform&quot;&gt;转换&lt;/a&gt;函数应用于每个char序列。</target>
        </trans-unit>
        <trans-unit id="d717f98666285a1e90ad8965f8f7418dcc8ed232" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此char序列分成几个char序列，每个char序列不超过给定的&lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Fsize&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Ftransform&quot;&gt;转换&lt;/a&gt;函数应用于每个char序列。</target>
        </trans-unit>
        <trans-unit id="6f3b39bc35b85296148b3daa02d1c0eb72d2df0a" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此char序列分成几个char序列，每个char序列不超过给定的&lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/size&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/transform&quot;&gt;转换&lt;/a&gt;函数应用于每个char序列。</target>
        </trans-unit>
        <trans-unit id="85e376173d9c9d8eeff5141b7586fa74005ee16a" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此char序列分成几个char序列，每个char序列不超过给定的&lt;a href=&quot;chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Fsize&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Ftransform&quot;&gt;转换&lt;/a&gt;函数应用于每个char序列。</target>
        </trans-unit>
        <trans-unit id="6a7c745460198631737bdb1f1b73b1a7999f885d" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此char序列分成几个char序列，每个char序列不超过给定的&lt;a href=&quot;chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/size&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/transform&quot;&gt;转换&lt;/a&gt;函数应用于每个char序列。</target>
        </trans-unit>
        <trans-unit id="99d50e657fbe43a3b68f5a6eb982003c115c6f08" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此char序列分成几个char序列，每个char序列不超过给定的&lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Fsize&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Ftransform&quot;&gt;转换&lt;/a&gt;函数应用于每个char序列。</target>
        </trans-unit>
        <trans-unit id="fa6778d5bcf32bfc8f1b73cc95e599f013de8a39" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此char序列分成几个char序列，每个char序列不超过给定的&lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/size&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/transform&quot;&gt;转换&lt;/a&gt;函数应用于每个char序列。</target>
        </trans-unit>
        <trans-unit id="f66500e7f768a0de7bc52b6beeddc83d7cdc8834" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a list of lines delimited by any of the following character sequences: CRLF, LF or CR.</source>
          <target state="translated">将这个字符序列分割成一个列表,用以下任何一个字符序列来分隔行。CRLF,LF 或 CR.</target>
        </trans-unit>
        <trans-unit id="3d5a1c5b6b30c321992d76335fa3e703f787af61" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a list of strings around occurrences of the specified &lt;a href=&quot;../../kotlin.text/split#kotlin.text%24split%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">将此char序列拆分为围绕指定&lt;a href=&quot;../../kotlin.text/split#kotlin.text%24split%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;定界符&lt;/a&gt;出现的字符串列表。</target>
        </trans-unit>
        <trans-unit id="dcd0e622134a8b9ff64d607832d645a9a49da056" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a list of strings around occurrences of the specified &lt;a href=&quot;../../kotlin.text/split#kotlin.text%24split(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">将此char序列拆分为围绕指定&lt;a href=&quot;../../kotlin.text/split#kotlin.text%24split(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;定界符&lt;/a&gt;出现的字符串列表。</target>
        </trans-unit>
        <trans-unit id="8197b9ef14d350d1f531e4c5e5be27c3d5429cd4" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a list of strings around occurrences of the specified &lt;a href=&quot;../split#kotlin.text%24split%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">将此char序列拆分为围绕指定&lt;a href=&quot;../split#kotlin.text%24split%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;定界符&lt;/a&gt;出现的字符串列表。</target>
        </trans-unit>
        <trans-unit id="78d5d858554c887ccb8db6bfeabdafd042f64195" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a list of strings around occurrences of the specified &lt;a href=&quot;../split#kotlin.text%24split(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">将此char序列拆分为围绕指定&lt;a href=&quot;../split#kotlin.text%24split(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;定界符&lt;/a&gt;出现的字符串列表。</target>
        </trans-unit>
        <trans-unit id="5e5d0b62ab16eee4e98080c541c6045d782f0598" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a list of strings around occurrences of the specified &lt;a href=&quot;split#kotlin.text%24split%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">将此char序列拆分为围绕指定&lt;a href=&quot;split#kotlin.text%24split%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;定界符&lt;/a&gt;出现的字符串列表。</target>
        </trans-unit>
        <trans-unit id="12d10ed5fb25d750ebed3fb28bbf6b83bd2c0019" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a list of strings around occurrences of the specified &lt;a href=&quot;split#kotlin.text%24split%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">将此char序列拆分为围绕指定&lt;a href=&quot;split#kotlin.text%24split%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;定界符&lt;/a&gt;出现的字符串列表。</target>
        </trans-unit>
        <trans-unit id="4adc9dd856d39bd816f0f43340d177fe84299b7f" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a list of strings around occurrences of the specified &lt;a href=&quot;split#kotlin.text%24split(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">将此char序列拆分为围绕指定&lt;a href=&quot;split#kotlin.text%24split(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;定界符&lt;/a&gt;出现的字符串列表。</target>
        </trans-unit>
        <trans-unit id="c312ba4a46da215061d17d6069773fc40ab68aa8" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a list of strings around occurrences of the specified &lt;a href=&quot;split#kotlin.text%24split(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">将此char序列拆分为围绕指定&lt;a href=&quot;split#kotlin.text%24split(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;定界符&lt;/a&gt;出现的字符串列表。</target>
        </trans-unit>
        <trans-unit id="3a6716d508015c660a59f20c19d214d94cfd85f3" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a sequence of lines delimited by any of the following character sequences: CRLF, LF or CR.</source>
          <target state="translated">将该字符序列分割成由以下任何一个字符序列分隔的行数序列。CRLF,LF 或 CR.</target>
        </trans-unit>
        <trans-unit id="e3e94c6787d54178064018c52c37bc40d4047b92" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a sequence of strings around occurrences of the specified &lt;a href=&quot;../../kotlin.text/split-to-sequence#kotlin.text%24splitToSequence%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">围绕指定&lt;a href=&quot;../../kotlin.text/split-to-sequence#kotlin.text%24splitToSequence%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;定界符的&lt;/a&gt;出现，将此char序列拆分为字符串序列。</target>
        </trans-unit>
        <trans-unit id="453429c9f93911cb5ead26427cc8c66a8ee62d40" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a sequence of strings around occurrences of the specified &lt;a href=&quot;../../kotlin.text/split-to-sequence#kotlin.text%24splitToSequence(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">围绕指定&lt;a href=&quot;../../kotlin.text/split-to-sequence#kotlin.text%24splitToSequence(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;定界符的&lt;/a&gt;出现，将此char序列拆分为字符串序列。</target>
        </trans-unit>
        <trans-unit id="1dc6355bd5dcf88cb7012eadeab20169c9c6450f" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a sequence of strings around occurrences of the specified &lt;a href=&quot;../split-to-sequence#kotlin.text%24splitToSequence%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">围绕指定&lt;a href=&quot;../split-to-sequence#kotlin.text%24splitToSequence%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;定界符的&lt;/a&gt;出现，将此char序列拆分为字符串序列。</target>
        </trans-unit>
        <trans-unit id="6f287f7c9fff5b47a1ce26435fa2d9a57a16e1d1" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a sequence of strings around occurrences of the specified &lt;a href=&quot;../split-to-sequence#kotlin.text%24splitToSequence(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">围绕指定&lt;a href=&quot;../split-to-sequence#kotlin.text%24splitToSequence(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;定界符的&lt;/a&gt;出现，将此char序列拆分为字符串序列。</target>
        </trans-unit>
        <trans-unit id="2a3dd7ecd8e5aad7ae43ecd7e15b94ace9d83f6c" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a sequence of strings around occurrences of the specified &lt;a href=&quot;split-to-sequence#kotlin.text%24splitToSequence%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">围绕指定&lt;a href=&quot;split-to-sequence#kotlin.text%24splitToSequence%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;定界符的&lt;/a&gt;出现，将此char序列拆分为字符串序列。</target>
        </trans-unit>
        <trans-unit id="7ffebadc04bba02e4e49a6327f15a6ca200c75ff" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a sequence of strings around occurrences of the specified &lt;a href=&quot;split-to-sequence#kotlin.text%24splitToSequence%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">围绕指定&lt;a href=&quot;split-to-sequence#kotlin.text%24splitToSequence%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;定界符的&lt;/a&gt;出现，将此char序列拆分为字符串序列。</target>
        </trans-unit>
        <trans-unit id="9ba4325765fdea04698e46dd8e9c0ebc74bc7ee7" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a sequence of strings around occurrences of the specified &lt;a href=&quot;split-to-sequence#kotlin.text%24splitToSequence(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">围绕指定&lt;a href=&quot;split-to-sequence#kotlin.text%24splitToSequence(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;定界符的&lt;/a&gt;出现，将此char序列拆分为字符串序列。</target>
        </trans-unit>
        <trans-unit id="3aa6aa8a72ba98d64fe36c22d48b49b89739c6b7" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a sequence of strings around occurrences of the specified &lt;a href=&quot;split-to-sequence#kotlin.text%24splitToSequence(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">围绕指定&lt;a href=&quot;split-to-sequence#kotlin.text%24splitToSequence(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;定界符的&lt;/a&gt;出现，将此char序列拆分为字符串序列。</target>
        </trans-unit>
        <trans-unit id="4894892135b3d855d1f0f6d3001b4e1d6e322c67" translate="yes" xml:space="preserve">
          <source>Splits this collection into a list of lists each not exceeding the given &lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此集合拆分为列表列表，每个列表不超过给定&lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%29%2Fsize&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ae51951a1a9cf81795d473d5e3322f697bb4331c" translate="yes" xml:space="preserve">
          <source>Splits this collection into a list of lists each not exceeding the given &lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此集合拆分为一个列表列表，每个列表不超过给定的&lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int)/size&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8109cdc99c9d3ce75b0e6a735d1a16b951be7072" translate="yes" xml:space="preserve">
          <source>Splits this collection into a list of lists each not exceeding the given &lt;a href=&quot;../chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此集合拆分为列表列表，每个列表不超过给定&lt;a href=&quot;../chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%29%2Fsize&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="14504fa276ef002c991829771d14be5ffd317bcf" translate="yes" xml:space="preserve">
          <source>Splits this collection into a list of lists each not exceeding the given &lt;a href=&quot;../chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此集合拆分为一个列表列表，每个列表不超过给定的&lt;a href=&quot;../chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int)/size&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b0f2e0bbfd89fcd5462f6ead2b682ba787dadd8e" translate="yes" xml:space="preserve">
          <source>Splits this collection into a list of lists each not exceeding the given &lt;a href=&quot;chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此集合拆分为列表列表，每个列表不超过给定&lt;a href=&quot;chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%29%2Fsize&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a66ba2c92e0165c7a28cec74608bbaf5da8f8f5e" translate="yes" xml:space="preserve">
          <source>Splits this collection into a list of lists each not exceeding the given &lt;a href=&quot;chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此集合拆分为一个列表列表，每个列表不超过给定的&lt;a href=&quot;chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int)/size&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e21d3492a25178c7b849a9e5acc322cb20b39aca" translate="yes" xml:space="preserve">
          <source>Splits this collection into several lists each not exceeding the given &lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此集合分为几个列表，每个列表不超过给定的&lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Fsize&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Ftransform&quot;&gt;转换&lt;/a&gt;函数应用于每个列表。</target>
        </trans-unit>
        <trans-unit id="c35a9a72ee2593b0b0996aa9c2fa9215e3026959" translate="yes" xml:space="preserve">
          <source>Splits this collection into several lists each not exceeding the given &lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此集合拆分为几个列表，每个列表不超过给定的&lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/size&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/transform&quot;&gt;转换&lt;/a&gt;函数应用于每个列表。</target>
        </trans-unit>
        <trans-unit id="a48428391f4651acfd24fee9fa33c87080c6e779" translate="yes" xml:space="preserve">
          <source>Splits this collection into several lists each not exceeding the given &lt;a href=&quot;../chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此集合分为几个列表，每个列表不超过给定的&lt;a href=&quot;../chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Fsize&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;../chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Ftransform&quot;&gt;转换&lt;/a&gt;函数应用于每个列表。</target>
        </trans-unit>
        <trans-unit id="0a62cec74d11e5ae4a829ee19a641fcfd3e4da18" translate="yes" xml:space="preserve">
          <source>Splits this collection into several lists each not exceeding the given &lt;a href=&quot;../chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此集合拆分为几个列表，每个列表不超过给定的&lt;a href=&quot;../chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/size&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;../chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/transform&quot;&gt;转换&lt;/a&gt;函数应用于每个列表。</target>
        </trans-unit>
        <trans-unit id="517737e782c5357ab242922fc5304b40e3826245" translate="yes" xml:space="preserve">
          <source>Splits this collection into several lists each not exceeding the given &lt;a href=&quot;chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此集合分为几个列表，每个列表不超过给定的&lt;a href=&quot;chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Fsize&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Ftransform&quot;&gt;转换&lt;/a&gt;函数应用于每个列表。</target>
        </trans-unit>
        <trans-unit id="2221bd47b20e844a0f5a0c08acde759027264845" translate="yes" xml:space="preserve">
          <source>Splits this collection into several lists each not exceeding the given &lt;a href=&quot;chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此集合拆分为几个列表，每个列表不超过给定的&lt;a href=&quot;chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/size&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/transform&quot;&gt;转换&lt;/a&gt;函数应用于每个列表。</target>
        </trans-unit>
        <trans-unit id="e1e6a07a033be2e4e206496b12778d9b3f3597fb" translate="yes" xml:space="preserve">
          <source>Splits this duration into days, hours, minutes, seconds, and nanoseconds and executes the given &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function5((kotlin.Int,%20,%20,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;action&lt;/a&gt; with these components. The result of &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function5((kotlin.Int,%20,%20,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;action&lt;/a&gt; is returned as the result of this function.</source>
          <target state="translated">将此持续时间分为几天，几小时，几分钟，几秒钟和十亿分之一秒，并使用这些组件执行给定的&lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function5((kotlin.Int,%20,%20,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;操作&lt;/a&gt;。结果&lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function5((kotlin.Int,%20,%20,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;动作&lt;/a&gt;返回这个函数的结果。</target>
        </trans-unit>
        <trans-unit id="a1571e88658ad31f69e87fe36c4249e704dd2d10" translate="yes" xml:space="preserve">
          <source>Splits this duration into hours, minutes, seconds, and nanoseconds and executes the given &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function4((kotlin.Int,%20,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;action&lt;/a&gt; with these components. The result of &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function4((kotlin.Int,%20,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;action&lt;/a&gt; is returned as the result of this function.</source>
          <target state="translated">将此持续时间分为小时，分钟，秒和纳秒，并使用这些组件执行给定的&lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function4((kotlin.Int,%20,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;操作&lt;/a&gt;。结果&lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function4((kotlin.Int,%20,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;动作&lt;/a&gt;返回这个函数的结果。</target>
        </trans-unit>
        <trans-unit id="7e10cc86cf352e67038172f69a145609079b92ee" translate="yes" xml:space="preserve">
          <source>Splits this duration into minutes, seconds, and nanoseconds and executes the given &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function3((kotlin.Int,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;action&lt;/a&gt; with these components. The result of &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function3((kotlin.Int,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;action&lt;/a&gt; is returned as the result of this function.</source>
          <target state="translated">将此持续时间分为分钟，秒和纳秒，并使用这些组件执行给定的&lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function3((kotlin.Int,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;操作&lt;/a&gt;。结果&lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function3((kotlin.Int,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;动作&lt;/a&gt;返回这个函数的结果。</target>
        </trans-unit>
        <trans-unit id="04417a64b4e7c400d10bf0ae0b610bcc320bd96c" translate="yes" xml:space="preserve">
          <source>Splits this duration into seconds, and nanoseconds and executes the given &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function2((kotlin.Long,%20kotlin.Int,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;action&lt;/a&gt; with these components. The result of &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function2((kotlin.Long,%20kotlin.Int,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;action&lt;/a&gt; is returned as the result of this function.</source>
          <target state="translated">将此持续时间分为几秒和十亿分之一秒，并使用这些组件执行给定的&lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function2((kotlin.Long,%20kotlin.Int,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;操作&lt;/a&gt;。结果&lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function2((kotlin.Long,%20kotlin.Int,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;动作&lt;/a&gt;返回这个函数的结果。</target>
        </trans-unit>
        <trans-unit id="024d988a38905cd8d713b5b971dfe3778cfdc3d8" translate="yes" xml:space="preserve">
          <source>Splits this sequence into a sequence of lists each not exceeding the given &lt;a href=&quot;../chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此序列分为一系列列表，每个列表不超过给定的&lt;a href=&quot;../chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%29%2Fsize&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="89e66d42821d76b5c20d374af063183ac388f3e4" translate="yes" xml:space="preserve">
          <source>Splits this sequence into a sequence of lists each not exceeding the given &lt;a href=&quot;../chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此序列分为一系列列表，每个列表不超过给定的&lt;a href=&quot;../chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int)/size&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2782bc20294974e7a1e43c016491b6c91648db8f" translate="yes" xml:space="preserve">
          <source>Splits this sequence into a sequence of lists each not exceeding the given &lt;a href=&quot;chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此序列分为一系列列表，每个列表不超过给定的&lt;a href=&quot;chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%29%2Fsize&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="99135cd7b03c2edcdaa34457cd79f869cfb58b45" translate="yes" xml:space="preserve">
          <source>Splits this sequence into a sequence of lists each not exceeding the given &lt;a href=&quot;chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">将此序列分为一系列列表，每个列表不超过给定的&lt;a href=&quot;chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int)/size&quot;&gt;大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d437291eabeca701471089c6dfa0b2b88f511909" translate="yes" xml:space="preserve">
          <source>Splits this sequence into several lists each not exceeding the given &lt;a href=&quot;../chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.sequences.chunked.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.sequences.chunked.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此序列拆分为几个列表，每个列表不超过给定的&lt;a href=&quot;../chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.sequences.chunked.R%29%29%29%2Fsize&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;../chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.sequences.chunked.R%29%29%29%2Ftransform&quot;&gt;转换&lt;/a&gt;函数应用于每个列表。</target>
        </trans-unit>
        <trans-unit id="f2435f94efc313c779ac2ced265ad21e693408c3" translate="yes" xml:space="preserve">
          <source>Splits this sequence into several lists each not exceeding the given &lt;a href=&quot;../chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.chunked.T)),%20kotlin.sequences.chunked.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.chunked.T)),%20kotlin.sequences.chunked.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此序列分为几个列表，每个列表不超过给定的&lt;a href=&quot;../chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.chunked.T)),%20kotlin.sequences.chunked.R)))/size&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;../chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.chunked.T)),%20kotlin.sequences.chunked.R)))/transform&quot;&gt;转换&lt;/a&gt;函数应用于每个列表。</target>
        </trans-unit>
        <trans-unit id="42d99abb4dad1bd5f52d7374981881da327ee184" translate="yes" xml:space="preserve">
          <source>Splits this sequence into several lists each not exceeding the given &lt;a href=&quot;chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.sequences.chunked.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.sequences.chunked.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此序列拆分为几个列表，每个列表不超过给定的&lt;a href=&quot;chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.sequences.chunked.R%29%29%29%2Fsize&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.sequences.chunked.R%29%29%29%2Ftransform&quot;&gt;转换&lt;/a&gt;函数应用于每个列表。</target>
        </trans-unit>
        <trans-unit id="68a4d3e554bce55c1ddcb2faa635fcae50b66ba6" translate="yes" xml:space="preserve">
          <source>Splits this sequence into several lists each not exceeding the given &lt;a href=&quot;chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.chunked.T)),%20kotlin.sequences.chunked.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.chunked.T)),%20kotlin.sequences.chunked.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">将此序列分为几个列表，每个列表不超过给定的&lt;a href=&quot;chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.chunked.T)),%20kotlin.sequences.chunked.R)))/size&quot;&gt;大小&lt;/a&gt;，并将给定的&lt;a href=&quot;chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.chunked.T)),%20kotlin.sequences.chunked.R)))/transform&quot;&gt;转换&lt;/a&gt;函数应用于每个列表。</target>
        </trans-unit>
        <trans-unit id="7c51d044b0775b9dff2cfa78b3da8cb8049bb2ff" translate="yes" xml:space="preserve">
          <source>Spring support</source>
          <target state="translated">弹簧支撑</target>
        </trans-unit>
        <trans-unit id="4d471041d7df92549d73db2c13c586ee2b0cec2e" translate="yes" xml:space="preserve">
          <source>Square brackets are translated to calls to &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; with appropriate numbers of arguments.</source>
          <target state="translated">方括号会转换为调用以 &lt;code&gt;get&lt;/code&gt; 并 &lt;code&gt;set&lt;/code&gt; 适当数量的参数。</target>
        </trans-unit>
        <trans-unit id="760c3df67cfeafc7b66d5c5c9eecdb6431a5eaf6" translate="yes" xml:space="preserve">
          <source>Stability Levels Explained</source>
          <target state="translated">稳定性水平说明</target>
        </trans-unit>
        <trans-unit id="00ffdccd32ed64d431bf831e7b8e2169d330f1f8" translate="yes" xml:space="preserve">
          <source>Stability of Different Components</source>
          <target state="translated">不同成分的稳定性</target>
        </trans-unit>
        <trans-unit id="335f562da0b6da5371be32abc5013ec933c6eaa9" translate="yes" xml:space="preserve">
          <source>Stability of Kotlin Components</source>
          <target state="translated">Kotlin组件的稳定性</target>
        </trans-unit>
        <trans-unit id="cd08656ee2aa301dd8e4aa144201fac5aaed7316" translate="yes" xml:space="preserve">
          <source>Stability of Kotlin Components (pre 1.4)</source>
          <target state="translated">Kotlin组件的稳定性(1.4之前)</target>
        </trans-unit>
        <trans-unit id="59370b6411d3426c49909870b95a752c0777385c" translate="yes" xml:space="preserve">
          <source>Stability of Subcomponents</source>
          <target state="translated">子部件的稳定性</target>
        </trans-unit>
        <trans-unit id="d96e5b2dd07c1733b2b013bd82922c22baade37d" translate="yes" xml:space="preserve">
          <source>Stable</source>
          <target state="translated">Stable</target>
        </trans-unit>
        <trans-unit id="6eeb768fc3b74ac02af44fbb5f6ba14ee0aa98a6" translate="yes" xml:space="preserve">
          <source>Stable JSON serialization</source>
          <target state="translated">稳定的JSON序列化</target>
        </trans-unit>
        <trans-unit id="d1536eaeef57c8fe7e38a044d153592707538ced" translate="yes" xml:space="preserve">
          <source>Stable releases with versions 1.2, 1.3, etc. are usually considered to be &lt;em&gt;feature releases&lt;/em&gt; bringing major changes in the language. Normally, we publish &lt;em&gt;incremental releases&lt;/em&gt;, numbered 1.2.20, 1.2.30, etc, in between feature releases.</source>
          <target state="translated">带有1.2、1.3等版本的稳定版本通常被认为是对语言进行重大更改的&lt;em&gt;功能版本&lt;/em&gt;。通常，我们&lt;em&gt;会&lt;/em&gt;在两个功能版本之间发布编号为1.2.20、1.2.30等的&lt;em&gt;增量&lt;/em&gt;版本。</target>
        </trans-unit>
        <trans-unit id="c2b6f531a85effb53654c20ee953d94aca8bd93f" translate="yes" xml:space="preserve">
          <source>StableObjPtr</source>
          <target state="translated">StableObjPtr</target>
        </trans-unit>
        <trans-unit id="d5695f0dc6545fa97fef8f5d8d98f8ea9529cc21" translate="yes" xml:space="preserve">
          <source>StableRef</source>
          <target state="translated">StableRef</target>
        </trans-unit>
        <trans-unit id="cd6c8d56f6241b414217edc699eb83c63b345d74" translate="yes" xml:space="preserve">
          <source>Stack overflow</source>
          <target state="translated">堆栈溢出</target>
        </trans-unit>
        <trans-unit id="ed0e3d47052276129876bad97c5d9695f1d4c1e7" translate="yes" xml:space="preserve">
          <source>Standard Data Classes</source>
          <target state="translated">标准数据类</target>
        </trans-unit>
        <trans-unit id="9905d2303d697763e7c368a3fc398e3a629682f8" translate="yes" xml:space="preserve">
          <source>Standard Delegates</source>
          <target state="translated">标准代表</target>
        </trans-unit>
        <trans-unit id="eba63c181dd248d4b5bba8f0065bbb50178505fc" translate="yes" xml:space="preserve">
          <source>Standard Library</source>
          <target state="translated">标准图书馆</target>
        </trans-unit>
        <trans-unit id="5cb78ec1155b67352920711808d484486519f871" translate="yes" xml:space="preserve">
          <source>Standard delegates</source>
          <target state="translated">标准代表</target>
        </trans-unit>
        <trans-unit id="fbdf47a84aa524486f1f19bc8f2b7696fa1c4c48" translate="yes" xml:space="preserve">
          <source>Standard implementations of delegates for &lt;a href=&quot;../../../../../docs/reference/delegated-properties&quot;&gt;delegated properties&lt;/a&gt; and helper functions for implementing custom delegates.</source>
          <target state="translated">&lt;a href=&quot;../../../../../docs/reference/delegated-properties&quot;&gt;委托属性&lt;/a&gt;的委托的标准实现以及实现自定义委托的帮助器功能。</target>
        </trans-unit>
        <trans-unit id="b31b91de60e88c68f139ba0e04804a05ebd424b2" translate="yes" xml:space="preserve">
          <source>Standard implementations of delegates for &lt;a href=&quot;docs/reference/delegated-properties&quot;&gt;delegated properties&lt;/a&gt; and helper functions for implementing custom delegates.</source>
          <target state="translated">&lt;a href=&quot;docs/reference/delegated-properties&quot;&gt;委托属性&lt;/a&gt;的委托的标准实现以及实现自定义委托的帮助器功能。</target>
        </trans-unit>
        <trans-unit id="360c57caedbd1d1ff38dde144677c893d6ad3792" translate="yes" xml:space="preserve">
          <source>Standard library</source>
          <target state="translated">标准库</target>
        </trans-unit>
        <trans-unit id="ad16d6480ea3a42fd35ae681f27222eeb06b2257" translate="yes" xml:space="preserve">
          <source>Standard property delegates.</source>
          <target state="translated">标准财产委托。</target>
        </trans-unit>
        <trans-unit id="f22646c78134d6ac39afe0c5ee5f9ae0df7f3bbd" translate="yes" xml:space="preserve">
          <source>Star projection, denoted by the &lt;code&gt;*&lt;/code&gt; character. For example, in the type &lt;code&gt;KClass&amp;lt;*&amp;gt;&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt; is the star projection. See the &lt;a href=&quot;../../../../../../docs/reference/generics#star-projections&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">星形投影，用 &lt;code&gt;*&lt;/code&gt; 字符表示。例如，在类型 &lt;code&gt;KClass&amp;lt;*&amp;gt;&lt;/code&gt; ， &lt;code&gt;*&lt;/code&gt; 是星形投影。有关更多信息，请参阅&lt;a href=&quot;../../../../../../docs/reference/generics#star-projections&quot;&gt;Kotlin语言文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a77f904c776f120da6135a5ca2b0fb989dcaa559" translate="yes" xml:space="preserve">
          <source>Star-projections</source>
          <target state="translated">Star-projections</target>
        </trans-unit>
        <trans-unit id="6e5590764483cbb03fdaa9e24fc59d1a85c1288e" translate="yes" xml:space="preserve">
          <source>Start new scheduling primitive, such as thread, to accept new tasks via &lt;code&gt;execute&lt;/code&gt; interface. Typically new worker may be needed for computations offload to another core, for IO it may be better to use non-blocking IO combined with more lightweight coroutines.</source>
          <target state="translated">启动新的调度原语（例如线程）以通过 &lt;code&gt;execute&lt;/code&gt; 接口接受新任务。通常，可能需要新的工作人员将计算任务卸载到另一个内核，对于IO而言，最好将非阻塞IO与更轻量的协程结合使用。</target>
        </trans-unit>
        <trans-unit id="a0279a8f5111591a71ef0ea505d164e207decfa7" translate="yes" xml:space="preserve">
          <source>Start the &lt;a href=&quot;#running-the-android-application&quot;&gt;Android application&lt;/a&gt;</source>
          <target state="translated">启动&lt;a href=&quot;#running-the-android-application&quot;&gt;Android应用程序&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ffec450a13497055a66c40a0f95ad2095c4fa937" translate="yes" xml:space="preserve">
          <source>Start the &lt;a href=&quot;#running-the-ios-application&quot;&gt;iOS application&lt;/a&gt;</source>
          <target state="translated">启动&lt;a href=&quot;#running-the-ios-application&quot;&gt;iOS应用&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="95f5c30c239a1587fffa8f3e4e700f989c16efcc" translate="yes" xml:space="preserve">
          <source>Start the application by clicking &lt;strong&gt;Run&lt;/strong&gt; next to the run configuration at the top of the screen.</source>
          <target state="translated">通过点击启动应用程序&lt;strong&gt;运行&lt;/strong&gt;在屏幕顶部旁边运行配置。</target>
        </trans-unit>
        <trans-unit id="2a12e8ffa3717682e64c678ab88c470cda3851ea" translate="yes" xml:space="preserve">
          <source>Starting from 1.4.0, we have embedded Proguard/R8 configurations for Kotlin Reflection in &lt;code&gt;kotlin-reflect.jar&lt;/code&gt;. With this in place, most Android projects using R8 or Proguard should work with kotlin-reflect without needing any additional configuration. You no longer need to copy-paste the Proguard rules for kotlin-reflect internals. But note that you still need to explicitly list all the APIs you&amp;rsquo;re going to reflect on.</source>
          <target state="translated">从1.4.0版开始，我们在 &lt;code&gt;kotlin-reflect.jar&lt;/code&gt; 中嵌入了Kotlin Reflection的Proguard / R8配置。有了这个功能，大多数使用R8或Proguard的Android项目都应该可以与kotlin-reflect一起使用，而无需任何其他配置。您不再需要为Kotlin反射内部构件复制粘贴Proguard规则。但是请注意，您仍然需要明确列出要反映的所有API。</target>
        </trans-unit>
        <trans-unit id="0d6fdf5f9b6b8e074fa3c899dd59b612c2abd776" translate="yes" xml:space="preserve">
          <source>Starting from 1.4.0, you also no longer need to declare a dependency on &lt;code&gt;stdlib&lt;/code&gt; in each source set manually &amp;ndash; it &lt;a href=&quot;mpp-add-dependencies#dependency-on-the-standard-library&quot;&gt;will now be added by default&lt;/a&gt;. The version of the automatically added standard library will be the same as the version of the Kotlin Gradle plugin, since they have the same versioning.</source>
          <target state="translated">从1.4.0开始，您也不再需要在每个源集中手动声明对 &lt;code&gt;stdlib&lt;/code&gt; 的依赖关系-&lt;a href=&quot;mpp-add-dependencies#dependency-on-the-standard-library&quot;&gt;现在默认情况下将添加&lt;/a&gt;它。自动添加的标准库的版本将与Kotlin Gradle插件的版本相同，因为它们具有相同的版本。</target>
        </trans-unit>
        <trans-unit id="0bab1f2cb1c8332507f7e8e0dae6242d8ebf3cac" translate="yes" xml:space="preserve">
          <source>Starting from JDK 1.8, interfaces in Java can contain &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/IandI/defaultmethods.html&quot;&gt;default methods&lt;/a&gt;. To make all non-abstract members of Kotlin interfaces default for the Java classes implementing them, compile the Kotlin code with the &lt;code&gt;-Xjvm-default=all&lt;/code&gt; compiler option.</source>
          <target state="translated">从JDK 1.8开始，Java中的接口可以包含&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/IandI/defaultmethods.html&quot;&gt;默认方法&lt;/a&gt;。要使Kotlin接口的所有非抽象成员默认为实现它们的Java类，请使用 &lt;code&gt;-Xjvm-default=all&lt;/code&gt; 编译器选项来编译Kotlin代码。</target>
        </trans-unit>
        <trans-unit id="6e0f646bfc4efa2110bf6449cf37709d3558db49" translate="yes" xml:space="preserve">
          <source>Starting from JDK 1.8, interfaces in Java can contain &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/IandI/defaultmethods.html&quot;&gt;default methods&lt;/a&gt;. You can declare a non-abstract member of a Kotlin interface as default for the Java classes implementing it. To make a member default, mark it with the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-default/index&quot;&gt;&lt;code&gt;@JvmDefault&lt;/code&gt;&lt;/a&gt; annotation. Here is an example of a Kotlin interface with a default method:</source>
          <target state="translated">从JDK 1.8开始，Java中的接口可以包含&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/IandI/defaultmethods.html&quot;&gt;默认方法&lt;/a&gt;。您可以将Kotlin接口的非抽象成员声明为实现它的Java类的默认成员。要使成员成为默认成员，请使用&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-default/index&quot;&gt; &lt;code&gt;@JvmDefault&lt;/code&gt; &lt;/a&gt;批注对其进行标记。这是带有默认方法的Kotlin界面示例：</target>
        </trans-unit>
        <trans-unit id="cd2a24b509ce811a3267e32e8920ed8b3ac2112a" translate="yes" xml:space="preserve">
          <source>Starting from Kotlin 1.3, &lt;code&gt;@JvmStatic&lt;/code&gt; applies to functions defined in companion objects of interfaces as well. Such functions compile to static methods in interfaces. Note that static method in interfaces were introduced in Java 1.8, so be sure to use the corresponding targets.</source>
          <target state="translated">从Kotlin 1.3开始， &lt;code&gt;@JvmStatic&lt;/code&gt; 也适用于在接口的伴随对象中定义的函数。此类函数可编译为接口中的静态方法。请注意，接口中的静态方法是Java 1.8中引入的，因此请确保使用相应的目标。</target>
        </trans-unit>
        <trans-unit id="9e63edf3fd41246ee7320042aeba90b47e8343be" translate="yes" xml:space="preserve">
          <source>Starting from Kotlin 1.4.0, all runtime null checks will throw a &lt;code&gt;java.lang.NullPointerException&lt;/code&gt; instead of &lt;code&gt;KotlinNullPointerException&lt;/code&gt;, &lt;code&gt;IllegalStateException&lt;/code&gt;, &lt;code&gt;IllegalArgumentException&lt;/code&gt;, and &lt;code&gt;TypeCastException&lt;/code&gt;. This applies to: the &lt;code&gt;!!&lt;/code&gt; operator, parameter null checks in the method preamble, platform-typed expression null checks, and the &lt;code&gt;as&lt;/code&gt; operator with a non-null type. This doesn&amp;rsquo;t apply to &lt;code&gt;lateinit&lt;/code&gt; null checks and explicit library function calls like &lt;code&gt;checkNotNull&lt;/code&gt; or &lt;code&gt;requireNotNull&lt;/code&gt;.</source>
          <target state="translated">从Kotlin 1.4.0开始，所有运行时null检查都将引发 &lt;code&gt;java.lang.NullPointerException&lt;/code&gt; 而不是 &lt;code&gt;KotlinNullPointerException&lt;/code&gt; ， &lt;code&gt;IllegalStateException&lt;/code&gt; ， &lt;code&gt;IllegalArgumentException&lt;/code&gt; 和 &lt;code&gt;TypeCastException&lt;/code&gt; 。这适用于： &lt;code&gt;!!&lt;/code&gt; 运算符，方法序言中的参数null检查，平台类型的表达式null检查以及具有非null类型的 &lt;code&gt;as&lt;/code&gt; 运算符。这不适用于 &lt;code&gt;lateinit&lt;/code&gt; 空检查和诸如 &lt;code&gt;checkNotNull&lt;/code&gt; 或 &lt;code&gt;requireNotNull&lt;/code&gt; 之类的显式库函数调用。</target>
        </trans-unit>
        <trans-unit id="f2ef314e1060cb19059b7679202c90dd5f779df0" translate="yes" xml:space="preserve">
          <source>Starting from version 1.3.30, kapt supports incremental annotation processing as an experimental feature. Currently, annotation processing can be incremental only if all annotation processors being used are incremental.</source>
          <target state="translated">从1.3.30版本开始,kapt支持增量式注解处理作为一个实验性功能。目前,只有当所有被使用的注解处理器都是增量的时,注解处理才能是增量的。</target>
        </trans-unit>
        <trans-unit id="1620971e5e7fb81960f0323359f6dc556dc282b3" translate="yes" xml:space="preserve">
          <source>Starting with 1.3.30, an experimental integration with &lt;a href=&quot;https://cocoapods.org/&quot;&gt;CocoaPods&lt;/a&gt; is added to Kotlin/Native. This feature allows you to represent a Kotlin/Native Gradle-project as a CocoaPods dependency. Such a representation provides the following advantages:</source>
          <target state="translated">从1.3.30开始，将与&lt;a href=&quot;https://cocoapods.org/&quot;&gt;CocoaPods&lt;/a&gt;的实验集成添加到Kotlin / Native。此功能使您可以将Kotlin / Native Gradle项目表示为CocoaPods依赖项。这样的表示具有以下优点：</target>
        </trans-unit>
        <trans-unit id="52db441bf35f1362ad44a661d4447647a17c6032" translate="yes" xml:space="preserve">
          <source>Starting with 1.4.0, Kotlin multiplatform projects require Gradle 6.0 or later. Make sure that your projects use the proper version of Gradle and upgrade it if needed. See the &lt;a href=&quot;https://docs.gradle.org/current/userguide/upgrading_version_5.html&quot;&gt;Gradle documentation&lt;/a&gt; for non-Kotlin-specific migration instructions.</source>
          <target state="translated">从1.4.0开始，Kotlin多平台项目需要Gradle 6.0或更高版本。确保您的项目使用正确版本的Gradle并在需要时对其进行升级。请参阅&lt;a href=&quot;https://docs.gradle.org/current/userguide/upgrading_version_5.html&quot;&gt;Gradle文档&lt;/a&gt;以获取非Kotlin专用的迁移说明。</target>
        </trans-unit>
        <trans-unit id="c4a699e6088fe9194a082a83e78da376e5f2104d" translate="yes" xml:space="preserve">
          <source>Starting with 1.4.0, the Kotlin/Native compiler produces &lt;a href=&quot;https://developer.apple.com/documentation/xcode/building_your_app_to_include_debugging_information&quot;&gt;debug symbol files&lt;/a&gt; (&lt;code&gt;.dSYM&lt;/code&gt;s) for release binaries on Darwin platforms by default. This can be disabled with the &lt;code&gt;-Xadd-light-debug=disable&lt;/code&gt; compiler option. On other platforms, this option is disabled by default. To toggle this option in Gradle, use:</source>
          <target state="translated">从1.4.0版本开始，默认情况下，Kotlin / Native编译器会为达尔文平台上的发行二进制&lt;a href=&quot;https://developer.apple.com/documentation/xcode/building_your_app_to_include_debugging_information&quot;&gt;文件&lt;/a&gt;生成调试符号文件（ &lt;code&gt;.dSYM&lt;/code&gt; ）。可以使用 &lt;code&gt;-Xadd-light-debug=disable&lt;/code&gt; 编译器选项禁用此功能。在其他平台上，默认情况下禁用此选项。要在Gradle中切换此选项，请使用：</target>
        </trans-unit>
        <trans-unit id="843f77eb473690d7aad6e0682c17b7993f79cc2f" translate="yes" xml:space="preserve">
          <source>Starting with Kotlin 1.1, the JavaScript target is no longer considered experimental. All language features are supported, and there are many new tools for integration with the front-end development environment. See &lt;a href=&quot;#javascript-backend&quot;&gt;below&lt;/a&gt; for a more detailed list of changes.</source>
          <target state="translated">从Kotlin 1.1开始，不再将JavaScript目标视为实验性目标。支持所有语言功能，并且有许多新工具可与前端开发环境集成。请参阅&lt;a href=&quot;#javascript-backend&quot;&gt;下面&lt;/a&gt;的更详细的更改列表。</target>
        </trans-unit>
        <trans-unit id="ae38e0129a4b318762165a84af231b05176eafcd" translate="yes" xml:space="preserve">
          <source>Starting with Kotlin 1.1, the JavaScript target is no longer considered experimental. All language features are supported, and there are many new tools for integration with the frontend development environment. See &lt;a href=&quot;#javascript-backend&quot;&gt;below&lt;/a&gt; for a more detailed list of changes.</source>
          <target state="translated">从Kotlin 1.1开始，不再将JavaScript目标视为实验性目标。支持所有语言功能，并且有许多用于与前端开发环境集成的新工具。有关更改的详细列表，请参见&lt;a href=&quot;#javascript-backend&quot;&gt;下文&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="41f73c0acfd31a8c403654851fe6cd652c2e3650" translate="yes" xml:space="preserve">
          <source>Starting with Kotlin 1.1.2, the dependencies with group &lt;code&gt;org.jetbrains.kotlin&lt;/code&gt; are by default resolved with the version taken from the applied plugin. You can provide the version manually using the full dependency notation:</source>
          <target state="translated">从Kotlin 1.1.2开始，默认情况下，组 &lt;code&gt;org.jetbrains.kotlin&lt;/code&gt; 的依赖项使用从应用的插件获取的版本进行解析。您可以使用完整的依赖项表示法手动提供版本：</target>
        </trans-unit>
        <trans-unit id="07b8457eb5cdf91e3e7cbfadbb3eebb80e30d3ff" translate="yes" xml:space="preserve">
          <source>Starting with Kotlin 1.2, array arguments for annotations can be passed with the new array literal syntax instead of the &lt;code&gt;arrayOf&lt;/code&gt; function:</source>
          <target state="translated">从Kotlin 1.2开始，注释的数组参数可以使用新的数组文字语法而不是 &lt;code&gt;arrayOf&lt;/code&gt; 函数传递：</target>
        </trans-unit>
        <trans-unit id="9742077d694d1c9faea7c00ca99234ce6ecc9bf4" translate="yes" xml:space="preserve">
          <source>Starting with Kotlin 1.3.60, the Kotlin/JS Gradle plugin automatically generates source maps for our builds. These enable support for debugging our code using browser development tools. To get started debugging our code, execute the &lt;code&gt;run&lt;/code&gt; task in a project using the JS Gradle plugin, or &lt;code&gt;browserDevelopmentRun&lt;/code&gt; in a multiplatform project. Once the development server is running, we can start our debugging session from the browser.</source>
          <target state="translated">从Kotlin 1.3.60开始，Kotlin / JS Gradle插件会自动为我们的构建生成源地图。这些支持使用浏览器开发工具调试我们的代码。要开始调试我们的代码，请使用JS Gradle插件在一个项目中执行 &lt;code&gt;run&lt;/code&gt; 任务，或者在多平台项目中执行 &lt;code&gt;browserDevelopmentRun&lt;/code&gt; 。开发服务器运行后，我们可以从浏览器开始调试会话。</target>
        </trans-unit>
        <trans-unit id="12a86828fbb44a7006158c4f6ac9be7d98219035" translate="yes" xml:space="preserve">
          <source>Starting with version 1.1.50 primitive array translation utilizes JavaScript TypedArray:</source>
          <target state="translated">从1.1.50版本开始,基元数组翻译使用JavaScript TypedArray。</target>
        </trans-unit>
        <trans-unit id="dd4c7c6c2fa2a107f57737194dfcb51c6b3fd326" translate="yes" xml:space="preserve">
          <source>Starts a coroutine with receiver type &lt;a href=&quot;start-coroutine#R&quot;&gt;R&lt;/a&gt; and result type &lt;a href=&quot;start-coroutine#T&quot;&gt;T&lt;/a&gt;. This function creates and starts a new, fresh instance of suspendable computation every time it is invoked. The &lt;a href=&quot;start-coroutine#kotlin.coroutines%24startCoroutine%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.startCoroutine.R%2C+kotlin.coroutines.startCoroutine.T%29%29%2C+kotlin.coroutines.startCoroutine.R%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.startCoroutine.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when the coroutine completes with a result or an exception.</source>
          <target state="translated">使用接收器类型&lt;a href=&quot;start-coroutine#R&quot;&gt;R&lt;/a&gt;和结果类型&lt;a href=&quot;start-coroutine#T&quot;&gt;T&lt;/a&gt;启动协程。每次调用此函数时，都会创建并启动一个新的可暂停计算的新实例。在&lt;a href=&quot;start-coroutine#kotlin.coroutines%24startCoroutine%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.startCoroutine.R%2C+kotlin.coroutines.startCoroutine.T%29%29%2C+kotlin.coroutines.startCoroutine.R%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.startCoroutine.T%29%29%29%2Fcompletion&quot;&gt;完成&lt;/a&gt;当协程与结果或异常结束连续被调用。</target>
        </trans-unit>
        <trans-unit id="c7fa9a9cb5133b45f7dc5a5d54a3811aeb18a99a" translate="yes" xml:space="preserve">
          <source>Starts a coroutine with receiver type &lt;a href=&quot;start-coroutine#R&quot;&gt;R&lt;/a&gt; and result type &lt;a href=&quot;start-coroutine#T&quot;&gt;T&lt;/a&gt;. This function creates and starts a new, fresh instance of suspendable computation every time it is invoked. The &lt;a href=&quot;start-coroutine#kotlin.coroutines%24startCoroutine(kotlin.coroutines.SuspendFunction1((kotlin.coroutines.startCoroutine.R,%20kotlin.coroutines.startCoroutine.T)),%20kotlin.coroutines.startCoroutine.R,%20kotlin.coroutines.Continuation((kotlin.coroutines.startCoroutine.T)))/completion&quot;&gt;completion&lt;/a&gt; continuation is invoked when the coroutine completes with a result or an exception.</source>
          <target state="translated">用接收器类型&lt;a href=&quot;start-coroutine#R&quot;&gt;R&lt;/a&gt;和结果类型&lt;a href=&quot;start-coroutine#T&quot;&gt;T&lt;/a&gt;启动协程。每次调用此函数时，都会创建并启动一个新的可暂停计算的新实例。在&lt;a href=&quot;start-coroutine#kotlin.coroutines%24startCoroutine(kotlin.coroutines.SuspendFunction1((kotlin.coroutines.startCoroutine.R,%20kotlin.coroutines.startCoroutine.T)),%20kotlin.coroutines.startCoroutine.R,%20kotlin.coroutines.Continuation((kotlin.coroutines.startCoroutine.T)))/completion&quot;&gt;完成&lt;/a&gt;当协程与结果或异常结束连续被调用。</target>
        </trans-unit>
        <trans-unit id="14c38709fc453b41bd452218007cb35f2d68079b" translate="yes" xml:space="preserve">
          <source>Starts a coroutine without a receiver and with result type &lt;a href=&quot;start-coroutine#T&quot;&gt;T&lt;/a&gt;. This function creates and starts a new, fresh instance of suspendable computation every time it is invoked. The &lt;a href=&quot;start-coroutine#kotlin.coroutines%24startCoroutine%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.startCoroutine.T%29%29%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.startCoroutine.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when the coroutine completes with a result or an exception.</source>
          <target state="translated">在没有接收器且结果类型为&lt;a href=&quot;start-coroutine#T&quot;&gt;T的&lt;/a&gt;情况下启动协程。每次调用此函数时，都会创建并启动一个新的可暂停计算的新实例。在&lt;a href=&quot;start-coroutine#kotlin.coroutines%24startCoroutine%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.startCoroutine.T%29%29%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.startCoroutine.T%29%29%29%2Fcompletion&quot;&gt;完成&lt;/a&gt;当协程与结果或异常结束连续被调用。</target>
        </trans-unit>
        <trans-unit id="680ce3bf07f76d76f4284acff2d7d36edd428e4a" translate="yes" xml:space="preserve">
          <source>Starts a coroutine without a receiver and with result type &lt;a href=&quot;start-coroutine#T&quot;&gt;T&lt;/a&gt;. This function creates and starts a new, fresh instance of suspendable computation every time it is invoked. The &lt;a href=&quot;start-coroutine#kotlin.coroutines%24startCoroutine(kotlin.coroutines.SuspendFunction0((kotlin.coroutines.startCoroutine.T)),%20kotlin.coroutines.Continuation((kotlin.coroutines.startCoroutine.T)))/completion&quot;&gt;completion&lt;/a&gt; continuation is invoked when the coroutine completes with a result or an exception.</source>
          <target state="translated">在没有接收器且结果类型为&lt;a href=&quot;start-coroutine#T&quot;&gt;T的&lt;/a&gt;情况下启动协程。每次调用此函数时，都会创建并启动一个新的可暂停计算的新实例。在&lt;a href=&quot;start-coroutine#kotlin.coroutines%24startCoroutine(kotlin.coroutines.SuspendFunction0((kotlin.coroutines.startCoroutine.T)),%20kotlin.coroutines.Continuation((kotlin.coroutines.startCoroutine.T)))/completion&quot;&gt;完成&lt;/a&gt;当协程与结果或异常结束连续被调用。</target>
        </trans-unit>
        <trans-unit id="5ad5c461ffacb6e08120b54a5c5c09dc010d10cb" translate="yes" xml:space="preserve">
          <source>Starts an unintercepted coroutine with receiver type &lt;a href=&quot;start-coroutine-unintercepted-or-return#R&quot;&gt;R&lt;/a&gt; and result type &lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T&lt;/a&gt; and executes it until its first suspension. Returns the result of the coroutine or throws its exception if it does not suspend or &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d&quot;&gt;COROUTINE_SUSPENDED&lt;/a&gt; if it suspends. In the latter case, the &lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24startCoroutineUninterceptedOrReturn%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.R%2C+kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.R%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when the coroutine completes with a result or an exception.</source>
          <target state="translated">用接收器类型&lt;a href=&quot;start-coroutine-unintercepted-or-return#R&quot;&gt;R&lt;/a&gt;和结果类型&lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T&lt;/a&gt;启动不受拦截的协程，并执行直到其第一次暂停。返回协程的结果，如果不暂停，则抛出异常，如果暂停，则&lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d&quot;&gt;抛出COROUTINE_SUSPENDED&lt;/a&gt;。在后一种情况下，当协程以结果或异常结束时，将调用&lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24startCoroutineUninterceptedOrReturn%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.R%2C+kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.R%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%29%2Fcompletion&quot;&gt;完成&lt;/a&gt;继续。</target>
        </trans-unit>
        <trans-unit id="eea330f2e3c8f4aad63821fe415632a52f31cb3b" translate="yes" xml:space="preserve">
          <source>Starts an unintercepted coroutine with receiver type &lt;a href=&quot;start-coroutine-unintercepted-or-return#R&quot;&gt;R&lt;/a&gt; and result type &lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T&lt;/a&gt; and executes it until its first suspension. Returns the result of the coroutine or throws its exception if it does not suspend or &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d&quot;&gt;COROUTINE_SUSPENDED&lt;/a&gt; if it suspends. In the latter case, the &lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24startCoroutineUninterceptedOrReturn(kotlin.coroutines.SuspendFunction1((kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.R,%20kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T)),%20kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.R,%20kotlin.coroutines.Continuation((kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T)))/completion&quot;&gt;completion&lt;/a&gt; continuation is invoked when the coroutine completes with a result or an exception.</source>
          <target state="translated">用接收器类型&lt;a href=&quot;start-coroutine-unintercepted-or-return#R&quot;&gt;R&lt;/a&gt;和结果类型&lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T&lt;/a&gt;启动不受拦截的协程，并执行直到其第一次暂停。返回协程的结果，如果不暂停，则抛出异常；如果暂停，则&lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d&quot;&gt;抛出COROUTINE_SUSPENDED&lt;/a&gt;。在后一种情况下，当协程以结果或异常结束时，将调用&lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24startCoroutineUninterceptedOrReturn(kotlin.coroutines.SuspendFunction1((kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.R,%20kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T)),%20kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.R,%20kotlin.coroutines.Continuation((kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T)))/completion&quot;&gt;完成&lt;/a&gt;继续。</target>
        </trans-unit>
        <trans-unit id="334ec1f5ed05ab3e3f9b3bc457a00d70430e2e22" translate="yes" xml:space="preserve">
          <source>Starts an unintercepted coroutine without a receiver and with result type &lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T&lt;/a&gt; and executes it until its first suspension. Returns the result of the coroutine or throws its exception if it does not suspend or &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d&quot;&gt;COROUTINE_SUSPENDED&lt;/a&gt; if it suspends. In the latter case, the &lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24startCoroutineUninterceptedOrReturn%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when the coroutine completes with a result or an exception.</source>
          <target state="translated">在没有接收器且结果类型为&lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T的&lt;/a&gt;情况下启动不受拦截的协程，并执行该协程直到第一次暂停。返回协程的结果，如果协程不挂起，则抛出异常；如果协程不挂起，则&lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d&quot;&gt;抛出COROUTINE_SUSPENDED&lt;/a&gt;。在后一种情况下，当协程以结果或异常结束时，将调用&lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24startCoroutineUninterceptedOrReturn%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%29%2Fcompletion&quot;&gt;完成&lt;/a&gt;继续。</target>
        </trans-unit>
        <trans-unit id="8e32550b501c26b7694d5da5582d67fd0e8523c5" translate="yes" xml:space="preserve">
          <source>Starts an unintercepted coroutine without a receiver and with result type &lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T&lt;/a&gt; and executes it until its first suspension. Returns the result of the coroutine or throws its exception if it does not suspend or &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d&quot;&gt;COROUTINE_SUSPENDED&lt;/a&gt; if it suspends. In the latter case, the &lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24startCoroutineUninterceptedOrReturn(kotlin.coroutines.SuspendFunction0((kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T)),%20kotlin.coroutines.Continuation((kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T)))/completion&quot;&gt;completion&lt;/a&gt; continuation is invoked when the coroutine completes with a result or an exception.</source>
          <target state="translated">在没有接收器且结果类型为&lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T的&lt;/a&gt;情况下启动不受拦截的协程，并执行该协程直到第一次暂停。返回协程的结果，如果不暂停，则抛出异常；如果暂停，则&lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d&quot;&gt;抛出COROUTINE_SUSPENDED&lt;/a&gt;。在后一种情况下，当协程以结果或异常结束时，将调用&lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24startCoroutineUninterceptedOrReturn(kotlin.coroutines.SuspendFunction0((kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T)),%20kotlin.coroutines.Continuation((kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T)))/completion&quot;&gt;完成&lt;/a&gt;继续。</target>
        </trans-unit>
        <trans-unit id="3ddb5f3024adc4fc2cb11955f22b8f2de6b0e3b1" translate="yes" xml:space="preserve">
          <source>Starts coroutine with receiver type &lt;a href=&quot;start-coroutine#R&quot;&gt;R&lt;/a&gt; and result type &lt;a href=&quot;start-coroutine#T&quot;&gt;T&lt;/a&gt;. This function creates and start a new, fresh instance of suspendable computation every time it is invoked. The &lt;a href=&quot;start-coroutine#kotlin.coroutines.experimental%24startCoroutine%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.experimental.startCoroutine.R%2C+kotlin.coroutines.experimental.startCoroutine.T%29%29%2C+kotlin.coroutines.experimental.startCoroutine.R%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.startCoroutine.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when coroutine completes with result or exception.</source>
          <target state="translated">以接收器类型&lt;a href=&quot;start-coroutine#R&quot;&gt;R&lt;/a&gt;和结果类型&lt;a href=&quot;start-coroutine#T&quot;&gt;T来&lt;/a&gt;启动协程。每次调用此函数时，都会创建并启动一个新的可暂停计算的新实例。在&lt;a href=&quot;start-coroutine#kotlin.coroutines.experimental%24startCoroutine%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.experimental.startCoroutine.R%2C+kotlin.coroutines.experimental.startCoroutine.T%29%29%2C+kotlin.coroutines.experimental.startCoroutine.R%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.startCoroutine.T%29%29%29%2Fcompletion&quot;&gt;完成&lt;/a&gt;时，协程与结果或异常结束连续被调用。</target>
        </trans-unit>
        <trans-unit id="926abb8b1e85620405b11eda69dc96cfcc1f565d" translate="yes" xml:space="preserve">
          <source>Starts coroutine without receiver and with result type &lt;a href=&quot;start-coroutine#T&quot;&gt;T&lt;/a&gt;. This function creates and start a new, fresh instance of suspendable computation every time it is invoked. The &lt;a href=&quot;start-coroutine#kotlin.coroutines.experimental%24startCoroutine%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.experimental.startCoroutine.T%29%29%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.startCoroutine.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when coroutine completes with result or exception.</source>
          <target state="translated">在没有接收器且结果类型为&lt;a href=&quot;start-coroutine#T&quot;&gt;T的&lt;/a&gt;情况下启动协程。每次调用此函数时，都会创建并启动一个新的可暂停计算的新实例。在&lt;a href=&quot;start-coroutine#kotlin.coroutines.experimental%24startCoroutine%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.experimental.startCoroutine.T%29%29%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.startCoroutine.T%29%29%29%2Fcompletion&quot;&gt;完成&lt;/a&gt;时，协程与结果或异常结束连续被调用。</target>
        </trans-unit>
        <trans-unit id="2e41ff62360a7519652b277899448ef726bd6a59" translate="yes" xml:space="preserve">
          <source>Starts unintercepted coroutine with receiver type &lt;a href=&quot;start-coroutine-unintercepted-or-return#R&quot;&gt;R&lt;/a&gt; and result type &lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T&lt;/a&gt; and executes it until its first suspension. Returns the result of the coroutine or throws its exception if it does not suspend or &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d#kotlin.coroutines.experimental.intrinsics%24COROUTINE_SUSPENDED&quot;&gt;COROUTINE_SUSPENDED&lt;/a&gt; if it suspends. In the latter case, the &lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.experimental.intrinsics%24startCoroutineUninterceptedOrReturn%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.R%2C+kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.R%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when coroutine completes with result or exception. This function is designed to be used from inside of &lt;a href=&quot;suspend-coroutine-or-return&quot;&gt;suspendCoroutineOrReturn&lt;/a&gt; to resume the execution of a suspended coroutine using a reference to the suspending function.</source>
          <target state="translated">从接收器类型&lt;a href=&quot;start-coroutine-unintercepted-or-return#R&quot;&gt;R&lt;/a&gt;和结果类型&lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T&lt;/a&gt;开始不受拦截的协程，并执行直到第一次暂停。返回协程的结果，如果不暂停，则抛出异常，如果暂停，则&lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d#kotlin.coroutines.experimental.intrinsics%24COROUTINE_SUSPENDED&quot;&gt;抛出COROUTINE_SUSPENDED&lt;/a&gt;。在后一种情况下，当协程以结果或异常完成时，将调用&lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.experimental.intrinsics%24startCoroutineUninterceptedOrReturn%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.R%2C+kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.R%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%29%2Fcompletion&quot;&gt;完成&lt;/a&gt;继续。该函数被设计为从&lt;a href=&quot;suspend-coroutine-or-return&quot;&gt;suspendCoroutineOrReturn&lt;/a&gt;内部使用，以通过使用对suspend函数的引用来恢复暂停的协程的执行。</target>
        </trans-unit>
        <trans-unit id="2788b8cd3b5da900d1f6ab2449049c41a16ae34e" translate="yes" xml:space="preserve">
          <source>Starts unintercepted coroutine without receiver and with result type &lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T&lt;/a&gt; and executes it until its first suspension. Returns the result of the coroutine or throws its exception if it does not suspend or &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d#kotlin.coroutines.experimental.intrinsics%24COROUTINE_SUSPENDED&quot;&gt;COROUTINE_SUSPENDED&lt;/a&gt; if it suspends. In the latter case, the &lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.experimental.intrinsics%24startCoroutineUninterceptedOrReturn%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when coroutine completes with result or exception. This function is designed to be used from inside of &lt;a href=&quot;suspend-coroutine-or-return&quot;&gt;suspendCoroutineOrReturn&lt;/a&gt; to resume the execution of a suspended coroutine using a reference to the suspending function.</source>
          <target state="translated">在没有接收器且结果类型为&lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T的&lt;/a&gt;情况下启动不受拦截的协程，并执行直到其第一次暂停。返回协程的结果，如果协程不挂起，则抛出异常；如果协程不挂起，则&lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d#kotlin.coroutines.experimental.intrinsics%24COROUTINE_SUSPENDED&quot;&gt;抛出COROUTINE_SUSPENDED&lt;/a&gt;。在后一种情况下，当协程以结果或异常完成时，将调用&lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.experimental.intrinsics%24startCoroutineUninterceptedOrReturn%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%29%2Fcompletion&quot;&gt;完成&lt;/a&gt;继续。该函数被设计为从&lt;a href=&quot;suspend-coroutine-or-return&quot;&gt;suspendCoroutineOrReturn&lt;/a&gt;内部使用，以通过使用对suspend函数的引用来恢复暂停的协程的执行。</target>
        </trans-unit>
        <trans-unit id="a33cea1b6a9bd48cd9741eb556f78b336e49b52e" translate="yes" xml:space="preserve">
          <source>State of the future object.</source>
          <target state="translated">未来对象的状态。</target>
        </trans-unit>
        <trans-unit id="00fd0f5644f4a68b8db2baa79325e9de7d191ef2" translate="yes" xml:space="preserve">
          <source>Static and shared libraries have the suffixes static and shared respectively, for example, &lt;code&gt;fooDebugStatic&lt;/code&gt; or &lt;code&gt;barReleaseShared&lt;/code&gt;.</source>
          <target state="translated">静态库和共享库的后缀分别为静态和共享，例如 &lt;code&gt;fooDebugStatic&lt;/code&gt; 或 &lt;code&gt;barReleaseShared&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="600b8907db339cd22478c83d4a16dd85a73015b0" translate="yes" xml:space="preserve">
          <source>Static fields</source>
          <target state="translated">静态领域</target>
        </trans-unit>
        <trans-unit id="33a218e75ba6181a2de679fe4af45102826155a5" translate="yes" xml:space="preserve">
          <source>Static library.</source>
          <target state="translated">静态库。</target>
        </trans-unit>
        <trans-unit id="d15bec36fb146b0a59873196f4b808af2a0c58d9" translate="yes" xml:space="preserve">
          <source>Static members</source>
          <target state="translated">静态成员</target>
        </trans-unit>
        <trans-unit id="3367f809c842440e588af1b9c4ce823b40a614e7" translate="yes" xml:space="preserve">
          <source>Static members of Java classes form &quot;companion objects&quot; for these classes. We cannot pass such a &quot;companion object&quot; around as a value, but can access the members explicitly, for example:</source>
          <target state="translated">Java类的静态成员构成了这些类的 &quot;同伴对象&quot;。我们不能把这样的 &quot;同伴对象 &quot;作为一个值传来传去,但可以显式地访问成员,例如。</target>
        </trans-unit>
        <trans-unit id="749a016bf10749d6bbdfc0717392432e9f0401f6" translate="yes" xml:space="preserve">
          <source>Static methods</source>
          <target state="translated">静态方法</target>
        </trans-unit>
        <trans-unit id="d553499a1ed80ace789bfb1505f062f70a9599b6" translate="yes" xml:space="preserve">
          <source>Static native library</source>
          <target state="translated">静态本地库</target>
        </trans-unit>
        <trans-unit id="931e7197a7d758327554f5adffb19528eb5a8632" translate="yes" xml:space="preserve">
          <source>Static typing and null safety help create reliable, maintainable code that is easy to troubleshoot.</source>
          <target state="translated">静态类型和空安全有助于创建可靠的、可维护的、易于排除故障的代码。</target>
        </trans-unit>
        <trans-unit id="352274d59d59b1511e7ddd7438d2c2b359144fe5" translate="yes" xml:space="preserve">
          <source>Status of different components</source>
          <target state="translated">不同组成部分的状况</target>
        </trans-unit>
        <trans-unit id="f3807792854b99f68c6be94a83962b160d23fe45" translate="yes" xml:space="preserve">
          <source>Stay in the constant feedback loop with the users.</source>
          <target state="translated">与用户保持不断的反馈循环。</target>
        </trans-unit>
        <trans-unit id="f94f58f50f4cb02a7cf2e081505d0705933f148e" translate="yes" xml:space="preserve">
          <source>Stepping</source>
          <target state="translated">Stepping</target>
        </trans-unit>
        <trans-unit id="2d96e356b3dfea348019e9d1d257295bebd82c9a" translate="yes" xml:space="preserve">
          <source>Stepping functions works mostly the same way as for C/C++ programs</source>
          <target state="translated">步进函数的工作方式与C/C++程序的工作方式基本相同。</target>
        </trans-unit>
        <trans-unit id="1fdc6b688a5c8cce5acf4ba7f33e8a0452810157" translate="yes" xml:space="preserve">
          <source>Still, it's not 100% finished, so changes are possible (including ones based on your own feedback).</source>
          <target state="translated">不过,它还没有100%完成,所以有可能进行修改(包括根据你自己的反馈进行修改)。</target>
        </trans-unit>
        <trans-unit id="9e092dda4f0e27d0c7686ddd00272079e678b6e6" translate="yes" xml:space="preserve">
          <source>Storage</source>
          <target state="translated">Storage</target>
        </trans-unit>
        <trans-unit id="248e9b3aa308183a170c36806544acb1d393c459" translate="yes" xml:space="preserve">
          <source>StorageEventInit</source>
          <target state="translated">StorageEventInit</target>
        </trans-unit>
        <trans-unit id="d976f838e65f2db3d7f099767b0928393c1ede54" translate="yes" xml:space="preserve">
          <source>Store old code style in project</source>
          <target state="translated">在项目中存储旧的代码风格</target>
        </trans-unit>
        <trans-unit id="6afbacec45c0da97dff5ccf3dbf2645d5876c3c5" translate="yes" xml:space="preserve">
          <source>Store the initial value of &lt;code&gt;a&lt;/code&gt; to a temporary storage &lt;code&gt;a0&lt;/code&gt;;</source>
          <target state="translated">将 &lt;code&gt;a&lt;/code&gt; 的初始值存储到临时存储 &lt;code&gt;a0&lt;/code&gt; 中；</target>
        </trans-unit>
        <trans-unit id="9c71e9de239b5ab938dbca4a1d875b22b4f56ace" translate="yes" xml:space="preserve">
          <source>Stores instance size of the type T: CEnumVar.</source>
          <target state="translated">存储T类型的实例大小。CEnumVar。</target>
        </trans-unit>
        <trans-unit id="1c3904cdae80dc0a8fc8d311b3ceb604faa99393" translate="yes" xml:space="preserve">
          <source>Stores the value of the property for the given object in this mutable map.</source>
          <target state="translated">将给定对象的属性值存储在这个可变映射中。</target>
        </trans-unit>
        <trans-unit id="063a13497de8628ed966341d4c8998e048faac77" translate="yes" xml:space="preserve">
          <source>Storing Properties in a Map</source>
          <target state="translated">在地图中存储属性</target>
        </trans-unit>
        <trans-unit id="ddb303d499265b7489a4f48bffe279ba6adc50f0" translate="yes" xml:space="preserve">
          <source>Storing properties in a map</source>
          <target state="translated">在地图中存储属性</target>
        </trans-unit>
        <trans-unit id="cc60d9a373cacd1f7b4d2be35acf2bfd9970e460" translate="yes" xml:space="preserve">
          <source>Strictfp</source>
          <target state="translated">Strictfp</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="dcadc5a0cb117211f9dc789c191b1d6c306ecd43" translate="yes" xml:space="preserve">
          <source>String Interpolation</source>
          <target state="translated">字符串插值</target>
        </trans-unit>
        <trans-unit id="18c909570fe3d2f04f7e3e21101c4ef09a029b7b" translate="yes" xml:space="preserve">
          <source>String Literals</source>
          <target state="translated">字符串</target>
        </trans-unit>
        <trans-unit id="3ad53eca410dfbc39bc16b33326f447092d15b4c" translate="yes" xml:space="preserve">
          <source>String Templates</source>
          <target state="translated">字符串模板</target>
        </trans-unit>
        <trans-unit id="3ce59ba99c8eaf2a5afe5adcf7f90b7c4f8b3415" translate="yes" xml:space="preserve">
          <source>String builder can be used to efficiently perform multiple string manipulation operations.</source>
          <target state="translated">字符串生成器可以用来有效地执行多个字符串操作。</target>
        </trans-unit>
        <trans-unit id="5993cb336c6391ee8eea94b873bb797a1c4d4619" translate="yes" xml:space="preserve">
          <source>String literals</source>
          <target state="translated">字符串</target>
        </trans-unit>
        <trans-unit id="26999992a443711764128a5ebde38ee89dae6779" translate="yes" xml:space="preserve">
          <source>String literals may contain template expressions, i.e. pieces of code that are evaluated and whose results are concatenated into the string. A template expression starts with a dollar sign ($) and consists of either a simple name:</source>
          <target state="translated">字符串可以包含模板表达式,也就是一些代码,这些代码经过评估后,其结果会被连接到字符串中。模板表达式以美元符号($)开头,由一个简单的名称组成。</target>
        </trans-unit>
        <trans-unit id="8de7744f81c5ea96546b7ddeba1d815a5f60f342" translate="yes" xml:space="preserve">
          <source>String representation</source>
          <target state="translated">字符串表示法</target>
        </trans-unit>
        <trans-unit id="6ab7e78e76236d943760ced282c69d00f2ee64f3" translate="yes" xml:space="preserve">
          <source>String representation of the worker.</source>
          <target state="translated">工人的字符串表示。</target>
        </trans-unit>
        <trans-unit id="4f85bffe8cf536bd27d4c8a65ebe070b04592d3f" translate="yes" xml:space="preserve">
          <source>String templates</source>
          <target state="translated">字符串模板</target>
        </trans-unit>
        <trans-unit id="7436274167a247aa32b0eb69c8fa150ce90cf60e" translate="yes" xml:space="preserve">
          <source>String to number conversions</source>
          <target state="translated">字符串到数字的转换</target>
        </trans-unit>
        <trans-unit id="d8722e7c9e74dd4282c8ddb6aafb6678ffcf1c49" translate="yes" xml:space="preserve">
          <source>StringBuilder</source>
          <target state="translated">StringBuilder</target>
        </trans-unit>
        <trans-unit id="3816c4beac471c733eed1d91c213f8c2b6a29262" translate="yes" xml:space="preserve">
          <source>Strings</source>
          <target state="translated">Strings</target>
        </trans-unit>
        <trans-unit id="376d2dc017ddcafe576a8bb45c3839697d243c0f" translate="yes" xml:space="preserve">
          <source>Strings are represented by the type &lt;code&gt;String&lt;/code&gt;. Strings are immutable. Elements of a string are characters that can be accessed by the indexing operation: &lt;code&gt;s[i]&lt;/code&gt;. A string can be iterated over with a &lt;em&gt;for&lt;/em&gt;-loop:</source>
          <target state="translated">字符串由 &lt;code&gt;String&lt;/code&gt; 类型表示。字符串是不可变的。字符串的元素是可以通过索引操作 &lt;code&gt;s[i]&lt;/code&gt; 访问的字符。可以使用&lt;em&gt;for&lt;/em&gt; -loop 遍历字符串：</target>
        </trans-unit>
        <trans-unit id="6f7691f2e802476360e0176ca90e2968711fe093" translate="yes" xml:space="preserve">
          <source>Strings from C and how they look in Kotlin/Native</source>
          <target state="translated">来自C语言的字符串以及它们在Kotlin/Native中的表现。</target>
        </trans-unit>
        <trans-unit id="2684320b57a782ce0439d9845b025f4167f73160" translate="yes" xml:space="preserve">
          <source>Strong bidirectional character type &quot;AL&quot; in the Unicode specification.</source>
          <target state="translated">Unicode规范中的强双向字符类型 &quot;AL&quot;。</target>
        </trans-unit>
        <trans-unit id="8af8df666f0e8eca9822d09b9b728f2790d43a77" translate="yes" xml:space="preserve">
          <source>Strong bidirectional character type &quot;L&quot; in the Unicode specification.</source>
          <target state="translated">Unicode规范中的强双向字符类型 &quot;L&quot;。</target>
        </trans-unit>
        <trans-unit id="277bd06a9fb3591003f711495ac46fc89282f28e" translate="yes" xml:space="preserve">
          <source>Strong bidirectional character type &quot;LRE&quot; in the Unicode specification.</source>
          <target state="translated">Unicode规范中的强双向字符类型 &quot;LRE&quot;。</target>
        </trans-unit>
        <trans-unit id="f0a8c58716e90117a1fa5949bd4edff7bafc489d" translate="yes" xml:space="preserve">
          <source>Strong bidirectional character type &quot;LRO&quot; in the Unicode specification.</source>
          <target state="translated">Unicode规范中的强双向字符类型 &quot;LRO&quot;。</target>
        </trans-unit>
        <trans-unit id="5c434a125001d98e3d65585f819ed8840b4f8897" translate="yes" xml:space="preserve">
          <source>Strong bidirectional character type &quot;R&quot; in the Unicode specification.</source>
          <target state="translated">Unicode规范中的强双向字符类型 &quot;R&quot;。</target>
        </trans-unit>
        <trans-unit id="64ad0d6aedac34d34b627e0784d46dea64c2ff5a" translate="yes" xml:space="preserve">
          <source>Strong bidirectional character type &quot;RLE&quot; in the Unicode specification.</source>
          <target state="translated">Unicode规范中的强双向字符类型 &quot;RLE&quot;。</target>
        </trans-unit>
        <trans-unit id="1665148f18e9a39912a6a12baccd3148269f2320" translate="yes" xml:space="preserve">
          <source>Strong bidirectional character type &quot;RLO&quot; in the Unicode specification.</source>
          <target state="translated">Unicode规范中的强双向字符类型 &quot;RLO&quot;。</target>
        </trans-unit>
        <trans-unit id="9c004726cb57880ed84082cc7d8ab781ff8b2f55" translate="yes" xml:space="preserve">
          <source>Stronger integrations for &lt;a href=&quot;https://github.com/Kotlin/dukat&quot;&gt;Dukat&lt;/a&gt;, the generator for Kotlin external declarations. External declarations can now be generated at build time, or can be manually generated via a Gradle task. Read more about how to use the integration &lt;a href=&quot;js-external-declarations-with-dukat&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Kotlin/dukat&quot;&gt;Dukat的&lt;/a&gt;更强大集成，Kotlin外部声明的生成器。外部声明现在可以在构建时生成，也可以通过Gradle任务手动生成。在&lt;a href=&quot;js-external-declarations-with-dukat&quot;&gt;此处&lt;/a&gt;阅读有关如何使用集成的更多信息。</target>
        </trans-unit>
        <trans-unit id="f21f357479481b3172a23f12385bf19995dd2f48" translate="yes" xml:space="preserve">
          <source>Struct and Union types from C and how they look in Kotlin/Native</source>
          <target state="translated">来自C语言的Struct和Union类型,以及它们在Kotlin/Native中的表现。</target>
        </trans-unit>
        <trans-unit id="af5b40acf56f32ead50b7b4376e35475ae8821af" translate="yes" xml:space="preserve">
          <source>Structs / unions are mapped to types having fields available via the dot notation, i.e. &lt;code&gt;someStructInstance.field1&lt;/code&gt;.</source>
          <target state="translated">结构/联合被映射到具有可通过点表示法使用的字段（即 &lt;code&gt;someStructInstance.field1&lt;/code&gt; )的类型。</target>
        </trans-unit>
        <trans-unit id="024b6c74302356ab4e71438eaaf0b40da91567fc" translate="yes" xml:space="preserve">
          <source>Structural changes in the base list make the behavior of the view undefined.</source>
          <target state="translated">基础列表中的结构变化使得视图的行为无法定义。</target>
        </trans-unit>
        <trans-unit id="72d92fad333f84fb34170c273e339309112411ea" translate="yes" xml:space="preserve">
          <source>Structural equality</source>
          <target state="translated">结构性平等</target>
        </trans-unit>
        <trans-unit id="7d27109df9078a59c52f1f92f6addfe6d10368ae" translate="yes" xml:space="preserve">
          <source>Structural equality (a check for &lt;code&gt;equals()&lt;/code&gt;).</source>
          <target state="translated">结构相等（检查 &lt;code&gt;equals()&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ece356b48420c60af23fc6b7ecae7a03ec149030" translate="yes" xml:space="preserve">
          <source>Structural equality comparisons are done with &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;, like in Python, but it's up to each class to define what that means, by &lt;a href=&quot;inheritance#overriding&quot;&gt;overriding&lt;/a&gt;&lt;a href=&quot;classes#inherited-built-in-functions&quot;&gt;&lt;code&gt;equals()&lt;/code&gt;&lt;/a&gt; (which will be called on the left operand with the right operand as the parameter) and &lt;code&gt;hashCode()&lt;/code&gt;. Most built-in collection types implement deep equality checks for these operators and functions. Reference comparisons - checking if two variables refer to the same object (the same as &lt;code&gt;is&lt;/code&gt; in Python) - are done with &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt;.</source>
          <target state="translated">结构相等性比较是使用 &lt;code&gt;==&lt;/code&gt; 和 &lt;code&gt;!=&lt;/code&gt; 完成的，就像在Python中一样，但是每个类都可以通过&lt;a href=&quot;inheritance#overriding&quot;&gt;覆盖&lt;/a&gt;&lt;a href=&quot;classes#inherited-built-in-functions&quot;&gt; &lt;code&gt;equals()&lt;/code&gt; &lt;/a&gt;来定义含义（由在左侧操作数上调用，以右侧操作数为参数）。和 &lt;code&gt;hashCode()&lt;/code&gt; 。大多数内置集合类型对这些运算符和函数执行深度相等检查。参考比较-检查，如果两个变量指向同一个对象（如同样 &lt;code&gt;is&lt;/code&gt; 在Python） -用完成 &lt;code&gt;===&lt;/code&gt; 和 &lt;code&gt;!==&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b70b639ef5cff3c53b813230fbda1e132ca3cce" translate="yes" xml:space="preserve">
          <source>Structural equality has nothing to do with comparison defined by the &lt;code&gt;Comparable&amp;lt;...&amp;gt;&lt;/code&gt; interface, so only a custom &lt;code&gt;equals(Any?)&lt;/code&gt; implementation may affect the behavior of the operator.</source>
          <target state="translated">结构相等与 &lt;code&gt;Comparable&amp;lt;...&amp;gt;&lt;/code&gt; 接口定义的比较无关，因此仅自定义的 &lt;code&gt;equals(Any?)&lt;/code&gt; 实现可能会影响运算符的行为。</target>
        </trans-unit>
        <trans-unit id="b976e0b583b0412204edf019c0b11bd8b81727df" translate="yes" xml:space="preserve">
          <source>Structural equality is checked by the &lt;code&gt;==&lt;/code&gt; operation (and its negated counterpart &lt;code&gt;!=&lt;/code&gt;). By convention, an expression like &lt;code&gt;a == b&lt;/code&gt; is translated to:</source>
          <target state="translated">结构相等性由 &lt;code&gt;==&lt;/code&gt; 操作（及其否定的 &lt;code&gt;!=&lt;/code&gt; ）检查。按照约定，像 &lt;code&gt;a == b&lt;/code&gt; 这样的表达式将转换为：</target>
        </trans-unit>
        <trans-unit id="660ca66913fdaa764b314de4f4d616cb2af27fc3" translate="yes" xml:space="preserve">
          <source>Structured concurrency</source>
          <target state="translated">结构化并发</target>
        </trans-unit>
        <trans-unit id="688fd1f0d4f70b417561f286a2459a51d7a9bf8d" translate="yes" xml:space="preserve">
          <source>Structured concurrency with async</source>
          <target state="translated">结构化并发与异步</target>
        </trans-unit>
        <trans-unit id="ce867a84f68c1d0cd7e5d2e0a575c394cc078c03" translate="yes" xml:space="preserve">
          <source>StyleSheet</source>
          <target state="translated">StyleSheet</target>
        </trans-unit>
        <trans-unit id="105633f7a20c3c4e6cfe2fcb5bc3777e06065699" translate="yes" xml:space="preserve">
          <source>StyleSheetList</source>
          <target state="translated">StyleSheetList</target>
        </trans-unit>
        <trans-unit id="4eb481e8f0e6186576b990d8a8ee65c0bcaf3bd9" translate="yes" xml:space="preserve">
          <source>Subclasses of a class that implements an interface (in this case, &lt;code&gt;Car&lt;/code&gt;) are also considered to be implementing the interface.</source>
          <target state="translated">实现接口的类的子类（在本例中为 &lt;code&gt;Car&lt;/code&gt; ）也被视为正在实现接口。</target>
        </trans-unit>
        <trans-unit id="82494d5df2327066831b19fcbdbc11f57f406da0" translate="yes" xml:space="preserve">
          <source>Subclassing</source>
          <target state="translated">Subclassing</target>
        </trans-unit>
        <trans-unit id="5aa09d55ccae6bc284a9aaa4b931ff34243aae33" translate="yes" xml:space="preserve">
          <source>Subclassing Kotlin classes and interfaces from Swift/Objective-C</source>
          <target state="translated">从Swift/Objective-C中subclassing Kotlin类和接口。</target>
        </trans-unit>
        <trans-unit id="4c8bffd68e11c1e09416b7275b40472abdd31b0e" translate="yes" xml:space="preserve">
          <source>Subclassing Swift/Objective-C classes and protocols from Kotlin</source>
          <target state="translated">从Kotlin中子类化Swift/Objective-C类和协议。</target>
        </trans-unit>
        <trans-unit id="d8cfc0d2ff946e39f440d5850a833061ce441784" translate="yes" xml:space="preserve">
          <source>Subtracts the other Char value from this value resulting an Int.</source>
          <target state="translated">从这个值中减去其他Char值,得到一个Int值。</target>
        </trans-unit>
        <trans-unit id="f8fc787359f50113256ce34acd74e7ad27c2b7de" translate="yes" xml:space="preserve">
          <source>Subtracts the other Int value from this value resulting a Char.</source>
          <target state="translated">从这个值减去另一个Int值,得到一个Char。</target>
        </trans-unit>
        <trans-unit id="cd1dd0acae6df690f4f408b7810c6a68a77d2c65" translate="yes" xml:space="preserve">
          <source>Subtracts the other value from this value.</source>
          <target state="translated">从这个值中减去另一个值。</target>
        </trans-unit>
        <trans-unit id="281078264fc551305c2d82e46c0dab3a6f90a54d" translate="yes" xml:space="preserve">
          <source>Successful completion</source>
          <target state="translated">顺利完成</target>
        </trans-unit>
        <trans-unit id="d6b1220988da8e4820eca8338c62f95c8d54d502" translate="yes" xml:space="preserve">
          <source>Such &lt;em&gt;smart casts&lt;/em&gt; work for &lt;a href=&quot;control-flow#when-expression&quot;&gt;&lt;em&gt;when&lt;/em&gt;-expressions&lt;/a&gt; and &lt;a href=&quot;control-flow#while-loops&quot;&gt;&lt;em&gt;while&lt;/em&gt;-loops&lt;/a&gt; as well:</source>
          <target state="translated">这样的&lt;em&gt;智能类型转换&lt;/em&gt;工作&lt;a href=&quot;control-flow#when-expression&quot;&gt;&lt;em&gt;时&lt;/em&gt; -expressions&lt;/a&gt;并&lt;a href=&quot;control-flow#while-loops&quot;&gt;&lt;em&gt;同时&lt;/em&gt; -loops&lt;/a&gt;还有：</target>
        </trans-unit>
        <trans-unit id="a6ca684a14efd3b57eb8a5d3ba3348ea50581bab" translate="yes" xml:space="preserve">
          <source>Such a chain returns &lt;em&gt;null&lt;/em&gt; if any of the properties in it is null.</source>
          <target state="translated">这样的链返回&lt;em&gt;空&lt;/em&gt;如果任何在它的属性是空的。</target>
        </trans-unit>
        <trans-unit id="7f52975c732e28d7449a1d2bd849f22d7254ffe5" translate="yes" xml:space="preserve">
          <source>Such a dependency can be included in a Podfile of an Xcode project and automatically built (and rebuilt) along with this project. As a result, importing to Xcode is simplified since there is no need to write corresponding Gradle tasks and Xcode build steps manually.</source>
          <target state="translated">这样的依赖关系可以被包含在Xcode项目的Podfile中,并与这个项目一起自动构建(和重建)。因此,导入到Xcode中的过程被简化了,因为不需要手动编写相应的Gradle任务和Xcode构建步骤。</target>
        </trans-unit>
        <trans-unit id="275498570896fad34600eda0578ce2760eeaa8db" translate="yes" xml:space="preserve">
          <source>Such annotation type should itself be annotated with both &lt;code&gt;@Nonnull&lt;/code&gt; (or its nickname) and &lt;code&gt;@TypeQualifierDefault(...)&lt;/code&gt; with one or more &lt;code&gt;ElementType&lt;/code&gt; values:</source>
          <target state="translated">此类注释类型本身应同时使用具有一个或多个 &lt;code&gt;ElementType&lt;/code&gt; 值的 &lt;code&gt;@Nonnull&lt;/code&gt; （或其昵称）和 &lt;code&gt;@TypeQualifierDefault(...)&lt;/code&gt; 进行注释：</target>
        </trans-unit>
        <trans-unit id="54a890751d7cb69dc2bb8082fffc6f90e74cda3e" translate="yes" xml:space="preserve">
          <source>Such common behaviours can be implemented as libraries using &lt;a href=&quot;delegated-properties&quot;&gt;&lt;em&gt;delegated properties&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">可以使用&lt;a href=&quot;delegated-properties&quot;&gt;&lt;em&gt;委托属性&lt;/em&gt;&lt;/a&gt;将此类常见行为实现为库。</target>
        </trans-unit>
        <trans-unit id="71a7fa20221b612c2534c0cd56321d47af321a0e" translate="yes" xml:space="preserve">
          <source>Such objects can have supertypes:</source>
          <target state="translated">这种对象可以有超类型。</target>
        </trans-unit>
        <trans-unit id="70d2b2ed000c8ab8416a2925902564c1eda90b74" translate="yes" xml:space="preserve">
          <source>Such properties can be used in annotations:</source>
          <target state="translated">这种属性可以用在注释中。</target>
        </trans-unit>
        <trans-unit id="c1071ef3c60cf8dd3c256721ed0bebfd0d5200f8" translate="yes" xml:space="preserve">
          <source>Such returns (located in a lambda, but exiting the enclosing function) are called &lt;em&gt;non-local&lt;/em&gt; returns. We are used to this sort of construct in loops, which inline functions often enclose:</source>
          <target state="translated">这样的返回（位于lambda中，但退出封闭函数）称为&lt;em&gt;非本地&lt;/em&gt;返回。我们习惯于循环中的这种构造，内联函数通常包含以下内容：</target>
        </trans-unit>
        <trans-unit id="10e6aa90785a792cb60500d5818fa4c115ff47c4" translate="yes" xml:space="preserve">
          <source>Such syntax is also known as &lt;em&gt;trailing lambda&lt;/em&gt;.</source>
          <target state="translated">这种语法也称为&lt;em&gt;尾随lambda&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c8895d425ddb898eb0386c82032007c2c016e5af" translate="yes" xml:space="preserve">
          <source>Suffix to use for generated JavaScript files</source>
          <target state="translated">用于生成JavaScript文件的后缀</target>
        </trans-unit>
        <trans-unit id="f20596f60d75184baac457dd39dfe5dbb7c92170" translate="yes" xml:space="preserve">
          <source>Suggested documentation pages:</source>
          <target state="translated">建议的文件页:</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="efddb0d943663d3990ff15feb5144465e26709a1" translate="yes" xml:space="preserve">
          <source>Superclass for all platform classes representing numeric values.</source>
          <target state="translated">所有代表数值的平台类的超级类。</target>
        </trans-unit>
        <trans-unit id="d57120c39b452641752cec548eba58dfe0d997dc" translate="yes" xml:space="preserve">
          <source>Supervision</source>
          <target state="translated">Supervision</target>
        </trans-unit>
        <trans-unit id="e8ca95dbcc7178511d7c5a9727cb4e64cd2491c0" translate="yes" xml:space="preserve">
          <source>Supervision job</source>
          <target state="translated">监督工作</target>
        </trans-unit>
        <trans-unit id="b540bbae2b6598d9471d4e821a9a3c9f224811ce" translate="yes" xml:space="preserve">
          <source>Supervision scope</source>
          <target state="translated">监督范围</target>
        </trans-unit>
        <trans-unit id="44228bb9b805267096502663a9f60eebe9337369" translate="yes" xml:space="preserve">
          <source>Support for ::foo as a shorthand for this::foo</source>
          <target state="translated">支持将::foo作为this::foo的简写。</target>
        </trans-unit>
        <trans-unit id="d0c2aa432d624e03bde70166d9514ff6ad1db88d" translate="yes" xml:space="preserve">
          <source>Support for Kotlin&amp;rsquo;s suspending functions in Swift and Objective-C</source>
          <target state="translated">在Swift和Objective-C中支持Kotlin的暂停功能</target>
        </trans-unit>
        <trans-unit id="3ec47f1fa2e89d008f80cdf4b7103a20c0dbe0dc" translate="yes" xml:space="preserve">
          <source>Support for multiplatform programming is one of Kotlin&amp;rsquo;s key benefits. It reduces time spent writing and maintaining the same code for &lt;a href=&quot;mpp-supported-platforms&quot;&gt;different platforms&lt;/a&gt; while retaining the flexibility and benefits of native programming.</source>
          <target state="translated">支持多平台编程是Kotlin的主要优势之一。它减少了为&lt;a href=&quot;mpp-supported-platforms&quot;&gt;不同平台&lt;/a&gt;编写和维护相同代码所花费的时间，同时保留了本机编程的灵活性和优势。</target>
        </trans-unit>
        <trans-unit id="3339940e3b4d1b2f1f63ae89bd72c8651f6235d4" translate="yes" xml:space="preserve">
          <source>Support for multiplatform programming is one of Kotlin&amp;rsquo;s key benefits. It reduces time spent writing and maintaining the same code for &lt;a href=&quot;mpp-supported-platforms&quot;&gt;different platforms&lt;/a&gt; while retaining the flexibility and benefits of native programming. Learn more about &lt;a href=&quot;multiplatform&quot;&gt;Kotlin Mutliplatform benefits&lt;/a&gt;.</source>
          <target state="translated">支持多平台编程是Kotlin的主要优势之一。它减少了为&lt;a href=&quot;mpp-supported-platforms&quot;&gt;不同平台&lt;/a&gt;编写和维护相同代码所花费的时间，同时保留了本机编程的灵活性和优势。了解有关&lt;a href=&quot;multiplatform&quot;&gt;Kotlin Mutliplatform好处的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit id="11eb86f80e9c513cd771118d273f03b644cc87fb" translate="yes" xml:space="preserve">
          <source>Support for suspending functions in Swift and Objective-C</source>
          <target state="translated">支持在Swift和Objective-C中暂停函数。</target>
        </trans-unit>
        <trans-unit id="34c6c2ddc426343eed559ce47d4c777df69eba0c" translate="yes" xml:space="preserve">
          <source>Supported platforms</source>
          <target state="translated">支持的平台</target>
        </trans-unit>
        <trans-unit id="9794d24ec85271049a86498f820c37d015564882" translate="yes" xml:space="preserve">
          <source>Supported types</source>
          <target state="translated">支持的类型</target>
        </trans-unit>
        <trans-unit id="93c79b3f7d0d1a76067ccba45bb58d73cfe3316b" translate="yes" xml:space="preserve">
          <source>Suppose there is a Java method that accepts an int array of indices:</source>
          <target state="translated">假设有一个Java方法可以接受一个int数组的索引。</target>
        </trans-unit>
        <trans-unit id="0ca1c820ac8164eb818371a319e5876b522328ee" translate="yes" xml:space="preserve">
          <source>Suppose we have a generic interface &lt;code&gt;Source&amp;lt;T&amp;gt;&lt;/code&gt; that does not have any methods that take &lt;code&gt;T&lt;/code&gt; as a parameter, only methods that return &lt;code&gt;T&lt;/code&gt;:</source>
          <target state="translated">假设我们有一个通用接口 &lt;code&gt;Source&amp;lt;T&amp;gt;&lt;/code&gt; ，它没有任何将 &lt;code&gt;T&lt;/code&gt; 作为参数的方法，只有返回 &lt;code&gt;T&lt;/code&gt; 的方法：</target>
        </trans-unit>
        <trans-unit id="d81855372fef77a8319ba3320877e631faefc705" translate="yes" xml:space="preserve">
          <source>Suppress</source>
          <target state="translated">Suppress</target>
        </trans-unit>
        <trans-unit id="74302714c32993ab6719979e3d35b0886ae84527" translate="yes" xml:space="preserve">
          <source>Suppress the compiler from displaying warnings during compilation.</source>
          <target state="translated">禁止编译器在编译过程中显示警告。</target>
        </trans-unit>
        <trans-unit id="f4bf603e39de5fe14652ee5e4d5bffe13ebca851" translate="yes" xml:space="preserve">
          <source>Suppresses all compilation warnings</source>
          <target state="translated">抑制所有的编译警告</target>
        </trans-unit>
        <trans-unit id="c08ada99a3ce33d336392fa9e2fcc77dd914f220" translate="yes" xml:space="preserve">
          <source>Suppresses errors about variance conflict</source>
          <target state="translated">抑制关于方差冲突的错误</target>
        </trans-unit>
        <trans-unit id="826a3782b77dd21352e84fb444cfe49b2d3d41ba" translate="yes" xml:space="preserve">
          <source>Suppresses the given compilation warnings in the annotated element.</source>
          <target state="translated">抑制注释元素中的编译警告。</target>
        </trans-unit>
        <trans-unit id="69d0f54516180fa102c2933686469dcb8fed1c6f" translate="yes" xml:space="preserve">
          <source>Surrogate pairs included in this string builder are treated as single characters. Therefore, the order of the high-low surrogates is never reversed.</source>
          <target state="translated">包含在此字符串生成器中的代用对被视为单个字符。因此,高低代词的顺序永远不会颠倒。</target>
        </trans-unit>
        <trans-unit id="241d3fdbd44869e2a574d1386aad409e5e0ea8ca" translate="yes" xml:space="preserve">
          <source>Suspend conversion on callable references</source>
          <target state="translated">暂停对可调用引用的转换</target>
        </trans-unit>
        <trans-unit id="52d7c5ec374713f5f37d91138c052ccbb60ec732" translate="yes" xml:space="preserve">
          <source>Suspend functions are only allowed to be called from a coroutine or another suspend function</source>
          <target state="translated">暂停函数只允许从一个coroutine或另一个暂停函数中调用。</target>
        </trans-unit>
        <trans-unit id="ac8b279c6a3c1f3871f1125cc1498ab1f6a88def" translate="yes" xml:space="preserve">
          <source>SuspendFunction</source>
          <target state="translated">SuspendFunction</target>
        </trans-unit>
        <trans-unit id="ec4005f130005e7ee3fe9eb28e0b27154a02ee0d" translate="yes" xml:space="preserve">
          <source>Suspending functions</source>
          <target state="translated">暂停职能</target>
        </trans-unit>
        <trans-unit id="d52d9b4f1f762df95c3f2692f128dbd79352b8e8" translate="yes" xml:space="preserve">
          <source>Svetlana Isakova</source>
          <target state="translated">Svetlana Isakova</target>
        </trans-unit>
        <trans-unit id="e1b1187bdbb9c730f8014294b12fac3d0e7be01a" translate="yes" xml:space="preserve">
          <source>Swapping two variables</source>
          <target state="translated">交换两个变量</target>
        </trans-unit>
        <trans-unit id="112ab020698e5fc0f4baecd7821a512d8c419a69" translate="yes" xml:space="preserve">
          <source>Swift</source>
          <target state="translated">Swift</target>
        </trans-unit>
        <trans-unit id="a8109bd32e0a5f6c183b77a63fe28e74ded3e304" translate="yes" xml:space="preserve">
          <source>Swift via Objective-C</source>
          <target state="translated">通过Objective-C的Swift</target>
        </trans-unit>
        <trans-unit id="11e426a93e6bdc30eee83310a54fe55623d59394" translate="yes" xml:space="preserve">
          <source>Swift/Objective-C classes and protocols can be subclassed with a Kotlin &lt;code&gt;final&lt;/code&gt; class. Non-&lt;code&gt;final&lt;/code&gt; Kotlin classes inheriting Swift/Objective-C types aren't supported yet, so it is not possible to declare a complex class hierarchy inheriting Swift/Objective-C types.</source>
          <target state="translated">Swift / Objective-C类和协议可以用Kotlin &lt;code&gt;final&lt;/code&gt; 类继承。目前尚不支持继承Swift / Objective-C类型的非 &lt;code&gt;final&lt;/code&gt; Kotlin类，因此无法声明继承Swift / Objective-C类型的复杂类层次结构。</target>
        </trans-unit>
        <trans-unit id="f62b613e64a0b39b8f91de500961ddd372e2c85a" translate="yes" xml:space="preserve">
          <source>Swift/Objective-C initializers are imported to Kotlin as constructors and factory methods named &lt;code&gt;create&lt;/code&gt;. The latter happens with initializers declared in the Objective-C category or as a Swift extension, because Kotlin has no concept of extension constructors.</source>
          <target state="translated">Swift / Objective-C初始化程序作为构造函数和名为 &lt;code&gt;create&lt;/code&gt; 的工厂方法导入Kotlin 。后者发生在Objective-C类别中声明的初始化程序或Swift扩展中，因为Kotlin没有扩展构造函数的概念。</target>
        </trans-unit>
        <trans-unit id="9d575759176a53333f2c52896d12c38987eec991" translate="yes" xml:space="preserve">
          <source>Swift/Objective-C interop</source>
          <target state="translated">Swift/Objective-C互操作</target>
        </trans-unit>
        <trans-unit id="99720ddc441c1bfb4d0affa1772914ca5ac04545" translate="yes" xml:space="preserve">
          <source>Switch over a channel of deferred values</source>
          <target state="translated">切换一个递延值的通道</target>
        </trans-unit>
        <trans-unit id="13fd4750b81466d157a12fc10d9a852e2caf99fa" translate="yes" xml:space="preserve">
          <source>Switch to the default formatting and make it consistent with Kotlin Coding Conventions in Kotlin 1.4</source>
          <target state="translated">切换到默认格式,并使其与Kotlin 1.4中的Kotlin编码约定一致。</target>
        </trans-unit>
        <trans-unit id="61aa80a32f7f719d3326e90ee95ac7477fe0603f" translate="yes" xml:space="preserve">
          <source>Switching to the Kotlin Coding Conventions code style can be done in &lt;code&gt;Settings &amp;rarr; Editor &amp;rarr; Code Style &amp;rarr; Kotlin&lt;/code&gt; dialog. Switch scheme to &lt;em&gt;Project&lt;/em&gt; and activate &lt;code&gt;Set from... &amp;rarr; Predefined Style &amp;rarr; Kotlin Style Guide&lt;/code&gt;.</source>
          <target state="translated">可以在 &lt;code&gt;Settings &amp;rarr; Editor &amp;rarr; Code Style &amp;rarr; Kotlin&lt;/code&gt; 对话框中切换到Kotlin编码约定代码样式。将方案切换到&lt;em&gt;Project&lt;/em&gt;并 &lt;code&gt;Set from... &amp;rarr; Predefined Style &amp;rarr; Kotlin Style Guide&lt;/code&gt; 激活Set&amp;rarr;预定义样式&amp;rarr;Kotlin样式指南。</target>
        </trans-unit>
        <trans-unit id="ce89d26b5b915bdbefeba3e3c1002ad16cf04461" translate="yes" xml:space="preserve">
          <source>SymbolName</source>
          <target state="translated">SymbolName</target>
        </trans-unit>
        <trans-unit id="b5a48d180aa190202bff35b0da6dd98c6f55f41a" translate="yes" xml:space="preserve">
          <source>Symbolicating iOS crash reports</source>
          <target state="translated">符号化的iOS崩溃报告</target>
        </trans-unit>
        <trans-unit id="1c380083ceced1c7e8bbc5bd15ca13f7adc39f96" translate="yes" xml:space="preserve">
          <source>Symmetric: for any non-null values &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;x.equals(y)&lt;/code&gt; should return true if and only if &lt;code&gt;y.equals(x)&lt;/code&gt; returns true.</source>
          <target state="translated">对称：对于 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的任何非空值，当且仅当 &lt;code&gt;y.equals(x)&lt;/code&gt; 返回true时， &lt;code&gt;x.equals(y)&lt;/code&gt; 才返回true。</target>
        </trans-unit>
        <trans-unit id="c195e4374c85d74cc43f4f08a33d51e3c51b4cfd" translate="yes" xml:space="preserve">
          <source>Synchronized</source>
          <target state="translated">Synchronized</target>
        </trans-unit>
        <trans-unit id="60526f7fe57071fddf6bf31004eca244e13fd625" translate="yes" xml:space="preserve">
          <source>Synthetic targets become inaccessible for Java sources at compile time while still being accessible for Kotlin sources. Marking target as synthetic is a binary compatible change, already compiled Java code will be able to access such target.</source>
          <target state="translated">合成目标在编译时对Java源无法访问,但对Kotlin源仍可访问。将目标标记为合成目标是一个二进制兼容的变化,已经编译的Java代码将能够访问这样的目标。</target>
        </trans-unit>
        <trans-unit id="8426ac9483ef9329287d13cda6dbc5c5b8457b87" translate="yes" xml:space="preserve">
          <source>System-related utility functions.</source>
          <target state="translated">系统相关的实用功能。</target>
        </trans-unit>
        <trans-unit id="7acd3724fef694b5c77a8242b8933516bfe3f06a" translate="yes" xml:space="preserve">
          <source>TERMINATE</source>
          <target state="translated">TERMINATE</target>
        </trans-unit>
        <trans-unit id="c2024afdc51720a7b9f26bd798eeb6515dee141f" translate="yes" xml:space="preserve">
          <source>THROWN</source>
          <target state="translated">THROWN</target>
        </trans-unit>
        <trans-unit id="aec59fbfc2f6181875490fd78c020230f3b1b1f7" translate="yes" xml:space="preserve">
          <source>TITLECASE_LETTER</source>
          <target state="translated">TITLECASE_LETTER</target>
        </trans-unit>
        <trans-unit id="b698c11e84460ed5999bfeb5cbf25b865c238f3c" translate="yes" xml:space="preserve">
          <source>TODO</source>
          <target state="translated">TODO</target>
        </trans-unit>
        <trans-unit id="6a05d02b340471018c943f805ab7f1309856273e" translate="yes" xml:space="preserve">
          <source>TODO(): Marking code as incomplete</source>
          <target state="translated">TODO():将代码标记为不完整</target>
        </trans-unit>
        <trans-unit id="3a36be7757d53df34ffbc16215cd6f9cfdd93b80" translate="yes" xml:space="preserve">
          <source>TODO: changing symbol name breaks the binary compatibility, so it should probably be allowed on &lt;code&gt;internal&lt;/code&gt; and &lt;code&gt;private&lt;/code&gt; functions only.</source>
          <target state="translated">TODO：更改符号名称会破坏二进制兼容性，因此可能只应在 &lt;code&gt;internal&lt;/code&gt; 函数和 &lt;code&gt;private&lt;/code&gt; 函数上允许它。</target>
        </trans-unit>
        <trans-unit id="f3830d7277fcff42c992ea836b9ff28598687e08" translate="yes" xml:space="preserve">
          <source>TODO: consider providing an adapter instead of subtyping &lt;a href=&quot;../-c-values/index&quot;&gt;CValues&lt;/a&gt;.</source>
          <target state="translated">待办事项：考虑提供适配器而不是对&lt;a href=&quot;../-c-values/index&quot;&gt;CValues&lt;/a&gt;进行子类型化。</target>
        </trans-unit>
        <trans-unit id="40b96366fe4fb7eb04dbdc7b2c5d704e03c38057" translate="yes" xml:space="preserve">
          <source>TODO: the behavior of &lt;a href=&quot;../../kotlin/-any/equals#kotlin.Any%24equals%28kotlin.Any%29&quot;&gt;equals&lt;/a&gt;, &lt;a href=&quot;../../kotlin/-any/hash-code#kotlin.Any%24hashCode%28%29&quot;&gt;hashCode&lt;/a&gt; and &lt;a href=&quot;../../kotlin/-any/to-string#kotlin.Any%24toString%28%29&quot;&gt;toString&lt;/a&gt; differs on Native and JVM backends.</source>
          <target state="translated">TODO：&lt;a href=&quot;../../kotlin/-any/equals#kotlin.Any%24equals%28kotlin.Any%29&quot;&gt;equals&lt;/a&gt;，&lt;a href=&quot;../../kotlin/-any/hash-code#kotlin.Any%24hashCode%28%29&quot;&gt;hashCode&lt;/a&gt;和&lt;a href=&quot;../../kotlin/-any/to-string#kotlin.Any%24toString%28%29&quot;&gt;toString&lt;/a&gt;的行为在本机和JVM后端上有所不同。</target>
        </trans-unit>
        <trans-unit id="b0e3df42ab82e6e186c0a86de01f03cd58ed5da4" translate="yes" xml:space="preserve">
          <source>TODO: the behavior of &lt;a href=&quot;../../kotlin/-any/equals#kotlin.Any%24equals(kotlin.Any?)&quot;&gt;equals&lt;/a&gt;, &lt;a href=&quot;../../kotlin/-any/hash-code#kotlin.Any%24hashCode()&quot;&gt;hashCode&lt;/a&gt; and &lt;a href=&quot;../../kotlin/-any/to-string#kotlin.Any%24toString()&quot;&gt;toString&lt;/a&gt; differs on Native and JVM backends.</source>
          <target state="translated">TODO：&lt;a href=&quot;../../kotlin/-any/equals#kotlin.Any%24equals(kotlin.Any?)&quot;&gt;equals&lt;/a&gt;，&lt;a href=&quot;../../kotlin/-any/hash-code#kotlin.Any%24hashCode()&quot;&gt;hashCode&lt;/a&gt;和&lt;a href=&quot;../../kotlin/-any/to-string#kotlin.Any%24toString()&quot;&gt;toString&lt;/a&gt;的行为在本机和JVM后端上有所不同。</target>
        </trans-unit>
        <trans-unit id="aa57ca5da1542535d6e595c72a1049dfaa72214c" translate="yes" xml:space="preserve">
          <source>TOP_DOWN</source>
          <target state="translated">TOP_DOWN</target>
        </trans-unit>
        <trans-unit id="3fd18045f2522bb120b4e3ac843fcede30d5c942" translate="yes" xml:space="preserve">
          <source>TVOS</source>
          <target state="translated">TVOS</target>
        </trans-unit>
        <trans-unit id="6e9816a8e9d0388eecdb52866188c04e75e4b1b3" translate="yes" xml:space="preserve">
          <source>TYPE</source>
          <target state="translated">TYPE</target>
        </trans-unit>
        <trans-unit id="4f8e3ef2be07081eed30f4f241b8f6079253452d" translate="yes" xml:space="preserve">
          <source>TYPEALIAS</source>
          <target state="translated">TYPEALIAS</target>
        </trans-unit>
        <trans-unit id="74c2ff3e02a8146aa670c1188095f748d0498a87" translate="yes" xml:space="preserve">
          <source>TYPE_PARAMETER</source>
          <target state="translated">TYPE_PARAMETER</target>
        </trans-unit>
        <trans-unit id="9730d4326a7b8a0d13c2be3b7fe29b80ad152bf6" translate="yes" xml:space="preserve">
          <source>Table of Contents</source>
          <target state="translated">目录</target>
        </trans-unit>
        <trans-unit id="1a428989bd13dceabd89b698d9fa38eb8a0d175c" translate="yes" xml:space="preserve">
          <source>Table of contents</source>
          <target state="translated">目录</target>
        </trans-unit>
        <trans-unit id="321de0ab2873c1406451b4e621fed413b6b2ab1e" translate="yes" xml:space="preserve">
          <source>Tail recursive functions</source>
          <target state="translated">尾部递归函数</target>
        </trans-unit>
        <trans-unit id="2371ab50da6b9db0aea83641cb8925e9710f7c92" translate="yes" xml:space="preserve">
          <source>Take a look at the &lt;a href=&quot;https://www.jetbrains.com/help/education/learner-start-guide.html?section=Kotlin%20Koans&quot;&gt;Learner Start Guide&lt;/a&gt;, which will get you started with the Kotlin Koans course inside IntelliJ IDEA. Solve interactive coding challenges and get instant feedback right inside the IDE.</source>
          <target state="translated">请参阅&amp;ldquo;&lt;a href=&quot;https://www.jetbrains.com/help/education/learner-start-guide.html?section=Kotlin%20Koans&quot;&gt;学习者入门指南&amp;rdquo;&lt;/a&gt;，它可以帮助您开始使用IntelliJ IDEA中的Kotlin Koans课程。解决交互式编码难题，并在IDE内部获得即时反馈。</target>
        </trans-unit>
        <trans-unit id="20fa48deb639df41368610d6983f2e95bc62d9b3" translate="yes" xml:space="preserve">
          <source>Take a look at the behavior of the following code:</source>
          <target state="translated">看看以下代码的行为。</target>
        </trans-unit>
        <trans-unit id="a34ab8557ec6518d7eec439be4e5bcf534a63994" translate="yes" xml:space="preserve">
          <source>Take and drop</source>
          <target state="translated">取放</target>
        </trans-unit>
        <trans-unit id="1bbdcf12e57848561b81b3650e41362a19702c6a" translate="yes" xml:space="preserve">
          <source>Take for instance the following code</source>
          <target state="translated">以下面的代码为例</target>
        </trans-unit>
        <trans-unit id="ffc4d467faa7814fe0541133e507fd8deafa41f3" translate="yes" xml:space="preserve">
          <source>Taking the above into account, given the following code (module name is &lt;code&gt;ConsoleOutput&lt;/code&gt;)</source>
          <target state="translated">考虑到上述情况，给出以下代码（模块名称为 &lt;code&gt;ConsoleOutput&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="61ad50a9b9189cc3cf1874568e35e7901ff4c982" translate="yes" xml:space="preserve">
          <source>Target</source>
          <target state="translated">Target</target>
        </trans-unit>
        <trans-unit id="e9c2cc44a1648fab93dfd7f8478951978cee81a6" translate="yes" xml:space="preserve">
          <source>Target Platforms</source>
          <target state="translated">目标平台</target>
        </trans-unit>
        <trans-unit id="196bafdadde82557d2b0566cbef9ba6c0b94014c" translate="yes" xml:space="preserve">
          <source>Target platform</source>
          <target state="translated">目标平台</target>
        </trans-unit>
        <trans-unit id="2c6651b7aa08a8550dea113571107b0c864ada23" translate="yes" xml:space="preserve">
          <source>Target platform/device</source>
          <target state="translated">目标平台/设备</target>
        </trans-unit>
        <trans-unit id="5197bbeee2aa4c81ab6b87af3427661b2367d52b" translate="yes" xml:space="preserve">
          <source>Target preset</source>
          <target state="translated">目标预设</target>
        </trans-unit>
        <trans-unit id="b90d4eb8add71df31b69f210f7236efcc439a9ed" translate="yes" xml:space="preserve">
          <source>Target shortcut</source>
          <target state="translated">目标快捷方式</target>
        </trans-unit>
        <trans-unit id="77c4c4b87221968bd3a3894fe9c81710e28b33b7" translate="yes" xml:space="preserve">
          <source>Target version of the generated JVM bytecode</source>
          <target state="translated">生成的JVM字节码的目标版本。</target>
        </trans-unit>
        <trans-unit id="b55ed86e9766080d6e500a070b6fef6b1986cd3f" translate="yes" xml:space="preserve">
          <source>Target version of the generated JVM bytecode (1.6, 1.8, 9, 10, 11 or 12), default is 1.6</source>
          <target state="translated">生成的JVM字节码的目标版本(1.6、1.8、9、10、11或12),默认为1.6。</target>
        </trans-unit>
        <trans-unit id="acb25c0cc9a94dfbf771ed70c544df0ff7fb25cc" translate="yes" xml:space="preserve">
          <source>Target-specific configuration.</source>
          <target state="translated">特定目标配置。</target>
        </trans-unit>
        <trans-unit id="b9f79302140e02579ecf20feab5f4ed0599b5178" translate="yes" xml:space="preserve">
          <source>Target-specific options, only applicable to the certain target can be specified as well, such as</source>
          <target state="translated">也可以指定特定目标的选项,只适用于特定目标,如</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
