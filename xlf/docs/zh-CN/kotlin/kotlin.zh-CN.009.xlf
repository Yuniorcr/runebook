<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="kotlin">
    <body>
      <group id="kotlin">
        <trans-unit id="a123d5c22ab2a54bb2467057b241dc254d99292a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;length&lt;/code&gt; - the length of the substring to compare.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; -子字符串的长度进行比较。</target>
        </trans-unit>
        <trans-unit id="d9cc168ae9309d396e193854fa2e497d466b8aa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;length&lt;/code&gt; - the number of bytes to be converted.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; -的字节数进行转换。</target>
        </trans-unit>
        <trans-unit id="e551de8b7f6a686a65bd70d06d97e7a7c117cbbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt; can be used to invoke one or more functions on results of call chains. For example, the following code prints the results of two operations on a collection:</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; 可以用于在调用链的结果上调用一个或多个函数。例如，以下代码在集合上打印两个操作的结果：</target>
        </trans-unit>
        <trans-unit id="fe705198c64b22461a258c472dd254519e542ea4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt; is often used for executing a code block only with non-null values. To perform actions on a non-null object, use the safe call operator &lt;code&gt;?.&lt;/code&gt; on it and call &lt;code&gt;let&lt;/code&gt; with the actions in its lambda.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; 通常用于仅使用非空值执行代码块。要对非空对象执行操作，请使用安全调用运算符 &lt;code&gt;?.&lt;/code&gt; 对其进行调用，并 &lt;code&gt;let&lt;/code&gt; 执行lambda中的操作。</target>
        </trans-unit>
        <trans-unit id="f39dab5586b77abb09839bb50cf60ada67479e37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt;, &lt;code&gt;run&lt;/code&gt;, and &lt;code&gt;with&lt;/code&gt; return the lambda result.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; ， &lt;code&gt;run&lt;/code&gt; 和 &lt;code&gt;with&lt;/code&gt; 一起返回lambda结果。</target>
        </trans-unit>
        <trans-unit id="dc178cbf3d417c488cd76dd0ba0df9c30201e6a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt;, &lt;code&gt;run&lt;/code&gt;, and &lt;code&gt;with&lt;/code&gt; return the lambda result. So, you can use them when assigning the result to a variable, chaining operations on the result, and so on.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; ， &lt;code&gt;run&lt;/code&gt; 和 &lt;code&gt;with&lt;/code&gt; 一起返回lambda结果。因此，在将结果分配给变量，对结果进行链接操作等时，可以使用它们。</target>
        </trans-unit>
        <trans-unit id="6540140321404c7beb48cb8d41c1d076d0ad9902" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;level&lt;/code&gt; - Specifies how the deprecated element usages are reported in code. See the &lt;a href=&quot;../-deprecation-level/index#kotlin.DeprecationLevel&quot;&gt;DeprecationLevel&lt;/a&gt; enum for the possible values.</source>
          <target state="translated">&lt;code&gt;level&lt;/code&gt; -指定如何在代码中报告已弃用的元素使用情况。有关可能的值，请参见&lt;a href=&quot;../-deprecation-level/index#kotlin.DeprecationLevel&quot;&gt;DeprecationLevel&lt;/a&gt;枚举。</target>
        </trans-unit>
        <trans-unit id="c1aa4f17deacdd41978e56473711d8a7316afef5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;level&lt;/code&gt; - specifies how usages of API without an explicit opt-in are reported in code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52f5c62d7318037ef9d40f8fdaba593bc1b0344" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;limit&lt;/code&gt; -</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; -</target>
        </trans-unit>
        <trans-unit id="208df0bf5d40aa3cae90380f2554f8371ca7e880" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;limit&lt;/code&gt; - Non-negative value specifying the maximum number of substrings the string can be split to. Zero by default means no limit is set.</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; -非负值，指定可将字符串拆分为的最大子字符串数。默认情况下为零表示未设置限制。</target>
        </trans-unit>
        <trans-unit id="d06bb1e204b58f4ad96b54b0bcd05a20c0a7ddae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;limit&lt;/code&gt; - Non-negative value specifying the maximum number of substrings to return. Zero by default means no limit is set.</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; -非负值，指定要返回的最大子字符串数。默认情况下为零表示未设置限制。</target>
        </trans-unit>
        <trans-unit id="185232970a0ccd48f8d36fc01a8b97c7d74a583f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;limit&lt;/code&gt; - The maximum number of substrings to return.</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; -子返回的最大数量。</target>
        </trans-unit>
        <trans-unit id="996cb31faa7091a408533c92f1605440669d6c82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;linuxArm32Hfp&lt;/code&gt;, &lt;code&gt;linuxMips32&lt;/code&gt;, &lt;code&gt;linuxMipsel32&lt;/code&gt;, &lt;code&gt;linuxX64&lt;/code&gt; for Linux;</source>
          <target state="translated">&lt;code&gt;linuxArm32Hfp&lt;/code&gt; ， &lt;code&gt;linuxMips32&lt;/code&gt; ， &lt;code&gt;linuxMipsel32&lt;/code&gt; ， &lt;code&gt;linuxX64&lt;/code&gt; (适用于Linux）；</target>
        </trans-unit>
        <trans-unit id="ff09e5db03575c9e7db3bac0a7e9d88e289977c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;linuxArm64&lt;/code&gt;, &lt;code&gt;linuxArm32Hfp&lt;/code&gt;, &lt;code&gt;linuxMips32&lt;/code&gt;, &lt;code&gt;linuxMipsel32&lt;/code&gt;, &lt;code&gt;linuxX64&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eaf9b61690a4c5efc748e6664d0249c907fc836" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ln(+Inf)&lt;/code&gt; is &lt;code&gt;+Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ln(+Inf)&lt;/code&gt; 是 &lt;code&gt;+Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="252e73347a18f8bb8350262b3bd9c8566aec27e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ln(0.0)&lt;/code&gt; is &lt;code&gt;-Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ln(0.0)&lt;/code&gt; 是 &lt;code&gt;-Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2593060e4a854271ebc6ff65b6483ed85aca28ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ln(NaN)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ln(NaN)&lt;/code&gt; 是 &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b8895ee0a78645b4b9c622865b5b229403169b21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ln(x)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; when &lt;code&gt;x &amp;lt; 0.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ln(x)&lt;/code&gt; 当 &lt;code&gt;x &amp;lt; 0.0&lt;/code&gt; 时ln（x）为 &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d32e977cf0dd497316b051e4c5a4d1b8c1668dcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ln1p(+Inf)&lt;/code&gt; is &lt;code&gt;+Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ln1p(+Inf)&lt;/code&gt; 是 &lt;code&gt;+Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="453056e570960655e4d47d15bb3b675fe54808db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ln1p(-1.0)&lt;/code&gt; is &lt;code&gt;-Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ln1p(-1.0)&lt;/code&gt; 是 &lt;code&gt;-Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b4702bf0ad629b7d81ff384b1a72af88f6eb0a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ln1p(NaN)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ln1p(NaN)&lt;/code&gt; 是 &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3cc8921af2631a539159df90811cad409ebb4c73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ln1p(x)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; where &lt;code&gt;x &amp;lt; -1.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ln1p(x)&lt;/code&gt; 是 &lt;code&gt;NaN&lt;/code&gt; ，其中 &lt;code&gt;x &amp;lt; -1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f18babb62aef788b1e852582f82afe6752be400" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loadFactor&lt;/code&gt; - the load factor (ignored)</source>
          <target state="translated">&lt;code&gt;loadFactor&lt;/code&gt; -负载系数（忽略）</target>
        </trans-unit>
        <trans-unit id="f0659f8f29af75053650a20bee7d9878080e5c9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log(+Inf, +Inf)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;log(+Inf, +Inf)&lt;/code&gt; 为 &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f9fcf4db999d97d7d238b1872e876501b301349" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log(+Inf, b)&lt;/code&gt; is &lt;code&gt;+Inf&lt;/code&gt; for &lt;code&gt;b &amp;gt; 1&lt;/code&gt; and &lt;code&gt;-Inf&lt;/code&gt; for &lt;code&gt;b &amp;lt; 1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;log(+Inf, b)&lt;/code&gt; 是 &lt;code&gt;+Inf&lt;/code&gt; 文件为 &lt;code&gt;b &amp;gt; 1&lt;/code&gt; 和 &lt;code&gt;-Inf&lt;/code&gt; 为 &lt;code&gt;b &amp;lt; 1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4bcb4d7205bbda0cca1f7fe9d0e18f4c91575924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log(0.0, b)&lt;/code&gt; is &lt;code&gt;-Inf&lt;/code&gt; for &lt;code&gt;b &amp;gt; 1&lt;/code&gt; and &lt;code&gt;+Inf&lt;/code&gt; for &lt;code&gt;b &amp;gt; 1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;log(0.0, b)&lt;/code&gt; 是 &lt;code&gt;-Inf&lt;/code&gt; 为 &lt;code&gt;b &amp;gt; 1&lt;/code&gt; 和 &lt;code&gt;+Inf&lt;/code&gt; 文件为 &lt;code&gt;b &amp;gt; 1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9bf6a10920924469889cc579295db4bd6dabf9b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log(x, b)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; if either &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;log(x, b)&lt;/code&gt; 是 &lt;code&gt;NaN&lt;/code&gt; 如果任一 &lt;code&gt;x&lt;/code&gt; 或 &lt;code&gt;b&lt;/code&gt; 是 &lt;code&gt;NaN&lt;/code&gt; 的</target>
        </trans-unit>
        <trans-unit id="48b7bfd0270001a14346785eb0b107e7ec23af52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log(x, b)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; when &lt;code&gt;x &amp;lt; 0&lt;/code&gt; or &lt;code&gt;b &amp;lt;= 0&lt;/code&gt; or &lt;code&gt;b == 1.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;log(x, b)&lt;/code&gt; 当 &lt;code&gt;x &amp;lt; 0&lt;/code&gt; 或 &lt;code&gt;b &amp;lt;= 0&lt;/code&gt; 或 &lt;code&gt;b == 1.0&lt;/code&gt; 时，log（x，b）为 &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3a17174ddefa3c240ec9b5428c4a695f7b64287" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;macosX64&lt;/code&gt; for MacOS;</source>
          <target state="translated">&lt;code&gt;macosX64&lt;/code&gt; 于MacOS的macosX64 ;</target>
        </trans-unit>
        <trans-unit id="dbeb272e7f89ac7dac73c641f4be4499d4cd2be6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;main([]);&lt;/code&gt;: a call of the &lt;code&gt;main&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;main([]);&lt;/code&gt; ： &lt;code&gt;main&lt;/code&gt; 函数的调用。</target>
        </trans-unit>
        <trans-unit id="6a65274a0a11fe8f072bc36ed2db281b202a7b36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;main&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; compilations for JVM, JS, and Native targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69612f279814b811d3fc6078abd9151f622c2b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;main&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; compilations for JVM, JS, and Native targets;</source>
          <target state="translated">&lt;code&gt;main&lt;/code&gt; JVM，JS和本机目标的主要和 &lt;code&gt;test&lt;/code&gt; 编译；</target>
        </trans-unit>
        <trans-unit id="26bac2457d8e6e02f39f9164fa073d3d3cf2ae86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;marginPrefix&lt;/code&gt; - non-blank string, which is used as a margin delimiter. Default is &lt;code&gt;|&lt;/code&gt; (pipe character).</source>
          <target state="translated">&lt;code&gt;marginPrefix&lt;/code&gt; -非空白字符串，用作边界定界符。默认为 &lt;code&gt;|&lt;/code&gt; （竖线字符）。</target>
        </trans-unit>
        <trans-unit id="a5727d9111c741b27f9daa6a06d7e82e1c4fd1e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mathContext&lt;/code&gt; - specifies the precision and the rounding mode.</source>
          <target state="translated">&lt;code&gt;mathContext&lt;/code&gt; -指定精度和舍入模式。</target>
        </trans-unit>
        <trans-unit id="fd13b61c3a876d813b06d8d27211349f43668229" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max&lt;/code&gt; and &lt;code&gt;min&lt;/code&gt; of two values;</source>
          <target state="translated">&lt;code&gt;max&lt;/code&gt; 两个值的最大值和 &lt;code&gt;min&lt;/code&gt; ；</target>
        </trans-unit>
        <trans-unit id="f38e78071ae592eb02eb59a9dd54350331d7e3b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxSpeed&lt;/code&gt; and &lt;code&gt;horsepowers&lt;/code&gt;, which are inherited from &lt;code&gt;MotorVehicle&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;maxSpeed&lt;/code&gt; 和 &lt;code&gt;horsepowers&lt;/code&gt; ，从 &lt;code&gt;MotorVehicle&lt;/code&gt; 继承</target>
        </trans-unit>
        <trans-unit id="0178aa57547ec9fda6f96912d87656568ceb8a49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; - The message explaining the deprecation and recommending an alternative API to use.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; -消息解释弃用并建议的替代API来使用。</target>
        </trans-unit>
        <trans-unit id="b94c673ec8cb01471462272c22a436f5923b2992" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; - message to be reported on usages of API without an explicit opt-in, or empty string for the default message. The default message is: &quot;This declaration is experimental and its usage should be marked with 'Marker' or '@OptIn(Marker::class)'&quot;, where &lt;code&gt;Marker&lt;/code&gt; is the opt-in requirement marker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69954a17845ed686114d3646757964c5ce2b5f6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; - the detail message string.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; -详细消息字符串。</target>
        </trans-unit>
        <trans-unit id="7aa3f56c6672dbd3162619f55c00a0fa601f3c1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mingwX64&lt;/code&gt; and &lt;code&gt;mingwX86&lt;/code&gt; for Windows;</source>
          <target state="translated">&lt;code&gt;mingwX64&lt;/code&gt; &lt;code&gt;mingwX86&lt;/code&gt; 于Windows的mingwX64和mingwX86；</target>
        </trans-unit>
        <trans-unit id="f1a906afe04d166b1f0836c59784a434f6c40f85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mingwX64&lt;/code&gt;, &lt;code&gt;mingwX86&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267160ff261db7f19167c9dd54fea15141f714be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minus&lt;/code&gt; creates a &lt;code&gt;Map&lt;/code&gt; from entries of a &lt;code&gt;Map&lt;/code&gt; on the left except those with keys from the right-hand side operand. So, the right-hand side operand can be either a single key or a collection of keys: list, set, and so on.</source>
          <target state="translated">&lt;code&gt;minus&lt;/code&gt; 创建一个 &lt;code&gt;Map&lt;/code&gt; ，从一个条目 &lt;code&gt;Map&lt;/code&gt; 左侧除了那些从右侧操作键。因此，右侧操作数可以是单个键，也可以是键的集合：列表，集合等。</target>
        </trans-unit>
        <trans-unit id="760583b59750c492cd1af04529718e73977b366a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minutes&lt;/code&gt; represents the whole number of minutes in this duration, and its absolute value is less than 60;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba8e948f6b031f314c342b1647aa8a5d07d156d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minutes&lt;/code&gt; represents the whole number of minutes in this duration. If the value doesn't fit in &lt;a href=&quot;../../kotlin/-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; range, i.e. it's greater than &lt;a href=&quot;../../kotlin/-int/-m-a-x_-v-a-l-u-e#kotlin.Int.Companion%24MAX_VALUE&quot;&gt;Int.MAX_VALUE&lt;/a&gt; or less than &lt;a href=&quot;../../kotlin/-int/-m-i-n_-v-a-l-u-e#kotlin.Int.Companion%24MIN_VALUE&quot;&gt;Int.MIN_VALUE&lt;/a&gt;, it is coerced into that range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988b67650cf5accf92fe098a86492ee65cfddc43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod&lt;/code&gt; operator convention</source>
          <target state="translated">&lt;code&gt;mod&lt;/code&gt; 运算符约定</target>
        </trans-unit>
        <trans-unit id="dcbf7185909cbc4639d523ca983d079ca2be2a59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - defines the optional name of this worker, if none - default naming is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5a016dc9b264c17139835895abd2a5df2392df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - of the started worker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5b5e36367f2b5720885e31db4553ac0624e9fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - the name of the element.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; -元素的名称。</target>
        </trans-unit>
        <trans-unit id="6235ae131413288e1ad1541828056ee77ac6f50c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - the name of the thread.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; -线程的名称。</target>
        </trans-unit>
        <trans-unit id="56831cce1ac10281427a82b03d4a290f0b3e2091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - the name to use for the thread which is running the timer.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; -用于其正在运行的计时器线程的名称。</target>
        </trans-unit>
        <trans-unit id="7fefd14206e17fee67936f93d8bb7b6202585842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - the name which compiler uses both for declaration itself and for all references to the declaration. It's required to denote a valid JavaScript identifier.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; -编译器用于声明本身和对声明的所有引用的名称。必须表示一个有效的JavaScript标识符。</target>
        </trans-unit>
        <trans-unit id="0cc326db8cb5ff54bd2faea12c15dbece4695569" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;names&lt;/code&gt; - names of the compiler diagnostics to suppress.</source>
          <target state="translated">&lt;code&gt;names&lt;/code&gt; -要隐藏的编译器诊断的名称。</target>
        </trans-unit>
        <trans-unit id="437169d0e126cb038a55aad5d198aca536c6c442" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nanoseconds&lt;/code&gt; represents the whole number of nanoseconds in this duration, and its absolute value is less than 1_000_000_000;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0634b94bbd8a34abb02bec7888d9a010a2b264" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new value&lt;/code&gt; &amp;mdash; must be of the same type as the property or its subtype.</source>
          <target state="translated">&lt;code&gt;new value&lt;/code&gt; -必须与属性或其子类型具有相同的类型。</target>
        </trans-unit>
        <trans-unit id="ace8d18319ba4a90a94060c1b1c435fd947d410b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new&lt;/code&gt; - the new value</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; -新价值</target>
        </trans-unit>
        <trans-unit id="3bcca1c2c4cfe6988423b94bdd43815e502e35b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nextUp&lt;/code&gt;, &lt;code&gt;nextDown&lt;/code&gt;, &lt;code&gt;nextTowards&lt;/code&gt; extension functions;</source>
          <target state="translated">&lt;code&gt;nextUp&lt;/code&gt; ， &lt;code&gt;nextDown&lt;/code&gt; ， &lt;code&gt;nextTowards&lt;/code&gt; 扩展功能；</target>
        </trans-unit>
        <trans-unit id="ed51d6e0299c2fb8e3d3bc33bcd5b22ef4fb4be1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noStringConversion&lt;/code&gt; property value is space-separated lists of the functions whose &lt;code&gt;const char*&lt;/code&gt; parameters shall not be autoconverted as Kotlin string</source>
          <target state="translated">&lt;code&gt;noStringConversion&lt;/code&gt; 属性值是不以 &lt;code&gt;const char*&lt;/code&gt; 参数自动转换为Kotlin字符串的函数的空格分隔列表</target>
        </trans-unit>
        <trans-unit id="4f5e883dde6d9ab329681f14350798b754f66273" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nodejs&lt;/code&gt; can contain configurations of test and run tasks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56135d8f67883da0c91d1351a19a95bbf4894e86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nodejs{}&lt;/code&gt; for applications running on Node.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a0c8ff6a3c213a67a9ee469db4827fa63ce669" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noinline&lt;/code&gt; turns off &lt;a href=&quot;inline-functions#noinline&quot;&gt;inlining of a lambda passed to an inline function&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;noinline&lt;/code&gt; 关闭&lt;a href=&quot;inline-functions#noinline&quot;&gt;传递给内联函数的lambda的内联&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36297d07fe34068128422f55af6a43def97f5318" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt; is a constant representing an object reference that doesn't point to any object</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 是一个常量，表示不指向任何对象的对象引用</target>
        </trans-unit>
        <trans-unit id="1068fc03044320a95496c7fdf93f1a4da1b38f0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt; value is considered to be less than any non-null value.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 值被认为小于任何非空值。</target>
        </trans-unit>
        <trans-unit id="334180cb811d90900ac4efec28ceda74c1452e33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt;-checks are disabled for such values.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 对这些值禁用null检查。</target>
        </trans-unit>
        <trans-unit id="3dee0989da925e42e26f7b7db864ab21298e9104" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt;-checks are disabled for values of type &lt;code&gt;dynamic&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ba108e8fde1f1b4730082255c210938d1874dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt; declares &lt;a href=&quot;object-declarations&quot;&gt;a class and its instance at the same time&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 声明&lt;a href=&quot;object-declarations&quot;&gt;一个类及其实例&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3a944d208de06158465d383160a1c8a51d2fecb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;offset&lt;/code&gt; - the offset in the array of the data to be converted.</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; -要转换的数据数组中的偏移量。</target>
        </trans-unit>
        <trans-unit id="8120bdf65433d32e076766e7ab1b7c3d1d03b966" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;offset&lt;/code&gt; - the start offset of the portion of the array to read.</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; -要读取的数组部分的起始偏移量。</target>
        </trans-unit>
        <trans-unit id="fcbd11d6992f04df0a96f8e3d24ee5a62de8bece" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onChange&lt;/code&gt; - the callback which is called after the change of the property is made. The value of the property has already been changed when this callback is invoked.</source>
          <target state="translated">&lt;code&gt;onChange&lt;/code&gt; -更改属性后调用的回调。调用此回调时，属性的值已更改。</target>
        </trans-unit>
        <trans-unit id="5bd8e7fd457a57ac8471e4aacebd37f1f3bba183" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onChange&lt;/code&gt; - the callback which is called before a change to the property value is attempted. The value of the property hasn't been changed yet, when this callback is invoked. If the callback returns &lt;code&gt;true&lt;/code&gt; the value of the property is being set to the new value, and if the callback returns &lt;code&gt;false&lt;/code&gt; the new value is discarded and the property remains its old value.</source>
          <target state="translated">&lt;code&gt;onChange&lt;/code&gt; -在尝试更改属性值之前调用的回调。调用此回调时，属性的值尚未更改。如果回调返回 &lt;code&gt;true&lt;/code&gt; ，则将属性的值设置为新值，如果回调返回 &lt;code&gt;false&lt;/code&gt; ，则丢弃新值，并且该属性保留其旧值。</target>
        </trans-unit>
        <trans-unit id="5bdd3167755849989999aa14b693fe3f927d2a47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onEach()&lt;/code&gt; performs the given action on each array element and returns the array itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0af8f0f4441f0dd5c8e3ec2ac8ee31da629ce2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onEach&lt;/code&gt; is a small, but useful extension function for collections and sequences, which allows to perform some action, possibly with side-effects, on each element of the collection/sequence in a chain of operations. On iterables it behaves like &lt;code&gt;forEach&lt;/code&gt; but also returns the iterable instance further. And on sequences it returns a wrapping sequence, which applies the given action lazily as the elements are being iterated.</source>
          <target state="translated">&lt;code&gt;onEach&lt;/code&gt; 是用于集合和序列的小型但有用的扩展函数，它允许在一系列操作中对集合/序列的每个元素执行某些操作，可能会有副作用。在iterables上，其行为类似于 &lt;code&gt;forEach&lt;/code&gt; ,但还会进一步返回iterable实例。然后在序列上返回一个包装序列，该序列在元素被迭代时会延迟应用给定的动作。</target>
        </trans-unit>
        <trans-unit id="e904ec087d6b0daa0ca01993e45c332a47f884f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;open&lt;/code&gt; allows &lt;a href=&quot;classes#inheritance&quot;&gt;subclassing a class or overriding a member&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;open&lt;/code&gt; 允许&lt;a href=&quot;classes#inheritance&quot;&gt;子类化或覆盖成员&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff40089b7efd684f476ea88fc60502882cb7ea01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; -</source>
          <target state="translated">&lt;code&gt;operation&lt;/code&gt; -</target>
        </trans-unit>
        <trans-unit id="07b99c04ea1829b2394f976c655390997c8969b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - a function that is invoked on each element with the following parameters:</source>
          <target state="translated">&lt;code&gt;operation&lt;/code&gt; -使用以下参数在每个元素上调用的函数：</target>
        </trans-unit>
        <trans-unit id="248b36e5b9cea14adb1d1632ffd922f8a21f7211" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - a function that is invoked on each subsequent element of the group with the following parameters:</source>
          <target state="translated">&lt;code&gt;operation&lt;/code&gt; -使用以下参数在组的每个后续元素上调用的函数：</target>
        </trans-unit>
        <trans-unit id="e2ee0282f792518493f58e943267d8efcc3288db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function is invoked on each element with the following parameters:</source>
          <target state="translated">&lt;code&gt;operation&lt;/code&gt; -使用以下参数在每个元素上调用函数：</target>
        </trans-unit>
        <trans-unit id="6287ec8459cc8d1cf2e3acb118273cbc25f9a67d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function that takes a character and current accumulator value, and calculates the next accumulator value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db62e5cd2362bc39a9d14e868088187e4aaf6b13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function that takes an element and current accumulator value, and calculates the next accumulator value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c581448ef7c64fde844bffec16be13541a816fb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function that takes current accumulator value and a character, and calculates the next accumulator value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b1db3a5719f482665d91987cdb4317d3e9853a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function that takes current accumulator value and an element, and calculates the next accumulator value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87b7d53794bbcca0fd82fab377b594ac84ee6a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function that takes current accumulator value and the element, and calculates the next accumulator value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc1b221c737a0161b2a21c10d217e38462c4ade" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function that takes the index of a character, current accumulator value and the character itself and calculates the next accumulator value.</source>
          <target state="translated">&lt;code&gt;operation&lt;/code&gt; -函数，该函数获取字符的索引，当前累加器值和字符本身，并计算下一个累加器值。</target>
        </trans-unit>
        <trans-unit id="ba9c3bd14120f260b4f8e64489c22c68aa16564b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function that takes the index of a character, current accumulator value and the character itself, and calculates the next accumulator value.</source>
          <target state="translated">&lt;code&gt;operation&lt;/code&gt; -函数，该函数获取字符的索引，当前累加器值和字符本身，并计算下一个累加器值。</target>
        </trans-unit>
        <trans-unit id="f3dfc746053a52619623276197f45f33b5ecb26d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function that takes the index of a character, the character itself and current accumulator value, and calculates the next accumulator value.</source>
          <target state="translated">&lt;code&gt;operation&lt;/code&gt; -函数，该函数获取字符的索引，字符本身和当前累加器值，并计算下一个累加器值。</target>
        </trans-unit>
        <trans-unit id="a2f5a2634dcfd83cfd21d6a9d72e6de1b8cdcc04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function that takes the index of an element, current accumulator value and the element itself and calculates the next accumulator value.</source>
          <target state="translated">&lt;code&gt;operation&lt;/code&gt; -函数，该函数获取元素的索引，当前累加器值和元素本身，并计算下一个累加器值。</target>
        </trans-unit>
        <trans-unit id="02e8057805378f6f4959a5114b1e0c8c72e8a698" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function that takes the index of an element, current accumulator value and the element itself, and calculates the next accumulator value.</source>
          <target state="translated">&lt;code&gt;operation&lt;/code&gt; -函数，该函数获取元素的索引，当前累加器值和元素本身，并计算下一个累加器值。</target>
        </trans-unit>
        <trans-unit id="040dd6574f8413112a5e75a2983637acf71a1379" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function that takes the index of an element, the element itself and current accumulator value, and calculates the next accumulator value.</source>
          <target state="translated">&lt;code&gt;operation&lt;/code&gt; -函数，该函数获取元素的索引，元素本身和当前累加器值，并计算下一个累加器值。</target>
        </trans-unit>
        <trans-unit id="5b067faadea8fe2e509cda471afed4b9a218621e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator&lt;/code&gt; can also be used for certain other predefined functions in order to create fancy effects, such as &lt;a href=&quot;inheritance#delegated-properties&quot;&gt;delegated properties&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; 也可以用于某些其他预定义的函数，以创建精美的效果，例如&lt;a href=&quot;inheritance#delegated-properties&quot;&gt;委托的属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="95654b15a18c309b6235b5117183f93417c5d312" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator&lt;/code&gt; marks a function as &lt;a href=&quot;operator-overloading&quot;&gt;overloading an operator or implementing a convention&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; 将函数标记为&lt;a href=&quot;operator-overloading&quot;&gt;重载运算符或实现约定&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b699b1ab0bb21c7420027041f3fbf6dc5f9a2423" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;or(bits)&lt;/code&gt; &amp;ndash; bitwise &lt;strong&gt;or&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd45210ebe76bf8c9d596dbc0bd1c602c3e9156" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;or(bits)&lt;/code&gt; &amp;ndash; bitwise or</source>
          <target state="translated">&lt;code&gt;or(bits)&lt;/code&gt; &amp;ndash;按位或</target>
        </trans-unit>
        <trans-unit id="8a369d0fc7bec3fa45b535c236ccf4db67ffb626" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;org.jetbrains.kotlinx:kotlinx-cbor-js&lt;/code&gt; provides CBOR serialization on the JavaScript platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a966729ef96431a4766b8e080f9d3cb463c29a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;org.jetbrains.kotlinx:kotlinx-serialization-core&lt;/code&gt; provides JSON serialization on the JVM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0417518c8faa0d30af999be7aa738560e49d1684" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;other&lt;/code&gt; - the second file involved in the operation, if any (for example, the target of a copy or move)</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; -操作中涉及的第二个文件（如果有）（例如，复制或移动的目标）</target>
        </trans-unit>
        <trans-unit id="bb20a2a448ff12b6516746fa32432684ec92ed0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;other&lt;/code&gt; - the string against a substring of which the comparison is performed.</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; -字符串与执行比较的子字符串相对。</target>
        </trans-unit>
        <trans-unit id="fd1894c3bcae99eca6d992390ddbf52aaa027cc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;otherOffset&lt;/code&gt; - the start offset in the other char sequence of the substring to compare.</source>
          <target state="translated">&lt;code&gt;otherOffset&lt;/code&gt; -要比较的子字符串的另一个char序列中的起始偏移量。</target>
        </trans-unit>
        <trans-unit id="2c87226a909e3b81c0afe8efaffdd2d21cb277a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;otherOffset&lt;/code&gt; - the start offset in the other string of the substring to compare.</source>
          <target state="translated">&lt;code&gt;otherOffset&lt;/code&gt; -要比较的子字符串的另一个字符串中的起始偏移量。</target>
        </trans-unit>
        <trans-unit id="278f0f16ac78072a8cba927937acd7f2f05a2391" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;out&lt;/code&gt; - writer to write to.</source>
          <target state="translated">&lt;code&gt;out&lt;/code&gt; -作家写。</target>
        </trans-unit>
        <trans-unit id="16c0fd496d4fff9161f7d9ca668c90772211d02f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;out&lt;/code&gt; marks a type parameter as &lt;a href=&quot;generics#declaration-site-variance&quot;&gt;covariant&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;out&lt;/code&gt; 将类型参数标记为&lt;a href=&quot;generics#declaration-site-variance&quot;&gt;协变&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fde49d9720c995254e8b80d376d43b1b6ce6a80b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;override&lt;/code&gt; marks a member as an &lt;a href=&quot;classes#overriding-methods&quot;&gt;override of a superclass member&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;override&lt;/code&gt; 将成员标记为&lt;a href=&quot;classes#overriding-methods&quot;&gt;超类成员&lt;/a&gt;的覆盖</target>
        </trans-unit>
        <trans-unit id="31b921d61e6a0072102526191dba4978048b2333" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;override&lt;/code&gt; methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26962046c0df7da84035dbd93e8153ed382e3f4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;overwrite&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; if destination overwrite is allowed.</source>
          <target state="translated">&lt;code&gt;overwrite&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; ，如果目的地覆盖是允许的。</target>
        </trans-unit>
        <trans-unit id="2e9b081e48d7cab3fbcabb38cde0858f4dd92ef7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;overwrite&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; if it is allowed to overwrite existing destination files and directories.</source>
          <target state="translated">&lt;code&gt;overwrite&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; ，如果它被允许覆盖现有的目标文件和目录。</target>
        </trans-unit>
        <trans-unit id="c14ba6252e54c8220dc6cf80d69d0274bff1b72e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;package&lt;/code&gt; specifies the &lt;a href=&quot;packages&quot;&gt;package for the current file&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;package&lt;/code&gt; 指定&lt;a href=&quot;packages&quot;&gt;当前文件&lt;/a&gt;的包</target>
        </trans-unit>
        <trans-unit id="a233b575d588b308b8f3f49a9a0e445768b13910" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padChar&lt;/code&gt; - the character to pad string with, if it has length less than the &lt;a href=&quot;pad-end#kotlin.text%24padEnd%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;length&lt;/a&gt; specified. Space is used by default.</source>
          <target state="translated">&lt;code&gt;padChar&lt;/code&gt; -填充字符串的字符（如果其长度小于指定的&lt;a href=&quot;pad-end#kotlin.text%24padEnd%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;长度）&lt;/a&gt;。默认情况下使用空格。</target>
        </trans-unit>
        <trans-unit id="bd5f42bf06fd521604498e289daa482258243b4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padChar&lt;/code&gt; - the character to pad string with, if it has length less than the &lt;a href=&quot;pad-end#kotlin.text%24padEnd%28kotlin.String%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;length&lt;/a&gt; specified. Space is used by default.</source>
          <target state="translated">&lt;code&gt;padChar&lt;/code&gt; -填充字符串的字符（如果其长度小于指定的&lt;a href=&quot;pad-end#kotlin.text%24padEnd%28kotlin.String%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;长度）&lt;/a&gt;。默认情况下使用空格。</target>
        </trans-unit>
        <trans-unit id="7a0ab02a23655680af43d524301ec25b6ed4cb87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padChar&lt;/code&gt; - the character to pad string with, if it has length less than the &lt;a href=&quot;pad-end#kotlin.text%24padEnd(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Char)/length&quot;&gt;length&lt;/a&gt; specified. Space is used by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4e8ced26c11bcb7aaf2a7708d75a848f2cb973" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padChar&lt;/code&gt; - the character to pad string with, if it has length less than the &lt;a href=&quot;pad-end#kotlin.text%24padEnd(kotlin.String,%20kotlin.Int,%20kotlin.Char)/length&quot;&gt;length&lt;/a&gt; specified. Space is used by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="378933c6c2d1f9e9920876580e36b05e9b8d8efd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padChar&lt;/code&gt; - the character to pad string with, if it has length less than the &lt;a href=&quot;pad-start#kotlin.text%24padStart%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;length&lt;/a&gt; specified. Space is used by default.</source>
          <target state="translated">&lt;code&gt;padChar&lt;/code&gt; -填充字符串的字符（如果其长度小于指定的&lt;a href=&quot;pad-start#kotlin.text%24padStart%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;长度）&lt;/a&gt;。默认情况下使用空格。</target>
        </trans-unit>
        <trans-unit id="87eeb6c9880e5e71d0479ba97d1c1e287e21e51b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padChar&lt;/code&gt; - the character to pad string with, if it has length less than the &lt;a href=&quot;pad-start#kotlin.text%24padStart%28kotlin.String%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;length&lt;/a&gt; specified. Space is used by default.</source>
          <target state="translated">&lt;code&gt;padChar&lt;/code&gt; -填充字符串的字符（如果其长度小于指定的&lt;a href=&quot;pad-start#kotlin.text%24padStart%28kotlin.String%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;长度）&lt;/a&gt;。默认情况下使用空格。</target>
        </trans-unit>
        <trans-unit id="60c8c4d95e5ec14e0725c67cc10480fc7bcf6421" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padChar&lt;/code&gt; - the character to pad string with, if it has length less than the &lt;a href=&quot;pad-start#kotlin.text%24padStart(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Char)/length&quot;&gt;length&lt;/a&gt; specified. Space is used by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fe37aabf7bfc27f14b485e23f5066aa4d948de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padChar&lt;/code&gt; - the character to pad string with, if it has length less than the &lt;a href=&quot;pad-start#kotlin.text%24padStart(kotlin.String,%20kotlin.Int,%20kotlin.Char)/length&quot;&gt;length&lt;/a&gt; specified. Space is used by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f627d3fa9e23e2203a00e2793f1fff7a22aa25a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;param&lt;/code&gt; (constructor parameter);</source>
          <target state="translated">&lt;code&gt;param&lt;/code&gt; （构造函数参数）；</target>
        </trans-unit>
        <trans-unit id="876f5a1dc4c597977d50707f9b50fb0abc3ad55f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;param&lt;/code&gt; is used as an &lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;annotation use-site target&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;param&lt;/code&gt; 用作&lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;注释使用场所目标&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="901b369de442aad5ab3ae75e055c03e25e33f53f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;param&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;param&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="e276fe6573ffb36e406150493494379285bc9c8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;partialWindows&lt;/code&gt; - controls whether or not to keep partial windows in the end if any, by default &lt;code&gt;false&lt;/code&gt; which means partial windows won't be preserved</source>
          <target state="translated">&lt;code&gt;partialWindows&lt;/code&gt; -控制是否将部分窗口保留在最后（如果有的话），默认情况下为 &lt;code&gt;false&lt;/code&gt; ，这意味着将不保留部分窗口</target>
        </trans-unit>
        <trans-unit id="03307a7e15abd3869cc4eb9931070c2c66b67566" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;partialWindows&lt;/code&gt; includes windows of smaller sizes that start from the elements at the end of the collection. For example, if you request windows of three elements, you can't build them for the last two elements. Enabling &lt;code&gt;partialWindows&lt;/code&gt; in this case includes two more lists of sizes 2 and 1.</source>
          <target state="translated">&lt;code&gt;partialWindows&lt;/code&gt; 包含较小的窗口，这些窗口从集合末尾的元素开始。例如，如果您请求包含三个元素的窗口，则不能为最后两个元素构建它们。在这种情况下，启用 &lt;code&gt;partialWindows&lt;/code&gt; 将包含两个另外两个大小为2和1的列表。</target>
        </trans-unit>
        <trans-unit id="3ca8766b6b38f3feffb2e60df0d39df1040627b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;plain&lt;/code&gt; - a plain JS module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d394959b391b289e117e32c942748943fc04a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;plus&lt;/code&gt; and &lt;code&gt;minus&lt;/code&gt; Operators</source>
          <target state="translated">&lt;code&gt;plus&lt;/code&gt; 和 &lt;code&gt;minus&lt;/code&gt; 运算符</target>
        </trans-unit>
        <trans-unit id="494290e91b6acda25f5d2f8130edbbea915551b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;plus&lt;/code&gt; and &lt;code&gt;minus&lt;/code&gt; operators</source>
          <target state="translated">&lt;code&gt;plus&lt;/code&gt; 和 &lt;code&gt;minus&lt;/code&gt; 运算符</target>
        </trans-unit>
        <trans-unit id="b49b180353e64fc6e5d9f7cdff02fc5294156b0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pointer&lt;/code&gt; - value returned earlier by &lt;a href=&quot;as-c-pointer&quot;&gt;Worker.asCPointer&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;pointer&lt;/code&gt; &lt;a href=&quot;as-c-pointer&quot;&gt;-Worker.asCPointer&lt;/a&gt;先前返回的值</target>
        </trans-unit>
        <trans-unit id="83c8f8709e3b990c9d3a5aec7ee5a2b395d10020" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;predicate&lt;/code&gt; -</source>
          <target state="translated">&lt;code&gt;predicate&lt;/code&gt; -</target>
        </trans-unit>
        <trans-unit id="60de56b1c096594153c02aa153a88c551524ad51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;predicate&lt;/code&gt; - function that takes the index of a character and the character itself and returns the result of predicate evaluation on the character.</source>
          <target state="translated">&lt;code&gt;predicate&lt;/code&gt; -获取字符的索引和字符本身，并返回对该字符进行谓词评估的结果的函数。</target>
        </trans-unit>
        <trans-unit id="4bbf5867532295d9c456bd64904fdfdeb406eaf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;predicate&lt;/code&gt; - function that takes the index of an element and the element itself and returns the result of predicate evaluation on the element.</source>
          <target state="translated">&lt;code&gt;predicate&lt;/code&gt; -函数获取元素的索引和元素本身，并返回对该元素进行谓词评估的结果。</target>
        </trans-unit>
        <trans-unit id="c442ed0ab5aa9e966a98b7f03fa078374249462d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;preserve-class-initialization&lt;/code&gt; &amp;ndash; generate Java-like bytecode for constructor calls, ensuring that the class initialization order is preserved. This can affect overall performance of your application; use it only if you have some complex state shared between multiple classes and updated on class initialization.</source>
          <target state="translated">&lt;code&gt;preserve-class-initialization&lt;/code&gt; &amp;ndash;为构造函数调用生成类似Java的字节码，以确保保留类的初始化顺序。这可能会影响应用程序的整体性能。仅当您在多个类之间共享某些复杂状态并在类初始化时对其进行更新时，才使用它。</target>
        </trans-unit>
        <trans-unit id="57ba3b863cc8c4290462a7e4c0c2afda26c98701" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;priority&lt;/code&gt; - the priority of the thread.</source>
          <target state="translated">&lt;code&gt;priority&lt;/code&gt; -线程的优先级。</target>
        </trans-unit>
        <trans-unit id="c5796ca90f05f8844ac1a5114df5b97bb2be4cb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;private&lt;/code&gt; marks a declaration as &lt;a href=&quot;visibility-modifiers&quot;&gt;visible in the current class or file&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; 将声明声明为&lt;a href=&quot;visibility-modifiers&quot;&gt;在当前类或文件中可见&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3cd1ab3237e659782b1a445b6691cc604fc818d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;private&lt;/code&gt; means visible inside this class only (including all its members);</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; 表示仅在此类中可见（包括其所有成员）；</target>
        </trans-unit>
        <trans-unit id="b4ca3ddcd68dce9aded9ed2f0c210450bb7e6949" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;private&lt;/code&gt; members (and &lt;code&gt;internal&lt;/code&gt; members from superclasses in other modules) are also inherited, but are not directly accessible: if the superclass contains a private property &lt;code&gt;foo&lt;/code&gt; that is referenced by a public function &lt;code&gt;bar()&lt;/code&gt;, instances of the subclass will contain a &lt;code&gt;foo&lt;/code&gt;; they can't use it directly, but they are allowed to call &lt;code&gt;bar()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; 成员（以及其他模块中超类的 &lt;code&gt;internal&lt;/code&gt; 成员）也被继承，但不能直接访问：如果超类包含由公共函数 &lt;code&gt;bar()&lt;/code&gt; 引用的私有属性 &lt;code&gt;foo&lt;/code&gt; ，则子类的实例将包含 &lt;code&gt;foo&lt;/code&gt; ；他们不能直接使用它，但可以调用 &lt;code&gt;bar()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2a7ab2daf9b3462587f6e2840cea60565269c93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;private&lt;/code&gt; members are compiled to &lt;code&gt;private&lt;/code&gt; members;</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; 成员被汇编成 &lt;code&gt;private&lt;/code&gt; 成员；</target>
        </trans-unit>
        <trans-unit id="281c4e0c9036d6e2b18b7425ed99f8f3ded9c97b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;private&lt;/code&gt; top-level declarations are compiled to package-local declarations;</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; 顶级声明被编译为程序包本地声明；</target>
        </trans-unit>
        <trans-unit id="1772eb6a89fcd1a653ae37a0e00a70be31b2a71c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;private&lt;/code&gt;: this symbol is only visible inside the containing class</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; ：此符号仅在包含的类内部可见</target>
        </trans-unit>
        <trans-unit id="7b1a8411fd48b2c8ac75533016bccfea94c57ce8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;private&lt;/code&gt;: this symbol is only visible inside the file where this symbol is declared</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; ：此符号仅在声明该符号的文件内部可见</target>
        </trans-unit>
        <trans-unit id="2f2a766035c95fc1bd128faeb599842dd5cd5bf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;process&lt;/code&gt; - defines if arrived request(s) shall be processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebbbdb3c17c62ac194fe9be714fd124da12ea708" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;processScheduledJobs&lt;/code&gt; - controls is we shall wait until all scheduled jobs processed, or terminate immediately.</source>
          <target state="translated">&lt;code&gt;processScheduledJobs&lt;/code&gt; -控制是我们将等待直到所有计划的作业都处理完毕，还是立即终止。</target>
        </trans-unit>
        <trans-unit id="8274d3319f1061658ea91f1afe0ae25216b4da7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;processScheduledJobs&lt;/code&gt; - controls is we shall wait until all scheduled jobs processed, or terminate immediately. If there are jobs to be execucted with &lt;a href=&quot;execute-after&quot;&gt;executeAfter&lt;/a&gt; their execution is awaited for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ee3153ed5cd6c3d8cdbd82eda4a7e94d655cec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;processors&lt;/code&gt;: A comma-specified list of annotation processor qualified class names. If specified, kapt does not try to find annotation processors in &lt;code&gt;apclasspath&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;processors&lt;/code&gt; ：注释处理器限定的类名的逗号指定列表。如果指定，则kapt不会尝试在 &lt;code&gt;apclasspath&lt;/code&gt; 中查找注释处理器。</target>
        </trans-unit>
        <trans-unit id="bc42dd4e73430a357a459c52466884fb13a6edd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt; &amp;mdash; must be of type &lt;code&gt;KProperty&amp;lt;*&amp;gt;&lt;/code&gt; or its supertype.</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; &amp;mdash;必须为 &lt;code&gt;KProperty&amp;lt;*&amp;gt;&lt;/code&gt; 类型或它的超类型。</target>
        </trans-unit>
        <trans-unit id="8492efa53994f5517732a61648debeb707627261" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt; &amp;mdash; same as for &lt;code&gt;getValue()&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; &amp;mdash;与 &lt;code&gt;getValue()&lt;/code&gt; 相同；</target>
        </trans-unit>
        <trans-unit id="39c75279096bb1069711ff5a3beb0e36af65557c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt; (annotations with this target are not visible to Java);</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; （此目标的注释对Java不可见）；</target>
        </trans-unit>
        <trans-unit id="7d79907823fd25c6a00e88d1beabb5caf46c411f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt; - the metadata for the property, used to get the name of property and lookup the value corresponding to this name in the map.</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; -属性的元数据，用于获取属性的名称并在地图中查找与此名称对应的值。</target>
        </trans-unit>
        <trans-unit id="4eb0a7c5aaedbf85636c8349c449b9017584b130" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt; - the metadata for the property, used to get the name of property and store the value associated with that name in the map.</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; -属性的元数据，用于获取属性的名称并将与该名称关联的值存储在地图中。</target>
        </trans-unit>
        <trans-unit id="a84e91f7b88fb5b447ff2adc00ec643fcd89527e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt; - the metadata for the property.</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; -属性的元数据。</target>
        </trans-unit>
        <trans-unit id="6c88d0209b5cf686364eee61e0aa5b18521f117e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt; is used as an &lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;annotation use-site target&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; 用作&lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;注释使用场所目标&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="26979e5a5a77a7c1d8d4cd90472ae70bee609c92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="ef850a5ede12132543032152b498af154c1e665f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protected&lt;/code&gt; &amp;mdash; same as &lt;code&gt;private&lt;/code&gt; + visible in subclasses too;</source>
          <target state="translated">&lt;code&gt;protected&lt;/code&gt; &amp;mdash;与 &lt;code&gt;private&lt;/code&gt; + 相同，也可以在子类中看到；</target>
        </trans-unit>
        <trans-unit id="d5172ab175bda21bb87b88dda90ee95aced1b408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protected&lt;/code&gt; is not available for top-level declarations.</source>
          <target state="translated">&lt;code&gt;protected&lt;/code&gt; 不适用于顶级声明。</target>
        </trans-unit>
        <trans-unit id="cb63247e4c1c5e0eab7c42818f592f975a1fad75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protected&lt;/code&gt; marks a declaration as &lt;a href=&quot;visibility-modifiers&quot;&gt;visible in the current class and its subclasses&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;protected&lt;/code&gt; 商标的声明作为&lt;a href=&quot;visibility-modifiers&quot;&gt;可见在当前的类及其子类&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88734a0fe76710da1df7b4bdadba18b2d8d5c719" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protected&lt;/code&gt; remains &lt;code&gt;protected&lt;/code&gt; (note that Java allows accessing protected members from other classes in the same package and Kotlin doesn't, so Java classes will have broader access to the code);</source>
          <target state="translated">&lt;code&gt;protected&lt;/code&gt; 保持 &lt;code&gt;protected&lt;/code&gt; （请注意，Java允许从同一包中的其他类访问受保护的成员，而Kotlin不允许，因此Java类将具有对代码的更广泛访问）；</target>
        </trans-unit>
        <trans-unit id="e68dde344fe415e84c6a9816a94c8b12d5689a2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protected&lt;/code&gt;: this symbol is only visible inside the containing class and all of its subclasses, no matter where they are declared (so if your class is public and &lt;a href=&quot;inheritance#subclassing&quot;&gt;open&lt;/a&gt;, anyone can subclass it and thus get to see and use the protected members). If you have used Java: this does &lt;em&gt;not&lt;/em&gt; also grant access from the rest of the package.</source>
          <target state="translated">&lt;code&gt;protected&lt;/code&gt; ：此符号仅在包含类及其所有子类中可见，无论它们在何处声明（因此，如果您的类是公共的并且是&lt;a href=&quot;inheritance#subclassing&quot;&gt;开放的&lt;/a&gt;，则任何人都可以对其进行子类化，从而查看并使用受保护的成员）。如果您使用过Java：这也&lt;em&gt;不会&lt;/em&gt;授予其余包的访问权限。</target>
        </trans-unit>
        <trans-unit id="bfec9cea237b4503e6387514e81a2644bba7606a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;provideDelegate&lt;/code&gt;, &lt;code&gt;getValue&lt;/code&gt; and &lt;code&gt;setValue&lt;/code&gt; operator functions are described in &lt;a href=&quot;delegated-properties&quot;&gt;Delegated properties&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;provideDelegate&lt;/code&gt; &lt;a href=&quot;delegated-properties&quot;&gt;Delegated属性&lt;/a&gt;中描述了ProvideDelegate， &lt;code&gt;getValue&lt;/code&gt; 和 &lt;code&gt;setValue&lt;/code&gt; 运算符函数。</target>
        </trans-unit>
        <trans-unit id="3c1c6059a88a6253ff33bb98675ffdbdfc713e49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;public&lt;/code&gt; &amp;mdash; any client who sees the declaring class sees its &lt;code&gt;public&lt;/code&gt; members.</source>
          <target state="translated">&lt;code&gt;public&lt;/code&gt; -看到声明类的任何客户都会看到其 &lt;code&gt;public&lt;/code&gt; 成员。</target>
        </trans-unit>
        <trans-unit id="eab1bb865b6abaa17bf70e9f55b348d2a075d6f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;public&lt;/code&gt; (or omitted): this symbol is visible throughout the entire codebase</source>
          <target state="translated">&lt;code&gt;public&lt;/code&gt; （或省略）：此符号在整个代码库中可见</target>
        </trans-unit>
        <trans-unit id="e349eb6b48871de21c2fc41920223e4c77f26a7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;public&lt;/code&gt; (or omitted): this symbol is visible to any code that can see the containing class</source>
          <target state="translated">&lt;code&gt;public&lt;/code&gt; （或省略）：任何可以看到包含类的代码都可以看到此符号</target>
        </trans-unit>
        <trans-unit id="766337e6074e7cbfa5ffd93c46a523fcdd45f121" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;public&lt;/code&gt; marks a declaration as &lt;a href=&quot;visibility-modifiers&quot;&gt;visible anywhere&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;public&lt;/code&gt; 将声明标记为&lt;a href=&quot;visibility-modifiers&quot;&gt;在任何地方都可见&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f52a00d65f5a1828adf3ed2971a1f773399099be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;public&lt;/code&gt; remains &lt;code&gt;public&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;public&lt;/code&gt; 仍然是 &lt;code&gt;public&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba7bd6b8dedfc63ca246864f34e877c81a48abe3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;range&lt;/code&gt; -</source>
          <target state="translated">&lt;code&gt;range&lt;/code&gt; -</target>
        </trans-unit>
        <trans-unit id="4c1136a4c963471f1976afcff5e1a1af934e7e99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reason&lt;/code&gt; - a string explaining why the implementation is missing.</source>
          <target state="translated">&lt;code&gt;reason&lt;/code&gt; -一个字符串，解释为什么缺少实现。</target>
        </trans-unit>
        <trans-unit id="a97ab72a73b1326a99a3abc12c26aa0ff03c9064" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reason&lt;/code&gt; - the description of the error</source>
          <target state="translated">&lt;code&gt;reason&lt;/code&gt; -错误的描述</target>
        </trans-unit>
        <trans-unit id="2ce0cb646c34f13816ccce7b03f884fd00d7d2be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;receiver1&lt;/code&gt; - the instance of the first receiver.</source>
          <target state="translated">&lt;code&gt;receiver1&lt;/code&gt; -第一个接收器的实例。</target>
        </trans-unit>
        <trans-unit id="158844371f061c3de78c6f60c8d8fdebcee509e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;receiver2&lt;/code&gt; - the instance of the second receiver.</source>
          <target state="translated">&lt;code&gt;receiver2&lt;/code&gt; -第二个接收器的实例。</target>
        </trans-unit>
        <trans-unit id="d05c93992a87e7b93bfa0b53aaf9442f53c0fc40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;receiver&lt;/code&gt; (receiver parameter of an extension function or property);</source>
          <target state="translated">&lt;code&gt;receiver&lt;/code&gt; （扩展功能或属性的接收者参数）；</target>
        </trans-unit>
        <trans-unit id="a98aea6224cfc44cd0422b175f55cd717c483718" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;receiver&lt;/code&gt; - the instance of the class used to retrieve the value of the property delegate.</source>
          <target state="translated">&lt;code&gt;receiver&lt;/code&gt; -用于检索属性委托值的类的实例。</target>
        </trans-unit>
        <trans-unit id="c3da121f86146196f53573fe143d1c4f02c04011" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;receiver&lt;/code&gt; - the receiver which is used to modify the value of the property. For example, it should be a class instance if this is a member property of that class, or an extension receiver if this is a top level extension property.</source>
          <target state="translated">&lt;code&gt;receiver&lt;/code&gt; -用于修改属性值的接收器。例如，如果这是该类的成员属性，则应该是一个类实例；如果这是顶级扩展属性，则应该是扩展接收者。</target>
        </trans-unit>
        <trans-unit id="6a781ede8edeceb338ed66f80a72f5f115f56011" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;receiver&lt;/code&gt; - the receiver which is used to obtain the value of the property delegate. For example, it should be a class instance if this is a member property of that class, or an extension receiver if this is a top level extension property.</source>
          <target state="translated">&lt;code&gt;receiver&lt;/code&gt; -用于获取属性委托值的接收器。例如，如果这是该类的成员属性，则应该是一个类实例；如果这是顶级扩展属性，则应该是扩展接收者。</target>
        </trans-unit>
        <trans-unit id="78b24734911f563b9a77668c2f9e12d696554423" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;receiver&lt;/code&gt; - the receiver which is used to obtain the value of the property. For example, it should be a class instance if this is a member property of that class, or an extension receiver if this is a top level extension property.</source>
          <target state="translated">&lt;code&gt;receiver&lt;/code&gt; -用于获取属性值的接收器。例如，如果这是该类的成员属性，则应该是一个类实例；如果这是顶级扩展属性，则应该是扩展接收者。</target>
        </trans-unit>
        <trans-unit id="002bc8ba7fef19afe5c32f3a4329b439b851c81b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;receiver&lt;/code&gt;is used as an &lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;annotation use-site target&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;receiver&lt;/code&gt; 用作&lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;注释使用场所目标&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3cd01de440d83b1fb95ce4ab9c8465f2d6dd4245" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reified&lt;/code&gt; marks a type parameter of an inline function as &lt;a href=&quot;inline-functions#reified-type-parameters&quot;&gt;accessible at runtime&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;reified&lt;/code&gt; 将内联函数的类型参数标记为&lt;a href=&quot;inline-functions#reified-type-parameters&quot;&gt;在运行时可访问&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a647b84307c2a1dabf7b72996b50831df922f5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rem&lt;/code&gt; operator</source>
          <target state="translated">&lt;code&gt;rem&lt;/code&gt; 运算符</target>
        </trans-unit>
        <trans-unit id="f5dca36ede45f97bb7ae3dddeede4b2030795ac9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;removeFirst()&lt;/code&gt; and &lt;code&gt;removeLast()&lt;/code&gt; shortcuts for removing elements from mutable lists, and &lt;code&gt;*orNull()&lt;/code&gt; counterparts of these functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74594c3c4e34a53b2bdf0e70926edc117855eb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replaceWith&lt;/code&gt; - If present, specifies a code fragment which should be used as a replacement for the deprecated API usage.</source>
          <target state="translated">&lt;code&gt;replaceWith&lt;/code&gt; -如果存在，则指定一个代码片段，该代码片段应替代不推荐使用的API。</target>
        </trans-unit>
        <trans-unit id="9731b874ffaf46a10ba130d059f97ed608f406c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacement&lt;/code&gt; - A replacement expression that can include substitutions.</source>
          <target state="translated">&lt;code&gt;replacement&lt;/code&gt; -可以包含替换的替换表达式。</target>
        </trans-unit>
        <trans-unit id="6787f23fad529d927833cc839ccfacf1d47d1c5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacement&lt;/code&gt; - A replacement expression that can include substitutions. See &lt;a href=&quot;-regex/replace-first#kotlin.text.Regex%24replaceFirst%28kotlin.CharSequence%2C+kotlin.String%29&quot;&gt;Regex.replaceFirst&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;replacement&lt;/code&gt; -可以包含替换的替换表达式。有关详细信息，请参见&lt;a href=&quot;-regex/replace-first#kotlin.text.Regex%24replaceFirst%28kotlin.CharSequence%2C+kotlin.String%29&quot;&gt;Regex.replaceFirst&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="20d1b758a3438e351c18da19306c47c6bdfe0473" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacement&lt;/code&gt; - A replacement expression that can include substitutions. See &lt;a href=&quot;-regex/replace-first#kotlin.text.Regex%24replaceFirst(kotlin.CharSequence,%20kotlin.String)&quot;&gt;Regex.replaceFirst&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c036a71ebab5e11a408004b8de144be4c01b78e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacement&lt;/code&gt; - A replacement expression that can include substitutions. See &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/regex/Matcher.html#appendReplacement(java.lang.StringBuffer,%20java.lang.String)&quot;&gt;Matcher.appendReplacement&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;replacement&lt;/code&gt; -可以包含替换的替换表达式。有关详细信息，请参见&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/regex/Matcher.html#appendReplacement(java.lang.StringBuffer,%20java.lang.String)&quot;&gt;Matcher.appendReplacement&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="757f261748dcbf83ee41e61ec7397a56574c415d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacement&lt;/code&gt; - A replacement expression that can include substitutions. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace&quot;&gt;String.prototype.replace&lt;/a&gt; function docs for details.</source>
          <target state="translated">&lt;code&gt;replacement&lt;/code&gt; -可以包含替换的替换表达式。有关详细信息，请参见&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace&quot;&gt;String.prototype.replace&lt;/a&gt;函数文档。</target>
        </trans-unit>
        <trans-unit id="829730e0173bfe6cdcbc05b208cead4213bf52c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacement&lt;/code&gt; - A replacement expression that can include substitutions. See Matcher.appendReplacement for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731ebf1eb0b6ebc6fb79eeaefce5f6364cf410c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt;&lt;a href=&quot;returns&quot;&gt;returns from the nearest enclosing function or anonymous function&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; &lt;a href=&quot;returns&quot;&gt;从最近的封闭函数或匿名函数返回&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bb8c47ca2ee2d6a0b8d718baff766e3d126c7b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reverse()&lt;/code&gt; for array subranges reverses the order of the elements in the subrange.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc2d3f36614592ea4f6050d3d2c24e80066d487" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reversed()&lt;/code&gt; returns a new collection with the copies of the elements. So, if you change the original collection later, this won't affect the previously obtained results of &lt;code&gt;reversed()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reversed()&lt;/code&gt; 返回带有元素副本的新集合。因此，如果以后更改原始集合，则不会影响以前获得的 &lt;code&gt;reversed()&lt;/code&gt; 结果。</target>
        </trans-unit>
        <trans-unit id="d13c6602f71480974d951766ea848534eecf791b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rotateLeft()&lt;/code&gt; and &lt;code&gt;rotateRight()&lt;/code&gt; (experimental)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e8f77497a243623a39f155fcc2b2e549c562a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;round(x)&lt;/code&gt; is &lt;code&gt;x&lt;/code&gt; where &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; or &lt;code&gt;+Inf&lt;/code&gt; or &lt;code&gt;-Inf&lt;/code&gt; or already a mathematical integer.</source>
          <target state="translated">&lt;code&gt;round(x)&lt;/code&gt; 是 &lt;code&gt;x&lt;/code&gt; ，其中 &lt;code&gt;x&lt;/code&gt; 是 &lt;code&gt;NaN&lt;/code&gt; 或 &lt;code&gt;+Inf&lt;/code&gt; 或 &lt;code&gt;-Inf&lt;/code&gt; 或已经是数学整数。</target>
        </trans-unit>
        <trans-unit id="021a1d5581cc1e055ff999d6e5c3167953323279" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;roundToInt&lt;/code&gt;, &lt;code&gt;roundToLong&lt;/code&gt; (half to integer) extension functions;</source>
          <target state="translated">&lt;code&gt;roundToInt&lt;/code&gt; ， &lt;code&gt;roundToLong&lt;/code&gt; （一半到整数）扩展函数;</target>
        </trans-unit>
        <trans-unit id="a7a48636595a73c48fb5fff1a432d18d2229d423" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;run()&lt;/code&gt;, &lt;code&gt;let()&lt;/code&gt;, and &lt;code&gt;with()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;run()&lt;/code&gt; ， &lt;code&gt;let()&lt;/code&gt; 和 &lt;code&gt;with()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53ad25e025c60c66a44e7a1cb485a6d06906b245" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;run&lt;/code&gt; does the same as &lt;code&gt;with&lt;/code&gt; but invokes as &lt;code&gt;let&lt;/code&gt; - as an extension function of the context object.</source>
          <target state="translated">&lt;code&gt;run&lt;/code&gt; 的功能与 &lt;code&gt;with&lt;/code&gt; 相同，但作为 &lt;code&gt;let&lt;/code&gt; 调用-作为上下文对象的扩展函数。</target>
        </trans-unit>
        <trans-unit id="bf8d9d17d64ff82469dbf5ae3e8a7363e3bf8950" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;run&lt;/code&gt; is useful when your lambda contains both the object initialization and the computation of the return value.</source>
          <target state="translated">&lt;code&gt;run&lt;/code&gt; 当lambda同时包含对象初始化和返回值的计算时，运行很有用。</target>
        </trans-unit>
        <trans-unit id="02cd92347a4fd8b87df788ac3d5cb5598e8e2a5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;run&lt;/code&gt;, &lt;code&gt;with&lt;/code&gt;, and &lt;code&gt;apply&lt;/code&gt; refer to the context object as a lambda receiver - by keyword &lt;code&gt;this&lt;/code&gt;. Hence, in their lambdas, the object is available as it would be in ordinary class functions. In most cases, you can omit &lt;code&gt;this&lt;/code&gt; when accessing the members of the receiver object, making the code shorter. On the other hand, if &lt;code&gt;this&lt;/code&gt; is omitted, it can be hard to distinguish between the receiver members and external objects or functions. So, having the context object as a receiver (&lt;code&gt;this&lt;/code&gt;) is recommended for lambdas that mainly operate on the object members: call its functions or assign properties.</source>
          <target state="translated">&lt;code&gt;run&lt;/code&gt; ， &lt;code&gt;with&lt;/code&gt; 和 &lt;code&gt;apply&lt;/code&gt; ，将上下文对象称为lambda接收器-关键字 &lt;code&gt;this&lt;/code&gt; 。因此，在其lambda中，该对象是可用的，就像在普通类函数中一样。在大多数情况下，可以在访问接收器对象的成员时省略 &lt;code&gt;this&lt;/code&gt; ，从而使代码更短。在另一方面，如果 &lt;code&gt;this&lt;/code&gt; 被省略，它可以是硬质的接收件与外部物体或功能之间进行区分。因此，对于主要作用于对象成员的lambda，建议将上下文对象作为接收器（ &lt;code&gt;this&lt;/code&gt; ）：调用其函数或分配属性。</target>
        </trans-unit>
        <trans-unit id="e0eeb0f0aacce333bd626c9151b177c8c7fb4c2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runningFold()&lt;/code&gt;, its synonym &lt;code&gt;scan()&lt;/code&gt;, and &lt;code&gt;runningReduce()&lt;/code&gt; apply the given operation to the collection elements sequentially, similarly to&lt;code&gt;fold()&lt;/code&gt; and &lt;code&gt;reduce()&lt;/code&gt;; the difference is that these new functions return the whole sequence of intermediate results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79e7d974f97240f7bc523276b3d8e231c76c029" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runtimeOnly&lt;/code&gt; dependencies are available at runtime but are not visible during compilation of any module.</source>
          <target state="translated">&lt;code&gt;runtimeOnly&lt;/code&gt; Only仅在运行时可用，但在任何模块的编译期间都不可见。</target>
        </trans-unit>
        <trans-unit id="00c91868760d17872268c37ce5ed9d59ed99176c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;safeCast&lt;/code&gt; - a function that can safely cast abstract &lt;a href=&quot;../-coroutine-context/-element/index&quot;&gt;CoroutineContext.Element&lt;/a&gt; to the concrete &lt;a href=&quot;index#E&quot;&gt;E&lt;/a&gt; type and return the element if it is a subtype of &lt;a href=&quot;index#E&quot;&gt;E&lt;/a&gt; or &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a6240469f8a6ee6ff33c0e5cb5c16ca2afcb94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scale&lt;/code&gt; - the scale of the resulting &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt;, i.e. number of decimal places of the fractional part. By default 0.</source>
          <target state="translated">&lt;code&gt;scale&lt;/code&gt; -所产生的规模&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal的&lt;/a&gt;，即小数部分的小数位数。默认为0。</target>
        </trans-unit>
        <trans-unit id="2cc4a9081cafad9a25b7eb56e818410a8907e1ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scale&lt;/code&gt; - the scale of the resulting &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt;, i.e. number of decimal places of the fractional part. By default 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea3d126205772519dab1ad0222b7a38681bf26e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sealed&lt;/code&gt; declares a &lt;a href=&quot;sealed-classes&quot;&gt;sealed class&lt;/a&gt; (a class with restricted subclassing)</source>
          <target state="translated">&lt;code&gt;sealed&lt;/code&gt; 声明一个&lt;a href=&quot;sealed-classes&quot;&gt;密封的类&lt;/a&gt;（具有受限子类的类）</target>
        </trans-unit>
        <trans-unit id="20556a735d9463307d50afc8593af51bcb40d9d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seatCount&lt;/code&gt;, which is &lt;code&gt;Car&lt;/code&gt;'s own property</source>
          <target state="translated">&lt;code&gt;seatCount&lt;/code&gt; ，这是 &lt;code&gt;Car&lt;/code&gt; 的财产</target>
        </trans-unit>
        <trans-unit id="d8fc07290c6f54ea4f72ca5abb9bad494c417569" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;second&lt;/code&gt; - Second value.</source>
          <target state="translated">&lt;code&gt;second&lt;/code&gt; -第二个值。</target>
        </trans-unit>
        <trans-unit id="9eaecd6647a1117800c8b323cda8ef5746c9e4b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seconds&lt;/code&gt; represents the whole number of seconds in this duration, and its absolute value is less than 60;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f5317056e0c0548a70a95a6d0c6e9e5628b86d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seconds&lt;/code&gt; represents the whole number of seconds in this duration. If the value doesn't fit in &lt;a href=&quot;../../kotlin/-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; range, i.e. it's greater than &lt;a href=&quot;../../kotlin/-long/-m-a-x_-v-a-l-u-e#kotlin.Long.Companion%24MAX_VALUE&quot;&gt;Long.MAX_VALUE&lt;/a&gt; or less than &lt;a href=&quot;../../kotlin/-long/-m-i-n_-v-a-l-u-e#kotlin.Long.Companion%24MIN_VALUE&quot;&gt;Long.MIN_VALUE&lt;/a&gt;, it is coerced into that range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2285f25f1a0e8cc8b7f48cc6a7802b16c54b2f7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set&lt;/code&gt; (property setter);</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; （属性设置器）；</target>
        </trans-unit>
        <trans-unit id="f1dc2c5e03765516e621962d294952e5f09f9fbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setOfNotNull()&lt;/code&gt;, which makes a set consisting of all the non-null items among the provided arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee8ffdd88f78d8d595444de307c476608800ec7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setparam&lt;/code&gt; (property setter parameter);</source>
          <target state="translated">&lt;code&gt;setparam&lt;/code&gt; （属性设置器参数）；</target>
        </trans-unit>
        <trans-unit id="098cc6c6492640dbb39b4e235003b429bc9ef092" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setparam&lt;/code&gt; is used as an &lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;annotation use-site target&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;setparam&lt;/code&gt; 用作&lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;注释使用场所目标&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00470515b77bec859fa0fd291b1d7e77ca03663e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seze&lt;/code&gt; - the size of one element in the array used to store bits.</source>
          <target state="translated">&lt;code&gt;seze&lt;/code&gt; -数组中用于存储位的一个元素的大小。</target>
        </trans-unit>
        <trans-unit id="84bf5e61185aba2018246a37029d50f861546165" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shl(bits)&lt;/code&gt; &amp;ndash; signed shift left</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c489e6b5441f3f27632e207bd8669e506ee77b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shl(bits)&lt;/code&gt; &amp;ndash; signed shift left (Java's &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;shl(bits)&lt;/code&gt; &amp;ndash;有符号左移（Java的 &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="975111a5cf5d5737d9fbd850c5604c38de8b97d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shr(bits)&lt;/code&gt; &amp;ndash; signed shift right</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b70d011bff39eddcbc338c1187efb5ec89d1a27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shr(bits)&lt;/code&gt; &amp;ndash; signed shift right (Java's &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;shr(bits)&lt;/code&gt; &amp;ndash;带符号的右移（Java的 &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="d708b52d37e6b4c643d5988ef88ccdb12ada640a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shuffle()&lt;/code&gt; puts the array elements in a random order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f765bca45ad40ab504e1a1929f49ff6b3e0a4b5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shuffled()&lt;/code&gt; for sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f9cf744bac34c42acc68c934a8943b08244608" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sign(NaN)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sign(NaN)&lt;/code&gt; 是 &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9b8d8b2d35af1ec3f393781437b403ef99b39b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sin(NaN|+Inf|-Inf)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sin(NaN|+Inf|-Inf)&lt;/code&gt; 是 &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4c1eb584a9072c71fcaa6417c2a09246c0138d53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sinh(+Inf)&lt;/code&gt; is &lt;code&gt;+Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sinh(+Inf)&lt;/code&gt; 是 &lt;code&gt;+Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b135da3058c9500d66aafb6a128281dbd15ca97b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sinh(-Inf)&lt;/code&gt; is &lt;code&gt;-Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sinh(-Inf)&lt;/code&gt; 是 &lt;code&gt;-Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="85c95c02a351d629823df5a68e49b9f10c9f4edf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sinh(NaN)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sinh(NaN)&lt;/code&gt; 是 &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ebcd1833910fca27cdcbcdc254b29db060b5e998" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; -</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; -</target>
        </trans-unit>
        <trans-unit id="3cc3c43f4b02f8b21b31f647f391bfa5e465269e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; - the number of elements to take in each char sequence, must be positive and can be greater than the number of elements in this char sequence.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; -元件的数量取在每个字符序列，必须为正并且可以比在此字符序列中的元素数目。</target>
        </trans-unit>
        <trans-unit id="6ae2c5bcf4763c4f28a64b683a56e64ac50f0f01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; - the number of elements to take in each list, must be positive and can be greater than the number of elements in this collection.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; -每个列表中要包含的元素数量，必须为正，并且可以大于此集合中的元素数量。</target>
        </trans-unit>
        <trans-unit id="b0eabc070e472f9aea5636eafa863a9302747954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; - the number of elements to take in each string, must be positive and can be greater than the number of elements in this char sequence.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; -每个字符串中要包含的元素数，必须为正，并且可以大于此char序列中的元素数。</target>
        </trans-unit>
        <trans-unit id="dc7f1044f1e44064883deade54887c5142dae0bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; - the number of elements to take in each window</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; -每个窗口中要采用的元素数</target>
        </trans-unit>
        <trans-unit id="41c63f30c69855986f80c66fba60df25156094b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; - the size in bytes of data of this type</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; -在这种类型的数据的字节大小</target>
        </trans-unit>
        <trans-unit id="4a978dbcc0a7dc3fce12212a97c131e567575188" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; - the size of one element in the array used to store bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b691a866956ce689f6b294e5168479679728613" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size_t&lt;/code&gt; and &lt;code&gt;ptrdiff_t&lt;/code&gt; (also &lt;code&gt;ssize_t&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;size_t&lt;/code&gt; 和 &lt;code&gt;ptrdiff_t&lt;/code&gt; （也为 &lt;code&gt;ssize_t&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="5523b1d1c9b15c991ae64c33c0493ca588ee0fff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sort()&lt;/code&gt; and &lt;code&gt;sortWith()&lt;/code&gt; for array subranges are now available in the common library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87cdc6f5c81965c63759c8bc93b97beee6c125e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sort*&lt;/code&gt; instead of &lt;code&gt;sorted*&lt;/code&gt; in the names of all sorting functions: &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort&quot;&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort-descending&quot;&gt;&lt;code&gt;sortDescending()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort-by&quot;&gt;&lt;code&gt;sortBy()&lt;/code&gt;&lt;/a&gt;, and so on.</source>
          <target state="translated">&lt;code&gt;sort*&lt;/code&gt; 在所有排序函数的名称中使用sort *而不是 &lt;code&gt;sorted*&lt;/code&gt; ：&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort&quot;&gt; &lt;code&gt;sort()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort-descending&quot;&gt; &lt;code&gt;sortDescending()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort-by&quot;&gt; &lt;code&gt;sortBy()&lt;/code&gt; &lt;/a&gt;等等。</target>
        </trans-unit>
        <trans-unit id="e2386eeb58dcf5950a674e2e465ed77ff081d37f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sortDescending()&lt;/code&gt; for array subranges sorts the elements in the subrange in descending order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20605ae3cabe36bbd227ce9c86b87f19406bd512" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sources&lt;/code&gt; (&lt;em&gt;required&lt;/em&gt;): An output path for the generated files.</source>
          <target state="translated">&lt;code&gt;sources&lt;/code&gt; （&lt;em&gt;必需&lt;/em&gt;）：生成文件的输出路径。</target>
        </trans-unit>
        <trans-unit id="58fedc20a964ac6d3e409f1eb6f5b974b7d02b00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sqrt(x)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; when &lt;code&gt;x &amp;lt; 0&lt;/code&gt; or &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sqrt(x)&lt;/code&gt; 是 &lt;code&gt;NaN&lt;/code&gt; 时 &lt;code&gt;x &amp;lt; 0&lt;/code&gt; 或 &lt;code&gt;x&lt;/code&gt; 是 &lt;code&gt;NaN&lt;/code&gt; 的</target>
        </trans-unit>
        <trans-unit id="a8068f2545dd80f59f49a0506837766685a6522f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt; - if &lt;code&gt;true&lt;/code&gt;, the thread is immediately started.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; -如果为 &lt;code&gt;true&lt;/code&gt; ，则立即启动线程。</target>
        </trans-unit>
        <trans-unit id="c0945f86f852c5e9b771163ebe2df3f2fda11ed8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt; - the beginning (inclusive) of the subsequence to insert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9aa0cd8a242744f68fb657ded03dd2b2d6f5b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - An index to start search with, by default 0. Must be not less than zero and not greater than &lt;code&gt;input.length()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; -用于开始搜索的索引，默认情况下为0。必须不小于零且不大于 &lt;code&gt;input.length()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="acdb8a0620e4c7b5130f3f413b7f675514ad6cea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - The index of character to start searching at. The search proceeds backward toward the beginning of the string.</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; -开始搜索的字符的索引。搜索朝字符串的开头向后进行。</target>
        </trans-unit>
        <trans-unit id="7d3a40a0549880963f7940c866fc3c69a957d610" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the beginning (inclusive) of the range to copy, 0 by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07804232f9b3444e01b2d4c7752b91fd62dfc22c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the beginning (inclusive) of the range to remove.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba635c1ed2ee37767016f79f0ead7ef53501c0fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the beginning (inclusive) of the range to replace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497c72d0788dcb493eb1b5af52161bf8a329495c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the beginning (inclusive) of the subarray to append.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc0a4b5fbd7c80de59437465590fb280e6a089f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the beginning (inclusive) of the subarray to insert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124ba5ac28f4badbe35200ad470134f178f03ec1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the beginning (inclusive) of the subrange of characters, 0 by default.</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; -字符子范围的开始（包含），默认为0。</target>
        </trans-unit>
        <trans-unit id="9a1eefd9393380e662552de130993045e8c45f90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the beginning (inclusive) of the subrange to copy, 0 by default.</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; -要复制的子范围的开始（包含），默认为0。</target>
        </trans-unit>
        <trans-unit id="6d7ba75f0fac0567e24fa448288b299f775f0dfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the beginning (inclusive) of the subrange to decode, 0 by default.</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; -要解码的子范围的开始（包含），默认为0。</target>
        </trans-unit>
        <trans-unit id="2545445b732873273e1a39f16411533cbd1db7fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the beginning (inclusive) of the subsequence to append.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa93b39e16a7b153bd6c8b6e88cab0de712ebfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the beginning (inclusive) of the subsequence to insert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee8df34a76b9d52df945d0dc5ba3c9ffb5bdc4e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the beginning (inclusive) of the substring to encode, 0 by default.</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; -要编码的子字符串的开始（包含），默认为0。</target>
        </trans-unit>
        <trans-unit id="32bc7b0935a3307d89f32516078796087b21372a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the beginning (inclusive) of the substring, 0 by default.</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; -子字符串的开始（包含），默认为0。</target>
        </trans-unit>
        <trans-unit id="835e8083c9240cc60a14ec539b52df0df483620f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the index of the first character to be removed.</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; -要删除的第一个字符的索引。</target>
        </trans-unit>
        <trans-unit id="c012a03f38ecc253b52f1afffbc631db96db9a09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the index of the first character to be replaced.</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; -要替换的第一个字符的索引。</target>
        </trans-unit>
        <trans-unit id="b6a5e9aac01d2306cb7c6b7a7ea596a30e7639ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the start index (inclusive).</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; -起始索引（包括）。</target>
        </trans-unit>
        <trans-unit id="aad719fc94e4921fd31594c6d16dcb0ddb52cf98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the start offset (inclusive) of the substring to copy.</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; -要复制的子字符串的起始偏移量（含）。</target>
        </trans-unit>
        <trans-unit id="b72ad0e532783f6ba234cbbdc102b23306ca16e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;status&lt;/code&gt; - serves as a status code; by convention, a nonzero status code indicates abnormal termination.</source>
          <target state="translated">&lt;code&gt;status&lt;/code&gt; -用作状态码；按照惯例，非零状态代码表示异常终止。</target>
        </trans-unit>
        <trans-unit id="76e05e699805ca165800cfaf4cdbd31609cb5ed1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stdlib&lt;/code&gt; already makes use of contracts, which leads to improvements in the analyses described above. This part of contracts is &lt;strong&gt;stable&lt;/strong&gt;, meaning that you can benefit from the improved analysis right now without any additional opt-ins:</source>
          <target state="translated">&lt;code&gt;stdlib&lt;/code&gt; 已经使用合同，这可以改善上述分析。合同的这部分内容是&lt;strong&gt;稳定的&lt;/strong&gt;，这意味着您可以立即从改进的分析中受益，而无需任何其他选择：</target>
        </trans-unit>
        <trans-unit id="727fd974271fc9099443f42a3b2ceeb5e2610178" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;step&lt;/code&gt; - the number of elements to move the window forward by on an each step, by default 1</source>
          <target state="translated">&lt;code&gt;step&lt;/code&gt; -每一步向前移动窗口的元素数量，默认为1</target>
        </trans-unit>
        <trans-unit id="dcd999b6301542cebc2fb677d779bd98681aaf0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;step&lt;/code&gt; defines a distance between first elements of two adjacent windows. By default the value is 1, so the result contains windows starting from all elements. If you increase the step to 2, you will receive only windows starting from odd elements: first, third, an so on.</source>
          <target state="translated">&lt;code&gt;step&lt;/code&gt; 定义两个相邻窗口的第一元素之间的距离。默认情况下，该值为1，因此结果包含从所有元素开始的窗口。如果将步长增加到2，您将仅收到以奇数元素开头的窗口：第一，第三等。</target>
        </trans-unit>
        <trans-unit id="3d0d0c2c99afb5f31cdfb8aa7358f3f9d2409787" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strictEnums&lt;/code&gt; and &lt;code&gt;nonStrictEnums&lt;/code&gt; properties values are space-separated lists of the enums that should be generated as a Kotlin enum or as integral values correspondingly. If the enum is not included into any of these lists, then it is generated according to the heuristics.</source>
          <target state="translated">&lt;code&gt;strictEnums&lt;/code&gt; 和 &lt;code&gt;nonStrictEnums&lt;/code&gt; 属性值是用空格分隔的枚举列表，应将其作为Kotlin枚举或相应的整数值生成。如果枚举未包含在任何这些列表中，则根据启发式方法生成它。</target>
        </trans-unit>
        <trans-unit id="fd1037cd9a47ac6bb5aed0cc042843d12462adcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stubs&lt;/code&gt; &amp;ndash; only generate stubs needed for annotation processing;</source>
          <target state="translated">&lt;code&gt;stubs&lt;/code&gt; &amp;ndash;仅生成注释处理所需的存根；</target>
        </trans-unit>
        <trans-unit id="88061555c9c98e794fcbabeb6346959556967b63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stubs&lt;/code&gt; (&lt;em&gt;required&lt;/em&gt;): An output path for the stub files. In other words, some temporary directory.</source>
          <target state="translated">&lt;code&gt;stubs&lt;/code&gt; （&lt;em&gt;必需&lt;/em&gt;）：存根文件的输出路径。换句话说，是一些临时目录。</target>
        </trans-unit>
        <trans-unit id="5237e34d8ca0b0aa26e70c25ae06d3415d09f9d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stubsAndApt&lt;/code&gt; &amp;ndash; generate stubs and run annotation processing.</source>
          <target state="translated">&lt;code&gt;stubsAndApt&lt;/code&gt; &amp;ndash;生成存根并运行注释处理。</target>
        </trans-unit>
        <trans-unit id="76cd1781ce6da7148f985ed0fcff9fbd7489c68a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sumOf()&lt;/code&gt; takes a selector function and returns a sum of its values for all elements of a collection. &lt;code&gt;sumOf()&lt;/code&gt; can produce sums of the types &lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt;, &lt;code&gt;Double&lt;/code&gt;, &lt;code&gt;UInt&lt;/code&gt;, and &lt;code&gt;ULong&lt;/code&gt;. On the JVM, &lt;code&gt;BigInteger&lt;/code&gt; and &lt;code&gt;BigDecimal&lt;/code&gt; are also available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e2bb89a31d99b7ec1731fab47f69fe973402a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suspend&lt;/code&gt; -&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c530db0c8f61755e893473a0cc03a77b2c37bacd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suspend&lt;/code&gt; functions without &lt;code&gt;@Throws&lt;/code&gt; propagate only &lt;code&gt;CancellationException&lt;/code&gt; as &lt;code&gt;NSError&lt;/code&gt;. Non-&lt;code&gt;suspend&lt;/code&gt; functions without &lt;code&gt;@Throws&lt;/code&gt; don't propagate Kotlin exceptions at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bdb177a1a5e9df43693e64cf09b5a941dfeef82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suspend&lt;/code&gt; marks a function or lambda as suspending (usable as a &lt;a href=&quot;coroutines-overview&quot;&gt;coroutine&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;suspend&lt;/code&gt; 一个函数或lambda标记为暂停（可用&lt;a href=&quot;coroutines-overview&quot;&gt;作协程&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="d88adc9894a2f1336ad6b9c663914539e72791a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tailrec&lt;/code&gt; marks a function as &lt;a href=&quot;functions#tail-recursive-functions&quot;&gt;tail-recursive&lt;/a&gt; (allowing the compiler to replace recursion with iteration)</source>
          <target state="translated">&lt;code&gt;tailrec&lt;/code&gt; 将功能标记为&lt;a href=&quot;functions#tail-recursive-functions&quot;&gt;尾递归&lt;/a&gt;（允许编译器将迭代替换为迭代）</target>
        </trans-unit>
        <trans-unit id="8d3d2939196993f9bab19d448225194c8a28b278" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;takeIf()&lt;/code&gt; and &lt;code&gt;takeUnless()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;takeIf()&lt;/code&gt; 和 &lt;code&gt;takeUnless()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c06bcfa7789a0124c5ed588357e1ea0f3463b180" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;takeIf&lt;/code&gt; and &lt;code&gt;takeUnless&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;takeIf&lt;/code&gt; 和 &lt;code&gt;takeUnless&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f6b8bc7140372eea96f7957c76b434bd69770a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;takeIf&lt;/code&gt; and &lt;code&gt;takeUnless&lt;/code&gt; are especially useful together with scope functions. A good case is chaining them with &lt;code&gt;let&lt;/code&gt; for running a code block on objects that match the given predicate. To do this, call &lt;code&gt;takeIf&lt;/code&gt; on the object and then call &lt;code&gt;let&lt;/code&gt; with a safe call (&lt;code&gt;?&lt;/code&gt;). For objects that don't match the predicate, &lt;code&gt;takeIf&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; isn't invoked.</source>
          <target state="translated">&lt;code&gt;takeIf&lt;/code&gt; 和 &lt;code&gt;takeUnless&lt;/code&gt; 与范围函数一起特别有用。一个很好的例子是 &lt;code&gt;let&lt;/code&gt; 它们与let链接起来，以便在与给定谓词匹配的对象上运行代码块。为此，请在对象上调用 &lt;code&gt;takeIf&lt;/code&gt; ，然后使用安全调用（ &lt;code&gt;?&lt;/code&gt; ）调用 &lt;code&gt;let&lt;/code&gt; 。对于不谓词匹配的对象， &lt;code&gt;takeIf&lt;/code&gt; 返回 &lt;code&gt;null&lt;/code&gt; 并 &lt;code&gt;let&lt;/code&gt; 不会被调用。</target>
        </trans-unit>
        <trans-unit id="eaac4c748ff74aef66b4d4bf6a589fa48436bfe5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;takeIf&lt;/code&gt; is like &lt;code&gt;filter&lt;/code&gt; for a single value. It checks whether the receiver meets the predicate, and returns the receiver, if it does or &lt;code&gt;null&lt;/code&gt; if it doesn't. Combined with an elvis-operator and early returns it allows to write constructs like:</source>
          <target state="translated">&lt;code&gt;takeIf&lt;/code&gt; 类似于单个值的 &lt;code&gt;filter&lt;/code&gt; 。它检查接收方是否满足谓词，如果满足则返回接收方，否则返回 &lt;code&gt;null&lt;/code&gt; 。结合elvis-operator和早期收益，它允许编写如下结构：</target>
        </trans-unit>
        <trans-unit id="c33be6cb907b12adc9119250bf308c128256a36d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;takeUnless&lt;/code&gt; is the same as &lt;code&gt;takeIf&lt;/code&gt;, but it takes the inverted predicate. It returns the receiver when it &lt;em&gt;doesn't&lt;/em&gt; meet the predicate and &lt;code&gt;null&lt;/code&gt; otherwise. So one of the examples above could be rewritten with &lt;code&gt;takeUnless&lt;/code&gt; as following:</source>
          <target state="translated">&lt;code&gt;takeUnless&lt;/code&gt; 与 &lt;code&gt;takeIf&lt;/code&gt; 相同，但它采用倒置谓词。当&lt;em&gt;不&lt;/em&gt;符合谓词时，它返回接收者，否则返回 &lt;code&gt;null&lt;/code&gt; 。因此，可以使用 &lt;code&gt;takeUnless&lt;/code&gt; 重写以上示例之一，如下所示：</target>
        </trans-unit>
        <trans-unit id="4bb8daa78c89754426c090574adc1aff035196e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tan(NaN|+Inf|-Inf)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;tan(NaN|+Inf|-Inf)&lt;/code&gt; 为 &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e2fbad78534aa0baffd2f5827a30977a3fd22e65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tanh(+Inf)&lt;/code&gt; is &lt;code&gt;1.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;tanh(+Inf)&lt;/code&gt; 为 &lt;code&gt;1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9d8705b536f611c5ef6af349994c52792dcf54e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tanh(-1.0)&lt;/code&gt; is &lt;code&gt;-Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;tanh(-1.0)&lt;/code&gt; 是 &lt;code&gt;-Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ef017c48a59b4351fe87c214b953f31afbc8515" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tanh(-Inf)&lt;/code&gt; is &lt;code&gt;-1.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;tanh(-Inf)&lt;/code&gt; 为 &lt;code&gt;-1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9fb9734bbf8358d4f3a29ac0b6771bd430e1a78d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tanh(1.0)&lt;/code&gt; is &lt;code&gt;+Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;tanh(1.0)&lt;/code&gt; 是 &lt;code&gt;+Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="66d2f8e0730eaad57483b20b82eba676e897c62f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tanh(NaN)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;tanh(NaN)&lt;/code&gt; 是 &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="962278e1ea50881e55b704575c8fdf7a4b75fc53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tanh(x)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; when &lt;code&gt;x &amp;gt; 1&lt;/code&gt; or &lt;code&gt;x &amp;lt; -1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;tanh(x)&lt;/code&gt; 当 &lt;code&gt;x &amp;gt; 1&lt;/code&gt; 或 &lt;code&gt;x &amp;lt; -1&lt;/code&gt; 时tanh（x）为 &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b56280d6d0412a62dfb9d389803f8aac0959dcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt; is disabled, and the target's test task is used (e.g. &lt;code&gt;jvmTest&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; 被禁用，并且使用目标的测试任务（例如 &lt;code&gt;jvmTest&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b19f69b3755690b021fdcb189a2d765113e01501" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text&lt;/code&gt; - text to append to file.</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; -附加到文件的文本。</target>
        </trans-unit>
        <trans-unit id="584921280571d8eda0a4ddcb9fc92763ef7d199d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text&lt;/code&gt; - text to write into file.</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; -要写入文件的文本。</target>
        </trans-unit>
        <trans-unit id="c94e2aaa2c54025cd0dd82fd1be34fc781dd96f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;textView&lt;/code&gt; is an extension property for &lt;code&gt;Activity&lt;/code&gt;, and it has the same type as declared in &lt;code&gt;activity_main.xml&lt;/code&gt; (so it is a &lt;code&gt;TextView&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;textView&lt;/code&gt; 是 &lt;code&gt;Activity&lt;/code&gt; 的扩展属性，它具有与 &lt;code&gt;activity_main.xml&lt;/code&gt; 中声明的类型相同的类型（因此它是 &lt;code&gt;TextView&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6ca138f79a2155ce9eb77ce0d3226c80dba4dd46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;third&lt;/code&gt; - Third value.</source>
          <target state="translated">&lt;code&gt;third&lt;/code&gt; -第三值。</target>
        </trans-unit>
        <trans-unit id="59fb4725b2a41ff996479dec4539f3be6e290369" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisOffset&lt;/code&gt; - the start offset in this char sequence of the substring to compare.</source>
          <target state="translated">&lt;code&gt;thisOffset&lt;/code&gt; -要比较的子字符串的此char序列中的起始偏移量。</target>
        </trans-unit>
        <trans-unit id="7651cc401a2cecd3313fc38f62a13aa291e1292c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisOffset&lt;/code&gt; - the start offset in this string of the substring to compare.</source>
          <target state="translated">&lt;code&gt;thisOffset&lt;/code&gt; -要比较的子字符串在此字符串中的起始偏移量。</target>
        </trans-unit>
        <trans-unit id="7852ca64fc1d96ffc4ef6494f1e2a712a1ef86bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisRef&lt;/code&gt; &amp;mdash; must be the same or a supertype of the &lt;em&gt;property owner&lt;/em&gt; (for extension properties &amp;mdash; the type being extended).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8681dc6c5b580e3d7caea60a99dbef13f55f9b2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisRef&lt;/code&gt; &amp;mdash; must be the same or a supertype of the &lt;em&gt;property owner&lt;/em&gt; (for extension properties &amp;mdash; the type being extended);</source>
          <target state="translated">&lt;code&gt;thisRef&lt;/code&gt; &amp;mdash;必须与&lt;em&gt;属性所有者&lt;/em&gt;相同或为&lt;em&gt;属性所有者&lt;/em&gt;的超类型（对于扩展属性，即正在扩展的类型）；</target>
        </trans-unit>
        <trans-unit id="399a3d1a1e924f800c27694c35284415a0d323aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisRef&lt;/code&gt; &amp;mdash; same as for &lt;code&gt;getValue()&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;thisRef&lt;/code&gt; &amp;mdash;与 &lt;code&gt;getValue()&lt;/code&gt; 相同；</target>
        </trans-unit>
        <trans-unit id="0e73fee796428829db074c9cbb8f31e1ddb29681" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisRef&lt;/code&gt; - the object for which property delegate is requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa686d9597c69ad884e20b4066f00def78629496" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisRef&lt;/code&gt; - the object for which the value is requested (not used).</source>
          <target state="translated">&lt;code&gt;thisRef&lt;/code&gt; -为其请求值的对象（未使用）。</target>
        </trans-unit>
        <trans-unit id="bb9497e6795b35429a4bd512b9801a1bd9351fcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisRef&lt;/code&gt; - the object for which the value is requested.</source>
          <target state="translated">&lt;code&gt;thisRef&lt;/code&gt; -请求其值的对象。</target>
        </trans-unit>
        <trans-unit id="abcb6cbc8d903620a1636bf866465fbc73df05c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;throw&lt;/code&gt; is also an expression, and its return type is the special class &lt;code&gt;Nothing&lt;/code&gt;, which does not have any instances. The compiler knows that an expression whose type is &lt;code&gt;Nothing&lt;/code&gt; will never return normally, and will therefore generally accept its use even where a different type would normally be required, such as after the &lt;a href=&quot;null-safety#elvis-operator&quot;&gt;Elvis operator&lt;/a&gt;. If you make a function that always throws, or that starts an infinite loop, you could declare its return type to be &lt;code&gt;Nothing&lt;/code&gt; in order to make the compiler aware of this. One fun example of this is the built-in function &lt;code&gt;TODO&lt;/code&gt;, which you can call in any expression (possibly supplying a string argument), and it raises a &lt;code&gt;NotImplementedError&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;throw&lt;/code&gt; 也是一个表达式，其返回类型是特殊类 &lt;code&gt;Nothing&lt;/code&gt; ，它没有任何实例。编译器知道类型为 &lt;code&gt;Nothing&lt;/code&gt; 的表达式将永远不会正常返回，因此即使通常需要使用其他类型（例如，在&lt;a href=&quot;null-safety#elvis-operator&quot;&gt;Elvis运算符&lt;/a&gt;之后），也通常会接受其使用。如果您创建的函数总是抛出异常或启动无限循环，则可以将其返回类型声明为 &lt;code&gt;Nothing&lt;/code&gt; ，以使编译器意识到这一点。一个有趣的例子是内置函数 &lt;code&gt;TODO&lt;/code&gt; ，您可以在任何表达式中调用它（可能提供一个字符串参数），它会引发 &lt;code&gt;NotImplementedError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="746512bbbc5796ff33613f9c8ba4763c8e2df1ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;throw&lt;/code&gt; is an expression in Kotlin, so you can use it, for example, as part of an Elvis expression:</source>
          <target state="translated">&lt;code&gt;throw&lt;/code&gt; 是Kotlin中的一个表达式，因此您可以将其用作Elvis表达式的一部分：</target>
        </trans-unit>
        <trans-unit id="82f0b362b52d255e00890f34eb5b6c90731fe6ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;throw&lt;/code&gt;&lt;a href=&quot;exceptions&quot;&gt;throws an exception&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;throw&lt;/code&gt; &lt;a href=&quot;exceptions&quot;&gt;抛出一个异常&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="522b75ea192fc01f31126dceb76e4403d6efed86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;throwOnInvalidSequence&lt;/code&gt; - specifies whether to throw an exception on malformed byte sequence or replace it by the replacement char &lt;code&gt;\uFFFD&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;throwOnInvalidSequence&lt;/code&gt; -指定是对格式错误的字节序列引发异常还是将其替换为替换字符 &lt;code&gt;\uFFFD&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0786bbec1c422619dd28386c34573a869b9d8118" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;throwOnInvalidSequence&lt;/code&gt; - specifies whether to throw an exception on malformed char sequence or replace.</source>
          <target state="translated">&lt;code&gt;throwOnInvalidSequence&lt;/code&gt; -指定是在格式错误的char序列上引发异常还是替换。</target>
        </trans-unit>
        <trans-unit id="6514b676d935bfd1cf07a46e3876fbe7d118a8b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeoutMicroseconds&lt;/code&gt; - defines how long to park worker if no requests arrive, waits forever if -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1792b36896bac4d766607f8e3bc1828ec037cfd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toBigDecimal&lt;/code&gt; for &lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt;, &lt;code&gt;Double&lt;/code&gt;, and &lt;code&gt;BigInteger&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;toBigDecimal&lt;/code&gt; 用于 &lt;code&gt;Int&lt;/code&gt; ， &lt;code&gt;Long&lt;/code&gt; ， &lt;code&gt;Float&lt;/code&gt; ， &lt;code&gt;Double&lt;/code&gt; 和 &lt;code&gt;BigInteger&lt;/code&gt; ；</target>
        </trans-unit>
        <trans-unit id="fe5553087ec0f88c70336b42de18b8470324718a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toBigInteger&lt;/code&gt; for &lt;code&gt;Int&lt;/code&gt; and &lt;code&gt;Long&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;toBigInteger&lt;/code&gt; for &lt;code&gt;Int&lt;/code&gt; 和 &lt;code&gt;Long&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="4f7e08f507e6c7df158092b47787a4feb113953d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toBits&lt;/code&gt; and &lt;code&gt;toRawBits&lt;/code&gt; returning &lt;code&gt;Long&lt;/code&gt; for &lt;code&gt;Double&lt;/code&gt; and &lt;code&gt;Int&lt;/code&gt; for &lt;code&gt;Float&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;toBits&lt;/code&gt; 和 &lt;code&gt;toRawBits&lt;/code&gt; 返回 &lt;code&gt;Long&lt;/code&gt; 的 &lt;code&gt;Double&lt;/code&gt; 和 &lt;code&gt;Int&lt;/code&gt; 的 &lt;code&gt;Float&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="8cc386b6e87bc3448b7797f22b1c5c03d88f6f6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toBits&lt;/code&gt;, &lt;code&gt;toRawBits&lt;/code&gt;, &lt;code&gt;Double.fromBits&lt;/code&gt; (these are in the &lt;code&gt;kotlin&lt;/code&gt; package).</source>
          <target state="translated">&lt;code&gt;toBits&lt;/code&gt; ， &lt;code&gt;toRawBits&lt;/code&gt; ， &lt;code&gt;Double.fromBits&lt;/code&gt; （它们在 &lt;code&gt;kotlin&lt;/code&gt; 包中）。</target>
        </trans-unit>
        <trans-unit id="27e56d519e70d86c6e1234da564340f30716dc72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toBoolean()&lt;/code&gt; on strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545b09bd6d4acfec1c751aec080997d656fe9ab9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toFreeze&lt;/code&gt; - an object intended to be frozen.</source>
          <target state="translated">&lt;code&gt;toFreeze&lt;/code&gt; -要冻结的对象。</target>
        </trans-unit>
        <trans-unit id="6b4a76a08f85d95173c5d687f607f534a61aef29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toIndex&lt;/code&gt; - the end of the range (exclusive) to copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c46999661ce9125845aab3b1525e2711921ca7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toIndex&lt;/code&gt; - the end of the range (exclusive) to fill, size of this array by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd36734be5605a4b2128306bc53bad200416a6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toIndex&lt;/code&gt; - the end of the range (exclusive) to reverse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a666ee78e7ec97354370e63ee535333ed3f7a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toIndex&lt;/code&gt; - the end of the range (exclusive) to search in, size of this array by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f54072f4072f057f967fa37e3465b92cb356078" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toIndex&lt;/code&gt; - the end of the range (exclusive) to sort, size of this array by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f06c4d751f8417b3bd7d3f9d2a04a8c794e13d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toIndex&lt;/code&gt; - the end of the range (exclusive) to sort.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c0c56284f7d7d6ee2371715a2c8a8210aa4182" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toIndex&lt;/code&gt; - the end of the range (exclusive), must be in &lt;code&gt;fromIndex..array.size&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;toIndex&lt;/code&gt; -范围的结尾（不包括），必须在 &lt;code&gt;fromIndex..array.size&lt;/code&gt; 中</target>
        </trans-unit>
        <trans-unit id="3589ae8a084d12124e3bc10fc6b2b2d3a3971bce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toString()&lt;/code&gt; of the form &lt;code&gt;&quot;User(name=John, age=42)&quot;&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;toString()&lt;/code&gt; 的形式为 &lt;code&gt;&quot;User(name=John, age=42)&quot;&lt;/code&gt; ；</target>
        </trans-unit>
        <trans-unit id="51154d9a1d6a4913e008e93d78cebb80aa948662" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toString()&lt;/code&gt; returns a string representation of the object, similar to &lt;code&gt;__str__()&lt;/code&gt; in Python (the default implementation is rather uninteresting, as it only returns the class name and something akin to the object's id)</source>
          <target state="translated">&lt;code&gt;toString()&lt;/code&gt; 返回对象的字符串表示形式，类似于Python中的 &lt;code&gt;__str__()&lt;/code&gt; （默认实现相当有趣，因为它仅返回类名和类似于对象ID的名称）</target>
        </trans-unit>
        <trans-unit id="e8d872f4216b831cc8bc4d7f49dea5204e0416fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toString()&lt;/code&gt;, &lt;code&gt;equals()&lt;/code&gt;, and &lt;code&gt;hashCode()&lt;/code&gt;, which are inherited from &lt;code&gt;Any&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;toString()&lt;/code&gt; ， &lt;code&gt;equals()&lt;/code&gt; 和 &lt;code&gt;hashCode()&lt;/code&gt; ，它们继承自 &lt;code&gt;Any&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="638c9d74080f74c67b71667a2c185ea21e972ba5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transform&lt;/code&gt; -</source>
          <target state="translated">&lt;code&gt;transform&lt;/code&gt; -</target>
        </trans-unit>
        <trans-unit id="15c4b04e951d17c1a2e477f031d2bcf27cf9bdba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transform&lt;/code&gt; - function that takes the index of a character and the character itself and returns the result of the transform applied to the character.</source>
          <target state="translated">&lt;code&gt;transform&lt;/code&gt; -函数，该函数获取字符的索引和字符本身，并返回应用于该字符的转换结果。</target>
        </trans-unit>
        <trans-unit id="039aa43b89df1fd9e312edea27e7540bd36beb5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transform&lt;/code&gt; - function that takes the index of an element and the element itself and returns the result of the transform applied to the element.</source>
          <target state="translated">&lt;code&gt;transform&lt;/code&gt; -函数，该函数获取元素的索引和元素本身，并返回应用于元素的转换结果。</target>
        </trans-unit>
        <trans-unit id="104dcd522cc3ee9799b1640335aabcab9d66b3b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this callable is &lt;code&gt;abstract&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果此callable是 &lt;code&gt;abstract&lt;/code&gt; 则为true。</target>
        </trans-unit>
        <trans-unit id="bef381db8bd06ce91772cba2de44905179068baf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this callable is &lt;code&gt;final&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果此callable是 &lt;code&gt;final&lt;/code&gt; ,则返回true。</target>
        </trans-unit>
        <trans-unit id="48e9436811c46e7ef269874f8b8c972bf249af4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this callable is &lt;code&gt;open&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果此可调用对象为 &lt;code&gt;open&lt;/code&gt; ,则返回true。</target>
        </trans-unit>
        <trans-unit id="8e7040532b788db7e1881a404c2f6f57d9ec2ec6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this class is &lt;code&gt;abstract&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果此类是 &lt;code&gt;abstract&lt;/code&gt; 则为true。</target>
        </trans-unit>
        <trans-unit id="29cbfd008c683c372ccea25514e60950995208ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this class is &lt;code&gt;final&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果此类是 &lt;code&gt;final&lt;/code&gt; 则为true。</target>
        </trans-unit>
        <trans-unit id="a0682ac2ca7d06f0fcf26167395972d601e74dc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this class is &lt;code&gt;open&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果此类是 &lt;code&gt;open&lt;/code&gt; 则为true。</target>
        </trans-unit>
        <trans-unit id="56d6f885f8db1cf343eb33f83893311ce3af6a58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this class is &lt;code&gt;sealed&lt;/code&gt;. See the &lt;a href=&quot;../../../../../../docs/reference/sealed-classes&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果此类是 &lt;code&gt;sealed&lt;/code&gt; 则为true。有关更多信息，请参阅&lt;a href=&quot;../../../../../../docs/reference/sealed-classes&quot;&gt;Kotlin语言文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c8f6384e2a206f94eaacf8e6b9cfe3e0b6c934a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this class is a Kotlin functional interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b071fdced7370b9c523bba505946c8904ca5851" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this class is a companion object. See the &lt;a href=&quot;../../../../../../docs/reference/object-declarations#companion-objects&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果此类是伴随对象，则为true。有关更多信息，请参阅&lt;a href=&quot;../../../../../../docs/reference/object-declarations#companion-objects&quot;&gt;Kotlin语言文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="845c0cfe5e08f8ccdc3394fd10bcfbfd84a7e50e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this class is a data class. See the &lt;a href=&quot;../../../../../../docs/reference/data-classes&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果此类是数据类，则为true。有关更多信息，请参阅&lt;a href=&quot;../../../../../../docs/reference/data-classes&quot;&gt;Kotlin语言文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6173885a56cf421523749e79e1c37be3556ce069" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this class is an inner class. See the &lt;a href=&quot;../../../../../../docs/reference/nested-classes#inner-classes&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果此类是一个内部类，则为true。有关更多信息，请参阅&lt;a href=&quot;../../../../../../docs/reference/nested-classes#inner-classes&quot;&gt;Kotlin语言文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3da89216220cb9b19287d95d61d7699c69944807" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this function is &lt;code&gt;external&lt;/code&gt;. See the &lt;a href=&quot;../../../../../../docs/reference/java-interop#using-jni-with-kotlin&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果此函数是 &lt;code&gt;external&lt;/code&gt; 函数，则为true。有关更多信息，请参阅&lt;a href=&quot;../../../../../../docs/reference/java-interop#using-jni-with-kotlin&quot;&gt;Kotlin语言文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="92086a8ecd17c2c4c8bffc5df741e48dda9e5af9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this function is &lt;code&gt;infix&lt;/code&gt;. See the &lt;a href=&quot;../../../../../../docs/reference/functions#infix-notation&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果此函数为 &lt;code&gt;infix&lt;/code&gt; ,则为true。有关更多信息，请参阅&lt;a href=&quot;../../../../../../docs/reference/functions#infix-notation&quot;&gt;Kotlin语言文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="107d2be5f1d44fd574f06da199faec12b7a849ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this function is &lt;code&gt;inline&lt;/code&gt;. See the &lt;a href=&quot;../../../../../../docs/reference/inline-functions&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果此函数为 &lt;code&gt;inline&lt;/code&gt; ,则为true。有关更多信息，请参阅&lt;a href=&quot;../../../../../../docs/reference/inline-functions&quot;&gt;Kotlin语言文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dffdc0c4a5c1dd507af4c9d86696578b69989817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this function is &lt;code&gt;operator&lt;/code&gt;. See the &lt;a href=&quot;../../../../../../docs/reference/operator-overloading&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果此函数为 &lt;code&gt;operator&lt;/code&gt; ,则为true。有关更多信息，请参阅&lt;a href=&quot;../../../../../../docs/reference/operator-overloading&quot;&gt;Kotlin语言文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d7d894c3aad9ff0f0e72c2696fe7bfe07f5aef3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this is a suspending function.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果这是一个挂起函数，则为true。</target>
        </trans-unit>
        <trans-unit id="ef20cb76da715ecda07257a877b8973bf96552f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this parameter is &lt;code&gt;vararg&lt;/code&gt;. See the &lt;a href=&quot;../../../../../../docs/reference/functions#variable-number-of-arguments-varargs&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果此参数为 &lt;code&gt;vararg&lt;/code&gt; ,则返回true。有关更多信息，请参阅&lt;a href=&quot;../../../../../../docs/reference/functions#variable-number-of-arguments-varargs&quot;&gt;Kotlin语言文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d38113bf9025316719c94c22af898602766298d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this parameter is optional and can be omitted when making a call via &lt;a href=&quot;../-k-callable/call-by&quot;&gt;KCallable.callBy&lt;/a&gt;, or &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86debaee171b6be12d0c5af394bcd5ef11cf486" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this parameter is optional and can be omitted when making a call via &lt;a href=&quot;../-k-callable/call-by#kotlin.reflect.KCallable%24callBy%28kotlin.collections.Map%28%28kotlin.reflect.KParameter%2C+kotlin.Any%29%29%29&quot;&gt;KCallable.callBy&lt;/a&gt;, or &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果此参数是可选的，则为true，并且通过&lt;a href=&quot;../-k-callable/call-by#kotlin.reflect.KCallable%24callBy%28kotlin.collections.Map%28%28kotlin.reflect.KParameter%2C+kotlin.Any%29%29%29&quot;&gt;KCallable.callBy&lt;/a&gt;进行呼叫时可以省略，否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="baf7d9d384a67ac6e59b989ce1119cdbbec9d4af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this property is &lt;code&gt;const&lt;/code&gt;. See the &lt;a href=&quot;../../../../../../docs/reference/properties#compile-time-constants&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果此属性为 &lt;code&gt;const&lt;/code&gt; ,则为true。有关更多信息，请参阅&lt;a href=&quot;../../../../../../docs/reference/properties#compile-time-constants&quot;&gt;Kotlin语言文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9f86909c75ad3bc1f327b31e716a0fc67647217c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this property is &lt;code&gt;lateinit&lt;/code&gt;. See the &lt;a href=&quot;../../../../../../docs/reference/properties#late-initialized-properties&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果此属性 &lt;code&gt;lateinit&lt;/code&gt; 。有关更多信息，请参阅&lt;a href=&quot;../../../../../../docs/reference/properties#late-initialized-properties&quot;&gt;Kotlin语言文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a2f2c3c702782f18fca73e673181765083a26fad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this type parameter is &lt;code&gt;reified&lt;/code&gt;. See the &lt;a href=&quot;../../../../../../docs/reference/inline-functions#reified-type-parameters&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果对此类型参数进行了 &lt;code&gt;reified&lt;/code&gt; 化，则返回true。有关更多信息，请参阅&lt;a href=&quot;../../../../../../docs/reference/inline-functions#reified-type-parameters&quot;&gt;Kotlin语言文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="43312f027e03b0d0813f6bd37363cc691544b17a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this type was marked nullable in the source code.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果此类型在源代码中标记为可空，则为true。</target>
        </trans-unit>
        <trans-unit id="37f317994df4c5094e8b2eff3348d68fdc66f93d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 还是 &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d588010212f4bda854e420b0e2fe0c3bfcf2c29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; specifies the 'true' value of the &lt;a href=&quot;basic-types#booleans&quot;&gt;Boolean type&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 指定&lt;a href=&quot;basic-types#booleans&quot;&gt;布尔类型&lt;/a&gt;的&amp;ldquo; true&amp;rdquo;值</target>
        </trans-unit>
        <trans-unit id="def3b82ed42051cd1d682dd5d63d63bd8b451966" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; to ignore character case when comparing characters. By default &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 比较字符时忽略字符大小写为true。默认情况下为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c263006ed892c84d96985df25d92c169c705aa72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;truncate(x)&lt;/code&gt; is &lt;code&gt;x&lt;/code&gt; where &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; or &lt;code&gt;+Inf&lt;/code&gt; or &lt;code&gt;-Inf&lt;/code&gt; or already a mathematical integer.</source>
          <target state="translated">&lt;code&gt;truncate(x)&lt;/code&gt; 是 &lt;code&gt;x&lt;/code&gt; ，其中 &lt;code&gt;x&lt;/code&gt; 是 &lt;code&gt;NaN&lt;/code&gt; 或 &lt;code&gt;+Inf&lt;/code&gt; 或 &lt;code&gt;-Inf&lt;/code&gt; 或已经是数学整数。</target>
        </trans-unit>
        <trans-unit id="b005f49eb850051951850520142309885972d4b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;try&lt;/code&gt;&lt;a href=&quot;exceptions&quot;&gt;begins an exception handling block&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;try&lt;/code&gt; &lt;a href=&quot;exceptions&quot;&gt;开始一个异常处理块&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00f3c142fc3cc8915245412b93bddc776e3844b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tvosArm64&lt;/code&gt;, &lt;code&gt;tvosX64&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc524b0c1455c19d99ad2f0f73cdfe3b44523b81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typealias&lt;/code&gt; declares a &lt;a href=&quot;type-aliases&quot;&gt;type alias&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;typealias&lt;/code&gt; 声明&lt;a href=&quot;type-aliases&quot;&gt;类型别名&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9f304545f689ccc427483b7e430c59224af092b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typedef&lt;/code&gt; are represented as &lt;code&gt;typealias&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;typedef&lt;/code&gt; 表示为 &lt;code&gt;typealias&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f00931216e6f873ac298c242736ed5301db89610" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeof&lt;/code&gt; reserved for future use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a10ed8d79d6bb179c17c581bca9efe81e14350" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ulp&lt;/code&gt; extension property;</source>
          <target state="translated">&lt;code&gt;ulp&lt;/code&gt; 扩展属性；</target>
        </trans-unit>
        <trans-unit id="e14da80256d15d284f373845ac75762eb9645ee7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;umd&lt;/code&gt; - a &lt;a href=&quot;https://github.com/umdjs/umd&quot;&gt;Universal Module Definition&lt;/a&gt; module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ccbf0305441246ee011062717ee081c3c9f2a2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unit&lt;/code&gt; - The unit in which this time source's readings are expressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88894535390d48153d0df5237c35c261b817eee9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;until&lt;/code&gt; - must be positive.</source>
          <target state="translated">&lt;code&gt;until&lt;/code&gt; -必须为正。</target>
        </trans-unit>
        <trans-unit id="70bdbcf3b6f6b264e85bd3eda2c1b89301be47b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use&lt;/code&gt; can be invoked on anything that implements the &lt;code&gt;Closeable&lt;/code&gt; interface, and when the &lt;code&gt;use&lt;/code&gt; block ends (whether normally or due to an exception), &lt;code&gt;close()&lt;/code&gt; will be called on the object upon which you invoked &lt;code&gt;use&lt;/code&gt;. If an exception is raised within the block or by &lt;code&gt;close()&lt;/code&gt;, it will bubble out of &lt;code&gt;use&lt;/code&gt;. If both the block and &lt;code&gt;close()&lt;/code&gt; raise, it's the exception from the block that will bubble out.</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt; 可以在实现 &lt;code&gt;Closeable&lt;/code&gt; 接口的任何对象上调用，并且当 &lt;code&gt;use&lt;/code&gt; 块结束时（无论是正常还是由于异常），将在调用 &lt;code&gt;use&lt;/code&gt; 的对象上调用 &lt;code&gt;close()&lt;/code&gt; 。如果异常是在块内或者通过升高 &lt;code&gt;close()&lt;/code&gt; ，它将的泡出来 &lt;code&gt;use&lt;/code&gt; 。如果block和 &lt;code&gt;close()&lt;/code&gt; 都提高了，那将会是冒泡的异常。</target>
        </trans-unit>
        <trans-unit id="03e06d7eda7b91ad152cb1d8d121b82a0f4d6e8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ushr(bits)&lt;/code&gt; &amp;ndash; unsigned shift right</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7d080477ee6fa0bcb122170eea31fcee38caa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ushr(bits)&lt;/code&gt; &amp;ndash; unsigned shift right (Java's &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;ushr(bits)&lt;/code&gt; &amp;ndash;无符号右移（Java &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="1f2767a8e31b1f6772a122aac9c837c1e6c8702d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;val String.cstr: CValuesRef&amp;lt;ByteVar&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;val String.cstr: CValuesRef&amp;lt;ByteVar&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4087cad031bb61396a802e4efc05908ac3b667f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;val&lt;/code&gt; backing field reassignment in getter</source>
          <target state="translated">&lt;code&gt;val&lt;/code&gt; getter中的val支持字段重新分配</target>
        </trans-unit>
        <trans-unit id="3c47a16d0f9ef80aac46c5f31c7b824ae04dd75f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;val&lt;/code&gt; declares a read-only &lt;a href=&quot;properties&quot;&gt;property&lt;/a&gt; or &lt;a href=&quot;basic-syntax#defining-variables&quot;&gt;local variable&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;val&lt;/code&gt; 声明一个只读&lt;a href=&quot;properties&quot;&gt;属性&lt;/a&gt;或&lt;a href=&quot;basic-syntax#defining-variables&quot;&gt;局部变量&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="061709f9b617fe4ffa1a61ef823f9effba27961f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; &amp;mdash; must be of the same type as the property (or its supertype).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ec4497c1d4592ea4212ad5162dc01d2e4f19cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - The value of captured group.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; -捕获组的值。</target>
        </trans-unit>
        <trans-unit id="23d64a7f06434d7ad3888dfa5b59c1bd1b67af84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - must be a &lt;a href=&quot;from-value#kotlinx.cinterop.StableRef.Companion%24fromValue%28kotlinx.cinterop.CPointer%28%28kotlinx.cinterop.CPointed%29%29%29%2Fvalue&quot;&gt;value&lt;/a&gt; of some &lt;a href=&quot;index&quot;&gt;StableRef&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; -必须是一个&lt;a href=&quot;from-value#kotlinx.cinterop.StableRef.Companion%24fromValue%28kotlinx.cinterop.CPointer%28%28kotlinx.cinterop.CPointed%29%29%29%2Fvalue&quot;&gt;值&lt;/a&gt;的一些&lt;a href=&quot;index&quot;&gt;StableRef&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ccadc4e582dc16b1fb7c46b9c6b697df3b00a3a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - must be a &lt;a href=&quot;from-value#kotlinx.cinterop.StableRef.Companion%24fromValue(kotlinx.cinterop.CPointer((kotlinx.cinterop.CPointed)))/value&quot;&gt;value&lt;/a&gt; of some &lt;a href=&quot;index&quot;&gt;StableRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9770089e6b57a87a0f774b23d5a9ee78923e8ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - necessary annotation retention (RUNTIME, BINARY or SOURCE)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; -必要的注释保留（RUNTIME，BINARY或SOURCE）</target>
        </trans-unit>
        <trans-unit id="80845144bb7beb1cd96aaacbd3c8691a8a7f26f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the array from which characters are appended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3a23bca1fdd08f1b9648cf1d429b8798182f20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the array from which characters are inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a60f706a103b2dabeb433923b7ae7011f13a88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the character sequence from which a subsequence is appended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9a49c97211bfef26301c31c00e46033bea0e61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the character sequence from which a subsequence is appended. If &lt;a href=&quot;../-appendable/append#kotlin.text.Appendable%24append(kotlin.CharSequence?,%20kotlin.Int,%20kotlin.Int)/value&quot;&gt;value&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, then characters are appended as if &lt;a href=&quot;../-appendable/append#kotlin.text.Appendable%24append(kotlin.CharSequence?,%20kotlin.Int,%20kotlin.Int)/value&quot;&gt;value&lt;/a&gt; contained the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42a17e4913029f1b7a07b857b2b0951010fec0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the character sequence from which a subsequence is appended. If &lt;a href=&quot;append#kotlin.text.Appendable%24append(kotlin.CharSequence?,%20kotlin.Int,%20kotlin.Int)/value&quot;&gt;value&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, then characters are appended as if &lt;a href=&quot;append#kotlin.text.Appendable%24append(kotlin.CharSequence?,%20kotlin.Int,%20kotlin.Int)/value&quot;&gt;value&lt;/a&gt; contained the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75071d5d65639738ca84e6aa551aafdd35d33f75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the character sequence from which a subsequence is inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8977222d345f436b41290dc198901d65ea4c702" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the character sequence from which characters are inserted. If &lt;a href=&quot;insert#kotlin.text.StringBuilder%24insert(kotlin.Int,%20kotlin.CharSequence?)/value&quot;&gt;value&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2dbabf61c491742b964f03d1b175a69617d6d7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the character sequence to append. If &lt;a href=&quot;../-appendable/append#kotlin.text.Appendable%24append(kotlin.CharSequence?)/value&quot;&gt;value&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are appended to this Appendable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17295ef534a653efdc9e736d507019ff06c8630d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the character sequence to append. If &lt;a href=&quot;append#kotlin.text.Appendable%24append(kotlin.CharSequence?)/value&quot;&gt;value&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are appended to this Appendable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917dd082b30448043d03ad8a12810ac693cf047b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the character to append.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e21c9b75cca874038882f9fe38fd5b9854e4620" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the new value to be assigned to this property.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; -要分配给此属性的新值。</target>
        </trans-unit>
        <trans-unit id="48bfefd5893711d24831fcb82c147c77d10a70a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the qualifier to add to the declarations in the generated code. It must be a sequence of valid JavaScript identifiers separated by the &lt;code&gt;.&lt;/code&gt; character. Examples of valid qualifiers are: &lt;code&gt;foo&lt;/code&gt;, &lt;code&gt;bar.Baz&lt;/code&gt;, &lt;code&gt;_.$0.f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; -限定符添加到声明在生成的代码。它必须是由分隔的有效JavaScript标识符序列 &lt;code&gt;.&lt;/code&gt; 字符。有效预选赛的例子有： &lt;code&gt;foo&lt;/code&gt; ， &lt;code&gt;bar.Baz&lt;/code&gt; ， &lt;code&gt;_.$0.f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a72e369a9afe7e9b9a4e65ad21ac52bf1d04fff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the result of the action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b7dab74d0b65052308c0cd1006db24a2768828" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the string to replace with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab46dca581ecbc08183d3f197bf6ab155c81e84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the underlying value.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; -基础值。</target>
        </trans-unit>
        <trans-unit id="c735a93eb7b23f076be050f35df61961783a2985" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the value to set.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; -要设置的值。</target>
        </trans-unit>
        <trans-unit id="e03c7180b6c060e655d4e614262a11a520f50e0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var ConsoleOutput = function (_, Kotlin) { ... }&lt;/code&gt;: this is the variable named after your Kotlin module. Its value is the result of an anonymous function call. The rest of the code is the function body.</source>
          <target state="translated">&lt;code&gt;var ConsoleOutput = function (_, Kotlin) { ... }&lt;/code&gt; ：这是以您的Kotlin模块命名的变量。它的值是匿名函数调用的结果。代码的其余部分是函数体。</target>
        </trans-unit>
        <trans-unit id="b9592e0a8ea83521987a70d32de67303547746c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var println = Kotlin.kotlin.io.println_s8jyv4$;&lt;/code&gt;: a variable that refers to the &lt;code&gt;kotlin.io.println&lt;/code&gt; function from the passed in parameter &lt;code&gt;Kotlin&lt;/code&gt;. This is a way to import the standard &lt;code&gt;println&lt;/code&gt; function defined in &lt;code&gt;kotlin.js&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;var println = Kotlin.kotlin.io.println_s8jyv4$;&lt;/code&gt; ：从传入的参数 &lt;code&gt;Kotlin&lt;/code&gt; 中引用 &lt;code&gt;kotlin.io.println&lt;/code&gt; 函数的变量。这是导入 &lt;code&gt;kotlin.js&lt;/code&gt; 中定义的标准 &lt;code&gt;println&lt;/code&gt; 函数的方法。</target>
        </trans-unit>
        <trans-unit id="1bf2c9d03fd4b30bf37e4d093f10b03acda902f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var&lt;/code&gt; declares a mutable &lt;a href=&quot;properties&quot;&gt;property&lt;/a&gt; or &lt;a href=&quot;basic-syntax#defining-variables&quot;&gt;local variable&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; 声明了可变&lt;a href=&quot;properties&quot;&gt;属性&lt;/a&gt;或&lt;a href=&quot;basic-syntax#defining-variables&quot;&gt;局部变量&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5957c65f7fc9d13bc008ba085ac98603b4b442ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vararg&lt;/code&gt; allows &lt;a href=&quot;functions#variable-number-of-arguments-varargs&quot;&gt;passing a variable number of arguments for a parameter&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;vararg&lt;/code&gt; 允许&lt;a href=&quot;functions#variable-number-of-arguments-varargs&quot;&gt;为参数传递可变数量的参数&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec11f8c999f8da0fd10813eac21c62770702b3c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;verbose&lt;/code&gt;: Enable verbose output.</source>
          <target state="translated">&lt;code&gt;verbose&lt;/code&gt; ：启用详细输出。</target>
        </trans-unit>
        <trans-unit id="92c8a0d131c26de196669d8b5862b5f1f94f1c4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;version&lt;/code&gt; - the version in the following formats: &lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;.&amp;lt;patch&amp;gt;&lt;/code&gt;, where major, minor and patch are non-negative integer numbers without leading zeros.</source>
          <target state="translated">&lt;code&gt;version&lt;/code&gt; -采用以下格式的版本： &lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;.&amp;lt;patch&amp;gt;&lt;/code&gt; ，其中major，minor和patch是非负整数，不带前导零。</target>
        </trans-unit>
        <trans-unit id="32a544b8c3858a2c4749a1c0ebc16ee8291a7792" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;version&lt;/code&gt; is a version of the Gradle project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb87c17236c5dc7ef81b226bbf098fd0f7c1763" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;void*&lt;/code&gt; is mapped to &lt;code&gt;COpaquePointer&lt;/code&gt; &amp;ndash; the special pointer type which is the supertype for any other pointer type. So if the C function takes &lt;code&gt;void*&lt;/code&gt;, then the Kotlin binding accepts any &lt;code&gt;CPointer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;void*&lt;/code&gt; 映射到 &lt;code&gt;COpaquePointer&lt;/code&gt; &amp;ndash;特殊的指针类型，它是任何其他指针类型的超类型。因此，如果C函数采用 &lt;code&gt;void*&lt;/code&gt; ，那么Kotlin绑定将接受任何 &lt;code&gt;CPointer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f450282a532b38acaa5e332dcdd3eef30ff7161d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;warningSince&lt;/code&gt; - the version, since which this deprecation should be reported as a warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d41555163d1ffa6cdb38c81185097c14023973e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wasm32&lt;/code&gt; for WebAssembly.</source>
          <target state="translated">&lt;code&gt;wasm32&lt;/code&gt; 用于WebAssembly的wasm32。</target>
        </trans-unit>
        <trans-unit id="68093ab5c34218d01a0b81fd759d57aa7bfb99d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;watchosArm32&lt;/code&gt;, &lt;code&gt;watchosArm64&lt;/code&gt;, &lt;code&gt;watchosX86&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5500d7301e4bdb0a81de7eceee2cbdb55f314bf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;when&lt;/code&gt; begins a &lt;a href=&quot;control-flow#when-expression&quot;&gt;when expression&lt;/a&gt; (executes one of the given branches)</source>
          <target state="translated">&lt;code&gt;when&lt;/code&gt; 开始一个&lt;a href=&quot;control-flow#when-expression&quot;&gt;when表达式&lt;/a&gt;（执行给定分支之一）</target>
        </trans-unit>
        <trans-unit id="813959087fef504bbcd1a88424364a0e21606dfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;when&lt;/code&gt; entry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0026d4e03b045e2df5c8041f634ef6d00fbf32f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;when&lt;/code&gt; expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a7208dcca095d25e928eb5f0443e189a009f61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt; - a frozen object that was attempted to mutate</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; -这是试图变异冻结对象</target>
        </trans-unit>
        <trans-unit id="cae7dd02ba7a7653467a24b815acb806ba2d1eba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt; specifies &lt;a href=&quot;generics#upper-bounds&quot;&gt;constraints for a generic type parameter&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; 指定&lt;a href=&quot;generics#upper-bounds&quot;&gt;通用类型参数的约束&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e968b996ca3fbf3427be432a96c253fea7a1f13e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while&lt;/code&gt; begins a &lt;a href=&quot;control-flow#while-loops&quot;&gt;while loop&lt;/a&gt; (loop with precondition)</source>
          <target state="translated">&lt;code&gt;while&lt;/code&gt; 开始&lt;a href=&quot;control-flow#while-loops&quot;&gt;while循环&lt;/a&gt;（带前提条件的循环）</target>
        </trans-unit>
        <trans-unit id="f6c3ddab0607925fb0cf55686fcd1e9b5655629f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while&lt;/code&gt; loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daff7d694f02b978f83b66b6dcc3d7f9927bd522" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;windowed()&lt;/code&gt; provides more flexibility with optional parameters:</source>
          <target state="translated">&lt;code&gt;windowed()&lt;/code&gt; 通过可选参数提供了更大的灵活性：</target>
        </trans-unit>
        <trans-unit id="efc76a751bae9b1ccb9cc3574d3350ef9f6c1bef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;withSign&lt;/code&gt; extension function;</source>
          <target state="translated">&lt;code&gt;withSign&lt;/code&gt; 扩展功能；</target>
        </trans-unit>
        <trans-unit id="c7c34b39d0ccfed20a3765c04059a5d01125f3b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x ?: y&lt;/code&gt; evaluates &lt;code&gt;x&lt;/code&gt;, which becomes the result of the expression unless it's null, in which case you'll get &lt;code&gt;y&lt;/code&gt; instead (which ought to be of a non-nullable type). This is also known as the &quot;Elvis operator&quot;. You can even use it to perform an early return in case of null:</source>
          <target state="translated">&lt;code&gt;x ?: y&lt;/code&gt; 计算 &lt;code&gt;x&lt;/code&gt; ，除非它为null，否则它将成为表达式的结果，在这种情况下，您将获得 &lt;code&gt;y&lt;/code&gt; （它应为不可为null的类型）。这也被称为&amp;ldquo;猫王操作员&amp;rdquo;。您甚至可以使用它来在null的情况下提前返回：</target>
        </trans-unit>
        <trans-unit id="b3374ff1d1757994cb4187ba4a59ab8ec4e5c4cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x.nextTowards(y)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; if either &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt; are &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x.nextTowards(y)&lt;/code&gt; 是 &lt;code&gt;NaN&lt;/code&gt; 如果任一 &lt;code&gt;x&lt;/code&gt; 或 &lt;code&gt;y&lt;/code&gt; 是 &lt;code&gt;NaN&lt;/code&gt; 的</target>
        </trans-unit>
        <trans-unit id="c214be437756d38ba63986462c6054d0ad4cccf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x.roundToInt() == Int.MAX_VALUE&lt;/code&gt; when &lt;code&gt;x &amp;gt; Int.MAX_VALUE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x.roundToInt() == Int.MAX_VALUE&lt;/code&gt; 当 &lt;code&gt;x &amp;gt; Int.MAX_VALUE&lt;/code&gt; 时x.roundToInt（）== Int.MAX_VALUE</target>
        </trans-unit>
        <trans-unit id="d26413dcf8a274e128e35bc2646602784d83da34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x.roundToInt() == Int.MIN_VALUE&lt;/code&gt; when &lt;code&gt;x &amp;lt; Int.MIN_VALUE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x.roundToInt() == Int.MIN_VALUE&lt;/code&gt; 当 &lt;code&gt;x &amp;lt; Int.MIN_VALUE&lt;/code&gt; 时x.roundToInt（）== Int.MIN_VALUE</target>
        </trans-unit>
        <trans-unit id="d0c9eff6b586527c272cc1c787d42c0901156e84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x.roundToLong() == Long.MAX_VALUE&lt;/code&gt; when &lt;code&gt;x &amp;gt; Long.MAX_VALUE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x.roundToLong() == Long.MAX_VALUE&lt;/code&gt; 当 &lt;code&gt;x &amp;gt; Long.MAX_VALUE&lt;/code&gt; 时x.roundToLong（）== Long.MAX_VALUE</target>
        </trans-unit>
        <trans-unit id="612d7a72ebefaecf14c31091c444a2ebf1856013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x.roundToLong() == Long.MIN_VALUE&lt;/code&gt; when &lt;code&gt;x &amp;lt; Long.MIN_VALUE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x.roundToLong() == Long.MIN_VALUE&lt;/code&gt; 当 &lt;code&gt;x &amp;lt; Long.MIN_VALUE&lt;/code&gt; 时x.roundToLong（）== Long.MIN_VALUE</target>
        </trans-unit>
        <trans-unit id="45980bc8190af90667d2abf96d483fbddc7515a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x.ulp&lt;/code&gt; is &lt;code&gt;+Inf&lt;/code&gt; when &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;+Inf&lt;/code&gt; or &lt;code&gt;-Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x.ulp&lt;/code&gt; 是 &lt;code&gt;+Inf&lt;/code&gt; 文件时 &lt;code&gt;x&lt;/code&gt; 是 &lt;code&gt;+Inf&lt;/code&gt; 文件或 &lt;code&gt;-Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2d29bf16c333939cb9d3d3120668f3f53a8e7da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x?.y&lt;/code&gt; evaluates &lt;code&gt;x&lt;/code&gt;, and if it is not null, it evaluates &lt;code&gt;x.y&lt;/code&gt; (without reevaluating &lt;code&gt;x&lt;/code&gt;), whose result becomes the result of the expression - otherwise, you get null. This also works for functions, and it can be chained - for example, &lt;code&gt;x?.y()?.z?.w()&lt;/code&gt; will return null if any of &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;x.y()&lt;/code&gt;, or &lt;code&gt;x.y().z&lt;/code&gt; produce null; otherwise, it will return the result of &lt;code&gt;x.y().z.w()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x?.y&lt;/code&gt; 计算 &lt;code&gt;x&lt;/code&gt; ，如果它不为null，它将计算 &lt;code&gt;x.y&lt;/code&gt; （不重新计算 &lt;code&gt;x&lt;/code&gt; ），其结果成为表达式的结果-否则，您将得到null。这也适用于函数，并且可以被链接-例如，如果 &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;x.y()&lt;/code&gt; 或 &lt;code&gt;x.y().z&lt;/code&gt; 任何一个产生null ，则 &lt;code&gt;x?.y()?.z?.w()&lt;/code&gt; 将返回null；否则，它将返回 &lt;code&gt;x.y().z.w()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b431fa67cf12965c6a226504a45520cef1289c89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xor(bits)&lt;/code&gt; &amp;ndash; bitwise &lt;strong&gt;xor&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e69551c5c0c395c32af26818569bd49f6e7cd46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xor(bits)&lt;/code&gt; &amp;ndash; bitwise xor</source>
          <target state="translated">&lt;code&gt;xor(bits)&lt;/code&gt; &amp;ndash;按位异或</target>
        </trans-unit>
        <trans-unit id="20792616e164307f0f6f1aaa93499e52a3e00558" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xs union ys as Set&amp;lt;*&amp;gt;&lt;/code&gt; and &lt;code&gt;xs union (ys as Set&amp;lt;*&amp;gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;xs union ys as Set&amp;lt;*&amp;gt;&lt;/code&gt; 和 &lt;code&gt;xs union (ys as Set&amp;lt;*&amp;gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6341d31fe3b76ebe3949824ce618e14ec9ea56b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xs union ys as Set&amp;lt;*&amp;gt;&lt;/code&gt; is equivalent to &lt;code&gt;xs union (ys as Set&amp;lt;*&amp;gt;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ebaf312aaa17dea995318ed31531f08cae6984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ definedExternally }&lt;/code&gt; (for functions and property getters/setters).</source>
          <target state="translated">&lt;code&gt;{ definedExternally }&lt;/code&gt; （用于函数和属性获取器/设置器）。</target>
        </trans-unit>
        <trans-unit id="1d141b7e10f3472c35c93ba55debb58d409df47f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{module}.js&lt;/code&gt;. The actual code from the application. All files are compiled into a single JavaScript file which has the same name as the module.</source>
          <target state="translated">&lt;code&gt;{module}.js&lt;/code&gt; 。来自应用程序的实际代码。所有文件都被编译成一个与模块同名的JavaScript文件。</target>
        </trans-unit>
        <trans-unit id="15d6193c8855ed9061fa77c50c2fd518055b41cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;||&lt;/code&gt; &amp;ndash; lazy disjunction</source>
          <target state="translated">&lt;code&gt;||&lt;/code&gt; &amp;ndash;懒惰的析取</target>
        </trans-unit>
        <trans-unit id="63ef94473db52409683867a4d6a5ca8463d809be" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&amp;lt;targetName&amp;gt;&amp;lt;compilationName&amp;gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&amp;lt;targetName&amp;gt;&amp;lt;compilationName&amp;gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a6717af54a7bd43fe1e8a7c9793514dd2abf5461" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&amp;lt;targetName&amp;gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&amp;lt;targetName&amp;gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b7ffdc158a19f2718388e88f46a88dc27dc2f6d8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(optionally)&lt;/em&gt; the function &lt;a href=&quot;calls-in-place#kotlin.contracts.ContractBuilder%24callsInPlace%28kotlin.Function%28%28kotlin.contracts.ContractBuilder.callsInPlace.R%29%29%2C+kotlin.contracts.InvocationKind%29%2Flambda&quot;&gt;lambda&lt;/a&gt; is invoked the amount of times specified by the &lt;a href=&quot;calls-in-place#kotlin.contracts.ContractBuilder%24callsInPlace%28kotlin.Function%28%28kotlin.contracts.ContractBuilder.callsInPlace.R%29%29%2C+kotlin.contracts.InvocationKind%29%2Fkind&quot;&gt;kind&lt;/a&gt; parameter, see the &lt;a href=&quot;../-invocation-kind/index&quot;&gt;InvocationKind&lt;/a&gt; enum for possible values.</source>
          <target state="translated">&lt;em&gt;（可选）&lt;/em&gt;调用函数&lt;a href=&quot;calls-in-place#kotlin.contracts.ContractBuilder%24callsInPlace%28kotlin.Function%28%28kotlin.contracts.ContractBuilder.callsInPlace.R%29%29%2C+kotlin.contracts.InvocationKind%29%2Flambda&quot;&gt;lambda&lt;/a&gt;的次数由&lt;a href=&quot;calls-in-place#kotlin.contracts.ContractBuilder%24callsInPlace%28kotlin.Function%28%28kotlin.contracts.ContractBuilder.callsInPlace.R%29%29%2C+kotlin.contracts.InvocationKind%29%2Fkind&quot;&gt;kind&lt;/a&gt;参数指定的时间，有关可能的值，请参见&lt;a href=&quot;../-invocation-kind/index&quot;&gt;InvocationKind&lt;/a&gt;枚举。</target>
        </trans-unit>
        <trans-unit id="694ff58cdf08757d6e936133ad052f49987921f0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(optionally)&lt;/em&gt; the function &lt;a href=&quot;calls-in-place#kotlin.contracts.ContractBuilder%24callsInPlace(kotlin.Function((kotlin.contracts.ContractBuilder.callsInPlace.R)),%20kotlin.contracts.InvocationKind)/lambda&quot;&gt;lambda&lt;/a&gt; is invoked the amount of times specified by the &lt;a href=&quot;calls-in-place#kotlin.contracts.ContractBuilder%24callsInPlace(kotlin.Function((kotlin.contracts.ContractBuilder.callsInPlace.R)),%20kotlin.contracts.InvocationKind)/kind&quot;&gt;kind&lt;/a&gt; parameter, see the &lt;a href=&quot;../-invocation-kind/index&quot;&gt;InvocationKind&lt;/a&gt; enum for possible values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a41f3eb2dcb4f57ce41fe5fc3912a6b553f952d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;code&gt;-n&lt;/code&gt; is optional, this flag is applied by default&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;-n&lt;/code&gt; 是可选的，默认情况下应用此标志&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d8e9b3b23bb2ec80f0182d81d0e2592622b5f50" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Add/remove modules and targets&lt;/em&gt; supported for this project template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45fabde5a853ee0c0f6ca31ceb7a1d324af44bec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Association&lt;/em&gt; transformations allow building maps from the collection elements and certain values associated with them. In different association types, the elements can be either keys or values in the association map.</source>
          <target state="translated">&lt;em&gt;关联&lt;/em&gt;转换允许根据集合元素和与其关联的某些值来构建地图。在不同的关联类型中，元素可以是关联图中的键或值。</target>
        </trans-unit>
        <trans-unit id="d220051876daa0991641918f62919bf172ade4cf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Below, we use OV for &quot;Older Version&quot;, and NV for &quot;Newer Version&quot;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;下面，我们将OV用作&amp;ldquo;较旧版本&amp;rdquo;，将NV用作&amp;ldquo;较新版本&amp;rdquo;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d4f0ecf7b71d3b441643883dcf21bf4b1495bf95" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Better error reporting&lt;/em&gt;. Previously you could only see errors from the Gradle Daemon in separate log files. Now the Gradle Daemon returns all the information about errors directly and shows it in the Build tool window. This saves you both time and effort.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a04ea9849d8f6a36fd6cd2292526633888c4ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Component functions&lt;/em&gt; generated for data classes enable their use in &lt;a href=&quot;multi-declarations&quot;&gt;destructuring declarations&lt;/a&gt;:</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;为数据类生成的&lt;em&gt;组件函数&lt;/em&gt;可将其用于&lt;a href=&quot;multi-declarations&quot;&gt;解构声明&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="fa28c5b41cc068d0654083061ae70de3dac6d794" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Configure module and target settings&lt;/em&gt;, for example, the target JVM version, target template, and test framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c418bb5666878bb14d6e3e8fe48a36ecd607961" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Contracts&lt;/em&gt; allow a function to explicitly describe its behavior in a way which is understood by the compiler. Currently, two wide classes of cases are supported:</source>
          <target state="translated">&lt;em&gt;合同&lt;/em&gt;允许函数以编译器可以理解的方式显式描述其行为。当前，支持两种情况：</target>
        </trans-unit>
        <trans-unit id="a7bd76c53b54562067dbff0de767e7afb868c604" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Custom&lt;/em&gt; orders let you sort instances of any type in a way you like. Particularly, you can define an order for non-comparable objects or define an order other than natural for a comparable type. To define a custom order for a type, create a &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin/-comparator/index&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; for it. &lt;code&gt;Comparator&lt;/code&gt; contains the &lt;code&gt;compare()&lt;/code&gt; function: it takes two instances of a class and returns the integer result of the comparison between them. The result is interpreted in the same way as the result of a &lt;code&gt;compareTo()&lt;/code&gt; as is described above.</source>
          <target state="translated">&lt;em&gt;通过自定义&lt;/em&gt;订单，您可以按自己喜欢的方式对任何类型的实例进行排序。特别是，您可以为不可比较的对象定义顺序，或者为可比较的类型定义自然顺序以外的顺序。要为一种类型定义自定义顺序，请为其创建一个&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin/-comparator/index&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt;器。 &lt;code&gt;Comparator&lt;/code&gt; 包含 &lt;code&gt;compare()&lt;/code&gt; 函数：它接受一个类的两个实例，并返回它们之间比较的整数结果。如上所述，以与 &lt;code&gt;compareTo()&lt;/code&gt; 的结果相同的方式解释结果。</target>
        </trans-unit>
        <trans-unit id="b13944a5a494260519e59ca05924a52b544b7ab7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EduTools supports HTML and Markdown, so you can start editing with your preferred format, or even a combination of both.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;EduTools支持HTML和Markdown，因此您可以开始使用首选格式进行编辑，甚至可以将两者结合使用。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="659a4e8346b2622d43a76804d7f1bd757f51adca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Example:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9423d073f2288278e51d4da68026e17ed0f5c6b1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Exercise: try removing the &lt;code&gt;sleep()&lt;/code&gt; from the program above and see the result.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;练习：尝试从上面的程序中删除 &lt;code&gt;sleep()&lt;/code&gt; 并查看结果。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4bfae50e15f4c1aa6075a0095ee42b581d288812" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Explicit loading of script configurations&lt;/em&gt; for better performance. Previously, the changes you make to the build script were loaded automatically in the background. To improve the performance, we've disabled the automatic loading of build script configuration in 1.4.0. Now the IDE loads the changes only when you explicitly apply them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c51704cec4376067c7ccceefc40db5f7d4eee7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;If you have a course archive shared with you by your teacher or co-worker, use the &lt;strong&gt;Import Course&lt;/strong&gt; icon to open it. You can also log in to &lt;a href=&quot;https://stepik.org/&quot;&gt;Stepik&lt;/a&gt; with the corresponding link to see all the courses available to you on this MOOC platform.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;如果您的老师或同事与您共享课程档案，请使用&amp;ldquo; &lt;strong&gt;导入课程&amp;rdquo;&lt;/strong&gt;图标将其打开。您也可以使用相应的链接登录到&lt;a href=&quot;https://stepik.org/&quot;&gt;Stepik&lt;/a&gt;，以查看此MOOC平台上所有可用的课程。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="87b22b5d907267adae749869319e55244abf713c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;If you need additional files for the task, just add them and decide whether you want to make them visible to learners or not with the &lt;strong&gt;Course Creator -&amp;gt; Make Visible to / Hide from Student&lt;/strong&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;如果您需要其他文件来完成任务，只需添加它们，然后通过&lt;strong&gt;课程创建者-&amp;gt;对学生可见/对学生隐藏来&lt;/strong&gt;决定是否使它们对学习者&lt;strong&gt;可见&lt;/strong&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3fa9e7b7c13f20dc7dbb1017d8ccafb64b41c1d6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;If you need to enable the course creation functionality later, you can go to &lt;strong&gt;Help Menu -&amp;gt; Enable Course Creator Features&lt;/strong&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;如果以后需要启用课程创建功能，则可以转到&lt;strong&gt;帮助菜单-&amp;gt;启用课程创建者功能&lt;/strong&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="049b29b7fec5dec2dc83b37d60094f5eb72988a1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Keeping the Language Modern&lt;/em&gt; and &lt;em&gt;Comfortable Updates&lt;/em&gt; are among the fundamental principles in Kotlin Language Design. The former says that constructions which obstruct language evolution should be removed, and the latter says that this removal should be well-communicated beforehand to make code migration as smooth as possible.</source>
          <target state="translated">&lt;em&gt;保持语言现代化&lt;/em&gt;和&lt;em&gt;舒适更新&lt;/em&gt;是Kotlin语言设计的基本原则。前者说，应该删除妨碍语言发展的结构，而后者说，应该事先进行很好的沟通，以使代码迁移尽可能顺利。</target>
        </trans-unit>
        <trans-unit id="3576603244e907bdb431e808aa4334f0dfd3ee22" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Kotlin/Native&lt;/em&gt; follows the general tradition of Kotlin to provide excellent existing platform software interoperability. In the case of a native platform, the most important interoperability target is a C library. So &lt;em&gt;Kotlin/Native&lt;/em&gt; comes with a &lt;code&gt;cinterop&lt;/code&gt; tool, which can be used to quickly generate everything needed to interact with an external library.</source>
          <target state="translated">&lt;em&gt;Kotlin / Native&lt;/em&gt;遵循&lt;em&gt;Kotlin&lt;/em&gt;的传统，以提供出色的现有平台软件互操作性。对于本机平台，最重要的互操作性目标是C库。因此&lt;em&gt;Kotlin / Native&lt;/em&gt;附带了一个 &lt;code&gt;cinterop&lt;/code&gt; 工具，该工具可用于快速生成与外部库进行交互所需的一切。</target>
        </trans-unit>
        <trans-unit id="4502b76c7c436bd8529b424c4bd0b5753f045a0c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Kotlin/Native&lt;/em&gt; interoperability</source>
          <target state="translated">&lt;em&gt;Kotlin /本机&lt;/em&gt;互操作性</target>
        </trans-unit>
        <trans-unit id="4d5513502d6b608466dc3045dca786c40d13ab4f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Kotlin/Native&lt;/em&gt; interoperability with Swift/Objective-C</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;Swift / Objective-C与&lt;em&gt;Kotlin / Native的&lt;/em&gt;互操作性</target>
        </trans-unit>
        <trans-unit id="8f286d2c8f8e5b2a27bf2e5655ff3b65179fca09" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;List&lt;/em&gt; is an ordered collection with access to elements by indices &amp;ndash; integer numbers that reflect their position. Elements can occur more than once in a list. An example of a list is a sentence: it's a group of words, their order is important, and they can repeat.</source>
          <target state="translated">&lt;em&gt;List&lt;/em&gt;是一个有序集合，可以按索引访问元素-反映其位置的整数。元素可以在列表中出现多次。列表的一个例子是一个句子：它是一组单词，它们的顺序很重要，并且可以重复。</target>
        </trans-unit>
        <trans-unit id="e1186b4dcc3eb6eaf3c22facbf09f539aca82e85" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Local reference&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;当地参考&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="874fe0819e90b83c5e086ae59719653a39342041" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Map&lt;/em&gt; (or &lt;em&gt;dictionary&lt;/em&gt;) is a set of key-value pairs. Keys are unique, and each of them maps to exactly one value. The values can be duplicates. Maps are useful for storing logical connections between objects, for example, an employee's ID and their position.</source>
          <target state="translated">&lt;em&gt;Map&lt;/em&gt;（或&lt;em&gt;dictionary&lt;/em&gt;）是一组键值对。键是唯一的，并且每个键都恰好映射到一个值。这些值可以重复。映射对于存储对象之间的逻辑连接非常有用，例如，员工的ID及其位置。</target>
        </trans-unit>
        <trans-unit id="45c72534c997c0e4796b53d7f6858daa15ffa794" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NOTE&lt;/em&gt; for Java users: outer class does not see private members of its inner classes in Kotlin.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;Java用户的&lt;em&gt;注意事项&lt;/em&gt;：外部类在Kotlin中看不到其内部类的私有成员。</target>
        </trans-unit>
        <trans-unit id="63bb8ca23f3d7b64da126b72ed5f379b0c6c243d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NOTE&lt;/em&gt;: if you use a producer-object, say, &lt;code&gt;List&amp;lt;? extends Foo&amp;gt;&lt;/code&gt;, you are not allowed to call &lt;code&gt;add()&lt;/code&gt; or &lt;code&gt;set()&lt;/code&gt; on this object, but this does not mean that this object is &lt;strong&gt;immutable&lt;/strong&gt;: for example, nothing prevents you from calling &lt;code&gt;clear()&lt;/code&gt; to remove all items from the list, since &lt;code&gt;clear()&lt;/code&gt; does not take any parameters at all. The only thing guaranteed by wildcards (or other types of variance) is &lt;strong&gt;type safety&lt;/strong&gt;. Immutability is a completely different story.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：如果您使用生产者对象，请说 &lt;code&gt;List&amp;lt;? extends Foo&amp;gt;&lt;/code&gt; ，不允许您在此对象上调用 &lt;code&gt;add()&lt;/code&gt; 或 &lt;code&gt;set()&lt;/code&gt; ，但这并不意味着此对象是&lt;strong&gt;不可变的&lt;/strong&gt;：例如，没有什么阻止您调用 &lt;code&gt;clear()&lt;/code&gt; 从列表中删除所有项目，因为 &lt;code&gt;clear()&lt;/code&gt; 根本不接受任何参数。通配符（或其他类型的方差）唯一保证的是&lt;strong&gt;类型safety&lt;/strong&gt;。不变性是一个完全不同的故事。</target>
        </trans-unit>
        <trans-unit id="29c7a958d54264468bbbd1a360c401d54f68c450" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NPM Directory&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;NPM目录&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="04e35c0933eb4c2013ee62c6eb2bdb148591cf07" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Non-literal&lt;/em&gt; values of function types with and without receiver are interchangeable, so that the receiver can stand in for the first parameter, and vice versa. For instance, a value of type &lt;code&gt;(A, B) -&amp;gt; C&lt;/code&gt; can be passed or assigned where a &lt;code&gt;A.(B) -&amp;gt; C&lt;/code&gt; is expected and the other way around:</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;具有和不具有接收器的功能类型的&lt;em&gt;非文字&lt;/em&gt;值可以互换，因此接收器可以代表第一个参数，反之亦然。例如，可以在期望 &lt;code&gt;A.(B) -&amp;gt; C&lt;/code&gt; 地方传递或分配类型 &lt;code&gt;(A, B) -&amp;gt; C&lt;/code&gt; 的值，反之亦然：</target>
        </trans-unit>
        <trans-unit id="1856aab5e71190a041ae8f7628b67cb8336e5f54" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: We'll be using IntelliJ IDEA 2018.3 EAP, Android Studio 3.2, Kotlin 1.3.21, Xcode 10.0, macOS 10.14, Gradle 4.7&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注意：我们将使用IntelliJ IDEA 2018.3 EAP，Android Studio 3.2，Kotlin 1.3.21，Xcode 10.0，macOS 10.14，Gradle 4.7&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="59d2eea60da2292d1627875bc0a780b2c702f0f8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; Future versions of Kotlin may change the algorithm of this seeded number generator so that it will return a sequence of values different from the current one for a given seed.</source>
          <target state="translated">&lt;em&gt;注意：&lt;/em&gt; Kotlin的未来版本可能会更改此种子数生成器的算法，以便它将针对给定种子返回与当前值不同的一系列值。</target>
        </trans-unit>
        <trans-unit id="82a2e8cc61c35f195f06ee34ae26d3c7b12520e3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; Supporting the DWARF 2 specification means that the debugger tool recognizes Kotlin as C89, because before the DWARF 5 specification, there is no identifier for the Kotlin language type in specification.</source>
          <target state="translated">&lt;em&gt;注意：&lt;/em&gt;支持DWARF 2规范意味着调试器工具会将Kotlin识别为C89，因为在DWARF 5规范之前，规范中没有Kotlin语言类型的标识符。</target>
        </trans-unit>
        <trans-unit id="040794cbb429ac9d018163b6bf3519024398ddfe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt; that these operations, as well as all the others, are optimized for &lt;a href=&quot;basic-types&quot;&gt;Basic types&lt;/a&gt; and do not introduce overhead of function calls for them.</source>
          <target state="translated">&lt;em&gt;请注意&lt;/em&gt;，这些操作以及所有其他操作均针对&lt;a href=&quot;basic-types&quot;&gt;Basic类型&lt;/a&gt;进行了优化，并且不会为它们带来函数调用的开销。</target>
        </trans-unit>
        <trans-unit id="dcf5f234032d0969342f82f537e56b60b5323593" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt; (identity checks) are not overloadable, so no conventions exist for them.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;： &lt;code&gt;===&lt;/code&gt; 和 &lt;code&gt;!==&lt;/code&gt; （身份检查）不可重载，因此它们不存在约定。</target>
        </trans-unit>
        <trans-unit id="23bf6dc433043ea6e907335ee19d579468813fdb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: It is the caller's responsibility to close this reader.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：关闭此阅读器是呼叫者的责任。</target>
        </trans-unit>
        <trans-unit id="f7d0bfa2f21f7b6c88b288ddeadf76e1308af71d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: assignments are &lt;em&gt;NOT&lt;/em&gt; expressions in Kotlin.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：分配&lt;em&gt;不是&lt;/em&gt; Kotlin中的表达式。</target>
        </trans-unit>
        <trans-unit id="c4c3ba8402107ef8534d63b6077fa206109727b1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: on the JVM, if the object is an instance of a functional Java interface (i.e. a Java interface with a single abstract method), you can create it using a lambda expression prefixed with the type of the interface:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2fe6bb5cbc7bd540eb87f54d19fe6afc7ecaa7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: star-projections are very much like Java's raw types, but safe.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：星形投影非常类似于Java的原始类型，但是很安全。</target>
        </trans-unit>
        <trans-unit id="188f0e99ec34e6faf653bbe372fe89e0b1df1e99" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: the caller must close the underlying &lt;code&gt;BufferedReader&lt;/code&gt; when the iteration is finished; as the user may not complete the iteration loop (e.g. using a method like find() or any() on the iterator may terminate the iteration early.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：迭代完成时，调用者必须关闭底层的 &lt;code&gt;BufferedReader&lt;/code&gt; ；因为用户可能无法完成迭代循环（例如，在迭代器上使用诸如find（）或any（）之类的方法可能会提前终止迭代。</target>
        </trans-unit>
        <trans-unit id="a6077463a7821fabdfcddc51e1d079b428ff632c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PECS stands for Producer-Extends, Consumer-Super.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;PECS代表生产者扩展，消费者超级。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="54a74c96a98ecddb5948abfd3e630cacad78b580" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Preview the project structure&lt;/em&gt; directly on the main screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5f69854615ad613761dad73544b24609c7393e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;REPL&lt;/em&gt; (&lt;em&gt;Read-Eval-Print-Loop&lt;/em&gt;) is a tool for running Kotlin code interactively. REPL lets you evaluate expressions and code chunks without creating projects or even functions if you don't need them.</source>
          <target state="translated">&lt;em&gt;REPL&lt;/em&gt;（&lt;em&gt;Read-Eval-Print-Loop&lt;/em&gt;）是用于交互式运行Kotlin代码的工具。REPL使您可以评估表达式和代码块，而无需创建项目甚至函数，如果不需要它们的话。</target>
        </trans-unit>
        <trans-unit id="c7bc3c1ab985780a1fc4c91c14d2e580f6b4dcb6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Select the build system&lt;/em&gt; &amp;ndash; Gradle (Kotlin or Groovy DSL), Maven, or IntelliJ IDEA.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c41afda9e8f4dde07da7423fed2c21dc39684b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Select the project template&lt;/em&gt;, depending on what you&amp;rsquo;re trying to do. More templates will be added in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f02e22ce0405af99f3e74016a00bcf737333f9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Serialization&lt;/em&gt; is the process of converting data used by an application to a format that can be transferred over a network or stored in a database or a file. In turn, &lt;em&gt;deserialization&lt;/em&gt; is the opposite process of reading data from an external source and converting it into a runtime object. Together they are an essential part of most applications that exchange data with third parties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a2e517268ae0cd8fd535db48b8568de9aff4ed" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Set&lt;/em&gt; is a collection of unique elements. It reflects the mathematical abstraction of set: a group of objects without repetitions. Generally, the order of set elements has no significance. For example, an alphabet is a set of letters.</source>
          <target state="translated">&lt;em&gt;集合&lt;/em&gt;是唯一元素的集合。它反映了集合的数学抽象：一组没有重复的对象。通常，设置元素的顺序没有意义。例如，一个字母是一组字母。</target>
        </trans-unit>
        <trans-unit id="631c0992c7446670a06fcd8ad234a30589710f5d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Stateful&lt;/em&gt; operations require a significant amount of state, usually proportional to the number of elements in a sequence.</source>
          <target state="translated">&lt;em&gt;有状态&lt;/em&gt;操作需要大量状态，通常与序列中元素的数量成比例。</target>
        </trans-unit>
        <trans-unit id="5f6efe07b5f8e4e3dbf8a7561b88e3c9f1e4b50f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Stateless&lt;/em&gt; operations require no state and process each element independently, for example, &lt;a href=&quot;collection-transformations#mapping&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;collection-filtering&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt;. Stateless operations can also require a small constant amount of state to process an element, for example, &lt;a href=&quot;collection-parts&quot;&gt;&lt;code&gt;take()&lt;/code&gt; or &lt;code&gt;drop()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;无状态&lt;/em&gt;操作不需要状态，并且可以独立处理每个元素，例如&lt;a href=&quot;collection-transformations#mapping&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;collection-filtering&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt;。无状态操作还可能需要少量恒定的状态来处理元素，例如&lt;a href=&quot;collection-parts&quot;&gt; &lt;code&gt;take()&lt;/code&gt; 或 &lt;code&gt;drop()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9fa739ed36a0fe4aab74a04c23a9d5513447258f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Target&lt;/em&gt; is a part of the build responsible for compiling, testing, and packaging a piece of software aimed for one of the &lt;a href=&quot;mpp-supported-platforms&quot;&gt;supported platforms&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9535aa23ed3bfa64315b865b771c998439082b91" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The pre-1.4 version of this page is available &lt;a href=&quot;components-stability-pre-1.4&quot;&gt;here&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e5e63d3f187bbf7ba89581b75756435db1b274" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This material was written by &lt;a href=&quot;https://eldhuset.net/&quot;&gt;Aasmund Eldhuset&lt;/a&gt;; it is owned by &lt;a href=&quot;https://www.khanacademy.org/&quot;&gt;Khan Academy&lt;/a&gt; and is licensed for use under &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-sa/3.0/us/&quot;&gt;CC BY-NC-SA 3.0 US&lt;/a&gt;. Please note that this is not a part of Khan Academy's official product offering.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;该材料由&lt;a href=&quot;https://eldhuset.net/&quot;&gt;Aasmund Eldhuset撰写&lt;/a&gt; ; 它由&lt;a href=&quot;https://www.khanacademy.org/&quot;&gt;可汗学院&lt;/a&gt;（Khan Academy）拥有，并根据&lt;a href=&quot;https://creativecommons.org/licenses/by-nc-sa/3.0/us/&quot;&gt;CC BY-NC-SA 3.0 US&lt;/a&gt;许可使用。请注意，这不属于可汗学院的官方产品。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="910f279e582ad2e5260799349d5443d8807a642f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Thread confinement&lt;/em&gt; is an approach to the problem of shared mutable state where all access to the particular shared state is confined to a single thread. It is typically used in UI applications, where all UI state is confined to the single event-dispatch/application thread. It is easy to apply with coroutines by using a</source>
          <target state="translated">&lt;em&gt;线程限制&lt;/em&gt;是解决共享可变状态问题的一种方法，其中对特定共享状态的所有访问都限制在单个线程中。它通常用于UI应用程序中，其中所有UI状态都限于单个事件调度/应用程序线程。通过使用</target>
        </trans-unit>
        <trans-unit id="706b737eee14b7f5a8c622b04efa8e01738bc90d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Warning:&lt;/em&gt; having the &lt;strong&gt;kotlin.code.style&lt;/strong&gt; option set may modify the code style scheme during a project import and may change the code style settings.</source>
          <target state="translated">&lt;em&gt;警告：&lt;/em&gt;具有&lt;strong&gt;kotlin.code.style&lt;/strong&gt;选项设置可以修改项目导入过程中的代码样式方案，并可能更改代码样式设置。</target>
        </trans-unit>
        <trans-unit id="a093b969f7d46881837e46d103727f5ff74971ee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Zipping&lt;/em&gt; transformation is building pairs from elements with the same positions in both collections. In the Kotlin standard library, this is done by the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/zip&quot;&gt;&lt;code&gt;zip()&lt;/code&gt;&lt;/a&gt; extension function. When called on a collection or an array with another collection (array) as an argument, &lt;code&gt;zip()&lt;/code&gt; returns the &lt;code&gt;List&lt;/code&gt; of &lt;code&gt;Pair&lt;/code&gt; objects. The elements of the receiver collection are the first elements in these pairs. If the collections have different sizes, the result of the &lt;code&gt;zip()&lt;/code&gt; is the smaller size; the last elements of the larger collection are not included in the result. &lt;code&gt;zip()&lt;/code&gt; can also be called in the infix form &lt;code&gt;a zip b&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;压缩&lt;/em&gt;转换是从两个集合中具有相同位置的元素构建对。在Kotlin标准库中，这是通过&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/zip&quot;&gt; &lt;code&gt;zip()&lt;/code&gt; &lt;/a&gt;扩展功能完成的。当在集合或另一个集合（数组）的数组作为参数调用时， &lt;code&gt;zip()&lt;/code&gt; 返回 &lt;code&gt;List&lt;/code&gt; 的 &lt;code&gt;Pair&lt;/code&gt; 对象。接收器集合的元素是这些对中的第一个元素。如果集合的大小不同，则 &lt;code&gt;zip()&lt;/code&gt; 的结果为较小的大小；结果中不包含较大集合的最后一个元素。 &lt;code&gt;zip()&lt;/code&gt; 也可以以infix形式称为 &lt;code&gt;a zip b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e60cb37c6c11dfb2114a8e447aa980dfb15f65c9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;behavioral&lt;/em&gt;: a change is said to be behavioral-incompatible if the same program demonstrates different behavior before and after applying the change</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1bb9e860baf39c1bc9366e70ea73a5a6784e510" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;binary&lt;/em&gt;: two binary artifacts are said to be binary-compatible if interchanging them doesn't lead to loading or linkage errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0ae4f8623f1204b137519166f3471d061141c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;break&lt;/em&gt;. Terminates the nearest enclosing loop.</source>
          <target state="translated">&lt;em&gt;休息&lt;/em&gt;。终止最近的封闭循环。</target>
        </trans-unit>
        <trans-unit id="1fc9ae085051cd3bde519375f6ccb827b0ffca8a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;continue&lt;/em&gt;. Proceeds to the next step of the nearest enclosing loop.</source>
          <target state="translated">&lt;em&gt;继续&lt;/em&gt;。进入最近的封闭循环的下一步。</target>
        </trans-unit>
        <trans-unit id="2fae5fac1bba1876e2e3e8934d6a21a13581fb96" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;for&lt;/em&gt; loop iterates through anything that provides an iterator. This is equivalent to the &lt;code&gt;foreach&lt;/code&gt; loop in languages like C#. The syntax is as follows:</source>
          <target state="translated">&lt;em&gt;for&lt;/em&gt;循环遍历提供迭代器的所有内容。这等效于C＃等语言中的 &lt;code&gt;foreach&lt;/code&gt; 循环。语法如下：</target>
        </trans-unit>
        <trans-unit id="024028479e6e97eb843fc2a724c8de4a52bce8fe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;if&lt;/em&gt; branches can be blocks, and the last expression is the value of a block:</source>
          <target state="translated">&lt;em&gt;如果&lt;/em&gt;分支可以是块，并且最后一个表达式是块的值：</target>
        </trans-unit>
        <trans-unit id="dea9927b516af2bd807f59e8615ba5e0b60ac8c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;return&lt;/em&gt;. By default returns from the nearest enclosing function or &lt;a href=&quot;lambdas#anonymous-functions&quot;&gt;anonymous function&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;归还&lt;/em&gt;。默认情况下，从最近的封闭函数或&lt;a href=&quot;lambdas#anonymous-functions&quot;&gt;匿名函数返回&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="79e36a501f3884baadc23ec98360a985738c9bf1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;source&lt;/em&gt;: source-incompatible change stops code that used to compile fine (without errors or warnings) from compiling anymore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6818df73127c5514eddaf002c7f2a1095842a492" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stateful&lt;/em&gt; &amp;ndash; operations which require a significant amount of state, usually proportional to the number of elements in a sequence.</source>
          <target state="translated">&lt;em&gt;有状态的&lt;/em&gt; &amp;ndash;需要大量状态的操作，通常与序列中元素的数量成比例。</target>
        </trans-unit>
        <trans-unit id="9a383ab6a7ce61301658faa8f457297f7587f38f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stateless&lt;/em&gt; &amp;ndash; operations which require no state and process each element independently like &lt;a href=&quot;map&quot;&gt;kotlin.sequences.Sequence.map&lt;/a&gt;, &lt;a href=&quot;filter&quot;&gt;kotlin.sequences.Sequence.filter&lt;/a&gt;, or require a small constant amount of state to process an element, for example &lt;a href=&quot;take&quot;&gt;kotlin.sequences.Sequence.take&lt;/a&gt; or &lt;a href=&quot;drop&quot;&gt;kotlin.sequences.Sequence.drop&lt;/a&gt;;</source>
          <target state="translated">&lt;em&gt;无状态&lt;/em&gt; &amp;ndash;不需要状态并独立处理每个元素的操作，例如&lt;a href=&quot;map&quot;&gt;kotlin.sequences.Sequence.map&lt;/a&gt;，&lt;a href=&quot;filter&quot;&gt;kotlin.sequences.Sequence.filter&lt;/a&gt;或需要少量恒定状态的状态来处理元素，例如&lt;a href=&quot;take&quot;&gt;kotlin.sequences.Sequence。采取&lt;/a&gt;或&lt;a href=&quot;drop&quot;&gt;kotlin.sequences.Sequence.drop&lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="f8f3cb42bf6ed30e905b895543705f8c4b226960" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;try&lt;/em&gt; is an expression, i.e. it may have a return value:</source>
          <target state="translated">&lt;em&gt;try&lt;/em&gt;是一个表达式，即它可能具有返回值：</target>
        </trans-unit>
        <trans-unit id="cdb8cfd9e8f26746f68857221853208ee75316de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;val&lt;/em&gt; local variables - always except for &lt;a href=&quot;delegated-properties#local-delegated-properties&quot;&gt;local delegated properties&lt;/a&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee13dff39772084153285c9ab7db6f40f001178c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;val&lt;/em&gt; local variables - always except for &lt;a href=&quot;delegated-properties#local-delegated-properties-since-11&quot;&gt;local delegated properties&lt;/a&gt;;</source>
          <target state="translated">&lt;em&gt;val&lt;/em&gt;局部变量-始终（&lt;a href=&quot;delegated-properties#local-delegated-properties-since-11&quot;&gt;局部委托属性&lt;/a&gt;除外）；</target>
        </trans-unit>
        <trans-unit id="dbbca77ad89d50bc4392cdeb284bc14af782494b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;val&lt;/em&gt; properties - if the property is private or internal or the check is performed in the same &lt;a href=&quot;visibility-modifiers#modules&quot;&gt;module&lt;/a&gt; where the property is declared. Smart casts aren't applicable to open properties or properties that have custom getters;</source>
          <target state="translated">&lt;em&gt;val&lt;/em&gt;属性-如果属性是私有属性或内部属性，或者在声明该属性的&lt;a href=&quot;visibility-modifiers#modules&quot;&gt;模块&lt;/a&gt;中执行检查。智能转换不适用于开放式属性或具有自定义吸气剂的属性；</target>
        </trans-unit>
        <trans-unit id="cfba4354a071acc509eef85bb2cde7f8f572beb6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;var&lt;/em&gt; local variables - if the variable is not modified between the check and the usage, is not captured in a lambda that modifies it, and is not a local delegated property;</source>
          <target state="translated">&lt;em&gt;var&lt;/em&gt;局部变量-如果未在检查和使用之间修改该变量，则不会在对其进行修改的lambda中捕获该变量，并且该变量不是本地委托的属性；</target>
        </trans-unit>
        <trans-unit id="ebb85acb44a1d6bdf51052766b0c4f41e4e6c8e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;var&lt;/em&gt; properties - never (because the variable can be modified at any time by other code).</source>
          <target state="translated">&lt;em&gt;var&lt;/em&gt;属性-永远不会（因为该变量可以随时通过其他代码进行修改）。</target>
        </trans-unit>
        <trans-unit id="6a9ab26e9c7534ce384d0294db420889f6805e8f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;when&lt;/em&gt; can also be used as a replacement for an &lt;em&gt;if&lt;/em&gt;-&lt;em&gt;else&lt;/em&gt;&lt;em&gt;if&lt;/em&gt; chain. If no argument is supplied, the branch conditions are simply boolean expressions, and a branch is executed when its condition is true:</source>
          <target state="translated">&lt;em&gt;when&lt;/em&gt;也可以替代&lt;em&gt;if&lt;/em&gt; - &lt;em&gt;else &lt;/em&gt;&lt;em&gt;if&lt;/em&gt;链。如果未提供任何参数，则分支条件仅是布尔表达式，并且在条件为true时执行分支：</target>
        </trans-unit>
        <trans-unit id="7152778e403c1ac4ea488ef3a7338a2fed9e905b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;when&lt;/em&gt; matches its argument against all branches sequentially until some branch condition is satisfied. &lt;em&gt;when&lt;/em&gt; can be used either as an expression or as a statement. If it is used as an expression, the value of the satisfied branch becomes the value of the overall expression. If it is used as a statement, the values of individual branches are ignored. (Just like with &lt;em&gt;if&lt;/em&gt;, each branch can be a block, and its value is the value of the last expression in the block.)</source>
          <target state="translated">&lt;em&gt;当&lt;/em&gt;其参数与所有分支顺序匹配&lt;em&gt;时，&lt;/em&gt;直到满足某些分支条件为止。&lt;em&gt;when&lt;/em&gt;可以用作表达式或语句。如果将其用作表达式，则满足的分支的值将成为整个表达式的值。如果将其用作语句，则忽略各个分支的值。（与&lt;em&gt;if一样&lt;/em&gt;，每个分支可以是一个块，其值是该块中最后一个表达式的值。）</target>
        </trans-unit>
        <trans-unit id="c8e5919fb828e6c0e57dc91bc792845c60fbc090" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;when&lt;/em&gt; replaces the switch operator of C-like languages. In the simplest form it looks like this</source>
          <target state="translated">&lt;em&gt;when&lt;/em&gt;替换类C语言的switch运算符。以最简单的形式看起来像这样</target>
        </trans-unit>
        <trans-unit id="cadb0d35f3f46fa49ecd548b003d7faa1bbbf6f0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;while&lt;/em&gt; and &lt;em&gt;do&lt;/em&gt;..&lt;em&gt;while&lt;/em&gt; work as usual</source>
          <target state="translated">&lt;em&gt;而&lt;/em&gt;和&lt;em&gt;做&lt;/em&gt; .. &lt;em&gt;而&lt;/em&gt;照常工作</target>
        </trans-unit>
        <trans-unit id="e28d6974a292f791dfa9570cc846dfbebb1996ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Existentialism&quot;&gt;The Existential&lt;/a&gt; Transformation: Consumer in, Producer out!&lt;/strong&gt; :-)</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Existentialism&quot;&gt;存在的&lt;/a&gt;转型：消费者进入，生产者退出！&lt;/strong&gt;:-)</target>
        </trans-unit>
        <trans-unit id="1cc7be684355a6b5da3134dd2dfef6074029e8df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;mixing-java-kotlin-intellij&quot;&gt;Start adding Kotlin code to your project&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917bbdafbdd77694e8b94948c3e975f9df42e655" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;mixing-java-kotlin-intellij#converting-an-existing-java-file-to-kotlin-with-j2k&quot;&gt;Convert Java code to Kotlin&lt;/a&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13cd3975ed9d952faf27bb193361480231851f32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;AMD&lt;/strong&gt; is usually used on the client-side in the browser. The idea behind AMD is to load modules asynchronously, thus improving usability and performance.</source>
          <target state="translated">&lt;strong&gt;AMD&lt;/strong&gt;通常用于浏览器的客户端。AMD背后的想法是异步加载模块，从而提高可用性和性能。</target>
        </trans-unit>
        <trans-unit id="e2eee24e834eab0cf33cffaf4ba989326f94f7f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Access to a link task.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;访问链接任务。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f78c8faa5b7756989f20d6c8d362cd17ed051ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Access to a run task&lt;/strong&gt; (for executable binaries only). The &lt;code&gt;kotlin-multiplatform&lt;/code&gt; plugin creates run tasks for all executable binaries of host platforms (Windows, Linux and macOS). Names of such tasks are based on binary names, e.g. &lt;code&gt;runReleaseExecutable&amp;lt;target-name&amp;gt;&lt;/code&gt; or &lt;code&gt;runFooDebugExecutable&amp;lt;target-name&amp;gt;&lt;/code&gt;. A run task can be accessed using the &lt;code&gt;runTask&lt;/code&gt; property of an executable binary.</source>
          <target state="translated">&lt;strong&gt;访问运行任务&lt;/strong&gt;（仅适用于可执行二进制文件）。在 &lt;code&gt;kotlin-multiplatform&lt;/code&gt; 插件创建运行的主机平台（Windows，Linux和MacOS）所有可执行的二进制文件的任务。此类任务的名称基于二进制名称，例如 &lt;code&gt;runReleaseExecutable&amp;lt;target-name&amp;gt;&lt;/code&gt; 或 &lt;code&gt;runFooDebugExecutable&amp;lt;target-name&amp;gt;&lt;/code&gt; 。可以使用可执行二进制文件的 &lt;code&gt;runTask&lt;/code&gt; 属性访问运行任务。</target>
        </trans-unit>
        <trans-unit id="ffb694371c68f79144ae5e974cc0bac3a52aefda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Access to the output file.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;访问输出文件。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2cbc4c63ce2666097dc25aafd5454709270d0d5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Additions in Incremental Releases (AIR)&lt;/strong&gt;: things can be added in an incremental release, removals and changes of behavior should be avoided and announced in a previous incremental release if necessary.</source>
          <target state="translated">&lt;strong&gt;增量版本（AIR）&lt;/strong&gt;中的添加：可以在增量版本中添加内容，应避免行为的删除和更改，并在必要时在以前的增量版本中进行声明。</target>
        </trans-unit>
        <trans-unit id="96224092ad0f9935bb718b431dac8606016fc8cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;All other experimental components, by default&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a06f48618a6881b4838d68e7146e16182e8956" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;All other experimental features, by default&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;默认情况下，所有其他实验功能&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d933f856d867675239db5ab18e0a2b3a8735d27e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Alpha&lt;/strong&gt; means &quot;use at your own risk, expect migration issues&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73b60aede97b7d47d99bc8d4268962a141a28ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Author&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Author&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a884c1a4a2719a1b309626fcd958b7136a0ace1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available for&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;可以用来&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2966ec6b5c25a2f8038cd3c6c04b01f924baa06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Back to top&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f337cd80871727ab12c72ba4887ac78c2df00cf6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Beta&lt;/strong&gt; means &quot;you can use it, we'll do our best to minimize migration issues for you&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd7b8bcbb6b5bfbbdde7422b6f2abedf4a53bca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Big community&lt;/strong&gt;. Kotlin has great support and many contributions from the community, which is growing all over the world. According to Google, over 60% of the top 1000 apps on the Play Store use Kotlin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="385f83ef45a08a7675930a15034fe1f85ec3a398" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Binary kind&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;二进制种类&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="722077ac865869f68093d05a2efa78257b9ff18f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Block&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Block&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3b3a53ba35f5990e9c4874b45d2c45558caed8e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Code safety&lt;/strong&gt;. Less code and better readability lead to fewer errors. The Kotlin compiler detects these remaining errors, making the code safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60efc1de782ecd0c495005460eb05ffd095f88a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Comfortable Updates&lt;/strong&gt;. Incompatible changes, such as removing things from a language, may lead to painful migration from one version to the next if carried out without proper care. We will always announce such changes well in advance, mark things as deprecated and provide automated migration tools &lt;em&gt;before the change happens&lt;/em&gt;. By the time the language is changed we want most of the code in the world to be already updated and thus have no issues migrating to the new version.</source>
          <target state="translated">&lt;strong&gt;舒适的更新&lt;/strong&gt;。如果进行不适当的更改（例如从语言中删除内容），则不兼容的更改可能导致从一个版本到另一个版本的痛苦迁移。我们将始终提前提前宣布此类更改，将其标记为已弃用，并&lt;em&gt;在更改发生之前&lt;/em&gt;提供自动迁移工具。到语言更改时，我们希望世界上的大多数代码都已被更新，因此迁移到新版本时没有问题。</target>
        </trans-unit>
        <trans-unit id="049747c0d635b61ebd1c014e4ff40115c2052441" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Comment&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Comment&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="73265f8051428c195218a9b5dbfc5b2eecec31d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Common Kotlin&lt;/strong&gt; includes the language, core libraries, and basic tools. Code written in common Kotlin works everywhere on all platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a90f28a34743ebe55cbb12c9c066936868abe54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CommonJS&lt;/strong&gt; is the module system used on the server-side, and in particular with node.js. Node modules all abide by this definition. CommonJS modules can also be used in the browser via &lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;CommonJS&lt;/strong&gt;是服务器端，尤其是与node.js一起使用的模块系统。节点模块均遵守此定义。CommonJS模块也可以通过&lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt;在浏览器中使用。</target>
        </trans-unit>
        <trans-unit id="1195ec2bac12543bdb05c5a7c57c172f7bb32f0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Compatibility&lt;/strong&gt;: Kotlin is fully compatible with JDK 6, ensuring that Kotlin applications can run on older Android devices with no issues. The Kotlin tooling is fully supported in Android Studio and compatible with the Android build system.</source>
          <target state="translated">&lt;strong&gt;兼容性&lt;/strong&gt;：Kotlin与JDK 6完全兼容，确保Kotlin应用程序可以在较旧的Android设备上正常运行。Kotlin工具在Android Studio中得到完全支持，并与Android构建系统兼容。</target>
        </trans-unit>
        <trans-unit id="c2ae471fc641370e12b5409285bdaee90823a077" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Compilation Time&lt;/strong&gt;: Kotlin supports efficient incremental compilation, so while there's some additional overhead for clean builds, &lt;a href=&quot;https://medium.com/keepsafe-engineering/kotlin-vs-java-compilation-speed-e6c174b39b5d&quot;&gt;incremental builds are usually as fast or faster than with Java&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;编译时间&lt;/strong&gt;：Kotlin支持高效的增量编译，因此，尽管有一些额外的开销来进行干净的构建，但&lt;a href=&quot;https://medium.com/keepsafe-engineering/kotlin-vs-java-compilation-speed-e6c174b39b5d&quot;&gt;增量构建通常比Java快或快&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f38fcdc20544f4bd9f6e680c2daf1906f6c4fd80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Compilation.&lt;/strong&gt; Each binary is built on basis of some compilation available in the same target. The default value of this parameter depends on the binary type: &lt;code&gt;Test&lt;/code&gt; binaries are based on the &lt;code&gt;test&lt;/code&gt; compilation while other binaries - on the &lt;code&gt;main&lt;/code&gt; compilation.</source>
          <target state="translated">&lt;strong&gt;汇编。&lt;/strong&gt;每个二进制文件都是基于同一目标中可用的一些编译构建的。此参数的默认值取决于二进制类型： &lt;code&gt;Test&lt;/code&gt; 二进制基于 &lt;code&gt;test&lt;/code&gt; 编译，而其他二进制基于 &lt;code&gt;main&lt;/code&gt; 编译。</target>
        </trans-unit>
        <trans-unit id="12d7a969ac1d8b31d7d77682b70cb08343ef279a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Component&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0e2b8cdde361e8b49608bc34aac03b7733138fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component&lt;/strong&gt;: CLI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e8c8edaa1c402ad2b80ac47900c3e66397dc4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component&lt;/strong&gt;: Core Language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac230639a723040fdf0abd0778656ec5abd84a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component&lt;/strong&gt;: Core language</source>
          <target state="translated">&lt;strong&gt;组成部分&lt;/strong&gt;：核心语言</target>
        </trans-unit>
        <trans-unit id="86ac037868cf68ca90e30b152fc2674b768bdd25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component&lt;/strong&gt;: KAPT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227fc1c09b15a2df831a0a95dbc64fd964bede49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component&lt;/strong&gt;: Kotlin/JVM</source>
          <target state="translated">&lt;strong&gt;组件&lt;/strong&gt;：Kotlin / JVM</target>
        </trans-unit>
        <trans-unit id="c4156b7e189978b90a306e9b5c4d86e08d5a3803" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component&lt;/strong&gt;: kotlin-stdlib</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7570c0f126329c1405dbe8897b36472d6d303239" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component&lt;/strong&gt;: kotlin-stdlib (JVM)</source>
          <target state="translated">&lt;strong&gt;组件&lt;/strong&gt;：kotlin-stdlib（JVM）</target>
        </trans-unit>
        <trans-unit id="4000e9f93b9f3c271b29de49b2a9e0b10cab6782" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component&lt;/strong&gt;: other</source>
          <target state="translated">&lt;strong&gt;成分&lt;/strong&gt;：其他</target>
        </trans-unit>
        <trans-unit id="08d0f1462630b68dd58d9cdbdd352aa89e99d312" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Components&lt;/strong&gt;: Core language</source>
          <target state="translated">&lt;strong&gt;组成部分&lt;/strong&gt;：核心语言</target>
        </trans-unit>
        <trans-unit id="cf888ed7691154a247cd777f530d9b8b0a08dd98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Components&lt;/strong&gt;: Kotlin/JVM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db8723ef2c0043bd70e12ab4791d09224937133" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a new array of the specified &lt;a href=&quot;size#kotlin.BooleanArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;构造函数&lt;/strong&gt;创建一个具有指定&lt;a href=&quot;size#kotlin.BooleanArray%24size&quot;&gt;大小&lt;/a&gt;的新数组，并将所有元素初始化为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2fa5199c1b27f8f9a99026303ae0a4378faad501" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a new array of the specified &lt;a href=&quot;size#kotlin.ByteArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">&lt;strong&gt;构造函数&lt;/strong&gt;创建一个具有指定&lt;a href=&quot;size#kotlin.ByteArray%24size&quot;&gt;大小&lt;/a&gt;的新数组，并将所有元素初始化为零。</target>
        </trans-unit>
        <trans-unit id="bd6cf7b5ab4b4150353ed0a9e4a7cb00caff108d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a new array of the specified &lt;a href=&quot;size#kotlin.CharArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to null char (`\u0000').</source>
          <target state="translated">&lt;strong&gt;构造函数&lt;/strong&gt;创建一个指定&lt;a href=&quot;size#kotlin.CharArray%24size&quot;&gt;大小&lt;/a&gt;的新数组，所有元素均初始化为null char（`\ u0000'）。</target>
        </trans-unit>
        <trans-unit id="c4a7d8f52ac7620beff100e289d8b02da39d85b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a new array of the specified &lt;a href=&quot;size#kotlin.DoubleArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">&lt;strong&gt;构造函数&lt;/strong&gt;创建一个具有指定&lt;a href=&quot;size#kotlin.DoubleArray%24size&quot;&gt;大小&lt;/a&gt;的新数组，并将所有元素初始化为零。</target>
        </trans-unit>
        <trans-unit id="272ce437857108ed3f51611ec719d9d62bce42e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a new array of the specified &lt;a href=&quot;size#kotlin.FloatArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">&lt;strong&gt;构造函数&lt;/strong&gt;创建一个具有指定&lt;a href=&quot;size#kotlin.FloatArray%24size&quot;&gt;大小&lt;/a&gt;的新数组，并将所有元素初始化为零。</target>
        </trans-unit>
        <trans-unit id="39b826b50a38a1d30be53e1f28766e61502287c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a new array of the specified &lt;a href=&quot;size#kotlin.IntArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">&lt;strong&gt;构造函数&lt;/strong&gt;创建一个具有指定&lt;a href=&quot;size#kotlin.IntArray%24size&quot;&gt;大小&lt;/a&gt;的新数组，并将所有元素初始化为零。</target>
        </trans-unit>
        <trans-unit id="6d03fb49a23f0ce8c38e59382849faa4a71f484c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a new array of the specified &lt;a href=&quot;size#kotlin.LongArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">&lt;strong&gt;构造函数&lt;/strong&gt;创建一个具有指定&lt;a href=&quot;size#kotlin.LongArray%24size&quot;&gt;大小&lt;/a&gt;的新数组，并将所有元素初始化为零。</target>
        </trans-unit>
        <trans-unit id="813f2bea41ba6fef32ee0e8bc42727148fe8fccc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a new array of the specified &lt;a href=&quot;size#kotlin.ShortArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">&lt;strong&gt;构造函数&lt;/strong&gt;创建一个具有指定&lt;a href=&quot;size#kotlin.ShortArray%24size&quot;&gt;大小&lt;/a&gt;的新数组，并将所有元素初始化为零。</target>
        </trans-unit>
        <trans-unit id="335d26c199adf06488a8913460409837d4075696" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a new instance of Pair.</source>
          <target state="translated">&lt;strong&gt;构造函数&lt;/strong&gt;创建Pair的新实例。</target>
        </trans-unit>
        <trans-unit id="773b394be7f65a95c85016d615a1c621ce6c3bc4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a regular expression from the specified &lt;a href=&quot;pattern#kotlin.text.Regex%24pattern&quot;&gt;pattern&lt;/a&gt; string and the specified set of &lt;a href=&quot;options#kotlin.text.Regex%24options&quot;&gt;options&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;构造函数&lt;/strong&gt;根据指定的&lt;a href=&quot;pattern#kotlin.text.Regex%24pattern&quot;&gt;模式&lt;/a&gt;字符串和指定的&lt;a href=&quot;options#kotlin.text.Regex%24options&quot;&gt;选项&lt;/a&gt;集创建一个正则表达式。</target>
        </trans-unit>
        <trans-unit id="2d15192253b231c1119607339e0a2590a4bb77e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a version from all three components.</source>
          <target state="translated">&lt;strong&gt;构造函数&lt;/strong&gt;从所有三个组件创建一个版本。</target>
        </trans-unit>
        <trans-unit id="9569df5f31e8b5de73e6d92b548ff29f2d98a7b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; creates an empty bit set with the specified &lt;a href=&quot;size&quot;&gt;size&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;构造函数&lt;/strong&gt;创建一个具有指定&lt;a href=&quot;size&quot;&gt;大小&lt;/a&gt;的空位集</target>
        </trans-unit>
        <trans-unit id="e0096f245c9fae0805031521bff1005fcb0b2f31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Copy runtime library files&lt;/strong&gt;. Indicates in what subfolder we want the &lt;code&gt;kotlin.js&lt;/code&gt; library to be output to. By default it is &lt;code&gt;lib&lt;/code&gt; which is why in the HTML we are referencing this path.</source>
          <target state="translated">&lt;strong&gt;复制运行时库文件&lt;/strong&gt;。指示我们要将 &lt;code&gt;kotlin.js&lt;/code&gt; 库输出到哪个子文件夹中。默认情况下，它是 &lt;code&gt;lib&lt;/code&gt; ，这就是为什么我们在HTML中引用此路径的原因。</target>
        </trans-unit>
        <trans-unit id="50aa82b515ea8664d2947a78b60a172a13e35153" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Create libraries for use with JavaScript and TypeScript&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413b10e9ad8da201e3bf3c2f9c2446ab5e5202bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Add @OverrideInit to constructor to make it override Objective-C initializer</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;将@OverrideInit添加到构造函数以使其覆盖Objective-C初始化程序</target>
        </trans-unit>
        <trans-unit id="5495d6249faa3345987d526828cf64fa7940c2bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Comparing one TimeMark to another is not a well defined operation because these time marks could have been obtained from the different time sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0736936b91735114bda7bb6b0fb7732a20bee59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Deinit runtime can not be called from Kotlin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe9988f3541deb48645bc1a182cbce78acdbd249" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; DeprecationLevel.ERROR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf56d13cf05b3f392462e1af11305676e27e873" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Do not use Synchronized annotation in pure Kotlin/JS code</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;请勿在纯Kotlin / JS代码中使用同步标注</target>
        </trans-unit>
        <trans-unit id="452fddb0e520391a9f67bc97f96be7bea4bd264d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Do not use Synchronized annotation in pure Kotlin/Native code</source>
          <target state="translated">&lt;strong&gt;已弃用：&lt;/strong&gt;请勿在纯Kotlin /本机代码中使用同步注释</target>
        </trans-unit>
        <trans-unit id="dfab3c6713337be01b7128770be5faa0fa8ff4f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Do not use Volatile annotation in pure Kotlin/JS code</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;请勿在纯Kotlin / JS代码中使用Volatile注释</target>
        </trans-unit>
        <trans-unit id="48cec979b523be2447f63e1e317c3d78c8ec346b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Do not use Volatile annotation in pure Kotlin/Native code</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;请勿在纯Kotlin /本机代码中使用Volatile注释</target>
        </trans-unit>
        <trans-unit id="124cd8c088a4d9e05846a4eca19dd5ef8b9a8766" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Obtaining StringBuilder capacity is not supported in JS and common code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559e721a736926a300ebcc7d6dc1c926811e5bd0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Please use OptIn instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2831ac0f29a6378cfef9580e0ca30694714dfa18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Please use RequiresOptIn instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe0bb35ec6506cafc1fd50dc083e5353ead7ec6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Provided for binary compatibility</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;提供二进制兼容性</target>
        </trans-unit>
        <trans-unit id="ca78ebad72c20e890b57323de505f0e2105c31b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Provided for binary compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2578c90c51f9f36a0bf238df592a87f7c1792c7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Subtracting one TimeMark from another is not a well defined operation because these time marks could have been obtained from the different time sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1231e7a7a6d5a83c2cd105b0352613d2c669daac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Synchronization on any object is not supported on every platform and will be removed from the common standard library soon.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;在每个平台上都不支持任何对象上的同步，并且将很快从公共标准库中删除该同步。</target>
        </trans-unit>
        <trans-unit id="ffd4353ef19d33350d4aa9d2fd4378d74dbb2074" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; The function has unclear behavior when searching for NaN or zero values and will be removed soon. Use 'any { it == element }' instead to continue using this behavior, or '.asList().contains(element: T)' to get the same search behavior as in a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a745254957b2bd9ffcaf2e1156c37a91215e94b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; The function has unclear behavior when searching for NaN or zero values and will be removed soon. Use 'indexOfFirst { it == element }' instead to continue using this behavior, or '.asList().indexOf(element: T)' to get the same search behavior as in a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278725b4c40e4f336bae6100d1f9d92d3269454c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; The function has unclear behavior when searching for NaN or zero values and will be removed soon. Use 'indexOfLast { it == element }' instead to continue using this behavior, or '.asList().lastIndexOf(element: T)' to get the same search behavior as in a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc517c99cd12bbe249e547a509da671c3083b349" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.browser.document' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3870ff86e554adbc42667ceedd6757e678cd2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.browser.localStorage' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a26de7c4aae5e8cfbe1fd9dbfa9f40f5cf9567" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.browser.sessionStorage' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4210da61f981c9390a6ed1e0c923b7b8d977d2df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.browser.window' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582ef35611623e95414c803801d0135efc8b68d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.dom.addClass' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf6b5475666fc994fe1ba52ec87e7e6be5656fff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.dom.appendElement' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02dae459302904b61aa9930ca5dde3b591e8c2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.dom.appendText' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f0f1e642b9a004c5676b67582ad25dec7ba4a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.dom.clear' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2479ed858410667168091e54a544453c88ce72f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.dom.createElement' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97de723af8b83f62fb28bddeec519e63e096ce4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.dom.hasClass' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863904be69d10014377a0aeff01e3a8c04fa1812" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.dom.isElement' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ecef05f3c31326612204a89ab68b269cc5906d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.dom.isText' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29768b43201de0dafe0161b9eefee0c551b60f81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.dom.removeClass' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f426529b7537c1615991e33fc1bd17f18c166bbe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This `contains` operation mixing integer and floating point arguments has ambiguous semantics and is going to be removed.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;此包含混合整数和浮点参数的操作包含语义不明确的内容，将被删除。</target>
        </trans-unit>
        <trans-unit id="752efaab5e33671c902096353a2f29f2232a126d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This exception type is not supposed to be thrown or caught in common code and will be removed from kotlin-stdlib-common soon.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;不应在通用代码中引发或捕获此异常类型，并将很快从kotlin-stdlib-common中将其删除。</target>
        </trans-unit>
        <trans-unit id="f6c8a88fa21880c017378826441e400ceb55798c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This function creates a type which rarely makes sense for generic classes. For example, such type can only be used in signatures of members of that class. Use starProjectedType or createType() for clearer semantics.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;此函数创建的类型对于通用类几乎没有意义。例如，这种类型只能在该类成员的签名中使用。使用starProjectedType或createType（）获得更清晰的语义。</target>
        </trans-unit>
        <trans-unit id="27adc858a9e3080b84374734075c7b6f23d635f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This function will become internal soon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972e494f35a43863c58ad6515b0c4ee14e2c6ddc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Unclear conversion. To achieve the same result convert to Int explicitly and then to Byte.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633efd15e0b8e129e8d106b812d46254d765a59c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Unclear conversion. To achieve the same result convert to Int explicitly and then to Short.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6bbf8f9eac350e7835725133adee88cb6daeb2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use 'iterator { }' function instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;请改用'iterator {}'函数。</target>
        </trans-unit>
        <trans-unit id="447e915d652609535feb5b69ab9a433b444d89d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use 'java' property to get Java class corresponding to this Kotlin class or cast this instance to Any if you really want to get the runtime Java class of this implementation of KClass.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;如果确实要获取此KClass实现的运行时Java类，请使用'java'属性获取与此Kotlin类相对应的Java类，或将此实例转换为Any。</target>
        </trans-unit>
        <trans-unit id="8bc948514b2df4ec7b49af73847c66c422a6ed1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use 'sequence { }' function instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;请改用'sequence {}'函数。</target>
        </trans-unit>
        <trans-unit id="124528a176dd411bf469d0f779b788eae05e15e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use 'waitForMultipleFutures' top-level function instead</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改用'waitForMultipleFutures'顶层函数</target>
        </trans-unit>
        <trans-unit id="2a85d8342cdd2702e8a490e130e9e49ba012a310" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use .asCPointer() instead</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;改用.asCPointer（）</target>
        </trans-unit>
        <trans-unit id="d628c9472dae68c71dcb8a3c4a8fe4832e2c9737" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use AbstractDoubleTimeSource instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5994f4f9b4f453fb92f7aab7bf2379d479c15af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use AbstractLongTimeSource instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1b654b2f837e72b5dbf3da907e460ec7e7cbf2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use CPointer&amp;lt;*&amp;gt;.asStableRef&amp;lt;T&amp;gt;() instead</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改用CPointer &amp;lt;*&amp;gt;。asStableRef &amp;lt;T&amp;gt;（）</target>
        </trans-unit>
        <trans-unit id="067963984d1538fb8cf4585fd3f2eef9d940063e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use CharArray.concatToString() instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79d693343f01d88a1e0c032b6511380e8930c0c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use CharArray.concatToString(startIndex, endIndex) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25a473098f7a80883c160d9eacf2827c645bab6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use CharacterCodingException instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3a310a1e69ca97ad036df74b2c5f423341adda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use Default companion object instead</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改为使用默认伴随对象</target>
        </trans-unit>
        <trans-unit id="8d4675c274c8185774a3094b54ffa3d942e381ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use Kotlin compiler 1.4 to avoid deprecation warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d774f0846c9725096d6868d8250a661e8c97f71" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use Random.nextDouble instead</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;改用Random.nextDouble</target>
        </trans-unit>
        <trans-unit id="cca46c363e63f0970ef54a11a4bf2ba63e633ff7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use SequenceScope class instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改用SequenceScope类。</target>
        </trans-unit>
        <trans-unit id="17d5f606b3230bf8deaf75eb0b98aaaae44c6e23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use StableRef&amp;lt;T&amp;gt; instead</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改用StableRef &amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="198969f4d1f7a1e632343501e8f1c76d1678a6e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use TestTimeSource instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33c6ca98ea935c1d4d1bb2eb267778cfca3a127" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use TimeMark class instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2445d25157a474d5c96264996b3023d8f9740181" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use TimeSource interface instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59f52c18e5b2a0ac38d22262aecb80515c4fa92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use TimeSource.Monotonic instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbc2696154545aa9ace3d52789ca4ac09a165c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use `definedExternally` instead</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改用`definedExternally`</target>
        </trans-unit>
        <trans-unit id="ba5914429156c8fc516a3f59beaf39b64a5e9cf8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use `external` modifier instead</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改用`external`修饰符</target>
        </trans-unit>
        <trans-unit id="1f857ecc1dd66cd639969898347c01fae9a28e9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use append(value: Any?) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="343a61955021772235db372dce379aac83866e90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use append(value: Boolean) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b61ab698760632d80ca91d401296e669d931a09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use append(value: Byte) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25701903e5d30d3840ce8dfc6a2d773b74c3362d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use append(value: CharArray) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba65c631761151bff99ad8362197b3ea396ba72d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use append(value: Double) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1c3b3cf07d0b61bfd26c244f57c39551c5be57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use append(value: Float) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2acf4a68ef1b9a65236d2498aa56ffd68daa8a88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use append(value: Int) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199766d9e2e6c78ec55b93183e76309d553a1886" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use append(value: Long) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8c41242392ff3b518c95639eaeabb5c0750c42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use append(value: Short) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60eb3d11002d0438e69500aba39b6d5f5441d0f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use append(value: String) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e33868eb7d33453832a7ce80b95da88c850b16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use appendLine instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f68cb6b560d6c931fa6de43e193643b729bc27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use appendLine instead. Note that the new method always appends the line feed character '\\n' regardless of the system line separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d5cf286d92237119359612e84665c034969d7c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use class literal and extension property `js` instead.</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;改用类文字和扩展属性`js`。</target>
        </trans-unit>
        <trans-unit id="da538116b540e6c7dee9ed5032c7bb86ec22658b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use deleteAt(index: Int) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de5f60695de863a66440239847cc9793b2b34e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use encodeToByteArray instead</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改为使用encodeToByteArray</target>
        </trans-unit>
        <trans-unit id="70c9fe785ea0885787a40100e97dad6bc208f120" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use ensureCapacity(minimumCapacity: Int) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc9ed721d2dc4d3944528cb9641d6cef4c21af83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use inline extension function with body using dynamic</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;将内联扩展功能与主体配合使用动态</target>
        </trans-unit>
        <trans-unit id="79068e8a1e1d72a8c0da4e0449af0c0a02f627d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use insert(index: Int, value: Char) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2ea5fecd93a4f72dd9ec5dc5001c2bb7f8d9df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use insert(index: Int, value: CharArray) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf090af088129146cebd5d1af01d0fd91cd5953" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use insert(index: Int, value: CharSequence?) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7be321e9209215fea6e7477789b13f571e1b5a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use insert(index: Int, value: String) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb39fac120dfa3c1ae67dbb4638085a37abe875" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use insertRange(index: Int, csq: CharSequence, start: Int, end: Int) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c35b94f395f24afe7b8a4a286110b23a581b2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.PI instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改为使用kotlin.math.PI。</target>
        </trans-unit>
        <trans-unit id="33efd05b987cdb7650f554bb37295f9999c0a2cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.abs instead.</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;改用kotlin.math.abs。</target>
        </trans-unit>
        <trans-unit id="f1cb5563ed7231c2dab46e4f16297df892fb2e3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.acos instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;请改用kotlin.math.acos。</target>
        </trans-unit>
        <trans-unit id="996e58906ac50a84be19234bc9cde02bf073f083" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.asin instead.</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;改用kotlin.math.asin。</target>
        </trans-unit>
        <trans-unit id="66a5d5ed239001acbd826d1714135e01284998ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.atan instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;请改用kotlin.math.atan。</target>
        </trans-unit>
        <trans-unit id="fa95d4bb6ea3af355c890298bd2a4a41700b68b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.atan2 instead.</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;改用kotlin.math.atan2。</target>
        </trans-unit>
        <trans-unit id="60143061b29098b9cb54a512540ac43d6f76ed28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.ceil instead.</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;改用kotlin.math.ceil。</target>
        </trans-unit>
        <trans-unit id="7c3f82eb454195f9e9e74a70809de173e944ec2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.cos instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;请改用kotlin.math.cos。</target>
        </trans-unit>
        <trans-unit id="bdcd7c3509a842b932a3f5944db27c5018dc94b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.exp instead.</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;改用kotlin.math.exp。</target>
        </trans-unit>
        <trans-unit id="8000773b5e7d1f1f4a888e5b5b80592a088ff6c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.floor instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;请改用kotlin.math.floor。</target>
        </trans-unit>
        <trans-unit id="332d44171961144416b8a0033b7de5cccca96db0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.ln instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;请改用kotlin.math.ln。</target>
        </trans-unit>
        <trans-unit id="b2debbe1367cb0ab7c89bd4b93284a48bcd20a66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.pow instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;请改用kotlin.math.pow。</target>
        </trans-unit>
        <trans-unit id="cdfcdc89fe10b37e662854d2fc47c6d1e309ead4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.round instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;请改用kotlin.math.round。</target>
        </trans-unit>
        <trans-unit id="e419fa79027d809dbd2513aa857fe253bc15eaaf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.sin instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;请改用kotlin.math.sin。</target>
        </trans-unit>
        <trans-unit id="7b26bc4743b50acba4d04d18114fa6c724fbf393" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.sqrt instead.</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;改用kotlin.math.sqrt。</target>
        </trans-unit>
        <trans-unit id="73d824d8a988bfdb22175bdfe46aa11970bc50ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.tan instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;请改用kotlin.math.tan。</target>
        </trans-unit>
        <trans-unit id="3f81bb81dc4522f868d63b9c11f5d024628ab3ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlinx.cinterop.StableRef instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba205c7208586e4882bc719e84b7ed35ffc7eb5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use maxByOrNull instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a0fcaa718d82676c10da684495162f92d28ffd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use maxOf or kotlin.math.max instead</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;改用maxOf或kotlin.math.max</target>
        </trans-unit>
        <trans-unit id="e5c37c29d7079d70b902f0b3d2ba71f9e5d50b03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use maxOrNull instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b9ae1566ac6c322d9d63ef0c431a0fdb40d893" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use maxWithOrNull instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817d8cd7ba2edefb9dccd026a0f72f2ee0418f94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use minByOrNull instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c145ae9a2a47596ce6ea35f59e6c3bd752792b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use minOf or kotlin.math.min instead</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;改用minOf或kotlin.math.min</target>
        </trans-unit>
        <trans-unit id="224c4555be6701deb5b679eb2dc5e6421af6cf62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use minOrNull instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbbb7dc92f15e8cc9418f1ea7ac371c56c4757b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use minWithOrNull instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d5036d3460e6073e9a138258075298f58729d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use parameters named startIndex and endIndex.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;使用名为startIndex和endIndex的参数。</target>
        </trans-unit>
        <trans-unit id="b5ee97845fb9246123c98710d4231785a233821e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use plain Kotlin cast</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;使用普通Kotlin演员表</target>
        </trans-unit>
        <trans-unit id="1324034f6ba898980547749a66a22ed7890795cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use plain Kotlin cast of NSString to String</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;将NSString的普通Kotlin强制转换为String</target>
        </trans-unit>
        <trans-unit id="f708de9bf5260b05b994eae510ba0be9bfd046e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use plain Kotlin cast of String to NSString</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;使用String的普通Kotlin强制转换为NSString</target>
        </trans-unit>
        <trans-unit id="05de66863fa6c31537422d7c01f621dc7d7967c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use readBytes() overload without estimatedSize parameter</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;使用readBytes（）重载，而不需要estimateSize参数</target>
        </trans-unit>
        <trans-unit id="76f6f68dc5115acc51fbd095f0f8455c672005b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use rem(other) instead</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;改用rem（other）</target>
        </trans-unit>
        <trans-unit id="1e53fcbffd3b20605c758a965a8df3af90dae79d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use removeAt(index) instead.</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;改用removeAt（index）。</target>
        </trans-unit>
        <trans-unit id="19dc9e335e80d381071e635e1d1b594f3355d662" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use runningReduce instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df9b93d448842a7a67f8aa4979a46b7e0d03e63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use runningReduceIndexed instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d9af52f1c7086543eac901e192c343a71d58a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use set(index: Int, value: Char) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f053c22ea9c2c0e21170bbe69dccb986fdf6d509" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use setLength(newLength: Int) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7829b593479752cbfa034815c42df9f02b2f7d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use sortWith(Comparator(comparison)) instead.</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;改用sortWith（Comparator（comparison））。</target>
        </trans-unit>
        <trans-unit id="24aed9d46b571a7cc738f91897e763352bd3582e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use sortWith(comparator) instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改用sortWith（comparator）。</target>
        </trans-unit>
        <trans-unit id="0a816493e0174c04dc5c78864f25874e05a19183" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use toDouble() instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改为使用toDouble（）。</target>
        </trans-unit>
        <trans-unit id="b5615a77c7b7d1acb10a2e712e5261dc01e50710" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use toInt() instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改为使用toInt（）。</target>
        </trans-unit>
        <trans-unit id="2ba0440eaf794b635c91c1633c00222cd8ba2f2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use toInt(radix) instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改为使用toInt（radix）。</target>
        </trans-unit>
        <trans-unit id="fe2aa2549b9aacc894a090f4cbd3a03c78b0d8d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use toKString or decodeToString instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972da3dde07ec4f64208ca86fd24c347853620f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use top-level functions from kotlin.math package instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;而是使用kotlin.math包中的顶级功能。</target>
        </trans-unit>
        <trans-unit id="bdd361edba9dde53887c45e30a98ecc6839d5370" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecation cycle&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;弃用周期&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="d583721fdee9eda617809d6d5f0932df533809dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Description&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2733ed7980a78e86d57cac9b66075d5f17c658c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Easy learning&lt;/strong&gt;. Kotlin is very easy to learn, especially for Java developers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92262314d78850fea262f10d209039e6c457c391" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Entry point&lt;/strong&gt; (for executable binaries only). By default the entry point for Kotlin/Native programs is a &lt;code&gt;main&lt;/code&gt; function located in the root package. This setting allows one to change this default and use a custom function as an entry point. For example it can be used to move the &lt;code&gt;main&lt;/code&gt; function from the root package.</source>
          <target state="translated">&lt;strong&gt;入口点&lt;/strong&gt;（仅适用于可执行二进制文件）。默认情况下，Kotlin / Native程序的入口点是位于根包中的 &lt;code&gt;main&lt;/code&gt; 功能。此设置允许更改此默认设置，并将自定义功能用作入口点。例如，可以使用它从根包中移出 &lt;code&gt;main&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="92d1e118dbb0f9f2b23eb643687f7182d684cde2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Experimental&lt;/strong&gt; means &quot;try it only in toy projects&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b0edbe9afeaffdc2715a7389f848e4f07af145" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expressiveness&lt;/strong&gt;: Kotlin's innovative language features, such as its support for &lt;a href=&quot;type-safe-builders&quot;&gt;type-safe builders&lt;/a&gt; and &lt;a href=&quot;delegated-properties&quot;&gt;delegated properties&lt;/a&gt;, help build powerful and easy-to-use abstractions.</source>
          <target state="translated">&lt;strong&gt;表现力&lt;/strong&gt;：Kotlin的创新语言功能，例如对&lt;a href=&quot;type-safe-builders&quot;&gt;类型安全的构建器&lt;/a&gt;和&lt;a href=&quot;delegated-properties&quot;&gt;委托属性的支持&lt;/a&gt;，有助于构建功能强大且易于使用的抽象。</target>
        </trans-unit>
        <trans-unit id="dd290df5d8dd8a41cfaa050e0a1c2c4990ee7f7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Factory method&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;工厂方法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1be273f75e3102b5d515c1d34c343a20d144ccb5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Feedback Loop&lt;/strong&gt;. Going through deprecation cycles requires significant effort, so we want to minimize the number of incompatible changes we'll be making in the future. Apart from using our best judgement, we believe that trying things out in real life is the best way to validate a design. Before casting things in stone we want them battle-tested. This is why we use every opportunity to make early versions of our designs available in production versions of the language, but in one of the &lt;em&gt;pre-stable&lt;/em&gt; statuses: &lt;a href=&quot;components-stability&quot;&gt;Experimental, Alpha, or Beta&lt;/a&gt;. Such features are not stable, they can be changed at any time, and the users that opt into using them do so explicitly to indicate that they are ready to deal with the future migration issues. These users provide invaluable feedback that we gather to iterate on the design and make it rock-solid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01da2bfca3b0c6cd5afd856a346c9af2ed22f57a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Feedback Loop&lt;/strong&gt;. Going through deprecation cycles requires significant effort, so we want to minimize the number of incompatible changes we'll be making in the future. Apart from using our best judgement, we believe that trying things out in real life is the best way to validate a design. Before casting things in stone we want them battle-tested. This is why we use every opportunity to make early versions of our designs available in production versions of the language, but with &lt;em&gt;experimental&lt;/em&gt; status. Experimental features are not stable, they can be changed at any time, and the users that opt into using them do so explicitly to indicate that they are ready to deal with the future migration issues. These users provide invaluable feedback that we gather to iterate on the design and make it rock-solid.</source>
          <target state="translated">&lt;strong&gt;反馈回路&lt;/strong&gt;。经历弃用周期需要付出巨大的努力，因此我们希望减少将来将要进行的不兼容更改的数量。除了使用我们最好的判断，我们相信在现实生活中尝试一些事情是验证设计的最佳方法。在将事物铸成石头之前，我们希望它们经受考验。这就是为什么我们会利用一切机会使设计的早期版本在该语言的生产版本中可用，但仍处于&lt;em&gt;实验&lt;/em&gt;状态。实验性功能不稳定，可以随时更改，选择使用这些功能的用户会明确表示这样做是为了表明他们已准备好应对将来的迁移问题。这些用户提供了宝贵的反馈，我们收集这些反馈来迭代设计并使其坚如磐石。</target>
        </trans-unit>
        <trans-unit id="84e6e1d5c7013f461d0f8180960aec592e5418ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Footprint&lt;/strong&gt;: Kotlin has a very compact runtime library, which can be further reduced through the use of ProGuard. In a &lt;a href=&quot;https://blog.gouline.net/kotlin-production-tales-62b56057dc8a&quot;&gt;real application&lt;/a&gt;, the Kotlin runtime adds only a few hundred methods and less than 100K to the size of the .apk file.</source>
          <target state="translated">&lt;strong&gt;足迹&lt;/strong&gt;：Kotlin具有非常紧凑的运行时库，可以通过使用ProGuard进一步减少它。在&lt;a href=&quot;https://blog.gouline.net/kotlin-production-tales-62b56057dc8a&quot;&gt;实际的应用程序中&lt;/a&gt;，Kotlin运行时仅添加了数百种方法，而.apk文件的大小不到100K。</target>
        </trans-unit>
        <trans-unit id="ab66fec3d20ab10d72344a8b47e8045de00b0458" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Framework type&lt;/strong&gt; (only for Objective-C frameworks). By default a framework built by Kotlin/Native contains a dynamic library. But it's possible to replace it with a static library.</source>
          <target state="translated">&lt;strong&gt;框架类型&lt;/strong&gt;（仅适用于Objective-C框架）。默认情况下，由Kotlin / Native构建的框架包含一个动态库。但是可以用静态库替换它。</target>
        </trans-unit>
        <trans-unit id="57126d52087eba472a07f6b0dc82b2c9b74ad896" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Fully Stable (FS)&lt;/strong&gt;: incremental releases are fully compatible, only optimizations and bug fixes happen. Feature releases are backwards compatible.</source>
          <target state="translated">&lt;strong&gt;完全稳定（FS）&lt;/strong&gt;：增量版本完全兼容，仅进行优化和错误修复。功能版本向后兼容。</target>
        </trans-unit>
        <trans-unit id="5d722e5425cf5468a3cc51807165b09b74178e30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Getter&lt;/strong&gt; returns &lt;code&gt;true&lt;/code&gt; if JVM access checks are suppressed for this callable object. For a property, that means that all its accessors (getter, and setter for &lt;code&gt;var&lt;/code&gt; properties) are accessible.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果禁止对此可调用对象进行JVM访问检查，则&lt;strong&gt;Getter&lt;/strong&gt;返回 &lt;code&gt;true&lt;/code&gt; 。对于属性，这意味着可以访问其所有访问器（ &lt;code&gt;var&lt;/code&gt; 属性的getter和setter ）。</target>
        </trans-unit>
        <trans-unit id="3257bd5a1c7c4f6141c2fd35ffa921a08ea76780" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Gradle project improvements&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b79ac2c74347b0c67a0c3bf8cd690c1dab084f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If you are a library author&lt;/strong&gt; looking to provide compatibility with the current compiler backend as well as the new IR compiler backend, additionally check out the &lt;a href=&quot;#authoring-libraries-for-the-ir-compiler-with-backwards-compatibility&quot;&gt;&amp;ldquo;Authoring libraries for the IR compiler&amp;rdquo;&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893f88e4922c51e506a298efd0e349332ccff29b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; To correctly import the dependencies into the Kotlin/Native module, the Podfile must contain either &lt;a href=&quot;https://guides.cocoapods.org/syntax/podfile.html#use_modular_headers_bang&quot;&gt;&lt;code&gt;use_modular_headers!&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://guides.cocoapods.org/syntax/podfile.html#use_frameworks_bang&quot;&gt;&lt;code&gt;use_frameworks!&lt;/code&gt;&lt;/a&gt; directive.</source>
          <target state="translated">&lt;strong&gt;重要提示：&lt;/strong&gt;要将依赖项正确导入Kotlin / Native模块，Podfile必须包含&lt;a href=&quot;https://guides.cocoapods.org/syntax/podfile.html#use_modular_headers_bang&quot;&gt; &lt;code&gt;use_modular_headers!&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://guides.cocoapods.org/syntax/podfile.html#use_frameworks_bang&quot;&gt; &lt;code&gt;use_frameworks!&lt;/code&gt; &lt;/a&gt;指示。</target>
        </trans-unit>
        <trans-unit id="fa5e5749e3c4a470f72fca590f3925968869b43c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Incompatible change type&lt;/strong&gt;: Behavioral</source>
          <target state="translated">&lt;strong&gt;不兼容的变更类型&lt;/strong&gt;：行为</target>
        </trans-unit>
        <trans-unit id="e9774a516db3294cc27043b7f776059e8e8e9244" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Incompatible change type&lt;/strong&gt;: Binary</source>
          <target state="translated">&lt;strong&gt;不兼容的更改类型&lt;/strong&gt;：二进制</target>
        </trans-unit>
        <trans-unit id="5f85eefcdfc6bf3de72be4d2ef5c7ab0771b8d4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Incompatible change type&lt;/strong&gt;: Source</source>
          <target state="translated">&lt;strong&gt;不兼容的变更类型&lt;/strong&gt;：来源</target>
        </trans-unit>
        <trans-unit id="5e8d37446f51670c16b43faa4d620fcf539aeccf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Incompatible change type&lt;/strong&gt;: behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a3c86adb9c5648bfd57ffdaf07e8089b74133c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Incompatible change type&lt;/strong&gt;: behavioral</source>
          <target state="translated">&lt;strong&gt;不兼容的变更类型&lt;/strong&gt;：行为</target>
        </trans-unit>
        <trans-unit id="039267e2370d568ddb82bd2ed9c15dff0a813e21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Incompatible change type&lt;/strong&gt;: source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44d63d70cba3bead47196e58ec9474c6ee1043e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Interacting with DOM elements&lt;/strong&gt;. Kotlin provides a series of statically typed interfaces to interact with the Document Object Model, allowing creation and update of DOM elements.</source>
          <target state="translated">&lt;strong&gt;与DOM元素交互&lt;/strong&gt;。Kotlin提供了一系列与文档对象模型交互的静态类型接口，从而允许创建和更新DOM元素。</target>
        </trans-unit>
        <trans-unit id="5cc584a094e9383c6d524ed74cdac053c8d02dbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Interacting with graphics such as WebGL&lt;/strong&gt;. You can use Kotlin to create graphical elements on a web page using WebGL.</source>
          <target state="translated">&lt;strong&gt;与WebGL等图形进行交互&lt;/strong&gt;。您可以使用Kotlin使用WebGL在网页上创建图形元素。</target>
        </trans-unit>
        <trans-unit id="40070fc940293baad0e6e785b883846dabffc433" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Interoperability with Java&lt;/strong&gt;. You can use Kotlin along with the Java programming language in your applications without needing to migrate all your code to Kotlin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc74b175415bdb2c6872627140daf87039a72fd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Interoperability&lt;/strong&gt;: Kotlin is 100% interoperable with Java, allowing to use all existing Android libraries in a Kotlin application. This includes annotation processing, so databinding and Dagger work too.</source>
          <target state="translated">&lt;strong&gt;互操作性&lt;/strong&gt;：Kotlin可与Java 100％互操作，从而可以在Kotlin应用程序中使用所有现有的Android库。这包括注释处理，因此数据绑定和Dagger也可以工作。</target>
        </trans-unit>
        <trans-unit id="2598c2f91d35e4a4317dc1430080d368da441adb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Interoperability&lt;/strong&gt;: Kotlin is fully compatible with all Java-based frameworks, which lets you stay on your familiar technology stack while reaping the benefits of a more modern language.</source>
          <target state="translated">&lt;strong&gt;互操作性&lt;/strong&gt;：Kotlin与所有基于Java的框架完全兼容，这使您可以保持自己熟悉的技术堆栈，同时从更现代的语言中受益。</target>
        </trans-unit>
        <trans-unit id="c5201ece7bd89dcbc78b65fc0405de339bd79877" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-11567&quot;&gt;KT-11567&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="624797bf44bc3c55aa073bdf9a58f067cbae884b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-13762&quot;&gt;KT-13762&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-13762&quot;&gt;KT-13762&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c91dd0e605d29412ec688c969346e56495fc0a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-15020&quot;&gt;KT-15020&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b67b5fcbcd7791fc278190ddce0be5d15901482" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-16097&quot;&gt;KT-16097&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-16097&quot;&gt;KT-16097&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="620a0df1083fbc6bc1ebf1e8bd34ea2a88bec618" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-16310&quot;&gt;KT-16310&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-16310&quot;&gt;KT-16310&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4eef47d869273369d0d7c91205cb06b83d3eb713" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-16615&quot;&gt;KT-16615&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42fbe3fe5033ce1298274704ce101b12010456ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-16681&quot;&gt;KT-16681&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-16681&quot;&gt;KT-16681&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="467037173e1ff7906572f023ecff56fc35ecbc52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-17176&quot;&gt;KT-17176&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-17176&quot;&gt;KT-17176&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="178dd1bf94f5ea52efcdeccc09a4fe9599b66fab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-17981&quot;&gt;KT-17981&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-17981&quot;&gt;KT-17981&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c40f57437ab374c658043398133d545410a8e483" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-17995&quot;&gt;KT-17995&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4804ca06bbffe27856cace9492bc5a0c96e18104" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-18053&quot;&gt;KT-18053&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac83c3db716833581dec8a52fa871fbae1707212" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-18541&quot;&gt;KT-18541&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5901c1a8cf2a133579a52a6cc3fe44c795fb6ade" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-19489&quot;&gt;KT-19489&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-19489&quot;&gt;KT-19489&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61163eeade8a3c9c1e72e49f2a38b76ee8101c44" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-19532&quot;&gt;KT-19532&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-19532&quot;&gt;KT-19532&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c51480006ff5ed4b72b0cbda590360487f25ef30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-19618&quot;&gt;KT-19618&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-19618&quot;&gt;KT-19618&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4269bf35364cf5eef0c2aee3ffa7af7126c67b1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-19628&quot;&gt;KT-19628&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-19628&quot;&gt;KT-19628&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="454bb2e96d45aa5109708cd29b11dcdecf12c34b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-20226&quot;&gt;KT-20226&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e239b48fa6b77dfc46b4f8d7346e7a9ea8aab7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-20772&quot;&gt;KT-20772&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-20772&quot;&gt;KT-20772&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d2ec61a056ac534581d3f9ac63d2ad9837e704fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-20830&quot;&gt;KT-20830&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-20830&quot;&gt;KT-20830&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e7ccb04df2d64748e20e2134c65deed513ffc4ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-21049&quot;&gt;KT-21049&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-21049&quot;&gt;KT-21049&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa91d4d33eb34fc4148614fd777a1e47e0f7c11c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-21178&quot;&gt;KT-21178&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362d124cfb6e8092d3b6b64a3c1c97c18411d09d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-21354&quot;&gt;KT-21354&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-21354&quot;&gt;KT-21354&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c673a61bc8615e171b8adccc1ad84ac8e85d342" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-21784&quot;&gt;KT-21784&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-21784&quot;&gt;KT-21784&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e61057dddfe2fd6e4d8d661942cc5a739011006" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-22275&quot;&gt;KT-22275&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dfd5f1e36a2cdae750b38fa1f32ae31d60afb51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-22517&quot;&gt;KT-22517&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-22517&quot;&gt;KT-22517&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="789d4c884fa9a1b852dba0d6d48be30382573fe2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-23153&quot;&gt;KT-23153&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-23153&quot;&gt;KT-23153&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="beb1d34baf6f5e60bbf2274bd851226a0335294c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-23277&quot;&gt;KT-23277&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-23277&quot;&gt;KT-23277&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ec687965b8bca3f04918c9027652dbc70762b91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-23799&quot;&gt;KT-23799&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-23799&quot;&gt;KT-23799&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d902b908e7fd117eb2c44a4be03adcbca8a6a4fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-25175&quot;&gt;KT-25175&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9b8117837a2658cae47906517066f191302558" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-25287&quot;&gt;KT-25287&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-25287&quot;&gt;KT-25287&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54c66e4aa427f3c501753d20c701051364e18f5a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-26654&quot;&gt;KT-26654&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70b05022428566fc4798077d8a5aabb17ffb299" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-28356&quot;&gt;KT-28356&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a450c05aa4b6a722babf6e47f0c8d428a38d1da2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-28672&quot;&gt;KT-28672&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e927fc38dc6e408df18c18fe8d39782cdab669b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-28753&quot;&gt;KT-28753&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0158b77fca8fa11f777d27aed6f02fe2950a33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-30211&quot;&gt;KT-30211&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e617d07eb1465d1bf846db4dd6a6ff1e0f8be369" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-30360&quot;&gt;KT-30360&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f88a2eb18dbf709213d950595d440c774a2e922" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-31540&quot;&gt;KT-31540&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49129299f1e7001f26cb2a449c874993b6636a22" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-31670&quot;&gt;KT-31670&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7342cd87024f30bfb30f69dc1af85192576200e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-31923&quot;&gt;KT-31923&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c86925087076bb27ba15ba92872cf82581083b80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-32126&quot;&gt;KT-32126&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c68997d1d2cea935977aa9bd789d63d50e767be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-33012&quot;&gt;KT-33012&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebc0cc9c1f430dfe09e5ccc2e1256c8c5df73c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-33240&quot;&gt;KT-33240&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0bce0bdddb77df4f583e288d988a37b7f6e297a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-34975&quot;&gt;KT-34975&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598f8ed5c6490bf6fc4f30544f5bc244a3f55ba2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-35207&quot;&gt;KT-35207&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7b346958c392b262ccacd1cf26a2fe78a813c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-35226&quot;&gt;KT-35226&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d498547b834e6c354c6c0732a09483912f3d5ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-35469&quot;&gt;KT-35469&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48eabd1da5596ae62ea37f91e6a3ceb1923a7ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-35487&quot;&gt;KT-35487&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28c7f06d28023b784fb35ddd2a76bf18ebe4ebb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-35679&quot;&gt;KT-35679&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12fdfc0b33935ba33394655872325ee3fe30264b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-35681&quot;&gt;KT-35681&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00054bc5cc0523a8a34a7aebce2370dd84fd46ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-35834&quot;&gt;KT-35834&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efaf67637c041c92c29fefda09061fd4d7352996" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-36045&quot;&gt;KT-36045&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00f3754c0a4fabd039b5e35334715cd9c1ebf8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-36083&quot;&gt;KT-36083&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6a60bfa87f7562a799abe42ed55a47c33d2e4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-36926&quot;&gt;KT-36926&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab99c7bc542ec9b6f10bc9ebfc5815cf0535a324" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-37054&quot;&gt;KT-37054&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6aec88d43ddcf6fa9fcbaa851acd81c14c2020d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-37280&quot;&gt;KT-37280&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e81064004a2219107ae6c111a3ac0c7ff0d23a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-38754&quot;&gt;KT-38754&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba18aecc10d3d7c81bd98745c4bc8be544ef3477" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-38777&quot;&gt;KT-38777&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6551eec8b08a86052f407b2db0eb92e10d5cb5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-38817&quot;&gt;KT-38817&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096f4c9252ab2a677434685969d842321156ca55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-38854&quot;&gt;KT-38854&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167d4086c1b1f3a281637eee1cbece6f74f68c08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-39198&quot;&gt;KT-39198&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842780bcd8ff9dbe2039445f6a9599270dc126ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-9580&quot;&gt;KT-9580&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-9580&quot;&gt;KT-9580&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ffb22359482e55dfa802f06510821ee20651eb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issues&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-20588&quot;&gt;KT-20588&lt;/a&gt;, &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-20589&quot;&gt;KT-20589&lt;/a&gt;. See also &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-20171&quot;&gt;KT-20171&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-20588&quot;&gt;KT-20588&lt;/a&gt;，&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-20589&quot;&gt;KT-20589&lt;/a&gt;。另请参阅&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-20171&quot;&gt;KT-20171&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="73aba56311cb1950911e3d599f9eed16865c221a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issues&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-21515&quot;&gt;KT-21515&lt;/a&gt;, &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-25333&quot;&gt;KT-25333&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-21515&quot;&gt;KT-21515&lt;/a&gt;，&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-25333&quot;&gt;KT-25333&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20dcd47d2bdcd91249eb0b1a75c22de286bf757b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issues&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-22474&quot;&gt;KT-22474&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f68549922c030969dc34f77e506f4b603d5782" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issues&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-22723&quot;&gt;KT-22723&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095db5bc99e8bc13e223afcb027bc0980992279c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issues&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-24197&quot;&gt;KT-24197&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;问题&lt;/strong&gt;：&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-24197&quot;&gt;KT-24197&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46eec5708019c490e9564514a497e5275247db72" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issues&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-30419&quot;&gt;KT-30419&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e05aa1278ad7a2503bcfb3c1f1bfaa71410afd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Java type&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Java类型&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d15b37f51b2dba58ccf1543c881e55363f163dbf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Keeping the Language Modern&lt;/strong&gt;. We acknowledge that systems accumulate legacy over time. What had once been cutting-edge technology can be hopelessly outdated today. We have to evolve the language to keep it relevant to the needs of the users and up-to-date with their expectations. This includes not only adding new features, but also phasing out old ones that are no longer recommended for production use and have altogether become legacy.</source>
          <target state="translated">&lt;strong&gt;保持语言现代化&lt;/strong&gt;。我们承认，随着时间的推移，系统会积累传统。曾经是尖端技术的东西如今已经过时了。我们必须发展语言，以使其与用户的需求相关并与他们的期望保持最新。这不仅包括添加新功能，还包括淘汰不再推荐用于生产的旧功能，这些旧功能已完全成为传统。</target>
        </trans-unit>
        <trans-unit id="4635a2d71cfd4a72cee40a5e47114b3f2b11cc0c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Kotlin Multiplatform&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af07559b3d456b10e95e78f5cef72b66be05dda7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Kotlin mutable type&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Kotlin可变型&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a3795dcd10c1477ffbfd7ccdf4a52e9df4e62ac5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Kotlin read-only type&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Kotlin只读类型&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="514db325720442dd8cbb44ba36b100d45d2a7554" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Kotlin support in Android Jetpack and other libraries&lt;/strong&gt;. &lt;a href=&quot;https://developer.android.com/kotlin/ktx&quot;&gt;KTX extensions&lt;/a&gt; add Kotlin language features, such as coroutines, extension functions, lambdas, and named parameters, to existing Android libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff39871f21339ee6d16c8c134fd8d15942da64b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Kotlin type&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;科特林型&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b07a21c11c87618a429b00fe8f8e2bbd4cb0c43e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Kotlin/JS&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Kotlin/JS&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb296875d86c9d4d5260fd9f2558e8e084017be8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Kotlin/JVM&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Kotlin/JVM&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f0a44911f381012dae69c91143484dfd2338561a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Kotlin/Native for Native&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Kotlin /母语为Native&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a85344c4ff4b774db30d2ab668813ea26a3e9244" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Kotlin/Native&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Kotlin/Native&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5f6e2fdfb6a19f199063fe78124fdc71a00b8048" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Language features and improvements&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4833f8621787b679730e7858ff9e5385cd3e49e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Last Updated&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;最近更新时间&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="def8d56e2c6c1c07fdbf780235a0372f93a0e796" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Learn Kotlin&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;学习科特林&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="44475f8a3f8a76a68fb693cb59a54ffa320ddf7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Learning Curve&lt;/strong&gt;: For a Java developer, getting started with Kotlin is very easy. The automated Java to Kotlin converter included in the Kotlin plugin helps with the first steps. &lt;a href=&quot;../tutorials/koans&quot;&gt;Kotlin Koans&lt;/a&gt; offer a guide through the key features of the language with a series of interactive exercises.</source>
          <target state="translated">&lt;strong&gt;学习曲线&lt;/strong&gt;：对于Java开发人员而言，开始Kotlin非常容易。Kotlin插件中包含的自动Java到Kotlin转换器有助于第一步。&lt;a href=&quot;../tutorials/koans&quot;&gt;Kotlin Koans&lt;/a&gt;通过一系列互动练习提供了该语言的主要功能的指南。</target>
        </trans-unit>
        <trans-unit id="c0a62e978e3337c0ec94054a386845c3f6841eff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Less code combined with greater readability&lt;/strong&gt;. Spend less time writing your code and working to understand the code of others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0064e6430cb7af56de1b8fa85d7c711bb821be42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Linker options.&lt;/strong&gt; Options passed to a system linker during binary building. One can use this setting to link against some native library.</source>
          <target state="translated">&lt;strong&gt;链接器选项。&lt;/strong&gt;选项在二进制构建过程中传递给系统链接器。可以使用此设置链接到某些本机库。</target>
        </trans-unit>
        <trans-unit id="07ef1270cc6a5b78912b6586714ad317f0657ed1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Loaded platform type&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;加载平台类型&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c229afb06419ddd0f84981c54ddfb0d1f7ca503" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;MF&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;MF&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be6d5b08b52388e562c8f2bd16912d80134f2679" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mature language and environment&lt;/strong&gt;. Since its creation in 2011, Kotlin has developed continuously, not only as a language but as a whole ecosystem with robust tooling. Now it's seamlessly integrated in Android Studio and is actively used by many companies for developing Android applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3824174b3f5663ef64effe0210d552be0d26db20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Migrating to Kotlin 1.4.0&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1633839bc9516bea2b216e788aac2b4d911688fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Migration&lt;/strong&gt;: Kotlin supports gradual, step by step migration of large codebases from Java to Kotlin. You can start writing new code in Kotlin while keeping older parts of your system in Java.</source>
          <target state="translated">&lt;strong&gt;迁移&lt;/strong&gt;：Kotlin支持从Java到Kotlin的逐步逐步迁移。您可以开始在Kotlin中编写新代码，同时将系统的旧部分保留在Java中。</target>
        </trans-unit>
        <trans-unit id="5013d8104b487fadfcb9f6ec26b4d07e76e10250" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mode for Binaries&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;二进制模式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a9e330b1c51ab2059298c572893a2b28833c886" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mode for Sources&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;来源模式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b4818f9c5362c6e3c936951253cb1f7e858e0104" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Module Kind&lt;/strong&gt;. Indicates what module standard to follow. This is covered in the &lt;a href=&quot;../working-with-modules/working-with-modules&quot;&gt;Working with Modules&lt;/a&gt; tutorial in more depth.</source>
          <target state="translated">&lt;strong&gt;模块种类&lt;/strong&gt;。指示要遵循的模块标准。这在&amp;ldquo; &lt;a href=&quot;../working-with-modules/working-with-modules&quot;&gt;使用模块&amp;rdquo;&lt;/a&gt;教程中有更深入的介绍。</target>
        </trans-unit>
        <trans-unit id="1291d291c889d952f962f19be664239e51749e53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Moving fast (MF)&lt;/strong&gt;: no compatibility should be expected between even &lt;a href=&quot;kotlin-evolution#feature-releases-and-incremental-releases&quot;&gt;incremental releases&lt;/a&gt;, any functionality can be added, removed or changed without warning.</source>
          <target state="translated">&lt;strong&gt;快速移动（MF）&lt;/strong&gt;：即使在&lt;a href=&quot;kotlin-evolution#feature-releases-and-incremental-releases&quot;&gt;增量发行版&lt;/a&gt;之间也不应期望兼容，可以添加，删除或更改任何功能而不会发出警告。</target>
        </trans-unit>
        <trans-unit id="28f8cd126dd8825e89ed3aa4dbc97f569647c6c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: On the JVM, if all of the parameters of the primary constructor have default values, the compiler will generate an additional parameterless constructor which will use the default values. This makes it easier to use Kotlin with libraries such as Jackson or JPA that create class instances through parameterless constructors.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在JVM上，如果主构造函数的所有参数都具有缺省值，则编译器将生成一个将使用缺省值的附加无参数构造函数。这使得Kotlin与通过无参数构造函数创建类实例的Jackson或JPA之类的库一起使用更容易。</target>
        </trans-unit>
        <trans-unit id="d89aa2209faf2c7b962a9fbb7cb927f54ba8d68e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: object declarations can't be local (i.e. be nested directly inside a function), but they can be nested into other object declarations or non-inner classes.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：对象声明不能是局部的（即直接嵌套在函数内部），但可以嵌套到其他对象声明或非内部类中。</target>
        </trans-unit>
        <trans-unit id="66a7391836e79098f507df30b500cfdf387dae5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: we could also use the standard class &lt;code&gt;Pair&lt;/code&gt; and have &lt;code&gt;function()&lt;/code&gt; return &lt;code&gt;Pair&amp;lt;Int, Status&amp;gt;&lt;/code&gt;, but it's often better to have your data named properly.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：我们也可以使用标准类 &lt;code&gt;Pair&lt;/code&gt; 并让 &lt;code&gt;function()&lt;/code&gt; 返回 &lt;code&gt;Pair&amp;lt;Int, Status&amp;gt;&lt;/code&gt; ，但是通常最好对数据进行正确命名。</target>
        </trans-unit>
        <trans-unit id="bee5615194a6e2e9ee39332a6bbbd9b28cb8a86e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Name&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Name&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aa998a0e6a43a88eee32e415d4ba503e594d4b24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New compiler&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2393a9c8e4cfeae1534779fbf4d044cd6ef76eb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New tools in the IDE&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920b4d9f7a2e2f012d737b1adc92132d3b2794a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: this value should not be used in general code.&lt;/strong&gt; Using it outside of the context of &lt;code&gt;suspendCoroutineUninterceptedOrReturn&lt;/code&gt; function return value (including, but not limited to, storing this value in other properties, returning it from other functions, etc) can lead to unspecified behavior of the code.</source>
          <target state="translated">&lt;strong&gt;注意：此值不应在通用代码中使用。&lt;/strong&gt;在 &lt;code&gt;suspendCoroutineUninterceptedOrReturn&lt;/code&gt; 函数返回值的上下文之外使用它（包括但不限于将此值存储在其他属性中，从其他函数返回等）可能导致代码的行为未指定。</target>
        </trans-unit>
        <trans-unit id="31b1d1a1c1c67cb1e20686c6012118dbab4d7ed0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The plugin is based on the multiplatform project model and requires applying the &lt;code&gt;org.jetbrains.kotlin.multiplatform&lt;/code&gt; plugin. See details about the multiplatform plugin at the &lt;a href=&quot;../building-mpp-with-gradle&quot;&gt;corresponding page&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;该插件基于多平台项目模型，并且需要应用 &lt;code&gt;org.jetbrains.kotlin.multiplatform&lt;/code&gt; 插件。在&lt;a href=&quot;../building-mpp-with-gradle&quot;&gt;相应页面上&lt;/a&gt;查看有关多平台插件的详细信息。</target>
        </trans-unit>
        <trans-unit id="73c6216b6d115320c9b1ecc7efbf4142d2f0463f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; If using pre-release or EAP versions of the Kotlin plugin, the IDE may fail to open the generated project, giving a Gradle import &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-18835#focus=streamItem-27-2718879-0-0&quot;&gt;error&lt;/a&gt;. This is because the right Maven repository isn't referenced in the &lt;code&gt;build.gradle&lt;/code&gt; file, it can be resolved by adding the following entry &lt;em&gt;twice&lt;/em&gt;, into each of the &lt;code&gt;repositories { .. }&lt;/code&gt; blocks.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;如果使用Kotlin插件的预发行版本或EAP版本，则IDE可能无法打开生成的项目，从而导致Gradle导入&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-18835#focus=streamItem-27-2718879-0-0&quot;&gt;错误&lt;/a&gt;。这是因为在 &lt;code&gt;build.gradle&lt;/code&gt; 文件中未引用正确的Maven存储库，可以通过将以下条目&lt;em&gt;两次&lt;/em&gt;添加到每个 &lt;code&gt;repositories { .. }&lt;/code&gt; 块中来解决该问题。</target>
        </trans-unit>
        <trans-unit id="f048dac293163b7f3a7598b49f61de73ac3ba9de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; It is the caller's responsibility to close both of these resources.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;关闭这两个资源是调用者的责任。</target>
        </trans-unit>
        <trans-unit id="124d849e65ffd789b274bb9691889ca354bfd7d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; it is the caller's responsibility to close both of these resources.</source>
          <target state="translated">&lt;strong&gt;请注意&lt;/strong&gt;，关闭这两个资源是呼叫者的责任。</target>
        </trans-unit>
        <trans-unit id="c57d6039736ee40ee75208986c99b74e5603cf04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;kotlinx-serialization&lt;/code&gt; 1.0.0-RC only works with Kotlin compiler 1.4. Earlier compiler versions are not compatible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e391a1d8a33528b8b5fbf5f4c42696126e3570c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: It is the caller's responsibility to close this stream.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：关闭此流是呼叫者的责任。</target>
        </trans-unit>
        <trans-unit id="5b6fbde0019eb86de6fc08fec8f0856d007e6647" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: On Windows, when you pass compiler arguments that contain delimiter characters (whitespace, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;), surround these arguments with double quotes (&lt;code&gt;&quot;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87313d4ecaac57dabba97e9ecfb136ac300a8048" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Prior to Kotlin 1.4, to generate default methods, you could use the &lt;code&gt;@JvmDefault&lt;/code&gt; annotation on these methods. Compiling with &lt;code&gt;-Xjvm-default=all&lt;/code&gt; in 1.4 generally works as if you annotated all non-abstract methods of interfaces with &lt;code&gt;@JvmDefault&lt;/code&gt;and compiled with &lt;code&gt;-Xjvm-default=enable&lt;/code&gt;. However, there are cases when their behavior differs. Detailed information about the changes in default methods generation in Kotlin 1.4 is provided in &lt;a href=&quot;https://blog.jetbrains.com/kotlin/2020/07/kotlin-1-4-m3-generating-default-methods-in-interfaces/&quot;&gt;this post&lt;/a&gt; on the Kotlin blog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2a9460c5cf4e5f8fb691a71ea0aeab986268d70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;On the JVM&lt;/strong&gt;: In projects where Kotlin is used together with Java, Kotlin source files should reside in the same source root as the Java source files, and follow the same directory structure: each file should be stored in the directory corresponding to each package statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912ac37238d08c7343a99940207880dc2742b776" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;On the JVM&lt;/strong&gt;: The access to private properties with default getters and setters is optimized so no function call overhead is introduced in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35815e2fba681c4d6b24b89f6a4be1d2835af462" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;On the JVM&lt;/strong&gt;: You can't use the named argument syntax when calling Java functions because Java bytecode does not always preserve names of function parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41fbf1843bb637e2270153523b6af23d3f7972b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output file name.&lt;/strong&gt; By default the output file name is based on binary name prefix or, if the name prefix isn't specified, on a project name. But it's possible to configure the output file name independently using the &lt;code&gt;baseName&lt;/code&gt; property. Note that final file name will be formed by adding system-dependent prefix and postfix to this base name. E.g. a &lt;code&gt;libfoo.so&lt;/code&gt; is produced for a Linux shared library with the base name &lt;code&gt;foo&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;输出文件名。&lt;/strong&gt;默认情况下，输出文件名基于二进制名称前缀，或者，如果未指定名称前缀，则基于项目名称。但是可以使用 &lt;code&gt;baseName&lt;/code&gt; 属性独立配置输出文件名。请注意，最终文件名将通过在该基本名称中添加与系统相关的前缀和后缀来形成。例如，为基本名称为 &lt;code&gt;foo&lt;/code&gt; 的Linux共享库生成了 &lt;code&gt;libfoo.so&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="50ced6f5b30171a4a93c828cff28c5aae9265871" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output file postfix&lt;/strong&gt;. Same as above, but in this case the compiler will append the contents of the selected file to the output.</source>
          <target state="translated">&lt;strong&gt;输出文件后缀&lt;/strong&gt;。与上面相同，但是在这种情况下，编译器会将所选文件的内容附加到输出中。</target>
        </trans-unit>
        <trans-unit id="b7acbb24727c5dd951bd8fe4bdbacc1b0e5f3690" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output file prefix&lt;/strong&gt;. We can prefix the output the compiler generates with additional JavaScript. In order to do so, we indicate the name of the file that contains the JavaScript we want in this box.</source>
          <target state="translated">&lt;strong&gt;输出文件前缀&lt;/strong&gt;。我们可以在编译器生成的输出前面加上其他JavaScript。为此，我们在此框中指定包含所需JavaScript的文件的名称。</target>
        </trans-unit>
        <trans-unit id="1f567fbc6441cccc58a14b74cbee1b61024c0b30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Performance&lt;/strong&gt;: A Kotlin application runs as fast as an equivalent Java one, thanks to very similar bytecode structure. With Kotlin's support for inline functions, code using lambdas often runs even faster than the same code written in Java.</source>
          <target state="translated">&lt;strong&gt;性能&lt;/strong&gt;：由于非常相似的字节码结构，Kotlin应用程序的运行速度与Java应用程序相当。有了Kotlin对内联函数的支持，使用lambda的代码运行的速度通常甚至比用Java编写的相同代码还要快。</target>
        </trans-unit>
        <trans-unit id="558b1d7cfc157eb86623021d628d371f858629f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Receiver&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Receiver&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b793bd5c94890549bb2c56a7ab13d4b7fbeb4466" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Retain&lt;/strong&gt; annotation is required to preserve functions from internalization and DCE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff78e240531b65a1f2b3131a6ed9457cb776408" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Return&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="37ad0aa9a9e5e596fa2ac286f46a18e706a72265" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; 0 for &lt;code&gt;null&lt;/code&gt; object, identity hash code otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757d607f672c7334dae6f2d15467388440a9d89f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the first occurrence of &lt;a href=&quot;index-of#kotlin.text%24indexOf%28kotlin.CharSequence%2C+kotlin.Char%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchar&quot;&gt;char&lt;/a&gt; or -1 if none is found.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;首次出现的&lt;a href=&quot;index-of#kotlin.text%24indexOf%28kotlin.CharSequence%2C+kotlin.Char%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchar&quot;&gt;char&lt;/a&gt;的索引；如果未找到，则&lt;strong&gt;返回&lt;/strong&gt; -1。</target>
        </trans-unit>
        <trans-unit id="7af850e676eb1f6ad07e246ecbc7648054a8e8f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the first occurrence of &lt;a href=&quot;index-of#kotlin.text%24indexOf%28kotlin.CharSequence%2C+kotlin.String%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstring&quot;&gt;string&lt;/a&gt; or &lt;code&gt;-1&lt;/code&gt; if none is found.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;第一次出现的索引&lt;a href=&quot;index-of#kotlin.text%24indexOf%28kotlin.CharSequence%2C+kotlin.String%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstring&quot;&gt;字符串&lt;/a&gt;或 &lt;code&gt;-1&lt;/code&gt; ，如果没有被发现。</target>
        </trans-unit>
        <trans-unit id="8b51deb1df0b1467785f5c602afc133b3d96c577" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the first occurrence of &lt;a href=&quot;index-of#kotlin.text%24indexOf(kotlin.CharSequence,%20kotlin.Char,%20kotlin.Int,%20kotlin.Boolean)/char&quot;&gt;char&lt;/a&gt; or -1 if none is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eabaf52bd5e6ec10ad2e67ca6098f133738ac418" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the first occurrence of &lt;a href=&quot;index-of#kotlin.text%24indexOf(kotlin.CharSequence,%20kotlin.String,%20kotlin.Int,%20kotlin.Boolean)/string&quot;&gt;string&lt;/a&gt; or &lt;code&gt;-1&lt;/code&gt; if none is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd1a92de7d335131ff93dd7748a1b3c35c63499" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the first occurrence of &lt;a href=&quot;last-index-of#kotlin.text%24lastIndexOf%28kotlin.CharSequence%2C+kotlin.Char%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchar&quot;&gt;char&lt;/a&gt; or -1 if none is found.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;首次出现的&lt;a href=&quot;last-index-of#kotlin.text%24lastIndexOf%28kotlin.CharSequence%2C+kotlin.Char%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchar&quot;&gt;char&lt;/a&gt;的索引；如果未找到，则&lt;strong&gt;返回&lt;/strong&gt; -1。</target>
        </trans-unit>
        <trans-unit id="4004685c44664daadd174c6a7248b58ad09d8306" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the first occurrence of &lt;a href=&quot;last-index-of#kotlin.text%24lastIndexOf%28kotlin.CharSequence%2C+kotlin.String%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstring&quot;&gt;string&lt;/a&gt; or -1 if none is found.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;&lt;a href=&quot;last-index-of#kotlin.text%24lastIndexOf%28kotlin.CharSequence%2C+kotlin.String%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstring&quot;&gt;字符串&lt;/a&gt;首次出现的索引；如果未找到，则&lt;strong&gt;返回&lt;/strong&gt; -1。</target>
        </trans-unit>
        <trans-unit id="7c2c91f69c38f6b0e99eb7c7f21b31b8ff2800c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the first occurrence of matched character from &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; or -1 if none of &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; are found.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;从&lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt;首次出现匹配字符的索引；如果未找到&lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars，&lt;/a&gt;则&lt;strong&gt;返回&lt;/strong&gt; -1 。</target>
        </trans-unit>
        <trans-unit id="12b117f1a4b72e41cf8fcac630a6af774340214b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the first occurrence of matched character from &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/chars&quot;&gt;chars&lt;/a&gt; or -1 if none of &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/chars&quot;&gt;chars&lt;/a&gt; are found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d0ada3d42773d649573debd09061a2c1cb5848" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the last occurrence of &lt;a href=&quot;last-index-of#kotlin.text%24lastIndexOf(kotlin.CharSequence,%20kotlin.Char,%20kotlin.Int,%20kotlin.Boolean)/char&quot;&gt;char&lt;/a&gt; or -1 if none is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ddf017848e12285d6af2623f353f5a4f5f2778d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the last occurrence of &lt;a href=&quot;last-index-of#kotlin.text%24lastIndexOf(kotlin.CharSequence,%20kotlin.String,%20kotlin.Int,%20kotlin.Boolean)/string&quot;&gt;string&lt;/a&gt; or -1 if none is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed38c40ddbaf9c9e8959cc88c45220bb74df65fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the last occurrence of matched character from &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; or -1 if none of &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; are found.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;&lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;字符中&lt;/a&gt;最后一次出现的匹配字符的索引；如果未找到&lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;字符，&lt;/a&gt;则&lt;strong&gt;返回&lt;/strong&gt; -1 。</target>
        </trans-unit>
        <trans-unit id="b215ab860f60b4914e7c05fcd3cb6c8b273a5089" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the last occurrence of matched character from &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/chars&quot;&gt;chars&lt;/a&gt; or -1 if none of &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/chars&quot;&gt;chars&lt;/a&gt; are found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476664da54ca5e12b023a38b5c0c9a78a17fb037" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An instance of &lt;a href=&quot;../-match-group/index#kotlin.text.MatchGroup&quot;&gt;MatchGroup&lt;/a&gt; if the group with the specified &lt;a href=&quot;get#kotlin.text.MatchNamedGroupCollection%24get%28kotlin.String%29%2Fname&quot;&gt;name&lt;/a&gt; was matched or &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果具有指定&lt;a href=&quot;get#kotlin.text.MatchNamedGroupCollection%24get%28kotlin.String%29%2Fname&quot;&gt;名称的&lt;/a&gt;组匹配，则&lt;strong&gt;返回&lt;/strong&gt;&lt;a href=&quot;../-match-group/index#kotlin.text.MatchGroup&quot;&gt;MatchGroup&lt;/a&gt;的实例，否则&lt;strong&gt;返回&lt;/strong&gt; &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="067685992eb5b2e03a488e79b77f6233cde497b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An instance of &lt;a href=&quot;../-match-group/index#kotlin.text.MatchGroup&quot;&gt;MatchGroup&lt;/a&gt; if the group with the specified &lt;a href=&quot;get#kotlin.text.MatchNamedGroupCollection%24get(kotlin.String)/name&quot;&gt;name&lt;/a&gt; was matched or &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bef3966f2f05a88d0735518e95ca5d2dce9b767" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An instance of &lt;a href=&quot;../-match-result/index&quot;&gt;MatchResult&lt;/a&gt; if match was found or &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果找到匹配项，则&lt;strong&gt;返回&lt;/strong&gt;&lt;a href=&quot;../-match-result/index&quot;&gt;MatchResult的&lt;/a&gt;一个实例，否则&lt;strong&gt;返回&lt;/strong&gt; &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e4d8f232464ef8dac9081a9a982d93b31bf500a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An instance of MatchGroup if the group with the specified &lt;a href=&quot;get#kotlin.text%24get%28kotlin.text.MatchGroupCollection%2C+kotlin.String%29%2Fname&quot;&gt;name&lt;/a&gt; was matched or &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果具有指定&lt;a href=&quot;get#kotlin.text%24get%28kotlin.text.MatchGroupCollection%2C+kotlin.String%29%2Fname&quot;&gt;名称的&lt;/a&gt;组匹配，则&lt;strong&gt;返回&lt;/strong&gt; MatchGroup的实例，否则&lt;strong&gt;返回&lt;/strong&gt; &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af85a289ba7d93b72ff8ab680b0eedf4318ed7a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An instance of MatchGroup if the group with the specified &lt;a href=&quot;get#kotlin.text%24get(kotlin.text.MatchGroupCollection,%20kotlin.String)/name&quot;&gt;name&lt;/a&gt; was matched or &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="935d5a6f8dc59afb1cfba02a19debb5e5421db4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An instance of MatchResult if match was found or &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果找到匹配项，则&lt;strong&gt;返回&lt;/strong&gt; MatchResult的一个实例，否则&lt;strong&gt;返回&lt;/strong&gt; &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bca80f4e95cb0ed398996067163cca3543f5227e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An instance of MatchResult if the entire input matches or &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果整个输入匹配，则&lt;strong&gt;返回&lt;/strong&gt; MatchResult的一个实例，否则&lt;strong&gt;返回&lt;/strong&gt; &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2378752e83bb2a757af3b5523444ded4dd6b04ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; File with relative path from &lt;a href=&quot;relative-to#kotlin.io%24relativeTo%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;base&lt;/a&gt; to this.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;文件，它具有从&lt;a href=&quot;relative-to#kotlin.io%24relativeTo%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;基准&lt;/a&gt;到此的相对路径。</target>
        </trans-unit>
        <trans-unit id="a83810f32e4705ec325bfc8d44535c32d44e8a24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; File with relative path from &lt;a href=&quot;relative-to#kotlin.io%24relativeTo(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; to this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05784c6721c79f3dbd32bc694f8a644402e66119" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; File with relative path from &lt;a href=&quot;relative-to-or-null#kotlin.io%24relativeToOrNull%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;base&lt;/a&gt; to this, or &lt;code&gt;null&lt;/code&gt; if this and base paths have different roots.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;具有从&lt;a href=&quot;relative-to-or-null#kotlin.io%24relativeToOrNull%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;基本&lt;/a&gt;路径到此路径的相对路径的File；如果此路径和基本路径具有不同的根，则&lt;strong&gt;返回&lt;/strong&gt; &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8bd9d0298af4f26206a8c3c310c218e07fbefa42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; File with relative path from &lt;a href=&quot;relative-to-or-null#kotlin.io%24relativeToOrNull(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; to this, or &lt;code&gt;null&lt;/code&gt; if this and base paths have different roots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175b53596a618414d8f28838230010cdd2c26dc0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; File with relative path from &lt;a href=&quot;relative-to-or-self#kotlin.io%24relativeToOrSelf%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;base&lt;/a&gt; to this, or &lt;code&gt;this&lt;/code&gt; if this and base paths have different roots.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;文件与相对路径&lt;a href=&quot;relative-to-or-self#kotlin.io%24relativeToOrSelf%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;基&lt;/a&gt;本，或 &lt;code&gt;this&lt;/code&gt; 如果此和碱路径具有不同的根。</target>
        </trans-unit>
        <trans-unit id="4c39d7caae8efae365e38cb3cb9803a1b75080ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; File with relative path from &lt;a href=&quot;relative-to-or-self#kotlin.io%24relativeToOrSelf(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; to this, or &lt;code&gt;this&lt;/code&gt; if this and base paths have different roots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21be04e13d02602636a5a7fb84162e15455167dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; Returns a char sequence of length at least &lt;a href=&quot;pad-end#kotlin.text%24padEnd%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;length&lt;/a&gt; consisting of &lt;code&gt;this&lt;/code&gt; char sequence appended with &lt;a href=&quot;pad-end#kotlin.text%24padEnd%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Char%29%2FpadChar&quot;&gt;padChar&lt;/a&gt; as many times as are necessary to reach that length.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;返回至少长度的字符序列&lt;a href=&quot;pad-end#kotlin.text%24padEnd%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;长度&lt;/a&gt;由 &lt;code&gt;this&lt;/code&gt; 与所附序列炭&lt;a href=&quot;pad-end#kotlin.text%24padEnd%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Char%29%2FpadChar&quot;&gt;padChar&lt;/a&gt;多次是要达到该长度。</target>
        </trans-unit>
        <trans-unit id="ce22c5c28e5b51ec7bf3bdb996398032a2638336" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; Returns a char sequence of length at least &lt;a href=&quot;pad-end#kotlin.text%24padEnd(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Char)/length&quot;&gt;length&lt;/a&gt; consisting of &lt;code&gt;this&lt;/code&gt; char sequence appended with &lt;a href=&quot;pad-end#kotlin.text%24padEnd(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Char)/padChar&quot;&gt;padChar&lt;/a&gt; as many times as are necessary to reach that length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e256ebaed480a7f0368eda36fd51bad6e41516d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; Returns a char sequence of length at least &lt;a href=&quot;pad-start#kotlin.text%24padStart%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;length&lt;/a&gt; consisting of &lt;code&gt;this&lt;/code&gt; char sequence prepended with &lt;a href=&quot;pad-start#kotlin.text%24padStart%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Char%29%2FpadChar&quot;&gt;padChar&lt;/a&gt; as many times as are necessary to reach that length.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;返回至少长度的字符序列&lt;a href=&quot;pad-start#kotlin.text%24padStart%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;长度&lt;/a&gt;由 &lt;code&gt;this&lt;/code&gt; 与前缀字符序列&lt;a href=&quot;pad-start#kotlin.text%24padStart%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Char%29%2FpadChar&quot;&gt;padChar&lt;/a&gt;多次是要达到该长度。</target>
        </trans-unit>
        <trans-unit id="b621ef824ac175ecfd6f23e8fa1f801cde8f0126" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; Returns a char sequence of length at least &lt;a href=&quot;pad-start#kotlin.text%24padStart(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Char)/length&quot;&gt;length&lt;/a&gt; consisting of &lt;code&gt;this&lt;/code&gt; char sequence prepended with &lt;a href=&quot;pad-start#kotlin.text%24padStart(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Char)/padChar&quot;&gt;padChar&lt;/a&gt; as many times as are necessary to reach that length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f60d641eaede731f221b7060f1f3e9e4d481bc2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; Returns a string of length at least &lt;a href=&quot;pad-end#kotlin.text%24padEnd%28kotlin.String%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;length&lt;/a&gt; consisting of &lt;code&gt;this&lt;/code&gt; string appended with &lt;a href=&quot;pad-end#kotlin.text%24padEnd%28kotlin.String%2C+kotlin.Int%2C+kotlin.Char%29%2FpadChar&quot;&gt;padChar&lt;/a&gt; as many times as are necessary to reach that length.</source>
          <target state="translated">&lt;strong&gt;返回值&lt;/strong&gt;返回一个长度至少 &lt;code&gt;this&lt;/code&gt; 字符串的&lt;a href=&quot;pad-end#kotlin.text%24padEnd%28kotlin.String%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;长度&lt;/a&gt;的字符串，该字符串由&lt;a href=&quot;pad-end#kotlin.text%24padEnd%28kotlin.String%2C+kotlin.Int%2C+kotlin.Char%29%2FpadChar&quot;&gt;padChar加上&lt;/a&gt;达到该长度所需的次数。</target>
        </trans-unit>
        <trans-unit id="e337b4e01c532c990ee7b50076f6662262bfadb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; Returns a string of length at least &lt;a href=&quot;pad-end#kotlin.text%24padEnd(kotlin.String,%20kotlin.Int,%20kotlin.Char)/length&quot;&gt;length&lt;/a&gt; consisting of &lt;code&gt;this&lt;/code&gt; string appended with &lt;a href=&quot;pad-end#kotlin.text%24padEnd(kotlin.String,%20kotlin.Int,%20kotlin.Char)/padChar&quot;&gt;padChar&lt;/a&gt; as many times as are necessary to reach that length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0e97a5d1532dd289cbd00cb8febad2ebc006ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; Returns a string of length at least &lt;a href=&quot;pad-start#kotlin.text%24padStart%28kotlin.String%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;length&lt;/a&gt; consisting of &lt;code&gt;this&lt;/code&gt; string prepended with &lt;a href=&quot;pad-start#kotlin.text%24padStart%28kotlin.String%2C+kotlin.Int%2C+kotlin.Char%29%2FpadChar&quot;&gt;padChar&lt;/a&gt; as many times as are necessary to reach that length.</source>
          <target state="translated">&lt;strong&gt;返回值&lt;/strong&gt;返回一个长度至少 &lt;code&gt;this&lt;/code&gt; 字符串的&lt;a href=&quot;pad-start#kotlin.text%24padStart%28kotlin.String%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;长度&lt;/a&gt;的字符串，该字符串由&lt;a href=&quot;pad-start#kotlin.text%24padStart%28kotlin.String%2C+kotlin.Int%2C+kotlin.Char%29%2FpadChar&quot;&gt;padChar&lt;/a&gt;组成，并需要达到该长度的次数。</target>
        </trans-unit>
        <trans-unit id="36ccbf6f5df47d3459a00b0c2860027c7748eae0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; Returns a string of length at least &lt;a href=&quot;pad-start#kotlin.text%24padStart(kotlin.String,%20kotlin.Int,%20kotlin.Char)/length&quot;&gt;length&lt;/a&gt; consisting of &lt;code&gt;this&lt;/code&gt; string prepended with &lt;a href=&quot;pad-start#kotlin.text%24padStart(kotlin.String,%20kotlin.Int,%20kotlin.Char)/padChar&quot;&gt;padChar&lt;/a&gt; as many times as are necessary to reach that length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d2bfaf1aa7e0d001ef17a623b8853662f84965" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; The &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;的&lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;目的地&lt;/a&gt;的地图。</target>
        </trans-unit>
        <trans-unit id="778fbef5dee9882db535983ba2b4d6a30194cda7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; The &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;的&lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;目的地&lt;/a&gt;的地图。</target>
        </trans-unit>
        <trans-unit id="bbacdc249ef59b7019772a93fea3a391cc671301" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; The &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;的&lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;目的地&lt;/a&gt;的地图。</target>
        </trans-unit>
        <trans-unit id="971b1a111fa49abbc52dc55c9059a6defa065fb3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; The &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;的&lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;目的地&lt;/a&gt;的地图。</target>
        </trans-unit>
        <trans-unit id="79aa3d3a40172dffecb1f66d2b99948371e5e4b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; The &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af3514668ca5a488620672156f30bedca227a32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; The &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d6d9413d03c4cbeacb9b511c52e5602992c9ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; The &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337b4144813bc656d24c140094ca5f27fba86d9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; The &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8ef7cc2d4624d80dc45bba07cbc871b1c65fd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; The &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;的&lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2Fdestination&quot;&gt;目的地&lt;/a&gt;的地图。</target>
        </trans-unit>
        <trans-unit id="7a13a91417e9f4cda94ea862a2c14b5d12b50ec7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; The &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;的&lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2Fdestination&quot;&gt;目的地&lt;/a&gt;的地图。</target>
        </trans-unit>
        <trans-unit id="f5054285fb273a051f008606fda23b4479c9e7d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; The &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e58c434112929b21737d44cd2abdda949bc48a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; The &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd830ad513290b53fb7d18b6c571053d207675d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; This method never returns normally.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;值此方法永远不会正常返回。</target>
        </trans-unit>
        <trans-unit id="f79b336185113f28a5e8c19738212cf11e2ce174" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; a &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; associating the key of each group with the count of element in the group.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;一个&lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt;，将每个组的键与组中元素的数量相关联。</target>
        </trans-unit>
        <trans-unit id="4b2bcc4c304883498cd841b079d1ea9f4ad7ec6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; a &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; associating the key of each group with the count of elements in the group.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;一个&lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt;，将每个组的键与组中元素的数量相关联。</target>
        </trans-unit>
        <trans-unit id="92e4c78b65c9a633d5b3fde208c21636da22c900" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; a &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; associating the key of each group with the result of accumulating the group elements.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;一个&lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt;，将每个组的键与累积组元素的结果相关联。</target>
        </trans-unit>
        <trans-unit id="36136cc4d5676787a1a14efcd50d7d8b70d826c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; a &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; associating the key of each group with the result of aggregation of the group elements.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;一个&lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt;，将每个组的键与组元素的聚合结果相关联。</target>
        </trans-unit>
        <trans-unit id="294ff37c2322a4c56ecea7db52c0d54cd2b4f79b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; a byte array with this URL entire content.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;带有此URL整个内容的字节数组。</target>
        </trans-unit>
        <trans-unit id="3cbc799d7826647bc9a71e6d72a766656ce46405" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; a file object corresponding to a newly-created directory.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;与新创建的目录相对应的文件对象。</target>
        </trans-unit>
        <trans-unit id="b965b504748aed686b87a58974f88b91857caabc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; a file object corresponding to a newly-created file.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;与新创建的文件相对应的文件对象。</target>
        </trans-unit>
        <trans-unit id="02bcdfc6e31df51b1d65fca5b0cb566548dd0e8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; a sequence of corresponding file lines. The sequence returned can be iterated only once.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;一系列相应的文件行。返回的序列只能迭代一次。</target>
        </trans-unit>
        <trans-unit id="2160e32351bd00d00c4490b91708257b5bca54ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; a string with this URL entire content.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;带有此URL整个内容的字符串。</target>
        </trans-unit>
        <trans-unit id="9ecc7ab2d534b07ebe5f3acac091a7bc6d580dbb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; concatenated this and &lt;a href=&quot;resolve#kotlin.io%24resolve%28java.io.File%2C+java.io.File%29%2Frelative&quot;&gt;relative&lt;/a&gt; paths, or just &lt;a href=&quot;resolve#kotlin.io%24resolve%28java.io.File%2C+java.io.File%29%2Frelative&quot;&gt;relative&lt;/a&gt; if it's absolute.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;串接这和&lt;a href=&quot;resolve#kotlin.io%24resolve%28java.io.File%2C+java.io.File%29%2Frelative&quot;&gt;相对&lt;/a&gt;路径，或者只是&lt;a href=&quot;resolve#kotlin.io%24resolve%28java.io.File%2C+java.io.File%29%2Frelative&quot;&gt;相对的&lt;/a&gt;，如果它是绝对的。</target>
        </trans-unit>
        <trans-unit id="31371dbb418b67ca7aa434b39b320ed1b192c649" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; concatenated this and &lt;a href=&quot;resolve#kotlin.io%24resolve%28java.io.File%2C+kotlin.String%29%2Frelative&quot;&gt;relative&lt;/a&gt; paths, or just &lt;a href=&quot;resolve#kotlin.io%24resolve%28java.io.File%2C+kotlin.String%29%2Frelative&quot;&gt;relative&lt;/a&gt; if it's absolute.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;串接这和&lt;a href=&quot;resolve#kotlin.io%24resolve%28java.io.File%2C+kotlin.String%29%2Frelative&quot;&gt;相对&lt;/a&gt;路径，或者只是&lt;a href=&quot;resolve#kotlin.io%24resolve%28java.io.File%2C+kotlin.String%29%2Frelative&quot;&gt;相对的&lt;/a&gt;，如果它是绝对的。</target>
        </trans-unit>
        <trans-unit id="0ae62d836c9d7471db26f06dbe69227b3bcfe14a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; concatenated this and &lt;a href=&quot;resolve#kotlin.io%24resolve(java.io.File,%20java.io.File)/relative&quot;&gt;relative&lt;/a&gt; paths, or just &lt;a href=&quot;resolve#kotlin.io%24resolve(java.io.File,%20java.io.File)/relative&quot;&gt;relative&lt;/a&gt; if it's absolute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561957e57ee9c46c291f7b3830db5ea113e09107" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; concatenated this and &lt;a href=&quot;resolve#kotlin.io%24resolve(java.io.File,%20kotlin.String)/relative&quot;&gt;relative&lt;/a&gt; paths, or just &lt;a href=&quot;resolve#kotlin.io%24resolve(java.io.File,%20kotlin.String)/relative&quot;&gt;relative&lt;/a&gt; if it's absolute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3b041dfb6a04ced4ee7e624743c6da9c4f43f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; concatenated this.parent and &lt;a href=&quot;resolve-sibling#kotlin.io%24resolveSibling%28java.io.File%2C+java.io.File%29%2Frelative&quot;&gt;relative&lt;/a&gt; paths, or just &lt;a href=&quot;resolve-sibling#kotlin.io%24resolveSibling%28java.io.File%2C+java.io.File%29%2Frelative&quot;&gt;relative&lt;/a&gt; if it's absolute or this has no parent.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;级联this.parent和&lt;a href=&quot;resolve-sibling#kotlin.io%24resolveSibling%28java.io.File%2C+java.io.File%29%2Frelative&quot;&gt;相对&lt;/a&gt;路径，或者只是&lt;a href=&quot;resolve-sibling#kotlin.io%24resolveSibling%28java.io.File%2C+java.io.File%29%2Frelative&quot;&gt;相对的&lt;/a&gt;，如果它是绝对的或本没有父。</target>
        </trans-unit>
        <trans-unit id="43a48306ba4c43d0088fb67cb705b208bcc9386a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; concatenated this.parent and &lt;a href=&quot;resolve-sibling#kotlin.io%24resolveSibling%28java.io.File%2C+kotlin.String%29%2Frelative&quot;&gt;relative&lt;/a&gt; paths, or just &lt;a href=&quot;resolve-sibling#kotlin.io%24resolveSibling%28java.io.File%2C+kotlin.String%29%2Frelative&quot;&gt;relative&lt;/a&gt; if it's absolute or this has no parent.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;级联this.parent和&lt;a href=&quot;resolve-sibling#kotlin.io%24resolveSibling%28java.io.File%2C+kotlin.String%29%2Frelative&quot;&gt;相对&lt;/a&gt;路径，或者只是&lt;a href=&quot;resolve-sibling#kotlin.io%24resolveSibling%28java.io.File%2C+kotlin.String%29%2Frelative&quot;&gt;相对的&lt;/a&gt;，如果它是绝对的或本没有父。</target>
        </trans-unit>
        <trans-unit id="8c32ea079588cd7be27db90cb2b16a7f97d215a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; concatenated this.parent and &lt;a href=&quot;resolve-sibling#kotlin.io%24resolveSibling(java.io.File,%20java.io.File)/relative&quot;&gt;relative&lt;/a&gt; paths, or just &lt;a href=&quot;resolve-sibling#kotlin.io%24resolveSibling(java.io.File,%20java.io.File)/relative&quot;&gt;relative&lt;/a&gt; if it's absolute or this has no parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc4362f40601bcd581afe9082b1891bb148b95fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; concatenated this.parent and &lt;a href=&quot;resolve-sibling#kotlin.io%24resolveSibling(java.io.File,%20kotlin.String)/relative&quot;&gt;relative&lt;/a&gt; paths, or just &lt;a href=&quot;resolve-sibling#kotlin.io%24resolveSibling(java.io.File,%20kotlin.String)/relative&quot;&gt;relative&lt;/a&gt; if it's absolute or this has no parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e674a28395d4c8a0a8235bc694efcc02a5659e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; current worker object, usable across multiple concurrent contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed387a70b2107529c3147a5751b058e0bafad24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; if &lt;a href=&quot;park#kotlin.native.concurrent.Worker%24park(kotlin.Long,%20kotlin.Boolean)/process&quot;&gt;process&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;: if request(s) was processed &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; otherwise. if &lt;a href=&quot;park#kotlin.native.concurrent.Worker%24park(kotlin.Long,%20kotlin.Boolean)/process&quot;&gt;process&lt;/a&gt; is &lt;code&gt;false&lt;/code&gt;:&lt;code&gt; true&lt;/code&gt; if request(s) has arrived and &lt;code&gt;false&lt;/code&gt; if timeout happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b42f6092865f9dfce116ae493656407a723eb0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; list of file lines.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;文件行列表。</target>
        </trans-unit>
        <trans-unit id="256270599d2a21266de9d3ca44caf6ec9a0edd62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; normalized pathname with . and possibly .. removed.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;带有的标准化路径名。并可能被删除。</target>
        </trans-unit>
        <trans-unit id="6ce77fb5c185e1e599932236eccf578ac0149806" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; number of characters copied.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;复制的字符数。</target>
        </trans-unit>
        <trans-unit id="a1ecafc512de705dfc66f3c708cb522d48dec844" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; relative path from &lt;a href=&quot;to-relative-string#kotlin.io%24toRelativeString%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;base&lt;/a&gt; to this.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;从&lt;a href=&quot;to-relative-string#kotlin.io%24toRelativeString%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;基准&lt;/a&gt;到此的相对路径。</target>
        </trans-unit>
        <trans-unit id="af35665451b3dd8bdf61bf03a60058a38d2888cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; relative path from &lt;a href=&quot;to-relative-string#kotlin.io%24toRelativeString(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; to this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce25bd9a12866f3c99d0b4009527916b203f6dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; string representation of this object</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;此对象的字符串表示形式</target>
        </trans-unit>
        <trans-unit id="f5d2e4f8e57b0a253d027c3b2bb8de882ea47e58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the &lt;a href=&quot;../kotlin/-string/index#kotlin.String&quot;&gt;kotlin.String&lt;/a&gt; decoded from given zero-terminated UTF-16-encoded C string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b20c10d7af90fee920d0dc90331d85c72b0c247" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the &lt;a href=&quot;../kotlin/-string/index#kotlin.String&quot;&gt;kotlin.String&lt;/a&gt; decoded from given zero-terminated UTF-32-encoded C string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28465bb24f4d73ac43c5b74f694aa588808d278" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the &lt;a href=&quot;../kotlin/-string/index#kotlin.String&quot;&gt;kotlin.String&lt;/a&gt; decoded from given zero-terminated UTF-8-encoded C string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="973b5f4d8230019a26ae4a00e23bd3985b1352da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map associating the key of each group with the result of aggregation of the group elements.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;将每个组的键与组元素的聚合结果相关联的&lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Fdestination&quot;&gt;目标&lt;/a&gt;映射。</target>
        </trans-unit>
        <trans-unit id="224d9e6e6a12aa7c1f19ba5bee8bfa258bb26dcc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/destination&quot;&gt;destination&lt;/a&gt; map associating the key of each group with the result of aggregation of the group elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f805614a95b3a152a4e8e3503fc9c1fa30a424" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the &lt;a href=&quot;copy-into#kotlin.collections%24copyInto%28kotlin.Array%28%28kotlin.collections.copyInto.T%29%29%2C+kotlin.Array%28%28kotlin.collections.copyInto.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;destination&lt;/a&gt; array.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;的&lt;a href=&quot;copy-into#kotlin.collections%24copyInto%28kotlin.Array%28%28kotlin.collections.copyInto.T%29%29%2C+kotlin.Array%28%28kotlin.collections.copyInto.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;目的地&lt;/a&gt;阵列。</target>
        </trans-unit>
        <trans-unit id="087c6dc8143f829497cf0861e5fbfaeadd61d939" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the &lt;a href=&quot;copy-into#kotlin.collections%24copyInto%28kotlin.UIntArray%2C+kotlin.UIntArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;destination&lt;/a&gt; array.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;的&lt;a href=&quot;copy-into#kotlin.collections%24copyInto%28kotlin.UIntArray%2C+kotlin.UIntArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;目的地&lt;/a&gt;阵列。</target>
        </trans-unit>
        <trans-unit id="a3fa4da53189ea072f3bc0d1347996add71a70aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the &lt;a href=&quot;copy-into#kotlin.collections%24copyInto(kotlin.Array((kotlin.collections.copyInto.T)),%20kotlin.Array((kotlin.collections.copyInto.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;destination&lt;/a&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689cd3e15bd89c43c963ad4adaee16f5e6db2700" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the &lt;a href=&quot;copy-into#kotlin.collections%24copyInto(kotlin.UIntArray,%20kotlin.UIntArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;destination&lt;/a&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa8216fba791e145052d8ac7b1b86596eaaf2af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the &lt;a href=&quot;copy-to#kotlin.io%24copyTo%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Int%29%2Ftarget&quot;&gt;target&lt;/a&gt; file.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;的&lt;a href=&quot;copy-to#kotlin.io%24copyTo%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Int%29%2Ftarget&quot;&gt;目标&lt;/a&gt;文件。</target>
        </trans-unit>
        <trans-unit id="95cb893295291229553b1328f496119b2a585ad3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the &lt;a href=&quot;copy-to#kotlin.io%24copyTo(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Int)/target&quot;&gt;target&lt;/a&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27acc9ba82f869dfcfb4143708f8793837edb3f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the &lt;a href=&quot;each-count-to#kotlin.collections%24eachCountTo%28kotlin.collections.Grouping%28%28kotlin.collections.eachCountTo.T%2C+kotlin.collections.eachCountTo.K%29%29%2C+kotlin.collections.eachCountTo.M%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map associating the key of each group with the count of elements in the group.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;将每个组的键与组中元素计数相关联的&lt;a href=&quot;each-count-to#kotlin.collections%24eachCountTo%28kotlin.collections.Grouping%28%28kotlin.collections.eachCountTo.T%2C+kotlin.collections.eachCountTo.K%29%29%2C+kotlin.collections.eachCountTo.M%29%2Fdestination&quot;&gt;目标&lt;/a&gt;映射。</target>
        </trans-unit>
        <trans-unit id="a3cd9927a085c926037de48702513ac9d5540669" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the &lt;a href=&quot;each-count-to#kotlin.collections%24eachCountTo(kotlin.collections.Grouping((kotlin.collections.eachCountTo.T,%20kotlin.collections.eachCountTo.K)),%20kotlin.collections.eachCountTo.M)/destination&quot;&gt;destination&lt;/a&gt; map associating the key of each group with the count of elements in the group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5af6d228a8fe297ad2c9af4dd93e2e1552665f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map associating the key of each group with the result of accumulating the group elements.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;将每个组的键与累积组元素的结果相关联的&lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;目标&lt;/a&gt;映射。</target>
        </trans-unit>
        <trans-unit id="2749e310c879a209eb22a1cb5a1bbb756f468c5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map associating the key of each group with the result of accumulating the group elements.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;将每个组的键与累积组元素的结果相关联的&lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;目标&lt;/a&gt;映射。</target>
        </trans-unit>
        <trans-unit id="68da6b890b3d86b0e3aa7ecc9171c2ae85c17c62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map associating the key of each group with the result of accumulating the group elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ccd834d47b4297bba74d16813ca51b87e33b06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map associating the key of each group with the result of accumulating the group elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6deb61e01cb64a5e31cdccfc2d658785b1ea8c2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map associating the key of each group with the result of accumulating the group elements.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;将每个组的键与累积组元素的结果相关联的&lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Fdestination&quot;&gt;目标&lt;/a&gt;映射。</target>
        </trans-unit>
        <trans-unit id="f025c1c1e38b9a0ce774f6f04d8487cf1a8ecbdc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map associating the key of each group with the result of accumulating the group elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4a378a10b965ebe2f261cbc1dd494566ffb215" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the destination map.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;目的地地图。</target>
        </trans-unit>
        <trans-unit id="3ffdb26837bd49ca6323472de0c0724c658f82b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the element from the set equal to element, or &lt;code&gt;null&lt;/code&gt; if no such element found.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;从集合中&lt;strong&gt;返回&lt;/strong&gt;等于element的元素；如果找不到此类元素，则&lt;strong&gt;返回&lt;/strong&gt; &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6300c053d377865c4d06fbe7cdc2058630e2ced5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the element previously at the specified position.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;先前位于指定位置的元素。</target>
        </trans-unit>
        <trans-unit id="4b6efc09075ed5094d13d36ec3f3ad9b32b91055" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the element that has been removed.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;已删除的元素。</target>
        </trans-unit>
        <trans-unit id="382bba963167e06f2f03ca507ecf8dcb8a28e37c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the entire content of this file as a String.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;以String形式&lt;strong&gt;返回&lt;/strong&gt;此文件的全部内容。</target>
        </trans-unit>
        <trans-unit id="758a96abb0c21b8ac3df91694c8e0d2aa00171a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the entire content of this file as a byte array.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;以字节数组形式&lt;strong&gt;返回&lt;/strong&gt;此文件的全部内容。</target>
        </trans-unit>
        <trans-unit id="09490c594c8cba913ada9f3b5e30e509ed11661a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the execution result of &lt;a href=&quot;consume#kotlin.native.concurrent.Future%24consume%28kotlin.Function1%28%28kotlin.native.concurrent.Future.T%2C+kotlin.native.concurrent.Future.consume.R%29%29%29%2Fcode&quot;&gt;code&lt;/a&gt; consumed future's computaiton</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;消耗了未来计算的&lt;a href=&quot;consume#kotlin.native.concurrent.Future%24consume%28kotlin.Function1%28%28kotlin.native.concurrent.Future.T%2C+kotlin.native.concurrent.Future.consume.R%29%29%29%2Fcode&quot;&gt;代码&lt;/a&gt;的执行结果</target>
        </trans-unit>
        <trans-unit id="f8d81ac8ba68095871d2a2fec87659eb3c4a254e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the execution result of &lt;a href=&quot;consume#kotlin.native.concurrent.Future%24consume(kotlin.Function1((kotlin.native.concurrent.Future.T,%20kotlin.native.concurrent.Future.consume.R)))/code&quot;&gt;code&lt;/a&gt; consumed future's computaiton</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf69a9f8d5e44e4110ffc060bd8888111cfb959" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the future with the computation result of &lt;a href=&quot;execute#kotlin.native.concurrent.Worker%24execute%28kotlin.native.concurrent.TransferMode%2C+kotlin.Function0%28%28kotlin.native.concurrent.Worker.execute.T1%29%29%2C+kotlin.Function1%28%28kotlin.native.concurrent.Worker.execute.T1%2C+kotlin.native.concurrent.Worker.execute.T2%29%29%29%2Fjob&quot;&gt;job&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;用&lt;a href=&quot;execute#kotlin.native.concurrent.Worker%24execute%28kotlin.native.concurrent.TransferMode%2C+kotlin.Function0%28%28kotlin.native.concurrent.Worker.execute.T1%29%29%2C+kotlin.Function1%28%28kotlin.native.concurrent.Worker.execute.T1%2C+kotlin.native.concurrent.Worker.execute.T2%29%29%29%2Fjob&quot;&gt;作业&lt;/a&gt;的计算结果&lt;strong&gt;回报&lt;/strong&gt;未来</target>
        </trans-unit>
        <trans-unit id="cedbfe281a94ec078edcb72f7db7978aacbad813" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the future with the computation result of &lt;a href=&quot;execute#kotlin.native.concurrent.Worker%24execute(kotlin.native.concurrent.TransferMode,%20kotlin.Function0((kotlin.native.concurrent.Worker.execute.T1)),%20kotlin.Function1((kotlin.native.concurrent.Worker.execute.T1,%20kotlin.native.concurrent.Worker.execute.T2)))/job&quot;&gt;job&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf37076c8aa3610a021ccc6077cc4a6b7e081332" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the index of the element with the specified &lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy%28kotlin.collections.List%28%28kotlin.collections.binarySearchBy.T%29%29%2C+kotlin.collections.binarySearchBy.K%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearchBy.T%2C+kotlin.collections.binarySearchBy.K%29%29%29%2Fkey&quot;&gt;key&lt;/a&gt;, if it is contained in the list within the specified range; otherwise, the inverted insertion point &lt;code&gt;(-insertion point - 1)&lt;/code&gt;. The insertion point is defined as the index at which the element should be inserted, so that the list (or the specified subrange of list) still remains sorted.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果包含在指定范围内的列表中，则&lt;strong&gt;返回&lt;/strong&gt;具有指定&lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy%28kotlin.collections.List%28%28kotlin.collections.binarySearchBy.T%29%29%2C+kotlin.collections.binarySearchBy.K%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearchBy.T%2C+kotlin.collections.binarySearchBy.K%29%29%29%2Fkey&quot;&gt;键&lt;/a&gt;的元素的索引。否则为反向插入点 &lt;code&gt;(-insertion point - 1)&lt;/code&gt; 。插入点定义为元素应插入的索引，因此列表（或列表的指定子范围）仍保持排序。</target>
        </trans-unit>
        <trans-unit id="4b7942cf5f38ae558d3b45b152b06d0bf1653227" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the index of the element with the specified &lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy(kotlin.collections.List((kotlin.collections.binarySearchBy.T)),%20kotlin.collections.binarySearchBy.K?,%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearchBy.T,%20kotlin.collections.binarySearchBy.K?)))/key&quot;&gt;key&lt;/a&gt;, if it is contained in the list within the specified range; otherwise, the inverted insertion point &lt;code&gt;(-insertion point - 1)&lt;/code&gt;. The insertion point is defined as the index at which the element should be inserted, so that the list (or the specified subrange of list) still remains sorted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9e803d777b9557c6245e5dedc04acbbb5d503c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the index of the element, if it is contained in the array within the specified range; otherwise, the inverted insertion point &lt;code&gt;(-insertion point - 1)&lt;/code&gt;. The insertion point is defined as the index at which the element should be inserted, so that the array (or the specified subrange of array) still remains sorted according to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+java.util.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果元素的索引包含在指定范围内的数组中，则&lt;strong&gt;返回&lt;/strong&gt;该元素的索引；否则为反向插入点 &lt;code&gt;(-insertion point - 1)&lt;/code&gt; 。插入点定义为元素应插入的索引，因此数组（或数组的指定子范围）仍保持根据指定的&lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+java.util.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;比较器&lt;/a&gt;进行排序。</target>
        </trans-unit>
        <trans-unit id="fd1c6d48862ea578bac83905bf333dcfb963c12a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the index of the element, if it is contained in the array within the specified range; otherwise, the inverted insertion point &lt;code&gt;(-insertion point - 1)&lt;/code&gt;. The insertion point is defined as the index at which the element should be inserted, so that the array (or the specified subrange of array) still remains sorted according to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20java.util.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775f5fbcf66d03b13237514b6f1147dc2657d711" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the index of the element, if it is contained in the array within the specified range; otherwise, the inverted insertion point &lt;code&gt;(-insertion point - 1)&lt;/code&gt;. The insertion point is defined as the index at which the element should be inserted, so that the array (or the specified subrange of array) still remains sorted.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果元素的索引包含在指定范围内的数组中，则&lt;strong&gt;返回&lt;/strong&gt;该元素的索引；否则为反向插入点 &lt;code&gt;(-insertion point - 1)&lt;/code&gt; 。插入点定义为元素应插入的索引，以便数组（或数组的指定子范围）仍保持排序。</target>
        </trans-unit>
        <trans-unit id="4012a5fc0b31f5f794d06557456223ca53026758" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the index of the element, if it is contained in the list within the specified range; otherwise, the inverted insertion point &lt;code&gt;(-insertion point - 1)&lt;/code&gt;. The insertion point is defined as the index at which the element should be inserted, so that the list (or the specified subrange of list) still remains sorted according to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果元素的索引包含在指定范围内的列表中，则&lt;strong&gt;返回&lt;/strong&gt;它；否则为反向插入点 &lt;code&gt;(-insertion point - 1)&lt;/code&gt; 。插入点定义为元素应插入的索引，因此列表（或列表的指定子范围）仍保持根据指定的&lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;比较器&lt;/a&gt;进行排序。</target>
        </trans-unit>
        <trans-unit id="e5bce0744b34ac490a9b541cf9d14749000a4c83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the index of the element, if it is contained in the list within the specified range; otherwise, the inverted insertion point &lt;code&gt;(-insertion point - 1)&lt;/code&gt;. The insertion point is defined as the index at which the element should be inserted, so that the list (or the specified subrange of list) still remains sorted according to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abae2c4f17052a4b6d596da5189044e957f8c2d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the index of the element, if it is contained in the list within the specified range; otherwise, the inverted insertion point &lt;code&gt;(-insertion point - 1)&lt;/code&gt;. The insertion point is defined as the index at which the element should be inserted, so that the list (or the specified subrange of list) still remains sorted.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果元素的索引包含在指定范围内的列表中，则&lt;strong&gt;返回&lt;/strong&gt;它；否则为反向插入点 &lt;code&gt;(-insertion point - 1)&lt;/code&gt; 。插入点定义为元素应插入的索引，因此列表（或列表的指定子范围）仍保持排序。</target>
        </trans-unit>
        <trans-unit id="e5fe5f925a5408c0d4452496efd7d3368efdf5a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the index of the found element, if it is contained in the list within the specified range; otherwise, the inverted insertion point &lt;code&gt;(-insertion point - 1)&lt;/code&gt;. The insertion point is defined as the index at which the element should be inserted, so that the list (or the specified subrange of list) still remains sorted.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;所找到的元素的索引，如果是包含在指定范围内的列表; 否则为反向插入点 &lt;code&gt;(-insertion point - 1)&lt;/code&gt; 。插入点定义为元素应插入的索引，因此列表（或列表的指定子范围）仍保持排序。</target>
        </trans-unit>
        <trans-unit id="41464353a5432abc68472aa43a87fd4510b66d44" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the line read or &lt;code&gt;null&lt;/code&gt; if the input stream is redirected to a file and the end of file has been reached.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果将输入流重定向到文件并且已到达文件末尾，则&lt;strong&gt;返回&lt;/strong&gt;读取行或 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="00abd1476dcc6800f13251d34e163fce122295c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the new value</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;新值</target>
        </trans-unit>
        <trans-unit id="a73dc1ce77b3bdfeac35c82c9879a06dd45e6a03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the object itself</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;对象本身</target>
        </trans-unit>
        <trans-unit id="db93ac379ad2f180bcdfb49bb7c431587be8eb18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the old value</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;旧值</target>
        </trans-unit>
        <trans-unit id="821843a1f954a65c716e7255aeb29be633cee248" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the previous value associated with the key, or &lt;code&gt;null&lt;/code&gt; if the key was not present in the map.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;与键关联的先前值；如果键不存在于映射中，则&lt;strong&gt;返回&lt;/strong&gt; &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="adc207d839de621d9c31c133016cf8005e9b9252" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the previous value corresponding to the key.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;对应于键的先前值。</target>
        </trans-unit>
        <trans-unit id="3941709d6d73dd8dbd8d29457d28b1b0d071697b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the property delegate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77648af26f413a409abe1497f04a2604b578679d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the property value.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;属性值。</target>
        </trans-unit>
        <trans-unit id="b34b5d7fb86e6028af57a8267e0f39b46a7b3497" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the result of &lt;a href=&quot;use#kotlin%24use%28kotlin.use.T%2C+kotlin.Function1%28%28kotlin.use.T%2C+kotlin.use.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; function invoked on this resource.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;在此资源上调用的&lt;a href=&quot;use#kotlin%24use%28kotlin.use.T%2C+kotlin.Function1%28%28kotlin.use.T%2C+kotlin.use.R%29%29%29%2Fblock&quot;&gt;块&lt;/a&gt;函数的结果。</target>
        </trans-unit>
        <trans-unit id="51ebaa7cc2e5c3e117819f0711d8c948908f0ba9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the result of &lt;a href=&quot;use#kotlin%24use(kotlin.use.T,%20kotlin.Function1((kotlin.use.T,%20kotlin.use.R)))/block&quot;&gt;block&lt;/a&gt; function invoked on this resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca380295624f3c8e722370e31c8fa7de0db445a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the result of &lt;a href=&quot;use#kotlin.io%24use%28kotlin.io.use.T%2C+kotlin.Function1%28%28kotlin.io.use.T%2C+kotlin.io.use.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; function invoked on this resource.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;在此资源上调用的&lt;a href=&quot;use#kotlin.io%24use%28kotlin.io.use.T%2C+kotlin.Function1%28%28kotlin.io.use.T%2C+kotlin.io.use.R%29%29%29%2Fblock&quot;&gt;块&lt;/a&gt;函数的结果。</target>
        </trans-unit>
        <trans-unit id="2be966ef251f6eab97a13a1fd6a5d797bca3e25e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the result of &lt;a href=&quot;use#kotlin.io%24use(kotlin.io.use.T,%20kotlin.Function1((kotlin.io.use.T,%20kotlin.io.use.R)))/block&quot;&gt;block&lt;/a&gt; function invoked on this resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7c24babc900efa5939c997b50c0afd279e1935" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the return value of the action.</source>
          <target state="translated">&lt;strong&gt;返回操作&lt;/strong&gt;的返回值。</target>
        </trans-unit>
        <trans-unit id="9acb31899c688723a198db0fea2351bf1f0c8851" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the string representation</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;字符串表示形式</target>
        </trans-unit>
        <trans-unit id="7f1084fcaa9cd90ed762eab06c702383411ffc60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the string representation of this object</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;此对象的字符串表示形式</target>
        </trans-unit>
        <trans-unit id="f76c792698e8a436238db69e950de4a32eeed2ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the string with corresponding file content.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;带有相应文件内容的字符串。</target>
        </trans-unit>
        <trans-unit id="e1840164c7a7f15a71983f52de6968711a7c0d39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the value of duration in the automatically determined unit followed by that unit abbreviated name: &lt;code&gt;d&lt;/code&gt;, &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt;, &lt;code&gt;ms&lt;/code&gt;, &lt;code&gt;us&lt;/code&gt;, or &lt;code&gt;ns&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc845a1e8e2c801a4ade543f22cf8bc35e441ac6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the value of duration in the specified &lt;a href=&quot;to-string#kotlin.time.Duration%24toString(kotlin.time.DurationUnit,%20kotlin.Int)/unit&quot;&gt;unit&lt;/a&gt; followed by that unit abbreviated name: &lt;code&gt;d&lt;/code&gt;, &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt;, &lt;code&gt;ms&lt;/code&gt;, &lt;code&gt;us&lt;/code&gt;, or &lt;code&gt;ns&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d6632775df07622742f88b18e797e8e461cfd4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the value of zero-terminated UTF-16-encoded C string constructed from given &lt;a href=&quot;../kotlin/-string/index#kotlin.String&quot;&gt;kotlin.String&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df224238d952e9cfd2d191873cf01db9bcd1b5b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the value of zero-terminated UTF-32-encoded C string constructed from given &lt;a href=&quot;../kotlin/-string/index#kotlin.String&quot;&gt;kotlin.String&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98df93ad3f5715a2918e457b385736d44a6859a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the value of zero-terminated UTF-8-encoded C string constructed from given &lt;a href=&quot;../kotlin/-string/index#kotlin.String&quot;&gt;kotlin.String&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71dec34f7b948fa103ad12f043f524e474772ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the value returned by &lt;a href=&quot;use-lines#kotlin.io%24useLines%28java.io.File%2C+java.nio.charset.Charset%2C+kotlin.Function1%28%28kotlin.sequences.Sequence%28%28kotlin.String%29%29%2C+kotlin.io.useLines.T%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;&lt;a href=&quot;use-lines#kotlin.io%24useLines%28java.io.File%2C+java.nio.charset.Charset%2C+kotlin.Function1%28%28kotlin.sequences.Sequence%28%28kotlin.String%29%29%2C+kotlin.io.useLines.T%29%29%29%2Fblock&quot;&gt;block &lt;/a&gt;&lt;strong&gt;返回&lt;/strong&gt;的值。</target>
        </trans-unit>
        <trans-unit id="2880c5e8f0aa4a6d8cef3a6f0ea6a2ff942c56c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the value returned by &lt;a href=&quot;use-lines#kotlin.io%24useLines%28java.io.Reader%2C+kotlin.Function1%28%28kotlin.sequences.Sequence%28%28kotlin.String%29%29%2C+kotlin.io.useLines.T%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;&lt;a href=&quot;use-lines#kotlin.io%24useLines%28java.io.Reader%2C+kotlin.Function1%28%28kotlin.sequences.Sequence%28%28kotlin.String%29%29%2C+kotlin.io.useLines.T%29%29%29%2Fblock&quot;&gt;block &lt;/a&gt;&lt;strong&gt;返回&lt;/strong&gt;的值。</target>
        </trans-unit>
        <trans-unit id="296c80cf26288bef88c039293d8aca114375824c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the value returned by &lt;a href=&quot;use-lines#kotlin.io%24useLines(java.io.File,%20java.nio.charset.Charset,%20kotlin.Function1((kotlin.sequences.Sequence((kotlin.String)),%20kotlin.io.useLines.T)))/block&quot;&gt;block&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45433fe1ed7660b1c4a4f6e8f84d43fef9e4558c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; the value returned by &lt;a href=&quot;use-lines#kotlin.io%24useLines(java.io.Reader,%20kotlin.Function1((kotlin.sequences.Sequence((kotlin.String)),%20kotlin.io.useLines.T)))/block&quot;&gt;block&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877b5cecaa2b252b9ab89b3416e672326a38f4a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this element</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;这个元素</target>
        </trans-unit>
        <trans-unit id="34c508021b5caa10d465c47f4cb1ab0f113c6cf9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's greater than or equal to the &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; or the &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果此值大于或等于&lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;或&lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue，&lt;/a&gt;则&lt;strong&gt;返回&lt;/strong&gt;此值。</target>
        </trans-unit>
        <trans-unit id="61f5cd39885c1dc01b3d067d16a029be90fbaafa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's greater than or equal to the &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; or the &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果此值大于或等于&lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;或&lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue，&lt;/a&gt;则&lt;strong&gt;返回&lt;/strong&gt;此值。</target>
        </trans-unit>
        <trans-unit id="eebc7780d22e4143183c2a2547d4154da295f048" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's greater than or equal to the &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ranges.coerceAtLeast.T%2C+kotlin.ranges.coerceAtLeast.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; or the &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ranges.coerceAtLeast.T%2C+kotlin.ranges.coerceAtLeast.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果此值大于或等于&lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ranges.coerceAtLeast.T%2C+kotlin.ranges.coerceAtLeast.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;或&lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ranges.coerceAtLeast.T%2C+kotlin.ranges.coerceAtLeast.T%29%2FminimumValue&quot;&gt;minimumValue，&lt;/a&gt;则&lt;strong&gt;返回&lt;/strong&gt;此值。</target>
        </trans-unit>
        <trans-unit id="0d770054f757fa85dcc7e55340cb32c5361f4404" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's greater than or equal to the &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.Byte,%20kotlin.Byte)/minimumValue&quot;&gt;minimumValue&lt;/a&gt; or the &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.Byte,%20kotlin.Byte)/minimumValue&quot;&gt;minimumValue&lt;/a&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d5a69afd1150a5aaf2628746543e17a18cd26a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's greater than or equal to the &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.UInt,%20kotlin.UInt)/minimumValue&quot;&gt;minimumValue&lt;/a&gt; or the &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.UInt,%20kotlin.UInt)/minimumValue&quot;&gt;minimumValue&lt;/a&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca48e64da685985092bac6db6e45d5aaf2d44fe6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's greater than or equal to the &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.ranges.coerceAtLeast.T,%20kotlin.ranges.coerceAtLeast.T)/minimumValue&quot;&gt;minimumValue&lt;/a&gt; or the &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast(kotlin.ranges.coerceAtLeast.T,%20kotlin.ranges.coerceAtLeast.T)/minimumValue&quot;&gt;minimumValue&lt;/a&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef4840ed80dd804ff3a5986cc974374069431a7c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's in the &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.ranges.ClosedRange%28%28kotlin.Int%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;, or &lt;code&gt;range.start&lt;/code&gt; if this value is less than &lt;code&gt;range.start&lt;/code&gt;, or &lt;code&gt;range.endInclusive&lt;/code&gt; if this value is greater than &lt;code&gt;range.endInclusive&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;这个值，如果它在&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.ranges.ClosedRange%28%28kotlin.Int%29%29%29%2Frange&quot;&gt;范围内&lt;/a&gt;，或 &lt;code&gt;range.start&lt;/code&gt; 如果该值小于 &lt;code&gt;range.start&lt;/code&gt; ，或 &lt;code&gt;range.endInclusive&lt;/code&gt; 如果该值大于 &lt;code&gt;range.endInclusive&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d381ed6089bee31cf9657f7884d7cd800b684ae8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's in the &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.ranges.ClosedRange%28%28kotlin.UInt%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;, or &lt;code&gt;range.start&lt;/code&gt; if this value is less than &lt;code&gt;range.start&lt;/code&gt;, or &lt;code&gt;range.endInclusive&lt;/code&gt; if this value is greater than &lt;code&gt;range.endInclusive&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;这个值，如果它在&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.ranges.ClosedRange%28%28kotlin.UInt%29%29%29%2Frange&quot;&gt;范围内&lt;/a&gt;，或 &lt;code&gt;range.start&lt;/code&gt; 如果该值小于 &lt;code&gt;range.start&lt;/code&gt; ，或 &lt;code&gt;range.endInclusive&lt;/code&gt; 如果该值大于 &lt;code&gt;range.endInclusive&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8b9c6f76a81b7e32cbeffeef005b9ae1f6e6dd9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's in the &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedFloatingPointRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;, or &lt;code&gt;range.start&lt;/code&gt; if this value is less than &lt;code&gt;range.start&lt;/code&gt;, or &lt;code&gt;range.endInclusive&lt;/code&gt; if this value is greater than &lt;code&gt;range.endInclusive&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;这个值，如果它在&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedFloatingPointRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;范围内&lt;/a&gt;，或 &lt;code&gt;range.start&lt;/code&gt; 如果该值小于 &lt;code&gt;range.start&lt;/code&gt; ，或 &lt;code&gt;range.endInclusive&lt;/code&gt; 如果该值大于 &lt;code&gt;range.endInclusive&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fde12900ed9a027692d5c5cf119165bf6b3ecab3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's in the &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;, or &lt;code&gt;range.start&lt;/code&gt; if this value is less than &lt;code&gt;range.start&lt;/code&gt;, or &lt;code&gt;range.endInclusive&lt;/code&gt; if this value is greater than &lt;code&gt;range.endInclusive&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;这个值，如果它在&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;范围内&lt;/a&gt;，或 &lt;code&gt;range.start&lt;/code&gt; 如果该值小于 &lt;code&gt;range.start&lt;/code&gt; ，或 &lt;code&gt;range.endInclusive&lt;/code&gt; 如果该值大于 &lt;code&gt;range.endInclusive&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e5936190739c396a346ce216e464f0914d598f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's in the &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.Int,%20kotlin.ranges.ClosedRange((kotlin.Int)))/range&quot;&gt;range&lt;/a&gt;, or &lt;code&gt;range.start&lt;/code&gt; if this value is less than &lt;code&gt;range.start&lt;/code&gt;, or &lt;code&gt;range.endInclusive&lt;/code&gt; if this value is greater than &lt;code&gt;range.endInclusive&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6941bae2217cda0804d3edb381556b67549432" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's in the &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.UInt,%20kotlin.ranges.ClosedRange((kotlin.UInt)))/range&quot;&gt;range&lt;/a&gt;, or &lt;code&gt;range.start&lt;/code&gt; if this value is less than &lt;code&gt;range.start&lt;/code&gt;, or &lt;code&gt;range.endInclusive&lt;/code&gt; if this value is greater than &lt;code&gt;range.endInclusive&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40ce80f364ef69ff7792e71be989a6b0fae5b30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's in the &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.ranges.coerceIn.T,%20kotlin.ranges.ClosedFloatingPointRange((kotlin.ranges.coerceIn.T)))/range&quot;&gt;range&lt;/a&gt;, or &lt;code&gt;range.start&lt;/code&gt; if this value is less than &lt;code&gt;range.start&lt;/code&gt;, or &lt;code&gt;range.endInclusive&lt;/code&gt; if this value is greater than &lt;code&gt;range.endInclusive&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="131b07412b1e63af9a11ecd13d6df8c92d34401d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's in the &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.ranges.coerceIn.T,%20kotlin.ranges.ClosedRange((kotlin.ranges.coerceIn.T)))/range&quot;&gt;range&lt;/a&gt;, or &lt;code&gt;range.start&lt;/code&gt; if this value is less than &lt;code&gt;range.start&lt;/code&gt;, or &lt;code&gt;range.endInclusive&lt;/code&gt; if this value is greater than &lt;code&gt;range.endInclusive&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9021d0804acac0d3fc3135ad5a9f3e1ffebbb5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's in the range, or &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; if this value is less than &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;, or &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; if this value is greater than &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果该值在范围内，则&lt;strong&gt;返回&lt;/strong&gt;此值&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;；&lt;/a&gt;如果该值小于&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;，则&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;返回minimumValue；&lt;/a&gt;如果此值大于&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue，则返回maximumValue&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3ddf39adfe81fd55eda220beedb1ee0d92394473" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's in the range, or &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; if this value is less than &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;, or &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; if this value is greater than &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果该值在范围内，则&lt;strong&gt;返回&lt;/strong&gt;此值&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;；&lt;/a&gt;如果该值小于&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;，则&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;返回minimumValue；&lt;/a&gt;如果此值大于&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue，则返回maximumValue&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da8513adee04030a29903e7fe3e8de8a045fa249" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's in the range, or &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; if this value is less than &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;, or &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; if this value is greater than &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果该值在范围内，则&lt;strong&gt;返回&lt;/strong&gt;此值&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FminimumValue&quot;&gt;；&lt;/a&gt;如果该值小于&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;，则&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FmaximumValue&quot;&gt;返回minimumValue；&lt;/a&gt;如果此值大于&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FmaximumValue&quot;&gt;maximumValue，则返回maximumValue&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b86be739be6415362325a3f0d132fc7bf736158b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's in the range, or &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.Byte,%20kotlin.Byte,%20kotlin.Byte)/minimumValue&quot;&gt;minimumValue&lt;/a&gt; if this value is less than &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.Byte,%20kotlin.Byte,%20kotlin.Byte)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;, or &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.Byte,%20kotlin.Byte,%20kotlin.Byte)/maximumValue&quot;&gt;maximumValue&lt;/a&gt; if this value is greater than &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.Byte,%20kotlin.Byte,%20kotlin.Byte)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0cdf5312df1b090e403c74eb760a6516f662ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's in the range, or &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.UInt,%20kotlin.UInt,%20kotlin.UInt)/minimumValue&quot;&gt;minimumValue&lt;/a&gt; if this value is less than &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.UInt,%20kotlin.UInt,%20kotlin.UInt)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;, or &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.UInt,%20kotlin.UInt,%20kotlin.UInt)/maximumValue&quot;&gt;maximumValue&lt;/a&gt; if this value is greater than &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.UInt,%20kotlin.UInt,%20kotlin.UInt)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e0bd0de27c05aa113ac7d3d3a2ca17f91f32bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's in the range, or &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.ranges.coerceIn.T,%20kotlin.ranges.coerceIn.T?,%20kotlin.ranges.coerceIn.T?)/minimumValue&quot;&gt;minimumValue&lt;/a&gt; if this value is less than &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.ranges.coerceIn.T,%20kotlin.ranges.coerceIn.T?,%20kotlin.ranges.coerceIn.T?)/minimumValue&quot;&gt;minimumValue&lt;/a&gt;, or &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.ranges.coerceIn.T,%20kotlin.ranges.coerceIn.T?,%20kotlin.ranges.coerceIn.T?)/maximumValue&quot;&gt;maximumValue&lt;/a&gt; if this value is greater than &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn(kotlin.ranges.coerceIn.T,%20kotlin.ranges.coerceIn.T?,%20kotlin.ranges.coerceIn.T?)/maximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a83b42e6b05aeb66ee3667c04847973894c21f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's less than or equal to the &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; or the &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;这个值，如果是小于或等于&lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;或&lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;其他。</target>
        </trans-unit>
        <trans-unit id="415d71faaefdfb66496a4853672627b7685ce559" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's less than or equal to the &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; or the &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;这个值，如果是小于或等于&lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;或&lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;其他。</target>
        </trans-unit>
        <trans-unit id="69d49b427f4b8356fa72b73c611ce111cfb6a3cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's less than or equal to the &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ranges.coerceAtMost.T%2C+kotlin.ranges.coerceAtMost.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; or the &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ranges.coerceAtMost.T%2C+kotlin.ranges.coerceAtMost.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;这个值，如果是小于或等于&lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ranges.coerceAtMost.T%2C+kotlin.ranges.coerceAtMost.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;或&lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ranges.coerceAtMost.T%2C+kotlin.ranges.coerceAtMost.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;其他。</target>
        </trans-unit>
        <trans-unit id="7635d614421304998527881895fb03e16bf6879a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's less than or equal to the &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.Byte,%20kotlin.Byte)/maximumValue&quot;&gt;maximumValue&lt;/a&gt; or the &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.Byte,%20kotlin.Byte)/maximumValue&quot;&gt;maximumValue&lt;/a&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d5f820796f5146ee5e00c5f956dfb9d8282784" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's less than or equal to the &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.UInt,%20kotlin.UInt)/maximumValue&quot;&gt;maximumValue&lt;/a&gt; or the &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.UInt,%20kotlin.UInt)/maximumValue&quot;&gt;maximumValue&lt;/a&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdb904747b36b70fd3a4a2ec39bddbd16bb650e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; this value if it's less than or equal to the &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.ranges.coerceAtMost.T,%20kotlin.ranges.coerceAtMost.T)/maximumValue&quot;&gt;maximumValue&lt;/a&gt; or the &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost(kotlin.ranges.coerceAtMost.T,%20kotlin.ranges.coerceAtMost.T)/maximumValue&quot;&gt;maximumValue&lt;/a&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8431565522e77a3743ab915e75ae2d663f2102" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; true if at least one class has been added</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果已添加至少一个类，则&lt;strong&gt;返回&lt;/strong&gt; true</target>
        </trans-unit>
        <trans-unit id="ba374a632414a5a25926a487aeef7318cc5fb558" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; true if at least one class has been removed</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果已删除至少一个类，则&lt;strong&gt;返回&lt;/strong&gt; true</target>
        </trans-unit>
        <trans-unit id="30e4762dc58a5633f80c7697f27bcefe43ab3e6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; true if entry was removed</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果条目已删除，则&lt;strong&gt;返回&lt;/strong&gt; true</target>
        </trans-unit>
        <trans-unit id="3e6a957e507bed24c04bb61e27887d53c7358b5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; true if given object is null or frozen or permanent</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果给定对象为null或冻结或永久，则&lt;strong&gt;返回&lt;/strong&gt; true</target>
        </trans-unit>
        <trans-unit id="b696d4da0033f420d47d1bbedf50dfb69ddf49f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; true if successful</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果成功，则&lt;strong&gt;返回&lt;/strong&gt; true</target>
        </trans-unit>
        <trans-unit id="8ed7c973c8bac9c74625fcc690e56d86eafdab1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; true if successful, false if state is unchanged</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果成功，则&lt;strong&gt;返回&lt;/strong&gt; true；如果状态不变，则&lt;strong&gt;返回&lt;/strong&gt; false</target>
        </trans-unit>
        <trans-unit id="4e5ff674d3474482f3927b47d78b290b63a5dbc1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; true, if &lt;a href=&quot;equals#kotlin.collections.AbstractList%24equals%28kotlin.Any%29%2Fother&quot;&gt;other&lt;/a&gt; instance is a &lt;a href=&quot;../-list/index#kotlin.collections.List&quot;&gt;List&lt;/a&gt; of the same size, which contains the same elements in the same order.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果&lt;a href=&quot;equals#kotlin.collections.AbstractList%24equals%28kotlin.Any%29%2Fother&quot;&gt;其他&lt;/a&gt;实例是具有相同大小的&lt;a href=&quot;../-list/index#kotlin.collections.List&quot;&gt;List&lt;/a&gt;（以相同顺序包含相同元素），则&lt;strong&gt;返回&lt;/strong&gt; true 。</target>
        </trans-unit>
        <trans-unit id="75d56e4c082631fc0fabf8b337303d2bece48823" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; true, if &lt;a href=&quot;equals#kotlin.collections.AbstractList%24equals(kotlin.Any?)/other&quot;&gt;other&lt;/a&gt; instance is a &lt;a href=&quot;../-list/index#kotlin.collections.List&quot;&gt;List&lt;/a&gt; of the same size, which contains the same elements in the same order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2be18c39993e6037706a6b885d4b7f44d25972d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; true, if &lt;a href=&quot;equals#kotlin.collections.AbstractMap%24equals%28kotlin.Any%29%2Fother&quot;&gt;other&lt;/a&gt; instance is a &lt;a href=&quot;../-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; of the same size, all entries of which are contained in the &lt;a href=&quot;../-map/entries#kotlin.collections.Map%24entries&quot;&gt;entries&lt;/a&gt; set of this map.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果&lt;a href=&quot;equals#kotlin.collections.AbstractMap%24equals%28kotlin.Any%29%2Fother&quot;&gt;其他&lt;/a&gt;实例是一个大小相同的&lt;a href=&quot;../-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt;，且所有实例的所有条目都包含在此Map 的&lt;a href=&quot;../-map/entries#kotlin.collections.Map%24entries&quot;&gt;条目&lt;/a&gt;集中，则&lt;strong&gt;返回&lt;/strong&gt; true 。</target>
        </trans-unit>
        <trans-unit id="ecf48a25401a5870be0726c37aa710b518e6e1e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; true, if &lt;a href=&quot;equals#kotlin.collections.AbstractMap%24equals(kotlin.Any?)/other&quot;&gt;other&lt;/a&gt; instance is a &lt;a href=&quot;../-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; of the same size, all entries of which are contained in the &lt;a href=&quot;../-map/entries#kotlin.collections.Map%24entries&quot;&gt;entries&lt;/a&gt; set of this map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="450a7bd83d6731d062006a06f22ecda84bb1eee0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; true, if &lt;a href=&quot;equals#kotlin.collections.AbstractMutableList%24equals%28kotlin.Any%29%2Fother&quot;&gt;other&lt;/a&gt; instance is a &lt;a href=&quot;../-list/index#kotlin.collections.List&quot;&gt;List&lt;/a&gt; of the same size, which contains the same elements in the same order.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果&lt;a href=&quot;equals#kotlin.collections.AbstractMutableList%24equals%28kotlin.Any%29%2Fother&quot;&gt;其他&lt;/a&gt;实例是具有相同大小的&lt;a href=&quot;../-list/index#kotlin.collections.List&quot;&gt;List&lt;/a&gt;（以相同顺序包含相同元素），则&lt;strong&gt;返回&lt;/strong&gt; true 。</target>
        </trans-unit>
        <trans-unit id="424188998de985a140c129efa346c54ee5498285" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; true, if &lt;a href=&quot;equals#kotlin.collections.AbstractMutableList%24equals(kotlin.Any?)/other&quot;&gt;other&lt;/a&gt; instance is a &lt;a href=&quot;../-list/index#kotlin.collections.List&quot;&gt;List&lt;/a&gt; of the same size, which contains the same elements in the same order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1abd8ec71f7e048bc1e62d45b940a3252b3d95c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; true, if &lt;a href=&quot;equals#kotlin.collections.AbstractSet%24equals%28kotlin.Any%29%2Fother&quot;&gt;other&lt;/a&gt; instance is a &lt;a href=&quot;../-set/index#kotlin.collections.Set&quot;&gt;Set&lt;/a&gt; of the same size, all elements of which are contained in this set.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt; true，如果&lt;a href=&quot;equals#kotlin.collections.AbstractSet%24equals%28kotlin.Any%29%2Fother&quot;&gt;其他&lt;/a&gt;实例是一个&lt;a href=&quot;../-set/index#kotlin.collections.Set&quot;&gt;集&lt;/a&gt;大小相同的，其中的所有元素都包含在这一套。</target>
        </trans-unit>
        <trans-unit id="77ae8178bf4d614039a0035a269e6858ac5ee841" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; true, if &lt;a href=&quot;equals#kotlin.collections.AbstractSet%24equals(kotlin.Any?)/other&quot;&gt;other&lt;/a&gt; instance is a &lt;a href=&quot;../-set/index#kotlin.collections.Set&quot;&gt;Set&lt;/a&gt; of the same size, all elements of which are contained in this set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="566e35275949eb544a4852d096e9ed71bd454e4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; value returned by the block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919f95f0421215e8021ae994801506a412e9ee4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; worker identifier as C pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48178a5d76c282567faeb1c01e1e65753017b42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; worker object, usable across multiple concurrent contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f66e4f342e15e2c15a2c5623cf2e4761faf96ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt;&lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%29%2Farray&quot;&gt;array&lt;/a&gt; filled with random bytes.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;由随机字节填充的&lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%29%2Farray&quot;&gt;数组&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b294601359b4f3d4c119ed3e5632a8f9d0da298e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt;&lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;array&lt;/a&gt; with the subrange filled with random bytes.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;&lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;数组&lt;/a&gt;，其中子范围填充有随机字节。</target>
        </trans-unit>
        <trans-unit id="5b4ee69dc49bf2a206a63b193d0e56f9f7c37487" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt;&lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes(kotlin.ByteArray)/array&quot;&gt;array&lt;/a&gt; filled with random bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7647bd56205af929d9510372029c77e8cc70bef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt;&lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/array&quot;&gt;array&lt;/a&gt; with the subrange filled with random bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b508d54df04997a543b4f5556270eb1d055da965" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt;&lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%29%2Farray&quot;&gt;array&lt;/a&gt; filled with random bytes.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;由随机字节填充的&lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%29%2Farray&quot;&gt;数组&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d033dd5199671de0a3537e5f40b076e61d09144c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt;&lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;array&lt;/a&gt; with the subrange filled with random bytes.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;&lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;数组&lt;/a&gt;，其中子范围填充有随机字节。</target>
        </trans-unit>
        <trans-unit id="49d6465b23b3f828e18659a9f77a83957ce5cc87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt;&lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes(kotlin.ByteArray)/array&quot;&gt;array&lt;/a&gt; filled with random bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d7390dc524ebd6eb12a6169704cf679216a631" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt;&lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/array&quot;&gt;array&lt;/a&gt; with the subrange filled with random bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab424612c2630fa157f921952352b21b3e669be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt;&lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%29%2Farray&quot;&gt;array&lt;/a&gt; filled with random bytes.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;由随机字节填充的&lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%29%2Farray&quot;&gt;数组&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a906e2a8cc578bed0acb2898690e9a676315ea74" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt;&lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;array&lt;/a&gt; with the subrange filled with random bytes.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt;&lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;数组&lt;/a&gt;，其中子范围填充有随机字节。</target>
        </trans-unit>
        <trans-unit id="72615d42b6204d8f0329a0536862519f90e7a26f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt;&lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.UByteArray)/array&quot;&gt;array&lt;/a&gt; filled with random bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad6d593989e133bcb19a0a5aa01e8001a4baa913" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt;&lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.UByteArray,%20kotlin.Int,%20kotlin.Int)/array&quot;&gt;array&lt;/a&gt; with the subrange filled with random bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b06b8e30941a46203783fa2263dcc56803e210d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt;&lt;code&gt;false&lt;/code&gt; if the copying was terminated, &lt;code&gt;true&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果复制终止，则&lt;strong&gt;返回&lt;/strong&gt; &lt;code&gt;false&lt;/code&gt; ，否则&lt;strong&gt;返回&lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d85c6a1f6c8ee5b0b19cbadfd01fe4cef34ffe32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; because the list is always modified as the result of this operation.</source>
          <target state="translated">&lt;strong&gt;返回&lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; ,因为此操作始终会修改列表。</target>
        </trans-unit>
        <trans-unit id="e99d6b7092ed9791a108813e7dd62b6bfd4c4564" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if any element was removed from the collection, &lt;code&gt;false&lt;/code&gt; if the collection was not modified.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果从集合中删除了任何元素，则&lt;strong&gt;返回&lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; ;如果未修改集合，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83cbbc702be287ad09275a8e83d8d716051ed385" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if any element was removed from this collection, or &lt;code&gt;false&lt;/code&gt; when all elements were retained and collection was not modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32f3adf78fedc9ecc514108db11e9bb62887f1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if any element was removed from this collection, or &lt;code&gt;false&lt;/code&gt; when no elements were removed and collection was not modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda7d2731274f6578b2d790d945d3f173dc467a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if any of the specified elements was added to the collection, &lt;code&gt;false&lt;/code&gt; if the collection was not modified.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果将任何指定的元素添加到集合中，则&lt;strong&gt;返回&lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; ;如果未修改集合，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
