<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="docker">
    <body>
      <group id="docker">
        <trans-unit id="eebe9104739b4ddc24f4917369dc395e741187b7" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;process&lt;/code&gt; isolation, Windows will report the full memory of the host system, not the limit to applications running inside the container</source>
          <target state="translated">通过 &lt;code&gt;process&lt;/code&gt; 隔离，Windows将报告主机系统的全部内存，而不是限制容器内运行的应用程序的限制</target>
        </trans-unit>
        <trans-unit id="58efa2b2d39c31cfffa144087dd258130dd356e9" translate="yes" xml:space="preserve">
          <source>With Docker, scaling your application is a matter of spinning up new executables, not running heavy VM hosts.</source>
          <target state="translated">使用Docker,扩展你的应用程序是一个旋转新的可执行文件的问题,而不是运行沉重的虚拟机主机。</target>
        </trans-unit>
        <trans-unit id="61cddedb66e0f9ea7fd22d81cbb03a26bfe2e212" translate="yes" xml:space="preserve">
          <source>With Docker, you can just grab a portable Python runtime as an image, no installation necessary. Then, your build can include the base Python image right alongside your app code, ensuring that your app, its dependencies, and the runtime, all travel together.</source>
          <target state="translated">有了Docker,你只需抓取一个可移植的Python运行时作为镜像,无需安装。然后,你的构建可以将基础Python映像和你的应用代码一起包含进去,确保你的应用、它的依赖项和运行时都能一起运行。</target>
        </trans-unit>
        <trans-unit id="37bad010e2cd58f45342ef096a488bf3909e16b7" translate="yes" xml:space="preserve">
          <source>With Notary anyone can provide trust over arbitrary collections of data. Using &lt;a href=&quot;https://www.theupdateframework.com/&quot;&gt;The Update Framework (TUF)&lt;/a&gt; as the underlying security framework, Notary takes care of the operations necessary to create, manage, and distribute the metadata necessary to ensure the integrity and freshness of your content.</source>
          <target state="translated">使用公证人，任何人都可以对任意数据收集提供信任。使用&lt;a href=&quot;https://www.theupdateframework.com/&quot;&gt;更新框架（TUF）&lt;/a&gt;作为基础安全框架，Notary负责创建，管理和分发元数据所必需的操作，以确保内容的完整性和新鲜度。</target>
        </trans-unit>
        <trans-unit id="0a92ea73623f42a7ed7859133e5131f3537373bd" translate="yes" xml:space="preserve">
          <source>With Powershell on Windows, you can run:</source>
          <target state="translated">在Windows上使用Powershell,你可以运行。</target>
        </trans-unit>
        <trans-unit id="fe324941b4a009c8cfb7175cec6a97b50a0a711b" translate="yes" xml:space="preserve">
          <source>With a default &lt;code&gt;umask&lt;/code&gt; of 022, your secret keys are &lt;em&gt;world-readable&lt;/em&gt; and writable for you and your group.</source>
          <target state="translated">默认 &lt;code&gt;umask&lt;/code&gt; 为022，您的秘密密钥对您和您的组是&lt;em&gt;全球可读的&lt;/em&gt;且可写的。</target>
        </trans-unit>
        <trans-unit id="cb0818635ac8a3af4edf083039921ea30fd5f980" translate="yes" xml:space="preserve">
          <source>With oh-my-zsh shell</source>
          <target state="translated">使用 oh-my-zsh shell</target>
        </trans-unit>
        <trans-unit id="69763183dcf3289e12d96689202dcde31006e31e" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;--json&lt;/code&gt; flag, a json object is printed one per line with the format:</source>
          <target state="translated">使用 &lt;code&gt;--json&lt;/code&gt; 标志，每行打印一个json对象，其格式为：</target>
        </trans-unit>
        <trans-unit id="9ded9d96a557e6ca2b4db66139b54ba5edc72a78" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;docker run [OPTIONS]&lt;/code&gt; an operator can add to or override the image defaults set by a developer. And, additionally, operators can override nearly all the defaults set by the Docker runtime itself. The operator&amp;rsquo;s ability to override image and Docker runtime defaults is why &lt;a href=&quot;../commandline/run/index&quot;&gt;&lt;em&gt;run&lt;/em&gt;&lt;/a&gt; has more options than any other &lt;code&gt;docker&lt;/code&gt; command.</source>
          <target state="translated">使用 &lt;code&gt;docker run [OPTIONS]&lt;/code&gt; ，操作员可以添加或覆盖开发人员设置的图像默认设置。而且，操作员可以覆盖Docker运行时本身设置的几乎所有默认值。操作员具有覆盖映像和Docker运行时默认值的能力，这就是为什么&lt;a href=&quot;../commandline/run/index&quot;&gt;&lt;em&gt;run&lt;/em&gt;&lt;/a&gt;具有比其他任何 &lt;code&gt;docker&lt;/code&gt; 命令更多的选项的原因。</target>
        </trans-unit>
        <trans-unit id="59a89e573faa626b56e0598784a48f4a0e415652" translate="yes" xml:space="preserve">
          <source>With the advent of &lt;a href=&quot;https://docs.docker.com/docker-for-mac/&quot;&gt;Docker Desktop for Mac&lt;/a&gt; and &lt;a href=&quot;https://docs.docker.com/docker-for-windows/&quot;&gt;Docker Desktop for Windows&lt;/a&gt; as replacements for &lt;a href=&quot;https://docs.docker.com/toolbox/overview/&quot;&gt;Docker Toolbox&lt;/a&gt;, we recommend that you use these for your primary Docker workflows. You can use these applications to run Docker natively on your local system without using Docker Machine at all. (See &lt;a href=&quot;https://docs.docker.com/docker-for-mac/docker-toolbox/&quot;&gt;Docker Desktop for Mac vs. Docker Toolbox&lt;/a&gt; for an explanation on the Mac side.)</source>
          <target state="translated">随着&lt;a href=&quot;https://docs.docker.com/docker-for-mac/&quot;&gt;用于Mac&lt;/a&gt;的Docker Desktop和&lt;a href=&quot;https://docs.docker.com/docker-for-windows/&quot;&gt;用于Windows的Docker Desktop&lt;/a&gt;替代&lt;a href=&quot;https://docs.docker.com/toolbox/overview/&quot;&gt;Docker Toolbox的出现&lt;/a&gt;，我们建议您将这些用于主要的Docker工作流程。您可以使用这些应用程序在本地系统上本地运行Docker，而无需使用Docker Machine。（有关Mac方面的说明，请参阅&lt;a href=&quot;https://docs.docker.com/docker-for-mac/docker-toolbox/&quot;&gt;适用于Mac的Docker Desktop与Docker Toolbox&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="7014fb1ca72cc6aafa4933dd158884cd852fb2dd" translate="yes" xml:space="preserve">
          <source>With the exception of the &lt;code&gt;--kernel-memory&lt;/code&gt; option, you can specify these options on a running or a stopped container. On kernel version older than 4.6, you can only update &lt;code&gt;--kernel-memory&lt;/code&gt; on a stopped container or on a running container with kernel memory initialized.</source>
          <target state="translated">除了 &lt;code&gt;--kernel-memory&lt;/code&gt; 选项之外，您可以在正在运行或已停止的容器上指定这些选项。在低于4.6的内核版本上，您只能在已停止运行的容器或已初始化内核内存的运行容器上更新 &lt;code&gt;--kernel-memory&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12434abd7b4e627f72b0841477a6e98c3107f1c7" translate="yes" xml:space="preserve">
          <source>With the exception of the &lt;code&gt;EXPOSE&lt;/code&gt; directive, an image developer hasn&amp;rsquo;t got much control over networking. The &lt;code&gt;EXPOSE&lt;/code&gt; instruction defines the initial incoming ports that provide services. These ports are available to processes inside the container. An operator can use the &lt;code&gt;--expose&lt;/code&gt; option to add to the exposed ports.</source>
          <target state="translated">除 &lt;code&gt;EXPOSE&lt;/code&gt; 指令外，图像开发人员对网络的控制不多。该 &lt;code&gt;EXPOSE&lt;/code&gt; 指令定义初始进入的端口提供服务。这些端口可用于容器内部的进程。操作员可以使用 &lt;code&gt;--expose&lt;/code&gt; 选项添加到暴露的端口。</target>
        </trans-unit>
        <trans-unit id="815f4c6b9b975da3e61ec0447769875b20d8e50e" translate="yes" xml:space="preserve">
          <source>With the flag &lt;code&gt;--virtualbox-share-folder&lt;/code&gt;, you can specify which folder the host shares with the created machine. The format is &lt;code&gt;local-folder:machine-folder&lt;/code&gt;. For example, &lt;code&gt;\\?\C:\docker-share:\home\users\&lt;/code&gt;. if you specify the flag with the docker-toolbox using docker-machine from a Windows cmd, it looks like &lt;code&gt;C:\docker-share\\:/home/users&lt;/code&gt;. The &lt;code&gt;:&lt;/code&gt; sign needs to be escaped.</source>
          <target state="translated">使用 &lt;code&gt;--virtualbox-share-folder&lt;/code&gt; 标志，您可以指定主机与创建的计算机共享的文件夹。格式为 &lt;code&gt;local-folder:machine-folder&lt;/code&gt; 。例如， &lt;code&gt;\\?\C:\docker-share:\home\users\&lt;/code&gt; 。如果从Windows cmd使用docker-machine在docker-toolbox中指定该标志，则它看起来像 &lt;code&gt;C:\docker-share\\:/home/users&lt;/code&gt; 。的 &lt;code&gt;:&lt;/code&gt; 符号需要转义。</target>
        </trans-unit>
        <trans-unit id="da79b12135af4217b5272590f806134720c2d84b" translate="yes" xml:space="preserve">
          <source>With the network is &lt;code&gt;none&lt;/code&gt; a container will not have access to any external routes. The container will still have a &lt;code&gt;loopback&lt;/code&gt; interface enabled in the container but it does not have any routes to external traffic.</source>
          <target state="translated">在 &lt;code&gt;none&lt;/code&gt; 网络的情况下，容器将无法访问任何外部路由。容器仍将在容器中启用 &lt;code&gt;loopback&lt;/code&gt; 接口，但它没有任何通往外部流量的路由。</target>
        </trans-unit>
        <trans-unit id="19c2b76a385e021990ce1a68ee2f4a51f0ba22a5" translate="yes" xml:space="preserve">
          <source>With the network set to &lt;code&gt;bridge&lt;/code&gt; a container will use docker&amp;rsquo;s default networking setup. A bridge is setup on the host, commonly named &lt;code&gt;docker0&lt;/code&gt;, and a pair of &lt;code&gt;veth&lt;/code&gt; interfaces will be created for the container. One side of the &lt;code&gt;veth&lt;/code&gt; pair will remain on the host attached to the bridge while the other side of the pair will be placed inside the container&amp;rsquo;s namespaces in addition to the &lt;code&gt;loopback&lt;/code&gt; interface. An IP address will be allocated for containers on the bridge&amp;rsquo;s network and traffic will be routed though this bridge to the container.</source>
          <target state="translated">将网络设置为 &lt;code&gt;bridge&lt;/code&gt; ，容器将使用docker的默认网络设置。在主机上设置了一个网桥，俗称 &lt;code&gt;docker0&lt;/code&gt; ，并将为该容器创建一对 &lt;code&gt;veth&lt;/code&gt; 接口。 &lt;code&gt;veth&lt;/code&gt; 对的一侧将保留在连接到桥的主机上，而另一对将除了 &lt;code&gt;loopback&lt;/code&gt; 接口之外，还将放置在容器的命名空间内。将为网桥的网络上的容器分配一个IP地址，流量将通过该网桥路由到容器。</target>
        </trans-unit>
        <trans-unit id="a6f2863e70bbcbcc2ed114cb2b301af2d84c4e8f" translate="yes" xml:space="preserve">
          <source>With the network set to &lt;code&gt;container&lt;/code&gt; a container will share the network stack of another container. The other container&amp;rsquo;s name must be provided in the format of &lt;code&gt;--network container:&amp;lt;name|id&amp;gt;&lt;/code&gt;. Note that &lt;code&gt;--add-host&lt;/code&gt;&lt;code&gt;--hostname&lt;/code&gt;&lt;code&gt;--dns&lt;/code&gt;&lt;code&gt;--dns-search&lt;/code&gt;&lt;code&gt;--dns-option&lt;/code&gt; and &lt;code&gt;--mac-address&lt;/code&gt; are invalid in &lt;code&gt;container&lt;/code&gt; netmode, and &lt;code&gt;--publish&lt;/code&gt;&lt;code&gt;--publish-all&lt;/code&gt;&lt;code&gt;--expose&lt;/code&gt; are also invalid in &lt;code&gt;container&lt;/code&gt; netmode.</source>
          <target state="translated">将网络设置为 &lt;code&gt;container&lt;/code&gt; 一个容器将共享另一个容器的网络堆栈。另一个容器的名称必须以 &lt;code&gt;--network container:&amp;lt;name|id&amp;gt;&lt;/code&gt; 的格式提供。请注意 &lt;code&gt;--add-host&lt;/code&gt; &lt;code&gt;--hostname&lt;/code&gt; &lt;code&gt;--dns&lt;/code&gt; &lt;code&gt;--dns-search&lt;/code&gt; &lt;code&gt;--dns-option&lt;/code&gt; 和 &lt;code&gt;--mac-address&lt;/code&gt; 在 &lt;code&gt;container&lt;/code&gt; netmode中无效，-- &lt;code&gt;--publish&lt;/code&gt; &lt;code&gt;--publish-all&lt;/code&gt; &lt;code&gt;--expose&lt;/code&gt; 也无效在 &lt;code&gt;container&lt;/code&gt; netmode中。</target>
        </trans-unit>
        <trans-unit id="f68ebc247df08633a146ec209c42cfa8b3e20250" translate="yes" xml:space="preserve">
          <source>With the network set to &lt;code&gt;host&lt;/code&gt; a container will share the host&amp;rsquo;s network stack and all interfaces from the host will be available to the container. The container&amp;rsquo;s hostname will match the hostname on the host system. Note that &lt;code&gt;--mac-address&lt;/code&gt; is invalid in &lt;code&gt;host&lt;/code&gt; netmode. Even in &lt;code&gt;host&lt;/code&gt; network mode a container has its own UTS namespace by default. As such &lt;code&gt;--hostname&lt;/code&gt; and &lt;code&gt;--domainname&lt;/code&gt; are allowed in &lt;code&gt;host&lt;/code&gt; network mode and will only change the hostname and domain name inside the container. Similar to &lt;code&gt;--hostname&lt;/code&gt;, the &lt;code&gt;--add-host&lt;/code&gt;, &lt;code&gt;--dns&lt;/code&gt;, &lt;code&gt;--dns-search&lt;/code&gt;, and &lt;code&gt;--dns-option&lt;/code&gt; options can be used in &lt;code&gt;host&lt;/code&gt; network mode. These options update &lt;code&gt;/etc/hosts&lt;/code&gt; or &lt;code&gt;/etc/resolv.conf&lt;/code&gt; inside the container. No change are made to &lt;code&gt;/etc/hosts&lt;/code&gt; and &lt;code&gt;/etc/resolv.conf&lt;/code&gt; on the host.</source>
          <target state="translated">将网络设置为 &lt;code&gt;host&lt;/code&gt; ，容器将共享主机的网络堆栈，并且来自主机的所有接口将对容器可用。容器的主机名将与主机系统上的主机名匹配。请注意，-- &lt;code&gt;--mac-address&lt;/code&gt; 在 &lt;code&gt;host&lt;/code&gt; netmode中无效。即使在 &lt;code&gt;host&lt;/code&gt; 网络模式下，默认情况下，容器也有其自己的UTS名称空间。因此，在 &lt;code&gt;host&lt;/code&gt; 网络模式下允许 &lt;code&gt;--hostname&lt;/code&gt; 和 &lt;code&gt;--domainname&lt;/code&gt; ,它们只会更改容器内的主机名和域名。类似于 &lt;code&gt;--hostname&lt;/code&gt; ，-- &lt;code&gt;--add-host&lt;/code&gt; ，-- &lt;code&gt;--dns&lt;/code&gt; ，-- &lt;code&gt;--dns-search&lt;/code&gt; 和 &lt;code&gt;--dns-option&lt;/code&gt; 选项可以在 &lt;code&gt;host&lt;/code&gt; 网络模式下使用。这些选项更新容器内的 &lt;code&gt;/etc/hosts&lt;/code&gt; 或 &lt;code&gt;/etc/resolv.conf&lt;/code&gt; 。在主机上未对 &lt;code&gt;/etc/hosts&lt;/code&gt; 和 &lt;code&gt;/etc/resolv.conf&lt;/code&gt; 进行任何更改。</target>
        </trans-unit>
        <trans-unit id="6709b8c72a05b4506166d188d13325ddc8910f94" translate="yes" xml:space="preserve">
          <source>With these two options enabled, if a device is busy when the driver is deleting a container, the driver marks the device as deleted. Later, when the device isn&amp;rsquo;t in use, the driver deletes it.</source>
          <target state="translated">启用这两个选项后，如果在驱动程序删除容器时设备正忙，则驱动程序会将设备标记为已删除。稍后，当不使用该设备时，驱动程序将其删除。</target>
        </trans-unit>
        <trans-unit id="ffd0f6da8dc10c3faf0a9249df8b70e060521352" translate="yes" xml:space="preserve">
          <source>With this command you may apply an existing Docker enterprise license, or interactively download one from Docker. In the interactive exchange, you can sign up for a new trial, or download an existing license. If you are currently running a Community Edition engine, the daemon will be updated to the Enterprise Edition Docker engine with additional capabilities and long term support.</source>
          <target state="translated">通过这个命令,你可以应用现有的Docker企业许可证,或者交互式地从Docker下载一个许可证。在交互式交换中,您可以注册一个新的试用版,或者下载一个现有的许可证。如果您当前运行的是社区版引擎,守护进程将更新到企业版Docker引擎,并提供额外的功能和长期支持。</target>
        </trans-unit>
        <trans-unit id="65633f0f9893ece9d45a6bc0213ed6e742b27e34" translate="yes" xml:space="preserve">
          <source>With those files in place, you can now generate the Rails skeleton app using &lt;a href=&quot;../reference/run/index&quot;&gt;docker-compose run&lt;/a&gt;:</source>
          <target state="translated">有了这些文件后，您现在可以使用&lt;a href=&quot;../reference/run/index&quot;&gt;docker-compose run&lt;/a&gt;生成Rails骨架应用程序：</target>
        </trans-unit>
        <trans-unit id="1a7acd3f86e4731e877c5aeafc9dbc4ffe99c1b1" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;trustsandbox&lt;/code&gt; container, you interact with your local registry rather than the Docker Hub. This means your everyday image repositories are not used. They are protected while you play.</source>
          <target state="translated">在 &lt;code&gt;trustsandbox&lt;/code&gt; 容器中，您与本地注册表而不是Docker Hub进行交互。这意味着您的日常图像存储库未使用。他们在您玩耍时受到保护。</target>
        </trans-unit>
        <trans-unit id="74c6f0b79abbfd282cfb559840bf123c77a407aa" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;web&lt;/code&gt; container, your connection string to &lt;code&gt;db&lt;/code&gt; would look like &lt;code&gt;postgres://db:5432&lt;/code&gt;, and from the host machine, the connection string would look like &lt;code&gt;postgres://{DOCKER_IP}:8001&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;web&lt;/code&gt; 容器中，您与 &lt;code&gt;db&lt;/code&gt; 的连接字符串看起来像 &lt;code&gt;postgres://db:5432&lt;/code&gt; ，而在主机上，连接字符串看起来像 &lt;code&gt;postgres://{DOCKER_IP}:8001&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed061b3596fbcd0b31a534c78f007746a7ab1241" translate="yes" xml:space="preserve">
          <source>Within the Docker CLI we can sign and push a container image with the &lt;code&gt;$ docker trust&lt;/code&gt; command syntax. This is built on top of the Notary feature set, more information on Notary can be found &lt;a href=&quot;../../../../notary/getting_started/index&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">在Docker CLI中，我们可以使用 &lt;code&gt;$ docker trust&lt;/code&gt; 命令语法对容器映像进行签名和推送。这是建立在Notary功能集的基础上的，有关Notary的更多信息可以在&lt;a href=&quot;../../../../notary/getting_started/index&quot;&gt;这里&lt;/a&gt;找到。</target>
        </trans-unit>
        <trans-unit id="7a15d4551cec88d65fbf0dfb154a42074cdd1f07" translate="yes" xml:space="preserve">
          <source>Within the running containers, the following three files now exist:</source>
          <target state="translated">在运行的容器内,现在存在以下三个文件。</target>
        </trans-unit>
        <trans-unit id="61069a2b47df78f95788eead631c865f50878010" translate="yes" xml:space="preserve">
          <source>Without oh-my-zsh shell</source>
          <target state="translated">没有 oh-my-zsh shell</target>
        </trans-unit>
        <trans-unit id="aa4a574e27eb4b1a1fa03d5048d1782f3c57a792" translate="yes" xml:space="preserve">
          <source>Without the routing mesh</source>
          <target state="translated">没有路由网状结构</target>
        </trans-unit>
        <trans-unit id="b0e0f98ffdc7c34300a820929ad99ff230ebd391" translate="yes" xml:space="preserve">
          <source>WordPress Multisite works only on ports &lt;code&gt;80&lt;/code&gt; and &lt;code&gt;443&lt;/code&gt;.</source>
          <target state="translated">WordPress Multisite仅在端口 &lt;code&gt;80&lt;/code&gt; 和 &lt;code&gt;443&lt;/code&gt; 上工作。</target>
        </trans-unit>
        <trans-unit id="eb4cd7932ac5bc231624703a8fe280c8966021f6" translate="yes" xml:space="preserve">
          <source>Work with delegation roles</source>
          <target state="translated">与授权角色合作</target>
        </trans-unit>
        <trans-unit id="bfe7c40e1e0048221a4469d1eeeabaa3efd5ec96" translate="yes" xml:space="preserve">
          <source>Worker nodes</source>
          <target state="translated">工人节点</target>
        </trans-unit>
        <trans-unit id="b1a65907ef369b682eee16c60ed94a2395390f15" translate="yes" xml:space="preserve">
          <source>Worker nodes are also instances of Docker Engine whose sole purpose is to execute containers. Worker nodes don&amp;rsquo;t participate in the Raft distributed state, make scheduling decisions, or serve the swarm mode HTTP API.</source>
          <target state="translated">工作程序节点也是Docker Engine的实例，其唯一目的是执行容器。辅助节点不参与Raft分布式状态，制定调度决策或服务于群集模式HTTP API。</target>
        </trans-unit>
        <trans-unit id="606052f203791ce18002df4bbe3edb31c4906e84" translate="yes" xml:space="preserve">
          <source>Working directory inside the container</source>
          <target state="translated">容器内的工作目录</target>
        </trans-unit>
        <trans-unit id="1620f55d54f97d690d3242f92bbb2667bc6364a4" translate="yes" xml:space="preserve">
          <source>Working directory inside the service containers.</source>
          <target state="translated">服务容器内的工作目录。</target>
        </trans-unit>
        <trans-unit id="b79fc86440ffb1be49e18eec66132d2c4bd9fc53" translate="yes" xml:space="preserve">
          <source>Working with insecure registries</source>
          <target state="translated">与不安全的登记处合作</target>
        </trans-unit>
        <trans-unit id="74470cfa625f630a1b60922012705a28c4e52f71" translate="yes" xml:space="preserve">
          <source>WorkingDir &lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">WorkingDir &lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5302b554d6a27b61e9519d3dbe09a5eee7074954" translate="yes" xml:space="preserve">
          <source>Write a network plugin</source>
          <target state="translated">编写一个网络插件</target>
        </trans-unit>
        <trans-unit id="ffda49cca5500bdc700d879e9f5c661e4151e275" translate="yes" xml:space="preserve">
          <source>Write records to kernel auditing log.</source>
          <target state="translated">将记录写入内核审计日志。</target>
        </trans-unit>
        <trans-unit id="3598d1fcb015751fadb4bb8584459ac6af1960ee" translate="yes" xml:space="preserve">
          <source>Write the container ID to the file</source>
          <target state="translated">将容器ID写到文件中</target>
        </trans-unit>
        <trans-unit id="60dc386cb8096895bda9fb0a3bf727c472d4a71e" translate="yes" xml:space="preserve">
          <source>Write the following configuration file to &lt;code&gt;/tmp/server-configdir/config.json&lt;/code&gt;:</source>
          <target state="translated">将以下配置文件写入 &lt;code&gt;/tmp/server-configdir/config.json&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="db75e57bbcc49789bc07c714cb642c9c9845791d" translate="yes" xml:space="preserve">
          <source>Write the image ID to the file</source>
          <target state="translated">将图像ID写到文件中</target>
        </trans-unit>
        <trans-unit id="585abc6cd8b7e93ef32e42d9916f7b2059cbf1a7" translate="yes" xml:space="preserve">
          <source>Write to a file, instead of STDOUT</source>
          <target state="translated">写入文件,而不是STDOUT。</target>
        </trans-unit>
        <trans-unit id="7129e8c64cb2d3f5b69c2224dcab6c2e974d0875" translate="yes" xml:space="preserve">
          <source>Writing a plugin</source>
          <target state="translated">编写一个插件</target>
        </trans-unit>
        <trans-unit id="23837461806aad565a980ff9734305e64ec86b5b" translate="yes" xml:space="preserve">
          <source>Yes - see &lt;a href=&quot;../startup-order/index&quot;&gt;Controlling startup order&lt;/a&gt;.</source>
          <target state="translated">是-请参阅&lt;a href=&quot;../startup-order/index&quot;&gt;控制启动顺序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cbda30aef97f34f1d03588c244c9e030e3c6cf51" translate="yes" xml:space="preserve">
          <source>Yes. &lt;a href=&quot;http://stackoverflow.com/a/1729545/444646&quot;&gt;Yaml is a superset of json&lt;/a&gt; so any JSON file should be valid Yaml. To use a JSON file with Compose, specify the filename to use, for example:</source>
          <target state="translated">是。&lt;a href=&quot;http://stackoverflow.com/a/1729545/444646&quot;&gt;Yaml是json的超集，&lt;/a&gt;因此任何JSON文件都应为有效的Yaml。要将JSON文件与Compose一起使用，请指定要使用的文件名，例如：</target>
        </trans-unit>
        <trans-unit id="b070ce859acf33e8fcf9579f2050dfd4d66802b8" translate="yes" xml:space="preserve">
          <source>You are connected to &lt;code&gt;myvm1&lt;/code&gt; by means of the &lt;code&gt;docker-machine&lt;/code&gt; shell configuration, and you still have access to the files on your local host. Make sure you are in the same directory as before, which includes the &lt;a href=&quot;../part3/index#docker-composeyml&quot;&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt; file you created in part 3&lt;/a&gt;.</source>
          <target state="translated">您连接到 &lt;code&gt;myvm1&lt;/code&gt; 用的手段 &lt;code&gt;docker-machine&lt;/code&gt; 外壳配置，你仍可以访问这些文件在本地主机上。确保您与以前在同一目录中，其中包括&lt;a href=&quot;../part3/index#docker-composeyml&quot;&gt;您在第3部分中创建&lt;/a&gt; &lt;code&gt;docker-compose.yml&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="83874a9f5f5e924bc8418de9c900ae581f856e65" translate="yes" xml:space="preserve">
          <source>You are pushing an image you have built locally</source>
          <target state="translated">您正在推送您在本地建立的形象。</target>
        </trans-unit>
        <trans-unit id="d83f5f9fe993894ed1dd4e79794b3ea839749bab" translate="yes" xml:space="preserve">
          <source>You are ready to deploy your new Redis-using stack.</source>
          <target state="translated">你已经准备好部署你的新的使用Redis的栈。</target>
        </trans-unit>
        <trans-unit id="6551855bec375daa115bdfc39bd2772543a4305f" translate="yes" xml:space="preserve">
          <source>You are responsible for registering your plugin as part of the Docker daemon startup. You can install multiple plugins and chain them together. This chain can be ordered. Each request to the daemon passes in order through the chain. Only when all the plugins grant access to the resource, is the access granted.</source>
          <target state="translated">你负责注册你的插件,作为Docker守护进程启动的一部分。你可以安装多个插件,并将它们链在一起。这个链可以是有序的。对守护进程的每个请求都会按顺序通过链。只有当所有插件都授予对资源的访问权时,才会授予访问权。</target>
        </trans-unit>
        <trans-unit id="26727f2aa7cf525fc7e06f204014fda306a44ad9" translate="yes" xml:space="preserve">
          <source>You can access your app from the IP address of &lt;strong&gt;either&lt;/strong&gt;&lt;code&gt;myvm1&lt;/code&gt; or &lt;code&gt;myvm2&lt;/code&gt;.</source>
          <target state="translated">你可以从IP地址来访问你的应用程序&lt;strong&gt;或者&lt;/strong&gt; &lt;code&gt;myvm1&lt;/code&gt; 或 &lt;code&gt;myvm2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59ba02ce40d7c190ead4701055fa7bb5819152bb" translate="yes" xml:space="preserve">
          <source>You can add an extra layer of safety by enabling AppArmor, SELinux, GRSEC, or another appropriate hardening system.</source>
          <target state="translated">您可以通过启用AppArmor、SELinux、GRSEC或其他适当的加固系统来添加额外的安全层。</target>
        </trans-unit>
        <trans-unit id="54c4d2a1dbdd5460c46e2c9b6b0af55c80c859f2" translate="yes" xml:space="preserve">
          <source>You can add or inspect an individual config at any time, or list all configs. You cannot remove a config that a running service is using. See &lt;a href=&quot;index#example-rotate-a-config&quot;&gt;Rotate a config&lt;/a&gt; for a way to remove a config without disrupting running services.</source>
          <target state="translated">您可以随时添加或检查单个配置，也可以列出所有配置。您无法删除正在运行的服务正在使用的配置。有关&lt;a href=&quot;index#example-rotate-a-config&quot;&gt;在&lt;/a&gt;不中断正在运行的服务的情况下删除配置的方法，请参见旋转配置。</target>
        </trans-unit>
        <trans-unit id="515b8e62cc049eb41499a0bce7e1f8a761afabfb" translate="yes" xml:space="preserve">
          <source>You can add or inspect an individual secret at any time, or list all secrets. You cannot remove a secret that a running service is using. See &lt;a href=&quot;index#example-rotate-a-secret&quot;&gt;Rotate a secret&lt;/a&gt; for a way to remove a secret without disrupting running services.</source>
          <target state="translated">您可以随时添加或检查单个机密，或列出所有机密。您无法删除正在运行的服务正在使用的机密。有关&lt;a href=&quot;index#example-rotate-a-secret&quot;&gt;在&lt;/a&gt;不中断正在运行的服务的情况下删除机密的方法，请参阅旋转机密。</target>
        </trans-unit>
        <trans-unit id="c853b33a60d75b7d5b4e8796f1d826fc1d91d4b1" translate="yes" xml:space="preserve">
          <source>You can add other hosts into a container&amp;rsquo;s &lt;code&gt;/etc/hosts&lt;/code&gt; file by using one or more &lt;code&gt;--add-host&lt;/code&gt; flags. This example adds a static address for a host named &lt;code&gt;docker&lt;/code&gt;:</source>
          <target state="translated">您可以使用一个或多个 &lt;code&gt;--add-host&lt;/code&gt; 标志将其他主机添加到容器的 &lt;code&gt;/etc/hosts&lt;/code&gt; 文件中。本示例为名为 &lt;code&gt;docker&lt;/code&gt; 的主机添加静态地址：</target>
        </trans-unit>
        <trans-unit id="7764fcb2a8d605b4837f3bb1f1484d127673cbeb" translate="yes" xml:space="preserve">
          <source>You can add your code to the image using &lt;code&gt;COPY&lt;/code&gt; or &lt;code&gt;ADD&lt;/code&gt; directive in a &lt;code&gt;Dockerfile&lt;/code&gt;. This is useful if you need to relocate your code along with the Docker image, for example when you&amp;rsquo;re sending code to another environment (production, CI, etc).</source>
          <target state="translated">您可以在 &lt;code&gt;Dockerfile&lt;/code&gt; 中使用 &lt;code&gt;COPY&lt;/code&gt; 或 &lt;code&gt;ADD&lt;/code&gt; 指令将代码添加到映像中。如果您需要将代码与Docker映像一起重定位，例如在将代码发送到另一个环境（生产环境，CI等）时，这很有用。</target>
        </trans-unit>
        <trans-unit id="0bf31c11a4d0055d8d96630a9a8a99a7be30c112" translate="yes" xml:space="preserve">
          <source>You can also &lt;a href=&quot;#bypass-the-routing-mesh&quot;&gt;bypass the routing mesh&lt;/a&gt; for a given service.</source>
          <target state="translated">您还可以&lt;a href=&quot;#bypass-the-routing-mesh&quot;&gt;绕过&lt;/a&gt;给定服务的路由网格。</target>
        </trans-unit>
        <trans-unit id="bc147354c246d445537bc8c6cf33983446316210" translate="yes" xml:space="preserve">
          <source>You can also build with content trust. Before running the &lt;code&gt;docker build&lt;/code&gt; command, you should set the environment variable &lt;code&gt;DOCKER_CONTENT_TRUST&lt;/code&gt; either manually or in a scripted fashion. Consider the simple Dockerfile below.</source>
          <target state="translated">您还可以通过内容信任来构建。在运行 &lt;code&gt;DOCKER_CONTENT_TRUST&lt;/code&gt; &lt;code&gt;docker build&lt;/code&gt; 命令之前，您应该手动或以脚本方式设置环境变量DOCKER_CONTENT_TRUST。考虑下面的简单Dockerfile。</target>
        </trans-unit>
        <trans-unit id="4e4b1ec7b62e686fa1e32d9f1bde42caa471f67f" translate="yes" xml:space="preserve">
          <source>You can also choose the IP addresses for the container with &lt;code&gt;--ip&lt;/code&gt; and &lt;code&gt;--ip6&lt;/code&gt; flags when you start the container on a user-defined network.</source>
          <target state="translated">您也可以选择容器中的IP地址与 &lt;code&gt;--ip&lt;/code&gt; 和 &lt;code&gt;--ip6&lt;/code&gt; 标志，当你一个用户定义的网络上启动容器。</target>
        </trans-unit>
        <trans-unit id="bed199b3c482e88bd082906f8ede10db967c2838" translate="yes" xml:space="preserve">
          <source>You can also connect an existing service to an overlay network using the &lt;code&gt;--network-add&lt;/code&gt; flag.</source>
          <target state="translated">您也可以使用 &lt;code&gt;--network-add&lt;/code&gt; 标志将现有服务连接到覆盖网络。</target>
        </trans-unit>
        <trans-unit id="f68804a7d3b1757e1de6f979be0f1db16fcda3dd" translate="yes" xml:space="preserve">
          <source>You can also demote a manager node to a worker node. See &lt;a href=&quot;../../../reference/commandline/node_demote/index&quot;&gt;node demote&lt;/a&gt;.</source>
          <target state="translated">您也可以将管理器节点降级为工作器节点。请参阅&lt;a href=&quot;../../../reference/commandline/node_demote/index&quot;&gt;节点降级&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="464891aaaa05d3fb898993b24fd3bcb18449b0d7" translate="yes" xml:space="preserve">
          <source>You can also expose the REST API over HTTP if you explicitly decide to do so. However, if you do that, be aware of the above mentioned security implications. Note that even if you have a firewall to limit accesses to the REST API endpoint from other hosts in the network, the endpoint can be still accessible from containers, and it can easily result in the privilege escalation. Therefore it is &lt;em&gt;mandatory&lt;/em&gt; to secure API endpoints with &lt;a href=&quot;../https/index&quot;&gt;HTTPS and certificates&lt;/a&gt;. It is also recommended to ensure that it is reachable only from a trusted network or VPN.</source>
          <target state="translated">如果您明确决定这样做，也可以通过HTTP公开REST API。但是，如果这样做，请注意上述安全隐患。请注意，即使您有防火墙来限制从网络中其他主机对REST API终结点的访问，也可以从容器访问该终结点，并且很容易导致特权升级。因此，&lt;em&gt;必须&lt;/em&gt;使用&lt;a href=&quot;../https/index&quot;&gt;HTTPS和证书&lt;/a&gt;来保护API端点。还建议确保仅从受信任的网络或VPN可以访问它。</target>
        </trans-unit>
        <trans-unit id="3f7173d4783121184d3208a3e13e5014c038e773" translate="yes" xml:space="preserve">
          <source>You can also filter for a substring in a name as this shows:</source>
          <target state="translated">你也可以过滤名字中的子串,如图所示。</target>
        </trans-unit>
        <trans-unit id="489e35a99e49bb270ff61b6146c9165e52a8187c" translate="yes" xml:space="preserve">
          <source>You can also filter for a substring in an ID as this shows:</source>
          <target state="translated">你也可以过滤一个ID中的子串,如图所示。</target>
        </trans-unit>
        <trans-unit id="33922fa2e3b353dd6cbf715d40735c6521b14496" translate="yes" xml:space="preserve">
          <source>You can also load the environment variables from a file. This file should use the syntax &lt;code&gt;&amp;lt;variable&amp;gt;=value&lt;/code&gt; (which sets the variable to the given value) or &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; (which takes the value from the local environment), and &lt;code&gt;#&lt;/code&gt; for comments.</source>
          <target state="translated">您也可以从文件中加载环境变量。该文件应使用语法 &lt;code&gt;&amp;lt;variable&amp;gt;=value&lt;/code&gt; （将变量设置为给定值）或 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; （从本地环境获取值），并使用 &lt;code&gt;#&lt;/code&gt; 表示注释。</target>
        </trans-unit>
        <trans-unit id="46944b3eee6421f26ca428697362f043c842d2ee" translate="yes" xml:space="preserve">
          <source>You can also override the parameters of the configuration by setting environment variables of the form &lt;code&gt;NOTARY_SERVER_&amp;lt;var&amp;gt;&lt;/code&gt; or &lt;code&gt;NOTARY_SIGNER_&amp;lt;var&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">您还可以通过设置 &lt;code&gt;NOTARY_SERVER_&amp;lt;var&amp;gt;&lt;/code&gt; 或 &lt;code&gt;NOTARY_SIGNER_&amp;lt;var&amp;gt;&lt;/code&gt; 形式的环境变量来覆盖配置的参数。</target>
        </trans-unit>
        <trans-unit id="f810f839da0d440f6c2ddde93f2a95b98b5df538" translate="yes" xml:space="preserve">
          <source>You can also pass a variable through from the shell by not giving it a value:</source>
          <target state="translated">你也可以从shell中传递一个变量,不给它一个值。</target>
        </trans-unit>
        <trans-unit id="cd38849be70d8f59211ef5527feb0fdafaafc3fd" translate="yes" xml:space="preserve">
          <source>You can also scale a service using the &lt;a href=&quot;../service_update/index&quot;&gt;&lt;code&gt;docker service update&lt;/code&gt;&lt;/a&gt; command. The following commands are equivalent:</source>
          <target state="translated">您还可以使用&lt;a href=&quot;../service_update/index&quot;&gt; &lt;code&gt;docker service update&lt;/code&gt; &lt;/a&gt;命令扩展服务。以下命令是等效的：</target>
        </trans-unit>
        <trans-unit id="7de2e297b3d0c1ff223629014b45a447691a560e" translate="yes" xml:space="preserve">
          <source>You can also see this information by running &lt;code&gt;docker-compose --help&lt;/code&gt; from the command line.</source>
          <target state="translated">您还可以通过从命令行运行 &lt;code&gt;docker-compose --help&lt;/code&gt; 来查看此信息。</target>
        </trans-unit>
        <trans-unit id="757810363e45b53d36c6cec832afbacc76af355c" translate="yes" xml:space="preserve">
          <source>You can also specify an image tag for the service to use. This example modifies the previous one to use the &lt;code&gt;alpine:3.6&lt;/code&gt; tag:</source>
          <target state="translated">您还可以指定要使用的服务的图像标签。本示例将上一个示例修改为使用 &lt;code&gt;alpine:3.6&lt;/code&gt; 标签：</target>
        </trans-unit>
        <trans-unit id="1dd3b93567383ff5ffa8fac281ea2f81f1c498fd" translate="yes" xml:space="preserve">
          <source>You can also specify commands to run remotely by appending them directly to the &lt;code&gt;docker-machine ssh&lt;/code&gt; command, much like the regular &lt;code&gt;ssh&lt;/code&gt; program works:</source>
          <target state="translated">您还可以通过将命令直接附加到 &lt;code&gt;docker-machine ssh&lt;/code&gt; 命令来指定要远程运行的命令，就像常规 &lt;code&gt;ssh&lt;/code&gt; 程序的工作原理一样：</target>
        </trans-unit>
        <trans-unit id="a87f55cf2135454472340f02c7a6a54e3045f943" translate="yes" xml:space="preserve">
          <source>You can also specify the name of the network separately from the name used to refer to it within the Compose file:</source>
          <target state="translated">你也可以在Compose文件中分别指定网络的名称和用来指代它的名称。</target>
        </trans-unit>
        <trans-unit id="be11fcf150423cc31791b08c500c5a38a4f8d527" translate="yes" xml:space="preserve">
          <source>You can also specify the name of the volume separately from the name used to refer to it within the Compose file:</source>
          <target state="translated">您也可以在Compose文件中分别指定卷的名称和用于引用它的名称。</target>
        </trans-unit>
        <trans-unit id="9d5371c85d4f210dd3d604a15c091241b18a2464" translate="yes" xml:space="preserve">
          <source>You can also specify the output format:</source>
          <target state="translated">您还可以指定输出格式。</target>
        </trans-unit>
        <trans-unit id="6849500307710b1faefd50ac9248e92c9efa7c8b" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;--format pretty&lt;/code&gt; for the same effect.</source>
          <target state="translated">您也可以使用 &lt;code&gt;--format pretty&lt;/code&gt; 获得相同的效果。</target>
        </trans-unit>
        <trans-unit id="312242d9758c1a2f30cf7b784a4d899e9681e194" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;DOCKER_HOST=ssh://USER@HOST&lt;/code&gt; or &lt;code&gt;ssh -L /path/to/docker.sock:/var/run/docker.sock&lt;/code&gt; instead if you prefer SSH over TLS.</source>
          <target state="translated">如果您更喜欢SSH而不是TLS，也可以使用 &lt;code&gt;DOCKER_HOST=ssh://USER@HOST&lt;/code&gt; 或 &lt;code&gt;ssh -L /path/to/docker.sock:/var/run/docker.sock&lt;/code&gt; 代替。</target>
        </trans-unit>
        <trans-unit id="4481472cdafa67014e7a26193e28cfedfb98fac7" translate="yes" xml:space="preserve">
          <source>You can also use placement constraints in conjunction with placement preferences and CPU/memory constraints. Be careful not to use settings that are not possible to fulfill.</source>
          <target state="translated">您还可以将放置约束与放置偏好和CPU/内存约束结合起来使用。注意不要使用不可能实现的设置。</target>
        </trans-unit>
        <trans-unit id="a64da56db765ee5bf161b0974b9cc95ee100cdb1" translate="yes" xml:space="preserve">
          <source>You can also use placement preferences in conjunction with placement constraints or CPU/memory constraints. Be careful not to use settings that are not possible to fulfill.</source>
          <target state="translated">您也可以将放置首选项与放置约束或CPU/内存约束一起使用。注意不要使用不可能实现的设置。</target>
        </trans-unit>
        <trans-unit id="3c4f4ee01d909bb299b66445124b4fc2c032150c" translate="yes" xml:space="preserve">
          <source>You can also use secrets to manage non-sensitive data, such as configuration files. However, Docker 17.06 and higher support the use of &lt;a href=&quot;../configs/index&quot;&gt;configs&lt;/a&gt; for storing non-sensitive data. Configs are mounted into the container&amp;rsquo;s filesystem directly, without the use of a RAM disk.</source>
          <target state="translated">您还可以使用机密来管理非敏感数据，例如配置文件。但是，Docker 17.06和更高版本支持使用&lt;a href=&quot;../configs/index&quot;&gt;配置&lt;/a&gt;来存储非敏感数据。配置文件直接安装到容器的文件系统中，而无需使用RAM磁盘。</target>
        </trans-unit>
        <trans-unit id="89af1ea314d1b60e8b1e39c1bda0cc23d5b8511d" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;constraint&lt;/code&gt; service-level key in a &lt;code&gt;docker-compose.yml&lt;/code&gt; file.</source>
          <target state="translated">您还可以在 &lt;code&gt;docker-compose.yml&lt;/code&gt; 文件中使用 &lt;code&gt;constraint&lt;/code&gt; 服务级别密钥。</target>
        </trans-unit>
        <trans-unit id="f99f3f91bd1e787b145928568e8c68580a644b83" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;curl&lt;/code&gt; command in a shell to view the same content.</source>
          <target state="translated">您还可以在外壳程序中使用 &lt;code&gt;curl&lt;/code&gt; 命令查看相同的内容。</target>
        </trans-unit>
        <trans-unit id="feac09b924d00183ef4c67a196e71767be0bb123" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;docker run --network=&amp;lt;network-name&amp;gt;&lt;/code&gt; option to start a container and immediately connect it to a network.</source>
          <target state="translated">您还可以使用 &lt;code&gt;docker run --network=&amp;lt;network-name&amp;gt;&lt;/code&gt; 选项启动容器并将其立即连接到网络。</target>
        </trans-unit>
        <trans-unit id="4ccd9f358e80808e63d73852e3022f06e5657636" translate="yes" xml:space="preserve">
          <source>You can also use variables that you&amp;rsquo;ve exported to your local environment:</source>
          <target state="translated">您还可以使用已导出到本地环境的变量：</target>
        </trans-unit>
        <trans-unit id="aea572892b1077d3cdfb04c1ce5f3c5d9e57b602" translate="yes" xml:space="preserve">
          <source>You can also write other services and link your &lt;code&gt;web&lt;/code&gt; service to them:</source>
          <target state="translated">您还可以编写其他服务并将您的 &lt;code&gt;web&lt;/code&gt; 服务链接到它们：</target>
        </trans-unit>
        <trans-unit id="20fc6ccd35fc61eaf407876d9135e74c80beedf5" translate="yes" xml:space="preserve">
          <source>You can apply multiple tags to an image. For example, you can apply the &lt;code&gt;latest&lt;/code&gt; tag to a newly built image and add another tag that references a specific version. For example, to tag an image both as &lt;code&gt;whenry/fedora-jboss:latest&lt;/code&gt; and &lt;code&gt;whenry/fedora-jboss:v2.1&lt;/code&gt;, use the following:</source>
          <target state="translated">您可以将多个标签应用于图像。例如，您可以将 &lt;code&gt;latest&lt;/code&gt; 标签应用于新建的图像，并添加另一个引用特定版本的标签。例如，要将图像标记为 &lt;code&gt;whenry/fedora-jboss:latest&lt;/code&gt; 和 &lt;code&gt;whenry/fedora-jboss:v2.1&lt;/code&gt; ，请使用以下命令：</target>
        </trans-unit>
        <trans-unit id="e80d890c7cb13fd7e65261d13c63641d176830e5" translate="yes" xml:space="preserve">
          <source>You can attach to the same contained process multiple times simultaneously, from different sessions on the Docker host.</source>
          <target state="translated">您可以从Docker主机上的不同会话同时多次附加到同一个包含的进程。</target>
        </trans-unit>
        <trans-unit id="d102e09943ec3e2e41cf03af44f97d0e3f21311e" translate="yes" xml:space="preserve">
          <source>You can back up the swarm using any manager. Use the following procedure.</source>
          <target state="translated">您可以使用任何管理器备份蜂群。使用以下步骤。</target>
        </trans-unit>
        <trans-unit id="d2c824c56fa72a227cef251d511d673cce2408d4" translate="yes" xml:space="preserve">
          <source>You can bring everything down, removing the containers entirely, with the &lt;code&gt;down&lt;/code&gt; command. Pass &lt;code&gt;--volumes&lt;/code&gt; to also remove the data volume used by the Redis container:</source>
          <target state="translated">您可以使用 &lt;code&gt;down&lt;/code&gt; 命令关闭所有内容，完全删除容器。传递 &lt;code&gt;--volumes&lt;/code&gt; 还可删除Redis容器使用的数据量：</target>
        </trans-unit>
        <trans-unit id="fa9230bf463d25633e1e9439688f9bdbd4255236" translate="yes" xml:space="preserve">
          <source>You can bypass the routing mesh, so that when you access the bound port on a given node, you are always accessing the instance of the service running on that node. This is referred to as &lt;code&gt;host&lt;/code&gt; mode. There are a few things to keep in mind.</source>
          <target state="translated">您可以绕过路由网格，以便在访问给定节点上的绑定端口时，始终可以访问在该节点上运行的服务实例。这称为 &lt;code&gt;host&lt;/code&gt; 模式。有几件事要牢记。</target>
        </trans-unit>
        <trans-unit id="0e6aef0889d920d93fc0b81faea547db2fa09ea3" translate="yes" xml:space="preserve">
          <source>You can change a container&amp;rsquo;s restart policy on a running container. The new restart policy takes effect instantly after you run &lt;code&gt;docker update&lt;/code&gt; on a container.</source>
          <target state="translated">您可以在运行中的容器上更改容器的重新启动策略。在容器上运行 &lt;code&gt;docker update&lt;/code&gt; 后，新的重新启动策略立即生效。</target>
        </trans-unit>
        <trans-unit id="4f66217a41f50a7d0196cff349a3de739b6f8ecf" translate="yes" xml:space="preserve">
          <source>You can change almost everything about an existing service using the &lt;code&gt;docker service update&lt;/code&gt; command. When you update a service, Docker stops its containers and restarts them with the new configuration.</source>
          <target state="translated">您可以使用 &lt;code&gt;docker service update&lt;/code&gt; 命令更改有关现有服务的几乎所有内容。当您更新服务时，Docker停止其容器并使用新配置重新启动它们。</target>
        </trans-unit>
        <trans-unit id="dd365c7397170d7421e270703d6f472e9dc263c0" translate="yes" xml:space="preserve">
          <source>You can change the &lt;code&gt;default&lt;/code&gt; string above to make this &lt;code&gt;LaunchAgent&lt;/code&gt; start a different machine.</source>
          <target state="translated">您可以更改上面的 &lt;code&gt;default&lt;/code&gt; 字符串，以使该 &lt;code&gt;LaunchAgent&lt;/code&gt; 启动其他计算机。</target>
        </trans-unit>
        <trans-unit id="ea090b733606f7c963034691a51a91548f8f64fb" translate="yes" xml:space="preserve">
          <source>You can change the SSH username with the &lt;code&gt;--amazonec2-ssh-user&lt;/code&gt; according to the AMI you selected with the &lt;code&gt;--amazonec2-ami&lt;/code&gt; option.</source>
          <target state="translated">您可以根据 &lt;code&gt;--amazonec2-ami&lt;/code&gt; 选项选择的AMI ，使用 &lt;code&gt;--amazonec2-ssh-user&lt;/code&gt; 更改SSH用户名。</target>
        </trans-unit>
        <trans-unit id="ead7b5a94cb008366e3e7562e117e129a8b80d22" translate="yes" xml:space="preserve">
          <source>You can configure Docker&amp;rsquo;s trust features so that your users can push and pull trusted images. To learn how to do this, see &lt;a href=&quot;trust/index&quot;&gt;Use trusted images&lt;/a&gt; in this section.</source>
          <target state="translated">您可以配置Docker的信任功能，以便您的用户可以推送和提取信任的映像。要了解如何执行此操作，请参阅本节中的&lt;a href=&quot;trust/index&quot;&gt;使用受信任的图像&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="df476714ce4c4d949375c1eae20cb767e00a5306" translate="yes" xml:space="preserve">
          <source>You can configure a service in such a way that if an update to the service causes redeployment to fail, the service can automatically roll back to the previous configuration. This helps protect service availability. You can set one or more of the following flags at service creation or update. If you do not set a value, the default is used.</source>
          <target state="translated">您可以以这样的方式配置服务,即如果服务的更新导致重新部署失败,服务可以自动回滚到以前的配置。这有助于保护服务的可用性。您可以在创建或更新服务时设置以下一个或多个标志。如果您没有设置值,则使用默认值。</target>
        </trans-unit>
        <trans-unit id="69ac94bdbca3f72cef72af9d3d726bbd25f4504a" translate="yes" xml:space="preserve">
          <source>You can configure an external load balancer for swarm services, either in combination with the routing mesh or without using the routing mesh at all.</source>
          <target state="translated">您可以为蜂群服务配置外部负载均衡器,既可以与路由网状结构相结合,也可以完全不使用路由网状结构。</target>
        </trans-unit>
        <trans-unit id="731173b92630c747a8331ac3bb18a0accd63f880" translate="yes" xml:space="preserve">
          <source>You can configure an external load balancer to route requests to a swarm service. For example, you could configure &lt;a href=&quot;http://www.haproxy.org&quot;&gt;HAProxy&lt;/a&gt; to balance requests to an nginx service published to port 8080.</source>
          <target state="translated">您可以配置外部负载均衡器以将请求路由到群集服务。例如，您可以配置&lt;a href=&quot;http://www.haproxy.org&quot;&gt;HAProxy&lt;/a&gt;以使请求平衡到发布到端口8080的Nginx服务。</target>
        </trans-unit>
        <trans-unit id="648baf82f8ffb3083656911b26104c05343c7a83" translate="yes" xml:space="preserve">
          <source>You can configure any type of load balancer to route requests to swarm nodes. To learn more about HAProxy, see the &lt;a href=&quot;https://cbonte.github.io/haproxy-dconv/&quot;&gt;HAProxy documentation&lt;/a&gt;.</source>
          <target state="translated">您可以配置任何类型的负载均衡器以将请求路由到群集节点。要了解有关HAProxy的更多信息，请参阅&lt;a href=&quot;https://cbonte.github.io/haproxy-dconv/&quot;&gt;HAProxy文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fa5d2313c62555c31b415eb2b83a7a336e7c2495" translate="yes" xml:space="preserve">
          <source>You can configure secure computing mode (Seccomp) policies to secure system calls in a container. For more information, see &lt;a href=&quot;seccomp/index&quot;&gt;Seccomp security profiles for Docker&lt;/a&gt;.</source>
          <target state="translated">您可以配置安全计算模式（Seccomp）策略以保护容器中的系统调用。有关更多信息，请参阅&lt;a href=&quot;seccomp/index&quot;&gt;Docker的Seccomp安全配置文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9209915eb3411e7600d0bb2b9f1559f67b7433ec" translate="yes" xml:space="preserve">
          <source>You can configure the Docker daemon to listen to multiple sockets at the same time using multiple &lt;code&gt;-H&lt;/code&gt; options:</source>
          <target state="translated">您可以使用多个 &lt;code&gt;-H&lt;/code&gt; 选项将Docker守护程序配置为同时侦听多个套接字：</target>
        </trans-unit>
        <trans-unit id="c5936c1bffed718796f936b6b78dff49ecfd8473" translate="yes" xml:space="preserve">
          <source>You can configure the following aspects of Notary:</source>
          <target state="translated">您可以对公证的以下方面进行配置。</target>
        </trans-unit>
        <trans-unit id="633b2fc127d3f8c7661fb14832732ff3b3d27df2" translate="yes" xml:space="preserve">
          <source>You can configure the following options for the runtime environment in the container:</source>
          <target state="translated">您可以为容器中的运行时环境配置以下选项。</target>
        </trans-unit>
        <trans-unit id="68adadc73937742cc15b95f8f8fe43f1b08eefbc" translate="yes" xml:space="preserve">
          <source>You can configure the load balancer to balance requests between every node in the swarm even if there are no tasks scheduled on the node. For example, you could have the following HAProxy configuration in &lt;code&gt;/etc/haproxy/haproxy.cfg&lt;/code&gt;:</source>
          <target state="translated">您可以配置负载平衡器以平衡群集中每个节点之间的请求，即使该节点上未计划任何任务也是如此。例如，您可以在 &lt;code&gt;/etc/haproxy/haproxy.cfg&lt;/code&gt; 中具有以下HAProxy配置：</target>
        </trans-unit>
        <trans-unit id="913dd02d98fad81ead2fc56e35a32b9c0d5dacb7" translate="yes" xml:space="preserve">
          <source>You can configure the runtime using options specified with the &lt;code&gt;--exec-opt&lt;/code&gt; flag. All the flag&amp;rsquo;s options have the &lt;code&gt;native&lt;/code&gt; prefix. A single &lt;code&gt;native.cgroupdriver&lt;/code&gt; option is available.</source>
          <target state="translated">您可以使用 &lt;code&gt;--exec-opt&lt;/code&gt; 标志指定的选项来配置运行时。所有标志的选项都具有 &lt;code&gt;native&lt;/code&gt; 前缀。单个 &lt;code&gt;native.cgroupdriver&lt;/code&gt; 选项可用。</target>
        </trans-unit>
        <trans-unit id="2da4649e3218bc4fafb7df590708f0bcfc2ca268" translate="yes" xml:space="preserve">
          <source>You can configure the service&amp;rsquo;s &lt;a href=&quot;#reserve-memory-or-cpus-for-a-service&quot;&gt;CPU or memory requirements&lt;/a&gt;, and the service only runs on nodes which can meet those requirements.</source>
          <target state="translated">您可以配置服务的&lt;a href=&quot;#reserve-memory-or-cpus-for-a-service&quot;&gt;CPU或内存要求&lt;/a&gt;，并且该服务仅在可以满足这些要求的节点上运行。</target>
        </trans-unit>
        <trans-unit id="062647114e990762602681e9e9e98ff4a028e3e6" translate="yes" xml:space="preserve">
          <source>You can connect a container to one or more networks. The networks need not be the same type. For example, you can connect a single container bridge and overlay networks.</source>
          <target state="translated">您可以将一个容器连接到一个或多个网络。这些网络不需要是相同的类型。例如,您可以连接单个容器桥接和覆盖网络。</target>
        </trans-unit>
        <trans-unit id="3a50cb498046cc514574c2cad4b8cc3d69e523de" translate="yes" xml:space="preserve">
          <source>You can connect multiple containers to the same network. Once connected, the containers can communicate easily need only another container&amp;rsquo;s IP address or name. For &lt;code&gt;overlay&lt;/code&gt; networks or custom plugins that support multi-host connectivity, containers connected to the same multi-host network but launched from different Engines can also communicate in this way.</source>
          <target state="translated">您可以将多个容器连接到同一网络。连接后，容器可以轻松通信，只需要另一个容器的IP地址或名称即可。对于支持多主机连接的 &lt;code&gt;overlay&lt;/code&gt; 网络或自定义插件，连接到同一多主机网络但从不同引擎启动的容器也可以这种方式进行通信。</target>
        </trans-unit>
        <trans-unit id="8e684ecfbfb94a5a384f821517d495d9cc449d0c" translate="yes" xml:space="preserve">
          <source>You can connect multiple containers to the same network. Once connected, the containers can communicate using only another container&amp;rsquo;s IP address or name. For &lt;code&gt;overlay&lt;/code&gt; networks or custom plugins that support multi-host connectivity, containers connected to the same multi-host network but launched from different Engines can also communicate in this way.</source>
          <target state="translated">您可以将多个容器连接到同一网络。连接后，容器只能使用另一个容器的IP地址或名称进行通信。对于支持多主机连接的 &lt;code&gt;overlay&lt;/code&gt; 网络或自定义插件，连接到同一多主机网络但从不同引擎启动的容器也可以这种方式进行通信。</target>
        </trans-unit>
        <trans-unit id="74c7455fe4872fbe21f5ed2754e8801441bed62b" translate="yes" xml:space="preserve">
          <source>You can control the order of service startup and shutdown with the &lt;a href=&quot;../compose-file/index#depends-on&quot;&gt;depends_on&lt;/a&gt; option. Compose always starts and stops containers in dependency order, where dependencies are determined by &lt;code&gt;depends_on&lt;/code&gt;, &lt;code&gt;links&lt;/code&gt;, &lt;code&gt;volumes_from&lt;/code&gt;, and &lt;code&gt;network_mode: &quot;service:...&quot;&lt;/code&gt;.</source>
          <target state="translated">您可以使用&lt;a href=&quot;../compose-file/index#depends-on&quot;&gt;depends_on&lt;/a&gt;选项控制服务启动和关闭的顺序。Compose始终以依赖关系顺序启动和停止容器，其中依赖关系由 &lt;code&gt;depends_on&lt;/code&gt; ， &lt;code&gt;links&lt;/code&gt; ， &lt;code&gt;volumes_from&lt;/code&gt; 和 &lt;code&gt;network_mode: &quot;service:...&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0fcf26265abe853428443a0ba09eca2cb434f4ed" translate="yes" xml:space="preserve">
          <source>You can create a network using a Docker network driver or an external network driver plugin. You can connect multiple containers to the same network. Once connected to a user-defined network, the containers can communicate easily using only another container&amp;rsquo;s IP address or name.</source>
          <target state="translated">您可以使用Docker网络驱动程序或外部网络驱动程序插件创建网络。您可以将多个容器连接到同一网络。连接到用户定义的网络后，这些容器可以仅使用另一个容器的IP地址或名称轻松进行通信。</target>
        </trans-unit>
        <trans-unit id="763e178dd85a4180405ff7bea8d4fb267ab87301" translate="yes" xml:space="preserve">
          <source>You can create a new service and pass the &lt;code&gt;--network&lt;/code&gt; flag to attach the service to the overlay network:</source>
          <target state="translated">您可以创建一个新服务并传递 &lt;code&gt;--network&lt;/code&gt; 标志，以将该服务附加到覆盖网络：</target>
        </trans-unit>
        <trans-unit id="6aab3fe3275fc74db3fd945644e7b712cb2f9994" translate="yes" xml:space="preserve">
          <source>You can create a swarm of one manager node, but you cannot have a worker node without at least one manager node. By default, all managers are also workers. In a single manager node cluster, you can run commands like &lt;code&gt;docker service create&lt;/code&gt; and the scheduler places all tasks on the local Engine.</source>
          <target state="translated">您可以创建一个由一个管理器节点组成的集群，但是如果没有至少一个管理器节点就不能有一个工作器节点。默认情况下，所有经理也是工人。在单个管理器节点集群中，您可以运行诸如 &lt;code&gt;docker service create&lt;/code&gt; 之类的命令，而调度程序会将所有任务放在本地引擎上。</target>
        </trans-unit>
        <trans-unit id="18a782adc25948f5b9e3a747fd2b604c165de5c1" translate="yes" xml:space="preserve">
          <source>You can create an &lt;code&gt;~/.aws/credentials&lt;/code&gt; file to hold your AWS keys so that you don&amp;rsquo;t need to type them every time you run the &lt;code&gt;docker-machine create&lt;/code&gt; command. Here is an example of a credentials file.</source>
          <target state="translated">您可以创建一个 &lt;code&gt;~/.aws/credentials&lt;/code&gt; 文件来保存您的AWS密钥，这样您就不必在每次运行 &lt;code&gt;docker-machine create&lt;/code&gt; 命令时都键入它们。这是凭证文件的示例。</target>
        </trans-unit>
        <trans-unit id="c3f6fba8e4e8284b523d375b2b40a72e07486fe0" translate="yes" xml:space="preserve">
          <source>You can create an entirely new machine or you can convert a Boot2Docker VM into a machine by importing the VM. To convert a Boot2Docker VM, you&amp;rsquo;d use the following command:</source>
          <target state="translated">您可以创建全新的计算机，也可以通过导入VM将Boot2Docker VM转换为计算机。要转换Boot2Docker VM，请使用以下命令：</target>
        </trans-unit>
        <trans-unit id="bd1562722defe7ca4a0fd3ef58d7ec715e32ac94" translate="yes" xml:space="preserve">
          <source>You can create and manage as many local VMs running Docker as your local resources permit; just run &lt;code&gt;docker-machine create&lt;/code&gt; again. All created machines appear in the output of &lt;code&gt;docker-machine ls&lt;/code&gt;.</source>
          <target state="translated">您可以在本地资源允许的情况下创建和管理运行Docker的本地虚拟机。只需再次运行 &lt;code&gt;docker-machine create&lt;/code&gt; 即可。所有创建的机器都出现在 &lt;code&gt;docker-machine ls&lt;/code&gt; 的输出中。</target>
        </trans-unit>
        <trans-unit id="1c498c067458b32cc464e93d6f532b5781608103" translate="yes" xml:space="preserve">
          <source>You can create the network which will be used to provide the routing-mesh in the swarm cluster. You do so by specifying &lt;code&gt;--ingress&lt;/code&gt; when creating the network. Only one ingress network can be created at the time. The network can be removed only if no services depend on it. Any option available when creating an overlay network is also available when creating the ingress network, besides the &lt;code&gt;--attachable&lt;/code&gt; option.</source>
          <target state="translated">您可以创建网络，该网络将用于在群集集群中提供路由网格。您可以通过在创建网络时指定 &lt;code&gt;--ingress&lt;/code&gt; 来实现。一次只能创建一个入口网络。仅当没有服务依赖该网络时，才能删除该网络。除了 &lt;code&gt;--attachable&lt;/code&gt; 选项，创建覆盖网络时可用的任何选项在创建入口网络时也可用。</target>
        </trans-unit>
        <trans-unit id="c18bb29d8951be273d9a35729f358e10b866cd23" translate="yes" xml:space="preserve">
          <source>You can create two types of mounts for services in a swarm, &lt;code&gt;volume&lt;/code&gt; mounts or &lt;code&gt;bind&lt;/code&gt; mounts. Regardless of which type of mount you use, configure it using the &lt;code&gt;--mount&lt;/code&gt; flag when you create a service, or the &lt;code&gt;--mount-add&lt;/code&gt; or &lt;code&gt;--mount-rm&lt;/code&gt; flag when updating an existing service. The default is a data volume if you don&amp;rsquo;t specify a type.</source>
          <target state="translated">您可以为群集中的服务创建两种类型的安装： &lt;code&gt;volume&lt;/code&gt; 安装或 &lt;code&gt;bind&lt;/code&gt; 安装。无论使用哪种类型的安装，在创建服务时都使用 &lt;code&gt;--mount&lt;/code&gt; 标志进行配置，或者在更新现有服务时使用 &lt;code&gt;--mount-add&lt;/code&gt; 或 &lt;code&gt;--mount-rm&lt;/code&gt; 标志进行配置。如果未指定类型，则默认为数据量。</target>
        </trans-unit>
        <trans-unit id="9e1ded9d6e046d361562814b4d4b5364dcb40c50" translate="yes" xml:space="preserve">
          <source>You can define each plugin into a separated subdirectory if you want to isolate definitions from each other. For example, you can create the &lt;code&gt;flocker&lt;/code&gt; socket under &lt;code&gt;/run/docker/plugins/flocker/flocker.sock&lt;/code&gt; and only mount &lt;code&gt;/run/docker/plugins/flocker&lt;/code&gt; inside the &lt;code&gt;flocker&lt;/code&gt; container.</source>
          <target state="translated">如果要相互隔离定义，可以将每个插件定义到一个单独的子目录中。例如，您可以创建 &lt;code&gt;flocker&lt;/code&gt; 下socket &lt;code&gt;/run/docker/plugins/flocker/flocker.sock&lt;/code&gt; 只有安装 &lt;code&gt;/run/docker/plugins/flocker&lt;/code&gt; 里面 &lt;code&gt;flocker&lt;/code&gt; 容器。</target>
        </trans-unit>
        <trans-unit id="ae4af3ca26381fbbec3db52bcbe19c2b5f661d9e" translate="yes" xml:space="preserve">
          <source>You can define the variable and its value when running the container:</source>
          <target state="translated">您可以在运行容器时定义变量及其值。</target>
        </trans-unit>
        <trans-unit id="6f681c063d614c5eba4f85a8ef8ad42612fe6a54" translate="yes" xml:space="preserve">
          <source>You can define your own policies using your favorite access control mechanism.</source>
          <target state="translated">你可以使用你最喜欢的访问控制机制来定义自己的策略。</target>
        </trans-unit>
        <trans-unit id="b296bfc0cb9abab9e4f0fc5833d12d87d41f6225" translate="yes" xml:space="preserve">
          <source>You can disconnect a container from a network using the &lt;code&gt;docker network disconnect&lt;/code&gt; command.</source>
          <target state="translated">您可以使用 &lt;code&gt;docker network disconnect&lt;/code&gt; 命令从网络断开容器。</target>
        </trans-unit>
        <trans-unit id="8b56c0ba69f5a5739d4f8b6a334b49dd22a34a96" translate="yes" xml:space="preserve">
          <source>You can do the same using &lt;a href=&quot;../../compose/index&quot;&gt;Docker Compose&lt;/a&gt; by setting volumes, environment variables, and overriding the default command for the Notary server containers in the Compose file.</source>
          <target state="translated">您可以通过设置卷，环境变量并覆盖Compose文件中的Notary服务器容器的默认命令来使用&lt;a href=&quot;../../compose/index&quot;&gt;Docker Compose&lt;/a&gt;进行相同的操作。</target>
        </trans-unit>
        <trans-unit id="5f17fa73828668d04127c0011ad85b210142f794" translate="yes" xml:space="preserve">
          <source>You can download precompiled notary binary for 64 bit Linux or macOS from the Notary repository&amp;rsquo;s &lt;a href=&quot;https://github.com/docker/notary/releases&quot;&gt;Releases page on Github&lt;/a&gt;.</source>
          <target state="translated">您可以从&lt;a href=&quot;https://github.com/docker/notary/releases&quot;&gt;Github上Notary&lt;/a&gt;存储库的Releases页面下载适用于64位Linux或macOS的预编译的公证二进制文件。</target>
        </trans-unit>
        <trans-unit id="a5b056eb64925eecbf0e1fb8fe271b81da5f90d8" translate="yes" xml:space="preserve">
          <source>You can even cherry-pick particular tags of an image repository.</source>
          <target state="translated">你甚至可以挑选图片库中的特定标签。</target>
        </trans-unit>
        <trans-unit id="fec9a747fa2db626d6d33241616752373d4113ff" translate="yes" xml:space="preserve">
          <source>You can even use the &lt;code&gt;.dockerignore&lt;/code&gt; file to exclude the &lt;code&gt;Dockerfile&lt;/code&gt; and &lt;code&gt;.dockerignore&lt;/code&gt; files. These files are still sent to the daemon because it needs them to do its job. But the &lt;code&gt;ADD&lt;/code&gt; and &lt;code&gt;COPY&lt;/code&gt; instructions do not copy them to the image.</source>
          <target state="translated">您甚至可以使用 &lt;code&gt;.dockerignore&lt;/code&gt; 文件来排除 &lt;code&gt;Dockerfile&lt;/code&gt; 和 &lt;code&gt;.dockerignore&lt;/code&gt; 文件。这些文件仍被发送到守护程序，因为它需要它们来完成其工作。但是 &lt;code&gt;ADD&lt;/code&gt; 和 &lt;code&gt;COPY&lt;/code&gt; 指令不会将它们复制到图像。</target>
        </trans-unit>
        <trans-unit id="b32fa6efc0dcd6937006d63f84895dda4ce4743d" translate="yes" xml:space="preserve">
          <source>You can extend a Compose file using the &lt;code&gt;extends&lt;/code&gt; field or by creating multiple Compose files. See &lt;a href=&quot;extends/index&quot;&gt;extends&lt;/a&gt; for more details.</source>
          <target state="translated">您可以使用 &lt;code&gt;extends&lt;/code&gt; 字段或通过创建多个&amp;ldquo;撰写&amp;rdquo;文件来扩展&amp;ldquo;撰写&amp;rdquo;文件。有关更多详细信息，请参见&lt;a href=&quot;extends/index&quot;&gt;扩展&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a6d34dedb5c59c676ecad8e950f7743f368e0a75" translate="yes" xml:space="preserve">
          <source>You can extend a service that itself extends another. You can extend indefinitely. Compose does not support circular references and &lt;code&gt;docker-compose&lt;/code&gt; returns an error if it encounters one.</source>
          <target state="translated">您可以扩展本身扩展另一个服务的服务。您可以无限期地扩展。Compose不支持循环引用，如果 &lt;code&gt;docker-compose&lt;/code&gt; 遇到循环引用，则返回错误。</target>
        </trans-unit>
        <trans-unit id="e92db1adfebd6a517c5785aa343cc25fcbb4b370" translate="yes" xml:space="preserve">
          <source>You can extend the capabilities of the Docker Engine by loading third-party plugins. This page explains the types of plugins and provides links to several volume and network plugins for Docker.</source>
          <target state="translated">您可以通过加载第三方插件来扩展Docker引擎的功能。本页解释了插件的类型,并提供了几个Docker的体积和网络插件的链接。</target>
        </trans-unit>
        <trans-unit id="4bad2dee85167024415e81d7b96a81289b815c3e" translate="yes" xml:space="preserve">
          <source>You can filter the output by an absolute timestamp or relative time on the host machine, using the following different time syntaxes:</source>
          <target state="translated">您可以使用以下不同的时间语法,按主机上的绝对时间戳或相对时间过滤输出。</target>
        </trans-unit>
        <trans-unit id="df04d529ff62de418894272cab304569f9e76324" translate="yes" xml:space="preserve">
          <source>You can find additional documentation in the comments at the &lt;a href=&quot;https://github.com/docker/machine/tree/master/contrib/completion/bash&quot;&gt;top of each script&lt;/a&gt;.</source>
          <target state="translated">您可以在&lt;a href=&quot;https://github.com/docker/machine/tree/master/contrib/completion/bash&quot;&gt;每个脚本顶部&lt;/a&gt;的注释中找到其他文档。</target>
        </trans-unit>
        <trans-unit id="fd1103c88fffc440fb167ded49c92b16386ade82" translate="yes" xml:space="preserve">
          <source>You can find out all the ports mapped by not specifying a &lt;code&gt;PRIVATE_PORT&lt;/code&gt;, or just a specific mapping:</source>
          <target state="translated">您可以通过不指定 &lt;code&gt;PRIVATE_PORT&lt;/code&gt; 或仅指定映射来查找所有映射的端口：</target>
        </trans-unit>
        <trans-unit id="cb188165de80d2ad979cfe8d2d557d73bb44a63b" translate="yes" xml:space="preserve">
          <source>You can get the PID of &lt;code&gt;notary-server&lt;/code&gt; through</source>
          <target state="translated">你可以得到的PID &lt;code&gt;notary-server&lt;/code&gt; 通过</target>
        </trans-unit>
        <trans-unit id="0c664cefd31ac791b31a6a585a1da985b6794823" translate="yes" xml:space="preserve">
          <source>You can go further and define (or re-define) configuration locally in &lt;code&gt;docker-compose.yml&lt;/code&gt;:</source>
          <target state="translated">您可以进一步在 &lt;code&gt;docker-compose.yml&lt;/code&gt; 中本地定义（或重新定义）配置：</target>
        </trans-unit>
        <trans-unit id="9c1c428fd4cd1c187539e507698f4a729dd01434" translate="yes" xml:space="preserve">
          <source>You can grant a service access to multiple configs and you can mix long and short syntax. Defining a config does not imply granting a service access to it.</source>
          <target state="translated">你可以授予一个服务对多个配置的访问权,而且你可以混合使用长和短的语法。定义一个配置并不意味着授予一个服务对它的访问权。</target>
        </trans-unit>
        <trans-unit id="8af54751122ba57689015bd164f246d7efe4825a" translate="yes" xml:space="preserve">
          <source>You can grant a service access to multiple secrets and you can mix long and short syntax. Defining a secret does not imply granting a service access to it.</source>
          <target state="translated">您可以授予一个服务对多个秘密的访问权,您可以混合使用长和短的语法。定义一个秘密并不意味着授予服务对它的访问权。</target>
        </trans-unit>
        <trans-unit id="246d12350f6144da45d5ebaecb7f364eb63400cc" translate="yes" xml:space="preserve">
          <source>You can group your images together using names and tags, and then upload them to &lt;a href=&quot;../../../../get-started/index#/contributing-to-docker-hub&quot;&gt;&lt;em&gt;Share Images via Repositories&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">您可以使用名称和标签将图像分组在一起，然后将它们上传到&lt;a href=&quot;../../../../get-started/index#/contributing-to-docker-hub&quot;&gt;&lt;em&gt;&amp;ldquo;通过存储库共享图像&amp;rdquo;&lt;/em&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da77cb90b4235ed299a01d3c8c9e021bd71505d6" translate="yes" xml:space="preserve">
          <source>You can ignore these warnings unless you actually need the ability to &lt;a href=&quot;https://docs.docker.com/config/containers&quot;&gt;limit these resources&lt;/a&gt;, in which case you should consult your operating system&amp;rsquo;s documentation for enabling them. &lt;a href=&quot;https://docs.docker.com/install/linux#your-kernel-does-not-support-cgroup-swap-limit-capabilities&quot;&gt;Learn more&lt;/a&gt;.</source>
          <target state="translated">除非您确实需要&lt;a href=&quot;https://docs.docker.com/config/containers&quot;&gt;限制这些资源&lt;/a&gt;的能力，否则可以忽略这些警告，在这种情况下，应查阅操作系统的文档以启用它们。&lt;a href=&quot;https://docs.docker.com/install/linux#your-kernel-does-not-support-cgroup-swap-limit-capabilities&quot;&gt;了解更多&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="54974f48a88eaa32cf54269306312e2e1444a2be" translate="yes" xml:space="preserve">
          <source>You can impose placement constraints on the service, and the constraints may not be able to be honored at a given time.</source>
          <target state="translated">您可以对服务施加放置约束,约束可能在特定时间无法兑现。</target>
        </trans-unit>
        <trans-unit id="fe4b669d13fd0309ed5dbfc7aa25b36a81c5b2bb" translate="yes" xml:space="preserve">
          <source>You can inspect a secret, either by its &lt;em&gt;name&lt;/em&gt;, or &lt;em&gt;ID&lt;/em&gt;</source>
          <target state="translated">您可以按&lt;em&gt;名称&lt;/em&gt;或&lt;em&gt;ID&lt;/em&gt;检查机密&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="06ac559e7db35bedcf56cc1a4cab48fdc7f48777" translate="yes" xml:space="preserve">
          <source>You can inspect a service, either by its &lt;em&gt;name&lt;/em&gt;, or &lt;em&gt;ID&lt;/em&gt;</source>
          <target state="translated">您可以通过&lt;em&gt;名称&lt;/em&gt;或&lt;em&gt;ID&lt;/em&gt;来检查服务&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f373c5a8a16e288ebf243865250bba9837a5908" translate="yes" xml:space="preserve">
          <source>You can inspect images with &lt;code&gt;docker inspect &amp;lt;tag or id&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">您可以使用 &lt;code&gt;docker inspect &amp;lt;tag or id&amp;gt;&lt;/code&gt; 检查图像。</target>
        </trans-unit>
        <trans-unit id="8af07d9ea4ada580179d49442a80cc818fa3024d" translate="yes" xml:space="preserve">
          <source>You can join any machine, physical or virtual, to this swarm, using the same &lt;code&gt;docker swarm join&lt;/code&gt; command you used on &lt;code&gt;myvm2&lt;/code&gt;, and capacity is added to your cluster. Just run &lt;code&gt;docker stack deploy&lt;/code&gt; afterwards, and your app can take advantage of the new resources.</source>
          <target state="translated">您可以使用在 &lt;code&gt;myvm2&lt;/code&gt; 上使用的同一docker &lt;code&gt;docker swarm join&lt;/code&gt; 命令将任何物理或虚拟机加入该集群，然后将容量添加到集群。稍后再运行 &lt;code&gt;docker stack deploy&lt;/code&gt; ，您的应用程序就可以利用新资源。</target>
        </trans-unit>
        <trans-unit id="635f2b07d263911ac32fb8f3cd308a2b9e94737c" translate="yes" xml:space="preserve">
          <source>You can limit the set of nodes where a task can be scheduled by defining constraint expressions. Multiple constraints find nodes that satisfy every expression (AND match). Constraints can match node or Docker Engine labels as follows:</source>
          <target state="translated">您可以通过定义约束表达式来限制可以调度任务的节点集。多个约束可以找到满足每个表达式的节点(and匹配)。约束可以匹配节点或Docker Engine标签,具体如下。</target>
        </trans-unit>
        <trans-unit id="932d9584bdf7d063295a234173cea19d5f8905e7" translate="yes" xml:space="preserve">
          <source>You can load multiple label-files by supplying multiple &lt;code&gt;--label-file&lt;/code&gt; flags.</source>
          <target state="translated">您可以通过提供多个 &lt;code&gt;--label-file&lt;/code&gt; 标志来加载多个标签文件。</target>
        </trans-unit>
        <trans-unit id="fb7ea10b657de774a945ed1c05bbb8230c047109" translate="yes" xml:space="preserve">
          <source>You can log into any public or private repository for which you have credentials. When you log in, the command stores credentials in &lt;code&gt;$HOME/.docker/config.json&lt;/code&gt; on Linux or &lt;code&gt;%USERPROFILE%/.docker/config.json&lt;/code&gt; on Windows, via the procedure described below.</source>
          <target state="translated">您可以登录到具有凭据的任何公共或私有存储库。登录时，该命令通过以下过程将凭据存储在Linux上的 &lt;code&gt;$HOME/.docker/config.json&lt;/code&gt; 或Windows 上的 &lt;code&gt;%USERPROFILE%/.docker/config.json&lt;/code&gt; docker / config.json中。</target>
        </trans-unit>
        <trans-unit id="c3e08a89a51095a72ff31f7fc841d8b1482feb83" translate="yes" xml:space="preserve">
          <source>You can loop over arrays and maps in the results to produce simple text output:</source>
          <target state="translated">您可以在结果中循环处理数组和地图,以产生简单的文本输出。</target>
        </trans-unit>
        <trans-unit id="c5c5662aed716bfdd648d1a8cd8019fe49d1ac3c" translate="yes" xml:space="preserve">
          <source>You can modify node attributes as follows:</source>
          <target state="translated">你可以修改节点属性,具体如下。</target>
        </trans-unit>
        <trans-unit id="ba9348ba8efc287e168073afdaea352d00ea5240" translate="yes" xml:space="preserve">
          <source>You can monitor the health of manager nodes by querying the docker &lt;code&gt;nodes&lt;/code&gt; API in JSON format through the &lt;code&gt;/nodes&lt;/code&gt; HTTP endpoint. Refer to the &lt;a href=&quot;https://docs.docker.com/engine/api/v1.25/#tag/Node&quot;&gt;nodes API documentation&lt;/a&gt; for more information.</source>
          <target state="translated">您可以通过 &lt;code&gt;/nodes&lt;/code&gt; HTTP端点以JSON格式查询docker &lt;code&gt;nodes&lt;/code&gt; API，从而监视管理器节点的运行状况。有关更多信息，请参考&lt;a href=&quot;https://docs.docker.com/engine/api/v1.25/#tag/Node&quot;&gt;节点API文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f5acdfcb9b53125d4412e62af654c3c8652d3b67" translate="yes" xml:space="preserve">
          <source>You can mount a host path as part of a definition for a single service, and there is no need to define it in the top level &lt;code&gt;volumes&lt;/code&gt; key.</source>
          <target state="translated">您可以将主机路径安装为单个服务的定义的一部分，而无需在顶级 &lt;code&gt;volumes&lt;/code&gt; 密钥中对其进行定义。</target>
        </trans-unit>
        <trans-unit id="7539dca6b06909c8cda5cc2e73206fc436c8315e" translate="yes" xml:space="preserve">
          <source>You can mount a relative path on the host, that expands relative to the directory of the Compose configuration file being used. Relative paths should always begin with &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;..&lt;/code&gt;.</source>
          <target state="translated">您可以在主机上安装相对路径，该相对路径相对于正在使用的Compose配置文件的目录进行扩展。相对路径应始终以开头 &lt;code&gt;.&lt;/code&gt; 或 &lt;code&gt;..&lt;/code&gt; .。</target>
        </trans-unit>
        <trans-unit id="af722015f2a94e745ccd11ed2043e37c82955685" translate="yes" xml:space="preserve">
          <source>You can mount a relative path on the host, which expands relative to the directory of the Compose configuration file being used. Relative paths should always begin with &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;..&lt;/code&gt;.</source>
          <target state="translated">您可以在主机上安装相对路径，该相对路径相对于正在使用的Compose配置文件的目录进行扩展。相对路径应始终以开头 &lt;code&gt;.&lt;/code&gt; 或 &lt;code&gt;..&lt;/code&gt; .。</target>
        </trans-unit>
        <trans-unit id="9574e393616f86dbebee4730c471f7aa8ee02bf6" translate="yes" xml:space="preserve">
          <source>You can name the directory something easy for you to remember. This directory is the context for your application image. The directory should only contain resources to build that image.</source>
          <target state="translated">你可以给这个目录起一些容易记住的名字。这个目录是你的应用程序映像的上下文。该目录应该只包含构建该镜像的资源。</target>
        </trans-unit>
        <trans-unit id="a3ec0713e5c8d70883468794734dc666e808b63b" translate="yes" xml:space="preserve">
          <source>You can narrow the kind of nodes your task can land on through the using the &lt;code&gt;--generic-resource&lt;/code&gt; flag (if the nodes advertise these resources):</source>
          <target state="translated">您可以使用 &lt;code&gt;--generic-resource&lt;/code&gt; 标志（如果节点宣传这些资源）来缩小任务可以登陆的节点的种类：</target>
        </trans-unit>
        <trans-unit id="f398176427488324c0c396b451d465f4c6c04315" translate="yes" xml:space="preserve">
          <source>You can now boot the app with &lt;a href=&quot;../reference/up/index&quot;&gt;docker-compose up&lt;/a&gt;:</source>
          <target state="translated">您现在可以使用&lt;a href=&quot;../reference/up/index&quot;&gt;docker-compose up&lt;/a&gt;启动应用程序：</target>
        </trans-unit>
        <trans-unit id="db3139a93c0afa28f4950e2904a43049b899a295" translate="yes" xml:space="preserve">
          <source>You can now run Docker commands on this host.</source>
          <target state="translated">现在你可以在这个主机上运行Docker命令了。</target>
        </trans-unit>
        <trans-unit id="08fde8ee16c2bacd43d172d7d7022270ca44d869" translate="yes" xml:space="preserve">
          <source>You can omit the value when specifying a build argument, in which case its value at build time is the value in the environment where Compose is running.</source>
          <target state="translated">你可以在指定构建参数时省略该值,在这种情况下,它在构建时的值就是 Compose 运行环境中的值。</target>
        </trans-unit>
        <trans-unit id="15062d652d78f4eb03a818cdf4f82e5d2934f2d6" translate="yes" xml:space="preserve">
          <source>You can override the &lt;code&gt;docker run&lt;/code&gt; command for the image if you want to pass different command line options. Both Notary server and Notary signer take the following command line arguments:</source>
          <target state="translated">如果要传递其他命令行选项，则可以覆盖映像的 &lt;code&gt;docker run&lt;/code&gt; 命令。公证人服务器和公证人签名人均采用以下命令行参数：</target>
        </trans-unit>
        <trans-unit id="1fe5dbdf3702f4db7043e0341923ac8d965d060d" translate="yes" xml:space="preserve">
          <source>You can override the default labeling scheme for each container by specifying the &lt;code&gt;--security-opt&lt;/code&gt; flag. Specifying the level in the following command allows you to share the same content between containers.</source>
          <target state="translated">您可以通过指定 &lt;code&gt;--security-opt&lt;/code&gt; 标志来覆盖每个容器的默认标签方案。在以下命令中指定级别允许您在容器之间共享相同的内容。</target>
        </trans-unit>
        <trans-unit id="dff2e4504e5bd5753ff17b2889bd7441acf98489" translate="yes" xml:space="preserve">
          <source>You can pass &lt;code&gt;unconfined&lt;/code&gt; to run a container without the default seccomp profile.</source>
          <target state="translated">您可以 &lt;code&gt;unconfined&lt;/code&gt; 地运行以在没有默认seccomp配置文件的情况下运行容器。</target>
        </trans-unit>
        <trans-unit id="082ad582100a8a00fe133f9f4fa5f232aaec8952" translate="yes" xml:space="preserve">
          <source>You can pass environment variables from your shell straight through to a service&amp;rsquo;s containers with the &lt;a href=&quot;../compose-file/index#environment&quot;&gt;&amp;lsquo;environment&amp;rsquo; key&lt;/a&gt; by not giving them a value, just like with &lt;code&gt;docker run -e VARIABLE ...&lt;/code&gt;:</source>
          <target state="translated">您可以通过不给它们一个值来使用&lt;a href=&quot;../compose-file/index#environment&quot;&gt;'environment'键&lt;/a&gt;将环境变量从您的外壳直接传递到服务的容器，就像 &lt;code&gt;docker run -e VARIABLE ...&lt;/code&gt; 一样：</target>
        </trans-unit>
        <trans-unit id="76662786c039a093df9f1de04a50afac10cbe11b" translate="yes" xml:space="preserve">
          <source>You can pass multiple environment variables from an external file through to a service&amp;rsquo;s containers with the &lt;a href=&quot;../compose-file/index#env_file&quot;&gt;&amp;lsquo;env_file&amp;rsquo; option&lt;/a&gt;, just like with &lt;code&gt;docker run --env-file=FILE ...&lt;/code&gt;:</source>
          <target state="translated">您可以使用&lt;a href=&quot;../compose-file/index#env_file&quot;&gt;'env_file'选项&lt;/a&gt;将多个环境变量从外部文件传递到服务的容器，就像 &lt;code&gt;docker run --env-file=FILE ...&lt;/code&gt; 一样：</target>
        </trans-unit>
        <trans-unit id="43fce4891e31d586e186bc9fba00b589fcb9e3dd" translate="yes" xml:space="preserve">
          <source>You can pause, restart, and stop containers that are connected to a network. A container connects to its configured networks when it runs.</source>
          <target state="translated">您可以暂停、重新启动和停止连接到网络的容器。容器运行时,会连接到其配置的网络。</target>
        </trans-unit>
        <trans-unit id="2b4bcfda039f6f4d4346afdeff61502363f4d331" translate="yes" xml:space="preserve">
          <source>You can print the inspect output in a human-readable format instead of the default JSON output, by using the &lt;code&gt;--pretty&lt;/code&gt; option:</source>
          <target state="translated">您可以使用 &lt;code&gt;--pretty&lt;/code&gt; 选项以一种人类可读的格式而不是默认的JSON输出来打印检查输出：</target>
        </trans-unit>
        <trans-unit id="ba01aa16dc20b8472fabdb8c7d86db75e4da2965" translate="yes" xml:space="preserve">
          <source>You can promote a worker node to be a manager by running &lt;code&gt;docker node promote&lt;/code&gt;. For example, you may want to promote a worker node when you take a manager node offline for maintenance. See &lt;a href=&quot;../../../reference/commandline/node_promote/index&quot;&gt;node promote&lt;/a&gt;.</source>
          <target state="translated">您可以通过运行 &lt;code&gt;docker node promote&lt;/code&gt; 将工作程序节点提升为管理员。例如，当使管理器节点脱机进行维护时，您可能想提升工作器节点。请参阅&lt;a href=&quot;../../../reference/commandline/node_promote/index&quot;&gt;节点提升&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9e98cb86757329b5fe2a807e3428044b4702503f" translate="yes" xml:space="preserve">
          <source>You can promote a worker node to the manager role. This is useful when a manager node becomes unavailable or if you want to take a manager offline for maintenance. Similarly, you can demote a manager node to the worker role.</source>
          <target state="translated">您可以将 Worker 节点升级为 Manager 角色。当经理节点不可用时,或者您想让经理离线维护时,这很有用。同样,您也可以将经理节点降级为工人角色。</target>
        </trans-unit>
        <trans-unit id="e722a9ce5d89f2df95da5a1d77ce8eca2153947c" translate="yes" xml:space="preserve">
          <source>You can protect the Docker daemon socket and ensure only trusted Docker client connections. For more information, &lt;a href=&quot;https/index&quot;&gt;Protect the Docker daemon socket&lt;/a&gt;</source>
          <target state="translated">您可以保护Docker守护程序套接字，并确保仅信任的Docker客户端连接。有关更多信息，请&lt;a href=&quot;https/index&quot;&gt;保护Docker守护进程套接字&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6b73c81fe9530caed6a482fa481709daaa399f6" translate="yes" xml:space="preserve">
          <source>You can publish a port for an existing service using the following command:</source>
          <target state="translated">您可以使用以下命令为现有服务发布端口。</target>
        </trans-unit>
        <trans-unit id="838df0c069b715857deab2e61ae048adb6265602" translate="yes" xml:space="preserve">
          <source>You can publish service ports to make them available externally to the swarm using the &lt;code&gt;--publish&lt;/code&gt; flag. The &lt;code&gt;--publish&lt;/code&gt; flag can take two different styles of arguments. The short version is positional, and allows you to specify the published port and target port separated by a colon.</source>
          <target state="translated">您可以使用 &lt;code&gt;--publish&lt;/code&gt; 标志发布服务端口，以使其对群集可用。该 &lt;code&gt;--publish&lt;/code&gt; 标志可以采取两种不同风格的参数。简短版本是固定的，允许您指定由冒号分隔的发布端口和目标端口。</target>
        </trans-unit>
        <trans-unit id="57ece701d3047cc8770034fa3141613ce528dda6" translate="yes" xml:space="preserve">
          <source>You can reach the nginx server on port 8080 of every swarm node. If you add a node to the swarm, a nginx task is started on it. You cannot start another service or container on any swarm node which binds to port 8080.</source>
          <target state="translated">你可以在每个群节点的8080端口上访问nginx服务器。如果你在群中添加了一个节点,就会在它身上启动一个nginx任务。你不能在任何绑定到8080端口的swarm节点上启动其他服务或容器。</target>
        </trans-unit>
        <trans-unit id="bbd70e3c7b23f931f6c62d58f6398d3790816da1" translate="yes" xml:space="preserve">
          <source>You can register an already existing docker host by passing the daemon url. With that, you can have the same workflow as on a host provisioned by docker-machine.</source>
          <target state="translated">你可以通过传递守护程序的网址来注册一个已经存在的docker主机。这样,你就可以拥有与docker-machine配置的主机相同的工作流程。</target>
        </trans-unit>
        <trans-unit id="19c9a00629f9951f9f0e8c15c0064d25043b9fd1" translate="yes" xml:space="preserve">
          <source>You can remove all trust data from a repository, including repository, target, snapshot and all delegations keys using the Notary CLI.</source>
          <target state="translated">您可以使用公证 CLI 从存储库中删除所有信任数据,包括存储库、目标、快照和所有授权密钥。</target>
        </trans-unit>
        <trans-unit id="7f8aadb92e13f774ea968f12c8408f9bba305429" translate="yes" xml:space="preserve">
          <source>You can remove an image using its short or long ID, its tag, or its digest. If an image has one or more tags referencing it, you must remove all of them before the image is removed. Digest references are removed automatically when an image is removed by tag.</source>
          <target state="translated">您可以使用图像的长短ID、标签或摘要来删除图像。如果一幅图像有一个或多个标签引用,您必须在删除图像之前删除所有标签。通过标签删除图像时,会自动删除摘要引用。</target>
        </trans-unit>
        <trans-unit id="21a68d3c6f8dbcbd6031c0c15f00a9851fa85f95" translate="yes" xml:space="preserve">
          <source>You can remove individual keys and/or paths by passing keys as arguments, and/or paths under the &lt;code&gt;--paths&lt;/code&gt; flag. Use &lt;code&gt;--all-paths&lt;/code&gt; to clear all paths for this role. If you specify all key IDs currently in the delegation role, you delete the role entirely.</source>
          <target state="translated">您可以通过将键作为参数传递和/或在 &lt;code&gt;--paths&lt;/code&gt; 标志下的路径来删除单个键和/或路径。使用 &lt;code&gt;--all-paths&lt;/code&gt; 清除此角色的所有路径。如果您指定了委派角色中当前的所有密钥ID，则将整个角色删除。</target>
        </trans-unit>
        <trans-unit id="c5a016646590241f96f97f9091145c5ba3ba37f7" translate="yes" xml:space="preserve">
          <source>You can reserve a specific amount of memory for a service. If no node in the swarm has the required amount of memory, the service remains in a pending state until a node is available which can run its tasks. If you specify a very large value, such as 500 GB, the task stays pending forever, unless you really have a node which can satisfy it.</source>
          <target state="translated">您可以为服务保留特定数量的内存。如果蜂群中没有任何节点拥有所需的内存量,那么服务就会一直处于待定状态,直到有可以运行其任务的节点。如果您指定了一个非常大的值,例如 500 GB,那么任务将永远处于待定状态,除非您真的有一个节点可以满足它。</target>
        </trans-unit>
        <trans-unit id="e6bb17a14765dffc602e449c4365de8a00ec9be4" translate="yes" xml:space="preserve">
          <source>You can reset a containers entrypoint by passing an empty string, for example:</source>
          <target state="translated">例如,你可以通过传递一个空字符串来重置容器的入口点。</target>
        </trans-unit>
        <trans-unit id="0e6f80e9588a0412025ca8c3939a66c86c1e1b58" translate="yes" xml:space="preserve">
          <source>You can run &lt;code&gt;curl -4 http://localhost:4000&lt;/code&gt; several times in a row, or go to that URL in your browser and hit refresh a few times.</source>
          <target state="translated">您可以连续多次运行 &lt;code&gt;curl -4 http://localhost:4000&lt;/code&gt; ，或者在浏览器中转到该URL，然后单击几次刷新。</target>
        </trans-unit>
        <trans-unit id="a987fe6644c2487eecc072d66c5cd84119780b75" translate="yes" xml:space="preserve">
          <source>You can run &lt;code&gt;docker node inspect &amp;lt;NODE-ID&amp;gt;&lt;/code&gt; on a manager node to view the details for an individual node. The output defaults to JSON format, but you can pass the &lt;code&gt;--pretty&lt;/code&gt; flag to print the results in human-readable format. For example:</source>
          <target state="translated">您可以在管理器节点上运行 &lt;code&gt;docker node inspect &amp;lt;NODE-ID&amp;gt;&lt;/code&gt; 来查看单个节点的详细信息。输出默认为JSON格式，但您可以传递 &lt;code&gt;--pretty&lt;/code&gt; 标志以人类可读的格式打印结果。例如：</target>
        </trans-unit>
        <trans-unit id="328662d283cbddbd1f77e072f4f616c71a9d05ef" translate="yes" xml:space="preserve">
          <source>You can run &lt;code&gt;docker stack rm&lt;/code&gt; to stop the app and take down the stack. This removes any config that was created by &lt;code&gt;docker stack deploy&lt;/code&gt; with the same stack name. This removes &lt;em&gt;all&lt;/em&gt; configs, including those not referenced by services and those remaining after a &lt;code&gt;docker service update --config-rm&lt;/code&gt;.</source>
          <target state="translated">您可以运行 &lt;code&gt;docker stack rm&lt;/code&gt; 停止应用程序并拆除堆栈。这将删除由 &lt;code&gt;docker stack deploy&lt;/code&gt; 创建的具有相同堆栈名称的任何配置。这会删除&lt;em&gt;所有&lt;/em&gt;配置，包括服务未引用的配置以及 &lt;code&gt;docker service update --config-rm&lt;/code&gt; 之后剩余的配置。</target>
        </trans-unit>
        <trans-unit id="5283bcac59779194117811297db151c17f2c8d23" translate="yes" xml:space="preserve">
          <source>You can run &lt;code&gt;ifconfig&lt;/code&gt; on Linux or macOS to see a list of the available network interfaces.</source>
          <target state="translated">您可以在Linux或macOS上运行 &lt;code&gt;ifconfig&lt;/code&gt; 来查看可用网络接口的列表。</target>
        </trans-unit>
        <trans-unit id="11c1104b341f7bbc0fd2ed7494cfdbbc75b3f679" translate="yes" xml:space="preserve">
          <source>You can run Compose on macOS, Windows, and 64-bit Linux.</source>
          <target state="translated">你可以在 macOS、Windows 和 64 位 Linux 上运行 Compose。</target>
        </trans-unit>
        <trans-unit id="e5ba2e618aefdabfec0408bcecfa999900cba2e5" translate="yes" xml:space="preserve">
          <source>You can run a kernel with GRSEC and PAX. This adds many safety checks, both at compile-time and run-time; it also defeats many exploits, thanks to techniques like address randomization. It doesn&amp;rsquo;t require Docker-specific configuration, since those security features apply system-wide, independent of containers.</source>
          <target state="translated">您可以使用GRSEC和PAX运行内核。这在编译时和运行时都增加了许多安全检查；由于地址随机化等技术，它也击败了许多漏洞。它不需要特定于Docker的配置，因为这些安全功能适用于系统范围的容器，而与容器无关。</target>
        </trans-unit>
        <trans-unit id="328e110e3664fc82b61c3c5d6df798907ca4759e" translate="yes" xml:space="preserve">
          <source>You can run docker commands from a local terminal to the active docker machine.</source>
          <target state="translated">你可以从本地终端向活动的docker机器运行docker命令。</target>
        </trans-unit>
        <trans-unit id="303446b4ab0f526af6a38c87e9a504ee76c70129" translate="yes" xml:space="preserve">
          <source>You can run the images with your own configuration files entirely. You just need to mount your configuration directory, and then pass the path to that configuration file as an argument to the &lt;code&gt;docker run&lt;/code&gt; command.</source>
          <target state="translated">您可以完全使用自己的配置文件运行映像。您只需要挂载配置目录，然后将路径传递到该配置文件作为 &lt;code&gt;docker run&lt;/code&gt; 命令的参数即可。</target>
        </trans-unit>
        <trans-unit id="d77082406ceff66bf6c3f820398824ca13529c0f" translate="yes" xml:space="preserve">
          <source>You can scale the app by changing the &lt;code&gt;replicas&lt;/code&gt; value in &lt;code&gt;docker-compose.yml&lt;/code&gt;, saving the change, and re-running the &lt;code&gt;docker stack deploy&lt;/code&gt; command:</source>
          <target state="translated">您可以通过更改 &lt;code&gt;docker-compose.yml&lt;/code&gt; 中的 &lt;code&gt;replicas&lt;/code&gt; 值，保存更改并重新运行docker &lt;code&gt;docker stack deploy&lt;/code&gt; 命令来扩展应用程序：</target>
        </trans-unit>
        <trans-unit id="3a3df3eab4720b1ab21769a0a788267ad0e50b48" translate="yes" xml:space="preserve">
          <source>You can see a pending change by running &lt;code&gt;notary status&lt;/code&gt; for the modified repository. The &lt;code&gt;status&lt;/code&gt; subcommand is an offline operation and as such, does not require the &lt;code&gt;-s&lt;/code&gt; flag, however it silently ignores the flag if provided. Failing to provide the correct value for the &lt;code&gt;-d&lt;/code&gt; flag may show the wrong (probably empty) change list:</source>
          <target state="translated">您可以通过运行已修改存储库的 &lt;code&gt;notary status&lt;/code&gt; 来查看挂起的更改。该 &lt;code&gt;status&lt;/code&gt; 子是一种脱机操作，因此，并不需要 &lt;code&gt;-s&lt;/code&gt; 标志，如果提供然而，它静静地忽略标志。未能为 &lt;code&gt;-d&lt;/code&gt; 标志提供正确的值可能会显示错误的更改列表（可能为空）：</target>
        </trans-unit>
        <trans-unit id="8d3e8374391fc9a0034e67426701fc14f4e5cef0" translate="yes" xml:space="preserve">
          <source>You can see from the output of &lt;code&gt;top&lt;/code&gt; that the specified &lt;code&gt;ENTRYPOINT&lt;/code&gt; is not &lt;code&gt;PID 1&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;top&lt;/code&gt; 的输出中可以看到，指定的 &lt;code&gt;ENTRYPOINT&lt;/code&gt; 不是 &lt;code&gt;PID 1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b1334386ec8559c8d189eff912d1547dc12f72cf" translate="yes" xml:space="preserve">
          <source>You can see that swarm has created 4 new tasks to scale to a total of 5 running instances of Alpine Linux. The tasks are distributed between the three nodes of the swarm. One is running on &lt;code&gt;manager1&lt;/code&gt;.</source>
          <target state="translated">您可以看到swarm创建了4个新任务，可以扩展到总共5个Alpine Linux运行实例。任务分布在群集的三个节点之间。一个正在 &lt;code&gt;manager1&lt;/code&gt; 上运行。</target>
        </trans-unit>
        <trans-unit id="e54c4523df4d6c46ffbc31071cd45ebc29411e65" translate="yes" xml:space="preserve">
          <source>You can see the &lt;code&gt;targets/releases&lt;/code&gt; with its paths and key IDs. If you wish to modify these fields, you can do so with additional &lt;code&gt;notary delegation add&lt;/code&gt; or &lt;code&gt;notary delegation remove&lt;/code&gt; commands on this role.</source>
          <target state="translated">您可以查看 &lt;code&gt;targets/releases&lt;/code&gt; 及其路径和密钥ID。如果要修改这些字段，则可以使用此角色上的其他 &lt;code&gt;notary delegation add&lt;/code&gt; 或 &lt;code&gt;notary delegation remove&lt;/code&gt; 命令来进行修改。</target>
        </trans-unit>
        <trans-unit id="ed7747393f058ad025c5dfc49f9bf9b984c5a165" translate="yes" xml:space="preserve">
          <source>You can see which keys have been pushed to the Notary server for each repository with the &lt;code&gt;$ docker trust inspect&lt;/code&gt; command.</source>
          <target state="translated">您可以使用 &lt;code&gt;$ docker trust inspect&lt;/code&gt; 命令查看每个存储库已推送到公证服务器的密钥。</target>
        </trans-unit>
        <trans-unit id="dd4d93e030e6e7c3ac46f903e577e707ad0b01a8" translate="yes" xml:space="preserve">
          <source>You can select working directory for the command to execute into</source>
          <target state="translated">您可以选择工作目录为命令执行到</target>
        </trans-unit>
        <trans-unit id="c5655211393a566c7f3241e46893081c62f77a67" translate="yes" xml:space="preserve">
          <source>You can send commands to your VMs using &lt;code&gt;docker-machine ssh&lt;/code&gt;. Instruct &lt;code&gt;myvm1&lt;/code&gt; to become a swarm manager with &lt;code&gt;docker swarm init&lt;/code&gt; and look for output like this:</source>
          <target state="translated">您可以使用 &lt;code&gt;docker-machine ssh&lt;/code&gt; 将命令发送到您的VM 。指示 &lt;code&gt;myvm1&lt;/code&gt; 成为具有docker &lt;code&gt;docker swarm init&lt;/code&gt; 的swarm管理器，并查找如下输出：</target>
        </trans-unit>
        <trans-unit id="0e32f16ec972339a1cfa52af2165521773a945bf" translate="yes" xml:space="preserve">
          <source>You can set &lt;a href=&quot;../envvars/index&quot;&gt;environment variables&lt;/a&gt; for various &lt;code&gt;docker-compose&lt;/code&gt; options, including the &lt;code&gt;-f&lt;/code&gt; and &lt;code&gt;-p&lt;/code&gt; flags.</source>
          <target state="translated">您可以为各种 &lt;code&gt;docker-compose&lt;/code&gt; 选项设置&lt;a href=&quot;../envvars/index&quot;&gt;环境变量&lt;/a&gt;，包括 &lt;code&gt;-f&lt;/code&gt; 和 &lt;code&gt;-p&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="4f98630e4c60efb413612a09c335c0161adf8537" translate="yes" xml:space="preserve">
          <source>You can set default values for any environment variables referenced in the Compose file, or used to configure Compose, in an &lt;a href=&quot;../env-file/index&quot;&gt;environment file&lt;/a&gt; named &lt;code&gt;.env&lt;/code&gt;:</source>
          <target state="translated">您可以在名为 &lt;code&gt;.env&lt;/code&gt; 的&lt;a href=&quot;../env-file/index&quot;&gt;环境文件中&lt;/a&gt;为Compose文件中引用的或用于配置Compose的任何环境变量设置默认值：</target>
        </trans-unit>
        <trans-unit id="c4f623772cb08e19671edc07af3fc2ebe0b7a4ee" translate="yes" xml:space="preserve">
          <source>You can set default values for environment variables using a &lt;a href=&quot;../../env-file/index&quot;&gt;&lt;code&gt;.env&lt;/code&gt; file&lt;/a&gt;, which Compose automatically looks for. Values set in the shell environment override those set in the &lt;code&gt;.env&lt;/code&gt; file.</source>
          <target state="translated">您可以使用&lt;a href=&quot;../../env-file/index&quot;&gt; &lt;code&gt;.env&lt;/code&gt; 文件&lt;/a&gt;设置环境变量的默认值，该文件会自动查找。在shell环境中设置的值将覆盖 &lt;code&gt;.env&lt;/code&gt; 文件中设置的值。</target>
        </trans-unit>
        <trans-unit id="20ea6de812aaec42e316e7feac7e30fa27ed3876" translate="yes" xml:space="preserve">
          <source>You can set default values for environment variables using a &lt;a href=&quot;../env-file/index&quot;&gt;&lt;code&gt;.env&lt;/code&gt; file&lt;/a&gt;, which Compose automatically looks for. Values set in the shell environment override those set in the &lt;code&gt;.env&lt;/code&gt; file.</source>
          <target state="translated">您可以使用&lt;a href=&quot;../env-file/index&quot;&gt; &lt;code&gt;.env&lt;/code&gt; 文件&lt;/a&gt;设置环境变量的默认值，该文件会自动查找。在shell环境中设置的值将覆盖 &lt;code&gt;.env&lt;/code&gt; 文件中设置的值。</target>
        </trans-unit>
        <trans-unit id="1859972fb60c2c0baf48b09dc5ecf7d631e9f68d" translate="yes" xml:space="preserve">
          <source>You can set environment variables in a service&amp;rsquo;s containers with the &lt;a href=&quot;../compose-file/index#environment&quot;&gt;&amp;lsquo;environment&amp;rsquo; key&lt;/a&gt;, just like with &lt;code&gt;docker run -e VARIABLE=VALUE ...&lt;/code&gt;:</source>
          <target state="translated">您可以使用&lt;a href=&quot;../compose-file/index#environment&quot;&gt;'environment'键&lt;/a&gt;在服务的容器中设置环境变量，就像 &lt;code&gt;docker run -e VARIABLE=VALUE ...&lt;/code&gt; 一样：</target>
        </trans-unit>
        <trans-unit id="6a30ba42acde13646082943d7312246e45dc251a" translate="yes" xml:space="preserve">
          <source>You can set the ownership (&lt;code&gt;uid&lt;/code&gt; and &lt;code&gt;gid&lt;/code&gt;) for the config, using either the numerical ID or the name of the user or group. You can also specify the file permissions (&lt;code&gt;mode&lt;/code&gt;). These settings are ignored for Windows containers.</source>
          <target state="translated">您可以使用数字ID或用户或组的名称来设置配置的所有权（ &lt;code&gt;uid&lt;/code&gt; 和 &lt;code&gt;gid&lt;/code&gt; ）。您还可以指定文件权限（ &lt;code&gt;mode&lt;/code&gt; ）。Windows容器将忽略这些设置。</target>
        </trans-unit>
        <trans-unit id="7d987625363d28763599a39d8667739669a63c92" translate="yes" xml:space="preserve">
          <source>You can set up the service to divide tasks evenly over different categories of nodes. One example of where this can be useful is to balance tasks over a set of datacenters or availability zones. The example below illustrates this:</source>
          <target state="translated">您可以设置服务,将任务平均分配到不同类别的节点上。其中一个有用的例子是在一组数据中心或可用性区域上平衡任务。下面的例子就说明了这一点。</target>
        </trans-unit>
        <trans-unit id="251f33af01558540aaf7aec9d2c9d53828e0f7f6" translate="yes" xml:space="preserve">
          <source>You can setup kernel memory limit to constrain these kinds of memory. For example, every process consumes some stack pages. By limiting kernel memory, you can prevent new processes from being created when the kernel memory usage is too high.</source>
          <target state="translated">你可以设置内核内存限制来约束这些类型的内存。例如,每个进程都会消耗一些栈页。通过限制内核内存,您可以防止新的进程在内核内存使用率过高时被创建。</target>
        </trans-unit>
        <trans-unit id="a422635c1d6ba19b7a2492c59b437e80063f1579" translate="yes" xml:space="preserve">
          <source>You can source your &lt;code&gt;~/.bash_profile&lt;/code&gt; or launch a new terminal to utilize completion.</source>
          <target state="translated">您可以来源 &lt;code&gt;~/.bash_profile&lt;/code&gt; 或启动新终端以利用完成功能。</target>
        </trans-unit>
        <trans-unit id="1a33ea7627956920ae841253cc243f1fb3e36da7" translate="yes" xml:space="preserve">
          <source>You can specify a &lt;code&gt;URL&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; (dash) to take data directly from &lt;code&gt;STDIN&lt;/code&gt;. The &lt;code&gt;URL&lt;/code&gt; can point to an archive (.tar, .tar.gz, .tgz, .bzip, .tar.xz, or .txz) containing a filesystem or to an individual file on the Docker host. If you specify an archive, Docker untars it in the container relative to the &lt;code&gt;/&lt;/code&gt; (root). If you specify an individual file, you must specify the full path within the host. To import from a remote location, specify a &lt;code&gt;URI&lt;/code&gt; that begins with the &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt; protocol.</source>
          <target state="translated">您可以指定 &lt;code&gt;URL&lt;/code&gt; 或 &lt;code&gt;-&lt;/code&gt; （破折号）以直接从 &lt;code&gt;STDIN&lt;/code&gt; 获取数据。该 &lt;code&gt;URL&lt;/code&gt; 可以指向包含文件系统的归档文件（.tar，.tar.gz，.tgz，.bzip，.tar.xz或.txz）或Docker主机上的单个文件。如果您指定档案，Docker会将其解压缩到相对于 &lt;code&gt;/&lt;/code&gt; （根）的容器中。如果指定单个文件，则必须指定主机内的完整路径。要从远程位置导入，请指定以 &lt;code&gt;http://&lt;/code&gt; 或 &lt;code&gt;https://&lt;/code&gt; 协议开头的 &lt;code&gt;URI&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8a985d72b5b501738ffd28a60108e2ec10ddb5f" translate="yes" xml:space="preserve">
          <source>You can specify a custom signal either by &lt;em&gt;name&lt;/em&gt;, or &lt;em&gt;number&lt;/em&gt;. The &lt;code&gt;SIG&lt;/code&gt; prefix is optional, so the following examples are equivalent:</source>
          <target state="translated">您可以按&lt;em&gt;名称&lt;/em&gt;或&lt;em&gt;数字&lt;/em&gt;指定自定义信号。该 &lt;code&gt;SIG&lt;/code&gt; 前缀是可选的，所以下面的例子是等价的：</target>
        </trans-unit>
        <trans-unit id="d494d1bea151f81da76c32ed28441678109c9d47" translate="yes" xml:space="preserve">
          <source>You can specify a plain string for the &lt;code&gt;ENTRYPOINT&lt;/code&gt; and it will execute in &lt;code&gt;/bin/sh -c&lt;/code&gt;. This form will use shell processing to substitute shell environment variables, and will ignore any &lt;code&gt;CMD&lt;/code&gt; or &lt;code&gt;docker run&lt;/code&gt; command line arguments. To ensure that &lt;code&gt;docker stop&lt;/code&gt; will signal any long running &lt;code&gt;ENTRYPOINT&lt;/code&gt; executable correctly, you need to remember to start it with &lt;code&gt;exec&lt;/code&gt;:</source>
          <target state="translated">您可以为 &lt;code&gt;ENTRYPOINT&lt;/code&gt; 指定一个纯字符串，它将在 &lt;code&gt;/bin/sh -c&lt;/code&gt; 中执行。此表单将使用Shell处理来替换Shell环境变量，并将忽略任何 &lt;code&gt;CMD&lt;/code&gt; 或 &lt;code&gt;docker run&lt;/code&gt; 命令行参数。为了确保 &lt;code&gt;ENTRYPOINT&lt;/code&gt; &lt;code&gt;docker stop&lt;/code&gt; 可以正确发出任何长期运行的ENTRYPOINT可执行文件信号，您需要记住使用 &lt;code&gt;exec&lt;/code&gt; 启动它：</target>
        </trans-unit>
        <trans-unit id="399e5a9f8c49dd7715280366fd693b6ae6d92e22" translate="yes" xml:space="preserve">
          <source>You can specify a repository and tag at which to save the new image if the build succeeds:</source>
          <target state="translated">您可以指定一个存储库和标签,以便在构建成功后保存新映像。</target>
        </trans-unit>
        <trans-unit id="8cd377d81b4ee6b93d979e7f8fe73d77ba2213a9" translate="yes" xml:space="preserve">
          <source>You can specify multiple placement preferences, and they are processed in the order they are encountered. The following example sets up a service with multiple placement preferences. Tasks are spread first over the various datacenters, and then over racks (as indicated by the respective labels):</source>
          <target state="translated">您可以指定多个放置首选项,并按照遇到的顺序进行处理。以下示例设置了一个具有多个放置偏好的服务。任务首先分布在各个数据中心,然后分布在机架上(如各自的标签所示)。</target>
        </trans-unit>
        <trans-unit id="32033cfbd2ccff707470fee24e57c5b8376f5087" translate="yes" xml:space="preserve">
          <source>You can specify options like &lt;code&gt;-a=[]&lt;/code&gt; multiple times in a single command line, for example in these commands:</source>
          <target state="translated">您可以在单个命令行中多次指定 &lt;code&gt;-a=[]&lt;/code&gt; 之类的选项，例如在以下命令中：</target>
        </trans-unit>
        <trans-unit id="729a2c9f8adb8b26d1f5b980c2de123f2795288a" translate="yes" xml:space="preserve">
          <source>You can specify the IP address you want to be assigned to the container&amp;rsquo;s interface.</source>
          <target state="translated">您可以指定要分配给容器接口的IP地址。</target>
        </trans-unit>
        <trans-unit id="15f125d4403958fe272b0811b709fa635d3ac94f" translate="yes" xml:space="preserve">
          <source>You can specify the isolation mode when creating or updating a new service using the &lt;code&gt;--isolation&lt;/code&gt; flag.</source>
          <target state="translated">您可以使用 &lt;code&gt;--isolation&lt;/code&gt; 标志在创建或更新新服务时指定隔离模式。</target>
        </trans-unit>
        <trans-unit id="9f53540451c9d5bf81993aec87930b8dd485ffd4" translate="yes" xml:space="preserve">
          <source>You can specify the maximum amount of times Docker will try to restart the container when using the &lt;strong&gt;on-failure&lt;/strong&gt; policy. The default is that Docker will try forever to restart the container. The number of (attempted) restarts for a container can be obtained via &lt;a href=&quot;../commandline/inspect/index&quot;&gt;&lt;code&gt;docker inspect&lt;/code&gt;&lt;/a&gt;. For example, to get the number of restarts for container &amp;ldquo;my-container&amp;rdquo;;</source>
          <target state="translated">您可以指定使用&lt;strong&gt;失败&lt;/strong&gt;策略时Docker尝试重新启动容器的最大次数。默认是Docker将永远尝试重新启动容器。可以通过&lt;a href=&quot;../commandline/inspect/index&quot;&gt; &lt;code&gt;docker inspect&lt;/code&gt; &lt;/a&gt;获得容器的（尝试的）重启次数。例如，获取容器&amp;ldquo; my-container&amp;rdquo;的重新启动次数；</target>
        </trans-unit>
        <trans-unit id="c740fa945150f7498d881c6982f5aeeac897ea72" translate="yes" xml:space="preserve">
          <source>You can specify whether the service needs to run a specific number of replicas or should run globally on every worker node. See &lt;a href=&quot;#replicated-or-global-services&quot;&gt;Replicated or global services&lt;/a&gt;.</source>
          <target state="translated">您可以指定服务是需要运行特定数量的副本还是应该在每个工作节点上全局运行。请参阅&lt;a href=&quot;#replicated-or-global-services&quot;&gt;复制服务或全局服务&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ab45f0d60b94c0bbcc9c165fbe3559341becae1f" translate="yes" xml:space="preserve">
          <source>You can start &lt;code&gt;dockerd&lt;/code&gt; with the &lt;code&gt;--userns-remap&lt;/code&gt; flag or follow this procedure to configure the daemon using the &lt;code&gt;daemon.json&lt;/code&gt; configuration file. The &lt;code&gt;daemon.json&lt;/code&gt; method is recommended. If you use the flag, use the following command as a model:</source>
          <target state="translated">您可以使用 &lt;code&gt;--userns-remap&lt;/code&gt; 标志启动 &lt;code&gt;dockerd&lt;/code&gt; ，或按照以下过程使用 &lt;code&gt;daemon.json&lt;/code&gt; 配置文件来配置守护程序。建议使用 &lt;code&gt;daemon.json&lt;/code&gt; 方法。如果使用标志，请使用以下命令作为模型：</target>
        </trans-unit>
        <trans-unit id="84dd2459f290c6f64e99ec8900761eb1f509003f" translate="yes" xml:space="preserve">
          <source>You can supply multiple &lt;code&gt;-f&lt;/code&gt; configuration files. When you supply multiple files, Compose combines them into a single configuration. Compose builds the configuration in the order you supply the files. Subsequent files override and add to their predecessors.</source>
          <target state="translated">您可以提供多个 &lt;code&gt;-f&lt;/code&gt; 配置文件。提供多个文件时，Compose会将它们组合为一个配置。Compose按照您提供文件的顺序构建配置。后续文件将覆盖并添加到其前身。</target>
        </trans-unit>
        <trans-unit id="822ff10e2d5010ca6995def571295bbdd4e90391" translate="yes" xml:space="preserve">
          <source>You can tear down the stack with &lt;code&gt;docker stack rm&lt;/code&gt;. For example:</source>
          <target state="translated">您可以使用 &lt;code&gt;docker stack rm&lt;/code&gt; 拆除堆栈。例如：</target>
        </trans-unit>
        <trans-unit id="f8d67825a40d1267850fe38e51dd1f17c8d9b561" translate="yes" xml:space="preserve">
          <source>You can then run it (giving it a name for the next step):</source>
          <target state="translated">然后你就可以运行它(给它起个名字,以便下一步操作)。</target>
        </trans-unit>
        <trans-unit id="25ddc28205c2dcd879efc3875c81ba261bcfdf2e" translate="yes" xml:space="preserve">
          <source>You can unset the &lt;code&gt;docker-machine&lt;/code&gt; environment variables in your current shell with the given command.</source>
          <target state="translated">您可以使用给定命令在当前shell中取消设置 &lt;code&gt;docker-machine&lt;/code&gt; 环境变量。</target>
        </trans-unit>
        <trans-unit id="997588aa0befbb8934f3c6821ab50095cc0c2823" translate="yes" xml:space="preserve">
          <source>You can update a container&amp;rsquo;s kernel memory limit using the &lt;code&gt;--kernel-memory&lt;/code&gt; option. On kernel version older than 4.6, this option can be updated on a running container only if the container was started with &lt;code&gt;--kernel-memory&lt;/code&gt;. If the container was started &lt;em&gt;without&lt;/em&gt;&lt;code&gt;--kernel-memory&lt;/code&gt; you need to stop the container before updating kernel memory.</source>
          <target state="translated">您可以使用 &lt;code&gt;--kernel-memory&lt;/code&gt; 选项更新容器的内核内存限制。在低于4.6的内核版本上，只有在容器以 &lt;code&gt;--kernel-memory&lt;/code&gt; 启动时，才能在运行的容器上更新此选项。如果容器启动时&lt;em&gt;没有&lt;/em&gt; &lt;code&gt;--kernel-memory&lt;/code&gt; ，则需要先停止容器，然后再更新内核内存。</target>
        </trans-unit>
        <trans-unit id="1474ef3733d109ea25fc5d59b7092063cef92e31" translate="yes" xml:space="preserve">
          <source>You can update a service to grant it access to additional configs or revoke its access to a given config at any time.</source>
          <target state="translated">您可以随时更新服务以授予其对其他配置的访问权或撤销其对给定配置的访问权。</target>
        </trans-unit>
        <trans-unit id="30d9624b0d2af1224fe1b4d609ab2d663a625c57" translate="yes" xml:space="preserve">
          <source>You can update a service to grant it access to additional secrets or revoke its access to a given secret at any time.</source>
          <target state="translated">您可以在任何时候更新服务以授予其对额外秘密的访问权或撤销其对特定秘密的访问权。</target>
        </trans-unit>
        <trans-unit id="2f23798de9a6488f53d34aed52097662191f6d89" translate="yes" xml:space="preserve">
          <source>You can update almost every configuration detail about an existing service, including the image name and tag it runs. See &lt;a href=&quot;#update-a-services-image-after-creation&quot;&gt;Update a service&amp;rsquo;s image after creation&lt;/a&gt;.</source>
          <target state="translated">您可以更新有关现有服务的几乎所有配置详细信息，包括映像名称和运行的标记。请参阅&lt;a href=&quot;#update-a-services-image-after-creation&quot;&gt;创建后更新服务的映像&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a256da54a120fa7976809d7d090d7ee3c65f9e55" translate="yes" xml:space="preserve">
          <source>You can update kernel memory while the container is running:</source>
          <target state="translated">你可以在容器运行时更新内核内存。</target>
        </trans-unit>
        <trans-unit id="6cb634be6c1bbf47c1ede18be2b83a19d0c4f55e" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;--link&lt;/code&gt; option to link another container with a preferred alias</source>
          <target state="translated">您可以使用 &lt;code&gt;--link&lt;/code&gt; 选项链接具有首选别名的另一个容器</target>
        </trans-unit>
        <trans-unit id="5650d0d6a9883e49de40024a6eca7dfeec9aaa84" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;-f&lt;/code&gt; flag to specify a path to Compose file that is not located in the current directory, either from the command line or by setting up a &lt;a href=&quot;../envvars/index#compose_file&quot;&gt;COMPOSE_FILE environment variable&lt;/a&gt; in your shell or in an environment file.</source>
          <target state="translated">您可以使用 &lt;code&gt;-f&lt;/code&gt; 标志通过命令行或通过在Shell或环境文件中设置&lt;a href=&quot;../envvars/index#compose_file&quot;&gt;COMPOSE_FILE环境变量&lt;/a&gt;来指定不在当前目录中的Compose文件的路径。</target>
        </trans-unit>
        <trans-unit id="82d59b51cf1d26fea9d281b8ec7f73ace209f2a7" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ENV&lt;/code&gt; instructions in a Dockerfile to define variable values. These values persist in the built image. However, often persistence is not what you want. Users want to specify variables differently depending on which host they build an image on.</source>
          <target state="translated">您可以在Dockerfile中使用 &lt;code&gt;ENV&lt;/code&gt; 指令来定义变量值。这些值将保留在生成的映像中。但是，持久性通常不是您想要的。用户希望根据构建映像的主机来不同地指定变量。</target>
        </trans-unit>
        <trans-unit id="aa73d413d4a3ae3424500ebe0b447a9822c98ef2" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;dmesg&lt;/code&gt; to debug problems and &lt;code&gt;aa-status&lt;/code&gt; check the loaded profiles.</source>
          <target state="translated">您可以使用 &lt;code&gt;dmesg&lt;/code&gt; 调试问题，并使用 &lt;code&gt;aa-status&lt;/code&gt; 检查已加载的配置文件。</target>
        </trans-unit>
        <trans-unit id="79611691f3a006f710a6d25f25f78f4ddc449811" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;docker service inspect&lt;/code&gt; to view the service&amp;rsquo;s published port. For instance:</source>
          <target state="translated">您可以使用 &lt;code&gt;docker service inspect&lt;/code&gt; 查看服务的发布端口。例如：</target>
        </trans-unit>
        <trans-unit id="dc78f0213c3e7c133c079da6e77f5d9b66128dae" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;extends&lt;/code&gt; on any service together with other configuration keys. The &lt;code&gt;extends&lt;/code&gt; value must be a dictionary defined with a required &lt;code&gt;service&lt;/code&gt; and an optional &lt;code&gt;file&lt;/code&gt; key.</source>
          <target state="translated">您可以在任何服务上使用 &lt;code&gt;extends&lt;/code&gt; 以及其他配置键。的 &lt;code&gt;extends&lt;/code&gt; 值必须与所要求的所定义的字典 &lt;code&gt;service&lt;/code&gt; 和一个可选的 &lt;code&gt;file&lt;/code&gt; 密钥。</target>
        </trans-unit>
        <trans-unit id="abccea24ec771ae836fbff0c4191d344e49233ee" translate="yes" xml:space="preserve">
          <source>You can use Compose to deploy an app to a remote Docker host by setting the &lt;code&gt;DOCKER_HOST&lt;/code&gt;, &lt;code&gt;DOCKER_TLS_VERIFY&lt;/code&gt;, and &lt;code&gt;DOCKER_CERT_PATH&lt;/code&gt; environment variables appropriately. For tasks like this, &lt;a href=&quot;../../machine/overview/index&quot;&gt;Docker Machine&lt;/a&gt; makes managing local and remote Docker hosts very easy, and is recommended even if you&amp;rsquo;re not deploying remotely.</source>
          <target state="translated">您可以通过适当设置 &lt;code&gt;DOCKER_HOST&lt;/code&gt; ， &lt;code&gt;DOCKER_TLS_VERIFY&lt;/code&gt; 和 &lt;code&gt;DOCKER_CERT_PATH&lt;/code&gt; 环境变量，使用Compose将应用程序部署到远程Docker主机。对于这样的任务，&lt;a href=&quot;../../machine/overview/index&quot;&gt;Docker Machine&lt;/a&gt;使管理本地和远程Docker主机变得非常容易，即使不进行远程部署，也建议使用Docker Machine。</target>
        </trans-unit>
        <trans-unit id="f558676592f2dc8c6387945047f3f45180baeb33" translate="yes" xml:space="preserve">
          <source>You can use Docker Compose binary, &lt;code&gt;docker-compose [-f &amp;lt;arg&amp;gt;...] [options] [COMMAND] [ARGS...]&lt;/code&gt;, to build and manage multiple services in Docker containers.</source>
          <target state="translated">您可以使用Docker Compose二进制文件 &lt;code&gt;docker-compose [-f &amp;lt;arg&amp;gt;...] [options] [COMMAND] [ARGS...]&lt;/code&gt; 在Docker容器中构建和管理多个服务。</target>
        </trans-unit>
        <trans-unit id="766998d24b60badb8a9e5815e15cb91a7ff484d6" translate="yes" xml:space="preserve">
          <source>You can use Docker Compose to easily run WordPress in an isolated environment built with Docker containers. This quick-start guide demonstrates how to use Compose to set up and run WordPress. Before starting, make sure you have &lt;a href=&quot;../install/index&quot;&gt;Compose installed&lt;/a&gt;.</source>
          <target state="translated">您可以使用Docker Compose在由Docker容器构建的隔离环境中轻松运行WordPress。本快速入门指南演示了如何使用Compose设置和运行WordPress。在开始之前，请确保已&lt;a href=&quot;../install/index&quot;&gt;安装Compose&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fab56e1b4d8b4c322f669328e28a11fe627f0caa" translate="yes" xml:space="preserve">
          <source>You can use Docker Desktop for Mac or Windows to test &lt;em&gt;single-node&lt;/em&gt; features of swarm mode, including initializing a swarm with a single node, creating services, and scaling services. Docker &amp;ldquo;Moby&amp;rdquo; on Hyperkit (Mac) or Hyper-V (Windows) serve as the single swarm node.</source>
          <target state="translated">您可以使用适用于Mac或Windows的Docker桌面来测试swarm模式的&lt;em&gt;单节点&lt;/em&gt;功能，包括使用单个节点初始化swarm，创建服务以及扩展服务。Hyperkit（Mac）或Hyper-V（Windows）上的Docker&amp;ldquo; Moby&amp;rdquo;充当单个群集节点。</target>
        </trans-unit>
        <trans-unit id="5a4619908032ef981a04ef8d4e725bca940b0347" translate="yes" xml:space="preserve">
          <source>You can use Docker Machine to create local virtual hosts on which to deploy and test &lt;a href=&quot;../../engine/swarm/index&quot;&gt;swarm mode&lt;/a&gt; clusters.</source>
          <target state="translated">您可以使用Docker Machine创建本地虚拟主机，在其上部署和测试集群&lt;a href=&quot;../../engine/swarm/index&quot;&gt;模式&lt;/a&gt;集群。</target>
        </trans-unit>
        <trans-unit id="71366bee5fcfed9002e65ebb700da6802202ecd1" translate="yes" xml:space="preserve">
          <source>You can use Docker Machine to:</source>
          <target state="translated">你可以使用Docker Machine来。</target>
        </trans-unit>
        <trans-unit id="062567bcd22480170898bccdfa2d04e8dda05523" translate="yes" xml:space="preserve">
          <source>You can use a &lt;code&gt;$$&lt;/code&gt; (double-dollar sign) when your configuration needs a literal dollar sign. This also prevents Compose from interpolating a value, so a &lt;code&gt;$$&lt;/code&gt; allows you to refer to environment variables that you don&amp;rsquo;t want processed by Compose.</source>
          <target state="translated">当您的配置需要文字美元符号时，可以使用 &lt;code&gt;$$&lt;/code&gt; （美元符号）。这也可以防止Compose插值，因此 &lt;code&gt;$$&lt;/code&gt; 可以让您引用您不想由Compose处理的环境变量。</target>
        </trans-unit>
        <trans-unit id="ac5a1d746c16e93c1594ee8d1811a38db57ef850" translate="yes" xml:space="preserve">
          <source>You can use a filter to locate containers that exited with status of &lt;code&gt;137&lt;/code&gt; meaning a &lt;code&gt;SIGKILL(9)&lt;/code&gt; killed them.</source>
          <target state="translated">您可以使用过滤器来找到状态为 &lt;code&gt;137&lt;/code&gt; 的退出容器，这意味着 &lt;code&gt;SIGKILL(9)&lt;/code&gt; 杀死了它们。</target>
        </trans-unit>
        <trans-unit id="69c135e325d318875f33b292b94b618041c68d42" translate="yes" xml:space="preserve">
          <source>You can use an &lt;code&gt;ARG&lt;/code&gt; or an &lt;code&gt;ENV&lt;/code&gt; instruction to specify variables that are available to the &lt;code&gt;RUN&lt;/code&gt; instruction. Environment variables defined using the &lt;code&gt;ENV&lt;/code&gt; instruction always override an &lt;code&gt;ARG&lt;/code&gt; instruction of the same name. Consider this Dockerfile with an &lt;code&gt;ENV&lt;/code&gt; and &lt;code&gt;ARG&lt;/code&gt; instruction.</source>
          <target state="translated">您可以使用 &lt;code&gt;ARG&lt;/code&gt; 或 &lt;code&gt;ENV&lt;/code&gt; 指令来指定 &lt;code&gt;RUN&lt;/code&gt; 指令可用的变量。使用 &lt;code&gt;ENV&lt;/code&gt; 指令定义的环境变量始终会覆盖同名的 &lt;code&gt;ARG&lt;/code&gt; 指令。考虑使用带有 &lt;code&gt;ENV&lt;/code&gt; 和 &lt;code&gt;ARG&lt;/code&gt; 指令的Dockerfile 。</target>
        </trans-unit>
        <trans-unit id="fa5480a45a21a3eb2dcb767ea3efcc1e47656a79" translate="yes" xml:space="preserve">
          <source>You can use certificate-based client-server authentication to verify a Docker daemon has the rights to access images on a registry. For more information, see &lt;a href=&quot;certificates/index&quot;&gt;Using certificates for repository client verification&lt;/a&gt;.</source>
          <target state="translated">您可以使用基于证书的客户端-服务器身份验证来验证Docker守护程序是否有权访问注册表上的映像。有关更多信息，请参阅&lt;a href=&quot;certificates/index&quot;&gt;使用证书进行存储库客户端验证&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9b7b4dd3c3b611928948589c0fb1c0578c932d40" translate="yes" xml:space="preserve">
          <source>You can use environment variables in configuration values with a Bash-like &lt;code&gt;${VARIABLE}&lt;/code&gt; syntax - see &lt;a href=&quot;#variable-substitution&quot;&gt;variable substitution&lt;/a&gt; for full details.</source>
          <target state="translated">您可以使用类似Bash的 &lt;code&gt;${VARIABLE}&lt;/code&gt; 语法在配置值中使用环境变量- 有关完整详细信息，请参见&lt;a href=&quot;#variable-substitution&quot;&gt;变量替换&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7b92c2326b15e16e0193abc4434407cf276fabd0" translate="yes" xml:space="preserve">
          <source>You can use environment variables:</source>
          <target state="translated">你可以使用环境变量。</target>
        </trans-unit>
        <trans-unit id="84f06a2245c39597e3a46d7dd33a6d4b79af2c10" translate="yes" xml:space="preserve">
          <source>You can use gzip to save the image file and make the backup smaller.</source>
          <target state="translated">您可以使用gzip来保存镜像文件,并使备份更小。</target>
        </trans-unit>
        <trans-unit id="ed533cd395179758bf2c31da9976aca9c64d7c5b" translate="yes" xml:space="preserve">
          <source>You can use multiple &lt;code&gt;-H&lt;/code&gt;, for example, if you want to listen on both TCP and a Unix socket</source>
          <target state="translated">例如，如果要同时监听TCP和Unix套接字，则可以使用多个 &lt;code&gt;-H&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f58e5f160c67043ac732ead129ce87cfa918513" translate="yes" xml:space="preserve">
          <source>You can use overlay networks to connect one or more services within the swarm.</source>
          <target state="translated">您可以使用覆盖网络来连接蜂群中的一个或多个服务。</target>
        </trans-unit>
        <trans-unit id="9c01585b0ad769ab6f0e715551d01f4f4d01ca7c" translate="yes" xml:space="preserve">
          <source>You can use secrets to manage any sensitive data which a container needs at runtime but you don&amp;rsquo;t want to store in the image or in source control, such as:</source>
          <target state="translated">您可以使用机密信息来管理容器在运行时需要的任何敏感数据，但又不想存储在映像或源代码管理中，例如：</target>
        </trans-unit>
        <trans-unit id="91573a09cf38ddd463fd65e9ac0341ef79017236" translate="yes" xml:space="preserve">
          <source>You can use templates for some flags of &lt;code&gt;service create&lt;/code&gt;, using the syntax provided by the Go&amp;rsquo;s &lt;a href=&quot;http://golang.org/pkg/text/template/&quot;&gt;text/template&lt;/a&gt; package.</source>
          <target state="translated">您可以使用Go的&lt;a href=&quot;http://golang.org/pkg/text/template/&quot;&gt;text / template&lt;/a&gt;包提供的语法将模板用于 &lt;code&gt;service create&lt;/code&gt; 标记。</target>
        </trans-unit>
        <trans-unit id="df630e9beacdb60e2cc2387290e980d386aca9a6" translate="yes" xml:space="preserve">
          <source>You can use the --format option to obtain specific information about a secret. The following example command outputs the creation time of the secret.</source>
          <target state="translated">您可以使用 --format 选项来获取有关秘密的特定信息。下面的示例命令输出了秘密的创建时间。</target>
        </trans-unit>
        <trans-unit id="c0e0ed9afed3c72860d0fcf45edbb396a024f7dd" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;--force&lt;/code&gt; option on a manager to remove it from the swarm. However, this does not reconfigure the swarm to ensure that there are enough managers to maintain a quorum in the swarm. The safe way to remove a manager from a swarm is to demote it to a worker and then direct it to leave the quorum without using &lt;code&gt;--force&lt;/code&gt;. Only use &lt;code&gt;--force&lt;/code&gt; in situations where the swarm will no longer be used after the manager leaves, such as in a single-node swarm.</source>
          <target state="translated">您可以在管理器上使用 &lt;code&gt;--force&lt;/code&gt; 选项将其从群集中删除。但是，这不会重新配置群集以确保有足够的管理器来维持群集中的仲裁。从群中删除经理的安全方法是将其降级为工作人员，然后将其指示离开仲裁而不使用 &lt;code&gt;--force&lt;/code&gt; 。仅在管理器离开后不再使用 &lt;code&gt;--force&lt;/code&gt; 的情况下使用--force，例如在单节点集群中。</target>
        </trans-unit>
        <trans-unit id="dcd14479571306327ad188e54315578a193251b9" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;--init&lt;/code&gt; flag to indicate that an init process should be used as the PID 1 in the container. Specifying an init process ensures the usual responsibilities of an init system, such as reaping zombie processes, are performed inside the created container.</source>
          <target state="translated">您可以使用 &lt;code&gt;--init&lt;/code&gt; 标志来指示应将初始化进程用作容器中的PID 1。指定初始化过程可确保在创建的容器内执行初始化系统的通常职责，例如获取僵尸进程。</target>
        </trans-unit>
        <trans-unit id="ca1108baabb0cf35f562f551c938ab545c2f7972" translate="yes" xml:space="preserve">
          <source>You can use the &lt;em&gt;exec&lt;/em&gt; form of &lt;code&gt;ENTRYPOINT&lt;/code&gt; to set fairly stable default commands and arguments and then use either form of &lt;code&gt;CMD&lt;/code&gt; to set additional defaults that are more likely to be changed.</source>
          <target state="translated">您可以使用 &lt;code&gt;ENTRYPOINT&lt;/code&gt; 的&lt;em&gt;exec&lt;/em&gt;形式来设置相当稳定的默认命令和参数，然后使用两种形式的 &lt;code&gt;CMD&lt;/code&gt; 来设置更可能被更改的其他默认值。</target>
        </trans-unit>
        <trans-unit id="3fc5235eeb0d6f02820e5aa6f4dd6345d9dd43c1" translate="yes" xml:space="preserve">
          <source>You can use the defined volumes to inspect the PostgreSQL log files and to backup your configuration and data:</source>
          <target state="translated">你可以使用定义的卷来检查PostgreSQL日志文件,并备份你的配置和数据。</target>
        </trans-unit>
        <trans-unit id="423aaaa082fecd4efefd8026a24f16fb2332fef8" translate="yes" xml:space="preserve">
          <source>You can use the full or shortened container ID or the container name set using &lt;code&gt;docker run --name&lt;/code&gt; option.</source>
          <target state="translated">您可以使用完整或缩短的容器ID或使用 &lt;code&gt;docker run --name&lt;/code&gt; 选项设置的容器名称。</target>
        </trans-unit>
        <trans-unit id="757a036e5adc99d74c7204684446bfcfada2f841" translate="yes" xml:space="preserve">
          <source>You can use the swarm command line, as you&amp;rsquo;ve done already, to browse and manage the swarm. Here are some examples that should look familiar by now:</source>
          <target state="translated">您已经可以使用swarm命令行浏览和管理swarm。以下是一些现在应该看起来很熟悉的示例：</target>
        </trans-unit>
        <trans-unit id="f81c51d0b455ef88f4bebe69602018178e69b5ce" translate="yes" xml:space="preserve">
          <source>You can use this as a wrapper script as in the previous example, by setting:</source>
          <target state="translated">你可以像前面的例子一样,通过设置,把它作为一个包装脚本来使用。</target>
        </trans-unit>
        <trans-unit id="3b78ee2097973189a617a7f46999a6a0cd76cd8c" translate="yes" xml:space="preserve">
          <source>You can use this in conjunction with &lt;code&gt;docker rmi ...&lt;/code&gt;:</source>
          <target state="translated">您可以将其与 &lt;code&gt;docker rmi ...&lt;/code&gt; 结合使用：</target>
        </trans-unit>
        <trans-unit id="1c5191537baae10ee053c6520b800e4fca676558" translate="yes" xml:space="preserve">
          <source>You can verify that the services were correctly created</source>
          <target state="translated">您可以验证服务是否被正确创建</target>
        </trans-unit>
        <trans-unit id="2b8eea59b664abefb1e902bc9a198ef36d5e1fcf" translate="yes" xml:space="preserve">
          <source>You can verify that the services were correctly created:</source>
          <target state="translated">您可以验证服务是否被正确创建。</target>
        </trans-unit>
        <trans-unit id="b19cd993adea5d9fea2a96f29e4b1e96d66bf42f" translate="yes" xml:space="preserve">
          <source>You configure the rolling update policy at service deployment time.</source>
          <target state="translated">您可以在服务部署时配置滚动更新策略。</target>
        </trans-unit>
        <trans-unit id="935d2214454b350e907894ae9b58510024a889dc" translate="yes" xml:space="preserve">
          <source>You control the type of service using the &lt;code&gt;--mode&lt;/code&gt; flag. If you don&amp;rsquo;t specify a mode, the service defaults to &lt;code&gt;replicated&lt;/code&gt;. For replicated services, you specify the number of replica tasks you want to start using the &lt;code&gt;--replicas&lt;/code&gt; flag. For example, to start a replicated nginx service with 3 replica tasks:</source>
          <target state="translated">您可以使用 &lt;code&gt;--mode&lt;/code&gt; 标志来控制服务的类型。如果您未指定模式，则该服务默认为 &lt;code&gt;replicated&lt;/code&gt; 。对于复制的服务，可以使用 &lt;code&gt;--replicas&lt;/code&gt; 标志指定要开始的复制任务数。例如，要使用3个副本任务启动复制的nginx服务：</target>
        </trans-unit>
        <trans-unit id="0be1d0e97d293a13784bea82bdf15a18d5633422" translate="yes" xml:space="preserve">
          <source>You could also use the Notary CLI to list delegations and keys. Here you can clearly see the keys were attached to &lt;code&gt;targets/releases&lt;/code&gt; and &lt;code&gt;targets/jeff&lt;/code&gt;.</source>
          <target state="translated">您还可以使用Notary CLI列出委托和密钥。在这里，您可以清楚地看到 &lt;code&gt;targets/releases&lt;/code&gt; 和 &lt;code&gt;targets/jeff&lt;/code&gt; 附带的键。</target>
        </trans-unit>
        <trans-unit id="fd932bbf92c031dfe1f418776d2911cc3e1b66d8" translate="yes" xml:space="preserve">
          <source>You could change the config to look like:</source>
          <target state="translated">你可以把配置改成这样。</target>
        </trans-unit>
        <trans-unit id="eb112979f42998323e7e42e363ea06ccb13a8215" translate="yes" xml:space="preserve">
          <source>You get the long container ID for your app and then are kicked back to your terminal. Your container is running in the background. You can also see the abbreviated container ID with &lt;code&gt;docker container ls&lt;/code&gt; (and both work interchangeably when running commands):</source>
          <target state="translated">您将获得应用程序的长容器ID，然后将其踢回终端。您的容器在后台运行。您还可以看到带有 &lt;code&gt;docker container ls&lt;/code&gt; 的缩写容器ID （并且在运行命令时两者可以互换使用）：</target>
        </trans-unit>
        <trans-unit id="37f53fbf7d98997bb2d21e1ba889a2279662c63c" translate="yes" xml:space="preserve">
          <source>You have access to the build key</source>
          <target state="translated">您可以访问构建密钥</target>
        </trans-unit>
        <trans-unit id="ea4793735339f658144c8c39642430705274e138" translate="yes" xml:space="preserve">
          <source>You have now configured a Nginx service with its configuration decoupled from its image. You could run multiple sites with exactly the same image but separate configurations, without the need to build a custom image at all.</source>
          <target state="translated">现在你已经配置了一个Nginx服务,它的配置与它的镜像解耦。你可以用完全相同的镜像运行多个站点,但配置是分开的,根本不需要建立一个自定义镜像。</target>
        </trans-unit>
        <trans-unit id="d4902cab2dedeffaefcdc4406137d6efe52df5bc" translate="yes" xml:space="preserve">
          <source>You have now updated your &lt;code&gt;nginx&lt;/code&gt; service&amp;rsquo;s configuration without the need to rebuild its image.</source>
          <target state="translated">现在，您已经更新了 &lt;code&gt;nginx&lt;/code&gt; 服务的配置，而无需重建其映像。</target>
        </trans-unit>
        <trans-unit id="6fc2b74e116dc0096d79e91447e3d2308c92c5cb" translate="yes" xml:space="preserve">
          <source>You learned that stacks are inter-related services all running in concert, and that -- surprise! -- you&amp;rsquo;ve been using stacks since part three of this tutorial. You learned that to add more services to your stack, you insert them in your Compose file. Finally, you learned that by using a combination of placement constraints and volumes you can create a permanent home for persisting data, so that your app&amp;rsquo;s data survives when the container is torn down and redeployed.</source>
          <target state="translated">您了解到堆栈是相互关联的服务，它们都协同运行，这真令人惊讶！-从本教程的第三部分开始，您就一直在使用堆栈。您了解到要将更多服务添加到堆栈中，可以将它们插入Compose文件中。最终，您了解到，通过结合使用位置约束和卷，可以创建永久性存储位置来存放数据，以便在拆除和重新部署容器后，应用程序的数据得以保留。</target>
        </trans-unit>
        <trans-unit id="79688c4f363bcd45ce95cd4fdf744d8dc86d9510" translate="yes" xml:space="preserve">
          <source>You manage swarm membership with the &lt;code&gt;docker swarm&lt;/code&gt; and &lt;code&gt;docker node&lt;/code&gt; subsystems. Refer to &lt;a href=&quot;../join-nodes/index&quot;&gt;Add nodes to a swarm&lt;/a&gt; for more information on how to add worker nodes and promote a worker node to be a manager.</source>
          <target state="translated">您可以使用 &lt;code&gt;docker swarm&lt;/code&gt; 和 &lt;code&gt;docker node&lt;/code&gt; 子系统管理swarm成员资格。请参阅将&lt;a href=&quot;../join-nodes/index&quot;&gt;节点添加到群集&lt;/a&gt;以获取有关如何添加工作程序节点并将工作程序节点提升为管理员的更多信息。</target>
        </trans-unit>
        <trans-unit id="198081da238b365e828d9c68b94df44770aea77f" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;code&gt;--build-arg&lt;/code&gt; flag without a value, in which case the value from the local environment will be propagated into the Docker container being built:</source>
          <target state="translated">您也可以使用不带值的 &lt;code&gt;--build-arg&lt;/code&gt; 标志，在这种情况下，本地环境中的值将传播到正在构建的Docker容器中：</target>
        </trans-unit>
        <trans-unit id="09f74f43bdfe4853242b90da074f2fbc00dac73e" translate="yes" xml:space="preserve">
          <source>You may also want to visit the &lt;a href=&quot;../create/index#specifying-configuration-options-for-the-created-docker-engine&quot;&gt;documentation on setting &lt;code&gt;HTTP_PROXY&lt;/code&gt; for the created daemon using the &lt;code&gt;--engine-env&lt;/code&gt; flag for &lt;code&gt;docker-machine create&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您可能还想&lt;a href=&quot;../create/index#specifying-configuration-options-for-the-created-docker-engine&quot;&gt;使用&lt;/a&gt; &lt;code&gt;--engine-env&lt;/code&gt; &lt;code&gt;docker-machine create&lt;/code&gt; 的--engine-env标志为创建的守护程序设置 &lt;code&gt;HTTP_PROXY&lt;/code&gt; 的文档。</target>
        </trans-unit>
        <trans-unit id="ee2eea550018d3305f9a574ca80c93cc6eab59b8" translate="yes" xml:space="preserve">
          <source>You may notice that some flags specify environment variables that they are associated with as well (located to the far left hand side of the row). If these environment variables are set when &lt;code&gt;docker-machine create&lt;/code&gt; is invoked, Docker Machine uses them for the default value of the flag.</source>
          <target state="translated">您可能会注意到，有些标志还指定了与它们关联的环境变量（位于该行的最左侧）。如果在调用 &lt;code&gt;docker-machine create&lt;/code&gt; 时设置了这些环境变量，则Docker Machine会将它们用作标志的默认值。</target>
        </trans-unit>
        <trans-unit id="35448d8e9c09b538cca78ae300a1b6d3c09d6eff" translate="yes" xml:space="preserve">
          <source>You may wish to share the UTS namespace with the host if you would like the hostname of the container to change as the hostname of the host changes. A more advanced use case would be changing the host&amp;rsquo;s hostname from a container.</source>
          <target state="translated">如果希望容器的主机名随着主机的主机名更改而更改，则可能希望与主机共享UTS名称空间。一个更高级的用例是从容器更改主机的主机名。</target>
        </trans-unit>
        <trans-unit id="2e7095c4dad5df38e0280e872bc08525020476ce" translate="yes" xml:space="preserve">
          <source>You may write your Compose file as follows:</source>
          <target state="translated">您可以按以下方式编写您的 Compose 文件。</target>
        </trans-unit>
        <trans-unit id="704a4b86d69ecf78cf97644d8fd8cf23af8c205d" translate="yes" xml:space="preserve">
          <source>You might want to use the current shell to connect to a different Docker Engine. This would be the case if, for example, you are &lt;a href=&quot;https://docs.docker.com/docker-for-mac/docker-toolbox/&quot;&gt;running Docker Desktop for Mac concurrent with Docker Toolbox&lt;/a&gt; and want to talk to two different Docker Engines. In both scenarios, you have the option to switch the environment for the current shell to talk to different Docker engines.</source>
          <target state="translated">您可能要使用当前的Shell连接到其他Docker Engine。例如，如果您正在&lt;a href=&quot;https://docs.docker.com/docker-for-mac/docker-toolbox/&quot;&gt;与Docker Toolbox同时运行Docker Desktop for Mac，&lt;/a&gt;并且想与两个不同的Docker Engine进行对话。在这两种情况下，您都可以选择切换当前Shell的环境以与其他Docker引擎进行通信。</target>
        </trans-unit>
        <trans-unit id="39b8faf5910005368a64991d61dd7ca4fb9b998d" translate="yes" xml:space="preserve">
          <source>You must also open the published port between the swarm nodes and any external resources, such as an external load balancer, that require access to the port.</source>
          <target state="translated">您还必须在蜂群节点和任何需要访问该端口的外部资源(如外部负载平衡器)之间打开发布的端口。</target>
        </trans-unit>
        <trans-unit id="d9d78b996497cb098a6065092c2ec53bdd5193d8" translate="yes" xml:space="preserve">
          <source>You must also specify the &lt;code&gt;--advertise-addr&lt;/code&gt; if the address where other nodes reach the first manager node is not the same address the manager sees as its own. For instance, in a cloud setup that spans different regions, hosts have both internal addresses for access within the region and external addresses that you use for access from outside that region. In this case, specify the external address with &lt;code&gt;--advertise-addr&lt;/code&gt; so that the node can propagate that information to other nodes that subsequently connect to it.</source>
          <target state="translated">如果其他节点到达第一个管理器节点的地址与管理器看到的地址不同，则还必须指定 &lt;code&gt;--advertise-addr&lt;/code&gt; 。例如，在跨不同区域的云设置中，主机既具有用于在区域内进行访问的内部地址，又具有用于从该区域外部进行访问的外部地址。在这种情况下，请使用 &lt;code&gt;--advertise-addr&lt;/code&gt; 指定外部地址，以便该节点可以将该信息传播到随后与之连接的其他节点。</target>
        </trans-unit>
        <trans-unit id="f53844b090d4e244a1b5b762b9c141cf1430ff11" translate="yes" xml:space="preserve">
          <source>You must have imported an appropriate delegation key for this role. To do so, you can run &lt;code&gt;notary key import &amp;lt;KEY_FILE&amp;gt; --role user&lt;/code&gt; with the private key PEM file, or drop the private key PEM in &lt;code&gt;private/tuf_keys&lt;/code&gt; as &lt;code&gt;&amp;lt;KEY_ID&amp;gt;.key&lt;/code&gt; with the &lt;code&gt;role&lt;/code&gt; PEM header set to &lt;code&gt;user&lt;/code&gt;.</source>
          <target state="translated">您必须为此角色导入适当的委派密钥。为此，您可以使用公钥PEM文件运行 &lt;code&gt;notary key import &amp;lt;KEY_FILE&amp;gt; --role user&lt;/code&gt; ，或将 &lt;code&gt;role&lt;/code&gt; PEM标头设置为 &lt;code&gt;user&lt;/code&gt; 的私钥PEM 作为 &lt;code&gt;&amp;lt;KEY_ID&amp;gt;.key&lt;/code&gt; 放在 &lt;code&gt;private/tuf_keys&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="d5437f01cc72330dfafea86c6ec14a8dff5e3670" translate="yes" xml:space="preserve">
          <source>You must use an Administrator level account to create and manage Hyper-V machines.</source>
          <target state="translated">您必须使用管理员级别的账户来创建和管理Hyper-V机器。</target>
        </trans-unit>
        <trans-unit id="e3c2366bdadc27a3ea91e93a8cdb3d6133797aef" translate="yes" xml:space="preserve">
          <source>You need a hypervisor that can create virtual machines (VMs), so &lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;install Oracle VirtualBox&lt;/a&gt; for your machine&amp;rsquo;s OS.</source>
          <target state="translated">您需要一个可以创建虚拟机（VM）的管理程序，因此&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;请&lt;/a&gt;为您的计算机的操作系统安装Oracle VirtualBox。</target>
        </trans-unit>
        <trans-unit id="aca6bfa6670447d0d6e53af9b13cfea6018c3073" translate="yes" xml:space="preserve">
          <source>You need an Azure Subscription to use this Docker Machine driver. &lt;a href=&quot;https://azure.microsoft.com/free/&quot;&gt;Sign up for a free trial.&lt;/a&gt;</source>
          <target state="translated">您需要Azure订阅才能使用此Docker Machine驱动程序。&lt;a href=&quot;https://azure.microsoft.com/free/&quot;&gt;注册免费试用。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0fc030e9a1b42c8aaa5304fa87da1c04fab81d22" translate="yes" xml:space="preserve">
          <source>You need an existing virtual switch to use the driver. Hyper-V can share an external network interface (also known as bridging). See &lt;a href=&quot;http://blogs.technet.com/b/canitpro/archive/2014/03/11/step-by-step-enabling-hyper-v-for-use-on-windows-8-1.aspx&quot;&gt;this blog&lt;/a&gt; to learn more. If you would like to use NAT, create an internal network, and use &lt;a href=&quot;http://www.packet6.com/allowing-windows-8-1-hyper-v-vm-to-work-with-wifi/&quot;&gt;Internet Connection Sharing&lt;/a&gt;.</source>
          <target state="translated">您需要现有的虚拟交换机才能使用驱动程序。Hyper-V可以共享一个外部网络接口（也称为桥接）。请参阅&lt;a href=&quot;http://blogs.technet.com/b/canitpro/archive/2014/03/11/step-by-step-enabling-hyper-v-for-use-on-windows-8-1.aspx&quot;&gt;此博客&lt;/a&gt;以了解更多信息。如果您想使用NAT，请创建一个内部网络，然后使用&lt;a href=&quot;http://www.packet6.com/allowing-windows-8-1-hyper-v-vm-to-work-with-wifi/&quot;&gt;Internet连接共享&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0c75e42433cf96b7ecdaaa8869caf1297af7d587" translate="yes" xml:space="preserve">
          <source>You need to change the SSH username only if the custom AMI you use has a different SSH username.</source>
          <target state="translated">只有当您使用的自定义AMI具有不同的SSH用户名时,您才需要更改SSH用户名。</target>
        </trans-unit>
        <trans-unit id="673099d476f2a5785b7c84ff5162a8b0e01cb63e" translate="yes" xml:space="preserve">
          <source>You need to create a personal access token under &amp;ldquo;Apps &amp;amp; API&amp;rdquo; in the DigitalOcean Control Panel and pass that to &lt;code&gt;docker-machine create&lt;/code&gt; with the &lt;code&gt;--digitalocean-access-token&lt;/code&gt; option.</source>
          <target state="translated">您需要在DigitalOcean控制面板中的&amp;ldquo;应用和API&amp;rdquo;下创建个人访问令牌，然后使用 &lt;code&gt;--digitalocean-access-token&lt;/code&gt; 选项将其传递给docker- &lt;code&gt;docker-machine create&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ef9f238bffb5fa2e0ff55236490716956226e5b" translate="yes" xml:space="preserve">
          <source>You need to generate an API key in the softlayer control panel. &lt;a href=&quot;http://knowledgelayer.softlayer.com/procedure/retrieve-your-api-key&quot;&gt;Retrieve your API key&lt;/a&gt;.</source>
          <target state="translated">您需要在软件层控制面板中生成一个API密钥。&lt;a href=&quot;http://knowledgelayer.softlayer.com/procedure/retrieve-your-api-key&quot;&gt;检索您的API密钥&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca5ce1b6e241c1b8bd90db400b68f4c341fe10dc" translate="yes" xml:space="preserve">
          <source>You need to specify the credentials store in &lt;code&gt;$HOME/.docker/config.json&lt;/code&gt; to tell the docker engine to use it. The value of the config property should be the suffix of the program to use (i.e. everything after &lt;code&gt;docker-credential-&lt;/code&gt;). For example, to use &lt;code&gt;docker-credential-osxkeychain&lt;/code&gt;:</source>
          <target state="translated">您需要在 &lt;code&gt;$HOME/.docker/config.json&lt;/code&gt; 指定凭据存储，以通知Docker引擎使用它。config属性的值应为要使用的程序的后缀（即 &lt;code&gt;docker-credential-&lt;/code&gt; 之后的所有内容）。例如，使用 &lt;code&gt;docker-credential-osxkeychain&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8b4e9abf8a08afc414060ea4392d06610b2a014b" translate="yes" xml:space="preserve">
          <source>You now have two VMs created, named &lt;code&gt;myvm1&lt;/code&gt; and &lt;code&gt;myvm2&lt;/code&gt;.</source>
          <target state="translated">现在，您已经创建了两个VM，分别名为 &lt;code&gt;myvm1&lt;/code&gt; 和 &lt;code&gt;myvm2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c98c6c46824cb97a342f00f32c8ae73e0c271e0" translate="yes" xml:space="preserve">
          <source>You probably need to make changes to your app configuration to make it ready for production. These changes may include:</source>
          <target state="translated">您可能需要对您的应用程序配置进行更改,使其为生产做好准备。这些更改可能包括:</target>
        </trans-unit>
        <trans-unit id="54f71868fa0c9d4bda9a85977d3e9803f07b2089" translate="yes" xml:space="preserve">
          <source>You saw in the Compose file that &lt;code&gt;visualizer&lt;/code&gt; runs on port 8080. Get the IP address of one of your nodes by running &lt;code&gt;docker-machine ls&lt;/code&gt;. Go to either IP address at port 8080 and you can see the visualizer running:</source>
          <target state="translated">您在Compose文件中看到， &lt;code&gt;visualizer&lt;/code&gt; 运行在端口8080上。通过运行 &lt;code&gt;docker-machine ls&lt;/code&gt; 来获取节点之一的IP地址。转到端口8080的任一IP地址，您可以看到可视化工具正在运行：</target>
        </trans-unit>
        <trans-unit id="bf3b77a8acafdabd365518bc5f02356ff95d002b" translate="yes" xml:space="preserve">
          <source>You see an error, because this content doesn&amp;rsquo;t exist on the &lt;code&gt;notaryserver&lt;/code&gt; yet.</source>
          <target state="translated">您会看到一个错误，因为 &lt;code&gt;notaryserver&lt;/code&gt; 尚不存在此内容。</target>
        </trans-unit>
        <trans-unit id="91669e9c8b2aeb4e7c21d0c897267857c6464661" translate="yes" xml:space="preserve">
          <source>You should back up the root key somewhere safe. Given that it is only required to create new repositories, it is a good idea to store it offline in hardware. For details on securing, and backing up your keys, make sure you read how to &lt;a href=&quot;../trust_key_mng/index&quot;&gt;manage keys for DCT&lt;/a&gt;.</source>
          <target state="translated">您应该在安全的地方备份根密钥。鉴于只需要创建新的存储库，将其离线存储在硬件中是一个好主意。有关保护和备份密钥的详细信息，请确保您已阅读如何&lt;a href=&quot;../trust_key_mng/index&quot;&gt;管理DCT的密钥&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4aa2bdfdf70b2e9d5bc3c002d1e7f3221b2bff82" translate="yes" xml:space="preserve">
          <source>You should choose a channel that best fits your needs. If you only want bugfixes, you should use &lt;code&gt;docker/dockerfile:1.0&lt;/code&gt;. If you want to benefit from experimental features, you should use the experimental channel. If you are using the experimental channel, newer releases may not be backwards compatible, so it is recommended to use an immutable full version variant.</source>
          <target state="translated">您应该选择最适合自己需求的渠道。如果仅需要错误修复，则应使用 &lt;code&gt;docker/dockerfile:1.0&lt;/code&gt; 。如果您想从实验功能中受益，则应使用实验频道。如果您正在使用实验性频道，则较新的版本可能无法向后兼容，因此建议使用不可变的完整版本。</target>
        </trans-unit>
        <trans-unit id="fd6294845113b2a23b6568b420de92ea7f63e612" translate="yes" xml:space="preserve">
          <source>You should create overlay networks with &lt;code&gt;/24&lt;/code&gt; blocks (the default), which limits you to 256 IP addresses, when you create networks using the default VIP-based endpoint-mode. This recommendation addresses &lt;a href=&quot;https://github.com/moby/moby/issues/30820&quot;&gt;limitations with swarm mode&lt;/a&gt;. If you need more than 256 IP addresses, do not increase the IP block size. You can either use &lt;code&gt;dnsrr&lt;/code&gt; endpoint mode with an external load balancer, or use multiple smaller overlay networks. See &lt;a href=&quot;https://docs.docker.com/network#configure-service-discovery&quot;&gt;Configure service discovery&lt;/a&gt; for more information about different endpoint modes.</source>
          <target state="translated">使用默认的基于VIP的终结点模式创建网络时，应使用 &lt;code&gt;/24&lt;/code&gt; 块（默认值）创建覆盖网络，这会将您限制为256个IP地址。该建议解决&lt;a href=&quot;https://github.com/moby/moby/issues/30820&quot;&gt;了群集模式的局限性&lt;/a&gt;。如果您需要超过256个IP地址，请不要增加IP块的大小。您可以将 &lt;code&gt;dnsrr&lt;/code&gt; 终结点模式与外部负载平衡器一起使用，也可以使用多个较小的覆盖网络。有关不同端点模式的更多信息，请参阅&lt;a href=&quot;https://docs.docker.com/network#configure-service-discovery&quot;&gt;配置服务发现&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e84613439f2643e7567c04d69ffff0ddba68478" translate="yes" xml:space="preserve">
          <source>You should maintain an odd number of managers in the swarm to support manager node failures. Having an odd number of managers ensures that during a network partition, there is a higher chance that the quorum remains available to process requests if the network is partitioned into two sets. Keeping the quorum is not guaranteed if you encounter more than two network partitions.</source>
          <target state="translated">您应该在蜂群中保持奇数的管理器,以支持管理器节点故障。拥有奇数的管理器可以确保在网络分区期间,如果网络被分区为两组,那么保持法定人数以处理请求的几率更高。如果遇到两组以上的网络分区,则不能保证保持法定人数。</target>
        </trans-unit>
        <trans-unit id="b205048dbb39a28131b763257bf8accca6460735" translate="yes" xml:space="preserve">
          <source>You should never restart a manager node by copying the &lt;code&gt;raft&lt;/code&gt; directory from another node. The data directory is unique to a node ID. A node can only use a node ID once to join the swarm. The node ID space should be globally unique.</source>
          <target state="translated">您永远不要通过从另一个节点复制 &lt;code&gt;raft&lt;/code&gt; 目录来重新启动管理器节点。数据目录对于节点ID是唯一的。一个节点只能使用一次节点ID来加入群集。节点ID空间应该是全局唯一的。</target>
        </trans-unit>
        <trans-unit id="a1423a39c53c8b43a915a38b04562a27fb3bfb8c" translate="yes" xml:space="preserve">
          <source>You should rotate the locked swarm&amp;rsquo;s unlock key on a regular schedule.</source>
          <target state="translated">您应该定期旋转锁定的群组的解锁密钥。</target>
        </trans-unit>
        <trans-unit id="75fca42bf1e7af08570c63ef1122f97159aa2cdd" translate="yes" xml:space="preserve">
          <source>You should see a message in your browser saying:</source>
          <target state="translated">你应该会在浏览器中看到一条消息说。</target>
        </trans-unit>
        <trans-unit id="963c536db9d131287f2a6ca6c62d26698ec3b97b" translate="yes" xml:space="preserve">
          <source>You should see a message that Python is serving your app at &lt;code&gt;http://0.0.0.0:80&lt;/code&gt;. But that message is coming from inside the container, which doesn&amp;rsquo;t know you mapped port 80 of that container to 4000, making the correct URL &lt;code&gt;http://localhost:4000&lt;/code&gt;.</source>
          <target state="translated">您应该在 &lt;code&gt;http://0.0.0.0:80&lt;/code&gt; 看到一条消息，指出Python正在为您的应用提供服务。但是该消息是从容器内部发出的，它不知道您已将该容器的端口80映射到4000，从而生成了正确的URL &lt;code&gt;http://localhost:4000&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="302303f928d2159204a9028a6725ce9f9820e547" translate="yes" xml:space="preserve">
          <source>You should see both &lt;code&gt;rhel-httpd&lt;/code&gt; and &lt;code&gt;registry-host:5000/myadmin/rhel-httpd&lt;/code&gt; listed.</source>
          <target state="translated">您应该同时看到 &lt;code&gt;rhel-httpd&lt;/code&gt; 和 &lt;code&gt;registry-host:5000/myadmin/rhel-httpd&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3a6e0c2530be12b0d1143fb75a5b3b4a42809d4" translate="yes" xml:space="preserve">
          <source>You should use a &lt;code&gt;volume&lt;/code&gt; if you want to make changes to your code and see them reflected immediately, for example when you&amp;rsquo;re developing code and your server supports hot code reloading or live-reload.</source>
          <target state="translated">如果要更改代码并立即看到更改，例如在开发代码并且服务器支持热代码重载或实时重载时，应使用 &lt;code&gt;volume&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77a725f4e4adad68cd8d4f6f4b1160f7f3a752b8" translate="yes" xml:space="preserve">
          <source>You still need to &lt;a href=&quot;#configs&quot;&gt;grant access to the config&lt;/a&gt; to each service in the stack.</source>
          <target state="translated">您仍然需要&lt;a href=&quot;#configs&quot;&gt;将配置访问权限授予&lt;/a&gt;堆栈中的每个服务。</target>
        </trans-unit>
        <trans-unit id="0d4a939e70da1f715a280320a815837f994654a3" translate="yes" xml:space="preserve">
          <source>You still need to &lt;a href=&quot;#secrets&quot;&gt;grant access to the secrets&lt;/a&gt; to each service in the stack.</source>
          <target state="translated">您仍然需要向堆栈中的每个服务&lt;a href=&quot;#secrets&quot;&gt;授予对机密的访问权限&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e40cbc42543528d8e2b621112e4908e73f5617bb" translate="yes" xml:space="preserve">
          <source>You will need a Linode APIv4 Personal Access Token. Get one here: &lt;a href=&quot;https://developers.linode.com/api/v4#section/Personal-Access-Token&quot;&gt;https://developers.linode.com/api/v4#section/Personal-Access-Token&lt;/a&gt;. Supply the token to &lt;code&gt;docker-machine create -d linode&lt;/code&gt; with &lt;code&gt;--linode-token&lt;/code&gt;.</source>
          <target state="translated">您将需要一个Linode APIv4个人访问令牌。在此处获取一个：&lt;a href=&quot;https://developers.linode.com/api/v4#section/Personal-Access-Token&quot;&gt;https&lt;/a&gt; : //developers.linode.com/api/v4#section/Personal-Access-Token。使用 &lt;code&gt;--linode-token&lt;/code&gt; 将令牌提供给docker- &lt;code&gt;docker-machine create -d linode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b6906139ec66bd11cfec52f809875c2fd9c7f628" translate="yes" xml:space="preserve">
          <source>You would need to set the environment variable &lt;code&gt;NOTARY_SERVER_STORAGE_DB_URL&lt;/code&gt;, because the &lt;code&gt;db_url&lt;/code&gt; is in the &lt;code&gt;storage&lt;/code&gt; section of the Notary server configuration JSON.</source>
          <target state="translated">您将需要设置环境变量 &lt;code&gt;NOTARY_SERVER_STORAGE_DB_URL&lt;/code&gt; ，因为 &lt;code&gt;db_url&lt;/code&gt; 在Notary服务器配置JSON 的 &lt;code&gt;storage&lt;/code&gt; 部分中。</target>
        </trans-unit>
        <trans-unit id="01be82608283b8cbf6dd9fbcd5f2819f6128ac9d" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll find that the proportion of time is the same as the proportion of blkio weights of the two containers.</source>
          <target state="translated">您会发现时间比例与两个容器的blkio重量比例相同。</target>
        </trans-unit>
        <trans-unit id="a51eeb8853ee81dfa0d29c44cf9f931a1c097e0e" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll need two shells for this example.</source>
          <target state="translated">在此示例中，您将需要两个shell。</target>
        </trans-unit>
        <trans-unit id="2ba79483e84c2c3fd3a8c314db4703704f5285f3" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re doing great, this is the home stretch!</source>
          <target state="translated">您做得很棒，这是您的最佳选择！</target>
        </trans-unit>
        <trans-unit id="85e1e1848f9ced21754ebffed2b3be35429e53af" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve been editing the same Compose file for this entire tutorial. Well, we have good news. That Compose file works just as well in production as it does on your machine. In this section, we will go through some options for running your Dockerized application.</source>
          <target state="translated">您已经在整个教程中编辑了相同的Compose文件。好吧，我们有个好消息。该Compose文件在生产中的效果与在计算机上一样好。在本节中，我们将介绍一些用于运行Dockerized应用程序的选项。</target>
        </trans-unit>
        <trans-unit id="d4fe4f247d219733dced50e608efd15c8760359e" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve taken a full-stack, dev-to-deploy tour of the entire Docker platform.</source>
          <target state="translated">您已经对整个Docker平台进行了全栈，从开发到部署的导览。</target>
        </trans-unit>
        <trans-unit id="8e561b6978dc90ee4fb485bd0996d03f200ddc99" translate="yes" xml:space="preserve">
          <source>Your app is now running on your cloud provider.</source>
          <target state="translated">您的应用程序现在正在您的云提供商上运行。</target>
        </trans-unit>
        <trans-unit id="8424bb0b4bc3852133c0a98236a550a85d58caa0" translate="yes" xml:space="preserve">
          <source>Your configuration options can contain environment variables. Compose uses the variable values from the shell environment in which &lt;code&gt;docker-compose&lt;/code&gt; is run. For example, suppose the shell contains &lt;code&gt;POSTGRES_VERSION=9.3&lt;/code&gt; and you supply this configuration:</source>
          <target state="translated">您的配置选项可以包含环境变量。Compose使用运行 &lt;code&gt;docker-compose&lt;/code&gt; 的shell环境中的变量值。例如，假设外壳包含 &lt;code&gt;POSTGRES_VERSION=9.3&lt;/code&gt; ,并且您提供了以下配置：</target>
        </trans-unit>
        <trans-unit id="084fef0d16a06be0376fa0f1e25fca4209e92382" translate="yes" xml:space="preserve">
          <source>Your container will have lines in &lt;code&gt;/etc/hosts&lt;/code&gt; which define the hostname of the container itself as well as &lt;code&gt;localhost&lt;/code&gt; and a few other common things. The &lt;code&gt;--add-host&lt;/code&gt; flag can be used to add additional lines to &lt;code&gt;/etc/hosts&lt;/code&gt;.</source>
          <target state="translated">您的容器将在 &lt;code&gt;/etc/hosts&lt;/code&gt; 中包含几行，这些行定义了容器本身的主机名以及 &lt;code&gt;localhost&lt;/code&gt; 和其他一些常见的东西。所述 &lt;code&gt;--add-host&lt;/code&gt; 标志可用于附加的行添加到 &lt;code&gt;/etc/hosts&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="64dbfe0ffb995924de4f14ba6869f3b926032a67" translate="yes" xml:space="preserve">
          <source>Your container will use the same DNS servers as the host by default, but you can override this with &lt;code&gt;--dns&lt;/code&gt;.</source>
          <target state="translated">默认情况下，您的容器将使用与主机相同的DNS服务器，但是您可以使用 &lt;code&gt;--dns&lt;/code&gt; 覆盖它。</target>
        </trans-unit>
        <trans-unit id="8ab0fd190ee9d406884563a82458273e51cf9e1a" translate="yes" xml:space="preserve">
          <source>Your customization applies to all containers started in with your Docker client. Users can override your custom or the default key sequence on a per-container basis. To do this, the user specifies the &lt;code&gt;--detach-keys&lt;/code&gt; flag with the &lt;code&gt;docker attach&lt;/code&gt;, &lt;code&gt;docker exec&lt;/code&gt;, &lt;code&gt;docker run&lt;/code&gt; or &lt;code&gt;docker start&lt;/code&gt; command.</source>
          <target state="translated">您的定制适用于以Docker客户端启动的所有容器。用户可以在每个容器的基础上覆盖您的自定义键或默认键序列。为此，用户使用 &lt;code&gt;--detach-keys&lt;/code&gt; &lt;code&gt;docker attach&lt;/code&gt; ， &lt;code&gt;docker exec&lt;/code&gt; ， &lt;code&gt;docker run&lt;/code&gt; 或 &lt;code&gt;docker start&lt;/code&gt; 命令指定--detach-keys标志。</target>
        </trans-unit>
        <trans-unit id="d19f19222cd3814b4594be2a7bf72edf495c6b04" translate="yes" xml:space="preserve">
          <source>Your default VPC ID is determined at the start of a command. In some cases, either because your account does not have a default VPC, or you do not want to use the default one, you can specify a VPC with the &lt;code&gt;--amazonec2-vpc-id&lt;/code&gt; flag.</source>
          <target state="translated">默认VPC ID是在命令开始时确定的。在某些情况下，由于您的帐户没有默认VPC，或者您不想使用默认VPC，可以使用 &lt;code&gt;--amazonec2-vpc-id&lt;/code&gt; 标志指定VPC 。</target>
        </trans-unit>
        <trans-unit id="18eb02e58978e0bd647fa4be8d36cebd729b07cb" translate="yes" xml:space="preserve">
          <source>Your directory listing may have some differences, especially if you use a different container storage driver than &lt;code&gt;aufs&lt;/code&gt;.</source>
          <target state="translated">您的目录列表可能会有一些差异，特别是如果您使用的容器存储驱动程序不同于 &lt;code&gt;aufs&lt;/code&gt; 的话。</target>
        </trans-unit>
        <trans-unit id="c555c9f1170ebe78d16845f79b31e0942252bc8a" translate="yes" xml:space="preserve">
          <source>Your first &lt;code&gt;docker-compose.yml&lt;/code&gt; file</source>
          <target state="translated">您的第一个 &lt;code&gt;docker-compose.yml&lt;/code&gt; 文件</target>
        </trans-unit>
        <trans-unit id="afa910b5ed827136d4eee0f607c122c6d9a1bb42" translate="yes" xml:space="preserve">
          <source>Your first docker-compose.yml File</source>
          <target state="translated">您的第一个docker-compose.yml文件。</target>
        </trans-unit>
        <trans-unit id="769aea4b8228a820bc9f132a1e3ce0cb6c59b762" translate="yes" xml:space="preserve">
          <source>Your new development environment</source>
          <target state="translated">您的新开发环境</target>
        </trans-unit>
        <trans-unit id="c1e9f6a3ffbddd1a5c9e6a40cf431f0349ac15ff" translate="yes" xml:space="preserve">
          <source>Your service uses the gMSA credential spec when it starts, but unlike a typical Docker Config (used by passing the --config flag), the credential spec is not mounted into the container.</source>
          <target state="translated">你的服务在启动时使用gMSA凭证规范,但与典型的Docker Config(通过传递--config标志来使用)不同,凭证规范并没有被挂载到容器中。</target>
        </trans-unit>
        <trans-unit id="a36e8d4fd23e76e1296849017c6c9d67b2ee13ec" translate="yes" xml:space="preserve">
          <source>Your service will use the gMSA credential spec when it starts, but unlike a typical Docker Config (used by passing the --config flag), the credential spec will not be mounted into the container.</source>
          <target state="translated">你的服务将在启动时使用gMSA凭证规范,但与典型的Docker Config(通过传递--config标志来使用)不同,凭证规范不会被挂载到容器中。</target>
        </trans-unit>
        <trans-unit id="1d676d9c391c67445f236d1208ba84445b5053f1" translate="yes" xml:space="preserve">
          <source>Yubikey support requires &lt;a href=&quot;https://www.yubico.com/support/knowledge-base/categories/downloads/&quot;&gt;Yubico PIV libraries&lt;/a&gt; (bundled with the PIV tools) to be available in standard library locations.</source>
          <target state="translated">要获得Yubikey的支持，必须在标准库位置提供&lt;a href=&quot;https://www.yubico.com/support/knowledge-base/categories/downloads/&quot;&gt;Yubico PIV库&lt;/a&gt;（与PIV工具捆绑在一起）。</target>
        </trans-unit>
        <trans-unit id="60dd11fc07bd0d3945e44a890cc72d0f1f51e20d" translate="yes" xml:space="preserve">
          <source>ZFS options</source>
          <target state="translated">ZFS选项</target>
        </trans-unit>
        <trans-unit id="6bc651c1ea1b888fd17d908b5d775d3dfb2f624e" translate="yes" xml:space="preserve">
          <source>Zsh</source>
          <target state="translated">Zsh</target>
        </trans-unit>
        <trans-unit id="2304e7d96c38a1fd44578d3797f7c271fda06ec9" translate="yes" xml:space="preserve">
          <source>[]byte</source>
          <target state="translated">[]byte</target>
        </trans-unit>
        <trans-unit id="b2e5f684d206fc762ea10335b6f2d226c8c1d180" translate="yes" xml:space="preserve">
          <source>a drive other than &lt;code&gt;C:&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;C:&lt;/code&gt; 以外的驱动器：</target>
        </trans-unit>
        <trans-unit id="1fd5ba11a556c0cf5dd368924ae1c45e70868895" translate="yes" xml:space="preserve">
          <source>a function that displays the active machine in your shell prompt</source>
          <target state="translated">一个在shell提示符中显示活动机器的函数。</target>
        </trans-unit>
        <trans-unit id="959e21cac14c1c24744c4e46496329ee3517e3d7" translate="yes" xml:space="preserve">
          <source>a function wrapper that adds a &lt;code&gt;docker-machine use&lt;/code&gt; subcommand to switch the active machine</source>
          <target state="translated">功能包装器，添加了 &lt;code&gt;docker-machine use&lt;/code&gt; 子命令以切换活动计算机</target>
        </trans-unit>
        <trans-unit id="637642e47d478c00e1463a995c964b79d695ecfa" translate="yes" xml:space="preserve">
          <source>a non-existing or empty directory</source>
          <target state="translated">不存在或为空的目录</target>
        </trans-unit>
        <trans-unit id="19251148c6e4a8bc3fafafb262b0ad7b311f093c" translate="yes" xml:space="preserve">
          <source>a rolling update policy</source>
          <target state="translated">滚动更新政策</target>
        </trans-unit>
        <trans-unit id="2bb6b986c5d6fb26dd9dd1054b545ce022371b0c" translate="yes" xml:space="preserve">
          <source>active</source>
          <target state="translated">active</target>
        </trans-unit>
        <trans-unit id="4d7a9af00bf393679089d870e60a2b720df5c663" translate="yes" xml:space="preserve">
          <source>add or remove label metadata</source>
          <target state="translated">添加或删除标签元数据</target>
        </trans-unit>
        <trans-unit id="927876bfc7eae4c6f52b380d83dab14d11493e49" translate="yes" xml:space="preserve">
          <source>adding nodes to the swarm</source>
          <target state="translated">蜂拥而至</target>
        </trans-unit>
        <trans-unit id="3b21e0f54dca09308ec896c51cda4f9ca4dd91a4" translate="yes" xml:space="preserve">
          <source>aliases</source>
          <target state="translated">aliases</target>
        </trans-unit>
        <trans-unit id="43c56eb5822b8c596fd48c0ab4832de1e48d2b12" translate="yes" xml:space="preserve">
          <source>allow inbound SSH traffic on the server that is running the &lt;code&gt;manager&lt;/code&gt; (this may be already set on your cloud provider)</source>
          <target state="translated">允许运行 &lt;code&gt;manager&lt;/code&gt; 的服务器上的入站SSH通信（这可能已经在您的云提供商上设置了）</target>
        </trans-unit>
        <trans-unit id="d52a2256076a6caf4065d6e255883f30a8247988" translate="yes" xml:space="preserve">
          <source>allow inbound traffic to the &lt;code&gt;web&lt;/code&gt; service on any worker nodes so that Hello World and Visualizer are accessible from a web browser.</source>
          <target state="translated">允许任何工作节点上的 &lt;code&gt;web&lt;/code&gt; 服务的入站流量，以便可以从Web浏览器访问Hello World和Visualizer。</target>
        </trans-unit>
        <trans-unit id="6e1b346aa50cd2ecb794c045dd8f416e80cf1083" translate="yes" xml:space="preserve">
          <source>ami-1c45e273</source>
          <target state="translated">ami-1c45e273</target>
        </trans-unit>
        <trans-unit id="9f02b2923c7265d40efc80e7fdd1ea27d5b310fe" translate="yes" xml:space="preserve">
          <source>ami-2378f540</source>
          <target state="translated">ami-2378f540</target>
        </trans-unit>
        <trans-unit id="053ae9c92de3582d1443b9caa8078c71f31de237" translate="yes" xml:space="preserve">
          <source>ami-34afc458</source>
          <target state="translated">ami-34afc458</target>
        </trans-unit>
        <trans-unit id="9f9a4b6abf6b9d114bd25b4313849722df010ad2" translate="yes" xml:space="preserve">
          <source>ami-49e59a26</source>
          <target state="translated">ami-49e59a26</target>
        </trans-unit>
        <trans-unit id="98ca5abfc4ad6b93b913c641d7d2917024ffbacb" translate="yes" xml:space="preserve">
          <source>ami-6d48500b</source>
          <target state="translated">ami-6d48500b</target>
        </trans-unit>
        <trans-unit id="b9d16509b665b6194d1d93a4664e5772969b535e" translate="yes" xml:space="preserve">
          <source>ami-73f7da13</source>
          <target state="translated">ami-73f7da13</target>
        </trans-unit>
        <trans-unit id="8ba8c0527e55b20a759e31c8eeb81fcc0bac843a" translate="yes" xml:space="preserve">
          <source>ami-785c491f</source>
          <target state="translated">ami-785c491f</target>
        </trans-unit>
        <trans-unit id="78ee0111499690535de5fd74e7ebb7299cb2898c" translate="yes" xml:space="preserve">
          <source>ami-7ed56a1a</source>
          <target state="translated">ami-7ed56a1a</target>
        </trans-unit>
        <trans-unit id="834f3952546ad88ab091ab227e3cdeeb2329c8d4" translate="yes" xml:space="preserve">
          <source>ami-835b4efa</source>
          <target state="translated">ami-835b4efa</target>
        </trans-unit>
        <trans-unit id="7e6cf54bd9ed7d74182d930f4ec3cb9ddcd2967a" translate="yes" xml:space="preserve">
          <source>ami-8b92b4ee</source>
          <target state="translated">ami-8b92b4ee</target>
        </trans-unit>
        <trans-unit id="11713ef72dde81f332ff2ab77adeacd6af873778" translate="yes" xml:space="preserve">
          <source>ami-939412f2</source>
          <target state="translated">ami-939412f2</target>
        </trans-unit>
        <trans-unit id="5d4c5867ccb0d4be8c1a3e4927e874b3c6989e0c" translate="yes" xml:space="preserve">
          <source>ami-94d20dfa</source>
          <target state="translated">ami-94d20dfa</target>
        </trans-unit>
        <trans-unit id="f687e606813e670501ba8808b41562f428b14a6b" translate="yes" xml:space="preserve">
          <source>ami-a163b4cc</source>
          <target state="translated">ami-a163b4cc</target>
        </trans-unit>
        <trans-unit id="a447270c627d8ccd93c9ebad164e4482e76f026d" translate="yes" xml:space="preserve">
          <source>ami-c1cf79bc</source>
          <target state="translated">ami-c1cf79bc</target>
        </trans-unit>
        <trans-unit id="0542573e1ffeb71d317f33d67bb2232ca45685ef" translate="yes" xml:space="preserve">
          <source>ami-cc7066a8</source>
          <target state="translated">ami-cc7066a8</target>
        </trans-unit>
        <trans-unit id="d96f081e28e0fd2244a08fa227e7d42c4965e1b9" translate="yes" xml:space="preserve">
          <source>ami-d15a75c7</source>
          <target state="translated">ami-d15a75c7</target>
        </trans-unit>
        <trans-unit id="48a2af0411527d43b56716cc34c665855a2288c7" translate="yes" xml:space="preserve">
          <source>ami-e94e5e8a</source>
          <target state="translated">ami-e94e5e8a</target>
        </trans-unit>
        <trans-unit id="98c39a8349416b8736d68a6317b7db5db3d3ff10" translate="yes" xml:space="preserve">
          <source>an AWS Access Key ID</source>
          <target state="translated">一个AWS访问密钥ID</target>
        </trans-unit>
        <trans-unit id="f73588fdcd1bb1b41cf5d4f8e450af53b559d41a" translate="yes" xml:space="preserve">
          <source>an AWS Secret Access Key</source>
          <target state="translated">一个AWS秘密访问密钥</target>
        </trans-unit>
        <trans-unit id="3db38ac6452343fbfbe6ad64aa19fb3238dbe19d" translate="yes" xml:space="preserve">
          <source>an offline key that is the root of DCT for an image tag</source>
          <target state="translated">一个离线密钥,它是一个图像标签的DCT根。</target>
        </trans-unit>
        <trans-unit id="ddc3f3bc04a0324dfd01573c2717c55b698e63ec" translate="yes" xml:space="preserve">
          <source>an overlay network for the service to connect to other services in the swarm</source>
          <target state="translated">覆盖网络,以便服务连接到蜂群中的其他服务。</target>
        </trans-unit>
        <trans-unit id="587cf1de4e778922e2ca69b66e2697ce210246b6" translate="yes" xml:space="preserve">
          <source>ancestor</source>
          <target state="translated">ancestor</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="c684f70ac6f87bc4fedd0b50a58ef2cecb3cf458" translate="yes" xml:space="preserve">
          <source>and many others.</source>
          <target state="translated">和许多其他。</target>
        </trans-unit>
        <trans-unit id="41e7263a3b42ad78cff0cc85cc01ac14a0e494ab" translate="yes" xml:space="preserve">
          <source>ap-northeast-1</source>
          <target state="translated">ap-northeast-1</target>
        </trans-unit>
        <trans-unit id="916fe9db1af6ddf3ce0e63e7c94a0f13379eec59" translate="yes" xml:space="preserve">
          <source>ap-northeast-2</source>
          <target state="translated">ap-northeast-2</target>
        </trans-unit>
        <trans-unit id="5dd9c1e5e166373290d4fe2f0707ee8f2c632a21" translate="yes" xml:space="preserve">
          <source>ap-south-1</source>
          <target state="translated">ap-south-1</target>
        </trans-unit>
        <trans-unit id="781a24a14347c6402680e16d785ae6119a2ae792" translate="yes" xml:space="preserve">
          <source>ap-southeast-1</source>
          <target state="translated">ap-southeast-1</target>
        </trans-unit>
        <trans-unit id="cbe28313724d9fdf7eeafebb953b068859d972d4" translate="yes" xml:space="preserve">
          <source>ap-southeast-2</source>
          <target state="translated">ap-southeast-2</target>
        </trans-unit>
        <trans-unit id="81a11f26ce4e144b1db789a799b9a4340799ee07" translate="yes" xml:space="preserve">
          <source>applications have no system dependencies</source>
          <target state="translated">应用程序没有系统依赖性</target>
        </trans-unit>
        <trans-unit id="3030e728f154bf51419109efb93b6b8aeec9a976" translate="yes" xml:space="preserve">
          <source>args</source>
          <target state="translated">args</target>
        </trans-unit>
        <trans-unit id="c0ee36527bf077287856a034612f3afc64faa37d" translate="yes" xml:space="preserve">
          <source>args of the plugin, struct consisting of the following fields</source>
          <target state="translated">插件的args,由以下字段组成的结构体</target>
        </trans-unit>
        <trans-unit id="fa0428a893775c2614e70e0ab834cdf7232809f4" translate="yes" xml:space="preserve">
          <source>arguments for selected options. For example, &lt;code&gt;docker-compose kill -s&lt;/code&gt; completes some signals like SIGHUP and SIGUSR1.</source>
          <target state="translated">所选选项的参数。例如， &lt;code&gt;docker-compose kill -s&lt;/code&gt; 完成一些信号，例如SIGHUP和SIGUSR1。</target>
        </trans-unit>
        <trans-unit id="8c95b394b7dc1c7944200f20c5375a2569606c53" translate="yes" xml:space="preserve">
          <source>as long as the Swarm cluster is configured to use the &lt;a href=&quot;https://docs.docker.com/network#an-overlay-network-with-docker-engine-swarm-mode&quot;&gt;overlay driver&lt;/a&gt;, or a custom driver which supports multi-host networking.</source>
          <target state="translated">只要将Swarm集群配置为使用&lt;a href=&quot;https://docs.docker.com/network#an-overlay-network-with-docker-engine-swarm-mode&quot;&gt;overlay驱动程序&lt;/a&gt;或支持多主机联网的自定义驱动程序。</target>
        </trans-unit>
        <trans-unit id="f0f77b8c66c54200481c656c2bff2a9083a3b8eb" translate="yes" xml:space="preserve">
          <source>as well as:</source>
          <target state="translated">以及。</target>
        </trans-unit>
        <trans-unit id="f4eab172b9928081a1f4f21f54ac7173a624bcf8" translate="yes" xml:space="preserve">
          <source>attachable</source>
          <target state="translated">attachable</target>
        </trans-unit>
        <trans-unit id="e48486e6d9c80e2b9e36cda710d792474cc2d26b" translate="yes" xml:space="preserve">
          <source>auth section (optional)</source>
          <target state="translated">认证部分</target>
        </trans-unit>
        <trans-unit id="960191f11abec5774501b6c91a820742fc142bdd" translate="yes" xml:space="preserve">
          <source>available docker-compose commands</source>
          <target state="translated">可用的docker-compose命令</target>
        </trans-unit>
        <trans-unit id="51de2b835bd35a67eb32dbcd3d77d4b96e5aa39d" translate="yes" xml:space="preserve">
          <source>before</source>
          <target state="translated">before</target>
        </trans-unit>
        <trans-unit id="7200c7b77bdd14bf9072fdeb0f514dba74853ca9" translate="yes" xml:space="preserve">
          <source>before (&lt;code&gt;&amp;lt;image-name&amp;gt;[:&amp;lt;tag&amp;gt;]&lt;/code&gt;, &lt;code&gt;&amp;lt;image id&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;image@digest&amp;gt;&lt;/code&gt;) - filter images created before given id or references</source>
          <target state="translated">之前（ &lt;code&gt;&amp;lt;image-name&amp;gt;[:&amp;lt;tag&amp;gt;]&lt;/code&gt; ， &lt;code&gt;&amp;lt;image id&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;image@digest&amp;gt;&lt;/code&gt; ）-过滤在给定id或引用之前创建的图像</target>
        </trans-unit>
        <trans-unit id="6bdd4db977b0f96aaf3bff2e4300153c648ca382" translate="yes" xml:space="preserve">
          <source>bind</source>
          <target state="translated">bind</target>
        </trans-unit>
        <trans-unit id="0e77ca7f9475a78ab8bd959b61d770e3760f0dd5" translate="yes" xml:space="preserve">
          <source>bind-nonrecursive</source>
          <target state="translated">bind-nonrecursive</target>
        </trans-unit>
        <trans-unit id="e122de6cf44d6d71c68de8ff396ad97d65e155e1" translate="yes" xml:space="preserve">
          <source>blkio_config</source>
          <target state="translated">blkio_config</target>
        </trans-unit>
        <trans-unit id="5039d155a71c0a5f7a2b2654ad49cb7ee47a8980" translate="yes" xml:space="preserve">
          <source>bool</source>
          <target state="translated">bool</target>
        </trans-unit>
        <trans-unit id="2fa1981b4a9a7a3e2f1294354810635b9030c74f" translate="yes" xml:space="preserve">
          <source>bridge</source>
          <target state="translated">bridge</target>
        </trans-unit>
        <trans-unit id="78abff21c39aaf499370eb6a7aed76b19889fef8" translate="yes" xml:space="preserve">
          <source>bridge name to be used when creating the Linux bridge</source>
          <target state="translated">创建Linux网桥时要使用的网桥名称。</target>
        </trans-unit>
        <trans-unit id="80754af91bfb6d1073585b046fe0a474ce868509" translate="yes" xml:space="preserve">
          <source>build</source>
          <target state="translated">build</target>
        </trans-unit>
        <trans-unit id="777065f79dbdadba8cecdc57c60f499832254179" translate="yes" xml:space="preserve">
          <source>build &lt;code&gt;labels&lt;/code&gt;</source>
          <target state="translated">建立 &lt;code&gt;labels&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d59795de8a4d83834e525b589b2bb0c12e4542c1" translate="yes" xml:space="preserve">
          <source>bundle</source>
          <target state="translated">bundle</target>
        </trans-unit>
        <trans-unit id="05ee7b28ed7ba488eff5b0534d744719dfc7b7e3" translate="yes" xml:space="preserve">
          <source>by default, generates a self-signed root CA for the swarm.</source>
          <target state="translated">默认情况下,为蜂群生成一个自签名的根 CA。</target>
        </trans-unit>
        <trans-unit id="828b6681fec556f348924984a1d86810565d6666" translate="yes" xml:space="preserve">
          <source>by default, generates tokens for worker and manager nodes to join the swarm.</source>
          <target state="translated">默认情况下,为加入蜂群的工人节点和经理节点生成令牌。</target>
        </trans-unit>
        <trans-unit id="087c7772a3a85544454f5a1812678f87d7a19f37" translate="yes" xml:space="preserve">
          <source>ca-central-1</source>
          <target state="translated">ca-central-1</target>
        </trans-unit>
        <trans-unit id="6a22d10ee4c77d96c74073d80248ad9712b6ea9b" translate="yes" xml:space="preserve">
          <source>cache_from</source>
          <target state="translated">cache_from</target>
        </trans-unit>
        <trans-unit id="0c93713c1e43fccf897b7b4f02e822c65d557fdf" translate="yes" xml:space="preserve">
          <source>cached</source>
          <target state="translated">cached</target>
        </trans-unit>
        <trans-unit id="08c9f41f124ebaa49463069101439a3356140a0a" translate="yes" xml:space="preserve">
          <source>caching section (optional)</source>
          <target state="translated">缓存部分</target>
        </trans-unit>
        <trans-unit id="f46d0e2902bb6049f09dcb2276ec8aa8baec3ce0" translate="yes" xml:space="preserve">
          <source>cap_add, cap_drop</source>
          <target state="translated">增加,减少</target>
        </trans-unit>
        <trans-unit id="ade759e239a40b02809e1f1b31f59f6d0107aae9" translate="yes" xml:space="preserve">
          <source>capabilities of the plugin (&lt;em&gt;Linux only&lt;/em&gt;), see list &lt;a href=&quot;https://github.com/opencontainers/runc/blob/master/libcontainer/SPEC/#security&quot;&gt;&lt;code&gt;here&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">插件的功能（&lt;em&gt;仅Linux&lt;/em&gt;），请参见&lt;a href=&quot;https://github.com/opencontainers/runc/blob/master/libcontainer/SPEC/#security&quot;&gt; &lt;code&gt;here&lt;/code&gt; &lt;/a&gt;列表</target>
        </trans-unit>
        <trans-unit id="c5be5b3d86d8c8a2c9b0ebdde86fae39960f2481" translate="yes" xml:space="preserve">
          <source>capability</source>
          <target state="translated">capability</target>
        </trans-unit>
        <trans-unit id="73aee7b1e8570a68cd1fe1083a23f6d73d4ae9cb" translate="yes" xml:space="preserve">
          <source>capability (string - currently &lt;code&gt;volumedriver&lt;/code&gt;, &lt;code&gt;networkdriver&lt;/code&gt;, &lt;code&gt;ipamdriver&lt;/code&gt;, &lt;code&gt;logdriver&lt;/code&gt;, &lt;code&gt;metricscollector&lt;/code&gt;, or &lt;code&gt;authz&lt;/code&gt;)</source>
          <target state="translated">能力（串-目前 &lt;code&gt;volumedriver&lt;/code&gt; ， &lt;code&gt;networkdriver&lt;/code&gt; ， &lt;code&gt;ipamdriver&lt;/code&gt; ， &lt;code&gt;logdriver&lt;/code&gt; ， &lt;code&gt;metricscollector&lt;/code&gt; ，或 &lt;code&gt;authz&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="07cee1e6c0d2484541bc592e796bd70cac433eda" translate="yes" xml:space="preserve">
          <source>cgroup_parent</source>
          <target state="translated">cgroup_parent</target>
        </trans-unit>
        <trans-unit id="16ebbb5849685062a8c125fae702f97816497eac" translate="yes" xml:space="preserve">
          <source>change a node role</source>
          <target state="translated">转换节点角色</target>
        </trans-unit>
        <trans-unit id="71a8de6d92d3d8cb6fcc4d7c75765d63a537896c" translate="yes" xml:space="preserve">
          <source>change node availability</source>
          <target state="translated">更改节点可用性</target>
        </trans-unit>
        <trans-unit id="672f4f917caab638fd6967768bd75f32fd1f4e3c" translate="yes" xml:space="preserve">
          <source>characteristics of the nodes where the service can run (such as resource constraints and placement preferences)</source>
          <target state="translated">服务可以运行的节点的特性(如资源限制和位置偏好)。</target>
        </trans-unit>
        <trans-unit id="d48f3139e6b9f07ba2b4611bd13fb1661cbce53a" translate="yes" xml:space="preserve">
          <source>client configuration file</source>
          <target state="translated">配置文件客户端</target>
        </trans-unit>
        <trans-unit id="0c6a84d772fa45d5da9123676c13a10f987ec6bb" translate="yes" xml:space="preserve">
          <source>cn-north-1</source>
          <target state="translated">cn-north-1</target>
        </trans-unit>
        <trans-unit id="1925f793093581c47a5c6b2e414506b1cbae280d" translate="yes" xml:space="preserve">
          <source>command</source>
          <target state="translated">command</target>
        </trans-unit>
        <trans-unit id="b7f90d3b37889edd6678abc3269d0f2a19bb8cf4" translate="yes" xml:space="preserve">
          <source>command completion</source>
          <target state="translated">指令完成</target>
        </trans-unit>
        <trans-unit id="09eb7d714f90b9b10ee2f5ee9666cd4cb717b5f6" translate="yes" xml:space="preserve">
          <source>command-line reference</source>
          <target state="translated">命令行参考</target>
        </trans-unit>
        <trans-unit id="caff63f373612ec246ce33340ee5ea92a5f612b6" translate="yes" xml:space="preserve">
          <source>concepts and getting help</source>
          <target state="translated">概念和获得帮助</target>
        </trans-unit>
        <trans-unit id="dfba7aade0868074c2861c98e2a9a92f3178a51b" translate="yes" xml:space="preserve">
          <source>config</source>
          <target state="translated">config</target>
        </trans-unit>
        <trans-unit id="2e7225e51ae489ea31fbce86b22c8c09a7d555a7" translate="yes" xml:space="preserve">
          <source>config (&lt;code&gt;config=&amp;lt;name or id&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">config（ &lt;code&gt;config=&amp;lt;name or id&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="5fb66943637feb59e5652d81e0b86fc7a5ccca4d" translate="yes" xml:space="preserve">
          <source>configs</source>
          <target state="translated">configs</target>
        </trans-unit>
        <trans-unit id="7d5ee500c46dd9095b798b3b6067d78ee25266a2" translate="yes" xml:space="preserve">
          <source>configs configuration reference</source>
          <target state="translated">配置参考</target>
        </trans-unit>
        <trans-unit id="caa0ed803f06ccc9ae5f0bbd2318a586bfb3b67a" translate="yes" xml:space="preserve">
          <source>configuration files</source>
          <target state="translated">配置文件</target>
        </trans-unit>
        <trans-unit id="fe1a95b42e0077a562eef88fab0ea60bfedcebd1" translate="yes" xml:space="preserve">
          <source>configures the manager to listen on an active network interface on port 2377.</source>
          <target state="translated">配置管理器监听端口2377上的活动网络接口。</target>
        </trans-unit>
        <trans-unit id="e92d77a9d3319a333f82bd19aa3dc7bfc326afb3" translate="yes" xml:space="preserve">
          <source>connecting to a remote daemon, such as a &lt;code&gt;docker-machine&lt;/code&gt; provisioned &lt;code&gt;docker engine&lt;/code&gt;.</source>
          <target state="translated">连接到远程守护程序，例如 &lt;code&gt;docker-machine&lt;/code&gt; Provisioned &lt;code&gt;docker engine&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c305a07c6f8fa806cbf0aa9caa35c680fb0c4c7" translate="yes" xml:space="preserve">
          <source>consistent</source>
          <target state="translated">consistent</target>
        </trans-unit>
        <trans-unit id="255a762c36cdae2fe950e67e8b8a4efb260e7540" translate="yes" xml:space="preserve">
          <source>container</source>
          <target state="translated">container</target>
        </trans-unit>
        <trans-unit id="f44956cd48cc80dfb15d3b2dbd1aca1e5547b42d" translate="yes" xml:space="preserve">
          <source>container (&lt;code&gt;container=&amp;lt;name or id&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">容器（ &lt;code&gt;container=&amp;lt;name or id&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="31cd2646e0944f1d70d0365dcf282e508ed3168d" translate="yes" xml:space="preserve">
          <source>container identification</source>
          <target state="translated">集装箱识别</target>
        </trans-unit>
        <trans-unit id="14f850c34e63edcdfd0aa66d316b75de4d9281eb" translate="yes" xml:space="preserve">
          <source>container_name</source>
          <target state="translated">container_name</target>
        </trans-unit>
        <trans-unit id="ec2727b3b71f07635f726026bef44352ec89e452" translate="yes" xml:space="preserve">
          <source>context</source>
          <target state="translated">context</target>
        </trans-unit>
        <trans-unit id="cd072d0dde8910008d609526e3f7daf9aa00ea8c" translate="yes" xml:space="preserve">
          <source>cpu_count, cpu_percent, cpu_shares, cpu_period, cpu_quota, cpus, cpuset, domainname, hostname, ipc, mac_address, mem_limit, memswap_limit, mem_swappiness, mem_reservation, oom_kill_disable, oom_score_adj, privileged, read_only, shm_size, stdin_open, tty, user, working_dir</source>
          <target state="translated">cpu_count,cpu_percent,cpu_shares,cpu_period,cpu_quota,cpus,cpuset,domainname,hostname,ipc,mac_address,mem_limit,memswap_limit,mem_swappiness,mem_reservation,oom_kill_disable,oom_score_adj,privileged,read_only,shm_size,stdin_open,tty,user,working_dir.</target>
        </trans-unit>
        <trans-unit id="318973317e08e71e5895e18983e822e0c7fc6ec7" translate="yes" xml:space="preserve">
          <source>cpu_rt_runtime, cpu_rt_period</source>
          <target state="translated">cpu_rt_runtime,cpu_rt_period。</target>
        </trans-unit>
        <trans-unit id="0624648ad39b16595bf49af6664c4a07cb607039" translate="yes" xml:space="preserve">
          <source>cpu_shares, cpu_quota, cpuset, domainname, hostname, ipc, mac_address, mem_limit, memswap_limit, mem_swappiness, privileged, read_only, restart, shm_size, stdin_open, tty, user, working_dir</source>
          <target state="translated">cpu_shares,cpu_quota,cpuset,domainname,hostname,ipc,mac_address,mem_limit,memswap_limit,mem_swappiness,privileged,read_only,restart,shm_size,stdin_open,tty,user,working_dir.</target>
        </trans-unit>
        <trans-unit id="9b7c68a918b17eb053809b198d7c9abfc142f30a" translate="yes" xml:space="preserve">
          <source>create</source>
          <target state="translated">create</target>
        </trans-unit>
        <trans-unit id="4938aebcda1c80f17d48c07e926b7b779d50fbfe" translate="yes" xml:space="preserve">
          <source>create a new (or start an existing) Docker virtual machine</source>
          <target state="translated">创建一个新的(或启动一个现有的)Docker虚拟机。</target>
        </trans-unit>
        <trans-unit id="066036ffd8947648ed238005330d393b219e6074" translate="yes" xml:space="preserve">
          <source>create context from a named context</source>
          <target state="translated">从命名的上下文中创建上下文</target>
        </trans-unit>
        <trans-unit id="8210da2b31209460470f1206d944b4b5ed1e46c1" translate="yes" xml:space="preserve">
          <source>creates a swarm named &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">创建一个名为 &lt;code&gt;default&lt;/code&gt; 的群集。</target>
        </trans-unit>
        <trans-unit id="6a0cbae42cdbc9625267436ae648db8276473a08" translate="yes" xml:space="preserve">
          <source>creates an overlay default IP addresses and subnet mask for your networks</source>
          <target state="translated">为您的网络创建一个覆盖的默认IP地址和子网掩码。</target>
        </trans-unit>
        <trans-unit id="60a0cd4fecf473c2718b7f1b5101c51f158e14d3" translate="yes" xml:space="preserve">
          <source>creates an overlay network named &lt;code&gt;ingress&lt;/code&gt; for publishing service ports external to the swarm.</source>
          <target state="translated">创建一个名为 &lt;code&gt;ingress&lt;/code&gt; 的覆盖网络，用于发布集群外部的服务端口。</target>
        </trans-unit>
        <trans-unit id="d3a88b62e5e6dfbfa253ecce53fc310936cc4503" translate="yes" xml:space="preserve">
          <source>credential_spec</source>
          <target state="translated">credential_spec</target>
        </trans-unit>
        <trans-unit id="6075904f3374be89efeb714b14cb7ac5ea52e8a3" translate="yes" xml:space="preserve">
          <source>currently supported:</source>
          <target state="translated">目前支持的。</target>
        </trans-unit>
        <trans-unit id="4eb7a17655440a77cf067e6d109036a13dfa5100" translate="yes" xml:space="preserve">
          <source>daemon</source>
          <target state="translated">daemon</target>
        </trans-unit>
        <trans-unit id="1150ba990a85c5918a823f8be6da892ae3a8713e" translate="yes" xml:space="preserve">
          <source>daemon (&lt;code&gt;daemon=&amp;lt;name or id&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">守护程序（ &lt;code&gt;daemon=&amp;lt;name or id&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="755d346c0e2ec02be51dc5d1b8e3c1a7d2c8a351" translate="yes" xml:space="preserve">
          <source>daemon is running on Windows server, or &lt;code&gt;hyperv&lt;/code&gt; if running on Windows client.</source>
          <target state="translated">守护程序在Windows服务器上运行，如果在Windows客户端上运行， &lt;code&gt;hyperv&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f7cf198dfb29436edaf34fc317327b3fbb012fe" translate="yes" xml:space="preserve">
          <source>dangling</source>
          <target state="translated">dangling</target>
        </trans-unit>
        <trans-unit id="aa456615a3f995734efe5b4b24739ee3b02d5364" translate="yes" xml:space="preserve">
          <source>dangling (boolean - true or false)</source>
          <target state="translated">悬垂(布尔值--真或假)</target>
        </trans-unit>
        <trans-unit id="407b7ee3e135f51fe5e12377435af2e75ee50851" translate="yes" xml:space="preserve">
          <source>dangling (boolean - true or false, 0 or 1)</source>
          <target state="translated">悬垂(布尔值--真或假,0或1</target>
        </trans-unit>
        <trans-unit id="32faaecac742100f7753f0c1d0aa0add01b4046b" translate="yes" xml:space="preserve">
          <source>debug</source>
          <target state="translated">debug</target>
        </trans-unit>
        <trans-unit id="6803cfd22f69617d3cd07144f64367faacd28779" translate="yes" xml:space="preserve">
          <source>decrease logging level by signaling &lt;code&gt;SIGUSR2&lt;/code&gt;</source>
          <target state="translated">通过信号 &lt;code&gt;SIGUSR2&lt;/code&gt; 降低日志记录级别</target>
        </trans-unit>
        <trans-unit id="7505d64a54e061b7acd54ccd58b49dc43500b635" translate="yes" xml:space="preserve">
          <source>default</source>
          <target state="translated">default</target>
        </trans-unit>
        <trans-unit id="31b469d4ada185a4574d3787f4dbf939e4f61407" translate="yes" xml:space="preserve">
          <source>default address pool in CIDR format</source>
          <target state="translated">CIDR格式的默认地址池</target>
        </trans-unit>
        <trans-unit id="5c7e89d3e0147873ef435b8bee3928159c8cc279" translate="yes" xml:space="preserve">
          <source>default address pool subnet mask length</source>
          <target state="translated">默认地址池子网掩码长度</target>
        </trans-unit>
        <trans-unit id="2fe30db6ace3d91c9ebca3a041f5baf8bf3dc859" translate="yes" xml:space="preserve">
          <source>default for local</source>
          <target state="translated">默认为本地</target>
        </trans-unit>
        <trans-unit id="d2e3207d92d2272c3e76100083d63d4503394196" translate="yes" xml:space="preserve">
          <source>default for remote</source>
          <target state="translated">默认为远程</target>
        </trans-unit>
        <trans-unit id="7b63e4d7ed03b9dcaf52939882ffbbf6b0fb0985" translate="yes" xml:space="preserve">
          <source>delegated</source>
          <target state="translated">delegated</target>
        </trans-unit>
        <trans-unit id="1797e6ebcb9eb49bdfd7ea799fa754652bacaf5c" translate="yes" xml:space="preserve">
          <source>delegation</source>
          <target state="translated">delegation</target>
        </trans-unit>
        <trans-unit id="9485989ff514b5106b7738850fd73c23e8c1e3f7" translate="yes" xml:space="preserve">
          <source>delete</source>
          <target state="translated">delete</target>
        </trans-unit>
        <trans-unit id="d992f35918ff4662dc2ff2c575252097361df68e" translate="yes" xml:space="preserve">
          <source>deny access to raw sockets (to prevent packet spoofing);</source>
          <target state="translated">拒绝访问原始套接字(以防止数据包欺骗)。</target>
        </trans-unit>
        <trans-unit id="aa6c0c809419398bbbac0a9b4c3912d07a2220dc" translate="yes" xml:space="preserve">
          <source>deny access to some filesystem operations, like creating new device nodes, changing the owner of files, or altering attributes (including the immutable flag);</source>
          <target state="translated">拒绝访问某些文件系统操作,如创建新的设备节点、改变文件的所有者或改变属性(包括不可变标志)。</target>
        </trans-unit>
        <trans-unit id="fb2f29039cd092d81687c48428a5f2121f9c4f56" translate="yes" xml:space="preserve">
          <source>deny all &amp;ldquo;mount&amp;rdquo; operations;</source>
          <target state="translated">拒绝所有&amp;ldquo;挂载&amp;rdquo;操作；</target>
        </trans-unit>
        <trans-unit id="7bb1e6b13c6b894dfd30206d3c9ba87246dccb73" translate="yes" xml:space="preserve">
          <source>deny module loading;</source>
          <target state="translated">拒绝模块加载。</target>
        </trans-unit>
        <trans-unit id="0cb4f09a238f2a12115366c6de3f3a20d777cc6c" translate="yes" xml:space="preserve">
          <source>depends_on</source>
          <target state="translated">depends_on</target>
        </trans-unit>
        <trans-unit id="b0d51b9ff91b623cc42b17c529b7c21c2ab57fb4" translate="yes" xml:space="preserve">
          <source>deploy</source>
          <target state="translated">deploy</target>
        </trans-unit>
        <trans-unit id="d24fd332f69c0b3cf27520da21626daa44887c4f" translate="yes" xml:space="preserve">
          <source>deploy &lt;code&gt;endpoint_mode&lt;/code&gt;</source>
          <target state="translated">部署 &lt;code&gt;endpoint_mode&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="000e6fe116b3e51c9200e49aa4a6a7a7110f1bea" translate="yes" xml:space="preserve">
          <source>deploying application services to the swarm</source>
          <target state="translated">将应用服务部署到蜂群中</target>
        </trans-unit>
        <trans-unit id="513b28ad3810ae4846ec6bb58921d48892ceb662" translate="yes" xml:space="preserve">
          <source>deprecated</source>
          <target state="translated">deprecated</target>
        </trans-unit>
        <trans-unit id="23cb1233761c7d24a10de70852fb9d34dbcc24fe" translate="yes" xml:space="preserve">
          <source>description of the args.</source>
          <target state="translated">对args的描述。</target>
        </trans-unit>
        <trans-unit id="0aaafb870ec335e20e02a052a24a58a2ea41fe6a" translate="yes" xml:space="preserve">
          <source>description of the device.</source>
          <target state="translated">设备的描述。</target>
        </trans-unit>
        <trans-unit id="fdae7f541f0f274296289e9983437e794e9c0569" translate="yes" xml:space="preserve">
          <source>description of the env.</source>
          <target state="translated">对环境的描述。</target>
        </trans-unit>
        <trans-unit id="43916869818df51a34ae6de96508188a045a6f6c" translate="yes" xml:space="preserve">
          <source>description of the mount.</source>
          <target state="translated">的描述,峁。</target>
        </trans-unit>
        <trans-unit id="9ff4353fa5929fd4a4e45e94af87ab8ef5fa1ea8" translate="yes" xml:space="preserve">
          <source>description of the plugin</source>
          <target state="translated">插件描述</target>
        </trans-unit>
        <trans-unit id="f2c908912d7d0334bd8a3c314546caf0ca96b6d0" translate="yes" xml:space="preserve">
          <source>designates the current node as a leader manager node for the swarm.</source>
          <target state="translated">指定当前节点为蜂群的领导者管理节点。</target>
        </trans-unit>
        <trans-unit id="7817fbe88bc4b81804b15149f4df931ab22f2d6d" translate="yes" xml:space="preserve">
          <source>desired-state</source>
          <target state="translated">desired-state</target>
        </trans-unit>
        <trans-unit id="369a054d54eeb0723e0cb5de25e51a5e6c07db51" translate="yes" xml:space="preserve">
          <source>destination of the mount.</source>
          <target state="translated">的目标。</target>
        </trans-unit>
        <trans-unit id="12a8e8a50678cf8f074f076c78f30052b450de33" translate="yes" xml:space="preserve">
          <source>detached or foreground running</source>
          <target state="translated">旁门左道</target>
        </trans-unit>
        <trans-unit id="ee1bdf9223feb091410e6c3c27508b170cce910a" translate="yes" xml:space="preserve">
          <source>device mapper storage driver</source>
          <target state="translated">设备映射器存储驱动程序</target>
        </trans-unit>
        <trans-unit id="06d51b4232849fe6d9668ae686fff244c899404e" translate="yes" xml:space="preserve">
          <source>device of the plugin, (&lt;em&gt;Linux only&lt;/em&gt;), struct consisting of the following fields, see &lt;a href=&quot;https://github.com/opencontainers/runtime-spec/blob/master/config-linux/#devices&quot;&gt;&lt;code&gt;DEVICES&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">插件的设备（&lt;em&gt;仅Linux&lt;/em&gt;），结构由以下字段组成，请参见&lt;a href=&quot;https://github.com/opencontainers/runtime-spec/blob/master/config-linux/#devices&quot;&gt; &lt;code&gt;DEVICES&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="035021e0bd6863d1978d309d8de96e712f4c6efd" translate="yes" xml:space="preserve">
          <source>device_cgroup_rules</source>
          <target state="translated">device_cgroup_rules</target>
        </trans-unit>
        <trans-unit id="de39793c69b7cabcffa240016194f7a7b693509b" translate="yes" xml:space="preserve">
          <source>device_read_bps, device_write_bps</source>
          <target state="translated">device_read_bps,device_write_bps。</target>
        </trans-unit>
        <trans-unit id="7df8d03a0eda51f0287bd5b43189f23c151c4101" translate="yes" xml:space="preserve">
          <source>device_read_iops, device_write_iops</source>
          <target state="translated">device_read_iops,device_write_iops。</target>
        </trans-unit>
        <trans-unit id="728190e74db38b003067ac3f46c3ad71c016f5d9" translate="yes" xml:space="preserve">
          <source>devices</source>
          <target state="translated">devices</target>
        </trans-unit>
        <trans-unit id="abbc90e006c2d9b123e8a882a69855595d3a702a" translate="yes" xml:space="preserve">
          <source>dns</source>
          <target state="translated">dns</target>
        </trans-unit>
        <trans-unit id="638265ce6e9ab3e889182fa6b16d479a8fb13d41" translate="yes" xml:space="preserve">
          <source>dns_opt</source>
          <target state="translated">dns_opt</target>
        </trans-unit>
        <trans-unit id="554ee72c306055d62f6e69717ba04ae5e7f2e420" translate="yes" xml:space="preserve">
          <source>dns_search</source>
          <target state="translated">dns_search</target>
        </trans-unit>
        <trans-unit id="e982f17bcbe0f724063b708a4f76db211a999304" translate="yes" xml:space="preserve">
          <source>docker</source>
          <target state="translated">docker</target>
        </trans-unit>
        <trans-unit id="fda6c48c0f33e52f617e78fe9f1e923c553c61a4" translate="yes" xml:space="preserve">
          <source>docker (2376/tcp)</source>
          <target state="translated">docker (2376/tcp)</target>
        </trans-unit>
        <trans-unit id="ea22bff2b3fff95d9bef5034b5ec41832f0ce1bb" translate="yes" xml:space="preserve">
          <source>docker attach</source>
          <target state="translated">docker attach</target>
        </trans-unit>
        <trans-unit id="b48577ef56cc4d23ec1b593cd057873876929df9" translate="yes" xml:space="preserve">
          <source>docker build</source>
          <target state="translated">构建docker</target>
        </trans-unit>
        <trans-unit id="50aa9faeef22922e2ab98c37d35d71de93191c6e" translate="yes" xml:space="preserve">
          <source>docker builder</source>
          <target state="translated">docker构建器</target>
        </trans-unit>
        <trans-unit id="b4fa2dc8c5105ea1a89a1e9c215d5d8d9898ae72" translate="yes" xml:space="preserve">
          <source>docker builder build</source>
          <target state="translated">构建docker</target>
        </trans-unit>
        <trans-unit id="12831cddd0cfe3d9141067ce6c8028e1fec01370" translate="yes" xml:space="preserve">
          <source>docker builder prune</source>
          <target state="translated">docker builder prune</target>
        </trans-unit>
        <trans-unit id="98614ca3f879780707fb76d469dab3bbb52cd182" translate="yes" xml:space="preserve">
          <source>docker checkpoint</source>
          <target state="translated">docker检查点</target>
        </trans-unit>
        <trans-unit id="5769122f5990b4c735055a1415b0b6301d82afb3" translate="yes" xml:space="preserve">
          <source>docker checkpoint create</source>
          <target state="translated">创建docker检查点</target>
        </trans-unit>
        <trans-unit id="b6dcd243c11b461d247c34adc5f4ef5910c2ec0a" translate="yes" xml:space="preserve">
          <source>docker checkpoint ls</source>
          <target state="translated">docker checkpoint ls</target>
        </trans-unit>
        <trans-unit id="c5c7839cc6bc867cad37b1dad8dea516116f83e8" translate="yes" xml:space="preserve">
          <source>docker checkpoint rm</source>
          <target state="translated">docker checkpoint rm</target>
        </trans-unit>
        <trans-unit id="2d327be8aefd2df36694adf9677427549bf57d3f" translate="yes" xml:space="preserve">
          <source>docker commit</source>
          <target state="translated">docker提交</target>
        </trans-unit>
        <trans-unit id="02b0b51711b3060f3d2abd3678d8824a85c3e541" translate="yes" xml:space="preserve">
          <source>docker config</source>
          <target state="translated">docker配置</target>
        </trans-unit>
        <trans-unit id="619c16a434db4b29f671feda67183543ca5bfee1" translate="yes" xml:space="preserve">
          <source>docker config create</source>
          <target state="translated">docker配置创建</target>
        </trans-unit>
        <trans-unit id="ed23b2e3aaaceede1a9ea090744dbec1e68c5ecf" translate="yes" xml:space="preserve">
          <source>docker config inspect</source>
          <target state="translated">docker配置检查</target>
        </trans-unit>
        <trans-unit id="486baff01c31274949910466a35fff068da88134" translate="yes" xml:space="preserve">
          <source>docker config ls</source>
          <target state="translated">docker config ls</target>
        </trans-unit>
        <trans-unit id="f32c2b3d4ba7ec23c7507f92c89767333c5b5923" translate="yes" xml:space="preserve">
          <source>docker config rm</source>
          <target state="translated">docker config rm</target>
        </trans-unit>
        <trans-unit id="be0265d2da1a2d3d3015f7f3cf7f533b58add7d4" translate="yes" xml:space="preserve">
          <source>docker container</source>
          <target state="translated">docker容器</target>
        </trans-unit>
        <trans-unit id="449d6465d56b21218ab9e16a230883e074c3fd9b" translate="yes" xml:space="preserve">
          <source>docker container attach</source>
          <target state="translated">docker容器附加</target>
        </trans-unit>
        <trans-unit id="d7093d938e7cf5f872453c4eadd677bc196dd8be" translate="yes" xml:space="preserve">
          <source>docker container commit</source>
          <target state="translated">docker容器提交</target>
        </trans-unit>
        <trans-unit id="21efb9121feb7c287fda637161dd674778287337" translate="yes" xml:space="preserve">
          <source>docker container cp</source>
          <target state="translated">docker容器cp</target>
        </trans-unit>
        <trans-unit id="0c787dbc5b99600311082b3244686fcb0c8602a4" translate="yes" xml:space="preserve">
          <source>docker container create</source>
          <target state="translated">创建docker容器</target>
        </trans-unit>
        <trans-unit id="413918cd8d043c58d24fd08a1f371aec0562c945" translate="yes" xml:space="preserve">
          <source>docker container diff</source>
          <target state="translated">docker容器差异</target>
        </trans-unit>
        <trans-unit id="412e0de7556959638912838a6ac9e0718e8b71ac" translate="yes" xml:space="preserve">
          <source>docker container exec</source>
          <target state="translated">docker容器执行器</target>
        </trans-unit>
        <trans-unit id="b9ca466bb5e8c7731bb7ed884cf4a5cfca00ec29" translate="yes" xml:space="preserve">
          <source>docker container export</source>
          <target state="translated">docker容器导出</target>
        </trans-unit>
        <trans-unit id="eabcd45dbc536eefc146afedf429edbf66d85a8f" translate="yes" xml:space="preserve">
          <source>docker container inspect</source>
          <target state="translated">docker容器检查</target>
        </trans-unit>
        <trans-unit id="2bb9806498b547a78b89a2ec361eecd901e1502f" translate="yes" xml:space="preserve">
          <source>docker container kill</source>
          <target state="translated">docker容器杀</target>
        </trans-unit>
        <trans-unit id="5257311fb57fdaf500cf881df8ee0c523bb036bd" translate="yes" xml:space="preserve">
          <source>docker container logs</source>
          <target state="translated">docker容器日志</target>
        </trans-unit>
        <trans-unit id="e723dfdbdf248b0d9c6cd89a07b78f6adb27c090" translate="yes" xml:space="preserve">
          <source>docker container ls</source>
          <target state="translated">docker容器ls</target>
        </trans-unit>
        <trans-unit id="f698614ca2e867a9f72da97483696f5f22e555e9" translate="yes" xml:space="preserve">
          <source>docker container pause</source>
          <target state="translated">docker容器暂停</target>
        </trans-unit>
        <trans-unit id="3e444bc4860fa15c71abb2a1554890573806ca50" translate="yes" xml:space="preserve">
          <source>docker container port</source>
          <target state="translated">docker容器端口</target>
        </trans-unit>
        <trans-unit id="f7702239c4b850b7de6042a19558e6a0382c5f75" translate="yes" xml:space="preserve">
          <source>docker container prune</source>
          <target state="translated">docker容器修剪</target>
        </trans-unit>
        <trans-unit id="20b1f18e94d3ee69e5678f21304c42b64c4ed16e" translate="yes" xml:space="preserve">
          <source>docker container rename</source>
          <target state="translated">docker容器重命名</target>
        </trans-unit>
        <trans-unit id="e63ea83408355255bd8f1635378db28392adee49" translate="yes" xml:space="preserve">
          <source>docker container restart</source>
          <target state="translated">docker容器重启</target>
        </trans-unit>
        <trans-unit id="2e03415c12cd17fa7df1e52b6bf242b7fcae4603" translate="yes" xml:space="preserve">
          <source>docker container rm</source>
          <target state="translated">docker容器 rm</target>
        </trans-unit>
        <trans-unit id="17f24daf7182f0f8523c2373dc56391d73bb71a5" translate="yes" xml:space="preserve">
          <source>docker container run</source>
          <target state="translated">docker容器运行</target>
        </trans-unit>
        <trans-unit id="193368134be4f9fd10e5c64554b2ca1ea9be4660" translate="yes" xml:space="preserve">
          <source>docker container start</source>
          <target state="translated">docker容器启动</target>
        </trans-unit>
        <trans-unit id="0770e8d442c814a9f2f3dfab19246fcd64aa21a4" translate="yes" xml:space="preserve">
          <source>docker container stats</source>
          <target state="translated">docker容器统计</target>
        </trans-unit>
        <trans-unit id="c2c31de3a0954f5899c4a02ef75867fa61c84968" translate="yes" xml:space="preserve">
          <source>docker container stop</source>
          <target state="translated">docker容器停止</target>
        </trans-unit>
        <trans-unit id="87e4a1103f9cdcff1c9108441145e44b2cc317be" translate="yes" xml:space="preserve">
          <source>docker container top</source>
          <target state="translated">docker容器顶部</target>
        </trans-unit>
        <trans-unit id="9eabc5b988227426ea7f17d2caed190087c2cc4d" translate="yes" xml:space="preserve">
          <source>docker container unpause</source>
          <target state="translated">docker容器卸载</target>
        </trans-unit>
        <trans-unit id="c882a0d59582a8d7ac998f2ee47bfef739692ea1" translate="yes" xml:space="preserve">
          <source>docker container update</source>
          <target state="translated">docker容器更新</target>
        </trans-unit>
        <trans-unit id="f9ca077b1cd732abc712da85c40cc9f0c4488244" translate="yes" xml:space="preserve">
          <source>docker container wait</source>
          <target state="translated">docker容器等待</target>
        </trans-unit>
        <trans-unit id="d93fd0b8224f638aeedfb3378e4358e2d0d2b5ac" translate="yes" xml:space="preserve">
          <source>docker context</source>
          <target state="translated">docker上下文</target>
        </trans-unit>
        <trans-unit id="093724d5a2dcc9af7ac7e0d9ad56bf3d826a00a2" translate="yes" xml:space="preserve">
          <source>docker context create</source>
          <target state="translated">docker上下文创建</target>
        </trans-unit>
        <trans-unit id="fa585c621a2ea674546d856abc6c184279e3c411" translate="yes" xml:space="preserve">
          <source>docker context export</source>
          <target state="translated">docker上下文导出</target>
        </trans-unit>
        <trans-unit id="3000d2a159a8f2ee79e45d9b6d1c94a9b64c62c7" translate="yes" xml:space="preserve">
          <source>docker context import</source>
          <target state="translated">docker context import</target>
        </trans-unit>
        <trans-unit id="6c36598c06c2c9ae7f093162a9b97852244d9b68" translate="yes" xml:space="preserve">
          <source>docker context inspect</source>
          <target state="translated">docker上下文检查</target>
        </trans-unit>
        <trans-unit id="ca4cadb33fe3b1eccea0004dd1b424eae969517a" translate="yes" xml:space="preserve">
          <source>docker context ls</source>
          <target state="translated">docker context ls</target>
        </trans-unit>
        <trans-unit id="738983760e0737392d0ec7d58f5f167cb508ac59" translate="yes" xml:space="preserve">
          <source>docker context rm</source>
          <target state="translated">docker context rm</target>
        </trans-unit>
        <trans-unit id="869b887ad1f0f72fba9e24964209ce059458ab9f" translate="yes" xml:space="preserve">
          <source>docker context update</source>
          <target state="translated">docker上下文更新</target>
        </trans-unit>
        <trans-unit id="192654565a697da234ccc0b971196c7189b9f416" translate="yes" xml:space="preserve">
          <source>docker context use</source>
          <target state="translated">docker上下文使用</target>
        </trans-unit>
        <trans-unit id="1901312574e7cf844e4f98a993ff04b025677ced" translate="yes" xml:space="preserve">
          <source>docker cp</source>
          <target state="translated">docker cp</target>
        </trans-unit>
        <trans-unit id="a473d615dcd9931c96f2280cbc55edd2d99a15c1" translate="yes" xml:space="preserve">
          <source>docker create</source>
          <target state="translated">创建docker</target>
        </trans-unit>
        <trans-unit id="703cbfa9ad8834ba2000fa2952c10c36a8ac12b5" translate="yes" xml:space="preserve">
          <source>docker deploy</source>
          <target state="translated">docker部署</target>
        </trans-unit>
        <trans-unit id="9b5cf9827701e96d96a43ae3ba53b29c1930dd62" translate="yes" xml:space="preserve">
          <source>docker diff</source>
          <target state="translated">docker diff</target>
        </trans-unit>
        <trans-unit id="0ee8b60dbcda35c070998514ab6245c10fc288fa" translate="yes" xml:space="preserve">
          <source>docker engine</source>
          <target state="translated">docker引擎</target>
        </trans-unit>
        <trans-unit id="462ea11a193b521afbd4fc9c550a6e80707c1771" translate="yes" xml:space="preserve">
          <source>docker engine activate</source>
          <target state="translated">激活docker引擎</target>
        </trans-unit>
        <trans-unit id="7e6328136aef1cc2d7df2787caac47edead98d23" translate="yes" xml:space="preserve">
          <source>docker engine check</source>
          <target state="translated">Docker引擎检查</target>
        </trans-unit>
        <trans-unit id="295d0e2743b6bbae7b659f2fca3118fc69e030fe" translate="yes" xml:space="preserve">
          <source>docker engine update</source>
          <target state="translated">docker引擎更新</target>
        </trans-unit>
        <trans-unit id="d58902bb42f0189a55355b114cd86ffa57d5fb44" translate="yes" xml:space="preserve">
          <source>docker events</source>
          <target state="translated">docker事件</target>
        </trans-unit>
        <trans-unit id="5f8253ea194c7dd42ec7d419cba7a88903649c65" translate="yes" xml:space="preserve">
          <source>docker exec</source>
          <target state="translated">docker执行器</target>
        </trans-unit>
        <trans-unit id="a59224a6fd9278ba936f7dcea82e847c6d235294" translate="yes" xml:space="preserve">
          <source>docker export</source>
          <target state="translated">docker导出</target>
        </trans-unit>
        <trans-unit id="7cfd82b0b7ce80f225b0e0688ad466445aea06d9" translate="yes" xml:space="preserve">
          <source>docker history</source>
          <target state="translated">docker历史</target>
        </trans-unit>
        <trans-unit id="4617ea1fe6c1656f2c6a6a235927ec9b20c0469f" translate="yes" xml:space="preserve">
          <source>docker image</source>
          <target state="translated">docker镜像</target>
        </trans-unit>
        <trans-unit id="729df89e741466993c016e96d4607682a4622f41" translate="yes" xml:space="preserve">
          <source>docker image build</source>
          <target state="translated">构建docker镜像</target>
        </trans-unit>
        <trans-unit id="5f71a4adb8fadf1e3ac8cc50b62fe032931343b9" translate="yes" xml:space="preserve">
          <source>docker image history</source>
          <target state="translated">docker镜像历史</target>
        </trans-unit>
        <trans-unit id="3b5c800d3c7fc8ab516c0e51d93675c922c83d55" translate="yes" xml:space="preserve">
          <source>docker image import</source>
          <target state="translated">docker image import</target>
        </trans-unit>
        <trans-unit id="b2b14fe92dd848f673e61c02d1e511d848337cfe" translate="yes" xml:space="preserve">
          <source>docker image inspect</source>
          <target state="translated">docker镜像检查</target>
        </trans-unit>
        <trans-unit id="76f9abefbc4a41ae6df0322b871ae52b95e7a8e3" translate="yes" xml:space="preserve">
          <source>docker image load</source>
          <target state="translated">docker镜像加载</target>
        </trans-unit>
        <trans-unit id="c2a3ca93e2f5d46d1834d7686012bcd63f3a3f1b" translate="yes" xml:space="preserve">
          <source>docker image ls</source>
          <target state="translated">docker image ls</target>
        </trans-unit>
        <trans-unit id="21400836c6209513abdc5cca75713903a9eec8de" translate="yes" xml:space="preserve">
          <source>docker image prune</source>
          <target state="translated">docker镜像修剪</target>
        </trans-unit>
        <trans-unit id="57635fd8be9b77133aa4e3f57de25a11ea80d50e" translate="yes" xml:space="preserve">
          <source>docker image pull</source>
          <target state="translated">docker image pull</target>
        </trans-unit>
        <trans-unit id="b6f32739c8aa7671ac9f6a03ce417415eeade39e" translate="yes" xml:space="preserve">
          <source>docker image push</source>
          <target state="translated">docker镜像推送</target>
        </trans-unit>
        <trans-unit id="52f816f8f73d6c8e218f22e70be0997e23a7d5b1" translate="yes" xml:space="preserve">
          <source>docker image rm</source>
          <target state="translated">docker image rm</target>
        </trans-unit>
        <trans-unit id="54088e0c68df5eef2f6700a9f8016af045e9b3da" translate="yes" xml:space="preserve">
          <source>docker image save</source>
          <target state="translated">保存docker镜像</target>
        </trans-unit>
        <trans-unit id="6fe3832fba85e227f4e77e110ce0f1fa324a552e" translate="yes" xml:space="preserve">
          <source>docker image tag</source>
          <target state="translated">docker图像标签</target>
        </trans-unit>
        <trans-unit id="57e5029c4aa19e485f0e739d593aef6623d0c99e" translate="yes" xml:space="preserve">
          <source>docker images</source>
          <target state="translated">docker图像</target>
        </trans-unit>
        <trans-unit id="99d97ee8649af47a26be5e09ae3132ca39b49fd2" translate="yes" xml:space="preserve">
          <source>docker import</source>
          <target state="translated">docker导入</target>
        </trans-unit>
        <trans-unit id="c59521be2579ff366972a6b559915a2a05a5faeb" translate="yes" xml:space="preserve">
          <source>docker info</source>
          <target state="translated">docker信息</target>
        </trans-unit>
        <trans-unit id="f401c42378c061bcd9c2ad0aeb05119b7cf93137" translate="yes" xml:space="preserve">
          <source>docker inspect</source>
          <target state="translated">docker检查</target>
        </trans-unit>
        <trans-unit id="b17fda6e9d2818fc25a20831b1ed265d45ed758c" translate="yes" xml:space="preserve">
          <source>docker kill</source>
          <target state="translated">docker kill</target>
        </trans-unit>
        <trans-unit id="ed2c2f028f0d28637b58e9181134b92abd364287" translate="yes" xml:space="preserve">
          <source>docker load</source>
          <target state="translated">docker加载</target>
        </trans-unit>
        <trans-unit id="915f61f7c6198df031fa9db8a2aeaaf5220890ac" translate="yes" xml:space="preserve">
          <source>docker login</source>
          <target state="translated">docker登录</target>
        </trans-unit>
        <trans-unit id="f83cdaa8a922e8a2c46c3889dfdc8fc6c9653963" translate="yes" xml:space="preserve">
          <source>docker logout</source>
          <target state="translated">docker logout</target>
        </trans-unit>
        <trans-unit id="eec027039e03a0e9deae6f8e4003c081f0f475dd" translate="yes" xml:space="preserve">
          <source>docker logs</source>
          <target state="translated">docker日志</target>
        </trans-unit>
        <trans-unit id="9ae5e776c3dcb3eda15079dfa76ddea94ca039f4" translate="yes" xml:space="preserve">
          <source>docker manifest</source>
          <target state="translated">docker清单</target>
        </trans-unit>
        <trans-unit id="abb6348634362c059825f40c5421749a5c98bba2" translate="yes" xml:space="preserve">
          <source>docker manifest annotate</source>
          <target state="translated">docker manifest annotate</target>
        </trans-unit>
        <trans-unit id="1dce34eadcffb78bd772e82ba25a58b4344e65f0" translate="yes" xml:space="preserve">
          <source>docker manifest create</source>
          <target state="translated">创建docker清单</target>
        </trans-unit>
        <trans-unit id="e19a521d47c8c55401b270eaeba98b341d398ef0" translate="yes" xml:space="preserve">
          <source>docker manifest inspect</source>
          <target state="translated">docker清单检查</target>
        </trans-unit>
        <trans-unit id="7c6beda03e7a70de970baaf87853dbad0d7de2ca" translate="yes" xml:space="preserve">
          <source>docker manifest push</source>
          <target state="translated">docker清单推送</target>
        </trans-unit>
        <trans-unit id="68dba0762366e2dfdf8ba89621ab149278519096" translate="yes" xml:space="preserve">
          <source>docker network</source>
          <target state="translated">docker网络</target>
        </trans-unit>
        <trans-unit id="1a17cc9b5915971b68c5ab3bf6f22ff0df51b22c" translate="yes" xml:space="preserve">
          <source>docker network connect</source>
          <target state="translated">docker网络连接</target>
        </trans-unit>
        <trans-unit id="ebf83ee531d2e9f408519499f4309e413c1d761b" translate="yes" xml:space="preserve">
          <source>docker network create</source>
          <target state="translated">创建docker网络</target>
        </trans-unit>
        <trans-unit id="acecd8e9fab692d3ae896a05fcf5d264c2e9ee96" translate="yes" xml:space="preserve">
          <source>docker network disconnect</source>
          <target state="translated">docker网络断开</target>
        </trans-unit>
        <trans-unit id="0958695c4a8c058e0ab55fc82393186d5c9a9603" translate="yes" xml:space="preserve">
          <source>docker network inspect</source>
          <target state="translated">docker网络检查</target>
        </trans-unit>
        <trans-unit id="0018bd62cc03ce4e5448714d408f234d5722634b" translate="yes" xml:space="preserve">
          <source>docker network ls</source>
          <target state="translated">docker network ls</target>
        </trans-unit>
        <trans-unit id="9360ddd01918fb5f4b43122cc9a33da58a0e0d95" translate="yes" xml:space="preserve">
          <source>docker network prune</source>
          <target state="translated">docker网络修剪</target>
        </trans-unit>
        <trans-unit id="ba189d61507e91d54aa87165055c180be6a86531" translate="yes" xml:space="preserve">
          <source>docker network rm</source>
          <target state="translated">docker network rm</target>
        </trans-unit>
        <trans-unit id="b72fa4a53f947b483edbd406e2ec9849dc7fecc1" translate="yes" xml:space="preserve">
          <source>docker node</source>
          <target state="translated">docker节点</target>
        </trans-unit>
        <trans-unit id="39b4d5083713017a39ac79c4c24645273eae9d4a" translate="yes" xml:space="preserve">
          <source>docker node demote</source>
          <target state="translated">docker node demote</target>
        </trans-unit>
        <trans-unit id="468f0856bf925205d13405471d94fdb0da699820" translate="yes" xml:space="preserve">
          <source>docker node inspect</source>
          <target state="translated">docker节点检查</target>
        </trans-unit>
        <trans-unit id="d2e92120e72cff2b1a32c8dc4d8951e11d30c2dc" translate="yes" xml:space="preserve">
          <source>docker node ls</source>
          <target state="translated">docker node ls</target>
        </trans-unit>
        <trans-unit id="4e8310e029e77dcdb944f306aef8ec41e8c948a4" translate="yes" xml:space="preserve">
          <source>docker node promote</source>
          <target state="translated">docker node promote</target>
        </trans-unit>
        <trans-unit id="1862b66a3d23b86cf1319ac471cc73a98d5b4986" translate="yes" xml:space="preserve">
          <source>docker node ps</source>
          <target state="translated">docker node ps</target>
        </trans-unit>
        <trans-unit id="6c159f8e16fd4bcd704d51beef8c9b03e97b6f3d" translate="yes" xml:space="preserve">
          <source>docker node rm</source>
          <target state="translated">docker node rm</target>
        </trans-unit>
        <trans-unit id="e161c88e843eaeab17747445f7f28c44161da9cc" translate="yes" xml:space="preserve">
          <source>docker node update</source>
          <target state="translated">docker节点更新</target>
        </trans-unit>
        <trans-unit id="0a820a23077169843c25cf52c4c08a0f7ee2c395" translate="yes" xml:space="preserve">
          <source>docker pause</source>
          <target state="translated">docker暂停</target>
        </trans-unit>
        <trans-unit id="dd83c78626a16b8c9ecb8528633e13d8ba44d79a" translate="yes" xml:space="preserve">
          <source>docker plugin</source>
          <target state="translated">docker插件</target>
        </trans-unit>
        <trans-unit id="17d14c5092b8c587927acb480cfe22092d63f1a7" translate="yes" xml:space="preserve">
          <source>docker plugin create</source>
          <target state="translated">创建docker插件</target>
        </trans-unit>
        <trans-unit id="9b8426b1ecaa8438da56ec4c231c006415b3914a" translate="yes" xml:space="preserve">
          <source>docker plugin disable</source>
          <target state="translated">关闭docker插件</target>
        </trans-unit>
        <trans-unit id="90bbf756928168c5694102080543400d8db21eee" translate="yes" xml:space="preserve">
          <source>docker plugin enable</source>
          <target state="translated">启用docker插件</target>
        </trans-unit>
        <trans-unit id="2c4851fc61f6bee3f82c70e444a34e34f37accf6" translate="yes" xml:space="preserve">
          <source>docker plugin inspect</source>
          <target state="translated">docker插件检查</target>
        </trans-unit>
        <trans-unit id="020bc3afd1492e52c7aa709c3f0e12f58e8b755a" translate="yes" xml:space="preserve">
          <source>docker plugin install</source>
          <target state="translated">docker插件安装</target>
        </trans-unit>
        <trans-unit id="de4edc5d917fb534ca86f27e7505fba79ed4f4fe" translate="yes" xml:space="preserve">
          <source>docker plugin ls</source>
          <target state="translated">docker插件 ls</target>
        </trans-unit>
        <trans-unit id="919076a879371ac280bd922a98a20bbd886aa60c" translate="yes" xml:space="preserve">
          <source>docker plugin push</source>
          <target state="translated">docker插件推送</target>
        </trans-unit>
        <trans-unit id="0a9400a4907f334b0f454834c9a6e1d74c8cc189" translate="yes" xml:space="preserve">
          <source>docker plugin rm</source>
          <target state="translated">docker插件 rm</target>
        </trans-unit>
        <trans-unit id="cc17a6ab2ec1726946358cf459a75b4a49c878cf" translate="yes" xml:space="preserve">
          <source>docker plugin set</source>
          <target state="translated">docker插件集</target>
        </trans-unit>
        <trans-unit id="2753bfda66b84db4131321ff06533be058370d00" translate="yes" xml:space="preserve">
          <source>docker plugin upgrade</source>
          <target state="translated">docker插件升级</target>
        </trans-unit>
        <trans-unit id="5ad2f1ec2238bd60e2147f30bc07f7d5eb5e79eb" translate="yes" xml:space="preserve">
          <source>docker port</source>
          <target state="translated">docker端口</target>
        </trans-unit>
        <trans-unit id="30faf94a5c2597de23709bfea957c60535d63a74" translate="yes" xml:space="preserve">
          <source>docker ps</source>
          <target state="translated">docker ps</target>
        </trans-unit>
        <trans-unit id="e11ac3bb4e275a9379fe37026e592813b96650a2" translate="yes" xml:space="preserve">
          <source>docker pull</source>
          <target state="translated">docker拉</target>
        </trans-unit>
        <trans-unit id="2fe2df6403e7eed9b736c027dcac2cdc7cd999ec" translate="yes" xml:space="preserve">
          <source>docker push</source>
          <target state="translated">docker推送</target>
        </trans-unit>
        <trans-unit id="78c85c5e1f02b9ed9647541654abdbbf3c382720" translate="yes" xml:space="preserve">
          <source>docker rename</source>
          <target state="translated">docker rename</target>
        </trans-unit>
        <trans-unit id="5e73d4337219fd10c406b70b373a1a79ba027dc1" translate="yes" xml:space="preserve">
          <source>docker restart</source>
          <target state="translated">docker重启</target>
        </trans-unit>
        <trans-unit id="d4ce48ec1cb7006fdf4232ed704da023705948fd" translate="yes" xml:space="preserve">
          <source>docker rm</source>
          <target state="translated">docker rm</target>
        </trans-unit>
        <trans-unit id="cbfd9ca8fc6d512fbfc90ed74c8c843af0173f60" translate="yes" xml:space="preserve">
          <source>docker rmi</source>
          <target state="translated">docker rmi</target>
        </trans-unit>
        <trans-unit id="247f398fbcaead399b3be59a472ba648e0c8d022" translate="yes" xml:space="preserve">
          <source>docker run</source>
          <target state="translated">docker运行</target>
        </trans-unit>
        <trans-unit id="8166f10764f4c9025cd4e72f81d845d825a7a38e" translate="yes" xml:space="preserve">
          <source>docker save</source>
          <target state="translated">docker保存</target>
        </trans-unit>
        <trans-unit id="f24f165eba54fbb600152602c385669f6313291c" translate="yes" xml:space="preserve">
          <source>docker search</source>
          <target state="translated">docker搜索</target>
        </trans-unit>
        <trans-unit id="45257c5a7f98281737809248947037fc06691fe1" translate="yes" xml:space="preserve">
          <source>docker secret</source>
          <target state="translated">秘密</target>
        </trans-unit>
        <trans-unit id="bc0396a205746779d62c97187b7995c7c457564d" translate="yes" xml:space="preserve">
          <source>docker secret create</source>
          <target state="translated">创建docker秘密</target>
        </trans-unit>
        <trans-unit id="7228820b5be096ddfd0daca9d935c359f7fb1314" translate="yes" xml:space="preserve">
          <source>docker secret inspect</source>
          <target state="translated">docker秘密检查</target>
        </trans-unit>
        <trans-unit id="c5b697c1b30a34072019661d47f38a2717d476de" translate="yes" xml:space="preserve">
          <source>docker secret ls</source>
          <target state="translated">docker secret ls</target>
        </trans-unit>
        <trans-unit id="b7a0148cde8c94b9597a5c6b3c5dbee22d840972" translate="yes" xml:space="preserve">
          <source>docker secret rm</source>
          <target state="translated">docker secret rm</target>
        </trans-unit>
        <trans-unit id="69b5201730d3661c5cfe98538ff50056b59e089e" translate="yes" xml:space="preserve">
          <source>docker service</source>
          <target state="translated">docker服务</target>
        </trans-unit>
        <trans-unit id="780a466b100415fa94e2458740edcb383157de68" translate="yes" xml:space="preserve">
          <source>docker service create</source>
          <target state="translated">创建docker服务</target>
        </trans-unit>
        <trans-unit id="0c5a0c710c1ac888f5c7940c02008ece3ec6ab72" translate="yes" xml:space="preserve">
          <source>docker service inspect</source>
          <target state="translated">docker服务检查</target>
        </trans-unit>
        <trans-unit id="a3a35b7af4b5f5e6e8f4ff433f9b7fcbb5afe740" translate="yes" xml:space="preserve">
          <source>docker service logs</source>
          <target state="translated">docker服务日志</target>
        </trans-unit>
        <trans-unit id="3dcbd5a69b8b430238376534206c4f9f811b4a3b" translate="yes" xml:space="preserve">
          <source>docker service ls</source>
          <target state="translated">docker service ls</target>
        </trans-unit>
        <trans-unit id="d37e98df534569cb885ee4164d944f90f8b52718" translate="yes" xml:space="preserve">
          <source>docker service ps</source>
          <target state="translated">docker service ps</target>
        </trans-unit>
        <trans-unit id="de54e816d62976a07e48cff4165bfbcbd1822ca1" translate="yes" xml:space="preserve">
          <source>docker service rm</source>
          <target state="translated">docker service rm</target>
        </trans-unit>
        <trans-unit id="e979e38c1e967d568754ec91c6d5bcd2a1930f2e" translate="yes" xml:space="preserve">
          <source>docker service rollback</source>
          <target state="translated">docker服务回滚</target>
        </trans-unit>
        <trans-unit id="457c0d4a9452f808ca782c34126516f0c23a8ac4" translate="yes" xml:space="preserve">
          <source>docker service scale</source>
          <target state="translated">docker服务规模</target>
        </trans-unit>
        <trans-unit id="e624dad6f15a86afd585d954c9c1e7e00eba6ec8" translate="yes" xml:space="preserve">
          <source>docker service update</source>
          <target state="translated">docker服务更新</target>
        </trans-unit>
        <trans-unit id="0af7c5cc8541ae63054a5be571159ee7f81e216f" translate="yes" xml:space="preserve">
          <source>docker stack</source>
          <target state="translated">docker堆栈</target>
        </trans-unit>
        <trans-unit id="1358ca57ed8d9f9557b3ba1eec7a4593d4faf567" translate="yes" xml:space="preserve">
          <source>docker stack deploy</source>
          <target state="translated">docker堆栈部署</target>
        </trans-unit>
        <trans-unit id="6c452c355fb4182bcc13ae15ff466be1eebad1ab" translate="yes" xml:space="preserve">
          <source>docker stack ls</source>
          <target state="translated">docker stack ls</target>
        </trans-unit>
        <trans-unit id="120cc664c44fc77c3f117148fddfb3df87609458" translate="yes" xml:space="preserve">
          <source>docker stack ps</source>
          <target state="translated">docker stack ps</target>
        </trans-unit>
        <trans-unit id="8835b1606336411c738e56f60603a1e6dff43a67" translate="yes" xml:space="preserve">
          <source>docker stack rm</source>
          <target state="translated">docker stack rm</target>
        </trans-unit>
        <trans-unit id="4ad5ce7ed85795358479b7dddeecfa411d62d653" translate="yes" xml:space="preserve">
          <source>docker stack services</source>
          <target state="translated">docker堆栈服务</target>
        </trans-unit>
        <trans-unit id="d0de7159d190fe1f60d7fb4f26e23b7d308d4a5c" translate="yes" xml:space="preserve">
          <source>docker start</source>
          <target state="translated">docker启动</target>
        </trans-unit>
        <trans-unit id="07f8610c355ed18a5ee8332d24b05c0f8782f95a" translate="yes" xml:space="preserve">
          <source>docker stats</source>
          <target state="translated">docker统计</target>
        </trans-unit>
        <trans-unit id="aa93975189141d9982ee260566caf3ab62b3bc9d" translate="yes" xml:space="preserve">
          <source>docker stop</source>
          <target state="translated">docker停止</target>
        </trans-unit>
        <trans-unit id="5f927dd3abebbae74bd49f995b1a1eb3c08dba70" translate="yes" xml:space="preserve">
          <source>docker swarm</source>
          <target state="translated">docker群</target>
        </trans-unit>
        <trans-unit id="ea4225ba52ced2c8a2034578eb892626846f4545" translate="yes" xml:space="preserve">
          <source>docker swarm ca</source>
          <target state="translated">docker swarm ca</target>
        </trans-unit>
        <trans-unit id="d0a4372aed0d3736136372647166480701090491" translate="yes" xml:space="preserve">
          <source>docker swarm init</source>
          <target state="translated">docker swarm init</target>
        </trans-unit>
        <trans-unit id="d27a3f11e0f68744dcb8e03015105cb59a30562c" translate="yes" xml:space="preserve">
          <source>docker swarm join</source>
          <target state="translated">docker swarm加盟</target>
        </trans-unit>
        <trans-unit id="104d4e361ac8a6b0e510d4b2e3cde47b4b1e2dd1" translate="yes" xml:space="preserve">
          <source>docker swarm join-token</source>
          <target state="translated">docker swarm join-token</target>
        </trans-unit>
        <trans-unit id="78b0e610876ffa83dafe8a9e8f46bb9b32e21ffc" translate="yes" xml:space="preserve">
          <source>docker swarm leave</source>
          <target state="translated">Docker蜂群离开</target>
        </trans-unit>
        <trans-unit id="7dc22f1fae3391c47a77db6cd3bbfc510ae40859" translate="yes" xml:space="preserve">
          <source>docker swarm unlock</source>
          <target state="translated">docker swarm解锁</target>
        </trans-unit>
        <trans-unit id="b59ca38f2ebecb052bcba52ef11569f1e1c65cfa" translate="yes" xml:space="preserve">
          <source>docker swarm unlock-key</source>
          <target state="translated">docker swarm unlock-key</target>
        </trans-unit>
        <trans-unit id="e2c3cdc0ba4c100aa6a3a9f88b4d982c65339c6b" translate="yes" xml:space="preserve">
          <source>docker swarm update</source>
          <target state="translated">docker swarm更新</target>
        </trans-unit>
        <trans-unit id="3d05899a9fc1c51542093fbb5bc0435e502f319f" translate="yes" xml:space="preserve">
          <source>docker system</source>
          <target state="translated">docker系统</target>
        </trans-unit>
        <trans-unit id="795ab39e5f5b4491871eab374ff4809dcb4f3183" translate="yes" xml:space="preserve">
          <source>docker system df</source>
          <target state="translated">docker系统df</target>
        </trans-unit>
        <trans-unit id="f2e1400bb1625f70286407a1c173f5ea08748263" translate="yes" xml:space="preserve">
          <source>docker system events</source>
          <target state="translated">docker系统事件</target>
        </trans-unit>
        <trans-unit id="a55298f2cf63e2db49da9bc7cb136ee9813ec86c" translate="yes" xml:space="preserve">
          <source>docker system info</source>
          <target state="translated">docker系统信息</target>
        </trans-unit>
        <trans-unit id="1daaa5319285716ca533349f1e1ccc77d64ded2d" translate="yes" xml:space="preserve">
          <source>docker system prune</source>
          <target state="translated">docker系统修剪</target>
        </trans-unit>
        <trans-unit id="fc96e5db581a732ae977b1ef3167bc4a3ce94d1b" translate="yes" xml:space="preserve">
          <source>docker tag</source>
          <target state="translated">docker标签</target>
        </trans-unit>
        <trans-unit id="4c1ffb55a91d9a6a5f0fd2c3aff0d9f9b2473bae" translate="yes" xml:space="preserve">
          <source>docker top</source>
          <target state="translated">顶端</target>
        </trans-unit>
        <trans-unit id="cceb68cc44d0c7c38cef2bae0717bc4b12e2c642" translate="yes" xml:space="preserve">
          <source>docker trust</source>
          <target state="translated">docker信任</target>
        </trans-unit>
        <trans-unit id="eba6c69ee811b6eeb5d6a3b9976117993ae57e90" translate="yes" xml:space="preserve">
          <source>docker trust inspect</source>
          <target state="translated">docker信任检查</target>
        </trans-unit>
        <trans-unit id="d34ea25733f5d93a1b6f9d062b6a5caf6c3ce4f1" translate="yes" xml:space="preserve">
          <source>docker trust key</source>
          <target state="translated">docker信任密钥</target>
        </trans-unit>
        <trans-unit id="e6a5f7306bb97f5dc4bbdaf51f7aa397e22a796a" translate="yes" xml:space="preserve">
          <source>docker trust key generate</source>
          <target state="translated">生成docker信任密钥</target>
        </trans-unit>
        <trans-unit id="168fdb051d6a72fddc19eb8777a1b2a2455e04be" translate="yes" xml:space="preserve">
          <source>docker trust key load</source>
          <target state="translated">docker信任密钥加载</target>
        </trans-unit>
        <trans-unit id="856f278dfc9744bbcbf200f6ab56647d20e9294b" translate="yes" xml:space="preserve">
          <source>docker trust revoke</source>
          <target state="translated">撤销docker信任</target>
        </trans-unit>
        <trans-unit id="45ae9db1204620f360e22e7981885aebcad9f89a" translate="yes" xml:space="preserve">
          <source>docker trust sign</source>
          <target state="translated">docker信任签</target>
        </trans-unit>
        <trans-unit id="0375c19c66cc226dae972351d9923ede1b3ac0a2" translate="yes" xml:space="preserve">
          <source>docker trust signer</source>
          <target state="translated">docker信任签名人</target>
        </trans-unit>
        <trans-unit id="c0b4e5d72b57018ef96eccbf1bd5de1390df25c1" translate="yes" xml:space="preserve">
          <source>docker trust signer add</source>
          <target state="translated">docker信任签名器添加</target>
        </trans-unit>
        <trans-unit id="12cd6ce7d5791fd43a65b27b1834a71879a74cf5" translate="yes" xml:space="preserve">
          <source>docker trust signer remove</source>
          <target state="translated">docker trust signer remove</target>
        </trans-unit>
        <trans-unit id="da590a2a0b4588db3c669d9034d3bc14aef8f02f" translate="yes" xml:space="preserve">
          <source>docker unpause</source>
          <target state="translated">docker unpause</target>
        </trans-unit>
        <trans-unit id="a19a4ffeac3f94d9d5c6893cd384b60d2115010b" translate="yes" xml:space="preserve">
          <source>docker update</source>
          <target state="translated">docker更新</target>
        </trans-unit>
        <trans-unit id="d2f4ef2448b6dcf7be8124baf8065d71d14d81ad" translate="yes" xml:space="preserve">
          <source>docker version</source>
          <target state="translated">docker版本</target>
        </trans-unit>
        <trans-unit id="b84b02662fcb347821b5f6cabad940934101d9f1" translate="yes" xml:space="preserve">
          <source>docker volume</source>
          <target state="translated">docker卷</target>
        </trans-unit>
        <trans-unit id="0db63facb442524f2f7a864484535e9f0f7dd325" translate="yes" xml:space="preserve">
          <source>docker volume create</source>
          <target state="translated">创建docker卷</target>
        </trans-unit>
        <trans-unit id="4c8cbac184493382c696438ae840289ab21d69dd" translate="yes" xml:space="preserve">
          <source>docker volume inspect</source>
          <target state="translated">docker volume inspect</target>
        </trans-unit>
        <trans-unit id="a40d9f9a920e2193de61e91ac8d980d2f7c3502a" translate="yes" xml:space="preserve">
          <source>docker volume ls</source>
          <target state="translated">docker volume ls</target>
        </trans-unit>
        <trans-unit id="f2775d108cc22147e160ed884713235fb22f3a24" translate="yes" xml:space="preserve">
          <source>docker volume prune</source>
          <target state="translated">docker体积修剪</target>
        </trans-unit>
        <trans-unit id="8eee99359d8d99c41925c185c2c553924b64586f" translate="yes" xml:space="preserve">
          <source>docker volume rm</source>
          <target state="translated">docker volume rm</target>
        </trans-unit>
        <trans-unit id="940cb388a78252ef77945690839e6c5b8d0bb6d0" translate="yes" xml:space="preserve">
          <source>docker wait</source>
          <target state="translated">docker等待</target>
        </trans-unit>
        <trans-unit id="2a298b027cf545ca9eb7cc48f69f8306436eae2a" translate="yes" xml:space="preserve">
          <source>docker-compose</source>
          <target state="translated">docker-compose</target>
        </trans-unit>
        <trans-unit id="1e041d41c58c5edfcd45ec8106e39d2f68134550" translate="yes" xml:space="preserve">
          <source>docker-compose Command</source>
          <target state="translated">docker-compose命令</target>
        </trans-unit>
        <trans-unit id="506563502d585235f9949ed69d4455aaa44bb7d9" translate="yes" xml:space="preserve">
          <source>docker-compose build</source>
          <target state="translated">docker-compose构建</target>
        </trans-unit>
        <trans-unit id="31d7a53759c3bfe4fb5bda6c575dfd5e11558d06" translate="yes" xml:space="preserve">
          <source>docker-compose bundle</source>
          <target state="translated">docker-compose bundle</target>
        </trans-unit>
        <trans-unit id="c2652933591a7abd729ebfb4a2eaf69ae69e6b63" translate="yes" xml:space="preserve">
          <source>docker-compose config</source>
          <target state="translated">docker-compose配置</target>
        </trans-unit>
        <trans-unit id="e134403753f0dd062e3af6a25254cfe7a2c63d94" translate="yes" xml:space="preserve">
          <source>docker-compose create</source>
          <target state="translated">docker-compose创建</target>
        </trans-unit>
        <trans-unit id="4ff82c987cb8e38f229c016e07cf9b4b469243c7" translate="yes" xml:space="preserve">
          <source>docker-compose down</source>
          <target state="translated">docker-compose down</target>
        </trans-unit>
        <trans-unit id="61f5828c7f751737b3fad7e2e22fda6fbbaa410a" translate="yes" xml:space="preserve">
          <source>docker-compose events</source>
          <target state="translated">docker-compose事件</target>
        </trans-unit>
        <trans-unit id="38e9e25b15db18b6ff3b4be3b019ad577ed1e040" translate="yes" xml:space="preserve">
          <source>docker-compose exec</source>
          <target state="translated">docker-compose exec</target>
        </trans-unit>
        <trans-unit id="3816108ffbdffa71a011e47e274c438cc8cc4d5b" translate="yes" xml:space="preserve">
          <source>docker-compose help</source>
          <target state="translated">docker-compose帮助</target>
        </trans-unit>
        <trans-unit id="b636a2868f41dd9a177222fe4a1ad68f6f8d7156" translate="yes" xml:space="preserve">
          <source>docker-compose images</source>
          <target state="translated">docker-compose images</target>
        </trans-unit>
        <trans-unit id="8eb3d6e277c7ee24303adb8bf5026eeb3c0704ef" translate="yes" xml:space="preserve">
          <source>docker-compose kill</source>
          <target state="translated">docker-compose kill</target>
        </trans-unit>
        <trans-unit id="df372d872ecc84b43eb18f38c41f199dea7d2d87" translate="yes" xml:space="preserve">
          <source>docker-compose logs</source>
          <target state="translated">docker-compose logs</target>
        </trans-unit>
        <trans-unit id="493d35bd7f095144dd80c78e5088ed8c899251c2" translate="yes" xml:space="preserve">
          <source>docker-compose pause</source>
          <target state="translated">docker-compose pause</target>
        </trans-unit>
        <trans-unit id="e124d5b70526d47770410356e422f9997aea4af6" translate="yes" xml:space="preserve">
          <source>docker-compose port</source>
          <target state="translated">docker-compose port</target>
        </trans-unit>
        <trans-unit id="44239f00825436e390a1076de49084db1b971290" translate="yes" xml:space="preserve">
          <source>docker-compose ps</source>
          <target state="translated">docker-compose ps</target>
        </trans-unit>
        <trans-unit id="b95227a911459156967f97a64f470dc26e3b3978" translate="yes" xml:space="preserve">
          <source>docker-compose pull</source>
          <target state="translated">docker-compose pull</target>
        </trans-unit>
        <trans-unit id="248fc1b75415a210202918bc8d80b530d25c0c2a" translate="yes" xml:space="preserve">
          <source>docker-compose push</source>
          <target state="translated">docker-compose push</target>
        </trans-unit>
        <trans-unit id="16459adbc919f1f99cc58a424433811ed92d918a" translate="yes" xml:space="preserve">
          <source>docker-compose restart</source>
          <target state="translated">docker-compose restart</target>
        </trans-unit>
        <trans-unit id="ba9e837767adf22dc54f7482e29f305f02a7b022" translate="yes" xml:space="preserve">
          <source>docker-compose rm</source>
          <target state="translated">docker-compose rm</target>
        </trans-unit>
        <trans-unit id="05284d10ee59e7080ea713f9784765c226c2da7a" translate="yes" xml:space="preserve">
          <source>docker-compose run</source>
          <target state="translated">docker-compose run</target>
        </trans-unit>
        <trans-unit id="34f7ea416a3a11c79440ae4a9140a2a71d9be98b" translate="yes" xml:space="preserve">
          <source>docker-compose scale</source>
          <target state="translated">docker-compose scale</target>
        </trans-unit>
        <trans-unit id="233dbd6dcac20665eca2c13d2b3b0bf6653e28cb" translate="yes" xml:space="preserve">
          <source>docker-compose start</source>
          <target state="translated">docker-compose start</target>
        </trans-unit>
        <trans-unit id="35c1fafe775c1e1997932e2a1baa9f529dcb66d6" translate="yes" xml:space="preserve">
          <source>docker-compose stop</source>
          <target state="translated">docker-compose stop</target>
        </trans-unit>
        <trans-unit id="c9ef7957906df749421b539dcc248e06a279de4d" translate="yes" xml:space="preserve">
          <source>docker-compose top</source>
          <target state="translated">docker-compose top</target>
        </trans-unit>
        <trans-unit id="3b908436cf4e7ed899b7f4421a0fcb58ea33610b" translate="yes" xml:space="preserve">
          <source>docker-compose unpause</source>
          <target state="translated">docker-compose unpause</target>
        </trans-unit>
        <trans-unit id="287e163e188a470dbd451a0cc1a3971a5bb3a8c9" translate="yes" xml:space="preserve">
          <source>docker-compose up</source>
          <target state="translated">docker-compose up</target>
        </trans-unit>
        <trans-unit id="c14e8f4ef0b6a776c575f9282042aa38dd65d635" translate="yes" xml:space="preserve">
          <source>docker-machine active</source>
          <target state="translated">docker-machine active</target>
        </trans-unit>
        <trans-unit id="f8de9025fc3a491a8ab6d041f44018d2b19dea8d" translate="yes" xml:space="preserve">
          <source>docker-machine config</source>
          <target state="translated">docker-machine配置</target>
        </trans-unit>
        <trans-unit id="78ab9606eb82b3736ab175b0b83632d0a101dab5" translate="yes" xml:space="preserve">
          <source>docker-machine create</source>
          <target state="translated">创建docker-machine</target>
        </trans-unit>
        <trans-unit id="1f47edc037f4d0b3a40fb2627b09fc8ab0ed4497" translate="yes" xml:space="preserve">
          <source>docker-machine env</source>
          <target state="translated">机器docker环境</target>
        </trans-unit>
        <trans-unit id="c63989774db21e85c8ce0c3f8720279cac9b2440" translate="yes" xml:space="preserve">
          <source>docker-machine help</source>
          <target state="translated">docker-machine帮助</target>
        </trans-unit>
        <trans-unit id="63e290ce528d9a8e8fbbdd7776940e6ef147afb9" translate="yes" xml:space="preserve">
          <source>docker-machine inspect</source>
          <target state="translated">docker-machine检查</target>
        </trans-unit>
        <trans-unit id="d74f80a41221af4d74dcdd547179680114158f54" translate="yes" xml:space="preserve">
          <source>docker-machine ip</source>
          <target state="translated">docker-machine ip</target>
        </trans-unit>
        <trans-unit id="b8026776d9fc6b5beb4852b09e8bee6e4d839591" translate="yes" xml:space="preserve">
          <source>docker-machine kill</source>
          <target state="translated">docker-machine kill</target>
        </trans-unit>
        <trans-unit id="6574c4eecfaadba3668183c27b7fac2d83d66b28" translate="yes" xml:space="preserve">
          <source>docker-machine ls</source>
          <target state="translated">docker-machine ls</target>
        </trans-unit>
        <trans-unit id="31c4105fcb2c6f5071b79c93b994d82c35e76fb1" translate="yes" xml:space="preserve">
          <source>docker-machine mount</source>
          <target state="translated">docker-machine挂载</target>
        </trans-unit>
        <trans-unit id="dab65c42c638a2e0532c56ee1e50c51f10691e4b" translate="yes" xml:space="preserve">
          <source>docker-machine provision</source>
          <target state="translated">docker-machine供应</target>
        </trans-unit>
        <trans-unit id="f59981c48b9c0f82b5334818030ed6cc7e6763b9" translate="yes" xml:space="preserve">
          <source>docker-machine regenerate-certs</source>
          <target state="translated">docker-machine regenerate-certs</target>
        </trans-unit>
        <trans-unit id="910ece79c95ace41190cd7dcab96a42dcf97341a" translate="yes" xml:space="preserve">
          <source>docker-machine restart</source>
          <target state="translated">docker-machine重启</target>
        </trans-unit>
        <trans-unit id="fb7c7044c7b590191a39a9c198aebf283c9e965a" translate="yes" xml:space="preserve">
          <source>docker-machine rm</source>
          <target state="translated">docker-machine rm</target>
        </trans-unit>
        <trans-unit id="21eb1d2fbcd854d7a3b55413454cf317036a71e1" translate="yes" xml:space="preserve">
          <source>docker-machine scp</source>
          <target state="translated">docker-machine scp</target>
        </trans-unit>
        <trans-unit id="632965d1eba43b090d99cee342eeb7e3385d1e54" translate="yes" xml:space="preserve">
          <source>docker-machine ssh</source>
          <target state="translated">docker-machine ssh</target>
        </trans-unit>
        <trans-unit id="8847e07cce4dbbce2f77401ed057a3492b8a6317" translate="yes" xml:space="preserve">
          <source>docker-machine start</source>
          <target state="translated">docker-machine启动</target>
        </trans-unit>
        <trans-unit id="c9a507dce1fdb31f7c8d63f541db7e0858edef2f" translate="yes" xml:space="preserve">
          <source>docker-machine status</source>
          <target state="translated">docker-machine状态</target>
        </trans-unit>
        <trans-unit id="f0d3c2f6b50b1c6174c45cba77fefd71829ea6cb" translate="yes" xml:space="preserve">
          <source>docker-machine stop</source>
          <target state="translated">docker-machine停止</target>
        </trans-unit>
        <trans-unit id="aa334e9cfb79722e8bed9c79e18768c41b2f0b1c" translate="yes" xml:space="preserve">
          <source>docker-machine upgrade</source>
          <target state="translated">docker-machine升级</target>
        </trans-unit>
        <trans-unit id="bfab7e4c00c0bbc16f0e212da2e88be009c105d1" translate="yes" xml:space="preserve">
          <source>docker-machine url</source>
          <target state="translated">docker-machine url</target>
        </trans-unit>
        <trans-unit id="54f350074cbae7adf5f659d3eb85ba126a277846" translate="yes" xml:space="preserve">
          <source>docker/dockerfile:1 - allow versions 1.&lt;em&gt;.&lt;/em&gt;</source>
          <target state="translated">docker / dockerfile：1-允许版本1 &lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c637d09007feb3a482802307019614bd47fe5d9b" translate="yes" xml:space="preserve">
          <source>docker/dockerfile:1.0 - allow versions 1.0.*</source>
          <target state="translated">docker/dockerfile:1.0-允许版本1.0.*。</target>
        </trans-unit>
        <trans-unit id="1f166d3a9090179073506a92876782678cf7992e" translate="yes" xml:space="preserve">
          <source>docker/dockerfile:1.0-experimental - latest experimental releases after 1.0</source>
          <target state="translated">docker/dockerfile:1.0-experimental-1.0之后的最新实验版本。</target>
        </trans-unit>
        <trans-unit id="898515f5791b83792672a316b4910af9182767b4" translate="yes" xml:space="preserve">
          <source>docker/dockerfile:1.0.0 - only allow immutable version 1.0.0</source>
          <target state="translated">docker/dockerfile:1.0.0-只允许不可更改的1.0.0版本。</target>
        </trans-unit>
        <trans-unit id="02550215825ef2feb5b068c2434d39cc51eb6bbd" translate="yes" xml:space="preserve">
          <source>docker/dockerfile:1.0.1-experimental - only allow immutable version 1.0.1-experimental</source>
          <target state="translated">docker/dockerfile:1.0.1-xperimental-只允许不可更改的1.0.1-xperimental版本。</target>
        </trans-unit>
        <trans-unit id="2fdceb9420b4e68f7a6c9e460eba191b38c35a65" translate="yes" xml:space="preserve">
          <source>docker/dockerfile:experimental - latest release on experimental channel</source>
          <target state="translated">docker/dockerfile:experimental-实验频道上的最新版本。</target>
        </trans-unit>
        <trans-unit id="0a6fa42397d7e598144dc3ebccae37129c8906d2" translate="yes" xml:space="preserve">
          <source>docker/dockerfile:latest - latest release on stable channel</source>
          <target state="translated">docker/dockerfile:latest-稳定版频道上的最新版本。</target>
        </trans-unit>
        <trans-unit id="70c19f2baae5799abf8f00ce8348f9bbd0be881c" translate="yes" xml:space="preserve">
          <source>dockerd</source>
          <target state="translated">dockerd</target>
        </trans-unit>
        <trans-unit id="558c49b604560afd1841f2a7b49e2f60bd1f99b3" translate="yes" xml:space="preserve">
          <source>dockerfile</source>
          <target state="translated">dockerfile</target>
        </trans-unit>
        <trans-unit id="1d1b2c0503bae1fa89bf31d3f2095d80fa1e4fcd" translate="yes" xml:space="preserve">
          <source>domainname, hostname, ipc, mac_address, privileged, read_only, shm_size, stdin_open, tty, user, working_dir</source>
          <target state="translated">域名,主机名,ipc,mac_address,特权,read_only,shm_size,stdin_open,tty,用户,working_dir。</target>
        </trans-unit>
        <trans-unit id="77346d0447daff959358a0ecbeec83bfd9ec86bb" translate="yes" xml:space="preserve">
          <source>down</source>
          <target state="translated">down</target>
        </trans-unit>
        <trans-unit id="817248fb77fb5c2cef3f2c732ad257cb1fb9c5e4" translate="yes" xml:space="preserve">
          <source>download</source>
          <target state="translated">download</target>
        </trans-unit>
        <trans-unit id="dd9e3567c5471d0338f57d2ed207086b7360a52b" translate="yes" xml:space="preserve">
          <source>drain a manager node so that only performs swarm management tasks and is unavailable for task assignment.</source>
          <target state="translated">榨干管理器节点,使其只能执行蜂群管理任务,而不能用于任务分配。</target>
        </trans-unit>
        <trans-unit id="ddd84cb8227e42ea2505020e1b7e5eaa8c517bb4" translate="yes" xml:space="preserve">
          <source>drain a node so you can take it down for maintenance.</source>
          <target state="translated">排出一个节点,这样你就可以把它拆下来进行维护。</target>
        </trans-unit>
        <trans-unit id="fdda0c46f953c1a45bdc520849be1e4edf4e228c" translate="yes" xml:space="preserve">
          <source>driver</source>
          <target state="translated">driver</target>
        </trans-unit>
        <trans-unit id="de71d251fb9fd660d530f1c187fddd3cf3812870" translate="yes" xml:space="preserve">
          <source>driver (a volume driver&amp;rsquo;s name)</source>
          <target state="translated">驱动程序（卷驱动程序的名称）</target>
        </trans-unit>
        <trans-unit id="5f1ace0663ab478940732c701991000dc4771db9" translate="yes" xml:space="preserve">
          <source>driver (driver name)</source>
          <target state="translated">司机</target>
        </trans-unit>
        <trans-unit id="3ce1e328e73c009e2886a12027cf8c329d5caf21" translate="yes" xml:space="preserve">
          <source>driver options for the network</source>
          <target state="translated">网络的驱动程序选项</target>
        </trans-unit>
        <trans-unit id="8c03e491823e2d88ccf12a01be6916ddbc393709" translate="yes" xml:space="preserve">
          <source>driver_opts</source>
          <target state="translated">driver_opts</target>
        </trans-unit>
        <trans-unit id="7d11bbbad26e21561551fcaf064bc73742963096" translate="yes" xml:space="preserve">
          <source>drivers</source>
          <target state="translated">drivers</target>
        </trans-unit>
        <trans-unit id="a7f719bf74e49f78da1a4edfed258b184a7054ff" translate="yes" xml:space="preserve">
          <source>dst</source>
          <target state="translated">dst</target>
        </trans-unit>
        <trans-unit id="e37c738fad7451f32bcc30d990870dd76088f729" translate="yes" xml:space="preserve">
          <source>during a rolling update</source>
          <target state="translated">滚动更新</target>
        </trans-unit>
        <trans-unit id="f281a50851b1928420ac9af04ebefb8bbd427401" translate="yes" xml:space="preserve">
          <source>during a service update to scale up</source>
          <target state="translated">在服务更新期间扩大规模</target>
        </trans-unit>
        <trans-unit id="623bccadfb4c97dd9449eaf92baf3d93adac8db7" translate="yes" xml:space="preserve">
          <source>enable_ipv6</source>
          <target state="translated">enable_ipv6</target>
        </trans-unit>
        <trans-unit id="3ea3f9802accf8817bacd6f3df46a73b93ccddec" translate="yes" xml:space="preserve">
          <source>enabled</source>
          <target state="translated">enabled</target>
        </trans-unit>
        <trans-unit id="f0515b289231b7c361fcd57ff70e18e1f41639dd" translate="yes" xml:space="preserve">
          <source>enabled (boolean - true or false, 0 or 1)</source>
          <target state="translated">启用(布尔值--真或假,0或1)</target>
        </trans-unit>
        <trans-unit id="04acd12d8bffd6630f193c10d0dd51f92d5c7238" translate="yes" xml:space="preserve">
          <source>endpoint_mode</source>
          <target state="translated">endpoint_mode</target>
        </trans-unit>
        <trans-unit id="d2f05c41c4d8201c928e384dff967e8e4dfc06d9" translate="yes" xml:space="preserve">
          <source>engine.labels</source>
          <target state="translated">engine.labels</target>
        </trans-unit>
        <trans-unit id="60a887734bc7b290d76f1b03da048aa3efc5d337" translate="yes" xml:space="preserve">
          <source>engine.labels.operatingsystem==ubuntu 14.04</source>
          <target state="translated">engine.lags.operatingsystem==ubuntu 14.04</target>
        </trans-unit>
        <trans-unit id="0f7c518039774bb00b8168f11cf8f1df5755cd85" translate="yes" xml:space="preserve">
          <source>ensuring that any uploaded metadata is valid, signed, and self-consistent</source>
          <target state="translated">确保任何上传的元数据都是有效的,有签名的,并且是自我一致的。</target>
        </trans-unit>
        <trans-unit id="e89dd390584c1a3296045a66b7f352f412364578" translate="yes" xml:space="preserve">
          <source>entrypoint</source>
          <target state="translated">entrypoint</target>
        </trans-unit>
        <trans-unit id="af9285ae492167c00cb10d1c46862947ff8efea5" translate="yes" xml:space="preserve">
          <source>entrypoint of the plugin, see &lt;a href=&quot;../../reference/builder/index#entrypoint&quot;&gt;&lt;code&gt;ENTRYPOINT&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">插件的入口点，请参阅&lt;a href=&quot;../../reference/builder/index#entrypoint&quot;&gt; &lt;code&gt;ENTRYPOINT&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e338e8e3d1ddeb83df4ace416a87e89ed797cd19" translate="yes" xml:space="preserve">
          <source>enum</source>
          <target state="translated">enum</target>
        </trans-unit>
        <trans-unit id="920f8f5815b381ea692e9e7c2f7119f2b1aa620a" translate="yes" xml:space="preserve">
          <source>env</source>
          <target state="translated">env</target>
        </trans-unit>
        <trans-unit id="e780589c06d87ba3e801533b0e52ba84f7d0d304" translate="yes" xml:space="preserve">
          <source>env of the plugin, struct consisting of the following fields</source>
          <target state="translated">插件的env,由以下字段组成的结构。</target>
        </trans-unit>
        <trans-unit id="257f3adb34c32cc77b1de6ab2f0bddd495b5e27a" translate="yes" xml:space="preserve">
          <source>env variables</source>
          <target state="translated">环境变量</target>
        </trans-unit>
        <trans-unit id="f610876c752c84f23bf450cfe0a139fcd25c5eb3" translate="yes" xml:space="preserve">
          <source>env_file</source>
          <target state="translated">env_file</target>
        </trans-unit>
        <trans-unit id="c6e454d960df4845f9d69eb11377c8b23882715b" translate="yes" xml:space="preserve">
          <source>environment</source>
          <target state="translated">environment</target>
        </trans-unit>
        <trans-unit id="86403ebd2f9f8c907d68bdc39d5fc0cbe52193c7" translate="yes" xml:space="preserve">
          <source>environment variables using the &lt;code&gt;--env&lt;/code&gt; flag</source>
          <target state="translated">使用 &lt;code&gt;--env&lt;/code&gt; 标志的环境变量</target>
        </trans-unit>
        <trans-unit id="11f9578d05e6f7bb58a3cdd00107e9f4e3882671" translate="yes" xml:space="preserve">
          <source>error</source>
          <target state="translated">error</target>
        </trans-unit>
        <trans-unit id="cdecabe1520a398e4e46deff9d55b19bed6d6457" translate="yes" xml:space="preserve">
          <source>escape</source>
          <target state="translated">escape</target>
        </trans-unit>
        <trans-unit id="2a1b83bcab0fd0f6fa562eb0148db3d5c12a645f" translate="yes" xml:space="preserve">
          <source>eu-central-1</source>
          <target state="translated">eu-central-1</target>
        </trans-unit>
        <trans-unit id="20c756b8d752b585db8daa6b9ae9b7b0f179769b" translate="yes" xml:space="preserve">
          <source>eu-west-1</source>
          <target state="translated">eu-west-1</target>
        </trans-unit>
        <trans-unit id="65aaaff858db7500c651ebef055a5f5de4b81bc2" translate="yes" xml:space="preserve">
          <source>eu-west-2</source>
          <target state="translated">eu-west-2</target>
        </trans-unit>
        <trans-unit id="e4f51b6cb3d0e934487d2ff846e04ab26067960b" translate="yes" xml:space="preserve">
          <source>eu-west-3</source>
          <target state="translated">eu-west-3</target>
        </trans-unit>
        <trans-unit id="3978e32eeacbd2a09ed98f070ae0637405f544e5" translate="yes" xml:space="preserve">
          <source>event (&lt;code&gt;event=&amp;lt;event action&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">事件（ &lt;code&gt;event=&amp;lt;event action&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="82d50d9042decb175894924272dd3b5a14cd3716" translate="yes" xml:space="preserve">
          <source>events</source>
          <target state="translated">events</target>
        </trans-unit>
        <trans-unit id="c3499c2729730a7f807efb8676a92dcb6f8a3f8f" translate="yes" xml:space="preserve">
          <source>example</source>
          <target state="translated">example</target>
        </trans-unit>
        <trans-unit id="be62562725d30894d1641b11d5106adde66f0d79" translate="yes" xml:space="preserve">
          <source>exec</source>
          <target state="translated">exec</target>
        </trans-unit>
        <trans-unit id="0637cc8bcbbc384fb2738f80dd387dbece8aaf3a" translate="yes" xml:space="preserve">
          <source>exec_cmd p1_cmd</source>
          <target state="translated">执行_cmd p1_cmd</target>
        </trans-unit>
        <trans-unit id="4a2692b5caa782d5e573ff3cd5f6fd74970a35b7" translate="yes" xml:space="preserve">
          <source>exec_entry p1_entry</source>
          <target state="translated">exec_entry p1_entry。</target>
        </trans-unit>
        <trans-unit id="7b84d41ba17f737dcd65421f95b6dc1ef8f56a5b" translate="yes" xml:space="preserve">
          <source>exec_entry p1_entry /bin/sh -c exec_cmd p1_cmd</source>
          <target state="translated">exec_entry p1_entry /bin/sh -c exec_cmd p1_cmd</target>
        </trans-unit>
        <trans-unit id="e33ecf2be5173d8cde944a2f5f4c4e5b85df2852" translate="yes" xml:space="preserve">
          <source>exec_entry p1_entry exec_cmd p1_cmd</source>
          <target state="translated">在此基础上,我们还将继续进行一些新的尝试。</target>
        </trans-unit>
        <trans-unit id="7fb6ca7b55d615aa86bdca1b0b91113756fb5e88" translate="yes" xml:space="preserve">
          <source>exec_entry p1_entry p1_cmd p2_cmd</source>
          <target state="translated">exec_entry P1_entry P1_cmd P2_cmd</target>
        </trans-unit>
        <trans-unit id="e9e86ea85c2b6f8176cee219e782a4c322caec77" translate="yes" xml:space="preserve">
          <source>exited</source>
          <target state="translated">exited</target>
        </trans-unit>
        <trans-unit id="2216470a6aacb2edec4887e9eadec834847afc5d" translate="yes" xml:space="preserve">
          <source>experimental</source>
          <target state="translated">experimental</target>
        </trans-unit>
        <trans-unit id="732c9871ab75de0767a88fa5623a85a03c962ae8" translate="yes" xml:space="preserve">
          <source>experimental (daemon)</source>
          <target state="translated">试验性</target>
        </trans-unit>
        <trans-unit id="0d23a9d9da666bddcdefdc96a56ed0052f08f2ed" translate="yes" xml:space="preserve">
          <source>expose</source>
          <target state="translated">expose</target>
        </trans-unit>
        <trans-unit id="2b781ff8e3327e3e897ec571fa02fec12242e7dd" translate="yes" xml:space="preserve">
          <source>extends</source>
          <target state="translated">extends</target>
        </trans-unit>
        <trans-unit id="1988056a9766bcf5be87ec483a9c22efcd9e9039" translate="yes" xml:space="preserve">
          <source>extends the &lt;code&gt;ingress&lt;/code&gt; overlay network to the current node.</source>
          <target state="translated">将 &lt;code&gt;ingress&lt;/code&gt; 覆盖网络扩展到当前节点。</target>
        </trans-unit>
        <trans-unit id="59d8f3ec5b13131f7856e6ed51dca3c6adb97cd4" translate="yes" xml:space="preserve">
          <source>external</source>
          <target state="translated">external</target>
        </trans-unit>
        <trans-unit id="f40050d6d5821035df84059bf706338d4066f241" translate="yes" xml:space="preserve">
          <source>external (volume or storage) drivers which are unaware or incapable of using daemon user mappings.</source>
          <target state="translated">不知道或不能使用守护进程用户映射的外部(卷或存储)驱动程序。</target>
        </trans-unit>
        <trans-unit id="f322512455fd2ac06eb0486e488aa4e9179f3a84" translate="yes" xml:space="preserve">
          <source>external_links</source>
          <target state="translated">external_links</target>
        </trans-unit>
        <trans-unit id="3673780757859050fd94a7fb53ef58520d9da085" translate="yes" xml:space="preserve">
          <source>extra_hosts</source>
          <target state="translated">extra_hosts</target>
        </trans-unit>
        <trans-unit id="7cb6efb98ba5972a9b5090dc2e517fe14d12cb04" translate="yes" xml:space="preserve">
          <source>false</source>
          <target state="translated">false</target>
        </trans-unit>
        <trans-unit id="c3de14b5c375ff5775e80c74b358f6a6b322ffb5" translate="yes" xml:space="preserve">
          <source>file version 1 reference</source>
          <target state="translated">文件版本1参考</target>
        </trans-unit>
        <trans-unit id="10a075a371c113ba9081a1f095b194f5bf13347b" translate="yes" xml:space="preserve">
          <source>file version 2 reference</source>
          <target state="translated">文件第二版参考</target>
        </trans-unit>
        <trans-unit id="ab800268b3c8fe09ec6ef7bc4d858b0ace04730e" translate="yes" xml:space="preserve">
          <source>file version 3 reference</source>
          <target state="translated">文件第三版参考</target>
        </trans-unit>
        <trans-unit id="232fc9648b8c88bbb8b37885eb121cc4a0c9c242" translate="yes" xml:space="preserve">
          <source>file versions and upgrading</source>
          <target state="translated">文件版本和升级</target>
        </trans-unit>
        <trans-unit id="84d604a0d6a39b52de796c6e8f5d35d873c60f7c" translate="yes" xml:space="preserve">
          <source>flag twice.</source>
          <target state="translated">旗帜两次。</target>
        </trans-unit>
        <trans-unit id="43eef9a62abb8b1e1654f8a890aae054abffa82b" translate="yes" xml:space="preserve">
          <source>for</source>
          <target state="translated">for</target>
        </trans-unit>
        <trans-unit id="0c605d207c1a9da172900cbeb4357df1491396c3" translate="yes" xml:space="preserve">
          <source>for a bind-mount does not make its submounts</source>
          <target state="translated">捆绑式安装并不会使其子安装成为</target>
        </trans-unit>
        <trans-unit id="7337b232a96de911c0672057b2d730754658e5a1" translate="yes" xml:space="preserve">
          <source>gMSA for Swarm</source>
          <target state="translated">蜂群的gMSA</target>
        </trans-unit>
        <trans-unit id="faf81fcc74ab66d2b362632d3c6e39d70fdd41a7" translate="yes" xml:space="preserve">
          <source>gce-docker plugin</source>
          <target state="translated">gce-docker插件</target>
        </trans-unit>
        <trans-unit id="f747945de55f7baf1d08872d530a0dc4cf369212" translate="yes" xml:space="preserve">
          <source>generating the timestamp (and sometimes snapshot) metadata</source>
          <target state="translated">生成时间戳(有时是快照)元数据。</target>
        </trans-unit>
        <trans-unit id="0d59cfdb78da8bcf0751ebf7bca8a461d3c7a469" translate="yes" xml:space="preserve">
          <source>group_add</source>
          <target state="translated">group_add</target>
        </trans-unit>
        <trans-unit id="951e78244b7bd08c38d0bb8750fd1bb9fadab331" translate="yes" xml:space="preserve">
          <source>hardware management is irrelevant, meaning that you never need to run &lt;code&gt;udevd&lt;/code&gt; or equivalent daemons within containers;</source>
          <target state="translated">硬件管理无关紧要，这意味着您无需在容器内运行 &lt;code&gt;udevd&lt;/code&gt; 或等效守护程序；</target>
        </trans-unit>
        <trans-unit id="374444ea057e4d86d40f2a50d8191d771d96c2d7" translate="yes" xml:space="preserve">
          <source>headless</source>
          <target state="translated">headless</target>
        </trans-unit>
        <trans-unit id="c6e3aaf6776ca314d3a1989de4c73798b2b8708f" translate="yes" xml:space="preserve">
          <source>healthcheck</source>
          <target state="translated">healthcheck</target>
        </trans-unit>
        <trans-unit id="92005ecf3788faea8346a7919fba0232188561ab" translate="yes" xml:space="preserve">
          <source>help</source>
          <target state="translated">help</target>
        </trans-unit>
        <trans-unit id="86dd1cf45142e904cb2e99c2721fac3ca198c6ca" translate="yes" xml:space="preserve">
          <source>host</source>
          <target state="translated">host</target>
        </trans-unit>
        <trans-unit id="e3239ad2b343bf4b438025a7f74afdf5ffa15e27" translate="yes" xml:space="preserve">
          <source>host or none</source>
          <target state="translated">主机或无</target>
        </trans-unit>
        <trans-unit id="ca658f7c24b1536fc6796ccc4cef3e76d792ba6d" translate="yes" xml:space="preserve">
          <source>how many containers participate in the service</source>
          <target state="translated">有多少个容器参与服务</target>
        </trans-unit>
        <trans-unit id="87ea5dfc8b8e384d848979496e706390b497e547" translate="yes" xml:space="preserve">
          <source>id</source>
          <target state="translated">id</target>
        </trans-unit>
        <trans-unit id="ed8f09909ec0cb5e8e606181bb78c5f516d3e7a6" translate="yes" xml:space="preserve">
          <source>id (network&amp;rsquo;s id)</source>
          <target state="translated">ID（网络ID）</target>
        </trans-unit>
        <trans-unit id="3c13bd6865f497e4c70396f89bd6d0823acaddcc" translate="yes" xml:space="preserve">
          <source>id / ID (&lt;code&gt;--filter id=7be5ei6sqeye&lt;/code&gt;, or &lt;code&gt;--filter ID=7be5ei6sqeye&lt;/code&gt;)</source>
          <target state="translated">id / ID（-- &lt;code&gt;--filter id=7be5ei6sqeye&lt;/code&gt; 或 &lt;code&gt;--filter ID=7be5ei6sqeye&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="5812c7d9f91e68d3f718ad34340ce89eaefbfd42" translate="yes" xml:space="preserve">
          <source>if no type is specified.</source>
          <target state="translated">如果没有指定类型。</target>
        </trans-unit>
        <trans-unit id="4a18bc61942b587fb95f47ae9f3c0a99151955f3" translate="yes" xml:space="preserve">
          <source>if using many nodes, allow communication between the &lt;code&gt;redis&lt;/code&gt; service and &lt;code&gt;web&lt;/code&gt; service</source>
          <target state="translated">如果使用许多节点，则允许 &lt;code&gt;redis&lt;/code&gt; 服务和 &lt;code&gt;web&lt;/code&gt; 服务之间进行通信</target>
        </trans-unit>
        <trans-unit id="0d13308976a283a958d6da9b3f073924c39c098d" translate="yes" xml:space="preserve">
          <source>if your registry is signed by a custom root Certificate Authority and it is not registered with Docker Engine, you may see the following error message:</source>
          <target state="translated">如果你的注册表是由一个自定义的根证书颁发机构签署的,并且它没有在Docker引擎中注册,你可能会看到以下错误信息。</target>
        </trans-unit>
        <trans-unit id="0e76292794888d4f1fa75fb3aff4ca27c58f56a6" translate="yes" xml:space="preserve">
          <source>image</source>
          <target state="translated">image</target>
        </trans-unit>
        <trans-unit id="38b070268c0bae0a650ffcf87ebbaa03fa7206ba" translate="yes" xml:space="preserve">
          <source>image (&lt;code&gt;image=&amp;lt;repository or tag&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">图片（ &lt;code&gt;image=&amp;lt;repository or tag&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="489656cd4a1a2882c6125fd936704aace4d33bd7" translate="yes" xml:space="preserve">
          <source>image (&lt;code&gt;image=&amp;lt;tag or id&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">图片（ &lt;code&gt;image=&amp;lt;tag or id&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="19f49d852660fe0a079cbf95c3efb34ba88de911" translate="yes" xml:space="preserve">
          <source>images</source>
          <target state="translated">images</target>
        </trans-unit>
        <trans-unit id="d332e6195db9b7126b61d40924e9288f8649a5a7" translate="yes" xml:space="preserve">
          <source>in Linux.</source>
          <target state="translated">在Linux中。</target>
        </trans-unit>
        <trans-unit id="77b183770aca580132364ae4bc614ef809dfc48a" translate="yes" xml:space="preserve">
          <source>increase logging level by signaling &lt;code&gt;SIGUSR1&lt;/code&gt;</source>
          <target state="translated">通过向 &lt;code&gt;SIGUSR1&lt;/code&gt; 发出信号来提高日志记录级别</target>
        </trans-unit>
        <trans-unit id="59bd0a3ff43b32849b319e645d4798d8a5d1e889" translate="yes" xml:space="preserve">
          <source>info</source>
          <target state="translated">info</target>
        </trans-unit>
        <trans-unit id="e4e810466669889f6d245e182e0f85b41a760695" translate="yes" xml:space="preserve">
          <source>ingress</source>
          <target state="translated">ingress</target>
        </trans-unit>
        <trans-unit id="fd62812fbd9ec4c7f99aa4f6253fead2388eb238" translate="yes" xml:space="preserve">
          <source>init</source>
          <target state="translated">init</target>
        </trans-unit>
        <trans-unit id="f73c8dc7b8503576716e6b30f2c883c96a23ff81" translate="yes" xml:space="preserve">
          <source>initializing a cluster of Docker Engines in swarm mode</source>
          <target state="translated">在群集模式下初始化Docker引擎集群。</target>
        </trans-unit>
        <trans-unit id="a1a2ae18fa153a52a05172a40a60c6c0848214e2" translate="yes" xml:space="preserve">
          <source>inspect</source>
          <target state="translated">inspect</target>
        </trans-unit>
        <trans-unit id="083cb2d425a344806151c3c26fa3803c1331c79c" translate="yes" xml:space="preserve">
          <source>inspect an individual node</source>
          <target state="translated">单个节点检查</target>
        </trans-unit>
        <trans-unit id="dd0e3247e7927f1891e350c808338b20cca8a6eb" translate="yes" xml:space="preserve">
          <source>install Docker Engine on Linux machines</source>
          <target state="translated">在Linux机器上安装Docker引擎</target>
        </trans-unit>
        <trans-unit id="46f8ab7c0cff9df7cd124852e26022a6bf89e315" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="translated">int</target>
        </trans-unit>
        <trans-unit id="5b33eaa25fce921a4a450f48149bff99ccf36bc8" translate="yes" xml:space="preserve">
          <source>interface implemented by the plugins, struct consisting of the following fields</source>
          <target state="translated">插件实现的接口,结构体包括以下字段</target>
        </trans-unit>
        <trans-unit id="9f33a7c798af6fd6abb28049d9c1b3edfa2fd24a" translate="yes" xml:space="preserve">
          <source>internal</source>
          <target state="translated">internal</target>
        </trans-unit>
        <trans-unit id="f9aba3f1299b4a48e75ee40ef3baf522152a817c" translate="yes" xml:space="preserve">
          <source>ip</source>
          <target state="translated">ip</target>
        </trans-unit>
        <trans-unit id="7afc9cfb8176a0cc42f3804d9f86bfe5563d9120" translate="yes" xml:space="preserve">
          <source>ipam</source>
          <target state="translated">ipam</target>
        </trans-unit>
        <trans-unit id="34cb11a49aa8be01288bcc504e59bf97f7bfd8f6" translate="yes" xml:space="preserve">
          <source>ipv4_address, ipv6_address</source>
          <target state="translated">ipv4_address,ipv6_address。</target>
        </trans-unit>
        <trans-unit id="7f8ef9ae138b855de6514ac356276974b2f3167d" translate="yes" xml:space="preserve">
          <source>is an optional way to specify the name of the volume (for example,</source>
          <target state="translated">是指定卷名的一种可选方式(例如。</target>
        </trans-unit>
        <trans-unit id="4570d3713b7379f9e4840ad86281f891bb7cc420" translate="yes" xml:space="preserve">
          <source>is destroyed (which is upon</source>
          <target state="translated">毁于一旦</target>
        </trans-unit>
        <trans-unit id="18ab6ac7001b131bc4dc74bd619c612205dff372" translate="yes" xml:space="preserve">
          <source>is equivalent to:</source>
          <target state="translated">相当于:</target>
        </trans-unit>
        <trans-unit id="a4941b8f65f3ef7c3339a3993ea6937da25b1da0" translate="yes" xml:space="preserve">
          <source>is not supported.</source>
          <target state="translated">不支持。</target>
        </trans-unit>
        <trans-unit id="edbd81c95b4ed6583d86c9db407643724ad3e0b6" translate="yes" xml:space="preserve">
          <source>is required, and specifies an absolute path to the file or directory to bind-mount (for example,</source>
          <target state="translated">是必需的,并指定要绑定-mount的文件或目录的绝对路径(例如。</target>
        </trans-unit>
        <trans-unit id="326b4939edb0663273e2635a0b8eaef62e0b1996" translate="yes" xml:space="preserve">
          <source>is specified, the volume is assigned a random name which is guaranteed to be unique on the host, but may not be unique cluster-wide. A randomly-named volume has the same lifecycle as its container and is destroyed when the</source>
          <target state="translated">被指定,卷被分配一个随机的名字,这个名字保证在主机上是唯一的,但在整个集群中可能不是唯一的。随机命名的卷与它的容器具有相同的生命周期,并在当</target>
        </trans-unit>
        <trans-unit id="9c71271958bd0ff5504788acbf4b95a5df820e73" translate="yes" xml:space="preserve">
          <source>is-automated</source>
          <target state="translated">is-automated</target>
        </trans-unit>
        <trans-unit id="9c0dfbe334ba50d50ed491d5d08478dde891cbc2" translate="yes" xml:space="preserve">
          <source>is-automated (boolean - true or false) - is the image automated or not</source>
          <target state="translated">is-automated (boolean-true或false)-图像是否自动化</target>
        </trans-unit>
        <trans-unit id="ee4ef869e1bd13dc335185a004b77549a2d6e3cf" translate="yes" xml:space="preserve">
          <source>is-official</source>
          <target state="translated">is-official</target>
        </trans-unit>
        <trans-unit id="483647e4b84071a72048eafc6b5cf6697a40a765" translate="yes" xml:space="preserve">
          <source>is-official (boolean - true or false) - is the image official or not</source>
          <target state="translated">is-official (boolean-true or false)-该图片是否为官方图片。</target>
        </trans-unit>
        <trans-unit id="4ee64af0b2223831d706d10af4775feb24fca81c" translate="yes" xml:space="preserve">
          <source>isolation</source>
          <target state="translated">isolation</target>
        </trans-unit>
        <trans-unit id="afc4a90f407dc88e8958c1c8666ed523c3a9d628" translate="yes" xml:space="preserve">
          <source>joins the current node to the swarm at the manager listen address based upon the swarm token.</source>
          <target state="translated">根据蜂群标记,在管理器监听地址将当前节点加入蜂群。</target>
        </trans-unit>
        <trans-unit id="c80f5bc166cd6739ba9ba6d94acabc0aa01494da" translate="yes" xml:space="preserve">
          <source>kill</source>
          <target state="translated">kill</target>
        </trans-unit>
        <trans-unit id="64c65374dbab6fe3762748196d9d3a9610e2e5a9" translate="yes" xml:space="preserve">
          <source>label</source>
          <target state="translated">label</target>
        </trans-unit>
        <trans-unit id="c08b4013d32246f2cfa2d1d2fd0980dba87ccf2b" translate="yes" xml:space="preserve">
          <source>label (&lt;code&gt;--filter label=key=value&lt;/code&gt;)</source>
          <target state="translated">标签（ &lt;code&gt;--filter label=key=value&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a042c734d910aa7b9953b302218057a41d01d98c" translate="yes" xml:space="preserve">
          <source>label (&lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt; or &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">标签（ &lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt; 或 &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="158f213769f3dd192daa50e64725164a8921a132" translate="yes" xml:space="preserve">
          <source>label (&lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt;, &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;, &lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt;, or &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;) - only remove containers with (or without, in case &lt;code&gt;label!=...&lt;/code&gt; is used) the specified labels.</source>
          <target state="translated">标签（ &lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt; ， &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ， &lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt; 或 &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ）-仅在有 &lt;code&gt;label!=...&lt;/code&gt; 情况下（或没有标签的情况）移除容器！ = ...用于）指定的标签。</target>
        </trans-unit>
        <trans-unit id="d3797afeeb53535de2c6543ea00c6096d5a44d1d" translate="yes" xml:space="preserve">
          <source>label (&lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt;, &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;, &lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt;, or &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;) - only remove containers, images, networks, and volumes with (or without, in case &lt;code&gt;label!=...&lt;/code&gt; is used) the specified labels.</source>
          <target state="translated">标签（ &lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt; ， &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ， &lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt; 或 &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ）-仅使用（）删除容器，图像，网络和卷或者没有，万一 &lt;code&gt;label!=...&lt;/code&gt; ）中使用指定的标签。</target>
        </trans-unit>
        <trans-unit id="38db22cf743024b0e71d0791c1bfdc75923ee9dd" translate="yes" xml:space="preserve">
          <source>label (&lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt;, &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;, &lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt;, or &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;) - only remove images with (or without, in case &lt;code&gt;label!=...&lt;/code&gt; is used) the specified labels.</source>
          <target state="translated">标签（ &lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt; ， &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ， &lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt; 或 &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ）-仅删除带有（或不带有，以防万一的 &lt;code&gt;label!=...&lt;/code&gt; 用于）指定的标签。</target>
        </trans-unit>
        <trans-unit id="4c6a715455c44956f653dcb24121eaf9430993e6" translate="yes" xml:space="preserve">
          <source>label (&lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt;, &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;, &lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt;, or &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;) - only remove networks with (or without, in case &lt;code&gt;label!=...&lt;/code&gt; is used) the specified labels.</source>
          <target state="translated">标签（ &lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt; ， &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ， &lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt; 或 &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ）-仅删除带有（或不带有，以防出现 &lt;code&gt;label!=...&lt;/code&gt; 用于）指定的标签。</target>
        </trans-unit>
        <trans-unit id="e2651f32d2eb42ef7491916ccf0f8b84301a06d5" translate="yes" xml:space="preserve">
          <source>label (Machine created with &lt;code&gt;--engine-label&lt;/code&gt; option, can be filtered with &lt;code&gt;label=&amp;lt;key&amp;gt;[=&amp;lt;value&amp;gt;]&lt;/code&gt;)</source>
          <target state="translated">标签（使用 &lt;code&gt;--engine-label&lt;/code&gt; 选项创建的机器，可以使用 &lt;code&gt;label=&amp;lt;key&amp;gt;[=&amp;lt;value&amp;gt;]&lt;/code&gt; 进行过滤）</target>
        </trans-unit>
        <trans-unit id="c7775e9214ae79db6716acbac8529400a4aff25c" translate="yes" xml:space="preserve">
          <source>labels</source>
          <target state="translated">labels</target>
        </trans-unit>
        <trans-unit id="7e2d3823d55d12a0df057803da53f955650aa678" translate="yes" xml:space="preserve">
          <source>leave the swarm</source>
          <target state="translated">离群索居</target>
        </trans-unit>
        <trans-unit id="1eb7d5c2200d0f49da387953fb79c9fef74fbb5c" translate="yes" xml:space="preserve">
          <source>limited</source>
          <target state="translated">limited</target>
        </trans-unit>
        <trans-unit id="295f8eaad7c83b8c2871ff82448f3a23a1432419" translate="yes" xml:space="preserve">
          <source>limited, maybe*</source>
          <target state="translated">有限,也许*</target>
        </trans-unit>
        <trans-unit id="d3d8dbcf5b7fa233dfc9f3f145f8e73d76ca0be1" translate="yes" xml:space="preserve">
          <source>link_local_ips</source>
          <target state="translated">link_local_ips</target>
        </trans-unit>
        <trans-unit id="379e75c850e1334ef7bece52694c2f26cebec78f" translate="yes" xml:space="preserve">
          <source>links</source>
          <target state="translated">links</target>
        </trans-unit>
        <trans-unit id="193633ebef0a33a447a326996eda59d45c408c35" translate="yes" xml:space="preserve">
          <source>list nodes in the swarm</source>
          <target state="translated">蜂群中的节点列表</target>
        </trans-unit>
        <trans-unit id="a3df2fa29890feda68b40e6a43cc09439d5ae506" translate="yes" xml:space="preserve">
          <source>log management is also typically handed to Docker, or to third-party services like Loggly or Splunk;</source>
          <target state="translated">日志管理通常也是交给Docker,或者交给第三方服务,比如Loggly或Splunk。</target>
        </trans-unit>
        <trans-unit id="a46affb9819e73b2076822cac4f3b718918561a4" translate="yes" xml:space="preserve">
          <source>log_driver</source>
          <target state="translated">log_driver</target>
        </trans-unit>
        <trans-unit id="c6fba0ab42a0cab77f6c965faec1c9cf57860da6" translate="yes" xml:space="preserve">
          <source>log_opt</source>
          <target state="translated">log_opt</target>
        </trans-unit>
        <trans-unit id="42f7b07db92a254d70b2763520ccb302387e6d6e" translate="yes" xml:space="preserve">
          <source>logging</source>
          <target state="translated">logging</target>
        </trans-unit>
        <trans-unit id="b0d9f389f8aac727e83ea16cbe7c34297f70f62b" translate="yes" xml:space="preserve">
          <source>logging section (optional)</source>
          <target state="translated">日志部分</target>
        </trans-unit>
        <trans-unit id="474c797713f37901928aafb6adbae0241d1750bd" translate="yes" xml:space="preserve">
          <source>logs</source>
          <target state="translated">logs</target>
        </trans-unit>
        <trans-unit id="3567886465050b7e24e2f2ca0d3e9b0c895c1090" translate="yes" xml:space="preserve">
          <source>loopholes in the container configuration profile, either by default, or when customized by users.</source>
          <target state="translated">容器配置配置文件中的漏洞,无论是默认的,还是用户自定义的。</target>
        </trans-unit>
        <trans-unit id="ebfdec641529d4b59a54e18f8b0e9730f85939fb" translate="yes" xml:space="preserve">
          <source>ls</source>
          <target state="translated">ls</target>
        </trans-unit>
        <trans-unit id="df13d6f8dd677b825d05a58f29f749a17db10d88" translate="yes" xml:space="preserve">
          <source>maintaining cluster state</source>
          <target state="translated">维持集群状态</target>
        </trans-unit>
        <trans-unit id="a4902e5d4c4eba11246b5eeb8fa528869c99709d" translate="yes" xml:space="preserve">
          <source>managing the swarm once you have everything running</source>
          <target state="translated">管理群落,一旦你有一切运行</target>
        </trans-unit>
        <trans-unit id="cb55ee92911cfc88c11928eac1c7b7dde67e360a" translate="yes" xml:space="preserve">
          <source>manifest annotate</source>
          <target state="translated">诠注</target>
        </trans-unit>
        <trans-unit id="b320a1d780e340436afed07ea1a8adce6348b297" translate="yes" xml:space="preserve">
          <source>manifest create</source>
          <target state="translated">彰显</target>
        </trans-unit>
        <trans-unit id="021f2c36767f0991386099dbb7fd1d6d88962a59" translate="yes" xml:space="preserve">
          <source>manifest inspect</source>
          <target state="translated">舱单检查</target>
        </trans-unit>
        <trans-unit id="0e3cb536e0f681e1f22ea862a025a098043c97b5" translate="yes" xml:space="preserve">
          <source>manifest push</source>
          <target state="translated">彰显推动</target>
        </trans-unit>
        <trans-unit id="6c08a28fcff282cb2d7ec8431d0afad22bb8e96c" translate="yes" xml:space="preserve">
          <source>map[string]string</source>
          <target state="translated">map[string]string</target>
        </trans-unit>
        <trans-unit id="9f3e9242c63870528e4600bc635fca8f0f5d6e9c" translate="yes" xml:space="preserve">
          <source>matches</source>
          <target state="translated">matches</target>
        </trans-unit>
        <trans-unit id="26f2fd91eb2871b9eed530539dde702c5ed8e704" translate="yes" xml:space="preserve">
          <source>maybe*</source>
          <target state="translated">maybe*</target>
        </trans-unit>
        <trans-unit id="99ef7e9bc5027ed4d6250b3f33657d6d5b28c8e6" translate="yes" xml:space="preserve">
          <source>membership</source>
          <target state="translated">membership</target>
        </trans-unit>
        <trans-unit id="e78fe7049341b36116d8054f5a3e00d01f245fcc" translate="yes" xml:space="preserve">
          <source>mode</source>
          <target state="translated">mode</target>
        </trans-unit>
        <trans-unit id="0d386c7e10f7dd67057d4654995b139b5de1da3f" translate="yes" xml:space="preserve">
          <source>mode (&lt;code&gt;--filter mode=replicated&lt;/code&gt;, or &lt;code&gt;--filter mode=global&lt;/code&gt;)</source>
          <target state="translated">模式（ &lt;code&gt;--filter mode=replicated&lt;/code&gt; 或 &lt;code&gt;--filter mode=global&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c7a6dddea994b2601021855183ae08b234de9f20" translate="yes" xml:space="preserve">
          <source>mount</source>
          <target state="translated">mount</target>
        </trans-unit>
        <trans-unit id="85ad01e3b6df240c4940e131f12795a24cb27d28" translate="yes" xml:space="preserve">
          <source>mount of the plugin, struct consisting of the following fields, see &lt;a href=&quot;https://github.com/opencontainers/runtime-spec/blob/master/config/#mounts&quot;&gt;&lt;code&gt;MOUNTS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">插件的安装，结构由以下字段组成，请参见&lt;a href=&quot;https://github.com/opencontainers/runtime-spec/blob/master/config/#mounts&quot;&gt; &lt;code&gt;MOUNTS&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce38ae84f7ff2d32c9cac3eef34e10dcfe9b2a8b" translate="yes" xml:space="preserve">
          <source>mount type.</source>
          <target state="translated">安装类型:</target>
        </trans-unit>
        <trans-unit id="6ae999552a0d2dca14d62e2bc8b764d377b1dd6c" translate="yes" xml:space="preserve">
          <source>name</source>
          <target state="translated">name</target>
        </trans-unit>
        <trans-unit id="d72e04a96c7567a7ae5da312c324cf4c6db63983" translate="yes" xml:space="preserve">
          <source>name (&lt;code&gt;--filter name=myapp_web&lt;/code&gt;)</source>
          <target state="translated">名称（ &lt;code&gt;--filter name=myapp_web&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="89d3fd5dcc719ef8293f99cfa8479299b1e93cbf" translate="yes" xml:space="preserve">
          <source>name (Machine name returned by driver, supports &lt;a href=&quot;https://github.com/google/re2/wiki/Syntax&quot;&gt;golang style&lt;/a&gt; regular expressions)</source>
          <target state="translated">名称（驱动程序返回的机器名称，支持&lt;a href=&quot;https://github.com/google/re2/wiki/Syntax&quot;&gt;golang样式&lt;/a&gt;正则表达式）</target>
        </trans-unit>
        <trans-unit id="530c6cd250626ba95f7f39f76db6a13323d31c41" translate="yes" xml:space="preserve">
          <source>name (a volume&amp;rsquo;s name)</source>
          <target state="translated">名称（卷的名称）</target>
        </trans-unit>
        <trans-unit id="60958e5627f0769b9f542f1b9e093bb815dddb5c" translate="yes" xml:space="preserve">
          <source>name (network&amp;rsquo;s name)</source>
          <target state="translated">名称（网络名称）</target>
        </trans-unit>
        <trans-unit id="cb902a272612c74f45142ccdd3c1b2c1693facdf" translate="yes" xml:space="preserve">
          <source>name of the args.</source>
          <target state="translated">氩气的名称。</target>
        </trans-unit>
        <trans-unit id="a32f9dfd833803076d602d56625b6395335d83ba" translate="yes" xml:space="preserve">
          <source>name of the device.</source>
          <target state="translated">设备的名称。</target>
        </trans-unit>
        <trans-unit id="875bfcd054a384d75c0300ed71c16403590d879a" translate="yes" xml:space="preserve">
          <source>name of the env.</source>
          <target state="translated">环境的名称。</target>
        </trans-unit>
        <trans-unit id="2c534d8119db18ea66383922b4a4647b145ada3f" translate="yes" xml:space="preserve">
          <source>name of the mount.</source>
          <target state="translated">峁。</target>
        </trans-unit>
        <trans-unit id="5808df7db5cd414896a5a2665a5f9c4523a2e54c" translate="yes" xml:space="preserve">
          <source>names the node with the machine hostname</source>
          <target state="translated">用机器主机名命名节点</target>
        </trans-unit>
        <trans-unit id="fc3fd19dc874eaf859174d8f32a20e49990023c7" translate="yes" xml:space="preserve">
          <source>names the node with the machine hostname.</source>
          <target state="translated">用机器主机名命名节点。</target>
        </trans-unit>
        <trans-unit id="391b6629d9b645d3073c6f5ad432c40537646604" translate="yes" xml:space="preserve">
          <source>net</source>
          <target state="translated">net</target>
        </trans-unit>
        <trans-unit id="c112e88173d4d3c5c1409a17bee4837673523991" translate="yes" xml:space="preserve">
          <source>network</source>
          <target state="translated">network</target>
        </trans-unit>
        <trans-unit id="d27071459c9f76156f614de0ab63bd92ffa6d2fa" translate="yes" xml:space="preserve">
          <source>network (&lt;code&gt;network=&amp;lt;name or id&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">网络（ &lt;code&gt;network=&amp;lt;name or id&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b7d01cffb4c080ad93cda1d47c24dad9a322214a" translate="yes" xml:space="preserve">
          <source>network management happens outside of the containers, enforcing separation of concerns as much as possible, meaning that a container should never need to perform &lt;code&gt;ifconfig&lt;/code&gt;, &lt;code&gt;route&lt;/code&gt;, or ip commands (except when a container is specifically engineered to behave like a router or firewall, of course).</source>
          <target state="translated">网络管理发生在容器外部，从而尽可能地将关注点分离，这意味着容器永远不需要执行 &lt;code&gt;ifconfig&lt;/code&gt; ， &lt;code&gt;route&lt;/code&gt; 或ip命令（除非容器专门设计为像路由器或防火墙那样运行），课程）。</target>
        </trans-unit>
        <trans-unit id="d04ab42aff5be4b3aa35252e08f9a8e8b69bb886" translate="yes" xml:space="preserve">
          <source>network of the plugin, struct consisting of the following fields</source>
          <target state="translated">插件的网络,结构体由以下字段组成。</target>
        </trans-unit>
        <trans-unit id="e21dd6a7d58382053e4881d09962489135b5d45f" translate="yes" xml:space="preserve">
          <source>network settings</source>
          <target state="translated">网络设置</target>
        </trans-unit>
        <trans-unit id="cab08a2526be1a4d241653e7bff19c6aecd1cbe7" translate="yes" xml:space="preserve">
          <source>network type.</source>
          <target state="translated">网络类型:</target>
        </trans-unit>
        <trans-unit id="4d580f61eddb9f58ac9c9ff15716213e5d557e6a" translate="yes" xml:space="preserve">
          <source>network_mode</source>
          <target state="translated">network_mode</target>
        </trans-unit>
        <trans-unit id="ec1fde8a67b25c95c74e66c3b2301c7b8f36cf98" translate="yes" xml:space="preserve">
          <source>networks</source>
          <target state="translated">networks</target>
        </trans-unit>
        <trans-unit id="fd1286353570c5703799ba76999323b7c7447b06" translate="yes" xml:space="preserve">
          <source>no</source>
          <target state="translated">no</target>
        </trans-unit>
        <trans-unit id="f8e966d1e207d02c44511a58dccff2f5429e9a3b" translate="yes" xml:space="preserve">
          <source>node</source>
          <target state="translated">node</target>
        </trans-unit>
        <trans-unit id="e42ada5cbe6769944f437941e9a6b07c6f3b47f2" translate="yes" xml:space="preserve">
          <source>node (&lt;code&gt;--filter node=mynode&lt;/code&gt;)</source>
          <target state="translated">节点（ &lt;code&gt;--filter node=mynode&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="dd0bf6fddd6ab5dbaffc253376f06b43846d1374" translate="yes" xml:space="preserve">
          <source>node (&lt;code&gt;node=&amp;lt;id&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">节点（ &lt;code&gt;node=&amp;lt;id&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="55e45a82636b730633fcc16b32748c79a57b439e" translate="yes" xml:space="preserve">
          <source>node attribute</source>
          <target state="translated">节点属性</target>
        </trans-unit>
        <trans-unit id="0b3310650bba53f2b2c6e8849252be97f4ca837e" translate="yes" xml:space="preserve">
          <source>node.hostname</source>
          <target state="translated">node.hostname</target>
        </trans-unit>
        <trans-unit id="6f3c5cae8ee5b0aeeab70b417f784186e7c3f59c" translate="yes" xml:space="preserve">
          <source>node.hostname!=node-2</source>
          <target state="translated">node.hostname!=node-2</target>
        </trans-unit>
        <trans-unit id="d4679b5f29e4bc489882ff400959b1151f854fd3" translate="yes" xml:space="preserve">
          <source>node.id</source>
          <target state="translated">node.id</target>
        </trans-unit>
        <trans-unit id="18f31db3ef28378b753ff07b580daa94b759e4c2" translate="yes" xml:space="preserve">
          <source>node.id==2ivku8v2gvtg4</source>
          <target state="translated">node.id==2ivku8v2gvtg4</target>
        </trans-unit>
        <trans-unit id="bc137ec141cf50b22e6b14d1d16cbb459043c17f" translate="yes" xml:space="preserve">
          <source>node.labels</source>
          <target state="translated">node.labels</target>
        </trans-unit>
        <trans-unit id="cfd1e92e7cafc0953e9401039e24be7afca86f5b" translate="yes" xml:space="preserve">
          <source>node.labels.security==high</source>
          <target state="translated">node.labels.security==high</target>
        </trans-unit>
        <trans-unit id="cec11bc129f7ebc3dea7a0040df43209afec48aa" translate="yes" xml:space="preserve">
          <source>node.role</source>
          <target state="translated">node.role</target>
        </trans-unit>
        <trans-unit id="61c876bf8df1a90861f41f6ba1212b5e5fc49826" translate="yes" xml:space="preserve">
          <source>node.role==manager</source>
          <target state="translated">node.role==manager</target>
        </trans-unit>
        <trans-unit id="2d80602b8794571316ecc8202025832feba18f69" translate="yes" xml:space="preserve">
          <source>npipe</source>
          <target state="translated">npipe</target>
        </trans-unit>
        <trans-unit id="e2bec22e85a94bab8e50b1a4af86e7835ef533dc" translate="yes" xml:space="preserve">
          <source>on a CI server, to keep builds from interfering with each other, you can set the project name to a unique build number</source>
          <target state="translated">在CI服务器上,为了防止构建过程中相互干扰,您可以将项目名称设置为唯一的构建号。</target>
        </trans-unit>
        <trans-unit id="2834a69998f3f637e1cc3b20df706883266d51b2" translate="yes" xml:space="preserve">
          <source>on a dev host, to create multiple copies of a single environment, such as when you want to run a stable copy for each feature branch of a project</source>
          <target state="translated">在开发主机上,创建一个环境的多个副本,例如当你想为项目的每个功能分支运行一个稳定的副本时。</target>
        </trans-unit>
        <trans-unit id="f525aca0a837894422f3f056e9e4d7f8b3b2c0b0" translate="yes" xml:space="preserve">
          <source>on a shared host or dev host, to prevent different projects, which may use the same service names, from interfering with each other</source>
          <target state="translated">在共享主机或开发主机上,以防止可能使用相同服务名称的不同项目相互干扰。</target>
        </trans-unit>
        <trans-unit id="63695c39a9a6cc341c8a251eeaa66e0167778bf3" translate="yes" xml:space="preserve">
          <source>on the current Linux implementation. See also</source>
          <target state="translated">关于当前Linux的实现。另见</target>
        </trans-unit>
        <trans-unit id="f304596e6888af9f7e2de71d5e89d3d7b2004e30" translate="yes" xml:space="preserve">
          <source>only display license information and exit</source>
          <target state="translated">只显示许可证信息并退出</target>
        </trans-unit>
        <trans-unit id="35e2a2733681e15168874ea15f741166b1f1000f" translate="yes" xml:space="preserve">
          <source>open ports between the hosts</source>
          <target state="translated">开放端口</target>
        </trans-unit>
        <trans-unit id="1a9d0be1681b4e4bfd927dc6efc5ff1f0d0b393a" translate="yes" xml:space="preserve">
          <source>option is given when mounting the bind or volume. Note that setting</source>
          <target state="translated">挂载绑定或卷的时候,会给出选项。请注意,设置</target>
        </trans-unit>
        <trans-unit id="264aa9404c6e713f6c3220818c5dd1f7eb47bfe7" translate="yes" xml:space="preserve">
          <source>option, because submounts are not mounted as read-only. Set</source>
          <target state="translated">选项,因为子挂载不是以只读方式挂载。设置</target>
        </trans-unit>
        <trans-unit id="81ad3496e8db2260d9a3f3e0e4e89e37ccad1d34" translate="yes" xml:space="preserve">
          <source>options of the mount.</source>
          <target state="translated">的选项。</target>
        </trans-unit>
        <trans-unit id="da8e36d4bb98c8358bd6464b6c6e1e59483822f0" translate="yes" xml:space="preserve">
          <source>options that are available for a particular command</source>
          <target state="translated">特定命令的可用选项</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="15dd1c3f57c578aacb0c1a4a52009cf37e24b3c4" translate="yes" xml:space="preserve">
          <source>or no value: Mounts the bind or volume read-only.</source>
          <target state="translated">或无值。以只读方式安装绑定或卷。</target>
        </trans-unit>
        <trans-unit id="8901dbd3211bc9eee31032808172906160219676" translate="yes" xml:space="preserve">
          <source>or two examples of how to pass more parameters to that ENTRYPOINT:</source>
          <target state="translated">或两个如何向该ENTRYPOINT传递更多参数的例子。</target>
        </trans-unit>
        <trans-unit id="b9deb3a38a78c84cf593c310b49c3347b5624e0e" translate="yes" xml:space="preserve">
          <source>otherwise, &lt;code&gt;root&lt;/code&gt;.</source>
          <target state="translated">否则，请 &lt;code&gt;root&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6cc8d3ffd21316f339d0e6960da01ce49a4a8120" translate="yes" xml:space="preserve">
          <source>ou cannot override a key whose value is another map. For instance, setting &lt;code&gt;NOTARY_SERVER_STORAGE='{&quot;storage&quot;: {&quot;backend&quot;: &quot;memory&quot;}}'&lt;/code&gt; does not set in-memory storage. It just fails to parse. You can only override keys whose values are strings or numbers.</source>
          <target state="translated">您无法覆盖其值为另一个映射的键。例如，设置 &lt;code&gt;NOTARY_SERVER_STORAGE='{&quot;storage&quot;: {&quot;backend&quot;: &quot;memory&quot;}}'&lt;/code&gt; 不会设置内存中存储。它只是无法解析。您只能覆盖值为字符串或数字的键。</target>
        </trans-unit>
        <trans-unit id="543d99683c3062544f5957fd8be95b83a6718fbc" translate="yes" xml:space="preserve">
          <source>overlay</source>
          <target state="translated">overlay</target>
        </trans-unit>
        <trans-unit id="4952a08df8c9b9053e5cbdf1379ec9aa93a6df54" translate="yes" xml:space="preserve">
          <source>override default location of containerd endpoint</source>
          <target state="translated">覆盖 containerd 端点的默认位置</target>
        </trans-unit>
        <trans-unit id="cefcd6b1f122108d23aeb9fda297f043a0a88c29" translate="yes" xml:space="preserve">
          <source>p1_cmd p2_cmd</source>
          <target state="translated">p1_cmd p2_cmd</target>
        </trans-unit>
        <trans-unit id="c09e780703098daceab350e387a9d87a4a85978d" translate="yes" xml:space="preserve">
          <source>path of devices</source>
          <target state="translated">器件路径</target>
        </trans-unit>
        <trans-unit id="f41ff7a1c6a965a46516d3d31a4bdcc258f95460" translate="yes" xml:space="preserve">
          <source>path of the device.</source>
          <target state="translated">设备的路径。</target>
        </trans-unit>
        <trans-unit id="9f5b46f742294c873b55a25cfc970d05026ed37b" translate="yes" xml:space="preserve">
          <source>path to be mounted as rshared, so that mounts under that path are visible to docker. This is useful for volume plugins. This path will be bind-mounted outside of the plugin rootfs so it&amp;rsquo;s contents are preserved on upgrade.</source>
          <target state="translated">要作为rshared挂载的路径，因此docker可以看到该路径下的挂载。这对于批量插件很有用。该路径将绑定安装在插件rootfs之外，因此其内容在升级时会保留。</target>
        </trans-unit>
        <trans-unit id="ef8d29955a725c39916a4626f3921a0104242439" translate="yes" xml:space="preserve">
          <source>pause</source>
          <target state="translated">pause</target>
        </trans-unit>
        <trans-unit id="23173d97eed7dbd8332029f2d2d716f04566aaa7" translate="yes" xml:space="preserve">
          <source>pause a node so it can&amp;rsquo;t receive new tasks.</source>
          <target state="translated">暂停节点，使其无法接收新任务。</target>
        </trans-unit>
        <trans-unit id="c8dbfae0c1fb68d0df9c6bc6e18ad250e8d87010" translate="yes" xml:space="preserve">
          <source>performing signing operations with these keys whenever the Notary server requests</source>
          <target state="translated">每当公证服务器请求时,用这些密钥执行签名操作。</target>
        </trans-unit>
        <trans-unit id="e411f5c208942f771d8af25a6edeb75f0676cb55" translate="yes" xml:space="preserve">
          <source>pid</source>
          <target state="translated">pid</target>
        </trans-unit>
        <trans-unit id="fce1869fc11806ed011251ce18dd901ed0b3a08c" translate="yes" xml:space="preserve">
          <source>pids_limit</source>
          <target state="translated">pids_limit</target>
        </trans-unit>
        <trans-unit id="0eed454125af2b3f69d712bbc1190ac8ec5420ee" translate="yes" xml:space="preserve">
          <source>pip version 6.0 or greater is required.</source>
          <target state="translated">要求pip版本为6.0或更高。</target>
        </trans-unit>
        <trans-unit id="7843fc5bea024e9b274e26db43b7e680d8bc9356" translate="yes" xml:space="preserve">
          <source>placement</source>
          <target state="translated">placement</target>
        </trans-unit>
        <trans-unit id="3c72abbe626f27d174d80fc434b851cce7bde6d3" translate="yes" xml:space="preserve">
          <source>platform</source>
          <target state="translated">platform</target>
        </trans-unit>
        <trans-unit id="f05d9424c949ecf084c9afd59ce6aeb16356b206" translate="yes" xml:space="preserve">
          <source>plugin (&lt;code&gt;plugin=&amp;lt;name or id&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">插件（ &lt;code&gt;plugin=&amp;lt;name or id&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="062d8a9dec0fa507d19f3b3481b4980ca139455f" translate="yes" xml:space="preserve">
          <source>port</source>
          <target state="translated">port</target>
        </trans-unit>
        <trans-unit id="7941fd7476dd2659884eacc31ae02cf7611d8703" translate="yes" xml:space="preserve">
          <source>ports</source>
          <target state="translated">ports</target>
        </trans-unit>
        <trans-unit id="607d88ae5ac163d412b5ca61b79dacb20ad37432" translate="yes" xml:space="preserve">
          <source>poweroff</source>
          <target state="translated">poweroff</target>
        </trans-unit>
        <trans-unit id="3345867ecfeeaaae30e155d010fc96d9f5119644" translate="yes" xml:space="preserve">
          <source>priority</source>
          <target state="translated">priority</target>
        </trans-unit>
        <trans-unit id="797e0337559133338fd72e30146fcb0b2713eeb7" translate="yes" xml:space="preserve">
          <source>produce JSON-formatted logs</source>
          <target state="translated">产生JSON格式的日志</target>
        </trans-unit>
        <trans-unit id="6e9b4af64b7aeed1decfa7a974b96ef6f9e40d9b" translate="yes" xml:space="preserve">
          <source>protocol</source>
          <target state="translated">protocol</target>
        </trans-unit>
        <trans-unit id="868b357f69316d1e9bc7a3d4a8d0637f6779223f" translate="yes" xml:space="preserve">
          <source>provision</source>
          <target state="translated">provision</target>
        </trans-unit>
        <trans-unit id="c67f1ee17880030ce11821dcc9be7af90b863d9b" translate="yes" xml:space="preserve">
          <source>ps</source>
          <target state="translated">ps</target>
        </trans-unit>
        <trans-unit id="db7d7b4a1b56d22f294d35aa0a764f98e713c1fa" translate="yes" xml:space="preserve">
          <source>publish and expose</source>
          <target state="translated">揭发</target>
        </trans-unit>
        <trans-unit id="a4212cd79c193852fde1a77c9782fe0df19bdf8f" translate="yes" xml:space="preserve">
          <source>published and target port</source>
          <target state="translated">公示端口和目标端口</target>
        </trans-unit>
        <trans-unit id="c872d5564551dae02f3833dc6ec1f0b4475abdb4" translate="yes" xml:space="preserve">
          <source>pull</source>
          <target state="translated">pull</target>
        </trans-unit>
        <trans-unit id="dc867c03d6f1f4385a2475b4be1137e585036dd1" translate="yes" xml:space="preserve">
          <source>push</source>
          <target state="translated">push</target>
        </trans-unit>
        <trans-unit id="73b9f04976dfc2d88430f0582bc42066af9f5a3c" translate="yes" xml:space="preserve">
          <source>read-write</source>
          <target state="translated">read-write</target>
        </trans-unit>
        <trans-unit id="9a27718297218c3757c365d357d13f49d0fa3065" translate="yes" xml:space="preserve">
          <source>readonly</source>
          <target state="translated">readonly</target>
        </trans-unit>
        <trans-unit id="9c1135511782bf7e10795c4c56b2d403db40529b" translate="yes" xml:space="preserve">
          <source>reference (pattern of an image reference) - filter images whose reference matches the specified pattern</source>
          <target state="translated">引用(图像引用的模式)--过滤其引用符合指定模式的图像。</target>
        </trans-unit>
        <trans-unit id="37f59777578448f25b1e924b48f6b4a73e60c294" translate="yes" xml:space="preserve">
          <source>regenerate-certs</source>
          <target state="translated">regenerate-certs</target>
        </trans-unit>
        <trans-unit id="9b0d6e5c92043150b4c60223943224baa11f40e0" translate="yes" xml:space="preserve">
          <source>remote_server section (optional)</source>
          <target state="translated">远程服务器部分(可选</target>
        </trans-unit>
        <trans-unit id="5c9d14b2f8b526f52dec3a93ba1f2a31ddbe4698" translate="yes" xml:space="preserve">
          <source>replicas</source>
          <target state="translated">replicas</target>
        </trans-unit>
        <trans-unit id="3b68bb33b67266b96266205bc1c62ba86597c761" translate="yes" xml:space="preserve">
          <source>reporting section (optional)</source>
          <target state="translated">报告部分(任选)</target>
        </trans-unit>
        <trans-unit id="9b798b17849d8ed0e1e53e1b1d1f15cdb5cf6b17" translate="yes" xml:space="preserve">
          <source>repositories section (optional)</source>
          <target state="translated">储存库部分(可选</target>
        </trans-unit>
        <trans-unit id="7231c62884f08ba1dae4a5235d7be56016133404" translate="yes" xml:space="preserve">
          <source>repository or tagging keys that sign tags</source>
          <target state="translated">储存库或标记密钥,用于签署标记。</target>
        </trans-unit>
        <trans-unit id="7ba6d8ce4925a4b1d2a07789f6618c7a1ef2224b" translate="yes" xml:space="preserve">
          <source>requests a TLS certificate from the manager.</source>
          <target state="translated">向管理员申请TLS证书。</target>
        </trans-unit>
        <trans-unit id="91ef0c1608b20c9c5bd9e003bbb600229c0dfeb1" translate="yes" xml:space="preserve">
          <source>reset</source>
          <target state="translated">reset</target>
        </trans-unit>
        <trans-unit id="cc1aca718668ad4ef114dda13d3c555162dc3c45" translate="yes" xml:space="preserve">
          <source>resource density can be optimized.</source>
          <target state="translated">可以优化资源密度。</target>
        </trans-unit>
        <trans-unit id="0189424a5a60fed329fa868e83bf2760d97a4778" translate="yes" xml:space="preserve">
          <source>resources</source>
          <target state="translated">resources</target>
        </trans-unit>
        <trans-unit id="16f766f2f5d7ff50934fb25604a14e9fd4126771" translate="yes" xml:space="preserve">
          <source>restart</source>
          <target state="translated">restart</target>
        </trans-unit>
        <trans-unit id="adca4352ca26530ffde2bb12526c11fe6d97a947" translate="yes" xml:space="preserve">
          <source>restart_policy</source>
          <target state="translated">restart_policy</target>
        </trans-unit>
        <trans-unit id="59138b9c6007527a46d59d39086f1c63de25dc92" translate="yes" xml:space="preserve">
          <source>restore unavailable or paused nodes available status.</source>
          <target state="translated">恢复不可用或暂停的节点可用状态。</target>
        </trans-unit>
        <trans-unit id="5cd7e29c88170aa3f16281e0dbf5772c137f6d8d" translate="yes" xml:space="preserve">
          <source>rm</source>
          <target state="translated">rm</target>
        </trans-unit>
        <trans-unit id="8dca46428d005a2f4c2e039fb250964d6139a8b2" translate="yes" xml:space="preserve">
          <source>role</source>
          <target state="translated">role</target>
        </trans-unit>
        <trans-unit id="4007b191fe0f2a7d283cce280ae0fcb54ce4fa43" translate="yes" xml:space="preserve">
          <source>rollback_config</source>
          <target state="translated">rollback_config</target>
        </trans-unit>
        <trans-unit id="2e77eda8896a124b58808ae2a7a2cd9e04d411fe" translate="yes" xml:space="preserve">
          <source>root key</source>
          <target state="translated">根密钥</target>
        </trans-unit>
        <trans-unit id="df6ad19037c97987c4ff9792810c0e145356717c" translate="yes" xml:space="preserve">
          <source>run</source>
          <target state="translated">run</target>
        </trans-unit>
        <trans-unit id="f2e18ffc17e2595362b5468aac34221e09934bf8" translate="yes" xml:space="preserve">
          <source>runtime</source>
          <target state="translated">runtime</target>
        </trans-unit>
        <trans-unit id="2c18ac49d87ee2a1f0387045c53e8891be790df8" translate="yes" xml:space="preserve">
          <source>runtime constraints on CPU and memory</source>
          <target state="translated">运行时对CPU和内存的限制</target>
        </trans-unit>
        <trans-unit id="ac486fd398093740a87bfd231e43af610b922e2d" translate="yes" xml:space="preserve">
          <source>sa-east-1</source>
          <target state="translated">sa-east-1</target>
        </trans-unit>
        <trans-unit id="13a4a11319d31c1b323d5774f44240a9ffc984d0" translate="yes" xml:space="preserve">
          <source>save</source>
          <target state="translated">save</target>
        </trans-unit>
        <trans-unit id="60020d1b19707b587574a1c80412af51ea9e12b3" translate="yes" xml:space="preserve">
          <source>scale</source>
          <target state="translated">scale</target>
        </trans-unit>
        <trans-unit id="70d78c0bd6768e96fa8d5c477ac63aab926cc55f" translate="yes" xml:space="preserve">
          <source>scheduling services</source>
          <target state="translated">调度服务</target>
        </trans-unit>
        <trans-unit id="9ad43caee71362d5cd2eb7f4f6fbb4538671ca61" translate="yes" xml:space="preserve">
          <source>scope (&lt;code&gt;scope=&amp;lt;local or swarm&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">作用域（ &lt;code&gt;scope=&amp;lt;local or swarm&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ec34d8001df884991af250249f43f8af8fbb448a" translate="yes" xml:space="preserve">
          <source>scope (&lt;code&gt;swarm|global|local&lt;/code&gt;)</source>
          <target state="translated">范围（ &lt;code&gt;swarm|global|local&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="61541b484ac2a6488909f3326523fa0e68783461" translate="yes" xml:space="preserve">
          <source>scp</source>
          <target state="translated">scp</target>
        </trans-unit>
        <trans-unit id="367e4a439d034a0844bab119596067d5141fc032" translate="yes" xml:space="preserve">
          <source>sctp</source>
          <target state="translated">sctp</target>
        </trans-unit>
        <trans-unit id="ccbeabcdb73b29c2ff540f83523b3603544d7677" translate="yes" xml:space="preserve">
          <source>sdl</source>
          <target state="translated">sdl</target>
        </trans-unit>
        <trans-unit id="4a54d0ee9d5a78982d16215bdc34d561b219f75c" translate="yes" xml:space="preserve">
          <source>secret (&lt;code&gt;secret=&amp;lt;name or id&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">秘密（ &lt;code&gt;secret=&amp;lt;name or id&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="fe86558143c0bd528f649a153bdc32b8fa90301c" translate="yes" xml:space="preserve">
          <source>secrets</source>
          <target state="translated">secrets</target>
        </trans-unit>
        <trans-unit id="cc9513decc78bd549d4fee8908b3ca800974c9b1" translate="yes" xml:space="preserve">
          <source>secrets configuration reference</source>
          <target state="translated">秘密配置参考</target>
        </trans-unit>
        <trans-unit id="f1d01b68b79d659fdfd5f90226b553af59a1b2ea" translate="yes" xml:space="preserve">
          <source>security_opt</source>
          <target state="translated">security_opt</target>
        </trans-unit>
        <trans-unit id="6a560cddac5324cd5bfecdf9f8651fc9811c9664" translate="yes" xml:space="preserve">
          <source>separate)</source>
          <target state="translated">separate)</target>
        </trans-unit>
        <trans-unit id="f2297f3d0b97f85a6707fe2823565d69460261a2" translate="yes" xml:space="preserve">
          <source>server configuration file</source>
          <target state="translated">服务器配置文件</target>
        </trans-unit>
        <trans-unit id="83710e6d6b56b116f3040b86f4ecc011438314e5" translate="yes" xml:space="preserve">
          <source>server section (required)</source>
          <target state="translated">服务器部分</target>
        </trans-unit>
        <trans-unit id="227126229b72f115eafa85d0a3a5508c26ccda43" translate="yes" xml:space="preserve">
          <source>server-managed keys such as the timestamp key, which provides freshness security guarantees for your repository</source>
          <target state="translated">服务器管理的密钥,如时间戳密钥,它为您的存储库提供新鲜的安全保证。</target>
        </trans-unit>
        <trans-unit id="ecb64564a0befcc54dbac9f98179f7e912548d17" translate="yes" xml:space="preserve">
          <source>service (&lt;code&gt;--filter service=web&lt;/code&gt;)</source>
          <target state="translated">服务（ &lt;code&gt;--filter service=web&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="fbe568b1f6e27c22253df1e2920b0a03d3eecba1" translate="yes" xml:space="preserve">
          <source>service (&lt;code&gt;service=&amp;lt;name or id&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">服务（ &lt;code&gt;service=&amp;lt;name or id&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a1d4a47a5ac6168f80a3b2dd44bb61a95b39f654" translate="yes" xml:space="preserve">
          <source>service create</source>
          <target state="translated">创立</target>
        </trans-unit>
        <trans-unit id="022c525c60da4ee9fa83fbe967557ace98624ef5" translate="yes" xml:space="preserve">
          <source>service inspect</source>
          <target state="translated">检修</target>
        </trans-unit>
        <trans-unit id="fe347338eab469cf46f66e20bcb28bb2bed3a926" translate="yes" xml:space="preserve">
          <source>service ls</source>
          <target state="translated">服务LS</target>
        </trans-unit>
        <trans-unit id="77a21128cf703bfd059ea6b7c4d35de57fad1662" translate="yes" xml:space="preserve">
          <source>service names that make sense in a given context, such as services with running or stopped instances or services based on images vs. services based on Dockerfiles. For &lt;code&gt;docker-compose scale&lt;/code&gt;, completed service names automatically have &amp;ldquo;=&amp;rdquo; appended.</source>
          <target state="translated">在给定上下文中有意义的服务名称，例如具有正在运行或已停止实例的服务或基于映像的服务与基于Dockerfiles的服务。对于 &lt;code&gt;docker-compose scale&lt;/code&gt; ，已完成的服务名称会自动附加&amp;ldquo; =&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="f72e112da8cbccb5d58d96a0f02bf32f12a4df71" translate="yes" xml:space="preserve">
          <source>service ps</source>
          <target state="translated">服务站</target>
        </trans-unit>
        <trans-unit id="badf0fc806bed6eaeddb39df6be4a14455b49912" translate="yes" xml:space="preserve">
          <source>service rm</source>
          <target state="translated">役室</target>
        </trans-unit>
        <trans-unit id="a4a9c8c064fd95202acf54ff724d5d8f3b0d4533" translate="yes" xml:space="preserve">
          <source>service scale</source>
          <target state="translated">服务规模</target>
        </trans-unit>
        <trans-unit id="c9caafe7d191e8a0e96c17590b6cd4199f30a34d" translate="yes" xml:space="preserve">
          <source>service update</source>
          <target state="translated">服务更新</target>
        </trans-unit>
        <trans-unit id="edc57a6dad8b7aa766aa1212af80695ec6e165b4" translate="yes" xml:space="preserve">
          <source>serving swarm mode &lt;a href=&quot;https://docs.docker.com/develop/sdk&quot;&gt;HTTP API endpoints&lt;/a&gt;</source>
          <target state="translated">服务群模式&lt;a href=&quot;https://docs.docker.com/develop/sdk&quot;&gt;HTTP API端点&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="85626de3c03275b5fcb9dcdbb35aa7faf146e667" translate="yes" xml:space="preserve">
          <source>set the docker endpoint</source>
          <target state="translated">设置docker端点</target>
        </trans-unit>
        <trans-unit id="215d6bbc93a9f65c2f8b468b10d07341ce61a1f4" translate="yes" xml:space="preserve">
          <source>set the kubernetes endpoint</source>
          <target state="translated">设置kubernetes端点</target>
        </trans-unit>
        <trans-unit id="65127fc20bb7b8ce0b2977cdbdd138fe611874c3" translate="yes" xml:space="preserve">
          <source>sets the current node to &lt;code&gt;Active&lt;/code&gt; availability, meaning it can receive tasks from the scheduler.</source>
          <target state="translated">将当前节点设置为 &lt;code&gt;Active&lt;/code&gt; 可用性，这意味着它可以从调度程序接收任务。</target>
        </trans-unit>
        <trans-unit id="296bddee9cbd27bfb8ba3a6b60ae721a7792eb19" translate="yes" xml:space="preserve">
          <source>sharing PID or NET namespaces with the host (&lt;code&gt;--pid=host&lt;/code&gt; or &lt;code&gt;--network=host&lt;/code&gt;).</source>
          <target state="translated">与主机（ &lt;code&gt;--pid=host&lt;/code&gt; 或 &lt;code&gt;--network=host&lt;/code&gt; ）共享PID或NET名称空间。</target>
        </trans-unit>
        <trans-unit id="077356d3407db0e36851de3caa85eb4cc2dba3fd" translate="yes" xml:space="preserve">
          <source>shellinit</source>
          <target state="translated">shellinit</target>
        </trans-unit>
        <trans-unit id="690007c765d682c4d3c27d3a39ef31e78477d161" translate="yes" xml:space="preserve">
          <source>shm_size</source>
          <target state="translated">shm_size</target>
        </trans-unit>
        <trans-unit id="8638c7fd14b7fa41b75af1f072f7f91fd35075e2" translate="yes" xml:space="preserve">
          <source>signer configuration file</source>
          <target state="translated">签字人配置文件</target>
        </trans-unit>
        <trans-unit id="2eb888e95f113117c63e0d526f68ad90267a45e6" translate="yes" xml:space="preserve">
          <source>since</source>
          <target state="translated">since</target>
        </trans-unit>
        <trans-unit id="adfffe5eaa0670207cde2f0a382df274d21147ae" translate="yes" xml:space="preserve">
          <source>since (&lt;code&gt;&amp;lt;image-name&amp;gt;[:&amp;lt;tag&amp;gt;]&lt;/code&gt;, &lt;code&gt;&amp;lt;image id&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;image@digest&amp;gt;&lt;/code&gt;) - filter images created since given id or references</source>
          <target state="translated">自（ &lt;code&gt;&amp;lt;image-name&amp;gt;[:&amp;lt;tag&amp;gt;]&lt;/code&gt; ， &lt;code&gt;&amp;lt;image id&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;image@digest&amp;gt;&lt;/code&gt; ）-过滤自给定id或引用以来创建的图像</target>
        </trans-unit>
        <trans-unit id="4a3550e582560d137ad00ec5ef9e311e7c9d9730" translate="yes" xml:space="preserve">
          <source>slab pages</source>
          <target state="translated">板坯页</target>
        </trans-unit>
        <trans-unit id="e94025be336b1f89159af64b1f6eda5d470ac8d6" translate="yes" xml:space="preserve">
          <source>snapshot</source>
          <target state="translated">snapshot</target>
        </trans-unit>
        <trans-unit id="6724bbe9902b675183c86414e882c1921497cd97" translate="yes" xml:space="preserve">
          <source>so that that Notary signer knows to encrypt all keys with the passphrase &lt;code&gt;mypassword&lt;/code&gt;, and to decrypt any private key stored with password alias &lt;code&gt;passwordalias1&lt;/code&gt; with the passphrase &lt;code&gt;mypassword&lt;/code&gt;.</source>
          <target state="translated">使该公证员签名者知道所有的密钥与密码加密 &lt;code&gt;mypassword&lt;/code&gt; ，并解密存储与密码别名任何私钥 &lt;code&gt;passwordalias1&lt;/code&gt; 与密码 &lt;code&gt;mypassword&lt;/code&gt; 。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
