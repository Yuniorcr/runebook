<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="vagrant">
    <body>
      <group id="vagrant">
        <trans-unit id="7157067c0c7bc52981a89abe3a6814131705c440" translate="yes" xml:space="preserve">
          <source>Default Router</source>
          <target state="translated">默认路由器</target>
        </trans-unit>
        <trans-unit id="a659689dd74dc1cfe72d549bc485bfc4a28c9fe4" translate="yes" xml:space="preserve">
          <source>Default User Settings</source>
          <target state="translated">默认用户设置</target>
        </trans-unit>
        <trans-unit id="e8dbe4760474073e756bb55c96338ee21bcbb30f" translate="yes" xml:space="preserve">
          <source>Default value is &lt;code&gt;false&lt;/code&gt; (minimal verbosity).</source>
          <target state="translated">默认值为 &lt;code&gt;false&lt;/code&gt; （最小详细程度）。</target>
        </trans-unit>
        <trans-unit id="e9ca46f01c2efc7fae2fd7b65a1d3c938aec2f70" translate="yes" xml:space="preserve">
          <source>Defining Multiple Machines</source>
          <target state="translated">定义多机</target>
        </trans-unit>
        <trans-unit id="86e7618d8ff9e2c7cdc50a0d26b78bfcc95c2c7e" translate="yes" xml:space="preserve">
          <source>Defining a Forwarded Port</source>
          <target state="translated">定义一个转发端口</target>
        </trans-unit>
        <trans-unit id="b5116cfb13658ed890f56b14217da2bcd12bbb3e" translate="yes" xml:space="preserve">
          <source>Definition Component</source>
          <target state="translated">定义部分</target>
        </trans-unit>
        <trans-unit id="58060c4b8ef932b85efa0e06693c787701644831" translate="yes" xml:space="preserve">
          <source>Definition and Implementation</source>
          <target state="translated">定义和执行</target>
        </trans-unit>
        <trans-unit id="d474806b31f5d16516b23495358bce19a11a0c9e" translate="yes" xml:space="preserve">
          <source>Delete the &quot;Snapshots&quot; folder. It is of no use to the Vagrant Hyper-V provider and can only add to the size of the box if there are snapshots in that folder.</source>
          <target state="translated">删除 &quot;快照 &quot;文件夹。它对Vagrant Hyper-V提供商没有任何用处,只能在该文件夹中有快照的情况下增加盒子的大小。</target>
        </trans-unit>
        <trans-unit id="a4ff0a4a1f8ad353cf269a1f056e0f5e166386a7" translate="yes" xml:space="preserve">
          <source>Depending on your setup, you may wish to manually override the default router configuration. This is required if you need access the Vagrant box from other networks over the public network. To do so, you can use a shell provisioner script:</source>
          <target state="translated">根据您的设置,您可能希望手动覆盖默认的路由器配置。如果您需要通过公共网络从其他网络访问Vagrant盒子,则需要这样做。要做到这一点,您可以使用shell provisioner脚本。</target>
        </trans-unit>
        <trans-unit id="a0f0591c03ef90790627e2c827a0496504ac8053" translate="yes" xml:space="preserve">
          <source>Depending on your setup, you may wish to manually set the IP of your bridged interface. To do so, add a &lt;code&gt;:ip&lt;/code&gt; clause to the network definition.</source>
          <target state="translated">根据您的设置，您可能希望手动设置桥接接口的IP。为此，请在网络定义中添加 &lt;code&gt;:ip&lt;/code&gt; 子句。</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="577ef7dc1516f4b3c43ddbe63327a8a039a0edec" translate="yes" xml:space="preserve">
          <source>Destroy</source>
          <target state="translated">Destroy</target>
        </trans-unit>
        <trans-unit id="8841fb5d8088872fef22c2cbfdb076e7415b1b0d" translate="yes" xml:space="preserve">
          <source>Disable &quot;Server Manager&quot; starting at login (for non-Core)</source>
          <target state="translated">登录时开始禁用 &quot;服务器管理器&quot;(非核心)。</target>
        </trans-unit>
        <trans-unit id="27834dd83e99bc65b81d35133f550bc876f983d4" translate="yes" xml:space="preserve">
          <source>Disable &quot;Shutdown Tracker&quot;</source>
          <target state="translated">禁用 &quot;关机跟踪&quot;</target>
        </trans-unit>
        <trans-unit id="a47de66f9df8cf13d878b3281afe2bc5d588b995" translate="yes" xml:space="preserve">
          <source>Disable Auto-Configuration</source>
          <target state="translated">禁用自动配置</target>
        </trans-unit>
        <trans-unit id="5313a8e4734cc5aaaf275b9177c4b63457d1fa8a" translate="yes" xml:space="preserve">
          <source>Disable Vagrant's check for Hyper-V admin privileges and allow Vagrant to assume the current user has full access to Hyper-V. This is useful if the internal privilege check incorrectly determines the current user does not have access to Hyper-V.</source>
          <target state="translated">禁用Vagrant对Hyper-V管理权限的检查,并允许Vagrant假设当前用户拥有对Hyper-V的全部访问权限。如果内部权限检查错误地确定当前用户没有访问Hyper-V的权限,这很有用。</target>
        </trans-unit>
        <trans-unit id="fc6a233a08964131539a167fe42f8e1026ebde3e" translate="yes" xml:space="preserve">
          <source>Disable any non-necessary hardware in a base box such as audio and USB controllers. These are generally unnecessary for Vagrant usage and, again, can be easily added via the Vagrantfile in most cases.</source>
          <target state="translated">禁用基础箱中任何非必要的硬件,如音频和USB控制器。这些硬件对于Vagrant的使用来说通常是不必要的,同样,在大多数情况下,可以通过Vagrant文件轻松添加。</target>
        </trans-unit>
        <trans-unit id="b70504676b3c1f2c1a168602d062f47c5886bc06" translate="yes" xml:space="preserve">
          <source>Disable complex passwords</source>
          <target state="translated">禁用复杂密码</target>
        </trans-unit>
        <trans-unit id="03bf0a54b86fdf600ed47b76df6625dec956b028" translate="yes" xml:space="preserve">
          <source>Disabling</source>
          <target state="translated">Disabling</target>
        </trans-unit>
        <trans-unit id="e1f722d866925d28bd8aec2d5aaa1b09086e9b3e" translate="yes" xml:space="preserve">
          <source>Disabling the default &lt;code&gt;/vagrant&lt;/code&gt; share can be done as follows:</source>
          <target state="translated">禁用默认 &lt;code&gt;/vagrant&lt;/code&gt; 共享可以按照以下步骤进行：</target>
        </trans-unit>
        <trans-unit id="e6ff6be707a39b92e3c0960df5a5a40d5a593f7a" translate="yes" xml:space="preserve">
          <source>Disaster-case testing: machines dying, network partitions, slow networks, inconsistent world views, etc.</source>
          <target state="translated">灾难案例测试:机器死机、网络分区、网络缓慢、世界观不一致等。</target>
        </trans-unit>
        <trans-unit id="b4dd35bafe12e6278a0cdeb31808b736fa962fcf" translate="yes" xml:space="preserve">
          <source>Discovering Boxes</source>
          <target state="translated">发现盒子</target>
        </trans-unit>
        <trans-unit id="cc1685cc00b09a79fc3f9b76d31989e3d880707b" translate="yes" xml:space="preserve">
          <source>Disk Space</source>
          <target state="translated">磁盘空间</target>
        </trans-unit>
        <trans-unit id="7a9d1b01d151b883db740c9857933103e8e69f41" translate="yes" xml:space="preserve">
          <source>Distributing the Box</source>
          <target state="translated">盒子的分布</target>
        </trans-unit>
        <trans-unit id="c78ea12536d1d7a7d6bea44232c7de6b28a7eaaa" translate="yes" xml:space="preserve">
          <source>Do &lt;strong&gt;NOT&lt;/strong&gt; use the system Ruby - use a Ruby version manager like rvm or chruby</source>
          <target state="translated">请&lt;strong&gt;不要&lt;/strong&gt;使用该系统的Ruby -使用一个Ruby版本管理器像RVM或chruby</target>
        </trans-unit>
        <trans-unit id="9f1141549f7c054b71516937d3febc77d991d59b" translate="yes" xml:space="preserve">
          <source>Docker</source>
          <target state="translated">Docker</target>
        </trans-unit>
        <trans-unit id="138dc2e78352d29a5e1b91bfa99a6b4ee33252a2" translate="yes" xml:space="preserve">
          <source>Docker Base Boxes</source>
          <target state="translated">Docker基础箱</target>
        </trans-unit>
        <trans-unit id="b7deb2dbabb0baabf7085da44699bf3e81b7e00a" translate="yes" xml:space="preserve">
          <source>Docker Basic Usage</source>
          <target state="translated">Docker基本用法</target>
        </trans-unit>
        <trans-unit id="efd512adaacf87b7abff3b86088aab7802e52a8c" translate="yes" xml:space="preserve">
          <source>Docker Boxes</source>
          <target state="translated">Docker Boxes</target>
        </trans-unit>
        <trans-unit id="c7473988660cc19eaaeee55841dfcf23e2f7f48b" translate="yes" xml:space="preserve">
          <source>Docker Commands</source>
          <target state="translated">Docker命令</target>
        </trans-unit>
        <trans-unit id="35643cdd6357b090416dac9582b9fcead674161a" translate="yes" xml:space="preserve">
          <source>Docker Configuration</source>
          <target state="translated">Docker配置</target>
        </trans-unit>
        <trans-unit id="faf05290781c1e0de4dc34697843de205c92b444" translate="yes" xml:space="preserve">
          <source>Docker Images</source>
          <target state="translated">Docker图像</target>
        </trans-unit>
        <trans-unit id="00b8e74598125f7f259ec61b2260bb44eba86810" translate="yes" xml:space="preserve">
          <source>Docker Provisioner</source>
          <target state="translated">DockProvisioner</target>
        </trans-unit>
        <trans-unit id="03426cb05b07ae9623f71e487c158e0745343c1e" translate="yes" xml:space="preserve">
          <source>Docker's &lt;a href=&quot;https://docs.docker.com/v17.09/engine/admin/volumes/bind-mounts/&quot;&gt;volume consistency&lt;/a&gt; setting can be specified using the &lt;code&gt;docker_consistency&lt;/code&gt; option when defining a synced folder. This can &lt;a href=&quot;https://docs.docker.com/docker-for-mac/osxfs-caching&quot;&gt;greatly improve performance on macOS&lt;/a&gt;. An example is shown using the &lt;code&gt;cached&lt;/code&gt; and &lt;code&gt;delegated&lt;/code&gt; settings:</source>
          <target state="translated">定义同步文件夹时，可以使用 &lt;code&gt;docker_consistency&lt;/code&gt; 选项指定Docker的&lt;a href=&quot;https://docs.docker.com/v17.09/engine/admin/volumes/bind-mounts/&quot;&gt;卷一致性&lt;/a&gt;设置。这样可以&lt;a href=&quot;https://docs.docker.com/docker-for-mac/osxfs-caching&quot;&gt;大大提高macOS的性能&lt;/a&gt;。显示了使用 &lt;code&gt;cached&lt;/code&gt; 和 &lt;code&gt;delegated&lt;/code&gt; 设置的示例：</target>
        </trans-unit>
        <trans-unit id="b779f02a9d5a736d9f0658b3965a1a825be50995" translate="yes" xml:space="preserve">
          <source>Dockerfiles</source>
          <target state="translated">Dockerfiles</target>
        </trans-unit>
        <trans-unit id="386945f0725f56e75de9e9ce16ed1f144b097f7a" translate="yes" xml:space="preserve">
          <source>Download 1.0.5</source>
          <target state="translated">下载1.0.5</target>
        </trans-unit>
        <trans-unit id="89c8fdb92db58d7e47628fa7bc4ec6ad1e4c3e8b" translate="yes" xml:space="preserve">
          <source>Download the installer package for the Linux distribution from the releases page and install Vagrant.</source>
          <target state="translated">从发布页面下载Linux发行版的安装包并安装Vagrant。</target>
        </trans-unit>
        <trans-unit id="6dda7e7a600e7b5ebfa533e4c3508a3bd163457d" translate="yes" xml:space="preserve">
          <source>Each component is explained below:</source>
          <target state="translated">下面对每个部分进行解释。</target>
        </trans-unit>
        <trans-unit id="2a4dadef9e32c856489e539501f5b3cdfec68094" translate="yes" xml:space="preserve">
          <source>Each provider is responsible for having its own box format. This is actually an extremely simple step due to how generic boxes are. Before explaining you should get familiar with the general &lt;a href=&quot;../boxes/format&quot;&gt;box file format&lt;/a&gt;.</source>
          <target state="translated">每个提供者都有自己的包装盒格式。由于通用包装盒的实际情况，这实际上是非常简单的步骤。在解释之前，您应该熟悉常规的&lt;a href=&quot;../boxes/format&quot;&gt;box文件格式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7e20c9b7d1ffc7023a01ca07f255fdd693586040" translate="yes" xml:space="preserve">
          <source>Each trigger is expected to be given a command key for when it should be fired during the Vagrant command lifecycle. These could be defined as a single key or an array which acts like a &lt;em&gt;whitelist&lt;/em&gt; for the defined trigger.</source>
          <target state="translated">在Vagrant命令生命周期内，应为每个触发器分配何时触发的命令键。这些可以定义为单个键或数组，其作用类似于已定义触发器的&lt;em&gt;白名单&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e64020dbeafc91f40beaf6012ff1decde6c0cfa8" translate="yes" xml:space="preserve">
          <source>Easy SSH sharing is incredibly useful if you want to give access to a colleague for troubleshooting ops issues. Additionally, it enables pair programming with a Vagrant environment, if you want!</source>
          <target state="translated">如果您想给同事提供访问权限以解决操作问题,那么简单的SSH共享是非常有用的。此外,如果您想的话,它还可以与Vagrant环境进行配对编程。</target>
        </trans-unit>
        <trans-unit id="350b59a4c11831c23109923648bac35e2d15ef5f" translate="yes" xml:space="preserve">
          <source>Easy. The only odd thing is the &lt;code&gt;UNSET_VALUE&lt;/code&gt; bits above. This is actually so that Vagrant can properly automatically merge multiple configurations. Merging is covered in the next section, and &lt;code&gt;UNSET_VALUE&lt;/code&gt; will be explained there.</source>
          <target state="translated">简单。唯一奇怪的是上面的 &lt;code&gt;UNSET_VALUE&lt;/code&gt; 位。实际上，这样Vagrant可以正确地自动合并多个配置。合并将在下一部分中介绍，并将在 &lt;code&gt;UNSET_VALUE&lt;/code&gt; 说明UNSET_VALUE。</target>
        </trans-unit>
        <trans-unit id="12d3e856e2ad0ddd8d9616f14646d9c8748d7c8d" translate="yes" xml:space="preserve">
          <source>Either of the following may be used to actually execute runners during provisioning.</source>
          <target state="translated">在调配过程中,可使用以下任何一种方式实际执行运行器。</target>
        </trans-unit>
        <trans-unit id="edf00256605f69854fbb4e7a8053077f1dfe2086" translate="yes" xml:space="preserve">
          <source>Either of the following may be used to actually execute states during provisioning.</source>
          <target state="translated">在供应过程中,可以使用以下任何一种方式来实际执行状态。</target>
        </trans-unit>
        <trans-unit id="3a5f21aa01fdbcc6b8719f516e5a185b549f2947" translate="yes" xml:space="preserve">
          <source>Enable Auto-Upgrade of VMware Tools</source>
          <target state="translated">启用 VMware 工具的自动升级</target>
        </trans-unit>
        <trans-unit id="ab6c4d9a6009e703e713b51ae1e148dbd59d9898" translate="yes" xml:space="preserve">
          <source>Enabling</source>
          <target state="translated">Enabling</target>
        </trans-unit>
        <trans-unit id="7cb12445593b25af6a86cf35f09cb6e94145ef4f" translate="yes" xml:space="preserve">
          <source>Enabling NFS Synced Folders</source>
          <target state="translated">启用NFS同步文件夹。</target>
        </trans-unit>
        <trans-unit id="c29610490244f1bb3fc9b2eb302794c29b0a52eb" translate="yes" xml:space="preserve">
          <source>Enabling Networks</source>
          <target state="translated">赋能网络</target>
        </trans-unit>
        <trans-unit id="e8713e94206387acb90340242a79abbfecf410b1" translate="yes" xml:space="preserve">
          <source>Ensure the Windows PowerShell feature is installed</source>
          <target state="translated">确保安装了Windows PowerShell功能。</target>
        </trans-unit>
        <trans-unit id="51a3930527691035138f5859073fc9ef33b5c51f" translate="yes" xml:space="preserve">
          <source>Environment Not Showing Up</source>
          <target state="translated">环境没有出现</target>
        </trans-unit>
        <trans-unit id="ec072bba7befaa68af710fe3549eb0491d7badd1" translate="yes" xml:space="preserve">
          <source>Environment Variables</source>
          <target state="translated">环境变量</target>
        </trans-unit>
        <trans-unit id="fae6e9255e277e75615fae0a5cdc700ab5f65226" translate="yes" xml:space="preserve">
          <source>Environmental Variables</source>
          <target state="translated">环境变量</target>
        </trans-unit>
        <trans-unit id="017b53c42e43b39e1f5aabf6f7280c2f777243a2" translate="yes" xml:space="preserve">
          <source>Environments</source>
          <target state="translated">Environments</target>
        </trans-unit>
        <trans-unit id="5fff1f56919b006049c274c6c76fbbe56470ee4c" translate="yes" xml:space="preserve">
          <source>Error Handling</source>
          <target state="translated">错误处理</target>
        </trans-unit>
        <trans-unit id="a253a734b1a98eafc0456c78ee4bf5cf74643470" translate="yes" xml:space="preserve">
          <source>Error handling in Vagrant is done entirely by raising Ruby exceptions. But Vagrant treats certain errors differently than others. If an error is raised that inherits from &lt;code&gt;Vagrant::Errors::VagrantError&lt;/code&gt;, then the &lt;code&gt;vagrant&lt;/code&gt; command will output the message of the error in nice red text to the console and exit with an exit status of 1.</source>
          <target state="translated">Vagrant中的错误处理完全通过引发Ruby异常来完成。但是，Vagrant对某些错误的处理方式与其他方式有所不同。如果引发了从 &lt;code&gt;Vagrant::Errors::VagrantError&lt;/code&gt; 继承的错误，则 &lt;code&gt;vagrant&lt;/code&gt; 命令会将错误消息以漂亮的红色文本输出到控制台，并以退出状态1退出。</target>
        </trans-unit>
        <trans-unit id="8c886adf9ffaef8ff24d01f18fae5479d52dc0c6" translate="yes" xml:space="preserve">
          <source>Every Vagrant command accepts a &lt;code&gt;--machine-readable&lt;/code&gt; flag which enables machine readable output mode. In this mode, the output to the terminal is replaced with machine-friendly output.</source>
          <target state="translated">每个Vagrant命令都接受 &lt;code&gt;--machine-readable&lt;/code&gt; 标志，该标志启用机器可读输出模式。在此模式下，终端的输出将替换为机器友好的输出。</target>
        </trans-unit>
        <trans-unit id="7f96abc5e8492bb34b9b80b839a811b0a57a7d70" translate="yes" xml:space="preserve">
          <source>Every network type has an identifier such as &lt;code&gt;&quot;forwarded_port&quot;&lt;/code&gt; in the above example. Following this is a set of configuration arguments that can differ for each network type. In the case of forwarded ports, two numeric arguments are expected: the port on the guest followed by the port on the host that the guest port can be accessed by.</source>
          <target state="translated">在上面的示例中，每种网络类型都有一个标识符，例如 &lt;code&gt;&quot;forwarded_port&quot;&lt;/code&gt; 。接下来是一组配置参数，每种网络类型可能有所不同。如果是转发端口，则需要两个数字参数：来宾端口，然后是可以访问来宾端口的主机端口。</target>
        </trans-unit>
        <trans-unit id="45bf3a1b968e799b0c2aeec1a90d7986db784a4c" translate="yes" xml:space="preserve">
          <source>Every provisioner has a type, such as &lt;code&gt;&quot;shell&quot;&lt;/code&gt;, used as the first parameter to the provisioning configuration. Following that is basic key/value for configuring that specific provisioner. Instead of basic key/value, you can also use a Ruby block for a syntax that is more like variable assignment. The following is effectively the same as the prior example:</source>
          <target state="translated">每个供应商都有一个类型，例如 &lt;code&gt;&quot;shell&quot;&lt;/code&gt; ，用作供应配置的第一个参数。接下来是配置该特定配置程序的基本键/值。除了基本键/值，您还可以使用Ruby块来实现更类似于变量赋值的语法。以下内容实际上与前面的示例相同：</target>
        </trans-unit>
        <trans-unit id="7caf14679b24b16818715a78f37bf8a00e442b1a" translate="yes" xml:space="preserve">
          <source>Everything under &lt;code&gt;cfengine_files/&lt;/code&gt; in the Vagrant project directory will be recursively copied under &lt;code&gt;/var/cfengine/&lt;/code&gt; in the VM, on top of its default contents.</source>
          <target state="translated">Vagrant项目目录中 &lt;code&gt;cfengine_files/&lt;/code&gt; 下的所有内容都将递归复制到VM中 &lt;code&gt;/var/cfengine/&lt;/code&gt; 下的默认内容之上。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="140d3b0b26f9839a1bb3746b87ccd4301912615a" translate="yes" xml:space="preserve">
          <source>Example Plugin</source>
          <target state="translated">插件示例</target>
        </trans-unit>
        <trans-unit id="9d55f725ac327a39eba1f697cf369929c155cd72" translate="yes" xml:space="preserve">
          <source>Example Provider: AWS</source>
          <target state="translated">示例提供者。AWS</target>
        </trans-unit>
        <trans-unit id="e9b766f3ee188b94e592fec9231e6d9e5d9ddbd7" translate="yes" xml:space="preserve">
          <source>Example with &lt;a href=&quot;https://docs.ansible.com/ansible/intro_inventory.html#group-variables&quot;&gt;group variables&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://docs.ansible.com/ansible/intro_inventory.html#group-variables&quot;&gt;组变量&lt;/a&gt;示例：</target>
        </trans-unit>
        <trans-unit id="2bf0d6d63041ffcf1af5da1d22ecfa973071a0ec" translate="yes" xml:space="preserve">
          <source>Example with the &lt;a href=&quot;ansible&quot;&gt;&lt;code&gt;ansible&lt;/code&gt;&lt;/a&gt; provisioner</source>
          <target state="translated">&lt;a href=&quot;ansible&quot;&gt; &lt;code&gt;ansible&lt;/code&gt; &lt;/a&gt;供应商的示例</target>
        </trans-unit>
        <trans-unit id="685b52f93ac9be1f55d498889d64aeb6f9ff4663" translate="yes" xml:space="preserve">
          <source>Example with the &lt;a href=&quot;ansible_local&quot;&gt;&lt;code&gt;ansible_local&lt;/code&gt;&lt;/a&gt; provisioner</source>
          <target state="translated">实施例与&lt;a href=&quot;ansible_local&quot;&gt; &lt;code&gt;ansible_local&lt;/code&gt; &lt;/a&gt;供应者</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="8ab2c6c8390f233c153264bb8ff619b236078272" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;['-o ControlMaster=no']&lt;/code&gt;.</source>
          <target state="translated">示例： &lt;code&gt;['-o ControlMaster=no']&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="db74da57534ade40fb5dde8117995e757bc6f04b" translate="yes" xml:space="preserve">
          <source>Examples: &lt;code&gt;true&lt;/code&gt; (equivalent to &lt;code&gt;v&lt;/code&gt;), &lt;code&gt;-vvv&lt;/code&gt; (equivalent to &lt;code&gt;vvv&lt;/code&gt;), &lt;code&gt;vvvv&lt;/code&gt;.</source>
          <target state="translated">示例： &lt;code&gt;true&lt;/code&gt; （等同于 &lt;code&gt;v&lt;/code&gt; ），- &lt;code&gt;-vvv&lt;/code&gt; （等同于 &lt;code&gt;vvv&lt;/code&gt; ）， &lt;code&gt;vvvv&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b07332d3b709e2bbb1e1c6b24c732c0431f59d77" translate="yes" xml:space="preserve">
          <source>Execute Runners</source>
          <target state="translated">执行亚军</target>
        </trans-unit>
        <trans-unit id="b812ecb61280d0c31b9db92ed5bf04383b49f082" translate="yes" xml:space="preserve">
          <source>Execute States</source>
          <target state="translated">执行国</target>
        </trans-unit>
        <trans-unit id="68d84b05964adaf67f028ebab6c6c03d3113852e" translate="yes" xml:space="preserve">
          <source>External Aliases</source>
          <target state="translated">外部别名</target>
        </trans-unit>
        <trans-unit id="7b6fc545744998e6100da4ede7df8cd0c834e467" translate="yes" xml:space="preserve">
          <source>External Script</source>
          <target state="translated">外部脚本</target>
        </trans-unit>
        <trans-unit id="bab5dbc55b691efec22a133ca75b1339c3ea115c" translate="yes" xml:space="preserve">
          <source>FTP &amp;amp; SFTP Strategy</source>
          <target state="translated">FTP和SFTP策略</target>
        </trans-unit>
        <trans-unit id="68809c3909e4a497d618d3680501d8bbcbb5278a" translate="yes" xml:space="preserve">
          <source>File Provisioner</source>
          <target state="translated">文件供应器</target>
        </trans-unit>
        <trans-unit id="c64cccb1a9462b19b9b404bbb9a288826c35b6ec" translate="yes" xml:space="preserve">
          <source>File path or HTTP URL to a box in a &lt;a href=&quot;https://vagrantcloud.com/boxes/search&quot;&gt;catalog&lt;/a&gt;. For HTTP, basic authentication is supported and &lt;code&gt;http_proxy&lt;/code&gt; environmental variables are respected. HTTPS is also supported.</source>
          <target state="translated">&lt;a href=&quot;https://vagrantcloud.com/boxes/search&quot;&gt;目录&lt;/a&gt;中框的文件路径或HTTP URL 。对于HTTP，支持基本身份验证，并且遵守 &lt;code&gt;http_proxy&lt;/code&gt; 环境变量。还支持HTTPS。</target>
        </trans-unit>
        <trans-unit id="04b0289baef62595e4a141f31c824195450fc0f6" translate="yes" xml:space="preserve">
          <source>File provisioning is a simple way to, for example, replicate your local ~/.gitconfig to the vagrant user's home directory on the guest machine so you will not have to run &lt;code&gt;git config --global&lt;/code&gt; every time you provision a new VM.</source>
          <target state="translated">文件配置是一种简单的方法，例如，将本地〜/ .gitconfig复制到来宾计算机上的vagrant用户的主目录中，因此您不必在每次 &lt;code&gt;git config --global&lt;/code&gt; 新VM时都运行git config --global。</target>
        </trans-unit>
        <trans-unit id="13440e33e415f41d2b9b1f3aa08c1792cccef6c9" translate="yes" xml:space="preserve">
          <source>Finally, create an archive of those contents (but &lt;em&gt;not&lt;/em&gt; the parent folder) using a tool such as &lt;code&gt;tar&lt;/code&gt;:</source>
          <target state="translated">最后，使用诸如 &lt;code&gt;tar&lt;/code&gt; 之类的工具创建这些内容的归档文件（而&lt;em&gt;不是&lt;/em&gt;父文件夹）：</target>
        </trans-unit>
        <trans-unit id="4cae33b0c47c4f4650dd2fceb7873b38f1a0abdb" translate="yes" xml:space="preserve">
          <source>Finally, if you would prefer to store the recipe as plain-text, you can set the recipe to the contents of a file:</source>
          <target state="translated">最后,如果您希望将配方存储为纯文本,您可以将配方设置为文件的内容。</target>
        </trans-unit>
        <trans-unit id="e5babfc48c74ee617dc89552b3781f2e12163598" translate="yes" xml:space="preserve">
          <source>Finally, install the service. This will also enable the service.</source>
          <target state="translated">最后,安装服务。这也将启用服务。</target>
        </trans-unit>
        <trans-unit id="283a8b7548f2889ab02cd23bce5de9af1bbaf9d8" translate="yes" xml:space="preserve">
          <source>Finally, run the shell script that matches your system to install the guest additions. For example, for Linux on x86, it is the following:</source>
          <target state="translated">最后,运行与你的系统相匹配的shell脚本来安装客人添加的内容。例如,对于x86上的Linux来说,它是如下的。</target>
        </trans-unit>
        <trans-unit id="7cb80d4aa25891927149003fc67cd30712ba252f" translate="yes" xml:space="preserve">
          <source>Finally, we want to note that we are working on making it so that when Vagrant share is used, the Vagrant private key is actively rejected unless explicitly allowed. This feature is not yet done, however.</source>
          <target state="translated">最后,我们想说的是,我们正在努力使Vagrant共享时,除非明确允许,否则Vagrant私钥会被主动拒绝。不过,这个功能还没有完成。</target>
        </trans-unit>
        <trans-unit id="9c1826713cb97e040d948ea91ae2eec9309f769e" translate="yes" xml:space="preserve">
          <source>Finally, you can update boxes with &lt;code&gt;vagrant box update&lt;/code&gt;. This will download and install the new box. This &lt;em&gt;will not&lt;/em&gt; magically update running Vagrant environments. If a Vagrant environment is already running, you will have to destroy and recreate it to acquire the new updates in the box. The update command just downloads these updates locally.</source>
          <target state="translated">最后，您可以使用 &lt;code&gt;vagrant box update&lt;/code&gt; 来更新盒子。这将下载并安装新盒子。这&lt;em&gt;不会&lt;/em&gt;神奇地更新正在运行的Vagrant环境。如果Vagrant环境已在运行，则必须销毁并重新创建它才能获取框中的新更新。update命令仅在本地下载这些更新。</target>
        </trans-unit>
        <trans-unit id="170da22bf3e622b51b502fd62187f409cbb080c2" translate="yes" xml:space="preserve">
          <source>First find out the name of the hypervisor:</source>
          <target state="translated">首先找出管理程序的名称。</target>
        </trans-unit>
        <trans-unit id="4ec95938a2f881b76993ede0b70847abac57d807" translate="yes" xml:space="preserve">
          <source>First, every provisioner is configured within your &lt;a href=&quot;../vagrantfile/index&quot;&gt;Vagrantfile&lt;/a&gt; using the &lt;code&gt;config.vm.provision&lt;/code&gt; method call. For example, the Vagrantfile below enables shell provisioning:</source>
          <target state="translated">首先，使用 &lt;code&gt;config.vm.provision&lt;/code&gt; 方法调用在&lt;a href=&quot;../vagrantfile/index&quot;&gt;Vagrantfile中&lt;/a&gt;配置每个预配器。例如，下面的Vagrantfile启用外壳配置：</target>
        </trans-unit>
        <trans-unit id="20b4ddeaeabeeaee47211723e431ed75587c7206" translate="yes" xml:space="preserve">
          <source>First, please check your JUNK or SPAM folders. Since the license comes from an automated system, it might have been flagged as spam by your email provider. If you do not see the email there, please &lt;a href=&quot;mailto:support@hashicorp.com?subject=License%20Not%20Received&quot;&gt;contact support&lt;/a&gt; and include the original order number.</source>
          <target state="translated">首先，请检查您的JUNK或SPAM文件夹。由于许可证来自自动系统，因此您的电子邮件提供商可能已将其标记为垃圾邮件。如果您在此处看不到电子邮件，请&lt;a href=&quot;mailto:support@hashicorp.com?subject=License%20Not%20Received&quot;&gt;联系支持人员&lt;/a&gt;并提供原始订单号。</target>
        </trans-unit>
        <trans-unit id="e2bf9b1e8fed9d10e9760b67b480b8eb7d80609d" translate="yes" xml:space="preserve">
          <source>First, run the following command from the Vagrant repo:</source>
          <target state="translated">首先,从Vagrant repo中运行以下命令。</target>
        </trans-unit>
        <trans-unit id="1ad2bca13e9a42b379a588590bc702dbc661c87b" translate="yes" xml:space="preserve">
          <source>For *nix users, make sure to edit your &lt;code&gt;/etc/sudoers&lt;/code&gt; file with &lt;code&gt;visudo&lt;/code&gt;. It protects you against syntax errors which could leave you without the ability to gain elevated privileges.</source>
          <target state="translated">对于* nix用户，请确保使用 &lt;code&gt;visudo&lt;/code&gt; 编辑 &lt;code&gt;/etc/sudoers&lt;/code&gt; 文件。它可以保护您免受语法错误的影响，这些错误可能使您无法获得提升的特权。</target>
        </trans-unit>
        <trans-unit id="3086a7103e10e409281430204f8d84050bc17314" translate="yes" xml:space="preserve">
          <source>For 1.0.x</source>
          <target state="translated">对于1.0.x</target>
        </trans-unit>
        <trans-unit id="a9edbfa02844989f9b27d9626d33153060568803" translate="yes" xml:space="preserve">
          <source>For 1.x</source>
          <target state="translated">1.x</target>
        </trans-unit>
        <trans-unit id="829fd504ea9c21fcaefa937f552a99893812dd18" translate="yes" xml:space="preserve">
          <source>For Fedora Linux, sudoers might look like this (given your user belongs to the vagrant group):</source>
          <target state="translated">对于Fedora Linux,sudoers可能是这样的(鉴于你的用户属于vagrant组)。</target>
        </trans-unit>
        <trans-unit id="e96358e49420389389056c0534cd6153145c23e2" translate="yes" xml:space="preserve">
          <source>For OS X, sudoers should have this entry:</source>
          <target state="translated">对于OS X,sudoers应该有这个条目。</target>
        </trans-unit>
        <trans-unit id="56bc17ba2ebf0c7ef46c88668f1910a15d65641d" translate="yes" xml:space="preserve">
          <source>For POSIX-like machines, the shell provisioner executes scripts with SSH. For Windows guest machines that are configured to use WinRM, the shell provisioner executes PowerShell and Batch scripts over WinRM.</source>
          <target state="translated">对于POSIX类机器,shell供应程序使用SSH执行脚本。对于配置为使用WinRM的Windows客机,shell供应程序通过WinRM执行PowerShell和Batch脚本。</target>
        </trans-unit>
        <trans-unit id="36eda54c08a0afd6c9060aeefe4fd4842336ccff" translate="yes" xml:space="preserve">
          <source>For Ubuntu Linux , sudoers should look like this:</source>
          <target state="translated">对于Ubuntu Linux,sudoers应该是这样的。</target>
        </trans-unit>
        <trans-unit id="8b5dd5b1fc144a7119c63ef09f2e9e0c35d1c132" translate="yes" xml:space="preserve">
          <source>For Windows guest machines, the inline script &lt;em&gt;must&lt;/em&gt; be PowerShell. Batch scripts are not allowed as inline scripts.</source>
          <target state="translated">对于Windows客户机，内联脚本&lt;em&gt;必须&lt;/em&gt;是PowerShell。批处理脚本不能作为内联脚本使用。</target>
        </trans-unit>
        <trans-unit id="571dcb12f60659c297914c2424f50862bf8be009" translate="yes" xml:space="preserve">
          <source>For Windows installations, an SSH client is provided within the installer image. If no SSH client is found on the current PATH, Vagrant will use the SSH client it provided. Depending on the local environment used for running Vagrant, the installer provided SSH client may not work correctly. For example, when using a cygwin or msys2 shell the SSH client will fail to work as expected when run interactively. Installing the SSH package built for the current working environment will resolve this issue.</source>
          <target state="translated">对于Windows系统的安装,在安装程序镜像中提供了一个SSH客户端,如果在当前PATH上没有找到SSH客户端,Vagrant将使用它提供的SSH客户端。如果在当前PATH上没有找到SSH客户端,Vagrant将使用它提供的SSH客户端。根据运行Vagrant的本地环境,安装程序提供的SSH客户端可能无法正常工作。例如,当使用cygwin或msys2 shell时,当交互式运行时,SSH客户端将无法正常工作。安装为当前工作环境构建的SSH包将解决这个问题。</target>
        </trans-unit>
        <trans-unit id="63e19c1a7dc8fd7230527f4626c654b9dcd6bb77" translate="yes" xml:space="preserve">
          <source>For an example of a more advanced setup, look at the original &lt;a href=&quot;https://github.com/saltstack/salty-vagrant/tree/develop/example&quot;&gt;plugin&lt;/a&gt;.</source>
          <target state="translated">有关更高级设置的示例，请查看原始&lt;a href=&quot;https://github.com/saltstack/salty-vagrant/tree/develop/example&quot;&gt;插件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="392b305292e6e7d2585a5143e8784be5b266e11f" translate="yes" xml:space="preserve">
          <source>For automated testing, the &lt;a href=&quot;https://github.com/hashicorp/vagrant-spec&quot;&gt;vagrant-spec&lt;/a&gt; project provides helpers for both unit and acceptance testing plugins. See the giant README for that project for a detailed description of how to integrate vagrant-spec into your project. Vagrant itself (and all of its core plugins) use vagrant-spec for automated testing.</source>
          <target state="translated">对于自动化测试，&lt;a href=&quot;https://github.com/hashicorp/vagrant-spec&quot;&gt;vagrant-spec&lt;/a&gt;项目可为单元测试和验收测试插件提供帮助。请参阅该项目的自述文件，以获取有关如何将流浪者规范集成到您的项目中的详细说明。Vagrant本身（及其所有核心插件）使用vagrant-spec进行自动化测试。</target>
        </trans-unit>
        <trans-unit id="29fe3a149612dcff2ddb4302774f99104b236c63" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;machine3&lt;/code&gt; and &lt;code&gt;group3&lt;/code&gt; in the example below would not be added to the generated inventory file:</source>
          <target state="translated">例如， &lt;code&gt;machine3&lt;/code&gt; 示例中的machine3和 &lt;code&gt;group3&lt;/code&gt; 不会添加到生成的清单文件中：</target>
        </trans-unit>
        <trans-unit id="875a8c4aefbf73201099fff6ca6ca875dd68250d" translate="yes" xml:space="preserve">
          <source>For example, given the following configuration:</source>
          <target state="translated">例如,给定以下配置。</target>
        </trans-unit>
        <trans-unit id="7dbed3631dbf3674f6ab27caf6b11c594463d7d8" translate="yes" xml:space="preserve">
          <source>For example, here is how you would configure Docker to run a container with the Vagrant shared directory mounted inside of it:</source>
          <target state="translated">例如,以下是您如何配置Docker来运行一个安装在Vagrant共享目录内的容器。</target>
        </trans-unit>
        <trans-unit id="fec3c981bbbec52fb45762a1d0642ca68d247437" translate="yes" xml:space="preserve">
          <source>For example, if a new &lt;code&gt;CustomVMSRV&lt;/code&gt; VM integration service was added and Vagrant is not aware of this new service name, it can be provided as the key value explicitly:</source>
          <target state="translated">例如，如果添加了新的 &lt;code&gt;CustomVMSRV&lt;/code&gt; VM集成服务，而Vagrant不知道此新服务名称，则可以将其明确用作键值：</target>
        </trans-unit>
        <trans-unit id="6278c2fb69ebea380b3b51118156a24b3a18834e" translate="yes" xml:space="preserve">
          <source>For example, if you configure VMware Fusion and send it to an individual who does not have the VMware Fusion provider, Vagrant will silently ignore that part of the configuration.</source>
          <target state="translated">例如,如果您配置了VMware Fusion,并将其发送给没有VMware Fusion提供商的个人,Vagrant将默默地忽略这部分配置。</target>
        </trans-unit>
        <trans-unit id="3a918ef100fac3fb4a629fcbd2a2407534e7f327" translate="yes" xml:space="preserve">
          <source>For example, the Ubuntu boxes provided by the Vagrant project (such as &quot;precise64&quot;) are base boxes. They were created from a minimal Ubuntu install from an ISO, rather than repackaging an existing environment.</source>
          <target state="translated">例如,Vagrant项目提供的Ubuntu盒子(如 &quot;精确64&quot;)是基础盒子。它们是通过ISO的最小Ubuntu安装创建的,而不是重新包装现有的环境。</target>
        </trans-unit>
        <trans-unit id="db97b05dfa32098f33ed3d062a1771c36d362b78" translate="yes" xml:space="preserve">
          <source>For example, when using the VirtualBox provider:</source>
          <target state="translated">例如,在使用VirtualBox提供商时。</target>
        </trans-unit>
        <trans-unit id="8cf8c33e4b83a4eb89b80d2bd8017e31b09a155b" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;vagrant box add hashicorp/precise64&lt;/code&gt;. You can also quickly initialize a Vagrant environment with &lt;code&gt;vagrant init hashicorp/precise64&lt;/code&gt;.</source>
          <target state="translated">例如： &lt;code&gt;vagrant box add hashicorp/precise64&lt;/code&gt; 。您还可以使用 &lt;code&gt;vagrant init hashicorp/precise64&lt;/code&gt; 快速初始化Vagrant环境。</target>
        </trans-unit>
        <trans-unit id="41ed3e5124064c7694c9c2b329dd0f61ef711b2c" translate="yes" xml:space="preserve">
          <source>For example: If the guest machine is running a web server listening on port 80, you can make a forwarded port mapping to port 8080 (or anything) on your host machine. You can then open your browser to &lt;code&gt;localhost:8080&lt;/code&gt; and browse the website, while all actual network data is being sent to the guest.</source>
          <target state="translated">例如：如果客户机运行的Web服务器正在侦听端口80，则可以将转发的端口映射到主机上的端口8080（或其他端口）。然后，您可以将浏览器打开到 &lt;code&gt;localhost:8080&lt;/code&gt; 并浏览网站，同时将所有实际的网络数据发送给来宾。</target>
        </trans-unit>
        <trans-unit id="6abdf87ef0f957d269cfbf70b2e1ce5494ee7147" translate="yes" xml:space="preserve">
          <source>For examples, take a look at Vagrant's own internal plugins in the &lt;code&gt;plugins&lt;/code&gt; folder in Vagrant's source on GitHub.</source>
          <target state="translated">例如，请在GitHub上Vagrant的源代码中的 &lt;code&gt;plugins&lt;/code&gt; 文件夹中查看Vagrant自己的内部插件。</target>
        </trans-unit>
        <trans-unit id="ed0b638ce71a18a7724f665a0f7eee457a10ebba" translate="yes" xml:space="preserve">
          <source>For linux-based guests, Vagrant uses the &lt;code&gt;shutdown&lt;/code&gt; command to gracefully terminate the machine. Due to the varying nature of operating systems, the &lt;code&gt;shutdown&lt;/code&gt; command may exist at many different locations in the guest's &lt;code&gt;$PATH&lt;/code&gt;. It is the guest machine's responsibility to properly populate the &lt;code&gt;$PATH&lt;/code&gt; with directory containing the &lt;code&gt;shutdown&lt;/code&gt; command.</source>
          <target state="translated">对于基于Linux的客户机，Vagrant使用 &lt;code&gt;shutdown&lt;/code&gt; 命令来正常终止计算机。由于操作系统的不同性质， &lt;code&gt;shutdown&lt;/code&gt; 命令可能存在于客户机的 &lt;code&gt;$PATH&lt;/code&gt; 中的许多不同位置。来宾计算机负责用包含 &lt;code&gt;shutdown&lt;/code&gt; 命令的目录正确填充 &lt;code&gt;$PATH&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f00620db244ad62120d48f99c7b8d908ee5a1508" translate="yes" xml:space="preserve">
          <source>For more complicated scripts, you may store them in a separate file and read them from the &lt;code&gt;Vagrantfile&lt;/code&gt; like so:</source>
          <target state="translated">对于更复杂的脚本，您可以将它们存储在单独的文件中，并从 &lt;code&gt;Vagrantfile&lt;/code&gt; 中读取它们，如下所示：</target>
        </trans-unit>
        <trans-unit id="9387a5dfffefbaa9641c11984e44fdcfb60d7c77" translate="yes" xml:space="preserve">
          <source>For more information about transport protocols and NFS version 4 see:</source>
          <target state="translated">关于传输协议和NFS第4版的更多信息,请参见。</target>
        </trans-unit>
        <trans-unit id="920e7bb8eb053949d8b8b1b4482234535875f40b" translate="yes" xml:space="preserve">
          <source>For more information about what options are available for triggers, see the &lt;a href=&quot;configuration&quot;&gt;configuration section&lt;/a&gt;.</source>
          <target state="translated">有关可用于触发器的选项的更多信息，请参见&amp;ldquo; &lt;a href=&quot;configuration&quot;&gt;配置&amp;rdquo;部分&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="146ce694b9344d58bdf1256a98d668bfea952de2" translate="yes" xml:space="preserve">
          <source>For more information on plugin installation, please see the &lt;a href=&quot;../plugins/usage&quot;&gt;Vagrant plugin usage documentation&lt;/a&gt;.</source>
          <target state="translated">有关插件安装的更多信息，请参见&lt;a href=&quot;../plugins/usage&quot;&gt;Vagrant插件使用文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7712321d11f51f37a1c0ae36d9b1fbf2d8dee4e5" translate="yes" xml:space="preserve">
          <source>For more information, read about the &lt;a href=&quot;box&quot;&gt;&lt;code&gt;vagrant box remove&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;box&quot;&gt; &lt;code&gt;vagrant box remove&lt;/code&gt; &lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="d0f470be51b962ec5c9802cdd9eb81b334483ef4" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;https://github.com/PowerShell/Win32-OpenSSH/&quot;&gt;Win32-OpenSSH project page&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;https://github.com/PowerShell/Win32-OpenSSH/&quot;&gt;Win32-OpenSSH项目页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="88d7c39c7bdba5fceed6c0f9922dbf2763bc1003" translate="yes" xml:space="preserve">
          <source>For most newer Linux distributions, the Hyper-V modules will be available out of the box.</source>
          <target state="translated">对于大多数较新的Linux发行版,Hyper-V模块将在开箱即用。</target>
        </trans-unit>
        <trans-unit id="5d88e68f20d1db4c84f019848ea8edc8377223ce" translate="yes" xml:space="preserve">
          <source>For most providers, forwarded ports by default bind to all interfaces. This means that other devices on your network can access the forwarded ports. If you want to restrict access, see the &lt;code&gt;guest_ip&lt;/code&gt; and &lt;code&gt;host_ip&lt;/code&gt; settings below.</source>
          <target state="translated">对于大多数提供程序，默认情况下，转发的端口绑定到所有接口。这意味着网络上的其他设备可以访问转发的端口。如果要限制访问，请参阅下面的 &lt;code&gt;guest_ip&lt;/code&gt; 和 &lt;code&gt;host_ip&lt;/code&gt; 设置。</target>
        </trans-unit>
        <trans-unit id="610d2bc77a297caca9cf33f15f1e11df63a594ab" translate="yes" xml:space="preserve">
          <source>For now, this is only one step:</source>
          <target state="translated">目前,这只是一步。</target>
        </trans-unit>
        <trans-unit id="bce95eda04a34521af41f60f51b5116c004d3c85" translate="yes" xml:space="preserve">
          <source>For other users, we recommend the &lt;a href=&quot;https://vagrantcloud.com/bento&quot;&gt;Bento boxes&lt;/a&gt;. The Bento boxes are &lt;a href=&quot;https://github.com/chef/bento&quot;&gt;open source&lt;/a&gt; and built for a number of providers including VMware, Virtualbox, and Parallels. There are a variety of operating systems and versions available.</source>
          <target state="translated">对于其他用户，我们建议使用&lt;a href=&quot;https://vagrantcloud.com/bento&quot;&gt;Bento盒&lt;/a&gt;。Bento盒是&lt;a href=&quot;https://github.com/chef/bento&quot;&gt;开源的，&lt;/a&gt;并为包括VMware，Virtualbox和Parallels在内的许多提供商构建。有多种操作系统和版本可用。</target>
        </trans-unit>
        <trans-unit id="33c101f2a133e6aacbd2d43f58c2e03d62002108" translate="yes" xml:space="preserve">
          <source>For performance reasons, especially for Windows users, Vagrant uses a static binary to launch the actual Vagrant process. If you have &lt;em&gt;very&lt;/em&gt; early issues when launching Vagrant from the official installer, you can specify the &lt;code&gt;VAGRANT_DEBUG_LAUNCHER&lt;/code&gt; environment variable to output debugging information about the launch process.</source>
          <target state="translated">出于性能原因，特别是对于Windows用户，Vagrant使用静态二进制文件启动实际的Vagrant进程。如果你有&lt;em&gt;非常&lt;/em&gt;来自官方的安装程序启动时流浪汉早的问题，你可以指定 &lt;code&gt;VAGRANT_DEBUG_LAUNCHER&lt;/code&gt; 环境变量来对启动过程输出的调试信息。</target>
        </trans-unit>
        <trans-unit id="40650997a6f5c5f9f85d36d0bf6d939b8db42f86" translate="yes" xml:space="preserve">
          <source>For some operating systems, additional configuration options for the static IP address are available such as setting the default gateway or MTU.</source>
          <target state="translated">对于某些操作系统,静态IP地址的其他配置选项是可用的,如设置默认网关或MTU。</target>
        </trans-unit>
        <trans-unit id="3bc292e2ed57f270725b79e5af6e321e2622d93c" translate="yes" xml:space="preserve">
          <source>For the most up-to-date information on compatibility and supported versions of VMware Fusion and VMware Workstation, please visit the &lt;a href=&quot;https://www.vagrantup.com/vmware&quot;&gt;Vagrant VMware product page&lt;/a&gt;. Please note that VMware Fusion and VMware Workstation are third-party products that must be purchased and installed separately prior to using the provider.</source>
          <target state="translated">有关兼容性和受支持的VMware Fusion和VMware Workstation版本的最新信息，请访问&lt;a href=&quot;https://www.vagrantup.com/vmware&quot;&gt;Vagrant VMware产品页面&lt;/a&gt;。请注意，VMware Fusion和VMware Workstation是第三方产品，必须在使用提供程序之前单独购买和安装。</target>
        </trans-unit>
        <trans-unit id="998e3bd0abb6aba2b2282c7369872511e1a4685b" translate="yes" xml:space="preserve">
          <source>For this reason, it is recommended that you name the VM the same as the container. In the above example, it is unambiguous that the command to enter the Consul container is:</source>
          <target state="translated">为此,建议您将虚拟机的名称与容器的名称相同。在上面的例子中,进入Consul容器的命令是毫不含糊的。</target>
        </trans-unit>
        <trans-unit id="9217747c544ad4b1f8b2c03a9031ed232cac8d97" translate="yes" xml:space="preserve">
          <source>Force Paramiko Connection Mode</source>
          <target state="translated">强制Paramiko连接模式</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="61524dc3add5e190355c7e3ac97f46fdba788bd3" translate="yes" xml:space="preserve">
          <source>Forwarded Port Protocols</source>
          <target state="translated">转发端口协议</target>
        </trans-unit>
        <trans-unit id="5b1183527b2cbf006e04f3b4a5fdea5545e971ea" translate="yes" xml:space="preserve">
          <source>Forwarded Ports</source>
          <target state="translated">转发端口</target>
        </trans-unit>
        <trans-unit id="21fd16d3ef51fb14e55e674a0b5654f622800a6c" translate="yes" xml:space="preserve">
          <source>Forwarded Ports Failing in Workstation on Windows</source>
          <target state="translated">在Windows上的工作站中转发端口失败</target>
        </trans-unit>
        <trans-unit id="d790b402d79ac1a723c790313bcd679999474630" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions</source>
          <target state="translated">常问问题</target>
        </trans-unit>
        <trans-unit id="a60b77c4946bd6e06a06539d2af6fa246527eb8f" translate="yes" xml:space="preserve">
          <source>Full Alphabetical List of Configuration Options</source>
          <target state="translated">按字母顺序排列的完整配置选项列表</target>
        </trans-unit>
        <trans-unit id="4aff130167b88cc1cd23d8b36617957155bb7636" translate="yes" xml:space="preserve">
          <source>GUI vs. Headless</source>
          <target state="translated">GUI与无头</target>
        </trans-unit>
        <trans-unit id="ae1134a1238a8f514bb3a285d917ed793be53a78" translate="yes" xml:space="preserve">
          <source>General settings:</source>
          <target state="translated">一般设置。</target>
        </trans-unit>
        <trans-unit id="788a5f93113ee2001e6c21cb22dbf10f89a0f7a2" translate="yes" xml:space="preserve">
          <source>Global Status</source>
          <target state="translated">全球状况</target>
        </trans-unit>
        <trans-unit id="c78cd7690049921889017e85d8047c6029312a7f" translate="yes" xml:space="preserve">
          <source>Global and machine-scoped triggers will execute in the order that they are defined within a Vagrantfile. Take for example an abstracted Vagrantfile:</source>
          <target state="translated">全局和机器范围的触发器将按照它们在Vagrantfile中定义的顺序执行。以一个抽象的Vagrantfile为例,全局和机器范围的触发器将按照它们在Vagrantfile中定义的顺序执行。</target>
        </trans-unit>
        <trans-unit id="d8c0e366bc2b83e7e48cfded57aae49e67174e71" translate="yes" xml:space="preserve">
          <source>Groups and Group Variables</source>
          <target state="translated">组和组变量</target>
        </trans-unit>
        <trans-unit id="adc5bd35c61a6402bba9c7f92c54bfa9d7c9bb28" translate="yes" xml:space="preserve">
          <source>Guest Inheritance</source>
          <target state="translated">客人继承权</target>
        </trans-unit>
        <trans-unit id="9adb724c3b2a8123ff5b50d5b8a468fca68472df" translate="yes" xml:space="preserve">
          <source>Guest capabilities are defined by calling the &lt;code&gt;guest_capability&lt;/code&gt; method, which takes two parameters: the guest to add the capability to, and the name of the capability itself. Then, the block argument returns a class that implements a method named the same as the capability. This is covered in more detail in the next section.</source>
          <target state="translated">来宾功能是通过调用 &lt;code&gt;guest_capability&lt;/code&gt; 方法定义的，该方法带有两个参数：向其添加功能的来宾以及功能本身的名称。然后，block参数返回一个类，该类实现一个与该功能相同的方法。下一部分将对此进行详细介绍。</target>
        </trans-unit>
        <trans-unit id="f73121f785476d31776fbb8ddee3a209f125029e" translate="yes" xml:space="preserve">
          <source>Guest capabilities augment &lt;a href=&quot;guests&quot;&gt;guests&lt;/a&gt; by attaching specific &quot;capabilities&quot; to the guest, which are actions that can be performed in the context of that guest operating system.</source>
          <target state="translated">游客的能力扩充&lt;a href=&quot;guests&quot;&gt;客人&lt;/a&gt;通过将特定的&amp;ldquo;能力&amp;rdquo;的客人，这是可以在客户操作系统的上下文中执行的操作。</target>
        </trans-unit>
        <trans-unit id="3c23a67045a35d8dc1bd02b5088b1f1470636e89" translate="yes" xml:space="preserve">
          <source>Guests</source>
          <target state="translated">Guests</target>
        </trans-unit>
        <trans-unit id="374fe18f37b399c233bb03490dbb7475be1fd015" translate="yes" xml:space="preserve">
          <source>Guests are defined with the &lt;code&gt;guest&lt;/code&gt; method. The first argument is the name of the guest. This name is not actually used anywhere, but may in the future, so choose something helpful. Then, the block argument returns a class that implements the &lt;code&gt;Vagrant.plugin(2, :guest)&lt;/code&gt; interface.</source>
          <target state="translated">来宾是使用 &lt;code&gt;guest&lt;/code&gt; 方法定义的。第一个参数是客人的名字。此名称实际上并未在任何地方使用，但将来可能会使用，因此请选择有用的名称。然后，block参数返回一个实现 &lt;code&gt;Vagrant.plugin(2, :guest)&lt;/code&gt; 接口的类。</target>
        </trans-unit>
        <trans-unit id="96b99ffdc2b4e748b53e1b4ee6d781d2bfa446ff" translate="yes" xml:space="preserve">
          <source>HTTP Sharing</source>
          <target state="translated">HTTP共享</target>
        </trans-unit>
        <trans-unit id="245a6e1230efe3955828879fb337c2c0aa418279" translate="yes" xml:space="preserve">
          <source>HTTPS (SSL)</source>
          <target state="translated">HTTPS (SSL)</target>
        </trans-unit>
        <trans-unit id="cbc6ab8d850f8cff446447123804da23a703c293" translate="yes" xml:space="preserve">
          <source>Halt</source>
          <target state="translated">Halt</target>
        </trans-unit>
        <trans-unit id="01b127ca1ff00d6255a16df2ab1cbe2d604b6d8d" translate="yes" xml:space="preserve">
          <source>Hanging on Windows</source>
          <target state="translated">挂在窗户上</target>
        </trans-unit>
        <trans-unit id="31fadc501c57a28d10bf14f5575243c5bceb9d01" translate="yes" xml:space="preserve">
          <source>Hashes, arrays, etc. can be used with the JSON configuration object. Basically, anything that can be turned cleanly into JSON works.</source>
          <target state="translated">哈希值、数组等都可以用JSON配置对象。基本上,任何可以干净利落地变成JSON的东西都可以用。</target>
        </trans-unit>
        <trans-unit id="a13a70312abd01a9b76851995036f7d656aba1a3" translate="yes" xml:space="preserve">
          <source>HashiCorp (the makers of Vagrant) publish a basic Ubuntu 12.04 (32 and 64-bit) box that is available for minimal use cases. It is highly optimized, small in size, and includes support for Virtualbox and VMware. You can use it like this:</source>
          <target state="translated">HashiCorp(Vagrant的制造商)发布了一个基本的Ubuntu 12.04(32和64位)盒子,可用于最小的用例。它是高度优化的,体积小,并包括对Virtualbox和VMware的支持。你可以这样使用它。</target>
        </trans-unit>
        <trans-unit id="a4ccba1dbe5e9ee0246aed13df0aab2394e40e78" translate="yes" xml:space="preserve">
          <source>Heroku Strategy</source>
          <target state="translated">赫国战略</target>
        </trans-unit>
        <trans-unit id="05b572a7fd6ab31b9adf660bb35a79ba11eb48a7" translate="yes" xml:space="preserve">
          <source>Historically, running complex environments such as these was done by flattening them onto a single machine. The problem with that is that it is an inaccurate model of the production setup, which can behave far differently.</source>
          <target state="translated">从历史上看,像这样的复杂环境的运行是通过将它们平铺在一台机器上完成的。问题是这是一个不准确的生产设置模型,生产设置的行为可能大相径庭。</target>
        </trans-unit>
        <trans-unit id="c9372860d943bbb17b7c97a937f2f258c8b06d35" translate="yes" xml:space="preserve">
          <source>Host Inheritance</source>
          <target state="translated">主机继承</target>
        </trans-unit>
        <trans-unit id="f6ce4018790fb617783af2d8c31e0715e6f7fa93" translate="yes" xml:space="preserve">
          <source>Host VM</source>
          <target state="translated">主机虚拟机</target>
        </trans-unit>
        <trans-unit id="b5df0240465cba3d65b01d234240d25b74afcabb" translate="yes" xml:space="preserve">
          <source>Host Variables</source>
          <target state="translated">主机变量</target>
        </trans-unit>
        <trans-unit id="176478691693194ee564cfc6f95af16ced87d943" translate="yes" xml:space="preserve">
          <source>Host capabilities augment &lt;a href=&quot;hosts&quot;&gt;hosts&lt;/a&gt; by attaching specific &quot;capabilities&quot; to the host, which are actions that can be performed in the context of that host operating system.</source>
          <target state="translated">主机功能通过将特定的&amp;ldquo;功能&amp;rdquo;附加到&lt;a href=&quot;hosts&quot;&gt;主机&lt;/a&gt;来增强主机的功能，这些&amp;ldquo;功能&amp;rdquo;可以在该主机操作系统的上下文中执行。</target>
        </trans-unit>
        <trans-unit id="166b485729566abb7b8e7e3770f65b1be133662c" translate="yes" xml:space="preserve">
          <source>Hosts are defined with the &lt;code&gt;host&lt;/code&gt; method. The first argument is the name of the host. This name is not actually used anywhere, but may in the future, so choose something helpful. Then, the block argument returns a class that implements the &lt;code&gt;Vagrant.plugin(2, :host)&lt;/code&gt; interface.</source>
          <target state="translated">主机是使用 &lt;code&gt;host&lt;/code&gt; 方法定义的。第一个参数是主机的名称。此名称实际上并未在任何地方使用，但将来可能会使用，因此请选择有用的名称。然后，block参数返回一个实现 &lt;code&gt;Vagrant.plugin(2, :host)&lt;/code&gt; 接口的类。</target>
        </trans-unit>
        <trans-unit id="e21860bf37328b97ebb0ddd904694c78e4a7b382" translate="yes" xml:space="preserve">
          <source>How does it work?</source>
          <target state="translated">它是如何工作的?</target>
        </trans-unit>
        <trans-unit id="c7770825d259e8799b46436fdca91c978212c900" translate="yes" xml:space="preserve">
          <source>However, the IP address of the machine will be reported as part of the &lt;code&gt;vagrant up&lt;/code&gt;, and you can use that IP address as if it were a host only network.</source>
          <target state="translated">但是，该机器的IP地址将作为 &lt;code&gt;vagrant up&lt;/code&gt; 一部分报告，您可以将该IP地址当作仅用于主机的网络来使用。</target>
        </trans-unit>
        <trans-unit id="ab6646c0a72b529e3a336bf030c5b7b24d8202fd" translate="yes" xml:space="preserve">
          <source>However, you may find after using Vagrant for some time that you prefer to use another provider as your default. In fact, this is quite common. To make this experience better, Vagrant allows specifying the default provider to use by setting the &lt;code&gt;VAGRANT_DEFAULT_PROVIDER&lt;/code&gt; environmental variable.</source>
          <target state="translated">但是，使用Vagrant一​​段时间后，您可能会发现您希望使用其他提供程序作为默认设置。实际上，这很普遍。为了使这种体验更好，Vagrant允许通过设置 &lt;code&gt;VAGRANT_DEFAULT_PROVIDER&lt;/code&gt; 环境变量来指定要使用的默认提供程序。</target>
        </trans-unit>
        <trans-unit id="381220d6064e1fa85c0783726b20510ec6c718a9" translate="yes" xml:space="preserve">
          <source>Human-readable description of the state of the machine. This is the long version, and may be a paragraph or longer. targeted</source>
          <target state="translated">人类可读的机器状态描述。这是长版本,可能是一段或更长的时间。</target>
        </trans-unit>
        <trans-unit id="65b465dc76b5c0254e49d755871fb1b8208de016" translate="yes" xml:space="preserve">
          <source>Human-readable description of the state of the machine. This is the short version, limited to at most a sentence. targeted</source>
          <target state="translated">人类可读的机器状态描述。这是简短的版本,最多只限于一句话。</target>
        </trans-unit>
        <trans-unit id="04ae3c2fb8a961f98300d10dba1021351741e77c" translate="yes" xml:space="preserve">
          <source>Hyper-V</source>
          <target state="translated">Hyper-V</target>
        </trans-unit>
        <trans-unit id="afba8dc3213629f66974f05d8f816322b11cc035" translate="yes" xml:space="preserve">
          <source>Hyper-V Base Boxes</source>
          <target state="translated">Hyper-V基础箱</target>
        </trans-unit>
        <trans-unit id="e63d032317365b2bd6225748ba37e29672ab5a89" translate="yes" xml:space="preserve">
          <source>Hyper-V Kernel Modules</source>
          <target state="translated">Hyper-V内核模块</target>
        </trans-unit>
        <trans-unit id="860164fc7855ebf94efa9b1d80ebe1a6ea27a29f" translate="yes" xml:space="preserve">
          <source>Hyper-V also requires that you execute Vagrant with administrative privileges. Creating and managing virtual machines with Hyper-V requires admin rights. Vagrant will show you an error if it does not have the proper permissions.</source>
          <target state="translated">Hyper-V还要求您以管理权限执行Vagrant。使用Hyper-V创建和管理虚拟机需要管理员权限。如果Vagrant没有适当的权限,会显示一个错误。</target>
        </trans-unit>
        <trans-unit id="0109a9ad16838d3a0127fe04ecd43c35cf04a198" translate="yes" xml:space="preserve">
          <source>Hyper-V must be enabled prior to using the provider. Most Windows installations will not have Hyper-V enabled by default. Hyper-V is available by default for almost all Windows Enterprise, Professional, or Education 8.1 and later installs. To enable Hyper-V, go to &quot;Programs and Features&quot;, click on &quot;Turn Windows features on or off&quot; and check the box next to &quot;Hyper-V&quot;. Or install via PowerShell with:</source>
          <target state="translated">在使用提供商之前,必须先启用Hyper-V。大多数 Windows 安装默认情况下不会启用 Hyper-V。几乎所有 Windows 企业版、专业版或教育版 8.1 及更高版本的安装都可默认启用 Hyper-V。要启用Hyper-V,请转到 &quot;程序和功能&quot;,单击 &quot;打开或关闭Windows功能&quot;,并选中 &quot;Hyper-V &quot;旁边的框。或者通过PowerShell进行安装,用。</target>
        </trans-unit>
        <trans-unit id="1f76f0baf43aa985f8f1ac7f8110553318cfa98b" translate="yes" xml:space="preserve">
          <source>I understand that if you are not familiar with Ruby, the above may seem very advanced or foreign. But do not fear, what it is doing is quite simple: the script is assigned to a global variable &lt;code&gt;$script&lt;/code&gt;. This global variable contains a string which is then passed in as the inline script to the Vagrant configuration.</source>
          <target state="translated">我了解，如果您不熟悉Ruby，那么上面的内容可能看起来非常高级或陌生。但是不要担心，它的作用非常简单：脚本被分配给全局变量 &lt;code&gt;$script&lt;/code&gt; 。这个全局变量包含一个字符串，然后作为内联脚本传递给Vagrant配置。</target>
        </trans-unit>
        <trans-unit id="76b87a32829da0e088c31c0164cdf7f5b10ecba9" translate="yes" xml:space="preserve">
          <source>IPv6</source>
          <target state="translated">IPv6</target>
        </trans-unit>
        <trans-unit id="fee1c93a312ceb8f17150ac426b3bf23c9f94d48" translate="yes" xml:space="preserve">
          <source>IPv6 supports for private networks was added in Vagrant 1.7.5 and may not work with every provider.</source>
          <target state="translated">在Vagrant 1.7.5中增加了对专用网络的IPv6支持,但不一定适用于所有供应商。</target>
        </trans-unit>
        <trans-unit id="a74cf2a7ed34d8224de473217436254b6ce9ae17" translate="yes" xml:space="preserve">
          <source>If DNS is not working within your VM, then you may need to enable a DNS proxy (built-in to VirtualBox). Please &lt;a href=&quot;https://serverfault.com/questions/453185/vagrant-virtualbox-dns-10-0-2-3-not-working&quot;&gt;see the StackOverflow answers here&lt;/a&gt; for a guide on how to do that.</source>
          <target state="translated">如果您的VM中无法使用DNS，则可能需要启用DNS代理（内置于VirtualBox中）。请&lt;a href=&quot;https://serverfault.com/questions/453185/vagrant-virtualbox-dns-10-0-2-3-not-working&quot;&gt;参阅此处的StackOverflow答案&lt;/a&gt;以获取有关如何执行此操作的指南。</target>
        </trans-unit>
        <trans-unit id="0db013d323640b123a82929bba97356112cb928a" translate="yes" xml:space="preserve">
          <source>If Vagrant commands are hanging on Windows because they're communicating to VirtualBox, this may be caused by a permissions issue with VirtualBox. This is easy to fix. Starting VirtualBox as a normal user or as an administrator will prevent you from using it in the opposite way. Please keep in mind that when Vagrant interacts with VirtualBox, it will interact with it with the same access level as the console running Vagrant.</source>
          <target state="translated">如果Vagrant命令因为与VirtualBox通信而在Windows上挂起,这可能是由VirtualBox的权限问题引起的。这很容易解决。以普通用户或管理员身份启动VirtualBox,可以防止您以相反的方式使用它。请记住,当Vagrant与VirtualBox交互时,它将以与运行Vagrant的控制台相同的访问级别与之交互。</target>
        </trans-unit>
        <trans-unit id="1f93c7aa65004f5ce66b9a5367aa70ae1505a8da" translate="yes" xml:space="preserve">
          <source>If Vagrant detects it is running outside of the officially installer, the original environment will always be restored. You can disable this automatic jailbreak by setting &lt;code&gt;VAGRANT_SKIP_SUBPROCESS_JAILBREAK&lt;/code&gt;.</source>
          <target state="translated">如果Vagrant检测到它正在正式安装程序之外运行，则将始终还原原始环境。您可以通过设置 &lt;code&gt;VAGRANT_SKIP_SUBPROCESS_JAILBREAK&lt;/code&gt; 来禁用此自动越狱功能。</target>
        </trans-unit>
        <trans-unit id="ad1881fb6ed6d4cb301d335cb2b0e64af21fc3a6" translate="yes" xml:space="preserve">
          <source>If Vagrant has trouble detecting the port of your servers in your environment, use the &lt;code&gt;--http&lt;/code&gt; and/or &lt;code&gt;--https&lt;/code&gt; flags to be more explicit.</source>
          <target state="translated">如果Vagrant在检测环境中的服务器端口时遇到问题，请使用 &lt;code&gt;--http&lt;/code&gt; 和/或 &lt;code&gt;--https&lt;/code&gt; 标志进行更明确的显示。</target>
        </trans-unit>
        <trans-unit id="122de160a898d9f722c4f17e7d4271b34be84c2e" translate="yes" xml:space="preserve">
          <source>If Vagrant still has not found any usable providers, it will error.</source>
          <target state="translated">如果Vagrant仍然没有找到任何可用的供应商,它将出错。</target>
        </trans-unit>
        <trans-unit id="ca6dee1c7213479347b55c4a7731b047a8deb3c0" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;--&lt;/code&gt; (two hyphens) are found on the command line, any arguments after this are passed directly into the &lt;code&gt;ssh&lt;/code&gt; executable. This allows you to pass any arbitrary commands to do things such as reverse tunneling down into the &lt;code&gt;ssh&lt;/code&gt; program.</source>
          <target state="translated">如果在命令行上找到 &lt;code&gt;--&lt;/code&gt; （两个连字符），则此之后的任何参数都将直接传递到 &lt;code&gt;ssh&lt;/code&gt; 可执行文件中。这使您可以传递任意命令来执行操作，例如将反向隧道向下钻入 &lt;code&gt;ssh&lt;/code&gt; 程序。</target>
        </trans-unit>
        <trans-unit id="f8f6f1d681fffa08644ab36c1f332f048044e360" translate="yes" xml:space="preserve">
          <source>If a Vagrant project directory is not within the user's home directory on the Windows system, certain actions that include permission checks may fail (like &lt;code&gt;vagrant ssh&lt;/code&gt;). When accessing Vagrant projects outside the WSL Vagrant will skip these permission checks when the project path is within the path defined in the &lt;code&gt;VAGRANT_WSL_WINDOWS_ACCESS_USER_HOME_PATH&lt;/code&gt; environment variable. For example, if a user wants to run a Vagrant project from the WSL that is located at &lt;code&gt;C:\TestDir\vagrant-project&lt;/code&gt;:</source>
          <target state="translated">如果Vagrant项目目录不在Windows系统上用户的主目录内，则某些包含权限检查的操作可能会失败（例如 &lt;code&gt;vagrant ssh&lt;/code&gt; ）。在项目路径位于 &lt;code&gt;VAGRANT_WSL_WINDOWS_ACCESS_USER_HOME_PATH&lt;/code&gt; 环境变量中定义的路径内时，在WSL之外访问Wagrant项目时，Vagrant将跳过这些权限检查。例如，如果用户要从位于 &lt;code&gt;C:\TestDir\vagrant-project&lt;/code&gt; 的WSL运行Vagrant 项目：</target>
        </trans-unit>
        <trans-unit id="0b464b443196b9abf7dc6290cf0843e4b82a7381" translate="yes" xml:space="preserve">
          <source>If a box has multiple providers, the exact provider must be specified with the &lt;code&gt;--provider&lt;/code&gt; flag. If a box has multiple versions, you can select what versions to delete with the &lt;code&gt;--box-version&lt;/code&gt; flag or remove all versions with the &lt;code&gt;--all&lt;/code&gt; flag.</source>
          <target state="translated">如果一个框具有多个提供程序，则必须使用 &lt;code&gt;--provider&lt;/code&gt; 标志指定确切的提供程序。如果一个框具有多个版本，则可以使用 &lt;code&gt;--box-version&lt;/code&gt; 标志选择要删除的版本，或者使用 &lt;code&gt;--all&lt;/code&gt; 标志来删除所有版本。</target>
        </trans-unit>
        <trans-unit id="a73ee12eedd4ebefe3b886ab2bf33c4085f604ea" translate="yes" xml:space="preserve">
          <source>If a first argument is given, it will prepopulate the &lt;code&gt;config.vm.box&lt;/code&gt; setting in the created Vagrantfile.</source>
          <target state="translated">如果给出第一个参数，它将在创建的Vagrantfile中预填充 &lt;code&gt;config.vm.box&lt;/code&gt; 设置。</target>
        </trans-unit>
        <trans-unit id="eccb4d64ee2f9383eb7720b0dc5b1370641a039c" translate="yes" xml:space="preserve">
          <source>If a name is specified, only that single plugin will be updated. If a name is specified of a plugin that is not installed, this command will not install it.</source>
          <target state="translated">如果指定了一个名称,那么只有该插件会被更新。如果指定了一个没有安装的插件的名称,这个命令将不会安装它。</target>
        </trans-unit>
        <trans-unit id="5307745ffbab3b3943453157bf1f89fc147d6583" translate="yes" xml:space="preserve">
          <source>If a second argument is given, it will prepopulate the &lt;code&gt;config.vm.box_url&lt;/code&gt; setting in the created Vagrantfile.</source>
          <target state="translated">如果提供了第二个参数，它将在创建的Vagrantfile中预填充 &lt;code&gt;config.vm.box_url&lt;/code&gt; 设置。</target>
        </trans-unit>
        <trans-unit id="29eb6875d530a2f1235c2e36583e66a52fd58644" translate="yes" xml:space="preserve">
          <source>If an error occurs during the download or the download is interrupted with a Ctrl-C, then Vagrant will attempt to resume the download the next time it is requested. Vagrant will only attempt to resume a download for 24 hours after the initial download.</source>
          <target state="translated">如果在下载过程中出现错误,或者下载被Ctrl-C中断,那么Vagrant将在下一次请求时尝试恢复下载。Vagrant只会在首次下载后的24小时内尝试恢复下载。</target>
        </trans-unit>
        <trans-unit id="a2054b7329ffbc30005c54924b9b893cb59fce2c" translate="yes" xml:space="preserve">
          <source>If an update is found, Vagrant will output a warning to the user letting them know an update is available. That user can choose to ignore the warning for now, or can update the box by running &lt;code&gt;vagrant box update&lt;/code&gt;.</source>
          <target state="translated">如果找到更新，Vagrant将向用户输出警告，让他们知道有可用的更新。该用户可以选择暂时忽略该警告，也可以通过运行 &lt;code&gt;vagrant box update&lt;/code&gt; 来更新该框。</target>
        </trans-unit>
        <trans-unit id="0b4d0e28b595fffae81327617e3c8f5c98f8a2ba" translate="yes" xml:space="preserve">
          <source>If as part of running your Vagrant environment with VMware, you perform a kernel upgrade, it is likely that the VMware guest tools will stop working. This breaks features of Vagrant such as synced folders and sometimes networking as well.</source>
          <target state="translated">如果您在Vagrant环境中使用VMware进行内核升级,VMware客户工具很可能会停止工作。这将破坏Vagrant的功能,如同步文件夹和有时网络。</target>
        </trans-unit>
        <trans-unit id="0c1cdfc18b872acd64321d771e32f8156582cb6e" translate="yes" xml:space="preserve">
          <source>If automatic repair is not successful, refer to the &lt;a href=&quot;#plugin-expunge&quot;&gt;expunge&lt;/a&gt; command</source>
          <target state="translated">如果自动修复失败，请参考&lt;a href=&quot;#plugin-expunge&quot;&gt;expunge&lt;/a&gt;命令</target>
        </trans-unit>
        <trans-unit id="86c0266785e589c27dcc2919fd2fd7d047455c5a" translate="yes" xml:space="preserve">
          <source>If during mounting on Linux you are seeing an error message that includes the words &quot;wrong fs type,&quot; this is because the SMB kernel extension needs to be updated in the OS.</source>
          <target state="translated">如果在Linux上挂载过程中,你看到的错误信息包括 &quot;错误的fs类型&quot;,这是因为操作系统中的SMB内核扩展需要更新。</target>
        </trans-unit>
        <trans-unit id="ba648597ef5ddf0ddfeed151e865671f9a5358da" translate="yes" xml:space="preserve">
          <source>If installing Ansible directly on the Vagrant host is not an option in your development environment, you might be looking for the &lt;a href=&quot;ansible_local&quot;&gt;Ansible Local provisioner&lt;/a&gt; alternative.</source>
          <target state="translated">如果在您的开发环境中不能直接在Vagrant主机上安装Ansible，则您可能正在寻找&lt;a href=&quot;ansible_local&quot;&gt;Ansible Local供应商&lt;/a&gt;替代方案。</target>
        </trans-unit>
        <trans-unit id="308faa1f95ea1b20b691d4c83a84a4df44cac07d" translate="yes" xml:space="preserve">
          <source>If more than one network interface is available on the host machine, Vagrant will ask you to choose which interface the virtual machine should bridge to. A default interface can be specified by adding a &lt;code&gt;:bridge&lt;/code&gt; clause to the network definition.</source>
          <target state="translated">如果主机上有多个网络接口，则Vagrant会要求您选择虚拟机应桥接到的接口。可以通过在网络定义中添加 &lt;code&gt;:bridge&lt;/code&gt; 子句来指定默认接口。</target>
        </trans-unit>
        <trans-unit id="90dc25e3ca23122cdd95bb7d6f0ee330a0d09322" translate="yes" xml:space="preserve">
          <source>If multiple names are specified, multiple plugins will be installed. If flags are given below, the flags will apply to &lt;em&gt;all&lt;/em&gt; plugins being installed by the current command invocation.</source>
          <target state="translated">如果指定了多个名称，则将安装多个插件。如果在下面给出标志，则这些标志将应用于当前命令调用正在安装的&lt;em&gt;所有&lt;/em&gt;插件。</target>
        </trans-unit>
        <trans-unit id="76680bb384445bb03c0fffff2f47922f27bb46d5" translate="yes" xml:space="preserve">
          <source>If multiple plugins are given, multiple plugins will be uninstalled.</source>
          <target state="translated">如果给出多个插件,则会卸载多个插件。</target>
        </trans-unit>
        <trans-unit id="8e5051617bd0bf86a2cf6c0aa0b5b5ae690f0101" translate="yes" xml:space="preserve">
          <source>If multiple plugins are required, they can be provided as an array:</source>
          <target state="translated">如果需要多个插件,可以以数组形式提供。</target>
        </trans-unit>
        <trans-unit id="8567de2663ebda7b64a2f1f23e9d6f6b788d2c92" translate="yes" xml:space="preserve">
          <source>If only &lt;code&gt;environment&lt;/code&gt; and &lt;code&gt;environment_path&lt;/code&gt; are specified, it will parse and use the manifest specified in the &lt;code&gt;environment.conf&lt;/code&gt; file. If &lt;code&gt;manifests_path&lt;/code&gt; and &lt;code&gt;manifest_file&lt;/code&gt; is specified along with the environment options, the manifest from the environment will be overridden by the specified &lt;code&gt;manifest_file&lt;/code&gt;. If &lt;code&gt;manifests_path&lt;/code&gt; and &lt;code&gt;manifest_file&lt;/code&gt; are specified without environments, the old non-environment mode will be used (which will fail on Puppet 4+).</source>
          <target state="translated">如果仅指定 &lt;code&gt;environment&lt;/code&gt; 和 &lt;code&gt;environment_path&lt;/code&gt; ，它将解析并使用 &lt;code&gt;environment.conf&lt;/code&gt; 文件中指定的清单。如果将 &lt;code&gt;manifests_path&lt;/code&gt; 和 &lt;code&gt;manifest_file&lt;/code&gt; 与环境选项一起指定，则来自环境的清单将被指定的 &lt;code&gt;manifest_file&lt;/code&gt; 覆盖。如果在没有环境的情况下指定了 &lt;code&gt;manifests_path&lt;/code&gt; 和 &lt;code&gt;manifest_file&lt;/code&gt; ，则将使用旧的非环境模式（在Puppet 4+上将失败）。</target>
        </trans-unit>
        <trans-unit id="c69e4f21829cb0fdee3b10fa4be3706b672adb56" translate="yes" xml:space="preserve">
          <source>If required to copy to a destination where &lt;code&gt;vagrant&lt;/code&gt; user does not have permissions, use &lt;code&gt;&quot;--rsync-path='sudo rsync'&quot;&lt;/code&gt; to run rsync with sudo on the guest</source>
          <target state="translated">如果需要复制到 &lt;code&gt;vagrant&lt;/code&gt; 用户没有权限的目标，请使用 &lt;code&gt;&quot;--rsync-path='sudo rsync'&quot;&lt;/code&gt; 在guest 虚拟机上使用sudo运行rsync</target>
        </trans-unit>
        <trans-unit id="ecd82713964490534467ec1583efe73511d21d5e" translate="yes" xml:space="preserve">
          <source>If set, this will disable the ability to create symlinks with all virtualbox shared folders. Defaults to true if the option is not set. This can be overridden on a per-folder basis within your Vagrantfile config by settings the &lt;code&gt;SharedFoldersEnableSymlinksCreate&lt;/code&gt; option to true.</source>
          <target state="translated">如果设置，则将禁用使用所有virtualbox共享文件夹创建符号链接的功能。如果未设置该选项，则默认为true。通过将 &lt;code&gt;SharedFoldersEnableSymlinksCreate&lt;/code&gt; 选项设置为true ，可以在Vagrantfile配置中的每个文件夹基础上覆盖此设置。</target>
        </trans-unit>
        <trans-unit id="3b749f60fc355dbbf00b3bb86f913c756dab3081" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;VAGRANT_DEFAULT_PROVIDER&lt;/code&gt; environmental variable is set, it takes next priority and will be the provider chosen.</source>
          <target state="translated">如果设置了 &lt;code&gt;VAGRANT_DEFAULT_PROVIDER&lt;/code&gt; 环境变量，它将具有下一个优先级，并将成为选择的提供者。</target>
        </trans-unit>
        <trans-unit id="4125fe6898ea632de261da636ac9cb964f1ef42e" translate="yes" xml:space="preserve">
          <source>If the Vagrant environment or box you are using is protected with the Vagrant insecure keypair (most public boxes are), then SSH will be easily available to anyone who connects.</source>
          <target state="translated">如果您使用的Vagrant环境或盒子受到Vagrant不安全密钥对的保护(大多数公共盒子都是如此),那么SSH将很容易被任何连接的人使用。</target>
        </trans-unit>
        <trans-unit id="843dca7d48c67917f7aba0a5990dc14f57e70968" translate="yes" xml:space="preserve">
          <source>If the command succeeds, then the guest additions are now installed!</source>
          <target state="translated">如果命令成功,那么客人添加的内容就已经安装好了!</target>
        </trans-unit>
        <trans-unit id="999386d5991d7ba4588663f50aaaf611c925dc1b" translate="yes" xml:space="preserve">
          <source>If the command you specify runs in the background (such as appending a &lt;code&gt;&amp;amp;&lt;/code&gt; to a shell command), it will be terminated almost immediately. This is because when Vagrant executes the command, it executes it within the context of a shell, and when the shell exits, all of the child processes also exit.</source>
          <target state="translated">如果您指定的命令在后台运行（例如将 &lt;code&gt;&amp;amp;&lt;/code&gt; 附加到shell命令），则该命令几乎立即终止。这是因为当Vagrant执行命令时，它会在Shell上下文中执行该命令，并且当Shell退出时，所有子进程也会退出。</target>
        </trans-unit>
        <trans-unit id="72207a21fb2db18d418182dc0633d25a4c27cba7" translate="yes" xml:space="preserve">
          <source>If the commands succeed, then the guest additions are now installed!</source>
          <target state="translated">如果命令成功,那么客人添加的内容就安装完毕了!</target>
        </trans-unit>
        <trans-unit id="84a7f54894cb42b818b75b40cdee36ad7c2e3f26" translate="yes" xml:space="preserve">
          <source>If the license is not installed correctly, you will see an error message.</source>
          <target state="translated">如果许可证没有正确安装,你会看到一个错误信息。</target>
        </trans-unit>
        <trans-unit id="8a9c15b32a58e88dc247e9b45e9bced12d64e4e5" translate="yes" xml:space="preserve">
          <source>If the newly created box does not depend on Vagrant's existing behavior of modifying this setting, it can disable Vagrant from applying the modification by adding a Vagrantfile to the box with the following content:</source>
          <target state="translated">如果新创建的盒子不依赖于Vagrant现有的修改此设置的行为,可以通过在盒子中添加一个Vagrantfile,内容如下,禁止Vagrant应用修改。</target>
        </trans-unit>
        <trans-unit id="06283395ecb7f714173e897024e28e928957db7c" translate="yes" xml:space="preserve">
          <source>If the plugin is already installed, this command will reinstall it with the latest version available.</source>
          <target state="translated">如果插件已经安装,该命令将用最新的版本重新安装。</target>
        </trans-unit>
        <trans-unit id="e5950363a388bd24dfcc93de29b2d9856d9c91f2" translate="yes" xml:space="preserve">
          <source>If the private key is encrypted (the default behavior), then the connecting person will be prompted for the password to decrypt the private key.</source>
          <target state="translated">如果私钥是加密的(默认行为),那么连接的人将被提示输入密码来解密私钥。</target>
        </trans-unit>
        <trans-unit id="6e466711d9d571805b58bca081cae0e93c3a5d0d" translate="yes" xml:space="preserve">
          <source>If the system cannot run Linux containers natively, Vagrant automatically spins up a &quot;host VM&quot; to run Docker. This allows your Docker-based Vagrant environments to remain portable, without inconsistencies depending on the platform they are running on.</source>
          <target state="translated">如果系统不能运行Linux容器,Vagrant会自动旋转一个 &quot;主机虚拟机 &quot;来运行Docker。这使得您基于Docker的Vagrant环境能够保持可移植性,而不会因为平台的不同而出现不一致的情况。</target>
        </trans-unit>
        <trans-unit id="e0ad0e6a31b0ad0c8e15f2e174a79977c07bb64b" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;metadata.json&lt;/code&gt; file or the file does not contain valid JSON with at least a &quot;provider&quot; key, then Vagrant will error when adding the box, because it cannot verify the provider.</source>
          <target state="translated">如果没有 &lt;code&gt;metadata.json&lt;/code&gt; 文件，或者该文件不包含带有至少&amp;ldquo; provider&amp;rdquo;键的有效JSON，则Vagrant在添加该框时将出错，因为它无法验证提供者。</target>
        </trans-unit>
        <trans-unit id="008d7b58402744c3c8320adaff54903daf6d63c6" translate="yes" xml:space="preserve">
          <source>If there is no officially supported system package of the utility available, it may be possible to manually install utility. This applies to Linux platforms only. First, download the latest zip package from the releases page.</source>
          <target state="translated">如果没有官方支持的实用程序系统包,可以手动安装实用程序。这只适用于Linux平台。首先,从发布页面下载最新的压缩包。</target>
        </trans-unit>
        <trans-unit id="9e095030517daf7b7a34d8e19443d098b37c0f61" translate="yes" xml:space="preserve">
          <source>If this is set Vagrant will not stub the Vagrantfile when running &lt;code&gt;vagrant plugin&lt;/code&gt; commands. When this environment variable is set the &lt;code&gt;--local&lt;/code&gt; flag will not be required by &lt;code&gt;vagrant plugin&lt;/code&gt; commands to enable local project plugins.</source>
          <target state="translated">如果设置了该选项，则在运行 &lt;code&gt;vagrant plugin&lt;/code&gt; 命令时，Vagrant不会对Vagrantfile存根。设置此环境变量后， &lt;code&gt;vagrant plugin&lt;/code&gt; 命令将不需要 &lt;code&gt;--local&lt;/code&gt; 标志来启用本地项目插件。</target>
        </trans-unit>
        <trans-unit id="1d5b7d4b6772b77c369a46f51b95a62070c132b8" translate="yes" xml:space="preserve">
          <source>If this is set to any value, Vagrant will not prompt for confirmation prior to installing local plugins which have been defined within the local Vagrantfile.</source>
          <target state="translated">如果这个值被设置为任何值,Vagrant将不会在安装本地Vagrant文件中定义的本地插件之前提示确认。</target>
        </trans-unit>
        <trans-unit id="1480992847750f92fb2a2b7707c112128793cba6" translate="yes" xml:space="preserve">
          <source>If this is set to any value, then Vagrant will force colored output, even if it detected that there is no TTY or the current environment does not support it.</source>
          <target state="translated">如果这个值被设置为任何值,那么Vagrant将强制进行彩色输出,即使它检测到没有TTY或当前环境不支持它。</target>
        </trans-unit>
        <trans-unit id="7f39829d05394c04b1ee15be9d74f13b1aee2f36" translate="yes" xml:space="preserve">
          <source>If this is set to any value, then Vagrant will not error when a configured plugin source is unavailable. When installing a Vagrant plugin Vagrant will error and halt if a plugin source is inaccessible. In some cases it may be desirable to ignore inaccessible sources and continue with the plugin installation. Enabling this value will cause Vagrant to simply log the plugin source error and continue.</source>
          <target state="translated">如果这个值被设置为任何值,那么当配置的插件源不可用时,Vagrant将不会出错。当安装Vagrant插件时,如果插件源不可访问,Vagrant会出错并停止。在某些情况下,可能需要忽略不可访问的源,继续安装插件。启用该值将导致Vagrant简单地记录插件源的错误并继续安装。</target>
        </trans-unit>
        <trans-unit id="68403fb9cfd2fc4cdb2592eb6c071952b9fa1340" translate="yes" xml:space="preserve">
          <source>If this is set to any value, then Vagrant will not load any 3rd party plugins. This is useful if you install a plugin and it is introducing instability to Vagrant, or if you want a specific Vagrant environment to not load plugins.</source>
          <target state="translated">如果这个值被设置为任何值,那么Vagrant将不会加载任何第三方插件。如果您安装了一个插件,并且它引入了Vagrant的不稳定性,或者您想让一个特定的Vagrant环境不加载插件,这是很有用的。</target>
        </trans-unit>
        <trans-unit id="75c60359056722c022b0cb9c74c092e43739a631" translate="yes" xml:space="preserve">
          <source>If this is set to any value, then Vagrant will not use any colorized output. This is useful if you are logging the output to a file or on a system that does not support colors.</source>
          <target state="translated">如果这个值被设置为任何值,那么Vagrant将不使用任何颜色化的输出。如果您将输出记录到文件或在不支持颜色的系统上,这很有用。</target>
        </trans-unit>
        <trans-unit id="60d988481ad5c80ddbe206b7e169e853444cd289" translate="yes" xml:space="preserve">
          <source>If this is set, Vagrant will &lt;em&gt;not&lt;/em&gt; wrap interactive processes with winpty where required.</source>
          <target state="translated">如果设置了该选项，Vagrant将&lt;em&gt;不会&lt;/em&gt;在需要的地方用winpty包装交互过程。</target>
        </trans-unit>
        <trans-unit id="532257eec275fbb5213287604c881682a92141f1" translate="yes" xml:space="preserve">
          <source>If this is set, Vagrant will not perform any parallel operations (such as parallel box provisioning). All operations will be performed in serial.</source>
          <target state="translated">如果设置了这个选项,Vagrant将不执行任何并行操作(如并行箱体配置)。所有操作都将以串行方式进行。</target>
        </trans-unit>
        <trans-unit id="87a64cc39970e21f51a8c666ce17944341ac9625" translate="yes" xml:space="preserve">
          <source>If this is set, Vagrant will prefer using utility executables (like &lt;code&gt;ssh&lt;/code&gt; and &lt;code&gt;rsync&lt;/code&gt;) from the local system instead of those vendored within the Vagrant installation.</source>
          <target state="translated">如果设置了该选项，Vagrant将更喜欢使用本地系统中的实用程序可执行文件（例如 &lt;code&gt;ssh&lt;/code&gt; 和 &lt;code&gt;rsync&lt;/code&gt; ），而不是使用Vagrant安装中提供的实用程序。</target>
        </trans-unit>
        <trans-unit id="3dfb5d4f83f5cb14ef752f46450bc56bf581400c" translate="yes" xml:space="preserve">
          <source>If this option is not specified, the latest version is always used. This is equivalent to specifying a constraint of &quot;&amp;gt;= 0&quot;.</source>
          <target state="translated">如果未指定此选项，则始终使用最新版本。这等效于指定约束&amp;ldquo;&amp;gt; = 0&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="d1ad5da68067be56229bdc985c46dcea5c924a9b" translate="yes" xml:space="preserve">
          <source>If this option is set to &lt;code&gt;false&lt;/code&gt; Vagrant will set the Vagrant SSH username as a default Ansible remote user, but &lt;code&gt;remote_user&lt;/code&gt; parameters of your Ansible plays or tasks will still be taken into account and thus override the Vagrant configuration.</source>
          <target state="translated">如果将此选项设置为 &lt;code&gt;false&lt;/code&gt; ,则 Vagrant会将Vagrant SSH用户名设置为默认的Ansible远程用户，但仍会考虑Ansible播放或任务的 &lt;code&gt;remote_user&lt;/code&gt; 参数，从而覆盖Vagrant配置。</target>
        </trans-unit>
        <trans-unit id="6f0099c9402c627ce05e900c175ab5d156a68fbd" translate="yes" xml:space="preserve">
          <source>If this were placed in a Vagrantfile, after merging, the value of widgets would be &quot;2&quot;.</source>
          <target state="translated">如果把这个放在Vagrantfile中,合并后,widgets的值会是 &quot;2&quot;。</target>
        </trans-unit>
        <trans-unit id="5b1b46fbdef6945b1270b161905c594718300582" translate="yes" xml:space="preserve">
          <source>If updating the kernel extension is not an option, you can workaround the issue by specifying the following options on your synced folder:</source>
          <target state="translated">如果更新内核扩展名不是一个选项,你可以通过在你的同步文件夹中指定以下选项来解决这个问题。</target>
        </trans-unit>
        <trans-unit id="c7fc0cb6c01a89f8648d053e3a815a57dc6bedc6" translate="yes" xml:space="preserve">
          <source>If you add this to an existing Vagrantfile that has a running guest machine, be sure to &lt;code&gt;vagrant reload&lt;/code&gt; to see your changes.</source>
          <target state="translated">如果将其添加到具有运行中的来宾计算机的现有Vagrant文​​件中，请确保 &lt;code&gt;vagrant reload&lt;/code&gt; 以查看所做的更改。</target>
        </trans-unit>
        <trans-unit id="6ae28aea837068a814f97c3dc17a105a4d1da03a" translate="yes" xml:space="preserve">
          <source>If you already have a working CFEngine policy server, you can get a CFEngine client installed and bootstrapped by specifying its IP address:</source>
          <target state="translated">如果您已经有一个工作的CFEngine策略服务器,您可以通过指定其IP地址来获得CFEngine客户端的安装和引导。</target>
        </trans-unit>
        <trans-unit id="a378333600d31cb61fc02314d25ace2fb6d4e2b9" translate="yes" xml:space="preserve">
          <source>If you already started the Vagrant environment before setting &lt;code&gt;auto_config&lt;/code&gt;, the files it initially placed there will stay there. You will have to remove those files manually or destroy and recreate the machine.</source>
          <target state="translated">如果在设置 &lt;code&gt;auto_config&lt;/code&gt; 之前已经启动了Vagrant环境，则最初放置在该环境中的文件将保留在那里。您将必须手动删除这些文件，或者销毁并重新创建计算机。</target>
        </trans-unit>
        <trans-unit id="6fa650c2d69a99a9f4c07c5526023a646b9b4837" translate="yes" xml:space="preserve">
          <source>If you are creating a base box for private use, you should try &lt;em&gt;not&lt;/em&gt; to follow these, as they open up your base box to security risks (known users, passwords, private keys, etc.).</source>
          <target state="translated">如果要创建供私人使用的基本框，则&lt;em&gt;不要&lt;/em&gt;尝试遵循这些规则，因为它们会使您的基本框面临安全风险（已知用户，密码，私钥等）。</target>
        </trans-unit>
        <trans-unit id="6be574180131238ceecb60ebc292cd13e9b45871" translate="yes" xml:space="preserve">
          <source>If you are creating an AWS base box, do not force the AMI to allocate terabytes of EBS storage, for example, since the user can do that on their own. But you should default to mounting ephemeral drives, because they're free and provide a lot of disk space.</source>
          <target state="translated">如果你正在创建一个AWS基础箱,不要强迫AMI分配TB的EBS存储,例如,因为用户可以自己做。但你应该默认挂载外延式驱动器,因为它们是免费的,并且提供了大量的磁盘空间。</target>
        </trans-unit>
        <trans-unit id="3614738497c2b73975f97cc7a40ff8ff7be47ee1" translate="yes" xml:space="preserve">
          <source>If you are defining your triggers using the hash syntax, you must use the &lt;code&gt;Proc&lt;/code&gt; type for defining a ruby trigger.</source>
          <target state="translated">如果要使用哈希语法定义触发器，则必须使用 &lt;code&gt;Proc&lt;/code&gt; 类型定义红宝石触发器。</target>
        </trans-unit>
        <trans-unit id="e9cd939343ec4a33dddb9fb81067de0e222167d7" translate="yes" xml:space="preserve">
          <source>If you are developing a &lt;a href=&quot;../plugins/providers&quot;&gt;custom Vagrant provider&lt;/a&gt;, you will need to do a tiny bit more work in order for it to work well with Vagrant Share.</source>
          <target state="translated">如果您要开发&lt;a href=&quot;../plugins/providers&quot;&gt;自定义的Vagrant提供程序&lt;/a&gt;，则需要做更多的工作才能使其与Vagrant Share一起正常工作。</target>
        </trans-unit>
        <trans-unit id="90aaa32ae9aa8553062534b1c42e2b946f34e059" translate="yes" xml:space="preserve">
          <source>If you are familiar with programming, this is similar to how languages have different variable scopes.</source>
          <target state="translated">如果你熟悉编程,这类似于语言有不同的变量范围。</target>
        </trans-unit>
        <trans-unit id="9bc967af7076061339f66c7700e40d3bec06d231" translate="yes" xml:space="preserve">
          <source>If you are just getting started with Vagrant, box versioning is not too important, and we recommend learning about some other topics first. But if you are using Vagrant on a team or plan on creating your own boxes, versioning is very important. Luckily, having versioning built right in to Vagrant makes it easy to use and fit nicely into the Vagrant workflow.</source>
          <target state="translated">如果您刚开始使用Vagrant,盒子的版本管理并不是太重要,我们建议先学习一些其他的主题。但如果您在团队中使用Vagrant,或者计划创建自己的盒子,版本管理就非常重要了。幸运的是,Vagrant中内置了版本管理,这使得它很容易使用,并很好地融入到Vagrant工作流程中。</target>
        </trans-unit>
        <trans-unit id="a903f7cc5b73c536f84f4d740007dbc954b398d3" translate="yes" xml:space="preserve">
          <source>If you are just learning Chef for the first time, you probably want to start with the &lt;a href=&quot;chef_solo&quot;&gt;Chef Solo&lt;/a&gt; provisioner.</source>
          <target state="translated">如果您是第一次学习Chef，那么您可能想从&lt;a href=&quot;chef_solo&quot;&gt;Chef Solo&lt;/a&gt; Provisioner开始。</target>
        </trans-unit>
        <trans-unit id="37d180e85252d06cbd145f7e580e5d72dc5240e9" translate="yes" xml:space="preserve">
          <source>If you are looking for a HashiCorp box:</source>
          <target state="translated">如果你正在寻找哈希公司的盒子。</target>
        </trans-unit>
        <trans-unit id="6415a65a3260aadd60e814146668c57a21213339" translate="yes" xml:space="preserve">
          <source>If you are running a Batch or PowerShell script for Windows, make sure that the external path has the proper extension (&quot;.bat&quot; or &quot;.ps1&quot;), because Windows uses this to determine what kind of file it is to execute. If you exclude this extension, it likely will not work.</source>
          <target state="translated">如果你正在运行Windows的Batch或PowerShell脚本,请确保外部路径具有正确的扩展名(&quot;.bat &quot;或&quot;.ps1&quot;),因为Windows使用它来确定要执行的文件类型。如果你排除了这个扩展名,它很可能不会工作。</target>
        </trans-unit>
        <trans-unit id="c6c63adf9ce4a8a339a49ff6df0618e0b4a8d30c" translate="yes" xml:space="preserve">
          <source>If you are running a common OS, VMware tools can often auto-upgrade themselves. This setting is disabled by default. The Vagrantfile settings below will enable auto-upgrading:</source>
          <target state="translated">如果你运行的是通用的操作系统,VMware工具通常可以自己自动升级。该设置默认为禁用。下面的Vagrantfile设置可以启用自动升级。</target>
        </trans-unit>
        <trans-unit id="98918ea8d1c29e8ea562b881c227ce226b791ac0" translate="yes" xml:space="preserve">
          <source>If you are upgrading from Vagrant 1.0.x, please read the &lt;a href=&quot;upgrading-from-1-0&quot;&gt;specific page dedicated to that&lt;/a&gt;. This page covers upgrading Vagrant in general during the 1.x series.</source>
          <target state="translated">如果您要从Vagrant 1.0.x升级，请阅读&lt;a href=&quot;upgrading-from-1-0&quot;&gt;专用于该页面&lt;/a&gt;的特定页面。此页面涵盖了在1.x系列中总体上升级Vagrant的过程。</target>
        </trans-unit>
        <trans-unit id="07a8df89c7b2d5ac2d583b64cbc4c3fcdd5716e7" translate="yes" xml:space="preserve">
          <source>If you are upgrading from the Vagrant VMware Workstation or Vagrant VMware Fusion plugins, please halt or destroy all VMware VMs currently being managed by Vagrant. Then continue with the instructions below.</source>
          <target state="translated">如果您要从Vagrant VMware Workstation或Vagrant VMware Fusion插件升级,请停止或销毁目前由Vagrant管理的所有VMware虚拟机。然后继续下面的说明。</target>
        </trans-unit>
        <trans-unit id="eb399afb3271307a57e2f7eb3959f0244b58e280" translate="yes" xml:space="preserve">
          <source>If you are using Puppet 4 or higher, you can provision using &lt;a href=&quot;https://docs.puppetlabs.com/puppet/latest/reference/environments.html&quot;&gt;Puppet Environments&lt;/a&gt; by specifying the name of the environment and the path on the local disk to the environment files:</source>
          <target state="translated">如果使用的是Puppet 4或更高版本，则可以通过指定&lt;a href=&quot;https://docs.puppetlabs.com/puppet/latest/reference/environments.html&quot;&gt;环境&lt;/a&gt;名称和本地磁盘上环境文件的路径来使用Puppet Environments进行配置：</target>
        </trans-unit>
        <trans-unit id="6c1943077a8b42834d5f1bba461b03e310694e7f" translate="yes" xml:space="preserve">
          <source>If you are using the Vagrant VirtualBox &lt;a href=&quot;../providers/index&quot;&gt;provider&lt;/a&gt;, then VirtualBox shared folders are the default synced folder type. These synced folders use the VirtualBox shared folder system to sync file changes from the guest to the host and vice versa.</source>
          <target state="translated">如果使用Vagrant VirtualBox &lt;a href=&quot;../providers/index&quot;&gt;提供程序&lt;/a&gt;，则VirtualBox共享文件夹是默认的同步文件夹类型。这些同步的文件夹使用VirtualBox共享文件夹系统将文件更改从来宾同步到主机，反之亦然。</target>
        </trans-unit>
        <trans-unit id="1960f265ca347f2b6fd99e745cda0d29f57f826e" translate="yes" xml:space="preserve">
          <source>If you are using the VirtualBox provider, you will also need to make sure you have a &lt;a href=&quot;../networking/private_network&quot;&gt;private network set up&lt;/a&gt;. This is due to a limitation of VirtualBox's built-in networking. With VMware, you do not need this.</source>
          <target state="translated">如果您使用的是VirtualBox提供程序，则还需要确保已建立&lt;a href=&quot;../networking/private_network&quot;&gt;专用网络&lt;/a&gt;。这是由于VirtualBox内置网络的限制。使用VMware，您不需要此功能。</target>
        </trans-unit>
        <trans-unit id="4a48f975b78a85e2e746ab7e08c5fe631e7f3ccf" translate="yes" xml:space="preserve">
          <source>If you are using the block format, you must specify it outside of the block, as shown below:</source>
          <target state="translated">如果你使用的是块格式,你必须在块外指定它,如下图所示。</target>
        </trans-unit>
        <trans-unit id="e1323092752b24b52f5c663e5d8d8bed60021364" translate="yes" xml:space="preserve">
          <source>If you change or move your Vagrantfile, the &lt;code&gt;rsync-auto&lt;/code&gt; command will have to be restarted. For example, if you add synced folders to the Vagrantfile, or move the directory that contains the Vagrantfile, the &lt;code&gt;rsync-auto&lt;/code&gt; command will either not pick up the changes or may begin experiencing strange behavior.</source>
          <target state="translated">如果更改或移动Vagrantfile，则必须重新启动 &lt;code&gt;rsync-auto&lt;/code&gt; 命令。例如，如果您将同步的文件夹添加到Vagrantfile，或移动包含Vagrantfile的目录，则 &lt;code&gt;rsync-auto&lt;/code&gt; 命令将不接收更改或可能开始出现奇怪的行为。</target>
        </trans-unit>
        <trans-unit id="f47b0d6246fcbcbe0400eb39d469031b96bc7d4b" translate="yes" xml:space="preserve">
          <source>If you define provisioners at multiple &quot;scope&quot; levels (such as globally in the configuration block, then in a &lt;a href=&quot;../multi-machine/index&quot;&gt;multi-machine&lt;/a&gt; definition, then maybe in a &lt;a href=&quot;../providers/configuration&quot;&gt;provider-specific override&lt;/a&gt;), then the outer scopes will always run &lt;em&gt;before&lt;/em&gt; any inner scopes. For example, in the Vagrantfile below:</source>
          <target state="translated">如果您在多个&amp;ldquo;作用域&amp;rdquo;级别（例如，在配置块中全局定义，然后在&lt;a href=&quot;../multi-machine/index&quot;&gt;多计算机&lt;/a&gt;定义中，然后在&lt;a href=&quot;../providers/configuration&quot;&gt;提供程序特定的override中&lt;/a&gt;）定义配置程序，则外部作用域将始终&lt;em&gt;在&lt;/em&gt;任何内部作用域&lt;em&gt;之前&lt;/em&gt;运行。例如，在下面的Vagrantfile中：</target>
        </trans-unit>
        <trans-unit id="13bdd40ee0b2a0a6b9129fe303960b83f78d36a9" translate="yes" xml:space="preserve">
          <source>If you did not install a Desktop environment when you installed the operating system, as recommended to reduce size, the install of the VirtualBox additions should warn you about the lack of OpenGL or Window System Drivers, but you can safely ignore this.</source>
          <target state="translated">如果你在安装操作系统时没有按照建议安装桌面环境,以减小体积,那么安装VirtualBox附加组件时应该警告你缺少OpenGL或Window系统驱动程序,但你可以放心地忽略这一点。</target>
        </trans-unit>
        <trans-unit id="93ce1849f3631a11c2c7fbfdc2a147afe9a38142" translate="yes" xml:space="preserve">
          <source>If you do not specify it or set it to &lt;code&gt;false&lt;/code&gt;, you must explicitly delete these entries from the Chef Server before you provision a new one with Chef Server. For example, using Chef's built-in &lt;code&gt;knife&lt;/code&gt; tool:</source>
          <target state="translated">如果您未指定它或将其设置为 &lt;code&gt;false&lt;/code&gt; ，则必须在Chef Server中显式删除这些条目，然后再使用Chef Server设置新条目。例如，使用Chef的内置 &lt;code&gt;knife&lt;/code&gt; 工具：</target>
        </trans-unit>
        <trans-unit id="1ba97b1395fd8602e8423deffc2bd1d4aed0871f" translate="yes" xml:space="preserve">
          <source>If you do not want backward compatibility and want to force users to support linked cloning, you can use &lt;code&gt;Vagrant.require_version&lt;/code&gt; with 1.8.</source>
          <target state="translated">如果您不希望向后兼容，并且希望强制用户支持链接克隆，则可以将 &lt;code&gt;Vagrant.require_version&lt;/code&gt; 与1.8 一起使用。</target>
        </trans-unit>
        <trans-unit id="81661fb672342ba294877495c0a1988c1ca1a6a6" translate="yes" xml:space="preserve">
          <source>If you do not want to specify the full path to Vagrant (i.e. you just want to run &lt;code&gt;vagrant&lt;/code&gt;), you can create a symbolic link to your exec:</source>
          <target state="translated">如果您不想指定Vagrant的完整路径（即，您只想运行 &lt;code&gt;vagrant&lt;/code&gt; ），则可以创建指向您的exec的符号链接：</target>
        </trans-unit>
        <trans-unit id="cb51cb7b79c0466a4e2fee379f7affd739c0b9c1" translate="yes" xml:space="preserve">
          <source>If you do not want to type your password on every &lt;code&gt;vagrant up&lt;/code&gt;, Vagrant uses thoughtfully crafted commands to make fine-grained sudoers modifications possible to avoid entering your password.</source>
          <target state="translated">如果您不想在每个 &lt;code&gt;vagrant up&lt;/code&gt; 都输入密码，Vagrant会使用精心设计的命令来进行细粒度的sudoers修改，以避免输入密码。</target>
        </trans-unit>
        <trans-unit id="34853782179746fa1cba587e5b373405d2874b3b" translate="yes" xml:space="preserve">
          <source>If you don't want to edit &lt;code&gt;/etc/sudoers&lt;/code&gt; directly, you can create &lt;code&gt;/etc/sudoers.d/vagrant-syncedfolders&lt;/code&gt; with the appropriate entries, assuming &lt;code&gt;/etc/sudoers.d&lt;/code&gt; has been enabled.</source>
          <target state="translated">如果您不想直接编辑 &lt;code&gt;/etc/sudoers&lt;/code&gt; ，则可以假定已启用 &lt;code&gt;/etc/sudoers.d&lt;/code&gt; ，并使用适当的条目创建 &lt;code&gt;/etc/sudoers.d/vagrant-syncedfolders&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="becdfd93c82f1cba64d69ad12670c6236bc1b1b0" translate="yes" xml:space="preserve">
          <source>If you fail to do so, you will get the following error when Vagrant tries to provision the machine with Chef Client:</source>
          <target state="translated">如果您没有这样做,当Vagrant试图用Chef Client配置机器时,您会得到以下错误。</target>
        </trans-unit>
        <trans-unit id="8a238db16b4d4352c78fcadc015536fd1fb1a98e" translate="yes" xml:space="preserve">
          <source>If you have any issues purchasing, installing, or using the Vagrant VMware plugins, please &lt;a href=&quot;mailto:support@hashicorp.com&quot;&gt;contact support&lt;/a&gt;. To expedite the support process, please include the &lt;a href=&quot;../other/debugging&quot;&gt;Vagrant debug output&lt;/a&gt; as a Gist if applicable. This will help us more quickly diagnose your issue.</source>
          <target state="translated">如果您在购买，安装或使用Vagrant VMware插件时遇到任何问题，请&lt;a href=&quot;mailto:support@hashicorp.com&quot;&gt;联系支持&lt;/a&gt;。为了加快支持过程，请在适当时将&lt;a href=&quot;../other/debugging&quot;&gt;Vagrant调试输出&lt;/a&gt;作为要点包括在内。这将帮助我们更快地诊断您的问题。</target>
        </trans-unit>
        <trans-unit id="23762b7bea8be53f595ec7392dfd0f6238967a5f" translate="yes" xml:space="preserve">
          <source>If you have some policy or other files that you want to install by default on a VM, you can use the &lt;code&gt;files_path&lt;/code&gt; attribute:</source>
          <target state="translated">如果您有默认要在VM上安装的某些策略或其他文件，则可以使用 &lt;code&gt;files_path&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="08d1218b213a6fa2e76108843edbd8bdf1b61fd0" translate="yes" xml:space="preserve">
          <source>If you just upgraded from a previous version of Vagrant, existing environments will not show up in global-status until they are destroyed and recreated.</source>
          <target state="translated">如果您刚刚从以前的Vagrant版本升级,现有的环境将不会显示在全局状态中,直到他们被破坏和重新创建。</target>
        </trans-unit>
        <trans-unit id="abb898527eb59a82051fb5b7f6d3be6b9014f501" translate="yes" xml:space="preserve">
          <source>If you just want to check if there are updates available, use the &lt;code&gt;vagrant box outdated&lt;/code&gt; command.</source>
          <target state="translated">如果您只想检查是否有可用的更新，请使用 &lt;code&gt;vagrant box outdated&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="23fb1e0293166de38f89aff7ecd76044de6df665" translate="yes" xml:space="preserve">
          <source>If you made a box for some other provider, be sure to specify the &lt;code&gt;--provider&lt;/code&gt; option to &lt;code&gt;vagrant up&lt;/code&gt;. If the up succeeded, then your box worked!</source>
          <target state="translated">如果你做一些其他的提供商中，一定要指定 &lt;code&gt;--provider&lt;/code&gt; 选项来 &lt;code&gt;vagrant up&lt;/code&gt; 。如果成功完成，则说明您的工作正常！</target>
        </trans-unit>
        <trans-unit id="7280ca3343488737a02fb9bb8c0ed7b54715bbb8" translate="yes" xml:space="preserve">
          <source>If you really need to use this connection mode though, it is possible to enable paramiko as illustrated in the following configuration examples:</source>
          <target state="translated">不过,如果你真的需要使用这种连接模式,可以启用paramiko,如下面的配置示例所示。</target>
        </trans-unit>
        <trans-unit id="8ff5bd9e8b30953b0e5c2638aa99bad2f4ad0d45" translate="yes" xml:space="preserve">
          <source>If you run &lt;code&gt;rake -T&lt;/code&gt; now, which lists all the available rake tasks, you should see that you have the &lt;code&gt;package&lt;/code&gt; and &lt;code&gt;release&lt;/code&gt; tasks. You can now develop your plugin and build it!</source>
          <target state="translated">如果立即运行 &lt;code&gt;rake -T&lt;/code&gt; ，其中列出了所有可用的rake任务，则应该看到您具有 &lt;code&gt;package&lt;/code&gt; 和 &lt;code&gt;release&lt;/code&gt; 任务。您现在可以开发并构建插件！</target>
        </trans-unit>
        <trans-unit id="c0f75a207e168088170161d806ed96748fff1d86" translate="yes" xml:space="preserve">
          <source>If you run &lt;code&gt;vagrant init&lt;/code&gt; today, the Vagrantfile will be in roughly the following format:</source>
          <target state="translated">如果您今天运行 &lt;code&gt;vagrant init&lt;/code&gt; ，则Vagrantfile的格式大致如下：</target>
        </trans-unit>
        <trans-unit id="d78cf310ec97591e9bcef6e1b5b4c855a48095b3" translate="yes" xml:space="preserve">
          <source>If you run &lt;code&gt;vagrant&lt;/code&gt; by itself, help will be displayed showing all available subcommands. In addition to this, you can run any Vagrant command with the &lt;code&gt;-h&lt;/code&gt; flag to output help about that specific command. For example, try running &lt;code&gt;vagrant init -h&lt;/code&gt;. The help will output a one sentence synopsis of what the command does as well as a list of all the flags the command accepts.</source>
          <target state="translated">如果您自己运行 &lt;code&gt;vagrant&lt;/code&gt; ，将显示帮助，显示所有可用的子命令。除此之外，您还可以运行带有 &lt;code&gt;-h&lt;/code&gt; 标志的任何Vagrant命令，以输出有关该特定命令的帮助。例如，尝试运行 &lt;code&gt;vagrant init -h&lt;/code&gt; 。帮助将输出该命令执行情况的一句话摘要以及该命令接受的所有标志的列表。</target>
        </trans-unit>
        <trans-unit id="3f5f5fc98bcbf81f085ed001918a9cbbfd5958c1" translate="yes" xml:space="preserve">
          <source>If you specified a &lt;code&gt;--provider&lt;/code&gt; flag, you only need to do this for the &lt;code&gt;up&lt;/code&gt; command. Once a machine is up and running, Vagrant is able to see what provider is backing a running machine, so commands such as &lt;code&gt;destroy&lt;/code&gt;, &lt;code&gt;suspend&lt;/code&gt;, etc. do not need to be told what provider to use.</source>
          <target state="translated">如果指定了 &lt;code&gt;--provider&lt;/code&gt; 标志，则只需要对 &lt;code&gt;up&lt;/code&gt; 命令执行此操作。一旦机器启动并运行，Vagrant就能看到哪个提供程序正在支持正在运行的机器，因此不需要告知诸如 &lt;code&gt;destroy&lt;/code&gt; ， &lt;code&gt;suspend&lt;/code&gt; 等命令。</target>
        </trans-unit>
        <trans-unit id="f8c1b2c05e5572cd002bf9b54d9531b4df92a0d0" translate="yes" xml:space="preserve">
          <source>If you use a remote script as part of your provisioning process, you can pass in its URL as the &lt;code&gt;path&lt;/code&gt; argument as well:</source>
          <target state="translated">如果在配置过程中使用远程脚本，则也可以将其URL作为 &lt;code&gt;path&lt;/code&gt; 参数传递：</target>
        </trans-unit>
        <trans-unit id="d72bffa4d2742d72f5fb762f31f2b5b4699585ea" translate="yes" xml:space="preserve">
          <source>If you use any Vagrant 1.0.x plugins, you must remove references to these from your Vagrantfile prior to upgrading. Vagrant 1.1+ introduces a new plugin format that will protect against this sort of incompatibility from ever happening again.</source>
          <target state="translated">如果您使用任何Vagrant 1.0.x插件,您必须在升级前从您的Vagrant文件中删除这些引用。Vagrant 1.1+引入了一种新的插件格式,可以防止这种不兼容的情况再次发生。</target>
        </trans-unit>
        <trans-unit id="f0976db38e607bbe9389a8225915d1cefc987807" translate="yes" xml:space="preserve">
          <source>If you use other HashiCorp tools like Packer and would prefer to configure this setting only once, you can set &lt;code&gt;CHECKPOINT_DISABLE&lt;/code&gt; instead.</source>
          <target state="translated">如果使用Packer等其他HashiCorp工具，并且只希望配置一次此设置，则可以设置 &lt;code&gt;CHECKPOINT_DISABLE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f7c9ec49f025f888c5a4497c708225925a626c13" translate="yes" xml:space="preserve">
          <source>If you want to add or remove specific keys from the VMX file, you can do that:</source>
          <target state="translated">如果你想从VMX文件中添加或删除特定的键,你可以这样做。</target>
        </trans-unit>
        <trans-unit id="35306840118ee061c81ee6a71355de686c192839" translate="yes" xml:space="preserve">
          <source>If you want to apply a slightly different configuration to many multi-machine machines, you can use a loop to do this. For example, if you wanted to create three machines:</source>
          <target state="translated">如果你想对多台机器应用稍微不同的配置,你可以使用循环来实现。例如,如果你想创建三台机器。</target>
        </trans-unit>
        <trans-unit id="0c3316f1d8fedc9b678089ea52a4adbd53d06771" translate="yes" xml:space="preserve">
          <source>If you want to apply a slightly different configuration to multiple machines, see &lt;a href=&quot;../vagrantfile/tips#loop-over-vm-definitions&quot;&gt;this tip&lt;/a&gt;.</source>
          <target state="translated">如果要对多台计算机应用稍有不同的配置，请参阅&lt;a href=&quot;../vagrantfile/tips#loop-over-vm-definitions&quot;&gt;此技巧&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c9228ebee253a82697073032b4483cb748564726" translate="yes" xml:space="preserve">
          <source>If you want to apply a slightly different configuration to multiple machines, see &lt;a href=&quot;vagrantfile/tips#loop-over-vm-definitions&quot;&gt;this tip&lt;/a&gt;.</source>
          <target state="translated">如果要对多台计算机应用稍有不同的配置，请参阅&lt;a href=&quot;vagrantfile/tips#loop-over-vm-definitions&quot;&gt;此技巧&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="96caa180b7355159d78cb2225efd04543aad41c3" translate="yes" xml:space="preserve">
          <source>If you want to disable the creation of the publicly accessible endpoint, run &lt;code&gt;vagrant share&lt;/code&gt; with the &lt;code&gt;--disable-http&lt;/code&gt; flag. This will share your environment using one of the other methods available, and will not create the URL endpoint.</source>
          <target state="translated">如果要禁用可公共访问的端点的创建，请使用 &lt;code&gt;--disable-http&lt;/code&gt; 标志运行 &lt;code&gt;vagrant share&lt;/code&gt; 。这将使用其他可用方法之一共享您的环境，并且不会创建URL端点。</target>
        </trans-unit>
        <trans-unit id="1f766ead5b208a198c0a05f9e45c4cb82bcf0eee" translate="yes" xml:space="preserve">
          <source>If you want to have &lt;a href=&quot;https://example.com/install.sh&quot;&gt;https://example.com/install.sh&lt;/a&gt; as Omnibus script for your Linux/Unix installations, you should set this option to &lt;a href=&quot;https://example.com&quot;&gt;https://example.com&lt;/a&gt;</source>
          <target state="translated">如果要将&lt;a href=&quot;https://example.com/install.sh&quot;&gt;https://example.com/install.sh&lt;/a&gt;作为Linux / Unix安装的Omnibus脚本，则应将此选项设置为&lt;a href=&quot;https://example.com&quot;&gt;https://example.com&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45dcce38722b1b108a9fa01f10121a148a4e5a9a" translate="yes" xml:space="preserve">
          <source>If you want to manually configure the network interface yourself, you can disable Vagrant's auto-configure feature by specifying &lt;code&gt;auto_config&lt;/code&gt;:</source>
          <target state="translated">如果要自己手动配置网络接口，可以通过指定 &lt;code&gt;auto_config&lt;/code&gt; 禁用Vagrant的自动配置功能：</target>
        </trans-unit>
        <trans-unit id="16e7a2d4f6432749c50ad7dbdf52e4d22aea84c3" translate="yes" xml:space="preserve">
          <source>If you want to manually configure the network interface yourself, you can disable auto-configuration by specifying &lt;code&gt;auto_config&lt;/code&gt;:</source>
          <target state="translated">如果要自己手动配置网络接口，可以通过指定 &lt;code&gt;auto_config&lt;/code&gt; 禁用自动配置：</target>
        </trans-unit>
        <trans-unit id="035c530ef7a120afeea7404442b54780b379acb1" translate="yes" xml:space="preserve">
          <source>If you want to preserve the original ordering, you can specify the &lt;code&gt;preserve_order: true&lt;/code&gt; flag:</source>
          <target state="translated">如果要保留原始顺序，则可以指定 &lt;code&gt;preserve_order: true&lt;/code&gt; 标志：</target>
        </trans-unit>
        <trans-unit id="bb4ec134f442c0e3ef97f6cb6defaa8124814824" translate="yes" xml:space="preserve">
          <source>If you want to run a standalone file, you can specify the &lt;code&gt;run_file&lt;/code&gt; parameter. The file will be copied to the VM and executed on its own using &lt;code&gt;cf-agent&lt;/code&gt;. Note that the file needs to be a standalone policy, including its own &lt;a href=&quot;https://cfengine.com/docs/3.5/reference-components.html#common-control&quot;&gt;&lt;code&gt;body common control&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果要运行独立文件，则可以指定 &lt;code&gt;run_file&lt;/code&gt; 参数。该文件将被复制到VM并使用 &lt;code&gt;cf-agent&lt;/code&gt; 单独执行。请注意，该文件必须是独立策略，包括其自身的&lt;a href=&quot;https://cfengine.com/docs/3.5/reference-components.html#common-control&quot;&gt; &lt;code&gt;body common control&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="80eb9cb5acbae5a32279e53c02a58a79657a346f" translate="yes" xml:space="preserve">
          <source>If you want to upload a folder to your guest system, it can be accomplished by using a file provisioner seen below. When copied, the resulting folder on the guest will replace &lt;code&gt;folder&lt;/code&gt; as &lt;code&gt;newfolder&lt;/code&gt; and place its on the guest machine. Note that if you'd like the same folder name on your guest machine, make sure that the destination path has the same name as the folder on your host.</source>
          <target state="translated">如果要将文件夹上载到来宾系统，可以使用下面显示的文件配置器来完成。复制后，guest &lt;code&gt;newfolder&lt;/code&gt; 机上的结果文件夹将替换为newfolder的 &lt;code&gt;folder&lt;/code&gt; ，并将其放在guest 虚拟机上。请注意，如果您想要在来宾计算机上使用相同的文件夹名称，请确保目标路径与主机上的文件夹具有相同的名称。</target>
        </trans-unit>
        <trans-unit id="6baa5265aa1d7f0cd58c139b3767833c68940d92" translate="yes" xml:space="preserve">
          <source>If you want, you can mix and match multiple configuration versions in the same Vagrantfile. This is useful if you found some useful configuration snippet or something that you want to use. Example:</source>
          <target state="translated">如果您愿意,您可以在同一个Vagrant文件中混合和匹配多个配置版本。如果您发现一些有用的配置片段或您想使用的东西,这很有用。例如</target>
        </trans-unit>
        <trans-unit id="0e1b7a7fa90b4cac28e56b78983f5b59e34de43e" translate="yes" xml:space="preserve">
          <source>If you wish to use VirtualBox on Windows, you must ensure that Hyper-V is not enabled on Windows. You can turn off the feature by running this Powershell command:</source>
          <target state="translated">如果您希望在Windows上使用VirtualBox,您必须确保在Windows上没有启用Hyper-V。您可以通过运行此Powershell命令来关闭该功能。</target>
        </trans-unit>
        <trans-unit id="14b24a3460fb82d9847213919672e9fddd6ae5bb" translate="yes" xml:space="preserve">
          <source>If you've never used a configuration management system before, it is recommended you start with basic &lt;a href=&quot;provisioning/shell&quot;&gt;shell scripts&lt;/a&gt; for provisioning.</source>
          <target state="translated">如果您以前从未使用过配置管理系统，建议您从基本的&lt;a href=&quot;provisioning/shell&quot;&gt;Shell脚本&lt;/a&gt;开始进行配置。</target>
        </trans-unit>
        <trans-unit id="658e049ff5e6d1ce65c0735c832ce0ed219e99be" translate="yes" xml:space="preserve">
          <source>If you've never used a configuration management system before, it is recommended you start with basic &lt;a href=&quot;shell&quot;&gt;shell scripts&lt;/a&gt; for provisioning.</source>
          <target state="translated">如果您以前从未使用过配置管理系统，建议您从基本的&lt;a href=&quot;shell&quot;&gt;Shell脚本&lt;/a&gt;开始进行配置。</target>
        </trans-unit>
        <trans-unit id="f46b2afe76b99f063395b5d042445e65da4fdb65" translate="yes" xml:space="preserve">
          <source>If your environment is not showing up, you may have to do a &lt;code&gt;vagrant destroy&lt;/code&gt; followed by a &lt;code&gt;vagrant up&lt;/code&gt;.</source>
          <target state="translated">如果您的环境没有出现，则可能必须先进行 &lt;code&gt;vagrant destroy&lt;/code&gt; 然后进行 &lt;code&gt;vagrant up&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8781d615fd77be9578225c40ac67b9471394cced" translate="yes" xml:space="preserve">
          <source>Implementation</source>
          <target state="translated">Implementation</target>
        </trans-unit>
        <trans-unit id="de55a71c28bb75cdf5fa86242e091d8ba7044775" translate="yes" xml:space="preserve">
          <source>Implementations of commands should subclass &lt;code&gt;Vagrant.plugin(2, :command)&lt;/code&gt;, which is a Vagrant method that will return the proper superclass for a version 2 command. The implementation itself is quite simple, since the class needs to only implement a single method: &lt;code&gt;execute&lt;/code&gt;. Example:</source>
          <target state="translated">命令的实现应子类 &lt;code&gt;Vagrant.plugin(2, :command)&lt;/code&gt; ，这是一个Vagrant方法，它将为版本2命令返回正确的超类。实现本身非常简单，因为类只需要实现一个方法即可： &lt;code&gt;execute&lt;/code&gt; 。例：</target>
        </trans-unit>
        <trans-unit id="f91fe8a08e03d3cf30e03fd0893b721673f5e7bb" translate="yes" xml:space="preserve">
          <source>Implementations of configuration keys should subclass &lt;code&gt;Vagrant.plugin(2, :config)&lt;/code&gt;, which is a Vagrant method that will return the proper subclass for a version 2 configuration section. The implementation is very simple, and acts mostly as a plain Ruby object. Here is an example:</source>
          <target state="translated">配置密钥的实现应子类 &lt;code&gt;Vagrant.plugin(2, :config)&lt;/code&gt; ，这是一个Vagrant方法，它将为版本2配置节返回正确的子类。实现非常简单，并且主要充当普通的Ruby对象。这是一个例子：</target>
        </trans-unit>
        <trans-unit id="6ea5217781a1e478018e2b2604bba26807c0c464" translate="yes" xml:space="preserve">
          <source>Implementations of guests subclass &lt;code&gt;Vagrant.plugin(&quot;2&quot;, &quot;guest&quot;)&lt;/code&gt;. Within this implementation, only the &lt;code&gt;detect?&lt;/code&gt; method needs to be implemented.</source>
          <target state="translated">guest &lt;code&gt;Vagrant.plugin(&quot;2&quot;, &quot;guest&quot;)&lt;/code&gt; 类Vagrant.plugin（&amp;ldquo; 2&amp;rdquo;，&amp;ldquo; guest&amp;rdquo;）的实现。在此实现中，仅 &lt;code&gt;detect?&lt;/code&gt; 该方法需要实现。</target>
        </trans-unit>
        <trans-unit id="f98fffcc6469eeb202ebe90d7deaf93ebd1179d3" translate="yes" xml:space="preserve">
          <source>Implementations of hosts subclass &lt;code&gt;Vagrant.plugin(&quot;2&quot;, &quot;host&quot;)&lt;/code&gt;. Within this implementation, only the &lt;code&gt;detect?&lt;/code&gt; method needs to be implemented.</source>
          <target state="translated">主机子类 &lt;code&gt;Vagrant.plugin(&quot;2&quot;, &quot;host&quot;)&lt;/code&gt; 。在此实现中，仅 &lt;code&gt;detect?&lt;/code&gt; 该方法需要实现。</target>
        </trans-unit>
        <trans-unit id="6b51fca94f133d6cf87edb364b9383f70da7b331" translate="yes" xml:space="preserve">
          <source>Implementations should be classes or modules that have a method with the same name as the capability. The method must be immediately accessible on the class returned from the &lt;code&gt;guest_capability&lt;/code&gt; component, meaning that if it is an instance method, an instance should be returned.</source>
          <target state="translated">实现应为类或模块，其类或方法的名称应与功能相同。该方法必须在从 &lt;code&gt;guest_capability&lt;/code&gt; 组件返回的类上可立即访问，这意味着，如果它是一个实例方法，则应返回一个实例。</target>
        </trans-unit>
        <trans-unit id="b150f21e99d42623354868df823535a336d739e4" translate="yes" xml:space="preserve">
          <source>In Apache:</source>
          <target state="translated">在Apache中。</target>
        </trans-unit>
        <trans-unit id="b35503ce6115c6b2a019190e9418019fe4a806ce" translate="yes" xml:space="preserve">
          <source>In Nginx:</source>
          <target state="translated">在Nginx中。</target>
        </trans-unit>
        <trans-unit id="9c48feb50221e425fddba78a16379f8d6c3fc22b" translate="yes" xml:space="preserve">
          <source>In a multi-machine Vagrantfile, the name of the machine must be specified:</source>
          <target state="translated">在一个多机器的Vagrantfile中,必须指定机器的名称。</target>
        </trans-unit>
        <trans-unit id="4114f78f26313807ed2b52500eb9e5d2c4a46913" translate="yes" xml:space="preserve">
          <source>In a nutshell, aliases are defined using a standard &lt;code&gt;key = value&lt;/code&gt; format, where the &lt;code&gt;key&lt;/code&gt; is the new Vagrant command, and the &lt;code&gt;value&lt;/code&gt; is the aliased command. Using this format, there are two types of aliases that can be defined: internal and external aliases.</source>
          <target state="translated">简而言之，别名是使用标准的 &lt;code&gt;key = value&lt;/code&gt; 格式定义的，其中 &lt;code&gt;key&lt;/code&gt; 是新的Vagrant命令，而 &lt;code&gt;value&lt;/code&gt; 是别名的命令。使用这种格式，可以定义两种类型的别名：内部和外部别名。</target>
        </trans-unit>
        <trans-unit id="4a26827692100ebbce1872cd7abb6d7d8bd0f9da" translate="yes" xml:space="preserve">
          <source>In addition to all the options listed above, the Chef Apply provisioner supports the &lt;a href=&quot;chef_common&quot;&gt;common options for all Chef provisioners&lt;/a&gt;.</source>
          <target state="translated">除了上面列出的所有选项之外，Chef Apply预配器还支持&lt;a href=&quot;chef_common&quot;&gt;所有Chef预配器&lt;/a&gt;的通用选项。</target>
        </trans-unit>
        <trans-unit id="a8a2d0af1900e524ad72f0e75bbf6f7392180633" translate="yes" xml:space="preserve">
          <source>In addition to all the options listed above, the Chef Client provisioner supports the &lt;a href=&quot;chef_common&quot;&gt;common options for all Chef provisioners&lt;/a&gt;.</source>
          <target state="translated">除了上面列出的所有选项之外，Chef客户预配器还支持&lt;a href=&quot;chef_common&quot;&gt;所有Chef预配器&lt;/a&gt;的通用选项。</target>
        </trans-unit>
        <trans-unit id="9fecfa841b9b959212f685b7667a9ff92fe13ff2" translate="yes" xml:space="preserve">
          <source>In addition to all the options listed above, the Chef Solo provisioner supports the &lt;a href=&quot;chef_common&quot;&gt;common options for all Chef provisioners&lt;/a&gt;.</source>
          <target state="translated">除了上面列出的所有选项之外，Chef Solo设置员还支持&lt;a href=&quot;chef_common&quot;&gt;所有Chef设置员&lt;/a&gt;的常用选项。</target>
        </trans-unit>
        <trans-unit id="a8fee9448df4995a6b82332c1d43ee71b545dd01" translate="yes" xml:space="preserve">
          <source>In addition to all the options listed above, the Chef Zero provisioner supports the &lt;a href=&quot;chef_common&quot;&gt;common options for all Chef provisioners&lt;/a&gt;.</source>
          <target state="translated">除了上面列出的所有选项之外，Chef Zero供应商还支持&lt;a href=&quot;chef_common&quot;&gt;所有Chef供应商&lt;/a&gt;的通用选项。</target>
        </trans-unit>
        <trans-unit id="007cdee374ed7d6f9ff8bde8d7675fef51968825" translate="yes" xml:space="preserve">
          <source>In addition to disabling UAC in the control panel, you also must disable UAC in the registry. This may vary from Windows version to Windows version, but Windows 8/8.1 use the command below. This will allow some things like automated Puppet installs to work within Vagrant Windows base boxes.</source>
          <target state="translated">除了在控制面板中禁用UAC,你还必须在注册表中禁用UAC。这可能会因Windows版本而异,但Windows 8/8.1使用以下命令。这将允许一些事情,如自动Puppet安装在Vagrant Windows基础箱中工作。</target>
        </trans-unit>
        <trans-unit id="188e36f7fb35ed24bc50c559a6919dc62442fafe" translate="yes" xml:space="preserve">
          <source>In addition to pulling images, the Docker provisioner can run and start containers for you. This lets you automatically start services as part of &lt;code&gt;vagrant up&lt;/code&gt;.</source>
          <target state="translated">除了拉取映像外，Docker供应器还可以为您运行和启动容器。这样，您就可以在 &lt;code&gt;vagrant up&lt;/code&gt; 自动启动服务。</target>
        </trans-unit>
        <trans-unit id="96b8d961014596413f6af6b88c2b02b65ddcf0e6" translate="yes" xml:space="preserve">
          <source>In addition to the commands listed in the sidebar and shown in &lt;code&gt;vagrant -h&lt;/code&gt;, Vagrant comes with some more commands that are hidden from basic help output. These commands are hidden because they're not useful to beginners or they're not commonly used. We call these commands &quot;non-primary subcommands&quot;.</source>
          <target state="translated">除了侧边栏中列出并显示在 &lt;code&gt;vagrant -h&lt;/code&gt; 中的命令之外，Vagrant还提供了一些其他命令，这些命令从基本帮助输出中隐藏。这些命令是隐藏的，因为它们对初学者没有帮助或不常用。我们称这些命令为&amp;ldquo;非主要子命令&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="1462acf2a10b660c831a938eb3bf6d9d7a4305f8" translate="yes" xml:space="preserve">
          <source>In addition to the files from exporting a VirtualBox VM, there is the &quot;metadata.json&quot; file used by Vagrant itself.</source>
          <target state="translated">除了导出VirtualBox虚拟机的文件外,还有Vagrant自己使用的 &quot;metadata.json &quot;文件。</target>
        </trans-unit>
        <trans-unit id="8d9c20533de18459ed25664e006925e45e8947a7" translate="yes" xml:space="preserve">
          <source>In addition to the name, the &lt;code&gt;run&lt;/code&gt; method accepts a set of options, all optional:</source>
          <target state="translated">除了名称之外， &lt;code&gt;run&lt;/code&gt; 方法还接受一组选项，所有选项都是可选的：</target>
        </trans-unit>
        <trans-unit id="85d4d3cb0e71bd83d381beeba06d8968cf0adbb1" translate="yes" xml:space="preserve">
          <source>In addition to the options specified above, it is possible for Vagrant to specify alternate NFS arguments when mounting the NFS share by using the &lt;code&gt;mount_options&lt;/code&gt; key. For example, to use the &lt;code&gt;actimeo=2&lt;/code&gt; client mount option:</source>
          <target state="translated">除了上述指定的选项外，Vagrant还可以在使用 &lt;code&gt;mount_options&lt;/code&gt; 键挂载NFS共享时指定备用NFS参数。例如，要使用 &lt;code&gt;actimeo=2&lt;/code&gt; 客户端安装选项：</target>
        </trans-unit>
        <trans-unit id="d0a8c0b6d4d962c5ce975c22926170655e1e2341" translate="yes" xml:space="preserve">
          <source>In addition to the options that can be set, various functions are available and can be called to configure other aspects of the Docker provisioner. Most of these functions have examples in more detailed sections below.</source>
          <target state="translated">除了可以设置的选项外,还有各种函数可用,可以调用这些函数来配置Docker供应器的其他方面。这些函数中的大多数在下面更详细的章节中有例子。</target>
        </trans-unit>
        <trans-unit id="ddfb6c726045d7288122b0615131ef85e2bed55c" translate="yes" xml:space="preserve">
          <source>In addition to the software that should be installed based on the &lt;a href=&quot;../boxes/base&quot;&gt;general guide to creating base boxes&lt;/a&gt;, Hyper-V base boxes require some additional software.</source>
          <target state="translated">除了应根据&lt;a href=&quot;../boxes/base&quot;&gt;创建基本盒&lt;/a&gt;的通用指南安装的软件之外，Hyper-V基本盒还需要一些其他软件。</target>
        </trans-unit>
        <trans-unit id="93dd5310b147c0523ff45f50bb84516180f4d779" translate="yes" xml:space="preserve">
          <source>In addition to the software that should be installed based on the &lt;a href=&quot;../boxes/base&quot;&gt;general guide to creating base boxes&lt;/a&gt;, VirtualBox base boxes require some additional software.</source>
          <target state="translated">除了应根据&lt;a href=&quot;../boxes/base&quot;&gt;创建基本框&lt;/a&gt;的一般指南安装的软件之外，VirtualBox基本框还需要一些其他软件。</target>
        </trans-unit>
        <trans-unit id="85eb094f2eb20a01b4032f68152566493e4bd878" translate="yes" xml:space="preserve">
          <source>In addition to these options, the specific synced folder type might allow more options. See the documentation for your specific synced folder type for more details. The built-in synced folder types are documented in other pages available in the navigation for these docs.</source>
          <target state="translated">除了这些选项之外,特定的同步文件夹类型可能允许更多的选项。请参阅特定同步文件夹类型的文档以了解更多细节。内置的同步文件夹类型在这些文档的导航中可用的其他页面中进行了说明。</target>
        </trans-unit>
        <trans-unit id="6aa497485be24a11611268b260d0728ffc31725c" translate="yes" xml:space="preserve">
          <source>In addition to these options, there are other features we've built to help:</source>
          <target state="translated">除了这些选项之外,我们还建立了其他功能来帮助。</target>
        </trans-unit>
        <trans-unit id="7894e78b01d8e59ec28b3fe3927e0083064325fe" translate="yes" xml:space="preserve">
          <source>In addition to this, each &lt;a href=&quot;../providers/index&quot;&gt;provider&lt;/a&gt; may require additional software. For example, if you are making a base box for VirtualBox, you will want to include the VirtualBox guest additions so that shared folders work properly. But if you are making an AWS base box, this is not required.</source>
          <target state="translated">除此之外，每个&lt;a href=&quot;../providers/index&quot;&gt;提供商&lt;/a&gt;可能还需要其他软件。例如，如果要为VirtualBox创建基本框，则将要包括VirtualBox来宾添加项，以便共享文件夹正常工作。但是，如果您要制作AWS基本框，则不需要这样做。</target>
        </trans-unit>
        <trans-unit id="d0b6c595417662f78bd3d05c8342776f94001469" translate="yes" xml:space="preserve">
          <source>In addition to this, feel free to install and configure any other software you want available by default for this base box.</source>
          <target state="translated">除此以外,还可以自由安装和配置任何其他你想要的默认可用的软件。</target>
        </trans-unit>
        <trans-unit id="861217abd4224f3d1ca090836001b500a9299d3b" translate="yes" xml:space="preserve">
          <source>In addition to this, you may put any data in the metadata as well as any files in the archive. Since Vagrant core itself does not care, it is up to your provider to handle the data of the box. Vagrant core just handles unpacking and verifying the box is for the proper provider.</source>
          <target state="translated">除此之外,您还可以在元数据中放入任何数据,以及存档中的任何文件。由于Vagrant core本身并不关心,所以由您的提供商来处理盒子的数据。Vagrant core只负责拆包,并确认盒子是由合适的提供商提供的。</target>
        </trans-unit>
        <trans-unit id="a8b7fd52c2bbb45bbddefe59ade0707ef722799c" translate="yes" xml:space="preserve">
          <source>In case you need to run multiple containers based off the same image, you can do so by providing different names and specifying the &lt;code&gt;image&lt;/code&gt; parameter to it:</source>
          <target state="translated">如果需要基于同一映像运行多个容器，可以通过提供不同的名称并为其指定 &lt;code&gt;image&lt;/code&gt; 参数来实现：</target>
        </trans-unit>
        <trans-unit id="becca00b6183b4d392feec8113877b6b696a529e" translate="yes" xml:space="preserve">
          <source>In depth documentation and use cases of various Vagrant commands is available by reading the appropriate sub-section available in the left navigational area of this site.</source>
          <target state="translated">各种Vagrant命令的深度文档和使用案例可通过阅读本网站左侧导航区的相应子栏目获得。</target>
        </trans-unit>
        <trans-unit id="125e127d54270944f3b745f8c5c86b7b0da158df" translate="yes" xml:space="preserve">
          <source>In fact, most of the core of Vagrant is &lt;a href=&quot;https://github.com/hashicorp/vagrant/tree/master/plugins&quot;&gt;implemented using plugins&lt;/a&gt;. Since Vagrant &lt;a href=&quot;https://en.wikipedia.org/wiki/Eating_your_own_dog_food&quot;&gt;dogfoods&lt;/a&gt; its own plugin API, you can be confident that the interface is stable and well supported.</source>
          <target state="translated">实际上，Vagrant的大多数核心都是&lt;a href=&quot;https://github.com/hashicorp/vagrant/tree/master/plugins&quot;&gt;使用plugins实现的&lt;/a&gt;。由于Vagrant &lt;a href=&quot;https://en.wikipedia.org/wiki/Eating_your_own_dog_food&quot;&gt;dogfoods&lt;/a&gt;拥有自己的插件API，因此您可以确信该接口稳定且受到良好支持。</target>
        </trans-unit>
        <trans-unit id="50b05753a35d0f0d874bbc2c7b166c39de532885" translate="yes" xml:space="preserve">
          <source>In general, class methods are used for capabilities. For example, here is the implementation for the capability above:</source>
          <target state="translated">一般来说,类方法是用于能力的。例如,这里是上述能力的实现。</target>
        </trans-unit>
        <trans-unit id="4925f03ac27c5fb9c012887373e58744e3bd1923" translate="yes" xml:space="preserve">
          <source>In general, however, you will not need a box with the Docker provider.</source>
          <target state="translated">不过,一般情况下,你不需要一个带有Docker提供者的盒子。</target>
        </trans-unit>
        <trans-unit id="351c43bb31c251ac1d50287d4765f096a451f845" translate="yes" xml:space="preserve">
          <source>In normal day-to-day usage, the &lt;code&gt;--provider&lt;/code&gt; flag is not necessary since Vagrant can usually pick the right provider for you. More details on how it does this is below.</source>
          <target state="translated">在正常的日常使用中，-- &lt;code&gt;--provider&lt;/code&gt; 标志不是必需的，因为Vagrant通常可以为您选择合适的提供程序。下面是有关如何执行此操作的更多详细信息。</target>
        </trans-unit>
        <trans-unit id="9b60a6d2f396eac85d4022972700efc4549f43ed" translate="yes" xml:space="preserve">
          <source>In order to access the Vagrant environment created, Vagrant exposes some high-level networking options for things such as forwarded ports, connecting to a public network, or creating a private network.</source>
          <target state="translated">为了访问所创建的Vagrant环境,Vagrant公开了一些高级网络选项,如转发端口,连接到一个公共网络,或创建一个私人网络。</target>
        </trans-unit>
        <trans-unit id="69c5cff806a4443a97c358fbd9825794bf8853fb" translate="yes" xml:space="preserve">
          <source>In order to determine the latest available Vagrant version, this command must make a network call. If you only want to see the currently installed version, use &lt;code&gt;vagrant --version&lt;/code&gt;.</source>
          <target state="translated">为了确定最新可用的Vagrant版本，此命令必须进行网络调用。如果只想查看当前安装的版本，请使用 &lt;code&gt;vagrant --version&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12a06c7393717c4b0c355cd189027835cd42ee24" translate="yes" xml:space="preserve">
          <source>In order to facilitate communication within machines in a multi-machine setup, the various &lt;a href=&quot;../networking/index&quot;&gt;networking&lt;/a&gt; options should be used. In particular, the &lt;a href=&quot;../networking/private_network&quot;&gt;private network&lt;/a&gt; can be used to make a private network between multiple machines and the host.</source>
          <target state="translated">为了促进多机设置中机器之间的通信，应使用各种&lt;a href=&quot;../networking/index&quot;&gt;联网&lt;/a&gt;选项。特别是，&lt;a href=&quot;../networking/private_network&quot;&gt;专用网络&lt;/a&gt;可用于在多台计算机和主机之间建立专用网络。</target>
        </trans-unit>
        <trans-unit id="e06130620ca3cd44ce9c923077bfbb0387d99b34" translate="yes" xml:space="preserve">
          <source>In order to facilitate communication within machines in a multi-machine setup, the various &lt;a href=&quot;networking/index&quot;&gt;networking&lt;/a&gt; options should be used. In particular, the &lt;a href=&quot;networking/private_network&quot;&gt;private network&lt;/a&gt; can be used to make a private network between multiple machines and the host.</source>
          <target state="translated">为了促进多机设置中机器之间的通信，应使用各种&lt;a href=&quot;networking/index&quot;&gt;联网&lt;/a&gt;选项。特别是，&lt;a href=&quot;networking/private_network&quot;&gt;专用网络&lt;/a&gt;可用于在多台计算机和主机之间建立专用网络。</target>
        </trans-unit>
        <trans-unit id="f5c3f9915202b4353e08df3c10e06b499b972e48" translate="yes" xml:space="preserve">
          <source>In order to keep SSH speedy even when your machine or the Vagrant machine is not connected to the internet, set the &lt;code&gt;UseDNS&lt;/code&gt; configuration to &lt;code&gt;no&lt;/code&gt; in the SSH server configuration.</source>
          <target state="translated">为了即使在您的计算机或Vagrant计算机未连接到Internet时也能保持SSH快速运行，请在SSH服务器配置中将 &lt;code&gt;UseDNS&lt;/code&gt; 配置设置为 &lt;code&gt;no&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="303e72aa0d99b94db4896a381840698a85ca0e45" translate="yes" xml:space="preserve">
          <source>In order to use your locally-installed version of Vagrant in other projects, you will need to create a binstub and add it to your path.</source>
          <target state="translated">为了在其他项目中使用您本地安装的Vagrant版本,您需要创建一个binstub并将其添加到您的路径中。</target>
        </trans-unit>
        <trans-unit id="4519d9da17a7c59fa3b98cb5a3c7741315bc4487" translate="yes" xml:space="preserve">
          <source>In particular, the command is actually:</source>
          <target state="translated">特别是,该命令实际上是。</target>
        </trans-unit>
        <trans-unit id="5075044ecafb5446349abffaa94f7fc62b779b2c" translate="yes" xml:space="preserve">
          <source>In some cases the default shared folder implementations (such as VirtualBox shared folders) have high performance penalties. If you are seeing less than ideal performance with synced folders, &lt;a href=&quot;https://en.wikipedia.org/wiki/Network_File_System_%28protocol%29&quot;&gt;NFS&lt;/a&gt; can offer a solution. Vagrant has built-in support to orchestrate the configuration of the NFS server on the host and guest for you.</source>
          <target state="translated">在某些情况下，默认的共享文件夹实现（例如VirtualBox共享文件夹）具有较高的性能损失。如果您发现同步文件夹的性能不理想，则&lt;a href=&quot;https://en.wikipedia.org/wiki/Network_File_System_%28protocol%29&quot;&gt;NFS&lt;/a&gt;可以提供解决方案。Vagrant具有内置支持，可以为您在主机和来宾上协调NFS服务器的配置。</target>
        </trans-unit>
        <trans-unit id="7308259f6b01d16c8b9b04a419c1f382b9f7984b" translate="yes" xml:space="preserve">
          <source>In some cases, these options are &lt;em&gt;too&lt;/em&gt; high-level, and you may want to more finely tune and configure the network interfaces of the underlying machine. Most providers expose &lt;a href=&quot;../providers/configuration&quot;&gt;provider-specific configuration&lt;/a&gt; to do this, so please read the documentation for your specific provider to see what options are available.</source>
          <target state="translated">在某些情况下，这些选项&lt;em&gt;太&lt;/em&gt;高级了，您可能希望更精细地调整和配置基础计算机的网络接口。大多数提供程序都&lt;a href=&quot;../providers/configuration&quot;&gt;提供特定&lt;/a&gt;于提供程序的配置来执行此操作，因此请阅读特定提供程序的文档以了解可用的选项。</target>
        </trans-unit>
        <trans-unit id="3f7f062937b79b2000fa35252aea5005a8482402" translate="yes" xml:space="preserve">
          <source>In such an arrangement, the &lt;code&gt;ansible.playbook&lt;/code&gt; path should be adjusted accordingly:</source>
          <target state="translated">在这种情况下，应相应调整 &lt;code&gt;ansible.playbook&lt;/code&gt; 路径：</target>
        </trans-unit>
        <trans-unit id="14e351a7a16857982f6a5ed2e123fd17987aa344" translate="yes" xml:space="preserve">
          <source>In the above case, Vagrant will use the &quot;precise64&quot; box by default, but will use &quot;precise64_fusion&quot; if the VMware Fusion provider is used.</source>
          <target state="translated">在上述情况下,Vagrant将默认使用 &quot;precision64 &quot;框,但如果使用VMware Fusion提供商,将使用 &quot;precision64_fusion&quot;。</target>
        </trans-unit>
        <trans-unit id="cda88e028afc18c83cc0e74013fffdbedb717d18" translate="yes" xml:space="preserve">
          <source>In the above, only &quot;bar&quot; will be echoed, because the inline setting overloaded the outer provisioner. This overload is only effective within that scope: the &quot;web&quot; VM. If there were another VM defined, it would still echo &quot;foo&quot; unless it itself also overloaded the provisioner.</source>
          <target state="translated">在上图中,只有 &quot;吧 &quot;会被呼应,因为内联设置超载了外部供应器。这种超载只在该范围内有效:&quot;web &quot;VM。如果有其他虚拟机被定义,它仍然会呼应 &quot;foo&quot;,除非它本身也超载了供应者。</target>
        </trans-unit>
        <trans-unit id="19c990a4e1f153c8a9031ce6dfcb4f451c06be36" translate="yes" xml:space="preserve">
          <source>In the case above, the Vagrantfile will only load if the version loading it is Vagrant 1.3.5 or greater.</source>
          <target state="translated">在上述情况下,只有当加载的版本是Vagrant 1.3.5或更高版本时,Vagrant文件才会加载。</target>
        </trans-unit>
        <trans-unit id="41976302d281e73917c4b37da018911cd3a7a52f" translate="yes" xml:space="preserve">
          <source>In the example above, the &quot;custom-key&quot; key will be set to &quot;value&quot; and the &quot;another-key&quot; key will be removed from the VMX file.</source>
          <target state="translated">在上面的例子中,&quot;custom-key &quot;键将被设置为 &quot;value&quot;,&quot;another-key &quot;键将从VMX文件中删除。</target>
        </trans-unit>
        <trans-unit id="5fbe92b978c963d9c568b7a3c39600527f61bea0" translate="yes" xml:space="preserve">
          <source>In the example above, the VM is modified to have a host CPU execution cap of 50%, meaning that no matter how much CPU is used in the VM, no more than 50% would be used on your own host machine. Some details:</source>
          <target state="translated">在上面的例子中,虚拟机被修改为主机CPU执行上限为50%,也就是说无论虚拟机使用多少CPU,在自己的主机上都不会超过50%。一些细节。</target>
        </trans-unit>
        <trans-unit id="49f723174e1ae5960dcb68dc4c92e6d5f554aba7" translate="yes" xml:space="preserve">
          <source>In the past, boxes were just &lt;a href=&quot;https://en.wikipedia.org/wiki/Tar_(computing)&quot;&gt;tar files&lt;/a&gt; of VirtualBox exports. With Vagrant supporting multiple &lt;a href=&quot;../providers/index&quot;&gt;providers&lt;/a&gt; and &lt;a href=&quot;versioning&quot;&gt;versioning&lt;/a&gt; now, box files are slightly more complicated.</source>
          <target state="translated">过去，盒子只是VirtualBox导出的&lt;a href=&quot;https://en.wikipedia.org/wiki/Tar_(computing)&quot;&gt;tar文件&lt;/a&gt;。随着Vagrant 现在支持多个&lt;a href=&quot;../providers/index&quot;&gt;提供程序&lt;/a&gt;和&lt;a href=&quot;versioning&quot;&gt;版本控制&lt;/a&gt;，Box文件会稍微复杂一些。</target>
        </trans-unit>
        <trans-unit id="7aef12dc9dd0d649682504858729da2f7626cc2c" translate="yes" xml:space="preserve">
          <source>In the process of creating and managing a machine, providers generally need to store some sort of state somewhere. Vagrant provides each machine with a directory to store this state.</source>
          <target state="translated">在创建和管理机器的过程中,提供者通常需要在某个地方存储某种状态。Vagrant为每台机器提供了一个目录来存储这种状态。</target>
        </trans-unit>
        <trans-unit id="78dd710ab58c86c81fa85763e88bc9dd73d26231" translate="yes" xml:space="preserve">
          <source>In this case, it asks for the machines in reverse order and calls the destroy action on each of them. If a user says &lt;code&gt;vagrant destroy foo&lt;/code&gt;, then the helper automatically only yields the &lt;code&gt;foo&lt;/code&gt; machine. If no parameter is given and it is a multi-machine environment, every machine in the environment is yielded, and so on. It just does the right thing.</source>
          <target state="translated">在这种情况下，它以相反的顺序请求机器，并在每台机器上调用destroy动作。如果用户说 &lt;code&gt;vagrant destroy foo&lt;/code&gt; ，则帮助程序仅自动产生 &lt;code&gt;foo&lt;/code&gt; 机器。如果没有给出任何参数，并且它是一个多计算机环境，那么环境中的每台计算机都会产生，依此类推。它只是做正确的事。</target>
        </trans-unit>
        <trans-unit id="19b8817c816690cf508935092eb90f55f0f9273a" translate="yes" xml:space="preserve">
          <source>In this case, run &lt;code&gt;vagrant reload&lt;/code&gt; and things will begin working again.</source>
          <target state="translated">在这种情况下，请运行 &lt;code&gt;vagrant reload&lt;/code&gt; ，一切将重新开始。</target>
        </trans-unit>
        <trans-unit id="f99cd1d7c40acc4a88ff1702c55fe54c14db570e" translate="yes" xml:space="preserve">
          <source>In this case, we ask that you please &lt;a href=&quot;https://github.com/hashicorp/vagrant/issues&quot;&gt;open an issue&lt;/a&gt; requesting that certain information become available. We will most likely add it!</source>
          <target state="translated">在这种情况下，我们请您&lt;a href=&quot;https://github.com/hashicorp/vagrant/issues&quot;&gt;打开一个问题，&lt;/a&gt;要求提供某些信息。我们很可能会添加它！</target>
        </trans-unit>
        <trans-unit id="3274f421dc7af320f297106696bacc7d85ac91a2" translate="yes" xml:space="preserve">
          <source>In this case, we did not use &lt;code&gt;UNSET_VALUE&lt;/code&gt; for widgets because we did not need that behavior. We default to 0 and always merge by summing the two widgets. Now, if we ran the example above that had the 3 configuration blocks, the final value of widgets would be &quot;3&quot;.</source>
          <target state="translated">在这种情况下，我们没有为小部件使用 &lt;code&gt;UNSET_VALUE&lt;/code&gt; ，因为我们不需要这种行为。我们默认为0，并且总是通过将两个小部件相加来合并。现在，如果我们运行上面带有3个配置块的示例，则小部件的最终值为&amp;ldquo; 3&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="2ad727e0635f07a9de3590092d0e3d14764e0773" translate="yes" xml:space="preserve">
          <source>In this case, we recommend changing or removing the insecure key from the Vagrant machine.</source>
          <target state="translated">在这种情况下,我们建议更换或删除Vagrant机器上的不安全密钥。</target>
        </trans-unit>
        <trans-unit id="c90bde7f908fafb4c54b7e377adf61070ee3dc24" translate="yes" xml:space="preserve">
          <source>In this example, the first network adapter that exists and can successfully be bridge will be used.</source>
          <target state="translated">在本例中,将使用第一个存在并能成功桥接的网络适配器。</target>
        </trans-unit>
        <trans-unit id="36f9075e46533edccdfc88224c8710e29dc0c51f" translate="yes" xml:space="preserve">
          <source>In this generic case, the triggers would fire in the order: 1 -&amp;gt; 2 -&amp;gt; 3 -&amp;gt; 4</source>
          <target state="translated">在这种情况下，触发器将按以下顺序触发：1-&amp;gt; 2-&amp;gt; 3-&amp;gt; 4</target>
        </trans-unit>
        <trans-unit id="08ced95e1b312e2ccadb809070caaf4fd0cc9117" translate="yes" xml:space="preserve">
          <source>In this scenario, the user must pass the name of the Vagrant Push to the subcommand:</source>
          <target state="translated">在这种情况下,用户必须将Vagrant Push的名称传递给子命令。</target>
        </trans-unit>
        <trans-unit id="9375c821c7a45374d890b92dcb3e4d34acb1e10b" translate="yes" xml:space="preserve">
          <source>Inheritance is not done via standard Ruby class inheritance because Vagrant uses a custom &lt;a href=&quot;guest-capabilities&quot;&gt;capability-based&lt;/a&gt; system. Vagrant handles inheritance dispatch for you.</source>
          <target state="translated">继承不是通过标准Ruby类继承来完成的，因为Vagrant使用基于自定义&lt;a href=&quot;guest-capabilities&quot;&gt;功能的&lt;/a&gt;系统。Vagrant为您处理继承调度。</target>
        </trans-unit>
        <trans-unit id="289154b285f43a2236264bffc21f62fdcc0a5b89" translate="yes" xml:space="preserve">
          <source>Inheritance is not done via standard Ruby class inheritance because Vagrant uses a custom &lt;a href=&quot;host-capabilities&quot;&gt;capability-based&lt;/a&gt; system. Vagrant handles inheritance dispatch for you.</source>
          <target state="translated">继承不是通过标准Ruby类继承来完成的，因为Vagrant使用基于自定义&lt;a href=&quot;host-capabilities&quot;&gt;功能的&lt;/a&gt;系统。Vagrant为您处理继承调度。</target>
        </trans-unit>
        <trans-unit id="19682bdb9185a5fa9d763d414d0443d3a0bc2456" translate="yes" xml:space="preserve">
          <source>Init</source>
          <target state="translated">Init</target>
        </trans-unit>
        <trans-unit id="4cb1013d7655be19b2c151eaa69de3f49269dd43" translate="yes" xml:space="preserve">
          <source>Inline Scripts</source>
          <target state="translated">内联脚本</target>
        </trans-unit>
        <trans-unit id="6629024a60d05342340d5cfc2f200bb4d383059a" translate="yes" xml:space="preserve">
          <source>Inspired in part by Git's own &lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Basics-Git-Aliases&quot;&gt;alias functionality&lt;/a&gt;, aliases make your Vagrant experience simpler, easier, and more familiar by allowing you to create your own custom Vagrant commands.</source>
          <target state="translated">&lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Basics-Git-Aliases&quot;&gt;别名&lt;/a&gt;部分受Git自己的别名功能的启发，通过允许您创建自己的自定义Vagrant命令，别名使您的Vagrant体验更加简单，轻松和熟悉。</target>
        </trans-unit>
        <trans-unit id="61695f8fda1011f8f6d23b1eec870ef8f873249a" translate="yes" xml:space="preserve">
          <source>Install Galaxy Roles in a path owned by root</source>
          <target state="translated">将Galaxy Roles安装在root拥有的路径中。</target>
        </trans-unit>
        <trans-unit id="39e6b5bb47d4b7c97106868d217774836877ed7e" translate="yes" xml:space="preserve">
          <source>Install Options</source>
          <target state="translated">安装选项</target>
        </trans-unit>
        <trans-unit id="deef52c209d94ab1ae7e1c1d8e71259c5cf9cff0" translate="yes" xml:space="preserve">
          <source>Install Ruby</source>
          <target state="translated">安装Ruby</target>
        </trans-unit>
        <trans-unit id="85fb34175944cb271387c77ece22c9cd507702ec" translate="yes" xml:space="preserve">
          <source>Install it over the existing package</source>
          <target state="translated">在现有软件包上安装</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="d0a1449242475cef5e2e29fe38f9472de6552a3f" translate="yes" xml:space="preserve">
          <source>Installation of the Vagrant VMware provider requires two steps. First the Vagrant VMware Utility must be installed. This can be done by downloading and installing the correct system package from the &lt;a href=&quot;https://www.vagrantup.com/vmware/downloads.html&quot;&gt;Vagrant VMware Utility downloads page&lt;/a&gt;.</source>
          <target state="translated">Vagrant VMware提供程序的安装需要两个步骤。首先，必须安装Vagrant VMware Utility。这可以通过从&lt;a href=&quot;https://www.vagrantup.com/vmware/downloads.html&quot;&gt;Vagrant VMware Utility下载页面&lt;/a&gt;下载并安装正确的系统软件包来完成。</target>
        </trans-unit>
        <trans-unit id="de81c844d564b30d878532e4c90470ed210fce19" translate="yes" xml:space="preserve">
          <source>Installed Software</source>
          <target state="translated">已安装的软件</target>
        </trans-unit>
        <trans-unit id="e1ee1eba1aab7dd0716be28be222476c01a9b3b6" translate="yes" xml:space="preserve">
          <source>Installing Vagrant</source>
          <target state="translated">安装Vagrant</target>
        </trans-unit>
        <trans-unit id="ecf7bb32e7db797947e6bcbaf9191b5f3e6f9f4a" translate="yes" xml:space="preserve">
          <source>Installing Vagrant from Source</source>
          <target state="translated">从源头安装Vagrant</target>
        </trans-unit>
        <trans-unit id="86808656e4f37cc66280db15fa551ef9f78065f0" translate="yes" xml:space="preserve">
          <source>Installing Vagrant from source is an advanced topic and is only recommended when using the official installer is not an option. This page details the steps and prerequisites for installing Vagrant from source.</source>
          <target state="translated">从源头安装Vagrant是一个高级话题,只有在无法选择使用官方安装程序的情况下才会推荐使用。本页详细介绍了从源头安装Vagrant的步骤和前提条件。</target>
        </trans-unit>
        <trans-unit id="6b521cdc7b3987fbcc4be400f51d1959e18e1377" translate="yes" xml:space="preserve">
          <source>Installing Vagrant is extremely easy. Head over to the &lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot;&gt;Vagrant downloads page&lt;/a&gt; and get the appropriate installer or package for your platform. Install the package using standard procedures for your operating system.</source>
          <target state="translated">安装Vagrant非常容易。转到&lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot;&gt;Vagrant下载页面，&lt;/a&gt;并获取适合您平台的安装程序或软件包。使用适用于您的操作系统的标准过程安装软件包。</target>
        </trans-unit>
        <trans-unit id="7be34c5dd971bbb59f4c37955f0fa2890088274b" translate="yes" xml:space="preserve">
          <source>Installing a Vagrant plugin is easy, and should not take more than a few seconds.</source>
          <target state="translated">安装Vagrant插件很简单,应该不会超过几秒钟。</target>
        </trans-unit>
        <trans-unit id="bc337bd17322a5244ebd660836e5bebbcf3e3f93" translate="yes" xml:space="preserve">
          <source>Installing boxes has not changed at all:</source>
          <target state="translated">安装盒子完全没有改变。</target>
        </trans-unit>
        <trans-unit id="1dede9eeb0e760b3630227cc72bb055a9c3a9cb5" translate="yes" xml:space="preserve">
          <source>Installing this is outside the scope of this page, but should be fairly straightforward.</source>
          <target state="translated">安装这个超出了本页面的范围,但应该是相当直接的。</target>
        </trans-unit>
        <trans-unit id="3d047846b6541c19520278c1cce53164caebe662" translate="yes" xml:space="preserve">
          <source>Instead of going in depth over each method that needs to be implemented, the documentation will cover high-level but important points to help you create your provider.</source>
          <target state="translated">文档将不深入介绍每个需要实现的方法,而是涵盖高级但重要的要点,以帮助你创建你的提供者。</target>
        </trans-unit>
        <trans-unit id="150bb8da17865425768882abe67724cedc2f66d4" translate="yes" xml:space="preserve">
          <source>Instead of using the default &quot;cookbooks&quot; directory, a custom cookbooks path can also be set via the &lt;code&gt;cookbooks_path&lt;/code&gt; configuration directive:</source>
          <target state="translated">除了使用默认的&amp;ldquo; cookbooks&amp;rdquo;目录，还可以通过 &lt;code&gt;cookbooks_path&lt;/code&gt; 配置指令设置自定义的Cookbooks路径：</target>
        </trans-unit>
        <trans-unit id="82ad37b40272594164bde4eb5edee07d4c5cb910" translate="yes" xml:space="preserve">
          <source>Internal Aliases</source>
          <target state="translated">内部别名</target>
        </trans-unit>
        <trans-unit id="6f13699119e4bc483b96662e92838b48b20d42c6" translate="yes" xml:space="preserve">
          <source>Internal command aliases call the CLI class directly, allowing you to alias one Vagrant command to another Vagrant command. This technique can be very useful for creating commands that you think &lt;em&gt;should&lt;/em&gt; exist. For example, if &lt;code&gt;vagrant stop&lt;/code&gt; feels more intuitive than &lt;code&gt;vagrant halt&lt;/code&gt;, the following alias definitions would make that change possible:</source>
          <target state="translated">内部命令别名直接调用CLI类，允许您将一个Vagrant命令别名为另一个Vagrant命令。该技术对于创建您认为&lt;em&gt;应该&lt;/em&gt;存在的命令非常有用。例如，如果让 &lt;code&gt;vagrant stop&lt;/code&gt; 感觉比 &lt;code&gt;vagrant halt&lt;/code&gt; 更直观，那么以下别名定义将使更改成为可能：</target>
        </trans-unit>
        <trans-unit id="1bb4b577dac52326b21cbbd5ec5930844c0a41c6" translate="yes" xml:space="preserve">
          <source>It is &lt;strong&gt;extremely important&lt;/strong&gt; that the VMware plugin is upgraded to 1.0.0 or above. This release resolved critical security vulnerabilities. To learn more, please &lt;a href=&quot;https://www.hashicorp.com/blog/introducing-the-vagrant-vmware-desktop-plugin&quot;&gt;read our release announcement&lt;/a&gt;.</source>
          <target state="translated">这是&lt;strong&gt;非常重要&lt;/strong&gt;的是，VMware的插件升级到1.0.0或更高版本。此版本解决了关键的安全漏洞。要了解更多信息，请&lt;a href=&quot;https://www.hashicorp.com/blog/introducing-the-vagrant-vmware-desktop-plugin&quot;&gt;阅读我们的发布公告&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="35d8d05b099c340cad27e302aa71ddb47fdedf39" translate="yes" xml:space="preserve">
          <source>It is a JSON document, structured in the following way:</source>
          <target state="translated">它是一个JSON文档,结构如下:</target>
        </trans-unit>
        <trans-unit id="897a6c42c8ed99a19f05ce1a155b2640bfa4af1e" translate="yes" xml:space="preserve">
          <source>It is a somewhat odd syntax, but the tuple (two-element array) says that the path is located in the &quot;vm&quot; at &quot;/path/to/manifests&quot;.</source>
          <target state="translated">这是一个有点奇怪的语法,但元组(双元素数组)说路径位于&quot;/path/to/manifests &quot;的 &quot;vm &quot;中。</target>
        </trans-unit>
        <trans-unit id="acffa3a403c188fa8b4731d6d80175cbcb44deb2" translate="yes" xml:space="preserve">
          <source>It is an &lt;em&gt;unsafe wildcard&lt;/em&gt; that can be used to apply Ansible options that are not (yet) supported by this Vagrant provisioner. As of Vagrant 1.7, &lt;code&gt;raw_arguments&lt;/code&gt; has the highest priority and its values can potentially override or break other Vagrant settings.</source>
          <target state="translated">这是&lt;em&gt;不安全的通配符&lt;/em&gt;，可用于应用此Vagrant预配器尚不支持的Ansible选项。从Vagrant 1.7开始， &lt;code&gt;raw_arguments&lt;/code&gt; 具有最高优先级，其值可能会覆盖或破坏其他Vagrant设置。</target>
        </trans-unit>
        <trans-unit id="e084cec3c96699903f773baf707d5434bc942a97" translate="yes" xml:space="preserve">
          <source>It is an &lt;em&gt;unsafe wildcard&lt;/em&gt; that can be used to pass additional SSH settings to Ansible via &lt;code&gt;ANSIBLE_SSH_ARGS&lt;/code&gt; environment variable, overriding any other SSH arguments (e.g. defined in an &lt;a href=&quot;https://docs.ansible.com/intro_configuration.html#ssh-args&quot;&gt;&lt;code&gt;ansible.cfg&lt;/code&gt; configuration file&lt;/a&gt;).</source>
          <target state="translated">这是一个&lt;em&gt;不安全的通配符&lt;/em&gt;，可用于通过 &lt;code&gt;ANSIBLE_SSH_ARGS&lt;/code&gt; 环境变量将其他SSH设置传递给Ansible ，从而覆盖任何其他SSH参数（例如，在&lt;a href=&quot;https://docs.ansible.com/intro_configuration.html#ssh-args&quot;&gt; &lt;code&gt;ansible.cfg&lt;/code&gt; 配置文件中&lt;/a&gt;定义）。</target>
        </trans-unit>
        <trans-unit id="dc015c9887fbc3dd36fc2cae5bf188cd1c34f74e" translate="yes" xml:space="preserve">
          <source>It is common when running multiple Vagrant machines to unknowingly create forwarded port definitions that collide with each other (two separate Vagrant projects forwarded to port 8080, for example). Vagrant includes built-in mechanism to detect this and correct it, automatically.</source>
          <target state="translated">当运行多台Vagrant机器时,常见的情况是不知不觉中创建了相互冲突的转发端口定义(例如,两个独立的Vagrant项目转发到8080端口)。Vagrant包括内置的机制来检测并自动纠正这种情况。</target>
        </trans-unit>
        <trans-unit id="e6367b7ecc6bcb3283c005497cbcf8a06bcdb73c" translate="yes" xml:space="preserve">
          <source>It is important for providers to carefully manage all the contents of this directory. Vagrant core itself does little to clean up this directory. Therefore, when a machine is destroyed, be sure to clean up all the state from this directory.</source>
          <target state="translated">对于提供商来说,认真管理这个目录的所有内容是很重要的。Vagrant core本身几乎没有清理这个目录的功能。因此,当一台机器被销毁时,一定要清理这个目录中的所有状态。</target>
        </trans-unit>
        <trans-unit id="c190af92569f649d7d2e747ad0a9eb1b2b59129d" translate="yes" xml:space="preserve">
          <source>It is important to note that paths shared with the Windows system will not have Linux permissions enforced. For example, when a directory within the WSL is synced to a guest using the VirtualBox provider, any local permissions defined on that directory (or its contents) will not be visible from the guest. Likewise, any files created from the guest within the synced folder will be world readable/writeable in WSL.</source>
          <target state="translated">需要注意的是,与 Windows 系统共享的路径将不会被强制执行 Linux 权限。例如,当WSL中的一个目录使用VirtualBox提供商同步到客户机时,在该目录上定义的任何本地权限(或其内容)将不会在客户机上可见。同样,在同步文件夹内从客人创建的任何文件在 WSL 中将是世界可读/可写的。</target>
        </trans-unit>
        <trans-unit id="5496bc765a8f161db65998ac42f070983be77bec" translate="yes" xml:space="preserve">
          <source>It is quite easy, especially once you get comfortable with Vagrant, to forget whether your Vagrant machine is running, suspended, not created, etc. This command tells you the state of the underlying guest machine.</source>
          <target state="translated">很容易忘记您的Vagrant机器是否在运行、是否暂停、是否没有创建等等,尤其是当您熟悉Vagrant之后。这个命令可以告诉您底层客户机的状态。</target>
        </trans-unit>
        <trans-unit id="bad72d3a1e8baa75cc08def0a47eeb3d868ee191" translate="yes" xml:space="preserve">
          <source>It is recommended you remove &lt;em&gt;all&lt;/em&gt; plugins before upgrading, and then slowly add back the plugins. This usually makes for a smoother upgrade process.</source>
          <target state="translated">建议您在升级之前先删除&lt;em&gt;所有&lt;/em&gt;插件，然后再慢慢添加回插件。通常，这可以使升级过程更加顺畅。</target>
        </trans-unit>
        <trans-unit id="a3c682ea9d28368f5cfc49a13e48e6044de0753f" translate="yes" xml:space="preserve">
          <source>It is up to the users to make sure that the static IP does not collide with any other machines on the same network.</source>
          <target state="translated">用户要保证静态IP不与同网的其他机器发生冲突。</target>
        </trans-unit>
        <trans-unit id="7bec321b3e1e37f8bb6d7a7b36f3a6056682d221" translate="yes" xml:space="preserve">
          <source>It will take a few minutes, but after it is complete, a file &quot;package.box&quot; should be in your working directory which is the new base box. At this point, you've successfully created a base box!</source>
          <target state="translated">这需要几分钟的时间,但完成后,在你的工作目录中应该有一个文件 &quot;package.box&quot;,这就是新的基础箱。这时,你已经成功创建了一个基础箱!</target>
        </trans-unit>
        <trans-unit id="9262141a69f1dd6340386b823517e429efde926d" translate="yes" xml:space="preserve">
          <source>Just about every aspect of Vagrant can be modified. However, Vagrant does expect some defaults which will cause your base box to &quot;just work&quot; out of the box. You should create these as defaults if you intend to publicly distribute your box.</source>
          <target state="translated">Vagrant的每个方面都可以修改。然而,Vagrant希望有一些默认值,这将使您的基础箱 &quot;只是工作 &quot;的盒子。如果您打算公开发布您的盒子,您应该创建这些默认值。</target>
        </trans-unit>
        <trans-unit id="ebf6d97edff6686b3d1107dd7b758e8c07aaf0aa" translate="yes" xml:space="preserve">
          <source>Just call &lt;code&gt;vagrant share --full&lt;/code&gt;. This will automatically share as many ports as possible for remote connections. Please see &lt;a href=&quot;security&quot;&gt;the Vagrant share security page&lt;/a&gt; for more information.</source>
          <target state="translated">只需将&amp;ldquo; &lt;code&gt;vagrant share --full&lt;/code&gt; 。这将自动共享尽可能多的端口以进行远程连接。请参阅&lt;a href=&quot;security&quot;&gt;Vagrant分享安全性页面&lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="15c202708301e04c075e7945ae9cc1fb86aeb15f" translate="yes" xml:space="preserve">
          <source>Just like the cookbooks path, the roles path is relative to the project root if a relative path is given.</source>
          <target state="translated">就像 cookbooks 路径一样,如果给定了相对路径,角色路径是相对于项目根目录的。</target>
        </trans-unit>
        <trans-unit id="51857f20d3fa5894a73b0e9023d7f7d7d56f0d13" translate="yes" xml:space="preserve">
          <source>Just like the manifests path, the modules path is relative to the project root if a relative path is given.</source>
          <target state="translated">就像manifests路径一样,如果给定了相对路径,模块路径是相对于项目根目录的。</target>
        </trans-unit>
        <trans-unit id="fc938e902af4c01d3d279e4cf77bf082778c8bb2" translate="yes" xml:space="preserve">
          <source>Just run &lt;code&gt;vagrant share --ssh&lt;/code&gt;!</source>
          <target state="translated">只需运行 &lt;code&gt;vagrant share --ssh&lt;/code&gt; ！</target>
        </trans-unit>
        <trans-unit id="ebc747eb908160690df9c3f55c5991eb0aae522f" translate="yes" xml:space="preserve">
          <source>Just set &lt;code&gt;VAGRANT_DEFAULT_PROVIDER&lt;/code&gt; to the provider you wish to be the default. For example, if you use Vagrant with VMware Fusion, you can set the environmental variable to &lt;code&gt;vmware_fusion&lt;/code&gt; and it will be your default.</source>
          <target state="translated">只需将 &lt;code&gt;VAGRANT_DEFAULT_PROVIDER&lt;/code&gt; 设置为您希望默认的提供者即可。例如，如果将Vagrant与VMware Fusion一起使用，则可以将环境变量设置为 &lt;code&gt;vmware_fusion&lt;/code&gt; ，它将是您的默认变量。</target>
        </trans-unit>
        <trans-unit id="c5f25ac50a53728965b5d0bb0a08270ea8640b0e" translate="yes" xml:space="preserve">
          <source>Kernel Upgrade</source>
          <target state="translated">内核升级</target>
        </trans-unit>
        <trans-unit id="f5025143a89e9b224781aa62468c0e2c91c66496" translate="yes" xml:space="preserve">
          <source>Known Issues</source>
          <target state="translated">已知问题</target>
        </trans-unit>
        <trans-unit id="f4b18ea17542167319e2291b9d2ea0febf135af9" translate="yes" xml:space="preserve">
          <source>Learn more about the VMware providers on the &lt;a href=&quot;https://www.vagrantup.com/vmware&quot;&gt;VMware provider&lt;/a&gt; page on the Vagrant website.</source>
          <target state="translated">在Vagrant网站上的&lt;a href=&quot;https://www.vagrantup.com/vmware&quot;&gt;VMware提供程序&lt;/a&gt;页面上了解有关VMware提供程序的更多信息。</target>
        </trans-unit>
        <trans-unit id="4c48e37ecacb5c1e106d9a3e740c3d7d75f91a5d" translate="yes" xml:space="preserve">
          <source>Let us go over the major pieces of what is going on here. Note from a general Ruby language perspective the above &lt;em&gt;should&lt;/em&gt; be familiar. The syntax should not scare you. If it does, then please familiarize with Ruby further before attempting to write a plugin.</source>
          <target state="translated">让我们回顾一下这里正在发生的主要事情。从一般的Ruby语言角度注意，上面的内容&lt;em&gt;应该&lt;/em&gt;很熟悉。语法不应吓you您。如果是这样，那么在尝试编写插件之前，请进一步熟悉Ruby。</target>
        </trans-unit>
        <trans-unit id="18285b7cf8263631452f27b5e08e47b199a95bc1" translate="yes" xml:space="preserve">
          <source>Let us look at some common examples first. See the bottom of this document for a comprehensive list of options.</source>
          <target state="translated">让我们先看看一些常见的例子。参见本文档底部的全面选项列表。</target>
        </trans-unit>
        <trans-unit id="9631187804e28555f56341a4ce3d7bf5f2e72993" translate="yes" xml:space="preserve">
          <source>Licensed under the MPL 2.0 License.</source>
          <target state="translated">采用MPL 2.0授权许可。</target>
        </trans-unit>
        <trans-unit id="7299cf5273ae577ae48495d50f722c28e8a45f39" translate="yes" xml:space="preserve">
          <source>Like disk space, finding the right balance of the default amount of memory is important. For most providers, the user can modify the memory with the Vagrantfile, so do not use too much by default. It would be a poor user experience (and mildly shocking) if a &lt;code&gt;vagrant up&lt;/code&gt; from a base box instantly required many gigabytes of RAM. Instead, choose a value such as 512MB, which is usually enough to play around and do interesting things with a Vagrant machine, but can easily be increased when needed.</source>
          <target state="translated">像磁盘空间一样，找到默认内存量的正确平衡也很重要。对于大多数提供程序，用户可以使用Vagrantfile修改内存，因此默认情况下不要使用太多内存。如果从基础箱中 &lt;code&gt;vagrant up&lt;/code&gt; 立即需要数GB的RAM，那将是一个糟糕的用户体验（并有一定程度的震撼）。相反，选择一个值，例如512MB，通常足以在Vagrant机器上玩耍并做一些有趣的事情，但可以在需要时轻松增加。</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="d3032ff6770b4f78c6b3e63a6ce8ad89ddbbcb94" translate="yes" xml:space="preserve">
          <source>Limited Networking</source>
          <target state="translated">有限网络</target>
        </trans-unit>
        <trans-unit id="a3dfad62980fa5dce2052f53e7080e6be08dcd2b" translate="yes" xml:space="preserve">
          <source>Linked Clones</source>
          <target state="translated">链接克隆</target>
        </trans-unit>
        <trans-unit id="c5669935442f225f52c830c06b758a3bb474babd" translate="yes" xml:space="preserve">
          <source>Linked clones are based on a master VM, which is generated by importing the base box only once the first time it is required. For the linked clones only differencing disk images are created where the parent disk image belongs to the master VM.</source>
          <target state="translated">关联克隆基于主虚拟机,主虚拟机在第一次需要时只需导入一次基础箱即可生成。对于链接的克隆,只有在父磁盘映像属于主虚拟机的地方才会创建不同的磁盘映像。</target>
        </trans-unit>
        <trans-unit id="32c0a0cfc259e4c0395e446c8bbc6756d8dbe5be" translate="yes" xml:space="preserve">
          <source>Linked clones are based on a master VM, which is generated by importing the base box only once the first time it is required. For the linked clones only differencing disk images are created where the parent disk image belongs to the master VM. To disable linked clones:</source>
          <target state="translated">关联克隆基于主虚拟机,主虚拟机在第一次需要时只需导入一次基础箱即可生成。对于链接的克隆,只有在父磁盘映像属于主虚拟机的地方才会创建不同的磁盘映像。要禁用链接克隆。</target>
        </trans-unit>
        <trans-unit id="e8f34b4cacce8c191b1cb7f540727673b6676a2e" translate="yes" xml:space="preserve">
          <source>Linux SysVinit</source>
          <target state="translated">Linux SysVinit</target>
        </trans-unit>
        <trans-unit id="7965fa86526dcd720771af8acfa50f127e1b5664" translate="yes" xml:space="preserve">
          <source>Linux runit</source>
          <target state="translated">linux runit</target>
        </trans-unit>
        <trans-unit id="ec492254b5fa039ff8711d87bbd0e2d836b1f882" translate="yes" xml:space="preserve">
          <source>Linux systemd</source>
          <target state="translated">Linux系统</target>
        </trans-unit>
        <trans-unit id="86a21d1ceb6a05f8c1c8278d489a10f314571750" translate="yes" xml:space="preserve">
          <source>Linux, VirtualBox, and KVM</source>
          <target state="translated">Linux、VirtualBox和KVM</target>
        </trans-unit>
        <trans-unit id="a59d66452751aa92e05e149e3fed76a94badc0e1" translate="yes" xml:space="preserve">
          <source>Linux/Unix: &lt;a href=&quot;https://omnitruck.chef.io/install.sh&quot;&gt;https://omnitruck.chef.io/install.sh&lt;/a&gt;</source>
          <target state="translated">Linux / Unix：&lt;a href=&quot;https://omnitruck.chef.io/install.sh&quot;&gt;https&lt;/a&gt;：//omnitruck.chef.io/install.sh</target>
        </trans-unit>
        <trans-unit id="a77a15878c3fb68f85f8870d956ef20f30691304" translate="yes" xml:space="preserve">
          <source>Listing Plugins</source>
          <target state="translated">上市插件</target>
        </trans-unit>
        <trans-unit id="188d0b8bfe4242f2a761bfd9c491a07d596e6ca5" translate="yes" xml:space="preserve">
          <source>Load Order and Merging</source>
          <target state="translated">负载顺序和合并</target>
        </trans-unit>
        <trans-unit id="f94eb6b7de75022e95bf7191e1149558c2ad258e" translate="yes" xml:space="preserve">
          <source>Local Exec Strategy</source>
          <target state="translated">本地执行战略</target>
        </trans-unit>
        <trans-unit id="faf70c195fe4702b2d1cd60353884a2bf877d8fb" translate="yes" xml:space="preserve">
          <source>Local path:</source>
          <target state="translated">当地路径。</target>
        </trans-unit>
        <trans-unit id="2c85f30c06a613036e1c2397e9f479468d24ba12" translate="yes" xml:space="preserve">
          <source>Log messages are very useful when troubleshooting issues, reporting bugs, or getting support. At the most verbose level, Vagrant outputs basically everything it is doing.</source>
          <target state="translated">日志信息在排除问题、报告错误或获得支持时非常有用。在最粗略的层面上,Vagrant会输出它正在做的所有事情。</target>
        </trans-unit>
        <trans-unit id="4e5a2893bdcc7d239c1db72e4c4ffbe4bea73174" translate="yes" xml:space="preserve">
          <source>Login</source>
          <target state="translated">Login</target>
        </trans-unit>
        <trans-unit id="ccce3d00832d22d9466937b92787148330490e39" translate="yes" xml:space="preserve">
          <source>Lookup Path</source>
          <target state="translated">查询路径</target>
        </trans-unit>
        <trans-unit id="88be6b1191964619df88e2a6a3fe6b9af996fa11" translate="yes" xml:space="preserve">
          <source>Loop Over VM Definitions</source>
          <target state="translated">循环浏览虚拟机定义</target>
        </trans-unit>
        <trans-unit id="78e4d673440f4b56e6465dd946f18be31eb5131f" translate="yes" xml:space="preserve">
          <source>Machine Readable Output</source>
          <target state="translated">机器可读输出</target>
        </trans-unit>
        <trans-unit id="9cfb4a56511532bf0f038ea6ae40fa571c02a45d" translate="yes" xml:space="preserve">
          <source>Machine Settings</source>
          <target state="translated">机器设置</target>
        </trans-unit>
        <trans-unit id="b4d873a8849693a165fd11437a3e8d6b4796741a" translate="yes" xml:space="preserve">
          <source>Machine State Changes</source>
          <target state="translated">机器状态变化</target>
        </trans-unit>
        <trans-unit id="9016947e13f004e02519e2b05e9d31f505d87b5a" translate="yes" xml:space="preserve">
          <source>Make sure you have the kernel headers properly installed. This varies by distro but is generally a package available via the package manager.</source>
          <target state="translated">确保你已经正确安装了内核头文件。这因发行版而异,但通常是通过软件包管理器提供的一个软件包。</target>
        </trans-unit>
        <trans-unit id="059be90b98bf0fdb8addd26472daa19831de1f3b" translate="yes" xml:space="preserve">
          <source>Making compatible boxes</source>
          <target state="translated">制作兼容箱</target>
        </trans-unit>
        <trans-unit id="a7dbbb4172263077674577b2683165b09aa78cdb" translate="yes" xml:space="preserve">
          <source>Manual Installation</source>
          <target state="translated">手动安装</target>
        </trans-unit>
        <trans-unit id="f0589eefab901bb64b7675e3b557909b0f1fb09d" translate="yes" xml:space="preserve">
          <source>Manually Reinstalling VMware Tools</source>
          <target state="translated">手动重新安装VMware工具</target>
        </trans-unit>
        <trans-unit id="f817add89ecc18d1973664c3c20dc1e307e33993" translate="yes" xml:space="preserve">
          <source>Master Options</source>
          <target state="translated">主选项</target>
        </trans-unit>
        <trans-unit id="4071bb27bba440a9fb83bedd857f4628471ac26f" translate="yes" xml:space="preserve">
          <source>Masterless Quickstart</source>
          <target state="translated">无师自通快速入门</target>
        </trans-unit>
        <trans-unit id="89c8a2851d1755cf87365b4a7c55e5551cf878c6" translate="yes" xml:space="preserve">
          <source>Memory</source>
          <target state="translated">Memory</target>
        </trans-unit>
        <trans-unit id="40de0d4de887a374168bf79e72c7aa0fa4594d6e" translate="yes" xml:space="preserve">
          <source>Merging</source>
          <target state="translated">Merging</target>
        </trans-unit>
        <trans-unit id="78623d2da43c7d06ede96a1ebe4c605317b00dc5" translate="yes" xml:space="preserve">
          <source>Minimum Vagrant Version</source>
          <target state="translated">最低限度的流浪者版本</target>
        </trans-unit>
        <trans-unit id="49a86032f1da90036093406a44944ea9b7d0a6a9" translate="yes" xml:space="preserve">
          <source>Minion Options</source>
          <target state="translated">爪牙选项</target>
        </trans-unit>
        <trans-unit id="fd88ad0d64722bd0a649a1ac8ef3cd8ca0994adf" translate="yes" xml:space="preserve">
          <source>Missing Assets</source>
          <target state="translated">丢失的资产</target>
        </trans-unit>
        <trans-unit id="e74219f2703b2481adffb6f792988fdc95033687" translate="yes" xml:space="preserve">
          <source>Modeling a distributed system and how they interact with each other.</source>
          <target state="translated">建立一个分布式系统的模型,以及它们之间如何相互作用。</target>
        </trans-unit>
        <trans-unit id="53db0da600901f71f4a042626eea0275616b217f" translate="yes" xml:space="preserve">
          <source>Modes of operation</source>
          <target state="translated">运作模式</target>
        </trans-unit>
        <trans-unit id="355a7f8f29d8ca52cfc6240229a9df1910f7e394" translate="yes" xml:space="preserve">
          <source>Modifying the Owner/Group</source>
          <target state="translated">修改所有者/组</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="a4d758212e5822b45ab925bbb085f9b7d1830c4c" translate="yes" xml:space="preserve">
          <source>More Commands</source>
          <target state="translated">更多命令</target>
        </trans-unit>
        <trans-unit id="da65f92a3ce0a19e582c80c419726eab4a93d13c" translate="yes" xml:space="preserve">
          <source>Most importantly, you must understand that by running &lt;code&gt;vagrant share&lt;/code&gt;, you are making your Vagrant environment accessible by anyone who knows the share name. When share is not running, it is not accessible.</source>
          <target state="translated">最重要的是，您必须了解通过运行 &lt;code&gt;vagrant share&lt;/code&gt; ，您可以使知道共享名称的任何人都可以访问Vagrant环境。当共享未运行时，将无法访问。</target>
        </trans-unit>
        <trans-unit id="63981058334463c31af6f701a3ebdab9c322150d" translate="yes" xml:space="preserve">
          <source>Most plugins are likely going to want to do some sort of input/output. Plugins should &lt;em&gt;never&lt;/em&gt; use Ruby's built-in &lt;code&gt;puts&lt;/code&gt; or &lt;code&gt;gets&lt;/code&gt; style methods. Instead, all input/output should go through some sort of Vagrant UI object. The Vagrant UI object properly handles cases where there is no TTY, output pipes are closed, there is no input pipe, etc.</source>
          <target state="translated">大多数插件可能会想要进行某种输入/输出。插件&lt;em&gt;永远不要&lt;/em&gt;使用Ruby的内置 &lt;code&gt;puts&lt;/code&gt; 或 &lt;code&gt;gets&lt;/code&gt; 样式方法。相反，所有输入/输出应通过某种Vagrant UI对象。Vagrant UI对象可以正确处理以下情况：没有TTY，关闭输出管道，没有输入管道等。</target>
        </trans-unit>
        <trans-unit id="92d064b2eb9a92ddae125889b58c2a0c53092095" translate="yes" xml:space="preserve">
          <source>Most web frameworks or toolkits have settings or helpers to generate relative paths. For example, if you are a WordPress developer, the &lt;a href=&quot;http://wordpress.org/plugins/root-relative-urls/&quot;&gt;Root Relative URLs&lt;/a&gt; plugin will automatically do this for you.</source>
          <target state="translated">大多数Web框架或工具包都具有用于生成相对路径的设置或帮助程序。例如，如果您是WordPress开发人员，则&lt;a href=&quot;http://wordpress.org/plugins/root-relative-urls/&quot;&gt;Root Relative URLs&lt;/a&gt;插件将自动为您执行此操作。</target>
        </trans-unit>
        <trans-unit id="c361555bc73474d372cbe91fa9d3d9881eedcc5e" translate="yes" xml:space="preserve">
          <source>Much like &lt;a href=&quot;../providers/index&quot;&gt;Vagrant Providers&lt;/a&gt;, Vagrant Push also supports multiple backend declarations. Consider the common scenario of a staging and QA environment:</source>
          <target state="translated">就像&lt;a href=&quot;../providers/index&quot;&gt;Vagrant Providers一样&lt;/a&gt;，Vagrant Push也支持多个后端声明。考虑临时和QA环境的常见方案：</target>
        </trans-unit>
        <trans-unit id="1cd4726f9497a6693abcd91ec3607c6c9dba7f83" translate="yes" xml:space="preserve">
          <source>Much like the &lt;code&gt;VAGRANT_DEFAULT_PROVIDER&lt;/code&gt; this environment variable normally does not need to be set. By setting this you will instruct Vagrant to &lt;em&gt;prefer&lt;/em&gt; providers defined in this environment variable for any &lt;em&gt;new&lt;/em&gt; Vagrant environments. Existing Vagrant environments will continue to use the provider they came &lt;code&gt;up&lt;/code&gt; with. Once you &lt;code&gt;vagrant destroy&lt;/code&gt; existing environments, this will take effect. A single provider can be defined within this environment variable or a comma delimited list of providers.</source>
          <target state="translated">与 &lt;code&gt;VAGRANT_DEFAULT_PROVIDER&lt;/code&gt; 相似，通常不需要设置此环境变量。通过设置此选项，您将指示Vagrant 对于任何&lt;em&gt;新的&lt;/em&gt; Vagrant环境，都&lt;em&gt;更喜欢&lt;/em&gt;在此环境变量中定义的提供程序。现有的流浪环境将继续使用他们来到提供 &lt;code&gt;up&lt;/code&gt; 用。一旦您 &lt;code&gt;vagrant destroy&lt;/code&gt; 现有环境，这将生效。可以在此环境变量或逗号分隔的提供者列表中定义单个提供者。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ac0284118e68afde878bdc64f5781f06250a9ced" translate="yes" xml:space="preserve">
          <source>Multi-Machine</source>
          <target state="translated">Multi-Machine</target>
        </trans-unit>
        <trans-unit id="b627b5b1f9f4992c3331f0e0afb741d3b5a24c5b" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;config.vm.provider&lt;/code&gt; blocks can exist to configure multiple providers.</source>
          <target state="translated">可以存在多个 &lt;code&gt;config.vm.provider&lt;/code&gt; 块来配置多个提供程序。</target>
        </trans-unit>
        <trans-unit id="7dcd4893db45ef15c048e79af54b86e439eddcde" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;config.vm.provision&lt;/code&gt; methods can be used to define multiple provisioners. These provisioners will be run in the order they're defined. This is useful for a variety of reasons, but most commonly it is used so that a shell script can bootstrap some of the system so that another provisioner can take over later.</source>
          <target state="translated">可以使用多种 &lt;code&gt;config.vm.provision&lt;/code&gt; 方法来定义多个预配器。这些预配器将按照其定义的顺序运行。出于多种原因，这很有用，但最常用的方式是使Shell脚本可以引导某些系统，以便其他供应者以后可以接管。</target>
        </trans-unit>
        <trans-unit id="afeae5ed9823bd1e76850c2240b5952186d20ad8" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;customize&lt;/code&gt; directives can be used. They will be executed in the order given.</source>
          <target state="translated">可以使用多个 &lt;code&gt;customize&lt;/code&gt; 指令。它们将按照给定的顺序执行。</target>
        </trans-unit>
        <trans-unit id="191f1257f0f4996c113b89ad6c9c68bbbf930cf3" translate="yes" xml:space="preserve">
          <source>Multiple Networks</source>
          <target state="translated">多个网络</target>
        </trans-unit>
        <trans-unit id="916db0683f1cf7ccdac0cd55ab1c9c6575ce207b" translate="yes" xml:space="preserve">
          <source>Multiple Provisioners</source>
          <target state="translated">多个供应者</target>
        </trans-unit>
        <trans-unit id="2e7b6686ca712bc664635d606515a9ab6e73fbee" translate="yes" xml:space="preserve">
          <source>Multiple machines are defined within the same project &lt;a href=&quot;../vagrantfile/index&quot;&gt;Vagrantfile&lt;/a&gt; using the &lt;code&gt;config.vm.define&lt;/code&gt; method call. This configuration directive is a little funny, because it creates a Vagrant configuration within a configuration. An example shows this best:</source>
          <target state="translated">使用 &lt;code&gt;config.vm.define&lt;/code&gt; 方法调用在同一项目&lt;a href=&quot;../vagrantfile/index&quot;&gt;Vagrantfile&lt;/a&gt;中定义多台计算机。这个配置指令有点有趣，因为它在配置中创建了Vagrant配置。一个例子很好地说明了这一点：</target>
        </trans-unit>
        <trans-unit id="6093f38c0fb304b90fd5dcbe4e1cc992e8a7d506" translate="yes" xml:space="preserve">
          <source>Multiple machines are defined within the same project &lt;a href=&quot;vagrantfile/index&quot;&gt;Vagrantfile&lt;/a&gt; using the &lt;code&gt;config.vm.define&lt;/code&gt; method call. This configuration directive is a little funny, because it creates a Vagrant configuration within a configuration. An example shows this best:</source>
          <target state="translated">使用 &lt;code&gt;config.vm.define&lt;/code&gt; 方法调用在同一项目&lt;a href=&quot;vagrantfile/index&quot;&gt;Vagrantfile&lt;/a&gt;中定义多台计算机。这个配置指令有点有趣，因为它在配置中创建了Vagrant配置。一个例子很好地说明了这一点：</target>
        </trans-unit>
        <trans-unit id="1358e8c17e9a9bf263eeb803bf1b8d1a3cd2f316" translate="yes" xml:space="preserve">
          <source>Multiple machines within the same private network (also usually with the restriction that they're backed by the same &lt;a href=&quot;../providers/index&quot;&gt;provider&lt;/a&gt;) can communicate with each other on private networks.</source>
          <target state="translated">同一专用网络中的多台计算机（通常也受同一&lt;a href=&quot;../providers/index&quot;&gt;提供程序&lt;/a&gt;支持的限制）可以在专用网络上相互通信。</target>
        </trans-unit>
        <trans-unit id="364ad6bfe990b0337759b6bf3530321e512a906c" translate="yes" xml:space="preserve">
          <source>Multiple networks can be defined by having multiple &lt;code&gt;config.vm.network&lt;/code&gt; calls within the Vagrantfile. The exact meaning of this can differ for each &lt;a href=&quot;../providers/index&quot;&gt;provider&lt;/a&gt;, but in general the order specifies the order in which the networks are enabled.</source>
          <target state="translated">通过在Vagrantfile中具有多个 &lt;code&gt;config.vm.network&lt;/code&gt; 调用，可以定义多个网络。对于每个&lt;a href=&quot;../providers/index&quot;&gt;提供商&lt;/a&gt;，其确切含义可能有所不同，但通常，顺序指定了启用网络的顺序。</target>
        </trans-unit>
        <trans-unit id="52edc78ca08ee69117f0cf6ce93dea0f59450cc3" translate="yes" xml:space="preserve">
          <source>Multiple requirements can be specified as well:</source>
          <target state="translated">也可以指定多个要求。</target>
        </trans-unit>
        <trans-unit id="db1218651fb5d285bf3469a4750e2db41f4b8b5f" translate="yes" xml:space="preserve">
          <source>NFS</source>
          <target state="translated">NFS</target>
        </trans-unit>
        <trans-unit id="de3d132416f8e67b88ec58e73539e1b94ea6da2c" translate="yes" xml:space="preserve">
          <source>NFS Global Options</source>
          <target state="translated">NFS全球选项</target>
        </trans-unit>
        <trans-unit id="25d305941bc0f404d7211aa884a3174ed8cc7d00" translate="yes" xml:space="preserve">
          <source>NFS Synced Folder Options</source>
          <target state="translated">NFS同步文件夹选项</target>
        </trans-unit>
        <trans-unit id="27ac39d312c989da590f6d6ce0b20cced6008685" translate="yes" xml:space="preserve">
          <source>NFS synced folders have a set of options that can be specified that are unique to NFS. These are listed below. These options can be specified in the final part of the &lt;code&gt;config.vm.synced_folder&lt;/code&gt; definition, along with the &lt;code&gt;type&lt;/code&gt; option.</source>
          <target state="translated">NFS同步的文件夹具有一组可以指定的选项，这些选项对于NFS是唯一的。这些在下面列出。可以在 &lt;code&gt;config.vm.synced_folder&lt;/code&gt; 定义的最后部分中指定这些选项以及 &lt;code&gt;type&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="bf69dc6536a2448b7024a6076b463e67228ec2a5" translate="yes" xml:space="preserve">
          <source>NFSv4.0 - &lt;a href=&quot;https://tools.ietf.org/html/rfc7530#section-3.1&quot;&gt;RFC7530&lt;/a&gt;</source>
          <target state="translated">NFSv4.0- &lt;a href=&quot;https://tools.ietf.org/html/rfc7530#section-3.1&quot;&gt;RFC7530&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29ae97a04c46e5d13cfcd3aa9ba948f7402c5b6e" translate="yes" xml:space="preserve">
          <source>NFSv4.1 - &lt;a href=&quot;https://tools.ietf.org/html/rfc5661#section-2.9.1&quot;&gt;RFC5661&lt;/a&gt;</source>
          <target state="translated">NFSv4.1- &lt;a href=&quot;https://tools.ietf.org/html/rfc5661#section-2.9.1&quot;&gt;RFC5661&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="caa8524622dad7eb7a40561007fd7610b4529141" translate="yes" xml:space="preserve">
          <source>Name of a box installed into Vagrant.</source>
          <target state="translated">安装到Vagrant中的盒子的名称。</target>
        </trans-unit>
        <trans-unit id="56af753cd8a9339a96ff1181471327e4cf51b2a9" translate="yes" xml:space="preserve">
          <source>Naming provisioners is simple. The first argument to &lt;code&gt;config.vm.provision&lt;/code&gt; becomes the name, and then a &lt;code&gt;type&lt;/code&gt; option is used to specify the provisioner type, such as &lt;code&gt;type: &quot;shell&quot;&lt;/code&gt; above.</source>
          <target state="translated">给供应商命名很简单。 &lt;code&gt;config.vm.provision&lt;/code&gt; 的第一个参数成为名称，然后使用 &lt;code&gt;type&lt;/code&gt; 选项指定配置程序类型，例如上述 &lt;code&gt;type: &quot;shell&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b664f49b8a69ae8c03348868ec8e4949006c4829" translate="yes" xml:space="preserve">
          <source>Network disconnect</source>
          <target state="translated">网络断线</target>
        </trans-unit>
        <trans-unit id="1e91748557010f07119a40ac844fcae91cc2e7a3" translate="yes" xml:space="preserve">
          <source>Networking</source>
          <target state="translated">Networking</target>
        </trans-unit>
        <trans-unit id="2eeb106af116d471136575e6cd629b959e9baa7d" translate="yes" xml:space="preserve">
          <source>Networks are automatically configured and enabled after they've been defined in the Vagrantfile as part of the &lt;code&gt;vagrant up&lt;/code&gt; or &lt;code&gt;vagrant reload&lt;/code&gt; process.</source>
          <target state="translated">在Vagrantfile中定义网络后，将自动配置和启用网络，这是Vagrant &lt;code&gt;vagrant up&lt;/code&gt; 或Vagrant &lt;code&gt;vagrant reload&lt;/code&gt; 过程的一部分。</target>
        </trans-unit>
        <trans-unit id="2b52cbc549f82c2c86c9f99818ab2657aa72070e" translate="yes" xml:space="preserve">
          <source>Newlines within the format are replaced with their respective standard escape sequence. Newlines become a literal &lt;code&gt;\n&lt;/code&gt; within the output. Carriage returns become a literal &lt;code&gt;\r&lt;/code&gt;.</source>
          <target state="translated">格式中的换行符将替换为其各自的标准转义序列。换行符成为输出中的文字 &lt;code&gt;\n&lt;/code&gt; 。回车变成了文字 &lt;code&gt;\r&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="294d5f6f53f529b9512adffbadb7daa5d93c399e" translate="yes" xml:space="preserve">
          <source>Next create a directory for the executable and unpack the executable as root.</source>
          <target state="translated">接下来为可执行文件创建一个目录,并将可执行文件解压为根目录。</target>
        </trans-unit>
        <trans-unit id="28a7587048090d12b6bf8333d8e3373b900d28b9" translate="yes" xml:space="preserve">
          <source>Next, &lt;code&gt;cd&lt;/code&gt; into that path. All commands will be run from this path:</source>
          <target state="translated">接下来， &lt;code&gt;cd&lt;/code&gt; 到该路径。所有命令都将从以下路径运行：</target>
        </trans-unit>
        <trans-unit id="ebee4e60c95d98c8833c3ac2bcecd4876d16cb4c" translate="yes" xml:space="preserve">
          <source>Next, create a &lt;code&gt;Rakefile&lt;/code&gt; that has at the very least, the following contents:</source>
          <target state="translated">接下来，创建一个至少具有以下内容的 &lt;code&gt;Rakefile&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c81d2d1e80deda5e8d7f189984ca00e8ff88b2e8" translate="yes" xml:space="preserve">
          <source>Next, install the Vagrant VMware provider plugin using the standard plugin installation procedure:</source>
          <target state="translated">接下来,使用标准插件安装程序安装Vagrant VMware提供商插件。</target>
        </trans-unit>
        <trans-unit id="f9c0cdaa8a33ff3ef5f69311063a1a064db4d4f7" translate="yes" xml:space="preserve">
          <source>Next, make sure that the guest additions image is available by using the GUI and clicking on &quot;Devices&quot; followed by &quot;Install Guest Additions&quot;. Then mount the CD-ROM to some location. On Ubuntu, this usually looks like this:</source>
          <target state="translated">接下来,通过使用GUI并点击 &quot;设备&quot;,然后点击 &quot;安装Guest Additions&quot;,确保Guest Additions镜像可用。然后将CD-ROM挂载到某个位置。在Ubuntu上,通常是这样的。</target>
        </trans-unit>
        <trans-unit id="a5cc7077d4803cda51f435459fd28a20b0cbd658" translate="yes" xml:space="preserve">
          <source>Normally, the Chef Server is responsible for specifying the run list for the node. However, you can override what the Chef Server sends down by manually specifying a run list:</source>
          <target state="translated">通常情况下,Chef服务器负责指定节点的运行列表。但是,你可以通过手动指定运行列表来覆盖Chef服务器发送下来的内容。</target>
        </trans-unit>
        <trans-unit id="8cb68c4012bea3743b2cd179927229697763b1c7" translate="yes" xml:space="preserve">
          <source>Note that Vagrantfile stability for the new Vagrantfile syntax is not promised until 2.0 final. So while Vagrantfiles made for 1.0.x will &lt;a href=&quot;backwards-compatibility&quot;&gt;continue to work&lt;/a&gt;, newer Vagrantfiles may have backwards incompatible changes until 2.0 final.</source>
          <target state="translated">请注意，直到2.0最终版才保证新Vagrantfile语法的Vagrantfile稳定性。因此，尽管为1.0.x制作的Vagrantfiles可以&lt;a href=&quot;backwards-compatibility&quot;&gt;继续工作&lt;/a&gt;，但较新的Vagrantfiles可能具有向后不兼容的更改，直到2.0 final。</target>
        </trans-unit>
        <trans-unit id="ce60dac6bb9935ba60876ffae35c59e2649bcf7c" translate="yes" xml:space="preserve">
          <source>Note that any &lt;code&gt;vagrant plugin&lt;/code&gt; commands automatically do not load any plugins, so if you do install any unstable plugins, you can always use the &lt;code&gt;vagrant plugin&lt;/code&gt; commands without having to worry.</source>
          <target state="translated">请注意，任何 &lt;code&gt;vagrant plugin&lt;/code&gt; 命令都不会自动加载任何插件，因此，如果您安装了任何不稳定的插件，则始终可以使用 &lt;code&gt;vagrant plugin&lt;/code&gt; 命令而不必担心。</target>
        </trans-unit>
        <trans-unit id="cc18c52130b65224d962b183a0684a6db4a36796" translate="yes" xml:space="preserve">
          <source>Note that any client certificates, insecure download settings, and so on will apply to all URLs in this list. The URLs can also be local files by using the &lt;code&gt;file://&lt;/code&gt; scheme. For example: &quot;file:///tmp/test.box&quot;.</source>
          <target state="translated">请注意，所有客户端证书，不安全的下载设置等都将应用于此列表中的所有URL。通过使用 &lt;code&gt;file://&lt;/code&gt; 方案，URL也可以是本地文件。例如：&amp;ldquo; file：///tmp/test.box&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="90e19db251d8e7c2e0669ba79ba0db7ff82ecbb7" translate="yes" xml:space="preserve">
          <source>Note that as of the publishing of this guide, the Microsoft RDP Client for Mac does &lt;em&gt;not&lt;/em&gt; perform validation on the configuration file. This means if you specify an invalid configuration option or make a typographical error, the client will silently ignore the error and continue!</source>
          <target state="translated">请注意，本指南的出版，微软RDP客户端的Mac并&lt;em&gt;没有&lt;/em&gt;在配置文件上执行验证。这意味着如果您指定了无效的配置选项或出现印刷错误，客户端将无提示地忽略该错误并继续！</target>
        </trans-unit>
        <trans-unit id="1ceb8c186d09620ab0d3bb59def920f037362c86" translate="yes" xml:space="preserve">
          <source>Note that if you change any settings within the rsync synced folders such as exclude paths, you will need to &lt;code&gt;vagrant reload&lt;/code&gt; before this command will pick up those changes.</source>
          <target state="translated">请注意，如果您更改了rsync同步文件夹中的任何设置（例如排除路径），则您需要先 &lt;code&gt;vagrant reload&lt;/code&gt; 然后此命令才能获取这些更改。</target>
        </trans-unit>
        <trans-unit id="feac1bff502ff7e12695de16a27f66139fcbfcac" translate="yes" xml:space="preserve">
          <source>Note that the &quot;name&quot; corresponds to the name of the VM, &lt;strong&gt;not&lt;/strong&gt; the name of the Docker container. Consider the following Vagrantfile:</source>
          <target state="translated">请注意，&amp;ldquo;名称&amp;rdquo;对应于VM 的名称，&lt;strong&gt;而不是&lt;/strong&gt; Docker容器的名称。考虑以下Vagrantfile：</target>
        </trans-unit>
        <trans-unit id="7ee6a0533cdebffc3ab170151736276d1cb15364" translate="yes" xml:space="preserve">
          <source>Note that the generated inventory file is stored as part of your local Vagrant environment in &lt;code&gt;.vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory&lt;/code&gt;.</source>
          <target state="translated">请注意，生成的清单文件作为本地Vagrant环境的一部分存储在 &lt;code&gt;.vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="6b76d48cd0fb62e0e80270a746219beb46df7019" translate="yes" xml:space="preserve">
          <source>Note that the generated inventory file is uploaded to the guest VM in a subdirectory of &lt;a href=&quot;ansible_local&quot;&gt;&lt;code&gt;tmp_path&lt;/code&gt;&lt;/a&gt;, e.g. &lt;code&gt;/tmp/vagrant-ansible/inventory/vagrant_ansible_local_inventory&lt;/code&gt;.</source>
          <target state="translated">请注意，生成的清单文件将上传到来宾VM的&lt;a href=&quot;ansible_local&quot;&gt; &lt;code&gt;tmp_path&lt;/code&gt; &lt;/a&gt;子目录中，例如 &lt;code&gt;/tmp/vagrant-ansible/inventory/vagrant_ansible_local_inventory&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a187f9b40ea2cdb8c0e4844bbad06a4a9b4e7020" translate="yes" xml:space="preserve">
          <source>Note that this does not work for every OS, so &lt;code&gt;vagrant up&lt;/code&gt; with the above settings, do a kernel upgrade, and do a &lt;code&gt;vagrant reload&lt;/code&gt;. If HGFS (synced folders) and everything appears to be working, great! If not, then read on...</source>
          <target state="translated">请注意，这不适用于所有操作系统，因此请 &lt;code&gt;vagrant up&lt;/code&gt; 于上述设置，进行内核升级，并 &lt;code&gt;vagrant reload&lt;/code&gt; 。如果HGFS（已同步的文件夹）并且一切正常，那就太好了！如果没有，请继续阅读...</target>
        </trans-unit>
        <trans-unit id="067d1ea5e6fdb0517b86932e6d67b85630f4951b" translate="yes" xml:space="preserve">
          <source>Note that when the &lt;code&gt;verbose&lt;/code&gt; option is enabled, the &lt;code&gt;ansible-playbook&lt;/code&gt; command used by Vagrant will be displayed.</source>
          <target state="translated">请注意，启用 &lt;code&gt;verbose&lt;/code&gt; 选项时，将显示Vagrant使用的 &lt;code&gt;ansible-playbook&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="660b70b0180040682f5a22718a39c86ea7b1e06b" translate="yes" xml:space="preserve">
          <source>Note that while you have to run a special command to list the non-primary subcommands, you do not have to do anything special to actually &lt;em&gt;run&lt;/em&gt; the non-primary subcommands. They're executed just like any other subcommand: &lt;code&gt;vagrant COMMAND&lt;/code&gt;.</source>
          <target state="translated">请注意，虽然您必须运行特殊命令以列出非主要子命令，但您不必执行任何特殊操作即可实际&lt;em&gt;运行&lt;/em&gt;非主要子命令。它们的执行就像其他子命令一样： &lt;code&gt;vagrant COMMAND&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a9ee32338df20dbb0b49795f42d4ca565b7db88" translate="yes" xml:space="preserve">
          <source>Note that you &lt;em&gt;will&lt;/em&gt; receive warnings that running Vagrant like this is not supported. It's true. It's not. You should listen to those warnings.</source>
          <target state="translated">请注意，您&lt;em&gt;将&lt;/em&gt;收到不支持运行Vagrant的警告。这是真的。不是。您应该听那些警告。</target>
        </trans-unit>
        <trans-unit id="02b025a1ff9efb7c38cbdeac89776fd9326ddc5c" translate="yes" xml:space="preserve">
          <source>Note that, unlike with synced folders, files or directories that are uploaded will not be kept in sync. Continuing with the example above, if you make further changes to your local ~/.gitconfig, they will not be immediately reflected in the copy you uploaded to the guest machine.</source>
          <target state="translated">请注意,与同步文件夹不同,上传的文件或目录不会保持同步。继续上面的例子,如果您对本地 ~/.gitconfig 做了进一步的修改,它们不会立即反映在您上传到客机的副本中。</target>
        </trans-unit>
        <trans-unit id="0dee0bbba2502191673fe08619687e25d6dc9512" translate="yes" xml:space="preserve">
          <source>Note the above is fairly complex and may be guest OS specific, but we document the rough idea of how to do it because it is a common question.</source>
          <target state="translated">请注意,上面的内容相当复杂,可能是客人的操作系统所特有的,但我们记录了如何做到这一点的大致思路,因为这是一个常见的问题。</target>
        </trans-unit>
        <trans-unit id="c402793aa54c9ef9717641922a9669adccd48aec" translate="yes" xml:space="preserve">
          <source>Note the share name at the end of calling &lt;code&gt;vagrant share --full&lt;/code&gt;, and give this to the person who wants to connect to your machine. They simply have to call &lt;code&gt;vagrant connect NAME&lt;/code&gt;. This will give them a static IP they can use to access your Vagrant environment.</source>
          <target state="translated">在调用 &lt;code&gt;vagrant share --full&lt;/code&gt; 的末尾记下共享名，并将其提供给想要连接到您的计算机的人。他们只需要致电 &lt;code&gt;vagrant connect NAME&lt;/code&gt; 。这将为他们提供一个静态IP，可用于访问您的Vagrant环境。</target>
        </trans-unit>
        <trans-unit id="a3127e09b87bc76889418d6f246689258a183972" translate="yes" xml:space="preserve">
          <source>Note: This option has no effect when the &lt;code&gt;inventory_path&lt;/code&gt; option is defined.</source>
          <target state="translated">注意：定义了 &lt;code&gt;inventory_path&lt;/code&gt; 选项时，此选项无效。</target>
        </trans-unit>
        <trans-unit id="18caed559d444597fe912163b66d871eaef62ecd" translate="yes" xml:space="preserve">
          <source>Note: if an absolute path is given, the &lt;code&gt;ansible_local&lt;/code&gt; provisioner will assume that it corresponds to the exact location on the guest system.</source>
          <target state="translated">注意：如果给出了绝对路径，则 &lt;code&gt;ansible_local&lt;/code&gt; 预配器将假定它对应于来宾系统上的确切位置。</target>
        </trans-unit>
        <trans-unit id="9c3befe7e22c8667bc957541f49b0ee79970b588" translate="yes" xml:space="preserve">
          <source>Notes:</source>
          <target state="translated">Notes:</target>
        </trans-unit>
        <trans-unit id="1cac5fbf5904ff4099cff7e205a4477956738a22" translate="yes" xml:space="preserve">
          <source>Now that the trigger is defined, running the &lt;strong&gt;destroy&lt;/strong&gt; command will fire off the defined trigger before Vagrant destroys the machine.</source>
          <target state="translated">既然已经定义了触发器，那么在Vagrant销毁计算机之前，运行&lt;strong&gt;destroy&lt;/strong&gt;命令将触发已定义的触发器。</target>
        </trans-unit>
        <trans-unit id="eb08a6211408dcd42186a6313f65bb79bbae65d3" translate="yes" xml:space="preserve">
          <source>Now, each component has a different API. Please visit the relevant section using the navigation to the left under &quot;Plugins&quot; to learn more about developing each type of component.</source>
          <target state="translated">现在,每个组件都有不同的API。请使用左侧导航访问 &quot;插件 &quot;下的相关部分,以了解更多关于开发每种类型组件的信息。</target>
        </trans-unit>
        <trans-unit id="d03211815f53b3c71ee90e0c516c4715cae898b6" translate="yes" xml:space="preserve">
          <source>Now, the &lt;code&gt;$vagrant&lt;/code&gt; variable in your Puppet manifests will equal &quot;1&quot;.</source>
          <target state="translated">现在，Puppet清单中的 &lt;code&gt;$vagrant&lt;/code&gt; 变量将等于&amp;ldquo; 1&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="0a514cf330b40ca1c53c6800bcbfada4be6cf93d" translate="yes" xml:space="preserve">
          <source>Of course, if any Ruby in your Vagrantfile outside of basic variable assignment makes you uncomfortable, you can use an actual script file, documented in the next section.</source>
          <target state="translated">当然,如果你的Vagrantfile中基本变量赋值之外的任何Ruby都让你感到不舒服,你可以使用一个实际的脚本文件,在下一节中进行记录。</target>
        </trans-unit>
        <trans-unit id="b2faee913d33c8d54f7369ab5e83dfbec2224ef5" translate="yes" xml:space="preserve">
          <source>Of course, sometimes you want custom merge logic. Let us say we wanted our widgets to be additive. We can override the &lt;code&gt;merge&lt;/code&gt; method to do this:</source>
          <target state="translated">当然，有时您需要自定义合并逻辑。假设我们希望我们的小部件具有可加性。我们可以重写 &lt;code&gt;merge&lt;/code&gt; 方法来做到这一点：</target>
        </trans-unit>
        <trans-unit id="83a889bca8008d648cbc7c0d22db4ce488b32df0" translate="yes" xml:space="preserve">
          <source>Of course, you are able to put and name your manifests whatever you would like. You can override both the directory where Puppet looks for manifests with &lt;code&gt;manifests_path&lt;/code&gt;, and the manifest file used as the entry-point with &lt;code&gt;manifest_file&lt;/code&gt;:</source>
          <target state="translated">当然，您可以随意放置并命名清单。您可以覆盖这两个地方木偶查找与清单目录 &lt;code&gt;manifests_path&lt;/code&gt; ，并用作入口点与清单文件 &lt;code&gt;manifest_file&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7776ee775f2891bc8aaacf873531bc4a78235438" translate="yes" xml:space="preserve">
          <source>Official Boxes</source>
          <target state="translated">官方包装盒</target>
        </trans-unit>
        <trans-unit id="5c2686a4906358c60506b8e81f6f3b0eec56b782" translate="yes" xml:space="preserve">
          <source>On &lt;strong&gt;Linux&lt;/strong&gt;:</source>
          <target state="translated">在&lt;strong&gt;Linux上&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="652493caf1f232197dd2717e02431e61a85c3ab5" translate="yes" xml:space="preserve">
          <source>On &lt;strong&gt;Mac OS X&lt;/strong&gt;:</source>
          <target state="translated">在&lt;strong&gt;Mac OS X上&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="a737a9c79b77694e9dfaead6a78d114c2410237c" translate="yes" xml:space="preserve">
          <source>On &lt;strong&gt;Windows&lt;/strong&gt;</source>
          <target state="translated">在&lt;strong&gt;Windows上&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bf9f5d225b5cdd8237e849f8aded21566dbd79b0" translate="yes" xml:space="preserve">
          <source>On Darwin hosts, such as Mac OS X, the additional arguments are added to the generated RDP configuration file. Since these files can contain multiple options with different spacing, you &lt;em&gt;must&lt;/em&gt; quote multiple arguments. For example:</source>
          <target state="translated">在Mac OS X等达尔文主机上，附加参数将添加到生成的RDP配置文件中。由于这些文件可以包含多个具有不同间距的选项，因此&lt;em&gt;必须&lt;/em&gt;引用多个参数。例如：</target>
        </trans-unit>
        <trans-unit id="e950a464438407bc3db7351e9229ed72e1693615" translate="yes" xml:space="preserve">
          <source>On Linux and Mac systems, this can be done by prepending the &lt;code&gt;vagrant&lt;/code&gt; command with an environmental variable declaration:</source>
          <target state="translated">在Linux和Mac系统上，这可以通过在 &lt;code&gt;vagrant&lt;/code&gt; 命令前添加环境变量声明来完成：</target>
        </trans-unit>
        <trans-unit id="d0e2cb88928f884cf17e6467f7b48e43952ddca5" translate="yes" xml:space="preserve">
          <source>On Linux and Mac, if you are saving the output to a file, you may need to redirect stderr and stdout using &lt;code&gt;&amp;amp;&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">在Linux和Mac上，如果要将输出保存到文件，则可能需要使用 &lt;code&gt;&amp;amp;&amp;gt;&lt;/code&gt; 重定向stderr和stdout ：</target>
        </trans-unit>
        <trans-unit id="8e9e689e79a1b2299bbd716cdfd99c9fc80b96c1" translate="yes" xml:space="preserve">
          <source>On POSIX platforms these certificates can be found at:</source>
          <target state="translated">在POSIX平台上,这些证书可以在以下地址找到。</target>
        </trans-unit>
        <trans-unit id="6b6e4e382ccd5721fd6411fcddce1b738035728e" translate="yes" xml:space="preserve">
          <source>On RedHat-like systems, the latest Ansible release is installed from the &lt;a href=&quot;http://fedoraproject.org/wiki/EPEL&quot;&gt;EPEL&lt;/a&gt; repository.</source>
          <target state="translated">在类似RedHat的系统上，从&lt;a href=&quot;http://fedoraproject.org/wiki/EPEL&quot;&gt;EPEL&lt;/a&gt;存储库中安装了最新的Ansible版本。</target>
        </trans-unit>
        <trans-unit id="8a62abb69755a504d48f2ade77691a5af3205435" translate="yes" xml:space="preserve">
          <source>On Ubuntu-like systems, the latest Ansible release is installed from the &lt;code&gt;ppa:ansible/ansible&lt;/code&gt; repository. The compatibility is maintained only for active long-term support (LTS) versions.</source>
          <target state="translated">在类似Ubuntu的系统上，最新的Ansible版本是从 &lt;code&gt;ppa:ansible/ansible&lt;/code&gt; 存储库安装的。仅对于活动的长期支持（LTS）版本维护兼容性。</target>
        </trans-unit>
        <trans-unit id="76476af42d248b68fb80718f98507fd54c9317bf" translate="yes" xml:space="preserve">
          <source>On Windows guests, this requires PowerShell 3.0 or higher.</source>
          <target state="translated">在Windows客户机上,这需要PowerShell 3.0或更高版本。</target>
        </trans-unit>
        <trans-unit id="8d0e60b7704f3b9163a3642055f83c510282f335" translate="yes" xml:space="preserve">
          <source>On Windows in PowerShell (outputs to log and screen):</source>
          <target state="translated">在Windows上的PowerShell中(输出到日志和屏幕)。</target>
        </trans-unit>
        <trans-unit id="2344acd3ab9f869011a68d9abd3d780ef6d284bc" translate="yes" xml:space="preserve">
          <source>On Windows platforms a service is created called &lt;code&gt;vagrant-vmware-utility&lt;/code&gt;. The service can be manually started using the services GUI (&lt;code&gt;services.msc&lt;/code&gt;) or by running the following command from a &lt;code&gt;cmd.exe&lt;/code&gt; in administrator mode:</source>
          <target state="translated">在Windows平台上，将创建一个名为 &lt;code&gt;vagrant-vmware-utility&lt;/code&gt; 的服务。可以使用服务GUI（ &lt;code&gt;services.msc&lt;/code&gt; ）手动启动该服务，也可以通过以管理员模式从 &lt;code&gt;cmd.exe&lt;/code&gt; 运行以下命令来启动该服务：</target>
        </trans-unit>
        <trans-unit id="9225e747f0a2b789bf5a37e3909c95176ccf9cd1" translate="yes" xml:space="preserve">
          <source>On Windows platforms these certificates can be found at:</source>
          <target state="translated">在Windows平台上,这些证书可以在以下地址找到。</target>
        </trans-unit>
        <trans-unit id="a6231aff14e87e4a3de2e8164bfe5ed7fe4347d8" translate="yes" xml:space="preserve">
          <source>On Windows, if a file is not accessed for some period of time, it may disconnect from the guest and prevent the guest from accessing the SMB-mounted share. To prevent this, the following command can be used in a superuser shell. Note that you should research if this is the right option for you.</source>
          <target state="translated">在Windows上,如果一段时间内没有访问文件,可能会断开与客人的连接,并阻止客人访问SMB安装的共享。为了防止这种情况,可以在超级用户shell中使用以下命令。注意,你应该研究一下这是否是适合你的选择。</target>
        </trans-unit>
        <trans-unit id="705befe7c23abe1b3d4088a55c8692fd96fd14b9" translate="yes" xml:space="preserve">
          <source>On Windows, multiple steps are required:</source>
          <target state="translated">在Windows上,需要多个步骤。</target>
        </trans-unit>
        <trans-unit id="cf58c8f6cef73feccef7a9ddf8c98218135b28d8" translate="yes" xml:space="preserve">
          <source>On Windows, rsync installed with Cygwin or MinGW will be detected by Vagrant and works well.</source>
          <target state="translated">在Windows上,安装了Cygwin或MinGW的rsync会被Vagrant检测到,并且工作良好。</target>
        </trans-unit>
        <trans-unit id="67ea0546a5dc80566bcbe86b909964292914dc23" translate="yes" xml:space="preserve">
          <source>On a simple vagrant project, the instance created will be named default.</source>
          <target state="translated">在一个简单的vagrant项目中,创建的实例将被命名为default。</target>
        </trans-unit>
        <trans-unit id="4443390d9be6392a5425989b735865130a6ef05d" translate="yes" xml:space="preserve">
          <source>On a system with machines running from different projects, you could use the id as listed in &lt;code&gt;vagrant global-status&lt;/code&gt;</source>
          <target state="translated">在具有从不同项目运行的机器的系统上，您可以使用 &lt;code&gt;vagrant global-status&lt;/code&gt; 中列出的ID</target>
        </trans-unit>
        <trans-unit id="4fcef729e70a50da58caca15e03a190a0cb850b2" translate="yes" xml:space="preserve">
          <source>On all platforms, remove the &lt;code&gt;~/.vagrant.d&lt;/code&gt; directory to delete the user data. When debugging, the Vagrant support team may ask you to remove this directory. Before removing this directory, please make a backup.</source>
          <target state="translated">在所有平台上，删除 &lt;code&gt;~/.vagrant.d&lt;/code&gt; 目录以删除用户数据。进行调试时，Vagrant支持团队可能会要求您删除此目录。删除此目录之前，请进行备份。</target>
        </trans-unit>
        <trans-unit id="c7d8c9bbcfc664a434a431312d9e05e2ae00cc27" translate="yes" xml:space="preserve">
          <source>On multi-machine setups, you can login to each vm using the name as displayed on &lt;code&gt;vagrant status&lt;/code&gt;</source>
          <target state="translated">在多计算机设置中，您可以使用 &lt;code&gt;vagrant status&lt;/code&gt; 显示的名称登录到每个虚拟机</target>
        </trans-unit>
        <trans-unit id="34afabb776125a02fce54da1cc8bec8880669a80" translate="yes" xml:space="preserve">
          <source>On the first &lt;code&gt;vagrant up&lt;/code&gt; that creates the environment, provisioning is run. If the environment was already created and the up is just resuming a machine or booting it up, they will not run unless the &lt;code&gt;--provision&lt;/code&gt; flag is explicitly provided.</source>
          <target state="translated">在创建环境的第一个 &lt;code&gt;vagrant up&lt;/code&gt; ，运行配置。如果已经创建了环境，并且启动只是恢复计算机或对其进行引导，则除非明确提供 &lt;code&gt;--provision&lt;/code&gt; 标志，否则它们将无法运行。</target>
        </trans-unit>
        <trans-unit id="1a33ff91c8827106a8b3cb9068d91d0661e61082" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;a href=&quot;https://docs.ansible.com/intro_installation.html#installing-the-control-machine&quot;&gt;Ansible must obviously be installed&lt;/a&gt; on your guest machine(s).</source>
          <target state="translated">另一方面，&lt;a href=&quot;https://docs.ansible.com/intro_installation.html#installing-the-control-machine&quot;&gt;显然必须&lt;/a&gt;在您的客户机上安装Ansible。</target>
        </trans-unit>
        <trans-unit id="39e4c06ec344123d76fe3220f0eef731e420ca3e" translate="yes" xml:space="preserve">
          <source>Once a plugin is installed, it will automatically be loaded by Vagrant. Plugins which cannot be loaded should not crash Vagrant. Instead, Vagrant will show an error message that a plugin failed to load.</source>
          <target state="translated">一旦安装了一个插件,它将自动被Vagrant加载。无法加载的插件不应该让Vagrant崩溃。相反,Vagrant会显示一个错误信息,即插件加载失败。</target>
        </trans-unit>
        <trans-unit id="7c9a7bb0f60a58d32a99620ee426aabbb705318f" translate="yes" xml:space="preserve">
          <source>Once a plugin is installed, you should refer to the plugin's documentation to see exactly how to use it. Plugins which add commands should be instantly available via &lt;code&gt;vagrant&lt;/code&gt;, provisioners should be available via &lt;code&gt;config.vm.provision&lt;/code&gt;, etc.</source>
          <target state="translated">安装插件后，您应该参考插件的文档以确切了解如何使用它。添加命令的插件应可通过 &lt;code&gt;vagrant&lt;/code&gt; 立即获得， &lt;code&gt;config.vm.provision&lt;/code&gt; 应可通过config.vm.provision等获得。</target>
        </trans-unit>
        <trans-unit id="5c8593feb53f90b4b2b16fc951e5e5988aea5c8e" translate="yes" xml:space="preserve">
          <source>Once a provider is installed, you can use it by calling &lt;code&gt;vagrant up&lt;/code&gt; with the &lt;code&gt;--provider&lt;/code&gt; flag. This will force Vagrant to use that specific provider. No other configuration is necessary!</source>
          <target state="translated">一旦安装了提供者，你可以通过调用使用它 &lt;code&gt;vagrant up&lt;/code&gt; 与 &lt;code&gt;--provider&lt;/code&gt; 标志。这将迫使Vagrant使用该特定提供程序。无需其他配置！</target>
        </trans-unit>
        <trans-unit id="234d9f90bb05df7a4b8ea228ddf6bb38000e5120" translate="yes" xml:space="preserve">
          <source>Once the directory structure for a RubyGem is setup, you will want to modify your Gemfile. Here is the basic structure of a Gemfile for Vagrant plugin development:</source>
          <target state="translated">一旦设置好RubyGem的目录结构,您就需要修改您的Gemfile。以下是Vagrant插件开发的Gemfile的基本结构。</target>
        </trans-unit>
        <trans-unit id="41b5284ddbd26f537de0610a37e46d1219377e7d" translate="yes" xml:space="preserve">
          <source>Once the provider is installed, usage is straightforward and simple, as you would expect with Vagrant. Read into the relevant subsections found in the navigation to the left for more information.</source>
          <target state="translated">一旦安装了该提供商,使用起来就像您对Vagrant的期望一样,简单明了。请阅读左侧导航中的相关子节,了解更多信息。</target>
        </trans-unit>
        <trans-unit id="78111d405fc157765c9e1c25aa8e20b4b8cbda48" translate="yes" xml:space="preserve">
          <source>One of Vagrant's biggest strength is gracefully handling errors and reporting them in human-readable ways. Vagrant has always strongly believed that if a user sees a stack trace, it is a bug. It is expected that plugins will behave the same way, and Vagrant provides strong error handling mechanisms to assist with this.</source>
          <target state="translated">Vagrant最大的优势之一是优雅地处理错误,并以人类可读的方式报告错误。Vagrant一直坚信,如果用户看到一个堆栈跟踪,那就是一个错误。预计插件也会有同样的行为,Vagrant提供了强大的错误处理机制来协助处理。</target>
        </trans-unit>
        <trans-unit id="c3221511596bae4a217f590b4246742d27a6cc84" translate="yes" xml:space="preserve">
          <source>One of the following settings is required when using the Docker provider:</source>
          <target state="translated">使用Docker提供者时,需要进行以下设置之一。</target>
        </trans-unit>
        <trans-unit id="7e36a373e5b0047d7036689b92744d87646c4bc0" translate="yes" xml:space="preserve">
          <source>Only files which are committed to the Git repository will be pushed to Heroku. Additionally, the current working branch is always pushed to the Heroku, even if it is not the &quot;master&quot; branch.</source>
          <target state="translated">只有提交到 Git 仓库的文件才会被推送到 Heroku。此外,当前的工作分支总是被推送到Heroku,即使它不是 &quot;主 &quot;分支。</target>
        </trans-unit>
        <trans-unit id="d6d4116e9e8c0455c2e494ea531f5010deb4987c" translate="yes" xml:space="preserve">
          <source>Open &quot;System Preferences&quot;</source>
          <target state="translated">打开 &quot;系统偏好设置&quot;</target>
        </trans-unit>
        <trans-unit id="a177c45323864b272426e4836c2f96c0b21b91ef" translate="yes" xml:space="preserve">
          <source>Optimizing Box Size</source>
          <target state="translated">优化箱体尺寸</target>
        </trans-unit>
        <trans-unit id="0c6c4102d4dfec3b1aa41117e0e344046c58a151" translate="yes" xml:space="preserve">
          <source>Optional</source>
          <target state="translated">Optional</target>
        </trans-unit>
        <trans-unit id="f05f8c87ffa8680c818675d1825fc86d52167c4b" translate="yes" xml:space="preserve">
          <source>Optionally, you can configure provisioners to run on every &lt;code&gt;up&lt;/code&gt; or &lt;code&gt;reload&lt;/code&gt;. They will only be not run if the &lt;code&gt;--no-provision&lt;/code&gt; flag is explicitly specified. To do this set the &lt;code&gt;run&lt;/code&gt; option to &quot;always&quot;, as shown below:</source>
          <target state="translated">（可选）您可以配置预配器以在每次 &lt;code&gt;up&lt;/code&gt; 或 &lt;code&gt;reload&lt;/code&gt; 上运行。仅当显式指定 &lt;code&gt;--no-provision&lt;/code&gt; 标志时，它们才会运行。为此，将 &lt;code&gt;run&lt;/code&gt; 选项设置为&amp;ldquo; always&amp;rdquo;，如下所示：</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="c67772bd3d8fc11593f73b0750824c440b963ddd" translate="yes" xml:space="preserve">
          <source>Options Reference</source>
          <target state="translated">选项参考</target>
        </trans-unit>
        <trans-unit id="a32f733554f1073ac7e80074cbb7830cb8a926ed" translate="yes" xml:space="preserve">
          <source>Options for direct box files</source>
          <target state="translated">直接盒文件的选择</target>
        </trans-unit>
        <trans-unit id="db375c791f734b22782405e261cd74601764bd99" translate="yes" xml:space="preserve">
          <source>Or you could use the name:</source>
          <target state="translated">或者你可以用这个名字。</target>
        </trans-unit>
        <trans-unit id="6e6a6f2086bb5fe5dbfd17d8d5f502d48759834b" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="translated">Other</target>
        </trans-unit>
        <trans-unit id="1bb7333303807ea65203eaea7c78ada490b61c4a" translate="yes" xml:space="preserve">
          <source>Other Configuration Options</source>
          <target state="translated">其他配置选项</target>
        </trans-unit>
        <trans-unit id="c3d3c4866430b9fb40dc785b255d6960dd731ff7" translate="yes" xml:space="preserve">
          <source>Other Notes</source>
          <target state="translated">其他说明</target>
        </trans-unit>
        <trans-unit id="04b0b62577accbcaf59e05940a29f4285007e510" translate="yes" xml:space="preserve">
          <source>Other Software</source>
          <target state="translated">其他软件</target>
        </trans-unit>
        <trans-unit id="4faeabd5fd6405bc6eb3cd2f9f06d910bf133318" translate="yes" xml:space="preserve">
          <source>Other commands, such as &lt;code&gt;vagrant up&lt;/code&gt;, operate on &lt;em&gt;every&lt;/em&gt; machine by default. So if you ran &lt;code&gt;vagrant up&lt;/code&gt;, Vagrant would bring up both the web and DB machine. You could also optionally be specific and say &lt;code&gt;vagrant up web&lt;/code&gt; or &lt;code&gt;vagrant up db&lt;/code&gt;.</source>
          <target state="translated">默认情况下，其他命令（例如 &lt;code&gt;vagrant up&lt;/code&gt; ）在&lt;em&gt;每台&lt;/em&gt;计算机上运行。因此，如果您运行了 &lt;code&gt;vagrant up&lt;/code&gt; ，Vagrant将同时启动Web和DB计算机。您也可以选择具体，并说 &lt;code&gt;vagrant up web&lt;/code&gt; 或 &lt;code&gt;vagrant up db&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ada6f3137a5717263c52f6705abaf804c43277ad" translate="yes" xml:space="preserve">
          <source>Other keys/values may be added to the metadata without issue. The value of the metadata file is passed opaquely into Vagrant and plugins can make use of it. At this point, Vagrant core does not use any other keys in this file.</source>
          <target state="translated">其他键/值也可以毫无问题地添加到元数据中。元数据文件的值以不透明的方式传递给Vagrant,插件可以使用它。在这一点上,Vagrant核心不使用该文件中的任何其他键。</target>
        </trans-unit>
        <trans-unit id="d329619378ef97d68fb8b3f668dd9d93afcb427c" translate="yes" xml:space="preserve">
          <source>Other operating systems like Windows will blue screen if you attempt to bring up a VirtualBox VM with Hyper-V enabled. Below are a couple of ways to ensure you can use Vagrant and VirtualBox if another hypervisor is present.</source>
          <target state="translated">如果您试图在启用Hyper-V的情况下启动VirtualBox虚拟机,其他操作系统(如Windows)将出现蓝屏。以下是一些方法,以确保您可以使用Vagrant和VirtualBox,如果其他管理程序存在。</target>
        </trans-unit>
        <trans-unit id="4de5e24dd0e733e251cccfd8a2a60b37b2bd2618" translate="yes" xml:space="preserve">
          <source>Other than the above, you are free to customize the base virtual machine as you see fit.</source>
          <target state="translated">除上述之外,您可以根据自己的需要自由定制基础虚拟机。</target>
        </trans-unit>
        <trans-unit id="ad7236b675bc68089ce5359759fecd273e8e0347" translate="yes" xml:space="preserve">
          <source>Other useful WSL related environment variables:</source>
          <target state="translated">其他有用的WSL相关环境变量。</target>
        </trans-unit>
        <trans-unit id="65dcb23497f37aa4b171e50414ace040d1cb3cc9" translate="yes" xml:space="preserve">
          <source>Otherwise, Vagrant reports an &quot;unexpected error&quot; that should be reported as a bug, and shows a full stack trace and other ugliness. Any stack traces should be considered bugs.</source>
          <target state="translated">否则,Vagrant会报告一个 &quot;意外的错误&quot;,而这个错误应该被报告为bug,并显示一个完整的堆栈痕迹和其他丑陋的东西。任何堆栈痕迹都应该被视为bug。</target>
        </trans-unit>
        <trans-unit id="dbdc27f2acd2a76460ec1f586e89d94052c60da7" translate="yes" xml:space="preserve">
          <source>Output Control</source>
          <target state="translated">输出控制</target>
        </trans-unit>
        <trans-unit id="bc533440e33f7e93c5572bc348f0389559438897" translate="yes" xml:space="preserve">
          <source>Overriding Configuration</source>
          <target state="translated">覆盖配置</target>
        </trans-unit>
        <trans-unit id="f4d5e691ede18cd7961678c6ed8e42848a1440d6" translate="yes" xml:space="preserve">
          <source>Overriding Provisioner Settings</source>
          <target state="translated">覆盖供应者设置</target>
        </trans-unit>
        <trans-unit id="6fbfe21e9d6c0cb71a8b5630e5336b1f690758ce" translate="yes" xml:space="preserve">
          <source>Overwrite host locale in ssh session</source>
          <target state="translated">在ssh会话中覆盖主机的locale</target>
        </trans-unit>
        <trans-unit id="434d4f3e37f9fd24ac5f26cdf46de308956d6b9d" translate="yes" xml:space="preserve">
          <source>PATH modifications</source>
          <target state="translated">PATH的修改</target>
        </trans-unit>
        <trans-unit id="7431e3df243c5be33cffa0b28ca2a76b93f0538c" translate="yes" xml:space="preserve">
          <source>Package</source>
          <target state="translated">Package</target>
        </trans-unit>
        <trans-unit id="a069a02ef0893a3eb85f0492ae17cad30b88e4f4" translate="yes" xml:space="preserve">
          <source>Package manager</source>
          <target state="translated">包装经理</target>
        </trans-unit>
        <trans-unit id="3a39b68c35be609fae3db651a70893a29f102145" translate="yes" xml:space="preserve">
          <source>Packaging</source>
          <target state="translated">Packaging</target>
        </trans-unit>
        <trans-unit id="4972a31646d4577a3c6b100e61eef03b6fb5e06f" translate="yes" xml:space="preserve">
          <source>Packaging the Box</source>
          <target state="translated">包装盒</target>
        </trans-unit>
        <trans-unit id="7c3587b27cacfeb72c385116e6c0d54e217ac9fe" translate="yes" xml:space="preserve">
          <source>Packaging the box into a &lt;code&gt;box&lt;/code&gt; file is provider-specific. Please refer to the provider-specific documentation for creating a base box. Some provider-specific guides are linked to towards the top of this page.</source>
          <target state="translated">将盒子包装到 &lt;code&gt;box&lt;/code&gt; 文件中是提供者特定的。请参考特定于提供商的文档以创建基本框。一些特定于提供商的指南已链接到此页面顶部。</target>
        </trans-unit>
        <trans-unit id="a0ee3b5b30760e86b572fdc1e791b89c89f9dfe6" translate="yes" xml:space="preserve">
          <source>Packer and Vagrant Cloud</source>
          <target state="translated">Packer和Vagrant云</target>
        </trans-unit>
        <trans-unit id="97f0897a6ef4a3de50a24c9ae9ce9a32fcfc437e" translate="yes" xml:space="preserve">
          <source>Pageant on Windows</source>
          <target state="translated">在Windows上的庆典活动</target>
        </trans-unit>
        <trans-unit id="fb7f75a523427d81e3000ff59131b5a7d5e28db6" translate="yes" xml:space="preserve">
          <source>Parallelization</source>
          <target state="translated">Parallelization</target>
        </trans-unit>
        <trans-unit id="ba72c3b9fe6c622444262b4b2e2befae473a4c14" translate="yes" xml:space="preserve">
          <source>Parsing Command-Line Options</source>
          <target state="translated">解析命令行选项</target>
        </trans-unit>
        <trans-unit id="b0caa7c9b059055d4aa9636c4bd36a48683e8e41" translate="yes" xml:space="preserve">
          <source>Password-less Sudo</source>
          <target state="translated">无需密码的Sudo</target>
        </trans-unit>
        <trans-unit id="c0329112004842c9af8fcbb64bd9457cf287ef3c" translate="yes" xml:space="preserve">
          <source>Perhaps Chef, Puppet, etc. but not strictly required.</source>
          <target state="translated">也许是厨师、木偶等,但不是严格要求。</target>
        </trans-unit>
        <trans-unit id="d5e939d67d81e71b3892782f02c41770bf16e5a8" translate="yes" xml:space="preserve">
          <source>Perhaps the easiest way to get started is with an inline script. An inline script is a script that is given to Vagrant directly within the Vagrantfile. An example is best:</source>
          <target state="translated">也许最简单的方法就是使用内联脚本。内联脚本是指在Vagrant文件中直接交给Vagrant的脚本。最好的例子是:在Vagrant文件中直接给Vagrant一个脚本。</target>
        </trans-unit>
        <trans-unit id="2e855404482b376925bdfe0a30aa2945596ebd1d" translate="yes" xml:space="preserve">
          <source>Peripherals (Audio, USB, etc.)</source>
          <target state="translated">外围设备(音频、USB等)</target>
        </trans-unit>
        <trans-unit id="95c8fd661d8ee0fab29935e6fff23a8aceb5a741" translate="yes" xml:space="preserve">
          <source>Persisting State</source>
          <target state="translated">持续存在的国家</target>
        </trans-unit>
        <trans-unit id="473e533f2cd92d3aef92708caa05ba1d8c70ec79" translate="yes" xml:space="preserve">
          <source>Pillar Data</source>
          <target state="translated">支柱数据</target>
        </trans-unit>
        <trans-unit id="6ba6ac708bd6d0215732f7f2f9aeaef0320ab964" translate="yes" xml:space="preserve">
          <source>Please &lt;a href=&quot;mailto:support@hashicorp.com?subject=Lost%20My%20License&amp;amp;body=Hello%20support!%20I%20seem%20to%20have%20misplaced%20my%20Vagrant%20VMware%20license.%20Could%20you%20please%20send%20it%20to%20me?%20Thanks!&quot;&gt;contact support&lt;/a&gt;. &lt;strong&gt;Note:&lt;/strong&gt; please contact support using the email address with which you made the original purchase. If you use an alternate email, you will be asked to verify that you are the owner of the requested license.</source>
          <target state="translated">请&lt;a href=&quot;mailto:support@hashicorp.com?subject=Lost%20My%20License&amp;amp;body=Hello%20support!%20I%20seem%20to%20have%20misplaced%20my%20Vagrant%20VMware%20license.%20Could%20you%20please%20send%20it%20to%20me?%20Thanks!&quot;&gt;联系支持&lt;/a&gt;。&lt;strong&gt;注意：&lt;/strong&gt;请使用您最初购买时使用的电子邮件地址与支持人员联系。如果您使用备用电子邮件，将要求您确认您是所请求许可证的所有者。</target>
        </trans-unit>
        <trans-unit id="36ec251c5ea8bb966c8d1c55cb37c8aca55f35e4" translate="yes" xml:space="preserve">
          <source>Please note - only one of the &lt;code&gt;script&lt;/code&gt; and &lt;code&gt;inline&lt;/code&gt; options may be specified in a single push definition.</source>
          <target state="translated">请注意- 在单个推送定义中只能指定 &lt;code&gt;script&lt;/code&gt; 和 &lt;code&gt;inline&lt;/code&gt; 选项之一。</target>
        </trans-unit>
        <trans-unit id="fec1b0ffd8cc7337d5b6f0aa2027c79fc1d4a597" translate="yes" xml:space="preserve">
          <source>Please note that, while the semantic versioning specification allows for more than three points and pre-release or beta versions, Vagrant boxes must be of the format &lt;code&gt;X.Y.Z&lt;/code&gt; where &lt;code&gt;X&lt;/code&gt;, &lt;code&gt;Y&lt;/code&gt;, and &lt;code&gt;Z&lt;/code&gt; are all positive integers.</source>
          <target state="translated">请注意，尽管语义版本控制规范允许使用三个以上的点以及预发行版本或Beta版本，但Vagrant框的格式必须为 &lt;code&gt;X.Y.Z&lt;/code&gt; ，其中 &lt;code&gt;X&lt;/code&gt; ， &lt;code&gt;Y&lt;/code&gt; 和 &lt;code&gt;Z&lt;/code&gt; 均为正整数。</target>
        </trans-unit>
        <trans-unit id="4c007c15cc4c7007fac0da40218b6754711cb262" translate="yes" xml:space="preserve">
          <source>Please refer to the documentation of any plugin you plan on using for more information on how to use it, but there is one common method for installation and plugin activation.</source>
          <target state="translated">请参考您计划使用的任何插件的文档以获得更多的使用信息,但有一种常见的安装和插件激活方法。</target>
        </trans-unit>
        <trans-unit id="8dc208f8ebe86aa9ee6a37d49d48058be5364bff" translate="yes" xml:space="preserve">
          <source>Plugin</source>
          <target state="translated">Plugin</target>
        </trans-unit>
        <trans-unit id="f8fddd14affbd6e7b24966e1233bbd717ce56306" translate="yes" xml:space="preserve">
          <source>Plugin Components</source>
          <target state="translated">插件组件</target>
        </trans-unit>
        <trans-unit id="bab7869f82336b2b8fec8abea5da2e47f5591c3e" translate="yes" xml:space="preserve">
          <source>Plugin Definition</source>
          <target state="translated">插件定义</target>
        </trans-unit>
        <trans-unit id="3f0df59e7109183a93e3af4fe1cc1780cc8bcc09" translate="yes" xml:space="preserve">
          <source>Plugin Development Basics</source>
          <target state="translated">插件开发基础知识</target>
        </trans-unit>
        <trans-unit id="ee252f533687021f38e1700e78546247c33dca26" translate="yes" xml:space="preserve">
          <source>Plugin Development: Commands</source>
          <target state="translated">插件开发。命令</target>
        </trans-unit>
        <trans-unit id="02604969cb33442328a1b710197a87350bd894ec" translate="yes" xml:space="preserve">
          <source>Plugin Development: Configuration</source>
          <target state="translated">插件开发:配置</target>
        </trans-unit>
        <trans-unit id="6d0ac9411a6ec5186cae8dcbed5fa8be2ee01116" translate="yes" xml:space="preserve">
          <source>Plugin Development: Guest Capabilities</source>
          <target state="translated">插件开发:访客能力</target>
        </trans-unit>
        <trans-unit id="df48d16b630a3d5e07bad2a258c0bb524982aa92" translate="yes" xml:space="preserve">
          <source>Plugin Development: Guests</source>
          <target state="translated">插件开发:客人</target>
        </trans-unit>
        <trans-unit id="103c1ee98ca4589ca3c32d6937530757166ea1f5" translate="yes" xml:space="preserve">
          <source>Plugin Development: Host Capabilities</source>
          <target state="translated">插件开发。主机能力</target>
        </trans-unit>
        <trans-unit id="319cee10563a88b20ab08f1879a4780a74d3639e" translate="yes" xml:space="preserve">
          <source>Plugin Development: Hosts</source>
          <target state="translated">插件开发:主机</target>
        </trans-unit>
        <trans-unit id="7de6187a5c98f26f94b034cbc9a0801c5d862f46" translate="yes" xml:space="preserve">
          <source>Plugin Development: Packaging &amp;amp; Distribution</source>
          <target state="translated">插件开发：包装和分销</target>
        </trans-unit>
        <trans-unit id="734ae1ad486b93fd90cf51ca00972ee99a90e037" translate="yes" xml:space="preserve">
          <source>Plugin Development: Providers</source>
          <target state="translated">插件开发:供应商</target>
        </trans-unit>
        <trans-unit id="3d7aff1076fa90e69bfa0b4f0a3f305293f81c3c" translate="yes" xml:space="preserve">
          <source>Plugin Development: Provisioners</source>
          <target state="translated">插件开发:供应者</target>
        </trans-unit>
        <trans-unit id="6bd60aa0fb93de8ff921f4e74d83d432d2e4f433" translate="yes" xml:space="preserve">
          <source>Plugin Expunge</source>
          <target state="translated">插件 Expunge</target>
        </trans-unit>
        <trans-unit id="c7e476efc8e8090b2f67f14fb7df8cebf9386a01" translate="yes" xml:space="preserve">
          <source>Plugin Install</source>
          <target state="translated">插件安装</target>
        </trans-unit>
        <trans-unit id="ba9cf073e0e5aa498b1993556249705b80813f4a" translate="yes" xml:space="preserve">
          <source>Plugin License</source>
          <target state="translated">插件许可证</target>
        </trans-unit>
        <trans-unit id="324d1f65829ade92eb7f39056623b0418849964e" translate="yes" xml:space="preserve">
          <source>Plugin List</source>
          <target state="translated">插件列表</target>
        </trans-unit>
        <trans-unit id="d1166e7f18a0a12093ee44388a40b106b016bf19" translate="yes" xml:space="preserve">
          <source>Plugin Repair</source>
          <target state="translated">插件修复</target>
        </trans-unit>
        <trans-unit id="31c7de47c4cb847e69ae36cec4f80e1baba22638" translate="yes" xml:space="preserve">
          <source>Plugin Uninstall</source>
          <target state="translated">插件卸载</target>
        </trans-unit>
        <trans-unit id="db03cd9834289da85f1f7cfd4cd57b0ea41dbbdd" translate="yes" xml:space="preserve">
          <source>Plugin Update</source>
          <target state="translated">插件更新</target>
        </trans-unit>
        <trans-unit id="307ed87b2d442accc9636618d31a7599857ae1cd" translate="yes" xml:space="preserve">
          <source>Plugin Usage</source>
          <target state="translated">插件使用</target>
        </trans-unit>
        <trans-unit id="ab2e26dd8b8868a3969cb3321e0c983c0d9d67d4" translate="yes" xml:space="preserve">
          <source>Plugins</source>
          <target state="translated">Plugins</target>
        </trans-unit>
        <trans-unit id="a21297e13e271b457dda87ec976c02dbaa7ea68e" translate="yes" xml:space="preserve">
          <source>Plugins are a great way to augment or change the behavior and functionality of Vagrant. Since plugins introduce additional external dependencies for users, they should be used as a last resort when attempting to do something with Vagrant.</source>
          <target state="translated">插件是增强或改变Vagrant行为和功能的好方法。由于插件为用户引入了额外的外部依赖性,因此,在尝试使用Vagrant做一些事情时,应将其作为最后的手段。</target>
        </trans-unit>
        <trans-unit id="f1fb48f5c9bd40c791679d6879fe76224124eeb8" translate="yes" xml:space="preserve">
          <source>Plugins are installed using &lt;code&gt;vagrant plugin install&lt;/code&gt;:</source>
          <target state="translated">插件是使用 &lt;code&gt;vagrant plugin install&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c9428d3a870f7ae1d463a5f95508eb1bc9f52fd7" translate="yes" xml:space="preserve">
          <source>Plugins are powerful, first-class citizens that extend Vagrant using a well-documented, stable API that can withstand major version upgrades.</source>
          <target state="translated">插件是强大的、一流的公民,它使用文档完善、稳定的API扩展Vagrant,可以承受主要的版本升级。</target>
        </trans-unit>
        <trans-unit id="fd65af3e6362231d5e2f118f057aa772776f1cdb" translate="yes" xml:space="preserve">
          <source>Plugins are written using &lt;a href=&quot;https://www.ruby-lang.org/en/&quot;&gt;Ruby&lt;/a&gt; and are packaged using &lt;a href=&quot;https://rubygems.org/&quot;&gt;RubyGems&lt;/a&gt;. Familiarity with Ruby is required, but the &lt;a href=&quot;packaging&quot;&gt;packaging and distribution&lt;/a&gt; section should help guide you to packaging your plugin into a RubyGem.</source>
          <target state="translated">插件使用&lt;a href=&quot;https://www.ruby-lang.org/en/&quot;&gt;Ruby&lt;/a&gt;编写，并使用&lt;a href=&quot;https://rubygems.org/&quot;&gt;RubyGems&lt;/a&gt;打包。需要熟悉Ruby，但是&amp;ldquo; &lt;a href=&quot;packaging&quot;&gt;打包和分发&amp;rdquo;&lt;/a&gt;部分应有助于指导您将插件打包到RubyGem中。</target>
        </trans-unit>
        <trans-unit id="de0086bb72406ab852d486463534f12f69a266fe" translate="yes" xml:space="preserve">
          <source>Plugins can also be defined as a Hash, which supports setting extra options for the plugins. When a Hash is used, the key is the name of the plugin, and the value is a Hash of options for the plugin. For example, to set an explicit version of a plugin to install:</source>
          <target state="translated">插件也可以定义为Hash,支持为插件设置额外的选项。使用Hash时,键是插件的名称,值是插件的选项Hash。例如,要设置一个插件的显式版本安装。</target>
        </trans-unit>
        <trans-unit id="52472969d71595139f5a602f938e6213ab30f1f0" translate="yes" xml:space="preserve">
          <source>Plugins can be updated by running &lt;code&gt;vagrant plugin update&lt;/code&gt;. This will update every installed plugin to the latest version. You can update a specific plugin by calling &lt;code&gt;vagrant plugin update NAME&lt;/code&gt;. Vagrant will output what plugins were updated and to what version.</source>
          <target state="translated">可以通过运行 &lt;code&gt;vagrant plugin update&lt;/code&gt; 来更新插件。这会将所有已安装的插件更新为最新版本。您可以通过调用 &lt;code&gt;vagrant plugin update NAME&lt;/code&gt; 来更新特定插件。Vagrant将输出哪些插件已更新以及什么版本。</target>
        </trans-unit>
        <trans-unit id="fe035157cda20b361ce30613e29b5d6f1a46b5fc" translate="yes" xml:space="preserve">
          <source>Port</source>
          <target state="translated">Port</target>
        </trans-unit>
        <trans-unit id="aa03256e7ba887e21466bc003b17f95d0430b412" translate="yes" xml:space="preserve">
          <source>Port Collisions and Correction</source>
          <target state="translated">港口碰撞和纠正</target>
        </trans-unit>
        <trans-unit id="704f26f8e4cbc7a78caa19d49f73f72fe0b9bbf9" translate="yes" xml:space="preserve">
          <source>Port collision auto-correction must be manually enabled for each forwarded port, since it is often surprising when it occurs and can lead the Vagrant user to think that the port was not properly forwarded. Enabling auto correct is easy:</source>
          <target state="translated">必须为每个转发的端口手动启用端口碰撞自动纠正功能,因为当发生碰撞时,往往会令人惊讶,并可能导致Vagrant用户认为端口没有正确转发。启用自动纠错很简单。</target>
        </trans-unit>
        <trans-unit id="b7489445f1de5c48435e194658861eb1dabcda4c" translate="yes" xml:space="preserve">
          <source>Port collision detection is always done. Vagrant will not allow you to define a forwarded port where the port on the host appears to be accepting traffic or connections.</source>
          <target state="translated">端口碰撞检测一直在进行。Vagrant不允许您定义一个转发端口,如果该端口在主机上出现接受流量或连接的情况。</target>
        </trans-unit>
        <trans-unit id="b307b88c84327b1804aee227595be53342245965" translate="yes" xml:space="preserve">
          <source>Portability</source>
          <target state="translated">Portability</target>
        </trans-unit>
        <trans-unit id="b2ef221e3193ecc713338eb88d02a0cab9694e2a" translate="yes" xml:space="preserve">
          <source>Possible values:</source>
          <target state="translated">可能的数值:</target>
        </trans-unit>
        <trans-unit id="5c34f11767e3344552d1ea1633a63119f696d0a7" translate="yes" xml:space="preserve">
          <source>PowerShell</source>
          <target state="translated">PowerShell</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="6cef0f331ce37a13812be23711f420af6d599c45" translate="yes" xml:space="preserve">
          <source>Preseeding Keys</source>
          <target state="translated">播种前的关键</target>
        </trans-unit>
        <trans-unit id="09f5c117cde18bc50ebc7371af87d35329150eb9" translate="yes" xml:space="preserve">
          <source>Preseeding keys is the recommended way to handle provisioning using a master. On a machine with salt installed, run &lt;code&gt;salt-key --gen-keys=[minion_id]&lt;/code&gt; to generate the necessary .pub and .pem files</source>
          <target state="translated">建议使用预种子密钥来使用主密钥处理预配密钥。在安装了Salt的计算机上，运行 &lt;code&gt;salt-key --gen-keys=[minion_id]&lt;/code&gt; 生成必要的.pub和.pem文件</target>
        </trans-unit>
        <trans-unit id="db469a5de59cb236628c0b3fc79fd6baf7bd2fd3" translate="yes" xml:space="preserve">
          <source>Preventing Idle Disconnects</source>
          <target state="translated">防止空转断线</target>
        </trans-unit>
        <trans-unit id="2333e0cdd7d35225095e81bcd769c5bbf621cb54" translate="yes" xml:space="preserve">
          <source>Prior to Vagrant 1.7.3, the &lt;code&gt;ansible_ssh_private_key_file&lt;/code&gt; variable was not set in generated inventory, but passed as command line argument to &lt;code&gt;ansible-playbook&lt;/code&gt; command.</source>
          <target state="translated">在Vagrant 1.7.3之前，未在生成的清单中设置 &lt;code&gt;ansible_ssh_private_key_file&lt;/code&gt; 变量，但将其作为命令行参数传递给 &lt;code&gt;ansible-playbook&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="90af8e5bcc607eda89942f96635ba15e0fcd4243" translate="yes" xml:space="preserve">
          <source>Prior to copying &lt;code&gt;~/path/to/host/folder&lt;/code&gt; to the guest machine:</source>
          <target state="translated">在将 &lt;code&gt;~/path/to/host/folder&lt;/code&gt; 到来宾计算机之前：</target>
        </trans-unit>
        <trans-unit id="2f272a8f27cba713af722d5ac783d20e42e66e4e" translate="yes" xml:space="preserve">
          <source>Prior to developing a provider you should also be familiar with how &lt;a href=&quot;../providers/index&quot;&gt;providers work&lt;/a&gt; from a user standpoint.</source>
          <target state="translated">在开发提供程序之前，您还应该从用户的角度熟悉提供&lt;a href=&quot;../providers/index&quot;&gt;程序的工作方式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f23b26e92b82fe43e39c137dc6f114f2c5985ba" translate="yes" xml:space="preserve">
          <source>Prior to packaging up a box, you should shrink the hard drives as much as possible. This can be done with &lt;code&gt;vmware-vdiskmanager&lt;/code&gt; which is usually found in &lt;code&gt;/Applications/VMware Fusion.app/Contents/Library&lt;/code&gt; for VMware Fusion. You first want to defragment then shrink the drive. Usage shown below:</source>
          <target state="translated">在包装盒子之前，应尽可能缩小硬盘驱动器。可以使用 &lt;code&gt;vmware-vdiskmanager&lt;/code&gt; &lt;code&gt;/Applications/VMware Fusion.app/Contents/Library&lt;/code&gt; 完成此操作，该操作通常在/ Applications / VMware Fusion.app/Contents/Library for VMware Fusion中找到。您首先要进行碎片整理，然后再缩小驱动器。用法如下图所示：</target>
        </trans-unit>
        <trans-unit id="86e1c1e2b3aa58e45922e47183c525cbe0748ff7" translate="yes" xml:space="preserve">
          <source>Prior to reading this page, please understand the &lt;a href=&quot;../boxes/format&quot;&gt;basics of the box file format&lt;/a&gt;.</source>
          <target state="translated">在阅读此页之前，请了解&lt;a href=&quot;../boxes/format&quot;&gt;Box文件格式&lt;/a&gt;的基本知识。</target>
        </trans-unit>
        <trans-unit id="ab62748789ab9d75c220eba574819e6450ecd878" translate="yes" xml:space="preserve">
          <source>Prior to reading this, you should read the &lt;a href=&quot;../boxes/base&quot;&gt;general guide to creating base boxes&lt;/a&gt;. Actually, it would probably be most useful to keep this open in a separate tab as you may be referencing it frequently while creating a base box. That page contains important information about common software to install on the box.</source>
          <target state="translated">在阅读本文之前，您应该阅读&lt;a href=&quot;../boxes/base&quot;&gt;创建基本框&lt;/a&gt;的一般指南。实际上，将其保持在单独的选项卡中可能是最有用的，因为在创建基本框时您可能经常引用它。该页面包含有关要在包装盒上安装的常用软件的重要信息。</target>
        </trans-unit>
        <trans-unit id="0c8292e0cc9795dca66f5c0895032fc74cb0fd1b" translate="yes" xml:space="preserve">
          <source>Private API</source>
          <target state="translated">私人API</target>
        </trans-unit>
        <trans-unit id="bf27e3999f207d985edb9e85dcaa495381ecf761" translate="yes" xml:space="preserve">
          <source>Private Networks</source>
          <target state="translated">私人网络</target>
        </trans-unit>
        <trans-unit id="b7f12468d75970828a181ace5b309d16ff80c6fc" translate="yes" xml:space="preserve">
          <source>Private and public networks are not currently supported.</source>
          <target state="translated">目前不支持私人和公共网络。</target>
        </trans-unit>
        <trans-unit id="cd0f79d96bf2df445ecf882b250d6dfdffa8c9c0" translate="yes" xml:space="preserve">
          <source>Probably the most important concept to understand when building a provider is the provider &quot;action&quot; interface. It is the secret sauce that makes providers do the magic they do.</source>
          <target state="translated">在构建提供者时,可能最需要理解的概念是提供者的 &quot;动作 &quot;接口。它是使提供者发挥其魔力的秘诀。</target>
        </trans-unit>
        <trans-unit id="6725719e977440da2029fd6edd3b7b5c53042827" translate="yes" xml:space="preserve">
          <source>Provider Class</source>
          <target state="translated">提供商类</target>
        </trans-unit>
        <trans-unit id="d31ae5331579aedbf72cf4312d16267433922d59" translate="yes" xml:space="preserve">
          <source>Provider Configuration</source>
          <target state="translated">提供商配置</target>
        </trans-unit>
        <trans-unit id="97fabe3cdfaf32f1f4ed6e495f3d8eb64199e775" translate="yes" xml:space="preserve">
          <source>Provider Installation</source>
          <target state="translated">供应商安装</target>
        </trans-unit>
        <trans-unit id="e196db10317c87a3357904acf68cbefa4828b0b7" translate="yes" xml:space="preserve">
          <source>Provider for an installed box.</source>
          <target state="translated">安装箱的提供者。</target>
        </trans-unit>
        <trans-unit id="afda9c2e56adab1d963448b44cfaa7f310379db4" translate="yes" xml:space="preserve">
          <source>Provider settings</source>
          <target state="translated">供应商设置</target>
        </trans-unit>
        <trans-unit id="ebfb2c881ecce0c77123bd453d848460606725d3" translate="yes" xml:space="preserve">
          <source>Provider-specific configuration is a special case of a normal &lt;a href=&quot;configuration&quot;&gt;configuration plugin&lt;/a&gt;. When defining the configuration component, name the configuration the same as the provider, and as a second parameter, specify &lt;code&gt;:provider&lt;/code&gt;, like so:</source>
          <target state="translated">提供程序特定的配置是普通&lt;a href=&quot;configuration&quot;&gt;配置插件的&lt;/a&gt;一种特殊情况。在定义配置组件时，将配置名称与提供者相同，并作为第二个参数指定 &lt;code&gt;:provider&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="de007228736823833db83d1d55989fb6f0b9c744" translate="yes" xml:space="preserve">
          <source>Provider-specific guides for creating base boxes are linked below:</source>
          <target state="translated">创建基础箱的特定提供者指南链接如下。</target>
        </trans-unit>
        <trans-unit id="87b7c08baed1c8e93db95b79bcdca55b631dd7bb" translate="yes" xml:space="preserve">
          <source>Providers</source>
          <target state="translated">Providers</target>
        </trans-unit>
        <trans-unit id="81826c7fd6a97a80a9ec18c5968832b525dc91f3" translate="yes" xml:space="preserve">
          <source>Providers are defined with the &lt;code&gt;provider&lt;/code&gt; method, which takes a single argument specifying the name of the provider. This is the name that is used with &lt;code&gt;vagrant up&lt;/code&gt; to specify the provider. So in the case above, our provider would be used by calling &lt;code&gt;vagrant up --provider=my_cloud&lt;/code&gt;.</source>
          <target state="translated">提供程序是使用 &lt;code&gt;provider&lt;/code&gt; 方法定义的，该方法采用一个指定提供程序名称的参数。这是与 &lt;code&gt;vagrant up&lt;/code&gt; 一起使用以指定提供者的名称。因此，在上述情况下，我们的提供程序将通过调用 &lt;code&gt;vagrant up --provider=my_cloud&lt;/code&gt; 来使用。</target>
        </trans-unit>
        <trans-unit id="bafcc28c6a07f4f81684b1b939d98e87500cb5b8" translate="yes" xml:space="preserve">
          <source>Providers are distributed as Vagrant plugins, and are therefore installed using &lt;a href=&quot;../plugins/usage&quot;&gt;standard plugin installation steps&lt;/a&gt;. After installing a plugin which contains a provider, the provider should immediately be available.</source>
          <target state="translated">提供程序作为Vagrant插件分发，因此使用&lt;a href=&quot;../plugins/usage&quot;&gt;标准插件安装步骤&lt;/a&gt;进行安装。安装包含提供程序的插件后，该提供程序应立即可用。</target>
        </trans-unit>
        <trans-unit id="bfbec2e239b93896be15f1d19e981ac392769212" translate="yes" xml:space="preserve">
          <source>Providers can also override non-provider specific configuration, such as &lt;code&gt;config.vm.box&lt;/code&gt; and any other Vagrant configuration. This is done by specifying a second argument to &lt;code&gt;config.vm.provider&lt;/code&gt;. This argument is just like the normal &lt;code&gt;config&lt;/code&gt;, so set any settings you want, and they will be overridden only for that provider.</source>
          <target state="translated">提供程序还可以覆盖非提供程序特定的配置，例如 &lt;code&gt;config.vm.box&lt;/code&gt; 和任何其他Vagrant配置。这是通过为 &lt;code&gt;config.vm.provider&lt;/code&gt; 指定第二个参数来完成的。此参数就像普通的 &lt;code&gt;config&lt;/code&gt; 一样，因此请设置所需的任何设置，它们只会被该提供程序覆盖。</target>
        </trans-unit>
        <trans-unit id="464bb650a5bd71760d1c40fbed79a29297ab06ea" translate="yes" xml:space="preserve">
          <source>Providers can explicitly enable parallelization by setting the &lt;code&gt;parallel&lt;/code&gt; option on the provider component:</source>
          <target state="translated">提供者可以通过在提供者组件上设置 &lt;code&gt;parallel&lt;/code&gt; 选项来显式启用并行化：</target>
        </trans-unit>
        <trans-unit id="98eb52aeceb6540964107c12578678f0dce94a57" translate="yes" xml:space="preserve">
          <source>Providers: Docker</source>
          <target state="translated">提供商。Docker</target>
        </trans-unit>
        <trans-unit id="f0a94d7cf3630522cc12abafbd85812b55bc794f" translate="yes" xml:space="preserve">
          <source>Providers: Hyper-V</source>
          <target state="translated">提供商。Hyper-V</target>
        </trans-unit>
        <trans-unit id="811e367de77dc79e4ce6fc3a9ccbceeeca8d63f1" translate="yes" xml:space="preserve">
          <source>Providers: VMware</source>
          <target state="translated">提供商。VMware</target>
        </trans-unit>
        <trans-unit id="dc191b3de3b8fe89498371ad4948eb76f8440513" translate="yes" xml:space="preserve">
          <source>Providers: VirtualBox</source>
          <target state="translated">提供商。VirtualBox</target>
        </trans-unit>
        <trans-unit id="e11d5b69e044e4357dad317ba5efc7f85c9d36f9" translate="yes" xml:space="preserve">
          <source>Provision</source>
          <target state="translated">Provision</target>
        </trans-unit>
        <trans-unit id="492cae57087b66cc496ea79c050d81eea04ad72f" translate="yes" xml:space="preserve">
          <source>Provisioner Class</source>
          <target state="translated">临时工类</target>
        </trans-unit>
        <trans-unit id="8d4d857872521fd473a0c7009fe575e6cb8bf85f" translate="yes" xml:space="preserve">
          <source>Provisioners are defined with the &lt;code&gt;provisioner&lt;/code&gt; method, which takes a single argument specifying the name of the provisioner. This is the name that used with &lt;code&gt;config.vm.provision&lt;/code&gt; when configuring and enabling the provisioner. So in the case above, the provisioner would be enabled using &lt;code&gt;config.vm.provision :custom&lt;/code&gt;.</source>
          <target state="translated">置备与定义 &lt;code&gt;provisioner&lt;/code&gt; 方法，它只有一个参数指定供应者的名称。这是在配置和启用配置程序时与 &lt;code&gt;config.vm.provision&lt;/code&gt; 一起使用的名称。因此，在上述情况下，将使用 &lt;code&gt;config.vm.provision :custom&lt;/code&gt; 启用预配器。</target>
        </trans-unit>
        <trans-unit id="47b98180bd9e07247e4e274945344f5920afaf97" translate="yes" xml:space="preserve">
          <source>Provisioners are run in three cases: the initial &lt;code&gt;vagrant up&lt;/code&gt;, &lt;code&gt;vagrant
provision&lt;/code&gt;, and &lt;code&gt;vagrant reload --provision&lt;/code&gt;.</source>
          <target state="translated">预配置程序在以下三种情况下运行：初始 &lt;code&gt;vagrant up&lt;/code&gt; ， &lt;code&gt;vagrant provision&lt;/code&gt; &lt;code&gt;vagrant reload --provision&lt;/code&gt; 和流浪汉重新加载--provision。</target>
        </trans-unit>
        <trans-unit id="98f9726c6c5109e4119ddf49f56ee80453e32c43" translate="yes" xml:space="preserve">
          <source>Provisioners can also be named (since 1.7.0). These names are used cosmetically for output as well as overriding provisioner settings (covered further below). An example of naming provisioners is shown below:</source>
          <target state="translated">供应者也可以被命名(从1.7.0开始)。这些名称用于输出和覆盖供应者设置(下文将进一步介绍)。命名供应者的例子如下所示。</target>
        </trans-unit>
        <trans-unit id="d7e44aa0ef53e65dff70eceb38ca6eddcd17f08d" translate="yes" xml:space="preserve">
          <source>Provisioners in Vagrant allow you to automatically install software, alter configurations, and more on the machine as part of the &lt;code&gt;vagrant up&lt;/code&gt; process.</source>
          <target state="translated">Vagrant中的预配器允许您在计算机上自动安装软件，更改配置等，作为Vagrant &lt;code&gt;vagrant up&lt;/code&gt; 过程的一部分。</target>
        </trans-unit>
        <trans-unit id="c9d0ab3f3dac367451a69c7589a11027c9b8cceb" translate="yes" xml:space="preserve">
          <source>Provisioning</source>
          <target state="translated">Provisioning</target>
        </trans-unit>
        <trans-unit id="6c2981376fcc7cbabad8af823f2bbd5a5a0bfc25" translate="yes" xml:space="preserve">
          <source>Provisioning happens at certain points during the lifetime of your Vagrant environment:</source>
          <target state="translated">在您的Vagrant环境的生命周期中,供应发生在某些点上。</target>
        </trans-unit>
        <trans-unit id="80cd06b2b3a66f236079ad025921493ac3892ff0" translate="yes" xml:space="preserve">
          <source>Pruning Old Versions</source>
          <target state="translated">修剪旧版本</target>
        </trans-unit>
        <trans-unit id="55f077c3c0fe0e237e0e259799e5d62cfbff49c3" translate="yes" xml:space="preserve">
          <source>Public Action Hooks</source>
          <target state="translated">公共行动钩</target>
        </trans-unit>
        <trans-unit id="e1726ddf0953596aff1729b6129e2cf83bfec9a9" translate="yes" xml:space="preserve">
          <source>Public Networks</source>
          <target state="translated">公共网络</target>
        </trans-unit>
        <trans-unit id="6e59895f1ba701338ff48b4e694b91bae92ccd8f" translate="yes" xml:space="preserve">
          <source>Publicly available base boxes usually use a root password of &quot;vagrant&quot; to keep things easy.</source>
          <target state="translated">公用的基础箱通常使用 &quot;流浪者 &quot;的根密码,以方便。</target>
        </trans-unit>
        <trans-unit id="658593a6d1dd741f6dac3a78e28e11fe8141daad" translate="yes" xml:space="preserve">
          <source>Pulling Images</source>
          <target state="translated">拉动图像</target>
        </trans-unit>
        <trans-unit id="5c95072045d7b4044d40a3d0b5f2652f10732e44" translate="yes" xml:space="preserve">
          <source>Puppet Agent Provisioner</source>
          <target state="translated">Puppet Agent Provisioner</target>
        </trans-unit>
        <trans-unit id="5e3d6cd5dc4ec95b8c861dcd091a5acee982217f" translate="yes" xml:space="preserve">
          <source>Puppet Apply Provisioner</source>
          <target state="translated">Puppet Apply Provisioner</target>
        </trans-unit>
        <trans-unit id="db5f087977c6a9a2503928e7773a032dde006e96" translate="yes" xml:space="preserve">
          <source>Puppet supports a lot of command-line flags. Basically any setting can be overridden on the command line. To give you the most power and flexibility possible with Puppet, Vagrant allows you to specify custom command line flags to use:</source>
          <target state="translated">Puppet支持很多命令行标志。基本上任何设置都可以在命令行上被覆盖。为了让您在使用Puppet时获得最大的权力和灵活性,Vagrant允许您指定使用自定义命令行标志。</target>
        </trans-unit>
        <trans-unit id="8f7f57b519fc9bc5683b4808641d3b33f53b6f9d" translate="yes" xml:space="preserve">
          <source>Push</source>
          <target state="translated">Push</target>
        </trans-unit>
        <trans-unit id="3aba153a826fad341c4a3f6c817541ab2b7108c0" translate="yes" xml:space="preserve">
          <source>Pushes are defined in an application's &lt;code&gt;Vagrantfile&lt;/code&gt; and are invoked using the &lt;code&gt;vagrant push&lt;/code&gt; subcommand. Much like other components of Vagrant, each Vagrant Push plugin has its own configuration options. Please consult the documentation for your Vagrant Push plugin for more information. Here is an example Vagrant Push configuration section in a &lt;code&gt;Vagrantfile&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;vagrant push&lt;/code&gt; 在应用程序的 &lt;code&gt;Vagrantfile&lt;/code&gt; 中定义，并使用vagrant push子命令调用。与Vagrant的其他组件非常相似，每个Vagrant Push插件都有其自己的配置选项。有关更多信息，请查阅您的Vagrant Push插件的文档。这是 &lt;code&gt;Vagrantfile&lt;/code&gt; 中的示例Vagrant Push配置部分：</target>
        </trans-unit>
        <trans-unit id="f0f69dce73b963d04f4ba12ee684c0616f8c98e7" translate="yes" xml:space="preserve">
          <source>RDP</source>
          <target state="translated">RDP</target>
        </trans-unit>
        <trans-unit id="fc1eeee3f495cf79c779bf144f2937ef64153e02" translate="yes" xml:space="preserve">
          <source>RSync</source>
          <target state="translated">RSync</target>
        </trans-unit>
        <trans-unit id="15f6e6d43cbef5ca9fa668154a608b3495422a38" translate="yes" xml:space="preserve">
          <source>Raw Arguments</source>
          <target state="translated">原始论据</target>
        </trans-unit>
        <trans-unit id="c85a610bb37e0881258e5404509513b77f8790f5" translate="yes" xml:space="preserve">
          <source>Raw Contents</source>
          <target state="translated">原始内容</target>
        </trans-unit>
        <trans-unit id="ac73f42f8f25a73f0c7f2505ddbe94dfd252ced1" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;basic_usage&quot;&gt;basic usage&lt;/a&gt; page to get started with synced folders.</source>
          <target state="translated">阅读&amp;ldquo; &lt;a href=&quot;basic_usage&quot;&gt;基本用法&amp;rdquo;&lt;/a&gt;页面以开始同步文件夹。</target>
        </trans-unit>
        <trans-unit id="1aa764ad41643683e1d3140f17b530571e4ba462" translate="yes" xml:space="preserve">
          <source>Recent versions of Windows 10 now include Windows Subsystem for Linux (WSL) as an optional Windows feature. The WSL supports running a Linux environment within Windows. Vagrant support for WSL is still in development and should be considered &lt;em&gt;beta&lt;/em&gt;.</source>
          <target state="translated">Windows 10的最新版本现在包括Windows子系统Linux（WSL）作为可选的Windows功能。WSL支持在Windows中运行Linux环境。对WSL的无家可归支持仍在开发中，应视为&lt;em&gt;beta版&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c49348a6d1fadb5cfd172c2822072cd7053f246a" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;../provisioning/shell&quot;&gt;Shell Provisioner&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;../provisioning/shell&quot;&gt;Shell Provisioner&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="26ca26ff7b3f63d0af3b21a798ea67d7e25eab3d" translate="yes" xml:space="preserve">
          <source>Relative URLs to assets is generally a best practice in general, so you should do this anyways!</source>
          <target state="translated">一般来说,资产的相对URL是最好的做法,所以无论如何你都应该这样做!</target>
        </trans-unit>
        <trans-unit id="d9854d8707c8fa6a360bcf2236f94aa7e0caee44" translate="yes" xml:space="preserve">
          <source>Relative paths, such as above, are expanded relative to the location of the root Vagrantfile for your project. Absolute paths can also be used, as well as shortcuts such as &lt;code&gt;~&lt;/code&gt; (home directory) and &lt;code&gt;..&lt;/code&gt; (parent directory).</source>
          <target state="translated">相对路径（例如上述路径）相对于项目的根Vagrantfile的位置进行了扩展。也可以使用绝对路径，以及 &lt;code&gt;~&lt;/code&gt; （主目录）和 &lt;code&gt;..&lt;/code&gt; （父目录）之类的快捷方式。</target>
        </trans-unit>
        <trans-unit id="cce7155371fc26686b89c7452337d8419692f31e" translate="yes" xml:space="preserve">
          <source>Reload</source>
          <target state="translated">Reload</target>
        </trans-unit>
        <trans-unit id="8986049e3449958932288d93a0a5a92062884ab2" translate="yes" xml:space="preserve">
          <source>Remember, some providers do not require any provider-specific configuration and work directly out of the box. Provider-specific configuration is meant as a way to expose more options to get the most of the provider of your choice. It is not meant as a roadblock to running against a specific provider.</source>
          <target state="translated">请记住,有些提供商不需要任何特定提供商的配置,直接开箱即用。提供商特定的配置是为了暴露更多的选择,以获得您所选择的提供商的最大效益。它并不意味着是与特定提供商竞争的障碍。</target>
        </trans-unit>
        <trans-unit id="148a74f77d346d65cdbbe9927734bd80d0fcf204" translate="yes" xml:space="preserve">
          <source>Remember, this will &lt;em&gt;override&lt;/em&gt; the run list specified on the Chef server itself.</source>
          <target state="translated">请记住，这将&lt;em&gt;覆盖&lt;/em&gt;在Chef服务器本身上指定的运行列表。</target>
        </trans-unit>
        <trans-unit id="f3631961b84238782dfbca29f29dc871472ad623" translate="yes" xml:space="preserve">
          <source>Remote path:</source>
          <target state="translated">远程路径:</target>
        </trans-unit>
        <trans-unit id="277ecb7ad28c11b3339645a4c038b688dcabff73" translate="yes" xml:space="preserve">
          <source>Remove any extraneous files from the &quot;vmwarevm&quot; folder and package it. Be sure to compress the tar with gzip (done below in a single command) since VMware hard disks are not compressed by default.</source>
          <target state="translated">删除 &quot;vmwarevm &quot;文件夹中的无关文件,并将其打包。确保用gzip压缩tar(下面用一条命令完成),因为VMware硬盘默认没有压缩。</target>
        </trans-unit>
        <trans-unit id="34e79d75b1aee35755f29ea60797d9ebfe30a667" translate="yes" xml:space="preserve">
          <source>Removing User Data</source>
          <target state="translated">删除用户数据</target>
        </trans-unit>
        <trans-unit id="5687c325f0cb7c1747d216210c11dfa6e4ea62a2" translate="yes" xml:space="preserve">
          <source>Removing the Vagrant Program</source>
          <target state="translated">移除流浪者程序</target>
        </trans-unit>
        <trans-unit id="93a5deaa42c608bca4a8468a329a55eede7b9e98" translate="yes" xml:space="preserve">
          <source>Removing the Vagrant program will remove the &lt;code&gt;vagrant&lt;/code&gt; binary and all dependencies from your machine. After uninstalling the program, you can always &lt;a href=&quot;index&quot;&gt;reinstall&lt;/a&gt; again using standard methods.</source>
          <target state="translated">拆除流浪程序会删除 &lt;code&gt;vagrant&lt;/code&gt; 二进制和设备的所有依存关系。卸载程序后，您始终可以使用标准方法&lt;a href=&quot;index&quot;&gt;重新安装&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc3bb9c176b0543385fc104ce0b47df95d9fdcd7" translate="yes" xml:space="preserve">
          <source>Removing the user data will remove all &lt;a href=&quot;../boxes&quot;&gt;boxes&lt;/a&gt;, &lt;a href=&quot;../plugins/index&quot;&gt;plugins&lt;/a&gt;, license files, and any stored state that may be used by Vagrant. Removing the user data effectively makes Vagrant think it is a fresh install.</source>
          <target state="translated">删除用户数据将删除所有&lt;a href=&quot;../boxes&quot;&gt;框&lt;/a&gt;，&lt;a href=&quot;../plugins/index&quot;&gt;插件&lt;/a&gt;，许可证文件以及Vagrant可能使用的任何存储状态。有效地删除用户数据使Vagrant认为这是全新安装。</target>
        </trans-unit>
        <trans-unit id="f6d254d0fbdf92295435966d020f5f3bbc2077e7" translate="yes" xml:space="preserve">
          <source>Replace &quot;USERNAME&quot; and &quot;PASSWORD&quot; with your SMB username and password.</source>
          <target state="translated">将 &quot;USERNAME &quot;和 &quot;PASSWORD &quot;替换为你的SMB用户名和密码。</target>
        </trans-unit>
        <trans-unit id="eed6bfb41051ed5b74447340f3c2e29d11e99a7c" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="translated">Required</target>
        </trans-unit>
        <trans-unit id="0fa35b675bd94c1149907303408d74ebbeff8985" translate="yes" xml:space="preserve">
          <source>Restart your machine and try running vagrant again.</source>
          <target state="translated">重新启动您的机器并尝试再次运行vagrant。</target>
        </trans-unit>
        <trans-unit id="c533a596e181a2718a2c0eed31a78399a6dd5694" translate="yes" xml:space="preserve">
          <source>Restoring snapshot VMs using &lt;code&gt;vagrant snapshot pop&lt;/code&gt; or &lt;code&gt;vagrant snapshot restore&lt;/code&gt; will sometimes raise errors when mounting SMB shared folders, however these mounts will still work inside the guest.</source>
          <target state="translated">在挂载SMB共享文件夹时，使用 &lt;code&gt;vagrant snapshot pop&lt;/code&gt; 或 &lt;code&gt;vagrant snapshot restore&lt;/code&gt; 恢复快照虚拟机有时会引发错误，但是这些挂载仍将在来宾内部运行。</target>
        </trans-unit>
        <trans-unit id="b3bd0b5a70497bec4a02b7eb1cb0d4f37eb71a2a" translate="yes" xml:space="preserve">
          <source>Resume</source>
          <target state="translated">Resume</target>
        </trans-unit>
        <trans-unit id="52ffa4aa6ccdb4d2db31daa264d5638524cb24c4" translate="yes" xml:space="preserve">
          <source>Right click on the Windows button and select &amp;lsquo;Apps and Features&amp;rsquo;.</source>
          <target state="translated">右键单击Windows按钮，然后选择&amp;ldquo;应用和功能&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="47dcc27d6e87ece8baebe7e3877a261a5467093d" translate="yes" xml:space="preserve">
          <source>Roles</source>
          <target state="translated">Roles</target>
        </trans-unit>
        <trans-unit id="8b92c91ff18cbc3ea5d843eaefca04740f51a2f0" translate="yes" xml:space="preserve">
          <source>Root Password: &quot;vagrant&quot;</source>
          <target state="translated">根密码:&quot;流浪者&quot;</target>
        </trans-unit>
        <trans-unit id="15272a790175b27f9827705fd46f11c296938b05" translate="yes" xml:space="preserve">
          <source>Root Privilege Requirement</source>
          <target state="translated">根权限要求</target>
        </trans-unit>
        <trans-unit id="ee6c2fa5ac75494c1ba5e3973576a8597453db9e" translate="yes" xml:space="preserve">
          <source>Rsync</source>
          <target state="translated">Rsync</target>
        </trans-unit>
        <trans-unit id="3f7275e0a3bccd6ae7ece4d8e502c0fe0c2620c1" translate="yes" xml:space="preserve">
          <source>Rsync to a restricted folder</source>
          <target state="translated">Rsync到受限文件夹</target>
        </trans-unit>
        <trans-unit id="760dc3325ab9fc7a0bfd1dd0935c20668cae4acd" translate="yes" xml:space="preserve">
          <source>Ruby Option</source>
          <target state="translated">Ruby选项</target>
        </trans-unit>
        <trans-unit id="b4ea9d17d37b7c4c42a72bf64d9072f5d6dedba6" translate="yes" xml:space="preserve">
          <source>Run Once, Always or Never</source>
          <target state="translated">跑一次,永远或永远不跑</target>
        </trans-unit>
        <trans-unit id="5f0ffe3403b31c5418177cf28454937d5c2d2a67" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;bundle&lt;/code&gt; command with a required version* to install the requirements:</source>
          <target state="translated">使用必需的版本* 运行 &lt;code&gt;bundle&lt;/code&gt; 命令以安装要求：</target>
        </trans-unit>
        <trans-unit id="a48f5801bbc41ef087bb5cf79bfe5c08972224bb" translate="yes" xml:space="preserve">
          <source>Runner Chef Provisioners</source>
          <target state="translated">Runner Chef Provisioners</target>
        </trans-unit>
        <trans-unit id="c4d1ad1e64633fb86268d1f5696325d1e686ef4a" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;vagrant up&lt;/code&gt; would fire the before trigger to start tinyproxy, where as running either &lt;code&gt;vagrant destroy&lt;/code&gt; or &lt;code&gt;vagrant halt&lt;/code&gt; would stop tinyproxy.</source>
          <target state="translated">运行 &lt;code&gt;vagrant up&lt;/code&gt; 会触发前触发来启动tinyproxy，因为运行 &lt;code&gt;vagrant destroy&lt;/code&gt; 或 &lt;code&gt;vagrant halt&lt;/code&gt; 都会停止tinyproxy。</target>
        </trans-unit>
        <trans-unit id="9881fb14582fa6a9b29b6b8fd53ecd23e253ff4b" translate="yes" xml:space="preserve">
          <source>Running Ansible</source>
          <target state="translated">运行Ansible</target>
        </trans-unit>
        <trans-unit id="cb5a306f91f68cdf0d5dcb2a3504d8056f35bae3" translate="yes" xml:space="preserve">
          <source>Running Containers</source>
          <target state="translated">运行容器</target>
        </trans-unit>
        <trans-unit id="43ab1f3e0ec89693d5034bae5e41519af95d9058" translate="yes" xml:space="preserve">
          <source>Running Multiple Hypervisors</source>
          <target state="translated">运行多个管理程序</target>
        </trans-unit>
        <trans-unit id="efedc79a98139b7f8945a94809ff10d5b525b722" translate="yes" xml:space="preserve">
          <source>Running Provisioners</source>
          <target state="translated">运行供应器</target>
        </trans-unit>
        <trans-unit id="5b3bf2ef0101b1d96d6ba924357dfb5d7e118d8a" translate="yes" xml:space="preserve">
          <source>Running Vagrant will automatically regenerate any data necessary to run, so it is safe to remove the user data at any time.</source>
          <target state="translated">运行Vagrant会自动重新生成运行所需的数据,所以随时可以删除用户数据,非常安全。</target>
        </trans-unit>
        <trans-unit id="91c15146e992a23a0b6ec704321b95c9c39f76ba" translate="yes" xml:space="preserve">
          <source>Running a remote script to save a database on your host before &lt;strong&gt;destroy&lt;/strong&gt;ing a guest:</source>
          <target state="translated">在&lt;strong&gt;销毁&lt;/strong&gt;客户机之前，运行远程脚本以将数据库保存在主机上：</target>
        </trans-unit>
        <trans-unit id="a06207dc24ff39a7c7e2fe4b5ca8e658aa95d654" translate="yes" xml:space="preserve">
          <source>Running a standalone file</source>
          <target state="translated">运行一个独立的文件</target>
        </trans-unit>
        <trans-unit id="299f14c384ba2a3d566731ee9f29ae20958c466b" translate="yes" xml:space="preserve">
          <source>Running containers can only be configured using the Ruby block syntax with the &lt;code&gt;do...end&lt;/code&gt; blocks. An example of running a container is shown below:</source>
          <target state="translated">只能使用Ruby块语法和 &lt;code&gt;do...end&lt;/code&gt; 块来配置运行中的容器。运行容器的示例如下所示：</target>
        </trans-unit>
        <trans-unit id="eebc48a0a4be8044d648003e0f5f7eb74958f0ab" translate="yes" xml:space="preserve">
          <source>Runs any configured &lt;a href=&quot;../provisioning/index&quot;&gt;provisioners&lt;/a&gt; against the running Vagrant managed machine.</source>
          <target state="translated">运行在任何配置&lt;a href=&quot;../provisioning/index&quot;&gt;置备&lt;/a&gt;对流浪运行管理的计算机。</target>
        </trans-unit>
        <trans-unit id="515d2f8880ceb5c06495bd2cf0e912b5d83a7645" translate="yes" xml:space="preserve">
          <source>SMB</source>
          <target state="translated">SMB</target>
        </trans-unit>
        <trans-unit id="a593b63229eafe7e58f15146a340a39b3f09b8e0" translate="yes" xml:space="preserve">
          <source>SMB is built-in to Windows machines and provides a higher performance alternative to some other mechanisms such as VirtualBox shared folders.</source>
          <target state="translated">SMB是Windows机器内置的,并提供了比其他一些机制(如VirtualBox共享文件夹)性能更高的替代方案。</target>
        </trans-unit>
        <trans-unit id="a866508075165416476b9b733cd19a020b4e4347" translate="yes" xml:space="preserve">
          <source>SMB is currently only supported when the host machine is Windows or macOS. The guest machine can be Windows, Linux, or macOS.</source>
          <target state="translated">目前只有当主机是Windows或macOS时才支持SMB。客机可以是Windows、Linux或macOS。</target>
        </trans-unit>
        <trans-unit id="839226786b62bf95c9258e79140ac43890ceae07" translate="yes" xml:space="preserve">
          <source>SSH</source>
          <target state="translated">SSH</target>
        </trans-unit>
        <trans-unit id="6555dffb7012f77fdd857673a594ff08eebe6073" translate="yes" xml:space="preserve">
          <source>SSH Config</source>
          <target state="translated">SSH配置</target>
        </trans-unit>
        <trans-unit id="690018a2fae43a2df194f92a8bb55df20815be6d" translate="yes" xml:space="preserve">
          <source>SSH Settings</source>
          <target state="translated">SSH设置</target>
        </trans-unit>
        <trans-unit id="b244241a946ed4044c0679668cf7c8f5fbcaf3a7" translate="yes" xml:space="preserve">
          <source>SSH Sharing</source>
          <target state="translated">SSH共享</target>
        </trans-unit>
        <trans-unit id="1e165fff543865fa80e55d2a14a9aaac5b280e7b" translate="yes" xml:space="preserve">
          <source>SSH Tweaks</source>
          <target state="translated">SSH Tweaks</target>
        </trans-unit>
        <trans-unit id="e9c7aad5e5511a7aaf64793d3dd6095a9b8fcbac" translate="yes" xml:space="preserve">
          <source>SSH client usage</source>
          <target state="translated">SSH客户端使用</target>
        </trans-unit>
        <trans-unit id="2b916b14796715c56440b5ee68fd3189b233b021" translate="yes" xml:space="preserve">
          <source>SSH is not shared by default, it must explicitly be shared with the &lt;code&gt;--ssh&lt;/code&gt; flag.</source>
          <target state="translated">默认情况下不共享SSH，必须使用 &lt;code&gt;--ssh&lt;/code&gt; 标志明确共享它。</target>
        </trans-unit>
        <trans-unit id="217eb2e392c82ba3db6c131ac70ee0b596dbd011" translate="yes" xml:space="preserve">
          <source>SSH keys are encrypted by default, using a password that is not transmitted to our servers or across the network at all.</source>
          <target state="translated">SSH密钥默认是加密的,使用的密码根本不会传输到我们的服务器或跨网络。</target>
        </trans-unit>
        <trans-unit id="17deb4cb21bc97b3f7f955a7011a9e4462b41ef7" translate="yes" xml:space="preserve">
          <source>SSH server with key-based authentication setup. If you want the box to work with default Vagrant settings, the SSH user must be set to accept the &lt;a href=&quot;https://github.com/hashicorp/vagrant/blob/master/keys/vagrant.pub&quot;&gt;insecure keypair&lt;/a&gt; that ships with Vagrant.</source>
          <target state="translated">带有基于密钥的身份验证设置的SSH服务器。如果希望该框使用默认的Vagrant设置，则必须将SSH用户设置为接受Vagrant附带的&lt;a href=&quot;https://github.com/hashicorp/vagrant/blob/master/keys/vagrant.pub&quot;&gt;不安全密钥对&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="789a9a0dabad2413ebf5b22aa8e6e7e50a34493a" translate="yes" xml:space="preserve">
          <source>SSH sharing is disabled by default as a security measure. To enable SSH sharing, simply supply the &lt;code&gt;--ssh&lt;/code&gt; flag when calling &lt;code&gt;vagrant share&lt;/code&gt;.</source>
          <target state="translated">作为安全措施，默认情况下禁用SSH共享。要启用SSH共享，只需在调用 &lt;code&gt;vagrant share&lt;/code&gt; 时提供 &lt;code&gt;--ssh&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="59c26a2c13ebe0486830b2c45841a43f25e5086c" translate="yes" xml:space="preserve">
          <source>SSH user so Vagrant can connect</source>
          <target state="translated">SSH用户,以便Vagrant能够连接</target>
        </trans-unit>
        <trans-unit id="a9ceb47ef1ed86ec4407e8847c68abc12a18a9a8" translate="yes" xml:space="preserve">
          <source>Salt Provisioner</source>
          <target state="translated">食盐供应器</target>
        </trans-unit>
        <trans-unit id="5f11b099f7bb8a369c42c7bf8397f1adf57089d5" translate="yes" xml:space="preserve">
          <source>Salt states are &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML&quot;&gt;YAML&lt;/a&gt; documents that describes the current state a machine should be in, e.g. what packages should be installed, which services are running, and the contents of arbitrary files.</source>
          <target state="translated">盐状态是&lt;a href=&quot;https://en.wikipedia.org/wiki/YAML&quot;&gt;YAML&lt;/a&gt;文档，描述了计算机应处于的当前状态，例如应安装哪些软件包，正在运行的服务以及任意文件的内容。</target>
        </trans-unit>
        <trans-unit id="0187268986b5811e6ccb989c40db00a819bf0f54" translate="yes" xml:space="preserve">
          <source>Script Arguments</source>
          <target state="translated">脚本参数</target>
        </trans-unit>
        <trans-unit id="f9aed37650af3c15dbdc2c7ab3e74a76ab729bf4" translate="yes" xml:space="preserve">
          <source>Securely authenticate to Vagrant Cloud using a username and password:</source>
          <target state="translated">使用用户名和密码安全认证到Vagrant Cloud。</target>
        </trans-unit>
        <trans-unit id="9a5f48f8fbfbbe8ab05de9df347d97688f8a6ee2" translate="yes" xml:space="preserve">
          <source>Securely authenticate with Vagrant Cloud using a token:</source>
          <target state="translated">使用令牌对Vagrant Cloud进行安全认证。</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="a1d472af4fab2d0218bb06fc820035d4ec92031e" translate="yes" xml:space="preserve">
          <source>See official documentation &lt;a href=&quot;https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v&quot;&gt;此处的&lt;/a&gt;官方文档。</target>
        </trans-unit>
        <trans-unit id="bc58830e563b9080446ab665ce1fb93fb8766054" translate="yes" xml:space="preserve">
          <source>Select Turn Windows Features on or off.</source>
          <target state="translated">选择打开或关闭 Windows 功能。</target>
        </trans-unit>
        <trans-unit id="351b46ba7237ffcd5d099e148c5a40d462ea0c0b" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;limit = &quot;all&quot;&lt;/code&gt; can be used to make Ansible connect to all machines from the inventory file.</source>
          <target state="translated">设置 &lt;code&gt;limit = &quot;all&quot;&lt;/code&gt; 可用于使Ansible从清单文件连接到所有计算机。</target>
        </trans-unit>
        <trans-unit id="2504aaa7a7c92d82f4e0356fa70da70fbea1ba5c" translate="yes" xml:space="preserve">
          <source>Setting Up Your Project</source>
          <target state="translated">设置您的项目</target>
        </trans-unit>
        <trans-unit id="d2d752c8ea185c41e807aeec0b2c0413f43464b8" translate="yes" xml:space="preserve">
          <source>Setting up a CFEngine server and client</source>
          <target state="translated">设置CFEngine服务器和客户端</target>
        </trans-unit>
        <trans-unit id="a52339f3d58246712ffa2e6b66eccc9cff12ef76" translate="yes" xml:space="preserve">
          <source>Settings in the VMX file control the behavior of the VMware virtual machine when it is booted. In the past Vagrant has removed the configured network device when creating a new instance and inserted a new configuration. With the introduction of &lt;a href=&quot;https://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames/&quot;&gt;&quot;predictable network interface names&quot;&lt;/a&gt; this approach can cause unexpected behaviors or errors with VMware Vagrant boxes. While some boxes that use the predictable network interface names are configured to handle the VMX modifications Vagrant makes, it is better if Vagrant does not make the modification at all.</source>
          <target state="translated">VMX文件中的设置可控制启动VMware虚拟机时的行为。过去，Vagrant在创建新实例时已删除已配置的网络设备，并插入了新配置。引入&lt;a href=&quot;https://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames/&quot;&gt;&amp;ldquo;可预测的网络接口名称&amp;rdquo;后，&lt;/a&gt;此方法可能导致VMware Vagrant框出现意外行为或错误。虽然一些使用可预测的网络接口名称的框被配置为处理Vagrant所做的VMX修改，但最好是如果Vagrant根本不进行修改。</target>
        </trans-unit>
        <trans-unit id="adf30ad2392c91423e89409a2555b0e405cd23b4" translate="yes" xml:space="preserve">
          <source>Setup Requirements</source>
          <target state="translated">设置要求</target>
        </trans-unit>
        <trans-unit id="5559c15d37a2aa2d8d2cc5a1f9cd66dcff444bfc" translate="yes" xml:space="preserve">
          <source>Setup and Workflow</source>
          <target state="translated">设置和工作流程</target>
        </trans-unit>
        <trans-unit id="09ca55ca52d207f2cc1d9339e0226a88e9e96e2f" translate="yes" xml:space="preserve">
          <source>Share</source>
          <target state="translated">Share</target>
        </trans-unit>
        <trans-unit id="de046d95f037e961d1b2bc58bd5171a47d829a2e" translate="yes" xml:space="preserve">
          <source>Shared Ansible Options</source>
          <target state="translated">共享Ansible选项</target>
        </trans-unit>
        <trans-unit id="b2d145a89bb42a82426b052ee07767a85a521949" translate="yes" xml:space="preserve">
          <source>Shared Chef Options</source>
          <target state="translated">共享厨师选项</target>
        </trans-unit>
        <trans-unit id="3b9e5648dd43c6819096d4cea9dd648d225d84bf" translate="yes" xml:space="preserve">
          <source>Shared web applications must use &lt;strong&gt;relative paths&lt;/strong&gt; for loading any local assets such as images, stylesheets, javascript.</source>
          <target state="translated">共享的Web应用程序必须使用&lt;strong&gt;相对路径&lt;/strong&gt;来加载任何本地资源，例如图像，样式表，javascript。</target>
        </trans-unit>
        <trans-unit id="c6884ad94d56f64e55961abd5a98defd4b2294dd" translate="yes" xml:space="preserve">
          <source>Sharing hostnames across Vagrant host and guests might be a good idea (e.g. with some Ansible configuration task, or with a plugin like &lt;a href=&quot;https://github.com/smdahlen/vagrant-hostmanager&quot;&gt;&lt;code&gt;vagrant-hostmanager&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">在Vagrant主机和来宾之间共享主机名可能是一个好主意（例如，通过一些Ansible配置任务，或使用类似&lt;a href=&quot;https://github.com/smdahlen/vagrant-hostmanager&quot;&gt; &lt;code&gt;vagrant-hostmanager&lt;/code&gt; &lt;/a&gt;的插件）。</target>
        </trans-unit>
        <trans-unit id="b50eee4ab1d64f9e39bb1f1749e50808a92c25ee" translate="yes" xml:space="preserve">
          <source>Sharing your Vagrant environment understandably raises a number of security concerns.</source>
          <target state="translated">分享你的Vagrant环境会引起一些安全问题,这是可以理解的。</target>
        </trans-unit>
        <trans-unit id="6598f846b9e84f2442f098508b153e73ce3c46e3" translate="yes" xml:space="preserve">
          <source>Shell Provisioner</source>
          <target state="translated">Shell Provisioner</target>
        </trans-unit>
        <trans-unit id="79eed418f5bfb0172ac280748e2d84ef6a367471" translate="yes" xml:space="preserve">
          <source>Shell provisioning is ideal for users new to Vagrant who want to get up and running quickly and provides a strong alternative for users who are not comfortable with a full configuration management system such as Chef or Puppet.</source>
          <target state="translated">Shell配置是Vagrant新用户的理想选择,他们希望快速启动和运行,并为不习惯使用完整配置管理系统(如Chef或Puppet)的用户提供一个强大的选择。</target>
        </trans-unit>
        <trans-unit id="300b801a9bf1c86184360ce3b8636217c4d0fd19" translate="yes" xml:space="preserve">
          <source>Simplest Configuration</source>
          <target state="translated">最简单的配置</target>
        </trans-unit>
        <trans-unit id="3a851e6092dc6df3b2bdc0044b889583f41601fb" translate="yes" xml:space="preserve">
          <source>Since Vagrant 1.5, boxes support versioning. This allows the people who make boxes to push updates to the box, and the people who use the box have a simple workflow for checking for updates, updating their boxes, and seeing what has changed.</source>
          <target state="translated">从Vagrant 1.5开始,盒子支持版本管理。这使得制作盒子的人可以向盒子推送更新,而使用盒子的人也有一个简单的工作流程来检查更新,更新他们的盒子,并查看有什么变化。</target>
        </trans-unit>
        <trans-unit id="bda524c5532e335d6a1d890f1d601b1f791cad22" translate="yes" xml:space="preserve">
          <source>Since an Ansible playbook can include many files, you may also collect the related files in a &lt;a href=&quot;https://docs.ansible.com/playbooks_best_practices.html#directory-layout&quot;&gt;directory structure&lt;/a&gt; like this:</source>
          <target state="translated">由于Ansible剧本可以包含许多文件，因此您也可以按以下&lt;a href=&quot;https://docs.ansible.com/playbooks_best_practices.html#directory-layout&quot;&gt;目录结构&lt;/a&gt;收集相关文件：</target>
        </trans-unit>
        <trans-unit id="36950c14d83f856b25ce592be83ef8e72645f89b" translate="yes" xml:space="preserve">
          <source>Since single-line Chef recipes are rare, you can also specify the recipe using a &quot;heredoc&quot;:</source>
          <target state="translated">由于单线厨师食谱很少,你也可以用 &quot;heredoc &quot;来指定食谱。</target>
        </trans-unit>
        <trans-unit id="490286fb680b60c49ec4b264430e69f91150fe80" translate="yes" xml:space="preserve">
          <source>Since you have access to the environment in every capability, capabilities can also call &lt;em&gt;other&lt;/em&gt; host capabilities. This is useful for using the inheritance mechanism of capabilities to potentially ask helpers for more information. For example, the &quot;linux&quot; guest has a &quot;nfs_check_command&quot; capability that returns the command to use to check if NFS is running.</source>
          <target state="translated">由于您可以使用每种功能访问环境，因此功能也可以调用&lt;em&gt;其他&lt;/em&gt;主机功能。这对于使用功能的继承机制来潜在地向助手请求更多信息很有用。例如，&amp;ldquo; linux&amp;rdquo;来宾具有&amp;ldquo; nfs_check_command&amp;rdquo;功能，该功能返回用于检查NFS是否正在运行的命令。</target>
        </trans-unit>
        <trans-unit id="73bd51bf5c89c13a03591c296f43984ec88d9c7d" translate="yes" xml:space="preserve">
          <source>Since you have access to the machine in every capability, capabilities can also call &lt;em&gt;other&lt;/em&gt; capabilities. This is useful for using the inheritance mechanism of capabilities to potentially ask helpers for more information. For example, the &quot;redhat&quot; guest has a &quot;network_scripts_dir&quot; capability that simply returns the directory where networking scripts go.</source>
          <target state="translated">由于您可以使用每种功能访问计算机，因此功能也可以调用&lt;em&gt;其他&lt;/em&gt;功能。这对于使用功能的继承机制来潜在地向助手请求更多信息很有用。例如，&amp;ldquo; redhat&amp;rdquo;来宾具有&amp;ldquo; network_scripts_dir&amp;rdquo;功能，该功能仅返回网络脚本所在的目录。</target>
        </trans-unit>
        <trans-unit id="b08ae37ed0218a85800a574ce852c8c93ad73b28" translate="yes" xml:space="preserve">
          <source>Snapshot</source>
          <target state="translated">Snapshot</target>
        </trans-unit>
        <trans-unit id="e71c2ca1b3ecc431633695ab0f78c8d0466ad460" translate="yes" xml:space="preserve">
          <source>Snapshot Delete</source>
          <target state="translated">快照删除</target>
        </trans-unit>
        <trans-unit id="e736d731945ed97fc8089838f5600ae38751c50d" translate="yes" xml:space="preserve">
          <source>Snapshot List</source>
          <target state="translated">快照列表</target>
        </trans-unit>
        <trans-unit id="651caca2c95290b2b6f12d107d935745d1ae7dcf" translate="yes" xml:space="preserve">
          <source>Snapshot Pop</source>
          <target state="translated">快照流行</target>
        </trans-unit>
        <trans-unit id="93924b7aa44ce0118438bd0facf81f17db8a086a" translate="yes" xml:space="preserve">
          <source>Snapshot Push</source>
          <target state="translated">快照推送</target>
        </trans-unit>
        <trans-unit id="517f8c4e218c75f8e08b8f70f86aa390642366b5" translate="yes" xml:space="preserve">
          <source>Snapshot Restore</source>
          <target state="translated">快照还原</target>
        </trans-unit>
        <trans-unit id="741fa11d1c5f94bc244337dbb275d216fc9225cd" translate="yes" xml:space="preserve">
          <source>Snapshot Save</source>
          <target state="translated">快照保存</target>
        </trans-unit>
        <trans-unit id="55420c59a1c2e9a70f07a6fa02f0d228ffb87b76" translate="yes" xml:space="preserve">
          <source>Snapshots</source>
          <target state="translated">Snapshots</target>
        </trans-unit>
        <trans-unit id="04b9216726d7c09d9db92a26cd36cc3cd23aad6f" translate="yes" xml:space="preserve">
          <source>Snapshotting is not supported by every provider. If it is not supported, Vagrant will give you an error message.</source>
          <target state="translated">并非每个供应商都支持快照。如果不支持,Vagrant会给您一个错误信息。</target>
        </trans-unit>
        <trans-unit id="20cc8e7f4db2cff744401a2dac63b2035e464cb5" translate="yes" xml:space="preserve">
          <source>Some capabilities must also return values back to the caller, so be aware of that when implementing a capability.</source>
          <target state="translated">有些能力还必须将值返回给调用者,所以在实现能力时要注意这一点。</target>
        </trans-unit>
        <trans-unit id="8f4585a75ff363ccb4bca09fcead42d4cb00abbe" translate="yes" xml:space="preserve">
          <source>Some cases require the DHCP assigned default route to be untouched. In these cases one may specify the &lt;code&gt;use_dhcp_assigned_default_route&lt;/code&gt; option. As an example:</source>
          <target state="translated">在某些情况下，需要取消分配给DHCP的默认路由。在这些情况下，可以指定 &lt;code&gt;use_dhcp_assigned_default_route&lt;/code&gt; 选项。举个例子：</target>
        </trans-unit>
        <trans-unit id="771475f27cc0b16aaa4d96b71258bde9ca95703d" translate="yes" xml:space="preserve">
          <source>Some of these options are for advanced usage only and should not be used unless you understand their purpose.</source>
          <target state="translated">这些选项中的某些选项仅用于高级用途,除非您了解其目的,否则不应使用。</target>
        </trans-unit>
        <trans-unit id="02edf67c04f8ec340ff580ac1a929baed2950a4e" translate="yes" xml:space="preserve">
          <source>Some providers require all &quot;child&quot; snapshots to be deleted first. Vagrant itself does not track what these children are. If this is the case (such as with VirtualBox), then you must be sure to delete the snapshots in the reverse order they were taken.</source>
          <target state="translated">有些供应商要求先删除所有 &quot;孩子 &quot;快照。Vagrant本身并不跟踪这些子快照。如果是这种情况(比如VirtualBox),那么您必须确保按照快照的相反顺序进行删除。</target>
        </trans-unit>
        <trans-unit id="4d97817aee740040a8822acd058cddef1ff67eeb" translate="yes" xml:space="preserve">
          <source>Sometimes it is preferable to mount folders with a different owner/group than the default SSH user. Keep in mind that these options will only affect the synced folder itself. If you want to modify the owner/group of the synced folder's parent folders use a script. It is possible to set these options:</source>
          <target state="translated">有时,最好用不同于默认 SSH 用户的所有者/组来挂载文件夹。请记住,这些选项只会影响同步文件夹本身。如果你想修改同步文件夹的父文件夹的所有者/组,可以使用脚本。可以设置这些选项。</target>
        </trans-unit>
        <trans-unit id="97bd3d86c4e62195e7156605183cef12802cc7f1" translate="yes" xml:space="preserve">
          <source>Sometimes, certain hypervisors do not allow you to bring up virtual machines if more than one hypervisor is in use. If you are lucky, you might see the following error message come up when trying to bring up a virtual machine with Vagrant and VirtualBox:</source>
          <target state="translated">有时,如果使用了多个管理程序,某些管理程序不允许您提起虚拟机。如果您幸运的话,当您尝试使用Vagrant和VirtualBox启动虚拟机时,您可能会看到以下错误信息。</target>
        </trans-unit>
        <trans-unit id="b215125afddb6c9c07e3cf61e999ec04bef615fa" translate="yes" xml:space="preserve">
          <source>Specifying NFS Arguments</source>
          <target state="translated">指定NFS参数</target>
        </trans-unit>
        <trans-unit id="576eb42c00c2e4a957712016b90afc223caf1901" translate="yes" xml:space="preserve">
          <source>Specifying a Primary Machine</source>
          <target state="translated">指定主要机器</target>
        </trans-unit>
        <trans-unit id="bffa1f4fbf4d9359c3064dc236396e53a0a310b0" translate="yes" xml:space="preserve">
          <source>Specifying a Recipe</source>
          <target state="translated">指定配方</target>
        </trans-unit>
        <trans-unit id="22b7e12fd60726caf168ed8e6d87a9b8e4e0c348" translate="yes" xml:space="preserve">
          <source>Specifying a Run List</source>
          <target state="translated">指定运行列表</target>
        </trans-unit>
        <trans-unit id="fd2dc3f5213f54f765546e82663cdefd9c48195a" translate="yes" xml:space="preserve">
          <source>Specifying the Puppet Master</source>
          <target state="translated">指定Puppet Master</target>
        </trans-unit>
        <trans-unit id="a62206753e573d41113c78b8668b75bba34147c9" translate="yes" xml:space="preserve">
          <source>Static IP</source>
          <target state="translated">静态IP</target>
        </trans-unit>
        <trans-unit id="cf386cc88936fa29ff85da1260ccb52096f5c02d" translate="yes" xml:space="preserve">
          <source>Static Inventory</source>
          <target state="translated">静态库存</target>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">Status</target>
        </trans-unit>
        <trans-unit id="f32d5a3b17e614297417cc279a7ec1cd02274d65" translate="yes" xml:space="preserve">
          <source>Support</source>
          <target state="translated">Support</target>
        </trans-unit>
        <trans-unit id="4d3d0e6606322bb4c2c48d7743cd59c9bd7c4959" translate="yes" xml:space="preserve">
          <source>Support for symbolic links across synced folder implementations and host/guest combinations is not consistent. Vagrant does its best to make sure symbolic links work by configuring various hypervisors (such as VirtualBox), but some host/guest combinations still do not work properly. This can affect some development environments that rely on symbolic links.</source>
          <target state="translated">同步文件夹实现和主机/访客组合对符号链接的支持并不一致。Vagrant通过配置各种管理程序(如VirtualBox),尽力确保符号链接的工作,但一些主机/访客组合仍然不能正常工作。这可能会影响一些依赖符号链接的开发环境。</target>
        </trans-unit>
        <trans-unit id="afcbb0471ae71578861bacefcb207d4da5d9a9d2" translate="yes" xml:space="preserve">
          <source>Support for synced folders within the WSL is implementation dependent. In most cases synced folders will not be supported when running Vagrant within WSL on a VolFs file system. Synced folder implementations must &quot;opt-in&quot; to supporting usage from VolFs file systems. To use synced folders from within the WSL that do not support VolFs file systems, move the Vagrant project directory to a DrvFs file system location (/mnt/c/ prefixed path for example).</source>
          <target state="translated">对WSL内同步文件夹的支持取决于实施。在大多数情况下,当Vagrant在VolFs文件系统的WSL中运行时,同步文件夹将不被支持。同步文件夹的实现必须 &quot;选择 &quot;支持VolFs文件系统的使用。要在WSL内使用不支持VolFs文件系统的同步文件夹,请将Vagrant项目目录移动到DrvFs文件系统的位置(例如,/mnt/c/前缀路径)。</target>
        </trans-unit>
        <trans-unit id="1a245d3f09032bc3c88862f3cab74a5531ef4422" translate="yes" xml:space="preserve">
          <source>Supported Windows guest operating systems: - Windows 7 - Windows 8 - Windows Server 2008 - Windows Server 2008 R2 - Windows Server 2012 - Windows Server 2012 R2</source>
          <target state="translated">支持的 Windows 客体操作系统:-Windows 7-Windows 8-Windows Server 2008-Windows Server 2008 R2-Windows Server 2012-Windows Server 2012 R2。</target>
        </trans-unit>
        <trans-unit id="7f53e681dd396cc6096149b87700d39461bd99d3" translate="yes" xml:space="preserve">
          <source>Supported options are:</source>
          <target state="translated">支持的选项有:</target>
        </trans-unit>
        <trans-unit id="b24247fb5a9d8d8059901182187be57626f3ba71" translate="yes" xml:space="preserve">
          <source>Suspend</source>
          <target state="translated">Suspend</target>
        </trans-unit>
        <trans-unit id="37008620b710f26771f72ef684d0d762ce0c312d" translate="yes" xml:space="preserve">
          <source>Symbolic Links</source>
          <target state="translated">符号链接</target>
        </trans-unit>
        <trans-unit id="adad8dd96e48235b08d7745d5b736e09eb0802d7" translate="yes" xml:space="preserve">
          <source>Synced Folders</source>
          <target state="translated">同步的文件夹</target>
        </trans-unit>
        <trans-unit id="7e43ade39650fa3b1a0339c15739e674c618d1c2" translate="yes" xml:space="preserve">
          <source>Synced Folders and Networking</source>
          <target state="translated">同步的文件夹和网络</target>
        </trans-unit>
        <trans-unit id="2f54572b1ce81515ed910267c00e8f7798210476" translate="yes" xml:space="preserve">
          <source>Synced folders are automatically setup during &lt;code&gt;vagrant up&lt;/code&gt; and &lt;code&gt;vagrant reload&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;vagrant up&lt;/code&gt; 和 &lt;code&gt;vagrant reload&lt;/code&gt; 期间，会自动设置已同步的文件夹。</target>
        </trans-unit>
        <trans-unit id="6b7957ffbeffedb5aa6e697f028f2ac2c75c27ec" translate="yes" xml:space="preserve">
          <source>Synced folders are configured within your Vagrantfile using the &lt;code&gt;config.vm.synced_folder&lt;/code&gt; method. Usage of the configuration directive is very simple:</source>
          <target state="translated">使用 &lt;code&gt;config.vm.synced_folder&lt;/code&gt; 方法在Vagrantfile中配置已同步的文件夹。配置指令的用法非常简单：</target>
        </trans-unit>
        <trans-unit id="ee1df865332167437a0f4ec0a47084be11ee932f" translate="yes" xml:space="preserve">
          <source>Synced folders can be disabled by adding the &lt;code&gt;disabled&lt;/code&gt; option to any definition:</source>
          <target state="translated">可以通过将 &lt;code&gt;disabled&lt;/code&gt; 选项添加到任何定义来禁用同步的文件夹：</target>
        </trans-unit>
        <trans-unit id="e8d3ad345cae6fc13b2811825e748fd553bf89e0" translate="yes" xml:space="preserve">
          <source>Synced folders enable Vagrant to sync a folder on the host machine to the guest machine, allowing you to continue working on your project's files on your host machine, but use the resources in the guest machine to compile or run your project.</source>
          <target state="translated">同步文件夹使Vagrant能够将主机上的文件夹同步到客机上,使您能够继续在主机上处理您的项目文件,但使用客机上的资源来编译或运行您的项目。</target>
        </trans-unit>
        <trans-unit id="e8f4375b560e83228f9a653dc4b13d8dc4efb1ca" translate="yes" xml:space="preserve">
          <source>System Packages</source>
          <target state="translated">系统包</target>
        </trans-unit>
        <trans-unit id="5e2b5098bfa8f2048bfca043eee4908d63911dd8" translate="yes" xml:space="preserve">
          <source>Take a look at how the VirtualBox provider &lt;a href=&quot;https://github.com/hashicorp/vagrant/blob/master/plugins/providers/virtualbox/action.rb#L287&quot;&gt;uses actions to build up complicated multi-step processes&lt;/a&gt;. The AWS provider &lt;a href=&quot;https://github.com/mitchellh/vagrant-aws/blob/master/lib/vagrant-aws/action.rb&quot;&gt;uses a similar process&lt;/a&gt;.</source>
          <target state="translated">看一下VirtualBox提供程序如何&lt;a href=&quot;https://github.com/hashicorp/vagrant/blob/master/plugins/providers/virtualbox/action.rb#L287&quot;&gt;使用操作来构建复杂的多步骤流程&lt;/a&gt;。AWS提供程序&lt;a href=&quot;https://github.com/mitchellh/vagrant-aws/blob/master/lib/vagrant-aws/action.rb&quot;&gt;使用类似的过程&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d40981346830c3f1d71a693a809fb51907324ae8" translate="yes" xml:space="preserve">
          <source>Testing Your Plugin</source>
          <target state="translated">测试您的插件</target>
        </trans-unit>
        <trans-unit id="80c8aa99f14a9f70a591e12d73d91b0e6acef44b" translate="yes" xml:space="preserve">
          <source>Testing an interface, such as an API to a service component.</source>
          <target state="translated">测试一个接口,如服务组件的API。</target>
        </trans-unit>
        <trans-unit id="a7dab1e9f8910fe7320b1b8a1895bbe9035a8c89" translate="yes" xml:space="preserve">
          <source>Testing the Box</source>
          <target state="translated">测试盒</target>
        </trans-unit>
        <trans-unit id="0a92825914a95cb39c7abf8fcbd321891181ea61" translate="yes" xml:space="preserve">
          <source>That is the only change that is needed to enable parallelization.</source>
          <target state="translated">这是实现并行化所需要的唯一改变。</target>
        </trans-unit>
        <trans-unit id="e9199b7b6209502e7357ec113fdf231b20b0a7ab" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../cli/rsync&quot;&gt;rsync&lt;/a&gt; and &lt;a href=&quot;../cli/rsync-auto&quot;&gt;rsync-auto&lt;/a&gt; commands can be used to force a resync and to automatically resync when changes occur in the filesystem. Without running these commands, Vagrant only syncs the folders on &lt;code&gt;vagrant up&lt;/code&gt; or &lt;code&gt;vagrant reload&lt;/code&gt;.</source>
          <target state="translated">的&lt;a href=&quot;../cli/rsync&quot;&gt;rsync的&lt;/a&gt;和&lt;a href=&quot;../cli/rsync-auto&quot;&gt;的rsync的自动&lt;/a&gt;命令可以用来强制重新同步，并且当发生在文件系统中的改变自动地重新同步。在不运行这些命令的情况下，Vagrant仅在启动 &lt;code&gt;vagrant up&lt;/code&gt; 或 &lt;code&gt;vagrant reload&lt;/code&gt; 时同步文件夹。</target>
        </trans-unit>
        <trans-unit id="4f6fc1fab87e9386e3839fd0d49cdae34e906d8b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../synced-folders/basic_usage&quot;&gt;default shared directory&lt;/a&gt; is enabled (&lt;code&gt;.&lt;/code&gt; &amp;rarr; &lt;code&gt;/vagrant&lt;/code&gt;).</source>
          <target state="translated">的&lt;a href=&quot;../synced-folders/basic_usage&quot;&gt;默认共享目录&lt;/a&gt;被启用（ &lt;code&gt;.&lt;/code&gt; &amp;rarr; &lt;code&gt;/vagrant&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e7d1addf05ea7ceb03a4f706908f4a5a57c5f00d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ansible_common#groups&quot;&gt;&lt;code&gt;groups&lt;/code&gt;&lt;/a&gt; option can be used to pass a hash of group names and group members to be included in the generated inventory file.</source>
          <target state="translated">该&lt;a href=&quot;ansible_common#groups&quot;&gt; &lt;code&gt;groups&lt;/code&gt; &lt;/a&gt;选项可用于传递的组名和组成员的散列以被包括在将所生成的清单文件。</target>
        </trans-unit>
        <trans-unit id="6fe7cf6144ce7fedb77aafaac5b1f720144ab3e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ansible_common#version&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt; option is set to &lt;code&gt;&quot;latest&quot;&lt;/code&gt;.</source>
          <target state="translated">该&lt;a href=&quot;ansible_common#version&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt;选项设置为 &lt;code&gt;&quot;latest&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a7742398c3479c2c73aaf1319e1797d8f6528eed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;format&quot;&gt;Box File Format&lt;/a&gt; provides more information about what else goes into a Vagrant box.</source>
          <target state="translated">该&lt;a href=&quot;format&quot;&gt;箱文件格式&lt;/a&gt;提供了有关什么其他进入一个流浪对话框的更多信息。</target>
        </trans-unit>
        <trans-unit id="c46d2e4edc992bfcb4f86d2e846b1095a2258c42" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;2&quot;&lt;/code&gt; in the first line above represents the version of the configuration object &lt;code&gt;config&lt;/code&gt; that will be used for configuration for that block (the section between the &lt;code&gt;do&lt;/code&gt; and the &lt;code&gt;end&lt;/code&gt;). This object can be very different from version to version.</source>
          <target state="translated">上面第一行中的 &lt;code&gt;&quot;2&quot;&lt;/code&gt; 表示将用于该块（ &lt;code&gt;do&lt;/code&gt; 和 &lt;code&gt;end&lt;/code&gt; 之间的部分）的配置的配置对象 &lt;code&gt;config&lt;/code&gt; 的版本。每个版本的对象可能有很大的不同。</target>
        </trans-unit>
        <trans-unit id="0cd0e3e52bf8a2c0b4181bb7636a743c12a50a6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--provider&lt;/code&gt; flag on a &lt;code&gt;vagrant up&lt;/code&gt; is chosen above all else, if it is present.</source>
          <target state="translated">所述 &lt;code&gt;--provider&lt;/code&gt; 上的标志 &lt;code&gt;vagrant up&lt;/code&gt; 选择高于一切，如果它是存在的。</target>
        </trans-unit>
        <trans-unit id="06ab0ee04b4e21d27a0480248ee8641e64d87f52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--provision-with&lt;/code&gt; flag can be used if you only want to run a specific provisioner if you have multiple provisioners specified. For example, if you have a shell and Puppet provisioner and only want to run the shell one, you can do &lt;code&gt;vagrant provision --provision-with shell&lt;/code&gt;. The arguments to &lt;code&gt;--provision-with&lt;/code&gt; can be the provisioner type (such as &quot;shell&quot;) or the provisioner name (such as &quot;bootstrap&quot; from above).</source>
          <target state="translated">该 &lt;code&gt;--provision-with&lt;/code&gt; 标志可以，如果你只希望如果有指定的多个供应方运行特定的预配使用。例如，如果您有一个shell和Puppet供应商，而只想运行一个shell，则可以执行 &lt;code&gt;vagrant provision --provision-with shell&lt;/code&gt; 。 &lt;code&gt;--provision-with&lt;/code&gt; 的参数可以是供应者类型（例如&amp;ldquo; shell&amp;rdquo;）或供应者名称（例如上面的&amp;ldquo; bootstrap&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="3930fe3b53fbd27992dbdaea8a82a0b49737147b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:id&lt;/code&gt; special parameter is replaced with the ID of the virtual machine being created, so when a VBoxManage command requires an ID, you can pass this special parameter.</source>
          <target state="translated">所述 &lt;code&gt;:id&lt;/code&gt; 特殊参数被替换为虚拟机的ID所创建的，所以当一个VBoxManage命令要求一个ID，则可以通过这个特殊参数。</target>
        </trans-unit>
        <trans-unit id="caa6b207c1c1477e2ff865e950f7b574b8d60f26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;_detected_errors&lt;/code&gt; method returns any errors already detected by Vagrant, such as unknown configuration keys. This returns an array of error messages, so be sure to turn it into the proper Hash object to return later.</source>
          <target state="translated">该 &lt;code&gt;_detected_errors&lt;/code&gt; 方法返回流浪已经检测到任何错误，例如未知的配置密钥。这将返回错误消息数组，因此请确保将其转换为适当的Hash对象，以便稍后返回。</target>
        </trans-unit>
        <trans-unit id="c22639f6c79b1433f645c2089cf3673c1c843ec0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aws&lt;/code&gt; box format is just a Vagrantfile defaulting some configuration. You can see an &lt;a href=&quot;https://github.com/mitchellh/vagrant-aws/tree/master/example_box&quot;&gt;example aws box unpacked here&lt;/a&gt;.</source>
          <target state="translated">在 &lt;code&gt;aws&lt;/code&gt; 框格式只是一个Vagrantfile拖欠一些配置。您可以&lt;a href=&quot;https://github.com/mitchellh/vagrant-aws/tree/master/example_box&quot;&gt;在此处&lt;/a&gt;看到一个示例包装盒。</target>
        </trans-unit>
        <trans-unit id="a5543227f467f2bd4a76620433bab7e93307f414" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;build_image&lt;/code&gt; function accepts options as a second parameter. Here are the available options:</source>
          <target state="translated">所述 &lt;code&gt;build_image&lt;/code&gt; 函数接受选项作为第二参数。以下是可用的选项：</target>
        </trans-unit>
        <trans-unit id="a7b4ea8875837322ab43cb5d8720ff0df090358e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cloud auth&lt;/code&gt; command is for handling all things related to authorization with Vagrant Cloud.</source>
          <target state="translated">该 &lt;code&gt;cloud auth&lt;/code&gt; 命令是用于处理有关授权与流浪云中的所有东西。</target>
        </trans-unit>
        <trans-unit id="0e05bc47482a8727e9728125f7b2478f30b9b75a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cloud box&lt;/code&gt; command is used to manage life cycle operations for all &lt;code&gt;box&lt;/code&gt; entities on Vagrant Cloud.</source>
          <target state="translated">该 &lt;code&gt;cloud box&lt;/code&gt; 命令用于管理生命周期操作对所有 &lt;code&gt;box&lt;/code&gt; 上流浪的云实体。</target>
        </trans-unit>
        <trans-unit id="e49ba504c609dc4b9cc1eacce7457f3ecb32b0b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cloud provider&lt;/code&gt; command is used to manage the life cycle operations for all &lt;code&gt;provider&lt;/code&gt; entities on Vagrant Cloud.</source>
          <target state="translated">该 &lt;code&gt;cloud provider&lt;/code&gt; 命令用于管理生命周期操作对所有 &lt;code&gt;provider&lt;/code&gt; 对流浪云实体。</target>
        </trans-unit>
        <trans-unit id="2ef2e3d0f91f1c6fc1946dd9334387ead56ba701" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cloud version&lt;/code&gt; command is used to manage life cycle operations for all &lt;code&gt;version&lt;/code&gt; entities for a box on Vagrant Cloud.</source>
          <target state="translated">该 &lt;code&gt;cloud version&lt;/code&gt; 命令是用来管理生命周期操作的所有 &lt;code&gt;version&lt;/code&gt; 实体上流浪的云盒子。</target>
        </trans-unit>
        <trans-unit id="3095668aa1bff6d8e0f4d0a871a1cc9b0f2bdf49" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;configure&lt;/code&gt; method is called early in the machine booting process to allow the provisioner to define new configuration on the machine, such as sharing folders, defining networks, etc. As an example, the &lt;a href=&quot;https://github.com/hashicorp/vagrant/blob/master/plugins/provisioners/chef/provisioner/chef_solo.rb#L24&quot;&gt;Chef solo provisioner&lt;/a&gt; uses this to define shared folders.</source>
          <target state="translated">的 &lt;code&gt;configure&lt;/code&gt; 方法在机器启动过程叫早以允许置备在机器上定义新的配置，诸如共享文件夹，限定网络等。作为一个例子，&lt;a href=&quot;https://github.com/hashicorp/vagrant/blob/master/plugins/provisioners/chef/provisioner/chef_solo.rb#L24&quot;&gt;厨师独奏供应者&lt;/a&gt;使用这种方法来定义的共享文件夹。</target>
        </trans-unit>
        <trans-unit id="9dca778f5df43dffbf0b1eb5d753c7594a8eb5a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;destroy&lt;/code&gt; command does not remove a box that may have been installed on your computer during &lt;code&gt;vagrant up&lt;/code&gt;. Thus, even if you run &lt;code&gt;vagrant destroy&lt;/code&gt;, the box installed in the system will still be present on the hard drive. To return your computer to the state as it was before &lt;code&gt;vagrant up&lt;/code&gt; command, you need to use &lt;code&gt;vagrant box remove&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;destroy&lt;/code&gt; 命令不会删除可以在已安装在计算机上的一个盒子 &lt;code&gt;vagrant up&lt;/code&gt; 。因此，即使您运行 &lt;code&gt;vagrant destroy&lt;/code&gt; ，系统中安装的盒子仍将存在于硬盘驱动器上。要将计算机恢复到 &lt;code&gt;vagrant up&lt;/code&gt; 命令之前的状态，您需要使用 &lt;code&gt;vagrant box remove&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e06d73776f82c6c494602141dd32fac54bb2f6d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;detect?&lt;/code&gt; method is called by Vagrant at some point after the machine is booted in order to determine what operating system the guest is running. If you detect that it is your operating system, return &lt;code&gt;true&lt;/code&gt; from &lt;code&gt;detect?&lt;/code&gt;. Otherwise, return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;detect?&lt;/code&gt; 引导计算机后，Vagrant会在某个时候调用此方法，以确定来宾正在运行的操作系统。如果检测到它是您的操作系统，请从 &lt;code&gt;detect?&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; ？。否则，返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dbdfb20cc486dd12e0985b59e95d1f857e791a48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;detect?&lt;/code&gt; method is called by Vagrant very early on in its initialization process to determine if the OS that Vagrant is running on is this host. If you detect that it is your operating system, return &lt;code&gt;true&lt;/code&gt; from &lt;code&gt;detect?&lt;/code&gt;. Otherwise, return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;detect?&lt;/code&gt; Vagrant在初始化过程的早期就调用了该方法，以确定运行Vagrant的操作系统是否是此主机。如果检测到它是您的操作系统，请从 &lt;code&gt;detect?&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; ？。否则，返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b57d8e81268d8735eecf4d1cb62c7fa0d1b6f83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;execute&lt;/code&gt; method is called when the command is invoked, and it should return the exit status (0 for success, anything else for error).</source>
          <target state="translated">调用命令时将调用 &lt;code&gt;execute&lt;/code&gt; 方法，该方法应返回退出状态（0表示成功，其他表示错误）。</target>
        </trans-unit>
        <trans-unit id="9b5671c2a3c03bbab4553b211e8d64205bcc3733" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finalize!&lt;/code&gt; method is called only once ever on the final configuration object in order to set defaults. If &lt;code&gt;finalize!&lt;/code&gt; is called, that configuration will never be merged again, it is final. This lets you detect any &lt;code&gt;UNSET_VALUE&lt;/code&gt; and set the proper default, as we do in the above example.</source>
          <target state="translated">在 &lt;code&gt;finalize!&lt;/code&gt; 为了设置默认值，仅在最终配置对象上调用一次方法。如果 &lt;code&gt;finalize!&lt;/code&gt; 称为，该配置将不再被合并，它是最终的。就像上面的示例一样，这使您可以检测到任何 &lt;code&gt;UNSET_VALUE&lt;/code&gt; 并设置适当的默认值。</target>
        </trans-unit>
        <trans-unit id="5abfe66513453924d0ac73baeb0288e81d1ae3c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;for i in  ...&lt;/code&gt; construct in Ruby actually modifies the value of &lt;code&gt;i&lt;/code&gt; for each iteration, rather than making a copy. Therefore, when you run this, every node will actually provision with the same text.</source>
          <target state="translated">Ruby中的 &lt;code&gt;for i in ...&lt;/code&gt; 构造实际上是为每次迭代修改 &lt;code&gt;i&lt;/code&gt; 的值，而不是进行复制。因此，当您运行此命令时，每个节点实际上将提供相同的文本。</target>
        </trans-unit>
        <trans-unit id="8db1dfc6ddb3057a765d5cba7ea72016fce3c5a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parse_options&lt;/code&gt; method is available which will parse the command line for you. It takes an &lt;a href=&quot;http://ruby-doc.org/stdlib-1.9.3/libdoc/optparse/rdoc/OptionParser.html&quot;&gt;OptionParser&lt;/a&gt; as an argument, and adds some common elements to it such as the &lt;code&gt;--help&lt;/code&gt; flag, automatically showing help if requested. View the API docs directly for more information.</source>
          <target state="translated">该 &lt;code&gt;parse_options&lt;/code&gt; 函数方法可将分析命令行给你。它使用&lt;a href=&quot;http://ruby-doc.org/stdlib-1.9.3/libdoc/optparse/rdoc/OptionParser.html&quot;&gt;OptionParser&lt;/a&gt;作为参数，并向其中添加一些常见元素，例如 &lt;code&gt;--help&lt;/code&gt; 标志，如果需要，它会自动显示帮助。直接查看API文档以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="29246045eda8a44e1837dd83a070e7e69daa95da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;playbook.yml&lt;/code&gt; file is stored in your Vagrant's project home directory.</source>
          <target state="translated">该 &lt;code&gt;playbook.yml&lt;/code&gt; 文件存储在您的流浪的项目主目录。</target>
        </trans-unit>
        <trans-unit id="3c27be372193634ae1f9b9bff10185f18daf4030" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;playbook&lt;/code&gt; option is strictly required by both Ansible provisioners (&lt;a href=&quot;ansible&quot;&gt;&lt;code&gt;ansible&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;ansible_local&quot;&gt;&lt;code&gt;ansible_local&lt;/code&gt;&lt;/a&gt;), as illustrated in this basic Vagrantfile` configuration:</source>
          <target state="translated">该 &lt;code&gt;playbook&lt;/code&gt; 选项严格受两个Ansible置备（必需&lt;a href=&quot;ansible&quot;&gt; &lt;code&gt;ansible&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;ansible_local&quot;&gt; &lt;code&gt;ansible_local&lt;/code&gt; &lt;/a&gt;），如在该基本Vagrantfile`配置所示：</target>
        </trans-unit>
        <trans-unit id="e861ced1f8b5cafbf53d0a4de6a9b32e203c9c05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;provision&lt;/code&gt; method is called when the machine is booted and ready for SSH connections. In this method, the provisioner should execute any commands that need to be executed.</source>
          <target state="translated">该 &lt;code&gt;provision&lt;/code&gt; 时，机器启动并准备好SSH连接方法被调用。在这种方法中，供应方应执行任何需要执行的命令。</target>
        </trans-unit>
        <trans-unit id="c556a245edf8af7cfea11c26e8e9ac9350b3b8c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;puppet_server&lt;/code&gt; provisioner takes various options. None are strictly required. They are listed below:</source>
          <target state="translated">该 &lt;code&gt;puppet_server&lt;/code&gt; 供应方采取的各种选项。没有严格要求。它们在下面列出：</target>
        </trans-unit>
        <trans-unit id="e118119882eed4b48c1b6e39401f3c96cdc9ae5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rsync-auto&lt;/code&gt; command does not currently handle machine state changes gracefully. For example, if you start the &lt;code&gt;rsync-auto&lt;/code&gt; command, then halt the guest machine, then make changes to some files, then boot it back up, &lt;code&gt;rsync-auto&lt;/code&gt; will not attempt to resync.</source>
          <target state="translated">在 &lt;code&gt;rsync-auto&lt;/code&gt; 命令当前不处理机器状态的变化优雅。例如，如果启动 &lt;code&gt;rsync-auto&lt;/code&gt; 命令，然后停止客户机，然后对某些文件进行更改，然后重新启动它，则 &lt;code&gt;rsync-auto&lt;/code&gt; 将不会尝试重新同步。</target>
        </trans-unit>
        <trans-unit id="3492a7febca42b2a6152991481af17957cfc7bbe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;run_file&lt;/code&gt; parameter is mandatory if &lt;code&gt;mode&lt;/code&gt; is set to &lt;code&gt;:single_run&lt;/code&gt;, but can also be specified when &lt;code&gt;mode&lt;/code&gt; is set to &lt;code&gt;:bootstrap&lt;/code&gt; - in this case the file will be executed after the host has been bootstrapped.</source>
          <target state="translated">该 &lt;code&gt;run_file&lt;/code&gt; 如果参数是必需的 &lt;code&gt;mode&lt;/code&gt; 设置为 &lt;code&gt;:single_run&lt;/code&gt; ，但当也可以指定 &lt;code&gt;mode&lt;/code&gt; 设置为 &lt;code&gt;:bootstrap&lt;/code&gt; 在这种情况下，主机已经被自举后的文件将被执行- 。</target>
        </trans-unit>
        <trans-unit id="21a2cb9b2376d01fe13f0746f01152789fa06f28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vagrant box&lt;/code&gt; utility provides all the functionality for managing boxes. You can read the documentation on the &lt;a href=&quot;cli/box&quot;&gt;vagrant box&lt;/a&gt; command for more information.</source>
          <target state="translated">该 &lt;code&gt;vagrant box&lt;/code&gt; 工具提供所有用于管理箱的功能。您可以阅读&lt;a href=&quot;cli/box&quot;&gt;vagrant box&lt;/a&gt;命令上的文档以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="e9011634bd80cb69484b8548d690e3d9e15d2c43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;virtualbox&lt;/code&gt; box format is just a flat directory of the contents of a &lt;code&gt;VBoxManage export&lt;/code&gt; command.</source>
          <target state="translated">在 &lt;code&gt;virtualbox&lt;/code&gt; 框格式的内容只是一个平坦的目录 &lt;code&gt;VBoxManage export&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="cf837faef6812ab269b6fc2ead1cfa650dfafe22" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vm_integration_services&lt;/code&gt; configuration option consists of a simple Hash. The key values are the names of VM integration services to enable or disable for the VM. Vagrant includes an internal mapping of known services which allows them to be provided in a &quot;snake case&quot; format. When a provided key is unknown, the key value is used &quot;as-is&quot; without any modifications.</source>
          <target state="translated">该 &lt;code&gt;vm_integration_services&lt;/code&gt; 配置选项包括一个简单的散列。关键值是要为VM启用或禁用的VM集成服务的名称。Vagrant包含已知服务的内部映射，该服务允许以&amp;ldquo;蛇案&amp;rdquo;格式提供它们。当提供的密钥未知时，将按原样使用密钥值，而无需进行任何修改。</target>
        </trans-unit>
        <trans-unit id="e15c4c61982b3725df526d80f2bfda1a9ccbe6cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vmware_fusion&lt;/code&gt; box format is just a flat directory of the contents of a &lt;code&gt;vmwarevm&lt;/code&gt; folder, but only including the bare essential files for VMware to function.</source>
          <target state="translated">该 &lt;code&gt;vmware_fusion&lt;/code&gt; 框格式的内容只是一个平坦的目录 &lt;code&gt;vmwarevm&lt;/code&gt; 文件夹，但只包括对VMware裸必需文件的功能。</target>
        </trans-unit>
        <trans-unit id="1284563dc4451fdb9467a66bfe7e0eeb1b812d25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;with_target_vms&lt;/code&gt; method is a helper that helps you interact with the machines that Vagrant manages in a standard Vagrant way. This method automatically does the right thing in the case of multi-machine environments, handling target machines on the command line (&lt;code&gt;vagrant foo my-vm&lt;/code&gt;), etc. If you need to do any manipulation of a Vagrant machine, including SSH access, this helper should be used.</source>
          <target state="translated">该 &lt;code&gt;with_target_vms&lt;/code&gt; 方法是一个辅助互相作用可以帮助您与流浪在一个标准的流浪方式管理设备。在多计算机环境中，此方法会自动执行正确的操作，在命令行上处理目标计算机（ &lt;code&gt;vagrant foo my-vm&lt;/code&gt; ，等等）。如果您需要对Vagrant计算机进行任何操作，包括SSH访问，则可以应该使用助手。</target>
        </trans-unit>
        <trans-unit id="73edfaa557cd469a64abf2d8953db76645fa536c" translate="yes" xml:space="preserve">
          <source>The Ansible Configuration File</source>
          <target state="translated">Ansible配置文件</target>
        </trans-unit>
        <trans-unit id="fd8fcc51d6fe6fb84b4fd4c249e62c07f730209a" translate="yes" xml:space="preserve">
          <source>The Ansible Local provisioner requires that all the Ansible Playbook files are available on the guest machine, at the location referred by the &lt;code&gt;provisioning_path&lt;/code&gt; option. Usually these files are initially present on the host machine (as part of your Vagrant project), and it is quite easy to share them with a Vagrant &lt;a href=&quot;../synced-folders/index&quot;&gt;Synced Folder&lt;/a&gt;.</source>
          <target state="translated">Ansible Local预配器要求所有Ansible Playbook文件在来宾计算机上都可以在 &lt;code&gt;provisioning_path&lt;/code&gt; 选项引用的位置使用。通常，这些文件最初是在主机上存在的（作为Vagrant项目的一部分），并且很容易与Vagrant &lt;a href=&quot;../synced-folders/index&quot;&gt;Synced Folder&lt;/a&gt;共享它们。</target>
        </trans-unit>
        <trans-unit id="10a7f0f21f63991527fa3cfe2cabc8769164f370" translate="yes" xml:space="preserve">
          <source>The Ansible provisioner is implemented with native OpenSSH support in mind, and there is no official support for &lt;a href=&quot;https://github.com/paramiko/paramiko/&quot;&gt;paramiko&lt;/a&gt; (A native Python SSHv2 protocol library).</source>
          <target state="translated">Ansible提供者在实现时会考虑到本机OpenSSH支持，并且对&lt;a href=&quot;https://github.com/paramiko/paramiko/&quot;&gt;paramiko&lt;/a&gt;（本机Python SSHv2协议库）没有官方支持。</target>
        </trans-unit>
        <trans-unit id="82ae0b5963090d09ecc0674f76be45ddf815ccb6" translate="yes" xml:space="preserve">
          <source>The CFEngine provisioner automatically installs the latest &lt;a href=&quot;https://cfengine.com/cfengine-linux-distros&quot;&gt;CFEngine Community packages&lt;/a&gt; on the VM, then configures and starts CFEngine according to your specification.</source>
          <target state="translated">CFEngine配置器会自动在VM上安装最新的&lt;a href=&quot;https://cfengine.com/cfengine-linux-distros&quot;&gt;CFEngine社区软件包&lt;/a&gt;，然后根据您的规范配置并启动CFEngine。</target>
        </trans-unit>
        <trans-unit id="01f3d2fb72b94ceb1edbe65a75911cb383067db0" translate="yes" xml:space="preserve">
          <source>The Chef Zero provisioner is configured basically the same way as the Chef Solo provisioner. See the &lt;a href=&quot;chef_solo&quot;&gt;Chef Solo documentations&lt;/a&gt; for more information.</source>
          <target state="translated">零厨师供应者的配置与厨师独奏供应者的配置基本相同。有关更多信息，请参见&lt;a href=&quot;chef_solo&quot;&gt;Chef Solo文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="77f1120793ea13a83d268a5e70a28ec947338da8" translate="yes" xml:space="preserve">
          <source>The Docker provider &lt;em&gt;does not&lt;/em&gt; require a &lt;code&gt;config.vm.box&lt;/code&gt; setting. Since the &quot;base image&quot; for a Docker container is pulled from the Docker Index or built from a Dockerfile, the box does not add much value, and is optional for this provider.</source>
          <target state="translated">泊坞窗提供商&lt;em&gt;并不&lt;/em&gt;需要 &lt;code&gt;config.vm.box&lt;/code&gt; 设置。由于Docker容器的&amp;ldquo;基本映像&amp;rdquo;是从Docker索引中提取的，或者是从Dockerfile构建的，因此该框不会增加太多价值，并且对于此提供程序而言是可选的。</target>
        </trans-unit>
        <trans-unit id="daa3ebe1904d1a37367a0e15eba6a7e0b9a37f7b" translate="yes" xml:space="preserve">
          <source>The Docker provider does not require a Vagrant box. The &lt;code&gt;config.vm.box&lt;/code&gt; setting is completely optional.</source>
          <target state="translated">Docker提供程序不需要Vagrant框。该 &lt;code&gt;config.vm.box&lt;/code&gt; 设置完全是可选的。</target>
        </trans-unit>
        <trans-unit id="0031988016df07765708a92b82091e288592a3f1" translate="yes" xml:space="preserve">
          <source>The Docker provider does not support specifying options for &lt;code&gt;owner&lt;/code&gt; or &lt;code&gt;group&lt;/code&gt; on folders synced with a docker container.</source>
          <target state="translated">Docker提供程序不支持为与Docker 容器同步的文件夹上的 &lt;code&gt;owner&lt;/code&gt; 或 &lt;code&gt;group&lt;/code&gt; 指定选项。</target>
        </trans-unit>
        <trans-unit id="4e8b7fa766c1a57de1a3924edf231dca14d7a74f" translate="yes" xml:space="preserve">
          <source>The Docker provider exposes some additional Vagrant commands that are useful for interacting with Docker containers. This helps with your workflow on top of Vagrant so that you have full access to Docker underneath.</source>
          <target state="translated">Docker提供者公开了一些额外的Vagrant命令,这些命令对于与Docker容器进行交互非常有用。这有助于您在Vagrant之上的工作流程,从而使您可以完全访问下面的Docker。</target>
        </trans-unit>
        <trans-unit id="ef3fca467c644e5b38e8b168a41b8089d4b6bf93" translate="yes" xml:space="preserve">
          <source>The Docker provider has some provider-specific configuration options you may set. A complete reference is shown below.</source>
          <target state="translated">Docker提供者有一些特定于提供者的配置选项,你可以设置。完整的参考如下所示。</target>
        </trans-unit>
        <trans-unit id="ae648dde653a9b3415ed377d5075b12635124097" translate="yes" xml:space="preserve">
          <source>The Docker provider in Vagrant behaves just like any other provider. If you are familiar with Vagrant already, then using the Docker provider should be intuitive and simple.</source>
          <target state="translated">Vagrant中的Docker提供者的行为就像其他提供者一样。如果你已经熟悉Vagrant,那么使用Docker提供者应该很直观和简单。</target>
        </trans-unit>
        <trans-unit id="173b90dd0d720ad7cb2b2b8e7f83a995892683b1" translate="yes" xml:space="preserve">
          <source>The Dockerfile is rebuilt when &lt;code&gt;vagrant reload&lt;/code&gt; is called.</source>
          <target state="translated">调用 &lt;code&gt;vagrant reload&lt;/code&gt; 时将重新构建Dockerfile 。</target>
        </trans-unit>
        <trans-unit id="6e92223aea2e8e6436c0f4fe210209d531b48eaf" translate="yes" xml:space="preserve">
          <source>The HTTPS share can be explicitly disabled using the &lt;code&gt;--disable-https&lt;/code&gt; flag.</source>
          <target state="translated">可以使用 &lt;code&gt;--disable-https&lt;/code&gt; 标志显式禁用HTTPS共享。</target>
        </trans-unit>
        <trans-unit id="e3ab64a49736da571153aae8147040ab548cc542" translate="yes" xml:space="preserve">
          <source>The Hyper-V provider is compatible with Windows 8.1 and later only. Prior versions of Hyper-V do not include the necessary APIs for Vagrant to work.</source>
          <target state="translated">Hyper-V提供商仅与Windows 8.1及更新版本兼容。以前版本的Hyper-V不包括Vagrant工作所需的API。</target>
        </trans-unit>
        <trans-unit id="9af33b9f5ed9526d3baa6c3721acc3cafa148d02" translate="yes" xml:space="preserve">
          <source>The IDs in the output that look like &lt;code&gt;a1b2c3&lt;/code&gt; can be used to control the Vagrant machine from anywhere on the system. Any Vagrant command that takes a target machine (such as &lt;code&gt;up&lt;/code&gt;, &lt;code&gt;halt&lt;/code&gt;, &lt;code&gt;destroy&lt;/code&gt;) can be used with this ID to control it. For example: &lt;code&gt;vagrant destroy a1b2c3&lt;/code&gt;.</source>
          <target state="translated">输出中看起来像 &lt;code&gt;a1b2c3&lt;/code&gt; 的ID 可用于从系统中的任何位置控制Vagrant机器。任何采用目标计算机的Vagrant命令（例如 &lt;code&gt;up&lt;/code&gt; ， &lt;code&gt;halt&lt;/code&gt; ， &lt;code&gt;destroy&lt;/code&gt; ）都可以与此ID一起使用来控制它。例如： &lt;code&gt;vagrant destroy a1b2c3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e76fbc10650d9afb3e74e0eafdc4d074a53ec8d" translate="yes" xml:space="preserve">
          <source>The Inventory File</source>
          <target state="translated">库存文件</target>
        </trans-unit>
        <trans-unit id="dfb56a9a529f952670570b4b9adbcdfee8921329" translate="yes" xml:space="preserve">
          <source>The MAC address of the first network interface (the NAT adapter) should be noted, since you will need to put it in a Vagrantfile later as the value for &lt;code&gt;config.vm.base_mac&lt;/code&gt;. To get this value, use the VirtualBox GUI.</source>
          <target state="translated">应该注意第一个网络接口（NAT适配器）的MAC地址，因为稍后需要将它作为 &lt;code&gt;config.vm.base_mac&lt;/code&gt; 的值放入Vagrantfile中。要获得此值，请使用VirtualBox GUI。</target>
        </trans-unit>
        <trans-unit id="52021055f81aa74945d5ea1c6aea5dd52b78ccec" translate="yes" xml:space="preserve">
          <source>The OpenSSH compatible SSH config for a machine. This is usually the result of the &quot;ssh-config&quot; command. targeted</source>
          <target state="translated">机器的OpenSSH兼容SSH配置。这通常是 &quot;ssh-config &quot;命令的结果,目标是</target>
        </trans-unit>
        <trans-unit id="474c14098f0fb3852d30c775c5eb1f79ef970516" translate="yes" xml:space="preserve">
          <source>The Playbook File</source>
          <target state="translated">游戏手册文件</target>
        </trans-unit>
        <trans-unit id="b64c2c9147e5c81aba4034cb3f4087ad7640f4cd" translate="yes" xml:space="preserve">
          <source>The SMB synced folder type has a variety of options it accepts:</source>
          <target state="translated">SMB同步文件夹类型有它接受的各种选项。</target>
        </trans-unit>
        <trans-unit id="da7efb4a06b7eb1756aa41d343b804640f0789a9" translate="yes" xml:space="preserve">
          <source>The SSH executable will not be able to access Pageant on Windows. While Vagrant is capable of accessing Pageant via internal libraries, the SSH executable does not have support for Pageant. This means keys from Pageant will not be available for forwarding when using the &lt;code&gt;vagrant ssh&lt;/code&gt; command.</source>
          <target state="translated">SSH可执行文件将无法在Windows上访问Pageant。尽管Vagrant能够通过内部库访问Pageant，但SSH可执行文件不支持Pageant。这意味着使用 &lt;code&gt;vagrant ssh&lt;/code&gt; 命令时，Pageant的密钥将无法转发。</target>
        </trans-unit>
        <trans-unit id="4c0542dd8849167ac56ffa62b6f913f560b8ddab" translate="yes" xml:space="preserve">
          <source>The SSH host addresses (and ports) must obviously be specified twice, in &lt;code&gt;Vagrantfile&lt;/code&gt; and &lt;code&gt;ansible.inventory_path&lt;/code&gt; files.</source>
          <target state="translated">显然，必须在 &lt;code&gt;Vagrantfile&lt;/code&gt; 和 &lt;code&gt;ansible.inventory_path&lt;/code&gt; 文件中两次指定SSH主机地址（和端口）。</target>
        </trans-unit>
        <trans-unit id="7fc2505108138f9e4c0a23b06d583484c9db9712" translate="yes" xml:space="preserve">
          <source>The VMware provider actually copies the entire virtual machine into this state directory, complete with virtual disk drives and everything.</source>
          <target state="translated">VMware提供商实际上是将整个虚拟机复制到这个状态目录中,完整的虚拟磁盘驱动器和一切。</target>
        </trans-unit>
        <trans-unit id="57e5e73dde5f5338a5de9a76367a9e3611ad791d" translate="yes" xml:space="preserve">
          <source>The Vagrant Ansible Local provisioner allows you to provision the guest using &lt;a href=&quot;http://ansible.com&quot;&gt;Ansible&lt;/a&gt; playbooks by executing &lt;strong&gt;&lt;code&gt;ansible-playbook&lt;/code&gt; directly on the guest machine&lt;/strong&gt;.</source>
          <target state="translated">Vagrant Ansible Local预配器允许您通过&lt;strong&gt;直接在来宾计算机上&lt;/strong&gt;执行&lt;strong&gt; &lt;code&gt;ansible-playbook&lt;/code&gt; &lt;/strong&gt;来使用&lt;a href=&quot;http://ansible.com&quot;&gt;Ansible&lt;/a&gt;剧本&lt;strong&gt;预配访客&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="d4cd4bfa8b01c1607feb7c29e90859bea04e7b2d" translate="yes" xml:space="preserve">
          <source>The Vagrant Ansible provisioner allows you to provision the guest using &lt;a href=&quot;http://ansible.com&quot;&gt;Ansible&lt;/a&gt; playbooks by executing &lt;strong&gt;&lt;code&gt;ansible-playbook&lt;/code&gt; from the Vagrant host&lt;/strong&gt;.</source>
          <target state="translated">Vagrant Ansible供应商允许您通过&lt;strong&gt;从Vagrant主机&lt;/strong&gt;执行&lt;strong&gt; &lt;code&gt;ansible-playbook&lt;/code&gt; &lt;/strong&gt;&lt;strong&gt;来&lt;/strong&gt;使用&lt;a href=&quot;http://ansible.com&quot;&gt;Ansible戏剧&lt;/a&gt;来供应访客。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="64ff5af7e2668840e7d9b71591e648fffa84afbd" translate="yes" xml:space="preserve">
          <source>The Vagrant CFEngine provisioner allows you to provision the guest using &lt;a href=&quot;https://cfengine.com/&quot;&gt;CFEngine&lt;/a&gt;. It can set up both CFEngine policy servers and clients. You can configure both the policy server and the clients in a single &lt;a href=&quot;../multi-machine/index&quot;&gt;multi-machine &lt;code&gt;Vagrantfile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Vagrant CFEngine调配器允许您使用&lt;a href=&quot;https://cfengine.com/&quot;&gt;CFEngine&lt;/a&gt;调配来宾。它可以同时设置CFEngine策略服务器和客户端。您可以在单个&lt;a href=&quot;../multi-machine/index&quot;&gt;多计算机 &lt;code&gt;Vagrantfile&lt;/code&gt; 中&lt;/a&gt;配置策略服务器和客户端。</target>
        </trans-unit>
        <trans-unit id="7dc9a2242b870a05adfe3f362130a5b30d9ea0b2" translate="yes" xml:space="preserve">
          <source>The Vagrant Chef Apply provisioner allows you to provision the guest using &lt;a href=&quot;https://www.getchef.com/&quot;&gt;Chef&lt;/a&gt;, specifically with &lt;a href=&quot;https://docs.getchef.com/ctl_chef_apply.html&quot;&gt;Chef Apply&lt;/a&gt;.</source>
          <target state="translated">Vagrant Chef Apply的供应者允许您使用&lt;a href=&quot;https://www.getchef.com/&quot;&gt;Chef&lt;/a&gt;来供应客人，特别是使用&lt;a href=&quot;https://docs.getchef.com/ctl_chef_apply.html&quot;&gt;Chef Apply&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="168a4577d39bea8471686aed91fd63d4abe52533" translate="yes" xml:space="preserve">
          <source>The Vagrant Chef Apply provisioner does not support data_bags. Please use a different Vagrant Chef provisioner if you need support for data_bags.</source>
          <target state="translated">Vagrant Chef Apply供应器不支持data_bags。如果您需要数据袋的支持,请使用不同的Vagrant Chef供应器。</target>
        </trans-unit>
        <trans-unit id="9ed67c500933ee9b7aa76e4d529ba2fe4a1f9b70" translate="yes" xml:space="preserve">
          <source>The Vagrant Chef Apply provisioner does not support roles. Please use a different Vagrant Chef provisioner if you need support for roles.</source>
          <target state="translated">Vagrant Chef Apply供应程序不支持角色。如果您需要角色支持,请使用其他Vagrant Chef供应器。</target>
        </trans-unit>
        <trans-unit id="b48a0b85b75819e39bb74775fd65765a414202f2" translate="yes" xml:space="preserve">
          <source>The Vagrant Chef Client provisioner allows you to provision the guest using &lt;a href=&quot;https://www.chef.io/chef/&quot;&gt;Chef&lt;/a&gt;, specifically by connecting to an existing Chef Server and registering the Vagrant machine as a node within your infrastructure.</source>
          <target state="translated">Vagrant Chef客户端供应器允许您使用&lt;a href=&quot;https://www.chef.io/chef/&quot;&gt;Chef&lt;/a&gt;来配置来宾，特别是通过连接到现有的Chef Server并将Vagrant计算机注册为基础结构内的节点。</target>
        </trans-unit>
        <trans-unit id="522d8e8ec324f5eaff5cccd2ed0227b3db2f3b97" translate="yes" xml:space="preserve">
          <source>The Vagrant Chef Solo provisioner allows you to provision the guest using &lt;a href=&quot;https://www.chef.io/chef/&quot;&gt;Chef&lt;/a&gt;, specifically with &lt;a href=&quot;https://docs.chef.io/chef_solo.html&quot;&gt;Chef Solo&lt;/a&gt;.</source>
          <target state="translated">Vagrant Chef Solo提供者可让您使用&lt;a href=&quot;https://www.chef.io/chef/&quot;&gt;Chef&lt;/a&gt;（特别是&lt;a href=&quot;https://docs.chef.io/chef_solo.html&quot;&gt;Chef Solo）&lt;/a&gt;来配置访客。</target>
        </trans-unit>
        <trans-unit id="bc22451bc2d9cdcde30babc6e04c0cc31da77eea" translate="yes" xml:space="preserve">
          <source>The Vagrant Chef Zero provisioner allows you to provision the guest using &lt;a href=&quot;https://www.getchef.com/chef/&quot;&gt;Chef&lt;/a&gt;, specifically with &lt;a href=&quot;https://docs.getchef.com/ctl_chef_client.html#run-in-local-mode&quot;&gt;Chef Zero/local mode&lt;/a&gt;.</source>
          <target state="translated">Vagrant Chef Zero置备人员可让您使用&lt;a href=&quot;https://www.getchef.com/chef/&quot;&gt;Chef&lt;/a&gt;（特别是&lt;a href=&quot;https://docs.getchef.com/ctl_chef_client.html#run-in-local-mode&quot;&gt;Chef Zero /本地模式）&lt;/a&gt;置备来宾。</target>
        </trans-unit>
        <trans-unit id="223cdd0e84697ec1390c5765d1dfe2b701e3648f" translate="yes" xml:space="preserve">
          <source>The Vagrant Docker provisioner can automatically install &lt;a href=&quot;https://www.docker.io&quot;&gt;Docker&lt;/a&gt;, pull Docker containers, and configure certain containers to run on boot.</source>
          <target state="translated">Vagrant Docker供应商可以自动安装&lt;a href=&quot;https://www.docker.io&quot;&gt;Docker&lt;/a&gt;，提取Docker容器并配置某些容器以在启动时运行。</target>
        </trans-unit>
        <trans-unit id="e19ff9d4aa572631f5bdc4a6ae757fc90db896d4" translate="yes" xml:space="preserve">
          <source>The Vagrant Hyper-V provider has some provider-specific configuration options you may set. A complete reference is shown below:</source>
          <target state="translated">Vagrant Hyper-V提供商有一些您可以设置的特定提供商配置选项。完整的参考如下所示。</target>
        </trans-unit>
        <trans-unit id="60ab073651b56cdcb793cbfe6bdc070f99f2ad78" translate="yes" xml:space="preserve">
          <source>The Vagrant Hyper-V provider is used just like any other provider. Please read the general &lt;a href=&quot;../providers/basic_usage&quot;&gt;basic usage&lt;/a&gt; page for providers.</source>
          <target state="translated">Vagrant Hyper-V提供程序的使用与其他任何提供程序一样。请阅读提供商的常规&lt;a href=&quot;../providers/basic_usage&quot;&gt;基本用法&lt;/a&gt;页面。</target>
        </trans-unit>
        <trans-unit id="c0bebdc9e85b1b8e8a7dfe1ad9b6e1f730cd39e0" translate="yes" xml:space="preserve">
          <source>The Vagrant Hyper-V provider works in almost every way like the VirtualBox or VMware provider would, but has some limitations that are inherent to Hyper-V itself.</source>
          <target state="translated">Vagrant Hyper-V提供商的工作方式几乎和VirtualBox或VMware提供商一样,但有一些Hyper-V本身固有的限制。</target>
        </trans-unit>
        <trans-unit id="cc1c2001f25cd41a55e9b83aae7ab33365c82495" translate="yes" xml:space="preserve">
          <source>The Vagrant Puppet agent provisioner allows you to provision the guest using &lt;a href=&quot;https://www.puppetlabs.com/puppet&quot;&gt;Puppet&lt;/a&gt;, specifically by calling &lt;code&gt;puppet agent&lt;/code&gt;, connecting to a Puppet master, and retrieving the set of modules and manifests from there.</source>
          <target state="translated">Vagrant Puppet代理供应商允许您使用&lt;a href=&quot;https://www.puppetlabs.com/puppet&quot;&gt;Puppet&lt;/a&gt;来供应访客，特别是通过调用 &lt;code&gt;puppet agent&lt;/code&gt; ，连接到Puppet主服务器并从那里获取模块和清单集。</target>
        </trans-unit>
        <trans-unit id="5140749e3a4f4e2d40ea956cc77eb2e2061ff5e0" translate="yes" xml:space="preserve">
          <source>The Vagrant Puppet provisioner allows you to provision the guest using &lt;a href=&quot;https://www.puppetlabs.com/puppet&quot;&gt;Puppet&lt;/a&gt;, specifically by calling &lt;code&gt;puppet apply&lt;/code&gt;, without a Puppet Master.</source>
          <target state="translated">Vagrant Puppet供应商允许您使用&lt;a href=&quot;https://www.puppetlabs.com/puppet&quot;&gt;Puppet&lt;/a&gt;来供应访客，特别是通过调用 &lt;code&gt;puppet apply&lt;/code&gt; 而无需Puppet主服务器。</target>
        </trans-unit>
        <trans-unit id="efcb620a80a47e2175559d022ca9263734d63b76" translate="yes" xml:space="preserve">
          <source>The Vagrant Push FTP And SFTP strategy supports the following configuration options:</source>
          <target state="translated">Vagrant推送FTP和SFTP策略支持以下配置选项。</target>
        </trans-unit>
        <trans-unit id="31929e0df6d194c451cffff94fe2744d20746d88" translate="yes" xml:space="preserve">
          <source>The Vagrant Push FTP and SFTP strategy is defined in the &lt;code&gt;Vagrantfile&lt;/code&gt; using the &lt;code&gt;ftp&lt;/code&gt; key:</source>
          <target state="translated">在 &lt;code&gt;Vagrantfile&lt;/code&gt; 中使用 &lt;code&gt;ftp&lt;/code&gt; 键定义了Vagrant Push FTP和SFTP策略：</target>
        </trans-unit>
        <trans-unit id="aa52f4ae9b67dcfdfdd6b8faeb0278c5dbce78b8" translate="yes" xml:space="preserve">
          <source>The Vagrant Push Heroku strategy is defined in the &lt;code&gt;Vagrantfile&lt;/code&gt; using the &lt;code&gt;heroku&lt;/code&gt; key:</source>
          <target state="translated">Vagrant Push Heroku策略是使用 &lt;code&gt;heroku&lt;/code&gt; 键在 &lt;code&gt;Vagrantfile&lt;/code&gt; 中定义的：</target>
        </trans-unit>
        <trans-unit id="566c7856be2455e62796137f681a22e46f077018" translate="yes" xml:space="preserve">
          <source>The Vagrant Push Heroku strategy supports the following configuration options:</source>
          <target state="translated">Vagrant Push Heroku策略支持以下配置选项。</target>
        </trans-unit>
        <trans-unit id="2705d7ca4f26123d20d9ec777b2e81ced8ed2506" translate="yes" xml:space="preserve">
          <source>The Vagrant Push Local Exec strategy allows the user to invoke an arbitrary shell command or script as part of a push.</source>
          <target state="translated">Vagrant推送本地执行策略允许用户调用任意shell命令或脚本作为推送的一部分。</target>
        </trans-unit>
        <trans-unit id="3521dfc71423350f6f3eefa3ed2ed094df2b3a81" translate="yes" xml:space="preserve">
          <source>The Vagrant Push Local Exec strategy is defined in the &lt;code&gt;Vagrantfile&lt;/code&gt; using the &lt;code&gt;local-exec&lt;/code&gt; key:</source>
          <target state="translated">使用 &lt;code&gt;local-exec&lt;/code&gt; 键在 &lt;code&gt;Vagrantfile&lt;/code&gt; 中定义了Vagrant Push Local Exec策略：</target>
        </trans-unit>
        <trans-unit id="7235b31707d53bf15a0fa1b27747faa21bfca75b" translate="yes" xml:space="preserve">
          <source>The Vagrant Push Local Exec strategy supports the following configuration options:</source>
          <target state="translated">Vagrant Push Local Exec策略支持以下配置选项。</target>
        </trans-unit>
        <trans-unit id="8c6837f0a622faef033a3d4e519eb29cb9299db3" translate="yes" xml:space="preserve">
          <source>The Vagrant Salt provisioner allows you to provision the guest using &lt;a href=&quot;http://saltstack.com/&quot;&gt;Salt&lt;/a&gt; states.</source>
          <target state="translated">Vagrant Salt调配器允许您使用&lt;a href=&quot;http://saltstack.com/&quot;&gt;Salt&lt;/a&gt;状态调配来宾。</target>
        </trans-unit>
        <trans-unit id="8ee4ac3fae0d6669d702df5b6fa1278208e24489" translate="yes" xml:space="preserve">
          <source>The Vagrant Shell provisioner allows you to upload and execute a script within the guest machine.</source>
          <target state="translated">Vagrant Shell供应器允许您上传并在客户机内执行脚本。</target>
        </trans-unit>
        <trans-unit id="17b8e3d1a6dbe5998462be8b7f74441739ba164b" translate="yes" xml:space="preserve">
          <source>The Vagrant VMware Desktop plugin can be updated directly from Vagrant. Run the following command to update Vagrant to the latest version of the Vagrant VMware Desktop plugin:</source>
          <target state="translated">Vagrant VMware Desktop插件可以直接从Vagrant更新。运行以下命令将Vagrant更新为最新版本的Vagrant VMware Desktop插件。</target>
        </trans-unit>
        <trans-unit id="954f7e2af00c5a15f16a73da16d6c864596fdf59" translate="yes" xml:space="preserve">
          <source>The Vagrant VMware Fusion and Vagrant VMware Workstation plugins are not compatible with trial versions of the VMware products. We apologize for the inconvenience.</source>
          <target state="translated">Vagrant VMware Fusion和Vagrant VMware Workstation插件与试用版的VMware产品不兼容。我们对造成的不便表示歉意。</target>
        </trans-unit>
        <trans-unit id="5e24cd4a5605e11b83489517550569ca7f9ba5d8" translate="yes" xml:space="preserve">
          <source>The Vagrant VMware Utility consists of a small service which runs on the host platform. When the utility installer package is installed, the service is configured to automatically start. If the plugin reports errors communicating with the service, it may have stopped for some reason. The most common cause of the service not being in a running state is the VMware application not being installed. The service can be started again by using the proper command below:</source>
          <target state="translated">Vagrant VMware Utility由一个运行在主机平台上的小型服务组成。当安装实用程序安装包时,该服务被配置为自动启动。如果插件报告与服务通信错误,可能是由于某种原因停止了服务。服务不处于运行状态的最常见原因是没有安装VMware应用程序。可以通过使用下面的正确命令重新启动服务。</target>
        </trans-unit>
        <trans-unit id="f4c61e9c394e8983a7018996ade2a9e59388b870" translate="yes" xml:space="preserve">
          <source>The Vagrant VMware Utility is provided as a system package. To install the utility, download and install the correct system package from the downloads page.</source>
          <target state="translated">Vagrant VMware实用程序作为一个系统包提供。要安装该实用程序,请从下载页面下载并安装正确的系统包。</target>
        </trans-unit>
        <trans-unit id="234695a6ddb42c20be293bf17fc52a99c205f4f5" translate="yes" xml:space="preserve">
          <source>The Vagrant VMware Utility provides support for all users on the system using the Vagrant VMware Desktop plugin. If access restrictions to the Utility need to be applied to users on the system, this can be accomplished by restricting user access to the certificates used for connecting to the service.</source>
          <target state="translated">Vagrant VMware Utility为系统中所有使用Vagrant VMware Desktop插件的用户提供支持。如果需要对系统上的用户进行实用程序的访问限制,可以通过限制用户访问用于连接服务的证书来实现。</target>
        </trans-unit>
        <trans-unit id="c5fccabf8634251d3faf0e00d757b29b22b0804b" translate="yes" xml:space="preserve">
          <source>The Vagrant VMware Utility provides the Vagrant VMware provider plugin access to various VMware functionalities. The Vagrant VMware Utility is required by the Vagrant VMware Desktop provider plugin.</source>
          <target state="translated">Vagrant VMware Utility为Vagrant VMware提供商插件提供了访问各种VMware功能的机会。Vagrant VMware Utility是Vagrant VMware Desktop提供商插件所需的。</target>
        </trans-unit>
        <trans-unit id="a3c375de9278dedcf1ada101cbf99b0b11e1f899" translate="yes" xml:space="preserve">
          <source>The Vagrant VMware plugin is a commercial product provided by &lt;a href=&quot;https://www.hashicorp.com&quot;&gt;HashiCorp&lt;/a&gt; and &lt;strong&gt;require the purchase of a license&lt;/strong&gt; to operate. To purchase a license, please visit the &lt;a href=&quot;https://www.vagrantup.com/vmware#buy-now&quot;&gt;Vagrant VMware provider&lt;/a&gt; page. Upon purchasing a license, you will receive a license file in your inbox. Download this file and save it to a temporary location on your computer.</source>
          <target state="translated">Vagrant VMware插件是&lt;a href=&quot;https://www.hashicorp.com&quot;&gt;HashiCorp&lt;/a&gt;提供的商业产品，&lt;strong&gt;需要购买许可证&lt;/strong&gt;才能运行。要购买许可证，请访问&lt;a href=&quot;https://www.vagrantup.com/vmware#buy-now&quot;&gt;Vagrant VMware供应商&lt;/a&gt;页面。购买许可证后，您将在收件箱中收到许可证文件。下载此文件并将其保存到计算机上的临时位置。</target>
        </trans-unit>
        <trans-unit id="2bfbe625f2f3f8ae14a5cca9799cf81ba9837d5c" translate="yes" xml:space="preserve">
          <source>The Vagrant VMware plugin licenses are valid for specific VMware product versions at the time of purchase. When new versions of VMware products are released, significant changes to the plugin code are often required to support this new version. For this reason, you may need to upgrade your current license to work with the new version of the VMware product. Customers can check their license upgrade eligibility by visiting the &lt;a href=&quot;https://license.hashicorp.com/upgrade/vmware&quot;&gt;License Upgrade Center&lt;/a&gt; and entering the email address with which they made the original purchase.</source>
          <target state="translated">购买时，Vagrant VMware插件许可证对特定的VMware产品版本有效。发布新版本的VMware产品时，通常需要对插件代码进行重大更改才能支持此新版本。因此，您可能需要升级当前许可证才能使用新版本的VMware产品。客户可以通过访问&lt;a href=&quot;https://license.hashicorp.com/upgrade/vmware&quot;&gt;许可证升级中心&lt;/a&gt;并输入进行原始购买的电子邮件地址来检查其许可证升级的资格。</target>
        </trans-unit>
        <trans-unit id="2f96e304b4563556882e62a5990399efda43c54d" translate="yes" xml:space="preserve">
          <source>The Vagrant VMware provider does not support parallel execution at this time. Specifying the &lt;code&gt;--parallel&lt;/code&gt; option will have no effect.</source>
          <target state="translated">Vagrant VMware提供程序目前不支持并行执行。指定 &lt;code&gt;--parallel&lt;/code&gt; 选项将无效。</target>
        </trans-unit>
        <trans-unit id="f614f68c2eb3c1c5227e941a07b39f2629076b9e" translate="yes" xml:space="preserve">
          <source>The Vagrant VMware provider is used just like any other provider. Please read the general &lt;a href=&quot;../providers/basic_usage&quot;&gt;basic usage&lt;/a&gt; page for providers.</source>
          <target state="translated">Vagrant VMware提供程序的使用与其他任何提供程序一样。请阅读提供商的常规&lt;a href=&quot;../providers/basic_usage&quot;&gt;基本用法&lt;/a&gt;页面。</target>
        </trans-unit>
        <trans-unit id="d9e0e74b40d3dd6889065de80c5b5759b6a7a0f5" translate="yes" xml:space="preserve">
          <source>The Vagrant VirtualBox provider does not support parallel execution at this time. Specifying the &lt;code&gt;--parallel&lt;/code&gt; option will have no effect.</source>
          <target state="translated">Vagrant VirtualBox提供程序目前不支持并行执行。指定 &lt;code&gt;--parallel&lt;/code&gt; 选项将无效。</target>
        </trans-unit>
        <trans-unit id="fb9eddda5f0fb17f2320f34729a6961bc5b89fd0" translate="yes" xml:space="preserve">
          <source>The Vagrant VirtualBox provider is used just like any other provider. Please read the general &lt;a href=&quot;../providers/basic_usage&quot;&gt;basic usage&lt;/a&gt; page for providers.</source>
          <target state="translated">Vagrant VirtualBox提供程序的使用与其他任何提供程序一样。请阅读提供商的常规&lt;a href=&quot;../providers/basic_usage&quot;&gt;基本用法&lt;/a&gt;页面。</target>
        </trans-unit>
        <trans-unit id="51589b1f45e20b1edf75fde3b6a11045712449bc" translate="yes" xml:space="preserve">
          <source>The Vagrant VirtualBox provider supports using the private network as a VirtualBox &lt;a href=&quot;https://www.virtualbox.org/manual/ch06.html#network_internal&quot;&gt;internal network&lt;/a&gt;. By default, private networks are host-only networks, because those are the easiest to work with. However, internal networks can be enabled as well.</source>
          <target state="translated">Vagrant VirtualBox提供程序支持将专用网络用作VirtualBox &lt;a href=&quot;https://www.virtualbox.org/manual/ch06.html#network_internal&quot;&gt;内部网络&lt;/a&gt;。默认情况下，专用网络是仅主机的网络，因为它们最容易使用。但是，也可以启用内部网络。</target>
        </trans-unit>
        <trans-unit id="655df8281b46805c0835fc84cdeb3b096f5af28e" translate="yes" xml:space="preserve">
          <source>The Vagrant file provisioner allows you to upload a file or directory from the host machine to the guest machine.</source>
          <target state="translated">Vagrant文件供应器允许您将一个文件或目录从主机上传到客户机。</target>
        </trans-unit>
        <trans-unit id="9c1be47a6d85465c3c15143c3b342951113a8062" translate="yes" xml:space="preserve">
          <source>The Vagrantfile is a very flexible configuration format. Since it is just Ruby, there is a lot you can do with it. However, in that same vein, since it is Ruby, there are a lot of ways you can shoot yourself in the foot. When using some of the tips and tricks on this page, please take care to use them correctly.</source>
          <target state="translated">Vagrantfile是一种非常灵活的配置格式。因为它只是Ruby,所以你可以用它做很多事情。然而,同样的,既然是Ruby,你也有很多方法可以让你自己射中自己的脚。在使用本页面的一些技巧和窍门时,请注意正确使用。</target>
        </trans-unit>
        <trans-unit id="8ce781f3eb04f7990720e7d6c4a7cddaf7ca5247" translate="yes" xml:space="preserve">
          <source>The VirtualBox provider exposes some additional configuration options that allow you to more finely control your VirtualBox-powered Vagrant environments.</source>
          <target state="translated">VirtualBox提供商提供了一些额外的配置选项,允许您更精细地控制VirtualBox驱动的Vagrant环境。</target>
        </trans-unit>
        <trans-unit id="214673869ae424a091e15675a8cb6c1c6a7c2b58" translate="yes" xml:space="preserve">
          <source>The VirtualBox provider is compatible with VirtualBox versions 4.0.x, 4.1.x, 4.2.x, 4.3.x, 5.0.x, 5.1.x, and 5.2.x. Other versions are unsupported and the provider will display an error message. Please note that beta and pre-release versions of VirtualBox are not supported and may not be well-behaved.</source>
          <target state="translated">VirtualBox 提供者与 VirtualBox 4.0.x、4.1.x、4.2.x、4.3.x、5.0.x、5.1.x 和 5.2.x 版本兼容。其他版本不受支持,提供者将显示错误信息。请注意,不支持VirtualBox的测试版和预发布版,并且可能会不太正常。</target>
        </trans-unit>
        <trans-unit id="0e61ed438da3e957f7b7c7fd787a702fed2b2df1" translate="yes" xml:space="preserve">
          <source>The WinSSH communicator is built specifically for the Windows native port of OpenSSH. It does not rely on a POSIX-like environment which removes the requirement of extra software installation (like cygwin) for proper functionality.</source>
          <target state="translated">WinSSH通信器是专门为OpenSSH的Windows本地端口而构建的。它不依赖于类似POSIX的环境,这就消除了安装额外软件的要求(如cygwin)以获得适当的功能。</target>
        </trans-unit>
        <trans-unit id="1694c2d8f26cc5c5a3aa07a410e25956e5681e15" translate="yes" xml:space="preserve">
          <source>The WinSSH communicator uses the same connection configuration options as the SSH communicator. These settings provide the information for the communicator to establish a connection to the VM.</source>
          <target state="translated">WinSSH 通信器使用与 SSH 通信器相同的连接配置选项。这些设置为通信器提供了与虚拟机建立连接的信息。</target>
        </trans-unit>
        <trans-unit id="a28d2802f77d90a6b1d2cc603804cc5c309ef558" translate="yes" xml:space="preserve">
          <source>The above alias, from within the context of an active Vagrant project, would print the CPU and memory utilization directly to the console:</source>
          <target state="translated">上述别名,在一个活动的Vagrant项目中,可以直接将CPU和内存利用率打印到控制台。</target>
        </trans-unit>
        <trans-unit id="afe0beea3dafc4a7bcf504a81bcfb4e53090bf54" translate="yes" xml:space="preserve">
          <source>The above command on Windows will execute &lt;code&gt;mstsc.exe /span config.rdp&lt;/code&gt;, allowing your RDP to span multiple desktops.</source>
          <target state="translated">Windows上的上述命令将执行 &lt;code&gt;mstsc.exe /span config.rdp&lt;/code&gt; ，从而使您的RDP可以跨越多个桌面。</target>
        </trans-unit>
        <trans-unit id="6b09cc000aed0f47f1d02113249d3c9b2d0668f9" translate="yes" xml:space="preserve">
          <source>The above configuration will look for a &lt;code&gt;Dockerfile&lt;/code&gt; in the same directory as the Vagrantfile. When &lt;code&gt;vagrant up --provider=docker&lt;/code&gt; is run, Vagrant automatically builds that Dockerfile and starts a container based on that Dockerfile.</source>
          <target state="translated">上面的配置将在与 &lt;code&gt;Dockerfile&lt;/code&gt; 相同的目录中查找Dockerfile。当 &lt;code&gt;vagrant up --provider=docker&lt;/code&gt; 运行时，Vagrant自动构建该Dockerfile并基于该Dockerfile启动一个容器。</target>
        </trans-unit>
        <trans-unit id="fcae45772c0ce97dee02f5bec704fb2acaa121a2" translate="yes" xml:space="preserve">
          <source>The above error message is because another hypervisor (like KVM) is in use. We must blacklist these in order for VirtualBox to run correctly.</source>
          <target state="translated">上述错误信息是因为正在使用另一个管理程序(如KVM)。我们必须将这些列入黑名单,才能让VirtualBox正确运行。</target>
        </trans-unit>
        <trans-unit id="873e787e750d08edc0692932cac5613846b3b20b" translate="yes" xml:space="preserve">
          <source>The above would run &lt;code&gt;rake db:migrate&lt;/code&gt; in the context of an &lt;code&gt;app&lt;/code&gt; container.</source>
          <target state="translated">上面的代码将在 &lt;code&gt;app&lt;/code&gt; 容器的上下文中运行 &lt;code&gt;rake db:migrate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="839a0c566cf3fb941e9f7b37b92dd8b664ca36be" translate="yes" xml:space="preserve">
          <source>The actual box file is the required portion for Vagrant. It is recommended you always use a metadata file alongside a box file, but direct box files are supported for legacy reasons in Vagrant.</source>
          <target state="translated">实际的盒子文件是Vagrant需要的部分。建议您在使用盒子文件的同时使用元数据文件,但由于Vagrant的传统原因,支持直接的盒子文件。</target>
        </trans-unit>
        <trans-unit id="3945d23f39a0ae5b2e1d636145a49bffa27394bd" translate="yes" xml:space="preserve">
          <source>The argument to build an image is the path to give to &lt;code&gt;docker build&lt;/code&gt;. This must be a path that exists within the guest machine. If you need to get data to the guest machine, use a synced folder.</source>
          <target state="translated">构建映像的参数是提供给 &lt;code&gt;docker build&lt;/code&gt; 的路径。这必须是来宾计算机中存在的路径。如果需要将数据发送到客户机，请使用同步的文件夹。</target>
        </trans-unit>
        <trans-unit id="94b949cd2133ef5330f34f5b82a414175f18e1e7" translate="yes" xml:space="preserve">
          <source>The attributes that can be set in a single-line are the attributes that are set with the &lt;code&gt;=&lt;/code&gt; style, such as &lt;code&gt;inline = &quot;echo hello&quot;&lt;/code&gt; above. If the style is instead more of a function call, such as &lt;code&gt;add_recipe &quot;foo&quot;&lt;/code&gt;, then this cannot be specified in a single line.</source>
          <target state="translated">可以单行设置的属性是使用 &lt;code&gt;=&lt;/code&gt; 样式设置的属性，例如上面的 &lt;code&gt;inline = &quot;echo hello&quot;&lt;/code&gt; 。如果该样式更多是函数调用，例如 &lt;code&gt;add_recipe &quot;foo&quot;&lt;/code&gt; ，则不能在一行中指定该样式。</target>
        </trans-unit>
        <trans-unit id="fe75f21afd73554d0b9f41aa6ff4630d223aa653" translate="yes" xml:space="preserve">
          <source>The benefit of the block-based syntax is that with more than a couple options it can greatly improve readability. Additionally, some provisioners, like the Chef provisioner, have special methods that can be called within that block to ease configuration that cannot be done with the key/value approach, or you can use this syntax to pass arguments to a shell script.</source>
          <target state="translated">基于块的语法的好处是,如果有多个选项,可以大大提高可读性。另外,有些供应器,比如Chef供应器,有一些特殊的方法,可以在该块中调用,以方便用key/value方式无法完成的配置,也可以用这种语法将参数传递给shell脚本。</target>
        </trans-unit>
        <trans-unit id="8450e4b2545435a6a38bc9a988964cf5a19767a0" translate="yes" xml:space="preserve">
          <source>The best way to describe packaging and distribution is to look at how another plugin does it. The best example plugin available for this is &lt;a href=&quot;https://github.com/mitchellh/vagrant-aws&quot;&gt;vagrant-aws&lt;/a&gt;.</source>
          <target state="translated">描述打包和分发的最好方法是查看另一个插件的工作方式。可用的最佳示例插件是&lt;a href=&quot;https://github.com/mitchellh/vagrant-aws&quot;&gt;vagrant-aws&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e258f311e24b93bd8bb9942b6df25cf3068a7c7f" translate="yes" xml:space="preserve">
          <source>The best way to learn how to write a provider is to see how one is written in practice. To augment this documentation, please heavily study the &lt;a href=&quot;https://github.com/mitchellh/vagrant-aws&quot;&gt;vagrant-aws&lt;/a&gt; plugin, which implements an AWS provider. The plugin is a good example of how to structure, test, and implement your plugin.</source>
          <target state="translated">学习如何编写提供程序的最佳方法是查看实践中的编写程序。要扩充此文档，请认真研究&lt;a href=&quot;https://github.com/mitchellh/vagrant-aws&quot;&gt;vagrant-aws&lt;/a&gt;插件，该插件实现了AWS提供程序。该插件是如何构造，测试和实现插件的一个很好的例子。</target>
        </trans-unit>
        <trans-unit id="d654c774dcdaff42a8020c36b29e32a291d13dbe" translate="yes" xml:space="preserve">
          <source>The block argument is where the &quot;clever lazy loading&quot; (mentioned above) comes into play. The component blocks should lazy load the actual file that contains the implementation of the component, and then return that component.</source>
          <target state="translated">块参数是 &quot;巧妙的懒加载&quot;(上文提到)发挥作用的地方。组件块应该懒加载包含组件实现的实际文件,然后返回该组件。</target>
        </trans-unit>
        <trans-unit id="c472463d16caf27117bf582262a3146a74965592" translate="yes" xml:space="preserve">
          <source>The block argument then lazily loads and returns a class that implements the &lt;code&gt;Vagrant.plugin(2, :provider)&lt;/code&gt; interface, which is covered next.</source>
          <target state="translated">然后，block参数懒惰地加载并返回一个实现 &lt;code&gt;Vagrant.plugin(2, :provider)&lt;/code&gt; 接口的类，下面将对其进行介绍。</target>
        </trans-unit>
        <trans-unit id="86e8304e192e618f0526e2ec2bc44f1c0dbd15d3" translate="yes" xml:space="preserve">
          <source>The block argument then lazily loads and returns a class that implements the &lt;code&gt;Vagrant.plugin(2, :provisioner)&lt;/code&gt; interface, which is covered next.</source>
          <target state="translated">然后，block参数懒惰地加载并返回一个实现 &lt;code&gt;Vagrant.plugin(2, :provisioner)&lt;/code&gt; 接口的类，下面将对其进行介绍。</target>
        </trans-unit>
        <trans-unit id="88dfac7d672267c2af51c0f074c2376fa3cd985e" translate="yes" xml:space="preserve">
          <source>The box create command is used to create a new box entry on Vagrant Cloud.</source>
          <target state="translated">盒子创建命令用于在Vagrant Cloud上创建一个新的盒子条目。</target>
        </trans-unit>
        <trans-unit id="6d5b74923b83868e89a39312af21649991f6cb2a" translate="yes" xml:space="preserve">
          <source>The box delete command will &lt;em&gt;permanently&lt;/em&gt; delete the given box entry on Vagrant Cloud. Before making the request, it will ask if you are sure you want to delete the box.</source>
          <target state="translated">box delete命令将&lt;em&gt;永久&lt;/em&gt;删除Vagrant Cloud上的给定box条目。在发出请求之前，它将询问您是否确定要删除该框。</target>
        </trans-unit>
        <trans-unit id="e72c25f1b6eb4249e85ca8a6b2f2d531d752a5dc" translate="yes" xml:space="preserve">
          <source>The box show command will display information about the latest version for the given Vagrant box.</source>
          <target state="translated">box show命令将显示指定Vagrant盒子的最新版本信息。</target>
        </trans-unit>
        <trans-unit id="496542174c182f29a6c14cdfe34ba0f66458e73f" translate="yes" xml:space="preserve">
          <source>The box update command will update an already created box on Vagrant Cloud with the given options.</source>
          <target state="translated">盒子更新命令将用给定的选项更新Vagrant Cloud上已经创建的盒子。</target>
        </trans-unit>
        <trans-unit id="3d392a9153967866d20774f0d34110fd601ac505" translate="yes" xml:space="preserve">
          <source>The box version configuration can be a specific version or a constraint of versions. Constraints can be any combination of the following: &lt;code&gt;= X&lt;/code&gt;, &lt;code&gt;&amp;gt; X&lt;/code&gt;, &lt;code&gt;&amp;lt; X&lt;/code&gt;, &lt;code&gt;&amp;gt;= X&lt;/code&gt;, &lt;code&gt;&amp;lt;= X&lt;/code&gt;, &lt;code&gt;~&amp;gt; X&lt;/code&gt;. You can combine multiple constraints by separating them with commas. All the constraints should be self explanatory except perhaps for &lt;code&gt;~&amp;gt;&lt;/code&gt;, known as the &quot;pessimistic constraint&quot;. Examples explain it best: &lt;code&gt;~&amp;gt; 1.0&lt;/code&gt; is equivalent to &lt;code&gt;&amp;gt;= 1.0, &amp;lt; 2.0&lt;/code&gt;. And &lt;code&gt;~&amp;gt; 1.1.5&lt;/code&gt; is equivalent to &lt;code&gt;&amp;gt;= 1.1.5, &amp;lt; 1.2.0&lt;/code&gt;.</source>
          <target state="translated">盒装版本配置可以是特定版本或版本约束。约束可以是以下的任意组合： &lt;code&gt;= X&lt;/code&gt; ， &lt;code&gt;&amp;gt; X&lt;/code&gt; ， &lt;code&gt;&amp;lt; X&lt;/code&gt; ， &lt;code&gt;&amp;gt;= X&lt;/code&gt; ， &lt;code&gt;&amp;lt;= X&lt;/code&gt; ， &lt;code&gt;~&amp;gt; X&lt;/code&gt; 。您可以通过用逗号分隔多个约束来组合它们。除了 &lt;code&gt;~&amp;gt;&lt;/code&gt; 之外，所有约束都应该是自我解释的，这称为&amp;ldquo;悲观约束&amp;rdquo;。示例可以最好地说明： &lt;code&gt;~&amp;gt; 1.0&lt;/code&gt; 等于 &lt;code&gt;&amp;gt;= 1.0, &amp;lt; 2.0&lt;/code&gt; 。和 &lt;code&gt;~&amp;gt; 1.1.5&lt;/code&gt; 相当于 &lt;code&gt;&amp;gt;= 1.1.5, &amp;lt; 1.2.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c967fd4337be2bf821df7011cd5cfb7fe57ca1f6" translate="yes" xml:space="preserve">
          <source>The boxes on the public catalog work with many different &lt;a href=&quot;providers/index&quot;&gt;providers&lt;/a&gt;. Whether you are using Vagrant with VirtualBox, VMware, AWS, etc. you should be able to find a box you need.</source>
          <target state="translated">公共目录上的框可与许多不同的&lt;a href=&quot;providers/index&quot;&gt;提供程序一起使用&lt;/a&gt;。无论您将Vagrant与VirtualBox，VMware，AWS等一起使用，您都应该能够找到所需的盒子。</target>
        </trans-unit>
        <trans-unit id="419324f456296be59a19dcf1b0e987b17b76fad0" translate="yes" xml:space="preserve">
          <source>The change detection is optimized to use platform-specific APIs to listen for filesystem changes, and does not simply poll the directory.</source>
          <target state="translated">变化检测经过优化,使用平台特有的API来监听文件系统的变化,而不是简单的轮询目录。</target>
        </trans-unit>
        <trans-unit id="53aa835adb19d8873e74507b51a5ce2919bb09ae" translate="yes" xml:space="preserve">
          <source>The change is only visible within the &lt;code&gt;Vagrantfile&lt;/code&gt;.</source>
          <target state="translated">更改仅在 &lt;code&gt;Vagrantfile&lt;/code&gt; 中可见。</target>
        </trans-unit>
        <trans-unit id="cd559d8e7254c67f27e391a72c250fc055aab441" translate="yes" xml:space="preserve">
          <source>The cloud create command creates a version entry for a box on Vagrant Cloud.</source>
          <target state="translated">cloud create命令为Vagrant Cloud上的一个盒子创建一个版本条目。</target>
        </trans-unit>
        <trans-unit id="39eab4705be325a968e122dad2e9d5d5364661fa" translate="yes" xml:space="preserve">
          <source>The cloud delete command deletes a version entry for a box on Vagrant Cloud. Before making the request, it will ask if you are sure you want to delete the version.</source>
          <target state="translated">云删除命令可以删除Vagrant Cloud上的一个盒子的版本条目。在提出请求之前,它会询问您是否确定要删除该版本。</target>
        </trans-unit>
        <trans-unit id="139cec5990ca247857144af60936eebba73882f2" translate="yes" xml:space="preserve">
          <source>The cloud release command releases a version entry for a box on Vagrant Cloud if it already exists. Before making the request, it will ask if you are sure you want to release the version.</source>
          <target state="translated">如果Vagrant Cloud上的一个盒子已经存在,那么云发布命令可以发布它的版本条目。在提出请求之前,它会询问您是否确定要发布版本。</target>
        </trans-unit>
        <trans-unit id="ba65891c2f9c57c4b7116f69e616939d5de67693" translate="yes" xml:space="preserve">
          <source>The cloud revoke command revokes a version entry for a box on Vagrant Cloud if it already exists. Before making the request, it will ask if you are sure you want to revoke the version.</source>
          <target state="translated">如果Vagrant Cloud上的一个盒子已经存在,那么cloud revoke命令可以撤销它的版本条目。在提出请求之前,它会询问您是否确定要撤销版本。</target>
        </trans-unit>
        <trans-unit id="351775385095d04f667f26c9f57bb4d0f41b4591" translate="yes" xml:space="preserve">
          <source>The cloud search command will take a query and search Vagrant Cloud for any matching Vagrant boxes. Various filters can be applied to the results.</source>
          <target state="translated">云搜索命令将接受一个查询,并在Vagrant云中搜索任何匹配的Vagrant盒子。可以对结果应用各种过滤器。</target>
        </trans-unit>
        <trans-unit id="4fad06f9330bbb81ebdda4dfba80320bd4a79757" translate="yes" xml:space="preserve">
          <source>The configuration class returned from the &lt;code&gt;config&lt;/code&gt; component in the plugin is the same as any other &lt;a href=&quot;configuration&quot;&gt;configuration plugin&lt;/a&gt;, so read that page for more information. Vagrant automatically handles configuration validation and such just like any other configuration piece.</source>
          <target state="translated">从插件中的 &lt;code&gt;config&lt;/code&gt; 组件返回的配置类与任何其他&lt;a href=&quot;configuration&quot;&gt;配置插件&lt;/a&gt;相同，因此请阅读该页面以获取更多信息。Vagrant会像其他配置文件一样自动处理配置验证。</target>
        </trans-unit>
        <trans-unit id="d10ed783945f4e0d5711e52e96e7db9ac55077c1" translate="yes" xml:space="preserve">
          <source>The configuration format should look very similar to how provisioners are configured. The &lt;code&gt;config.vm.provider&lt;/code&gt; takes a single parameter: the name of the provider being configured. Then, an inner block with custom configuration options is exposed that can be used to configure that provider.</source>
          <target state="translated">配置格式应该看起来与配置预配器的方式非常相似。该 &lt;code&gt;config.vm.provider&lt;/code&gt; 采用单个参数：配置了供应商的名称。然后，将显示一个具有自定义配置选项的内部块，可用于配置该提供程序。</target>
        </trans-unit>
        <trans-unit id="c1485204bc3ca0d0d56014da8e7bda70fc8db9e6" translate="yes" xml:space="preserve">
          <source>The configuration options below are specific to the WinSSH communicator.</source>
          <target state="translated">下面的配置选项是针对WinSSH通信器的。</target>
        </trans-unit>
        <trans-unit id="feab399f663dad7698f6f9ad4118020216dbd796" translate="yes" xml:space="preserve">
          <source>The configuration value can also be an array of paths on Chef 11.8.0 and newer. On older Chef versions only the first path is used.</source>
          <target state="translated">在Chef 11.8.0和更新版本上,配置值也可以是一个路径数组。在旧的Chef版本中,只使用第一个路径。</target>
        </trans-unit>
        <trans-unit id="d6a76f38a21bd934156afbb52b271b155e9c7857" translate="yes" xml:space="preserve">
          <source>The configuration value can also be an array of paths:</source>
          <target state="translated">配置值也可以是一个路径数组。</target>
        </trans-unit>
        <trans-unit id="66ffcc51bc6e54dff621dea4bc988b16850e8b0d" translate="yes" xml:space="preserve">
          <source>The configured provisioners will not run again, by default. You can force the provisioners to re-run by specifying the &lt;code&gt;--provision&lt;/code&gt; flag.</source>
          <target state="translated">默认情况下，配置的预配器将不再运行。您可以通过指定 &lt;code&gt;--provision&lt;/code&gt; 标志来强制重新配置供应商。</target>
        </trans-unit>
        <trans-unit id="01e42dd44193eb9fa1932d8d1dfa8664ea32d823" translate="yes" xml:space="preserve">
          <source>The connect command complements the &lt;a href=&quot;share&quot;&gt;share command&lt;/a&gt; by enabling access to shared environments. You can learn about all the details of Vagrant Share in the &lt;a href=&quot;../share/index&quot;&gt;Vagrant Share section&lt;/a&gt;.</source>
          <target state="translated">connect命令通过启用对共享环境的访问来补充&lt;a href=&quot;share&quot;&gt;share命令&lt;/a&gt;。您可以在&amp;ldquo; &lt;a href=&quot;../share/index&quot;&gt;Vagrant Share&amp;rdquo;部分中&lt;/a&gt;了解&amp;ldquo; Vagrant Share&amp;rdquo;的所有详细信息。</target>
        </trans-unit>
        <trans-unit id="bddb4cc34d4a9383ce781f83a5d1a6cadb5b92bc" translate="yes" xml:space="preserve">
          <source>The current Ansible version does not correspond to the &lt;a href=&quot;ansible_common#version&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">当前的Ansible版本与&lt;a href=&quot;ansible_common#version&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt;选项不对应。</target>
        </trans-unit>
        <trans-unit id="26d379411462b5d473d25214bc24810042dcf27e" translate="yes" xml:space="preserve">
          <source>The default manifest is the environment's &lt;code&gt;manifests&lt;/code&gt; directory. If the environment has an &lt;code&gt;environment.conf&lt;/code&gt; the manifest path is parsed from there. Relative paths are assumed to be relative to the directory of the environment. If the manifest setting in &lt;code&gt;environment.conf&lt;/code&gt; use the Puppet variables &lt;code&gt;$codedir&lt;/code&gt; or &lt;code&gt;$environment&lt;/code&gt; they are resolved to the parent directory of &lt;code&gt;environment_path&lt;/code&gt; and &lt;code&gt;environment&lt;/code&gt; respectively.</source>
          <target state="translated">默认清单是环境的 &lt;code&gt;manifests&lt;/code&gt; 目录。如果环境具有 &lt;code&gt;environment.conf&lt;/code&gt; ，则从此处解析清单路径。假定相对路径是相对于环境目录的。如果 &lt;code&gt;environment.conf&lt;/code&gt; 中的清单设置使用Puppet变量 &lt;code&gt;$codedir&lt;/code&gt; 或 &lt;code&gt;$environment&lt;/code&gt; 它们将分别解析到 &lt;code&gt;environment_path&lt;/code&gt; 和 &lt;code&gt;environment&lt;/code&gt; 的父目录。</target>
        </trans-unit>
        <trans-unit id="15e857f0f7c2e075254963ac21481ec7b1ffee94" translate="yes" xml:space="preserve">
          <source>The default mode of operation is &lt;code&gt;:bootstrap&lt;/code&gt;, which results in CFEngine being bootstrapped according to the information provided in the &lt;code&gt;Vagrantfile&lt;/code&gt;. You can also set &lt;code&gt;mode&lt;/code&gt; to &lt;code&gt;:single_run&lt;/code&gt;, which will run &lt;code&gt;cf-agent&lt;/code&gt; once on the host to execute the file specified in the &lt;code&gt;run_file&lt;/code&gt; parameter, but will not bootstrap it, so it will not be executed periodically.</source>
          <target state="translated">操作的默认模式是 &lt;code&gt;:bootstrap&lt;/code&gt; ，这导致的cfengine根据在所提供的信息被自举 &lt;code&gt;Vagrantfile&lt;/code&gt; 。您还可以将 &lt;code&gt;mode&lt;/code&gt; 设置为 &lt;code&gt;:single_run&lt;/code&gt; ，它将在主机上运行 &lt;code&gt;cf-agent&lt;/code&gt; 一次以执行 &lt;code&gt;run_file&lt;/code&gt; 参数中指定的文件，但不会对其进行引导，因此不会定期执行。</target>
        </trans-unit>
        <trans-unit id="295c14b508ace18dcecb3d01f75b058880b74090" translate="yes" xml:space="preserve">
          <source>The default template for a &lt;code&gt;powershell&lt;/code&gt; configured shell is:</source>
          <target state="translated">&lt;code&gt;powershell&lt;/code&gt; 配置的Shell 的默认模板是：</target>
        </trans-unit>
        <trans-unit id="cc5d088069b599ff2690eeefab903a9c6c57dcc9" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;/tmp/vagrant-ansible&lt;/code&gt;</source>
          <target state="translated">默认值为 &lt;code&gt;/tmp/vagrant-ansible&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e00b1397a39a428491343f7d16c330f05f0d6ba" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;/vagrant&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;/vagrant&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a1fbbe185bdf92bf0e52d1cdb2795ada05740387" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;ansible-playbook&lt;/code&gt;</source>
          <target state="translated">默认值为 &lt;code&gt;ansible-playbook&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d1dcc6b3a394539acf783a764b41f856bcb2ec9" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af976fa886c4f7b664fc57e291778fd6b49e246c" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb0276c5182582138e187a187122154df4246bc2" translate="yes" xml:space="preserve">
          <source>The default value is set to the machine name (taken from &lt;code&gt;Vagrantfile&lt;/code&gt;) to ensure that &lt;code&gt;vagrant provision&lt;/code&gt; command only affect the expected machine.</source>
          <target state="translated">默认值设置为计算机名称（取自 &lt;code&gt;Vagrantfile&lt;/code&gt; ），以确保 &lt;code&gt;vagrant provision&lt;/code&gt; 命令仅影响预期的计算机。</target>
        </trans-unit>
        <trans-unit id="1cf908871bebc8b9e427708c39520669a9f82295" translate="yes" xml:space="preserve">
          <source>The default value of &lt;code&gt;install_mode&lt;/code&gt; is &lt;code&gt;:default&lt;/code&gt;, and any invalid value for this option will silently fall back to the default value.</source>
          <target state="translated">默认值为 &lt;code&gt;install_mode&lt;/code&gt; 是 &lt;code&gt;:default&lt;/code&gt; ，对于该选项的任何无效的值会悄悄地回落到默认值。</target>
        </trans-unit>
        <trans-unit id="ede72661f40bb0264715a640ae567b57ce4db328" translate="yes" xml:space="preserve">
          <source>The definition and implementation of host capabilities is identical to &lt;a href=&quot;guest-capabilities&quot;&gt;guest capabilities&lt;/a&gt;.</source>
          <target state="translated">主机功能的定义和实现与&lt;a href=&quot;guest-capabilities&quot;&gt;来宾功能&lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="3179088ad1452eae162880e56b15b6232c8f82e9" translate="yes" xml:space="preserve">
          <source>The destination folder will be created as the user initiating the connection, this is &lt;code&gt;vagrant&lt;/code&gt; by default. This user requires the appropriate permissions on the destination folder.</source>
          <target state="translated">将在用户启动连接时创建目标文件夹，默认情况下，该文件夹是 &lt;code&gt;vagrant&lt;/code&gt; 的。该用户需要对目标文件夹具有适当的权限。</target>
        </trans-unit>
        <trans-unit id="194c3bc39ba4532d690555f7bdd868ea6128507b" translate="yes" xml:space="preserve">
          <source>The destination machine must also have rsync installed, but Vagrant can automatically install rsync into many operating systems. If Vagrant is unable to automatically install rsync for your operating system, it will tell you.</source>
          <target state="translated">目标机器也必须安装rsync,但Vagrant可以自动安装rsync到许多操作系统中。如果Vagrant无法为您的操作系统自动安装rsync,它会告诉您。</target>
        </trans-unit>
        <trans-unit id="a504e790382fd222dd5bcc9b5aa617fab221f987" translate="yes" xml:space="preserve">
          <source>The destination machine must be able to mount SMB filesystems. On Linux the package to do this is usually called &lt;code&gt;smbfs&lt;/code&gt; or &lt;code&gt;cifs&lt;/code&gt;. Vagrant knows how to automatically install this for some operating systems.</source>
          <target state="translated">目标计算机必须能够挂载SMB文件系统。在Linux上，执行此操作的软件包通常称为 &lt;code&gt;smbfs&lt;/code&gt; 或 &lt;code&gt;cifs&lt;/code&gt; 。Vagrant知道如何为某些操作系统自动安装它。</target>
        </trans-unit>
        <trans-unit id="3eb410ff21c59384a6290f02f5dd941445ee11bf" translate="yes" xml:space="preserve">
          <source>The details of each are covered in their specific section in the sidebar to the left. We also have a section where we go into detail about the security implications of this feature.</source>
          <target state="translated">每种功能的细节都在左侧侧栏的具体章节中介绍。我们也有一个部分详细介绍了这个功能的安全影响。</target>
        </trans-unit>
        <trans-unit id="f2fad6a534752e2934475cc919feae5868cd68bc" translate="yes" xml:space="preserve">
          <source>The directory is available from the &lt;code&gt;data_dir&lt;/code&gt; attribute of the &lt;code&gt;Machine&lt;/code&gt; instance given to initialize your provider. Within middleware actions, the machine is always available via the &lt;code&gt;:machine&lt;/code&gt; key on the environment. The &lt;code&gt;data_dir&lt;/code&gt; attribute is a Ruby &lt;a href=&quot;http://www.ruby-doc.org/stdlib-1.9.3/libdoc/pathname/rdoc/Pathname.html&quot;&gt;Pathname&lt;/a&gt; object.</source>
          <target state="translated">该目录可从用来初始化提供程序的 &lt;code&gt;Machine&lt;/code&gt; 实例的 &lt;code&gt;data_dir&lt;/code&gt; 属性中获得。在中间件操作中，始终可以通过环境上的 &lt;code&gt;:machine&lt;/code&gt; 键使用该机器。所述 &lt;code&gt;data_dir&lt;/code&gt; 属性是一个Ruby &lt;a href=&quot;http://www.ruby-doc.org/stdlib-1.9.3/libdoc/pathname/rdoc/Pathname.html&quot;&gt;路径名&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="3965f1fb949f4c90a7730ecac5525cac78fac42a" translate="yes" xml:space="preserve">
          <source>The directory where the provider clones the virtual machine can be customized by setting the &lt;code&gt;VAGRANT_VMWARE_CLONE_DIRECTORY&lt;/code&gt; environmental variable. This does not need to be unique per project. Each project will get a different sub-directory within this folder. Therefore, it is safe to set this systemwide.</source>
          <target state="translated">可以通过设置 &lt;code&gt;VAGRANT_VMWARE_CLONE_DIRECTORY&lt;/code&gt; 环境变量来定制提供程序克隆虚拟机的目录。每个项目不需要唯一。每个项目将在此文件夹中获得一个不同的子目录。因此，在系统范围内进行设置是安全的。</target>
        </trans-unit>
        <trans-unit id="c92160aeef7626d9961dffff6421d5e7942d5f4d" translate="yes" xml:space="preserve">
          <source>The docker daemon cannot be run inside the Windows Subsystem for Linux. However, the daemon &lt;em&gt;can&lt;/em&gt; be run on Windows and accessed by Vagrant while running in the WSL. Once docker is installed and running on Windows, export the following environment variable to give Vagrant access:</source>
          <target state="translated">泊坞窗守护程序无法在Linux的Windows子系统内运行。但是，该守护程序&lt;em&gt;可以&lt;/em&gt;在Windows上运行，并且可以在WSL中运行时由Vagrant访问。在Windows上安装并运行docker之后，导出以下环境变量以授予Vagrant访问权限：</target>
        </trans-unit>
        <trans-unit id="6d8b85d33fb78f0c7af34dd108b5649eb2f8ebbb" translate="yes" xml:space="preserve">
          <source>The docker provisioner can automatically pull images from the Docker registry for you. There are two ways to specify images to pull. The first is as an array using &lt;code&gt;images&lt;/code&gt;:</source>
          <target state="translated">泊坞窗预配器可以自动为您从Docker注册表中提取映像。有两种指定要拉取图像的方法。第一个是使用 &lt;code&gt;images&lt;/code&gt; 的数组：</target>
        </trans-unit>
        <trans-unit id="65827f06ec292e2e9423bcc0a3f29114e979f74d" translate="yes" xml:space="preserve">
          <source>The docker provisioner is ideal for organizations that are using Docker as a means to distribute things like their application or services. Or, if you are just getting started with Docker, the Docker provisioner provides the easiest possible way to begin using Docker since the provisioner automates installing Docker for you.</source>
          <target state="translated">docker provisioner是使用Docker作为一种手段来发布应用程序或服务等的组织的理想选择。或者,如果你刚刚开始使用Docker,Docker供应器提供了最简单的方式来开始使用Docker,因为供应器为你自动安装Docker。</target>
        </trans-unit>
        <trans-unit id="1ecbd2d2f7823d9825df69d70ed5155ef50cabda" translate="yes" xml:space="preserve">
          <source>The docker provisioner takes various options. None are required. If no options are required, the Docker provisioner will only install Docker for you (if it is not already installed).</source>
          <target state="translated">docker provisioner采取多种选项。没有任何选项是必需的。如果不需要任何选项,Docker provisioner只会为你安装Docker(如果还没有安装)。</target>
        </trans-unit>
        <trans-unit id="e8bca97d10c8017949198df0184c592fe9032538" translate="yes" xml:space="preserve">
          <source>The easiest way to find boxes is to look on the &lt;a href=&quot;https://vagrantcloud.com/boxes/search&quot;&gt;public Vagrant box catalog&lt;/a&gt; for a box matching your use case. The catalog contains most major operating systems as bases, as well as specialized boxes to get you up and running quickly with LAMP stacks, Ruby, Python, etc.</source>
          <target state="translated">查找盒子的最简单方法是在&lt;a href=&quot;https://vagrantcloud.com/boxes/search&quot;&gt;公共Vagrant盒子目录中&lt;/a&gt;查找与您的用例匹配的盒子。该目录包含最主要的操作系统作为基础，以及专门的工具箱，可帮助您使用LAMP堆栈，Ruby，Python等快速启动并运行。</target>
        </trans-unit>
        <trans-unit id="d2ec0008856c5ec61cf8082347477d429d3ed0c3" translate="yes" xml:space="preserve">
          <source>The easiest way to get started with the Chef Apply provisioner is to just specify an inline &lt;a href=&quot;https://docs.chef.io/recipes.html&quot;&gt;Chef recipe&lt;/a&gt;. For example:</source>
          <target state="translated">开始使用Chef Apply供应器的最简单方法是仅指定嵌入式&lt;a href=&quot;https://docs.chef.io/recipes.html&quot;&gt;厨师食谱&lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="264f292e511a7b85ec9460d6079b100ec3e295c4" translate="yes" xml:space="preserve">
          <source>The easiest way to get started with the Chef Solo provisioner is to just specify a &lt;a href=&quot;https://docs.chef.io/nodes.html#about-run-lists&quot;&gt;run list&lt;/a&gt;. This looks like:</source>
          <target state="translated">开始使用Chef Solo供应商的最简单方法是仅指定&lt;a href=&quot;https://docs.chef.io/nodes.html#about-run-lists&quot;&gt;运行列表&lt;/a&gt;。看起来像：</target>
        </trans-unit>
        <trans-unit id="4740866a96c05b08c21ae07ffbfbc5c46c615edb" translate="yes" xml:space="preserve">
          <source>The easiest way to use a box is to add a box from the &lt;a href=&quot;https://vagrantcloud.com/boxes/search&quot;&gt;publicly available catalog of Vagrant boxes&lt;/a&gt;. You can also add and share your own customized boxes on this website.</source>
          <target state="translated">使用盒子的最简单方法是从&lt;a href=&quot;https://vagrantcloud.com/boxes/search&quot;&gt;公开的Vagrant盒子目录中&lt;/a&gt;添加一个盒子。您也可以在此网站上添加和共享自己的自定义框。</target>
        </trans-unit>
        <trans-unit id="651f01b38ad95826a783ca248e3aec099dc6d790" translate="yes" xml:space="preserve">
          <source>The easiest way to use a private network is to allow the IP to be assigned via DHCP.</source>
          <target state="translated">使用专用网络最简单的方法是允许通过DHCP分配IP。</target>
        </trans-unit>
        <trans-unit id="44c015bfabfd408c4344374d84243ffedfff01ba" translate="yes" xml:space="preserve">
          <source>The easiest way to use a public network is to allow the IP to be assigned via DHCP. In this case, defining a public network is trivially easy:</source>
          <target state="translated">使用公共网络最简单的方法是允许通过DHCP分配IP。在这种情况下,定义一个公共网络是非常简单的。</target>
        </trans-unit>
        <trans-unit id="cbc607fe0435e7d6a7e629b47c70851af148777a" translate="yes" xml:space="preserve">
          <source>The equivalent behavior can be achieved by using the &lt;code&gt;--color&lt;/code&gt; flag on a command-by-command basis. This environmental variable is useful for setting this flag globally.</source>
          <target state="translated">可以通过在每个命令的基础上使用 &lt;code&gt;--color&lt;/code&gt; 标志来实现等效的行为。此环境变量对于全局设置此标志很有用。</target>
        </trans-unit>
        <trans-unit id="fc91c9223c074a29c49353173f232b2ecb8be6bc" translate="yes" xml:space="preserve">
          <source>The equivalent behavior can be achieved by using the &lt;code&gt;--no-color&lt;/code&gt; flag on a command-by-command basis. This environmental variable is useful for setting this flag globally.</source>
          <target state="translated">可以通过在每个命令的基础上使用 &lt;code&gt;--no-color&lt;/code&gt; 标志来实现等效的行为。此环境变量对于全局设置此标志很有用。</target>
        </trans-unit>
        <trans-unit id="b0da92688fe83ba9991be63d6a6743d3c5c75158" translate="yes" xml:space="preserve">
          <source>The equivalent of running a &lt;a href=&quot;halt&quot;&gt;halt&lt;/a&gt; followed by an &lt;a href=&quot;up&quot;&gt;up&lt;/a&gt;.</source>
          <target state="translated">相当于&lt;a href=&quot;halt&quot;&gt;停顿，&lt;/a&gt;然后&lt;a href=&quot;up&quot;&gt;上升&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e1e6bcbe5712d4a4a629ac62e8933189b3ebd51d" translate="yes" xml:space="preserve">
          <source>The file provisioner is defined to include all files under &lt;code&gt;~/otherfolder&lt;/code&gt; to the new location &lt;code&gt;/remote/otherlocation&lt;/code&gt;. This idea can be achieved by simply having your destination folder differ from the source folder:</source>
          <target state="translated">文件供应器定义为将 &lt;code&gt;~/otherfolder&lt;/code&gt; 下的所有文件包括到新位置 &lt;code&gt;/remote/otherlocation&lt;/code&gt; 。只需使目标文件夹与源文件夹不同即可实现此想法：</target>
        </trans-unit>
        <trans-unit id="5c558df79c91f421f1143b12778258defc598e34" translate="yes" xml:space="preserve">
          <source>The file provisioner takes only two options, both of which are required:</source>
          <target state="translated">文件供应器只需要两个选项,这两个选项都是必须的。</target>
        </trans-unit>
        <trans-unit id="847823f7250ec47920477c806897e2ea79a6b916" translate="yes" xml:space="preserve">
          <source>The file uploads by the file provisioner are done as the &lt;em&gt;SSH or PowerShell user&lt;/em&gt;. This is important since these users generally do not have elevated privileges on their own. If you want to upload files to locations that require elevated privileges, we recommend uploading them to temporary locations and then using the &lt;a href=&quot;shell&quot;&gt;shell provisioner&lt;/a&gt; to move them into place.</source>
          <target state="translated">文件提供者上载的文件以&lt;em&gt;SSH或PowerShell用户&lt;/em&gt;身份完成。这很重要，因为这些用户通常没有自己的提升特权。如果要将文件上传到需要提升特权的位置，我们建议将文件上传到临时位置，然后使用&lt;a href=&quot;shell&quot;&gt;外壳配置&lt;/a&gt;程序将它们移动到位。</target>
        </trans-unit>
        <trans-unit id="d2e80c986911e8f98fa9220015e3c1967460c160" translate="yes" xml:space="preserve">
          <source>The files created by Vagrant depend on the OS. For example, for many Linux distros, this is &lt;code&gt;/etc/network/interfaces&lt;/code&gt;. In general you should look in the normal location that network interfaces are configured for your distro.</source>
          <target state="translated">Vagrant创建的文件取决于操作系统。例如，对于许多Linux发行版，这是 &lt;code&gt;/etc/network/interfaces&lt;/code&gt; 。通常，您应该查看为发行版配置网络接口的正常位置。</target>
        </trans-unit>
        <trans-unit id="777edef029174b37d6034db346f6b4463b640098" translate="yes" xml:space="preserve">
          <source>The files that are strictly required for a VMware machine to function are: nvram, vmsd, vmx, vmxf, and vmdk files.</source>
          <target state="translated">严格意义上的VMware机器运行所需的文件有:nvram、vmsd、vmx、vmxf和vmdk文件。</target>
        </trans-unit>
        <trans-unit id="da031644e4cdb06b805c6e5cc5a77a49d6f1d311" translate="yes" xml:space="preserve">
          <source>The final &lt;code&gt;:auto_correct&lt;/code&gt; parameter set to true tells Vagrant to auto correct any collisions. During a &lt;code&gt;vagrant up&lt;/code&gt; or &lt;code&gt;vagrant reload&lt;/code&gt;, Vagrant will output information about any collisions detections and auto corrections made, so you can take notice and act accordingly.</source>
          <target state="translated">最后的 &lt;code&gt;:auto_correct&lt;/code&gt; 参数设置为true，指示 Vagrant自动更正任何冲突。在 &lt;code&gt;vagrant up&lt;/code&gt; 或 &lt;code&gt;vagrant reload&lt;/code&gt; ，Vagrant将输出有关任何碰撞检测和自动更正的信息，因此您可以注意并采取相应措施。</target>
        </trans-unit>
        <trans-unit id="748f7d937800bf78a406d843212c2613caf3e4e7" translate="yes" xml:space="preserve">
          <source>The first and simplest option is to not provide one to Vagrant at all. Vagrant will generate an inventory file encompassing all of the virtual machines it manages, and use it for provisioning machines.</source>
          <target state="translated">第一个也是最简单的选择是完全不提供给Vagrant。Vagrant将生成一个包含其管理的所有虚拟机的清单文件,并将其用于配置机器。</target>
        </trans-unit>
        <trans-unit id="34bdf2de403f2d33d9c73d5021ca2f883bc38e33" translate="yes" xml:space="preserve">
          <source>The first component of a successful Ansible provisioner setup is the Ansible playbook which contains the steps that should be run on the guest. Ansible's &lt;a href=&quot;https://docs.ansible.com/playbooks.html&quot;&gt;playbook documentation&lt;/a&gt; goes into great detail on how to author playbooks, and there are a number of &lt;a href=&quot;https://docs.ansible.com/playbooks_best_practices.html&quot;&gt;best practices&lt;/a&gt; that can be applied to use Ansible's powerful features effectively.</source>
          <target state="translated">成功的Ansible设置程序设置的第一部分是Ansible手册，其中包含应在客户机上运行的步骤。Ansible的&lt;a href=&quot;https://docs.ansible.com/playbooks.html&quot;&gt;剧本文档&lt;/a&gt;详细介绍了如何编写剧本，并且有许多&lt;a href=&quot;https://docs.ansible.com/playbooks_best_practices.html&quot;&gt;最佳实践&lt;/a&gt;可用于有效使用Ansible的强大功能。</target>
        </trans-unit>
        <trans-unit id="8c94693f4060365054677423411c66d764051f51" translate="yes" xml:space="preserve">
          <source>The first method that Vagrant can use to source a Docker container is via an image. This image can be from any Docker registry. An example is shown below:</source>
          <target state="translated">Vagrant可以使用的第一种方法是通过镜像来获取Docker容器。这个镜像可以来自任何Docker注册表。下面是一个例子。</target>
        </trans-unit>
        <trans-unit id="8238e5d50766917522ac84e1075a0c4fbdb38172" translate="yes" xml:space="preserve">
          <source>The first network interface (adapter 1) &lt;em&gt;must&lt;/em&gt; be a NAT adapter. Vagrant uses this to connect the first time.</source>
          <target state="translated">第一个网络接口（适配器1）&lt;em&gt;必须&lt;/em&gt;是NAT适配器。Vagrant第一次使用它进行连接。</target>
        </trans-unit>
        <trans-unit id="8bb1b60c45b914a4e214af7631b48804bd147e6d" translate="yes" xml:space="preserve">
          <source>The first parameter is a path to a directory on the host machine. If the path is relative, it is relative to the project root. The second parameter must be an absolute path of where to share the folder within the guest machine. This folder will be created (recursively, if it must) if it does not exist. By default, Vagrant mounts the synced folders with the owner/group set to the SSH user and any parent folders set to root.</source>
          <target state="translated">第一个参数是主机上一个目录的路径。如果路径是相对的,则是相对于项目根目录的。第二个参数必须是绝对路径,即在客人机中共享文件夹的位置。如果这个文件夹不存在,那么它将被创建(递归地,如果它必须)。默认情况下,Vagrant会将同步文件夹的所有者/组设置为SSH用户,任何父文件夹设置为root。</target>
        </trans-unit>
        <trans-unit id="0f2d20d98130731896bc0ae1140376aa036683b4" translate="yes" xml:space="preserve">
          <source>The first parameter is the name of the plugin, and the second parameter is the path to the license file on disk. Please be sure to replace &lt;code&gt;~/license.lic&lt;/code&gt; with the path where you temporarily saved the downloaded license file to disk. After you have installed the plugin license, you may remove the temporary file.</source>
          <target state="translated">第一个参数是插件的名称，第二个参数是磁盘上许可证文件的路径。请确保将 &lt;code&gt;~/license.lic&lt;/code&gt; 替换为将下载的许可证文件临时保存到磁盘的路径。安装插件许可证后，可以删除临时文件。</target>
        </trans-unit>
        <trans-unit id="50da6361e3d6ac710e773c29dd24d4922bd5b763" translate="yes" xml:space="preserve">
          <source>The first thing to note is that individual components are defined by making a method call with the component name, such as &lt;code&gt;command&lt;/code&gt; or &lt;code&gt;provisioner&lt;/code&gt;. These in turn take some parameters. In the case of our example it is just the name of the command and the name of the provisioner. All component definitions then take a block argument (a callback) that must return the actual component implementation class.</source>
          <target state="translated">首先要注意的是，各个组件是通过使用组件名称（例如 &lt;code&gt;command&lt;/code&gt; 或 &lt;code&gt;provisioner&lt;/code&gt; 进行方法调用来定义的。这些依次带有一些参数。在我们的示例中，它只是命令的名称和供应者的名称。然后，所有组件定义都采用一个块参数（回调），该参数必须返回实际的组件实现类。</target>
        </trans-unit>
        <trans-unit id="3eb189ab8ebdb723cdc8e2ef309d507898137dba" translate="yes" xml:space="preserve">
          <source>The first two components are covered in more detail below.</source>
          <target state="translated">下面将详细介绍前两个部分。</target>
        </trans-unit>
        <trans-unit id="bd6ac9d61f22f7b1c3130f3652a258333deccd6c" translate="yes" xml:space="preserve">
          <source>The following (optional) placeholders can be used in this command pattern:</source>
          <target state="translated">以下(可选)占位符可用于此命令模式。</target>
        </trans-unit>
        <trans-unit id="e42b8508e693ff69149c5c15c4af3ca7be943574" translate="yes" xml:space="preserve">
          <source>The following action hooks are available in the core of Vagrant. Please note that this list is not exhaustive and additional hooks can be added via plugins.</source>
          <target state="translated">以下是Vagrant核心中可用的动作钩子。请注意,这个列表并不详尽,可以通过插件添加额外的钩子。</target>
        </trans-unit>
        <trans-unit id="d129e342f32c2516f74407ad65ad364585ef7493" translate="yes" xml:space="preserve">
          <source>The following command is invalid:</source>
          <target state="translated">以下命令无效。</target>
        </trans-unit>
        <trans-unit id="5cadb2ca6d9407e3d9a3ff16925d33437432f52c" translate="yes" xml:space="preserve">
          <source>The following commands will change the WinRM 1.1 port to what's expected by Vagrant:</source>
          <target state="translated">以下命令将把WinRM 1.1端口改为Vagrant所期望的端口。</target>
        </trans-unit>
        <trans-unit id="f9edb8bd18990b21d0326da22d10e62fee12c860" translate="yes" xml:space="preserve">
          <source>The following is a basic example of two global triggers. One that runs &lt;em&gt;before&lt;/em&gt; the &lt;code&gt;:up&lt;/code&gt; command and one that runs &lt;em&gt;after&lt;/em&gt; the &lt;code&gt;:up&lt;/code&gt; command:</source>
          <target state="translated">以下是两个全局触发器的基本示例。一种在 &lt;code&gt;:up&lt;/code&gt; 命令&lt;em&gt;之前&lt;/em&gt;运行，另一种在 &lt;code&gt;:up&lt;/code&gt; 命令&lt;em&gt;之后&lt;/em&gt;运行：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ac87f5542fd73725f120cbf23661c434e7562ed2" translate="yes" xml:space="preserve">
          <source>The following is an example of using RSync to sync a folder:</source>
          <target state="translated">下面是一个使用RSync同步文件夹的例子。</target>
        </trans-unit>
        <trans-unit id="f93cf301537bf229555e5dfd08527fa004c49129" translate="yes" xml:space="preserve">
          <source>The following is an example of using SMB to sync a folder:</source>
          <target state="translated">下面是一个使用SMB同步文件夹的例子。</target>
        </trans-unit>
        <trans-unit id="46ae98d249771f2c38884f47e2e20019bb27b0de" translate="yes" xml:space="preserve">
          <source>The following options are available to all Vagrant Chef provisioners. Many of these options are for advanced users only and should not be used unless you understand their purpose.</source>
          <target state="translated">以下选项适用于所有Vagrant Chef供应者。其中许多选项仅适用于高级用户,除非您了解其目的,否则不应使用。</target>
        </trans-unit>
        <trans-unit id="2494af946e03843658f2ebc3b096d1820b3c3d1f" translate="yes" xml:space="preserve">
          <source>The following options are available to any of the Chef &quot;runner&quot; provisioners which include &lt;a href=&quot;chef_solo&quot;&gt;Chef Solo&lt;/a&gt;, &lt;a href=&quot;chef_zero&quot;&gt;Chef Zero&lt;/a&gt;, and &lt;a href=&quot;chef_client&quot;&gt;Chef Client&lt;/a&gt;.</source>
          <target state="translated">以下选项可用于任何&amp;ldquo;厨师&amp;rdquo;供应商，包括&lt;a href=&quot;chef_solo&quot;&gt;Chef Solo&lt;/a&gt;，&lt;a href=&quot;chef_zero&quot;&gt;Chef Zero&lt;/a&gt;和&lt;a href=&quot;chef_client&quot;&gt;Chef Client&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4849aa53548088deb21baf1c8f1998f5310a7331" translate="yes" xml:space="preserve">
          <source>The following options are available to both Vagrant Ansible provisioners:</source>
          <target state="translated">以下选项对Vagrant Ansible供应者都是可用的。</target>
        </trans-unit>
        <trans-unit id="4a91025674068746c104cf678dff09a87e09a62d" translate="yes" xml:space="preserve">
          <source>The format is:</source>
          <target state="translated">其格式为:</target>
        </trans-unit>
        <trans-unit id="1a4aa7fd9653223ead9e01b2a0bbd1cde3f72cbb" translate="yes" xml:space="preserve">
          <source>The forwarded port configuration expects two parameters, the port on the guest and the port on the host. Example:</source>
          <target state="translated">转发端口配置需要两个参数,即客人的端口和主机的端口。例子:</target>
        </trans-unit>
        <trans-unit id="98159261861cc41adbd18435599a90c3f00e97f8" translate="yes" xml:space="preserve">
          <source>The generation of group variables blocks (e.g. &lt;code&gt;[group1:vars]&lt;/code&gt;) is only possible since Vagrant 1.8.0. Note however that setting variables directly in the inventory is not the &lt;a href=&quot;https://docs.ansible.com/intro_inventory.html#splitting-out-host-and-group-specific-data&quot;&gt;preferred practice in Ansible&lt;/a&gt;. If possible, group (or host) variables should be set in &lt;code&gt;YAML&lt;/code&gt; files stored in the &lt;code&gt;group_vars/&lt;/code&gt; or &lt;code&gt;host_vars/&lt;/code&gt; directories in the playbook (or inventory) directory instead.</source>
          <target state="translated">自Vagrant 1.8.0起，才可能生成组变量块（例如 &lt;code&gt;[group1:vars]&lt;/code&gt; ）。但是请注意，直接在清单中设置变量不是&lt;a href=&quot;https://docs.ansible.com/intro_inventory.html#splitting-out-host-and-group-specific-data&quot;&gt;Ansible中&lt;/a&gt;的首选做法。如果可能，应在存储在剧本（或清单）目录的 &lt;code&gt;group_vars/&lt;/code&gt; 或 &lt;code&gt;host_vars/&lt;/code&gt; 目录中的 &lt;code&gt;YAML&lt;/code&gt; 文件中设置组（或主机）变量。</target>
        </trans-unit>
        <trans-unit id="83d9dedaff322b492f91ef493478126b16b1a78d" translate="yes" xml:space="preserve">
          <source>The high-level networking options are meant to define an abstraction that works across multiple &lt;a href=&quot;../providers/index&quot;&gt;providers&lt;/a&gt;. This means that you can take your Vagrantfile you used to spin up a VirtualBox machine and you can reasonably expect that Vagrantfile to behave the same with something like VMware.</source>
          <target state="translated">高级联网选项旨在定义可在多个&lt;a href=&quot;../providers/index&quot;&gt;提供商&lt;/a&gt;之间使用的抽象。这意味着您可以使用用来启动VirtualBox计算机的Vagrantfile，并且可以合理地期望Vagrantfile在类似VMware的情况下表现相同。</target>
        </trans-unit>
        <trans-unit id="a4edd384fba1ffbb8cfe3385f5bf6e2548b0c111" translate="yes" xml:space="preserve">
          <source>The host VM will be spun up at the first &lt;code&gt;vagrant up&lt;/code&gt; where the provider is Docker. To control this host VM, use the &lt;a href=&quot;../cli/global-status&quot;&gt;global-status command&lt;/a&gt; along with global control.</source>
          <target state="translated">主机VM将在第一个 &lt;code&gt;vagrant up&lt;/code&gt; 的供应商为Docker的情况下启动。要控制此主机VM，请使用&lt;a href=&quot;../cli/global-status&quot;&gt;global-status命令&lt;/a&gt;以及全局控制。</target>
        </trans-unit>
        <trans-unit id="264d95bef96de6ea0fb2e17650086d35580f3d04" translate="yes" xml:space="preserve">
          <source>The host will automatically be &lt;a href=&quot;https://cfengine.com/docs/3.5/manuals-architecture-networking.html#bootstrapping&quot;&gt;bootstrapped&lt;/a&gt; to itself to become a policy server.</source>
          <target state="translated">主机将自动&lt;a href=&quot;https://cfengine.com/docs/3.5/manuals-architecture-networking.html#bootstrapping&quot;&gt;引导&lt;/a&gt;到自身，成为策略服务器。</target>
        </trans-unit>
        <trans-unit id="6270e1a5fd1415251621315a0a2369c7efc69174" translate="yes" xml:space="preserve">
          <source>The important thing to understand as a general user of Vagrant is that &lt;em&gt;within a single configuration section&lt;/em&gt;, only a single version can be used. You cannot use the new &lt;code&gt;config.vm.provider&lt;/code&gt; configurations in a version 1 configuration section. Likewise, &lt;code&gt;config.vm.forward_port&lt;/code&gt; will not work in a version 2 configuration section (it was renamed).</source>
          <target state="translated">作为Vagrant的一般用户要了解的重要一点是，&lt;em&gt;在单个配置部分中&lt;/em&gt;，只能使用单个版本。您不能在版本1配置部分中使用新的 &lt;code&gt;config.vm.provider&lt;/code&gt; 配置。同样， &lt;code&gt;config.vm.forward_port&lt;/code&gt; 在版本2配置部分（已重命名）中将不起作用。</target>
        </trans-unit>
        <trans-unit id="f646819715c591f9c26e7c701f6ec9f508a7605d" translate="yes" xml:space="preserve">
          <source>The information below is applicable to both Vagrant Ansible provisioners:</source>
          <target state="translated">以下信息适用于Vagrant Ansible两个供应器。</target>
        </trans-unit>
        <trans-unit id="fa508531a87d7254791464076cf7f84ec513e71f" translate="yes" xml:space="preserve">
          <source>The installer will automatically add &lt;code&gt;vagrant&lt;/code&gt; to your system path so that it is available in terminals. If it is not found, please try logging out and logging back in to your system (this is particularly necessary sometimes for Windows).</source>
          <target state="translated">安装程序将自动将 &lt;code&gt;vagrant&lt;/code&gt; 添加到您的系统路径中，以便在终端中可用。如果找不到，请尝试注销并重新登录到系统（对于Windows，有时尤其需要这样做）。</target>
        </trans-unit>
        <trans-unit id="1bcead24504c7865c33b8c0faa96c4efa7ba4ed6" translate="yes" xml:space="preserve">
          <source>The installers will properly overwrite and remove old files. It is recommended that no other Vagrant processes are running during the upgrade process.</source>
          <target state="translated">安装程序将正确覆盖并删除旧文件。建议在升级过程中不要运行其他Vagrant进程。</target>
        </trans-unit>
        <trans-unit id="af5693208da59b0a509a8fbcd2a248a9d3913511" translate="yes" xml:space="preserve">
          <source>The interface is available using the &lt;code&gt;vagrant&lt;/code&gt; command, and comes installed with Vagrant automatically. The &lt;code&gt;vagrant&lt;/code&gt; command in turn has many subcommands, such as &lt;code&gt;vagrant up&lt;/code&gt;, &lt;code&gt;vagrant destroy&lt;/code&gt;, etc.</source>
          <target state="translated">该界面可使用 &lt;code&gt;vagrant&lt;/code&gt; 命令使用，并随Vagrant自动安装。该 &lt;code&gt;vagrant&lt;/code&gt; 又命令有许多子命令，如 &lt;code&gt;vagrant up&lt;/code&gt; ， &lt;code&gt;vagrant destroy&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="79dc4a00c82078d6fa09606990009dcc4488ffa1" translate="yes" xml:space="preserve">
          <source>The list of common options for these two provisioners is documented in a &lt;a href=&quot;ansible_common&quot;&gt;separate documentation page&lt;/a&gt;.</source>
          <target state="translated">这两个配置程序的常用选项列表在&lt;a href=&quot;ansible_common&quot;&gt;单独的文档页面&lt;/a&gt;中进行了记录。</target>
        </trans-unit>
        <trans-unit id="e5c26ccb9567093201ba60c343d026f8c7c7ab5d" translate="yes" xml:space="preserve">
          <source>The list of non-primary commands is below. Click on any command to learn more about it.</source>
          <target state="translated">下面是非主要命令的列表。点击任何一个命令来了解更多信息。</target>
        </trans-unit>
        <trans-unit id="09bb09db968dcdde0378a1d5469e1eae43290b42" translate="yes" xml:space="preserve">
          <source>The login command is used to authenticate with &lt;a href=&quot;https://www.vagrantup.com/docs/vagrant-cloud&quot;&gt;HashiCorp's Vagrant Cloud&lt;/a&gt; server. Logging in is only necessary if you are accessing protected boxes.</source>
          <target state="translated">login命令用于对&lt;a href=&quot;https://www.vagrantup.com/docs/vagrant-cloud&quot;&gt;HashiCorp的Vagrant Cloud&lt;/a&gt;服务器进行身份验证。仅在访问受保护的框时才需要登录。</target>
        </trans-unit>
        <trans-unit id="9211b3483e7f0564dca294d46dfdf303578219ee" translate="yes" xml:space="preserve">
          <source>The login command is used to authenticate with the &lt;a href=&quot;https://www.vagrantup.com/docs/vagrant-cloud&quot;&gt;HashiCorp's Vagrant Cloud&lt;/a&gt; server. Logging in is only necessary if you are accessing protected boxes or using &lt;a href=&quot;../share/index&quot;&gt;Vagrant Share&lt;/a&gt;.</source>
          <target state="translated">login命令用于与&lt;a href=&quot;https://www.vagrantup.com/docs/vagrant-cloud&quot;&gt;HashiCorp的Vagrant Cloud&lt;/a&gt;服务器进行身份验证。仅在访问受保护的邮箱或使用&lt;a href=&quot;../share/index&quot;&gt;Vagrant Share&lt;/a&gt;时才需要登录。</target>
        </trans-unit>
        <trans-unit id="adff2fef5543cc18f4c5665ee9b4c55f1f6ab866" translate="yes" xml:space="preserve">
          <source>The machine names in &lt;code&gt;Vagrantfile&lt;/code&gt; and &lt;code&gt;ansible.inventory_path&lt;/code&gt; files should correspond, unless you use &lt;code&gt;ansible.limit&lt;/code&gt; option to reference the correct machines.</source>
          <target state="translated">除非您使用 &lt;code&gt;ansible.limit&lt;/code&gt; 选项引用正确的计算机，否则 &lt;code&gt;Vagrantfile&lt;/code&gt; 和 &lt;code&gt;ansible.inventory_path&lt;/code&gt; 文件中的计算机名称应对应。</target>
        </trans-unit>
        <trans-unit id="fa288ba63565014b90d08297a888deea2deab4c1" translate="yes" xml:space="preserve">
          <source>The machine readable format is a line-oriented, comma-delimited text format. This makes it extremely easy to parse using standard Unix tools such as awk or grep in addition to full programming languages like Ruby or Python.</source>
          <target state="translated">机器可读格式是一种面向行的、以逗号分隔的文本格式。这使得使用标准的Unix工具(如awk或grep)以及Ruby或Python等完整的编程语言进行解析非常容易。</target>
        </trans-unit>
        <trans-unit id="91b610d4ae1c301e1870febe404cc4d6f22ec6d0" translate="yes" xml:space="preserve">
          <source>The machine-readable output is very new (released as part of Vagrant 1.4). We're still gathering use cases for it and building up the output for each of the commands. It is likely that what you may want to achieve with the machine-readable output is not possible due to missing information.</source>
          <target state="translated">机器可读输出是非常新的(作为Vagrant 1.4的一部分发布)。我们仍在收集使用案例,并为每个命令建立输出。很可能由于信息缺失,您想通过机器可读输出实现的目标无法实现。</target>
        </trans-unit>
        <trans-unit id="add836f1ca0e4139c92193dca64a8861defb3077" translate="yes" xml:space="preserve">
          <source>The main advantage of the Ansible Local provisioner in comparison to the &lt;a href=&quot;ansible&quot;&gt;Ansible (remote) provisioner&lt;/a&gt; is that it does not require any additional software on your Vagrant host.</source>
          <target state="translated">与&lt;a href=&quot;ansible&quot;&gt;Ansible（远程）预配器&lt;/a&gt;相比，Ansible Local预配器的主要优势在于，它在Vagrant主机上不需要任何其他软件。</target>
        </trans-unit>
        <trans-unit id="c9ecebae11d8b2824d51041cc18e560e99d67c0b" translate="yes" xml:space="preserve">
          <source>The main difference from guest capabilities, however, is that instead of taking a machine as the first argument, all host capabilities take an instance of &lt;code&gt;Vagrant::Environment&lt;/code&gt; as their first argument.</source>
          <target state="translated">但是，与来宾功能的主要区别在于，所有主机功能都将 &lt;code&gt;Vagrant::Environment&lt;/code&gt; 实例作为其第一个参数，而不是将计算机作为第一个参数。</target>
        </trans-unit>
        <trans-unit id="e9c315c73b93b50bb5e932c4aafbe883c980f63e" translate="yes" xml:space="preserve">
          <source>The main functionality of this command is exposed via another level of subcommands:</source>
          <target state="translated">该命令的主要功能通过另一级子命令暴露出来。</target>
        </trans-unit>
        <trans-unit id="73ebdef54012596dfa5ff8edda5f69fa3678f944" translate="yes" xml:space="preserve">
          <source>The main functionality of this command is exposed via even more subcommands:</source>
          <target state="translated">该命令的主要功能通过更多的子命令暴露出来。</target>
        </trans-unit>
        <trans-unit id="47328eaaa39734c536c8988a58e0e128de4a0d24" translate="yes" xml:space="preserve">
          <source>The main functionality of this command is exposed via subcommands:</source>
          <target state="translated">该命令的主要功能通过子命令暴露出来。</target>
        </trans-unit>
        <trans-unit id="903871f2074e6c4ec0ff264a9cdc23ba7018b919" translate="yes" xml:space="preserve">
          <source>The metadata is an optional component for a box (but highly recommended) that enables &lt;a href=&quot;versioning&quot;&gt;versioning&lt;/a&gt;, updating, multiple providers from a single file, and more.</source>
          <target state="translated">元数据是包装盒的可选组件（但强烈建议使用），该组件支持&lt;a href=&quot;versioning&quot;&gt;版本控制&lt;/a&gt;，更新，单个文件中的多个提供程序等。</target>
        </trans-unit>
        <trans-unit id="7f4e166a08d2de2976e6f93022ba88caad657999" translate="yes" xml:space="preserve">
          <source>The minimum required to use provision using Chef Client is to provide a URL to the Chef Server as well as the path to the validation key so that the node can register with the Chef Server:</source>
          <target state="translated">使用Chef Client使用供应的最低要求是提供到Chef服务器的URL以及验证密钥的路径,以便节点可以在Chef服务器上注册。</target>
        </trans-unit>
        <trans-unit id="965b322144c1a61840a376e0927c3f0d81087d83" translate="yes" xml:space="preserve">
          <source>The moment more than one machine is defined within a Vagrantfile, the usage of the various &lt;code&gt;vagrant&lt;/code&gt; commands changes slightly. The change should be mostly intuitive.</source>
          <target state="translated">如果在Vagrant文​​件中定义了多台计算机，则各种 &lt;code&gt;vagrant&lt;/code&gt; 命令的用法会稍有变化。更改应该主要是直观的。</target>
        </trans-unit>
        <trans-unit id="0103d8091c6dc3bba5b9d3b88069b95c536687fd" translate="yes" xml:space="preserve">
          <source>The most common keys people look for are setting memory and CPUs. The example below sets both:</source>
          <target state="translated">大家最常找的键是设置内存和CPU。下面的例子就同时设置了这两个键。</target>
        </trans-unit>
        <trans-unit id="cf6b4dfe46e1b32f95c61afb630f063661034ee7" translate="yes" xml:space="preserve">
          <source>The navigation will take you through each component of Vagrant. Click on a navigation item to get started, or read more about &lt;a href=&quot;https://www.vagrantup.com/intro/index.html&quot;&gt;why developers, designers, and operators choose Vagrant&lt;/a&gt; for their needs.</source>
          <target state="translated">导航将带您浏览Vagrant的每个组件。单击导航项开始使用，或阅读有关&lt;a href=&quot;https://www.vagrantup.com/intro/index.html&quot;&gt;开发人员，设计师和操作员为何选择Vagrant&lt;/a&gt;以满足其需求的更多信息。</target>
        </trans-unit>
        <trans-unit id="37141618a94e25d359ed7ecbcf48d8d69c2af639" translate="yes" xml:space="preserve">
          <source>The node name defaults to the hostname of the guest machine, but can be customized using the Vagrantfile:</source>
          <target state="translated">节点名称默认为客户机的主机名,但可以使用Vagrantfile自定义。</target>
        </trans-unit>
        <trans-unit id="381b69f1df34d96e61b1b8233bdcc222d2b77006" translate="yes" xml:space="preserve">
          <source>The node name that the agent registers as can be customized. Remember this is important because Puppet uses the node name as part of the process to compile the catalog the node will run.</source>
          <target state="translated">代理注册为的节点名称可以自定义。请记住这一点很重要,因为 Puppet 使用节点名称作为编译节点将运行的目录的过程的一部分。</target>
        </trans-unit>
        <trans-unit id="00880cf80002ac62982997c1bfd19511508b664c" translate="yes" xml:space="preserve">
          <source>The node will register with the Chef Server specified, download the proper run list for that node, and provision.</source>
          <target state="translated">节点将在指定的Chef服务器上注册,为该节点下载适当的运行列表,并进行供应。</target>
        </trans-unit>
        <trans-unit id="59aa85ec6c27735010a065cced6933ecf7ecd30c" translate="yes" xml:space="preserve">
          <source>The one we're interested in is &lt;code&gt;kvm_intel&lt;/code&gt;. You might have another.</source>
          <target state="translated">我们感兴趣的是 &lt;code&gt;kvm_intel&lt;/code&gt; 。您可能还有另一个。</target>
        </trans-unit>
        <trans-unit id="a05b4300d12f9b475ab2c25bee472d579c41715e" translate="yes" xml:space="preserve">
          <source>The only requirement for your box format is that the &lt;code&gt;metadata.json&lt;/code&gt; file have a &lt;code&gt;provider&lt;/code&gt; key which matches the name of your provider you chose above.</source>
          <target state="translated">框格式的唯一要求是， &lt;code&gt;metadata.json&lt;/code&gt; 文件必须具有与上面选择的提供者名称匹配的 &lt;code&gt;provider&lt;/code&gt; 密钥。</target>
        </trans-unit>
        <trans-unit id="8a385b9fe94f6ac4aff502bb8619962659c1e778" translate="yes" xml:space="preserve">
          <source>The only thing about this Gemfile that may stand out as odd is the &quot;plugins&quot; group and putting your plugin in that group. Because &lt;code&gt;vagrant plugin&lt;/code&gt; commands do not work in development, this is how you &quot;install&quot; your plugin into Vagrant. Vagrant will automatically load any gems listed in the &quot;plugins&quot; group. Note that this also allows you to add multiple plugins to Vagrant for development, if your plugin works with another plugin.</source>
          <target state="translated">关于这个Gemfile的唯一奇怪的地方是&amp;ldquo; plugins&amp;rdquo;组，然后将您的插件放在该组中。由于 &lt;code&gt;vagrant plugin&lt;/code&gt; 命令在开发中不起作用，因此您可以通过这种方式将插件&amp;ldquo;安装&amp;rdquo;到Vagrant中。Vagrant将自动加载&amp;ldquo;插件&amp;rdquo;组中列出的所有gem。请注意，如果您的插件可以与另一个插件一起使用，这还允许您将多个插件添加到Vagrant进行开发。</target>
        </trans-unit>
        <trans-unit id="b33cb7f67f3fa98cf42c0e5b338b09df62d1ad45" translate="yes" xml:space="preserve">
          <source>The options below only apply if you are adding a box file directly (when you are not using a catalog).</source>
          <target state="translated">下面的选项只适用于直接添加方框文件的情况(不使用目录时)。</target>
        </trans-unit>
        <trans-unit id="c956ebc9d59c27e63eb0a608626f2d48dd9fc21b" translate="yes" xml:space="preserve">
          <source>The order of the calls to &lt;code&gt;add_recipe&lt;/code&gt; will specify the order of the run list. Earlier recipes added with &lt;code&gt;add_recipe&lt;/code&gt; are run before later recipes added.</source>
          <target state="translated">调用 &lt;code&gt;add_recipe&lt;/code&gt; 的顺序将指定运行列表的顺序。使用 &lt;code&gt;add_recipe&lt;/code&gt; 添加的早期配方在添加以后的配方之前运行。</target>
        </trans-unit>
        <trans-unit id="e449305a0a783f05602f3c91e30a5daa6161a420" translate="yes" xml:space="preserve">
          <source>The ordering of the provisioners will be to echo &quot;foo&quot;, &quot;baz&quot;, then &quot;bar&quot; (note the second one might not be what you expect!). Remember: ordering is &lt;em&gt;outside in&lt;/em&gt;.</source>
          <target state="translated">预配置程序的顺序将是先回显&amp;ldquo; foo&amp;rdquo;，&amp;ldquo; baz&amp;rdquo;然后是&amp;ldquo; bar&amp;rdquo;（请注意，第二个可能不是您所期望的！）。请记住：订购&lt;em&gt;不在中&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="179f9f0512842e005a61691f195bf5e68dfe56ee" translate="yes" xml:space="preserve">
          <source>The path &lt;code&gt;~/.vagrant.d/gems/*/vagrant-vmware-{fusion,workstation}&lt;/code&gt; should no longer exist. The gem &lt;code&gt;vagrant-vmware-desktop&lt;/code&gt; may exist since this is the name of the new plugin. If the old directories exist, remove them. An example for a Unix-like shell is shown below:</source>
          <target state="translated">路径 &lt;code&gt;~/.vagrant.d/gems/*/vagrant-vmware-{fusion,workstation}&lt;/code&gt; 应该不再存在。gem &lt;code&gt;vagrant-vmware-desktop&lt;/code&gt; 可能存在，因为这是新插件的名称。如果旧目录存在，请将其删除。类似于Unix的shell的示例如下所示：</target>
        </trans-unit>
        <trans-unit id="cb04b4bb015e7623eb1681694519d7894d483b0d" translate="yes" xml:space="preserve">
          <source>The path can be relative or absolute. If it is relative, it is relative to the project root.</source>
          <target state="translated">路径可以是相对或绝对的。如果是相对的,则是相对于项目根的。</target>
        </trans-unit>
        <trans-unit id="a3b195d91d849e07625e5d46e723ad55748e6d26" translate="yes" xml:space="preserve">
          <source>The path provided from this command can be used to set the &lt;a href=&quot;configuration#utility_certificate_path&quot;&gt;&lt;code&gt;utility_certificate_path&lt;/code&gt;&lt;/a&gt; in the Vagrantfile configuration if installing to a non-standard path.</source>
          <target state="translated">从这个命令中提供的路径可以被用来设置&lt;a href=&quot;configuration#utility_certificate_path&quot;&gt; &lt;code&gt;utility_certificate_path&lt;/code&gt; &lt;/a&gt;如果安装到非标准路径在Vagrantfile配置。</target>
        </trans-unit>
        <trans-unit id="11db215504222edc8e143172adbfd963a75b599b" translate="yes" xml:space="preserve">
          <source>The port command displays the full list of guest ports mapped to the host machine ports:</source>
          <target state="translated">port命令显示映射到主机端口的全部客人端口列表。</target>
        </trans-unit>
        <trans-unit id="85fd2988083f93da90ebadd1f9734c40551381fb" translate="yes" xml:space="preserve">
          <source>The power of capabilities is that plugins can add new capabilities to existing guest operating systems without modifying the core of Vagrant. In earlier versions of Vagrant, all the guest logic was contained in the core of Vagrant and was not easily augmented.</source>
          <target state="translated">功能的强大之处在于,插件可以在不修改Vagrant核心的情况下,为现有的客体操作系统增加新的功能。在Vagrant的早期版本中,所有的客体逻辑都包含在Vagrant的核心中,不容易被增强。</target>
        </trans-unit>
        <trans-unit id="32a1f761529638c300d6c81089c9f60161250880" translate="yes" xml:space="preserve">
          <source>The power of capabilities is that plugins can add new capabilities to existing host operating systems without modifying the core of Vagrant. In earlier versions of Vagrant, all the host logic was contained in the core of Vagrant and was not easily augmented.</source>
          <target state="translated">功能的强大之处在于,插件可以在不修改Vagrant核心的情况下,为现有的主机操作系统增加新的功能。在Vagrant的早期版本中,所有的主机逻辑都包含在Vagrant的核心中,不容易扩展。</target>
        </trans-unit>
        <trans-unit id="7a736b19cab92a48cd5dcd86bc320d79cb6fc569" translate="yes" xml:space="preserve">
          <source>The primary function of the Vagrantfile is to describe the type of machine required for a project, and how to configure and provision these machines. Vagrantfiles are called Vagrantfiles because the actual literal filename for the file is &lt;code&gt;Vagrantfile&lt;/code&gt; (casing does not matter unless your file system is running in a strict case sensitive mode).</source>
          <target state="translated">Vagrantfile的主要功能是描述项目所需的计算机类型，以及如何配置和配置这些计算机。Vagrantfiles之所以称为Vagrantfiles，是因为该文件的实际文字文件名是 &lt;code&gt;Vagrantfile&lt;/code&gt; （大小写无关紧要，除非您的文件系统在严格区分大小写的模式下运行）。</target>
        </trans-unit>
        <trans-unit id="0c48d9bf628e70cee193262b1d997d7ce84dde16" translate="yes" xml:space="preserve">
          <source>The primary security mechanism for Vagrant Share is security through obscurity along with an encryption key for SSH. Additionally, there are several configuration options made available to help control access and manage security:</source>
          <target state="translated">Vagrant Share的主要安全机制是通过隐蔽性和SSH加密密钥实现安全。此外,还有一些配置选项可以帮助控制访问和管理安全。</target>
        </trans-unit>
        <trans-unit id="fcb9c2c8daf90b975f811082edcdb71ac298134b" translate="yes" xml:space="preserve">
          <source>The provider class should subclass and implement &lt;code&gt;Vagrant.plugin(2, :provider)&lt;/code&gt; which is an upgrade-safe way to let Vagrant return the proper parent class.</source>
          <target state="translated">提供者类应子类化并实现 &lt;code&gt;Vagrant.plugin(2, :provider)&lt;/code&gt; ，这是一种升级安全的方法，可让Vagrant返回正确的父类。</target>
        </trans-unit>
        <trans-unit id="5000d6b3aeeeac01fed899cf4c46c33a25b8a048" translate="yes" xml:space="preserve">
          <source>The provider create command is used to create a new provider entry on Vagrant Cloud. The &lt;code&gt;url&lt;/code&gt; argument is expected to be a remote URL that Vagrant Cloud can use to download the provider. If no &lt;code&gt;url&lt;/code&gt; is specified, the provider entry can be updated later with a url or the &lt;a href=&quot;#cloud-provider-upload&quot;&gt;upload&lt;/a&gt; command can be used to upload a Vagrant &lt;a href=&quot;../boxes&quot;&gt;box file&lt;/a&gt;.</source>
          <target state="translated">provider create命令用于在Vagrant Cloud上创建新的提供程序条目。该 &lt;code&gt;url&lt;/code&gt; 参数预计将远程URL是流浪云可以用它来下载提供商。如果未指定 &lt;code&gt;url&lt;/code&gt; ，则可以在以后使用url更新提供者条目，或者可以使用&lt;a href=&quot;#cloud-provider-upload&quot;&gt;upload&lt;/a&gt;命令上传Vagrant &lt;a href=&quot;../boxes&quot;&gt;box文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="74148f759ac0c4a0f45f8b1fc1ab6180ea6250f2" translate="yes" xml:space="preserve">
          <source>The provider delete command is used to delete a provider entry on Vagrant Cloud. Before making the request, it will ask if you are sure you want to delete the provider.</source>
          <target state="translated">提供商删除命令用于删除Vagrant Cloud上的提供商条目。在提出请求之前,它会询问您是否确定要删除提供商。</target>
        </trans-unit>
        <trans-unit id="af481ecde5194ac3c3d17f58d05be38707f56534" translate="yes" xml:space="preserve">
          <source>The provider name of the target machine. targeted</source>
          <target state="translated">目标机器的提供者名称。</target>
        </trans-unit>
        <trans-unit id="ee7bd450703406ce1d451a59e927366f17ec8bf8" translate="yes" xml:space="preserve">
          <source>The provider update command will update an already created provider for a box on Vagrant Cloud with the given options.</source>
          <target state="translated">提供商更新命令将使用给定的选项为Vagrant Cloud上的一个盒子更新已经创建的提供商。</target>
        </trans-unit>
        <trans-unit id="b397eaa045d3e17bc7ab0b66e654c0ff7739faca" translate="yes" xml:space="preserve">
          <source>The provider upload command will upload a Vagrant &lt;a href=&quot;../boxes&quot;&gt;box file&lt;/a&gt; to Vagrant Cloud for the specified version and provider.</source>
          <target state="translated">提供者上传命令会将指定版本和提供者的Vagrant &lt;a href=&quot;../boxes&quot;&gt;框文件&lt;/a&gt;上传到Vagrant Cloud。</target>
        </trans-unit>
        <trans-unit id="351c9ef84cc7338927102f9bad46fcae4b739b8a" translate="yes" xml:space="preserve">
          <source>The provider-specific configuration is available on the machine object via the &lt;code&gt;provider_config&lt;/code&gt; attribute. So within actions or your provider class, you can access the config via &lt;code&gt;machine.provider_config&lt;/code&gt;.</source>
          <target state="translated">特定于提供程序的配置可通过 &lt;code&gt;provider_config&lt;/code&gt; 属性在计算机对象上使用。因此，在操作或提供程序类中，您可以通过 &lt;code&gt;machine.provider_config&lt;/code&gt; 访问配置。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
