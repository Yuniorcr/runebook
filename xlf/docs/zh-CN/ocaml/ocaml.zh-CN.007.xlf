<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="ocaml">
    <body>
      <group id="ocaml">
        <trans-unit id="503205cb449d7ac582fa3f782e715020be4981b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fold_left_map&lt;/code&gt; is a combination of &lt;code&gt;fold_left&lt;/code&gt; and &lt;code&gt;map&lt;/code&gt; that threads an accumulator through calls to &lt;code&gt;f&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fold_left_map&lt;/code&gt; 是 &lt;code&gt;fold_left&lt;/code&gt; 和 &lt;code&gt;map&lt;/code&gt; 的组合，通过调用 &lt;code&gt;f&lt;/code&gt; 来累加累加器</target>
        </trans-unit>
        <trans-unit id="492628e94e9460e4a1d25558f609f785fdac989f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fold_left_map&lt;/code&gt; is a combination of &lt;code&gt;fold_left&lt;/code&gt; and &lt;code&gt;map&lt;/code&gt; that threads an accumulator through calls to &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fold_left_map&lt;/code&gt; 是 &lt;code&gt;fold_left&lt;/code&gt; 和 &lt;code&gt;map&lt;/code&gt; 的组合，通过对 &lt;code&gt;f&lt;/code&gt; 的调用将累加器线程化。</target>
        </trans-unit>
        <trans-unit id="1c37383b44728bf9f7b9bf626f293a4e46e9037e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fold_right&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&amp;nbsp;init&lt;/code&gt; is &lt;code&gt;f&amp;nbsp;a1&amp;nbsp;(f&amp;nbsp;a2&amp;nbsp;(...&amp;nbsp;(f&amp;nbsp;an&amp;nbsp;init)&amp;nbsp;...))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fold_right&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&amp;nbsp;init&lt;/code&gt; 是 &lt;code&gt;f&amp;nbsp;a1&amp;nbsp;(f&amp;nbsp;a2&amp;nbsp;(...&amp;nbsp;(f&amp;nbsp;an&amp;nbsp;init)&amp;nbsp;...))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e6d5a45efa340ae1d409aad2f75f6431f08b782" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fold_right&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&amp;nbsp;init&lt;/code&gt; is &lt;code&gt;f&amp;nbsp;a1&amp;nbsp;(f&amp;nbsp;a2&amp;nbsp;(...&amp;nbsp;(f&amp;nbsp;an&amp;nbsp;init)&amp;nbsp;...))&lt;/code&gt;. Not tail-recursive.</source>
          <target state="translated">&lt;code&gt;fold_right&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&amp;nbsp;init&lt;/code&gt; 是 &lt;code&gt;f&amp;nbsp;a1&amp;nbsp;(f&amp;nbsp;a2&amp;nbsp;(...&amp;nbsp;(f&amp;nbsp;an&amp;nbsp;init)&amp;nbsp;...))&lt;/code&gt; 。不尾递归。</target>
        </trans-unit>
        <trans-unit id="a052d88020647cc212c5f10256f1926acbcd564e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fold_right&amp;nbsp;f&amp;nbsp;a&amp;nbsp;init&lt;/code&gt; computes &lt;code&gt;f&amp;nbsp;a.(0)&amp;nbsp;(f&amp;nbsp;a.(1)&amp;nbsp;(&amp;nbsp;...&amp;nbsp;(f&amp;nbsp;a.(n-1)&amp;nbsp;init)&amp;nbsp;...))&lt;/code&gt;, where &lt;code&gt;n&lt;/code&gt; is the length of the array &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fold_right&amp;nbsp;f&amp;nbsp;a&amp;nbsp;init&lt;/code&gt; 计算 &lt;code&gt;f&amp;nbsp;a.(0)&amp;nbsp;(f&amp;nbsp;a.(1)&amp;nbsp;(&amp;nbsp;...&amp;nbsp;(f&amp;nbsp;a.(n-1)&amp;nbsp;init)&amp;nbsp;...))&lt;/code&gt; ，其中 &lt;code&gt;n&lt;/code&gt; 是数组 &lt;code&gt;a&lt;/code&gt; 的长度。</target>
        </trans-unit>
        <trans-unit id="1741521b658a000f0ba785ac392caecb12c9f5ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fold_right&amp;nbsp;f&amp;nbsp;a&amp;nbsp;init&lt;/code&gt; computes &lt;code&gt;f&amp;nbsp;a.(0)&amp;nbsp;(f&amp;nbsp;a.(1)&amp;nbsp;(&amp;nbsp;...&amp;nbsp;(f&amp;nbsp;a.(n-1)&amp;nbsp;init)&amp;nbsp;...))&lt;/code&gt;, where &lt;code&gt;n&lt;/code&gt; is the length of the floatarray &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fold_right&amp;nbsp;f&amp;nbsp;a&amp;nbsp;init&lt;/code&gt; 计算 &lt;code&gt;f&amp;nbsp;a.(0)&amp;nbsp;(f&amp;nbsp;a.(1)&amp;nbsp;(&amp;nbsp;...&amp;nbsp;(f&amp;nbsp;a.(n-1)&amp;nbsp;init)&amp;nbsp;...))&lt;/code&gt; ，其中 &lt;code&gt;n&lt;/code&gt; 是floatarray &lt;code&gt;a&lt;/code&gt; 的长度。</target>
        </trans-unit>
        <trans-unit id="f24188c28d9de8530db4f4f6f01ce3cba027db99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fold_right&amp;nbsp;f&amp;nbsp;a&amp;nbsp;x&lt;/code&gt; computes &lt;code&gt;f&amp;nbsp;a.(0)&amp;nbsp;(f&amp;nbsp;a.(1)&amp;nbsp;(&amp;nbsp;...&amp;nbsp;(f&amp;nbsp;a.(n-1)&amp;nbsp;x)&amp;nbsp;...))&lt;/code&gt;, where &lt;code&gt;n&lt;/code&gt; is the length of the floatarray &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fold_right&amp;nbsp;f&amp;nbsp;a&amp;nbsp;x&lt;/code&gt; 计算出 &lt;code&gt;f&amp;nbsp;a.(0)&amp;nbsp;(f&amp;nbsp;a.(1)&amp;nbsp;(&amp;nbsp;...&amp;nbsp;(f&amp;nbsp;a.(n-1)&amp;nbsp;x)&amp;nbsp;...))&lt;/code&gt; ，其中 &lt;code&gt;n&lt;/code&gt; 是floatarray &lt;code&gt;a&lt;/code&gt; 的长度。</target>
        </trans-unit>
        <trans-unit id="28f90ea7a87378782ea7cb8926feea13e91f1544" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fold_right&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&amp;nbsp;~init&lt;/code&gt; is &lt;code&gt;f&amp;nbsp;a1&amp;nbsp;(f&amp;nbsp;a2&amp;nbsp;(...&amp;nbsp;(f&amp;nbsp;an&amp;nbsp;init)&amp;nbsp;...))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fold_right&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&amp;nbsp;~init&lt;/code&gt; 是 &lt;code&gt;f&amp;nbsp;a1&amp;nbsp;(f&amp;nbsp;a2&amp;nbsp;(...&amp;nbsp;(f&amp;nbsp;an&amp;nbsp;init)&amp;nbsp;...))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7f4327fe9d69026d3e82e3b96a0b7e37843c3791" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fold_right&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&amp;nbsp;~init&lt;/code&gt; is &lt;code&gt;f&amp;nbsp;a1&amp;nbsp;(f&amp;nbsp;a2&amp;nbsp;(...&amp;nbsp;(f&amp;nbsp;an&amp;nbsp;init)&amp;nbsp;...))&lt;/code&gt;. Not tail-recursive.</source>
          <target state="translated">&lt;code&gt;fold_right&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&amp;nbsp;~init&lt;/code&gt; 是 &lt;code&gt;f&amp;nbsp;a1&amp;nbsp;(f&amp;nbsp;a2&amp;nbsp;(...&amp;nbsp;(f&amp;nbsp;an&amp;nbsp;init)&amp;nbsp;...))&lt;/code&gt; 。不尾递归。</target>
        </trans-unit>
        <trans-unit id="d50da76214d95311cf41905aebba5534f5868558" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fold_right&amp;nbsp;~f&amp;nbsp;a&amp;nbsp;~init&lt;/code&gt; computes &lt;code&gt;f&amp;nbsp;a.(0)&amp;nbsp;(f&amp;nbsp;a.(1)&amp;nbsp;(&amp;nbsp;...&amp;nbsp;(f&amp;nbsp;a.(n-1)&amp;nbsp;init)&amp;nbsp;...))&lt;/code&gt;, where &lt;code&gt;n&lt;/code&gt; is the length of the array &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fold_right&amp;nbsp;~f&amp;nbsp;a&amp;nbsp;~init&lt;/code&gt; 计算出 &lt;code&gt;f&amp;nbsp;a.(0)&amp;nbsp;(f&amp;nbsp;a.(1)&amp;nbsp;(&amp;nbsp;...&amp;nbsp;(f&amp;nbsp;a.(n-1)&amp;nbsp;init)&amp;nbsp;...))&lt;/code&gt; ，其中 &lt;code&gt;n&lt;/code&gt; 是数组 &lt;code&gt;a&lt;/code&gt; 的长度。</target>
        </trans-unit>
        <trans-unit id="20216ef9a2ed83f787c4f480898442e21d34f665" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fold_right2&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&amp;nbsp;[b1;&amp;nbsp;...;&amp;nbsp;bn]&amp;nbsp;init&lt;/code&gt; is &lt;code&gt;f&amp;nbsp;a1&amp;nbsp;b1&amp;nbsp;(f&amp;nbsp;a2&amp;nbsp;b2&amp;nbsp;(...&amp;nbsp;(f&amp;nbsp;an&amp;nbsp;bn&amp;nbsp;init)&amp;nbsp;...))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fold_right2&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&amp;nbsp;[b1;&amp;nbsp;...;&amp;nbsp;bn]&amp;nbsp;init&lt;/code&gt; 是 &lt;code&gt;f&amp;nbsp;a1&amp;nbsp;b1&amp;nbsp;(f&amp;nbsp;a2&amp;nbsp;b2&amp;nbsp;(...&amp;nbsp;(f&amp;nbsp;an&amp;nbsp;bn&amp;nbsp;init)&amp;nbsp;...))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e9c0fb83bbe8db6e09e4e174c96c1db4ccbe9fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fold_right2&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&amp;nbsp;[b1;&amp;nbsp;...;&amp;nbsp;bn]&amp;nbsp;~init&lt;/code&gt; is &lt;code&gt;f&amp;nbsp;a1&amp;nbsp;b1&amp;nbsp;(f&amp;nbsp;a2&amp;nbsp;b2&amp;nbsp;(...&amp;nbsp;(f&amp;nbsp;an&amp;nbsp;bn&amp;nbsp;init)&amp;nbsp;...))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fold_right2&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&amp;nbsp;[b1;&amp;nbsp;...;&amp;nbsp;bn]&amp;nbsp;~init&lt;/code&gt; 是 &lt;code&gt;f&amp;nbsp;a1&amp;nbsp;b1&amp;nbsp;(f&amp;nbsp;a2&amp;nbsp;b2&amp;nbsp;(...&amp;nbsp;(f&amp;nbsp;an&amp;nbsp;bn&amp;nbsp;init)&amp;nbsp;...))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8834b559ed9239f7e317f677ed4cb62374666af5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;follow&lt;/code&gt; : indicates whether a &lt;code&gt;source&lt;/code&gt; symlink is followed or a hardlink to &lt;code&gt;source&lt;/code&gt; itself will be created. On &lt;em&gt;Unix&lt;/em&gt; systems this is done using the &lt;code&gt;linkat(2)&lt;/code&gt; function. If &lt;code&gt;?follow&lt;/code&gt; is not provided, then the &lt;code&gt;link(2)&lt;/code&gt; function is used whose behaviour is OS-dependent, but more widely available.</source>
          <target state="translated">&lt;code&gt;follow&lt;/code&gt; ：指示是遵循 &lt;code&gt;source&lt;/code&gt; 符号链接还是将创建到 &lt;code&gt;source&lt;/code&gt; 本身的硬链接。在&lt;em&gt;Unix&lt;/em&gt;系统上，这是使用 &lt;code&gt;linkat(2)&lt;/code&gt; 函数完成的。如果未提供 &lt;code&gt;?follow&lt;/code&gt; ，则使用 &lt;code&gt;link(2)&lt;/code&gt; 函数，该函数的行为与OS相关，但使用范围更广。</target>
        </trans-unit>
        <trans-unit id="78bd16418bca1f963d4d0d642703e5785202bf32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;follow&lt;/code&gt; : indicates whether a &lt;code&gt;src&lt;/code&gt; symlink is followed or a hardlink to &lt;code&gt;src&lt;/code&gt; itself will be created. On &lt;em&gt;Unix&lt;/em&gt; systems this is done using the &lt;code&gt;linkat(2)&lt;/code&gt; function. If &lt;code&gt;?follow&lt;/code&gt; is not provided, then the &lt;code&gt;link(2)&lt;/code&gt; function is used whose behaviour is OS-dependent, but more widely available.</source>
          <target state="translated">&lt;code&gt;follow&lt;/code&gt; ：指示是遵循 &lt;code&gt;src&lt;/code&gt; 符号链接，还是将创建到 &lt;code&gt;src&lt;/code&gt; 本身的硬链接。在&lt;em&gt;Unix&lt;/em&gt;系统上，这是使用 &lt;code&gt;linkat(2)&lt;/code&gt; 函数完成的。如果未提供 &lt;code&gt;?follow&lt;/code&gt; ，则使用 &lt;code&gt;link(2)&lt;/code&gt; 函数，该函数的行为与OS相关，但使用范围更广。</target>
        </trans-unit>
        <trans-unit id="bc4035240f6ea9dd3878e5e89c0de07472eac73a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; checks if all elements of the list satisfy the predicate &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; 检查列表中的所有元素是否满足谓词 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25c8efa23bd96397a0441c0f459a293b22a44fd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; checks if all elements of the list satisfy the predicate &lt;code&gt;f&lt;/code&gt;. That is, it returns &lt;code&gt;(f&amp;nbsp;a1)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;a2)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;...&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;an)&lt;/code&gt; for a non-empty list and &lt;code&gt;true&lt;/code&gt; if the list is empty.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; 检查列表中的所有元素是否满足谓词 &lt;code&gt;f&lt;/code&gt; 。也就是说，它为非空列表返回 &lt;code&gt;(f&amp;nbsp;a1)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;a2)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;...&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;an)&lt;/code&gt; ，如果列表为空，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3fc9b52a38b70fee00eef87ce2bf99d52acd4059" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;f&amp;nbsp;[|a1;&amp;nbsp;...;&amp;nbsp;an|]&lt;/code&gt; checks if all elements of the array satisfy the predicate &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;f&amp;nbsp;[|a1;&amp;nbsp;...;&amp;nbsp;an|]&lt;/code&gt; 检查数组的所有元素是否满足谓词 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26c4cea85260e92d0a2c82ab73170c6939bd6c9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;f&amp;nbsp;[|a1;&amp;nbsp;...;&amp;nbsp;an|]&lt;/code&gt; checks if all elements of the array satisfy the predicate &lt;code&gt;f&lt;/code&gt;. That is, it returns &lt;code&gt;(f&amp;nbsp;a1)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;a2)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;...&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;an)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;f&amp;nbsp;[|a1;&amp;nbsp;...;&amp;nbsp;an|]&lt;/code&gt; 检查数组的所有元素是否满足谓词 &lt;code&gt;f&lt;/code&gt; 。也就是说，它返回 &lt;code&gt;(f&amp;nbsp;a1)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;a2)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;...&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;an)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="31a0b420891e6ea473f526cca9021d6640b5d93f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;f&amp;nbsp;[|a1;&amp;nbsp;...;&amp;nbsp;an|]&lt;/code&gt; checks if all elements of the floatarray satisfy the predicate &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;f&amp;nbsp;[|a1;&amp;nbsp;...;&amp;nbsp;an|]&lt;/code&gt; 检查floatarray的所有元素是否满足谓词 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ebe1c592748402bcde6fd6fa031c50c5dae0dc49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;f&amp;nbsp;[|a1;&amp;nbsp;...;&amp;nbsp;an|]&lt;/code&gt; checks if all elements of the floatarray satisfy the predicate &lt;code&gt;f&lt;/code&gt;. That is, it returns &lt;code&gt;(f&amp;nbsp;a1)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;a2)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;...&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;an)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;f&amp;nbsp;[|a1;&amp;nbsp;...;&amp;nbsp;an|]&lt;/code&gt; 检查floatarray的所有元素是否满足谓词 &lt;code&gt;f&lt;/code&gt; 。也就是说，它返回 &lt;code&gt;(f&amp;nbsp;a1)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;a2)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;...&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;an)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bab0d235896e3372d9c72761c3caccac2a37df70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;f&amp;nbsp;m&lt;/code&gt; checks if all the bindings of the map satisfy the predicate &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;f&amp;nbsp;m&lt;/code&gt; 检查映射的所有绑定是否满足谓词 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4363d9080ffbc53316080cbf13263f30e0510a10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; checks if all elements of the set satisfy the predicate &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; 检查集合中的所有元素是否满足谓词 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45e3589f165b766a5e5f5976ec30bb60513c402f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;p&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; checks if all elements of the list satisfy the predicate &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;p&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; 检查列表中的所有元素是否满足谓词 &lt;code&gt;p&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74f6cb826af3d6cd84f0d10dda7e6c1ffc115fed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;p&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; checks if all elements of the list satisfy the predicate &lt;code&gt;p&lt;/code&gt;. That is, it returns &lt;code&gt;(p&amp;nbsp;a1)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(p&amp;nbsp;a2)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;...&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(p&amp;nbsp;an)&lt;/code&gt; for a non-empty list and &lt;code&gt;true&lt;/code&gt; if the list is empty.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;p&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; 检查列表中的所有元素是否满足谓词 &lt;code&gt;p&lt;/code&gt; 。也就是说，对于非空列表，它返回 &lt;code&gt;(p&amp;nbsp;a1)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(p&amp;nbsp;a2)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;...&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(p&amp;nbsp;an)&lt;/code&gt; ；如果列表为空，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4aea758dd4ad1294b65680d73729ef6be18f580e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;p&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; checks if all elements of the list satisfy the predicate &lt;code&gt;p&lt;/code&gt;. That is, it returns &lt;code&gt;(p&amp;nbsp;a1)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(p&amp;nbsp;a2)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;...&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(p&amp;nbsp;an)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;p&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; 检查列表中的所有元素是否满足谓词 &lt;code&gt;p&lt;/code&gt; 。也就是说，它返回 &lt;code&gt;(p&amp;nbsp;a1)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(p&amp;nbsp;a2)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;...&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(p&amp;nbsp;an)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fcbee5ff72fe93caa2574894682d2ab4b30bd7cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;p&amp;nbsp;[|a1;&amp;nbsp;...;&amp;nbsp;an|]&lt;/code&gt; checks if all elements of the floatarray satisfy the predicate &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;p&amp;nbsp;[|a1;&amp;nbsp;...;&amp;nbsp;an|]&lt;/code&gt; 检查floatarray的所有元素是否满足谓词 &lt;code&gt;p&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="27323615d2683dd51811dfc3d4727063fdf36ea4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;p&amp;nbsp;[|a1;&amp;nbsp;...;&amp;nbsp;an|]&lt;/code&gt; checks if all elements of the floatarray satisfy the predicate &lt;code&gt;p&lt;/code&gt;. That is, it returns &lt;code&gt;(p&amp;nbsp;a1)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(p&amp;nbsp;a2)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;...&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(p&amp;nbsp;an)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;p&amp;nbsp;[|a1;&amp;nbsp;...;&amp;nbsp;an|]&lt;/code&gt; 检查floatarray的所有元素是否满足谓词 &lt;code&gt;p&lt;/code&gt; 。也就是说，它返回 &lt;code&gt;(p&amp;nbsp;a1)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(p&amp;nbsp;a2)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;...&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(p&amp;nbsp;an)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="825efe2197069dc7b8029f742acb988182e4df29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;p&amp;nbsp;m&lt;/code&gt; checks if all the bindings of the map satisfy the predicate &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;p&amp;nbsp;m&lt;/code&gt; 检查映射的所有绑定是否满足谓词 &lt;code&gt;p&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4dab91481ddf548d455e57b45710b9cd59b88ced" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;p&amp;nbsp;s&lt;/code&gt; checks if all elements of the set satisfy the predicate &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;p&amp;nbsp;s&lt;/code&gt; 检查集合中的所有元素是否满足谓词 &lt;code&gt;p&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a6fc4195845818a76b88a95b6db782603dacbbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; checks if all elements of the list satisfy the predicate &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; 检查列表中的所有元素是否满足谓词 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="534a3ef8360acf245797b0cd8fecf98126dc1311" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; checks if all elements of the list satisfy the predicate &lt;code&gt;f&lt;/code&gt;. That is, it returns &lt;code&gt;(f&amp;nbsp;a1)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;a2)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;...&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;an)&lt;/code&gt; for a non-empty list and &lt;code&gt;true&lt;/code&gt; if the list is empty.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; 检查列表中的所有元素是否满足谓词 &lt;code&gt;f&lt;/code&gt; 。也就是说，它为非空列表返回 &lt;code&gt;(f&amp;nbsp;a1)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;a2)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;...&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;an)&lt;/code&gt; ，如果列表为空，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cbc9c8f85611d1fd304692e370639bbeafd470c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;~f&amp;nbsp;[|a1;&amp;nbsp;...;&amp;nbsp;an|]&lt;/code&gt; checks if all elements of the array satisfy the predicate &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;~f&amp;nbsp;[|a1;&amp;nbsp;...;&amp;nbsp;an|]&lt;/code&gt; 检查数组的所有元素是否满足谓词 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5dd3c9848c26f1717c4cfe65bafcfa231dd4ce3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;~f&amp;nbsp;[|a1;&amp;nbsp;...;&amp;nbsp;an|]&lt;/code&gt; checks if all elements of the array satisfy the predicate &lt;code&gt;f&lt;/code&gt;. That is, it returns &lt;code&gt;(f&amp;nbsp;a1)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;a2)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;...&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;an)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;~f&amp;nbsp;[|a1;&amp;nbsp;...;&amp;nbsp;an|]&lt;/code&gt; 检查数组的所有元素是否满足谓词 &lt;code&gt;f&lt;/code&gt; 。也就是说，它返回 &lt;code&gt;(f&amp;nbsp;a1)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;a2)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;...&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;an)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62d9eb2cd81c7ec3a17e1f2f8db25695e11576e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;~f&amp;nbsp;[|a1;&amp;nbsp;...;&amp;nbsp;an|]&lt;/code&gt; checks if all elements of the floatarray satisfy the predicate &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;~f&amp;nbsp;[|a1;&amp;nbsp;...;&amp;nbsp;an|]&lt;/code&gt; 检查floatarray的所有元素是否满足谓词 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="004833e58c8955fe78d46c8dab2e7c3fc9fda193" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;~f&amp;nbsp;[|a1;&amp;nbsp;...;&amp;nbsp;an|]&lt;/code&gt; checks if all elements of the floatarray satisfy the predicate &lt;code&gt;f&lt;/code&gt;. That is, it returns &lt;code&gt;(f&amp;nbsp;a1)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;a2)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;...&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;an)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;~f&amp;nbsp;[|a1;&amp;nbsp;...;&amp;nbsp;an|]&lt;/code&gt; 检查floatarray的所有元素是否满足谓词 &lt;code&gt;f&lt;/code&gt; 。也就是说，它返回 &lt;code&gt;(f&amp;nbsp;a1)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;a2)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;...&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(f&amp;nbsp;an)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f824573d3f5ab6fdc4ab28c1f270a8bfdbc89f9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;~f&amp;nbsp;m&lt;/code&gt; checks if all the bindings of the map satisfy the predicate &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;~f&amp;nbsp;m&lt;/code&gt; 检查映射的所有绑定是否满足谓词 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78c1b390c55f2ad46c866202544f74d68fb3497d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; checks if all elements of the set satisfy the predicate &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; 检查集合中的所有元素是否满足谓词 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad050067eab0743a198f8f008d4983bb200b0df0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for_all&amp;nbsp;~left&amp;nbsp;~right&amp;nbsp;(Left&amp;nbsp;v)&lt;/code&gt; is &lt;code&gt;left&amp;nbsp;v&lt;/code&gt;, and &lt;code&gt;for_all&amp;nbsp;~left&amp;nbsp;~right&amp;nbsp;(Right&amp;nbsp;v)&lt;/code&gt; is &lt;code&gt;right&amp;nbsp;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for_all&amp;nbsp;~left&amp;nbsp;~right&amp;nbsp;(Left&amp;nbsp;v)&lt;/code&gt; 是 &lt;code&gt;left&amp;nbsp;v&lt;/code&gt; ， &lt;code&gt;for_all&amp;nbsp;~left&amp;nbsp;~right&amp;nbsp;(Right&amp;nbsp;v)&lt;/code&gt; 是 &lt;code&gt;right&amp;nbsp;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="260f2ae6d1ee83f8412d1ffcb16b92255014d665" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;force&amp;nbsp;x&lt;/code&gt; forces the suspension &lt;code&gt;x&lt;/code&gt; and returns its result.</source>
          <target state="translated">&lt;code&gt;force&amp;nbsp;x&lt;/code&gt; 强制悬挂 &lt;code&gt;x&lt;/code&gt; 并返回其结果。</target>
        </trans-unit>
        <trans-unit id="646753e333c279d5ebcef34aca245eff01a2dca5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;force&amp;nbsp;x&lt;/code&gt; forces the suspension &lt;code&gt;x&lt;/code&gt; and returns its result. If &lt;code&gt;x&lt;/code&gt; has already been forced, &lt;code&gt;Lazy.force&amp;nbsp;x&lt;/code&gt; returns the same value again without recomputing it. If it raised an exception, the same exception is raised again.</source>
          <target state="translated">&lt;code&gt;force&amp;nbsp;x&lt;/code&gt; 强制悬挂 &lt;code&gt;x&lt;/code&gt; 并返回其结果。如果 &lt;code&gt;x&lt;/code&gt; 已经被强制执行，则 &lt;code&gt;Lazy.force&amp;nbsp;x&lt;/code&gt; 将再次返回相同的值，而无需重新计算它。如果引发异常，则再次引发相同的异常。</target>
        </trans-unit>
        <trans-unit id="f526d280adfca43a5abcd7cda60058d9c57af383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;force_val&amp;nbsp;x&lt;/code&gt; forces the suspension &lt;code&gt;x&lt;/code&gt; and returns its result.</source>
          <target state="translated">&lt;code&gt;force_val&amp;nbsp;x&lt;/code&gt; 强制悬挂 &lt;code&gt;x&lt;/code&gt; 并返回其结果。</target>
        </trans-unit>
        <trans-unit id="e845f42b187efd1d3ae4560ca7690c333b3324f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;force_val&amp;nbsp;x&lt;/code&gt; forces the suspension &lt;code&gt;x&lt;/code&gt; and returns its result. If &lt;code&gt;x&lt;/code&gt; has already been forced, &lt;code&gt;force_val&amp;nbsp;x&lt;/code&gt; returns the same value again without recomputing it.</source>
          <target state="translated">&lt;code&gt;force_val&amp;nbsp;x&lt;/code&gt; 强制悬挂 &lt;code&gt;x&lt;/code&gt; 并返回其结果。如果 &lt;code&gt;x&lt;/code&gt; 已经被强制执行，则 &lt;code&gt;force_val&amp;nbsp;x&lt;/code&gt; 再次返回相同的值，而无需重新计算它。</target>
        </trans-unit>
        <trans-unit id="ce520d570d9649a33fd9b3790d05c3c8f2b4a117" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&amp;nbsp;pos&amp;nbsp;slot&lt;/code&gt; returns the string representation of &lt;code&gt;slot&lt;/code&gt; as &lt;code&gt;raw_backtrace_to_string&lt;/code&gt; would format it, assuming it is the &lt;code&gt;pos&lt;/code&gt;-th element of the backtrace: the &lt;code&gt;0&lt;/code&gt;-th element is pretty-printed differently than the others.</source>
          <target state="translated">&lt;code&gt;format&amp;nbsp;pos&amp;nbsp;slot&lt;/code&gt; 返回的字符串表示 &lt;code&gt;slot&lt;/code&gt; 作为 &lt;code&gt;raw_backtrace_to_string&lt;/code&gt; 将其格式化，假设它是 &lt;code&gt;pos&lt;/code&gt; 个回溯的元素： &lt;code&gt;0&lt;/code&gt; 个元素是相当印刷不同于其他。</target>
        </trans-unit>
        <trans-unit id="13663edf5a796ea0bc7c9512d3dc1a20b94ca625" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format_from_string&amp;nbsp;s&amp;nbsp;fmt&lt;/code&gt; converts a string argument to a format string, according to the given format string &lt;code&gt;fmt&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;format_from_string&amp;nbsp;s&amp;nbsp;fmt&lt;/code&gt; 根据给定的格式字符串 &lt;code&gt;fmt&lt;/code&gt; 将字符串参数转换为格式字符串。</target>
        </trans-unit>
        <trans-unit id="7821cf3b2142748c552374b868a7ff294efb2a64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format_of_string&amp;nbsp;s&lt;/code&gt; returns a format string read from the string literal &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;format_of_string&amp;nbsp;s&lt;/code&gt; 返回从字符串常量 &lt;code&gt;s&lt;/code&gt; 读取的格式字符串。</target>
        </trans-unit>
        <trans-unit id="b8a21482a19816834ad728509eeebb3f70da0f6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format_of_string&amp;nbsp;s&lt;/code&gt; returns a format string read from the string literal &lt;code&gt;s&lt;/code&gt;. Note: &lt;code&gt;format_of_string&lt;/code&gt; can not convert a string argument that is not a literal. If you need this functionality, use the more general &lt;a href=&quot;scanf#VALformat_from_string&quot;&gt;&lt;code&gt;Scanf.format_from_string&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;code&gt;format_of_string&amp;nbsp;s&lt;/code&gt; 返回从字符串常量 &lt;code&gt;s&lt;/code&gt; 读取的格式字符串。注意： &lt;code&gt;format_of_string&lt;/code&gt; 无法转换不是文字的字符串参数。如果需要此功能，请使用更通用的&lt;a href=&quot;scanf#VALformat_from_string&quot;&gt; &lt;code&gt;Scanf.format_from_string&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="7c2bebea2bc30db0d9fedcc27627a3a42ca2d878" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;formatter_of_buffer&amp;nbsp;b&lt;/code&gt; returns a new formatter writing to buffer &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;formatter_of_buffer&amp;nbsp;b&lt;/code&gt; 返回一个新的格式化程序，写入缓冲区 &lt;code&gt;b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e10e001bdc4cec430ecfa78590df2b6e273167e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;formatter_of_buffer&amp;nbsp;b&lt;/code&gt; returns a new formatter writing to buffer &lt;code&gt;b&lt;/code&gt;. At the end of pretty-printing, the formatter must be flushed using &lt;a href=&quot;format#VALpp_print_flush&quot;&gt;&lt;code&gt;Format.pp_print_flush&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;format#VALpp_print_newline&quot;&gt;&lt;code&gt;Format.pp_print_newline&lt;/code&gt;&lt;/a&gt;, to print all the pending material into the buffer.</source>
          <target state="translated">&lt;code&gt;formatter_of_buffer&amp;nbsp;b&lt;/code&gt; 返回一个新的格式化程序，写入缓冲区 &lt;code&gt;b&lt;/code&gt; 。在漂亮打印结束时，必须使用&lt;a href=&quot;format#VALpp_print_flush&quot;&gt; &lt;code&gt;Format.pp_print_flush&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;format#VALpp_print_newline&quot;&gt; &lt;code&gt;Format.pp_print_newline&lt;/code&gt; &lt;/a&gt;刷新格式化程序，以将所有待处理的材料打印到缓冲区中。</target>
        </trans-unit>
        <trans-unit id="8919062bbe4083aee841d43c727e61b72ff65070" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;formatter_of_out_channel&amp;nbsp;oc&lt;/code&gt; returns a new formatter writing to the corresponding output channel &lt;code&gt;oc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;formatter_of_out_channel&amp;nbsp;oc&lt;/code&gt; 返回写入到相应输出通道 &lt;code&gt;oc&lt;/code&gt; 的新格式化程序。</target>
        </trans-unit>
        <trans-unit id="56cf9c235b4e24618b4d5e4b38b65ad9197172d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;formatter_of_out_functions&amp;nbsp;out_funs&lt;/code&gt; returns a new formatter that writes with the set of output functions &lt;code&gt;out_funs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;formatter_of_out_functions&amp;nbsp;out_funs&lt;/code&gt; 返回一个新的格式化程序，该格式化程序使用一组输出函数 &lt;code&gt;out_funs&lt;/code&gt; 进行写入。</target>
        </trans-unit>
        <trans-unit id="3e81159cf599476bf1ac0cb0b77b21ed68034bef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;formatter_of_symbolic_output_buffer&amp;nbsp;sob&lt;/code&gt; returns a symbolic formatter that outputs to &lt;code&gt;symbolic_output_buffer&lt;/code&gt;&lt;code&gt;sob&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;formatter_of_symbolic_output_buffer&amp;nbsp;sob&lt;/code&gt; 返回输出到 &lt;code&gt;symbolic_output_buffer&lt;/code&gt; &lt;code&gt;sob&lt;/code&gt; 的符号格式化程序。</target>
        </trans-unit>
        <trans-unit id="05ccb1977707e7e3d703a6d785e122bc70d6724d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fprintf&amp;nbsp;ff&amp;nbsp;fmt&amp;nbsp;arg1&amp;nbsp;...&amp;nbsp;argN&lt;/code&gt; formats the arguments &lt;code&gt;arg1&lt;/code&gt; to &lt;code&gt;argN&lt;/code&gt; according to the format string &lt;code&gt;fmt&lt;/code&gt;, and outputs the resulting string on the formatter &lt;code&gt;ff&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fprintf&amp;nbsp;ff&amp;nbsp;fmt&amp;nbsp;arg1&amp;nbsp;...&amp;nbsp;argN&lt;/code&gt; 根据格式字符串 &lt;code&gt;fmt&lt;/code&gt; 格式化参数 &lt;code&gt;arg1&lt;/code&gt; 到 &lt;code&gt;argN&lt;/code&gt; ，并在格式化程序 &lt;code&gt;ff&lt;/code&gt; 上输出结果字符串。</target>
        </trans-unit>
        <trans-unit id="2b1c72572c479f15fd99c9e3dcb204b1ad67f290" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fprintf&amp;nbsp;outchan&amp;nbsp;format&amp;nbsp;arg1&amp;nbsp;...&amp;nbsp;argN&lt;/code&gt; formats the arguments &lt;code&gt;arg1&lt;/code&gt; to &lt;code&gt;argN&lt;/code&gt; according to the format string &lt;code&gt;format&lt;/code&gt;, and outputs the resulting string on the channel &lt;code&gt;outchan&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fprintf&amp;nbsp;outchan&amp;nbsp;format&amp;nbsp;arg1&amp;nbsp;...&amp;nbsp;argN&lt;/code&gt; 根据格式字符串 &lt;code&gt;format&lt;/code&gt; 参数 &lt;code&gt;arg1&lt;/code&gt; 到 &lt;code&gt;argN&lt;/code&gt; ，并在通道 &lt;code&gt;outchan&lt;/code&gt; 上输出结果字符串。</target>
        </trans-unit>
        <trans-unit id="00023b534f84ba07b5067e0277c774d1dffd28b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;frexp&amp;nbsp;f&lt;/code&gt; returns the pair of the significant and the exponent of &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;frexp&amp;nbsp;f&lt;/code&gt; 返回一对显著的和指数 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18c0010ff71999fcc64586173f27eda91d87f2d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;frexp&amp;nbsp;f&lt;/code&gt; returns the pair of the significant and the exponent of &lt;code&gt;f&lt;/code&gt;. When &lt;code&gt;f&lt;/code&gt; is zero, the significant &lt;code&gt;x&lt;/code&gt; and the exponent &lt;code&gt;n&lt;/code&gt; of &lt;code&gt;f&lt;/code&gt; are equal to zero. When &lt;code&gt;f&lt;/code&gt; is non-zero, they are defined by &lt;code&gt;f&amp;nbsp;=&amp;nbsp;x&amp;nbsp;*.&amp;nbsp;2&amp;nbsp;**&amp;nbsp;n&lt;/code&gt; and &lt;code&gt;0.5&amp;nbsp;&amp;lt;=&amp;nbsp;x&amp;nbsp;&amp;lt;&amp;nbsp;1.0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;frexp&amp;nbsp;f&lt;/code&gt; 返回一对显著的和指数 &lt;code&gt;f&lt;/code&gt; 。当 &lt;code&gt;f&lt;/code&gt; 为零时，显著 &lt;code&gt;x&lt;/code&gt; 和指数 &lt;code&gt;n&lt;/code&gt; 的 &lt;code&gt;f&lt;/code&gt; 都等于零。当 &lt;code&gt;f&lt;/code&gt; 不为零时，它们由 &lt;code&gt;f&amp;nbsp;=&amp;nbsp;x&amp;nbsp;*.&amp;nbsp;2&amp;nbsp;**&amp;nbsp;n&lt;/code&gt; 定义。2 ** n和 &lt;code&gt;0.5&amp;nbsp;&amp;lt;=&amp;nbsp;x&amp;nbsp;&amp;lt;&amp;nbsp;1.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="09b0ee6fe14aba9bd83144a17885596253a36bfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from_fun&amp;nbsp;f&lt;/code&gt; is the same as &lt;code&gt;lazy&amp;nbsp;(f&amp;nbsp;())&lt;/code&gt; but slightly more efficient.</source>
          <target state="translated">&lt;code&gt;from_fun&amp;nbsp;f&lt;/code&gt; 与 &lt;code&gt;lazy&amp;nbsp;(f&amp;nbsp;())&lt;/code&gt; 相同，但效率更高。</target>
        </trans-unit>
        <trans-unit id="b418242fb5a35a996f0ff6648385dcbd99c641b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from_fun&lt;/code&gt; should only be used if the function &lt;code&gt;f&lt;/code&gt; is already defined. In particular it is always less efficient to write &lt;code&gt;from_fun&amp;nbsp;(fun&amp;nbsp;()&amp;nbsp;-&amp;gt;&amp;nbsp;expr)&lt;/code&gt; than &lt;code&gt;lazy&amp;nbsp;expr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;from_fun&lt;/code&gt; 仅在函数 &lt;code&gt;f&lt;/code&gt; 已定义的情况下，才应使用from_fun。特别是，编写 &lt;code&gt;from_fun&amp;nbsp;(fun&amp;nbsp;()&amp;nbsp;-&amp;gt;&amp;nbsp;expr)&lt;/code&gt; 总是比 &lt;code&gt;lazy&amp;nbsp;expr&lt;/code&gt; 效率低。</target>
        </trans-unit>
        <trans-unit id="99ea3ad129450b2490107f8345924d5272cd2058" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from_val&amp;nbsp;v&lt;/code&gt; returns an already-forced suspension of &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;from_val&amp;nbsp;v&lt;/code&gt; 返回一个已经被迫暂停 &lt;code&gt;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e12c6ede10b1900fb8f5b217a46c2986c8051265" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from_val&amp;nbsp;v&lt;/code&gt; returns an already-forced suspension of &lt;code&gt;v&lt;/code&gt;. This is for special purposes only and should not be confused with &lt;code&gt;lazy&amp;nbsp;(v)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;from_val&amp;nbsp;v&lt;/code&gt; 返回一个已经被迫暂停 &lt;code&gt;v&lt;/code&gt; 。这仅出于特殊目的，不应与 &lt;code&gt;lazy&amp;nbsp;(v)&lt;/code&gt; 混淆。</target>
        </trans-unit>
        <trans-unit id="7fe78537d092c3c42d7ee780ddb78829da0046c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;g&lt;/code&gt; or &lt;code&gt;G&lt;/code&gt;: convert a floating-point argument to decimal notation, in style &lt;code&gt;f&lt;/code&gt; or &lt;code&gt;e&lt;/code&gt;, &lt;code&gt;E&lt;/code&gt; (whichever is more compact). Moreover, any trailing zeros are removed from the fractional part of the result and the decimal-point character is removed if there is no fractional part remaining.</source>
          <target state="translated">&lt;code&gt;g&lt;/code&gt; 或 &lt;code&gt;G&lt;/code&gt; ：将浮点参数转换为 &lt;code&gt;f&lt;/code&gt; 或 &lt;code&gt;e&lt;/code&gt; ， &lt;code&gt;E&lt;/code&gt; （以更紧凑的形式）为十进制表示法。此外，将从结果的小数部分中删除所有结尾的零，如果没有剩余的小数部分，则将删除小数点字符。</target>
        </trans-unit>
        <trans-unit id="9b7d35a136af8b5a8d666efa3c2ef45d9c9b58d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get&amp;nbsp;a&amp;nbsp;n&lt;/code&gt; returns the element number &lt;code&gt;n&lt;/code&gt; of array &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get&amp;nbsp;a&amp;nbsp;n&lt;/code&gt; 返回数组 &lt;code&gt;a&lt;/code&gt; 的元素编号 &lt;code&gt;n&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c9a8a02d39e547766743e23398e43507103339b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get&amp;nbsp;a&amp;nbsp;n&lt;/code&gt; returns the element number &lt;code&gt;n&lt;/code&gt; of array &lt;code&gt;a&lt;/code&gt;. The first element has number 0. The last element has number &lt;code&gt;length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1&lt;/code&gt;. You can also write &lt;code&gt;a.(n)&lt;/code&gt; instead of &lt;code&gt;get&amp;nbsp;a&amp;nbsp;n&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get&amp;nbsp;a&amp;nbsp;n&lt;/code&gt; 返回数组 &lt;code&gt;a&lt;/code&gt; 的元素编号 &lt;code&gt;n&lt;/code&gt; 。第一个元素的编号为0。最后一个元素的编号 &lt;code&gt;length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; 。您也可以写 &lt;code&gt;a.(n)&lt;/code&gt; 而不是 &lt;code&gt;get&amp;nbsp;a&amp;nbsp;n&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59c69f8ffdb06907c7a67e4f5ac686308ac0911e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get&amp;nbsp;a&amp;nbsp;n&lt;/code&gt; returns the element number &lt;code&gt;n&lt;/code&gt; of floatarray &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get&amp;nbsp;a&amp;nbsp;n&lt;/code&gt; 返回floatarray &lt;code&gt;a&lt;/code&gt; 的元素编号 &lt;code&gt;n&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e8d4a1760227eb2e79e7905f2ae033ae58fb39d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get&amp;nbsp;o&lt;/code&gt; is &lt;code&gt;v&lt;/code&gt; if &lt;code&gt;o&lt;/code&gt; is &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; and</source>
          <target state="translated">&lt;code&gt;get&amp;nbsp;o&lt;/code&gt; 如果 &lt;code&gt;o&lt;/code&gt; 是 &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; 并且得到o是 &lt;code&gt;v&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f52ca1eca194468835eeb0dc21506264203e989" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get&amp;nbsp;s&amp;nbsp;i&lt;/code&gt; is the character at index &lt;code&gt;i&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get&amp;nbsp;s&amp;nbsp;i&lt;/code&gt; 是指数的字符 &lt;code&gt;i&lt;/code&gt; 的 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4598a7e6f351d9d27f37bfb824bf6950c09ba6b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get&amp;nbsp;s&amp;nbsp;i&lt;/code&gt; is the character at index &lt;code&gt;i&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt;. This is the same as writing &lt;code&gt;s.[i]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get&amp;nbsp;s&amp;nbsp;i&lt;/code&gt; 是指数的字符 &lt;code&gt;i&lt;/code&gt; 的 &lt;code&gt;s&lt;/code&gt; 。这与写 &lt;code&gt;s.[i]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b8b1aa40f7eb6de5e35beca093e5418fb66e55e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get&amp;nbsp;s&amp;nbsp;n&lt;/code&gt; returns the byte at index &lt;code&gt;n&lt;/code&gt; in argument &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get&amp;nbsp;s&amp;nbsp;n&lt;/code&gt; 返回参数 &lt;code&gt;s&lt;/code&gt; 中索引 &lt;code&gt;n&lt;/code&gt; 处的字节。</target>
        </trans-unit>
        <trans-unit id="c74702420e5ddf1004d92769906012c00ee0fe34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_bucket&amp;nbsp;n&lt;/code&gt; returns the current size of the &lt;code&gt;n&lt;/code&gt;-th future bucket of the GC smoothing system.</source>
          <target state="translated">&lt;code&gt;get_bucket&amp;nbsp;n&lt;/code&gt; 返回GC平滑系统的第 &lt;code&gt;n&lt;/code&gt; 个将来的存储桶的当前大小。</target>
        </trans-unit>
        <trans-unit id="3c0fc473ac1a450f8466569e348f7eccc4d4593b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_bucket&amp;nbsp;n&lt;/code&gt; returns the current size of the &lt;code&gt;n&lt;/code&gt;-th future bucket of the GC smoothing system. The unit is one millionth of a full GC.</source>
          <target state="translated">&lt;code&gt;get_bucket&amp;nbsp;n&lt;/code&gt; 返回GC平滑系统的第 &lt;code&gt;n&lt;/code&gt; 个将来的存储桶的当前大小。该单位是完整GC的百万分之一。</target>
        </trans-unit>
        <trans-unit id="b5d8c1f1a45f2d75f0363c91eed549f475c34798" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_credit&amp;nbsp;()&lt;/code&gt; returns the current size of the &quot;work done in advance&quot; counter of the GC smoothing system.</source>
          <target state="translated">&lt;code&gt;get_credit&amp;nbsp;()&lt;/code&gt; 返回GC平滑系统的&amp;ldquo;预先完成的工作&amp;rdquo;计数器的当前大小。</target>
        </trans-unit>
        <trans-unit id="9d4b2d039cbeba2e73eb4355d41a371591555e69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_credit&amp;nbsp;()&lt;/code&gt; returns the current size of the &quot;work done in advance&quot; counter of the GC smoothing system. The unit is one millionth of a full GC.</source>
          <target state="translated">&lt;code&gt;get_credit&amp;nbsp;()&lt;/code&gt; 返回GC平滑系统的&amp;ldquo;预先完成的工作&amp;rdquo;计数器的当前大小。该单位是完整GC的百万分之一。</target>
        </trans-unit>
        <trans-unit id="797152130e856367f9bdfd2beabe175d6ef06ab0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_error&amp;nbsp;r&lt;/code&gt; is &lt;code&gt;e&lt;/code&gt; if &lt;code&gt;r&lt;/code&gt; is &lt;code&gt;Error&amp;nbsp;e&lt;/code&gt; and</source>
          <target state="translated">&lt;code&gt;get_error&amp;nbsp;r&lt;/code&gt; 如果 &lt;code&gt;r&lt;/code&gt; 为 &lt;code&gt;Error&amp;nbsp;e&lt;/code&gt; 并且get_error r为 &lt;code&gt;e&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9b1bb270760147b5099d440d7087ae108568c49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_int16_be&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; is &lt;code&gt;b&lt;/code&gt;'s big-endian signed 16-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get_int16_be&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; 是 &lt;code&gt;b&lt;/code&gt; 的big-endian带符号的16位整数，从字节索引 &lt;code&gt;i&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="8ccbb59eb2efe10f7e86667b59f0bc03eafe4696" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_int16_le&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; is &lt;code&gt;b&lt;/code&gt;'s little-endian signed 16-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get_int16_le&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; 是 &lt;code&gt;b&lt;/code&gt; 的小尾数带符号16位整数，从字节索引 &lt;code&gt;i&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="7630d18f8c25e56e520a907727deb4bd3584c090" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_int16_ne&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; is &lt;code&gt;b&lt;/code&gt;'s native-endian signed 16-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get_int16_ne&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; 是 &lt;code&gt;b&lt;/code&gt; 的本机尾数带符号16位整数，从字节索引 &lt;code&gt;i&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="243641a77446c132292d39b1274ed8addb1a6784" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_int32_be&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; is &lt;code&gt;b&lt;/code&gt;'s big-endian 32-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get_int32_be&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; 是 &lt;code&gt;b&lt;/code&gt; 的big-endian 32位整数，从字节索引 &lt;code&gt;i&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="47bbbb0e044f5fbca33203eb41fef405c56a7489" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_int32_le&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; is &lt;code&gt;b&lt;/code&gt;'s little-endian 32-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get_int32_le&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; 是 &lt;code&gt;b&lt;/code&gt; 的小尾数32位整数，从字节索引 &lt;code&gt;i&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="e04ee4a80310dbd9beb4ee0c303c3cb88e8b808e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_int32_ne&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; is &lt;code&gt;b&lt;/code&gt;'s native-endian 32-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get_int32_ne&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; 是 &lt;code&gt;b&lt;/code&gt; 的本机字节序32位整数，从字节索引 &lt;code&gt;i&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="0c042af9306497e4b16bfbbf3c56f261198c8793" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_int64_be&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; is &lt;code&gt;b&lt;/code&gt;'s big-endian 64-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get_int64_be&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; 是 &lt;code&gt;b&lt;/code&gt; 的big-endian 64位整数，从字节索引 &lt;code&gt;i&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="ae687fc920152ee8e6450b5e39475a21f53f0144" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_int64_le&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; is &lt;code&gt;b&lt;/code&gt;'s little-endian 64-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get_int64_le&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; 是 &lt;code&gt;b&lt;/code&gt; 的低字节序的64位整数，从字节索引 &lt;code&gt;i&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="5aafd8a6795af11398cdc1b440a39ce6854a94ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_int64_ne&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; is &lt;code&gt;b&lt;/code&gt;'s native-endian 64-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get_int64_ne&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; 是 &lt;code&gt;b&lt;/code&gt; 的本机字节序的64位整数，从字节索引 &lt;code&gt;i&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="80e403e6d12002e3ddb5d350d97a93a85e4ca6ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_int8&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; is &lt;code&gt;b&lt;/code&gt;'s signed 8-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get_int8&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; 是 &lt;code&gt;b&lt;/code&gt; 的有符号8位整数，从字节索引 &lt;code&gt;i&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="99b2ef23576da0929bc10ffc748cdc3c9aa7495f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_ok&amp;nbsp;r&lt;/code&gt; is &lt;code&gt;v&lt;/code&gt; if &lt;code&gt;r&lt;/code&gt; is &lt;code&gt;Ok&amp;nbsp;v&lt;/code&gt; and</source>
          <target state="translated">&lt;code&gt;get_ok&amp;nbsp;r&lt;/code&gt; 为 &lt;code&gt;v&lt;/code&gt; 如果 &lt;code&gt;r&lt;/code&gt; 为 &lt;code&gt;Ok&amp;nbsp;v&lt;/code&gt; 并且</target>
        </trans-unit>
        <trans-unit id="5a376a5a879ce488e2fcdf5a691fbb56b18045f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_raw_backtrace_next_slot&amp;nbsp;slot&lt;/code&gt; returns the next slot inlined, if any.</source>
          <target state="translated">&lt;code&gt;get_raw_backtrace_next_slot&amp;nbsp;slot&lt;/code&gt; 返回内联的下一个插槽（如果有）。</target>
        </trans-unit>
        <trans-unit id="4b14f017ae64dc4a54beba207f6c45c53b6fac66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_raw_backtrace_slot&amp;nbsp;bckt&amp;nbsp;pos&lt;/code&gt; returns the slot in position &lt;code&gt;pos&lt;/code&gt; in the backtrace &lt;code&gt;bckt&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get_raw_backtrace_slot&amp;nbsp;bckt&amp;nbsp;pos&lt;/code&gt; 返回在backtrace &lt;code&gt;bckt&lt;/code&gt; 中位置 &lt;code&gt;pos&lt;/code&gt; 的插槽。</target>
        </trans-unit>
        <trans-unit id="5d39c5c961297b35c59650567c542178dfc07a91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_symbolic_output_buffer&amp;nbsp;sob&lt;/code&gt; returns the contents of buffer &lt;code&gt;sob&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get_symbolic_output_buffer&amp;nbsp;sob&lt;/code&gt; 返回缓冲区 &lt;code&gt;sob&lt;/code&gt; 的内容。</target>
        </trans-unit>
        <trans-unit id="95dd0e9069b76784a4608b81506a50f0a830afcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_uint16_be&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; is &lt;code&gt;b&lt;/code&gt;'s big-endian unsigned 16-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get_uint16_be&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; 是 &lt;code&gt;b&lt;/code&gt; 的big-endian无符号16位整数，从字节索引 &lt;code&gt;i&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="07f906f4111f8795f6f156a03180a9feea7de9c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_uint16_le&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; is &lt;code&gt;b&lt;/code&gt;'s little-endian unsigned 16-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get_uint16_le&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; 是 &lt;code&gt;b&lt;/code&gt; 的低字节无符号16位整数，从字节索引 &lt;code&gt;i&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="96cd4ab83867147422df04371ff981e6d59d2cb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_uint16_ne&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; is &lt;code&gt;b&lt;/code&gt;'s native-endian unsigned 16-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get_uint16_ne&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; 是 &lt;code&gt;b&lt;/code&gt; 的本机尾数无符号16位整数，从字节索引 &lt;code&gt;i&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="c8502fd4749eeba990f1263420c110fde7f3e6e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_uint8&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; is &lt;code&gt;b&lt;/code&gt;'s unsigned 8-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get_uint8&amp;nbsp;b&amp;nbsp;i&lt;/code&gt; 是 &lt;code&gt;b&lt;/code&gt; 的无符号8位整数，从字节索引 &lt;code&gt;i&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="1a36446d714cefd645cec8c4475c062a1b0b6b92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_value&amp;nbsp;s&lt;/code&gt; returns the current value of semaphore &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get_value&amp;nbsp;s&lt;/code&gt; 返回信号量 &lt;code&gt;s&lt;/code&gt; 的当前值。</target>
        </trans-unit>
        <trans-unit id="7469d39f2db9d31669cae0d93423d4c25115fe16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_value&amp;nbsp;s&lt;/code&gt; returns the current value of semaphore &lt;code&gt;s&lt;/code&gt;. The current value can be modified at any time by concurrent &lt;a href=&quot;semaphore.counting#VALrelease&quot;&gt;&lt;code&gt;Semaphore.Counting.release&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;semaphore.counting#VALacquire&quot;&gt;&lt;code&gt;Semaphore.Counting.acquire&lt;/code&gt;&lt;/a&gt; operations. Hence, the &lt;code&gt;get_value&lt;/code&gt; operation is racy, and its result should only be used for debugging or informational messages.</source>
          <target state="translated">&lt;code&gt;get_value&amp;nbsp;s&lt;/code&gt; 返回信号量 &lt;code&gt;s&lt;/code&gt; 的当前值。可以通过并发&lt;a href=&quot;semaphore.counting#VALrelease&quot;&gt; &lt;code&gt;Semaphore.Counting.release&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;semaphore.counting#VALacquire&quot;&gt; &lt;code&gt;Semaphore.Counting.acquire&lt;/code&gt; &lt;/a&gt;操作随时修改当前值。因此， &lt;code&gt;get_value&lt;/code&gt; 操作很活泼，其结果应仅用于调试或信息性消息。</target>
        </trans-unit>
        <trans-unit id="b7e2cef7c4a3764061cf640d2b4658e2266160ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getaddrinfo&amp;nbsp;host&amp;nbsp;service&amp;nbsp;opts&lt;/code&gt; returns a list of &lt;a href=&quot;unix#TYPEaddr_info&quot;&gt;&lt;code&gt;Unix.addr_info&lt;/code&gt;&lt;/a&gt; records describing socket parameters and addresses suitable for communicating with the given host and service.</source>
          <target state="translated">&lt;code&gt;getaddrinfo&amp;nbsp;host&amp;nbsp;service&amp;nbsp;opts&lt;/code&gt; 返回&lt;a href=&quot;unix#TYPEaddr_info&quot;&gt; &lt;code&gt;Unix.addr_info&lt;/code&gt; &lt;/a&gt;记录列表，该记录描述了适合与给定主机和服务进行通信的套接字参数和地址。</target>
        </trans-unit>
        <trans-unit id="bf8477c8f0e5fc3cfef1c8abfca5de93f8436359" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getaddrinfo&amp;nbsp;host&amp;nbsp;service&amp;nbsp;opts&lt;/code&gt; returns a list of &lt;a href=&quot;unix#TYPEaddr_info&quot;&gt;&lt;code&gt;Unix.addr_info&lt;/code&gt;&lt;/a&gt; records describing socket parameters and addresses suitable for communicating with the given host and service. The empty list is returned if the host or service names are unknown, or the constraints expressed in &lt;code&gt;opts&lt;/code&gt; cannot be satisfied.</source>
          <target state="translated">&lt;code&gt;getaddrinfo&amp;nbsp;host&amp;nbsp;service&amp;nbsp;opts&lt;/code&gt; 返回&lt;a href=&quot;unix#TYPEaddr_info&quot;&gt; &lt;code&gt;Unix.addr_info&lt;/code&gt; &lt;/a&gt;记录列表，该记录描述了适合与给定主机和服务进行通信的套接字参数和地址。如果主机名或服务名未知，或者无法满足 &lt;code&gt;opts&lt;/code&gt; 中表示的约束，则返回空列表。</target>
        </trans-unit>
        <trans-unit id="fc7d43ca8270b37e0ee102d573c7c2ee401267ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getaddrinfo&amp;nbsp;host&amp;nbsp;service&amp;nbsp;opts&lt;/code&gt; returns a list of &lt;a href=&quot;unixlabels#TYPEaddr_info&quot;&gt;&lt;code&gt;UnixLabels.addr_info&lt;/code&gt;&lt;/a&gt; records describing socket parameters and addresses suitable for communicating with the given host and service.</source>
          <target state="translated">&lt;code&gt;getaddrinfo&amp;nbsp;host&amp;nbsp;service&amp;nbsp;opts&lt;/code&gt; 返回&lt;a href=&quot;unixlabels#TYPEaddr_info&quot;&gt; &lt;code&gt;UnixLabels.addr_info&lt;/code&gt; &lt;/a&gt;记录的列表，这些记录描述了适合与给定主机和服务进行通信的套接字参数和地址。</target>
        </trans-unit>
        <trans-unit id="5880701dbf99ac8e005075cf6fa2c63a5aefd4ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getaddrinfo&amp;nbsp;host&amp;nbsp;service&amp;nbsp;opts&lt;/code&gt; returns a list of &lt;a href=&quot;unixlabels#TYPEaddr_info&quot;&gt;&lt;code&gt;UnixLabels.addr_info&lt;/code&gt;&lt;/a&gt; records describing socket parameters and addresses suitable for communicating with the given host and service. The empty list is returned if the host or service names are unknown, or the constraints expressed in &lt;code&gt;opts&lt;/code&gt; cannot be satisfied.</source>
          <target state="translated">&lt;code&gt;getaddrinfo&amp;nbsp;host&amp;nbsp;service&amp;nbsp;opts&lt;/code&gt; 返回&lt;a href=&quot;unixlabels#TYPEaddr_info&quot;&gt; &lt;code&gt;UnixLabels.addr_info&lt;/code&gt; &lt;/a&gt;记录的列表，这些记录描述了适合与给定主机和服务进行通信的套接字参数和地址。如果主机名或服务名未知，或者无法满足 &lt;code&gt;opts&lt;/code&gt; 中表示的约束，则返回空列表。</target>
        </trans-unit>
        <trans-unit id="37fe0b893c98456efff1267eecc7ff353bfdccba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getnameinfo&amp;nbsp;addr&amp;nbsp;opts&lt;/code&gt; returns the host name and service name corresponding to the socket address &lt;code&gt;addr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getnameinfo&amp;nbsp;addr&amp;nbsp;opts&lt;/code&gt; 返回与套接字地址 &lt;code&gt;addr&lt;/code&gt; 相对应的主机名和服务名。</target>
        </trans-unit>
        <trans-unit id="60361de8e139193dc2d633e6fc527c2b94b7ff47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getnameinfo&amp;nbsp;addr&amp;nbsp;opts&lt;/code&gt; returns the host name and service name corresponding to the socket address &lt;code&gt;addr&lt;/code&gt;. &lt;code&gt;opts&lt;/code&gt; is a possibly empty list of options that governs how these names are obtained.</source>
          <target state="translated">&lt;code&gt;getnameinfo&amp;nbsp;addr&amp;nbsp;opts&lt;/code&gt; 返回与套接字地址 &lt;code&gt;addr&lt;/code&gt; 相对应的主机名和服务名。 &lt;code&gt;opts&lt;/code&gt; 是一个可能为空的选项列表，用于控制如何获取这些名称。</target>
        </trans-unit>
        <trans-unit id="5219d4ebc375ead75f7a4d4f22c9811496596eca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getnameinfo&amp;nbsp;addr&amp;nbsp;opts&lt;/code&gt; returns the host name and service name corresponding to the socket address &lt;code&gt;addr&lt;/code&gt;. &lt;code&gt;opts&lt;/code&gt; is a possibly empty list of options that governs how these names are obtained. Raise &lt;code&gt;Not_found&lt;/code&gt; if an error occurs.</source>
          <target state="translated">&lt;code&gt;getnameinfo&amp;nbsp;addr&amp;nbsp;opts&lt;/code&gt; 返回与套接字地址 &lt;code&gt;addr&lt;/code&gt; 相对应的主机名和服务名。 &lt;code&gt;opts&lt;/code&gt; 是一个可能为空的选项列表，用于控制如何获取这些名称。如果发生错误，请提高 &lt;code&gt;Not_found&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce911627bbf4bd620b85e587fb26187ba6546b67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;global_replace&amp;nbsp;regexp&amp;nbsp;templ&amp;nbsp;s&lt;/code&gt; returns a string identical to &lt;code&gt;s&lt;/code&gt;, except that all substrings of &lt;code&gt;s&lt;/code&gt; that match &lt;code&gt;regexp&lt;/code&gt; have been replaced by &lt;code&gt;templ&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;global_replace&amp;nbsp;regexp&amp;nbsp;templ&amp;nbsp;s&lt;/code&gt; 返回字符串相同的 &lt;code&gt;s&lt;/code&gt; ，不同的是所有子串 &lt;code&gt;s&lt;/code&gt; 该匹配 &lt;code&gt;regexp&lt;/code&gt; 已被替换 &lt;code&gt;templ&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b4087970cc591197c047d52a4aa9a7ad6c8a7588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;global_replace&amp;nbsp;regexp&amp;nbsp;templ&amp;nbsp;s&lt;/code&gt; returns a string identical to &lt;code&gt;s&lt;/code&gt;, except that all substrings of &lt;code&gt;s&lt;/code&gt; that match &lt;code&gt;regexp&lt;/code&gt; have been replaced by &lt;code&gt;templ&lt;/code&gt;. The replacement template &lt;code&gt;templ&lt;/code&gt; can contain &lt;code&gt;\1&lt;/code&gt;, &lt;code&gt;\2&lt;/code&gt;, etc; these sequences will be replaced by the text matched by the corresponding group in the regular expression. &lt;code&gt;\0&lt;/code&gt; stands for the text matched by the whole regular expression.</source>
          <target state="translated">&lt;code&gt;global_replace&amp;nbsp;regexp&amp;nbsp;templ&amp;nbsp;s&lt;/code&gt; 返回字符串相同的 &lt;code&gt;s&lt;/code&gt; ，不同的是所有子串 &lt;code&gt;s&lt;/code&gt; 该匹配 &lt;code&gt;regexp&lt;/code&gt; 已被替换 &lt;code&gt;templ&lt;/code&gt; 。替换模板 &lt;code&gt;templ&lt;/code&gt; 可以包含 &lt;code&gt;\1&lt;/code&gt; ， &lt;code&gt;\2&lt;/code&gt; 等。这些序列将由与正则表达式中相应组匹配的文本替换。 &lt;code&gt;\0&lt;/code&gt; 代表与整个正则表达式匹配的文本。</target>
        </trans-unit>
        <trans-unit id="dec9423113eb12b9b20b56d41adad9e0cf5f1a1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;global_substitute&amp;nbsp;regexp&amp;nbsp;subst&amp;nbsp;s&lt;/code&gt; returns a string identical to &lt;code&gt;s&lt;/code&gt;, except that all substrings of &lt;code&gt;s&lt;/code&gt; that match &lt;code&gt;regexp&lt;/code&gt; have been replaced by the result of function &lt;code&gt;subst&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;global_substitute&amp;nbsp;regexp&amp;nbsp;subst&amp;nbsp;s&lt;/code&gt; 返回与 &lt;code&gt;s&lt;/code&gt; 相同的字符串，但与 &lt;code&gt;regexp&lt;/code&gt; 匹配的 &lt;code&gt;s&lt;/code&gt; 的所有子字符串均已由 &lt;code&gt;subst&lt;/code&gt; 函数的结果替换。</target>
        </trans-unit>
        <trans-unit id="6c987fc87a6ad741dbf8a000e7df8d08e84e6c3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;global_substitute&amp;nbsp;regexp&amp;nbsp;subst&amp;nbsp;s&lt;/code&gt; returns a string identical to &lt;code&gt;s&lt;/code&gt;, except that all substrings of &lt;code&gt;s&lt;/code&gt; that match &lt;code&gt;regexp&lt;/code&gt; have been replaced by the result of function &lt;code&gt;subst&lt;/code&gt;. The function &lt;code&gt;subst&lt;/code&gt; is called once for each matching substring, and receives &lt;code&gt;s&lt;/code&gt; (the whole text) as argument.</source>
          <target state="translated">&lt;code&gt;global_substitute&amp;nbsp;regexp&amp;nbsp;subst&amp;nbsp;s&lt;/code&gt; 返回与 &lt;code&gt;s&lt;/code&gt; 相同的字符串，但与 &lt;code&gt;regexp&lt;/code&gt; 匹配的 &lt;code&gt;s&lt;/code&gt; 的所有子字符串均已由 &lt;code&gt;subst&lt;/code&gt; 函数的结果替换。对于每个匹配的子字符串，函数 &lt;code&gt;subst&lt;/code&gt; 都会被调用一次，并接收 &lt;code&gt;s&lt;/code&gt; （整个文本）作为参数。</target>
        </trans-unit>
        <trans-unit id="5cf6ea8263b07bb29ccd7e03085d229223bd7ba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;group_beginning&amp;nbsp;n&lt;/code&gt; returns the position of the first character of the substring that was matched by the &lt;code&gt;n&lt;/code&gt;th group of the regular expression that was matched by the last call to a matching or searching function (see &lt;a href=&quot;str#VALmatched_string&quot;&gt;&lt;code&gt;Str.matched_string&lt;/code&gt;&lt;/a&gt; for details).</source>
          <target state="translated">&lt;code&gt;group_beginning&amp;nbsp;n&lt;/code&gt; 返回与正则表达式的第 &lt;code&gt;n&lt;/code&gt; 组相匹配的子字符串的第一个字符的位置，该正则表达式的n次与对匹配或搜索函数的最后一次调用相匹配（有关详细信息，请参见&lt;a href=&quot;str#VALmatched_string&quot;&gt; &lt;code&gt;Str.matched_string&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d033216f9100fff6fa8a305022c6cdfa7d7dc348" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;group_end&amp;nbsp;n&lt;/code&gt; returns the position of the character following the last character of substring that was matched by the &lt;code&gt;n&lt;/code&gt;th group of the regular expression that was matched by the last call to a matching or searching function (see &lt;a href=&quot;str#VALmatched_string&quot;&gt;&lt;code&gt;Str.matched_string&lt;/code&gt;&lt;/a&gt; for details).</source>
          <target state="translated">&lt;code&gt;group_end&amp;nbsp;n&lt;/code&gt; 返回与正则表达式的第 &lt;code&gt;n&lt;/code&gt; 组匹配的子字符串的最后一个字符之后的字符位置，该正则表达式的最后一个对匹配或搜索函数的调用&lt;a href=&quot;str#VALmatched_string&quot;&gt; &lt;code&gt;Str.matched_string&lt;/code&gt; &lt;/a&gt;其匹配（有关详细信息，请参阅Str.matched_string）。</target>
        </trans-unit>
        <trans-unit id="1e68af14b6901f1f56ae15708304e4494a2f5226" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;guard&amp;nbsp;fn&lt;/code&gt; returns the event that, when synchronized, computes &lt;code&gt;fn()&lt;/code&gt; and behaves as the resulting event.</source>
          <target state="translated">&lt;code&gt;guard&amp;nbsp;fn&lt;/code&gt; 返回事件，该事件在同步时计算 &lt;code&gt;fn()&lt;/code&gt; 并表现为所得事件。</target>
        </trans-unit>
        <trans-unit id="f30f17d74695118db866f4914e9f9b3c7524e75d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;guard&amp;nbsp;fn&lt;/code&gt; returns the event that, when synchronized, computes &lt;code&gt;fn()&lt;/code&gt; and behaves as the resulting event. This enables computing events with side-effects at the time of the synchronization operation.</source>
          <target state="translated">&lt;code&gt;guard&amp;nbsp;fn&lt;/code&gt; 返回事件，该事件在同步时计算 &lt;code&gt;fn()&lt;/code&gt; 并表现为所得事件。这使得能够在同步操作时计算具有副作用的事件。</target>
        </trans-unit>
        <trans-unit id="5983d6ffbd5e28d5879d503789ebc037a1279af4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;h&lt;/code&gt; or &lt;code&gt;H&lt;/code&gt;: convert a floating-point argument to hexadecimal notation, in the style &lt;code&gt;0xh.hhhh&amp;nbsp;p+-dd&lt;/code&gt; (hexadecimal mantissa, exponent in decimal and denotes a power of 2).</source>
          <target state="translated">&lt;code&gt;h&lt;/code&gt; 或 &lt;code&gt;H&lt;/code&gt; ：将浮点参数转换为十六进制表示法，格式为 &lt;code&gt;0xh.hhhh&amp;nbsp;p+-dd&lt;/code&gt; （十六进制尾数，十进制指数，表示2的幂）。</target>
        </trans-unit>
        <trans-unit id="849d8ac3397474bb2caf100250f61eecbbeb4278" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;h&lt;/code&gt;, &lt;code&gt;H&lt;/code&gt;: reads an optionally signed floating-point number in hexadecimal notation.</source>
          <target state="translated">&lt;code&gt;h&lt;/code&gt; ， &lt;code&gt;H&lt;/code&gt; ：以十六进制表示法读取一个可选的带符号浮点数。</target>
        </trans-unit>
        <trans-unit id="4acd5344468885f7d3a4b6f698cde0b7d2655ba4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handle_unix_error&amp;nbsp;f&amp;nbsp;x&lt;/code&gt; applies &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt; and returns the result.</source>
          <target state="translated">&lt;code&gt;handle_unix_error&amp;nbsp;f&amp;nbsp;x&lt;/code&gt; 将 &lt;code&gt;f&lt;/code&gt; 应用于 &lt;code&gt;x&lt;/code&gt; 并返回结果。</target>
        </trans-unit>
        <trans-unit id="0feb13aaf51ff78f6686f7bd3ac6fa95de80bda2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handle_unix_error&amp;nbsp;f&amp;nbsp;x&lt;/code&gt; applies &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt; and returns the result. If the exception &lt;a href=&quot;unix#EXCEPTIONUnix_error&quot;&gt;&lt;code&gt;Unix.Unix_error&lt;/code&gt;&lt;/a&gt; is raised, it prints a message describing the error and exits with code 2.</source>
          <target state="translated">&lt;code&gt;handle_unix_error&amp;nbsp;f&amp;nbsp;x&lt;/code&gt; 将 &lt;code&gt;f&lt;/code&gt; 应用于 &lt;code&gt;x&lt;/code&gt; 并返回结果。如果引发异常&lt;a href=&quot;unix#EXCEPTIONUnix_error&quot;&gt; &lt;code&gt;Unix.Unix_error&lt;/code&gt; &lt;/a&gt;，它将打印一条描述该错误的消息，并以代码2退出。</target>
        </trans-unit>
        <trans-unit id="ecf4edea566404deb837d4f02396c01e7531e7b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handle_unix_error&amp;nbsp;f&amp;nbsp;x&lt;/code&gt; applies &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt; and returns the result. If the exception &lt;a href=&quot;unixlabels#EXCEPTIONUnix_error&quot;&gt;&lt;code&gt;UnixLabels.Unix_error&lt;/code&gt;&lt;/a&gt; is raised, it prints a message describing the error and exits with code 2.</source>
          <target state="translated">&lt;code&gt;handle_unix_error&amp;nbsp;f&amp;nbsp;x&lt;/code&gt; 将 &lt;code&gt;f&lt;/code&gt; 应用于 &lt;code&gt;x&lt;/code&gt; 并返回结果。如果引发了&lt;a href=&quot;unixlabels#EXCEPTIONUnix_error&quot;&gt; &lt;code&gt;UnixLabels.Unix_error&lt;/code&gt; &lt;/a&gt;异常，它将打印一条描述该错误的消息，并以代码2退出。</target>
        </trans-unit>
        <trans-unit id="e60d19bfe2375421df63fb4440f15aadcc5f935e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handle_unix_error&amp;nbsp;f&amp;nbsp;x&lt;/code&gt; applies &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt; and returns the result. If the exception &lt;code&gt;Unix_error&lt;/code&gt; is raised, it prints a message describing the error and exits with code 2.</source>
          <target state="translated">&lt;code&gt;handle_unix_error&amp;nbsp;f&amp;nbsp;x&lt;/code&gt; 将 &lt;code&gt;f&lt;/code&gt; 应用于 &lt;code&gt;x&lt;/code&gt; 并返回结果。如果引发了 &lt;code&gt;Unix_error&lt;/code&gt; 异常，它将输出一条描述该错误的消息，并以代码2退出。</target>
        </trans-unit>
        <trans-unit id="d01ca895733e515b00f6b27d8552ec573e03e96a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hash&amp;nbsp;u&lt;/code&gt; associates a non-negative integer to &lt;code&gt;u&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;hash&amp;nbsp;u&lt;/code&gt; 将非负整数与 &lt;code&gt;u&lt;/code&gt; 相关联。</target>
        </trans-unit>
        <trans-unit id="cfbcd05f153d2c9b66545bca4d81e417eec6f9f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;host&lt;/code&gt; is either a host name or the string representation of an IP address. &lt;code&gt;host&lt;/code&gt; can be given as the empty string; in this case, the ``any'' address or the ``loopback'' address are used, depending whether &lt;code&gt;opts&lt;/code&gt; contains &lt;code&gt;AI_PASSIVE&lt;/code&gt;. &lt;code&gt;service&lt;/code&gt; is either a service name or the string representation of a port number. &lt;code&gt;service&lt;/code&gt; can be given as the empty string; in this case, the port field of the returned addresses is set to 0. &lt;code&gt;opts&lt;/code&gt; is a possibly empty list of options that allows the caller to force a particular socket domain (e.g. IPv6 only or IPv4 only) or a particular socket type (e.g. TCP only or UDP only).</source>
          <target state="translated">&lt;code&gt;host&lt;/code&gt; 是主机名或IP地址的字符串表示形式。 &lt;code&gt;host&lt;/code&gt; 可以作为空字符串给出；在这种情况下，将使用``any''地址或``loopback''地址，具体取决于 &lt;code&gt;opts&lt;/code&gt; 是否包含 &lt;code&gt;AI_PASSIVE&lt;/code&gt; 。 &lt;code&gt;service&lt;/code&gt; 是服务名称或端口号的字符串表示形式。 &lt;code&gt;service&lt;/code&gt; 可以作为空字符串给出；在这种情况下，返回地址的端口字段设置为 &lt;code&gt;opts&lt;/code&gt; 是可能为空的选项列表，允许调用者强制使用特定的套接字域（例如，仅IPv6或仅IPv4）或特定的套接字类型（例如，TCP）仅限UDP或仅限UDP）。</target>
        </trans-unit>
        <trans-unit id="0fc57b618397b3451ea213cd6d093c09f7b40713" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hypot&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; returns &lt;code&gt;sqrt(x&amp;nbsp;*.&amp;nbsp;x&amp;nbsp;+&amp;nbsp;y&amp;nbsp;*.&amp;nbsp;y)&lt;/code&gt;, that is, the length of the hypotenuse of a right-angled triangle with sides of length &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, or, equivalently, the distance of the point &lt;code&gt;(x,y)&lt;/code&gt; to origin.</source>
          <target state="translated">&lt;code&gt;hypot&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 返回 &lt;code&gt;sqrt(x&amp;nbsp;*.&amp;nbsp;x&amp;nbsp;+&amp;nbsp;y&amp;nbsp;*.&amp;nbsp;y)&lt;/code&gt; 。x + y *。y），即边长为 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的直角三角形的斜边的长度，或者等效地，点的距离 &lt;code&gt;(x,y)&lt;/code&gt; 原产地。</target>
        </trans-unit>
        <trans-unit id="806beeacfd25103e54253136abb51640e5be922a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hypot&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; returns &lt;code&gt;sqrt(x&amp;nbsp;*.&amp;nbsp;x&amp;nbsp;+&amp;nbsp;y&amp;nbsp;*.&amp;nbsp;y)&lt;/code&gt;, that is, the length of the hypotenuse of a right-angled triangle with sides of length &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, or, equivalently, the distance of the point &lt;code&gt;(x,y)&lt;/code&gt; to origin. If one of &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt; is infinite, returns &lt;code&gt;infinity&lt;/code&gt; even if the other is &lt;code&gt;nan&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;hypot&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 返回 &lt;code&gt;sqrt(x&amp;nbsp;*.&amp;nbsp;x&amp;nbsp;+&amp;nbsp;y&amp;nbsp;*.&amp;nbsp;y)&lt;/code&gt; 。x + y *。y），即边长为 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的直角三角形的斜边的长度，或者等效地，点的距离 &lt;code&gt;(x,y)&lt;/code&gt; 原产地。如果 &lt;code&gt;x&lt;/code&gt; 或 &lt;code&gt;y&lt;/code&gt; 中的一个是无穷大，即使另一个是 &lt;code&gt;nan&lt;/code&gt; ，也将返回 &lt;code&gt;infinity&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="713d67d3f76d23e53aaf4012874309514adccc14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt;: reads an optionally signed integer (usual input conventions for decimal (&lt;code&gt;0-9&lt;/code&gt;+), hexadecimal (&lt;code&gt;0x[0-9a-f]+&lt;/code&gt; and &lt;code&gt;0X[0-9A-F]+&lt;/code&gt;), octal (&lt;code&gt;0o[0-7]+&lt;/code&gt;), and binary (&lt;code&gt;0b[0-1]+&lt;/code&gt;) notations are understood).</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; ：读取一个可选的带符号整数（十进制（ &lt;code&gt;0-9&lt;/code&gt; +），十六进制（ &lt;code&gt;0x[0-9a-f]+&lt;/code&gt; 和 &lt;code&gt;0X[0-9A-F]+&lt;/code&gt; ）的常规输入约定），八进制（ &lt;code&gt;0o[0-7]+&lt;/code&gt; 以及二进制（ &lt;code&gt;0b[0-1]+&lt;/code&gt; ）表示法。</target>
        </trans-unit>
        <trans-unit id="b017bdb74ca39cd4953959161436be7df6618065" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ic&lt;/code&gt; is a source of characters (typically a &lt;em&gt; formatted input channel&lt;/em&gt; with type &lt;a href=&quot;scanf.scanning#TYPEin_channel&quot;&gt;&lt;code&gt;Scanf.Scanning.in_channel&lt;/code&gt;&lt;/a&gt;),</source>
          <target state="translated">&lt;code&gt;ic&lt;/code&gt; 是字符来源（通常是类型为&lt;a href=&quot;scanf.scanning#TYPEin_channel&quot;&gt; &lt;code&gt;Scanf.Scanning.in_channel&lt;/code&gt; &lt;/a&gt;的&lt;em&gt;格式化输入通道&lt;/em&gt;），</target>
        </trans-unit>
        <trans-unit id="58d1f56aaa0ed62fdbbfccae0c15dd27b2412922" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; is the identity function.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; 是身份函数。</target>
        </trans-unit>
        <trans-unit id="cf270f1eb555b3f63e55589a9dccf912cff4ea07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; is the identity function. For any argument &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;id&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; 是身份函数。对于任何参数 &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;id&amp;nbsp;x&lt;/code&gt; 是 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a3f0c3540f2bc248daee5c2e434add48c7f8d6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;incr&amp;nbsp;r&lt;/code&gt; atomically increments the value of &lt;code&gt;r&lt;/code&gt; by &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;incr&amp;nbsp;r&lt;/code&gt; 原子递增的值 &lt;code&gt;r&lt;/code&gt; 由 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7777592ec50b070ef4588a92a6ac9c28e3c7b115" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; is &lt;a href=&quot;string#VALindex_from&quot;&gt;&lt;code&gt;String.index_from&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;nbsp;s&amp;nbsp;0&amp;nbsp;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;index&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; 是&lt;a href=&quot;string#VALindex_from&quot;&gt; &lt;code&gt;String.index_from&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;nbsp;s&amp;nbsp;0&amp;nbsp;c&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1464bde7640e7efd0ff578c95aa62e001a686798" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; returns the index of the first occurrence of byte &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;index&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; 返回字节的第一次出现的索引 &lt;code&gt;c&lt;/code&gt; 在 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0bcccc19b62d97686b37efe1d5495b27c1ae139" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index_from&amp;nbsp;_opts&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; returns the index of the first occurrence of byte &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; after position &lt;code&gt;i&lt;/code&gt; or &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;c&lt;/code&gt; does not occur in &lt;code&gt;s&lt;/code&gt; after position &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;index_from&amp;nbsp;_opts&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; 返回字节的第一次出现的索引 &lt;code&gt;c&lt;/code&gt; 在 &lt;code&gt;s&lt;/code&gt; 位置之后 &lt;code&gt;i&lt;/code&gt; 或 &lt;code&gt;None&lt;/code&gt; 如果 &lt;code&gt;c&lt;/code&gt; 不会发生在 &lt;code&gt;s&lt;/code&gt; 位置之后 &lt;code&gt;i&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10bcabbc093df0414322561d3fcd52e49d854544" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index_from&amp;nbsp;_opts&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; returns the index of the first occurrence of byte &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; after position &lt;code&gt;i&lt;/code&gt; or &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;c&lt;/code&gt; does not occur in &lt;code&gt;s&lt;/code&gt; after position &lt;code&gt;i&lt;/code&gt;. &lt;code&gt;Bytes.index_opt&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; is equivalent to &lt;code&gt;Bytes.index_from_opt&amp;nbsp;s&amp;nbsp;0&amp;nbsp;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;index_from&amp;nbsp;_opts&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; 返回字节的第一次出现的索引 &lt;code&gt;c&lt;/code&gt; 在 &lt;code&gt;s&lt;/code&gt; 位置之后 &lt;code&gt;i&lt;/code&gt; 或 &lt;code&gt;None&lt;/code&gt; 如果 &lt;code&gt;c&lt;/code&gt; 不会发生在 &lt;code&gt;s&lt;/code&gt; 位置之后 &lt;code&gt;i&lt;/code&gt; 。 &lt;code&gt;Bytes.index_opt&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; 等效于 &lt;code&gt;Bytes.index_from_opt&amp;nbsp;s&amp;nbsp;0&amp;nbsp;c&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ed57f53672b72a49ba2ab7f2f2eb05c215e6e15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index_from&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; is the index of the first occurrence of &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; after position &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;index_from&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; 是第一次出现的索引 &lt;code&gt;c&lt;/code&gt; 在 &lt;code&gt;s&lt;/code&gt; 位置之后 &lt;code&gt;i&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8fe1eb2fd415340c2f73447c483a283db070a3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index_from&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; returns the index of the first occurrence of byte &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; after position &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;index_from&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; 返回字节的第一次出现的索引 &lt;code&gt;c&lt;/code&gt; 在 &lt;code&gt;s&lt;/code&gt; 位置之后 &lt;code&gt;i&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c09cea16be30163d9e537876da41f9c7c998aaa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index_from&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; returns the index of the first occurrence of byte &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; after position &lt;code&gt;i&lt;/code&gt;. &lt;code&gt;Bytes.index&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; is equivalent to &lt;code&gt;Bytes.index_from&amp;nbsp;s&amp;nbsp;0&amp;nbsp;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;index_from&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; 返回字节的第一次出现的索引 &lt;code&gt;c&lt;/code&gt; 在 &lt;code&gt;s&lt;/code&gt; 位置之后 &lt;code&gt;i&lt;/code&gt; 。 &lt;code&gt;Bytes.index&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; 等效于 &lt;code&gt;Bytes.index_from&amp;nbsp;s&amp;nbsp;0&amp;nbsp;c&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="beec34f11c28e5250005e8ee98c557982eb507a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index_from&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; returns the index of the first occurrence of byte &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; after position &lt;code&gt;i&lt;/code&gt;. &lt;code&gt;index&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; is equivalent to &lt;code&gt;index_from&amp;nbsp;s&amp;nbsp;0&amp;nbsp;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;index_from&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; 返回字节的第一次出现的索引 &lt;code&gt;c&lt;/code&gt; 在 &lt;code&gt;s&lt;/code&gt; 位置之后 &lt;code&gt;i&lt;/code&gt; 。 &lt;code&gt;index&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; 等效于 &lt;code&gt;index_from&amp;nbsp;s&amp;nbsp;0&amp;nbsp;c&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56bc763b842ce2cf256b1cf944a4b02b608c68c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index_from_opt&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; is the index of the first occurrence of &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; after position &lt;code&gt;i&lt;/code&gt; (if any).</source>
          <target state="translated">&lt;code&gt;index_from_opt&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; 是第一次出现的索引 &lt;code&gt;c&lt;/code&gt; 在 &lt;code&gt;s&lt;/code&gt; 位置之后 &lt;code&gt;i&lt;/code&gt; （如果有的话）。</target>
        </trans-unit>
        <trans-unit id="d07cf17bc00efc94ec1cbc1974d585c7e6903ec6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index_from_opt&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; returns the index of the first occurrence of byte &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; after position &lt;code&gt;i&lt;/code&gt; or &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;c&lt;/code&gt; does not occur in &lt;code&gt;s&lt;/code&gt; after position &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;index_from_opt&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; 返回字节的第一次出现的索引 &lt;code&gt;c&lt;/code&gt; 在 &lt;code&gt;s&lt;/code&gt; 位置之后 &lt;code&gt;i&lt;/code&gt; 或 &lt;code&gt;None&lt;/code&gt; 如果 &lt;code&gt;c&lt;/code&gt; 不会发生在 &lt;code&gt;s&lt;/code&gt; 位置之后 &lt;code&gt;i&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="662f478b79ef25c2fd898de1053760299263f626" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index_from_opt&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; returns the index of the first occurrence of byte &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; after position &lt;code&gt;i&lt;/code&gt; or &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;c&lt;/code&gt; does not occur in &lt;code&gt;s&lt;/code&gt; after position &lt;code&gt;i&lt;/code&gt;. &lt;code&gt;Bytes.index_opt&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; is equivalent to &lt;code&gt;Bytes.index_from_opt&amp;nbsp;s&amp;nbsp;0&amp;nbsp;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;index_from_opt&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; 返回字节的第一次出现的索引 &lt;code&gt;c&lt;/code&gt; 在 &lt;code&gt;s&lt;/code&gt; 位置之后 &lt;code&gt;i&lt;/code&gt; 或 &lt;code&gt;None&lt;/code&gt; 如果 &lt;code&gt;c&lt;/code&gt; 不会发生在 &lt;code&gt;s&lt;/code&gt; 位置之后 &lt;code&gt;i&lt;/code&gt; 。 &lt;code&gt;Bytes.index_opt&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; 等效于 &lt;code&gt;Bytes.index_from_opt&amp;nbsp;s&amp;nbsp;0&amp;nbsp;c&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="31c752d5d59749e73b2835671e2751ae189b6286" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index_from_opt&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; returns the index of the first occurrence of byte &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; after position &lt;code&gt;i&lt;/code&gt; or &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;c&lt;/code&gt; does not occur in &lt;code&gt;s&lt;/code&gt; after position &lt;code&gt;i&lt;/code&gt;. &lt;code&gt;index_opt&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; is equivalent to &lt;code&gt;index_from_opt&amp;nbsp;s&amp;nbsp;0&amp;nbsp;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;index_from_opt&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; 返回字节的第一次出现的索引 &lt;code&gt;c&lt;/code&gt; 在 &lt;code&gt;s&lt;/code&gt; 位置之后 &lt;code&gt;i&lt;/code&gt; 或 &lt;code&gt;None&lt;/code&gt; 如果 &lt;code&gt;c&lt;/code&gt; 不会发生在 &lt;code&gt;s&lt;/code&gt; 位置之后 &lt;code&gt;i&lt;/code&gt; 。 &lt;code&gt;index_opt&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; 等效于 &lt;code&gt;index_from_opt&amp;nbsp;s&amp;nbsp;0&amp;nbsp;c&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4fa9007439e735d50f8f3e3a415c5da69ce2ac85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index_opt&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; is &lt;a href=&quot;string#VALindex_from_opt&quot;&gt;&lt;code&gt;String.index_from_opt&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;nbsp;s&amp;nbsp;0&amp;nbsp;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;index_opt&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; 是&lt;a href=&quot;string#VALindex_from_opt&quot;&gt; &lt;code&gt;String.index_from_opt&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;nbsp;s&amp;nbsp;0&amp;nbsp;c&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80d07916d89b39b80157a2aeb2520118f15dc8c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index_opt&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; returns the index of the first occurrence of byte &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; or &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;c&lt;/code&gt; does not occur in &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;index_opt&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; 返回字节的第一次出现的索引 &lt;code&gt;c&lt;/code&gt; 在 &lt;code&gt;s&lt;/code&gt; 或 &lt;code&gt;None&lt;/code&gt; 如果 &lt;code&gt;c&lt;/code&gt; 不发生 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="edbbe583419f581ef91da015d88f0be99cf7b66b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&amp;nbsp;len&amp;nbsp;f&lt;/code&gt; is &lt;code&gt;f&amp;nbsp;0;&amp;nbsp;f&amp;nbsp;1;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;(len-1)&lt;/code&gt;, evaluated left to right.</source>
          <target state="translated">&lt;code&gt;init&amp;nbsp;len&amp;nbsp;f&lt;/code&gt; 是 &lt;code&gt;f&amp;nbsp;0;&amp;nbsp;f&amp;nbsp;1;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;(len-1)&lt;/code&gt; ，从左到右评估。</target>
        </trans-unit>
        <trans-unit id="b3519ac186c1cc395f84eb80d44fd9d22448f864" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&amp;nbsp;n&amp;nbsp;f&lt;/code&gt; is a string of length &lt;code&gt;n&lt;/code&gt; with index &lt;code&gt;i&lt;/code&gt; holding the character &lt;code&gt;f&amp;nbsp;i&lt;/code&gt; (called in increasing index order).</source>
          <target state="translated">&lt;code&gt;init&amp;nbsp;n&amp;nbsp;f&lt;/code&gt; 是一个长度为 &lt;code&gt;n&lt;/code&gt; 的字符串，其中索引 &lt;code&gt;i&lt;/code&gt; 持有字符 &lt;code&gt;f&amp;nbsp;i&lt;/code&gt; （以递增索引顺序调用）。</target>
        </trans-unit>
        <trans-unit id="0c6a39187e826656eb74b2afe8e40d165a1affcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&amp;nbsp;n&amp;nbsp;f&lt;/code&gt; returns a fresh array of length &lt;code&gt;n&lt;/code&gt;, with element number &lt;code&gt;i&lt;/code&gt; initialized to the result of &lt;code&gt;f&amp;nbsp;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;init&amp;nbsp;n&amp;nbsp;f&lt;/code&gt; 返回一个长度为 &lt;code&gt;n&lt;/code&gt; 的新数组，元素编号 &lt;code&gt;i&lt;/code&gt; 初始化为 &lt;code&gt;f&amp;nbsp;i&lt;/code&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="a4859fce67e1e6dde243c303782d5a6e3e1d30bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&amp;nbsp;n&amp;nbsp;f&lt;/code&gt; returns a fresh array of length &lt;code&gt;n&lt;/code&gt;, with element number &lt;code&gt;i&lt;/code&gt; initialized to the result of &lt;code&gt;f&amp;nbsp;i&lt;/code&gt;. In other terms, &lt;code&gt;init&amp;nbsp;n&amp;nbsp;f&lt;/code&gt; tabulates the results of &lt;code&gt;f&lt;/code&gt; applied to the integers &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;n-1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;init&amp;nbsp;n&amp;nbsp;f&lt;/code&gt; 返回一个长度为 &lt;code&gt;n&lt;/code&gt; 的新数组，元素编号 &lt;code&gt;i&lt;/code&gt; 初始化为 &lt;code&gt;f&amp;nbsp;i&lt;/code&gt; 的结果。换句话说， &lt;code&gt;init&amp;nbsp;n&amp;nbsp;f&lt;/code&gt; 将应用于整数 &lt;code&gt;0&lt;/code&gt; 到 &lt;code&gt;n-1&lt;/code&gt; 的 &lt;code&gt;f&lt;/code&gt; 的结果制成表格。</target>
        </trans-unit>
        <trans-unit id="9a17ab8732f628e05bf105715524ea36c91eb512" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&amp;nbsp;n&amp;nbsp;f&lt;/code&gt; returns a fresh byte sequence of length &lt;code&gt;n&lt;/code&gt;, with character &lt;code&gt;i&lt;/code&gt; initialized to the result of &lt;code&gt;f&amp;nbsp;i&lt;/code&gt; (in increasing index order).</source>
          <target state="translated">&lt;code&gt;init&amp;nbsp;n&amp;nbsp;f&lt;/code&gt; 返回一个新的长度为 &lt;code&gt;n&lt;/code&gt; 的字节序列，字符 &lt;code&gt;i&lt;/code&gt; 初始化为 &lt;code&gt;f&amp;nbsp;i&lt;/code&gt; 的结果（以递增的索引顺序）。</target>
        </trans-unit>
        <trans-unit id="9c43f604d38a3f6ff805608f91b791580b2b881d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&amp;nbsp;n&amp;nbsp;f&lt;/code&gt; returns a fresh byte sequence of length &lt;code&gt;n&lt;/code&gt;, with character &lt;code&gt;i&lt;/code&gt; initialized to the result of &lt;code&gt;f&amp;nbsp;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;init&amp;nbsp;n&amp;nbsp;f&lt;/code&gt; 返回一个新的长度为 &lt;code&gt;n&lt;/code&gt; 的字节序列，字符 &lt;code&gt;i&lt;/code&gt; 初始化为 &lt;code&gt;f&amp;nbsp;i&lt;/code&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="34cabd2b2808a9c91847b23c05c423a94369ff19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&amp;nbsp;n&amp;nbsp;f&lt;/code&gt; returns a fresh floatarray of length &lt;code&gt;n&lt;/code&gt;, with element number &lt;code&gt;i&lt;/code&gt; initialized to the result of &lt;code&gt;f&amp;nbsp;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;init&amp;nbsp;n&amp;nbsp;f&lt;/code&gt; 返回长度为 &lt;code&gt;n&lt;/code&gt; 的新鲜float数组，元素编号 &lt;code&gt;i&lt;/code&gt; 初始化为 &lt;code&gt;f&amp;nbsp;i&lt;/code&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="3edf630052f5abac798430b0c0001bdf22f26fa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&amp;nbsp;n&amp;nbsp;f&lt;/code&gt; returns a fresh floatarray of length &lt;code&gt;n&lt;/code&gt;, with element number &lt;code&gt;i&lt;/code&gt; initialized to the result of &lt;code&gt;f&amp;nbsp;i&lt;/code&gt;. In other terms, &lt;code&gt;init&amp;nbsp;n&amp;nbsp;f&lt;/code&gt; tabulates the results of &lt;code&gt;f&lt;/code&gt; applied to the integers &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;n-1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;init&amp;nbsp;n&amp;nbsp;f&lt;/code&gt; 返回长度为 &lt;code&gt;n&lt;/code&gt; 的新鲜float数组，元素编号 &lt;code&gt;i&lt;/code&gt; 初始化为 &lt;code&gt;f&amp;nbsp;i&lt;/code&gt; 的结果。换句话说， &lt;code&gt;init&amp;nbsp;n&amp;nbsp;f&lt;/code&gt; 将应用于整数 &lt;code&gt;0&lt;/code&gt; 到 &lt;code&gt;n-1&lt;/code&gt; 的 &lt;code&gt;f&lt;/code&gt; 的结果制成表格。</target>
        </trans-unit>
        <trans-unit id="381158fcfcf1845b6152a5b0c586bdcd815250b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&amp;nbsp;n&amp;nbsp;f&lt;/code&gt; returns a string of length &lt;code&gt;n&lt;/code&gt;, with character &lt;code&gt;i&lt;/code&gt; initialized to the result of &lt;code&gt;f&amp;nbsp;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;init&amp;nbsp;n&amp;nbsp;f&lt;/code&gt; 返回一个长度为 &lt;code&gt;n&lt;/code&gt; 的字符串，其中字符 &lt;code&gt;i&lt;/code&gt; 初始化为 &lt;code&gt;f&amp;nbsp;i&lt;/code&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="5fc124473dbe06131b595f11f85c6cf8a5214202" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&amp;nbsp;n&amp;nbsp;~f&lt;/code&gt; is a string of length &lt;code&gt;n&lt;/code&gt; with index &lt;code&gt;i&lt;/code&gt; holding the character &lt;code&gt;f&amp;nbsp;i&lt;/code&gt; (called in increasing index order).</source>
          <target state="translated">&lt;code&gt;init&amp;nbsp;n&amp;nbsp;~f&lt;/code&gt; 是一个长度为 &lt;code&gt;n&lt;/code&gt; 的字符串，其中索引 &lt;code&gt;i&lt;/code&gt; 持有字符 &lt;code&gt;f&amp;nbsp;i&lt;/code&gt; （以递增索引顺序调用）。</target>
        </trans-unit>
        <trans-unit id="5a9d8a8b80225e71c2e9f84eb802c264ab26195b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&amp;nbsp;n&amp;nbsp;~f&lt;/code&gt; returns a fresh array of length &lt;code&gt;n&lt;/code&gt;, with element number &lt;code&gt;i&lt;/code&gt; initialized to the result of &lt;code&gt;f&amp;nbsp;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;init&amp;nbsp;n&amp;nbsp;~f&lt;/code&gt; 返回长度为 &lt;code&gt;n&lt;/code&gt; 的新数组，元素编号 &lt;code&gt;i&lt;/code&gt; 初始化为 &lt;code&gt;f&amp;nbsp;i&lt;/code&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="9a0fb329ffaabf30503a831c933e669602e8a87e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&amp;nbsp;n&amp;nbsp;~f&lt;/code&gt; returns a fresh array of length &lt;code&gt;n&lt;/code&gt;, with element number &lt;code&gt;i&lt;/code&gt; initialized to the result of &lt;code&gt;f&amp;nbsp;i&lt;/code&gt;. In other terms, &lt;code&gt;init&amp;nbsp;n&amp;nbsp;~f&lt;/code&gt; tabulates the results of &lt;code&gt;f&lt;/code&gt; applied to the integers &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;n-1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;init&amp;nbsp;n&amp;nbsp;~f&lt;/code&gt; 返回长度为 &lt;code&gt;n&lt;/code&gt; 的新数组，元素编号 &lt;code&gt;i&lt;/code&gt; 初始化为 &lt;code&gt;f&amp;nbsp;i&lt;/code&gt; 的结果。换句话说， &lt;code&gt;init&amp;nbsp;n&amp;nbsp;~f&lt;/code&gt; n〜f将应用于整数 &lt;code&gt;0&lt;/code&gt; 到 &lt;code&gt;n-1&lt;/code&gt; 的 &lt;code&gt;f&lt;/code&gt; 的结果制成表格。</target>
        </trans-unit>
        <trans-unit id="c17736482a8e9bd7ee029ba140c1fb1701211355" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&amp;nbsp;n&amp;nbsp;~f&lt;/code&gt; returns a fresh floatarray of length &lt;code&gt;n&lt;/code&gt;, with element number &lt;code&gt;i&lt;/code&gt; initialized to the result of &lt;code&gt;f&amp;nbsp;i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;init&amp;nbsp;n&amp;nbsp;~f&lt;/code&gt; n〜f返回长度为 &lt;code&gt;n&lt;/code&gt; 的新鲜float数组，元素编号 &lt;code&gt;i&lt;/code&gt; 初始化为 &lt;code&gt;f&amp;nbsp;i&lt;/code&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="df97715d3368ee28d9829e58ab28a12f773d1d67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&amp;nbsp;n&amp;nbsp;~f&lt;/code&gt; returns a fresh floatarray of length &lt;code&gt;n&lt;/code&gt;, with element number &lt;code&gt;i&lt;/code&gt; initialized to the result of &lt;code&gt;f&amp;nbsp;i&lt;/code&gt;. In other terms, &lt;code&gt;init&amp;nbsp;n&amp;nbsp;~f&lt;/code&gt; tabulates the results of &lt;code&gt;f&lt;/code&gt; applied to the integers &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;n-1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;init&amp;nbsp;n&amp;nbsp;~f&lt;/code&gt; n〜f返回长度为 &lt;code&gt;n&lt;/code&gt; 的新鲜float数组，元素编号 &lt;code&gt;i&lt;/code&gt; 初始化为 &lt;code&gt;f&amp;nbsp;i&lt;/code&gt; 的结果。换句话说， &lt;code&gt;init&amp;nbsp;n&amp;nbsp;~f&lt;/code&gt; n〜f将应用于整数 &lt;code&gt;0&lt;/code&gt; 到 &lt;code&gt;n-1&lt;/code&gt; 的 &lt;code&gt;f&lt;/code&gt; 的结果制成表格。</target>
        </trans-unit>
        <trans-unit id="9ddeb86c5c28d4dc288e2e50d1403b4a2d4f7f35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&amp;nbsp;~len&amp;nbsp;~f&lt;/code&gt; is &lt;code&gt;f&amp;nbsp;0;&amp;nbsp;f&amp;nbsp;1;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;(len-1)&lt;/code&gt;, evaluated left to right.</source>
          <target state="translated">&lt;code&gt;init&amp;nbsp;~len&amp;nbsp;~f&lt;/code&gt; 为 &lt;code&gt;f&amp;nbsp;0;&amp;nbsp;f&amp;nbsp;1;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;(len-1)&lt;/code&gt; ，从左到右评估。</target>
        </trans-unit>
        <trans-unit id="293c6e409a4d6f1e7712f4f9bdc71589fc4c2c74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initgroups&amp;nbsp;user&amp;nbsp;group&lt;/code&gt; initializes the group access list by reading the group database /etc/group and using all groups of which &lt;code&gt;user&lt;/code&gt; is a member.</source>
          <target state="translated">&lt;code&gt;initgroups&amp;nbsp;user&amp;nbsp;group&lt;/code&gt; 通过读取组数据库/ etc / group并使用该 &lt;code&gt;user&lt;/code&gt; 是其成员的所有组来初始化组访问列表。</target>
        </trans-unit>
        <trans-unit id="f67429a21db948b5d1af76c9608675249a163fbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initgroups&amp;nbsp;user&amp;nbsp;group&lt;/code&gt; initializes the group access list by reading the group database /etc/group and using all groups of which &lt;code&gt;user&lt;/code&gt; is a member. The additional group &lt;code&gt;group&lt;/code&gt; is also added to the list.</source>
          <target state="translated">&lt;code&gt;initgroups&amp;nbsp;user&amp;nbsp;group&lt;/code&gt; 通过读取组数据库/ etc / group并使用该 &lt;code&gt;user&lt;/code&gt; 是其成员的所有组来初始化组访问列表。附加的组 &lt;code&gt;group&lt;/code&gt; 也被添加到列表中。</target>
        </trans-unit>
        <trans-unit id="5ae753a6a72ea1f14750a47ce2cd336dc417d2b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initgroups&amp;nbsp;user&amp;nbsp;group&lt;/code&gt; initializes the group access list by reading the group database /etc/group and using all groups of which &lt;code&gt;user&lt;/code&gt; is a member. The additional group &lt;code&gt;group&lt;/code&gt; is also added to the list. On Windows: not implemented.</source>
          <target state="translated">&lt;code&gt;initgroups&amp;nbsp;user&amp;nbsp;group&lt;/code&gt; 通过读取组数据库/ etc / group并使用该 &lt;code&gt;user&lt;/code&gt; 是其成员的所有组来初始化组访问列表。附加的组 &lt;code&gt;group&lt;/code&gt; 也被添加到列表中。在Windows上：未实现。</target>
        </trans-unit>
        <trans-unit id="464b2e7d7f076795d249e38f29698b53a0f639f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input&amp;nbsp;ic&amp;nbsp;buf&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; reads up to &lt;code&gt;len&lt;/code&gt; characters from the given channel &lt;code&gt;ic&lt;/code&gt;, storing them in byte sequence &lt;code&gt;buf&lt;/code&gt;, starting at character number &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input&amp;nbsp;ic&amp;nbsp;buf&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; 从给定通道 &lt;code&gt;ic&lt;/code&gt; 读取最多 &lt;code&gt;len&lt;/code&gt; 个字符，并将它们存储在字节序列 &lt;code&gt;buf&lt;/code&gt; 中，从字符编号 &lt;code&gt;pos&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="6931d27f087368fe438bc099445bfe74041700e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input&amp;nbsp;ic&amp;nbsp;buf&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; reads up to &lt;code&gt;len&lt;/code&gt; characters from the given channel &lt;code&gt;ic&lt;/code&gt;, storing them in byte sequence &lt;code&gt;buf&lt;/code&gt;, starting at character number &lt;code&gt;pos&lt;/code&gt;. It returns the actual number of characters read, between 0 and &lt;code&gt;len&lt;/code&gt; (inclusive). A return value of 0 means that the end of file was reached. A return value between 0 and &lt;code&gt;len&lt;/code&gt; exclusive means that not all requested &lt;code&gt;len&lt;/code&gt; characters were read, either because no more characters were available at that time, or because the implementation found it convenient to do a partial read; &lt;code&gt;input&lt;/code&gt; must be called again to read the remaining characters, if desired. (See also &lt;a href=&quot;stdlib#VALreally_input&quot;&gt;&lt;code&gt;really_input&lt;/code&gt;&lt;/a&gt; for reading exactly &lt;code&gt;len&lt;/code&gt; characters.) Exception &lt;code&gt;Invalid_argument&amp;nbsp;&quot;input&quot;&lt;/code&gt; is raised if &lt;code&gt;pos&lt;/code&gt; and &lt;code&gt;len&lt;/code&gt; do not designate a valid range of &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input&amp;nbsp;ic&amp;nbsp;buf&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; 从给定通道 &lt;code&gt;ic&lt;/code&gt; 读取最多 &lt;code&gt;len&lt;/code&gt; 个字符，并将它们存储在字节序列 &lt;code&gt;buf&lt;/code&gt; 中，从字符编号 &lt;code&gt;pos&lt;/code&gt; 开始。它返回读取的实际字符数，介于0和 &lt;code&gt;len&lt;/code&gt; （含）之间。返回值0表示已到达文件末尾。返回值在0到 &lt;code&gt;len&lt;/code&gt; 互斥之间，这意味着并非所有请求的 &lt;code&gt;len&lt;/code&gt; 字符都被读取，这是因为当时没有更多的可用字符，或者是因为实现发现部分读取很方便。如果需要，必须再次调用 &lt;code&gt;input&lt;/code&gt; 以读取其余字符。 （另请参阅&lt;a href=&quot;stdlib#VALreally_input&quot;&gt; &lt;code&gt;really_input&lt;/code&gt; &lt;/a&gt;用于读取正好是 &lt;code&gt;len&lt;/code&gt; 个字符。）异常如果 &lt;code&gt;pos&lt;/code&gt; 和 &lt;code&gt;len&lt;/code&gt; 未指定 &lt;code&gt;buf&lt;/code&gt; 的有效范围，则会引发 &lt;code&gt;Invalid_argument&amp;nbsp;&quot;input&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eef9ea711ba1d23c5c428ede83a38a91ab0fa439" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_char&amp;nbsp;u&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;u&lt;/code&gt; is a latin1 OCaml character.</source>
          <target state="translated">&lt;code&gt;is_char&amp;nbsp;u&lt;/code&gt; 当且仅当 &lt;code&gt;u&lt;/code&gt; 是latin1 OCaml字符时，u才为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b8fbe04fa0869f293f3aba7a6683bdad3419297" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_char&amp;nbsp;u&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; iff &lt;code&gt;u&lt;/code&gt; is a latin1 OCaml character.</source>
          <target state="translated">&lt;code&gt;is_char&amp;nbsp;u&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; 当且仅当 &lt;code&gt;u&lt;/code&gt; 是latin1的OCaml的字符。</target>
        </trans-unit>
        <trans-unit id="dbf0a0eb1335c20f8feb13f8fa1543096a117d25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_error&amp;nbsp;r&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;r&lt;/code&gt; is &lt;code&gt;Error&amp;nbsp;_&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;is_error&amp;nbsp;r&lt;/code&gt; 当且仅当 &lt;code&gt;r&lt;/code&gt; 为 &lt;code&gt;Error&amp;nbsp;_&lt;/code&gt; r为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f78bd9b207406b18763058734f31d499044a5cc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_error&amp;nbsp;r&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; iff &lt;code&gt;r&lt;/code&gt; is &lt;code&gt;Error&amp;nbsp;_&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;is_error&amp;nbsp;r&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ,如果 &lt;code&gt;r&lt;/code&gt; 为 &lt;code&gt;Error&amp;nbsp;_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d976a86086bb2eec70f4fa7e17c078f521433c2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_finite&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;x&lt;/code&gt; is finite i.e., not infinite and not &lt;a href=&quot;float#VALnan&quot;&gt;&lt;code&gt;Float.nan&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;is_finite&amp;nbsp;x&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; 当且仅当 &lt;code&gt;x&lt;/code&gt; 是有限的，即，不是无限的，而不是&lt;a href=&quot;float#VALnan&quot;&gt; &lt;code&gt;Float.nan&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8092db015694c61b10906d014c1dfaa7070d56c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_finite&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; iff &lt;code&gt;x&lt;/code&gt; is finite i.e., not infinite and not &lt;a href=&quot;float#VALnan&quot;&gt;&lt;code&gt;Float.nan&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;is_finite&amp;nbsp;x&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; ,如果 &lt;code&gt;x&lt;/code&gt; 是有限的，即不是无限的，也不是&lt;a href=&quot;float#VALnan&quot;&gt; &lt;code&gt;Float.nan&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f28518790a5c0a2eb5ada9460da594bf568c4e44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_infinite&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;x&lt;/code&gt; is &lt;a href=&quot;float#VALinfinity&quot;&gt;&lt;code&gt;Float.infinity&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;float#VALneg_infinity&quot;&gt;&lt;code&gt;Float.neg_infinity&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;is_infinite&amp;nbsp;x&lt;/code&gt; 仅在 &lt;code&gt;x&lt;/code&gt; 为&lt;a href=&quot;float#VALinfinity&quot;&gt; &lt;code&gt;Float.infinity&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;float#VALneg_infinity&quot;&gt; &lt;code&gt;Float.neg_infinity&lt;/code&gt; 时&lt;/a&gt;为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8087ae28ada0df0b2679f678a080fc8082911bd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_infinite&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; iff &lt;code&gt;x&lt;/code&gt; is &lt;a href=&quot;float#VALinfinity&quot;&gt;&lt;code&gt;Float.infinity&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;float#VALneg_infinity&quot;&gt;&lt;code&gt;Float.neg_infinity&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;is_infinite&amp;nbsp;x&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; ,如果 &lt;code&gt;x&lt;/code&gt; 是&lt;a href=&quot;float#VALinfinity&quot;&gt; &lt;code&gt;Float.infinity&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;float#VALneg_infinity&quot;&gt; &lt;code&gt;Float.neg_infinity&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7e82cbb15b68ccf27694de641fff8030ff622fe0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_inline&amp;nbsp;slot&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; when &lt;code&gt;slot&lt;/code&gt; refers to a call that got inlined by the compiler, and &lt;code&gt;false&lt;/code&gt; when it comes from any other context.</source>
          <target state="translated">&lt;code&gt;is_inline&amp;nbsp;slot&lt;/code&gt; 当 &lt;code&gt;slot&lt;/code&gt; 引用由编译器内联的调用时，is_inline slot为 &lt;code&gt;true&lt;/code&gt; ，而当来自任何其他上下文的调用为false时，则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22f8fac9ed2d43519b99f5ab0c968d503cdc9370" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_integer&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;x&lt;/code&gt; is an integer.</source>
          <target state="translated">&lt;code&gt;is_integer&amp;nbsp;x&lt;/code&gt; 当且仅当 &lt;code&gt;x&lt;/code&gt; 为整数时，x为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed79a245c8ea4ec730de7a6a7305d0d3d44ecb32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_integer&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; iff &lt;code&gt;x&lt;/code&gt; is an integer.</source>
          <target state="translated">&lt;code&gt;is_integer&amp;nbsp;x&lt;/code&gt; 如果 &lt;code&gt;x&lt;/code&gt; 是整数，则is_integer x为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8ff5eaee390d2793b0e1e938f2f064612ecca112" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_left&amp;nbsp;(Left&amp;nbsp;v)&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;is_left&amp;nbsp;(Right&amp;nbsp;v)&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;is_left&amp;nbsp;(Left&amp;nbsp;v)&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ， &lt;code&gt;is_left&amp;nbsp;(Right&amp;nbsp;v)&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="00972bdbe3f550ed0f397b0be67f23881d2ae24b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_nan&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;x&lt;/code&gt; is not a number (see &lt;a href=&quot;float#VALnan&quot;&gt;&lt;code&gt;Float.nan&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;is_nan&amp;nbsp;x&lt;/code&gt; 仅当 &lt;code&gt;x&lt;/code&gt; 不是数字时才为 &lt;code&gt;true&lt;/code&gt; （请参见&lt;a href=&quot;float#VALnan&quot;&gt; &lt;code&gt;Float.nan&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="bc652e17e6b7f0bbd3517aa59c96f56b1fa8a5dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_nan&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; iff &lt;code&gt;x&lt;/code&gt; is not a number (see &lt;a href=&quot;float#VALnan&quot;&gt;&lt;code&gt;Float.nan&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;is_nan&amp;nbsp;x&lt;/code&gt; 如果 &lt;code&gt;x&lt;/code&gt; 不是数字，则is_nan x是 &lt;code&gt;true&lt;/code&gt; （请参阅&lt;a href=&quot;float#VALnan&quot;&gt; &lt;code&gt;Float.nan&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="eb487923fcf28dda038dddd41e4061d9edf6f132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_none&amp;nbsp;o&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;o&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;is_none&amp;nbsp;o&lt;/code&gt; 当且仅当 &lt;code&gt;o&lt;/code&gt; 为 &lt;code&gt;None&lt;/code&gt; 时,o为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b7fa2f9ec6790e81818e1910eb886aec418bba7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_none&amp;nbsp;o&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; iff &lt;code&gt;o&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;is_none&amp;nbsp;o&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ,如果 &lt;code&gt;o&lt;/code&gt; 为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="24be55da671c663a3b272cacc032cd016e16659b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_ok&amp;nbsp;r&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;r&lt;/code&gt; is &lt;code&gt;Ok&amp;nbsp;_&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;is_ok&amp;nbsp;r&lt;/code&gt; 当且仅当 &lt;code&gt;r&lt;/code&gt; 为 &lt;code&gt;Ok&amp;nbsp;_&lt;/code&gt; r为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7bdf7dc76886bd411f93eb5caaf0ad20e3d1f3b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_ok&amp;nbsp;r&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; iff &lt;code&gt;r&lt;/code&gt; is &lt;code&gt;Ok&amp;nbsp;_&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;is_ok&amp;nbsp;r&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 如果 &lt;code&gt;r&lt;/code&gt; 为 &lt;code&gt;Ok&amp;nbsp;_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2be7f36fce1cd4ecaad246b9fb627189142a57f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_raise&amp;nbsp;slot&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; when &lt;code&gt;slot&lt;/code&gt; refers to a raising point in the code, and &lt;code&gt;false&lt;/code&gt; when it comes from a simple function call.</source>
          <target state="translated">&lt;code&gt;is_raise&amp;nbsp;slot&lt;/code&gt; 当 &lt;code&gt;slot&lt;/code&gt; 指向代码中的上升点时，is_raise slot为 &lt;code&gt;true&lt;/code&gt; ，而当它来自简单的函数调用时，为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ebed18e7fb0e04f62c2935657c535f94074b681" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_right&amp;nbsp;(Left&amp;nbsp;v)&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;is_right&amp;nbsp;(Right&amp;nbsp;v)&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;is_right&amp;nbsp;(Left&amp;nbsp;v)&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; ， &lt;code&gt;is_right&amp;nbsp;(Right&amp;nbsp;v)&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58609c5431c300781beeb02524c2de693aa17790" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_some&amp;nbsp;o&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;o&lt;/code&gt; is &lt;code&gt;Some&amp;nbsp;o&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;is_some&amp;nbsp;o&lt;/code&gt; 当且仅当 &lt;code&gt;o&lt;/code&gt; 是 &lt;code&gt;Some&amp;nbsp;o&lt;/code&gt; is_some o是 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="745d6c33c459c3e06e8702ea093d80be3881b38c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_some&amp;nbsp;o&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; iff &lt;code&gt;o&lt;/code&gt; is &lt;code&gt;Some&amp;nbsp;o&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;is_some&amp;nbsp;o&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; ,如果 &lt;code&gt;o&lt;/code&gt; 是 &lt;code&gt;Some&amp;nbsp;o&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="579d76fc23fde306805eb7ea7a176ea63b39fafa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_val&amp;nbsp;x&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;x&lt;/code&gt; has already been forced and did not raise an exception.</source>
          <target state="translated">&lt;code&gt;is_val&amp;nbsp;x&lt;/code&gt; 如果 &lt;code&gt;x&lt;/code&gt; 已经被强制执行并且没有引发异常，则is_val x返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd7468b0df85a53ac9810f44464b6fd48904c724" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_valid&amp;nbsp;n&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;n&lt;/code&gt; is a Unicode scalar value (i.e.</source>
          <target state="translated">&lt;code&gt;is_valid&amp;nbsp;n&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; 当且仅当 &lt;code&gt;n&lt;/code&gt; 是一个Unicode标值（即</target>
        </trans-unit>
        <trans-unit id="b63027e12e69f18e4a25d9ebcc28fbee9d64d543" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_valid&amp;nbsp;n&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;n&lt;/code&gt; is a Unicode scalar value (i.e. in the ranges &lt;code&gt;0x0000&lt;/code&gt;...&lt;code&gt;0xD7FF&lt;/code&gt; or &lt;code&gt;0xE000&lt;/code&gt;...&lt;code&gt;0x10FFFF&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;is_valid&amp;nbsp;n&lt;/code&gt; 当且仅当 &lt;code&gt;n&lt;/code&gt; 是Unicode标量值（即，在 &lt;code&gt;0x0000&lt;/code&gt; ... &lt;code&gt;0xD7FF&lt;/code&gt; 或 &lt;code&gt;0xE000&lt;/code&gt; ... &lt;code&gt;0x10FFFF&lt;/code&gt; 范围内）时，n为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="de4f8d335e34ea085568266540375a8f92db93d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_valid&amp;nbsp;n&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; iff &lt;code&gt;n&lt;/code&gt; is a Unicode scalar value (i.e.</source>
          <target state="translated">&lt;code&gt;is_valid&amp;nbsp;n&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; ,如果 &lt;code&gt;n&lt;/code&gt; 是Unicode标量值（即</target>
        </trans-unit>
        <trans-unit id="bcd6a45955a78e55ebf0b3dc871b0bdfca3477ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_valid&amp;nbsp;n&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; iff &lt;code&gt;n&lt;/code&gt; is a Unicode scalar value (i.e. in the ranges &lt;code&gt;0x0000&lt;/code&gt;...&lt;code&gt;0xD7FF&lt;/code&gt; or &lt;code&gt;0xE000&lt;/code&gt;...&lt;code&gt;0x10FFFF&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;is_valid&amp;nbsp;n&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ,如果 &lt;code&gt;n&lt;/code&gt; 是Unicode标量值（即，在 &lt;code&gt;0x0000&lt;/code&gt; ... &lt;code&gt;0xD7FF&lt;/code&gt; 或 &lt;code&gt;0xE000&lt;/code&gt; ... &lt;code&gt;0x10FFFF&lt;/code&gt; 范围内）。</target>
        </trans-unit>
        <trans-unit id="d60fe9b320137372e8cbe2d524ad3639f45f79de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; in turn to &lt;code&gt;a1;&amp;nbsp;...;&amp;nbsp;an&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; 依次将函数 &lt;code&gt;f&lt;/code&gt; 应用于 &lt;code&gt;a1;&amp;nbsp;...;&amp;nbsp;an&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3234de1ca2764fe805f6b6c0e391945963c7bf6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; in turn to &lt;code&gt;a1;&amp;nbsp;...;&amp;nbsp;an&lt;/code&gt;. It is equivalent to &lt;code&gt;begin&amp;nbsp;f&amp;nbsp;a1;&amp;nbsp;f&amp;nbsp;a2;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;an;&amp;nbsp;()&amp;nbsp;end&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; 依次将函数 &lt;code&gt;f&lt;/code&gt; 应用于 &lt;code&gt;a1;&amp;nbsp;...;&amp;nbsp;an&lt;/code&gt; 。等效于 &lt;code&gt;begin&amp;nbsp;f&amp;nbsp;a1;&amp;nbsp;f&amp;nbsp;a2;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;an;&amp;nbsp;()&amp;nbsp;end&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c00eb13c1fab52b597292991042fb8c9ba63327" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;a&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; in turn to all the elements of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;a&lt;/code&gt; 应用功能 &lt;code&gt;f&lt;/code&gt; 又将所有的元素 &lt;code&gt;a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d94efe5ec568e86d18c540d274430265d54dfb57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;a&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; in turn to all the elements of &lt;code&gt;a&lt;/code&gt;. It is equivalent to &lt;code&gt;f&amp;nbsp;a.(0);&amp;nbsp;f&amp;nbsp;a.(1);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;a.(length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1);&amp;nbsp;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;a&lt;/code&gt; 应用功能 &lt;code&gt;f&lt;/code&gt; 又将所有的元素 &lt;code&gt;a&lt;/code&gt; 。等效于 &lt;code&gt;f&amp;nbsp;a.(0);&amp;nbsp;f&amp;nbsp;a.(1);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;a.(length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1);&amp;nbsp;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29739d2f18a0943db308cd60905ff45f94a97fac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;m&lt;/code&gt; applies &lt;code&gt;f&lt;/code&gt; to all bindings in map &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;m&lt;/code&gt; 将 &lt;code&gt;f&lt;/code&gt; 应用于map &lt;code&gt;m&lt;/code&gt; 中的所有绑定。</target>
        </trans-unit>
        <trans-unit id="376f681e9c3c97555ca36c005d35f1529f796498" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;m&lt;/code&gt; applies &lt;code&gt;f&lt;/code&gt; to all bindings in map &lt;code&gt;m&lt;/code&gt;. &lt;code&gt;f&lt;/code&gt; receives the key as first argument, and the associated value as second argument. The bindings are passed to &lt;code&gt;f&lt;/code&gt; in increasing order with respect to the ordering over the type of the keys.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;m&lt;/code&gt; 将 &lt;code&gt;f&lt;/code&gt; 应用于map &lt;code&gt;m&lt;/code&gt; 中的所有绑定。 &lt;code&gt;f&lt;/code&gt; 接收密钥作为第一个参数，并将关联的值作为第二个参数。相对于键类型的顺序，绑定以递增的顺序传递给 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="09427ed56777f4166860732f8c614300d83e3205" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;o&lt;/code&gt; is &lt;code&gt;f&amp;nbsp;v&lt;/code&gt; if &lt;code&gt;o&lt;/code&gt; is &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; and &lt;code&gt;()&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;o&lt;/code&gt; 如果 &lt;code&gt;o&lt;/code&gt; 为 &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; ，则it为 &lt;code&gt;f&amp;nbsp;v&lt;/code&gt; 否则为 &lt;code&gt;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67e615dc4fe456807a720a1e4db6216bc4670966" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;q&lt;/code&gt; applies &lt;code&gt;f&lt;/code&gt; in turn to all elements of &lt;code&gt;q&lt;/code&gt;, from the least recently entered to the most recently entered.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;q&lt;/code&gt; 适用 &lt;code&gt;f&lt;/code&gt; 依次的所有元素 &lt;code&gt;q&lt;/code&gt; ，从最近至少进入到最近输入。</target>
        </trans-unit>
        <trans-unit id="9668cd7c1d7827eb5f2283038fc4d6fb736fa2c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;q&lt;/code&gt; applies &lt;code&gt;f&lt;/code&gt; in turn to all elements of &lt;code&gt;q&lt;/code&gt;, from the least recently entered to the most recently entered. The queue itself is unchanged.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;q&lt;/code&gt; 适用 &lt;code&gt;f&lt;/code&gt; 依次的所有元素 &lt;code&gt;q&lt;/code&gt; ，从最近至少进入到最近输入。队列本身未更改。</target>
        </trans-unit>
        <trans-unit id="e625eea05905035ad9853eb251322c2c4dfaa30d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;r&lt;/code&gt; is &lt;code&gt;f&amp;nbsp;v&lt;/code&gt; if &lt;code&gt;r&lt;/code&gt; is &lt;code&gt;Ok&amp;nbsp;v&lt;/code&gt; and &lt;code&gt;()&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;r&lt;/code&gt; 如果 &lt;code&gt;r&lt;/code&gt; 为 &lt;code&gt;Ok&amp;nbsp;v&lt;/code&gt; ，则iter f r为 &lt;code&gt;f&amp;nbsp;v&lt;/code&gt; 否则为 &lt;code&gt;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d5b32fdaa60ad35547587e789471c1db2f97f08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; applies &lt;code&gt;f&lt;/code&gt; in turn to all elements of &lt;code&gt;s&lt;/code&gt;, from the element at the top of the stack to the element at the bottom of the stack.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; 适用 &lt;code&gt;f&lt;/code&gt; 依次的所有元素 &lt;code&gt;s&lt;/code&gt; 在堆叠到元件在堆栈的底部的顶部，从所述元件。</target>
        </trans-unit>
        <trans-unit id="ee6b1629af95892f2ea1765f7fb099086ff47ed4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; applies &lt;code&gt;f&lt;/code&gt; in turn to all elements of &lt;code&gt;s&lt;/code&gt;, from the element at the top of the stack to the element at the bottom of the stack. The stack itself is unchanged.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; 适用 &lt;code&gt;f&lt;/code&gt; 依次的所有元素 &lt;code&gt;s&lt;/code&gt; 在堆叠到元件在堆栈的底部的顶部，从所述元件。堆栈本身未更改。</target>
        </trans-unit>
        <trans-unit id="bc97a3a550836dec39614b6a5f59e7e4241ddfcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; applies &lt;code&gt;f&lt;/code&gt; in turn to all elements of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; 适用 &lt;code&gt;f&lt;/code&gt; 依次的所有元素 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6fa4de6b41d6cc3f340e81c57c997d8acdaaf829" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; applies &lt;code&gt;f&lt;/code&gt; in turn to all elements of &lt;code&gt;s&lt;/code&gt;. The elements of &lt;code&gt;s&lt;/code&gt; are presented to &lt;code&gt;f&lt;/code&gt; in increasing order with respect to the ordering over the type of the elements.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; 适用 &lt;code&gt;f&lt;/code&gt; 依次的所有元素 &lt;code&gt;s&lt;/code&gt; 。相对于元素类型的顺序，将 &lt;code&gt;s&lt;/code&gt; 的元素以递增的顺序显示给 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="27daa99b514169c49e191e7511f74c0e92e2f8cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; in turn to all the bytes of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; 适用功能 &lt;code&gt;f&lt;/code&gt; 又将所有的字节 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc29290f9c02f3c136b7ab4ac0c932581a96856c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; in turn to all the bytes of &lt;code&gt;s&lt;/code&gt;. It is equivalent to &lt;code&gt;f&amp;nbsp;(get&amp;nbsp;s&amp;nbsp;0);&amp;nbsp;f&amp;nbsp;(get&amp;nbsp;s&amp;nbsp;1);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;(get&amp;nbsp;s&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(length&amp;nbsp;s&amp;nbsp;-&amp;nbsp;1));&amp;nbsp;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; 适用功能 &lt;code&gt;f&lt;/code&gt; 又将所有的字节 &lt;code&gt;s&lt;/code&gt; 。等效于 &lt;code&gt;f&amp;nbsp;(get&amp;nbsp;s&amp;nbsp;0);&amp;nbsp;f&amp;nbsp;(get&amp;nbsp;s&amp;nbsp;1);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;(get&amp;nbsp;s&lt;br/&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(length&amp;nbsp;s&amp;nbsp;-&amp;nbsp;1));&amp;nbsp;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="92f3bfcd30bc87e372ef5f2449f6a8e023270732" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; in turn to all the characters of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; 适用功能 &lt;code&gt;f&lt;/code&gt; 又将所有的字符 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c026d21bdf38c0e2076023f1d4ed02e1b1e4720e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; in turn to all the characters of &lt;code&gt;s&lt;/code&gt;. It is equivalent to &lt;code&gt;f&amp;nbsp;s.[0];&amp;nbsp;f&amp;nbsp;s.[1];&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;s.[length&amp;nbsp;s&amp;nbsp;-&amp;nbsp;1];&amp;nbsp;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; 适用功能 &lt;code&gt;f&lt;/code&gt; 又将所有的字符 &lt;code&gt;s&lt;/code&gt; 。等效于 &lt;code&gt;f&amp;nbsp;s.[0];&amp;nbsp;f&amp;nbsp;s.[1];&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;s.[length&amp;nbsp;s&amp;nbsp;-&amp;nbsp;1];&amp;nbsp;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18c56458b9f5a441081fa37ec98776ee8c8d143f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;t&lt;/code&gt; calls &lt;code&gt;f&lt;/code&gt; on each element of &lt;code&gt;t&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;t&lt;/code&gt; 以未指定的顺序在 &lt;code&gt;t&lt;/code&gt; 的每个元素上调用 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="da2c274a34cc0c7b15c39e98e796335bf35c5fdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;t&lt;/code&gt; calls &lt;code&gt;f&lt;/code&gt; on each element of &lt;code&gt;t&lt;/code&gt;, in some unspecified order. It is not specified what happens if &lt;code&gt;f&lt;/code&gt; tries to change &lt;code&gt;t&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;f&amp;nbsp;t&lt;/code&gt; 以未指定的顺序在 &lt;code&gt;t&lt;/code&gt; 的每个元素上调用 &lt;code&gt;f&lt;/code&gt; 。没有指定如果 &lt;code&gt;f&lt;/code&gt; 试图改变 &lt;code&gt;t&lt;/code&gt; 本身会发生什么。</target>
        </trans-unit>
        <trans-unit id="630744465e3031623c232643e31473c1fb627e87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; in turn to &lt;code&gt;a1;&amp;nbsp;...;&amp;nbsp;an&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; 依次将函数 &lt;code&gt;f&lt;/code&gt; 应用于 &lt;code&gt;a1;&amp;nbsp;...;&amp;nbsp;an&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f89f6f9b6ee5746ea30df9c002c2be779d7bab5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; in turn to &lt;code&gt;a1;&amp;nbsp;...;&amp;nbsp;an&lt;/code&gt;. It is equivalent to &lt;code&gt;begin&amp;nbsp;f&amp;nbsp;a1;&amp;nbsp;f&amp;nbsp;a2;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;an;&amp;nbsp;()&amp;nbsp;end&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; 依次将函数 &lt;code&gt;f&lt;/code&gt; 应用于 &lt;code&gt;a1;&amp;nbsp;...;&amp;nbsp;an&lt;/code&gt; 。等效于 &lt;code&gt;begin&amp;nbsp;f&amp;nbsp;a1;&amp;nbsp;f&amp;nbsp;a2;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;an;&amp;nbsp;()&amp;nbsp;end&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61743b90156fe363d79f99cfe01341c8e662d8b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;a&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; in turn to all the elements of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;a&lt;/code&gt; 适用功能 &lt;code&gt;f&lt;/code&gt; 又将所有的元素 &lt;code&gt;a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d5f0f8470de7bea3de76fd51ffe1b51dc266071" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;a&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; in turn to all the elements of &lt;code&gt;a&lt;/code&gt;. It is equivalent to &lt;code&gt;f&amp;nbsp;a.(0);&amp;nbsp;f&amp;nbsp;a.(1);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;a.(length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1);&amp;nbsp;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;a&lt;/code&gt; 适用功能 &lt;code&gt;f&lt;/code&gt; 又将所有的元素 &lt;code&gt;a&lt;/code&gt; 。等效于 &lt;code&gt;f&amp;nbsp;a.(0);&amp;nbsp;f&amp;nbsp;a.(1);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;a.(length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1);&amp;nbsp;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f211af13678be4c84f37f0ecfeed7ac3bdf7cd21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;m&lt;/code&gt; applies &lt;code&gt;f&lt;/code&gt; to all bindings in map &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;m&lt;/code&gt; 将 &lt;code&gt;f&lt;/code&gt; 应用于映射 &lt;code&gt;m&lt;/code&gt; 中的所有绑定。</target>
        </trans-unit>
        <trans-unit id="bea4fe6e894f1ddbe59e7620d5b7adde6c6a6506" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;m&lt;/code&gt; applies &lt;code&gt;f&lt;/code&gt; to all bindings in map &lt;code&gt;m&lt;/code&gt;. &lt;code&gt;f&lt;/code&gt; receives the key as first argument, and the associated value as second argument. The bindings are passed to &lt;code&gt;f&lt;/code&gt; in increasing order with respect to the ordering over the type of the keys.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;m&lt;/code&gt; 将 &lt;code&gt;f&lt;/code&gt; 应用于映射 &lt;code&gt;m&lt;/code&gt; 中的所有绑定。 &lt;code&gt;f&lt;/code&gt; 接收密钥作为第一个参数，并将关联的值作为第二个参数。相对于键类型的顺序，绑定以递增的顺序传递给 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a2ccec86ba3469f4c8c0823019e87314cf3a533" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; applies &lt;code&gt;f&lt;/code&gt; in turn to all elements of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; 适用 &lt;code&gt;f&lt;/code&gt; 依次的所有元素 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f555e43391e7d8129e66902f3dc2eca64655d5b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; applies &lt;code&gt;f&lt;/code&gt; in turn to all elements of &lt;code&gt;s&lt;/code&gt;. The elements of &lt;code&gt;s&lt;/code&gt; are presented to &lt;code&gt;f&lt;/code&gt; in increasing order with respect to the ordering over the type of the elements.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; 适用 &lt;code&gt;f&lt;/code&gt; 依次的所有元素 &lt;code&gt;s&lt;/code&gt; 。相对于元素类型的顺序，将 &lt;code&gt;s&lt;/code&gt; 的元素以递增的顺序显示给 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="837bcc46506c0aa1182ad1c0b1cbe7168485d32f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; in turn to all the bytes of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; 适用功能 &lt;code&gt;f&lt;/code&gt; 又将所有的字节 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1fd3f42161ce349f9d8cd120953d4191acd06486" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; in turn to all the bytes of &lt;code&gt;s&lt;/code&gt;. It is equivalent to &lt;code&gt;f&amp;nbsp;(get&amp;nbsp;s&amp;nbsp;0);&amp;nbsp;f&amp;nbsp;(get&amp;nbsp;s&amp;nbsp;1);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;(get&amp;nbsp;s&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(length&amp;nbsp;s&amp;nbsp;-&amp;nbsp;1));&amp;nbsp;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; 适用功能 &lt;code&gt;f&lt;/code&gt; 又将所有的字节 &lt;code&gt;s&lt;/code&gt; 。等效于 &lt;code&gt;f&amp;nbsp;(get&amp;nbsp;s&amp;nbsp;0);&amp;nbsp;f&amp;nbsp;(get&amp;nbsp;s&amp;nbsp;1);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;(get&amp;nbsp;s&lt;br/&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(length&amp;nbsp;s&amp;nbsp;-&amp;nbsp;1));&amp;nbsp;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="321e9727714a7a0612e893182e2b6c36307e4b8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; in turn to all the characters of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; 适用功能 &lt;code&gt;f&lt;/code&gt; 依次的所有字符 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="980b70a224c7bf6c0096e17cca4d3e176283f71c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; in turn to all the characters of &lt;code&gt;s&lt;/code&gt;. It is equivalent to &lt;code&gt;f&amp;nbsp;s.[0];&amp;nbsp;f&amp;nbsp;s.[1];&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;s.[length&amp;nbsp;s&amp;nbsp;-&amp;nbsp;1];&amp;nbsp;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; 适用功能 &lt;code&gt;f&lt;/code&gt; 依次的所有字符 &lt;code&gt;s&lt;/code&gt; 。等效于 &lt;code&gt;f&amp;nbsp;s.[0];&amp;nbsp;f&amp;nbsp;s.[1];&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;s.[length&amp;nbsp;s&amp;nbsp;-&amp;nbsp;1];&amp;nbsp;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="948487b73f0a4b11ae0ca36790df6104dfca2ce3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&amp;nbsp;~left&amp;nbsp;~right&amp;nbsp;(Left&amp;nbsp;v)&lt;/code&gt; is &lt;code&gt;left&amp;nbsp;v&lt;/code&gt;, and &lt;code&gt;iter&amp;nbsp;~left&amp;nbsp;~right&amp;nbsp;(Right&amp;nbsp;v)&lt;/code&gt; is &lt;code&gt;right&amp;nbsp;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&amp;nbsp;~left&amp;nbsp;~right&amp;nbsp;(Left&amp;nbsp;v)&lt;/code&gt; 是 &lt;code&gt;left&amp;nbsp;v&lt;/code&gt; ， &lt;code&gt;iter&amp;nbsp;~left&amp;nbsp;~right&amp;nbsp;(Right&amp;nbsp;v)&lt;/code&gt; 是 &lt;code&gt;right&amp;nbsp;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="deb9c156634bde5c32e2b79f6947f9ec42005449" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter2&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&amp;nbsp;[b1;&amp;nbsp;...;&amp;nbsp;bn]&lt;/code&gt; calls in turn &lt;code&gt;f&amp;nbsp;a1&amp;nbsp;b1;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;an&amp;nbsp;bn&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter2&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&amp;nbsp;[b1;&amp;nbsp;...;&amp;nbsp;bn]&lt;/code&gt; 依次调用 &lt;code&gt;f&amp;nbsp;a1&amp;nbsp;b1;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;an&amp;nbsp;bn&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="996ab5f55691ddd64f037c43fef622b5070e2901" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter2&amp;nbsp;f&amp;nbsp;a&amp;nbsp;b&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; to all the elements of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter2&amp;nbsp;f&amp;nbsp;a&amp;nbsp;b&lt;/code&gt; 将函数 &lt;code&gt;f&lt;/code&gt; 应用于 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 的所有元素。</target>
        </trans-unit>
        <trans-unit id="bde1a53370ac1db54c5f66440ca3822301879e4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter2&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&amp;nbsp;[b1;&amp;nbsp;...;&amp;nbsp;bn]&lt;/code&gt; calls in turn &lt;code&gt;f&amp;nbsp;a1&amp;nbsp;b1;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;an&amp;nbsp;bn&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter2&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&amp;nbsp;[b1;&amp;nbsp;...;&amp;nbsp;bn]&lt;/code&gt; 依次调用 &lt;code&gt;f&amp;nbsp;a1&amp;nbsp;b1;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;an&amp;nbsp;bn&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aeb0faffd215403e5c4632c22b063fdb243ea161" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter2&amp;nbsp;~f&amp;nbsp;a&amp;nbsp;b&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; to all the elements of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter2&amp;nbsp;~f&amp;nbsp;a&amp;nbsp;b&lt;/code&gt; 将函数 &lt;code&gt;f&lt;/code&gt; 应用于 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 的所有元素。</target>
        </trans-unit>
        <trans-unit id="f86c4047c4263633c0a5ea7540fcbb3aa0ceb989" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter_error&amp;nbsp;f&amp;nbsp;r&lt;/code&gt; is &lt;code&gt;f&amp;nbsp;e&lt;/code&gt; if &lt;code&gt;r&lt;/code&gt; is &lt;code&gt;Error&amp;nbsp;e&lt;/code&gt; and &lt;code&gt;()&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;iter_error&amp;nbsp;f&amp;nbsp;r&lt;/code&gt; 如果 &lt;code&gt;r&lt;/code&gt; 为 &lt;code&gt;Error&amp;nbsp;e&lt;/code&gt; ，则iter_error f r为 &lt;code&gt;f&amp;nbsp;e&lt;/code&gt; 否则为 &lt;code&gt;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e1f10174850bfd1ed8e9c89bd2688faba61f816d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iteri&lt;/code&gt; is like &lt;a href=&quot;string#VALiter&quot;&gt;&lt;code&gt;String.iter&lt;/code&gt;&lt;/a&gt;, but the function is also given the corresponding character index.</source>
          <target state="translated">&lt;code&gt;iteri&lt;/code&gt; 类似于&lt;a href=&quot;string#VALiter&quot;&gt; &lt;code&gt;String.iter&lt;/code&gt; &lt;/a&gt;，但是该函数还被赋予了相应的字符索引。</target>
        </trans-unit>
        <trans-unit id="f58307c843c97441efcd1e8a01cb17353318c4c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iteri&lt;/code&gt; is like &lt;a href=&quot;stringlabels#VALiter&quot;&gt;&lt;code&gt;StringLabels.iter&lt;/code&gt;&lt;/a&gt;, but the function is also given the corresponding character index.</source>
          <target state="translated">&lt;code&gt;iteri&lt;/code&gt; 类似于&lt;a href=&quot;stringlabels#VALiter&quot;&gt; &lt;code&gt;StringLabels.iter&lt;/code&gt; &lt;/a&gt;，但是该函数还被赋予了相应的字符索引。</target>
        </trans-unit>
        <trans-unit id="eee64b1f22efe810c02fa2b9ab0556a200510080" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;join&amp;nbsp;oo&lt;/code&gt; is &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; if &lt;code&gt;oo&lt;/code&gt; is &lt;code&gt;Some&amp;nbsp;(Some&amp;nbsp;v)&lt;/code&gt; and &lt;code&gt;None&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;join&amp;nbsp;oo&lt;/code&gt; 如果 &lt;code&gt;oo&lt;/code&gt; 是 &lt;code&gt;Some&amp;nbsp;(Some&amp;nbsp;v)&lt;/code&gt; ，则加入oo为 &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; 否则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07e0052246409243e66c0840292b011436d430ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;join&amp;nbsp;rr&lt;/code&gt; is &lt;code&gt;r&lt;/code&gt; if &lt;code&gt;rr&lt;/code&gt; is &lt;code&gt;Ok&amp;nbsp;r&lt;/code&gt; and &lt;code&gt;rr&lt;/code&gt; if &lt;code&gt;rr&lt;/code&gt; is &lt;code&gt;Error&amp;nbsp;_&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;join&amp;nbsp;rr&lt;/code&gt; 是 &lt;code&gt;r&lt;/code&gt; ，如果 &lt;code&gt;rr&lt;/code&gt; 是 &lt;code&gt;Ok&amp;nbsp;r&lt;/code&gt; 和 &lt;code&gt;rr&lt;/code&gt; 如果 &lt;code&gt;rr&lt;/code&gt; 是 &lt;code&gt;Error&amp;nbsp;_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9fdfc8b65c1c9e3505032e1a8d9c12d3ab71290b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;join&amp;nbsp;th&lt;/code&gt; suspends the execution of the calling thread until the thread &lt;code&gt;th&lt;/code&gt; has terminated.</source>
          <target state="translated">&lt;code&gt;join&amp;nbsp;th&lt;/code&gt; 暂停调用线程的执行，直到线程 &lt;code&gt;th&lt;/code&gt; 终止为止。</target>
        </trans-unit>
        <trans-unit id="ca9dc45fb4a646b704fdb7294c5eed712cab293d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kill&amp;nbsp;pid&amp;nbsp;sig&lt;/code&gt; sends signal number &lt;code&gt;sig&lt;/code&gt; to the process with id &lt;code&gt;pid&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;kill&amp;nbsp;pid&amp;nbsp;sig&lt;/code&gt; 发送信号编号 &lt;code&gt;sig&lt;/code&gt; 与ID的过程 &lt;code&gt;pid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b355df903637928a0619d8ad7a0c20907e5423a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kill&amp;nbsp;pid&amp;nbsp;sig&lt;/code&gt; sends signal number &lt;code&gt;sig&lt;/code&gt; to the process with id &lt;code&gt;pid&lt;/code&gt;. On Windows, only the &lt;a href=&quot;sys#VALsigkill&quot;&gt;&lt;code&gt;Sys.sigkill&lt;/code&gt;&lt;/a&gt; signal is emulated.</source>
          <target state="translated">&lt;code&gt;kill&amp;nbsp;pid&amp;nbsp;sig&lt;/code&gt; 发送信号编号 &lt;code&gt;sig&lt;/code&gt; 与ID的过程 &lt;code&gt;pid&lt;/code&gt; 。在Windows上，仅模拟&lt;a href=&quot;sys#VALsigkill&quot;&gt; &lt;code&gt;Sys.sigkill&lt;/code&gt; &lt;/a&gt;信号。</target>
        </trans-unit>
        <trans-unit id="6e5444b123f1d80c6118568566ad2070a3c5b0e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kill&amp;nbsp;pid&amp;nbsp;signal&lt;/code&gt; sends signal number &lt;code&gt;signal&lt;/code&gt; to the process with id &lt;code&gt;pid&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;kill&amp;nbsp;pid&amp;nbsp;signal&lt;/code&gt; 发送信号编号 &lt;code&gt;signal&lt;/code&gt; 与ID的过程 &lt;code&gt;pid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="249342e46c1101d5e1aaeba7c00e95e00ee04c5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kill&amp;nbsp;~pid&amp;nbsp;~signal&lt;/code&gt; sends signal number &lt;code&gt;signal&lt;/code&gt; to the process with id &lt;code&gt;pid&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;kill&amp;nbsp;~pid&amp;nbsp;~signal&lt;/code&gt; 发送信号编号 &lt;code&gt;signal&lt;/code&gt; 与ID的过程 &lt;code&gt;pid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed76334deed0c1b0b34d6fef678c5491175853b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kind_size_in_bytes&amp;nbsp;k&lt;/code&gt; is the number of bytes used to store an element of type &lt;code&gt;k&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;kind_size_in_bytes&amp;nbsp;k&lt;/code&gt; 是用于存储类型为 &lt;code&gt;k&lt;/code&gt; 的元素的字节数。</target>
        </trans-unit>
        <trans-unit id="82d16b0751e0e1086fa9fcc4660dcbe0d3967ea5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;l&lt;/code&gt;: returns the number of lines read so far.</source>
          <target state="translated">&lt;code&gt;l&lt;/code&gt; ：返回到目前为止已读取的行数。</target>
        </trans-unit>
        <trans-unit id="b97469e531e2952b3686391d872698a9fab1c16c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;last_chars&amp;nbsp;s&amp;nbsp;n&lt;/code&gt; returns the last &lt;code&gt;n&lt;/code&gt; characters of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;last_chars&amp;nbsp;s&amp;nbsp;n&lt;/code&gt; 返回最后 &lt;code&gt;n&lt;/code&gt; 字符 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4731cb70feacc38628d39a65b980d710a7e38dc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ld&lt;/code&gt;, &lt;code&gt;li&lt;/code&gt;, &lt;code&gt;lu&lt;/code&gt;, &lt;code&gt;lx&lt;/code&gt;, &lt;code&gt;lX&lt;/code&gt;, &lt;code&gt;lo&lt;/code&gt;: convert an &lt;code&gt;int32&lt;/code&gt; argument to the format specified by the second letter (decimal, hexadecimal, etc).</source>
          <target state="translated">&lt;code&gt;ld&lt;/code&gt; ， &lt;code&gt;li&lt;/code&gt; ， &lt;code&gt;lu&lt;/code&gt; ， &lt;code&gt;lx&lt;/code&gt; ， &lt;code&gt;lX&lt;/code&gt; ， &lt;code&gt;lo&lt;/code&gt; ：将 &lt;code&gt;int32&lt;/code&gt; 参数转换为第二个字母（十进制，十六进制等）指定的格式。</target>
        </trans-unit>
        <trans-unit id="8ce2dd16c32dd6e5f4a9290e5aefcea6d5ff6ef7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ld&lt;/code&gt;, &lt;code&gt;li&lt;/code&gt;, &lt;code&gt;lu&lt;/code&gt;, &lt;code&gt;lx&lt;/code&gt;, &lt;code&gt;lX&lt;/code&gt;, &lt;code&gt;lo&lt;/code&gt;: reads an &lt;code&gt;int32&lt;/code&gt; argument to the format specified by the second letter for regular integers.</source>
          <target state="translated">&lt;code&gt;ld&lt;/code&gt; ， &lt;code&gt;li&lt;/code&gt; ， &lt;code&gt;lu&lt;/code&gt; ， &lt;code&gt;lx&lt;/code&gt; ， &lt;code&gt;lX&lt;/code&gt; ， &lt;code&gt;lo&lt;/code&gt; ：读取 &lt;code&gt;int32&lt;/code&gt; 参数，该参数为正则整数的第二个字母所指定的格式。</target>
        </trans-unit>
        <trans-unit id="ba6fd1ab340e18cd498a206635b6a75068271a0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ldexp&amp;nbsp;x&amp;nbsp;n&lt;/code&gt; returns &lt;code&gt;x&amp;nbsp;*.&amp;nbsp;2&amp;nbsp;**&amp;nbsp;n&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ldexp&amp;nbsp;x&amp;nbsp;n&lt;/code&gt; 返回 &lt;code&gt;x&amp;nbsp;*.&amp;nbsp;2&amp;nbsp;**&amp;nbsp;n&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f75f857268bc350f535f1b902183e1d9e319f33e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;left&amp;nbsp;v&lt;/code&gt; is &lt;code&gt;Left&amp;nbsp;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;left&amp;nbsp;v&lt;/code&gt; 是 &lt;code&gt;Left&amp;nbsp;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc6119f85af6475646c5265f822c23be5f13d7c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;length&amp;nbsp;s&lt;/code&gt; is the length (number of bytes/characters) of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;length&amp;nbsp;s&lt;/code&gt; 是的长度（字节/字符数） &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ff88e6d962908b815990f751109cc4977ee9a48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&amp;nbsp;sob&amp;nbsp;=&amp;nbsp;make_symbolic_output_buffer&amp;nbsp;()&lt;/code&gt;. Then define a symbolic formatter with:</source>
          <target state="translated">&lt;code&gt;let&amp;nbsp;sob&amp;nbsp;=&amp;nbsp;make_symbolic_output_buffer&amp;nbsp;()&lt;/code&gt; 。然后使用以下命令定义符号格式器：</target>
        </trans-unit>
        <trans-unit id="283c5b34b56e37e96f97e2743a28ab651e95655c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;limit&lt;/code&gt; : options with keyword and message longer than &lt;code&gt;limit&lt;/code&gt; will not be used to compute the alignment.</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; ：关键字和消息的长度超过 &lt;code&gt;limit&lt;/code&gt; 选项将不用于计算对齐方式。</target>
        </trans-unit>
        <trans-unit id="120fe3ee3f3077c20558003fe1f2e6f126dcd14c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;link&amp;nbsp;?follow&amp;nbsp;source&amp;nbsp;dest&lt;/code&gt; creates a hard link named &lt;code&gt;dest&lt;/code&gt; to the file named &lt;code&gt;source&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;link&amp;nbsp;?follow&amp;nbsp;source&amp;nbsp;dest&lt;/code&gt; 创建一个名为 &lt;code&gt;dest&lt;/code&gt; 的硬链接到名为 &lt;code&gt;source&lt;/code&gt; 的文件。</target>
        </trans-unit>
        <trans-unit id="87c49d0a54fdeda76ed852da4395bcc9da7f9e8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;link&amp;nbsp;?follow&amp;nbsp;src&amp;nbsp;dst&lt;/code&gt; creates a hard link named &lt;code&gt;dst&lt;/code&gt; to the file named &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;link&amp;nbsp;?follow&amp;nbsp;src&amp;nbsp;dst&lt;/code&gt; 创建一个名为 &lt;code&gt;dst&lt;/code&gt; 的硬链接到名为 &lt;code&gt;src&lt;/code&gt; 的文件。</target>
        </trans-unit>
        <trans-unit id="b07d99a3141b2d144a79f5c6445633d006d9c006" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;link&amp;nbsp;?follow&amp;nbsp;~src&amp;nbsp;~dst&lt;/code&gt; creates a hard link named &lt;code&gt;dst&lt;/code&gt; to the file named &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;link&amp;nbsp;?follow&amp;nbsp;~src&amp;nbsp;~dst&lt;/code&gt; 创建一个名为 &lt;code&gt;dst&lt;/code&gt; 的硬链接到名为 &lt;code&gt;src&lt;/code&gt; 的文件。</target>
        </trans-unit>
        <trans-unit id="b25d111a73d4ffceb1d96a2e8c1482e1c00db17c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;location&amp;nbsp;slot&lt;/code&gt; returns the location information of the slot, if available, and &lt;code&gt;None&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;location&amp;nbsp;slot&lt;/code&gt; 返回插槽的位置信息（如果有），否则返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a362b9f9a1f466b0b3d076fb2e60f36e9d1df7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lockf&amp;nbsp;fd&amp;nbsp;cmd&amp;nbsp;size&lt;/code&gt; puts a lock on a region of the file opened as &lt;code&gt;fd&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lockf&amp;nbsp;fd&amp;nbsp;cmd&amp;nbsp;size&lt;/code&gt; 将锁定在以 &lt;code&gt;fd&lt;/code&gt; 打开的文件区域。</target>
        </trans-unit>
        <trans-unit id="95e0f886829a0e8ac3d5508daed876a560f97ccb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lockf&amp;nbsp;fd&amp;nbsp;cmd&amp;nbsp;size&lt;/code&gt; puts a lock on a region of the file opened as &lt;code&gt;fd&lt;/code&gt;. The region starts at the current read/write position for &lt;code&gt;fd&lt;/code&gt; (as set by &lt;a href=&quot;unix#VALlseek&quot;&gt;&lt;code&gt;Unix.lseek&lt;/code&gt;&lt;/a&gt;), and extends &lt;code&gt;size&lt;/code&gt; bytes forward if &lt;code&gt;size&lt;/code&gt; is positive, &lt;code&gt;size&lt;/code&gt; bytes backwards if &lt;code&gt;size&lt;/code&gt; is negative, or to the end of the file if &lt;code&gt;size&lt;/code&gt; is zero. A write lock prevents any other process from acquiring a read or write lock on the region. A read lock prevents any other process from acquiring a write lock on the region, but lets other processes acquire read locks on it.</source>
          <target state="translated">&lt;code&gt;lockf&amp;nbsp;fd&amp;nbsp;cmd&amp;nbsp;size&lt;/code&gt; 将锁定在以 &lt;code&gt;fd&lt;/code&gt; 打开的文件区域。的区域开始于当前读/写位置 &lt;code&gt;fd&lt;/code&gt; （如由集&lt;a href=&quot;unix#VALlseek&quot;&gt; &lt;code&gt;Unix.lseek&lt;/code&gt; &lt;/a&gt;），并延伸 &lt;code&gt;size&lt;/code&gt; 字节向前如果 &lt;code&gt;size&lt;/code&gt; 为正， &lt;code&gt;size&lt;/code&gt; 向后字节如果 &lt;code&gt;size&lt;/code&gt; 如果是否定的，或该文件的末尾 &lt;code&gt;size&lt;/code&gt; 是零。写入锁定可防止任何其他进程获取对该区域的读取或写入锁定。读锁可以防止任何其他进程获取对该区域的写锁，但是可以让其他进程获取对该区域的读锁。</target>
        </trans-unit>
        <trans-unit id="88e8dfe6abbb388fed48a9dc755403b55d4aa5fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lockf&amp;nbsp;fd&amp;nbsp;cmd&amp;nbsp;size&lt;/code&gt; puts a lock on a region of the file opened as &lt;code&gt;fd&lt;/code&gt;. The region starts at the current read/write position for &lt;code&gt;fd&lt;/code&gt; (as set by &lt;a href=&quot;unixlabels#VALlseek&quot;&gt;&lt;code&gt;UnixLabels.lseek&lt;/code&gt;&lt;/a&gt;), and extends &lt;code&gt;size&lt;/code&gt; bytes forward if &lt;code&gt;size&lt;/code&gt; is positive, &lt;code&gt;size&lt;/code&gt; bytes backwards if &lt;code&gt;size&lt;/code&gt; is negative, or to the end of the file if &lt;code&gt;size&lt;/code&gt; is zero. A write lock prevents any other process from acquiring a read or write lock on the region. A read lock prevents any other process from acquiring a write lock on the region, but lets other processes acquire read locks on it.</source>
          <target state="translated">&lt;code&gt;lockf&amp;nbsp;fd&amp;nbsp;cmd&amp;nbsp;size&lt;/code&gt; 将锁定在以 &lt;code&gt;fd&lt;/code&gt; 打开的文件区域。的区域开始于当前读/写位置 &lt;code&gt;fd&lt;/code&gt; （如由集&lt;a href=&quot;unixlabels#VALlseek&quot;&gt; &lt;code&gt;UnixLabels.lseek&lt;/code&gt; &lt;/a&gt;），并延伸 &lt;code&gt;size&lt;/code&gt; 字节向前如果 &lt;code&gt;size&lt;/code&gt; 为正， &lt;code&gt;size&lt;/code&gt; 向后字节如果 &lt;code&gt;size&lt;/code&gt; 如果是否定的，或该文件的末尾 &lt;code&gt;size&lt;/code&gt; 是零。写入锁定可防止任何其他进程获取对该区域的读取或写入锁定。读锁可以防止任何其他进程获取对该区域的写锁，但是可以让其他进程获取对该区域的读锁。</target>
        </trans-unit>
        <trans-unit id="96139635211f4b6ea3d186112e1c00085ef27820" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lockf&amp;nbsp;fd&amp;nbsp;mode&amp;nbsp;len&lt;/code&gt; puts a lock on a region of the file opened as &lt;code&gt;fd&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lockf&amp;nbsp;fd&amp;nbsp;mode&amp;nbsp;len&lt;/code&gt; 锁定以 &lt;code&gt;fd&lt;/code&gt; 打开的文件区域。</target>
        </trans-unit>
        <trans-unit id="b1b5318d1415522f54b930be005357d9957fc62f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lockf&amp;nbsp;fd&amp;nbsp;mode&amp;nbsp;len&lt;/code&gt; puts a lock on a region of the file opened as &lt;code&gt;fd&lt;/code&gt;. The region starts at the current read/write position for &lt;code&gt;fd&lt;/code&gt; (as set by &lt;a href=&quot;unix#VALlseek&quot;&gt;&lt;code&gt;Unix.lseek&lt;/code&gt;&lt;/a&gt;), and extends &lt;code&gt;len&lt;/code&gt; bytes forward if &lt;code&gt;len&lt;/code&gt; is positive, &lt;code&gt;len&lt;/code&gt; bytes backwards if &lt;code&gt;len&lt;/code&gt; is negative, or to the end of the file if &lt;code&gt;len&lt;/code&gt; is zero. A write lock prevents any other process from acquiring a read or write lock on the region. A read lock prevents any other process from acquiring a write lock on the region, but lets other processes acquire read locks on it.</source>
          <target state="translated">&lt;code&gt;lockf&amp;nbsp;fd&amp;nbsp;mode&amp;nbsp;len&lt;/code&gt; 锁定以 &lt;code&gt;fd&lt;/code&gt; 打开的文件区域。的区域开始于当前读/写位置 &lt;code&gt;fd&lt;/code&gt; （如由集&lt;a href=&quot;unix#VALlseek&quot;&gt; &lt;code&gt;Unix.lseek&lt;/code&gt; &lt;/a&gt;），并延伸 &lt;code&gt;len&lt;/code&gt; 个字节向前如果 &lt;code&gt;len&lt;/code&gt; 为正， &lt;code&gt;len&lt;/code&gt; 字节向后如果 &lt;code&gt;len&lt;/code&gt; 为负，或该文件的结束时，如果 &lt;code&gt;len&lt;/code&gt; 是零。写入锁定可防止任何其他进程获取对该区域的读取或写入锁定。读锁可以防止任何其他进程获取对该区域的写锁，但是可以让其他进程获取对该区域的读锁。</target>
        </trans-unit>
        <trans-unit id="dde323ff31f4779bf332ab61aee6ec8df1bbfa96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lockf&amp;nbsp;fd&amp;nbsp;~mode&amp;nbsp;~len&lt;/code&gt; puts a lock on a region of the file opened as &lt;code&gt;fd&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lockf&amp;nbsp;fd&amp;nbsp;~mode&amp;nbsp;~len&lt;/code&gt; 将锁定在以 &lt;code&gt;fd&lt;/code&gt; 打开的文件区域中。</target>
        </trans-unit>
        <trans-unit id="19273f893b231fe1e418360b8a869e145a6135fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lockf&amp;nbsp;fd&amp;nbsp;~mode&amp;nbsp;~len&lt;/code&gt; puts a lock on a region of the file opened as &lt;code&gt;fd&lt;/code&gt;. The region starts at the current read/write position for &lt;code&gt;fd&lt;/code&gt; (as set by &lt;a href=&quot;unixlabels#VALlseek&quot;&gt;&lt;code&gt;UnixLabels.lseek&lt;/code&gt;&lt;/a&gt;), and extends &lt;code&gt;len&lt;/code&gt; bytes forward if &lt;code&gt;len&lt;/code&gt; is positive, &lt;code&gt;len&lt;/code&gt; bytes backwards if &lt;code&gt;len&lt;/code&gt; is negative, or to the end of the file if &lt;code&gt;len&lt;/code&gt; is zero. A write lock prevents any other process from acquiring a read or write lock on the region. A read lock prevents any other process from acquiring a write lock on the region, but lets other processes acquire read locks on it.</source>
          <target state="translated">&lt;code&gt;lockf&amp;nbsp;fd&amp;nbsp;~mode&amp;nbsp;~len&lt;/code&gt; 将锁定在以 &lt;code&gt;fd&lt;/code&gt; 打开的文件区域。的区域开始于当前读/写位置 &lt;code&gt;fd&lt;/code&gt; （如由集&lt;a href=&quot;unixlabels#VALlseek&quot;&gt; &lt;code&gt;UnixLabels.lseek&lt;/code&gt; &lt;/a&gt;），并延伸 &lt;code&gt;len&lt;/code&gt; 个字节向前如果 &lt;code&gt;len&lt;/code&gt; 为正， &lt;code&gt;len&lt;/code&gt; 字节向后如果 &lt;code&gt;len&lt;/code&gt; 为负，或该文件的结束时，如果 &lt;code&gt;len&lt;/code&gt; 是零。写入锁定可防止任何其他进程获取对该区域的读取或写入锁定。读锁可以防止任何其他进程获取对该区域的写锁，但是可以让其他进程获取对该区域的读锁。</target>
        </trans-unit>
        <trans-unit id="0cefcfe23848618f9e7cb65ba82d1833d285ef26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log1p&amp;nbsp;x&lt;/code&gt; computes &lt;code&gt;log(1.0&amp;nbsp;+.&amp;nbsp;x)&lt;/code&gt; (natural logarithm), giving numerically-accurate results even if &lt;code&gt;x&lt;/code&gt; is close to &lt;code&gt;0.0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;log1p&amp;nbsp;x&lt;/code&gt; 计算 &lt;code&gt;log(1.0&amp;nbsp;+.&amp;nbsp;x)&lt;/code&gt; 。x ）（自然对数），即使 &lt;code&gt;x&lt;/code&gt; 接近 &lt;code&gt;0.0&lt;/code&gt; ，也可以得到数值精确的结果。</target>
        </trans-unit>
        <trans-unit id="014315bc30bb547f7004ac4162bfdc9308652e80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logand&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; is the bitwise logical and of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;logand&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 是 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的按位逻辑和。</target>
        </trans-unit>
        <trans-unit id="9e542920b10e35b5a6ab1144fd894823a0a10435" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lognot&amp;nbsp;x&lt;/code&gt; is the bitwise logical negation of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lognot&amp;nbsp;x&lt;/code&gt; 是的按位的逻辑非 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2dfb264c3ee00eb8d074bbd31d92f1da05083597" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logor&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; is the bitwise logical or of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;logor&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 是 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的按位逻辑或。</target>
        </trans-unit>
        <trans-unit id="2714574d044678c3b3a26e1807a2c3a1db7f52e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logxor&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; is the bitwise logical exclusive or of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;logxor&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 是 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的按位逻辑异或。</target>
        </trans-unit>
        <trans-unit id="55ea25b4a694a38217d90e1a83c2c0f5f7df78f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lowercase_ascii&amp;nbsp;s&lt;/code&gt; is &lt;code&gt;s&lt;/code&gt; with all uppercase letters translated to lowercase, using the US-ASCII character set.</source>
          <target state="translated">&lt;code&gt;lowercase_ascii&amp;nbsp;s&lt;/code&gt; 是 &lt;code&gt;s&lt;/code&gt; ，使用US-ASCII字符集将所有大写字母转换为小写字母。</target>
        </trans-unit>
        <trans-unit id="f2ae78c234df9ba5547754c28c39ed2f274726d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;major_slice&amp;nbsp;n&lt;/code&gt; Do a minor collection and a slice of major collection.</source>
          <target state="translated">&lt;code&gt;major_slice&amp;nbsp;n&lt;/code&gt; 进行次要集合和主集合的一部分。</target>
        </trans-unit>
        <trans-unit id="df961c88ba7aad44c70bd0932b3e4a4f56f2d1fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;major_slice&amp;nbsp;n&lt;/code&gt; Do a minor collection and a slice of major collection. &lt;code&gt;n&lt;/code&gt; is the size of the slice: the GC will do enough work to free (on average) &lt;code&gt;n&lt;/code&gt; words of memory. If &lt;code&gt;n&lt;/code&gt; = 0, the GC will try to do enough work to ensure that the next automatic slice has no work to do. This function returns an unspecified integer (currently: 0).</source>
          <target state="translated">&lt;code&gt;major_slice&amp;nbsp;n&lt;/code&gt; 执行次要集合和主集合的一部分。 &lt;code&gt;n&lt;/code&gt; 是切片的大小：GC将做足够的工作以释放（平均） &lt;code&gt;n&lt;/code&gt; 个字的内存。如果 &lt;code&gt;n&lt;/code&gt; = 0，则GC将尝试做足够的工作，以确保下一个自动切片没有工作要做。该函数返回一个未指定的整数（当前：0）。</target>
        </trans-unit>
        <trans-unit id="1ede9fc6ff84abb21fd4b2c935ee0114514d3db9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make&amp;nbsp;b&lt;/code&gt; returns a new binary semaphore.</source>
          <target state="translated">&lt;code&gt;make&amp;nbsp;b&lt;/code&gt; 返回一个新的二进制信号量。</target>
        </trans-unit>
        <trans-unit id="f5499448c3f56511096ad8de22a2c7e27431a7b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make&amp;nbsp;b&lt;/code&gt; returns a new binary semaphore. If &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the initial value of the semaphore is 1, meaning &quot;available&quot;. If &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the initial value of the semaphore is 0, meaning &quot;unavailable&quot;.</source>
          <target state="translated">&lt;code&gt;make&amp;nbsp;b&lt;/code&gt; 返回一个新的二进制信号量。如果 &lt;code&gt;b&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，则信号量的初始值为1，表示&amp;ldquo;可用&amp;rdquo;。如果 &lt;code&gt;b&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; ，则信号量的初始值为0，表示&amp;ldquo;不可用&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="4232199ee655e4ac34d6f3542c264902fef6dba7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make&amp;nbsp;n&amp;nbsp;c&lt;/code&gt; is a string of length &lt;code&gt;n&lt;/code&gt; with each index holding the character &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;make&amp;nbsp;n&amp;nbsp;c&lt;/code&gt; 是一个长度为 &lt;code&gt;n&lt;/code&gt; 的字符串，每个索引都包含字符 &lt;code&gt;c&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a38e46d38366af8d1ea2e1c2f548af3068e5fe48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make&amp;nbsp;n&amp;nbsp;c&lt;/code&gt; returns a new byte sequence of length &lt;code&gt;n&lt;/code&gt;, filled with the byte &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;make&amp;nbsp;n&amp;nbsp;c&lt;/code&gt; 返回一个新的长度为 &lt;code&gt;n&lt;/code&gt; 的字节序列，并用字节 &lt;code&gt;c&lt;/code&gt; 填充。</target>
        </trans-unit>
        <trans-unit id="f62f9d8c629d8a8785c7c14e32f23c668a801099" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make&amp;nbsp;n&amp;nbsp;x&lt;/code&gt; returns a fresh array of length &lt;code&gt;n&lt;/code&gt;, initialized with &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;make&amp;nbsp;n&amp;nbsp;x&lt;/code&gt; 返回一个长度为 &lt;code&gt;n&lt;/code&gt; 的新鲜数组，并用 &lt;code&gt;x&lt;/code&gt; 初始化。</target>
        </trans-unit>
        <trans-unit id="dee3a35081331a59db14f998af486e29a010c151" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make&amp;nbsp;n&amp;nbsp;x&lt;/code&gt; returns a fresh array of length &lt;code&gt;n&lt;/code&gt;, initialized with &lt;code&gt;x&lt;/code&gt;. All the elements of this new array are initially physically equal to &lt;code&gt;x&lt;/code&gt; (in the sense of the &lt;code&gt;==&lt;/code&gt; predicate). Consequently, if &lt;code&gt;x&lt;/code&gt; is mutable, it is shared among all elements of the array, and modifying &lt;code&gt;x&lt;/code&gt; through one of the array entries will modify all other entries at the same time.</source>
          <target state="translated">&lt;code&gt;make&amp;nbsp;n&amp;nbsp;x&lt;/code&gt; 返回一个长度为 &lt;code&gt;n&lt;/code&gt; 的新鲜数组，并用 &lt;code&gt;x&lt;/code&gt; 初始化。这个新数组的所有元素最初在物理上都等于 &lt;code&gt;x&lt;/code&gt; （在 &lt;code&gt;==&lt;/code&gt; 谓词的意义上）。因此，如果 &lt;code&gt;x&lt;/code&gt; 是可变的，则它在数组的所有元素之间共享，并且通过数组条目之一修改 &lt;code&gt;x&lt;/code&gt; 将同时修改所有其他条目。</target>
        </trans-unit>
        <trans-unit id="2cf09cfb826b5c380dffc9d8d0ab6f0eb379cb69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make&amp;nbsp;n&amp;nbsp;x&lt;/code&gt; returns a fresh floatarray of length &lt;code&gt;n&lt;/code&gt;, initialized with &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;make&amp;nbsp;n&amp;nbsp;x&lt;/code&gt; 返回长度为 &lt;code&gt;n&lt;/code&gt; 的新鲜float数组，并用 &lt;code&gt;x&lt;/code&gt; 初始化。</target>
        </trans-unit>
        <trans-unit id="ff2328ce8f08dbf3a6843e15272d958fb45539df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make&amp;nbsp;n&lt;/code&gt; returns a new counting semaphore, with initial value &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;make&amp;nbsp;n&lt;/code&gt; 返回一个新的计数信号量，其初始值为 &lt;code&gt;n&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a2db794b4c646dfceacbff04d46ddda3aff9dc6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make&amp;nbsp;n&lt;/code&gt; returns a new counting semaphore, with initial value &lt;code&gt;n&lt;/code&gt;. The initial value &lt;code&gt;n&lt;/code&gt; must be nonnegative.</source>
          <target state="translated">&lt;code&gt;make&amp;nbsp;n&lt;/code&gt; 返回一个新的计数信号量，其初始值为 &lt;code&gt;n&lt;/code&gt; 。初始值 &lt;code&gt;n&lt;/code&gt; 必须为非负数。</target>
        </trans-unit>
        <trans-unit id="986c5c9ce93761a9af13afdc18fc998368a33bc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make_formatter&amp;nbsp;out&amp;nbsp;flush&lt;/code&gt; returns a new formatter that outputs with function &lt;code&gt;out&lt;/code&gt;, and flushes with function &lt;code&gt;flush&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;make_formatter&amp;nbsp;out&amp;nbsp;flush&lt;/code&gt; 返回一个新的格式化程序，该格式化程序输出带有功能 &lt;code&gt;out&lt;/code&gt; 的输出，并带有带有 &lt;code&gt;flush&lt;/code&gt; 功能的刷新。</target>
        </trans-unit>
        <trans-unit id="0a05358f9bf7e0244662b29ea818793556bc5dc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make_matrix&amp;nbsp;dimx&amp;nbsp;dimy&amp;nbsp;e&lt;/code&gt; returns a two-dimensional array (an array of arrays) with first dimension &lt;code&gt;dimx&lt;/code&gt; and second dimension &lt;code&gt;dimy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;make_matrix&amp;nbsp;dimx&amp;nbsp;dimy&amp;nbsp;e&lt;/code&gt; 返回具有第一维 &lt;code&gt;dimx&lt;/code&gt; 和第二维 &lt;code&gt;dimy&lt;/code&gt; 的二维数组（数组的数组）。</target>
        </trans-unit>
        <trans-unit id="1829ad7148260bbbf06d999e41176797fe460ef4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make_matrix&amp;nbsp;dimx&amp;nbsp;dimy&amp;nbsp;e&lt;/code&gt; returns a two-dimensional array (an array of arrays) with first dimension &lt;code&gt;dimx&lt;/code&gt; and second dimension &lt;code&gt;dimy&lt;/code&gt;. All the elements of this new matrix are initially physically equal to &lt;code&gt;e&lt;/code&gt;. The element (&lt;code&gt;x,y&lt;/code&gt;) of a matrix &lt;code&gt;m&lt;/code&gt; is accessed with the notation &lt;code&gt;m.(x).(y)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;make_matrix&amp;nbsp;dimx&amp;nbsp;dimy&amp;nbsp;e&lt;/code&gt; 返回具有第一维 &lt;code&gt;dimx&lt;/code&gt; 和第二维 &lt;code&gt;dimy&lt;/code&gt; 的二维数组（数组的数组）。这个新矩阵的所有元素最初在物理上都等于 &lt;code&gt;e&lt;/code&gt; 。可以使用符号 &lt;code&gt;m.(x).(y)&lt;/code&gt; 访问矩阵 &lt;code&gt;m&lt;/code&gt; 的元素（ &lt;code&gt;x,y&lt;/code&gt; y）。</target>
        </trans-unit>
        <trans-unit id="97d639369beb8ac6169f0368cd88e7b79ee1beba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make_matrix&amp;nbsp;~dimx&amp;nbsp;~dimy&amp;nbsp;e&lt;/code&gt; returns a two-dimensional array (an array of arrays) with first dimension &lt;code&gt;dimx&lt;/code&gt; and second dimension &lt;code&gt;dimy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;make_matrix&amp;nbsp;~dimx&amp;nbsp;~dimy&amp;nbsp;e&lt;/code&gt; 返回具有第一维 &lt;code&gt;dimx&lt;/code&gt; 和第二维 &lt;code&gt;dimy&lt;/code&gt; 的二维数组（数组的数组）。</target>
        </trans-unit>
        <trans-unit id="9926830934e8fc1d744938937617efd1816975eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make_matrix&amp;nbsp;~dimx&amp;nbsp;~dimy&amp;nbsp;e&lt;/code&gt; returns a two-dimensional array (an array of arrays) with first dimension &lt;code&gt;dimx&lt;/code&gt; and second dimension &lt;code&gt;dimy&lt;/code&gt;. All the elements of this new matrix are initially physically equal to &lt;code&gt;e&lt;/code&gt;. The element (&lt;code&gt;x,y&lt;/code&gt;) of a matrix &lt;code&gt;m&lt;/code&gt; is accessed with the notation &lt;code&gt;m.(x).(y)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;make_matrix&amp;nbsp;~dimx&amp;nbsp;~dimy&amp;nbsp;e&lt;/code&gt; 返回具有第一维 &lt;code&gt;dimx&lt;/code&gt; 和第二维 &lt;code&gt;dimy&lt;/code&gt; 的二维数组（数组的数组）。这个新矩阵的所有元素最初在物理上都等于 &lt;code&gt;e&lt;/code&gt; 。可以使用符号 &lt;code&gt;m.(x).(y)&lt;/code&gt; 访问矩阵 &lt;code&gt;m&lt;/code&gt; 的元素（ &lt;code&gt;x,y&lt;/code&gt; y）。</target>
        </trans-unit>
        <trans-unit id="6a67d8d6097767d05e0418fa89cca551efcde0ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make_symbolic_output_buffer&amp;nbsp;()&lt;/code&gt; returns a fresh buffer for symbolic output.</source>
          <target state="translated">&lt;code&gt;make_symbolic_output_buffer&amp;nbsp;()&lt;/code&gt; 返回用于符号输出的新缓冲区。</target>
        </trans-unit>
        <trans-unit id="f7fadcdb4df178f87bfbff3f6e777aba71b89aef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;a1,&amp;nbsp;...,&amp;nbsp;an&lt;/code&gt;, and builds the list &lt;code&gt;[f&amp;nbsp;a1;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;an]&lt;/code&gt; with the results returned by &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; 将函数 &lt;code&gt;f&lt;/code&gt; 应用于 &lt;code&gt;a1,&amp;nbsp;...,&amp;nbsp;an&lt;/code&gt; ，并构建列表 &lt;code&gt;[f&amp;nbsp;a1;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;an]&lt;/code&gt; 的结果由 &lt;code&gt;f&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="a568c39b5fff3a12a8cf9a87e75baea4b5fbf47a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;a1,&amp;nbsp;...,&amp;nbsp;an&lt;/code&gt;, and builds the list &lt;code&gt;[f&amp;nbsp;a1;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;an]&lt;/code&gt; with the results returned by &lt;code&gt;f&lt;/code&gt;. Not tail-recursive.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; 将函数 &lt;code&gt;f&lt;/code&gt; 应用于 &lt;code&gt;a1,&amp;nbsp;...,&amp;nbsp;an&lt;/code&gt; ，并构建列表 &lt;code&gt;[f&amp;nbsp;a1;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;an]&lt;/code&gt; 的结果由 &lt;code&gt;f&lt;/code&gt; 返回。不尾递归。</target>
        </trans-unit>
        <trans-unit id="db595104e72f9d8840b5b73731d41c918b872473" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;f&amp;nbsp;a&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; to all the elements of &lt;code&gt;a&lt;/code&gt;, and builds a floatarray with the results returned by &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;f&amp;nbsp;a&lt;/code&gt; 适用函数 &lt;code&gt;f&lt;/code&gt; 到的所有元素 &lt;code&gt;a&lt;/code&gt; ，并建立与由返回的结果的floatarray &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7c945e6bf8331edd99866d939dee9b665b81b2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;f&amp;nbsp;a&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; to all the elements of &lt;code&gt;a&lt;/code&gt;, and builds an array with the results returned by &lt;code&gt;f&lt;/code&gt;: &lt;code&gt;[|&amp;nbsp;f&amp;nbsp;a.(0);&amp;nbsp;f&amp;nbsp;a.(1);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;a.(length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;|]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;f&amp;nbsp;a&lt;/code&gt; 适用函数 &lt;code&gt;f&lt;/code&gt; 到的所有元素 &lt;code&gt;a&lt;/code&gt; ，并建立与由返回的结果的数组 &lt;code&gt;f&lt;/code&gt; ： &lt;code&gt;[|&amp;nbsp;f&amp;nbsp;a.(0);&amp;nbsp;f&amp;nbsp;a.(1);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;a.(length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;|]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b9908d24537c7639e18c68059611f83bdbdeb091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;f&amp;nbsp;m&lt;/code&gt; returns a map with same domain as &lt;code&gt;m&lt;/code&gt;, where the associated value &lt;code&gt;a&lt;/code&gt; of all bindings of &lt;code&gt;m&lt;/code&gt; has been replaced by the result of the application of &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;f&amp;nbsp;m&lt;/code&gt; 返回与相同的域的地图 &lt;code&gt;m&lt;/code&gt; ，其中所述相关联的值 &lt;code&gt;a&lt;/code&gt; 的所有绑定的 &lt;code&gt;m&lt;/code&gt; 已取代的应用程序的结果 &lt;code&gt;f&lt;/code&gt; 到 &lt;code&gt;a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="062a85a00a0a7936b72bebe12c1f155cb3aefe16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;f&amp;nbsp;m&lt;/code&gt; returns a map with same domain as &lt;code&gt;m&lt;/code&gt;, where the associated value &lt;code&gt;a&lt;/code&gt; of all bindings of &lt;code&gt;m&lt;/code&gt; has been replaced by the result of the application of &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;a&lt;/code&gt;. The bindings are passed to &lt;code&gt;f&lt;/code&gt; in increasing order with respect to the ordering over the type of the keys.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;f&amp;nbsp;m&lt;/code&gt; 返回与相同的域的地图 &lt;code&gt;m&lt;/code&gt; ，其中所述相关联的值 &lt;code&gt;a&lt;/code&gt; 的所有绑定的 &lt;code&gt;m&lt;/code&gt; 已取代的应用程序的结果 &lt;code&gt;f&lt;/code&gt; 到 &lt;code&gt;a&lt;/code&gt; 。相对于键类型的顺序，绑定以递增的顺序传递给 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="755acc58575ba9038cba753b05408d85664ce36b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;f&amp;nbsp;o&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;o&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt; and &lt;code&gt;Some&amp;nbsp;(f&amp;nbsp;v)&lt;/code&gt; is &lt;code&gt;o&lt;/code&gt; is &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;f&amp;nbsp;o&lt;/code&gt; 如果 &lt;code&gt;o&lt;/code&gt; 为 &lt;code&gt;None&lt;/code&gt; 并且 &lt;code&gt;Some&amp;nbsp;(f&amp;nbsp;v)&lt;/code&gt; 为 &lt;code&gt;o&lt;/code&gt; is &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; 则映射f o为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="247c15d7e70421db10a1599550ba37c17c62def0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;f&amp;nbsp;r&lt;/code&gt; is &lt;code&gt;Ok&amp;nbsp;(f&amp;nbsp;v)&lt;/code&gt; if &lt;code&gt;r&lt;/code&gt; is &lt;code&gt;Ok&amp;nbsp;v&lt;/code&gt; and &lt;code&gt;r&lt;/code&gt; if &lt;code&gt;r&lt;/code&gt; is &lt;code&gt;Error&amp;nbsp;_&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;f&amp;nbsp;r&lt;/code&gt; 是 &lt;code&gt;Ok&amp;nbsp;(f&amp;nbsp;v)&lt;/code&gt; 如果 &lt;code&gt;r&lt;/code&gt; 是 &lt;code&gt;Ok&amp;nbsp;v&lt;/code&gt; 和 &lt;code&gt;r&lt;/code&gt; 如果 &lt;code&gt;r&lt;/code&gt; 是 &lt;code&gt;Error&amp;nbsp;_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77cf38c126419d0cbd6444837cdfa44b0276dab8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; in turn to all the bytes of &lt;code&gt;s&lt;/code&gt; (in increasing index order) and stores the resulting bytes in a new sequence that is returned as the result.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; 适用函数 &lt;code&gt;f&lt;/code&gt; 依次所有的字节 &lt;code&gt;s&lt;/code&gt; 被作为结果返回（在索引顺序增加），并存储所产生的字节在一个新的序列。</target>
        </trans-unit>
        <trans-unit id="2ab900b3e17ca09a937150aa6229b6e33c9ac3df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; in turn to all the bytes of &lt;code&gt;s&lt;/code&gt; and stores the resulting bytes in a new sequence that is returned as the result.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; 适用函数 &lt;code&gt;f&lt;/code&gt; 依次的所有字节 &lt;code&gt;s&lt;/code&gt; 在一个新的序列，其作为结果返回，并存储所产生的字节。</target>
        </trans-unit>
        <trans-unit id="71c00c65479ef3f71a43c7c1043ba6d2848cf73f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; is the set whose elements are &lt;code&gt;f&amp;nbsp;a0&lt;/code&gt;,&lt;code&gt;f&amp;nbsp;a1&lt;/code&gt;...</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; 是元素为 &lt;code&gt;f&amp;nbsp;a0&lt;/code&gt; ， &lt;code&gt;f&amp;nbsp;a1&lt;/code&gt; ...的集合。</target>
        </trans-unit>
        <trans-unit id="b65b7f1d7abc6839fbaf8bde6b9e4e4225e93975" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; is the set whose elements are &lt;code&gt;f&amp;nbsp;a0&lt;/code&gt;,&lt;code&gt;f&amp;nbsp;a1&lt;/code&gt;... &lt;code&gt;f&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;aN&lt;/code&gt;, where &lt;code&gt;a0&lt;/code&gt;,&lt;code&gt;a1&lt;/code&gt;...&lt;code&gt;aN&lt;/code&gt; are the elements of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; 是一个集合，其元素为 &lt;code&gt;f&amp;nbsp;a0&lt;/code&gt; ， &lt;code&gt;f&amp;nbsp;a1&lt;/code&gt; ... &lt;code&gt;f&lt;br/&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;aN&lt;/code&gt; ，其中 &lt;code&gt;a0&lt;/code&gt; ， &lt;code&gt;a1&lt;/code&gt; ... &lt;code&gt;aN&lt;/code&gt; 是 &lt;code&gt;s&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="7080ebc4ad1dd4505cc53a6f7263902179fdeb0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; is the string resulting from applying &lt;code&gt;f&lt;/code&gt; to all the characters of &lt;code&gt;s&lt;/code&gt; in increasing order.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; 是将 &lt;code&gt;f&lt;/code&gt; 按递增顺序应用于 &lt;code&gt;s&lt;/code&gt; 的所有字符所产生的字符串。</target>
        </trans-unit>
        <trans-unit id="f67c3db7c9707bebc71f43ddc7fec64966471716" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;f&amp;nbsp;seq&lt;/code&gt; returns a new sequence whose elements are the elements of &lt;code&gt;seq&lt;/code&gt;, transformed by &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;f&amp;nbsp;seq&lt;/code&gt; 返回一个新序列，其元素是 &lt;code&gt;seq&lt;/code&gt; 的元素，由 &lt;code&gt;f&lt;/code&gt; 转换。</target>
        </trans-unit>
        <trans-unit id="055dcd33a441881f2dce194673ff493f74f32cd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;f&amp;nbsp;seq&lt;/code&gt; returns a new sequence whose elements are the elements of &lt;code&gt;seq&lt;/code&gt;, transformed by &lt;code&gt;f&lt;/code&gt;. This transformation is lazy, it only applies when the result is traversed.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;f&amp;nbsp;seq&lt;/code&gt; 返回一个新序列，其元素是 &lt;code&gt;seq&lt;/code&gt; 的元素，由 &lt;code&gt;f&lt;/code&gt; 转换。这种转换是惰性的，仅在遍历结果时才适用。</target>
        </trans-unit>
        <trans-unit id="90a367b9f183acb6f63df9c864f02e868b677210" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;a1,&amp;nbsp;...,&amp;nbsp;an&lt;/code&gt;, and builds the list &lt;code&gt;[f&amp;nbsp;a1;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;an]&lt;/code&gt; with the results returned by &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; 将函数 &lt;code&gt;f&lt;/code&gt; 应用于 &lt;code&gt;a1,&amp;nbsp;...,&amp;nbsp;an&lt;/code&gt; ，并构建列表 &lt;code&gt;[f&amp;nbsp;a1;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;an]&lt;/code&gt; 的结果由 &lt;code&gt;f&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="031d6fbb75499c303adb29c3b930106a93202d73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;a1,&amp;nbsp;...,&amp;nbsp;an&lt;/code&gt;, and builds the list &lt;code&gt;[f&amp;nbsp;a1;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;an]&lt;/code&gt; with the results returned by &lt;code&gt;f&lt;/code&gt;. Not tail-recursive.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&lt;/code&gt; 将函数 &lt;code&gt;f&lt;/code&gt; 应用于 &lt;code&gt;a1,&amp;nbsp;...,&amp;nbsp;an&lt;/code&gt; ，并构建列表 &lt;code&gt;[f&amp;nbsp;a1;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;an]&lt;/code&gt; 的结果由 &lt;code&gt;f&lt;/code&gt; 返回。不尾递归。</target>
        </trans-unit>
        <trans-unit id="1d89a18450d989c63533fab297fe53787a294594" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;~f&amp;nbsp;a&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; to all the elements of &lt;code&gt;a&lt;/code&gt;, and builds a floatarray with the results returned by &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;~f&amp;nbsp;a&lt;/code&gt; 适用函数 &lt;code&gt;f&lt;/code&gt; 到的所有元素 &lt;code&gt;a&lt;/code&gt; ，并建立与由返回的结果的floatarray &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac129703e48f96112420ef23baa81d716f8899f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;~f&amp;nbsp;a&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; to all the elements of &lt;code&gt;a&lt;/code&gt;, and builds an array with the results returned by &lt;code&gt;f&lt;/code&gt;: &lt;code&gt;[|&amp;nbsp;f&amp;nbsp;a.(0);&amp;nbsp;f&amp;nbsp;a.(1);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;a.(length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;|]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;~f&amp;nbsp;a&lt;/code&gt; 适用函数 &lt;code&gt;f&lt;/code&gt; 到的所有元素 &lt;code&gt;a&lt;/code&gt; ，并建立与由返回的结果的数组 &lt;code&gt;f&lt;/code&gt; ： &lt;code&gt;[|&amp;nbsp;f&amp;nbsp;a.(0);&amp;nbsp;f&amp;nbsp;a.(1);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;a.(length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;|]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91a3eadca0576598dc6935b99e4e53f08d94e15f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;~f&amp;nbsp;m&lt;/code&gt; returns a map with same domain as &lt;code&gt;m&lt;/code&gt;, where the associated value &lt;code&gt;a&lt;/code&gt; of all bindings of &lt;code&gt;m&lt;/code&gt; has been replaced by the result of the application of &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;~f&amp;nbsp;m&lt;/code&gt; 返回与相同的域的地图 &lt;code&gt;m&lt;/code&gt; ，其中，所述相关联的值 &lt;code&gt;a&lt;/code&gt; 的所有绑定的 &lt;code&gt;m&lt;/code&gt; 已取代的应用程序的结果 &lt;code&gt;f&lt;/code&gt; 到 &lt;code&gt;a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="38b81bfe54afe6bb7898c0664c10def973a35c09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;~f&amp;nbsp;m&lt;/code&gt; returns a map with same domain as &lt;code&gt;m&lt;/code&gt;, where the associated value &lt;code&gt;a&lt;/code&gt; of all bindings of &lt;code&gt;m&lt;/code&gt; has been replaced by the result of the application of &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;a&lt;/code&gt;. The bindings are passed to &lt;code&gt;f&lt;/code&gt; in increasing order with respect to the ordering over the type of the keys.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;~f&amp;nbsp;m&lt;/code&gt; 返回与相同的域的地图 &lt;code&gt;m&lt;/code&gt; ，其中，所述相关联的值 &lt;code&gt;a&lt;/code&gt; 的所有绑定的 &lt;code&gt;m&lt;/code&gt; 已取代的应用程序的结果 &lt;code&gt;f&lt;/code&gt; 到 &lt;code&gt;a&lt;/code&gt; 。相对于键类型的顺序，绑定以递增的顺序传递给 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="638c198a805e6c233b997bd5cdbb752585e5a70b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; in turn to all the bytes of &lt;code&gt;s&lt;/code&gt; (in increasing index order) and stores the resulting bytes in a new sequence that is returned as the result.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; 适用函数 &lt;code&gt;f&lt;/code&gt; 依次所有的字节 &lt;code&gt;s&lt;/code&gt; 被作为结果返回（按增加索引顺序），并存储所产生的字节在一个新的序列。</target>
        </trans-unit>
        <trans-unit id="5b6a44f449b43078a812052c8689bf9898cd2f8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; is the set whose elements are &lt;code&gt;f&amp;nbsp;a0&lt;/code&gt;,&lt;code&gt;f&amp;nbsp;a1&lt;/code&gt;...</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; 是元素为 &lt;code&gt;f&amp;nbsp;a0&lt;/code&gt; ， &lt;code&gt;f&amp;nbsp;a1&lt;/code&gt; 的集合...</target>
        </trans-unit>
        <trans-unit id="b4f1b22ce643003bfc83b92007948edc1d4d9b3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; is the set whose elements are &lt;code&gt;f&amp;nbsp;a0&lt;/code&gt;,&lt;code&gt;f&amp;nbsp;a1&lt;/code&gt;... &lt;code&gt;f&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;aN&lt;/code&gt;, where &lt;code&gt;a0&lt;/code&gt;,&lt;code&gt;a1&lt;/code&gt;...&lt;code&gt;aN&lt;/code&gt; are the elements of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; 是元素为 &lt;code&gt;f&amp;nbsp;a0&lt;/code&gt; ， &lt;code&gt;f&amp;nbsp;a1&lt;/code&gt; ... &lt;code&gt;f&lt;br/&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;aN&lt;/code&gt; 的集合，其中 &lt;code&gt;a0&lt;/code&gt; ， &lt;code&gt;a1&lt;/code&gt; ... &lt;code&gt;aN&lt;/code&gt; 是 &lt;code&gt;s&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="3aec633b62b7be35bc3030ab050ef61072cc40b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&amp;nbsp;~left&amp;nbsp;~right&amp;nbsp;(Left&amp;nbsp;v)&lt;/code&gt; is &lt;code&gt;Left&amp;nbsp;(left&amp;nbsp;v)&lt;/code&gt;, &lt;code&gt;map&amp;nbsp;~left&amp;nbsp;~right&amp;nbsp;(Right&amp;nbsp;v)&lt;/code&gt; is &lt;code&gt;Right&amp;nbsp;(right&amp;nbsp;v)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&amp;nbsp;~left&amp;nbsp;~right&amp;nbsp;(Left&amp;nbsp;v)&lt;/code&gt; 是 &lt;code&gt;Left&amp;nbsp;(left&amp;nbsp;v)&lt;/code&gt; ， &lt;code&gt;map&amp;nbsp;~left&amp;nbsp;~right&amp;nbsp;(Right&amp;nbsp;v)&lt;/code&gt; 是 &lt;code&gt;Right&amp;nbsp;(right&amp;nbsp;v)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1f89a122587f6b0254c32f959a2480b802441277" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map2&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&amp;nbsp;[b1;&amp;nbsp;...;&amp;nbsp;bn]&lt;/code&gt; is &lt;code&gt;[f&amp;nbsp;a1&amp;nbsp;b1;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;an&amp;nbsp;bn]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map2&amp;nbsp;f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&amp;nbsp;[b1;&amp;nbsp;...;&amp;nbsp;bn]&lt;/code&gt; 为 &lt;code&gt;[f&amp;nbsp;a1&amp;nbsp;b1;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;an&amp;nbsp;bn]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dcfdbc63f1c6c01e55d56f8f496b08b92d352a45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map2&amp;nbsp;f&amp;nbsp;a&amp;nbsp;b&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; to all the elements of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, and builds a floatarray with the results returned by &lt;code&gt;f&lt;/code&gt;: &lt;code&gt;[|&amp;nbsp;f&amp;nbsp;a.(0)&amp;nbsp;b.(0);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;a.(length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;b.(length&amp;nbsp;b&amp;nbsp;-&amp;nbsp;1)|]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map2&amp;nbsp;f&amp;nbsp;a&amp;nbsp;b&lt;/code&gt; 适用函数 &lt;code&gt;f&lt;/code&gt; 到的所有元素 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; ，并建立与由返回的结果的floatarray &lt;code&gt;f&lt;/code&gt; ： &lt;code&gt;[|&amp;nbsp;f&amp;nbsp;a.(0)&amp;nbsp;b.(0);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;a.(length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;b.(length&amp;nbsp;b&amp;nbsp;-&amp;nbsp;1)|]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="156b6e4e4b68c3d84770c472884b51a1884a9709" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map2&amp;nbsp;f&amp;nbsp;a&amp;nbsp;b&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; to all the elements of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, and builds an array with the results returned by &lt;code&gt;f&lt;/code&gt;: &lt;code&gt;[|&amp;nbsp;f&amp;nbsp;a.(0)&amp;nbsp;b.(0);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;a.(length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;b.(length&amp;nbsp;b&amp;nbsp;-&amp;nbsp;1)|]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map2&amp;nbsp;f&amp;nbsp;a&amp;nbsp;b&lt;/code&gt; 适用函数 &lt;code&gt;f&lt;/code&gt; 到的所有元素 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; ，并建立与由返回的结果的数组 &lt;code&gt;f&lt;/code&gt; ： &lt;code&gt;[|&amp;nbsp;f&amp;nbsp;a.(0)&amp;nbsp;b.(0);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;a.(length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;b.(length&amp;nbsp;b&amp;nbsp;-&amp;nbsp;1)|]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b10dad618794432a4a02827dfaee20b4a49253af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map2&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&amp;nbsp;[b1;&amp;nbsp;...;&amp;nbsp;bn]&lt;/code&gt; is &lt;code&gt;[f&amp;nbsp;a1&amp;nbsp;b1;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;an&amp;nbsp;bn]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map2&amp;nbsp;~f&amp;nbsp;[a1;&amp;nbsp;...;&amp;nbsp;an]&amp;nbsp;[b1;&amp;nbsp;...;&amp;nbsp;bn]&lt;/code&gt; 为 &lt;code&gt;[f&amp;nbsp;a1&amp;nbsp;b1;&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;an&amp;nbsp;bn]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2121f3870f97fe4aed8eac37551e2dc4d7c63639" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map2&amp;nbsp;~f&amp;nbsp;a&amp;nbsp;b&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; to all the elements of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, and builds a floatarray with the results returned by &lt;code&gt;f&lt;/code&gt;: &lt;code&gt;[|&amp;nbsp;f&amp;nbsp;a.(0)&amp;nbsp;b.(0);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;a.(length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;b.(length&amp;nbsp;b&amp;nbsp;-&amp;nbsp;1)|]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map2&amp;nbsp;~f&amp;nbsp;a&amp;nbsp;b&lt;/code&gt; 适用函数 &lt;code&gt;f&lt;/code&gt; 到的所有元素 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; ，并建立与由返回的结果的floatarray &lt;code&gt;f&lt;/code&gt; ： &lt;code&gt;[|&amp;nbsp;f&amp;nbsp;a.(0)&amp;nbsp;b.(0);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;a.(length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;b.(length&amp;nbsp;b&amp;nbsp;-&amp;nbsp;1)|]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df69398b40ac2646c4ae038b4db3e91add4ba8fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map2&amp;nbsp;~f&amp;nbsp;a&amp;nbsp;b&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; to all the elements of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, and builds an array with the results returned by &lt;code&gt;f&lt;/code&gt;: &lt;code&gt;[|&amp;nbsp;f&amp;nbsp;a.(0)&amp;nbsp;b.(0);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;a.(length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;b.(length&amp;nbsp;b&amp;nbsp;-&amp;nbsp;1)|]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map2&amp;nbsp;~f&amp;nbsp;a&amp;nbsp;b&lt;/code&gt; 将函数 &lt;code&gt;f&lt;/code&gt; 应用于 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 的所有元素，并使用 &lt;code&gt;f&lt;/code&gt; 返回的结果构建一个数组： &lt;code&gt;[|&amp;nbsp;f&amp;nbsp;a.(0)&amp;nbsp;b.(0);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;a.(length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;b.(length&amp;nbsp;b&amp;nbsp;-&amp;nbsp;1)|]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98b1564db6dc1528ac98e54d2e7f789588dfc90a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map_error&amp;nbsp;f&amp;nbsp;r&lt;/code&gt; is &lt;code&gt;Error&amp;nbsp;(f&amp;nbsp;e)&lt;/code&gt; if &lt;code&gt;r&lt;/code&gt; is &lt;code&gt;Error&amp;nbsp;e&lt;/code&gt; and &lt;code&gt;r&lt;/code&gt; if &lt;code&gt;r&lt;/code&gt; is &lt;code&gt;Ok&amp;nbsp;_&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map_error&amp;nbsp;f&amp;nbsp;r&lt;/code&gt; 是 &lt;code&gt;Error&amp;nbsp;(f&amp;nbsp;e)&lt;/code&gt; 如果 &lt;code&gt;r&lt;/code&gt; 是 &lt;code&gt;Error&amp;nbsp;e&lt;/code&gt; 和 &lt;code&gt;r&lt;/code&gt; 如果 &lt;code&gt;r&lt;/code&gt; 是 &lt;code&gt;Ok&amp;nbsp;_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2af35d6677cd0f0d63b0707f881a92962630cc78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map_from_array&amp;nbsp;f&amp;nbsp;a&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; to all the elements of &lt;code&gt;a&lt;/code&gt;, and builds a floatarray with the results returned by &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map_from_array&amp;nbsp;f&amp;nbsp;a&lt;/code&gt; 施加函数 &lt;code&gt;f&lt;/code&gt; 到的所有元素 &lt;code&gt;a&lt;/code&gt; ，并建立与由返回的结果的floatarray &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="702a2e5c7013a8cffee1ee7713847457cb512749" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map_from_array&amp;nbsp;~f&amp;nbsp;a&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; to all the elements of &lt;code&gt;a&lt;/code&gt;, and builds a floatarray with the results returned by &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map_from_array&amp;nbsp;~f&amp;nbsp;a&lt;/code&gt; 适用函数 &lt;code&gt;f&lt;/code&gt; 到的所有元素 &lt;code&gt;a&lt;/code&gt; ，并建立与由返回的结果的floatarray &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0c334ab86819d979715764b187d1fbea8b0ad268" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map_left&amp;nbsp;f&amp;nbsp;e&lt;/code&gt; is &lt;code&gt;Left&amp;nbsp;(f&amp;nbsp;v)&lt;/code&gt; if &lt;code&gt;e&lt;/code&gt; is &lt;code&gt;Left&amp;nbsp;v&lt;/code&gt; and &lt;code&gt;e&lt;/code&gt; if &lt;code&gt;e&lt;/code&gt; is &lt;code&gt;Right&amp;nbsp;_&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map_left&amp;nbsp;f&amp;nbsp;e&lt;/code&gt; 是 &lt;code&gt;Left&amp;nbsp;(f&amp;nbsp;v)&lt;/code&gt; 如果 &lt;code&gt;e&lt;/code&gt; 是 &lt;code&gt;Left&amp;nbsp;v&lt;/code&gt; 和 &lt;code&gt;e&lt;/code&gt; 如果 &lt;code&gt;e&lt;/code&gt; 是 &lt;code&gt;Right&amp;nbsp;_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff95bfffb6f73171e3be9827832505057f05d953" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map_right&amp;nbsp;f&amp;nbsp;e&lt;/code&gt; is &lt;code&gt;Right&amp;nbsp;(f&amp;nbsp;v)&lt;/code&gt; if &lt;code&gt;e&lt;/code&gt; is &lt;code&gt;Right&amp;nbsp;v&lt;/code&gt; and &lt;code&gt;e&lt;/code&gt; if &lt;code&gt;e&lt;/code&gt; is &lt;code&gt;Left&amp;nbsp;_&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map_right&amp;nbsp;f&amp;nbsp;e&lt;/code&gt; 是 &lt;code&gt;Right&amp;nbsp;(f&amp;nbsp;v)&lt;/code&gt; 如果 &lt;code&gt;e&lt;/code&gt; 是 &lt;code&gt;Right&amp;nbsp;v&lt;/code&gt; 和 &lt;code&gt;e&lt;/code&gt; 如果 &lt;code&gt;e&lt;/code&gt; 是 &lt;code&gt;Left&amp;nbsp;_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc95470f9ed04636875f39d7fd6fa60e79b16fc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map_to_array&amp;nbsp;f&amp;nbsp;a&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; to all the elements of &lt;code&gt;a&lt;/code&gt;, and builds an array with the results returned by &lt;code&gt;f&lt;/code&gt;: &lt;code&gt;[|&amp;nbsp;f&amp;nbsp;a.(0);&amp;nbsp;f&amp;nbsp;a.(1);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;a.(length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;|]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map_to_array&amp;nbsp;f&amp;nbsp;a&lt;/code&gt; 施加函数 &lt;code&gt;f&lt;/code&gt; 到的所有元素 &lt;code&gt;a&lt;/code&gt; ，并建立与由返回的结果的数组 &lt;code&gt;f&lt;/code&gt; ： &lt;code&gt;[|&amp;nbsp;f&amp;nbsp;a.(0);&amp;nbsp;f&amp;nbsp;a.(1);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;a.(length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;|]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f28f696f6c84736a61580fa89451f8989d4bcd18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map_to_array&amp;nbsp;~f&amp;nbsp;a&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; to all the elements of &lt;code&gt;a&lt;/code&gt;, and builds an array with the results returned by &lt;code&gt;f&lt;/code&gt;: &lt;code&gt;[|&amp;nbsp;f&amp;nbsp;a.(0);&amp;nbsp;f&amp;nbsp;a.(1);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;a.(length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;|]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map_to_array&amp;nbsp;~f&amp;nbsp;a&lt;/code&gt; 适用函数 &lt;code&gt;f&lt;/code&gt; 到的所有元素 &lt;code&gt;a&lt;/code&gt; ，并建立与由返回的结果的数组 &lt;code&gt;f&lt;/code&gt; ： &lt;code&gt;[|&amp;nbsp;f&amp;nbsp;a.(0);&amp;nbsp;f&amp;nbsp;a.(1);&amp;nbsp;...;&amp;nbsp;f&amp;nbsp;a.(length&amp;nbsp;a&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;|]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="791912e23c6a11726d35c25f7654d205b699b946" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mapi&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; calls &lt;code&gt;f&lt;/code&gt; with each character of &lt;code&gt;s&lt;/code&gt; and its index (in increasing index order) and stores the resulting bytes in a new sequence that is returned as the result.</source>
          <target state="translated">&lt;code&gt;mapi&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; 呼叫 &lt;code&gt;f&lt;/code&gt; 与每个字符 &lt;code&gt;s&lt;/code&gt; 和它的索引（索引顺序增加），并存储在一个新的序列所产生的字节被作为结果返回。</target>
        </trans-unit>
        <trans-unit id="5b52499180da8103d7d504f55a8de026e0fb2465" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mapi&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; is like &lt;a href=&quot;string#VALmap&quot;&gt;&lt;code&gt;String.map&lt;/code&gt;&lt;/a&gt; but the index of the character is also passed to &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mapi&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; 类似于&lt;a href=&quot;string#VALmap&quot;&gt; &lt;code&gt;String.map&lt;/code&gt; ,&lt;/a&gt;但字符的索引也传递给 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5f79b008d4e77e79a5380a01bd1b23be5414827" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mapi&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; calls &lt;code&gt;f&lt;/code&gt; with each character of &lt;code&gt;s&lt;/code&gt; and its index (in increasing index order) and stores the resulting bytes in a new sequence that is returned as the result.</source>
          <target state="translated">&lt;code&gt;mapi&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; 呼叫 &lt;code&gt;f&lt;/code&gt; 与每个字符 &lt;code&gt;s&lt;/code&gt; 和它的索引（索引顺序增加），并存储在一个新的序列所产生的字节被作为结果返回。</target>
        </trans-unit>
        <trans-unit id="e8b38bd6b4422e305b0ee1f485b3460985a2cee8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mapi&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; is like &lt;a href=&quot;stringlabels#VALmap&quot;&gt;&lt;code&gt;StringLabels.map&lt;/code&gt;&lt;/a&gt; but the index of the character is also passed to &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mapi&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; &lt;a href=&quot;stringlabels#VALmap&quot;&gt; &lt;code&gt;StringLabels.map&lt;/code&gt; &lt;/a&gt; s类似于StringLabels.map，但是字符的索引也传递给 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48c1dfd699c31f0468704e8b937504078d0f21be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;match_beginning()&lt;/code&gt; returns the position of the first character of the substring that was matched by the last call to a matching or searching function (see &lt;a href=&quot;str#VALmatched_string&quot;&gt;&lt;code&gt;Str.matched_string&lt;/code&gt;&lt;/a&gt; for details).</source>
          <target state="translated">&lt;code&gt;match_beginning()&lt;/code&gt; 返回与匹配或搜索函数的最后一次调用匹配的子字符串的第一个字符的位置（有关详细信息，请参阅&lt;a href=&quot;str#VALmatched_string&quot;&gt; &lt;code&gt;Str.matched_string&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="bfb05c728c61ba05acfe9f7ea75cc0d8556c748b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;match_end()&lt;/code&gt; returns the position of the character following the last character of the substring that was matched by the last call to a matching or searching function (see &lt;a href=&quot;str#VALmatched_string&quot;&gt;&lt;code&gt;Str.matched_string&lt;/code&gt;&lt;/a&gt; for details).</source>
          <target state="translated">&lt;code&gt;match_end()&lt;/code&gt; 返回该子字符串的最后一个字符之后的字符位置，该子字符串的最后一个字符与上次对匹配或搜索函数的调用相匹配（有关详细信息，请参见&lt;a href=&quot;str#VALmatched_string&quot;&gt; &lt;code&gt;Str.matched_string&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="169ad91bd32cae611153d0c309ae0ebe00617d70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;matched_group&amp;nbsp;n&amp;nbsp;s&lt;/code&gt; returns the substring of &lt;code&gt;s&lt;/code&gt; that was matched by the &lt;code&gt;n&lt;/code&gt;th group &lt;code&gt;\(...\)&lt;/code&gt; of the regular expression that was matched by the last call to a matching or searching function (see &lt;a href=&quot;str#VALmatched_string&quot;&gt;&lt;code&gt;Str.matched_string&lt;/code&gt;&lt;/a&gt; for details).</source>
          <target state="translated">&lt;code&gt;matched_group&amp;nbsp;n&amp;nbsp;s&lt;/code&gt; 返回与正则表达式的第 &lt;code&gt;n&lt;/code&gt; 个组 &lt;code&gt;\(...\)&lt;/code&gt; 匹配的 &lt;code&gt;s&lt;/code&gt; 的子字符串，该正则表达式的最后一个匹配或搜索函数调用对其进行了匹配（有关详细信息，请参阅&lt;a href=&quot;str#VALmatched_string&quot;&gt; &lt;code&gt;Str.matched_string&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0a417cac29410a7772db27d21b420f51ed795279" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;matched_group&amp;nbsp;n&amp;nbsp;s&lt;/code&gt; returns the substring of &lt;code&gt;s&lt;/code&gt; that was matched by the &lt;code&gt;n&lt;/code&gt;th group &lt;code&gt;\(...\)&lt;/code&gt; of the regular expression that was matched by the last call to a matching or searching function (see &lt;a href=&quot;str#VALmatched_string&quot;&gt;&lt;code&gt;Str.matched_string&lt;/code&gt;&lt;/a&gt; for details). The user must make sure that the parameter &lt;code&gt;s&lt;/code&gt; is the same string that was passed to the matching or searching function.</source>
          <target state="translated">&lt;code&gt;matched_group&amp;nbsp;n&amp;nbsp;s&lt;/code&gt; 返回与正则表达式的第 &lt;code&gt;n&lt;/code&gt; 个组 &lt;code&gt;\(...\)&lt;/code&gt; 匹配的 &lt;code&gt;s&lt;/code&gt; 的子字符串，该正则表达式的最后一个匹配或搜索函数调用对其进行了匹配（有关详细信息，请参阅&lt;a href=&quot;str#VALmatched_string&quot;&gt; &lt;code&gt;Str.matched_string&lt;/code&gt; &lt;/a&gt;）。用户必须确保参数 &lt;code&gt;s&lt;/code&gt; 与传递给匹配或搜索功能的字符串相同。</target>
        </trans-unit>
        <trans-unit id="1aff7d4273925b1cbf7ee52c274452c3a0a1f221" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;matched_string&amp;nbsp;s&lt;/code&gt; returns the substring of &lt;code&gt;s&lt;/code&gt; that was matched by the last call to one of the following matching or searching functions:</source>
          <target state="translated">&lt;code&gt;matched_string&amp;nbsp;s&lt;/code&gt; 返回与上一次对以下匹配或搜索功能之一进行匹配的 &lt;code&gt;s&lt;/code&gt; 的子字符串：</target>
        </trans-unit>
        <trans-unit id="6659a9a7b06ccae9d160b6e236efcb936f8a7946" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;matched_string&amp;nbsp;s&lt;/code&gt; returns the substring of &lt;code&gt;s&lt;/code&gt; that was matched by the last call to one of the following matching or searching functions: &lt;a href=&quot;str#VALstring_match&quot;&gt;&lt;code&gt;Str.string_match&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;str#VALsearch_forward&quot;&gt;&lt;code&gt;Str.search_forward&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;str#VALsearch_backward&quot;&gt;&lt;code&gt;Str.search_backward&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;str#VALstring_partial_match&quot;&gt;&lt;code&gt;Str.string_partial_match&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;str#VALglobal_substitute&quot;&gt;&lt;code&gt;Str.global_substitute&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;str#VALsubstitute_first&quot;&gt;&lt;code&gt;Str.substitute_first&lt;/code&gt;&lt;/a&gt; provided that none of the following functions was called in between: &lt;a href=&quot;str#VALglobal_replace&quot;&gt;&lt;code&gt;Str.global_replace&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;str#VALreplace_first&quot;&gt;&lt;code&gt;Str.replace_first&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;str#VALsplit&quot;&gt;&lt;code&gt;Str.split&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;str#VALbounded_split&quot;&gt;&lt;code&gt;Str.bounded_split&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;str#VALsplit_delim&quot;&gt;&lt;code&gt;Str.split_delim&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;str#VALbounded_split_delim&quot;&gt;&lt;code&gt;Str.bounded_split_delim&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;str#VALfull_split&quot;&gt;&lt;code&gt;Str.full_split&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;str#VALbounded_full_split&quot;&gt;&lt;code&gt;Str.bounded_full_split&lt;/code&gt;&lt;/a&gt; Note: in the case of &lt;code&gt;global_substitute&lt;/code&gt; and &lt;code&gt;substitute_first&lt;/code&gt;, a call to &lt;code&gt;matched_string&lt;/code&gt; is only valid within the &lt;code&gt;subst&lt;/code&gt; argument, not after &lt;code&gt;global_substitute&lt;/code&gt; or &lt;code&gt;substitute_first&lt;/code&gt; returns.</source>
          <target state="translated">&lt;code&gt;matched_string&amp;nbsp;s&lt;/code&gt; 返回与上一次调用以下匹配或搜索功能之一匹配的 &lt;code&gt;s&lt;/code&gt; 的子字符串：&lt;a href=&quot;str#VALstring_match&quot;&gt; &lt;code&gt;Str.string_match&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;str#VALsearch_forward&quot;&gt; &lt;code&gt;Str.search_forward&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;str#VALsearch_backward&quot;&gt; &lt;code&gt;Str.search_backward&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;str#VALstring_partial_match&quot;&gt; &lt;code&gt;Str.string_partial_match&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;str#VALglobal_substitute&quot;&gt; &lt;code&gt;Str.global_substitute&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;str#VALsubstitute_first&quot;&gt; &lt;code&gt;Str.substitute_first&lt;/code&gt; ,&lt;/a&gt;前提是没有在以下函数之间调用了以下函数：&lt;a href=&quot;str#VALglobal_replace&quot;&gt; &lt;code&gt;Str.global_replace&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;str#VALreplace_first&quot;&gt; &lt;code&gt;Str.replace_first&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;str#VALsplit&quot;&gt; &lt;code&gt;Str.split&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;str#VALbounded_split&quot;&gt; &lt;code&gt;Str.bounded_split&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;str#VALsplit_delim&quot;&gt; &lt;code&gt;Str.split_delim&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;str#VALbounded_split_delim&quot;&gt; &lt;code&gt;Str.bounded_split_delim&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;str#VALfull_split&quot;&gt; &lt;code&gt;Str.full_split&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;str#VALbounded_full_split&quot;&gt; &lt;code&gt;Str.bounded_full_split&lt;/code&gt; &lt;/a&gt;注：在的情况下 &lt;code&gt;global_substitute&lt;/code&gt; 和 &lt;code&gt;substitute_first&lt;/code&gt; ，将呼叫 &lt;code&gt;matched_string&lt;/code&gt; 只是内有效 &lt;code&gt;subst&lt;/code&gt; 的说法，而不是之后 &lt;code&gt;global_substitute&lt;/code&gt; 或 &lt;code&gt;substitute_first&lt;/code&gt; 回报。</target>
        </trans-unit>
        <trans-unit id="888877c3695814149671ae501b1f310b6e3f4f33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; returns the maximum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;max&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 返回 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的最大值。</target>
        </trans-unit>
        <trans-unit id="656f9445104822b105ab7e7bfccf51da8b10489e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; returns the maximum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. It returns &lt;code&gt;nan&lt;/code&gt; when &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt; is &lt;code&gt;nan&lt;/code&gt;. Moreover &lt;code&gt;max&amp;nbsp;(-0.)&amp;nbsp;(+0.)&amp;nbsp;=&amp;nbsp;+0.&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;max&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 返回 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的最大值。它返回 &lt;code&gt;nan&lt;/code&gt; 当 &lt;code&gt;x&lt;/code&gt; 或 &lt;code&gt;y&lt;/code&gt; 是 &lt;code&gt;nan&lt;/code&gt; 。而且 &lt;code&gt;max&amp;nbsp;(-0.)&amp;nbsp;(+0.)&amp;nbsp;=&amp;nbsp;+0.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4146c7142bd514a90f45e226f9ce5c9817f5a8b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max&lt;/code&gt; is U+10FFFF.</source>
          <target state="translated">&lt;code&gt;max&lt;/code&gt; 为U + 10FFFF。</target>
        </trans-unit>
        <trans-unit id="33ef8dab38bbff832f410327ac869995ed4e038f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_int&lt;/code&gt; is the greatest representable integer, &lt;code&gt;2{^[Sys.int_size&amp;nbsp;-&amp;nbsp;1]}&amp;nbsp;-&amp;nbsp;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;max_int&lt;/code&gt; 是最大可表示整数 &lt;code&gt;2{^[Sys.int_size&amp;nbsp;-&amp;nbsp;1]}&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef9870362b09670ff2dbd3f6a5b060c497b87615" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_num&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; returns the maximum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; treating &lt;code&gt;nan&lt;/code&gt; as missing values.</source>
          <target state="translated">&lt;code&gt;max_num&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 返回 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的最大值，将 &lt;code&gt;nan&lt;/code&gt; 视为缺失值。</target>
        </trans-unit>
        <trans-unit id="661a50156b45437b306db02ca7156e4dbfd993f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_num&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; returns the maximum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; treating &lt;code&gt;nan&lt;/code&gt; as missing values. If both &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are &lt;code&gt;nan&lt;/code&gt;&lt;code&gt;nan&lt;/code&gt; is returned. Moreover &lt;code&gt;max_num&amp;nbsp;(-0.)&amp;nbsp;(+0.)&amp;nbsp;=&amp;nbsp;+0.&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;max_num&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 返回 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的最大值，将 &lt;code&gt;nan&lt;/code&gt; 视为缺失值。如果两个 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 是 &lt;code&gt;nan&lt;/code&gt; &lt;code&gt;nan&lt;/code&gt; 返回。而且 &lt;code&gt;max_num&amp;nbsp;(-0.)&amp;nbsp;(+0.)&amp;nbsp;=&amp;nbsp;+0.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="72876b24e0e7e562a5754fdeb60a013a51e692dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;l&lt;/code&gt; is true if and only if &lt;code&gt;a&lt;/code&gt; is equal to an element of &lt;code&gt;l&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;l&lt;/code&gt; 为真，当且仅当 &lt;code&gt;a&lt;/code&gt; 等于的元素 &lt;code&gt;l&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb3084e711cb8f892b3c7993a0a244407a604090" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;l&lt;/code&gt; is true if and only if &lt;code&gt;a&lt;/code&gt; is structurally equal to an element of &lt;code&gt;l&lt;/code&gt; (i.e.</source>
          <target state="translated">&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;l&lt;/code&gt; 是真当且仅当 &lt;code&gt;a&lt;/code&gt; 在结构上等于的元素 &lt;code&gt;l&lt;/code&gt; （即</target>
        </trans-unit>
        <trans-unit id="1668f959105b2fbfd1b017669f6f83b73cf8fe0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;l&lt;/code&gt; is true if and only if &lt;code&gt;a&lt;/code&gt; is structurally equal to an element of &lt;code&gt;l&lt;/code&gt; (i.e. there is an &lt;code&gt;x&lt;/code&gt; in &lt;code&gt;l&lt;/code&gt; such that &lt;code&gt;compare&amp;nbsp;a&amp;nbsp;x&amp;nbsp;=&amp;nbsp;0&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;l&lt;/code&gt; 当且仅当 &lt;code&gt;a&lt;/code&gt; 在结构上等于 &lt;code&gt;l&lt;/code&gt; 的元素时（即l中存在 &lt;code&gt;x&lt;/code&gt; 以便 &lt;code&gt;compare&amp;nbsp;a&amp;nbsp;x&amp;nbsp;=&amp;nbsp;0&lt;/code&gt; ）， &lt;code&gt;l&lt;/code&gt; l才是true 。</target>
        </trans-unit>
        <trans-unit id="bb538e54fc3d0975c3ddffa2b15c7322452f63cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;l&lt;/code&gt; is true if and only if there is an element of &lt;code&gt;l&lt;/code&gt; that is structurally equal to &lt;code&gt;a&lt;/code&gt;, i.e.</source>
          <target state="translated">&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;l&lt;/code&gt; 当且仅当 &lt;code&gt;l&lt;/code&gt; 的一个元素在结构上等于 &lt;code&gt;a&lt;/code&gt; 时，me l才是true ，即</target>
        </trans-unit>
        <trans-unit id="8aa39770c14faa1d0162bbcd7aaf7213e92b1108" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;l&lt;/code&gt; is true if and only if there is an element of &lt;code&gt;l&lt;/code&gt; that is structurally equal to &lt;code&gt;a&lt;/code&gt;, i.e. there is an &lt;code&gt;x&lt;/code&gt; in &lt;code&gt;l&lt;/code&gt; such that &lt;code&gt;compare&amp;nbsp;a&amp;nbsp;x&amp;nbsp;=&amp;nbsp;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;l&lt;/code&gt; 当且仅当存在 &lt;code&gt;l&lt;/code&gt; 的一个元素在结构上等于 &lt;code&gt;a&lt;/code&gt; 的情况下，l才是true ，即 &lt;code&gt;l&lt;/code&gt; 中存在一个 &lt;code&gt;x&lt;/code&gt; ，使得 &lt;code&gt;compare&amp;nbsp;a&amp;nbsp;x&amp;nbsp;=&amp;nbsp;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f9852d139161ed7037dea4e72c1a16af85efe7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;set&lt;/code&gt; is true if and only if &lt;code&gt;a&lt;/code&gt; is equal to an element of &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;set&lt;/code&gt; 当且仅当 &lt;code&gt;a&lt;/code&gt; 等于 &lt;code&gt;set&lt;/code&gt; 的元素时，set才是true 。</target>
        </trans-unit>
        <trans-unit id="eb36947dbe6559d5e4bcb95fe0475abfc38dc62e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;set&lt;/code&gt; is true if and only if &lt;code&gt;a&lt;/code&gt; is structurally equal to an element of &lt;code&gt;l&lt;/code&gt; (i.e.</source>
          <target state="translated">&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;set&lt;/code&gt; 当且仅当 &lt;code&gt;a&lt;/code&gt; 在结构上等于 &lt;code&gt;l&lt;/code&gt; 的元素时，集合才为真（即</target>
        </trans-unit>
        <trans-unit id="d28138c32d1ba60c43ac5f6b841fed942da9a53e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;set&lt;/code&gt; is true if and only if &lt;code&gt;a&lt;/code&gt; is structurally equal to an element of &lt;code&gt;l&lt;/code&gt; (i.e. there is an &lt;code&gt;x&lt;/code&gt; in &lt;code&gt;l&lt;/code&gt; such that &lt;code&gt;compare&amp;nbsp;a&amp;nbsp;x&amp;nbsp;=&amp;nbsp;0&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;set&lt;/code&gt; 当且仅当是真 &lt;code&gt;a&lt;/code&gt; 在结构上等于的元素 &lt;code&gt;l&lt;/code&gt; （即有一个 &lt;code&gt;x&lt;/code&gt; 在 &lt;code&gt;l&lt;/code&gt; ，使得 &lt;code&gt;compare&amp;nbsp;a&amp;nbsp;x&amp;nbsp;=&amp;nbsp;0&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="337181d887dca8a6952251e32911425558c954e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;set&lt;/code&gt; is true if and only if there is an element of &lt;code&gt;set&lt;/code&gt; that is structurally equal to &lt;code&gt;a&lt;/code&gt;, i.e.</source>
          <target state="translated">&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;set&lt;/code&gt; 当且仅当有一个元素是真实的 &lt;code&gt;set&lt;/code&gt; 在结构上等于 &lt;code&gt;a&lt;/code&gt; ，即</target>
        </trans-unit>
        <trans-unit id="cfae965f106628d6f7715a7dc482874b0f748198" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;set&lt;/code&gt; is true if and only if there is an element of &lt;code&gt;set&lt;/code&gt; that is structurally equal to &lt;code&gt;a&lt;/code&gt;, i.e. there is an &lt;code&gt;x&lt;/code&gt; in &lt;code&gt;set&lt;/code&gt; such that &lt;code&gt;compare&amp;nbsp;a&amp;nbsp;x&amp;nbsp;=&amp;nbsp;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;set&lt;/code&gt; 当且仅当有一个元素是真实的 &lt;code&gt;set&lt;/code&gt; 在结构上等于 &lt;code&gt;a&lt;/code&gt; ，即，有一个 &lt;code&gt;x&lt;/code&gt; 在 &lt;code&gt;set&lt;/code&gt; ，使得 &lt;code&gt;compare&amp;nbsp;a&amp;nbsp;x&amp;nbsp;=&amp;nbsp;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0c9a3cee1cdd7dbacac6cf5981b160dfd377f1b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;~set&lt;/code&gt; is true if and only if &lt;code&gt;a&lt;/code&gt; is equal to an element of &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;~set&lt;/code&gt; 当且仅当 &lt;code&gt;a&lt;/code&gt; 等于 &lt;code&gt;set&lt;/code&gt; 的元素时才为true 。</target>
        </trans-unit>
        <trans-unit id="2cc6bdb07dad77514669583a35fd39acb2c158ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;~set&lt;/code&gt; is true if and only if &lt;code&gt;a&lt;/code&gt; is structurally equal to an element of &lt;code&gt;l&lt;/code&gt; (i.e.</source>
          <target state="translated">&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;~set&lt;/code&gt; 是当且仅当 &lt;code&gt;a&lt;/code&gt; 在结构上等于的元素 &lt;code&gt;l&lt;/code&gt; （即</target>
        </trans-unit>
        <trans-unit id="a236916e72c0daeee4b7eba45f22e5b9636ae6d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;~set&lt;/code&gt; is true if and only if &lt;code&gt;a&lt;/code&gt; is structurally equal to an element of &lt;code&gt;l&lt;/code&gt; (i.e. there is an &lt;code&gt;x&lt;/code&gt; in &lt;code&gt;l&lt;/code&gt; such that &lt;code&gt;compare&amp;nbsp;a&amp;nbsp;x&amp;nbsp;=&amp;nbsp;0&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;~set&lt;/code&gt; ，当且仅当是真 &lt;code&gt;a&lt;/code&gt; 在结构上等于的元素 &lt;code&gt;l&lt;/code&gt; （即有一个 &lt;code&gt;x&lt;/code&gt; 在 &lt;code&gt;l&lt;/code&gt; ，使得 &lt;code&gt;compare&amp;nbsp;a&amp;nbsp;x&amp;nbsp;=&amp;nbsp;0&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="14caf3e4a3beea0f6ff111ace6ed37e395790d3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;~set&lt;/code&gt; is true if and only if there is an element of &lt;code&gt;set&lt;/code&gt; that is structurally equal to &lt;code&gt;a&lt;/code&gt;, i.e.</source>
          <target state="translated">&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;~set&lt;/code&gt; 当且仅当存在 &lt;code&gt;set&lt;/code&gt; 的元素在结构上等于 &lt;code&gt;a&lt;/code&gt; 时才为true ，即</target>
        </trans-unit>
        <trans-unit id="fbf15bf1e38b56938da42426967128b8aaa4ceab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;~set&lt;/code&gt; is true if and only if there is an element of &lt;code&gt;set&lt;/code&gt; that is structurally equal to &lt;code&gt;a&lt;/code&gt;, i.e. there is an &lt;code&gt;x&lt;/code&gt; in &lt;code&gt;set&lt;/code&gt; such that &lt;code&gt;compare&amp;nbsp;a&amp;nbsp;x&amp;nbsp;=&amp;nbsp;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mem&amp;nbsp;a&amp;nbsp;~set&lt;/code&gt; ，当且仅当存在的元素是真实的 &lt;code&gt;set&lt;/code&gt; 在结构上等于 &lt;code&gt;a&lt;/code&gt; ，即，有一个 &lt;code&gt;x&lt;/code&gt; 在 &lt;code&gt;set&lt;/code&gt; ，使得 &lt;code&gt;compare&amp;nbsp;a&amp;nbsp;x&amp;nbsp;=&amp;nbsp;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97206d96c0b2adcc4e724e9117dbe01ced9d9467" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mem&amp;nbsp;t&amp;nbsp;x&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if there is at least one instance of &lt;code&gt;x&lt;/code&gt; in &lt;code&gt;t&lt;/code&gt;, false otherwise.</source>
          <target state="translated">&lt;code&gt;mem&amp;nbsp;t&amp;nbsp;x&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; ，如果有至少一个实例 &lt;code&gt;x&lt;/code&gt; 在 &lt;code&gt;t&lt;/code&gt; ，否则为false。</target>
        </trans-unit>
        <trans-unit id="817be35bdf75e61325a9b8b718a070efdbc185c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mem&amp;nbsp;x&amp;nbsp;m&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;m&lt;/code&gt; contains a binding for &lt;code&gt;x&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;mem&amp;nbsp;x&amp;nbsp;m&lt;/code&gt; 回报 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;m&lt;/code&gt; 包含有约束力的 &lt;code&gt;x&lt;/code&gt; ，和 &lt;code&gt;false&lt;/code&gt; 否则。</target>
        </trans-unit>
        <trans-unit id="38b266a5527d7db3daed396c03f5501fa151bec3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mem&amp;nbsp;x&amp;nbsp;s&lt;/code&gt; tests whether &lt;code&gt;x&lt;/code&gt; belongs to the set &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mem&amp;nbsp;x&amp;nbsp;s&lt;/code&gt; 测试 &lt;code&gt;x&lt;/code&gt; 是否属于set &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d2fdfabd71830080e4b0a5d6ba3df5673f3f62d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mem&amp;nbsp;x&amp;nbsp;~set&lt;/code&gt; is true if and only if &lt;code&gt;x&lt;/code&gt; is equal to an element of &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mem&amp;nbsp;x&amp;nbsp;~set&lt;/code&gt; 当且仅当 &lt;code&gt;x&lt;/code&gt; 等于 &lt;code&gt;set&lt;/code&gt; 的元素时，mem x〜set才为true 。</target>
        </trans-unit>
        <trans-unit id="9ffc78cdcd4d789826a76ab6ae4041be810ca80a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;merge&amp;nbsp;f&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; computes a map whose keys are a subset of the keys of &lt;code&gt;m1&lt;/code&gt; and of &lt;code&gt;m2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;merge&amp;nbsp;f&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; 计算一个映射，该映射的键是 &lt;code&gt;m1&lt;/code&gt; 和 &lt;code&gt;m2&lt;/code&gt; 的键的子集。</target>
        </trans-unit>
        <trans-unit id="0d0dc081f91162ec209bd4377567e9ce9cb0fa13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;merge&amp;nbsp;f&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; computes a map whose keys are a subset of the keys of &lt;code&gt;m1&lt;/code&gt; and of &lt;code&gt;m2&lt;/code&gt;. The presence of each such binding, and the corresponding value, is determined with the function &lt;code&gt;f&lt;/code&gt;. In terms of the &lt;code&gt;find_opt&lt;/code&gt; operation, we have &lt;code&gt;find_opt&amp;nbsp;x&amp;nbsp;(merge&amp;nbsp;f&amp;nbsp;m1&amp;nbsp;m2)&amp;nbsp;=&amp;nbsp;f&amp;nbsp;x&amp;nbsp;(find_opt&amp;nbsp;x&amp;nbsp;m1)&amp;nbsp;(find_opt&amp;nbsp;x&amp;nbsp;m2)&lt;/code&gt; for any key &lt;code&gt;x&lt;/code&gt;, provided that &lt;code&gt;f&amp;nbsp;x&amp;nbsp;None&amp;nbsp;None&amp;nbsp;=&amp;nbsp;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;merge&amp;nbsp;f&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; 计算一个映射，该映射的键是 &lt;code&gt;m1&lt;/code&gt; 和 &lt;code&gt;m2&lt;/code&gt; 的键的子集。每个此类绑定的存在以及相应的值由函数 &lt;code&gt;f&lt;/code&gt; 确定。就 &lt;code&gt;find_opt&lt;/code&gt; 操作而言，对于任何键 &lt;code&gt;x&lt;/code&gt; ，只要 &lt;code&gt;f&amp;nbsp;x&amp;nbsp;None&amp;nbsp;None&amp;nbsp;=&amp;nbsp;None&lt;/code&gt; ，我们都有 &lt;code&gt;find_opt&amp;nbsp;x&amp;nbsp;(merge&amp;nbsp;f&amp;nbsp;m1&amp;nbsp;m2)&amp;nbsp;=&amp;nbsp;f&amp;nbsp;x&amp;nbsp;(find_opt&amp;nbsp;x&amp;nbsp;m1)&amp;nbsp;(find_opt&amp;nbsp;x&amp;nbsp;m2)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e7b2aa971831f3a1dd019302bdd8f4369ea853c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;merge&amp;nbsp;t&amp;nbsp;x&lt;/code&gt; returns an instance of &lt;code&gt;x&lt;/code&gt; found in &lt;code&gt;t&lt;/code&gt; if any, or else adds &lt;code&gt;x&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt; and return &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;merge&amp;nbsp;t&amp;nbsp;x&lt;/code&gt; 返回在 &lt;code&gt;t&lt;/code&gt; 中找到的 &lt;code&gt;x&lt;/code&gt; 的实例（如果有），否则将 &lt;code&gt;x&lt;/code&gt; 添加到 &lt;code&gt;t&lt;/code&gt; 并返回 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1199d3f214e373b49b0944eb962f5e76b312672f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;merge&amp;nbsp;~f&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; computes a map whose keys are a subset of the keys of &lt;code&gt;m1&lt;/code&gt; and of &lt;code&gt;m2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;merge&amp;nbsp;~f&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; 计算一个映射，该映射的键是 &lt;code&gt;m1&lt;/code&gt; 和 &lt;code&gt;m2&lt;/code&gt; 的键的子集。</target>
        </trans-unit>
        <trans-unit id="522ddb5d964c47f2c42ef77bfac9665de939bb05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;merge&amp;nbsp;~f&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; computes a map whose keys are a subset of the keys of &lt;code&gt;m1&lt;/code&gt; and of &lt;code&gt;m2&lt;/code&gt;. The presence of each such binding, and the corresponding value, is determined with the function &lt;code&gt;f&lt;/code&gt;. In terms of the &lt;code&gt;find_opt&lt;/code&gt; operation, we have &lt;code&gt;find_opt&amp;nbsp;x&amp;nbsp;(merge&amp;nbsp;f&amp;nbsp;m1&amp;nbsp;m2)&amp;nbsp;=&amp;nbsp;f&amp;nbsp;x&amp;nbsp;(find_opt&amp;nbsp;x&amp;nbsp;m1)&amp;nbsp;(find_opt&amp;nbsp;x&amp;nbsp;m2)&lt;/code&gt; for any key &lt;code&gt;x&lt;/code&gt;, provided that &lt;code&gt;f&amp;nbsp;x&amp;nbsp;None&amp;nbsp;None&amp;nbsp;=&amp;nbsp;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;merge&amp;nbsp;~f&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; 计算一个映射，该映射的键是 &lt;code&gt;m1&lt;/code&gt; 和 &lt;code&gt;m2&lt;/code&gt; 的键的子集。每个此类绑定的存在以及相应的值由函数 &lt;code&gt;f&lt;/code&gt; 确定。就 &lt;code&gt;find_opt&lt;/code&gt; 操作而言，对于任何键 &lt;code&gt;x&lt;/code&gt; ，只要 &lt;code&gt;f&amp;nbsp;x&amp;nbsp;None&amp;nbsp;None&amp;nbsp;=&amp;nbsp;None&lt;/code&gt; ，我们都有 &lt;code&gt;find_opt&amp;nbsp;x&amp;nbsp;(merge&amp;nbsp;f&amp;nbsp;m1&amp;nbsp;m2)&amp;nbsp;=&amp;nbsp;f&amp;nbsp;x&amp;nbsp;(find_opt&amp;nbsp;x&amp;nbsp;m1)&amp;nbsp;(find_opt&amp;nbsp;x&amp;nbsp;m2)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5bd587649af361efa16f7b5ecee8ee21d104b3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; returns the minimum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;min&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 返回 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的最小值。</target>
        </trans-unit>
        <trans-unit id="8f1a4e3bba4f1a64c49fad961772e7b0f3787f2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; returns the minimum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. It returns &lt;code&gt;nan&lt;/code&gt; when &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt; is &lt;code&gt;nan&lt;/code&gt;. Moreover &lt;code&gt;min&amp;nbsp;(-0.)&amp;nbsp;(+0.)&amp;nbsp;=&amp;nbsp;-0.&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;min&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 返回 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的最小值。它返回 &lt;code&gt;nan&lt;/code&gt; 当 &lt;code&gt;x&lt;/code&gt; 或 &lt;code&gt;y&lt;/code&gt; 是 &lt;code&gt;nan&lt;/code&gt; 。此外， &lt;code&gt;min&amp;nbsp;(-0.)&amp;nbsp;(+0.)&amp;nbsp;=&amp;nbsp;-0.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="171be0992e5a4d6b84c07ecf613086a081cdf3bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min&lt;/code&gt; is U+0000.</source>
          <target state="translated">&lt;code&gt;min&lt;/code&gt; 为U + 0000。</target>
        </trans-unit>
        <trans-unit id="58fa087d061f0d7e06ebf9bee4f3899f0eebdb98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_int&lt;/code&gt; is the smallest representable integer, &lt;code&gt;-2{^[Sys.int_size&amp;nbsp;-&amp;nbsp;1]}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;min_int&lt;/code&gt; 是可表示的最小整数 &lt;code&gt;-2{^[Sys.int_size&amp;nbsp;-&amp;nbsp;1]}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e34111a9d2f9c77bc4f9a23d3ec985ea7d8be6dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_max&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; is &lt;code&gt;(min&amp;nbsp;x&amp;nbsp;y,&amp;nbsp;max&amp;nbsp;x&amp;nbsp;y)&lt;/code&gt;, just more efficient.</source>
          <target state="translated">&lt;code&gt;min_max&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 是 &lt;code&gt;(min&amp;nbsp;x&amp;nbsp;y,&amp;nbsp;max&amp;nbsp;x&amp;nbsp;y)&lt;/code&gt; ，只是效率更高。</target>
        </trans-unit>
        <trans-unit id="7fc8b28b87bbcbf5f4e674a1b61a59c890e378f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_max_num&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; is &lt;code&gt;(min_num&amp;nbsp;x&amp;nbsp;y,&amp;nbsp;max_num&amp;nbsp;x&amp;nbsp;y)&lt;/code&gt;, just more efficient.</source>
          <target state="translated">&lt;code&gt;min_max_num&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 是 &lt;code&gt;(min_num&amp;nbsp;x&amp;nbsp;y,&amp;nbsp;max_num&amp;nbsp;x&amp;nbsp;y)&lt;/code&gt; ，只是效率更高。</target>
        </trans-unit>
        <trans-unit id="3750912c19d066b75dc78ad1877872ab787c43ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_max_num&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; is &lt;code&gt;(min_num&amp;nbsp;x&amp;nbsp;y,&amp;nbsp;max_num&amp;nbsp;x&amp;nbsp;y)&lt;/code&gt;, just more efficient. Note that in particular &lt;code&gt;min_max_num&amp;nbsp;x&amp;nbsp;nan&amp;nbsp;=&amp;nbsp;(x,&amp;nbsp;x)&lt;/code&gt; and &lt;code&gt;min_max_num&amp;nbsp;nan&amp;nbsp;y&amp;nbsp;=&amp;nbsp;(y,&amp;nbsp;y)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;min_max_num&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 是 &lt;code&gt;(min_num&amp;nbsp;x&amp;nbsp;y,&amp;nbsp;max_num&amp;nbsp;x&amp;nbsp;y)&lt;/code&gt; ，只是效率更高。注意特别是 &lt;code&gt;min_max_num&amp;nbsp;x&amp;nbsp;nan&amp;nbsp;=&amp;nbsp;(x,&amp;nbsp;x)&lt;/code&gt; 和 &lt;code&gt;min_max_num&amp;nbsp;nan&amp;nbsp;y&amp;nbsp;=&amp;nbsp;(y,&amp;nbsp;y)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="082691bd2058dd73c68bc4f86ea57c65515f6711" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_num&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; returns the minimum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; treating &lt;code&gt;nan&lt;/code&gt; as missing values.</source>
          <target state="translated">&lt;code&gt;min_num&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 返回 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的最小值，将 &lt;code&gt;nan&lt;/code&gt; 视为缺失值。</target>
        </trans-unit>
        <trans-unit id="b1aa3d58f370d672d347682d8db57ea870e91bac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_num&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; returns the minimum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; treating &lt;code&gt;nan&lt;/code&gt; as missing values. If both &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are &lt;code&gt;nan&lt;/code&gt;, &lt;code&gt;nan&lt;/code&gt; is returned. Moreover &lt;code&gt;min_num&amp;nbsp;(-0.)&amp;nbsp;(+0.)&amp;nbsp;=&amp;nbsp;-0.&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;min_num&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 返回 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的最小值，将 &lt;code&gt;nan&lt;/code&gt; 视为缺失值。如果 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 均为 &lt;code&gt;nan&lt;/code&gt; ，则返回 &lt;code&gt;nan&lt;/code&gt; 。而且 &lt;code&gt;min_num&amp;nbsp;(-0.)&amp;nbsp;(+0.)&amp;nbsp;=&amp;nbsp;-0.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f85c746b39513ee2c14153d54fc6f94bd02a06f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minus_one&lt;/code&gt; is the integer &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;minus_one&lt;/code&gt; 是整数 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e8a4375c5620135199a9faf8515f7bec1e2f3f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod_float&amp;nbsp;a&amp;nbsp;b&lt;/code&gt; returns the remainder of &lt;code&gt;a&lt;/code&gt; with respect to &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mod_float&amp;nbsp;a&amp;nbsp;b&lt;/code&gt; 返回 &lt;code&gt;a&lt;/code&gt; 相对于 &lt;code&gt;b&lt;/code&gt; 的余数。</target>
        </trans-unit>
        <trans-unit id="8aacbd45847d6f27dae36a19f3f13999478a9f43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod_float&amp;nbsp;a&amp;nbsp;b&lt;/code&gt; returns the remainder of &lt;code&gt;a&lt;/code&gt; with respect to &lt;code&gt;b&lt;/code&gt;. The returned value is &lt;code&gt;a&amp;nbsp;-.&amp;nbsp;n&amp;nbsp;*.&amp;nbsp;b&lt;/code&gt;, where &lt;code&gt;n&lt;/code&gt; is the quotient &lt;code&gt;a&amp;nbsp;/.&amp;nbsp;b&lt;/code&gt; rounded towards zero to an integer.</source>
          <target state="translated">&lt;code&gt;mod_float&amp;nbsp;a&amp;nbsp;b&lt;/code&gt; 返回 &lt;code&gt;a&lt;/code&gt; 相对于 &lt;code&gt;b&lt;/code&gt; 的余数。返回值是 &lt;code&gt;a&amp;nbsp;-.&amp;nbsp;n&amp;nbsp;*.&amp;nbsp;b&lt;/code&gt; ，其中 &lt;code&gt;n&lt;/code&gt; 是商 &lt;code&gt;a&amp;nbsp;/.&amp;nbsp;b&lt;/code&gt; 取整为零至整数。</target>
        </trans-unit>
        <trans-unit id="e332de94db489785252fdbf5851c80018563c372" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modf&amp;nbsp;f&lt;/code&gt; returns the pair of the fractional and integral part of &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;modf&amp;nbsp;f&lt;/code&gt; 返回对的分数和整数部分的 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ba1fa2f02b567eb3d977212afc777b6c1962ad5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mul&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; is the multiplication &lt;code&gt;x&amp;nbsp;*&amp;nbsp;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mul&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 是 &lt;code&gt;x&amp;nbsp;*&amp;nbsp;y&lt;/code&gt; 的乘积。</target>
        </trans-unit>
        <trans-unit id="b117e6c778e15e93e45ae197035e4d6e113a607f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&amp;nbsp;asr&amp;nbsp;m&lt;/code&gt; shifts &lt;code&gt;n&lt;/code&gt; to the right by &lt;code&gt;m&lt;/code&gt; bits.</source>
          <target state="translated">&lt;code&gt;n&amp;nbsp;asr&amp;nbsp;m&lt;/code&gt; 将 &lt;code&gt;n&lt;/code&gt; 右移 &lt;code&gt;m&lt;/code&gt; 位。</target>
        </trans-unit>
        <trans-unit id="d160277bf518242c0e1a5c719225c7c5565228d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&amp;nbsp;asr&amp;nbsp;m&lt;/code&gt; shifts &lt;code&gt;n&lt;/code&gt; to the right by &lt;code&gt;m&lt;/code&gt; bits. This is an arithmetic shift: the sign bit of &lt;code&gt;n&lt;/code&gt; is replicated. The result is unspecified if &lt;code&gt;m&amp;nbsp;&amp;lt;&amp;nbsp;0&lt;/code&gt; or &lt;code&gt;m&amp;nbsp;&amp;gt;&amp;nbsp;Sys.int_size&lt;/code&gt;. Right-associative operator, see &lt;a href=&quot;ocaml_operators&quot;&gt;&lt;code&gt;Ocaml_operators&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;n&amp;nbsp;asr&amp;nbsp;m&lt;/code&gt; 将 &lt;code&gt;n&lt;/code&gt; 右移 &lt;code&gt;m&lt;/code&gt; 位。这是一种算术移位：复制 &lt;code&gt;n&lt;/code&gt; 的符号位。如果 &lt;code&gt;m&amp;nbsp;&amp;lt;&amp;nbsp;0&lt;/code&gt; 或 &lt;code&gt;m&amp;nbsp;&amp;gt;&amp;nbsp;Sys.int_size&lt;/code&gt; 则结果不确定。右关联运算符，有关更多信息，请参见&lt;a href=&quot;ocaml_operators&quot;&gt; &lt;code&gt;Ocaml_operators&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4a362f650d4f296af98566b7692fd795a73d48bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&amp;nbsp;lsl&amp;nbsp;m&lt;/code&gt; shifts &lt;code&gt;n&lt;/code&gt; to the left by &lt;code&gt;m&lt;/code&gt; bits.</source>
          <target state="translated">&lt;code&gt;n&amp;nbsp;lsl&amp;nbsp;m&lt;/code&gt; 将 &lt;code&gt;n&lt;/code&gt; 左移 &lt;code&gt;m&lt;/code&gt; 位。</target>
        </trans-unit>
        <trans-unit id="4ee0a0dc9075d25fc1ba0e8e7d571a93b4ca202c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&amp;nbsp;lsl&amp;nbsp;m&lt;/code&gt; shifts &lt;code&gt;n&lt;/code&gt; to the left by &lt;code&gt;m&lt;/code&gt; bits. The result is unspecified if &lt;code&gt;m&amp;nbsp;&amp;lt;&amp;nbsp;0&lt;/code&gt; or &lt;code&gt;m&amp;nbsp;&amp;gt;&amp;nbsp;Sys.int_size&lt;/code&gt;. Right-associative operator, see &lt;a href=&quot;ocaml_operators&quot;&gt;&lt;code&gt;Ocaml_operators&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;n&amp;nbsp;lsl&amp;nbsp;m&lt;/code&gt; 将 &lt;code&gt;n&lt;/code&gt; 左移 &lt;code&gt;m&lt;/code&gt; 位。如果 &lt;code&gt;m&amp;nbsp;&amp;lt;&amp;nbsp;0&lt;/code&gt; 或 &lt;code&gt;m&amp;nbsp;&amp;gt;&amp;nbsp;Sys.int_size&lt;/code&gt; 则结果不确定。右关联运算符，有关更多信息，请参见&lt;a href=&quot;ocaml_operators&quot;&gt; &lt;code&gt;Ocaml_operators&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5afd569375ea7ebb0d4364b7e47a0054dbaff1c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&amp;nbsp;lsr&amp;nbsp;m&lt;/code&gt; shifts &lt;code&gt;n&lt;/code&gt; to the right by &lt;code&gt;m&lt;/code&gt; bits.</source>
          <target state="translated">&lt;code&gt;n&amp;nbsp;lsr&amp;nbsp;m&lt;/code&gt; 将 &lt;code&gt;n&lt;/code&gt; 右移 &lt;code&gt;m&lt;/code&gt; 位。</target>
        </trans-unit>
        <trans-unit id="9fbcb46e2008c21679b0f9a1b3a4dcc500523d53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&amp;nbsp;lsr&amp;nbsp;m&lt;/code&gt; shifts &lt;code&gt;n&lt;/code&gt; to the right by &lt;code&gt;m&lt;/code&gt; bits. This is a logical shift: zeroes are inserted regardless of the sign of &lt;code&gt;n&lt;/code&gt;. The result is unspecified if &lt;code&gt;m&amp;nbsp;&amp;lt;&amp;nbsp;0&lt;/code&gt; or &lt;code&gt;m&amp;nbsp;&amp;gt;&amp;nbsp;Sys.int_size&lt;/code&gt;. Right-associative operator, see &lt;a href=&quot;ocaml_operators&quot;&gt;&lt;code&gt;Ocaml_operators&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;n&amp;nbsp;lsr&amp;nbsp;m&lt;/code&gt; 将 &lt;code&gt;n&lt;/code&gt; 右移 &lt;code&gt;m&lt;/code&gt; 位。这是一个逻辑上的移位：插入零而不考虑 &lt;code&gt;n&lt;/code&gt; 的符号。如果 &lt;code&gt;m&amp;nbsp;&amp;lt;&amp;nbsp;0&lt;/code&gt; 或 &lt;code&gt;m&amp;nbsp;&amp;gt;&amp;nbsp;Sys.int_size&lt;/code&gt; 则结果不确定。右关联运算符，有关更多信息，请参见&lt;a href=&quot;ocaml_operators&quot;&gt; &lt;code&gt;Ocaml_operators&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c351cb2505c577163444c73369b09c66fbc9a51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt;: returns the number of characters read so far.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; ：返回到目前为止已读取的字符数。</target>
        </trans-unit>
        <trans-unit id="63286e6ba9e7f33a2f415d990400ddf7ded2925f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&amp;nbsp;slot&lt;/code&gt; returns None if the name is unavailable, which may happen for the same reasons as &lt;code&gt;location&lt;/code&gt; returning None.</source>
          <target state="translated">&lt;code&gt;name&amp;nbsp;slot&lt;/code&gt; 如果名称不可用，则名称插槽将返回&amp;ldquo;无&amp;rdquo;，这可能与 &lt;code&gt;location&lt;/code&gt; 返回&amp;ldquo;无&amp;rdquo;的原因相同。</target>
        </trans-unit>
        <trans-unit id="adf2ef3dba42a3c00fc49bee7ce104b7d1e46282" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&amp;nbsp;slot&lt;/code&gt; returns the name of the function or definition enclosing the location referred to by the slot.</source>
          <target state="translated">&lt;code&gt;name&amp;nbsp;slot&lt;/code&gt; 返回包含该插槽引用的位置的函数或定义的名称。</target>
        </trans-unit>
        <trans-unit id="324036480141a24b9b839abb3889455b96d82a58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name0&lt;/code&gt; is the longest suffix of &lt;code&gt;name&lt;/code&gt; that does not contain a directory separator;</source>
          <target state="translated">&lt;code&gt;name0&lt;/code&gt; 是 &lt;code&gt;name&lt;/code&gt; 的最长后缀，不包含目录分隔符；</target>
        </trans-unit>
        <trans-unit id="b3713ea12f4f624dca6e2b18839f6bd627eeb5c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nd&lt;/code&gt;, &lt;code&gt;ni&lt;/code&gt;, &lt;code&gt;nu&lt;/code&gt;, &lt;code&gt;nx&lt;/code&gt;, &lt;code&gt;nX&lt;/code&gt;, &lt;code&gt;no&lt;/code&gt;: convert a &lt;code&gt;nativeint&lt;/code&gt; argument to the format specified by the second letter.</source>
          <target state="translated">&lt;code&gt;nd&lt;/code&gt; ， &lt;code&gt;ni&lt;/code&gt; ， &lt;code&gt;nu&lt;/code&gt; ， &lt;code&gt;nx&lt;/code&gt; ， &lt;code&gt;nX&lt;/code&gt; ， &lt;code&gt;no&lt;/code&gt; ：将 &lt;code&gt;nativeint&lt;/code&gt; 参数转换为第二个字母指定的格式。</target>
        </trans-unit>
        <trans-unit id="15b63f0683851b47d5ed25b340f45d172732ad85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nd&lt;/code&gt;, &lt;code&gt;ni&lt;/code&gt;, &lt;code&gt;nu&lt;/code&gt;, &lt;code&gt;nx&lt;/code&gt;, &lt;code&gt;nX&lt;/code&gt;, &lt;code&gt;no&lt;/code&gt;: reads a &lt;code&gt;nativeint&lt;/code&gt; argument to the format specified by the second letter for regular integers.</source>
          <target state="translated">&lt;code&gt;nd&lt;/code&gt; ， &lt;code&gt;ni&lt;/code&gt; ， &lt;code&gt;nu&lt;/code&gt; ， &lt;code&gt;nx&lt;/code&gt; ， &lt;code&gt;nX&lt;/code&gt; ， &lt;code&gt;no&lt;/code&gt; ：以常规整数第二个字母指定的格式读取 &lt;code&gt;nativeint&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="f3138bec5a17a72b536d672d82dede42eca3db5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;neg&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;~-x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;neg&amp;nbsp;x&lt;/code&gt; 是 &lt;code&gt;~-x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d03652dd25838fee27254a1cb9e655898c07dea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;negate&amp;nbsp;p&lt;/code&gt; is the negation of the predicate function &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;negate&amp;nbsp;p&lt;/code&gt; 是谓词函数 &lt;code&gt;p&lt;/code&gt; 的否定。</target>
        </trans-unit>
        <trans-unit id="188ebca9f10d9745e75c05607df7a7d5cc947c87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;negate&amp;nbsp;p&lt;/code&gt; is the negation of the predicate function &lt;code&gt;p&lt;/code&gt;. For any argument &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;(negate&amp;nbsp;p)&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;not&amp;nbsp;(p&amp;nbsp;x)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;negate&amp;nbsp;p&lt;/code&gt; 是谓词函数 &lt;code&gt;p&lt;/code&gt; 的否定。对于任何参数 &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;(negate&amp;nbsp;p)&amp;nbsp;x&lt;/code&gt; &lt;code&gt;not&amp;nbsp;(p&amp;nbsp;x)&lt;/code&gt; 是（p x）。</target>
        </trans-unit>
        <trans-unit id="b5343240b440bc012725b19b371f7a9132a50028" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;next_after&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; returns the next representable floating-point value following &lt;code&gt;x&lt;/code&gt; in the direction of &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;next_after&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 返回 &lt;code&gt;x&lt;/code&gt; 之后，沿 &lt;code&gt;y&lt;/code&gt; 方向的下一个可表示的浮点值。</target>
        </trans-unit>
        <trans-unit id="7e59db41bfd0a8673bbc9fc0880cbbaa39dfff2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;next_after&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; returns the next representable floating-point value following &lt;code&gt;x&lt;/code&gt; in the direction of &lt;code&gt;y&lt;/code&gt;. More precisely, if &lt;code&gt;y&lt;/code&gt; is greater (resp. less) than &lt;code&gt;x&lt;/code&gt;, it returns the smallest (resp. largest) representable number greater (resp. less) than &lt;code&gt;x&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; equals &lt;code&gt;y&lt;/code&gt;, the function returns &lt;code&gt;y&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt; is &lt;code&gt;nan&lt;/code&gt;, a &lt;code&gt;nan&lt;/code&gt; is returned. Note that &lt;code&gt;next_after&amp;nbsp;max_float&amp;nbsp;infinity&amp;nbsp;=&amp;nbsp;infinity&lt;/code&gt; and that &lt;code&gt;next_after&amp;nbsp;0.&amp;nbsp;infinity&lt;/code&gt; is the smallest denormalized positive number. If &lt;code&gt;x&lt;/code&gt; is the smallest denormalized positive number, &lt;code&gt;next_after&amp;nbsp;x&amp;nbsp;0.&amp;nbsp;=&amp;nbsp;0.&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;next_after&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 返回 &lt;code&gt;x&lt;/code&gt; 之后，沿 &lt;code&gt;y&lt;/code&gt; 方向的下一个可表示的浮点值。更确切地说，如果 &lt;code&gt;y&lt;/code&gt; 较大（分别为小于） &lt;code&gt;x&lt;/code&gt; ，则返回最小的（相应地，最大）表示数较大（分别为小于） &lt;code&gt;x&lt;/code&gt; 。如果 &lt;code&gt;x&lt;/code&gt; 等于 &lt;code&gt;y&lt;/code&gt; ，则函数返回 &lt;code&gt;y&lt;/code&gt; 。如果 &lt;code&gt;x&lt;/code&gt; 或 &lt;code&gt;y&lt;/code&gt; 为 &lt;code&gt;nan&lt;/code&gt; ，则返回 &lt;code&gt;nan&lt;/code&gt; 。注意， &lt;code&gt;next_after&amp;nbsp;max_float&amp;nbsp;infinity&amp;nbsp;=&amp;nbsp;infinity&lt;/code&gt; ， &lt;code&gt;next_after&amp;nbsp;0.&amp;nbsp;infinity&lt;/code&gt; 是最小的非规格化正数。如果 &lt;code&gt;x&lt;/code&gt; 是最小的非规格化正数， &lt;code&gt;next_after&amp;nbsp;x&amp;nbsp;0.&amp;nbsp;=&amp;nbsp;0.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5fc182bbf46603f9ad83515ebdcb089dacdd3d6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;none&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; 是 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29d85a1cccad93d3f58926e88d8f044e136ee718" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;not&amp;nbsp;b&lt;/code&gt; is the boolean negation of &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;not&amp;nbsp;b&lt;/code&gt; 是布尔否定 &lt;code&gt;b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c9e3e77a96f556dae79772d52d2c0130d343bb76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;npeek&amp;nbsp;n&lt;/code&gt; returns the list of the &lt;code&gt;n&lt;/code&gt; first elements of the stream, or all its remaining elements if less than &lt;code&gt;n&lt;/code&gt; elements are available.</source>
          <target state="translated">&lt;code&gt;npeek&amp;nbsp;n&lt;/code&gt; 返回流中前 &lt;code&gt;n&lt;/code&gt; 个元素的列表，或者如果少于 &lt;code&gt;n&lt;/code&gt; 个元素可用，则返回其所有其余元素的列表。</target>
        </trans-unit>
        <trans-unit id="da840e424029c9f4a59a6b70b5708595e2e0b2e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt; is &lt;code&gt;&quot;/dev/null&quot;&lt;/code&gt; on POSIX and &lt;code&gt;&quot;NUL&quot;&lt;/code&gt; on Windows.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 在POSIX上为 &lt;code&gt;&quot;/dev/null&quot;&lt;/code&gt; ，在Windows上为 &lt;code&gt;&quot;NUL&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="181f801ebb8f1920109ae726a1c6e5b732a5b0e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt; is &lt;code&gt;&quot;/dev/null&quot;&lt;/code&gt; on POSIX and &lt;code&gt;&quot;NUL&quot;&lt;/code&gt; on Windows. It represents a file on the OS that discards all writes and returns end of file on reads.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 在POSIX上为 &lt;code&gt;&quot;/dev/null&quot;&lt;/code&gt; ，在Windows上为 &lt;code&gt;&quot;NUL&quot;&lt;/code&gt; 。它代表OS上的一个文件，该文件丢弃所有写入，并在读取时返回文件结尾。</target>
        </trans-unit>
        <trans-unit id="dcce1b155d7ba710a217cbe25a9d300531eefadf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;o&lt;/code&gt;: convert an integer argument to unsigned octal. The flag &lt;code&gt;#&lt;/code&gt; adds a &lt;code&gt;0&lt;/code&gt; prefix to non zero values.</source>
          <target state="translated">&lt;code&gt;o&lt;/code&gt; ：将整数参数转换为无符号八进制。标志 &lt;code&gt;#&lt;/code&gt; 将 &lt;code&gt;0&lt;/code&gt; 前缀添加到非零值。</target>
        </trans-unit>
        <trans-unit id="492514ca586cee7362db4e52ede0596d964a9a4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;o&lt;/code&gt;: reads an unsigned octal integer (&lt;code&gt;[0-7]+&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;o&lt;/code&gt; ：读取无符号八进制整数（ &lt;code&gt;[0-7]+&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f80ab966932e22a7218b10b794a92d0e3266d44e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ocaml_version&lt;/code&gt; is the version of OCaml.</source>
          <target state="translated">&lt;code&gt;ocaml_version&lt;/code&gt; 是OCaml的版本。</target>
        </trans-unit>
        <trans-unit id="82ae3ef1efd05259b6c828cd28814d2e07493625" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ocaml_version&lt;/code&gt; is the version of OCaml. It is a string of the form &lt;code&gt;&quot;major.minor[.patchlevel][(+|~)additional-info]&quot;&lt;/code&gt;, where &lt;code&gt;major&lt;/code&gt;, &lt;code&gt;minor&lt;/code&gt;, and &lt;code&gt;patchlevel&lt;/code&gt; are integers, and &lt;code&gt;additional-info&lt;/code&gt; is an arbitrary string. The &lt;code&gt;[.patchlevel]&lt;/code&gt; part is absent for versions anterior to 3.08.0. The &lt;code&gt;[(+|~)additional-info]&lt;/code&gt; part may be absent.</source>
          <target state="translated">&lt;code&gt;ocaml_version&lt;/code&gt; 是OCaml的版本。它是形式为 &lt;code&gt;&quot;major.minor[.patchlevel][(+|~)additional-info]&quot;&lt;/code&gt; &lt;code&gt;patchlevel&lt;/code&gt; ，其中 &lt;code&gt;major&lt;/code&gt; ， &lt;code&gt;minor&lt;/code&gt; 和patchlevel是整数， &lt;code&gt;additional-info&lt;/code&gt; 是任意字符串。的 &lt;code&gt;[.patchlevel]&lt;/code&gt; 部分是缺席版本前方3.08.0。的 &lt;code&gt;[(+|~)additional-info]&lt;/code&gt; 部分可以不存在。</target>
        </trans-unit>
        <trans-unit id="8ff94874c4ca7fa6133a807f24a45af823e1fa0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;of_char&amp;nbsp;c&lt;/code&gt; is &lt;code&gt;c&lt;/code&gt; as a Unicode character.</source>
          <target state="translated">&lt;code&gt;of_char&amp;nbsp;c&lt;/code&gt; 是 &lt;code&gt;c&lt;/code&gt; 作为Unicode字符。</target>
        </trans-unit>
        <trans-unit id="7a785bb57d09bb63ddb77b563966a5c39bf88888" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;of_float&amp;nbsp;x&lt;/code&gt; truncates &lt;code&gt;x&lt;/code&gt; to an integer.</source>
          <target state="translated">&lt;code&gt;of_float&amp;nbsp;x&lt;/code&gt; 截短 &lt;code&gt;x&lt;/code&gt; 为整数。</target>
        </trans-unit>
        <trans-unit id="6c7c04a303d91e99603fa15fdaab48f48e3392b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;of_float&amp;nbsp;x&lt;/code&gt; truncates &lt;code&gt;x&lt;/code&gt; to an integer. The result is unspecified if the argument is &lt;code&gt;nan&lt;/code&gt; or falls outside the range of representable integers.</source>
          <target state="translated">&lt;code&gt;of_float&amp;nbsp;x&lt;/code&gt; 截短 &lt;code&gt;x&lt;/code&gt; 为整数。如果参数为 &lt;code&gt;nan&lt;/code&gt; 或不在可表示的整数范围内，则结果不确定。</target>
        </trans-unit>
        <trans-unit id="30d2e637bd8c4fa5edda5737753d8f4dab6581cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;of_int&amp;nbsp;i&lt;/code&gt; is &lt;code&gt;i&lt;/code&gt; as a Unicode character.</source>
          <target state="translated">&lt;code&gt;of_int&amp;nbsp;i&lt;/code&gt; 是 &lt;code&gt;i&lt;/code&gt; 作为Unicode字符。</target>
        </trans-unit>
        <trans-unit id="53ddfbf5e9f6f5539adbe56c70ddcce5ab930bbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;of_list&amp;nbsp;l&lt;/code&gt; creates a set from a list of elements.</source>
          <target state="translated">&lt;code&gt;of_list&amp;nbsp;l&lt;/code&gt; 从元素列表创建一个集合。</target>
        </trans-unit>
        <trans-unit id="63b93eed34dc0ff1101847014fccb9a3ff5d21cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;of_list&amp;nbsp;l&lt;/code&gt; creates a set from a list of elements. This is usually more efficient than folding &lt;code&gt;add&lt;/code&gt; over the list, except perhaps for lists with many duplicated elements.</source>
          <target state="translated">&lt;code&gt;of_list&amp;nbsp;l&lt;/code&gt; 从元素列表创建一个集合。通常，这比在列表上折叠 &lt;code&gt;add&lt;/code&gt; 更为有效，但对于具有许多重复元素的列表而言可能除外。</target>
        </trans-unit>
        <trans-unit id="6008c4b645b733f331ba5e88c41abf239792ff80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;of_list&amp;nbsp;l&lt;/code&gt; returns a fresh array containing the elements of &lt;code&gt;l&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;of_list&amp;nbsp;l&lt;/code&gt; 返回包含 &lt;code&gt;l&lt;/code&gt; 元素的新数组。</target>
        </trans-unit>
        <trans-unit id="a0f35ecb53d6c13894d1d3e4e9967d942256d11e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;of_list&amp;nbsp;l&lt;/code&gt; returns a fresh floatarray containing the elements of &lt;code&gt;l&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;of_list&amp;nbsp;l&lt;/code&gt; 返回包含 &lt;code&gt;l&lt;/code&gt; 元素的新鲜float数组。</target>
        </trans-unit>
        <trans-unit id="3257c3b1789765c5474d09d6b35f73852b91125a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;of_seq&amp;nbsp;s&lt;/code&gt; is a string made of the sequence's characters.</source>
          <target state="translated">&lt;code&gt;of_seq&amp;nbsp;s&lt;/code&gt; 是由序列字符组成的字符串。</target>
        </trans-unit>
        <trans-unit id="867ae66c6f9136cb726f37214a44b2d1dbcbef0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ok&amp;nbsp;v&lt;/code&gt; is &lt;code&gt;Ok&amp;nbsp;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ok&amp;nbsp;v&lt;/code&gt; 是 &lt;code&gt;Ok&amp;nbsp;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66774175d7c985e51dab5147ea1b63af2c6d8626" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;one&lt;/code&gt; is the integer &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;one&lt;/code&gt; 是整数 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="801dd60aec7548ba57b8cba701b844cdf6c246e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;open_in_gen&amp;nbsp;mode&amp;nbsp;perm&amp;nbsp;filename&lt;/code&gt; opens the named file for reading, as described above.</source>
          <target state="translated">&lt;code&gt;open_in_gen&amp;nbsp;mode&amp;nbsp;perm&amp;nbsp;filename&lt;/code&gt; 打开已命名的文件以供读取。</target>
        </trans-unit>
        <trans-unit id="f9ef80008dc43e3360f8603310d5136a7890fac6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;open_in_gen&amp;nbsp;mode&amp;nbsp;perm&amp;nbsp;filename&lt;/code&gt; opens the named file for reading, as described above. The extra arguments &lt;code&gt;mode&lt;/code&gt; and &lt;code&gt;perm&lt;/code&gt; specify the opening mode and file permissions. &lt;a href=&quot;stdlib#VALopen_in&quot;&gt;&lt;code&gt;open_in&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdlib#VALopen_in_bin&quot;&gt;&lt;code&gt;open_in_bin&lt;/code&gt;&lt;/a&gt; are special cases of this function.</source>
          <target state="translated">&lt;code&gt;open_in_gen&amp;nbsp;mode&amp;nbsp;perm&amp;nbsp;filename&lt;/code&gt; 打开已命名的文件以供读取。额外的参数 &lt;code&gt;mode&lt;/code&gt; 和 &lt;code&gt;perm&lt;/code&gt; 指定打开模式和文件许可权。&lt;a href=&quot;stdlib#VALopen_in&quot;&gt; &lt;code&gt;open_in&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;stdlib#VALopen_in_bin&quot;&gt; &lt;code&gt;open_in_bin&lt;/code&gt; &lt;/a&gt;是此函数的特例。</target>
        </trans-unit>
        <trans-unit id="4c634221b6613e46e494ecfa9277e37141d3a183" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;open_out_gen&amp;nbsp;mode&amp;nbsp;perm&amp;nbsp;filename&lt;/code&gt; opens the named file for writing, as described above.</source>
          <target state="translated">&lt;code&gt;open_out_gen&amp;nbsp;mode&amp;nbsp;perm&amp;nbsp;filename&lt;/code&gt; 打开指定的文件进行写入。</target>
        </trans-unit>
        <trans-unit id="f18adaa0ca0e01c5baa8e5c5f5b15b823a244929" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;open_out_gen&amp;nbsp;mode&amp;nbsp;perm&amp;nbsp;filename&lt;/code&gt; opens the named file for writing, as described above. The extra argument &lt;code&gt;mode&lt;/code&gt; specifies the opening mode. The extra argument &lt;code&gt;perm&lt;/code&gt; specifies the file permissions, in case the file must be created. &lt;a href=&quot;stdlib#VALopen_out&quot;&gt;&lt;code&gt;open_out&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdlib#VALopen_out_bin&quot;&gt;&lt;code&gt;open_out_bin&lt;/code&gt;&lt;/a&gt; are special cases of this function.</source>
          <target state="translated">&lt;code&gt;open_out_gen&amp;nbsp;mode&amp;nbsp;perm&amp;nbsp;filename&lt;/code&gt; 打开指定的文件进行写入。额外的参数 &lt;code&gt;mode&lt;/code&gt; 指定打开模式。如果必须创建文件，则额外的参数 &lt;code&gt;perm&lt;/code&gt; 指定文件许可权。&lt;a href=&quot;stdlib#VALopen_out&quot;&gt; &lt;code&gt;open_out&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;stdlib#VALopen_out_bin&quot;&gt; &lt;code&gt;open_out_bin&lt;/code&gt; &lt;/a&gt;是此函数的特例。</target>
        </trans-unit>
        <trans-unit id="744ac82043b90acdd64de9091cf869c8e45a0012" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;open_tbox&amp;nbsp;()&lt;/code&gt; opens a new tabulation box.</source>
          <target state="translated">&lt;code&gt;open_tbox&amp;nbsp;()&lt;/code&gt; 打开一个新的列表框。</target>
        </trans-unit>
        <trans-unit id="922b72ebe248cdfa7aeefede5bdf1984b49bbb43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;out_newline&lt;/code&gt; is called to open a new line when the pretty-printer splits the line.</source>
          <target state="translated">&lt;code&gt;out_newline&lt;/code&gt; 漂亮打印机将行拆分时，将调用out_newline以打开新行。</target>
        </trans-unit>
        <trans-unit id="9c1b3ccd452347a288a32f952e3fa01166d3ad6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output&amp;nbsp;oc&amp;nbsp;buf&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; writes &lt;code&gt;len&lt;/code&gt; characters from byte sequence &lt;code&gt;buf&lt;/code&gt;, starting at offset &lt;code&gt;pos&lt;/code&gt;, to the given output channel &lt;code&gt;oc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;output&amp;nbsp;oc&amp;nbsp;buf&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; 将字节序列 &lt;code&gt;buf&lt;/code&gt; 中的 &lt;code&gt;len&lt;/code&gt; 个字符（从偏移 &lt;code&gt;pos&lt;/code&gt; 开始）写入给定的输出通道 &lt;code&gt;oc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e8d0708cf63573852517d5d9e595e0b4bcbdfe3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output_buffer&amp;nbsp;oc&amp;nbsp;b&lt;/code&gt; writes the current contents of buffer &lt;code&gt;b&lt;/code&gt; on the output channel &lt;code&gt;oc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;output_buffer&amp;nbsp;oc&amp;nbsp;b&lt;/code&gt; 将缓冲区 &lt;code&gt;b&lt;/code&gt; 的当前内容写入输出通道 &lt;code&gt;oc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3f1f8168148006d672922c560fda5d1744a5f97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;partition&amp;nbsp;f&amp;nbsp;l&lt;/code&gt; returns a pair of lists &lt;code&gt;(l1,&amp;nbsp;l2)&lt;/code&gt;, where &lt;code&gt;l1&lt;/code&gt; is the list of all the elements of &lt;code&gt;l&lt;/code&gt; that satisfy the predicate &lt;code&gt;f&lt;/code&gt;, and &lt;code&gt;l2&lt;/code&gt; is the list of all the elements of &lt;code&gt;l&lt;/code&gt; that do not satisfy &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;partition&amp;nbsp;f&amp;nbsp;l&lt;/code&gt; 返回一对列表 &lt;code&gt;(l1,&amp;nbsp;l2)&lt;/code&gt; ，其中 &lt;code&gt;l1&lt;/code&gt; 是所有的要素列表 &lt;code&gt;l&lt;/code&gt; 满足谓词 &lt;code&gt;f&lt;/code&gt; ，并且 &lt;code&gt;l2&lt;/code&gt; 是所有的要素列表 &lt;code&gt;l&lt;/code&gt; 不满足 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ecaf2cec460661671c6abf2941ef7277090a8919" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;partition&amp;nbsp;f&amp;nbsp;l&lt;/code&gt; returns a pair of lists &lt;code&gt;(l1,&amp;nbsp;l2)&lt;/code&gt;, where &lt;code&gt;l1&lt;/code&gt; is the list of all the elements of &lt;code&gt;l&lt;/code&gt; that satisfy the predicate &lt;code&gt;f&lt;/code&gt;, and &lt;code&gt;l2&lt;/code&gt; is the list of all the elements of &lt;code&gt;l&lt;/code&gt; that do not satisfy &lt;code&gt;f&lt;/code&gt;. The order of the elements in the input list is preserved.</source>
          <target state="translated">&lt;code&gt;partition&amp;nbsp;f&amp;nbsp;l&lt;/code&gt; 返回一对列表 &lt;code&gt;(l1,&amp;nbsp;l2)&lt;/code&gt; ，其中 &lt;code&gt;l1&lt;/code&gt; 是所有的要素列表 &lt;code&gt;l&lt;/code&gt; 满足谓词 &lt;code&gt;f&lt;/code&gt; ，并且 &lt;code&gt;l2&lt;/code&gt; 是所有的要素列表 &lt;code&gt;l&lt;/code&gt; 不满足 &lt;code&gt;f&lt;/code&gt; 。输入列表中元素的顺序将保留。</target>
        </trans-unit>
        <trans-unit id="75a11180fb41de554b7e12f7d19713d8830fee51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;partition&amp;nbsp;f&amp;nbsp;m&lt;/code&gt; returns a pair of maps &lt;code&gt;(m1,&amp;nbsp;m2)&lt;/code&gt;, where &lt;code&gt;m1&lt;/code&gt; contains all the bindings of &lt;code&gt;m&lt;/code&gt; that satisfy the predicate &lt;code&gt;f&lt;/code&gt;, and &lt;code&gt;m2&lt;/code&gt; is the map with all the bindings of &lt;code&gt;m&lt;/code&gt; that do not satisfy &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;partition&amp;nbsp;f&amp;nbsp;m&lt;/code&gt; 返回一对映射 &lt;code&gt;(m1,&amp;nbsp;m2)&lt;/code&gt; ，其中 &lt;code&gt;m1&lt;/code&gt; 包含满足谓词 &lt;code&gt;f&lt;/code&gt; 的 &lt;code&gt;m&lt;/code&gt; 的所有绑定，而 &lt;code&gt;m2&lt;/code&gt; 是具有不满足 &lt;code&gt;f&lt;/code&gt; 的 &lt;code&gt;m&lt;/code&gt; 的所有绑定的映射。</target>
        </trans-unit>
        <trans-unit id="571d67dd0134c529950fbce5ca31af968ae08416" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;partition&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; returns a pair of sets &lt;code&gt;(s1,&amp;nbsp;s2)&lt;/code&gt;, where &lt;code&gt;s1&lt;/code&gt; is the set of all the elements of &lt;code&gt;s&lt;/code&gt; that satisfy the predicate &lt;code&gt;f&lt;/code&gt;, and &lt;code&gt;s2&lt;/code&gt; is the set of all the elements of &lt;code&gt;s&lt;/code&gt; that do not satisfy &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;partition&amp;nbsp;f&amp;nbsp;s&lt;/code&gt; 回报的一对集 &lt;code&gt;(s1,&amp;nbsp;s2)&lt;/code&gt; ，其中 &lt;code&gt;s1&lt;/code&gt; 是所述集合中的所有的元件的 &lt;code&gt;s&lt;/code&gt; 满足谓词 &lt;code&gt;f&lt;/code&gt; ，并且 &lt;code&gt;s2&lt;/code&gt; 是一组所有的元件的 &lt;code&gt;s&lt;/code&gt; 不满足 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="321c5e18095da0bd710fce2e870e3b5429658e25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;partition&amp;nbsp;p&amp;nbsp;l&lt;/code&gt; returns a pair of lists &lt;code&gt;(l1,&amp;nbsp;l2)&lt;/code&gt;, where &lt;code&gt;l1&lt;/code&gt; is the list of all the elements of &lt;code&gt;l&lt;/code&gt; that satisfy the predicate &lt;code&gt;p&lt;/code&gt;, and &lt;code&gt;l2&lt;/code&gt; is the list of all the elements of &lt;code&gt;l&lt;/code&gt; that do not satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;partition&amp;nbsp;p&amp;nbsp;l&lt;/code&gt; 返回一对列表 &lt;code&gt;(l1,&amp;nbsp;l2)&lt;/code&gt; ，其中 &lt;code&gt;l1&lt;/code&gt; 是所有的要素列表 &lt;code&gt;l&lt;/code&gt; 满足谓词 &lt;code&gt;p&lt;/code&gt; ，并且 &lt;code&gt;l2&lt;/code&gt; 是所有的要素列表 &lt;code&gt;l&lt;/code&gt; 不满足 &lt;code&gt;p&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2fd08c669aa096fc5cdf18b49a927366cddd511c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;partition&amp;nbsp;p&amp;nbsp;l&lt;/code&gt; returns a pair of lists &lt;code&gt;(l1,&amp;nbsp;l2)&lt;/code&gt;, where &lt;code&gt;l1&lt;/code&gt; is the list of all the elements of &lt;code&gt;l&lt;/code&gt; that satisfy the predicate &lt;code&gt;p&lt;/code&gt;, and &lt;code&gt;l2&lt;/code&gt; is the list of all the elements of &lt;code&gt;l&lt;/code&gt; that do not satisfy &lt;code&gt;p&lt;/code&gt;. The order of the elements in the input list is preserved.</source>
          <target state="translated">&lt;code&gt;partition&amp;nbsp;p&amp;nbsp;l&lt;/code&gt; 返回一对列表 &lt;code&gt;(l1,&amp;nbsp;l2)&lt;/code&gt; ，其中 &lt;code&gt;l1&lt;/code&gt; 是所有的要素列表 &lt;code&gt;l&lt;/code&gt; 满足谓词 &lt;code&gt;p&lt;/code&gt; ，并且 &lt;code&gt;l2&lt;/code&gt; 是所有的要素列表 &lt;code&gt;l&lt;/code&gt; 不满足 &lt;code&gt;p&lt;/code&gt; 。输入列表中元素的顺序将保留。</target>
        </trans-unit>
        <trans-unit id="6be89f26f2706f1e3611c45ef8c030e4107e297e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;partition&amp;nbsp;p&amp;nbsp;m&lt;/code&gt; returns a pair of maps &lt;code&gt;(m1,&amp;nbsp;m2)&lt;/code&gt;, where &lt;code&gt;m1&lt;/code&gt; contains all the bindings of &lt;code&gt;m&lt;/code&gt; that satisfy the predicate &lt;code&gt;p&lt;/code&gt;, and &lt;code&gt;m2&lt;/code&gt; is the map with all the bindings of &lt;code&gt;m&lt;/code&gt; that do not satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;partition&amp;nbsp;p&amp;nbsp;m&lt;/code&gt; 返回一对映射 &lt;code&gt;(m1,&amp;nbsp;m2)&lt;/code&gt; ，其中 &lt;code&gt;m1&lt;/code&gt; 包含满足谓词 &lt;code&gt;p&lt;/code&gt; 的 &lt;code&gt;m&lt;/code&gt; 的所有绑定，而 &lt;code&gt;m2&lt;/code&gt; 是具有不满足 &lt;code&gt;p&lt;/code&gt; 的 &lt;code&gt;m&lt;/code&gt; 的所有绑定的映射。</target>
        </trans-unit>
        <trans-unit id="305ecf4b3678e8fe82a174e8254c000743a3eab0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;partition&amp;nbsp;p&amp;nbsp;s&lt;/code&gt; returns a pair of sets &lt;code&gt;(s1,&amp;nbsp;s2)&lt;/code&gt;, where &lt;code&gt;s1&lt;/code&gt; is the set of all the elements of &lt;code&gt;s&lt;/code&gt; that satisfy the predicate &lt;code&gt;p&lt;/code&gt;, and &lt;code&gt;s2&lt;/code&gt; is the set of all the elements of &lt;code&gt;s&lt;/code&gt; that do not satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;partition&amp;nbsp;p&amp;nbsp;s&lt;/code&gt; 返回一对集合 &lt;code&gt;(s1,&amp;nbsp;s2)&lt;/code&gt; ，其中 &lt;code&gt;s1&lt;/code&gt; 是 &lt;code&gt;s&lt;/code&gt; 满足谓词 &lt;code&gt;p&lt;/code&gt; 的所有元素的集合，而 &lt;code&gt;s2&lt;/code&gt; 是 &lt;code&gt;s&lt;/code&gt; 不满足 &lt;code&gt;p&lt;/code&gt; 的所有元素的集合。</target>
        </trans-unit>
        <trans-unit id="691caf44af408e251938ae6c77b3d7e2e345cb15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;partition&amp;nbsp;~f&amp;nbsp;l&lt;/code&gt; returns a pair of lists &lt;code&gt;(l1,&amp;nbsp;l2)&lt;/code&gt;, where &lt;code&gt;l1&lt;/code&gt; is the list of all the elements of &lt;code&gt;l&lt;/code&gt; that satisfy the predicate &lt;code&gt;f&lt;/code&gt;, and &lt;code&gt;l2&lt;/code&gt; is the list of all the elements of &lt;code&gt;l&lt;/code&gt; that do not satisfy &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;partition&amp;nbsp;~f&amp;nbsp;l&lt;/code&gt; 返回一对列表 &lt;code&gt;(l1,&amp;nbsp;l2)&lt;/code&gt; ，其中 &lt;code&gt;l1&lt;/code&gt; 是所有的要素列表 &lt;code&gt;l&lt;/code&gt; 满足谓词 &lt;code&gt;f&lt;/code&gt; ，并且 &lt;code&gt;l2&lt;/code&gt; 是所有的要素列表 &lt;code&gt;l&lt;/code&gt; 不满足 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="509522a5f6ac72f8445ffce595ed45ff28049d6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;partition&amp;nbsp;~f&amp;nbsp;l&lt;/code&gt; returns a pair of lists &lt;code&gt;(l1,&amp;nbsp;l2)&lt;/code&gt;, where &lt;code&gt;l1&lt;/code&gt; is the list of all the elements of &lt;code&gt;l&lt;/code&gt; that satisfy the predicate &lt;code&gt;f&lt;/code&gt;, and &lt;code&gt;l2&lt;/code&gt; is the list of all the elements of &lt;code&gt;l&lt;/code&gt; that do not satisfy &lt;code&gt;f&lt;/code&gt;. The order of the elements in the input list is preserved.</source>
          <target state="translated">&lt;code&gt;partition&amp;nbsp;~f&amp;nbsp;l&lt;/code&gt; 返回一对列表 &lt;code&gt;(l1,&amp;nbsp;l2)&lt;/code&gt; ，其中 &lt;code&gt;l1&lt;/code&gt; 是所有的要素列表 &lt;code&gt;l&lt;/code&gt; 满足谓词 &lt;code&gt;f&lt;/code&gt; ，并且 &lt;code&gt;l2&lt;/code&gt; 是所有的要素列表 &lt;code&gt;l&lt;/code&gt; 不满足 &lt;code&gt;f&lt;/code&gt; 。输入列表中元素的顺序将保留。</target>
        </trans-unit>
        <trans-unit id="41b7ac3941de5dc7179fff84a1c9dc36a6c06ae1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;partition&amp;nbsp;~f&amp;nbsp;m&lt;/code&gt; returns a pair of maps &lt;code&gt;(m1,&amp;nbsp;m2)&lt;/code&gt;, where &lt;code&gt;m1&lt;/code&gt; contains all the bindings of &lt;code&gt;m&lt;/code&gt; that satisfy the predicate &lt;code&gt;f&lt;/code&gt;, and &lt;code&gt;m2&lt;/code&gt; is the map with all the bindings of &lt;code&gt;m&lt;/code&gt; that do not satisfy &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;partition&amp;nbsp;~f&amp;nbsp;m&lt;/code&gt; 返回一对映射 &lt;code&gt;(m1,&amp;nbsp;m2)&lt;/code&gt; ，其中 &lt;code&gt;m1&lt;/code&gt; 包含满足谓词 &lt;code&gt;f&lt;/code&gt; 的 &lt;code&gt;m&lt;/code&gt; 的所有绑定，而 &lt;code&gt;m2&lt;/code&gt; 是具有不满足 &lt;code&gt;f&lt;/code&gt; 的 &lt;code&gt;m&lt;/code&gt; 的所有绑定的映射。</target>
        </trans-unit>
        <trans-unit id="033f40875dddeab9a405ae7d04633c323acd647f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;partition&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; returns a pair of sets &lt;code&gt;(s1,&amp;nbsp;s2)&lt;/code&gt;, where &lt;code&gt;s1&lt;/code&gt; is the set of all the elements of &lt;code&gt;s&lt;/code&gt; that satisfy the predicate &lt;code&gt;f&lt;/code&gt;, and &lt;code&gt;s2&lt;/code&gt; is the set of all the elements of &lt;code&gt;s&lt;/code&gt; that do not satisfy &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;partition&amp;nbsp;~f&amp;nbsp;s&lt;/code&gt; 返回一对集合 &lt;code&gt;(s1,&amp;nbsp;s2)&lt;/code&gt; ，其中 &lt;code&gt;s1&lt;/code&gt; 是 &lt;code&gt;s&lt;/code&gt; 满足谓词 &lt;code&gt;f&lt;/code&gt; 的所有元素的集合，而 &lt;code&gt;s2&lt;/code&gt; 是 &lt;code&gt;s&lt;/code&gt; 满足 &lt;code&gt;f&lt;/code&gt; 的所有元素的集合。</target>
        </trans-unit>
        <trans-unit id="861a89a0e834ccbb4c03c021ecee23adc6e705d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;partition_map&amp;nbsp;f&amp;nbsp;l&lt;/code&gt; returns a pair of lists &lt;code&gt;(l1,&amp;nbsp;l2)&lt;/code&gt; such that, for each element &lt;code&gt;x&lt;/code&gt; of the input list &lt;code&gt;l&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;partition_map&amp;nbsp;f&amp;nbsp;l&lt;/code&gt; 返回一对列表 &lt;code&gt;(l1,&amp;nbsp;l2)&lt;/code&gt; ，以便对于输入列表 &lt;code&gt;l&lt;/code&gt; 的每个元素 &lt;code&gt;x&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="386ddc944d0a831e604a38ac2cd6acab92f0b32c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;partition_map&amp;nbsp;f&amp;nbsp;l&lt;/code&gt; returns a pair of lists &lt;code&gt;(l1,&amp;nbsp;l2)&lt;/code&gt; such that, for each element &lt;code&gt;x&lt;/code&gt; of the input list &lt;code&gt;l&lt;/code&gt;: if &lt;code&gt;f&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;Left&amp;nbsp;y1&lt;/code&gt;, then &lt;code&gt;y1&lt;/code&gt; is in &lt;code&gt;l1&lt;/code&gt;, and, if &lt;code&gt;f&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;Right&amp;nbsp;y2&lt;/code&gt;, then &lt;code&gt;y2&lt;/code&gt; is in &lt;code&gt;l2&lt;/code&gt;. The output elements are included in &lt;code&gt;l1&lt;/code&gt; and &lt;code&gt;l2&lt;/code&gt; in the same relative order as the corresponding input elements in &lt;code&gt;l&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;partition_map&amp;nbsp;f&amp;nbsp;l&lt;/code&gt; 返回一对列表 &lt;code&gt;(l1,&amp;nbsp;l2)&lt;/code&gt; ，以便对于输入列表 &lt;code&gt;l&lt;/code&gt; 的每个元素 &lt;code&gt;x&lt;/code&gt; ：如果 &lt;code&gt;f&amp;nbsp;x&lt;/code&gt; 为 &lt;code&gt;Left&amp;nbsp;y1&lt;/code&gt; ，则 &lt;code&gt;y1&lt;/code&gt; 在 &lt;code&gt;l1&lt;/code&gt; 中；如果 &lt;code&gt;f&amp;nbsp;x&lt;/code&gt; 为 &lt;code&gt;Right&amp;nbsp;y2&lt;/code&gt; ，则 &lt;code&gt;y2&lt;/code&gt; 在 &lt;code&gt;l2&lt;/code&gt; 中。。输出元件包括在 &lt;code&gt;l1&lt;/code&gt; 和 &lt;code&gt;l2&lt;/code&gt; 以相同的相对次序在相应的输入元件 &lt;code&gt;l&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b80678414041587f1d53d262207bac49038b1a6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;peek&amp;nbsp;q&lt;/code&gt; returns the first element in queue &lt;code&gt;q&lt;/code&gt;, without removing it from the queue, or raises &lt;a href=&quot;queue#EXCEPTIONEmpty&quot;&gt;&lt;code&gt;Queue.Empty&lt;/code&gt;&lt;/a&gt; if the queue is empty.</source>
          <target state="translated">&lt;code&gt;peek&amp;nbsp;q&lt;/code&gt; 返回队列 &lt;code&gt;q&lt;/code&gt; 中的第一个元素，而不将其从队列中删除，或者如果队列为空，则引发&lt;a href=&quot;queue#EXCEPTIONEmpty&quot;&gt; &lt;code&gt;Queue.Empty&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a91982f2a9d6d9ab72c0c128e668ccdba7511dbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;peek_opt&amp;nbsp;q&lt;/code&gt; returns the first element in queue &lt;code&gt;q&lt;/code&gt;, without removing it from the queue, or returns &lt;code&gt;None&lt;/code&gt; if the queue is empty.</source>
          <target state="translated">&lt;code&gt;peek_opt&amp;nbsp;q&lt;/code&gt; 返回队列 &lt;code&gt;q&lt;/code&gt; 中的第一个元素，而不将其从队列中删除；如果队列为空，则返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a075250ad2eb4965010173d749fb4c3714800025" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;polar&amp;nbsp;norm&amp;nbsp;arg&lt;/code&gt; returns the complex having norm &lt;code&gt;norm&lt;/code&gt; and argument &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;polar&amp;nbsp;norm&amp;nbsp;arg&lt;/code&gt; 返回具有范 &lt;code&gt;norm&lt;/code&gt; 和自变量 &lt;code&gt;arg&lt;/code&gt; 的复数。</target>
        </trans-unit>
        <trans-unit id="77325d7aa28fedceb140363e3de50a619ea6c4fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pop&amp;nbsp;s&lt;/code&gt; removes and returns the topmost element in stack &lt;code&gt;s&lt;/code&gt;, or raises &lt;a href=&quot;stack#EXCEPTIONEmpty&quot;&gt;&lt;code&gt;Stack.Empty&lt;/code&gt;&lt;/a&gt; if the stack is empty.</source>
          <target state="translated">&lt;code&gt;pop&amp;nbsp;s&lt;/code&gt; 移除并返回堆栈 &lt;code&gt;s&lt;/code&gt; 中最顶层的元素，如果堆栈为空，则引发&lt;a href=&quot;stack#EXCEPTIONEmpty&quot;&gt; &lt;code&gt;Stack.Empty&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ba1421238538104cd06388612aef65b8f50ac57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pop&lt;/code&gt; is a synonym for &lt;code&gt;take&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pop&lt;/code&gt; 是 &lt;code&gt;take&lt;/code&gt; 的同义词。</target>
        </trans-unit>
        <trans-unit id="38bd5dc640dd7a1ba98fd058877bf30e4dfc8597" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pop_opt&amp;nbsp;s&lt;/code&gt; removes and returns the topmost element in stack &lt;code&gt;s&lt;/code&gt;, or returns &lt;code&gt;None&lt;/code&gt; if the stack is empty.</source>
          <target state="translated">&lt;code&gt;pop_opt&amp;nbsp;s&lt;/code&gt; 移除并返回堆栈 &lt;code&gt;s&lt;/code&gt; 中最顶层的元素，如果堆栈为空，则返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4687c447ac0de31d9b70ff6c852c9b2b70cbf525" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_close_stag&amp;nbsp;ppf&amp;nbsp;()&lt;/code&gt; closes the most recently opened semantic tag &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pp_close_stag&amp;nbsp;ppf&amp;nbsp;()&lt;/code&gt; 关闭最近打开的语义标签 &lt;code&gt;t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d82e0252debd1bd85fb28097d60eb5b56b3449b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_open_box&amp;nbsp;ppf&amp;nbsp;d&lt;/code&gt; opens a new compacting pretty-printing box with offset &lt;code&gt;d&lt;/code&gt; in the formatter &lt;code&gt;ppf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pp_open_box&amp;nbsp;ppf&amp;nbsp;d&lt;/code&gt; 打开一个新的压实漂亮印刷制盒与偏移 &lt;code&gt;d&lt;/code&gt; 在格式化 &lt;code&gt;ppf&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5487a964e8684c9803a7024cc68f1c5086023f6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_open_hbox&amp;nbsp;ppf&amp;nbsp;()&lt;/code&gt; opens a new 'horizontal' pretty-printing box.</source>
          <target state="translated">&lt;code&gt;pp_open_hbox&amp;nbsp;ppf&amp;nbsp;()&lt;/code&gt; 打开一个新的&amp;ldquo;水平&amp;rdquo;漂亮打印框。</target>
        </trans-unit>
        <trans-unit id="4407e5c06de2a35988f0a290f016a9897109601d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_open_hovbox&amp;nbsp;ppf&amp;nbsp;d&lt;/code&gt; opens a new 'horizontal-or-vertical' pretty-printing box with offset &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pp_open_hovbox&amp;nbsp;ppf&amp;nbsp;d&lt;/code&gt; 使用偏移 &lt;code&gt;d&lt;/code&gt; 打开一个新的&amp;ldquo;水平或垂直&amp;rdquo;漂亮打印框。</target>
        </trans-unit>
        <trans-unit id="c9e73697a26755e8d7188c3b6abd75b0c32aff51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_open_hvbox&amp;nbsp;ppf&amp;nbsp;d&lt;/code&gt; opens a new 'horizontal/vertical' pretty-printing box with offset &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pp_open_hvbox&amp;nbsp;ppf&amp;nbsp;d&lt;/code&gt; 使用偏移 &lt;code&gt;d&lt;/code&gt; 打开一个新的&amp;ldquo;水平/垂直&amp;rdquo;漂亮打印框。</target>
        </trans-unit>
        <trans-unit id="1899d95f208a54f9f92f9989bd2be815eb0af020" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_open_stag&amp;nbsp;ppf&amp;nbsp;t&lt;/code&gt; opens the semantic tag named &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pp_open_stag&amp;nbsp;ppf&amp;nbsp;t&lt;/code&gt; 打开名为 &lt;code&gt;t&lt;/code&gt; 的语义标签。</target>
        </trans-unit>
        <trans-unit id="0971ebbed0b5a09bd20f93084f2895a5ff7438d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_open_vbox&amp;nbsp;ppf&amp;nbsp;d&lt;/code&gt; opens a new 'vertical' pretty-printing box with offset &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pp_open_vbox&amp;nbsp;ppf&amp;nbsp;d&lt;/code&gt; 打开一个新的' d '垂直打印框，其偏移量为 &lt;code&gt;d&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8847338f8d42fc515aa9193323d72b968caf6bed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_print_as&amp;nbsp;ppf&amp;nbsp;len&amp;nbsp;s&lt;/code&gt; prints &lt;code&gt;s&lt;/code&gt; in the current pretty-printing box.</source>
          <target state="translated">&lt;code&gt;pp_print_as&amp;nbsp;ppf&amp;nbsp;len&amp;nbsp;s&lt;/code&gt; 在当前的漂亮打印框中打印 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f14f0dcfb3404146d00551cd1e350f681ce91231" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_print_as&amp;nbsp;ppf&amp;nbsp;len&amp;nbsp;s&lt;/code&gt; prints &lt;code&gt;s&lt;/code&gt; in the current pretty-printing box. The pretty-printer formats &lt;code&gt;s&lt;/code&gt; as if it were of length &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pp_print_as&amp;nbsp;ppf&amp;nbsp;len&amp;nbsp;s&lt;/code&gt; 在当前的漂亮打印框中打印 &lt;code&gt;s&lt;/code&gt; 。漂亮打印机将 &lt;code&gt;s&lt;/code&gt; 格式化为长度为 &lt;code&gt;len&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4db82ad790d94620396c795a5bfd768d4eeabcb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_print_break&amp;nbsp;ppf&amp;nbsp;nspaces&amp;nbsp;offset&lt;/code&gt; emits a 'full' break hint: the pretty-printer may split the line at this point, otherwise it prints &lt;code&gt;nspaces&lt;/code&gt; spaces.</source>
          <target state="translated">&lt;code&gt;pp_print_break&amp;nbsp;ppf&amp;nbsp;nspaces&amp;nbsp;offset&lt;/code&gt; 会发出&amp;ldquo;完整&amp;rdquo;的中断提示：漂亮打印机可能会在此时拆分行，否则它将打印 &lt;code&gt;nspaces&lt;/code&gt; 空间。</target>
        </trans-unit>
        <trans-unit id="b4c535a99dd019b81a2d3ab8e6a5ceb4bf7056ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_print_custom_break&amp;nbsp;ppf&amp;nbsp;~fits:(s1,&amp;nbsp;n,&amp;nbsp;s2)&amp;nbsp;~breaks:(s3,&amp;nbsp;m,&amp;nbsp;s4)&lt;/code&gt; emits a custom break hint: the pretty-printer may split the line at this point.</source>
          <target state="translated">&lt;code&gt;pp_print_custom_break&amp;nbsp;ppf&amp;nbsp;~fits:(s1,&amp;nbsp;n,&amp;nbsp;s2)&amp;nbsp;~breaks:(s3,&amp;nbsp;m,&amp;nbsp;s4)&lt;/code&gt; 发出自定义的中断提示：漂亮打印机此时可能会拆分行。</target>
        </trans-unit>
        <trans-unit id="4933b380339799d0f46ee7cbfe9b4b3f017a9037" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_print_cut&amp;nbsp;ppf&amp;nbsp;()&lt;/code&gt; emits a 'cut' break hint: the pretty-printer may split the line at this point, otherwise it prints nothing.</source>
          <target state="translated">&lt;code&gt;pp_print_cut&amp;nbsp;ppf&amp;nbsp;()&lt;/code&gt; 发出&amp;ldquo;剪切&amp;rdquo;中断提示：漂亮打印机此时可能会拆分行，否则不打印任何内容。</target>
        </trans-unit>
        <trans-unit id="60b6ccace9721b0dca9ee28f2215d165e3a15e41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_print_cut&amp;nbsp;ppf&amp;nbsp;()&lt;/code&gt; is equivalent to &lt;code&gt;pp_print_break&amp;nbsp;ppf&amp;nbsp;0&amp;nbsp;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pp_print_cut&amp;nbsp;ppf&amp;nbsp;()&lt;/code&gt; 等效于 &lt;code&gt;pp_print_break&amp;nbsp;ppf&amp;nbsp;0&amp;nbsp;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9377c635b4c13e4186dc5148f95c8930b832da61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_print_list&amp;nbsp;?pp_sep&amp;nbsp;pp_v&amp;nbsp;ppf&amp;nbsp;l&lt;/code&gt; prints items of list &lt;code&gt;l&lt;/code&gt;, using &lt;code&gt;pp_v&lt;/code&gt; to print each item, and calling &lt;code&gt;pp_sep&lt;/code&gt; between items (&lt;code&gt;pp_sep&lt;/code&gt; defaults to &lt;a href=&quot;format#VALpp_print_cut&quot;&gt;&lt;code&gt;Format.pp_print_cut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;pp_print_list&amp;nbsp;?pp_sep&amp;nbsp;pp_v&amp;nbsp;ppf&amp;nbsp;l&lt;/code&gt; 打印列表 &lt;code&gt;l&lt;/code&gt; 的项目，使用 &lt;code&gt;pp_v&lt;/code&gt; 打印每个项目，并在项目之间调用 &lt;code&gt;pp_sep&lt;/code&gt; （ &lt;code&gt;pp_sep&lt;/code&gt; 默认为&lt;a href=&quot;format#VALpp_print_cut&quot;&gt; &lt;code&gt;Format.pp_print_cut&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="07ad99e7f8a8db61227d7b23c30cc97d58256299" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_print_list&amp;nbsp;?pp_sep&amp;nbsp;pp_v&amp;nbsp;ppf&amp;nbsp;l&lt;/code&gt; prints items of list &lt;code&gt;l&lt;/code&gt;, using &lt;code&gt;pp_v&lt;/code&gt; to print each item, and calling &lt;code&gt;pp_sep&lt;/code&gt; between items (&lt;code&gt;pp_sep&lt;/code&gt; defaults to &lt;a href=&quot;format#VALpp_print_cut&quot;&gt;&lt;code&gt;Format.pp_print_cut&lt;/code&gt;&lt;/a&gt;. Does nothing on empty lists.</source>
          <target state="translated">&lt;code&gt;pp_print_list&amp;nbsp;?pp_sep&amp;nbsp;pp_v&amp;nbsp;ppf&amp;nbsp;l&lt;/code&gt; 打印列表 &lt;code&gt;l&lt;/code&gt; 的项目，使用 &lt;code&gt;pp_v&lt;/code&gt; 打印每个项目，并在项目之间调用 &lt;code&gt;pp_sep&lt;/code&gt; （ &lt;code&gt;pp_sep&lt;/code&gt; 默认为&lt;a href=&quot;format#VALpp_print_cut&quot;&gt; &lt;code&gt;Format.pp_print_cut&lt;/code&gt; &lt;/a&gt;。对空列表不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="c2ecb3d5e76288b08cc7752be312321d0b8b2061" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_print_option&amp;nbsp;?none&amp;nbsp;pp_v&amp;nbsp;ppf&amp;nbsp;o&lt;/code&gt; prints &lt;code&gt;o&lt;/code&gt; on &lt;code&gt;ppf&lt;/code&gt; using &lt;code&gt;pp_v&lt;/code&gt; if &lt;code&gt;o&lt;/code&gt; is &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; and &lt;code&gt;none&lt;/code&gt; if it is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pp_print_option&amp;nbsp;?none&amp;nbsp;pp_v&amp;nbsp;ppf&amp;nbsp;o&lt;/code&gt; 印刷 &lt;code&gt;o&lt;/code&gt; 在 &lt;code&gt;ppf&lt;/code&gt; 使用 &lt;code&gt;pp_v&lt;/code&gt; 如果 &lt;code&gt;o&lt;/code&gt; 是 &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; 并 &lt;code&gt;none&lt;/code&gt; 如果是 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="faf7ed3a1a6fb5ed71e49551f53c858cc0f868b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_print_option&amp;nbsp;?none&amp;nbsp;pp_v&amp;nbsp;ppf&amp;nbsp;o&lt;/code&gt; prints &lt;code&gt;o&lt;/code&gt; on &lt;code&gt;ppf&lt;/code&gt; using &lt;code&gt;pp_v&lt;/code&gt; if &lt;code&gt;o&lt;/code&gt; is &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; and &lt;code&gt;none&lt;/code&gt; if it is &lt;code&gt;None&lt;/code&gt;. &lt;code&gt;none&lt;/code&gt; prints nothing by default.</source>
          <target state="translated">&lt;code&gt;pp_print_option&amp;nbsp;?none&amp;nbsp;pp_v&amp;nbsp;ppf&amp;nbsp;o&lt;/code&gt; 印刷 &lt;code&gt;o&lt;/code&gt; 在 &lt;code&gt;ppf&lt;/code&gt; 使用 &lt;code&gt;pp_v&lt;/code&gt; 如果 &lt;code&gt;o&lt;/code&gt; 是 &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; 并 &lt;code&gt;none&lt;/code&gt; 如果是 &lt;code&gt;None&lt;/code&gt; 。默认情况下， &lt;code&gt;none&lt;/code&gt; 不打印任何内容。</target>
        </trans-unit>
        <trans-unit id="18bd3e8e4d3386e606c115b0e0480dc32f13f3d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_print_result&amp;nbsp;~ok&amp;nbsp;~error&amp;nbsp;ppf&amp;nbsp;r&lt;/code&gt; prints &lt;code&gt;r&lt;/code&gt; on &lt;code&gt;ppf&lt;/code&gt; using &lt;code&gt;ok&lt;/code&gt; if &lt;code&gt;r&lt;/code&gt; is &lt;code&gt;Ok&amp;nbsp;_&lt;/code&gt; and &lt;code&gt;error&lt;/code&gt; if &lt;code&gt;r&lt;/code&gt; is &lt;code&gt;Error&amp;nbsp;_&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pp_print_result&amp;nbsp;~ok&amp;nbsp;~error&amp;nbsp;ppf&amp;nbsp;r&lt;/code&gt; 打印 &lt;code&gt;r&lt;/code&gt; 上 &lt;code&gt;ppf&lt;/code&gt; 使用 &lt;code&gt;ok&lt;/code&gt; ，如果 &lt;code&gt;r&lt;/code&gt; 是 &lt;code&gt;Ok&amp;nbsp;_&lt;/code&gt; 和 &lt;code&gt;error&lt;/code&gt; ，如果 &lt;code&gt;r&lt;/code&gt; 是 &lt;code&gt;Error&amp;nbsp;_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0e8bfe939aed36bfa830ef792eb7931387d32a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_print_seq&amp;nbsp;?pp_sep&amp;nbsp;pp_v&amp;nbsp;ppf&amp;nbsp;s&lt;/code&gt; prints items of sequence &lt;code&gt;s&lt;/code&gt;, using &lt;code&gt;pp_v&lt;/code&gt; to print each item, and calling &lt;code&gt;pp_sep&lt;/code&gt; between items (&lt;code&gt;pp_sep&lt;/code&gt; defaults to &lt;a href=&quot;format#VALpp_print_cut&quot;&gt;&lt;code&gt;Format.pp_print_cut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;pp_print_seq&amp;nbsp;?pp_sep&amp;nbsp;pp_v&amp;nbsp;ppf&amp;nbsp;s&lt;/code&gt; 打印序列 &lt;code&gt;s&lt;/code&gt; 的项目，使用 &lt;code&gt;pp_v&lt;/code&gt; 打印每个项目，并在项目之间调用 &lt;code&gt;pp_sep&lt;/code&gt; （ &lt;code&gt;pp_sep&lt;/code&gt; 默认为&lt;a href=&quot;format#VALpp_print_cut&quot;&gt; &lt;code&gt;Format.pp_print_cut&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="82750290aa985fc3734f9a7f083168ba69afa147" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_print_seq&amp;nbsp;?pp_sep&amp;nbsp;pp_v&amp;nbsp;ppf&amp;nbsp;s&lt;/code&gt; prints items of sequence &lt;code&gt;s&lt;/code&gt;, using &lt;code&gt;pp_v&lt;/code&gt; to print each item, and calling &lt;code&gt;pp_sep&lt;/code&gt; between items (&lt;code&gt;pp_sep&lt;/code&gt; defaults to &lt;a href=&quot;format#VALpp_print_cut&quot;&gt;&lt;code&gt;Format.pp_print_cut&lt;/code&gt;&lt;/a&gt;. Does nothing on empty sequences.</source>
          <target state="translated">&lt;code&gt;pp_print_seq&amp;nbsp;?pp_sep&amp;nbsp;pp_v&amp;nbsp;ppf&amp;nbsp;s&lt;/code&gt; 打印序列 &lt;code&gt;s&lt;/code&gt; 的项目，使用 &lt;code&gt;pp_v&lt;/code&gt; 打印每个项目，并在项目之间调用 &lt;code&gt;pp_sep&lt;/code&gt; （ &lt;code&gt;pp_sep&lt;/code&gt; 默认为&lt;a href=&quot;format#VALpp_print_cut&quot;&gt; &lt;code&gt;Format.pp_print_cut&lt;/code&gt; &lt;/a&gt;。对空序列不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="2033e6b56d67be1a30c2549c066523870ee48642" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_print_space&amp;nbsp;ppf&amp;nbsp;()&lt;/code&gt; emits a 'space' break hint: the pretty-printer may split the line at this point, otherwise it prints one space.</source>
          <target state="translated">&lt;code&gt;pp_print_space&amp;nbsp;ppf&amp;nbsp;()&lt;/code&gt; 发出&amp;ldquo;空格&amp;rdquo;中断提示：漂亮打印机可能会在此时拆分行，否则它将打印一个空格。</target>
        </trans-unit>
        <trans-unit id="edf52ff9191354b22a970b0d6a2c831ed391780a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_print_space&amp;nbsp;ppf&amp;nbsp;()&lt;/code&gt; is equivalent to &lt;code&gt;pp_print_break&amp;nbsp;ppf&amp;nbsp;1&amp;nbsp;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pp_print_space&amp;nbsp;ppf&amp;nbsp;()&lt;/code&gt; 等效于 &lt;code&gt;pp_print_break&amp;nbsp;ppf&amp;nbsp;1&amp;nbsp;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f01d60cd02508a43b228ba508354b3502713d9c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_print_string&amp;nbsp;ppf&amp;nbsp;s&lt;/code&gt; prints &lt;code&gt;s&lt;/code&gt; in the current pretty-printing box.</source>
          <target state="translated">&lt;code&gt;pp_print_string&amp;nbsp;ppf&amp;nbsp;s&lt;/code&gt; 在当前漂亮的打印框中打印 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="371ee1ea4ff9d108c9695bc8f2309af1ca64b009" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_print_text&amp;nbsp;ppf&amp;nbsp;s&lt;/code&gt; prints &lt;code&gt;s&lt;/code&gt; with spaces and newlines respectively printed using &lt;a href=&quot;format#VALpp_print_space&quot;&gt;&lt;code&gt;Format.pp_print_space&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;format#VALpp_force_newline&quot;&gt;&lt;code&gt;Format.pp_force_newline&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;pp_print_text&amp;nbsp;ppf&amp;nbsp;s&lt;/code&gt; 打印 &lt;code&gt;s&lt;/code&gt; 与分别使用打印空格和换行符&lt;a href=&quot;format#VALpp_print_space&quot;&gt; &lt;code&gt;Format.pp_print_space&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;format#VALpp_force_newline&quot;&gt; &lt;code&gt;Format.pp_force_newline&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d09bc7c510ceb154605725d937a37a03aed7328b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_set_formatter_out_functions&amp;nbsp;ppf&amp;nbsp;out_funs&lt;/code&gt; Set all the pretty-printer output functions of &lt;code&gt;ppf&lt;/code&gt; to those of argument &lt;code&gt;out_funs&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;pp_set_formatter_out_functions&amp;nbsp;ppf&amp;nbsp;out_funs&lt;/code&gt; 设置所有漂亮的打印机输出功能 &lt;code&gt;ppf&lt;/code&gt; 这些说法 &lt;code&gt;out_funs&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="f1199881f9076c2daccc0d41beb49f86e3682f8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_set_formatter_output_functions&amp;nbsp;ppf&amp;nbsp;out&amp;nbsp;flush&lt;/code&gt; redirects the standard pretty-printer output functions to the functions &lt;code&gt;out&lt;/code&gt; and &lt;code&gt;flush&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pp_set_formatter_output_functions&amp;nbsp;ppf&amp;nbsp;out&amp;nbsp;flush&lt;/code&gt; 将标准漂亮打印机输出功能重定向到功能 &lt;code&gt;out&lt;/code&gt; 和 &lt;code&gt;flush&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73d1bbf7973b971cd85492639c719219fc251442" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_set_formatter_stag_functions&amp;nbsp;ppf&amp;nbsp;tag_funs&lt;/code&gt; changes the meaning of opening and closing semantic tag operations to use the functions in &lt;code&gt;tag_funs&lt;/code&gt; when printing on &lt;code&gt;ppf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pp_set_formatter_stag_functions&amp;nbsp;ppf&amp;nbsp;tag_funs&lt;/code&gt; 更改打开和关闭语义标签操作的含义，以在在 &lt;code&gt;ppf&lt;/code&gt; 上打印时使用 &lt;code&gt;tag_funs&lt;/code&gt; 中的功能。</target>
        </trans-unit>
        <trans-unit id="922105338483ef48afcf90fa9f7b1a0c64acfe68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_set_geometry&amp;nbsp;ppf&amp;nbsp;~max_indent&amp;nbsp;~margin&lt;/code&gt; sets both the margin and maximum indentation limit for &lt;code&gt;ppf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pp_set_geometry&amp;nbsp;ppf&amp;nbsp;~max_indent&amp;nbsp;~margin&lt;/code&gt; 套余量与最大压痕限制都 &lt;code&gt;ppf&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46b369523d38dd7f67131d0aec73e1dcddbc6d84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_set_margin&amp;nbsp;ppf&amp;nbsp;d&lt;/code&gt; sets the right margin to &lt;code&gt;d&lt;/code&gt; (in characters): the pretty-printer splits lines that overflow the right margin according to the break hints given.</source>
          <target state="translated">&lt;code&gt;pp_set_margin&amp;nbsp;ppf&amp;nbsp;d&lt;/code&gt; 将右边距设置为 &lt;code&gt;d&lt;/code&gt; （以字符为单位）：漂亮打印机根据给出的中断提示将溢出右边距的行拆分。</target>
        </trans-unit>
        <trans-unit id="54ab9a4c6a3c9d24f85d79b753c2b7594f995dab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_set_margin&amp;nbsp;ppf&amp;nbsp;d&lt;/code&gt; sets the right margin to &lt;code&gt;d&lt;/code&gt; (in characters): the pretty-printer splits lines that overflow the right margin according to the break hints given. Setting the margin to &lt;code&gt;d&lt;/code&gt; means that the formatting engine aims at printing at most &lt;code&gt;d-1&lt;/code&gt; characters per line. Nothing happens if &lt;code&gt;d&lt;/code&gt; is smaller than 2. If &lt;code&gt;d&lt;/code&gt; is too large, the right margin is set to the maximum admissible value (which is greater than &lt;code&gt;10&amp;nbsp;^&amp;nbsp;9&lt;/code&gt;). If &lt;code&gt;d&lt;/code&gt; is less than the current maximum indentation limit, the maximum indentation limit is decreased while trying to preserve a minimal ratio &lt;code&gt;max_indent/margin&amp;gt;=50%&lt;/code&gt; and if possible the current difference &lt;code&gt;margin&amp;nbsp;-&amp;nbsp;max_indent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pp_set_margin&amp;nbsp;ppf&amp;nbsp;d&lt;/code&gt; 将右边距设置为 &lt;code&gt;d&lt;/code&gt; （以字符为单位）：漂亮打印机根据给出的中断提示将溢出右边距的行分开。将页边距设置为 &lt;code&gt;d&lt;/code&gt; 意味着格式引擎旨在每行最多打印 &lt;code&gt;d-1&lt;/code&gt; 个字符。如果 &lt;code&gt;d&lt;/code&gt; 小于2，则什么也不会发生。如果 &lt;code&gt;d&lt;/code&gt; 太大，则将右边距设置为最大允许值（大于 &lt;code&gt;10&amp;nbsp;^&amp;nbsp;9&lt;/code&gt; ）。如果 &lt;code&gt;d&lt;/code&gt; 小于当前最大压痕极限，则最大压痕极限会减小，同时尝试保持最小比例 &lt;code&gt;max_indent/margin&amp;gt;=50%&lt;/code&gt; ，如果可能，则保持当前差异 &lt;code&gt;margin&amp;nbsp;-&amp;nbsp;max_indent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad7b1e9d8c64a6b02f0667eba85c86a9a7e7e164" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_set_mark_tags&amp;nbsp;ppf&amp;nbsp;b&lt;/code&gt; turns on or off the tag-marking operations.</source>
          <target state="translated">&lt;code&gt;pp_set_mark_tags&amp;nbsp;ppf&amp;nbsp;b&lt;/code&gt; 打开或关闭标签标记操作。</target>
        </trans-unit>
        <trans-unit id="9d344b8f37245e3922a8cbbcd477e3280962c80a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_set_max_boxes&amp;nbsp;ppf&amp;nbsp;max&lt;/code&gt; sets the maximum number of pretty-printing boxes simultaneously open.</source>
          <target state="translated">&lt;code&gt;pp_set_max_boxes&amp;nbsp;ppf&amp;nbsp;max&lt;/code&gt; 设置同时打开的精美打印盒的最大数量。</target>
        </trans-unit>
        <trans-unit id="c7ffa3dc8755ace85d0832db65a588d767d3c756" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_set_max_indent&amp;nbsp;ppf&amp;nbsp;d&lt;/code&gt; sets the maximum indentation limit of lines to &lt;code&gt;d&lt;/code&gt; (in characters): once this limit is reached, new pretty-printing boxes are rejected to the left, unless the enclosing box fully fits on the current line.</source>
          <target state="translated">&lt;code&gt;pp_set_max_indent&amp;nbsp;ppf&amp;nbsp;d&lt;/code&gt; 将行的最大缩进限制设置为 &lt;code&gt;d&lt;/code&gt; （以字符为单位）：一旦达到此限制，除非封闭框完全适合当前行，否则将拒绝左侧的新漂亮打印框。</target>
        </trans-unit>
        <trans-unit id="53a0e88da02a1b908e416c949b7f11880f1eff3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_set_max_indent&amp;nbsp;ppf&amp;nbsp;d&lt;/code&gt; sets the maximum indentation limit of lines to &lt;code&gt;d&lt;/code&gt; (in characters): once this limit is reached, new pretty-printing boxes are rejected to the left, unless the enclosing box fully fits on the current line. As an illustration,</source>
          <target state="translated">&lt;code&gt;pp_set_max_indent&amp;nbsp;ppf&amp;nbsp;d&lt;/code&gt; 将行的最大缩进限制设置为 &lt;code&gt;d&lt;/code&gt; （以字符为单位）：一旦达到此限制，除非封闭框完全适合当前行，否则将拒绝左侧的新漂亮打印框。举例来说，</target>
        </trans-unit>
        <trans-unit id="c9d9db436717ed675d18fdec4dcc8d8ff1eae082" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_set_print_tags&amp;nbsp;ppf&amp;nbsp;b&lt;/code&gt; turns on or off the tag-printing operations.</source>
          <target state="translated">&lt;code&gt;pp_set_print_tags&amp;nbsp;ppf&amp;nbsp;b&lt;/code&gt; 打开或关闭标签打印操作。</target>
        </trans-unit>
        <trans-unit id="85d5b786834752508aca507853e7458e6adce6a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_set_tags&amp;nbsp;ppf&amp;nbsp;b&lt;/code&gt; turns on or off the treatment of semantic tags (default is off).</source>
          <target state="translated">&lt;code&gt;pp_set_tags&amp;nbsp;ppf&amp;nbsp;b&lt;/code&gt; 打开或关闭语义标记的处理（默认为关闭）。</target>
        </trans-unit>
        <trans-unit id="970550c69d0062a16db72c2b840e4cff061fe9cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pp_update_geometry&amp;nbsp;ppf&amp;nbsp;(fun&amp;nbsp;geo&amp;nbsp;-&amp;gt;&amp;nbsp;{&amp;nbsp;geo&amp;nbsp;with&amp;nbsp;...&amp;nbsp;})&lt;/code&gt; lets you update a formatter's geometry in a way that is robust to extension of the &lt;code&gt;geometry&lt;/code&gt; record with new fields.</source>
          <target state="translated">&lt;code&gt;pp_update_geometry&amp;nbsp;ppf&amp;nbsp;(fun&amp;nbsp;geo&amp;nbsp;-&amp;gt;&amp;nbsp;{&amp;nbsp;geo&amp;nbsp;with&amp;nbsp;...&amp;nbsp;})&lt;/code&gt; 使您可以以一种格式健壮的方式更新格式化程序的几何，以使用新字段扩展 &lt;code&gt;geometry&lt;/code&gt; 记录。</target>
        </trans-unit>
        <trans-unit id="16726ed34ea914b4e3085d5f30c05c4fdd889614" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pred&amp;nbsp;u&lt;/code&gt; is the scalar value before &lt;code&gt;u&lt;/code&gt; in the set of Unicode scalar values.</source>
          <target state="translated">&lt;code&gt;pred&amp;nbsp;u&lt;/code&gt; 是Unicode标量值集中 &lt;code&gt;u&lt;/code&gt; 之前的标量值。</target>
        </trans-unit>
        <trans-unit id="442934f630d846bda30fbe83738b209cd27b741a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pred&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;sub&amp;nbsp;x&amp;nbsp;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pred&amp;nbsp;x&lt;/code&gt; 是 &lt;code&gt;sub&amp;nbsp;x&amp;nbsp;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="967dee0498b19ab64a19ee518eca2cae68b91347" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pred&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;x&amp;nbsp;-&amp;nbsp;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pred&amp;nbsp;x&lt;/code&gt; 是 &lt;code&gt;x&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9816a9abf6be19fb2d38251b7be5c766dd75a6f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pred&amp;nbsp;x&lt;/code&gt; returns the floating-point number right before &lt;code&gt;x&lt;/code&gt; i.e., the greatest floating-point number smaller than &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pred&amp;nbsp;x&lt;/code&gt; 返回之前的浮点数右 &lt;code&gt;x&lt;/code&gt; 即，最大的浮点数小于 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7ddd9c03a1a08cae116c0fa66967aa4ca01af14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pred&amp;nbsp;x&lt;/code&gt; returns the floating-point number right before &lt;code&gt;x&lt;/code&gt; i.e., the greatest floating-point number smaller than &lt;code&gt;x&lt;/code&gt;. See also &lt;a href=&quot;float#VALnext_after&quot;&gt;&lt;code&gt;Float.next_after&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;pred&amp;nbsp;x&lt;/code&gt; 返回之前的浮点数右 &lt;code&gt;x&lt;/code&gt; 即，最大的浮点数小于 &lt;code&gt;x&lt;/code&gt; 。另请参见&lt;a href=&quot;float#VALnext_after&quot;&gt; &lt;code&gt;Float.next_after&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09760ebecb2db4b7959faf49f63d763c68364769" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;print_tab&amp;nbsp;()&lt;/code&gt; emits a 'next' tabulation break hint: if not already set on a tabulation marker, the insertion point moves to the first tabulation marker on the right, or the pretty-printer splits the line and insertion point moves to the leftmost tabulation marker.</source>
          <target state="translated">&lt;code&gt;print_tab&amp;nbsp;()&lt;/code&gt; 发出&amp;ldquo;下一个&amp;rdquo;制表符中断提示：如果尚未在制表符上设置，插入点将移至右侧的第一个制表符，或者漂亮打印机将行拆分，插入点将移至最左侧的制表符标记。</target>
        </trans-unit>
        <trans-unit id="6cbc1871dc2d955d3e7b205f29bb54921cb2c133" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;print_tbreak&amp;nbsp;nspaces&amp;nbsp;offset&lt;/code&gt; emits a 'full' tabulation break hint.</source>
          <target state="translated">&lt;code&gt;print_tbreak&amp;nbsp;nspaces&amp;nbsp;offset&lt;/code&gt; 发出&amp;ldquo;完整&amp;rdquo;制表符中断提示。</target>
        </trans-unit>
        <trans-unit id="d93319288aaeaf656b19e2e30397eed9c5e4fa59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prohibit&amp;nbsp;units&lt;/code&gt; prohibits dynamically-linked units from referencing the units named in list &lt;code&gt;units&lt;/code&gt; by removing such units from the allowed units list.</source>
          <target state="translated">&lt;code&gt;prohibit&amp;nbsp;units&lt;/code&gt; 通过从允许的单位列表中删除这样的单位，禁止动态链接的单位引用以列表 &lt;code&gt;units&lt;/code&gt; 命名的单位。</target>
        </trans-unit>
        <trans-unit id="28e71e38d9b955e5df0967f03ca482ee9d1129d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prohibit&amp;nbsp;units&lt;/code&gt; prohibits dynamically-linked units from referencing the units named in list &lt;code&gt;units&lt;/code&gt; by removing such units from the allowed units list. This can be used to prevent access to selected units, e.g. private, internal modules of the running program.</source>
          <target state="translated">&lt;code&gt;prohibit&amp;nbsp;units&lt;/code&gt; 通过从允许的单位列表中删除这样的单位，禁止动态链接的单位引用以列表 &lt;code&gt;units&lt;/code&gt; 命名的单位。这可用于防止访问选定的单元，例如正在运行的程序的私有内部模块。</target>
        </trans-unit>
        <trans-unit id="a2d784feebd3760f2e06694ca6ba34147d660c4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protect&amp;nbsp;~finally&amp;nbsp;work&lt;/code&gt; invokes &lt;code&gt;work&amp;nbsp;()&lt;/code&gt; and then &lt;code&gt;finally&amp;nbsp;()&lt;/code&gt; before &lt;code&gt;work&amp;nbsp;()&lt;/code&gt; returns with its value or an exception.</source>
          <target state="translated">&lt;code&gt;protect&amp;nbsp;~finally&amp;nbsp;work&lt;/code&gt; 调用 &lt;code&gt;work&amp;nbsp;()&lt;/code&gt; ，然后在 &lt;code&gt;work&amp;nbsp;()&lt;/code&gt; 返回其值或异常之前调用 &lt;code&gt;finally&amp;nbsp;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0476b5e79e9bfb6cf175a10cf7d21e52216b9476" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protect&amp;nbsp;~finally&amp;nbsp;work&lt;/code&gt; invokes &lt;code&gt;work&amp;nbsp;()&lt;/code&gt; and then &lt;code&gt;finally&amp;nbsp;()&lt;/code&gt; before &lt;code&gt;work&amp;nbsp;()&lt;/code&gt; returns with its value or an exception. In the latter case the exception is re-raised after &lt;code&gt;finally&amp;nbsp;()&lt;/code&gt;. If &lt;code&gt;finally&amp;nbsp;()&lt;/code&gt; raises an exception, then the exception &lt;a href=&quot;fun#EXCEPTIONFinally_raised&quot;&gt;&lt;code&gt;Fun.Finally_raised&lt;/code&gt;&lt;/a&gt; is raised instead.</source>
          <target state="translated">&lt;code&gt;protect&amp;nbsp;~finally&amp;nbsp;work&lt;/code&gt; 调用 &lt;code&gt;work&amp;nbsp;()&lt;/code&gt; ，然后在 &lt;code&gt;work&amp;nbsp;()&lt;/code&gt; 返回其值或异常之前调用 &lt;code&gt;finally&amp;nbsp;()&lt;/code&gt; 。在后一种情况下，在 &lt;code&gt;finally&amp;nbsp;()&lt;/code&gt; 之后重新引发异常。如果 &lt;code&gt;finally&amp;nbsp;()&lt;/code&gt; 引发异常，则引发&lt;a href=&quot;fun#EXCEPTIONFinally_raised&quot;&gt; &lt;code&gt;Fun.Finally_raised&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="160a594415644057f489aff43e4525697b28adb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protect&lt;/code&gt; can be used to enforce local invariants whether &lt;code&gt;work&amp;nbsp;()&lt;/code&gt; returns normally or raises an exception. However, it does not protect against unexpected exceptions raised inside &lt;code&gt;finally&amp;nbsp;()&lt;/code&gt; such as &lt;a href=&quot;stdlib#EXCEPTIONOut_of_memory&quot;&gt;&lt;code&gt;Out_of_memory&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdlib#EXCEPTIONStack_overflow&quot;&gt;&lt;code&gt;Stack_overflow&lt;/code&gt;&lt;/a&gt;, or asynchronous exceptions raised by signal handlers (e.g. &lt;a href=&quot;sys#EXCEPTIONBreak&quot;&gt;&lt;code&gt;Sys.Break&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;protect&lt;/code&gt; 无论 &lt;code&gt;work&amp;nbsp;()&lt;/code&gt; 正常返回还是引发异常，protect都可以用于强制执行局部不变量。但是，它不能防止在 &lt;code&gt;finally&amp;nbsp;()&lt;/code&gt; 内部引发的意外异常，例如&lt;a href=&quot;stdlib#EXCEPTIONOut_of_memory&quot;&gt; &lt;code&gt;Out_of_memory&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;stdlib#EXCEPTIONStack_overflow&quot;&gt; &lt;code&gt;Stack_overflow&lt;/code&gt; &lt;/a&gt;或信号处理程序引发的异步异常（例如&lt;a href=&quot;sys#EXCEPTIONBreak&quot;&gt; &lt;code&gt;Sys.Break&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4b53c8f24a7b168ad064471f10f0d272bbbf5867" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;push&amp;nbsp;x&amp;nbsp;s&lt;/code&gt; adds the element &lt;code&gt;x&lt;/code&gt; at the top of stack &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;push&amp;nbsp;x&amp;nbsp;s&lt;/code&gt; 将元素 &lt;code&gt;x&lt;/code&gt; 添加到堆栈 &lt;code&gt;s&lt;/code&gt; 的顶部。</target>
        </trans-unit>
        <trans-unit id="91b21464ebc945360177f81ca399ed4153bdcfc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;push&lt;/code&gt; is a synonym for &lt;code&gt;add&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;push&lt;/code&gt; 是 &lt;code&gt;add&lt;/code&gt; 的同义词。</target>
        </trans-unit>
        <trans-unit id="6a9080c5d1ebfb07f81eeade7ca727daf5deb05e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;putenv&amp;nbsp;name&amp;nbsp;value&lt;/code&gt; sets the value associated to a variable in the process environment.</source>
          <target state="translated">&lt;code&gt;putenv&amp;nbsp;name&amp;nbsp;value&lt;/code&gt; 设置与流程环境中的变量关联的值。</target>
        </trans-unit>
        <trans-unit id="1c5d75ab693167711c070a5ebc5ed27ab9835867" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;putenv&amp;nbsp;name&amp;nbsp;value&lt;/code&gt; sets the value associated to a variable in the process environment. &lt;code&gt;name&lt;/code&gt; is the name of the environment variable, and &lt;code&gt;value&lt;/code&gt; its new associated value.</source>
          <target state="translated">&lt;code&gt;putenv&amp;nbsp;name&amp;nbsp;value&lt;/code&gt; 设置与流程环境中的变量关联的值。 &lt;code&gt;name&lt;/code&gt; 是环境变量的名称，并 &lt;code&gt;value&lt;/code&gt; 其新的关联值。</target>
        </trans-unit>
        <trans-unit id="18a85881a7d7b42655b69a552543369e4367da09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;quote_command&amp;nbsp;cmd&amp;nbsp;args&lt;/code&gt; returns a quoted command line, suitable for use as an argument to &lt;a href=&quot;sys#VALcommand&quot;&gt;&lt;code&gt;Sys.command&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;unix#VALsystem&quot;&gt;&lt;code&gt;Unix.system&lt;/code&gt;&lt;/a&gt;, and the &lt;a href=&quot;unix#VALopen_process&quot;&gt;&lt;code&gt;Unix.open_process&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">&lt;code&gt;quote_command&amp;nbsp;cmd&amp;nbsp;args&lt;/code&gt; 返回带引号的命令行，适合用作&lt;a href=&quot;sys#VALcommand&quot;&gt; &lt;code&gt;Sys.command&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;unix#VALsystem&quot;&gt; &lt;code&gt;Unix.system&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;unix#VALopen_process&quot;&gt; &lt;code&gt;Unix.open_process&lt;/code&gt; &lt;/a&gt;函数的参数。</target>
        </trans-unit>
        <trans-unit id="c3e2741bb55086f1c63c755371cb051ed58845cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r&amp;nbsp;:=&amp;nbsp;a&lt;/code&gt; stores the value of &lt;code&gt;a&lt;/code&gt; in reference &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;r&amp;nbsp;:=&amp;nbsp;a&lt;/code&gt; 存储的值 &lt;code&gt;a&lt;/code&gt; 在参考 &lt;code&gt;r&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45dfc6bd885abeb5f6efc3623c5b9eae63f6e4c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r&amp;nbsp;:=&amp;nbsp;a&lt;/code&gt; stores the value of &lt;code&gt;a&lt;/code&gt; in reference &lt;code&gt;r&lt;/code&gt;. Equivalent to &lt;code&gt;fun&amp;nbsp;r&amp;nbsp;v&amp;nbsp;-&amp;gt;&amp;nbsp;r.contents&amp;nbsp;&amp;lt;-&amp;nbsp;v&lt;/code&gt;. Right-associative operator, see &lt;a href=&quot;ocaml_operators&quot;&gt;&lt;code&gt;Ocaml_operators&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;r&amp;nbsp;:=&amp;nbsp;a&lt;/code&gt; 存储的值 &lt;code&gt;a&lt;/code&gt; 在参考 &lt;code&gt;r&lt;/code&gt; 。等效于 &lt;code&gt;fun&amp;nbsp;r&amp;nbsp;v&amp;nbsp;-&amp;gt;&amp;nbsp;r.contents&amp;nbsp;&amp;lt;-&amp;nbsp;v&lt;/code&gt; 。右关联运算符，有关更多信息，请参见&lt;a href=&quot;ocaml_operators&quot;&gt; &lt;code&gt;Ocaml_operators&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d2a2d009feb49acd551b4e14cafa4ce3f46010c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r&lt;/code&gt;: user-defined reader. Takes the next &lt;code&gt;ri&lt;/code&gt; formatted input function and applies it to the scanning buffer &lt;code&gt;ib&lt;/code&gt; to read the next argument. The input function &lt;code&gt;ri&lt;/code&gt; must therefore have type &lt;code&gt;Scanning.in_channel&amp;nbsp;-&amp;gt;&amp;nbsp;'a&lt;/code&gt; and the argument read has type &lt;code&gt;'a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;r&lt;/code&gt; ：用户定义的阅读器。采用下一个 &lt;code&gt;ri&lt;/code&gt; 格式的输入函数，并将其应用于扫描缓冲区 &lt;code&gt;ib&lt;/code&gt; 以读取下一个参数。因此，输入函数 &lt;code&gt;ri&lt;/code&gt; 必须具有 &lt;code&gt;Scanning.in_channel&amp;nbsp;-&amp;gt;&amp;nbsp;'a&lt;/code&gt; 类型，并且读取的参数具有 &lt;code&gt;'a&lt;/code&gt; 类型。</target>
        </trans-unit>
        <trans-unit id="cdbe300ab736ebcc931bc7dd1462ec1701872b6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;raw_backtrace_length&amp;nbsp;bckt&lt;/code&gt; returns the number of slots in the backtrace &lt;code&gt;bckt&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;raw_backtrace_length&amp;nbsp;bckt&lt;/code&gt; 返回backtrace &lt;code&gt;bckt&lt;/code&gt; 中的插槽数。</target>
        </trans-unit>
        <trans-unit id="d72c8bead00a9ad9d85be11d551f15e50b5f197c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rcontains_from&amp;nbsp;s&amp;nbsp;stop&amp;nbsp;c&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;c&lt;/code&gt; appears in &lt;code&gt;s&lt;/code&gt; before position &lt;code&gt;stop+1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rcontains_from&amp;nbsp;s&amp;nbsp;stop&amp;nbsp;c&lt;/code&gt; 仅当 &lt;code&gt;c&lt;/code&gt; 出现在位置 &lt;code&gt;stop+1&lt;/code&gt; 之前的 &lt;code&gt;s&lt;/code&gt; 中时,才为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91917ece3efac5f77635a8959d1e91975d84b390" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rcontains_from&amp;nbsp;s&amp;nbsp;stop&amp;nbsp;c&lt;/code&gt; tests if byte &lt;code&gt;c&lt;/code&gt; appears in &lt;code&gt;s&lt;/code&gt; before position &lt;code&gt;stop+1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rcontains_from&amp;nbsp;s&amp;nbsp;stop&amp;nbsp;c&lt;/code&gt; 测试字节 &lt;code&gt;c&lt;/code&gt; 是否在位置 &lt;code&gt;stop+1&lt;/code&gt; 之前的 &lt;code&gt;s&lt;/code&gt; 中出现。</target>
        </trans-unit>
        <trans-unit id="e9ba103a62aebae39089ff44840b154f7b7bff32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;read&amp;nbsp;fd&amp;nbsp;buf&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; reads &lt;code&gt;len&lt;/code&gt; bytes from descriptor &lt;code&gt;fd&lt;/code&gt;, storing them in byte sequence &lt;code&gt;buf&lt;/code&gt;, starting at position &lt;code&gt;pos&lt;/code&gt; in &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;read&amp;nbsp;fd&amp;nbsp;buf&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; 读取 &lt;code&gt;len&lt;/code&gt; 个从描述符字节 &lt;code&gt;fd&lt;/code&gt; ，将它们存储在字节序列 &lt;code&gt;buf&lt;/code&gt; ，起始于位置 &lt;code&gt;pos&lt;/code&gt; 中 &lt;code&gt;buf&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b9a351271b97978cd94591aa073484807b25e900" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;read&amp;nbsp;fd&amp;nbsp;buf&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; reads &lt;code&gt;len&lt;/code&gt; bytes from descriptor &lt;code&gt;fd&lt;/code&gt;, storing them in byte sequence &lt;code&gt;buf&lt;/code&gt;, starting at position &lt;code&gt;pos&lt;/code&gt; in &lt;code&gt;buf&lt;/code&gt;. Return the number of bytes actually read.</source>
          <target state="translated">&lt;code&gt;read&amp;nbsp;fd&amp;nbsp;buf&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; 读取 &lt;code&gt;len&lt;/code&gt; 个从描述符字节 &lt;code&gt;fd&lt;/code&gt; ，将它们存储在字节序列 &lt;code&gt;buf&lt;/code&gt; ，起始于位置 &lt;code&gt;pos&lt;/code&gt; 中 &lt;code&gt;buf&lt;/code&gt; 。返回实际读取的字节数。</target>
        </trans-unit>
        <trans-unit id="089d197e45aa6645b742e8626bb5cac297c06ff3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;read&amp;nbsp;fd&amp;nbsp;buff&amp;nbsp;ofs&amp;nbsp;len&lt;/code&gt; reads &lt;code&gt;len&lt;/code&gt; bytes from descriptor &lt;code&gt;fd&lt;/code&gt;, storing them in byte sequence &lt;code&gt;buff&lt;/code&gt;, starting at position &lt;code&gt;ofs&lt;/code&gt; in &lt;code&gt;buff&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;read&amp;nbsp;fd&amp;nbsp;buff&amp;nbsp;ofs&amp;nbsp;len&lt;/code&gt; 读取 &lt;code&gt;len&lt;/code&gt; 个从描述符字节 &lt;code&gt;fd&lt;/code&gt; ，将它们存储在字节序列 &lt;code&gt;buff&lt;/code&gt; ，起始于位置 &lt;code&gt;ofs&lt;/code&gt; 中 &lt;code&gt;buff&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1887dfbec2a844be343ccdb49473e0597397a6b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;read&amp;nbsp;fd&amp;nbsp;buff&amp;nbsp;ofs&amp;nbsp;len&lt;/code&gt; reads &lt;code&gt;len&lt;/code&gt; bytes from descriptor &lt;code&gt;fd&lt;/code&gt;, storing them in byte sequence &lt;code&gt;buff&lt;/code&gt;, starting at position &lt;code&gt;ofs&lt;/code&gt; in &lt;code&gt;buff&lt;/code&gt;. Return the number of bytes actually read.</source>
          <target state="translated">&lt;code&gt;read&amp;nbsp;fd&amp;nbsp;buff&amp;nbsp;ofs&amp;nbsp;len&lt;/code&gt; 读取 &lt;code&gt;len&lt;/code&gt; 个从描述符字节 &lt;code&gt;fd&lt;/code&gt; ，将它们存储在字节序列 &lt;code&gt;buff&lt;/code&gt; ，起始于位置 &lt;code&gt;ofs&lt;/code&gt; 中 &lt;code&gt;buff&lt;/code&gt; 。返回实际读取的字节数。</target>
        </trans-unit>
        <trans-unit id="ccb591e627acab4b79a800486045e84c897f6b35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;read&amp;nbsp;fd&amp;nbsp;~buf&amp;nbsp;~pos&amp;nbsp;~len&lt;/code&gt; reads &lt;code&gt;len&lt;/code&gt; bytes from descriptor &lt;code&gt;fd&lt;/code&gt;, storing them in byte sequence &lt;code&gt;buf&lt;/code&gt;, starting at position &lt;code&gt;pos&lt;/code&gt; in &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;read&amp;nbsp;fd&amp;nbsp;~buf&amp;nbsp;~pos&amp;nbsp;~len&lt;/code&gt; 读取 &lt;code&gt;len&lt;/code&gt; 从描述符字节 &lt;code&gt;fd&lt;/code&gt; ，将它们存储在字节序列 &lt;code&gt;buf&lt;/code&gt; ，起始于位置 &lt;code&gt;pos&lt;/code&gt; 中 &lt;code&gt;buf&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b9675f709b75a29e156f4c39b9621640d09f2d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;read&amp;nbsp;fd&amp;nbsp;~buf&amp;nbsp;~pos&amp;nbsp;~len&lt;/code&gt; reads &lt;code&gt;len&lt;/code&gt; bytes from descriptor &lt;code&gt;fd&lt;/code&gt;, storing them in byte sequence &lt;code&gt;buf&lt;/code&gt;, starting at position &lt;code&gt;pos&lt;/code&gt; in &lt;code&gt;buf&lt;/code&gt;. Return the number of bytes actually read.</source>
          <target state="translated">&lt;code&gt;read&amp;nbsp;fd&amp;nbsp;~buf&amp;nbsp;~pos&amp;nbsp;~len&lt;/code&gt; 读取 &lt;code&gt;len&lt;/code&gt; 从描述符字节 &lt;code&gt;fd&lt;/code&gt; ，将它们存储在字节序列 &lt;code&gt;buf&lt;/code&gt; ，起始于位置 &lt;code&gt;pos&lt;/code&gt; 中 &lt;code&gt;buf&lt;/code&gt; 。返回实际读取的字节数。</target>
        </trans-unit>
        <trans-unit id="56b73efecd3782ad55d4fd41833c679794c8b321" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;really_input&amp;nbsp;ic&amp;nbsp;buf&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; reads &lt;code&gt;len&lt;/code&gt; characters from channel &lt;code&gt;ic&lt;/code&gt;, storing them in byte sequence &lt;code&gt;buf&lt;/code&gt;, starting at character number &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;really_input&amp;nbsp;ic&amp;nbsp;buf&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; 从通道 &lt;code&gt;ic&lt;/code&gt; 读取 &lt;code&gt;len&lt;/code&gt; 个字符，并将其存储在字节序列 &lt;code&gt;buf&lt;/code&gt; 中，从字符编号 &lt;code&gt;pos&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="1f4f790f074d937490f48befc198f5772ca2790c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;really_input_string&amp;nbsp;ic&amp;nbsp;len&lt;/code&gt; reads &lt;code&gt;len&lt;/code&gt; characters from channel &lt;code&gt;ic&lt;/code&gt; and returns them in a new string.</source>
          <target state="translated">&lt;code&gt;really_input_string&amp;nbsp;ic&amp;nbsp;len&lt;/code&gt; 从通道 &lt;code&gt;ic&lt;/code&gt; 读取 &lt;code&gt;len&lt;/code&gt; 个字符，并以新字符串返回它们。</target>
        </trans-unit>
        <trans-unit id="b846cb1c911b00a2234497ed38495965b623ac8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;receive&amp;nbsp;ch&lt;/code&gt; returns the event consisting in receiving a value from the channel &lt;code&gt;ch&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;receive&amp;nbsp;ch&lt;/code&gt; 返回包含从通道 &lt;code&gt;ch&lt;/code&gt; 接收值的事件。</target>
        </trans-unit>
        <trans-unit id="962565416f0b621b1ab4d97c893fc329b15834ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;receive&amp;nbsp;ch&lt;/code&gt; returns the event consisting in receiving a value from the channel &lt;code&gt;ch&lt;/code&gt;. The result value of this event is the value received.</source>
          <target state="translated">&lt;code&gt;receive&amp;nbsp;ch&lt;/code&gt; 返回包含从通道 &lt;code&gt;ch&lt;/code&gt; 接收值的事件。此事件的结果值是收到的值。</target>
        </trans-unit>
        <trans-unit id="346e221e66f4c3ddae75195ef5a53495b1a1204b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;release&amp;nbsp;s&lt;/code&gt; increments the value of semaphore &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;release&amp;nbsp;s&lt;/code&gt; 增加信号量 &lt;code&gt;s&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="006a46298e1abb98fc4c7ce029bbf49a8c8b8aac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;release&amp;nbsp;s&lt;/code&gt; increments the value of semaphore &lt;code&gt;s&lt;/code&gt;. If other threads are waiting on &lt;code&gt;s&lt;/code&gt;, one of them is restarted. If the current value of &lt;code&gt;s&lt;/code&gt; is equal to &lt;code&gt;max_int&lt;/code&gt;, the value of the semaphore is unchanged and a &lt;code&gt;Sys_error&lt;/code&gt; exception is raised to signal overflow.</source>
          <target state="translated">&lt;code&gt;release&amp;nbsp;s&lt;/code&gt; 增加信号量 &lt;code&gt;s&lt;/code&gt; 的值。如果其他线程在 &lt;code&gt;s&lt;/code&gt; 上等待，则其中一个将重新启动。如果 &lt;code&gt;s&lt;/code&gt; 的当前值等于 &lt;code&gt;max_int&lt;/code&gt; ，则信号量的值不变，并且引发 &lt;code&gt;Sys_error&lt;/code&gt; 异常以指示溢出。</target>
        </trans-unit>
        <trans-unit id="ab86ba3ce9c2a807acc24757214efaa8dcad35fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;release&amp;nbsp;s&lt;/code&gt; sets the value of semaphore &lt;code&gt;s&lt;/code&gt; to 1, putting it in the &quot;available&quot; state.</source>
          <target state="translated">&lt;code&gt;release&amp;nbsp;s&lt;/code&gt; 将信号量 &lt;code&gt;s&lt;/code&gt; 的值设置为1，使其处于&amp;ldquo;可用&amp;rdquo;状态。</target>
        </trans-unit>
        <trans-unit id="21fb624687447ef141dbfe6add85bcdc30ede5f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;release&amp;nbsp;s&lt;/code&gt; sets the value of semaphore &lt;code&gt;s&lt;/code&gt; to 1, putting it in the &quot;available&quot; state. If other threads are waiting on &lt;code&gt;s&lt;/code&gt;, one of them is restarted.</source>
          <target state="translated">&lt;code&gt;release&amp;nbsp;s&lt;/code&gt; 将信号量 &lt;code&gt;s&lt;/code&gt; 的值设置为1，使其处于&amp;ldquo;可用&amp;rdquo;状态。如果其他线程在 &lt;code&gt;s&lt;/code&gt; 上等待，则其中一个将重新启动。</target>
        </trans-unit>
        <trans-unit id="6b260708f08a99aec016a43b3016fd49eb47d52e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rem&amp;nbsp;a&amp;nbsp;b&lt;/code&gt; returns the remainder of &lt;code&gt;a&lt;/code&gt; with respect to &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rem&amp;nbsp;a&amp;nbsp;b&lt;/code&gt; 返回 &lt;code&gt;a&lt;/code&gt; 相对于 &lt;code&gt;b&lt;/code&gt; 的余数。</target>
        </trans-unit>
        <trans-unit id="db3b3542955be5f83f04d9d05bc346e529fcccff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rem&amp;nbsp;a&amp;nbsp;b&lt;/code&gt; returns the remainder of &lt;code&gt;a&lt;/code&gt; with respect to &lt;code&gt;b&lt;/code&gt;. The returned value is &lt;code&gt;a&amp;nbsp;-.&amp;nbsp;n&amp;nbsp;*.&amp;nbsp;b&lt;/code&gt;, where &lt;code&gt;n&lt;/code&gt; is the quotient &lt;code&gt;a&amp;nbsp;/.&amp;nbsp;b&lt;/code&gt; rounded towards zero to an integer.</source>
          <target state="translated">&lt;code&gt;rem&amp;nbsp;a&amp;nbsp;b&lt;/code&gt; 返回 &lt;code&gt;a&lt;/code&gt; 相对于 &lt;code&gt;b&lt;/code&gt; 的余数。返回值是 &lt;code&gt;a&amp;nbsp;-.&amp;nbsp;n&amp;nbsp;*.&amp;nbsp;b&lt;/code&gt; ，其中 &lt;code&gt;n&lt;/code&gt; 是商 &lt;code&gt;a&amp;nbsp;/.&amp;nbsp;b&lt;/code&gt; 取整为零至整数。</target>
        </trans-unit>
        <trans-unit id="c52fe53f8f43c6ed7f86b2af8e8d41cbb263b5e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rem&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; is the remainder &lt;code&gt;x&amp;nbsp;mod&amp;nbsp;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rem&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 是 &lt;code&gt;x&amp;nbsp;mod&amp;nbsp;y&lt;/code&gt; 的余数。</target>
        </trans-unit>
        <trans-unit id="27aa1a677061f0a8cae59055208a5ef601d9fdcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rem&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; is the remainder &lt;code&gt;x&amp;nbsp;mod&amp;nbsp;y&lt;/code&gt;. See &lt;a href=&quot;stdlib#VAL(mod)&quot;&gt;&lt;code&gt;(mod)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;rem&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 是 &lt;code&gt;x&amp;nbsp;mod&amp;nbsp;y&lt;/code&gt; 的余数。有关详细信息，请参见&lt;a href=&quot;stdlib#VAL(mod)&quot;&gt; &lt;code&gt;(mod)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b9bec10053bea03237c8d9e71de7456cad9b576d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove&amp;nbsp;t&amp;nbsp;x&lt;/code&gt; removes from &lt;code&gt;t&lt;/code&gt; one instance of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;remove&amp;nbsp;t&amp;nbsp;x&lt;/code&gt; 从移除了 &lt;code&gt;t&lt;/code&gt; 的一个实例 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e0931b856e2d47332cb6bc07f719736d67fa88f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove&amp;nbsp;t&amp;nbsp;x&lt;/code&gt; removes from &lt;code&gt;t&lt;/code&gt; one instance of &lt;code&gt;x&lt;/code&gt;. Does nothing if there is no instance of &lt;code&gt;x&lt;/code&gt; in &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;remove&amp;nbsp;t&amp;nbsp;x&lt;/code&gt; 从移除了 &lt;code&gt;t&lt;/code&gt; 的一个实例 &lt;code&gt;x&lt;/code&gt; 。什么也不做，如果没有实例 &lt;code&gt;x&lt;/code&gt; 的 &lt;code&gt;t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d55d89c0db70fdbdcc5489dafcf9b289347a818" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove&amp;nbsp;x&amp;nbsp;m&lt;/code&gt; returns a map containing the same bindings as &lt;code&gt;m&lt;/code&gt;, except for &lt;code&gt;x&lt;/code&gt; which is unbound in the returned map.</source>
          <target state="translated">&lt;code&gt;remove&amp;nbsp;x&amp;nbsp;m&lt;/code&gt; 返回一个映射，该映射包含与 &lt;code&gt;m&lt;/code&gt; 相同的绑定，但 &lt;code&gt;x&lt;/code&gt; 在返回的映射中未绑定。</target>
        </trans-unit>
        <trans-unit id="cd820656c9900ff55d1f0cd680bc4b0fbc1aaf66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove&amp;nbsp;x&amp;nbsp;m&lt;/code&gt; returns a map containing the same bindings as &lt;code&gt;m&lt;/code&gt;, except for &lt;code&gt;x&lt;/code&gt; which is unbound in the returned map. If &lt;code&gt;x&lt;/code&gt; was not in &lt;code&gt;m&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt; is returned unchanged (the result of the function is then physically equal to &lt;code&gt;m&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;remove&amp;nbsp;x&amp;nbsp;m&lt;/code&gt; 返回一个映射，该映射包含与 &lt;code&gt;m&lt;/code&gt; 相同的绑定，但 &lt;code&gt;x&lt;/code&gt; 在返回的映射中未绑定。如果 &lt;code&gt;x&lt;/code&gt; 不在 &lt;code&gt;m&lt;/code&gt; 中，则 &lt;code&gt;m&lt;/code&gt; 不变地返回（该函数的结果在物理上等于 &lt;code&gt;m&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="bd0f882d8442b7ea5b09336054ed46b2c89d5db8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove&amp;nbsp;x&amp;nbsp;s&lt;/code&gt; returns a set containing all elements of &lt;code&gt;s&lt;/code&gt;, except &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;remove&amp;nbsp;x&amp;nbsp;s&lt;/code&gt; 返回包含的所有元素的集合 &lt;code&gt;s&lt;/code&gt; ，除了 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be98c85b91d53b4c83390230684187f100ef6ea5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove&amp;nbsp;x&amp;nbsp;s&lt;/code&gt; returns a set containing all elements of &lt;code&gt;s&lt;/code&gt;, except &lt;code&gt;x&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; was not in &lt;code&gt;s&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt; is returned unchanged (the result of the function is then physically equal to &lt;code&gt;s&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;remove&amp;nbsp;x&amp;nbsp;s&lt;/code&gt; 返回包含的所有元素的集合 &lt;code&gt;s&lt;/code&gt; ，除了 &lt;code&gt;x&lt;/code&gt; 。如果 &lt;code&gt;x&lt;/code&gt; 不在 &lt;code&gt;s&lt;/code&gt; 中，则 &lt;code&gt;s&lt;/code&gt; 不变地返回（该函数的结果在物理上等于 &lt;code&gt;s&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1715b448725aeba57a052a83a88a5df762b69bb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_assoc&amp;nbsp;a&amp;nbsp;l&lt;/code&gt; returns the list of pairs &lt;code&gt;l&lt;/code&gt; without the first pair with key &lt;code&gt;a&lt;/code&gt;, if any.</source>
          <target state="translated">&lt;code&gt;remove_assoc&amp;nbsp;a&amp;nbsp;l&lt;/code&gt; 返回对 &lt;code&gt;l&lt;/code&gt; 的列表，但不包含键 &lt;code&gt;a&lt;/code&gt; 的第一对。</target>
        </trans-unit>
        <trans-unit id="9ee8ba876bd47e3ae7dc5b975128ba146e2fa629" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_assoc&amp;nbsp;a&amp;nbsp;l&lt;/code&gt; returns the list of pairs &lt;code&gt;l&lt;/code&gt; without the first pair with key &lt;code&gt;a&lt;/code&gt;, if any. Not tail-recursive.</source>
          <target state="translated">&lt;code&gt;remove_assoc&amp;nbsp;a&amp;nbsp;l&lt;/code&gt; 返回对 &lt;code&gt;l&lt;/code&gt; 的列表，但不包含键 &lt;code&gt;a&lt;/code&gt; 的第一对。不尾递归。</target>
        </trans-unit>
        <trans-unit id="2608056e6bbde0b366b0dae379cd8a15e129deeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rename&amp;nbsp;old&amp;nbsp;new&lt;/code&gt; changes the name of a file from &lt;code&gt;old&lt;/code&gt; to &lt;code&gt;new&lt;/code&gt;, moving it between directories if needed.</source>
          <target state="translated">&lt;code&gt;rename&amp;nbsp;old&amp;nbsp;new&lt;/code&gt; 文件将文件名从 &lt;code&gt;old&lt;/code&gt; 更改为 &lt;code&gt;new&lt;/code&gt; ，并根据需要在目录之间移动文件。</target>
        </trans-unit>
        <trans-unit id="44dd18199b2ad701f512672abef22a059500cf45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rename&amp;nbsp;old&amp;nbsp;new&lt;/code&gt; changes the name of a file from &lt;code&gt;old&lt;/code&gt; to &lt;code&gt;new&lt;/code&gt;, moving it between directories if needed. If &lt;code&gt;new&lt;/code&gt; already exists, its contents will be replaced with those of &lt;code&gt;old&lt;/code&gt;. Depending on the operating system, the metadata (permissions, owner, etc) of &lt;code&gt;new&lt;/code&gt; can either be preserved or be replaced by those of &lt;code&gt;old&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rename&amp;nbsp;old&amp;nbsp;new&lt;/code&gt; 文件将文件名从 &lt;code&gt;old&lt;/code&gt; 更改为 &lt;code&gt;new&lt;/code&gt; ，并根据需要在目录之间移动文件。如果 &lt;code&gt;new&lt;/code&gt; 已经存在，则其内容将替换为 &lt;code&gt;old&lt;/code&gt; 的内容。根据操作系统的不同，可以保留 &lt;code&gt;new&lt;/code&gt; 的元数据（权限，所有者等），也可以将其替换为 &lt;code&gt;old&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c64667967a315a8274df7951e489304f9d5412d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rename&amp;nbsp;old&amp;nbsp;new&lt;/code&gt; changes the name of a file from &lt;code&gt;old&lt;/code&gt; to &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rename&amp;nbsp;old&amp;nbsp;new&lt;/code&gt; 将文件名从 &lt;code&gt;old&lt;/code&gt; 更改为 &lt;code&gt;new&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cfce178c762079d87bf7dc8d25469a2e2953b6d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rename&amp;nbsp;src&amp;nbsp;dst&lt;/code&gt; changes the name of a file from &lt;code&gt;src&lt;/code&gt; to &lt;code&gt;dst&lt;/code&gt;, moving it between directories if needed.</source>
          <target state="translated">&lt;code&gt;rename&amp;nbsp;src&amp;nbsp;dst&lt;/code&gt; 将文件名从 &lt;code&gt;src&lt;/code&gt; 更改为 &lt;code&gt;dst&lt;/code&gt; ，并根据需要在目录之间移动文件。</target>
        </trans-unit>
        <trans-unit id="f13ef561e1dbb4edd3571c05612ef1c1960ad8e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rename&amp;nbsp;src&amp;nbsp;dst&lt;/code&gt; changes the name of a file from &lt;code&gt;src&lt;/code&gt; to &lt;code&gt;dst&lt;/code&gt;, moving it between directories if needed. If &lt;code&gt;dst&lt;/code&gt; already exists, its contents will be replaced with those of &lt;code&gt;src&lt;/code&gt;. Depending on the operating system, the metadata (permissions, owner, etc) of &lt;code&gt;dst&lt;/code&gt; can either be preserved or be replaced by those of &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rename&amp;nbsp;src&amp;nbsp;dst&lt;/code&gt; 将文件名从 &lt;code&gt;src&lt;/code&gt; 更改为 &lt;code&gt;dst&lt;/code&gt; ，并根据需要在目录之间移动文件。如果 &lt;code&gt;dst&lt;/code&gt; 已经存在，则其内容将替换为 &lt;code&gt;src&lt;/code&gt; 的内容。取决于操作系统，可以保留 &lt;code&gt;dst&lt;/code&gt; 的元数据（权限，所有者等），也可以将其替换为 &lt;code&gt;src&lt;/code&gt; 的元数据。</target>
        </trans-unit>
        <trans-unit id="da5fb7c01af5e87f419b3542fdc3ae5e20fdc98c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rename&amp;nbsp;~src&amp;nbsp;~dst&lt;/code&gt; changes the name of a file from &lt;code&gt;src&lt;/code&gt; to &lt;code&gt;dst&lt;/code&gt;, moving it between directories if needed.</source>
          <target state="translated">&lt;code&gt;rename&amp;nbsp;~src&amp;nbsp;~dst&lt;/code&gt; 将文件名从 &lt;code&gt;src&lt;/code&gt; 更改为 &lt;code&gt;dst&lt;/code&gt; ，如果需要，可在目录之间移动它。</target>
        </trans-unit>
        <trans-unit id="9b8ad1aa2fe5aadac584268c49f69f5c3887a9d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rename&amp;nbsp;~src&amp;nbsp;~dst&lt;/code&gt; changes the name of a file from &lt;code&gt;src&lt;/code&gt; to &lt;code&gt;dst&lt;/code&gt;, moving it between directories if needed. If &lt;code&gt;dst&lt;/code&gt; already exists, its contents will be replaced with those of &lt;code&gt;src&lt;/code&gt;. Depending on the operating system, the metadata (permissions, owner, etc) of &lt;code&gt;dst&lt;/code&gt; can either be preserved or be replaced by those of &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rename&amp;nbsp;~src&amp;nbsp;~dst&lt;/code&gt; 将文件名从 &lt;code&gt;src&lt;/code&gt; 更改为 &lt;code&gt;dst&lt;/code&gt; ，如果需要，可在目录之间移动它。如果 &lt;code&gt;dst&lt;/code&gt; 已经存在，则其内容将替换为 &lt;code&gt;src&lt;/code&gt; 的内容。取决于操作系统，可以保留 &lt;code&gt;dst&lt;/code&gt; 的元数据（权限，所有者等），也可以将其替换为 &lt;code&gt;src&lt;/code&gt; 的元数据。</target>
        </trans-unit>
        <trans-unit id="49692ca9873d763e687b874a78c3291022b0f768" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rep&lt;/code&gt; is U+FFFD, the &lt;a href=&quot;http://unicode.org/glossary/#replacement_character&quot;&gt;replacement&lt;/a&gt; character.</source>
          <target state="translated">&lt;code&gt;rep&lt;/code&gt; 是U + FFFD，即&lt;a href=&quot;http://unicode.org/glossary/#replacement_character&quot;&gt;替换&lt;/a&gt;字符。</target>
        </trans-unit>
        <trans-unit id="1e2b86161a4e0d7f4270a61badd2589d489e971c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rep&lt;/code&gt; is U+FFFD, the &lt;a href=&quot;https://unicode.org/glossary/#replacement_character&quot;&gt;replacement&lt;/a&gt; character.</source>
          <target state="translated">&lt;code&gt;rep&lt;/code&gt; 是U + FFFD，即&lt;a href=&quot;https://unicode.org/glossary/#replacement_character&quot;&gt;替换&lt;/a&gt;字符。</target>
        </trans-unit>
        <trans-unit id="4ac31a24604c99ea9303427bd8097846b9d05905" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replace_matched&amp;nbsp;repl&amp;nbsp;s&lt;/code&gt; returns the replacement text &lt;code&gt;repl&lt;/code&gt; in which &lt;code&gt;\1&lt;/code&gt;, &lt;code&gt;\2&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;code&gt;replace_matched&amp;nbsp;repl&amp;nbsp;s&lt;/code&gt; 返回替换文本 &lt;code&gt;repl&lt;/code&gt; ，其中 &lt;code&gt;\1&lt;/code&gt; ， &lt;code&gt;\2&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="c1506d28389c3aad46ab411504b1ff4552b21535" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replace_matched&amp;nbsp;repl&amp;nbsp;s&lt;/code&gt; returns the replacement text &lt;code&gt;repl&lt;/code&gt; in which &lt;code&gt;\1&lt;/code&gt;, &lt;code&gt;\2&lt;/code&gt;, etc. have been replaced by the text matched by the corresponding groups in the regular expression that was matched by the last call to a matching or searching function (see &lt;a href=&quot;str#VALmatched_string&quot;&gt;&lt;code&gt;Str.matched_string&lt;/code&gt;&lt;/a&gt; for details). &lt;code&gt;s&lt;/code&gt; must be the same string that was passed to the matching or searching function.</source>
          <target state="translated">&lt;code&gt;replace_matched&amp;nbsp;repl&amp;nbsp;s&lt;/code&gt; 返回替换文本 &lt;code&gt;repl&lt;/code&gt; ，其中 &lt;code&gt;\1&lt;/code&gt; ， &lt;code&gt;\2&lt;/code&gt; 等已被正则表达式中与相应匹配或搜索函数的最后一次调用匹配的正则表达式中的相应组所匹配的文本替换（请参见&lt;a href=&quot;str#VALmatched_string&quot;&gt; &lt;code&gt;Str.matched_string&lt;/code&gt; &lt;/a&gt;有关详细信息，请参见matched_string）。 &lt;code&gt;s&lt;/code&gt; 必须与传递给匹配或搜索功能的字符串相同。</target>
        </trans-unit>
        <trans-unit id="dc001ee24d532c53f6eacbfb65584bc526950be3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reshape&amp;nbsp;b&amp;nbsp;[|d1;...;dN|]&lt;/code&gt; converts the Bigarray &lt;code&gt;b&lt;/code&gt; to a &lt;code&gt;N&lt;/code&gt;-dimensional array of dimensions &lt;code&gt;d1&lt;/code&gt;...</source>
          <target state="translated">&lt;code&gt;reshape&amp;nbsp;b&amp;nbsp;[|d1;...;dN|]&lt;/code&gt; 将Bigarray &lt;code&gt;b&lt;/code&gt; 转换为尺寸为 &lt;code&gt;d1&lt;/code&gt; 的 &lt;code&gt;N&lt;/code&gt; 维数组。</target>
        </trans-unit>
        <trans-unit id="6b8456faab35f1442e14159da4709801005ae060" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reshape&amp;nbsp;b&amp;nbsp;[|d1;...;dN|]&lt;/code&gt; converts the Bigarray &lt;code&gt;b&lt;/code&gt; to a &lt;code&gt;N&lt;/code&gt;-dimensional array of dimensions &lt;code&gt;d1&lt;/code&gt;...&lt;code&gt;dN&lt;/code&gt;. The returned array and the original array &lt;code&gt;b&lt;/code&gt; share their data and have the same layout. For instance, assuming that &lt;code&gt;b&lt;/code&gt; is a one-dimensional array of dimension 12, &lt;code&gt;reshape&amp;nbsp;b&amp;nbsp;[|3;4|]&lt;/code&gt; returns a two-dimensional array &lt;code&gt;b'&lt;/code&gt; of dimensions 3 and 4. If &lt;code&gt;b&lt;/code&gt; has C layout, the element &lt;code&gt;(x,y)&lt;/code&gt; of &lt;code&gt;b'&lt;/code&gt; corresponds to the element &lt;code&gt;x&amp;nbsp;*&amp;nbsp;3&amp;nbsp;+&amp;nbsp;y&lt;/code&gt; of &lt;code&gt;b&lt;/code&gt;. If &lt;code&gt;b&lt;/code&gt; has Fortran layout, the element &lt;code&gt;(x,y)&lt;/code&gt; of &lt;code&gt;b'&lt;/code&gt; corresponds to the element &lt;code&gt;x&amp;nbsp;+&amp;nbsp;(y&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;*&amp;nbsp;4&lt;/code&gt; of &lt;code&gt;b&lt;/code&gt;. The returned Bigarray must have exactly the same number of elements as the original Bigarray &lt;code&gt;b&lt;/code&gt;. That is, the product of the dimensions of &lt;code&gt;b&lt;/code&gt; must be equal to &lt;code&gt;i1&amp;nbsp;*&amp;nbsp;...&amp;nbsp;*&amp;nbsp;iN&lt;/code&gt;. Otherwise, &lt;code&gt;Invalid_argument&lt;/code&gt; is raised.</source>
          <target state="translated">&lt;code&gt;reshape&amp;nbsp;b&amp;nbsp;[|d1;...;dN|]&lt;/code&gt; 将Bigarray &lt;code&gt;b&lt;/code&gt; 转换为尺寸为 &lt;code&gt;d1&lt;/code&gt; ... &lt;code&gt;dN&lt;/code&gt; 的 &lt;code&gt;N&lt;/code&gt; 维数组。返回的数组和原始数组 &lt;code&gt;b&lt;/code&gt; 共享它们的数据，并且具有相同的布局。例如，假设 &lt;code&gt;b&lt;/code&gt; 是尺寸为12的一维数组，则 &lt;code&gt;reshape&amp;nbsp;b&amp;nbsp;[|3;4|]&lt;/code&gt; 将返回尺寸为3和4的二维数组 &lt;code&gt;b'&lt;/code&gt; 。如果 &lt;code&gt;b&lt;/code&gt; 具有C布局，则元素 &lt;code&gt;(x,y)&lt;/code&gt; 的 &lt;code&gt;b'&lt;/code&gt; 对应于元件 &lt;code&gt;x&amp;nbsp;*&amp;nbsp;3&amp;nbsp;+&amp;nbsp;y&lt;/code&gt; 的 &lt;code&gt;b&lt;/code&gt; 。如果 &lt;code&gt;b&lt;/code&gt; 具有Fortran布局，则该元素 &lt;code&gt;(x,y)&lt;/code&gt; 的 &lt;code&gt;b'&lt;/code&gt; 对应于元件 &lt;code&gt;x&amp;nbsp;+&amp;nbsp;(y&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;*&amp;nbsp;4&lt;/code&gt; 的 &lt;code&gt;b&lt;/code&gt; 。返回的Bigarray必须具有与原始Bigarray &lt;code&gt;b&lt;/code&gt; 完全相同数量的元素。也就是说， &lt;code&gt;b&lt;/code&gt; 的乘积必须等于 &lt;code&gt;i1&amp;nbsp;*&amp;nbsp;...&amp;nbsp;*&amp;nbsp;iN&lt;/code&gt; 。否则，将引发 &lt;code&gt;Invalid_argument&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a8b4b5b3d41e08cb5ebc23c3a5e69f652fc1a80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rev_append&amp;nbsp;l1&amp;nbsp;l2&lt;/code&gt; reverses &lt;code&gt;l1&lt;/code&gt; and concatenates it with &lt;code&gt;l2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rev_append&amp;nbsp;l1&amp;nbsp;l2&lt;/code&gt; 反转 &lt;code&gt;l1&lt;/code&gt; 并将其与 &lt;code&gt;l2&lt;/code&gt; 连接。</target>
        </trans-unit>
        <trans-unit id="878ea12e18b249e54e91a433546ba3115a7f5f3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rev_append&amp;nbsp;l1&amp;nbsp;l2&lt;/code&gt; reverses &lt;code&gt;l1&lt;/code&gt; and concatenates it with &lt;code&gt;l2&lt;/code&gt;. This is equivalent to &lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;list#VALrev&quot;&gt;&lt;code&gt;List.rev&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;nbsp;l1)&amp;nbsp;@&amp;nbsp;l2&lt;/code&gt;, but &lt;code&gt;rev_append&lt;/code&gt; is tail-recursive and more efficient.</source>
          <target state="translated">&lt;code&gt;rev_append&amp;nbsp;l1&amp;nbsp;l2&lt;/code&gt; 反转 &lt;code&gt;l1&lt;/code&gt; 并将其与 &lt;code&gt;l2&lt;/code&gt; 连接。这等效于 &lt;code&gt;(&lt;/code&gt; &lt;a href=&quot;list#VALrev&quot;&gt; &lt;code&gt;List.rev&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;nbsp;l1)&amp;nbsp;@&amp;nbsp;l2&lt;/code&gt; ，但是 &lt;code&gt;rev_append&lt;/code&gt; 是尾递归的，并且效率更高。</target>
        </trans-unit>
        <trans-unit id="394937fe3715b0779a3ec8934618af2ae02a495e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rev_append&amp;nbsp;l1&amp;nbsp;l2&lt;/code&gt; reverses &lt;code&gt;l1&lt;/code&gt; and concatenates it with &lt;code&gt;l2&lt;/code&gt;. This is equivalent to &lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;listlabels#VALrev&quot;&gt;&lt;code&gt;ListLabels.rev&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;nbsp;l1)&amp;nbsp;@&amp;nbsp;l2&lt;/code&gt;, but &lt;code&gt;rev_append&lt;/code&gt; is tail-recursive and more efficient.</source>
          <target state="translated">&lt;code&gt;rev_append&amp;nbsp;l1&amp;nbsp;l2&lt;/code&gt; 反转 &lt;code&gt;l1&lt;/code&gt; 并将其与 &lt;code&gt;l2&lt;/code&gt; 连接。这等效于 &lt;code&gt;(&lt;/code&gt; &lt;a href=&quot;listlabels#VALrev&quot;&gt; &lt;code&gt;ListLabels.rev&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;nbsp;l1)&amp;nbsp;@&amp;nbsp;l2&lt;/code&gt; ，但是 &lt;code&gt;rev_append&lt;/code&gt; 是尾递归的，并且效率更高。</target>
        </trans-unit>
        <trans-unit id="69ef942805b90b15a98df999ebb90fa58665ac52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rev_map&amp;nbsp;f&amp;nbsp;l&lt;/code&gt; gives the same result as &lt;a href=&quot;list#VALrev&quot;&gt;&lt;code&gt;List.rev&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;nbsp;(&lt;/code&gt;&lt;a href=&quot;list#VALmap&quot;&gt;&lt;code&gt;List.map&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;nbsp;f&amp;nbsp;l)&lt;/code&gt;, but is tail-recursive and more efficient.</source>
          <target state="translated">&lt;code&gt;rev_map&amp;nbsp;f&amp;nbsp;l&lt;/code&gt; 与&lt;a href=&quot;list#VALrev&quot;&gt; &lt;code&gt;List.rev&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;nbsp;(&lt;/code&gt; &lt;a href=&quot;list#VALmap&quot;&gt; &lt;code&gt;List.map&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;nbsp;f&amp;nbsp;l)&lt;/code&gt; 给出相同的结果，但是它是尾递归的，并且效率更高。</target>
        </trans-unit>
        <trans-unit id="10d71e73f248897bbb6700b41a68770de7f47e02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rev_map&amp;nbsp;~f&amp;nbsp;l&lt;/code&gt; gives the same result as &lt;a href=&quot;listlabels#VALrev&quot;&gt;&lt;code&gt;ListLabels.rev&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;nbsp;(&lt;/code&gt;&lt;a href=&quot;listlabels#VALmap&quot;&gt;&lt;code&gt;ListLabels.map&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;nbsp;f&amp;nbsp;l)&lt;/code&gt;, but is tail-recursive and more efficient.</source>
          <target state="translated">&lt;code&gt;rev_map&amp;nbsp;~f&amp;nbsp;l&lt;/code&gt; 给出与&lt;a href=&quot;listlabels#VALrev&quot;&gt; &lt;code&gt;ListLabels.rev&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;nbsp;(&lt;/code&gt; &lt;a href=&quot;listlabels#VALmap&quot;&gt; &lt;code&gt;ListLabels.map&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;nbsp;f&amp;nbsp;l)&lt;/code&gt; 相同的结果，但是它是尾递归的，并且效率更高。</target>
        </trans-unit>
        <trans-unit id="6234528dedeef0fcbdd5c634ceb567f01ddcdedb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rev_map2&amp;nbsp;f&amp;nbsp;l1&amp;nbsp;l2&lt;/code&gt; gives the same result as &lt;a href=&quot;list#VALrev&quot;&gt;&lt;code&gt;List.rev&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;nbsp;(&lt;/code&gt;&lt;a href=&quot;list#VALmap2&quot;&gt;&lt;code&gt;List.map2&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;nbsp;f&amp;nbsp;l1&amp;nbsp;l2)&lt;/code&gt;, but is tail-recursive and more efficient.</source>
          <target state="translated">&lt;code&gt;rev_map2&amp;nbsp;f&amp;nbsp;l1&amp;nbsp;l2&lt;/code&gt; 给出与&lt;a href=&quot;list#VALrev&quot;&gt; &lt;code&gt;List.rev&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;nbsp;(&lt;/code&gt; &lt;a href=&quot;list#VALmap2&quot;&gt; &lt;code&gt;List.map2&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;nbsp;f&amp;nbsp;l1&amp;nbsp;l2)&lt;/code&gt; 相同的结果，但是它是尾递归的，并且效率更高。</target>
        </trans-unit>
        <trans-unit id="3b336de826bb3b42f51bda2880d784a71fd047a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rev_map2&amp;nbsp;~f&amp;nbsp;l1&amp;nbsp;l2&lt;/code&gt; gives the same result as &lt;a href=&quot;listlabels#VALrev&quot;&gt;&lt;code&gt;ListLabels.rev&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;nbsp;(&lt;/code&gt;&lt;a href=&quot;listlabels#VALmap2&quot;&gt;&lt;code&gt;ListLabels.map2&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;nbsp;f&amp;nbsp;l1&amp;nbsp;l2)&lt;/code&gt;, but is tail-recursive and more efficient.</source>
          <target state="translated">&lt;code&gt;rev_map2&amp;nbsp;~f&amp;nbsp;l1&amp;nbsp;l2&lt;/code&gt; 给出与&lt;a href=&quot;listlabels#VALrev&quot;&gt; &lt;code&gt;ListLabels.rev&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;nbsp;(&lt;/code&gt; &lt;a href=&quot;listlabels#VALmap2&quot;&gt; &lt;code&gt;ListLabels.map2&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;nbsp;f&amp;nbsp;l1&amp;nbsp;l2)&lt;/code&gt; 相同的结果，但是它是尾递归的，并且效率更高。</target>
        </trans-unit>
        <trans-unit id="9994e1bd4d915e07897ffebc4069e0c6c4028bd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;right&amp;nbsp;v&lt;/code&gt; is &lt;code&gt;Right&amp;nbsp;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;right&amp;nbsp;v&lt;/code&gt; 是 &lt;code&gt;Right&amp;nbsp;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="510bf6e7f36e760d2012249c21350f2667f6d7f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rindex&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; is &lt;a href=&quot;string#VALrindex_from&quot;&gt;&lt;code&gt;String.rindex_from&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;nbsp;s&amp;nbsp;(length&amp;nbsp;s&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rindex&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; 是&lt;a href=&quot;string#VALrindex_from&quot;&gt; &lt;code&gt;String.rindex_from&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;nbsp;s&amp;nbsp;(length&amp;nbsp;s&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;c&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="19dbb5af8d953489e70c4281fc47b174b03d7229" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rindex&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; returns the index of the last occurrence of byte &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rindex&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; 返回字节的最后一次出现的索引 &lt;code&gt;c&lt;/code&gt; 在 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e07d77bbb7c757dc555f0fc73f7ebe65b2def085" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rindex_from&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; is the index of the last occurrence of &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; before position &lt;code&gt;i+1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rindex_from&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; 是位置 &lt;code&gt;i+1&lt;/code&gt; 之前 &lt;code&gt;s&lt;/code&gt; 中 &lt;code&gt;c&lt;/code&gt; 中最后一次出现c的索引。</target>
        </trans-unit>
        <trans-unit id="80f09aaf0becfe6824281c15d2d0f576d8efa23d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rindex_from&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; returns the index of the last occurrence of byte &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; before position &lt;code&gt;i+1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rindex_from&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; 返回字节的最后出现的索引 &lt;code&gt;c&lt;/code&gt; 在 &lt;code&gt;s&lt;/code&gt; 前位置 &lt;code&gt;i+1&lt;/code&gt; 的。</target>
        </trans-unit>
        <trans-unit id="e32ca1d8796a400c7d813680659af5cefe661631" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rindex_from&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; returns the index of the last occurrence of byte &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; before position &lt;code&gt;i+1&lt;/code&gt;. &lt;code&gt;rindex&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; is equivalent to &lt;code&gt;rindex_from&amp;nbsp;s&amp;nbsp;(Bytes.length&amp;nbsp;s&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rindex_from&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; 返回字节的最后出现的索引 &lt;code&gt;c&lt;/code&gt; 在 &lt;code&gt;s&lt;/code&gt; 前位置 &lt;code&gt;i+1&lt;/code&gt; 的。 &lt;code&gt;rindex&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; 等效于 &lt;code&gt;rindex_from&amp;nbsp;s&amp;nbsp;(Bytes.length&amp;nbsp;s&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;c&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c1eb4393887635530315724b324dc92475a7509" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rindex_from&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; returns the index of the last occurrence of byte &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; before position &lt;code&gt;i+1&lt;/code&gt;. &lt;code&gt;rindex&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; is equivalent to &lt;code&gt;rindex_from&amp;nbsp;s&amp;nbsp;(length&amp;nbsp;s&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rindex_from&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; 返回字节的最后出现的索引 &lt;code&gt;c&lt;/code&gt; 在 &lt;code&gt;s&lt;/code&gt; 前位置 &lt;code&gt;i+1&lt;/code&gt; 的。 &lt;code&gt;rindex&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; 等效于 &lt;code&gt;rindex_from&amp;nbsp;s&amp;nbsp;(length&amp;nbsp;s&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;c&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d12802834524a75b5b706f5e23d131c46a6b8180" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rindex_from_opt&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; is the index of the last occurrence of &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; before position &lt;code&gt;i+1&lt;/code&gt; (if any).</source>
          <target state="translated">&lt;code&gt;rindex_from_opt&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; 是位置 &lt;code&gt;i+1&lt;/code&gt; 之前（如果有）中 &lt;code&gt;s&lt;/code&gt; 中 &lt;code&gt;c&lt;/code&gt; 的最后一次出现的索引。</target>
        </trans-unit>
        <trans-unit id="882093b3cb57be9ceccb130874f14b176ff7d1b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rindex_from_opt&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; returns the index of the last occurrence of byte &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; before position &lt;code&gt;i+1&lt;/code&gt; or &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;c&lt;/code&gt; does not occur in &lt;code&gt;s&lt;/code&gt; before position &lt;code&gt;i+1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rindex_from_opt&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; 返回字节的最后出现的索引 &lt;code&gt;c&lt;/code&gt; 在 &lt;code&gt;s&lt;/code&gt; 前位置 &lt;code&gt;i+1&lt;/code&gt; 的或 &lt;code&gt;None&lt;/code&gt; 如果 &lt;code&gt;c&lt;/code&gt; 不发生 &lt;code&gt;s&lt;/code&gt; 前位置 &lt;code&gt;i+1&lt;/code&gt; 的。</target>
        </trans-unit>
        <trans-unit id="1ab41d9f41ca7b24fdd3ca747ecb4be9ac445b08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rindex_from_opt&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; returns the index of the last occurrence of byte &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; before position &lt;code&gt;i+1&lt;/code&gt; or &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;c&lt;/code&gt; does not occur in &lt;code&gt;s&lt;/code&gt; before position &lt;code&gt;i+1&lt;/code&gt;. &lt;code&gt;rindex_opt&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; is equivalent to &lt;code&gt;rindex_from&amp;nbsp;s&amp;nbsp;(Bytes.length&amp;nbsp;s&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rindex_from_opt&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; 返回字节的最后出现的索引 &lt;code&gt;c&lt;/code&gt; 在 &lt;code&gt;s&lt;/code&gt; 前位置 &lt;code&gt;i+1&lt;/code&gt; 的或 &lt;code&gt;None&lt;/code&gt; 如果 &lt;code&gt;c&lt;/code&gt; 不发生 &lt;code&gt;s&lt;/code&gt; 前位置 &lt;code&gt;i+1&lt;/code&gt; 的。 &lt;code&gt;rindex_opt&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; 等效于 &lt;code&gt;rindex_from&amp;nbsp;s&amp;nbsp;(Bytes.length&amp;nbsp;s&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;c&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ca8e7b1eca35dd7432a0f0214f2761b723203e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rindex_from_opt&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; returns the index of the last occurrence of byte &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; before position &lt;code&gt;i+1&lt;/code&gt; or &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;c&lt;/code&gt; does not occur in &lt;code&gt;s&lt;/code&gt; before position &lt;code&gt;i+1&lt;/code&gt;. &lt;code&gt;rindex_opt&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; is equivalent to &lt;code&gt;rindex_from&amp;nbsp;s&amp;nbsp;(length&amp;nbsp;s&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rindex_from_opt&amp;nbsp;s&amp;nbsp;i&amp;nbsp;c&lt;/code&gt; 返回字节的最后出现的索引 &lt;code&gt;c&lt;/code&gt; 在 &lt;code&gt;s&lt;/code&gt; 前位置 &lt;code&gt;i+1&lt;/code&gt; 的或 &lt;code&gt;None&lt;/code&gt; 如果 &lt;code&gt;c&lt;/code&gt; 不发生 &lt;code&gt;s&lt;/code&gt; 前位置 &lt;code&gt;i+1&lt;/code&gt; 的。 &lt;code&gt;rindex_opt&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; 等效于 &lt;code&gt;rindex_from&amp;nbsp;s&amp;nbsp;(length&amp;nbsp;s&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;c&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="736815ab482a7090b33105ad13272ddff51fe22e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rindex_opt&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; is &lt;a href=&quot;string#VALrindex_from_opt&quot;&gt;&lt;code&gt;String.rindex_from_opt&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;nbsp;s&amp;nbsp;(length&amp;nbsp;s&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rindex_opt&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; 是&lt;a href=&quot;string#VALrindex_from_opt&quot;&gt; &lt;code&gt;String.rindex_from_opt&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;nbsp;s&amp;nbsp;(length&amp;nbsp;s&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;c&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc2e7504fde4ea73b668f8ec458dca8ceefbf7a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rindex_opt&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; returns the index of the last occurrence of byte &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; or &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;c&lt;/code&gt; does not occur in &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rindex_opt&amp;nbsp;s&amp;nbsp;c&lt;/code&gt; 返回字节的最后一次出现的索引 &lt;code&gt;c&lt;/code&gt; 在 &lt;code&gt;s&lt;/code&gt; 或 &lt;code&gt;None&lt;/code&gt; ，如果 &lt;code&gt;c&lt;/code&gt; 不发生 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67f1b7d6825bbc7aa452fc3d070f02cce0d6820d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;round&amp;nbsp;x&lt;/code&gt; rounds &lt;code&gt;x&lt;/code&gt; to the nearest integer with ties (fractional values of 0.5) rounded away from zero, regardless of the current rounding direction.</source>
          <target state="translated">&lt;code&gt;round&amp;nbsp;x&lt;/code&gt; 轮 &lt;code&gt;x&lt;/code&gt; 与关系（0.5分数值）最接近的整数从零取整远，而不管当前的舍入方向的。</target>
        </trans-unit>
        <trans-unit id="44588751455ab9b7592e7beae273e518927bf099" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;round&amp;nbsp;x&lt;/code&gt; rounds &lt;code&gt;x&lt;/code&gt; to the nearest integer with ties (fractional values of 0.5) rounded away from zero, regardless of the current rounding direction. If &lt;code&gt;x&lt;/code&gt; is an integer, &lt;code&gt;+0.&lt;/code&gt;, &lt;code&gt;-0.&lt;/code&gt;, &lt;code&gt;nan&lt;/code&gt;, or infinite, &lt;code&gt;x&lt;/code&gt; itself is returned.</source>
          <target state="translated">&lt;code&gt;round&amp;nbsp;x&lt;/code&gt; 轮 &lt;code&gt;x&lt;/code&gt; 与关系（0.5分数值）最接近的整数从零取整远，而不管当前的舍入方向的。如果 &lt;code&gt;x&lt;/code&gt; 是整数，则 &lt;code&gt;+0.&lt;/code&gt; ， &lt;code&gt;-0.&lt;/code&gt; ， &lt;code&gt;nan&lt;/code&gt; 或无穷大， &lt;code&gt;x&lt;/code&gt; 本身会返回。</target>
        </trans-unit>
        <trans-unit id="2bde665b6c22159698df42a4761798fbd84a0142" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt;: insert a string argument.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; ：插入一个字符串参数。</target>
        </trans-unit>
        <trans-unit id="455a91b1939a4e0145d419bc7145f5f27bd45dda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt;: reads a string argument that spreads as much as possible, until the following bounding condition holds:</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; ：读取一个尽可能扩展的字符串参数，直到满足以下边界条件为止：</target>
        </trans-unit>
        <trans-unit id="d298c06cdb2652c833af93df9e3c629af91aa0da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;save_and_close&amp;nbsp;series&lt;/code&gt; writes information into &lt;code&gt;series&lt;/code&gt; required for interpreting the snapshots that &lt;code&gt;series&lt;/code&gt; contains and then closes the &lt;code&gt;series&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;save_and_close&amp;nbsp;series&lt;/code&gt; 将信息写入 &lt;code&gt;series&lt;/code&gt; 用于解释快照，需要 &lt;code&gt;series&lt;/code&gt; 包含然后关闭该 &lt;code&gt;series&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="6e3f4c47de908bfcc066ee59bbd39f1c828ae782" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;save_and_close&amp;nbsp;series&lt;/code&gt; writes information into &lt;code&gt;series&lt;/code&gt; required for interpreting the snapshots that &lt;code&gt;series&lt;/code&gt; contains and then closes the &lt;code&gt;series&lt;/code&gt; file. This function must be called to produce a valid series file. The optional &lt;code&gt;time&lt;/code&gt; parameter is as for &lt;a href=&quot;spacetime.snapshot#VALtake&quot;&gt;&lt;code&gt;Spacetime.Snapshot.take&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;save_and_close&amp;nbsp;series&lt;/code&gt; 将信息写入 &lt;code&gt;series&lt;/code&gt; 用于解释快照，需要 &lt;code&gt;series&lt;/code&gt; 包含然后关闭该 &lt;code&gt;series&lt;/code&gt; 文件。必须调用此函数才能生成有效的系列文件。可选的 &lt;code&gt;time&lt;/code&gt; 参数与&lt;a href=&quot;spacetime.snapshot#VALtake&quot;&gt; &lt;code&gt;Spacetime.Snapshot.take&lt;/code&gt; 相同&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ddee9962fc07a36a9e6280c2bb9cd8deac0b961a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;save_event&lt;/code&gt; writes an event, which is an arbitrary string, into the given series file.</source>
          <target state="translated">&lt;code&gt;save_event&lt;/code&gt; 将事件（任意字符串）写入给定的系列文件。</target>
        </trans-unit>
        <trans-unit id="4f11844f3e8d595590b831bda9d865df6dcb2da7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;save_event&lt;/code&gt; writes an event, which is an arbitrary string, into the given series file. This may be used for identifying particular points during program execution when analysing the profile. The optional &lt;code&gt;time&lt;/code&gt; parameter is as for &lt;a href=&quot;spacetime.snapshot#VALtake&quot;&gt;&lt;code&gt;Spacetime.Snapshot.take&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;save_event&lt;/code&gt; 将事件（任意字符串）写入给定的系列文件。分析概要文件时，这可用于在程序执行期间识别特定点。可选的 &lt;code&gt;time&lt;/code&gt; 参数与&lt;a href=&quot;spacetime.snapshot#VALtake&quot;&gt; &lt;code&gt;Spacetime.Snapshot.take&lt;/code&gt; 相同&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ed6d0e4bcc8ef567eeec16194198e81d358e2c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;search_backward&amp;nbsp;r&amp;nbsp;s&amp;nbsp;last&lt;/code&gt; searches the string &lt;code&gt;s&lt;/code&gt; for a substring matching the regular expression &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;search_backward&amp;nbsp;r&amp;nbsp;s&amp;nbsp;last&lt;/code&gt; 在字符串 &lt;code&gt;s&lt;/code&gt; 中搜索与正则表达式 &lt;code&gt;r&lt;/code&gt; 匹配的子字符串。</target>
        </trans-unit>
        <trans-unit id="687f6e1f01a5642bcbe4dc17e8266e3cbcec5cdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;search_backward&amp;nbsp;r&amp;nbsp;s&amp;nbsp;last&lt;/code&gt; searches the string &lt;code&gt;s&lt;/code&gt; for a substring matching the regular expression &lt;code&gt;r&lt;/code&gt;. The search first considers substrings that start at position &lt;code&gt;last&lt;/code&gt; and proceeds towards the beginning of string. Return the position of the first character of the matched substring.</source>
          <target state="translated">&lt;code&gt;search_backward&amp;nbsp;r&amp;nbsp;s&amp;nbsp;last&lt;/code&gt; 在字符串 &lt;code&gt;s&lt;/code&gt; 中搜索与正则表达式 &lt;code&gt;r&lt;/code&gt; 匹配的子字符串。搜索首先考虑从 &lt;code&gt;last&lt;/code&gt; 位置开始并朝着字符串开头的子字符串。返回匹配的子字符串的第一个字符的位置。</target>
        </trans-unit>
        <trans-unit id="00a595c216e11cbc51c37011dafda857d5904d2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;search_forward&amp;nbsp;r&amp;nbsp;s&amp;nbsp;start&lt;/code&gt; searches the string &lt;code&gt;s&lt;/code&gt; for a substring matching the regular expression &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;search_forward&amp;nbsp;r&amp;nbsp;s&amp;nbsp;start&lt;/code&gt; 在字符串 &lt;code&gt;s&lt;/code&gt; 中搜索与正则表达式 &lt;code&gt;r&lt;/code&gt; 匹配的子字符串。</target>
        </trans-unit>
        <trans-unit id="4024b5a85c8dbe5b4ef925d470c3e70a89e08368" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;search_forward&amp;nbsp;r&amp;nbsp;s&amp;nbsp;start&lt;/code&gt; searches the string &lt;code&gt;s&lt;/code&gt; for a substring matching the regular expression &lt;code&gt;r&lt;/code&gt;. The search starts at position &lt;code&gt;start&lt;/code&gt; and proceeds towards the end of the string. Return the position of the first character of the matched substring.</source>
          <target state="translated">&lt;code&gt;search_forward&amp;nbsp;r&amp;nbsp;s&amp;nbsp;start&lt;/code&gt; 在字符串 &lt;code&gt;s&lt;/code&gt; 中搜索与正则表达式 &lt;code&gt;r&lt;/code&gt; 匹配的子字符串。搜索从位置开始处 &lt;code&gt;start&lt;/code&gt; 并进行到字符串的末尾。返回匹配的子字符串的第一个字符的位置。</target>
        </trans-unit>
        <trans-unit id="98b0ba100ad3b1b6d69a32dbd4448cf9f2f72b5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seek_in&amp;nbsp;chan&amp;nbsp;pos&lt;/code&gt; sets the current reading position to &lt;code&gt;pos&lt;/code&gt; for channel &lt;code&gt;chan&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;seek_in&amp;nbsp;chan&amp;nbsp;pos&lt;/code&gt; 将通道 &lt;code&gt;chan&lt;/code&gt; 的当前读取位置设置为 &lt;code&gt;pos&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3a2cc1b2c63ad591007dba6fad8695b7cabccdb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seek_in&amp;nbsp;chan&amp;nbsp;pos&lt;/code&gt; sets the current reading position to &lt;code&gt;pos&lt;/code&gt; for channel &lt;code&gt;chan&lt;/code&gt;. This works only for regular files. On files of other kinds, the behavior is unspecified.</source>
          <target state="translated">&lt;code&gt;seek_in&amp;nbsp;chan&amp;nbsp;pos&lt;/code&gt; 将通道 &lt;code&gt;chan&lt;/code&gt; 的当前读取位置设置为 &lt;code&gt;pos&lt;/code&gt; 。这仅适用于常规文件。在其他类型的文件上，行为未指定。</target>
        </trans-unit>
        <trans-unit id="b34ff9b4d4c0f48c9deb4190106898f0bd685a44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seek_out&amp;nbsp;chan&amp;nbsp;pos&lt;/code&gt; sets the current writing position to &lt;code&gt;pos&lt;/code&gt; for channel &lt;code&gt;chan&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;seek_out&amp;nbsp;chan&amp;nbsp;pos&lt;/code&gt; 将通道 &lt;code&gt;chan&lt;/code&gt; 的当前写入位置设置为 &lt;code&gt;pos&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a947f30d5015f439982af27693aee60f8956e9da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seek_out&amp;nbsp;chan&amp;nbsp;pos&lt;/code&gt; sets the current writing position to &lt;code&gt;pos&lt;/code&gt; for channel &lt;code&gt;chan&lt;/code&gt;. This works only for regular files. On files of other kinds (such as terminals, pipes and sockets), the behavior is unspecified.</source>
          <target state="translated">&lt;code&gt;seek_out&amp;nbsp;chan&amp;nbsp;pos&lt;/code&gt; 将通道 &lt;code&gt;chan&lt;/code&gt; 的当前写入位置设置为 &lt;code&gt;pos&lt;/code&gt; 。这仅适用于常规文件。在其他类型的文件（如端子，管道和插座）上，行为未指定。</target>
        </trans-unit>
        <trans-unit id="bac3a10314c6f47d37196cfa51c79542b5f90eaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;send&amp;nbsp;ch&amp;nbsp;v&lt;/code&gt; returns the event consisting in sending the value &lt;code&gt;v&lt;/code&gt; over the channel &lt;code&gt;ch&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;send&amp;nbsp;ch&amp;nbsp;v&lt;/code&gt; 返回包含通过通道 &lt;code&gt;ch&lt;/code&gt; 发送值 &lt;code&gt;v&lt;/code&gt; 的事件。</target>
        </trans-unit>
        <trans-unit id="b1b80f5ef78cb947d7ccc93dec34c6a36838a418" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;send&amp;nbsp;ch&amp;nbsp;v&lt;/code&gt; returns the event consisting in sending the value &lt;code&gt;v&lt;/code&gt; over the channel &lt;code&gt;ch&lt;/code&gt;. The result value of this event is &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;send&amp;nbsp;ch&amp;nbsp;v&lt;/code&gt; 返回包含通过通道 &lt;code&gt;ch&lt;/code&gt; 发送值 &lt;code&gt;v&lt;/code&gt; 的事件。此事件的结果值为 &lt;code&gt;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="92dad9c37bbba137c1eecb810cb42f4b9937b69f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set&amp;nbsp;a&amp;nbsp;n&amp;nbsp;x&lt;/code&gt; modifies array &lt;code&gt;a&lt;/code&gt; in place, replacing element number &lt;code&gt;n&lt;/code&gt; with &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set&amp;nbsp;a&amp;nbsp;n&amp;nbsp;x&lt;/code&gt; 修改数组 &lt;code&gt;a&lt;/code&gt; 到位，将元素编号 &lt;code&gt;n&lt;/code&gt; 替换为 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97e5cbb8e23c0e662459816ac1b4dbf00bc4ffc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set&amp;nbsp;a&amp;nbsp;n&amp;nbsp;x&lt;/code&gt; modifies array &lt;code&gt;a&lt;/code&gt; in place, replacing element number &lt;code&gt;n&lt;/code&gt; with &lt;code&gt;x&lt;/code&gt;. You can also write &lt;code&gt;a.(n)&amp;nbsp;&amp;lt;-&amp;nbsp;x&lt;/code&gt; instead of &lt;code&gt;set&amp;nbsp;a&amp;nbsp;n&amp;nbsp;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set&amp;nbsp;a&amp;nbsp;n&amp;nbsp;x&lt;/code&gt; 修改数组 &lt;code&gt;a&lt;/code&gt; 到位，将元素编号 &lt;code&gt;n&lt;/code&gt; 替换为 &lt;code&gt;x&lt;/code&gt; 。您也可以写 &lt;code&gt;a.(n)&amp;nbsp;&amp;lt;-&amp;nbsp;x&lt;/code&gt; 而不是 &lt;code&gt;set&amp;nbsp;a&amp;nbsp;n&amp;nbsp;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="863f15002a7c75ec3b009a12eeb01014f39fc48b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set&amp;nbsp;a&amp;nbsp;n&amp;nbsp;x&lt;/code&gt; modifies floatarray &lt;code&gt;a&lt;/code&gt; in place, replacing element number &lt;code&gt;n&lt;/code&gt; with &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set&amp;nbsp;a&amp;nbsp;n&amp;nbsp;x&lt;/code&gt; 会在适当位置修改floatarray &lt;code&gt;a&lt;/code&gt; ，将元素编号 &lt;code&gt;n&lt;/code&gt; 替换为 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c8e7d0b6adb47128cbb259dc2a7d024e93fa92a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set&amp;nbsp;r&lt;/code&gt; changes the GC parameters according to the &lt;code&gt;control&lt;/code&gt; record &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set&amp;nbsp;r&lt;/code&gt; 根据 &lt;code&gt;control&lt;/code&gt; 记录 &lt;code&gt;r&lt;/code&gt; 更改GC参数。</target>
        </trans-unit>
        <trans-unit id="b68b8e280015fafbafa5389e4555a02c515f5161" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set&amp;nbsp;r&lt;/code&gt; changes the GC parameters according to the &lt;code&gt;control&lt;/code&gt; record &lt;code&gt;r&lt;/code&gt;. The normal usage is: &lt;code&gt;Gc.set&amp;nbsp;{&amp;nbsp;(Gc.get())&amp;nbsp;with&amp;nbsp;Gc.verbose&amp;nbsp;=&amp;nbsp;0x00d&amp;nbsp;}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;set&amp;nbsp;r&lt;/code&gt; 根据 &lt;code&gt;control&lt;/code&gt; 记录 &lt;code&gt;r&lt;/code&gt; 更改GC参数。正常用法是： &lt;code&gt;Gc.set&amp;nbsp;{&amp;nbsp;(Gc.get())&amp;nbsp;with&amp;nbsp;Gc.verbose&amp;nbsp;=&amp;nbsp;0x00d&amp;nbsp;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a195f33f2b5be7ec632a9a3c14f49bfe71e083f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set&amp;nbsp;s&amp;nbsp;n&amp;nbsp;c&lt;/code&gt; modifies &lt;code&gt;s&lt;/code&gt; in place, replacing the byte at index &lt;code&gt;n&lt;/code&gt; with &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set&amp;nbsp;s&amp;nbsp;n&amp;nbsp;c&lt;/code&gt; 修改 &lt;code&gt;s&lt;/code&gt; 到位，在索引替换字节 &lt;code&gt;n&lt;/code&gt; 与 &lt;code&gt;c&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="093566908c7e595b3502b1edf8606bb77416fbef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set&amp;nbsp;s&amp;nbsp;n&amp;nbsp;c&lt;/code&gt; modifies byte sequence &lt;code&gt;s&lt;/code&gt; in place, replacing the byte at index &lt;code&gt;n&lt;/code&gt; with &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set&amp;nbsp;s&amp;nbsp;n&amp;nbsp;c&lt;/code&gt; 在适当位置修改字节序列 &lt;code&gt;s&lt;/code&gt; ，用 &lt;code&gt;c&lt;/code&gt; 替换索引 &lt;code&gt;n&lt;/code&gt; 处的字节。</target>
        </trans-unit>
        <trans-unit id="198d602c32a7354177dd669bd8c5ccc90f42aae0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set&amp;nbsp;s&amp;nbsp;n&amp;nbsp;c&lt;/code&gt; modifies byte sequence &lt;code&gt;s&lt;/code&gt; in place, replacing the byte at index &lt;code&gt;n&lt;/code&gt; with &lt;code&gt;c&lt;/code&gt;. You can also write &lt;code&gt;s.[n]&amp;nbsp;&amp;lt;-&amp;nbsp;c&lt;/code&gt; instead of &lt;code&gt;set&amp;nbsp;s&amp;nbsp;n&amp;nbsp;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set&amp;nbsp;s&amp;nbsp;n&amp;nbsp;c&lt;/code&gt; 在适当位置修改字节序列 &lt;code&gt;s&lt;/code&gt; ，用 &lt;code&gt;c&lt;/code&gt; 替换索引 &lt;code&gt;n&lt;/code&gt; 处的字节。您也可以写 &lt;code&gt;s.[n]&amp;nbsp;&amp;lt;-&amp;nbsp;c&lt;/code&gt; 而不是 &lt;code&gt;set&amp;nbsp;s&amp;nbsp;n&amp;nbsp;c&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e622374e07583e3cfe8da7cf2eca4f49579b526" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_binary_mode_in&amp;nbsp;ic&amp;nbsp;true&lt;/code&gt; sets the channel &lt;code&gt;ic&lt;/code&gt; to binary mode: no translations take place during input.</source>
          <target state="translated">&lt;code&gt;set_binary_mode_in&amp;nbsp;ic&amp;nbsp;true&lt;/code&gt; 将通道 &lt;code&gt;ic&lt;/code&gt; 设置为二进制模式：输入期间不进行任何转换。</target>
        </trans-unit>
        <trans-unit id="460e35008f5e5e75dec01926887aef5932da9a09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_binary_mode_in&amp;nbsp;ic&amp;nbsp;true&lt;/code&gt; sets the channel &lt;code&gt;ic&lt;/code&gt; to binary mode: no translations take place during input. &lt;code&gt;set_binary_mode_out&amp;nbsp;ic&amp;nbsp;false&lt;/code&gt; sets the channel &lt;code&gt;ic&lt;/code&gt; to text mode: depending on the operating system, some translations may take place during input. For instance, under Windows, end-of-lines will be translated from &lt;code&gt;\r\n&lt;/code&gt; to &lt;code&gt;\n&lt;/code&gt;. This function has no effect under operating systems that do not distinguish between text mode and binary mode.</source>
          <target state="translated">&lt;code&gt;set_binary_mode_in&amp;nbsp;ic&amp;nbsp;true&lt;/code&gt; 将通道 &lt;code&gt;ic&lt;/code&gt; 设置为二进制模式：输入期间不进行任何转换。 &lt;code&gt;set_binary_mode_out&amp;nbsp;ic&amp;nbsp;false&lt;/code&gt; 将通道 &lt;code&gt;ic&lt;/code&gt; 设置为文本模式：根据操作系统，某些翻译可能会在输入过程中发生。例如，在Windows下，行尾将从 &lt;code&gt;\r\n&lt;/code&gt; 为 &lt;code&gt;\n&lt;/code&gt; 。在不区分文本模式和二进制模式的操作系统下，此功能无效。</target>
        </trans-unit>
        <trans-unit id="41f72e89e7790888dd875851a570cdcc153ab588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_binary_mode_out&amp;nbsp;oc&amp;nbsp;true&lt;/code&gt; sets the channel &lt;code&gt;oc&lt;/code&gt; to binary mode: no translations take place during output.</source>
          <target state="translated">&lt;code&gt;set_binary_mode_out&amp;nbsp;oc&amp;nbsp;true&lt;/code&gt; 将通道 &lt;code&gt;oc&lt;/code&gt; 设置为二进制模式：输出期间不进行任何转换。</target>
        </trans-unit>
        <trans-unit id="fa187cc1bf7f363dce2a52af09aa20c6279acfb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_binary_mode_out&amp;nbsp;oc&amp;nbsp;true&lt;/code&gt; sets the channel &lt;code&gt;oc&lt;/code&gt; to binary mode: no translations take place during output. &lt;code&gt;set_binary_mode_out&amp;nbsp;oc&amp;nbsp;false&lt;/code&gt; sets the channel &lt;code&gt;oc&lt;/code&gt; to text mode: depending on the operating system, some translations may take place during output. For instance, under Windows, end-of-lines will be translated from &lt;code&gt;\n&lt;/code&gt; to &lt;code&gt;\r\n&lt;/code&gt;. This function has no effect under operating systems that do not distinguish between text mode and binary mode.</source>
          <target state="translated">&lt;code&gt;set_binary_mode_out&amp;nbsp;oc&amp;nbsp;true&lt;/code&gt; 将通道 &lt;code&gt;oc&lt;/code&gt; 设置为二进制模式：输出期间不进行任何转换。 &lt;code&gt;set_binary_mode_out&amp;nbsp;oc&amp;nbsp;false&lt;/code&gt; 将通道 &lt;code&gt;oc&lt;/code&gt; 设置为文本模式：根据操作系统的不同，在输出过程中可能会发生一些转换。例如，在Windows下，行尾将从 &lt;code&gt;\n&lt;/code&gt; 转换为 &lt;code&gt;\r\n&lt;/code&gt; 。在不区分文本模式和二进制模式的操作系统下，此功能无效。</target>
        </trans-unit>
        <trans-unit id="babb245231d6526e5794f52fa344efa3c2969cd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_field&lt;/code&gt; MUST NOT be called on immutable blocks. (Blocks allocated in C stubs, or with &lt;code&gt;new_block&lt;/code&gt; below, are always considered mutable.)</source>
          <target state="translated">&lt;code&gt;set_field&lt;/code&gt; 不能在不可变块上调用set_field。（在C存根中分配的块或下面带有 &lt;code&gt;new_block&lt;/code&gt; 的块始终被认为是可变的。）</target>
        </trans-unit>
        <trans-unit id="82b484f983c9f5ff16fe8c8120d603c763441e8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_formatter_out_channel&lt;/code&gt; is equivalent to &lt;a href=&quot;format#VALpp_set_formatter_out_channel&quot;&gt;&lt;code&gt;Format.pp_set_formatter_out_channel&lt;/code&gt;&lt;/a&gt;&lt;code&gt;std_formatter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set_formatter_out_channel&lt;/code&gt; 等效于&lt;a href=&quot;format#VALpp_set_formatter_out_channel&quot;&gt; &lt;code&gt;Format.pp_set_formatter_out_channel&lt;/code&gt; &lt;/a&gt; &lt;code&gt;std_formatter&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e6d8ac1feed2c2b216795119a11e4999eb0384f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_int16_be&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; sets &lt;code&gt;b&lt;/code&gt;'s big-endian signed 16-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set_int16_be&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; 将 &lt;code&gt;b&lt;/code&gt; 的从字节索引 &lt;code&gt;i&lt;/code&gt; 开始的big-endian带符号的16位整数设置为 &lt;code&gt;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7cf650b34385cb974f10532632ab85ef3c7927df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_int16_le&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; sets &lt;code&gt;b&lt;/code&gt;'s little-endian signed 16-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set_int16_le&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; 将从字节索引 &lt;code&gt;i&lt;/code&gt; 开始将 &lt;code&gt;b&lt;/code&gt; 的带小尾数符号的16位整数设置为 &lt;code&gt;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="452f01cff30a5ad6713e08dc64742ff3e1a3d63b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_int16_ne&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; sets &lt;code&gt;b&lt;/code&gt;'s native-endian signed 16-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set_int16_ne&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; 将 &lt;code&gt;b&lt;/code&gt; 的本机尾数有符号16位整数（从字节索引 &lt;code&gt;i&lt;/code&gt; 开始）设置为 &lt;code&gt;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8479104eff000b89daca784196d77a788e7152c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_int32_be&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; sets &lt;code&gt;b&lt;/code&gt;'s big-endian 32-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set_int32_be&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; 将 &lt;code&gt;b&lt;/code&gt; 的从字节索引 &lt;code&gt;i&lt;/code&gt; 开始的big-endian 32位整数设置为 &lt;code&gt;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c0397e0c495cb6e52bdba4e48a38d1694fd6b10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_int32_le&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; sets &lt;code&gt;b&lt;/code&gt;'s little-endian 32-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set_int32_le&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; 将 &lt;code&gt;b&lt;/code&gt; 的从字节索引 &lt;code&gt;i&lt;/code&gt; 开始的32位小尾数整数设置为 &lt;code&gt;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67a5a6c0cdc834b97e5554bfdbab6f377a62ae0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_int32_ne&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; sets &lt;code&gt;b&lt;/code&gt;'s native-endian 32-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set_int32_ne&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; 将 &lt;code&gt;b&lt;/code&gt; 的本机字节序的32位整数（从字节索引 &lt;code&gt;i&lt;/code&gt; 开始）设置为 &lt;code&gt;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9792e91008d95179e6fb01931299df4b6d2b103" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_int64_be&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; sets &lt;code&gt;b&lt;/code&gt;'s big-endian 64-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set_int64_be&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; 将 &lt;code&gt;b&lt;/code&gt; 的从字节索引 &lt;code&gt;i&lt;/code&gt; 开始的big-endian 64位整数设置为 &lt;code&gt;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97ee0b799f743f290c0b95d759edfd1b95b3fb8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_int64_le&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; sets &lt;code&gt;b&lt;/code&gt;'s little-endian 64-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set_int64_le&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; 将 &lt;code&gt;b&lt;/code&gt; 的从字节索引 &lt;code&gt;i&lt;/code&gt; 开始的little-endian 64位整数设置为 &lt;code&gt;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c52b5327434bae564dcacfbe9023a0787402aa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_int64_ne&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; sets &lt;code&gt;b&lt;/code&gt;'s native-endian 64-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set_int64_ne&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; 将 &lt;code&gt;b&lt;/code&gt; 的本机字节序的64位整数（从字节索引 &lt;code&gt;i&lt;/code&gt; 开始）设置为 &lt;code&gt;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="33e0d4f53a085502f45b2c269ecc1077dc75c6bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_int8&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; sets &lt;code&gt;b&lt;/code&gt;'s signed 8-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set_int8&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; 将 &lt;code&gt;b&lt;/code&gt; 的有符号8位整数（从字节索引 &lt;code&gt;i&lt;/code&gt; 开始）设置为 &lt;code&gt;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae47d8fc7f25949aecaf26570e1ac60f895cb35b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_uint16_be&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; sets &lt;code&gt;b&lt;/code&gt;'s big-endian unsigned 16-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set_uint16_be&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; 将 &lt;code&gt;b&lt;/code&gt; 的从字节索引 &lt;code&gt;i&lt;/code&gt; 开始的big-endian无符号16位整数设置为 &lt;code&gt;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e6a419dff26f4163e78562836db1f1a4c3e73d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_uint16_le&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; sets &lt;code&gt;b&lt;/code&gt;'s little-endian unsigned 16-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set_uint16_le&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; 将 &lt;code&gt;b&lt;/code&gt; 的低字节无符号16位整数（从字节索引 &lt;code&gt;i&lt;/code&gt; 开始）设置为 &lt;code&gt;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6321d15a87fae903afa3c65476241b0c355e7ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_uint16_ne&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; sets &lt;code&gt;b&lt;/code&gt;'s native-endian unsigned 16-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set_uint16_ne&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; 将 &lt;code&gt;b&lt;/code&gt; 的本机字节序无符号16位整数（从字节索引 &lt;code&gt;i&lt;/code&gt; 开始）设置为 &lt;code&gt;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9b4a611c9fa4b34b3479024bad98b925ce37989" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_uint8&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; sets &lt;code&gt;b&lt;/code&gt;'s unsigned 8-bit integer starting at byte index &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set_uint8&amp;nbsp;b&amp;nbsp;i&amp;nbsp;v&lt;/code&gt; 将 &lt;code&gt;b&lt;/code&gt; 的无符号8位整数（从字节索引 &lt;code&gt;i&lt;/code&gt; 开始）设置为 &lt;code&gt;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bfefc4a099a991fd222844ea2b31cd3b13a176f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setgroups&amp;nbsp;groups&lt;/code&gt; sets the supplementary group IDs for the calling process.</source>
          <target state="translated">&lt;code&gt;setgroups&amp;nbsp;groups&lt;/code&gt; 设置呼叫过程的补充组ID。</target>
        </trans-unit>
        <trans-unit id="1099105ff5b605758702e7e198dc3a5158fac797" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setgroups&amp;nbsp;groups&lt;/code&gt; sets the supplementary group IDs for the calling process. Appropriate privileges are required.</source>
          <target state="translated">&lt;code&gt;setgroups&amp;nbsp;groups&lt;/code&gt; 设置呼叫过程的补充组ID。需要适当的特权。</target>
        </trans-unit>
        <trans-unit id="d14099aa92ad340afee21f7f961b85b8f5d2c425" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setgroups&amp;nbsp;groups&lt;/code&gt; sets the supplementary group IDs for the calling process. Appropriate privileges are required. On Windows: not implemented.</source>
          <target state="translated">&lt;code&gt;setgroups&amp;nbsp;groups&lt;/code&gt; 设置呼叫过程的补充组ID。需要适当的特权。在Windows上：未实现。</target>
        </trans-unit>
        <trans-unit id="bd68066d25a99694f22fceba78f0ac6706a70fd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setitimer&amp;nbsp;t&amp;nbsp;s&lt;/code&gt; sets the interval timer &lt;code&gt;t&lt;/code&gt; and returns its previous status.</source>
          <target state="translated">&lt;code&gt;setitimer&amp;nbsp;t&amp;nbsp;s&lt;/code&gt; 设置间隔计时器 &lt;code&gt;t&lt;/code&gt; 并返回其先前状态。</target>
        </trans-unit>
        <trans-unit id="5f26bfa9baaf4f856eed79bafd54e5291573ea39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setitimer&amp;nbsp;t&amp;nbsp;s&lt;/code&gt; sets the interval timer &lt;code&gt;t&lt;/code&gt; and returns its previous status. The &lt;code&gt;s&lt;/code&gt; argument is interpreted as follows: &lt;code&gt;s.it_value&lt;/code&gt;, if nonzero, is the time to the next timer expiration; &lt;code&gt;s.it_interval&lt;/code&gt;, if nonzero, specifies a value to be used in reloading &lt;code&gt;it_value&lt;/code&gt; when the timer expires. Setting &lt;code&gt;s.it_value&lt;/code&gt; to zero disables the timer. Setting &lt;code&gt;s.it_interval&lt;/code&gt; to zero causes the timer to be disabled after its next expiration.</source>
          <target state="translated">&lt;code&gt;setitimer&amp;nbsp;t&amp;nbsp;s&lt;/code&gt; 设置间隔计时器 &lt;code&gt;t&lt;/code&gt; 并返回其先前状态。该 &lt;code&gt;s&lt;/code&gt; 参数被解释如下： &lt;code&gt;s.it_value&lt;/code&gt; ，如果非零，是时间到下一个计时器期满; &lt;code&gt;s.it_interval&lt;/code&gt; （如果非零）指定一个值，该值将在计时器到期时重新加载 &lt;code&gt;it_value&lt;/code&gt; 。将 &lt;code&gt;s.it_value&lt;/code&gt; 设置为零将禁用计时器。将 &lt;code&gt;s.it_interval&lt;/code&gt; 设置为零会导致计时器在下一次到期后被禁用。</target>
        </trans-unit>
        <trans-unit id="31fd850184af55bcffe628cc6ec978f20a79f57c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setitimer&amp;nbsp;t&amp;nbsp;s&lt;/code&gt; sets the interval timer &lt;code&gt;t&lt;/code&gt; and returns its previous status. The &lt;code&gt;s&lt;/code&gt; argument is interpreted as follows: &lt;code&gt;s.it_value&lt;/code&gt;, if nonzero, is the time to the next timer expiration; &lt;code&gt;s.it_interval&lt;/code&gt;, if nonzero, specifies a value to be used in reloading it_value when the timer expires. Setting &lt;code&gt;s.it_value&lt;/code&gt; to zero disable the timer. Setting &lt;code&gt;s.it_interval&lt;/code&gt; to zero causes the timer to be disabled after its next expiration.</source>
          <target state="translated">&lt;code&gt;setitimer&amp;nbsp;t&amp;nbsp;s&lt;/code&gt; 设置间隔计时器 &lt;code&gt;t&lt;/code&gt; 并返回其先前状态。该 &lt;code&gt;s&lt;/code&gt; 参数被解释如下： &lt;code&gt;s.it_value&lt;/code&gt; ，如果非零，是时间到下一个计时器期满; &lt;code&gt;s.it_interval&lt;/code&gt; （如果非零）指定一个值，该值将在计时器到期时重新加载it_value。将 &lt;code&gt;s.it_value&lt;/code&gt; 设置为零将禁用计时器。将 &lt;code&gt;s.it_interval&lt;/code&gt; 设置为零会导致计时器在下一次到期后被禁用。</target>
        </trans-unit>
        <trans-unit id="e0147801c7637833df43dbe56f515b39421f3a6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shift_left&amp;nbsp;x&amp;nbsp;n&lt;/code&gt; shifts &lt;code&gt;x&lt;/code&gt; to the left by &lt;code&gt;n&lt;/code&gt; bits.</source>
          <target state="translated">&lt;code&gt;shift_left&amp;nbsp;x&amp;nbsp;n&lt;/code&gt; 将 &lt;code&gt;x&lt;/code&gt; 左移 &lt;code&gt;n&lt;/code&gt; 位。</target>
        </trans-unit>
        <trans-unit id="1d688c4c763ccd97955b70456a89e2612d8ee84d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shift_left&amp;nbsp;x&amp;nbsp;n&lt;/code&gt; shifts &lt;code&gt;x&lt;/code&gt; to the left by &lt;code&gt;n&lt;/code&gt; bits. The result is unspecified if &lt;code&gt;n&amp;nbsp;&amp;lt;&amp;nbsp;0&lt;/code&gt; or &lt;code&gt;n&amp;nbsp;&amp;gt;&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;sys#VALint_size&quot;&gt;&lt;code&gt;Sys.int_size&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;shift_left&amp;nbsp;x&amp;nbsp;n&lt;/code&gt; 将 &lt;code&gt;x&lt;/code&gt; 左移 &lt;code&gt;n&lt;/code&gt; 位。如果 &lt;code&gt;n&amp;nbsp;&amp;lt;&amp;nbsp;0&lt;/code&gt; 或 &lt;code&gt;n&amp;nbsp;&amp;gt;&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;sys#VALint_size&quot;&gt; &lt;code&gt;Sys.int_size&lt;/code&gt; ,&lt;/a&gt;则结果不确定。</target>
        </trans-unit>
        <trans-unit id="d648ecda35537d7e62bc5d7941c2b11a61f33c8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shift_right&amp;nbsp;x&amp;nbsp;n&lt;/code&gt; shifts &lt;code&gt;x&lt;/code&gt; to the right by &lt;code&gt;n&lt;/code&gt; bits.</source>
          <target state="translated">&lt;code&gt;shift_right&amp;nbsp;x&amp;nbsp;n&lt;/code&gt; 将 &lt;code&gt;x&lt;/code&gt; 右移 &lt;code&gt;n&lt;/code&gt; 位。</target>
        </trans-unit>
        <trans-unit id="3214abd6ecbefb5cc8469a6de33bf9b239c851bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shift_right&amp;nbsp;x&amp;nbsp;n&lt;/code&gt; shifts &lt;code&gt;x&lt;/code&gt; to the right by &lt;code&gt;n&lt;/code&gt; bits. This is a logical shift: zeroes are inserted in the vacated bits regardless of the sign of &lt;code&gt;x&lt;/code&gt;. The result is unspecified if &lt;code&gt;n&amp;nbsp;&amp;lt;&amp;nbsp;0&lt;/code&gt; or &lt;code&gt;n&amp;nbsp;&amp;gt;&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;sys#VALint_size&quot;&gt;&lt;code&gt;Sys.int_size&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;shift_right&amp;nbsp;x&amp;nbsp;n&lt;/code&gt; 将 &lt;code&gt;x&lt;/code&gt; 右移 &lt;code&gt;n&lt;/code&gt; 位。这是一个逻辑上的移位：在空位中插入零而不考虑 &lt;code&gt;x&lt;/code&gt; 的符号。如果 &lt;code&gt;n&amp;nbsp;&amp;lt;&amp;nbsp;0&lt;/code&gt; 或 &lt;code&gt;n&amp;nbsp;&amp;gt;&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;sys#VALint_size&quot;&gt; &lt;code&gt;Sys.int_size&lt;/code&gt; ,&lt;/a&gt;则结果不确定。</target>
        </trans-unit>
        <trans-unit id="9086d683f93d4793b6dbe46434d09e8302f4f3f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shift_right&amp;nbsp;x&amp;nbsp;n&lt;/code&gt; shifts &lt;code&gt;x&lt;/code&gt; to the right by &lt;code&gt;n&lt;/code&gt; bits. This is an arithmetic shift: the sign bit of &lt;code&gt;x&lt;/code&gt; is replicated and inserted in the vacated bits. The result is unspecified if &lt;code&gt;n&amp;nbsp;&amp;lt;&amp;nbsp;0&lt;/code&gt; or &lt;code&gt;n&amp;nbsp;&amp;gt;&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;sys#VALint_size&quot;&gt;&lt;code&gt;Sys.int_size&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;shift_right&amp;nbsp;x&amp;nbsp;n&lt;/code&gt; 将 &lt;code&gt;x&lt;/code&gt; 右移 &lt;code&gt;n&lt;/code&gt; 位。这是一种算术移位： &lt;code&gt;x&lt;/code&gt; 的符号位被复制并插入到空出的位中。如果 &lt;code&gt;n&amp;nbsp;&amp;lt;&amp;nbsp;0&lt;/code&gt; 或 &lt;code&gt;n&amp;nbsp;&amp;gt;&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;sys#VALint_size&quot;&gt; &lt;code&gt;Sys.int_size&lt;/code&gt; ,&lt;/a&gt;则结果不确定。</target>
        </trans-unit>
        <trans-unit id="88159f6418887e8d39a6953636ffb58a5c15bbc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sigmask&amp;nbsp;cmd&amp;nbsp;sigs&lt;/code&gt; changes the set of blocked signals for the calling thread.</source>
          <target state="translated">&lt;code&gt;sigmask&amp;nbsp;cmd&amp;nbsp;sigs&lt;/code&gt; 更改调用线程的阻塞信号集。</target>
        </trans-unit>
        <trans-unit id="5aaed51de9a1c5e025eece8148fb51ea781ca365" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sigmask&amp;nbsp;cmd&amp;nbsp;sigs&lt;/code&gt; changes the set of blocked signals for the calling thread. If &lt;code&gt;cmd&lt;/code&gt; is &lt;code&gt;SIG_SETMASK&lt;/code&gt;, blocked signals are set to those in the list &lt;code&gt;sigs&lt;/code&gt;. If &lt;code&gt;cmd&lt;/code&gt; is &lt;code&gt;SIG_BLOCK&lt;/code&gt;, the signals in &lt;code&gt;sigs&lt;/code&gt; are added to the set of blocked signals. If &lt;code&gt;cmd&lt;/code&gt; is &lt;code&gt;SIG_UNBLOCK&lt;/code&gt;, the signals in &lt;code&gt;sigs&lt;/code&gt; are removed from the set of blocked signals. &lt;code&gt;sigmask&lt;/code&gt; returns the set of previously blocked signals for the thread.</source>
          <target state="translated">&lt;code&gt;sigmask&amp;nbsp;cmd&amp;nbsp;sigs&lt;/code&gt; 更改调用线程的阻塞信号集。如果 &lt;code&gt;cmd&lt;/code&gt; 是 &lt;code&gt;SIG_SETMASK&lt;/code&gt; ，阻断信号被设置为那些在名单 &lt;code&gt;sigs&lt;/code&gt; 。如果 &lt;code&gt;cmd&lt;/code&gt; 是 &lt;code&gt;SIG_BLOCK&lt;/code&gt; ，在信号 &lt;code&gt;sigs&lt;/code&gt; 被添加到集合阻塞信号。如果 &lt;code&gt;cmd&lt;/code&gt; 为 &lt;code&gt;SIG_UNBLOCK&lt;/code&gt; ，则sig中的信号 &lt;code&gt;sigs&lt;/code&gt; 被阻止的信号集中删除。 &lt;code&gt;sigmask&lt;/code&gt; 返回该线程先前阻止的信号集。</target>
        </trans-unit>
        <trans-unit id="220e248a03e77c42b76d41546ea5188a2b76531b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sign_bit&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; if and only if the sign bit of &lt;code&gt;x&lt;/code&gt; is set.</source>
          <target state="translated">&lt;code&gt;sign_bit&amp;nbsp;x&lt;/code&gt; 当且仅当设置了 &lt;code&gt;x&lt;/code&gt; 的符号位时，sign_bit x才为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0bda6d10e6daf4fc29382ab19c793576569b5b76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sign_bit&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; if and only if the sign bit of &lt;code&gt;x&lt;/code&gt; is set. For example &lt;code&gt;sign_bit&amp;nbsp;1.&lt;/code&gt; and &lt;code&gt;signbit&amp;nbsp;0.&lt;/code&gt; are &lt;code&gt;false&lt;/code&gt; while &lt;code&gt;sign_bit&amp;nbsp;(-1.)&lt;/code&gt; and &lt;code&gt;sign_bit&amp;nbsp;(-0.)&lt;/code&gt; are &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sign_bit&amp;nbsp;x&lt;/code&gt; 当且仅当设置了 &lt;code&gt;x&lt;/code&gt; 的符号位时，sign_bit x才为 &lt;code&gt;true&lt;/code&gt; 。例如 &lt;code&gt;sign_bit&amp;nbsp;1.&lt;/code&gt; 和 &lt;code&gt;signbit&amp;nbsp;0.&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; ,而 &lt;code&gt;sign_bit&amp;nbsp;(-1.)&lt;/code&gt; 和 &lt;code&gt;sign_bit&amp;nbsp;(-0.)&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c5a7b542167a240222315d9b69d2fe2b3e15e2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sign_bit&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; iff the sign bit of &lt;code&gt;x&lt;/code&gt; is set.</source>
          <target state="translated">&lt;code&gt;sign_bit&amp;nbsp;x&lt;/code&gt; 如果设置了 &lt;code&gt;x&lt;/code&gt; 的符号位，则sign_bit x为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1afa1210035092dd9836282e4150fb0c37e2e379" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sign_bit&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; iff the sign bit of &lt;code&gt;x&lt;/code&gt; is set. For example &lt;code&gt;sign_bit&amp;nbsp;1.&lt;/code&gt; and &lt;code&gt;signbit&amp;nbsp;0.&lt;/code&gt; are &lt;code&gt;false&lt;/code&gt; while &lt;code&gt;sign_bit&amp;nbsp;(-1.)&lt;/code&gt; and &lt;code&gt;sign_bit&amp;nbsp;(-0.)&lt;/code&gt; are &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sign_bit&amp;nbsp;x&lt;/code&gt; 如果设置了 &lt;code&gt;x&lt;/code&gt; 的符号位，则sign_bit x为 &lt;code&gt;true&lt;/code&gt; 。例如 &lt;code&gt;sign_bit&amp;nbsp;1.&lt;/code&gt; 和 &lt;code&gt;signbit&amp;nbsp;0.&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; ,而 &lt;code&gt;sign_bit&amp;nbsp;(-1.)&lt;/code&gt; 和 &lt;code&gt;sign_bit&amp;nbsp;(-0.)&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f972c27f9a81eb98b1f5267754dc0cff7dc2780f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;signal&amp;nbsp;c&lt;/code&gt; restarts one of the processes waiting on the condition variable &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;signal&amp;nbsp;c&lt;/code&gt; 重新启动等待条件变量 &lt;code&gt;c&lt;/code&gt; 的进程之一。</target>
        </trans-unit>
        <trans-unit id="921b9498dab4094a954996e7f878fceaa7134fcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sigprocmask&amp;nbsp;cmd&amp;nbsp;sigs&lt;/code&gt; changes the set of blocked signals.</source>
          <target state="translated">&lt;code&gt;sigprocmask&amp;nbsp;cmd&amp;nbsp;sigs&lt;/code&gt; 更改被阻止信号的集合。</target>
        </trans-unit>
        <trans-unit id="73fbd1668738ff873256cf4237e6c15b582862cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sigprocmask&amp;nbsp;cmd&amp;nbsp;sigs&lt;/code&gt; changes the set of blocked signals. If &lt;code&gt;cmd&lt;/code&gt; is &lt;code&gt;SIG_SETMASK&lt;/code&gt;, blocked signals are set to those in the list &lt;code&gt;sigs&lt;/code&gt;. If &lt;code&gt;cmd&lt;/code&gt; is &lt;code&gt;SIG_BLOCK&lt;/code&gt;, the signals in &lt;code&gt;sigs&lt;/code&gt; are added to the set of blocked signals. If &lt;code&gt;cmd&lt;/code&gt; is &lt;code&gt;SIG_UNBLOCK&lt;/code&gt;, the signals in &lt;code&gt;sigs&lt;/code&gt; are removed from the set of blocked signals. &lt;code&gt;sigprocmask&lt;/code&gt; returns the set of previously blocked signals.</source>
          <target state="translated">&lt;code&gt;sigprocmask&amp;nbsp;cmd&amp;nbsp;sigs&lt;/code&gt; 更改被阻止信号的集合。如果 &lt;code&gt;cmd&lt;/code&gt; 是 &lt;code&gt;SIG_SETMASK&lt;/code&gt; ，阻断信号被设置为那些在名单 &lt;code&gt;sigs&lt;/code&gt; 。如果 &lt;code&gt;cmd&lt;/code&gt; 是 &lt;code&gt;SIG_BLOCK&lt;/code&gt; ，在信号 &lt;code&gt;sigs&lt;/code&gt; 被添加到集合阻塞信号。如果 &lt;code&gt;cmd&lt;/code&gt; 为 &lt;code&gt;SIG_UNBLOCK&lt;/code&gt; ，则sig中的信号 &lt;code&gt;sigs&lt;/code&gt; 被阻止的信号集中删除。 &lt;code&gt;sigprocmask&lt;/code&gt; 返回先前阻塞的信号集。</target>
        </trans-unit>
        <trans-unit id="ce91f3aede332ad5c50ce21b66cb63a947e77b8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sigprocmask&amp;nbsp;mode&amp;nbsp;sigs&lt;/code&gt; changes the set of blocked signals.</source>
          <target state="translated">&lt;code&gt;sigprocmask&amp;nbsp;mode&amp;nbsp;sigs&lt;/code&gt; 更改被阻止信号的集合。</target>
        </trans-unit>
        <trans-unit id="d11dd1e6af1db4d30d5d210d3d22e7871213ad01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sigprocmask&amp;nbsp;mode&amp;nbsp;sigs&lt;/code&gt; changes the set of blocked signals. If &lt;code&gt;mode&lt;/code&gt; is &lt;code&gt;SIG_SETMASK&lt;/code&gt;, blocked signals are set to those in the list &lt;code&gt;sigs&lt;/code&gt;. If &lt;code&gt;mode&lt;/code&gt; is &lt;code&gt;SIG_BLOCK&lt;/code&gt;, the signals in &lt;code&gt;sigs&lt;/code&gt; are added to the set of blocked signals. If &lt;code&gt;mode&lt;/code&gt; is &lt;code&gt;SIG_UNBLOCK&lt;/code&gt;, the signals in &lt;code&gt;sigs&lt;/code&gt; are removed from the set of blocked signals. &lt;code&gt;sigprocmask&lt;/code&gt; returns the set of previously blocked signals.</source>
          <target state="translated">&lt;code&gt;sigprocmask&amp;nbsp;mode&amp;nbsp;sigs&lt;/code&gt; 更改被阻止信号的集合。如果 &lt;code&gt;mode&lt;/code&gt; 是 &lt;code&gt;SIG_SETMASK&lt;/code&gt; ，阻断信号被设置为那些在名单 &lt;code&gt;sigs&lt;/code&gt; 。如果 &lt;code&gt;mode&lt;/code&gt; 是 &lt;code&gt;SIG_BLOCK&lt;/code&gt; ，在信号 &lt;code&gt;sigs&lt;/code&gt; 被添加到集合阻塞信号。如果 &lt;code&gt;mode&lt;/code&gt; 为 &lt;code&gt;SIG_UNBLOCK&lt;/code&gt; ，则sig中的信号 &lt;code&gt;sigs&lt;/code&gt; 被阻止的信号集中删除。 &lt;code&gt;sigprocmask&lt;/code&gt; 返回先前阻塞的信号集。</target>
        </trans-unit>
        <trans-unit id="ea2bd910edf4cd22f368d953473437fcf6c52022" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sigprocmask&amp;nbsp;~mode&amp;nbsp;sigs&lt;/code&gt; changes the set of blocked signals.</source>
          <target state="translated">&lt;code&gt;sigprocmask&amp;nbsp;~mode&amp;nbsp;sigs&lt;/code&gt; 更改被阻止信号的集合。</target>
        </trans-unit>
        <trans-unit id="14d3b7804521e8f817e8b5bb4fbb0aac220da031" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sigprocmask&amp;nbsp;~mode&amp;nbsp;sigs&lt;/code&gt; changes the set of blocked signals. If &lt;code&gt;mode&lt;/code&gt; is &lt;code&gt;SIG_SETMASK&lt;/code&gt;, blocked signals are set to those in the list &lt;code&gt;sigs&lt;/code&gt;. If &lt;code&gt;mode&lt;/code&gt; is &lt;code&gt;SIG_BLOCK&lt;/code&gt;, the signals in &lt;code&gt;sigs&lt;/code&gt; are added to the set of blocked signals. If &lt;code&gt;mode&lt;/code&gt; is &lt;code&gt;SIG_UNBLOCK&lt;/code&gt;, the signals in &lt;code&gt;sigs&lt;/code&gt; are removed from the set of blocked signals. &lt;code&gt;sigprocmask&lt;/code&gt; returns the set of previously blocked signals.</source>
          <target state="translated">&lt;code&gt;sigprocmask&amp;nbsp;~mode&amp;nbsp;sigs&lt;/code&gt; 更改被阻止信号的集合。如果 &lt;code&gt;mode&lt;/code&gt; 是 &lt;code&gt;SIG_SETMASK&lt;/code&gt; ，阻断信号被设置为那些在名单 &lt;code&gt;sigs&lt;/code&gt; 。如果 &lt;code&gt;mode&lt;/code&gt; 是 &lt;code&gt;SIG_BLOCK&lt;/code&gt; ，在信号 &lt;code&gt;sigs&lt;/code&gt; 被添加到集合阻塞信号。如果 &lt;code&gt;mode&lt;/code&gt; 为 &lt;code&gt;SIG_UNBLOCK&lt;/code&gt; ，则sig中的信号 &lt;code&gt;sigs&lt;/code&gt; 被阻止的信号集中删除。 &lt;code&gt;sigprocmask&lt;/code&gt; 返回先前阻塞的信号集。</target>
        </trans-unit>
        <trans-unit id="d9b19669e3a8ae04ad4918f597f3a2c5f08daf9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sigsuspend&amp;nbsp;sigs&lt;/code&gt; atomically sets the blocked signals to &lt;code&gt;sigs&lt;/code&gt; and waits for a non-ignored, non-blocked signal to be delivered.</source>
          <target state="translated">&lt;code&gt;sigsuspend&amp;nbsp;sigs&lt;/code&gt; 原子地将阻塞的信号设置为 &lt;code&gt;sigs&lt;/code&gt; 并等待要传递的非忽略，非阻塞信号。</target>
        </trans-unit>
        <trans-unit id="73939b3f1d5f07847afe580a7c1075cec5e42a83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sigsuspend&amp;nbsp;sigs&lt;/code&gt; atomically sets the blocked signals to &lt;code&gt;sigs&lt;/code&gt; and waits for a non-ignored, non-blocked signal to be delivered. On return, the blocked signals are reset to their initial value.</source>
          <target state="translated">&lt;code&gt;sigsuspend&amp;nbsp;sigs&lt;/code&gt; 原子地将阻塞的信号设置为 &lt;code&gt;sigs&lt;/code&gt; 并等待要传递的非忽略，非阻塞信号。返回时，阻塞的信号将重置为其初始值。</target>
        </trans-unit>
        <trans-unit id="c74bb4c02e672602a83a77ebbba0a32001e73c57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;singleton&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; returns the one-element map that contains a binding &lt;code&gt;y&lt;/code&gt; for &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;singleton&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 返回一个包含结合一元件地图 &lt;code&gt;y&lt;/code&gt; 为 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf40a07797dec9ab655407f725530041e6a276a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;singleton&amp;nbsp;x&lt;/code&gt; returns the one-element set containing only &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;singleton&amp;nbsp;x&lt;/code&gt; 返回仅包含 &lt;code&gt;x&lt;/code&gt; 的单元素集。</target>
        </trans-unit>
        <trans-unit id="750682046aa2ff18fd03bbafb4e2f880e791e2d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size_in_bytes&amp;nbsp;a&lt;/code&gt; is &lt;code&gt;a&lt;/code&gt;'s &lt;a href=&quot;bigarray#VALkind_size_in_bytes&quot;&gt;&lt;code&gt;Bigarray.kind_size_in_bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;size_in_bytes&amp;nbsp;a&lt;/code&gt; 是 &lt;code&gt;a&lt;/code&gt; 的&lt;a href=&quot;bigarray#VALkind_size_in_bytes&quot;&gt; &lt;code&gt;Bigarray.kind_size_in_bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="566d45c264e7997d8b292eb273fb3a2a2163fe2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size_in_bytes&amp;nbsp;a&lt;/code&gt; is the number of elements in &lt;code&gt;a&lt;/code&gt; multiplied by &lt;code&gt;a&lt;/code&gt;'s &lt;a href=&quot;bigarray#VALkind_size_in_bytes&quot;&gt;&lt;code&gt;Bigarray.kind_size_in_bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;size_in_bytes&amp;nbsp;a&lt;/code&gt; 是在元件的数量 &lt;code&gt;a&lt;/code&gt; 乘以 &lt;code&gt;a&lt;/code&gt; 的&lt;a href=&quot;bigarray#VALkind_size_in_bytes&quot;&gt; &lt;code&gt;Bigarray.kind_size_in_bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ae059726180c208232c183aa35330673bda2143f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;some&amp;nbsp;v&lt;/code&gt; is &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;some&amp;nbsp;v&lt;/code&gt; 是 &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aab77ea4361fff8472c280a735016a294edc5047" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;split&amp;nbsp;r&amp;nbsp;s&lt;/code&gt; splits &lt;code&gt;s&lt;/code&gt; into substrings, taking as delimiters the substrings that match &lt;code&gt;r&lt;/code&gt;, and returns the list of substrings.</source>
          <target state="translated">&lt;code&gt;split&amp;nbsp;r&amp;nbsp;s&lt;/code&gt; 分裂 &lt;code&gt;s&lt;/code&gt; 为子，以作为分隔符的子字符串匹配 &lt;code&gt;r&lt;/code&gt; 子串，并返回列表。</target>
        </trans-unit>
        <trans-unit id="75f31af2d2048ab3fb57e8bd20b8df3977395612" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;split&amp;nbsp;r&amp;nbsp;s&lt;/code&gt; splits &lt;code&gt;s&lt;/code&gt; into substrings, taking as delimiters the substrings that match &lt;code&gt;r&lt;/code&gt;, and returns the list of substrings. For instance, &lt;code&gt;split&amp;nbsp;(regexp&amp;nbsp;&quot;[&amp;nbsp;\t]+&quot;)&amp;nbsp;s&lt;/code&gt; splits &lt;code&gt;s&lt;/code&gt; into blank-separated words. An occurrence of the delimiter at the beginning or at the end of the string is ignored.</source>
          <target state="translated">&lt;code&gt;split&amp;nbsp;r&amp;nbsp;s&lt;/code&gt; 分裂 &lt;code&gt;s&lt;/code&gt; 为子，以作为分隔符的子字符串匹配 &lt;code&gt;r&lt;/code&gt; 子串，并返回列表。例如， &lt;code&gt;split&amp;nbsp;(regexp&amp;nbsp;&quot;[&amp;nbsp;\t]+&quot;)&amp;nbsp;s&lt;/code&gt; 将 &lt;code&gt;s&lt;/code&gt; 拆分为以空格分隔的单词。在字符串的开头或结尾出现的定界符将被忽略。</target>
        </trans-unit>
        <trans-unit id="9ed46cdf07d4e3f70ed368cf2033eea59b63ba06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;split&amp;nbsp;x&amp;nbsp;m&lt;/code&gt; returns a triple &lt;code&gt;(l,&amp;nbsp;data,&amp;nbsp;r)&lt;/code&gt;, where &lt;code&gt;l&lt;/code&gt; is the map with all the bindings of &lt;code&gt;m&lt;/code&gt; whose key is strictly less than &lt;code&gt;x&lt;/code&gt;; &lt;code&gt;r&lt;/code&gt; is the map with all the bindings of &lt;code&gt;m&lt;/code&gt; whose key is strictly greater than &lt;code&gt;x&lt;/code&gt;; &lt;code&gt;data&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;m&lt;/code&gt; contains no binding for &lt;code&gt;x&lt;/code&gt;, or &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; if &lt;code&gt;m&lt;/code&gt; binds &lt;code&gt;v&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;split&amp;nbsp;x&amp;nbsp;m&lt;/code&gt; 返回一个三元组 &lt;code&gt;(l,&amp;nbsp;data,&amp;nbsp;r)&lt;/code&gt; ，其中 &lt;code&gt;l&lt;/code&gt; 是具有 &lt;code&gt;m&lt;/code&gt; 的所有绑定的映射，其键严格小于 &lt;code&gt;x&lt;/code&gt; ； &lt;code&gt;r&lt;/code&gt; 是具有 &lt;code&gt;m&lt;/code&gt; 的所有绑定的映射，其键严格大于 &lt;code&gt;x&lt;/code&gt; ; &lt;code&gt;data&lt;/code&gt; 是 &lt;code&gt;None&lt;/code&gt; 如果 &lt;code&gt;m&lt;/code&gt; 包含不结合 &lt;code&gt;x&lt;/code&gt; ，或 &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; 如果 &lt;code&gt;m&lt;/code&gt; 结合 &lt;code&gt;v&lt;/code&gt; 到 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e81d2ca87d12f1d718af47988526bd668406a65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;split&amp;nbsp;x&amp;nbsp;s&lt;/code&gt; returns a triple &lt;code&gt;(l,&amp;nbsp;present,&amp;nbsp;r)&lt;/code&gt;, where &lt;code&gt;l&lt;/code&gt; is the set of elements of &lt;code&gt;s&lt;/code&gt; that are strictly less than &lt;code&gt;x&lt;/code&gt;; &lt;code&gt;r&lt;/code&gt; is the set of elements of &lt;code&gt;s&lt;/code&gt; that are strictly greater than &lt;code&gt;x&lt;/code&gt;; &lt;code&gt;present&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;s&lt;/code&gt; contains no element equal to &lt;code&gt;x&lt;/code&gt;, or &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;s&lt;/code&gt; contains an element equal to &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;split&amp;nbsp;x&amp;nbsp;s&lt;/code&gt; 返回一个三元组 &lt;code&gt;(l,&amp;nbsp;present,&amp;nbsp;r)&lt;/code&gt; ，其中 &lt;code&gt;l&lt;/code&gt; 是 &lt;code&gt;s&lt;/code&gt; 严格小于 &lt;code&gt;x&lt;/code&gt; 的元素集； &lt;code&gt;r&lt;/code&gt; 是严格大于 &lt;code&gt;x&lt;/code&gt; 的 &lt;code&gt;s&lt;/code&gt; 元素的集合； &lt;code&gt;present&lt;/code&gt; 是 &lt;code&gt;false&lt;/code&gt; 如果 &lt;code&gt;s&lt;/code&gt; 不包含元件等于 &lt;code&gt;x&lt;/code&gt; ，或 &lt;code&gt;true&lt;/code&gt; 如果 &lt;code&gt;s&lt;/code&gt; 包含一个元件等于 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16b032ae21b03ecfa966130ba5e9b22a71cfbf53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;split_on_char&amp;nbsp;sep&amp;nbsp;s&lt;/code&gt; is the list of all (possibly empty) substrings of &lt;code&gt;s&lt;/code&gt; that are delimited by the character &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;split_on_char&amp;nbsp;sep&amp;nbsp;s&lt;/code&gt; 是所有（可能是空的）子列表 &lt;code&gt;s&lt;/code&gt; 由字符分隔的 &lt;code&gt;sep&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="42a6fa24e47f7a148913ca54dabcd89d2858b871" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;split_on_char&amp;nbsp;~sep&amp;nbsp;s&lt;/code&gt; is the list of all (possibly empty) substrings of &lt;code&gt;s&lt;/code&gt; that are delimited by the character &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;split_on_char&amp;nbsp;~sep&amp;nbsp;s&lt;/code&gt; 是由字符 &lt;code&gt;sep&lt;/code&gt; 分隔的 &lt;code&gt;s&lt;/code&gt; 的所有（可能为空）子字符串的列表。</target>
        </trans-unit>
        <trans-unit id="2dfbad57063fa13727d780dfa20d8a626852868d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;str_formatter&lt;/code&gt; is defined as &lt;a href=&quot;format#VALformatter_of_buffer&quot;&gt;&lt;code&gt;Format.formatter_of_buffer&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;format#VALstdbuf&quot;&gt;&lt;code&gt;Format.stdbuf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;str_formatter&lt;/code&gt; 定义为&lt;a href=&quot;format#VALformatter_of_buffer&quot;&gt; &lt;code&gt;Format.formatter_of_buffer&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;format#VALstdbuf&quot;&gt; &lt;code&gt;Format.stdbuf&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d3f1c8f998a47abc3cef64182b56893c5b35caf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string_after&amp;nbsp;s&amp;nbsp;n&lt;/code&gt; returns the substring of all characters of &lt;code&gt;s&lt;/code&gt; that follow position &lt;code&gt;n&lt;/code&gt; (including the character at position &lt;code&gt;n&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;string_after&amp;nbsp;s&amp;nbsp;n&lt;/code&gt; 返回的所有字符的串 &lt;code&gt;s&lt;/code&gt; 后面位置 &lt;code&gt;n&lt;/code&gt; （包括在位置的字符 &lt;code&gt;n&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e28f5eb012a6bfd4f96a1a20cbe79e0895896bd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string_before&amp;nbsp;s&amp;nbsp;n&lt;/code&gt; returns the substring of all characters of &lt;code&gt;s&lt;/code&gt; that precede position &lt;code&gt;n&lt;/code&gt; (excluding the character at position &lt;code&gt;n&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;string_before&amp;nbsp;s&amp;nbsp;n&lt;/code&gt; 返回的所有字符的串 &lt;code&gt;s&lt;/code&gt; 它之前位置 &lt;code&gt;n&lt;/code&gt; （不包括在位置的字符 &lt;code&gt;n&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="597b6be93299a274874fd3b9c59ba61cc243d297" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string_match&amp;nbsp;r&amp;nbsp;s&amp;nbsp;start&lt;/code&gt; tests whether a substring of &lt;code&gt;s&lt;/code&gt; that starts at position &lt;code&gt;start&lt;/code&gt; matches the regular expression &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string_match&amp;nbsp;r&amp;nbsp;s&amp;nbsp;start&lt;/code&gt; 测试从位置 &lt;code&gt;start&lt;/code&gt; 开始的 &lt;code&gt;s&lt;/code&gt; 的子字符串是否与正则表达式 &lt;code&gt;r&lt;/code&gt; 匹配。</target>
        </trans-unit>
        <trans-unit id="7341de04b8712f538b3448ded36eab1315facc8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string_match&amp;nbsp;r&amp;nbsp;s&amp;nbsp;start&lt;/code&gt; tests whether a substring of &lt;code&gt;s&lt;/code&gt; that starts at position &lt;code&gt;start&lt;/code&gt; matches the regular expression &lt;code&gt;r&lt;/code&gt;. The first character of a string has position &lt;code&gt;0&lt;/code&gt;, as usual.</source>
          <target state="translated">&lt;code&gt;string_match&amp;nbsp;r&amp;nbsp;s&amp;nbsp;start&lt;/code&gt; 测试从位置 &lt;code&gt;start&lt;/code&gt; 开始的 &lt;code&gt;s&lt;/code&gt; 的子字符串是否与正则表达式 &lt;code&gt;r&lt;/code&gt; 匹配。通常，字符串的第一个字符的位置为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4192835a2660f07fc785e71995d2dbbacf4cbb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sub&amp;nbsp;a&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; returns a fresh array of length &lt;code&gt;len&lt;/code&gt;, containing the elements number &lt;code&gt;pos&lt;/code&gt; to &lt;code&gt;pos&amp;nbsp;+&amp;nbsp;len&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; of array &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sub&amp;nbsp;a&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; 返回一个长度为 &lt;code&gt;len&lt;/code&gt; 的新数组，其中包含元素编号 &lt;code&gt;pos&lt;/code&gt; 到数组 &lt;code&gt;a&lt;/code&gt; 的 &lt;code&gt;pos&amp;nbsp;+&amp;nbsp;len&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c582fe201727f56cbfcb767f6a796b87802aef3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sub&amp;nbsp;a&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; returns a fresh floatarray of length &lt;code&gt;len&lt;/code&gt;, containing the elements number &lt;code&gt;pos&lt;/code&gt; to &lt;code&gt;pos&amp;nbsp;+&amp;nbsp;len&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; of floatarray &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sub&amp;nbsp;a&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; 返回长度为 &lt;code&gt;len&lt;/code&gt; 的新鲜floatarray ，其中包含元素个数 &lt;code&gt;pos&lt;/code&gt; 到floatarray &lt;code&gt;a&lt;/code&gt; 的 &lt;code&gt;pos&amp;nbsp;+&amp;nbsp;len&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1dca9006725efe812ab56e89935c4954b801b78f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sub&amp;nbsp;a&amp;nbsp;start&amp;nbsp;len&lt;/code&gt; returns a fresh floatarray of length &lt;code&gt;len&lt;/code&gt;, containing the elements number &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;start&amp;nbsp;+&amp;nbsp;len&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; of floatarray &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sub&amp;nbsp;a&amp;nbsp;start&amp;nbsp;len&lt;/code&gt; 返回一个新的float数组，该数组的长度为 &lt;code&gt;len&lt;/code&gt; ，其中包含元素个数 &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;start&amp;nbsp;+&amp;nbsp;len&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; floatarray &lt;code&gt;a&lt;/code&gt; 的len-1。</target>
        </trans-unit>
        <trans-unit id="08bd796cbcb26ae38dae701cf60c95a153003505" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sub&amp;nbsp;a&amp;nbsp;~pos&amp;nbsp;~len&lt;/code&gt; returns a fresh array of length &lt;code&gt;len&lt;/code&gt;, containing the elements number &lt;code&gt;pos&lt;/code&gt; to &lt;code&gt;pos&amp;nbsp;+&amp;nbsp;len&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; of array &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sub&amp;nbsp;a&amp;nbsp;~pos&amp;nbsp;~len&lt;/code&gt; 返回长度为 &lt;code&gt;len&lt;/code&gt; 的新数组，其中包含元素编号 &lt;code&gt;pos&lt;/code&gt; 到数组 &lt;code&gt;a&lt;/code&gt; 的 &lt;code&gt;pos&amp;nbsp;+&amp;nbsp;len&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee443d07fdc8bfaf632ccc9438c2c2bcd3375ff3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sub&amp;nbsp;a&amp;nbsp;~pos&amp;nbsp;~len&lt;/code&gt; returns a fresh floatarray of length &lt;code&gt;len&lt;/code&gt;, containing the elements number &lt;code&gt;pos&lt;/code&gt; to &lt;code&gt;pos&amp;nbsp;+&amp;nbsp;len&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; of floatarray &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sub&amp;nbsp;a&amp;nbsp;~pos&amp;nbsp;~len&lt;/code&gt; a〜pos〜len返回长度为 &lt;code&gt;len&lt;/code&gt; 的新鲜floatarray ，其中包含元素个数 &lt;code&gt;pos&lt;/code&gt; 到floatarray &lt;code&gt;a&lt;/code&gt; 的 &lt;code&gt;pos&amp;nbsp;+&amp;nbsp;len&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4325c96b7725c339c3095828253e66f1f844e57b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sub&amp;nbsp;s&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; is a string of length &lt;code&gt;len&lt;/code&gt;, containing the substring of &lt;code&gt;s&lt;/code&gt; that starts at position &lt;code&gt;pos&lt;/code&gt; and has length &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sub&amp;nbsp;s&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; 是长度为 &lt;code&gt;len&lt;/code&gt; 的字符串，其中包含 &lt;code&gt;s&lt;/code&gt; 的子字符串，该子字符串在位置 &lt;code&gt;pos&lt;/code&gt; 处开始并且长度为 &lt;code&gt;len&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="506db3852fae4bd81aed494887fb99fbc8b29311" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sub&amp;nbsp;s&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; returns a new byte sequence of length &lt;code&gt;len&lt;/code&gt;, containing the subsequence of &lt;code&gt;s&lt;/code&gt; that starts at position &lt;code&gt;pos&lt;/code&gt; and has length &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sub&amp;nbsp;s&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; 回报长度的新字节序列 &lt;code&gt;len&lt;/code&gt; 个，含有的亚序列 &lt;code&gt;s&lt;/code&gt; 在位置开始 &lt;code&gt;pos&lt;/code&gt; ，并具有长度 &lt;code&gt;len&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb27caff6728da5fb752531e601ba415a1cf8493" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sub&amp;nbsp;s&amp;nbsp;start&amp;nbsp;len&lt;/code&gt; returns a new byte sequence of length &lt;code&gt;len&lt;/code&gt;, containing the subsequence of &lt;code&gt;s&lt;/code&gt; that starts at position &lt;code&gt;start&lt;/code&gt; and has length &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sub&amp;nbsp;s&amp;nbsp;start&amp;nbsp;len&lt;/code&gt; 回报长度的新字节序列 &lt;code&gt;len&lt;/code&gt; 个，含有的亚序列 &lt;code&gt;s&lt;/code&gt; 在位置开始 &lt;code&gt;start&lt;/code&gt; ，并具有长度 &lt;code&gt;len&lt;/code&gt; 个。</target>
        </trans-unit>
        <trans-unit id="22b0c43edaf14e78c9e94836945b6be3bf42462b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sub&amp;nbsp;s&amp;nbsp;~pos&amp;nbsp;~len&lt;/code&gt; is a string of length &lt;code&gt;len&lt;/code&gt;, containing the substring of &lt;code&gt;s&lt;/code&gt; that starts at position &lt;code&gt;pos&lt;/code&gt; and has length &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sub&amp;nbsp;s&amp;nbsp;~pos&amp;nbsp;~len&lt;/code&gt; 是一个长度为 &lt;code&gt;len&lt;/code&gt; 的字符串，包含 &lt;code&gt;s&lt;/code&gt; 的子字符串，该子字符串在位置 &lt;code&gt;pos&lt;/code&gt; 处开始并且长度为 &lt;code&gt;len&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf4126ca6a8b25dd9cf95fc6343f56fe24f50047" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sub&amp;nbsp;s&amp;nbsp;~pos&amp;nbsp;~len&lt;/code&gt; returns a new byte sequence of length &lt;code&gt;len&lt;/code&gt;, containing the subsequence of &lt;code&gt;s&lt;/code&gt; that starts at position &lt;code&gt;pos&lt;/code&gt; and has length &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sub&amp;nbsp;s&amp;nbsp;~pos&amp;nbsp;~len&lt;/code&gt; 返回长度为 &lt;code&gt;len&lt;/code&gt; 的新字节序列，其中包含 &lt;code&gt;s&lt;/code&gt; 的子序列，该子序列的位置为 &lt;code&gt;pos&lt;/code&gt; ，长度为 &lt;code&gt;len&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34fbc07b8f612a0d90257fcaf25e1b9be6fab168" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sub&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; is the subtraction &lt;code&gt;x&amp;nbsp;-&amp;nbsp;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sub&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 是减法 &lt;code&gt;x&amp;nbsp;-&amp;nbsp;y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="89ca35eda7d6f997458c18caa0b9d69fa0ee2759" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subset&amp;nbsp;s1&amp;nbsp;s2&lt;/code&gt; tests whether the set &lt;code&gt;s1&lt;/code&gt; is a subset of the set &lt;code&gt;s2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;subset&amp;nbsp;s1&amp;nbsp;s2&lt;/code&gt; 测试集合 &lt;code&gt;s1&lt;/code&gt; 是否是集合 &lt;code&gt;s2&lt;/code&gt; 的子集。</target>
        </trans-unit>
        <trans-unit id="96603476295b17f41d5ce170e2382bb942ea4116" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;succ&amp;nbsp;u&lt;/code&gt; is the scalar value after &lt;code&gt;u&lt;/code&gt; in the set of Unicode scalar values.</source>
          <target state="translated">&lt;code&gt;succ&amp;nbsp;u&lt;/code&gt; 是Unicode标量值集中 &lt;code&gt;u&lt;/code&gt; 之后的标量值。</target>
        </trans-unit>
        <trans-unit id="10b8ae57b30ea24f29925b7cfa21538aded7278c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;succ&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;add&amp;nbsp;x&amp;nbsp;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;succ&amp;nbsp;x&lt;/code&gt; 是 &lt;code&gt;add&amp;nbsp;x&amp;nbsp;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="857073db4d8549868637f67c9c89030cda1ef7c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;succ&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;x&amp;nbsp;+&amp;nbsp;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;succ&amp;nbsp;x&lt;/code&gt; 是 &lt;code&gt;x&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db5db5a6e1ae97d2e2c70aa3f614f153802825e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;succ&amp;nbsp;x&lt;/code&gt; returns the floating point number right after &lt;code&gt;x&lt;/code&gt; i.e., the smallest floating-point number greater than &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;succ&amp;nbsp;x&lt;/code&gt; 后返回浮点数右 &lt;code&gt;x&lt;/code&gt; 即最小的浮点数大于 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f27259268c644510adee0903b33cb61ea48f86ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;succ&amp;nbsp;x&lt;/code&gt; returns the floating point number right after &lt;code&gt;x&lt;/code&gt; i.e., the smallest floating-point number greater than &lt;code&gt;x&lt;/code&gt;. See also &lt;a href=&quot;float#VALnext_after&quot;&gt;&lt;code&gt;Float.next_after&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;succ&amp;nbsp;x&lt;/code&gt; 后返回浮点数右 &lt;code&gt;x&lt;/code&gt; 即最小的浮点数大于 &lt;code&gt;x&lt;/code&gt; 。另请参见&lt;a href=&quot;float#VALnext_after&quot;&gt; &lt;code&gt;Float.next_after&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b22b8a88b829e7c70889c5a1ca05c2f5829743a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symbol_start&lt;/code&gt; and &lt;a href=&quot;parsing#VALsymbol_end&quot;&gt;&lt;code&gt;Parsing.symbol_end&lt;/code&gt;&lt;/a&gt; are to be called in the action part of a grammar rule only.</source>
          <target state="translated">&lt;code&gt;symbol_start&lt;/code&gt; 和&lt;a href=&quot;parsing#VALsymbol_end&quot;&gt; &lt;code&gt;Parsing.symbol_end&lt;/code&gt; &lt;/a&gt;仅在语法规则的操作部分中被调用。</target>
        </trans-unit>
        <trans-unit id="a62193dadd5986b9ba39cd4630ac1cb0e5fde89b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symbol_start&lt;/code&gt; and &lt;a href=&quot;parsing#VALsymbol_end&quot;&gt;&lt;code&gt;Parsing.symbol_end&lt;/code&gt;&lt;/a&gt; are to be called in the action part of a grammar rule only. They return the offset of the string that matches the left-hand side of the rule: &lt;code&gt;symbol_start()&lt;/code&gt; returns the offset of the first character; &lt;code&gt;symbol_end()&lt;/code&gt; returns the offset after the last character. The first character in a file is at offset 0.</source>
          <target state="translated">&lt;code&gt;symbol_start&lt;/code&gt; 和&lt;a href=&quot;parsing#VALsymbol_end&quot;&gt; &lt;code&gt;Parsing.symbol_end&lt;/code&gt; &lt;/a&gt;仅在语法规则的操作部分中被调用。它们返回与规则左侧匹配的字符串的偏移量： &lt;code&gt;symbol_start()&lt;/code&gt; 返回第一个字符的偏移量；否则返回第一个字符的偏移量。 &lt;code&gt;symbol_end()&lt;/code&gt; 返回最后一个字符后的偏移量。文件中的第一个字符的偏移量为0。</target>
        </trans-unit>
        <trans-unit id="f89b25ee0ae48f46ae6a9c649e33bd44672e7294" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symlink&amp;nbsp;?to_dir&amp;nbsp;source&amp;nbsp;dest&lt;/code&gt; creates the file &lt;code&gt;dest&lt;/code&gt; as a symbolic link to the file &lt;code&gt;source&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;symlink&amp;nbsp;?to_dir&amp;nbsp;source&amp;nbsp;dest&lt;/code&gt; 创建文件 &lt;code&gt;dest&lt;/code&gt; 作为到文件 &lt;code&gt;source&lt;/code&gt; 的符号链接。</target>
        </trans-unit>
        <trans-unit id="1cbd8f3677e846c406154a00a4fcfac10bbe36d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symlink&amp;nbsp;?to_dir&amp;nbsp;source&amp;nbsp;dest&lt;/code&gt; creates the file &lt;code&gt;dest&lt;/code&gt; as a symbolic link to the file &lt;code&gt;source&lt;/code&gt;. On Windows, &lt;code&gt;~to_dir&lt;/code&gt; indicates if the symbolic link points to a directory or a file; if omitted, &lt;code&gt;symlink&lt;/code&gt; examines &lt;code&gt;source&lt;/code&gt; using &lt;code&gt;stat&lt;/code&gt; and picks appropriately, if &lt;code&gt;source&lt;/code&gt; does not exist then &lt;code&gt;false&lt;/code&gt; is assumed (for this reason, it is recommended that the &lt;code&gt;~to_dir&lt;/code&gt; parameter be specified in new code). On Unix, &lt;code&gt;~to_dir&lt;/code&gt; is ignored.</source>
          <target state="translated">&lt;code&gt;symlink&amp;nbsp;?to_dir&amp;nbsp;source&amp;nbsp;dest&lt;/code&gt; 创建文件 &lt;code&gt;dest&lt;/code&gt; 作为到文件 &lt;code&gt;source&lt;/code&gt; 的符号链接。在Windows上， &lt;code&gt;~to_dir&lt;/code&gt; 表示符号链接是否指向目录或文件；如果省略， &lt;code&gt;symlink&lt;/code&gt; 检 &lt;code&gt;source&lt;/code&gt; 使用 &lt;code&gt;stat&lt;/code&gt; 和纬纱适当，如果 &lt;code&gt;source&lt;/code&gt; 不存在， &lt;code&gt;false&lt;/code&gt; 设（因为这个原因，它建议 &lt;code&gt;~to_dir&lt;/code&gt; 参数在新的代码来规定）。在Unix上， &lt;code&gt;~to_dir&lt;/code&gt; 被忽略。</target>
        </trans-unit>
        <trans-unit id="842866716be3448107b686c55231dff17f7a98c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symlink&amp;nbsp;?to_dir&amp;nbsp;src&amp;nbsp;dst&lt;/code&gt; creates the file &lt;code&gt;dst&lt;/code&gt; as a symbolic link to the file &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;symlink&amp;nbsp;?to_dir&amp;nbsp;src&amp;nbsp;dst&lt;/code&gt; 创建文件 &lt;code&gt;dst&lt;/code&gt; 作为到文件 &lt;code&gt;src&lt;/code&gt; 的符号链接。</target>
        </trans-unit>
        <trans-unit id="5ad560b4be9c2b464e3e9a4f13833a53efb80e1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symlink&amp;nbsp;?to_dir&amp;nbsp;src&amp;nbsp;dst&lt;/code&gt; creates the file &lt;code&gt;dst&lt;/code&gt; as a symbolic link to the file &lt;code&gt;src&lt;/code&gt;. On Windows, &lt;code&gt;to_dir&lt;/code&gt; indicates if the symbolic link points to a directory or a file; if omitted, &lt;code&gt;symlink&lt;/code&gt; examines &lt;code&gt;src&lt;/code&gt; using &lt;code&gt;stat&lt;/code&gt; and picks appropriately, if &lt;code&gt;src&lt;/code&gt; does not exist then &lt;code&gt;false&lt;/code&gt; is assumed (for this reason, it is recommended that the &lt;code&gt;to_dir&lt;/code&gt; parameter be specified in new code). On Unix, &lt;code&gt;to_dir&lt;/code&gt; is ignored.</source>
          <target state="translated">&lt;code&gt;symlink&amp;nbsp;?to_dir&amp;nbsp;src&amp;nbsp;dst&lt;/code&gt; 创建文件 &lt;code&gt;dst&lt;/code&gt; 作为到文件 &lt;code&gt;src&lt;/code&gt; 的符号链接。在Windows上， &lt;code&gt;to_dir&lt;/code&gt; 表示符号链接是否指向目录或文件。如果省略， &lt;code&gt;symlink&lt;/code&gt; 检 &lt;code&gt;src&lt;/code&gt; 使用 &lt;code&gt;stat&lt;/code&gt; 和纬纱适当，如果 &lt;code&gt;src&lt;/code&gt; 不存在， &lt;code&gt;false&lt;/code&gt; 设（因为这个原因，它建议 &lt;code&gt;to_dir&lt;/code&gt; 参数在新的代码来规定）。在Unix上， &lt;code&gt;to_dir&lt;/code&gt; 被忽略。</target>
        </trans-unit>
        <trans-unit id="42c6fc5416ee0e8aabf1896f0ef1e23d34d6003d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symlink&amp;nbsp;?to_dir&amp;nbsp;~src&amp;nbsp;~dst&lt;/code&gt; creates the file &lt;code&gt;dst&lt;/code&gt; as a symbolic link to the file &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;symlink&amp;nbsp;?to_dir&amp;nbsp;~src&amp;nbsp;~dst&lt;/code&gt; 创建文件 &lt;code&gt;dst&lt;/code&gt; 作为到文件 &lt;code&gt;src&lt;/code&gt; 的符号链接。</target>
        </trans-unit>
        <trans-unit id="814e1e1b4000c58ec255df17e7142787ed77b968" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symlink&amp;nbsp;?to_dir&amp;nbsp;~src&amp;nbsp;~dst&lt;/code&gt; creates the file &lt;code&gt;dst&lt;/code&gt; as a symbolic link to the file &lt;code&gt;src&lt;/code&gt;. On Windows, &lt;code&gt;~to_dir&lt;/code&gt; indicates if the symbolic link points to a directory or a file; if omitted, &lt;code&gt;symlink&lt;/code&gt; examines &lt;code&gt;src&lt;/code&gt; using &lt;code&gt;stat&lt;/code&gt; and picks appropriately, if &lt;code&gt;src&lt;/code&gt; does not exist then &lt;code&gt;false&lt;/code&gt; is assumed (for this reason, it is recommended that the &lt;code&gt;~to_dir&lt;/code&gt; parameter be specified in new code). On Unix, &lt;code&gt;~to_dir&lt;/code&gt; is ignored.</source>
          <target state="translated">&lt;code&gt;symlink&amp;nbsp;?to_dir&amp;nbsp;~src&amp;nbsp;~dst&lt;/code&gt; 创建文件 &lt;code&gt;dst&lt;/code&gt; 作为到文件 &lt;code&gt;src&lt;/code&gt; 的符号链接。在Windows上， &lt;code&gt;~to_dir&lt;/code&gt; 表示符号链接是否指向目录或文件；如果省略， &lt;code&gt;symlink&lt;/code&gt; 检 &lt;code&gt;src&lt;/code&gt; 使用 &lt;code&gt;stat&lt;/code&gt; 和纬纱适当，如果 &lt;code&gt;src&lt;/code&gt; 不存在，则 &lt;code&gt;false&lt;/code&gt; 设（因为这个原因，它建议 &lt;code&gt;~to_dir&lt;/code&gt; 参数在新的代码来规定）。在Unix上， &lt;code&gt;~to_dir&lt;/code&gt; 被忽略。</target>
        </trans-unit>
        <trans-unit id="184d15474d11cc876eacfc1e81f3e88236da38ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symlink&amp;nbsp;source&amp;nbsp;dest&lt;/code&gt; creates the file &lt;code&gt;dest&lt;/code&gt; as a symbolic link to the file &lt;code&gt;source&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;symlink&amp;nbsp;source&amp;nbsp;dest&lt;/code&gt; 创建文件 &lt;code&gt;dest&lt;/code&gt; 为符号链接到文件 &lt;code&gt;source&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f305fec3056ca972cce68da451f01a780ede1d26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symlink&amp;nbsp;source&amp;nbsp;dest&lt;/code&gt; creates the file &lt;code&gt;dest&lt;/code&gt; as a symbolic link to the file &lt;code&gt;source&lt;/code&gt;. See &lt;a href=&quot;unix#VALsymlink&quot;&gt;&lt;code&gt;Unix.symlink&lt;/code&gt;&lt;/a&gt; for details of &lt;code&gt;~to_dir&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;symlink&amp;nbsp;source&amp;nbsp;dest&lt;/code&gt; 创建文件 &lt;code&gt;dest&lt;/code&gt; 为符号链接到文件 &lt;code&gt;source&lt;/code&gt; 。见&lt;a href=&quot;unix#VALsymlink&quot;&gt; &lt;code&gt;Unix.symlink&lt;/code&gt; &lt;/a&gt;的细节 &lt;code&gt;~to_dir&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="665980df0cb2f357a36b8607166bfc164d5d26d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t&lt;/code&gt;: same as &lt;code&gt;%a&lt;/code&gt;, but take only one argument (with type &lt;code&gt;out_channel&amp;nbsp;-&amp;gt;&amp;nbsp;unit&lt;/code&gt;) and apply it to &lt;code&gt;outchan&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;t&lt;/code&gt; ：与 &lt;code&gt;%a&lt;/code&gt; 相同，但仅接受一个参数（类型为 &lt;code&gt;out_channel&amp;nbsp;-&amp;gt;&amp;nbsp;unit&lt;/code&gt; ）并将其应用于 &lt;code&gt;outchan&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af80f9c73bde9455912c64a79995f89e76f46311" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;take&amp;nbsp;q&lt;/code&gt; removes and returns the first element in queue &lt;code&gt;q&lt;/code&gt;, or raises &lt;a href=&quot;queue#EXCEPTIONEmpty&quot;&gt;&lt;code&gt;Queue.Empty&lt;/code&gt;&lt;/a&gt; if the queue is empty.</source>
          <target state="translated">&lt;code&gt;take&amp;nbsp;q&lt;/code&gt; 删除并返回队列 &lt;code&gt;q&lt;/code&gt; 中的第一个元素，如果队列为空，则引发&lt;a href=&quot;queue#EXCEPTIONEmpty&quot;&gt; &lt;code&gt;Queue.Empty&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a861a052e360527f0c261ac4d29901ac96de0c41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;take&amp;nbsp;series&lt;/code&gt; takes a snapshot of the profiling annotations on the values in the minor and major heaps, together with GC stats, and write the result to the &lt;code&gt;series&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;take&amp;nbsp;series&lt;/code&gt; 对次要和主要堆中的值以及GC统计信息进行概要分析注释的快照，然后将结果写入 &lt;code&gt;series&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="76c38f06a266d506dc33ba21f6ce1ffe795983bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;take&amp;nbsp;series&lt;/code&gt; takes a snapshot of the profiling annotations on the values in the minor and major heaps, together with GC stats, and write the result to the &lt;code&gt;series&lt;/code&gt; file. This function triggers a minor GC but does not allocate any memory itself. If the optional &lt;code&gt;time&lt;/code&gt; is specified, it will be used instead of the result of &lt;a href=&quot;sys#VALtime&quot;&gt;&lt;code&gt;Sys.time&lt;/code&gt;&lt;/a&gt; as the timestamp of the snapshot. Such &lt;code&gt;time&lt;/code&gt;s should start from zero and be monotonically increasing. This parameter is intended to be used so that snapshots can be correlated against wall clock time (which is not supported in the standard library) rather than elapsed CPU time.</source>
          <target state="translated">&lt;code&gt;take&amp;nbsp;series&lt;/code&gt; 对次要和主要堆中的值以及GC统计信息进行概要分析注释的快照，然后将结果写入 &lt;code&gt;series&lt;/code&gt; 文件。此函数触发次要GC，但自身不会分配任何内存。如果指定了可选 &lt;code&gt;time&lt;/code&gt; ，它将代替快照的时间戳&lt;a href=&quot;sys#VALtime&quot;&gt; &lt;code&gt;Sys.time&lt;/code&gt; &lt;/a&gt;的结果。这样的 &lt;code&gt;time&lt;/code&gt; s应该从零开始并且单调增加。打算使用此参数，以便可以将快照与挂钟时间（标准库中不支持）相关联，而不是与经过的CPU时间相关联。</target>
        </trans-unit>
        <trans-unit id="eb284a8d348f79889c93a73cc31078a0478ea360" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;take_opt&amp;nbsp;q&lt;/code&gt; removes and returns the first element in queue &lt;code&gt;q&lt;/code&gt;, or returns &lt;code&gt;None&lt;/code&gt; if the queue is empty.</source>
          <target state="translated">&lt;code&gt;take_opt&amp;nbsp;q&lt;/code&gt; 删除并返回队列 &lt;code&gt;q&lt;/code&gt; 中的第一个元素，如果队列为空，则返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aeec7d3a2be0ed54da0b9e7340faa506405c8cb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;temp_file&amp;nbsp;prefix&amp;nbsp;suffix&lt;/code&gt; returns the name of a fresh temporary file in the temporary directory.</source>
          <target state="translated">&lt;code&gt;temp_file&amp;nbsp;prefix&amp;nbsp;suffix&lt;/code&gt; 返回临时目录中新的临时文件的名称。</target>
        </trans-unit>
        <trans-unit id="2f34877a29e88229dcebd5577ffa46c99340bbee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;temp_file&amp;nbsp;prefix&amp;nbsp;suffix&lt;/code&gt; returns the name of a fresh temporary file in the temporary directory. The base name of the temporary file is formed by concatenating &lt;code&gt;prefix&lt;/code&gt;, then a suitably chosen integer number, then &lt;code&gt;suffix&lt;/code&gt;. The optional argument &lt;code&gt;temp_dir&lt;/code&gt; indicates the temporary directory to use, defaulting to the current result of &lt;a href=&quot;filename#VALget_temp_dir_name&quot;&gt;&lt;code&gt;Filename.get_temp_dir_name&lt;/code&gt;&lt;/a&gt;. The temporary file is created empty, with permissions &lt;code&gt;0o600&lt;/code&gt; (readable and writable only by the file owner). The file is guaranteed to be different from any other file that existed when &lt;code&gt;temp_file&lt;/code&gt; was called.</source>
          <target state="translated">&lt;code&gt;temp_file&amp;nbsp;prefix&amp;nbsp;suffix&lt;/code&gt; 返回临时目录中新的临时文件的名称。临时文件的基本名称是通过将形成 &lt;code&gt;prefix&lt;/code&gt; ，那么适当地选择整数，然后 &lt;code&gt;suffix&lt;/code&gt; 。可选参数 &lt;code&gt;temp_dir&lt;/code&gt; 指示要使用的临时目录，默认为&lt;a href=&quot;filename#VALget_temp_dir_name&quot;&gt; &lt;code&gt;Filename.get_temp_dir_name&lt;/code&gt; &lt;/a&gt;的当前结果。临时文件创建为空，权限为 &lt;code&gt;0o600&lt;/code&gt; （仅文件所有者可读写）。保证该文件与调用 &lt;code&gt;temp_file&lt;/code&gt; 时存在的任何其他文件都不相同。</target>
        </trans-unit>
        <trans-unit id="a9597751cdb8b022e7d642467657964f104d1e88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_char&amp;nbsp;u&lt;/code&gt; is &lt;code&gt;u&lt;/code&gt; as an OCaml latin1 character.</source>
          <target state="translated">&lt;code&gt;to_char&amp;nbsp;u&lt;/code&gt; 是作为OCaml latin1字符的 &lt;code&gt;u&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12d0d6d016008cb1852ec7c73f9df464e7f41b7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_float&amp;nbsp;b&lt;/code&gt; is &lt;code&gt;0.&lt;/code&gt; if &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1.&lt;/code&gt; if &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;to_float&amp;nbsp;b&lt;/code&gt; 为 &lt;code&gt;0.&lt;/code&gt; 如果 &lt;code&gt;b&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; ，则为 &lt;code&gt;1.&lt;/code&gt; 如果 &lt;code&gt;b&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="717aa0da2ed3a45c885c29bd1bc608dcb1b10665" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_float&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;x&lt;/code&gt; as a floating point number.</source>
          <target state="translated">&lt;code&gt;to_float&amp;nbsp;x&lt;/code&gt; 是 &lt;code&gt;x&lt;/code&gt; 作为浮点数。</target>
        </trans-unit>
        <trans-unit id="8876cde8e6711704434f6f40a974640f526dd609" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_int&amp;nbsp;b&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; if &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;to_int&amp;nbsp;b&lt;/code&gt; 是 &lt;code&gt;0&lt;/code&gt; ，如果 &lt;code&gt;b&lt;/code&gt; 是 &lt;code&gt;false&lt;/code&gt; 和 &lt;code&gt;1&lt;/code&gt; 如果 &lt;code&gt;b&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="00eb7f5ba1284f48c67a3cd109dd84c6cad958f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_int&amp;nbsp;u&lt;/code&gt; is &lt;code&gt;u&lt;/code&gt; as an integer.</source>
          <target state="translated">&lt;code&gt;to_int&amp;nbsp;u&lt;/code&gt; 是 &lt;code&gt;u&lt;/code&gt; 的整数。</target>
        </trans-unit>
        <trans-unit id="4e62a25ed80bd49bb75648a72e39a9d18efc4986" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_list&amp;nbsp;a&lt;/code&gt; returns the list of all the elements of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;to_list&amp;nbsp;a&lt;/code&gt; 返回所有的元素列表 &lt;code&gt;a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8186966b39fde6b9467e24353d6863aba14b987a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_list&amp;nbsp;o&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt; if &lt;code&gt;o&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt; and &lt;code&gt;[v]&lt;/code&gt; if &lt;code&gt;o&lt;/code&gt; is &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;to_list&amp;nbsp;o&lt;/code&gt; 如果 &lt;code&gt;o&lt;/code&gt; 为 &lt;code&gt;None&lt;/code&gt; ，则to_list o为 &lt;code&gt;[]&lt;/code&gt; ;如果 &lt;code&gt;o&lt;/code&gt; 为 &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; 则为 &lt;code&gt;[v]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12bea8bc53578dd829c5393497b85823014e5b14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_list&amp;nbsp;r&lt;/code&gt; is &lt;code&gt;[v]&lt;/code&gt; if &lt;code&gt;r&lt;/code&gt; is &lt;code&gt;Ok&amp;nbsp;v&lt;/code&gt; and &lt;code&gt;[]&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;to_list&amp;nbsp;r&lt;/code&gt; 如果 &lt;code&gt;r&lt;/code&gt; 为 &lt;code&gt;Ok&amp;nbsp;v&lt;/code&gt; ，则to_list r为 &lt;code&gt;[v]&lt;/code&gt; ,否则为 &lt;code&gt;[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="50ca9e2a9ebd70a43964f47ba94df59bda667528" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_option&amp;nbsp;r&lt;/code&gt; is &lt;code&gt;r&lt;/code&gt; as an option, mapping &lt;code&gt;Ok&amp;nbsp;v&lt;/code&gt; to &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; and &lt;code&gt;Error&amp;nbsp;_&lt;/code&gt; to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;to_option&amp;nbsp;r&lt;/code&gt; 是 &lt;code&gt;r&lt;/code&gt; 作为选项，将 &lt;code&gt;Ok&amp;nbsp;v&lt;/code&gt; 映射到 &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; 并将 &lt;code&gt;Error&amp;nbsp;_&lt;/code&gt; 映射到 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dfbf6d5cdac8669ed3cdc1150ada51cea9fef649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_result&amp;nbsp;~none&amp;nbsp;o&lt;/code&gt; is &lt;code&gt;Ok&amp;nbsp;v&lt;/code&gt; if &lt;code&gt;o&lt;/code&gt; is &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; and &lt;code&gt;Error&amp;nbsp;none&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;to_result&amp;nbsp;~none&amp;nbsp;o&lt;/code&gt; 如果 &lt;code&gt;o&lt;/code&gt; 为 &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; ，则o为 &lt;code&gt;Ok&amp;nbsp;v&lt;/code&gt; 否则为 &lt;code&gt;Error&amp;nbsp;none&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a9f9bba8aabee1529f4cb0232b1445a64a011e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_seq&amp;nbsp;o&lt;/code&gt; is &lt;code&gt;o&lt;/code&gt; as a sequence.</source>
          <target state="translated">&lt;code&gt;to_seq&amp;nbsp;o&lt;/code&gt; 是作为序列的 &lt;code&gt;o&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="298ee0d3fe7c586043bff0eeda7306345ebd8733" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_seq&amp;nbsp;o&lt;/code&gt; is &lt;code&gt;o&lt;/code&gt; as a sequence. &lt;code&gt;None&lt;/code&gt; is the empty sequence and &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; is the singleton sequence containing &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;to_seq&amp;nbsp;o&lt;/code&gt; 是作为序列的 &lt;code&gt;o&lt;/code&gt; 。 &lt;code&gt;None&lt;/code&gt; 是空序列，而 &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; 是包含 &lt;code&gt;v&lt;/code&gt; 的单例序列。</target>
        </trans-unit>
        <trans-unit id="9b87b16641465c8bc0b2e9f295f60a083426a2a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_seq&amp;nbsp;r&lt;/code&gt; is &lt;code&gt;r&lt;/code&gt; as a sequence.</source>
          <target state="translated">&lt;code&gt;to_seq&amp;nbsp;r&lt;/code&gt; 是 &lt;code&gt;r&lt;/code&gt; 作为序列。</target>
        </trans-unit>
        <trans-unit id="e7ee9f25c8d9b81901f19753b512ed9450de8ed1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_seq&amp;nbsp;r&lt;/code&gt; is &lt;code&gt;r&lt;/code&gt; as a sequence. &lt;code&gt;Ok&amp;nbsp;v&lt;/code&gt; is the singleton sequence containing &lt;code&gt;v&lt;/code&gt; and &lt;code&gt;Error&amp;nbsp;_&lt;/code&gt; is the empty sequence.</source>
          <target state="translated">&lt;code&gt;to_seq&amp;nbsp;r&lt;/code&gt; 是 &lt;code&gt;r&lt;/code&gt; 作为序列。 &lt;code&gt;Ok&amp;nbsp;v&lt;/code&gt; 是包含 &lt;code&gt;v&lt;/code&gt; 的单例序列， &lt;code&gt;Error&amp;nbsp;_&lt;/code&gt; 是空序列。</target>
        </trans-unit>
        <trans-unit id="2f5c0bd5baf9818af66d118b4f4320f2032c37d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_seq&amp;nbsp;s&lt;/code&gt; is a sequence made of the string's characters in increasing order.</source>
          <target state="translated">&lt;code&gt;to_seq&amp;nbsp;s&lt;/code&gt; 是由字符串字符按升序排列的序列。</target>
        </trans-unit>
        <trans-unit id="68f82f7cea2f38a105960d0a31146be0e4bea61d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_seq&amp;nbsp;s&lt;/code&gt; is a sequence made of the string's characters in increasing order. In &lt;code&gt;&quot;unsafe-string&quot;&lt;/code&gt; mode, modifications of the string during iteration will be reflected in the iterator.</source>
          <target state="translated">&lt;code&gt;to_seq&amp;nbsp;s&lt;/code&gt; 是由字符串字符按升序排列的序列。在 &lt;code&gt;&quot;unsafe-string&quot;&lt;/code&gt; 模式下，迭代期间对字符串的修改将反映在迭代器中。</target>
        </trans-unit>
        <trans-unit id="8a49258561e4de89cf3ed09c3e8bea3692b2a3a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_seq_from&amp;nbsp;k&amp;nbsp;m&lt;/code&gt; iterates on a subset of the bindings of &lt;code&gt;m&lt;/code&gt;, in ascending order of keys, from key &lt;code&gt;k&lt;/code&gt; or above.</source>
          <target state="translated">&lt;code&gt;to_seq_from&amp;nbsp;k&amp;nbsp;m&lt;/code&gt; 以键的升序从键 &lt;code&gt;k&lt;/code&gt; 或更高版本开始迭代 &lt;code&gt;m&lt;/code&gt; 绑定的子集。</target>
        </trans-unit>
        <trans-unit id="a097aba74a03f44edc5197dbfa9e1e37efb6376d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_seq_from&amp;nbsp;x&amp;nbsp;s&lt;/code&gt; iterates on a subset of the elements of &lt;code&gt;s&lt;/code&gt; in ascending order, from &lt;code&gt;x&lt;/code&gt; or above.</source>
          <target state="translated">&lt;code&gt;to_seq_from&amp;nbsp;x&amp;nbsp;s&lt;/code&gt; 从 &lt;code&gt;x&lt;/code&gt; 或更高开始以升序迭代 &lt;code&gt;s&lt;/code&gt; 元素的子集。</target>
        </trans-unit>
        <trans-unit id="bab0031588f0bcca8fb49119d34fc6fc4aa91a31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_seqi&amp;nbsp;s&lt;/code&gt; is like &lt;a href=&quot;string#VALto_seq&quot;&gt;&lt;code&gt;String.to_seq&lt;/code&gt;&lt;/a&gt; but also tuples the corresponding index.</source>
          <target state="translated">&lt;code&gt;to_seqi&amp;nbsp;s&lt;/code&gt; 类似于&lt;a href=&quot;string#VALto_seq&quot;&gt; &lt;code&gt;String.to_seq&lt;/code&gt; ,&lt;/a&gt;但也记录了相应的索引。</target>
        </trans-unit>
        <trans-unit id="835da21e52dd780c0532f580e043048ff0096cda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_seqi&amp;nbsp;s&lt;/code&gt; is like &lt;a href=&quot;stringlabels#VALto_seq&quot;&gt;&lt;code&gt;StringLabels.to_seq&lt;/code&gt;&lt;/a&gt; but also tuples the corresponding index.</source>
          <target state="translated">&lt;code&gt;to_seqi&amp;nbsp;s&lt;/code&gt; 类似于&lt;a href=&quot;stringlabels#VALto_seq&quot;&gt; &lt;code&gt;StringLabels.to_seq&lt;/code&gt; ,&lt;/a&gt;但也可以元组化相应的索引。</target>
        </trans-unit>
        <trans-unit id="5377a06339ae7c0bdeb3325a05d74efcd7af893b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_string&amp;nbsp;b&lt;/code&gt; is &lt;code&gt;&quot;()&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;to_string&amp;nbsp;b&lt;/code&gt; 是 &lt;code&gt;&quot;()&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d439ae01dafe396ae66e0418e20de7a9d227df2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_string&amp;nbsp;b&lt;/code&gt; is &lt;code&gt;&quot;true&quot;&lt;/code&gt; if &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;&quot;false&quot;&lt;/code&gt; if &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;to_string&amp;nbsp;b&lt;/code&gt; 是 &lt;code&gt;&quot;true&quot;&lt;/code&gt; ，如果 &lt;code&gt;b&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;&quot;false&quot;&lt;/code&gt; ，如果 &lt;code&gt;b&lt;/code&gt; 是 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8ae26c6d7e99efb5b27bd2fdf7a3381161b182ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_string&amp;nbsp;x&lt;/code&gt; is the written representation of &lt;code&gt;x&lt;/code&gt; in decimal.</source>
          <target state="translated">&lt;code&gt;to_string&amp;nbsp;x&lt;/code&gt; 是 &lt;code&gt;x&lt;/code&gt; 的十进制形式的书面表示形式。</target>
        </trans-unit>
        <trans-unit id="40c3f414ef31028f789ca09ad37816bc49d51852" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;top&amp;nbsp;s&lt;/code&gt; returns the topmost element in stack &lt;code&gt;s&lt;/code&gt;, or raises &lt;a href=&quot;stack#EXCEPTIONEmpty&quot;&gt;&lt;code&gt;Stack.Empty&lt;/code&gt;&lt;/a&gt; if the stack is empty.</source>
          <target state="translated">&lt;code&gt;top&amp;nbsp;s&lt;/code&gt; 返回堆栈 &lt;code&gt;s&lt;/code&gt; 中最顶层的元素，如果堆栈为空，则引发&lt;a href=&quot;stack#EXCEPTIONEmpty&quot;&gt; &lt;code&gt;Stack.Empty&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="791f1c4da4989e62ee39b690c32b86662a790e06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;top&lt;/code&gt; is a synonym for &lt;code&gt;peek&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;top&lt;/code&gt; 是 &lt;code&gt;peek&lt;/code&gt; 的同义词。</target>
        </trans-unit>
        <trans-unit id="24a4554953c30311da83154336aeb0b3ee3c84cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;top_opt&amp;nbsp;s&lt;/code&gt; returns the topmost element in stack &lt;code&gt;s&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if the stack is empty.</source>
          <target state="translated">&lt;code&gt;top_opt&amp;nbsp;s&lt;/code&gt; 返回堆栈 &lt;code&gt;s&lt;/code&gt; 中最顶层的元素；如果堆栈为空，则返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41f91bb3ff722740acb54b022e849c7d229be077" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transfer&amp;nbsp;q1&amp;nbsp;q2&lt;/code&gt; adds all of &lt;code&gt;q1&lt;/code&gt;'s elements at the end of the queue &lt;code&gt;q2&lt;/code&gt;, then clears &lt;code&gt;q1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;transfer&amp;nbsp;q1&amp;nbsp;q2&lt;/code&gt; 将所有 &lt;code&gt;q1&lt;/code&gt; 的元素添加到队列 &lt;code&gt;q2&lt;/code&gt; 的末尾，然后清除 &lt;code&gt;q1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3342e0ad59214ec88545710af7800dcef9fd7f65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transfer&amp;nbsp;q1&amp;nbsp;q2&lt;/code&gt; adds all of &lt;code&gt;q1&lt;/code&gt;'s elements at the end of the queue &lt;code&gt;q2&lt;/code&gt;, then clears &lt;code&gt;q1&lt;/code&gt;. It is equivalent to the sequence &lt;code&gt;iter&amp;nbsp;(fun&amp;nbsp;x&amp;nbsp;-&amp;gt;&amp;nbsp;add&amp;nbsp;x&amp;nbsp;q2)&amp;nbsp;q1;&amp;nbsp;clear&amp;nbsp;q1&lt;/code&gt;, but runs in constant time.</source>
          <target state="translated">&lt;code&gt;transfer&amp;nbsp;q1&amp;nbsp;q2&lt;/code&gt; 将所有 &lt;code&gt;q1&lt;/code&gt; 的元素添加到队列 &lt;code&gt;q2&lt;/code&gt; 的末尾，然后清除 &lt;code&gt;q1&lt;/code&gt; 。它等效于序列 &lt;code&gt;iter&amp;nbsp;(fun&amp;nbsp;x&amp;nbsp;-&amp;gt;&amp;nbsp;add&amp;nbsp;x&amp;nbsp;q2)&amp;nbsp;q1;&amp;nbsp;clear&amp;nbsp;q1&lt;/code&gt; ，但以恒定时间运行。</target>
        </trans-unit>
        <trans-unit id="c25ae0913dcab00081805a876f9ac8d72671f9c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trim&amp;nbsp;s&lt;/code&gt; is &lt;code&gt;s&lt;/code&gt; without leading and trailing whitespace.</source>
          <target state="translated">&lt;code&gt;trim&amp;nbsp;s&lt;/code&gt; 是 &lt;code&gt;s&lt;/code&gt; ,没有前导和尾随空格。</target>
        </trans-unit>
        <trans-unit id="6ccd532956520ee92f7d5e76f7c502b168755503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trim&amp;nbsp;s&lt;/code&gt; is &lt;code&gt;s&lt;/code&gt; without leading and trailing whitespace. Whitespace characters are: &lt;code&gt;'&amp;nbsp;'&lt;/code&gt;, &lt;code&gt;'\x0C'&lt;/code&gt; (form feed), &lt;code&gt;'\n'&lt;/code&gt;, &lt;code&gt;'\r'&lt;/code&gt;, and &lt;code&gt;'\t'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;trim&amp;nbsp;s&lt;/code&gt; 是 &lt;code&gt;s&lt;/code&gt; ,没有前导和尾随空格。空格字符为： &lt;code&gt;'&amp;nbsp;'&lt;/code&gt; ， &lt;code&gt;'\x0C'&lt;/code&gt; （换页）， &lt;code&gt;'\n'&lt;/code&gt; ， &lt;code&gt;'\r'&lt;/code&gt; 和 &lt;code&gt;'\t'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd29876cba0b7890cbd01fb5acd2b90aef6fda55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the program is native, &lt;code&gt;false&lt;/code&gt; if the program is bytecode.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果程序是本地人， &lt;code&gt;false&lt;/code&gt; 如果程序是字节码。</target>
        </trans-unit>
        <trans-unit id="72870f901eba03aff6e6cdc289b44e07412b1243" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trunc&amp;nbsp;x&lt;/code&gt; rounds &lt;code&gt;x&lt;/code&gt; to the nearest integer whose absolute value is less than or equal to &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;trunc&amp;nbsp;x&lt;/code&gt; 轮 &lt;code&gt;x&lt;/code&gt; 到其绝对值最接近的整数小于或等于 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08f629a8ccd7a41e01f63ddc2aef53e9c9f23279" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;truncate&amp;nbsp;b&amp;nbsp;len&lt;/code&gt; truncates the length of &lt;code&gt;b&lt;/code&gt; to &lt;code&gt;len&lt;/code&gt; Note: the internal byte sequence is not shortened.</source>
          <target state="translated">&lt;code&gt;truncate&amp;nbsp;b&amp;nbsp;len&lt;/code&gt; 截短的长度 &lt;code&gt;b&lt;/code&gt; 到 &lt;code&gt;len&lt;/code&gt; 注意：内部字节序列不会缩短。</target>
        </trans-unit>
        <trans-unit id="ca72bfb897ac1f621df2f2de0e3a48c68fc58286" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;try_acquire&amp;nbsp;s&lt;/code&gt; immediately returns &lt;code&gt;false&lt;/code&gt; if the semaphore &lt;code&gt;s&lt;/code&gt; has value 0.</source>
          <target state="translated">&lt;code&gt;try_acquire&amp;nbsp;s&lt;/code&gt; 如果信号量 &lt;code&gt;s&lt;/code&gt; 的值为0，try_acquire s立即返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2760c2eb32fae4d27eaac67d6b02bb5685c69cbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;try_acquire&amp;nbsp;s&lt;/code&gt; immediately returns &lt;code&gt;false&lt;/code&gt; if the semaphore &lt;code&gt;s&lt;/code&gt; has value 0. If &lt;code&gt;s&lt;/code&gt; has value 1, its value is atomically set to 0 and &lt;code&gt;try_acquire&amp;nbsp;s&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;try_acquire&amp;nbsp;s&lt;/code&gt; 如果信号量 &lt;code&gt;s&lt;/code&gt; 的值为0，try_acquire s立即返回 &lt;code&gt;false&lt;/code&gt; 。如果 &lt;code&gt;s&lt;/code&gt; 的值为1，则其值自动设置为0，而 &lt;code&gt;try_acquire&amp;nbsp;s&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8b5c88caf4c91037067ec27a66144c2729845fac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;try_acquire&amp;nbsp;s&lt;/code&gt; immediately returns &lt;code&gt;false&lt;/code&gt; if the value of semaphore &lt;code&gt;s&lt;/code&gt; is zero.</source>
          <target state="translated">&lt;code&gt;try_acquire&amp;nbsp;s&lt;/code&gt; 如果信号量 &lt;code&gt;s&lt;/code&gt; 的值为零，try_acquire s立即返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd51b228b689830bc8a5ab4b8129ed9a76360100" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;try_acquire&amp;nbsp;s&lt;/code&gt; immediately returns &lt;code&gt;false&lt;/code&gt; if the value of semaphore &lt;code&gt;s&lt;/code&gt; is zero. Otherwise, the value of &lt;code&gt;s&lt;/code&gt; is atomically decremented and &lt;code&gt;try_acquire&amp;nbsp;s&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;try_acquire&amp;nbsp;s&lt;/code&gt; 如果信号量 &lt;code&gt;s&lt;/code&gt; 的值为零，try_acquire s立即返回 &lt;code&gt;false&lt;/code&gt; 。否则， &lt;code&gt;s&lt;/code&gt; 的值原子递减， &lt;code&gt;try_acquire&amp;nbsp;s&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05d8a025edd0fdf5daacb2aae897d11a5ee3f54d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u&lt;/code&gt;, &lt;code&gt;n&lt;/code&gt;, &lt;code&gt;l&lt;/code&gt;, &lt;code&gt;L&lt;/code&gt;, or &lt;code&gt;N&lt;/code&gt;: convert an integer argument to unsigned decimal. Warning: &lt;code&gt;n&lt;/code&gt;, &lt;code&gt;l&lt;/code&gt;, &lt;code&gt;L&lt;/code&gt;, and &lt;code&gt;N&lt;/code&gt; are used for &lt;code&gt;scanf&lt;/code&gt;, and should not be used for &lt;code&gt;printf&lt;/code&gt;. The flag &lt;code&gt;#&lt;/code&gt; adds underscores to large values for readability.</source>
          <target state="translated">&lt;code&gt;u&lt;/code&gt; ， &lt;code&gt;n&lt;/code&gt; ， &lt;code&gt;l&lt;/code&gt; ， &lt;code&gt;L&lt;/code&gt; 或 &lt;code&gt;N&lt;/code&gt; ：将整数参数转换为无符号十进制。警告： &lt;code&gt;n&lt;/code&gt; ， &lt;code&gt;l&lt;/code&gt; ， &lt;code&gt;L&lt;/code&gt; 和 &lt;code&gt;N&lt;/code&gt; 用于 &lt;code&gt;scanf&lt;/code&gt; ，而不应用于 &lt;code&gt;printf&lt;/code&gt; 。标志 &lt;code&gt;#&lt;/code&gt; 将下划线添加到较大的值以提高可读性。</target>
        </trans-unit>
        <trans-unit id="67bf4dd02fa922a1aaffd27a5e631c8b0fa97c44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u&lt;/code&gt;: reads an unsigned decimal integer.</source>
          <target state="translated">&lt;code&gt;u&lt;/code&gt; ：读取一个无符号的十进制整数。</target>
        </trans-unit>
        <trans-unit id="cfe1fd2636c80bc777396666845171f44c6b9433" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uncapitalize_ascii&amp;nbsp;s&lt;/code&gt; is &lt;code&gt;s&lt;/code&gt; with the first character set to lowercase, using the US-ASCII character set.</source>
          <target state="translated">&lt;code&gt;uncapitalize_ascii&amp;nbsp;s&lt;/code&gt; 是 &lt;code&gt;s&lt;/code&gt; 与第一字符集为小写，使用US-ASCII字符集。</target>
        </trans-unit>
        <trans-unit id="622e49b2ca91ae50306dd401fe9ecfac9a48311c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unescaped&amp;nbsp;s&lt;/code&gt; return a copy of &lt;code&gt;s&lt;/code&gt; with escape sequences (according to the lexical conventions of OCaml) replaced by their corresponding special characters.</source>
          <target state="translated">&lt;code&gt;unescaped&amp;nbsp;s&lt;/code&gt; 返回的副本 &lt;code&gt;s&lt;/code&gt; 用转义序列（根据OCaml中的词法约定）代替由它们相应的特殊字符。</target>
        </trans-unit>
        <trans-unit id="6e16d8b8e5692301f04e02e8e651b0d604ac3a27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unescaped&amp;nbsp;s&lt;/code&gt; return a copy of &lt;code&gt;s&lt;/code&gt; with escape sequences (according to the lexical conventions of OCaml) replaced by their corresponding special characters. More precisely, &lt;code&gt;Scanf.unescaped&lt;/code&gt; has the following property: for all string &lt;code&gt;s&lt;/code&gt;, &lt;code&gt;Scanf.unescaped&amp;nbsp;(String.escaped&amp;nbsp;s)&amp;nbsp;=&amp;nbsp;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;unescaped&amp;nbsp;s&lt;/code&gt; 返回的副本 &lt;code&gt;s&lt;/code&gt; 用转义序列（根据OCaml中的词法约定）代替由它们相应的特殊字符。更准确地说， &lt;code&gt;Scanf.unescaped&lt;/code&gt; 具有以下属性：对于所有字符串 &lt;code&gt;s&lt;/code&gt; ， &lt;code&gt;Scanf.unescaped&amp;nbsp;(String.escaped&amp;nbsp;s)&amp;nbsp;=&amp;nbsp;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="607e7593e55a43c8392a9d52a5ee1412d8df138a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;union&amp;nbsp;f&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; computes a map whose keys are a subset of the keys of &lt;code&gt;m1&lt;/code&gt; and of &lt;code&gt;m2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;union&amp;nbsp;f&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; 计算一个映射，该映射的键是 &lt;code&gt;m1&lt;/code&gt; 和 &lt;code&gt;m2&lt;/code&gt; 的键的子集。</target>
        </trans-unit>
        <trans-unit id="deb80d064544f28c1cdbe86c02795c794df75895" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;union&amp;nbsp;f&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; computes a map whose keys are a subset of the keys of &lt;code&gt;m1&lt;/code&gt; and of &lt;code&gt;m2&lt;/code&gt;. When the same binding is defined in both arguments, the function &lt;code&gt;f&lt;/code&gt; is used to combine them. This is a special case of &lt;code&gt;merge&lt;/code&gt;: &lt;code&gt;union&amp;nbsp;f&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; is equivalent to &lt;code&gt;merge&amp;nbsp;f'&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt;, where</source>
          <target state="translated">&lt;code&gt;union&amp;nbsp;f&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; 计算一个映射，该映射的键是 &lt;code&gt;m1&lt;/code&gt; 和 &lt;code&gt;m2&lt;/code&gt; 的键的子集。在两个参数中定义相同的绑定时，将使用函数 &lt;code&gt;f&lt;/code&gt; 组合它们。这是 &lt;code&gt;merge&lt;/code&gt; 一种特殊情况： &lt;code&gt;union&amp;nbsp;f&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; 等于 &lt;code&gt;merge&amp;nbsp;f'&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; ，其中</target>
        </trans-unit>
        <trans-unit id="78e46bc046fa8793b25aa6765a02fb25cb5ae51f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;union&amp;nbsp;~f&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; computes a map whose keys are a subset of the keys of &lt;code&gt;m1&lt;/code&gt; and of &lt;code&gt;m2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;union&amp;nbsp;~f&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; 计算一个映射，该映射的键是 &lt;code&gt;m1&lt;/code&gt; 和 &lt;code&gt;m2&lt;/code&gt; 的键的子集。</target>
        </trans-unit>
        <trans-unit id="74c77730376ccdfeb48c943114015969e6ec390d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;union&amp;nbsp;~f&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; computes a map whose keys are a subset of the keys of &lt;code&gt;m1&lt;/code&gt; and of &lt;code&gt;m2&lt;/code&gt;. When the same binding is defined in both arguments, the function &lt;code&gt;f&lt;/code&gt; is used to combine them. This is a special case of &lt;code&gt;merge&lt;/code&gt;: &lt;code&gt;union&amp;nbsp;f&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; is equivalent to &lt;code&gt;merge&amp;nbsp;f'&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt;, where</source>
          <target state="translated">&lt;code&gt;union&amp;nbsp;~f&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; 计算一个映射，该映射的键是 &lt;code&gt;m1&lt;/code&gt; 和 &lt;code&gt;m2&lt;/code&gt; 的键的子集。在两个参数中定义相同的绑定时，将使用函数 &lt;code&gt;f&lt;/code&gt; 组合它们。这是 &lt;code&gt;merge&lt;/code&gt; 一种特殊情况： &lt;code&gt;union&amp;nbsp;f&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; 等于 &lt;code&gt;merge&amp;nbsp;f'&amp;nbsp;m1&amp;nbsp;m2&lt;/code&gt; ，其中</target>
        </trans-unit>
        <trans-unit id="dadfcbdf177d213a9369c468e7f62c7442328ad5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe_to_string&amp;nbsp;s&lt;/code&gt; can only be used when the caller owns the byte sequence &lt;code&gt;s&lt;/code&gt; -- either uniquely or as shared immutable data. The caller gives up ownership of &lt;code&gt;s&lt;/code&gt;, and gains ownership of the returned string.</source>
          <target state="translated">&lt;code&gt;unsafe_to_string&amp;nbsp;s&lt;/code&gt; 仅当调用方拥有字节序列 &lt;code&gt;s&lt;/code&gt; 时，才可以使用unsafe_to_string s－唯一地或作为共享的不可变数据。调用者放弃对 &lt;code&gt;s&lt;/code&gt; 的所有权，并获得对返回的字符串的所有权。</target>
        </trans-unit>
        <trans-unit id="2b47a7e042a2944e02e25248dc763c5ed3c30fe5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update&amp;nbsp;key&amp;nbsp;f&amp;nbsp;m&lt;/code&gt; returns a map containing the same bindings as &lt;code&gt;m&lt;/code&gt;, except for the binding of &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;update&amp;nbsp;key&amp;nbsp;f&amp;nbsp;m&lt;/code&gt; 返回一个映射，该映射包含与 &lt;code&gt;m&lt;/code&gt; 相同的绑定，但 &lt;code&gt;key&lt;/code&gt; 的绑定除外。</target>
        </trans-unit>
        <trans-unit id="bf7b039008c57eea5398d82f26e7e44662bb01b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update&amp;nbsp;key&amp;nbsp;f&amp;nbsp;m&lt;/code&gt; returns a map containing the same bindings as &lt;code&gt;m&lt;/code&gt;, except for the binding of &lt;code&gt;key&lt;/code&gt;. Depending on the value of &lt;code&gt;y&lt;/code&gt; where &lt;code&gt;y&lt;/code&gt; is &lt;code&gt;f&amp;nbsp;(find_opt&amp;nbsp;key&amp;nbsp;m)&lt;/code&gt;, the binding of &lt;code&gt;key&lt;/code&gt; is added, removed or updated. If &lt;code&gt;y&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, the binding is removed if it exists; otherwise, if &lt;code&gt;y&lt;/code&gt; is &lt;code&gt;Some&amp;nbsp;z&lt;/code&gt; then &lt;code&gt;key&lt;/code&gt; is associated to &lt;code&gt;z&lt;/code&gt; in the resulting map. If &lt;code&gt;key&lt;/code&gt; was already bound in &lt;code&gt;m&lt;/code&gt; to a value that is physically equal to &lt;code&gt;z&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt; is returned unchanged (the result of the function is then physically equal to &lt;code&gt;m&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;update&amp;nbsp;key&amp;nbsp;f&amp;nbsp;m&lt;/code&gt; 返回一个映射，该映射包含与 &lt;code&gt;m&lt;/code&gt; 相同的绑定，但 &lt;code&gt;key&lt;/code&gt; 的绑定除外。根据 &lt;code&gt;y&lt;/code&gt; 的值（其中 &lt;code&gt;y&lt;/code&gt; 是 &lt;code&gt;f&amp;nbsp;(find_opt&amp;nbsp;key&amp;nbsp;m)&lt;/code&gt; ，添加，删除或更新 &lt;code&gt;key&lt;/code&gt; 的绑定。如果 &lt;code&gt;y&lt;/code&gt; 为 &lt;code&gt;None&lt;/code&gt; ，则如果存在绑定，则将其删除；否则，将绑定移除。否则，如果 &lt;code&gt;y&lt;/code&gt; 为 &lt;code&gt;Some&amp;nbsp;z&lt;/code&gt; 则将 &lt;code&gt;key&lt;/code&gt; 与结果映射中的 &lt;code&gt;z&lt;/code&gt; 关联。如果 &lt;code&gt;key&lt;/code&gt; 是在已经绑定 &lt;code&gt;m&lt;/code&gt; 到作为物理值等于 &lt;code&gt;z&lt;/code&gt; ， &lt;code&gt;m&lt;/code&gt; 不变地返回（该函数的结果在物理上等于 &lt;code&gt;m&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ca73911e72400913793152f1921a9a00f2da834d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update&amp;nbsp;x&amp;nbsp;f&amp;nbsp;m&lt;/code&gt; returns a map containing the same bindings as &lt;code&gt;m&lt;/code&gt;, except for the binding of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;update&amp;nbsp;x&amp;nbsp;f&amp;nbsp;m&lt;/code&gt; 返回一个映射，该映射包含与 &lt;code&gt;m&lt;/code&gt; 相同的绑定，但 &lt;code&gt;x&lt;/code&gt; 的绑定除外。</target>
        </trans-unit>
        <trans-unit id="1a57be5768cfc764bc350630e1a3d1534efca3bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update&amp;nbsp;x&amp;nbsp;f&amp;nbsp;m&lt;/code&gt; returns a map containing the same bindings as &lt;code&gt;m&lt;/code&gt;, except for the binding of &lt;code&gt;x&lt;/code&gt;. Depending on the value of &lt;code&gt;y&lt;/code&gt; where &lt;code&gt;y&lt;/code&gt; is &lt;code&gt;f&amp;nbsp;(find_opt&amp;nbsp;x&amp;nbsp;m)&lt;/code&gt;, the binding of &lt;code&gt;x&lt;/code&gt; is added, removed or updated. If &lt;code&gt;y&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, the binding is removed if it exists; otherwise, if &lt;code&gt;y&lt;/code&gt; is &lt;code&gt;Some&amp;nbsp;z&lt;/code&gt; then &lt;code&gt;x&lt;/code&gt; is associated to &lt;code&gt;z&lt;/code&gt; in the resulting map. If &lt;code&gt;x&lt;/code&gt; was already bound in &lt;code&gt;m&lt;/code&gt; to a value that is physically equal to &lt;code&gt;z&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt; is returned unchanged (the result of the function is then physically equal to &lt;code&gt;m&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;update&amp;nbsp;x&amp;nbsp;f&amp;nbsp;m&lt;/code&gt; 返回一个映射，该映射包含与 &lt;code&gt;m&lt;/code&gt; 相同的绑定，但 &lt;code&gt;x&lt;/code&gt; 的绑定除外。根据 &lt;code&gt;y&lt;/code&gt; 的值（其中 &lt;code&gt;y&lt;/code&gt; 是 &lt;code&gt;f&amp;nbsp;(find_opt&amp;nbsp;x&amp;nbsp;m)&lt;/code&gt; ，添加，删除或更新 &lt;code&gt;x&lt;/code&gt; 的绑定。如果 &lt;code&gt;y&lt;/code&gt; 为 &lt;code&gt;None&lt;/code&gt; ，则如果存在绑定，则将其删除；否则，将绑定移除。否则，如果 &lt;code&gt;y&lt;/code&gt; 为 &lt;code&gt;Some&amp;nbsp;z&lt;/code&gt; 则 &lt;code&gt;x&lt;/code&gt; 与结果映射图中的 &lt;code&gt;z&lt;/code&gt; 关联。如果 &lt;code&gt;x&lt;/code&gt; 是在已经绑定 &lt;code&gt;m&lt;/code&gt; 到作为物理值等于 &lt;code&gt;z&lt;/code&gt; ， &lt;code&gt;m&lt;/code&gt; 不变地返回（该函数的结果在物理上等于 &lt;code&gt;m&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c6209a8686aadca2a388066ba57399b569b8422a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update&amp;nbsp;~key&amp;nbsp;~f&amp;nbsp;m&lt;/code&gt; returns a map containing the same bindings as &lt;code&gt;m&lt;/code&gt;, except for the binding of &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;update&amp;nbsp;~key&amp;nbsp;~f&amp;nbsp;m&lt;/code&gt; 返回一个映射，该映射包含与 &lt;code&gt;m&lt;/code&gt; 相同的绑定，但 &lt;code&gt;key&lt;/code&gt; 的绑定除外。</target>
        </trans-unit>
        <trans-unit id="f8e197b7e458d6193e5d2d921ff7297c8880f7b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update&amp;nbsp;~key&amp;nbsp;~f&amp;nbsp;m&lt;/code&gt; returns a map containing the same bindings as &lt;code&gt;m&lt;/code&gt;, except for the binding of &lt;code&gt;key&lt;/code&gt;. Depending on the value of &lt;code&gt;y&lt;/code&gt; where &lt;code&gt;y&lt;/code&gt; is &lt;code&gt;f&amp;nbsp;(find_opt&amp;nbsp;key&amp;nbsp;m)&lt;/code&gt;, the binding of &lt;code&gt;key&lt;/code&gt; is added, removed or updated. If &lt;code&gt;y&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, the binding is removed if it exists; otherwise, if &lt;code&gt;y&lt;/code&gt; is &lt;code&gt;Some&amp;nbsp;z&lt;/code&gt; then &lt;code&gt;key&lt;/code&gt; is associated to &lt;code&gt;z&lt;/code&gt; in the resulting map. If &lt;code&gt;key&lt;/code&gt; was already bound in &lt;code&gt;m&lt;/code&gt; to a value that is physically equal to &lt;code&gt;z&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt; is returned unchanged (the result of the function is then physically equal to &lt;code&gt;m&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;update&amp;nbsp;~key&amp;nbsp;~f&amp;nbsp;m&lt;/code&gt; 返回一个映射，该映射包含与 &lt;code&gt;m&lt;/code&gt; 相同的绑定，但 &lt;code&gt;key&lt;/code&gt; 的绑定除外。根据 &lt;code&gt;y&lt;/code&gt; 的值（其中 &lt;code&gt;y&lt;/code&gt; 是 &lt;code&gt;f&amp;nbsp;(find_opt&amp;nbsp;key&amp;nbsp;m)&lt;/code&gt; ，添加，删除或更新 &lt;code&gt;key&lt;/code&gt; 的绑定。如果 &lt;code&gt;y&lt;/code&gt; 为 &lt;code&gt;None&lt;/code&gt; ，则如果存在绑定，则将其删除；否则，将绑定移除。否则，如果 &lt;code&gt;y&lt;/code&gt; 为 &lt;code&gt;Some&amp;nbsp;z&lt;/code&gt; 则将 &lt;code&gt;key&lt;/code&gt; 与结果映射中的 &lt;code&gt;z&lt;/code&gt; 关联。如果 &lt;code&gt;key&lt;/code&gt; 是在已经绑定 &lt;code&gt;m&lt;/code&gt; 到作为物理值等于 &lt;code&gt;z&lt;/code&gt; ， &lt;code&gt;m&lt;/code&gt; 不变地返回（该函数的结果在物理上等于 &lt;code&gt;m&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f556f9bf3877c8fa5c4b0cad4f5ec4acab1c4e5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uppercase_ascii&amp;nbsp;s&lt;/code&gt; is &lt;code&gt;s&lt;/code&gt; with all lowercase letters translated to uppercase, using the US-ASCII character set.</source>
          <target state="translated">&lt;code&gt;uppercase_ascii&amp;nbsp;s&lt;/code&gt; 是 &lt;code&gt;s&lt;/code&gt; ，使用US-ASCII字符集将所有小写字母转换为大写字母。</target>
        </trans-unit>
        <trans-unit id="14401c80df432b74b9a976778212676553d64c98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&amp;nbsp;o&amp;nbsp;~default&lt;/code&gt; is &lt;code&gt;v&lt;/code&gt; if &lt;code&gt;o&lt;/code&gt; is &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;value&amp;nbsp;o&amp;nbsp;~default&lt;/code&gt; 是 &lt;code&gt;v&lt;/code&gt; 如果 &lt;code&gt;o&lt;/code&gt; 是 &lt;code&gt;Some&amp;nbsp;v&lt;/code&gt; 和 &lt;code&gt;default&lt;/code&gt; ，否则。</target>
        </trans-unit>
        <trans-unit id="1340bf75e329377302e4e6b4fdb2f81f148e5156" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&amp;nbsp;r&amp;nbsp;~default&lt;/code&gt; is &lt;code&gt;v&lt;/code&gt; if &lt;code&gt;r&lt;/code&gt; is &lt;code&gt;Ok&amp;nbsp;v&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;value&amp;nbsp;r&amp;nbsp;~default&lt;/code&gt; 是 &lt;code&gt;v&lt;/code&gt; 如果 &lt;code&gt;r&lt;/code&gt; 是 &lt;code&gt;Ok&amp;nbsp;v&lt;/code&gt; 和 &lt;code&gt;default&lt;/code&gt; ，否则。</target>
        </trans-unit>
        <trans-unit id="8a5c50c3a0ff9a098f1b4438b5cb14584c7489c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wait&amp;nbsp;c&amp;nbsp;m&lt;/code&gt; atomically unlocks the mutex &lt;code&gt;m&lt;/code&gt; and suspends the calling process on the condition variable &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;wait&amp;nbsp;c&amp;nbsp;m&lt;/code&gt; 原子性地解锁互斥锁 &lt;code&gt;m&lt;/code&gt; 并挂起对条件变量 &lt;code&gt;c&lt;/code&gt; 的调用过程。</target>
        </trans-unit>
        <trans-unit id="18c0eeecc0e303d2e590de2b11f8da4d3d69a725" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wait&amp;nbsp;c&amp;nbsp;m&lt;/code&gt; atomically unlocks the mutex &lt;code&gt;m&lt;/code&gt; and suspends the calling process on the condition variable &lt;code&gt;c&lt;/code&gt;. The process will restart after the condition variable &lt;code&gt;c&lt;/code&gt; has been signalled. The mutex &lt;code&gt;m&lt;/code&gt; is locked again before &lt;code&gt;wait&lt;/code&gt; returns.</source>
          <target state="translated">&lt;code&gt;wait&amp;nbsp;c&amp;nbsp;m&lt;/code&gt; 原子性地解锁互斥锁 &lt;code&gt;m&lt;/code&gt; 并挂起对条件变量 &lt;code&gt;c&lt;/code&gt; 的调用过程。在发出条件变量 &lt;code&gt;c&lt;/code&gt; 信号后，该过程将重新开始。互斥锁 &lt;code&gt;m&lt;/code&gt; 在 &lt;code&gt;wait&lt;/code&gt; 返回之前再次被锁定。</target>
        </trans-unit>
        <trans-unit id="c85d7e0dc743b4a312f0fc78fd45f7cd9835ee74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wait_pid&amp;nbsp;p&lt;/code&gt; suspends the execution of the calling thread until the process specified by the process identifier &lt;code&gt;p&lt;/code&gt; terminates.</source>
          <target state="translated">&lt;code&gt;wait_pid&amp;nbsp;p&lt;/code&gt; 暂停调用线程的执行，直到进程标识符 &lt;code&gt;p&lt;/code&gt; 指定的进程终止。</target>
        </trans-unit>
        <trans-unit id="8db77c9c72198f65ec3bf960c24a35fd98dd93e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wait_pid&amp;nbsp;p&lt;/code&gt; suspends the execution of the calling thread until the process specified by the process identifier &lt;code&gt;p&lt;/code&gt; terminates. Returns the pid of the child caught and its termination status, as per &lt;code&gt;Unix.wait&lt;/code&gt;. This function is not implemented under MacOS.</source>
          <target state="translated">&lt;code&gt;wait_pid&amp;nbsp;p&lt;/code&gt; 暂停调用线程的执行，直到进程标识符 &lt;code&gt;p&lt;/code&gt; 指定的进程终止。根据 &lt;code&gt;Unix.wait&lt;/code&gt; 返回被捕获的子项的pid及其终止状态。在MacOS下未实现此功能。</target>
        </trans-unit>
        <trans-unit id="2cf0b7d2c426a158b7a81b76304a8bcda6057a91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wait_signal&amp;nbsp;sigs&lt;/code&gt; suspends the execution of the calling thread until the process receives one of the signals specified in the list &lt;code&gt;sigs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;wait_signal&amp;nbsp;sigs&lt;/code&gt; 暂停调用线程的执行，直到进程收到列表 &lt;code&gt;sigs&lt;/code&gt; 中指定的信号之一为止。</target>
        </trans-unit>
        <trans-unit id="829547ecd005eb1a0586b82ebd3e05653394ad6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wait_signal&amp;nbsp;sigs&lt;/code&gt; suspends the execution of the calling thread until the process receives one of the signals specified in the list &lt;code&gt;sigs&lt;/code&gt;. It then returns the number of the signal received. Signal handlers attached to the signals in &lt;code&gt;sigs&lt;/code&gt; will not be invoked. The signals &lt;code&gt;sigs&lt;/code&gt; are expected to be blocked before calling &lt;code&gt;wait_signal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;wait_signal&amp;nbsp;sigs&lt;/code&gt; 暂停调用线程的执行，直到进程收到列表 &lt;code&gt;sigs&lt;/code&gt; 中指定的信号之一为止。然后，它返回接收到的信号的编号。信号中附加到 &lt;code&gt;sigs&lt;/code&gt; 信号的信号处理程序将不会被调用。信号 &lt;code&gt;sigs&lt;/code&gt; 预计将在调用 &lt;code&gt;wait_signal&lt;/code&gt; 之前被阻止。</target>
        </trans-unit>
        <trans-unit id="9730aefacfc6e64f5a867ccaf34d782ad5c38edc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wrap&amp;nbsp;ev&amp;nbsp;fn&lt;/code&gt; returns the event that performs the same communications as &lt;code&gt;ev&lt;/code&gt;, then applies the post-processing function &lt;code&gt;fn&lt;/code&gt; on the return value.</source>
          <target state="translated">&lt;code&gt;wrap&amp;nbsp;ev&amp;nbsp;fn&lt;/code&gt; 返回执行与 &lt;code&gt;ev&lt;/code&gt; 相同的通信的事件，然后将后处理函数 &lt;code&gt;fn&lt;/code&gt; 应用于返回值。</target>
        </trans-unit>
        <trans-unit id="c81177cd1b9b5f750b4ad1d0aa0de2ae40b46916" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wrap_abort&amp;nbsp;ev&amp;nbsp;fn&lt;/code&gt; returns the event that performs the same communications as &lt;code&gt;ev&lt;/code&gt;, but if it is not selected the function &lt;code&gt;fn&lt;/code&gt; is called after the synchronization.</source>
          <target state="translated">&lt;code&gt;wrap_abort&amp;nbsp;ev&amp;nbsp;fn&lt;/code&gt; 返回执行与 &lt;code&gt;ev&lt;/code&gt; 相同的通信的事件，但如果未选择该事件，则在同步后调用函数 &lt;code&gt;fn&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a7ee9713c0a558c0e0373ccbe23e76355bebb9b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write&amp;nbsp;fd&amp;nbsp;buf&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; writes &lt;code&gt;len&lt;/code&gt; bytes to descriptor &lt;code&gt;fd&lt;/code&gt;, taking them from byte sequence &lt;code&gt;buf&lt;/code&gt;, starting at position &lt;code&gt;pos&lt;/code&gt; in &lt;code&gt;buff&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;write&amp;nbsp;fd&amp;nbsp;buf&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; 写入 &lt;code&gt;len&lt;/code&gt; 字节的描述符 &lt;code&gt;fd&lt;/code&gt; ，从字节序列服用他们 &lt;code&gt;buf&lt;/code&gt; ，起始于位置 &lt;code&gt;pos&lt;/code&gt; 中 &lt;code&gt;buff&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="24636b9fa116306d98ae0f54e98b22c2c93b2438" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write&amp;nbsp;fd&amp;nbsp;buf&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; writes &lt;code&gt;len&lt;/code&gt; bytes to descriptor &lt;code&gt;fd&lt;/code&gt;, taking them from byte sequence &lt;code&gt;buf&lt;/code&gt;, starting at position &lt;code&gt;pos&lt;/code&gt; in &lt;code&gt;buff&lt;/code&gt;. Return the number of bytes actually written. &lt;code&gt;write&lt;/code&gt; repeats the writing operation until all bytes have been written or an error occurs.</source>
          <target state="translated">&lt;code&gt;write&amp;nbsp;fd&amp;nbsp;buf&amp;nbsp;pos&amp;nbsp;len&lt;/code&gt; 写入 &lt;code&gt;len&lt;/code&gt; 字节的描述符 &lt;code&gt;fd&lt;/code&gt; ，从字节序列服用他们 &lt;code&gt;buf&lt;/code&gt; ，起始于位置 &lt;code&gt;pos&lt;/code&gt; 中 &lt;code&gt;buff&lt;/code&gt; 。返回实际写入的字节数。 &lt;code&gt;write&lt;/code&gt; 重复写入操作，直到所有字节都已写入或发生错误为止。</target>
        </trans-unit>
        <trans-unit id="881fae14ab2f7890c7e10a7bfef20a8b89415618" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write&amp;nbsp;fd&amp;nbsp;buff&amp;nbsp;ofs&amp;nbsp;len&lt;/code&gt; writes &lt;code&gt;len&lt;/code&gt; bytes to descriptor &lt;code&gt;fd&lt;/code&gt;, taking them from byte sequence &lt;code&gt;buff&lt;/code&gt;, starting at position &lt;code&gt;ofs&lt;/code&gt; in &lt;code&gt;buff&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;write&amp;nbsp;fd&amp;nbsp;buff&amp;nbsp;ofs&amp;nbsp;len&lt;/code&gt; 写入 &lt;code&gt;len&lt;/code&gt; 字节的描述符 &lt;code&gt;fd&lt;/code&gt; ，从字节序列服用他们 &lt;code&gt;buff&lt;/code&gt; ，起始于位置 &lt;code&gt;ofs&lt;/code&gt; 中 &lt;code&gt;buff&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d50987e2eee73b265564fd777af25ae61dbf19d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write&amp;nbsp;fd&amp;nbsp;buff&amp;nbsp;ofs&amp;nbsp;len&lt;/code&gt; writes &lt;code&gt;len&lt;/code&gt; bytes to descriptor &lt;code&gt;fd&lt;/code&gt;, taking them from byte sequence &lt;code&gt;buff&lt;/code&gt;, starting at position &lt;code&gt;ofs&lt;/code&gt; in &lt;code&gt;buff&lt;/code&gt;. Return the number of bytes actually written. &lt;code&gt;write&lt;/code&gt; repeats the writing operation until all bytes have been written or an error occurs.</source>
          <target state="translated">&lt;code&gt;write&amp;nbsp;fd&amp;nbsp;buff&amp;nbsp;ofs&amp;nbsp;len&lt;/code&gt; 写入 &lt;code&gt;len&lt;/code&gt; 字节的描述符 &lt;code&gt;fd&lt;/code&gt; ，从字节序列服用他们 &lt;code&gt;buff&lt;/code&gt; ，起始于位置 &lt;code&gt;ofs&lt;/code&gt; 中 &lt;code&gt;buff&lt;/code&gt; 。返回实际写入的字节数。 &lt;code&gt;write&lt;/code&gt; 重复写入操作，直到所有字节都已写入或发生错误为止。</target>
        </trans-unit>
        <trans-unit id="8f133a397d194a97e064ea9965bb7ff27d4b145d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write&amp;nbsp;fd&amp;nbsp;~buf&amp;nbsp;~pos&amp;nbsp;~len&lt;/code&gt; writes &lt;code&gt;len&lt;/code&gt; bytes to descriptor &lt;code&gt;fd&lt;/code&gt;, taking them from byte sequence &lt;code&gt;buf&lt;/code&gt;, starting at position &lt;code&gt;pos&lt;/code&gt; in &lt;code&gt;buff&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;write&amp;nbsp;fd&amp;nbsp;~buf&amp;nbsp;~pos&amp;nbsp;~len&lt;/code&gt; 写入 &lt;code&gt;len&lt;/code&gt; 字节的描述符 &lt;code&gt;fd&lt;/code&gt; ，从字节序列服用他们 &lt;code&gt;buf&lt;/code&gt; ，起始于位置 &lt;code&gt;pos&lt;/code&gt; 中 &lt;code&gt;buff&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="127577167362fe0e5faedad4adcb98d28e109c4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write&amp;nbsp;fd&amp;nbsp;~buf&amp;nbsp;~pos&amp;nbsp;~len&lt;/code&gt; writes &lt;code&gt;len&lt;/code&gt; bytes to descriptor &lt;code&gt;fd&lt;/code&gt;, taking them from byte sequence &lt;code&gt;buf&lt;/code&gt;, starting at position &lt;code&gt;pos&lt;/code&gt; in &lt;code&gt;buff&lt;/code&gt;. Return the number of bytes actually written. &lt;code&gt;write&lt;/code&gt; repeats the writing operation until all bytes have been written or an error occurs.</source>
          <target state="translated">&lt;code&gt;write&amp;nbsp;fd&amp;nbsp;~buf&amp;nbsp;~pos&amp;nbsp;~len&lt;/code&gt; 写入 &lt;code&gt;len&lt;/code&gt; 字节的描述符 &lt;code&gt;fd&lt;/code&gt; ，从字节序列服用他们 &lt;code&gt;buf&lt;/code&gt; ，起始于位置 &lt;code&gt;pos&lt;/code&gt; 中 &lt;code&gt;buff&lt;/code&gt; 。返回实际写入的字节数。 &lt;code&gt;write&lt;/code&gt; 重复写入操作，直到所有字节都已写入或发生错误为止。</target>
        </trans-unit>
        <trans-unit id="db181cf02629ab2b6a2678d4f4ef5402b16d0aa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; or &lt;code&gt;X&lt;/code&gt;: reads an unsigned hexadecimal integer (&lt;code&gt;[0-9a-fA-F]+&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 或 &lt;code&gt;X&lt;/code&gt; ：读取一个无符号的十六进制整数（ &lt;code&gt;[0-9a-fA-F]+&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="feb9cd7aa3c122f2e209f05a086eb51c084a3e4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt;: convert an integer argument to unsigned hexadecimal, using lowercase letters. The flag &lt;code&gt;#&lt;/code&gt; adds a &lt;code&gt;0x&lt;/code&gt; prefix to non zero values.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; ：使用小写字母将整数参数转换为无符号十六进制。标志 &lt;code&gt;#&lt;/code&gt; 将 &lt;code&gt;0x&lt;/code&gt; 前缀添加到非零值。</target>
        </trans-unit>
        <trans-unit id="bbdbcec25db402e4e500062f2842dc5080634922" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zero&lt;/code&gt; is the integer &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;zero&lt;/code&gt; 是整数 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc8ceea236776a333b2ebf376c412403f0f4793f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{&amp;nbsp;fmt&amp;nbsp;%}&lt;/code&gt;: convert a format string argument to its type digest. The argument must have the same type as the internal format string &lt;code&gt;fmt&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{&amp;nbsp;fmt&amp;nbsp;%}&lt;/code&gt; ：将格式字符串参数转换为其类型摘要。参数必须与内部格式字符串 &lt;code&gt;fmt&lt;/code&gt; 具有相同的类型。</target>
        </trans-unit>
        <trans-unit id="5d8fdc60a2c39348fe48f66d65aa45d54d088f9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{&amp;nbsp;fmt&amp;nbsp;%}&lt;/code&gt;: reads a format string argument. The format string read must have the same type as the format string specification &lt;code&gt;fmt&lt;/code&gt;. For instance, &lt;code&gt;&quot;%{&amp;nbsp;%i&amp;nbsp;%}&quot;&lt;/code&gt; reads any format string that can read a value of type &lt;code&gt;int&lt;/code&gt;; hence, if &lt;code&gt;s&lt;/code&gt; is the string &lt;code&gt;&quot;fmt:\&quot;number&amp;nbsp;is&amp;nbsp;%u\&quot;&quot;&lt;/code&gt;, then &lt;code&gt;Scanf.sscanf&amp;nbsp;s&amp;nbsp;&quot;fmt:&amp;nbsp;%{%i%}&quot;&lt;/code&gt; succeeds and returns the format string &lt;code&gt;&quot;number&amp;nbsp;is&amp;nbsp;%u&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{&amp;nbsp;fmt&amp;nbsp;%}&lt;/code&gt; ：读取格式字符串参数。读取的格式字符串必须与格式字符串规范 &lt;code&gt;fmt&lt;/code&gt; 具有相同的类型。例如， &lt;code&gt;&quot;%{&amp;nbsp;%i&amp;nbsp;%}&quot;&lt;/code&gt; 读取任何可以读取类型为 &lt;code&gt;int&lt;/code&gt; 的值的格式字符串；因此，如果 &lt;code&gt;s&lt;/code&gt; 是字符串 &lt;code&gt;&quot;fmt:\&quot;number&amp;nbsp;is&amp;nbsp;%u\&quot;&quot;&lt;/code&gt; ，则 &lt;code&gt;Scanf.sscanf&amp;nbsp;s&amp;nbsp;&quot;fmt:&amp;nbsp;%{%i%}&quot;&lt;/code&gt; 成功并返回格式字符串 &lt;code&gt;&quot;number&amp;nbsp;is&amp;nbsp;%u&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f7d7f03d629f589be84ef6bdf2e6e0dc0bd7011b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt; If the block has been allocated with caml_alloc_shr, filling is performed through the caml_initialize function: &lt;/em&gt;</source>
          <target state="translated">&lt;em&gt; 如果已使用caml_alloc_shr分配了该块，则通过caml_initialize函数执行填充： &lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="77297e7960b0b1a924c4dca53db669f0f80667b7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt; Otherwise, you are updating a field that previously contained a well-formed value; then, call the caml_modify function: &lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;否则，您将更新以前包含格式正确的字段的字段；否则，将更新字段。然后，调用caml_modify函数：&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ab31d924504f3d3b12f38e112f957be8395839e6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt; is safe only if v is a block newly allocated by caml_alloc_small; that is, if no allocation took place between the allocation of v and the assignment to the field. In all other cases, never assign directly. If the block has just been allocated by caml_alloc_shr, use caml_initialize to assign a value to a field for the first time: &lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;仅当v是caml_alloc_small新分配的块时才是安全的；也就是说，如果v的分配和对该字段的分配之间没有分配。在其他所有情况下，请勿直接分配。如果该块刚由caml_alloc_shr分配，则使用caml_initialize首次为字段分配一个值：&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d1a8b32ebbc9560a95a89b6302f932870697adc3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Flambda&lt;/em&gt; is the term used to describe a series of optimisation passes provided by the native code compilers as of OCaml 4.03.</source>
          <target state="translated">&lt;em&gt;Flambda&lt;/em&gt;是用于描述从OCaml 4.03开始的本机代码编译器提供的一系列优化过程的术语。</target>
        </trans-unit>
        <trans-unit id="adc81aacd3c7e0ab245b2cc696f21bdbcb2b1fd1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inlining&lt;/em&gt; refers to the copying of the code of a function to a place where the function is called. The code of the function will be surrounded by bindings of its parameters to the corresponding arguments.</source>
          <target state="translated">&lt;em&gt;内联&lt;/em&gt;是指将功能代码复制到调用该功能的位置。函数的代码将被其参数绑定到相应参数的包围。</target>
        </trans-unit>
        <trans-unit id="7e2fa0438def41995dfc05b7b0715fa701ee29ba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The same is true for any memory location outside the OCaml heap that contains a value and is not guaranteed to be reachable&amp;mdash;for as long as it contains such value&amp;mdash;from either another registered global variable or location, local variable declared with CAMLlocal or function parameter declared with CAMLparam. &lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;对于OCaml堆以外包含值且不能保证可访问的任何内存位置（只要包含该值），都可以从另一个已注册的全局变量或位置，使用CAMLlocal声明的局部变量或函数参数访问，这也是正确的用CAMLparam声明。 &lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="861af26feb11ea307b6863521db945c3658132a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This document was translated from L&lt;sup&gt;A&lt;/sup&gt;T&lt;sub&gt;E&lt;/sub&gt;X by &lt;/em&gt;&lt;a href=&quot;http://hevea.inria.fr/index.html&quot;&gt;&lt;em&gt;H&lt;sup&gt;E&lt;/sup&gt;V&lt;sup&gt;E&lt;/sup&gt;A&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;本文档由&lt;sup&gt;&lt;/sup&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/em&gt;&lt;a href=&quot;http://hevea.inria.fr/index.html&quot;&gt;&lt;em&gt;H &lt;sup&gt;A&lt;/sup&gt; V &lt;sup&gt;E&lt;/sup&gt; A&lt;/em&gt;&lt;/a&gt;&lt;em&gt;从L &lt;/em&gt;&lt;em&gt;&lt;sup&gt;A&lt;/sup&gt;&lt;/em&gt;&lt;em&gt; T &lt;/em&gt;&lt;em&gt;&lt;sub&gt;E&lt;/sub&gt;&lt;/em&gt;&lt;em&gt; X&lt;/em&gt;&lt;em&gt;翻译而来&lt;/em&gt;&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bc6fce30be2f0802941e88b6439542de53d9ed0d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;babeltrace&lt;/em&gt; is a C library, as well as a Python binding and set of tools that serve as the reference implementation for the &lt;em&gt;Common Trace Format&lt;/em&gt;. The &lt;em&gt;babeltrace&lt;/em&gt; command line utility allows for a basic rendering of a trace&amp;rsquo;s content, while the high level Python API can be used to decode the trace and process them programmatically with libraries such as &lt;em&gt;numpy&lt;/em&gt; or &lt;em&gt;Jupyter&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;babeltrace&lt;/em&gt;是一个C库，以及一个Python绑定和一系列工具，这些工具可用作&lt;em&gt;Common Trace Format&lt;/em&gt;的参考实现。所述&lt;em&gt;babeltrace&lt;/em&gt;命令行实用程序允许微量的内容的基本呈现，而高水平的Python API可用于解码所述迹线和与库，如编程处理它们&lt;em&gt;numpy的&lt;/em&gt;或&lt;em&gt;Jupyter&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="95242bd4bc9cc11afe6cc1ff6e0674f4c3521a33" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;conversions specifications&lt;/em&gt;, introduced by the special character &lt;code&gt;'%'&lt;/code&gt; followed by one or more characters specifying what kind of argument to read or print,</source>
          <target state="translated">&lt;em&gt;转换规范&lt;/em&gt;，由特殊字符 &lt;code&gt;'%'&lt;/code&gt; 引入，后接一个或多个字符，指定要读取或打印哪种类型的参数，</target>
        </trans-unit>
        <trans-unit id="13001c04174a3b9fe068df6ffd4a77f4d7ca8fbe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;eventlog-tools&lt;/em&gt; is a library implementing a parser, as well as a a set of tools that allows to perform basic format conversions and analysis.</source>
          <target state="translated">&lt;em&gt;eventlog-tools&lt;/em&gt;是一个实现解析器的库，以及一组允许执行基本格式转换和分析的工具。</target>
        </trans-unit>
        <trans-unit id="f31f9e2216f956a026da2445835657466acdc44a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;formatting indications&lt;/em&gt;, introduced by the special character &lt;code&gt;'@'&lt;/code&gt; followed by one or more characters specifying how to read or print the argument,</source>
          <target state="translated">&lt;em&gt;格式指示&lt;/em&gt;，由特殊字符 &lt;code&gt;'@'&lt;/code&gt; 引入，后跟一个或多个指定如何读取或打印自变量的字符，</target>
        </trans-unit>
        <trans-unit id="33609b4541b91ca0c4b5f9184d8187a602eff2b2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;n&lt;/em&gt; | &lt;em&gt;round&lt;/em&gt;=&lt;em&gt;n&lt;/em&gt;[,...]</source>
          <target state="translated">&lt;em&gt;n&lt;/em&gt; | &lt;em&gt;回合&lt;/em&gt;= &lt;em&gt;n&lt;/em&gt; [，...]</target>
        </trans-unit>
        <trans-unit id="1bb6de2544a498aeb0ab62ac27b0864a67e9731e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;plain characters&lt;/em&gt; that are regular characters with usual lexical conventions. Plain characters specify string literals to be read in the input or printed in the output.</source>
          <target state="translated">&lt;em&gt;普通字符&lt;/em&gt;，是具有常规词汇约定的常规字符。普通字符指定要在输入中读取或在输出中打印的字符串文字。</target>
        </trans-unit>
        <trans-unit id="35f25c500c9b58e83bcec897a76d2c9913070825" translate="yes" xml:space="preserve">
          <source>= [|] &lt;a href=&quot;#constr-decl&quot;&gt;constr-decl&lt;/a&gt; { |&lt;a href=&quot;#constr-decl&quot;&gt;constr-decl&lt;/a&gt; }</source>
          <target state="translated">= [|] &lt;a href=&quot;#constr-decl&quot;&gt;constr-decl&lt;/a&gt; {| &lt;a href=&quot;#constr-decl&quot;&gt;构造-DECL&lt;/a&gt; }</target>
        </trans-unit>
        <trans-unit id="3811d21b2a43de59d1c1555ca0559ad9e79a7b9f" translate="yes" xml:space="preserve">
          <source>=&amp;hellip; &amp;lt;&amp;hellip; &amp;gt;&amp;hellip; |&amp;hellip; &amp;amp;&amp;hellip; $&amp;hellip; !=</source>
          <target state="translated">=&amp;hellip;&amp;lt;&amp;hellip;&amp;gt;&amp;hellip;|&amp;hellip;＆&amp;hellip;$&amp;hellip;！=</target>
        </trans-unit>
        <trans-unit id="27e3c52aa4ae822a715c775c7d9e39abbbb6d5d9" translate="yes" xml:space="preserve">
          <source>=..</source>
          <target state="translated">=..</target>
        </trans-unit>
        <trans-unit id="3b3b8658c8c0a3a0669eadebecfc43d61ba0af79" translate="yes" xml:space="preserve">
          <source>=&lt;a href=&quot;#record-decl&quot;&gt;record-decl&lt;/a&gt;</source>
          <target state="translated">=&lt;a href=&quot;#record-decl&quot;&gt;record-decl&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b88e5c69c884d624b1871b162f858a3ff4062492" translate="yes" xml:space="preserve">
          <source>=&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</source>
          <target state="translated">=&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf4e14ac6e7ad5619e6c82cef9ce571988d36c7f" translate="yes" xml:space="preserve">
          <source>=private [ | ] &lt;a href=&quot;typedecl#constr-decl&quot;&gt;constr-decl&lt;/a&gt; { |&lt;a href=&quot;typedecl#constr-decl&quot;&gt;constr-decl&lt;/a&gt; }</source>
          <target state="translated">=私人[| ] &lt;a href=&quot;typedecl#constr-decl&quot;&gt;constr-decl&lt;/a&gt; {| &lt;a href=&quot;typedecl#constr-decl&quot;&gt;构造-DECL&lt;/a&gt; }</target>
        </trans-unit>
        <trans-unit id="40c876d08b0a128f57c88da77bd2bcde40f9daef" translate="yes" xml:space="preserve">
          <source>=private..</source>
          <target state="translated">=private..</target>
        </trans-unit>
        <trans-unit id="04d424c2e13fb286f8380b033c41cf8359d100d0" translate="yes" xml:space="preserve">
          <source>=private&lt;a href=&quot;typedecl#record-decl&quot;&gt;record-decl&lt;/a&gt;</source>
          <target state="translated">=private&lt;a href=&quot;typedecl#record-decl&quot;&gt;record-decl&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="568a02c5f2a2b6c8200183de3d575e18ecf8aab6" translate="yes" xml:space="preserve">
          <source>=private&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</source>
          <target state="translated">=private&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f285e645193f41dad5f1b973ab46b06cef43ddb1" translate="yes" xml:space="preserve">
          <source>=|</source>
          <target state="translated">=|</target>
        </trans-unit>
        <trans-unit id="a5343d2e36ee86946caf93e678afb4b5cecb3e69" translate="yes" xml:space="preserve">
          <source>?(&lt;a href=&quot;lex#label-name&quot;&gt;label-name&lt;/a&gt; [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] [=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;] )</source>
          <target state="translated">?(&lt;a href=&quot;lex#label-name&quot;&gt;label-name&lt;/a&gt; [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] [=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;] )</target>
        </trans-unit>
        <trans-unit id="641458cdf7c6f957fed50e9765bf62178e5559d3" translate="yes" xml:space="preserve">
          <source>?&lt;a href=&quot;#label-name&quot;&gt;label-name&lt;/a&gt;:</source>
          <target state="translated">?&lt;a href=&quot;#label-name&quot;&gt;label-name&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="75cbb55c27d2d3b872f6d678ae9ca02f737b08f6" translate="yes" xml:space="preserve">
          <source>?&lt;a href=&quot;lex#label-name&quot;&gt;label-name&lt;/a&gt;</source>
          <target state="translated">?&lt;a href=&quot;lex#label-name&quot;&gt;label-name&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a790b85e3083978e258bf1e4c737baeda9b000b" translate="yes" xml:space="preserve">
          <source>?&lt;a href=&quot;lex#label-name&quot;&gt;label-name&lt;/a&gt;:(&lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt; [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] [=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;] )</source>
          <target state="translated">？&lt;a href=&quot;lex#label-name&quot;&gt;标签名&lt;/a&gt;:(&lt;a href=&quot;patterns#pattern&quot;&gt;模式&lt;/a&gt;[：&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt; ] [= &lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt; ]）</target>
        </trans-unit>
        <trans-unit id="fcf0912e2c4c8614c1eac9c6ee1533a01075d2ee" translate="yes" xml:space="preserve">
          <source>?&lt;a href=&quot;lex#label-name&quot;&gt;label-name&lt;/a&gt;:&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="translated">?&lt;a href=&quot;lex#label-name&quot;&gt;label-name&lt;/a&gt;:&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f7da3604f60470bc6c66554f1097308e308c9c3" translate="yes" xml:space="preserve">
          <source>?&lt;a href=&quot;lex#label-name&quot;&gt;label-name&lt;/a&gt;:&lt;a href=&quot;#typexpr&quot;&gt;typexpr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;-&amp;gt;&lt;a href=&quot;#typexpr&quot;&gt;typexpr&lt;/a&gt;&lt;sub&gt;2&lt;/sub&gt; denotes the type of functions mapping an optional labeled argument of type &lt;a href=&quot;#typexpr&quot;&gt;typexpr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt; to results of type &lt;a href=&quot;#typexpr&quot;&gt;typexpr&lt;/a&gt;&lt;sub&gt;2&lt;/sub&gt;. That is, the physical type of the function will be &lt;a href=&quot;#typexpr&quot;&gt;typexpr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;option-&amp;gt;&lt;a href=&quot;#typexpr&quot;&gt;typexpr&lt;/a&gt;&lt;sub&gt;2&lt;/sub&gt;.</source>
          <target state="translated">？&lt;a href=&quot;lex#label-name&quot;&gt;label-name&lt;/a&gt;：&lt;a href=&quot;#typexpr&quot;&gt;typexpr &lt;/a&gt;&lt;sub&gt;1-&lt;/sub&gt; &amp;gt; &lt;a href=&quot;#typexpr&quot;&gt;typexpr &lt;/a&gt;&lt;sub&gt;2&lt;/sub&gt;表示将类型为&lt;a href=&quot;#typexpr&quot;&gt;typexpr &lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;的可选带标签参数映射到&lt;a href=&quot;#typexpr&quot;&gt;typexpr &lt;/a&gt;&lt;sub&gt;2的&lt;/sub&gt;结果的函数类型。也就是说，函数的物理类型将是&lt;a href=&quot;#typexpr&quot;&gt;typexpr &lt;/a&gt;&lt;sub&gt;1 &lt;/sub&gt;&lt;a href=&quot;#typexpr&quot;&gt;option-&lt;/a&gt; &amp;gt; typexpr &lt;sub&gt;2&lt;/sub&gt;。</target>
        </trans-unit>
        <trans-unit id="02235f724c2c1d3e0140f0a5af7fc777371e4c8c" translate="yes" xml:space="preserve">
          <source>?&lt;a href=&quot;lex#label-name&quot;&gt;label-name&lt;/a&gt;:&lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;</source>
          <target state="translated">?&lt;a href=&quot;lex#label-name&quot;&gt;label-name&lt;/a&gt;:&lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b20b8e6cef35a72b77e661f408be694f5ea173d" translate="yes" xml:space="preserve">
          <source>?&lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt; [when&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;]</source>
          <target state="translated">？&lt;a href=&quot;patterns#pattern&quot;&gt;模式&lt;/a&gt;[ &lt;a href=&quot;expr#expr&quot;&gt;expr时&lt;/a&gt;]</target>
        </trans-unit>
        <trans-unit id="d99e8fe9b6bf7ca07822ebe4aa592f29b5706032" translate="yes" xml:space="preserve">
          <source>@&amp;hellip; ^&amp;hellip;</source>
          <target state="translated">@ ... ^ ...</target>
        </trans-unit>
        <trans-unit id="5d86598ed1df9fb0456f04cb0f5f76d3a7958326" translate="yes" xml:space="preserve">
          <source>@@inline always or @@inline never</source>
          <target state="translated">始终@@ inline或永不@@ inline</target>
        </trans-unit>
        <trans-unit id="0b0e915265b746ba7b86d15b27c41bfcc7ebf472" translate="yes" xml:space="preserve">
          <source>@@specialise always or @@specialise never</source>
          <target state="translated">始终@@ specialise或永不@@ specialise</target>
        </trans-unit>
        <trans-unit id="9302b4e97c0c1d51eb90fbdc333c4ddc3d493a8e" translate="yes" xml:space="preserve">
          <source>@Since 4.04</source>
          <target state="translated">@从4.04开始</target>
        </trans-unit>
        <trans-unit id="60d7f451e3444dd49e8557791f9ad2e0dc9f1ec3" translate="yes" xml:space="preserve">
          <source>@authorstring</source>
          <target state="translated">@authorstring</target>
        </trans-unit>
        <trans-unit id="c8693caa453bd99afe150cb575264e8aaf56df9d" translate="yes" xml:space="preserve">
          <source>@beforeversion&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;</source>
          <target state="translated">@beforeversion&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="398c6b3f4996baf3b506b5876f377dd21e556e38" translate="yes" xml:space="preserve">
          <source>@deprecated&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;</source>
          <target state="translated">@deprecated&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e2158cd0b6f3ceb593cc5e312ab73cda9661386c" translate="yes" xml:space="preserve">
          <source>@id equivalent to ++id+id (enables id and turns it into a fatal-error)</source>
          <target state="translated">@id等同于++ id + id（启用id并将其转变为致命错误）</target>
        </trans-unit>
        <trans-unit id="42a17f561b41d4a3f91b555962bbf9b5b69db6ca" translate="yes" xml:space="preserve">
          <source>@inlined always or @inlined never</source>
          <target state="translated">@inlined始终或@inlined从不</target>
        </trans-unit>
        <trans-unit id="82d4fd270c002ddf15127cc3e0b4ad2c2225ffab" translate="yes" xml:space="preserve">
          <source>@letter</source>
          <target state="translated">@letter</target>
        </trans-unit>
        <trans-unit id="44b3bbc8409d452f5de5ac6c9599354633b9b626" translate="yes" xml:space="preserve">
          <source>@name</source>
          <target state="translated">@name</target>
        </trans-unit>
        <trans-unit id="d018090c7aba2d64e78fd76e12be80a29c0e7baa" translate="yes" xml:space="preserve">
          <source>@num</source>
          <target state="translated">@num</target>
        </trans-unit>
        <trans-unit id="aef1ebc4f4698e35c390cad3068faf5c855a3609" translate="yes" xml:space="preserve">
          <source>@num1..num2</source>
          <target state="translated">@num1..num2</target>
        </trans-unit>
        <trans-unit id="53c026cb8e000d72be60fdd3f3338d57b7367fce" translate="yes" xml:space="preserve">
          <source>@paramid&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;</source>
          <target state="translated">@paramid&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46bf98600df351ff43583c1ae7d840fb807e31b6" translate="yes" xml:space="preserve">
          <source>@raiseExc&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;</source>
          <target state="translated">@raiseExc&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c63c820043c28012d3afbe5824757df20f862e26" translate="yes" xml:space="preserve">
          <source>@return&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;</source>
          <target state="translated">@return&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7e4f9c65249bf5e38c56ce5c8166b8e9e9d2462" translate="yes" xml:space="preserve">
          <source>@see&quot;document-name&quot;&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;</source>
          <target state="translated">@see&quot;document-name&quot;&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dfb0eab341ea60105004b1b83c7b9dc397216e72" translate="yes" xml:space="preserve">
          <source>@see&amp;lt;URL&amp;gt;&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;</source>
          <target state="translated">@see&amp;lt;URL&amp;gt;&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2783ca888e11fa8b83521ad3b4a8fd56aad42a51" translate="yes" xml:space="preserve">
          <source>@see'filename'&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;</source>
          <target state="translated">@see'filename'&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9457f71abf5c3e5e8bb39739b5208dc86c730363" translate="yes" xml:space="preserve">
          <source>@sincestring</source>
          <target state="translated">@sincestring</target>
        </trans-unit>
        <trans-unit id="f2010b8ee5a069b8807ca7757933f2e2ac2cc3c7" translate="yes" xml:space="preserve">
          <source>@specialised always or @specialised never</source>
          <target state="translated">始终@specialized或@specialised从不</target>
        </trans-unit>
        <trans-unit id="65606eb97a421c466c39b637e56b2af63142345c" translate="yes" xml:space="preserve">
          <source>@unrolled n</source>
          <target state="translated">@展开n</target>
        </trans-unit>
        <trans-unit id="6c042c6c742a9216feac8dab97d153746ae02ff8" translate="yes" xml:space="preserve">
          <source>@versionstring</source>
          <target state="translated">@versionstring</target>
        </trans-unit>
        <trans-unit id="6dcd4ce23d88e2ee9568ba546c007c63d9131c1b" translate="yes" xml:space="preserve">
          <source>A</source>
          <target state="translated">A</target>
        </trans-unit>
        <trans-unit id="cb83c2b620ed3eb44d097ed02d741dd98f71a97a" translate="yes" xml:space="preserve">
          <source>A &amp;hellip; Z ∣ a &amp;hellip; z</source>
          <target state="translated">A &amp;hellip; Z ∣ a &amp;hellip; z</target>
        </trans-unit>
        <trans-unit id="060bb5b5ab06fae37dbf720db0d037e2a4cd75a7" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;destructive&amp;rdquo; substitution (with ... := ...) behaves essentially like normal signature constraints (with ... = ...), but it additionally removes the redefined type or module from the signature.</source>
          <target state="translated">&amp;ldquo;破坏性&amp;rdquo;替换（带有...：= ...）的行为本质上类似于普通签名约束（带有... = ...），但它还会从签名中删除重新定义的类型或模块。</target>
        </trans-unit>
        <trans-unit id="258cd65839c85f783df9a0d042bf3954491cf4eb" translate="yes" xml:space="preserve">
          <source>A 'break hint' tells the pretty-printer to output some space or split the line whichever way is more appropriate to the current pretty-printing box splitting rules.</source>
          <target state="translated">一个 &quot;中断提示 &quot;告诉漂亮打印机输出一些空间或分割行,无论哪种方式更适合当前漂亮打印框的分割规则。</target>
        </trans-unit>
        <trans-unit id="e23971880393579133421c348f6fe762412627d1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;('minor,&amp;nbsp;'major)&amp;nbsp;tracker&lt;/code&gt; describes how memprof should track sampled blocks over their lifetime, keeping a user-defined piece of metadata for each of them: &lt;code&gt;'minor&lt;/code&gt; is the type of metadata to keep for minor blocks, and &lt;code&gt;'major&lt;/code&gt; the type of metadata for major blocks.</source>
          <target state="translated">一个 &lt;code&gt;('minor,&amp;nbsp;'major)&amp;nbsp;tracker&lt;/code&gt; 描述了memprof如何在其生命周期内跟踪采样的块，并为每个块保留了用户定义的元数据： &lt;code&gt;'minor&lt;/code&gt; 是用于次要块的元数据类型，而 &lt;code&gt;'major&lt;/code&gt; 是主要块的元数据类型。</target>
        </trans-unit>
        <trans-unit id="9ba10bfb79c04a83f561cc6722984698da6b37ac" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Rest&lt;/code&gt; or &lt;code&gt;Rest_all&lt;/code&gt; keyword takes the remainder of the command line as arguments. (More explanations below.)</source>
          <target state="translated">甲 &lt;code&gt;Rest&lt;/code&gt; 或 &lt;code&gt;Rest_all&lt;/code&gt; 关键字取命令行作为参数的其余部分。（下面有更多说明。）</target>
        </trans-unit>
        <trans-unit id="45d09fddac2706192f669c2f977cdfe6302b75d7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;raw_backtrace_entry&lt;/code&gt; can be converted to a usable form using &lt;code&gt;backtrace_slots_of_raw_entry&lt;/code&gt; below. Note that, due to inlining, a single &lt;code&gt;raw_backtrace_entry&lt;/code&gt; may convert to several &lt;code&gt;backtrace_slot&lt;/code&gt;s. Since the values of a &lt;code&gt;raw_backtrace_entry&lt;/code&gt; are not stable, they cannot be marshalled. If they are to be converted, the conversion must be done by the process that generated them.</source>
          <target state="translated">可以使用下面的 &lt;code&gt;backtrace_slots_of_raw_entry&lt;/code&gt; 将 &lt;code&gt;raw_backtrace_entry&lt;/code&gt; 转换为可用形式。请注意，由于内联，单个 &lt;code&gt;raw_backtrace_entry&lt;/code&gt; 可能会转换为多个 &lt;code&gt;backtrace_slot&lt;/code&gt; 。由于 &lt;code&gt;raw_backtrace_entry&lt;/code&gt; 的值不稳定，因此无法将其编组。如果要转换它们，则转换必须由生成它们的过程完成。</target>
        </trans-unit>
        <trans-unit id="eed6c1bb22830725ff79a1386c78c09e1b1f71c6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;raw_backtrace_entry&lt;/code&gt; is an element of a &lt;code&gt;raw_backtrace&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;raw_backtrace_entry&lt;/code&gt; 是一个的元件 &lt;code&gt;raw_backtrace&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="433d7a2a91aa4a8dfd04243fb4abbed5548c88d3" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;position&lt;/em&gt;&lt;code&gt;i&lt;/code&gt; of &lt;code&gt;s&lt;/code&gt; is an integer in the range [&lt;code&gt;0&lt;/code&gt;;&lt;code&gt;n&lt;/code&gt;]. It represents either the point at the beginning of the string, or the point between two indices, or the point at the end of the string. The &lt;code&gt;i&lt;/code&gt;th byte index is between position &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;i+1&lt;/code&gt;.</source>
          <target state="translated">甲&lt;em&gt;位置&lt;/em&gt; &lt;code&gt;i&lt;/code&gt; 的 &lt;code&gt;s&lt;/code&gt; 是在范围[整数 &lt;code&gt;0&lt;/code&gt; ; &lt;code&gt;n&lt;/code&gt; ]。它代表字符串开头的点，或者两个索引之间的点，或者字符串结尾的点。第 &lt;code&gt;i&lt;/code&gt; 个字节索引位于位置 &lt;code&gt;i&lt;/code&gt; 和 &lt;code&gt;i+1&lt;/code&gt; 之间。</target>
        </trans-unit>
        <trans-unit id="5f07df1f884cfb4c1dd6917c7bcef252ebd46c0e" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;tabulation box&lt;/em&gt; prints material on lines divided into cells of fixed length. A tabulation box provides a simple way to display vertical columns of left adjusted text.</source>
          <target state="translated">一个&lt;em&gt;制表盒&lt;/em&gt;在分成固定长度的单元格的行上打印材料。制表框提供了一种简单的方式来显示左调整文本的垂直列。</target>
        </trans-unit>
        <trans-unit id="8bdf58d5dee17f510edae9381ed133c43c06464b" translate="yes" xml:space="preserve">
          <source>A C static library .a(respectively, .lib) built from the C object files.</source>
          <target state="translated">由C对象文件构建的C静态库.a(分别为.lib)。</target>
        </trans-unit>
        <trans-unit id="f4c820858a3f4262cecc944745864e5b79d4bf9e" translate="yes" xml:space="preserve">
          <source>A Unicode character escape sequence is substituted by the UTF-8 encoding of the specified Unicode scalar value. The Unicode scalar value, an integer in the ranges 0x0000...0xD7FF or 0xE000...0x10FFFF, is defined using 1 to 6 hexadecimal digits; leading zeros are allowed.</source>
          <target state="translated">Unicode字符转义序列被指定Unicode标量值的UTF-8编码所替代。Unicode标量值是一个范围为0x0000...0xD7FF或0xE000...0x10FFFF的整数,使用1至6个十六进制数字定义,允许使用前导零。</target>
        </trans-unit>
        <trans-unit id="e207c72075ad8a4966ee5b38dea0d69675947b55" translate="yes" xml:space="preserve">
          <source>A better alternative is:</source>
          <target state="translated">一个更好的选择是:</target>
        </trans-unit>
        <trans-unit id="d61838503acb7c4ec22d48b6b45f1a44ac913d7c" translate="yes" xml:space="preserve">
          <source>A better implementation, and one that scales up better, is to use a true hash table&amp;hellip; whose elements are small hash tables!</source>
          <target state="translated">一个更好的实现，以及一个更好的扩展，是使用一个真正的哈希表&amp;hellip;&amp;hellip;其元素是小的哈希表！</target>
        </trans-unit>
        <trans-unit id="6ada3a22622c7725e6e6b417958e0bf1738b20a1" translate="yes" xml:space="preserve">
          <source>A better solution is to use polymorphic methods, which were introduced in OCaml version 3.05. Polymorphic methods makes it possible to treat the type variable 'b in the type of fold as universally quantified, giving fold the polymorphic type Forall 'b. ('b -&amp;gt; 'a -&amp;gt; 'b) -&amp;gt; 'b -&amp;gt; 'b. An explicit type declaration on the method fold is required, since the type checker cannot infer the polymorphic type by itself.</source>
          <target state="translated">更好的解决方案是使用OCaml 3.05版中引入的多态方法。多态方法使得可以将折叠类型的类型变量'b视为通用量化，从而给出多态类型Forall'b的折叠。（'b-&amp;gt;'a-&amp;gt;'b）-&amp;gt;'b-&amp;gt;'b。由于类型检查器本身无法推断多态类型，因此需要在方法折叠上进行显式类型声明。</target>
        </trans-unit>
        <trans-unit id="a4100e34fc3ce4c7a831efc5fb3ca11fe7cefbf3" translate="yes" xml:space="preserve">
          <source>A binary method is a method which takes an argument of the same type as self. The class comparable below is a template for classes with a binary method leq of type 'a -&amp;gt; bool where the type variable 'a is bound to the type of self. Therefore, #comparable expands to &amp;lt; leq : 'a -&amp;gt; bool; .. &amp;gt; as 'a. We see here that the binder as also allows writing recursive types.</source>
          <target state="translated">二进制方法是一种采用与self相同类型的参数的方法。下面可比较的类是具有'a-&amp;gt; bool类型的二进制方法leq的类的模板，其中类型变量'a绑定到self类型。因此，#comparable扩展为&amp;lt;leq：'a-&amp;gt; bool; ..&amp;gt;为'a。我们在这里看到活页夹也允许编写递归类型。</target>
        </trans-unit>
        <trans-unit id="621feb6ec35c2d3412e3a8d716b44ee33a94585a" translate="yes" xml:space="preserve">
          <source>A binary semaphore can be used instead of a mutex (see module &lt;a href=&quot;mutex&quot;&gt;&lt;code&gt;Mutex&lt;/code&gt;&lt;/a&gt;) when the mutex discipline (of unlocking the mutex from the thread that locked it) is too restrictive. The &quot;acquire&quot; operation corresponds to locking the mutex, and the &quot;release&quot; operation to unlocking it, but &quot;release&quot; can be performed in a thread different than the one that performed the &quot;acquire&quot;. Likewise, it is safe to release a binary semaphore that is already available.</source>
          <target state="translated">当互斥锁规则（从锁定它的线程解锁互斥锁）的限制太严格时，可以使用二进制信号量来代替互斥锁（请参见模块&lt;a href=&quot;mutex&quot;&gt; &lt;code&gt;Mutex&lt;/code&gt; &lt;/a&gt;）。 &amp;ldquo;获取&amp;rdquo;操作对应于锁定互斥锁，而&amp;ldquo;释放&amp;rdquo;操作对应于对其进行解锁，但是&amp;ldquo;释放&amp;rdquo;可以在与执行&amp;ldquo;获取&amp;rdquo;的线程不同的线程中执行。同样，释放已经可用的二进制信号量是安全的。</target>
        </trans-unit>
        <trans-unit id="28ec34ec9cc6e260e1da806e99bfef3bdbe22c7b" translate="yes" xml:space="preserve">
          <source>A binary semaphore can be used to control access to a single shared resource, with value 1 meaning &quot;resource is available&quot; and value 0 meaning &quot;resource is unavailable&quot;.</source>
          <target state="translated">二进制信标可以用来控制对单个共享资源的访问,值1表示 &quot;资源可用&quot;,值0表示 &quot;资源不可用&quot;。</target>
        </trans-unit>
        <trans-unit id="0186897b379e299a2fb832a28b160f6761112c9e" translate="yes" xml:space="preserve">
          <source>A block representing an abstract datatype with user-defined finalization, comparison, hashing, serialization and deserialization functions attached.</source>
          <target state="translated">一个代表抽象数据类型的块,附加了用户定义的最终化、比较、散列、序列化和反序列化功能。</target>
        </trans-unit>
        <trans-unit id="cecab5fd86eaf3e5113cfe1c32d1c19f629b8770" translate="yes" xml:space="preserve">
          <source>A block representing an abstract datatype.</source>
          <target state="translated">代表一个抽象数据类型的块。</target>
        </trans-unit>
        <trans-unit id="a0f30d0208a1fc9ac467c79591fcf52ed3d1a112" translate="yes" xml:space="preserve">
          <source>A break hint splits the line if there is no more room on the line to print the remainder of the box.</source>
          <target state="translated">如果行上没有更多的空间来打印方框的剩余部分,则断点提示将该行分割开来。</target>
        </trans-unit>
        <trans-unit id="2a6b205bd5912e91be73df664ddba43dcc4239bf" translate="yes" xml:space="preserve">
          <source>A breakpoint causes the program to stop whenever a certain point in the program is reached. It can be set in several ways using the break command. Breakpoints are assigned numbers when set, for further reference. The most comfortable way to set breakpoints is through the Emacs interface (see section &amp;zwj;&lt;a href=&quot;#s%3Ainf-debugger&quot;&gt;16.10&lt;/a&gt;).</source>
          <target state="translated">每当到达程序中的某个点时，断点都会导致程序停止。可以使用break命令以多种方式设置它。设置时为断点分配编号，以供进一步参考。最舒适的方式来设置断点是通过Emacs界面（见&lt;a href=&quot;#s%3Ainf-debugger&quot;&gt;16.10&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="75194640d7ddec04a1b2ffd4e62e164465fcc4ab" translate="yes" xml:space="preserve">
          <source>A breakpoint causes the program to stop whenever a certain point in the program is reached. It can be set in several ways using the break command. Breakpoints are assigned numbers when set, for further reference. The most comfortable way to set breakpoints is through the Emacs interface (see section &lt;a href=&quot;#s%3Ainf-debugger&quot;&gt;17.10&lt;/a&gt;).</source>
          <target state="translated">每当到达程序中的某个点时，断点都会导致程序停止。可以使用break命令以多种方式设置它。设置时为断点分配编号，以供进一步参考。设置断点的最舒适的方法是通过Emacs界面（请参见第&lt;a href=&quot;#s%3Ainf-debugger&quot;&gt;17.10&lt;/a&gt;节）。</target>
        </trans-unit>
        <trans-unit id="e257d9105c899a3c3783326ebeea1df36c280f71" translate="yes" xml:space="preserve">
          <source>A byte sequence is a mutable data structure that contains a fixed-length sequence of bytes. Each byte can be indexed in constant time for reading or writing.</source>
          <target state="translated">字节序列是一种可变化的数据结构,它包含一个固定长度的字节序列。每个字节都可以在恒定的时间内进行索引,以便进行读或写。</target>
        </trans-unit>
        <trans-unit id="1ca00c1e1f4174bb74032955c30a3da979ccd6d3" translate="yes" xml:space="preserve">
          <source>A byte sequence of size 0.</source>
          <target state="translated">一个大小为0的字节序列。</target>
        </trans-unit>
        <trans-unit id="3b75c39b5bed2f667d3546cc56ddc1236ef03c7b" translate="yes" xml:space="preserve">
          <source>A character constant, with the same syntax as OCaml character constants. Match the denoted character.</source>
          <target state="translated">一个字符常量,与OCaml字符常量的语法相同。匹配指定的字符。</target>
        </trans-unit>
        <trans-unit id="1841e018023cddb842ced54ea36e7c4de9a05759" translate="yes" xml:space="preserve">
          <source>A character string or a byte sequence.</source>
          <target state="translated">一个字符串或一个字节序列。</target>
        </trans-unit>
        <trans-unit id="84751e20074c7328e0eae4db0311707fa468384a" translate="yes" xml:space="preserve">
          <source>A class binding binds the class name &lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt; to the value of expression &lt;a href=&quot;#class-expr&quot;&gt;class-expr&lt;/a&gt;. It also binds the class type &lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt; to the type of the class, and defines two type abbreviations : &lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt; and #&lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt;. The first one is the type of objects of this class, while the second is more general as it unifies with the type of any object belonging to a subclass (see section &amp;zwj;&lt;a href=&quot;types#sss%3Atypexpr-sharp-types&quot;&gt;7.4&lt;/a&gt;).</source>
          <target state="translated">类绑定将类名称&lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt;绑定到表达式&lt;a href=&quot;#class-expr&quot;&gt;class-expr&lt;/a&gt;的值。它还将类类型&lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt;绑定到类的类型，并定义两个类型缩写：&lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt;和＃&lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt;。第一个是这个类的对象的类型，而第二个是因为它与属于一个子类的任何对象的类型结合更一般的（见第&lt;a href=&quot;types#sss%3Atypexpr-sharp-types&quot;&gt;7.4&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="16dad40850e9e1440462152f9a8ee013894f8ec6" translate="yes" xml:space="preserve">
          <source>A class binding binds the class name &lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt; to the value of expression &lt;a href=&quot;#class-expr&quot;&gt;class-expr&lt;/a&gt;. It also binds the class type &lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt; to the type of the class, and defines two type abbreviations : &lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt; and #&lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt;. The first one is the type of objects of this class, while the second is more general as it unifies with the type of any object belonging to a subclass (see section &lt;a href=&quot;types#sss%3Atypexpr-sharp-types&quot;&gt;7.4&lt;/a&gt;).</source>
          <target state="translated">类绑定将类名称&lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt;绑定到表达式&lt;a href=&quot;#class-expr&quot;&gt;class-expr&lt;/a&gt;的值。它还将类类型&lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt;绑定到类的类型，并定义两个类型缩写：&lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt;和＃&lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt;。第一个是此类的对象的类型，而第二个是更通用的，因为它与属于子类的任何对象的类型统一（请参见&lt;a href=&quot;types#sss%3Atypexpr-sharp-types&quot;&gt;7.4&lt;/a&gt;节）。</target>
        </trans-unit>
        <trans-unit id="b0c0a8ff0cb6eaf1622edba40d10fb947d790c66" translate="yes" xml:space="preserve">
          <source>A class body is a class value: it is not evaluated at once. Rather, its components are evaluated each time an object is created.</source>
          <target state="translated">一个类体是一个类值:它不是一次性被评估的。相反,每次创建对象时,都会对其组件进行评估。</target>
        </trans-unit>
        <trans-unit id="d4daa563fb535ee336ccad4094da7f2bb447118c" translate="yes" xml:space="preserve">
          <source>A class body will match a class body type if it provides definitions for all the components specified in the class body type, and these definitions meet the type requirements given in the class body type. Furthermore, all methods either virtual or public present in the class body must also be present in the class body type (on the other hand, some instance variables and concrete private methods may be omitted). A virtual method will match a concrete method, which makes it possible to forget its implementation. An immutable instance variable will match a mutable instance variable.</source>
          <target state="translated">如果一个类体为类体类型中指定的所有组件提供了定义,并且这些定义符合类体类型中给出的类型要求,那么该类体将与类体类型相匹配。此外,类体中存在的所有方法无论是虚拟的还是公共的,也必须存在于类体类型中(另一方面,一些实例变量和具体的私有方法可能会被省略)。一个虚拟的方法将匹配一个具体的方法,这使得有可能忘记它的实现。一个不可变的实例变量将匹配一个可变的实例变量。</target>
        </trans-unit>
        <trans-unit id="545a0258d519149da34f9c8abbd8417ae8fa368a" translate="yes" xml:space="preserve">
          <source>A class definition class&lt;a href=&quot;#class-binding&quot;&gt;class-binding&lt;/a&gt; { and&lt;a href=&quot;#class-binding&quot;&gt;class-binding&lt;/a&gt; } is recursive. Each &lt;a href=&quot;#class-binding&quot;&gt;class-binding&lt;/a&gt; defines a &lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt; that can be used in the whole expression except for inheritance. It can also be used for inheritance, but only in the definitions that follow its own.</source>
          <target state="translated">类定义class &lt;a href=&quot;#class-binding&quot;&gt;class-binding&lt;/a&gt; {和&lt;a href=&quot;#class-binding&quot;&gt;class-binding&lt;/a&gt; }是递归的。每个&lt;a href=&quot;#class-binding&quot;&gt;类绑定都&lt;/a&gt;定义了一个&lt;a href=&quot;names#class-name&quot;&gt;类名&lt;/a&gt;，该类名可用于整个表达式（继承除外）。它也可以用于继承，但只能用于其自身的定义中。</target>
        </trans-unit>
        <trans-unit id="d527466d758a182313be38095a1bab1a10656352" translate="yes" xml:space="preserve">
          <source>A class initializer initializer&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt; specifies an expression that will be evaluated whenever an object is created from the class, once all its instance variables have been initialized.</source>
          <target state="translated">类初始化器的初始值设定项&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;指定一个表达式，该表达式将在其所有实例变量均已初始化后，从该类创建对象时进行评估。</target>
        </trans-unit>
        <trans-unit id="8b09855a4119184f6d96a09d06f1c0647b3e7bc8" translate="yes" xml:space="preserve">
          <source>A class must be flagged virtual if one of its methods is virtual (that is, appears in the class type, but is not actually defined). Objects cannot be created from a virtual class.</source>
          <target state="translated">如果一个类的某个方法是虚拟的(即出现在类类型中,但实际上并没有定义),那么这个类必须被标记为虚拟的。不能从虚拟类中创建对象。</target>
        </trans-unit>
        <trans-unit id="243e4cdea79fea5fb741e268c317e4f358e31bb1" translate="yes" xml:space="preserve">
          <source>A class type definition class&lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt;=&lt;a href=&quot;#class-body-type&quot;&gt;class-body-type&lt;/a&gt; defines an abbreviation &lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt; for the class body type &lt;a href=&quot;#class-body-type&quot;&gt;class-body-type&lt;/a&gt;. As for class definitions, two type abbreviations &lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt; and #&lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt; are also defined. The definition can be parameterized by some type parameters. If any method in the class type body is virtual, the definition must be flagged virtual.</source>
          <target state="translated">类类型定义class &lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt; = &lt;a href=&quot;#class-body-type&quot;&gt;class-body-type&lt;/a&gt;为类主体类型&lt;a href=&quot;#class-body-type&quot;&gt;class-body-type&lt;/a&gt;定义缩写&lt;a href=&quot;names#class-name&quot;&gt;类名&lt;/a&gt;。对于类定义，还定义了两个类型缩写&lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt;和＃&lt;a href=&quot;names#class-name&quot;&gt;class-name&lt;/a&gt;。该定义可以通过某些类型参数进行参数化。如果类类型主体中的任何方法是虚拟的，则必须将定义标记为虚拟。</target>
        </trans-unit>
        <trans-unit id="ae001c9f4288301247d89fa407cbd94da288f327" translate="yes" xml:space="preserve">
          <source>A classical example is defining an iterator.</source>
          <target state="translated">一个经典的例子是定义一个迭代器。</target>
        </trans-unit>
        <trans-unit id="c3eb7d8f424d23086f633854db280ada984e386f" translate="yes" xml:space="preserve">
          <source>A closure representing a functional value. The first word is a pointer to a piece of code, the remaining words are value containing the environment.</source>
          <target state="translated">一个代表功能值的闭包。第一个字是指向一段代码的指针,其余字是包含环境的值。</target>
        </trans-unit>
        <trans-unit id="7c9a0a5ba76a6b9566957f59f43fa72b4c62a4d2" translate="yes" xml:space="preserve">
          <source>A closure that is statically allocated in an object file. It is almost always the case that the environment portion of such a closure is empty.</source>
          <target state="translated">一个在对象文件中静态分配的闭包。这种闭包的环境部分几乎总是空的。</target>
        </trans-unit>
        <trans-unit id="b258affd72e76ff696a4f0d4b4d4233b584e2e85" translate="yes" xml:space="preserve">
          <source>A collection of &lt;em&gt;symbol bindings&lt;/em&gt; forming the definition of a single compilation unit (i.e. .cmx file).</source>
          <target state="translated">&lt;em&gt;符号绑定&lt;/em&gt;的集合，形成单个编译单元（即.cmx文件）的定义。</target>
        </trans-unit>
        <trans-unit id="6b2d5ac38d8340fb381009a88b43e5bc9e816765" translate="yes" xml:space="preserve">
          <source>A command name can be truncated as long as there is no ambiguity. For instance, go 1000 is understood as goto 1000, since there are no other commands whose name starts with go. For the most frequently used commands, ambiguous abbreviations are allowed. For instance, r stands for run even though there are others commands starting with r. You can test the validity of an abbreviation using the help command.</source>
          <target state="translated">只要没有歧义,命令名就可以截断,例如,go 1000被理解为goto 1000,因为没有其他命令的名字以go开头。例如,go 1000被理解为goto 1000,因为没有其他命令的名称是以go开头的。对于最常用的命令,允许使用模棱两可的缩写。例如,r 代表 run,尽管还有其他命令以 r 开头。你可以使用 help 命令测试缩写的有效性。</target>
        </trans-unit>
        <trans-unit id="50e6c6aed157e9a4d6d14b0ad375128ee6559d59" translate="yes" xml:space="preserve">
          <source>A common problem may occur when one tries to define a coercion to a class c while defining class c. The problem is due to the type abbreviation not being completely defined yet, and so its subtypes are not clearly known. Then, a coercion (_ :&amp;gt; c) or (_ : #c :&amp;gt; c) is taken to be the identity function, as in</source>
          <target state="translated">当人们在定义类c的同时尝试对类c定义强制时，可能会出现一个常见问题。问题是由于类型缩写尚未完全定义，因此尚不清楚其子类型。然后，强制（_：&amp;gt; c）或（_：#c：&amp;gt; c）被用作身份函数，如</target>
        </trans-unit>
        <trans-unit id="b5abf9c4bd2ce34dc873dcc8d01a27c2af2d1d63" translate="yes" xml:space="preserve">
          <source>A common problem with self is that, as its type may be extended in subclasses, you cannot fix it in advance. Here is a simple example.</source>
          <target state="translated">self的一个常见问题是,由于它的类型可能会在子类中被扩展,你无法提前修复它。下面是一个简单的例子。</target>
        </trans-unit>
        <trans-unit id="0427bdc3828b61352ef3bfd72816925c892c7c3d" translate="yes" xml:space="preserve">
          <source>A compilation unit can refer to other compilation units by their names, as if they were regular modules. For instance, if U is a compilation unit that defines a type t, other compilation units can refer to that type under the name U.t; they can also refer to U as a whole structure. Except for names of other compilation units, a unit interface or unit implementation must not have any other free variables. In other terms, the type-checking and compilation of an interface or implementation proceeds in the initial environment</source>
          <target state="translated">一个编译单元可以用它们的名字来引用其他编译单元,就像它们是普通的模块一样。例如,如果U是一个定义了t类型的编译单元,那么其他编译单元可以用U.t的名字来引用该类型;它们也可以把U作为一个整体结构来引用。除了其他编译单元的名称外,一个单元接口或单元实现不得有任何其他自由变量。换句话说,接口或实现的类型检查和编译是在初始环境中进行的。</target>
        </trans-unit>
        <trans-unit id="6fecc9c15c4199d370290ddf7c3937fa744e6b9e" translate="yes" xml:space="preserve">
          <source>A compiler option (-unboxed-types or -no-unboxed-types).</source>
          <target state="translated">编译器选项(-unboxed-types或-no-unboxed-types)。</target>
        </trans-unit>
        <trans-unit id="b8aa1dd579d3389d624245964f73cebb2a0995e5" translate="yes" xml:space="preserve">
          <source>A compiler warning will be emitted if it was found impossible to obey an annotation from an @inlined or @specialised attribute.</source>
          <target state="translated">如果发现不可能遵守来自@inlined或@specialised属性的注释,编译器将发出警告。</target>
        </trans-unit>
        <trans-unit id="1bdc8c82e2021710f675c98973276ce5578f1cca" translate="yes" xml:space="preserve">
          <source>A complete trace consists of a &lt;em&gt;metadata file&lt;/em&gt; and a &lt;em&gt;trace file&lt;/em&gt;. Two simple ways to work with the traces are the &lt;em&gt;eventlog-tools&lt;/em&gt; and &lt;em&gt;babeltrace&lt;/em&gt; libraries.</source>
          <target state="translated">完整的跟踪包括一个&lt;em&gt;元数据文件&lt;/em&gt;和一个&lt;em&gt;跟踪文件&lt;/em&gt;。跟踪的两种简单方法是&lt;em&gt;eventlog-tools&lt;/em&gt;和&lt;em&gt;babeltrace&lt;/em&gt;库。</target>
        </trans-unit>
        <trans-unit id="237011c2693d0ce6103d06ddb0a3529cf6038abe" translate="yes" xml:space="preserve">
          <source>A convenient alias to designate a file name.</source>
          <target state="translated">一个方便的别名,用于指定文件名。</target>
        </trans-unit>
        <trans-unit id="a41b84792bd1edbf5044d11ca936e1864a0507bc" translate="yes" xml:space="preserve">
          <source>A correct way to manipulate pointers to out-of-heap blocks from OCaml is to store those pointers in OCaml blocks with tag Abstract_tag or Custom_tag, then use the blocks as the OCaml values.</source>
          <target state="translated">从OCaml中操作指向堆外块的指针的正确方法是将这些指针存储在带有标签Abstract_tag或Custom_tag的OCaml块中,然后将块作为OCaml值。</target>
        </trans-unit>
        <trans-unit id="6d1b218f4f47461f7ac651182427a2096531d21f" translate="yes" xml:space="preserve">
          <source>A counting semaphore is a counter that can be accessed concurrently by several threads. The typical use is to synchronize producers and consumers of a resource by counting how many units of the resource are available.</source>
          <target state="translated">计数信号体是一个可以被多个线程并发访问的计数器。典型的用途是通过计算资源的可用单位数量来同步资源的生产者和消费者。</target>
        </trans-unit>
        <trans-unit id="18fb7a876f1bbe11a131b0ea5ba708a6ba3b3906" translate="yes" xml:space="preserve">
          <source>A debugger command is a single line of input. It starts with a command name, which is followed by arguments depending on this name. Examples:</source>
          <target state="translated">调试器命令是单行输入。它的开头是一个命令名称,后面是根据这个名称的参数。例如</target>
        </trans-unit>
        <trans-unit id="a28db7e079fbbdc74be7778f738d27eb564b05d4" translate="yes" xml:space="preserve">
          <source>A definition for a module type is written moduletype&lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt;=&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;. It binds the name &lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt; to the module type denoted by the expression &lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;.</source>
          <target state="translated">模块类型的定义写为moduletype &lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt; = &lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;。它将名称&lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt;绑定到表达式&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;表示的模块类型。</target>
        </trans-unit>
        <trans-unit id="23760d8a91d13813199b4bc7a50df309ccd08c61" translate="yes" xml:space="preserve">
          <source>A definition of one or several classes is written class&lt;a href=&quot;classes#class-binding&quot;&gt;class-binding&lt;/a&gt; { and&lt;a href=&quot;classes#class-binding&quot;&gt;class-binding&lt;/a&gt; } and consists of a sequence of mutually recursive definitions of class names. Class definitions are described more precisely in section &amp;zwj;&lt;a href=&quot;classes#ss%3Aclass-def&quot;&gt;7.9.3&lt;/a&gt;.</source>
          <target state="translated">一个或几个类的定义称为类&lt;a href=&quot;classes#class-binding&quot;&gt;class-binding&lt;/a&gt; {和&lt;a href=&quot;classes#class-binding&quot;&gt;class-binding&lt;/a&gt; }，由一系列相互递归的类名定义组成。类定义部中更精确地描述&lt;a href=&quot;classes#ss%3Aclass-def&quot;&gt;7.9.3&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="85ea6339df4a837feeb58a0fdd6793a295a8169f" translate="yes" xml:space="preserve">
          <source>A definition of one or several classes is written class&lt;a href=&quot;classes#class-binding&quot;&gt;class-binding&lt;/a&gt; { and&lt;a href=&quot;classes#class-binding&quot;&gt;class-binding&lt;/a&gt; } and consists of a sequence of mutually recursive definitions of class names. Class definitions are described more precisely in section &lt;a href=&quot;classes#ss%3Aclass-def&quot;&gt;7.9.3&lt;/a&gt;.</source>
          <target state="translated">一个或几个类的定义称为类&lt;a href=&quot;classes#class-binding&quot;&gt;class-binding&lt;/a&gt; {和&lt;a href=&quot;classes#class-binding&quot;&gt;class-binding&lt;/a&gt; }，由一系列相互递归的类名定义组成。在&lt;a href=&quot;classes#ss%3Aclass-def&quot;&gt;7.9.3&lt;/a&gt;节中更精确地描述了类定义。</target>
        </trans-unit>
        <trans-unit id="964b871c739bf2734b6fc43b46161aef04bfa01f" translate="yes" xml:space="preserve">
          <source>A definition of one or several classes is written classtype&lt;a href=&quot;classes#classtype-def&quot;&gt;classtype-def&lt;/a&gt; { and&lt;a href=&quot;classes#classtype-def&quot;&gt;classtype-def&lt;/a&gt; } and consists of a sequence of mutually recursive definitions of class type names. Class type definitions are described more precisely in section &amp;zwj;&lt;a href=&quot;classes#ss%3Aclasstype&quot;&gt;7.9.5&lt;/a&gt;.</source>
          <target state="translated">一个或几个类的定义写为classtype &lt;a href=&quot;classes#classtype-def&quot;&gt;classtype-def&lt;/a&gt; {和&lt;a href=&quot;classes#classtype-def&quot;&gt;classtype-def&lt;/a&gt; }，由一系列相互递归的类类型名称定义组成。类类型定义在部分更精确地描述&lt;a href=&quot;classes#ss%3Aclasstype&quot;&gt;7.9.5&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bac706a033b489c8fcda176242fd24e88d187431" translate="yes" xml:space="preserve">
          <source>A definition of one or several classes is written classtype&lt;a href=&quot;classes#classtype-def&quot;&gt;classtype-def&lt;/a&gt; { and&lt;a href=&quot;classes#classtype-def&quot;&gt;classtype-def&lt;/a&gt; } and consists of a sequence of mutually recursive definitions of class type names. Class type definitions are described more precisely in section &lt;a href=&quot;classes#ss%3Aclasstype&quot;&gt;7.9.5&lt;/a&gt;.</source>
          <target state="translated">一个或几个类的定义写为classtype &lt;a href=&quot;classes#classtype-def&quot;&gt;classtype-def&lt;/a&gt; {和&lt;a href=&quot;classes#classtype-def&quot;&gt;classtype-def&lt;/a&gt; }，由一系列相互递归的类类型名称定义组成。类类型的定义在&lt;a href=&quot;classes#ss%3Aclasstype&quot;&gt;7.9.5&lt;/a&gt;节中有更精确的描述。</target>
        </trans-unit>
        <trans-unit id="ee34b5e4a8cbc7cb140ab5b39c7964463a79ec3c" translate="yes" xml:space="preserve">
          <source>A definition of one or several type components is written type&lt;a href=&quot;typedecl#typedef&quot;&gt;typedef&lt;/a&gt; { and&lt;a href=&quot;typedecl#typedef&quot;&gt;typedef&lt;/a&gt; } and consists of a sequence of mutually recursive definitions of type names.</source>
          <target state="translated">一个或几个类型组件的定义称为&lt;a href=&quot;typedecl#typedef&quot;&gt;typedef&lt;/a&gt; {和&lt;a href=&quot;typedecl#typedef&quot;&gt;typedef&lt;/a&gt; }，由一系列相互递归的类型名称定义组成。</target>
        </trans-unit>
        <trans-unit id="cb6012d0e4b6411d7bc0f0ec377cb9a63f31cc01" translate="yes" xml:space="preserve">
          <source>A deprecated alias for &lt;a href=&quot;scanf.scanning#VALstdin&quot;&gt;&lt;code&gt;Scanf.Scanning.stdin&lt;/code&gt;&lt;/a&gt;, the scanning buffer reading from &lt;a href=&quot;stdlib#VALstdin&quot;&gt;&lt;code&gt;stdin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;scanf.scanning#VALstdin&quot;&gt; &lt;code&gt;Scanf.Scanning.stdin&lt;/code&gt; &lt;/a&gt;的不推荐使用的别名，即从&lt;a href=&quot;stdlib#VALstdin&quot;&gt; &lt;code&gt;stdin&lt;/code&gt; 中&lt;/a&gt;读取的扫描缓冲区。</target>
        </trans-unit>
        <trans-unit id="1afc08ce98eb54656ce0e4e6ac0ae95602e0b1f7" translate="yes" xml:space="preserve">
          <source>A deprecated synonym for &lt;code&gt;ksprintf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ksprintf&lt;/code&gt; 的已弃用同义词。</target>
        </trans-unit>
        <trans-unit id="ad568c11b9d98d60f62325f33f1c85802ed715ac" translate="yes" xml:space="preserve">
          <source>A double-precision floating-point number.</source>
          <target state="translated">一个双精度的浮点数。</target>
        </trans-unit>
        <trans-unit id="5c250759ce5b01f47c7b83c7f491b104f593c288" translate="yes" xml:space="preserve">
          <source>A faster version &lt;code&gt;raise&lt;/code&gt; which does not record the backtrace.</source>
          <target state="translated">一个更快的版本 &lt;code&gt;raise&lt;/code&gt; ，它不记录回溯。</target>
        </trans-unit>
        <trans-unit id="19f1cfccdeca81f1f54133dc8cd1f88881f10739" translate="yes" xml:space="preserve">
          <source>A finalisation function may call &lt;code&gt;finalise_release&lt;/code&gt; to tell the GC that it can launch the next finalisation function without waiting for the current one to return.</source>
          <target state="translated">终结函数可以调用 &lt;code&gt;finalise_release&lt;/code&gt; 来告知GC，它可以启动下一个终结函数，而无需等待当前的终结函数返回。</target>
        </trans-unit>
        <trans-unit id="f40b6c28638f534701673dcdc08f82ed8512cc4f" translate="yes" xml:space="preserve">
          <source>A fixed object type admits as subtype any object type that includes all its methods. The types of the methods shall be subtypes of those in the supertype. Namely,</source>
          <target state="translated">一个固定的对象类型允许任何包括其所有方法的对象类型作为子类型。方法的类型应是超类型中方法的子类型。即:</target>
        </trans-unit>
        <trans-unit id="e8c59a7e08a833a702d9ed2da7b036a2e70af2a7" translate="yes" xml:space="preserve">
          <source>A formatter to output to the &lt;a href=&quot;format#VALstdbuf&quot;&gt;&lt;code&gt;Format.stdbuf&lt;/code&gt;&lt;/a&gt; string buffer.</source>
          <target state="translated">用于输出到&lt;a href=&quot;format#VALstdbuf&quot;&gt; &lt;code&gt;Format.stdbuf&lt;/code&gt; &lt;/a&gt;字符串缓冲区的格式化程序。</target>
        </trans-unit>
        <trans-unit id="c123a7c48a470f4735ab41be25742a5b6110b030" translate="yes" xml:space="preserve">
          <source>A formatter to write to standard error.</source>
          <target state="translated">写入标准误差的格式器。</target>
        </trans-unit>
        <trans-unit id="a336d2f05be14eccf82d7e9bd8f58b72cb19fc5e" translate="yes" xml:space="preserve">
          <source>A fully-evaluated list node, either empty or containing an element and a delayed tail.</source>
          <target state="translated">一个完全评估的列表节点,可以是空的,也可以包含一个元素和一个延迟的尾巴。</target>
        </trans-unit>
        <trans-unit id="37dc349c830b9072c973327f1071df354215d3a2" translate="yes" xml:space="preserve">
          <source>A function of the form fun?&lt;a href=&quot;lex#label-name&quot;&gt;lab&lt;/a&gt;:(&lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;0&lt;/sub&gt;)-&amp;gt;&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt; is equivalent to</source>
          <target state="translated">形式的功能好玩吗？&lt;a href=&quot;lex#label-name&quot;&gt;lab&lt;/a&gt; :( &lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt; = &lt;a href=&quot;#expr&quot;&gt;expr &lt;/a&gt;&lt;sub&gt;0&lt;/sub&gt;）-&amp;gt; &lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;等效于</target>
        </trans-unit>
        <trans-unit id="92c23b3348e11cd8c55136f411b215b277e1a53a" translate="yes" xml:space="preserve">
          <source>A function taking some optional arguments must also take at least one non-optional argument. The criterion for deciding whether an optional argument has been omitted is the non-labeled application of an argument appearing after this optional argument in the function type. Note that if that argument is labeled, you will only be able to eliminate optional arguments by totally applying the function, omitting all optional arguments and omitting all labels for all remaining arguments.</source>
          <target state="translated">一个函数如果取一些可选参数,还必须取至少一个非可选参数。判断一个可选参数是否被省略的标准是函数类型中出现在这个可选参数之后的一个参数的非标注应用。需要注意的是,如果该参数是有标签的,那么只有完全应用函数,省略所有可选参数,并省略所有剩余参数的标签,才能消除可选参数。</target>
        </trans-unit>
        <trans-unit id="946194125cc1a4687379f0267202c81b890688bb" translate="yes" xml:space="preserve">
          <source>A function whose body has no free variables except its parameters and any to which are bound other functions within the same (possibly mutually-recursive) declaration.</source>
          <target state="translated">一个函数,它的主体没有自由变量,除了它的参数和任何绑定在同一(可能是互递归)声明中的其他函数。</target>
        </trans-unit>
        <trans-unit id="51e003f8a3b4d969a4fd99b87178907de077d5fb" translate="yes" xml:space="preserve">
          <source>A functor taking two arguments of type S that share their t component is written</source>
          <target state="translated">一个取两个S类型参数的漏斗,共享其t分量,写为</target>
        </trans-unit>
        <trans-unit id="fa19d43de4d260eab52b0dbabdc13d48865794aa" translate="yes" xml:space="preserve">
          <source>A generative functor takes a unit () argument. In order to use it, one must necessarily apply it to this unit argument, ensuring that all type components in the result of the functor behave in a generative way, &lt;em&gt;i.e.&lt;/em&gt; they are different from types obtained by other applications of the same functor. This is equivalent to taking an argument of signature sig end, and always applying to struct end, but not to some defined module (in the latter case, applying twice to the same module would return identical types).</source>
          <target state="translated">生成函子接受一个unit（）参数。为了使用它，必须将其应用于此单位参数，以确保函子结果中的所有类型成分均以生成方式运行，&lt;em&gt;即&lt;/em&gt;它们不同于同一函子的其他应用程序所获得的类型。这等效于采用签名sig end的参数，并且始终应用于结构端，但不适用于某些已定义的模块（在后一种情况下，对同一模块应用两次将返回相同的类型）。</target>
        </trans-unit>
        <trans-unit id="af66f655df2f6baf9c6b75fc3598e9b47109f349" translate="yes" xml:space="preserve">
          <source>A generic lexical analyzer.</source>
          <target state="translated">一个通用的词汇分析器。</target>
        </trans-unit>
        <trans-unit id="e4876c0078fb6cf355fcffd588dcd8d2293d7090" translate="yes" xml:space="preserve">
          <source>A hash table that is created with &lt;code&gt;~&lt;/code&gt;&lt;code&gt;random&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt; uses a fixed hash function (&lt;a href=&quot;hashtbl#VALhash&quot;&gt;&lt;code&gt;Hashtbl.hash&lt;/code&gt;&lt;/a&gt;) to distribute keys among buckets. As a consequence, collisions between keys happen deterministically. In Web-facing applications or other security-sensitive applications, the deterministic collision patterns can be exploited by a malicious user to create a denial-of-service attack: the attacker sends input crafted to create many collisions in the table, slowing the application down.</source>
          <target state="translated">使用 &lt;code&gt;~&lt;/code&gt; &lt;code&gt;random&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; 创建的哈希表使用固定的哈希函数（&lt;a href=&quot;hashtbl#VALhash&quot;&gt; &lt;code&gt;Hashtbl.hash&lt;/code&gt; &lt;/a&gt;）在存储桶之间分配密钥。结果，键之间的冲突确定地发生。在面向Web的应用程序或其他对安全性敏感的应用程序中，恶意用户可以利用确定性冲突模式发起拒绝服务攻击：攻击者发送精心设计的输入以在表中创建许多冲突，从而降低了应用程序的运行速度。</target>
        </trans-unit>
        <trans-unit id="4b59f9b7caa327d271d0accc6a15ddd061a52610" translate="yes" xml:space="preserve">
          <source>A hash table that is created with &lt;code&gt;~&lt;/code&gt;&lt;code&gt;random&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt; uses a fixed hash function (&lt;a href=&quot;morelabels.hashtbl#VALhash&quot;&gt;&lt;code&gt;MoreLabels.Hashtbl.hash&lt;/code&gt;&lt;/a&gt;) to distribute keys among buckets. As a consequence, collisions between keys happen deterministically. In Web-facing applications or other security-sensitive applications, the deterministic collision patterns can be exploited by a malicious user to create a denial-of-service attack: the attacker sends input crafted to create many collisions in the table, slowing the application down.</source>
          <target state="translated">使用 &lt;code&gt;~&lt;/code&gt; &lt;code&gt;random&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; 创建的哈希表使用固定的哈希函数（&lt;a href=&quot;morelabels.hashtbl#VALhash&quot;&gt; &lt;code&gt;MoreLabels.Hashtbl.hash&lt;/code&gt; &lt;/a&gt;）在存储桶之间分配密钥。结果，键之间的冲突确定地发生。在面向Web的应用程序或其他对安全性敏感的应用程序中，恶意用户可以利用确定性冲突模式发起拒绝服务攻击：攻击者发送精心设计的输入以在表中创建许多冲突，从而降低了应用程序的运行速度。</target>
        </trans-unit>
        <trans-unit id="ac8e570f2d265cf9c68fbe37ad681bbe69f8b552" translate="yes" xml:space="preserve">
          <source>A hash table that is created with &lt;code&gt;~&lt;/code&gt;&lt;code&gt;random&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; uses the seeded hash function &lt;a href=&quot;hashtbl#VALseeded_hash&quot;&gt;&lt;code&gt;Hashtbl.seeded_hash&lt;/code&gt;&lt;/a&gt; with a seed that is randomly chosen at hash table creation time. In effect, the hash function used is randomly selected among &lt;code&gt;2^{30}&lt;/code&gt; different hash functions. All these hash functions have different collision patterns, rendering ineffective the denial-of-service attack described above. However, because of randomization, enumerating all elements of the hash table using &lt;a href=&quot;hashtbl#VALfold&quot;&gt;&lt;code&gt;Hashtbl.fold&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;hashtbl#VALiter&quot;&gt;&lt;code&gt;Hashtbl.iter&lt;/code&gt;&lt;/a&gt; is no longer deterministic: elements are enumerated in different orders at different runs of the program.</source>
          <target state="translated">将 &lt;code&gt;~&lt;/code&gt; &lt;code&gt;random&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; 时创建的哈希表使用带种子的哈希函数&lt;a href=&quot;hashtbl#VALseeded_hash&quot;&gt; &lt;code&gt;Hashtbl.seeded_hash&lt;/code&gt; &lt;/a&gt;，并在哈希表创建时随机选择一个种子。实际上，所使用的哈希函数是从 &lt;code&gt;2^{30}&lt;/code&gt; 不同的哈希函数中随机选择的。所有这些散列函数具有不同的冲突模式，从而使上述拒绝服务攻击无效。但是，由于随机化，使用&lt;a href=&quot;hashtbl#VALfold&quot;&gt; &lt;code&gt;Hashtbl.fold&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;hashtbl#VALiter&quot;&gt; &lt;code&gt;Hashtbl.iter&lt;/code&gt; &lt;/a&gt;枚举哈希表的所有元素不再是确定性的：在程序的不同运行中，元素以不同的顺序枚举。</target>
        </trans-unit>
        <trans-unit id="d4aae5d68ae73ce1eadfd4b00a7f9ccdb7fa3364" translate="yes" xml:space="preserve">
          <source>A hash table that is created with &lt;code&gt;~&lt;/code&gt;&lt;code&gt;random&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; uses the seeded hash function &lt;a href=&quot;morelabels.hashtbl#VALseeded_hash&quot;&gt;&lt;code&gt;MoreLabels.Hashtbl.seeded_hash&lt;/code&gt;&lt;/a&gt; with a seed that is randomly chosen at hash table creation time. In effect, the hash function used is randomly selected among &lt;code&gt;2^{30}&lt;/code&gt; different hash functions. All these hash functions have different collision patterns, rendering ineffective the denial-of-service attack described above. However, because of randomization, enumerating all elements of the hash table using &lt;a href=&quot;morelabels.hashtbl#VALfold&quot;&gt;&lt;code&gt;MoreLabels.Hashtbl.fold&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;morelabels.hashtbl#VALiter&quot;&gt;&lt;code&gt;MoreLabels.Hashtbl.iter&lt;/code&gt;&lt;/a&gt; is no longer deterministic: elements are enumerated in different orders at different runs of the program.</source>
          <target state="translated">通过将 &lt;code&gt;~&lt;/code&gt; &lt;code&gt;random&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; 创建的哈希表使用带种子的哈希函数&lt;a href=&quot;morelabels.hashtbl#VALseeded_hash&quot;&gt; &lt;code&gt;MoreLabels.Hashtbl.seeded_hash&lt;/code&gt; ,&lt;/a&gt;并带有在哈希表创建时随机选择的种子。实际上，所使用的哈希函数是从 &lt;code&gt;2^{30}&lt;/code&gt; 不同的哈希函数中随机选择的。所有这些散列函数具有不同的冲突模式，从而使上述拒绝服务攻击无效。但是，由于随机化，使用&lt;a href=&quot;morelabels.hashtbl#VALfold&quot;&gt; &lt;code&gt;MoreLabels.Hashtbl.fold&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;morelabels.hashtbl#VALiter&quot;&gt; &lt;code&gt;MoreLabels.Hashtbl.iter&lt;/code&gt; &lt;/a&gt;枚举哈希表的所有元素不再是确定性的：在程序的不同运行中以不同顺序枚举元素。</target>
        </trans-unit>
        <trans-unit id="2212b5ac114ce7a1f3a5390a9b98d478fef0c9fe" translate="yes" xml:space="preserve">
          <source>A hash table that is created with &lt;code&gt;~random:false&lt;/code&gt; uses a fixed hash function (&lt;a href=&quot;hashtbl#VALhash&quot;&gt;&lt;code&gt;Hashtbl.hash&lt;/code&gt;&lt;/a&gt;) to distribute keys among buckets. As a consequence, collisions between keys happen deterministically. In Web-facing applications or other security-sensitive applications, the deterministic collision patterns can be exploited by a malicious user to create a denial-of-service attack: the attacker sends input crafted to create many collisions in the table, slowing the application down.</source>
          <target state="translated">使用&lt;a href=&quot;hashtbl#VALhash&quot;&gt; &lt;code&gt;Hashtbl.hash&lt;/code&gt; &lt;/a&gt; &lt;code&gt;~random:false&lt;/code&gt; 创建的哈希表使用固定的哈希函数（Hashtbl.hash）在存储桶之间分配密钥。结果，键之间的冲突确定地发生。在面向Web的应用程序或其他对安全性敏感的应用程序中，恶意用户可以利用确定性冲突模式发起拒绝服务攻击：攻击者发送精心设计的输入以在表中创建许多冲突，从而降低了应用程序的运行速度。</target>
        </trans-unit>
        <trans-unit id="709b08558ad2531c7d2956a6e3b1ff027569c922" translate="yes" xml:space="preserve">
          <source>A hash table that is created with &lt;code&gt;~random:true&lt;/code&gt; uses the seeded hash function &lt;a href=&quot;hashtbl#VALseeded_hash&quot;&gt;&lt;code&gt;Hashtbl.seeded_hash&lt;/code&gt;&lt;/a&gt; with a seed that is randomly chosen at hash table creation time. In effect, the hash function used is randomly selected among &lt;code&gt;2^{30}&lt;/code&gt; different hash functions. All these hash functions have different collision patterns, rendering ineffective the denial-of-service attack described above. However, because of randomization, enumerating all elements of the hash table using &lt;a href=&quot;hashtbl#VALfold&quot;&gt;&lt;code&gt;Hashtbl.fold&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;hashtbl#VALiter&quot;&gt;&lt;code&gt;Hashtbl.iter&lt;/code&gt;&lt;/a&gt; is no longer deterministic: elements are enumerated in different orders at different runs of the program.</source>
          <target state="translated">通过&lt;a href=&quot;hashtbl#VALseeded_hash&quot;&gt; &lt;code&gt;Hashtbl.seeded_hash&lt;/code&gt; &lt;/a&gt; &lt;code&gt;~random:true&lt;/code&gt; 创建的哈希表使用带有种子的哈希函数Hashtbl.seeded_hash，其种子具有在哈希表创建时随机选择的种子。实际上，所使用的哈希函数是从 &lt;code&gt;2^{30}&lt;/code&gt; 不同的哈希函数中随机选择的。所有这些散列函数具有不同的冲突模式，从而使上述拒绝服务攻击无效。但是，由于随机化，使用&lt;a href=&quot;hashtbl#VALfold&quot;&gt; &lt;code&gt;Hashtbl.fold&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;hashtbl#VALiter&quot;&gt; &lt;code&gt;Hashtbl.iter&lt;/code&gt; &lt;/a&gt;枚举哈希表的所有元素不再是确定性的：在程序的不同运行中，元素以不同的顺序枚举。</target>
        </trans-unit>
        <trans-unit id="fd391559dde1977b55258ad1b825ee9404f55c4e" translate="yes" xml:space="preserve">
          <source>A hashing function on keys.</source>
          <target state="translated">对键的哈希函数。</target>
        </trans-unit>
        <trans-unit id="480ab8ea56d9148502ccc7b0b4a62c89503bedbd" translate="yes" xml:space="preserve">
          <source>A hashing function on keys. It must be such that if two keys are equal according to &lt;code&gt;equal&lt;/code&gt;, then they have identical hash values as computed by &lt;code&gt;hash&lt;/code&gt;. Examples: suitable (&lt;code&gt;equal&lt;/code&gt;, &lt;code&gt;hash&lt;/code&gt;) pairs for arbitrary key types include</source>
          <target state="translated">键上的哈希函数。它必须是这样的，如果两个密钥根据相等 &lt;code&gt;equal&lt;/code&gt; ，那么它们具有相同的哈希值由作为计算 &lt;code&gt;hash&lt;/code&gt; 。示例：适用于任意键类型的（ &lt;code&gt;equal&lt;/code&gt; ， &lt;code&gt;hash&lt;/code&gt; ）对包括</target>
        </trans-unit>
        <trans-unit id="a7cb9aca562d16c1463788198f7e123680723d92" translate="yes" xml:space="preserve">
          <source>A library package spacetime_lib will be provided in OPAM to provide an interface for decoding profiling information at a higher level than that provided by raw_spacetime_lib.</source>
          <target state="translated">OPAM中将提供一个库包spacetime_lib,以提供一个比raw_spacetime_lib提供的更高层次的解码剖析信息的接口。</target>
        </trans-unit>
        <trans-unit id="bd084b3365b028b0094b13657cdf60cd3b5b1531" translate="yes" xml:space="preserve">
          <source>A manifest module type specification moduletype&lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt;=&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt; requires the name &lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt; to be implemented by the module type &lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt; in a matching signature, but makes the equality between &lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt; and &lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt; apparent to all users of the signature.</source>
          <target state="translated">清单模块类型规范moduletype &lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt; = &lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;要求名称&lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt;由模块类型&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;在匹配的签名中实现，但使&lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt;和&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;之间的相等性对所有用户显而易见签名。</target>
        </trans-unit>
        <trans-unit id="fe35eb1f2f820136842f943709fae220fa58bb27" translate="yes" xml:space="preserve">
          <source>A mapping of file names to lists of arguments that will be added to the command line (and OCAMLPARAM) arguments.</source>
          <target state="translated">一个文件名到参数列表的映射,这些参数将被添加到命令行(和OCAMLPARAM)参数中。</target>
        </trans-unit>
        <trans-unit id="8cb00e703f3ff7d6126205fbd18a7dbbf31774f4" translate="yes" xml:space="preserve">
          <source>A member of the environment held within the closure of a given function.</source>
          <target state="translated">在给定函数的闭合中持有的环境成员。</target>
        </trans-unit>
        <trans-unit id="f6e5f8bee844513705613a12964ae81618f021a8" translate="yes" xml:space="preserve">
          <source>A method definition is written method&lt;a href=&quot;names#method-name&quot;&gt;method-name&lt;/a&gt;=&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;. The definition of a method overrides any previous definition of this method. The method will be public (that is, not private) if any of the definition states so.</source>
          <target state="translated">方法定义写为方法&lt;a href=&quot;names#method-name&quot;&gt;method-name&lt;/a&gt; = &lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;。方法的定义将覆盖此方法的所有先前定义。如果有任何定义说明，该方法将是公共的（即不是私有的）。</target>
        </trans-unit>
        <trans-unit id="b41ae87b4136b02abe5b25c8a9a6c60f7dceef76" translate="yes" xml:space="preserve">
          <source>A method or an initializer can invoke methods on self (that is, the current object). For that, self must be explicitly bound, here to the variable s (s could be any identifier, even though we will often choose the name self.)</source>
          <target state="translated">一个方法或初始化器可以调用self(即当前对象)上的方法。为此,self必须被显式地绑定,这里是指变量s(s可以是任何标识符,尽管我们通常会选择self这个名字)。</target>
        </trans-unit>
        <trans-unit id="f62505a05a6abadc4dffa9948337fe6a052b33a1" translate="yes" xml:space="preserve">
          <source>A method specification is written method [private] virtual&lt;a href=&quot;names#method-name&quot;&gt;method-name&lt;/a&gt;:&lt;a href=&quot;types#poly-typexpr&quot;&gt;poly-typexpr&lt;/a&gt;. It specifies whether the method is public or private, and gives its type. If the method is intended to be polymorphic, the type must be explicitly polymorphic.</source>
          <target state="translated">方法规范写为方法[私有]虚拟&lt;a href=&quot;names#method-name&quot;&gt;方法名称&lt;/a&gt;：&lt;a href=&quot;types#poly-typexpr&quot;&gt;poly-typexpr&lt;/a&gt;。它指定方法是公共方法还是私有方法，并指定其类型。如果该方法打算是多态的，则类型必须是显式的多态的。</target>
        </trans-unit>
        <trans-unit id="cf59d1d8d8426f36950323ff312dd91bdd7737ad" translate="yes" xml:space="preserve">
          <source>A module is linked twice in the same executable.</source>
          <target state="translated">一个模块在同一个可执行文件中被链接两次。</target>
        </trans-unit>
        <trans-unit id="ae42e49ffffe2245ec3dbe462f95b10625539e7b" translate="yes" xml:space="preserve">
          <source>A module type component of a signature can be specified either as a manifest module type or as an abstract module type.</source>
          <target state="translated">签字的模块类型部分可以指定为清单模块类型或抽象模块类型。</target>
        </trans-unit>
        <trans-unit id="3578a15f7bca95829499cea7e42d5fe704c695f5" translate="yes" xml:space="preserve">
          <source>A monad should provide a module implementing the following interface:</source>
          <target state="translated">一个单项式应该提供一个实现以下接口的模块。</target>
        </trans-unit>
        <trans-unit id="57678e1d898d560362e59ba9d59b5c62b312d2b3" translate="yes" xml:space="preserve">
          <source>A monomorphic method type can be a supertype of a polymorphic method type. Namely, if &lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt; is an instance of &lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt;&amp;prime;, then 'a&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; 'a&lt;sub&gt;n&lt;/sub&gt;.&lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt;&amp;prime; is a subtype of &lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt;.</source>
          <target state="translated">单态方法类型可以是多态方法类型的超类型。即，如果&lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt;是&lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt; '的实例，则'a &lt;sub&gt;1&lt;/sub&gt; &amp;hellip;'a &lt;sub&gt;n&lt;/sub&gt;。&lt;a href=&quot;types#typexpr&quot;&gt;典型值&lt;/a&gt;'是的一个亚型&lt;a href=&quot;types#typexpr&quot;&gt;典型值&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="38a58f67a2f17eae66a8138facf7987e5ab36707" translate="yes" xml:space="preserve">
          <source>A naive definition of strings as objects could be:</source>
          <target state="translated">将字符串作为对象的天真定义可以是:</target>
        </trans-unit>
        <trans-unit id="88826558abb19fdf18942ca95b44ee381f2d2dc2" translate="yes" xml:space="preserve">
          <source>A name referencing a particular place in an object file or executable image. At that particular place will be some constant value. Symbols may be examined using operating system-specific tools (for example objdump on Linux).</source>
          <target state="translated">引用对象文件或可执行图像中某一特定位置的名称。在那个特定的地方将是一些常量值。符号可以使用操作系统专用工具(例如Linux上的objdump)进行检查。</target>
        </trans-unit>
        <trans-unit id="bd9ae072945884b7400e60102b9e83fdb4a37759" translate="yes" xml:space="preserve">
          <source>A named entity to which some OCaml value is bound by a let expression, pattern-matching construction, or similar.</source>
          <target state="translated">一个命名的实体,一些OCaml值通过让表达式、模式匹配结构或类似的方式绑定到该实体。</target>
        </trans-unit>
        <trans-unit id="d62aad26cbfb63eeb51a9af5feed0aff13650749" translate="yes" xml:space="preserve">
          <source>A named object can be referred to either by its name (following the usual static scoping rules for names) or by an access path prefix.name, where prefix designates a module and name is the name of an object defined in that module. The first component of the path, prefix, is either a simple module name or an access path name&lt;sub&gt;1&lt;/sub&gt;.name&lt;sub&gt;2&lt;/sub&gt; &amp;hellip;, in case the defining module is itself nested inside other modules. For referring to type constructors, module types, or class types, the prefix can also contain simple functor applications (as in the syntactic class &lt;a href=&quot;#extended-module-path&quot;&gt;extended-module-path&lt;/a&gt; above) in case the defining module is the result of a functor application.</source>
          <target state="translated">可以通过名称（遵循名称的常规静态作用域规则）或通过访问路径prefix.name（其中前缀指定模块，而name是该模块中定义的对象的名称）来引用已命名对象。如果定义模块本身嵌套在其他模块中，则路径的第一部分前缀是简单的模块名称或访问路径名称&lt;sub&gt;1&lt;/sub&gt; .name &lt;sub&gt;2&lt;/sub&gt; &amp;hellip;。为了引用类型构造函数，模块类型或类类型，如果定义模块是函子应用程序的结果，则前缀还可以包含简单的函子应用程序（如上述语法类&lt;a href=&quot;#extended-module-path&quot;&gt;Extended-module-path中&lt;/a&gt;所述）。</target>
        </trans-unit>
        <trans-unit id="fb5b6d32abc238478d7dd68969502ceb9002d050" translate="yes" xml:space="preserve">
          <source>A natural application of destructive substitution is merging two signatures sharing a type name.</source>
          <target state="translated">破坏性替换的一个自然应用是合并两个共享类型名的签名。</target>
        </trans-unit>
        <trans-unit id="c0a44b0ef5d24b2e19cb5235aeea0b79fb4a5b50" translate="yes" xml:space="preserve">
          <source>A new form of exception pattern, exception&lt;a href=&quot;#pattern&quot;&gt;pattern&lt;/a&gt; , is allowed only as a toplevel pattern or inside a toplevel or-pattern under a match...with pattern-matching (other occurrences are rejected by the type-checker).</source>
          <target state="translated">一种新形式的异常模式，exception &lt;a href=&quot;#pattern&quot;&gt;pattern&lt;/a&gt;，只能作为顶层模式或在模式匹配下的match ...下的顶层或模式内使用（类型检查器拒绝其他情况）。</target>
        </trans-unit>
        <trans-unit id="08ceb276611806bf8bbdfa32c48ff7834d18b6c7" translate="yes" xml:space="preserve">
          <source>A partial solution to this conundrum is to open modules locally, making the components of the module available only in the concerned expression. This can also make the code both easier to read (since the open statement is closer to where it is used) and easier to refactor (since the code fragment is more self-contained). Two constructions are available for this purpose:</source>
          <target state="translated">解决这个难题的部分方法是在本地打开模块,使模块的组件只能在相关的表达式中使用。这也可以使代码更容易阅读(因为打开的语句更接近使用它的地方),也更容易重构(因为代码片段更自足)。有两种结构可用于此目的。</target>
        </trans-unit>
        <trans-unit id="3301c8b230601906361c12fb9fdfab03656702aa" translate="yes" xml:space="preserve">
          <source>A partial solution to this conundrum is to open modules locally, making the components of the module available only in the concerned expression. This can also make the code easier to read &amp;ndash; the open statement is closer to where it is used&amp;ndash; and to refactor &amp;ndash; the code fragment is more self-contained. Two constructions are available for this purpose:</source>
          <target state="translated">解决这个难题的部分方法是在本地打开模块，使模块的组件仅在相关表达式中可用。这也可以使代码更易于阅读-open语句更接近使用位置-并可以进行重构-代码片段更加独立。有两种构造可用于此目的：</target>
        </trans-unit>
        <trans-unit id="9b7d04be605f1200ec6e06adb0bb1c12edc19658" translate="yes" xml:space="preserve">
          <source>A pattern consisting in a constant matches the values that are equal to this constant.</source>
          <target state="translated">由一个常数组成的模式与等于这个常数的值相匹配。</target>
        </trans-unit>
        <trans-unit id="195652bb37224284b564bf2e6828d78c3be5b3d9" translate="yes" xml:space="preserve">
          <source>A pattern match must contain at least one value case. It is an error if all cases are exceptions, because there would be no code to handle the return of a value.</source>
          <target state="translated">一个模式匹配必须至少包含一个值的情况。如果所有的情况都是异常,那就是一个错误,因为没有代码来处理一个值的返回。</target>
        </trans-unit>
        <trans-unit id="1d9001c012cfe7587f928b04d3180df1e7f494c5" translate="yes" xml:space="preserve">
          <source>A pattern that consists in a value name matches any value, binding the name to the value. The pattern _ also matches any value, but does not bind any name.</source>
          <target state="translated">由值名组成的模式匹配任何值,将名称与值绑定。模式_也匹配任何值,但不绑定任何名称。</target>
        </trans-unit>
        <trans-unit id="1d1244ca4d93a8614a0bcc5c06c8247354b29610" translate="yes" xml:space="preserve">
          <source>A phrase can consist of a definition, like those found in implementations of compilation units or in struct &amp;hellip; end module expressions. The definition can bind value names, type names, an exception, a module name, or a module type name. The toplevel system performs the bindings, then prints the types and values (if any) for the names thus defined.</source>
          <target state="translated">短语可以包含一个定义，例如在编译单元的实现或struct&amp;hellip;最终模块表达式中找到的定义。该定义可以绑定值名称，类型名称，异常，模块名称或模块类型名称。顶级系统执行绑定，然后打印由此定义的名称的类型和值（如果有）。</target>
        </trans-unit>
        <trans-unit id="c39c4c0c645bb19de9e31d60234edb1a5b885c60" translate="yes" xml:space="preserve">
          <source>A phrase may also consist in a value expression (section &amp;zwj;&lt;a href=&quot;expr#s%3Avalue-expr&quot;&gt;7.7&lt;/a&gt;). It is simply evaluated without performing any bindings, and its value is printed.</source>
          <target state="translated">短语也可以由一个值表达式（部分&lt;a href=&quot;expr#s%3Avalue-expr&quot;&gt;7.7&lt;/a&gt;）。无需进行任何绑定即可简单地对其进行评估，并打印其值。</target>
        </trans-unit>
        <trans-unit id="b1d09bc1378fb62780f6b05ca91b32e9f310898f" translate="yes" xml:space="preserve">
          <source>A phrase may also consist in a value expression (section &lt;a href=&quot;expr#s%3Avalue-expr&quot;&gt;7.7&lt;/a&gt;). It is simply evaluated without performing any bindings, and its value is printed.</source>
          <target state="translated">短语也可以包含在值表达式中（第&lt;a href=&quot;expr#s%3Avalue-expr&quot;&gt;7.7&lt;/a&gt;节）。无需进行任何绑定即可简单地对其进行评估，并打印其值。</target>
        </trans-unit>
        <trans-unit id="92ef14e31ef4f1c98a75465bdf9c6a1681cdf41a" translate="yes" xml:space="preserve">
          <source>A place in a program&amp;rsquo;s code where a function is called and it is known at compile time which function it will always be.</source>
          <target state="translated">程序代码中调用函数的位置，在编译时就知道它将始终是哪个函数。</target>
        </trans-unit>
        <trans-unit id="a426b7491f98cfb8ddd5b54cf85e366ae55b8088" translate="yes" xml:space="preserve">
          <source>A place in a program&amp;rsquo;s code where a function is called but is not known to be a &lt;em&gt;direct call site&lt;/em&gt;.</source>
          <target state="translated">程序代码中调用函数但不知道是&lt;em&gt;直接调用站点的位置&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="dcd871ffce498091b8147bfe0e1ff238463ca823" translate="yes" xml:space="preserve">
          <source>A point and a colored point have incompatible types, since a point has no method color. However, the function get_x below is a generic function applying method get_x to any object p that has this method (and possibly some others, which are represented by an ellipsis in the type). Thus, it applies to both points and colored points.</source>
          <target state="translated">一个点和一个有色点的类型是不兼容的,因为一个点没有方法color。然而,下面的函数get_x是一个通用函数,它将get_x方法应用于任何有这个方法的对象p (可能还有其他方法,在类型中用省略号表示)。因此,它既适用于点,也适用于有色点。</target>
        </trans-unit>
        <trans-unit id="4e0ef245d3b2a791efdb873d15c9c7ec04811355" translate="yes" xml:space="preserve">
          <source>A pointer p to an already-allocated C or Fortran array can be wrapped and returned to OCaml as a Bigarray using the caml_ba_alloc or caml_ba_alloc_dims functions.</source>
          <target state="translated">一个指向已分配的C或Fortran数组的指针p,可以使用caml_ba_alloc或caml_ba_alloc_dims函数将其包装并作为Bigarray返回给OCaml。</target>
        </trans-unit>
        <trans-unit id="d87344666d4403ec2991fd21a3d5e55a75e0b377" translate="yes" xml:space="preserve">
          <source>A polymorphic variant type &lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt; is a subtype of another polymorphic variant type &lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt;&amp;prime; if the upper bound of &lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt; (&lt;em&gt;i.e.&lt;/em&gt; the maximum set of constructors that may appear in an instance of &lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt;) is included in the lower bound of &lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt;&amp;prime;, and the types of arguments for the constructors of &lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt; are subtypes of those in &lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt;&amp;prime;. Namely,</source>
          <target state="translated">多态变体类型&lt;a href=&quot;types#typexpr&quot;&gt;典型值&lt;/a&gt;是另一种多态变异体类型的子类型&lt;a href=&quot;types#typexpr&quot;&gt;典型值&lt;/a&gt;&amp;ldquo;如果上部结合的&lt;a href=&quot;types#typexpr&quot;&gt;典型值&lt;/a&gt;（&lt;em&gt;即&lt;/em&gt;可能出现在的一个实例的最大组构造&lt;a href=&quot;types#typexpr&quot;&gt;典型值&lt;/a&gt;）被包括在下界的&lt;a href=&quot;types#typexpr&quot;&gt;典型值&lt;/a&gt;&amp;rdquo;，和类型的&lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt;的构造函数的参数类型是&lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt; '中的子类型。即</target>
        </trans-unit>
        <trans-unit id="a99c2c1966582a41565511a9a3c3dc608ca5be88" translate="yes" xml:space="preserve">
          <source>A polymorphic variant type [t], for example</source>
          <target state="translated">多态变体类型[t],例如</target>
        </trans-unit>
        <trans-unit id="aba801c13d0c48078f9b0f2d1d78cad5fbb327cf" translate="yes" xml:space="preserve">
          <source>A preexisting example of an extensible variant type is the built-in exn type used for exceptions. Indeed, exception constructors can be declared using the type extension syntax:</source>
          <target state="translated">可扩展变体类型的一个预先存在的例子是用于异常的内置exn类型。事实上,异常构造函数可以使用类型扩展语法来声明。</target>
        </trans-unit>
        <trans-unit id="6661be09d98d92f943e9ed8b6e7780bdc0de9052" translate="yes" xml:space="preserve">
          <source>A primary motivation for modules is to package together related definitions (such as the definitions of a data type and associated operations over that type) and enforce a consistent naming scheme for these definitions. This avoids running out of names or accidentally confusing names. Such a package is called a &lt;em&gt;structure&lt;/em&gt; and is introduced by the struct&amp;hellip;end construct, which contains an arbitrary sequence of definitions. The structure is usually given a name with the module binding. Here is for instance a structure packaging together a type of priority queues and their operations:</source>
          <target state="translated">模块的主要动机是将相关的定义（例如数据类型的定义和对该类型的关联操作）打包在一起，并对这些定义实施一致的命名方案。这样可以避免用尽名称或造成名称混乱。这种包称为&lt;em&gt;结构&lt;/em&gt;，由struct&amp;hellip;end构造引入，该构造包含任意定义序列。通常使用模块绑定为结构命名。例如，这是一种结构，将一种类型的优先级队列及其操作打包在一起：</target>
        </trans-unit>
        <trans-unit id="944d4f59ac6e1918b5630a508a103b7ea575da63" translate="yes" xml:space="preserve">
          <source>A private method that has been hidden in the parent class is no longer visible, and is thus not overridden. Since initializers are treated as private methods, all initializers along the class hierarchy are evaluated, in the order they are introduced.</source>
          <target state="translated">在父类中被隐藏的私有方法不再可见,因此不会被重写。由于初始化器被视为私有方法,所以沿着类层次结构的所有初始化器都会按照引入的顺序被评估。</target>
        </trans-unit>
        <trans-unit id="d1c4bce588f685c196834a7511ef2b5e781463d5" translate="yes" xml:space="preserve">
          <source>A private method, methodprivate&lt;a href=&quot;names#method-name&quot;&gt;method-name&lt;/a&gt;=&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;, is a method that can only be invoked on self (from other methods of the same object, defined in this class or one of its subclasses). This invocation is performed using the expression &lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt;#&lt;a href=&quot;names#method-name&quot;&gt;method-name&lt;/a&gt;, where &lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt; is directly bound to self at the beginning of the class definition. Private methods do not appear in object types. A method may have both public and private definitions, but as soon as there is a public one, all subsequent definitions will be made public.</source>
          <target state="translated">私有方法methodprivate &lt;a href=&quot;names#method-name&quot;&gt;method-name&lt;/a&gt; = &lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;是只能在self上调用的方法（从同一类的其他方法（在此类或其子类之一中定义））。该调用使用表达式&lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt;＃&lt;a href=&quot;names#method-name&quot;&gt;method-name进行&lt;/a&gt;，其中&lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt;在类定义的开头直接绑定到self。私有方法不会出现在对象类型中。一种方法可能同时具有公共和私有定义，但是一旦有了公共定义，所有后续定义都将被公开。</target>
        </trans-unit>
        <trans-unit id="d7295ebc009c75ae22e136efa9c0e606d5f0abf1" translate="yes" xml:space="preserve">
          <source>A reduce/reduce conflict is resolved in favor of the first rule (in the order given by the source file), and ocamlyacc outputs a warning.</source>
          <target state="translated">reduce/reduce冲突会以有利于第一条规则的方式解决(按照源文件给出的顺序),并且ogglyacc会输出一个警告。</target>
        </trans-unit>
        <trans-unit id="9e1cdfbc3c2683ad6c2defe967093959a13d6b6b" translate="yes" xml:space="preserve">
          <source>A registered global variable v can be un-registered by calling caml_remove_global_root(&amp;amp;v).</source>
          <target state="translated">可以通过调用caml_remove_global_root（＆v）取消注册已注册的全局变量v。</target>
        </trans-unit>
        <trans-unit id="11333e8b32691f6475fb4df5d7ad9468f6f9c28f" translate="yes" xml:space="preserve">
          <source>A second form of extension node can be used in structures and signatures, both in the module and object languages:</source>
          <target state="translated">第二种形式的扩展节点可以用在结构和签名中,包括模块语言和对象语言。</target>
        </trans-unit>
        <trans-unit id="246719ed898de91c5a863a69ef25e327fc330a13" translate="yes" xml:space="preserve">
          <source>A seeded hashing function on keys.</source>
          <target state="translated">钥匙上的种子哈希函数。</target>
        </trans-unit>
        <trans-unit id="3b9c7ec395e9937bc292b9822848d55e37784f26" translate="yes" xml:space="preserve">
          <source>A seeded hashing function on keys. The first argument is the seed. It must be the case that if &lt;code&gt;equal&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; is true, then &lt;code&gt;hash&amp;nbsp;seed&amp;nbsp;x&amp;nbsp;=&amp;nbsp;hash&amp;nbsp;seed&amp;nbsp;y&lt;/code&gt; for any value of &lt;code&gt;seed&lt;/code&gt;. A suitable choice for &lt;code&gt;hash&lt;/code&gt; is the function &lt;a href=&quot;hashtbl#VALseeded_hash&quot;&gt;&lt;code&gt;Hashtbl.seeded_hash&lt;/code&gt;&lt;/a&gt; below.</source>
          <target state="translated">键上的种子哈希函数。第一个参数是种子。它必须是这样的情况，如果 &lt;code&gt;equal&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 为真，则 &lt;code&gt;hash&amp;nbsp;seed&amp;nbsp;x&amp;nbsp;=&amp;nbsp;hash&amp;nbsp;seed&amp;nbsp;y&lt;/code&gt; 为任何值 &lt;code&gt;seed&lt;/code&gt; 。 &lt;code&gt;hash&lt;/code&gt; 的合适选择是下面的函数&lt;a href=&quot;hashtbl#VALseeded_hash&quot;&gt; &lt;code&gt;Hashtbl.seeded_hash&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="92626da09fca83646c1e8cb2f322a8672d85a1eb" translate="yes" xml:space="preserve">
          <source>A seeded hashing function on keys. The first argument is the seed. It must be the case that if &lt;code&gt;equal&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; is true, then &lt;code&gt;hash&amp;nbsp;seed&amp;nbsp;x&amp;nbsp;=&amp;nbsp;hash&amp;nbsp;seed&amp;nbsp;y&lt;/code&gt; for any value of &lt;code&gt;seed&lt;/code&gt;. A suitable choice for &lt;code&gt;hash&lt;/code&gt; is the function &lt;a href=&quot;morelabels.hashtbl#VALseeded_hash&quot;&gt;&lt;code&gt;MoreLabels.Hashtbl.seeded_hash&lt;/code&gt;&lt;/a&gt; below.</source>
          <target state="translated">键上的种子哈希函数。第一个参数是种子。它必须是这样的情况，如果 &lt;code&gt;equal&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; 为真，则 &lt;code&gt;hash&amp;nbsp;seed&amp;nbsp;x&amp;nbsp;=&amp;nbsp;hash&amp;nbsp;seed&amp;nbsp;y&lt;/code&gt; 为任何值 &lt;code&gt;seed&lt;/code&gt; 。 &lt;code&gt;hash&lt;/code&gt; 的合适选择是下面的功能&lt;a href=&quot;morelabels.hashtbl#VALseeded_hash&quot;&gt; &lt;code&gt;MoreLabels.Hashtbl.seeded_hash&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="700985cd44563769cbf39d87729637efc630823d" translate="yes" xml:space="preserve">
          <source>A semaphore is a thread synchronization device that can be used to control access to a shared resource.</source>
          <target state="translated">信号体是一种线程同步设备,可以用来控制对共享资源的访问。</target>
        </trans-unit>
        <trans-unit id="0d115bbd0762eeba43bed8cfbab8e2bedb3fa747" translate="yes" xml:space="preserve">
          <source>A set of arguments that will be inserted before or after the arguments from the command line. Arguments are specified in a comma-separated list of name=value pairs. A _ is used to specify the position of the command line arguments, i.e. a=x,_,b=y means that a=x should be executed before parsing the arguments, and b=y after. Finally, an alternative separator can be specified as the first character of the string, within the set :|; ,.</source>
          <target state="translated">一组参数,将被插入到命令行的参数之前或之后。参数是以逗号分隔的名称=值对列表来指定的。_用于指定命令行参数的位置,即a=x,_,b=y表示a=x应该在解析参数之前执行,b=y在之后执行。最后,可以指定一个替代的分隔符作为字符串的第一个字符,在集合:|;,。</target>
        </trans-unit>
        <trans-unit id="6b1ecb0a39df92a3f0a0df36d4f4d4f5e016e37f" translate="yes" xml:space="preserve">
          <source>A shell is used to pass the arguments to the debugged program. You can therefore use wildcards, shell variables, and file redirections inside the arguments. To debug programs that read from standard input, it is recommended to redirect their input from a file (using set arguments &amp;lt; input-file), otherwise input to the program and input to the debugger are not properly separated, and inputs are not properly replayed when running the program backwards.</source>
          <target state="translated">Shell用于将参数传递给调试的程序。因此，您可以在参数内部使用通配符，shell变量和文件重定向。要调试从标准输入读取的程序，建议将其输入从文件重定向（使用set参数&amp;lt;input-file），否则，程序的输入和调试器的输入未正确分开，并且输入未正确重播向后运行程序时。</target>
        </trans-unit>
        <trans-unit id="8aa5379a46dc9a06214eeff9c4fea4be00c1d662" translate="yes" xml:space="preserve">
          <source>A shift/reduce conflict between a rule and a token with the same precedence will be resolved using the associativity: if the token is left-associative, then the parser will reduce; if the token is right-associative, then the parser will shift. If the token is non-associative, then the parser will declare a syntax error.</source>
          <target state="translated">规则和具有相同优先级的标记之间的移位/还原冲突将使用关联性来解决:如果标记是左关联性的,那么解析器将还原;如果标记是右关联性的,那么解析器将移位。如果token是非关联性的,那么解析器将声明一个语法错误。</target>
        </trans-unit>
        <trans-unit id="8711c8711e5edffbcbd5746dd94237e1a7e2bba5" translate="yes" xml:space="preserve">
          <source>A shift/reduce conflict is resolved by comparing the precedence of the rule to be reduced with the precedence of the token to be shifted. If the precedence of the rule is higher, then the rule will be reduced; if the precedence of the token is higher, then the token will be shifted.</source>
          <target state="translated">通过比较要减少的规则的优先级和要转移的标记的优先级来解决转移/减少冲突。如果规则的优先级较高,则规则将被缩减;如果标记的优先级较高,则标记将被移位。</target>
        </trans-unit>
        <trans-unit id="b246b01129bd1b1c879d94e61dbf463cf0272561" translate="yes" xml:space="preserve">
          <source>A shortcut syntax exists for lists and enumerated lists:</source>
          <target state="translated">列表和枚举列表存在一种快捷语法。</target>
        </trans-unit>
        <trans-unit id="bc28929b81bd3512a43f04abc90b828ea0a2a89b" translate="yes" xml:space="preserve">
          <source>A simple definition consists in a lowercase identifier, possibly preceded by one or several type parameters, and followed by an optional type equation, then an optional type representation, and then a constraint clause. The identifier is the name of the type constructor being defined.</source>
          <target state="translated">一个简单的定义由一个小写的标识符组成,前面可能是一个或几个类型参数,后面是一个可选的类型等式,然后是一个可选的类型表示,然后是一个约束子句。标识符是被定义的类型构造函数的名称。</target>
        </trans-unit>
        <trans-unit id="40cf8919ea34c404a49fa4a02115691af647ed4f" translate="yes" xml:space="preserve">
          <source>A simple example</source>
          <target state="translated">一个简单的例子</target>
        </trans-unit>
        <trans-unit id="a505edbb3136eb3e358e526579060f4063cd8c61" translate="yes" xml:space="preserve">
          <source>A simple implementation, which is quite reasonable for small hash tables is to use an association list:</source>
          <target state="translated">一个简单的实现,对于小的哈希表来说是相当合理的,就是使用关联列表。</target>
        </trans-unit>
        <trans-unit id="aafd3acbdd0a76e6fcf1b1d3a590f13d1e7122bf" translate="yes" xml:space="preserve">
          <source>A simplified version of object-oriented hash tables should have the following class type.</source>
          <target state="translated">面向对象的哈希表的简化版应该有以下类型。</target>
        </trans-unit>
        <trans-unit id="5c19c566d555406ae636843bb063c13ea431983f" translate="yes" xml:space="preserve">
          <source>A special IPv4 address representing the host machine (&lt;code&gt;127.0.0.1&lt;/code&gt;).</source>
          <target state="translated">代表主机的特殊IPv4地址（ &lt;code&gt;127.0.0.1&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="71ccbfad93d9a0b24a9a47b2b0e829ecc1810ad9" translate="yes" xml:space="preserve">
          <source>A special IPv4 address, for use only with &lt;code&gt;bind&lt;/code&gt;, representing all the Internet addresses that the host machine possesses.</source>
          <target state="translated">一个特殊的IPv4地址，仅与 &lt;code&gt;bind&lt;/code&gt; 一起使用，代表主机拥有的所有Internet地址。</target>
        </trans-unit>
        <trans-unit id="125b9cffdf88673e4f21b23c403652e2686c1dfe" translate="yes" xml:space="preserve">
          <source>A special IPv6 address representing the host machine (&lt;code&gt;::1&lt;/code&gt;).</source>
          <target state="translated">代表主机的特殊IPv6地址（ &lt;code&gt;::1&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a6d7a4493b633883b98fa7fcb0e49f158ed0730c" translate="yes" xml:space="preserve">
          <source>A special IPv6 address, for use only with &lt;code&gt;bind&lt;/code&gt;, representing all the Internet addresses that the host machine possesses.</source>
          <target state="translated">一个特殊的IPv6地址，仅与 &lt;code&gt;bind&lt;/code&gt; 一起使用，代表主机拥有的所有Internet地址。</target>
        </trans-unit>
        <trans-unit id="c8e7184e33461f5fdad5d2663d73a6ac6eb6513d" translate="yes" xml:space="preserve">
          <source>A special case of Sys_error raised when no I/O is possible on a non-blocking I/O channel.</source>
          <target state="translated">当一个非阻塞的I/O通道上不可能有I/O时,Sys_error的一种特殊情况。</target>
        </trans-unit>
        <trans-unit id="c3f03cda916c8e6bc985163d60b6d4d15279843b" translate="yes" xml:space="preserve">
          <source>A special comment after an element is associated to this element if there is no blank line or comment between the special comment and the element.</source>
          <target state="translated">元素后的特殊注释与该元素相关联,如果特殊注释与该元素之间没有空行或注释。</target>
        </trans-unit>
        <trans-unit id="e5b3528110b24bc93c7cf73c2928420e63ea885a" translate="yes" xml:space="preserve">
          <source>A special comment before an element is associated to this element if &amp;zwj;:</source>
          <target state="translated">如果&amp;zwj;，在元素之前有一个特殊注释与此元素相关联：</target>
        </trans-unit>
        <trans-unit id="ba8ab10d95a7b60683119d9b30686d290c7a2433" translate="yes" xml:space="preserve">
          <source>A special comment before an element is associated to this element if :</source>
          <target state="translated">一个元素前的特殊注释与该元素相关联,如果 。</target>
        </trans-unit>
        <trans-unit id="b04a0b1a19b3a003c43a64a03f0526f18ed4fc56" translate="yes" xml:space="preserve">
          <source>A special comment is associated to an element if it is placed before or after the element.</source>
          <target state="translated">如果一个特殊的注释被放置在一个元素之前或之后,则该注释与该元素相关联。</target>
        </trans-unit>
        <trans-unit id="a722fbf306334c54ab4f7fd57fcf925ee205475a" translate="yes" xml:space="preserve">
          <source>A special comment is associated to an element if it is placed before the element and there is no blank line between the comment and the element. Meanwhile, there can be a simple comment between the special comment and the element. There are two exceptions, for constructors and record fields in type definitions, whose associated comment must be placed after the constructor or field definition, without blank line between them. The special comment for a constructor with another constructor following must be placed before the &amp;rsquo;|&amp;rsquo; character separating the two constructors.</source>
          <target state="translated">如果特殊注释位于元素之前，并且该注释与元素之间没有空白行，则该注释与该元素相关联。同时，特殊评论和元素之间可以有一个简单的评论。对于类型定义中的构造函数和记录字段，有两个例外，它们的关联注释必须放置在构造函数或字段定义之后，并且它们之间不能有空白行。对于后面有另一个构造函数的构造函数，特殊注释必须放在&amp;ldquo; |&amp;rdquo;之前。分隔两个构造函数的字符。</target>
        </trans-unit>
        <trans-unit id="ce76a34fdd61e3e769b215403ddacbc5ff37cee4" translate="yes" xml:space="preserve">
          <source>A special floating-point value denoting the result of an undefined operation such as &lt;code&gt;0.0&amp;nbsp;/.&amp;nbsp;0.0&lt;/code&gt;.</source>
          <target state="translated">一个特殊的浮点值，表示未定义操作的结果，例如 &lt;code&gt;0.0&amp;nbsp;/.&amp;nbsp;0.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14f4636c37ae831fe40209c6f8c14a3435db7d6d" translate="yes" xml:space="preserve">
          <source>A special floating-point value denoting the result of an undefined operation such as &lt;code&gt;0.0&amp;nbsp;/.&amp;nbsp;0.0&lt;/code&gt;. Stands for 'not a number'. Any floating-point operation with &lt;code&gt;nan&lt;/code&gt; as argument returns &lt;code&gt;nan&lt;/code&gt; as result. As for floating-point comparisons, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;gt;=&lt;/code&gt; return &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if one or both of their arguments is &lt;code&gt;nan&lt;/code&gt;.</source>
          <target state="translated">一个特殊的浮点值，表示未定义操作的结果，例如 &lt;code&gt;0.0&amp;nbsp;/.&amp;nbsp;0.0&lt;/code&gt; 。代表&amp;ldquo;非数字&amp;rdquo;。任何以 &lt;code&gt;nan&lt;/code&gt; 为参数的浮点运算都将返回 &lt;code&gt;nan&lt;/code&gt; 作为结果。对于浮点比较，如果其中一个或两个参数均为 &lt;code&gt;nan&lt;/code&gt; ，则 &lt;code&gt;=&lt;/code&gt; ， &lt;code&gt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;=&lt;/code&gt; ， &lt;code&gt;&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;gt;=&lt;/code&gt; 返回 &lt;code&gt;false&lt;/code&gt; ,而 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ece35aa81bb8f9ae2af6af4ae4baf4a06410d112" translate="yes" xml:space="preserve">
          <source>A specification of a module component in a signature is written module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;, where &lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt; is the name of the module component and &lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt; its expected type. Modules can be nested arbitrarily; in particular, functors can appear as components of structures and functor types as components of signatures.</source>
          <target state="translated">签名中模块组件的规范写为module &lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;：&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;，其中&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;是模块组件的名称，而&lt;a href=&quot;#module-type&quot;&gt;module-type是&lt;/a&gt;其期望的类型。模块可以任意嵌套；特别是，函子可以作为结构的组件出现，函子类型可以作为签名的组件出现。</target>
        </trans-unit>
        <trans-unit id="9cfc418234bf6152013edf58f5b0161c517ad339" translate="yes" xml:space="preserve">
          <source>A specification of a value component in a signature is written val&lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;, where &lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt; is the name of the value and &lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt; its expected type.</source>
          <target state="translated">签名中值组件的规范写为val &lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt;：&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;，其中&lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt;是值的名称，&lt;a href=&quot;types#typexpr&quot;&gt;typexpr是&lt;/a&gt;其预期的类型。</target>
        </trans-unit>
        <trans-unit id="630d1cdd91ea89851c602ea9da675f8bc2358415" translate="yes" xml:space="preserve">
          <source>A specification of an instance variable is written val [mutable] [virtual] &lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;, where &lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt; is the name of the instance variable and &lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt; its expected type. The flag mutable indicates whether this instance variable can be physically modified. The flag virtual indicates that this instance variable is not initialized. It can be initialized later through inheritance.</source>
          <target state="translated">实例变量的规范写为val [mutable] [virtual] &lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt;：&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;，其中&lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt;是实例变量的名称，而&lt;a href=&quot;types#typexpr&quot;&gt;typexpr是&lt;/a&gt;其预期的类型。可变标记表明该实例变量是否可以物理修改。标志virtual表示此实例变量未初始化。以后可以通过继承对其进行初始化。</target>
        </trans-unit>
        <trans-unit id="dfb4cfa02895d4175b2b338f2b16b164cdda218f" translate="yes" xml:space="preserve">
          <source>A specification of one or several classe types in a signature is written classtype&lt;a href=&quot;classes#classtype-def&quot;&gt;classtype-def&lt;/a&gt; { and&lt;a href=&quot;classes#classtype-def&quot;&gt;classtype-def&lt;/a&gt; } and consists of a sequence of mutually recursive definitions of class type names. Class type specifications are described more precisely in section &amp;zwj;&lt;a href=&quot;classes#ss%3Aclasstype&quot;&gt;7.9.5&lt;/a&gt;.</source>
          <target state="translated">签名中一个或多个类类型的规范写成classtype &lt;a href=&quot;classes#classtype-def&quot;&gt;classtype-def&lt;/a&gt; {和&lt;a href=&quot;classes#classtype-def&quot;&gt;classtype-def&lt;/a&gt; }，由一系列相互递归的类类型名称定义组成。类类型规范在部分更精确地描述&lt;a href=&quot;classes#ss%3Aclasstype&quot;&gt;7.9.5&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="905243ce06f7b397390d44b9b4e9ca48f0f48092" translate="yes" xml:space="preserve">
          <source>A specification of one or several classe types in a signature is written classtype&lt;a href=&quot;classes#classtype-def&quot;&gt;classtype-def&lt;/a&gt; { and&lt;a href=&quot;classes#classtype-def&quot;&gt;classtype-def&lt;/a&gt; } and consists of a sequence of mutually recursive definitions of class type names. Class type specifications are described more precisely in section &lt;a href=&quot;classes#ss%3Aclasstype&quot;&gt;7.9.5&lt;/a&gt;.</source>
          <target state="translated">签名中一个或多个类类型的规范写成classtype &lt;a href=&quot;classes#classtype-def&quot;&gt;classtype-def&lt;/a&gt; {和&lt;a href=&quot;classes#classtype-def&quot;&gt;classtype-def&lt;/a&gt; }，由一系列相互递归的类类型名称定义组成。在&lt;a href=&quot;classes#ss%3Aclasstype&quot;&gt;7.9.5&lt;/a&gt;节中更精确地描述了类类型规范。</target>
        </trans-unit>
        <trans-unit id="2207ab4e524dc20725036f53b2bd478643e84c96" translate="yes" xml:space="preserve">
          <source>A specification of one or several classes in a signature is written class&lt;a href=&quot;classes#class-spec&quot;&gt;class-spec&lt;/a&gt; { and&lt;a href=&quot;classes#class-spec&quot;&gt;class-spec&lt;/a&gt; } and consists of a sequence of mutually recursive definitions of class names.</source>
          <target state="translated">签名中一个或几个类&lt;a href=&quot;classes#class-spec&quot;&gt;的规范&lt;/a&gt;称为类class-spec {和&lt;a href=&quot;classes#class-spec&quot;&gt;class-spec&lt;/a&gt; }，由一系列相互递归的类名定义组成。</target>
        </trans-unit>
        <trans-unit id="eba28ade56c71b55ebe7408f77279fca889004fb" translate="yes" xml:space="preserve">
          <source>A specification of one or several type components in a signature is written type&lt;a href=&quot;typedecl#typedef&quot;&gt;typedef&lt;/a&gt; { and&lt;a href=&quot;typedecl#typedef&quot;&gt;typedef&lt;/a&gt; } and consists of a sequence of mutually recursive definitions of type names.</source>
          <target state="translated">签名中一个或几个类型组件的规范称为&lt;a href=&quot;typedecl#typedef&quot;&gt;typedef&lt;/a&gt; {和&lt;a href=&quot;typedecl#typedef&quot;&gt;typedef&lt;/a&gt; }，由一系列相互递归的类型名称定义组成。</target>
        </trans-unit>
        <trans-unit id="c9af68ad05686a2342eb40410b6f3d9bb82fa100" translate="yes" xml:space="preserve">
          <source>A string &lt;code&gt;s&lt;/code&gt; of length &lt;code&gt;n&lt;/code&gt; is an indexable and immutable sequence of &lt;code&gt;n&lt;/code&gt; bytes. For historical reasons these bytes are referred to as characters.</source>
          <target state="translated">长度为 &lt;code&gt;n&lt;/code&gt; 的字符串 &lt;code&gt;s&lt;/code&gt; 是 &lt;code&gt;n&lt;/code&gt; 个字节的可索引且不可变的序列。由于历史原因，这些字节称为字符。</target>
        </trans-unit>
        <trans-unit id="fe3f45a4e38a7e75b543687a85066addc0f08c51" translate="yes" xml:space="preserve">
          <source>A string constant, with the same syntax as OCaml string constants. Match the corresponding sequence of characters.</source>
          <target state="translated">一个字符串常量,与OCaml字符串常量的语法相同。匹配相应的字符序列。</target>
        </trans-unit>
        <trans-unit id="8770803b37392185525cb241438c707a72905ad9" translate="yes" xml:space="preserve">
          <source>A string is an immutable data structure that contains a fixed-length sequence of (single-byte) characters. Each character can be accessed in constant time through its index.</source>
          <target state="translated">字符串是一种不可改变的数据结构,它包含一个固定长度的(单字节)字符序列。每一个字符都可以通过它的索引在固定的时间内被访问。</target>
        </trans-unit>
        <trans-unit id="42c1f07bed594f11c573a52be423b065912a18d4" translate="yes" xml:space="preserve">
          <source>A structured block (an array of OCaml objects). Each field is a value.</source>
          <target state="translated">一个结构化的块(OCaml对象的数组)。每个字段都是一个值。</target>
        </trans-unit>
        <trans-unit id="03fccab1045cfd566c6ba8cb7d5b5cda40b1846f" translate="yes" xml:space="preserve">
          <source>A tabulation box features specific &lt;em&gt;tabulation breaks&lt;/em&gt; to move to next tabulation marker or split the line. Function &lt;a href=&quot;format#VALprint_tbreak&quot;&gt;&lt;code&gt;Format.print_tbreak&lt;/code&gt;&lt;/a&gt; prints a tabulation break.</source>
          <target state="translated">制表框具有特定的&lt;em&gt;制表符&lt;/em&gt;，可移至下一个制表标记或拆分行。函数&lt;a href=&quot;format#VALprint_tbreak&quot;&gt; &lt;code&gt;Format.print_tbreak&lt;/code&gt; &lt;/a&gt;打印制表符。</target>
        </trans-unit>
        <trans-unit id="4d02baec51331025ab49e39ad16ee848ee73784a" translate="yes" xml:space="preserve">
          <source>A third form of attributes appears as stand-alone structure or signature items in the module or class sub-languages. They are not attached to any specific node in the syntax tree:</source>
          <target state="translated">第三种形式的属性在模块或类子语言中作为独立的结构或签名项出现。它们不与语法树中的任何特定节点相联系。</target>
        </trans-unit>
        <trans-unit id="f6d938c1b31a34e1f7b8d2215694743ba3cd1c40" translate="yes" xml:space="preserve">
          <source>A total ordering function over the keys.</source>
          <target state="translated">对键的总排序功能。</target>
        </trans-unit>
        <trans-unit id="5ab826f8d8a8d0dbc489d01b7d65999a0a6aa806" translate="yes" xml:space="preserve">
          <source>A total ordering function over the keys. This is a two-argument function &lt;code&gt;f&lt;/code&gt; such that &lt;code&gt;f&amp;nbsp;e1&amp;nbsp;e2&lt;/code&gt; is zero if the keys &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt; are equal, &lt;code&gt;f&amp;nbsp;e1&amp;nbsp;e2&lt;/code&gt; is strictly negative if &lt;code&gt;e1&lt;/code&gt; is smaller than &lt;code&gt;e2&lt;/code&gt;, and &lt;code&gt;f&amp;nbsp;e1&amp;nbsp;e2&lt;/code&gt; is strictly positive if &lt;code&gt;e1&lt;/code&gt; is greater than &lt;code&gt;e2&lt;/code&gt;. Example: a suitable ordering function is the generic structural comparison function &lt;a href=&quot;stdlib#VALcompare&quot;&gt;&lt;code&gt;compare&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">按键上的总订购功能。这是一个有两个参数的函数 &lt;code&gt;f&lt;/code&gt; 使得 &lt;code&gt;f&amp;nbsp;e1&amp;nbsp;e2&lt;/code&gt; 是零，如果密钥 &lt;code&gt;e1&lt;/code&gt; 和 &lt;code&gt;e2&lt;/code&gt; 是相等的， &lt;code&gt;f&amp;nbsp;e1&amp;nbsp;e2&lt;/code&gt; 严格为负，如果 &lt;code&gt;e1&lt;/code&gt; 小于 &lt;code&gt;e2&lt;/code&gt; ，和 &lt;code&gt;f&amp;nbsp;e1&amp;nbsp;e2&lt;/code&gt; 严格为正，如果 &lt;code&gt;e1&lt;/code&gt; 大于 &lt;code&gt;e2&lt;/code&gt; 。示例：合适的排序函数是通用结构比较函数&lt;a href=&quot;stdlib#VALcompare&quot;&gt; &lt;code&gt;compare&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a019b8deeb2179e62b2dd83bbe116b3c05de67f2" translate="yes" xml:space="preserve">
          <source>A total ordering function over the set elements.</source>
          <target state="translated">集合元素的总排序函数。</target>
        </trans-unit>
        <trans-unit id="3301b55c0e3059baa1a86a922ac90a322dd9522d" translate="yes" xml:space="preserve">
          <source>A total ordering function over the set elements. This is a two-argument function &lt;code&gt;f&lt;/code&gt; such that &lt;code&gt;f&amp;nbsp;e1&amp;nbsp;e2&lt;/code&gt; is zero if the elements &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt; are equal, &lt;code&gt;f&amp;nbsp;e1&amp;nbsp;e2&lt;/code&gt; is strictly negative if &lt;code&gt;e1&lt;/code&gt; is smaller than &lt;code&gt;e2&lt;/code&gt;, and &lt;code&gt;f&amp;nbsp;e1&amp;nbsp;e2&lt;/code&gt; is strictly positive if &lt;code&gt;e1&lt;/code&gt; is greater than &lt;code&gt;e2&lt;/code&gt;. Example: a suitable ordering function is the generic structural comparison function &lt;a href=&quot;stdlib#VALcompare&quot;&gt;&lt;code&gt;compare&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">设置元素的总排序功能。这是一个有两个参数的函数 &lt;code&gt;f&lt;/code&gt; 使得 &lt;code&gt;f&amp;nbsp;e1&amp;nbsp;e2&lt;/code&gt; 是零，如果元素 &lt;code&gt;e1&lt;/code&gt; 和 &lt;code&gt;e2&lt;/code&gt; 是相等的， &lt;code&gt;f&amp;nbsp;e1&amp;nbsp;e2&lt;/code&gt; 严格为负，如果 &lt;code&gt;e1&lt;/code&gt; 小于 &lt;code&gt;e2&lt;/code&gt; ，和 &lt;code&gt;f&amp;nbsp;e1&amp;nbsp;e2&lt;/code&gt; 严格为正，如果 &lt;code&gt;e1&lt;/code&gt; 大于 &lt;code&gt;e2&lt;/code&gt; 。示例：合适的排序函数是通用结构比较函数&lt;a href=&quot;stdlib#VALcompare&quot;&gt; &lt;code&gt;compare&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c0517eb31f85493bf3934f707f94d0e17f1a476" translate="yes" xml:space="preserve">
          <source>A type constructor can also be invariant in some of its type parameters, neither covariant nor contravariant. A typical example is a reference:</source>
          <target state="translated">一个类型构造函数的一些类型参数也可以是不变的,既不是共变的,也不是反变的。一个典型的例子是引用。</target>
        </trans-unit>
        <trans-unit id="211545b50150ecb4c60171f798b7431c2caa5061" translate="yes" xml:space="preserve">
          <source>A typical use of first-class modules is to select at run-time among several implementations of a signature. Each implementation is a structure that we can encapsulate as a first-class module, then store in a data structure such as a hash table:</source>
          <target state="translated">一级模块的一个典型用途是在运行时从签名的几个实现中进行选择。每个实现都是一个结构,我们可以将其封装为一级模块,然后存储在哈希表等数据结构中。</target>
        </trans-unit>
        <trans-unit id="2ba2280fa15aa3e8ed944cb1cee2fdfdd4e902d0" translate="yes" xml:space="preserve">
          <source>A typical use of this function is to prevent pure computations from being optimized away in benchmarking loops. For example:</source>
          <target state="translated">这个函数的典型用途是防止纯计算在基准测试循环中被优化掉。例如</target>
        </trans-unit>
        <trans-unit id="a70b30e08298103d0e6a25bf5752bcd902ad2806" translate="yes" xml:space="preserve">
          <source>A typical use, in conjunction with the signature-level include construct, is to extend the signature of an existing structure. In that case, one wants to keep the types equal to types in the original module. This can done using the following idiom.</source>
          <target state="translated">一个典型的用法是,结合签名级的include构造,扩展一个现有结构的签名。在这种情况下,我们希望保持类型与原始模块中的类型相等。这可以使用下面的成语来完成。</target>
        </trans-unit>
        <trans-unit id="6371640aac67f9a69125817b1e66283f49dd8e4a" translate="yes" xml:space="preserve">
          <source>A value definition external&lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;=&lt;a href=&quot;intfc#external-declaration&quot;&gt;external-declaration&lt;/a&gt; implements &lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt; as the external function specified in &lt;a href=&quot;intfc#external-declaration&quot;&gt;external-declaration&lt;/a&gt; (see chapter &amp;zwj;&lt;a href=&quot;intfc#c%3Aintf-c&quot;&gt;18&lt;/a&gt;).</source>
          <target state="translated">的值定义外部&lt;a href=&quot;names#value-name&quot;&gt;值名&lt;/a&gt;：&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt; =&lt;a href=&quot;intfc#external-declaration&quot;&gt;外部声明&lt;/a&gt;器具&lt;a href=&quot;names#value-name&quot;&gt;值名称&lt;/a&gt;作为指定的外部函数&lt;a href=&quot;intfc#external-declaration&quot;&gt;外部声明&lt;/a&gt;（见章节&lt;a href=&quot;intfc#c%3Aintf-c&quot;&gt;18&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f5f36917afe721fc0b9382d1fc7b3c3e240eb3d9" translate="yes" xml:space="preserve">
          <source>A value definition external&lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;=&lt;a href=&quot;intfc#external-declaration&quot;&gt;external-declaration&lt;/a&gt; implements &lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt; as the external function specified in &lt;a href=&quot;intfc#external-declaration&quot;&gt;external-declaration&lt;/a&gt; (see chapter &lt;a href=&quot;intfc#c%3Aintf-c&quot;&gt;20&lt;/a&gt;).</source>
          <target state="translated">值定义外部&lt;a href=&quot;names#value-name&quot;&gt;值名称&lt;/a&gt;：&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt; = &lt;a href=&quot;intfc#external-declaration&quot;&gt;external-declaration将&lt;/a&gt;&lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt;实现为在&lt;a href=&quot;intfc#external-declaration&quot;&gt;外部声明中&lt;/a&gt;指定的外部函数（请参见第&lt;a href=&quot;intfc#c%3Aintf-c&quot;&gt;20&lt;/a&gt;章）。</target>
        </trans-unit>
        <trans-unit id="0f8573f805bbc218c919f64e70c695d06bed496d" translate="yes" xml:space="preserve">
          <source>A value definition let [rec] &lt;a href=&quot;expr#let-binding&quot;&gt;let-binding&lt;/a&gt; { and&lt;a href=&quot;expr#let-binding&quot;&gt;let-binding&lt;/a&gt; } bind value names in the same way as a let &amp;hellip; in &amp;hellip; expression (see section &amp;zwj;&lt;a href=&quot;expr#sss%3Aexpr-localdef&quot;&gt;7.7.2&lt;/a&gt;). The value names appearing in the left-hand sides of the bindings are bound to the corresponding values in the right-hand sides.</source>
          <target state="translated">的值定义让[REC]&lt;a href=&quot;expr#let-binding&quot;&gt;让结合&lt;/a&gt;{并&lt;a href=&quot;expr#let-binding&quot;&gt;让结合&lt;/a&gt;}结合以同样的方式作为一个让值名称... ...中表达（见&lt;a href=&quot;expr#sss%3Aexpr-localdef&quot;&gt;7.7.2&lt;/a&gt;）。出现在绑定左侧的值名称绑定到右侧的相应值。</target>
        </trans-unit>
        <trans-unit id="6ddd65d7b3296b8516c76db6902d3a4fd31f9fe1" translate="yes" xml:space="preserve">
          <source>A value definition let [rec] &lt;a href=&quot;expr#let-binding&quot;&gt;let-binding&lt;/a&gt; { and&lt;a href=&quot;expr#let-binding&quot;&gt;let-binding&lt;/a&gt; } bind value names in the same way as a let &amp;hellip; in &amp;hellip; expression (see section &lt;a href=&quot;expr#sss%3Aexpr-localdef&quot;&gt;7.7.2&lt;/a&gt;). The value names appearing in the left-hand sides of the bindings are bound to the corresponding values in the right-hand sides.</source>
          <target state="translated">值定义let [rec] &lt;a href=&quot;expr#let-binding&quot;&gt;let-binding&lt;/a&gt; {和&lt;a href=&quot;expr#let-binding&quot;&gt;let-binding&lt;/a&gt; }绑定值名称的方式与&amp;hellip;表达式中的let&amp;hellip;相同（请参见第&lt;a href=&quot;expr#sss%3Aexpr-localdef&quot;&gt;7.7.2&lt;/a&gt;节）。出现在绑定左侧的值名称绑定到右侧的相应值。</target>
        </trans-unit>
        <trans-unit id="da2fd9925642ed45810159f2740fcb824bb7a2e3" translate="yes" xml:space="preserve">
          <source>A value of &lt;code&gt;('a,&amp;nbsp;'b)&amp;nbsp;Either.t&lt;/code&gt; contains either a value of &lt;code&gt;'a&lt;/code&gt; or a value of &lt;code&gt;'b&lt;/code&gt;</source>
          <target state="translated">值 &lt;code&gt;('a,&amp;nbsp;'b)&amp;nbsp;Either.t&lt;/code&gt; 包含值 &lt;code&gt;'a&lt;/code&gt; 或值 &lt;code&gt;'b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="69f42f5df956fa3422e7fe6778c699ae6b6008e4" translate="yes" xml:space="preserve">
          <source>A value of this type represents a Unicode &lt;a href=&quot;http://unicode.org/glossary/#unicode_scalar_value&quot;&gt;scalar value&lt;/a&gt; which is an integer in the ranges &lt;code&gt;0x0000&lt;/code&gt;...&lt;code&gt;0xD7FF&lt;/code&gt; or &lt;code&gt;0xE000&lt;/code&gt;...&lt;code&gt;0x10FFFF&lt;/code&gt;.</source>
          <target state="translated">此类型的值表示Unicode&lt;a href=&quot;http://unicode.org/glossary/#unicode_scalar_value&quot;&gt;标量值&lt;/a&gt;，它是 &lt;code&gt;0x0000&lt;/code&gt; ... &lt;code&gt;0xD7FF&lt;/code&gt; 或 &lt;code&gt;0xE000&lt;/code&gt; ... &lt;code&gt;0x10FFFF&lt;/code&gt; 范围内的整数。</target>
        </trans-unit>
        <trans-unit id="2e6472c0778a1cd15c380ab93373f7580eca7451" translate="yes" xml:space="preserve">
          <source>A value of this type represents a Unicode &lt;a href=&quot;https://unicode.org/glossary/#unicode_scalar_value&quot;&gt;scalar value&lt;/a&gt; which is an integer in the ranges &lt;code&gt;0x0000&lt;/code&gt;...&lt;code&gt;0xD7FF&lt;/code&gt; or &lt;code&gt;0xE000&lt;/code&gt;...&lt;code&gt;0x10FFFF&lt;/code&gt;.</source>
          <target state="translated">此类型的值表示Unicode&lt;a href=&quot;https://unicode.org/glossary/#unicode_scalar_value&quot;&gt;标量值&lt;/a&gt;，它是 &lt;code&gt;0x0000&lt;/code&gt; ... &lt;code&gt;0xD7FF&lt;/code&gt; 或 &lt;code&gt;0xE000&lt;/code&gt; ... &lt;code&gt;0x10FFFF&lt;/code&gt; 范围内的整数。</target>
        </trans-unit>
        <trans-unit id="0fab88217e66f9276eb14fef9ed0c565d61781ba" translate="yes" xml:space="preserve">
          <source>A value of type &lt;code&gt;'a&amp;nbsp;Lazy.t&lt;/code&gt; is a deferred computation, called a suspension, that has a result of type &lt;code&gt;'a&lt;/code&gt;.</source>
          <target state="translated">类型为 &lt;code&gt;'a&amp;nbsp;Lazy.t&lt;/code&gt; 值是延迟计算，称为暂停，其结果类型为 &lt;code&gt;'a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5a47b8ccd625123a4d656e7b7993ccbb8af4206" translate="yes" xml:space="preserve">
          <source>A value of type &lt;code&gt;'a&amp;nbsp;Lazy.t&lt;/code&gt; is a deferred computation, called a suspension, that has a result of type &lt;code&gt;'a&lt;/code&gt;. The special expression syntax &lt;code&gt;lazy&amp;nbsp;(expr)&lt;/code&gt; makes a suspension of the computation of &lt;code&gt;expr&lt;/code&gt;, without computing &lt;code&gt;expr&lt;/code&gt; itself yet. &quot;Forcing&quot; the suspension will then compute &lt;code&gt;expr&lt;/code&gt; and return its result. Matching a suspension with the special pattern syntax &lt;code&gt;lazy(pattern)&lt;/code&gt; also computes the underlying expression and tries to bind it to &lt;code&gt;pattern&lt;/code&gt;:</source>
          <target state="translated">类型为 &lt;code&gt;'a&amp;nbsp;Lazy.t&lt;/code&gt; 值是延迟计算，称为暂停，其结果类型为 &lt;code&gt;'a&lt;/code&gt; 。特殊表达式语法 &lt;code&gt;lazy&amp;nbsp;(expr)&lt;/code&gt; 暂停了 &lt;code&gt;expr&lt;/code&gt; 的计算，而尚未计算 &lt;code&gt;expr&lt;/code&gt; 本身。然后，&amp;ldquo;强制&amp;rdquo;悬浮将计算 &lt;code&gt;expr&lt;/code&gt; 并返回其结果。将悬浮与特殊模式语法 &lt;code&gt;lazy(pattern)&lt;/code&gt; 匹配还会计算基础表达式，并尝试将其绑定到 &lt;code&gt;pattern&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="402083dd156412dd1ea180848cd507b7d35b13b6" translate="yes" xml:space="preserve">
          <source>A value of type &lt;code&gt;position&lt;/code&gt; describes a point in a source file.</source>
          <target state="translated">类型 &lt;code&gt;position&lt;/code&gt; 的值描述源文件中的一个点。</target>
        </trans-unit>
        <trans-unit id="02d9ca8e4101b9e16cad8e9fd75c11bb2c32ff37" translate="yes" xml:space="preserve">
          <source>A value of type &lt;code&gt;position&lt;/code&gt; describes a point in a source file. &lt;code&gt;pos_fname&lt;/code&gt; is the file name; &lt;code&gt;pos_lnum&lt;/code&gt; is the line number; &lt;code&gt;pos_bol&lt;/code&gt; is the offset of the beginning of the line (number of characters between the beginning of the lexbuf and the beginning of the line); &lt;code&gt;pos_cnum&lt;/code&gt; is the offset of the position (number of characters between the beginning of the lexbuf and the position). The difference between &lt;code&gt;pos_cnum&lt;/code&gt; and &lt;code&gt;pos_bol&lt;/code&gt; is the character offset within the line (i.e. the column number, assuming each character is one column wide).</source>
          <target state="translated">类型 &lt;code&gt;position&lt;/code&gt; 的值描述源文件中的一个点。 &lt;code&gt;pos_fname&lt;/code&gt; 是文件名； &lt;code&gt;pos_lnum&lt;/code&gt; 是行号； &lt;code&gt;pos_bol&lt;/code&gt; 是行开头的偏移量（lexbuf开头和行开头之间的字符数）； &lt;code&gt;pos_cnum&lt;/code&gt; 是位置的偏移量（lexbuf的开头和位置之间的字符数）。 &lt;code&gt;pos_cnum&lt;/code&gt; 和 &lt;code&gt;pos_bol&lt;/code&gt; 之间的区别是行内的字符偏移量（即列号，假设每个字符为一列宽）。</target>
        </trans-unit>
        <trans-unit id="aff9c8a44e9ba1f0bc06f321145851f0bcb03df0" translate="yes" xml:space="preserve">
          <source>A value of type &lt;code&gt;position&lt;/code&gt;, guaranteed to be different from any valid position.</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; 类型的值，保证与任何有效位置都不同。</target>
        </trans-unit>
        <trans-unit id="29b637b537bdf91e35b0f38d177bb89e45e8ff3f" translate="yes" xml:space="preserve">
          <source>A variable is a char variable when all its occurrences bind char occurrences in the previous sense.</source>
          <target state="translated">当一个变量的所有出现都绑定了前一个意义上的char出现时,就是一个char变量。</target>
        </trans-unit>
        <trans-unit id="65a4503a582f6ca1f358508c8611bdb9f42c0c2e" translate="yes" xml:space="preserve">
          <source>A variable is an option variable when the overall expression can be matched without binding this variable.</source>
          <target state="translated">当整体表达式可以不绑定这个变量而进行匹配时,就是一个选项变量。</target>
        </trans-unit>
        <trans-unit id="6f6d08413e9bdd3006a6981f112dbcdb85a80f52" translate="yes" xml:space="preserve">
          <source>A variable specification is written val [mutable] virtual&lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;. It specifies whether the variable is modifiable, and gives its type.</source>
          <target state="translated">变量说明写为val [mutable] virtual &lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt;：&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;。它指定变量是否可修改，并指定其类型。</target>
        </trans-unit>
        <trans-unit id="96bdda3953ab669bc31a8755dd9398f706c5152a" translate="yes" xml:space="preserve">
          <source>A variant of &lt;a href=&quot;hashtbl#VALhash&quot;&gt;&lt;code&gt;Hashtbl.hash&lt;/code&gt;&lt;/a&gt; that is further parameterized by an integer seed.</source>
          <target state="translated">&lt;a href=&quot;hashtbl#VALhash&quot;&gt; &lt;code&gt;Hashtbl.hash&lt;/code&gt; &lt;/a&gt;的变体，进一步由整数种子参数化。</target>
        </trans-unit>
        <trans-unit id="dde80c1dc04242113122cc6fb088201351b13458" translate="yes" xml:space="preserve">
          <source>A variant of &lt;a href=&quot;hashtbl#VALhash_param&quot;&gt;&lt;code&gt;Hashtbl.hash_param&lt;/code&gt;&lt;/a&gt; that is further parameterized by an integer seed.</source>
          <target state="translated">&lt;a href=&quot;hashtbl#VALhash_param&quot;&gt; &lt;code&gt;Hashtbl.hash_param&lt;/code&gt; &lt;/a&gt;的变体，进一步由整数种子参数化。</target>
        </trans-unit>
        <trans-unit id="5e16ee663f37b312ab3934cec1e4506b98989546" translate="yes" xml:space="preserve">
          <source>A variant of &lt;a href=&quot;hashtbl#VALhash_param&quot;&gt;&lt;code&gt;Hashtbl.hash_param&lt;/code&gt;&lt;/a&gt; that is further parameterized by an integer seed. Usage: &lt;code&gt;Hashtbl.seeded_hash_param&amp;nbsp;meaningful&amp;nbsp;total&amp;nbsp;seed&amp;nbsp;x&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;hashtbl#VALhash_param&quot;&gt; &lt;code&gt;Hashtbl.hash_param&lt;/code&gt; &lt;/a&gt;的变体，进一步由整数种子参数化。用法： &lt;code&gt;Hashtbl.seeded_hash_param&amp;nbsp;meaningful&amp;nbsp;total&amp;nbsp;seed&amp;nbsp;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d84e993660f0597be1cf97e1b2ba007a43a9f15e" translate="yes" xml:space="preserve">
          <source>A variant of &lt;a href=&quot;morelabels.hashtbl#VALhash&quot;&gt;&lt;code&gt;MoreLabels.Hashtbl.hash&lt;/code&gt;&lt;/a&gt; that is further parameterized by an integer seed.</source>
          <target state="translated">&lt;a href=&quot;morelabels.hashtbl#VALhash&quot;&gt; &lt;code&gt;MoreLabels.Hashtbl.hash&lt;/code&gt; &lt;/a&gt;的变体，进一步由整数种子参数化。</target>
        </trans-unit>
        <trans-unit id="5a4f33a3dfb070288cd0aaad47a53ac5cf46463d" translate="yes" xml:space="preserve">
          <source>A variant of &lt;a href=&quot;morelabels.hashtbl#VALhash_param&quot;&gt;&lt;code&gt;MoreLabels.Hashtbl.hash_param&lt;/code&gt;&lt;/a&gt; that is further parameterized by an integer seed.</source>
          <target state="translated">&lt;a href=&quot;morelabels.hashtbl#VALhash_param&quot;&gt; &lt;code&gt;MoreLabels.Hashtbl.hash_param&lt;/code&gt; &lt;/a&gt;的变体，进一步由整数种子参数化。</target>
        </trans-unit>
        <trans-unit id="d52cf325a82a180fa01848d435622ef50104458c" translate="yes" xml:space="preserve">
          <source>A variant of &lt;a href=&quot;morelabels.hashtbl#VALhash_param&quot;&gt;&lt;code&gt;MoreLabels.Hashtbl.hash_param&lt;/code&gt;&lt;/a&gt; that is further parameterized by an integer seed. Usage: &lt;code&gt;Hashtbl.seeded_hash_param&amp;nbsp;meaningful&amp;nbsp;total&amp;nbsp;seed&amp;nbsp;x&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;morelabels.hashtbl#VALhash_param&quot;&gt; &lt;code&gt;MoreLabels.Hashtbl.hash_param&lt;/code&gt; &lt;/a&gt;的变体，进一步由整数种子参数化。用法： &lt;code&gt;Hashtbl.seeded_hash_param&amp;nbsp;meaningful&amp;nbsp;total&amp;nbsp;seed&amp;nbsp;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef891feaf265c8fff02c40b8051a5b43375fa950" translate="yes" xml:space="preserve">
          <source>A virtual method specification is written method [private] virtual&lt;a href=&quot;names#method-name&quot;&gt;method-name&lt;/a&gt;:&lt;a href=&quot;types#poly-typexpr&quot;&gt;poly-typexpr&lt;/a&gt;, where &lt;a href=&quot;names#method-name&quot;&gt;method-name&lt;/a&gt; is the name of the method and &lt;a href=&quot;types#poly-typexpr&quot;&gt;poly-typexpr&lt;/a&gt; its expected type.</source>
          <target state="translated">虚拟方法规范编写为方法[私有]虚拟&lt;a href=&quot;names#method-name&quot;&gt;方法名称&lt;/a&gt;：&lt;a href=&quot;types#poly-typexpr&quot;&gt;poly-typexpr&lt;/a&gt;，其中&lt;a href=&quot;names#method-name&quot;&gt;method-name&lt;/a&gt;是方法的名称，而&lt;a href=&quot;types#poly-typexpr&quot;&gt;poly-typexpr是&lt;/a&gt;其预期的类型。</target>
        </trans-unit>
        <trans-unit id="82a9e7d795dc1e2f4897cedc46d4bbda70cae8e7" translate="yes" xml:space="preserve">
          <source>A weak hash set is a hashed set of values. Each value may magically disappear from the set when it is not used by the rest of the program any more. This is normally used to share data structures without inducing memory leaks. Weak hash sets are defined on values from a &lt;a href=&quot;hashtbl.hashedtype&quot;&gt;&lt;code&gt;Hashtbl.HashedType&lt;/code&gt;&lt;/a&gt; module; the &lt;code&gt;equal&lt;/code&gt; relation and &lt;code&gt;hash&lt;/code&gt; function are taken from that module. We will say that &lt;code&gt;v&lt;/code&gt; is an instance of &lt;code&gt;x&lt;/code&gt; if &lt;code&gt;equal&amp;nbsp;x&amp;nbsp;v&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">弱哈希集是值的哈希集。当程序的其余部分不再使用每个值时，它们可能会神奇地从集合中消失。通常用于共享数据结构而不会引起内存泄漏。弱哈希集是根据&lt;a href=&quot;hashtbl.hashedtype&quot;&gt; &lt;code&gt;Hashtbl.HashedType&lt;/code&gt; &lt;/a&gt;模块的值定义的；的 &lt;code&gt;equal&lt;/code&gt; 关系和 &lt;code&gt;hash&lt;/code&gt; 函数是从模块服用。如果 &lt;code&gt;equal&amp;nbsp;x&amp;nbsp;v&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，我们将说 &lt;code&gt;v&lt;/code&gt; 是 &lt;code&gt;x&lt;/code&gt; 的一个实例。</target>
        </trans-unit>
        <trans-unit id="ed30e5a0c732857f660d212930cfe3a664cf4935" translate="yes" xml:space="preserve">
          <source>A weak pointer is said to be full if it points to a value, empty if the value was erased by the GC.</source>
          <target state="translated">一个弱指针如果指向一个值,则称其为满,如果该值被GC擦除,则称其为空。</target>
        </trans-unit>
        <trans-unit id="4da874d84da1bb17626fe50704c2e9fe5bd83b0d" translate="yes" xml:space="preserve">
          <source>A zero-terminated character string serving as an identifier for serialization and deserialization operations.</source>
          <target state="translated">以零结尾的字符串,作为序列化和反序列化操作的标识符。</target>
        </trans-unit>
        <trans-unit id="2393031750b1131fd5a5158df853f1f828aa53c5" translate="yes" xml:space="preserve">
          <source>Abnormal termination</source>
          <target state="translated">异常终止</target>
        </trans-unit>
        <trans-unit id="63ff60e4a878d7ce08e31f1a99ca96fd6c7ffbab" translate="yes" xml:space="preserve">
          <source>Absent cmi file when looking up module alias.</source>
          <target state="translated">查询模块别名时没有cmi文件。</target>
        </trans-unit>
        <trans-unit id="6b3c08d54285a0c96eb5abc914fdfcea919dbcb3" translate="yes" xml:space="preserve">
          <source>Abstract data corresponding to a pretty-printer (also called a formatter) and all its machinery.</source>
          <target state="translated">对应于一个漂亮的打印机(也叫formatter)及其所有机械的抽象数据。</target>
        </trans-unit>
        <trans-unit id="ae9e52e186925792b8e4d7b9b0ead90daf75595d" translate="yes" xml:space="preserve">
          <source>Abstract data corresponding to a pretty-printer (also called a formatter) and all its machinery. See also &lt;a href=&quot;format#formatter&quot;&gt;&lt;i&gt;Defining formatters&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">对应于漂亮打印机（也称为格式化程序）及其所有机器的抽象数据。另请参阅&lt;a href=&quot;format#formatter&quot;&gt;&lt;i&gt;定义格式器&lt;/i&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f00307b58ddb8ff02061725bac4956edaef6f060" translate="yes" xml:space="preserve">
          <source>Abstract type: no equation, no representation.</source>
          <target state="translated">抽象类型:无方程,无表示。</target>
        </trans-unit>
        <trans-unit id="1569edf2298bfe645aee55dd080e109e05748e7c" translate="yes" xml:space="preserve">
          <source>Abstract_tag</source>
          <target state="translated">Abstract_tag</target>
        </trans-unit>
        <trans-unit id="04539f2099d95640e0ce5c13be47333619aefe28" translate="yes" xml:space="preserve">
          <source>Abstracting a type component in a functor result is a powerful technique that provides a high degree of type safety, as we now illustrate. Consider an ordering over character strings that is different from the standard ordering implemented in the OrderedString structure. For instance, we compare strings without distinguishing upper and lower case.</source>
          <target state="translated">在一个漏斗结果中抽象出一个类型组件是一种强大的技术,它提供了高度的类型安全,正如我们现在所说明的那样。考虑一个对字符字符串的排序,它不同于OrderedString结构中实现的标准排序。例如,我们比较字符串时不区分大写和小写。</target>
        </trans-unit>
        <trans-unit id="28c169ab94ad8dc2730f8876fa6a0f909075b132" translate="yes" xml:space="preserve">
          <source>Accept connections on the given socket.</source>
          <target state="translated">接受给定插座上的连接。</target>
        </trans-unit>
        <trans-unit id="c3804926614d5dc6fc72c5ef545bc26c3153a8ba" translate="yes" xml:space="preserve">
          <source>Accept connections on the given socket. The returned descriptor is a socket connected to the client; the returned address is the address of the connecting client.</source>
          <target state="translated">接受给定套接字上的连接。返回的描述符是连接到客户端的socket,返回的地址是连接客户端的地址。</target>
        </trans-unit>
        <trans-unit id="f09fe43a513f23628409fd3e9832fc01ccc252e9" translate="yes" xml:space="preserve">
          <source>Accept connections on the given socket. The returned descriptor is a socket connected to the client; the returned address is the address of the connecting client. See &lt;a href=&quot;unix#VALset_close_on_exec&quot;&gt;&lt;code&gt;Unix.set_close_on_exec&lt;/code&gt;&lt;/a&gt; for documentation on the &lt;code&gt;cloexec&lt;/code&gt; optional argument.</source>
          <target state="translated">接受给定套接字上的连接。返回的描述符是连接到客户端的套接字。返回的地址是连接客户端的地址。见&lt;a href=&quot;unix#VALset_close_on_exec&quot;&gt; &lt;code&gt;Unix.set_close_on_exec&lt;/code&gt; &lt;/a&gt;有关文件 &lt;code&gt;cloexec&lt;/code&gt; 可选参数。</target>
        </trans-unit>
        <trans-unit id="2d444e3b5f49e1aef14a2be43ab7e18e047452e0" translate="yes" xml:space="preserve">
          <source>Accept connections on the given socket. The returned descriptor is a socket connected to the client; the returned address is the address of the connecting client. See &lt;a href=&quot;unixlabels#VALset_close_on_exec&quot;&gt;&lt;code&gt;UnixLabels.set_close_on_exec&lt;/code&gt;&lt;/a&gt; for documentation on the &lt;code&gt;cloexec&lt;/code&gt; optional argument.</source>
          <target state="translated">接受给定套接字上的连接。返回的描述符是连接到客户端的套接字。返回的地址是连接客户端的地址。见&lt;a href=&quot;unixlabels#VALset_close_on_exec&quot;&gt; &lt;code&gt;UnixLabels.set_close_on_exec&lt;/code&gt; &lt;/a&gt;有关文件 &lt;code&gt;cloexec&lt;/code&gt; 可选参数。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
