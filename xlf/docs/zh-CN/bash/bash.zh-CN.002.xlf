<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="bash">
    <body>
      <group id="bash">
        <trans-unit id="d4e9b89ad8e560cd5987bf5d0b0ea975cae7d701" translate="yes" xml:space="preserve">
          <source>A job may also be referred to using a prefix of the name used to start it, or using a substring that appears in its command line. For example, &amp;lsquo;</source>
          <target state="translated">也可以使用用于启动作业的名称前缀或使用其命令行中出现的子字符串来引用作业。例如， '</target>
        </trans-unit>
        <trans-unit id="9a11b81d00b8291f8ce54d7ae0f066a05d992cbd" translate="yes" xml:space="preserve">
          <source>A list of all double-quoted strings preceded by &amp;lsquo;</source>
          <target state="translated">所有带双引号的字符串的列表，后跟'</target>
        </trans-unit>
        <trans-unit id="a02607562a627a129ea815155a38573ba2461113" translate="yes" xml:space="preserve">
          <source>A list of characters that separate fields; used when the shell splits words as part of expansion.</source>
          <target state="translated">分隔字段的字符列表;当shell作为扩展的一部分分割单词时使用。</target>
        </trans-unit>
        <trans-unit id="27444a9546e3ac0d7a8b601af1ce75c4ce367055" translate="yes" xml:space="preserve">
          <source>A literal &amp;lsquo;</source>
          <target state="translated">文字'</target>
        </trans-unit>
        <trans-unit id="69ea6267d5bdbde46910d62e76fe92776742f324" translate="yes" xml:space="preserve">
          <source>A mechanism by which a process may be notified by the kernel of an event occurring in the system.</source>
          <target state="translated">内核通知进程系统中发生的事件的机制。</target>
        </trans-unit>
        <trans-unit id="d2bd30989b127fdd47097fa86390f688e279ff2c" translate="yes" xml:space="preserve">
          <source>A mechanism by which users can selectively stop (suspend) and restart (resume) execution of processes.</source>
          <target state="translated">用户可以有选择地停止(暂停)和重新启动(恢复)进程执行的机制。</target>
        </trans-unit>
        <trans-unit id="75eebc2e54752eb0f7333c7ac08133ff1a9bce96" translate="yes" xml:space="preserve">
          <source>A more controlled mode of shell execution.</source>
          <target state="translated">一种更可控的shell执行模式。</target>
        </trans-unit>
        <trans-unit id="7e348f0cfd6e71ba464eb16b20d983678390c741" translate="yes" xml:space="preserve">
          <source>A newline.</source>
          <target state="translated">一个新行。</target>
        </trans-unit>
        <trans-unit id="b75865382f99cb72d38db3d9220b7d1d37b36f19" translate="yes" xml:space="preserve">
          <source>A non-interactive shell exits with an error status if a variable assignment error occurs in an assignment statement preceding a special builtin, but not with any other simple command.</source>
          <target state="translated">如果在特殊内建函数前面的赋值语句中出现变量赋值错误,非交互式shell退出时就会出现错误状态,但不是用其他简单的命令。</target>
        </trans-unit>
        <trans-unit id="ca2e37fe0f2fd8f4699b288c928f35b45f5cd3b8" translate="yes" xml:space="preserve">
          <source>A non-interactive shell exits with an error status if a variable assignment error occurs when no command name follows the assignment statements. A variable assignment error occurs, for example, when trying to assign a value to a readonly variable.</source>
          <target state="translated">如果在赋值语句后面没有命令名时发生变量赋值错误,非交互式shell就会以错误状态退出。例如,当试图给一个只读变量赋值时,就会发生变量赋值错误。</target>
        </trans-unit>
        <trans-unit id="8aa825d8b4cb8ade5ba5cbea9d1f0afd03e41989" translate="yes" xml:space="preserve">
          <source>A non-interactive shell exits with an error status if the iteration variable in a &lt;code&gt;for&lt;/code&gt; statement or the selection variable in a &lt;code&gt;select&lt;/code&gt; statement is a readonly variable.</source>
          <target state="translated">如果 &lt;code&gt;for&lt;/code&gt; 语句中的迭代变量或 &lt;code&gt;select&lt;/code&gt; 语句中的选择变量是只读变量，则非交互式外壳会退出并显示错误状态。</target>
        </trans-unit>
        <trans-unit id="59088554fe33cb2deecb9352c1ac3bf02a7300bc" translate="yes" xml:space="preserve">
          <source>A non-quoted backslash &amp;lsquo;</source>
          <target state="translated">不带引号的反斜杠&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="a58217b87e0183d939cab03d1454bbb3b9ed1a8d" translate="yes" xml:space="preserve">
          <source>A number of symbolic character names are recognized while processing this key binding syntax: &lt;var&gt;DEL&lt;/var&gt;, &lt;var&gt;ESC&lt;/var&gt;, &lt;var&gt;ESCAPE&lt;/var&gt;, &lt;var&gt;LFD&lt;/var&gt;, &lt;var&gt;NEWLINE&lt;/var&gt;, &lt;var&gt;RET&lt;/var&gt;, &lt;var&gt;RETURN&lt;/var&gt;, &lt;var&gt;RUBOUT&lt;/var&gt;, &lt;var&gt;SPACE&lt;/var&gt;, &lt;var&gt;SPC&lt;/var&gt;, and &lt;var&gt;TAB&lt;/var&gt;.</source>
          <target state="translated">处理此键绑定语法时，会识别出许多符号字符名称： &lt;var&gt;DEL&lt;/var&gt; ， &lt;var&gt;ESC&lt;/var&gt; ， &lt;var&gt;ESCAPE&lt;/var&gt; ， &lt;var&gt;LFD&lt;/var&gt; ， &lt;var&gt;NEWLINE&lt;/var&gt; ， &lt;var&gt;RET&lt;/var&gt; ， &lt;var&gt;RETURN&lt;/var&gt; ， &lt;var&gt;RUBOUT&lt;/var&gt; ， &lt;var&gt;SPACE&lt;/var&gt; ， &lt;var&gt;SPC&lt;/var&gt; 和 &lt;var&gt;TAB&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="28e9f156307767bd9628d1f497f61ed701bd749f" translate="yes" xml:space="preserve">
          <source>A parameter is set if it has been assigned a value. The null string is a valid value. Once a variable is set, it may be unset only by using the &lt;code&gt;unset&lt;/code&gt; builtin command.</source>
          <target state="translated">如果已为参数分配了值，则设置该参数。空字符串是有效值。一旦设置了变量，就只能使用 &lt;code&gt;unset&lt;/code&gt; Builtin内置命令将其取消设置。</target>
        </trans-unit>
        <trans-unit id="f538f0e6f503785e85b2b176d77d06bc08b2f0d4" translate="yes" xml:space="preserve">
          <source>A range of words; &amp;lsquo;</source>
          <target state="translated">一系列的单词；'</target>
        </trans-unit>
        <trans-unit id="e65a65e238f02669dcc58ef41a8a58ff780469ee" translate="yes" xml:space="preserve">
          <source>A readonly array variable (see &lt;a href=&quot;arrays&quot;&gt;Arrays&lt;/a&gt;) whose members hold version information for this instance of Bash. The values assigned to the array members are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a6094d81f10ea110a4d3b450c756b9a479adf6c" translate="yes" xml:space="preserve">
          <source>A readonly array variable (see &lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;) whose members hold version information for this instance of Bash. The values assigned to the array members are as follows:</source>
          <target state="translated">一个只读数组变量（请参阅&lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;），其成员保存此Bash实例的版本信息。分配给数组成员的值如下：</target>
        </trans-unit>
        <trans-unit id="171ca81e27dbe770c0f06eae8e695d7f297a1986" translate="yes" xml:space="preserve">
          <source>A section &amp;ldquo;Entitled XYZ&amp;rdquo; means a named subunit of the Document whose title either is precisely XYZ or contains XYZ in parentheses following text that translates XYZ in another language. (Here XYZ stands for a specific section name mentioned below, such as &amp;ldquo;Acknowledgements&amp;rdquo;, &amp;ldquo;Dedications&amp;rdquo;, &amp;ldquo;Endorsements&amp;rdquo;, or &amp;ldquo;History&amp;rdquo;.) To &amp;ldquo;Preserve the Title&amp;rdquo; of such a section when you modify the Document means that it remains a section &amp;ldquo;Entitled XYZ&amp;rdquo; according to this definition.</source>
          <target state="translated">&amp;ldquo;带标题的XYZ&amp;rdquo;部分是指文档的命名子单元，其标题恰好是XYZ或在括号中包含XYZ的文本，后面是将XYZ转换为另一种语言的文本。 （此处XYZ代表下面提到的特定节名称，例如&amp;ldquo;致谢&amp;rdquo;，&amp;ldquo;奉献&amp;rdquo;，&amp;ldquo;背书&amp;rdquo;或&amp;ldquo;历史记录&amp;rdquo;。）在修改文档时要&amp;ldquo;保留此节的标题&amp;rdquo;意味着根据此定义，仍保留&amp;ldquo;标题为XYZ&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="17f15aa4e1d26bb06976b3cbca37d73b8dee6b9e" translate="yes" xml:space="preserve">
          <source>A sequence expression takes the form &lt;code&gt;{&lt;var&gt;x&lt;/var&gt;..&lt;var&gt;y&lt;/var&gt;[..&lt;var&gt;incr&lt;/var&gt;]}&lt;/code&gt;, where &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are either integers or single characters, and &lt;var&gt;incr&lt;/var&gt;, an optional increment, is an integer. When integers are supplied, the expression expands to each number between &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt;, inclusive. Supplied integers may be prefixed with &amp;lsquo;</source>
          <target state="translated">序列表达式采用 &lt;code&gt;{&lt;var&gt;x&lt;/var&gt;..&lt;var&gt;y&lt;/var&gt;[..&lt;var&gt;incr&lt;/var&gt;]}&lt;/code&gt; ，其中 &lt;var&gt;x&lt;/var&gt; 和 &lt;var&gt;y&lt;/var&gt; 是整数或单个字符，而 &lt;var&gt;incr&lt;/var&gt; 是可选的增量，是整数。提供整数后，表达式将扩展为 &lt;var&gt;x&lt;/var&gt; 和 &lt;var&gt;y&lt;/var&gt; 之间（包括两端）的每个数字。提供的整数可以以'</target>
        </trans-unit>
        <trans-unit id="0c5f3d97f8e669e1b7fc4cb04a27eac0fcbed24e" translate="yes" xml:space="preserve">
          <source>A sequence of characters considered a single unit by the shell. It is either a &lt;code&gt;word&lt;/code&gt; or an &lt;code&gt;operator&lt;/code&gt;.</source>
          <target state="translated">外壳程序将一个字符序列视为一个单元。它可以是一个 &lt;code&gt;word&lt;/code&gt; 或一个 &lt;code&gt;operator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c729236344d264d55f4e0b15bc15fe363185af0" translate="yes" xml:space="preserve">
          <source>A sequence of characters treated as a unit by the shell. Words may not include unquoted &lt;code&gt;metacharacters&lt;/code&gt;.</source>
          <target state="translated">Shell将一个字符序列视为一个单元。单词不能包含未引用的 &lt;code&gt;metacharacters&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e653fba0c2f2a746da0ab052cc58cebb51191ab0" translate="yes" xml:space="preserve">
          <source>A sequence of one or more newlines may appear in a &lt;code&gt;list&lt;/code&gt; to delimit commands, equivalent to a semicolon.</source>
          <target state="translated">一系列的一个或多个换行符可能会出现在 &lt;code&gt;list&lt;/code&gt; 以分隔命令，等同于分号。</target>
        </trans-unit>
        <trans-unit id="ba3a98812715f4c83c387a621c85bccc5acc86d5" translate="yes" xml:space="preserve">
          <source>A set of processes comprising a pipeline, and any processes descended from it, that are all in the same process group.</source>
          <target state="translated">组成流水线的一组流程,以及由其衍生出来的任何流程,这些流程都属于同一个流程组。</target>
        </trans-unit>
        <trans-unit id="0a925a15549fcfa8af9884a47d160d7180f3fea6" translate="yes" xml:space="preserve">
          <source>A shell allows execution of &lt;small&gt;GNU&lt;/small&gt; commands, both synchronously and asynchronously. The shell waits for synchronous commands to complete before accepting more input; asynchronous commands continue to execute in parallel with the shell while it reads and executes additional commands. The &lt;em&gt;redirection&lt;/em&gt; constructs permit fine-grained control of the input and output of those commands. Moreover, the shell allows control over the contents of commands&amp;rsquo; environments.</source>
          <target state="translated">Shell允许同步和异步执行&lt;small&gt;GNU&lt;/small&gt;命令。在接受更多输入之前，shell等待同步命令完成。异步命令继续与外壳程序并行执行，同时读取并执行其他命令。所述&lt;em&gt;重定向&lt;/em&gt;构建体允许这些命令的输入和输出的精细控制。而且，外壳程序允许控制命令环境的内容。</target>
        </trans-unit>
        <trans-unit id="1b5b8eebda6e962cb31c67f38f3441e4bbd584a4" translate="yes" xml:space="preserve">
          <source>A shell builtin command that has been classified as special by the &lt;small&gt;POSIX&lt;/small&gt; standard.</source>
          <target state="translated">Shell内置命令，已由&lt;small&gt;POSIX&lt;/small&gt;标准分类为特殊命令。</target>
        </trans-unit>
        <trans-unit id="e0b858cf4d1875be47398883079da17882f1702f" translate="yes" xml:space="preserve">
          <source>A shell script is a text file containing shell commands. When such a file is used as the first non-option argument when invoking Bash, and neither the</source>
          <target state="translated">shell脚本是包含shell命令的文本文件。当调用Bash时,这样的文件被用作第一个非选项参数时,并且既不使用</target>
        </trans-unit>
        <trans-unit id="4d23c1bdbeb06deb60984910dd6f9173c9e80814" translate="yes" xml:space="preserve">
          <source>A shell script may be made executable by using the &lt;code&gt;chmod&lt;/code&gt; command to turn on the execute bit. When Bash finds such a file while searching the &lt;code&gt;$PATH&lt;/code&gt; for a command, it spawns a subshell to execute it. In other words, executing</source>
          <target state="translated">通过使用 &lt;code&gt;chmod&lt;/code&gt; 命令打开执行位，可以使Shell脚本可执行。当Bash在 &lt;code&gt;$PATH&lt;/code&gt; 搜索命令时找到了这样的文件时，它会生成一个子shell执行该文件。换句话说，执行</target>
        </trans-unit>
        <trans-unit id="f7cbc834d86e7a89e933bb3c348ad10133f614ef" translate="yes" xml:space="preserve">
          <source>A short description of Bash.</source>
          <target state="translated">简单介绍一下Bash。</target>
        </trans-unit>
        <trans-unit id="d149a718859f1a63057c5ff8db5c224d2ff47814" translate="yes" xml:space="preserve">
          <source>A short description of how to make Readline behave like the vi editor.</source>
          <target state="translated">简要说明如何让Readline表现得像vi编辑器。</target>
        </trans-unit>
        <trans-unit id="6cff6f3daffe150ed42fb1532243103b388c08f3" translate="yes" xml:space="preserve">
          <source>A short script or &amp;lsquo;recipe&amp;rsquo; which exercises the bug and may be used to reproduce it.</source>
          <target state="translated">一个简短的脚本或&amp;ldquo;食谱&amp;rdquo;，可以练习该错误并可以重现该错误。</target>
        </trans-unit>
        <trans-unit id="97471d4515146de964b3145ca32e81a263afac3f" translate="yes" xml:space="preserve">
          <source>A shorthand for specifying filenames matching patterns.</source>
          <target state="translated">用于指定匹配模式的文件名的简写。</target>
        </trans-unit>
        <trans-unit id="6d377e1bbf0b8972770604fa06294968b94834f7" translate="yes" xml:space="preserve">
          <source>A simple command is the kind of command encountered most often. It&amp;rsquo;s just a sequence of words separated by &lt;code&gt;blank&lt;/code&gt;s, terminated by one of the shell&amp;rsquo;s control operators (see &lt;a href=&quot;definitions&quot;&gt;Definitions&lt;/a&gt;). The first word generally specifies a command to be executed, with the rest of the words being that command&amp;rsquo;s arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86753e946155b9f5523d8e5899f4f235eaf438d" translate="yes" xml:space="preserve">
          <source>A simple command is the kind of command encountered most often. It&amp;rsquo;s just a sequence of words separated by &lt;code&gt;blank&lt;/code&gt;s, terminated by one of the shell&amp;rsquo;s control operators (see &lt;a href=&quot;definitions#Definitions&quot;&gt;Definitions&lt;/a&gt;). The first word generally specifies a command to be executed, with the rest of the words being that command&amp;rsquo;s arguments.</source>
          <target state="translated">简单命令是最常遇到的命令。它只是一个由 &lt;code&gt;blank&lt;/code&gt; s 分隔的单词序列，由外壳程序的一个控制操作符终止（请参阅&lt;a href=&quot;definitions#Definitions&quot;&gt;定义&lt;/a&gt;）。通常，第一个单词指定要执行的命令，其余单词是该命令的参数。</target>
        </trans-unit>
        <trans-unit id="c7dcb9eda170dd5b826a8de8611fa2e7f39dedb7" translate="yes" xml:space="preserve">
          <source>A simple shell command such as &lt;code&gt;echo a b c&lt;/code&gt; consists of the command itself followed by arguments, separated by spaces.</source>
          <target state="translated">一个简单的shell命令（例如 &lt;code&gt;echo a b c&lt;/code&gt; 由命令本身和后跟参数（由空格分隔）组成。</target>
        </trans-unit>
        <trans-unit id="4657d4494735b6c0d32ce3d4289db11e18a3bcec" translate="yes" xml:space="preserve">
          <source>A space or tab character.</source>
          <target state="translated">一个空格或制表符。</target>
        </trans-unit>
        <trans-unit id="ae466f66b41274e0ba9901283093717d7c99ee62" translate="yes" xml:space="preserve">
          <source>A string describing the machine Bash is running on.</source>
          <target state="translated">描述Bash运行的机器的字符串。</target>
        </trans-unit>
        <trans-unit id="9a2b892f8ccaafc70fbb5c22f592bbafb5896cea" translate="yes" xml:space="preserve">
          <source>A string describing the operating system Bash is running on.</source>
          <target state="translated">描述Bash运行的操作系统的字符串。</target>
        </trans-unit>
        <trans-unit id="c4392df43999ee93cea91cf499d76114f2a626dc" translate="yes" xml:space="preserve">
          <source>A string of characters used to identify a file.</source>
          <target state="translated">用于识别文件的一串字符。</target>
        </trans-unit>
        <trans-unit id="d79562965a1998ea6358d11aee41c2e35dcb7507" translate="yes" xml:space="preserve">
          <source>A string that fully describes the system type on which Bash is executing, in the standard &lt;small&gt;GNU&lt;/small&gt;&lt;var&gt;cpu-company-system&lt;/var&gt; format.</source>
          <target state="translated">一个字符串，以标准&lt;small&gt;GNU &lt;/small&gt; &lt;var&gt;cpu-company-system&lt;/var&gt; 格式完整描述了Bash执行的系统类型。</target>
        </trans-unit>
        <trans-unit id="4b51c647854f478516816faaa0a4294dfbbba39a" translate="yes" xml:space="preserve">
          <source>A synonym for &lt;code&gt;--enable-xpg-echo-default&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--enable-xpg-echo-default&lt;/code&gt; 的同义词。</target>
        </trans-unit>
        <trans-unit id="cf16754b3c53032ef9419c2ca244a08d7b740dd2" translate="yes" xml:space="preserve">
          <source>A synonym for &lt;code&gt;--with-bash-malloc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--with-bash-malloc&lt;/code&gt; 的同义词。</target>
        </trans-unit>
        <trans-unit id="ac7de1f78cbf1e9d0cfdbad7f68070199ac4a9fb" translate="yes" xml:space="preserve">
          <source>A synonym for &lt;code&gt;.&lt;/code&gt; (see &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2aecb90857dc3bf1e847e6ca67c9f817601c381" translate="yes" xml:space="preserve">
          <source>A synonym for &lt;code&gt;.&lt;/code&gt; (see &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;).</source>
          <target state="translated">的同义词 &lt;code&gt;.&lt;/code&gt; （请参阅&lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="6aecbd3f623defa48819576cf16a217d731b27c6" translate="yes" xml:space="preserve">
          <source>A synonym for &lt;code&gt;exit status&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;exit status&lt;/code&gt; 的同义词。</target>
        </trans-unit>
        <trans-unit id="9ce9ae8fa93b7b7141632e2afca0a2fc9be70dfc" translate="yes" xml:space="preserve">
          <source>A synonym for &lt;code&gt;mapfile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mapfile&lt;/code&gt; 的同义词。</target>
        </trans-unit>
        <trans-unit id="814777a418e2fa11aca7de01f181b1cfd098bebc" translate="yes" xml:space="preserve">
          <source>A synonym for &lt;code&gt;yank-last-arg&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;yank-last-arg&lt;/code&gt; 的同义词。</target>
        </trans-unit>
        <trans-unit id="a79e80006ff7836baf7049c64402d51d1b25f024" translate="yes" xml:space="preserve">
          <source>A terse list of the differences between Bash and historical versions of /bin/sh.</source>
          <target state="translated">Bash和历史版本的/bin/sh之间的差异的简要列表。</target>
        </trans-unit>
        <trans-unit id="85017c03c76e7e150e07729b3fefaf88fedede78" translate="yes" xml:space="preserve">
          <source>A unique identifier that represents a &lt;code&gt;process group&lt;/code&gt; during its lifetime.</source>
          <target state="translated">代表 &lt;code&gt;process group&lt;/code&gt; 在其生存期内的唯一标识符。</target>
        </trans-unit>
        <trans-unit id="99b5b43d02e84bbccec9d3761416a0af5974bbc3" translate="yes" xml:space="preserve">
          <source>A unit of text that is the result of one of the shell expansions. After expansion, when executing a command, the resulting fields are used as the command name and arguments.</source>
          <target state="translated">一个文本单位,是shell扩展的结果之一。扩容后,在执行命令时,产生的字段作为命令名和参数使用。</target>
        </trans-unit>
        <trans-unit id="41ac784fc1799b692b9a46a354e08e68cb00e524" translate="yes" xml:space="preserve">
          <source>A useful alias to use with the &lt;code&gt;fc&lt;/code&gt; command is &lt;code&gt;r='fc -s'&lt;/code&gt;, so that typing &amp;lsquo;</source>
          <target state="translated">与 &lt;code&gt;fc&lt;/code&gt; 命令一起使用的有用别名是 &lt;code&gt;r='fc -s'&lt;/code&gt; ，因此键入'</target>
        </trans-unit>
        <trans-unit id="737dfb2538b45fb46cc25eb4a9749a0bec44ddca" translate="yes" xml:space="preserve">
          <source>A variable can be assigned the &lt;var&gt;nameref&lt;/var&gt; attribute using the</source>
          <target state="translated">可以使用以下命令为变量分配 &lt;var&gt;nameref&lt;/var&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="31c5a214d6dc80b05b36007da65ee08a9ada418e" translate="yes" xml:space="preserve">
          <source>A variable may be assigned to by a statement of the form</source>
          <target state="translated">变量可以通过以下形式的语句来分配。</target>
        </trans-unit>
        <trans-unit id="0338023ba3a765ef777bde1ed8befc52abf79ade" translate="yes" xml:space="preserve">
          <source>A variant of here documents, the format is:</source>
          <target state="translated">这里文件的一种变体,格式为:。</target>
        </trans-unit>
        <trans-unit id="252d322fb1b00194c1ea12b3e346d5c37cf7c915" translate="yes" xml:space="preserve">
          <source>A way to control where input and output go.</source>
          <target state="translated">一种控制输入和输出去向的方法。</target>
        </trans-unit>
        <trans-unit id="a45c10120e0d7c0c82e8fa47c73a74e42f2cf191" translate="yes" xml:space="preserve">
          <source>A way to write and read to and from a command.</source>
          <target state="translated">一种对命令进行读写的方式。</target>
        </trans-unit>
        <trans-unit id="1d19ad1c8529f327cf22fb3c28dc18e7fb6ec298" translate="yes" xml:space="preserve">
          <source>A { or &amp;lsquo;</source>
          <target state="translated">一个{或'</target>
        </trans-unit>
        <trans-unit id="b14e4cc3f9a03a17ac3f6123a6226b7b7d34c952" translate="yes" xml:space="preserve">
          <source>ADDENDUM: How to use this License for your documents</source>
          <target state="translated">附加说明:如何在您的文件中使用本许可证</target>
        </trans-unit>
        <trans-unit id="971931628c82c5896a9ec06376a8cb2748d5061f" translate="yes" xml:space="preserve">
          <source>AGGREGATION WITH INDEPENDENT WORKS</source>
          <target state="translated">与独立工作的结合</target>
        </trans-unit>
        <trans-unit id="3a18d774afe9da7588648af797a04a95e42d6162" translate="yes" xml:space="preserve">
          <source>ANSI-C Quoting</source>
          <target state="translated">ANSI-C 引用</target>
        </trans-unit>
        <trans-unit id="b6540c063922ff61fab1aa0bd54f56af814be78e" translate="yes" xml:space="preserve">
          <source>APPLICABILITY AND DEFINITIONS</source>
          <target state="translated">适用性和定义</target>
        </trans-unit>
        <trans-unit id="a10e44c42d3c33f3a8c69c57086855c06568900f" translate="yes" xml:space="preserve">
          <source>Abbreviates &amp;lsquo;</source>
          <target state="translated">缩写&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="cfa09bc4ced25ee9249aa60b40e1fd1cce442ca7" translate="yes" xml:space="preserve">
          <source>Abort the current editing command and ring the terminal&amp;rsquo;s bell (subject to the setting of &lt;code&gt;bell-style&lt;/code&gt;).</source>
          <target state="translated">中止当前的编辑命令并按终端的响铃（取决于 &lt;code&gt;bell-style&lt;/code&gt; 的设置）。</target>
        </trans-unit>
        <trans-unit id="1185716044e8b27b0e885cabcdc91205b9b3cab2" translate="yes" xml:space="preserve">
          <source>Accept the current line for execution and fetch the next line relative to the current line from the history for editing. A numeric argument, if supplied, specifies the history entry to use instead of the current line.</source>
          <target state="translated">接受当前行的执行,并从历史记录中获取相对于当前行的下一行进行编辑。如果提供了一个数字参数,则指定要使用的历史条目,而不是当前的行。</target>
        </trans-unit>
        <trans-unit id="c653ccf8bb8031eadca1f8f62cfd43aa260d9797" translate="yes" xml:space="preserve">
          <source>Accept the current line for return to the calling application as if a newline had been entered, and fetch the next line relative to the current line from the history for editing. A numeric argument, if supplied, specifies the history entry to use instead of the current line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3910fbc0f5bde7941c759f550e7d175c7329f66e" translate="yes" xml:space="preserve">
          <source>Accept the line regardless of where the cursor is. If this line is non-empty, add it to the history list according to the setting of the &lt;code&gt;HISTCONTROL&lt;/code&gt; and &lt;code&gt;HISTIGNORE&lt;/code&gt; variables. If this line is a modified history line, then restore the history line to its original state.</source>
          <target state="translated">不管光标在哪里，都接受该行。如果此行非空，则根据 &lt;code&gt;HISTCONTROL&lt;/code&gt; 和 &lt;code&gt;HISTIGNORE&lt;/code&gt; 变量的设置将其添加到历史列表中。如果此行是修改后的历史记录行，则将历史记录行恢复为其原始状态。</target>
        </trans-unit>
        <trans-unit id="3f49fccbefa728f89bbc5f0f1b6a0fc4cf7d8ab5" translate="yes" xml:space="preserve">
          <source>Add an appropriate copyright notice for your modifications adjacent to the other copyright notices.</source>
          <target state="translated">在其他版权声明旁边为您的修改添加适当的版权声明。</target>
        </trans-unit>
        <trans-unit id="2ab7aa0978917ffe80d75458c5012995ad5a49b2" translate="yes" xml:space="preserve">
          <source>Add the next character typed to the line verbatim. This is how to insert key sequences like</source>
          <target state="translated">将输入的下一个字符逐字添加到行中。这就是如何插入关键序列,如</target>
        </trans-unit>
        <trans-unit id="b655c4a5e38c570fbcf6a513cc4b1d55536fa1d6" translate="yes" xml:space="preserve">
          <source>Add this digit to the argument already accumulating, or start a new argument.</source>
          <target state="translated">将这个数字添加到已经积累的参数中,或者开始一个新的参数。</target>
        </trans-unit>
        <trans-unit id="65e8c619c5c96a73cb353e3ff68ee83d1e2b4d55" translate="yes" xml:space="preserve">
          <source>Adding or deleting builtin commands with the</source>
          <target state="translated">添加或删除内置的命令,用</target>
        </trans-unit>
        <trans-unit id="2155dd100d6f4832e9d2682d1e17e02dc94c4092" translate="yes" xml:space="preserve">
          <source>After a command has been split into words, if it results in a simple command and an optional list of arguments, the following actions are taken.</source>
          <target state="translated">在一个命令被拆成文字后,如果结果是一个简单的命令和一个可选的参数列表,则会进行以下操作。</target>
        </trans-unit>
        <trans-unit id="00f54e595827dadd84bb5634e9496d3b07fd8d68" translate="yes" xml:space="preserve">
          <source>After all expansions, &lt;code&gt;quote removal&lt;/code&gt; (see &lt;a href=&quot;quote-removal&quot;&gt;Quote Removal&lt;/a&gt;) is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2904c1f939b4543d7de10a450cd063c7a2e01b52" translate="yes" xml:space="preserve">
          <source>After all expansions, &lt;code&gt;quote removal&lt;/code&gt; (see &lt;a href=&quot;quote-removal#Quote-Removal&quot;&gt;Quote Removal&lt;/a&gt;) is performed.</source>
          <target state="translated">在所有扩展之后，将执行 &lt;code&gt;quote removal&lt;/code&gt; （请参见&lt;a href=&quot;quote-removal#Quote-Removal&quot;&gt;引用删除&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f1c8548f01f535b35b2767f7a6992144cc24d767" translate="yes" xml:space="preserve">
          <source>After all of the possible completions are generated, any filter specified with the</source>
          <target state="translated">在生成所有可能的完成后,任何用</target>
        </trans-unit>
        <trans-unit id="787162e742654db9b47bd01fba516b58fb86b835" translate="yes" xml:space="preserve">
          <source>After any matches defined by the compspec are generated, directory name completion is attempted and any matches are added to the results of the other actions.</source>
          <target state="translated">在生成compspec定义的任何匹配后,会尝试完成目录名,并将任何匹配结果添加到其他操作的结果中。</target>
        </trans-unit>
        <trans-unit id="be3e9b26ecf9b41d28fbf4163ec7f0043abcad25" translate="yes" xml:space="preserve">
          <source>After the optional word designator, you can add a sequence of one or more of the following modifiers, each preceded by a &amp;lsquo;</source>
          <target state="translated">在可选的单词指示符之后，您可以添加一个或多个以下修饰符的序列，每个修饰符前面都有一个'</target>
        </trans-unit>
        <trans-unit id="05248afa687d015664e988bf71f4fa5ecd786f01" translate="yes" xml:space="preserve">
          <source>After the preceding expansions, all unquoted occurrences of the characters &amp;lsquo;</source>
          <target state="translated">经过上述扩展后，所有未加引号的字符&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="926bc520234a1e7879dd2c8652ffc3103e7e61b3" translate="yes" xml:space="preserve">
          <source>After the string is decoded, it is expanded via parameter expansion, command substitution, arithmetic expansion, and quote removal, subject to the value of the &lt;code&gt;promptvars&lt;/code&gt; shell option (see &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;). This can have unwanted side effects if escaped portions of the string appear within command substitution or contain characters special to word expansion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ae3cf6a9ce3fd943986e966b27cdcb7da7fbce" translate="yes" xml:space="preserve">
          <source>After the string is decoded, it is expanded via parameter expansion, command substitution, arithmetic expansion, and quote removal, subject to the value of the &lt;code&gt;promptvars&lt;/code&gt; shell option (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;). This can have unwanted side effects if escaped portions of the string appear within command substitution or contain characters special to word expansion.</source>
          <target state="translated">对该字符串进行解码后，可以通过参数扩展，命令替换，算术扩展和引号删除来扩展它，但要遵守 &lt;code&gt;promptvars&lt;/code&gt; shell选项的值（请参见&lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;）。如果字符串的转义部分出现在命令替换中或包含单词扩展专用字符，则可能会产生有害的副作用。</target>
        </trans-unit>
        <trans-unit id="16dfbb6d9d837cb1b9b238d3e698830582b403e2" translate="yes" xml:space="preserve">
          <source>After these expansions are performed, quote characters present in the original word are removed unless they have been quoted themselves (&lt;var&gt;quote removal&lt;/var&gt;).</source>
          <target state="translated">执行完这些扩展后，原始单词中存在的引号字符将被删除，除非它们本身已被引号（ &lt;var&gt;quote removal&lt;/var&gt; ）。</target>
        </trans-unit>
        <trans-unit id="96e2f741bb0f7560f9df2bc495d1529c7645bc19" translate="yes" xml:space="preserve">
          <source>After these matches have been generated, any shell function or command specified with the</source>
          <target state="translated">在生成这些匹配后,任何用</target>
        </trans-unit>
        <trans-unit id="049a5fcd2a9a4bab52348a7076e20aa7eab9a406" translate="yes" xml:space="preserve">
          <source>After word splitting, unless the</source>
          <target state="translated">分词后,除非</target>
        </trans-unit>
        <trans-unit id="30d4df70d34c599dc9027febbf23cfd53228edbd" translate="yes" xml:space="preserve">
          <source>Alias expansion (see &lt;a href=&quot;aliases&quot;&gt;Aliases&lt;/a&gt;) is performed by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35103b40fbd13020766d2d929691291183192c49" translate="yes" xml:space="preserve">
          <source>Alias expansion (see &lt;a href=&quot;aliases#Aliases&quot;&gt;Aliases&lt;/a&gt;) is performed by default.</source>
          <target state="translated">默认情况下执行别名扩展（请参阅&lt;a href=&quot;aliases#Aliases&quot;&gt;Aliases&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="6f0c64070c217f2e80772cd0434c9f90b611b6cf" translate="yes" xml:space="preserve">
          <source>Alias expansion is always enabled, even in non-interactive shells.</source>
          <target state="translated">即使在非交互式的shell中,别名扩展也总是被启用。</target>
        </trans-unit>
        <trans-unit id="f8bb75544ef606006b05fc05b1eaade68fb8f1fb" translate="yes" xml:space="preserve">
          <source>Alias names. May also be specified as</source>
          <target state="translated">别名。也可指定为</target>
        </trans-unit>
        <trans-unit id="6a8b49f23c0c2e66b347773e3a4bb453ff1fb91c" translate="yes" xml:space="preserve">
          <source>Aliases</source>
          <target state="translated">Aliases</target>
        </trans-unit>
        <trans-unit id="64e853a7a196970b75eefc8d2e104ea836814536" translate="yes" xml:space="preserve">
          <source>Aliases are created and listed with the &lt;code&gt;alias&lt;/code&gt; command, and removed with the &lt;code&gt;unalias&lt;/code&gt; command.</source>
          <target state="translated">使用 &lt;code&gt;alias&lt;/code&gt; 命令创建并列出别名，然后使用 &lt;code&gt;unalias&lt;/code&gt; 命令删除别名。</target>
        </trans-unit>
        <trans-unit id="0fe40f4f6b0250121206487e887376258d46299a" translate="yes" xml:space="preserve">
          <source>Aliases are not expanded when the shell is not interactive, unless the &lt;code&gt;expand_aliases&lt;/code&gt; shell option is set using &lt;code&gt;shopt&lt;/code&gt; (see &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64f8f4d59593bf629d55277c1d5d40d3bb2dc29" translate="yes" xml:space="preserve">
          <source>Aliases are not expanded when the shell is not interactive, unless the &lt;code&gt;expand_aliases&lt;/code&gt; shell option is set using &lt;code&gt;shopt&lt;/code&gt; (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;).</source>
          <target state="translated">如果外壳不是交互式的，则别名不会扩展，除非使用 &lt;code&gt;shopt&lt;/code&gt; 设置 &lt;code&gt;expand_aliases&lt;/code&gt; shell选项（请参见&lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a0b329019bddac323dc5879ef54f2645cd8e3ab5" translate="yes" xml:space="preserve">
          <source>All arguments in the form of assignment statements are placed in the environment for a command, not just those that precede the command name.</source>
          <target state="translated">所有以赋值语句形式存在的参数都会被放置在命令的环境中,而不仅仅是命令名称前面的参数。</target>
        </trans-unit>
        <trans-unit id="900369ab031328dd16f86ee04b7ad3d92ccdc048" translate="yes" xml:space="preserve">
          <source>All bug reports should include:</source>
          <target state="translated">所有错误报告应包括:</target>
        </trans-unit>
        <trans-unit id="f323195ba0ab4a1731e1741dab1eac7f6f580892" translate="yes" xml:space="preserve">
          <source>All current limits are reported.</source>
          <target state="translated">所有当前的限制都会被报告。</target>
        </trans-unit>
        <trans-unit id="6a585088e152017d05113d99722919911386f954" translate="yes" xml:space="preserve">
          <source>All current limits are reported; no limits are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2dd15f1ca20763e0cc7f800424a495157661676" translate="yes" xml:space="preserve">
          <source>All of the Bash builtins return an exit status of zero if they succeed and a non-zero status on failure, so they may be used by the conditional and list constructs. All builtins return an exit status of 2 to indicate incorrect usage, generally invalid options or missing arguments.</source>
          <target state="translated">所有的Bash内建函数如果成功的话都会返回一个0的退出状态,而失败时则返回一个非0的状态,所以它们可能会被条件和列表结构使用。所有的内建函数都会返回一个2的退出状态来表示不正确的使用,通常是无效的选项或缺少参数。</target>
        </trans-unit>
        <trans-unit id="1a7736a0cb32b47b98ad01bd5af8e3ff0270dd2f" translate="yes" xml:space="preserve">
          <source>All of the following options except for &amp;lsquo;</source>
          <target state="translated">除&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="f7845477f6e71dc123f871030f165ade40fa5087" translate="yes" xml:space="preserve">
          <source>All of the single-character options used with the &lt;code&gt;set&lt;/code&gt; builtin (see &lt;a href=&quot;the-set-builtin&quot;&gt;The Set Builtin&lt;/a&gt;) can be used as options when the shell is invoked. In addition, there are several multi-character options that you can use. These options must appear on the command line before the single-character options to be recognized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b91cd60f31e7d1ff4dc26dd03e06ac0c9fcac4" translate="yes" xml:space="preserve">
          <source>All of the single-character options used with the &lt;code&gt;set&lt;/code&gt; builtin (see &lt;a href=&quot;the-set-builtin#The-Set-Builtin&quot;&gt;The Set Builtin&lt;/a&gt;) can be used as options when the shell is invoked. In addition, there are several multi-character options that you can use. These options must appear on the command line before the single-character options to be recognized.</source>
          <target state="translated">调用shell时，可以将与 &lt;code&gt;set&lt;/code&gt; setin 一起使用的所有单字符选项（请参阅&lt;a href=&quot;the-set-builtin#The-Set-Builtin&quot;&gt;The Set Builtin&lt;/a&gt;）用作选项。此外，还可以使用多个多字符选项。这些选项必须出现在命令行上，然后才能识别单字符选项。</target>
        </trans-unit>
        <trans-unit id="3a8269c0010524e77e7bd9d579f948fab4279275" translate="yes" xml:space="preserve">
          <source>All of the words, except the &lt;code&gt;0&lt;/code&gt;th. This is a synonym for &amp;lsquo;</source>
          <target state="translated">除 &lt;code&gt;0&lt;/code&gt; 以外的所有单词。这是&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="715f4a0e6243c6aba6e3fa8a6ca3cb4f7b99e46b" translate="yes" xml:space="preserve">
          <source>All other aspects of the shell execution environment are identical between a function and its caller with these exceptions: the &lt;code&gt;DEBUG&lt;/code&gt; and &lt;code&gt;RETURN&lt;/code&gt; traps are not inherited unless the function has been given the &lt;code&gt;trace&lt;/code&gt; attribute using the &lt;code&gt;declare&lt;/code&gt; builtin or the &lt;code&gt;-o functrace&lt;/code&gt; option has been enabled with the &lt;code&gt;set&lt;/code&gt; builtin, (in which case all functions inherit the &lt;code&gt;DEBUG&lt;/code&gt; and &lt;code&gt;RETURN&lt;/code&gt; traps), and the &lt;code&gt;ERR&lt;/code&gt; trap is not inherited unless the &lt;code&gt;-o errtrace&lt;/code&gt; shell option has been enabled. See &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;, for the description of the &lt;code&gt;trap&lt;/code&gt; builtin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1819a547f1ba68bbe7a417025d58b702dd1422" translate="yes" xml:space="preserve">
          <source>All other aspects of the shell execution environment are identical between a function and its caller with these exceptions: the &lt;code&gt;DEBUG&lt;/code&gt; and &lt;code&gt;RETURN&lt;/code&gt; traps are not inherited unless the function has been given the &lt;code&gt;trace&lt;/code&gt; attribute using the &lt;code&gt;declare&lt;/code&gt; builtin or the &lt;code&gt;-o functrace&lt;/code&gt; option has been enabled with the &lt;code&gt;set&lt;/code&gt; builtin, (in which case all functions inherit the &lt;code&gt;DEBUG&lt;/code&gt; and &lt;code&gt;RETURN&lt;/code&gt; traps), and the &lt;code&gt;ERR&lt;/code&gt; trap is not inherited unless the &lt;code&gt;-o errtrace&lt;/code&gt; shell option has been enabled. See &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;, for the description of the &lt;code&gt;trap&lt;/code&gt; builtin.</source>
          <target state="translated">在shell执行环境的所有其他方面的功能和它的这些异常调用者之间是相同的：在 &lt;code&gt;DEBUG&lt;/code&gt; 和 &lt;code&gt;RETURN&lt;/code&gt; 陷阱是不能继承的，除非该功能已经给出了 &lt;code&gt;trace&lt;/code&gt; 使用属性 &lt;code&gt;declare&lt;/code&gt; 内置或 &lt;code&gt;-o functrace&lt;/code&gt; 选项已启用使用内置的 &lt;code&gt;set&lt;/code&gt; （在这种情况下，所有函数都继承 &lt;code&gt;DEBUG&lt;/code&gt; 和 &lt;code&gt;RETURN&lt;/code&gt; 陷阱），除非启用了 &lt;code&gt;-o errtrace&lt;/code&gt; shell选项，否则不会继承 &lt;code&gt;ERR&lt;/code&gt; 陷阱。有关 &lt;code&gt;trap&lt;/code&gt; 的说明，请参见&lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;。 内置的。</target>
        </trans-unit>
        <trans-unit id="fcb847068540a70ace9bdf3063f5157553f84b07" translate="yes" xml:space="preserve">
          <source>Allow a word beginning with &amp;lsquo;</source>
          <target state="translated">允许以&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="62d387a0ff3c46267101d96a26128264333daa94" translate="yes" xml:space="preserve">
          <source>Allow alias expansion and include the &lt;code&gt;alias&lt;/code&gt; and &lt;code&gt;unalias&lt;/code&gt; builtins (see &lt;a href=&quot;aliases&quot;&gt;Aliases&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f823521bf80288ef64c850de978c60e53956d8cf" translate="yes" xml:space="preserve">
          <source>Allow alias expansion and include the &lt;code&gt;alias&lt;/code&gt; and &lt;code&gt;unalias&lt;/code&gt; builtins (see &lt;a href=&quot;aliases#Aliases&quot;&gt;Aliases&lt;/a&gt;).</source>
          <target state="translated">允许别名扩展并包括 &lt;code&gt;alias&lt;/code&gt; 和 &lt;code&gt;unalias&lt;/code&gt; 建宏（见&lt;a href=&quot;aliases#Aliases&quot;&gt;别名&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4c481879f86468cd2021504310407096eb202f59" translate="yes" xml:space="preserve">
          <source>Allow builtin commands to be invoked via &amp;lsquo;</source>
          <target state="translated">允许通过'调用内置命令</target>
        </trans-unit>
        <trans-unit id="596ff57a26f984953c2193ef2640abc76eaffc67" translate="yes" xml:space="preserve">
          <source>Alternatively, if your system supports symbolic links, you can use the</source>
          <target state="translated">或者,如果你的系统支持符号链接,你可以使用</target>
        </trans-unit>
        <trans-unit id="68b64e3c7c22ecb08f0b2b8903a2765abb0d7bb6" translate="yes" xml:space="preserve">
          <source>Alternatively, startup scripts may examine the variable &lt;code&gt;PS1&lt;/code&gt;; it is unset in non-interactive shells, and set in interactive shells. Thus:</source>
          <target state="translated">另外，启动脚本可以检查变量 &lt;code&gt;PS1&lt;/code&gt; ；在非交互式shell中未设置它，而在交互式shell中设置。从而：</target>
        </trans-unit>
        <trans-unit id="17ea31460367cd96aa2c9737323d86260e719c68" translate="yes" xml:space="preserve">
          <source>Although the Readline library comes with a set of Emacs-like keybindings installed by default, it is possible to use a different set of keybindings. Any user can customize programs that use Readline by putting commands in an &lt;em&gt;inputrc&lt;/em&gt; file, conventionally in his home directory. The name of this file is taken from the value of the shell variable &lt;code&gt;INPUTRC&lt;/code&gt;. If that variable is unset, the default is</source>
          <target state="translated">尽管Readline库默认情况下安装了一组类似Emacs的键绑定，但是可以使用另一组键绑定。任何用户都可以通过将命令放入&lt;em&gt;inputrc&lt;/em&gt;文件（通常位于其主目录中）来定制使用Readline的程序。该文件的名称取自外壳变量 &lt;code&gt;INPUTRC&lt;/code&gt; 的值。如果未设置该变量，则默认为</target>
        </trans-unit>
        <trans-unit id="647135cf2bf3285ccccba517a9575b72491b05ce" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;interactive&lt;/em&gt; shell is one started without non-option arguments, unless</source>
          <target state="translated">一个&lt;em&gt;交互式的&lt;/em&gt; shell，是一个启动时没有指定非选项参数，除非</target>
        </trans-unit>
        <trans-unit id="f1d33bdb4abac3861bd6f420496f6f4650f9d545" translate="yes" xml:space="preserve">
          <source>An &lt;small&gt;AND&lt;/small&gt; list has the form</source>
          <target state="translated">一个&lt;small&gt;AND&lt;/small&gt;序列的形式是</target>
        </trans-unit>
        <trans-unit id="b4c7ac010f7fdde664d19931cca6f079d855febe" translate="yes" xml:space="preserve">
          <source>An &lt;small&gt;OR&lt;/small&gt; list has the form</source>
          <target state="translated">一个&lt;small&gt;OR&lt;/small&gt;序列的形式是</target>
        </trans-unit>
        <trans-unit id="0e35ea179df1c8046802c8de880d5adbf3846ada" translate="yes" xml:space="preserve">
          <source>An MMC is &amp;ldquo;eligible for relicensing&amp;rdquo; if it is licensed under this License, and if all works that were first published under this License somewhere other than this MMC, and subsequently incorporated in whole or in part into the MMC, (1) had no cover texts or invariant sections, and (2) were thus incorporated prior to November 1, 2008.</source>
          <target state="translated">如果MMC已根据本许可获得许可，并且所有根据本许可在MMC以外的其他地方首次发行并随后全部或部分合并到MMC中的作品，则该MMC是&amp;ldquo;有资格获得许可的&amp;rdquo;，（1）没有封面文字或不变部分，因此（2）在2008年11月1日之前合并。</target>
        </trans-unit>
        <trans-unit id="c69d404ed09f60d24f90f5d3d4bd4aec2f861cc7" translate="yes" xml:space="preserve">
          <source>An additional binary operator, &amp;lsquo;</source>
          <target state="translated">另一个二进制运算符，'</target>
        </trans-unit>
        <trans-unit id="502742a046a92d6d357071adabe278a29c3e9ac0" translate="yes" xml:space="preserve">
          <source>An alternate form of the &lt;code&gt;for&lt;/code&gt; command is also supported:</source>
          <target state="translated">还支持 &lt;code&gt;for&lt;/code&gt; 命令的另一种形式：</target>
        </trans-unit>
        <trans-unit id="a679498f15ab401384971acf6987151cdd237fee" translate="yes" xml:space="preserve">
          <source>An array variable (see &lt;a href=&quot;arrays&quot;&gt;Arrays&lt;/a&gt;) containing a list of exit status values from the processes in the most-recently-executed foreground pipeline (which may contain only a single command).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e2cfbabadbce626d66da52e033ff99ffa20f42" translate="yes" xml:space="preserve">
          <source>An array variable (see &lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;) containing a list of exit status values from the processes in the most-recently-executed foreground pipeline (which may contain only a single command).</source>
          <target state="translated">一个数组变量（请参阅&lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;），其中包含最近执行的前台管道（可能仅包含一个命令）中进程的退出状态值的列表。</target>
        </trans-unit>
        <trans-unit id="486148f1507e13f4c38c0624536341609547bc8c" translate="yes" xml:space="preserve">
          <source>An array variable consisting of the individual words in the current command line. The line is split into words as Readline would split it, using &lt;code&gt;COMP_WORDBREAKS&lt;/code&gt; as described above. This variable is available only in shell functions invoked by the programmable completion facilities (see &lt;a href=&quot;programmable-completion&quot;&gt;Programmable Completion&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49817fd6fc89f4786bb978f98a3a31b666bf485f" translate="yes" xml:space="preserve">
          <source>An array variable consisting of the individual words in the current command line. The line is split into words as Readline would split it, using &lt;code&gt;COMP_WORDBREAKS&lt;/code&gt; as described above. This variable is available only in shell functions invoked by the programmable completion facilities (see &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;Programmable Completion&lt;/a&gt;).</source>
          <target state="translated">由当前命令行中的各个单词组成的数组变量。如上所述，使用 &lt;code&gt;COMP_WORDBREAKS&lt;/code&gt; 将行拆分为单词，就像Readline将其拆分一样。该变量仅在由可编程完成工具调用的shell函数中可用（请参见&lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;Programmable Completion&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e593de423ced79b2e7ddd2f064882ee20b3500fa" translate="yes" xml:space="preserve">
          <source>An array variable containing all of the parameters in the current bash execution call stack. The final parameter of the last subroutine call is at the top of the stack; the first parameter of the initial call is at the bottom. When a subroutine is executed, the parameters supplied are pushed onto &lt;code&gt;BASH_ARGV&lt;/code&gt;. The shell sets &lt;code&gt;BASH_ARGV&lt;/code&gt; only when in extended debugging mode (see &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt; for a description of the &lt;code&gt;extdebug&lt;/code&gt; option to the &lt;code&gt;shopt&lt;/code&gt; builtin). Setting &lt;code&gt;extdebug&lt;/code&gt; after the shell has started to execute a script, or referencing this variable when &lt;code&gt;extdebug&lt;/code&gt; is not set, may result in inconsistent values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e444cdd3d38e10c7f2e87cc4998685a8f1fc68fb" translate="yes" xml:space="preserve">
          <source>An array variable containing all of the parameters in the current bash execution call stack. The final parameter of the last subroutine call is at the top of the stack; the first parameter of the initial call is at the bottom. When a subroutine is executed, the parameters supplied are pushed onto &lt;code&gt;BASH_ARGV&lt;/code&gt;. The shell sets &lt;code&gt;BASH_ARGV&lt;/code&gt; only when in extended debugging mode (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt; for a description of the &lt;code&gt;extdebug&lt;/code&gt; option to the &lt;code&gt;shopt&lt;/code&gt; builtin). Setting &lt;code&gt;extdebug&lt;/code&gt; after the shell has started to execute a script, or referencing this variable when &lt;code&gt;extdebug&lt;/code&gt; is not set, may result in inconsistent values.</source>
          <target state="translated">一个数组变量，包含当前bash执行调用堆栈中的所有参数。最后一个子例程调用的最后一个参数位于堆栈的顶部；初始调用的第一个参数在底部。当执行子例程时，提供的参数将被推送到 &lt;code&gt;BASH_ARGV&lt;/code&gt; 上。壳套 &lt;code&gt;BASH_ARGV&lt;/code&gt; 仅在扩展调试模式（见当&lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;shopt内建&lt;/a&gt;的的描述 &lt;code&gt;extdebug&lt;/code&gt; 选项来 &lt;code&gt;shopt&lt;/code&gt; 内建）。在外壳程序开始执行脚本之后设置 &lt;code&gt;extdebug&lt;/code&gt; ，或者在未设置 &lt;code&gt;extdebug&lt;/code&gt; 时引用此变量，可能会导致值不一致。</target>
        </trans-unit>
        <trans-unit id="f85b6cd27ce68b4d5f5591ccc1816337286c957b" translate="yes" xml:space="preserve">
          <source>An array variable containing the current contents of the directory stack. Directories appear in the stack in the order they are displayed by the &lt;code&gt;dirs&lt;/code&gt; builtin. Assigning to members of this array variable may be used to modify directories already in the stack, but the &lt;code&gt;pushd&lt;/code&gt; and &lt;code&gt;popd&lt;/code&gt; builtins must be used to add and remove directories. Assignment to this variable will not change the current directory. If &lt;code&gt;DIRSTACK&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">包含目录堆栈当前内容的数组变量。目录按内置 &lt;code&gt;dirs&lt;/code&gt; 显示顺序出现在堆栈中。分配给该数组变量的成员可被用于已修改的目录在堆栈，但 &lt;code&gt;pushd&lt;/code&gt; 和 &lt;code&gt;popd&lt;/code&gt; 建宏必须使用来添加和删除目录。分配给该变量将不会更改当前目录。如果 &lt;code&gt;DIRSTACK&lt;/code&gt; 设置DIRSTACK，则即使随后将其重置，它也会丢失其特殊属性。</target>
        </trans-unit>
        <trans-unit id="fa313acc4290db5740c52a1a9d9418893bb7867b" translate="yes" xml:space="preserve">
          <source>An array variable containing the list of groups of which the current user is a member. Assignments to &lt;code&gt;GROUPS&lt;/code&gt; have no effect. If &lt;code&gt;GROUPS&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">一个数组变量，其中包含当前用户是其成员的组的列表。分配到 &lt;code&gt;GROUPS&lt;/code&gt; 无效。如果未设置 &lt;code&gt;GROUPS&lt;/code&gt; ，则即使随后将其重置，它也会丢失其特殊属性。</target>
        </trans-unit>
        <trans-unit id="5eb9cf24f8e2f9c0f5f3e7415fcfb67b6c90f6be" translate="yes" xml:space="preserve">
          <source>An array variable containing the names of all shell functions currently in the execution call stack. The element with index 0 is the name of any currently-executing shell function. The bottom-most element (the one with the highest index) is &lt;code&gt;&quot;main&quot;&lt;/code&gt;. This variable exists only when a shell function is executing. Assignments to &lt;code&gt;FUNCNAME&lt;/code&gt; have no effect. If &lt;code&gt;FUNCNAME&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">一个数组变量，包含当前在执行调用堆栈中的所有shell函数的名称。索引为0的元素是任何当前正在执行的Shell函数的名称。最底部的元素（具有最高索引的元素）是 &lt;code&gt;&quot;main&quot;&lt;/code&gt; 。该变量仅在执行Shell函数时存在。分配给 &lt;code&gt;FUNCNAME&lt;/code&gt; 无效。如果 &lt;code&gt;FUNCNAME&lt;/code&gt; 设置FUNCNAME，则即使随后将其重置，它也会丢失其特殊属性。</target>
        </trans-unit>
        <trans-unit id="f82a262029a94bec4c5d0c721785052509698f06" translate="yes" xml:space="preserve">
          <source>An array variable created to hold the file descriptors for output from and input to an unnamed coprocess (see &lt;a href=&quot;coprocesses&quot;&gt;Coprocesses&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ca086c729cd8769b8319b837f8007af03e3602e" translate="yes" xml:space="preserve">
          <source>An array variable created to hold the file descriptors for output from and input to an unnamed coprocess (see &lt;a href=&quot;coprocesses#Coprocesses&quot;&gt;Coprocesses&lt;/a&gt;).</source>
          <target state="translated">创建一个数组变量来保存文件描述符，以供未命名的协同处理程序输出和输入（未命名的协同处理程序）（请参阅&lt;a href=&quot;coprocesses#Coprocesses&quot;&gt;Coprocesses&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f1d1aa701682aa2534a751bc3dac4b6fc52387fb" translate="yes" xml:space="preserve">
          <source>An array variable created to hold the text read by the &lt;code&gt;mapfile&lt;/code&gt; builtin when no variable name is supplied.</source>
          <target state="translated">未提供变量名时创建的数组变量，用于保存由 &lt;code&gt;mapfile&lt;/code&gt; 内置文件读取的文本。</target>
        </trans-unit>
        <trans-unit id="428cc75017337801637108110b5d6914d4d39363" translate="yes" xml:space="preserve">
          <source>An array variable from which Bash reads the possible completions generated by a shell function invoked by the programmable completion facility (see &lt;a href=&quot;programmable-completion&quot;&gt;Programmable Completion&lt;/a&gt;). Each array element contains one possible completion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9890edf8c7f3cb741e889e1d2041b3e6ee9494b6" translate="yes" xml:space="preserve">
          <source>An array variable from which Bash reads the possible completions generated by a shell function invoked by the programmable completion facility (see &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;Programmable Completion&lt;/a&gt;). Each array element contains one possible completion.</source>
          <target state="translated">Bash从中读取数组变量，该变量由可编程完成工具调用的shell函数生成的可能的完成（请参阅&lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;Programmable Completion&lt;/a&gt;）。每个数组元素包含一个可能的补全。</target>
        </trans-unit>
        <trans-unit id="032f83df13d7243eb6ee703b305875fe66115713" translate="yes" xml:space="preserve">
          <source>An array variable is considered set if a subscript has been assigned a value. The null string is a valid value.</source>
          <target state="translated">如果一个数组变量的下标已经被分配了一个值,那么这个数组变量就被认为是被设置的。空字符串是一个有效的值。</target>
        </trans-unit>
        <trans-unit id="3e4ba7e20d0d5861b85a4b485e97a50af4f2229a" translate="yes" xml:space="preserve">
          <source>An array variable whose members are assigned by the &amp;lsquo;</source>
          <target state="translated">一个数组变量，其成员由'</target>
        </trans-unit>
        <trans-unit id="e5fb9da983a81153b675febc370fd7d43ea294f1" translate="yes" xml:space="preserve">
          <source>An array variable whose members are the line numbers in source files where each corresponding member of &lt;var&gt;FUNCNAME&lt;/var&gt; was invoked. &lt;code&gt;${BASH_LINENO[$i]}&lt;/code&gt; is the line number in the source file (&lt;code&gt;${BASH_SOURCE[$i+1]}&lt;/code&gt;) where &lt;code&gt;${FUNCNAME[$i]}&lt;/code&gt; was called (or &lt;code&gt;${BASH_LINENO[$i-1]}&lt;/code&gt; if referenced within another shell function). Use &lt;code&gt;LINENO&lt;/code&gt; to obtain the current line number.</source>
          <target state="translated">一个数组变量，其成员是源文件中调用 &lt;var&gt;FUNCNAME&lt;/var&gt; 的每个对应成员的行号。 &lt;code&gt;${BASH_LINENO[$i]}&lt;/code&gt; 是源文件（ &lt;code&gt;${BASH_SOURCE[$i+1]}&lt;/code&gt; ）中 &lt;code&gt;${FUNCNAME[$i]}&lt;/code&gt; 号（或 &lt;code&gt;${BASH_LINENO[$i-1]}&lt;/code&gt; 如果在另一个shell函数中引用）。使用 &lt;code&gt;LINENO&lt;/code&gt; 获取当前行号。</target>
        </trans-unit>
        <trans-unit id="af169c4aad6b05ec1e966f36c83d8d7005cd7e0a" translate="yes" xml:space="preserve">
          <source>An array variable whose members are the source filenames where the corresponding shell function names in the &lt;code&gt;FUNCNAME&lt;/code&gt; array variable are defined. The shell function &lt;code&gt;${FUNCNAME[$i]}&lt;/code&gt; is defined in the file &lt;code&gt;${BASH_SOURCE[$i]}&lt;/code&gt; and called from &lt;code&gt;${BASH_SOURCE[$i+1]}&lt;/code&gt;</source>
          <target state="translated">一个数组变量，其成员是源文件名，在其中定义了 &lt;code&gt;FUNCNAME&lt;/code&gt; 数组变量中的相应外壳函数名称。外壳函数 &lt;code&gt;${FUNCNAME[$i]}&lt;/code&gt; 在文件 &lt;code&gt;${BASH_SOURCE[$i]}&lt;/code&gt; 定义，并从 &lt;code&gt;${BASH_SOURCE[$i+1]}&lt;/code&gt; 调用</target>
        </trans-unit>
        <trans-unit id="2ef8efeeb2b5f37de837af4aa93ee98c454d096c" translate="yes" xml:space="preserve">
          <source>An array variable whose values are the number of parameters in each frame of the current bash execution call stack. The number of parameters to the current subroutine (shell function or script executed with &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;source&lt;/code&gt;) is at the top of the stack. When a subroutine is executed, the number of parameters passed is pushed onto &lt;code&gt;BASH_ARGC&lt;/code&gt;. The shell sets &lt;code&gt;BASH_ARGC&lt;/code&gt; only when in extended debugging mode (see &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt; for a description of the &lt;code&gt;extdebug&lt;/code&gt; option to the &lt;code&gt;shopt&lt;/code&gt; builtin). Setting &lt;code&gt;extdebug&lt;/code&gt; after the shell has started to execute a script, or referencing this variable when &lt;code&gt;extdebug&lt;/code&gt; is not set, may result in inconsistent values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35edd346f768fcd9ee1e2878caf16d4727ec2c2e" translate="yes" xml:space="preserve">
          <source>An array variable whose values are the number of parameters in each frame of the current bash execution call stack. The number of parameters to the current subroutine (shell function or script executed with &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;source&lt;/code&gt;) is at the top of the stack. When a subroutine is executed, the number of parameters passed is pushed onto &lt;code&gt;BASH_ARGC&lt;/code&gt;. The shell sets &lt;code&gt;BASH_ARGC&lt;/code&gt; only when in extended debugging mode (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt; for a description of the &lt;code&gt;extdebug&lt;/code&gt; option to the &lt;code&gt;shopt&lt;/code&gt; builtin). Setting &lt;code&gt;extdebug&lt;/code&gt; after the shell has started to execute a script, or referencing this variable when &lt;code&gt;extdebug&lt;/code&gt; is not set, may result in inconsistent values.</source>
          <target state="translated">一个数组变量，其值是当前bash执行调用堆栈每一帧中的参数数。当前子例程（使用 &lt;code&gt;.&lt;/code&gt; 或 &lt;code&gt;source&lt;/code&gt; 执行的shell函数或脚本）的参数数量位于堆栈的顶部。当执行子例程时，传递的参数数量 &lt;code&gt;BASH_ARGC&lt;/code&gt; 入BASH_ARGC。外壳 &lt;code&gt;BASH_ARGC&lt;/code&gt; 仅在扩展调试模式下才设置BASH_ARGC（请参阅&lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;Shopt内置工具&lt;/a&gt;，以获取 &lt;code&gt;shopt&lt;/code&gt; 内置工具的 &lt;code&gt;extdebug&lt;/code&gt; 选项的说明）。在外壳程序开始执行脚本之后设置 &lt;code&gt;extdebug&lt;/code&gt; ，或者在 &lt;code&gt;extdebug&lt;/code&gt; 时引用此变量 未设置，可能导​​致值不一致。</target>
        </trans-unit>
        <trans-unit id="42f45e0e45f707875dd26ad9ea6597a4f8a2a66f" translate="yes" xml:space="preserve">
          <source>An associative array variable whose members correspond to the internal hash table of commands as maintained by the &lt;code&gt;hash&lt;/code&gt; builtin (see &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;). Elements added to this array appear in the hash table; however, unsetting array elements currently does not cause command names to be removed from the hash table. If &lt;code&gt;BASH_CMDS&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644a56cc1847242f7b3eb5598257652b047603a4" translate="yes" xml:space="preserve">
          <source>An associative array variable whose members correspond to the internal hash table of commands as maintained by the &lt;code&gt;hash&lt;/code&gt; builtin (see &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;). Elements added to this array appear in the hash table; however, unsetting array elements currently does not cause command names to be removed from the hash table. If &lt;code&gt;BASH_CMDS&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">关联数组变量，其成员对应于作为保持由所述命令的内部散列表 &lt;code&gt;hash&lt;/code&gt; 内建（参见&lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell的内置命令&lt;/a&gt;）。添加到该数组的元素出现在哈希表中；但是，取消设置数组元素当前不会导致命令名称从哈希表中删除。如果 &lt;code&gt;BASH_CMDS&lt;/code&gt; 设置BASH_CMDS，即使随后将其重置，它也会丢失其特殊属性。</target>
        </trans-unit>
        <trans-unit id="5ce493aa14fd82bc90d11c64f4aeace236ab0e75" translate="yes" xml:space="preserve">
          <source>An associative array variable whose members correspond to the internal list of aliases as maintained by the &lt;code&gt;alias&lt;/code&gt; builtin. (see &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;). Elements added to this array appear in the alias list; however, unsetting array elements currently does not cause aliases to be removed from the alias list. If &lt;code&gt;BASH_ALIASES&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af5859e874886cdb1ddf21e5742b1e6226fe170c" translate="yes" xml:space="preserve">
          <source>An associative array variable whose members correspond to the internal list of aliases as maintained by the &lt;code&gt;alias&lt;/code&gt; builtin. (see &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;). Elements added to this array appear in the alias list; however, unsetting array elements currently does not cause aliases to be removed from the alias list. If &lt;code&gt;BASH_ALIASES&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">关联数组变量，其成员对应于 &lt;code&gt;alias&lt;/code&gt; 内置由别名内置维护的内部列表。（请参阅&lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;）。添加到该数组的元素将出现在别名列表中；但是，取消设置数组元素当前不会导致别名从别名列表中删除。如果 &lt;code&gt;BASH_ALIASES&lt;/code&gt; 设置BASH_ALIASES，则即使随后将其重置，它也会失去其特殊属性。</target>
        </trans-unit>
        <trans-unit id="fca5efbf92b800d08290da89c89c5c1b271827d2" translate="yes" xml:space="preserve">
          <source>An escape character.</source>
          <target state="translated">一个逃跑的角色。</target>
        </trans-unit>
        <trans-unit id="9a9035d6c34d533d04f6b7a05e9f5de07690c984" translate="yes" xml:space="preserve">
          <source>An event designator is a reference to a command line entry in the history list. Unless the reference is absolute, events are relative to the current position in the history list.</source>
          <target state="translated">事件代号是对历史列表中命令行条目的引用。除非引用是绝对的,否则事件是相对于历史列表中的当前位置而言的。</target>
        </trans-unit>
        <trans-unit id="a4169a64dd8d1552aabc828b96115afa36b66ef7" translate="yes" xml:space="preserve">
          <source>An example inputrc file.</source>
          <target state="translated">输入rc文件的例子。</target>
        </trans-unit>
        <trans-unit id="7616a0cb0a5efad420a53b0c332e8e599cb210fc" translate="yes" xml:space="preserve">
          <source>An example shell function for generating possible completions.</source>
          <target state="translated">一个用于生成可能完成的shell函数的例子。</target>
        </trans-unit>
        <trans-unit id="0060202355b1398b8e9f8b6914c769e156faf28d" translate="yes" xml:space="preserve">
          <source>An index into &lt;code&gt;${COMP_WORDS}&lt;/code&gt; of the word containing the current cursor position. This variable is available only in shell functions invoked by the programmable completion facilities (see &lt;a href=&quot;programmable-completion&quot;&gt;Programmable Completion&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5fa57883d9bf7e3735c2074beadbd12d19d7ae" translate="yes" xml:space="preserve">
          <source>An index into &lt;code&gt;${COMP_WORDS}&lt;/code&gt; of the word containing the current cursor position. This variable is available only in shell functions invoked by the programmable completion facilities (see &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;Programmable Completion&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;${COMP_WORDS}&lt;/code&gt; 中包含当前光标位置的单词的索引。该变量仅在由可编程完成工具调用的shell函数中可用（请参见&lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;Programmable Completion&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="6193d16ce12acf45b8e18b71bd531c2ad8f6344f" translate="yes" xml:space="preserve">
          <source>An indexed array is created automatically if any variable is assigned to using the syntax</source>
          <target state="translated">如果使用语法将任何变量分配给了一个有索引的数组,数组就会自动创建。</target>
        </trans-unit>
        <trans-unit id="35305904e96706a2bfef30cff00b88301e3f8cfd" translate="yes" xml:space="preserve">
          <source>An interactive login shell sends a &lt;code&gt;SIGHUP&lt;/code&gt; to all jobs on exit if the &lt;code&gt;huponexit&lt;/code&gt; shell option has been enabled (see &lt;a href=&quot;signals&quot;&gt;Signals&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8c368c57c3302e8b0dac17b95c434cf308233b" translate="yes" xml:space="preserve">
          <source>An interactive login shell sends a &lt;code&gt;SIGHUP&lt;/code&gt; to all jobs on exit if the &lt;code&gt;huponexit&lt;/code&gt; shell option has been enabled (see &lt;a href=&quot;signals#Signals&quot;&gt;Signals&lt;/a&gt;).</source>
          <target state="translated">如果启用了 &lt;code&gt;huponexit&lt;/code&gt; shell选项，那么交互式登录Shell将在退出时向所有作业发送 &lt;code&gt;SIGHUP&lt;/code&gt; （请参见&lt;a href=&quot;signals#Signals&quot;&gt;Signals&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="befd6401b60b10cda25e5684211c470f451afe92" translate="yes" xml:space="preserve">
          <source>An interactive shell generally reads from and writes to a user&amp;rsquo;s terminal.</source>
          <target state="translated">交互式外壳程序通常从用户终端读取和写入用户终端。</target>
        </trans-unit>
        <trans-unit id="f5937a112852c4e884ce08b30d70f06a04360ec1" translate="yes" xml:space="preserve">
          <source>An interactive shell is one started without non-option arguments, unless</source>
          <target state="translated">一个交互式的shell是一个没有非选项参数的启动,除非</target>
        </trans-unit>
        <trans-unit id="4f15e2375ce8441424a30be0fe247b676ddf4759" translate="yes" xml:space="preserve">
          <source>An interactive shell will not exit upon reading EOF.</source>
          <target state="translated">交互式shell在读到EOF时不会退出。</target>
        </trans-unit>
        <trans-unit id="435c8fb72723c7fb7507f1830dd3f0016b903ac6" translate="yes" xml:space="preserve">
          <source>An introduction to the shell.</source>
          <target state="translated">壳的介绍。</target>
        </trans-unit>
        <trans-unit id="cedbd6925272d7dd15fe8ba2a4365347eeea9818" translate="yes" xml:space="preserve">
          <source>An older version of the bash_completion package is distributed with bash in the</source>
          <target state="translated">一个旧版本的bash_completion包与bash一起发布,位于</target>
        </trans-unit>
        <trans-unit id="4c3503edec7f8f2fb276fe9373a5ee916d62ca0e" translate="yes" xml:space="preserve">
          <source>Any character that appears in a pattern, other than the special pattern characters described below, matches itself. The &lt;small&gt;NUL&lt;/small&gt; character may not occur in a pattern. A backslash escapes the following character; the escaping backslash is discarded when matching. The special pattern characters must be quoted if they are to be matched literally.</source>
          <target state="translated">模式中显示的任何字符（以下所述的特殊模式字符除外）都可以匹配。该&lt;small&gt;NUL&lt;/small&gt;可以以图案不会发生字符。反斜杠转义以下字符；匹配时，转义的反斜杠将被丢弃。如果要在字面上进行匹配，则必须对特殊模式字符加引号。</target>
        </trans-unit>
        <trans-unit id="96fbf8be8e8b3b1637c65d31d53122984b4799a7" translate="yes" xml:space="preserve">
          <source>Any completions specified by a filename expansion pattern to the</source>
          <target state="translated">任何由文件名扩展模式指定的补全,到</target>
        </trans-unit>
        <trans-unit id="093317f6114bdaf1c9b80acdfb4744facce9ee53" translate="yes" xml:space="preserve">
          <source>Any element of an array may be referenced using &lt;code&gt;${&lt;var&gt;name&lt;/var&gt;[&lt;var&gt;subscript&lt;/var&gt;]}&lt;/code&gt;. The braces are required to avoid conflicts with the shell&amp;rsquo;s filename expansion operators. If the &lt;var&gt;subscript&lt;/var&gt; is &amp;lsquo;</source>
          <target state="translated">数组的任何元素都可以使用 &lt;code&gt;${&lt;var&gt;name&lt;/var&gt;[&lt;var&gt;subscript&lt;/var&gt;]}&lt;/code&gt; 来引用。需要使用花括号来避免与Shell的文件名扩展运算符冲突。如果 &lt;var&gt;subscript&lt;/var&gt; 是&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="05c84891da9124272ef091879d5a02832afcce76" translate="yes" xml:space="preserve">
          <source>Any function specified with</source>
          <target state="translated">任何用</target>
        </trans-unit>
        <trans-unit id="737bb9637c4b416bd6a8828df88deaf130eff585" translate="yes" xml:space="preserve">
          <source>Append the history lines not already read from the history file to the current history list. These are lines appended to the history file since the beginning of the current Bash session.</source>
          <target state="translated">将尚未从历史文件中读取的历史行追加到当前的历史列表中。这些行是自当前Bash会话开始后追加到历史文件中的行。</target>
        </trans-unit>
        <trans-unit id="fa371fc9ef369f423df1af5f429cb095d5abac4c" translate="yes" xml:space="preserve">
          <source>Append the new history lines to the history file. These are history lines entered since the beginning of the current Bash session, but not already appended to the history file.</source>
          <target state="translated">将新的历史记录添加到历史文件中.这些是自当前Bash会话开始后输入的历史记录,但尚未追加到历史文件中。</target>
        </trans-unit>
        <trans-unit id="d13a5c548dd1bd4f3955e89191f0212a7bdbf71b" translate="yes" xml:space="preserve">
          <source>Appendix A Reporting Bugs</source>
          <target state="translated">附录A 报告错误</target>
        </trans-unit>
        <trans-unit id="cfe09449cc8e33d24f5a69a34ea0dd5996ea6af0" translate="yes" xml:space="preserve">
          <source>Appendix B Major Differences From The Bourne Shell</source>
          <target state="translated">附录B 与伯恩贝壳的主要区别</target>
        </trans-unit>
        <trans-unit id="4880cb1ef429add51eb9a787445961729f2e1ae9" translate="yes" xml:space="preserve">
          <source>Appendix C GNU Free Documentation License</source>
          <target state="translated">附录C GNU自由文档许可证</target>
        </trans-unit>
        <trans-unit id="f58cb6b3f24a0b908fae648b1fc2c206b57b18b0" translate="yes" xml:space="preserve">
          <source>Appendix D Indexes</source>
          <target state="translated">附录D 索引</target>
        </trans-unit>
        <trans-unit id="c2c618827073f43083dd69ab40b02f7d6238db37" translate="yes" xml:space="preserve">
          <source>Apply the following &amp;lsquo;</source>
          <target state="translated">应用以下&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="fdaa7306385ffcc4f28214e221decb76dcc0b272" translate="yes" xml:space="preserve">
          <source>Arguments to non-string format specifiers are treated as C language constants, except that a leading plus or minus sign is allowed, and if the leading character is a single or double quote, the value is the ASCII value of the following character.</source>
          <target state="translated">非字符串格式指定符的参数被视为C语言常量,但允许使用前导加号或后导减号,如果前导字符是单引号或双引号,则其值为后面字符的ASCII值。</target>
        </trans-unit>
        <trans-unit id="9fb75a7744b90e1d41f52f6bfdc6641917e4fac3" translate="yes" xml:space="preserve">
          <source>Arithmetic Expansion</source>
          <target state="translated">算术扩展</target>
        </trans-unit>
        <trans-unit id="3edb8e1eef15c24a8864ca7944421bfa0563defa" translate="yes" xml:space="preserve">
          <source>Arithmetic expansion allows the evaluation of an arithmetic expression and the substitution of the result. The format for arithmetic expansion is:</source>
          <target state="translated">算术扩展允许对一个算术表达式进行评估,并对结果进行代入。算术扩展的格式是:</target>
        </trans-unit>
        <trans-unit id="4c706e3b86ea549c90f68920d714563086d1fc02" translate="yes" xml:space="preserve">
          <source>Arithmetic on shell variables.</source>
          <target state="translated">对shell变量进行运算。</target>
        </trans-unit>
        <trans-unit id="4b53e2b899895a1c8d72f8811b9461d87bd35aaf" translate="yes" xml:space="preserve">
          <source>Arrange for the debugger profile to be executed before the shell starts. Turns on extended debugging mode (see &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt; for a description of the &lt;code&gt;extdebug&lt;/code&gt; option to the &lt;code&gt;shopt&lt;/code&gt; builtin).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743a14b067caaa35a04f6582909f1857caf4c645" translate="yes" xml:space="preserve">
          <source>Arrange for the debugger profile to be executed before the shell starts. Turns on extended debugging mode (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt; for a description of the &lt;code&gt;extdebug&lt;/code&gt; option to the &lt;code&gt;shopt&lt;/code&gt; builtin).</source>
          <target state="translated">安排在Shell启动之前执行调试器概要文件。上扩展的调试模式匝（见&lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;shopt内建&lt;/a&gt;的的描述 &lt;code&gt;extdebug&lt;/code&gt; 选项来 &lt;code&gt;shopt&lt;/code&gt; 内建）。</target>
        </trans-unit>
        <trans-unit id="86bda10308cd1e1c31d2fea35a9b89ba9752f3e0" translate="yes" xml:space="preserve">
          <source>Array Variables.</source>
          <target state="translated">阵列变量。</target>
        </trans-unit>
        <trans-unit id="6a67461a5e834e4fd2df3f2b523d7f15a31181ff" translate="yes" xml:space="preserve">
          <source>Array variable names.</source>
          <target state="translated">阵列变量名称。</target>
        </trans-unit>
        <trans-unit id="b90cc9bfd23567a2ff5ba1f00e7c63ca6da8755e" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="translated">Arrays</target>
        </trans-unit>
        <trans-unit id="7eabced6cb34d778f5f281e26063b9089172023e" translate="yes" xml:space="preserve">
          <source>Arrays are assigned to using compound assignments of the form</source>
          <target state="translated">数组使用复合赋值的形式进行赋值。</target>
        </trans-unit>
        <trans-unit id="4bc9c32a38bca1b59308f5c7039a8648f444ed2e" translate="yes" xml:space="preserve">
          <source>As noted above, Bash requires the &lt;code&gt;xpg_echo&lt;/code&gt; option to be enabled for the &lt;code&gt;echo&lt;/code&gt; builtin to be fully conformant.</source>
          <target state="translated">如上所述，猛砸需要 &lt;code&gt;xpg_echo&lt;/code&gt; 为启用选项 &lt;code&gt;echo&lt;/code&gt; 内建要完全符合。</target>
        </trans-unit>
        <trans-unit id="3aa589890cfda9df3fd8cfd7bc779b2770704045" translate="yes" xml:space="preserve">
          <source>As noted above, if a non-interactive shell is invoked with the</source>
          <target state="translated">如上所述,如果一个非交互式的shell是用</target>
        </trans-unit>
        <trans-unit id="60584a83bdbc98bd8b6d502f8ee279c587f91a57" translate="yes" xml:space="preserve">
          <source>As you can see, the {} is replaced with each line read from standard input. While using &lt;code&gt;ls&lt;/code&gt; will work in most instances, it is not sufficient to deal with all filenames. &lt;code&gt;printf&lt;/code&gt; is a shell builtin, and therefore is not subject to the kernel&amp;rsquo;s limit on the number of arguments to a program, so you can use &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f432892286f6a7bf3732fb257a0a4599a1049c26" translate="yes" xml:space="preserve">
          <source>As you can see, the {} is replaced with each line read from standard input. While using &lt;code&gt;ls&lt;/code&gt; will work in most instances, it is not sufficient to deal with all filenames. If you need to accommodate special characters in filenames, you can use</source>
          <target state="translated">如您所见，{}被替换为从标准输入读取的每一行。虽然使用 &lt;code&gt;ls&lt;/code&gt; 在大多数情况下都可以使用，但不足以处理所有文件名。如果需要在文件名中包含特殊字符，则可以使用</target>
        </trans-unit>
        <trans-unit id="1d23ff97ad27a77304173e16b06d1cb07802965e" translate="yes" xml:space="preserve">
          <source>Assignment statements preceding &lt;small&gt;POSIX&lt;/small&gt; special builtins persist in the shell environment after the builtin completes.</source>
          <target state="translated">内建完成后，&lt;small&gt;POSIX&lt;/small&gt;特殊内建之前的赋值语句会保留在Shell环境中。</target>
        </trans-unit>
        <trans-unit id="54430ac198c8aa5f1b7e6151be8f8efafe05bce5" translate="yes" xml:space="preserve">
          <source>Assignment statements preceding shell function calls persist in the shell environment after the function returns, as if a &lt;small&gt;POSIX&lt;/small&gt; special builtin command had been executed.</source>
          <target state="translated">在外壳函数调用之前的赋值语句在函数返回后仍保留在外壳环境中，就好像已执行&lt;small&gt;POSIX&lt;/small&gt;特殊内置命令一样。</target>
        </trans-unit>
        <trans-unit id="6afff165a0368b6b32a90d8e10aaea87835226a0" translate="yes" xml:space="preserve">
          <source>Assignment statements preceding the command stay in effect in the shell environment after the command completes.</source>
          <target state="translated">命令前面的赋值语句在命令完成后,在shell环境中保持有效。</target>
        </trans-unit>
        <trans-unit id="9d94b6b875d60484c4bb7340dd6a44faadd5efa2" translate="yes" xml:space="preserve">
          <source>Associative arrays are created using</source>
          <target state="translated">关联数组是用</target>
        </trans-unit>
        <trans-unit id="312925ab15a73ffc2af430651a066fde15cd3475" translate="yes" xml:space="preserve">
          <source>At its base, a shell is simply a macro processor that executes commands. The term macro processor means functionality where text and symbols are expanded to create larger expressions.</source>
          <target state="translated">在其基础上,shell只是一个执行命令的宏处理器。宏处理器一词是指将文本和符号扩展以创建更大的表达式的功能。</target>
        </trans-unit>
        <trans-unit id="9a33972941fa256c44269f0d323b7d43c6c92b66" translate="yes" xml:space="preserve">
          <source>Attempt completion on the text before point, comparing the text against lines from the history list for possible completion matches.</source>
          <target state="translated">尝试在点前的文本上完成,将文本与历史列表中的行进行比较,寻找可能的完成匹配。</target>
        </trans-unit>
        <trans-unit id="6a39cbb1d67c91fb900a7e0403b3bf4f7226464c" translate="yes" xml:space="preserve">
          <source>Attempt completion on the text before point, treating it as a command name. Command completion attempts to match the text against aliases, reserved words, shell functions, shell builtins, and finally executable filenames, in that order.</source>
          <target state="translated">试图完成点前的文本,将其视为命令名。命令完成试图将文本与别名、保留字、shell函数、shell内建函数以及最后的可执行文件名进行匹配,顺序如下。</target>
        </trans-unit>
        <trans-unit id="0459206f5ad3b3f0d57f7aa7179ed400b6444bbf" translate="yes" xml:space="preserve">
          <source>Attempt completion on the text before point, treating it as a hostname.</source>
          <target state="translated">尝试在点前的文字上完成,将其视为主机名。</target>
        </trans-unit>
        <trans-unit id="a275c647ae0a0312b3d4920af98c24668aed88b2" translate="yes" xml:space="preserve">
          <source>Attempt completion on the text before point, treating it as a shell variable.</source>
          <target state="translated">尝试在点前的文本上完成,将其视为shell变量。</target>
        </trans-unit>
        <trans-unit id="3d3b29635546c0f2a5cf19e44ea8077397280344" translate="yes" xml:space="preserve">
          <source>Attempt completion on the text before point, treating it as a username.</source>
          <target state="translated">尝试在点前的文字上完成,把它当作用户名。</target>
        </trans-unit>
        <trans-unit id="d6bab22ea714bcffa182b9fb15b4394a520c76f3" translate="yes" xml:space="preserve">
          <source>Attempt filename completion on the text before point.</source>
          <target state="translated">试图在点前的文本上完成文件名。</target>
        </trans-unit>
        <trans-unit id="f9821e5eb38f2e8b0a52f3a8e01446975a7c1341" translate="yes" xml:space="preserve">
          <source>Attempt menu completion on the text before point, comparing the text against lines from the history list for possible completion matches.</source>
          <target state="translated">尝试对点前的文本进行菜单完成,将文本与历史列表中的行进行比较,以确定可能的完成匹配。</target>
        </trans-unit>
        <trans-unit id="7cb32994a537e88f73ea5cb2abb8426080a63b09" translate="yes" xml:space="preserve">
          <source>Attempt to move point to the same physical screen column on the next physical screen line. This will not have the desired effect if the current Readline line does not take up more than one physical line or if the length of the current Readline line is not greater than the length of the prompt plus the screen width.</source>
          <target state="translated">试图将点移动到下一个物理屏幕行的同一物理屏幕列。如果当前的Readline行不超过一个物理行,或者当前Readline行的长度不大于提示的长度加屏幕宽度,则不会产生预期效果。</target>
        </trans-unit>
        <trans-unit id="13d9e19111325af7927ae0a41b76bcd6ea3d199d" translate="yes" xml:space="preserve">
          <source>Attempt to move point to the same physical screen column on the previous physical screen line. This will not have the desired effect if the current Readline line does not take up more than one physical line or if point is not greater than the length of the prompt plus the screen width.</source>
          <target state="translated">试图将点移动到上一个物理屏幕行的同一物理屏幕列。如果当前的Readline行不超过一个物理行,或者point不大于提示长度加屏幕宽度,则不会产生预期效果。</target>
        </trans-unit>
        <trans-unit id="220ee35ed4573b6fb0cfebbad0e076d7b1ac9886" translate="yes" xml:space="preserve">
          <source>Attempt to perform completion on the text before point. The actual completion performed is application-specific. Bash attempts completion treating the text as a variable (if the text begins with &amp;lsquo;</source>
          <target state="translated">尝试对点之前的文本执行补全。实际执行的完成是特定于应用程序的。Bash尝试完成将文本视为变量的操作（如果文本以&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="dd38f839b1357eff12d518b6fb4026b120d6a7aa" translate="yes" xml:space="preserve">
          <source>Attributes may be specified for an array variable using the &lt;code&gt;declare&lt;/code&gt; and &lt;code&gt;readonly&lt;/code&gt; builtins. Each attribute applies to all members of an array.</source>
          <target state="translated">属性可以使用一个数组变量来指定 &lt;code&gt;declare&lt;/code&gt; 和 &lt;code&gt;readonly&lt;/code&gt; 建宏。每个属性都适用于数组的所有成员。</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="7e0604a488d54d9f299ba77ae94a81953953b191" translate="yes" xml:space="preserve">
          <source>B.1 Implementation Differences From The SVR4.2 Shell</source>
          <target state="translated">B.1 与SVR4.2 Shell在实现上的区别</target>
        </trans-unit>
        <trans-unit id="83ce3f4acf93ed3b90143aea6c402f1321678e31" translate="yes" xml:space="preserve">
          <source>BASH</source>
          <target state="translated">BASH</target>
        </trans-unit>
        <trans-unit id="cf9ddd71d5abb35c4dc975f3ff42837b5796c67c" translate="yes" xml:space="preserve">
          <source>BASHOPTS</source>
          <target state="translated">BASHOPTS</target>
        </trans-unit>
        <trans-unit id="c07f33c6940db51fec5a37f1d85e6e8362bbcedb" translate="yes" xml:space="preserve">
          <source>BASHPID</source>
          <target state="translated">BASHPID</target>
        </trans-unit>
        <trans-unit id="cf3d32f64895e3788bf1901ce64365f52a9e6f18" translate="yes" xml:space="preserve">
          <source>BASH_ALIASES</source>
          <target state="translated">BASH_ALIASES</target>
        </trans-unit>
        <trans-unit id="258b6b7e4a89187b860f7b2655d09c8d7210b335" translate="yes" xml:space="preserve">
          <source>BASH_ARGC</source>
          <target state="translated">BASH_ARGC</target>
        </trans-unit>
        <trans-unit id="01c54e551259755e83a0fff7616a622a4067a261" translate="yes" xml:space="preserve">
          <source>BASH_ARGV</source>
          <target state="translated">BASH_ARGV</target>
        </trans-unit>
        <trans-unit id="7a11d398e7af6a3adf156972e739bddf7d6b054a" translate="yes" xml:space="preserve">
          <source>BASH_ARGV0</source>
          <target state="translated">BASH_ARGV0</target>
        </trans-unit>
        <trans-unit id="5c01c796a5f13cc5bb7278e4b45f1ec5e0365c27" translate="yes" xml:space="preserve">
          <source>BASH_CMDS</source>
          <target state="translated">BASH_CMDS</target>
        </trans-unit>
        <trans-unit id="76bf0b7d581793fe2d8cf96777d17a72e747ec1e" translate="yes" xml:space="preserve">
          <source>BASH_COMMAND</source>
          <target state="translated">BASH_COMMAND</target>
        </trans-unit>
        <trans-unit id="0dbc474a6e770083c18308c49f472e7b9cb38258" translate="yes" xml:space="preserve">
          <source>BASH_COMPAT</source>
          <target state="translated">BASH_COMPAT</target>
        </trans-unit>
        <trans-unit id="67984becedebb6da263539a67f9b637b095dee7f" translate="yes" xml:space="preserve">
          <source>BASH_ENV</source>
          <target state="translated">BASH_ENV</target>
        </trans-unit>
        <trans-unit id="5c43165c1308ba47baf2df514c998a2836dcbf42" translate="yes" xml:space="preserve">
          <source>BASH_EXECUTION_STRING</source>
          <target state="translated">BASH_EXECUTION_STRING</target>
        </trans-unit>
        <trans-unit id="1d977c87d3353fc2ff7058e1d4a60aec147953c3" translate="yes" xml:space="preserve">
          <source>BASH_LINENO</source>
          <target state="translated">BASH_LINENO</target>
        </trans-unit>
        <trans-unit id="5b80b526dd375f55cbae2d40bb873b7dbfdd684c" translate="yes" xml:space="preserve">
          <source>BASH_LOADABLES_PATH</source>
          <target state="translated">BASH_LOADABLES_PATH</target>
        </trans-unit>
        <trans-unit id="3e2e03217a33fcbc729516c4b07fafed561131d3" translate="yes" xml:space="preserve">
          <source>BASH_REMATCH</source>
          <target state="translated">BASH_REMATCH</target>
        </trans-unit>
        <trans-unit id="0baae2f0521cea3551cfbc39bf02f95c5ec08049" translate="yes" xml:space="preserve">
          <source>BASH_SOURCE</source>
          <target state="translated">BASH_SOURCE</target>
        </trans-unit>
        <trans-unit id="e3bfddbe8ce592e2e72254a4f1a4293aade7133b" translate="yes" xml:space="preserve">
          <source>BASH_SUBSHELL</source>
          <target state="translated">BASH_SUBSHELL</target>
        </trans-unit>
        <trans-unit id="02239ac4bb69e56474f712679c03ff8b6f03cacb" translate="yes" xml:space="preserve">
          <source>BASH_VERSINFO</source>
          <target state="translated">BASH_VERSINFO</target>
        </trans-unit>
        <trans-unit id="447f0586600fddd73e1166bb71334576f14e9b52" translate="yes" xml:space="preserve">
          <source>BASH_VERSION</source>
          <target state="translated">BASH_VERSION</target>
        </trans-unit>
        <trans-unit id="b19e46ea4a63de3a08c763dc27f0d40a8562f0b4" translate="yes" xml:space="preserve">
          <source>BASH_XTRACEFD</source>
          <target state="translated">BASH_XTRACEFD</target>
        </trans-unit>
        <trans-unit id="f620cacbc465c805c4e1c25e20fa57e55c09e33e" translate="yes" xml:space="preserve">
          <source>Bash</source>
          <target state="translated">Bash</target>
        </trans-unit>
        <trans-unit id="1d2140e9c186ba4c79d63ab511540a15728ae9eb" translate="yes" xml:space="preserve">
          <source>Bash Builtin Commands</source>
          <target state="translated">Bash内置命令</target>
        </trans-unit>
        <trans-unit id="778de54221951d87d2fff578d429e650857ecf09" translate="yes" xml:space="preserve">
          <source>Bash Builtins</source>
          <target state="translated">巴什内饰</target>
        </trans-unit>
        <trans-unit id="19fe050a832ad862f72117f033c08f61e34343c9" translate="yes" xml:space="preserve">
          <source>Bash Conditional Expressions</source>
          <target state="translated">Bash条件表达式</target>
        </trans-unit>
        <trans-unit id="febdc089f94146b8e3dcee3ded46c3a70f9fa6cb" translate="yes" xml:space="preserve">
          <source>Bash Features</source>
          <target state="translated">Bash功能</target>
        </trans-unit>
        <trans-unit id="a69370a2dabaaa403ed0c85823816926cb374af6" translate="yes" xml:space="preserve">
          <source>Bash History Builtins</source>
          <target state="translated">Bash历史内置</target>
        </trans-unit>
        <trans-unit id="c4e254c154469cc28339b1767c2dc643554d5e43" translate="yes" xml:space="preserve">
          <source>Bash History Facilities</source>
          <target state="translated">巴什历史设施</target>
        </trans-unit>
        <trans-unit id="558084a52c984d57c3303a89245922b38a45b03c" translate="yes" xml:space="preserve">
          <source>Bash POSIX Mode</source>
          <target state="translated">Bash POSIX模式</target>
        </trans-unit>
        <trans-unit id="f167125125d1d74e4ced29f29cb7ed5cc2d72e0c" translate="yes" xml:space="preserve">
          <source>Bash Reference Manual</source>
          <target state="translated">Bash参考手册</target>
        </trans-unit>
        <trans-unit id="702b271b9be7f4524530ed54f7def024b195d319" translate="yes" xml:space="preserve">
          <source>Bash Startup Files</source>
          <target state="translated">Bash启动文件</target>
        </trans-unit>
        <trans-unit id="c457bb85807204243999c640208e0b5f6a526f2e" translate="yes" xml:space="preserve">
          <source>Bash Variables</source>
          <target state="translated">Bash变量</target>
        </trans-unit>
        <trans-unit id="f7f36d1b8c7f9f624b284ead0c9056ac4a52e144" translate="yes" xml:space="preserve">
          <source>Bash allows a function to override a builtin with the same name, and provides access to that builtin&amp;rsquo;s functionality within the function via the &lt;code&gt;builtin&lt;/code&gt; and &lt;code&gt;command&lt;/code&gt; builtins (see &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94be2a20e762976fbd6d00c02f9087209fa4365" translate="yes" xml:space="preserve">
          <source>Bash allows a function to override a builtin with the same name, and provides access to that builtin&amp;rsquo;s functionality within the function via the &lt;code&gt;builtin&lt;/code&gt; and &lt;code&gt;command&lt;/code&gt; builtins (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">Bash允许函数覆盖具有相同名称的内置函数，并通过 &lt;code&gt;builtin&lt;/code&gt; 函数和 &lt;code&gt;command&lt;/code&gt; 内置函数提供对函数中该内置函数的访问（请参阅&lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="45ea30664300fb4506c7c0c0341657bed07ca29c" translate="yes" xml:space="preserve">
          <source>Bash allows multiple option arguments when it is invoked (&lt;code&gt;-x -v&lt;/code&gt;); the SVR4.2 shell allows only one option argument (&lt;code&gt;-xv&lt;/code&gt;). In fact, some versions of the shell dump core if the second argument begins with a &amp;lsquo;</source>
          <target state="translated">Bash在调用时允许多个选项参数（ &lt;code&gt;-x -v&lt;/code&gt; ）; SVR4.2 Shell仅允许使用一个选项参数（ &lt;code&gt;-xv&lt;/code&gt; ）。实际上，如果第二个参数以&amp;ldquo;'</target>
        </trans-unit>
        <trans-unit id="24a81065b0f1c6672d2b0aaa9fb0c1c9c5cbb566" translate="yes" xml:space="preserve">
          <source>Bash also performs tilde expansion on words satisfying the conditions of variable assignments (see &lt;a href=&quot;shell-parameters&quot;&gt;Shell Parameters&lt;/a&gt;) when they appear as arguments to simple commands. Bash does not do this, except for the &lt;var&gt;declaration&lt;/var&gt; commands listed above, when in &lt;small&gt;POSIX&lt;/small&gt; mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544840dfc1a95c6dd3a445461c9459b2d1327781" translate="yes" xml:space="preserve">
          <source>Bash also performs tilde expansion on words satisfying the conditions of variable assignments (see &lt;a href=&quot;shell-parameters#Shell-Parameters&quot;&gt;Shell Parameters&lt;/a&gt;) when they appear as arguments to simple commands. Bash does not do this, except for the &lt;var&gt;declaration&lt;/var&gt; commands listed above, when in &lt;small&gt;POSIX&lt;/small&gt; mode.</source>
          <target state="translated">当满足变量分配条件的单词（作为&lt;a href=&quot;shell-parameters#Shell-Parameters&quot;&gt;Shell参数&lt;/a&gt;）作为简单命令的参数出现时，Bash还会对它们进行波浪号扩展。在&lt;small&gt;POSIX&lt;/small&gt;模式下，Bash不会执行上述操作，除了上面列出的 &lt;var&gt;declaration&lt;/var&gt; 命令外。&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="386b9e0bb6527c98d16b6a49e87a9de31b05d0ac" translate="yes" xml:space="preserve">
          <source>Bash attempts to determine when it is being run with its standard input connected to a network connection, as when executed by the remote shell daemon, usually &lt;code&gt;rshd&lt;/code&gt;, or the secure shell daemon &lt;code&gt;sshd&lt;/code&gt;. If Bash determines it is being run in this fashion, it reads and executes commands from</source>
          <target state="translated">Bash尝试确定其标准输入连接到网络连接时是何时运行，就像由远程Shell守护程序（通常为 &lt;code&gt;rshd&lt;/code&gt; 或安全Shell守护程序 &lt;code&gt;sshd&lt;/code&gt; )执行时一样。如果Bash确定它是以这种方式运行的，它将读取并执行以下命令：</target>
        </trans-unit>
        <trans-unit id="13299b6c961218cd68ca86fd59956a9654d9cda2" translate="yes" xml:space="preserve">
          <source>Bash automatically assigns variables that provide information about the current user (&lt;code&gt;UID&lt;/code&gt;, &lt;code&gt;EUID&lt;/code&gt;, and &lt;code&gt;GROUPS&lt;/code&gt;), the current host (&lt;code&gt;HOSTTYPE&lt;/code&gt;, &lt;code&gt;OSTYPE&lt;/code&gt;, &lt;code&gt;MACHTYPE&lt;/code&gt;, and &lt;code&gt;HOSTNAME&lt;/code&gt;), and the instance of Bash that is running (&lt;code&gt;BASH&lt;/code&gt;, &lt;code&gt;BASH_VERSION&lt;/code&gt;, and &lt;code&gt;BASH_VERSINFO&lt;/code&gt;). See &lt;a href=&quot;bash-variables&quot;&gt;Bash Variables&lt;/a&gt;, for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a739a32bbb67b8ad38cb56f78cde59cbc50c41" translate="yes" xml:space="preserve">
          <source>Bash automatically assigns variables that provide information about the current user (&lt;code&gt;UID&lt;/code&gt;, &lt;code&gt;EUID&lt;/code&gt;, and &lt;code&gt;GROUPS&lt;/code&gt;), the current host (&lt;code&gt;HOSTTYPE&lt;/code&gt;, &lt;code&gt;OSTYPE&lt;/code&gt;, &lt;code&gt;MACHTYPE&lt;/code&gt;, and &lt;code&gt;HOSTNAME&lt;/code&gt;), and the instance of Bash that is running (&lt;code&gt;BASH&lt;/code&gt;, &lt;code&gt;BASH_VERSION&lt;/code&gt;, and &lt;code&gt;BASH_VERSINFO&lt;/code&gt;). See &lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash Variables&lt;/a&gt;, for details.</source>
          <target state="translated">Bash自动分配变量，这些变量提供有关当前用户（ &lt;code&gt;UID&lt;/code&gt; ， &lt;code&gt;EUID&lt;/code&gt; 和 &lt;code&gt;GROUPS&lt;/code&gt; ），当前主机（ &lt;code&gt;HOSTTYPE&lt;/code&gt; ， &lt;code&gt;OSTYPE&lt;/code&gt; ， &lt;code&gt;MACHTYPE&lt;/code&gt; 和 &lt;code&gt;HOSTNAME&lt;/code&gt; ）以及正在运行的Bash实例（ &lt;code&gt;BASH&lt;/code&gt; ， &lt;code&gt;BASH_VERSION&lt;/code&gt; 和 &lt;code&gt;BASH_VERSINFO&lt;/code&gt; ）的信息。 。有关详细信息，请参见&lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6b03e5596026fd937988a600d87ecbad53b046c3" translate="yes" xml:space="preserve">
          <source>Bash builtin commands to manipulate the directory stack.</source>
          <target state="translated">Bash内置的命令来操作目录栈。</target>
        </trans-unit>
        <trans-unit id="eb533b109e619c69425173e7ca65ad98116b44f8" translate="yes" xml:space="preserve">
          <source>Bash builtin commands used to interact with job control.</source>
          <target state="translated">Bash内置命令用于与作业控制交互。</target>
        </trans-unit>
        <trans-unit id="ff0be66fbe096224a68531dfd5800e069c0bbad2" translate="yes" xml:space="preserve">
          <source>Bash can be configured to be &lt;small&gt;POSIX&lt;/small&gt;-conformant by default, by specifying the</source>
          <target state="translated">通过指定Bash，Bash可以默认配置为符合&lt;small&gt;POSIX&lt;/small&gt;标准</target>
        </trans-unit>
        <trans-unit id="4d65fab620faf5c73fdd4aba418d590920164c5d" translate="yes" xml:space="preserve">
          <source>Bash can expand positional parameters beyond &lt;code&gt;$9&lt;/code&gt; using &lt;code&gt;${&lt;var&gt;num&lt;/var&gt;}&lt;/code&gt;.</source>
          <target state="translated">Bash可以使用 &lt;code&gt;${&lt;var&gt;num&lt;/var&gt;}&lt;/code&gt; &lt;var&gt;num&lt;/var&gt; }将位置参数扩展到 &lt;code&gt;$9&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26834525d8fa2343d17ba4ebb98acc90aac88a68" translate="yes" xml:space="preserve">
          <source>Bash can open network connections to arbitrary machines and services with the redirection operators (see &lt;a href=&quot;redirections&quot;&gt;Redirections&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa48b43e05495444b5fe410c516bc1e3db932030" translate="yes" xml:space="preserve">
          <source>Bash can open network connections to arbitrary machines and services with the redirection operators (see &lt;a href=&quot;redirections#Redirections&quot;&gt;Redirections&lt;/a&gt;).</source>
          <target state="translated">Bash可以使用重定向操作符打开与任意机器和服务的网络连接（请参阅&lt;a href=&quot;redirections#Redirections&quot;&gt;重定向&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ba2aa8df3cfb8d66c029b8627befe4cd901e23be" translate="yes" xml:space="preserve">
          <source>Bash configuration</source>
          <target state="translated">Bash配置</target>
        </trans-unit>
        <trans-unit id="e37aa50aac07515085daccb4bc0e14a44fd3f67f" translate="yes" xml:space="preserve">
          <source>Bash contains features that appear in other popular shells, and some features that only appear in Bash. Some of the shells that Bash has borrowed concepts from are the Bourne Shell (</source>
          <target state="translated">Bash包含了其他流行的shell中出现的功能,也有一些只在Bash中出现的功能。Bash借用了一些概念的shell有Bourne Shell(</target>
        </trans-unit>
        <trans-unit id="3e90a6d7cfc8043130cc0ea848e6590913b24f36" translate="yes" xml:space="preserve">
          <source>Bash contains the &amp;lsquo;</source>
          <target state="translated">Bash包含&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="c8fc436f0b7677c1b09ab20c652aadf53f41fa46" translate="yes" xml:space="preserve">
          <source>Bash does not allow unbalanced quotes. The SVR4.2 shell will silently insert a needed closing quote at &lt;code&gt;EOF&lt;/code&gt; under certain circumstances. This can be the cause of some hard-to-find errors.</source>
          <target state="translated">Bash不允许使用不平衡的报价。在某些情况下，SVR4.2 shell将在 &lt;code&gt;EOF&lt;/code&gt; 处静默插入所需的结束报价。这可能是一些难以发现的错误的原因。</target>
        </trans-unit>
        <trans-unit id="d264ab74eb3b073ba76f5dd5b6e8eb63d2d75305" translate="yes" xml:space="preserve">
          <source>Bash does not fork a subshell when redirecting into or out of a shell control structure such as an &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;while&lt;/code&gt; statement.</source>
          <target state="translated">当重定向到诸如 &lt;code&gt;if&lt;/code&gt; 或 &lt;code&gt;while&lt;/code&gt; 语句之类的shell控制结构中或从中退出时，Bash不会派生一个子shell 。</target>
        </trans-unit>
        <trans-unit id="f29215f4d4c2297a44eff82703c7a3ca03622b93" translate="yes" xml:space="preserve">
          <source>Bash does not have the &lt;code&gt;stop&lt;/code&gt; or &lt;code&gt;newgrp&lt;/code&gt; builtins.</source>
          <target state="translated">Bash没有 &lt;code&gt;stop&lt;/code&gt; 或 &lt;code&gt;newgrp&lt;/code&gt; 内置函数。</target>
        </trans-unit>
        <trans-unit id="1ff98de1f471c94f01823fbc5399c29f642973cf" translate="yes" xml:space="preserve">
          <source>Bash does not use the &lt;code&gt;SHACCT&lt;/code&gt; variable or perform shell accounting.</source>
          <target state="translated">Bash不使用 &lt;code&gt;SHACCT&lt;/code&gt; 变量或执行Shell记帐。</target>
        </trans-unit>
        <trans-unit id="767bf3ad996123b6c83fc4a4c8391ab77e9d4bcd" translate="yes" xml:space="preserve">
          <source>Bash ensures that the &lt;code&gt;POSIXLY_CORRECT&lt;/code&gt; variable is set.</source>
          <target state="translated">Bash确保已设置 &lt;code&gt;POSIXLY_CORRECT&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="6d161e923cd76c80c05e1457e1a5410e3d67c6ee" translate="yes" xml:space="preserve">
          <source>Bash examines the value of the array variable &lt;code&gt;PROMPT_COMMANDS&lt;/code&gt; just before printing each primary prompt. If any elements in &lt;code&gt;PROMPT_COMMANDS&lt;/code&gt; are set and non-null, Bash executes each value, in numeric order, just as if it had been typed on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2695f29f0448deb02a72886a139d2e8d8ea3225e" translate="yes" xml:space="preserve">
          <source>Bash executes the value of the &lt;code&gt;PROMPT_COMMAND&lt;/code&gt; variable as a command before printing the primary prompt, &lt;code&gt;$PS1&lt;/code&gt; (see &lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash Variables&lt;/a&gt;).</source>
          <target state="translated">在打印主提示符 &lt;code&gt;$PS1&lt;/code&gt; 之前，&lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash&lt;/a&gt;作为命令执行 &lt;code&gt;PROMPT_COMMAND&lt;/code&gt; 变量的值（请参阅Bash变量）。</target>
        </trans-unit>
        <trans-unit id="c01035be5256092a0bb29b5d721106546d174c56" translate="yes" xml:space="preserve">
          <source>Bash executes the values of the set elements of the &lt;code&gt;PROMPT_COMMANDS&lt;/code&gt; array variable as commands before printing the primary prompt, &lt;code&gt;$PS1&lt;/code&gt; (see &lt;a href=&quot;bash-variables&quot;&gt;Bash Variables&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a034baaab7f987916ac60736f49b2e6ecb54adb6" translate="yes" xml:space="preserve">
          <source>Bash expands and displays &lt;code&gt;PS1&lt;/code&gt; before reading the first line of a command, and expands and displays &lt;code&gt;PS2&lt;/code&gt; before reading the second and subsequent lines of a multi-line command. Bash expands and displays &lt;code&gt;PS0&lt;/code&gt; after it reads a command but before executing it. See &lt;a href=&quot;controlling-the-prompt&quot;&gt;Controlling the Prompt&lt;/a&gt;, for a complete list of prompt string escape sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5b430a9110ad6f9b3b28bd8b08cde8282b417b" translate="yes" xml:space="preserve">
          <source>Bash expands and displays &lt;code&gt;PS1&lt;/code&gt; before reading the first line of a command, and expands and displays &lt;code&gt;PS2&lt;/code&gt; before reading the second and subsequent lines of a multi-line command. Bash expands and displays &lt;code&gt;PS0&lt;/code&gt; after it reads a command but before executing it. See &lt;a href=&quot;controlling-the-prompt#Controlling-the-Prompt&quot;&gt;Controlling the Prompt&lt;/a&gt;, for a complete list of prompt string escape sequences.</source>
          <target state="translated">Bash会在读取命令的第一行之前展开并显示 &lt;code&gt;PS1&lt;/code&gt; ，并在读取多行命令的第二行及后续行之前会展开并显示 &lt;code&gt;PS2&lt;/code&gt; 。Bash 在读取命令之后但在执行命令之前会展开并显示 &lt;code&gt;PS0&lt;/code&gt; 。有关提示字符串转义序列的完整列表，请参见&lt;a href=&quot;controlling-the-prompt#Controlling-the-Prompt&quot;&gt;控制提示&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="43b0733358d4fa022fb2626bedce92839a4ff6ca" translate="yes" xml:space="preserve">
          <source>Bash functions are permitted to have local variables using the &lt;code&gt;local&lt;/code&gt; builtin, and thus useful recursive functions may be written (see &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="116c9a09f37376a672b6b462cca1993406778282" translate="yes" xml:space="preserve">
          <source>Bash functions are permitted to have local variables using the &lt;code&gt;local&lt;/code&gt; builtin, and thus useful recursive functions may be written (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">Bash函数允许使用 &lt;code&gt;local&lt;/code&gt; 内置函数具有局部变量，因此可以编写有用的递归函数（请参见&lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="fc9818ce89b0bf3dee3310a04b7f6dfe16b2d0ee" translate="yes" xml:space="preserve">
          <source>Bash handles several filenames specially when they are used in redirections, as described in the following table. If the operating system on which Bash is running provides these special files, bash will use them; otherwise it will emulate them internally with the behavior described below.</source>
          <target state="translated">Bash在重定向中使用了几个特殊的文件名,如下表所述。如果Bash运行的操作系统提供了这些特殊的文件,bash就会使用它们,否则它将用下面描述的行为在内部模拟它们。</target>
        </trans-unit>
        <trans-unit id="20b27b965240e60070967dc7057170cf561b3134" translate="yes" xml:space="preserve">
          <source>Bash has &lt;var&gt;indirect&lt;/var&gt; variable expansion using &lt;code&gt;${!word}&lt;/code&gt; (see &lt;a href=&quot;shell-parameter-expansion&quot;&gt;Shell Parameter Expansion&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c5b36217381fe3b270ff6dc191ece42d4d1903" translate="yes" xml:space="preserve">
          <source>Bash has &lt;var&gt;indirect&lt;/var&gt; variable expansion using &lt;code&gt;${!word}&lt;/code&gt; (see &lt;a href=&quot;shell-parameter-expansion#Shell-Parameter-Expansion&quot;&gt;Shell Parameter Expansion&lt;/a&gt;).</source>
          <target state="translated">Bash 使用 &lt;code&gt;${!word}&lt;/code&gt; 进行 &lt;var&gt;indirect&lt;/var&gt; 变量扩展（请参见&lt;a href=&quot;shell-parameter-expansion#Shell-Parameter-Expansion&quot;&gt;Shell Parameter Expansion&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="3783873cc5a98199bb1183837e29bc6046975a82" translate="yes" xml:space="preserve">
          <source>Bash has command history (see &lt;a href=&quot;bash-history-facilities&quot;&gt;Bash History Facilities&lt;/a&gt;) and the &lt;code&gt;history&lt;/code&gt; and &lt;code&gt;fc&lt;/code&gt; builtins to manipulate it. The Bash history list maintains timestamp information and uses the value of the &lt;code&gt;HISTTIMEFORMAT&lt;/code&gt; variable to display it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f439a70368a904a1d7ede6c3b0266032336d81" translate="yes" xml:space="preserve">
          <source>Bash has command history (see &lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash History Facilities&lt;/a&gt;) and the &lt;code&gt;history&lt;/code&gt; and &lt;code&gt;fc&lt;/code&gt; builtins to manipulate it. The Bash history list maintains timestamp information and uses the value of the &lt;code&gt;HISTTIMEFORMAT&lt;/code&gt; variable to display it.</source>
          <target state="translated">Bash具有命令历史记录（请参阅&lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash历史记录设施&lt;/a&gt;）以及 &lt;code&gt;history&lt;/code&gt; 和 &lt;code&gt;fc&lt;/code&gt; 内置函数来对其进行操作。Bash历史记录列表维护时间戳记信息，并使用 &lt;code&gt;HISTTIMEFORMAT&lt;/code&gt; 变量的值来显示它。</target>
        </trans-unit>
        <trans-unit id="bce6aab43ebe9778e25b020407fbefb3f54bc705" translate="yes" xml:space="preserve">
          <source>Bash has command-line editing (see &lt;a href=&quot;command-line-editing&quot;&gt;Command Line Editing&lt;/a&gt;) and the &lt;code&gt;bind&lt;/code&gt; builtin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b299b8526275e73fcf210e53c32f05b32c1ee4d" translate="yes" xml:space="preserve">
          <source>Bash has command-line editing (see &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;Command Line Editing&lt;/a&gt;) and the &lt;code&gt;bind&lt;/code&gt; builtin.</source>
          <target state="translated">Bash具有命令行编辑（请参阅&lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;命令行编辑&lt;/a&gt;）和内置的 &lt;code&gt;bind&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="841854f6789ab69b07e5f5b6d38e16d7588a0c8d" translate="yes" xml:space="preserve">
          <source>Bash has much more optional behavior controllable with the &lt;code&gt;set&lt;/code&gt; builtin (see &lt;a href=&quot;the-set-builtin&quot;&gt;The Set Builtin&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6477ee86466cc8eddfc168fab96a566cd45cadd" translate="yes" xml:space="preserve">
          <source>Bash has much more optional behavior controllable with the &lt;code&gt;set&lt;/code&gt; builtin (see &lt;a href=&quot;the-set-builtin#The-Set-Builtin&quot;&gt;The Set Builtin&lt;/a&gt;).</source>
          <target state="translated">Bash有与更多的可选行为可控 &lt;code&gt;set&lt;/code&gt; 内建（见&lt;a href=&quot;the-set-builtin#The-Set-Builtin&quot;&gt;set内建&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="146fe30eb8a3f3ee3f89294f456511aa3cd94428" translate="yes" xml:space="preserve">
          <source>Bash has multi-character invocation options (see &lt;a href=&quot;invoking-bash&quot;&gt;Invoking Bash&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8462604fa3784398a139f5b3a0d1acffa9df509f" translate="yes" xml:space="preserve">
          <source>Bash has multi-character invocation options (see &lt;a href=&quot;invoking-bash#Invoking-Bash&quot;&gt;Invoking Bash&lt;/a&gt;).</source>
          <target state="translated">Bash具有多字符调用选项（请参阅&amp;ldquo; &lt;a href=&quot;invoking-bash#Invoking-Bash&quot;&gt;调用Bash&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="15338741f40eb7a17b9cc14a1727ef645427c97a" translate="yes" xml:space="preserve">
          <source>Bash has one-dimensional array variables (see &lt;a href=&quot;arrays&quot;&gt;Arrays&lt;/a&gt;), and the appropriate variable expansions and assignment syntax to use them. Several of the Bash builtins take options to act on arrays. Bash provides a number of built-in array variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a87d05e00ceccd7e5e213a9bf32dee7008af48e" translate="yes" xml:space="preserve">
          <source>Bash has one-dimensional array variables (see &lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;), and the appropriate variable expansions and assignment syntax to use them. Several of the Bash builtins take options to act on arrays. Bash provides a number of built-in array variables.</source>
          <target state="translated">Bash具有一维数组变量（请参阅&lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;），以及使用它们的适当变量扩展和赋值语法。一些Bash内置函数采用选项来对阵列起作用。Bash提供了许多内置数组变量。</target>
        </trans-unit>
        <trans-unit id="4717793ec153d90b759be6384088ba7667c8e40f" translate="yes" xml:space="preserve">
          <source>Bash has process substitution (see &lt;a href=&quot;process-substitution&quot;&gt;Process Substitution&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c61bed2865f6e972da028f1d603631a718c16b4" translate="yes" xml:space="preserve">
          <source>Bash has process substitution (see &lt;a href=&quot;process-substitution#Process-Substitution&quot;&gt;Process Substitution&lt;/a&gt;).</source>
          <target state="translated">Bash具有流程替代（请参阅&lt;a href=&quot;process-substitution#Process-Substitution&quot;&gt;流程替代&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f28a98fdb1b2499d7757be7b192466d8d1541f33" translate="yes" xml:space="preserve">
          <source>Bash has the &lt;code&gt;time&lt;/code&gt; reserved word and command timing (see &lt;a href=&quot;pipelines&quot;&gt;Pipelines&lt;/a&gt;). The display of the timing statistics may be controlled with the &lt;code&gt;TIMEFORMAT&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5323c9808a806dd2a3e97cbe0c709e031d1aa08" translate="yes" xml:space="preserve">
          <source>Bash has the &lt;code&gt;time&lt;/code&gt; reserved word and command timing (see &lt;a href=&quot;pipelines#Pipelines&quot;&gt;Pipelines&lt;/a&gt;). The display of the timing statistics may be controlled with the &lt;code&gt;TIMEFORMAT&lt;/code&gt; variable.</source>
          <target state="translated">Bash具有 &lt;code&gt;time&lt;/code&gt; 保留字和命令定时（请参见&lt;a href=&quot;pipelines#Pipelines&quot;&gt;Pipelines&lt;/a&gt;）。时序统计信息的显示可以用 &lt;code&gt;TIMEFORMAT&lt;/code&gt; 变量控制。</target>
        </trans-unit>
        <trans-unit id="03c43b4d01f3cc85295ade409845e510a97dbd19" translate="yes" xml:space="preserve">
          <source>Bash implements &lt;code&gt;csh&lt;/code&gt;-like history expansion (see &lt;a href=&quot;history-interaction&quot;&gt;History Interaction&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a464e6bf80471c044018099bbfe8c46f31799c1" translate="yes" xml:space="preserve">
          <source>Bash implements &lt;code&gt;csh&lt;/code&gt;-like history expansion (see &lt;a href=&quot;history-interaction#History-Interaction&quot;&gt;History Interaction&lt;/a&gt;).</source>
          <target state="translated">Bash实现了 &lt;code&gt;csh&lt;/code&gt; 的历史记录扩展（请参阅&lt;a href=&quot;history-interaction#History-Interaction&quot;&gt;History Interaction&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="75cf2ef250b59fac8ef73a9fdf00a1fc82cd75ff" translate="yes" xml:space="preserve">
          <source>Bash implements a &lt;code&gt;csh&lt;/code&gt;-like directory stack, and provides the &lt;code&gt;pushd&lt;/code&gt;, &lt;code&gt;popd&lt;/code&gt;, and &lt;code&gt;dirs&lt;/code&gt; builtins to manipulate it (see &lt;a href=&quot;the-directory-stack&quot;&gt;The Directory Stack&lt;/a&gt;). Bash also makes the directory stack visible as the value of the &lt;code&gt;DIRSTACK&lt;/code&gt; shell variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b58a57d4447e5bfa8aa63762439f62d3b28bc1" translate="yes" xml:space="preserve">
          <source>Bash implements a &lt;code&gt;csh&lt;/code&gt;-like directory stack, and provides the &lt;code&gt;pushd&lt;/code&gt;, &lt;code&gt;popd&lt;/code&gt;, and &lt;code&gt;dirs&lt;/code&gt; builtins to manipulate it (see &lt;a href=&quot;the-directory-stack#The-Directory-Stack&quot;&gt;The Directory Stack&lt;/a&gt;). Bash also makes the directory stack visible as the value of the &lt;code&gt;DIRSTACK&lt;/code&gt; shell variable.</source>
          <target state="translated">Bash实现了一个 &lt;code&gt;csh&lt;/code&gt; 的目录堆栈，并提供了 &lt;code&gt;pushd&lt;/code&gt; ， &lt;code&gt;popd&lt;/code&gt; 和 &lt;code&gt;dirs&lt;/code&gt; 内置函数来对其进行操作（请参见&lt;a href=&quot;the-directory-stack#The-Directory-Stack&quot;&gt;The Directory Stack&lt;/a&gt;）。Bash还使目录堆栈作为 &lt;code&gt;DIRSTACK&lt;/code&gt; shell变量的值可见。</target>
        </trans-unit>
        <trans-unit id="222c7b59aff7277246a351b525227e9c1dea11ab" translate="yes" xml:space="preserve">
          <source>Bash implements command aliases and the &lt;code&gt;alias&lt;/code&gt; and &lt;code&gt;unalias&lt;/code&gt; builtins (see &lt;a href=&quot;aliases&quot;&gt;Aliases&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7647c6a9a349d22ae007897f67078abfede54f" translate="yes" xml:space="preserve">
          <source>Bash implements command aliases and the &lt;code&gt;alias&lt;/code&gt; and &lt;code&gt;unalias&lt;/code&gt; builtins (see &lt;a href=&quot;aliases#Aliases&quot;&gt;Aliases&lt;/a&gt;).</source>
          <target state="translated">击工具命令别名和 &lt;code&gt;alias&lt;/code&gt; 和 &lt;code&gt;unalias&lt;/code&gt; 内建命令（见&lt;a href=&quot;aliases#Aliases&quot;&gt;别名&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c831a68bfcdc8fab4e6e39e7e5daf03823604e0b" translate="yes" xml:space="preserve">
          <source>Bash implements essentially the same grammar, parameter and variable expansion, redirection, and quoting as the Bourne Shell. Bash uses the &lt;small&gt;POSIX&lt;/small&gt; standard as the specification of how these features are to be implemented. There are some differences between the traditional Bourne shell and Bash; this section quickly details the differences of significance. A number of these differences are explained in greater depth in previous sections. This section uses the version of &lt;code&gt;sh&lt;/code&gt; included in SVR4.2 (the last version of the historical Bourne shell) as the baseline reference.</source>
          <target state="translated">Bash实现了与Bourne Shell相同的语法，参数和变量扩展，重定向和引用。Bash使用&lt;small&gt;POSIX&lt;/small&gt;标准作为如何实现这些功能的规范。传统的Bourne外壳和Bash之间有一些区别；本节将快速详细介绍重要性差异。在前面的部分中，对这些差异进行了更深入的解释。本节使用SVR4.2中包含的 &lt;code&gt;sh&lt;/code&gt; 版本（历史Bourne shell的最新版本）作为基线参考。</target>
        </trans-unit>
        <trans-unit id="ba0650cc74fdb162e67c80ef23df9ffefd6e7ba9" translate="yes" xml:space="preserve">
          <source>Bash implements extended pattern matching features when the &lt;code&gt;extglob&lt;/code&gt; shell option is enabled (see &lt;a href=&quot;pattern-matching&quot;&gt;Pattern Matching&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d898eee1ff41c4acb0fd9bebe80a2cecac808a82" translate="yes" xml:space="preserve">
          <source>Bash implements extended pattern matching features when the &lt;code&gt;extglob&lt;/code&gt; shell option is enabled (see &lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;Pattern Matching&lt;/a&gt;).</source>
          <target state="translated">启用 &lt;code&gt;extglob&lt;/code&gt; shell选项时，Bash实现扩展的模式匹配功能（请参阅&lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;模式匹配&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="6bbb2c6fafc04cd2f98b59cc6392f2b0a106377d" translate="yes" xml:space="preserve">
          <source>Bash implements the &amp;lsquo;</source>
          <target state="translated">Bash实现了&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="b52383c07be6797dedd08d1854ad1b8d5611ceaf" translate="yes" xml:space="preserve">
          <source>Bash implements the &lt;code&gt;!&lt;/code&gt; keyword to negate the return value of a pipeline (see &lt;a href=&quot;pipelines&quot;&gt;Pipelines&lt;/a&gt;). Very useful when an &lt;code&gt;if&lt;/code&gt; statement needs to act only if a test fails. The Bash &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b15a48c135b87f05c1929116088cd1b59c2432f" translate="yes" xml:space="preserve">
          <source>Bash implements the &lt;code&gt;!&lt;/code&gt; keyword to negate the return value of a pipeline (see &lt;a href=&quot;pipelines#Pipelines&quot;&gt;Pipelines&lt;/a&gt;). Very useful when an &lt;code&gt;if&lt;/code&gt; statement needs to act only if a test fails. The Bash &amp;lsquo;</source>
          <target state="translated">Bash实现了 &lt;code&gt;!&lt;/code&gt; 关键字来否定管道的返回值（请参见&lt;a href=&quot;pipelines#Pipelines&quot;&gt;Pipelines&lt;/a&gt;）。当 &lt;code&gt;if&lt;/code&gt; 语句仅在测试失败时才需要执行时非常有用。重击</target>
        </trans-unit>
        <trans-unit id="c0dac6c2fff9f84f7846bcbe579d704a073c5358" translate="yes" xml:space="preserve">
          <source>Bash implements the &lt;code&gt;for (( &lt;var&gt;expr1&lt;/var&gt; ; &lt;var&gt;expr2&lt;/var&gt; ; &lt;var&gt;expr3&lt;/var&gt; ))&lt;/code&gt; arithmetic for command, similar to the C language (see &lt;a href=&quot;looping-constructs&quot;&gt;Looping Constructs&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13692efe3f1aaf66422cb0e833e3667884c7c8a6" translate="yes" xml:space="preserve">
          <source>Bash implements the &lt;code&gt;for (( &lt;var&gt;expr1&lt;/var&gt; ; &lt;var&gt;expr2&lt;/var&gt; ; &lt;var&gt;expr3&lt;/var&gt; ))&lt;/code&gt; arithmetic for command, similar to the C language (see &lt;a href=&quot;looping-constructs#Looping-Constructs&quot;&gt;Looping Constructs&lt;/a&gt;).</source>
          <target state="translated">Bash 为命令实现 &lt;code&gt;for (( &lt;var&gt;expr1&lt;/var&gt; ; &lt;var&gt;expr2&lt;/var&gt; ; &lt;var&gt;expr3&lt;/var&gt; ))&lt;/code&gt; 算法，类似于C语言（请参见&lt;a href=&quot;looping-constructs#Looping-Constructs&quot;&gt;循环构造&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d69a2dcc936d0e3663f99154389a67f1b6a87556" translate="yes" xml:space="preserve">
          <source>Bash implements the full set of &lt;small&gt;POSIX&lt;/small&gt; filename expansion operators, including &lt;var&gt;character classes&lt;/var&gt;, &lt;var&gt;equivalence classes&lt;/var&gt;, and &lt;var&gt;collating symbols&lt;/var&gt; (see &lt;a href=&quot;filename-expansion&quot;&gt;Filename Expansion&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a3a0a0ddac94d2f334434eb25424f78b936e61" translate="yes" xml:space="preserve">
          <source>Bash implements the full set of &lt;small&gt;POSIX&lt;/small&gt; filename expansion operators, including &lt;var&gt;character classes&lt;/var&gt;, &lt;var&gt;equivalence classes&lt;/var&gt;, and &lt;var&gt;collating symbols&lt;/var&gt; (see &lt;a href=&quot;filename-expansion#Filename-Expansion&quot;&gt;Filename Expansion&lt;/a&gt;).</source>
          <target state="translated">Bash实现了&lt;small&gt;POSIX&lt;/small&gt;文件名扩展操作符的完整集合，包括 &lt;var&gt;character classes&lt;/var&gt; ， &lt;var&gt;equivalence classes&lt;/var&gt; 和 &lt;var&gt;collating symbols&lt;/var&gt; （请参见&lt;a href=&quot;filename-expansion#Filename-Expansion&quot;&gt;Filename Expansion&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="bee873f15b43c4168daec061e40a13cd7ccee08a" translate="yes" xml:space="preserve">
          <source>Bash includes a &lt;code&gt;help&lt;/code&gt; builtin for quick reference to shell facilities (see &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c886707487d65b8536cb1bd430acfcdc12fc48ee" translate="yes" xml:space="preserve">
          <source>Bash includes a &lt;code&gt;help&lt;/code&gt; builtin for quick reference to shell facilities (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">Bash包含一个内置的 &lt;code&gt;help&lt;/code&gt; ，可快速参考Shell设施（请参阅&lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="fca189adb9103ed71159cb5fb91098d1a90a2897" translate="yes" xml:space="preserve">
          <source>Bash includes a number of features to support a separate debugger for shell scripts.</source>
          <target state="translated">Bash包含了许多支持shell脚本独立调试器的功能。</target>
        </trans-unit>
        <trans-unit id="56626e142df9d8bff664998c8fbbb4295e2e5a8f" translate="yes" xml:space="preserve">
          <source>Bash includes brace expansion (see &lt;a href=&quot;brace-expansion&quot;&gt;Brace Expansion&lt;/a&gt;) and tilde expansion (see &lt;a href=&quot;tilde-expansion&quot;&gt;Tilde Expansion&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2581a854538383fedb7e45a84a66bddc37aa19" translate="yes" xml:space="preserve">
          <source>Bash includes brace expansion (see &lt;a href=&quot;brace-expansion#Brace-Expansion&quot;&gt;Brace Expansion&lt;/a&gt;) and tilde expansion (see &lt;a href=&quot;tilde-expansion#Tilde-Expansion&quot;&gt;Tilde Expansion&lt;/a&gt;).</source>
          <target state="translated">Bash包括大括号扩展（请参阅&lt;a href=&quot;brace-expansion#Brace-Expansion&quot;&gt;Brace Expansion&lt;/a&gt;）和波浪号扩展（请参见&lt;a href=&quot;tilde-expansion#Tilde-Expansion&quot;&gt;Tilde Expansion&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f999bc858121512c78fdd5a13a61ba2b603b8089" translate="yes" xml:space="preserve">
          <source>Bash includes the &amp;lsquo;</source>
          <target state="translated">Bash包含&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="0c8af62fc2af0510eb9aa6c3e3b8376e242ef816" translate="yes" xml:space="preserve">
          <source>Bash includes the &lt;code&gt;[[&lt;/code&gt; compound command, which makes conditional testing part of the shell grammar (see &lt;a href=&quot;conditional-constructs&quot;&gt;Conditional Constructs&lt;/a&gt;), including optional regular expression matching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05fe047ca703eccb7dfa25a3930ddcc0cdc132f" translate="yes" xml:space="preserve">
          <source>Bash includes the &lt;code&gt;[[&lt;/code&gt; compound command, which makes conditional testing part of the shell grammar (see &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;Conditional Constructs&lt;/a&gt;), including optional regular expression matching.</source>
          <target state="translated">Bash包含 &lt;code&gt;[[&lt;/code&gt; 复合命令，这使条件测试成为Shell语法的一部分（请参阅&lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;Conditional Constructs&lt;/a&gt;），包括可选的正则表达式匹配。</target>
        </trans-unit>
        <trans-unit id="a12e38fc6970a8b0648535816c0fe6e361556705" translate="yes" xml:space="preserve">
          <source>Bash includes the &lt;code&gt;caller&lt;/code&gt; builtin, which displays the context of any active subroutine call (a shell function or a script executed with the &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;source&lt;/code&gt; builtins). This supports the bash debugger.</source>
          <target state="translated">Bash包含了内置的 &lt;code&gt;caller&lt;/code&gt; ，该调用程序显示了任何活动子例程调用的上下文（使用 &lt;code&gt;.&lt;/code&gt; 或 &lt;code&gt;source&lt;/code&gt; 内置程序执行的shell函数或脚本）。这支持bash调试器。</target>
        </trans-unit>
        <trans-unit id="a1494ab7ae5896ec0d9bfed82a38c903a2dfb47d" translate="yes" xml:space="preserve">
          <source>Bash includes the &lt;code&gt;select&lt;/code&gt; compound command, which allows the generation of simple menus (see &lt;a href=&quot;conditional-constructs&quot;&gt;Conditional Constructs&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743d885ca631dc0401d9228c9d3e841b29339ed5" translate="yes" xml:space="preserve">
          <source>Bash includes the &lt;code&gt;select&lt;/code&gt; compound command, which allows the generation of simple menus (see &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;Conditional Constructs&lt;/a&gt;).</source>
          <target state="translated">Bash包含 &lt;code&gt;select&lt;/code&gt; 复合命令，该命令允许生成简单菜单（请参阅&lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;条件构造&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="8aaece215c95644855aece6f051fcfe2cf04ae2d" translate="yes" xml:space="preserve">
          <source>Bash includes the &lt;code&gt;shopt&lt;/code&gt; builtin, for finer control of shell optional capabilities (see &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;), and allows these options to be set and unset at shell invocation (see &lt;a href=&quot;invoking-bash&quot;&gt;Invoking Bash&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddd93b5dc0dd303d99c501c1e7f52d775493b255" translate="yes" xml:space="preserve">
          <source>Bash includes the &lt;code&gt;shopt&lt;/code&gt; builtin, for finer control of shell optional capabilities (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;), and allows these options to be set and unset at shell invocation (see &lt;a href=&quot;invoking-bash#Invoking-Bash&quot;&gt;Invoking Bash&lt;/a&gt;).</source>
          <target state="translated">Bash包含 &lt;code&gt;shopt&lt;/code&gt; 内置&lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;函数&lt;/a&gt;，用于更好地控制shell可选功能（请参见The Shopt Builtin），并允许在shell调用时设置和取消设置这些选项（请参见&lt;a href=&quot;invoking-bash#Invoking-Bash&quot;&gt;Invoking Bash&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4bb8b6e0bcc2dec1fa0d611629a713c4bbb4b446" translate="yes" xml:space="preserve">
          <source>Bash includes the &lt;small&gt;POSIX&lt;/small&gt; pattern removal &amp;lsquo;</source>
          <target state="translated">Bash包含&lt;small&gt;POSIX&lt;/small&gt;模式删除'</target>
        </trans-unit>
        <trans-unit id="e792d85014a97c09997c06ad74dc87239596044f" translate="yes" xml:space="preserve">
          <source>Bash inspects the value of the &lt;code&gt;ignoreeof&lt;/code&gt; option to &lt;code&gt;set -o&lt;/code&gt; instead of exiting immediately when it receives an &lt;code&gt;EOF&lt;/code&gt; on its standard input when reading a command (see &lt;a href=&quot;the-set-builtin&quot;&gt;The Set Builtin&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6139947b5e85ab79d64b66c23e31237094ee627a" translate="yes" xml:space="preserve">
          <source>Bash inspects the value of the &lt;code&gt;ignoreeof&lt;/code&gt; option to &lt;code&gt;set -o&lt;/code&gt; instead of exiting immediately when it receives an &lt;code&gt;EOF&lt;/code&gt; on its standard input when reading a command (see &lt;a href=&quot;the-set-builtin#The-Set-Builtin&quot;&gt;The Set Builtin&lt;/a&gt;).</source>
          <target state="translated">Bash会检查 &lt;code&gt;ignoreeof&lt;/code&gt; 选项的值以 &lt;code&gt;set -o&lt;/code&gt; 而不是在读取命令时在其标准输入上收到 &lt;code&gt;EOF&lt;/code&gt; 时立即退出（请参见&lt;a href=&quot;the-set-builtin#The-Set-Builtin&quot;&gt;Set Builtin&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="71926fe5295fc8d59b114b61105289705f44ecba" translate="yes" xml:space="preserve">
          <source>Bash installation</source>
          <target state="translated">Bash安装</target>
        </trans-unit>
        <trans-unit id="6bc451d96f14e076ab11eb4d32d315ccc99e101e" translate="yes" xml:space="preserve">
          <source>Bash interprets special backslash-escaped characters in the prompt strings when interactive (see &lt;a href=&quot;controlling-the-prompt&quot;&gt;Controlling the Prompt&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf121c9f1655879d043645186fc6c44e8dacbbc6" translate="yes" xml:space="preserve">
          <source>Bash interprets special backslash-escaped characters in the prompt strings when interactive (see &lt;a href=&quot;controlling-the-prompt#Controlling-the-Prompt&quot;&gt;Controlling the Prompt&lt;/a&gt;).</source>
          <target state="translated">交互时，Bash会在提示字符串中解释特殊的反斜杠转义字符（请参阅&lt;a href=&quot;controlling-the-prompt#Controlling-the-Prompt&quot;&gt;控制提示&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="78dab0f54112751cb51fcdb3889c9bc88b7fe23d" translate="yes" xml:space="preserve">
          <source>Bash is &lt;small&gt;POSIX&lt;/small&gt;-conformant, even where the &lt;small&gt;POSIX&lt;/small&gt; specification differs from traditional &lt;code&gt;sh&lt;/code&gt; behavior (see &lt;a href=&quot;bash-posix-mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d809ced9a20e430dca76576c6df4d1215938aff9" translate="yes" xml:space="preserve">
          <source>Bash is &lt;small&gt;POSIX&lt;/small&gt;-conformant, even where the &lt;small&gt;POSIX&lt;/small&gt; specification differs from traditional &lt;code&gt;sh&lt;/code&gt; behavior (see &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;).</source>
          <target state="translated">Bash 符合&lt;small&gt;POSIX&lt;/small&gt;，即使&lt;small&gt;POSIX&lt;/small&gt;规范不同于传统的 &lt;code&gt;sh&lt;/code&gt; 行为（请参见&lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX模式&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="37b5b8f9a555b07d3529f8091527d6a4a9ead810" translate="yes" xml:space="preserve">
          <source>Bash is an acronym for &amp;lsquo;</source>
          <target state="translated">Bash是&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="81435f0a92436109dfc837576ea9016ffea48ccf" translate="yes" xml:space="preserve">
          <source>Bash is largely compatible with &lt;code&gt;sh&lt;/code&gt; and incorporates useful features from the Korn shell &lt;code&gt;ksh&lt;/code&gt; and the C shell &lt;code&gt;csh&lt;/code&gt;. It is intended to be a conformant implementation of the &lt;small&gt;IEEE&lt;/small&gt;&lt;small&gt;POSIX&lt;/small&gt; Shell and Tools portion of the &lt;small&gt;IEEE&lt;/small&gt;&lt;small&gt;POSIX&lt;/small&gt; specification (&lt;small&gt;IEEE&lt;/small&gt; Standard 1003.1). It offers functional improvements over &lt;code&gt;sh&lt;/code&gt; for both interactive and programming use.</source>
          <target state="translated">Bash在很大程度上与 &lt;code&gt;sh&lt;/code&gt; 兼容，并结合了Korn shell &lt;code&gt;ksh&lt;/code&gt; 和C shell &lt;code&gt;csh&lt;/code&gt; 的有用功能。它旨在成为&lt;small&gt;IEEE &lt;/small&gt;&lt;small&gt;POSIX&lt;/small&gt;规范（&lt;small&gt;IEEE&lt;/small&gt;标准1003.1）的&lt;small&gt;IEEE &lt;/small&gt;&lt;small&gt;POSIX&lt;/small&gt;外壳和工具部分的一致实现。它提供了相对于 &lt;code&gt;sh&lt;/code&gt; 的功能改进，可用于交互和编程。&lt;small&gt;&lt;/small&gt;&lt;small&gt;&lt;/small&gt;&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e355b3296c04b89d2634437bfef72ab6341f947b" translate="yes" xml:space="preserve">
          <source>Bash is the shell, or command language interpreter, for the &lt;small&gt;GNU&lt;/small&gt; operating system. The name is an acronym for the &amp;lsquo;</source>
          <target state="translated">Bash是&lt;small&gt;GNU&lt;/small&gt;操作系统的外壳程序或命令语言解释器。名称是&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="c3f288cd3bf022df7361100601cb58c91ea5ae31" translate="yes" xml:space="preserve">
          <source>Bash performs filename expansion on filenames specified as operands to input and output redirection operators (see &lt;a href=&quot;redirections&quot;&gt;Redirections&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb52dbe275583d6b3d01277d2c1bca40f57f722a" translate="yes" xml:space="preserve">
          <source>Bash performs filename expansion on filenames specified as operands to input and output redirection operators (see &lt;a href=&quot;redirections#Redirections&quot;&gt;Redirections&lt;/a&gt;).</source>
          <target state="translated">Bash对指定为输入和输出重定向运算符的操作数的文件名执行文件名扩展（请参阅&lt;a href=&quot;redirections#Redirections&quot;&gt;Redirections&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c98c3bf58b20138e38d5c80a3f61df0cf4ef03fc" translate="yes" xml:space="preserve">
          <source>Bash performs the expansion by executing &lt;var&gt;command&lt;/var&gt; in a subshell environment and replacing the command substitution with the standard output of the command, with any trailing newlines deleted. Embedded newlines are not deleted, but they may be removed during word splitting. The command substitution &lt;code&gt;$(cat &lt;var&gt;file&lt;/var&gt;)&lt;/code&gt; can be replaced by the equivalent but faster &lt;code&gt;$(&amp;lt; &lt;var&gt;file&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">Bash通过在子shell环境中执行 &lt;var&gt;command&lt;/var&gt; 并将命令替换替换为命令的标准输出来执行扩展，并删除所有尾随的换行符。嵌入的换行符不会被删除，但是可以在分词时将其删除。命令替换 &lt;code&gt;$(cat &lt;var&gt;file&lt;/var&gt;)&lt;/code&gt; 可以替换为等效但更快的 &lt;code&gt;$(&amp;lt; &lt;var&gt;file&lt;/var&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3edf8f7aad43a1007be2fa8c0a2f828fa2005985" translate="yes" xml:space="preserve">
          <source>Bash provides a programmable word completion mechanism (see &lt;a href=&quot;programmable-completion&quot;&gt;Programmable Completion&lt;/a&gt;), and builtin commands &lt;code&gt;complete&lt;/code&gt;, &lt;code&gt;compgen&lt;/code&gt;, and &lt;code&gt;compopt&lt;/code&gt;, to manipulate it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0950fd9485da121372d36f565d3c12bfa92ccd8f" translate="yes" xml:space="preserve">
          <source>Bash provides a programmable word completion mechanism (see &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;Programmable Completion&lt;/a&gt;), and builtin commands &lt;code&gt;complete&lt;/code&gt;, &lt;code&gt;compgen&lt;/code&gt;, and &lt;code&gt;compopt&lt;/code&gt;, to manipulate it.</source>
          <target state="translated">Bash提供了一种可编程的单词完成机制（请参阅&lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;Programmable Completion&lt;/a&gt;），并且内置命令 &lt;code&gt;complete&lt;/code&gt; ， &lt;code&gt;compgen&lt;/code&gt; 和 &lt;code&gt;compopt&lt;/code&gt; 对其进行操作。</target>
        </trans-unit>
        <trans-unit id="9fd51eb1cee21cece2fef3bece4447f62df75bbf" translate="yes" xml:space="preserve">
          <source>Bash provides looping constructs, conditional commands, and mechanisms to group commands and execute them as a unit.</source>
          <target state="translated">Bash提供了循环结构、条件命令以及将命令分组并作为一个单元执行的机制。</target>
        </trans-unit>
        <trans-unit id="6bbeecc389d89ed40a1c22fcbea3f54990e2bbfd" translate="yes" xml:space="preserve">
          <source>Bash provides one-dimensional indexed and associative array variables. Any variable may be used as an indexed array; the &lt;code&gt;declare&lt;/code&gt; builtin will explicitly declare an array. There is no maximum limit on the size of an array, nor any requirement that members be indexed or assigned contiguously. Indexed arrays are referenced using integers (including arithmetic expressions (see &lt;a href=&quot;shell-arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt;)) and are zero-based; associative arrays use arbitrary strings. Unless otherwise noted, indexed array indices must be non-negative integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4269ad6df17a8fece7b8bbbc28ece0c976d9f195" translate="yes" xml:space="preserve">
          <source>Bash provides one-dimensional indexed and associative array variables. Any variable may be used as an indexed array; the &lt;code&gt;declare&lt;/code&gt; builtin will explicitly declare an array. There is no maximum limit on the size of an array, nor any requirement that members be indexed or assigned contiguously. Indexed arrays are referenced using integers (including arithmetic expressions (see &lt;a href=&quot;shell-arithmetic#Shell-Arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt;)) and are zero-based; associative arrays use arbitrary strings. Unless otherwise noted, indexed array indices must be non-negative integers.</source>
          <target state="translated">Bash提供一维索引和关联数组变量。任何变量都可以用作索引数组。内置的 &lt;code&gt;declare&lt;/code&gt; 将显式声明一个数组。对数组的大小没有最大限制，也没有对成员进行连续索引或分配的任何要求。索引数组使用整数（包括算术表达式（请参见&lt;a href=&quot;shell-arithmetic#Shell-Arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt;））进行引用，并且从零开始。关联数组使用任意字符串。除非另有说明，否则索引数组索引必须是非负整数。</target>
        </trans-unit>
        <trans-unit id="d64f49b0a51331d7311fe0b83efe2779ef25e124" translate="yes" xml:space="preserve">
          <source>Bash provides optional case-insensitive matching for the &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;[[&lt;/code&gt; constructs.</source>
          <target state="translated">Bash为 &lt;code&gt;case&lt;/code&gt; 和 &lt;code&gt;[[&lt;/code&gt; 构造提供了可选的不区分大小写的匹配。</target>
        </trans-unit>
        <trans-unit id="a5628528a2a5bf4621b9ef668c56ebdf95bcdc4a" translate="yes" xml:space="preserve">
          <source>Bash provides several ways to manipulate the environment. On invocation, the shell scans its own environment and creates a parameter for each name found, automatically marking it for &lt;var&gt;export&lt;/var&gt; to child processes. Executed commands inherit the environment. The &lt;code&gt;export&lt;/code&gt; and &amp;lsquo;</source>
          <target state="translated">Bash提供了几种操作环境的方法。调用时，shell会扫描自己的环境并为找到的每个名称创建一个参数，并自动将其标记为 &lt;var&gt;export&lt;/var&gt; 到子进程。执行的命令会继承环境。在 &lt;code&gt;export&lt;/code&gt; 和'</target>
        </trans-unit>
        <trans-unit id="3f0cda712fc3e871ed16ba830a7eccf0cb3e5e73" translate="yes" xml:space="preserve">
          <source>Bash provides shell arithmetic, the &lt;code&gt;((&lt;/code&gt; compound command (see &lt;a href=&quot;conditional-constructs&quot;&gt;Conditional Constructs&lt;/a&gt;), and arithmetic expansion (see &lt;a href=&quot;shell-arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf189d9d299b736be01c2acc3f1ad98e00b71b8" translate="yes" xml:space="preserve">
          <source>Bash provides shell arithmetic, the &lt;code&gt;((&lt;/code&gt; compound command (see &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;Conditional Constructs&lt;/a&gt;), and arithmetic expansion (see &lt;a href=&quot;shell-arithmetic#Shell-Arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt;).</source>
          <target state="translated">Bash提供了Shell算术， &lt;code&gt;((&lt;/code&gt; 复合命令（请参阅&lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;条件构造&lt;/a&gt;）和算术扩展（请参阅&lt;a href=&quot;shell-arithmetic#Shell-Arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="6bd323432330e377287769c32351bbca8f05029b" translate="yes" xml:space="preserve">
          <source>Bash provides two builtin commands which manipulate the history list and history file.</source>
          <target state="translated">Bash提供了两个内置的命令来操作历史列表和历史文件。</target>
        </trans-unit>
        <trans-unit id="3a1a3a5e7f95833d5c5e31aac549284c2b849879" translate="yes" xml:space="preserve">
          <source>Bash provides two ways to group a list of commands to be executed as a unit. When commands are grouped, redirections may be applied to the entire command list. For example, the output of all the commands in the list may be redirected to a single stream.</source>
          <target state="translated">Bash提供了两种方式来分组,将命令列表作为一个单元来执行。当命令被分组时,重定向可以被应用到整个命令列表中。例如,列表中所有命令的输出可以被重定向到一个单一的流.</target>
        </trans-unit>
        <trans-unit id="bc15d0b2136f110a47248e25281e66c86eb8571e" translate="yes" xml:space="preserve">
          <source>Bash removes an exited background process&amp;rsquo;s status from the list of such statuses after the &lt;code&gt;wait&lt;/code&gt; builtin is used to obtain it.</source>
          <target state="translated">在使用 &lt;code&gt;wait&lt;/code&gt; 内置函数获取后，Bash从此类状态列表中删除了退出的后台进程的状态。</target>
        </trans-unit>
        <trans-unit id="47b9dfe739f34670c2f2fb655d438fb5c6e5256f" translate="yes" xml:space="preserve">
          <source>Bash scripts often begin with &lt;code&gt;#! /bin/bash&lt;/code&gt; (assuming that Bash has been installed in</source>
          <target state="translated">Bash脚本通常以 &lt;code&gt;#! /bin/bash&lt;/code&gt; 开头。/ bin / bash（假设Bash已安装在</target>
        </trans-unit>
        <trans-unit id="4d812e15b0b5610dfdf8109d8905fbf7fdad870a" translate="yes" xml:space="preserve">
          <source>Bash supports the &amp;lsquo;</source>
          <target state="translated">Bash支持&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="ecc62c79e4b33f78d61ddccfee7b3649b6812e73" translate="yes" xml:space="preserve">
          <source>Bash supports the &lt;code&gt;$&quot;&amp;hellip;&quot;&lt;/code&gt; quoting syntax to do locale-specific translation of the characters between the double quotes. The</source>
          <target state="translated">Bash支持使用 &lt;code&gt;$&quot;&amp;hellip;&quot;&lt;/code&gt; 引号语法对双引号之间的字符进行语言环境特定的翻译。的</target>
        </trans-unit>
        <trans-unit id="e624dec237a0450c66dca01ba02eec98d4311003" translate="yes" xml:space="preserve">
          <source>Bash supports the following looping constructs.</source>
          <target state="translated">Bash支持以下循环结构。</target>
        </trans-unit>
        <trans-unit id="b0fa2642c8b100746cd176752af2268f4882f29f" translate="yes" xml:space="preserve">
          <source>Bash treats a number of filenames specially when they are used in redirection operators (see &lt;a href=&quot;redirections&quot;&gt;Redirections&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad306c7ec97bd44cb9be5688f908929552293e0" translate="yes" xml:space="preserve">
          <source>Bash treats a number of filenames specially when they are used in redirection operators (see &lt;a href=&quot;redirections#Redirections&quot;&gt;Redirections&lt;/a&gt;).</source>
          <target state="translated">当Bash在重定向操作符中使用时，Bash特别对待许多文件名（请参阅&lt;a href=&quot;redirections#Redirections&quot;&gt;Redirections&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a36c6522edce07265285b065f3bc113caea97c86" translate="yes" xml:space="preserve">
          <source>Bash uses certain shell variables in the same way as the Bourne shell. In some cases, Bash assigns a default value to the variable.</source>
          <target state="translated">Bash使用某些shell变量的方式与Bourne shell相同。在某些情况下,Bash会给变量分配一个默认值。</target>
        </trans-unit>
        <trans-unit id="7b41e227a71019b24d31dacdc98d4fcab72005be" translate="yes" xml:space="preserve">
          <source>Bash will check for mail periodically, depending on the values of the &lt;code&gt;MAIL&lt;/code&gt;, &lt;code&gt;MAILPATH&lt;/code&gt;, and &lt;code&gt;MAILCHECK&lt;/code&gt; shell variables (see &lt;a href=&quot;bash-variables&quot;&gt;Bash Variables&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3861c8e89059b54aa25a00a741a22b183e168af9" translate="yes" xml:space="preserve">
          <source>Bash will check for mail periodically, depending on the values of the &lt;code&gt;MAIL&lt;/code&gt;, &lt;code&gt;MAILPATH&lt;/code&gt;, and &lt;code&gt;MAILCHECK&lt;/code&gt; shell variables (see &lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash Variables&lt;/a&gt;).</source>
          <target state="translated">Bash将根据 &lt;code&gt;MAIL&lt;/code&gt; ， &lt;code&gt;MAILPATH&lt;/code&gt; 和 &lt;code&gt;MAILCHECK&lt;/code&gt; Shell变量的值定期检查邮件（请参阅&lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash变量&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="216cab44466b274906e7bd9398fc4ac0cf1f1e06" translate="yes" xml:space="preserve">
          <source>Bash will not insert a command without the execute bit set into the command hash table, even if it returns it as a (last-ditch) result from a &lt;code&gt;$PATH&lt;/code&gt; search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a031fb4b54459f27072c9ee40c4b13ebd94a781" translate="yes" xml:space="preserve">
          <source>Basic Installation</source>
          <target state="translated">基本安装</target>
        </trans-unit>
        <trans-unit id="ccae6c15c8f6bb4867f2de8a73cbe190c92425a6" translate="yes" xml:space="preserve">
          <source>Basic Shell Features</source>
          <target state="translated">基本外壳功能</target>
        </trans-unit>
        <trans-unit id="133040f7192692ef859238af29614bca61765eaf" translate="yes" xml:space="preserve">
          <source>Before a command is executed, its input and output may be &lt;var&gt;redirected&lt;/var&gt; using a special notation interpreted by the shell. Redirection allows commands&amp;rsquo; file handles to be duplicated, opened, closed, made to refer to different files, and can change the files the command reads from and writes to. Redirection may also be used to modify file handles in the current shell execution environment. The following redirection operators may precede or appear anywhere within a simple command or may follow a command. Redirections are processed in the order they appear, from left to right.</source>
          <target state="translated">在执行命令之前，可以使用由Shell解释的特殊符号来 &lt;var&gt;redirected&lt;/var&gt; 其输入和输出。重定向允许复制，打开，关闭命令的文件句柄，使其引用不同的文件，并且可以更改命令读取和写入的文件。重定向还可以用于在当前Shell执行环境中修改文件句柄。以下重定向运算符可以在简单命令中的任何地方出现或出现，或者可以在命令之后。重定向按照从左到右的顺序显示。</target>
        </trans-unit>
        <trans-unit id="d419c32f096f03315c886b88ccd7749e6d5635ab" translate="yes" xml:space="preserve">
          <source>Begin a sequence of non-printing characters. This could be used to embed a terminal control sequence into the prompt.</source>
          <target state="translated">开始一个非打印字符的序列。这可以用来将终端控制序列嵌入到提示符中。</target>
        </trans-unit>
        <trans-unit id="1bf611a231f374f343178fd17d3ca701a309e304" translate="yes" xml:space="preserve">
          <source>Begin assigning to &lt;var&gt;array&lt;/var&gt; at index &lt;var&gt;origin&lt;/var&gt;. The default index is 0.</source>
          <target state="translated">在索引 &lt;var&gt;origin&lt;/var&gt; 开始分配给 &lt;var&gt;array&lt;/var&gt; 。默认索引为0。</target>
        </trans-unit>
        <trans-unit id="a38a7f00d8703cdac6c8021898552624864dd359" translate="yes" xml:space="preserve">
          <source>Begin saving the characters typed into the current keyboard macro.</source>
          <target state="translated">开始保存输入到当前键盘宏中的字符。</target>
        </trans-unit>
        <trans-unit id="d90a92b3e31feb999071d30ada8eac06ce9fb469" translate="yes" xml:space="preserve">
          <source>Bindable Readline Commands</source>
          <target state="translated">可绑定的读行命令</target>
        </trans-unit>
        <trans-unit id="b5b2a61d38fa7ceb83f1e087e477bbdab50fb795" translate="yes" xml:space="preserve">
          <source>Boolean variables (those that can be set to on or off) are set to on if the value is null or empty, &lt;var&gt;on&lt;/var&gt; (case-insensitive), or 1. Any other value results in the variable being set to off.</source>
          <target state="translated">如果值是null或为空，则将布尔变量（可以设置为on或off的变量）设置为on， &lt;var&gt;on&lt;/var&gt; （不区分大小写）或1。任何其他值都会导致将变量设置为off。</target>
        </trans-unit>
        <trans-unit id="6951c04d742c15e74e65aafce21ab81d54b6fda5" translate="yes" xml:space="preserve">
          <source>Bourne Shell Builtins</source>
          <target state="translated">伯恩贝壳内置</target>
        </trans-unit>
        <trans-unit id="af1c2e17f5314f5d3c045d05ac2ace66b95b558d" translate="yes" xml:space="preserve">
          <source>Bourne Shell Variables</source>
          <target state="translated">伯恩壳变量</target>
        </trans-unit>
        <trans-unit id="78d7155d38e7898e65c8556e73ab878f79cc7745" translate="yes" xml:space="preserve">
          <source>Bourne shell</source>
          <target state="translated">伯恩贝</target>
        </trans-unit>
        <trans-unit id="3397ab510fbae88c92acd3be3c9a2f21d54ea643" translate="yes" xml:space="preserve">
          <source>Bourne-Again SHell</source>
          <target state="translated">Bourne-Again SHell</target>
        </trans-unit>
        <trans-unit id="53675dae9e58acb722badeebf978bee9e5e16f3f" translate="yes" xml:space="preserve">
          <source>Brace Expansion</source>
          <target state="translated">支架伸缩</target>
        </trans-unit>
        <trans-unit id="29f670d211d0b0e276ad20e04b0b0aa592295b42" translate="yes" xml:space="preserve">
          <source>Brace expansion is a mechanism by which arbitrary strings may be generated. This mechanism is similar to &lt;var&gt;filename expansion&lt;/var&gt; (see &lt;a href=&quot;filename-expansion&quot;&gt;Filename Expansion&lt;/a&gt;), but the filenames generated need not exist. Patterns to be brace expanded take the form of an optional &lt;var&gt;preamble&lt;/var&gt;, followed by either a series of comma-separated strings or a sequence expression between a pair of braces, followed by an optional &lt;var&gt;postscript&lt;/var&gt;. The preamble is prefixed to each string contained within the braces, and the postscript is then appended to each resulting string, expanding left to right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10434965a7fa45f7f832b0aec27799f8228e6825" translate="yes" xml:space="preserve">
          <source>Brace expansion is a mechanism by which arbitrary strings may be generated. This mechanism is similar to &lt;var&gt;filename expansion&lt;/var&gt; (see &lt;a href=&quot;filename-expansion#Filename-Expansion&quot;&gt;Filename Expansion&lt;/a&gt;), but the filenames generated need not exist. Patterns to be brace expanded take the form of an optional &lt;var&gt;preamble&lt;/var&gt;, followed by either a series of comma-separated strings or a sequence expression between a pair of braces, followed by an optional &lt;var&gt;postscript&lt;/var&gt;. The preamble is prefixed to each string contained within the braces, and the postscript is then appended to each resulting string, expanding left to right.</source>
          <target state="translated">括号扩展是一种可以生成任意字符串的机制。此机制类似于 &lt;var&gt;filename expansion&lt;/var&gt; （请参阅&lt;a href=&quot;filename-expansion#Filename-Expansion&quot;&gt;Filename Expansion&lt;/a&gt;），但是生成的文件名不必存在。大括号扩展的模式采用可选的 &lt;var&gt;preamble&lt;/var&gt; 形式，其后是一系列用逗号分隔的字符串或一对大括号之间的序列表达式，然后是可选的 &lt;var&gt;postscript&lt;/var&gt; 。前缀在花括号中包含的每个字符串之前加上前缀，然后将后缀附加到每个结果字符串之后，从左向右扩展。</target>
        </trans-unit>
        <trans-unit id="7d9ab8c5d65b938be3c42c43a91019132ac43d31" translate="yes" xml:space="preserve">
          <source>Brace expansion is performed before any other expansions, and any characters special to other expansions are preserved in the result. It is strictly textual. Bash does not apply any syntactic interpretation to the context of the expansion or the text between the braces.</source>
          <target state="translated">在任何其他扩展之前,先进行括号扩展,结果中保留了任何其他扩展的特殊字符。它是严格意义上的文本。Bash不对扩展的上下文或括号之间的文本进行任何语法解释。</target>
        </trans-unit>
        <trans-unit id="37fc2e3d3ea6a3e81a4b67fed6280583663375cd" translate="yes" xml:space="preserve">
          <source>Brace expansions may be nested. The results of each expanded string are not sorted; left to right order is preserved. For example,</source>
          <target state="translated">大括号扩展可以嵌套。每个扩展字符串的结果不排序;从左到右的顺序被保留。例如:</target>
        </trans-unit>
        <trans-unit id="589dda90b2d83f97cd5e06e4c2c3f0b1caf41e73" translate="yes" xml:space="preserve">
          <source>Bracketed paste sets the region (the characters between point and the mark) to the inserted text. It uses the concept of an &lt;em&gt;active mark&lt;/em&gt;: when the mark is active, Readline redisplay uses the terminal&amp;rsquo;s standout mode to denote the region.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd287955b033707cad504fe18a51aae389533a91" translate="yes" xml:space="preserve">
          <source>Breaks the input into words and operators, obeying the quoting rules described in &lt;a href=&quot;quoting&quot;&gt;Quoting&lt;/a&gt;. These tokens are separated by &lt;code&gt;metacharacters&lt;/code&gt;. Alias expansion is performed by this step (see &lt;a href=&quot;aliases&quot;&gt;Aliases&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93821391b71cff58968e2fa9b593d32441d80132" translate="yes" xml:space="preserve">
          <source>Breaks the input into words and operators, obeying the quoting rules described in &lt;a href=&quot;quoting#Quoting&quot;&gt;Quoting&lt;/a&gt;. These tokens are separated by &lt;code&gt;metacharacters&lt;/code&gt;. Alias expansion is performed by this step (see &lt;a href=&quot;aliases#Aliases&quot;&gt;Aliases&lt;/a&gt;).</source>
          <target state="translated">打破输入字和操作符，服从中描述的引用规则&lt;a href=&quot;quoting#Quoting&quot;&gt;引用&lt;/a&gt;。这些标记由 &lt;code&gt;metacharacters&lt;/code&gt; 分隔。别名扩展是通过此步骤执行的（请参见&lt;a href=&quot;aliases#Aliases&quot;&gt;Aliases&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="46b73fe84096c617168a5ee324fc2931f9952181" translate="yes" xml:space="preserve">
          <source>Brings the &lt;var&gt;N&lt;/var&gt;th directory (counting from the left of the list printed by &lt;code&gt;dirs&lt;/code&gt;, starting with zero) to the top of the list by rotating the stack.</source>
          <target state="translated">通过旋转堆栈将第 &lt;var&gt;N&lt;/var&gt; 个目录（从 &lt;code&gt;dirs&lt;/code&gt; 打印的列表的左边开始，从零开始）到列表的顶部。</target>
        </trans-unit>
        <trans-unit id="8ed03600e19513d74388cb1ad97a36d32115c41d" translate="yes" xml:space="preserve">
          <source>Brings the &lt;var&gt;N&lt;/var&gt;th directory (counting from the right of the list printed by &lt;code&gt;dirs&lt;/code&gt;, starting with zero) to the top of the list by rotating the stack.</source>
          <target state="translated">通过旋转堆栈将第 &lt;var&gt;N&lt;/var&gt; 个目录（从 &lt;code&gt;dirs&lt;/code&gt; 打印的列表的右边开始，从零开始）移到列表的顶部。</target>
        </trans-unit>
        <trans-unit id="f1c7bd5dfbc70feff63bb4c975105aed8228177c" translate="yes" xml:space="preserve">
          <source>Builtin Commands</source>
          <target state="translated">内置命令</target>
        </trans-unit>
        <trans-unit id="c7f69c3c309831e8c75433aa20c6c04149fceec0" translate="yes" xml:space="preserve">
          <source>Builtin Index</source>
          <target state="translated">内置指数</target>
        </trans-unit>
        <trans-unit id="811c62e92cd041f8bceba59487e660dba9e9156d" translate="yes" xml:space="preserve">
          <source>Builtin commands are contained within the shell itself. When the name of a builtin command is used as the first word of a simple command (see &lt;a href=&quot;simple-commands&quot;&gt;Simple Commands&lt;/a&gt;), the shell executes the command directly, without invoking another program. Builtin commands are necessary to implement functionality impossible or inconvenient to obtain with separate utilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca58325283ee35d6a1ef927aa1c6c2591236dbc" translate="yes" xml:space="preserve">
          <source>Builtin commands are contained within the shell itself. When the name of a builtin command is used as the first word of a simple command (see &lt;a href=&quot;simple-commands#Simple-Commands&quot;&gt;Simple Commands&lt;/a&gt;), the shell executes the command directly, without invoking another program. Builtin commands are necessary to implement functionality impossible or inconvenient to obtain with separate utilities.</source>
          <target state="translated">内置命令包含在外壳本身内。当将内置命令的名称用作简单命令的第一个单词时（请参见&lt;a href=&quot;simple-commands#Simple-Commands&quot;&gt;Simple Commands&lt;/a&gt;），shell将直接执行该命令，而无需调用其他程序。内置命令对于实现使用单独的实用工具无法获得或不方便的功能是必需的。</target>
        </trans-unit>
        <trans-unit id="abecce7e0f5df146665e14a1eb97afda29469f52" translate="yes" xml:space="preserve">
          <source>Builtin commands classified specially by POSIX.</source>
          <target state="translated">由POSIX特别分类的内置命令。</target>
        </trans-unit>
        <trans-unit id="c6a4ea9017cbe0e1f10d114084edf6a9ff6d3079" translate="yes" xml:space="preserve">
          <source>Builtin commands inherited from the Bourne Shell.</source>
          <target state="translated">从 Bourne Shell 继承的内置命令。</target>
        </trans-unit>
        <trans-unit id="6fb02a4fbe3fb47e69e22b734705b7f4fa53dd38" translate="yes" xml:space="preserve">
          <source>Builtin commands to specify how to complete arguments for a particular command.</source>
          <target state="translated">内置的命令可以指定如何完成特定命令的参数。</target>
        </trans-unit>
        <trans-unit id="fa07ce53ecc83b10257b6124246c366a56178e23" translate="yes" xml:space="preserve">
          <source>Builtins to modify shell attributes and optional behavior.</source>
          <target state="translated">内嵌修改shell属性和可选行为。</target>
        </trans-unit>
        <trans-unit id="f7fa12b8b38db827d7ce92009cc9fa53135c3ce6" translate="yes" xml:space="preserve">
          <source>By default, &amp;lsquo;</source>
          <target state="translated">默认， '</target>
        </trans-unit>
        <trans-unit id="d807145e5d7c1cda3ea5b36d16a797ed65cf0d01" translate="yes" xml:space="preserve">
          <source>By default, if a compspec is found, whatever it generates is returned to the completion code as the full set of possible completions. The default Bash completions are not attempted, and the Readline default of filename completion is disabled. If the</source>
          <target state="translated">默认情况下,如果找到了一个compspec,无论它生成什么,都会作为完整的可能完成集返回给完成码。默认的Bash完备不被尝试,并且禁用Readline默认的文件名完备。如果</target>
        </trans-unit>
        <trans-unit id="2ea55945f2d6bda03f80b5e247bbd9f33429914b" translate="yes" xml:space="preserve">
          <source>By default, or when the</source>
          <target state="translated">默认情况下,或当</target>
        </trans-unit>
        <trans-unit id="871734275acfef964a064fb4b7708161a8adeed9" translate="yes" xml:space="preserve">
          <source>By default, this command is unbound.</source>
          <target state="translated">默认情况下,该命令是不绑定的。</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="f631ddb4a806d2687f4d5c8aa3c048b37442b386" translate="yes" xml:space="preserve">
          <source>C-J</source>
          <target state="translated">C-J</target>
        </trans-unit>
        <trans-unit id="5ec9d3dadc7abaeb1f5f16db2365b2aeb6a2f74b" translate="yes" xml:space="preserve">
          <source>C-_</source>
          <target state="translated">C-_</target>
        </trans-unit>
        <trans-unit id="3bff8fb1aa290267671b1c50e3b32db24f00b295" translate="yes" xml:space="preserve">
          <source>C-a</source>
          <target state="translated">C-a</target>
        </trans-unit>
        <trans-unit id="c204a76fc3c1123c96b13dd7ec922d02d4b00e91" translate="yes" xml:space="preserve">
          <source>C-b</source>
          <target state="translated">C-b</target>
        </trans-unit>
        <trans-unit id="1d8e75405de8be939b05db3eef9ab4daa516674d" translate="yes" xml:space="preserve">
          <source>C-d</source>
          <target state="translated">C-d</target>
        </trans-unit>
        <trans-unit id="a7ef1e89e28b60bd53a0a5ab746fbcd131fdf224" translate="yes" xml:space="preserve">
          <source>C-e</source>
          <target state="translated">C-e</target>
        </trans-unit>
        <trans-unit id="dd71d43937255c2ba419c077fa824865f8267186" translate="yes" xml:space="preserve">
          <source>C-f</source>
          <target state="translated">C-f</target>
        </trans-unit>
        <trans-unit id="a6d13ed5d2d00101157246b7ae1e91a19d7d7406" translate="yes" xml:space="preserve">
          <source>C-g</source>
          <target state="translated">C-g</target>
        </trans-unit>
        <trans-unit id="d5eeac2f32301e2b964f421e02a44c5afa000881" translate="yes" xml:space="preserve">
          <source>C-k</source>
          <target state="translated">C-k</target>
        </trans-unit>
        <trans-unit id="2fef5b5a274737535a312ecc5d6b8de717c1cb77" translate="yes" xml:space="preserve">
          <source>C-l</source>
          <target state="translated">C-l</target>
        </trans-unit>
        <trans-unit id="c0aa2536c4ea15884e7f0c5dd834cc587ba56461" translate="yes" xml:space="preserve">
          <source>C-o</source>
          <target state="translated">C-o</target>
        </trans-unit>
        <trans-unit id="1666955c646a9bb3fabdb2404112bd45b66ccb34" translate="yes" xml:space="preserve">
          <source>C-q</source>
          <target state="translated">C-q</target>
        </trans-unit>
        <trans-unit id="74b18abb702cb69395f60707416dd8e1f9e92a32" translate="yes" xml:space="preserve">
          <source>C-r</source>
          <target state="translated">C-r</target>
        </trans-unit>
        <trans-unit id="78540d990eb5e51e46b3d550d8999b517398872e" translate="yes" xml:space="preserve">
          <source>C-s</source>
          <target state="translated">C-s</target>
        </trans-unit>
        <trans-unit id="ac7de9aff7d0daffb3ae53140a783f411f89c587" translate="yes" xml:space="preserve">
          <source>C-u</source>
          <target state="translated">C-u</target>
        </trans-unit>
        <trans-unit id="8e0be97e2cc76979d93e15014888863a6e79a7af" translate="yes" xml:space="preserve">
          <source>C-w</source>
          <target state="translated">C-w</target>
        </trans-unit>
        <trans-unit id="298ef629795cfb23ea736c739c02035ede13e0c6" translate="yes" xml:space="preserve">
          <source>C-x</source>
          <target state="translated">C-x</target>
        </trans-unit>
        <trans-unit id="48565510392a43d2b0a14deded91b2a0fe29f254" translate="yes" xml:space="preserve">
          <source>C-x C-u</source>
          <target state="translated">C-x C-u</target>
        </trans-unit>
        <trans-unit id="f286461016d3e4db77e8a575a1f55b2d71886961" translate="yes" xml:space="preserve">
          <source>C-y</source>
          <target state="translated">C-y</target>
        </trans-unit>
        <trans-unit id="837a86d556db6579fd141227d39be97c1d1033cc" translate="yes" xml:space="preserve">
          <source>CDPATH</source>
          <target state="translated">CDPATH</target>
        </trans-unit>
        <trans-unit id="b4a60f0a5aaff3255a3b5d61fdce469e51ce425d" translate="yes" xml:space="preserve">
          <source>CHILD_MAX</source>
          <target state="translated">CHILD_MAX</target>
        </trans-unit>
        <trans-unit id="689dd245f008400f0c1242bb06996164757f3836" translate="yes" xml:space="preserve">
          <source>COLLECTIONS OF DOCUMENTS</source>
          <target state="translated">文件集</target>
        </trans-unit>
        <trans-unit id="2d5c5615b998898e7768ec56433dbebafc08a4d0" translate="yes" xml:space="preserve">
          <source>COLUMNS</source>
          <target state="translated">COLUMNS</target>
        </trans-unit>
        <trans-unit id="9416c652f11562c1a2ac149e08598792cd26d941" translate="yes" xml:space="preserve">
          <source>COMBINING DOCUMENTS</source>
          <target state="translated">合并文件</target>
        </trans-unit>
        <trans-unit id="c54d91f8309a8061ed8d3ce51bfc0402efdeb59b" translate="yes" xml:space="preserve">
          <source>COMPREPLY</source>
          <target state="translated">COMPREPLY</target>
        </trans-unit>
        <trans-unit id="573045655ccb7f151f94ec553cf8f112408e6d3d" translate="yes" xml:space="preserve">
          <source>COMP_CWORD</source>
          <target state="translated">COMP_CWORD</target>
        </trans-unit>
        <trans-unit id="12a4206f8b4410e57fcfe56d1a094d73b6d738d8" translate="yes" xml:space="preserve">
          <source>COMP_KEY</source>
          <target state="translated">COMP_KEY</target>
        </trans-unit>
        <trans-unit id="ba3578a9865f248604c8df591a2f9ecc5ac5ecab" translate="yes" xml:space="preserve">
          <source>COMP_LINE</source>
          <target state="translated">COMP_LINE</target>
        </trans-unit>
        <trans-unit id="725507daa12016c2d43e3b0a1b99d3dc87b064cd" translate="yes" xml:space="preserve">
          <source>COMP_POINT</source>
          <target state="translated">COMP_POINT</target>
        </trans-unit>
        <trans-unit id="5e0ef95695399d7cf870176ead1df3520a7f72e5" translate="yes" xml:space="preserve">
          <source>COMP_TYPE</source>
          <target state="translated">COMP_TYPE</target>
        </trans-unit>
        <trans-unit id="f464dd7fb3c7743aa15007c63b1aec837237ba49" translate="yes" xml:space="preserve">
          <source>COMP_WORDBREAKS</source>
          <target state="translated">COMP_WORDBREAKS</target>
        </trans-unit>
        <trans-unit id="b8ef04d62c426b79eb7b82899a7a138ae054223d" translate="yes" xml:space="preserve">
          <source>COMP_WORDS</source>
          <target state="translated">COMP_WORDS</target>
        </trans-unit>
        <trans-unit id="cf0c2f946b991eaed9b39914084c5c064a3f061f" translate="yes" xml:space="preserve">
          <source>COPROC</source>
          <target state="translated">COPROC</target>
        </trans-unit>
        <trans-unit id="343a641fe4a78507db7e2252ee941d90557af1bc" translate="yes" xml:space="preserve">
          <source>COPYING IN QUANTITY</source>
          <target state="translated">按量复制</target>
        </trans-unit>
        <trans-unit id="fb7016a4f1b2784abc4adfaf50a885353f7a7a75" translate="yes" xml:space="preserve">
          <source>CPU-COMPANY-SYSTEM</source>
          <target state="translated">CPU-COMPANY-SYSTEM</target>
        </trans-unit>
        <trans-unit id="b926330f493034aa4fdc02c7fbed8ace2f494177" translate="yes" xml:space="preserve">
          <source>Capitalize the current (or following) word. With a negative argument, capitalize the previous word, but do not move the cursor.</source>
          <target state="translated">将当前(或后面)的单词大写。如果参数为负数,则将前一个单词大写,但不移动光标。</target>
        </trans-unit>
        <trans-unit id="e6e9221a2feb66cb5ed0d71b8833143034549d0d" translate="yes" xml:space="preserve">
          <source>Cause &lt;code&gt;read&lt;/code&gt; to time out and return failure if a complete line of input (or a specified number of characters) is not read within &lt;var&gt;timeout&lt;/var&gt; seconds. &lt;var&gt;timeout&lt;/var&gt; may be a decimal number with a fractional portion following the decimal point. This option is only effective if &lt;code&gt;read&lt;/code&gt; is reading input from a terminal, pipe, or other special file; it has no effect when reading from regular files. If &lt;code&gt;read&lt;/code&gt; times out, &lt;code&gt;read&lt;/code&gt; saves any partial input read into the specified variable &lt;var&gt;name&lt;/var&gt;. If &lt;var&gt;timeout&lt;/var&gt; is 0, &lt;code&gt;read&lt;/code&gt; returns immediately, without trying to read and data. The exit status is 0 if input is available on the specified file descriptor, non-zero otherwise. The exit status is greater than 128 if the timeout is exceeded.</source>
          <target state="translated">如果在 &lt;var&gt;timeout&lt;/var&gt; 秒内未读取完整的输入行（或指定的字符数），则会导致 &lt;code&gt;read&lt;/code&gt; 超时并返回失败。 &lt;var&gt;timeout&lt;/var&gt; 可能是一个十进制数字，小数点后面是小数部分。仅当 &lt;code&gt;read&lt;/code&gt; 正在读取来自端子，管道或其他特殊文件的输入时，此选项才有效。从常规文件读取时，它无效。如果 &lt;code&gt;read&lt;/code&gt; 超时，则 &lt;code&gt;read&lt;/code&gt; 会将读取的所有部分输入保存到指定的变量 &lt;var&gt;name&lt;/var&gt; 。如果 &lt;var&gt;timeout&lt;/var&gt; 为0，则 &lt;code&gt;read&lt;/code&gt; 立即返回，而无需尝试读取和数据。如果输入在指定的文件描述符上可用，则退出状态为0，否则为非零。如果超时，则退出状态大于128。</target>
        </trans-unit>
        <trans-unit id="524b3a244fcb370aa93e4cb9770a7ae5615f8868" translate="yes" xml:space="preserve">
          <source>Cause &lt;code&gt;read&lt;/code&gt; to time out and return failure if a complete line of input (or a specified number of characters) is not read within &lt;var&gt;timeout&lt;/var&gt; seconds. &lt;var&gt;timeout&lt;/var&gt; may be a decimal number with a fractional portion following the decimal point. This option is only effective if &lt;code&gt;read&lt;/code&gt; is reading input from a terminal, pipe, or other special file; it has no effect when reading from regular files. If &lt;code&gt;read&lt;/code&gt; times out, &lt;code&gt;read&lt;/code&gt; saves any partial input read into the specified variable &lt;var&gt;name&lt;/var&gt;. If &lt;var&gt;timeout&lt;/var&gt; is 0, &lt;code&gt;read&lt;/code&gt; returns immediately, without trying to read any data. The exit status is 0 if input is available on the specified file descriptor, non-zero otherwise. The exit status is greater than 128 if the timeout is exceeded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30465418eddc74917bfb96d5e2222cf5cb081ffa" translate="yes" xml:space="preserve">
          <source>Cause &lt;var&gt;shell-command&lt;/var&gt; to be executed whenever &lt;var&gt;keyseq&lt;/var&gt; is entered. When &lt;var&gt;shell-command&lt;/var&gt; is executed, the shell sets the &lt;code&gt;READLINE_LINE&lt;/code&gt; variable to the contents of the Readline line buffer and the &lt;code&gt;READLINE_POINT&lt;/code&gt; and &lt;code&gt;READLINE_MARK&lt;/code&gt; variables to the current location of the insertion point and the saved insertion point (the &lt;var&gt;mark&lt;/var&gt;), respectively. If the executed command changes the value of any of &lt;code&gt;READLINE_LINE&lt;/code&gt;, &lt;code&gt;READLINE_POINT&lt;/code&gt;, or &lt;code&gt;READLINE_MARK&lt;/code&gt;, those new values will be reflected in the editing state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45406ed9a39fda567678493e4d8511af4c5b5d3" translate="yes" xml:space="preserve">
          <source>Cause &lt;var&gt;shell-command&lt;/var&gt; to be executed whenever &lt;var&gt;keyseq&lt;/var&gt; is entered. When &lt;var&gt;shell-command&lt;/var&gt; is executed, the shell sets the &lt;code&gt;READLINE_LINE&lt;/code&gt; variable to the contents of the Readline line buffer and the &lt;code&gt;READLINE_POINT&lt;/code&gt; variable to the current location of the insertion point. If the executed command changes the value of &lt;code&gt;READLINE_LINE&lt;/code&gt; or &lt;code&gt;READLINE_POINT&lt;/code&gt;, those new values will be reflected in the editing state.</source>
          <target state="translated">原因 &lt;var&gt;shell-command&lt;/var&gt; 时要执行 &lt;var&gt;keyseq&lt;/var&gt; 输入。当执行 &lt;var&gt;shell-command&lt;/var&gt; ，shell将 &lt;code&gt;READLINE_LINE&lt;/code&gt; 变量设置为Readline行缓冲区的内容，并将 &lt;code&gt;READLINE_POINT&lt;/code&gt; 变量设置为插入点的当前位置。如果执行的命令更改了 &lt;code&gt;READLINE_LINE&lt;/code&gt; 或 &lt;code&gt;READLINE_POINT&lt;/code&gt; 的值，则这些新值将反映在编辑状态中。</target>
        </trans-unit>
        <trans-unit id="47c50d83112a0125eb2f9000824249872255d108" translate="yes" xml:space="preserve">
          <source>Cause a shell function to stop executing and return the value &lt;var&gt;n&lt;/var&gt; to its caller. If &lt;var&gt;n&lt;/var&gt; is not supplied, the return value is the exit status of the last command executed in the function. If &lt;code&gt;return&lt;/code&gt; is executed by a trap handler, the last command used to determine the status is the last command executed before the trap handler. If &lt;code&gt;return&lt;/code&gt; is executed during a &lt;code&gt;DEBUG&lt;/code&gt; trap, the last command used to determine the status is the last command executed by the trap handler before &lt;code&gt;return&lt;/code&gt; was invoked. &lt;code&gt;return&lt;/code&gt; may also be used to terminate execution of a script being executed with the &lt;code&gt;.&lt;/code&gt; (&lt;code&gt;source&lt;/code&gt;) builtin, returning either &lt;var&gt;n&lt;/var&gt; or the exit status of the last command executed within the script as the exit status of the script. If &lt;var&gt;n&lt;/var&gt; is supplied, the return value is its least significant 8 bits. Any command associated with the &lt;code&gt;RETURN&lt;/code&gt; trap is executed before execution resumes after the function or script. The return status is non-zero if &lt;code&gt;return&lt;/code&gt; is supplied a non-numeric argument or is used outside a function and not during the execution of a script by &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;source&lt;/code&gt;.</source>
          <target state="translated">使Shell函数停止执行并将值 &lt;var&gt;n&lt;/var&gt; 返回给其调用方。如果未提供 &lt;var&gt;n&lt;/var&gt; ，则返回值是函数中最后执行的命令的退出状态。如果 &lt;code&gt;return&lt;/code&gt; 是由陷阱处理程序执行的，则用于确定状态的最后一条命令是陷阱处理程序之前执行的最后一条命令。如果在 &lt;code&gt;DEBUG&lt;/code&gt; 陷阱期间执行 &lt;code&gt;return&lt;/code&gt; ，则用于确定状态的最后一条命令是陷阱处理程序在调用 &lt;code&gt;return&lt;/code&gt; 之前执行的最后一条命令。 &lt;code&gt;return&lt;/code&gt; 还可用于终止使用.exe执行的脚本的执行 &lt;code&gt;.&lt;/code&gt; （ &lt;code&gt;source&lt;/code&gt; ）内置，返回 &lt;var&gt;n&lt;/var&gt; 或脚本中最后执行的命令的退出状态作为脚本的退出状态。如果提供 &lt;var&gt;n&lt;/var&gt; ，则返回值为其最低有效8位。与 &lt;code&gt;RETURN&lt;/code&gt; 陷阱关联的任何命令都将在函数或脚本之后恢复执行之前执行。如果为 &lt;code&gt;return&lt;/code&gt; 提供非数字参数或在函数外部而不是由执行脚本期间使用return，则返回状态为非零 &lt;code&gt;.&lt;/code&gt; 或 &lt;code&gt;source&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e2ba9ddce76bb572c5cf2c46d16a2e07a896c2bc" translate="yes" xml:space="preserve">
          <source>Cause changes to be applied over the entire event line. Used in conjunction with &amp;lsquo;</source>
          <target state="translated">使更改应用于整个事件行。与&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="d631de49cc768578d5e30577f7b779d841d3792f" translate="yes" xml:space="preserve">
          <source>Cause the &lt;code&gt;direxpand&lt;/code&gt; shell option (see &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;) to be enabled by default when the shell starts. It is normally disabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f21c44fed98cfb4736d16c5cc7fe27c839dd4bc" translate="yes" xml:space="preserve">
          <source>Cause the &lt;code&gt;direxpand&lt;/code&gt; shell option (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;) to be enabled by default when the shell starts. It is normally disabled by default.</source>
          <target state="translated">导致 &lt;code&gt;direxpand&lt;/code&gt; 外壳选项（参见&lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;内建命令shopt&lt;/a&gt;）在默认情况下，当外壳开始启用。通常默认情况下禁用它。</target>
        </trans-unit>
        <trans-unit id="bceba0041e73d4a94f23d00a18b56956ea994b29" translate="yes" xml:space="preserve">
          <source>Cause the status of terminated background jobs to be reported immediately, rather than before printing the next primary prompt.</source>
          <target state="translated">使终止的后台作业的状态立即报告,而不是在打印下一个主要提示之前报告。</target>
        </trans-unit>
        <trans-unit id="151cb07b853c442fcf3f2ee439bec008eb5d136f" translate="yes" xml:space="preserve">
          <source>Causes &lt;code&gt;dirs&lt;/code&gt; to print the directory stack with one entry per line, prefixing each entry with its index in the stack.</source>
          <target state="translated">使 &lt;code&gt;dirs&lt;/code&gt; 打印目录堆栈每行一个条目，并在堆栈中为每个条目加上索引。</target>
        </trans-unit>
        <trans-unit id="e782a56479c21e4133b7a66a5f698bdf297beaf9" translate="yes" xml:space="preserve">
          <source>Causes &lt;code&gt;dirs&lt;/code&gt; to print the directory stack with one entry per line.</source>
          <target state="translated">使 &lt;code&gt;dirs&lt;/code&gt; 打印目录堆栈，每行只有一个条目。</target>
        </trans-unit>
        <trans-unit id="b1dbf73480a3691c206740a3e68211fd6855b20e" translate="yes" xml:space="preserve">
          <source>Causes &lt;code&gt;printf&lt;/code&gt; to expand backslash escape sequences in the corresponding &lt;var&gt;argument&lt;/var&gt; in the same way as &lt;code&gt;echo -e&lt;/code&gt; (see &lt;a href=&quot;#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">使 &lt;code&gt;printf&lt;/code&gt; 以与 &lt;code&gt;echo -e&lt;/code&gt; 相同的方式在相应的 &lt;var&gt;argument&lt;/var&gt; 中扩展反斜杠转义序列（请参见&lt;a href=&quot;#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5d60384fd31826cbc780a657654c4529869524b3" translate="yes" xml:space="preserve">
          <source>Causes &lt;code&gt;printf&lt;/code&gt; to output the corresponding &lt;var&gt;argument&lt;/var&gt; in a format that can be reused as shell input.</source>
          <target state="translated">使 &lt;code&gt;printf&lt;/code&gt; 以可复用为shell输入的格式输出相应的 &lt;var&gt;argument&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e2a62239d9bda86c46cf27afe91bfcf846daca2" translate="yes" xml:space="preserve">
          <source>Causes &lt;code&gt;printf&lt;/code&gt; to output the date-time string resulting from using &lt;var&gt;datefmt&lt;/var&gt; as a format string for &lt;code&gt;strftime&lt;/code&gt;(3). The corresponding &lt;var&gt;argument&lt;/var&gt; is an integer representing the number of seconds since the epoch. Two special argument values may be used: -1 represents the current time, and -2 represents the time the shell was invoked. If no argument is specified, conversion behaves as if -1 had been given. This is an exception to the usual &lt;code&gt;printf&lt;/code&gt; behavior.</source>
          <target state="translated">使 &lt;code&gt;printf&lt;/code&gt; 输出日期时间字符串，该日期时间字符串是由于使用 &lt;var&gt;datefmt&lt;/var&gt; 作为 &lt;code&gt;strftime&lt;/code&gt; （3）的格式字符串而产生的。相应的 &lt;var&gt;argument&lt;/var&gt; 是一个整数，表示自纪元以来的秒数。可以使用两个特殊的参数值：-1表示当前时间，-2表示外壳程序被调用的时间。如果未指定任何参数，则转换的行为就像已给出-1。这是通常的 &lt;code&gt;printf&lt;/code&gt; 行为的例外。</target>
        </trans-unit>
        <trans-unit id="a08b8e851c899a305e4c6b9dfe1f2372d7784436" translate="yes" xml:space="preserve">
          <source>Change and report the hard limit associated with a resource.</source>
          <target state="translated">更改并报告与资源相关的硬限制。</target>
        </trans-unit>
        <trans-unit id="d2fc2e4da975b43e0683f36b645afeee19f39729" translate="yes" xml:space="preserve">
          <source>Change and report the soft limit associated with a resource.</source>
          <target state="translated">更改并报告与资源相关的软限制。</target>
        </trans-unit>
        <trans-unit id="384333b5ae729897ae86c765452344bf5d5dd00b" translate="yes" xml:space="preserve">
          <source>Change the behavior of Bash where the default operation differs from the &lt;small&gt;POSIX&lt;/small&gt; standard to match the standard (see &lt;a href=&quot;bash-posix-mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;). This is intended to make Bash behave as a strict superset of that standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44846af504ce324d8605f01db4a18136dd14b76d" translate="yes" xml:space="preserve">
          <source>Change the behavior of Bash where the default operation differs from the &lt;small&gt;POSIX&lt;/small&gt; standard to match the standard (see &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;). This is intended to make Bash behave as a strict superset of that standard.</source>
          <target state="translated">更改默认操作与&lt;small&gt;POSIX&lt;/small&gt;标准不同的Bash行为以使其符合标准（请参阅&lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX模式&lt;/a&gt;）。这旨在使Bash成为该标准的严格超集。</target>
        </trans-unit>
        <trans-unit id="7fa9286295bb584bc5357971fc50266f56467ce2" translate="yes" xml:space="preserve">
          <source>Change the behavior of Bash where the default operation differs from the &lt;small&gt;POSIX&lt;/small&gt; standard to match the standard. This is intended to make Bash behave as a strict superset of that standard. See &lt;a href=&quot;bash-posix-mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;, for a description of the Bash &lt;small&gt;POSIX&lt;/small&gt; mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3ad73393ca1c353c8d3b2a06484f4b02e14846" translate="yes" xml:space="preserve">
          <source>Change the behavior of Bash where the default operation differs from the &lt;small&gt;POSIX&lt;/small&gt; standard to match the standard. This is intended to make Bash behave as a strict superset of that standard. See &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;, for a description of the Bash &lt;small&gt;POSIX&lt;/small&gt; mode.</source>
          <target state="translated">更改默认操作与&lt;small&gt;POSIX&lt;/small&gt;标准不同的Bash行为，以匹配该标准。这旨在使Bash成为该标准的严格超集。见&lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;击POSIX模式&lt;/a&gt;，对于击的描述&lt;small&gt;POSIX&lt;/small&gt;模式。</target>
        </trans-unit>
        <trans-unit id="cbb8974ea34c93350a1529eadfdde40fcc13cca0" translate="yes" xml:space="preserve">
          <source>Change the current working directory to &lt;var&gt;directory&lt;/var&gt;. If &lt;var&gt;directory&lt;/var&gt; is not supplied, the value of the &lt;code&gt;HOME&lt;/code&gt; shell variable is used. Any additional arguments following &lt;var&gt;directory&lt;/var&gt; are ignored. If the shell variable &lt;code&gt;CDPATH&lt;/code&gt; exists, it is used as a search path: each directory name in &lt;code&gt;CDPATH&lt;/code&gt; is searched for &lt;var&gt;directory&lt;/var&gt;, with alternative directory names in &lt;code&gt;CDPATH&lt;/code&gt; separated by a colon (&amp;lsquo;</source>
          <target state="translated">将当前工作目录更改为 &lt;var&gt;directory&lt;/var&gt; 。如果未提供 &lt;var&gt;directory&lt;/var&gt; ，则使用 &lt;code&gt;HOME&lt;/code&gt; shell变量的值。 &lt;var&gt;directory&lt;/var&gt; 所有其他参数将被忽略。如果存在shell变量 &lt;code&gt;CDPATH&lt;/code&gt; ，则将其用作搜索路径：在 &lt;code&gt;CDPATH&lt;/code&gt; 中的每个目录名称中搜索 &lt;var&gt;directory&lt;/var&gt; ，在 &lt;code&gt;CDPATH&lt;/code&gt; 中的替代目录名称之间用冒号（'</target>
        </trans-unit>
        <trans-unit id="407af34fa37c33517e6ca05aa8b706bed0d6b46a" translate="yes" xml:space="preserve">
          <source>Change the values of shell attributes and positional parameters.</source>
          <target state="translated">改变外壳属性和位置参数的值。</target>
        </trans-unit>
        <trans-unit id="9b59218df63dde48a3feeb097e5bf936cd130ccc" translate="yes" xml:space="preserve">
          <source>Changing directories with the &lt;code&gt;cd&lt;/code&gt; builtin.</source>
          <target state="translated">使用内置的 &lt;code&gt;cd&lt;/code&gt; 更改目录。</target>
        </trans-unit>
        <trans-unit id="edb31bb75fd315d4f5c9127f1a5e92abdf33e5f5" translate="yes" xml:space="preserve">
          <source>Chapter describing the command line editing features.</source>
          <target state="translated">介绍命令行编辑功能的章节。</target>
        </trans-unit>
        <trans-unit id="7dea55cfff2fc60902ee44f5ba817d2ca35aad7f" translate="yes" xml:space="preserve">
          <source>Clear the history list. This may be combined with the other options to replace the history list completely.</source>
          <target state="translated">清除历史记录列表。此项可与其他选项结合使用,以完全取代历史列表。</target>
        </trans-unit>
        <trans-unit id="f7dac2e2707d7916613ef16a3d87f5dbfbfa4328" translate="yes" xml:space="preserve">
          <source>Clear the screen and redraw the current line, leaving the current line at the top of the screen.</source>
          <target state="translated">清理屏幕并重新绘制当前行,将当前行留在屏幕顶部。</target>
        </trans-unit>
        <trans-unit id="07de533e176cf844cd285bb67cead604407cd52b" translate="yes" xml:space="preserve">
          <source>Clear the screen and, if possible, the terminal&amp;rsquo;s scrollback buffer, then redraw the current line, leaving the current line at the top of the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd5babfd59773e4b9a28a740b93b2702bf90485" translate="yes" xml:space="preserve">
          <source>Clear the screen, reprinting the current line at the top.</source>
          <target state="translated">清理屏幕,在顶部重新打印当前行。</target>
        </trans-unit>
        <trans-unit id="2aed45fd8dc83b632de1e5a00ff34afcaa1828d5" translate="yes" xml:space="preserve">
          <source>Clear the screen, then redraw the current line, leaving the current line at the top of the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d1837dbf4e1b81e1750f5c1f5094d12180a4ac" translate="yes" xml:space="preserve">
          <source>Clears the directory stack by deleting all of the elements.</source>
          <target state="translated">通过删除所有元素来清除目录栈。</target>
        </trans-unit>
        <trans-unit id="3e5b9660cde1962adabbbea6202b6f3207a99875" translate="yes" xml:space="preserve">
          <source>Command Execution Environment</source>
          <target state="translated">命令执行环境</target>
        </trans-unit>
        <trans-unit id="1e9c66f240ad44b82b702550f265c1d3880beb1e" translate="yes" xml:space="preserve">
          <source>Command Grouping</source>
          <target state="translated">命令分组</target>
        </trans-unit>
        <trans-unit id="3531c279b9620ebb55a288373da55ef0656c4c04" translate="yes" xml:space="preserve">
          <source>Command History Expansion</source>
          <target state="translated">指令历史扩展</target>
        </trans-unit>
        <trans-unit id="c58a024ddf74da4e609ddb6cb105c407857b51c5" translate="yes" xml:space="preserve">
          <source>Command Line Editing</source>
          <target state="translated">命令行编辑</target>
        </trans-unit>
        <trans-unit id="72f3d56ef38f562fe2c2db25166a758cad8ae332" translate="yes" xml:space="preserve">
          <source>Command Search and Execution</source>
          <target state="translated">命令搜索和执行</target>
        </trans-unit>
        <trans-unit id="65bc76a2fc0dadc75a9ee937c1c98b89fa46b4fa" translate="yes" xml:space="preserve">
          <source>Command Substitution</source>
          <target state="translated">命令替换</target>
        </trans-unit>
        <trans-unit id="1adb453fa45a2cf5167f74f8d73e91854de711a9" translate="yes" xml:space="preserve">
          <source>Command history (see &lt;a href=&quot;bash-history-facilities&quot;&gt;Bash History Facilities&lt;/a&gt;) and history expansion (see &lt;a href=&quot;history-interaction&quot;&gt;History Interaction&lt;/a&gt;) are enabled by default. Bash will save the command history to the file named by &lt;code&gt;$HISTFILE&lt;/code&gt; when a shell with history enabled exits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3eb5154f685e87f207c05d60033093863f0032" translate="yes" xml:space="preserve">
          <source>Command history (see &lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash History Facilities&lt;/a&gt;) and history expansion (see &lt;a href=&quot;history-interaction#History-Interaction&quot;&gt;History Interaction&lt;/a&gt;) are enabled by default. Bash will save the command history to the file named by &lt;code&gt;$HISTFILE&lt;/code&gt; when a shell with history enabled exits.</source>
          <target state="translated">默认情况下，命令历史记录（请参阅&lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash历史记录设施&lt;/a&gt;）和历史记录扩展（请参阅&lt;a href=&quot;history-interaction#History-Interaction&quot;&gt;History Interaction&lt;/a&gt;）处于启用状态。当启用历史记录的shell退出时，Bash将命令历史记录保存到 &lt;code&gt;$HISTFILE&lt;/code&gt; 命名的文件中。</target>
        </trans-unit>
        <trans-unit id="6866e1be4122ab07ddbef5be25678b5218214da6" translate="yes" xml:space="preserve">
          <source>Command line options that you can give to Bash.</source>
          <target state="translated">你可以给Bash提供的命令行选项。</target>
        </trans-unit>
        <trans-unit id="7670a907c42228501c1fefdd8569e1b0dc5a50ab" translate="yes" xml:space="preserve">
          <source>Command names. May also be specified as</source>
          <target state="translated">命令名称。也可指定为</target>
        </trans-unit>
        <trans-unit id="dd2f2df0a1b63211c1ce976e67546cd3aa6532a5" translate="yes" xml:space="preserve">
          <source>Command substitution allows the output of a command to replace the command itself. Command substitution occurs when a command is enclosed as follows:</source>
          <target state="translated">命令替换允许命令的输出替换命令本身。当一个命令包含以下内容时,就会发生命令替换。</target>
        </trans-unit>
        <trans-unit id="c153dce78bd4b76aa0a8ee0ea8c07a0a7954bde5" translate="yes" xml:space="preserve">
          <source>Command substitution, commands grouped with parentheses, and asynchronous commands are invoked in a subshell environment that is a duplicate of the shell environment, except that traps caught by the shell are reset to the values that the shell inherited from its parent at invocation. Builtin commands that are invoked as part of a pipeline are also executed in a subshell environment. Changes made to the subshell environment cannot affect the shell&amp;rsquo;s execution environment.</source>
          <target state="translated">在与shell环境重复的子shell环境中调用命令替换，用括号分组的命令以及异步命令，除了shell捕获的陷阱会重置为shell调用时从其父级继承的值。作为流水线的一部分调用的内置命令也在子shell环境中执行。对子外壳环境所做的更改不会影响外壳的执行环境。</target>
        </trans-unit>
        <trans-unit id="1c3a8db228748db87eec94d2dfa56204049ba4e9" translate="yes" xml:space="preserve">
          <source>Command substitutions may be nested. To nest when using the backquoted form, escape the inner backquotes with backslashes.</source>
          <target state="translated">命令替换可以进行嵌套。使用反引号形式时,请用反斜杠转义内部的反引号。</target>
        </trans-unit>
        <trans-unit id="3a9cdc9c6e6a587571f6f4be625717492211deef" translate="yes" xml:space="preserve">
          <source>Commands For Changing Text</source>
          <target state="translated">更改文字的命令</target>
        </trans-unit>
        <trans-unit id="0f603458c7bba6d82491ab224297eb15a9aed4bd" translate="yes" xml:space="preserve">
          <source>Commands For Completion</source>
          <target state="translated">完成命令</target>
        </trans-unit>
        <trans-unit id="dcb93c01cd0f418f31a0349a777670d9a04cbbd4" translate="yes" xml:space="preserve">
          <source>Commands For History</source>
          <target state="translated">历史命令</target>
        </trans-unit>
        <trans-unit id="5994dde2ca8cf16f815ac45ae47cf200b7dc696d" translate="yes" xml:space="preserve">
          <source>Commands For Killing</source>
          <target state="translated">杀人命令</target>
        </trans-unit>
        <trans-unit id="329cb5ac44eced8dd704aa6b97257cc78935f354" translate="yes" xml:space="preserve">
          <source>Commands For Manipulating The History</source>
          <target state="translated">操纵历史记录的命令</target>
        </trans-unit>
        <trans-unit id="8d6bbee6b8e6fbc182b911af2255c2a6d3a8f6c3" translate="yes" xml:space="preserve">
          <source>Commands For Moving</source>
          <target state="translated">移动命令</target>
        </trans-unit>
        <trans-unit id="084f549cc654f41e93fbd4ca9a2d992ab730dbba" translate="yes" xml:space="preserve">
          <source>Commands For Text</source>
          <target state="translated">文本的命令</target>
        </trans-unit>
        <trans-unit id="f7dd42d8327137689e528bbaecc8cd7e644031ec" translate="yes" xml:space="preserve">
          <source>Commands for changing text.</source>
          <target state="translated">修改文字的命令。</target>
        </trans-unit>
        <trans-unit id="b43bef0f00596bc5eb24bc2b7fc459c70f9cb2f0" translate="yes" xml:space="preserve">
          <source>Commands for killing and yanking.</source>
          <target state="translated">杀人和拽人的命令。</target>
        </trans-unit>
        <trans-unit id="c386e3741a204dc08f2cb9ed3dab37f69eb9e72b" translate="yes" xml:space="preserve">
          <source>Commands in this branch of the &lt;code&gt;$if&lt;/code&gt; directive are executed if the test fails.</source>
          <target state="translated">如果测试失败，则执行 &lt;code&gt;$if&lt;/code&gt; 指令此分支中的命令。</target>
        </trans-unit>
        <trans-unit id="795c9ad7be7d0758e852ff0e782ef99044a478e9" translate="yes" xml:space="preserve">
          <source>Commands separated by a &amp;lsquo;</source>
          <target state="translated">以'分隔的命令</target>
        </trans-unit>
        <trans-unit id="7963e537f2082ae93c50e65ee8a4fd56187d5749" translate="yes" xml:space="preserve">
          <source>Commands that are a part of the shell.</source>
          <target state="translated">作为shell的一部分的命令。</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="96c5b8a2794a4d65cf6e6d730312402cb50f5b40" translate="yes" xml:space="preserve">
          <source>Compatibility Level</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d9f235cb9c7c65f0cf0b1b0814cadde6d86abcb" translate="yes" xml:space="preserve">
          <source>Compatibility Mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c3291b28fe4fcf4e224585008aa8ff6ca5de6a" translate="yes" xml:space="preserve">
          <source>Compilers and Options</source>
          <target state="translated">编译器和选项</target>
        </trans-unit>
        <trans-unit id="493a48c734e8b25f7d6248767601663deada5b9e" translate="yes" xml:space="preserve">
          <source>Compiling For Multiple Architectures</source>
          <target state="translated">为多架构编译</target>
        </trans-unit>
        <trans-unit id="e63b5fda96c513b8c6c03bc1e2bad742363ef10e" translate="yes" xml:space="preserve">
          <source>Complicated extended pattern matching against long strings is slow, especially when the patterns contain alternations and the strings contain multiple matches. Using separate matches against shorter strings, or using arrays of strings instead of a single long string, may be faster.</source>
          <target state="translated">对长字符串进行复杂的扩展模式匹配速度很慢,特别是当模式包含交替和字符串包含多个匹配时。对较短的字符串进行单独匹配,或者使用字符串数组代替单个长字符串,可能会更快。</target>
        </trans-unit>
        <trans-unit id="516ed6a202e3a73524d26a065c84277bee76e76d" translate="yes" xml:space="preserve">
          <source>Compound Commands</source>
          <target state="translated">复合命令</target>
        </trans-unit>
        <trans-unit id="13a340752384378617027da6463b668d61b4f3c1" translate="yes" xml:space="preserve">
          <source>Compound commands are the shell programming language constructs. Each construct begins with a reserved word or control operator and is terminated by a corresponding reserved word or operator. Any redirections (see &lt;a href=&quot;redirections&quot;&gt;Redirections&lt;/a&gt;) associated with a compound command apply to all commands within that compound command unless explicitly overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04e0a92aec08aa5a7a3ee5216b515499c875319" translate="yes" xml:space="preserve">
          <source>Compound commands are the shell programming language constructs. Each construct begins with a reserved word or control operator and is terminated by a corresponding reserved word or operator. Any redirections (see &lt;a href=&quot;redirections#Redirections&quot;&gt;Redirections&lt;/a&gt;) associated with a compound command apply to all commands within that compound command unless explicitly overridden.</source>
          <target state="translated">复合命令是Shell编程语言的构造。每个构造都以保留字或控制运算符开头，并以相应的保留字或控制符终止。与复合命令关联的任何重定向（请参阅&lt;a href=&quot;redirections#Redirections&quot;&gt;Redirections&lt;/a&gt;）都适用于该复合命令中的所有命令，除非明确覆盖。</target>
        </trans-unit>
        <trans-unit id="deeb953eb7ef69ac491f2aa55c295d5bec25ce8b" translate="yes" xml:space="preserve">
          <source>Concept Index</source>
          <target state="translated">概念指数</target>
        </trans-unit>
        <trans-unit id="28fc57178ee113ee9b3b5b60ed84e7c75da158b8" translate="yes" xml:space="preserve">
          <source>Conditional Constructs</source>
          <target state="translated">条件结构</target>
        </trans-unit>
        <trans-unit id="3fcb10c945dc8f468ebf8ec6946b032b19bb158c" translate="yes" xml:space="preserve">
          <source>Conditional Init Constructs</source>
          <target state="translated">条件性初始化结构</target>
        </trans-unit>
        <trans-unit id="1dd4675cc1d958e94e008d6aad8c15b5564f2e5c" translate="yes" xml:space="preserve">
          <source>Conditional expressions are used by the &lt;code&gt;[[&lt;/code&gt; compound command and the &lt;code&gt;test&lt;/code&gt; and &lt;code&gt;[&lt;/code&gt; builtin commands. The &lt;code&gt;test&lt;/code&gt; and &lt;code&gt;[&lt;/code&gt; commands determine their behavior based on the number of arguments; see the descriptions of those commands for any other command-specific actions.</source>
          <target state="translated">&lt;code&gt;[[&lt;/code&gt; 复合命令以及 &lt;code&gt;test&lt;/code&gt; 和 &lt;code&gt;[&lt;/code&gt; 内置命令] 使用条件表达式。的 &lt;code&gt;test&lt;/code&gt; 和 &lt;code&gt;[&lt;/code&gt; 命令确定基于参数的数目的行为; 有关其他任何特定于命令的操作，请参见这些命令的说明。</target>
        </trans-unit>
        <trans-unit id="8117a98ae9efe0fd1a71e49ecf482c7ea30b28ad" translate="yes" xml:space="preserve">
          <source>Conditional key bindings in the inputrc file.</source>
          <target state="translated">输入rc文件中的条件键绑定。</target>
        </trans-unit>
        <trans-unit id="5d2b4a065324ed3c3da628bf5cb57fa94ad07e10" translate="yes" xml:space="preserve">
          <source>Connecting the input and output of several commands.</source>
          <target state="translated">连接几个命令的输入和输出。</target>
        </trans-unit>
        <trans-unit id="cdb15c9f53115c5f9339546588f580f1bdc65ae3" translate="yes" xml:space="preserve">
          <source>Constants with a leading 0 are interpreted as octal numbers. A leading &amp;lsquo;</source>
          <target state="translated">前导0的常量被解释为八进制数。领先的</target>
        </trans-unit>
        <trans-unit id="8a2442c733dc4d42993d58f2384aa9304cc50262" translate="yes" xml:space="preserve">
          <source>Contains the name of a file in the same format as</source>
          <target state="translated">包含一个文件的名称,其格式与</target>
        </trans-unit>
        <trans-unit id="1210cc85a00377bcbf73a439aada0aeb8e0e481b" translate="yes" xml:space="preserve">
          <source>Controlling the Prompt</source>
          <target state="translated">控制提示</target>
        </trans-unit>
        <trans-unit id="ec96b0a3286527b85362f13dfabb077e7ab45469" translate="yes" xml:space="preserve">
          <source>Controls the action of the shell on receipt of an &lt;code&gt;EOF&lt;/code&gt; character as the sole input. If set, the value denotes the number of consecutive &lt;code&gt;EOF&lt;/code&gt; characters that can be read as the first character on an input line before the shell will exit. If the variable exists but does not have a numeric value, or has no value, then the default is 10. If the variable does not exist, then &lt;code&gt;EOF&lt;/code&gt; signifies the end of input to the shell. This is only in effect for interactive shells.</source>
          <target state="translated">在收到 &lt;code&gt;EOF&lt;/code&gt; 字符作为唯一输入时控制外壳的动作。如果设置，则该值表示连续的 &lt;code&gt;EOF&lt;/code&gt; 字符数，可以在外壳退出前作为输入行上的第一个字符读取。如果变量存在但没有数字值或没有值，则默认值为10。如果变量不存在，则 &lt;code&gt;EOF&lt;/code&gt; 表示输入到Shell的末尾。这仅对交互式外壳有效。</target>
        </trans-unit>
        <trans-unit id="6002ea4f042d9c85781650caca5521414dd1dd5d" translate="yes" xml:space="preserve">
          <source>Controls what happens when Readline wants to ring the terminal bell. If set to &amp;lsquo;</source>
          <target state="translated">控制Readline想要响铃时发生的情况。如果设置为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="5c8a7a03c931d858f642a0ffafb460a33532b63c" translate="yes" xml:space="preserve">
          <source>Coprocesses</source>
          <target state="translated">Coprocesses</target>
        </trans-unit>
        <trans-unit id="17b241230490f5583b64ce80f56e5cecb791875d" translate="yes" xml:space="preserve">
          <source>Copy at most &lt;var&gt;count&lt;/var&gt; lines. If &lt;var&gt;count&lt;/var&gt; is 0, all lines are copied.</source>
          <target state="translated">复制最多 &lt;var&gt;count&lt;/var&gt; 行。如果 &lt;var&gt;count&lt;/var&gt; 为0，将复制所有行。</target>
        </trans-unit>
        <trans-unit id="2995b8338a670d15c3a7987a7725e793d3a22024" translate="yes" xml:space="preserve">
          <source>Copy the text in the region to the kill buffer, so it can be yanked right away. By default, this command is unbound.</source>
          <target state="translated">将区域内的文字复制到杀戮缓冲区,这样就可以马上将其拽出来。默认情况下,这个命令是不绑定的。</target>
        </trans-unit>
        <trans-unit id="6edd8b1e99d094b05e212ad2e9cdcfbbb8edb9cb" translate="yes" xml:space="preserve">
          <source>Copy the word before point to the kill buffer. The word boundaries are the same as &lt;code&gt;backward-word&lt;/code&gt;. By default, this command is unbound.</source>
          <target state="translated">将单词之前的单词复制到终止缓冲区。单词边界与 &lt;code&gt;backward-word&lt;/code&gt; 相同。默认情况下，此命令是未绑定的。</target>
        </trans-unit>
        <trans-unit id="39206e54a93de37916e39080e9da691c9ed6b95d" translate="yes" xml:space="preserve">
          <source>Copy the word following point to the kill buffer. The word boundaries are the same as &lt;code&gt;forward-word&lt;/code&gt;. By default, this command is unbound.</source>
          <target state="translated">将以下单词复制到终止缓冲区。单词边界与 &lt;code&gt;forward-word&lt;/code&gt; 相同。默认情况下，此命令是未绑定的。</target>
        </trans-unit>
        <trans-unit id="fb533437eb7cefc07001f7d7e4ce2e0bf7aa1f2c" translate="yes" xml:space="preserve">
          <source>Copying and sharing this documentation.</source>
          <target state="translated">复制和共享该文件。</target>
        </trans-unit>
        <trans-unit id="154784820baffd42626a2bcde20aa0381aaae095" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.</source>
          <target state="translated">版权所有&amp;copy;2000、2001、2002、2007、2008 Free Software Foundation，Inc.</target>
        </trans-unit>
        <trans-unit id="e437b60a6846f553df7ff9d9a352503a73b81bd3" translate="yes" xml:space="preserve">
          <source>Currently ignored.</source>
          <target state="translated">目前被忽略。</target>
        </trans-unit>
        <trans-unit id="f5598cb3abd03849adb9eaee518fab6b063f99cb" translate="yes" xml:space="preserve">
          <source>Customizing Readline from a user&amp;rsquo;s view.</source>
          <target state="translated">从用户的角度定制Readline。</target>
        </trans-unit>
        <trans-unit id="456434af162a43c823a1d4cdd26b1c5b97f08279" translate="yes" xml:space="preserve">
          <source>Customizing the various prompt strings.</source>
          <target state="translated">自定义各种提示字符串。</target>
        </trans-unit>
        <trans-unit id="50c9e8d5fc98727b4bbc93cf5d64a68db647f04f" translate="yes" xml:space="preserve">
          <source>D</source>
          <target state="translated">D</target>
        </trans-unit>
        <trans-unit id="7598c12b4a70fa343637f2c4c2dca159a35b4951" translate="yes" xml:space="preserve">
          <source>D.1 Index of Shell Builtin Commands</source>
          <target state="translated">D.1 Shell内置命令索引</target>
        </trans-unit>
        <trans-unit id="19e84ca2c8daeb36c5dfe51d86645a62916d14f3" translate="yes" xml:space="preserve">
          <source>D.2 Index of Shell Reserved Words</source>
          <target state="translated">D.2 外壳保留字索引</target>
        </trans-unit>
        <trans-unit id="c4130497620e966568118983378d1ee9151eede8" translate="yes" xml:space="preserve">
          <source>D.3 Parameter and Variable Index</source>
          <target state="translated">D.3 参数和变量索引</target>
        </trans-unit>
        <trans-unit id="e5f57692ba17d9a6628c4dfb5fd9f9116c9d1fb3" translate="yes" xml:space="preserve">
          <source>D.4 Function Index</source>
          <target state="translated">D.4 功能指数</target>
        </trans-unit>
        <trans-unit id="f44a81b5ff3b971a394abd9b48b4b95bf752b406" translate="yes" xml:space="preserve">
          <source>D.5 Concept Index</source>
          <target state="translated">D.5 概念指数</target>
        </trans-unit>
        <trans-unit id="fe1069b718d74dd44eea5b5e0c651c52d89c95b7" translate="yes" xml:space="preserve">
          <source>DIRSTACK</source>
          <target state="translated">DIRSTACK</target>
        </trans-unit>
        <trans-unit id="e89825345af888d019c3ca060aaf072506138fc4" translate="yes" xml:space="preserve">
          <source>DTD</source>
          <target state="translated">DTD</target>
        </trans-unit>
        <trans-unit id="14bac27f501e56e1330b139c1e675077f49a75f8" translate="yes" xml:space="preserve">
          <source>Declare variables and give them attributes. If no &lt;var&gt;name&lt;/var&gt;s are given, then display the values of variables instead.</source>
          <target state="translated">声明变量并为其赋予属性。如果未提供 &lt;var&gt;name&lt;/var&gt; ，则改为显示变量的值。</target>
        </trans-unit>
        <trans-unit id="37a0421700cbe55eec8f11b79aaf182741f47044" translate="yes" xml:space="preserve">
          <source>Define if you are using the Andrew File System from Transarc.</source>
          <target state="translated">定义您是否使用Transarc的Andrew文件系统。</target>
        </trans-unit>
        <trans-unit id="ef613db953f4340bc7153c20f363c57f180784f2" translate="yes" xml:space="preserve">
          <source>Define this to make Bash link with a locally-installed version of Readline rather than the version in</source>
          <target state="translated">定义这一点,使Bash与本地安装的Readline版本进行链接,而不是在本地安装的版本。</target>
        </trans-unit>
        <trans-unit id="ca04fd20766d012c25aa0a3182361559b7f1886f" translate="yes" xml:space="preserve">
          <source>Define this to use the Purify memory allocation checker from Rational Software.</source>
          <target state="translated">定义这个来使用Rational Software的Purify内存分配检查器。</target>
        </trans-unit>
        <trans-unit id="15225baac48fc3d689cb2b0f74b936eff4339ff7" translate="yes" xml:space="preserve">
          <source>Definitions</source>
          <target state="translated">Definitions</target>
        </trans-unit>
        <trans-unit id="03eaa9c0f30f58eed3bd3ee843ddbe2bab334034" translate="yes" xml:space="preserve">
          <source>Delete all spaces and tabs around point. By default, this is unbound.</source>
          <target state="translated">删除点周围的所有空格和制表符。默认情况下,这是不绑定的。</target>
        </trans-unit>
        <trans-unit id="6e6b8f60fe75e6eeffcfdf108abcfd3c18849c6e" translate="yes" xml:space="preserve">
          <source>Delete any section Entitled &amp;ldquo;Endorsements&amp;rdquo;. Such a section may not be included in the Modified Version.</source>
          <target state="translated">删除标题为&amp;ldquo;背书&amp;rdquo;的所有部分。这样的部分可能不包含在修改版本中。</target>
        </trans-unit>
        <trans-unit id="4b1f80c10d6a42826216351ebeda0c58abb0e624" translate="yes" xml:space="preserve">
          <source>Delete the character at point. If this function is bound to the same character as the tty &lt;small&gt;EOF&lt;/small&gt; character, as</source>
          <target state="translated">删除角色点。如果此函数绑定到与tty &lt;small&gt;EOF&lt;/small&gt;字符相同的字符，则为</target>
        </trans-unit>
        <trans-unit id="8490cc4157bab1c65b97ae0596f3d09c2612107a" translate="yes" xml:space="preserve">
          <source>Delete the character behind the cursor. A numeric argument means to kill the characters instead of deleting them.</source>
          <target state="translated">删除光标后面的字符。数字参数是指杀死字符而不是删除它们。</target>
        </trans-unit>
        <trans-unit id="929088c27b0eb60e04edcac70b2a85e5a8dc47b1" translate="yes" xml:space="preserve">
          <source>Delete the character to the left of the cursor.</source>
          <target state="translated">删除光标左边的字符。</target>
        </trans-unit>
        <trans-unit id="12c9cb967e133f91fbd42892eb7fbd87ab2e1dc7" translate="yes" xml:space="preserve">
          <source>Delete the character under the cursor, unless the cursor is at the end of the line, in which case the character behind the cursor is deleted. By default, this is not bound to a key.</source>
          <target state="translated">删除光标下的字符,除非光标在行尾,在这种情况下,光标后面的字符会被删除。默认情况下,这不与键绑定。</target>
        </trans-unit>
        <trans-unit id="c01e827109bb2eb4866db3b0d831fb311b52847a" translate="yes" xml:space="preserve">
          <source>Delete the character underneath the cursor.</source>
          <target state="translated">删除光标下方的字符。</target>
        </trans-unit>
        <trans-unit id="15d917b3b6e79033cd47eceb20b989eb391e0bc9" translate="yes" xml:space="preserve">
          <source>Delete the history entries between positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, inclusive. Positive and negative values for &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are interpreted as described above.</source>
          <target state="translated">删除位置 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; （包括两端）之间的历史记录条目。如上所述，对 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 正负值进行了解释。</target>
        </trans-unit>
        <trans-unit id="4342ef8d6b249dc53feb51cdecdd4814285cfadb" translate="yes" xml:space="preserve">
          <source>Delete the history entry at position &lt;var&gt;offset&lt;/var&gt;. If &lt;var&gt;offset&lt;/var&gt; is positive, it should be specified as it appears when the history is displayed. If &lt;var&gt;offset&lt;/var&gt; is negative, it is interpreted as relative to one greater than the last history position, so negative indices count back from the end of the history, and an index of &amp;lsquo;</source>
          <target state="translated">删除位置为 &lt;var&gt;offset&lt;/var&gt; 的历史记录条目。如果 &lt;var&gt;offset&lt;/var&gt; 为正，则应指定其在显示历史记录时所显示的值。如果 &lt;var&gt;offset&lt;/var&gt; 为负，则将其解释为相对于上一个历史记录的位置大一个，因此负索引从历史记录的末尾算起，索引为'</target>
        </trans-unit>
        <trans-unit id="c5c189768f978900f4a41713270f18f3401e1e06" translate="yes" xml:space="preserve">
          <source>Deletes the character under the cursor if not at the beginning or end of the line (like &lt;code&gt;delete-char&lt;/code&gt;). If at the end of the line, behaves identically to &lt;code&gt;possible-completions&lt;/code&gt;. This command is unbound by default.</source>
          <target state="translated">如果不在行首或行尾，则 &lt;code&gt;delete-char&lt;/code&gt; 光标下方的字符（例如delete-char）。如果在该行的末尾，则其行为与 &lt;code&gt;possible-completions&lt;/code&gt; 相同。默认情况下，此命令是未绑定的。</target>
        </trans-unit>
        <trans-unit id="515824f152954141db6bc26124f50abb56f1d2ef" translate="yes" xml:space="preserve">
          <source>Directory Stack Builtins</source>
          <target state="translated">目录堆栈内置</target>
        </trans-unit>
        <trans-unit id="df7e62eba7c2ae042c8910c743f296795ffb04cb" translate="yes" xml:space="preserve">
          <source>Directory names. May also be specified as</source>
          <target state="translated">目录名称。也可指定为</target>
        </trans-unit>
        <trans-unit id="c3d2fe1fdef2a48f16fdb834b9035a2e098cb975" translate="yes" xml:space="preserve">
          <source>Disable (unset) each &lt;var&gt;optname&lt;/var&gt;.</source>
          <target state="translated">禁用（取消设置）每个 &lt;var&gt;optname&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ac702e04dea45effb4c73f463693ecd4b38e8a1" translate="yes" xml:space="preserve">
          <source>Disable filename expansion (globbing).</source>
          <target state="translated">禁用文件名扩展(globbing)。</target>
        </trans-unit>
        <trans-unit id="7e42646826d0e17364e9e5fe2f4137fb2e22c1a6" translate="yes" xml:space="preserve">
          <source>Discard the first &lt;var&gt;count&lt;/var&gt; lines read.</source>
          <target state="translated">丢弃读取的第一个 &lt;var&gt;count&lt;/var&gt; 行。</target>
        </trans-unit>
        <trans-unit id="d237adb5528d6b85814dbb4c413e265a1e07d242" translate="yes" xml:space="preserve">
          <source>Display &lt;var&gt;prompt&lt;/var&gt;, without a trailing newline, before attempting to read any input. The prompt is displayed only if input is coming from a terminal.</source>
          <target state="translated">在尝试读取任何输入之前，显示 &lt;var&gt;prompt&lt;/var&gt; ，没有尾随换行符。仅当输入来自终端时才显示提示。</target>
        </trans-unit>
        <trans-unit id="b041c80d391d71e0ba553ace83ad8b38a5e19f03" translate="yes" xml:space="preserve">
          <source>Display Readline function names and bindings in such a way that they can be used as input or in a Readline initialization file.</source>
          <target state="translated">以这样的方式显示Readline函数名称和绑定,以便它们可以作为输入或在Readline初始化文件中使用。</target>
        </trans-unit>
        <trans-unit id="1d6e64c3f73f453a1ccfbfeedd265411e431a08d" translate="yes" xml:space="preserve">
          <source>Display Readline key sequences bound to macros and the strings they output in such a way that they can be used as input or in a Readline initialization file.</source>
          <target state="translated">显示与宏绑定的Readline键序列,以及它们输出的字符串,使它们可以作为输入或在Readline初始化文件中使用。</target>
        </trans-unit>
        <trans-unit id="dd7b566fe3c46da759396fc1a10283c1d81c851a" translate="yes" xml:space="preserve">
          <source>Display Readline key sequences bound to macros and the strings they output.</source>
          <target state="translated">显示与宏绑定的读行键序列及其输出的字符串。</target>
        </trans-unit>
        <trans-unit id="776f5ffc859e970b56a2cf65a0dec6fb2c09db8b" translate="yes" xml:space="preserve">
          <source>Display Readline variable names and values in such a way that they can be used as input or in a Readline initialization file.</source>
          <target state="translated">以这样的方式显示Readline变量的名称和值,使它们可以作为输入或在Readline初始化文件中使用。</target>
        </trans-unit>
        <trans-unit id="33c78521ae4336775ee8f73c7db5e7060930f2a0" translate="yes" xml:space="preserve">
          <source>Display a short description of each &lt;var&gt;pattern&lt;/var&gt;</source>
          <target state="translated">显示每个 &lt;var&gt;pattern&lt;/var&gt; 的简短描述</target>
        </trans-unit>
        <trans-unit id="13df7ff2e32c3f53ad77ed98b6ae5e4613663c61" translate="yes" xml:space="preserve">
          <source>Display a usage message on standard output and exit successfully.</source>
          <target state="translated">在标准输出上显示使用信息并成功退出。</target>
        </trans-unit>
        <trans-unit id="be88be17f79a07869af35255e8c117eedba08048" translate="yes" xml:space="preserve">
          <source>Display current Readline (see &lt;a href=&quot;command-line-editing&quot;&gt;Command Line Editing&lt;/a&gt;) key and function bindings, bind a key sequence to a Readline function or macro, or set a Readline variable. Each non-option argument is a command as it would appear in a Readline initialization file (see &lt;a href=&quot;readline-init-file&quot;&gt;Readline Init File&lt;/a&gt;), but each binding or command must be passed as a separate argument; e.g., &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d274780c32ae730a904b56aad21ebe752668e21d" translate="yes" xml:space="preserve">
          <source>Display current Readline (see &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;Command Line Editing&lt;/a&gt;) key and function bindings, bind a key sequence to a Readline function or macro, or set a Readline variable. Each non-option argument is a command as it would appear in a Readline initialization file (see &lt;a href=&quot;readline-init-file#Readline-Init-File&quot;&gt;Readline Init File&lt;/a&gt;), but each binding or command must be passed as a separate argument; e.g., &amp;lsquo;</source>
          <target state="translated">显示当前的Readline（请参阅&lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;命令行编辑&lt;/a&gt;）键和函数绑定，将键序列绑定到Readline函数或宏，或设置Readline变量。每个非选项参数都是一个命令，就像在Readline初始化文件中一样（请参阅&lt;a href=&quot;readline-init-file#Readline-Init-File&quot;&gt;Readline Init File&lt;/a&gt;），但是每个绑定或命令都必须作为单独的参数传递。例如，&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="d2fe07d8828653828685b8b089dd34fea3b9ad50" translate="yes" xml:space="preserve">
          <source>Display helpful information about builtin commands. If &lt;var&gt;pattern&lt;/var&gt; is specified, &lt;code&gt;help&lt;/code&gt; gives detailed help on all commands matching &lt;var&gt;pattern&lt;/var&gt;, otherwise a list of the builtins is printed.</source>
          <target state="translated">显示有关内置命令的有用信息。如果指定了 &lt;var&gt;pattern&lt;/var&gt; ，则 &lt;code&gt;help&lt;/code&gt; 将为所有与 &lt;var&gt;pattern&lt;/var&gt; 匹配的命令提供详细的帮助，否则将输出内置列表。</target>
        </trans-unit>
        <trans-unit id="9dab646ab7d9d5e63e23a11a14e990f761b1752b" translate="yes" xml:space="preserve">
          <source>Display information only about jobs that have changed status since the user was last notified of their status.</source>
          <target state="translated">只显示自用户最后一次收到状态通知后状态发生变化的工作信息。</target>
        </trans-unit>
        <trans-unit id="3692188e608394fb73df30d0fe22dce78df518ce" translate="yes" xml:space="preserve">
          <source>Display only a short usage synopsis for each &lt;var&gt;pattern&lt;/var&gt;</source>
          <target state="translated">仅显示每个 &lt;var&gt;pattern&lt;/var&gt; 的简短使用提要</target>
        </trans-unit>
        <trans-unit id="0c9b571ad4ed3fef1517d31b187245d76cc23e45" translate="yes" xml:space="preserve">
          <source>Display only running jobs.</source>
          <target state="translated">只显示正在运行的作业。</target>
        </trans-unit>
        <trans-unit id="d90cdeb1d587355bbb7e18899c35388a6f883fcc" translate="yes" xml:space="preserve">
          <source>Display only stopped jobs.</source>
          <target state="translated">只显示停止的工作。</target>
        </trans-unit>
        <trans-unit id="0aca35e42be333733d273a1a92f97c0febbf2cfb" translate="yes" xml:space="preserve">
          <source>Display the description of each &lt;var&gt;pattern&lt;/var&gt; in a manpage-like format</source>
          <target state="translated">以类似手册页的格式显示每个 &lt;var&gt;pattern&lt;/var&gt; 的描述</target>
        </trans-unit>
        <trans-unit id="f74b706494fda86557016603c50d49e430f9a8b2" translate="yes" xml:space="preserve">
          <source>Display the list of currently remembered directories. Directories are added to the list with the &lt;code&gt;pushd&lt;/code&gt; command; the &lt;code&gt;popd&lt;/code&gt; command removes directories from the list. The current directory is always the first directory in the stack.</source>
          <target state="translated">显示当前记忆目录的列表。目录通过 &lt;code&gt;pushd&lt;/code&gt; 命令添加到列表中；在 &lt;code&gt;popd&lt;/code&gt; 命令从列表中删除目录。当前目录始终是堆栈中的第一个目录。</target>
        </trans-unit>
        <trans-unit id="34d8485b5d897710d31113cb43d9345d4695604e" translate="yes" xml:space="preserve">
          <source>Display version information about the current instance of Bash.</source>
          <target state="translated">显示当前Bash实例的版本信息。</target>
        </trans-unit>
        <trans-unit id="27d6038cc3733b6776628504624c331907206f68" translate="yes" xml:space="preserve">
          <source>Displays the &lt;var&gt;N&lt;/var&gt;th directory (counting from the left of the list printed by &lt;code&gt;dirs&lt;/code&gt; when invoked without options), starting with zero.</source>
          <target state="translated">显示第 &lt;var&gt;N&lt;/var&gt; 个目录（从不带选项的情况下调用 &lt;code&gt;dirs&lt;/code&gt; 打印的列表的左侧开始），从零开始。</target>
        </trans-unit>
        <trans-unit id="3286e62f08c3730ccb855d2688237745eb71f7a0" translate="yes" xml:space="preserve">
          <source>Displays the &lt;var&gt;N&lt;/var&gt;th directory (counting from the right of the list printed by &lt;code&gt;dirs&lt;/code&gt; when invoked without options), starting with zero.</source>
          <target state="translated">显示第 &lt;var&gt;N&lt;/var&gt; 个目录（从不带选项的情况下调用 &lt;code&gt;dirs&lt;/code&gt; 打印的列表的右边开始），从零开始。</target>
        </trans-unit>
        <trans-unit id="990b141381f13519c2b491643df0ac717b8f895e" translate="yes" xml:space="preserve">
          <source>Do not print messages saying which checks are being made.</source>
          <target state="translated">不要打印说明正在进行哪些检查的信息。</target>
        </trans-unit>
        <trans-unit id="c58006228703ec1ca66e0a963c3a993b443dee27" translate="yes" xml:space="preserve">
          <source>Do not retitle any existing section to be Entitled &amp;ldquo;Endorsements&amp;rdquo; or to conflict in title with any Invariant Section.</source>
          <target state="translated">不要将任何现有的部分重新命名为&amp;ldquo;背书&amp;rdquo;或与任何不变部分的标题冲突。</target>
        </trans-unit>
        <trans-unit id="c55541bee13e2269e696b0fa20c8d70a33fb958e" translate="yes" xml:space="preserve">
          <source>Do not use the &lt;small&gt;GNU&lt;/small&gt; Readline library (see &lt;a href=&quot;command-line-editing&quot;&gt;Command Line Editing&lt;/a&gt;) to read command lines when the shell is interactive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251452a47a32219e90f79387a9da32ca4b8669de" translate="yes" xml:space="preserve">
          <source>Do not use the &lt;small&gt;GNU&lt;/small&gt; Readline library (see &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;Command Line Editing&lt;/a&gt;) to read command lines when the shell is interactive.</source>
          <target state="translated">当外壳是交互式的时，不要使用&lt;small&gt;GNU&lt;/small&gt; Readline库（请参阅&lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;命令行编辑&lt;/a&gt;）来读取命令行。</target>
        </trans-unit>
        <trans-unit id="34641df3f2b0c5ff59f2ad11c6421bd4c178800c" translate="yes" xml:space="preserve">
          <source>Do nothing beyond expanding &lt;var&gt;arguments&lt;/var&gt; and performing redirections. The return status is zero.</source>
          <target state="translated">除了扩展 &lt;var&gt;arguments&lt;/var&gt; 和执行重定向之外，什么也不要做。返回状态为零。</target>
        </trans-unit>
        <trans-unit id="a764d2bad3e82bb92ba3944027f7bb869039b6c5" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t load the system-wide startup file</source>
          <target state="translated">不要加载系统范围的启动文件</target>
        </trans-unit>
        <trans-unit id="a95295542c97477950a6ff8084078b88de4746f5" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t read the</source>
          <target state="translated">不要读</target>
        </trans-unit>
        <trans-unit id="7bc4aeea2b858e5d0b2038c659c17e529fe4085a" translate="yes" xml:space="preserve">
          <source>Double Quotes</source>
          <target state="translated">双重报价</target>
        </trans-unit>
        <trans-unit id="f4487e41802f7b30a9bf65cded281e61a35c118b" translate="yes" xml:space="preserve">
          <source>Drag the character before the cursor forward over the character at the cursor, moving the cursor forward as well. If the insertion point is at the end of the line, then this transposes the last two characters of the line. Negative arguments have no effect.</source>
          <target state="translated">将光标前的字符向前拖动到光标处的字符上,将光标也向前移动。如果插入点在行的末尾,那么就会将行的最后两个字符移位。负参数没有效果。</target>
        </trans-unit>
        <trans-unit id="baca3816508d8de24fa41abd4773ccf8791d0456" translate="yes" xml:space="preserve">
          <source>Drag the word before point past the word after point, moving point past that word as well. If the insertion point is at the end of the line, this transposes the last two words on the line.</source>
          <target state="translated">将点前的字拖过点后的字,将点也移过该字。如果插入点在行的末尾,就会将行上的最后两个字移位。</target>
        </trans-unit>
        <trans-unit id="adc8cbd808dc137d613f13c9e8dbb737d49f601d" translate="yes" xml:space="preserve">
          <source>Drag the word before point past the word after point, moving point past that word as well. If the insertion point is at the end of the line, this transposes the last two words on the line. Word boundaries are the same as &lt;code&gt;shell-forward-word&lt;/code&gt; and &lt;code&gt;shell-backward-word&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="c423af33f5eb5f46fbb4c173f8687a3bcc990f06" translate="yes" xml:space="preserve">
          <source>EMACS</source>
          <target state="translated">EMACS</target>
        </trans-unit>
        <trans-unit id="086bfb42cb0e1f0682c42f25c92a8f7e76b5bda4" translate="yes" xml:space="preserve">
          <source>ENV</source>
          <target state="translated">ENV</target>
        </trans-unit>
        <trans-unit id="44b842b04070c1983ddf8a268f6776b7aaec802d" translate="yes" xml:space="preserve">
          <source>EPOCHREALTIME</source>
          <target state="translated">EPOCHREALTIME</target>
        </trans-unit>
        <trans-unit id="8243164d9ad28766052cc19c15ab5333891eda51" translate="yes" xml:space="preserve">
          <source>EPOCHSECONDS</source>
          <target state="translated">EPOCHSECONDS</target>
        </trans-unit>
        <trans-unit id="4481138366ccad9893f046cefc44f50e2a0b7198" translate="yes" xml:space="preserve">
          <source>ESC f</source>
          <target state="translated">ESC f</target>
        </trans-unit>
        <trans-unit id="839fbe4758d9a6a0629c5c823cc01bc829cff0e3" translate="yes" xml:space="preserve">
          <source>ESC[11~</source>
          <target state="translated">ESC[11~</target>
        </trans-unit>
        <trans-unit id="35b281ecff53330dcc3be4101b1295fcfade40ad" translate="yes" xml:space="preserve">
          <source>EUID</source>
          <target state="translated">EUID</target>
        </trans-unit>
        <trans-unit id="49f9fcb8052d06c9792eeceaea5312aa2c693a8a" translate="yes" xml:space="preserve">
          <source>EXECIGNORE</source>
          <target state="translated">EXECIGNORE</target>
        </trans-unit>
        <trans-unit id="30c34d5722729a02700b87446b6749918c6f22a5" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;name&lt;/var&gt; is an associative array variable (see &lt;a href=&quot;arrays&quot;&gt;Arrays&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c01441027ee1bb404320471e83b88b9c0a4cc16" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;name&lt;/var&gt; is an associative array variable (see &lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;).</source>
          <target state="translated">每个 &lt;var&gt;name&lt;/var&gt; 都是一个关联数组变量（请参见&lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="90c34a52fba66b4876adc020afc0fc488569aec4" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;name&lt;/var&gt; is an indexed array variable (see &lt;a href=&quot;arrays&quot;&gt;Arrays&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81512733c61c710cd7c3f7c9abe7a612aadaea7" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;name&lt;/var&gt; is an indexed array variable (see &lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;).</source>
          <target state="translated">每个 &lt;var&gt;name&lt;/var&gt; 都是一个索引数组变量（请参见&lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="52a1aeedf30ad20657cc2f74783ab4b51ee4e29e" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;value&lt;/var&gt; in the list undergoes all the shell expansions described above (see &lt;a href=&quot;shell-expansions&quot;&gt;Shell Expansions&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eedee81fde17cf8668c43cbf595d74b650f6b15d" translate="yes" xml:space="preserve">
          <source>Each clause must be terminated with &amp;lsquo;</source>
          <target state="translated">每个子句都必须以'</target>
        </trans-unit>
        <trans-unit id="05b685a3514811cbc3875905a3e43bc305ec86c6" translate="yes" xml:space="preserve">
          <source>Each command in a pipeline is executed in its own subshell, which is a separate process (see &lt;a href=&quot;command-execution-environment&quot;&gt;Command Execution Environment&lt;/a&gt;). If the &lt;code&gt;lastpipe&lt;/code&gt; option is enabled using the &lt;code&gt;shopt&lt;/code&gt; builtin (see &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;), the last element of a pipeline may be run by the shell process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fa808b767a0867a3f6a1921a95e8c18caa014c" translate="yes" xml:space="preserve">
          <source>Each command in a pipeline is executed in its own subshell, which is a separate process (see &lt;a href=&quot;command-execution-environment#Command-Execution-Environment&quot;&gt;Command Execution Environment&lt;/a&gt;). If the &lt;code&gt;lastpipe&lt;/code&gt; option is enabled using the &lt;code&gt;shopt&lt;/code&gt; builtin (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;), the last element of a pipeline may be run by the shell process.</source>
          <target state="translated">管道中的每个命令都在其自己的子外壳中执行，该子外壳是一个单独的过程（请参见&amp;ldquo; &lt;a href=&quot;command-execution-environment#Command-Execution-Environment&quot;&gt;命令执行环境&amp;rdquo;&lt;/a&gt;）。如果使用 &lt;code&gt;shopt&lt;/code&gt; 内置 &lt;code&gt;lastpipe&lt;/code&gt; 启用了lastpipe选项（请参见&lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;），则管道的最后一个元素可以由Shell进程运行。</target>
        </trans-unit>
        <trans-unit id="147f7b98e2380d31ed09620ee791a3a6fdfa5f7b" translate="yes" xml:space="preserve">
          <source>Each of the shell metacharacters (see &lt;a href=&quot;definitions&quot;&gt;Definitions&lt;/a&gt;) has special meaning to the shell and must be quoted if it is to represent itself. When the command history expansion facilities are being used (see &lt;a href=&quot;history-interaction&quot;&gt;History Interaction&lt;/a&gt;), the &lt;var&gt;history expansion&lt;/var&gt; character, usually &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c03bd2e8cc875a9b297daf5040b75b7f459b3ad" translate="yes" xml:space="preserve">
          <source>Each of the shell metacharacters (see &lt;a href=&quot;definitions#Definitions&quot;&gt;Definitions&lt;/a&gt;) has special meaning to the shell and must be quoted if it is to represent itself. When the command history expansion facilities are being used (see &lt;a href=&quot;history-interaction#History-Interaction&quot;&gt;History Interaction&lt;/a&gt;), the &lt;var&gt;history expansion&lt;/var&gt; character, usually &amp;lsquo;</source>
          <target state="translated">每个外壳程序元字符（请参见&lt;a href=&quot;definitions#Definitions&quot;&gt;定义&lt;/a&gt;）对外壳程序都有特殊含义，如果要表示自身，则必须加引号。使用命令历史记录扩展工具时（请参见&lt;a href=&quot;history-interaction#History-Interaction&quot;&gt;History Interaction&lt;/a&gt;）， &lt;var&gt;history expansion&lt;/var&gt; 字符通常是'</target>
        </trans-unit>
        <trans-unit id="076892cde39a23965cfe9b72faa214616a3b15fe" translate="yes" xml:space="preserve">
          <source>Each redirection that may be preceded by a file descriptor number may instead be preceded by a word of the form {&lt;var&gt;varname&lt;/var&gt;}. In this case, for each redirection operator except &amp;gt;&amp;amp;- and &amp;lt;&amp;amp;-, the shell will allocate a file descriptor greater than 10 and assign it to {&lt;var&gt;varname&lt;/var&gt;}. If &amp;gt;&amp;amp;- or &amp;lt;&amp;amp;- is preceded by {&lt;var&gt;varname&lt;/var&gt;}, the value of &lt;var&gt;varname&lt;/var&gt; defines the file descriptor to close. If {&lt;var&gt;varname&lt;/var&gt;} is supplied, the redirection persists beyond the scope of the command, allowing the shell programmer to manage the file descriptor himself.</source>
          <target state="translated">可以在文件描述符号之后进行的每个重定向都可以在其后加上{ &lt;var&gt;varname&lt;/var&gt; } 形式的单词。在这种情况下，对于&amp;gt;＆-和&amp;lt;＆-以外的每个重定向运算符，shell都会分配一个大于10的文件描述符，并将其分配给{ &lt;var&gt;varname&lt;/var&gt; }。如果&amp;gt;＆-或&amp;lt;＆-之前 &lt;var&gt;varname&lt;/var&gt; { varname }，则 &lt;var&gt;varname&lt;/var&gt; 的值定义要关闭的文件描述符。如果提供了{ &lt;var&gt;varname&lt;/var&gt; }，则重定向将保留在命令范围之外，从而使Shell程序员可以自己管理文件描述符。</target>
        </trans-unit>
        <trans-unit id="1d594e166ae3ff55c2976597134f66d5dbd408d7" translate="yes" xml:space="preserve">
          <source>Each redirection that may be preceded by a file descriptor number may instead be preceded by a word of the form {&lt;var&gt;varname&lt;/var&gt;}. In this case, for each redirection operator except &amp;gt;&amp;amp;- and &amp;lt;&amp;amp;-, the shell will allocate a file descriptor greater than 10 and assign it to {&lt;var&gt;varname&lt;/var&gt;}. If &amp;gt;&amp;amp;- or &amp;lt;&amp;amp;- is preceded by {&lt;var&gt;varname&lt;/var&gt;}, the value of &lt;var&gt;varname&lt;/var&gt; defines the file descriptor to close. If {&lt;var&gt;varname&lt;/var&gt;} is supplied, the redirection persists beyond the scope of the command, allowing the shell programmer to manage the file descriptor&amp;rsquo;s lifetime manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e01c0b40acc6ff6b5b39dde949086006567c089" translate="yes" xml:space="preserve">
          <source>Each time &lt;code&gt;hash&lt;/code&gt; is invoked, it remembers the full pathnames of the commands specified as &lt;var&gt;name&lt;/var&gt; arguments, so they need not be searched for on subsequent invocations. The commands are found by searching through the directories listed in &lt;code&gt;$PATH&lt;/code&gt;. Any previously-remembered pathname is discarded. The</source>
          <target state="translated">每次调用 &lt;code&gt;hash&lt;/code&gt; ，它都会记住指定为 &lt;var&gt;name&lt;/var&gt; 参数的命令的完整路径名，因此无需在后续调用中搜索它们。通过搜索 &lt;code&gt;$PATH&lt;/code&gt; 列出的目录可以找到命令。任何先前记住的路径名都将被丢弃。的</target>
        </trans-unit>
        <trans-unit id="123e55065b1bb04796125df7a6e3577bc3f78e26" translate="yes" xml:space="preserve">
          <source>Each time this parameter is referenced, a random integer between 0 and 32767 is generated. Assigning a value to this variable seeds the random number generator.</source>
          <target state="translated">每次引用这个参数时,都会产生一个0到32767之间的随机整数。给这个变量赋值是随机数生成器的种子。</target>
        </trans-unit>
        <trans-unit id="72c46903cf5f843df7f1748569ceca349e964aaf" translate="yes" xml:space="preserve">
          <source>Each time this parameter is referenced, it expands to a random integer between 0 and 32767. Assigning a value to this variable seeds the random number generator. If &lt;code&gt;RANDOM&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de15e0f54460ee2a8fb5fc34ed944e24292ffde" translate="yes" xml:space="preserve">
          <source>Each time this parameter is referenced, it expands to the number of seconds since the Unix Epoch (see the documentation for the C library function &lt;var&gt;time&lt;/var&gt; for the definition of Epoch). Assignments to &lt;code&gt;EPOCHSECONDS&lt;/code&gt; are ignored. If &lt;code&gt;EPOCHSECONDS&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">每次引用此参数时，它都会扩展到自Unix Epoch以来的秒数（有关Epoch的定义，请参阅C库函数 &lt;var&gt;time&lt;/var&gt; 的文档）。对 &lt;code&gt;EPOCHSECONDS&lt;/code&gt; 的分配将被忽略。如果 &lt;code&gt;EPOCHSECONDS&lt;/code&gt; 设置EPOCHSECONDS，则即使随后将其重置，它也会失去其特殊属性。</target>
        </trans-unit>
        <trans-unit id="d23c65da090f34b9b24f6196cd1c222bc5043e84" translate="yes" xml:space="preserve">
          <source>Each time this parameter is referenced, it expands to the number of seconds since the Unix Epoch as a floating point value with micro-second granularity (see the documentation for the C library function &lt;var&gt;time&lt;/var&gt; for the definition of Epoch). Assignments to &lt;code&gt;EPOCHREALTIME&lt;/code&gt; are ignored. If &lt;code&gt;EPOCHREALTIME&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">每次引用此参数时，它都会扩展到Unix Epoch以来的秒数（以微秒为单位的浮点值）（有关Epoch的定义，请参阅C库函数 &lt;var&gt;time&lt;/var&gt; 的文档）。对 &lt;code&gt;EPOCHREALTIME&lt;/code&gt; 的分配将被忽略。如果 &lt;code&gt;EPOCHREALTIME&lt;/code&gt; 设置EPOCHREALTIME，则即使随后将其重置，它也会失去其特殊属性。</target>
        </trans-unit>
        <trans-unit id="ab7e24d1a7c1b084e231c996a57a6774124695a9" translate="yes" xml:space="preserve">
          <source>Each variable assignment is checked for unquoted tilde-prefixes immediately following a &amp;lsquo;</source>
          <target state="translated">紧接在'之后，会检查每个变量赋值是否存在未引号的代字号前缀</target>
        </trans-unit>
        <trans-unit id="3e56658184f5ed970ac31170e5521d416018e6be" translate="yes" xml:space="preserve">
          <source>Each variable or function that is created or modified is given the export attribute and marked for export to the environment of subsequent commands.</source>
          <target state="translated">每个被创建或修改的变量或函数都会被赋予导出属性,并标记为导出到后续命令的环境中。</target>
        </trans-unit>
        <trans-unit id="1dbbee03214c8ac8b2eef1098847051dd676995d" translate="yes" xml:space="preserve">
          <source>Each version of the License is given a distinguishing version number. If the Document specifies that a particular numbered version of this License &amp;ldquo;or any later version&amp;rdquo; applies to it, you have the option of following the terms and conditions either of that specified version or of any later version that has been published (not as a draft) by the Free Software Foundation. If the Document does not specify a version number of this License, you may choose any version ever published (not as a draft) by the Free Software Foundation. If the Document specifies that a proxy can decide which future versions of this License can be used, that proxy&amp;rsquo;s public statement of acceptance of a version permanently authorizes you to choose that version for the Document.</source>
          <target state="translated">许可证的每个版本都有一个可区分的版本号。如果文档指定适用于此许可证的特定编号版本&amp;ldquo;或任何更高版本&amp;rdquo;，则您可以选择遵循该指定版本或已发布的任何更高版本的条款和条件（不作为草稿）由自由软件基金会提供。如果文档未指定此许可证的版本号，则可以选择自由软件基金会曾经发布的任何版本（而不是草稿）。如果文档指定代理可以决定可以使用此许可证的将来版本，则该代理的公开接受版本声明将永久授权您为文档选择该版本。</target>
        </trans-unit>
        <trans-unit id="4fa0f6fb6e440f220b80c6c2d4888a44c80062d9" translate="yes" xml:space="preserve">
          <source>Enable &amp;lsquo;</source>
          <target state="translated">启用&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="d2e79c185211b9e67e06f3c709cc53825cd10fe2" translate="yes" xml:space="preserve">
          <source>Enable (set) each &lt;var&gt;optname&lt;/var&gt;.</source>
          <target state="translated">启用（设置）每个 &lt;var&gt;optname&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9b53a652990d85170f7e672f04e386535ffc526" translate="yes" xml:space="preserve">
          <source>Enable and disable builtin shell commands. Disabling a builtin allows a disk command which has the same name as a shell builtin to be executed without specifying a full pathname, even though the shell normally searches for builtins before disk commands. If</source>
          <target state="translated">启用和禁用内置的shell命令。禁用内置命令允许执行与shell内置命令同名的磁盘命令,而不需要指定完整的路径名,即使shell通常在磁盘命令之前搜索内置命令。如果</target>
        </trans-unit>
        <trans-unit id="6e58e7afcd633a8cdc2a8b0fd4584242f2c8473b" translate="yes" xml:space="preserve">
          <source>Enable command history, as described in &lt;a href=&quot;bash-history-facilities&quot;&gt;Bash History Facilities&lt;/a&gt;. This option is on by default in interactive shells.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1b4622d37f1b0ba8c0b777dbb1b996845c765c" translate="yes" xml:space="preserve">
          <source>Enable command history, as described in &lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash History Facilities&lt;/a&gt;. This option is on by default in interactive shells.</source>
          <target state="translated">启用命令历史记录，如&lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash History Facilities中所述&lt;/a&gt;。默认情况下，此选项在交互式外壳程序中处于启用状态。</target>
        </trans-unit>
        <trans-unit id="f864b3b1b5c427651d0d571f526ecca9b4ea802d" translate="yes" xml:space="preserve">
          <source>Enable support for &lt;a href=&quot;http://www.unix.org/version2/whatsnew/lfs20mar.html&quot;&gt;large files&lt;/a&gt; if the operating system requires special compiler options to build programs which can access large files. This is enabled by default, if the operating system provides large file support.</source>
          <target state="translated">如果操作系统需要特殊的编译器选项来构建可以访问大文件的程序，则启用对&lt;a href=&quot;http://www.unix.org/version2/whatsnew/lfs20mar.html&quot;&gt;大文件的&lt;/a&gt;支持。如果操作系统提供大文件支持，则默认情况下启用此功能。</target>
        </trans-unit>
        <trans-unit id="8e81fd26e99c5f63be7c7bddec3349204c1d5ebe" translate="yes" xml:space="preserve">
          <source>Enable the programmable completion facilities (see &lt;a href=&quot;programmable-completion&quot;&gt;Programmable Completion&lt;/a&gt;). If Readline is not enabled, this option has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa5de8f3263f981c15d4d450c0a6c3cd1952405" translate="yes" xml:space="preserve">
          <source>Enable the programmable completion facilities (see &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;Programmable Completion&lt;/a&gt;). If Readline is not enabled, this option has no effect.</source>
          <target state="translated">启用可编程完成功能（请参阅&amp;ldquo; &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;可编程完成&amp;rdquo;&lt;/a&gt;）。如果未启用Readline，则此选项无效。</target>
        </trans-unit>
        <trans-unit id="091713447eb488afdd7108e2315b018f0bf73492" translate="yes" xml:space="preserve">
          <source>Enabling &lt;small&gt;POSIX&lt;/small&gt; mode has the effect of setting the &lt;code&gt;inherit_errexit&lt;/code&gt; option, so subshells spawned to execute command substitutions inherit the value of the</source>
          <target state="translated">启用&lt;small&gt;POSIX&lt;/small&gt;模式具有设置 &lt;code&gt;inherit_errexit&lt;/code&gt; 选项的效果，因此产生的执行命令替换的子shell继承了</target>
        </trans-unit>
        <trans-unit id="65863ba0a3dfba5f65b08c1631dea3f9d7e27214" translate="yes" xml:space="preserve">
          <source>Enabling &lt;small&gt;POSIX&lt;/small&gt; mode has the effect of setting the &lt;code&gt;shift_verbose&lt;/code&gt; option, so numeric arguments to &lt;code&gt;shift&lt;/code&gt; that exceed the number of positional parameters will result in an error message.</source>
          <target state="translated">启用&lt;small&gt;POSIX&lt;/small&gt;模式具有设置 &lt;code&gt;shift_verbose&lt;/code&gt; 选项的效果，因此要进行 &lt;code&gt;shift&lt;/code&gt; 数字参数超过位置参数的数量，将导致错误消息。</target>
        </trans-unit>
        <trans-unit id="c44f12b29415342c9dc8c04f8dc9beffb4ac4a7e" translate="yes" xml:space="preserve">
          <source>Enclosing characters in double quotes (&amp;lsquo;</source>
          <target state="translated">将字符括在双引号（'</target>
        </trans-unit>
        <trans-unit id="51c33143a0b205ef393e882cb3244299516f9b08" translate="yes" xml:space="preserve">
          <source>Enclosing characters in single quotes (&amp;lsquo;</source>
          <target state="translated">将字符括在单引号（'</target>
        </trans-unit>
        <trans-unit id="adf47705460fdb3365a684241a6b22caa01d806e" translate="yes" xml:space="preserve">
          <source>End a sequence of non-printing characters.</source>
          <target state="translated">结束非打印字符的序列。</target>
        </trans-unit>
        <trans-unit id="d443a1185575c125d61e0af393b044d7b06ef572" translate="yes" xml:space="preserve">
          <source>Environment</source>
          <target state="translated">Environment</target>
        </trans-unit>
        <trans-unit id="fdd6abe4d3e43555fd6a8a4c1cf45b848e487e53" translate="yes" xml:space="preserve">
          <source>Equivalent to</source>
          <target state="translated">相当于</target>
        </trans-unit>
        <trans-unit id="435c41f6e2cb1bfb9f7b6bdcc6da8c24703575f7" translate="yes" xml:space="preserve">
          <source>Error tracing is enabled: command substitution, shell functions, and subshells invoked with &lt;code&gt;( &lt;var&gt;command&lt;/var&gt; )&lt;/code&gt; inherit the &lt;code&gt;ERR&lt;/code&gt; trap.</source>
          <target state="translated">启用了错误跟踪：使用 &lt;code&gt;( &lt;var&gt;command&lt;/var&gt; )&lt;/code&gt; 调用的命令替换，shell函数和子shell会继承 &lt;code&gt;ERR&lt;/code&gt; 陷阱。</target>
        </trans-unit>
        <trans-unit id="b9e89b54ec73689553af30dd03b5f687e16616fb" translate="yes" xml:space="preserve">
          <source>Escape Character</source>
          <target state="translated">逃生人物</target>
        </trans-unit>
        <trans-unit id="8847cc1e6aaa23fabc2736e3a258d26080f52b50" translate="yes" xml:space="preserve">
          <source>Evaluate &lt;var&gt;callback&lt;/var&gt; each time &lt;var&gt;quantum&lt;/var&gt; lines are read. The</source>
          <target state="translated">每次读取 &lt;var&gt;quantum&lt;/var&gt; 线时都要评估 &lt;var&gt;callback&lt;/var&gt; 。的</target>
        </trans-unit>
        <trans-unit id="18dbaf38227c065b48a49c7568e3ee1c31e79938" translate="yes" xml:space="preserve">
          <source>Evaluate a conditional expression &lt;var&gt;expr&lt;/var&gt; and return a status of 0 (true) or 1 (false). Each operator and operand must be a separate argument. Expressions are composed of the primaries described below in &lt;a href=&quot;bash-conditional-expressions&quot;&gt;Bash Conditional Expressions&lt;/a&gt;. &lt;code&gt;test&lt;/code&gt; does not accept any options, nor does it accept and ignore an argument of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d14aaf66892b62bb697f75d8e7158e39af015757" translate="yes" xml:space="preserve">
          <source>Evaluate a conditional expression &lt;var&gt;expr&lt;/var&gt; and return a status of 0 (true) or 1 (false). Each operator and operand must be a separate argument. Expressions are composed of the primaries described below in &lt;a href=&quot;bash-conditional-expressions#Bash-Conditional-Expressions&quot;&gt;Bash Conditional Expressions&lt;/a&gt;. &lt;code&gt;test&lt;/code&gt; does not accept any options, nor does it accept and ignore an argument of</source>
          <target state="translated">评估条件表达式 &lt;var&gt;expr&lt;/var&gt; 并返回状态0（真）或1（假）。每个运算符和操作数必须是一个单独的参数。表达式由下面的&lt;a href=&quot;bash-conditional-expressions#Bash-Conditional-Expressions&quot;&gt;Bash条件表达式&lt;/a&gt;中描述的主键组成。 &lt;code&gt;test&lt;/code&gt; 不接受任何选项，也不接受和忽略</target>
        </trans-unit>
        <trans-unit id="cdada53f6de22a42b1b986711fcd16d20111c5d8" translate="yes" xml:space="preserve">
          <source>Evaluation is done in fixed-width integers with no check for overflow, though division by 0 is trapped and flagged as an error. The operators and their precedence, associativity, and values are the same as in the C language. The following list of operators is grouped into levels of equal-precedence operators. The levels are listed in order of decreasing precedence.</source>
          <target state="translated">评估是在固定宽度的整数中进行的,没有溢出检查,尽管除以0会被捕获并标记为错误。运算符及其优先级、关联性和值与C语言相同。下面的运算符列表被归为等优先运算符的级别。各级运算符按优先级递减的顺序排列。</target>
        </trans-unit>
        <trans-unit id="f81dbc80b5fb875e98fd2a393091d0c168bb041f" translate="yes" xml:space="preserve">
          <source>Event Designators</source>
          <target state="translated">活动代号</target>
        </trans-unit>
        <trans-unit id="2ce75041d97cf817b4ddd136ddb8befefae02f6f" translate="yes" xml:space="preserve">
          <source>Examples of suitable formats for Transparent copies include plain &lt;small&gt;ASCII&lt;/small&gt; without markup, Texinfo input format, LaTeX input format,</source>
          <target state="translated">适用于透明副本的格式的示例包括不带标记的纯&lt;small&gt;ASCII&lt;/small&gt;，Texinfo输入格式，LaTeX输入格式，</target>
        </trans-unit>
        <trans-unit id="db594b9f47a21a740021f6f7e42a911e26ff2311" translate="yes" xml:space="preserve">
          <source>Execute &lt;var&gt;consequent-commands&lt;/var&gt; as long as &lt;var&gt;test-commands&lt;/var&gt; has an exit status of zero. The return status is the exit status of the last command executed in &lt;var&gt;consequent-commands&lt;/var&gt;, or zero if none was executed.</source>
          <target state="translated">只要 &lt;var&gt;test-commands&lt;/var&gt; 的退出状态为零，就执行 &lt;var&gt;consequent-commands&lt;/var&gt; 。返回状态是在 &lt;var&gt;consequent-commands&lt;/var&gt; 命令中执行的最后一条命令的退出状态；如果未执行，则返回零。</target>
        </trans-unit>
        <trans-unit id="2de40889c9c1b6f9d350aaca394da8db65d01d54" translate="yes" xml:space="preserve">
          <source>Execute &lt;var&gt;consequent-commands&lt;/var&gt; as long as &lt;var&gt;test-commands&lt;/var&gt; has an exit status which is not zero. The return status is the exit status of the last command executed in &lt;var&gt;consequent-commands&lt;/var&gt;, or zero if none was executed.</source>
          <target state="translated">只要 &lt;var&gt;test-commands&lt;/var&gt; 的退出状态不为零，就执行 &lt;var&gt;consequent-commands&lt;/var&gt; 。返回状态是在 &lt;var&gt;consequent-commands&lt;/var&gt; 命令中执行的最后一条命令的退出状态；如果未执行，则返回零。</target>
        </trans-unit>
        <trans-unit id="0768f7f48d73715d585e325d6eb196981d869406" translate="yes" xml:space="preserve">
          <source>Execute commands from &lt;var&gt;filename&lt;/var&gt; (instead of</source>
          <target state="translated">从 &lt;var&gt;filename&lt;/var&gt; 执行命令（而不是</target>
        </trans-unit>
        <trans-unit id="5de5df4bd89ce0de3f32e1a58af42558dd4da423" translate="yes" xml:space="preserve">
          <source>Executes the command (see &lt;a href=&quot;executing-commands&quot;&gt;Executing Commands&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5247ecd754ea4e202126e713baa3638f4913dc8f" translate="yes" xml:space="preserve">
          <source>Executes the command (see &lt;a href=&quot;executing-commands#Executing-Commands&quot;&gt;Executing Commands&lt;/a&gt;).</source>
          <target state="translated">执行命令（请参阅&lt;a href=&quot;executing-commands#Executing-Commands&quot;&gt;执行命令&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="2b1d72d3eae7cf1fafda5045b2256094c6e6f7b3" translate="yes" xml:space="preserve">
          <source>Executing Commands</source>
          <target state="translated">执行命令</target>
        </trans-unit>
        <trans-unit id="5a48defe538322ee2f065c55807333afe2662a5c" translate="yes" xml:space="preserve">
          <source>Executing files of shell commands.</source>
          <target state="translated">执行shell命令的文件。</target>
        </trans-unit>
        <trans-unit id="6f147bbcdc2ea57f6c81bec669ec536b253dc54b" translate="yes" xml:space="preserve">
          <source>Exit Status</source>
          <target state="translated">退出状态</target>
        </trans-unit>
        <trans-unit id="ecb36345a2317b8d4a7a335bcc2c46e455a8278e" translate="yes" xml:space="preserve">
          <source>Exit a login shell, returning a status of &lt;var&gt;n&lt;/var&gt; to the shell&amp;rsquo;s parent.</source>
          <target state="translated">退出登录外壳程序，将状态 &lt;var&gt;n&lt;/var&gt; 返回给外壳程序的父级。</target>
        </trans-unit>
        <trans-unit id="d5d3f93533c0dd804b9ad3f7128809a490d7e229" translate="yes" xml:space="preserve">
          <source>Exit after reading and executing one command.</source>
          <target state="translated">读取并执行一条命令后退出。</target>
        </trans-unit>
        <trans-unit id="48d4f2e17614de2f309b6ea645a4186cf19a62af" translate="yes" xml:space="preserve">
          <source>Exit from a &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;until&lt;/code&gt;, or &lt;code&gt;select&lt;/code&gt; loop. If &lt;var&gt;n&lt;/var&gt; is supplied, the &lt;var&gt;n&lt;/var&gt;th enclosing loop is exited. &lt;var&gt;n&lt;/var&gt; must be greater than or equal to 1. The return status is zero unless &lt;var&gt;n&lt;/var&gt; is not greater than or equal to 1.</source>
          <target state="translated">从 &lt;code&gt;for&lt;/code&gt; ， &lt;code&gt;while&lt;/code&gt; ，退出 &lt;code&gt;until&lt;/code&gt; ，或 &lt;code&gt;select&lt;/code&gt; 循环。如果 &lt;var&gt;n&lt;/var&gt; 被提供时， &lt;var&gt;n&lt;/var&gt; 个封闭回路中退出。 &lt;var&gt;n&lt;/var&gt; 必须大于或等于1。返回状态为零，除非 &lt;var&gt;n&lt;/var&gt; 不大于或等于1。</target>
        </trans-unit>
        <trans-unit id="45a3e5d1b8135e972dce62f9cbfc0d021d8809ec" translate="yes" xml:space="preserve">
          <source>Exit immediately if a pipeline (see &lt;a href=&quot;pipelines&quot;&gt;Pipelines&lt;/a&gt;), which may consist of a single simple command (see &lt;a href=&quot;simple-commands&quot;&gt;Simple Commands&lt;/a&gt;), a list (see &lt;a href=&quot;lists&quot;&gt;Lists&lt;/a&gt;), or a compound command (see &lt;a href=&quot;compound-commands&quot;&gt;Compound Commands&lt;/a&gt;) returns a non-zero status. The shell does not exit if the command that fails is part of the command list immediately following a &lt;code&gt;while&lt;/code&gt; or &lt;code&gt;until&lt;/code&gt; keyword, part of the test in an &lt;code&gt;if&lt;/code&gt; statement, part of any command executed in a &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; or &lt;code&gt;||&lt;/code&gt; list except the command following the final &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; or &lt;code&gt;||&lt;/code&gt;, any command in a pipeline but the last, or if the command&amp;rsquo;s return status is being inverted with &lt;code&gt;!&lt;/code&gt;. If a compound command other than a subshell returns a non-zero status because a command failed while</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b67480a95632a330a58d1eec571fd65498ed85" translate="yes" xml:space="preserve">
          <source>Exit immediately if a pipeline (see &lt;a href=&quot;pipelines#Pipelines&quot;&gt;Pipelines&lt;/a&gt;), which may consist of a single simple command (see &lt;a href=&quot;simple-commands#Simple-Commands&quot;&gt;Simple Commands&lt;/a&gt;), a list (see &lt;a href=&quot;lists#Lists&quot;&gt;Lists&lt;/a&gt;), or a compound command (see &lt;a href=&quot;compound-commands#Compound-Commands&quot;&gt;Compound Commands&lt;/a&gt;) returns a non-zero status. The shell does not exit if the command that fails is part of the command list immediately following a &lt;code&gt;while&lt;/code&gt; or &lt;code&gt;until&lt;/code&gt; keyword, part of the test in an &lt;code&gt;if&lt;/code&gt; statement, part of any command executed in a &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; or &lt;code&gt;||&lt;/code&gt; list except the command following the final &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; or &lt;code&gt;||&lt;/code&gt;, any command in a pipeline but the last, or if the command&amp;rsquo;s return status is being inverted with &lt;code&gt;!&lt;/code&gt;. If a compound command other than a subshell returns a non-zero status because a command failed while</source>
          <target state="translated">如果可能由单个简单命令（请参见&lt;a href=&quot;simple-commands#Simple-Commands&quot;&gt;Simple Commands&lt;/a&gt;），列表（请参见&lt;a href=&quot;lists#Lists&quot;&gt;Lists&lt;/a&gt;）或复合命令（请参见&lt;a href=&quot;compound-commands#Compound-Commands&quot;&gt;Composite Commands&lt;/a&gt;）组成的管道（请参见&lt;a href=&quot;pipelines#Pipelines&quot;&gt;Pipelines&lt;/a&gt;）返回非零状态，则立即退出。如果失败的命令紧随一段 &lt;code&gt;while&lt;/code&gt; 或 &lt;code&gt;until&lt;/code&gt; 关键字， &lt;code&gt;if&lt;/code&gt; 语句中测试的一部分， &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 或 &lt;code&gt;||&lt;/code&gt; 中执行的任何命令的一部分之后的命令列表的一部分，则外壳程序不会退出。列表，最后一个 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 或 &lt;code&gt;||&lt;/code&gt; 之后的命令除外，管道中除最后一条命令以外的任何命令，或者如果命令的返回状态正在用 &lt;code&gt;!&lt;/code&gt; 反转。。如果除子shell以外的复合命令返回非零状态，因为该命令在</target>
        </trans-unit>
        <trans-unit id="8680a8365685143354bf24857e0e80f34974d351" translate="yes" xml:space="preserve">
          <source>Exit the shell, returning a status of &lt;var&gt;n&lt;/var&gt; to the shell&amp;rsquo;s parent. If &lt;var&gt;n&lt;/var&gt; is omitted, the exit status is that of the last command executed. Any trap on &lt;code&gt;EXIT&lt;/code&gt; is executed before the shell terminates.</source>
          <target state="translated">退出外壳程序，将状态 &lt;var&gt;n&lt;/var&gt; 返回到外壳程序的父级。如果省略 &lt;var&gt;n&lt;/var&gt; ，则退出状态为最后执行的命令的退出状态。在外壳终止之前，将执行 &lt;code&gt;EXIT&lt;/code&gt; 上的所有陷阱。</target>
        </trans-unit>
        <trans-unit id="27b5a6b85f9b33b16ccd47d134815bd368334ef6" translate="yes" xml:space="preserve">
          <source>Expand &lt;var&gt;words&lt;/var&gt; (see &lt;a href=&quot;shell-expansions&quot;&gt;Shell Expansions&lt;/a&gt;), and execute &lt;var&gt;commands&lt;/var&gt; once for each member in the resultant list, with &lt;var&gt;name&lt;/var&gt; bound to the current member. If &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae95ddb1d665affd3e5c19cac30785e429c3a007" translate="yes" xml:space="preserve">
          <source>Expand &lt;var&gt;words&lt;/var&gt; (see &lt;a href=&quot;shell-expansions#Shell-Expansions&quot;&gt;Shell Expansions&lt;/a&gt;), and execute &lt;var&gt;commands&lt;/var&gt; once for each member in the resultant list, with &lt;var&gt;name&lt;/var&gt; bound to the current member. If &amp;lsquo;</source>
          <target state="translated">展开 &lt;var&gt;words&lt;/var&gt; （请参阅&lt;a href=&quot;shell-expansions#Shell-Expansions&quot;&gt;Shell Expansions&lt;/a&gt;），并对结果列表中的每个成员执行一次 &lt;var&gt;commands&lt;/var&gt; ，并将 &lt;var&gt;name&lt;/var&gt; 绑定到当前成员。如果</target>
        </trans-unit>
        <trans-unit id="d80c2719ce77ddabd223215521e4f6f87dacf4b9" translate="yes" xml:space="preserve">
          <source>Expand the line as the shell does. This performs alias and history expansion as well as all of the shell word expansions (see &lt;a href=&quot;shell-expansions&quot;&gt;Shell Expansions&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e89565aa0bd1b8f0b74bdba39c7f802d41dca9" translate="yes" xml:space="preserve">
          <source>Expand the line as the shell does. This performs alias and history expansion as well as all of the shell word expansions (see &lt;a href=&quot;shell-expansions#Shell-Expansions&quot;&gt;Shell Expansions&lt;/a&gt;).</source>
          <target state="translated">像外壳一样展开线。这将执行别名和历史记录扩展以及所有Shell单词扩展（请参阅&lt;a href=&quot;shell-expansions#Shell-Expansions&quot;&gt;Shell Expansions&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c18c0a5ba29bb5b9f9ee895f6a2b08b0c5d3f66f" translate="yes" xml:space="preserve">
          <source>Expanded and executed similarlty to &lt;code&gt;BASH_ENV&lt;/code&gt; (see &lt;a href=&quot;bash-startup-files&quot;&gt;Bash Startup Files&lt;/a&gt;) when an interactive shell is invoked in &lt;small&gt;POSIX&lt;/small&gt; Mode (see &lt;a href=&quot;bash-posix-mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c3c8adf13cebde9cc1f4c0f3582e189e275c33" translate="yes" xml:space="preserve">
          <source>Expands to the names of variables whose names begin with &lt;var&gt;prefix&lt;/var&gt;, separated by the first character of the &lt;code&gt;IFS&lt;/code&gt; special variable. When &amp;lsquo;</source>
          <target state="translated">扩展为名称以 &lt;var&gt;prefix&lt;/var&gt; 开头的变量的名称，以 &lt;code&gt;IFS&lt;/code&gt; 特殊变量的第一个字符分隔。什么时候 '</target>
        </trans-unit>
        <trans-unit id="3c66389a5a628bc379008d93de82cba08eaff6a4" translate="yes" xml:space="preserve">
          <source>Expands to the process ID of the current Bash process. This differs from &lt;code&gt;$$&lt;/code&gt; under certain circumstances, such as subshells that do not require Bash to be re-initialized. Assignments to &lt;code&gt;BASHPID&lt;/code&gt; have no effect. If &lt;code&gt;BASHPID&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">扩展为当前Bash进程的进程ID。在某些情况下，这与 &lt;code&gt;$$&lt;/code&gt; 不同，例如不需要重新初始化Bash的子外壳。分配给 &lt;code&gt;BASHPID&lt;/code&gt; 无效。如果 &lt;code&gt;BASHPID&lt;/code&gt; 设置BASHPID，则即使随后将其重置，它也会丢失其特殊属性。</target>
        </trans-unit>
        <trans-unit id="eeefa260632f8ab2be737460be21e67770fcef62" translate="yes" xml:space="preserve">
          <source>Expansion errors due to references to unbound shell variables after &amp;lsquo;</source>
          <target state="translated">由于在'之后引用了未绑定的shell变量，导致发生扩展错误</target>
        </trans-unit>
        <trans-unit id="0b314ffc0ff89a0dc56ea5edc34ae51d3483fc9e" translate="yes" xml:space="preserve">
          <source>Expansion is performed on the command line after it has been split into &lt;code&gt;token&lt;/code&gt;s. There are seven kinds of expansion performed:</source>
          <target state="translated">扩展被拆分为 &lt;code&gt;token&lt;/code&gt; s 后，在命令行上执行扩展。进行了七种扩展：</target>
        </trans-unit>
        <trans-unit id="1ac4bab2194250db443120ee805398c4d2705b33" translate="yes" xml:space="preserve">
          <source>Expansion of expressions within braces.</source>
          <target state="translated">扩大括号内的表达方式。</target>
        </trans-unit>
        <trans-unit id="573839c911bc91001ab46fcd6f821b6ad19c30b9" translate="yes" xml:space="preserve">
          <source>Expansion of the ~ character.</source>
          <target state="translated">扩大~字的范围。</target>
        </trans-unit>
        <trans-unit id="b9110ad38100e0120a06926de56afaff922ad458" translate="yes" xml:space="preserve">
          <source>Explicit null arguments (&lt;code&gt;&quot;&quot;&lt;/code&gt; or &lt;code&gt;''&lt;/code&gt;) are retained and passed to commands as empty strings. Unquoted implicit null arguments, resulting from the expansion of parameters that have no values, are removed. If a parameter with no value is expanded within double quotes, a null argument results and is retained and passed to a command as an empty string. When a quoted null argument appears as part of a word whose expansion is non-null, the null argument is removed. That is, the word &lt;code&gt;-d''&lt;/code&gt; becomes &lt;code&gt;-d&lt;/code&gt; after word splitting and null argument removal.</source>
          <target state="translated">显式的空参数（ &lt;code&gt;&quot;&quot;&lt;/code&gt; 或 &lt;code&gt;''&lt;/code&gt; ）将保留并作为空字符串传递给命令。删除因无值的参数扩展而导致的无引号的隐式空参数。如果将不带值的参数用双引号引起来，则会生成空参数，并保留该参数并将其作为空字符串传递给命令。当带引号的空参数作为扩展为非空的单词的一部分出现时，空参数将被删除。即，单词 &lt;code&gt;-d''&lt;/code&gt; 在单词拆分和删除空参数之后变为 &lt;code&gt;-d&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3f6b5a6badea5ccf39a4dce297b467741574a93" translate="yes" xml:space="preserve">
          <source>Expressions may be combined using the following operators, listed in decreasing order of precedence. The evaluation depends on the number of arguments; see below. Operator precedence is used when there are five or more arguments.</source>
          <target state="translated">表达式可以使用以下运算符进行组合,按优先级递减的顺序排列。评价取决于参数的数量,见下文。当有五个或更多的参数时,使用运算符的优先级。</target>
        </trans-unit>
        <trans-unit id="e338a97d4b0f0eac5ea1317fd365eb51cf4c99f5" translate="yes" xml:space="preserve">
          <source>Expressions may be combined using the following operators, listed in decreasing order of precedence:</source>
          <target state="translated">表达式可以使用以下运算符进行组合,按递减顺序排列。</target>
        </trans-unit>
        <trans-unit id="21ca86863c85d11e4ca9e426df3df65eec06873a" translate="yes" xml:space="preserve">
          <source>Expressions may be unary or binary, and are formed from the following primaries. Unary expressions are often used to examine the status of a file. There are string operators and numeric comparison operators as well. Bash handles several filenames specially when they are used in expressions. If the operating system on which Bash is running provides these special files, Bash will use them; otherwise it will emulate them internally with this behavior: If the &lt;var&gt;file&lt;/var&gt; argument to one of the primaries is of the form</source>
          <target state="translated">表达式可以是一元或二进制的，并且由以下基元组成。一元表达式通常用于检查文件的状态。也有字符串运算符和数字比较运算符。当在表达式中使用Bash时，Bash特别处理多个文件名。如果运行Bash的操作系统提供了这些特殊文件，则Bash将使用它们；否则，将使用它们。否则，它将在内部用以下行为模拟它们：如果其中一个原语的 &lt;var&gt;file&lt;/var&gt; 参数的格式为</target>
        </trans-unit>
        <trans-unit id="e69f20e9f683920d3fb4329abd951e878b1f9372" translate="yes" xml:space="preserve">
          <source>F</source>
          <target state="translated">F</target>
        </trans-unit>
        <trans-unit id="9cc2370fcd9fe50317c29d91261a3416a1d00e72" translate="yes" xml:space="preserve">
          <source>FCEDIT</source>
          <target state="translated">FCEDIT</target>
        </trans-unit>
        <trans-unit id="4c71702721868782e12ff8ba7da961bd8786d5de" translate="yes" xml:space="preserve">
          <source>FIGNORE</source>
          <target state="translated">FIGNORE</target>
        </trans-unit>
        <trans-unit id="8b479d553d65e5451531188f34d9e74f00f8c92a" translate="yes" xml:space="preserve">
          <source>FUNCNAME</source>
          <target state="translated">FUNCNAME</target>
        </trans-unit>
        <trans-unit id="25f8234a9809818389cdbbbe221e27b8f5229b65" translate="yes" xml:space="preserve">
          <source>FUNCNEST</source>
          <target state="translated">FUNCNEST</target>
        </trans-unit>
        <trans-unit id="01d518fcb352228f88b2aaae230c46aebb3e8747" translate="yes" xml:space="preserve">
          <source>FUTURE REVISIONS OF THIS LICENSE</source>
          <target state="translated">本許可證的未來修訂事項</target>
        </trans-unit>
        <trans-unit id="bc68cabfbfc112b9e52c75611ef91f892f0222be" translate="yes" xml:space="preserve">
          <source>Features found only in Bash.</source>
          <target state="translated">只有在Bash中才有的功能。</target>
        </trans-unit>
        <trans-unit id="fe7ee2460c006b9bc9c729f0f939fa08ac7c8a62" translate="yes" xml:space="preserve">
          <source>File descriptor 0 is duplicated.</source>
          <target state="translated">文件描述符0是重复的。</target>
        </trans-unit>
        <trans-unit id="6e8963551cab1ada2bcfb4d478960f55e196b5c5" translate="yes" xml:space="preserve">
          <source>File descriptor 1 is duplicated.</source>
          <target state="translated">文件描述符1是重复的。</target>
        </trans-unit>
        <trans-unit id="2d2669fb224bcb2badbb005c1228f5596da7525d" translate="yes" xml:space="preserve">
          <source>File descriptor 2 is duplicated.</source>
          <target state="translated">文件描述符2是重复的。</target>
        </trans-unit>
        <trans-unit id="97ac467ead939914256511ca5ef9560952949b65" translate="yes" xml:space="preserve">
          <source>File names. May also be specified as</source>
          <target state="translated">文件名。也可指定为</target>
        </trans-unit>
        <trans-unit id="b89c3e388470fc18eba45be427abbeefb68e2ec2" translate="yes" xml:space="preserve">
          <source>Filename Expansion</source>
          <target state="translated">文件名扩展</target>
        </trans-unit>
        <trans-unit id="f8c77a3481d496a18d74ab5a952f281934bd67b0" translate="yes" xml:space="preserve">
          <source>Finally, Parallel can be used to run a sequence of shell commands in parallel, similar to &amp;lsquo;</source>
          <target state="translated">最后，Parallel可用于并行运行一系列Shell命令，类似于&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="8d675708a166f30cb09377438921d0e17b8b674a" translate="yes" xml:space="preserve">
          <source>Finally, any prefix and suffix specified with the</source>
          <target state="translated">最后,任何用</target>
        </trans-unit>
        <trans-unit id="2d57771befe6e7f83eed8620aa1d0198dbf19dc2" translate="yes" xml:space="preserve">
          <source>First, the actions specified by the compspec are used. Only matches which are prefixed by the word being completed are returned. When the</source>
          <target state="translated">首先,使用compspec指定的动作。只有以被完成的单词为前缀的匹配才会返回。当</target>
        </trans-unit>
        <trans-unit id="d5368503ed9213d4a05058768eb49687fd82b4f4" translate="yes" xml:space="preserve">
          <source>First, the arithmetic expression &lt;var&gt;expr1&lt;/var&gt; is evaluated according to the rules described below (see &lt;a href=&quot;shell-arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt;). The arithmetic expression &lt;var&gt;expr2&lt;/var&gt; is then evaluated repeatedly until it evaluates to zero. Each time &lt;var&gt;expr2&lt;/var&gt; evaluates to a non-zero value, &lt;var&gt;commands&lt;/var&gt; are executed and the arithmetic expression &lt;var&gt;expr3&lt;/var&gt; is evaluated. If any expression is omitted, it behaves as if it evaluates to 1. The return value is the exit status of the last command in &lt;var&gt;commands&lt;/var&gt; that is executed, or false if any of the expressions is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6633e2e0caf5fa978444e9320465d62816fc7b0c" translate="yes" xml:space="preserve">
          <source>First, the arithmetic expression &lt;var&gt;expr1&lt;/var&gt; is evaluated according to the rules described below (see &lt;a href=&quot;shell-arithmetic#Shell-Arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt;). The arithmetic expression &lt;var&gt;expr2&lt;/var&gt; is then evaluated repeatedly until it evaluates to zero. Each time &lt;var&gt;expr2&lt;/var&gt; evaluates to a non-zero value, &lt;var&gt;commands&lt;/var&gt; are executed and the arithmetic expression &lt;var&gt;expr3&lt;/var&gt; is evaluated. If any expression is omitted, it behaves as if it evaluates to 1. The return value is the exit status of the last command in &lt;var&gt;commands&lt;/var&gt; that is executed, or false if any of the expressions is invalid.</source>
          <target state="translated">首先，根据下面描述的规则对算术表达式 &lt;var&gt;expr1&lt;/var&gt; 进行求值（请参见&lt;a href=&quot;shell-arithmetic#Shell-Arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt;）。然后重复对算术表达式 &lt;var&gt;expr2&lt;/var&gt; 求值，直到其求值为零。每次 &lt;var&gt;expr2&lt;/var&gt; 计算为非零值时，将执行 &lt;var&gt;commands&lt;/var&gt; 并计算算术表达式 &lt;var&gt;expr3&lt;/var&gt; 。如果省略任何表达式，它表现为，如果它的计算结果为1的返回值是最后一个命令的中退出状态 &lt;var&gt;commands&lt;/var&gt; 被执行的，或假如果任何表达式是无效的。</target>
        </trans-unit>
        <trans-unit id="3910b9b885a8514ff80f83efddbc51c57949c732" translate="yes" xml:space="preserve">
          <source>First, the command name is identified. If a compspec has been defined for that command, the compspec is used to generate the list of possible completions for the word. If the command word is the empty string (completion attempted at the beginning of an empty line), any compspec defined with the</source>
          <target state="translated">首先,确定命令名称。如果已经为该命令定义了一个compspec,那么这个compspec就会被用来生成这个词的可能完成列表。如果命令字是空字符串 (在空行开始处尝试完成),则任何以</target>
        </trans-unit>
        <trans-unit id="3df8d48a78e473a88e082ff72f98eb7a4d6617d3" translate="yes" xml:space="preserve">
          <source>For a complete description, refer to the GNU Parallel documentation. A few examples should provide a brief introduction to its use.</source>
          <target state="translated">完整的描述请参考 GNU Parallel 文档。几个例子可以简单介绍它的使用。</target>
        </trans-unit>
        <trans-unit id="821543598f885cdefc1bae15a68128743485ea4e" translate="yes" xml:space="preserve">
          <source>For almost every purpose, shell functions are preferred over aliases.</source>
          <target state="translated">在几乎所有的目的中,shell函数比别名更受欢迎。</target>
        </trans-unit>
        <trans-unit id="31ea4cd505220cf7dc65cbd234d0346175138c04" translate="yes" xml:space="preserve">
          <source>For any section Entitled &amp;ldquo;Acknowledgements&amp;rdquo; or &amp;ldquo;Dedications&amp;rdquo;, Preserve the Title of the section, and preserve in the section all the substance and tone of each of the contributor acknowledgements and/or dedications given therein.</source>
          <target state="translated">对于标题为&amp;ldquo;致谢&amp;rdquo;或&amp;ldquo;奉献&amp;rdquo;的任何部分，请保留本部分的标题，并在本部分中保留其中给出的每个贡献者致谢和/或奉献的所有内容和基调。</target>
        </trans-unit>
        <trans-unit id="700d2c8c8405332c3586f73a8c63632399d9b6d6" translate="yes" xml:space="preserve">
          <source>For each &lt;var&gt;name&lt;/var&gt;, indicate how it would be interpreted if used as a command name.</source>
          <target state="translated">对于每个 &lt;var&gt;name&lt;/var&gt; ，请指出如果用作命令名称将如何解释。</target>
        </trans-unit>
        <trans-unit id="af37e6fbbfbbcac7ffe32d937e4c6af958fa64b4" translate="yes" xml:space="preserve">
          <source>For each argument, a local variable named &lt;var&gt;name&lt;/var&gt; is created, and assigned &lt;var&gt;value&lt;/var&gt;. The &lt;var&gt;option&lt;/var&gt; can be any of the options accepted by &lt;code&gt;declare&lt;/code&gt;. &lt;code&gt;local&lt;/code&gt; can only be used within a function; it makes the variable &lt;var&gt;name&lt;/var&gt; have a visible scope restricted to that function and its children. If &lt;var&gt;name&lt;/var&gt; is &amp;lsquo;</source>
          <target state="translated">对于每个参数，都会创建一个名为 &lt;var&gt;name&lt;/var&gt; 的局部变量，并为其分配 &lt;var&gt;value&lt;/var&gt; 。该 &lt;var&gt;option&lt;/var&gt; 可以是任何所接受的选项 &lt;code&gt;declare&lt;/code&gt; 。 &lt;code&gt;local&lt;/code&gt; 只能在一个函数内使用；它使变量 &lt;var&gt;name&lt;/var&gt; 的可见范围仅限于该函数及其子函数。如果 &lt;var&gt;name&lt;/var&gt; 为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="4d42487498c37e54e1153f378c44e641eeda4bc8" translate="yes" xml:space="preserve">
          <source>For example, if</source>
          <target state="translated">例如,如果</target>
        </trans-unit>
        <trans-unit id="ee147ac90812d13353d84ebd3346013384640894" translate="yes" xml:space="preserve">
          <source>For example, if a variable &lt;var&gt;var&lt;/var&gt; is declared as local in function &lt;var&gt;func1&lt;/var&gt;, and &lt;var&gt;func1&lt;/var&gt; calls another function &lt;var&gt;func2&lt;/var&gt;, references to &lt;var&gt;var&lt;/var&gt; made from within &lt;var&gt;func2&lt;/var&gt; will resolve to the local variable &lt;var&gt;var&lt;/var&gt; from &lt;var&gt;func1&lt;/var&gt;, shadowing any global variable named &lt;var&gt;var&lt;/var&gt;.</source>
          <target state="translated">例如，如果一个变量 &lt;var&gt;var&lt;/var&gt; 被声明为本地函数 &lt;var&gt;func1&lt;/var&gt; 和 &lt;var&gt;func1&lt;/var&gt; 调用另一个函数 &lt;var&gt;func2&lt;/var&gt; ，以引用 &lt;var&gt;var&lt;/var&gt; 从内作出 &lt;var&gt;func2&lt;/var&gt; 将解决局部变量 &lt;var&gt;var&lt;/var&gt; 从 &lt;var&gt;func1&lt;/var&gt; ，阴影命名任何全局变量 &lt;var&gt;var&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="ec4a58e34a67613579e3965238cc9042ea21fd77" translate="yes" xml:space="preserve">
          <source>For example, in the default C locale, &amp;lsquo;</source>
          <target state="translated">例如，在默认的C语言环境中，&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="1b936fbe728022a646cda07e1ff2263d62ff893c" translate="yes" xml:space="preserve">
          <source>For example, it is easy to replace &lt;code&gt;xargs&lt;/code&gt; to gzip all html files in the current directory and its subdirectories:</source>
          <target state="translated">例如，很容易替换 &lt;code&gt;xargs&lt;/code&gt; 来gzip当前目录及其子目录中的所有html文件：</target>
        </trans-unit>
        <trans-unit id="ecf09a3267603121997e4a73abe79ae9e6e653a2" translate="yes" xml:space="preserve">
          <source>For example, the following will match a line (stored in the shell variable &lt;var&gt;line&lt;/var&gt;) if there is a sequence of characters anywhere in the value consisting of any number, including zero, of characters in the &lt;code&gt;space&lt;/code&gt; character class, zero or one instances of &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0a9b7bb1ae50175807be5f1d4f1df0bdba4cd2" translate="yes" xml:space="preserve">
          <source>For example, the following will match a line (stored in the shell variable &lt;var&gt;line&lt;/var&gt;) if there is a sequence of characters in the value consisting of any number, including zero, of space characters, zero or one instances of &amp;lsquo;</source>
          <target state="translated">例如，如果值中包含一系列字符（包括零个空格字符，零个或一个'实例）组成的字符序列，则以下内容将匹配一行（存储在shell变量 &lt;var&gt;line&lt;/var&gt; 中）</target>
        </trans-unit>
        <trans-unit id="f0c62e669f41bf783284d8c6ac18be626ff41b56" translate="yes" xml:space="preserve">
          <source>For historical reasons, the &lt;small&gt;POSIX&lt;/small&gt; standard has classified several builtin commands as &lt;em&gt;special&lt;/em&gt;. When Bash is executing in &lt;small&gt;POSIX&lt;/small&gt; mode, the special builtins differ from other builtin commands in three respects:</source>
          <target state="translated">由于历史原因，&lt;small&gt;POSIX&lt;/small&gt;标准已将几个内置命令归类为&lt;em&gt;special&lt;/em&gt;。当Bash在&lt;small&gt;POSIX&lt;/small&gt;模式下执行时，特殊的内置命令在以下三个方面与其他内置命令有所不同：</target>
        </trans-unit>
        <trans-unit id="3a1b9e9cc3d61418a49a71efef24c922a8fb54b3" translate="yes" xml:space="preserve">
          <source>For instance, assuming that there is a library of compspecs, each kept in a file corresponding to the name of the command, the following default completion function would load completions dynamically:</source>
          <target state="translated">例如,假设有一个compspecs库,每个compspecs都保存在一个与命令名称相对应的文件中,下面的默认完成函数将动态加载完成。</target>
        </trans-unit>
        <trans-unit id="784d40d018fd5cad5221ec4e8f15af75cc3d75b4" translate="yes" xml:space="preserve">
          <source>For the shell&amp;rsquo;s purposes, a command which exits with a zero exit status has succeeded. A non-zero exit status indicates failure. This seemingly counter-intuitive scheme is used so there is one well-defined way to indicate success and a variety of ways to indicate various failure modes. When a command terminates on a fatal signal whose number is &lt;var&gt;N&lt;/var&gt;, Bash uses the value 128+&lt;var&gt;N&lt;/var&gt; as the exit status.</source>
          <target state="translated">出于shell的目的，成功执行了以零退出状态退出的命令。非零退出状态表示失败。使用了这种看似违反直觉的方案，因此存在一种明确定义的方法来指示成功，并且存在多种方法来指示各种故障模式。当命令终止于数量为 &lt;var&gt;N&lt;/var&gt; 的致命信号时，Bash使用值128+ &lt;var&gt;N&lt;/var&gt; 作为退出状态。</target>
        </trans-unit>
        <trans-unit id="4082f4d2e1272b1171a63934fbaa1f69e171a886" translate="yes" xml:space="preserve">
          <source>Force the shell to run interactively. Interactive shells are described in &lt;a href=&quot;interactive-shells&quot;&gt;Interactive Shells&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6360d0a5f78a80fd2c3b1455015f95ff24d49d46" translate="yes" xml:space="preserve">
          <source>Force the shell to run interactively. Interactive shells are described in &lt;a href=&quot;interactive-shells#Interactive-Shells&quot;&gt;Interactive Shells&lt;/a&gt;.</source>
          <target state="translated">强制外壳以交互方式运行。交互式外壳在&lt;a href=&quot;interactive-shells#Interactive-Shells&quot;&gt;交互式外壳中&lt;/a&gt;进行了描述。</target>
        </trans-unit>
        <trans-unit id="50ec7604326dea76b8e89b9d6e7d98debb6b11f5" translate="yes" xml:space="preserve">
          <source>Function Index</source>
          <target state="translated">功能索引</target>
        </trans-unit>
        <trans-unit id="dd98fb172ddca2b4583bc0e0f0f1aacefb23c698" translate="yes" xml:space="preserve">
          <source>Function Key 1</source>
          <target state="translated">功能键1</target>
        </trans-unit>
        <trans-unit id="e1e4211f19a459bd591302cbd0a9d22886846a83" translate="yes" xml:space="preserve">
          <source>Function names and definitions may be listed with the</source>
          <target state="translated">功能名称和定义可与下列功能一起列出。</target>
        </trans-unit>
        <trans-unit id="40d4d818f943e148d8fd7a8459c1099ae6979a20" translate="yes" xml:space="preserve">
          <source>Function names may not be the same as one of the &lt;small&gt;POSIX&lt;/small&gt; special builtins.</source>
          <target state="translated">函数名称可能与&lt;small&gt;POSIX&lt;/small&gt;特殊内置函数之一不同。</target>
        </trans-unit>
        <trans-unit id="b2e1454a918213c05308895ef589284ac6291134" translate="yes" xml:space="preserve">
          <source>Function names must be valid shell &lt;code&gt;name&lt;/code&gt;s. That is, they may not contain characters other than letters, digits, and underscores, and may not start with a digit. Declaring a function with an invalid name causes a fatal syntax error in non-interactive shells.</source>
          <target state="translated">函数名称必须是有效的外壳程序 &lt;code&gt;name&lt;/code&gt; s。也就是说，它们不能包含字母，数字和下划线以外的字符，并且不能以数字开头。声明具有无效名称的函数会在非交互式外壳程序中导致致命的语法错误。</target>
        </trans-unit>
        <trans-unit id="9389dc80de92f750ba90e9f50496baed221c08e9" translate="yes" xml:space="preserve">
          <source>Function tracing is enabled: command substitution, shell functions, and subshells invoked with &lt;code&gt;( &lt;var&gt;command&lt;/var&gt; )&lt;/code&gt; inherit the &lt;code&gt;DEBUG&lt;/code&gt; and &lt;code&gt;RETURN&lt;/code&gt; traps.</source>
          <target state="translated">启用了功能跟踪：使用 &lt;code&gt;( &lt;var&gt;command&lt;/var&gt; )&lt;/code&gt; 调用的命令替换，shell函数和子shell 继承了 &lt;code&gt;DEBUG&lt;/code&gt; 和 &lt;code&gt;RETURN&lt;/code&gt; 陷阱。</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="b35666c449bc6a2c93c99818621b519d66fc564c" translate="yes" xml:space="preserve">
          <source>Functions are declared using this syntax:</source>
          <target state="translated">函数是用这个语法声明的。</target>
        </trans-unit>
        <trans-unit id="7dba2b9985060c118805c0e646c421556a5e13db" translate="yes" xml:space="preserve">
          <source>Functions may be recursive. The &lt;code&gt;FUNCNEST&lt;/code&gt; variable may be used to limit the depth of the function call stack and restrict the number of function invocations. By default, no limit is placed on the number of recursive calls.</source>
          <target state="translated">函数可能是递归的。所述 &lt;code&gt;FUNCNEST&lt;/code&gt; 变量可被用于限制函数调用栈的深度和限制函数调用的数目。默认情况下，递归调用数没有限制。</target>
        </trans-unit>
        <trans-unit id="a36a6718f54524d846894fb04b5b885b4e43e63b" translate="yes" xml:space="preserve">
          <source>G</source>
          <target state="translated">G</target>
        </trans-unit>
        <trans-unit id="a888ad6cdff70dc1f30a46fbbf113db3b826181f" translate="yes" xml:space="preserve">
          <source>GLOBIGNORE</source>
          <target state="translated">GLOBIGNORE</target>
        </trans-unit>
        <trans-unit id="0e4ec8a54cfff9c2845fa38842cb6cd1bdea197d" translate="yes" xml:space="preserve">
          <source>GNU Free Documentation License</source>
          <target state="translated">GNU 自由文档许可证</target>
        </trans-unit>
        <trans-unit id="f21ecd5fdbaaca4a9b6ad407e43e4a149da7aa62" translate="yes" xml:space="preserve">
          <source>GNU Parallel</source>
          <target state="translated">GNU Parallel</target>
        </trans-unit>
        <trans-unit id="572b5de1c4916bb0d6d9a63d28c4c31651f40945" translate="yes" xml:space="preserve">
          <source>GNU Parallel can replace certain common idioms that operate on lines read from a file (in this case, filenames listed one per line):</source>
          <target state="translated">GNU Parallel 可以替换某些常见的成语,这些成语在从文件中读取的行上进行操作(在这种情况下,每行列出一个文件名)。</target>
        </trans-unit>
        <trans-unit id="9920f873877a2c00d43ce366e00fcc4a026c2a0f" translate="yes" xml:space="preserve">
          <source>GNU Parallel, as its name suggests, can be used to build and run commands in parallel. You may run the same command with different arguments, whether they are filenames, usernames, hostnames, or lines read from files. GNU Parallel provides shorthand references to many of the most common operations (input lines, various portions of the input line, different ways to specify the input source, and so on). Parallel can replace &lt;code&gt;xargs&lt;/code&gt; or feed commands from its input sources to several different instances of Bash.</source>
          <target state="translated">顾名思义，GNU Parallel可用于并行构建和运行命令。您可以使用不同的参数运行同一命令，无论它们是文件名，用户名，主机名还是从文件读取的行。GNU Parallel提供了对许多最常见操作（输入行，输入行的各个部分，指定输入源的不同方式等）的简写引用。Parallel可以替换 &lt;code&gt;xargs&lt;/code&gt; 或从其输入源向多个Bash实例馈送命令。</target>
        </trans-unit>
        <trans-unit id="1f8969d436579977f5b13e27e290ffdb25736672" translate="yes" xml:space="preserve">
          <source>GROUPS</source>
          <target state="translated">GROUPS</target>
        </trans-unit>
        <trans-unit id="1dbeaadcfa2f14613d9d91d2caac209a10086e09" translate="yes" xml:space="preserve">
          <source>General index for concepts described in this manual.</source>
          <target state="translated">本手册中所述概念的总索引。</target>
        </trans-unit>
        <trans-unit id="ffb502eed96b0e0d1fc435a5f6ebe2ec48930a05" translate="yes" xml:space="preserve">
          <source>Generate possible completion matches for &lt;var&gt;word&lt;/var&gt; according to the &lt;var&gt;option&lt;/var&gt;s, which may be any option accepted by the &lt;code&gt;complete&lt;/code&gt; builtin with the exception of</source>
          <target state="translated">根据 &lt;var&gt;option&lt;/var&gt; s 生成 &lt;var&gt;word&lt;/var&gt; 可能的补全匹配，该选项可以是 &lt;code&gt;complete&lt;/code&gt; 内置函数接受的任何选项，但以下选项除外</target>
        </trans-unit>
        <trans-unit id="fd70f263257984118ab228639692bdd13569f0b2" translate="yes" xml:space="preserve">
          <source>Getting Readline to do the typing for you.</source>
          <target state="translated">让Readline帮你打字。</target>
        </trans-unit>
        <trans-unit id="cba4bc90f5a1d0269ef8cbd9482887f10f77f42c" translate="yes" xml:space="preserve">
          <source>Getting at previous lines.</source>
          <target state="translated">获取之前的行。</target>
        </trans-unit>
        <trans-unit id="99323b8804e03c3a5a84c311342b577caf41b7ed" translate="yes" xml:space="preserve">
          <source>Give each &lt;var&gt;name&lt;/var&gt; the &lt;code&gt;trace&lt;/code&gt; attribute. Traced functions inherit the &lt;code&gt;DEBUG&lt;/code&gt; and &lt;code&gt;RETURN&lt;/code&gt; traps from the calling shell. The trace attribute has no special meaning for variables.</source>
          <target state="translated">为每个 &lt;var&gt;name&lt;/var&gt; 指定 &lt;code&gt;trace&lt;/code&gt; 属性。跟踪的函数从调用shell 继承 &lt;code&gt;DEBUG&lt;/code&gt; 和 &lt;code&gt;RETURN&lt;/code&gt; 陷阱。trace属性对变量没有特殊含义。</target>
        </trans-unit>
        <trans-unit id="eb56493b275ff2bb5b3cd590e09d93ad07e98047" translate="yes" xml:space="preserve">
          <source>Give each &lt;var&gt;name&lt;/var&gt; the &lt;var&gt;nameref&lt;/var&gt; attribute, making it a name reference to another variable. That other variable is defined by the value of &lt;var&gt;name&lt;/var&gt;. All references, assignments, and attribute modifications to &lt;var&gt;name&lt;/var&gt;, except for those using or changing the</source>
          <target state="translated">给每 &lt;var&gt;name&lt;/var&gt; 在 &lt;var&gt;nameref&lt;/var&gt; 属性，使其成为一个名称引用另一个变量。另一个变量由 &lt;var&gt;name&lt;/var&gt; 的值定义。对 &lt;var&gt;name&lt;/var&gt; 的所有引用，赋值和属性修改，但使用或更改</target>
        </trans-unit>
        <trans-unit id="20a5f73e86c8343b4b8a010a3e2038de94656587" translate="yes" xml:space="preserve">
          <source>Giving numeric arguments to commands.</source>
          <target state="translated">给命令提供数字参数。</target>
        </trans-unit>
        <trans-unit id="099b74dac0cc412b3ed58c7cd5d5cceb9d23de2d" translate="yes" xml:space="preserve">
          <source>Group names. May also be specified as</source>
          <target state="translated">集团名称。也可指定为</target>
        </trans-unit>
        <trans-unit id="36f92be4931e1adae5787fc625a3cf5e4c6d164a" translate="yes" xml:space="preserve">
          <source>Grouping Commands</source>
          <target state="translated">分组命令</target>
        </trans-unit>
        <trans-unit id="e8542359d131fc7210e38dfd60c72ef251889b55" translate="yes" xml:space="preserve">
          <source>Grouping commands by name.</source>
          <target state="translated">按名称对命令进行分组。</target>
        </trans-unit>
        <trans-unit id="7cf184f4c67ad58283ecb19349720b0cae756829" translate="yes" xml:space="preserve">
          <source>H</source>
          <target state="translated">H</target>
        </trans-unit>
        <trans-unit id="40035b243fdc233025240891a44958da3b2edec9" translate="yes" xml:space="preserve">
          <source>HISTCMD</source>
          <target state="translated">HISTCMD</target>
        </trans-unit>
        <trans-unit id="b7fac907bfab2ab04db3bd76ad971d9c4228c588" translate="yes" xml:space="preserve">
          <source>HISTCONTROL</source>
          <target state="translated">HISTCONTROL</target>
        </trans-unit>
        <trans-unit id="8e59fc15e81bac6fbab38a312fb456c9970ee8ba" translate="yes" xml:space="preserve">
          <source>HISTFILE</source>
          <target state="translated">HISTFILE</target>
        </trans-unit>
        <trans-unit id="c0d1d2dc1c50c7ba70070c7b23d99342c1b919d4" translate="yes" xml:space="preserve">
          <source>HISTFILESIZE</source>
          <target state="translated">HISTFILESIZE</target>
        </trans-unit>
        <trans-unit id="b51ce5648e46354b5c84993c2e306ae8bbeb5b2b" translate="yes" xml:space="preserve">
          <source>HISTIGNORE</source>
          <target state="translated">HISTIGNORE</target>
        </trans-unit>
        <trans-unit id="6b3f3d17fc0c66fab7e4a26b67bf4c39d3118069" translate="yes" xml:space="preserve">
          <source>HISTSIZE</source>
          <target state="translated">HISTSIZE</target>
        </trans-unit>
        <trans-unit id="2a676d1b09daf5a7b2203fad03bc458b85438768" translate="yes" xml:space="preserve">
          <source>HISTTIMEFORMAT</source>
          <target state="translated">HISTTIMEFORMAT</target>
        </trans-unit>
        <trans-unit id="7731962fb19e09fff22c1be46abc4b02e9ff78eb" translate="yes" xml:space="preserve">
          <source>HOME</source>
          <target state="translated">HOME</target>
        </trans-unit>
        <trans-unit id="932e94343649a8891b99873911ca26d27cacf4f8" translate="yes" xml:space="preserve">
          <source>HOSTFILE</source>
          <target state="translated">HOSTFILE</target>
        </trans-unit>
        <trans-unit id="004663fef125f9479bf2ef658060b8d9bc34c7f1" translate="yes" xml:space="preserve">
          <source>HOSTNAME</source>
          <target state="translated">HOSTNAME</target>
        </trans-unit>
        <trans-unit id="fcb8906ef06cc4fbe423829dcb64ea818b193304" translate="yes" xml:space="preserve">
          <source>HOSTTYPE</source>
          <target state="translated">HOSTTYPE</target>
        </trans-unit>
        <trans-unit id="9f738ce8457f291b18ee47e665e96baa84f38fcd" translate="yes" xml:space="preserve">
          <source>HTML</source>
          <target state="translated">HTML</target>
        </trans-unit>
        <trans-unit id="022101e56d2000777140b52eadd8cb13bb8a053d" translate="yes" xml:space="preserve">
          <source>Help topics as accepted by the &lt;code&gt;help&lt;/code&gt; builtin (see &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b4ed15dab727027485455d935c87fc79eed0a6" translate="yes" xml:space="preserve">
          <source>Help topics as accepted by the &lt;code&gt;help&lt;/code&gt; builtin (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">帮助主题由所接受 &lt;code&gt;help&lt;/code&gt; 内建（见&lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;的Bash内建命令&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="46d757ece3ee04110da0daaafd3fb3fe6a92eb57" translate="yes" xml:space="preserve">
          <source>Here are some examples illustrating substring expansion on parameters and subscripted arrays:</source>
          <target state="translated">这里有一些例子说明参数和下标数组的子串扩展。</target>
        </trans-unit>
        <trans-unit id="ed952c00f5cb59401032439885a8d022eb6a90b5" translate="yes" xml:space="preserve">
          <source>Here are the word designators:</source>
          <target state="translated">下面是单词代号。</target>
        </trans-unit>
        <trans-unit id="d6d52f9730a70d6e1c33fd5620375a435833e36e" translate="yes" xml:space="preserve">
          <source>Here is a complete list of the</source>
          <target state="translated">以下是完整的清单</target>
        </trans-unit>
        <trans-unit id="697bff6a62f6ddad9affd3c23f639d1a0e233a52" translate="yes" xml:space="preserve">
          <source>Here is an example of an &lt;var&gt;inputrc&lt;/var&gt; file. This illustrates key binding, variable assignment, and conditional syntax.</source>
          <target state="translated">这是一个 &lt;var&gt;inputrc&lt;/var&gt; 文件的示例。这说明了键绑定，变量分配和条件语法。</target>
        </trans-unit>
        <trans-unit id="600278c68a7feb1a868a5ec74472bbcd6428595c" translate="yes" xml:space="preserve">
          <source>Here is an example that allows the user to pick a filename from the current directory, and displays the name and index of the file selected.</source>
          <target state="translated">下面是一个例子,允许用户从当前目录中选择一个文件名,并显示所选文件的名称和索引。</target>
        </trans-unit>
        <trans-unit id="3816b46b9f531dbceabf9e71cca67437b8984275" translate="yes" xml:space="preserve">
          <source>Here is an example using &lt;code&gt;case&lt;/code&gt; in a script that could be used to describe one interesting feature of an animal:</source>
          <target state="translated">这是一个脚本中的用 &lt;code&gt;case&lt;/code&gt; 示例，可用于描述动物的一个有趣特征：</target>
        </trans-unit>
        <trans-unit id="c0f3fbd7c5047f1575528bc673d7f9ffb5c67b78" translate="yes" xml:space="preserve">
          <source>Here is how to &lt;em&gt;yank&lt;/em&gt; the text back into the line. Yanking means to copy the most-recently-killed text from the kill buffer.</source>
          <target state="translated">下面是如何&lt;em&gt;抽出&lt;/em&gt;文本回线。Yanking意味着从kill缓冲区复制最近被杀死的文本。</target>
        </trans-unit>
        <trans-unit id="abf00be55adf0eb5ff38d028f70ddf95e8082dc8" translate="yes" xml:space="preserve">
          <source>Here is the list of commands for killing text.</source>
          <target state="translated">下面是杀文本的命令列表。</target>
        </trans-unit>
        <trans-unit id="c63fcb4d2eeb09ef32194f4d724f16d0dad22d86" translate="yes" xml:space="preserve">
          <source>Here, for example, is how to change from the default Emacs-like key binding to use &lt;code&gt;vi&lt;/code&gt; line editing commands:</source>
          <target state="translated">例如，这里是如何从默认的类似Emacs的键绑定更改为使用 &lt;code&gt;vi&lt;/code&gt; 行编辑命令的方法：</target>
        </trans-unit>
        <trans-unit id="563affddaa469d3c15210019ffdd8fdc943e789b" translate="yes" xml:space="preserve">
          <source>History Expansion</source>
          <target state="translated">历史扩展</target>
        </trans-unit>
        <trans-unit id="012f57901bb9d5819c769fd3ba3f1634febf1ab7" translate="yes" xml:space="preserve">
          <source>History Interaction</source>
          <target state="translated">历史互动</target>
        </trans-unit>
        <trans-unit id="64f467b3669480337cc7db5e5946619f71ced84f" translate="yes" xml:space="preserve">
          <source>History expansion implements shell-like quoting conventions: a backslash can be used to remove the special handling for the next character; single quotes enclose verbatim sequences of characters, and can be used to inhibit history expansion; and characters enclosed within double quotes may be subject to history expansion, since backslash can escape the history expansion character, but single quotes may not, since they are not treated specially within double quotes.</source>
          <target state="translated">历史扩展实现了类似于shell的引号约定:反斜线可以用来取消对下一个字符的特殊处理;单引号包围了逐字的字符序列,可以用来抑制历史扩展;包围在双引号内的字符可能会受到历史扩展的影响,因为反斜线可以逃避历史扩展字符,但单引号可能不会,因为它们在双引号内没有被特殊处理。</target>
        </trans-unit>
        <trans-unit id="9b8069afd6f62815c142b182ee4a99d1754f61a1" translate="yes" xml:space="preserve">
          <source>History expansion is performed immediately after a complete line is read, before the shell breaks it into words, and is performed on each line individually. Bash attempts to inform the history expansion functions about quoting still in effect from previous lines.</source>
          <target state="translated">历史扩展是在读取完一行完整的行后,在shell将其拆成文字之前立即进行的,并且对每一行单独进行。Bash试图告知历史扩展函数,前几行的引用仍然有效。</target>
        </trans-unit>
        <trans-unit id="3381af67492132d2a4caf0479daa928e8f33a833" translate="yes" xml:space="preserve">
          <source>History expansion takes place in two parts. The first is to determine which line from the history list should be used during substitution. The second is to select portions of that line for inclusion into the current one. The line selected from the history is called the &lt;em&gt;event&lt;/em&gt;, and the portions of that line that are acted upon are called &lt;em&gt;words&lt;/em&gt;. Various &lt;em&gt;modifiers&lt;/em&gt; are available to manipulate the selected words. The line is broken into words in the same fashion that Bash does, so that several words surrounded by quotes are considered one word. History expansions are introduced by the appearance of the history expansion character, which is &amp;lsquo;</source>
          <target state="translated">历史扩展分为两个部分。首先是确定在替换过程中应使用历史记录列表中的哪一行。第二步是选择该行的部分以包含在当前行中。从历史记录中选择的行称为&lt;em&gt;事件&lt;/em&gt;，行中作用的部分称为&lt;em&gt;单词&lt;/em&gt;。各种&lt;em&gt;修饰符&lt;/em&gt;可用于操纵所选单词。该行以与Bash相同的方式分解为单词，因此用引号引起的几个单词被视为一个单词。历史扩展是通过历史扩展字符的外观引入的，即&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="514e980bb78844737b79059ed05eea92bb3d5c9f" translate="yes" xml:space="preserve">
          <source>History expansions introduce words from the history list into the input stream, making it easy to repeat commands, insert the arguments to a previous command into the current input line, or fix errors in previous commands quickly.</source>
          <target state="translated">历史扩展将历史列表中的单词引入到输入流中,便于重复命令、将前一个命令的参数插入到当前的输入行中,或者快速修正前一个命令的错误。</target>
        </trans-unit>
        <trans-unit id="5f21bba93908089603c978a9f533a18bdc96a963" translate="yes" xml:space="preserve">
          <source>History of visited directories.</source>
          <target state="translated">访问目录的历史。</target>
        </trans-unit>
        <trans-unit id="fec5fab020547b760b20f31e28d2aae836406f7d" translate="yes" xml:space="preserve">
          <source>History, how to use</source>
          <target state="translated">历史,如何使用</target>
        </trans-unit>
        <trans-unit id="1de134ab899bf320138a819fb1987c860f3b883f" translate="yes" xml:space="preserve">
          <source>Hostnames, as taken from the file specified by the &lt;code&gt;HOSTFILE&lt;/code&gt; shell variable (see &lt;a href=&quot;bash-variables&quot;&gt;Bash Variables&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44da3f7ae23c0f9579331166ec23b8aeb799208b" translate="yes" xml:space="preserve">
          <source>Hostnames, as taken from the file specified by the &lt;code&gt;HOSTFILE&lt;/code&gt; shell variable (see &lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash Variables&lt;/a&gt;).</source>
          <target state="translated">主机名，取自 &lt;code&gt;HOSTFILE&lt;/code&gt; shell变量指定的文件（请参阅&lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash变量&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="00cb2a2ccd7a8407767b30f9e6ea317f10165bb0" translate="yes" xml:space="preserve">
          <source>How Bash expands parameters and the various expansions available.</source>
          <target state="translated">Bash如何扩展参数以及各种扩展方式。</target>
        </trans-unit>
        <trans-unit id="e0a559b6e2d7396ec3cfa484dc81a867c185bd73" translate="yes" xml:space="preserve">
          <source>How Bash expands simple commands before executing them.</source>
          <target state="translated">Bash如何在执行简单的命令之前对其进行扩展。</target>
        </trans-unit>
        <trans-unit id="1bd508daa344caccdb8a1f6967644e19d7a6dd41" translate="yes" xml:space="preserve">
          <source>How Bash expands variables to their values.</source>
          <target state="translated">Bash如何将变量扩展到它们的值。</target>
        </trans-unit>
        <trans-unit id="f5b4a297369087f4c540cb5e57a2efe0b4a1ec2b" translate="yes" xml:space="preserve">
          <source>How Bash finds commands and runs them.</source>
          <target state="translated">Bash如何找到命令并运行它们。</target>
        </trans-unit>
        <trans-unit id="705f2ab5402b3ba23e553c50511554b980eb0aa7" translate="yes" xml:space="preserve">
          <source>How Bash lets you manipulate your command history.</source>
          <target state="translated">Bash如何让你操纵你的命令历史。</target>
        </trans-unit>
        <trans-unit id="fe372b1c0471f05b6d5673b7569b7f51b9d1501a" translate="yes" xml:space="preserve">
          <source>How Bash supports behavior that was present in earlier versions and has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636121882b92cbf75206f96d8cfbccb5ba32e650" translate="yes" xml:space="preserve">
          <source>How and when quote characters are removed from words.</source>
          <target state="translated">如何以及何时从文字中删除引号字符。</target>
        </trans-unit>
        <trans-unit id="21ae32736e976f6f479c34b1f4f78ffb20a45583" translate="yes" xml:space="preserve">
          <source>How job control works.</source>
          <target state="translated">工作控制如何运作。</target>
        </trans-unit>
        <trans-unit id="43e045ed8644d318082b5e90c174a9f50fc83f94" translate="yes" xml:space="preserve">
          <source>How often (in seconds) that the shell should check for mail in the files specified in the &lt;code&gt;MAILPATH&lt;/code&gt; or &lt;code&gt;MAIL&lt;/code&gt; variables. The default is 60 seconds. When it is time to check for mail, the shell does so before displaying the primary prompt. If this variable is unset, or set to a value that is not a number greater than or equal to zero, the shell disables mail checking.</source>
          <target state="translated">外壳程序检查 &lt;code&gt;MAILPATH&lt;/code&gt; 或 &lt;code&gt;MAIL&lt;/code&gt; 变量中指定的文件中的邮件的频率（以秒为单位）。默认值为60秒。当需要检查邮件时，外壳程序会在显示主提示之前进行检查。如果未设置此变量，或者将其设置为不是大于或等于零的数字的值，则Shell将禁用邮件检查。</target>
        </trans-unit>
        <trans-unit id="5122b04b98b6cb7d584575476e649f09c4d7854b" translate="yes" xml:space="preserve">
          <source>How the results of expansion are split into separate arguments.</source>
          <target state="translated">扩张的结果如何拆成单独论据。</target>
        </trans-unit>
        <trans-unit id="91ec050b7b1aac4a30b57f25a6a475e935d12134" translate="yes" xml:space="preserve">
          <source>How the shell matches patterns.</source>
          <target state="translated">壳如何匹配模式。</target>
        </trans-unit>
        <trans-unit id="d71617b2404084d1b08725b89d80672e41640a0a" translate="yes" xml:space="preserve">
          <source>How the shell stores values.</source>
          <target state="translated">贝壳是如何存储数值的。</target>
        </trans-unit>
        <trans-unit id="8b7c6988e806e5646f59104182c8e2acee9730f8" translate="yes" xml:space="preserve">
          <source>How to build and install Bash on your system.</source>
          <target state="translated">如何在系统上构建和安装Bash。</target>
        </trans-unit>
        <trans-unit id="2f77ae2b628a712579d274e8a46291eef2fccc5d" translate="yes" xml:space="preserve">
          <source>How to compile Bash for more than one kind of system from the same source tree.</source>
          <target state="translated">如何从同一棵源码树上为多种系统编译Bash。</target>
        </trans-unit>
        <trans-unit id="a28eaf6fa6aaf527c86e1e3671902d5ef6673304" translate="yes" xml:space="preserve">
          <source>How to configure Bash for a particular system.</source>
          <target state="translated">如何为特定系统配置Bash。</target>
        </trans-unit>
        <trans-unit id="f0f8e1130fc57d2263078286702d1c19fb91d332" translate="yes" xml:space="preserve">
          <source>How to delete text, and how to get it back!</source>
          <target state="translated">如何删除文字,以及如何找回文字!</target>
        </trans-unit>
        <trans-unit id="05e816ad6ff499e8a84de7bfbfe9d1b1996c6c7d" translate="yes" xml:space="preserve">
          <source>How to enable and disable optional features when building Bash.</source>
          <target state="translated">如何在构建Bash时启用和禁用可选功能。</target>
        </trans-unit>
        <trans-unit id="d5236d96f61d2792963f3eaf76de99667edb6242" translate="yes" xml:space="preserve">
          <source>How to execute commands sequentially.</source>
          <target state="translated">如何依次执行命令。</target>
        </trans-unit>
        <trans-unit id="813ed3f8c590e1bdcdb2be481fa1e8c746103f4d" translate="yes" xml:space="preserve">
          <source>How to expand ANSI-C sequences in quoted strings.</source>
          <target state="translated">如何在引号字符串中扩展ANSI-C序列。</target>
        </trans-unit>
        <trans-unit id="4eece67e35162b170cf9d961ea94c3fae85f53d6" translate="yes" xml:space="preserve">
          <source>How to inhibit all interpretation of a sequence of characters.</source>
          <target state="translated">如何抑制所有字符序列的解释。</target>
        </trans-unit>
        <trans-unit id="c6731a99b5ecba395e4289f5c46fac1f860787f9" translate="yes" xml:space="preserve">
          <source>How to remove the special meaning from a single character.</source>
          <target state="translated">如何去除单字中的特殊含义。</target>
        </trans-unit>
        <trans-unit id="6e72088797abf5458ef6960bc9656ac417b355a0" translate="yes" xml:space="preserve">
          <source>How to remove the special meaning from characters.</source>
          <target state="translated">如何去除字符的特殊含义。</target>
        </trans-unit>
        <trans-unit id="7ffede19048d638ee9ef09f4afdbfea1b37f2fa1" translate="yes" xml:space="preserve">
          <source>How to report bugs in Bash.</source>
          <target state="translated">如何报告Bash中的错误。</target>
        </trans-unit>
        <trans-unit id="ea31d447e64fb72cd59b54c080c5a8120dbfe6dd" translate="yes" xml:space="preserve">
          <source>How to set special options for various systems.</source>
          <target state="translated">如何设置各种系统的特殊选项。</target>
        </trans-unit>
        <trans-unit id="82bc02142700694f6b6122318960d1b2e4428232" translate="yes" xml:space="preserve">
          <source>How to set the various paths used by the installation.</source>
          <target state="translated">如何设置安装使用的各种路径。</target>
        </trans-unit>
        <trans-unit id="c00aae970cf619c619c7b3b920486ff93f661cfd" translate="yes" xml:space="preserve">
          <source>How to share default configuration values among GNU programs.</source>
          <target state="translated">如何在GNU程序之间共享默认配置值。</target>
        </trans-unit>
        <trans-unit id="f2d972e804df8548b8f356bcc808bb81153df671" translate="yes" xml:space="preserve">
          <source>How to specify comments.</source>
          <target state="translated">如何指定评论。</target>
        </trans-unit>
        <trans-unit id="2a1ba811a9c9c12030393b93f376ebfdfd284926" translate="yes" xml:space="preserve">
          <source>How to specify the possible completions for a specific command.</source>
          <target state="translated">如何指定特定命令的可能完成。</target>
        </trans-unit>
        <trans-unit id="8e3be43e6540767e16426cddb4974c3e474d3192" translate="yes" xml:space="preserve">
          <source>How to specify which history line to use.</source>
          <target state="translated">如何指定使用哪条历史线。</target>
        </trans-unit>
        <trans-unit id="56b0959eea40e34990aae302eef8cf5eb5b069ca" translate="yes" xml:space="preserve">
          <source>How to suppress most of the interpretation of a sequence of characters.</source>
          <target state="translated">如何抑制大部分字符序列的解释。</target>
        </trans-unit>
        <trans-unit id="cf607e7d7a552c6a715e1836d6df53e868ab77cd" translate="yes" xml:space="preserve">
          <source>How to tell if a shell is interactive.</source>
          <target state="translated">如何判断一个shell是否是交互式的。</target>
        </trans-unit>
        <trans-unit id="bdd8239cb856ce89dd3372fe7dac878485db32ea" translate="yes" xml:space="preserve">
          <source>How to translate strings into different languages.</source>
          <target state="translated">如何将字符串翻译成不同的语言。</target>
        </trans-unit>
        <trans-unit id="dd92555cbedbf0b5f464ebeadeb68f27c787c694" translate="yes" xml:space="preserve">
          <source>How to use arithmetic in shell expansions.</source>
          <target state="translated">如何在扩壳中使用算术。</target>
        </trans-unit>
        <trans-unit id="a767e1f2275bc99680c33ce015eb5b167ac9c9b3" translate="yes" xml:space="preserve">
          <source>However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.</source>
          <target state="translated">但是,如果您停止了所有违反本许可的行为,那么您从某一特定版权持有人处获得的许可将被恢复:(a)临时性的,除非并直到版权持有人明确并最终终止您的许可;(b)永久性的,如果版权持有人未能在停止后60天之前以某种合理的方式通知您违规行为。</target>
        </trans-unit>
        <trans-unit id="ca73ab65568cd125c2d27a22bbd9e863c10b675d" translate="yes" xml:space="preserve">
          <source>I</source>
          <target state="translated">I</target>
        </trans-unit>
        <trans-unit id="0d914f517894e879e7f3b7fb9c522cfbc7107752" translate="yes" xml:space="preserve">
          <source>IFS</source>
          <target state="translated">IFS</target>
        </trans-unit>
        <trans-unit id="250a90b315394455c4d9d5d4fabb0f1b1d0829a6" translate="yes" xml:space="preserve">
          <source>IGNOREEOF</source>
          <target state="translated">IGNOREEOF</target>
        </trans-unit>
        <trans-unit id="105dbc839d379bb3bc6e660152bcfe47aa6415db" translate="yes" xml:space="preserve">
          <source>INPUTRC</source>
          <target state="translated">INPUTRC</target>
        </trans-unit>
        <trans-unit id="8b367d081831f5cb1e344a8ac1182842c6489e78" translate="yes" xml:space="preserve">
          <source>INSIDE_EMACS</source>
          <target state="translated">INSIDE_EMACS</target>
        </trans-unit>
        <trans-unit id="393aca9083d526ef7eb9fa16234ec9d0e82d9ee3" translate="yes" xml:space="preserve">
          <source>Identical to &lt;code&gt;menu-complete&lt;/code&gt;, but moves backward through the list of possible completions, as if &lt;code&gt;menu-complete&lt;/code&gt; had been given a negative argument.</source>
          <target state="translated">与 &lt;code&gt;menu-complete&lt;/code&gt; 相同，但是在可能完成的列表中向后移动，就好像 &lt;code&gt;menu-complete&lt;/code&gt; 被赋予了否定参数一样。</target>
        </trans-unit>
        <trans-unit id="751c68a3471b1c791efaee0a8e7c24ea0c266efd" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">If</target>
        </trans-unit>
        <trans-unit id="b94b85388613ff812132cfe4fbfdcb534fff787e" translate="yes" xml:space="preserve">
          <source>If &amp;lsquo;</source>
          <target state="translated">如果</target>
        </trans-unit>
        <trans-unit id="2359e55a7e838e90e550f9bbd0722902e3d12548" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;set -P&lt;/code&gt; is on, then:</source>
          <target state="translated">如果 &lt;code&gt;set -P&lt;/code&gt; ，则：</target>
        </trans-unit>
        <trans-unit id="258b0138a2ba1f7a90d47d1df6e659af050079fa" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;command&lt;/var&gt; is supplied, it replaces the shell without creating a new process. If the</source>
          <target state="translated">如果提供了 &lt;var&gt;command&lt;/var&gt; ，它将替换shell而不会创建新进程。如果</target>
        </trans-unit>
        <trans-unit id="b5a1fc3d69ee41cf9a674904c93fe56f1af55533" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;directory&lt;/var&gt; is &amp;lsquo;</source>
          <target state="translated">如果 &lt;var&gt;directory&lt;/var&gt; 是&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="db7df46e1677118816bb3cc96d5f3d1bb016d823" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fd&lt;/var&gt; is a valid integer, file descriptor &lt;var&gt;fd&lt;/var&gt; is duplicated.</source>
          <target state="translated">如果 &lt;var&gt;fd&lt;/var&gt; 是有效整数，则文件描述符 &lt;var&gt;fd&lt;/var&gt; 被复制。</target>
        </trans-unit>
        <trans-unit id="a6a36b0383dacfeba0b4991eeba9395c27107746" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;host&lt;/var&gt; is a valid hostname or Internet address, and &lt;var&gt;port&lt;/var&gt; is an integer port number or service name, Bash attempts to open the corresponding TCP socket.</source>
          <target state="translated">如果 &lt;var&gt;host&lt;/var&gt; 是有效的主机名或Internet地址，而 &lt;var&gt;port&lt;/var&gt; 是整数端口号或服务名，则Bash尝试打开相应的TCP套接字。</target>
        </trans-unit>
        <trans-unit id="f2f0ed2a344f7c56f9a525c7663a15403e6f8997" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;host&lt;/var&gt; is a valid hostname or Internet address, and &lt;var&gt;port&lt;/var&gt; is an integer port number or service name, Bash attempts to open the corresponding UDP socket.</source>
          <target state="translated">如果 &lt;var&gt;host&lt;/var&gt; 是有效的主机名或Internet地址，而 &lt;var&gt;port&lt;/var&gt; 是整数端口号或服务名，则Bash尝试打开相应的UDP套接字。</target>
        </trans-unit>
        <trans-unit id="57b1f907c491aa38b767c7f9954197c94bad6d88" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;jobspec&lt;/var&gt; is given, output is restricted to information about that job. If &lt;var&gt;jobspec&lt;/var&gt; is not supplied, the status of all jobs is listed.</source>
          <target state="translated">如果 &lt;var&gt;jobspec&lt;/var&gt; ，则输出将限于有关该作业的信息。如果未提供 &lt;var&gt;jobspec&lt;/var&gt; ，则列出所有作业的状态。</target>
        </trans-unit>
        <trans-unit id="7dd2455725bca1b49f0366006cd1f3d9cbdc0e1f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;last&lt;/var&gt; is not specified, it is set to &lt;var&gt;first&lt;/var&gt;. If &lt;var&gt;first&lt;/var&gt; is not specified, it is set to the previous command for editing and -16 for listing. If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73828af7d0caf7a942515061caf0c104e019b26" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is given, and the</source>
          <target state="translated">如果给出 &lt;var&gt;limit&lt;/var&gt; ，则</target>
        </trans-unit>
        <trans-unit id="6941cee87418ba29be43b7c02bc4186c948bebbe" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;name&lt;/var&gt; is an array variable, expands to the list of array indices (keys) assigned in &lt;var&gt;name&lt;/var&gt;. If &lt;var&gt;name&lt;/var&gt; is not an array, expands to 0 if &lt;var&gt;name&lt;/var&gt; is set and null otherwise. When &amp;lsquo;</source>
          <target state="translated">如果 &lt;var&gt;name&lt;/var&gt; 是数组变量，则扩展到 &lt;var&gt;name&lt;/var&gt; 中分配的数组索引（键）列表。如果 &lt;var&gt;name&lt;/var&gt; 不是数组，则如果设置 &lt;var&gt;name&lt;/var&gt; 则扩展为0 ，否则为null。什么时候 '</target>
        </trans-unit>
        <trans-unit id="90d2bf911877dcd018448b4fa11f17b521ec021a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;offset&lt;/var&gt; evaluates to a number less than zero, the value is used as an offset in characters from the end of the value of &lt;var&gt;parameter&lt;/var&gt;. If &lt;var&gt;length&lt;/var&gt; evaluates to a number less than zero, it is interpreted as an offset in characters from the end of the value of &lt;var&gt;parameter&lt;/var&gt; rather than a number of characters, and the expansion is the characters between &lt;var&gt;offset&lt;/var&gt; and that result. Note that a negative offset must be separated from the colon by at least one space to avoid being confused with the &amp;lsquo;</source>
          <target state="translated">如果 &lt;var&gt;offset&lt;/var&gt; 的数值小于零，则该值将用作从 &lt;var&gt;parameter&lt;/var&gt; 的值末尾开始的偏移量（以字符为单位）。如果 &lt;var&gt;length&lt;/var&gt; 计算得出的数字小于零，则将其解释为距 &lt;var&gt;parameter&lt;/var&gt; 值末尾的字符偏移量，而不是字符数，并且扩展名是 &lt;var&gt;offset&lt;/var&gt; 和该结果之间的字符。请注意，负偏移必须与冒号隔开至少一个空格，以免与'</target>
        </trans-unit>
        <trans-unit id="e3dbd90979f11940416966a17c9767352edc8bca" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parameter&lt;/var&gt; is &amp;lsquo;</source>
          <target state="translated">如果 &lt;var&gt;parameter&lt;/var&gt; 为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="d3c8a9050458b1d1764aa5c7580bd7e24e51cf84" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parameter&lt;/var&gt; is an indexed array name subscripted by &amp;lsquo;</source>
          <target state="translated">如果 &lt;var&gt;parameter&lt;/var&gt; 是带下标'的索引数组名称</target>
        </trans-unit>
        <trans-unit id="a933511083f809e12ed4d366a4222102893821f6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parameter&lt;/var&gt; is null or unset, nothing is substituted, otherwise the expansion of &lt;var&gt;word&lt;/var&gt; is substituted.</source>
          <target state="translated">如果 &lt;var&gt;parameter&lt;/var&gt; 为null或未设置，则不替换任何内容，否则替换 &lt;var&gt;word&lt;/var&gt; 的扩展名。</target>
        </trans-unit>
        <trans-unit id="1a7bff0cbd3600d20034bbb8a02954436a57e645" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parameter&lt;/var&gt; is null or unset, the expansion of &lt;var&gt;word&lt;/var&gt; (or a message to that effect if &lt;var&gt;word&lt;/var&gt; is not present) is written to the standard error and the shell, if it is not interactive, exits. Otherwise, the value of &lt;var&gt;parameter&lt;/var&gt; is substituted.</source>
          <target state="translated">如果 &lt;var&gt;parameter&lt;/var&gt; 为null或未设置，则将 &lt;var&gt;word&lt;/var&gt; 的扩展名（或如果不存在 &lt;var&gt;word&lt;/var&gt; 则显示一条消息）写入标准错误，并且如果shell不是交互式的，则退出shell。否则，将替换 &lt;var&gt;parameter&lt;/var&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="25480a13be311d09c224d460b7039fb7e1872e50" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parameter&lt;/var&gt; is unset or null, the expansion of &lt;var&gt;word&lt;/var&gt; is assigned to &lt;var&gt;parameter&lt;/var&gt;. The value of &lt;var&gt;parameter&lt;/var&gt; is then substituted. Positional parameters and special parameters may not be assigned to in this way.</source>
          <target state="translated">如果 &lt;var&gt;parameter&lt;/var&gt; 未设置或为null，则将 &lt;var&gt;word&lt;/var&gt; 的扩展分配给 &lt;var&gt;parameter&lt;/var&gt; 。然后替换 &lt;var&gt;parameter&lt;/var&gt; 的值。不能以此方式分配位置参数和特殊参数。</target>
        </trans-unit>
        <trans-unit id="053b8d6257ac8e3813c4da7fbe800e5f2cd50647" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parameter&lt;/var&gt; is unset or null, the expansion of &lt;var&gt;word&lt;/var&gt; is substituted. Otherwise, the value of &lt;var&gt;parameter&lt;/var&gt; is substituted.</source>
          <target state="translated">如果 &lt;var&gt;parameter&lt;/var&gt; 未设置或为null，则替换 &lt;var&gt;word&lt;/var&gt; 的扩展名。否则，将替换 &lt;var&gt;parameter&lt;/var&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="9d13878f8a42d82478a1f12e782fe73a6e21ed94" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;value&lt;/var&gt; is not given, the variable is assigned the null string. All &lt;var&gt;value&lt;/var&gt;s undergo tilde expansion, parameter and variable expansion, command substitution, arithmetic expansion, and quote removal (detailed below). If the variable has its &lt;code&gt;integer&lt;/code&gt; attribute set, then &lt;var&gt;value&lt;/var&gt; is evaluated as an arithmetic expression even if the &lt;code&gt;$((&amp;hellip;))&lt;/code&gt; expansion is not used (see &lt;a href=&quot;arithmetic-expansion&quot;&gt;Arithmetic Expansion&lt;/a&gt;). Word splitting is not performed, with the exception of &lt;code&gt;&quot;$@&quot;&lt;/code&gt; as explained below. Filename expansion is not performed. Assignment statements may also appear as arguments to the &lt;code&gt;alias&lt;/code&gt;, &lt;code&gt;declare&lt;/code&gt;, &lt;code&gt;typeset&lt;/code&gt;, &lt;code&gt;export&lt;/code&gt;, &lt;code&gt;readonly&lt;/code&gt;, and &lt;code&gt;local&lt;/code&gt; builtin commands (&lt;var&gt;declaration&lt;/var&gt; commands). When in &lt;small&gt;POSIX&lt;/small&gt; mode (see &lt;a href=&quot;bash-posix-mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;), these builtins may appear in a command after one or more instances of the &lt;code&gt;command&lt;/code&gt; builtin and retain these assignment statement properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062df1706c997e4e31b1720431e0fc925e957dd1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;value&lt;/var&gt; is not given, the variable is assigned the null string. All &lt;var&gt;value&lt;/var&gt;s undergo tilde expansion, parameter and variable expansion, command substitution, arithmetic expansion, and quote removal (detailed below). If the variable has its &lt;code&gt;integer&lt;/code&gt; attribute set, then &lt;var&gt;value&lt;/var&gt; is evaluated as an arithmetic expression even if the &lt;code&gt;$((&amp;hellip;))&lt;/code&gt; expansion is not used (see &lt;a href=&quot;arithmetic-expansion#Arithmetic-Expansion&quot;&gt;Arithmetic Expansion&lt;/a&gt;). Word splitting is not performed, with the exception of &lt;code&gt;&quot;$@&quot;&lt;/code&gt; as explained below. Filename expansion is not performed. Assignment statements may also appear as arguments to the &lt;code&gt;alias&lt;/code&gt;, &lt;code&gt;declare&lt;/code&gt;, &lt;code&gt;typeset&lt;/code&gt;, &lt;code&gt;export&lt;/code&gt;, &lt;code&gt;readonly&lt;/code&gt;, and &lt;code&gt;local&lt;/code&gt; builtin commands (&lt;var&gt;declaration&lt;/var&gt; commands). When in &lt;small&gt;POSIX&lt;/small&gt; mode (see &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;), these builtins may appear in a command after one or more instances of the &lt;code&gt;command&lt;/code&gt; builtin and retain these assignment statement properties.</source>
          <target state="translated">如果未提供 &lt;var&gt;value&lt;/var&gt; 则为变量分配空字符串。所有 &lt;var&gt;value&lt;/var&gt; s都经过波浪号扩展，参数和变量扩展，命令替换，算术扩展和引号删除（详细信息如下）。如果变量设置了其 &lt;code&gt;integer&lt;/code&gt; 属性，那么即使不使用 &lt;code&gt;$((&amp;hellip;))&lt;/code&gt; 扩展，也将 &lt;var&gt;value&lt;/var&gt; 作为算术表达式求值（请参见&lt;a href=&quot;arithmetic-expansion#Arithmetic-Expansion&quot;&gt;Arithmetic Expansion&lt;/a&gt;）。除以下说明的 &lt;code&gt;&quot;$@&quot;&lt;/code&gt; 外，不执行单词拆分。不执行文件名扩展。赋值语句也可能出现作为参数传递给 &lt;code&gt;alias&lt;/code&gt; ， &lt;code&gt;declare&lt;/code&gt; ， &lt;code&gt;typeset&lt;/code&gt; ， &lt;code&gt;export&lt;/code&gt; ， &lt;code&gt;readonly&lt;/code&gt; 和 &lt;code&gt;local&lt;/code&gt; 内置命令（ &lt;var&gt;declaration&lt;/var&gt; 命令）。在&lt;small&gt;POSIX&lt;/small&gt;模式下（请参阅&lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX模式&lt;/a&gt;），这些内置命令可能会在一个或多个 &lt;code&gt;command&lt;/code&gt; 内置命令实例之后出现在命令中，并保留这些赋值语句属性。</target>
        </trans-unit>
        <trans-unit id="d8e30842d1ff4669f56f166866d66f203f4de618" translate="yes" xml:space="preserve">
          <source>If Bash finds this variable in the environment when the shell starts with value &amp;lsquo;</source>
          <target state="translated">如果Bash在shell以值'开头时在环境中找到此变量</target>
        </trans-unit>
        <trans-unit id="e3e57ae73348461cf9aaa21ecb851916a6610333" translate="yes" xml:space="preserve">
          <source>If Bash finds this variable in the environment when the shell starts, it assumes that the shell is running in an Emacs shell buffer and may disable line editing depending on the value of &lt;code&gt;TERM&lt;/code&gt;.</source>
          <target state="translated">如果Bash在shell启动时在环境中找到此变量，则假定shell在Emacs shell缓冲区中运行，并可能根据 &lt;code&gt;TERM&lt;/code&gt; 的值禁用行编辑。</target>
        </trans-unit>
        <trans-unit id="4d0496e1d2eef697bda7e95938d73fcb6002b3c8" translate="yes" xml:space="preserve">
          <source>If Bash is invoked with the name &lt;code&gt;sh&lt;/code&gt;, it tries to mimic the startup behavior of historical versions of &lt;code&gt;sh&lt;/code&gt; as closely as possible, while conforming to the &lt;small&gt;POSIX&lt;/small&gt; standard as well.</source>
          <target state="translated">如果使用名称 &lt;code&gt;sh&lt;/code&gt; 调用Bash ，则它会尝试尽可能接近于 &lt;code&gt;sh&lt;/code&gt; 的历史版本的启动行为，同时还要符合&lt;small&gt;POSIX&lt;/small&gt;标准。</target>
        </trans-unit>
        <trans-unit id="4034db360dd2a212318b0ef15c222ef04c163a2d" translate="yes" xml:space="preserve">
          <source>If Bash is started with the effective user (group) id not equal to the real user (group) id, and the</source>
          <target state="translated">如果Bash启动时,有效用户(组)id不等于真实用户(组)id,且该用户(组)的</target>
        </trans-unit>
        <trans-unit id="a52a0b0164cda121640f100e1a9a4b00b09185f7" translate="yes" xml:space="preserve">
          <source>If Bash is started with the name &lt;code&gt;rbash&lt;/code&gt;, or the</source>
          <target state="translated">如果Bash以名称 &lt;code&gt;rbash&lt;/code&gt; 开头，或者</target>
        </trans-unit>
        <trans-unit id="1fecb100bbeb2bb3fb9d1c798316637deea64496" translate="yes" xml:space="preserve">
          <source>If Bash is waiting for a command to complete and receives a signal for which a trap has been set, the trap will not be executed until the command completes. When Bash is waiting for an asynchronous command via the &lt;code&gt;wait&lt;/code&gt; builtin, the reception of a signal for which a trap has been set will cause the &lt;code&gt;wait&lt;/code&gt; builtin to return immediately with an exit status greater than 128, immediately after which the trap is executed.</source>
          <target state="translated">如果Bash正在等待命令完成并接收到已设置陷阱的信号，则在命令完成之前将不执行陷阱。当Bash通过 &lt;code&gt;wait&lt;/code&gt; 内置函数等待异步命令时，接收到已设置陷阱的信号将导致 &lt;code&gt;wait&lt;/code&gt; 内置函数立即返回，退出状态大于128，然后立即执行陷阱。</target>
        </trans-unit>
        <trans-unit id="a9ec556c59d8876506edf997447cbccad318b196" translate="yes" xml:space="preserve">
          <source>If Readline is being used to read the line, &lt;var&gt;text&lt;/var&gt; is placed into the editing buffer before editing begins.</source>
          <target state="translated">如果使用Readline读取行，则在开始编辑之前将 &lt;var&gt;text&lt;/var&gt; 放入编辑缓冲区。</target>
        </trans-unit>
        <trans-unit id="0e69b39329c4f6a621c33584cac4a7b869fc8c9d" translate="yes" xml:space="preserve">
          <source>If a &lt;small&gt;POSIX&lt;/small&gt; special builtin returns an error status, a non-interactive shell exits. The fatal errors are those listed in the &lt;small&gt;POSIX&lt;/small&gt; standard, and include things like passing incorrect options, redirection errors, variable assignment errors for assignments preceding the command name, and so on.</source>
          <target state="translated">如果&lt;small&gt;POSIX&lt;/small&gt;特殊内置&lt;small&gt;函数&lt;/small&gt;返回错误状态，则退出非交互式Shell。致命错误是&lt;small&gt;POSIX&lt;/small&gt;标准中列出的那些错误，包括传递错误的选项，重定向错误，命令名之前的分配的变量分配错误等。</target>
        </trans-unit>
        <trans-unit id="e3ba69366443b13bc27278a5adef19aba884e64f" translate="yes" xml:space="preserve">
          <source>If a &lt;var&gt;sigspec&lt;/var&gt; is &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;EXIT&lt;/code&gt;, &lt;var&gt;arg&lt;/var&gt; is executed when the shell exits. If a &lt;var&gt;sigspec&lt;/var&gt; is &lt;code&gt;DEBUG&lt;/code&gt;, the command &lt;var&gt;arg&lt;/var&gt; is executed before every simple command, &lt;code&gt;for&lt;/code&gt; command, &lt;code&gt;case&lt;/code&gt; command, &lt;code&gt;select&lt;/code&gt; command, every arithmetic &lt;code&gt;for&lt;/code&gt; command, and before the first command executes in a shell function. Refer to the description of the &lt;code&gt;extdebug&lt;/code&gt; option to the &lt;code&gt;shopt&lt;/code&gt; builtin (see &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;) for details of its effect on the &lt;code&gt;DEBUG&lt;/code&gt; trap. If a &lt;var&gt;sigspec&lt;/var&gt; is &lt;code&gt;RETURN&lt;/code&gt;, the command &lt;var&gt;arg&lt;/var&gt; is executed each time a shell function or a script executed with the &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;source&lt;/code&gt; builtins finishes executing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13365b36d17aebf61f97d0c028c3adb38488bbd3" translate="yes" xml:space="preserve">
          <source>If a &lt;var&gt;sigspec&lt;/var&gt; is &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;EXIT&lt;/code&gt;, &lt;var&gt;arg&lt;/var&gt; is executed when the shell exits. If a &lt;var&gt;sigspec&lt;/var&gt; is &lt;code&gt;DEBUG&lt;/code&gt;, the command &lt;var&gt;arg&lt;/var&gt; is executed before every simple command, &lt;code&gt;for&lt;/code&gt; command, &lt;code&gt;case&lt;/code&gt; command, &lt;code&gt;select&lt;/code&gt; command, every arithmetic &lt;code&gt;for&lt;/code&gt; command, and before the first command executes in a shell function. Refer to the description of the &lt;code&gt;extdebug&lt;/code&gt; option to the &lt;code&gt;shopt&lt;/code&gt; builtin (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;) for details of its effect on the &lt;code&gt;DEBUG&lt;/code&gt; trap. If a &lt;var&gt;sigspec&lt;/var&gt; is &lt;code&gt;RETURN&lt;/code&gt;, the command &lt;var&gt;arg&lt;/var&gt; is executed each time a shell function or a script executed with the &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;source&lt;/code&gt; builtins finishes executing.</source>
          <target state="translated">如果 &lt;var&gt;sigspec&lt;/var&gt; 为 &lt;code&gt;0&lt;/code&gt; 或 &lt;code&gt;EXIT&lt;/code&gt; ，则在退出shell时执行 &lt;var&gt;arg&lt;/var&gt; 。如果 &lt;var&gt;sigspec&lt;/var&gt; 是 &lt;code&gt;DEBUG&lt;/code&gt; ，命令 &lt;var&gt;arg&lt;/var&gt; 每简单的命令之前被执行， &lt;code&gt;for&lt;/code&gt; 命令， &lt;code&gt;case&lt;/code&gt; 命令， &lt;code&gt;select&lt;/code&gt; 命令，每个运算 &lt;code&gt;for&lt;/code&gt; 命令，并在壳功能的第一命令执行之前。有关其对 &lt;code&gt;DEBUG&lt;/code&gt; 陷阱的影响的详细信息，请参考 &lt;code&gt;shopt&lt;/code&gt; 内置的 &lt;code&gt;extdebug&lt;/code&gt; 选项的描述（请参阅&lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;Shopt内置&lt;/a&gt;）。如果 &lt;var&gt;sigspec&lt;/var&gt; 是 &lt;code&gt;RETURN&lt;/code&gt; ，每次使用shell函数或脚本执行时，都会执行命令 &lt;var&gt;arg&lt;/var&gt; &lt;code&gt;.&lt;/code&gt; 或 &lt;code&gt;source&lt;/code&gt; 内置命令执行完毕。</target>
        </trans-unit>
        <trans-unit id="a72fe8140766e82198128f65ccc06b5a29e8da81" translate="yes" xml:space="preserve">
          <source>If a &lt;var&gt;sigspec&lt;/var&gt; is &lt;code&gt;ERR&lt;/code&gt;, the command &lt;var&gt;arg&lt;/var&gt; is executed whenever a pipeline (which may consist of a single simple command), a list, or a compound command returns a non-zero exit status, subject to the following conditions. The &lt;code&gt;ERR&lt;/code&gt; trap is not executed if the failed command is part of the command list immediately following an &lt;code&gt;until&lt;/code&gt; or &lt;code&gt;while&lt;/code&gt; keyword, part of the test following the &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;elif&lt;/code&gt; reserved words, part of a command executed in a &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; or &lt;code&gt;||&lt;/code&gt; list except the command following the final &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; or &lt;code&gt;||&lt;/code&gt;, any command in a pipeline but the last, or if the command&amp;rsquo;s return status is being inverted using &lt;code&gt;!&lt;/code&gt;. These are the same conditions obeyed by the &lt;code&gt;errexit&lt;/code&gt; (</source>
          <target state="translated">如果 &lt;var&gt;sigspec&lt;/var&gt; 是 &lt;code&gt;ERR&lt;/code&gt; ，则在满足以下条件的情况下，只要管道（可能由单个简单命令组成），列表或复合命令返回非零退出状态，就会执行命令 &lt;var&gt;arg&lt;/var&gt; 。的 &lt;code&gt;ERR&lt;/code&gt; 如果失败的命令是立即以下内容的命令列表的一部分，不执行陷阱 &lt;code&gt;until&lt;/code&gt; 或 &lt;code&gt;while&lt;/code&gt; 关键字，继该测试的一部分 &lt;code&gt;if&lt;/code&gt; 或 &lt;code&gt;elif&lt;/code&gt; 的保留字，在执行的命令的一部分 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 或 &lt;code&gt;||&lt;/code&gt; 列表，最后一个 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 或 &lt;code&gt;||&lt;/code&gt; 之后的命令除外，管道中除最后一条命令之外的任何命令，或者使用 &lt;code&gt;!&lt;/code&gt; 反转命令的返回状态。。这些是 &lt;code&gt;errexit&lt;/code&gt; 遵守的相同条件（</target>
        </trans-unit>
        <trans-unit id="4a8dddd2aa79e75a82a4e62f0a3930238f5783e2" translate="yes" xml:space="preserve">
          <source>If a command fails because of an error during expansion or redirection, the exit status is greater than zero.</source>
          <target state="translated">如果在扩展或重定向过程中因错误导致命令失败,则退出状态大于零。</target>
        </trans-unit>
        <trans-unit id="9f4ebd9a4cebd1e4c2f77f7612e7b5154da1de76" translate="yes" xml:space="preserve">
          <source>If a command generates output, you may want to preserve the input order in the output. For instance, the following command</source>
          <target state="translated">如果一个命令产生了输出,你可能希望在输出中保留输入顺序。例如,以下命令</target>
        </trans-unit>
        <trans-unit id="eac3ba182de487d22ed5cf529f45a62b5c753cbb" translate="yes" xml:space="preserve">
          <source>If a command is followed by a &amp;lsquo;</source>
          <target state="translated">如果命令后跟一个'</target>
        </trans-unit>
        <trans-unit id="262b44d58aab9d1ead94c6414c6bba9ae14a8b6a" translate="yes" xml:space="preserve">
          <source>If a command is hashed,</source>
          <target state="translated">如果一个命令被哈希。</target>
        </trans-unit>
        <trans-unit id="5e000e30b972d57a747a863f4ae2f50daa0da4ba" translate="yes" xml:space="preserve">
          <source>If a command is not found, the child process created to execute it returns a status of 127. If a command is found but is not executable, the return status is 126.</source>
          <target state="translated">如果没有找到命令,为执行该命令而创建的子进程返回状态为127。如果找到了命令,但不能执行,则返回状态为126。</target>
        </trans-unit>
        <trans-unit id="82ab2070fc48319330344cadfaf540dd91f6c571" translate="yes" xml:space="preserve">
          <source>If a command is terminated by the control operator &amp;lsquo;</source>
          <target state="translated">如果命令被控制操作员终止，</target>
        </trans-unit>
        <trans-unit id="abc1263d6ce57073633b138e4552d86410edbb8c" translate="yes" xml:space="preserve">
          <source>If a compound command or shell function executes in a context where</source>
          <target state="translated">如果一个复合命令或shell函数在一个上下文中执行,其中</target>
        </trans-unit>
        <trans-unit id="4c34cd465ee158ec90a06383d802e934fcac69a2" translate="yes" xml:space="preserve">
          <source>If a non-empty directory name from &lt;code&gt;CDPATH&lt;/code&gt; is used, or if &amp;lsquo;</source>
          <target state="translated">如果使用了 &lt;code&gt;CDPATH&lt;/code&gt; 中的非空目录名称，或者&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="d4fe338c512b01adf0185ba49be309db4cd94526" translate="yes" xml:space="preserve">
          <source>If a required argument is not found, and &lt;code&gt;getopts&lt;/code&gt; is not silent, a question mark (&amp;lsquo;</source>
          <target state="translated">如果未找到必需的参数，并且 &lt;code&gt;getopts&lt;/code&gt; 不是静默的，则问号（'</target>
        </trans-unit>
        <trans-unit id="2ce89a3e8a43d0af6ec3140b4d3e09d38d3041ca" translate="yes" xml:space="preserve">
          <source>If a section in the Document is Entitled &amp;ldquo;Acknowledgements&amp;rdquo;, &amp;ldquo;Dedications&amp;rdquo;, or &amp;ldquo;History&amp;rdquo;, the requirement (section 4) to Preserve its Title (section 1) will typically require changing the actual title.</source>
          <target state="translated">如果文档中某节的标题为&amp;ldquo;致谢&amp;rdquo;，&amp;ldquo;奉献&amp;rdquo;或&amp;ldquo;历史记录&amp;rdquo;，则保留其标题（第1节）的要求（第4节）通常要求更改实际标题。</target>
        </trans-unit>
        <trans-unit id="3a47e743e6678fe4fda2687d0ace14febef67ba1" translate="yes" xml:space="preserve">
          <source>If a special builtin returns an error status, a non-interactive shell exits.</source>
          <target state="translated">如果一个特殊的内建函数返回错误状态,一个非交互式的shell就会退出。</target>
        </trans-unit>
        <trans-unit id="5e1e3a36072e44af8a5b8ef5e9afa6bf7bd6777e" translate="yes" xml:space="preserve">
          <source>If a word begins with an unquoted tilde character (&amp;lsquo;</source>
          <target state="translated">如果单词以无引号的波浪号字符开头（</target>
        </trans-unit>
        <trans-unit id="7e7265774f9acdadda1e04c0ab8c46e91b84878b" translate="yes" xml:space="preserve">
          <source>If a word designator is supplied without an event specification, the previous command is used as the event.</source>
          <target state="translated">如果提供的字代号没有事件规格,则使用前一条命令作为事件。</target>
        </trans-unit>
        <trans-unit id="2aab787a0f7f1f776629bc01c06b0121c928f5fa" translate="yes" xml:space="preserve">
          <source>If an attempt to exit Bash is made while jobs are stopped, (or running, if the &lt;code&gt;checkjobs&lt;/code&gt; option is enabled &amp;ndash; see &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;), the shell prints a warning message, and if the &lt;code&gt;checkjobs&lt;/code&gt; option is enabled, lists the jobs and their statuses. The &lt;code&gt;jobs&lt;/code&gt; command may then be used to inspect their status. If a second attempt to exit is made without an intervening command, Bash does not print another warning, and any stopped jobs are terminated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8510134af5d86088511088bf4e350d6444de7bbc" translate="yes" xml:space="preserve">
          <source>If an attempt to exit Bash is made while jobs are stopped, (or running, if the &lt;code&gt;checkjobs&lt;/code&gt; option is enabled &amp;ndash; see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;), the shell prints a warning message, and if the &lt;code&gt;checkjobs&lt;/code&gt; option is enabled, lists the jobs and their statuses. The &lt;code&gt;jobs&lt;/code&gt; command may then be used to inspect their status. If a second attempt to exit is made without an intervening command, Bash does not print another warning, and any stopped jobs are terminated.</source>
          <target state="translated">如果在作业停止（或正在运行，如果启用了 &lt;code&gt;checkjobs&lt;/code&gt; 选项&amp;ndash;请参见&lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;）时尝试退出Bash ，则外壳会显示警告消息，如果启用了 &lt;code&gt;checkjobs&lt;/code&gt; 选项，则会列出作业及其相关信息。状态。该 &lt;code&gt;jobs&lt;/code&gt; 命令可以被用来检查他们的状态。如果在没有中间命令的情况下再次尝试退出，则Bash不会打印其他警告，并且任何停止的作业都将终止。</target>
        </trans-unit>
        <trans-unit id="d3e729ae4620d7ec47b9fe00986079e01731c823" translate="yes" xml:space="preserve">
          <source>If an invalid option is seen, &lt;code&gt;getopts&lt;/code&gt; places &amp;lsquo;</source>
          <target state="translated">如果看到无效的选项，则 &lt;code&gt;getopts&lt;/code&gt; 放置'</target>
        </trans-unit>
        <trans-unit id="08a28d3d40efa7e859683962e041e759509d17ef" translate="yes" xml:space="preserve">
          <source>If arguments remain after option processing, and neither the</source>
          <target state="translated">如果参数在选项处理后仍然存在,并且无论是</target>
        </trans-unit>
        <trans-unit id="4a87230db9c1a3eef3f9a043437908477ad36a5a" translate="yes" xml:space="preserve">
          <source>If calling &lt;code&gt;stat&lt;/code&gt; on /dev/fd/&lt;var&gt;N&lt;/var&gt; returns different results than calling &lt;code&gt;fstat&lt;/code&gt; on file descriptor &lt;var&gt;N&lt;/var&gt;, supply this option to enable a workaround. This has implications for conditional commands that test file attributes.</source>
          <target state="translated">如果在/ dev / fd / &lt;var&gt;N&lt;/var&gt; 上调用 &lt;code&gt;stat&lt;/code&gt; 返回的结果与在文件描述符 &lt;var&gt;N&lt;/var&gt; 上调用 &lt;code&gt;fstat&lt;/code&gt; 的返回结果不同，请提供此选项以启用解决方法。这对测试文件属性的条件命令有影响。</target>
        </trans-unit>
        <trans-unit id="09110ceb312edde4d747bc8c112a4b117106a1ca" translate="yes" xml:space="preserve">
          <source>If either</source>
          <target state="translated">如果其中一个</target>
        </trans-unit>
        <trans-unit id="b44eedd7e90480e54638ad99bec6e704d7f97b27" translate="yes" xml:space="preserve">
          <source>If either the</source>
          <target state="translated">如果有以下两种情况:</target>
        </trans-unit>
        <trans-unit id="2067a4e264c6515ec15b4710146ae8692a3581c1" translate="yes" xml:space="preserve">
          <source>If enabled, and the &lt;code&gt;cmdhist&lt;/code&gt; option is enabled, multi-line commands are saved to the history with embedded newlines rather than using semicolon separators where possible.</source>
          <target state="translated">如果启用，并且启用了 &lt;code&gt;cmdhist&lt;/code&gt; 选项，则多行命令将使用嵌入式换行符保存到历史记录中，而不是在可能的情况下使用分号分隔符。</target>
        </trans-unit>
        <trans-unit id="824c50ce709b24ee6904d9f0c2d15a2975891952" translate="yes" xml:space="preserve">
          <source>If multiple options are supplied, the</source>
          <target state="translated">如果提供了多个选项,则</target>
        </trans-unit>
        <trans-unit id="cffc9e510bf99ddcc14fa6462a8be5a614fd8858" translate="yes" xml:space="preserve">
          <source>If no &lt;var&gt;name&lt;/var&gt;s are supplied, the line read, without the ending delimiter but otherwise unmodified, is assigned to the variable &lt;code&gt;REPLY&lt;/code&gt;. The exit status is zero, unless end-of-file is encountered, &lt;code&gt;read&lt;/code&gt; times out (in which case the status is greater than 128), a variable assignment error (such as assigning to a readonly variable) occurs, or an invalid file descriptor is supplied as the argument to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5583b1e4cd263dafe517d60e590401e8055a96" translate="yes" xml:space="preserve">
          <source>If no arguments follow this option, then the positional parameters are unset. Otherwise, the positional parameters are set to the &lt;var&gt;arguments&lt;/var&gt;, even if some of them begin with a &amp;lsquo;</source>
          <target state="translated">如果没有参数跟随此选项，则未设置位置参数。否则，位置参数设置为 &lt;var&gt;arguments&lt;/var&gt; ，即使他们中的一些开始了&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="da010fc212bc172ad7f55d1d9211e10715be88e0" translate="yes" xml:space="preserve">
          <source>If no command name results, redirections are performed, but do not affect the current shell environment. A redirection error causes the command to exit with a non-zero status.</source>
          <target state="translated">如果没有命令名的结果,则执行重定向,但不影响当前的shell环境。重定向错误会导致命令以非零状态退出。</target>
        </trans-unit>
        <trans-unit id="3a3ff111f4e50defc3c963326ab30b3eb23f0e5c" translate="yes" xml:space="preserve">
          <source>If no command name results, the variable assignments affect the current shell environment. Otherwise, the variables are added to the environment of the executed command and do not affect the current shell environment. If any of the assignments attempts to assign a value to a readonly variable, an error occurs, and the command exits with a non-zero status.</source>
          <target state="translated">如果没有命令名的结果,变量分配会影响当前的shell环境。否则,变量将被添加到已执行命令的环境中,不影响当前的shell环境。如果任何一个赋值试图给一个只读变量赋值,就会发生错误,命令以非零状态退出。</target>
        </trans-unit>
        <trans-unit id="bbc609cffce471fc61c562933b7ac61039051f86" translate="yes" xml:space="preserve">
          <source>If no options or arguments are supplied, &lt;code&gt;set&lt;/code&gt; displays the names and values of all shell variables and functions, sorted according to the current locale, in a format that may be reused as input for setting or resetting the currently-set variables. Read-only variables cannot be reset. In &lt;small&gt;POSIX&lt;/small&gt; mode, only shell variables are listed.</source>
          <target state="translated">如果未提供任何选项或参数，则 &lt;code&gt;set&lt;/code&gt; 会以可重新用作设置或重置当前设置的变量的输入的格式显示根据当前语言环境排序的所有shell变量和函数的名称和值。只读变量无法重置。在&lt;small&gt;POSIX&lt;/small&gt;模式下，仅列出shell变量。</target>
        </trans-unit>
        <trans-unit id="383ca8993ad81f9d1fdd804ab740bc0fd9b03292" translate="yes" xml:space="preserve">
          <source>If not supplied with an explicit origin, &lt;code&gt;mapfile&lt;/code&gt; will clear &lt;var&gt;array&lt;/var&gt; before assigning to it.</source>
          <target state="translated">如果未提供显式来源，则 &lt;code&gt;mapfile&lt;/code&gt; 将在分配 &lt;var&gt;array&lt;/var&gt; 之前清除数组。</target>
        </trans-unit>
        <trans-unit id="2f1907c8652486dcdb0aef31f1cba67addf23ad3" translate="yes" xml:space="preserve">
          <source>If set at shell invocation, or in a shell startup file, arrange to execute the debugger profile before the shell starts, identical to the</source>
          <target state="translated">如果在调用shell时设置,或在shell启动文件中设置,安排在shell启动前执行调试器配置文件,与</target>
        </trans-unit>
        <trans-unit id="f88d67aae9fbbcc5e6bf0dc40d8e5dbe106478a0" translate="yes" xml:space="preserve">
          <source>If set to &amp;lsquo;</source>
          <target state="translated">如果设置为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="07f43bd2fe423248dcd99966539118b9b058ccc2" translate="yes" xml:space="preserve">
          <source>If set to a number greater than zero, the value is used as the number of trailing directory components to retain when expanding the &lt;code&gt;\w&lt;/code&gt; and &lt;code&gt;\W&lt;/code&gt; prompt string escapes (see &lt;a href=&quot;controlling-the-prompt&quot;&gt;Controlling the Prompt&lt;/a&gt;). Characters removed are replaced with an ellipsis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51ed3e3c224e99ee28d845cfc30fd35c5f6b79a" translate="yes" xml:space="preserve">
          <source>If set to a number greater than zero, the value is used as the number of trailing directory components to retain when expanding the &lt;code&gt;\w&lt;/code&gt; and &lt;code&gt;\W&lt;/code&gt; prompt string escapes (see &lt;a href=&quot;controlling-the-prompt#Controlling-the-Prompt&quot;&gt;Controlling the Prompt&lt;/a&gt;). Characters removed are replaced with an ellipsis.</source>
          <target state="translated">如果设置为大于零的数字，则该值将用作扩展 &lt;code&gt;\w&lt;/code&gt; 和 &lt;code&gt;\W&lt;/code&gt; 提示字符串转义符时保留的尾随目录组件的数量（请参阅&lt;a href=&quot;controlling-the-prompt#Controlling-the-Prompt&quot;&gt;控制提示&lt;/a&gt;）。删除的字符将替换为省略号。</target>
        </trans-unit>
        <trans-unit id="5b68feee700a99b10103483f1241e248ed15abb0" translate="yes" xml:space="preserve">
          <source>If set to a numeric value greater than 0, defines a maximum function nesting level. Function invocations that exceed this nesting level will cause the current command to abort.</source>
          <target state="translated">如果设置为大于0的数值,则定义函数最大嵌套级别。超过这个嵌套级别的函数调用将导致当前命令中止。</target>
        </trans-unit>
        <trans-unit id="ce37bf0ec0dfcfd226d3a81bab0fbebf8b4e1a1e" translate="yes" xml:space="preserve">
          <source>If set to a value greater than zero, &lt;code&gt;TMOUT&lt;/code&gt; is treated as the default timeout for the &lt;code&gt;read&lt;/code&gt; builtin (see &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins&lt;/a&gt;). The &lt;code&gt;select&lt;/code&gt; command (see &lt;a href=&quot;conditional-constructs&quot;&gt;Conditional Constructs&lt;/a&gt;) terminates if input does not arrive after &lt;code&gt;TMOUT&lt;/code&gt; seconds when input is coming from a terminal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670809062dff56fe36807cfbddd56a579b60b277" translate="yes" xml:space="preserve">
          <source>If set to a value greater than zero, &lt;code&gt;TMOUT&lt;/code&gt; is treated as the default timeout for the &lt;code&gt;read&lt;/code&gt; builtin (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;). The &lt;code&gt;select&lt;/code&gt; command (see &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;Conditional Constructs&lt;/a&gt;) terminates if input does not arrive after &lt;code&gt;TMOUT&lt;/code&gt; seconds when input is coming from a terminal.</source>
          <target state="translated">如果将其设置为大于零的值，则 &lt;code&gt;TMOUT&lt;/code&gt; 将被视为内置 &lt;code&gt;read&lt;/code&gt; 的默认超时（请参见&lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash内置&lt;/a&gt;）。如果输入来自终端，则在 &lt;code&gt;TMOUT&lt;/code&gt; 秒后输入仍未到达时， &lt;code&gt;select&lt;/code&gt; 命令（请参阅&lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;条件构造&lt;/a&gt;）终止。</target>
        </trans-unit>
        <trans-unit id="61462ac11150a1700bd6dd7abcf2d1bfe805e210" translate="yes" xml:space="preserve">
          <source>If set to an integer corresponding to a valid file descriptor, Bash will write the trace output generated when &amp;lsquo;</source>
          <target state="translated">如果将其设置为与有效文件描述符相对应的整数，则Bash将写入以下情况下生成的跟踪输出：</target>
        </trans-unit>
        <trans-unit id="55e2801478004893e245bebe0ebd35f57ed0f814" translate="yes" xml:space="preserve">
          <source>If set to the value 1, Bash displays error messages generated by the &lt;code&gt;getopts&lt;/code&gt; builtin command.</source>
          <target state="translated">如果将其设置为值1，则Bash将显示由 &lt;code&gt;getopts&lt;/code&gt; 内置命令生成的错误消息。</target>
        </trans-unit>
        <trans-unit id="796d2c3ac2aaf92fa03e90984e01911ce8a12e62" translate="yes" xml:space="preserve">
          <source>If set, &lt;code&gt;$'&lt;var&gt;string&lt;/var&gt;'&lt;/code&gt; and &lt;code&gt;$&quot;&lt;var&gt;string&lt;/var&gt;&quot;&lt;/code&gt; quoting is performed within &lt;code&gt;${&lt;var&gt;parameter&lt;/var&gt;}&lt;/code&gt; expansions enclosed in double quotes. This option is enabled by default.</source>
          <target state="translated">如果设置，则在双引号内的 &lt;code&gt;${&lt;var&gt;parameter&lt;/var&gt;}&lt;/code&gt; &lt;var&gt;parameter&lt;/var&gt; }扩展内执行 &lt;code&gt;$'&lt;var&gt;string&lt;/var&gt;'&lt;/code&gt; 和 &lt;code&gt;$&quot;&lt;var&gt;string&lt;/var&gt;&quot;&lt;/code&gt; 引用。默认情况下启用此选项。</target>
        </trans-unit>
        <trans-unit id="3ba697a44bc6bec460de9aa0e93c98c6681c1a45" translate="yes" xml:space="preserve">
          <source>If set, Bash allows filename patterns which match no files to expand to a null string, rather than themselves.</source>
          <target state="translated">如果设置,Bash允许将不匹配文件的文件名模式扩展为空字符串,而不是自己。</target>
        </trans-unit>
        <trans-unit id="1c9c75e31bb9b681e286b348e9c25b106aefd45b" translate="yes" xml:space="preserve">
          <source>If set, Bash attempts spelling correction on directory names during word completion if the directory name initially supplied does not exist.</source>
          <target state="translated">如果设置,如果最初提供的目录名不存在,Bash会在单词完成过程中尝试对目录名进行拼写纠正。</target>
        </trans-unit>
        <trans-unit id="1e563050efd17700631662e35b80b13579009c1c" translate="yes" xml:space="preserve">
          <source>If set, Bash attempts to save all lines of a multiple-line command in the same history entry. This allows easy re-editing of multi-line commands. This option is enabled by default, but only has an effect if command history is enabled (see &lt;a href=&quot;bash-history-facilities&quot;&gt;Bash History Facilities&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea4e8e58398143c1e3fe450d9180b6a8cff442f" translate="yes" xml:space="preserve">
          <source>If set, Bash attempts to save all lines of a multiple-line command in the same history entry. This allows easy re-editing of multi-line commands. This option is enabled by default, but only has an effect if command history is enabled (see &lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash History Facilities&lt;/a&gt;).</source>
          <target state="translated">如果设置，则Bash尝试将多行命令的所有行保存在同一历史记录条目中。这样可以轻松地重新编辑多行命令。此选项默认情况下处于启用状态，但仅在启用命令历史记录后才有效（请参阅&lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash历史记录工具&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ce93cbcbf2bf13d7cbf432beb64352e0cd28ed8f" translate="yes" xml:space="preserve">
          <source>If set, Bash changes its behavior to that of version 3.1 with respect to quoted arguments to the conditional command&amp;rsquo;s &amp;lsquo;</source>
          <target state="translated">如果已设置，则Bash会根据条件命令的'</target>
        </trans-unit>
        <trans-unit id="83dba9325cbab8a67804115d4d3e4f4bb8140b01" translate="yes" xml:space="preserve">
          <source>If set, Bash changes its behavior to that of version 3.2 with respect to locale-specific string comparison when using the &lt;code&gt;[[&lt;/code&gt; conditional command&amp;rsquo;s &amp;lsquo;</source>
          <target state="translated">如果已设置，则在使用 &lt;code&gt;[[&lt;/code&gt; 条件命令的'</target>
        </trans-unit>
        <trans-unit id="40ce7df7a9e5ee28d00fb786efa9d3c2857f04bb" translate="yes" xml:space="preserve">
          <source>If set, Bash changes its behavior to that of version 4.0 with respect to locale-specific string comparison when using the &lt;code&gt;[[&lt;/code&gt; conditional command&amp;rsquo;s &amp;lsquo;</source>
          <target state="translated">如果已设置，则在使用 &lt;code&gt;[[&lt;/code&gt; 条件命令的'</target>
        </trans-unit>
        <trans-unit id="dedf38582c3016bc9b5bdedd3a37498ef42f9ef1" translate="yes" xml:space="preserve">
          <source>If set, Bash checks the window size after each external (non-builtin) command and, if necessary, updates the values of &lt;code&gt;LINES&lt;/code&gt; and &lt;code&gt;COLUMNS&lt;/code&gt;. This option is enabled by default.</source>
          <target state="translated">如果设置，Bash将在每个外部（非内置）命令之后检查窗口大小，并在必要时更新 &lt;code&gt;LINES&lt;/code&gt; 和 &lt;code&gt;COLUMNS&lt;/code&gt; 的值。默认情况下启用此选项。</target>
        </trans-unit>
        <trans-unit id="f5e42f2a09e7e82fc731ab4023374133df9ec15c" translate="yes" xml:space="preserve">
          <source>If set, Bash does not print a warning message if an attempt is made to use a quoted compound array assignment as an argument to &lt;code&gt;declare&lt;/code&gt;, makes word expansion errors non-fatal errors that cause the current command to fail (the default behavior is to make them fatal errors that cause the shell to exit), and does not reset the loop state when a shell function is executed (this allows &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; in a shell function to affect loops in the caller&amp;rsquo;s context).</source>
          <target state="translated">如果设置，则尝试使用带引号的复合数组赋值作为 &lt;code&gt;declare&lt;/code&gt; 的参数时，Bash不会打印警告消息，使单词扩展错误为非致命错误，导致当前命令失败（默认行为是它们是导致shell退出的致命错误），并且在执行shell函数时不会重置循环状态（这允许shell函数中的 &lt;code&gt;break&lt;/code&gt; 或 &lt;code&gt;continue&lt;/code&gt; 影响调用者上下文中的循环）。</target>
        </trans-unit>
        <trans-unit id="ea1d8d33934bc994a558d7250e4c61adae031df0" translate="yes" xml:space="preserve">
          <source>If set, Bash does not process the replacement string in the pattern substitution word expansion using quote removal.</source>
          <target state="translated">如果设置,则Bash不使用引号去除处理模式替换词扩展中的替换字符串。</target>
        </trans-unit>
        <trans-unit id="4ce2629bcc9863de7662b108ac2c7e18c15136ce" translate="yes" xml:space="preserve">
          <source>If set, Bash includes filenames beginning with a &amp;lsquo;.&amp;rsquo; in the results of filename expansion. The filenames &amp;lsquo;</source>
          <target state="translated">如果设置，则Bash包含以&amp;ldquo;。&amp;rdquo;开头的文件名。文件名扩展的结果。文件名&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="d612c78429de9b19f47308e42ce0b6e5dee55ccc" translate="yes" xml:space="preserve">
          <source>If set, Bash lists the status of any stopped and running jobs before exiting an interactive shell. If any jobs are running, this causes the exit to be deferred until a second exit is attempted without an intervening command (see &lt;a href=&quot;job-control&quot;&gt;Job Control&lt;/a&gt;). The shell always postpones exiting if any jobs are stopped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="151ad7e893455a1a3a11b2e7117190370182fff0" translate="yes" xml:space="preserve">
          <source>If set, Bash lists the status of any stopped and running jobs before exiting an interactive shell. If any jobs are running, this causes the exit to be deferred until a second exit is attempted without an intervening command (see &lt;a href=&quot;job-control#Job-Control&quot;&gt;Job Control&lt;/a&gt;). The shell always postpones exiting if any jobs are stopped.</source>
          <target state="translated">如果设置，Bash会在退出交互式外壳程序之前列出所有已停止和正在运行的作业的状态。如果有任何作业在运行，这将导致退出被推迟到尝试第二次退出而没有中间命令时（请参见&lt;a href=&quot;job-control#Job-Control&quot;&gt;Job Control&lt;/a&gt;）。如果停止任何作业，shell总是会推迟退出。</target>
        </trans-unit>
        <trans-unit id="2538c67c1bddf594e51e1cc292c098d52219f727" translate="yes" xml:space="preserve">
          <source>If set, Bash matches filenames in a case-insensitive fashion when performing filename expansion.</source>
          <target state="translated">如果设置,Bash在执行文件名扩展时,会以不区分大小写的方式匹配文件名。</target>
        </trans-unit>
        <trans-unit id="2fb6f87344f0c630d7cdd094c16b6c4eae76b199" translate="yes" xml:space="preserve">
          <source>If set, Bash matches patterns in a case-insensitive fashion when performing matching while executing &lt;code&gt;case&lt;/code&gt; or &lt;code&gt;[[&lt;/code&gt; conditional commands, when performing pattern substitution word expansions, or when filtering possible completions as part of programmable completion.</source>
          <target state="translated">如果设置，则Bash在执行 &lt;code&gt;case&lt;/code&gt; 或 &lt;code&gt;[[&lt;/code&gt; 条件命令] 时执行匹配时，在执行模式替换字扩展时或在将可能的完成作为可编程完成的一部分进行过滤时，以不区分大小写的方式匹配模式。</target>
        </trans-unit>
        <trans-unit id="fa526e67dfbf3b2eaf6c5be01047df0255da3a3a" translate="yes" xml:space="preserve">
          <source>If set, Bash quotes all shell metacharacters in filenames and directory names when performing completion. If not set, Bash removes metacharacters such as the dollar sign from the set of characters that will be quoted in completed filenames when these metacharacters appear in shell variable references in words to be completed. This means that dollar signs in variable names that expand to directories will not be quoted; however, any dollar signs appearing in filenames will not be quoted, either. This is active only when bash is using backslashes to quote completed filenames. This variable is set by default, which is the default Bash behavior in versions through 4.2.</source>
          <target state="translated">如果设置,Bash在执行完成时,会在文件名和目录名中引用所有shell元字符。如果不设置,当这些元字符出现在要完成的话中的shell变量引用中时,Bash会从完成文件名中引用的字符集中删除美元符号等元字符。这意味着,扩展到目录的变量名中的美元符号将不会被引用;但是,出现在文件名中的任何美元符号也不会被引用。只有当bash使用反斜杠来引用已完成的文件名时,这个变量才会被激活。这个变量是默认设置的,这也是4.2之前的版本中Bash的默认行为。</target>
        </trans-unit>
        <trans-unit id="13f771755d078034a764360a2fa22176df155f9f" translate="yes" xml:space="preserve">
          <source>If set, Bash replaces directory names with the results of word expansion when performing filename completion. This changes the contents of the readline editing buffer. If not set, Bash attempts to preserve what the user typed.</source>
          <target state="translated">如果设置,Bash在执行文件名完成时,会用字扩展的结果替换目录名。这将改变读行编辑缓冲区的内容。如果不设置,Bash会尝试保留用户输入的内容。</target>
        </trans-unit>
        <trans-unit id="23989e8210862fdc11296dd107bf3007f01cdb8b" translate="yes" xml:space="preserve">
          <source>If set, Bash saves the positional parameters to BASH_ARGV and BASH_ARGC before they are used, regardless of whether or not extended debugging mode is enabled.</source>
          <target state="translated">如果设置,Bash会在使用位置参数之前将其保存到BASH_ARGV和BASH_ARGC中,无论是否启用扩展调试模式。</target>
        </trans-unit>
        <trans-unit id="5bb7d5096b9817b0ce116f65ab9f347af5231bfe" translate="yes" xml:space="preserve">
          <source>If set, Bash uses its value as the name of a directory in which Bash creates temporary files for the shell&amp;rsquo;s use.</source>
          <target state="translated">如果已设置，则Bash会将其值用作目录的名称，Bash在其中创建供Shell使用的临时文件。</target>
        </trans-unit>
        <trans-unit id="613513969c649c8079a505263ad3904b9daa1c25" translate="yes" xml:space="preserve">
          <source>If set, Bash will send &lt;code&gt;SIGHUP&lt;/code&gt; to all jobs when an interactive login shell exits (see &lt;a href=&quot;signals&quot;&gt;Signals&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9944b303cdb5e5ece86f98632299216c14c3e0f4" translate="yes" xml:space="preserve">
          <source>If set, Bash will send &lt;code&gt;SIGHUP&lt;/code&gt; to all jobs when an interactive login shell exits (see &lt;a href=&quot;signals#Signals&quot;&gt;Signals&lt;/a&gt;).</source>
          <target state="translated">如果设置，则Bash将在交互式登录外壳退出时将 &lt;code&gt;SIGHUP&lt;/code&gt; 发送给所有作业（请参阅&lt;a href=&quot;signals#Signals&quot;&gt;Signals&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b01c605d4295e6f33c90d7585617060e8ea103f5" translate="yes" xml:space="preserve">
          <source>If set, Bash, when in &lt;small&gt;POSIX&lt;/small&gt; mode, treats a single quote in a double-quoted parameter expansion as a special character. The single quotes must match (an even number) and the characters between the single quotes are considered quoted. This is the behavior of &lt;small&gt;POSIX&lt;/small&gt; mode through version 4.1. The default Bash behavior remains as in previous versions.</source>
          <target state="translated">如果设置为Bash，则在&lt;small&gt;POSIX&lt;/small&gt;模式下，Bash 会将双引号参数扩展中的单引号视为特殊字符。单引号必须匹配（偶数），并且单引号之间的字符被视为带引号。这是4.1版中&lt;small&gt;POSIX&lt;/small&gt;模式的行为。默认的Bash行为保持与以前的版本相同。</target>
        </trans-unit>
        <trans-unit id="524dcc79e18562f7fc6d766d279f01ed2606c0e2" translate="yes" xml:space="preserve">
          <source>If set, a command name that is the name of a directory is executed as if it were the argument to the &lt;code&gt;cd&lt;/code&gt; command. This option is only used by interactive shells.</source>
          <target state="translated">如果已设置，则将执行作为目录名称的命令名称，就好像它是 &lt;code&gt;cd&lt;/code&gt; 命令的参数一样。此选项仅由交互式外壳程序使用。</target>
        </trans-unit>
        <trans-unit id="e6377d46ada5872cdb56bb8c1b74b969fcd15af4" translate="yes" xml:space="preserve">
          <source>If set, aliases are expanded as described below under Aliases, &lt;a href=&quot;aliases&quot;&gt;Aliases&lt;/a&gt;. This option is enabled by default for interactive shells.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9349e599bc48288e2bc0cf7ae88af2367fbcfd96" translate="yes" xml:space="preserve">
          <source>If set, aliases are expanded as described below under Aliases, &lt;a href=&quot;aliases#Aliases&quot;&gt;Aliases&lt;/a&gt;. This option is enabled by default for interactive shells.</source>
          <target state="translated">如果置位，如下面别名，下描述别名扩展&lt;a href=&quot;aliases#Aliases&quot;&gt;别名&lt;/a&gt;。默认情况下，此选项对于交互式Shell启用。</target>
        </trans-unit>
        <trans-unit id="01996a22c68871b270e9aa28572029220ba9f012" translate="yes" xml:space="preserve">
          <source>If set, and Readline is being used, Bash will attempt to perform hostname completion when a word containing a &amp;lsquo;</source>
          <target state="translated">如果已设置，并且正在使用Readline，则当Bash单词中包含&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="7ea1e84fbbe570614555a80076b0ddaa4ce41c06" translate="yes" xml:space="preserve">
          <source>If set, and Readline is being used, Bash will not attempt to search the &lt;code&gt;PATH&lt;/code&gt; for possible completions when completion is attempted on an empty line.</source>
          <target state="translated">如果已设置并且正在使用Readline，则在空行中尝试完成时，Bash不会尝试在 &lt;code&gt;PATH&lt;/code&gt; 中搜索可能的完成。</target>
        </trans-unit>
        <trans-unit id="97eb2bb66597befe93514836295c1094a25f0b91" translate="yes" xml:space="preserve">
          <source>If set, and Readline is being used, a user is given the opportunity to re-edit a failed history substitution.</source>
          <target state="translated">如果设置了,并且正在使用Readline,用户将有机会重新编辑一个失败的历史替换。</target>
        </trans-unit>
        <trans-unit id="9caef08bbd1665feb673ec3dcbb2b43d20573472" translate="yes" xml:space="preserve">
          <source>If set, and Readline is being used, the results of history substitution are not immediately passed to the shell parser. Instead, the resulting line is loaded into the Readline editing buffer, allowing further modification.</source>
          <target state="translated">如果设置了,并且使用了Readline,历史替换的结果不会立即传递给shell解析器。相反,生成的行被加载到Readline编辑缓冲区,允许进一步修改。</target>
        </trans-unit>
        <trans-unit id="0430e5ba6c6756b1d6bb8b315c37057061725213" translate="yes" xml:space="preserve">
          <source>If set, and a file that Bash is checking for mail has been accessed since the last time it was checked, the message &lt;code&gt;&quot;The mail in &lt;var&gt;mailfile&lt;/var&gt; has been read&quot;&lt;/code&gt; is displayed.</source>
          <target state="translated">如果已设置，并且自从上次检查以来，Bash正在检查邮件的文件已被访问，则会显示消息 &lt;code&gt;&quot;The mail in &lt;var&gt;mailfile&lt;/var&gt; has been read&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6359e84564f30cc604b526da5a0776f958c16285" translate="yes" xml:space="preserve">
          <source>If set, and job control is not active, the shell runs the last command of a pipeline not executed in the background in the current shell environment.</source>
          <target state="translated">如果设置了,并且作业控制没有激活,那么在当前shell环境下,shell会运行后台没有执行的流水线的最后一条命令。</target>
        </trans-unit>
        <trans-unit id="bceb55bbf9b565581f0c0cd00f48ba9e9be82b89" translate="yes" xml:space="preserve">
          <source>If set, and programmable completion is enabled, Bash treats a command name that doesn&amp;rsquo;t have any completions as a possible alias and attempts alias expansion. If it has an alias, Bash attempts programmable completion using the command word resulting from the expanded alias.</source>
          <target state="translated">如果设置了该选项，并且启用了可编程补全功能，则Bash会将没有任何补全的命令名称视为可能的别名，并尝试扩展别名。如果它具有别名，则Bash尝试使用由扩展别名产生的命令字来完成编程。</target>
        </trans-unit>
        <trans-unit id="1ece77937e574f2030045d06aa2e5131a108b370" translate="yes" xml:space="preserve">
          <source>If set, any trap on &lt;code&gt;DEBUG&lt;/code&gt; and &lt;code&gt;RETURN&lt;/code&gt; are inherited by shell functions, command substitutions, and commands executed in a subshell environment. The &lt;code&gt;DEBUG&lt;/code&gt; and &lt;code&gt;RETURN&lt;/code&gt; traps are normally not inherited in such cases.</source>
          <target state="translated">如果设置，则 &lt;code&gt;DEBUG&lt;/code&gt; 和 &lt;code&gt;RETURN&lt;/code&gt; 上的任何陷阱均由Shell函数，命令替换以及在子Shell环境中执行的命令继承。在 &lt;code&gt;DEBUG&lt;/code&gt; 和 &lt;code&gt;RETURN&lt;/code&gt; 陷阱通常不会在这种情况下继承。</target>
        </trans-unit>
        <trans-unit id="de069878dada4d702b6a71bd07d34a6994d2e6e4" translate="yes" xml:space="preserve">
          <source>If set, any trap on &lt;code&gt;ERR&lt;/code&gt; is inherited by shell functions, command substitutions, and commands executed in a subshell environment. The &lt;code&gt;ERR&lt;/code&gt; trap is normally not inherited in such cases.</source>
          <target state="translated">如果设置，则 &lt;code&gt;ERR&lt;/code&gt; 函数上的任何陷阱都将被Shell函数，命令替换以及在子Shell环境中执行的命令继承。的 &lt;code&gt;ERR&lt;/code&gt; 陷阱通常不在这种情况下继承。</target>
        </trans-unit>
        <trans-unit id="8b36606b48de4cdd3638d27e0de266cb6333319b" translate="yes" xml:space="preserve">
          <source>If set, calling &lt;code&gt;unset&lt;/code&gt; on local variables in previous function scopes marks them so subsequent lookups find them unset until that function returns. This is identical to the behavior of unsetting local variables at the current function scope.</source>
          <target state="translated">如果已设置，则在以前的函数作用域中对局部变量调用 &lt;code&gt;unset&lt;/code&gt; 会对其进行标记，以便后续查找会发现它们未设置，直到该函数返回。这与在当前函数作用域中取消设置局部变量的行为相同。</target>
        </trans-unit>
        <trans-unit id="fbd5e98b4ada631ae8afc0b3ace1cea1bc1fb5b6" translate="yes" xml:space="preserve">
          <source>If set, command substitution inherits the value of the &lt;code&gt;errexit&lt;/code&gt; option, instead of unsetting it in the subshell environment. This option is enabled when &lt;small&gt;POSIX&lt;/small&gt; mode is enabled.</source>
          <target state="translated">如果设置，命令替换将继承 &lt;code&gt;errexit&lt;/code&gt; 选项的值，而不是在子shell环境中取消设置。当启用&lt;small&gt;POSIX&lt;/small&gt;模式时，启用此选项。</target>
        </trans-unit>
        <trans-unit id="e3b8b47e3cef60b23b50d3ae86ab70fe0a37f010" translate="yes" xml:space="preserve">
          <source>If set, do not resolve symbolic links when performing commands such as &lt;code&gt;cd&lt;/code&gt; which change the current directory. The physical directory is used instead. By default, Bash follows the logical chain of directories when performing commands which change the current directory.</source>
          <target state="translated">如果已设置，则在执行更改当前目录的命令（例如 &lt;code&gt;cd&lt;/code&gt; )时不要解析符号链接。而是使用物理目录。默认情况下，当执行更改当前目录的命令时，Bash遵循目录的逻辑链。</target>
        </trans-unit>
        <trans-unit id="9f88675f12cacf08b380a7cf5af85cdd408a6411" translate="yes" xml:space="preserve">
          <source>If set, local variables inherit the value and attributes of a variable of the same name that exists at a previous scope before any new value is assigned. The &lt;var&gt;nameref&lt;/var&gt; attribute is not inherited.</source>
          <target state="translated">如果设置，则局部变量将继承在分配任何新值之前在先前作用域中存在的同名变量的值和属性。该 &lt;var&gt;nameref&lt;/var&gt; 属性不被继承。</target>
        </trans-unit>
        <trans-unit id="c15922052fb6e6f230ba76c62507ba296628a0d0" translate="yes" xml:space="preserve">
          <source>If set, minor errors in the spelling of a directory component in a &lt;code&gt;cd&lt;/code&gt; command will be corrected. The errors checked for are transposed characters, a missing character, and a character too many. If a correction is found, the corrected path is printed, and the command proceeds. This option is only used by interactive shells.</source>
          <target state="translated">如果设置，将更正 &lt;code&gt;cd&lt;/code&gt; 命令中目录组件的拼写错误。检查的错误是转置字符，丢失的字符和太多的字符。如果找到更正，则打印更正的路径，然后继续执行命令。此选项仅由交互式外壳程序使用。</target>
        </trans-unit>
        <trans-unit id="e16241ced739fb607c71b1addd6fdb4c7812708b" translate="yes" xml:space="preserve">
          <source>If set, patterns which fail to match filenames during filename expansion result in an expansion error.</source>
          <target state="translated">如果设置,在文件名扩展过程中未能匹配文件名的模式将导致扩展错误。</target>
        </trans-unit>
        <trans-unit id="e901b2d14d506b7dd95fb3f4885dca498290de6c" translate="yes" xml:space="preserve">
          <source>If set, prompt strings undergo parameter expansion, command substitution, arithmetic expansion, and quote removal after being expanded as described below (see &lt;a href=&quot;controlling-the-prompt&quot;&gt;Controlling the Prompt&lt;/a&gt;). This option is enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd353747d5b7e8ed81af0e7f92fdf7b1d6ed6f9c" translate="yes" xml:space="preserve">
          <source>If set, prompt strings undergo parameter expansion, command substitution, arithmetic expansion, and quote removal after being expanded as described below (see &lt;a href=&quot;controlling-the-prompt#Controlling-the-Prompt&quot;&gt;Controlling the Prompt&lt;/a&gt;). This option is enabled by default.</source>
          <target state="translated">如果设置，提示字符串将按如下所述进行扩展，然后进行参数扩展，命令替换，算术扩展和引号删除（请参阅&lt;a href=&quot;controlling-the-prompt#Controlling-the-Prompt&quot;&gt;控制提示&lt;/a&gt;）。默认情况下启用此选项。</target>
        </trans-unit>
        <trans-unit id="3920de4ca9352f179c8726cb61ef19bc5313b8b3" translate="yes" xml:space="preserve">
          <source>If set, range expressions used in pattern matching bracket expressions (see &lt;a href=&quot;pattern-matching&quot;&gt;Pattern Matching&lt;/a&gt;) behave as if in the traditional C locale when performing comparisons. That is, the current locale&amp;rsquo;s collating sequence is not taken into account, so &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee08c8ac1fddd9aaad9cb8aa674d274440992f17" translate="yes" xml:space="preserve">
          <source>If set, range expressions used in pattern matching bracket expressions (see &lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;Pattern Matching&lt;/a&gt;) behave as if in the traditional C locale when performing comparisons. That is, the current locale&amp;rsquo;s collating sequence is not taken into account, so &amp;lsquo;</source>
          <target state="translated">如果设置，则在执行比较时，模式匹配括号表达式（请参见&lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;模式匹配&lt;/a&gt;）中使用的范围表达式的行为就像在传统C语言环境中一样。也就是说，没有考虑当前语言环境的整理顺序，因此&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="532961dedcbffcb75500ae01cf7dfa330bdbd494" translate="yes" xml:space="preserve">
          <source>If set, shell error messages are written in the standard &lt;small&gt;GNU&lt;/small&gt; error message format.</source>
          <target state="translated">如果设置，则外壳错误消息将以标准&lt;small&gt;GNU&lt;/small&gt;错误消息格式编写。</target>
        </trans-unit>
        <trans-unit id="a0f445855a089d9e1ff1d19ba6a442ce38852aeb" translate="yes" xml:space="preserve">
          <source>If set, the &lt;code&gt;echo&lt;/code&gt; builtin expands backslash-escape sequences by default.</source>
          <target state="translated">如果设置，默认情况下，内置的 &lt;code&gt;echo&lt;/code&gt; 会扩展反斜杠转义序列。</target>
        </trans-unit>
        <trans-unit id="7401d5a39dde09f90702593f121ccff9d32a79ec" translate="yes" xml:space="preserve">
          <source>If set, the &lt;code&gt;source&lt;/code&gt; builtin uses the value of &lt;code&gt;PATH&lt;/code&gt; to find the directory containing the file supplied as an argument. This option is enabled by default.</source>
          <target state="translated">如果设置，则 &lt;code&gt;source&lt;/code&gt; 内置文件使用 &lt;code&gt;PATH&lt;/code&gt; 的值查找包含作为参数提供的文件的目录。默认情况下启用此选项。</target>
        </trans-unit>
        <trans-unit id="bebd739c03c1d069f2c8652e375c11ebe8188021" translate="yes" xml:space="preserve">
          <source>If set, the extended pattern matching features described above (see &lt;a href=&quot;pattern-matching&quot;&gt;Pattern Matching&lt;/a&gt;) are enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929ecd64341730633669db0878e9d6103a5c68a2" translate="yes" xml:space="preserve">
          <source>If set, the extended pattern matching features described above (see &lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;Pattern Matching&lt;/a&gt;) are enabled.</source>
          <target state="translated">如果设置，则启用上述扩展的模式匹配功能（请参阅&lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;模式匹配&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d25abd86d6c395156512cf9d8235fb585d7dcc4c" translate="yes" xml:space="preserve">
          <source>If set, the history list is appended to the file named by the value of the &lt;code&gt;HISTFILE&lt;/code&gt; variable when the shell exits, rather than overwriting the file.</source>
          <target state="translated">如果设置了历史记录，则在外壳程序退出时，历史记录列表将附加到以 &lt;code&gt;HISTFILE&lt;/code&gt; 变量的值命名的文件，而不是覆盖文件。</target>
        </trans-unit>
        <trans-unit id="0dfbb4f731ea9e5935a750ccb2c4ae145387d5b7" translate="yes" xml:space="preserve">
          <source>If set, the pattern &amp;lsquo;</source>
          <target state="translated">如果设置，则模式'</target>
        </trans-unit>
        <trans-unit id="9fdbf1e2cc06c487c240efc1f88e4a3501b6fa57" translate="yes" xml:space="preserve">
          <source>If set, the programmable completion facilities (see &lt;a href=&quot;programmable-completion&quot;&gt;Programmable Completion&lt;/a&gt;) are enabled. This option is enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20efcf1f5218c0f6dde042bc148eec1dfd84659" translate="yes" xml:space="preserve">
          <source>If set, the programmable completion facilities (see &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;Programmable Completion&lt;/a&gt;) are enabled. This option is enabled by default.</source>
          <target state="translated">如果设置，则启用可编程完成功能（请参阅&amp;ldquo; &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;可编程完成&amp;rdquo;&lt;/a&gt;）。默认情况下启用此选项。</target>
        </trans-unit>
        <trans-unit id="1cfd778c33d0a5bb3623ddc496866a42f25b4b02" translate="yes" xml:space="preserve">
          <source>If set, the return value of a pipeline is the value of the last (rightmost) command to exit with a non-zero status, or zero if all commands in the pipeline exit successfully. This option is disabled by default.</source>
          <target state="translated">如果设置,管道的返回值是最后一条(最右边)退出的命令的值,状态为非零,如果管道中的所有命令都成功退出,则返回值为零。该选项默认为禁用。</target>
        </trans-unit>
        <trans-unit id="0e4ecae825db827904953ed14cd72be66025462a" translate="yes" xml:space="preserve">
          <source>If set, the shell suppresses multiple evaluation of associative array subscripts during arithmetic expression evaluation, while executing builtins that can perform variable assignments, and while executing builtins that perform array dereferencing.</source>
          <target state="translated">如果设置,则shell在算术表达式评估时,在执行可以执行变量赋值的内建函数时,以及在执行执行数组解除引用的内建函数时,抑制对关联数组下标的多次评估。</target>
        </trans-unit>
        <trans-unit id="8fbf93de3d9abd9606e887e56cc2909a74e64277" translate="yes" xml:space="preserve">
          <source>If set, the suffixes specified by the &lt;code&gt;FIGNORE&lt;/code&gt; shell variable cause words to be ignored when performing word completion even if the ignored words are the only possible completions. See &lt;a href=&quot;bash-variables&quot;&gt;Bash Variables&lt;/a&gt;, for a description of &lt;code&gt;FIGNORE&lt;/code&gt;. This option is enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee2679701e687e1a860e08a9cd9723e0988c9a9" translate="yes" xml:space="preserve">
          <source>If set, the suffixes specified by the &lt;code&gt;FIGNORE&lt;/code&gt; shell variable cause words to be ignored when performing word completion even if the ignored words are the only possible completions. See &lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash Variables&lt;/a&gt;, for a description of &lt;code&gt;FIGNORE&lt;/code&gt;. This option is enabled by default.</source>
          <target state="translated">如果设置，则由 &lt;code&gt;FIGNORE&lt;/code&gt; shell变量指定的后缀会在执行单词补全时导致忽略单词，即使被忽略的单词是唯一可能的补全。有关 &lt;code&gt;FIGNORE&lt;/code&gt; 的说明，请参见&lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash变量&lt;/a&gt;。默认情况下启用此选项。</target>
        </trans-unit>
        <trans-unit id="e7fa24bc01eb5c7c545872c6bce0f30c3c535a3f" translate="yes" xml:space="preserve">
          <source>If set, the value is interpreted as a command to execute before the printing of each primary prompt (&lt;code&gt;$PS1&lt;/code&gt;).</source>
          <target state="translated">如果设置，则该值将解释为要在打印每个主提示（ &lt;code&gt;$PS1&lt;/code&gt; ）之前执行的命令。</target>
        </trans-unit>
        <trans-unit id="3d9b7696c9777c3fdef5f5f1690ef14ee23382d9" translate="yes" xml:space="preserve">
          <source>If the</source>
          <target state="translated">如果</target>
        </trans-unit>
        <trans-unit id="9b7453082b85c0dfe273fa0bac742afa84cc65ae" translate="yes" xml:space="preserve">
          <source>If the &amp;lsquo;</source>
          <target state="translated">如果&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="4a22cb6827833044b2ede9b1dcf1c374590cf127" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;HISTTIMEFORMAT&lt;/code&gt; is set, the time stamp information associated with each history entry is written to the history file, marked with the history comment character. When the history file is read, lines beginning with the history comment character followed immediately by a digit are interpreted as timestamps for the following history entry.</source>
          <target state="translated">如果设置了 &lt;code&gt;HISTTIMEFORMAT&lt;/code&gt; ，则将与每个历史记录条目关联的时间戳信息写入历史记录文件，并用历史记录注释字符标记。读取历史记录文件时，以历史记录注释字符开头的行以及紧随其后的数字将被解释为以下历史记录条目的时间戳。</target>
        </trans-unit>
        <trans-unit id="054839071066ec9f34f4cf4abd12d33d1e4bc044" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;extglob&lt;/code&gt; shell option is enabled using the &lt;code&gt;shopt&lt;/code&gt; builtin, several extended pattern matching operators are recognized. In the following description, a &lt;var&gt;pattern-list&lt;/var&gt; is a list of one or more patterns separated by a &amp;lsquo;</source>
          <target state="translated">如果使用 &lt;code&gt;shopt&lt;/code&gt; 内置功能启用了 &lt;code&gt;extglob&lt;/code&gt; shell选项，则将识别多个扩展模式匹配运算符。在下面的描述中， &lt;var&gt;pattern-list&lt;/var&gt; 是由&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="0c49ee2e6c90db15d81dee09f7269d7064e29880" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;huponexit&lt;/code&gt; shell option has been set with &lt;code&gt;shopt&lt;/code&gt; (see &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;), Bash sends a &lt;code&gt;SIGHUP&lt;/code&gt; to all jobs when an interactive login shell exits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1456589cde9f027231d50a5ef788521caa8a2b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;huponexit&lt;/code&gt; shell option has been set with &lt;code&gt;shopt&lt;/code&gt; (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;), Bash sends a &lt;code&gt;SIGHUP&lt;/code&gt; to all jobs when an interactive login shell exits.</source>
          <target state="translated">如果已经用 &lt;code&gt;shopt&lt;/code&gt; 设置了 &lt;code&gt;huponexit&lt;/code&gt; shell选项（请参见&lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;），那么当交互式登录Shell退出时，Bash会向所有作业发送 &lt;code&gt;SIGHUP&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05896284c1b6e1c762ed3c503a01a064c0179e7b" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;show-mode-in-prompt&lt;/var&gt; variable is enabled, this string is displayed immediately before the last line of the primary prompt when emacs editing mode is active. The value is expanded like a key binding, so the standard set of meta- and control prefixes and backslash escape sequences is available. Use the &amp;lsquo;</source>
          <target state="translated">如果启用了 &lt;var&gt;show-mode-in-prompt&lt;/var&gt; 变量，则当emacs编辑模式处于活动状态时，此字符串将立即显示在主要提示的最后一行之前。该值像键绑定一样扩展，因此可以使用标准的元和控制前缀以及反斜杠转义序列集。使用 '</target>
        </trans-unit>
        <trans-unit id="a47328a5af0ba72502c03a74fccfa6394c9482d6" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;show-mode-in-prompt&lt;/var&gt; variable is enabled, this string is displayed immediately before the last line of the primary prompt when vi editing mode is active and in command mode. The value is expanded like a key binding, so the standard set of meta- and control prefixes and backslash escape sequences is available. Use the &amp;lsquo;</source>
          <target state="translated">如果启用了 &lt;var&gt;show-mode-in-prompt&lt;/var&gt; 变量，则在vi编辑模式处于活动状态且处于命令模式时，该字符串将显示在主提示符最后一行的紧前面。该值像键绑定一样扩展，因此可以使用标准的元和控制前缀以及反斜杠转义序列集。使用 '</target>
        </trans-unit>
        <trans-unit id="e74f6642baaada2241bf823143088cfb8b1c430a" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;show-mode-in-prompt&lt;/var&gt; variable is enabled, this string is displayed immediately before the last line of the primary prompt when vi editing mode is active and in insertion mode. The value is expanded like a key binding, so the standard set of meta- and control prefixes and backslash escape sequences is available. Use the &amp;lsquo;</source>
          <target state="translated">如果启用了 &lt;var&gt;show-mode-in-prompt&lt;/var&gt; 变量，则在vi编辑模式处于活动状态且处于插入模式时，该字符串将显示在主提示最后一行的紧前面。该值像键绑定一样扩展，因此可以使用标准的元和控制前缀以及反斜杠转义序列集。使用 '</target>
        </trans-unit>
        <trans-unit id="30998f0fe4e2941544fd8bc821fc1183fd2c1673" translate="yes" xml:space="preserve">
          <source>If the Cover Text requirement of section 3 is applicable to these copies of the Document, then if the Document is less than one half of the entire aggregate, the Document&amp;rsquo;s Cover Texts may be placed on covers that bracket the Document within the aggregate, or the electronic equivalent of covers if the Document is in electronic form. Otherwise they must appear on printed covers that bracket the whole aggregate.</source>
          <target state="translated">如果第3节的封面文字要求适用于文档的这些副本，则如果文档少于整个汇总的一半，则可以将文档的封面文字放在在汇总中将文档括起来的封面上，或者如果文档为电子形式，则为电子形式的封面。否则，它们必须出现在将整个集合括起来的印刷封面上。</target>
        </trans-unit>
        <trans-unit id="b01b14a92da64769140796d5db1f7480425aa3ee" translate="yes" xml:space="preserve">
          <source>If the Modified Version includes new front-matter sections or appendices that qualify as Secondary Sections and contain no material copied from the Document, you may at your option designate some or all of these sections as invariant. To do this, add their titles to the list of Invariant Sections in the Modified Version&amp;rsquo;s license notice. These titles must be distinct from any other section titles.</source>
          <target state="translated">如果修改后的版本包括新的前节或附录，这些节或附录符合第二节的规定，并且不包含从文档中复制的材料，则可以选择将其中的部分或全部指定为不变的。为此，请将其标题添加到&amp;ldquo;修改版本&amp;rdquo;许可通知中的&amp;ldquo;不变部分&amp;rdquo;列表中。这些标题必须与任何其他节标题不同。</target>
        </trans-unit>
        <trans-unit id="ae42262454a5127278c1909c79b76841c7b45277" translate="yes" xml:space="preserve">
          <source>If the builtin command &lt;code&gt;return&lt;/code&gt; is executed in a function, the function completes and execution resumes with the next command after the function call. Any command associated with the &lt;code&gt;RETURN&lt;/code&gt; trap is executed before execution resumes. When a function completes, the values of the positional parameters and the special parameter &amp;lsquo;</source>
          <target state="translated">如果在函数中执行了内置命令 &lt;code&gt;return&lt;/code&gt; ，则函数将完成，并且函数调用后的下一条命令将继续执行。在恢复执行之前，将执行与 &lt;code&gt;RETURN&lt;/code&gt; 陷阱关联的所有命令。函数完成后，位置参数和特殊参数'</target>
        </trans-unit>
        <trans-unit id="9414ef2fe2583852563464aa2c575ff4cb02f6ca" translate="yes" xml:space="preserve">
          <source>If the characters following the tilde in the tilde-prefix consist of a number &lt;var&gt;N&lt;/var&gt;, optionally prefixed by a &amp;lsquo;</source>
          <target state="translated">如果波浪号前缀中波浪号后面的字符由数字 &lt;var&gt;N&lt;/var&gt; 组成，则可选地以'</target>
        </trans-unit>
        <trans-unit id="ebe9503e93c21afe3f65e2d6561be8be57243317" translate="yes" xml:space="preserve">
          <source>If the command name contains no slashes, the shell attempts to locate it. If there exists a shell function by that name, that function is invoked as described in &lt;a href=&quot;shell-functions&quot;&gt;Shell Functions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f66c975b1e9edc53dfe72b4e402ff8bc30f4da7" translate="yes" xml:space="preserve">
          <source>If the command name contains no slashes, the shell attempts to locate it. If there exists a shell function by that name, that function is invoked as described in &lt;a href=&quot;shell-functions#Shell-Functions&quot;&gt;Shell Functions&lt;/a&gt;.</source>
          <target state="translated">如果命令名称不包含斜杠，则外壳程序将尝试找到它。如果存在具有该名称的&lt;a href=&quot;shell-functions#Shell-Functions&quot;&gt;Shell函数&lt;/a&gt;，则将按照Shell Functions中的描述调用该函数。</target>
        </trans-unit>
        <trans-unit id="f20af8e5f490bb85cabed38dc27315b8be4a2484" translate="yes" xml:space="preserve">
          <source>If the command run by the &lt;code&gt;DEBUG&lt;/code&gt; trap returns a non-zero value, the next command is skipped and not executed.</source>
          <target state="translated">如果由 &lt;code&gt;DEBUG&lt;/code&gt; 陷阱运行的命令返回非零值，则下一条命令将被跳过而不执行。</target>
        </trans-unit>
        <trans-unit id="4b6d40a13b60a08f621b0b1d4a57fe5e59527120" translate="yes" xml:space="preserve">
          <source>If the command run by the &lt;code&gt;DEBUG&lt;/code&gt; trap returns a value of 2, and the shell is executing in a subroutine (a shell function or a shell script executed by the &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;source&lt;/code&gt; builtins), the shell simulates a call to &lt;code&gt;return&lt;/code&gt;.</source>
          <target state="translated">如果由 &lt;code&gt;DEBUG&lt;/code&gt; 陷阱运行的命令返回的值为2，并且外壳程序正在子例程（由 &lt;code&gt;.&lt;/code&gt; 或 &lt;code&gt;source&lt;/code&gt; 内置程序执行的外壳程序函数或外壳程序脚本）中执行，则外壳程序将模拟对 &lt;code&gt;return&lt;/code&gt; 的调用。</target>
        </trans-unit>
        <trans-unit id="f83971eccd504a2e75124443fa3d5576d5f18348" translate="yes" xml:space="preserve">
          <source>If the command was not begun asynchronously, the shell waits for the command to complete and collects its exit status.</source>
          <target state="translated">如果命令不是异步开始的,shell会等待命令完成并收集其退出状态。</target>
        </trans-unit>
        <trans-unit id="4ae4fb110d63c7096c1b994332344374159c067f" translate="yes" xml:space="preserve">
          <source>If the control variable in a &lt;code&gt;for&lt;/code&gt; loop has the nameref attribute, the list of words can be a list of shell variables, and a name reference will be established for each word in the list, in turn, when the loop is executed. Array variables cannot be given the nameref attribute. However, nameref variables can reference array variables and subscripted array variables. Namerefs can be unset using the</source>
          <target state="translated">如果 &lt;code&gt;for&lt;/code&gt; 循环中的控制变量具有nameref属性，则单词列表可以是shell变量列表，并且将在执行循环时依次为列表中的每个单词建立名称引用。数组变量不能被赋予nameref属性。但是，nameref变量可以引用数组变量和下标数组变量。可以使用</target>
        </trans-unit>
        <trans-unit id="d888181452fabb4419c2b1daf7d28c4d9a94611c" translate="yes" xml:space="preserve">
          <source>If the description for a command says that it &amp;lsquo;kills&amp;rsquo; text, then you can be sure that you can get the text back in a different (or the same) place later.</source>
          <target state="translated">如果命令的描述说它&amp;ldquo;杀死&amp;rdquo;了文本，那么您可以确定以后可以将文本恢复到另一个（或相同的）位置。</target>
        </trans-unit>
        <trans-unit id="05397a050dc8c9703cdaf1abb09d6dada14f1d08" translate="yes" xml:space="preserve">
          <source>If the effective uid is 0, &lt;code&gt;#&lt;/code&gt;, otherwise &lt;code&gt;$&lt;/code&gt;.</source>
          <target state="translated">如果有效uid为0， &lt;code&gt;$&lt;/code&gt; &lt;code&gt;#&lt;/code&gt; ，否则为$。</target>
        </trans-unit>
        <trans-unit id="da1a1344c2ffc23e855a0673f3f4c0b321925609" translate="yes" xml:space="preserve">
          <source>If the first argument is &amp;lsquo;</source>
          <target state="translated">如果第一个参数是&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="0e911ffd5bbeed35045cf2ac99ba15b01c5758dc" translate="yes" xml:space="preserve">
          <source>If the first argument is exactly &amp;lsquo;</source>
          <target state="translated">如果第一个参数正好是&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="e9f08dd4da402efbb0a5b33aeef095b7ba5e7a6b" translate="yes" xml:space="preserve">
          <source>If the first character of &lt;var&gt;parameter&lt;/var&gt; is an exclamation point (!), and &lt;var&gt;parameter&lt;/var&gt; is not a &lt;var&gt;nameref&lt;/var&gt;, it introduces a level of indirection. Bash uses the value formed by expanding the rest of &lt;var&gt;parameter&lt;/var&gt; as the new &lt;var&gt;parameter&lt;/var&gt;; this is then expanded and that value is used in the rest of the expansion, rather than the expansion of the original &lt;var&gt;parameter&lt;/var&gt;. This is known as &lt;code&gt;indirect expansion&lt;/code&gt;. The value is subject to tilde expansion, parameter expansion, command substitution, and arithmetic expansion. If &lt;var&gt;parameter&lt;/var&gt; is a nameref, this expands to the name of the variable referenced by &lt;var&gt;parameter&lt;/var&gt; instead of performing the complete indirect expansion. The exceptions to this are the expansions of ${!&lt;var&gt;prefix&lt;/var&gt;*} and ${!&lt;var&gt;name&lt;/var&gt;[@]} described below. The exclamation point must immediately follow the left brace in order to introduce indirection.</source>
          <target state="translated">如果 &lt;var&gt;parameter&lt;/var&gt; 的第一个字符是感叹号（！），而 &lt;var&gt;parameter&lt;/var&gt; 不是 &lt;var&gt;nameref&lt;/var&gt; ，则它将引入一个间接级别。 Bash使用通过扩展其余 &lt;var&gt;parameter&lt;/var&gt; 形成的值作为新 &lt;var&gt;parameter&lt;/var&gt; ；然后对其进行扩展，并在其余扩展中使用该值，而不是原始 &lt;var&gt;parameter&lt;/var&gt; 的扩展。这称为 &lt;code&gt;indirect expansion&lt;/code&gt; 。该值可进行波浪号扩展，参数扩展，命令替换和算术扩展。如果 &lt;var&gt;parameter&lt;/var&gt; 是一个nameref，它将扩展为 &lt;var&gt;parameter&lt;/var&gt; 引用的变量的名称而不是执行完整的间接扩展。$ {的扩展名除外！ &lt;var&gt;prefix&lt;/var&gt; *}和$ {！ &lt;var&gt;name&lt;/var&gt; [@]}，如下所述。感叹号必须紧随左括号之后才能引入间接指示。</target>
        </trans-unit>
        <trans-unit id="d8625d646fa2af7dff7580fe1d9a273c1a1771ef" translate="yes" xml:space="preserve">
          <source>If the login name is invalid, or the tilde expansion fails, the word is left unchanged.</source>
          <target state="translated">如果登录名无效,或者是扩展tilde失败,那么这个词就不会被更改。</target>
        </trans-unit>
        <trans-unit id="9343f2fce82acf4542b2a16221e2bb2edfc14433" translate="yes" xml:space="preserve">
          <source>If the metafied character &lt;var&gt;x&lt;/var&gt; is upper case, run the command that is bound to the corresponding metafied lower case character. The behavior is undefined if &lt;var&gt;x&lt;/var&gt; is already lower case.</source>
          <target state="translated">如果变位字符 &lt;var&gt;x&lt;/var&gt; 是大写字母，请运行绑定到相应的变位小写字符的命令。如果 &lt;var&gt;x&lt;/var&gt; 已经是小写，则该行为是不确定的。</target>
        </trans-unit>
        <trans-unit id="3652b088dd6ef0f515c30a1a29bdbba1f912556d" translate="yes" xml:space="preserve">
          <source>If the name does not match a function, the shell searches for it in the list of shell builtins. If a match is found, that builtin is invoked.</source>
          <target state="translated">如果名称与函数不匹配,shell会在shell builtins列表中搜索它。如果找到匹配的函数,则调用该内置函数。</target>
        </trans-unit>
        <trans-unit id="fcae966beae37c3234d129f92f4dabe49bcff020" translate="yes" xml:space="preserve">
          <source>If the name is neither a shell function nor a builtin, and contains no slashes, Bash searches each element of &lt;code&gt;$PATH&lt;/code&gt; for a directory containing an executable file by that name. Bash uses a hash table to remember the full pathnames of executable files to avoid multiple &lt;code&gt;PATH&lt;/code&gt; searches (see the description of &lt;code&gt;hash&lt;/code&gt; in &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;). A full search of the directories in &lt;code&gt;$PATH&lt;/code&gt; is performed only if the command is not found in the hash table. If the search is unsuccessful, the shell searches for a defined shell function named &lt;code&gt;command_not_found_handle&lt;/code&gt;. If that function exists, it is invoked in a separate execution environment with the original command and the original command&amp;rsquo;s arguments as its arguments, and the function&amp;rsquo;s exit status becomes the exit status of that subshell. If that function is not defined, the shell prints an error message and returns an exit status of 127.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd1f09748ba192d26affcb3d19a5e031f053962" translate="yes" xml:space="preserve">
          <source>If the name is neither a shell function nor a builtin, and contains no slashes, Bash searches each element of &lt;code&gt;$PATH&lt;/code&gt; for a directory containing an executable file by that name. Bash uses a hash table to remember the full pathnames of executable files to avoid multiple &lt;code&gt;PATH&lt;/code&gt; searches (see the description of &lt;code&gt;hash&lt;/code&gt; in &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;). A full search of the directories in &lt;code&gt;$PATH&lt;/code&gt; is performed only if the command is not found in the hash table. If the search is unsuccessful, the shell searches for a defined shell function named &lt;code&gt;command_not_found_handle&lt;/code&gt;. If that function exists, it is invoked in a separate execution environment with the original command and the original command&amp;rsquo;s arguments as its arguments, and the function&amp;rsquo;s exit status becomes the exit status of that subshell. If that function is not defined, the shell prints an error message and returns an exit status of 127.</source>
          <target state="translated">如果该名称既不是shell函数也不是内置函数，并且不包含任何斜杠，则Bash将在 &lt;code&gt;$PATH&lt;/code&gt; 每个元素中搜索包含该名称的可执行文件的目录。 Bash使用哈希表来记录可执行文件的完整路径，以避免多重 &lt;code&gt;PATH&lt;/code&gt; 搜索（见的描述 &lt;code&gt;hash&lt;/code&gt; 在&lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell的内置命令&lt;/a&gt;）。仅当在哈希表中找不到命令时， &lt;code&gt;$PATH&lt;/code&gt; 中的目录进行完全搜索。如果搜索失败，则外壳程序将搜索一个已定义的名为 &lt;code&gt;command_not_found_handle&lt;/code&gt; 的外壳程序函数。。如果该函数存在，则在单独的执行环境中以原始命令和原始命令的自变量作为其自变量调用该函数，并且该函数的退出状态成为该子Shell的退出状态。如果未定义该函数，则外壳程序将显示一条错误消息并返回退出状态127。</target>
        </trans-unit>
        <trans-unit id="f530b0ef8e20407d7d685925ddafd5d56930b0c7" translate="yes" xml:space="preserve">
          <source>If the operating system on which Bash is running supports job control, Bash contains facilities to use it. Typing the &lt;var&gt;suspend&lt;/var&gt; character (typically &amp;lsquo;</source>
          <target state="translated">如果运行Bash的操作系统支持作业控制，则Bash包含使用它的工具。输入 &lt;var&gt;suspend&lt;/var&gt; 字符（通常为'</target>
        </trans-unit>
        <trans-unit id="7cf9e7001d0b6b5b267c23e40cc2bc8a8a6858e9" translate="yes" xml:space="preserve">
          <source>If the pipeline is not executed asynchronously (see &lt;a href=&quot;lists&quot;&gt;Lists&lt;/a&gt;), the shell waits for all commands in the pipeline to complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f467cea5a3baad26f30dc33b725ee0e20015f1e6" translate="yes" xml:space="preserve">
          <source>If the pipeline is not executed asynchronously (see &lt;a href=&quot;lists#Lists&quot;&gt;Lists&lt;/a&gt;), the shell waits for all commands in the pipeline to complete.</source>
          <target state="translated">如果管道不是异步执行的（请参见&lt;a href=&quot;lists#Lists&quot;&gt;Lists&lt;/a&gt;），那么外壳程序将等待管道中的所有命令完成。</target>
        </trans-unit>
        <trans-unit id="212a14fc281d3000c828b63409f5331515c588fb" translate="yes" xml:space="preserve">
          <source>If the previously-applied actions do not generate any matches, and the</source>
          <target state="translated">如果之前应用的动作没有产生任何匹配,而</target>
        </trans-unit>
        <trans-unit id="2e63922ec9b7d407e0fe264eb09d2bcba6980b4e" translate="yes" xml:space="preserve">
          <source>If the redirection operator is &amp;lsquo;</source>
          <target state="translated">如果重定向运算符为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="59230d41e9af73b73329d9b9dd8fc87548195f3c" translate="yes" xml:space="preserve">
          <source>If the required texts for either cover are too voluminous to fit legibly, you should put the first ones listed (as many as fit reasonably) on the actual cover, and continue the rest onto adjacent pages.</source>
          <target state="translated">如果任何一个封面所需的文字太多,难以辨认,你应该把最先列出的文字(尽可能多的文字)放在实际的封面上,其余的文字继续放在相邻的页面上。</target>
        </trans-unit>
        <trans-unit id="d06d8152807b8f77cfbe145131f509497b38d79c" translate="yes" xml:space="preserve">
          <source>If the search is successful, or if the command name contains one or more slashes, the shell executes the named program in a separate execution environment. Argument 0 is set to the name given, and the remaining arguments to the command are set to the arguments supplied, if any.</source>
          <target state="translated">如果搜索成功,或者命令名包含一个或多个斜杠,shell会在单独的执行环境中执行命名的程序。参数0被设置为给定的名称,命令的其余参数被设置为所提供的参数(如果有)。</target>
        </trans-unit>
        <trans-unit id="43a91a4e89a935ee690ef12d5f46c02a135e25b2" translate="yes" xml:space="preserve">
          <source>If the second argument is one of the binary conditional operators (see &lt;a href=&quot;bash-conditional-expressions&quot;&gt;Bash Conditional Expressions&lt;/a&gt;), the result of the expression is the result of the binary test using the first and third arguments as operands. The &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fdbb85479a122cfee88f7d44a4c73b22755a154" translate="yes" xml:space="preserve">
          <source>If the second argument is one of the binary conditional operators (see &lt;a href=&quot;bash-conditional-expressions#Bash-Conditional-Expressions&quot;&gt;Bash Conditional Expressions&lt;/a&gt;), the result of the expression is the result of the binary test using the first and third arguments as operands. The &amp;lsquo;</source>
          <target state="translated">如果第二个参数是二进制条件运算符之一（请参阅&lt;a href=&quot;bash-conditional-expressions#Bash-Conditional-Expressions&quot;&gt;Bash条件表达式&lt;/a&gt;），则表达式的结果是使用第一个和第三个参数作为操作数的二进制测试的结果。'</target>
        </trans-unit>
        <trans-unit id="d69b794650bef337e72e3298fb850c85885ed1a7" translate="yes" xml:space="preserve">
          <source>If the substitution appears within double quotes, word splitting and filename expansion are not performed on the results.</source>
          <target state="translated">如果替换出现在双引号内,则不会对结果进行拆字和文件名扩展。</target>
        </trans-unit>
        <trans-unit id="0b8cff8050c947a078b23cdfbe99842ebe251678" translate="yes" xml:space="preserve">
          <source>If the tilde-prefix is &amp;lsquo;</source>
          <target state="translated">如果波浪号前缀为'</target>
        </trans-unit>
        <trans-unit id="77c19eb829524ff3830be892be9daab526e2586c" translate="yes" xml:space="preserve">
          <source>If the value is null, no timing information is displayed. A trailing newline is added when the format string is displayed.</source>
          <target state="translated">如果该值为空,则不显示计时信息。当显示格式字符串时,会添加一个尾部的换行。</target>
        </trans-unit>
        <trans-unit id="b29c2bc636919907e5727e599653ad33a35ef415" translate="yes" xml:space="preserve">
          <source>If there are no options, a list of the shell builtins is displayed. The</source>
          <target state="translated">如果没有选项,则会显示shell内置的列表。如果没有选项,则会显示shell内置的列表。</target>
        </trans-unit>
        <trans-unit id="dd38cdf1358ce5370d2ae926cab8b09f8209e5cc" translate="yes" xml:space="preserve">
          <source>If there is a command name left after expansion, execution proceeds as described below. Otherwise, the command exits. If one of the expansions contained a command substitution, the exit status of the command is the exit status of the last command substitution performed. If there were no command substitutions, the command exits with a status of zero.</source>
          <target state="translated">如果扩展后还剩下一个命令名,则按下面的方法执行。否则,命令退出。如果其中一个扩展包含有命令替换,则命令的退出状态为最后执行的命令替换的退出状态。如果没有命令替换,命令的退出状态为零。</target>
        </trans-unit>
        <trans-unit id="67e40634c1c342bde57c555f03adee7425d16904" translate="yes" xml:space="preserve">
          <source>If this execution fails because the file is not in executable format, and the file is not a directory, it is assumed to be a &lt;var&gt;shell script&lt;/var&gt; and the shell executes it as described in &lt;a href=&quot;shell-scripts&quot;&gt;Shell Scripts&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef831694cfe0e1766f40148e94f715f89ddf8e51" translate="yes" xml:space="preserve">
          <source>If this execution fails because the file is not in executable format, and the file is not a directory, it is assumed to be a &lt;var&gt;shell script&lt;/var&gt; and the shell executes it as described in &lt;a href=&quot;shell-scripts#Shell-Scripts&quot;&gt;Shell Scripts&lt;/a&gt;.</source>
          <target state="translated">如果执行失败是因为该文件不是可执行文件格式，并且该文件不是目录，则假定它是一个 &lt;var&gt;shell script&lt;/var&gt; ，并且Shell会按照&lt;a href=&quot;shell-scripts#Shell-Scripts&quot;&gt;Shell Scripts中的&lt;/a&gt;描述执行它。</target>
        </trans-unit>
        <trans-unit id="a9cbb1826e5bd276b241f84d5fb0cf0f72a33b28" translate="yes" xml:space="preserve">
          <source>If this is set, Bash checks that a command found in the hash table exists before trying to execute it. If a hashed command no longer exists, a normal path search is performed.</source>
          <target state="translated">如果设置了这个选项,Bash会在尝试执行哈希表中找到的命令之前检查它是否存在。如果哈希表中的命令不存在了,则会进行正常的路径搜索。</target>
        </trans-unit>
        <trans-unit id="7d993244d80213308de5ea31430b494a883f910a" translate="yes" xml:space="preserve">
          <source>If this is set, a non-interactive shell will not exit if it cannot execute the file specified as an argument to the &lt;code&gt;exec&lt;/code&gt; builtin command. An interactive shell does not exit if &lt;code&gt;exec&lt;/code&gt; fails.</source>
          <target state="translated">如果设置了此选项，则非交互式外壳如果无法执行作为 &lt;code&gt;exec&lt;/code&gt; 内置命令的参数指定的文件，则不会退出。如果 &lt;code&gt;exec&lt;/code&gt; 失败，则交互式外壳程序不会退出。</target>
        </trans-unit>
        <trans-unit id="cd439d48a99ce19464c09456bd0704d9996fdf10" translate="yes" xml:space="preserve">
          <source>If this is set, an argument to the &lt;code&gt;cd&lt;/code&gt; builtin command that is not a directory is assumed to be the name of a variable whose value is the directory to change to.</source>
          <target state="translated">如果设置了此选项，则将 &lt;code&gt;cd&lt;/code&gt; 内置命令的参数（不是目录）假定为变量的名称，该变量的值是要更改的目录。</target>
        </trans-unit>
        <trans-unit id="1fc99e904ebf11747e18bd0280b940e9b71a9adf" translate="yes" xml:space="preserve">
          <source>If this is set, the &lt;code&gt;shift&lt;/code&gt; builtin prints an error message when the shift count exceeds the number of positional parameters.</source>
          <target state="translated">如果设置了此选项，则当班次计数超过位置参数的数量时， &lt;code&gt;shift&lt;/code&gt; 内置会打印一条错误消息。</target>
        </trans-unit>
        <trans-unit id="aa9c5fa227ef993e47df813205672fbe87b28590" translate="yes" xml:space="preserve">
          <source>If this option is given, backslash does not act as an escape character. The backslash is considered to be part of the line. In particular, a backslash-newline pair may not then be used as a line continuation.</source>
          <target state="translated">如果给定了这个选项,反斜线不作为转义字符。反斜线被认为是行的一部分。特别是,反斜杠-换行符不能作为行的延续。</target>
        </trans-unit>
        <trans-unit id="0b35702eed6ed9a377ce23daf4e3ad1266e3ab93" translate="yes" xml:space="preserve">
          <source>If this option is present, or if no arguments remain after option processing, then commands are read from the standard input. This option allows the positional parameters to be set when invoking an interactive shell or when reading input through a pipe.</source>
          <target state="translated">如果有这个选项,或者在选项处理后没有参数残留,则从标准输入中读取命令。该选项允许在调用交互式shell或通过管道读取输入时设置位置参数。</target>
        </trans-unit>
        <trans-unit id="777e91878a06be51cd1833b132b824e91b78809d" translate="yes" xml:space="preserve">
          <source>If this parameter is set to a filename or directory name and the &lt;code&gt;MAILPATH&lt;/code&gt; variable is not set, Bash informs the user of the arrival of mail in the specified file or Maildir-format directory.</source>
          <target state="translated">如果将此参数设置为文件名或目录名，并且未设置 &lt;code&gt;MAILPATH&lt;/code&gt; 变量，则Bash会通知用户邮件到达指定文件或Maildir格式目录中。</target>
        </trans-unit>
        <trans-unit id="61186d4d7dac04e4cdc326853674726cfce5072e" translate="yes" xml:space="preserve">
          <source>If this variable is in the environment when Bash starts, the shell enters &lt;small&gt;POSIX&lt;/small&gt; mode (see &lt;a href=&quot;bash-posix-mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;) before reading the startup files, as if the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d7176ed8843fa0356bde0b33b22ab8e357f85d" translate="yes" xml:space="preserve">
          <source>If this variable is in the environment when Bash starts, the shell enters &lt;small&gt;POSIX&lt;/small&gt; mode (see &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;) before reading the startup files, as if the</source>
          <target state="translated">如果此变量在Bash启动时所在的环境中，则外壳程序将在读取启动文件之前进入&lt;small&gt;POSIX&lt;/small&gt;模式（请参阅&lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;），就像</target>
        </trans-unit>
        <trans-unit id="f1b89889d40b4d7ed3d3571f50654adabf775633" translate="yes" xml:space="preserve">
          <source>If this variable is not set, Bash acts as if it had the value</source>
          <target state="translated">如果这个变量没有被设置,那么Bash的行为就像它的值为</target>
        </trans-unit>
        <trans-unit id="f193f77ae6c578e085525731e2ade93975c1d7b6" translate="yes" xml:space="preserve">
          <source>If this variable is set and not null, its value is used as a format string for &lt;var&gt;strftime&lt;/var&gt; to print the time stamp associated with each history entry displayed by the &lt;code&gt;history&lt;/code&gt; builtin. If this variable is set, time stamps are written to the history file so they may be preserved across shell sessions. This uses the history comment character to distinguish timestamps from other history lines.</source>
          <target state="translated">如果这个变量设置，而不是空，它的值作为格式字符串 &lt;var&gt;strftime&lt;/var&gt; 打印与所显示的每个历史条目相关的时间戳 &lt;code&gt;history&lt;/code&gt; 内置。如果设置了此变量，则将时间戳记写入历史记录文件，以便可以在Shell会话之间保留它们。这使用历史注释字符将时间戳与其他历史记录行区分开。</target>
        </trans-unit>
        <trans-unit id="96f4c2b324d13e41cb42c263977e583252cd3585" translate="yes" xml:space="preserve">
          <source>If this variable is set when Bash is invoked to execute a shell script, its value is expanded and used as the name of a startup file to read before executing the script. See &lt;a href=&quot;bash-startup-files&quot;&gt;Bash Startup Files&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="676ae2b7cf28a1e7f203d97bc2401be482723d3d" translate="yes" xml:space="preserve">
          <source>If this variable is set when Bash is invoked to execute a shell script, its value is expanded and used as the name of a startup file to read before executing the script. See &lt;a href=&quot;bash-startup-files#Bash-Startup-Files&quot;&gt;Bash Startup Files&lt;/a&gt;.</source>
          <target state="translated">如果在调用Bash执行Shell脚本时设置了此变量，则将其值扩展并用作在执行脚本之前要读取的启动文件的名称。请参阅&lt;a href=&quot;bash-startup-files#Bash-Startup-Files&quot;&gt;Bash启动文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c1dff832276f80b5d30fc7c5237dab8f11603b5e" translate="yes" xml:space="preserve">
          <source>If this variable is set, and is an array, the value of each set element is interpreted as a command to execute before printing the primary prompt (&lt;code&gt;$PS1&lt;/code&gt;). If this is set but not an array variable, its value is used as a command to execute instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f28ca2e8f75483fc478ec8c1ba2646d3681c8ad5" translate="yes" xml:space="preserve">
          <source>If you do not have a Meta or &lt;code&gt;ALT&lt;/code&gt; key, or another key working as a Meta key, the identical keystroke can be generated by typing &lt;code&gt;ESC&lt;/code&gt;&lt;em&gt;first&lt;/em&gt;, and then typing &lt;code&gt;k&lt;/code&gt;. Either process is known as &lt;em&gt;metafying&lt;/em&gt; the &lt;code&gt;k&lt;/code&gt; key.</source>
          <target state="translated">如果你没有一个元或 &lt;code&gt;ALT&lt;/code&gt; 键，或另一个关键工作作为Meta键，可以通过输入生成相同的按键 &lt;code&gt;ESC&lt;/code&gt; &lt;em&gt;第一&lt;/em&gt;，然后键入 &lt;code&gt;k&lt;/code&gt; 。任一过程称为&lt;em&gt;metafying&lt;/em&gt;的 &lt;code&gt;k&lt;/code&gt; 键。</target>
        </trans-unit>
        <trans-unit id="d959cdc013e27164e0b6fbacf47517d98590f9b4" translate="yes" xml:space="preserve">
          <source>If you have Invariant Sections without Cover Texts, or some other combination of the three, merge those two alternatives to suit the situation.</source>
          <target state="translated">如果你有不带封面文本的不变部分,或三者的其他组合,请将这两种选择合并,以适应情况。</target>
        </trans-unit>
        <trans-unit id="ad1b8a7db5a735690b717ff819d3d51d6e5400ec" translate="yes" xml:space="preserve">
          <source>If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts, replace the &amp;ldquo;with&amp;hellip;Texts.&amp;rdquo; line with this:</source>
          <target state="translated">如果您有不变部分，前封面文本和后封面文本，则将&amp;ldquo;替换为...文本&amp;rdquo;。符合此：</target>
        </trans-unit>
        <trans-unit id="973407fb9d8484275f138c80804c3c11c43dc6b0" translate="yes" xml:space="preserve">
          <source>If you have to use a &lt;code&gt;make&lt;/code&gt; that does not supports the &lt;code&gt;VPATH&lt;/code&gt; variable, you can compile Bash for one architecture at a time in the source code directory. After you have installed Bash for one architecture, use &amp;lsquo;</source>
          <target state="translated">如果必须使用不支持 &lt;code&gt;VPATH&lt;/code&gt; 变量的 &lt;code&gt;make&lt;/code&gt; ，则可以在源代码目录中一次为一种体系结构编译Bash。为一种架构安装Bash后，请使用&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="fc3797f7197bba97fa8222f26600e2e48affc612" translate="yes" xml:space="preserve">
          <source>If you need to do unusual things to compile Bash, please try to figure out how &lt;code&gt;configure&lt;/code&gt; could check whether or not to do them, and mail diffs or instructions to &lt;a href=&quot;mailto:bash-maintainers@gnu.org&quot;&gt;bash-maintainers@gnu.org&lt;/a&gt; so they can be considered for the next release.</source>
          <target state="translated">如果您需要做一些不寻常的事情来编译Bash，请尝试弄清楚 &lt;code&gt;configure&lt;/code&gt; 如何检查它们，然后将差异或说明发送到&lt;a href=&quot;mailto:bash-maintainers@gnu.org&quot;&gt;bash-maintainers@gnu.org，&lt;/a&gt;以便在下一个发行版中考虑。</target>
        </trans-unit>
        <trans-unit id="83aedbaa45e9f84bfa1fcbbeea8869b139d5088a" translate="yes" xml:space="preserve">
          <source>If you need to protect special characters such as newlines in file names, use find&amp;rsquo;s</source>
          <target state="translated">如果您需要保护特殊字符（例如文件名中的换行符），请使用find的</target>
        </trans-unit>
        <trans-unit id="12078bff72a7a0d0b47a2085949d8643b6a58c14" translate="yes" xml:space="preserve">
          <source>If you publish or distribute Opaque copies of the Document numbering more than 100, you must either include a machine-readable Transparent copy along with each Opaque copy, or state in or with each Opaque copy a computer-network location from which the general network-using public has access to download using public-standard network protocols a complete Transparent copy of the Document, free of added material. If you use the latter option, you must take reasonably prudent steps, when you begin distribution of Opaque copies in quantity, to ensure that this Transparent copy will remain thus accessible at the stated location until at least one year after the last time you distribute an Opaque copy (directly or through your agents or retailers) of that edition to the public.</source>
          <target state="translated">如果贵方出版或分发数量超过 100 份的本文件不透明副本,贵方必须在每份不透明副本中附上一份机器可读的透明副本,或者在每份不透明副本中或与每份不透明副本一起说明一个计算机网络位置,以便使用公共标准网络协议的公众可以从该位置下载一份完整的、不含任何附加材料的本文件透明副本。如果您使用后一种选择,您必须在开始大量分发不透明副本时采取合理审慎的措施,以确保在您最后一次向公众分发该版本的不透明副本(直接或通过您的代理或零售商)后至少一年内,仍可在所述地点获得该透明副本。</target>
        </trans-unit>
        <trans-unit id="259996a1220d546fc0064aba80c2b9da3313fa17" translate="yes" xml:space="preserve">
          <source>If you publish printed copies (or copies in media that commonly have printed covers) of the Document, numbering more than 100, and the Document&amp;rsquo;s license notice requires Cover Texts, you must enclose the copies in covers that carry, clearly and legibly, all these Cover Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on the back cover. Both covers must also clearly and legibly identify you as the publisher of these copies. The front cover must present the full title with all words of the title equally prominent and visible. You may add other material on the covers in addition. Copying with changes limited to the covers, as long as they preserve the title of the Document and satisfy these conditions, can be treated as verbatim copying in other respects.</source>
          <target state="translated">如果您发布文档的印刷副本（或通常具有印刷封面的介质中的副本），且编号超过100，并且文档的许可通知要求包含封面文本，则必须将这些副本随附在清晰可见的所有文档中封面文字：封面上的封面文字和封底上的封面文字。两种封面都必须清楚，清楚地标识您是这些副本的发行者。封面必须显示完整的标题，标题中的所有单词均应同样醒目和可见。您还可以在封面上添加其他材料。只要封面保留了文档标题并满足这些条件，则仅对封面进行更改即可在其他方面被视为逐字复印。</target>
        </trans-unit>
        <trans-unit id="6730d9b385f08c2cf6be9d05fb9bf6a7f7ae50d2" translate="yes" xml:space="preserve">
          <source>If you want to build Bash in a directory separate from the source directory &amp;ndash; to build for multiple architectures, for example &amp;ndash; just use the full path to the configure script. The following commands will build bash in a directory under</source>
          <target state="translated">如果要在与源目录不同的目录中构建Bash（例如，要针对多种体系结构进行构建），只需使用configure脚本的完整路径即可。以下命令将在以下目录中构建bash</target>
        </trans-unit>
        <trans-unit id="186f9f4f8bfcc1b6dbd98b1ddbc6918a65ae8d2e" translate="yes" xml:space="preserve">
          <source>If you want to match a character that&amp;rsquo;s special to the regular expression grammar, it has to be quoted to remove its special meaning. This means that in the pattern &amp;lsquo;</source>
          <target state="translated">如果要匹配正则表达式语法的特殊字符，则必须将其引号以删除其特殊含义。这意味着在模式&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="ab7363fb921e78e0a7556aab74f823ea4f39495e" translate="yes" xml:space="preserve">
          <source>If you want to set default values for &lt;code&gt;configure&lt;/code&gt; scripts to share, you can create a site shell script called &lt;code&gt;config.site&lt;/code&gt; that gives default values for variables like &lt;code&gt;CC&lt;/code&gt;, &lt;code&gt;cache_file&lt;/code&gt;, and &lt;code&gt;prefix&lt;/code&gt;. &lt;code&gt;configure&lt;/code&gt; looks for</source>
          <target state="translated">如果要为共享的 &lt;code&gt;configure&lt;/code&gt; 脚本设置默认值，则可以创建一个名为 &lt;code&gt;config.site&lt;/code&gt; 的站点外壳脚本，该脚本为 &lt;code&gt;CC&lt;/code&gt; ， &lt;code&gt;cache_file&lt;/code&gt; 和 &lt;code&gt;prefix&lt;/code&gt; 等变量提供默认值。 &lt;code&gt;configure&lt;/code&gt; 寻找</target>
        </trans-unit>
        <trans-unit id="b740d12c534adf1e78083987d4914f9a914ca40f" translate="yes" xml:space="preserve">
          <source>If your document contains nontrivial examples of program code, we recommend releasing these examples in parallel under your choice of free software license, such as the GNU General Public License, to permit their use in free software.</source>
          <target state="translated">如果您的文档中包含程序代码的非平凡的例子,我们建议在您选择的自由软件许可证(如GNU通用公共许可证)下同时发布这些例子,以允许它们在自由软件中使用。</target>
        </trans-unit>
        <trans-unit id="ad807d7010690da3b367c158778dc87f36daca62" translate="yes" xml:space="preserve">
          <source>Importing function definitions from the shell environment at startup.</source>
          <target state="translated">在启动时从shell环境中导入函数定义。</target>
        </trans-unit>
        <trans-unit id="9f4dad87424a3695bd53086e7d686b6f1e56601c" translate="yes" xml:space="preserve">
          <source>In a non-interactive shell, or an interactive shell in which the &lt;code&gt;interactive_comments&lt;/code&gt; option to the &lt;code&gt;shopt&lt;/code&gt; builtin is enabled (see &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;), a word beginning with &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bfc53bff471d024384b520ef7eb191e4bb09ec3" translate="yes" xml:space="preserve">
          <source>In a non-interactive shell, or an interactive shell in which the &lt;code&gt;interactive_comments&lt;/code&gt; option to the &lt;code&gt;shopt&lt;/code&gt; builtin is enabled (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;), a word beginning with &amp;lsquo;</source>
          <target state="translated">在非交互式shell中，或在启用了 &lt;code&gt;shopt&lt;/code&gt; 内置&lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;控件&lt;/a&gt;的 &lt;code&gt;interactive_comments&lt;/code&gt; 选项的交互式shell中（请参见The Shopt Builtin），单词开头为'</target>
        </trans-unit>
        <trans-unit id="02b2d522d02685102f94404bf4b0d657a9e31c49" translate="yes" xml:space="preserve">
          <source>In a questionable attempt at security, the SVR4.2 shell, when invoked without the</source>
          <target state="translated">在一个有问题的安全尝试中,SVR4.2的shell在调用时,如果不使用</target>
        </trans-unit>
        <trans-unit id="acd7ffcb27a06d2f814691335100fc8359783d24" translate="yes" xml:space="preserve">
          <source>In addition to command names, readline allows keys to be bound to a string that is inserted when the key is pressed (a &lt;var&gt;macro&lt;/var&gt;).</source>
          <target state="translated">除了命令名称之外，readline还允许将键绑定到在按下键时插入的字符串（ &lt;var&gt;macro&lt;/var&gt; ）。</target>
        </trans-unit>
        <trans-unit id="93c833fa4e72f9033538088f0593e7bc9024232e" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;small&gt;GNU&lt;/small&gt; Emacs style escape sequences, a second set of backslash escapes is available:</source>
          <target state="translated">除了&lt;small&gt;GNU&lt;/small&gt; Emacs样式转义序列之外，还有第二组反斜杠转义：</target>
        </trans-unit>
        <trans-unit id="0c5729dabfd311f795dc7288f0cc0f352dd8db0d" translate="yes" xml:space="preserve">
          <source>In addition to the creation of a subshell, there is a subtle difference between these two constructs due to historical reasons. The braces are &lt;code&gt;reserved words&lt;/code&gt;, so they must be separated from the &lt;var&gt;list&lt;/var&gt; by &lt;code&gt;blank&lt;/code&gt;s or other shell metacharacters. The parentheses are &lt;code&gt;operators&lt;/code&gt;, and are recognized as separate tokens by the shell even if they are not separated from the &lt;var&gt;list&lt;/var&gt; by whitespace.</source>
          <target state="translated">除了创建子外壳之外，由于历史原因，这两种构造之间还存在细微的差异。花括号是 &lt;code&gt;reserved words&lt;/code&gt; ，因此必须用 &lt;code&gt;blank&lt;/code&gt; s或其他shell元字符将它们与 &lt;var&gt;list&lt;/var&gt; 分隔开。括号是 &lt;code&gt;operators&lt;/code&gt; ，即使它们没有用空格与 &lt;var&gt;list&lt;/var&gt; 分开，它们也被外壳识别为单独的标记。</target>
        </trans-unit>
        <trans-unit id="34b6f8f8465ee7c5a4f8d82537717a4ac6df20c5" translate="yes" xml:space="preserve">
          <source>In addition, several keys have their own names. Specifically, &lt;code&gt;DEL&lt;/code&gt;, &lt;code&gt;ESC&lt;/code&gt;, &lt;code&gt;LFD&lt;/code&gt;, &lt;code&gt;SPC&lt;/code&gt;, &lt;code&gt;RET&lt;/code&gt;, and &lt;code&gt;TAB&lt;/code&gt; all stand for themselves when seen in this text, or in an init file (see &lt;a href=&quot;readline-init-file&quot;&gt;Readline Init File&lt;/a&gt;). If your keyboard lacks a &lt;code&gt;LFD&lt;/code&gt; key, typing &lt;code&gt;C-j&lt;/code&gt; will produce the desired character. The &lt;code&gt;RET&lt;/code&gt; key may be labeled &lt;code&gt;Return&lt;/code&gt; or &lt;code&gt;Enter&lt;/code&gt; on some keyboards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e6fbde158335869362b0e379cc922ff5d488fa" translate="yes" xml:space="preserve">
          <source>In addition, several keys have their own names. Specifically, &lt;code&gt;DEL&lt;/code&gt;, &lt;code&gt;ESC&lt;/code&gt;, &lt;code&gt;LFD&lt;/code&gt;, &lt;code&gt;SPC&lt;/code&gt;, &lt;code&gt;RET&lt;/code&gt;, and &lt;code&gt;TAB&lt;/code&gt; all stand for themselves when seen in this text, or in an init file (see &lt;a href=&quot;readline-init-file#Readline-Init-File&quot;&gt;Readline Init File&lt;/a&gt;). If your keyboard lacks a &lt;code&gt;LFD&lt;/code&gt; key, typing &lt;code&gt;C-j&lt;/code&gt; will produce the desired character. The &lt;code&gt;RET&lt;/code&gt; key may be labeled &lt;code&gt;Return&lt;/code&gt; or &lt;code&gt;Enter&lt;/code&gt; on some keyboards.</source>
          <target state="translated">此外，几个键都有自己的名称。具体而言，在本文或init文件中（请参阅&lt;a href=&quot;readline-init-file#Readline-Init-File&quot;&gt;Readline Init File&lt;/a&gt;）， &lt;code&gt;DEL&lt;/code&gt; ， &lt;code&gt;ESC&lt;/code&gt; ， &lt;code&gt;LFD&lt;/code&gt; ， &lt;code&gt;SPC&lt;/code&gt; ， &lt;code&gt;RET&lt;/code&gt; 和 &lt;code&gt;TAB&lt;/code&gt; 都代表自己。如果键盘缺少 &lt;code&gt;LFD&lt;/code&gt; 键，则键入 &lt;code&gt;C-j&lt;/code&gt; 将产生所需的字符。在某些键盘上， &lt;code&gt;RET&lt;/code&gt; 键可能标记为 &lt;code&gt;Return&lt;/code&gt; 或 &lt;code&gt;Enter&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8b3be7d7807edefafd0966948d79f5327f1f6852" translate="yes" xml:space="preserve">
          <source>In addition, the &lt;code&gt;C-x C-r&lt;/code&gt; command re-reads this init file, thus incorporating any changes that you might have made to it.</source>
          <target state="translated">此外， &lt;code&gt;C-x C-r&lt;/code&gt; 命令重新读取该初始化文件，从而合并了您可能对其所做的任何更改。</target>
        </trans-unit>
        <trans-unit id="b95dacbd396bc51b6d40d63fdc5a99b5e400172e" translate="yes" xml:space="preserve">
          <source>In addition, the following table describes the special characters which can appear in the prompt variables &lt;code&gt;PS0&lt;/code&gt;, &lt;code&gt;PS1&lt;/code&gt;, &lt;code&gt;PS2&lt;/code&gt;, and &lt;code&gt;PS4&lt;/code&gt;:</source>
          <target state="translated">此外，下表描述了可能出现在提示变量 &lt;code&gt;PS0&lt;/code&gt; ， &lt;code&gt;PS1&lt;/code&gt; ， &lt;code&gt;PS2&lt;/code&gt; 和 &lt;code&gt;PS4&lt;/code&gt; 中的特殊字符：</target>
        </trans-unit>
        <trans-unit id="8a023a1f8d31694303fdf19bf34bafab5048fffb" translate="yes" xml:space="preserve">
          <source>In an interactive shell, the value is interpreted as the number of seconds to wait for a line of input after issuing the primary prompt. Bash terminates after waiting for that number of seconds if a complete line of input does not arrive.</source>
          <target state="translated">在交互式shell中,这个值被解释为发出主提示后等待一行输入的秒数。如果一行完整的输入没有到达,Bash会在等待该秒数后终止。</target>
        </trans-unit>
        <trans-unit id="fdba83de9a185c5d0269395ce15a272761068752" translate="yes" xml:space="preserve">
          <source>In each of the cases below, &lt;var&gt;word&lt;/var&gt; is subject to tilde expansion, parameter expansion, command substitution, and arithmetic expansion.</source>
          <target state="translated">在下面的每种情况下， &lt;var&gt;word&lt;/var&gt; 都会发生波浪号扩展，参数扩展，命令替换和算术扩展。</target>
        </trans-unit>
        <trans-unit id="776f3e487a8a68ec6f7020b12d39b7d82631cfe9" translate="yes" xml:space="preserve">
          <source>In most cases a list of commands in a compound command&amp;rsquo;s description may be separated from the rest of the command by one or more newlines, and may be followed by a newline in place of a semicolon.</source>
          <target state="translated">在大多数情况下，复合命令描述中的命令列表可以用一个或多个换行符与其余命令分开，并且可以在换行符后用分号代替。</target>
        </trans-unit>
        <trans-unit id="52fc1c75570831d9162a7f56b56ea8e34f6226d0" translate="yes" xml:space="preserve">
          <source>In order to enter characters into the line, simply type them. The typed character appears where the cursor was, and then the cursor moves one space to the right. If you mistype a character, you can use your erase character to back up and delete the mistyped character.</source>
          <target state="translated">为了在行中输入字符,只需输入字符。输入的字符出现在光标的位置,然后光标向右移动一个空格。如果您打错了一个字符,您可以使用擦除字符来备份和删除打错的字符。</target>
        </trans-unit>
        <trans-unit id="dfca208f0049bbff96fae9f0ee95f08078198a8c" translate="yes" xml:space="preserve">
          <source>In order to switch interactively between &lt;code&gt;emacs&lt;/code&gt; and &lt;code&gt;vi&lt;/code&gt; editing modes, use the &amp;lsquo;</source>
          <target state="translated">为了在 &lt;code&gt;emacs&lt;/code&gt; 和 &lt;code&gt;vi&lt;/code&gt; 编辑模式之间进行交互切换，请使用&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="51978bf956b8794338f8c4cf3a067f0a540b285c" translate="yes" xml:space="preserve">
          <source>In overwrite mode, characters bound to &lt;code&gt;self-insert&lt;/code&gt; replace the text at point rather than pushing the text to the right. Characters bound to &lt;code&gt;backward-delete-char&lt;/code&gt; replace the character before point with a space.</source>
          <target state="translated">在覆盖模式下，绑定到 &lt;code&gt;self-insert&lt;/code&gt; 字符会替换该点处的文本，而不是将文本推到右侧。绑定到 &lt;code&gt;backward-delete-char&lt;/code&gt; 的字符用空格替换点之前的字符。</target>
        </trans-unit>
        <trans-unit id="acc6f4c088642eb7f8737b1a54d1b8d8a8f44c63" translate="yes" xml:space="preserve">
          <source>In the above example,</source>
          <target state="translated">在上面的例子中。</target>
        </trans-unit>
        <trans-unit id="bac5d9d9ab0e7bd59c460dae63e4ac5fbb143079" translate="yes" xml:space="preserve">
          <source>In the absence of any traps, &lt;code&gt;SIGINT&lt;/code&gt; is caught and handled (see &lt;a href=&quot;signals&quot;&gt;Signals&lt;/a&gt;). &lt;code&gt;SIGINT&lt;/code&gt; will interrupt some shell builtins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf9823b3792f5beb81f16b1fe9e504eb5e9f0f2" translate="yes" xml:space="preserve">
          <source>In the absence of any traps, &lt;code&gt;SIGINT&lt;/code&gt; is caught and handled (see &lt;a href=&quot;signals#Signals&quot;&gt;Signals&lt;/a&gt;). &lt;code&gt;SIGINT&lt;/code&gt; will interrupt some shell builtins.</source>
          <target state="translated">在没有任何陷阱的情况下，将捕获并处理 &lt;code&gt;SIGINT&lt;/code&gt; （请参见&lt;a href=&quot;signals#Signals&quot;&gt;Signals&lt;/a&gt;）。 &lt;code&gt;SIGINT&lt;/code&gt; 将中断一些shell内置函数。</target>
        </trans-unit>
        <trans-unit id="0ff179cda6c42652b9a8e65203289f37a58522a2" translate="yes" xml:space="preserve">
          <source>In the absence of any traps, Bash ignores &lt;code&gt;SIGTERM&lt;/code&gt; (see &lt;a href=&quot;signals&quot;&gt;Signals&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105bd8bc0640d79759a2a90ca4a1c85a26636658" translate="yes" xml:space="preserve">
          <source>In the absence of any traps, Bash ignores &lt;code&gt;SIGTERM&lt;/code&gt; (see &lt;a href=&quot;signals#Signals&quot;&gt;Signals&lt;/a&gt;).</source>
          <target state="translated">在没有任何陷阱的情况下，Bash会忽略 &lt;code&gt;SIGTERM&lt;/code&gt; （请参阅&lt;a href=&quot;signals#Signals&quot;&gt;Signals&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5cda68fb93baabdacea520a528ee305f4e985aca" translate="yes" xml:space="preserve">
          <source>In the combination, you must combine any sections Entitled &amp;ldquo;History&amp;rdquo; in the various original documents, forming one section Entitled &amp;ldquo;History&amp;rdquo;; likewise combine any sections Entitled &amp;ldquo;Acknowledgements&amp;rdquo;, and any sections Entitled &amp;ldquo;Dedications&amp;rdquo;. You must delete all sections Entitled &amp;ldquo;Endorsements.&amp;rdquo;</source>
          <target state="translated">在组合中，必须将各种原始文档中标题为&amp;ldquo;历史记录&amp;rdquo;的所有部分组合在一起，组成一个标题为&amp;ldquo;历史记录&amp;rdquo;的部分；同样，将标题为&amp;ldquo;致谢&amp;rdquo;的所有部分以及标题为&amp;ldquo;奉献&amp;rdquo;的任何部分组合在一起。您必须删除所有标题为&amp;ldquo;背书&amp;rdquo;的部分。</target>
        </trans-unit>
        <trans-unit id="c2af3ea919e832df7ffbb2938d7915e57ef2e713" translate="yes" xml:space="preserve">
          <source>In the context where an assignment statement is assigning a value to a shell variable or array index (see &lt;a href=&quot;arrays&quot;&gt;Arrays&lt;/a&gt;), the &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6258da724ae30a7bd686127a1de1b959fc5247b9" translate="yes" xml:space="preserve">
          <source>In the context where an assignment statement is assigning a value to a shell variable or array index (see &lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;), the &amp;lsquo;</source>
          <target state="translated">在赋值语句为外壳变量或数组索引赋值的情况下（请参见&lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;），&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="47ba31c55cf17ab9234a30dc016e247f26027b3f" translate="yes" xml:space="preserve">
          <source>In the example above,</source>
          <target state="translated">在上面的例子中。</target>
        </trans-unit>
        <trans-unit id="6054c41c039baa67beb6220428bddb9dcb8f61e2" translate="yes" xml:space="preserve">
          <source>In the following descriptions, &lt;em&gt;point&lt;/em&gt; refers to the current cursor position, and &lt;em&gt;mark&lt;/em&gt; refers to a cursor position saved by the &lt;code&gt;set-mark&lt;/code&gt; command. The text between the point and mark is referred to as the &lt;em&gt;region&lt;/em&gt;.</source>
          <target state="translated">在以下描述中，&lt;em&gt;point&lt;/em&gt;是指当前光标位置，&lt;em&gt;mark&lt;/em&gt;是由 &lt;code&gt;set-mark&lt;/code&gt; 命令保存的光标位置。点和标记之间的文本称为&lt;em&gt;区域&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f9e9924a14a939202e524f8d54c079b3361a4f8f" translate="yes" xml:space="preserve">
          <source>In the following descriptions, if the file descriptor number is omitted, and the first character of the redirection operator is &amp;lsquo;</source>
          <target state="translated">在以下描述中，如果省略文件描述符号，并且重定向运算符的第一个字符为'</target>
        </trans-unit>
        <trans-unit id="936662e2ff52735b6e8de158c20eb900ce6d2796" translate="yes" xml:space="preserve">
          <source>In the second form, &lt;var&gt;command&lt;/var&gt; is re-executed after each instance of &lt;var&gt;pat&lt;/var&gt; in the selected command is replaced by &lt;var&gt;rep&lt;/var&gt;. &lt;var&gt;command&lt;/var&gt; is intepreted the same as &lt;var&gt;first&lt;/var&gt; above.</source>
          <target state="translated">在第二种形式中， &lt;var&gt;command&lt;/var&gt; 被的每个实例之后重新执行 &lt;var&gt;pat&lt;/var&gt; 在所选择的命令被替换为 &lt;var&gt;rep&lt;/var&gt; 。 &lt;var&gt;command&lt;/var&gt; 被intepreted相同 &lt;var&gt;first&lt;/var&gt; 上方。</target>
        </trans-unit>
        <trans-unit id="2da742632e9cfb1edf5424fa510064aae52c1a8b" translate="yes" xml:space="preserve">
          <source>In the second form, &lt;var&gt;command&lt;/var&gt; is re-executed after each instance of &lt;var&gt;pat&lt;/var&gt; in the selected command is replaced by &lt;var&gt;rep&lt;/var&gt;. &lt;var&gt;command&lt;/var&gt; is interpreted the same as &lt;var&gt;first&lt;/var&gt; above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1bde7d08c3f6c8a1f33f6b7bc1df4cd64921cd" translate="yes" xml:space="preserve">
          <source>Include &lt;code&gt;csh&lt;/code&gt;-like brace expansion ( &lt;code&gt;b{a,b}c&lt;/code&gt; &amp;rarr; &lt;code&gt;bac bbc&lt;/code&gt; ). See &lt;a href=&quot;brace-expansion&quot;&gt;Brace Expansion&lt;/a&gt;, for a complete description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c9c6f987e14cc39c69cce18793290b45b8c829" translate="yes" xml:space="preserve">
          <source>Include &lt;code&gt;csh&lt;/code&gt;-like brace expansion ( &lt;code&gt;b{a,b}c&lt;/code&gt; &amp;rarr; &lt;code&gt;bac bbc&lt;/code&gt; ). See &lt;a href=&quot;brace-expansion#Brace-Expansion&quot;&gt;Brace Expansion&lt;/a&gt;, for a complete description.</source>
          <target state="translated">包括 &lt;code&gt;b{a,b}c&lt;/code&gt; &lt;code&gt;csh&lt;/code&gt; 的括号扩展（b {a，b} c &amp;rarr; &lt;code&gt;bac bbc&lt;/code&gt; ）。有关完整说明，请参见&lt;a href=&quot;brace-expansion#Brace-Expansion&quot;&gt;Brace Expansion&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f37101c8da0de163cd9ec8919b0c95749d4e46c5" translate="yes" xml:space="preserve">
          <source>Include an unaltered copy of this License.</source>
          <target state="translated">包括一份未经修改的本许可证的副本。</target>
        </trans-unit>
        <trans-unit id="5509e8ea8d1488c1fb508b1ef556960bda351b49" translate="yes" xml:space="preserve">
          <source>Include command history and the &lt;code&gt;fc&lt;/code&gt; and &lt;code&gt;history&lt;/code&gt; builtin commands (see &lt;a href=&quot;bash-history-facilities&quot;&gt;Bash History Facilities&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d48dc0547638595849dd7293cce4c2c8803508e" translate="yes" xml:space="preserve">
          <source>Include command history and the &lt;code&gt;fc&lt;/code&gt; and &lt;code&gt;history&lt;/code&gt; builtin commands (see &lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash History Facilities&lt;/a&gt;).</source>
          <target state="translated">包括命令历史记录以及 &lt;code&gt;fc&lt;/code&gt; 和 &lt;code&gt;history&lt;/code&gt; 内置命令（请参阅&lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash历史记录设施&lt;/a&gt;）。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
